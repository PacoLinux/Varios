VERSION E05

PL6.E3A0      #001=GDB$BLD_BRKPNT File=GDB$BRKPNTS.:E05TSI                       TUE 07/29/97 21:22 Page:1    
        1        1        /*M* GDB$BRKPNTS - Front-end DELTA routines for program control    */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*P*      NAME: GDB$BRKPNTS
        8        8                  PURPOSE: The routines necessary to provide execution
        9        9                           control of programs running in an FEP including
       10       10                           the monitor are found here.  Those routines are:
       11       11                              GDB$BLD_BRKPNT - Builds breakpoints requested
       12       12                                               by the HOST.
       13       13                              GDB$SET_BRKPNT - Arms the breakpoints.
       14       14                              GDB$RESET_BRKPNT - Disarms the breakpoints.
       15       15                              GDB$GET_CONTROL - XDELTA's way of getting
       16       16                                                control of a FEP.
       17       17                              GDB$TRAP_HND - Interface to the monitor trap
       18       18                                             handler.
       19       19                              GDB$KILL_BRKPNT - Deletes breakpoint entries
       20       20                              GDB$KILL_ALLBRKPNTS - Deletes all breakpoint
       21       21                                                    entries.
       22       22        */
       23       23        %EJECT;
PL6.E3A0      #001=GDB$BLD_BRKPNT File=GDB$BRKPNTS.:E05TSI                       TUE 07/29/97 21:22 Page:2    
       24       24        GDB$BLD_BRKPNT: PROC(SIZE,BUFFER);
       25       25
       26       26        /**/
       27       27        /* Includes */
       28       28        /**/
       29       29
       30       30        %INCLUDE LCP_6;
       31      221        %INCLUDE GD_STATIC_DATA; /* DELTAs static data */
       32      694        %INCLUDE GD$MACS_M; /* Debugger macros */
       33      732        %INCLUDE DD$DITEM; /* Data Descriptor templates */
       12+     835             %LIST;
       13+     836    1        DCL SDD$ PTR;
       14+     837    1        DCL ZITEM$ PTR;
       15+     838    1        DCL SDD_L6$ PTR;
       16+     839    1        DCL ZITEM_L6$ PTR;
       34     1413        %INCLUDE GH_HARDWARE_M;
       35     1511        %INCLUDE GM_VIRTUAL_E;
       36     1721        %INCLUDE G_HJIT_M;
       37     1866        %INCLUDE KH$CHN;
       38     1988        %INCLUDE GD_BRKPNT_M;
       39     2043
       40     2044        /**/
       41     2045        /* Parameters */
       42     2046        /**/
       43     2047
       44     2048    1   DCL BUFFER CHAR(SIZE) ALIGNED; /* Host <-> FEP message buffer */
       45     2049        %GD$MSG(STCLASS="REDEF BUFFER");
       46     2205    1   DCL SIZE UBIN;
       47     2206
       48     2207        /**/
       49     2208        /* Entries */
       50     2209        /**/
       51     2210
       52     2211    1   DCL GDI$SEND_ERROR_RESPONSE ENTRY(3); /* Sends responses to the host */
       53     2212    1   DCL GDU$SETUP_WINDOW ENTRY(1) ALTRET; /* Validates addresses */
       54     2213
       55     2214        /**/
PL6.E3A0      #001=GDB$BLD_BRKPNT File=GDB$BRKPNTS.:E05TSI                       TUE 07/29/97 21:22 Page:3    
       56     2215        /* Local Variables */
       57     2216        /**/
       58     2217
       59     2218    1   DCL BRK$ PTR;
       60     2219    1   DCL TEMPSZ UBIN;
       61     2220    1   DCL TEMP$ PTR;
       62     2221    1   DCL TEMP1$ PTR;
       63     2222    1   DCL I UBIN;
       64     2223    1   DCL P$ PTR;
       65     2224    1   DCL P REDEF P$ UBIN(32);
       66     2225    1   DCL DD_WSZ UBIN;
       67     2226
       68     2227        /**/
       69     2228        /* Based Variables */
       70     2229        /**/
       71     2230
       72     2231        %GD_BRKPNT(FPTN=BRKPNT,STCLASS=BASED,LAST=";");
       73     2248        %GD_BRKPNT(FPTN=IFBRKPNT,STCLASS=BASED,LAST=",");
       74     2265        %GD_IFCOND(FPTN=IFCOND,LVL=2);
       75     2289        %GD_DATA_DESC(FPTN=DD,STCLASS=BASED);
       76     2296        %VLP_XBREAK(STCLASS=BASED);
       77     2315        %GH_VLD(STCLASS=BASED);
       78     2329        %G$MHJIT(STCLASS="BASED(G$MHJIT$)");
       79     9203        %G$SEGDESC(FPTN=G$SEGDESC,STCLASS=BASED);
       80     9225
       81     9226        /**/
       82     9227        /* Symrefs */
       83     9228        /**/
       84     9229
       85     9230    1   DCL G$MHJIT$ PTR SYMREF;
       86     9231
       87     9232        %EJECT;
PL6.E3A0      #001=GDB$BLD_BRKPNT File=GDB$BRKPNTS.:E05TSI                       TUE 07/29/97 21:22 Page:4    
       88     9233        /* Check to see if this in an ONCALLS breakpoint, which we handle
       89     9234        a little differently.  It lives after where DYNSP$ points to.  When we
       90     9235        add or subtract a normal breakpoint, the ONCALLS breakpoint is moved
       91     9236        appropriately. */
       92     9237
       93     9238    1         IF GD$MSG.FNC ~= %GD#RQSONCALLS THEN GOTO ONCALLS_DONE;
       94     9239        /* It's an ONCALLS */
       95     9240    2         IF GD$MSG.BRKRQS.IFSPEC THEN DO;
       96     9241    2            TEMPSZ=SIZEW(IFBRKPNT)+GD$MSG.BRKRQS.DATA_DESC_SIZE;
       97     9242    2            END;
       98     9243    2         ELSE DO;
       99     9244    2            TEMPSZ=SIZEW(BRKPNT);
      100     9245    2            END;
      101     9246        /* Find out if there is room */
      102     9247    1         TEMP$ = ADDR(GD_DATA.MYSPACE(%GD#DYNSZ-1));
      103     9248    1         TEMP1$ = PINCRW(GD_DATA.GD.DYNSP$,TEMPSZ);
      104     9249    1         IF POFFW(TEMP1$,TEMP$)>=0 THEN GOTO SENDNOSPACERSP;
      105     9250    1         GD_DATA.GD.ONCALLS_BRK$ = GD_DATA.GD.DYNSP$;
      106     9251    1         P$=GD_DATA.GD.DYNSP$;
      107     9252    1         IF GD$MSG.BRKRQS.IFSPEC THEN
      108     9253    1            P$->IFBRKPNT='0'B;
      109     9254    1         ELSE
      110     9255    1            P$->BRKPNT='0'B;
      111     9256    1         P$->BRKPNT.BRKNUM = GD$MSG.BRKRQS.BRKNUM;
      112     9257    1         P$->BRKPNT.BYPASSCOUNT = GD$MSG.BRKRQS.BYPASSCOUNT;
      113     9258    1         P$->BRKPNT.CUR_BYPASSCOUNT = GD$MSG.BRKRQS.BYPASSCOUNT;
      114     9259    2         IF GD$MSG.BRKRQS.IFSPEC THEN DO;
      115     9260    2            P$->IFBRKPNT='0'B;
      116     9261    2            P$->IFBRKPNT.IFCOND.COND=GD$MSG.BRKRQS.COND;
      117     9262    2            P$->IFBRKPNT.FLAGS.IFCOND='1'B;
      118     9263    2            P$->IFBRKPNT.IFCOND.CTYPE=GD$MSG.BRKRQS.CTYPE;
      119     9264    2            P$->IFBRKPNT.IFCOND.CONS$TANT=GD$MSG.BRKRQS.IF$CONST;
      120     9265    2            P$->IFBRKPNT.IFCOND.DD_SIZE=GD$MSG.BRKRQS.DATA_DESC_SIZE;
      121     9266    2            P$->IFBRKPNT.IFCOND.DD$ = PINCRW(GD_DATA.GD.DYNSP$,SIZEW(IFBRKPNT));
      122     9267    3            DO I=0 TO P$->IFBRKPNT.IFCOND.DD_SIZE-1;
      123     9268    3               P$->IFBRKPNT.IFCOND.DD$->DD(I)=GD$MSG.BRKRQS.IF_DATA_DESC(I);
      124     9269    3               END;
PL6.E3A0      #001=GDB$BLD_BRKPNT File=GDB$BRKPNTS.:E05TSI                       TUE 07/29/97 21:22 Page:5    
      125     9270    2            END;
      126     9271        /* We have finished the ONCALLS breakpoint - go tell the host and leave. */
      127     9272    1         CALL GDI$SEND_ERROR_RESPONSE(SIZE,BUFFER,%GD#RSPACK);
      128     9273    1         RETURN;
      129     9274    1   ONCALLS_DONE:;
      130     9275        /* Validate the address of the requested breakpoint */
      131     9276
      132     9277    1           P$ = GD$MSG.BRKRQS.ADR$;
      133     9278    1           CALL GDU$SETUP_WINDOW(P$);
      134     9279    1           IF ADDR(GD_DATA.GD.VLD)->GH_VLD.STATUS ~= %G_VLD_STATUS_ALL# OR
      135     9280    1              GD_DATA.GD.USE_REAL OR
      136     9281    1              (P / 65536 = %GM_WINDOW1# AND
      137     9282    1               GD_DATA.GD.MODE = %GD#MODE_XDELTA AND
      138     9283    2               %ASDT_WINDOW# = G$MHJIT.ASDT_MON.DB_PROC) THEN DO;
      139     9284    2              CALL GDI$SEND_ERROR_RESPONSE(SIZE,BUFFER,%GD#RSPBADADR);
      140     9285    2              RETURN;
      141     9286    2              END;
      142     9287
      143     9288        /* Verify that the breakpoint number is valid */
      144     9289
      145     9290    1           BRK$ = ADDR(GD_DATA.MYSPACE(0));
      146     9291    1           IF GD_DATA.GD.DYNSP$ = ADDR(GD_DATA.MYSPACE(0)) THEN;
      147     9292    2           ELSE DO WHILE BRK$ ~= ADDR(NIL);
      148     9293    2              IF BRK$->BRKPNT.BRKNUM = GD$MSG.BRKRQS.BRKNUM THEN GOTO SENDSMXRSP;
      149     9294    2              ELSE BRK$ = BRK$->BRKPNT.FLINK$;
      150     9295    2              END;
      151     9296
      152     9297    2           IF GD$MSG.BRKRQS.BRKNUM = 0 THEN DO;
      153     9298    2   SENDSMXRSP:
      154     9299    2              CALL GDI$SEND_ERROR_RESPONSE(SIZE,BUFFER,%GD#RSPSMX);
      155     9300    2              RETURN;
      156     9301    2              END;
      157     9302
      158     9303        /* Build an breakpoint entry in GD_DATA */
      159     9304
      160     9305        /* If this breakpoint has an if condition then get some space and set up the
      161     9306           conditional part. */
PL6.E3A0      #001=GDB$BLD_BRKPNT File=GDB$BRKPNTS.:E05TSI                       TUE 07/29/97 21:22 Page:6    
      162     9307
      163     9308    2           IF GD$MSG.BRKRQS.IFSPEC THEN DO;
      164     9309
      165     9310        /* Get the size of the data descriptors */
      166     9311
      167     9312    2              DD_WSZ = GD$MSG.BRKRQS.DATA_DESC_SIZE;
      168     9313
      169     9314        /* Set up a pointer to the current start of unallocated space. */
      170     9315
      171     9316    2              IF GD_DATA.GD.DYNSP$ = ADDR(GD_DATA.MYSPACE(0)) THEN;
      172     9317
      173     9318        /* This is the first breakpoint.  We don't need to check to see if there's
      174     9319           enough space. */
      175     9320
      176     9321    3              ELSE DO;
      177     9322
      178     9323        /* Make sure there's enough room for the breakpoint. */
      179     9324
      180     9325    3                 TEMPSZ = SIZEW(IFBRKPNT) + DD_WSZ;
      181     9326        /* If there is an ONCALLS breakpoint at the begining of the 'free'
      182     9327        space, then we have to take it's size into account. */
      183     9328    3                 IF GD_DATA.GD.ONCALLS_BRK$ ~= ADDR(NIL) THEN
      184     9329    3                    IF GD_DATA.GD.ONCALLS_BRK$->BRKPNT.FLAGS.IFCOND THEN
      185     9330    3                       TEMPSZ=TEMPSZ+SIZEW(IFBRKPNT)+GD_DATA.GD.ONCALLS_BRK$->IFBRKPNT.
              9330                                IFCOND.DD_SIZE;
      186     9331    3                    ELSE
      187     9332    3                       TEMPSZ=TEMPSZ+SIZEW(BRKPNT);
      188     9333    3                 TEMP$ = ADDR(GD_DATA.MYSPACE(%GD#DYNSZ-1));
      189     9334    3                 TEMP1$ = PINCRW(GD_DATA.GD.DYNSP$,TEMPSZ);
      190     9335    3                 IF POFFW(TEMP1$,TEMP$) < 0 THEN;
      191     9336
      192     9337        /* Do nothing. There's enough space for this break point */
      193     9338
      194     9339    4                 ELSE DO;
      195     9340
      196     9341        /* There's not enough room.  Give up on this breakpoint. */
      197     9342
PL6.E3A0      #001=GDB$BLD_BRKPNT File=GDB$BRKPNTS.:E05TSI                       TUE 07/29/97 21:22 Page:7    
      198     9343    4   SENDNOSPACERSP:
      199     9344    4                    CALL GDI$SEND_ERROR_RESPONSE(SIZE,BUFFER,%GD#RSPNOSPACE);
      200     9345    4                    RETURN;
      201     9346    4                    END;
      202     9347    3                 END /* If there are already some breakpoints around. */;
      203     9348
      204     9349        /* Before we initialize the area, we might have to move the ONCALLS
      205     9350        breakpoint out of the way. */
      206     9351    3               IF GD_DATA.GD.ONCALLS_BRK$ ~= ADDR(NIL) THEN DO;
      207     9352    3                  P$=GD_DATA.GD.ONCALLS_BRK$;
      208     9353    3                  TEMP1$=PINCRW(GD_DATA.GD.DYNSP$,SIZEW(IFBRKPNT)+DD_WSZ);
      209     9354    4                  IF P$->BRKPNT.FLAGS.IFCOND THEN DO;
      210     9355    4                     TEMP1$->IFBRKPNT = P$->IFBRKPNT;
      211     9356    4                     TEMP1$->IFBRKPNT.IFCOND.DD$=PINCRW(TEMP1$,SIZEW(IFBRKPNT));
      212     9357    5                     DO I=0 TO P$->IFBRKPNT.IFCOND.DD_SIZE-1;
      213     9358    5                        TEMP1$->IFBRKPNT.IFCOND.DD$->DD(I)=P$->IFBRKPNT.IFCOND.DD$->DD(
              9358                                 I);
      214     9359    5                        END;
      215     9360    4                     END;
      216     9361    3                  ELSE
      217     9362    3                     TEMP1$->BRKPNT = P$->BRKPNT;
      218     9363    3                  END;
      219     9364        /* Initialize the area */
      220     9365
      221     9366    2              GD_DATA.GD.DYNSP$->IFBRKPNT = '0'B;
      222     9367
      223     9368        /* Put in the conditional stuff. */
      224     9369
      225     9370    2              GD_DATA.GD.DYNSP$->IFBRKPNT.IFCOND.COND = GD$MSG.BRKRQS.COND;
      226     9371    2              GD_DATA.GD.DYNSP$->IFBRKPNT.FLAGS.IFCOND = '1'B;
      227     9372    2              GD_DATA.GD.DYNSP$->IFBRKPNT.IFCOND.CTYPE = GD$MSG.BRKRQS.CTYPE;
      228     9373    2              GD_DATA.GD.DYNSP$->IFBRKPNT.IFCOND.CONS$TANT =
      229     9374    2                 GD$MSG.BRKRQS.IF$CONST;
      230     9375    2              GD_DATA.GD.DYNSP$->IFBRKPNT.IFCOND.DD_SIZE =
      231     9376    2                 GD$MSG.BRKRQS.DATA_DESC_SIZE;
      232     9377    2              GD_DATA.GD.DYNSP$->IFBRKPNT.IFCOND.DD$ =
      233     9378    2                 PINCRW(GD_DATA.GD.DYNSP$,SIZEW(IFBRKPNT));
PL6.E3A0      #001=GDB$BLD_BRKPNT File=GDB$BRKPNTS.:E05TSI                       TUE 07/29/97 21:22 Page:8    
      234     9379    3              DO I = 0 TO DD_WSZ - 1;
      235     9380    3                 GD_DATA.GD.DYNSP$->IFBRKPNT.IFCOND.DD$->DD(I) =
      236     9381    3                    GD$MSG.BRKRQS.IF_DATA_DESC(I);
      237     9382    3                 END;
      238     9383    2              BRK$ = ADDR(GD_DATA.MYSPACE(0));
      239     9384    2              IF BRK$ = GD_DATA.GD.DYNSP$ THEN
      240     9385    2                 BRK$->BRKPNT.FLINK$ = ADDR(NIL);
      241     9386    3              ELSE DO;
      242     9387    4                 DO WHILE BRK$->BRKPNT.FLINK$ ~= ADDR(NIL);
      243     9388    4                    BRK$ = BRK$->BRKPNT.FLINK$;
      244     9389    4                    END;
      245     9390    3                 BRK$->BRKPNT.FLINK$ = GD_DATA.GD.DYNSP$;
      246     9391    3                 END;
      247     9392    2              END /* IF GD$MSG.BRKRQS.IFSPEC */;
      248     9393    2           ELSE DO;
      249     9394
      250     9395        /* This is a breakpoint without an attached IF.  Do we have enough room
      251     9396           for it? */
      252     9397
      253     9398    2              IF GD_DATA.GD.DYNSP$ = ADDR(GD_DATA.MYSPACE(0)) THEN;
      254     9399
      255     9400        /* Assume there's enough room. */
      256     9401
      257     9402    2              ELSE
      258     9403
      259     9404        /* Make sure there's enough room. */
      260     9405
      261     9406    2                 IF POFFW(PINCRW(GD_DATA.GD.DYNSP$,SIZEW(BRKPNT)),
      262     9407    2                          ADDR(GD_DATA.MYSPACE(%GD#DYNSZ-1))) <= 0 THEN;
      263     9408    2                 ELSE GOTO SENDNOSPACERSP;
      264     9409
      265     9410        /* Fill in the FLINK in the previous breakpoint. */
      266     9411
      267     9412    2              BRK$ = ADDR(GD_DATA.MYSPACE(0));
      268     9413    2              IF BRK$ = GD_DATA.GD.DYNSP$ THEN
      269     9414    2                 BRK$->BRKPNT.FLINK$ = ADDR(NIL);
      270     9415    3              ELSE DO;
PL6.E3A0      #001=GDB$BLD_BRKPNT File=GDB$BRKPNTS.:E05TSI                       TUE 07/29/97 21:22 Page:9    
      271     9416    4                 DO WHILE BRK$->BRKPNT.FLINK$ ~= ADDR(NIL);
      272     9417    4                    BRK$ = BRK$->BRKPNT.FLINK$;
      273     9418    4                    END;
      274     9419    3                 BRK$->BRKPNT.FLINK$ = GD_DATA.GD.DYNSP$;
      275     9420    3                 END;
      276     9421    2              GD_DATA.GD.DYNSP$->BRKPNT = '0'B;
      277     9422    2              END /* It's an unconditional breakpoint */;
      278     9423
      279     9424        /* Update DYNSP$ */
      280     9425
      281     9426    1           BRK$ = GD_DATA.GD.DYNSP$;
      282     9427    1           IF GD$MSG.BRKRQS.IFSPEC THEN
      283     9428    1              GD_DATA.GD.DYNSP$ =
      284     9429    1                 PINCRW(GD_DATA.GD.DYNSP$->IFBRKPNT.IFCOND.DD$,DD_WSZ);
      285     9430    1           ELSE GD_DATA.GD.DYNSP$ = PINCRW(GD_DATA.GD.DYNSP$,SIZEW(BRKPNT));
      286     9431
      287     9432        /* Set up the rest of the stuff in the breakpoint table */
      288     9433
      289     9434    1           BRK$->BRKPNT.BRKNUM = GD$MSG.BRKRQS.BRKNUM;
      290     9435    1           BRK$->BRKPNT.FLAGS.INTERPRETIVE = GD$MSG.SUBFB.INTERPRETIVE;
      291     9436    1           BRK$->BRKPNT.ADR$ = GD$MSG.BRKRQS.ADR$;
      292     9437    1           BRK$->BRKPNT.FLAGS.ACTIVE = %G_ENABLE#;
      293     9438    1           P$ = GD$MSG.BRKRQS.ADR$;
      294     9439    1           IF GD_DATA.GD.MODE = %GD#MODE_XDELTA AND (P < %GM_ISR1_BASE OR
      295     9440    1              GD_DATA.GD.ASDT_OFFSET ~= 0) THEN
      296     9441    1              BRK$->BRKPNT.USER# = 0;
      297     9442    1           ELSE
      298     9443    1              BRK$->BRKPNT.USER# = GD_DATA.GD.USERNO;
      299     9444    2           IF GD$MSG.FNC = %GD#RQSONCALLBRKPNT THEN DO;
      300     9445    2              BRK$->BRKPNT.FLAGS.ONCALL = '1'B;
      301     9446    2              GD_DATA.GD.ONCALL$ = P$;
      302     9447    2              GD_DATA.GD.ONCALL = '1'B;
      303     9448    2              END;
      304     9449    1           BRK$->BRKPNT.BYPASSCOUNT = GD$MSG.BRKRQS.BYPASSCOUNT;
      305     9450    1           BRK$->BRKPNT.CUR_BYPASSCOUNT = GD$MSG.BRKRQS.BYPASSCOUNT;
      306     9451    1           CALL GDI$SEND_ERROR_RESPONSE(SIZE,BUFFER,%GD#RSPACK);
      307     9452        /**/
PL6.E3A0      #001=GDB$BLD_BRKPNT File=GDB$BRKPNTS.:E05TSI                       TUE 07/29/97 21:22 Page:10   
      308     9453    1           RETURN;
      309     9454        /**/
      310     9455    1   END GDB$BLD_BRKPNT;
      311     9456        %EOD;

PL6.E3A0      #001=GDB$BLD_BRKPNT File=GDB$BRKPNTS.:E05TSI                       TUE 07/29/97 21:22 Page:11   
--  Include file information  --

   GD_BRKPNT_M.:E05TOU  is referenced.
   KH$CHN.:E05TOU  is referenced.
   G_HJIT_M.:E05TOU  is referenced.
   GM_VIRTUAL_E.:E05TOU  is referenced.
   GH_HARDWARE_M.:E05TOU  is referenced.
   DD_SRTN_C.:E05TOU  is referenced.
   DD_ACODE_C.:E05TOU  is referenced.
   DD_ICODE_C.:E05TOU  is referenced.
   DD$DITEM.:E05TOU  cannot be made into a system file and is referenced.
   GD$MACS_M.:E05TOU  is referenced.
   GD$MSG_M.:E05TOU  is referenced.
   GDA_EQUS_E.:E05TOU  is referenced.
   GD_EQUS_E.:E05TOU  is referenced.
   GD_DATA_M.:E05TOU  is referenced.
   GD_STATIC_DATA.:E05TOU  cannot be made into a system file and is referenced.
   LCP_6.:E05TOU  cannot be made into a system file and is referenced.
   G_LCP6_E.:E05TOU  was found in the system file and is referenced.
   GT_LCP6_M.:E05TOU  was found in the system file and is referenced.
   KI_CP6.:E05TOU  was found in the system file and is referenced.
   GF_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GM_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GU_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GJ_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GH_LCP6_M.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure GDB$BLD_BRKPNT.

   Procedure GDB$BLD_BRKPNT requires 819 words for executable code.
   Procedure GDB$BLD_BRKPNT requires 34 words of local(AUTO) storage.

PL6.E3A0      #001=GDB$BLD_BRKPNT File=GDB$BRKPNTS.:E05TSI                       TUE 07/29/97 21:22 Page:12   

 Object Unit name= GDB$BLD_BRKPNT                             File name= GDB$BRKPNTS.:E05TOU
 UTS= JUL 29 '97 21:22:02.88 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_LCP6_SYSTEM                               Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size HexSiz  Section name
    0   Proc  even  none   819    333  GDB$BLD_BRKPNT

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect HexLoc Primary Altret sequence   type   Parms  Name
     0      0   yes            yes      Std        2  GDB$BLD_BRKPNT

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       3 GDI$SEND_ERROR_RESPONSE
 yes     yes           Std       1 GDU$SETUP_WINDOW
                       nStd      0 X6A_AUTO_2
                       nStd      0 X6A_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     GD$DELTA_DATA$                        G$MHJIT$                         r    G$ROS$
PL6.E3A0      #001=GDB$BLD_BRKPNT File=GDB$BRKPNTS.:E05TSI                       TUE 07/29/97 21:22 Page:13   


        1        1        /*M* GDB$BRKPNTS - Front-end DELTA routines for program control    */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*P*      NAME: GDB$BRKPNTS
        8        8                  PURPOSE: The routines necessary to provide execution
        9        9                           control of programs running in an FEP including
       10       10                           the monitor are found here.  Those routines are:
       11       11                              GDB$BLD_BRKPNT - Builds breakpoints requested
       12       12                                               by the HOST.
       13       13                              GDB$SET_BRKPNT - Arms the breakpoints.
       14       14                              GDB$RESET_BRKPNT - Disarms the breakpoints.
       15       15                              GDB$GET_CONTROL - XDELTA's way of getting
       16       16                                                control of a FEP.
       17       17                              GDB$TRAP_HND - Interface to the monitor trap
       18       18                                             handler.
       19       19                              GDB$KILL_BRKPNT - Deletes breakpoint entries
       20       20                              GDB$KILL_ALLBRKPNTS - Deletes all breakpoint
       21       21                                                    entries.
       22       22        */
       23       23        %EJECT;
PL6.E3A0      #001=GDB$BLD_BRKPNT File=GDB$BRKPNTS.:E05TSI                       TUE 07/29/97 21:22 Page:14   
       24       24        GDB$BLD_BRKPNT: PROC(SIZE,BUFFER);

     24   0 000000  D380 0000 0000  xent GDB$BLD_BRKPNT  LNJ,B5   X6A_AUTO_2
          0 000003       0022 0002                       DC       34,2

       25       25
       26       26        /**/
       27       27        /* Includes */
       28       28        /**/
       29       29
       30       30        %INCLUDE LCP_6;
       31      221        %INCLUDE GD_STATIC_DATA; /* DELTAs static data */
       32      694        %INCLUDE GD$MACS_M; /* Debugger macros */
       33      732        %INCLUDE DD$DITEM; /* Data Descriptor templates */
       12+     835             %LIST;
       13+     836    1        DCL SDD$ PTR;
       14+     837    1        DCL ZITEM$ PTR;
       15+     838    1        DCL SDD_L6$ PTR;
       16+     839    1        DCL ZITEM_L6$ PTR;
       34     1413        %INCLUDE GH_HARDWARE_M;
       35     1511        %INCLUDE GM_VIRTUAL_E;
       36     1721        %INCLUDE G_HJIT_M;
       37     1866        %INCLUDE KH$CHN;
       38     1988        %INCLUDE GD_BRKPNT_M;
       39     2043
       40     2044        /**/
       41     2045        /* Parameters */
       42     2046        /**/
       43     2047
       44     2048    1   DCL BUFFER CHAR(SIZE) ALIGNED; /* Host <-> FEP message buffer */
       45     2049        %GD$MSG(STCLASS="REDEF BUFFER");
       46     2205    1   DCL SIZE UBIN;
       47     2206
       48     2207        /**/
       49     2208        /* Entries */
       50     2209        /**/
       51     2210
PL6.E3A0      #001=GDB$BLD_BRKPNT File=GDB$BRKPNTS.:E05TSI                       TUE 07/29/97 21:22 Page:15   
       52     2211    1   DCL GDI$SEND_ERROR_RESPONSE ENTRY(3); /* Sends responses to the host */
       53     2212    1   DCL GDU$SETUP_WINDOW ENTRY(1) ALTRET; /* Validates addresses */
       54     2213
       55     2214        /**/
       56     2215        /* Local Variables */
       57     2216        /**/
       58     2217
       59     2218    1   DCL BRK$ PTR;
       60     2219    1   DCL TEMPSZ UBIN;
       61     2220    1   DCL TEMP$ PTR;
       62     2221    1   DCL TEMP1$ PTR;
       63     2222    1   DCL I UBIN;
       64     2223    1   DCL P$ PTR;
       65     2224    1   DCL P REDEF P$ UBIN(32);
       66     2225    1   DCL DD_WSZ UBIN;
       67     2226
       68     2227        /**/
       69     2228        /* Based Variables */
       70     2229        /**/
       71     2230
       72     2231        %GD_BRKPNT(FPTN=BRKPNT,STCLASS=BASED,LAST=";");
       73     2248        %GD_BRKPNT(FPTN=IFBRKPNT,STCLASS=BASED,LAST=",");
       74     2265        %GD_IFCOND(FPTN=IFCOND,LVL=2);
       75     2289        %GD_DATA_DESC(FPTN=DD,STCLASS=BASED);
       76     2296        %VLP_XBREAK(STCLASS=BASED);
       77     2315        %GH_VLD(STCLASS=BASED);
       78     2329        %G$MHJIT(STCLASS="BASED(G$MHJIT$)");
       79     9203        %G$SEGDESC(FPTN=G$SEGDESC,STCLASS=BASED);
       80     9225
       81     9226        /**/
       82     9227        /* Symrefs */
       83     9228        /**/
       84     9229
       85     9230    1   DCL G$MHJIT$ PTR SYMREF;
       86     9231
       87     9232        %EJECT;
PL6.E3A0      #001=GDB$BLD_BRKPNT File=GDB$BRKPNTS.:E05TSI                       TUE 07/29/97 21:22 Page:16   
       88     9233        /* Check to see if this in an ONCALLS breakpoint, which we handle
       89     9234        a little differently.  It lives after where DYNSP$ points to.  When we
       90     9235        add or subtract a normal breakpoint, the ONCALLS breakpoint is moved
       91     9236        appropriately. */
       92     9237
       93     9238    1         IF GD$MSG.FNC ~= %GD#RQSONCALLS THEN GOTO ONCALLS_DONE;

   9238   0 000005  ECC7 0006                            LDB,B6   @BUFFER,AUTO
          0 000007  E286                                 LLH,R6   ,B6
          0 000008  6D1C                                 CMV,R6   28
          0 000009  0981 00BF                            BNE      s:9273,PREL

       94     9239        /* It's an ONCALLS */
       95     9240    2         IF GD$MSG.BRKRQS.IFSPEC THEN DO;

   9240   0 00000B  82C6 0001                            LB,'0080'X        1,B6
   9240   0 00000D       0080
          0 00000E  0581 0008                            BBF      s:9244,PREL

       96     9241    2            TEMPSZ=SIZEW(IFBRKPNT)+GD$MSG.BRKRQS.DATA_DESC_SIZE;

   9241   0 000010  D846 0026                            LDR,R5   38,B6
          0 000012  5E30                                 ADV,R5   48
          0 000013  DF47 0012                            STR,R5   TEMPSZ,AUTO

       97     9242    2            END;

   9242   0 000015  0F81 0004                            B        s:9247,PREL

       98     9243    2         ELSE DO;

       99     9244    2            TEMPSZ=SIZEW(BRKPNT);

   9244   0 000017  5C0B                                 LDV,R5   11
          0 000018  DF47 0012                            STR,R5   TEMPSZ,AUTO

      100     9245    2            END;
PL6.E3A0      #001=GDB$BLD_BRKPNT File=GDB$BRKPNTS.:E05TSI                       TUE 07/29/97 21:22 Page:17   

      101     9246        /* Find out if there is room */
      102     9247    1         TEMP$ = ADDR(GD_DATA.MYSPACE(%GD#DYNSZ-1));

   9247   0 00001A  DC80 0000 0000  xsym                 LDB,B5   GD$DELTA_DATA$
          0 00001D  CBC5 0413                            LAB,B4   1043,B5
          0 00001F  CFC7 0013                            STB,B4   TEMP$,AUTO

      103     9248    1         TEMP1$ = PINCRW(GD_DATA.GD.DYNSP$,TEMPSZ);

   9248   0 000021  BCC5 0156                            LDB,B3   342,B5
          0 000023  BFC7 001C                            STB,B3   DD_WSZ+2,AUTO
          0 000025  F855                                 LDR,R7   R5
          0 000026  6C00                                 LDV,R6   0
          0 000027  8447 001C                            AID      DD_WSZ+2,AUTO
          0 000029  8D47 0015                            SDI      TEMP1$,AUTO

      104     9249    1         IF POFFW(TEMP1$,TEMP$)>=0 THEN GOTO SENDNOSPACERSP;

   9249   0 00002B  8CC7 0015                            LDI      TEMP1$,AUTO
          0 00002D  84C7 0013                            SID      TEMP$,AUTO
          0 00002F  84F0 0000 0000                       SID      0,IMO
          0 000032  6881 0166                            BGEZ,R6  s:9339,PREL

      105     9250    1         GD_DATA.GD.ONCALLS_BRK$ = GD_DATA.GD.DYNSP$;

   9250   0 000034  BFC5 0135                            STB,B3   309,B5

      106     9251    1         P$=GD_DATA.GD.DYNSP$;

   9251   0 000036  BFC7 0018                            STB,B3   P$,AUTO

      107     9252    1         IF GD$MSG.BRKRQS.IFSPEC THEN

   9252   0 000038  82C6 0001                            LB,'0080'X        1,B6
   9252   0 00003A       0080
          0 00003B  0581 000A                            BBF      s:9255,PREL
PL6.E3A0      #001=GDB$BLD_BRKPNT File=GDB$BRKPNTS.:E05TSI                       TUE 07/29/97 21:22 Page:18   

      108     9253    1            P$->IFBRKPNT='0'B;

   9253   0 00003D  5C60                                 LDV,R5   96
          0 00003E  0021                                 ALR      ;
          0 00003F       4178 0000                                ALPHANUM('0000'X,IMO,,1),;
          0 000041       4003 0000                                ALPHANUM(0,B3,,R5,FILL)
          0 000043  437F                                 CSYNC    s:9253+5,SPREL
          0 000044  0F81 0007                            B        s:9256,PREL

      109     9254    1         ELSE
      110     9255    1            P$->BRKPNT='0'B;

   9255   0 000046  5C16                                 LDV,R5   22
          0 000047  0021                                 ALR      ;
          0 000048       4178 0000                                ALPHANUM('0000'X,IMO,,1),;
          0 00004A       4003 0000                                ALPHANUM(0,B3,,R5,FILL)

      111     9256    1         P$->BRKPNT.BRKNUM = GD$MSG.BRKRQS.BRKNUM;

   9256   0 00004C  437F                                 CSYNC    s:9255+5,SPREL
          0 00004D  DCC7 0018                            LDB,B5   P$,AUTO
          0 00004F  E2C6 0001                            LLH,R6   1,B6
          0 000051  EF45 0002                            STR,R6   2,B5

      112     9257    1         P$->BRKPNT.BYPASSCOUNT = GD$MSG.BRKRQS.BYPASSCOUNT;

   9257   0 000053  DCC7 0018                            LDB,B5   P$,AUTO
          0 000055  E846 0002                            LDR,R6   2,B6
          0 000057  EF45 0003                            STR,R6   3,B5

      113     9258    1         P$->BRKPNT.CUR_BYPASSCOUNT = GD$MSG.BRKRQS.BYPASSCOUNT;

   9258   0 000059  DCC7 0018                            LDB,B5   P$,AUTO
          0 00005B  E846 0002                            LDR,R6   2,B6
          0 00005D  EF45 0004                            STR,R6   4,B5

PL6.E3A0      #001=GDB$BLD_BRKPNT File=GDB$BRKPNTS.:E05TSI                       TUE 07/29/97 21:22 Page:19   
      114     9259    2         IF GD$MSG.BRKRQS.IFSPEC THEN DO;

   9259   0 00005F  82C6 0001                            LB,'0080'X        1,B6
   9259   0 000061       0080
          0 000062  0581 004F                            BBF      s:9272,PREL

      115     9260    2            P$->IFBRKPNT='0'B;

   9260   0 000064  DCC7 0018                            LDB,B5   P$,AUTO
          0 000066  5C60                                 LDV,R5   96
          0 000067  0021                                 ALR      ;
          0 000068       4178 0000                                ALPHANUM('0000'X,IMO,,1),;
          0 00006A       4005 0000                                ALPHANUM(0,B5,,R5,FILL)

      116     9261    2            P$->IFBRKPNT.IFCOND.COND=GD$MSG.BRKRQS.COND;

   9261   0 00006C  437F                                 CSYNC    s:9260+7,SPREL
          0 00006D  DCC7 0018                            LDB,B5   P$,AUTO
          0 00006F  E846 0005                            LDR,R6   5,B6
          0 000071  E570 0007                            AND,R6   7,IMO
          0 000073  EF45 000C                            STR,R6   12,B5

      117     9262    2            P$->IFBRKPNT.FLAGS.IFCOND='1'B;

   9262   0 000075  DCC7 0018                            LDB,B5   P$,AUTO
          0 000077  8945 000A                            LBT,'1000'X       10,B5
          0 000079       1000

      118     9263    2            P$->IFBRKPNT.IFCOND.CTYPE=GD$MSG.BRKRQS.CTYPE;

   9263   0 00007A  DCC7 0018                            LDB,B5   P$,AUTO
          0 00007C  E846 0005                            LDR,R6   5,B6
          0 00007E  6043                                 SOR,R6   3
          0 00007F  E570 001F                            AND,R6   31,IMO
          0 000081  EF45 000B                            STR,R6   11,B5

      119     9264    2            P$->IFBRKPNT.IFCOND.CONS$TANT=GD$MSG.BRKRQS.IF$CONST;
PL6.E3A0      #001=GDB$BLD_BRKPNT File=GDB$BRKPNTS.:E05TSI                       TUE 07/29/97 21:22 Page:20   

   9264   0 000083  AB86                                 LAB,B2   ,B6
          0 000084  2C0C                                 LDV,R2   12
          0 000085  6C40                                 LDV,R6   64
          0 000086  BCC7 0018                            LDB,B3   P$,AUTO
          0 000088  3C1A                                 LDV,R3   26
          0 000089  0008                                 MMM

      120     9265    2            P$->IFBRKPNT.IFCOND.DD_SIZE=GD$MSG.BRKRQS.DATA_DESC_SIZE;

   9265   0 00008A  DCC7 0018                            LDB,B5   P$,AUTO
          0 00008C  E842 0026                            LDR,R6   38,B2
          0 00008E  EF45 002D                            STR,R6   45,B5

      121     9266    2            P$->IFBRKPNT.IFCOND.DD$ = PINCRW(GD_DATA.GD.DYNSP$,SIZEW(IFBRKPNT));

   9266   0 000090  CC80 0000 0000  xsym                 LDB,B4   GD$DELTA_DATA$
          0 000093  BCC4 0156                            LDB,B3   342,B4
          0 000095  9BC3 0030                            LAB,B1   48,B3
          0 000097  9FC5 002E                            STB,B1   46,B5

      122     9267    3            DO I=0 TO P$->IFBRKPNT.IFCOND.DD_SIZE-1;

   9267   0 000099  8747 0017                            CL       I,AUTO
          0 00009B  0F81 000F                            B        s:9269+2,PREL

      123     9268    3               P$->IFBRKPNT.IFCOND.DD$->DD(I)=GD$MSG.BRKRQS.IF_DATA_DESC(I);

   9268   0 00009D  ECC7 0018                            LDB,B6   P$,AUTO
          0 00009F  DCC6 002E                            LDB,B5   46,B6
          0 0000A1  B847 0017                            LDR,R3   I,AUTO
          0 0000A3  CCC7 0006                            LDB,B4   @BUFFER,AUTO
          0 0000A5  A853                                 LDR,R2   R3
          0 0000A6  2E27                                 ADV,R2   39
          0 0000A7  E824                                 LDR,R6   ,B4,R2
          0 0000A8  EF35                                 STR,R6   ,B5,R3

PL6.E3A0      #001=GDB$BLD_BRKPNT File=GDB$BRKPNTS.:E05TSI                       TUE 07/29/97 21:22 Page:21   
      124     9269    3               END;

   9269   0 0000A9  8AC7 0017                            INC      I,AUTO
          0 0000AB  ECC7 0018                            LDB,B6   P$,AUTO
          0 0000AD  E847 0017                            LDR,R6   I,AUTO
          0 0000AF  E946 002D                            CMR,R6   45,B6
          0 0000B1  026C                                 BL       s:9268,SPREL

      125     9270    2            END;

      126     9271        /* We have finished the ONCALLS breakpoint - go tell the host and leave. */
      127     9272    1         CALL GDI$SEND_ERROR_RESPONSE(SIZE,BUFFER,%GD#RSPACK);

   9272   0 0000B2  EBF0 0023                            LAB,B6   35,IMO
          0 0000B4  EFC7 0020                            STB,B6   DD_WSZ+6,AUTO
          0 0000B6  DCC7 0006                            LDB,B5   @BUFFER,AUTO
          0 0000B8  DFC7 001E                            STB,B5   DD_WSZ+4,AUTO
          0 0000BA  CCC7 0004                            LDB,B4   @SIZE,AUTO
          0 0000BC  CFC7 001C                            STB,B4   DD_WSZ+2,AUTO
          0 0000BE  BBC7 001C                            LAB,B3   DD_WSZ+2,AUTO
          0 0000C0  CBF0 0300                            LAB,B4   768,IMO
          0 0000C2  E380 0000 0000  xent                 LNJ,B6   GDI$SEND_ERROR_RESPONSE
          0 0000C5       0001                            DC       s:9273,PREL

      128     9273    1         RETURN;

   9273   0 0000C6  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

   9273   0                              ONCALLS_DONE    null
      129     9274    1   ONCALLS_DONE:;
      130     9275        /* Validate the address of the requested breakpoint */
      131     9276
      132     9277    1           P$ = GD$MSG.BRKRQS.ADR$;

   9277   0 0000C9  DCC6 0003            ONCALLS_DONE    LDB,B5   3,B6
          0 0000CB  DFC7 0018                            STB,B5   P$,AUTO

PL6.E3A0      #001=GDB$BLD_BRKPNT File=GDB$BRKPNTS.:E05TSI                       TUE 07/29/97 21:22 Page:22   
      133     9278    1           CALL GDU$SETUP_WINDOW(P$);

   9278   0 0000CD  CBC7 0018                            LAB,B4   P$,AUTO
          0 0000CF  CFC7 001C                            STB,B4   DD_WSZ+2,AUTO
          0 0000D1  BBC7 001C                            LAB,B3   DD_WSZ+2,AUTO
          0 0000D3  CBF0 0100                            LAB,B4   256,IMO
          0 0000D5  E380 0000 0000  xent                 LNJ,B6   GDU$SETUP_WINDOW
          0 0000D8       0001                            DC       s:9279,PREL

      134     9279    1           IF ADDR(GD_DATA.GD.VLD)->GH_VLD.STATUS ~= %G_VLD_STATUS_ALL# OR

   9279   0 0000D9  EC80 0000 0000  xsym                 LDB,B6   GD$DELTA_DATA$
          0 0000DC  E846 0173                            LDR,R6   371,B6
          0 0000DE  6D02                                 CMV,R6   2
          0 0000DF  0981 0022                            BNE      s:9284,PREL
          0 0000E1  82C6 014C                            LB,'0008'X        332,B6
          0 0000E3       0008
          0 0000E4  0501 001D                            BBT      s:9284,PREL
          0 0000E6  8CC7 0018                            LDI      P$,AUTO
          0 0000E8  70D0                                 DOR,R7   16
          0 0000E9  84F0 0000 0018                       SID      24,IMO
          0 0000EC  6981 002C                            BNEZ,R6  s:9290,PREL
          0 0000EE  7981 002A                            BNEZ,R7  s:9290,PREL
          0 0000F0  E846 0130                            LDR,R6   304,B6
          0 0000F2  6D02                                 CMV,R6   2
          0 0000F3  0981 0025                            BNE      s:9290,PREL
          0 0000F5  DCC6 017A                            LDB,B5   378,B6
          0 0000F7  CC80 0000 0000  xsym                 LDB,B4   G$MHJIT$
          0 0000FA  5C04                                 LDV,R5   4
          0 0000FB  0022                                 ACM      ;
          0 0000FC       4405 0000                                ALPHANUM(0,B5,,4,FILL),;
          0 0000FE       4004 002E                                ALPHANUM(46,B4,,R5,FILL)
          0 000100  5301 0018                            CBNE     s:9290,PREL

      135     9280    1              GD_DATA.GD.USE_REAL OR
      136     9281    1              (P / 65536 = %GM_WINDOW1# AND
      137     9282    1               GD_DATA.GD.MODE = %GD#MODE_XDELTA AND
PL6.E3A0      #001=GDB$BLD_BRKPNT File=GDB$BRKPNTS.:E05TSI                       TUE 07/29/97 21:22 Page:23   
      138     9283    2               %ASDT_WINDOW# = G$MHJIT.ASDT_MON.DB_PROC) THEN DO;

      139     9284    2              CALL GDI$SEND_ERROR_RESPONSE(SIZE,BUFFER,%GD#RSPBADADR);

   9284   0 000102  DBF0 0037                            LAB,B5   55,IMO
          0 000104  DFC7 0020                            STB,B5   DD_WSZ+6,AUTO
          0 000106  CCC7 0006                            LDB,B4   @BUFFER,AUTO
          0 000108  CFC7 001E                            STB,B4   DD_WSZ+4,AUTO
          0 00010A  BCC7 0004                            LDB,B3   @SIZE,AUTO
          0 00010C  BFC7 001C                            STB,B3   DD_WSZ+2,AUTO
          0 00010E  BBC7 001C                            LAB,B3   DD_WSZ+2,AUTO
          0 000110  CBF0 0300                            LAB,B4   768,IMO
          0 000112  E380 0000 0000  xent                 LNJ,B6   GDI$SEND_ERROR_RESPONSE
          0 000115       0001                            DC       s:9285,PREL

      140     9285    2              RETURN;

   9285   0 000116  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

      141     9286    2              END;
      142     9287
      143     9288        /* Verify that the breakpoint number is valid */
      144     9289
      145     9290    1           BRK$ = ADDR(GD_DATA.MYSPACE(0));

   9290   0 000119  DBC6 01AE                            LAB,B5   430,B6
          0 00011B  DFC7 0010                            STB,B5   BRK$,AUTO

      146     9291    1           IF GD_DATA.GD.DYNSP$ = ADDR(GD_DATA.MYSPACE(0)) THEN;

   9291   0 00011D  CCC6 0156                            LDB,B4   342,B6
          0 00011F  BBC6 01AE                            LAB,B3   430,B6
          0 000121  BFC7 001C                            STB,B3   DD_WSZ+2,AUTO
          0 000123  CDC7 001C                            CMB,B4   DD_WSZ+2,AUTO
          0 000125  0901 0013                            BE       s:9297,PREL

      147     9292    2           ELSE DO WHILE BRK$ ~= ADDR(NIL);
PL6.E3A0      #001=GDB$BLD_BRKPNT File=GDB$BRKPNTS.:E05TSI                       TUE 07/29/97 21:22 Page:24   

   9292   0 000127  0F81 000E                            B        s:9295,PREL

      148     9293    2              IF BRK$->BRKPNT.BRKNUM = GD$MSG.BRKRQS.BRKNUM THEN GOTO SENDSMXRSP;

   9293   0 000129  ECC7 0010                            LDB,B6   BRK$,AUTO
          0 00012B  DCC7 0006                            LDB,B5   @BUFFER,AUTO
          0 00012D  E2C5 0001                            LLH,R6   1,B5
          0 00012F  E946 0002                            CMR,R6   2,B6
          0 000131  0901 000D                            BE       s:9299,PREL

      149     9294    2              ELSE BRK$ = BRK$->BRKPNT.FLINK$;

   9294   0 000133  CC86                                 LDB,B4   ,B6
          0 000134  CFC7 0010                            STB,B4   BRK$,AUTO

      150     9295    2              END;

   9295   0 000136  8DC7 0010                            CMN      BRK$,AUTO
          0 000138  09F1                                 BNE      s:9293,SPREL

      151     9296
      152     9297    2           IF GD$MSG.BRKRQS.BRKNUM = 0 THEN DO;

   9297   0 000139  ECC7 0006                            LDB,B6   @BUFFER,AUTO
          0 00013B  E2C6 0001                            LLH,R6   1,B6
          0 00013D  6981 0018                            BNEZ,R6  s:9308,PREL

      153     9298    2   SENDSMXRSP:
      154     9299    2              CALL GDI$SEND_ERROR_RESPONSE(SIZE,BUFFER,%GD#RSPSMX);

   9299   0 00013F  EBF0 0032            SENDSMXRSP      LAB,B6   50,IMO
          0 000141  EFC7 0020                            STB,B6   DD_WSZ+6,AUTO
          0 000143  DCC7 0006                            LDB,B5   @BUFFER,AUTO
          0 000145  DFC7 001E                            STB,B5   DD_WSZ+4,AUTO
          0 000147  CCC7 0004                            LDB,B4   @SIZE,AUTO
          0 000149  CFC7 001C                            STB,B4   DD_WSZ+2,AUTO
PL6.E3A0      #001=GDB$BLD_BRKPNT File=GDB$BRKPNTS.:E05TSI                       TUE 07/29/97 21:22 Page:25   
          0 00014B  BBC7 001C                            LAB,B3   DD_WSZ+2,AUTO
          0 00014D  CBF0 0300                            LAB,B4   768,IMO
          0 00014F  E380 0000 0000  xent                 LNJ,B6   GDI$SEND_ERROR_RESPONSE
          0 000152       0001                            DC       s:9300,PREL

      155     9300    2              RETURN;

   9300   0 000153  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

      156     9301    2              END;
      157     9302
      158     9303        /* Build an breakpoint entry in GD_DATA */
      159     9304
      160     9305        /* If this breakpoint has an if condition then get some space and set up the
      161     9306           conditional part. */
      162     9307
      163     9308    2           IF GD$MSG.BRKRQS.IFSPEC THEN DO;

   9308   0 000156  82C6 0001                            LB,'0080'X        1,B6
   9308   0 000158       0080
          0 000159  0581 0118                            BBF      s:9398,PREL

      164     9309
      165     9310        /* Get the size of the data descriptors */
      166     9311
      167     9312    2              DD_WSZ = GD$MSG.BRKRQS.DATA_DESC_SIZE;

   9312   0 00015B  D846 0026                            LDR,R5   38,B6
          0 00015D  DF47 001A                            STR,R5   DD_WSZ,AUTO

      168     9313
      169     9314        /* Set up a pointer to the current start of unallocated space. */
      170     9315
      171     9316    2              IF GD_DATA.GD.DYNSP$ = ADDR(GD_DATA.MYSPACE(0)) THEN;

   9316   0 00015F  DC80 0000 0000  xsym                 LDB,B5   GD$DELTA_DATA$
          0 000162  CCC5 0156                            LDB,B4   342,B5
PL6.E3A0      #001=GDB$BLD_BRKPNT File=GDB$BRKPNTS.:E05TSI                       TUE 07/29/97 21:22 Page:26   
          0 000164  BBC5 01AE                            LAB,B3   430,B5
          0 000166  BFC7 001C                            STB,B3   DD_WSZ+2,AUTO
          0 000168  CDC7 001C                            CMB,B4   DD_WSZ+2,AUTO
          0 00016A  0901 0045                            BE       s:9351,PREL

      172     9317
      173     9318        /* This is the first breakpoint.  We don't need to check to see if there's
      174     9319           enough space. */
      175     9320
      176     9321    3              ELSE DO;

      177     9322
      178     9323        /* Make sure there's enough room for the breakpoint. */
      179     9324
      180     9325    3                 TEMPSZ = SIZEW(IFBRKPNT) + DD_WSZ;

   9325   0 00016C  5E30                                 ADV,R5   48
          0 00016D  DF47 0012                            STR,R5   TEMPSZ,AUTO

      181     9326        /* If there is an ONCALLS breakpoint at the begining of the 'free'
      182     9327        space, then we have to take it's size into account. */
      183     9328    3                 IF GD_DATA.GD.ONCALLS_BRK$ ~= ADDR(NIL) THEN

   9328   0 00016F  8DC5 0135                            CMN      309,B5
          0 000171  0901 0012                            BE       s:9333,PREL

      184     9329    3                    IF GD_DATA.GD.ONCALLS_BRK$->BRKPNT.FLAGS.IFCOND THEN

   9329   0 000173  ACC5 0135                            LDB,B2   309,B5
          0 000175  82C2 000A                            LB,'1000'X        10,B2
          0 000177       1000
          0 000178  0581 0008                            BBF      s:9332,PREL

      185     9330    3                      TEMPSZ=TEMPSZ+SIZEW(IFBRKPNT)+GD_DATA.GD.ONCALLS_BRK$->IFBRKPNT.
              9330                                IFCOND.DD_SIZE;

   9330   0 00017A  DA42 002D                            ADD,R5   45,B2
PL6.E3A0      #001=GDB$BLD_BRKPNT File=GDB$BRKPNTS.:E05TSI                       TUE 07/29/97 21:22 Page:27   
          0 00017C  5E30                                 ADV,R5   48
          0 00017D  DF47 0012                            STR,R5   TEMPSZ,AUTO
          0 00017F  0F81 0004                            B        s:9333,PREL

      186     9331    3                    ELSE
      187     9332    3                       TEMPSZ=TEMPSZ+SIZEW(BRKPNT);

   9332   0 000181  5E0B                                 ADV,R5   11
          0 000182  DF47 0012                            STR,R5   TEMPSZ,AUTO

      188     9333    3                 TEMP$ = ADDR(GD_DATA.MYSPACE(%GD#DYNSZ-1));

   9333   0 000184  ABC5 0413                            LAB,B2   1043,B5
          0 000186  AFC7 0013                            STB,B2   TEMP$,AUTO

      189     9334    3                 TEMP1$ = PINCRW(GD_DATA.GD.DYNSP$,TEMPSZ);

   9334   0 000188  CFC7 001C                            STB,B4   DD_WSZ+2,AUTO
          0 00018A  F855                                 LDR,R7   R5
          0 00018B  6C00                                 LDV,R6   0
          0 00018C  8447 001C                            AID      DD_WSZ+2,AUTO
          0 00018E  8D47 0015                            SDI      TEMP1$,AUTO

      190     9335    3                 IF POFFW(TEMP1$,TEMP$) < 0 THEN;

   9335   0 000190  8CC7 0015                            LDI      TEMP1$,AUTO
          0 000192  84C7 0013                            SID      TEMP$,AUTO
          0 000194  84F0 0000 0000                       SID      0,IMO
          0 000197  6801 0018                            BLZ,R6   s:9351,PREL

      191     9336
      192     9337        /* Do nothing. There's enough space for this break point */
      193     9338
      194     9339    4                 ELSE DO;

      195     9340
      196     9341        /* There's not enough room.  Give up on this breakpoint. */
PL6.E3A0      #001=GDB$BLD_BRKPNT File=GDB$BRKPNTS.:E05TSI                       TUE 07/29/97 21:22 Page:28   
      197     9342
      198     9343    4   SENDNOSPACERSP:
      199     9344    4                    CALL GDI$SEND_ERROR_RESPONSE(SIZE,BUFFER,%GD#RSPNOSPACE);

   9344   0 000199  EBF0 003C            SENDNOSPACERSP  LAB,B6   60,IMO
          0 00019B  EFC7 0020                            STB,B6   DD_WSZ+6,AUTO
          0 00019D  DCC7 0006                            LDB,B5   @BUFFER,AUTO
          0 00019F  DFC7 001E                            STB,B5   DD_WSZ+4,AUTO
          0 0001A1  CCC7 0004                            LDB,B4   @SIZE,AUTO
          0 0001A3  CFC7 001C                            STB,B4   DD_WSZ+2,AUTO
          0 0001A5  BBC7 001C                            LAB,B3   DD_WSZ+2,AUTO
          0 0001A7  CBF0 0300                            LAB,B4   768,IMO
          0 0001A9  E380 0000 0000  xent                 LNJ,B6   GDI$SEND_ERROR_RESPONSE
          0 0001AC       0001                            DC       s:9345,PREL

      200     9345    4                    RETURN;

   9345   0 0001AD  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

      201     9346    4                    END;
      202     9347    3                 END /* If there are already some breakpoints around. */;
      203     9348
      204     9349        /* Before we initialize the area, we might have to move the ONCALLS
      205     9350        breakpoint out of the way. */
      206     9351    3               IF GD_DATA.GD.ONCALLS_BRK$ ~= ADDR(NIL) THEN DO;

   9351   0 0001B0  8DC5 0135                            CMN      309,B5
          0 0001B2  0901 0045                            BE       s:9366,PREL

      207     9352    3                  P$=GD_DATA.GD.ONCALLS_BRK$;

   9352   0 0001B4  BCC5 0135                            LDB,B3   309,B5
          0 0001B6  BFC7 0018                            STB,B3   P$,AUTO

      208     9353    3                  TEMP1$=PINCRW(GD_DATA.GD.DYNSP$,SIZEW(IFBRKPNT)+DD_WSZ);

   9353   0 0001B8  CFC7 001C                            STB,B4   DD_WSZ+2,AUTO
PL6.E3A0      #001=GDB$BLD_BRKPNT File=GDB$BRKPNTS.:E05TSI                       TUE 07/29/97 21:22 Page:29   
          0 0001BA  F847 001A                            LDR,R7   DD_WSZ,AUTO
          0 0001BC  6C00                                 LDV,R6   0
          0 0001BD  8447 001C                            AID      DD_WSZ+2,AUTO
          0 0001BF  8470 0000 0030                       AID      48,IMO
          0 0001C2  8D47 0015                            SDI      TEMP1$,AUTO

      209     9354    4                  IF P$->BRKPNT.FLAGS.IFCOND THEN DO;

   9354   0 0001C4  82C3 000A                            LB,'1000'X        10,B3
   9354   0 0001C6       1000
          0 0001C7  0581 0029                            BBF      s:9362,PREL

      210     9355    4                     TEMP1$->IFBRKPNT = P$->IFBRKPNT;

   9355   0 0001C9  AB83                                 LAB,B2   ,B3
          0 0001CA  2C00                                 LDV,R2   0
          0 0001CB  6C60                                 LDV,R6   96
          0 0001CC  BCC7 0015                            LDB,B3   TEMP1$,AUTO
          0 0001CE  3C00                                 LDV,R3   0
          0 0001CF  0008                                 MMM

      211     9356    4                     TEMP1$->IFBRKPNT.IFCOND.DD$=PINCRW(TEMP1$,SIZEW(IFBRKPNT));

   9356   0 0001D0  DCC7 0015                            LDB,B5   TEMP1$,AUTO
          0 0001D2  CBC5 0030                            LAB,B4   48,B5
          0 0001D4  CFC5 002E                            STB,B4   46,B5

      212     9357    5                     DO I=0 TO P$->IFBRKPNT.IFCOND.DD_SIZE-1;

   9357   0 0001D6  8747 0017                            CL       I,AUTO
          0 0001D8  0F81 000F                            B        s:9359+2,PREL

      213     9358    5                       TEMP1$->IFBRKPNT.IFCOND.DD$->DD(I)=P$->IFBRKPNT.IFCOND.DD$->DD(
              9358                                 I);

   9358   0 0001DA  ECC7 0015                            LDB,B6   TEMP1$,AUTO
          0 0001DC  DCC6 002E                            LDB,B5   46,B6
PL6.E3A0      #001=GDB$BLD_BRKPNT File=GDB$BRKPNTS.:E05TSI                       TUE 07/29/97 21:22 Page:30   
          0 0001DE  CCC7 0018                            LDB,B4   P$,AUTO
          0 0001E0  BCC4 002E                            LDB,B3   46,B4
          0 0001E2  B847 0017                            LDR,R3   I,AUTO
          0 0001E4  E833                                 LDR,R6   ,B3,R3
          0 0001E5  EF35                                 STR,R6   ,B5,R3

      214     9359    5                        END;

   9359   0 0001E6  8AC7 0017                            INC      I,AUTO
          0 0001E8  ECC7 0018                            LDB,B6   P$,AUTO
          0 0001EA  E847 0017                            LDR,R6   I,AUTO
          0 0001EC  E946 002D                            CMR,R6   45,B6
          0 0001EE  026C                                 BL       s:9358,SPREL

      215     9360    4                     END;

   9360   0 0001EF  0F81 0008                            B        s:9366,PREL

      216     9361    3                  ELSE
      217     9362    3                     TEMP1$->BRKPNT = P$->BRKPNT;

   9362   0 0001F1  AB83                                 LAB,B2   ,B3
          0 0001F2  2C00                                 LDV,R2   0
          0 0001F3  6C16                                 LDV,R6   22
          0 0001F4  BCC7 0015                            LDB,B3   TEMP1$,AUTO
          0 0001F6  3C00                                 LDV,R3   0
          0 0001F7  0008                                 MMM

      218     9363    3                  END;

      219     9364        /* Initialize the area */
      220     9365
      221     9366    2              GD_DATA.GD.DYNSP$->IFBRKPNT = '0'B;

   9366   0 0001F8  EC80 0000 0000  xsym                 LDB,B6   GD$DELTA_DATA$
          0 0001FB  DCC6 0156                            LDB,B5   342,B6
          0 0001FD  5C60                                 LDV,R5   96
PL6.E3A0      #001=GDB$BLD_BRKPNT File=GDB$BRKPNTS.:E05TSI                       TUE 07/29/97 21:22 Page:31   
          0 0001FE  0021                                 ALR      ;
          0 0001FF       4178 0000                                ALPHANUM('0000'X,IMO,,1),;
          0 000201       4005 0000                                ALPHANUM(0,B5,,R5,FILL)

      222     9367
      223     9368        /* Put in the conditional stuff. */
      224     9369
      225     9370    2              GD_DATA.GD.DYNSP$->IFBRKPNT.IFCOND.COND = GD$MSG.BRKRQS.COND;

   9370   0 000203  437F                                 CSYNC    s:9366+10,SPREL
          0 000204  EC80 0000 0000  xsym                 LDB,B6   GD$DELTA_DATA$
          0 000207  DCC6 0156                            LDB,B5   342,B6
          0 000209  CCC7 0006                            LDB,B4   @BUFFER,AUTO
          0 00020B  E844 0005                            LDR,R6   5,B4
          0 00020D  E570 0007                            AND,R6   7,IMO
          0 00020F  EF45 000C                            STR,R6   12,B5

      226     9371    2              GD_DATA.GD.DYNSP$->IFBRKPNT.FLAGS.IFCOND = '1'B;

   9371   0 000211  DCC6 0156                            LDB,B5   342,B6
          0 000213  8945 000A                            LBT,'1000'X       10,B5
          0 000215       1000

      227     9372    2              GD_DATA.GD.DYNSP$->IFBRKPNT.IFCOND.CTYPE = GD$MSG.BRKRQS.CTYPE;

   9372   0 000216  DCC6 0156                            LDB,B5   342,B6
          0 000218  E844 0005                            LDR,R6   5,B4
          0 00021A  6043                                 SOR,R6   3
          0 00021B  E570 001F                            AND,R6   31,IMO
          0 00021D  EF45 000B                            STR,R6   11,B5

      228     9373    2              GD_DATA.GD.DYNSP$->IFBRKPNT.IFCOND.CONS$TANT =

   9373   0 00021F  DCC6 0156                            LDB,B5   342,B6
          0 000221  AB84                                 LAB,B2   ,B4
          0 000222  2C0C                                 LDV,R2   12
          0 000223  6C40                                 LDV,R6   64
PL6.E3A0      #001=GDB$BLD_BRKPNT File=GDB$BRKPNTS.:E05TSI                       TUE 07/29/97 21:22 Page:32   
          0 000224  BB85                                 LAB,B3   ,B5
          0 000225  3C1A                                 LDV,R3   26
          0 000226  0008                                 MMM

      229     9374    2                 GD$MSG.BRKRQS.IF$CONST;
      230     9375    2              GD_DATA.GD.DYNSP$->IFBRKPNT.IFCOND.DD_SIZE =

   9375   0 000227  EC80 0000 0000  xsym                 LDB,B6   GD$DELTA_DATA$
          0 00022A  9CC6 0156                            LDB,B1   342,B6
          0 00022C  E842 0026                            LDR,R6   38,B2
          0 00022E  EF41 002D                            STR,R6   45,B1

      231     9376    2                 GD$MSG.BRKRQS.DATA_DESC_SIZE;
      232     9377    2              GD_DATA.GD.DYNSP$->IFBRKPNT.IFCOND.DD$ =

   9377   0 000230  9CC6 0156                            LDB,B1   342,B6
          0 000232  EBC1 0030                            LAB,B6   48,B1
          0 000234  EFC1 002E                            STB,B6   46,B1

      233     9378    2                 PINCRW(GD_DATA.GD.DYNSP$,SIZEW(IFBRKPNT));
      234     9379    3              DO I = 0 TO DD_WSZ - 1;

   9379   0 000236  8747 0017                            CL       I,AUTO
          0 000238  0F81 0012                            B        s:9382+2,PREL

      235     9380    3                 GD_DATA.GD.DYNSP$->IFBRKPNT.IFCOND.DD$->DD(I) =

   9380   0 00023A  EC80 0000 0000  xsym                 LDB,B6   GD$DELTA_DATA$
          0 00023D  DCC6 0156                            LDB,B5   342,B6
          0 00023F  CCC5 002E                            LDB,B4   46,B5
          0 000241  B847 0017                            LDR,R3   I,AUTO
          0 000243  BCC7 0006                            LDB,B3   @BUFFER,AUTO
          0 000245  A853                                 LDR,R2   R3
          0 000246  2E27                                 ADV,R2   39
          0 000247  E823                                 LDR,R6   ,B3,R2
          0 000248  EF34                                 STR,R6   ,B4,R3

PL6.E3A0      #001=GDB$BLD_BRKPNT File=GDB$BRKPNTS.:E05TSI                       TUE 07/29/97 21:22 Page:33   
      236     9381    3                    GD$MSG.BRKRQS.IF_DATA_DESC(I);
      237     9382    3                 END;

   9382   0 000249  8AC7 0017                            INC      I,AUTO
          0 00024B  E847 0017                            LDR,R6   I,AUTO
          0 00024D  E947 001A                            CMR,R6   DD_WSZ,AUTO
          0 00024F  026B                                 BL       s:9380,SPREL

      238     9383    2              BRK$ = ADDR(GD_DATA.MYSPACE(0));

   9383   0 000250  EC80 0000 0000  xsym                 LDB,B6   GD$DELTA_DATA$
          0 000253  DBC6 01AE                            LAB,B5   430,B6
          0 000255  DFC7 0010                            STB,B5   BRK$,AUTO

      239     9384    2              IF BRK$ = GD_DATA.GD.DYNSP$ THEN

   9384   0 000257  DDC6 0156                            CMB,B5   342,B6
          0 000259  0981 0007                            BNE      s:9387,PREL

      240     9385    2                 BRK$->BRKPNT.FLINK$ = ADDR(NIL);

   9385   0 00025B  CB80 0000 0000                       LAB,B4   0
          0 00025E  CF85                                 STB,B4   ,B5
          0 00025F  0F81 005C                            B        s:9426,PREL

      241     9386    3              ELSE DO;

      242     9387    4                 DO WHILE BRK$->BRKPNT.FLINK$ ~= ADDR(NIL);

   9387   0 000261  0F81 0006                            B        s:9389,PREL

      243     9388    4                    BRK$ = BRK$->BRKPNT.FLINK$;

   9388   0 000263  ECC7 0010                            LDB,B6   BRK$,AUTO
          0 000265  DC86                                 LDB,B5   ,B6
          0 000266  DFC7 0010                            STB,B5   BRK$,AUTO

PL6.E3A0      #001=GDB$BLD_BRKPNT File=GDB$BRKPNTS.:E05TSI                       TUE 07/29/97 21:22 Page:34   
      244     9389    4                    END;

   9389   0 000268  8D85                                 CMN      ,B5
          0 000269  09FA                                 BNE      s:9388,SPREL

      245     9390    3                 BRK$->BRKPNT.FLINK$ = GD_DATA.GD.DYNSP$;

   9390   0 00026A  EC80 0000 0000  xsym                 LDB,B6   GD$DELTA_DATA$
          0 00026D  CCC6 0156                            LDB,B4   342,B6
          0 00026F  CF85                                 STB,B4   ,B5

      246     9391    3                 END;

      247     9392    2              END /* IF GD$MSG.BRKRQS.IFSPEC */;

   9392   0 000270  0F81 004B                            B        s:9426,PREL

      248     9393    2           ELSE DO;

      249     9394
      250     9395        /* This is a breakpoint without an attached IF.  Do we have enough room
      251     9396           for it? */
      252     9397
      253     9398    2              IF GD_DATA.GD.DYNSP$ = ADDR(GD_DATA.MYSPACE(0)) THEN;

   9398   0 000272  DC80 0000 0000  xsym                 LDB,B5   GD$DELTA_DATA$
          0 000275  CCC5 0156                            LDB,B4   342,B5
          0 000277  BBC5 01AE                            LAB,B3   430,B5
          0 000279  BFC7 001C                            STB,B3   DD_WSZ+2,AUTO
          0 00027B  CDC7 001C                            CMB,B4   DD_WSZ+2,AUTO
          0 00027D  0901 0014                            BE       s:9412,PREL

      254     9399
      255     9400        /* Assume there's enough room. */
      256     9401
      257     9402    2              ELSE
      258     9403
PL6.E3A0      #001=GDB$BLD_BRKPNT File=GDB$BRKPNTS.:E05TSI                       TUE 07/29/97 21:22 Page:35   
      259     9404        /* Make sure there's enough room. */
      260     9405
      261     9406    2                 IF POFFW(PINCRW(GD_DATA.GD.DYNSP$,SIZEW(BRKPNT)),

   9406   0 00027F  8CC5 0156                            LDI      342,B5
          0 000281  8480 0000 0000  xsym                 SID      GD$DELTA_DATA$
          0 000284  8470 FFFF FBF8                       AID      -1032,IMO
          0 000287  84F0 0000 0000                       SID      0,IMO
          0 00028A  6A01 FF0E                            BGZ,R6   s:9339,PREL
          0 00028C  6801 0003                            BLZ,R6   s:9407,PREL
          0 00028E  7981 FF0A                            BNEZ,R7  s:9339,PREL

      262     9407    2                          ADDR(GD_DATA.MYSPACE(%GD#DYNSZ-1))) <= 0 THEN;

   9407   0 000290  0F81 0001                            B        s:9412,PREL

      263     9408    2                 ELSE GOTO SENDNOSPACERSP;
      264     9409
      265     9410        /* Fill in the FLINK in the previous breakpoint. */
      266     9411
      267     9412    2              BRK$ = ADDR(GD_DATA.MYSPACE(0));

   9412   0 000292  ABC5 01AE                            LAB,B2   430,B5
          0 000294  AFC7 0010                            STB,B2   BRK$,AUTO

      268     9413    2              IF BRK$ = GD_DATA.GD.DYNSP$ THEN

   9413   0 000296  ADC5 0156                            CMB,B2   342,B5
          0 000298  0981 0007                            BNE      s:9416,PREL

      269     9414    2                 BRK$->BRKPNT.FLINK$ = ADDR(NIL);

   9414   0 00029A  9B80 0000 0000                       LAB,B1   0
          0 00029D  9F82                                 STB,B1   ,B2
          0 00029E  0F81 0012                            B        s:9421,PREL

      270     9415    3              ELSE DO;
PL6.E3A0      #001=GDB$BLD_BRKPNT File=GDB$BRKPNTS.:E05TSI                       TUE 07/29/97 21:22 Page:36   

      271     9416    4                 DO WHILE BRK$->BRKPNT.FLINK$ ~= ADDR(NIL);

   9416   0 0002A0  0F81 0006                            B        s:9418,PREL

      272     9417    4                    BRK$ = BRK$->BRKPNT.FLINK$;

   9417   0 0002A2  ECC7 0010                            LDB,B6   BRK$,AUTO
          0 0002A4  DC86                                 LDB,B5   ,B6
          0 0002A5  DFC7 0010                            STB,B5   BRK$,AUTO

      273     9418    4                    END;

   9418   0 0002A7  ECC7 0010                            LDB,B6   BRK$,AUTO
          0 0002A9  8D86                                 CMN      ,B6
          0 0002AA  09F8                                 BNE      s:9417,SPREL

      274     9419    3                 BRK$->BRKPNT.FLINK$ = GD_DATA.GD.DYNSP$;

   9419   0 0002AB  DC80 0000 0000  xsym                 LDB,B5   GD$DELTA_DATA$
          0 0002AE  CCC5 0156                            LDB,B4   342,B5
          0 0002B0  CF86                                 STB,B4   ,B6

      275     9420    3                 END;

      276     9421    2              GD_DATA.GD.DYNSP$->BRKPNT = '0'B;

   9421   0 0002B1  EC80 0000 0000  xsym                 LDB,B6   GD$DELTA_DATA$
          0 0002B4  DCC6 0156                            LDB,B5   342,B6
          0 0002B6  5C16                                 LDV,R5   22
          0 0002B7  0021                                 ALR      ;
          0 0002B8       4178 0000                                ALPHANUM('0000'X,IMO,,1),;
          0 0002BA       4005 0000                                ALPHANUM(0,B5,,R5,FILL)

      277     9422    2              END /* It's an unconditional breakpoint */;

      278     9423
PL6.E3A0      #001=GDB$BLD_BRKPNT File=GDB$BRKPNTS.:E05TSI                       TUE 07/29/97 21:22 Page:37   
      279     9424        /* Update DYNSP$ */
      280     9425
      281     9426    1           BRK$ = GD_DATA.GD.DYNSP$;

   9426   0 0002BC  437F                                 CSYNC    s:9421+10,SPREL
          0 0002BD  EC80 0000 0000  xsym                 LDB,B6   GD$DELTA_DATA$
          0 0002C0  DCC6 0156                            LDB,B5   342,B6
          0 0002C2  DFC7 0010                            STB,B5   BRK$,AUTO

      282     9427    1           IF GD$MSG.BRKRQS.IFSPEC THEN

   9427   0 0002C4  CCC7 0006                            LDB,B4   @BUFFER,AUTO
          0 0002C6  82C4 0001                            LB,'0080'X        1,B4
          0 0002C8       0080
          0 0002C9  0581 000E                            BBF      s:9430,PREL

      283     9428    1              GD_DATA.GD.DYNSP$ =

   9428   0 0002CB  BCC5 002E                            LDB,B3   46,B5
          0 0002CD  BFC7 001C                            STB,B3   DD_WSZ+2,AUTO
          0 0002CF  F847 001A                            LDR,R7   DD_WSZ,AUTO
          0 0002D1  6C00                                 LDV,R6   0
          0 0002D2  8447 001C                            AID      DD_WSZ+2,AUTO
          0 0002D4  8D46 0156                            SDI      342,B6
          0 0002D6  0F81 0005                            B        s:9434,PREL

      284     9429    1                 PINCRW(GD_DATA.GD.DYNSP$->IFBRKPNT.IFCOND.DD$,DD_WSZ);
      285     9430    1           ELSE GD_DATA.GD.DYNSP$ = PINCRW(GD_DATA.GD.DYNSP$,SIZEW(BRKPNT));

   9430   0 0002D8  BBC5 000B                            LAB,B3   11,B5
          0 0002DA  BFC6 0156                            STB,B3   342,B6

      286     9431
      287     9432        /* Set up the rest of the stuff in the breakpoint table */
      288     9433
      289     9434    1           BRK$->BRKPNT.BRKNUM = GD$MSG.BRKRQS.BRKNUM;

PL6.E3A0      #001=GDB$BLD_BRKPNT File=GDB$BRKPNTS.:E05TSI                       TUE 07/29/97 21:22 Page:38   
   9434   0 0002DC  E2C4 0001                            LLH,R6   1,B4
          0 0002DE  EF45 0002                            STR,R6   2,B5

      290     9435    1           BRK$->BRKPNT.FLAGS.INTERPRETIVE = GD$MSG.SUBFB.INTERPRETIVE;

   9435   0 0002E0  D804                                 LDR,R5   ,B4
          0 0002E1  500B                                 SOL,R5   11
          0 0002E2  DAC5 000A                            SRM,R5,'2000'X    10,B5
          0 0002E4       2000

      291     9436    1           BRK$->BRKPNT.ADR$ = GD$MSG.BRKRQS.ADR$;

   9436   0 0002E5  BCC4 0003                            LDB,B3   3,B4
          0 0002E7  BFC5 0005                            STB,B3   5,B5

      292     9437    1           BRK$->BRKPNT.FLAGS.ACTIVE = %G_ENABLE#;

   9437   0 0002E9  8945 000A                            LBT,'8000'X       10,B5
   9437   0 0002EB       8000

      293     9438    1           P$ = GD$MSG.BRKRQS.ADR$;

   9438   0 0002EC  ACC4 0003                            LDB,B2   3,B4
          0 0002EE  AFC7 0018                            STB,B2   P$,AUTO

      294     9439    1           IF GD_DATA.GD.MODE = %GD#MODE_XDELTA AND (P < %GM_ISR1_BASE OR

   9439   0 0002F0  E846 0130                            LDR,R6   304,B6
          0 0002F2  6D02                                 CMV,R6   2
          0 0002F3  0981 0010                            BNE      s:9443,PREL
          0 0002F5  8CC7 0018                            LDI      P$,AUTO
          0 0002F7  84F0 0001 0000                       SID      65536,IMO
          0 0002FA  0681 0005                            BCF      s:9441,PREL
          0 0002FC  E846 0148                            LDR,R6   328,B6
          0 0002FE  6901 0005                            BEZ,R6   s:9443,PREL

      295     9440    1              GD_DATA.GD.ASDT_OFFSET ~= 0) THEN
PL6.E3A0      #001=GDB$BLD_BRKPNT File=GDB$BRKPNTS.:E05TSI                       TUE 07/29/97 21:22 Page:39   
      296     9441    1              BRK$->BRKPNT.USER# = 0;

   9441   0 000300  8745 0008                            CL       8,B5
          0 000302  0F81 0005                            B        s:9444,PREL

      297     9442    1           ELSE
      298     9443    1              BRK$->BRKPNT.USER# = GD_DATA.GD.USERNO;

   9443   0 000304  E846 016B                            LDR,R6   363,B6
          0 000306  EF45 0008                            STR,R6   8,B5

      299     9444    2           IF GD$MSG.FNC = %GD#RQSONCALLBRKPNT THEN DO;

   9444   0 000308  E284                                 LLH,R6   ,B4
          0 000309  6D1B                                 CMV,R6   27
          0 00030A  0981 000B                            BNE      s:9449,PREL

      300     9445    2              BRK$->BRKPNT.FLAGS.ONCALL = '1'B;

   9445   0 00030C  8945 000A                            LBT,'0800'X       10,B5
   9445   0 00030E       0800

      301     9446    2              GD_DATA.GD.ONCALL$ = P$;

   9446   0 00030F  BCC7 0018                            LDB,B3   P$,AUTO
          0 000311  BFC6 014E                            STB,B3   334,B6

      302     9447    2              GD_DATA.GD.ONCALL = '1'B;

   9447   0 000313  8946 014C                            LBT,'0800'X       332,B6
   9447   0 000315       0800

      303     9448    2              END;

      304     9449    1           BRK$->BRKPNT.BYPASSCOUNT = GD$MSG.BRKRQS.BYPASSCOUNT;

   9449   0 000316  E844 0002                            LDR,R6   2,B4
PL6.E3A0      #001=GDB$BLD_BRKPNT File=GDB$BRKPNTS.:E05TSI                       TUE 07/29/97 21:22 Page:40   
          0 000318  EF45 0003                            STR,R6   3,B5

      305     9450    1           BRK$->BRKPNT.CUR_BYPASSCOUNT = GD$MSG.BRKRQS.BYPASSCOUNT;

   9450   0 00031A  D844 0002                            LDR,R5   2,B4
          0 00031C  DF45 0004                            STR,R5   4,B5

      306     9451    1           CALL GDI$SEND_ERROR_RESPONSE(SIZE,BUFFER,%GD#RSPACK);

   9451   0 00031E  BBF0 0023                            LAB,B3   35,IMO
          0 000320  BFC7 0020                            STB,B3   DD_WSZ+6,AUTO
          0 000322  CFC7 001E                            STB,B4   DD_WSZ+4,AUTO
          0 000324  ACC7 0004                            LDB,B2   @SIZE,AUTO
          0 000326  AFC7 001C                            STB,B2   DD_WSZ+2,AUTO
          0 000328  BBC7 001C                            LAB,B3   DD_WSZ+2,AUTO
          0 00032A  CBF0 0300                            LAB,B4   768,IMO
          0 00032C  E380 0000 0000  xent                 LNJ,B6   GDI$SEND_ERROR_RESPONSE
          0 00032F       0001                            DC       s:9453,PREL

      307     9452        /**/
      308     9453    1           RETURN;

   9453   0 000330  C380 0000 0000  xent                 LNJ,B4   X6A_ARET
      309     9454        /**/
      310     9455    1   END GDB$BLD_BRKPNT;
      311     9456        %EOD;

PL6.E3A0      #001=GDB$BLD_BRKPNT File=GDB$BRKPNTS.:E05TSI                       TUE 07/29/97 21:22 Page:41   
--  Include file information  --

   GD_BRKPNT_M.:E05TOU  is referenced.
   KH$CHN.:E05TOU  is referenced.
   G_HJIT_M.:E05TOU  is referenced.
   GM_VIRTUAL_E.:E05TOU  is referenced.
   GH_HARDWARE_M.:E05TOU  is referenced.
   DD_SRTN_C.:E05TOU  is referenced.
   DD_ACODE_C.:E05TOU  is referenced.
   DD_ICODE_C.:E05TOU  is referenced.
   DD$DITEM.:E05TOU  cannot be made into a system file and is referenced.
   GD$MACS_M.:E05TOU  is referenced.
   GD$MSG_M.:E05TOU  is referenced.
   GDA_EQUS_E.:E05TOU  is referenced.
   GD_EQUS_E.:E05TOU  is referenced.
   GD_DATA_M.:E05TOU  is referenced.
   GD_STATIC_DATA.:E05TOU  cannot be made into a system file and is referenced.
   LCP_6.:E05TOU  cannot be made into a system file and is referenced.
   G_LCP6_E.:E05TOU  was found in the system file and is referenced.
   GT_LCP6_M.:E05TOU  was found in the system file and is referenced.
   KI_CP6.:E05TOU  was found in the system file and is referenced.
   GF_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GM_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GU_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GJ_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GH_LCP6_M.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure GDB$BLD_BRKPNT.
PL6.E3A0      #001=GDB$BLD_BRKPNT File=GDB$BRKPNTS.:E05TSI                       TUE 07/29/97 21:22 Page:42   

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     6-0-0/w PTR         r     1 @BUFFER                    4-0-0/w PTR         r     1 @SIZE
    10-0-0/w PTR         r     1 BRK$                      *0-0-0/w ACHR        r     1 BUFFER
    1A-0-0/w UBIN(16)    r     1 DD_WSZ                    *0-0-0/w STRC(3344)  r     1 GD$MSG
    17-0-0/w UBIN(16)    r     1 I                         18-0-0/w UBIN(32)    r     1 P
    18-0-0/w PTR         r     1 P$                        *0-0-0/w UBIN(16)    r     1 SIZE
    13-0-0/w PTR         r     1 TEMP$                     15-0-0/w PTR         r     1 TEMP1$
    12-0-0/w UBIN(16)    r     1 TEMPSZ

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 G$MHJIT$                   0-0-0/w PTR         r     1 GD$DELTA_DATA$

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(176)   r     1 BRKPNT                     0-0-0/w UBIN(16)    r     1 DD(0:0)
     0-0-0/w STRC(27232) r     1 G$MHJIT                    0-0-0/w STRC(32)    r     1 G$SEGDESC
     0-0-0/w STRC(16704) r     1 GD_DATA                    0-0-0/w STRC(80)    r     1 GH_VLD
     0-0-0/w STRC(768)   r     1 IFBRKPNT


   Procedure GDB$BLD_BRKPNT requires 819 words for executable code.
   Procedure GDB$BLD_BRKPNT requires 34 words of local(AUTO) storage.
PL6.E3A0      #001=GDB$BLD_BRKPNT File=GDB$BRKPNTS.:E05TSI                       TUE 07/29/97 21:22 Page:43   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=GDB$BLD_BRKPNT File=GDB$BRKPNTS.:E05TSI                       TUE 07/29/97 21:22 Page:44   
          MINI XREF LISTING

BRK$
      2218**DCL      9290<<ASSIGN   9292>>DOWHILE  9293>>IF       9294<<ASSIGN   9294>>ASSIGN   9383<<ASSIGN
      9384>>IF       9385>>ASSIGN   9387>>DOWHILE  9388<<ASSIGN   9388>>ASSIGN   9390>>ASSIGN   9412<<ASSIGN
      9413>>IF       9414>>ASSIGN   9416>>DOWHILE  9417<<ASSIGN   9417>>ASSIGN   9419>>ASSIGN   9426<<ASSIGN
      9434>>ASSIGN   9435>>ASSIGN   9436>>ASSIGN   9437>>ASSIGN   9441>>ASSIGN   9443>>ASSIGN   9445>>ASSIGN
      9449>>ASSIGN   9450>>ASSIGN
BRKPNT
      2244**DCL      9244--ASSIGN   9255<<ASSIGN   9332--ASSIGN   9362<<ASSIGN   9362>>ASSIGN   9406--IF
      9421<<ASSIGN   9430--ASSIGN
BRKPNT.ADR$
      2244**DCL      2244--REDEF    9436<<ASSIGN
BRKPNT.BRKNUM
      2244**DCL      9256<<ASSIGN   9293>>IF       9434<<ASSIGN
BRKPNT.BYPASSCOUNT
      2244**DCL      9257<<ASSIGN   9449<<ASSIGN
BRKPNT.CUR_BYPASSCOUNT
      2244**DCL      9258<<ASSIGN   9450<<ASSIGN
BRKPNT.FLAGS.ACTIVE
      2245**DCL      9437<<ASSIGN
BRKPNT.FLAGS.IFCOND
      2245**DCL      9329>>IF       9354>>IF
BRKPNT.FLAGS.INTERPRETIVE
      2245**DCL      9435<<ASSIGN
BRKPNT.FLAGS.ONCALL
      2246**DCL      9445<<ASSIGN
BRKPNT.FLINK$
      2244**DCL      9294>>ASSIGN   9385<<ASSIGN   9387>>DOWHILE  9388>>ASSIGN   9390<<ASSIGN   9414<<ASSIGN
      9416>>DOWHILE  9417>>ASSIGN   9419<<ASSIGN
BRKPNT.USER#
      2245**DCL      9441<<ASSIGN   9443<<ASSIGN
BUFFER
      2048**DCL        24--PROC     2066--REDEF    9272<>CALL     9284<>CALL     9299<>CALL     9344<>CALL
PL6.E3A0      #001=GDB$BLD_BRKPNT File=GDB$BRKPNTS.:E05TSI                       TUE 07/29/97 21:22 Page:45   
      9451<>CALL
DD
      2294**DCL      9268<<ASSIGN   9358<<ASSIGN   9358>>ASSIGN   9380<<ASSIGN
DD_WSZ
      2225**DCL      9312<<ASSIGN   9325>>ASSIGN   9353>>ASSIGN   9379>>DOINDEX  9428>>ASSIGN
G$MHJIT.ASDT_MON.DB_PROC
      2884**DCL      9279>>IF
G$MHJIT.INTCON.HHJIT
      8808**DCL      8808--REDEF
G$MHJIT.INTCON.P$$
      8781**DCL      8781--REDEF
G$MHJIT.ISA_BIGFOOT.P$$
      5726**DCL      5726--REDEF
G$MHJIT.ISA_DBINH.P$$
      6940**DCL      6940--REDEF
G$MHJIT.ISA_IDLE.P$$
      3821**DCL      3821--REDEF
G$MHJIT.ISA_LVL10.P$$
      7243**DCL      7243--REDEF
G$MHJIT.ISA_LVL11.P$$
      7546**DCL      7546--REDEF
G$MHJIT.ISA_LVL12.P$$
      7849**DCL      7849--REDEF
G$MHJIT.ISA_LVL5.P$$
      6029**DCL      6029--REDEF
G$MHJIT.ISA_OV.P$$
      5423**DCL      5423--REDEF
G$MHJIT.ISA_PFS.P$$
      5094**DCL      5094--REDEF
G$MHJIT.ISA_RT_CLOCK.P$$
      8456**DCL      8456--REDEF
G$MHJIT.ISA_SATYR_RCV.P$$
      6333**DCL      6333--REDEF
G$MHJIT.ISA_SATYR_TRN.P$$
      6637**DCL      6637--REDEF
G$MHJIT.ISA_SCHD.P$$
PL6.E3A0      #001=GDB$BLD_BRKPNT File=GDB$BRKPNTS.:E05TSI                       TUE 07/29/97 21:22 Page:46   
      8152**DCL      8152--REDEF
G$MHJIT.ISA_WDOG.P$$
      5202**DCL      5202--REDEF
G$MHJIT.TSA_DB.ISA.P$$
      4424**DCL      4424--REDEF
G$MHJIT.TSA_DB.P$$
      4295**DCL      4295--REDEF    4296--REDEF
G$MHJIT.TSA_HND.ISA.P$$
      9002**DCL      9002--REDEF
G$MHJIT.TSA_HND.P$$
      8873**DCL      8873--REDEF    8874--REDEF
G$MHJIT.TSA_MON.ISA.P$$
      4036**DCL      4036--REDEF
G$MHJIT.TSA_MON.P$$
      3907**DCL      3907--REDEF    3908--REDEF
G$MHJIT.TSA_OV.ISA.P$$
      4812**DCL      4812--REDEF
G$MHJIT.TSA_OV.P$$
      4683**DCL      4683--REDEF    4684--REDEF
G$MHJIT$
      9230**DCL      2346--IMP-PTR  9279>>IF
G$SEGDESC
      9217**DCL      9279>>IF
GD$DELTA_DATA$
       647**DCL       661--IMP-PTR  9247>>ASSIGN   9248>>ASSIGN   9250>>ASSIGN   9250>>ASSIGN   9251>>ASSIGN
      9266>>ASSIGN   9279>>IF       9279>>IF       9279>>IF       9279>>IF       9290>>ASSIGN   9291>>IF
      9291>>IF       9316>>IF       9316>>IF       9328>>IF       9329>>IF       9330>>ASSIGN   9333>>ASSIGN
      9334>>ASSIGN   9351>>IF       9352>>ASSIGN   9353>>ASSIGN   9366>>ASSIGN   9370>>ASSIGN   9371>>ASSIGN
      9372>>ASSIGN   9373>>ASSIGN   9375>>ASSIGN   9377>>ASSIGN   9377>>ASSIGN   9380>>ASSIGN   9383>>ASSIGN
      9384>>IF       9390>>ASSIGN   9398>>IF       9398>>IF       9406>>IF       9406>>IF       9412>>ASSIGN
      9413>>IF       9419>>ASSIGN   9421>>ASSIGN   9426>>ASSIGN   9428>>ASSIGN   9428>>ASSIGN   9430>>ASSIGN
      9430>>ASSIGN   9439>>IF       9439>>IF       9443>>ASSIGN   9446>>ASSIGN   9447>>ASSIGN
GD$MSG.BRKRQS.ADR$
      2113**DCL      9277>>ASSIGN   9436>>ASSIGN   9438>>ASSIGN
GD$MSG.BRKRQS.BRKNUM
      2109**DCL      9256>>ASSIGN   9293>>IF       9297>>IF       9434>>ASSIGN
PL6.E3A0      #001=GDB$BLD_BRKPNT File=GDB$BRKPNTS.:E05TSI                       TUE 07/29/97 21:22 Page:47   
GD$MSG.BRKRQS.BYPASSCOUNT
      2113**DCL      9257>>ASSIGN   9258>>ASSIGN   9449>>ASSIGN   9450>>ASSIGN
GD$MSG.BRKRQS.COND
      2117**DCL      9261>>ASSIGN   9370>>ASSIGN
GD$MSG.BRKRQS.CTYPE
      2117**DCL      9263>>ASSIGN   9372>>ASSIGN
GD$MSG.BRKRQS.DATA_DESC_SIZE
      2124**DCL      9241>>ASSIGN   9265>>ASSIGN   9312>>ASSIGN   9375>>ASSIGN
GD$MSG.BRKRQS.IF$CONST
      2117**DCL      9264>>ASSIGN   9373>>ASSIGN
GD$MSG.BRKRQS.IF$CONST.SIZE
      2117**DCL      2117--REDEF
GD$MSG.BRKRQS.IF$CONST.TEXT
      2117**DCL      2118--REDEF    2118--REDEF    2119--REDEF    2120--REDEF
GD$MSG.BRKRQS.IFSPEC
      2113**DCL      9240>>IF       9252>>IF       9259>>IF       9308>>IF       9427>>IF
GD$MSG.BRKRQS.IF_DATA_DESC
      2124**DCL      9268>>ASSIGN   9380>>ASSIGN
GD$MSG.BRKRSP.BRK#
      2131**DCL      2131--REDEF
GD$MSG.BRKRSP.USER#
      2131**DCL      2131--REDEF
GD$MSG.FNC
      2066**DCL      9238>>IF       9444>>IF
GD$MSG.LETMEM_D.VALUE.SIZE
      2089**DCL      2089--REDEF
GD$MSG.LETMEM_D.VALUE.TEXT
      2090**DCL      2090--REDEF    2090--REDEF    2091--REDEF    2092--REDEF
GD$MSG.MESSAGE
      2071**DCL      2071--REDEF    2072--REDEF    2072--REDEF    2073--REDEF    2084--REDEF    2097--REDEF
      2102--REDEF    2109--REDEF    2125--REDEF    2130--REDEF    2136--REDEF    2137--REDEF    2166--REDEF
      2168--REDEF    2179--REDEF    2186--REDEF    2198--REDEF
GD$MSG.SUBFB.INTERPRETIVE
      2070**DCL      9435>>ASSIGN
GD$MSG.SUBFNC
      2066**DCL      2066--REDEF    2070--REDEF
PL6.E3A0      #001=GDB$BLD_BRKPNT File=GDB$BRKPNTS.:E05TSI                       TUE 07/29/97 21:22 Page:48   
GD$MSG.TSA.I
      2138**DCL      2138--REDEF
GD$MSG.TSA.S
      2140**DCL      2140--REDEF
GD$MSG.USERQS.ASDT$
      2166**DCL      2166--REDEF    2167--REDEF
GDI$SEND_ERROR_RESPONSE
      2211**DCL-ENT  9272--CALL     9284--CALL     9299--CALL     9344--CALL     9451--CALL
GDU$SETUP_WINDOW
      2212**DCL-ENT  9278--CALL
GD_DATA.GD.ASDT_OFFSET
       667**DCL      9439>>IF
GD_DATA.GD.ASDT_WINDOW$
       683**DCL      9279>>IF
GD_DATA.GD.DYNSP$
       674**DCL       674--REDEF    9248>>ASSIGN   9250>>ASSIGN   9251>>ASSIGN   9266>>ASSIGN   9291>>IF
      9316>>IF       9334>>ASSIGN   9353>>ASSIGN   9366>>ASSIGN   9370>>ASSIGN   9371>>ASSIGN   9372>>ASSIGN
      9373>>ASSIGN   9375>>ASSIGN   9377>>ASSIGN   9377>>ASSIGN   9380>>ASSIGN   9384>>IF       9390>>ASSIGN
      9398>>IF       9406>>IF       9413>>IF       9419>>ASSIGN   9421>>ASSIGN   9426>>ASSIGN   9428<<ASSIGN
      9428>>ASSIGN   9430<<ASSIGN   9430>>ASSIGN
GD_DATA.GD.MODE
       664**DCL      9279>>IF       9439>>IF
GD_DATA.GD.ONCALL
       669**DCL      9447<<ASSIGN
GD_DATA.GD.ONCALL$
       673**DCL      9446<<ASSIGN
GD_DATA.GD.ONCALLS_BRK$
       665**DCL      9250<<ASSIGN   9328>>IF       9329>>IF       9330>>ASSIGN   9351>>IF       9352>>ASSIGN
GD_DATA.GD.STEP_BRKPNT.ADR$
       675**DCL       676--REDEF
GD_DATA.GD.STEP_BRKPNT.START$
       676**DCL       676--REDEF
GD_DATA.GD.USERNO
       681**DCL      9443>>ASSIGN
GD_DATA.GD.USE_REAL
       671**DCL      9279>>IF
PL6.E3A0      #001=GDB$BLD_BRKPNT File=GDB$BRKPNTS.:E05TSI                       TUE 07/29/97 21:22 Page:49   
GD_DATA.GD.VLD
       682**DCL      9279--IF
GD_DATA.MYSPACE
       692**DCL      9247--ASSIGN   9290--ASSIGN   9291--IF       9316--IF       9333--ASSIGN   9383--ASSIGN
      9398--IF       9406--IF       9412--ASSIGN
GH_VLD.STATUS
      2327**DCL      9279>>IF
I
      2222**DCL      9267<<DOINDEX  9268>>ASSIGN   9268>>ASSIGN   9357<<DOINDEX  9358>>ASSIGN   9358>>ASSIGN
      9379<<DOINDEX  9380>>ASSIGN   9380>>ASSIGN
IFBRKPNT
      2261**DCL      9241--ASSIGN   9253<<ASSIGN   9260<<ASSIGN   9266--ASSIGN   9325--ASSIGN   9330--ASSIGN
      9353--ASSIGN   9355<<ASSIGN   9355>>ASSIGN   9356--ASSIGN   9366<<ASSIGN   9377--ASSIGN
IFBRKPNT.ADR$
      2261**DCL      2261--REDEF
IFBRKPNT.FLAGS.IFCOND
      2262**DCL      9262<<ASSIGN   9371<<ASSIGN
IFBRKPNT.IFCOND.COND
      2283**DCL      9261<<ASSIGN   9370<<ASSIGN
IFBRKPNT.IFCOND.CONS$TANT
      2283**DCL      9264<<ASSIGN   9373<<ASSIGN
IFBRKPNT.IFCOND.CONS$TANT.SIZE
      2283**DCL      2283--REDEF
IFBRKPNT.IFCOND.CONS$TANT.TEXT
      2284**DCL      2284--REDEF    2284--REDEF    2285--REDEF    2286--REDEF
IFBRKPNT.IFCOND.CTYPE
      2283**DCL      9263<<ASSIGN   9372<<ASSIGN
IFBRKPNT.IFCOND.DD$
      2287**DCL      9266<<ASSIGN   9268>>ASSIGN   9356<<ASSIGN   9358>>ASSIGN   9358>>ASSIGN   9377<<ASSIGN
      9380>>ASSIGN   9428>>ASSIGN
IFBRKPNT.IFCOND.DD_SIZE
      2287**DCL      9265<<ASSIGN   9267>>DOINDEX  9330>>ASSIGN   9357>>DOINDEX  9375<<ASSIGN
ONCALLS_DONE
      9273**LABEL    9238--GOTO
P
      2224**DCL      9279>>IF       9439>>IF
PL6.E3A0      #001=GDB$BLD_BRKPNT File=GDB$BRKPNTS.:E05TSI                       TUE 07/29/97 21:22 Page:50   
P$
      2223**DCL      2224--REDEF    9251<<ASSIGN   9253>>ASSIGN   9255>>ASSIGN   9256>>ASSIGN   9257>>ASSIGN
      9258>>ASSIGN   9260>>ASSIGN   9261>>ASSIGN   9262>>ASSIGN   9263>>ASSIGN   9264>>ASSIGN   9265>>ASSIGN
      9266>>ASSIGN   9267>>DOINDEX  9268>>ASSIGN   9277<<ASSIGN   9278<>CALL     9352<<ASSIGN   9354>>IF
      9355>>ASSIGN   9357>>DOINDEX  9358>>ASSIGN   9362>>ASSIGN   9438<<ASSIGN   9446>>ASSIGN
SENDNOSPACERSP
      9344**LABEL    9249--GOTO     9408--GOTO
SENDSMXRSP
      9299**LABEL    9293--GOTO
SIZE
      2205**DCL        24--PROC     2048--IMP-SIZ  9272<>CALL     9272>>CALL     9284<>CALL     9284>>CALL
      9299<>CALL     9299>>CALL     9344<>CALL     9344>>CALL     9451<>CALL     9451>>CALL
TEMP$
      2220**DCL      9247<<ASSIGN   9249>>IF       9333<<ASSIGN   9335>>IF
TEMP1$
      2221**DCL      9248<<ASSIGN   9249>>IF       9334<<ASSIGN   9335>>IF       9353<<ASSIGN   9355>>ASSIGN
      9356>>ASSIGN   9356>>ASSIGN   9358>>ASSIGN   9362>>ASSIGN
TEMPSZ
      2219**DCL      9241<<ASSIGN   9244<<ASSIGN   9248>>ASSIGN   9325<<ASSIGN   9330<<ASSIGN   9330>>ASSIGN
      9332<<ASSIGN   9332>>ASSIGN   9334>>ASSIGN
VLP_XBREAK.IC
      2309**DCL      2309--REDEF
VLP_XBREAK.OLDIC
      2309**DCL      2310--REDEF    2310--REDEF

PL6.E3A0      #002=GDB$SET_BRKPNT File=GDB$BRKPNTS.:E05TSI                       TUE 07/29/97 21:23 Page:51   
      312        1        /*T***********************************************************/
      313        2        /*T*                                                         */
      314        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      315        4        /*T*                                                         */
      316        5        /*T***********************************************************/
      317        6        %EJECT;
PL6.E3A0      #002=GDB$SET_BRKPNT File=GDB$BRKPNTS.:E05TSI                       TUE 07/29/97 21:23 Page:52   
      318        7        /*F*   NAME:     GDB$SET_BRKPNT
      319        8               PURPOSE:  This routine goes through the break table and sets
      320        9                         all the breakpoints.  This routine is entered as a
      321       10                         result of a user in the remote debugger typing GO.
      322       11               CALL:     CALL GDB$SET_BRKPNT;
      323       12               DESCRIPTION:  This routine just goes through the GD_BRKTBL and
      324       13                             places a break instruction in memory for each
      325       14                             active breakpoint.  It also saves the old contents
      326       15                             of memory so it can be restored later.
      327       16                             In addition, this routine will setp the
      328       17                             global flags GD_STEPCNT and GD_ABSADDR to
      329       18                             reflect the contents of the GORQS.
      330       19        */
      331       20        GDB$SET_BRKPNT: PROC(SIZE,BUFFER);
      332       21
      333       22        /* INCLUDES */
      334       23
      335       24        %INCLUDE LCP_6;                        /* Various LCP6 EQUs */
      336      215        %INCLUDE GD_STATIC_DATA;
      337      688        %INCLUDE GD$MACS_M;                    /* Debugger macros */
      338      726        %INCLUDE KH$CHN;
      339      848        %VLP_XBREAK(STCLASS="BASED");
      340      867        %INCLUDE GD_BRKPNT_M;
      341      922
      342      923        /* SYMREFS */
      343      924
      344      925        /* BASED */
      345      926
      346      927    1   DCL BRK$ PTR;
      347      928    1   DCL MEMORY SBIN BASED;
      348      929    1   DCL BITMEM BIT(16) BASED ALIGNED;
      349      930        %GD_BRKPNT(FPTN=BRKPNT,STCLASS=BASED);
      350      947
      351      948        /* ARGS */
      352      949
      353      950    1   DCL BUFFER CHAR(SIZE) ALIGNED;
      354      951        %GD$MSG(STCLASS="REDEF BUFFER");
PL6.E3A0      #002=GDB$SET_BRKPNT File=GDB$BRKPNTS.:E05TSI                       TUE 07/29/97 21:23 Page:53   
      355     1107    1   DCL SIZE UBIN;
      356     1108
      357     1109        /* TEMPS */
      358     1110
      359     1111    1   DCL ADR$ PTR;
      360     1112    1   DCL I UBIN;
      361     1113
      362     1114        /* ENTRYS */
      363     1115
      364     1116    1   DCL GDU$SETUP_WINDOW_USER ENTRY(2) ALTRET;
      365     1117        %EJECT;
PL6.E3A0      #002=GDB$SET_BRKPNT File=GDB$BRKPNTS.:E05TSI                       TUE 07/29/97 21:23 Page:54   
      366     1118
      367     1119        /* Not using real now. */
      368     1120
      369     1121    1           GD_DATA.GD.USE_REAL=%G_NO#;
      370     1122
      371     1123        /* Loop through the BRK$->BRKPNT, looking for active breakpoints. When
      372     1124           one is found, replace the current contents of memory with a break
      373     1125           instruction and save the old contents of memory. */
      374     1126
      375     1127    1           BRK$ = ADDR(GD_DATA.MYSPACE(0));
      376     1128    2           DO WHILE BRK$ ~= ADDR(NIL);
      377     1129    3              IF BRK$->BRKPNT.FLAGS.ACTIVE AND ~BRK$->BRKPNT.FLAGS.ARMED THEN DO;
      378     1130
      379     1131        /* Before placing the breakpoint in memory, we have to virtualize the
      380     1132           address so that its relative to the user indicated in the table */
      381     1133
      382     1134    3                 ADR$=BRK$->BRKPNT.ADR$;
      383     1135    3                 CALL GDU$SETUP_WINDOW_USER (ADR$,BRK$->BRKPNT.USER#)
      384     1136    4                 WHENRETURN DO;
      385     1137    4                    BRK$->BRKPNT.OLDINST=ADR$->MEMORY;
      386     1138    4                    ADR$->BITMEM=%GD#BREAK_INST;
      387     1139    4                    BRK$->BRKPNT.FLAGS.ARMED='1'B;
      388     1140    4                    END;
      389     1141    3                 END;
      390     1142    2              BRK$ = BRK$->BRKPNT.FLINK$;
      391     1143    2              END;
      392     1144
      393     1145        /* If this call was to set a specific breakpoint then just return */
      394     1146
      395     1147    1           IF GD_DATA.GD.STOPT = %G_NO# THEN RETURN;
      396     1148
      397     1149        /* Indicate we arent stopped. */
      398     1150
      399     1151    1           GD_DATA.GD.STOPT=%G_NO#;
      400     1152
      401     1153        /* When this routine returns, it will cause its caller to
      402     1154           return to the trap handler, since the user has typed GO.  We set
PL6.E3A0      #002=GDB$SET_BRKPNT File=GDB$BRKPNTS.:E05TSI                       TUE 07/29/97 21:23 Page:55   
      403     1155           up the following cells so the trap handler can use them to setup
      404     1156           the TSA to continue from */
      405     1157
      406     1158    1           GD_DATA.GD.ABSADDR=ADDR(NIL);
      407     1159    1           GD_DATA.GD.STEPCNT=0;
      408     1160    1           GD_DATA.GD.GOTRAP=%G_NO#;
      409     1161    1           IF GD$MSG.SUBFB.ADR THEN
      410     1162    1              GD_DATA.GD.ABSADDR=GD$MSG.GORQS.ADR$;
      411     1163    1           IF GD$MSG.SUBFB.STEP THEN
      412     1164    1              GD_DATA.GD.STEPCNT=GD$MSG.GORQS.SIZE;
      413     1165    1           GD_DATA.GD.SOC = GD$MSG.SUBFB.SOC;
      414     1166
      415     1167        /* If the user has specified GOTRAP, set a bit to indicate it */
      416     1168
      417     1169    1           IF GD$MSG.SUBFB.GOTRAP THEN
      418     1170    1              GD_DATA.GD.GOTRAP=%G_YES#;
      419     1171        /**/
      420     1172    1           GD_DATA.GD.ASDT_OFFSET=GD_DATA.GD.ASDT_USE_OFFSET;
      421     1173    1           GD_DATA.GD.ASDT_PPNO=GD_DATA.GD.ASDT_USE_PPNO;
      422     1174    1           GD_DATA.GD.USERNO=GD_DATA.GD.USE_USERNO;
      423     1175        /**/
      424     1176    1           RETURN;
      425     1177
      426     1178    1   END GDB$SET_BRKPNT;
      427     1179        %EOD;

PL6.E3A0      #002=GDB$SET_BRKPNT File=GDB$BRKPNTS.:E05TSI                       TUE 07/29/97 21:23 Page:56   
--  Include file information  --

   GD_BRKPNT_M.:E05TOU  is referenced.
   KH$CHN.:E05TOU  is referenced.
   GD$MACS_M.:E05TOU  is referenced.
   GD$MSG_M.:E05TOU  is referenced.
   GDA_EQUS_E.:E05TOU  is referenced.
   GD_EQUS_E.:E05TOU  is referenced.
   GD_DATA_M.:E05TOU  is referenced.
   GD_STATIC_DATA.:E05TOU  cannot be made into a system file and is referenced.
   LCP_6.:E05TOU  cannot be made into a system file and is referenced.
   G_LCP6_E.:E05TOU  was found in the system file and is referenced.
   GT_LCP6_M.:E05TOU  was found in the system file and is referenced.
   KI_CP6.:E05TOU  was found in the system file and is referenced.
   GF_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GM_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GU_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GJ_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GH_LCP6_M.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure GDB$SET_BRKPNT.

   Procedure GDB$SET_BRKPNT requires 143 words for executable code.
   Procedure GDB$SET_BRKPNT requires 18 words of local(AUTO) storage.

PL6.E3A0      #002=GDB$SET_BRKPNT File=GDB$BRKPNTS.:E05TSI                       TUE 07/29/97 21:23 Page:57   

 Object Unit name= GDB$SET_BRKPNT                             File name= GDB$BRKPNTS.:E05TOU
 UTS= JUL 29 '97 21:23:07.04 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_LCP6_SYSTEM                               Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size HexSiz  Section name
    0   Proc  even  none   143     8F  GDB$SET_BRKPNT

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect HexLoc Primary Altret sequence   type   Parms  Name
     0      0   yes            yes      Std        2  GDB$SET_BRKPNT

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       2 GDU$SETUP_WINDOW_USER
                       nStd      0 X6A_AUTO_2
                       nStd      0 X6A_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     GD$DELTA_DATA$                   r    G$ROS$
PL6.E3A0      #002=GDB$SET_BRKPNT File=GDB$BRKPNTS.:E05TSI                       TUE 07/29/97 21:23 Page:58   


      312        1        /*T***********************************************************/
      313        2        /*T*                                                         */
      314        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      315        4        /*T*                                                         */
      316        5        /*T***********************************************************/
      317        6        %EJECT;
PL6.E3A0      #002=GDB$SET_BRKPNT File=GDB$BRKPNTS.:E05TSI                       TUE 07/29/97 21:23 Page:59   
      318        7        /*F*   NAME:     GDB$SET_BRKPNT
      319        8               PURPOSE:  This routine goes through the break table and sets
      320        9                         all the breakpoints.  This routine is entered as a
      321       10                         result of a user in the remote debugger typing GO.
      322       11               CALL:     CALL GDB$SET_BRKPNT;
      323       12               DESCRIPTION:  This routine just goes through the GD_BRKTBL and
      324       13                             places a break instruction in memory for each
      325       14                             active breakpoint.  It also saves the old contents
      326       15                             of memory so it can be restored later.
      327       16                             In addition, this routine will setp the
      328       17                             global flags GD_STEPCNT and GD_ABSADDR to
      329       18                             reflect the contents of the GORQS.
      330       19        */
      331       20        GDB$SET_BRKPNT: PROC(SIZE,BUFFER);

     20   0 000000  D380 0000 0000  xent GDB$SET_BRKPNT  LNJ,B5   X6A_AUTO_2
          0 000003       0012 0002                       DC       18,2

      332       21
      333       22        /* INCLUDES */
      334       23
      335       24        %INCLUDE LCP_6;                        /* Various LCP6 EQUs */
      336      215        %INCLUDE GD_STATIC_DATA;
      337      688        %INCLUDE GD$MACS_M;                    /* Debugger macros */
      338      726        %INCLUDE KH$CHN;
      339      848        %VLP_XBREAK(STCLASS="BASED");
      340      867        %INCLUDE GD_BRKPNT_M;
      341      922
      342      923        /* SYMREFS */
      343      924
      344      925        /* BASED */
      345      926
      346      927    1   DCL BRK$ PTR;
      347      928    1   DCL MEMORY SBIN BASED;
      348      929    1   DCL BITMEM BIT(16) BASED ALIGNED;
      349      930        %GD_BRKPNT(FPTN=BRKPNT,STCLASS=BASED);
      350      947
PL6.E3A0      #002=GDB$SET_BRKPNT File=GDB$BRKPNTS.:E05TSI                       TUE 07/29/97 21:23 Page:60   
      351      948        /* ARGS */
      352      949
      353      950    1   DCL BUFFER CHAR(SIZE) ALIGNED;
      354      951        %GD$MSG(STCLASS="REDEF BUFFER");
      355     1107    1   DCL SIZE UBIN;
      356     1108
      357     1109        /* TEMPS */
      358     1110
      359     1111    1   DCL ADR$ PTR;
      360     1112    1   DCL I UBIN;
      361     1113
      362     1114        /* ENTRYS */
      363     1115
      364     1116    1   DCL GDU$SETUP_WINDOW_USER ENTRY(2) ALTRET;
      365     1117        %EJECT;
PL6.E3A0      #002=GDB$SET_BRKPNT File=GDB$BRKPNTS.:E05TSI                       TUE 07/29/97 21:23 Page:61   
      366     1118
      367     1119        /* Not using real now. */
      368     1120
      369     1121    1           GD_DATA.GD.USE_REAL=%G_NO#;

   1121   0 000005  EC80 0000 0000  xsym                 LDB,B6   GD$DELTA_DATA$
          0 000008  8846 014C                            LBF,'0008'X       332,B6
          0 00000A       0008

      370     1122
      371     1123        /* Loop through the BRK$->BRKPNT, looking for active breakpoints. When
      372     1124           one is found, replace the current contents of memory with a break
      373     1125           instruction and save the old contents of memory. */
      374     1126
      375     1127    1           BRK$ = ADDR(GD_DATA.MYSPACE(0));

   1127   0 00000B  DBC6 01AE                            LAB,B5   430,B6
          0 00000D  DFC7 0008                            STB,B5   BRK$,AUTO

      376     1128    2           DO WHILE BRK$ ~= ADDR(NIL);

   1128   0 00000F  0F81 0037                            B        s:1143,PREL

      377     1129    3              IF BRK$->BRKPNT.FLAGS.ACTIVE AND ~BRK$->BRKPNT.FLAGS.ARMED THEN DO;

   1129   0 000011  ECC7 0008                            LDB,B6   BRK$,AUTO
          0 000013  89C6 000A                            CMZ      10,B6
          0 000015  0881 002C                            BAGE     s:1142,PREL
          0 000017  E846 000A                            LDR,R6   10,B6
          0 000019  6001                                 SOL,R6   1
          0 00001A  E570 8000                            AND,R6   -32768,IMO
          0 00001C  E670 8000                            XOR,R6   -32768,IMO
          0 00001E  6901 0023                            BEZ,R6   s:1142,PREL

      378     1130
      379     1131        /* Before placing the breakpoint in memory, we have to virtualize the
      380     1132           address so that its relative to the user indicated in the table */
PL6.E3A0      #002=GDB$SET_BRKPNT File=GDB$BRKPNTS.:E05TSI                       TUE 07/29/97 21:23 Page:62   
      381     1133
      382     1134    3                 ADR$=BRK$->BRKPNT.ADR$;

   1134   0 000020  DCC6 0005                            LDB,B5   5,B6
          0 000022  DFC7 000A                            STB,B5   ADR$,AUTO

      383     1135    3                 CALL GDU$SETUP_WINDOW_USER (ADR$,BRK$->BRKPNT.USER#)

   1135   0 000024  CBC6 0008                            LAB,B4   8,B6
          0 000026  CFC7 0010                            STB,B4   ADR$+6,AUTO
          0 000028  BBC7 000A                            LAB,B3   ADR$,AUTO
          0 00002A  BFC7 000E                            STB,B3   ADR$+4,AUTO
          0 00002C  BBC7 000E                            LAB,B3   ADR$+4,AUTO
          0 00002E  CBF0 0200                            LAB,B4   512,IMO
          0 000030  E380 0000 0000  xent                 LNJ,B6   GDU$SETUP_WINDOW_USER
          0 000033       000F                            DC       s:1142,PREL

      384     1136    4                 WHENRETURN DO;

      385     1137    4                    BRK$->BRKPNT.OLDINST=ADR$->MEMORY;

   1137   0 000034  ECC7 0008                            LDB,B6   BRK$,AUTO
          0 000036  DCC7 000A                            LDB,B5   ADR$,AUTO
          0 000038  E805                                 LDR,R6   ,B5
          0 000039  EF46 0007                            STR,R6   7,B6

      386     1138    4                    ADR$->BITMEM=%GD#BREAK_INST;

   1138   0 00003B  DCC7 000A                            LDB,B5   ADR$,AUTO
          0 00003D  5C02                                 LDV,R5   2
          0 00003E  DF05                                 STR,R5   ,B5

      387     1139    4                    BRK$->BRKPNT.FLAGS.ARMED='1'B;

   1139   0 00003F  8946 000A                            LBT,'4000'X       10,B6
   1139   0 000041       4000

PL6.E3A0      #002=GDB$SET_BRKPNT File=GDB$BRKPNTS.:E05TSI                       TUE 07/29/97 21:23 Page:63   
      388     1140    4                    END;

      389     1141    3                 END;

      390     1142    2              BRK$ = BRK$->BRKPNT.FLINK$;

   1142   0 000042  ECC7 0008                            LDB,B6   BRK$,AUTO
          0 000044  DC86                                 LDB,B5   ,B6
          0 000045  DFC7 0008                            STB,B5   BRK$,AUTO

      391     1143    2              END;

   1143   0 000047  8DC7 0008                            CMN      BRK$,AUTO
          0 000049  09C8                                 BNE      s:1129,SPREL

      392     1144
      393     1145        /* If this call was to set a specific breakpoint then just return */
      394     1146
      395     1147    1           IF GD_DATA.GD.STOPT = %G_NO# THEN RETURN;

   1147   0 00004A  EC80 0000 0000  xsym                 LDB,B6   GD$DELTA_DATA$
          0 00004D  82C6 014C                            LB,'0004'X        332,B6
          0 00004F       0004
          0 000050  0501 0004                            BBT      s:1151,PREL

   1147   0 000052  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

      396     1148
      397     1149        /* Indicate we arent stopped. */
      398     1150
      399     1151    1           GD_DATA.GD.STOPT=%G_NO#;

   1151   0 000055  8846 014C                            LBF,'0004'X       332,B6
   1151   0 000057       0004

      400     1152
      401     1153        /* When this routine returns, it will cause its caller to
PL6.E3A0      #002=GDB$SET_BRKPNT File=GDB$BRKPNTS.:E05TSI                       TUE 07/29/97 21:23 Page:64   
      402     1154           return to the trap handler, since the user has typed GO.  We set
      403     1155           up the following cells so the trap handler can use them to setup
      404     1156           the TSA to continue from */
      405     1157
      406     1158    1           GD_DATA.GD.ABSADDR=ADDR(NIL);

   1158   0 000058  CB80 0000 0000                       LAB,B4   0
          0 00005B  CFC6 0145                            STB,B4   325,B6

      407     1159    1           GD_DATA.GD.STEPCNT=0;

   1159   0 00005D  8746 016A                            CL       362,B6

      408     1160    1           GD_DATA.GD.GOTRAP=%G_NO#;

   1160   0 00005F  8846 014C                            LBF,'0020'X       332,B6
   1160   0 000061       0020

      409     1161    1           IF GD$MSG.SUBFB.ADR THEN

   1161   0 000062  BCC7 0006                            LDB,B3   @BUFFER,AUTO
          0 000064  8283                                 LB,'0020'X        ,B3
          0 000065       0020
          0 000066  0581 0005                            BBF      s:1163,PREL

      410     1162    1              GD_DATA.GD.ABSADDR=GD$MSG.GORQS.ADR$;

   1162   0 000068  ACC3 0001                            LDB,B2   1,B3
          0 00006A  AFC6 0145                            STB,B2   325,B6

      411     1163    1           IF GD$MSG.SUBFB.STEP THEN

   1163   0 00006C  8283                                 LB,'0010'X        ,B3
   1163   0 00006D       0010
          0 00006E  0581 0005                            BBF      s:1165,PREL

      412     1164    1              GD_DATA.GD.STEPCNT=GD$MSG.GORQS.SIZE;
PL6.E3A0      #002=GDB$SET_BRKPNT File=GDB$BRKPNTS.:E05TSI                       TUE 07/29/97 21:23 Page:65   

   1164   0 000070  E843 0005                            LDR,R6   5,B3
          0 000072  EF46 016A                            STR,R6   362,B6

      413     1165    1           GD_DATA.GD.SOC = GD$MSG.SUBFB.SOC;

   1165   0 000074  E803                                 LDR,R6   ,B3
          0 000075  6007                                 SOL,R6   7
          0 000076  EAC6 014C                            SRM,R6,'0080'X    332,B6
          0 000078       0080

      414     1166
      415     1167        /* If the user has specified GOTRAP, set a bit to indicate it */
      416     1168
      417     1169    1           IF GD$MSG.SUBFB.GOTRAP THEN

   1169   0 000079  8283                                 LB,'0008'X        ,B3
   1169   0 00007A       0008
          0 00007B  0581 0004                            BBF      s:1172,PREL

      418     1170    1              GD_DATA.GD.GOTRAP=%G_YES#;

   1170   0 00007D  8946 014C                            LBT,'0020'X       332,B6
   1170   0 00007F       0020

      419     1171        /**/
      420     1172    1           GD_DATA.GD.ASDT_OFFSET=GD_DATA.GD.ASDT_USE_OFFSET;

   1172   0 000080  E846 014A                            LDR,R6   330,B6
          0 000082  EF46 0148                            STR,R6   328,B6

      421     1173    1           GD_DATA.GD.ASDT_PPNO=GD_DATA.GD.ASDT_USE_PPNO;

   1173   0 000084  D846 0149                            LDR,R5   329,B6
          0 000086  DF46 0147                            STR,R5   327,B6

      422     1174    1           GD_DATA.GD.USERNO=GD_DATA.GD.USE_USERNO;
PL6.E3A0      #002=GDB$SET_BRKPNT File=GDB$BRKPNTS.:E05TSI                       TUE 07/29/97 21:23 Page:66   

   1174   0 000088  C846 014B                            LDR,R4   331,B6
          0 00008A  CF46 016B                            STR,R4   363,B6

      423     1175        /**/
      424     1176    1           RETURN;

   1176   0 00008C  C380 0000 0000  xent                 LNJ,B4   X6A_ARET
      425     1177
      426     1178    1   END GDB$SET_BRKPNT;
      427     1179        %EOD;

PL6.E3A0      #002=GDB$SET_BRKPNT File=GDB$BRKPNTS.:E05TSI                       TUE 07/29/97 21:23 Page:67   
--  Include file information  --

   GD_BRKPNT_M.:E05TOU  is referenced.
   KH$CHN.:E05TOU  is referenced.
   GD$MACS_M.:E05TOU  is referenced.
   GD$MSG_M.:E05TOU  is referenced.
   GDA_EQUS_E.:E05TOU  is referenced.
   GD_EQUS_E.:E05TOU  is referenced.
   GD_DATA_M.:E05TOU  is referenced.
   GD_STATIC_DATA.:E05TOU  cannot be made into a system file and is referenced.
   LCP_6.:E05TOU  cannot be made into a system file and is referenced.
   G_LCP6_E.:E05TOU  was found in the system file and is referenced.
   GT_LCP6_M.:E05TOU  was found in the system file and is referenced.
   KI_CP6.:E05TOU  was found in the system file and is referenced.
   GF_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GM_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GU_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GJ_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GH_LCP6_M.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure GDB$SET_BRKPNT.
PL6.E3A0      #002=GDB$SET_BRKPNT File=GDB$BRKPNTS.:E05TSI                       TUE 07/29/97 21:23 Page:68   

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     6-0-0/w PTR         r     1 @BUFFER                    4-0-0/w PTR         r     1 @SIZE
     A-0-0/w PTR         r     1 ADR$                       8-0-0/w PTR         r     1 BRK$
    *0-0-0/w ACHR        r     1 BUFFER                    *0-0-0/w STRC(3344)  r     1 GD$MSG
    *0-0-0/w UBIN(16)    r     1 SIZE

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 GD$DELTA_DATA$

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w BIT (16)    r     1 BITMEM                     0-0-0/w STRC(176)   r     1 BRKPNT
     0-0-0/w STRC(16704) r     1 GD_DATA                    0-0-0/w SBIN(16)    r     1 MEMORY


   Procedure GDB$SET_BRKPNT requires 143 words for executable code.
   Procedure GDB$SET_BRKPNT requires 18 words of local(AUTO) storage.
PL6.E3A0      #002=GDB$SET_BRKPNT File=GDB$BRKPNTS.:E05TSI                       TUE 07/29/97 21:23 Page:69   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #002=GDB$SET_BRKPNT File=GDB$BRKPNTS.:E05TSI                       TUE 07/29/97 21:23 Page:70   
          MINI XREF LISTING

ADR$
      1111**DCL      1134<<ASSIGN   1135<>CALL     1137>>ASSIGN   1138>>ASSIGN
BITMEM
       929**DCL      1138<<ASSIGN
BRK$
       927**DCL      1127<<ASSIGN   1128>>DOWHILE  1129>>IF       1129>>IF       1134>>ASSIGN   1135>>CALL
      1137>>ASSIGN   1139>>ASSIGN   1142<<ASSIGN   1142>>ASSIGN
BRKPNT.ADR$
       943**DCL       943--REDEF    1134>>ASSIGN
BRKPNT.FLAGS.ACTIVE
       944**DCL      1129>>IF
BRKPNT.FLAGS.ARMED
       944**DCL      1129>>IF       1139<<ASSIGN
BRKPNT.FLINK$
       943**DCL      1142>>ASSIGN
BRKPNT.OLDINST
       944**DCL      1137<<ASSIGN
BRKPNT.USER#
       944**DCL      1135<>CALL
BUFFER
       950**DCL        20--PROC      968--REDEF
GD$DELTA_DATA$
       641**DCL       655--IMP-PTR  1121>>ASSIGN   1127>>ASSIGN   1147>>IF       1151>>ASSIGN   1158>>ASSIGN
      1159>>ASSIGN   1160>>ASSIGN   1162>>ASSIGN   1164>>ASSIGN   1165>>ASSIGN   1170>>ASSIGN   1172>>ASSIGN
      1172>>ASSIGN   1173>>ASSIGN   1173>>ASSIGN   1174>>ASSIGN   1174>>ASSIGN
GD$MSG.BRKRQS.IF$CONST.SIZE
      1019**DCL      1019--REDEF
GD$MSG.BRKRQS.IF$CONST.TEXT
      1019**DCL      1020--REDEF    1020--REDEF    1021--REDEF    1022--REDEF
GD$MSG.BRKRSP.BRK#
      1033**DCL      1033--REDEF
GD$MSG.BRKRSP.USER#
PL6.E3A0      #002=GDB$SET_BRKPNT File=GDB$BRKPNTS.:E05TSI                       TUE 07/29/97 21:23 Page:71   
      1033**DCL      1033--REDEF
GD$MSG.GORQS.ADR$
      1027**DCL      1162>>ASSIGN
GD$MSG.GORQS.SIZE
      1027**DCL      1164>>ASSIGN
GD$MSG.LETMEM_D.VALUE.SIZE
       991**DCL       991--REDEF
GD$MSG.LETMEM_D.VALUE.TEXT
       992**DCL       992--REDEF     992--REDEF     993--REDEF     994--REDEF
GD$MSG.MESSAGE
       973**DCL       973--REDEF     974--REDEF     974--REDEF     975--REDEF     986--REDEF     999--REDEF
      1004--REDEF    1011--REDEF    1027--REDEF    1032--REDEF    1038--REDEF    1039--REDEF    1068--REDEF
      1070--REDEF    1081--REDEF    1088--REDEF    1100--REDEF
GD$MSG.SUBFB.ADR
       972**DCL      1161>>IF
GD$MSG.SUBFB.GOTRAP
       972**DCL      1169>>IF
GD$MSG.SUBFB.SOC
       972**DCL      1165>>ASSIGN
GD$MSG.SUBFB.STEP
       972**DCL      1163>>IF
GD$MSG.SUBFNC
       968**DCL       968--REDEF     972--REDEF
GD$MSG.TSA.I
      1040**DCL      1040--REDEF
GD$MSG.TSA.S
      1042**DCL      1042--REDEF
GD$MSG.USERQS.ASDT$
      1068**DCL      1068--REDEF    1069--REDEF
GDU$SETUP_WINDOW_USER
      1116**DCL-ENT  1135--CALL
GD_DATA.GD.ABSADDR
       660**DCL      1158<<ASSIGN   1162<<ASSIGN
GD_DATA.GD.ASDT_OFFSET
       661**DCL      1172<<ASSIGN
GD_DATA.GD.ASDT_PPNO
PL6.E3A0      #002=GDB$SET_BRKPNT File=GDB$BRKPNTS.:E05TSI                       TUE 07/29/97 21:23 Page:72   
       660**DCL      1173<<ASSIGN
GD_DATA.GD.ASDT_USE_OFFSET
       661**DCL      1172>>ASSIGN
GD_DATA.GD.ASDT_USE_PPNO
       661**DCL      1173>>ASSIGN
GD_DATA.GD.DYNSP$
       668**DCL       668--REDEF
GD_DATA.GD.GOTRAP
       664**DCL      1160<<ASSIGN   1170<<ASSIGN
GD_DATA.GD.SOC
       664**DCL      1165<<ASSIGN
GD_DATA.GD.STEPCNT
       674**DCL      1159<<ASSIGN   1164<<ASSIGN
GD_DATA.GD.STEP_BRKPNT.ADR$
       669**DCL       670--REDEF
GD_DATA.GD.STEP_BRKPNT.START$
       670**DCL       670--REDEF
GD_DATA.GD.STOPT
       665**DCL      1147>>IF       1151<<ASSIGN
GD_DATA.GD.USERNO
       675**DCL      1174<<ASSIGN
GD_DATA.GD.USE_REAL
       665**DCL      1121<<ASSIGN
GD_DATA.GD.USE_USERNO
       661**DCL      1174>>ASSIGN
GD_DATA.MYSPACE
       686**DCL      1127--ASSIGN
MEMORY
       928**DCL      1137>>ASSIGN
SIZE
      1107**DCL        20--PROC      950--IMP-SIZ
VLP_XBREAK.IC
       861**DCL       861--REDEF
VLP_XBREAK.OLDIC
       861**DCL       862--REDEF     862--REDEF

PL6.E3A0      #003=GDB$RESET_BRKPNT File=GDB$BRKPNTS.:E05TSI                     TUE 07/29/97 21:23 Page:73   
      428        1        /*T***********************************************************/
      429        2        /*T*                                                         */
      430        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      431        4        /*T*                                                         */
      432        5        /*T***********************************************************/
      433        6        %EJECT;
PL6.E3A0      #003=GDB$RESET_BRKPNT File=GDB$BRKPNTS.:E05TSI                     TUE 07/29/97 21:23 Page:74   
      434        7        /*F*   NAME:     GDB$RESET_BRKPNT
      435        8               PURPOSE:  This routine goes through the break table and restores
      436        9                         all active breakpoints to their original contents.
      437       10               CALL:     CALL GDB$RESET_BRKPNT
      438       11               DESCRIPTION:  This routine loops through GD_BRKTBL looking
      439       12                             for active, enabled breakpoints.  When one is
      440       13                             found, memory is restored and the GD_BRKTBL is
      441       14                             updated.  If we are currently running, we
      442       15                             acknolege to the host upon completion.
      443       16        */
      444       17        GDB$RESET_BRKPNT: PROC;
      445       18
      446       19        /* INCLUDES */
      447       20
      448       21        %INCLUDE LCP_6;                        /* Various LCP6 EQUs */
      449      212        %INCLUDE GD_STATIC_DATA;
      450      685        %INCLUDE KH$CHN;
      451      807        %INCLUDE GD_BRKPNT_M;
      452      862
      453      863        /* SYMREFS */
      454      864
      455      865        /* BASED */
      456      866
      457      867    1   DCL MEMORY UBIN BASED;                 /* Memory template */
      458      868    1   DCL BITMEM BIT(16) BASED ALIGNED;
      459      869        %GD_BRKPNT(FPTN=BRKPNT,STCLASS=BASED);
      460      886
      461      887        /* LOCAL */
      462      888
      463      889    1   DCL BRK$ PTR;
      464      890    1   DCL ADR$ PTR;
      465      891    1   DCL BUFFER CHAR(2) ALIGNED;            /* To send message to host */
      466      892    1   DCL I UBIN;
      467      893
      468      894        /* ENTRYS */
      469      895
      470      896    1   DCL GDI$SEND_ERROR_RESPONSE ENTRY(3);
PL6.E3A0      #003=GDB$RESET_BRKPNT File=GDB$BRKPNTS.:E05TSI                     TUE 07/29/97 21:23 Page:75   
      471      897    1   DCL GDU$SETUP_WINDOW_USER ENTRY(2) ALTRET;
      472      898        %EJECT;
PL6.E3A0      #003=GDB$RESET_BRKPNT File=GDB$BRKPNTS.:E05TSI                     TUE 07/29/97 21:23 Page:76   
      473      899        /* Loop through the break table, looking for active, enabled snaps.
      474      900           When one is found, restore the contents of memory and update the
      475      901           breakpoint status in the break table. */
      476      902
      477      903    1           BRK$ = ADDR(GD_DATA.MYSPACE(0));
      478      904    2           DO WHILE BRK$ ~= ADDR(NIL);
      479      905    2              IF BRK$->BRKPNT.FLAGS.ACTIVE
      480      906    3                AND BRK$->BRKPNT.FLAGS.ARMED THEN DO;
      481      907
      482      908        /* Before removing the breakpoint from memory, we have to virtualize the
      483      909           address so that its relative to the user indicated in the table. */
      484      910
      485      911    3                 ADR$=BRK$->BRKPNT.ADR$;
      486      912    3                 CALL GDU$SETUP_WINDOW_USER (ADR$,BRK$->BRKPNT.USER#)
      487      913    4                 WHENRETURN DO;
      488      914    4                    ADR$->MEMORY=BRK$->BRKPNT.OLDINST;
      489      915    4                    BRK$->BRKPNT.FLAGS.ARMED='0'B;
      490      916    4                    END;
      491      917    3                 END;
      492      918    2              BRK$=BRK$->BRKPNT.FLINK$;
      493      919    2              END;
      494      920
      495      921        /* Reset the Step-One-Call breakpoint */
      496      922
      497      923    1           IF GD_DATA.GD.SOC_BRKPNT.FLAGS.ACTIVE AND
      498      924    2             GD_DATA.GD.SOC_BRKPNT.FLAGS.ARMED THEN DO;
      499      925    2              ADR$ = GD_DATA.GD.SOC_BRKPNT.ADR$;
      500      926    2              CALL GDU$SETUP_WINDOW_USER(ADR$,GD_DATA.GD.SOC_BRKPNT.USER#)
      501      927    3              WHENRETURN DO;
      502      928    3                 ADR$->MEMORY = GD_DATA.GD.SOC_BRKPNT.OLDINST;
      503      929    3                 GD_DATA.GD.SOC_BRKPNT = '0'B;
      504      930    3                 END;
      505      931    2              END;
      506      932
      507      933        /* Reset the Step breakpoint */
      508      934
      509      935    1           IF GD_DATA.GD.STEP_BRKPNT.FLAGS.ACTIVE AND
PL6.E3A0      #003=GDB$RESET_BRKPNT File=GDB$BRKPNTS.:E05TSI                     TUE 07/29/97 21:23 Page:77   
      510      936    2             GD_DATA.GD.STEP_BRKPNT.FLAGS.ARMED THEN DO;
      511      937    2              ADR$ = GD_DATA.GD.STEP_BRKPNT.ADR$;
      512      938    2              CALL GDU$SETUP_WINDOW_USER(ADR$,GD_DATA.GD.STEP_BRKPNT.USER#)
      513      939    3              WHENRETURN DO;
      514      940    3                 ADR$->MEMORY = GD_DATA.GD.STEP_BRKPNT.OLDINST;
      515      941    3                 GD_DATA.GD.STEP_BRKPNT = '0'B;
      516      942    3                 END;
      517      943    2              END;
      518      944
      519      945        /* If the FEP is not stopped, tell the host we did a good job. */
      520      946
      521      947    1           IF NOT(GD_DATA.GD.STOPT) THEN
      522      948    1              CALL GDI$SEND_ERROR_RESPONSE (I,BUFFER,%GD#RSPACK);
      523      949        /**/
      524      950    1           GD_DATA.GD.USERNO=GD_DATA.GD.USE_USERNO;
      525      951    1           GD_DATA.GD.ASDT_PPNO=GD_DATA.GD.ASDT_USE_PPNO;
      526      952    1           GD_DATA.GD.ASDT_OFFSET=GD_DATA.GD.ASDT_USE_OFFSET;
      527      953        /**/
      528      954    1           RETURN;
      529      955        /**/
      530      956    1   END GDB$RESET_BRKPNT;
      531      957        %EOD;

PL6.E3A0      #003=GDB$RESET_BRKPNT File=GDB$BRKPNTS.:E05TSI                     TUE 07/29/97 21:23 Page:78   
--  Include file information  --

   GD_BRKPNT_M.:E05TOU  is referenced.
   KH$CHN.:E05TOU  is referenced.
   GD$MSG_M.:E05TOU  is referenced.
   GDA_EQUS_E.:E05TOU  is referenced.
   GD_EQUS_E.:E05TOU  is referenced.
   GD_DATA_M.:E05TOU  is referenced.
   GD_STATIC_DATA.:E05TOU  cannot be made into a system file and is referenced.
   LCP_6.:E05TOU  cannot be made into a system file and is referenced.
   G_LCP6_E.:E05TOU  was found in the system file and is referenced.
   GT_LCP6_M.:E05TOU  was found in the system file and is referenced.
   KI_CP6.:E05TOU  was found in the system file and is referenced.
   GF_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GM_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GU_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GJ_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GH_LCP6_M.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure GDB$RESET_BRKPNT.

   Procedure GDB$RESET_BRKPNT requires 209 words for executable code.
   Procedure GDB$RESET_BRKPNT requires 16 words of local(AUTO) storage.

PL6.E3A0      #003=GDB$RESET_BRKPNT File=GDB$BRKPNTS.:E05TSI                     TUE 07/29/97 21:23 Page:79   

 Object Unit name= GDB$RESET_BRKPNT                           File name= GDB$BRKPNTS.:E05TOU
 UTS= JUL 29 '97 21:23:20.20 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_LCP6_SYSTEM                               Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size HexSiz  Section name
    0   Proc  even  none   209     D1  GDB$RESET_BRKPNT

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect HexLoc Primary Altret sequence   type   Parms  Name
     0      0   yes            yes      Std        0  GDB$RESET_BRKPNT

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       2 GDU$SETUP_WINDOW_USER
         yes           Std       3 GDI$SEND_ERROR_RESPONSE
                       nStd      0 X6A_AUTO_0
                       nStd      0 X6A_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     GD$DELTA_DATA$                   r    G$ROS$
PL6.E3A0      #003=GDB$RESET_BRKPNT File=GDB$BRKPNTS.:E05TSI                     TUE 07/29/97 21:23 Page:80   


      428        1        /*T***********************************************************/
      429        2        /*T*                                                         */
      430        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      431        4        /*T*                                                         */
      432        5        /*T***********************************************************/
      433        6        %EJECT;
PL6.E3A0      #003=GDB$RESET_BRKPNT File=GDB$BRKPNTS.:E05TSI                     TUE 07/29/97 21:23 Page:81   
      434        7        /*F*   NAME:     GDB$RESET_BRKPNT
      435        8               PURPOSE:  This routine goes through the break table and restores
      436        9                         all active breakpoints to their original contents.
      437       10               CALL:     CALL GDB$RESET_BRKPNT
      438       11               DESCRIPTION:  This routine loops through GD_BRKTBL looking
      439       12                             for active, enabled breakpoints.  When one is
      440       13                             found, memory is restored and the GD_BRKTBL is
      441       14                             updated.  If we are currently running, we
      442       15                             acknolege to the host upon completion.
      443       16        */
      444       17        GDB$RESET_BRKPNT: PROC;

     17   0 000000  D380 0000 0000  xent GDB$RESET_BRKPNTLNJ,B5   X6A_AUTO_0
          0 000003       0010 0000                       DC       16,0

      445       18
      446       19        /* INCLUDES */
      447       20
      448       21        %INCLUDE LCP_6;                        /* Various LCP6 EQUs */
      449      212        %INCLUDE GD_STATIC_DATA;
      450      685        %INCLUDE KH$CHN;
      451      807        %INCLUDE GD_BRKPNT_M;
      452      862
      453      863        /* SYMREFS */
      454      864
      455      865        /* BASED */
      456      866
      457      867    1   DCL MEMORY UBIN BASED;                 /* Memory template */
      458      868    1   DCL BITMEM BIT(16) BASED ALIGNED;
      459      869        %GD_BRKPNT(FPTN=BRKPNT,STCLASS=BASED);
      460      886
      461      887        /* LOCAL */
      462      888
      463      889    1   DCL BRK$ PTR;
      464      890    1   DCL ADR$ PTR;
      465      891    1   DCL BUFFER CHAR(2) ALIGNED;            /* To send message to host */
      466      892    1   DCL I UBIN;
PL6.E3A0      #003=GDB$RESET_BRKPNT File=GDB$BRKPNTS.:E05TSI                     TUE 07/29/97 21:23 Page:82   
      467      893
      468      894        /* ENTRYS */
      469      895
      470      896    1   DCL GDI$SEND_ERROR_RESPONSE ENTRY(3);
      471      897    1   DCL GDU$SETUP_WINDOW_USER ENTRY(2) ALTRET;
      472      898        %EJECT;
PL6.E3A0      #003=GDB$RESET_BRKPNT File=GDB$BRKPNTS.:E05TSI                     TUE 07/29/97 21:23 Page:83   
      473      899        /* Loop through the break table, looking for active, enabled snaps.
      474      900           When one is found, restore the contents of memory and update the
      475      901           breakpoint status in the break table. */
      476      902
      477      903    1           BRK$ = ADDR(GD_DATA.MYSPACE(0));

    903   0 000005  EC80 0000 0000  xsym                 LDB,B6   GD$DELTA_DATA$
          0 000008  DBC6 01AE                            LAB,B5   430,B6
          0 00000A  DFC7 0004                            STB,B5   BRK$,AUTO

      478      904    2           DO WHILE BRK$ ~= ADDR(NIL);

    904   0 00000C  0F81 002F                            B        s:919,PREL

      479      905    2              IF BRK$->BRKPNT.FLAGS.ACTIVE

    905   0 00000E  ECC7 0004                            LDB,B6   BRK$,AUTO
          0 000010  89C6 000A                            CMZ      10,B6
          0 000012  0881 0024                            BAGE     s:918,PREL
          0 000014  82C6 000A                            LB,'4000'X        10,B6
          0 000016       4000
          0 000017  0581 001F                            BBF      s:918,PREL

      480      906    3                AND BRK$->BRKPNT.FLAGS.ARMED THEN DO;

      481      907
      482      908        /* Before removing the breakpoint from memory, we have to virtualize the
      483      909           address so that its relative to the user indicated in the table. */
      484      910
      485      911    3                 ADR$=BRK$->BRKPNT.ADR$;

    911   0 000019  DCC6 0005                            LDB,B5   5,B6
          0 00001B  DFC7 0006                            STB,B5   ADR$,AUTO

      486      912    3                 CALL GDU$SETUP_WINDOW_USER (ADR$,BRK$->BRKPNT.USER#)

    912   0 00001D  CBC6 0008                            LAB,B4   8,B6
PL6.E3A0      #003=GDB$RESET_BRKPNT File=GDB$BRKPNTS.:E05TSI                     TUE 07/29/97 21:23 Page:84   
          0 00001F  CFC7 000C                            STB,B4   I+3,AUTO
          0 000021  BBC7 0006                            LAB,B3   ADR$,AUTO
          0 000023  BFC7 000A                            STB,B3   I+1,AUTO
          0 000025  BBC7 000A                            LAB,B3   I+1,AUTO
          0 000027  CBF0 0200                            LAB,B4   512,IMO
          0 000029  E380 0000 0000  xent                 LNJ,B6   GDU$SETUP_WINDOW_USER
          0 00002C       000B                            DC       s:918,PREL

      487      913    4                 WHENRETURN DO;

      488      914    4                    ADR$->MEMORY=BRK$->BRKPNT.OLDINST;

    914   0 00002D  ECC7 0006                            LDB,B6   ADR$,AUTO
          0 00002F  DCC7 0004                            LDB,B5   BRK$,AUTO
          0 000031  E845 0007                            LDR,R6   7,B5
          0 000033  EF06                                 STR,R6   ,B6

      489      915    4                    BRK$->BRKPNT.FLAGS.ARMED='0'B;

    915   0 000034  8845 000A                            LBF,'4000'X       10,B5
    915   0 000036       4000

      490      916    4                    END;

      491      917    3                 END;

      492      918    2              BRK$=BRK$->BRKPNT.FLINK$;

    918   0 000037  ECC7 0004                            LDB,B6   BRK$,AUTO
          0 000039  DC86                                 LDB,B5   ,B6
          0 00003A  DFC7 0004                            STB,B5   BRK$,AUTO

      493      919    2              END;

    919   0 00003C  8DC7 0004                            CMN      BRK$,AUTO
          0 00003E  09D0                                 BNE      s:905,SPREL

PL6.E3A0      #003=GDB$RESET_BRKPNT File=GDB$BRKPNTS.:E05TSI                     TUE 07/29/97 21:23 Page:85   
      494      920
      495      921        /* Reset the Step-One-Call breakpoint */
      496      922
      497      923    1           IF GD_DATA.GD.SOC_BRKPNT.FLAGS.ACTIVE AND

    923   0 00003F  EC80 0000 0000  xsym                 LDB,B6   GD$DELTA_DATA$
          0 000042  89C6 0167                            CMZ      359,B6
          0 000044  0881 002B                            BAGE     s:935,PREL
          0 000046  82C6 0167                            LB,'4000'X        359,B6
          0 000048       4000
          0 000049  0581 0026                            BBF      s:935,PREL

      498      924    2             GD_DATA.GD.SOC_BRKPNT.FLAGS.ARMED THEN DO;

      499      925    2              ADR$ = GD_DATA.GD.SOC_BRKPNT.ADR$;

    925   0 00004B  CCC6 0163                            LDB,B4   355,B6
          0 00004D  CFC7 0006                            STB,B4   ADR$,AUTO

      500      926    2              CALL GDU$SETUP_WINDOW_USER(ADR$,GD_DATA.GD.SOC_BRKPNT.USER#)

    926   0 00004F  BBC6 0166                            LAB,B3   358,B6
          0 000051  BFC7 000C                            STB,B3   I+3,AUTO
          0 000053  ABC7 0006                            LAB,B2   ADR$,AUTO
          0 000055  AFC7 000A                            STB,B2   I+1,AUTO
          0 000057  BBC7 000A                            LAB,B3   I+1,AUTO
          0 000059  CBF0 0200                            LAB,B4   512,IMO
          0 00005B  E380 0000 0000  xent                 LNJ,B6   GDU$SETUP_WINDOW_USER
          0 00005E       0012                            DC       s:935,PREL

      501      927    3              WHENRETURN DO;

      502      928    3                 ADR$->MEMORY = GD_DATA.GD.SOC_BRKPNT.OLDINST;

    928   0 00005F  ECC7 0006                            LDB,B6   ADR$,AUTO
          0 000061  DC80 0000 0000  xsym                 LDB,B5   GD$DELTA_DATA$
          0 000064  E845 0165                            LDR,R6   357,B5
PL6.E3A0      #003=GDB$RESET_BRKPNT File=GDB$BRKPNTS.:E05TSI                     TUE 07/29/97 21:23 Page:86   
          0 000066  EF06                                 STR,R6   ,B6

      503      929    3                 GD_DATA.GD.SOC_BRKPNT = '0'B;

    929   0 000067  EC80 0000 0000  xsym                 LDB,B6   GD$DELTA_DATA$
          0 00006A  5C0A                                 LDV,R5   10
          0 00006B  0021                                 ALR      ;
          0 00006C       4178 0000                                ALPHANUM('0000'X,IMO,,1),;
          0 00006E       4006 0163                                ALPHANUM(355,B6,,R5,FILL)

      504      930    3                 END;

      505      931    2              END;

      506      932
      507      933        /* Reset the Step breakpoint */
      508      934
      509      935    1           IF GD_DATA.GD.STEP_BRKPNT.FLAGS.ACTIVE AND

    935   0 000070  EC80 0000 0000  xsym                 LDB,B6   GD$DELTA_DATA$
          0 000073  89C6 0161                            CMZ      353,B6
          0 000075  437F                                 CSYNC    s:935+4,SPREL
          0 000076  0881 002B                            BAGE     s:947,PREL
          0 000078  82C6 0161                            LB,'4000'X        353,B6
          0 00007A       4000
          0 00007B  0581 0026                            BBF      s:947,PREL

      510      936    2             GD_DATA.GD.STEP_BRKPNT.FLAGS.ARMED THEN DO;

      511      937    2              ADR$ = GD_DATA.GD.STEP_BRKPNT.ADR$;

    937   0 00007D  DCC6 015B                            LDB,B5   347,B6
          0 00007F  DFC7 0006                            STB,B5   ADR$,AUTO

      512      938    2              CALL GDU$SETUP_WINDOW_USER(ADR$,GD_DATA.GD.STEP_BRKPNT.USER#)

    938   0 000081  CBC6 0160                            LAB,B4   352,B6
PL6.E3A0      #003=GDB$RESET_BRKPNT File=GDB$BRKPNTS.:E05TSI                     TUE 07/29/97 21:23 Page:87   
          0 000083  CFC7 000C                            STB,B4   I+3,AUTO
          0 000085  BBC7 0006                            LAB,B3   ADR$,AUTO
          0 000087  BFC7 000A                            STB,B3   I+1,AUTO
          0 000089  BBC7 000A                            LAB,B3   I+1,AUTO
          0 00008B  CBF0 0200                            LAB,B4   512,IMO
          0 00008D  E380 0000 0000  xent                 LNJ,B6   GDU$SETUP_WINDOW_USER
          0 000090       0012                            DC       s:947,PREL

      513      939    3              WHENRETURN DO;

      514      940    3                 ADR$->MEMORY = GD_DATA.GD.STEP_BRKPNT.OLDINST;

    940   0 000091  ECC7 0006                            LDB,B6   ADR$,AUTO
          0 000093  DC80 0000 0000  xsym                 LDB,B5   GD$DELTA_DATA$
          0 000096  E845 015F                            LDR,R6   351,B5
          0 000098  EF06                                 STR,R6   ,B6

      515      941    3                 GD_DATA.GD.STEP_BRKPNT = '0'B;

    941   0 000099  EC80 0000 0000  xsym                 LDB,B6   GD$DELTA_DATA$
          0 00009C  5C10                                 LDV,R5   16
          0 00009D  0021                                 ALR      ;
          0 00009E       4178 0000                                ALPHANUM('0000'X,IMO,,1),;
          0 0000A0       4006 015B                                ALPHANUM(347,B6,,R5,FILL)

      516      942    3                 END;

      517      943    2              END;

      518      944
      519      945        /* If the FEP is not stopped, tell the host we did a good job. */
      520      946
      521      947    1           IF NOT(GD_DATA.GD.STOPT) THEN

    947   0 0000A2  EC80 0000 0000  xsym                 LDB,B6   GD$DELTA_DATA$
          0 0000A5  82C6 014C                            LB,'0004'X        332,B6
          0 0000A7       0004
PL6.E3A0      #003=GDB$RESET_BRKPNT File=GDB$BRKPNTS.:E05TSI                     TUE 07/29/97 21:23 Page:88   
          0 0000A8  437F                                 CSYNC    s:947+5,SPREL
          0 0000A9  0501 0015                            BBT      s:950,PREL

      522      948    1              CALL GDI$SEND_ERROR_RESPONSE (I,BUFFER,%GD#RSPACK);

    948   0 0000AB  DBF0 0023                            LAB,B5   35,IMO
          0 0000AD  DFC7 000E                            STB,B5   I+5,AUTO
          0 0000AF  CBC7 0008                            LAB,B4   BUFFER,AUTO
          0 0000B1  CFC7 000C                            STB,B4   I+3,AUTO
          0 0000B3  BBC7 0009                            LAB,B3   I,AUTO
          0 0000B5  BFC7 000A                            STB,B3   I+1,AUTO
          0 0000B7  BBC7 000A                            LAB,B3   I+1,AUTO
          0 0000B9  CBF0 0300                            LAB,B4   768,IMO
          0 0000BB  E380 0000 0000  xent                 LNJ,B6   GDI$SEND_ERROR_RESPONSE
          0 0000BE       0001                            DC       s:950,PREL

      523      949        /**/
      524      950    1           GD_DATA.GD.USERNO=GD_DATA.GD.USE_USERNO;

    950   0 0000BF  EC80 0000 0000  xsym                 LDB,B6   GD$DELTA_DATA$
          0 0000C2  E846 014B                            LDR,R6   331,B6
          0 0000C4  EF46 016B                            STR,R6   363,B6

      525      951    1           GD_DATA.GD.ASDT_PPNO=GD_DATA.GD.ASDT_USE_PPNO;

    951   0 0000C6  D846 0149                            LDR,R5   329,B6
          0 0000C8  DF46 0147                            STR,R5   327,B6

      526      952    1           GD_DATA.GD.ASDT_OFFSET=GD_DATA.GD.ASDT_USE_OFFSET;

    952   0 0000CA  C846 014A                            LDR,R4   330,B6
          0 0000CC  CF46 0148                            STR,R4   328,B6

      527      953        /**/
      528      954    1           RETURN;

    954   0 0000CE  C380 0000 0000  xent                 LNJ,B4   X6A_ARET
PL6.E3A0      #003=GDB$RESET_BRKPNT File=GDB$BRKPNTS.:E05TSI                     TUE 07/29/97 21:23 Page:89   
      529      955        /**/
      530      956    1   END GDB$RESET_BRKPNT;
      531      957        %EOD;

PL6.E3A0      #003=GDB$RESET_BRKPNT File=GDB$BRKPNTS.:E05TSI                     TUE 07/29/97 21:23 Page:90   
--  Include file information  --

   GD_BRKPNT_M.:E05TOU  is referenced.
   KH$CHN.:E05TOU  is referenced.
   GD$MSG_M.:E05TOU  is referenced.
   GDA_EQUS_E.:E05TOU  is referenced.
   GD_EQUS_E.:E05TOU  is referenced.
   GD_DATA_M.:E05TOU  is referenced.
   GD_STATIC_DATA.:E05TOU  cannot be made into a system file and is referenced.
   LCP_6.:E05TOU  cannot be made into a system file and is referenced.
   G_LCP6_E.:E05TOU  was found in the system file and is referenced.
   GT_LCP6_M.:E05TOU  was found in the system file and is referenced.
   KI_CP6.:E05TOU  was found in the system file and is referenced.
   GF_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GM_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GU_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GJ_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GH_LCP6_M.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure GDB$RESET_BRKPNT.
PL6.E3A0      #003=GDB$RESET_BRKPNT File=GDB$BRKPNTS.:E05TSI                     TUE 07/29/97 21:23 Page:91   

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     6-0-0/w PTR         r     1 ADR$                       4-0-0/w PTR         r     1 BRK$
     8-0-0/w CHAR(2)     r     1 BUFFER                     9-0-0/w UBIN(16)    r     1 I

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 GD$DELTA_DATA$

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(176)   r     1 BRKPNT                     0-0-0/w STRC(16704) r     1 GD_DATA
     0-0-0/w UBIN(16)    r     1 MEMORY


   Procedure GDB$RESET_BRKPNT requires 209 words for executable code.
   Procedure GDB$RESET_BRKPNT requires 16 words of local(AUTO) storage.
PL6.E3A0      #003=GDB$RESET_BRKPNT File=GDB$BRKPNTS.:E05TSI                     TUE 07/29/97 21:23 Page:92   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #003=GDB$RESET_BRKPNT File=GDB$BRKPNTS.:E05TSI                     TUE 07/29/97 21:23 Page:93   
          MINI XREF LISTING

ADR$
       890**DCL       911<<ASSIGN    912<>CALL      914>>ASSIGN    925<<ASSIGN    926<>CALL      928>>ASSIGN
       937<<ASSIGN    938<>CALL      940>>ASSIGN
BRK$
       889**DCL       903<<ASSIGN    904>>DOWHILE   905>>IF        905>>IF        911>>ASSIGN    912>>CALL
       914>>ASSIGN    915>>ASSIGN    918<<ASSIGN    918>>ASSIGN
BRKPNT.ADR$
       882**DCL       882--REDEF     911>>ASSIGN
BRKPNT.FLAGS.ACTIVE
       883**DCL       905>>IF
BRKPNT.FLAGS.ARMED
       883**DCL       905>>IF        915<<ASSIGN
BRKPNT.FLINK$
       882**DCL       918>>ASSIGN
BRKPNT.OLDINST
       883**DCL       914>>ASSIGN
BRKPNT.USER#
       883**DCL       912<>CALL
BUFFER
       891**DCL       948<>CALL
GD$DELTA_DATA$
       638**DCL       652--IMP-PTR   903>>ASSIGN    923>>IF        923>>IF        925>>ASSIGN    926>>CALL
       928>>ASSIGN    929>>ASSIGN    935>>IF        935>>IF        937>>ASSIGN    938>>CALL      940>>ASSIGN
       941>>ASSIGN    947>>IF        950>>ASSIGN    950>>ASSIGN    951>>ASSIGN    951>>ASSIGN    952>>ASSIGN
       952>>ASSIGN
GDI$SEND_ERROR_RESPONSE
       896**DCL-ENT   948--CALL
GDU$SETUP_WINDOW_USER
       897**DCL-ENT   912--CALL      926--CALL      938--CALL
GD_DATA.GD.ASDT_OFFSET
       658**DCL       952<<ASSIGN
GD_DATA.GD.ASDT_PPNO
PL6.E3A0      #003=GDB$RESET_BRKPNT File=GDB$BRKPNTS.:E05TSI                     TUE 07/29/97 21:23 Page:94   
       657**DCL       951<<ASSIGN
GD_DATA.GD.ASDT_USE_OFFSET
       658**DCL       952>>ASSIGN
GD_DATA.GD.ASDT_USE_PPNO
       658**DCL       951>>ASSIGN
GD_DATA.GD.DYNSP$
       665**DCL       665--REDEF
GD_DATA.GD.SOC_BRKPNT
       669**DCL       929<<ASSIGN
GD_DATA.GD.SOC_BRKPNT.ADR$
       670**DCL       925>>ASSIGN
GD_DATA.GD.SOC_BRKPNT.FLAGS.ACTIVE
       670**DCL       923>>IF
GD_DATA.GD.SOC_BRKPNT.FLAGS.ARMED
       671**DCL       923>>IF
GD_DATA.GD.SOC_BRKPNT.OLDINST
       670**DCL       928>>ASSIGN
GD_DATA.GD.SOC_BRKPNT.USER#
       670**DCL       926<>CALL
GD_DATA.GD.STEP_BRKPNT
       666**DCL       941<<ASSIGN
GD_DATA.GD.STEP_BRKPNT.ADR$
       666**DCL       667--REDEF     937>>ASSIGN
GD_DATA.GD.STEP_BRKPNT.FLAGS.ACTIVE
       668**DCL       935>>IF
GD_DATA.GD.STEP_BRKPNT.FLAGS.ARMED
       668**DCL       935>>IF
GD_DATA.GD.STEP_BRKPNT.OLDINST
       667**DCL       940>>ASSIGN
GD_DATA.GD.STEP_BRKPNT.START$
       667**DCL       667--REDEF
GD_DATA.GD.STEP_BRKPNT.USER#
       668**DCL       938<>CALL
GD_DATA.GD.STOPT
       662**DCL       947>>IF
GD_DATA.GD.USERNO
PL6.E3A0      #003=GDB$RESET_BRKPNT File=GDB$BRKPNTS.:E05TSI                     TUE 07/29/97 21:23 Page:95   
       672**DCL       950<<ASSIGN
GD_DATA.GD.USE_USERNO
       658**DCL       950>>ASSIGN
GD_DATA.MYSPACE
       683**DCL       903--ASSIGN
I
       892**DCL       948<>CALL
MEMORY
       867**DCL       914<<ASSIGN    928<<ASSIGN    940<<ASSIGN

PL6.E3A0      #004=GDB$GET_CONTROL File=GDB$BRKPNTS.:E05TSI                      TUE 07/29/97 21:23 Page:96   
      532        1        /*T***********************************************************/
      533        2        /*T*                                                         */
      534        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      535        4        /*T*                                                         */
      536        5        /*T***********************************************************/
      537        6        %EJECT;
PL6.E3A0      #004=GDB$GET_CONTROL File=GDB$BRKPNTS.:E05TSI                      TUE 07/29/97 21:23 Page:97   
      538        7        /*F*   NAME:     GDB$GET_CONTROL
      539        8               PURPOSE:  This routine is called by the host to get control
      540        9                         of the FEP.  This may occurr if the user hits break
      541       10                         in the remote debugger or when we first enter the
      542       11                         remote debugger.
      543       12               CALL:     CALL GDB$GETCONTROL
      544       13               DESCRIPTION:  This routine first checks to see if its being
      545       14                             reentered for some reason and if either the FEP
      546       15                             is stopped or the debugger inhibit level is
      547       16                             active, we just return.  Following this we check
      548       17                             to see if there is currently a temporery breakpoint
      549       18                             set and we remove it if there is one.  We then
      550       19                             look for the highest active level and set a
      551       20                             breakpoint trap at the P counter for that level
      552       21                             so that we will get control immediatly upon
      553       22                             exiting the current level.
      554       23        */
      555       24        GDB$GET_CONTROL: PROC;
      556       25
      557       26        /* INCLUDES */
      558       27
      559       28        %INCLUDE LCP_6;                        /* Various LCP6 EQUs */
      560      219        %INCLUDE G_HJIT_M;
      561      364        %INCLUDE G_JIT_M;
      562      629        %INCLUDE GD_STATIC_DATA;
      563     1102        %INCLUDE GD$MACS_M;                    /* Assorted debugger macros */
      564     1140        %INCLUDE KH$CHN;
      565     1262
      566     1263        /* SYMREFS */
      567     1264
      568     1265    1   DCL G$MHJIT$ PTR SYMREF;
      569     1266    1   DCL G$ASDT_USR$ PTR SYMREF;
      570     1267    1   DCL G$JIT$ PTR SYMREF;
      571     1268    1   DCL G$LOW_MEM$ PTR SYMREF;      /* Pointer to base of low memory */
      572     1269        %G$MHJIT(STCLASS="BASED(G$MHJIT$)");
      573     8143        %G$SEGDESC (FPTN=G$SEGDESC, STCLASS=BASED);
      574     8165        %G$JIT(STCLASS="BASED(JIT$)");
PL6.E3A0      #004=GDB$GET_CONTROL File=GDB$BRKPNTS.:E05TSI                      TUE 07/29/97 21:23 Page:98   
      575     8579        %G$ISA(STCLASS=BASED);                 /* ISA template */
      576     8882        %G$LOW_MEM(STCLASS="BASED(G$LOW_MEM$)"); /* Low memory template */
      577     8931    1   DCL MEMORY UBIN BASED;                 /* Memory template */
      578     8932    1   DCL BITMEM BIT(16) BASED ALIGNED;
      579     8933
      580     8934        /* TEMPS */
      581     8935
      582     8936    1   DCL BRK$ PTR;
      583     8937    1   DCL ISA$ PTR;                          /* Temp ISA pointer */
      584     8938    1   DCL LEVEL UBIN;                        /* Holds active level */
      585     8939    1   DCL P$ PTR;
      586     8940    1   DCL P REDEF P$ UBIN(32);
      587     8941    1   DCL JIT$ PTR;
      588     8942
      589     8943        /* ENTRYS */
      590     8944
      591     8945    1   DCL GDU$SETUP_WINDOW_USER ENTRY(2) ALTRET;
      592     8946    1   DCL GDU$SETUP_WINDOW ENTRY(1) ALTRET;
      593     8947        %EJECT;
PL6.E3A0      #004=GDB$GET_CONTROL File=GDB$BRKPNTS.:E05TSI                      TUE 07/29/97 21:23 Page:99   
      594     8948        /* Prevent re-entry of this routine */
      595     8949
      596     8950    2           IF GD_DATA.GD.STOPT OR G$LOW_MEM.LVL_ACT(%G_IL_DBINH#) THEN DO;
      597     8951    2              GD_DATA.GD.NEWCTL = %G_ON#;
      598     8952    2              RETURN;
      599     8953    2              END;
      600     8954
      601     8955        /*  If there is currently a temporary breakpoint set, ZAP it,
      602     8956            it didnt  work real well. */
      603     8957
      604     8958    2           IF GD_DATA.GD.STEP_BRKPNT.FLAGS.ACTIVE THEN DO;
      605     8959    2              GD_DATA.GD.STEP_BRKPNT.FLAGS=%G_DISABLE#;
      606     8960    2              CALL GDU$SETUP_WINDOW_USER (GD_DATA.GD.STEP_BRKPNT.ADR$,
      607     8961    2                                          GD_DATA.GD.STEP_BRKPNT.USER#)
      608     8962    3              WHENRETURN DO;
      609     8963    3                 GD_DATA.GD.STEP_BRKPNT.ADR$->MEMORY =
      610     8964    3                    GD_DATA.GD.STEP_BRKPNT.OLDINST;
      611     8965    3                 END;
      612     8966    2              END;
      613     8967
      614     8968        /* Find the highest active level that can be stopped and set a breakpoint
      615     8969           at the location indicated by that levels P counter */
      616     8970
      617     8971    2           DO LEVEL=%(G_IL_DBINH#+1) TO 63;
      618     8972    2              IF G$LOW_MEM.LVL_ACT(LEVEL) AND
      619     8973    3                 G$LOW_MEM.IV.IL$(LEVEL) ~= ADDR(NIL) THEN DO;
      620     8974    3                 GD_DATA.GD.STEP_BRKPNT.FLAGS.ACTIVE = '1'B;
      621     8975    3                 GD_DATA.GD.STEP_BRKPNT.FLAGS.ARMED = '1'B;
      622     8976    3                 ISA$=PINCRW(G$LOW_MEM.IV.IL$(LEVEL),-5);
      623     8977    3                 P$=ISA$->G$ISA.P$;
      624     8978    3                 GD_DATA.GD.STEP_BRKPNT.ADR$=P$;
      625     8979    3                 GD_DATA.GD.STEP_BRKPNT.USER#=0;
      626     8980    3                 GD_DATA.GD.WINDOWSEG=%ASDT_WINDOW#;
      627     8981    4                 IF ISA$->G$ISA.ASV$=G$ASDT_USR$ AND P>65535 THEN DO;
      628     8982    4                    GD_DATA.GD.ASDT_PPNO=G$MHJIT.ASDT_MON.UMHJIT.BASE;
      629     8983    4                    GD_DATA.GD.ASDT_OFFSET=0;
      630     8984
PL6.E3A0      #004=GDB$GET_CONTROL File=GDB$BRKPNTS.:E05TSI                      TUE 07/29/97 21:23 Page:100  
      631     8985        /* Setup a pointer to the JIT, since we may or may not be mapped
      632     8986           onto it at the time. */
      633     8987
      634     8988    4                    JIT$=G$JIT$;
      635     8989    4                    CALL GDU$SETUP_WINDOW (JIT$)
      636     8990    5                    WHENRETURN DO;
      637     8991    5                       GD_DATA.GD.STEP_BRKPNT.USER#=G$JIT.USR#;
      638     8992    5                       END;
      639     8993    5                    CALL GDU$SETUP_WINDOW (P$) WHENALTRETURN DO;
      640     8994    5                       P$=G$MHJIT$;
      641     8995    5                       END;
      642     8996    4                    IF %ASDT_WINDOW#=G$MHJIT.ASDT_MON.DB_PROC
      643     8997    4                   THEN P$=G$MHJIT$;    /* Don't set brkpnt in delta */
      644     8998    4                    END;
      645     8999    4                 IF P$~=G$MHJIT$ THEN DO;
      646     9000    4                    GD_DATA.GD.STEP_BRKPNT.OLDINST=P$->MEMORY;
      647     9001    4                    P$->BITMEM=%GD#BREAK_INST;
      648     9002    4                    END;
      649     9003    3                 IF ISA$->G$ISA.ISM1='FFFF'X THEN
      650     9004    3                    ISA$->G$ISA.REGS.M1.J=%G_ENABLE#;
      651     9005    3                 %ASDT_WINDOW#=GD_DATA.GD.WINDOWSEG;
      652     9006    3                 LEVEL=63;
      653     9007    3                 END;
      654     9008    2              END;
      655     9009        /**/
      656     9010    1           RETURN;
      657     9011        /**/
      658     9012    1   END GDB$GET_CONTROL;
      659     9013        %EOD;

PL6.E3A0      #004=GDB$GET_CONTROL File=GDB$BRKPNTS.:E05TSI                      TUE 07/29/97 21:23 Page:101  
--  Include file information  --

   KH$CHN.:E05TOU  is referenced.
   GD$MACS_M.:E05TOU  is referenced.
   GD$MSG_M.:E05TOU  is referenced.
   GDA_EQUS_E.:E05TOU  is referenced.
   GD_EQUS_E.:E05TOU  is referenced.
   GD_DATA_M.:E05TOU  is referenced.
   GD_STATIC_DATA.:E05TOU  cannot be made into a system file and is referenced.
   G_JIT_M.:E05TOU  is referenced.
   G_HJIT_M.:E05TOU  is referenced.
   LCP_6.:E05TOU  cannot be made into a system file and is referenced.
   G_LCP6_E.:E05TOU  was found in the system file and is referenced.
   GT_LCP6_M.:E05TOU  was found in the system file and is referenced.
   KI_CP6.:E05TOU  was found in the system file and is referenced.
   GF_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GM_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GU_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GJ_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GH_LCP6_M.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure GDB$GET_CONTROL.

   Procedure GDB$GET_CONTROL requires 241 words for executable code.
   Procedure GDB$GET_CONTROL requires 18 words of local(AUTO) storage.

PL6.E3A0      #004=GDB$GET_CONTROL File=GDB$BRKPNTS.:E05TSI                      TUE 07/29/97 21:23 Page:102  

 Object Unit name= GDB$GET_CONTROL                            File name= GDB$BRKPNTS.:E05TOU
 UTS= JUL 29 '97 21:23:30.64 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_LCP6_SYSTEM                               Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size HexSiz  Section name
    0   Proc  even  none   241     F1  GDB$GET_CONTROL

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect HexLoc Primary Altret sequence   type   Parms  Name
     0      0   yes            yes      Std        0  GDB$GET_CONTROL

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       2 GDU$SETUP_WINDOW_USER
 yes     yes           Std       1 GDU$SETUP_WINDOW
                       nStd      0 X6A_AUTO_0
                       nStd      0 X6A_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     GD$DELTA_DATA$                        G$MHJIT$                              G$ASDT_USR$
     G$JIT$                                G$LOW_MEM$                       r    G$ROS$
PL6.E3A0      #004=GDB$GET_CONTROL File=GDB$BRKPNTS.:E05TSI                      TUE 07/29/97 21:23 Page:103  


      532        1        /*T***********************************************************/
      533        2        /*T*                                                         */
      534        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      535        4        /*T*                                                         */
      536        5        /*T***********************************************************/
      537        6        %EJECT;
PL6.E3A0      #004=GDB$GET_CONTROL File=GDB$BRKPNTS.:E05TSI                      TUE 07/29/97 21:23 Page:104  
      538        7        /*F*   NAME:     GDB$GET_CONTROL
      539        8               PURPOSE:  This routine is called by the host to get control
      540        9                         of the FEP.  This may occurr if the user hits break
      541       10                         in the remote debugger or when we first enter the
      542       11                         remote debugger.
      543       12               CALL:     CALL GDB$GETCONTROL
      544       13               DESCRIPTION:  This routine first checks to see if its being
      545       14                             reentered for some reason and if either the FEP
      546       15                             is stopped or the debugger inhibit level is
      547       16                             active, we just return.  Following this we check
      548       17                             to see if there is currently a temporery breakpoint
      549       18                             set and we remove it if there is one.  We then
      550       19                             look for the highest active level and set a
      551       20                             breakpoint trap at the P counter for that level
      552       21                             so that we will get control immediatly upon
      553       22                             exiting the current level.
      554       23        */
      555       24        GDB$GET_CONTROL: PROC;

     24   0 000000  D380 0000 0000  xent GDB$GET_CONTROL LNJ,B5   X6A_AUTO_0
          0 000003       0012 0000                       DC       18,0

      556       25
      557       26        /* INCLUDES */
      558       27
      559       28        %INCLUDE LCP_6;                        /* Various LCP6 EQUs */
      560      219        %INCLUDE G_HJIT_M;
      561      364        %INCLUDE G_JIT_M;
      562      629        %INCLUDE GD_STATIC_DATA;
      563     1102        %INCLUDE GD$MACS_M;                    /* Assorted debugger macros */
      564     1140        %INCLUDE KH$CHN;
      565     1262
      566     1263        /* SYMREFS */
      567     1264
      568     1265    1   DCL G$MHJIT$ PTR SYMREF;
      569     1266    1   DCL G$ASDT_USR$ PTR SYMREF;
      570     1267    1   DCL G$JIT$ PTR SYMREF;
PL6.E3A0      #004=GDB$GET_CONTROL File=GDB$BRKPNTS.:E05TSI                      TUE 07/29/97 21:23 Page:105  
      571     1268    1   DCL G$LOW_MEM$ PTR SYMREF;      /* Pointer to base of low memory */
      572     1269        %G$MHJIT(STCLASS="BASED(G$MHJIT$)");
      573     8143        %G$SEGDESC (FPTN=G$SEGDESC, STCLASS=BASED);
      574     8165        %G$JIT(STCLASS="BASED(JIT$)");
      575     8579        %G$ISA(STCLASS=BASED);                 /* ISA template */
      576     8882        %G$LOW_MEM(STCLASS="BASED(G$LOW_MEM$)"); /* Low memory template */
      577     8931    1   DCL MEMORY UBIN BASED;                 /* Memory template */
      578     8932    1   DCL BITMEM BIT(16) BASED ALIGNED;
      579     8933
      580     8934        /* TEMPS */
      581     8935
      582     8936    1   DCL BRK$ PTR;
      583     8937    1   DCL ISA$ PTR;                          /* Temp ISA pointer */
      584     8938    1   DCL LEVEL UBIN;                        /* Holds active level */
      585     8939    1   DCL P$ PTR;
      586     8940    1   DCL P REDEF P$ UBIN(32);
      587     8941    1   DCL JIT$ PTR;
      588     8942
      589     8943        /* ENTRYS */
      590     8944
      591     8945    1   DCL GDU$SETUP_WINDOW_USER ENTRY(2) ALTRET;
      592     8946    1   DCL GDU$SETUP_WINDOW ENTRY(1) ALTRET;
      593     8947        %EJECT;
PL6.E3A0      #004=GDB$GET_CONTROL File=GDB$BRKPNTS.:E05TSI                      TUE 07/29/97 21:23 Page:106  
      594     8948        /* Prevent re-entry of this routine */
      595     8949
      596     8950    2           IF GD_DATA.GD.STOPT OR G$LOW_MEM.LVL_ACT(%G_IL_DBINH#) THEN DO;

   8950   0 000005  EC80 0000 0000  xsym                 LDB,B6   GD$DELTA_DATA$
          0 000008  82C6 014C                            LB,'0004'X        332,B6
          0 00000A       0004
          0 00000B  0501 0009                            BBT      s:8951,PREL
          0 00000D  DC80 0000 0000  xsym                 LDB,B5   G$LOW_MEM$
          0 000010  82C5 0020                            LB,'0020'X        32,B5
          0 000012       0020
          0 000013  0581 0007                            BBF      s:8958,PREL

      597     8951    2              GD_DATA.GD.NEWCTL = %G_ON#;

   8951   0 000015  8946 014D                            LBT,'8000'X       333,B6
   8951   0 000017       8000

      598     8952    2              RETURN;

   8952   0 000018  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

      599     8953    2              END;
      600     8954
      601     8955        /*  If there is currently a temporary breakpoint set, ZAP it,
      602     8956            it didnt  work real well. */
      603     8957
      604     8958    2           IF GD_DATA.GD.STEP_BRKPNT.FLAGS.ACTIVE THEN DO;

   8958   0 00001B  89C6 0161                            CMZ      353,B6
          0 00001D  0881 001B                            BAGE     s:8971,PREL

      605     8959    2              GD_DATA.GD.STEP_BRKPNT.FLAGS=%G_DISABLE#;

   8959   0 00001F  87C6 0161                            CLH      353,B6

      606     8960    2              CALL GDU$SETUP_WINDOW_USER (GD_DATA.GD.STEP_BRKPNT.ADR$,
PL6.E3A0      #004=GDB$GET_CONTROL File=GDB$BRKPNTS.:E05TSI                      TUE 07/29/97 21:23 Page:107  

   8960   0 000021  CBC6 0160                            LAB,B4   352,B6
          0 000023  CFC7 0010                            STB,B4   JIT$+5,AUTO
          0 000025  BBC6 015B                            LAB,B3   347,B6
          0 000027  BFC7 000E                            STB,B3   JIT$+3,AUTO
          0 000029  BBC7 000E                            LAB,B3   JIT$+3,AUTO
          0 00002B  CBF0 0200                            LAB,B4   512,IMO
          0 00002D  E380 0000 0000  xent                 LNJ,B6   GDU$SETUP_WINDOW_USER
          0 000030       0009                            DC       s:8971,PREL

      607     8961    2                                          GD_DATA.GD.STEP_BRKPNT.USER#)
      608     8962    3              WHENRETURN DO;

      609     8963    3                 GD_DATA.GD.STEP_BRKPNT.ADR$->MEMORY =

   8963   0 000031  EC80 0000 0000  xsym                 LDB,B6   GD$DELTA_DATA$
          0 000034  DCC6 015B                            LDB,B5   347,B6
          0 000036  E846 015F                            LDR,R6   351,B6
          0 000038  EF05                                 STR,R6   ,B5

      610     8964    3                    GD_DATA.GD.STEP_BRKPNT.OLDINST;
      611     8965    3                 END;

      612     8966    2              END;

      613     8967
      614     8968        /* Find the highest active level that can be stopped and set a breakpoint
      615     8969           at the location indicated by that levels P counter */
      616     8970
      617     8971    2           DO LEVEL=%(G_IL_DBINH#+1) TO 63;

   8971   0 000039  6C0B                                 LDV,R6   11
          0 00003A  EF47 0008                            STR,R6   LEVEL,AUTO

      618     8972    2              IF G$LOW_MEM.LVL_ACT(LEVEL) AND

   8972   0 00003C  EC80 0000 0000  xsym                 LDB,B6   G$LOW_MEM$
PL6.E3A0      #004=GDB$GET_CONTROL File=GDB$BRKPNTS.:E05TSI                      TUE 07/29/97 21:23 Page:108  
          0 00003F  DBC6 0020                            LAB,B5   32,B6
          0 000041  B847 0008                            LDR,R3   LEVEL,AUTO
          0 000043  82B5                                 LB       ,B5,R3
          0 000044  0581 00A2                            BBF      s:9008,PREL
          0 000046  3E40                                 ADV,R3   64
          0 000047  8DB6                                 CMN      ,B6,R3
          0 000048  0901 009E                            BE       s:9008,PREL

      619     8973    3                 G$LOW_MEM.IV.IL$(LEVEL) ~= ADDR(NIL) THEN DO;

      620     8974    3                 GD_DATA.GD.STEP_BRKPNT.FLAGS.ACTIVE = '1'B;

   8974   0 00004A  DC80 0000 0000  xsym                 LDB,B5   GD$DELTA_DATA$
          0 00004D  8945 0161                            LBT,'8000'X       353,B5
          0 00004F       8000

      621     8975    3                 GD_DATA.GD.STEP_BRKPNT.FLAGS.ARMED = '1'B;

   8975   0 000050  8945 0161                            LBT,'4000'X       353,B5
   8975   0 000052       4000

      622     8976    3                 ISA$=PINCRW(G$LOW_MEM.IV.IL$(LEVEL),-5);

   8976   0 000053  CCB6                                 LDB,B4   ,B6,R3
          0 000054  BBC4 FFFB                            LAB,B3   -5,B4
          0 000056  BFC7 0006                            STB,B3   ISA$,AUTO

      623     8977    3                 P$=ISA$->G$ISA.P$;

   8977   0 000058  ACC3 0008                            LDB,B2   8,B3
          0 00005A  AFC7 0009                            STB,B2   P$,AUTO

      624     8978    3                 GD_DATA.GD.STEP_BRKPNT.ADR$=P$;

   8978   0 00005C  AFC5 015B                            STB,B2   347,B5

      625     8979    3                 GD_DATA.GD.STEP_BRKPNT.USER#=0;
PL6.E3A0      #004=GDB$GET_CONTROL File=GDB$BRKPNTS.:E05TSI                      TUE 07/29/97 21:23 Page:109  

   8979   0 00005E  8745 0160                            CL       352,B5

      626     8980    3                 GD_DATA.GD.WINDOWSEG=%ASDT_WINDOW#;

   8980   0 000060  CCC5 017A                            LDB,B4   378,B5
          0 000062  8C84                                 LDI      ,B4
          0 000063  8D45 0168                            SDI      360,B5

      627     8981    4                 IF ISA$->G$ISA.ASV$=G$ASDT_USR$ AND P>65535 THEN DO;

   8981   0 000065  9C83                                 LDB,B1   ,B3
          0 000066  9D80 0000 0000  xsym                 CMB,B1   G$ASDT_USR$
          0 000069  0981 0058                            BNE      s:8999,PREL
          0 00006B  8CC7 0009                            LDI      P$,AUTO
          0 00006D  84F0 0000 FFFF                       SID      65535,IMO
          0 000070  0681 0051                            BCF      s:8999,PREL
          0 000072  6981 0003                            BNEZ,R6  s:8982,PREL
          0 000074  7901 004D                            BEZ,R7   s:8999,PREL

      628     8982    4                    GD_DATA.GD.ASDT_PPNO=G$MHJIT.ASDT_MON.UMHJIT.BASE;

   8982   0 000076  EC80 0000 0000  xsym                 LDB,B6   G$MHJIT$
          0 000079  E846 000A                            LDR,R6   10,B6
          0 00007B  E570 7FFF                            AND,R6   32767,IMO
          0 00007D  EF45 0147                            STR,R6   327,B5

      629     8983    4                    GD_DATA.GD.ASDT_OFFSET=0;

   8983   0 00007F  8745 0148                            CL       328,B5

      630     8984
      631     8985        /* Setup a pointer to the JIT, since we may or may not be mapped
      632     8986           onto it at the time. */
      633     8987
      634     8988    4                    JIT$=G$JIT$;

PL6.E3A0      #004=GDB$GET_CONTROL File=GDB$BRKPNTS.:E05TSI                      TUE 07/29/97 21:23 Page:110  
   8988   0 000081  9C80 0000 0000  xsym                 LDB,B1   G$JIT$
          0 000084  9FC7 000B                            STB,B1   JIT$,AUTO

      635     8989    4                    CALL GDU$SETUP_WINDOW (JIT$)

   8989   0 000086  EBC7 000B                            LAB,B6   JIT$,AUTO
          0 000088  EFC7 000E                            STB,B6   JIT$+3,AUTO
          0 00008A  BBC7 000E                            LAB,B3   JIT$+3,AUTO
          0 00008C  CBF0 0100                            LAB,B4   256,IMO
          0 00008E  E380 0000 0000  xent                 LNJ,B6   GDU$SETUP_WINDOW
          0 000091       000C                            DC       s:8993,PREL

      636     8990    5                    WHENRETURN DO;

      637     8991    5                       GD_DATA.GD.STEP_BRKPNT.USER#=G$JIT.USR#;

   8991   0 000092  EC80 0000 0000  xsym                 LDB,B6   GD$DELTA_DATA$
          0 000095  DCC7 000B                            LDB,B5   JIT$,AUTO
          0 000097  E845 0004                            LDR,R6   4,B5
          0 000099  E570 00FF                            AND,R6   255,IMO
          0 00009B  EF46 0160                            STR,R6   352,B6

      638     8992    5                       END;

      639     8993    5                    CALL GDU$SETUP_WINDOW (P$) WHENALTRETURN DO;

   8993   0 00009D  EBC7 0009                            LAB,B6   P$,AUTO
          0 00009F  EFC7 000E                            STB,B6   JIT$+3,AUTO
          0 0000A1  BBC7 000E                            LAB,B3   JIT$+3,AUTO
          0 0000A3  CBF0 0100                            LAB,B4   256,IMO
          0 0000A5  E380 0000 0000  xent                 LNJ,B6   GDU$SETUP_WINDOW
          0 0000A8       0003                            DC       s:8994,PREL
          0 0000A9  0F81 0006                            B        s:8996,PREL

      640     8994    5                       P$=G$MHJIT$;

   8994   0 0000AB  EC80 0000 0000  xsym                 LDB,B6   G$MHJIT$
PL6.E3A0      #004=GDB$GET_CONTROL File=GDB$BRKPNTS.:E05TSI                      TUE 07/29/97 21:23 Page:111  
          0 0000AE  EFC7 0009                            STB,B6   P$,AUTO

      641     8995    5                       END;

      642     8996    4                    IF %ASDT_WINDOW#=G$MHJIT.ASDT_MON.DB_PROC

   8996   0 0000B0  EC80 0000 0000  xsym                 LDB,B6   GD$DELTA_DATA$
          0 0000B3  DCC6 017A                            LDB,B5   378,B6
          0 0000B5  CC80 0000 0000  xsym                 LDB,B4   G$MHJIT$
          0 0000B8  5C04                                 LDV,R5   4
          0 0000B9  0022                                 ACM      ;
          0 0000BA       4405 0000                                ALPHANUM(0,B5,,4,FILL),;
          0 0000BC       4004 002E                                ALPHANUM(46,B4,,R5,FILL)
          0 0000BE  5301 0003                            CBNE     s:8999,PREL

      643     8997    4                   THEN P$=G$MHJIT$;    /* Don't set brkpnt in delta */

   8997   0 0000C0  CFC7 0009                            STB,B4   P$,AUTO

      644     8998    4                    END;

      645     8999    4                 IF P$~=G$MHJIT$ THEN DO;

   8999   0 0000C2  ECC7 0009                            LDB,B6   P$,AUTO
          0 0000C4  ED80 0000 0000  xsym                 CMB,B6   G$MHJIT$
          0 0000C7  0901 0009                            BE       s:9003,PREL

      646     9000    4                    GD_DATA.GD.STEP_BRKPNT.OLDINST=P$->MEMORY;

   9000   0 0000C9  DC80 0000 0000  xsym                 LDB,B5   GD$DELTA_DATA$
          0 0000CC  E806                                 LDR,R6   ,B6
          0 0000CD  EF45 015F                            STR,R6   351,B5

      647     9001    4                    P$->BITMEM=%GD#BREAK_INST;

   9001   0 0000CF  5C02                                 LDV,R5   2
          0 0000D0  DF06                                 STR,R5   ,B6
PL6.E3A0      #004=GDB$GET_CONTROL File=GDB$BRKPNTS.:E05TSI                      TUE 07/29/97 21:23 Page:112  

      648     9002    4                    END;

      649     9003    3                 IF ISA$->G$ISA.ISM1='FFFF'X THEN

   9003   0 0000D1  ECC7 0006                            LDB,B6   ISA$,AUTO
          0 0000D3  E846 0006                            LDR,R6   6,B6
          0 0000D5  E970 FFFF                            CMR,R6   -1,IMO
          0 0000D7  0981 0004                            BNE      s:9005,PREL

      650     9004    3                    ISA$->G$ISA.REGS.M1.J=%G_ENABLE#;

   9004   0 0000D9  8946 0021                            LBT,'0080'X       33,B6
   9004   0 0000DB       0080

      651     9005    3                 %ASDT_WINDOW#=GD_DATA.GD.WINDOWSEG;

   9005   0 0000DC  DC80 0000 0000  xsym                 LDB,B5   GD$DELTA_DATA$
          0 0000DF  CCC5 017A                            LDB,B4   378,B5
          0 0000E1  8CC5 0168                            LDI      360,B5
          0 0000E3  8D04                                 SDI      ,B4

      652     9006    3                 LEVEL=63;

   9006   0 0000E4  6C3F                                 LDV,R6   63
          0 0000E5  EF47 0008                            STR,R6   LEVEL,AUTO

      653     9007    3                 END;

      654     9008    2              END;

   9008   0 0000E7  8AC7 0008                            INC      LEVEL,AUTO
          0 0000E9  E847 0008                            LDR,R6   LEVEL,AUTO
          0 0000EB  6D3F                                 CMV,R6   63
          0 0000EC  0381 FF4F                            BLE      s:8972,PREL

      655     9009        /**/
PL6.E3A0      #004=GDB$GET_CONTROL File=GDB$BRKPNTS.:E05TSI                      TUE 07/29/97 21:23 Page:113  
      656     9010    1           RETURN;

   9010   0 0000EE  C380 0000 0000  xent                 LNJ,B4   X6A_ARET
      657     9011        /**/
      658     9012    1   END GDB$GET_CONTROL;
      659     9013        %EOD;

PL6.E3A0      #004=GDB$GET_CONTROL File=GDB$BRKPNTS.:E05TSI                      TUE 07/29/97 21:23 Page:114  
--  Include file information  --

   KH$CHN.:E05TOU  is referenced.
   GD$MACS_M.:E05TOU  is referenced.
   GD$MSG_M.:E05TOU  is referenced.
   GDA_EQUS_E.:E05TOU  is referenced.
   GD_EQUS_E.:E05TOU  is referenced.
   GD_DATA_M.:E05TOU  is referenced.
   GD_STATIC_DATA.:E05TOU  cannot be made into a system file and is referenced.
   G_JIT_M.:E05TOU  is referenced.
   G_HJIT_M.:E05TOU  is referenced.
   LCP_6.:E05TOU  cannot be made into a system file and is referenced.
   G_LCP6_E.:E05TOU  was found in the system file and is referenced.
   GT_LCP6_M.:E05TOU  was found in the system file and is referenced.
   KI_CP6.:E05TOU  was found in the system file and is referenced.
   GF_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GM_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GU_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GJ_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GH_LCP6_M.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure GDB$GET_CONTROL.
PL6.E3A0      #004=GDB$GET_CONTROL File=GDB$BRKPNTS.:E05TSI                      TUE 07/29/97 21:23 Page:115  

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     6-0-0/w PTR         r     1 ISA$                       B-0-0/w PTR         r     1 JIT$
     8-0-0/w UBIN(16)    r     1 LEVEL                      9-0-0/w UBIN(32)    r     1 P
     9-0-0/w PTR         r     1 P$

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 G$ASDT_USR$                0-0-0/w PTR         r     1 G$JIT$
     0-0-0/w PTR         r     1 G$LOW_MEM$                 0-0-0/w PTR         r     1 G$MHJIT$
     0-0-0/w PTR         r     1 GD$DELTA_DATA$

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w BIT (16)    r     1 BITMEM                     0-0-0/w STRC(720)   r     1 G$ISA
     0-0-0/w STRC(5616)  r     1 G$JIT                      0-0-0/w STRC(4096)  r     1 G$LOW_MEM
     0-0-0/w STRC(27232) r     1 G$MHJIT                    0-0-0/w STRC(32)    r     1 G$SEGDESC
     0-0-0/w STRC(16704) r     1 GD_DATA                    0-0-0/w UBIN(16)    r     1 MEMORY


   Procedure GDB$GET_CONTROL requires 241 words for executable code.
   Procedure GDB$GET_CONTROL requires 18 words of local(AUTO) storage.
PL6.E3A0      #004=GDB$GET_CONTROL File=GDB$BRKPNTS.:E05TSI                      TUE 07/29/97 21:23 Page:116  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #004=GDB$GET_CONTROL File=GDB$BRKPNTS.:E05TSI                      TUE 07/29/97 21:23 Page:117  
          MINI XREF LISTING

BITMEM
      8932**DCL      9001<<ASSIGN
G$ASDT_USR$
      1266**DCL      8981>>IF
G$ISA.ASV$
      8610**DCL      8981>>IF
G$ISA.ISM1
      8650**DCL      9003>>IF
G$ISA.P$
      8683**DCL      8977>>ASSIGN
G$ISA.P$$
      8683**DCL      8683--REDEF
G$ISA.REGS.M1.J
      8777**DCL      9004<<ASSIGN
G$JIT.ERRLOG
      8509**DCL      8512--REDEF
G$JIT.JSUNIT
      8248**DCL      8249--REDEF
G$JIT.MCLS
      8247**DCL      8247--REDEF
G$JIT.TMRZ
      8516**DCL      8517--REDEF
G$JIT.USER_EXTIME
      8240**DCL      8241--REDEF
G$JIT.USER_MEMTIME
      8243**DCL      8243--REDEF
G$JIT.USER_SVTIME
      8242**DCL      8242--REDEF
G$JIT.USR#
      8237**DCL      8991>>ASSIGN
G$JIT$
      1267**DCL      8988>>ASSIGN
PL6.E3A0      #004=GDB$GET_CONTROL File=GDB$BRKPNTS.:E05TSI                      TUE 07/29/97 21:23 Page:118  
G$LOW_MEM.IV.IL$
      8924**DCL      8924--REDEF    8972>>IF       8976>>ASSIGN
G$LOW_MEM.IV.INT.I#00$
      8924**DCL      8924--REDEF
G$LOW_MEM.IV.INT.I#01$
      8924**DCL      8924--REDEF
G$LOW_MEM.IV.INT.I#02$
      8925**DCL      8925--REDEF
G$LOW_MEM.IV.INT.I#03$
      8925**DCL      8925--REDEF
G$LOW_MEM.IV.INT.I#04$
      8925**DCL      8926--REDEF
G$LOW_MEM.IV.INT.I#05$
      8926**DCL      8926--REDEF
G$LOW_MEM.IV.INT.I#61$
      8927**DCL      8927--REDEF
G$LOW_MEM.IV.INT.I#62$
      8927**DCL      8927--REDEF
G$LOW_MEM.IV.INT.I#63$
      8927**DCL      8927--REDEF
G$LOW_MEM.LVL_ACT
      8889**DCL      8950>>IF       8972>>IF
G$LOW_MEM.TV.T#01$
      8912**DCL      8912--REDEF
G$LOW_MEM.TV.T#02$
      8912**DCL      8912--REDEF
G$LOW_MEM.TV.T#03$
      8911**DCL      8911--REDEF
G$LOW_MEM.TV.T#05$
      8911**DCL      8911--REDEF
G$LOW_MEM.TV.T#06$
      8910**DCL      8910--REDEF
G$LOW_MEM.TV.T#07$
      8910**DCL      8910--REDEF
G$LOW_MEM.TV.T#08$
      8909**DCL      8910--REDEF
PL6.E3A0      #004=GDB$GET_CONTROL File=GDB$BRKPNTS.:E05TSI                      TUE 07/29/97 21:23 Page:119  
G$LOW_MEM.TV.T#09$
      8909**DCL      8909--REDEF
G$LOW_MEM.TV.T#10$
      8909**DCL      8909--REDEF
G$LOW_MEM.TV.T#12$
      8908**DCL      8908--REDEF
G$LOW_MEM.TV.T#13$
      8908**DCL      8908--REDEF
G$LOW_MEM.TV.T#14$
      8907**DCL      8907--REDEF
G$LOW_MEM.TV.T#15$
      8907**DCL      8907--REDEF
G$LOW_MEM.TV.T#16$
      8906**DCL      8907--REDEF
G$LOW_MEM.TV.T#17$
      8906**DCL      8906--REDEF
G$LOW_MEM.TV.T#19$
      8905**DCL      8906--REDEF
G$LOW_MEM.TV.T#20$
      8905**DCL      8905--REDEF
G$LOW_MEM.TV.T#21$
      8905**DCL      8905--REDEF
G$LOW_MEM.TV.T#22$
      8904**DCL      8904--REDEF
G$LOW_MEM.TV.T#23$
      8904**DCL      8904--REDEF
G$LOW_MEM.TV.T#24$
      8903**DCL      8904--REDEF
G$LOW_MEM.TV.T#25$
      8903**DCL      8903--REDEF
G$LOW_MEM.TV.T#26$
      8903**DCL      8903--REDEF
G$LOW_MEM.TV.T#27$
      8902**DCL      8902--REDEF
G$LOW_MEM.TV.T#28$
      8902**DCL      8902--REDEF
PL6.E3A0      #004=GDB$GET_CONTROL File=GDB$BRKPNTS.:E05TSI                      TUE 07/29/97 21:23 Page:120  
G$LOW_MEM.TV.T#29$
      8901**DCL      8902--REDEF
G$LOW_MEM.TV.T#30$
      8901**DCL      8901--REDEF
G$LOW_MEM.TV.T#31$
      8901**DCL      8901--REDEF
G$LOW_MEM.TV.T#32$
      8900**DCL      8900--REDEF
G$LOW_MEM.TV.T#33$
      8900**DCL      8900--REDEF
G$LOW_MEM$
      1268**DCL      8887--IMP-PTR  8950>>IF       8972>>IF       8972>>IF       8976>>ASSIGN
G$MHJIT.ASDT_MON.DB_PROC
      1824**DCL      8996>>IF
G$MHJIT.ASDT_MON.UMHJIT.BASE
      1430**DCL      8982>>ASSIGN
G$MHJIT.INTCON.HHJIT
      7748**DCL      7748--REDEF
G$MHJIT.INTCON.P$$
      7721**DCL      7721--REDEF
G$MHJIT.ISA_BIGFOOT.P$$
      4666**DCL      4666--REDEF
G$MHJIT.ISA_DBINH.P$$
      5880**DCL      5880--REDEF
G$MHJIT.ISA_IDLE.P$$
      2761**DCL      2761--REDEF
G$MHJIT.ISA_LVL10.P$$
      6183**DCL      6183--REDEF
G$MHJIT.ISA_LVL11.P$$
      6486**DCL      6486--REDEF
G$MHJIT.ISA_LVL12.P$$
      6789**DCL      6789--REDEF
G$MHJIT.ISA_LVL5.P$$
      4969**DCL      4969--REDEF
G$MHJIT.ISA_OV.P$$
      4363**DCL      4363--REDEF
PL6.E3A0      #004=GDB$GET_CONTROL File=GDB$BRKPNTS.:E05TSI                      TUE 07/29/97 21:23 Page:121  
G$MHJIT.ISA_PFS.P$$
      4034**DCL      4034--REDEF
G$MHJIT.ISA_RT_CLOCK.P$$
      7396**DCL      7396--REDEF
G$MHJIT.ISA_SATYR_RCV.P$$
      5273**DCL      5273--REDEF
G$MHJIT.ISA_SATYR_TRN.P$$
      5577**DCL      5577--REDEF
G$MHJIT.ISA_SCHD.P$$
      7092**DCL      7092--REDEF
G$MHJIT.ISA_WDOG.P$$
      4142**DCL      4142--REDEF
G$MHJIT.TSA_DB.ISA.P$$
      3364**DCL      3364--REDEF
G$MHJIT.TSA_DB.P$$
      3235**DCL      3235--REDEF    3236--REDEF
G$MHJIT.TSA_HND.ISA.P$$
      7942**DCL      7942--REDEF
G$MHJIT.TSA_HND.P$$
      7813**DCL      7813--REDEF    7814--REDEF
G$MHJIT.TSA_MON.ISA.P$$
      2976**DCL      2976--REDEF
G$MHJIT.TSA_MON.P$$
      2847**DCL      2847--REDEF    2848--REDEF
G$MHJIT.TSA_OV.ISA.P$$
      3752**DCL      3752--REDEF
G$MHJIT.TSA_OV.P$$
      3623**DCL      3623--REDEF    3624--REDEF
G$MHJIT$
      1265**DCL      1286--IMP-PTR  8982>>ASSIGN   8994>>ASSIGN   8996>>IF       8997>>ASSIGN   8999>>IF
G$SEGDESC
      8157**DCL      8980>>ASSIGN   8996>>IF       9005<<ASSIGN
GD$DELTA_DATA$
      1055**DCL      1069--IMP-PTR  8950>>IF       8951>>ASSIGN   8958>>IF       8959>>ASSIGN   8960>>CALL
      8960>>CALL     8963>>ASSIGN   8963>>ASSIGN   8974>>ASSIGN   8975>>ASSIGN   8978>>ASSIGN   8979>>ASSIGN
      8980>>ASSIGN   8980>>ASSIGN   8982>>ASSIGN   8983>>ASSIGN   8991>>ASSIGN   8996>>IF       9000>>ASSIGN
PL6.E3A0      #004=GDB$GET_CONTROL File=GDB$BRKPNTS.:E05TSI                      TUE 07/29/97 21:23 Page:122  
      9005>>ASSIGN   9005>>ASSIGN
GDU$SETUP_WINDOW
      8946**DCL-ENT  8989--CALL     8993--CALL
GDU$SETUP_WINDOW_USER
      8945**DCL-ENT  8960--CALL
GD_DATA.GD.ASDT_OFFSET
      1075**DCL      8983<<ASSIGN
GD_DATA.GD.ASDT_PPNO
      1074**DCL      8982<<ASSIGN
GD_DATA.GD.ASDT_WINDOW$
      1091**DCL      8980>>ASSIGN   8996>>IF       9005>>ASSIGN
GD_DATA.GD.DYNSP$
      1082**DCL      1082--REDEF
GD_DATA.GD.NEWCTL
      1080**DCL      8951<<ASSIGN
GD_DATA.GD.STEP_BRKPNT.ADR$
      1083**DCL      1084--REDEF    8960<>CALL     8963>>ASSIGN   8978<<ASSIGN
GD_DATA.GD.STEP_BRKPNT.FLAGS
      1085**DCL      8959<<ASSIGN
GD_DATA.GD.STEP_BRKPNT.FLAGS.ACTIVE
      1085**DCL      8958>>IF       8974<<ASSIGN
GD_DATA.GD.STEP_BRKPNT.FLAGS.ARMED
      1085**DCL      8975<<ASSIGN
GD_DATA.GD.STEP_BRKPNT.OLDINST
      1084**DCL      8963>>ASSIGN   9000<<ASSIGN
GD_DATA.GD.STEP_BRKPNT.START$
      1084**DCL      1084--REDEF
GD_DATA.GD.STEP_BRKPNT.USER#
      1085**DCL      8960<>CALL     8979<<ASSIGN   8991<<ASSIGN
GD_DATA.GD.STOPT
      1079**DCL      8950>>IF
GD_DATA.GD.WINDOWSEG
      1088**DCL      8980<<ASSIGN   9005>>ASSIGN
ISA$
      8937**DCL      8976<<ASSIGN   8977>>ASSIGN   8981>>IF       9003>>IF       9004>>ASSIGN
JIT$
PL6.E3A0      #004=GDB$GET_CONTROL File=GDB$BRKPNTS.:E05TSI                      TUE 07/29/97 21:23 Page:123  
      8941**DCL      8179--IMP-PTR  8988<<ASSIGN   8989<>CALL     8991>>ASSIGN
LEVEL
      8938**DCL      8971<<DOINDEX  8972>>IF       8972>>IF       8976>>ASSIGN   9006<<ASSIGN
MEMORY
      8931**DCL      8963<<ASSIGN   9000>>ASSIGN
P
      8940**DCL      8981>>IF
P$
      8939**DCL      8940--REDEF    8977<<ASSIGN   8978>>ASSIGN   8993<>CALL     8994<<ASSIGN   8997<<ASSIGN
      8999>>IF       9000>>ASSIGN   9001>>ASSIGN

PL6.E3A0      #005=GDB$FIRST_USER_TRAP File=GDB$BRKPNTS.:E05TSI                  TUE 07/29/97 21:24 Page:124  
      660        1        /*T***********************************************************/
      661        2        /*T*                                                         */
      662        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      663        4        /*T*                                                         */
      664        5        /*T***********************************************************/
      665        6        %EJECT;
PL6.E3A0      #005=GDB$FIRST_USER_TRAP File=GDB$BRKPNTS.:E05TSI                  TUE 07/29/97 21:24 Page:125  
      666        7        /*F*    NAME:    GDB$TRAP_HND
      667        8                PURPOSE: This routine is the debuggers trap handler.  It is
      668        9                         called by the monitor whenever the debugger is in
      669       10                         control to handle traps of all types.
      670       11                CALL:    CALL GDB$TRAP_HND(TSA$)
      671       12                DESCRIPTION:  This routine is called with a pointer to the
      672       13                              TSA that caused this trap.  We first determine
      673       14                              if this is a trap we will handle.  Following
      674       15                              this we adjust the P counter in the TSA to reflect
      675       16                              the length of the instruction that caused us to
      676       17                              trap.  We then send a break responce message to
      677       18                              the host indicating that we are stopped.  All
      678       19                              breakpoints are removed and we loop waiting for
      679       20                              a GO. When we get the GO, we figure out if we
      680       21                              are to step or go to an absolute address, modify
      681       22                              the TSA accordingly and off we go.
      682       23        */
      683       24        GDB$FIRST_USER_TRAP: PROC(G$TSA) ALTRET;
      684       25
      685       26        /**/
      686       27        /* Includes */
      687       28        /**/
      688       29
      689       30        %INCLUDE G_HJIT_M;
      690      175        %INCLUDE LCP_6;                        /* Various LCP6 EQUs */
      691      366        %INCLUDE GD_STATIC_DATA;
      692      839        %INCLUDE GD$MACS_M;                    /* Debugger macros */
      693      877        %INCLUDE GM_VIRTUAL_E;
      694     1087        %INCLUDE G_JIT_M;
      695     1352        %INCLUDE G_ROS_M;
      696     1434        %INCLUDE KH$CHN;
      697     1556        %INCLUDE HF_ERRORS_C;
      698     1641        %INCLUDE GD_BRKPNT_M;
      699     1696        %INCLUDE GH_HARDWARE_M;
      700     1794
      701     1795        /**/
      702     1796        /* Symrefs */
PL6.E3A0      #005=GDB$FIRST_USER_TRAP File=GDB$BRKPNTS.:E05TSI                  TUE 07/29/97 21:24 Page:126  
      703     1797        /**/
      704     1798
      705     1799    1   DCL G$UHJIT$ PTR SYMREF;
      706     1800    1   DCL G$ASDT_USR$ PTR SYMREF;
      707     1801    1   DCL G$ASDT_MCL$ PTR SYMREF;
      708     1802    1   DCL G$MHJIT$ PTR SYMREF;
      709     1803    1   DCL G$JIT$ PTR SYMREF;
      710     1804    1   DCL G$ROS$ PTR SYMREF;
      711     1805    1   DCL G$USRT$ PTR SYMREF;
      712     1806        %VLP_ERRCODE (FPTN=GHB_TRAP_MSG,ERR#=%E$TRAP,SEV=G_SEV_CONT#,
      713     1807                     STCLASS=CONSTANT,FCG=GH,MID=B,MON='1'B);
      714     1853
      715     1854        /**/
      716     1855        /* Based Items */
      717     1856        /**/
      718     1857
      719     1858        %GD_BRKPNT(FPTN=BRKPNT,STCLASS=BASED);
      720     1875        %GD_BRKPNT(FPTN=IFBRKPNT,STCLASS=BASED,LAST=",");
      721     1892        %GD_IFCOND(FPTN=IFCOND,LVL=2);
      722     1916        %VLP_XBREAK(STCLASS=BASED);
      723     1935        %G$MHJIT(STCLASS="BASED(G$MHJIT$)");
      724     8809        %G$UHJIT(STCLASS="BASED(G$UHJIT$)");
      725    11783        %G$JIT (STCLASS="BASED(G$JIT$)");
      726    12197        %G$SEGDESC (FPTN=G$SEGDESC, STCLASS=BASED);
      727    12219        %G$TSA(STCLASS="");                     /* TSA template */
      728    12607        %GD$MSG(STCLASS="BASED(MSG$)");         /* Message template */
      729    12763        %GH_VLD(STCLASS=BASED);
      730    12777        %G$ROS (STCLASS="BASED(G$ROS$)");
      731    12821        %G$ECCB(FPTN=G$ECCB_ARRAYED,ARRAYED=YES);
      732    12897        %G$ECCB;
      733    12973    1   DCL MEMORY UBIN BASED;                 /* Memory template */
      734    12974    1   DCL SMEMORY SBIN BASED;                /* Memory template */
      735    12975    1   DCL BITMEM BIT(16) BASED ALIGNED;      /* Another memory template */
      736    12976    1   DCL 1 BVECT BASED ALIGNED,
      737    12977    1         2 SIZE UBIN WORD ALIGNED,
      738    12978    1         2 PTR$ PTR ALIGNED;
      739    12979
PL6.E3A0      #005=GDB$FIRST_USER_TRAP File=GDB$BRKPNTS.:E05TSI                  TUE 07/29/97 21:24 Page:127  
      740    12980        /**/
      741    12981        /* Arguments */
      742    12982        /**/
      743    12983
      744    12984        /**/
      745    12985        /* Entries */
      746    12986        /**/
      747    12987
      748    12988    1   DCL GDB$RESET_BRKPNT ENTRY;            /* Remove all breakpoints */
      749    12989    1   DCL GDB$KILL_ALLBRKPNTS ENTRY;            /* KILL all breakpoints */
      750    12990    1   DCL GDI$DECODE_MSG_WAIT_4_GO ENTRY ALTRET; /* Process msgs til GO */
      751    12991    1   DCL GDI$SEND_RESPONSE ENTRY(2);        /* Send message to host */
      752    12992    1   DCL GDI$SEND_ERROR_RESPONSE ENTRY(3);
      753    12993    1   DCL GDU$SETUP_WINDOW ENTRY(1) ALTRET;
      754    12994    1   DCL GDU$SETUP_WINDOW_USER ENTRY(2) ALTRET;
      755    12995    1   DCL GDB$SET_BRKPNT ENTRY(2) OPTIONAL;
      756    12996    1   DCL GDK$RESADDR ENTRY(10) ALTRET;
      757    12997    1   DCL GDK$MPTR ENTRY(7);
      758    12998    1   DCL X6A_ARET ENTRY;
      759    12999    1   DCL GDA$USER_INIT ENTRY ALTRET OPTIONAL;
      760    13000    1   DCL GDM$GRAB16 ENTRY(3) ALTRET;
      761    13001    1   DCL GDK$PUDECBIN ENTRY(4);
      762    13002    1   DCL GDK$PTDECBIN ENTRY(4);
      763    13003    1   DCL GDK$UUDECBIN ENTRY(4);
      764    13004    1   DCL GDK$UTDECBIN ENTRY(4);
      765    13005    1   DCL GDK$ULDECBIN ENTRY(4);
      766    13006    1   DCL GDK$UODECBIN ENTRY(4);
      767    13007    1   DCL MAP_ADDRESS ENTRY(2) ALTRET;    /* XT
      768    13008        DCL XT SBIN;
      769    13009        DCL XT$ PTR; */
      770    13010
      771    13011        /**/
      772    13012        /* Temps */
      773    13013        /**/
      774    13014
      775    13015    1   DCL BRK$ PTR;
      776    13016    1   DCL BRKNUM SBIN;
PL6.E3A0      #005=GDB$FIRST_USER_TRAP File=GDB$BRKPNTS.:E05TSI                  TUE 07/29/97 21:24 Page:128  
      777    13017    1   DCL OFFSET SBIN;
      778    13018    1   DCL MSGBFR CHAR(64) BASED(MSG$) CALIGNED; /* Buffer for msg to host */
      779    13019    1   DCL DSIZE UBIN;
      780    13020    1   DCL MSG$ PTR;                      /* Pointer to message buffer */
      781    13021    1   DCL P$ PTR;
      782    13022    1   DCL P REDEF P$ UBIN(32);
      783    13023    1   DCL SIZE UBIN;                         /* Size of message to host */
      784    13024    1   DCL ADR$ PTR;
      785    13025    1   DCL PTR$ PTR;
      786    13026    1   DCL TRAP_NO UBIN;
      787    13027    1   DCL MON BIT(1) ALIGNED;
      788    13028        %VLP_ERRCODE (FPTN = ERRCODE_SCRATCH,STCLASS = "AUTO");
      789    13074        %EJECT;
PL6.E3A0      #005=GDB$FIRST_USER_TRAP File=GDB$BRKPNTS.:E05TSI                  TUE 07/29/97 21:24 Page:129  
      790    13075        /* If we entered here, we need to call the user debugger init routine */
      791    13076
      792    13077    1           CALL GDA$USER_INIT;
      793    13078        /**/
      794    13079    1   GDB$TRAP_HND: ENTRY(G$TSA) ALTRET;
      795    13080        /* */
      796    13081    1           MSG$ = ADDR(GD_DATA.GDA.RCV);
      797    13082    1           IF G$TSA.I.TRAP# = %G_HOST_INT# OR G$TSA.I.TRAP# = %G_FPRG_START# THEN
      798    13083    1              G$TSA.Z.IS=0;
      799    13084    2           IF GD_DATA.GD.IGNARITH THEN DO;
      800    13085    2              IF G$TSA.I.TRAP#=%G_INT_REG_OV# OR
      801    13086    2                 G$TSA.I.TRAP#=%G_S_DBZ# OR
      802    13087    2                 G$TSA.I.TRAP#=%G_S_EXP_OV# OR
      803    13088    2                 G$TSA.I.TRAP#=%G_S_EXP_UF# OR
      804    13089    2                 G$TSA.I.TRAP#=%G_C_DBZ# OR
      805    13090    2                 G$TSA.I.TRAP#=%G_C_CHAR# OR
      806    13091    3                 G$TSA.I.TRAP#=%G_C_OV# THEN DO;
      807    13092    3                   ALTRETURN;
      808    13093    3                   END;
      809    13094    2              END;
      810    13095    1           GD$MSG = '0'B;
      811    13096    2           IF GD_DATA.GD.STOPT THEN DO;
      812    13097    2              IF NOT GD_DATA.GD.ANSWERED THEN
      813    13098    2                 CALL GDI$SEND_ERROR_RESPONSE (SIZE,MSGBFR,%GD#RSPBADADR);
      814    13099    2              G$TSA.P$$=ENTADDR(X6A_ARET);
      815    13100    2              ALTRETURN;
      816    13101    2              END;
      817    13102    1           GD_DATA.DELTAINFO.TSA$=ADDR(G$TSA);
      818    13103        /* */
      819    13104    1   STARTOVER:
      820    13105        /*
      821    13106          If this is XDELTA, we need to perform the entire ASDT stuff
      822    13107                                                                                      */
      823    13108    1           IF GD_DATA.GD.MODE=%GD#MODE_XDELTA THEN
      824    13109    2           DO;
      825    13110        /*
      826    13111          If the debug link is not up, let Linda have it
PL6.E3A0      #005=GDB$FIRST_USER_TRAP File=GDB$BRKPNTS.:E05TSI                  TUE 07/29/97 21:24 Page:130  
      827    13112                                                                                      */
      828    13113    2              IF NOT(GD_DATA.GDA.CONNECTFLG) THEN
      829    13114    2                 RETURN;
      830    13115        /*
      831    13116          Stash away the current desciptor in the monitors window segment
      832    13117          so we can use it if we need to look through it and so we can be nice
      833    13118          guys and restore it
      834    13119                                                                                      */
      835    13120    2              GD_DATA.GD.WINDOWSEG=%ASDT_WINDOW#;
      836    13121        /*
      837    13122           Setup GD_DATA.GD.USERNO appropriatly to reflect whether a user was running
      838    13123           or the monitor was running
      839    13124                                                                                      */
      840    13125    2              GD_DATA.GD.USE_REAL = %G_NO#;
      841    13126    2              MON=%G_YES#;
      842    13127    2              IF G$TSA.ISA.ISM2.MMU
      843    13128    2                AND (G$TSA.ISA.ASV$=G$ASDT_USR$ OR G$TSA.ISA.ASV$=G$ASDT_MCL$) THEN
      844    13129    3              DO;
      845    13130    3                 GD_DATA.GD.ASDT_PPNO=G$MHJIT.ASDT_MON.UMHJIT.BASE;
      846    13131    3                 GD_DATA.GD.ASDT_OFFSET=POFFW(G$TSA.ISA.ASV$,G$UHJIT$);
      847    13132        /*
      848    13133          Setup a pointer to the JIT, since we may or may not be mapped
      849    13134          onto it at the time.
      850    13135                                                                                      */
      851    13136    3                 P$=G$JIT$;
      852    13137    4                 CALL GDU$SETUP_WINDOW (P$) WHENRETURN DO;
      853    13138    4                    GD_DATA.GD.USERNO=G$JIT.USR#;
      854    13139    4                    IF G$TSA.ISA.ASV$ ~= G$ASDT_USR$ THEN
      855    13140    4                       GD$MSG.BRKRSP.MBU = '1'B;
      856    13141    4                    ELSE GD$MSG.BRKRSP.MBU = '0'B;
      857    13142    4                    END;
      858    13143    3                 IF G$TSA.ISA.ASV$=G$ASDT_USR$ AND G$TSA.P>=%GM_ISR1_BASE THEN
      859    13144    3                    MON=%G_NO#;
      860    13145    3                 END;
      861    13146    2              ELSE
      862    13147    3              DO;
      863    13148    3                 GD_DATA.GD.USERNO=0;
PL6.E3A0      #005=GDB$FIRST_USER_TRAP File=GDB$BRKPNTS.:E05TSI                  TUE 07/29/97 21:24 Page:131  
      864    13149    3                 GD_DATA.GD.ASDT_PPNO=G$MHJIT.ASDT_MON.MHJIT.BASE;
      865    13150    3                 GD_DATA.GD.ASDT_OFFSET=POFFW(ADDR(G$MHJIT.ASDT_MON),ADDR(G$MHJIT));
      866    13151    3                 END;
      867    13152        /*
      868    13153          Stash away the calculated values just in case the guy says USE
      869    13154                                                                                      */
      870    13155    2              GD_DATA.GD.ASDT_USE_PPNO=GD_DATA.GD.ASDT_PPNO;
      871    13156    2              GD_DATA.GD.ASDT_USE_OFFSET=GD_DATA.GD.ASDT_OFFSET;
      872    13157    2              GD_DATA.GD.USE_USERNO=GD_DATA.GD.USERNO;
      873    13158    2              END;
      874    13159        /*
      875    13160          If this is user delta, we just need to properly setup the user
      876    13161          stuff.
      877    13162                                                                                      */
      878    13163    1           ELSE
      879    13164    2           DO;
      880    13165    2              GD_DATA.GD.USERNO=G$JIT$->G$JIT.USR#;
      881    13166    2              GD_DATA.GD.USE_USERNO=G$JIT$->G$JIT.USR#;
      882    13167    2              END;
      883    13168        /*
      884    13169          Init the break number cell to 0 (Temp breakpoint) and disable
      885    13170          the branch trace bit in this TSA's ISA.
      886    13171                                                                                      */
      887    13172    1           BRKNUM=0;
      888    13173    1           GD_DATA.GD.TRACE_ACTIVE = G$TSA.ISA.REGS.M1.J;
      889    13174    1           G$TSA.ISA.REGS.M1.J=%G_DISABLE#;
      890    13175        /*
      891    13176          If there is any breakpoint that needs cleanup (needs to be put back
      892    13177          in memory), do it now, if the user hasn't killed it
      893    13178                                                                                      */
      894    13179    1           IF GD_DATA.GD.BRKNUM > 0 THEN
      895    13180    2           DO;
      896    13181    2              IF GD_DATA.GD.BRK$->BRKPNT.FLAGS.ACTIVE AND
      897    13182    2                 ~GD_DATA.GD.BRK$->BRKPNT.FLAGS.ARMED THEN
      898    13183    3              DO;
      899    13184    3                 ADR$=GD_DATA.GD.BRK$->BRKPNT.ADR$;
      900    13185    3                 CALL GDU$SETUP_WINDOW_USER (ADR$,
PL6.E3A0      #005=GDB$FIRST_USER_TRAP File=GDB$BRKPNTS.:E05TSI                  TUE 07/29/97 21:24 Page:132  
      901    13186    4                   GD_DATA.GD.BRK$->BRKPNT.USER#) WHENRETURN DO;
      902    13187    4                    GD_DATA.GD.BRK$->BRKPNT.OLDINST=ADR$->MEMORY;
      903    13188    4                    GD_DATA.GD.BRK$->BRKPNT.FLAGS.ARMED = '1'B;
      904    13189    4                    ADR$->BITMEM=%GD#BREAK_INST;
      905    13190    4                    END;
      906    13191    3                 GD_DATA.GD.USERNO=GD_DATA.GD.USE_USERNO;
      907    13192    3                 GD_DATA.GD.ASDT_PPNO=GD_DATA.GD.ASDT_USE_PPNO;
      908    13193    3                 GD_DATA.GD.ASDT_OFFSET=GD_DATA.GD.ASDT_USE_OFFSET;
      909    13194    3                 END;
      910    13195    2              GD_DATA.GD.BRKNUM=0;
      911    13196    2              GD_DATA.GD.BRK$ = ADDR(NIL);
      912    13197    2              END;
      913    13198        /*
      914    13199          Determine if LDTRC - if yes - call KILL_ALLBRKPNTS
      915    13200          If LDTRC in library - do GOTRAP.
      916    13201        */
      917    13202    1           IF G$TSA.I.TRAP# = %G_FPRG_START2# AND
      918    13203    1              GD_DATA.GD.MODE = %GD#MODE_USER_DELTA
      919    13204    2           THEN DO;
      920    13205    2                CALL GDB$KILL_ALLBRKPNTS;
      921    13206    2                IF G$JIT.SLIB# ~= 0 AND
      922    13207    2                   G$TSA.P > %GM_ISR6_BASE
      923    13208    2                THEN GOTO GOTRAP;
      924    13209    2              END;
      925    13210        /*
      926    13211          Determine if this was a branch trace trap
      927    13212                                                                                      */
      928    13213    2           IF G$TSA.I.TRAP# = %G_FPRG_XBREAK# THEN DO;
      929    13214    2              P$ = G$TSA.B3$;
      930    13215    2              CALL GDU$SETUP_WINDOW_USER(P$,GD_DATA.GD.USERNO) ALTRET(BADXBRK);
      931    13216    2              GD_DATA.GD.XBRKINFO$ = P$->BVECT.PTR$;
      932    13217    2              CALL GDU$SETUP_WINDOW_USER(GD_DATA.GD.XBRKINFO$,GD_DATA.GD.USERNO)
      933    13218    3              WHENALTRETURN DO;
      934    13219    3   BADXBRK:
      935    13220    3                 CALL GDI$SEND_ERROR_RESPONSE(%GD#RSPBRKSIZ,MSGBFR,%GD#RSPBADXBREAK);
      936    13221    3                 GD_DATA.GD.STOPT = %G_YES#;
      937    13222    3                 GOTO CALLGDI;
PL6.E3A0      #005=GDB$FIRST_USER_TRAP File=GDB$BRKPNTS.:E05TSI                  TUE 07/29/97 21:24 Page:133  
      938    13223    3                 END;
      939    13224    2              SIZE = %GD#RSPBRKSIZ;
      940    13225    2              GD$MSG.FNC = %GD#RSPBRK;
      941    13226    2              GD$MSG.BRKRSP.ADR$ = GD_DATA.GD.XBRKINFO$->VLP_XBREAK.IC$;
      942    13227    2              P$ = GD$MSG.BRKRSP.ADR$;
      943    13228    2              GD$MSG.BRKRSP.TSA$ = ADDR(G$TSA);
      944    13229    3              IF GD_DATA.GD.XBRKINFO$->VLP_XBREAK.TRAP# = %G_TRACE# THEN DO;
      945    13230    3                 IF GD_DATA.GD.XBRKINFO$->VLP_XBREAK.TC OR
      946    13231    3                    (GD_DATA.GD.XBRKINFO$->VLP_XBREAK.TT AND
      947    13232    4                     GD_DATA.GD.TRACE = %TRACE_XFERS) THEN DO;
      948    13233    4                    GD$MSG.FNC = %GD#RSPTRACE;
      949    13234    4                    GD$MSG.BRKRSP.ADR$ = P$;
      950    13235    4                    GD$MSG.BRKRSP.ADR_FROM$ =
      951    13236    4                       GD_DATA.GD.XBRKINFO$->VLP_XBREAK.OLDIC$;
      952    13237    4                    SIZE = %GD#RSPBRKSIZ;
      953    13238    4                    CALL GDI$SEND_RESPONSE(SIZE,MSGBFR);
      954    13239    4                    ALTRETURN;
      955    13240    4                    END;
      956    13241    3                 ELSE GD_DATA.GD.XBRKINFO$ -> VLP_XBREAK.TT = '0'B;
      957    13242    4                 CALL SRCHFORBRKPNT(BRK$,P$) WHENRETURN DO;
      958    13243    4                    BRKNUM = BRK$->BRKPNT.BRKNUM;
      959    13244    4                    GD$MSG.BRKRSP.TRAP# = BRKNUM;
      960    13245    4                    IF BRK$->BRKPNT.BYPASSCOUNT > 0 THEN
      961    13246    5                       IF BRK$->BRKPNT.CUR_BYPASSCOUNT > 0 THEN DO;
      962    13247    5                          BRK$->BRKPNT.CUR_BYPASSCOUNT = BRK$->BRKPNT.CUR_BYPASSCOUNT -
             13247                                   1;
      963    13248    5   JUSTKIDDING:
      964    13249    5                          GD_DATA.GD.XBRKINFO$->VLP_XBREAK.REPLACED.INSTR = BRK$->
             13249                                   BRKPNT.OLDINST;
      965    13250    5                          GD_DATA.GD.XBRKINFO$->VLP_XBREAK.GOBREAK = '1'B;
      966    13251    5                          G$TSA.P$ = PINCRW(G$TSA.P$,1);
      967    13252    5                          ALTRETURN;
      968    13253    5                          END;
      969    13254    4                       ELSE
      970    13255    4                          BRK$->BRKPNT.CUR_BYPASSCOUNT = BRK$->BRKPNT.BYPASSCOUNT;
      971    13256    4                    IF BRK$->BRKPNT.FLAGS.IFCOND THEN
      972    13257    5                       CALL CMPRIF(BRK$) WHENALTRETURN DO;
PL6.E3A0      #005=GDB$FIRST_USER_TRAP File=GDB$BRKPNTS.:E05TSI                  TUE 07/29/97 21:24 Page:134  
      973    13258    5                          GOTO JUSTKIDDING;
      974    13259    5                          END;
      975    13260    4                    END;
      976    13261    4                 WHENALTRETURN DO;
      977    13262    4                    BRKNUM = %GD#MAXBRKNUM + 1;
      978    13263    4                    GD$MSG.BRKRSP.TRAP# = GD_DATA.GD.XBRKINFO$->VLP_XBREAK.TRAP# +
      979    13264    4                       %GD#MAXBRKNUM + 1;
      980    13265    4                    END;
      981    13266    3                 END;
      982    13267    2              ELSE GD$MSG.BRKRSP.TRAP# = BRKNUM;
      983    13268    2              GD$MSG.BRKRSP.DATA_SIZE = 0;
      984    13269    2              CALL GDI$SEND_RESPONSE(SIZE,MSGBFR);
      985    13270    2              GD_DATA.GD.STOPT = '1'B;
      986    13271    2              CALL GDB$RESET_BRKPNT;
      987    13272    2              GOTO CALLGDI;
      988    13273    2              END;
      989    13274    2           IF G$TSA.I.TRAP# = %GD#ENTRY_TRAP# AND G$TSA.INST ~= %GD#BREAK_INST THEN DO;
      990    13275    3              IF GD_DATA.GD.ONCALL THEN DO;
      991    13276    3                 P$ = G$TSA.P$;
      992    13277    3                 CALL SRCHFORBRKPNT(BRK$,P$)
      993    13278    4                   WHENRETURN DO;
      994    13279    4                     GD$MSG.BRKRSP.ADR_FROM$ = PINCRW(G$TSA.A$,-G$TSA.Z.IS);
      995    13280    4                     G$TSA.Z.IS = 0;
      996    13281    4                     BRKNUM = BRK$->BRKPNT.BRKNUM;
      997    13282    4                     GOTO CHECK_BYPASS;
      998    13283    4                     END;
      999    13284    3                 END;
     1000    13285    2              IF GD_DATA.GD.ONCALLS AND (PINCRW(G$TSA.A$,-G$TSA.Z.IS)->BITMEM&'FF80'X)
             13285                       =
     1001    13286    3                 %GD#LNJB6_INST THEN DO;
     1002    13287    3                 P$ = G$TSA.P$;
     1003    13288    3                 GD$MSG.BRKRSP.ADR_FROM$ = PINCRW(G$TSA.A$,-G$TSA.Z.IS);
     1004    13289    3                 BRKNUM = GD_DATA.GD.OC_BRKNUM;
     1005    13290    3                 BRK$=GD_DATA.GD.ONCALLS_BRK$;
     1006    13291    3                 GOTO CHECK_BYPASS;
     1007    13292    3                 END;
     1008    13293    3              IF GD_DATA.GD.TRACE ~= %TRACE_OFF THEN DO;
PL6.E3A0      #005=GDB$FIRST_USER_TRAP File=GDB$BRKPNTS.:E05TSI                  TUE 07/29/97 21:24 Page:135  
     1009    13294    4                 DO CASE(GD_DATA.GD.TRACE);
     1010    13295    4                    CASE(%TRACE_CALLS);
     1011    13296    4                       P$ = PINCRW(G$TSA.A$,-G$TSA.Z.IS);
     1012    13297    4                       CALL GDU$SETUP_WINDOW_USER(P$,GD_DATA.GD.USERNO)
     1013    13298    5                       WHENALTRETURN DO;
     1014    13299    5                       IF (P$->BITMEM & 'FF80'X) ~= %GD#LNJB6_INST THEN
     1015    13300    5                          IF ADDR(GD_DATA.GD.VLD)->GH_VLD.STATUS < 0 THEN
     1016    13301    5                             GOTO NOTRACE;
     1017    13302    5                          END;
     1018    13303    4                    CASE(%TRACE_XFERS);
     1019    13304    4                       GOTO SENDTRACERSP;
     1020    13305    4                    CASE(ELSE);
     1021    13306    4                       GOTO NOTRACE;
     1022    13307        /*N* BAD TRACE VALUE */
     1023    13308    4                    END /* CASE */;
     1024    13309    3   SENDTRACERSP:
     1025    13310    3                 GD$MSG.FNC = %GD#RSPTRACE;
     1026    13311    3                 GD$MSG.BRKRSP.ADR$ = G$TSA.P$;
     1027    13312    3                 GD$MSG.BRKRSP.ADR_FROM$ = PINCRW(G$TSA.A$,-G$TSA.Z.IS);
     1028    13313    3                 G$TSA.ISA.REGS.M1.J = %G_ENABLE#;
     1029    13314    3                 SIZE = %GD#RSPBRKSIZ;
     1030    13315    3                 CALL GDI$SEND_RESPONSE(SIZE,MSGBFR);
     1031    13316    3                 ALTRETURN;
     1032    13317    3                 END /* CHECK TRACE */;
     1033    13318    2   NOTRACE:
     1034    13319    3              IF GD_DATA.GD.SOC AND (G$TSA.INST&'FF80'X)= %GD#LNJB6_INST THEN DO;
     1035    13320    3                 P$ = PINCRW(G$TSA.A$,-G$TSA.Z.IS);
     1036    13321    3                 GD_DATA.GD.SOC_BRKPNT.ADR$=PINCRW(G$TSA.A$,G$TSA.A$->MEMORY);
     1037    13322    4                 IF GD_DATA.GD.SOC_BRKPNT.ADR$ = GD_DATA.GD.STEP_BRKPNT.ADR$ AND G$TSA.
             13322                          A$->MEMORY ~= 1 THEN DO;
     1038    13323    4                    PTR$ = GD_DATA.GD.STEP_BRKPNT.ADR$;
     1039    13324    4                    CALL GDU$SETUP_WINDOW_USER(PTR$,GD_DATA.GD.USERNO);
     1040    13325    4                    PTR$->MEMORY = GD_DATA.GD.STEP_BRKPNT.OLDINST;
     1041    13326    4                    GD_DATA.GD.STEP_BRKPNT.ADR$ = PINCRW(G$TSA.A$,1);
     1042    13327    4                    PTR$ = GD_DATA.GD.STEP_BRKPNT.ADR$;
     1043    13328    4                    CALL GDU$SETUP_WINDOW_USER(PTR$,GD_DATA.GD.USERNO);
     1044    13329    4                    GD_DATA.GD.STEP_BRKPNT.OLDINST = PTR$->MEMORY;
PL6.E3A0      #005=GDB$FIRST_USER_TRAP File=GDB$BRKPNTS.:E05TSI                  TUE 07/29/97 21:24 Page:136  
     1045    13330    4                    PTR$->BITMEM = %GD#BREAK_INST;
     1046    13331    4                    GD_DATA.GD.GO_AGAIN = '1'B;
     1047    13332    4                    END;
     1048    13333    3                 IF MON THEN
     1049    13334    3                    GD_DATA.GD.SOC_BRKPNT.USER# = 0;
     1050    13335    3                 ELSE
     1051    13336    3                    GD_DATA.GD.SOC_BRKPNT.USER# = GD_DATA.GD.USE_USERNO;
     1052    13337    3                 ADR$ = GD_DATA.GD.SOC_BRKPNT.ADR$;
     1053    13338    3                 PTR$ = ADR$;
     1054    13339    3                 GD_DATA.GD.SOC = '0'B;
     1055    13340    3                 CALL GDU$SETUP_WINDOW_USER(ADR$,GD_DATA.GD.SOC_BRKPNT.USER#)
     1056    13341    4                 WHENRETURN DO;
     1057    13342    4                    CALL SRCHFORBRKPNT (BRK$, PTR$)
     1058    13343    5                    WHENRETURN DO;
     1059    13344    5                        GD_DATA.GD.SOC_BRKPNT.OLDINST = BRK$->BRKPNT.OLDINST;
     1060    13345    5                       END;
     1061    13346    5                    WHENALTRETURN DO;
     1062    13347    5                         GD_DATA.GD.SOC_BRKPNT.OLDINST = ADR$->MEMORY;
     1063    13348    5                         ADR$->BITMEM = %GD#BREAK_INST;
     1064    13349    5                       END;
     1065    13350    4                    GD_DATA.GD.SOC_BRKPNT.FLAGS.ACTIVE = '1'B;
     1066    13351    4                    GD_DATA.GD.SOC_BRKPNT.FLAGS.ARMED = '1'B;
     1067    13352    4                    END;
     1068    13353    3                 ALTRETURN;
     1069    13354    3                 END;
     1070    13355        /* If this is a transfer while stepping and if the destination of */
     1071    13356        /* the transfer is in the range of start and end of the step then */
     1072    13357        /* just return to the trap handler */
     1073    13358    2              IF GD_DATA.GD.STEP_BRKPNT.FLAGS.ACTIVE AND
     1074    13359    2                GD_DATA.GD.STEP_BRKPNT.FLAGS.ARMED AND
     1075    13360    2                G$TSA.P >= GD_DATA.GD.STEP_BRKPNT.START AND
     1076    13361    3                G$TSA.P <= GD_DATA.GD.STEP_BRKPNT.ADR THEN DO;
     1077    13362    3                 G$TSA.ISA.REGS.M1.J = '1'B;
     1078    13363    3                 ALTRETURN;
     1079    13364    3                 END;
     1080    13365        /* If bypass is on and the P-counter points to the library */
     1081    13366        /* then just return to the trap handler */
PL6.E3A0      #005=GDB$FIRST_USER_TRAP File=GDB$BRKPNTS.:E05TSI                  TUE 07/29/97 21:24 Page:137  
     1082    13367    2              P$ = G$TSA.P$;
     1083    13368    2              IF GD_DATA.GD.MODE = %GD#MODE_USER_DELTA THEN
     1084    13369    3                 IF G$JIT.SLIB# ~= 0 AND P > %GM_ISR6_BASE THEN DO;
     1085    13370    3                    G$TSA.ISA.REGS.M1.J = %G_ON#;
     1086    13371    3                    ALTRETURN;
     1087    13372    3                    END;
     1088    13373        /*
     1089    13374           If a branch trace trap occurs when there is no temporery breakpoint
     1090    13375           set, this is just cleanup from a past breakpoint (which was done
     1091    13376           above).  Just go back to the monitor trap handler.
     1092    13377                                                                                      */
     1093    13378    2   GETBRKNUM:
     1094    13379    2              IF NOT(GD_DATA.GD.STEP_BRKPNT.FLAGS.ACTIVE) THEN
     1095    13380    3              DO;
     1096    13381    3                 IF GD_DATA.GD.ONCALL OR GD_DATA.GD.ONCALLS THEN
     1097    13382    3                    G$TSA.ISA.REGS.M1.J = %G_ON#;
     1098    13383    3                 ALTRETURN;
     1099    13384    3                 END;
     1100    13385        /*
     1101    13386          We don't modify the P counter on branch trace traps caused by steps
     1102    13387                                                                                      */
     1103    13388    2              P$=G$TSA.P$;
     1104    13389        /*  If we transferred to a breakpoint, we can let it go and
     1105    13390           the breakpoint will cause a trap immediately                            */
     1106    13391    3              CALL SRCHFORBRKPNT(BRK$,P$) WHENRETURN DO;
     1107    13392    3                  ALTRETURN;
     1108    13393    3                  END;
     1109    13394    2              END;
     1110    13395    1           ELSE
     1111    13396    2           DO;
     1112    13397    2              P$=G$TSA.P$;
     1113    13398    2              IF P > G$TSA.Z.IS THEN
     1114    13399    2                 P = P - G$TSA.Z.IS;
     1115    13400        /*
     1116    13401          If this trap was a breakpoint trap, figure out which breakpoint
     1117    13402          caused us to trap
     1118    13403                                                                                      */
PL6.E3A0      #005=GDB$FIRST_USER_TRAP File=GDB$BRKPNTS.:E05TSI                  TUE 07/29/97 21:24 Page:138  
     1119    13404    3              IF GD_DATA.GD.ALTRET_ADR$ ~= ADDR(NIL) THEN DO;
     1120    13405    3                    PTR$ = GD_DATA.GD.ALTRET_ADR$;
     1121    13406    3                 CALL GDU$SETUP_WINDOW_USER(PTR$,GD_DATA.GD.USERNO);
     1122    13407    3                 PTR$->MEMORY = GD_DATA.GD.ALTRET_INST;
     1123    13408    3                 IF GD_DATA.GD.ALTRET_ADR$ = GD_DATA.GD.SOC_BRKPNT.ADR$ THEN
     1124    13409    3                    GD_DATA.GD.SOC_BRKPNT = '0'B;
     1125    13410    3                 GD_DATA.GD.ALTRET_ADR$ = ADDR(NIL);
     1126    13411    3                 GD_DATA.GD.ALTRET_INST = 0;
     1127    13412    3                 END;
     1128    13413    2              IF G$TSA.I.TRAP# = %GD#ENTRY_TRAP# THEN
     1129    13414    2                 CALL SRCHFORBRKPNT(BRK$,P$)
     1130    13415    3                 WHENRETURN DO;
     1131    13416    3                    BRKNUM = BRK$->BRKPNT.BRKNUM;
     1132    13417    3   CHECK_BYPASS:    IF BRK$->BRKPNT.BYPASSCOUNT > 0 THEN
     1133    13418    4                       IF BRK$->BRKPNT.CUR_BYPASSCOUNT > 0 THEN DO;
     1134    13419    4                          G$TSA.P$ = P$;
     1135    13420    4                          BRK$->BRKPNT.CUR_BYPASSCOUNT = BRK$->BRKPNT.CUR_BYPASSCOUNT -
             13420                                   1;
     1136    13421    4   KEEPGOING:
     1137    13422    4                          P$ = BRK$->BRKPNT.ADR$;
     1138    13423    5                          IF P$ ~= ADDR(NIL) THEN DO;  /* not an ONCALLS */
     1139    13424    5                             CALL GDU$SETUP_WINDOW_USER(P$,GD_DATA.GD.USERNO)
     1140    13425    6                             WHENALTRETURN DO;
     1141    13426    6                                GOTO BLDBRKRSP;
     1142    13427    6                                END;
     1143    13428    5                             P$->MEMORY = BRK$->BRKPNT.OLDINST;
     1144    13429    5                             BRK$->BRKPNT.FLAGS.ARMED = '0'B;
     1145    13430    5                             G$TSA.P$ = P$;
     1146    13431    5                             END;
     1147    13432    4                          G$TSA.ISA.REGS.M1.J = %G_ON#;
     1148    13433    4                          ALTRETURN;
     1149    13434    4                          END;
     1150    13435    3                       ELSE
     1151    13436    3                          BRK$->BRKPNT.CUR_BYPASSCOUNT = BRK$->BRKPNT.BYPASSCOUNT;
     1152    13437    3                    IF BRK$->BRKPNT.FLAGS.IFCOND THEN
     1153    13438    4                       CALL CMPRIF(BRK$) WHENALTRETURN DO;
     1154    13439    5                          IF GD_DATA.GD.STEP_BRKPNT.FLAGS.ACTIVE THEN DO;
PL6.E3A0      #005=GDB$FIRST_USER_TRAP File=GDB$BRKPNTS.:E05TSI                  TUE 07/29/97 21:24 Page:139  
     1155    13440    5                             GD_DATA.GD.STEP_BRKPNT.FLAGS.BRKNUM_SAVED = '1'B;
     1156    13441    5                             GD_DATA.GD.STEP_BRKPNT.OLD_BRKNUM = BRKNUM;
     1157    13442    5                             BRKNUM = 0;
     1158    13443    5                             GOTO BLDBRKRSP;
     1159    13444    5                             END;
     1160    13445    4                          GOTO KEEPGOING;
     1161    13446    4                          END;
     1162    13447    3                    END;
     1163    13448    3                 WHENALTRETURN DO;
     1164    13449    3                    BRKNUM = %GD#MAXBRKNUM + 1;
     1165    13450    3                    END;
     1166    13451    2              END;
     1167    13452        /*
     1168    13453          If we get to this point we'll take the damm trap.  Setup the TSA
     1169    13454          P counter so we can restart
     1170    13455                                                                                      */
     1171    13456    1   BLDBRKRSP:
     1172    13457    2           IF GD_DATA.GD.GO_AGAIN AND P$ = GD_DATA.GD.STEP_BRKPNT.ADR$ THEN DO;
     1173    13458    2              PTR$ = GD_DATA.GD.STEP_BRKPNT.ADR$;
     1174    13459    2              CALL GDU$SETUP_WINDOW_USER(PTR$,GD_DATA.GD.USERNO);
     1175    13460    2              PTR$->MEMORY = GD_DATA.GD.STEP_BRKPNT.OLDINST;
     1176    13461    2              G$TSA.ISA.REGS.M1.J = %G_ON#;
     1177    13462    2              GD_DATA.GD.STEP_BRKPNT.OLDINST = 0;
     1178    13463    2              GD_DATA.GD.STEP_BRKPNT.ADR$ = ADDR(NIL);
     1179    13464    2              GD_DATA.GD.GO_AGAIN = '0'B;
     1180    13465    2              G$TSA.P$ = P$;
     1181    13466    2              ALTRETURN;
     1182    13467    2              END;
     1183    13468    1           G$TSA.P$=P$;
     1184    13469    1           G$TSA.Z.IS=0;
     1185    13470        /*
     1186    13471          Setup a break responce message to send to the host
     1187    13472                                                                                      */
     1188    13473    1           SIZE=%GD#RSPBRKSIZ;
     1189    13474    1           GD$MSG.FNC=%GD#RSPBRK;
     1190    13475        /*
     1191    13476          If we trapped pass back the trap number, otherwise pass back the
PL6.E3A0      #005=GDB$FIRST_USER_TRAP File=GDB$BRKPNTS.:E05TSI                  TUE 07/29/97 21:24 Page:140  
     1192    13477          break number
     1193    13478                                                                                      */
     1194    13479    1           IF G$TSA.I.TRAP# ~= %GD#ENTRY_TRAP#
     1195    13480    1           THEN                            /* Genuine trap, add offset to tell   */
     1196    13481    1              GD$MSG.BRKRSP.TRAP# = G$TSA.I.TRAP# + %GD#MAXBRKNUM +1;
     1197    13482    2           ELSE DO;                        /* Some breakpoint                    */
     1198    13483    2              IF BRKNUM>%GD#MAXBRKNUM THEN
     1199    13484    2                 GD$MSG.BRKRSP.BRK#=0;
     1200    13485    2              ELSE
     1201    13486    2                 GD$MSG.BRKRSP.BRK#=BRKNUM;
     1202    13487    2              END;
     1203    13488        /*
     1204    13489          Setup the rest of the responce
     1205    13490                                                                                      */
     1206    13491    1           GD$MSG.BRKRSP.TSA$=ADDR(G$TSA);
     1207    13492    1           IF G$JIT.SPROC#=0 THEN
     1208    13493    1              GD$MSG.BRKRSP.SHARED=%G_NO#;
     1209    13494    1           ELSE
     1210    13495    1              GD$MSG.BRKRSP.SHARED=%G_YES#;
     1211    13496        /*N*    GD$MSG.BRKRSP.FINAL = G$ROS.U_ECCB$->G$ECCB.FLAGS.XCONP; */
     1212    13497    1           GD$MSG.BRKRSP.ADR$=P$;
     1213    13498    1           GD$MSG.BRKRSP.USER#=GD_DATA.GD.USERNO;
     1214    13499    1           IF GD_DATA.GD.STEP_BRKPNT.FLAGS.BRKNUM_SAVED THEN
     1215    13500    1              BRKNUM = GD_DATA.GD.STEP_BRKPNT.OLD_BRKNUM;
     1216    13501    1           ERRCODE_SCRATCH=GHB_TRAP_MSG;
     1217    13502    1           IF G$TSA.I.TRAP# = %G_FPRG_XCON#
     1218    13503    1           THEN ERRCODE_SCRATCH = G$JIT.ERR;
     1219    13504    1           ELSE ERRCODE_SCRATCH.ERR#=ERRCODE_SCRATCH.ERR# + G$TSA.I.TRAP#;
     1220    13505    1           GD$MSG.BRKRSP.ERRCODE=ERRCODE_SCRATCH;
     1221    13506        /*
     1222    13507          Pass back a chunk of memory starting at the current P-counter.
     1223    13508          This will allow DELTA to display the instruction where we stopped
     1224    13509          without making a request for the data there.
     1225    13510        */
     1226    13511    1           GD_DATA.GD.STOPT=%G_YES#;
     1227    13512    1           CALL GDB$RESET_BRKPNT;
     1228    13513    1           DSIZE = 16;
PL6.E3A0      #005=GDB$FIRST_USER_TRAP File=GDB$BRKPNTS.:E05TSI                  TUE 07/29/97 21:24 Page:141  
     1229    13514    2           CALL GDM$GRAB16(ADDR(GD$MSG.BRKRSP.DATA),P$,DSIZE) WHENALTRETURN DO;
     1230    13515    2              DSIZE = 0;
     1231    13516    2              END /* WHENALTRETURN */;
     1232    13517    1           GD$MSG.BRKRSP.DATA_SIZE = DSIZE;
     1233    13518        /*
     1234    13519          Indicate we are stopped and send the break responce to the host
     1235    13520                                                                                      */
     1236    13521    1           CALL GDI$SEND_RESPONSE(SIZE,MSGBFR);
     1237    13522        /*
     1238    13523          Yank all the breaks
     1239    13524                                                                                      */
     1240    13525        /*
     1241    13526          At this point, we call the routine that handles the completed
     1242    13527          messages put together by the standalone async handler.  He will
     1243    13528          continue to process commands and not return to us till the user has typed
     1244    13529          GO.  When he does return, GD_DATA.GD.STEPCNT and GD_DATA.GD.ABSADDR will be setup
     1245    13530          to reflect whether or not the user has stepped or specified a
     1246    13531          go address.  Note that P$ is allready setup if nothing is specified.
     1247    13532                                                                                      */
     1248    13533    1   CALLGDI:
     1249    13534    2           CALL GDI$DECODE_MSG_WAIT_4_GO WHENALTRETURN DO;
     1250    13535    2              GD_DATA.GD.TRACE = 0;
     1251    13536    2              GD_DATA.GD.STEP_BRKPNT = '0'B;
     1252    13537    2              GD_DATA.GD.SOC_BRKPNT = '0'B;
     1253    13538    2              GD_DATA.GD.DYNSP$ = ADDR(GD_DATA.MYSPACE(0));
     1254    13539    2              GD_DATA.MYSPACE = '0'B;
     1255    13540    2              GOTO STARTOVER;
     1256    13541    2              END;
     1257    13542        /*
     1258    13543          If we got a temporary breakpoint, disable it here (its only used once).
     1259    13544                                                                                      */
     1260    13545    2           IF GD_DATA.GD.GOTRAP AND BRKNUM>0 AND BRKNUM < %GD#MAXBRKNUM THEN DO;
     1261    13546    2              SIZE = %GD#RSPBRKSIZ;
     1262    13547    2              CALL GDI$SEND_ERROR_RESPONSE(SIZE,GD$MSG,%GD#RSPNOTUSERTRAP);
     1263    13548    2              GD_DATA.GD.STOPT = %G_YES#;
     1264    13549    2              GOTO CALLGDI;
     1265    13550    2              END;
PL6.E3A0      #005=GDB$FIRST_USER_TRAP File=GDB$BRKPNTS.:E05TSI                  TUE 07/29/97 21:24 Page:142  
     1266    13551    1           GD_DATA.GD.STEP_BRKPNT.FLAGS='0'B;
     1267    13552    1           GD_DATA.GD.STEP_BRKPNT.OLD_BRKNUM = 0;
     1268    13553    1           GD_DATA.GD.GO_AGAIN = '0'B;
     1269    13554    2           IF G$TSA.I.TRAP# = %G_FPRG_XBREAK# THEN DO;
     1270    13555    2              GD_DATA.GD.XBRKINFO$->VLP_XBREAK.GOIC = '0'B;
     1271    13556    2              GD_DATA.GD.XBRKINFO$->VLP_XBREAK.GOBREAK = '0'B;
     1272    13557    2              END;
     1273    13558        /* */
     1274    13559    1           IF GD_DATA.GD.ABSADDR ~= ADDR(NIL) THEN
     1275    13560    2           DO;
     1276    13561    3              IF G$TSA.I.TRAP# = %G_FPRG_XBREAK# THEN DO;
     1277    13562    3                 GD_DATA.GD.XBRKINFO$->VLP_XBREAK.GOIC = '1'B;
     1278    13563    3                 GD_DATA.GD.XBRKINFO$->VLP_XBREAK.IC$ = GD_DATA.GD.ABSADDR;
     1279    13564    3                 END;
     1280    13565    2              ELSE
     1281    13566    2                  G$TSA.P$=GD_DATA.GD.ABSADDR;
     1282    13567    2              GD_DATA.GD.ABSADDR=ADDR(NIL);
     1283    13568    2              END;
     1284    13569    1           IF GD_DATA.GD.STEPCNT~=0 THEN
     1285    13570    2           DO;
     1286    13571        /*
     1287    13572          Setup a temporary breakpoint for stepping
     1288    13573                                                                                      */
     1289    13574    2              IF MON THEN
     1290    13575    2                 GD_DATA.GD.STEP_BRKPNT.USER# = 0;
     1291    13576    2              ELSE
     1292    13577    2                 GD_DATA.GD.STEP_BRKPNT.USER# = GD_DATA.GD.USE_USERNO;
     1293    13578    3              IF G$TSA.I.TRAP# = %G_FPRG_XBREAK# THEN DO;
     1294    13579    3                  GD_DATA.GD.STEP_BRKPNT.START$ = GD_DATA.GD.XBRKINFO$->VLP_XBREAK.IC$;
     1295    13580    3                  GD_DATA.GD.STEP_BRKPNT.ADR$ = PINCRW(GD_DATA.GD.STEP_BRKPNT.START$,
             13580                           GD_DATA.GD.STEPCNT);
     1296    13581    3                 END;
     1297    13582    3              ELSE DO;
     1298    13583    3                   PTR$ = G$TSA.P$;
     1299    13584    3                   CALL GDU$SETUP_WINDOW_USER(PTR$,GD_DATA.GD.STEP_BRKPNT.USER#);
     1300    13585    3                   IF PTR$->BITMEM = %GD#LNJB5_INST AND GD_DATA.GD.STEPCNT= 3 THEN
     1301    13586    3                      GD_DATA.GD.STEPCNT = GD_DATA.GD.STEPCNT+1;
PL6.E3A0      #005=GDB$FIRST_USER_TRAP File=GDB$BRKPNTS.:E05TSI                  TUE 07/29/97 21:24 Page:143  
     1302    13587    4                   IF PTR$->BITMEM = %GD#MCL_INST OR (PTR$->BITMEM = %GD#LNJB6_INST AND
             13587                            GD_DATA.GD.SOC) THEN DO;
     1303    13588    4                     GD_DATA.GD.STEP_BRKPNT.ADR$=PINCRW(G$TSA.P$,GD_DATA.GD.STEPCNT+1);
     1304    13589    4                     OFFSET=PINCRW(G$TSA.P$,GD_DATA.GD.STEPCNT)->SMEMORY;
     1305    13590    4                     IF PTR$->BITMEM = %GD#MCL_INST THEN
     1306    13591    4                        GD_DATA.GD.ALTRET_ADR$ = PINCRW(G$TSA.P$,GD_DATA.GD.STEPCNT+
             13591                                 OFFSET+1);
     1307    13592    4                     ELSE
     1308    13593    4                        GD_DATA.GD.ALTRET_ADR$ = PINCRW(G$TSA.P$,GD_DATA.GD.STEPCNT+
             13593                                 OFFSET);
     1309    13594    4                     PTR$ = GD_DATA.GD.ALTRET_ADR$;
     1310    13595    4                     CALL GDU$SETUP_WINDOW_USER(PTR$,GD_DATA.GD.STEP_BRKPNT.USER#);
     1311    13596    4                     GD_DATA.GD.ALTRET_INST=PTR$->MEMORY;
     1312    13597    4                     PTR$->BITMEM = %GD#BREAK_INST;
     1313    13598    4                     END;
     1314    13599    3                   ELSE
     1315    13600    3                     GD_DATA.GD.STEP_BRKPNT.ADR$=PINCRW(G$TSA.P$,GD_DATA.GD.STEPCNT);
     1316    13601    3                   GD_DATA.GD.STEP_BRKPNT.START$ = G$TSA.P$;
     1317    13602    3                 END;
     1318    13603    2              IF MON THEN
     1319    13604    2                 GD_DATA.GD.STEP_BRKPNT.USER#=0;
     1320    13605    2              ELSE
     1321    13606    2                 GD_DATA.GD.STEP_BRKPNT.USER#=GD_DATA.GD.USE_USERNO;
     1322    13607    2              ADR$=GD_DATA.GD.STEP_BRKPNT.ADR$;
     1323    13608    2              P$=GD_DATA.GD.STEP_BRKPNT.ADR$;
     1324    13609    2              CALL GDU$SETUP_WINDOW_USER (ADR$,GD_DATA.GD.STEP_BRKPNT.USER#)
     1325    13610    3              WHENRETURN DO;
     1326    13611    3                 CALL SRCHFORBRKPNT (BRK$, P$)
     1327    13612    4                 WHENRETURN DO;
     1328    13613    4                     GD_DATA.GD.STEP_BRKPNT.OLDINST = BRK$->BRKPNT.OLDINST;
     1329    13614    4                   END;
     1330    13615    4                 WHENALTRETURN DO;
     1331    13616    4                     GD_DATA.GD.STEP_BRKPNT.OLDINST=ADR$->MEMORY;
     1332    13617    4                     ADR$->BITMEM=%GD#BREAK_INST;
     1333    13618    4                   END;
     1334    13619    3                 GD_DATA.GD.STEP_BRKPNT.FLAGS.ACTIVE='1'B;
     1335    13620    3                 GD_DATA.GD.STEP_BRKPNT.FLAGS.ARMED='1'B;
PL6.E3A0      #005=GDB$FIRST_USER_TRAP File=GDB$BRKPNTS.:E05TSI                  TUE 07/29/97 21:24 Page:144  
     1336    13621    3                 END;
     1337    13622    2              GD_DATA.GD.STEPCNT=0;
     1338    13623    2              IF G$TSA.I.TRAP# = %G_FPRG_XBREAK#
     1339    13624    2              THEN GD_DATA.GD.XBRKINFO$->VLP_XBREAK.TT = '1'B;
     1340    13625    2              G$TSA.ISA.REGS.M1.J=%G_ENABLE#;
     1341    13626                 /* Make sure we get the right old inst if other kinds of brkpnts are set */
     1342    13627    2              IF GD_DATA.GD.ALTRET_ADR$ ~= ADDR(NIL) THEN
     1343    13628    2                 IF GD_DATA.GD.ALTRET_ADR$ = GD_DATA.GD.STEP_BRKPNT.ADR$ THEN
     1344    13629    2                    GD_DATA.GD.STEP_BRKPNT.OLDINST = GD_DATA.GD.ALTRET_INST;
     1345    13630    2              END;
     1346    13631        /*
     1347    13632          If we are continuing from a normal breakpoint (not a step), we
     1348    13633          need to execute the instruction that was supposed to be here.
     1349    13634          To do this we will put it back in memory now and replace it either
     1350    13635          at the next breakpoint or when we get the branch trace we are
     1351    13636          going to setup here
     1352    13637                                                                                      */
     1353    13638    2           IF BRKNUM > 0 AND BRKNUM <= %GD#MAXBRKNUM THEN DO;
     1354    13639    2                 IF G$TSA.I.TRAP# = %G_FPRG_XBREAK#
     1355    13640    2               AND GD_DATA.GD.XBRKINFO$->VLP_XBREAK.GOIC = '0'B
     1356    13641    3                 THEN DO;
     1357    13642                          /* Tell the interpreter that it is to execute REPLACED.INSTR
     1358    13643                             and GO                                                */
     1359    13644    3                     GD_DATA.GD.XBRKINFO$->VLP_XBREAK.GOBREAK = '1'B;
     1360    13645    3                     ADR$ = GD_DATA.GD.XBRKINFO$->VLP_XBREAK.IC$;
     1361    13646    3                     END;
     1362    13647    2                 ELSE ADR$ = G$TSA.P$;
     1363    13648    2                 CALL SRCHFORBRKPNT (BRK$, ADR$)
     1364    13649    3                 WHENRETURN DO;
     1365    13650    3                      IF BRK$->BRKPNT.FLAGS.ACTIVE AND
     1366    13651    4                        ADR$=BRK$->BRKPNT.ADR$ THEN DO;
     1367    13652    4                         IF ((GD$MSG.SUBFB.INTERPRETIVE) AND (G$TSA.I.TRAP# = %
             13652                                  G_FPRG_XBREAK#)
     1368    13653    5                           AND (GD_DATA.GD.XBRKINFO$->VLP_XBREAK.GOBREAK)) THEN DO;
     1369    13654    5                            GD_DATA.GD.XBRKINFO$->VLP_XBREAK.REPLACED.INSTR =
     1370    13655    5                             BRK$->BRKPNT.OLDINST;
     1371    13656    5                            END;
PL6.E3A0      #005=GDB$FIRST_USER_TRAP File=GDB$BRKPNTS.:E05TSI                  TUE 07/29/97 21:24 Page:145  
     1372    13657    5                         ELSE DO;
     1373    13658    5                            ADR$=BRK$->BRKPNT.ADR$;
     1374    13659    5                            CALL GDU$SETUP_WINDOW_USER (ADR$,BRK$->BRKPNT.USER#)
     1375    13660    6                            WHENRETURN DO;
     1376    13661    6                               ADR$->MEMORY=BRK$->BRKPNT.OLDINST;
     1377    13662    6                               BRK$->BRKPNT.FLAGS.ARMED = '0'B;
     1378    13663    6                               GD_DATA.GD.BRKNUM=BRKNUM;
     1379    13664    6                               G$TSA.ISA.REGS.M1.J=%G_ENABLE#;
     1380    13665    6                               END;
     1381    13666    5                            END;
     1382    13667    4                         END;
     1383    13668    3                   END;
     1384    13669    2                END;
     1385    13670    1           IF G$TSA.I.TRAP# = %G_FPRG_XBREAK#
     1386    13671    2           THEN DO;
     1387    13672    2                G$TSA.P$ = PINCRW(G$TSA.P$,1);
     1388    13673    2                IF BRKNUM = 0
     1389    13674    2                THEN GD_DATA.GD.XBRKINFO$->VLP_XBREAK.GOBREAK = '0'B;
     1390    13675    2              END;
     1391    13676        /*
     1392    13677          Restore the monitors window segment descriptor, since we probably
     1393    13678          trashed it along the way
     1394    13679                                                                                      */
     1395    13680    1           IF GD_DATA.GD.MODE=%GD#MODE_XDELTA THEN
     1396    13681    1              %ASDT_WINDOW#=GD_DATA.GD.WINDOWSEG;
     1397    13682        /*
     1398    13683          If the user specified GOTRAP, setup the S reg to tell the debugger
     1399    13684          this is what the user has specified, and do a normal return to the
     1400    13685          trap handler.
     1401    13686                                                                                      */
     1402    13687    1           IF GD_DATA.GD.TRACE ~= 0 OR GD_DATA.GD.ONCALL OR GD_DATA.GD.ONCALLS
     1403    13688    2           THEN DO;
     1404    13689    2                IF G$TSA.I.TRAP# = %G_FPRG_XBREAK#
     1405    13690    2                THEN GD_DATA.GD.XBRKINFO$ -> VLP_XBREAK.TT = '1'B;
     1406    13691    2                ELSE G$TSA.ISA.REGS.M1.J = '1'B;
     1407    13692    2             END;
     1408    13693        /* If post-associating FPL, set trap to XBREAK to tell the
PL6.E3A0      #005=GDB$FIRST_USER_TRAP File=GDB$BRKPNTS.:E05TSI                  TUE 07/29/97 21:24 Page:146  
     1409    13694           interpreter that a debugger is present.
     1410    13695        */
     1411    13696    1           IF GD$MSG.SUBFB.POSTASSOC THEN
     1412    13697    1              G$TSA.I.TRAP# = %G_FPRG_XBREAK#;
     1413    13698    1           IF GD_DATA.GD.GOTRAP THEN
     1414    13699    2           DO;
     1415    13700        /* No need to check for a trap handler if this is XDELTA. */
     1416    13701    2              IF GD_DATA.GD.MODE = %GD#MODE_XDELTA THEN
     1417    13702    2                 GOTO GOTRAP;
     1418    13703    2              TRAP_NO = G$TSA.I.TRAP#;
     1419    13704    2              IF G$TSA.I.TRAP# <=%G_SIP_QLT# THEN
     1420    13705    2                 IF G$ROS.U_ECCB$->G$ECCB.TRAP$=ENTADDR(NIL)
     1421    13706    2                 OR G$ROS.U_ECCB$->G$ECCB.FLTFLGS(G$TSA.I.TRAP#)='0'B THEN
     1422    13707    2                    GOTO NO_HAND;
     1423    13708    2                 ELSE
     1424    13709    2                    GOTO GOTRAP;
     1425    13710    2              IF G$TSA.I.TRAP# >= %G_FPRG_EXIT# AND G$TSA.I.TRAP#<=%G_FPRG_XXX# THEN
     1426    13711    2                 TRAP_NO=%G_FPRG_XCON#;
     1427    13712    2              IF G$TSA.I.TRAP#=%G_HOST_INT# THEN
     1428    13713    2                 TRAP_NO=%G_FPRG_BRK#;
     1429    13714    2              IF TRAP_NO < %G_FPRG_EVENT# OR TRAP_NO > %G_FPRG_MCLTRAP# THEN
     1430    13715    2                 GOTO GOTRAP;
     1431    13716    3              IF G$ROS.U_ECCB$->G$ECCB_ARRAYED.HAND$(TRAP_NO-%G_FPRG_EVENT#)=ENTADDR(
             13716                       NIL) THEN DO;
     1432    13717    3                 SIZE=%GD#RSPBRKSIZ;
     1433    13718    3   NO_HAND:      CALL GDI$SEND_ERROR_RESPONSE(SIZE,GD$MSG,%GD#RSPNOTRAPHAND);
     1434    13719    3                 GD_DATA.GD.STOPT = %G_YES#;
     1435    13720    3                 GOTO CALLGDI;
     1436    13721    3                 END;
     1437    13722    3              ELSE DO;
     1438    13723    3   GOTRAP:       G$TSA.ISA.S='0'B;
     1439    13724    3                 RETURN;
     1440    13725    3                 END;
     1441    13726    2              END;
     1442    13727    1           ALTRETURN;
     1443    13728    1   SRCHFORBRKPNT: PROC(BRK$,ADR$) ALTRET;
     1444    13729
PL6.E3A0      #005=GDB$FIRST_USER_TRAP File=GDB$BRKPNTS.:E05TSI                  TUE 07/29/97 21:24 Page:147  
     1445    13730        /**/
     1446    13731        /* Parameters */
     1447    13732        /**/
     1448    13733
     1449    13734    2   DCL BRK$ PTR;
     1450    13735    2   DCL ADR$ PTR;
     1451    13736
     1452    13737    2           BRK$ = ADDR(GD_DATA.MYSPACE(0));
     1453    13738    2           IF BRK$ = GD_DATA.GD.DYNSP$ THEN ALTRETURN;
     1454    13739    3           DO WHILE BRK$ ~= ADDR(NIL);
     1455    13740    4              IF BRK$->BRKPNT.ADR$ = ADR$ THEN DO;
     1456    13741    4                 GD_DATA.GD.BRK$ = BRK$;
     1457    13742    4                 GD_DATA.GD.BRKNUM = BRK$->BRKPNT.BRKNUM;
     1458    13743    4                 BRKNUM = GD_DATA.GD.BRKNUM;
     1459    13744    4                 RETURN;
     1460    13745    4                 END;
     1461    13746    3              ELSE BRK$ = BRK$->BRKPNT.FLINK$;
     1462    13747    3              END;
     1463    13748    2           ALTRETURN;
     1464    13749
     1465    13750    2   END SRCHFORBRKPNT;
     1466    13751        %EJECT;
PL6.E3A0      #005=GDB$FIRST_USER_TRAP File=GDB$BRKPNTS.:E05TSI                  TUE 07/29/97 21:24 Page:148  
     1467    13752    1   CMPRIF: PROC(BRK$) ALTRET;
     1468    13753
     1469    13754        /**/
     1470    13755        /* Parameters */
     1471    13756        /**/
     1472    13757
     1473    13758    2   DCL BRK$ PTR;
     1474    13759
     1475    13760        /**/
     1476    13761        /* Arguments */
     1477    13762        /**/
     1478    13763
     1479    13764    2   DCL DESC$ PTR;
     1480    13765    2   DCL ADR$ PTR;
     1481    13766    2   DCL DD_ADDRESS UBIN (32);
     1482    13767    2   DCL DD_IS_PTR BIT(1) ALIGNED;
     1483    13768    2   DCL ARRAY_CUR UBIN;
     1484    13769    2   DCL ARRAY_HIGH UBIN;
     1485    13770    2   DCL ARRAY_FIRST BIT(1) ALIGNED;
     1486    13771    2   DCL DD_BITSIZE UBIN;
     1487    13772    2   DCL BITOFF UBIN;
     1488    13773    2   DCL DSIZE UBIN;
     1489    13774    2   DCL DD_SEG UBIN WORD;
     1490    13775    2   DCL DD_DESC# UBIN WORD;
     1491    13776    2   DCL DD_NOT_IS BIT(1) ALIGNED;
     1492    13777
     1493    13778        /**/
     1494    13779        /* Local Vars */
     1495    13780        /**/
     1496    13781
     1497    13782    2   DCL VALS SBIN(32);
     1498    13783    2   DCL VALS_(0:31) REDEF VALS BIT(1) UNAL;
     1499    13784    2   DCL VALU REDEF VALS UBIN(32);
     1500    13785    2   DCL VALP$ REDEF VALS PTR;
     1501    13786    2   DCL 1 VALP REDEF VALS,
     1502    13787    2         2 C BIT(1) UNAL,
     1503    13788    2         2 * BIT(11) UNAL,
PL6.E3A0      #005=GDB$FIRST_USER_TRAP File=GDB$BRKPNTS.:E05TSI                  TUE 07/29/97 21:24 Page:149  
     1504    13789    2         2 W UBIN(20) UNAL;
     1505    13790    2   DCL VALP_(0:31) REDEF VALS BIT(1) UNAL;
     1506    13791    2   DCL VALB(0:1) BIT(32);
     1507    13792    2   DCL VALB_(0:63) REDEF VALB BIT(1) UNAL;
     1508    13793    2   DCL VALC CHAR(63);
     1509    13794    2   DCL VALC_(0:62) REDEF VALC CHAR(1);
     1510    13795    2   DCL I UBIN;
     1511    13796    2   DCL CONSTPTR$ PTR;
     1512    13797    2   DCL 1 CONSTPTR REDEF CONSTPTR$,
     1513    13798    2         2 C BIT(1) UNAL,
     1514    13799    2         2 * BIT(11) UNAL,
     1515    13800    2         2 W BIT(20) UNAL;
     1516    13801
     1517    13802        /**/
     1518    13803        /* Based Vars */
     1519    13804        /**/
     1520    13805
     1521    13806    2   DCL 1 B$BYTES BASED CALIGNED,
     1522    13807    2         2 B(0:0) CHAR(1);
     1523    13808    2   DCL 1 B$BITS BASED ALIGNED,
     1524    13809    2         2 B(0:0) BIT(1) UNAL;
     1525    13810
     1526    13811    2           GD_DATA.MISC.DESC$ = BRK$->IFBRKPNT.IFCOND.DD$;
     1527    13812    2           ARRAY_FIRST = '0'B;
     1528    13813    2           ARRAY_CUR = 0;
     1529    13814    2           ARRAY_HIGH = 0;
     1530    13815    2           SIZE = %GD#RSPBRKSIZ;
     1531    13816    2           CALL GDK$RESADDR (ARRAY_FIRST,ARRAY_CUR,ARRAY_HIGH,
     1532    13817    2              DD_SEG,DD_DESC#,DD_ADDRESS,DD_BITSIZE,
     1533    13818    3              BITOFF,DD_NOT_IS,DD_IS_PTR) WHENALTRETURN DO;
     1534    13819    3              CALL GDI$SEND_ERROR_RESPONSE(SIZE,MSGBFR,%GD#RSPBADADR);
     1535    13820    3              RETURN;
     1536    13821    3              END /* WHENALTRETURN */;
     1537    13822    2           CALL GDK$MPTR (ADR$,DD_ADDRESS,DD_SEG,DD_DESC#,DD_NOT_IS,
     1538    13823    2                          DD_IS_PTR,DSIZE);
     1539    13824    3           CALL GDU$SETUP_WINDOW_USER(ADR$,GD_DATA.GD.USERNO) WHENALTRETURN DO;
     1540    13825    3              IF ADDR(GD_DATA.GD.VLD)->GH_VLD.STATUS < 0 THEN RETURN;
PL6.E3A0      #005=GDB$FIRST_USER_TRAP File=GDB$BRKPNTS.:E05TSI                  TUE 07/29/97 21:24 Page:150  
     1541    13826    3              END;
     1542    13827
     1543    13828        /* Put value where it can be easily?? used later */
     1544    13829
     1545    13830    3           DO CASE(BRK$->IFBRKPNT.IFCOND.CTYPE);
     1546    13831    3              CASE(3); /* VALUE */
     1547    13832    3                 IF DD_BITSIZE > 32 THEN RETURN;
     1548    13833    3                 VALS = 0;
     1549    13834    4                 DO I = BITOFF TO BITOFF + DD_BITSIZE - 1;
     1550    13835    4                    VALS_(I-BITOFF+32-DD_BITSIZE) = ADR$->B$BITS.B(I);
     1551    13836    4                    END;
     1552    13837    3              CASE(1); /* CHAR */
     1553    13838    3                 IF DD_BITSIZE/8 > 63 THEN RETURN;
     1554    13839    3                 VALC = ' ';
     1555    13840    4                 DO I = (BITOFF/8) TO (DD_BITSIZE/8 + BITOFF/8 - 1);
     1556    13841    4                    VALC_(I-BITOFF/8) = ADR$->B$BYTES.B(I);
     1557    13842    4                    END;
     1558    13843    3              CASE(5); /* DECVALUE */
     1559    13844    3                 VALB = '0'B;
     1560    13845    3                 RETURN;
     1561    13846    3              CASE(2); /* BIT */
     1562    13847    3                 IF DD_BITSIZE > 64 THEN RETURN;
     1563    13848    4                 ELSE DO I = BITOFF TO DD_BITSIZE + BITOFF - 1;
     1564    13849    4                    VALB_(I-BITOFF) = ADR$->B$BITS.B(I);
     1565    13850    4                    END;
     1566    13851    3              CASE(4); /* PTR */
     1567    13852    3                 CONSTPTR$ = ADDR(NIL);
     1568    13853    3                 CONSTPTR.C = BRK$->IFBRKPNT.IFCOND.CONS$TANT.PNTR.C;
     1569    13854    3                 CONSTPTR.W = BRK$->IFBRKPNT.IFCOND.CONS$TANT.PNTR.W;
     1570    13855    3                 VALP$ = ADDR(NIL);
     1571    13856    4                 DO I = BITOFF TO DD_BITSIZE + BITOFF - 1;
     1572    13857    4                    VALP_(I-BITOFF) = ADR$->B$BITS.B(I);
     1573    13858    4                    END;
     1574    13859    3              CASE(ELSE);
     1575    13860    3                 RETURN;
     1576    13861    3              END /* CASE */;
     1577    13862
PL6.E3A0      #005=GDB$FIRST_USER_TRAP File=GDB$BRKPNTS.:E05TSI                  TUE 07/29/97 21:24 Page:151  
     1578    13863        /* Do the comparison */
     1579    13864
     1580    13865    3           DO CASE(BRK$->IFBRKPNT.IFCOND.CTYPE);
     1581    13866    3              CASE(1); /* CHAR */
     1582    13867    4                 IF BRK$->IFBRKPNT.IFCOND.COND = 6 /* EQUALS */ THEN DO;
     1583    13868    5                    DO I = 0 TO BRK$->IFBRKPNT.IFCOND.CONS$TANT.SIZE - 1;
     1584    13869    5                       IF VALC_(I) = BRK$->IFBRKPNT.IFCOND.CONS$TANT.TEXT.CHR(I) THEN;
     1585    13870    5                       ELSE ALTRETURN;
     1586    13871    5                       END;
     1587    13872    4                     RETURN;
     1588    13873    4                     END;
     1589    13874    4                 ELSE IF BRK$->IFBRKPNT.IFCOND.CTYPE = 5 /* ~EQUAL */ THEN DO;
     1590    13875    5                    DO I = 0 TO BRK$->IFBRKPNT.IFCOND.CONS$TANT.SIZE - 1;
     1591    13876    5                       IF VALC_(I) ~= BRK$->IFBRKPNT.IFCOND.CONS$TANT.TEXT.CHR(I) THEN
     1592    13877    5                          RETURN;
     1593    13878    5                       END;
     1594    13879    4                    ALTRETURN;
     1595    13880    4                    END;
     1596    13881    3                 ELSE RETURN;
     1597    13882    3              CASE(2); /* BIT */
     1598    13883    4                 IF BRK$->IFBRKPNT.IFCOND.COND = 6 /* EQUALS */ THEN DO;
     1599    13884    5                    DO I = 0 TO BRK$->IFBRKPNT.IFCOND.CONS$TANT.SIZE - 1;
     1600    13885    5                       IF VALB_(I) = BRK$->IFBRKPNT.IFCOND.CONS$TANT.BITS.TRING(I) THEN
             13885                                ;
     1601    13886    5                       ELSE ALTRETURN;
     1602    13887    5                       END;
     1603    13888    4                     RETURN;
     1604    13889    4                     END;
     1605    13890    4                 ELSE IF BRK$->IFBRKPNT.IFCOND.COND = 5 /* ~EQUAL */ THEN DO;
     1606    13891    5                    DO I = 0 TO BRK$->IFBRKPNT.IFCOND.CONS$TANT.SIZE - 1;
     1607    13892    5                       IF VALB_(I) ~= BRK$->IFBRKPNT.IFCOND.CONS$TANT.BITS.TRING(I)
             13892                                THEN
     1608    13893    5                          RETURN;
     1609    13894    5                       END;
     1610    13895    4                    ALTRETURN;
     1611    13896    4                    END;
     1612    13897    3              CASE(4); /* PTR */
PL6.E3A0      #005=GDB$FIRST_USER_TRAP File=GDB$BRKPNTS.:E05TSI                  TUE 07/29/97 21:24 Page:152  
     1613    13898    4                 DO CASE(BRK$->IFBRKPNT.IFCOND.COND);
     1614    13899    4                    CASE(6); /* EQUALS */
     1615    13900    4                       IF POFFC(CONSTPTR$,VALP$) = 0 THEN RETURN;
     1616    13901    4                       ELSE ALTRETURN;
     1617    13902    4                    CASE(5); /* ~EQUAL */
     1618    13903    4                       IF POFFC(CONSTPTR$,VALP$) ~= 0 THEN RETURN;
     1619    13904    4                       ELSE ALTRETURN;
     1620    13905    4                    CASE(1); /* > */
     1621    13906    4                       IF POFFC(VALP$,CONSTPTR$) > 0 THEN RETURN;
     1622    13907    4                       ELSE ALTRETURN;
     1623    13908    4                    CASE(2); /* < */
     1624    13909    4                       IF POFFC(VALP$,CONSTPTR$) < 0 THEN RETURN;
     1625    13910    4                       ELSE ALTRETURN;
     1626    13911    4                    CASE(3); /* >= */
     1627    13912    4                       IF POFFC(VALP$,CONSTPTR$) >= 0 THEN RETURN;
     1628    13913    4                       ELSE ALTRETURN;
     1629    13914    4                    CASE(4); /* <= */
     1630    13915    4                       IF POFFC(VALP$,CONSTPTR$) <= 0 THEN RETURN;
     1631    13916    4                       ELSE ALTRETURN;
     1632    13917    4                    CASE(ELSE);
     1633    13918    4                       RETURN;
     1634    13919    4                    END /* CASE */;
     1635    13920    3              CASE(3); /* VALUE */
     1636    13921    4                 DO CASE(BRK$->IFBRKPNT.IFCOND.COND);
     1637    13922    4                    CASE(1); /* > */
     1638    13923    4                       IF VALS > BRK$->IFBRKPNT.IFCOND.CONS$TANT.CONS.TANT THEN RETURN;
     1639    13924    4                    CASE(2); /* < */
     1640    13925    4                       IF VALS < BRK$->IFBRKPNT.IFCOND.CONS$TANT.CONS.TANT THEN RETURN;
     1641    13926    4                    CASE(3); /* >= */
     1642    13927    4                       IF VALS >= BRK$->IFBRKPNT.IFCOND.CONS$TANT.CONS.TANT THEN RETURN
             13927                                ;
     1643    13928    4                    CASE(4); /* <= */
     1644    13929    4                       IF VALS <= BRK$->IFBRKPNT.IFCOND.CONS$TANT.CONS.TANT THEN RETURN
             13929                                ;
     1645    13930    4                    CASE(5); /* ~= */
     1646    13931    4                       IF VALS ~= BRK$->IFBRKPNT.IFCOND.CONS$TANT.CONS.TANT THEN RETURN
             13931                                ;
PL6.E3A0      #005=GDB$FIRST_USER_TRAP File=GDB$BRKPNTS.:E05TSI                  TUE 07/29/97 21:24 Page:153  
     1647    13932    4                    CASE(6); /* = */
     1648    13933    4                       IF VALS = BRK$->IFBRKPNT.IFCOND.CONS$TANT.CONS.TANT THEN RETURN;
     1649    13934    4                    CASE(ELSE);
     1650    13935    4                       ALTRETURN;
     1651    13936    4                    END /* CASE */;
     1652    13937    3              CASE(ELSE);
     1653    13938    3                 RETURN;
     1654    13939    3              END /* CASE */;
     1655    13940
     1656    13941    2           ALTRETURN;
     1657    13942
     1658    13943    2   END CMPRIF;
     1659    13944    1   END GDB$FIRST_USER_TRAP;
     1660    13945        %EOD;

PL6.E3A0      #005=GDB$FIRST_USER_TRAP File=GDB$BRKPNTS.:E05TSI                  TUE 07/29/97 21:24 Page:154  
--  Include file information  --

   GH_HARDWARE_M.:E05TOU  is referenced.
   GD_BRKPNT_M.:E05TOU  is referenced.
   HF_ERRORS_C.:E05TOU  is referenced.
   KH$CHN.:E05TOU  is referenced.
   G_ROS_M.:E05TOU  is referenced.
   G_JIT_M.:E05TOU  is referenced.
   GM_VIRTUAL_E.:E05TOU  is referenced.
   GD$MACS_M.:E05TOU  is referenced.
   GD$MSG_M.:E05TOU  is referenced.
   GDA_EQUS_E.:E05TOU  is referenced.
   GD_EQUS_E.:E05TOU  is referenced.
   GD_DATA_M.:E05TOU  is referenced.
   GD_STATIC_DATA.:E05TOU  cannot be made into a system file and is referenced.
   LCP_6.:E05TOU  cannot be made into a system file and is referenced.
   G_HJIT_M.:E05TOU  is referenced.
   G_LCP6_E.:E05TOU  was found in the system file and is referenced.
   GT_LCP6_M.:E05TOU  was found in the system file and is referenced.
   KI_CP6.:E05TOU  was found in the system file and is referenced.
   GF_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GM_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GU_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GJ_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GH_LCP6_M.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure GDB$FIRST_USER_TRAP.

   Procedure GDB$FIRST_USER_TRAP requires 3448 words for executable code.
   Procedure GDB$FIRST_USER_TRAP requires 106 words of local(AUTO) storage.

PL6.E3A0      #005=GDB$FIRST_USER_TRAP File=GDB$BRKPNTS.:E05TSI                  TUE 07/29/97 21:24 Page:155  

 Object Unit name= GDB$FIRST_USER_TRAP                        File name= GDB$BRKPNTS.:E05TOU
 UTS= JUL 29 '97 21:24:57.72 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_LCP6_SYSTEM                               Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size HexSiz  Section name
    0  RoData even  UTS      2      2  GDB$FIRST_USER_TRAP
    1   Proc  even  none  3448    D78  GDB$FIRST_USER_TRAP
    2  RoData even  none     3      3  GDB$FIRST_USER_TRAP

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect HexLoc Primary Altret sequence   type   Parms  Name
     1      0   yes    yes     yes      Std        1  GDB$FIRST_USER_TRAP
     1      D          yes     yes      Std        1  GDB$TRAP_HND
PL6.E3A0      #005=GDB$FIRST_USER_TRAP File=GDB$BRKPNTS.:E05TSI                  TUE 07/29/97 21:24 Page:156  

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes    yes    Std       0 GDA$USER_INIT
         yes           Std       3 GDI$SEND_ERROR_RESPONSE
 yes     yes           Std       1 GDU$SETUP_WINDOW
 yes     yes           Std       2 GDU$SETUP_WINDOW_USER
         yes           Std       0 GDB$KILL_ALLBRKPNTS
         yes           Std       0 GDB$RESET_BRKPNT
         yes           Std       0 X6A_ARET
 yes     yes           Std       3 GDM$GRAB16
 yes     yes           Std       0 GDI$DECODE_MSG_WAIT_4_GO
         yes           Std       2 GDI$SEND_RESPONSE
 yes     yes           Std      10 GDK$RESADDR
         yes           Std       7 GDK$MPTR
                       nStd      0 X6A_AUTO_1
                       nStd      0 X6A_AALT
                       nStd      0 X6C_ALRZ
                       nStd      0 X6A_ARET
                       nStd      0 X6B_BLR
                       nStd      0 X6B_BCM

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     GD$DELTA_DATA$                        G$UHJIT$                              G$ASDT_USR$
     G$ASDT_MCL$                           G$MHJIT$                              G$JIT$
     G$ROS$                           r    G$ROS$
PL6.E3A0      #005=GDB$FIRST_USER_TRAP File=GDB$BRKPNTS.:E05TSI                  TUE 07/29/97 21:24 Page:157  


      660        1        /*T***********************************************************/
      661        2        /*T*                                                         */
      662        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      663        4        /*T*                                                         */
      664        5        /*T***********************************************************/
      665        6        %EJECT;
PL6.E3A0      #005=GDB$FIRST_USER_TRAP File=GDB$BRKPNTS.:E05TSI                  TUE 07/29/97 21:24 Page:158  
      666        7        /*F*    NAME:    GDB$TRAP_HND
      667        8                PURPOSE: This routine is the debuggers trap handler.  It is
      668        9                         called by the monitor whenever the debugger is in
      669       10                         control to handle traps of all types.
      670       11                CALL:    CALL GDB$TRAP_HND(TSA$)
      671       12                DESCRIPTION:  This routine is called with a pointer to the
      672       13                              TSA that caused this trap.  We first determine
      673       14                              if this is a trap we will handle.  Following
      674       15                              this we adjust the P counter in the TSA to reflect
      675       16                              the length of the instruction that caused us to
      676       17                              trap.  We then send a break responce message to
      677       18                              the host indicating that we are stopped.  All
      678       19                              breakpoints are removed and we loop waiting for
      679       20                              a GO. When we get the GO, we figure out if we
      680       21                              are to step or go to an absolute address, modify
      681       22                              the TSA accordingly and off we go.
      682       23        */
      683       24        GDB$FIRST_USER_TRAP: PROC(G$TSA) ALTRET;

     24   1 000000  D380 0000 0000  xent GDB$FIRST_USER_*LNJ,B5   X6A_AUTO_1
          1 000003       006A 0001                       DC       106,1

      684       25
      685       26        /**/
      686       27        /* Includes */
      687       28        /**/
      688       29
      689       30        %INCLUDE G_HJIT_M;
      690      175        %INCLUDE LCP_6;                        /* Various LCP6 EQUs */
      691      366        %INCLUDE GD_STATIC_DATA;
      692      839        %INCLUDE GD$MACS_M;                    /* Debugger macros */
      693      877        %INCLUDE GM_VIRTUAL_E;
      694     1087        %INCLUDE G_JIT_M;
      695     1352        %INCLUDE G_ROS_M;
      696     1434        %INCLUDE KH$CHN;
      697     1556        %INCLUDE HF_ERRORS_C;
      698     1641        %INCLUDE GD_BRKPNT_M;
PL6.E3A0      #005=GDB$FIRST_USER_TRAP File=GDB$BRKPNTS.:E05TSI                  TUE 07/29/97 21:24 Page:159  
      699     1696        %INCLUDE GH_HARDWARE_M;
      700     1794
      701     1795        /**/
      702     1796        /* Symrefs */
      703     1797        /**/
      704     1798
      705     1799    1   DCL G$UHJIT$ PTR SYMREF;
      706     1800    1   DCL G$ASDT_USR$ PTR SYMREF;
      707     1801    1   DCL G$ASDT_MCL$ PTR SYMREF;
      708     1802    1   DCL G$MHJIT$ PTR SYMREF;
      709     1803    1   DCL G$JIT$ PTR SYMREF;
      710     1804    1   DCL G$ROS$ PTR SYMREF;
      711     1805    1   DCL G$USRT$ PTR SYMREF;
      712     1806        %VLP_ERRCODE (FPTN=GHB_TRAP_MSG,ERR#=%E$TRAP,SEV=G_SEV_CONT#,
      713     1807                     STCLASS=CONSTANT,FCG=GH,MID=B,MON='1'B);
      714     1853
      715     1854        /**/
      716     1855        /* Based Items */
      717     1856        /**/
      718     1857
      719     1858        %GD_BRKPNT(FPTN=BRKPNT,STCLASS=BASED);
      720     1875        %GD_BRKPNT(FPTN=IFBRKPNT,STCLASS=BASED,LAST=",");
      721     1892        %GD_IFCOND(FPTN=IFCOND,LVL=2);
      722     1916        %VLP_XBREAK(STCLASS=BASED);
      723     1935        %G$MHJIT(STCLASS="BASED(G$MHJIT$)");
      724     8809        %G$UHJIT(STCLASS="BASED(G$UHJIT$)");
      725    11783        %G$JIT (STCLASS="BASED(G$JIT$)");
      726    12197        %G$SEGDESC (FPTN=G$SEGDESC, STCLASS=BASED);
      727    12219        %G$TSA(STCLASS="");                     /* TSA template */
      728    12607        %GD$MSG(STCLASS="BASED(MSG$)");         /* Message template */
      729    12763        %GH_VLD(STCLASS=BASED);
      730    12777        %G$ROS (STCLASS="BASED(G$ROS$)");
      731    12821        %G$ECCB(FPTN=G$ECCB_ARRAYED,ARRAYED=YES);
      732    12897        %G$ECCB;
      733    12973    1   DCL MEMORY UBIN BASED;                 /* Memory template */
      734    12974    1   DCL SMEMORY SBIN BASED;                /* Memory template */
      735    12975    1   DCL BITMEM BIT(16) BASED ALIGNED;      /* Another memory template */
PL6.E3A0      #005=GDB$FIRST_USER_TRAP File=GDB$BRKPNTS.:E05TSI                  TUE 07/29/97 21:24 Page:160  
      736    12976    1   DCL 1 BVECT BASED ALIGNED,
      737    12977    1         2 SIZE UBIN WORD ALIGNED,
      738    12978    1         2 PTR$ PTR ALIGNED;
      739    12979
      740    12980        /**/
      741    12981        /* Arguments */
      742    12982        /**/
      743    12983
      744    12984        /**/
      745    12985        /* Entries */
      746    12986        /**/
      747    12987
      748    12988    1   DCL GDB$RESET_BRKPNT ENTRY;            /* Remove all breakpoints */
      749    12989    1   DCL GDB$KILL_ALLBRKPNTS ENTRY;            /* KILL all breakpoints */
      750    12990    1   DCL GDI$DECODE_MSG_WAIT_4_GO ENTRY ALTRET; /* Process msgs til GO */
      751    12991    1   DCL GDI$SEND_RESPONSE ENTRY(2);        /* Send message to host */
      752    12992    1   DCL GDI$SEND_ERROR_RESPONSE ENTRY(3);
      753    12993    1   DCL GDU$SETUP_WINDOW ENTRY(1) ALTRET;
      754    12994    1   DCL GDU$SETUP_WINDOW_USER ENTRY(2) ALTRET;
      755    12995    1   DCL GDB$SET_BRKPNT ENTRY(2) OPTIONAL;
      756    12996    1   DCL GDK$RESADDR ENTRY(10) ALTRET;
      757    12997    1   DCL GDK$MPTR ENTRY(7);
      758    12998    1   DCL X6A_ARET ENTRY;
      759    12999    1   DCL GDA$USER_INIT ENTRY ALTRET OPTIONAL;
      760    13000    1   DCL GDM$GRAB16 ENTRY(3) ALTRET;
      761    13001    1   DCL GDK$PUDECBIN ENTRY(4);
      762    13002    1   DCL GDK$PTDECBIN ENTRY(4);
      763    13003    1   DCL GDK$UUDECBIN ENTRY(4);
      764    13004    1   DCL GDK$UTDECBIN ENTRY(4);
      765    13005    1   DCL GDK$ULDECBIN ENTRY(4);
      766    13006    1   DCL GDK$UODECBIN ENTRY(4);
      767    13007    1   DCL MAP_ADDRESS ENTRY(2) ALTRET;    /* XT
      768    13008        DCL XT SBIN;
      769    13009        DCL XT$ PTR; */
      770    13010
      771    13011        /**/
      772    13012        /* Temps */
PL6.E3A0      #005=GDB$FIRST_USER_TRAP File=GDB$BRKPNTS.:E05TSI                  TUE 07/29/97 21:24 Page:161  
      773    13013        /**/
      774    13014
      775    13015    1   DCL BRK$ PTR;
      776    13016    1   DCL BRKNUM SBIN;
      777    13017    1   DCL OFFSET SBIN;
      778    13018    1   DCL MSGBFR CHAR(64) BASED(MSG$) CALIGNED; /* Buffer for msg to host */
      779    13019    1   DCL DSIZE UBIN;
      780    13020    1   DCL MSG$ PTR;                      /* Pointer to message buffer */
      781    13021    1   DCL P$ PTR;
      782    13022    1   DCL P REDEF P$ UBIN(32);
      783    13023    1   DCL SIZE UBIN;                         /* Size of message to host */
      784    13024    1   DCL ADR$ PTR;
      785    13025    1   DCL PTR$ PTR;
      786    13026    1   DCL TRAP_NO UBIN;
      787    13027    1   DCL MON BIT(1) ALIGNED;
      788    13028        %VLP_ERRCODE (FPTN = ERRCODE_SCRATCH,STCLASS = "AUTO");
      789    13074        %EJECT;
PL6.E3A0      #005=GDB$FIRST_USER_TRAP File=GDB$BRKPNTS.:E05TSI                  TUE 07/29/97 21:24 Page:162  
      790    13075        /* If we entered here, we need to call the user debugger init routine */
      791    13076
      792    13077    1           CALL GDA$USER_INIT;

  13077   1 000005  CBF0 0000                            LAB,B4   0,IMO
          1 000007  E380 0000 0000  xent                 LNJ,B6   GDA$USER_INIT
          1 00000A       0001                            DC       s:13077+6,PREL
          1 00000B  0F81 0006                            B        s:13081,PREL

      793    13078        /**/
      794    13079    1   GDB$TRAP_HND: ENTRY(G$TSA) ALTRET;

  13079   1 00000D  D380 0000 0000  xent GDB$TRAP_HND    LNJ,B5   X6A_AUTO_1
          1 000010       006A 0001                       DC       106,1

      795    13080        /* */
      796    13081    1           MSG$ = ADDR(GD_DATA.GDA.RCV);

  13081   1 000012  EC80 0000 0000  xsym                 LDB,B6   GD$DELTA_DATA$
          1 000015  DBC6 000D                            LAB,B5   13,B6
          1 000017  DFC7 000B                            STB,B5   MSG$,AUTO

      797    13082    1           IF G$TSA.I.TRAP# = %G_HOST_INT# OR G$TSA.I.TRAP# = %G_FPRG_START# THEN

  13082   1 000019  CCC7 0004                            LDB,B4   @G$TSA,AUTO
          1 00001B  E2C4 0002                            LLH,R6   2,B4
          1 00001D  6D37                                 CMV,R6   55
          1 00001E  0901 0004                            BE       s:13083,PREL
          1 000020  6D3D                                 CMV,R6   61
          1 000021  0981 0004                            BNE      s:13084,PREL

      798    13083    1              G$TSA.Z.IS=0;

  13083   1 000023  8844 0005                            LBF,'000F'X       5,B4
  13083   1 000025       000F

      799    13084    2           IF GD_DATA.GD.IGNARITH THEN DO;
PL6.E3A0      #005=GDB$FIRST_USER_TRAP File=GDB$BRKPNTS.:E05TSI                  TUE 07/29/97 21:24 Page:163  

  13084   1 000026  89C6 014C                            CMZ      332,B6
          1 000028  0881 0019                            BAGE     s:13095,PREL

      800    13085    2              IF G$TSA.I.TRAP#=%G_INT_REG_OV# OR

  13085   1 00002A  6D06                                 CMV,R6   6
          1 00002B  0901 0013                            BE       s:13092,PREL
          1 00002D  6D07                                 CMV,R6   7
          1 00002E  0901 0010                            BE       s:13092,PREL
          1 000030  6D08                                 CMV,R6   8
          1 000031  0901 000D                            BE       s:13092,PREL
          1 000033  6D13                                 CMV,R6   19
          1 000034  0901 000A                            BE       s:13092,PREL
          1 000036  6D19                                 CMV,R6   25
          1 000037  0901 0007                            BE       s:13092,PREL
          1 000039  6D1B                                 CMV,R6   27
          1 00003A  0901 0004                            BE       s:13092,PREL
          1 00003C  6D1D                                 CMV,R6   29
          1 00003D  0981 0004                            BNE      s:13095,PREL

      801    13086    2                 G$TSA.I.TRAP#=%G_S_DBZ# OR
      802    13087    2                 G$TSA.I.TRAP#=%G_S_EXP_OV# OR
      803    13088    2                 G$TSA.I.TRAP#=%G_S_EXP_UF# OR
      804    13089    2                 G$TSA.I.TRAP#=%G_C_DBZ# OR
      805    13090    2                 G$TSA.I.TRAP#=%G_C_CHAR# OR
      806    13091    3                 G$TSA.I.TRAP#=%G_C_OV# THEN DO;

      807    13092    3                   ALTRETURN;

  13092   1 00003F  C380 0000 0000  xent                 LNJ,B4   X6A_AALT

      808    13093    3                   END;
      809    13094    2              END;
      810    13095    1           GD$MSG = '0'B;

  13095   1 000042  AB80 0000 0000  02                   LAB,B2   0
PL6.E3A0      #005=GDB$FIRST_USER_TRAP File=GDB$BRKPNTS.:E05TSI                  TUE 07/29/97 21:24 Page:164  
          1 000045  2C00                                 LDV,R2   0
          1 000046  6C01                                 LDV,R6   1
          1 000047  BB85                                 LAB,B3   ,B5
          1 000048  3C00                                 LDV,R3   0
          1 000049  F870 01A2                            LDR,R7   418,IMO
          1 00004B  D380 0000 0000  xent                 LNJ,B5   X6C_ALRZ

      811    13096    2           IF GD_DATA.GD.STOPT THEN DO;

  13096   1 00004E  EC80 0000 0000  xsym                 LDB,B6   GD$DELTA_DATA$
          1 000051  82C6 014C                            LB,'0004'X        332,B6
          1 000053       0004
          1 000054  0581 0024                            BBF      s:13102,PREL

      812    13097    2              IF NOT GD_DATA.GD.ANSWERED THEN

  13097   1 000056  82C6 014C                            LB,'0002'X        332,B6
  13097   1 000058       0002
          1 000059  0501 0015                            BBT      s:13099,PREL

      813    13098    2                 CALL GDI$SEND_ERROR_RESPONSE (SIZE,MSGBFR,%GD#RSPBADADR);

  13098   1 00005B  DBF0 0037                            LAB,B5   55,IMO
          1 00005D  DFC7 005A                            STB,B5   CONSTPTR$+7,AUTO
          1 00005F  CCC7 000B                            LDB,B4   MSG$,AUTO
          1 000061  CFC7 0058                            STB,B4   CONSTPTR$+5,AUTO
          1 000063  BBC7 000F                            LAB,B3   SIZE,AUTO
          1 000065  BFC7 0056                            STB,B3   CONSTPTR$+3,AUTO
          1 000067  BBC7 0056                            LAB,B3   CONSTPTR$+3,AUTO
          1 000069  CBF0 0300                            LAB,B4   768,IMO
          1 00006B  E380 0000 0000  xent                 LNJ,B6   GDI$SEND_ERROR_RESPONSE
          1 00006E       0001                            DC       s:13099,PREL

      814    13099    2              G$TSA.P$$=ENTADDR(X6A_ARET);

  13099   1 00006F  EB80 0000 0000  xent                 LAB,B6   X6A_ARET
          1 000072  DCC7 0004                            LDB,B5   @G$TSA,AUTO
PL6.E3A0      #005=GDB$FIRST_USER_TRAP File=GDB$BRKPNTS.:E05TSI                  TUE 07/29/97 21:24 Page:165  
          1 000074  EFC5 0008                            STB,B6   8,B5

      815    13100    2              ALTRETURN;

  13100   1 000076  C380 0000 0000  xent                 LNJ,B4   X6A_AALT

      816    13101    2              END;
      817    13102    1           GD_DATA.DELTAINFO.TSA$=ADDR(G$TSA);

  13102   1 000079  DCC7 0004                            LDB,B5   @G$TSA,AUTO
          1 00007B  DFC6 0006                            STB,B5   6,B6

      818    13103        /* */
      819    13104    1   STARTOVER:
      820    13105        /*
      821    13106          If this is XDELTA, we need to perform the entire ASDT stuff
      822    13107                                                                                      */
      823    13108    1           IF GD_DATA.GD.MODE=%GD#MODE_XDELTA THEN

  13108   1 00007D  EC80 0000 0000  xsym STARTOVER       LDB,B6   GD$DELTA_DATA$
          1 000080  E846 0130                            LDR,R6   304,B6
          1 000082  6D02                                 CMV,R6   2
          1 000083  0981 00A1                            BNE      s:13165,PREL

      824    13109    2           DO;

      825    13110        /*
      826    13111          If the debug link is not up, let Linda have it
      827    13112                                                                                      */
      828    13113    2              IF NOT(GD_DATA.GDA.CONNECTFLG) THEN

  13113   1 000085  89C6 0009                            CMZ      9,B6
          1 000087  0801 0004                            BAL      s:13120,PREL

      829    13114    2                 RETURN;

  13114   1 000089  C380 0000 0000  xent                 LNJ,B4   X6A_ARET
PL6.E3A0      #005=GDB$FIRST_USER_TRAP File=GDB$BRKPNTS.:E05TSI                  TUE 07/29/97 21:24 Page:166  

      830    13115        /*
      831    13116          Stash away the current desciptor in the monitors window segment
      832    13117          so we can use it if we need to look through it and so we can be nice
      833    13118          guys and restore it
      834    13119                                                                                      */
      835    13120    2              GD_DATA.GD.WINDOWSEG=%ASDT_WINDOW#;

  13120   1 00008C  DCC6 017A                            LDB,B5   378,B6
          1 00008E  8C85                                 LDI      ,B5
          1 00008F  8D46 0168                            SDI      360,B6

      836    13121        /*
      837    13122           Setup GD_DATA.GD.USERNO appropriatly to reflect whether a user was running
      838    13123           or the monitor was running
      839    13124                                                                                      */
      840    13125    2              GD_DATA.GD.USE_REAL = %G_NO#;

  13125   1 000091  8846 014C                            LBF,'0008'X       332,B6
  13125   1 000093       0008

      841    13126    2              MON=%G_YES#;

  13126   1 000094  8947 0015                            LBT,'8000'X       MON,AUTO
  13126   1 000096       8000

      842    13127    2              IF G$TSA.ISA.ISM2.MMU

  13127   1 000097  CCC7 0004                            LDB,B4   @G$TSA,AUTO
          1 000099  89C4 0014                            CMZ      20,B4
          1 00009B  0881 0064                            BAGE     s:13148,PREL
          1 00009D  BCC4 000D                            LDB,B3   13,B4
          1 00009F  BD80 0000 0000  xsym                 CMB,B3   G$ASDT_USR$
          1 0000A2  0901 0006                            BE       s:13130,PREL
          1 0000A4  BD80 0000 0000  xsym                 CMB,B3   G$ASDT_MCL$
          1 0000A7  0981 0058                            BNE      s:13148,PREL

PL6.E3A0      #005=GDB$FIRST_USER_TRAP File=GDB$BRKPNTS.:E05TSI                  TUE 07/29/97 21:24 Page:167  
      843    13128    2                AND (G$TSA.ISA.ASV$=G$ASDT_USR$ OR G$TSA.ISA.ASV$=G$ASDT_MCL$) THEN
      844    13129    3              DO;

      845    13130    3                 GD_DATA.GD.ASDT_PPNO=G$MHJIT.ASDT_MON.UMHJIT.BASE;

  13130   1 0000A9  AC80 0000 0000  xsym                 LDB,B2   G$MHJIT$
          1 0000AC  D842 000A                            LDR,R5   10,B2
          1 0000AE  D570 7FFF                            AND,R5   32767,IMO
          1 0000B0  DF46 0147                            STR,R5   327,B6

      846    13131    3                 GD_DATA.GD.ASDT_OFFSET=POFFW(G$TSA.ISA.ASV$,G$UHJIT$);

  13131   1 0000B2  8CC4 000D                            LDI      13,B4
          1 0000B4  8480 0000 0000  xsym                 SID      G$UHJIT$
          1 0000B7  E857                                 LDR,R6   R7
          1 0000B8  EF46 0148                            STR,R6   328,B6

      847    13132        /*
      848    13133          Setup a pointer to the JIT, since we may or may not be mapped
      849    13134          onto it at the time.
      850    13135                                                                                      */
      851    13136    3                 P$=G$JIT$;

  13136   1 0000BA  BC80 0000 0000  xsym                 LDB,B3   G$JIT$
          1 0000BD  BFC7 000D                            STB,B3   P$,AUTO

      852    13137    4                 CALL GDU$SETUP_WINDOW (P$) WHENRETURN DO;

  13137   1 0000BF  9BC7 000D                            LAB,B1   P$,AUTO
          1 0000C1  9FC7 0056                            STB,B1   CONSTPTR$+3,AUTO
          1 0000C3  BBC7 0056                            LAB,B3   CONSTPTR$+3,AUTO
          1 0000C5  CBF0 0100                            LAB,B4   256,IMO
          1 0000C7  E380 0000 0000  xent                 LNJ,B6   GDU$SETUP_WINDOW
          1 0000CA       0022                            DC       s:13143,PREL

      853    13138    4                    GD_DATA.GD.USERNO=G$JIT.USR#;

PL6.E3A0      #005=GDB$FIRST_USER_TRAP File=GDB$BRKPNTS.:E05TSI                  TUE 07/29/97 21:24 Page:168  
  13138   1 0000CB  EC80 0000 0000  xsym                 LDB,B6   GD$DELTA_DATA$
          1 0000CE  DC80 0000 0000  xsym                 LDB,B5   G$JIT$
          1 0000D1  E845 0004                            LDR,R6   4,B5
          1 0000D3  E570 00FF                            AND,R6   255,IMO
          1 0000D5  EF46 016B                            STR,R6   363,B6

      854    13139    4                    IF G$TSA.ISA.ASV$ ~= G$ASDT_USR$ THEN

  13139   1 0000D7  CCC7 0004                            LDB,B4   @G$TSA,AUTO
          1 0000D9  BCC4 000D                            LDB,B3   13,B4
          1 0000DB  BD80 0000 0000  xsym                 CMB,B3   G$ASDT_USR$
          1 0000DE  0901 0008                            BE       s:13141,PREL

      855    13140    4                       GD$MSG.BRKRSP.MBU = '1'B;

  13140   1 0000E0  ACC7 000B                            LDB,B2   MSG$,AUTO
          1 0000E2  8942 0019                            LBT,'0080'X       25,B2
          1 0000E4       0080
          1 0000E5  0F81 0006                            B        s:13143,PREL

      856    13141    4                    ELSE GD$MSG.BRKRSP.MBU = '0'B;

  13141   1 0000E7  ACC7 000B                            LDB,B2   MSG$,AUTO
          1 0000E9  8842 0019                            LBF,'0080'X       25,B2
          1 0000EB       0080

      857    13142    4                    END;

      858    13143    3                 IF G$TSA.ISA.ASV$=G$ASDT_USR$ AND G$TSA.P>=%GM_ISR1_BASE THEN

  13143   1 0000EC  ECC7 0004                            LDB,B6   @G$TSA,AUTO
          1 0000EE  DCC6 000D                            LDB,B5   13,B6
          1 0000F0  DD80 0000 0000  xsym                 CMB,B5   G$ASDT_USR$
          1 0000F3  0981 0020                            BNE      s:13155,PREL
          1 0000F5  8CC6 0008                            LDI      8,B6
          1 0000F7  84F0 0001 0000                       SID      65536,IMO
          1 0000FA  6801 0019                            BLZ,R6   s:13155,PREL
PL6.E3A0      #005=GDB$FIRST_USER_TRAP File=GDB$BRKPNTS.:E05TSI                  TUE 07/29/97 21:24 Page:169  

      859    13144    3                    MON=%G_NO#;

  13144   1 0000FC  8747 0015                            CL       MON,AUTO

      860    13145    3                 END;

  13145   1 0000FE  0F81 0015                            B        s:13155,PREL

      861    13146    2              ELSE
      862    13147    3              DO;

      863    13148    3                 GD_DATA.GD.USERNO=0;

  13148   1 000100  8746 016B                            CL       363,B6

      864    13149    3                 GD_DATA.GD.ASDT_PPNO=G$MHJIT.ASDT_MON.MHJIT.BASE;

  13149   1 000102  BC80 0000 0000  xsym                 LDB,B3   G$MHJIT$
          1 000105  D843 000C                            LDR,R5   12,B3
          1 000107  D570 7FFF                            AND,R5   32767,IMO
          1 000109  DF46 0147                            STR,R5   327,B6

      865    13150    3                 GD_DATA.GD.ASDT_OFFSET=POFFW(ADDR(G$MHJIT.ASDT_MON),ADDR(G$MHJIT));

  13150   1 00010B  8C80 0000 0000  xsym                 LDI      G$MHJIT$
          1 00010E  8480 0000 0000  xsym                 SID      G$MHJIT$
          1 000111  E857                                 LDR,R6   R7
          1 000112  EF46 0148                            STR,R6   328,B6

      866    13151    3                 END;

      867    13152        /*
      868    13153          Stash away the calculated values just in case the guy says USE
      869    13154                                                                                      */
      870    13155    2              GD_DATA.GD.ASDT_USE_PPNO=GD_DATA.GD.ASDT_PPNO;

PL6.E3A0      #005=GDB$FIRST_USER_TRAP File=GDB$BRKPNTS.:E05TSI                  TUE 07/29/97 21:24 Page:170  
  13155   1 000114  EC80 0000 0000  xsym                 LDB,B6   GD$DELTA_DATA$
          1 000117  E846 0147                            LDR,R6   327,B6
          1 000119  EF46 0149                            STR,R6   329,B6

      871    13156    2              GD_DATA.GD.ASDT_USE_OFFSET=GD_DATA.GD.ASDT_OFFSET;

  13156   1 00011B  D846 0148                            LDR,R5   328,B6
          1 00011D  DF46 014A                            STR,R5   330,B6

      872    13157    2              GD_DATA.GD.USE_USERNO=GD_DATA.GD.USERNO;

  13157   1 00011F  C846 016B                            LDR,R4   363,B6
          1 000121  CF46 014B                            STR,R4   331,B6

      873    13158    2              END;

  13158   1 000123  0F81 0010                            B        s:13172,PREL

      874    13159        /*
      875    13160          If this is user delta, we just need to properly setup the user
      876    13161          stuff.
      877    13162                                                                                      */
      878    13163    1           ELSE
      879    13164    2           DO;

      880    13165    2              GD_DATA.GD.USERNO=G$JIT$->G$JIT.USR#;

  13165   1 000125  DC80 0000 0000  xsym                 LDB,B5   G$JIT$
          1 000128  D845 0004                            LDR,R5   4,B5
          1 00012A  D570 00FF                            AND,R5   255,IMO
          1 00012C  DF46 016B                            STR,R5   363,B6

      881    13166    2              GD_DATA.GD.USE_USERNO=G$JIT$->G$JIT.USR#;

  13166   1 00012E  C845 0004                            LDR,R4   4,B5
          1 000130  C570 00FF                            AND,R4   255,IMO
          1 000132  CF46 014B                            STR,R4   331,B6
PL6.E3A0      #005=GDB$FIRST_USER_TRAP File=GDB$BRKPNTS.:E05TSI                  TUE 07/29/97 21:24 Page:171  

      882    13167    2              END;

      883    13168        /*
      884    13169          Init the break number cell to 0 (Temp breakpoint) and disable
      885    13170          the branch trace bit in this TSA's ISA.
      886    13171                                                                                      */
      887    13172    1           BRKNUM=0;

  13172   1 000134  8747 0008                            CL       BRKNUM,AUTO

      888    13173    1           GD_DATA.GD.TRACE_ACTIVE = G$TSA.ISA.REGS.M1.J;

  13173   1 000136  DCC7 0004                            LDB,B5   @G$TSA,AUTO
          1 000138  E845 002E                            LDR,R6   46,B5
          1 00013A  6047                                 SOR,R6   7
          1 00013B  EAC6 014C                            SRM,R6,'0001'X    332,B6
          1 00013D       0001

      889    13174    1           G$TSA.ISA.REGS.M1.J=%G_DISABLE#;

  13174   1 00013E  8845 002E                            LBF,'0080'X       46,B5
  13174   1 000140       0080

      890    13175        /*
      891    13176          If there is any breakpoint that needs cleanup (needs to be put back
      892    13177          in memory), do it now, if the user hasn't killed it
      893    13178                                                                                      */
      894    13179    1           IF GD_DATA.GD.BRKNUM > 0 THEN

  13179   1 000141  E846 0158                            LDR,R6   344,B6
          1 000143  6901 004D                            BEZ,R6   s:13202,PREL

      895    13180    2           DO;

      896    13181    2              IF GD_DATA.GD.BRK$->BRKPNT.FLAGS.ACTIVE AND

PL6.E3A0      #005=GDB$FIRST_USER_TRAP File=GDB$BRKPNTS.:E05TSI                  TUE 07/29/97 21:24 Page:172  
  13181   1 000145  CCC6 0159                            LDB,B4   345,B6
          1 000147  89C4 000A                            CMZ      10,B4
          1 000149  0881 0040                            BAGE     s:13195,PREL
          1 00014B  D844 000A                            LDR,R5   10,B4
          1 00014D  5001                                 SOL,R5   1
          1 00014E  D570 8000                            AND,R5   -32768,IMO
          1 000150  D670 8000                            XOR,R5   -32768,IMO
          1 000152  5901 0037                            BEZ,R5   s:13195,PREL

      897    13182    2                 ~GD_DATA.GD.BRK$->BRKPNT.FLAGS.ARMED THEN
      898    13183    3              DO;

      899    13184    3                 ADR$=GD_DATA.GD.BRK$->BRKPNT.ADR$;

  13184   1 000154  BCC4 0005                            LDB,B3   5,B4
          1 000156  BFC7 0010                            STB,B3   ADR$,AUTO

      900    13185    3                 CALL GDU$SETUP_WINDOW_USER (ADR$,

  13185   1 000158  ABC4 0008                            LAB,B2   8,B4
          1 00015A  AFC7 0058                            STB,B2   CONSTPTR$+5,AUTO
          1 00015C  9BC7 0010                            LAB,B1   ADR$,AUTO
          1 00015E  9FC7 0056                            STB,B1   CONSTPTR$+3,AUTO
          1 000160  BBC7 0056                            LAB,B3   CONSTPTR$+3,AUTO
          1 000162  CBF0 0200                            LAB,B4   512,IMO
          1 000164  E380 0000 0000  xent                 LNJ,B6   GDU$SETUP_WINDOW_USER
          1 000167       0014                            DC       s:13191,PREL

      901    13186    4                   GD_DATA.GD.BRK$->BRKPNT.USER#) WHENRETURN DO;

      902    13187    4                    GD_DATA.GD.BRK$->BRKPNT.OLDINST=ADR$->MEMORY;

  13187   1 000168  EC80 0000 0000  xsym                 LDB,B6   GD$DELTA_DATA$
          1 00016B  DCC6 0159                            LDB,B5   345,B6
          1 00016D  CCC7 0010                            LDB,B4   ADR$,AUTO
          1 00016F  E804                                 LDR,R6   ,B4
          1 000170  EF45 0007                            STR,R6   7,B5
PL6.E3A0      #005=GDB$FIRST_USER_TRAP File=GDB$BRKPNTS.:E05TSI                  TUE 07/29/97 21:24 Page:173  

      903    13188    4                    GD_DATA.GD.BRK$->BRKPNT.FLAGS.ARMED = '1'B;

  13188   1 000172  DCC6 0159                            LDB,B5   345,B6
          1 000174  8945 000A                            LBT,'4000'X       10,B5
          1 000176       4000

      904    13189    4                    ADR$->BITMEM=%GD#BREAK_INST;

  13189   1 000177  DCC7 0010                            LDB,B5   ADR$,AUTO
          1 000179  6C02                                 LDV,R6   2
          1 00017A  EF05                                 STR,R6   ,B5

      905    13190    4                    END;

      906    13191    3                 GD_DATA.GD.USERNO=GD_DATA.GD.USE_USERNO;

  13191   1 00017B  EC80 0000 0000  xsym                 LDB,B6   GD$DELTA_DATA$
          1 00017E  E846 014B                            LDR,R6   331,B6
          1 000180  EF46 016B                            STR,R6   363,B6

      907    13192    3                 GD_DATA.GD.ASDT_PPNO=GD_DATA.GD.ASDT_USE_PPNO;

  13192   1 000182  D846 0149                            LDR,R5   329,B6
          1 000184  DF46 0147                            STR,R5   327,B6

      908    13193    3                 GD_DATA.GD.ASDT_OFFSET=GD_DATA.GD.ASDT_USE_OFFSET;

  13193   1 000186  C846 014A                            LDR,R4   330,B6
          1 000188  CF46 0148                            STR,R4   328,B6

      909    13194    3                 END;

      910    13195    2              GD_DATA.GD.BRKNUM=0;

  13195   1 00018A  8746 0158                            CL       344,B6

PL6.E3A0      #005=GDB$FIRST_USER_TRAP File=GDB$BRKPNTS.:E05TSI                  TUE 07/29/97 21:24 Page:174  
      911    13196    2              GD_DATA.GD.BRK$ = ADDR(NIL);

  13196   1 00018C  DB80 0000 0000                       LAB,B5   0
          1 00018F  DFC6 0159                            STB,B5   345,B6

      912    13197    2              END;

      913    13198        /*
      914    13199          Determine if LDTRC - if yes - call KILL_ALLBRKPNTS
      915    13200          If LDTRC in library - do GOTRAP.
      916    13201        */
      917    13202    1           IF G$TSA.I.TRAP# = %G_FPRG_START2# AND

  13202   1 000191  DCC7 0004                            LDB,B5   @G$TSA,AUTO
          1 000193  E2C5 0002                            LLH,R6   2,B5
          1 000195  6D3E                                 CMV,R6   62
          1 000196  0981 0021                            BNE      s:13213,PREL
          1 000198  D846 0130                            LDR,R5   304,B6
          1 00019A  5D01                                 CMV,R5   1
          1 00019B  0981 001C                            BNE      s:13213,PREL

      918    13203    1              GD_DATA.GD.MODE = %GD#MODE_USER_DELTA
      919    13204    2           THEN DO;

      920    13205    2                CALL GDB$KILL_ALLBRKPNTS;

  13205   1 00019D  CBF0 0000                            LAB,B4   0,IMO
          1 00019F  E380 0000 0000  xent                 LNJ,B6   GDB$KILL_ALLBRKPNTS
          1 0001A2       0001                            DC       s:13206,PREL

      921    13206    2                IF G$JIT.SLIB# ~= 0 AND

  13206   1 0001A3  EC80 0000 0000  xsym                 LDB,B6   G$JIT$
          1 0001A6  82C6 008C                            LB,'00FF'X        140,B6
          1 0001A8       00FF
          1 0001A9  0581 000E                            BBF      s:13213,PREL
          1 0001AB  DCC7 0004                            LDB,B5   @G$TSA,AUTO
PL6.E3A0      #005=GDB$FIRST_USER_TRAP File=GDB$BRKPNTS.:E05TSI                  TUE 07/29/97 21:24 Page:175  
          1 0001AD  8CC5 0008                            LDI      8,B5
          1 0001AF  84F0 0006 0000                       SID      393216,IMO
          1 0001B2  6A01 0819                            BGZ,R6   s:13722,PREL
          1 0001B4  6801 0003                            BLZ,R6   s:13213,PREL
          1 0001B6  7981 0815                            BNEZ,R7  s:13722,PREL

      922    13207    2                   G$TSA.P > %GM_ISR6_BASE
      923    13208    2                THEN GOTO GOTRAP;
      924    13209    2              END;

      925    13210        /*
      926    13211          Determine if this was a branch trace trap
      927    13212                                                                                      */
      928    13213    2           IF G$TSA.I.TRAP# = %G_FPRG_XBREAK# THEN DO;

  13213   1 0001B8  ECC7 0004                            LDB,B6   @G$TSA,AUTO
          1 0001BA  E2C6 0002                            LLH,R6   2,B6
          1 0001BC  6D33                                 CMV,R6   51
          1 0001BD  0981 0129                            BNE      s:13274,PREL

      929    13214    2              P$ = G$TSA.B3$;

  13214   1 0001BF  DCC6 000A                            LDB,B5   10,B6
          1 0001C1  DFC7 000D                            STB,B5   P$,AUTO

      930    13215    2              CALL GDU$SETUP_WINDOW_USER(P$,GD_DATA.GD.USERNO) ALTRET(BADXBRK);

  13215   1 0001C3  CC80 0000 0000  xsym                 LDB,B4   GD$DELTA_DATA$
          1 0001C6  BBC4 016B                            LAB,B3   363,B4
          1 0001C8  BFC7 0058                            STB,B3   CONSTPTR$+5,AUTO
          1 0001CA  ABC7 000D                            LAB,B2   P$,AUTO
          1 0001CC  AFC7 0056                            STB,B2   CONSTPTR$+3,AUTO
          1 0001CE  BBC7 0056                            LAB,B3   CONSTPTR$+3,AUTO
          1 0001D0  CBF0 0200                            LAB,B4   512,IMO
          1 0001D2  E380 0000 0000  xent                 LNJ,B6   GDU$SETUP_WINDOW_USER
          1 0001D5       001C                            DC       s:13218,PREL

PL6.E3A0      #005=GDB$FIRST_USER_TRAP File=GDB$BRKPNTS.:E05TSI                  TUE 07/29/97 21:24 Page:176  
      931    13216    2              GD_DATA.GD.XBRKINFO$ = P$->BVECT.PTR$;

  13216   1 0001D6  ECC7 000D                            LDB,B6   P$,AUTO
          1 0001D8  DCC6 0001                            LDB,B5   1,B6
          1 0001DA  CC80 0000 0000  xsym                 LDB,B4   GD$DELTA_DATA$
          1 0001DD  DFC4 0154                            STB,B5   340,B4

      932    13217    2              CALL GDU$SETUP_WINDOW_USER(GD_DATA.GD.XBRKINFO$,GD_DATA.GD.USERNO)

  13217   1 0001DF  BBC4 016B                            LAB,B3   363,B4
          1 0001E1  BFC7 0058                            STB,B3   CONSTPTR$+5,AUTO
          1 0001E3  ABC4 0154                            LAB,B2   340,B4
          1 0001E5  AFC7 0056                            STB,B2   CONSTPTR$+3,AUTO
          1 0001E7  BBC7 0056                            LAB,B3   CONSTPTR$+3,AUTO
          1 0001E9  CBF0 0200                            LAB,B4   512,IMO
          1 0001EB  E380 0000 0000  xent                 LNJ,B6   GDU$SETUP_WINDOW_USER
          1 0001EE       0003                            DC       s:13218,PREL
          1 0001EF  0F81 001D                            B        s:13224,PREL

      933    13218    3              WHENALTRETURN DO;

      934    13219    3   BADXBRK:
      935    13220    3                 CALL GDI$SEND_ERROR_RESPONSE(%GD#RSPBRKSIZ,MSGBFR,%GD#RSPBADXBREAK);

  13220   1 0001F1  EBF0 0040            BADXBRK         LAB,B6   64,IMO
          1 0001F3  DBF0 003B                            LAB,B5   59,IMO
          1 0001F5  DFC7 005A                            STB,B5   CONSTPTR$+7,AUTO
          1 0001F7  CCC7 000B                            LDB,B4   MSG$,AUTO
          1 0001F9  CFC7 0058                            STB,B4   CONSTPTR$+5,AUTO
          1 0001FB  EFC7 0056                            STB,B6   CONSTPTR$+3,AUTO
          1 0001FD  BBC7 0056                            LAB,B3   CONSTPTR$+3,AUTO
          1 0001FF  CBF0 0300                            LAB,B4   768,IMO
          1 000201  E380 0000 0000  xent                 LNJ,B6   GDI$SEND_ERROR_RESPONSE
          1 000204       0001                            DC       s:13221,PREL

      936    13221    3                 GD_DATA.GD.STOPT = %G_YES#;

PL6.E3A0      #005=GDB$FIRST_USER_TRAP File=GDB$BRKPNTS.:E05TSI                  TUE 07/29/97 21:24 Page:177  
  13221   1 000205  EC80 0000 0000  xsym                 LDB,B6   GD$DELTA_DATA$
          1 000208  8946 014C                            LBT,'0004'X       332,B6
          1 00020A       0004

      937    13222    3                 GOTO CALLGDI;

  13222   1 00020B  0F81 04C5                            B        s:13534,PREL

      938    13223    3                 END;
      939    13224    2              SIZE = %GD#RSPBRKSIZ;

  13224   1 00020D  6C40                                 LDV,R6   64
          1 00020E  EF47 000F                            STR,R6   SIZE,AUTO

      940    13225    2              GD$MSG.FNC = %GD#RSPBRK;

  13225   1 000210  5C2D                                 LDV,R5   45
          1 000211  ECC7 000B                            LDB,B6   MSG$,AUTO
          1 000213  D786                                 STH,R5   ,B6

      941    13226    2              GD$MSG.BRKRSP.ADR$ = GD_DATA.GD.XBRKINFO$->VLP_XBREAK.IC$;

  13226   1 000214  DC80 0000 0000  xsym                 LDB,B5   GD$DELTA_DATA$
          1 000217  CCC5 0154                            LDB,B4   340,B5
          1 000219  BC84                                 LDB,B3   ,B4
          1 00021A  BFC6 0001                            STB,B3   1,B6

      942    13227    2              P$ = GD$MSG.BRKRSP.ADR$;

  13227   1 00021C  BFC7 000D                            STB,B3   P$,AUTO

      943    13228    2              GD$MSG.BRKRSP.TSA$ = ADDR(G$TSA);

  13228   1 00021E  DCC7 0004                            LDB,B5   @G$TSA,AUTO
          1 000220  DFC6 0003                            STB,B5   3,B6

      944    13229    3              IF GD_DATA.GD.XBRKINFO$->VLP_XBREAK.TRAP# = %G_TRACE# THEN DO;
PL6.E3A0      #005=GDB$FIRST_USER_TRAP File=GDB$BRKPNTS.:E05TSI                  TUE 07/29/97 21:24 Page:178  

  13229   1 000222  CC80 0000 0000  xsym                 LDB,B4   GD$DELTA_DATA$
          1 000225  BCC4 0154                            LDB,B3   340,B4
          1 000227  C2C3 0006                            LLH,R4   6,B3
          1 000229  4D02                                 CMV,R4   2
          1 00022A  0981 0098                            BNE      s:13267,PREL

      945    13230    3                 IF GD_DATA.GD.XBRKINFO$->VLP_XBREAK.TC OR

  13230   1 00022C  82C3 0006                            LB,'0010'X        6,B3
  13230   1 00022E       0010
          1 00022F  0501 000B                            BBT      s:13233,PREL
          1 000231  82C3 0006                            LB,'0080'X        6,B3
          1 000233       0080
          1 000234  0581 0028                            BBF      s:13241,PREL
          1 000236  B844 0153                            LDR,R3   339,B4
          1 000238  3D01                                 CMV,R3   1
          1 000239  0981 0023                            BNE      s:13241,PREL

      946    13231    3                    (GD_DATA.GD.XBRKINFO$->VLP_XBREAK.TT AND
      947    13232    4                     GD_DATA.GD.TRACE = %TRACE_XFERS) THEN DO;

      948    13233    4                    GD$MSG.FNC = %GD#RSPTRACE;

  13233   1 00023B  3C24                                 LDV,R3   36
          1 00023C  B786                                 STH,R3   ,B6

      949    13234    4                    GD$MSG.BRKRSP.ADR$ = P$;

  13234   1 00023D  CCC7 000D                            LDB,B4   P$,AUTO
          1 00023F  CFC6 0001                            STB,B4   1,B6

      950    13235    4                    GD$MSG.BRKRSP.ADR_FROM$ =

  13235   1 000241  BC80 0000 0000  xsym                 LDB,B3   GD$DELTA_DATA$
          1 000244  ACC3 0154                            LDB,B2   340,B3
          1 000246  9CC2 0002                            LDB,B1   2,B2
PL6.E3A0      #005=GDB$FIRST_USER_TRAP File=GDB$BRKPNTS.:E05TSI                  TUE 07/29/97 21:24 Page:179  
          1 000248  9FC6 001A                            STB,B1   26,B6

      951    13236    4                       GD_DATA.GD.XBRKINFO$->VLP_XBREAK.OLDIC$;
      952    13237    4                    SIZE = %GD#RSPBRKSIZ;

  13237   1 00024A  EF47 000F                            STR,R6   SIZE,AUTO

      953    13238    4                    CALL GDI$SEND_RESPONSE(SIZE,MSGBFR);

  13238   1 00024C  EFC7 0058                            STB,B6   CONSTPTR$+5,AUTO
          1 00024E  CBC7 000F                            LAB,B4   SIZE,AUTO
          1 000250  CFC7 0056                            STB,B4   CONSTPTR$+3,AUTO
          1 000252  BBC7 0056                            LAB,B3   CONSTPTR$+3,AUTO
          1 000254  CBF0 0200                            LAB,B4   512,IMO
          1 000256  E380 0000 0000  xent                 LNJ,B6   GDI$SEND_RESPONSE
          1 000259       0001                            DC       s:13239,PREL

      954    13239    4                    ALTRETURN;

  13239   1 00025A  C380 0000 0000  xent                 LNJ,B4   X6A_AALT

      955    13240    4                    END;
      956    13241    3                 ELSE GD_DATA.GD.XBRKINFO$ -> VLP_XBREAK.TT = '0'B;

  13241   1 00025D  8843 0006                            LBF,'0080'X       6,B3
  13241   1 00025F       0080

      957    13242    4                 CALL SRCHFORBRKPNT(BRK$,P$) WHENRETURN DO;

  13242   1 000260  BBC7 000D                            LAB,B3   P$,AUTO
          1 000262  BFC7 001C                            STB,B3   @BRK$+2,AUTO
          1 000264  ABC7 0006                            LAB,B2   BRK$,AUTO
          1 000266  AFC7 001A                            STB,B2   ERRCODE_SCRATCH+4,AUTO
          1 000268  E3C0 076D                            LNJ,B6   s:0,PREL
          1 00026A       0048                            DC       s:13262,PREL

      958    13243    4                    BRKNUM = BRK$->BRKPNT.BRKNUM;
PL6.E3A0      #005=GDB$FIRST_USER_TRAP File=GDB$BRKPNTS.:E05TSI                  TUE 07/29/97 21:24 Page:180  

  13243   1 00026B  ECC7 0006                            LDB,B6   BRK$,AUTO
          1 00026D  E846 0002                            LDR,R6   2,B6
          1 00026F  EF47 0008                            STR,R6   BRKNUM,AUTO

      959    13244    4                    GD$MSG.BRKRSP.TRAP# = BRKNUM;

  13244   1 000271  DCC7 000B                            LDB,B5   MSG$,AUTO
          1 000273  EF45 0005                            STR,R6   5,B5

      960    13245    4                    IF BRK$->BRKPNT.BYPASSCOUNT > 0 THEN

  13245   1 000275  ECC7 0006                            LDB,B6   BRK$,AUTO
          1 000277  D846 0003                            LDR,R5   3,B6
          1 000279  5901 0025                            BEZ,R5   s:13256,PREL

      961    13246    5                       IF BRK$->BRKPNT.CUR_BYPASSCOUNT > 0 THEN DO;

  13246   1 00027B  C846 0004                            LDR,R4   4,B6
          1 00027D  4901 001E                            BEZ,R4   s:13255,PREL

      962    13247    5                         BRK$->BRKPNT.CUR_BYPASSCOUNT = BRK$->BRKPNT.CUR_BYPASSCOUNT -
             13247                                   1;

  13247   1 00027F  88C6 0004                            DEC      4,B6

      963    13248    5   JUSTKIDDING:
      964    13249    5                          GD_DATA.GD.XBRKINFO$->VLP_XBREAK.REPLACED.INSTR = BRK$->
             13249                                   BRKPNT.OLDINST;

  13249   1 000281  EC80 0000 0000  xsym JUSTKIDDING     LDB,B6   GD$DELTA_DATA$
          1 000284  DCC6 0154                            LDB,B5   340,B6
          1 000286  CCC7 0006                            LDB,B4   BRK$,AUTO
          1 000288  E844 0007                            LDR,R6   7,B4
          1 00028A  EF45 0003                            STR,R6   3,B5

      965    13250    5                          GD_DATA.GD.XBRKINFO$->VLP_XBREAK.GOBREAK = '1'B;
PL6.E3A0      #005=GDB$FIRST_USER_TRAP File=GDB$BRKPNTS.:E05TSI                  TUE 07/29/97 21:24 Page:181  

  13250   1 00028C  DCC6 0154                            LDB,B5   340,B6
          1 00028E  8945 0006                            LBT,'0020'X       6,B5
          1 000290       0020

      966    13251    5                          G$TSA.P$ = PINCRW(G$TSA.P$,1);

  13251   1 000291  DCC7 0004                            LDB,B5   @G$TSA,AUTO
          1 000293  CCC5 0008                            LDB,B4   8,B5
          1 000295  BBC4 0001                            LAB,B3   1,B4
          1 000297  BFC5 0008                            STB,B3   8,B5

      967    13252    5                          ALTRETURN;

  13252   1 000299  C380 0000 0000  xent                 LNJ,B4   X6A_AALT

      968    13253    5                          END;
      969    13254    4                       ELSE
      970    13255    4                          BRK$->BRKPNT.CUR_BYPASSCOUNT = BRK$->BRKPNT.BYPASSCOUNT;

  13255   1 00029C  C855                                 LDR,R4   R5
          1 00029D  CF46 0004                            STR,R4   4,B6

      971    13256    4                    IF BRK$->BRKPNT.FLAGS.IFCOND THEN

  13256   1 00029F  ECC7 0006                            LDB,B6   BRK$,AUTO
          1 0002A1  82C6 000A                            LB,'1000'X        10,B6
          1 0002A3       1000
          1 0002A4  0581 000B                            BBF      s:13260,PREL

      972    13257    5                       CALL CMPRIF(BRK$) WHENALTRETURN DO;

  13257   1 0002A6  CBC7 0006                            LAB,B4   BRK$,AUTO
          1 0002A8  CFC7 001A                            STB,B4   ERRCODE_SCRATCH+4,AUTO
          1 0002AA  E3C0 0766                            LNJ,B6   s:0,PREL
          1 0002AC       0003                            DC       s:13258,PREL
          1 0002AD  0F81 0002                            B        s:13260,PREL
PL6.E3A0      #005=GDB$FIRST_USER_TRAP File=GDB$BRKPNTS.:E05TSI                  TUE 07/29/97 21:24 Page:182  

      973    13258    5                          GOTO JUSTKIDDING;

  13258   1 0002AF  0FD2                                 B        s:13249,SPREL

      974    13259    5                          END;
      975    13260    4                    END;

  13260   1 0002B0  0F81 0010                            B        s:13266,PREL

      976    13261    4                 WHENALTRETURN DO;

      977    13262    4                    BRKNUM = %GD#MAXBRKNUM + 1;

  13262   1 0002B2  6C15                                 LDV,R6   21
          1 0002B3  EF47 0008                            STR,R6   BRKNUM,AUTO

      978    13263    4                    GD$MSG.BRKRSP.TRAP# = GD_DATA.GD.XBRKINFO$->VLP_XBREAK.TRAP# +

  13263   1 0002B5  EC80 0000 0000  xsym                 LDB,B6   GD$DELTA_DATA$
          1 0002B8  DCC6 0154                            LDB,B5   340,B6
          1 0002BA  CCC7 000B                            LDB,B4   MSG$,AUTO
          1 0002BC  D2C5 0006                            LLH,R5   6,B5
          1 0002BE  5E15                                 ADV,R5   21
          1 0002BF  DF44 0005                            STR,R5   5,B4

      979    13264    4                       %GD#MAXBRKNUM + 1;
      980    13265    4                    END;

      981    13266    3                 END;

  13266   1 0002C1  0F81 0005                            B        s:13268,PREL

      982    13267    2              ELSE GD$MSG.BRKRSP.TRAP# = BRKNUM;

  13267   1 0002C3  B847 0008                            LDR,R3   BRKNUM,AUTO
          1 0002C5  BF46 0005                            STR,R3   5,B6
PL6.E3A0      #005=GDB$FIRST_USER_TRAP File=GDB$BRKPNTS.:E05TSI                  TUE 07/29/97 21:24 Page:183  

      983    13268    2              GD$MSG.BRKRSP.DATA_SIZE = 0;

  13268   1 0002C7  ECC7 000B                            LDB,B6   MSG$,AUTO
          1 0002C9  87C6 0019                            CLH      25,B6

      984    13269    2              CALL GDI$SEND_RESPONSE(SIZE,MSGBFR);

  13269   1 0002CB  EFC7 0058                            STB,B6   CONSTPTR$+5,AUTO
          1 0002CD  DBC7 000F                            LAB,B5   SIZE,AUTO
          1 0002CF  DFC7 0056                            STB,B5   CONSTPTR$+3,AUTO
          1 0002D1  BBC7 0056                            LAB,B3   CONSTPTR$+3,AUTO
          1 0002D3  CBF0 0200                            LAB,B4   512,IMO
          1 0002D5  E380 0000 0000  xent                 LNJ,B6   GDI$SEND_RESPONSE
          1 0002D8       0001                            DC       s:13270,PREL

      985    13270    2              GD_DATA.GD.STOPT = '1'B;

  13270   1 0002D9  EC80 0000 0000  xsym                 LDB,B6   GD$DELTA_DATA$
          1 0002DC  8946 014C                            LBT,'0004'X       332,B6
          1 0002DE       0004

      986    13271    2              CALL GDB$RESET_BRKPNT;

  13271   1 0002DF  CBF0 0000                            LAB,B4   0,IMO
          1 0002E1  E380 0000 0000  xent                 LNJ,B6   GDB$RESET_BRKPNT
          1 0002E4       0001                            DC       s:13272,PREL

      987    13272    2              GOTO CALLGDI;

  13272   1 0002E5  0F81 03EB                            B        s:13534,PREL

      988    13273    2              END;
      989    13274    2          IF G$TSA.I.TRAP# = %GD#ENTRY_TRAP# AND G$TSA.INST ~= %GD#BREAK_INST THEN DO;

  13274   1 0002E7  6D02                                 CMV,R6   2
          1 0002E8  0981 0218                            BNE      s:13397,PREL
PL6.E3A0      #005=GDB$FIRST_USER_TRAP File=GDB$BRKPNTS.:E05TSI                  TUE 07/29/97 21:24 Page:184  
          1 0002EA  D846 0004                            LDR,R5   4,B6
          1 0002EC  D970 0002                            CMR,R5   2,IMO
          1 0002EE  0901 0212                            BE       s:13397,PREL

      990    13275    3              IF GD_DATA.GD.ONCALL THEN DO;

  13275   1 0002F0  DC80 0000 0000  xsym                 LDB,B5   GD$DELTA_DATA$
          1 0002F3  82C5 014C                            LB,'0800'X        332,B5
          1 0002F5       0800
          1 0002F6  0581 0029                            BBF      s:13285,PREL

      991    13276    3                 P$ = G$TSA.P$;

  13276   1 0002F8  CCC6 0008                            LDB,B4   8,B6
          1 0002FA  CFC7 000D                            STB,B4   P$,AUTO

      992    13277    3                 CALL SRCHFORBRKPNT(BRK$,P$)

  13277   1 0002FC  BBC7 000D                            LAB,B3   P$,AUTO
          1 0002FE  BFC7 001C                            STB,B3   @BRK$+2,AUTO
          1 000300  ABC7 0006                            LAB,B2   BRK$,AUTO
          1 000302  AFC7 001A                            STB,B2   ERRCODE_SCRATCH+4,AUTO
          1 000304  E3C0 06D1                            LNJ,B6   s:0,PREL
          1 000306       001A                            DC       s:13285,PREL

      993    13278    4                   WHENRETURN DO;

      994    13279    4                     GD$MSG.BRKRSP.ADR_FROM$ = PINCRW(G$TSA.A$,-G$TSA.Z.IS);

  13279   1 000307  ECC7 0004                            LDB,B6   @G$TSA,AUTO
          1 000309  B846 0005                            LDR,R3   5,B6
          1 00030B  B570 000F                            AND,R3   15,IMO
          1 00030D  DCC6 0006                            LDB,B5   6,B6
          1 00030F  8253                                 NEG      R3
          1 000310  CBB5                                 LAB,B4   ,B5,R3
          1 000311  BCC7 000B                            LDB,B3   MSG$,AUTO
          1 000313  CFC3 001A                            STB,B4   26,B3
PL6.E3A0      #005=GDB$FIRST_USER_TRAP File=GDB$BRKPNTS.:E05TSI                  TUE 07/29/97 21:24 Page:185  

      995    13280    4                     G$TSA.Z.IS = 0;

  13280   1 000315  8846 0005                            LBF,'000F'X       5,B6
  13280   1 000317       000F

      996    13281    4                     BRKNUM = BRK$->BRKPNT.BRKNUM;

  13281   1 000318  DCC7 0006                            LDB,B5   BRK$,AUTO
          1 00031A  E845 0002                            LDR,R6   2,B5
          1 00031C  EF47 0008                            STR,R6   BRKNUM,AUTO

      997    13282    4                     GOTO CHECK_BYPASS;

  13282   1 00031E  0F81 024F                            B        s:13417,PREL

      998    13283    4                     END;
      999    13284    3                 END;

     1000    13285    2              IF GD_DATA.GD.ONCALLS AND (PINCRW(G$TSA.A$,-G$TSA.Z.IS)->BITMEM&'FF80'X)
             13285                       =

  13285   1 000320  EC80 0000 0000  xsym                 LDB,B6   GD$DELTA_DATA$
          1 000323  82C6 014C                            LB,'1000'X        332,B6
          1 000325       1000
          1 000326  0581 0030                            BBF      s:13293,PREL
          1 000328  DCC7 0004                            LDB,B5   @G$TSA,AUTO
          1 00032A  B845 0005                            LDR,R3   5,B5
          1 00032C  B570 000F                            AND,R3   15,IMO
          1 00032E  CCC5 0006                            LDB,B4   6,B5
          1 000330  BF47 0056                            STR,R3   CONSTPTR$+3,AUTO
          1 000332  8253                                 NEG      R3
          1 000333  B847 0056                            LDR,R3   CONSTPTR$+3,AUTO
          1 000335  8253                                 NEG      R3
          1 000336  E834                                 LDR,R6   ,B4,R3
          1 000337  E570 FF80                            AND,R6   -128,IMO
          1 000339  E970 E380                            CMR,R6   -7296,IMO
PL6.E3A0      #005=GDB$FIRST_USER_TRAP File=GDB$BRKPNTS.:E05TSI                  TUE 07/29/97 21:24 Page:186  
          1 00033B  0981 001B                            BNE      s:13293,PREL

     1001    13286    3                 %GD#LNJB6_INST THEN DO;

     1002    13287    3                 P$ = G$TSA.P$;

  13287   1 00033D  CCC5 0008                            LDB,B4   8,B5
          1 00033F  CFC7 000D                            STB,B4   P$,AUTO

     1003    13288    3                 GD$MSG.BRKRSP.ADR_FROM$ = PINCRW(G$TSA.A$,-G$TSA.Z.IS);

  13288   1 000341  A845 0005                            LDR,R2   5,B5
          1 000343  A570 000F                            AND,R2   15,IMO
          1 000345  BCC5 0006                            LDB,B3   6,B5
          1 000347  8252                                 NEG      R2
          1 000348  ABA3                                 LAB,B2   ,B3,R2
          1 000349  9CC7 000B                            LDB,B1   MSG$,AUTO
          1 00034B  AFC1 001A                            STB,B2   26,B1

     1004    13289    3                 BRKNUM = GD_DATA.GD.OC_BRKNUM;

  13289   1 00034D  E846 0131                            LDR,R6   305,B6
          1 00034F  EF47 0008                            STR,R6   BRKNUM,AUTO

     1005    13290    3                 BRK$=GD_DATA.GD.ONCALLS_BRK$;

  13290   1 000351  BCC6 0135                            LDB,B3   309,B6
          1 000353  BFC7 0006                            STB,B3   BRK$,AUTO

     1006    13291    3                 GOTO CHECK_BYPASS;

  13291   1 000355  0F81 0218                            B        s:13417,PREL

     1007    13292    3                 END;
     1008    13293    3              IF GD_DATA.GD.TRACE ~= %TRACE_OFF THEN DO;

  13293   1 000357  E846 0153                            LDR,R6   339,B6
PL6.E3A0      #005=GDB$FIRST_USER_TRAP File=GDB$BRKPNTS.:E05TSI                  TUE 07/29/97 21:24 Page:187  
          1 000359  6901 006D                            BEZ,R6   s:13319,PREL

     1009    13294    4                 DO CASE(GD_DATA.GD.TRACE);

  13294   1 00035B  B856                                 LDR,R3   R6
          1 00035C  3D03                                 CMV,R3   3
          1 00035D  0281 003C                            BGE      s:13306,PREL
          1 00035F  A830 0000 0365  01                   LDR,R2   s:13294+10,R3
          1 000362  83A0 0000 0368  01                   JMP      s:13296,R2
          1 000365       0032                            DC       s:13306,PREL
          1 000366       0030                            DC       s:13304,PREL
          1 000367       0000                            DC       s:13296,PREL

     1010    13295    4                    CASE(%TRACE_CALLS);

     1011    13296    4                       P$ = PINCRW(G$TSA.A$,-G$TSA.Z.IS);

  13296   1 000368  DCC7 0004                            LDB,B5   @G$TSA,AUTO
          1 00036A  9845 0005                            LDR,R1   5,B5
          1 00036C  9570 000F                            AND,R1   15,IMO
          1 00036E  CCC5 0006                            LDB,B4   6,B5
          1 000370  8251                                 NEG      R1
          1 000371  BB94                                 LAB,B3   ,B4,R1
          1 000372  BFC7 000D                            STB,B3   P$,AUTO

     1012    13297    4                       CALL GDU$SETUP_WINDOW_USER(P$,GD_DATA.GD.USERNO)

  13297   1 000374  CBC6 016B                            LAB,B4   363,B6
          1 000376  CFC7 0058                            STB,B4   CONSTPTR$+5,AUTO
          1 000378  ABC7 000D                            LAB,B2   P$,AUTO
          1 00037A  AFC7 0056                            STB,B2   CONSTPTR$+3,AUTO
          1 00037C  BBC7 0056                            LAB,B3   CONSTPTR$+3,AUTO
          1 00037E  CBF0 0200                            LAB,B4   512,IMO
          1 000380  E380 0000 0000  xent                 LNJ,B6   GDU$SETUP_WINDOW_USER
          1 000383       0003                            DC       s:13299,PREL
          1 000384  0F81 0011                            B        s:13302,PREL

PL6.E3A0      #005=GDB$FIRST_USER_TRAP File=GDB$BRKPNTS.:E05TSI                  TUE 07/29/97 21:24 Page:188  
     1013    13298    5                       WHENALTRETURN DO;

     1014    13299    5                       IF (P$->BITMEM & 'FF80'X) ~= %GD#LNJB6_INST THEN

  13299   1 000386  ECC7 000D                            LDB,B6   P$,AUTO
          1 000388  E806                                 LDR,R6   ,B6
          1 000389  E570 FF80                            AND,R6   -128,IMO
          1 00038B  E970 E380                            CMR,R6   -7296,IMO
          1 00038D  0901 0008                            BE       s:13302,PREL

     1015    13300    5                          IF ADDR(GD_DATA.GD.VLD)->GH_VLD.STATUS < 0 THEN

  13300   1 00038F  DC80 0000 0000  xsym                 LDB,B5   GD$DELTA_DATA$
          1 000392  E845 0173                            LDR,R6   371,B5
          1 000394  6801 0032                            BLZ,R6   s:13319,PREL

     1016    13301    5                             GOTO NOTRACE;
     1017    13302    5                          END;

  13302   1 000396  0F81 0005                            B        s:13308,PREL

     1018    13303    4                    CASE(%TRACE_XFERS);

     1019    13304    4                       GOTO SENDTRACERSP;

  13304   1 000398  0F81 0003                            B        s:13308,PREL

     1020    13305    4                    CASE(ELSE);

     1021    13306    4                       GOTO NOTRACE;

  13306   1 00039A  0F81 002C                            B        s:13319,PREL

     1022    13307        /*N* BAD TRACE VALUE */
     1023    13308    4                    END /* CASE */;

     1024    13309    3   SENDTRACERSP:
PL6.E3A0      #005=GDB$FIRST_USER_TRAP File=GDB$BRKPNTS.:E05TSI                  TUE 07/29/97 21:24 Page:189  
     1025    13310    3                 GD$MSG.FNC = %GD#RSPTRACE;

  13310   1 00039C  6C24                 SENDTRACERSP    LDV,R6   36
          1 00039D  ECC7 000B                            LDB,B6   MSG$,AUTO
          1 00039F  E786                                 STH,R6   ,B6

     1026    13311    3                 GD$MSG.BRKRSP.ADR$ = G$TSA.P$;

  13311   1 0003A0  DCC7 0004                            LDB,B5   @G$TSA,AUTO
          1 0003A2  CCC5 0008                            LDB,B4   8,B5
          1 0003A4  CFC6 0001                            STB,B4   1,B6

     1027    13312    3                 GD$MSG.BRKRSP.ADR_FROM$ = PINCRW(G$TSA.A$,-G$TSA.Z.IS);

  13312   1 0003A6  B845 0005                            LDR,R3   5,B5
          1 0003A8  B570 000F                            AND,R3   15,IMO
          1 0003AA  BCC5 0006                            LDB,B3   6,B5
          1 0003AC  8253                                 NEG      R3
          1 0003AD  ABB3                                 LAB,B2   ,B3,R3
          1 0003AE  AFC6 001A                            STB,B2   26,B6

     1028    13313    3                 G$TSA.ISA.REGS.M1.J = %G_ENABLE#;

  13313   1 0003B0  8945 002E                            LBT,'0080'X       46,B5
  13313   1 0003B2       0080

     1029    13314    3                 SIZE = %GD#RSPBRKSIZ;

  13314   1 0003B3  5C40                                 LDV,R5   64
          1 0003B4  DF47 000F                            STR,R5   SIZE,AUTO

     1030    13315    3                 CALL GDI$SEND_RESPONSE(SIZE,MSGBFR);

  13315   1 0003B6  EFC7 0058                            STB,B6   CONSTPTR$+5,AUTO
          1 0003B8  CBC7 000F                            LAB,B4   SIZE,AUTO
          1 0003BA  CFC7 0056                            STB,B4   CONSTPTR$+3,AUTO
          1 0003BC  BBC7 0056                            LAB,B3   CONSTPTR$+3,AUTO
PL6.E3A0      #005=GDB$FIRST_USER_TRAP File=GDB$BRKPNTS.:E05TSI                  TUE 07/29/97 21:24 Page:190  
          1 0003BE  CBF0 0200                            LAB,B4   512,IMO
          1 0003C0  E380 0000 0000  xent                 LNJ,B6   GDI$SEND_RESPONSE
          1 0003C3       0001                            DC       s:13316,PREL

     1031    13316    3                 ALTRETURN;

  13316   1 0003C4  C380 0000 0000  xent                 LNJ,B4   X6A_AALT

     1032    13317    3                 END /* CHECK TRACE */;
     1033    13318    2   NOTRACE:
     1034    13319    3              IF GD_DATA.GD.SOC AND (G$TSA.INST&'FF80'X)= %GD#LNJB6_INST THEN DO;

  13319   1 0003C7  EC80 0000 0000  xsym NOTRACE         LDB,B6   GD$DELTA_DATA$
          1 0003CA  82C6 014C                            LB,'0080'X        332,B6
          1 0003CC       0080
          1 0003CD  0581 00C6                            BBF      s:13358,PREL
          1 0003CF  DCC7 0004                            LDB,B5   @G$TSA,AUTO
          1 0003D1  E845 0004                            LDR,R6   4,B5
          1 0003D3  E570 FF80                            AND,R6   -128,IMO
          1 0003D5  E970 E380                            CMR,R6   -7296,IMO
          1 0003D7  0981 00BC                            BNE      s:13358,PREL

     1035    13320    3                 P$ = PINCRW(G$TSA.A$,-G$TSA.Z.IS);

  13320   1 0003D9  B845 0005                            LDR,R3   5,B5
          1 0003DB  B570 000F                            AND,R3   15,IMO
          1 0003DD  CCC5 0006                            LDB,B4   6,B5
          1 0003DF  8253                                 NEG      R3
          1 0003E0  BBB4                                 LAB,B3   ,B4,R3
          1 0003E1  BFC7 000D                            STB,B3   P$,AUTO

     1036    13321    3                 GD_DATA.GD.SOC_BRKPNT.ADR$=PINCRW(G$TSA.A$,G$TSA.A$->MEMORY);

  13321   1 0003E3  CCC5 0006                            LDB,B4   6,B5
          1 0003E5  B804                                 LDR,R3   ,B4
          1 0003E6  CFC7 0056                            STB,B4   CONSTPTR$+3,AUTO
          1 0003E8  F853                                 LDR,R7   R3
PL6.E3A0      #005=GDB$FIRST_USER_TRAP File=GDB$BRKPNTS.:E05TSI                  TUE 07/29/97 21:24 Page:191  
          1 0003E9  6C00                                 LDV,R6   0
          1 0003EA  8447 0056                            AID      CONSTPTR$+3,AUTO
          1 0003EC  8D46 0163                            SDI      355,B6

     1037    13322    4                IF GD_DATA.GD.SOC_BRKPNT.ADR$ = GD_DATA.GD.STEP_BRKPNT.ADR$ AND G$TSA.
             13322                          A$->MEMORY ~= 1 THEN DO;

  13322   1 0003EE  ACC6 0163                            LDB,B2   355,B6
          1 0003F0  ADC6 015B                            CMB,B2   347,B6
          1 0003F2  0981 0050                            BNE      s:13333,PREL
          1 0003F4  9CC5 0006                            LDB,B1   6,B5
          1 0003F6  D801                                 LDR,R5   ,B1
          1 0003F7  5D01                                 CMV,R5   1
          1 0003F8  0901 004A                            BE       s:13333,PREL

     1038    13323    4                    PTR$ = GD_DATA.GD.STEP_BRKPNT.ADR$;

  13323   1 0003FA  DCC6 015B                            LDB,B5   347,B6
          1 0003FC  DFC7 0012                            STB,B5   PTR$,AUTO

     1039    13324    4                    CALL GDU$SETUP_WINDOW_USER(PTR$,GD_DATA.GD.USERNO);

  13324   1 0003FE  9BC6 016B                            LAB,B1   363,B6
          1 000400  9FC7 0058                            STB,B1   CONSTPTR$+5,AUTO
          1 000402  EBC7 0012                            LAB,B6   PTR$,AUTO
          1 000404  EFC7 0056                            STB,B6   CONSTPTR$+3,AUTO
          1 000406  BBC7 0056                            LAB,B3   CONSTPTR$+3,AUTO
          1 000408  CBF0 0200                            LAB,B4   512,IMO
          1 00040A  E380 0000 0000  xent                 LNJ,B6   GDU$SETUP_WINDOW_USER
          1 00040D       0001                            DC       s:13325,PREL

     1040    13325    4                    PTR$->MEMORY = GD_DATA.GD.STEP_BRKPNT.OLDINST;

  13325   1 00040E  ECC7 0012                            LDB,B6   PTR$,AUTO
          1 000410  DC80 0000 0000  xsym                 LDB,B5   GD$DELTA_DATA$
          1 000413  E845 015F                            LDR,R6   351,B5
          1 000415  EF06                                 STR,R6   ,B6
PL6.E3A0      #005=GDB$FIRST_USER_TRAP File=GDB$BRKPNTS.:E05TSI                  TUE 07/29/97 21:24 Page:192  

     1041    13326    4                    GD_DATA.GD.STEP_BRKPNT.ADR$ = PINCRW(G$TSA.A$,1);

  13326   1 000416  ECC7 0004                            LDB,B6   @G$TSA,AUTO
          1 000418  DCC6 0006                            LDB,B5   6,B6
          1 00041A  CBC5 0001                            LAB,B4   1,B5
          1 00041C  BC80 0000 0000  xsym                 LDB,B3   GD$DELTA_DATA$
          1 00041F  CFC3 015B                            STB,B4   347,B3

     1042    13327    4                    PTR$ = GD_DATA.GD.STEP_BRKPNT.ADR$;

  13327   1 000421  CFC7 0012                            STB,B4   PTR$,AUTO

     1043    13328    4                    CALL GDU$SETUP_WINDOW_USER(PTR$,GD_DATA.GD.USERNO);

  13328   1 000423  DBC3 016B                            LAB,B5   363,B3
          1 000425  DFC7 0058                            STB,B5   CONSTPTR$+5,AUTO
          1 000427  ABC7 0012                            LAB,B2   PTR$,AUTO
          1 000429  AFC7 0056                            STB,B2   CONSTPTR$+3,AUTO
          1 00042B  BBC7 0056                            LAB,B3   CONSTPTR$+3,AUTO
          1 00042D  CBF0 0200                            LAB,B4   512,IMO
          1 00042F  E380 0000 0000  xent                 LNJ,B6   GDU$SETUP_WINDOW_USER
          1 000432       0001                            DC       s:13329,PREL

     1044    13329    4                    GD_DATA.GD.STEP_BRKPNT.OLDINST = PTR$->MEMORY;

  13329   1 000433  EC80 0000 0000  xsym                 LDB,B6   GD$DELTA_DATA$
          1 000436  DCC7 0012                            LDB,B5   PTR$,AUTO
          1 000438  E805                                 LDR,R6   ,B5
          1 000439  EF46 015F                            STR,R6   351,B6

     1045    13330    4                    PTR$->BITMEM = %GD#BREAK_INST;

  13330   1 00043B  5C02                                 LDV,R5   2
          1 00043C  DF05                                 STR,R5   ,B5

     1046    13331    4                    GD_DATA.GD.GO_AGAIN = '1'B;
PL6.E3A0      #005=GDB$FIRST_USER_TRAP File=GDB$BRKPNTS.:E05TSI                  TUE 07/29/97 21:24 Page:193  

  13331   1 00043D  EC80 0000 0000  xsym                 LDB,B6   GD$DELTA_DATA$
          1 000440  8946 014D                            LBT,'4000'X       333,B6
          1 000442       4000

     1047    13332    4                    END;

     1048    13333    3                 IF MON THEN

  13333   1 000443  89C7 0015                            CMZ      MON,AUTO
          1 000445  0881 0005                            BAGE     s:13336,PREL

     1049    13334    3                    GD_DATA.GD.SOC_BRKPNT.USER# = 0;

  13334   1 000447  8746 0166                            CL       358,B6
          1 000449  0F81 0005                            B        s:13337,PREL

     1050    13335    3                 ELSE
     1051    13336    3                    GD_DATA.GD.SOC_BRKPNT.USER# = GD_DATA.GD.USE_USERNO;

  13336   1 00044B  E846 014B                            LDR,R6   331,B6
          1 00044D  EF46 0166                            STR,R6   358,B6

     1052    13337    3                 ADR$ = GD_DATA.GD.SOC_BRKPNT.ADR$;

  13337   1 00044F  DCC6 0163                            LDB,B5   355,B6
          1 000451  DFC7 0010                            STB,B5   ADR$,AUTO

     1053    13338    3                 PTR$ = ADR$;

  13338   1 000453  DFC7 0012                            STB,B5   PTR$,AUTO

     1054    13339    3                 GD_DATA.GD.SOC = '0'B;

  13339   1 000455  8846 014C                            LBF,'0080'X       332,B6
  13339   1 000457       0080

PL6.E3A0      #005=GDB$FIRST_USER_TRAP File=GDB$BRKPNTS.:E05TSI                  TUE 07/29/97 21:24 Page:194  
     1055    13340    3                 CALL GDU$SETUP_WINDOW_USER(ADR$,GD_DATA.GD.SOC_BRKPNT.USER#)

  13340   1 000458  CBC6 0166                            LAB,B4   358,B6
          1 00045A  CFC7 0058                            STB,B4   CONSTPTR$+5,AUTO
          1 00045C  BBC7 0010                            LAB,B3   ADR$,AUTO
          1 00045E  BFC7 0056                            STB,B3   CONSTPTR$+3,AUTO
          1 000460  BBC7 0056                            LAB,B3   CONSTPTR$+3,AUTO
          1 000462  CBF0 0200                            LAB,B4   512,IMO
          1 000464  E380 0000 0000  xent                 LNJ,B6   GDU$SETUP_WINDOW_USER
          1 000467       002A                            DC       s:13353,PREL

     1056    13341    4                 WHENRETURN DO;

     1057    13342    4                    CALL SRCHFORBRKPNT (BRK$, PTR$)

  13342   1 000468  EBC7 0012                            LAB,B6   PTR$,AUTO
          1 00046A  EFC7 001C                            STB,B6   @BRK$+2,AUTO
          1 00046C  DBC7 0006                            LAB,B5   BRK$,AUTO
          1 00046E  DFC7 001A                            STB,B5   ERRCODE_SCRATCH+4,AUTO
          1 000470  E3C0 0565                            LNJ,B6   s:0,PREL
          1 000472       000C                            DC       s:13347,PREL

     1058    13343    5                    WHENRETURN DO;

     1059    13344    5                        GD_DATA.GD.SOC_BRKPNT.OLDINST = BRK$->BRKPNT.OLDINST;

  13344   1 000473  EC80 0000 0000  xsym                 LDB,B6   GD$DELTA_DATA$
          1 000476  DCC7 0006                            LDB,B5   BRK$,AUTO
          1 000478  E845 0007                            LDR,R6   7,B5
          1 00047A  EF46 0165                            STR,R6   357,B6

     1060    13345    5                       END;

  13345   1 00047C  0F81 000B                            B        s:13350,PREL

     1061    13346    5                    WHENALTRETURN DO;

PL6.E3A0      #005=GDB$FIRST_USER_TRAP File=GDB$BRKPNTS.:E05TSI                  TUE 07/29/97 21:24 Page:195  
     1062    13347    5                         GD_DATA.GD.SOC_BRKPNT.OLDINST = ADR$->MEMORY;

  13347   1 00047E  EC80 0000 0000  xsym                 LDB,B6   GD$DELTA_DATA$
          1 000481  DCC7 0010                            LDB,B5   ADR$,AUTO
          1 000483  E805                                 LDR,R6   ,B5
          1 000484  EF46 0165                            STR,R6   357,B6

     1063    13348    5                         ADR$->BITMEM = %GD#BREAK_INST;

  13348   1 000486  5C02                                 LDV,R5   2
          1 000487  DF05                                 STR,R5   ,B5

     1064    13349    5                       END;

     1065    13350    4                    GD_DATA.GD.SOC_BRKPNT.FLAGS.ACTIVE = '1'B;

  13350   1 000488  EC80 0000 0000  xsym                 LDB,B6   GD$DELTA_DATA$
          1 00048B  8946 0167                            LBT,'8000'X       359,B6
          1 00048D       8000

     1066    13351    4                    GD_DATA.GD.SOC_BRKPNT.FLAGS.ARMED = '1'B;

  13351   1 00048E  8946 0167                            LBT,'4000'X       359,B6
  13351   1 000490       4000

     1067    13352    4                    END;

     1068    13353    3                 ALTRETURN;

  13353   1 000491  C380 0000 0000  xent                 LNJ,B4   X6A_AALT

     1069    13354    3                 END;
     1070    13355        /* If this is a transfer while stepping and if the destination of */
     1071    13356        /* the transfer is in the range of start and end of the step then */
     1072    13357        /* just return to the trap handler */
     1073    13358    2              IF GD_DATA.GD.STEP_BRKPNT.FLAGS.ACTIVE AND

PL6.E3A0      #005=GDB$FIRST_USER_TRAP File=GDB$BRKPNTS.:E05TSI                  TUE 07/29/97 21:24 Page:196  
  13358   1 000494  89C6 0161                            CMZ      353,B6
          1 000496  0881 001E                            BAGE     s:13367,PREL
          1 000498  82C6 0161                            LB,'4000'X        353,B6
          1 00049A       4000
          1 00049B  0581 0019                            BBF      s:13367,PREL
          1 00049D  DCC7 0004                            LDB,B5   @G$TSA,AUTO
          1 00049F  8CC5 0008                            LDI      8,B5
          1 0004A1  84C6 015D                            SID      349,B6
          1 0004A3  6801 0011                            BLZ,R6   s:13367,PREL
          1 0004A5  8CC5 0008                            LDI      8,B5
          1 0004A7  84C6 015B                            SID      347,B6
          1 0004A9  6A01 000B                            BGZ,R6   s:13367,PREL
          1 0004AB  6801 0003                            BLZ,R6   s:13362,PREL
          1 0004AD  7981 0007                            BNEZ,R7  s:13367,PREL

     1074    13359    2                GD_DATA.GD.STEP_BRKPNT.FLAGS.ARMED AND
     1075    13360    2                G$TSA.P >= GD_DATA.GD.STEP_BRKPNT.START AND
     1076    13361    3                G$TSA.P <= GD_DATA.GD.STEP_BRKPNT.ADR THEN DO;

     1077    13362    3                 G$TSA.ISA.REGS.M1.J = '1'B;

  13362   1 0004AF  8945 002E                            LBT,'0080'X       46,B5
  13362   1 0004B1       0080

     1078    13363    3                 ALTRETURN;

  13363   1 0004B2  C380 0000 0000  xent                 LNJ,B4   X6A_AALT

     1079    13364    3                 END;
     1080    13365        /* If bypass is on and the P-counter points to the library */
     1081    13366        /* then just return to the trap handler */
     1082    13367    2              P$ = G$TSA.P$;

  13367   1 0004B5  DCC7 0004                            LDB,B5   @G$TSA,AUTO
          1 0004B7  CCC5 0008                            LDB,B4   8,B5
          1 0004B9  CFC7 000D                            STB,B4   P$,AUTO

PL6.E3A0      #005=GDB$FIRST_USER_TRAP File=GDB$BRKPNTS.:E05TSI                  TUE 07/29/97 21:24 Page:197  
     1083    13368    2              IF GD_DATA.GD.MODE = %GD#MODE_USER_DELTA THEN

  13368   1 0004BB  E846 0130                            LDR,R6   304,B6
          1 0004BD  6D01                                 CMV,R6   1
          1 0004BE  0981 001A                            BNE      s:13379,PREL

     1084    13369    3                 IF G$JIT.SLIB# ~= 0 AND P > %GM_ISR6_BASE THEN DO;

  13369   1 0004C0  BC80 0000 0000  xsym                 LDB,B3   G$JIT$
          1 0004C3  82C3 008C                            LB,'00FF'X        140,B3
          1 0004C5       00FF
          1 0004C6  0581 0012                            BBF      s:13379,PREL
          1 0004C8  8CC7 000D                            LDI      P$,AUTO
          1 0004CA  84F0 0006 0000                       SID      393216,IMO
          1 0004CD  0681 000B                            BCF      s:13379,PREL
          1 0004CF  6981 0003                            BNEZ,R6  s:13370,PREL
          1 0004D1  7901 0007                            BEZ,R7   s:13379,PREL

     1085    13370    3                    G$TSA.ISA.REGS.M1.J = %G_ON#;

  13370   1 0004D3  8945 002E                            LBT,'0080'X       46,B5
  13370   1 0004D5       0080

     1086    13371    3                    ALTRETURN;

  13371   1 0004D6  C380 0000 0000  xent                 LNJ,B4   X6A_AALT

     1087    13372    3                    END;
     1088    13373        /*
     1089    13374           If a branch trace trap occurs when there is no temporery breakpoint
     1090    13375           set, this is just cleanup from a past breakpoint (which was done
     1091    13376           above).  Just go back to the monitor trap handler.
     1092    13377                                                                                      */
     1093    13378    2   GETBRKNUM:
     1094    13379    2              IF NOT(GD_DATA.GD.STEP_BRKPNT.FLAGS.ACTIVE) THEN

  13379   1 0004D9  89C6 0161            GETBRKNUM       CMZ      353,B6
PL6.E3A0      #005=GDB$FIRST_USER_TRAP File=GDB$BRKPNTS.:E05TSI                  TUE 07/29/97 21:24 Page:198  
          1 0004DB  0801 0011                            BAL      s:13388,PREL

     1095    13380    3              DO;

     1096    13381    3                 IF GD_DATA.GD.ONCALL OR GD_DATA.GD.ONCALLS THEN

  13381   1 0004DD  82C6 014C                            LB,'0800'X        332,B6
  13381   1 0004DF       0800
          1 0004E0  0501 0006                            BBT      s:13382,PREL
          1 0004E2  82C6 014C                            LB,'1000'X        332,B6
          1 0004E4       1000
          1 0004E5  0581 0004                            BBF      s:13383,PREL

     1097    13382    3                    G$TSA.ISA.REGS.M1.J = %G_ON#;

  13382   1 0004E7  8945 002E                            LBT,'0080'X       46,B5
  13382   1 0004E9       0080

     1098    13383    3                 ALTRETURN;

  13383   1 0004EA  C380 0000 0000  xent                 LNJ,B4   X6A_AALT

     1099    13384    3                 END;
     1100    13385        /*
     1101    13386          We don't modify the P counter on branch trace traps caused by steps
     1102    13387                                                                                      */
     1103    13388    2              P$=G$TSA.P$;

  13388   1 0004ED  BCC5 0008                            LDB,B3   8,B5
          1 0004EF  BFC7 000D                            STB,B3   P$,AUTO

     1104    13389        /*  If we transferred to a breakpoint, we can let it go and
     1105    13390           the breakpoint will cause a trap immediately                            */
     1106    13391    3              CALL SRCHFORBRKPNT(BRK$,P$) WHENRETURN DO;

  13391   1 0004F1  CBC7 000D                            LAB,B4   P$,AUTO
          1 0004F3  CFC7 001C                            STB,B4   @BRK$+2,AUTO
PL6.E3A0      #005=GDB$FIRST_USER_TRAP File=GDB$BRKPNTS.:E05TSI                  TUE 07/29/97 21:24 Page:199  
          1 0004F5  ABC7 0006                            LAB,B2   BRK$,AUTO
          1 0004F7  AFC7 001A                            STB,B2   ERRCODE_SCRATCH+4,AUTO
          1 0004F9  E3C0 04DC                            LNJ,B6   s:0,PREL
          1 0004FB       0004                            DC       s:13394,PREL

     1107    13392    3                  ALTRETURN;

  13392   1 0004FC  C380 0000 0000  xent                 LNJ,B4   X6A_AALT

     1108    13393    3                  END;
     1109    13394    2              END;

  13394   1 0004FF  0F81 00E7                            B        s:13451,PREL

     1110    13395    1           ELSE
     1111    13396    2           DO;

     1112    13397    2              P$=G$TSA.P$;

  13397   1 000501  DCC6 0008                            LDB,B5   8,B6
          1 000503  DFC7 000D                            STB,B5   P$,AUTO

     1113    13398    2              IF P > G$TSA.Z.IS THEN

  13398   1 000505  F846 0005                            LDR,R7   5,B6
          1 000507  F570 000F                            AND,R7   15,IMO
          1 000509  6C00                                 LDV,R6   0
          1 00050A  84C7 000D                            SID      P$,AUTO
          1 00050C  0601 000F                            BCT      s:13404,PREL

     1114    13399    2                 P = P - G$TSA.Z.IS;

  13399   1 00050E  F846 0005                            LDR,R7   5,B6
          1 000510  F570 000F                            AND,R7   15,IMO
          1 000512  6C00                                 LDV,R6   0
          1 000513  84C7 000D                            SID      P$,AUTO
          1 000515  8656                                 CPL      R6
PL6.E3A0      #005=GDB$FIRST_USER_TRAP File=GDB$BRKPNTS.:E05TSI                  TUE 07/29/97 21:24 Page:200  
          1 000516  8657                                 CPL      R7
          1 000517  8470 0000 0001                       AID      1,IMO
          1 00051A  8D47 000D                            SDI      P$,AUTO

     1115    13400        /*
     1116    13401          If this trap was a breakpoint trap, figure out which breakpoint
     1117    13402          caused us to trap
     1118    13403                                                                                      */
     1119    13404    3              IF GD_DATA.GD.ALTRET_ADR$ ~= ADDR(NIL) THEN DO;

  13404   1 00051C  DC80 0000 0000  xsym                 LDB,B5   GD$DELTA_DATA$
          1 00051F  8DC5 0132                            CMN      306,B5
          1 000521  0901 0034                            BE       s:13413,PREL

     1120    13405    3                    PTR$ = GD_DATA.GD.ALTRET_ADR$;

  13405   1 000523  CCC5 0132                            LDB,B4   306,B5
          1 000525  CFC7 0012                            STB,B4   PTR$,AUTO

     1121    13406    3                 CALL GDU$SETUP_WINDOW_USER(PTR$,GD_DATA.GD.USERNO);

  13406   1 000527  BBC5 016B                            LAB,B3   363,B5
          1 000529  BFC7 0058                            STB,B3   CONSTPTR$+5,AUTO
          1 00052B  ABC7 0012                            LAB,B2   PTR$,AUTO
          1 00052D  AFC7 0056                            STB,B2   CONSTPTR$+3,AUTO
          1 00052F  BBC7 0056                            LAB,B3   CONSTPTR$+3,AUTO
          1 000531  CBF0 0200                            LAB,B4   512,IMO
          1 000533  E380 0000 0000  xent                 LNJ,B6   GDU$SETUP_WINDOW_USER
          1 000536       0001                            DC       s:13407,PREL

     1122    13407    3                 PTR$->MEMORY = GD_DATA.GD.ALTRET_INST;

  13407   1 000537  ECC7 0012                            LDB,B6   PTR$,AUTO
          1 000539  DC80 0000 0000  xsym                 LDB,B5   GD$DELTA_DATA$
          1 00053C  E845 0134                            LDR,R6   308,B5
          1 00053E  EF06                                 STR,R6   ,B6

PL6.E3A0      #005=GDB$FIRST_USER_TRAP File=GDB$BRKPNTS.:E05TSI                  TUE 07/29/97 21:24 Page:201  
     1123    13408    3                 IF GD_DATA.GD.ALTRET_ADR$ = GD_DATA.GD.SOC_BRKPNT.ADR$ THEN

  13408   1 00053F  EC80 0000 0000  xsym                 LDB,B6   GD$DELTA_DATA$
          1 000542  DCC6 0132                            LDB,B5   306,B6
          1 000544  DDC6 0163                            CMB,B5   355,B6
          1 000546  0981 0007                            BNE      s:13410,PREL

     1124    13409    3                    GD_DATA.GD.SOC_BRKPNT = '0'B;

  13409   1 000548  5C0A                                 LDV,R5   10
          1 000549  0021                                 ALR      ;
          1 00054A       4178 0000                                ALPHANUM('0000'X,IMO,,1),;
          1 00054C       4006 0163                                ALPHANUM(355,B6,,R5,FILL)

     1125    13410    3                 GD_DATA.GD.ALTRET_ADR$ = ADDR(NIL);

  13410   1 00054E  CB80 0000 0000                       LAB,B4   0
          1 000551  437F                                 CSYNC    s:13410+2,SPREL
          1 000552  CFC6 0132                            STB,B4   306,B6

     1126    13411    3                 GD_DATA.GD.ALTRET_INST = 0;

  13411   1 000554  8746 0134                            CL       308,B6

     1127    13412    3                 END;

     1128    13413    2              IF G$TSA.I.TRAP# = %GD#ENTRY_TRAP# THEN

  13413   1 000556  ECC7 0004                            LDB,B6   @G$TSA,AUTO
          1 000558  E2C6 0002                            LLH,R6   2,B6
          1 00055A  6D02                                 CMV,R6   2
          1 00055B  0981 008B                            BNE      s:13451,PREL

     1129    13414    2                 CALL SRCHFORBRKPNT(BRK$,P$)

  13414   1 00055D  DBC7 000D                            LAB,B5   P$,AUTO
          1 00055F  DFC7 001C                            STB,B5   @BRK$+2,AUTO
PL6.E3A0      #005=GDB$FIRST_USER_TRAP File=GDB$BRKPNTS.:E05TSI                  TUE 07/29/97 21:24 Page:202  
          1 000561  CBC7 0006                            LAB,B4   BRK$,AUTO
          1 000563  CFC7 001A                            STB,B4   ERRCODE_SCRATCH+4,AUTO
          1 000565  E3C0 0470                            LNJ,B6   s:0,PREL
          1 000567       007D                            DC       s:13449,PREL

     1130    13415    3                 WHENRETURN DO;

     1131    13416    3                    BRKNUM = BRK$->BRKPNT.BRKNUM;

  13416   1 000568  ECC7 0006                            LDB,B6   BRK$,AUTO
          1 00056A  E846 0002                            LDR,R6   2,B6
          1 00056C  EF47 0008                            STR,R6   BRKNUM,AUTO

     1132    13417    3   CHECK_BYPASS:    IF BRK$->BRKPNT.BYPASSCOUNT > 0 THEN

  13417   1 00056E  ECC7 0006            CHECK_BYPASS    LDB,B6   BRK$,AUTO
          1 000570  D846 0003                            LDR,R5   3,B6
          1 000572  5901 004B                            BEZ,R5   s:13437,PREL

     1133    13418    4                       IF BRK$->BRKPNT.CUR_BYPASSCOUNT > 0 THEN DO;

  13418   1 000574  C846 0004                            LDR,R4   4,B6
          1 000576  4901 0044                            BEZ,R4   s:13436,PREL

     1134    13419    4                          G$TSA.P$ = P$;

  13419   1 000578  DCC7 000D                            LDB,B5   P$,AUTO
          1 00057A  CCC7 0004                            LDB,B4   @G$TSA,AUTO
          1 00057C  DFC4 0008                            STB,B5   8,B4

     1135    13420    4                         BRK$->BRKPNT.CUR_BYPASSCOUNT = BRK$->BRKPNT.CUR_BYPASSCOUNT -
             13420                                   1;

  13420   1 00057E  88C6 0004                            DEC      4,B6

     1136    13421    4   KEEPGOING:
     1137    13422    4                          P$ = BRK$->BRKPNT.ADR$;
PL6.E3A0      #005=GDB$FIRST_USER_TRAP File=GDB$BRKPNTS.:E05TSI                  TUE 07/29/97 21:24 Page:203  

  13422   1 000580  ECC7 0006            KEEPGOING       LDB,B6   BRK$,AUTO
          1 000582  DCC6 0005                            LDB,B5   5,B6
          1 000584  DFC7 000D                            STB,B5   P$,AUTO

     1138    13423    5                          IF P$ ~= ADDR(NIL) THEN DO;  /* not an ONCALLS */

  13423   1 000586  8DC7 000D                            CMN      P$,AUTO
          1 000588  0901 002A                            BE       s:13432,PREL

     1139    13424    5                             CALL GDU$SETUP_WINDOW_USER(P$,GD_DATA.GD.USERNO)

  13424   1 00058A  CC80 0000 0000  xsym                 LDB,B4   GD$DELTA_DATA$
          1 00058D  BBC4 016B                            LAB,B3   363,B4
          1 00058F  BFC7 0058                            STB,B3   CONSTPTR$+5,AUTO
          1 000591  ABC7 000D                            LAB,B2   P$,AUTO
          1 000593  AFC7 0056                            STB,B2   CONSTPTR$+3,AUTO
          1 000595  BBC7 0056                            LAB,B3   CONSTPTR$+3,AUTO
          1 000597  CBF0 0200                            LAB,B4   512,IMO
          1 000599  E380 0000 0000  xent                 LNJ,B6   GDU$SETUP_WINDOW_USER
          1 00059C       0003                            DC       s:13426,PREL
          1 00059D  0F81 0003                            B        s:13428,PREL

     1140    13425    6                             WHENALTRETURN DO;

     1141    13426    6                                GOTO BLDBRKRSP;

  13426   1 00059F  0F81 0047                            B        s:13451,PREL

     1142    13427    6                                END;
     1143    13428    5                             P$->MEMORY = BRK$->BRKPNT.OLDINST;

  13428   1 0005A1  ECC7 000D                            LDB,B6   P$,AUTO
          1 0005A3  DCC7 0006                            LDB,B5   BRK$,AUTO
          1 0005A5  E845 0007                            LDR,R6   7,B5
          1 0005A7  EF06                                 STR,R6   ,B6

PL6.E3A0      #005=GDB$FIRST_USER_TRAP File=GDB$BRKPNTS.:E05TSI                  TUE 07/29/97 21:24 Page:204  
     1144    13429    5                             BRK$->BRKPNT.FLAGS.ARMED = '0'B;

  13429   1 0005A8  ECC7 0006                            LDB,B6   BRK$,AUTO
          1 0005AA  8846 000A                            LBF,'4000'X       10,B6
          1 0005AC       4000

     1145    13430    5                             G$TSA.P$ = P$;

  13430   1 0005AD  DCC7 000D                            LDB,B5   P$,AUTO
          1 0005AF  CCC7 0004                            LDB,B4   @G$TSA,AUTO
          1 0005B1  DFC4 0008                            STB,B5   8,B4

     1146    13431    5                             END;

     1147    13432    4                          G$TSA.ISA.REGS.M1.J = %G_ON#;

  13432   1 0005B3  DCC7 0004                            LDB,B5   @G$TSA,AUTO
          1 0005B5  8945 002E                            LBT,'0080'X       46,B5
          1 0005B7       0080

     1148    13433    4                          ALTRETURN;

  13433   1 0005B8  C380 0000 0000  xent                 LNJ,B4   X6A_AALT

     1149    13434    4                          END;
     1150    13435    3                       ELSE
     1151    13436    3                          BRK$->BRKPNT.CUR_BYPASSCOUNT = BRK$->BRKPNT.BYPASSCOUNT;

  13436   1 0005BB  C855                                 LDR,R4   R5
          1 0005BC  CF46 0004                            STR,R4   4,B6

     1152    13437    3                    IF BRK$->BRKPNT.FLAGS.IFCOND THEN

  13437   1 0005BE  ECC7 0006                            LDB,B6   BRK$,AUTO
          1 0005C0  82C6 000A                            LB,'1000'X        10,B6
          1 0005C2       1000
          1 0005C3  0581 001E                            BBF      s:13447,PREL
PL6.E3A0      #005=GDB$FIRST_USER_TRAP File=GDB$BRKPNTS.:E05TSI                  TUE 07/29/97 21:24 Page:205  

     1153    13438    4                       CALL CMPRIF(BRK$) WHENALTRETURN DO;

  13438   1 0005C5  DBC7 0006                            LAB,B5   BRK$,AUTO
          1 0005C7  DFC7 001A                            STB,B5   ERRCODE_SCRATCH+4,AUTO
          1 0005C9  E3C0 0447                            LNJ,B6   s:0,PREL
          1 0005CB       0003                            DC       s:13439,PREL
          1 0005CC  0F81 0015                            B        s:13447,PREL

     1154    13439    5                          IF GD_DATA.GD.STEP_BRKPNT.FLAGS.ACTIVE THEN DO;

  13439   1 0005CE  EC80 0000 0000  xsym                 LDB,B6   GD$DELTA_DATA$
          1 0005D1  89C6 0161                            CMZ      353,B6
          1 0005D3  0881 000C                            BAGE     s:13445,PREL

     1155    13440    5                             GD_DATA.GD.STEP_BRKPNT.FLAGS.BRKNUM_SAVED = '1'B;

  13440   1 0005D5  8946 0161                            LBT,'1000'X       353,B6
  13440   1 0005D7       1000

     1156    13441    5                             GD_DATA.GD.STEP_BRKPNT.OLD_BRKNUM = BRKNUM;

  13441   1 0005D8  E847 0008                            LDR,R6   BRKNUM,AUTO
          1 0005DA  E7C6 0162                            STH,R6   354,B6

     1157    13442    5                             BRKNUM = 0;

  13442   1 0005DC  8747 0008                            CL       BRKNUM,AUTO

     1158    13443    5                             GOTO BLDBRKRSP;

  13443   1 0005DE  0F81 0008                            B        s:13451,PREL

     1159    13444    5                             END;
     1160    13445    4                          GOTO KEEPGOING;

  13445   1 0005E0  0F81 FF9F                            B        s:13422,PREL
PL6.E3A0      #005=GDB$FIRST_USER_TRAP File=GDB$BRKPNTS.:E05TSI                  TUE 07/29/97 21:24 Page:206  

     1161    13446    4                          END;
     1162    13447    3                    END;

  13447   1 0005E2  0F81 0004                            B        s:13451,PREL

     1163    13448    3                 WHENALTRETURN DO;

     1164    13449    3                    BRKNUM = %GD#MAXBRKNUM + 1;

  13449   1 0005E4  6C15                                 LDV,R6   21
          1 0005E5  EF47 0008                            STR,R6   BRKNUM,AUTO

     1165    13450    3                    END;

     1166    13451    2              END;

     1167    13452        /*
     1168    13453          If we get to this point we'll take the damm trap.  Setup the TSA
     1169    13454          P counter so we can restart
     1170    13455                                                                                      */
     1171    13456    1   BLDBRKRSP:
     1172    13457    2           IF GD_DATA.GD.GO_AGAIN AND P$ = GD_DATA.GD.STEP_BRKPNT.ADR$ THEN DO;

  13457   1 0005E7  EC80 0000 0000  xsym BLDBRKRSP       LDB,B6   GD$DELTA_DATA$
          1 0005EA  82C6 014D                            LB,'4000'X        333,B6
          1 0005EC       4000
          1 0005ED  0581 003C                            BBF      s:13468,PREL
          1 0005EF  DCC7 000D                            LDB,B5   P$,AUTO
          1 0005F1  DDC6 015B                            CMB,B5   347,B6
          1 0005F3  0981 0036                            BNE      s:13468,PREL

     1173    13458    2              PTR$ = GD_DATA.GD.STEP_BRKPNT.ADR$;

  13458   1 0005F5  CCC6 015B                            LDB,B4   347,B6
          1 0005F7  CFC7 0012                            STB,B4   PTR$,AUTO

PL6.E3A0      #005=GDB$FIRST_USER_TRAP File=GDB$BRKPNTS.:E05TSI                  TUE 07/29/97 21:24 Page:207  
     1174    13459    2              CALL GDU$SETUP_WINDOW_USER(PTR$,GD_DATA.GD.USERNO);

  13459   1 0005F9  BBC6 016B                            LAB,B3   363,B6
          1 0005FB  BFC7 0058                            STB,B3   CONSTPTR$+5,AUTO
          1 0005FD  ABC7 0012                            LAB,B2   PTR$,AUTO
          1 0005FF  AFC7 0056                            STB,B2   CONSTPTR$+3,AUTO
          1 000601  BBC7 0056                            LAB,B3   CONSTPTR$+3,AUTO
          1 000603  CBF0 0200                            LAB,B4   512,IMO
          1 000605  E380 0000 0000  xent                 LNJ,B6   GDU$SETUP_WINDOW_USER
          1 000608       0001                            DC       s:13460,PREL

     1175    13460    2              PTR$->MEMORY = GD_DATA.GD.STEP_BRKPNT.OLDINST;

  13460   1 000609  ECC7 0012                            LDB,B6   PTR$,AUTO
          1 00060B  DC80 0000 0000  xsym                 LDB,B5   GD$DELTA_DATA$
          1 00060E  E845 015F                            LDR,R6   351,B5
          1 000610  EF06                                 STR,R6   ,B6

     1176    13461    2              G$TSA.ISA.REGS.M1.J = %G_ON#;

  13461   1 000611  ECC7 0004                            LDB,B6   @G$TSA,AUTO
          1 000613  8946 002E                            LBT,'0080'X       46,B6
          1 000615       0080

     1177    13462    2              GD_DATA.GD.STEP_BRKPNT.OLDINST = 0;

  13462   1 000616  DC80 0000 0000  xsym                 LDB,B5   GD$DELTA_DATA$
          1 000619  8745 015F                            CL       351,B5

     1178    13463    2              GD_DATA.GD.STEP_BRKPNT.ADR$ = ADDR(NIL);

  13463   1 00061B  CB80 0000 0000                       LAB,B4   0
          1 00061E  CFC5 015B                            STB,B4   347,B5

     1179    13464    2              GD_DATA.GD.GO_AGAIN = '0'B;

  13464   1 000620  8845 014D                            LBF,'4000'X       333,B5
PL6.E3A0      #005=GDB$FIRST_USER_TRAP File=GDB$BRKPNTS.:E05TSI                  TUE 07/29/97 21:24 Page:208  
  13464   1 000622       4000

     1180    13465    2              G$TSA.P$ = P$;

  13465   1 000623  BCC7 000D                            LDB,B3   P$,AUTO
          1 000625  BFC6 0008                            STB,B3   8,B6

     1181    13466    2              ALTRETURN;

  13466   1 000627  C380 0000 0000  xent                 LNJ,B4   X6A_AALT

     1182    13467    2              END;
     1183    13468    1           G$TSA.P$=P$;

  13468   1 00062A  DCC7 000D                            LDB,B5   P$,AUTO
          1 00062C  CCC7 0004                            LDB,B4   @G$TSA,AUTO
          1 00062E  DFC4 0008                            STB,B5   8,B4

     1184    13469    1           G$TSA.Z.IS=0;

  13469   1 000630  8844 0005                            LBF,'000F'X       5,B4
  13469   1 000632       000F

     1185    13470        /*
     1186    13471          Setup a break responce message to send to the host
     1187    13472                                                                                      */
     1188    13473    1           SIZE=%GD#RSPBRKSIZ;

  13473   1 000633  6C40                                 LDV,R6   64
          1 000634  EF47 000F                            STR,R6   SIZE,AUTO

     1189    13474    1           GD$MSG.FNC=%GD#RSPBRK;

  13474   1 000636  5C2D                                 LDV,R5   45
          1 000637  DCC7 000B                            LDB,B5   MSG$,AUTO
          1 000639  D785                                 STH,R5   ,B5

PL6.E3A0      #005=GDB$FIRST_USER_TRAP File=GDB$BRKPNTS.:E05TSI                  TUE 07/29/97 21:24 Page:209  
     1190    13475        /*
     1191    13476          If we trapped pass back the trap number, otherwise pass back the
     1192    13477          break number
     1193    13478                                                                                      */
     1194    13479    1           IF G$TSA.I.TRAP# ~= %GD#ENTRY_TRAP#

  13479   1 00063A  C2C4 0002                            LLH,R4   2,B4
          1 00063C  4D02                                 CMV,R4   2
          1 00063D  0901 0006                            BE       s:13483,PREL

     1195    13480    1           THEN                            /* Genuine trap, add offset to tell   */
     1196    13481    1              GD$MSG.BRKRSP.TRAP# = G$TSA.I.TRAP# + %GD#MAXBRKNUM +1;

  13481   1 00063F  4E15                                 ADV,R4   21
          1 000640  CF45 0005                            STR,R4   5,B5
          1 000642  0F81 000C                            B        s:13491,PREL

     1197    13482    2           ELSE DO;                        /* Some breakpoint                    */

     1198    13483    2              IF BRKNUM>%GD#MAXBRKNUM THEN

  13483   1 000644  B847 0008                            LDR,R3   BRKNUM,AUTO
          1 000646  3D14                                 CMV,R3   20
          1 000647  0A81 0005                            BALE     s:13486,PREL

     1199    13484    2                 GD$MSG.BRKRSP.BRK#=0;

  13484   1 000649  8745 0005                            CL       5,B5
          1 00064B  0F81 0003                            B        s:13491,PREL

     1200    13485    2              ELSE
     1201    13486    2                 GD$MSG.BRKRSP.BRK#=BRKNUM;

  13486   1 00064D  BF45 0005                            STR,R3   5,B5

     1202    13487    2              END;

PL6.E3A0      #005=GDB$FIRST_USER_TRAP File=GDB$BRKPNTS.:E05TSI                  TUE 07/29/97 21:24 Page:210  
     1203    13488        /*
     1204    13489          Setup the rest of the responce
     1205    13490                                                                                      */
     1206    13491    1           GD$MSG.BRKRSP.TSA$=ADDR(G$TSA);

  13491   1 00064F  CFC5 0003                            STB,B4   3,B5

     1207    13492    1           IF G$JIT.SPROC#=0 THEN

  13492   1 000651  EC80 0000 0000  xsym                 LDB,B6   G$JIT$
          1 000654  C2C6 008C                            LLH,R4   140,B6
          1 000656  4981 0006                            BNEZ,R4  s:13495,PREL

     1208    13493    1              GD$MSG.BRKRSP.SHARED=%G_NO#;

  13493   1 000658  8845 0019                            LBF,'0040'X       25,B5
  13493   1 00065A       0040
          1 00065B  0F81 0004                            B        s:13497,PREL

     1209    13494    1           ELSE
     1210    13495    1              GD$MSG.BRKRSP.SHARED=%G_YES#;

  13495   1 00065D  8945 0019                            LBT,'0040'X       25,B5
  13495   1 00065F       0040

     1211    13496        /*N*    GD$MSG.BRKRSP.FINAL = G$ROS.U_ECCB$->G$ECCB.FLAGS.XCONP; */
     1212    13497    1           GD$MSG.BRKRSP.ADR$=P$;

  13497   1 000660  BCC7 000D                            LDB,B3   P$,AUTO
          1 000662  BFC5 0001                            STB,B3   1,B5

     1213    13498    1           GD$MSG.BRKRSP.USER#=GD_DATA.GD.USERNO;

  13498   1 000664  EC80 0000 0000  xsym                 LDB,B6   GD$DELTA_DATA$
          1 000667  C846 016B                            LDR,R4   363,B6
          1 000669  CF45 0006                            STR,R4   6,B5

PL6.E3A0      #005=GDB$FIRST_USER_TRAP File=GDB$BRKPNTS.:E05TSI                  TUE 07/29/97 21:24 Page:211  
     1214    13499    1           IF GD_DATA.GD.STEP_BRKPNT.FLAGS.BRKNUM_SAVED THEN

  13499   1 00066B  82C6 0161                            LB,'1000'X        353,B6
  13499   1 00066D       1000
          1 00066E  0581 0005                            BBF      s:13501,PREL

     1215    13500    1              BRKNUM = GD_DATA.GD.STEP_BRKPNT.OLD_BRKNUM;

  13500   1 000670  B2C6 0162                            LLH,R3   354,B6
          1 000672  BF47 0008                            STR,R3   BRKNUM,AUTO

     1216    13501    1           ERRCODE_SCRATCH=GHB_TRAP_MSG;

  13501   1 000674  8C80 0000 0000  00                   LDI      GHB_TRAP_MSG
          1 000677  8D47 0016                            SDI      ERRCODE_SCRATCH,AUTO

     1217    13502    1           IF G$TSA.I.TRAP# = %G_FPRG_XCON#

  13502   1 000679  B2C4 0002                            LLH,R3   2,B4
          1 00067B  3D3A                                 CMV,R3   58
          1 00067C  0981 000A                            BNE      s:13504,PREL

     1218    13503    1           THEN ERRCODE_SCRATCH = G$JIT.ERR;

  13503   1 00067E  AC80 0000 0000  xsym                 LDB,B2   G$JIT$
          1 000681  8CC2 003C                            LDI      60,B2
          1 000683  8D47 0016                            SDI      ERRCODE_SCRATCH,AUTO
          1 000685  0F81 0009                            B        s:13505,PREL

     1219    13504    1           ELSE ERRCODE_SCRATCH.ERR#=ERRCODE_SCRATCH.ERR# + G$TSA.I.TRAP#;

  13504   1 000687  A847 0017                            LDR,R2   ERRCODE_SCRATCH+1,AUTO
          1 000689  2043                                 SOR,R2   3
          1 00068A  AA53                                 ADD,R2   R3
          1 00068B  2003                                 SOL,R2   3
          1 00068C  AAC7 0017                            SRM,R2,'FFF8'X    ERRCODE_SCRATCH+1,AUTO
          1 00068E       FFF8
PL6.E3A0      #005=GDB$FIRST_USER_TRAP File=GDB$BRKPNTS.:E05TSI                  TUE 07/29/97 21:24 Page:212  

     1220    13505    1           GD$MSG.BRKRSP.ERRCODE=ERRCODE_SCRATCH;

  13505   1 00068F  8CC7 0016                            LDI      ERRCODE_SCRATCH,AUTO
          1 000691  8D45 0007                            SDI      7,B5

     1221    13506        /*
     1222    13507          Pass back a chunk of memory starting at the current P-counter.
     1223    13508          This will allow DELTA to display the instruction where we stopped
     1224    13509          without making a request for the data there.
     1225    13510        */
     1226    13511    1           GD_DATA.GD.STOPT=%G_YES#;

  13511   1 000693  8946 014C                            LBT,'0004'X       332,B6
  13511   1 000695       0004

     1227    13512    1           CALL GDB$RESET_BRKPNT;

  13512   1 000696  CBF0 0000                            LAB,B4   0,IMO
          1 000698  E380 0000 0000  xent                 LNJ,B6   GDB$RESET_BRKPNT
          1 00069B       0001                            DC       s:13513,PREL

     1228    13513    1           DSIZE = 16;

  13513   1 00069C  6C10                                 LDV,R6   16
          1 00069D  EF47 000A                            STR,R6   DSIZE,AUTO

     1229    13514    2           CALL GDM$GRAB16(ADDR(GD$MSG.BRKRSP.DATA),P$,DSIZE) WHENALTRETURN DO;

  13514   1 00069F  ECC7 000B                            LDB,B6   MSG$,AUTO
          1 0006A1  DBC6 0009                            LAB,B5   9,B6
          1 0006A3  DFC7 0056                            STB,B5   CONSTPTR$+3,AUTO
          1 0006A5  CBC7 000A                            LAB,B4   DSIZE,AUTO
          1 0006A7  CFC7 005C                            STB,B4   CONSTPTR$+9,AUTO
          1 0006A9  BBC7 000D                            LAB,B3   P$,AUTO
          1 0006AB  BFC7 005A                            STB,B3   CONSTPTR$+7,AUTO
          1 0006AD  ABC7 0056                            LAB,B2   CONSTPTR$+3,AUTO
PL6.E3A0      #005=GDB$FIRST_USER_TRAP File=GDB$BRKPNTS.:E05TSI                  TUE 07/29/97 21:24 Page:213  
          1 0006AF  AFC7 0058                            STB,B2   CONSTPTR$+5,AUTO
          1 0006B1  BBC7 0058                            LAB,B3   CONSTPTR$+5,AUTO
          1 0006B3  CBF0 0300                            LAB,B4   768,IMO
          1 0006B5  E380 0000 0000  xent                 LNJ,B6   GDM$GRAB16
          1 0006B8       0003                            DC       s:13515,PREL
          1 0006B9  0F81 0003                            B        s:13517,PREL

     1230    13515    2              DSIZE = 0;

  13515   1 0006BB  8747 000A                            CL       DSIZE,AUTO

     1231    13516    2              END /* WHENALTRETURN */;

     1232    13517    1           GD$MSG.BRKRSP.DATA_SIZE = DSIZE;

  13517   1 0006BD  E847 000A                            LDR,R6   DSIZE,AUTO
          1 0006BF  ECC7 000B                            LDB,B6   MSG$,AUTO
          1 0006C1  E7C6 0019                            STH,R6   25,B6

     1233    13518        /*
     1234    13519          Indicate we are stopped and send the break responce to the host
     1235    13520                                                                                      */
     1236    13521    1           CALL GDI$SEND_RESPONSE(SIZE,MSGBFR);

  13521   1 0006C3  EFC7 0058                            STB,B6   CONSTPTR$+5,AUTO
          1 0006C5  DBC7 000F                            LAB,B5   SIZE,AUTO
          1 0006C7  DFC7 0056                            STB,B5   CONSTPTR$+3,AUTO
          1 0006C9  BBC7 0056                            LAB,B3   CONSTPTR$+3,AUTO
          1 0006CB  CBF0 0200                            LAB,B4   512,IMO
          1 0006CD  E380 0000 0000  xent                 LNJ,B6   GDI$SEND_RESPONSE
          1 0006D0       0001                            DC       s:13534,PREL

     1237    13522        /*
     1238    13523          Yank all the breaks
     1239    13524                                                                                      */
     1240    13525        /*
     1241    13526          At this point, we call the routine that handles the completed
PL6.E3A0      #005=GDB$FIRST_USER_TRAP File=GDB$BRKPNTS.:E05TSI                  TUE 07/29/97 21:24 Page:214  
     1242    13527          messages put together by the standalone async handler.  He will
     1243    13528          continue to process commands and not return to us till the user has typed
     1244    13529          GO.  When he does return, GD_DATA.GD.STEPCNT and GD_DATA.GD.ABSADDR will be setup
     1245    13530          to reflect whether or not the user has stepped or specified a
     1246    13531          go address.  Note that P$ is allready setup if nothing is specified.
     1247    13532                                                                                      */
     1248    13533    1   CALLGDI:
     1249    13534    2           CALL GDI$DECODE_MSG_WAIT_4_GO WHENALTRETURN DO;

  13534   1 0006D1  CBF0 0000            CALLGDI         LAB,B4   0,IMO
          1 0006D3  E380 0000 0000  xent                 LNJ,B6   GDI$DECODE_MSG_WAIT_4_GO
          1 0006D6       0003                            DC       s:13535,PREL
          1 0006D7  0F81 0026                            B        s:13545,PREL

     1250    13535    2              GD_DATA.GD.TRACE = 0;

  13535   1 0006D9  EC80 0000 0000  xsym                 LDB,B6   GD$DELTA_DATA$
          1 0006DC  8746 0153                            CL       339,B6

     1251    13536    2              GD_DATA.GD.STEP_BRKPNT = '0'B;

  13536   1 0006DE  5C10                                 LDV,R5   16
          1 0006DF  0021                                 ALR      ;
          1 0006E0       4178 0000                                ALPHANUM('0000'X,IMO,,1),;
          1 0006E2       4006 015B                                ALPHANUM(347,B6,,R5,FILL)

     1252    13537    2              GD_DATA.GD.SOC_BRKPNT = '0'B;

  13537   1 0006E4  5C0A                                 LDV,R5   10
          1 0006E5  0021                                 ALR      ;
          1 0006E6       4178 0000                                ALPHANUM('0000'X,IMO,,1),;
          1 0006E8       4006 0163                                ALPHANUM(355,B6,,R5,FILL)

     1253    13538    2              GD_DATA.GD.DYNSP$ = ADDR(GD_DATA.MYSPACE(0));

  13538   1 0006EA  DBC6 01AE                            LAB,B5   430,B6
          1 0006EC  DFC6 0156                            STB,B5   342,B6
PL6.E3A0      #005=GDB$FIRST_USER_TRAP File=GDB$BRKPNTS.:E05TSI                  TUE 07/29/97 21:24 Page:215  

     1254    13539    2              GD_DATA.MYSPACE = '0'B;

  13539   1 0006EE  AB80 0000 0000  02                   LAB,B2   0
          1 0006F1  2C00                                 LDV,R2   0
          1 0006F2  6C01                                 LDV,R6   1
          1 0006F3  BBC6 01AE                            LAB,B3   430,B6
          1 0006F5  3C00                                 LDV,R3   0
          1 0006F6  F870 04CC                            LDR,R7   1228,IMO
          1 0006F8  437F                                 CSYNC    s:13539+9,SPREL
          1 0006F9  D380 0000 0000  xent                 LNJ,B5   X6C_ALRZ

     1255    13540    2              GOTO STARTOVER;

  13540   1 0006FC  0F81 F980                            B        s:13108,PREL

     1256    13541    2              END;
     1257    13542        /*
     1258    13543          If we got a temporary breakpoint, disable it here (its only used once).
     1259    13544                                                                                      */
     1260    13545    2           IF GD_DATA.GD.GOTRAP AND BRKNUM>0 AND BRKNUM < %GD#MAXBRKNUM THEN DO;

  13545   1 0006FE  EC80 0000 0000  xsym                 LDB,B6   GD$DELTA_DATA$
          1 000701  82C6 014C                            LB,'0020'X        332,B6
          1 000703       0020
          1 000704  0581 0027                            BBF      s:13551,PREL
          1 000706  E847 0008                            LDR,R6   BRKNUM,AUTO
          1 000708  6A81 0023                            BLEZ,R6  s:13551,PREL
          1 00070A  6D14                                 CMV,R6   20
          1 00070B  0881 0020                            BAGE     s:13551,PREL

     1261    13546    2              SIZE = %GD#RSPBRKSIZ;

  13546   1 00070D  5C40                                 LDV,R5   64
          1 00070E  DF47 000F                            STR,R5   SIZE,AUTO

     1262    13547    2              CALL GDI$SEND_ERROR_RESPONSE(SIZE,GD$MSG,%GD#RSPNOTUSERTRAP);
PL6.E3A0      #005=GDB$FIRST_USER_TRAP File=GDB$BRKPNTS.:E05TSI                  TUE 07/29/97 21:24 Page:216  

  13547   1 000710  DBF0 003F                            LAB,B5   63,IMO
          1 000712  DFC7 005A                            STB,B5   CONSTPTR$+7,AUTO
          1 000714  CCC7 000B                            LDB,B4   MSG$,AUTO
          1 000716  CFC7 0058                            STB,B4   CONSTPTR$+5,AUTO
          1 000718  BBC7 000F                            LAB,B3   SIZE,AUTO
          1 00071A  BFC7 0056                            STB,B3   CONSTPTR$+3,AUTO
          1 00071C  BBC7 0056                            LAB,B3   CONSTPTR$+3,AUTO
          1 00071E  CBF0 0300                            LAB,B4   768,IMO
          1 000720  E380 0000 0000  xent                 LNJ,B6   GDI$SEND_ERROR_RESPONSE
          1 000723       0001                            DC       s:13548,PREL

     1263    13548    2              GD_DATA.GD.STOPT = %G_YES#;

  13548   1 000724  EC80 0000 0000  xsym                 LDB,B6   GD$DELTA_DATA$
          1 000727  8946 014C                            LBT,'0004'X       332,B6
          1 000729       0004

     1264    13549    2              GOTO CALLGDI;

  13549   1 00072A  0F81 FFA6                            B        s:13534,PREL

     1265    13550    2              END;
     1266    13551    1           GD_DATA.GD.STEP_BRKPNT.FLAGS='0'B;

  13551   1 00072C  87C6 0161                            CLH      353,B6

     1267    13552    1           GD_DATA.GD.STEP_BRKPNT.OLD_BRKNUM = 0;

  13552   1 00072E  87C6 0162                            CLH      354,B6

     1268    13553    1           GD_DATA.GD.GO_AGAIN = '0'B;

  13553   1 000730  8846 014D                            LBF,'4000'X       333,B6
  13553   1 000732       4000

     1269    13554    2           IF G$TSA.I.TRAP# = %G_FPRG_XBREAK# THEN DO;
PL6.E3A0      #005=GDB$FIRST_USER_TRAP File=GDB$BRKPNTS.:E05TSI                  TUE 07/29/97 21:24 Page:217  

  13554   1 000733  DCC7 0004                            LDB,B5   @G$TSA,AUTO
          1 000735  E2C5 0002                            LLH,R6   2,B5
          1 000737  6D33                                 CMV,R6   51
          1 000738  0981 000B                            BNE      s:13559,PREL

     1270    13555    2              GD_DATA.GD.XBRKINFO$->VLP_XBREAK.GOIC = '0'B;

  13555   1 00073A  CCC6 0154                            LDB,B4   340,B6
          1 00073C  8844 0006                            LBF,'0040'X       6,B4
          1 00073E       0040

     1271    13556    2              GD_DATA.GD.XBRKINFO$->VLP_XBREAK.GOBREAK = '0'B;

  13556   1 00073F  CCC6 0154                            LDB,B4   340,B6
          1 000741  8844 0006                            LBF,'0020'X       6,B4
          1 000743       0020

     1272    13557    2              END;

     1273    13558        /* */
     1274    13559    1           IF GD_DATA.GD.ABSADDR ~= ADDR(NIL) THEN

  13559   1 000744  8DC6 0145                            CMN      325,B6
          1 000746  0901 001E                            BE       s:13569,PREL

     1275    13560    2           DO;

     1276    13561    3              IF G$TSA.I.TRAP# = %G_FPRG_XBREAK# THEN DO;

  13561   1 000748  E2C5 0002                            LLH,R6   2,B5
          1 00074A  6D33                                 CMV,R6   51
          1 00074B  0981 000D                            BNE      s:13566,PREL

     1277    13562    3                 GD_DATA.GD.XBRKINFO$->VLP_XBREAK.GOIC = '1'B;

  13562   1 00074D  CCC6 0154                            LDB,B4   340,B6
PL6.E3A0      #005=GDB$FIRST_USER_TRAP File=GDB$BRKPNTS.:E05TSI                  TUE 07/29/97 21:24 Page:218  
          1 00074F  8944 0006                            LBT,'0040'X       6,B4
          1 000751       0040

     1278    13563    3                 GD_DATA.GD.XBRKINFO$->VLP_XBREAK.IC$ = GD_DATA.GD.ABSADDR;

  13563   1 000752  CCC6 0154                            LDB,B4   340,B6
          1 000754  BCC6 0145                            LDB,B3   325,B6
          1 000756  BF84                                 STB,B3   ,B4

     1279    13564    3                 END;

  13564   1 000757  0F81 0005                            B        s:13567,PREL

     1280    13565    2              ELSE
     1281    13566    2                  G$TSA.P$=GD_DATA.GD.ABSADDR;

  13566   1 000759  CCC6 0145                            LDB,B4   325,B6
          1 00075B  CFC5 0008                            STB,B4   8,B5

     1282    13567    2              GD_DATA.GD.ABSADDR=ADDR(NIL);

  13567   1 00075D  EB80 0000 0000                       LAB,B6   0
          1 000760  CC80 0000 0000  xsym                 LDB,B4   GD$DELTA_DATA$
          1 000763  EFC4 0145                            STB,B6   325,B4

     1283    13568    2              END;

     1284    13569    1           IF GD_DATA.GD.STEPCNT~=0 THEN

  13569   1 000765  EC80 0000 0000  xsym                 LDB,B6   GD$DELTA_DATA$
          1 000768  E846 016A                            LDR,R6   362,B6
          1 00076A  6901 012B                            BEZ,R6   s:13638,PREL

     1285    13570    2           DO;

     1286    13571        /*
     1287    13572          Setup a temporary breakpoint for stepping
PL6.E3A0      #005=GDB$FIRST_USER_TRAP File=GDB$BRKPNTS.:E05TSI                  TUE 07/29/97 21:24 Page:219  
     1288    13573                                                                                      */
     1289    13574    2              IF MON THEN

  13574   1 00076C  89C7 0015                            CMZ      MON,AUTO
          1 00076E  0881 0005                            BAGE     s:13577,PREL

     1290    13575    2                 GD_DATA.GD.STEP_BRKPNT.USER# = 0;

  13575   1 000770  8746 0160                            CL       352,B6
          1 000772  0F81 0005                            B        s:13578,PREL

     1291    13576    2              ELSE
     1292    13577    2                 GD_DATA.GD.STEP_BRKPNT.USER# = GD_DATA.GD.USE_USERNO;

  13577   1 000774  D846 014B                            LDR,R5   331,B6
          1 000776  DF46 0160                            STR,R5   352,B6

     1293    13578    3              IF G$TSA.I.TRAP# = %G_FPRG_XBREAK# THEN DO;

  13578   1 000778  D2C5 0002                            LLH,R5   2,B5
          1 00077A  5D33                                 CMV,R5   51
          1 00077B  0981 000C                            BNE      s:13583,PREL

     1294    13579    3                 GD_DATA.GD.STEP_BRKPNT.START$ = GD_DATA.GD.XBRKINFO$->VLP_XBREAK.IC$;

  13579   1 00077D  CCC6 0154                            LDB,B4   340,B6
          1 00077F  BC84                                 LDB,B3   ,B4
          1 000780  BFC6 015D                            STB,B3   349,B6

     1295    13580    3                  GD_DATA.GD.STEP_BRKPNT.ADR$ = PINCRW(GD_DATA.GD.STEP_BRKPNT.START$,
             13580                           GD_DATA.GD.STEPCNT);

  13580   1 000782  B856                                 LDR,R3   R6
          1 000783  ABB3                                 LAB,B2   ,B3,R3
          1 000784  AFC6 015B                            STB,B2   347,B6

     1296    13581    3                 END;
PL6.E3A0      #005=GDB$FIRST_USER_TRAP File=GDB$BRKPNTS.:E05TSI                  TUE 07/29/97 21:24 Page:220  

  13581   1 000786  0F81 009C                            B        s:13603,PREL

     1297    13582    3              ELSE DO;

     1298    13583    3                   PTR$ = G$TSA.P$;

  13583   1 000788  CCC5 0008                            LDB,B4   8,B5
          1 00078A  CFC7 0012                            STB,B4   PTR$,AUTO

     1299    13584    3                   CALL GDU$SETUP_WINDOW_USER(PTR$,GD_DATA.GD.STEP_BRKPNT.USER#);

  13584   1 00078C  BBC6 0160                            LAB,B3   352,B6
          1 00078E  BFC7 0058                            STB,B3   CONSTPTR$+5,AUTO
          1 000790  ABC7 0012                            LAB,B2   PTR$,AUTO
          1 000792  AFC7 0056                            STB,B2   CONSTPTR$+3,AUTO
          1 000794  BBC7 0056                            LAB,B3   CONSTPTR$+3,AUTO
          1 000796  CBF0 0200                            LAB,B4   512,IMO
          1 000798  E380 0000 0000  xent                 LNJ,B6   GDU$SETUP_WINDOW_USER
          1 00079B       0001                            DC       s:13585,PREL

     1300    13585    3                   IF PTR$->BITMEM = %GD#LNJB5_INST AND GD_DATA.GD.STEPCNT= 3 THEN

  13585   1 00079C  ECC7 0012                            LDB,B6   PTR$,AUTO
          1 00079E  E806                                 LDR,R6   ,B6
          1 00079F  E970 D380                            CMR,R6   -11392,IMO
          1 0007A1  0981 000B                            BNE      s:13587,PREL
          1 0007A3  DC80 0000 0000  xsym                 LDB,B5   GD$DELTA_DATA$
          1 0007A6  D845 016A                            LDR,R5   362,B5
          1 0007A8  5D03                                 CMV,R5   3
          1 0007A9  0981 0003                            BNE      s:13587,PREL

     1301    13586    3                      GD_DATA.GD.STEPCNT = GD_DATA.GD.STEPCNT+1;

  13586   1 0007AB  8AC5 016A                            INC      362,B5

     1302    13587    4                  IF PTR$->BITMEM = %GD#MCL_INST OR (PTR$->BITMEM = %GD#LNJB6_INST AND
PL6.E3A0      #005=GDB$FIRST_USER_TRAP File=GDB$BRKPNTS.:E05TSI                  TUE 07/29/97 21:24 Page:221  
             13587                            GD_DATA.GD.SOC) THEN DO;

  13587   1 0007AD  E806                                 LDR,R6   ,B6
          1 0007AE  E970 0001                            CMR,R6   1,IMO
          1 0007B0  0901 000D                            BE       s:13588,PREL
          1 0007B2  E970 E380                            CMR,R6   -7296,IMO
          1 0007B4  0981 0059                            BNE      s:13600,PREL
          1 0007B6  DC80 0000 0000  xsym                 LDB,B5   GD$DELTA_DATA$
          1 0007B9  82C5 014C                            LB,'0080'X        332,B5
          1 0007BB       0080
          1 0007BC  0581 0051                            BBF      s:13600,PREL

     1303    13588    4                    GD_DATA.GD.STEP_BRKPNT.ADR$=PINCRW(G$TSA.P$,GD_DATA.GD.STEPCNT+1);

  13588   1 0007BE  DC80 0000 0000  xsym                 LDB,B5   GD$DELTA_DATA$
          1 0007C1  B845 016A                            LDR,R3   362,B5
          1 0007C3  CCC7 0004                            LDB,B4   @G$TSA,AUTO
          1 0007C5  BCC4 0008                            LDB,B3   8,B4
          1 0007C7  BFC7 0056                            STB,B3   CONSTPTR$+3,AUTO
          1 0007C9  E853                                 LDR,R6   R3
          1 0007CA  70F0                                 DAR,R7   16
          1 0007CB  8447 0056                            AID      CONSTPTR$+3,AUTO
          1 0007CD  8470 0000 0001                       AID      1,IMO
          1 0007D0  8D45 015B                            SDI      347,B5

     1304    13589    4                     OFFSET=PINCRW(G$TSA.P$,GD_DATA.GD.STEPCNT)->SMEMORY;

  13589   1 0007D2  ACC4 0008                            LDB,B2   8,B4
          1 0007D4  D832                                 LDR,R5   ,B2,R3
          1 0007D5  DF47 0009                            STR,R5   OFFSET,AUTO

     1305    13590    4                     IF PTR$->BITMEM = %GD#MCL_INST THEN

  13590   1 0007D7  C806                                 LDR,R4   ,B6
          1 0007D8  C970 0001                            CMR,R4   1,IMO
          1 0007DA  0981 000F                            BNE      s:13593,PREL

PL6.E3A0      #005=GDB$FIRST_USER_TRAP File=GDB$BRKPNTS.:E05TSI                  TUE 07/29/97 21:24 Page:222  
     1306    13591    4                        GD_DATA.GD.ALTRET_ADR$ = PINCRW(G$TSA.P$,GD_DATA.GD.STEPCNT+
             13591                                 OFFSET+1);

  13591   1 0007DC  BA55                                 ADD,R3   R5
          1 0007DD  AFC7 0056                            STB,B2   CONSTPTR$+3,AUTO
          1 0007DF  E853                                 LDR,R6   R3
          1 0007E0  70F0                                 DAR,R7   16
          1 0007E1  8447 0056                            AID      CONSTPTR$+3,AUTO
          1 0007E3  8470 0000 0001                       AID      1,IMO
          1 0007E6  8D45 0132                            SDI      306,B5
          1 0007E8  0F81 0005                            B        s:13594,PREL

     1307    13592    4                     ELSE
     1308    13593    4                        GD_DATA.GD.ALTRET_ADR$ = PINCRW(G$TSA.P$,GD_DATA.GD.STEPCNT+
             13593                                 OFFSET);

  13593   1 0007EA  BA55                                 ADD,R3   R5
          1 0007EB  9BB2                                 LAB,B1   ,B2,R3
          1 0007EC  9FC5 0132                            STB,B1   306,B5

     1309    13594    4                     PTR$ = GD_DATA.GD.ALTRET_ADR$;

  13594   1 0007EE  BCC5 0132                            LDB,B3   306,B5
          1 0007F0  BFC7 0012                            STB,B3   PTR$,AUTO

     1310    13595    4                     CALL GDU$SETUP_WINDOW_USER(PTR$,GD_DATA.GD.STEP_BRKPNT.USER#);

  13595   1 0007F2  EBC5 0160                            LAB,B6   352,B5
          1 0007F4  EFC7 0058                            STB,B6   CONSTPTR$+5,AUTO
          1 0007F6  ABC7 0012                            LAB,B2   PTR$,AUTO
          1 0007F8  AFC7 0056                            STB,B2   CONSTPTR$+3,AUTO
          1 0007FA  BBC7 0056                            LAB,B3   CONSTPTR$+3,AUTO
          1 0007FC  CBF0 0200                            LAB,B4   512,IMO
          1 0007FE  E380 0000 0000  xent                 LNJ,B6   GDU$SETUP_WINDOW_USER
          1 000801       0001                            DC       s:13596,PREL

     1311    13596    4                     GD_DATA.GD.ALTRET_INST=PTR$->MEMORY;
PL6.E3A0      #005=GDB$FIRST_USER_TRAP File=GDB$BRKPNTS.:E05TSI                  TUE 07/29/97 21:24 Page:223  

  13596   1 000802  EC80 0000 0000  xsym                 LDB,B6   GD$DELTA_DATA$
          1 000805  DCC7 0012                            LDB,B5   PTR$,AUTO
          1 000807  E805                                 LDR,R6   ,B5
          1 000808  EF46 0134                            STR,R6   308,B6

     1312    13597    4                     PTR$->BITMEM = %GD#BREAK_INST;

  13597   1 00080A  5C02                                 LDV,R5   2
          1 00080B  DF05                                 STR,R5   ,B5

     1313    13598    4                     END;

  13598   1 00080C  0F81 000D                            B        s:13601,PREL

     1314    13599    3                   ELSE
     1315    13600    3                     GD_DATA.GD.STEP_BRKPNT.ADR$=PINCRW(G$TSA.P$,GD_DATA.GD.STEPCNT);

  13600   1 00080E  DC80 0000 0000  xsym                 LDB,B5   GD$DELTA_DATA$
          1 000811  B845 016A                            LDR,R3   362,B5
          1 000813  CCC7 0004                            LDB,B4   @G$TSA,AUTO
          1 000815  BCC4 0008                            LDB,B3   8,B4
          1 000817  ABB3                                 LAB,B2   ,B3,R3
          1 000818  AFC5 015B                            STB,B2   347,B5

     1316    13601    3                   GD_DATA.GD.STEP_BRKPNT.START$ = G$TSA.P$;

  13601   1 00081A  ECC7 0004                            LDB,B6   @G$TSA,AUTO
          1 00081C  DCC6 0008                            LDB,B5   8,B6
          1 00081E  CC80 0000 0000  xsym                 LDB,B4   GD$DELTA_DATA$
          1 000821  DFC4 015D                            STB,B5   349,B4

     1317    13602    3                 END;

     1318    13603    2              IF MON THEN

  13603   1 000823  89C7 0015                            CMZ      MON,AUTO
PL6.E3A0      #005=GDB$FIRST_USER_TRAP File=GDB$BRKPNTS.:E05TSI                  TUE 07/29/97 21:24 Page:224  
          1 000825  0881 0008                            BAGE     s:13606,PREL

     1319    13604    2                 GD_DATA.GD.STEP_BRKPNT.USER#=0;

  13604   1 000827  EC80 0000 0000  xsym                 LDB,B6   GD$DELTA_DATA$
          1 00082A  8746 0160                            CL       352,B6
          1 00082C  0F81 0008                            B        s:13607,PREL

     1320    13605    2              ELSE
     1321    13606    2                 GD_DATA.GD.STEP_BRKPNT.USER#=GD_DATA.GD.USE_USERNO;

  13606   1 00082E  EC80 0000 0000  xsym                 LDB,B6   GD$DELTA_DATA$
          1 000831  E846 014B                            LDR,R6   331,B6
          1 000833  EF46 0160                            STR,R6   352,B6

     1322    13607    2              ADR$=GD_DATA.GD.STEP_BRKPNT.ADR$;

  13607   1 000835  DCC6 015B                            LDB,B5   347,B6
          1 000837  DFC7 0010                            STB,B5   ADR$,AUTO

     1323    13608    2              P$=GD_DATA.GD.STEP_BRKPNT.ADR$;

  13608   1 000839  DFC7 000D                            STB,B5   P$,AUTO

     1324    13609    2              CALL GDU$SETUP_WINDOW_USER (ADR$,GD_DATA.GD.STEP_BRKPNT.USER#)

  13609   1 00083B  CBC6 0160                            LAB,B4   352,B6
          1 00083D  CFC7 0058                            STB,B4   CONSTPTR$+5,AUTO
          1 00083F  BBC7 0010                            LAB,B3   ADR$,AUTO
          1 000841  BFC7 0056                            STB,B3   CONSTPTR$+3,AUTO
          1 000843  BBC7 0056                            LAB,B3   CONSTPTR$+3,AUTO
          1 000845  CBF0 0200                            LAB,B4   512,IMO
          1 000847  E380 0000 0000  xent                 LNJ,B6   GDU$SETUP_WINDOW_USER
          1 00084A       002A                            DC       s:13622,PREL

     1325    13610    3              WHENRETURN DO;

PL6.E3A0      #005=GDB$FIRST_USER_TRAP File=GDB$BRKPNTS.:E05TSI                  TUE 07/29/97 21:24 Page:225  
     1326    13611    3                 CALL SRCHFORBRKPNT (BRK$, P$)

  13611   1 00084B  EBC7 000D                            LAB,B6   P$,AUTO
          1 00084D  EFC7 001C                            STB,B6   @BRK$+2,AUTO
          1 00084F  DBC7 0006                            LAB,B5   BRK$,AUTO
          1 000851  DFC7 001A                            STB,B5   ERRCODE_SCRATCH+4,AUTO
          1 000853  E3C0 0182                            LNJ,B6   s:0,PREL
          1 000855       000C                            DC       s:13616,PREL

     1327    13612    4                 WHENRETURN DO;

     1328    13613    4                     GD_DATA.GD.STEP_BRKPNT.OLDINST = BRK$->BRKPNT.OLDINST;

  13613   1 000856  EC80 0000 0000  xsym                 LDB,B6   GD$DELTA_DATA$
          1 000859  DCC7 0006                            LDB,B5   BRK$,AUTO
          1 00085B  E845 0007                            LDR,R6   7,B5
          1 00085D  EF46 015F                            STR,R6   351,B6

     1329    13614    4                   END;

  13614   1 00085F  0F81 000B                            B        s:13619,PREL

     1330    13615    4                 WHENALTRETURN DO;

     1331    13616    4                     GD_DATA.GD.STEP_BRKPNT.OLDINST=ADR$->MEMORY;

  13616   1 000861  EC80 0000 0000  xsym                 LDB,B6   GD$DELTA_DATA$
          1 000864  DCC7 0010                            LDB,B5   ADR$,AUTO
          1 000866  E805                                 LDR,R6   ,B5
          1 000867  EF46 015F                            STR,R6   351,B6

     1332    13617    4                     ADR$->BITMEM=%GD#BREAK_INST;

  13617   1 000869  5C02                                 LDV,R5   2
          1 00086A  DF05                                 STR,R5   ,B5

     1333    13618    4                   END;
PL6.E3A0      #005=GDB$FIRST_USER_TRAP File=GDB$BRKPNTS.:E05TSI                  TUE 07/29/97 21:24 Page:226  

     1334    13619    3                 GD_DATA.GD.STEP_BRKPNT.FLAGS.ACTIVE='1'B;

  13619   1 00086B  EC80 0000 0000  xsym                 LDB,B6   GD$DELTA_DATA$
          1 00086E  8946 0161                            LBT,'8000'X       353,B6
          1 000870       8000

     1335    13620    3                 GD_DATA.GD.STEP_BRKPNT.FLAGS.ARMED='1'B;

  13620   1 000871  8946 0161                            LBT,'4000'X       353,B6
  13620   1 000873       4000

     1336    13621    3                 END;

     1337    13622    2              GD_DATA.GD.STEPCNT=0;

  13622   1 000874  EC80 0000 0000  xsym                 LDB,B6   GD$DELTA_DATA$
          1 000877  8746 016A                            CL       362,B6

     1338    13623    2              IF G$TSA.I.TRAP# = %G_FPRG_XBREAK#

  13623   1 000879  DCC7 0004                            LDB,B5   @G$TSA,AUTO
          1 00087B  E2C5 0002                            LLH,R6   2,B5
          1 00087D  6D33                                 CMV,R6   51
          1 00087E  0981 0006                            BNE      s:13625,PREL

     1339    13624    2              THEN GD_DATA.GD.XBRKINFO$->VLP_XBREAK.TT = '1'B;

  13624   1 000880  CCC6 0154                            LDB,B4   340,B6
          1 000882  8944 0006                            LBT,'0080'X       6,B4
          1 000884       0080

     1340    13625    2              G$TSA.ISA.REGS.M1.J=%G_ENABLE#;

  13625   1 000885  8945 002E                            LBT,'0080'X       46,B5
  13625   1 000887       0080

PL6.E3A0      #005=GDB$FIRST_USER_TRAP File=GDB$BRKPNTS.:E05TSI                  TUE 07/29/97 21:24 Page:227  
     1341    13626                /* Make sure we get the right old inst if other kinds of brkpnts are set */
     1342    13627    2              IF GD_DATA.GD.ALTRET_ADR$ ~= ADDR(NIL) THEN

  13627   1 000888  8DC6 0132                            CMN      306,B6
          1 00088A  0901 000B                            BE       s:13638,PREL

     1343    13628    2                 IF GD_DATA.GD.ALTRET_ADR$ = GD_DATA.GD.STEP_BRKPNT.ADR$ THEN

  13628   1 00088C  CCC6 0132                            LDB,B4   306,B6
          1 00088E  CDC6 015B                            CMB,B4   347,B6
          1 000890  0981 0005                            BNE      s:13638,PREL

     1344    13629    2                    GD_DATA.GD.STEP_BRKPNT.OLDINST = GD_DATA.GD.ALTRET_INST;

  13629   1 000892  E846 0134                            LDR,R6   308,B6
          1 000894  EF46 015F                            STR,R6   351,B6

     1345    13630    2              END;

     1346    13631        /*
     1347    13632          If we are continuing from a normal breakpoint (not a step), we
     1348    13633          need to execute the instruction that was supposed to be here.
     1349    13634          To do this we will put it back in memory now and replace it either
     1350    13635          at the next breakpoint or when we get the branch trace we are
     1351    13636          going to setup here
     1352    13637                                                                                      */
     1353    13638    2           IF BRKNUM > 0 AND BRKNUM <= %GD#MAXBRKNUM THEN DO;

  13638   1 000896  E847 0008                            LDR,R6   BRKNUM,AUTO
          1 000898  6A81 007E                            BLEZ,R6  s:13670,PREL
          1 00089A  6D14                                 CMV,R6   20
          1 00089B  0A01 007B                            BAG      s:13670,PREL

     1354    13639    2                 IF G$TSA.I.TRAP# = %G_FPRG_XBREAK#

  13639   1 00089D  D2C5 0002                            LLH,R5   2,B5
          1 00089F  5D33                                 CMV,R5   51
PL6.E3A0      #005=GDB$FIRST_USER_TRAP File=GDB$BRKPNTS.:E05TSI                  TUE 07/29/97 21:24 Page:228  
          1 0008A0  0981 0012                            BNE      s:13647,PREL
          1 0008A2  CCC6 0154                            LDB,B4   340,B6
          1 0008A4  82C4 0006                            LB,'0040'X        6,B4
          1 0008A6       0040
          1 0008A7  0501 000B                            BBT      s:13647,PREL

     1355    13640    2               AND GD_DATA.GD.XBRKINFO$->VLP_XBREAK.GOIC = '0'B
     1356    13641    3                 THEN DO;

     1357    13642                          /* Tell the interpreter that it is to execute REPLACED.INSTR
     1358    13643                             and GO                                                */
     1359    13644    3                     GD_DATA.GD.XBRKINFO$->VLP_XBREAK.GOBREAK = '1'B;

  13644   1 0008A9  8944 0006                            LBT,'0020'X       6,B4
  13644   1 0008AB       0020

     1360    13645    3                     ADR$ = GD_DATA.GD.XBRKINFO$->VLP_XBREAK.IC$;

  13645   1 0008AC  CCC6 0154                            LDB,B4   340,B6
          1 0008AE  BC84                                 LDB,B3   ,B4
          1 0008AF  BFC7 0010                            STB,B3   ADR$,AUTO

     1361    13646    3                     END;

  13646   1 0008B1  0F81 0005                            B        s:13648,PREL

     1362    13647    2                 ELSE ADR$ = G$TSA.P$;

  13647   1 0008B3  CCC5 0008                            LDB,B4   8,B5
          1 0008B5  CFC7 0010                            STB,B4   ADR$,AUTO

     1363    13648    2                 CALL SRCHFORBRKPNT (BRK$, ADR$)

  13648   1 0008B7  CBC7 0010                            LAB,B4   ADR$,AUTO
          1 0008B9  CFC7 001C                            STB,B4   @BRK$+2,AUTO
          1 0008BB  BBC7 0006                            LAB,B3   BRK$,AUTO
          1 0008BD  BFC7 001A                            STB,B3   ERRCODE_SCRATCH+4,AUTO
PL6.E3A0      #005=GDB$FIRST_USER_TRAP File=GDB$BRKPNTS.:E05TSI                  TUE 07/29/97 21:24 Page:229  
          1 0008BF  E3C0 0116                            LNJ,B6   s:0,PREL
          1 0008C1       0056                            DC       s:13670,PREL

     1364    13649    3                 WHENRETURN DO;

     1365    13650    3                      IF BRK$->BRKPNT.FLAGS.ACTIVE AND

  13650   1 0008C2  ECC7 0006                            LDB,B6   BRK$,AUTO
          1 0008C4  89C6 000A                            CMZ      10,B6
          1 0008C6  0881 0050                            BAGE     s:13670,PREL
          1 0008C8  DCC7 0010                            LDB,B5   ADR$,AUTO
          1 0008CA  DDC6 0005                            CMB,B5   5,B6
          1 0008CC  0981 004A                            BNE      s:13670,PREL

     1366    13651    4                        ADR$=BRK$->BRKPNT.ADR$ THEN DO;

     1367    13652    4                         IF ((GD$MSG.SUBFB.INTERPRETIVE) AND (G$TSA.I.TRAP# = %
             13652                                  G_FPRG_XBREAK#)

  13652   1 0008CE  CCC7 000B                            LDB,B4   MSG$,AUTO
          1 0008D0  8284                                 LB,'0004'X        ,B4
          1 0008D1       0004
          1 0008D2  0581 0018                            BBF      s:13658,PREL
          1 0008D4  BCC7 0004                            LDB,B3   @G$TSA,AUTO
          1 0008D6  E2C3 0002                            LLH,R6   2,B3
          1 0008D8  6D33                                 CMV,R6   51
          1 0008D9  0981 0011                            BNE      s:13658,PREL
          1 0008DB  AC80 0000 0000  xsym                 LDB,B2   GD$DELTA_DATA$
          1 0008DE  9CC2 0154                            LDB,B1   340,B2
          1 0008E0  82C1 0006                            LB,'0020'X        6,B1
          1 0008E2       0020
          1 0008E3  0581 0007                            BBF      s:13658,PREL

     1368    13653    5                           AND (GD_DATA.GD.XBRKINFO$->VLP_XBREAK.GOBREAK)) THEN DO;

     1369    13654    5                            GD_DATA.GD.XBRKINFO$->VLP_XBREAK.REPLACED.INSTR =

PL6.E3A0      #005=GDB$FIRST_USER_TRAP File=GDB$BRKPNTS.:E05TSI                  TUE 07/29/97 21:24 Page:230  
  13654   1 0008E5  D846 0007                            LDR,R5   7,B6
          1 0008E7  DF41 0003                            STR,R5   3,B1

     1370    13655    5                             BRK$->BRKPNT.OLDINST;
     1371    13656    5                            END;

  13656   1 0008E9  0F81 002D                            B        s:13670,PREL

     1372    13657    5                         ELSE DO;

     1373    13658    5                            ADR$=BRK$->BRKPNT.ADR$;

  13658   1 0008EB  BCC6 0005                            LDB,B3   5,B6
          1 0008ED  BFC7 0010                            STB,B3   ADR$,AUTO

     1374    13659    5                            CALL GDU$SETUP_WINDOW_USER (ADR$,BRK$->BRKPNT.USER#)

  13659   1 0008EF  DBC6 0008                            LAB,B5   8,B6
          1 0008F1  DFC7 0058                            STB,B5   CONSTPTR$+5,AUTO
          1 0008F3  ABC7 0010                            LAB,B2   ADR$,AUTO
          1 0008F5  AFC7 0056                            STB,B2   CONSTPTR$+3,AUTO
          1 0008F7  BBC7 0056                            LAB,B3   CONSTPTR$+3,AUTO
          1 0008F9  CBF0 0200                            LAB,B4   512,IMO
          1 0008FB  E380 0000 0000  xent                 LNJ,B6   GDU$SETUP_WINDOW_USER
          1 0008FE       0019                            DC       s:13670,PREL

     1375    13660    6                            WHENRETURN DO;

     1376    13661    6                               ADR$->MEMORY=BRK$->BRKPNT.OLDINST;

  13661   1 0008FF  ECC7 0010                            LDB,B6   ADR$,AUTO
          1 000901  DCC7 0006                            LDB,B5   BRK$,AUTO
          1 000903  E845 0007                            LDR,R6   7,B5
          1 000905  EF06                                 STR,R6   ,B6

     1377    13662    6                               BRK$->BRKPNT.FLAGS.ARMED = '0'B;

PL6.E3A0      #005=GDB$FIRST_USER_TRAP File=GDB$BRKPNTS.:E05TSI                  TUE 07/29/97 21:24 Page:231  
  13662   1 000906  ECC7 0006                            LDB,B6   BRK$,AUTO
          1 000908  8846 000A                            LBF,'4000'X       10,B6
          1 00090A       4000

     1378    13663    6                               GD_DATA.GD.BRKNUM=BRKNUM;

  13663   1 00090B  DC80 0000 0000  xsym                 LDB,B5   GD$DELTA_DATA$
          1 00090E  E847 0008                            LDR,R6   BRKNUM,AUTO
          1 000910  EF45 0158                            STR,R6   344,B5

     1379    13664    6                               G$TSA.ISA.REGS.M1.J=%G_ENABLE#;

  13664   1 000912  CCC7 0004                            LDB,B4   @G$TSA,AUTO
          1 000914  8944 002E                            LBT,'0080'X       46,B4
          1 000916       0080

     1380    13665    6                               END;

     1381    13666    5                            END;

     1382    13667    4                         END;

     1383    13668    3                   END;

     1384    13669    2                END;

     1385    13670    1           IF G$TSA.I.TRAP# = %G_FPRG_XBREAK#

  13670   1 000917  ECC7 0004                            LDB,B6   @G$TSA,AUTO
          1 000919  E2C6 0002                            LLH,R6   2,B6
          1 00091B  6D33                                 CMV,R6   51
          1 00091C  0981 0013                            BNE      s:13680,PREL

     1386    13671    2           THEN DO;

     1387    13672    2                G$TSA.P$ = PINCRW(G$TSA.P$,1);

PL6.E3A0      #005=GDB$FIRST_USER_TRAP File=GDB$BRKPNTS.:E05TSI                  TUE 07/29/97 21:24 Page:232  
  13672   1 00091E  DCC6 0008                            LDB,B5   8,B6
          1 000920  CBC5 0001                            LAB,B4   1,B5
          1 000922  CFC6 0008                            STB,B4   8,B6

     1388    13673    2                IF BRKNUM = 0

  13673   1 000924  D847 0008                            LDR,R5   BRKNUM,AUTO
          1 000926  5981 0009                            BNEZ,R5  s:13680,PREL

     1389    13674    2                THEN GD_DATA.GD.XBRKINFO$->VLP_XBREAK.GOBREAK = '0'B;

  13674   1 000928  DC80 0000 0000  xsym                 LDB,B5   GD$DELTA_DATA$
          1 00092B  BCC5 0154                            LDB,B3   340,B5
          1 00092D  8843 0006                            LBF,'0020'X       6,B3
          1 00092F       0020

     1390    13675    2              END;

     1391    13676        /*
     1392    13677          Restore the monitors window segment descriptor, since we probably
     1393    13678          trashed it along the way
     1394    13679                                                                                      */
     1395    13680    1           IF GD_DATA.GD.MODE=%GD#MODE_XDELTA THEN

  13680   1 000930  DC80 0000 0000  xsym                 LDB,B5   GD$DELTA_DATA$
          1 000933  E845 0130                            LDR,R6   304,B5
          1 000935  6D02                                 CMV,R6   2
          1 000936  0981 0006                            BNE      s:13687,PREL

     1396    13681    1              %ASDT_WINDOW#=GD_DATA.GD.WINDOWSEG;

  13681   1 000938  CCC5 017A                            LDB,B4   378,B5
          1 00093A  8CC5 0168                            LDI      360,B5
          1 00093C  8D04                                 SDI      ,B4

     1397    13682        /*
     1398    13683          If the user specified GOTRAP, setup the S reg to tell the debugger
PL6.E3A0      #005=GDB$FIRST_USER_TRAP File=GDB$BRKPNTS.:E05TSI                  TUE 07/29/97 21:24 Page:233  
     1399    13684          this is what the user has specified, and do a normal return to the
     1400    13685          trap handler.
     1401    13686                                                                                      */
     1402    13687    1           IF GD_DATA.GD.TRACE ~= 0 OR GD_DATA.GD.ONCALL OR GD_DATA.GD.ONCALLS

  13687   1 00093D  DC80 0000 0000  xsym                 LDB,B5   GD$DELTA_DATA$
          1 000940  E845 0153                            LDR,R6   339,B5
          1 000942  6981 000B                            BNEZ,R6  s:13689,PREL
          1 000944  82C5 014C                            LB,'0800'X        332,B5
          1 000946       0800
          1 000947  0501 0006                            BBT      s:13689,PREL
          1 000949  82C5 014C                            LB,'1000'X        332,B5
          1 00094B       1000
          1 00094C  0581 0010                            BBF      s:13696,PREL

     1403    13688    2           THEN DO;

     1404    13689    2                IF G$TSA.I.TRAP# = %G_FPRG_XBREAK#

  13689   1 00094E  D2C6 0002                            LLH,R5   2,B6
          1 000950  5D33                                 CMV,R5   51
          1 000951  0981 0008                            BNE      s:13691,PREL

     1405    13690    2                THEN GD_DATA.GD.XBRKINFO$ -> VLP_XBREAK.TT = '1'B;

  13690   1 000953  CCC5 0154                            LDB,B4   340,B5
          1 000955  8944 0006                            LBT,'0080'X       6,B4
          1 000957       0080
          1 000958  0F81 0004                            B        s:13696,PREL

     1406    13691    2                ELSE G$TSA.ISA.REGS.M1.J = '1'B;

  13691   1 00095A  8946 002E                            LBT,'0080'X       46,B6
  13691   1 00095C       0080

     1407    13692    2             END;

PL6.E3A0      #005=GDB$FIRST_USER_TRAP File=GDB$BRKPNTS.:E05TSI                  TUE 07/29/97 21:24 Page:234  
     1408    13693        /* If post-associating FPL, set trap to XBREAK to tell the
     1409    13694           interpreter that a debugger is present.
     1410    13695        */
     1411    13696    1           IF GD$MSG.SUBFB.POSTASSOC THEN

  13696   1 00095D  CCC7 000B                            LDB,B4   MSG$,AUTO
          1 00095F  8284                                 LB,'0080'X        ,B4
          1 000960       0080
          1 000961  0581 0004                            BBF      s:13698,PREL

     1412    13697    1              G$TSA.I.TRAP# = %G_FPRG_XBREAK#;

  13697   1 000963  6C33                                 LDV,R6   51
          1 000964  E7C6 0002                            STH,R6   2,B6

     1413    13698    1           IF GD_DATA.GD.GOTRAP THEN

  13698   1 000966  82C5 014C                            LB,'0020'X        332,B5
  13698   1 000968       0020
          1 000969  0581 0069                            BBF      s:13727,PREL

     1414    13699    2           DO;

     1415    13700        /* No need to check for a trap handler if this is XDELTA. */
     1416    13701    2              IF GD_DATA.GD.MODE = %GD#MODE_XDELTA THEN

  13701   1 00096B  E845 0130                            LDR,R6   304,B5
          1 00096D  6D02                                 CMV,R6   2
          1 00096E  0901 005D                            BE       s:13722,PREL

     1417    13702    2                 GOTO GOTRAP;
     1418    13703    2              TRAP_NO = G$TSA.I.TRAP#;

  13703   1 000970  D2C6 0002                            LLH,R5   2,B6
          1 000972  DF47 0014                            STR,R5   TRAP_NO,AUTO

     1419    13704    2              IF G$TSA.I.TRAP# <=%G_SIP_QLT# THEN
PL6.E3A0      #005=GDB$FIRST_USER_TRAP File=GDB$BRKPNTS.:E05TSI                  TUE 07/29/97 21:24 Page:235  

  13704   1 000974  5D1F                                 CMV,R5   31
          1 000975  0301 0015                            BG       s:13710,PREL

     1420    13705    2                 IF G$ROS.U_ECCB$->G$ECCB.TRAP$=ENTADDR(NIL)

  13705   1 000977  BC80 0000 0000  xsym                 LDB,B3   G$ROS$
          1 00097A  ACC3 000C                            LDB,B2   12,B3
          1 00097C  9CC2 0006                            LDB,B1   6,B2
          1 00097E  9D80 0000 0001  02                   CMB,B1   +1
          1 000981  0901 0030                            BE       s:13718,PREL
          1 000983  B855                                 LDR,R3   R5
          1 000984  EBC2 000B                            LAB,B6   11,B2
          1 000986  82B6                                 LB       ,B6,R3
          1 000987  0581 002A                            BBF      s:13718,PREL

     1421    13706    2                 OR G$ROS.U_ECCB$->G$ECCB.FLTFLGS(G$TSA.I.TRAP#)='0'B THEN
     1422    13707    2                    GOTO NO_HAND;
     1423    13708    2                 ELSE
     1424    13709    2                    GOTO GOTRAP;

  13709   1 000989  0F81 0042                            B        s:13722,PREL

     1425    13710    2              IF G$TSA.I.TRAP# >= %G_FPRG_EXIT# AND G$TSA.I.TRAP#<=%G_FPRG_XXX# THEN

  13710   1 00098B  5D2F                                 CMV,R5   47
          1 00098C  0201 0007                            BL       s:13712,PREL
          1 00098E  5D31                                 CMV,R5   49
          1 00098F  0301 0004                            BG       s:13712,PREL

     1426    13711    2                 TRAP_NO=%G_FPRG_XCON#;

  13711   1 000991  5C3A                                 LDV,R5   58
          1 000992  DF47 0014                            STR,R5   TRAP_NO,AUTO

     1427    13712    2              IF G$TSA.I.TRAP#=%G_HOST_INT# THEN

PL6.E3A0      #005=GDB$FIRST_USER_TRAP File=GDB$BRKPNTS.:E05TSI                  TUE 07/29/97 21:24 Page:236  
  13712   1 000994  C2C6 0002                            LLH,R4   2,B6
          1 000996  4D37                                 CMV,R4   55
          1 000997  0981 0004                            BNE      s:13714,PREL

     1428    13713    2                 TRAP_NO=%G_FPRG_BRK#;

  13713   1 000999  5C39                                 LDV,R5   57
          1 00099A  DF47 0014                            STR,R5   TRAP_NO,AUTO

     1429    13714    2              IF TRAP_NO < %G_FPRG_EVENT# OR TRAP_NO > %G_FPRG_MCLTRAP# THEN

  13714   1 00099C  5D38                                 CMV,R5   56
          1 00099D  0201 002E                            BL       s:13722,PREL
          1 00099F  5D3B                                 CMV,R5   59
          1 0009A0  0301 002B                            BG       s:13722,PREL

     1430    13715    2                 GOTO GOTRAP;
     1431    13716    3              IF G$ROS.U_ECCB$->G$ECCB_ARRAYED.HAND$(TRAP_NO-%G_FPRG_EVENT#)=ENTADDR(
             13716                       NIL) THEN DO;

  13716   1 0009A2  BC80 0000 0000  xsym                 LDB,B3   G$ROS$
          1 0009A5  ACC3 000C                            LDB,B2   12,B3
          1 0009A7  B855                                 LDR,R3   R5
          1 0009A8  3EC8                                 ADV,R3   -56
          1 0009A9  9CB2                                 LDB,B1   ,B2,R3
          1 0009AA  9D80 0000 0000  02                   CMB,B1   0
          1 0009AD  0981 001E                            BNE      s:13722,PREL

     1432    13717    3                 SIZE=%GD#RSPBRKSIZ;

  13717   1 0009AF  2C40                                 LDV,R2   64
          1 0009B0  AF47 000F                            STR,R2   SIZE,AUTO

     1433    13718    3   NO_HAND:      CALL GDI$SEND_ERROR_RESPONSE(SIZE,GD$MSG,%GD#RSPNOTRAPHAND);

  13718   1 0009B2  EBF0 0031            NO_HAND         LAB,B6   49,IMO
          1 0009B4  EFC7 005A                            STB,B6   CONSTPTR$+7,AUTO
PL6.E3A0      #005=GDB$FIRST_USER_TRAP File=GDB$BRKPNTS.:E05TSI                  TUE 07/29/97 21:24 Page:237  
          1 0009B6  CFC7 0058                            STB,B4   CONSTPTR$+5,AUTO
          1 0009B8  ABC7 000F                            LAB,B2   SIZE,AUTO
          1 0009BA  AFC7 0056                            STB,B2   CONSTPTR$+3,AUTO
          1 0009BC  BBC7 0056                            LAB,B3   CONSTPTR$+3,AUTO
          1 0009BE  CBF0 0300                            LAB,B4   768,IMO
          1 0009C0  E380 0000 0000  xent                 LNJ,B6   GDI$SEND_ERROR_RESPONSE
          1 0009C3       0001                            DC       s:13719,PREL

     1434    13719    3                 GD_DATA.GD.STOPT = %G_YES#;

  13719   1 0009C4  EC80 0000 0000  xsym                 LDB,B6   GD$DELTA_DATA$
          1 0009C7  8946 014C                            LBT,'0004'X       332,B6
          1 0009C9       0004

     1435    13720    3                 GOTO CALLGDI;

  13720   1 0009CA  0F81 FD06                            B        s:13534,PREL

     1436    13721    3                 END;
     1437    13722    3              ELSE DO;

     1438    13723    3   GOTRAP:       G$TSA.ISA.S='0'B;

  13723   1 0009CC  ECC7 0004            GOTRAP          LDB,B6   @G$TSA,AUTO
          1 0009CE  8746 0017                            CL       23,B6

     1439    13724    3                 RETURN;

  13724   1 0009D0  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

     1440    13725    3                 END;
     1441    13726    2              END;
     1442    13727    1           ALTRETURN;

  13727   1 0009D3  C380 0000 0000  xent                 LNJ,B4   X6A_AALT

     1443    13728    1   SRCHFORBRKPNT: PROC(BRK$,ADR$) ALTRET;
PL6.E3A0      #005=GDB$FIRST_USER_TRAP File=GDB$BRKPNTS.:E05TSI                  TUE 07/29/97 21:24 Page:238  

  13728   1 0009D6  EFC7 0018            SRCHFORBRKPNT   STB,B6   ERRCODE_SCRATCH+2,AUTO

     1444    13729
     1445    13730        /**/
     1446    13731        /* Parameters */
     1447    13732        /**/
     1448    13733
     1449    13734    2   DCL BRK$ PTR;
     1450    13735    2   DCL ADR$ PTR;
     1451    13736
     1452    13737    2           BRK$ = ADDR(GD_DATA.MYSPACE(0));

  13737   1 0009D8  DC80 0000 0000  xsym                 LDB,B5   GD$DELTA_DATA$
          1 0009DB  CBC5 01AE                            LAB,B4   430,B5
          1 0009DD  BCC7 001A                            LDB,B3   @BRK$,AUTO
          1 0009DF  CF83                                 STB,B4   ,B3

     1453    13738    2           IF BRK$ = GD_DATA.GD.DYNSP$ THEN ALTRETURN;

  13738   1 0009E0  EC80 0000 0000  xsym                 LDB,B6   GD$DELTA_DATA$
          1 0009E3  CDC6 0156                            CMB,B4   342,B6
          1 0009E5  0981 0005                            BNE      s:13739,PREL

  13738   1 0009E7  ECC7 0018                            LDB,B6   ERRCODE_SCRATCH+2,AUTO
          1 0009E9  B806                                 LDR,R3   ,B6
          1 0009EA  C3B6                                 LNJ,B4   ,B6,R3

     1454    13739    3           DO WHILE BRK$ ~= ADDR(NIL);

  13739   1 0009EB  0F81 001D                            B        s:13747,PREL

     1455    13740    4              IF BRK$->BRKPNT.ADR$ = ADR$ THEN DO;

  13740   1 0009ED  ECC7 001A                            LDB,B6   @BRK$,AUTO
          1 0009EF  DC86                                 LDB,B5   ,B6
          1 0009F0  CCC5 0005                            LDB,B4   5,B5
PL6.E3A0      #005=GDB$FIRST_USER_TRAP File=GDB$BRKPNTS.:E05TSI                  TUE 07/29/97 21:24 Page:239  
          1 0009F2  BCC7 001C                            LDB,B3   @ADR$,AUTO
          1 0009F4  CD83                                 CMB,B4   ,B3
          1 0009F5  0981 0011                            BNE      s:13746,PREL

     1456    13741    4                 GD_DATA.GD.BRK$ = BRK$;

  13741   1 0009F7  AC80 0000 0000  xsym                 LDB,B2   GD$DELTA_DATA$
          1 0009FA  DFC2 0159                            STB,B5   345,B2

     1457    13742    4                 GD_DATA.GD.BRKNUM = BRK$->BRKPNT.BRKNUM;

  13742   1 0009FC  CC86                                 LDB,B4   ,B6
          1 0009FD  E844 0002                            LDR,R6   2,B4
          1 0009FF  EF42 0158                            STR,R6   344,B2

     1458    13743    4                 BRKNUM = GD_DATA.GD.BRKNUM;

  13743   1 000A01  EF47 0008                            STR,R6   BRKNUM,AUTO

     1459    13744    4                 RETURN;

  13744   1 000A03  ECC7 0018                            LDB,B6   ERRCODE_SCRATCH+2,AUTO
          1 000A05  C3C6 0001                            LNJ,B4   1,B6

     1460    13745    4                 END;
     1461    13746    3              ELSE BRK$ = BRK$->BRKPNT.FLINK$;

  13746   1 000A07  AC85                                 LDB,B2   ,B5
          1 000A08  AF86                                 STB,B2   ,B6

     1462    13747    3              END;

  13747   1 000A09  ECC7 001A                            LDB,B6   @BRK$,AUTO
          1 000A0B  8D86                                 CMN      ,B6
          1 000A0C  09E1                                 BNE      s:13740,SPREL

     1463    13748    2           ALTRETURN;
PL6.E3A0      #005=GDB$FIRST_USER_TRAP File=GDB$BRKPNTS.:E05TSI                  TUE 07/29/97 21:24 Page:240  

  13748   1 000A0D  ECC7 0018                            LDB,B6   ERRCODE_SCRATCH+2,AUTO
          1 000A0F  B806                                 LDR,R3   ,B6
          1 000A10  C3B6                                 LNJ,B4   ,B6,R3

     1464    13749
     1465    13750    2   END SRCHFORBRKPNT;
     1466    13751        %EJECT;
PL6.E3A0      #005=GDB$FIRST_USER_TRAP File=GDB$BRKPNTS.:E05TSI                  TUE 07/29/97 21:24 Page:241  
     1467    13752    1   CMPRIF: PROC(BRK$) ALTRET;

  13752   1 000A11  EFC7 0018            CMPRIF          STB,B6   ERRCODE_SCRATCH+2,AUTO

     1468    13753
     1469    13754        /**/
     1470    13755        /* Parameters */
     1471    13756        /**/
     1472    13757
     1473    13758    2   DCL BRK$ PTR;
     1474    13759
     1475    13760        /**/
     1476    13761        /* Arguments */
     1477    13762        /**/
     1478    13763
     1479    13764    2   DCL DESC$ PTR;
     1480    13765    2   DCL ADR$ PTR;
     1481    13766    2   DCL DD_ADDRESS UBIN (32);
     1482    13767    2   DCL DD_IS_PTR BIT(1) ALIGNED;
     1483    13768    2   DCL ARRAY_CUR UBIN;
     1484    13769    2   DCL ARRAY_HIGH UBIN;
     1485    13770    2   DCL ARRAY_FIRST BIT(1) ALIGNED;
     1486    13771    2   DCL DD_BITSIZE UBIN;
     1487    13772    2   DCL BITOFF UBIN;
     1488    13773    2   DCL DSIZE UBIN;
     1489    13774    2   DCL DD_SEG UBIN WORD;
     1490    13775    2   DCL DD_DESC# UBIN WORD;
     1491    13776    2   DCL DD_NOT_IS BIT(1) ALIGNED;
     1492    13777
     1493    13778        /**/
     1494    13779        /* Local Vars */
     1495    13780        /**/
     1496    13781
     1497    13782    2   DCL VALS SBIN(32);
     1498    13783    2   DCL VALS_(0:31) REDEF VALS BIT(1) UNAL;
     1499    13784    2   DCL VALU REDEF VALS UBIN(32);
     1500    13785    2   DCL VALP$ REDEF VALS PTR;
PL6.E3A0      #005=GDB$FIRST_USER_TRAP File=GDB$BRKPNTS.:E05TSI                  TUE 07/29/97 21:24 Page:242  
     1501    13786    2   DCL 1 VALP REDEF VALS,
     1502    13787    2         2 C BIT(1) UNAL,
     1503    13788    2         2 * BIT(11) UNAL,
     1504    13789    2         2 W UBIN(20) UNAL;
     1505    13790    2   DCL VALP_(0:31) REDEF VALS BIT(1) UNAL;
     1506    13791    2   DCL VALB(0:1) BIT(32);
     1507    13792    2   DCL VALB_(0:63) REDEF VALB BIT(1) UNAL;
     1508    13793    2   DCL VALC CHAR(63);
     1509    13794    2   DCL VALC_(0:62) REDEF VALC CHAR(1);
     1510    13795    2   DCL I UBIN;
     1511    13796    2   DCL CONSTPTR$ PTR;
     1512    13797    2   DCL 1 CONSTPTR REDEF CONSTPTR$,
     1513    13798    2         2 C BIT(1) UNAL,
     1514    13799    2         2 * BIT(11) UNAL,
     1515    13800    2         2 W BIT(20) UNAL;
     1516    13801
     1517    13802        /**/
     1518    13803        /* Based Vars */
     1519    13804        /**/
     1520    13805
     1521    13806    2   DCL 1 B$BYTES BASED CALIGNED,
     1522    13807    2         2 B(0:0) CHAR(1);
     1523    13808    2   DCL 1 B$BITS BASED ALIGNED,
     1524    13809    2         2 B(0:0) BIT(1) UNAL;
     1525    13810
     1526    13811    2           GD_DATA.MISC.DESC$ = BRK$->IFBRKPNT.IFCOND.DD$;

  13811   1 000A13  DCC7 001A                            LDB,B5   @BRK$,AUTO
          1 000A15  CC85                                 LDB,B4   ,B5
          1 000A16  BCC4 002E                            LDB,B3   46,B4
          1 000A18  AC80 0000 0000  xsym                 LDB,B2   GD$DELTA_DATA$
          1 000A1B  BFC2 0184                            STB,B3   388,B2

     1527    13812    2           ARRAY_FIRST = '0'B;

  13812   1 000A1D  8747 0025                            CL       ARRAY_FIRST,AUTO

PL6.E3A0      #005=GDB$FIRST_USER_TRAP File=GDB$BRKPNTS.:E05TSI                  TUE 07/29/97 21:24 Page:243  
     1528    13813    2           ARRAY_CUR = 0;

  13813   1 000A1F  8747 0023                            CL       ARRAY_CUR,AUTO

     1529    13814    2           ARRAY_HIGH = 0;

  13814   1 000A21  8747 0024                            CL       ARRAY_HIGH,AUTO

     1530    13815    2           SIZE = %GD#RSPBRKSIZ;

  13815   1 000A23  6C40                                 LDV,R6   64
          1 000A24  EF47 000F                            STR,R6   SIZE,AUTO

     1531    13816    2           CALL GDK$RESADDR (ARRAY_FIRST,ARRAY_CUR,ARRAY_HIGH,

  13816   1 000A26  CBC7 0022                            LAB,B4   DD_IS_PTR,AUTO
          1 000A28  CFC7 0068                            STB,B4   CONSTPTR$+21,AUTO
          1 000A2A  9BC7 002B                            LAB,B1   DD_NOT_IS,AUTO
          1 000A2C  9FC7 0066                            STB,B1   CONSTPTR$+19,AUTO
          1 000A2E  EBC7 0027                            LAB,B6   BITOFF,AUTO
          1 000A30  EFC7 0064                            STB,B6   CONSTPTR$+17,AUTO
          1 000A32  EBC7 0026                            LAB,B6   DD_BITSIZE,AUTO
          1 000A34  EFC7 0062                            STB,B6   CONSTPTR$+15,AUTO
          1 000A36  EBC7 0020                            LAB,B6   DD_ADDRESS,AUTO
          1 000A38  EFC7 0060                            STB,B6   CONSTPTR$+13,AUTO
          1 000A3A  EBC7 002A                            LAB,B6   DD_DESC#,AUTO
          1 000A3C  EFC7 005E                            STB,B6   CONSTPTR$+11,AUTO
          1 000A3E  EBC7 0029                            LAB,B6   DD_SEG,AUTO
          1 000A40  EFC7 005C                            STB,B6   CONSTPTR$+9,AUTO
          1 000A42  EBC7 0024                            LAB,B6   ARRAY_HIGH,AUTO
          1 000A44  EFC7 005A                            STB,B6   CONSTPTR$+7,AUTO
          1 000A46  EBC7 0023                            LAB,B6   ARRAY_CUR,AUTO
          1 000A48  EFC7 0058                            STB,B6   CONSTPTR$+5,AUTO
          1 000A4A  EBC7 0025                            LAB,B6   ARRAY_FIRST,AUTO
          1 000A4C  EFC7 0056                            STB,B6   CONSTPTR$+3,AUTO
          1 000A4E  BBC7 0056                            LAB,B3   CONSTPTR$+3,AUTO
          1 000A50  CBF0 0A00                            LAB,B4   2560,IMO
PL6.E3A0      #005=GDB$FIRST_USER_TRAP File=GDB$BRKPNTS.:E05TSI                  TUE 07/29/97 21:24 Page:244  
          1 000A52  E380 0000 0000  xent                 LNJ,B6   GDK$RESADDR
          1 000A55       0003                            DC       s:13819,PREL
          1 000A56  0F81 0019                            B        s:13822,PREL

     1532    13817    2              DD_SEG,DD_DESC#,DD_ADDRESS,DD_BITSIZE,
     1533    13818    3              BITOFF,DD_NOT_IS,DD_IS_PTR) WHENALTRETURN DO;

     1534    13819    3              CALL GDI$SEND_ERROR_RESPONSE(SIZE,MSGBFR,%GD#RSPBADADR);

  13819   1 000A58  EBF0 0037                            LAB,B6   55,IMO
          1 000A5A  EFC7 005A                            STB,B6   CONSTPTR$+7,AUTO
          1 000A5C  DCC7 000B                            LDB,B5   MSG$,AUTO
          1 000A5E  DFC7 0058                            STB,B5   CONSTPTR$+5,AUTO
          1 000A60  CBC7 000F                            LAB,B4   SIZE,AUTO
          1 000A62  CFC7 0056                            STB,B4   CONSTPTR$+3,AUTO
          1 000A64  BBC7 0056                            LAB,B3   CONSTPTR$+3,AUTO
          1 000A66  CBF0 0300                            LAB,B4   768,IMO
          1 000A68  E380 0000 0000  xent                 LNJ,B6   GDI$SEND_ERROR_RESPONSE
          1 000A6B       0001                            DC       s:13820,PREL

     1535    13820    3              RETURN;

  13820   1 000A6C  ECC7 0018                            LDB,B6   ERRCODE_SCRATCH+2,AUTO
          1 000A6E  C3C6 0001                            LNJ,B4   1,B6

     1536    13821    3              END /* WHENALTRETURN */;
     1537    13822    2           CALL GDK$MPTR (ADR$,DD_ADDRESS,DD_SEG,DD_DESC#,DD_NOT_IS,

  13822   1 000A70  EBC7 0028                            LAB,B6   DSIZE,AUTO
          1 000A72  EFC7 0062                            STB,B6   CONSTPTR$+15,AUTO
          1 000A74  DBC7 0022                            LAB,B5   DD_IS_PTR,AUTO
          1 000A76  DFC7 0060                            STB,B5   CONSTPTR$+13,AUTO
          1 000A78  CBC7 002B                            LAB,B4   DD_NOT_IS,AUTO
          1 000A7A  CFC7 005E                            STB,B4   CONSTPTR$+11,AUTO
          1 000A7C  BBC7 002A                            LAB,B3   DD_DESC#,AUTO
          1 000A7E  BFC7 005C                            STB,B3   CONSTPTR$+9,AUTO
          1 000A80  ABC7 0029                            LAB,B2   DD_SEG,AUTO
PL6.E3A0      #005=GDB$FIRST_USER_TRAP File=GDB$BRKPNTS.:E05TSI                  TUE 07/29/97 21:24 Page:245  
          1 000A82  AFC7 005A                            STB,B2   CONSTPTR$+7,AUTO
          1 000A84  9BC7 0020                            LAB,B1   DD_ADDRESS,AUTO
          1 000A86  9FC7 0058                            STB,B1   CONSTPTR$+5,AUTO
          1 000A88  EBC7 001E                            LAB,B6   ADR$,AUTO
          1 000A8A  EFC7 0056                            STB,B6   CONSTPTR$+3,AUTO
          1 000A8C  BBC7 0056                            LAB,B3   CONSTPTR$+3,AUTO
          1 000A8E  CBF0 0700                            LAB,B4   1792,IMO
          1 000A90  E380 0000 0000  xent                 LNJ,B6   GDK$MPTR
          1 000A93       0001                            DC       s:13824,PREL

     1538    13823    2                          DD_IS_PTR,DSIZE);
     1539    13824    3           CALL GDU$SETUP_WINDOW_USER(ADR$,GD_DATA.GD.USERNO) WHENALTRETURN DO;

  13824   1 000A94  EC80 0000 0000  xsym                 LDB,B6   GD$DELTA_DATA$
          1 000A97  DBC6 016B                            LAB,B5   363,B6
          1 000A99  DFC7 0058                            STB,B5   CONSTPTR$+5,AUTO
          1 000A9B  CBC7 001E                            LAB,B4   ADR$,AUTO
          1 000A9D  CFC7 0056                            STB,B4   CONSTPTR$+3,AUTO
          1 000A9F  BBC7 0056                            LAB,B3   CONSTPTR$+3,AUTO
          1 000AA1  CBF0 0200                            LAB,B4   512,IMO
          1 000AA3  E380 0000 0000  xent                 LNJ,B6   GDU$SETUP_WINDOW_USER
          1 000AA6       0003                            DC       s:13825,PREL
          1 000AA7  0F81 000C                            B        s:13830,PREL

     1540    13825    3              IF ADDR(GD_DATA.GD.VLD)->GH_VLD.STATUS < 0 THEN RETURN;

  13825   1 000AA9  EC80 0000 0000  xsym                 LDB,B6   GD$DELTA_DATA$
          1 000AAC  E846 0173                            LDR,R6   371,B6
          1 000AAE  6881 0005                            BGEZ,R6  s:13830,PREL

  13825   1 000AB0  ECC7 0018                            LDB,B6   ERRCODE_SCRATCH+2,AUTO
          1 000AB2  C3C6 0001                            LNJ,B4   1,B6

     1541    13826    3              END;
     1542    13827
     1543    13828        /* Put value where it can be easily?? used later */
     1544    13829
PL6.E3A0      #005=GDB$FIRST_USER_TRAP File=GDB$BRKPNTS.:E05TSI                  TUE 07/29/97 21:24 Page:246  
     1545    13830    3           DO CASE(BRK$->IFBRKPNT.IFCOND.CTYPE);

  13830   1 000AB4  ECC7 001A                            LDB,B6   @BRK$,AUTO
          1 000AB6  DC86                                 LDB,B5   ,B6
          1 000AB7  B845 000B                            LDR,R3   11,B5
          1 000AB9  3D06                                 CMV,R3   6
          1 000ABA  0281 00EE                            BGE      s:13860,PREL
          1 000ABC  A830 0000 0AC2  01                   LDR,R2   s:13830+14,R3
          1 000ABF  83A0 0000 0AC8  01                   JMP      s:13832,R2
          1 000AC2       00E1                            DC       s:13860,PREL
          1 000AC3       0033                            DC       s:13838,PREL
          1 000AC4       0073                            DC       s:13847,PREL
          1 000AC5       0000                            DC       s:13832,PREL
          1 000AC6       00A0                            DC       s:13852,PREL
          1 000AC7       0068                            DC       s:13844,PREL

     1546    13831    3              CASE(3); /* VALUE */

     1547    13832    3                 IF DD_BITSIZE > 32 THEN RETURN;

  13832   1 000AC8  E847 0026                            LDR,R6   DD_BITSIZE,AUTO
          1 000ACA  6D20                                 CMV,R6   32
          1 000ACB  0381 0005                            BLE      s:13833,PREL

  13832   1 000ACD  ECC7 0018                            LDB,B6   ERRCODE_SCRATCH+2,AUTO
          1 000ACF  C3C6 0001                            LNJ,B4   1,B6

     1548    13833    3                 VALS = 0;

  13833   1 000AD1  8747 002C                            CL       VALS,AUTO
          1 000AD3  8747 002D                            CL       VALS+1,AUTO

     1549    13834    4                 DO I = BITOFF TO BITOFF + DD_BITSIZE - 1;

  13834   1 000AD5  D847 0027                            LDR,R5   BITOFF,AUTO
          1 000AD7  DF47 0052                            STR,R5   I,AUTO
          1 000AD9  0F81 0018                            B        s:13836+2,PREL
PL6.E3A0      #005=GDB$FIRST_USER_TRAP File=GDB$BRKPNTS.:E05TSI                  TUE 07/29/97 21:24 Page:247  

     1550    13835    4                    VALS_(I-BITOFF+32-DD_BITSIZE) = ADR$->B$BITS.B(I);

  13835   1 000ADB  E847 0052                            LDR,R6   I,AUTO
          1 000ADD  E247 0027                            SUB,R6   BITOFF,AUTO
          1 000ADF  E247 0026                            SUB,R6   DD_BITSIZE,AUTO
          1 000AE1  EF47 0056                            STR,R6   CONSTPTR$+3,AUTO
          1 000AE3  ACC7 001E                            LDB,B2   ADR$,AUTO
          1 000AE5  A847 0052                            LDR,R2   I,AUTO
          1 000AE7  6C01                                 LDV,R6   1
          1 000AE8  BBC7 002E                            LAB,B3   VALB,AUTO
          1 000AEA  B847 0056                            LDR,R3   CONSTPTR$+3,AUTO
          1 000AEC  7C01                                 LDV,R7   1
          1 000AED  D380 0000 0000  xent                 LNJ,B5   X6B_BLR

     1551    13836    4                    END;

  13836   1 000AF0  8AC7 0052                            INC      I,AUTO
          1 000AF2  E847 0027                            LDR,R6   BITOFF,AUTO
          1 000AF4  EA47 0026                            ADD,R6   DD_BITSIZE,AUTO
          1 000AF6  E947 0052                            CMR,R6   I,AUTO
          1 000AF8  0363                                 BG       s:13835,SPREL
          1 000AF9  0F81 00B3                            B        s:13865,PREL

     1552    13837    3              CASE(1); /* CHAR */

     1553    13838    3                 IF DD_BITSIZE/8 > 63 THEN RETURN;

  13838   1 000AFB  E847 0026                            LDR,R6   DD_BITSIZE,AUTO
          1 000AFD  6043                                 SOR,R6   3
          1 000AFE  6D3F                                 CMV,R6   63
          1 000AFF  0381 0005                            BLE      s:13839,PREL

  13838   1 000B01  ECC7 0018                            LDB,B6   ERRCODE_SCRATCH+2,AUTO
          1 000B03  C3C6 0001                            LNJ,B4   1,B6

     1554    13839    3                 VALC = ' ';
PL6.E3A0      #005=GDB$FIRST_USER_TRAP File=GDB$BRKPNTS.:E05TSI                  TUE 07/29/97 21:24 Page:248  

  13839   1 000B05  D870 203F                            LDR,R5   8255,IMO
          1 000B07  0021                                 ALR      ;
          1 000B08       4178 2000                                ALPHANUM('2000'X,IMO,,1),;
          1 000B0A       4007 0032                                ALPHANUM(VALC,AUTO,,R5,FILL)

     1555    13840    4                 DO I = (BITOFF/8) TO (DD_BITSIZE/8 + BITOFF/8 - 1);

  13840   1 000B0C  E847 0027                            LDR,R6   BITOFF,AUTO
          1 000B0E  6043                                 SOR,R6   3
          1 000B0F  437F                                 CSYNC    s:13840+2,SPREL
          1 000B10  EF47 0052                            STR,R6   I,AUTO
          1 000B12  0F81 0011                            B        s:13842+2,PREL

     1556    13841    4                    VALC_(I-BITOFF/8) = ADR$->B$BYTES.B(I);

  13841   1 000B14  E847 0027                            LDR,R6   BITOFF,AUTO
          1 000B16  6043                                 SOR,R6   3
          1 000B17  E247 0052                            SUB,R6   I,AUTO
          1 000B19  ECC7 001E                            LDB,B6   ADR$,AUTO
          1 000B1B  B847 0052                            LDR,R3   I,AUTO
          1 000B1D  D0B6                                 LDH,R5   ,B6,R3
          1 000B1E  A856                                 LDR,R2   R6
          1 000B1F  8252                                 NEG      R2
          1 000B20  2E64                                 ADV,R2   100
          1 000B21  D7A7                                 STH,R5   ,AUTO,R2

     1557    13842    4                    END;

  13842   1 000B22  8AC7 0052                            INC      I,AUTO
          1 000B24  E847 0026                            LDR,R6   DD_BITSIZE,AUTO
          1 000B26  6043                                 SOR,R6   3
          1 000B27  D847 0027                            LDR,R5   BITOFF,AUTO
          1 000B29  5043                                 SOR,R5   3
          1 000B2A  EA55                                 ADD,R6   R5
          1 000B2B  E947 0052                            CMR,R6   I,AUTO
          1 000B2D  0367                                 BG       s:13841,SPREL
PL6.E3A0      #005=GDB$FIRST_USER_TRAP File=GDB$BRKPNTS.:E05TSI                  TUE 07/29/97 21:24 Page:249  
          1 000B2E  0F81 007E                            B        s:13865,PREL

     1558    13843    3              CASE(5); /* DECVALUE */

     1559    13844    3                 VALB = '0'B;

  13844   1 000B30  5C08                                 LDV,R5   8
          1 000B31  0021                                 ALR      ;
          1 000B32       4178 0000                                ALPHANUM('0000'X,IMO,,1),;
          1 000B34       4007 002E                                ALPHANUM(VALB,AUTO,,R5,FILL)

     1560    13845    3                 RETURN;

  13845   1 000B36  ECC7 0018                            LDB,B6   ERRCODE_SCRATCH+2,AUTO
          1 000B38  437F                                 CSYNC    s:13845+1,SPREL
          1 000B39  C3C6 0001                            LNJ,B4   1,B6

     1561    13846    3              CASE(2); /* BIT */

     1562    13847    3                 IF DD_BITSIZE > 64 THEN RETURN;

  13847   1 000B3B  E847 0026                            LDR,R6   DD_BITSIZE,AUTO
          1 000B3D  6D40                                 CMV,R6   64
          1 000B3E  0381 0005                            BLE      s:13848,PREL

  13847   1 000B40  ECC7 0018                            LDB,B6   ERRCODE_SCRATCH+2,AUTO
          1 000B42  C3C6 0001                            LNJ,B4   1,B6

     1563    13848    4                 ELSE DO I = BITOFF TO DD_BITSIZE + BITOFF - 1;

  13848   1 000B44  D847 0027                            LDR,R5   BITOFF,AUTO
          1 000B46  DF47 0052                            STR,R5   I,AUTO
          1 000B48  0F81 0016                            B        s:13850+2,PREL

     1564    13849    4                    VALB_(I-BITOFF) = ADR$->B$BITS.B(I);

  13849   1 000B4A  E847 0052                            LDR,R6   I,AUTO
PL6.E3A0      #005=GDB$FIRST_USER_TRAP File=GDB$BRKPNTS.:E05TSI                  TUE 07/29/97 21:24 Page:250  
          1 000B4C  E247 0027                            SUB,R6   BITOFF,AUTO
          1 000B4E  EF47 0056                            STR,R6   CONSTPTR$+3,AUTO
          1 000B50  ACC7 001E                            LDB,B2   ADR$,AUTO
          1 000B52  A847 0052                            LDR,R2   I,AUTO
          1 000B54  6C01                                 LDV,R6   1
          1 000B55  BBC7 002E                            LAB,B3   VALB,AUTO
          1 000B57  B847 0056                            LDR,R3   CONSTPTR$+3,AUTO
          1 000B59  7C01                                 LDV,R7   1
          1 000B5A  D380 0000 0000  xent                 LNJ,B5   X6B_BLR

     1565    13850    4                    END;

  13850   1 000B5D  8AC7 0052                            INC      I,AUTO
          1 000B5F  E847 0026                            LDR,R6   DD_BITSIZE,AUTO
          1 000B61  EA47 0027                            ADD,R6   BITOFF,AUTO
          1 000B63  E947 0052                            CMR,R6   I,AUTO
          1 000B65  0365                                 BG       s:13849,SPREL
          1 000B66  0F81 0046                            B        s:13865,PREL

     1566    13851    3              CASE(4); /* PTR */

     1567    13852    3                 CONSTPTR$ = ADDR(NIL);

  13852   1 000B68  CB80 0000 0000                       LAB,B4   0
          1 000B6B  CFC7 0053                            STB,B4   CONSTPTR$,AUTO

     1568    13853    3                 CONSTPTR.C = BRK$->IFBRKPNT.IFCOND.CONS$TANT.PNTR.C;

  13853   1 000B6D  E845 000F                            LDR,R6   15,B5
          1 000B6F  600F                                 SOL,R6   15
          1 000B70  EAC7 0053                            SRM,R6,'8000'X    CONSTPTR$,AUTO
          1 000B72       8000

     1569    13854    3                 CONSTPTR.W = BRK$->IFBRKPNT.IFCOND.CONS$TANT.PNTR.W;

  13854   1 000B73  DFC7 0056                            STB,B5   CONSTPTR$+3,AUTO
          1 000B75  ABC5 000E                            LAB,B2   14,B5
PL6.E3A0      #005=GDB$FIRST_USER_TRAP File=GDB$BRKPNTS.:E05TSI                  TUE 07/29/97 21:24 Page:251  
          1 000B77  2C0B                                 LDV,R2   11
          1 000B78  6C14                                 LDV,R6   20
          1 000B79  BBC7 0053                            LAB,B3   CONSTPTR$,AUTO
          1 000B7B  3C0C                                 LDV,R3   12
          1 000B7C  7C14                                 LDV,R7   20
          1 000B7D  D380 0000 0000  xent                 LNJ,B5   X6B_BLR

     1570    13855    3                 VALP$ = ADDR(NIL);

  13855   1 000B80  EB80 0000 0000                       LAB,B6   0
          1 000B83  EFC7 002C                            STB,B6   VALS,AUTO

     1571    13856    4                 DO I = BITOFF TO DD_BITSIZE + BITOFF - 1;

  13856   1 000B85  E847 0027                            LDR,R6   BITOFF,AUTO
          1 000B87  EF47 0052                            STR,R6   I,AUTO
          1 000B89  0F81 0016                            B        s:13858+2,PREL

     1572    13857    4                    VALP_(I-BITOFF) = ADR$->B$BITS.B(I);

  13857   1 000B8B  E847 0052                            LDR,R6   I,AUTO
          1 000B8D  E247 0027                            SUB,R6   BITOFF,AUTO
          1 000B8F  EF47 0056                            STR,R6   CONSTPTR$+3,AUTO
          1 000B91  ACC7 001E                            LDB,B2   ADR$,AUTO
          1 000B93  A847 0052                            LDR,R2   I,AUTO
          1 000B95  6C01                                 LDV,R6   1
          1 000B96  BBC7 002C                            LAB,B3   VALS,AUTO
          1 000B98  B847 0056                            LDR,R3   CONSTPTR$+3,AUTO
          1 000B9A  7C01                                 LDV,R7   1
          1 000B9B  D380 0000 0000  xent                 LNJ,B5   X6B_BLR

     1573    13858    4                    END;

  13858   1 000B9E  8AC7 0052                            INC      I,AUTO
          1 000BA0  E847 0026                            LDR,R6   DD_BITSIZE,AUTO
          1 000BA2  EA47 0027                            ADD,R6   BITOFF,AUTO
          1 000BA4  E947 0052                            CMR,R6   I,AUTO
PL6.E3A0      #005=GDB$FIRST_USER_TRAP File=GDB$BRKPNTS.:E05TSI                  TUE 07/29/97 21:24 Page:252  
          1 000BA6  0365                                 BG       s:13857,SPREL
          1 000BA7  0F81 0005                            B        s:13865,PREL

     1574    13859    3              CASE(ELSE);

     1575    13860    3                 RETURN;

  13860   1 000BA9  ECC7 0018                            LDB,B6   ERRCODE_SCRATCH+2,AUTO
          1 000BAB  C3C6 0001                            LNJ,B4   1,B6

     1576    13861    3              END /* CASE */;

     1577    13862
     1578    13863        /* Do the comparison */
     1579    13864
     1580    13865    3           DO CASE(BRK$->IFBRKPNT.IFCOND.CTYPE);

  13865   1 000BAD  ECC7 001A                            LDB,B6   @BRK$,AUTO
          1 000BAF  DC86                                 LDB,B5   ,B6
          1 000BB0  B845 000B                            LDR,R3   11,B5
          1 000BB2  3D05                                 CMV,R3   5
          1 000BB3  0281 01BC                            BGE      s:13938,PREL
          1 000BB5  A830 0000 0BBB  01                   LDR,R2   s:13865+14,R3
          1 000BB8  83A0 0000 0BC0  01                   JMP      s:13867,R2
          1 000BBB       01B0                            DC       s:13938,PREL
          1 000BBC       0000                            DC       s:13867,PREL
          1 000BBD       004C                            DC       s:13883,PREL
          1 000BBE       0152                            DC       s:13921,PREL
          1 000BBF       00A6                            DC       s:13898,PREL

     1581    13866    3              CASE(1); /* CHAR */

     1582    13867    4                 IF BRK$->IFBRKPNT.IFCOND.COND = 6 /* EQUALS */ THEN DO;

  13867   1 000BC0  E845 000C                            LDR,R6   12,B5
          1 000BC2  6D06                                 CMV,R6   6
          1 000BC3  0981 0021                            BNE      s:13874,PREL
PL6.E3A0      #005=GDB$FIRST_USER_TRAP File=GDB$BRKPNTS.:E05TSI                  TUE 07/29/97 21:24 Page:253  

     1583    13868    5                    DO I = 0 TO BRK$->IFBRKPNT.IFCOND.CONS$TANT.SIZE - 1;

  13868   1 000BC5  8747 0052                            CL       I,AUTO
          1 000BC7  0F81 0014                            B        s:13871+2,PREL

     1584    13869    5                       IF VALC_(I) = BRK$->IFBRKPNT.IFCOND.CONS$TANT.TEXT.CHR(I) THEN;

  13869   1 000BC9  ECC7 001A                            LDB,B6   @BRK$,AUTO
          1 000BCB  DC86                                 LDB,B5   ,B6
          1 000BCC  B847 0052                            LDR,R3   I,AUTO
          1 000BCE  3E64                                 ADV,R3   100
          1 000BCF  E0B7                                 LDH,R6   ,AUTO,R3
          1 000BD0  A847 0052                            LDR,R2   I,AUTO
          1 000BD2  2E1B                                 ADV,R2   27
          1 000BD3  E1A5                                 CMH,R6   ,B5,R2
          1 000BD4  0901 0005                            BE       s:13871,PREL

     1585    13870    5                       ELSE ALTRETURN;

  13870   1 000BD6  ECC7 0018                            LDB,B6   ERRCODE_SCRATCH+2,AUTO
          1 000BD8  9806                                 LDR,R1   ,B6
          1 000BD9  C396                                 LNJ,B4   ,B6,R1

     1586    13871    5                       END;

  13871   1 000BDA  8AC7 0052                            INC      I,AUTO
          1 000BDC  E2C5 000D                            LLH,R6   13,B5
          1 000BDE  E947 0052                            CMR,R6   I,AUTO
          1 000BE0  0369                                 BG       s:13869,SPREL

     1587    13872    4                     RETURN;

  13872   1 000BE1  ECC7 0018                            LDB,B6   ERRCODE_SCRATCH+2,AUTO
          1 000BE3  C3C6 0001                            LNJ,B4   1,B6

     1588    13873    4                     END;
PL6.E3A0      #005=GDB$FIRST_USER_TRAP File=GDB$BRKPNTS.:E05TSI                  TUE 07/29/97 21:24 Page:254  
     1589    13874    4                 ELSE IF BRK$->IFBRKPNT.IFCOND.CTYPE = 5 /* ~EQUAL */ THEN DO;

  13874   1 000BE5  3D05                                 CMV,R3   5
          1 000BE6  0981 0021                            BNE      s:13881,PREL

     1590    13875    5                    DO I = 0 TO BRK$->IFBRKPNT.IFCOND.CONS$TANT.SIZE - 1;

  13875   1 000BE8  8747 0052                            CL       I,AUTO
          1 000BEA  0F81 0014                            B        s:13878+2,PREL

     1591    13876    5                       IF VALC_(I) ~= BRK$->IFBRKPNT.IFCOND.CONS$TANT.TEXT.CHR(I) THEN

  13876   1 000BEC  ECC7 001A                            LDB,B6   @BRK$,AUTO
          1 000BEE  DC86                                 LDB,B5   ,B6
          1 000BEF  B847 0052                            LDR,R3   I,AUTO
          1 000BF1  3E64                                 ADV,R3   100
          1 000BF2  E0B7                                 LDH,R6   ,AUTO,R3
          1 000BF3  A847 0052                            LDR,R2   I,AUTO
          1 000BF5  2E1B                                 ADV,R2   27
          1 000BF6  E1A5                                 CMH,R6   ,B5,R2
          1 000BF7  0901 0005                            BE       s:13878,PREL

     1592    13877    5                          RETURN;

  13877   1 000BF9  ECC7 0018                            LDB,B6   ERRCODE_SCRATCH+2,AUTO
          1 000BFB  C3C6 0001                            LNJ,B4   1,B6

     1593    13878    5                       END;

  13878   1 000BFD  8AC7 0052                            INC      I,AUTO
          1 000BFF  E2C5 000D                            LLH,R6   13,B5
          1 000C01  E947 0052                            CMR,R6   I,AUTO
          1 000C03  0369                                 BG       s:13876,SPREL

     1594    13879    4                    ALTRETURN;

  13879   1 000C04  ECC7 0018                            LDB,B6   ERRCODE_SCRATCH+2,AUTO
PL6.E3A0      #005=GDB$FIRST_USER_TRAP File=GDB$BRKPNTS.:E05TSI                  TUE 07/29/97 21:24 Page:255  
          1 000C06  B806                                 LDR,R3   ,B6
          1 000C07  C3B6                                 LNJ,B4   ,B6,R3

     1595    13880    4                    END;
     1596    13881    3                 ELSE RETURN;

  13881   1 000C08  ECC7 0018                            LDB,B6   ERRCODE_SCRATCH+2,AUTO
          1 000C0A  C3C6 0001                            LNJ,B4   1,B6

     1597    13882    3              CASE(2); /* BIT */

     1598    13883    4                 IF BRK$->IFBRKPNT.IFCOND.COND = 6 /* EQUALS */ THEN DO;

  13883   1 000C0C  E845 000C                            LDR,R6   12,B5
          1 000C0E  6D06                                 CMV,R6   6
          1 000C0F  0981 002A                            BNE      s:13890,PREL

     1599    13884    5                    DO I = 0 TO BRK$->IFBRKPNT.IFCOND.CONS$TANT.SIZE - 1;

  13884   1 000C11  8747 0052                            CL       I,AUTO
          1 000C13  0F81 001A                            B        s:13887+2,PREL

     1600    13885    5                      IF VALB_(I) = BRK$->IFBRKPNT.IFCOND.CONS$TANT.BITS.TRING(I) THEN
             13885                                ;

  13885   1 000C15  ECC7 001A                            LDB,B6   @BRK$,AUTO
          1 000C17  DC86                                 LDB,B5   ,B6
          1 000C18  DFC7 0056                            STB,B5   CONSTPTR$+3,AUTO
          1 000C1A  ABC7 002E                            LAB,B2   VALB,AUTO
          1 000C1C  A847 0052                            LDR,R2   I,AUTO
          1 000C1E  6C01                                 LDV,R6   1
          1 000C1F  BBC5 000E                            LAB,B3   14,B5
          1 000C21  B852                                 LDR,R3   R2
          1 000C22  7C01                                 LDV,R7   1
          1 000C23  D380 0000 0000  xent                 LNJ,B5   X6B_BCM
          1 000C26  0901 0005                            BE       s:13887,PREL

PL6.E3A0      #005=GDB$FIRST_USER_TRAP File=GDB$BRKPNTS.:E05TSI                  TUE 07/29/97 21:24 Page:256  
     1601    13886    5                       ELSE ALTRETURN;

  13886   1 000C28  ECC7 0018                            LDB,B6   ERRCODE_SCRATCH+2,AUTO
          1 000C2A  B806                                 LDR,R3   ,B6
          1 000C2B  C3B6                                 LNJ,B4   ,B6,R3

     1602    13887    5                       END;

  13887   1 000C2C  8AC7 0052                            INC      I,AUTO
          1 000C2E  ECC7 001A                            LDB,B6   @BRK$,AUTO
          1 000C30  DC86                                 LDB,B5   ,B6
          1 000C31  E2C5 000D                            LLH,R6   13,B5
          1 000C33  E947 0052                            CMR,R6   I,AUTO
          1 000C35  0360                                 BG       s:13885,SPREL

     1603    13888    4                     RETURN;

  13888   1 000C36  ECC7 0018                            LDB,B6   ERRCODE_SCRATCH+2,AUTO
          1 000C38  C3C6 0001                            LNJ,B4   1,B6

     1604    13889    4                     END;
     1605    13890    4                 ELSE IF BRK$->IFBRKPNT.IFCOND.COND = 5 /* ~EQUAL */ THEN DO;

  13890   1 000C3A  6D05                                 CMV,R6   5
          1 000C3B  0981 0138                            BNE      s:13941,PREL

     1606    13891    5                    DO I = 0 TO BRK$->IFBRKPNT.IFCOND.CONS$TANT.SIZE - 1;

  13891   1 000C3D  8747 0052                            CL       I,AUTO
          1 000C3F  0F81 001A                            B        s:13894+2,PREL

     1607    13892    5                       IF VALB_(I) ~= BRK$->IFBRKPNT.IFCOND.CONS$TANT.BITS.TRING(I)
             13892                                THEN

  13892   1 000C41  ECC7 001A                            LDB,B6   @BRK$,AUTO
          1 000C43  DC86                                 LDB,B5   ,B6
          1 000C44  DFC7 0056                            STB,B5   CONSTPTR$+3,AUTO
PL6.E3A0      #005=GDB$FIRST_USER_TRAP File=GDB$BRKPNTS.:E05TSI                  TUE 07/29/97 21:24 Page:257  
          1 000C46  ABC7 002E                            LAB,B2   VALB,AUTO
          1 000C48  A847 0052                            LDR,R2   I,AUTO
          1 000C4A  6C01                                 LDV,R6   1
          1 000C4B  BBC5 000E                            LAB,B3   14,B5
          1 000C4D  B852                                 LDR,R3   R2
          1 000C4E  7C01                                 LDV,R7   1
          1 000C4F  D380 0000 0000  xent                 LNJ,B5   X6B_BCM
          1 000C52  0901 0005                            BE       s:13894,PREL

     1608    13893    5                          RETURN;

  13893   1 000C54  ECC7 0018                            LDB,B6   ERRCODE_SCRATCH+2,AUTO
          1 000C56  C3C6 0001                            LNJ,B4   1,B6

     1609    13894    5                       END;

  13894   1 000C58  8AC7 0052                            INC      I,AUTO
          1 000C5A  ECC7 001A                            LDB,B6   @BRK$,AUTO
          1 000C5C  DC86                                 LDB,B5   ,B6
          1 000C5D  E2C5 000D                            LLH,R6   13,B5
          1 000C5F  E947 0052                            CMR,R6   I,AUTO
          1 000C61  0360                                 BG       s:13892,SPREL

     1610    13895    4                    ALTRETURN;

  13895   1 000C62  ECC7 0018                            LDB,B6   ERRCODE_SCRATCH+2,AUTO
          1 000C64  B806                                 LDR,R3   ,B6
          1 000C65  C3B6                                 LNJ,B4   ,B6,R3

     1611    13896    4                    END;
     1612    13897    3              CASE(4); /* PTR */

     1613    13898    4                 DO CASE(BRK$->IFBRKPNT.IFCOND.COND);

  13898   1 000C66  9845 000C                            LDR,R1   12,B5
          1 000C68  1D07                                 CMV,R1   7
          1 000C69  0281 00A4                            BGE      s:13918,PREL
PL6.E3A0      #005=GDB$FIRST_USER_TRAP File=GDB$BRKPNTS.:E05TSI                  TUE 07/29/97 21:24 Page:258  
          1 000C6B  B810 0000 0C71  01                   LDR,R3   s:13898+11,R1
          1 000C6E  83B0 0000 0C78  01                   JMP      s:13900,R3
          1 000C71       0096                            DC       s:13918,PREL
          1 000C72       0032                            DC       s:13906,PREL
          1 000C73       004D                            DC       s:13909,PREL
          1 000C74       0064                            DC       s:13912,PREL
          1 000C75       007B                            DC       s:13915,PREL
          1 000C76       0019                            DC       s:13903,PREL
          1 000C77       0000                            DC       s:13900,PREL

     1614    13899    4                    CASE(6); /* EQUALS */

     1615    13900    4                       IF POFFC(CONSTPTR$,VALP$) = 0 THEN RETURN;

  13900   1 000C78  8CC7 002C                            LDI      VALS,AUTO
          1 000C7A  7031                                 DCL,R7   1
          1 000C7B  8D47 0056                            SDI      CONSTPTR$+3,AUTO
          1 000C7D  8CC7 0053                            LDI      CONSTPTR$,AUTO
          1 000C7F  7031                                 DCL,R7   1
          1 000C80  84C7 0056                            SID      CONSTPTR$+3,AUTO
          1 000C82  84F0 0000 0000                       SID      0,IMO
          1 000C85  6981 0007                            BNEZ,R6  s:13901,PREL
          1 000C87  7981 0005                            BNEZ,R7  s:13901,PREL

  13900   1 000C89  ECC7 0018                            LDB,B6   ERRCODE_SCRATCH+2,AUTO
          1 000C8B  C3C6 0001                            LNJ,B4   1,B6

     1616    13901    4                       ELSE ALTRETURN;

  13901   1 000C8D  ECC7 0018                            LDB,B6   ERRCODE_SCRATCH+2,AUTO
          1 000C8F  B806                                 LDR,R3   ,B6
          1 000C90  C3B6                                 LNJ,B4   ,B6,R3

     1617    13902    4                    CASE(5); /* ~EQUAL */

     1618    13903    4                       IF POFFC(CONSTPTR$,VALP$) ~= 0 THEN RETURN;

PL6.E3A0      #005=GDB$FIRST_USER_TRAP File=GDB$BRKPNTS.:E05TSI                  TUE 07/29/97 21:24 Page:259  
  13903   1 000C91  8CC7 002C                            LDI      VALS,AUTO
          1 000C93  7031                                 DCL,R7   1
          1 000C94  8D47 0056                            SDI      CONSTPTR$+3,AUTO
          1 000C96  8CC7 0053                            LDI      CONSTPTR$,AUTO
          1 000C98  7031                                 DCL,R7   1
          1 000C99  84C7 0056                            SID      CONSTPTR$+3,AUTO
          1 000C9B  84F0 0000 0000                       SID      0,IMO
          1 000C9E  6981 0003                            BNEZ,R6  s:13903+17,PREL
          1 000CA0  7901 0005                            BEZ,R7   s:13904,PREL

  13903   1 000CA2  ECC7 0018                            LDB,B6   ERRCODE_SCRATCH+2,AUTO
          1 000CA4  C3C6 0001                            LNJ,B4   1,B6

     1619    13904    4                       ELSE ALTRETURN;

  13904   1 000CA6  ECC7 0018                            LDB,B6   ERRCODE_SCRATCH+2,AUTO
          1 000CA8  B806                                 LDR,R3   ,B6
          1 000CA9  C3B6                                 LNJ,B4   ,B6,R3

     1620    13905    4                    CASE(1); /* > */

     1621    13906    4                       IF POFFC(VALP$,CONSTPTR$) > 0 THEN RETURN;

  13906   1 000CAA  8CC7 0053                            LDI      CONSTPTR$,AUTO
          1 000CAC  7031                                 DCL,R7   1
          1 000CAD  8D47 0056                            SDI      CONSTPTR$+3,AUTO
          1 000CAF  8CC7 002C                            LDI      VALS,AUTO
          1 000CB1  7031                                 DCL,R7   1
          1 000CB2  84C7 0056                            SID      CONSTPTR$+3,AUTO
          1 000CB4  84F0 0000 0000                       SID      0,IMO
          1 000CB7  6801 0009                            BLZ,R6   s:13907,PREL
          1 000CB9  6A01 0003                            BGZ,R6   s:13906+19,PREL
          1 000CBB  7901 0005                            BEZ,R7   s:13907,PREL

  13906   1 000CBD  ECC7 0018                            LDB,B6   ERRCODE_SCRATCH+2,AUTO
          1 000CBF  C3C6 0001                            LNJ,B4   1,B6

PL6.E3A0      #005=GDB$FIRST_USER_TRAP File=GDB$BRKPNTS.:E05TSI                  TUE 07/29/97 21:24 Page:260  
     1622    13907    4                       ELSE ALTRETURN;

  13907   1 000CC1  ECC7 0018                            LDB,B6   ERRCODE_SCRATCH+2,AUTO
          1 000CC3  B806                                 LDR,R3   ,B6
          1 000CC4  C3B6                                 LNJ,B4   ,B6,R3

     1623    13908    4                    CASE(2); /* < */

     1624    13909    4                       IF POFFC(VALP$,CONSTPTR$) < 0 THEN RETURN;

  13909   1 000CC5  8CC7 0053                            LDI      CONSTPTR$,AUTO
          1 000CC7  7031                                 DCL,R7   1
          1 000CC8  8D47 0056                            SDI      CONSTPTR$+3,AUTO
          1 000CCA  8CC7 002C                            LDI      VALS,AUTO
          1 000CCC  7031                                 DCL,R7   1
          1 000CCD  84C7 0056                            SID      CONSTPTR$+3,AUTO
          1 000CCF  84F0 0000 0000                       SID      0,IMO
          1 000CD2  6881 0005                            BGEZ,R6  s:13910,PREL

  13909   1 000CD4  ECC7 0018                            LDB,B6   ERRCODE_SCRATCH+2,AUTO
          1 000CD6  C3C6 0001                            LNJ,B4   1,B6

     1625    13910    4                       ELSE ALTRETURN;

  13910   1 000CD8  ECC7 0018                            LDB,B6   ERRCODE_SCRATCH+2,AUTO
          1 000CDA  B806                                 LDR,R3   ,B6
          1 000CDB  C3B6                                 LNJ,B4   ,B6,R3

     1626    13911    4                    CASE(3); /* >= */

     1627    13912    4                       IF POFFC(VALP$,CONSTPTR$) >= 0 THEN RETURN;

  13912   1 000CDC  8CC7 0053                            LDI      CONSTPTR$,AUTO
          1 000CDE  7031                                 DCL,R7   1
          1 000CDF  8D47 0056                            SDI      CONSTPTR$+3,AUTO
          1 000CE1  8CC7 002C                            LDI      VALS,AUTO
          1 000CE3  7031                                 DCL,R7   1
PL6.E3A0      #005=GDB$FIRST_USER_TRAP File=GDB$BRKPNTS.:E05TSI                  TUE 07/29/97 21:24 Page:261  
          1 000CE4  84C7 0056                            SID      CONSTPTR$+3,AUTO
          1 000CE6  84F0 0000 0000                       SID      0,IMO
          1 000CE9  6801 0005                            BLZ,R6   s:13913,PREL

  13912   1 000CEB  ECC7 0018                            LDB,B6   ERRCODE_SCRATCH+2,AUTO
          1 000CED  C3C6 0001                            LNJ,B4   1,B6

     1628    13913    4                       ELSE ALTRETURN;

  13913   1 000CEF  ECC7 0018                            LDB,B6   ERRCODE_SCRATCH+2,AUTO
          1 000CF1  B806                                 LDR,R3   ,B6
          1 000CF2  C3B6                                 LNJ,B4   ,B6,R3

     1629    13914    4                    CASE(4); /* <= */

     1630    13915    4                       IF POFFC(VALP$,CONSTPTR$) <= 0 THEN RETURN;

  13915   1 000CF3  8CC7 0053                            LDI      CONSTPTR$,AUTO
          1 000CF5  7031                                 DCL,R7   1
          1 000CF6  8D47 0056                            SDI      CONSTPTR$+3,AUTO
          1 000CF8  8CC7 002C                            LDI      VALS,AUTO
          1 000CFA  7031                                 DCL,R7   1
          1 000CFB  84C7 0056                            SID      CONSTPTR$+3,AUTO
          1 000CFD  84F0 0000 0000                       SID      0,IMO
          1 000D00  6A01 0009                            BGZ,R6   s:13916,PREL
          1 000D02  6801 0003                            BLZ,R6   s:13915+19,PREL
          1 000D04  7981 0005                            BNEZ,R7  s:13916,PREL

  13915   1 000D06  ECC7 0018                            LDB,B6   ERRCODE_SCRATCH+2,AUTO
          1 000D08  C3C6 0001                            LNJ,B4   1,B6

     1631    13916    4                       ELSE ALTRETURN;

  13916   1 000D0A  ECC7 0018                            LDB,B6   ERRCODE_SCRATCH+2,AUTO
          1 000D0C  B806                                 LDR,R3   ,B6
          1 000D0D  C3B6                                 LNJ,B4   ,B6,R3

PL6.E3A0      #005=GDB$FIRST_USER_TRAP File=GDB$BRKPNTS.:E05TSI                  TUE 07/29/97 21:24 Page:262  
     1632    13917    4                    CASE(ELSE);

     1633    13918    4                       RETURN;

  13918   1 000D0E  ECC7 0018                            LDB,B6   ERRCODE_SCRATCH+2,AUTO
          1 000D10  C3C6 0001                            LNJ,B4   1,B6

     1634    13919    4                    END /* CASE */;

     1635    13920    3              CASE(3); /* VALUE */

     1636    13921    4                 DO CASE(BRK$->IFBRKPNT.IFCOND.COND);

  13921   1 000D12  9845 000C                            LDR,R1   12,B5
          1 000D14  1D07                                 CMV,R1   7
          1 000D15  0281 0056                            BGE      s:13935,PREL
          1 000D17  B810 0000 0D1D  01                   LDR,R3   s:13921+11,R1
          1 000D1A  83B0 0000 0D24  01                   JMP      s:13923,R3
          1 000D1D       0048                            DC       s:13935,PREL
          1 000D1E       0000                            DC       s:13923,PREL
          1 000D1F       000E                            DC       s:13925,PREL
          1 000D20       0018                            DC       s:13927,PREL
          1 000D21       0022                            DC       s:13929,PREL
          1 000D22       0030                            DC       s:13931,PREL
          1 000D23       003C                            DC       s:13933,PREL

     1637    13922    4                    CASE(1); /* > */

     1638    13923    4                      IF VALS > BRK$->IFBRKPNT.IFCOND.CONS$TANT.CONS.TANT THEN RETURN;

  13923   1 000D24  8CC7 002C                            LDI      VALS,AUTO
          1 000D26  84C5 000E                            SID      14,B5
          1 000D28  6801 004B                            BLZ,R6   s:13941,PREL
          1 000D2A  6A01 0003                            BGZ,R6   s:13923+10,PREL
          1 000D2C  7901 0047                            BEZ,R7   s:13941,PREL

  13923   1 000D2E  ECC7 0018                            LDB,B6   ERRCODE_SCRATCH+2,AUTO
PL6.E3A0      #005=GDB$FIRST_USER_TRAP File=GDB$BRKPNTS.:E05TSI                  TUE 07/29/97 21:24 Page:263  
          1 000D30  C3C6 0001                            LNJ,B4   1,B6

     1639    13924    4                    CASE(2); /* < */

     1640    13925    4                      IF VALS < BRK$->IFBRKPNT.IFCOND.CONS$TANT.CONS.TANT THEN RETURN;

  13925   1 000D32  8CC7 002C                            LDI      VALS,AUTO
          1 000D34  84C5 000E                            SID      14,B5
          1 000D36  6881 003D                            BGEZ,R6  s:13941,PREL

  13925   1 000D38  ECC7 0018                            LDB,B6   ERRCODE_SCRATCH+2,AUTO
          1 000D3A  C3C6 0001                            LNJ,B4   1,B6

     1641    13926    4                    CASE(3); /* >= */

     1642    13927    4                      IF VALS >= BRK$->IFBRKPNT.IFCOND.CONS$TANT.CONS.TANT THEN RETURN
             13927                                ;

  13927   1 000D3C  8CC7 002C                            LDI      VALS,AUTO
          1 000D3E  84C5 000E                            SID      14,B5
          1 000D40  6801 0033                            BLZ,R6   s:13941,PREL

  13927   1 000D42  ECC7 0018                            LDB,B6   ERRCODE_SCRATCH+2,AUTO
          1 000D44  C3C6 0001                            LNJ,B4   1,B6

     1643    13928    4                    CASE(4); /* <= */

     1644    13929    4                      IF VALS <= BRK$->IFBRKPNT.IFCOND.CONS$TANT.CONS.TANT THEN RETURN
             13929                                ;

  13929   1 000D46  8CC7 002C                            LDI      VALS,AUTO
          1 000D48  84C5 000E                            SID      14,B5
          1 000D4A  6A01 0029                            BGZ,R6   s:13941,PREL
          1 000D4C  6801 0003                            BLZ,R6   s:13929+10,PREL
          1 000D4E  7981 0025                            BNEZ,R7  s:13941,PREL

  13929   1 000D50  ECC7 0018                            LDB,B6   ERRCODE_SCRATCH+2,AUTO
PL6.E3A0      #005=GDB$FIRST_USER_TRAP File=GDB$BRKPNTS.:E05TSI                  TUE 07/29/97 21:24 Page:264  
          1 000D52  C3C6 0001                            LNJ,B4   1,B6

     1645    13930    4                    CASE(5); /* ~= */

     1646    13931    4                      IF VALS ~= BRK$->IFBRKPNT.IFCOND.CONS$TANT.CONS.TANT THEN RETURN
             13931                                ;

  13931   1 000D54  8CC7 002C                            LDI      VALS,AUTO
          1 000D56  84C5 000E                            SID      14,B5
          1 000D58  6981 0003                            BNEZ,R6  s:13931+8,PREL
          1 000D5A  7901 0019                            BEZ,R7   s:13941,PREL

  13931   1 000D5C  ECC7 0018                            LDB,B6   ERRCODE_SCRATCH+2,AUTO
          1 000D5E  C3C6 0001                            LNJ,B4   1,B6

     1647    13932    4                    CASE(6); /* = */

     1648    13933    4                      IF VALS = BRK$->IFBRKPNT.IFCOND.CONS$TANT.CONS.TANT THEN RETURN;

  13933   1 000D60  8CC7 002C                            LDI      VALS,AUTO
          1 000D62  84C5 000E                            SID      14,B5
          1 000D64  6981 000F                            BNEZ,R6  s:13941,PREL
          1 000D66  7981 000D                            BNEZ,R7  s:13941,PREL

  13933   1 000D68  ECC7 0018                            LDB,B6   ERRCODE_SCRATCH+2,AUTO
          1 000D6A  C3C6 0001                            LNJ,B4   1,B6

     1649    13934    4                    CASE(ELSE);

     1650    13935    4                       ALTRETURN;

  13935   1 000D6C  ECC7 0018                            LDB,B6   ERRCODE_SCRATCH+2,AUTO
          1 000D6E  B806                                 LDR,R3   ,B6
          1 000D6F  C3B6                                 LNJ,B4   ,B6,R3

     1651    13936    4                    END /* CASE */;

PL6.E3A0      #005=GDB$FIRST_USER_TRAP File=GDB$BRKPNTS.:E05TSI                  TUE 07/29/97 21:24 Page:265  
     1652    13937    3              CASE(ELSE);

     1653    13938    3                 RETURN;

  13938   1 000D70  ECC7 0018                            LDB,B6   ERRCODE_SCRATCH+2,AUTO
          1 000D72  C3C6 0001                            LNJ,B4   1,B6

     1654    13939    3              END /* CASE */;

     1655    13940
     1656    13941    2           ALTRETURN;

  13941   1 000D74  ECC7 0018                            LDB,B6   ERRCODE_SCRATCH+2,AUTO
          1 000D76  B806                                 LDR,R3   ,B6
          1 000D77  C3B6                                 LNJ,B4   ,B6,R3
     1657    13942
     1658    13943    2   END CMPRIF;
     1659    13944    1   END GDB$FIRST_USER_TRAP;
     1660    13945        %EOD;

PL6.E3A0      #005=GDB$FIRST_USER_TRAP File=GDB$BRKPNTS.:E05TSI                  TUE 07/29/97 21:24 Page:266  
--  Include file information  --

   GH_HARDWARE_M.:E05TOU  is referenced.
   GD_BRKPNT_M.:E05TOU  is referenced.
   HF_ERRORS_C.:E05TOU  is referenced.
   KH$CHN.:E05TOU  is referenced.
   G_ROS_M.:E05TOU  is referenced.
   G_JIT_M.:E05TOU  is referenced.
   GM_VIRTUAL_E.:E05TOU  is referenced.
   GD$MACS_M.:E05TOU  is referenced.
   GD$MSG_M.:E05TOU  is referenced.
   GDA_EQUS_E.:E05TOU  is referenced.
   GD_EQUS_E.:E05TOU  is referenced.
   GD_DATA_M.:E05TOU  is referenced.
   GD_STATIC_DATA.:E05TOU  cannot be made into a system file and is referenced.
   LCP_6.:E05TOU  cannot be made into a system file and is referenced.
   G_HJIT_M.:E05TOU  is referenced.
   G_LCP6_E.:E05TOU  was found in the system file and is referenced.
   GT_LCP6_M.:E05TOU  was found in the system file and is referenced.
   KI_CP6.:E05TOU  was found in the system file and is referenced.
   GF_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GM_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GU_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GJ_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GH_LCP6_M.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure GDB$FIRST_USER_TRAP.
PL6.E3A0      #005=GDB$FIRST_USER_TRAP File=GDB$BRKPNTS.:E05TSI                  TUE 07/29/97 21:24 Page:267  

 **** Variables and constants ****

  ****  Section 000 RoData GDB$FIRST_USER_TRAP

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(32)    r     1 GHB_TRAP_MSG

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

    1C-0-0/w PTR         r     1 @ADR$                     1A-0-0/w PTR         r     1 @BRK$
    1A-0-0/w PTR         r     1 @BRK$                      4-0-0/w PTR         r     1 @G$TSA
    10-0-0/w PTR         r     1 ADR$                      *0-0-0/w PTR         r     1 ADR$
    1E-0-0/w PTR         r     1 ADR$                      23-0-0/w UBIN(16)    r     1 ARRAY_CUR
    25-0-0/w BIT         r     1 ARRAY_FIRST               24-0-0/w UBIN(16)    r     1 ARRAY_HIGH
    27-0-0/w UBIN(16)    r     1 BITOFF                     6-0-0/w PTR         r     1 BRK$
    *0-0-0/w PTR         r     1 BRK$                      *0-0-0/w PTR         r     1 BRK$
     8-0-0/w SBIN(16)    r     1 BRKNUM                    53-0-0/w STRC(32)    r     1 CONSTPTR
    53-0-0/w PTR         r     1 CONSTPTR$                 20-0-0/w UBIN(32)    r     1 DD_ADDRESS
    26-0-0/w UBIN(16)    r     1 DD_BITSIZE                2A-0-0/w UBIN(16)    r     1 DD_DESC#
    22-0-0/w BIT         r     1 DD_IS_PTR                 2B-0-0/w BIT         r     1 DD_NOT_IS
    29-0-0/w UBIN(16)    r     1 DD_SEG                     A-0-0/w UBIN(16)    r     1 DSIZE
    28-0-0/w UBIN(16)    r     1 DSIZE                     16-0-0/w STRC(32)    r     1 ERRCODE_SCRATCH
    *0-0-0/w STRC(928)   r     1 G$TSA                     52-0-0/w UBIN(16)    r     1 I
    15-0-0/w BIT         r     1 MON                        B-0-0/w PTR         r     1 MSG$
     9-0-0/w SBIN(16)    r     1 OFFSET                     D-0-0/w UBIN(32)    r     1 P
     D-0-0/w PTR         r     1 P$                        12-0-0/w PTR         r     1 PTR$
     F-0-0/w UBIN(16)    r     1 SIZE                      14-0-0/w UBIN(16)    r     1 TRAP_NO
    2E-0-0/b BIT (32)    r     1 VALB(0:1)                 2E-0-0/b BIT         r     1 VALB_(0:63)
    32-0-0/c CHAR(63)    r     1 VALC                      32-0-0/c CHAR        r     1 VALC_(0:62)
    2C-0-0/w PTR         r     1 VALP$                     2C-0-0/w BIT         r     1 VALP_(0:31)
    2C-0-0/w SBIN(32)    r     1 VALS                      2C-0-0/w BIT         r     1 VALS_(0:31)

PL6.E3A0      #005=GDB$FIRST_USER_TRAP File=GDB$BRKPNTS.:E05TSI                  TUE 07/29/97 21:24 Page:268  
  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 G$ASDT_MCL$                0-0-0/w PTR         r     1 G$ASDT_USR$
     0-0-0/w PTR         r     1 G$JIT$                     0-0-0/w PTR         r     1 G$MHJIT$
     0-0-0/w PTR         r     1 G$ROS$                     0-0-0/w PTR         r     1 G$UHJIT$
     0-0-0/w PTR         r     1 GD$DELTA_DATA$

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC        r     1 B$BITS                     0-0-0/c STRC(8)     r     1 B$BYTES
     0-0-0/w BIT (16)    r     1 BITMEM                     0-0-0/w STRC(176)   r     1 BRKPNT
     0-0-0/w STRC(48)    r     1 BVECT                      0-0-0/w STRC(224)   r     1 G$ECCB
     0-0-0/w STRC(224)   r     1 G$ECCB_ARRAYED             0-0-0/w STRC(5616)  r     1 G$JIT
     0-0-0/w STRC(27232) r     1 G$MHJIT                    0-0-0/w STRC(928)   r     1 G$ROS
     0-0-0/w STRC(32)    r     1 G$SEGDESC                  0-0-0/w STRC(3344)  r     1 GD$MSG
     0-0-0/w STRC(16704) r     1 GD_DATA                    0-0-0/w STRC(80)    r     1 GH_VLD
     0-0-0/w STRC(768)   r     1 IFBRKPNT                   0-0-0/w UBIN(16)    r     1 MEMORY
     0-0-0/c CHAR(64)    r     1 MSGBFR                     0-0-0/w SBIN(16)    r     1 SMEMORY
     0-0-0/w STRC(112)   r     1 VLP_XBREAK


   Procedure GDB$FIRST_USER_TRAP requires 3448 words for executable code.
   Procedure GDB$FIRST_USER_TRAP requires 106 words of local(AUTO) storage.
PL6.E3A0      #005=GDB$FIRST_USER_TRAP File=GDB$BRKPNTS.:E05TSI                  TUE 07/29/97 21:24 Page:269  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #005=GDB$FIRST_USER_TRAP File=GDB$BRKPNTS.:E05TSI                  TUE 07/29/97 21:24 Page:270  
          MINI XREF LISTING

ADR$
     13024**DCL     13184<<ASSIGN  13185<>CALL    13187>>ASSIGN  13189>>ASSIGN  13337<<ASSIGN  13338>>ASSIGN
     13340<>CALL    13347>>ASSIGN  13348>>ASSIGN  13607<<ASSIGN  13609<>CALL    13616>>ASSIGN  13617>>ASSIGN
     13645<<ASSIGN  13647<<ASSIGN  13648<>CALL    13650>>IF      13658<<ASSIGN  13659<>CALL    13661>>ASSIGN
ADR$ IN PROCEDURE CMPRIF
     13765**DCL     13822<>CALL    13824<>CALL    13835>>ASSIGN  13841>>ASSIGN  13849>>ASSIGN  13857>>ASSIGN
ADR$ IN PROCEDURE SRCHFORBRKPNT
     13735**DCL     13728--PROC    13740>>IF
ARRAY_CUR IN PROCEDURE CMPRIF
     13768**DCL     13813<<ASSIGN  13816<>CALL
ARRAY_FIRST IN PROCEDURE CMPRIF
     13770**DCL     13812<<ASSIGN  13816<>CALL
ARRAY_HIGH IN PROCEDURE CMPRIF
     13769**DCL     13814<<ASSIGN  13816<>CALL
B$BITS.B IN PROCEDURE CMPRIF
     13809**DCL     13835>>ASSIGN  13849>>ASSIGN  13857>>ASSIGN
B$BYTES.B IN PROCEDURE CMPRIF
     13807**DCL     13841>>ASSIGN
BADXBRK
     13220**LABEL   13215--CALLALT
BITMEM
     12975**DCL     13189<<ASSIGN  13285>>IF      13299>>IF      13330<<ASSIGN  13348<<ASSIGN  13585>>IF
     13587>>IF      13587>>IF      13590>>IF      13597<<ASSIGN  13617<<ASSIGN
BITOFF IN PROCEDURE CMPRIF
     13772**DCL     13816<>CALL    13834>>DOINDEX 13834>>DOINDEX 13835>>ASSIGN  13840>>DOINDEX 13840>>DOINDEX
     13841>>ASSIGN  13848>>DOINDEX 13848>>DOINDEX 13849>>ASSIGN  13856>>DOINDEX 13856>>DOINDEX 13857>>ASSIGN
BLDBRKRSP
     13457**LABEL   13426--GOTO    13443--GOTO
BRK$
     13015**DCL     13242<>CALL    13243>>ASSIGN  13245>>IF      13246>>IF      13247>>ASSIGN  13247>>ASSIGN
     13249>>ASSIGN  13255>>ASSIGN  13255>>ASSIGN  13256>>IF      13257<>CALL    13277<>CALL    13281>>ASSIGN
     13290<<ASSIGN  13342<>CALL    13344>>ASSIGN  13391<>CALL    13414<>CALL    13416>>ASSIGN  13417>>IF
PL6.E3A0      #005=GDB$FIRST_USER_TRAP File=GDB$BRKPNTS.:E05TSI                  TUE 07/29/97 21:24 Page:271  
     13418>>IF      13420>>ASSIGN  13420>>ASSIGN  13422>>ASSIGN  13428>>ASSIGN  13429>>ASSIGN  13436>>ASSIGN
     13436>>ASSIGN  13437>>IF      13438<>CALL    13611<>CALL    13613>>ASSIGN  13648<>CALL    13650>>IF
     13650>>IF      13654>>ASSIGN  13658>>ASSIGN  13659>>CALL    13661>>ASSIGN  13662>>ASSIGN
BRK$ IN PROCEDURE CMPRIF
     13758**DCL     13752--PROC    13811>>ASSIGN  13830>>DOCASE  13853>>ASSIGN  13854>>ASSIGN  13865>>DOCASE
     13867>>IF      13868>>DOINDEX 13869>>IF      13874>>IF      13875>>DOINDEX 13876>>IF      13883>>IF
     13884>>DOINDEX 13885>>IF      13890>>IF      13891>>DOINDEX 13892>>IF      13898>>DOCASE  13921>>DOCASE
     13923>>IF      13925>>IF      13927>>IF      13929>>IF      13931>>IF      13933>>IF
BRK$ IN PROCEDURE SRCHFORBRKPNT
     13734**DCL     13728--PROC    13737<<ASSIGN  13738>>IF      13739>>DOWHILE 13740>>IF      13741>>ASSIGN
     13742>>ASSIGN  13746<<ASSIGN  13746>>ASSIGN
BRKNUM
     13016**DCL     13172<<ASSIGN  13243<<ASSIGN  13244>>ASSIGN  13262<<ASSIGN  13267>>ASSIGN  13281<<ASSIGN
     13289<<ASSIGN  13416<<ASSIGN  13441>>ASSIGN  13442<<ASSIGN  13449<<ASSIGN  13483>>IF      13486>>ASSIGN
     13500<<ASSIGN  13545>>IF      13545>>IF      13638>>IF      13638>>IF      13663>>ASSIGN  13673>>IF
     13743<<ASSIGN
BRKPNT.ADR$
      1871**DCL      1871--REDEF   13184>>ASSIGN  13422>>ASSIGN  13650>>IF      13658>>ASSIGN  13740>>IF
BRKPNT.BRKNUM
      1871**DCL     13243>>ASSIGN  13281>>ASSIGN  13416>>ASSIGN  13742>>ASSIGN
BRKPNT.BYPASSCOUNT
      1871**DCL     13245>>IF      13255>>ASSIGN  13417>>IF      13436>>ASSIGN
BRKPNT.CUR_BYPASSCOUNT
      1871**DCL     13246>>IF      13247<<ASSIGN  13247>>ASSIGN  13255<<ASSIGN  13418>>IF      13420<<ASSIGN
     13420>>ASSIGN  13436<<ASSIGN
BRKPNT.FLAGS.ACTIVE
      1872**DCL     13181>>IF      13650>>IF
BRKPNT.FLAGS.ARMED
      1872**DCL     13181>>IF      13188<<ASSIGN  13429<<ASSIGN  13662<<ASSIGN
BRKPNT.FLAGS.IFCOND
      1872**DCL     13256>>IF      13437>>IF
BRKPNT.FLINK$
      1871**DCL     13746>>ASSIGN
BRKPNT.OLDINST
      1872**DCL     13187<<ASSIGN  13249>>ASSIGN  13344>>ASSIGN  13428>>ASSIGN  13613>>ASSIGN  13654>>ASSIGN
     13661>>ASSIGN
PL6.E3A0      #005=GDB$FIRST_USER_TRAP File=GDB$BRKPNTS.:E05TSI                  TUE 07/29/97 21:24 Page:272  
BRKPNT.USER#
      1872**DCL     13185<>CALL    13659<>CALL
BVECT.PTR$
     12978**DCL     13216>>ASSIGN
CALLGDI
     13534**LABEL   13222--GOTO    13272--GOTO    13549--GOTO    13720--GOTO
CHECK_BYPASS
     13417**LABEL   13282--GOTO    13291--GOTO
CMPRIF
     13752**PROC    13257--CALL    13438--CALL
CONSTPTR.C IN PROCEDURE CMPRIF
     13798**DCL     13853<<ASSIGN
CONSTPTR.W IN PROCEDURE CMPRIF
     13800**DCL     13854<<ASSIGN
CONSTPTR$ IN PROCEDURE CMPRIF
     13796**DCL     13797--REDEF   13852<<ASSIGN  13900>>IF      13903>>IF      13906>>IF      13909>>IF
     13912>>IF      13915>>IF
DD_ADDRESS IN PROCEDURE CMPRIF
     13766**DCL     13816<>CALL    13822<>CALL
DD_BITSIZE IN PROCEDURE CMPRIF
     13771**DCL     13816<>CALL    13832>>IF      13834>>DOINDEX 13835>>ASSIGN  13838>>IF      13840>>DOINDEX
     13847>>IF      13848>>DOINDEX 13856>>DOINDEX
DD_DESC# IN PROCEDURE CMPRIF
     13775**DCL     13816<>CALL    13822<>CALL
DD_IS_PTR IN PROCEDURE CMPRIF
     13767**DCL     13816<>CALL    13822<>CALL
DD_NOT_IS IN PROCEDURE CMPRIF
     13776**DCL     13816<>CALL    13822<>CALL
DD_SEG IN PROCEDURE CMPRIF
     13774**DCL     13816<>CALL    13822<>CALL
DSIZE
     13019**DCL     13513<<ASSIGN  13514<>CALL    13515<<ASSIGN  13517>>ASSIGN
DSIZE IN PROCEDURE CMPRIF
     13773**DCL     13822<>CALL
ERRCODE_SCRATCH
     13042**DCL     13501<<ASSIGN  13503<<ASSIGN  13505>>ASSIGN
PL6.E3A0      #005=GDB$FIRST_USER_TRAP File=GDB$BRKPNTS.:E05TSI                  TUE 07/29/97 21:24 Page:273  
ERRCODE_SCRATCH.ERR#
     13071**DCL     13504<<ASSIGN  13504>>ASSIGN
G$ASDT_MCL$
      1801**DCL     13127>>IF
G$ASDT_USR$
      1800**DCL     13127>>IF      13139>>IF      13143>>IF
G$ECCB.FLTFLG
     12940**DCL     12971--REDEF
G$ECCB.FLTFLGS
     12971**DCL     13705>>IF
G$ECCB.TRAP$
     12918**DCL     13705>>IF
G$ECCB_ARRAYED.FLTFLG
     12864**DCL     12895--REDEF
G$ECCB_ARRAYED.HAND$
     12844**DCL     13716>>IF
G$JIT.ERR
     11885**DCL     13503>>ASSIGN
G$JIT.ERRLOG
     12127**DCL     12130--REDEF
G$JIT.JSUNIT
     11866**DCL     11867--REDEF
G$JIT.MCLS
     11865**DCL     11865--REDEF
G$JIT.SLIB#
     11977**DCL     13206>>IF      13369>>IF
G$JIT.SPROC#
     11977**DCL     13492>>IF
G$JIT.TMRZ
     12134**DCL     12135--REDEF
G$JIT.USER_EXTIME
     11858**DCL     11859--REDEF
G$JIT.USER_MEMTIME
     11861**DCL     11861--REDEF
G$JIT.USER_SVTIME
     11860**DCL     11860--REDEF
PL6.E3A0      #005=GDB$FIRST_USER_TRAP File=GDB$BRKPNTS.:E05TSI                  TUE 07/29/97 21:24 Page:274  
G$JIT.USR#
     11855**DCL     13138>>ASSIGN  13165>>ASSIGN  13166>>ASSIGN
G$JIT$
      1803**DCL     11797--IMP-PTR 13136>>ASSIGN  13138>>ASSIGN  13165>>ASSIGN  13166>>ASSIGN  13206>>IF
     13369>>IF      13492>>IF      13503>>ASSIGN
G$MHJIT
      1952**DCL     13150--ASSIGN
G$MHJIT.ASDT_MON
      1965**DCL     13150--ASSIGN
G$MHJIT.ASDT_MON.MHJIT.BASE
      2118**DCL     13149>>ASSIGN
G$MHJIT.ASDT_MON.UMHJIT.BASE
      2096**DCL     13130>>ASSIGN
G$MHJIT.INTCON.HHJIT
      8414**DCL      8414--REDEF
G$MHJIT.INTCON.P$$
      8387**DCL      8387--REDEF
G$MHJIT.ISA_BIGFOOT.P$$
      5332**DCL      5332--REDEF
G$MHJIT.ISA_DBINH.P$$
      6546**DCL      6546--REDEF
G$MHJIT.ISA_IDLE.P$$
      3427**DCL      3427--REDEF
G$MHJIT.ISA_LVL10.P$$
      6849**DCL      6849--REDEF
G$MHJIT.ISA_LVL11.P$$
      7152**DCL      7152--REDEF
G$MHJIT.ISA_LVL12.P$$
      7455**DCL      7455--REDEF
G$MHJIT.ISA_LVL5.P$$
      5635**DCL      5635--REDEF
G$MHJIT.ISA_OV.P$$
      5029**DCL      5029--REDEF
G$MHJIT.ISA_PFS.P$$
      4700**DCL      4700--REDEF
G$MHJIT.ISA_RT_CLOCK.P$$
PL6.E3A0      #005=GDB$FIRST_USER_TRAP File=GDB$BRKPNTS.:E05TSI                  TUE 07/29/97 21:24 Page:275  
      8062**DCL      8062--REDEF
G$MHJIT.ISA_SATYR_RCV.P$$
      5939**DCL      5939--REDEF
G$MHJIT.ISA_SATYR_TRN.P$$
      6243**DCL      6243--REDEF
G$MHJIT.ISA_SCHD.P$$
      7758**DCL      7758--REDEF
G$MHJIT.ISA_WDOG.P$$
      4808**DCL      4808--REDEF
G$MHJIT.TSA_DB.ISA.P$$
      4030**DCL      4030--REDEF
G$MHJIT.TSA_DB.P$$
      3901**DCL      3901--REDEF    3902--REDEF
G$MHJIT.TSA_HND.ISA.P$$
      8608**DCL      8608--REDEF
G$MHJIT.TSA_HND.P$$
      8479**DCL      8479--REDEF    8480--REDEF
G$MHJIT.TSA_MON.ISA.P$$
      3642**DCL      3642--REDEF
G$MHJIT.TSA_MON.P$$
      3513**DCL      3513--REDEF    3514--REDEF
G$MHJIT.TSA_OV.ISA.P$$
      4418**DCL      4418--REDEF
G$MHJIT.TSA_OV.P$$
      4289**DCL      4289--REDEF    4290--REDEF
G$MHJIT$
      1802**DCL      1952--IMP-PTR 13130>>ASSIGN  13149>>ASSIGN  13150>>ASSIGN  13150>>ASSIGN
G$ROS.AUTO_DS$
     12800**DCL     12801--REDEF
G$ROS.AUTO_T$
     12801**DCL     12801--REDEF
G$ROS.U_ECCB$
     12798**DCL     13705>>IF      13705>>IF      13716>>IF
G$ROS$
      1804**DCL     12791--IMP-PTR 13705>>IF      13705>>IF      13716>>IF
G$SEGDESC
PL6.E3A0      #005=GDB$FIRST_USER_TRAP File=GDB$BRKPNTS.:E05TSI                  TUE 07/29/97 21:24 Page:276  
     12211**DCL     13120>>ASSIGN  13681<<ASSIGN
G$TSA
     12246**DCL        24--PROC    13079--ENTRY   13102--ASSIGN  13228--ASSIGN  13491--ASSIGN
G$TSA.A$
     12278**DCL     13279>>ASSIGN  13285>>IF      13288>>ASSIGN  13296>>ASSIGN  13312>>ASSIGN  13320>>ASSIGN
     13321>>ASSIGN  13321>>ASSIGN  13322>>IF      13326>>ASSIGN
G$TSA.B3$
     12279**DCL     13214>>ASSIGN
G$TSA.I.TRAP#
     12270**DCL     13082>>IF      13082>>IF      13085>>IF      13085>>IF      13085>>IF      13085>>IF
     13085>>IF      13085>>IF      13085>>IF      13202>>IF      13213>>IF      13274>>IF      13413>>IF
     13479>>IF      13481>>ASSIGN  13502>>IF      13504>>ASSIGN  13554>>IF      13561>>IF      13578>>IF
     13623>>IF      13639>>IF      13652>>IF      13670>>IF      13689>>IF      13697<<ASSIGN  13703>>ASSIGN
     13704>>IF      13705>>IF      13710>>IF      13710>>IF      13712>>IF
G$TSA.INST
     12275**DCL     13274>>IF      13319>>IF
G$TSA.ISA.ASV$
     12334**DCL     13127>>IF      13127>>IF      13131>>ASSIGN  13139>>IF      13143>>IF
G$TSA.ISA.ISM2.MMU
     12401**DCL     13127>>IF
G$TSA.ISA.P$$
     12407**DCL     12407--REDEF
G$TSA.ISA.REGS.M1.J
     12501**DCL     13173>>ASSIGN  13174<<ASSIGN  13313<<ASSIGN  13362<<ASSIGN  13370<<ASSIGN  13382<<ASSIGN
     13432<<ASSIGN  13461<<ASSIGN  13625<<ASSIGN  13664<<ASSIGN  13691<<ASSIGN
G$TSA.ISA.S
     12428**DCL     13723<<ASSIGN
G$TSA.P
     12279**DCL     13143>>IF      13206>>IF      13358>>IF      13358>>IF
G$TSA.P$
     12278**DCL     13251<<ASSIGN  13251>>ASSIGN  13276>>ASSIGN  13287>>ASSIGN  13311>>ASSIGN  13367>>ASSIGN
     13388>>ASSIGN  13397>>ASSIGN  13419<<ASSIGN  13430<<ASSIGN  13465<<ASSIGN  13468<<ASSIGN  13566<<ASSIGN
     13583>>ASSIGN  13588>>ASSIGN  13589>>ASSIGN  13591>>ASSIGN  13593>>ASSIGN  13600>>ASSIGN  13601>>ASSIGN
     13647>>ASSIGN  13672<<ASSIGN  13672>>ASSIGN
G$TSA.P$$
     12278**DCL     12278--REDEF   12279--REDEF   13099<<ASSIGN
PL6.E3A0      #005=GDB$FIRST_USER_TRAP File=GDB$BRKPNTS.:E05TSI                  TUE 07/29/97 21:24 Page:277  
G$TSA.Z.IS
     12277**DCL     13083<<ASSIGN  13279>>ASSIGN  13280<<ASSIGN  13285>>IF      13288>>ASSIGN  13296>>ASSIGN
     13312>>ASSIGN  13320>>ASSIGN  13398>>IF      13399>>ASSIGN  13469<<ASSIGN
G$UHJIT.ISA_USR
     10249**DCL     10544--REDEF
G$UHJIT.ISA_USR.P$$
     10324**DCL     10324--REDEF
G$UHJIT.TSA_CP.ISA.P$$
     11531**DCL     11531--REDEF
G$UHJIT.TSA_CP.P$$
     11402**DCL     11402--REDEF   11403--REDEF
G$UHJIT.TSA_DB.ISA.P$$
     11143**DCL     11143--REDEF
G$UHJIT.TSA_DB.P$$
     11014**DCL     11014--REDEF   11015--REDEF
G$UHJIT.TSA_RTT.P$$
     11777**DCL     11777--REDEF   11778--REDEF
G$UHJIT.TSA_USR.ISA.P$$
     10733**DCL     10733--REDEF
G$UHJIT.TSA_USR.P$$
     10604**DCL     10604--REDEF   10605--REDEF
G$UHJIT$
      1799**DCL      8826--IMP-PTR 13131>>ASSIGN
GD$DELTA_DATA$
       792**DCL       806--IMP-PTR 13081>>ASSIGN  13084>>IF      13096>>IF      13097>>IF      13102>>ASSIGN
     13108>>IF      13113>>IF      13120>>ASSIGN  13120>>ASSIGN  13125>>ASSIGN  13130>>ASSIGN  13131>>ASSIGN
     13138>>ASSIGN  13148>>ASSIGN  13149>>ASSIGN  13150>>ASSIGN  13155>>ASSIGN  13155>>ASSIGN  13156>>ASSIGN
     13156>>ASSIGN  13157>>ASSIGN  13157>>ASSIGN  13165>>ASSIGN  13166>>ASSIGN  13173>>ASSIGN  13179>>IF
     13181>>IF      13181>>IF      13184>>ASSIGN  13185>>CALL    13187>>ASSIGN  13188>>ASSIGN  13191>>ASSIGN
     13191>>ASSIGN  13192>>ASSIGN  13192>>ASSIGN  13193>>ASSIGN  13193>>ASSIGN  13195>>ASSIGN  13196>>ASSIGN
     13202>>IF      13215>>CALL    13216>>ASSIGN  13217>>CALL    13217>>CALL    13221>>ASSIGN  13226>>ASSIGN
     13229>>IF      13230>>IF      13230>>IF      13230>>IF      13235>>ASSIGN  13241>>ASSIGN  13249>>ASSIGN
     13250>>ASSIGN  13263>>ASSIGN  13270>>ASSIGN  13275>>IF      13285>>IF      13289>>ASSIGN  13290>>ASSIGN
     13293>>IF      13294>>DOCASE  13297>>CALL    13300>>IF      13319>>IF      13321>>ASSIGN  13322>>IF
     13322>>IF      13323>>ASSIGN  13324>>CALL    13325>>ASSIGN  13326>>ASSIGN  13327>>ASSIGN  13328>>CALL
     13329>>ASSIGN  13331>>ASSIGN  13334>>ASSIGN  13336>>ASSIGN  13336>>ASSIGN  13337>>ASSIGN  13339>>ASSIGN
PL6.E3A0      #005=GDB$FIRST_USER_TRAP File=GDB$BRKPNTS.:E05TSI                  TUE 07/29/97 21:24 Page:278  
     13340>>CALL    13344>>ASSIGN  13347>>ASSIGN  13350>>ASSIGN  13351>>ASSIGN  13358>>IF      13358>>IF
     13358>>IF      13358>>IF      13368>>IF      13379>>IF      13381>>IF      13381>>IF      13404>>IF
     13405>>ASSIGN  13406>>CALL    13407>>ASSIGN  13408>>IF      13408>>IF      13409>>ASSIGN  13410>>ASSIGN
     13411>>ASSIGN  13424>>CALL    13439>>IF      13440>>ASSIGN  13441>>ASSIGN  13457>>IF      13457>>IF
     13458>>ASSIGN  13459>>CALL    13460>>ASSIGN  13462>>ASSIGN  13463>>ASSIGN  13464>>ASSIGN  13498>>ASSIGN
     13499>>IF      13500>>ASSIGN  13511>>ASSIGN  13535>>ASSIGN  13536>>ASSIGN  13537>>ASSIGN  13538>>ASSIGN
     13538>>ASSIGN  13539>>ASSIGN  13545>>IF      13548>>ASSIGN  13551>>ASSIGN  13552>>ASSIGN  13553>>ASSIGN
     13555>>ASSIGN  13556>>ASSIGN  13559>>IF      13562>>ASSIGN  13563>>ASSIGN  13563>>ASSIGN  13566>>ASSIGN
     13567>>ASSIGN  13569>>IF      13575>>ASSIGN  13577>>ASSIGN  13577>>ASSIGN  13579>>ASSIGN  13579>>ASSIGN
     13580>>ASSIGN  13580>>ASSIGN  13580>>ASSIGN  13584>>CALL    13585>>IF      13586>>ASSIGN  13586>>ASSIGN
     13587>>IF      13588>>ASSIGN  13588>>ASSIGN  13589>>ASSIGN  13591>>ASSIGN  13591>>ASSIGN  13593>>ASSIGN
     13593>>ASSIGN  13594>>ASSIGN  13595>>CALL    13596>>ASSIGN  13600>>ASSIGN  13600>>ASSIGN  13601>>ASSIGN
     13604>>ASSIGN  13606>>ASSIGN  13606>>ASSIGN  13607>>ASSIGN  13608>>ASSIGN  13609>>CALL    13613>>ASSIGN
     13616>>ASSIGN  13619>>ASSIGN  13620>>ASSIGN  13622>>ASSIGN  13624>>ASSIGN  13627>>IF      13628>>IF
     13628>>IF      13629>>ASSIGN  13629>>ASSIGN  13639>>IF      13644>>ASSIGN  13645>>ASSIGN  13652>>IF
     13654>>ASSIGN  13663>>ASSIGN  13674>>ASSIGN  13680>>IF      13681>>ASSIGN  13681>>ASSIGN  13687>>IF
     13687>>IF      13687>>IF      13690>>ASSIGN  13698>>IF      13701>>IF      13719>>ASSIGN  13737>>ASSIGN
     13738>>IF      13741>>ASSIGN  13742>>ASSIGN  13743>>ASSIGN  13811>>ASSIGN  13824>>CALL    13825>>IF
GD$MSG
     12624**DCL     13095<<ASSIGN  13547<>CALL    13718<>CALL
GD$MSG.BRKRQS.IF$CONST.SIZE
     12675**DCL     12675--REDEF
GD$MSG.BRKRQS.IF$CONST.TEXT
     12675**DCL     12676--REDEF   12676--REDEF   12677--REDEF   12678--REDEF
GD$MSG.BRKRSP.ADR$
     12688**DCL     13226<<ASSIGN  13227>>ASSIGN  13234<<ASSIGN  13311<<ASSIGN  13497<<ASSIGN
GD$MSG.BRKRSP.ADR_FROM$
     12694**DCL     13235<<ASSIGN  13279<<ASSIGN  13288<<ASSIGN  13312<<ASSIGN
GD$MSG.BRKRSP.BRK#
     12689**DCL     12689--REDEF   13484<<ASSIGN  13486<<ASSIGN
GD$MSG.BRKRSP.DATA
     12690**DCL     13514--CALL
GD$MSG.BRKRSP.DATA_SIZE
     12690**DCL     13268<<ASSIGN  13517<<ASSIGN
GD$MSG.BRKRSP.ERRCODE
     12690**DCL     13505<<ASSIGN
PL6.E3A0      #005=GDB$FIRST_USER_TRAP File=GDB$BRKPNTS.:E05TSI                  TUE 07/29/97 21:24 Page:279  
GD$MSG.BRKRSP.MBU
     12694**DCL     13140<<ASSIGN  13141<<ASSIGN
GD$MSG.BRKRSP.SHARED
     12694**DCL     13493<<ASSIGN  13495<<ASSIGN
GD$MSG.BRKRSP.TRAP#
     12689**DCL     13244<<ASSIGN  13263<<ASSIGN  13267<<ASSIGN  13481<<ASSIGN
GD$MSG.BRKRSP.TSA$
     12688**DCL     13228<<ASSIGN  13491<<ASSIGN
GD$MSG.BRKRSP.USER#
     12689**DCL     12689--REDEF   13498<<ASSIGN
GD$MSG.FNC
     12624**DCL     13225<<ASSIGN  13233<<ASSIGN  13310<<ASSIGN  13474<<ASSIGN
GD$MSG.LETMEM_D.VALUE.SIZE
     12647**DCL     12647--REDEF
GD$MSG.LETMEM_D.VALUE.TEXT
     12648**DCL     12648--REDEF   12648--REDEF   12649--REDEF   12650--REDEF
GD$MSG.MESSAGE
     12629**DCL     12629--REDEF   12630--REDEF   12630--REDEF   12631--REDEF   12642--REDEF   12655--REDEF
     12660--REDEF   12667--REDEF   12683--REDEF   12688--REDEF   12694--REDEF   12695--REDEF   12724--REDEF
     12726--REDEF   12737--REDEF   12744--REDEF   12756--REDEF
GD$MSG.SUBFB.INTERPRETIVE
     12628**DCL     13652>>IF
GD$MSG.SUBFB.POSTASSOC
     12628**DCL     13696>>IF
GD$MSG.SUBFNC
     12624**DCL     12624--REDEF   12628--REDEF
GD$MSG.TSA.I
     12696**DCL     12696--REDEF
GD$MSG.TSA.S
     12698**DCL     12698--REDEF
GD$MSG.USERQS.ASDT$
     12724**DCL     12724--REDEF   12725--REDEF
GDA$USER_INIT
     12999**DCL-ENT 13077--CALL
GDB$KILL_ALLBRKPNTS
     12989**DCL-ENT 13205--CALL
PL6.E3A0      #005=GDB$FIRST_USER_TRAP File=GDB$BRKPNTS.:E05TSI                  TUE 07/29/97 21:24 Page:280  
GDB$RESET_BRKPNT
     12988**DCL-ENT 13271--CALL    13512--CALL
GDI$DECODE_MSG_WAIT_4_GO
     12990**DCL-ENT 13534--CALL
GDI$SEND_ERROR_RESPONSE
     12992**DCL-ENT 13098--CALL    13220--CALL    13547--CALL    13718--CALL    13819--CALL
GDI$SEND_RESPONSE
     12991**DCL-ENT 13238--CALL    13269--CALL    13315--CALL    13521--CALL
GDK$MPTR
     12997**DCL-ENT 13822--CALL
GDK$RESADDR
     12996**DCL-ENT 13816--CALL
GDM$GRAB16
     13000**DCL-ENT 13514--CALL
GDU$SETUP_WINDOW
     12993**DCL-ENT 13137--CALL
GDU$SETUP_WINDOW_USER
     12994**DCL-ENT 13185--CALL    13215--CALL    13217--CALL    13297--CALL    13324--CALL    13328--CALL
     13340--CALL    13406--CALL    13424--CALL    13459--CALL    13584--CALL    13595--CALL    13609--CALL
     13659--CALL    13824--CALL
GD_DATA.DELTAINFO.TSA$
       806**DCL     13102<<ASSIGN
GD_DATA.GD.ABSADDR
       811**DCL     13559>>IF      13563>>ASSIGN  13566>>ASSIGN  13567<<ASSIGN
GD_DATA.GD.ALTRET_ADR$
       810**DCL     13404>>IF      13405>>ASSIGN  13408>>IF      13410<<ASSIGN  13591<<ASSIGN  13593<<ASSIGN
     13594>>ASSIGN  13627>>IF      13628>>IF
GD_DATA.GD.ALTRET_INST
       810**DCL     13407>>ASSIGN  13411<<ASSIGN  13596<<ASSIGN  13629>>ASSIGN
GD_DATA.GD.ANSWERED
       816**DCL     13097>>IF
GD_DATA.GD.ASDT_OFFSET
       812**DCL     13131<<ASSIGN  13150<<ASSIGN  13156>>ASSIGN  13193<<ASSIGN
GD_DATA.GD.ASDT_PPNO
       811**DCL     13130<<ASSIGN  13149<<ASSIGN  13155>>ASSIGN  13192<<ASSIGN
GD_DATA.GD.ASDT_USE_OFFSET
PL6.E3A0      #005=GDB$FIRST_USER_TRAP File=GDB$BRKPNTS.:E05TSI                  TUE 07/29/97 21:24 Page:281  
       812**DCL     13156<<ASSIGN  13193>>ASSIGN
GD_DATA.GD.ASDT_USE_PPNO
       812**DCL     13155<<ASSIGN  13192>>ASSIGN
GD_DATA.GD.ASDT_WINDOW$
       828**DCL     13120>>ASSIGN  13681>>ASSIGN
GD_DATA.GD.BRK$
       820**DCL     13181>>IF      13181>>IF      13184>>ASSIGN  13185>>CALL    13187>>ASSIGN  13188>>ASSIGN
     13196<<ASSIGN  13741<<ASSIGN
GD_DATA.GD.BRKNUM
       820**DCL     13179>>IF      13195<<ASSIGN  13663<<ASSIGN  13742<<ASSIGN  13743>>ASSIGN
GD_DATA.GD.DYNSP$
       819**DCL       819--REDEF   13538<<ASSIGN  13738>>IF
GD_DATA.GD.GOTRAP
       815**DCL     13545>>IF      13698>>IF
GD_DATA.GD.GO_AGAIN
       817**DCL     13331<<ASSIGN  13457>>IF      13464<<ASSIGN  13553<<ASSIGN
GD_DATA.GD.IGNARITH
       813**DCL     13084>>IF
GD_DATA.GD.MODE
       809**DCL     13108>>IF      13202>>IF      13368>>IF      13680>>IF      13701>>IF
GD_DATA.GD.OC_BRKNUM
       810**DCL     13289>>ASSIGN
GD_DATA.GD.ONCALL
       814**DCL     13275>>IF      13381>>IF      13687>>IF
GD_DATA.GD.ONCALLS
       814**DCL     13285>>IF      13381>>IF      13687>>IF
GD_DATA.GD.ONCALLS_BRK$
       810**DCL     13290>>ASSIGN
GD_DATA.GD.SOC
       815**DCL     13319>>IF      13339<<ASSIGN  13587>>IF
GD_DATA.GD.SOC_BRKPNT
       823**DCL     13409<<ASSIGN  13537<<ASSIGN
GD_DATA.GD.SOC_BRKPNT.ADR$
       824**DCL     13321<<ASSIGN  13322>>IF      13337>>ASSIGN  13408>>IF
GD_DATA.GD.SOC_BRKPNT.FLAGS.ACTIVE
       824**DCL     13350<<ASSIGN
PL6.E3A0      #005=GDB$FIRST_USER_TRAP File=GDB$BRKPNTS.:E05TSI                  TUE 07/29/97 21:24 Page:282  
GD_DATA.GD.SOC_BRKPNT.FLAGS.ARMED
       825**DCL     13351<<ASSIGN
GD_DATA.GD.SOC_BRKPNT.OLDINST
       824**DCL     13344<<ASSIGN  13347<<ASSIGN
GD_DATA.GD.SOC_BRKPNT.USER#
       824**DCL     13334<<ASSIGN  13336<<ASSIGN  13340<>CALL
GD_DATA.GD.STEPCNT
       825**DCL     13569>>IF      13580>>ASSIGN  13585>>IF      13586<<ASSIGN  13586>>ASSIGN  13588>>ASSIGN
     13589>>ASSIGN  13591>>ASSIGN  13593>>ASSIGN  13600>>ASSIGN  13622<<ASSIGN
GD_DATA.GD.STEP_BRKPNT
       820**DCL     13536<<ASSIGN
GD_DATA.GD.STEP_BRKPNT.ADR
       821**DCL     13358>>IF
GD_DATA.GD.STEP_BRKPNT.ADR$
       820**DCL       821--REDEF   13322>>IF      13323>>ASSIGN  13326<<ASSIGN  13327>>ASSIGN  13457>>IF
     13458>>ASSIGN  13463<<ASSIGN  13580<<ASSIGN  13588<<ASSIGN  13600<<ASSIGN  13607>>ASSIGN  13608>>ASSIGN
     13628>>IF
GD_DATA.GD.STEP_BRKPNT.FLAGS
       822**DCL     13551<<ASSIGN
GD_DATA.GD.STEP_BRKPNT.FLAGS.ACTIVE
       822**DCL     13358>>IF      13379>>IF      13439>>IF      13619<<ASSIGN
GD_DATA.GD.STEP_BRKPNT.FLAGS.ARMED
       822**DCL     13358>>IF      13620<<ASSIGN
GD_DATA.GD.STEP_BRKPNT.FLAGS.BRKNUM_SAVED
       823**DCL     13440<<ASSIGN  13499>>IF
GD_DATA.GD.STEP_BRKPNT.OLDINST
       821**DCL     13325>>ASSIGN  13329<<ASSIGN  13460>>ASSIGN  13462<<ASSIGN  13613<<ASSIGN  13616<<ASSIGN
     13629<<ASSIGN
GD_DATA.GD.STEP_BRKPNT.OLD_BRKNUM
       823**DCL     13441<<ASSIGN  13500>>ASSIGN  13552<<ASSIGN
GD_DATA.GD.STEP_BRKPNT.START
       821**DCL     13358>>IF
GD_DATA.GD.STEP_BRKPNT.START$
       821**DCL       821--REDEF   13579<<ASSIGN  13580>>ASSIGN  13601<<ASSIGN
GD_DATA.GD.STEP_BRKPNT.USER#
       822**DCL     13575<<ASSIGN  13577<<ASSIGN  13584<>CALL    13595<>CALL    13604<<ASSIGN  13606<<ASSIGN
PL6.E3A0      #005=GDB$FIRST_USER_TRAP File=GDB$BRKPNTS.:E05TSI                  TUE 07/29/97 21:24 Page:283  
     13609<>CALL
GD_DATA.GD.STOPT
       816**DCL     13096>>IF      13221<<ASSIGN  13270<<ASSIGN  13511<<ASSIGN  13548<<ASSIGN  13719<<ASSIGN
GD_DATA.GD.TRACE
       819**DCL     13230>>IF      13293>>IF      13294>>DOCASE  13535<<ASSIGN  13687>>IF
GD_DATA.GD.TRACE_ACTIVE
       817**DCL     13173<<ASSIGN
GD_DATA.GD.USERNO
       826**DCL     13138<<ASSIGN  13148<<ASSIGN  13157>>ASSIGN  13165<<ASSIGN  13191<<ASSIGN  13215<>CALL
     13217<>CALL    13297<>CALL    13324<>CALL    13328<>CALL    13406<>CALL    13424<>CALL    13459<>CALL
     13498>>ASSIGN  13824<>CALL
GD_DATA.GD.USE_REAL
       816**DCL     13125<<ASSIGN
GD_DATA.GD.USE_USERNO
       812**DCL     13157<<ASSIGN  13166<<ASSIGN  13191>>ASSIGN  13336>>ASSIGN  13577>>ASSIGN  13606>>ASSIGN
GD_DATA.GD.VLD
       827**DCL     13300--IF      13825--IF
GD_DATA.GD.WINDOWSEG
       825**DCL     13120<<ASSIGN  13681>>ASSIGN
GD_DATA.GD.XBRKINFO$
       819**DCL     13216<<ASSIGN  13217<>CALL    13226>>ASSIGN  13229>>IF      13230>>IF      13230>>IF
     13235>>ASSIGN  13241>>ASSIGN  13249>>ASSIGN  13250>>ASSIGN  13263>>ASSIGN  13555>>ASSIGN  13556>>ASSIGN
     13562>>ASSIGN  13563>>ASSIGN  13579>>ASSIGN  13624>>ASSIGN  13639>>IF      13644>>ASSIGN  13645>>ASSIGN
     13652>>IF      13654>>ASSIGN  13674>>ASSIGN  13690>>ASSIGN
GD_DATA.GDA.CONNECTFLG
       807**DCL     13113>>IF
GD_DATA.GDA.RCV
       808**DCL     13081--ASSIGN
GD_DATA.MISC.DESC$
       830**DCL     13811<<ASSIGN
GD_DATA.MYSPACE
       837**DCL     13538--ASSIGN  13539<<ASSIGN  13737--ASSIGN
GHB_TRAP_MSG
      1821**DCL     13501>>ASSIGN
GH_VLD.STATUS
     12775**DCL     13300>>IF      13825>>IF
PL6.E3A0      #005=GDB$FIRST_USER_TRAP File=GDB$BRKPNTS.:E05TSI                  TUE 07/29/97 21:24 Page:284  
GOTRAP
     13723**LABEL   13208--GOTO    13702--GOTO    13709--GOTO    13715--GOTO
I IN PROCEDURE CMPRIF
     13795**DCL     13834<<DOINDEX 13835>>ASSIGN  13835>>ASSIGN  13840<<DOINDEX 13841>>ASSIGN  13841>>ASSIGN
     13848<<DOINDEX 13849>>ASSIGN  13849>>ASSIGN  13856<<DOINDEX 13857>>ASSIGN  13857>>ASSIGN  13868<<DOINDEX
     13869>>IF      13869>>IF      13875<<DOINDEX 13876>>IF      13876>>IF      13884<<DOINDEX 13885>>IF
     13885>>IF      13891<<DOINDEX 13892>>IF      13892>>IF
IFBRKPNT.ADR$
      1888**DCL      1888--REDEF
IFBRKPNT.IFCOND.COND
      1910**DCL     13867>>IF      13883>>IF      13890>>IF      13898>>DOCASE  13921>>DOCASE
IFBRKPNT.IFCOND.CONS$TANT.BITS.TRING
      1913**DCL     13885>>IF      13892>>IF
IFBRKPNT.IFCOND.CONS$TANT.CONS.TANT
      1912**DCL     13923>>IF      13925>>IF      13927>>IF      13929>>IF      13931>>IF      13933>>IF
IFBRKPNT.IFCOND.CONS$TANT.PNTR.C
      1914**DCL     13853>>ASSIGN
IFBRKPNT.IFCOND.CONS$TANT.PNTR.W
      1913**DCL     13854>>ASSIGN
IFBRKPNT.IFCOND.CONS$TANT.SIZE
      1910**DCL      1910--REDEF   13868>>DOINDEX 13875>>DOINDEX 13884>>DOINDEX 13891>>DOINDEX
IFBRKPNT.IFCOND.CONS$TANT.TEXT
      1911**DCL      1911--REDEF    1911--REDEF    1912--REDEF    1913--REDEF
IFBRKPNT.IFCOND.CONS$TANT.TEXT.CHR
      1911**DCL     13869>>IF      13876>>IF
IFBRKPNT.IFCOND.CTYPE
      1910**DCL     13830>>DOCASE  13865>>DOCASE  13874>>IF
IFBRKPNT.IFCOND.DD$
      1914**DCL     13811>>ASSIGN
JUSTKIDDING
     13249**LABEL   13258--GOTO
KEEPGOING
     13422**LABEL   13445--GOTO
MEMORY
     12973**DCL     13187>>ASSIGN  13321>>ASSIGN  13322>>IF      13325<<ASSIGN  13329>>ASSIGN  13347>>ASSIGN
     13407<<ASSIGN  13428<<ASSIGN  13460<<ASSIGN  13596>>ASSIGN  13616>>ASSIGN  13661<<ASSIGN
PL6.E3A0      #005=GDB$FIRST_USER_TRAP File=GDB$BRKPNTS.:E05TSI                  TUE 07/29/97 21:24 Page:285  
MON
     13027**DCL     13126<<ASSIGN  13144<<ASSIGN  13333>>IF      13574>>IF      13603>>IF
MSG$
     13020**DCL     12624--IMP-PTR 13018--IMP-PTR 13081<<ASSIGN  13095>>ASSIGN  13098>>CALL    13140>>ASSIGN
     13141>>ASSIGN  13220>>CALL    13225>>ASSIGN  13226>>ASSIGN  13227>>ASSIGN  13228>>ASSIGN  13233>>ASSIGN
     13234>>ASSIGN  13235>>ASSIGN  13238>>CALL    13244>>ASSIGN  13263>>ASSIGN  13267>>ASSIGN  13268>>ASSIGN
     13269>>CALL    13279>>ASSIGN  13288>>ASSIGN  13310>>ASSIGN  13311>>ASSIGN  13312>>ASSIGN  13315>>CALL
     13474>>ASSIGN  13481>>ASSIGN  13484>>ASSIGN  13486>>ASSIGN  13491>>ASSIGN  13493>>ASSIGN  13495>>ASSIGN
     13497>>ASSIGN  13498>>ASSIGN  13505>>ASSIGN  13514>>CALL    13517>>ASSIGN  13521>>CALL    13547>>CALL
     13652>>IF      13696>>IF      13718>>CALL    13819>>CALL
MSGBFR
     13018**DCL     13098<>CALL    13220<>CALL    13238<>CALL    13269<>CALL    13315<>CALL    13521<>CALL
     13819<>CALL
NOTRACE
     13319**LABEL   13301--GOTO    13306--GOTO
NO_HAND
     13718**LABEL   13707--GOTO
OFFSET
     13017**DCL     13589<<ASSIGN  13591>>ASSIGN  13593>>ASSIGN
P
     13022**DCL     13369>>IF      13398>>IF      13399<<ASSIGN  13399>>ASSIGN
P$
     13021**DCL     13022--REDEF   13136<<ASSIGN  13137<>CALL    13214<<ASSIGN  13215<>CALL    13216>>ASSIGN
     13227<<ASSIGN  13234>>ASSIGN  13242<>CALL    13276<<ASSIGN  13277<>CALL    13287<<ASSIGN  13296<<ASSIGN
     13297<>CALL    13299>>IF      13320<<ASSIGN  13367<<ASSIGN  13388<<ASSIGN  13391<>CALL    13397<<ASSIGN
     13414<>CALL    13419>>ASSIGN  13422<<ASSIGN  13423>>IF      13424<>CALL    13428>>ASSIGN  13430>>ASSIGN
     13457>>IF      13465>>ASSIGN  13468>>ASSIGN  13497>>ASSIGN  13514<>CALL    13608<<ASSIGN  13611<>CALL
PTR$
     13025**DCL     13323<<ASSIGN  13324<>CALL    13325>>ASSIGN  13327<<ASSIGN  13328<>CALL    13329>>ASSIGN
     13330>>ASSIGN  13338<<ASSIGN  13342<>CALL    13405<<ASSIGN  13406<>CALL    13407>>ASSIGN  13458<<ASSIGN
     13459<>CALL    13460>>ASSIGN  13583<<ASSIGN  13584<>CALL    13585>>IF      13587>>IF      13587>>IF
     13590>>IF      13594<<ASSIGN  13595<>CALL    13596>>ASSIGN  13597>>ASSIGN
SENDTRACERSP
     13310**LABEL   13304--GOTO
SIZE
     13023**DCL     13098<>CALL    13224<<ASSIGN  13237<<ASSIGN  13238<>CALL    13269<>CALL    13314<<ASSIGN
PL6.E3A0      #005=GDB$FIRST_USER_TRAP File=GDB$BRKPNTS.:E05TSI                  TUE 07/29/97 21:24 Page:286  
     13315<>CALL    13473<<ASSIGN  13521<>CALL    13546<<ASSIGN  13547<>CALL    13717<<ASSIGN  13718<>CALL
     13815<<ASSIGN  13819<>CALL
SMEMORY
     12974**DCL     13589>>ASSIGN
SRCHFORBRKPNT
     13728**PROC    13242--CALL    13277--CALL    13342--CALL    13391--CALL    13414--CALL    13611--CALL
     13648--CALL
STARTOVER
     13108**LABEL   13540--GOTO
TRAP_NO
     13026**DCL     13703<<ASSIGN  13711<<ASSIGN  13713<<ASSIGN  13714>>IF      13714>>IF      13716>>IF
VALB IN PROCEDURE CMPRIF
     13791**DCL     13792--REDEF   13844<<ASSIGN
VALB_ IN PROCEDURE CMPRIF
     13792**DCL     13849<<ASSIGN  13885>>IF      13892>>IF
VALC IN PROCEDURE CMPRIF
     13793**DCL     13794--REDEF   13839<<ASSIGN
VALC_ IN PROCEDURE CMPRIF
     13794**DCL     13841<<ASSIGN  13869>>IF      13876>>IF
VALP$ IN PROCEDURE CMPRIF
     13785**DCL     13855<<ASSIGN  13900>>IF      13903>>IF      13906>>IF      13909>>IF      13912>>IF
     13915>>IF
VALP_ IN PROCEDURE CMPRIF
     13790**DCL     13857<<ASSIGN
VALS IN PROCEDURE CMPRIF
     13782**DCL     13783--REDEF   13784--REDEF   13785--REDEF   13786--REDEF   13790--REDEF   13833<<ASSIGN
     13923>>IF      13925>>IF      13927>>IF      13929>>IF      13931>>IF      13933>>IF
VALS_ IN PROCEDURE CMPRIF
     13783**DCL     13835<<ASSIGN
VLP_XBREAK.GOBREAK
      1932**DCL     13250<<ASSIGN  13556<<ASSIGN  13644<<ASSIGN  13652>>IF      13674<<ASSIGN
VLP_XBREAK.GOIC
      1931**DCL     13555<<ASSIGN  13562<<ASSIGN  13639>>IF
VLP_XBREAK.IC
      1929**DCL      1929--REDEF
VLP_XBREAK.IC$
PL6.E3A0      #005=GDB$FIRST_USER_TRAP File=GDB$BRKPNTS.:E05TSI                  TUE 07/29/97 21:24 Page:287  
      1929**DCL     13226>>ASSIGN  13563<<ASSIGN  13579>>ASSIGN  13645>>ASSIGN
VLP_XBREAK.OLDIC
      1929**DCL      1930--REDEF    1930--REDEF
VLP_XBREAK.OLDIC$
      1930**DCL     13235>>ASSIGN
VLP_XBREAK.REPLACED.INSTR
      1930**DCL     13249<<ASSIGN  13654<<ASSIGN
VLP_XBREAK.TC
      1932**DCL     13230>>IF
VLP_XBREAK.TRAP#
      1931**DCL     13229>>IF      13263>>ASSIGN
VLP_XBREAK.TT
      1931**DCL     13230>>IF      13241<<ASSIGN  13624<<ASSIGN  13690<<ASSIGN
X6A_ARET
     12998**DCL-ENT 13099--ASSIGN

PL6.E3A0      #006=GDB$KILL_BRKPNT File=GDB$BRKPNTS.:E05TSI                      TUE 07/29/97 21:27 Page:288  
     1661        1        /*T***********************************************************/
     1662        2        /*T*                                                         */
     1663        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
     1664        4        /*T*                                                         */
     1665        5        /*T***********************************************************/
     1666        6              %EJECT;
PL6.E3A0      #006=GDB$KILL_BRKPNT File=GDB$BRKPNTS.:E05TSI                      TUE 07/29/97 21:27 Page:289  
     1667        7        /*F*    NAME:     GDB$KILL_BRKPNT
     1668        8                PURPOSE:  This routine is called to remove a single breakpoint
     1669        9                          from the breakpoint table.
     1670       10                CALL:     CALL GDB$KILL_BRKPNT
     1671       11                DESCRIPTION:  This routine is called with a message buffer of
     1672       12                              the kill breakpoint format.  It removes the
     1673       13                              breakpoint from the BRK$->BRKPNT and restores the
     1674       14                              contents of memory.
     1675       15                                                                                     */
     1676       16        GDB$KILL_BRKPNT: PROC(SIZE,BUFFER);
     1677       17                                               /* INCLUDES                           */
     1678       18        %INCLUDE LCP_6;                     /* Various LCP6 EQUs                  */
     1679      209        %INCLUDE GD_STATIC_DATA;
     1680      682        %INCLUDE GD$MACS_M;                    /* Various debugger macros            */
     1681      720        %INCLUDE KH$CHN;
     1682      842        %INCLUDE GD_BRKPNT_M;
     1683      897                                               /* SYMREFS                            */
     1684      898                                               /* ENTRYS                             */
     1685      899    1   DCL GDI$SEND_ERROR_RESPONSE ENTRY(3);
     1686      900                                               /* ARGS                               */
     1687      901    1   DCL BUFFER CHAR(SIZE) ALIGNED;         /* Message buffer                     */
     1688      902        %GD$MSG(STCLASS=REDEF BUFFER);         /* Message template                   */
     1689     1058    1   DCL SIZE UBIN;                         /* Size of buffer                     */
     1690     1059                                               /* BASED                              */
     1691     1060    1   DCL MEMORY UBIN BASED;
     1692     1061    1   DCL BITMEM BIT(16) BASED ALIGNED;
     1693     1062        %GD_BRKPNT(FPTN=BRKPNT,STCLASS=BASED,LAST=";");
     1694     1079        %GD_BRKPNT(FPTN=IFBRKPNT,STCLASS=BASED,LAST=",");
     1695     1096        %GD_IFCOND(FPTN=IFCOND,LVL=2);
     1696     1120        %GD_DATA_DESC(FPTN=DD,STCLASS=BASED);
     1697     1127        /**/
     1698     1128        /* LOCAL VARS */
     1699     1129        /**/
     1700     1130    1   DCL BRK$ PTR;
     1701     1131    1   DCL FREESIZE SBIN;
     1702     1132    1   DCL MOVETO$ PTR;
     1703     1133    1   DCL MOVEFROM$ PTR;
PL6.E3A0      #006=GDB$KILL_BRKPNT File=GDB$BRKPNTS.:E05TSI                      TUE 07/29/97 21:27 Page:290  
     1704     1134    1   DCL PREV$ PTR;
     1705     1135    1   DCL I UBIN;
     1706     1136        %EJECT;
PL6.E3A0      #006=GDB$KILL_BRKPNT File=GDB$BRKPNTS.:E05TSI                      TUE 07/29/97 21:27 Page:291  
     1707     1137        /* Make sure that the number is valid */
     1708     1138
     1709     1139    1           SIZE = %GD#RSPACKSIZE;
     1710     1140    1           BRK$ = ADDR(GD_DATA.MYSPACE(0));
     1711     1141    1              PREV$ = ADDR(NIL);
     1712     1142    2              IF GD$MSG.KILLRQS.BRK# = GD_DATA.GD.OC_BRKNUM THEN DO;
     1713     1143    2                 GD_DATA.GD.OC_BRKNUM = 0;
     1714     1144    2                 GD_DATA.GD.ONCALLS = '0'B;
     1715     1145    2                 GD_DATA.GD.ONCALLS_BRK$ = ADDR(NIL);
     1716     1146    2                 GOTO SEND_ACK;
     1717     1147    2                 END;
     1718     1148    1              IF BRK$ = GD_DATA.GD.DYNSP$ OR GD$MSG.KILLRQS.BRK# = 0 THEN
     1719     1149    1                 CALL GDI$SEND_ERROR_RESPONSE(SIZE,BUFFER,%GD#RSPNAK);
     1720     1150    1              ELSE
     1721     1151    2                 DO WHILE BRK$ ~= ADDR(NIL);
     1722     1152    3                    IF BRK$->BRKPNT.BRKNUM = GD$MSG.KILLRQS.BRK# THEN DO;
     1723     1153    4                       IF BRK$ = GD_DATA.GD.BRK$ THEN DO;
     1724     1154    4                          GD_DATA.GD.BRK$ = ADDR(NIL);
     1725     1155    4                          GD_DATA.GD.BRKNUM = 0;
     1726     1156    5                          IF BRK$->BRKPNT.FLAGS.ONCALL THEN DO;
     1727     1157    5                             GD_DATA.GD.ONCALL$ = ADDR(NIL);
     1728     1158    5                             GD_DATA.GD.ONCALL = '0'B;
     1729     1159    5                             END;
     1730     1160    4                          END;
     1731     1161    3                       IF PREV$ = ADDR(NIL) AND
     1732     1162    4                          BRK$->BRKPNT.FLINK$ = ADDR(NIL) THEN DO;
     1733     1163    4                          IF BRK$->BRKPNT.FLAGS.IFCOND THEN
     1734     1164    4                             BRK$->IFBRKPNT = '0'B;
     1735     1165    4                          ELSE
     1736     1166    4                             BRK$->BRKPNT = '0'B;
     1737     1167    4                          GD_DATA.GD.DYNSP$ = ADDR(GD_DATA.MYSPACE(0));
     1738     1168    4                          GOTO SEND_ACK;
     1739     1169    4                          END;
     1740     1170    4                       ELSE IF BRK$->BRKPNT.FLINK$ = ADDR(NIL) THEN DO;
     1741     1171    4                                 PREV$->BRKPNT.FLINK$ = ADDR(NIL);
     1742     1172    4                                 GOTO SEND_ACK;
     1743     1173    4                               END;
PL6.E3A0      #006=GDB$KILL_BRKPNT File=GDB$BRKPNTS.:E05TSI                      TUE 07/29/97 21:27 Page:292  
     1744     1174    4                            ELSE DO;
     1745     1175    4                          IF BRK$->BRKPNT.FLAGS.IFCOND THEN
     1746     1176    4                             FREESIZE = SIZEW(IFBRKPNT) +
     1747     1177    4                                BRK$->IFBRKPNT.IFCOND.DD_SIZE;
     1748     1178    4                          ELSE FREESIZE = SIZEW(BRKPNT);
     1749     1179    4                          MOVETO$ = BRK$;
     1750     1180    4                          MOVEFROM$ = BRK$->BRKPNT.FLINK$;
     1751     1181    4                          IF GD_DATA.GD.BRK$ = MOVEFROM$
     1752     1182    4                          THEN GD_DATA.GD.BRK$ = MOVETO$;
     1753     1183    4                          IF GD_DATA.GD.ONCALLS_BRK$ = MOVEFROM$
     1754     1184    4                          THEN GD_DATA.GD.ONCALLS_BRK$ = MOVETO$;
     1755     1185    5                          DO WHILE POFFW(GD_DATA.GD.DYNSP$,MOVEFROM$) > 0;
     1756     1186    5                             MOVETO$->BITMEM = MOVEFROM$->BITMEM;
     1757     1187    5                             MOVETO$ = PINCRW(MOVETO$,1);
     1758     1188    5                             MOVEFROM$ = PINCRW(MOVEFROM$,1);
     1759     1189    5                             END;
     1760     1190    5                          DO WHILE (BRK$ ~= ADDR(NIL) AND
     1761     1191    5                                   BRK$->BRKPNT.FLINK$ ~= ADDR(NIL));
     1762     1192    5                             BRK$->BRKPNT.FLINK$ =
     1763     1193    5                                PINCRW(BRK$->BRKPNT.FLINK$,-FREESIZE);
     1764     1194    5                             BRK$ = BRK$->BRKPNT.FLINK$;
     1765     1195    5                             END;
     1766     1196    4                          GD_DATA.GD.DYNSP$ = PINCRW(GD_DATA.GD.DYNSP$,-FREESIZE);
     1767     1197    4   SEND_ACK:
     1768     1198    4                          CALL GDI$SEND_ERROR_RESPONSE(SIZE,BUFFER,%GD#RSPACK);
     1769     1199    4                          RETURN;
     1770     1200    4                          END;
     1771     1201    3                       END;
     1772     1202    3                    ELSE DO;
     1773     1203    3                       PREV$ = BRK$;
     1774     1204    3                       BRK$ = BRK$->BRKPNT.FLINK$;
     1775     1205    3                       END;
     1776     1206    2                    END;
     1777     1207
     1778     1208    1                 CALL GDI$SEND_ERROR_RESPONSE(SIZE,BUFFER,%GD#RSPNAK);
     1779     1209
     1780     1210    1           RETURN;
PL6.E3A0      #006=GDB$KILL_BRKPNT File=GDB$BRKPNTS.:E05TSI                      TUE 07/29/97 21:27 Page:293  
     1781     1211
     1782     1212    1   END GDB$KILL_BRKPNT;
     1783     1213        %EOD;

PL6.E3A0      #006=GDB$KILL_BRKPNT File=GDB$BRKPNTS.:E05TSI                      TUE 07/29/97 21:27 Page:294  
--  Include file information  --

   GD_BRKPNT_M.:E05TOU  is referenced.
   KH$CHN.:E05TOU  is referenced.
   GD$MACS_M.:E05TOU  is referenced.
   GD$MSG_M.:E05TOU  is referenced.
   GDA_EQUS_E.:E05TOU  is referenced.
   GD_EQUS_E.:E05TOU  is referenced.
   GD_DATA_M.:E05TOU  is referenced.
   GD_STATIC_DATA.:E05TOU  cannot be made into a system file and is referenced.
   LCP_6.:E05TOU  cannot be made into a system file and is referenced.
   G_LCP6_E.:E05TOU  was found in the system file and is referenced.
   GT_LCP6_M.:E05TOU  was found in the system file and is referenced.
   KI_CP6.:E05TOU  was found in the system file and is referenced.
   GF_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GM_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GU_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GJ_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GH_LCP6_M.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure GDB$KILL_BRKPNT.

   Procedure GDB$KILL_BRKPNT requires 321 words for executable code.
   Procedure GDB$KILL_BRKPNT requires 24 words of local(AUTO) storage.

PL6.E3A0      #006=GDB$KILL_BRKPNT File=GDB$BRKPNTS.:E05TSI                      TUE 07/29/97 21:27 Page:295  

 Object Unit name= GDB$KILL_BRKPNT                            File name= GDB$BRKPNTS.:E05TOU
 UTS= JUL 29 '97 21:27:45.12 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_LCP6_SYSTEM                               Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size HexSiz  Section name
    0   Proc  even  none   321    141  GDB$KILL_BRKPNT

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect HexLoc Primary Altret sequence   type   Parms  Name
     0      0   yes            yes      Std        2  GDB$KILL_BRKPNT

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       3 GDI$SEND_ERROR_RESPONSE
                       nStd      0 X6A_AUTO_2
                       nStd      0 X6A_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     GD$DELTA_DATA$                   r    G$ROS$
PL6.E3A0      #006=GDB$KILL_BRKPNT File=GDB$BRKPNTS.:E05TSI                      TUE 07/29/97 21:27 Page:296  


     1661        1        /*T***********************************************************/
     1662        2        /*T*                                                         */
     1663        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
     1664        4        /*T*                                                         */
     1665        5        /*T***********************************************************/
     1666        6              %EJECT;
PL6.E3A0      #006=GDB$KILL_BRKPNT File=GDB$BRKPNTS.:E05TSI                      TUE 07/29/97 21:27 Page:297  
     1667        7        /*F*    NAME:     GDB$KILL_BRKPNT
     1668        8                PURPOSE:  This routine is called to remove a single breakpoint
     1669        9                          from the breakpoint table.
     1670       10                CALL:     CALL GDB$KILL_BRKPNT
     1671       11                DESCRIPTION:  This routine is called with a message buffer of
     1672       12                              the kill breakpoint format.  It removes the
     1673       13                              breakpoint from the BRK$->BRKPNT and restores the
     1674       14                              contents of memory.
     1675       15                                                                                     */
     1676       16        GDB$KILL_BRKPNT: PROC(SIZE,BUFFER);

     16   0 000000  D380 0000 0000  xent GDB$KILL_BRKPNT LNJ,B5   X6A_AUTO_2
          0 000003       0018 0002                       DC       24,2

     1677       17                                               /* INCLUDES                           */
     1678       18        %INCLUDE LCP_6;                     /* Various LCP6 EQUs                  */
     1679      209        %INCLUDE GD_STATIC_DATA;
     1680      682        %INCLUDE GD$MACS_M;                    /* Various debugger macros            */
     1681      720        %INCLUDE KH$CHN;
     1682      842        %INCLUDE GD_BRKPNT_M;
     1683      897                                               /* SYMREFS                            */
     1684      898                                               /* ENTRYS                             */
     1685      899    1   DCL GDI$SEND_ERROR_RESPONSE ENTRY(3);
     1686      900                                               /* ARGS                               */
     1687      901    1   DCL BUFFER CHAR(SIZE) ALIGNED;         /* Message buffer                     */
     1688      902        %GD$MSG(STCLASS=REDEF BUFFER);         /* Message template                   */
     1689     1058    1   DCL SIZE UBIN;                         /* Size of buffer                     */
     1690     1059                                               /* BASED                              */
     1691     1060    1   DCL MEMORY UBIN BASED;
     1692     1061    1   DCL BITMEM BIT(16) BASED ALIGNED;
     1693     1062        %GD_BRKPNT(FPTN=BRKPNT,STCLASS=BASED,LAST=";");
     1694     1079        %GD_BRKPNT(FPTN=IFBRKPNT,STCLASS=BASED,LAST=",");
     1695     1096        %GD_IFCOND(FPTN=IFCOND,LVL=2);
     1696     1120        %GD_DATA_DESC(FPTN=DD,STCLASS=BASED);
     1697     1127        /**/
     1698     1128        /* LOCAL VARS */
     1699     1129        /**/
PL6.E3A0      #006=GDB$KILL_BRKPNT File=GDB$BRKPNTS.:E05TSI                      TUE 07/29/97 21:27 Page:298  
     1700     1130    1   DCL BRK$ PTR;
     1701     1131    1   DCL FREESIZE SBIN;
     1702     1132    1   DCL MOVETO$ PTR;
     1703     1133    1   DCL MOVEFROM$ PTR;
     1704     1134    1   DCL PREV$ PTR;
     1705     1135    1   DCL I UBIN;
     1706     1136        %EJECT;
PL6.E3A0      #006=GDB$KILL_BRKPNT File=GDB$BRKPNTS.:E05TSI                      TUE 07/29/97 21:27 Page:299  
     1707     1137        /* Make sure that the number is valid */
     1708     1138
     1709     1139    1           SIZE = %GD#RSPACKSIZE;

   1139   0 000005  ECC7 0004                            LDB,B6   @SIZE,AUTO
          0 000007  6C40                                 LDV,R6   64
          0 000008  EF06                                 STR,R6   ,B6

     1710     1140    1           BRK$ = ADDR(GD_DATA.MYSPACE(0));

   1140   0 000009  DC80 0000 0000  xsym                 LDB,B5   GD$DELTA_DATA$
          0 00000C  CBC5 01AE                            LAB,B4   430,B5
          0 00000E  CFC7 0008                            STB,B4   BRK$,AUTO

     1711     1141    1              PREV$ = ADDR(NIL);

   1141   0 000010  BB80 0000 0000                       LAB,B3   0
          0 000013  BFC7 000F                            STB,B3   PREV$,AUTO

     1712     1142    2              IF GD$MSG.KILLRQS.BRK# = GD_DATA.GD.OC_BRKNUM THEN DO;

   1142   0 000015  ACC7 0006                            LDB,B2   @BUFFER,AUTO
          0 000017  D2C2 0001                            LLH,R5   1,B2
          0 000019  D945 0131                            CMR,R5   305,B5
          0 00001B  0981 000D                            BNE      s:1148,PREL

     1713     1143    2                 GD_DATA.GD.OC_BRKNUM = 0;

   1143   0 00001D  8745 0131                            CL       305,B5

     1714     1144    2                 GD_DATA.GD.ONCALLS = '0'B;

   1144   0 00001F  8845 014C                            LBF,'1000'X       332,B5
   1144   0 000021       1000

     1715     1145    2                 GD_DATA.GD.ONCALLS_BRK$ = ADDR(NIL);

PL6.E3A0      #006=GDB$KILL_BRKPNT File=GDB$BRKPNTS.:E05TSI                      TUE 07/29/97 21:27 Page:300  
   1145   0 000022  9B80 0000 0000                       LAB,B1   0
          0 000025  9FC5 0135                            STB,B1   309,B5

     1716     1146    2                 GOTO SEND_ACK;

   1146   0 000027  0F81 00E2                            B        s:1198,PREL

     1717     1147    2                 END;
     1718     1148    1              IF BRK$ = GD_DATA.GD.DYNSP$ OR GD$MSG.KILLRQS.BRK# = 0 THEN

   1148   0 000029  CDC5 0156                            CMB,B4   342,B5
          0 00002B  0901 0003                            BE       s:1149,PREL
          0 00002D  5981 0013                            BNEZ,R5  s:1151,PREL

     1719     1149    1                 CALL GDI$SEND_ERROR_RESPONSE(SIZE,BUFFER,%GD#RSPNAK);

   1149   0 00002F  9BF0 0034                            LAB,B1   52,IMO
          0 000031  9FC7 0016                            STB,B1   PREV$+7,AUTO
          0 000033  AFC7 0014                            STB,B2   PREV$+5,AUTO
          0 000035  EFC7 0012                            STB,B6   PREV$+3,AUTO
          0 000037  BBC7 0012                            LAB,B3   PREV$+3,AUTO
          0 000039  CBF0 0300                            LAB,B4   768,IMO
          0 00003B  E380 0000 0000  xent                 LNJ,B6   GDI$SEND_ERROR_RESPONSE
          0 00003E       0001                            DC       s:1149+16,PREL
          0 00003F  0F81 00EA                            B        s:1208,PREL

     1720     1150    1              ELSE
     1721     1151    2                 DO WHILE BRK$ ~= ADDR(NIL);

   1151   0 000041  0F81 00E4                            B        s:1206,PREL

     1722     1152    3                    IF BRK$->BRKPNT.BRKNUM = GD$MSG.KILLRQS.BRK# THEN DO;

   1152   0 000043  ECC7 0008                            LDB,B6   BRK$,AUTO
          0 000045  DCC7 0006                            LDB,B5   @BUFFER,AUTO
          0 000047  E2C5 0001                            LLH,R6   1,B5
          0 000049  E946 0002                            CMR,R6   2,B6
PL6.E3A0      #006=GDB$KILL_BRKPNT File=GDB$BRKPNTS.:E05TSI                      TUE 07/29/97 21:27 Page:301  
          0 00004B  0981 00D5                            BNE      s:1203,PREL

     1723     1153    4                       IF BRK$ = GD_DATA.GD.BRK$ THEN DO;

   1153   0 00004D  CC80 0000 0000  xsym                 LDB,B4   GD$DELTA_DATA$
          0 000050  EDC4 0159                            CMB,B6   345,B4
          0 000052  0981 0015                            BNE      s:1161,PREL

     1724     1154    4                          GD_DATA.GD.BRK$ = ADDR(NIL);

   1154   0 000054  BB80 0000 0000                       LAB,B3   0
          0 000057  BFC4 0159                            STB,B3   345,B4

     1725     1155    4                          GD_DATA.GD.BRKNUM = 0;

   1155   0 000059  8744 0158                            CL       344,B4

     1726     1156    5                          IF BRK$->BRKPNT.FLAGS.ONCALL THEN DO;

   1156   0 00005B  82C6 000A                            LB,'0800'X        10,B6
   1156   0 00005D       0800
          0 00005E  0581 0009                            BBF      s:1161,PREL

     1727     1157    5                             GD_DATA.GD.ONCALL$ = ADDR(NIL);

   1157   0 000060  AB80 0000 0000                       LAB,B2   0
          0 000063  AFC4 014E                            STB,B2   334,B4

     1728     1158    5                             GD_DATA.GD.ONCALL = '0'B;

   1158   0 000065  8844 014C                            LBF,'0800'X       332,B4
   1158   0 000067       0800

     1729     1159    5                             END;

     1730     1160    4                          END;

PL6.E3A0      #006=GDB$KILL_BRKPNT File=GDB$BRKPNTS.:E05TSI                      TUE 07/29/97 21:27 Page:302  
     1731     1161    3                       IF PREV$ = ADDR(NIL) AND

   1161   0 000068  8DC7 000F                            CMN      PREV$,AUTO
          0 00006A  0981 0022                            BNE      s:1170,PREL
          0 00006C  8D86                                 CMN      ,B6
          0 00006D  0981 001F                            BNE      s:1170,PREL

     1732     1162    4                          BRK$->BRKPNT.FLINK$ = ADDR(NIL) THEN DO;

     1733     1163    4                          IF BRK$->BRKPNT.FLAGS.IFCOND THEN

   1163   0 00006F  82C6 000A                            LB,'1000'X        10,B6
   1163   0 000071       1000
          0 000072  0581 000A                            BBF      s:1166,PREL

     1734     1164    4                             BRK$->IFBRKPNT = '0'B;

   1164   0 000074  5C60                                 LDV,R5   96
          0 000075  0021                                 ALR      ;
          0 000076       4178 0000                                ALPHANUM('0000'X,IMO,,1),;
          0 000078       4006 0000                                ALPHANUM(0,B6,,R5,FILL)
          0 00007A  437F                                 CSYNC    s:1164+5,SPREL
          0 00007B  0F81 0007                            B        s:1167,PREL

     1735     1165    4                          ELSE
     1736     1166    4                             BRK$->BRKPNT = '0'B;

   1166   0 00007D  5C16                                 LDV,R5   22
          0 00007E  0021                                 ALR      ;
          0 00007F       4178 0000                                ALPHANUM('0000'X,IMO,,1),;
          0 000081       4006 0000                                ALPHANUM(0,B6,,R5,FILL)

     1737     1167    4                          GD_DATA.GD.DYNSP$ = ADDR(GD_DATA.MYSPACE(0));

   1167   0 000083  437F                                 CSYNC    s:1166+5,SPREL
          0 000084  EC80 0000 0000  xsym                 LDB,B6   GD$DELTA_DATA$
          0 000087  CBC6 01AE                            LAB,B4   430,B6
PL6.E3A0      #006=GDB$KILL_BRKPNT File=GDB$BRKPNTS.:E05TSI                      TUE 07/29/97 21:27 Page:303  
          0 000089  CFC6 0156                            STB,B4   342,B6

     1738     1168    4                          GOTO SEND_ACK;

   1168   0 00008B  0F81 007E                            B        s:1198,PREL

     1739     1169    4                          END;
     1740     1170    4                       ELSE IF BRK$->BRKPNT.FLINK$ = ADDR(NIL) THEN DO;

   1170   0 00008D  8D86                                 CMN      ,B6
          0 00008E  0981 0009                            BNE      s:1175,PREL

     1741     1171    4                                 PREV$->BRKPNT.FLINK$ = ADDR(NIL);

   1171   0 000090  BB80 0000 0000                       LAB,B3   0
          0 000093  ACC7 000F                            LDB,B2   PREV$,AUTO
          0 000095  BF82                                 STB,B3   ,B2

     1742     1172    4                                 GOTO SEND_ACK;

   1172   0 000096  0F81 0073                            B        s:1198,PREL

     1743     1173    4                               END;
     1744     1174    4                            ELSE DO;

     1745     1175    4                          IF BRK$->BRKPNT.FLAGS.IFCOND THEN

   1175   0 000098  82C6 000A                            LB,'1000'X        10,B6
   1175   0 00009A       1000
          0 00009B  0581 0008                            BBF      s:1178,PREL

     1746     1176    4                             FREESIZE = SIZEW(IFBRKPNT) +

   1176   0 00009D  E846 002D                            LDR,R6   45,B6
          0 00009F  6E30                                 ADV,R6   48
          0 0000A0  EF47 000A                            STR,R6   FREESIZE,AUTO
          0 0000A2  0F81 0004                            B        s:1179,PREL
PL6.E3A0      #006=GDB$KILL_BRKPNT File=GDB$BRKPNTS.:E05TSI                      TUE 07/29/97 21:27 Page:304  

     1747     1177    4                                BRK$->IFBRKPNT.IFCOND.DD_SIZE;
     1748     1178    4                          ELSE FREESIZE = SIZEW(BRKPNT);

   1178   0 0000A4  6C0B                                 LDV,R6   11
          0 0000A5  EF47 000A                            STR,R6   FREESIZE,AUTO

     1749     1179    4                          MOVETO$ = BRK$;

   1179   0 0000A7  EFC7 000B                            STB,B6   MOVETO$,AUTO

     1750     1180    4                          MOVEFROM$ = BRK$->BRKPNT.FLINK$;

   1180   0 0000A9  BC86                                 LDB,B3   ,B6
          0 0000AA  BFC7 000D                            STB,B3   MOVEFROM$,AUTO

     1751     1181    4                          IF GD_DATA.GD.BRK$ = MOVEFROM$

   1181   0 0000AC  ACC4 0159                            LDB,B2   345,B4
          0 0000AE  ADC7 000D                            CMB,B2   MOVEFROM$,AUTO
          0 0000B0  0981 0003                            BNE      s:1183,PREL

     1752     1182    4                          THEN GD_DATA.GD.BRK$ = MOVETO$;

   1182   0 0000B2  EFC4 0159                            STB,B6   345,B4

     1753     1183    4                          IF GD_DATA.GD.ONCALLS_BRK$ = MOVEFROM$

   1183   0 0000B4  ACC4 0135                            LDB,B2   309,B4
          0 0000B6  ADC7 000D                            CMB,B2   MOVEFROM$,AUTO
          0 0000B8  0981 0003                            BNE      s:1185,PREL

     1754     1184    4                          THEN GD_DATA.GD.ONCALLS_BRK$ = MOVETO$;

   1184   0 0000BA  EFC4 0135                            STB,B6   309,B4

     1755     1185    5                          DO WHILE POFFW(GD_DATA.GD.DYNSP$,MOVEFROM$) > 0;
PL6.E3A0      #006=GDB$KILL_BRKPNT File=GDB$BRKPNTS.:E05TSI                      TUE 07/29/97 21:27 Page:305  

   1185   0 0000BC  0F81 000F                            B        s:1189,PREL

     1756     1186    5                             MOVETO$->BITMEM = MOVEFROM$->BITMEM;

   1186   0 0000BE  ECC7 000B                            LDB,B6   MOVETO$,AUTO
          0 0000C0  DCC7 000D                            LDB,B5   MOVEFROM$,AUTO
          0 0000C2  E805                                 LDR,R6   ,B5
          0 0000C3  EF06                                 STR,R6   ,B6

     1757     1187    5                             MOVETO$ = PINCRW(MOVETO$,1);

   1187   0 0000C4  CBC6 0001                            LAB,B4   1,B6
          0 0000C6  CFC7 000B                            STB,B4   MOVETO$,AUTO

     1758     1188    5                             MOVEFROM$ = PINCRW(MOVEFROM$,1);

   1188   0 0000C8  EBC5 0001                            LAB,B6   1,B5
          0 0000CA  EFC7 000D                            STB,B6   MOVEFROM$,AUTO

     1759     1189    5                             END;

   1189   0 0000CC  EC80 0000 0000  xsym                 LDB,B6   GD$DELTA_DATA$
          0 0000CF  8CC6 0156                            LDI      342,B6
          0 0000D1  84C7 000D                            SID      MOVEFROM$,AUTO
          0 0000D3  84F0 0000 0000                       SID      0,IMO
          0 0000D6  6A68                                 BGZ,R6   s:1186,SPREL
          0 0000D7  6801 0002                            BLZ,R6   s:1190,PREL
          0 0000D9  79E5                                 BNEZ,R7  s:1186,SPREL

     1760     1190    5                          DO WHILE (BRK$ ~= ADDR(NIL) AND

   1190   0 0000DA  0F81 0014                            B        s:1195,PREL

     1761     1191    5                                   BRK$->BRKPNT.FLINK$ ~= ADDR(NIL));
     1762     1192    5                             BRK$->BRKPNT.FLINK$ =

PL6.E3A0      #006=GDB$KILL_BRKPNT File=GDB$BRKPNTS.:E05TSI                      TUE 07/29/97 21:27 Page:306  
   1192   0 0000DC  ECC7 0008                            LDB,B6   BRK$,AUTO
          0 0000DE  DC86                                 LDB,B5   ,B6
          0 0000DF  DFC7 0012                            STB,B5   PREV$+3,AUTO
          0 0000E1  E847 000A                            LDR,R6   FREESIZE,AUTO
          0 0000E3  70F0                                 DAR,R7   16
          0 0000E4  84C7 0012                            SID      PREV$+3,AUTO
          0 0000E6  8656                                 CPL      R6
          0 0000E7  8657                                 CPL      R7
          0 0000E8  8470 0000 0001                       AID      1,IMO
          0 0000EB  8D06                                 SDI      ,B6

     1763     1193    5                                PINCRW(BRK$->BRKPNT.FLINK$,-FREESIZE);
     1764     1194    5                             BRK$ = BRK$->BRKPNT.FLINK$;

   1194   0 0000EC  DC86                                 LDB,B5   ,B6
          0 0000ED  DFC7 0008                            STB,B5   BRK$,AUTO

     1765     1195    5                             END;

   1195   0 0000EF  8DC7 0008                            CMN      BRK$,AUTO
          0 0000F1  0901 0005                            BE       s:1196,PREL
          0 0000F3  ECC7 0008                            LDB,B6   BRK$,AUTO
          0 0000F5  8D86                                 CMN      ,B6
          0 0000F6  09E6                                 BNE      s:1192,SPREL

     1766     1196    4                          GD_DATA.GD.DYNSP$ = PINCRW(GD_DATA.GD.DYNSP$,-FREESIZE);

   1196   0 0000F7  EC80 0000 0000  xsym                 LDB,B6   GD$DELTA_DATA$
          0 0000FA  DCC6 0156                            LDB,B5   342,B6
          0 0000FC  DFC7 0012                            STB,B5   PREV$+3,AUTO
          0 0000FE  E847 000A                            LDR,R6   FREESIZE,AUTO
          0 000100  70F0                                 DAR,R7   16
          0 000101  84C7 0012                            SID      PREV$+3,AUTO
          0 000103  8656                                 CPL      R6
          0 000104  8657                                 CPL      R7
          0 000105  8470 0000 0001                       AID      1,IMO
          0 000108  8D46 0156                            SDI      342,B6
PL6.E3A0      #006=GDB$KILL_BRKPNT File=GDB$BRKPNTS.:E05TSI                      TUE 07/29/97 21:27 Page:307  

     1767     1197    4   SEND_ACK:
     1768     1198    4                          CALL GDI$SEND_ERROR_RESPONSE(SIZE,BUFFER,%GD#RSPACK);

   1198   0 00010A  EBF0 0023            SEND_ACK        LAB,B6   35,IMO
          0 00010C  EFC7 0016                            STB,B6   PREV$+7,AUTO
          0 00010E  DCC7 0006                            LDB,B5   @BUFFER,AUTO
          0 000110  DFC7 0014                            STB,B5   PREV$+5,AUTO
          0 000112  CCC7 0004                            LDB,B4   @SIZE,AUTO
          0 000114  CFC7 0012                            STB,B4   PREV$+3,AUTO
          0 000116  BBC7 0012                            LAB,B3   PREV$+3,AUTO
          0 000118  CBF0 0300                            LAB,B4   768,IMO
          0 00011A  E380 0000 0000  xent                 LNJ,B6   GDI$SEND_ERROR_RESPONSE
          0 00011D       0001                            DC       s:1199,PREL

     1769     1199    4                          RETURN;

   1199   0 00011E  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

     1770     1200    4                          END;
     1771     1201    3                       END;
     1772     1202    3                    ELSE DO;

     1773     1203    3                       PREV$ = BRK$;

   1203   0 000121  EFC7 000F                            STB,B6   PREV$,AUTO

     1774     1204    3                       BRK$ = BRK$->BRKPNT.FLINK$;

   1204   0 000123  CC86                                 LDB,B4   ,B6
          0 000124  CFC7 0008                            STB,B4   BRK$,AUTO

     1775     1205    3                       END;

     1776     1206    2                    END;

   1206   0 000126  8DC7 0008                            CMN      BRK$,AUTO
PL6.E3A0      #006=GDB$KILL_BRKPNT File=GDB$BRKPNTS.:E05TSI                      TUE 07/29/97 21:27 Page:308  
          0 000128  0981 FF1A                            BNE      s:1152,PREL

     1777     1207
     1778     1208    1                 CALL GDI$SEND_ERROR_RESPONSE(SIZE,BUFFER,%GD#RSPNAK);

   1208   0 00012A  EBF0 0034                            LAB,B6   52,IMO
          0 00012C  EFC7 0016                            STB,B6   PREV$+7,AUTO
          0 00012E  DCC7 0006                            LDB,B5   @BUFFER,AUTO
          0 000130  DFC7 0014                            STB,B5   PREV$+5,AUTO
          0 000132  CCC7 0004                            LDB,B4   @SIZE,AUTO
          0 000134  CFC7 0012                            STB,B4   PREV$+3,AUTO
          0 000136  BBC7 0012                            LAB,B3   PREV$+3,AUTO
          0 000138  CBF0 0300                            LAB,B4   768,IMO
          0 00013A  E380 0000 0000  xent                 LNJ,B6   GDI$SEND_ERROR_RESPONSE
          0 00013D       0001                            DC       s:1210,PREL

     1779     1209
     1780     1210    1           RETURN;

   1210   0 00013E  C380 0000 0000  xent                 LNJ,B4   X6A_ARET
     1781     1211
     1782     1212    1   END GDB$KILL_BRKPNT;
     1783     1213        %EOD;

PL6.E3A0      #006=GDB$KILL_BRKPNT File=GDB$BRKPNTS.:E05TSI                      TUE 07/29/97 21:27 Page:309  
--  Include file information  --

   GD_BRKPNT_M.:E05TOU  is referenced.
   KH$CHN.:E05TOU  is referenced.
   GD$MACS_M.:E05TOU  is referenced.
   GD$MSG_M.:E05TOU  is referenced.
   GDA_EQUS_E.:E05TOU  is referenced.
   GD_EQUS_E.:E05TOU  is referenced.
   GD_DATA_M.:E05TOU  is referenced.
   GD_STATIC_DATA.:E05TOU  cannot be made into a system file and is referenced.
   LCP_6.:E05TOU  cannot be made into a system file and is referenced.
   G_LCP6_E.:E05TOU  was found in the system file and is referenced.
   GT_LCP6_M.:E05TOU  was found in the system file and is referenced.
   KI_CP6.:E05TOU  was found in the system file and is referenced.
   GF_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GM_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GU_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GJ_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GH_LCP6_M.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure GDB$KILL_BRKPNT.
PL6.E3A0      #006=GDB$KILL_BRKPNT File=GDB$BRKPNTS.:E05TSI                      TUE 07/29/97 21:27 Page:310  

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     6-0-0/w PTR         r     1 @BUFFER                    4-0-0/w PTR         r     1 @SIZE
     8-0-0/w PTR         r     1 BRK$                      *0-0-0/w ACHR        r     1 BUFFER
     A-0-0/w SBIN(16)    r     1 FREESIZE                  *0-0-0/w STRC(3344)  r     1 GD$MSG
     D-0-0/w PTR         r     1 MOVEFROM$                  B-0-0/w PTR         r     1 MOVETO$
     F-0-0/w PTR         r     1 PREV$                     *0-0-0/w UBIN(16)    r     1 SIZE

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 GD$DELTA_DATA$

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w BIT (16)    r     1 BITMEM                     0-0-0/w STRC(176)   r     1 BRKPNT
     0-0-0/w STRC(16704) r     1 GD_DATA                    0-0-0/w STRC(768)   r     1 IFBRKPNT


   Procedure GDB$KILL_BRKPNT requires 321 words for executable code.
   Procedure GDB$KILL_BRKPNT requires 24 words of local(AUTO) storage.
PL6.E3A0      #006=GDB$KILL_BRKPNT File=GDB$BRKPNTS.:E05TSI                      TUE 07/29/97 21:27 Page:311  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #006=GDB$KILL_BRKPNT File=GDB$BRKPNTS.:E05TSI                      TUE 07/29/97 21:27 Page:312  
          MINI XREF LISTING

BITMEM
      1061**DCL      1186<<ASSIGN   1186>>ASSIGN
BRK$
      1130**DCL      1140<<ASSIGN   1148>>IF       1151>>DOWHILE  1152>>IF       1153>>IF       1156>>IF
      1161>>IF       1163>>IF       1164>>ASSIGN   1166>>ASSIGN   1170>>IF       1175>>IF       1176>>ASSIGN
      1179>>ASSIGN   1180>>ASSIGN   1190>>DOWHILE  1190>>DOWHILE  1192>>ASSIGN   1192>>ASSIGN   1194<<ASSIGN
      1194>>ASSIGN   1203>>ASSIGN   1204<<ASSIGN   1204>>ASSIGN
BRKPNT
      1075**DCL      1166<<ASSIGN   1178--ASSIGN
BRKPNT.ADR$
      1075**DCL      1075--REDEF
BRKPNT.BRKNUM
      1075**DCL      1152>>IF
BRKPNT.FLAGS.IFCOND
      1076**DCL      1163>>IF       1175>>IF
BRKPNT.FLAGS.ONCALL
      1077**DCL      1156>>IF
BRKPNT.FLINK$
      1075**DCL      1161>>IF       1170>>IF       1171<<ASSIGN   1180>>ASSIGN   1190>>DOWHILE  1192<<ASSIGN
      1192>>ASSIGN   1194>>ASSIGN   1204>>ASSIGN
BUFFER
       901**DCL        16--PROC      919--REDEF    1149<>CALL     1198<>CALL     1208<>CALL
FREESIZE
      1131**DCL      1176<<ASSIGN   1178<<ASSIGN   1192>>ASSIGN   1196>>ASSIGN
GD$DELTA_DATA$
       635**DCL       649--IMP-PTR  1140>>ASSIGN   1142>>IF       1143>>ASSIGN   1144>>ASSIGN   1145>>ASSIGN
      1148>>IF       1153>>IF       1154>>ASSIGN   1155>>ASSIGN   1157>>ASSIGN   1158>>ASSIGN   1167>>ASSIGN
      1167>>ASSIGN   1181>>IF       1182>>ASSIGN   1183>>IF       1184>>ASSIGN   1185>>DOWHILE  1196>>ASSIGN
      1196>>ASSIGN
GD$MSG.BRKRQS.IF$CONST.SIZE
       970**DCL       970--REDEF
GD$MSG.BRKRQS.IF$CONST.TEXT
PL6.E3A0      #006=GDB$KILL_BRKPNT File=GDB$BRKPNTS.:E05TSI                      TUE 07/29/97 21:27 Page:313  
       970**DCL       971--REDEF     971--REDEF     972--REDEF     973--REDEF
GD$MSG.BRKRSP.BRK#
       984**DCL       984--REDEF
GD$MSG.BRKRSP.USER#
       984**DCL       984--REDEF
GD$MSG.KILLRQS.BRK#
       989**DCL      1142>>IF       1148>>IF       1152>>IF
GD$MSG.LETMEM_D.VALUE.SIZE
       942**DCL       942--REDEF
GD$MSG.LETMEM_D.VALUE.TEXT
       943**DCL       943--REDEF     943--REDEF     944--REDEF     945--REDEF
GD$MSG.MESSAGE
       924**DCL       924--REDEF     925--REDEF     925--REDEF     926--REDEF     937--REDEF     950--REDEF
       955--REDEF     962--REDEF     978--REDEF     983--REDEF     989--REDEF     990--REDEF    1019--REDEF
      1021--REDEF    1032--REDEF    1039--REDEF    1051--REDEF
GD$MSG.SUBFNC
       919**DCL       919--REDEF     923--REDEF
GD$MSG.TSA.I
       991**DCL       991--REDEF
GD$MSG.TSA.S
       993**DCL       993--REDEF
GD$MSG.USERQS.ASDT$
      1019**DCL      1019--REDEF    1020--REDEF
GDI$SEND_ERROR_RESPONSE
       899**DCL-ENT  1149--CALL     1198--CALL     1208--CALL
GD_DATA.GD.BRK$
       663**DCL      1153>>IF       1154<<ASSIGN   1181>>IF       1182<<ASSIGN
GD_DATA.GD.BRKNUM
       663**DCL      1155<<ASSIGN
GD_DATA.GD.DYNSP$
       662**DCL       662--REDEF    1148>>IF       1167<<ASSIGN   1185>>DOWHILE  1196<<ASSIGN   1196>>ASSIGN
GD_DATA.GD.OC_BRKNUM
       653**DCL      1142>>IF       1143<<ASSIGN
GD_DATA.GD.ONCALL
       657**DCL      1158<<ASSIGN
GD_DATA.GD.ONCALL$
PL6.E3A0      #006=GDB$KILL_BRKPNT File=GDB$BRKPNTS.:E05TSI                      TUE 07/29/97 21:27 Page:314  
       661**DCL      1157<<ASSIGN
GD_DATA.GD.ONCALLS
       657**DCL      1144<<ASSIGN
GD_DATA.GD.ONCALLS_BRK$
       653**DCL      1145<<ASSIGN   1183>>IF       1184<<ASSIGN
GD_DATA.GD.STEP_BRKPNT.ADR$
       663**DCL       664--REDEF
GD_DATA.GD.STEP_BRKPNT.START$
       664**DCL       664--REDEF
GD_DATA.MYSPACE
       680**DCL      1140--ASSIGN   1167--ASSIGN
IFBRKPNT
      1092**DCL      1164<<ASSIGN   1176--ASSIGN
IFBRKPNT.ADR$
      1092**DCL      1092--REDEF
IFBRKPNT.IFCOND.CONS$TANT.SIZE
      1114**DCL      1114--REDEF
IFBRKPNT.IFCOND.CONS$TANT.TEXT
      1115**DCL      1115--REDEF    1115--REDEF    1116--REDEF    1117--REDEF
IFBRKPNT.IFCOND.DD_SIZE
      1118**DCL      1176>>ASSIGN
MOVEFROM$
      1133**DCL      1180<<ASSIGN   1181>>IF       1183>>IF       1185>>DOWHILE  1186>>ASSIGN   1188<<ASSIGN
      1188>>ASSIGN
MOVETO$
      1132**DCL      1179<<ASSIGN   1182>>ASSIGN   1184>>ASSIGN   1186>>ASSIGN   1187<<ASSIGN   1187>>ASSIGN
PREV$
      1134**DCL      1141<<ASSIGN   1161>>IF       1171>>ASSIGN   1203<<ASSIGN
SEND_ACK
      1198**LABEL    1146--GOTO     1168--GOTO     1172--GOTO
SIZE
      1058**DCL        16--PROC      901--IMP-SIZ  1139<<ASSIGN   1149<>CALL     1149>>CALL     1198<>CALL
      1198>>CALL     1208<>CALL     1208>>CALL

PL6.E3A0      #007=GDB$KILL_ALLBRKPNTS File=GDB$BRKPNTS.:E05TSI                  TUE 07/29/97 21:27 Page:315  
     1784        1        /*T***********************************************************/
     1785        2        /*T*                                                         */
     1786        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
     1787        4        /*T*                                                         */
     1788        5        /*T***********************************************************/
     1789        6        %EJECT;
PL6.E3A0      #007=GDB$KILL_ALLBRKPNTS File=GDB$BRKPNTS.:E05TSI                  TUE 07/29/97 21:27 Page:316  
     1790        7        /*F*     NAME:     GDB$KILL_ALLBRKPNTS
     1791        8                 PURPOSE:  To kill all breakpoints in the table
     1792        9                 CALL:     CALL GDB$KILL_ALLBRKPNTS
     1793       10                 DESCRIPTION:  This routine just restores all breakpoints
     1794       11                               in memory to their original contents and zaps
     1795       12                               the table.
     1796       13                                                                                     */
     1797       14        GDB$KILL_ALLBRKPNTS: PROC;
     1798       15
     1799       16        /**/
     1800       17        /* Includes */
     1801       18        /**/
     1802       19
     1803       20        %INCLUDE LCP_6;                        /* Various LCP6 EQUs                  */
     1804      211        %INCLUDE GD_STATIC_DATA;
     1805      684        %INCLUDE GD$MACS_M;                    /* Various debugger macros            */
     1806      722        %INCLUDE KH$CHN;
     1807      844        %INCLUDE GD_BRKPNT_M;
     1808      899
     1809      900        /**/
     1810      901        /* Symrefs */
     1811      902        /**/
     1812      903
     1813      904        /**/
     1814      905        /* Entries */
     1815      906        /**/
     1816      907
     1817      908    1   DCL GDI$SEND_ERROR_RESPONSE ENTRY(3);
     1818      909    1   DCL GDU$SETUP_WINDOW_USER ENTRY(2) ALTRET;
     1819      910
     1820      911        /**/
     1821      912        /* Temps */
     1822      913        /**/
     1823      914
     1824      915    1   DCL BRK$ PTR;
     1825      916    1   DCL ADR$ PTR;
     1826      917    1   DCL BUFFER CHAR(6) ALIGNED;            /* Message buffer                     */
PL6.E3A0      #007=GDB$KILL_ALLBRKPNTS File=GDB$BRKPNTS.:E05TSI                  TUE 07/29/97 21:27 Page:317  
     1827      918    1   DCL SIZE UBIN;                         /* Size of buffer                     */
     1828      919
     1829      920        /**/
     1830      921        /* Based */
     1831      922        /**/
     1832      923
     1833      924    1   DCL MEMORY UBIN BASED;
     1834      925    1   DCL BITMEM BIT(16) BASED ALIGNED;
     1835      926        %GD_BRKPNT(FPTN=BRKPNT,STCLASS=BASED);
     1836      943        %EJECT;
PL6.E3A0      #007=GDB$KILL_ALLBRKPNTS File=GDB$BRKPNTS.:E05TSI                  TUE 07/29/97 21:27 Page:318  
     1837      944        /* Put all the original instructions back. */
     1838      945
     1839      946    1           GD_DATA.GD.BRK$ = ADDR(NIL);
     1840      947    1           GD_DATA.GD.BRKNUM = 0;
     1841      948    1           BRK$ = ADDR(GD_DATA.MYSPACE(0));
     1842      949    2           DO WHILE BRK$ ~= ADDR(NIL);
     1843      950    3              IF BRK$->BRKPNT.FLAGS.ARMED THEN DO;
     1844      951    3                 ADR$ = BRK$->BRKPNT.ADR$;
     1845      952    3                 CALL GDU$SETUP_WINDOW_USER(ADR$,BRK$->BRKPNT.USER#)
     1846      953    4                    WHENRETURN DO;
     1847      954    4                       ADR$->MEMORY = BRK$->BRKPNT.OLDINST;
     1848      955    4                      END /* WHENRETURN */;
     1849      956    3                END /* PUT BACK THE ORIGINAL INSTRUCTION */;
     1850      957    2              BRK$ = BRK$->BRKPNT.FLINK$;
     1851      958    2             END /* WHILE THERE ARE MORE BREAKPOINTS */;
     1852      959
     1853      960        /* Set DYNSP$ to the beginning of the dynamic space in GD_DATA and zero out
     1854      961           the whole area. */
     1855      962
     1856      963    1           GD_DATA.GD.DYNSP$ = ADDR(GD_DATA.MYSPACE(0));
     1857      964    1           GD_DATA.MYSPACE = '0'B;
     1858      965    1           GD_DATA.GD.ONCALLS_BRK$=ADDR(NIL);
     1859      966    1           GD_DATA.GD.ONCALLS = '0'B;
     1860      967    1           GD_DATA.GD.OC_BRKNUM=0;
     1861      968    1           GD_DATA.GD.BRKNUM = 0;
     1862      969    1           GD_DATA.GD.BRK$ = ADDR(NIL);
     1863      970
     1864      971    1           RETURN;
     1865      972
     1866      973    1   END GDB$KILL_ALLBRKPNTS;

PL6.E3A0      #007=GDB$KILL_ALLBRKPNTS File=GDB$BRKPNTS.:E05TSI                  TUE 07/29/97 21:27 Page:319  
--  Include file information  --

   GD_BRKPNT_M.:E05TOU  is referenced.
   KH$CHN.:E05TOU  is referenced.
   GD$MACS_M.:E05TOU  is referenced.
   GD$MSG_M.:E05TOU  is referenced.
   GDA_EQUS_E.:E05TOU  is referenced.
   GD_EQUS_E.:E05TOU  is referenced.
   GD_DATA_M.:E05TOU  is referenced.
   GD_STATIC_DATA.:E05TOU  cannot be made into a system file and is referenced.
   LCP_6.:E05TOU  cannot be made into a system file and is referenced.
   G_LCP6_E.:E05TOU  was found in the system file and is referenced.
   GT_LCP6_M.:E05TOU  was found in the system file and is referenced.
   KI_CP6.:E05TOU  was found in the system file and is referenced.
   GF_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GM_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GU_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GJ_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GH_LCP6_M.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure GDB$KILL_ALLBRKPNTS.

   Procedure GDB$KILL_ALLBRKPNTS requires 106 words for executable code.
   Procedure GDB$KILL_ALLBRKPNTS requires 16 words of local(AUTO) storage.

    No errors detected in file GDB$BRKPNTS.:E05TSI    .

PL6.E3A0      #007=GDB$KILL_ALLBRKPNTS File=GDB$BRKPNTS.:E05TSI                  TUE 07/29/97 21:27 Page:320  

 Object Unit name= GDB$KILL_ALLBRKPNTS                        File name= GDB$BRKPNTS.:E05TOU
 UTS= JUL 29 '97 21:27:57.56 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_LCP6_SYSTEM                               Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size HexSiz  Section name
    0   Proc  even  none   106     6A  GDB$KILL_ALLBRKPNTS
    1  RoData even  none     1      1  GDB$KILL_ALLBRKPNTS

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect HexLoc Primary Altret sequence   type   Parms  Name
     0      0   yes            yes      Std        0  GDB$KILL_ALLBRKPNTS

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       2 GDU$SETUP_WINDOW_USER
                       nStd      0 X6A_AUTO_0
                       nStd      0 X6C_ALRZ
                       nStd      0 X6A_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     GD$DELTA_DATA$                   r    G$ROS$
PL6.E3A0      #007=GDB$KILL_ALLBRKPNTS File=GDB$BRKPNTS.:E05TSI                  TUE 07/29/97 21:27 Page:321  


     1784        1        /*T***********************************************************/
     1785        2        /*T*                                                         */
     1786        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
     1787        4        /*T*                                                         */
     1788        5        /*T***********************************************************/
     1789        6        %EJECT;
PL6.E3A0      #007=GDB$KILL_ALLBRKPNTS File=GDB$BRKPNTS.:E05TSI                  TUE 07/29/97 21:27 Page:322  
     1790        7        /*F*     NAME:     GDB$KILL_ALLBRKPNTS
     1791        8                 PURPOSE:  To kill all breakpoints in the table
     1792        9                 CALL:     CALL GDB$KILL_ALLBRKPNTS
     1793       10                 DESCRIPTION:  This routine just restores all breakpoints
     1794       11                               in memory to their original contents and zaps
     1795       12                               the table.
     1796       13                                                                                     */
     1797       14        GDB$KILL_ALLBRKPNTS: PROC;

     14   0 000000  D380 0000 0000  xent GDB$KILL_ALLBRK*LNJ,B5   X6A_AUTO_0
          0 000003       0010 0000                       DC       16,0

     1798       15
     1799       16        /**/
     1800       17        /* Includes */
     1801       18        /**/
     1802       19
     1803       20        %INCLUDE LCP_6;                        /* Various LCP6 EQUs                  */
     1804      211        %INCLUDE GD_STATIC_DATA;
     1805      684        %INCLUDE GD$MACS_M;                    /* Various debugger macros            */
     1806      722        %INCLUDE KH$CHN;
     1807      844        %INCLUDE GD_BRKPNT_M;
     1808      899
     1809      900        /**/
     1810      901        /* Symrefs */
     1811      902        /**/
     1812      903
     1813      904        /**/
     1814      905        /* Entries */
     1815      906        /**/
     1816      907
     1817      908    1   DCL GDI$SEND_ERROR_RESPONSE ENTRY(3);
     1818      909    1   DCL GDU$SETUP_WINDOW_USER ENTRY(2) ALTRET;
     1819      910
     1820      911        /**/
     1821      912        /* Temps */
     1822      913        /**/
PL6.E3A0      #007=GDB$KILL_ALLBRKPNTS File=GDB$BRKPNTS.:E05TSI                  TUE 07/29/97 21:27 Page:323  
     1823      914
     1824      915    1   DCL BRK$ PTR;
     1825      916    1   DCL ADR$ PTR;
     1826      917    1   DCL BUFFER CHAR(6) ALIGNED;            /* Message buffer                     */
     1827      918    1   DCL SIZE UBIN;                         /* Size of buffer                     */
     1828      919
     1829      920        /**/
     1830      921        /* Based */
     1831      922        /**/
     1832      923
     1833      924    1   DCL MEMORY UBIN BASED;
     1834      925    1   DCL BITMEM BIT(16) BASED ALIGNED;
     1835      926        %GD_BRKPNT(FPTN=BRKPNT,STCLASS=BASED);
     1836      943        %EJECT;
PL6.E3A0      #007=GDB$KILL_ALLBRKPNTS File=GDB$BRKPNTS.:E05TSI                  TUE 07/29/97 21:27 Page:324  
     1837      944        /* Put all the original instructions back. */
     1838      945
     1839      946    1           GD_DATA.GD.BRK$ = ADDR(NIL);

    946   0 000005  EB80 0000 0000                       LAB,B6   0
          0 000008  DC80 0000 0000  xsym                 LDB,B5   GD$DELTA_DATA$
          0 00000B  EFC5 0159                            STB,B6   345,B5

     1840      947    1           GD_DATA.GD.BRKNUM = 0;

    947   0 00000D  8745 0158                            CL       344,B5

     1841      948    1           BRK$ = ADDR(GD_DATA.MYSPACE(0));

    948   0 00000F  CBC5 01AE                            LAB,B4   430,B5
          0 000011  CFC7 0004                            STB,B4   BRK$,AUTO

     1842      949    2           DO WHILE BRK$ ~= ADDR(NIL);

    949   0 000013  0F81 0028                            B        s:958,PREL

     1843      950    3              IF BRK$->BRKPNT.FLAGS.ARMED THEN DO;

    950   0 000015  ECC7 0004                            LDB,B6   BRK$,AUTO
          0 000017  82C6 000A                            LB,'4000'X        10,B6
          0 000019       4000
          0 00001A  0581 001C                            BBF      s:957,PREL

     1844      951    3                 ADR$ = BRK$->BRKPNT.ADR$;

    951   0 00001C  DCC6 0005                            LDB,B5   5,B6
          0 00001E  DFC7 0006                            STB,B5   ADR$,AUTO

     1845      952    3                 CALL GDU$SETUP_WINDOW_USER(ADR$,BRK$->BRKPNT.USER#)

    952   0 000020  CBC6 0008                            LAB,B4   8,B6
          0 000022  CFC7 000E                            STB,B4   ADR$+8,AUTO
PL6.E3A0      #007=GDB$KILL_ALLBRKPNTS File=GDB$BRKPNTS.:E05TSI                  TUE 07/29/97 21:27 Page:325  
          0 000024  BBC7 0006                            LAB,B3   ADR$,AUTO
          0 000026  BFC7 000C                            STB,B3   ADR$+6,AUTO
          0 000028  BBC7 000C                            LAB,B3   ADR$+6,AUTO
          0 00002A  CBF0 0200                            LAB,B4   512,IMO
          0 00002C  E380 0000 0000  xent                 LNJ,B6   GDU$SETUP_WINDOW_USER
          0 00002F       0008                            DC       s:957,PREL

     1846      953    4                    WHENRETURN DO;

     1847      954    4                       ADR$->MEMORY = BRK$->BRKPNT.OLDINST;

    954   0 000030  ECC7 0006                            LDB,B6   ADR$,AUTO
          0 000032  DCC7 0004                            LDB,B5   BRK$,AUTO
          0 000034  E845 0007                            LDR,R6   7,B5
          0 000036  EF06                                 STR,R6   ,B6

     1848      955    4                      END /* WHENRETURN */;

     1849      956    3                END /* PUT BACK THE ORIGINAL INSTRUCTION */;

     1850      957    2              BRK$ = BRK$->BRKPNT.FLINK$;

    957   0 000037  ECC7 0004                            LDB,B6   BRK$,AUTO
          0 000039  DC86                                 LDB,B5   ,B6
          0 00003A  DFC7 0004                            STB,B5   BRK$,AUTO

     1851      958    2             END /* WHILE THERE ARE MORE BREAKPOINTS */;

    958   0 00003C  8DC7 0004                            CMN      BRK$,AUTO
          0 00003E  09D7                                 BNE      s:950,SPREL

     1852      959
     1853      960        /* Set DYNSP$ to the beginning of the dynamic space in GD_DATA and zero out
     1854      961           the whole area. */
     1855      962
     1856      963    1           GD_DATA.GD.DYNSP$ = ADDR(GD_DATA.MYSPACE(0));

PL6.E3A0      #007=GDB$KILL_ALLBRKPNTS File=GDB$BRKPNTS.:E05TSI                  TUE 07/29/97 21:27 Page:326  
    963   0 00003F  EC80 0000 0000  xsym                 LDB,B6   GD$DELTA_DATA$
          0 000042  DBC6 01AE                            LAB,B5   430,B6
          0 000044  DFC6 0156                            STB,B5   342,B6

     1857      964    1           GD_DATA.MYSPACE = '0'B;

    964   0 000046  AB80 0000 0000  01                   LAB,B2   0
          0 000049  2C00                                 LDV,R2   0
          0 00004A  6C01                                 LDV,R6   1
          0 00004B  BBC6 01AE                            LAB,B3   430,B6
          0 00004D  3C00                                 LDV,R3   0
          0 00004E  F870 04CC                            LDR,R7   1228,IMO
          0 000050  D380 0000 0000  xent                 LNJ,B5   X6C_ALRZ

     1858      965    1           GD_DATA.GD.ONCALLS_BRK$=ADDR(NIL);

    965   0 000053  EB80 0000 0000                       LAB,B6   0
          0 000056  DC80 0000 0000  xsym                 LDB,B5   GD$DELTA_DATA$
          0 000059  EFC5 0135                            STB,B6   309,B5

     1859      966    1           GD_DATA.GD.ONCALLS = '0'B;

    966   0 00005B  8845 014C                            LBF,'1000'X       332,B5
    966   0 00005D       1000

     1860      967    1           GD_DATA.GD.OC_BRKNUM=0;

    967   0 00005E  8745 0131                            CL       305,B5

     1861      968    1           GD_DATA.GD.BRKNUM = 0;

    968   0 000060  8745 0158                            CL       344,B5

     1862      969    1           GD_DATA.GD.BRK$ = ADDR(NIL);

    969   0 000062  CB80 0000 0000                       LAB,B4   0
          0 000065  CFC5 0159                            STB,B4   345,B5
PL6.E3A0      #007=GDB$KILL_ALLBRKPNTS File=GDB$BRKPNTS.:E05TSI                  TUE 07/29/97 21:27 Page:327  

     1863      970
     1864      971    1           RETURN;

    971   0 000067  C380 0000 0000  xent                 LNJ,B4   X6A_ARET
     1865      972
     1866      973    1   END GDB$KILL_ALLBRKPNTS;

PL6.E3A0      #007=GDB$KILL_ALLBRKPNTS File=GDB$BRKPNTS.:E05TSI                  TUE 07/29/97 21:27 Page:328  
--  Include file information  --

   GD_BRKPNT_M.:E05TOU  is referenced.
   KH$CHN.:E05TOU  is referenced.
   GD$MACS_M.:E05TOU  is referenced.
   GD$MSG_M.:E05TOU  is referenced.
   GDA_EQUS_E.:E05TOU  is referenced.
   GD_EQUS_E.:E05TOU  is referenced.
   GD_DATA_M.:E05TOU  is referenced.
   GD_STATIC_DATA.:E05TOU  cannot be made into a system file and is referenced.
   LCP_6.:E05TOU  cannot be made into a system file and is referenced.
   G_LCP6_E.:E05TOU  was found in the system file and is referenced.
   GT_LCP6_M.:E05TOU  was found in the system file and is referenced.
   KI_CP6.:E05TOU  was found in the system file and is referenced.
   GF_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GM_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GU_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GJ_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GH_LCP6_M.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure GDB$KILL_ALLBRKPNTS.
PL6.E3A0      #007=GDB$KILL_ALLBRKPNTS File=GDB$BRKPNTS.:E05TSI                  TUE 07/29/97 21:27 Page:329  

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     6-0-0/w PTR         r     1 ADR$                       4-0-0/w PTR         r     1 BRK$

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 GD$DELTA_DATA$

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(176)   r     1 BRKPNT                     0-0-0/w STRC(16704) r     1 GD_DATA
     0-0-0/w UBIN(16)    r     1 MEMORY


   Procedure GDB$KILL_ALLBRKPNTS requires 106 words for executable code.
   Procedure GDB$KILL_ALLBRKPNTS requires 16 words of local(AUTO) storage.

    No errors detected in file GDB$BRKPNTS.:E05TSI    .
PL6.E3A0      #007=GDB$KILL_ALLBRKPNTS File=GDB$BRKPNTS.:E05TSI                  TUE 07/29/97 21:27 Page:330  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #007=GDB$KILL_ALLBRKPNTS File=GDB$BRKPNTS.:E05TSI                  TUE 07/29/97 21:27 Page:331  
          MINI XREF LISTING

ADR$
       916**DCL       951<<ASSIGN    952<>CALL      954>>ASSIGN
BRK$
       915**DCL       948<<ASSIGN    949>>DOWHILE   950>>IF        951>>ASSIGN    952>>CALL      954>>ASSIGN
       957<<ASSIGN    957>>ASSIGN
BRKPNT.ADR$
       939**DCL       939--REDEF     951>>ASSIGN
BRKPNT.FLAGS.ARMED
       940**DCL       950>>IF
BRKPNT.FLINK$
       939**DCL       957>>ASSIGN
BRKPNT.OLDINST
       940**DCL       954>>ASSIGN
BRKPNT.USER#
       940**DCL       952<>CALL
GD$DELTA_DATA$
       637**DCL       651--IMP-PTR   946>>ASSIGN    947>>ASSIGN    948>>ASSIGN    963>>ASSIGN    963>>ASSIGN
       964>>ASSIGN    965>>ASSIGN    966>>ASSIGN    967>>ASSIGN    968>>ASSIGN    969>>ASSIGN
GDU$SETUP_WINDOW_USER
       909**DCL-ENT   952--CALL
GD_DATA.GD.BRK$
       665**DCL       946<<ASSIGN    969<<ASSIGN
GD_DATA.GD.BRKNUM
       665**DCL       947<<ASSIGN    968<<ASSIGN
GD_DATA.GD.DYNSP$
       664**DCL       664--REDEF     963<<ASSIGN
GD_DATA.GD.OC_BRKNUM
       655**DCL       967<<ASSIGN
GD_DATA.GD.ONCALLS
       659**DCL       966<<ASSIGN
GD_DATA.GD.ONCALLS_BRK$
       655**DCL       965<<ASSIGN
PL6.E3A0      #007=GDB$KILL_ALLBRKPNTS File=GDB$BRKPNTS.:E05TSI                  TUE 07/29/97 21:27 Page:332  
GD_DATA.GD.STEP_BRKPNT.ADR$
       665**DCL       666--REDEF
GD_DATA.GD.STEP_BRKPNT.START$
       666**DCL       666--REDEF
GD_DATA.MYSPACE
       682**DCL       948--ASSIGN    963--ASSIGN    964<<ASSIGN
MEMORY
       924**DCL       954<<ASSIGN
