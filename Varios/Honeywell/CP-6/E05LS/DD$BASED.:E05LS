

14:19 JUL 28 '97 DD$BASED.:E05SI                                           1    
    1      /*M* DD$BASED Macros for DELTA's based structures */
    2      /*T***********************************************************/
    3      /*T*                                                         */
    4      /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
    5      /*T*                                                         */
    6      /*T***********************************************************/
    7      /*X* DMR,DFC,PLM=5,IND=5,CSU=3,EXM=0,ECU=3,MOC,DCI=5,CRT=5 */
    8      /*D* NAME: DD$BASED
    9           DESCRIPTION: Macros for DELTA's based structures */
   10
   11      /* FIXCOM - FIXED LENGTH COMMAND TABLE */
   12
   13      %MACRO FIXCOM (NAME=FIXCOM,STCLASS=BASED);
   14      DCL 1 NAME STCLASS ALIGNED,             /* FIXED LENGTH COMMAND TABLE */
   15            2 CMD UBIN(9) UNAL,               /* COMMAND CODE */
   16            2 INACTIVE BIT(1) UNAL,           /* 0 = ACTIVE, 1 = INACTIVE */
   17            2 SILENT BIT(1) UNAL,             /* 0 = NORMAL, 1 = SILENT */
   18            2 NOT_IN BIT(1) UNAL,        /* 0 = NODE IN MEM, 1 = NODE NOT IN MEM */
   19            2 * BIT(4) UNAL,                  /* UNUSED */
   20            2 FPRG BIT(1) UNAL,               /* 0 = Normal, 1 = FPRG breakpoint */
   21            2 USER BIT(1) UNAL,               /* 0=NORMAL, 1=NOT MON (XD ONLY) */
   22            2 TAL UBIN(18) UNAL,              /* TOTAL ATTACHMENTS LENGTH */
   23            2 CDF UBIN UNAL,                  /* COMMAND DEPENDENT FIELD */
   24            2 * UBIN HALF UNAL,
   25            2 FAI UBIN(18) UNAL,              /* FIRST ATTACHMENT INDEX */
   26            2 FPRG_RES CHAR(8) UNAL, /* RES for FPRG associated with this breakpoint */
   27            2 FPRG_RES_SIZE UBIN UNAL;        /* Size of RES */
   28      %MEND;
   29
   30      /* FIRST ATTACHMENT DEFINITIONS */
   31
   32      /* ALL_ATTACH - TEMPLATE FOR FIELDS COMMON TO ALL ATTACHMENTS */
   33
   34      %MACRO ALL_ATTACH (NAME=ALL_ATTACH,STCLASS=BASED);
   35      DCL 1 NAME STCLASS ALIGNED,        /* ALL_ATTACH - COMMON ATTACHMENT FIELDS*/
   36            2 CMD UBIN(9) UNAL,               /* COMMAND CODE */
   37            2 CID UBIN(9) UNAL,               /* COMMAND IN FIXCOM */
14:19 JUL 28 '97 DD$BASED.:E05SI                                           2    
   38            2 LENGTH UBIN(18) UNAL,           /* ATTACHMENT LENGTH */
   39            2 UNUSED BIT(27) UNAL,            /* UNUSED */
   40            2 U REDEF UNUSED,       /* FOR STORED COMMANDS THAT USE "USE" COMMAND */
   41              3 APT UBIN(18) UNAL,            /* ADDRESS OF PAGE TABLE*/
   42              3 LS UBIN(3) UNAL,              /* LINKAGE SEGMENT */
   43              3 * BIT(6) UNAL,                /* UNUSED */
   44            2 USERNO REDEF UNUSED UBIN(27) UNAL, /* User number for L6 XDELTA */
   45            2 SACT BIT(1) UNAL,               /* Special act char flag */
   46            2 CTYPE UBIN(5) UNAL,             /* CONDITION TYPE */
   47            2 COND UBIN(3) UNAL;              /* CONDITION */
   48      %MEND;
   49
   50      /* IFSPEC CONDITION VALUE TEMPLATE */
   51
   52      %MACRO IF$CONST (NAME=IF$CONST,STCLASS=BASED);
   53      DCL 1 NAME STCLASS ALIGNED,             /* IFSPEC CONDITION VALUE TEMPLATE */
   54            2 SIZE UBIN(9) UNAL,              /* SIZE IN NATURAL UNITS */
   55            2 EXP REDEF SIZE SBIN(9) UNAL,    /* UNPACKED DECIMAL EXPONENT */
   56            2 TEXT CHAR(63) UNAL,             /* TEXT OR UNPACKED DECIMAL */
   57            2 TEXTA(0:62) REDEF TEXT CHAR(1),
   58            2 TEXTA8(0:62) REDEF TEXT,
   59              3 * BIT(1),
   60              3 BYT UBIN(8) UNAL,
   61              3 BYTB REDEF BYT BIT(8) UNAL,
   62            2 CONS REDEF TEXT,                /* DECIMAL OR .OCTAL CONSTANT */
   63              3 * CHAR(3) UNAL,               /* UNUSED */
   64              3 TANT SBIN UNAL,               /* CONSTANT VALUE */
   65              3 TANTB REDEF TANT BIT(36) UNAL,
   66              3 * CHAR(56) UNAL,              /* UNUSED */
   67            2 BITS REDEF TEXT,                /* BIT STRING OR FORTRAN REAL */
   68              3 * CHAR(3) UNAL,               /* UNUSED */
   69              3 TRING BIT(72) UNAL,           /* CONSTANT VALUE */
   70              3 * CHAR(52) UNAL,              /* UNUSED */
   71            2 P REDEF TEXT,                   /* POINTER CONSTANT */
   72              3 * CHAR(3) UNAL,               /* UNUSED */
   73              3 ADR,
   74                4 W UBIN(18) UNAL,            /* WORD */
14:19 JUL 28 '97 DD$BASED.:E05SI                                           3    
   75                4 C UBIN(2) UNAL,             /* CHARACTER */
   76                4 B UBIN(4) UNAL,             /* BIT */
   77              3 ADR6 REDEF ADR,
   78                4 W UBIN(20) UNAL,            /* WORD */
   79                4 C UBIN(1) UNAL,             /* BYTE */
   80                4 * UBIN(3) UNAL,             /* UNUSED */
   81              3 S UBIN(2) UNAL,               /* SEGID */
   82              3 D UBIN(10) UNAL,              /* DESCRIPTOR NUMBER */
   83              3 * CHAR(56) UNAL,              /* UNUSED */
   84            2 COMP REDEF TEXT,                /* COMPLEX CONSTANT */
   85              3 * CHAR(3) UNAL,               /* UNUSED */
   86              3 LEX1 BIT(72) UNAL,            /* REAL PART */
   87              3 LEX2 BIT(72) UNAL,            /* IMAGINARY PART */
   88              3 * CHAR(44) UNAL;              /* UNUSED */
   89      %MEND;
   90
   91      /* IFSPEC CONDITION VALUE TEMPLATE FOR L6 BREAKPOINTS */
   92
   93      %MACRO IF$CONST_L6 (NAME=IF$CONST_L6,STCLASS=BASED);
   94      DCL 1 NAME STCLASS ALIGNED, /* IFSPEC CONDITION VALUE TEMPLATE FOR L6 BREAKPOINTS */
   95            2 SIZE UBIN(8) UNAL,              /* SIZE IN NATURAL UNITS */
   96            2 EXP REDEF SIZE SBIN(8) UNAL,    /* UNPACKED DECIMAL EXPONENT */
   97            2 TEXT(0:62) UBIN(8) UNAL,
   98            2 CONS REDEF TEXT,                /* DECIMAL OR .OCTAL CONSTANT */
   99              3 * UBIN(8) UNAL,               /* UNUSED */
  100              3 TANT SBIN(32) UNAL,           /* CONSTANT VALUE */
  101              3 * (0:57) UBIN(8) UNAL,        /* UNUSED */
  102            2 BITS REDEF TEXT,                /* BIT STRING OR FORTRAN REAL */
  103              3 * UBIN(8) UNAL,               /* UNUSED */
  104              3 TRING (0:1) BIT(32) UNAL,     /* CONSTANT VALUE */
  105              3 * (0:53) UBIN(8) UNAL,        /* UNUSED */
  106            2 P REDEF TEXT,                   /* POINTER CONSTANT */
  107              3 * UBIN(19) UNAL,              /* UNUSED */
  108              3 POINTER UBIN(20) UNAL,        /* WORD */
  109              3 B UBIN(1) UNAL,               /* BYTE */
  110              3 * (0:57) UBIN(8) UNAL,        /* UNUSED */
  111            2 COMP REDEF TEXT,                /* COMPLEX CONSTANT */
14:19 JUL 28 '97 DD$BASED.:E05SI                                           4    
  112              3 * UBIN(8) UNAL,               /* UNUSED */
  113              3 LEX1 (0:1) BIT(32) UNAL,      /* REAL PART */
  114              3 LEX2 (0:1) BIT(32) UNAL,      /* IMAGINARY PART */
  115              3 * (0:45) UBIN(8) UNAL;        /* UNUSED */
  116      %MEND;
  117
  118      /* AT - FIRST ATTACHMENT */
  119
  120      %MACRO AT_FIRST (NAME=AT_FIRST,STCLASS=BASED);
  121      DCL 1 NAME STCLASS ALIGNED,             /* AT - FIRST ATTACHMENT */
  122            2 CMD UBIN(9) UNAL,               /* COMMAND CODE */
  123            2 CID UBIN(9) UNAL,               /* COMMAND IN FIXCOM */
  124            2 LENGTH UBIN(18) UNAL,           /* ATTACHMENT LENGTH */
  125            2 UNUSED BIT(27) UNAL,            /* UNUSED */
  126            2 U REDEF UNUSED,       /* FOR STORED COMMANDS THAT USE "USE" COMMAND */
  127              3 APT UBIN(18) UNAL,            /* ADDRESS OF PAGE TABLE*/
  128              3 LS UBIN(3) UNAL,              /* LINKAGE SEGMENT */
  129              3 * BIT(6) UNAL,                /* UNUSED */
  130            2 USERNO REDEF UNUSED UBIN(27) UNAL, /* User number for L6 XDELTA */
  131            2 SACT BIT(1) UNAL,               /* Special act char flag */
  132            2 CTYPE UBIN(5) UNAL,             /* CONDITION TYPE */
  133            2 COND UBIN(3) UNAL,              /* CONDITION */
  134            2 ORIG_INSTR UBIN(36) UNAL,       /* ORIGINAL INSTRUCTION */
  135      /*D* NODE is in the same place for AT & WHEN */
  136            2 NODE UBIN(18) UNAL,             /* NODE */
  137            2 XTERNAL BIT(1) UNAL,            /* ONCALLS EXTERNAL FLAG */
  138            2 * BIT(17) UNAL,
  139      /*D* BYPASS & CURRENT COUNTS are in the same place for AT & WHEN */
  140            2 BYPASS_COUNT SBIN UNAL,         /* BYPASS COUNT */
  141            2 CURRENT_COUNT SBIN UNAL,        /* CURRENT COUNT */
  142      /*D* TEXT_OFFSET, TEXT_SIZE, ATT_OFFSET & IF_OFFSET are in the same place for AT & WHEN */
  143            2 TEXT_OFFSET UBIN HALF HALIGNED, /* CHAR OFFSET TO CMD TEXT */
  144            2 TEXT_SIZE UBIN HALF HALIGNED,   /* CMD TEXT SIZE IN CHARS */
  145            2 ATT_OFFSET UBIN HALF HALIGNED, /* CHAR OFFSET TO ATTACHMENTS, RELATIVE TO TEXT_OFFSET */
  146            2 IF_OFFSET UBIN HALF HALIGNED; /* CHAR OFFSET TO IFSPEC TEXT, RELATIVE TO TEXT_OFFSET */
  147      %MEND;
  148
14:19 JUL 28 '97 DD$BASED.:E05SI                                           5    
  149      /* WHEN - FIRST ATTACHMENT */
  150
  151      %MACRO WHEN_FIRST (NAME=WHEN_FIRST,STCLASS=BASED);
  152      DCL 1 NAME STCLASS ALIGNED,             /* WHEN - FIRST ATTACHMENT */
  153            2 CMD UBIN(9) UNAL,               /* COMMAND CODE */
  154            2 CID UBIN(9) UNAL,               /* COMMAND IN FIXCOM */
  155            2 LENGTH UBIN(18) UNAL,           /* ATTACHMENT LENGTH */
  156            2 UNUSED BIT(27) UNAL,            /* UNUSED */
  157            2 U REDEF UNUSED,       /* FOR STORED COMMANDS THAT USE "USE" COMMAND */
  158              3 APT UBIN(18) UNAL,            /* ADDRESS OF PAGE TABLE*/
  159              3 CONST_OFFSET REDEF APT UBIN(18) UNAL, /* WORD OFFSET TO WHEN CONSTANT FRAME */
  160              3 LS UBIN(3) UNAL,              /* LINKAGE SEGMENT */
  161              3 * BIT(6) UNAL,                /* UNUSED */
  162            2 SACT BIT(1) UNAL,               /* Special act char flag */
  163            2 CTYPE UBIN(5) UNAL,             /* CONDITION TYPE */
  164            2 COND UBIN(3) UNAL,              /* IF SPEC CONDITION */
  165            2 OVALUE$ PTR UNAL,               /* PTR TO ORIGINAL VALUE BLOCK */
  166      /*D* NODE is in the same place for AT & WHEN */
  167            2 NODE UBIN HALF UNAL,            /* NODE */
  168            2 OVALUE_SIZE UBIN HALF UNAL,     /* SIZE OF ORIGINAL VALUE BLOCK */
  169      /*D* BYPASS & CURRENT COUNTS are in the same place for AT & WHEN */
  170            2 BYPASS_COUNT SBIN UNAL,         /* BYPASS COUNT */
  171            2 CURRENT_COUNT SBIN UNAL,        /* CURRENT COUNT */
  172      /*D* TEXT_OFFSET, TEXT_SIZE, ATT_OFFSET & IF_OFFSET are in the same place for AT & WHEN */
  173            2 TEXT_OFFSET UBIN HALF HALIGNED, /* CHAR OFFSET TO CMD TEXT */
  174            2 TEXT_SIZE UBIN HALF HALIGNED,   /* CMD TEXT SIZE IN CHARS */
  175            2 ATT_OFFSET UBIN HALF HALIGNED, /* CHAR OFFSET TO ATTACHMENTS, RELATIVE TO TEXT_OFFSET */
  176            2 IF_OFFSET UBIN HALF HALIGNED, /* CHAR OFFSET TO IFSPEC TEXT, RELATIVE TO TEXT_OFFSET */
  177            2 WCTYPE UBIN UNAL,               /* WHEN CONDITION TYPE */
  178            2 WCOND UBIN UNAL,                /* WHEN CONDITION */
  179            2 ADDRESS UBIN,                   /* FROM EVAL */
  180            2 SEG UBIN,                       /*  "    "   */
  181            2 DESC# UBIN,                     /*  "    "   */
  182            2 NOT_IS BIT(1) ALIGNED,          /*  "    " FOR 2ND RELEASE (HA HA) */
  183            2 BSIZE UBIN,                     /*  "    " BIT SIZE OF ITEM */
  184            2 BOFF UBIN,                      /*  "    " BIT OFFSET FROM ADDRESS */
  185            2 START_PAGE UBIN HALF UNAL, /* VIRTUAL PAGE CONTAINING START OF VARIABLE*/
14:19 JUL 28 '97 DD$BASED.:E05SI                                           6    
  186            2 END_PAGE UBIN HALF UNAL;   /* VIRTUAL PAGE CONTAINING END OF VARIABLE*/
  187      %MEND;
  188
  189      /* DEFINITIONS OF ATTACHMENTS AFTER THE FIRST ATTACHMENT */
  190
  191      /* ACTIVE, INACTIVE, SILENT, UNSILENT, LIST COMMAND TEMPLATES */
  192
  193      %MACRO ACTIVE$CMD (NAME=ACTIVE$CMD, STCLASS=BASED);
  194      DCL 1 NAME STCLASS ALIGNED,             /* ACTIVE COMMAND TEMPLAT */
  195            2 CMD UBIN(9) UNAL,               /* COMMAND CODE */
  196            2 CID UBIN(9) UNAL,               /* COMMAND IN FIXCOM */
  197            2 LENGTH UBIN(18) UNAL,           /* ATTACHMENT LENGTH */
  198            2 ID_FROM UBIN(9) UNAL,           /* STARTING INDEX */
  199            2 ID_TO UBIN(9) UNAL,             /* ENDING INDEX */
  200            2 LIST_ALL BIT(1) UNAL,
  201            2 * BIT(8) UNAL,
  202            2 SACT BIT(1) UNAL,               /* Special act char flag */
  203            2 CTYPE UBIN(5) UNAL,             /* CONDITION TYPE */
  204            2 COND UBIN(3);                   /* CONDITION */
  205      %MEND;
  206
  207      /* ALIB command template */
  208
  209      %MACRO ALIB$CMD (NAME=ALIB$CMD, STCLASS=BASED);
  210      DCL 1 NAME STCLASS ALIGNED,             /* ALIB command template */
  211            2 CMD UBIN(9) UNAL,               /* COMMAND CODE */
  212            2 CID UBIN(9) UNAL,               /* COMMAND IN FIXCOM */
  213            2 LENGTH UBIN(18) UNAL,           /* ATTACHMENT LENGTH */
  214            2 CODE UBIN(9) UNAL,              /* MAJOR CODE (RET,ALT) */
  215            2 SUBCODE UBIN(9) UNAL,           /* SUBCODE (KEEP) */
  216            2 * BIT(9) UNAL,
  217            2 SACT BIT(1) UNAL,               /* Special act char flag */
  218            2 CTYPE UBIN(5) UNAL,             /* CONDITION TYPE */
  219            2 COND UBIN(3);                   /* CONDITION */
  220      %MEND;
  221
  222      /* ANLZ COMMAND TEMPLATE */
14:19 JUL 28 '97 DD$BASED.:E05SI                                           7    
  223
  224      %MACRO ANLZ$CMD (NAME=ANLZ$CMD,STCLASS=BASED);
  225      DCL 1 NAME STCLASS ALIGNED,             /* ANLZ COMMAND TEMPLATE */
  226            2 CMD UBIN(9) UNAL,               /* COMMAND CODE */
  227            2 CID UBIN(9) UNAL,               /* COMMAND IN FIXCOM */
  228            2 LENGTH UBIN(18) UNAL,           /* ATTACHMENT LENGTH */
  229            2 FILE BIT(1) UNAL,               /* FID SPECIFIED */
  230            2 FILESCH BIT(1) UNAL,            /* SCHEMA FID SPECIFIED */
  231            2 RUNNING BIT(1) UNAL,            /* @ specified for fid. */
  232            2 FANLZ BIT(1) UNAL,              /* ANLZ FEP specified */
  233            2 * BIT(23) UNAL,                 /* UNUSED */
  234            2 SACT BIT(1) UNAL,               /* Special act char flag */
  235            2 CTYPE UBIN(5) UNAL,             /* CONDITION TYPE */
  236            2 COND UBIN(3) UNAL,              /* CONDITION */
  237            2 FID UNAL,                       /* FID TEXTC */
  238              3 SIZE UBIN(9) UNAL,
  239              3 TEXT CHAR(63) UNAL,
  240            2 RES REDEF FID UNAL,
  241              3 RES# CHAR(4) UNAL,
  242              3 * CHAR(60) UNAL,
  243            2 FIDSCH UNAL,                    /* SCHEMA FID TEXTC */
  244              3 SIZE UBIN(9) UNAL,
  245              3 TEXT CHAR(63) UNAL;
  246      %MEND;
  247
  248      /* DEBUG COMMAND TEMPLATE */
  249
  250      %MACRO DEBUG$CMD (NAME=DEBUG$CMD,STCLASS=BASED);
  251      DCL 1 NAME STCLASS ALIGNED,             /* DEBUG COMMAND TEMPLATE */
  252            2 CMD UBIN(9) UNAL,               /* COMMAND CODE */
  253            2 CID UBIN(9) UNAL,               /* COMMAND IN FIXCOM */
  254            2 LENGTH UBIN(18) UNAL,           /* ATTACHMENT LENGTH */
  255            2 SYSID# UBIN(18) UNAL,           /* Sysid value specified */
  256            2 * BIT(5) UNAL,                  /* UNUSED */
  257            2 FEP BIT(1) UNAL,                /* DEBUG FEP command specified */
  258            2 SYSID BIT(1) UNAL,              /* SYSID specified */
  259            2 CG BIT(1) UNAL,                 /* CG fid specified */
14:19 JUL 28 '97 DD$BASED.:E05SI                                           8    
  260            2 TPACCT BIT(1) UNAL,             /* TPACCT specified */
  261            2 SACT BIT(1) UNAL,               /* Special act char flag */
  262            2 CTYPE UBIN(5) UNAL,             /* CONDITION TYPE */
  263            2 COND UBIN(3) UNAL,              /* CONDITION */
  264            2 OPTARRY(0:35) BIT(1) UNAL,      /* Options bits */
  265            2 OPTIONS REDEF OPTARRY BIT(36),  /* Options word */
  266            2 STATION_FID UNAL,               /* Station or Fepname text */
  267              3 SIZE UBIN BYTE UNAL,
  268              3 TEXT CHAR(8) UNAL,
  269            2 CG_FID UNAL,                    /* COMGROUP fid text */
  270              3 SIZE UBIN BYTE UNAL,
  271              3 TEXT CHAR(63) UNAL;
  272      %MEND;
  273
  274      /* DEF COMMAND TEMPLATE */
  275
  276      %MACRO DEF$CMD (NAME=DEF$CMD,STCLASS=BASED);
  277      DCL 1 NAME STCLASS ALIGNED,             /* DEF COMMAND TEMPLATE */
  278            2 CMD UBIN(9) UNAL,               /* COMMAND CODE */
  279            2 CID UBIN(9) UNAL,               /* COMMAND IN FIXCOM */
  280            2 LENGTH UBIN(18) UNAL,           /* ATTACHMENT LENGTH */
  281            2 ALTVAR BIT(1) UNAL,             /* ALTVAR TEXT PRESENT */
  282            2 * BIT(26) UNAL,                 /* UNUSED */
  283            2 SACT BIT(1) UNAL,               /* Special act char flag */
  284            2 CTYPE UBIN(5) UNAL,             /* CONDITION TYPE */
  285            2 COND UBIN(3) UNAL,              /* CONDITION */
  286            2 TEXTC,                          /* TEXTC NAME */
  287              3 SIZE UBIN(9) UNAL,            /* COUNT */
  288              3 TEXT CHAR(31) UNAL;           /* TEXT */
  289      %MEND;
  290
  291      /* DISPLAY COMMAND TEMPLATE */
  292
  293      %MACRO DISPLAY (NAME=DISPLAY,STCLASS=BASED);
  294      DCL 1 NAME STCLASS ALIGNED,             /* DISPLAY COMMAND TEMPLATE */
  295            2 CMD UBIN(9) UNAL,               /* COMMAND CODE */
  296            2 CID UBIN(9) UNAL,               /* COMMAND IN FIXCOM */
14:19 JUL 28 '97 DD$BASED.:E05SI                                           9    
  297            2 LENGTH UBIN(18) UNAL,           /* ATTACHMENT LENGTH */
  298            2 * BIT(18) UNAL,                 /* UNUSED */
  299            2 NUM UBIN(9) UNAL,               /* NUMBER OF DISPLAY ITEMS */
  300            2 SACT BIT(1) UNAL,               /* Special act char flag */
  301            2 CTYPE UBIN(5) UNAL,             /* CONDITION TYPE */
  302            2 COND UBIN(3) UNAL;              /* CONDITION */
  303      %MEND;
  304
  305      /* DO COMMAND TEMPLATE */
  306
  307      %MACRO DOO (NAME=DOO,STCLASS=BASED,ID=ID);
  308      DCL 1 NAME STCLASS ALIGNED,             /* DOO COMMAND TEMPLATE */
  309            2 CMD UBIN(9) UNAL,               /* COMMAND CODE */
  310            2 CID UBIN(9) UNAL,               /* COMMAND IN FIXCOM */
  311            2 LENGTH UBIN(18) UNAL,           /* ATTACHMENT LENGTH */
  312            2 ID UBIN(18) UNAL,               /* ID TO DO */
  313            2 SETTYPE BIT(1) UNAL,            /* =1 IF SET TYPE, =0 IF STEP N */
  314      /*D* IF SETTYPE = '1'B, THEN ID IS TYPE OF STEPPING DESIRED.
  315           IF SETTYPE = '0'B, THEN ID IS NUMBER OF STEPS TO PERFORM. */
  316            2 DDESC BIT(1) UNAL,              /* Data Descriptor present */
  317            2 * BIT(7) UNAL,                  /* UNUSED */
  318            2 SACT BIT(1) UNAL,               /* Special act char flag */
  319            2 CTYPE UBIN(5) UNAL,             /* CONDITION TYPE */
  320            2 COND UBIN(3) UNAL;              /* CONDITION */
  321      %MEND;
  322
  323      /* DUMP COMMAND TEMPLATE */
  324
  325      %MACRO DUMP$CMD (NAME=DUMP$CMD,STCLASS=BASED);
  326      DCL 1 NAME STCLASS ALIGNED,             /* DUMP COMMAND TEMPLATE */
  327            2 CMD UBIN(9) UNAL,               /* COMMAND CODE */
  328            2 CID UBIN(9) UNAL,               /* COMMAND IN FIXCOM */
  329            2 LENGTH UBIN(18) UNAL,           /* ATTACHMENT LENGTH */
  330            2 HEADING BIT(1) UNAL,            /* HEADING PRESENT FLAG */
  331            2 FORMAT BIT(1) UNAL,             /* FORMAT CODE PRESENT FLAG */
  332            2 DEST BIT(1) UNAL,               /* DESTINATION PRESENT FLAG */
  333            2 ASCII_FLAG BIT(1) UNAL,         /* ASCII REQUESTED FLAG */
14:19 JUL 28 '97 DD$BASED.:E05SI                                           10   
  334            2 PAGE_EJECT BIT(1) UNAL,         /* PAGE EJECT REQUESTED */
  335            2 LONG BIT(1) UNAL,               /* LONG FORMAT REQUESTED */
  336            2 EBCDIC_FLAG BIT(1) UNAL,
  337            2 VREF BIT(1) UNAL,               /* LOC SPECIFIED (SEE DFA$DFMT) */
  338            2 * BIT(1) UNAL,
  339            2 FORMATCODE UBIN BYTE UNAL,      /* FORMAT CODE - UNNORMALIZED */
  340            2 * UBIN(9) UNAL,
  341            2 SACT BIT(1) UNAL,               /* Special act char flag */
  342            2 CTYPE UBIN(5) UNAL,             /* CONDITION TYPE */
  343            2 COND UBIN(3) UNAL,              /* CONDITION */
  344            2 DESTCODE UBIN UNAL,             /* DESTINATION CODE - UNNORMALIZED */
  345            2 NUM UBIN,                       /* NUMBER OF WORDS TO DUMP */
  346            2 FID UNAL,                       /* FID TEXTC, PRESENT IF DEST SET */
  347              3 SIZE UBIN BYTE UNAL,          /* TEXT SIZE */
  348              3 TEXT CHAR(63) UNAL;           /* ACTUAL FID TEXT */
  349      /*D* XDELTA: IF DEST
  350                   THEN DESTCODE = UNNORMALIZED DESTINATION (C@NO,LP,ME).
  351           DELTA:  IF DEST
  352                   THEN DESTCODE = UNNORMALIZED DISPOSITION (C@ON,OVER,INTO)
  353                                   AND FID IS DESTINATION FID. */
  354      %MEND;
  355
  356      /* EVAL COMMAND TEMPLATE */
  357
  358      %MACRO EVAL$CMD (NAME=EVAL$CMD,STCLASS=BASED);
  359      DCL 1 NAME STCLASS ALIGNED,             /* EVAL COMMAND TEMPLATE */
  360            2 CMD UBIN(9) UNAL,               /* COMMAND CODE */
  361            2 CID UBIN(9) UNAL,               /* COMMAND IN FIXCOM */
  362            2 LENGTH UBIN(18) UNAL,           /* ATTACHMENT LENGTH */
  363            2 INSTR BIT(1) UNAL,         /* INSTRUCTION PRESENT IN DATA DESCRIPTOR */
  364            2 DDESC BIT(1) UNAL,              /* DATA DESCRIPTOR PRESENT */
  365            2 IGNPR BIT(1) UNAL,              /* Ignore PR modification */
  366            2 AWDX BIT(1) UNAL,               /* AWDX type PR modification */
  367            2 * BIT(14) UNAL,
  368            2 FMT UBIN(9) UNAL,
  369            2 SACT BIT(1) UNAL,               /* Special act char flag */
  370            2 CTYPE UBIN(5) UNAL,             /* CONDITION TYPE */
14:19 JUL 28 '97 DD$BASED.:E05SI                                           11   
  371            2 COND UBIN(3) UNAL;              /* CONDITION */
  372      %MEND;
  373
  374      /* FIND, STORE COMMAND TEMPLATES */
  375
  376      %MACRO FIND$CMD (NAME=FIND$CMD,STCLASS=BASED);
  377      DCL 1 NAME STCLASS ALIGNED,             /* FIND   COMMAND TEMPLAT */
  378            2 CMD UBIN(9) UNAL,               /* COMMAND CODE */
  379            2 CID UBIN(9) UNAL,               /* COMMAND IN FIXCOM */
  380            2 LENGTH UBIN(18) UNAL,           /* ATTACHMENT LENGTH */
  381            2 INSTR BIT(1) UNAL,              /* INSTRUCTION FORMAT */
  382            2 FROM BIT(1) UNAL,               /* FROM VREF PRESENCE FLAG */
  383            2 UNDER BIT(1) UNAL,              /* UNDER VALUE PRESENCE FLAG */
  384            2 SUBS BIT(1) UNAL,               /* SUBS VREF PRESENCE FLAG */
  385            2 SUBSUNDER BIT(1) UNAL,          /* SUBS UNDER VALUE PRESENCE FLAG */
  386            2 SUBSINSTR BIT(1) UNAL,          /* SUBS VREF IS AN INSTRUCTION */
  387            2 SUBSFIRST BIT(1) UNAL,          /* SUBS FOUND FIRST */
  388            2 FROMFIRST BIT(1) UNAL,          /* FIND FOUND FIRST */
  389            2 NOTFLAG BIT(1) UNAL,            /* NOT FLAG */
  390            2 IGNPR BIT(1) UNAL,              /* Ignore PR modification */
  391            2 SUBSIGNPR BIT(1) UNAL,          /* Ignore PR modification */
  392            2 AWDX BIT(1) UNAL,               /* AWDX type PR modification */
  393            2 SUBSAWDX BIT(1) UNAL,           /* AWDX type PR modification */
  394            2 * BIT(14) UNAL,                 /* UNUSED */
  395            2 SACT BIT(1) UNAL,               /* Special act char flag */
  396            2 CTYPE UBIN(5) UNAL,             /* CONDITION TYPE */
  397            2 COND UBIN(3) UNAL,              /* CONDITION */
  398            2 NUM UBIN UNAL,                  /* NUMBER OF LOCATIONS TO SEARCH */
  399            2 UNDER_V UBIN UNAL,              /* UNDER (MASK) VALUE */
  400            2 SUBSUNDER_V UBIN UNAL;          /* SUBS UNDER (MASK) VALUE */
  401      %MEND;
  402
  403      /* FORMAT COMMAND TEMPLATE */
  404
  405      %MACRO FORMAT$CMD (NAME=FORMAT$CMD,STCLASS=BASED);
  406      DCL 1 NAME STCLASS ALIGNED,             /* FORMAT COMMAND TEMPLATE */
  407            2 CMD UBIN(9) UNAL,               /* COMMAND CODE */
14:19 JUL 28 '97 DD$BASED.:E05SI                                           12   
  408            2 CID UBIN(9) UNAL,               /* COMMAND IN FIXCOM */
  409            2 LENGTH UBIN(18) UNAL,           /* ATTACHMENT LENGTH */
  410            2 TYPE UBIN(9) UNAL,              /* EVAL OR MODIFY */
  411            2 FORMAT UBIN(9) UNAL,            /* FORMAT CODE */
  412            2 * BIT(9) UNAL,
  413            2 SACT BIT(1) UNAL,               /* Special act char flag */
  414            2 CTYPE UBIN(5) UNAL,             /* CONDITION TYPE */
  415            2 COND UBIN(3) UNAL;              /* CONDITION */
  416      %MEND;
  417
  418      /* GO COMMAND TEMPLATE */
  419
  420      %MACRO GO (NAME=GO,STCLASS=BASED);
  421      DCL 1 NAME STCLASS ALIGNED,             /* GO COMMAND TEMPLATE */
  422            2 CMD UBIN(9) UNAL,               /* COMMAND CODE */
  423            2 CID UBIN(9) UNAL,               /* COMMAND IN FIXCOM */
  424            2 LENGTH UBIN(18) UNAL,           /* ATTACHMENT LENGTH */
  425            2 * BIT(18) UNAL,                 /* FILLER */
  426            2 GOPOS BIT(1) UNAL,              /* POSITION SPECIFIED FLAG */
  427            2 STEP BIT(1) UNAL,               /* STEP SPECIFIED */
  428            2 TRAP BIT(1) UNAL,               /* TRAP SPECIFIED */
  429            2 ALL BIT(1) UNAL,                /* GO or GO ALL specified */
  430            2 HOST BIT(1) UNAL,               /* GO HOST specified */
  431            2 FPRG BIT(1) UNAL,               /* GO FPRG specified */
  432            2 * BIT(3),
  433            2 SACT BIT(1) UNAL,               /* Special act char flag */
  434            2 CTYPE UBIN(5) UNAL,             /* CONDITION TYPE */
  435            2 COND UBIN(3) UNAL,              /* CONDITION */
  436            2 POSITION UBIN UNAL,             /* POSITION (NEW IC) */
  437            2 FPRG_RES CHAR(8) UNAL;
  438                                              /* Res of FPRG for GO FPRG */
  439      %MEND;
  440
  441      /* HELP COMMAND TEMPLATE */
  442
  443      %MACRO HELP$CMD (NAME=HELP$CMD,STCLASS=BASED);
  444      DCL 1 NAME STCLASS ALIGNED,             /* HELP COMMAND TEMPLATE */
14:19 JUL 28 '97 DD$BASED.:E05SI                                           13   
  445            2 CMD UBIN(9) UNAL,               /* COMMAND CODE */
  446            2 CID UBIN(9) UNAL,               /* COMMAND IN FIXCOM */
  447            2 LENGTH UBIN(18) UNAL,           /* ATTACHMENT LENGTH */
  448            2 * BIT(27) UNAL,                 /* UNUSED */
  449            2 SACT BIT(1) UNAL,               /* Special act char flag */
  450            2 CTYPE UBIN(5) UNAL,             /* CONDITION TYPE */
  451            2 COND UBIN(3) UNAL,              /* CONDITION */
  452            2 ASYM$ PTR;                      /* Pointer to HELP asym textc */
  453      %MEND;
  454
  455      /* HISTORY COMMAND TEMPLATE */
  456
  457      %MACRO HIST$CMD (NAME=HIST$CMD,STCLASS=BASED);
  458      DCL 1 NAME STCLASS ALIGNED,             /* HISTORY COMMAND TEMPLATE */
  459            2 CMD UBIN(9) UNAL,               /* COMMAND CODE */
  460            2 CID UBIN(9) UNAL,               /* COMMAND IN FIXCOM */
  461            2 LENGTH UBIN(18) UNAL,           /* ATTACHMENT LENGTH */
  462            2 MORE BIT(1) UNAL,               /* MORE PRESENT FLAG */
  463            2 CLEAR BIT(1) UNAL,              /* CLEAR PRESENT FLAG */
  464            2 * BIT(25) UNAL,                 /* UNUSED */
  465            2 SACT BIT(1) UNAL,               /* Special act char flag */
  466            2 CTYPE UBIN(5) UNAL,             /* CONDITION TYPE */
  467            2 COND UBIN(3) UNAL,              /* CONDITION */
  468            2 COUNT UBIN(36);            /* NUMBER OF HISTORY ENTRIES REQUESTED */
  469      %MEND;
  470
  471      /* KEEP COMMAND TEMPLATE */
  472
  473      %MACRO KEEP$CMD (NAME=KEEP$CMD,STCLASS=BASED);
  474      DCL 1 NAME STCLASS ALIGNED,             /* KEEP COMMAND TEMPLATE */
  475            2 CMD UBIN(9) UNAL,               /* COMMAND CODE */
  476            2 CID UBIN(9) UNAL,               /* COMMAND IN FIXCOM */
  477            2 LENGTH UBIN(18) UNAL,           /* ATTACHMENT LENGTH */
  478            2 ALL BIT(1) UNAL,                /* ALL specified */
  479            2 HOST BIT(1) UNAL,               /* HOST specified */
  480            2 FPRG BIT(1) UNAL,               /* fprg_res specified */
  481            2 L6_OPTIONS (0:5) BIT(1) UNAL,   /* L6 options bits */
14:19 JUL 28 '97 DD$BASED.:E05SI                                           14   
  482            2 L6_OPTARRAY REDEF L6_OPTIONS BIT(6) UNAL,
  483            2 * BIT(18) UNAL,
  484                                              /* UNUSED */
  485            2 SACT BIT(1) UNAL,               /* Special act char flag */
  486            2 CTYPE UBIN(5) UNAL,             /* CONDITION TYPE */
  487            2 COND UBIN(3) UNAL,              /* CONDITION */
  488            2 OPTARRY(0:35) BIT(1) UNAL,      /* Options bits */
  489            2 OPTIONS REDEF OPTARRY BIT(36),  /* Options word */
  490            2 FPRG_RES CHAR(8) UNAL;          /* fprg_res that was specified */
  491      %MEND;
  492
  493      /* LET COMMAND TEMPLATE */
  494
  495      %MACRO LET$CMD (NAME=LET$CMD,STCLASS=BASED);
  496      DCL 1 NAME STCLASS ALIGNED,             /* LET COMMAND TEMPLATE */
  497            2 CMD UBIN(9) UNAL,               /* COMMAND CODE */
  498            2 CID UBIN(9) UNAL,               /* COMMAND IN FIXCOM */
  499            2 LENGTH UBIN(18) UNAL,           /* ATTACHMENT LENGTH */
  500            2 * BIT(18) UNAL,                 /* UNUSED */
  501            2 TYPE UBIN(9) UNAL,              /* TYPE CODE ON CONSTANT */
  502            2 SACT BIT(1) UNAL,               /* Special act char flag */
  503            2 CTYPE UBIN(5) UNAL,             /* CONDITION TYPE */
  504            2 COND UBIN(3) UNAL,              /* CONDITION */
  505            2 TEXTC,                          /* TEXTC FOR CHAR CONSTANT */
  506              3 SIZE UBIN(9) UNAL,            /* COUNT */
  507              3 EXP REDEF SIZE SBIN(9) UNAL,  /* UNPACKED DECIMAL EXPONENT */
  508              3 TEXT CHAR(63) UNAL,           /* TEXT OR UNPACKED DECIMAL */
  509              3 TEXTA(0:62) REDEF TEXT CHAR(1) UNAL,
  510              3 TEXTA8(0:62) REDEF TEXT,
  511                4 * BIT(1),
  512                4 BYT UBIN(8) UNAL,
  513            2 CONS REDEF TEXTC,               /* DECIMAL OR .OCTAL CONSTANT */
  514              3 SIZE UBIN(9) UNAL,            /* SIZE IN BITS */
  515              3 * CHAR(3) UNAL,               /* UNUSED */
  516              3 TANT UBIN(36) UNAL,           /* CONSTANT VALUE */
  517              3 TANTB REDEF TANT BIT(36) UNAL, /* CONSTANT VALUE */
  518              3 * CHAR(56) UNAL,              /* UNUSED */
14:19 JUL 28 '97 DD$BASED.:E05SI                                           15   
  519            2 BITS REDEF TEXTC,               /* BIT STRING OR FORTRAN REAL */
  520              3 SIZE UBIN(9) UNAL,            /* SIZE IN BITS */
  521              3 * CHAR(3) UNAL,               /* UNUSED */
  522              3 TRING BIT(72) UNAL,           /* CONSTANT VALUE */
  523              3 * CHAR(52) UNAL,              /* UNUSED */
  524            2 P REDEF TEXTC,                  /* POINTER CONSTANT */
  525              3 SIZE UBIN(9) UNAL,            /* SIZE IN BITS */
  526              3 * CHAR(3) UNAL,               /* UNUSED */
  527              3 ADR,
  528                4 W UBIN(18) UNAL,            /* WORD */
  529                4 C UBIN(2) UNAL,             /* CHARACTER */
  530                4 B UBIN(4) UNAL,             /* BIT */
  531              3 ADR6 REDEF ADR,
  532                4 W UBIN(20) UNAL,            /* WORD */
  533                4 C UBIN(1) UNAL,             /* BYTE */
  534                4 * UBIN(3) UNAL,             /* UNUSED */
  535              3 S UBIN(2) UNAL,               /* SEGID */
  536              3 D UBIN(10) UNAL,              /* DESCRIPTOR NUMBER */
  537              3 * CHAR(56) UNAL,              /* UNUSED */
  538            2 COMP REDEF TEXTC,               /* COMPLEX CONSTANT */
  539              3 SIZE UBIN(9) UNAL,            /* SIZE IN BITS OF EACH ITEM */
  540              3 * CHAR(3) UNAL,               /* UNUSED */
  541              3 LEX1 BIT(72) UNAL,            /* REAL PART */
  542              3 LEX2 BIT(72) UNAL,            /* IMAGINARY PART */
  543              3 * CHAR(44) UNAL;              /* UNUSED */
  544      %MEND;
  545
  546      /* LCT Commands TEMPLATE */
  547
  548      %MACRO LCT$CMD (NAME=LCT$CMD,STCLASS=BASED);
  549      DCL 1 NAME STCLASS ALIGNED,             /* LCT COMMANDS TEMPLATE */
  550            2 CMD UBIN(9) UNAL,               /* COMMAND CODE */
  551            2 CID UBIN(9) UNAL,               /* COMMAND IN FIXCOM */
  552            2 LENGTH UBIN(18) UNAL,           /* ATTACHMENT LENGTH */
  553            2 NEW_VALUE BIT(1) UNAL,          /* New value specified */
  554            2 * BIT(26) UNAL,                 /* Unused */
  555            2 SACT BIT(1) UNAL,               /* Special act char flag */
14:19 JUL 28 '97 DD$BASED.:E05SI                                           16   
  556            2 CTYPE UBIN(5) UNAL,             /* CONDITION TYPE */
  557            2 COND UBIN(3) UNAL,              /* CONDITION */
  558            2 LCT# UBIN UNAL,                 /* LCT # */
  559            2 CHAN# REDEF LCT# UBIN UNAL,     /* CHANNEL # */
  560            2 LCT_NEW_VALUE UBIN UNAL;        /* New value */
  561      %MEND;
  562
  563      /* MACTIVE COMMAND TEMPLATE */
  564
  565      %MACRO MACTIVE$CMD (NAME=MACTIVE$CMD,STCLASS=BASED);
  566      DCL 1 NAME STCLASS ALIGNED,             /* MACTIVE COMMAND TEMPLATE */
  567            2 CMD UBIN(9) UNAL,               /* COMMAND CODE */
  568            2 CID UBIN(9) UNAL,               /* COMMAND IN FIXCOM */
  569            2 LENGTH UBIN(18) UNAL,           /* ATTACHMENT LENGTH */
  570            2 DDESC BIT(1) UNAL,              /* DATA DESCRIPTOR PRESENT */
  571            2 INSTR BIT(1) UNAL,              /* INSTRUCTION TEMPLATE PRESENT */
  572            2 NMSLASH BIT(1) UNAL,            /* NON-MODIFY FORM OF SLASH */
  573            2 IGNPR BIT(1) UNAL,              /* Ignore PR modification */
  574            2 AWDX BIT(1) UNAL,               /* AWDX type PR modification */
  575            2 * BIT(22) UNAL,                 /* UNUSED */
  576            2 SACT BIT(1) UNAL,               /* Special act char flag */
  577            2 CTYPE UBIN(5) UNAL,             /* CONDITION TYPE */
  578            2 COND UBIN(3) UNAL,              /* CONDITION */
  579            2 FORMAT UBIN(9) UNAL,            /* FORMAT CODE, 0=NONE */
  580            2 LCT_NEW_VALUE REDEF FORMAT UBIN(9) UNAL, /* NEW VALUE for MLCT active */
  581            2 SUBCODE UBIN(9) UNAL,           /* SUBCODE - 0 =CARRIAGE RETURN */
  582            2 * BIT(18) UNAL;                 /* UNUSED */
  583      %MEND;
  584
  585      /* MODIFY COMMAND TEMPLATE */
  586
  587      %MACRO MODIFY$CMD (NAME=MODIFY$CMD,STCLASS=BASED);
  588      DCL 1 NAME STCLASS ALIGNED,             /* MODIFY COMMAND TEMPLATE */
  589            2 CMD UBIN(9) UNAL,               /* COMMAND CODE */
  590            2 CID UBIN(9) UNAL,               /* COMMAND IN FIXCOM */
  591            2 LENGTH UBIN(18) UNAL,           /* ATTACHMENT LENGTH */
  592            2 DDESC(0:1) BIT(1) UNAL,         /* NEW, OLD DATA DESCRIPTOR PRESENT */
14:19 JUL 28 '97 DD$BASED.:E05SI                                           17   
  593            2 INSTR(0:1) BIT(1) UNAL,    /* NEW, OLD INSTRUCTION TEMPLATE PRESENT */
  594            2 IGNPR(0:1) BIT(1) UNAL,         /* New, Old Ignore PR modification */
  595            2 AWDX(0:1) BIT(1) UNAL,          /* New, Old AWDX type PR modification */
  596            2 DW BIT(1) UNAL,                 /* MODIFY DW specified */
  597            2 NWARN BIT(1) UNAL,              /* NWARN option specified */
  598            2 * BIT(17) UNAL,                 /* UNUSED */
  599            2 SACT BIT(1) UNAL,               /* Special act char flag */
  600            2 CTYPE UBIN(5) UNAL,             /* CONDITION TYPE */
  601            2 COND UBIN(3) UNAL;              /* CONDITION */
  602      %MEND;
  603
  604      /* NAME COMMAND TEMPLATE */
  605
  606      %MACRO NAME$CMD (NAME=NAME$CMD, STCLASS=BASED);
  607      DCL 1 NAME STCLASS ALIGNED,
  608            2 CMD UBIN(9) UNAL,               /* COMMAND CODE */
  609            2 CID UBIN(9) UNAL,               /* COMMAND IN FIXCOM */
  610            2 LENGTH UBIN(18) UNAL,           /* ATTACHMENT LENGTH */
  611            2 * BIT(27) UNAL,                 /* UNUSED */
  612            2 SACT BIT(1) UNAL,               /* Special act char flag */
  613            2 CTYPE UBIN(5) UNAL,             /* CONDITION TYPE */
  614            2 COND UBIN(3) UNAL,              /* CONDITION */
  615            2 ENTDEFS BIT(1) ALIGNED,         /* 1=ENT,0=VAR */
  616            2 TEXTC,
  617              3 SIZE UBIN BYTE UNAL,
  618              3 TEXT CHAR(31);
  619      %MEND;
  620
  621      /* PROMPT COMMAND TEMPLATE */
  622
  623      %MACRO PROMPT$CMD (NAME=PROMPT$CMD,STCLASS=BASED);
  624      DCL 1 NAME STCLASS ALIGNED,             /* PROMPT COMMAND TEMPLATE */
  625            2 CMD UBIN(9) UNAL,               /* COMMAND CODE */
  626            2 CID UBIN(9) UNAL,               /* COMMAND IN FIXCOM */
  627            2 LENGTH UBIN(18) UNAL,           /* ATTACHMENT LENGTH */
  628            2 * BIT(27) UNAL,                 /* UNUSED */
  629            2 SACT BIT(1) UNAL,               /* Special act char flag */
14:19 JUL 28 '97 DD$BASED.:E05SI                                           18   
  630            2 CTYPE UBIN(5) UNAL,             /* CONDITION TYPE */
  631            2 COND UBIN(3) UNAL,              /* CONDITION */
  632            2 TEXTC,                          /* TEXTC NAME */
  633              3 SIZE UBIN(9) UNAL,            /* COUNT */
  634              3 TEXT CHAR(31) UNAL;           /* TEXT */
  635      %MEND;
  636
  637      /* QUIT COMMAND TEMPLATE */
  638
  639      %MACRO QUIT$CMD (NAME=QUIT$CMD,STCLASS=BASED);
  640      DCL 1 NAME STCLASS ALIGNED,             /* QUIT COMMAND TEMPLATE */
  641            2 CMD UBIN(9) UNAL,               /* COMMAND CODE */
  642            2 CID UBIN(9) UNAL,               /* COMMAND IN FIXCOM */
  643            2 LENGTH UBIN(18) UNAL,           /* ATTACHMENT LENGTH */
  644            2 FPRG BIT(1) UNAL,               /* FPRG specified */
  645            2 * BIT(26) UNAL,                 /* UNUSED */
  646            2 SACT BIT(1) UNAL,               /* Special act char flag */
  647            2 CTYPE UBIN(5) UNAL,             /* CONDITION TYPE */
  648            2 COND UBIN(3) UNAL,              /* CONDITION */
  649            2 FPRG_RES CHAR(8) UNAL;          /* FPRG RES */
  650      %MEND;
  651
  652      /* REPORT command template */
  653
  654      %MACRO REPORT$CMD (NAME=REPORT$CMD,STCLASS=BASED);
  655      DCL 1 NAME STCLASS ALIGNED,             /* REPORT COMMAND TEMPLATE */
  656            2 CMD UBIN(9) UNAL,               /* COMMAND CODE */
  657            2 CID UBIN(9) UNAL,               /* COMMAND IN FIXCOM */
  658            2 LENGTH UBIN(18) UNAL,           /* ATTACHMENT LENGTH */
  659            2 COMPILER UBIN(18) UNAL,         /* COMPILER TYPE */
  660            2 COMPILER_SPF BIT(1) UNAL,       /* COMPILER SPECIFIED, DEF IS ALL */
  661            2 DEFAULT BIT(1) UNAL,            /* DEFAULT SPECIFIED */
  662            2 OFFSET BIT(1) UNAL,             /* REPORT OFFSET */
  663            2 LINE BIT(1) UNAL,               /* REPORT LINE */
  664            2 TYPE BIT(1) UNAL,               /* REPORT TYPE */
  665            2 * BIT(4) UNAL,                  /* UNUSED */
  666            2 SACT BIT(1) UNAL,               /* Special act char flag */
14:19 JUL 28 '97 DD$BASED.:E05SI                                           19   
  667            2 CTYPE UBIN(5) UNAL,             /* CONDITION TYPE */
  668            2 COND UBIN(3) UNAL;              /* CONDITION */
  669      %MEND;
  670
  671      /* RUM command template, also used by READ, OUTPUT cmds in User DELTA */
  672
  673      %MACRO RUM$CMD (NAME=RUM$CMD,STCLASS=BASED);
  674      DCL 1 NAME STCLASS ALIGNED,
  675            2 CMD UBIN(9) UNAL,               /* COMMAND CODE */
  676            2 CID UBIN(9) UNAL,               /* COMMAND IN FIXCOM */
  677            2 LENGTH UBIN(18) UNAL,           /* ATTACHMENT LENGTH */
  678            2 GOTUTS BIT(1) UNAL,             /* UTS SPECIFIED FLAG */
  679            2 RECEDIT REDEF GOTUTS BIT(1),    /* RECORD SPECIFIED AS EDIT KEY */
  680            2 NUTS BIT(1) UNAL,               /* NUTS SPECIFIED FLAG */
  681            2 * BIT(7) UNAL,                  /* UNUSED */
  682            2 BUFFERS UBIN BYTE UNAL,         /* Buffers requested */
  683            2 CODE UBIN BYTE UNAL,            /* C@ON/OVER/INTO FOR OUTPUT */
  684            2 SACT BIT(1) UNAL,               /* Special act char flag */
  685            2 CTYPE UBIN(5) UNAL,             /* CONDITION TYPE */
  686            2 COND UBIN(3) UNAL,              /* CONDITION */
  687            2 UTS CHAR(20) UNAL,              /* UTS */
  688            2 LUTS REDEF UTS,
  689              3 DATE CHAR(8) UNAL,            /* MM/DD/YY */
  690              3 SP CHAR(1) UNAL,              /* Space */
  691              3 TIME CHAR(11) UNAL,           /* HH:MM:SS.TT */
  692            2 REC UBIN,                       /* RECORD NUMBER/EDIT KEY */
  693            2 FID UNAL,                       /* FID TEXTC */
  694              3 SIZE UBIN BYTE UNAL,          /* SIZE IN BYTES */
  695              3 TEXT CHAR(63) UNAL;           /* ACTUAL FID TEXT */
  696      %MEND;
  697
  698      %MACRO SCHEMA$CMD(NAME=SCHEMA$CMD, STCLASS=BASED);
  699      DCL 1 NAME STCLASS ALIGNED,             /* SCHEMA command template */
  700            2 CMD UBIN(9) UNAL,               /* COMMAND CODE */
  701            2 CID UBIN(9) UNAL,               /* COMMAND IN FIXCOM */
  702            2 LENGTH UBIN(18) UNAL,           /* ATTACHMENT LENGTH */
  703            2 POSITION UBIN(20) UNAL,         /* POSITION (NEW IC) */
14:19 JUL 28 '97 DD$BASED.:E05SI                                           20   
  704            2 GOTPOS BIT(1) UNAL,             /* POSITION SPECIFIED FLAG */
  705            2 GOTFID BIT(1) UNAL,             /* FID SPECIFIED */
  706            2 * BIT(5) UNAL,
  707            2 SACT BIT(1) UNAL,               /* Special act char flag */
  708            2 CTYPE UBIN(5) UNAL,             /* CONDITION TYPE */
  709            2 COND UBIN(3) UNAL,              /* CONDITION */
  710            2 FID UNAL,                       /* FID SPECIFIED */
  711              3 SIZE UBIN BYTE UNAL,
  712              3 TEXT CHAR(63) UNAL;
  713      %MEND;
  714
  715      /* SHOW COMMAND TEMPLATE */
  716
  717      %MACRO SHOW$CMD (NAME=SHOW$CMD,STCLASS=BASED);
  718      DCL 1 NAME STCLASS ALIGNED,             /* SHOW COMMAND TEMPLATE */
  719            2 CMD UBIN(9) UNAL,               /* COMMAND CODE */
  720            2 CID UBIN(9) UNAL,               /* COMMAND IN FIXCOM */
  721            2 LENGTH UBIN(18) UNAL,           /* ATTACHMENT LENGTH */
  722            2 TYPE UBIN(9) UNAL,              /* TYPE CODE */
  723            2 ID_FROM UBIN(9) UNAL,           /* ID FROM */
  724            2 ID_TO UBIN(9) UNAL,             /* ID TO = ID FROM IF NOT SPECIFIED */
  725            2 SACT BIT(1) UNAL,               /* Special act char flag */
  726            2 CTYPE UBIN(5) UNAL,             /* CONDITION TYPE */
  727            2 COND UBIN(3) UNAL,              /* CONDITION */
  728            2 FPRG BIT(1) UNAL,               /* FPRG-res specified */
  729            2 * BIT(35) UNAL,
  730            2 FPRG_RES CHAR(8) UNAL,          /* FPRG-Res */
  731            2 TEXTC,                          /* TEXTC NAME */
  732              3 SIZE UBIN(9) UNAL,            /* COUNT */
  733              3 TEXT CHAR(31) UNAL,           /* TEXT */
  734            2 DESTCODE UBIN,                  /* DESTCODE - UNNORMAILIZED */
  735            2 FID,                            /* FID TO SHOW "SYNTACITIC" THRU */
  736              3 SIZE UBIN(9) UNAL,
  737              3 TEXT CHAR(63) UNAL;
  738      %MEND;
  739
  740      /* TRACE (CALLS,PREFIXED CALLS, TRANSFER, OFF) COMMAND */
14:19 JUL 28 '97 DD$BASED.:E05SI                                           21   
  741
  742      %MACRO TR$CMD     (NAME=TR$CMD,STCLASS=BASED);
  743      DCL 1 NAME STCLASS ALIGNED,             /* TRACE COMMAND TEMPLATE */
  744            2 CMD UBIN(9) UNAL,               /* COMMAND CODE */
  745            2 CID UBIN(9) UNAL,               /* COMMAND IN FIXCOM */
  746            2 LENGTH UBIN(18) UNAL,           /* ATTACHMENT LENGTH */
  747            2 PREFIX BIT(1) UNAL,             /* PREFIX PRESENT FLAG */
  748            2 XTERNAL BIT(1) UNAL,            /* EXTERNAL FLAG */
  749            2 SILENT BIT(1) UNAL,             /* SILENT FLAG */
  750            2 * BIT(6) UNAL,
  751            2 TYPE UBIN(18) UNAL,             /* TYPE OF TRACE */
  752            2 SACT BIT(1) UNAL,               /* Special act char flag */
  753            2 CTYPE UBIN(5) UNAL,             /* CONDITION TYPE */
  754            2 COND UBIN(3) UNAL,              /* CONDITION */
  755            2 PSIZ UBIN(9) UNAL,              /* SIZE OF PREFIX STRING */
  756            2 PTXT CHAR(24) UNAL;             /* 24 CHAR MAX PREFIX STRING */
  757      %MEND;
  758
  759      %MACRO TSA$CMD (NAME=TSA$CMD,STCLASS=BASED);
  760      DCL 1 NAME STCLASS ALIGNED,             /* TSA COMMAND TEMPLATE */
  761            2 CMD UBIN(9) UNAL,               /* COMMAND CODE */
  762            2 CID UBIN(9) UNAL,               /* COMMAND IN FIXCOM */
  763            2 LENGTH UBIN(18) UNAL,           /* ATTACHMENT LENGTH */
  764            2 UNUSED BIT(27) UNAL,            /* UNUSED */
  765            2 SACT BIT(1) UNAL,               /* Special act char flag */
  766            2 CTYPE UBIN(5) UNAL,             /* CONDITION TYPE */
  767            2 COND UBIN(3) UNAL,              /* CONDITION */
  768            2 ADDRESS UBIN UNAL;              /* ADDRESS specified */
  769      %MEND;
  770
  771
  772      /* UNFID COMMAND TEMPLATE */
  773
  774      %MACRO UNFID$CMD (NAME=UNFID$CMD,STCLASS=BASED);
  775      DCL 1 NAME STCLASS ALIGNED,             /* UNFID COMMAND TEMPLATE */
  776            2 CMD UBIN(9) UNAL,               /* COMMAND CODE */
  777            2 CID UBIN(9) UNAL,               /* COMMAND IN FIXCOM */
14:19 JUL 28 '97 DD$BASED.:E05SI                                           22   
  778            2 LENGTH UBIN(18) UNAL,           /* ATTACHMENT LENGTH */
  779            2 ID_FROM UBIN(9) UNAL,
  780            2 ID_TO UBIN(9) UNAL,
  781            2 K13 BIT(1) UNAL,                /* KILL13-TYPE FLAG */
  782            2 CLOSED BIT(1) UNAL,             /* JUST DO CLOSE */
  783            2 OPEN BIT(1) UNAL,               /* JUST DO OPEN */
  784            2 * BIT(6) UNAL,                  /* UNUSED */
  785            2 SACT BIT(1) UNAL,               /* Special act char flag */
  786            2 CTYPE UBIN(5) UNAL,             /* CONDITION TYPE */
  787            2 COND UBIN(3) UNAL,              /* CONDITION */
  788            2 DCBN,
  789              3 L UBIN(9) UNAL,
  790              3 C CHAR(31) UNAL;
  791      %MEND;
  792      /* UNSHARE COMMAND TEMPLATE */
  793
  794      %MACRO UNSHARE$CMD (NAME=UNSHARE$CMD,STCLASS=BASED);
  795      DCL 1 NAME STCLASS ALIGNED,             /* UNSHARE COMMAND TEMPLATE */
  796            2 CMD UBIN(9) UNAL,               /* COMMAND CODE */
  797            2 CID UBIN(9) UNAL,               /* COMMAND IN FIXCOM */
  798            2 LENGTH UBIN(18) UNAL,           /* ATTACHMENT LENGTH */
  799            2 PROGRAM BIT(1) UNAL,            /* PROGRAM FLAG */
  800            2 LIBRARY BIT(1) UNAL,            /* LIBRARY FLAG */
  801            2 * BIT(25) UNAL,                 /* UNUSED */
  802            2 SACT BIT(1) UNAL,               /* Special act char flag */
  803            2 CTYPE UBIN(5) UNAL,             /* CONDITION TYPE */
  804            2 COND UBIN(3) UNAL;              /* CONDITION */
  805      %MEND;
  806
  807
  808      /* UPDATE COMMAND TEMPLATE */
  809      %MACRO UPDATE$CMD(NAME=UPDATE$CMD,STCLASS=BASED);
  810      DCL 1 NAME STCLASS ALIGNED,             /* UPDATE command template */
  811            2 CMD UBIN(9) UNAL,               /* COMMAND CODE */
  812            2 CID UBIN(9) UNAL,               /* COMMAND IN FIXCOM */
  813            2 ATTACH_AT_TIME BIT(1) UNAL,     /* Attachment at a time specified */
  814            2 ATTACHMENT BIT(1) UNAL,         /* Attachment number specified */
14:19 JUL 28 '97 DD$BASED.:E05SI                                           23   
  815            2 UPDATE# UBIN(16) UNAL,          /* Which UPDATE command processing */
  816            2 ID_FROM UBIN(9) UNAL,           /* Starting breakpoint number */
  817            2 ID_TO UBIN(9) UNAL,             /* Ending breakpoint number */
  818            2 ATTACHMENT# UBIN(9) UNAL,       /* Attachment number */
  819            2 SACT BIT(1) UNAL,               /* Special act char flag */
  820            2 CTYPE UBIN(5) UNAL,             /* CONDITION TYPE */
  821            2 COND UBIN(3) UNAL,              /* CONDITION */
  822            2 ASYM$ PTR;                 /* Pointer to replacement text asym textc */
  823      %MEND;
  824
  825      /* USE COMMAND TEMPLATE */
  826
  827      %MACRO USE$CMD (NAME=USE$CMD,STCLASS=BASED);
  828      DCL 1 NAME STCLASS ALIGNED,             /* USE COMMAND TEMPLATE */
  829            2 CMD UBIN(9) UNAL,               /* COMMAND CODE */
  830            2 CID UBIN(9) UNAL,               /* COMMAND IN FIXCOM */
  831            2 LENGTH UBIN(18) UNAL,           /* ATTACHMENT LENGTH */
  832            2 TYPE UBIN HALF UNAL,            /* Type */
  833            2 SUBTYPE UBIN BYTE UNAL,         /* Subtype for USE MON */
  834            2 LS REDEF SUBTYPE UBIN BYTE UNAL, /* Linkage segment for USE USER[@|# n],LS */
  835            2 SACT BIT(1) UNAL,               /* Special act char flag */
  836            2 CTYPE UBIN(5) UNAL,             /* CONDITION TYPE */
  837            2 COND UBIN(3) UNAL,              /* CONDITION */
  838            2 BASE UBIN,                      /* Base for USE REAL */
  839            2 USERNO REDEF BASE UBIN,         /* User number for USE USER[#] */
  840            2 NODE REDEF BASE UBIN,           /* Node number for USE NODE */
  841            2 PTA REDEF BASE UBIN,  /* Page table address for USE USER@, USE PT@ */
  842            2 SECTION REDEF BASE UBIN, /* Section to use for patch space for M:FEP */
  843            2 POSITION REDEF BASE UBIN,       /* POSITION FOR USE ASDT */
  844        2 LEVEL REDEF BASE UBIN,              /* LEVEL FOR USE LEVEL */
  845            2 HOST BIT(1) UNAL,               /* USE HOST specified */
  846            2 FPRG BIT(1) UNAL,               /* USE fprg-res specified */
  847            2 * BIT(34) UNAL,
  848            2 FPRG_RES CHAR(8) UNAL;          /* fprg-res specified */
  849      %MEND;
  850
  851      /* XEQ COMMAND TEMPLATE */
14:19 JUL 28 '97 DD$BASED.:E05SI                                           24   
  852
  853      %MACRO XEQ$CMD (NAME=XEQ$CMD,STCLASS=BASED);
  854      DCL 1 NAME STCLASS ALIGNED,             /* XEQ COMMAND TEMPLATE */
  855            2 CMD UBIN(9) UNAL,               /* COMMAND CODE */
  856            2 CID UBIN(9) UNAL,               /* COMMAND IN FIXCOM */
  857            2 LENGTH UBIN(18) UNAL,           /* ATTACHMENT LENGTH */
  858            2 NUM UBIN(18) UNAL,              /* NUMBER OF INSTRUCTION WORDS */
  859            2 INSTR BIT(1) UNAL,         /* INSTRUCTION PRESENT DATA DESCRIPTOR */
  860            2 IGNPR BIT(1) UNAL,              /* Ignore PR modification */
  861            2 AWDX BIT(1) UNAL,               /* AWDX type PR modification */
  862            2 * BIT(6) UNAL,                  /* UNUSED */
  863            2 SACT BIT(1) UNAL,               /* Special act char flag */
  864            2 CTYPE UBIN(5) UNAL,             /* CONDITION TYPE */
  865            2 COND UBIN(3) UNAL;              /* CONDITION */
  866      %MEND;
  867
  868      /* "STATIC" DATA TEMPLATES */
  869
  870      /*  TEMPLATE FOR INDICATOR REGISTER  */
  871
  872      %MACRO IND$VALUES (NAME=IND$VALUES,STCLASS="BASED(S_D.IND$)");
  873      DCL 1 NAME STCLASS ALIGNED,
  874            2 * BIT(18) UNAL,
  875            2 ZERO BIT(1) UNAL,               /* ZERO */
  876            2 NEG BIT(1) UNAL,                /* NEGATIVE */
  877            2 CARRY BIT(1) UNAL,              /* CARRY */
  878            2 OF BIT(1) UNAL,                 /* OVERFLOW */
  879            2 EXOF BIT(1) UNAL,               /* EXPONENT OVERFLOW */
  880            2 EXUF BIT(1) UNAL,               /* EXPONENT UNDERFLOW */
  881            2 OFM BIT(1) UNAL,                /* OVERFLOW MASK */
  882            2 TR BIT(1) UNAL,                 /* TALLY RUNOUT */
  883            2 PE BIT(1) UNAL,                 /* PARITY ERROR */
  884            2 PM BIT(1) UNAL,                 /* PARITY MASK */
  885            2 MM BIT(1) UNAL,                 /* MASTER MODE */
  886            2 TRC BIT(1) UNAL,                /* TRUNCATION (EIS ONLY) */
  887            2 MIR BIT(1) UNAL,                /* MULTI-WORD INTERRUPT */
  888            2 * BIT(5) UNAL;
14:19 JUL 28 '97 DD$BASED.:E05SI                                           25   
  889      %MEND;
  890
  891      /* TEMPLATE FOR INSTRUCTION FORMAT */
  892
  893      %MACRO HOST_INSTR (NAME=HOST_INSTR,STCLASS=BASED);
  894      DCL 1 NAME STCLASS ALIGNED,             /*SINGLE WORD INSTRUCTION FORMAT */
  895            2 Y UBIN(18) UNAL,
  896            2 YFIELD REDEF Y,
  897              3 DR UBIN(3) UNAL,
  898              3 YY SBIN(15) UNAL,
  899            2 VECT REDEF Y,
  900              3 OPE1 UBIN(2) UNAL,
  901              3 *    BIT(7)  UNAL,
  902              3 OPE2 UBIN(2) UNAL,
  903              3 *    BIT(7) UNAL,
  904            2 OP UBIN(10) UNAL,
  905            2 I BIT(1) UNAL,
  906            2 AR BIT(1) UNAL,
  907            2 TAGG UBIN(6) UNAL,
  908            2 TAG REDEF TAGG,
  909              3 TM UBIN(2) UNAL,
  910              3 TD UBIN(4) UNAL,
  911              3 TDD REDEF TD,
  912                4 I BIT(1) UNAL,
  913                4 XR UBIN(3) UNAL;
  914      %MEND;
  915
  916      %MACRO ADSC_INSTR (NAME=ADSC, STCLASS=BASED);
  917      DCL 1 NAME STCLASS ALIGNED,
  918            2 YFIELD UBIN(18) UNAL,
  919            2 CN UBIN(3) UNAL,
  920            2 TA UBIN(2) UNAL,
  921            2 * BIT(1) UNAL,
  922            2 N UBIN(12) UNAL;
  923      %MEND;
  924
  925      %MACRO BDSC_INSTR (NAME=BDSC, STCLASS=BASED);
14:19 JUL 28 '97 DD$BASED.:E05SI                                           26   
  926      DCL 1 NAME STCLASS ALIGNED,
  927            2 YFIELD UBIN(18) UNAL,
  928            2 C UBIN(2) UNAL,
  929            2 B UBIN(4) UNAL,
  930            2 N UBIN(12) UNAL;
  931      %MEND;
  932
  933      %MACRO NDSC_INSTR (NAME=NDSC, STCLASS=BASED);
  934      DCL 1 NAME STCLASS ALIGNED,
  935            2 YFIELD UBIN(18) UNAL,
  936            2 CN UBIN(3) UNAL,
  937            2 TN UBIN(1) UNAL,
  938            2 SX UBIN(2) UNAL,
  939            2 SF SBIN(6) UNAL,
  940            2 N UBIN(6) UNAL;
  941      %MEND;
  942
  943      %MACRO SDSC_INSTR (NAME=SDSC, STCLASS=BASED);
  944      DCL 1 NAME STCLASS ALIGNED,
  945            2 YFIELD UBIN(18) UNAL,
  946            2 CN UBIN(3) UNAL,
  947            2 SE UBIN(1) UNAL,
  948            2 B UBIN(1) UNAL,
  949            2 * UBIN(10) UNAL,
  950            2 L UBIN(3) UNAL;
  951      %MEND;
  952
  953      %MACRO VDSC_INSTR (NAME=VDSC, STCLASS=BASED);
  954      DCL 1 NAME STCLASS ALIGNED,
  955            2 YFIELD UBIN(18) UNAL,
  956            2 VI SBIN(13) UNAL,
  957            2 R BIT(1) UNAL,
  958            2 RN UBIN(4) UNAL;
  959      %MEND;
  960
  961      %MACRO ARG_INSTR (NAME=ARG, STCLASS=BASED);
  962      DCL 1 NAME STCLASS ALIGNED,
14:19 JUL 28 '97 DD$BASED.:E05SI                                           27   
  963            2 YFIELD UBIN(18) UNAL,
  964            2 * UBIN(11) UNAL,
  965            2 AR BIT(1) UNAL,
  966            2 * BIT(2) UNAL,
  967            2 REG UBIN(4) UNAL;
  968      %MEND;
  969
  970      %MACRO EIS_INSTR (NAME=EIS, STCLASS=BASED);
  971      DCL 1 NAME STCLASS ALIGNED,
  972            2 FILL UBIN(9) UNAL,
  973            2 X REDEF FILL UNAL,
  974              3 FP UBIN(1) UNAL,
  975              3 * BIT(4) UNAL,
  976              3 BOLR UBIN(4) UNAL,
  977            2 XX REDEF FILL UNAL,
  978              3 * BIT(2) UNAL,
  979              3 MF3 BIT(7) UNAL,
  980            2 T   UBIN(1) UNAL,
  981            2 RD  UBIN(1) UNAL,
  982            2 MF2 BIT(7) UNAL,
  983            2 OP  BIT(10) UNAL,
  984            2 I   BIT(1) UNAL,
  985            2 MF1 BIT(7) UNAL;
  986      %MEND;
  987
  988      /* OPCODE TABLE FORMAT */
  989
  990      %MACRO OP$TAB (NAME=OP$TAB,STCLASS=BASED);
  991      DCL 1 NAME STCLASS ALIGNED,
  992            2 OPE1 UBIN(2) UNAL,              /* extra OPCODE for vectors */
  993            2 EIS UNAL,                       /* EIS def'n flags */
  994              3 FILL BIT(1) UNAL,
  995              3 MASK BIT(1) UNAL,
  996              3 BOLR BIT(1) UNAL,
  997              3 F    BIT(1) UNAL,
  998              3 RD   BIT(1) UNAL,
  999              3 P    BIT(1) UNAL,
14:19 JUL 28 '97 DD$BASED.:E05SI                                           28   
 1000              3 T    BIT(1) UNAL,
 1001            2 NIS REDEF EIS,                  /* NIS def'n flags */
 1002              3 OCTALY BIT(1) UNAL,
 1003              3 AWDX BIT(1) UNAL,
 1004              3 STCA BIT(1) UNAL,
 1005              3 *    BIT(4) UNAL,
 1006            2 OPE2 UBIN(2) UNAL,              /* extra OPCODE for vectors */
 1007            2 * BIT(7) UNAL,
 1008            2 OPCODE UBIN(10) UNAL,           /* instruction OPCODE */
 1009            2 TYPE UBIN(5) UNAL,              /* instr TYPE, EIS, UTR, ...*/
 1010            2 LENGTH UBIN(3) UNAL,            /* instr LENGTH */
 1011            2 MNE CHAR(6) UNAL,               /* instr MNEmonic */
 1012            2 DESC1 UBIN(3) UNAL,             /* EIS/VECT DESC#1 type */
 1013            2 DESC2 UBIN(3) UNAL,             /* EIS/VECT DESC#2 type */
 1014            2 DESC3 UBIN(3) UNAL,             /* EIS/VECT DESC#3 type */
 1015            2 *     UBIN(9) UNAL;
 1016      %MEND;
 1017
 1018      /*  TEMPLATE FOR REGISTER VALUES  */
 1019
 1020      %MACRO HOST_REG$VALUES (NAME=HOST_REG$VALUES,STCLASS=BASED);
 1021      DCL 1 NAME STCLASS ALIGNED,
 1022            2 X(0:7) UBIN HALF UNAL,
 1023            2 A SBIN UNAL,
 1024            2 HA REDEF A,
 1025              3 AU UBIN HALF UNAL,
 1026              3 AL UBIN HALF UNAL,
 1027            2 Q SBIN UNAL,
 1028            2 HQ REDEF Q,
 1029              3 QU UBIN HALF UNAL,
 1030              3 QL UBIN HALF UNAL,
 1031            2 E UBIN(8) UNAL;
 1032      %MEND;
 1033
 1034      /* USE COMMAND  - THIS STRUCTURE REF'D IN BMAP CODE DCK$GETV_A */
 1035
 1036      %MACRO U$SE (NAME=U$SE,STCLASS="BASED(USE$)",CURINIT=,TYPEINIT=,LSINIT=,APTINIT=,USERNOINIT=);
14:19 JUL 28 '97 DD$BASED.:E05SI                                           29   
 1037      DCL 1 NAME STCLASS ALIGNED,             /* USE COMMAND */
 1038            2 CUR BIT(1) ALIGNED CURINIT,     /* CURRENT USER FLAG */
 1039            2 TYPE UBIN TYPEINIT,             /* MON, REAL, PT, OR USER */
 1040            2 LS UBIN LSINIT,                 /* NONE, ICP, IDB, ASL, USER */
 1041            2 APT UBIN APTINIT,               /* ADDRESS OF PAGE TABLE */
 1042            2 USERNO UBIN USERNOINIT;         /* USER NUMBER IF SPECIFIED */
 1043      %MEND;
 1044
 1045      /* MISC. TEMPLATES */
 1046
 1047      /* XDELTA IN MEMORY SCHEMA DIRECTORY HEADER */
 1048
 1049      %MACRO DX$OUCNT (NAME=DX$OUCNT,STCLASS=BASED);
 1050      DCL 1 NAME STCLASS ALIGNED,
 1051            2 DOM UBIN HALF UNAL,
 1052            2 CNT UBIN HALF UNAL;
 1053      %MEND;
 1054
 1055      /* XDELTA IN MEMORY SCHEMA DIRECTORY */
 1056
 1057      %MACRO DX$SCHEMA (NAME=DX$SCH,STCLASS=BASED);
 1058      DCL 1 NAME STCLASS ALIGNED,
 1059            2 NPOINTER SBIN UNAL,             /* OU NAME POINTER */
 1060            2 LB$ PTR UNAL,                   /* PTR TO LOGICAL BLOCK RECORD */
 1061            2 LBSIZ SBIN UNAL,                /* SIZE OF LB RECORD */
 1062            2 IE$ PTR UNAL,                   /* PTR TO INTERNAL ENTRY RECORD */
 1063            2 IESIZ SBIN UNAL,                /* SIZE OF IE RECORD */
 1064            2 STMT$ PTR UNAL,            /* PTR TO EXECUTABLE STATEMENTS RECORD */
 1065            2 STMTSIZ SBIN UNAL,              /* SIZE OF STMT RECORD */
 1066            2 VRBL$ PTR UNAL,                 /* PTR TO VARIABLES RECORD */
 1067            2 VRBLSIZ SBIN UNAL,              /* SIZE OF VRBL RECORD */
 1068            2 DNAM$ PTR UNAL,                 /* PTR TO DEBUG NAMES RECORD */
 1069            2 DNAMSIZ SBIN UNAL;              /* SIZE OF DNAM RECORD */
 1070      %MEND;
 1071
 1072      /* TEXTC TEMPLATE */
 1073
14:19 JUL 28 '97 DD$BASED.:E05SI                                           30   
 1074      %MACRO TEXT$C (NAME=TEXT$C,STCLASS=BASED,SIZE=SIZE,WIDTH="UBIN(9)",TXT=TXT);
 1075      DCL 1 NAME STCLASS ALIGNED,
 1076            2 SIZE WIDTH UNAL,
 1077            2 TXT CHAR(NAME.SIZE) UNAL;
 1078      %MEND;
 1079
 1080      %MACRO TEXT_C (NAME="*",T=' ',STCLASS=CONSTANT);
 1081      DCL 1 NAME STCLASS ALIGNED,
 1082            2 SIZE UBIN BYTE UNAL INIT(LENGTHC(T)),
 1083            2 TEXT CHAR(0) UNAL INIT(T);
 1084      %MEND;
 1085
 1086      /* WSPTD */
 1087
 1088      %MACRO S$WSPTD(NAME=S$WSPTD,STCLASS=BASED);
 1089      DCL 1 NAME(0:0) STCLASS ALIGNED,
 1090            2 BLKNO UBIN(18) UNAL,
 1091            2 * BIT(2) UNAL,
 1092            2 P BIT(1) UNAL,
 1093            2 T BIT(1) UNAL,
 1094            2 * BIT(6) UNAL,
 1095            2 NBLKS UBIN(8) UNAL;
 1096      %MEND;
 1097
 1098      /* HISTORY BUFFER ENTRY TEMPLATE */
 1099
 1100      %MACRO HIST_BUF (NAME=HIST_BUF,STCLASS=BASED);
 1101      DCL 1 NAME STCLASS ALIGNED,
 1102            2 LIC UBIN UNAL,                  /* LEFT IC */
 1103            2 RIC UBIN UNAL,                  /* RIGHT IC */
 1104            2 LNODE UBIN(9) UNAL,             /* LEFT NODE NUMBER */
 1105            2 RNODE UBIN(9) UNAL,             /* RIGHT NODE NUMBER */
 1106            2 TYPE UBIN(4) UNAL,              /* TRACE TYPE */
 1107            2 COUNT UBIN(14) UNAL;            /* REPETITION COUNT */
 1108      %MEND;
 1109
 1110      /* DELTA'S TREE TABLES */
14:19 JUL 28 '97 DD$BASED.:E05SI                                           31   
 1111
 1112      %MACRO DU$TREE (NAME=DU$TREE,STCLASS=BASED);
 1113      DCL 1 NAME STCLASS ALIGNED,
 1114            2 NEXT# SBIN,
 1115            2 WAS_HERE BIT(1) ALIGNED,
 1116            2 NOW_IN BIT(1) ALIGNED;
 1117      %MEND;
 1118
 1119      %MACRO DU$NODE (NAME=DU$NODE,STCLASS=BASED);
 1120      DCL 1 NAME STCLASS ALIGNED,
 1121            2 INDX# UBIN,
 1122            2 GOTDEFS BIT(1) ALIGNED,
 1123            2 EDEF$ PTR,
 1124            2 EDEF_END$ PTR,
 1125            2 SDEF$ PTR,
 1126            2 SDEF_END$ PTR,
 1127            2 DNAME$ PTR;
 1128      %MEND;
 1129
 1130      /* DESCRIPTOR TEMPLATE FOR ANLZ */
 1131
 1132      %MACRO LS (NAME=LS, STCLASS=BASED);
 1133      DCL 1 NAME STCLASS,
 1134            2 BOUND UBIN(20) UNAL,
 1135            2 FLG,
 1136              3 * BIT(7) UNAL,
 1137              3 EMPTY BIT(1) UNAL,
 1138              3 * BIT(1) UNAL,
 1139            2 WSR UBIN(3) UNAL,
 1140            2 TYP UBIN(4) UNAL,
 1141            2 BASE UBIN(36);
 1142      %MEND;
 1143
 1144      /* DD$VENTRY - Macro for V_SRCH entry number array */
 1145
 1146      %MACRO DD$VENTRY (NAME=ENTRY#,STCLASS=);
 1147      DCL 1 NAME STCLASS ALIGNED,
14:19 JUL 28 '97 DD$BASED.:E05SI                                           32   
 1148            2 C UBIN,                         /* Count of entry numbers */
 1149            2 E(0:49) UBIN;                   /* Entry numbers */
 1150      %MEND;
 1151
 1152      /*  Template for TSXn instructions */
 1153
 1154      %MACRO TSX_INSTR (NAME=TSX_INSTR, STCLASS=BASED);
 1155      DCL 1 NAME STCLASS ALIGNED,
 1156            2 * BIT(18) UNAL,
 1157            2 OP UBIN(6) UNAL,
 1158            2 XR UBIN(3) UNAL,
 1159            2 TRAIL BIT(1) UNAL,
 1160            2 * BIT(8) UNAL;
 1161      %MEND;
 1162
 1163      /* Template for LTRAS CLIMB sequence */
 1164
 1165      %MACRO SHRINK (NAME = SHRINK,
 1166                     STCLASS = BASED);
 1167
 1168      %LSET STR = CONCAT (TEXTCHAR(STCLASS),'        ');
 1169      %IF (SUBSTR(STR,0,6) = 'STATIC') OR
 1170          (SUBSTR(STR,0,8) = 'CONSTANT') OR
 1171          (SUBSTR(STR,0,3) = 'EXT');
 1172      %LSET INIT = CHARTEXT('INIT');
 1173      %ELSE;
 1174      %LSET INIT = CHARTEXT('/*');
 1175      %ENDIF;
 1176
 1177      DCL 1 NAME STCLASS DALIGNED,
 1178            2 VECT,
 1179              3 BOUND UBIN(18) UNAL,
 1180              3 FLAGS BIT(18) UNAL %INIT('777640'O)%CHARTEXT('/**/'),
 1181              3 OFFSET UBIN(18) UNAL,
 1182              3 SEGID BIT(18) UNAL %INIT('006000'O)%CHARTEXT('/**/'),
 1183            2 LDD BIT(36) %INIT('777776670604'O)%CHARTEXT('/**/'),
 1184            2 CLIMB,
14:19 JUL 28 '97 DD$BASED.:E05SI                                           33   
 1185              3 IC UBIN(18) UNAL,
 1186              3 OPCODE BIT(18) UNAL %INIT('713400'O)%CHARTEXT('/**/'),
 1187              3 STUFF BIT(36) UNAL %INIT('000000221770'O)%CHARTEXT('/**/');
 1188
 1189      %MEND;
 1190
 1191      /* Templates for AUTO stack */
 1192
 1193      %MACRO AUTO$BASE (NAME=AUTO$BASE,STCLASS=BASED);
 1194      DCL 1 NAME STCLASS DALIGNED,
 1195            2 INDETERMINATE UBIN HALF HALIGNED,
 1196            2 NEG_CURR_FRAME_OFFSET_MINUS_1 SBIN HALF HALIGNED,
 1197            2 MBZ1 UBIN HALF HALIGNED,
 1198            2 PL6_FLAG SBIN HALF HALIGNED,
 1199            2 LIMIT_OFFSET UBIN HALF HALIGNED,
 1200            2 INDETERMINATE2 UBIN HALF HALIGNED,
 1201            2 MBZ3 UBIN;                      /* This field is actually reserved!! */
 1202      %MEND;
 1203
 1204      %MACRO AUTO$FRAME (NAME=AUTO$FRAME,STCLASS=BASED);
 1205      DCL 1 NAME STCLASS DALIGNED,
 1206            2 RETURN_ADDRESS UBIN HALF HALIGNED,
 1207            2 NEG_PREV_FRAME_OFFSET_MINUS_1 SBIN HALF HALIGNED,
 1208            2 NOAUTO_LOC_OF_ENTRY_ASYNC REDEF NEG_PREV_FRAME_OFFSET_MINUS_1 UBIN HALF HALIGNED,
 1209            2 FRAME_EXTENSION UBIN HALF HALIGNED,
 1210            2 LANGUAGE_FRAME_IDENTIFIER SBIN HALF HALIGNED,
 1211            2 NEXT_FRAME_OFFSET_PLUS_1 UBIN HALF HALIGNED,
 1212            2 LOC_OF_ENTRY_MAIN_OR_ASYNC UBIN HALF HALIGNED,
 1213            2 PARAMS_AUTO_TEMP(0:0) UBIN;
 1214      %MEND;
 1215
 1216                               /* DEF structure for overlaid monitor for XDELTA */
 1217
 1218      %MACRO B$DEF;
 1219      DCL 1 B$DEF BASED(DEFDIR$),
 1220            2 NODES UBIN,
 1221            2 PADDR UBIN,
14:19 JUL 28 '97 DD$BASED.:E05SI                                           34   
 1222            2 NINFO(0:0) UNAL,
 1223              3 NODE_NAME UNAL,
 1224                4 LEN UBIN BYTE UNAL,
 1225                4 TXT CHAR(31) UNAL,
 1226              3 EDEF$ PTR,
 1227              3 SDEF$ PTR,
 1228              3 DNAM$ PTR;
 1229      %MEND;
 1230
 1231      /* Context for an FPRG */
 1232
 1233      %MACRO FPRG$CONTEXT(NAME=FPRG$CONTEXT, STCLASS=BASED);
 1234      DCL 1 NAME STCLASS ALIGNED,
 1235            2 NEXT$ PTR,
 1236                                              /* Pointer to next FPRG context */
 1237            2 READ_FD BIT(1) UNAL,
 1238                                         /* An event for this FPRG was received */
 1239            2 INTERPRETIVE BIT(1) UNAL,
 1240                                              /* This is an Interpretive FPRG */
 1241            2 DEBUG BIT(1) UNAL,
 1242                                    /* This FPRG debugged via the DEBUG command */
 1243            2 ONCALLS_X BIT(1) UNAL,          /* X specified on ONCALLS */
 1244            2 SHARED_PRINT BIT(1) UNAL,       /* Set if AUTOSHARED message written */
 1245            2 SHARED BIT(1) UNAL,
 1246            2 USER BIT(1) UNAL,
 1247            2 XDELTA BIT(1) UNAL,
 1248            2 FANLZ BIT(1) UNAL,
 1249            2 STATE UBIN BYTE UNAL,
 1250                                              /* Current state of this FPRG */
 1251            2 DCBNO UBIN(18) UNAL,
 1252                          /* DCB number to read/write through for communication with
 1253                             the FD for this FPRG */
 1254            2 RES CHAR(8) CALIGNED,
 1255                                              /* RES of this FPRG */
 1256            2 RES_SIZE UBIN UNAL,
 1257                                              /* Size of RES */
 1258            2 ADDRESS UBIN UNAL,
14:19 JUL 28 '97 DD$BASED.:E05SI                                           35   
 1259                                         /* Current address if the STATE = STOPPED */
 1260            2 PROMPT CHAR(24) CALIGNED,
 1261                                              /* Prompt string for this FPRG */
 1262            2 PROMPT_SIZE UBIN UNAL,
 1263                                              /* Size of prompt string */
 1264            2 RUFID UNAL,
 1265                                    /* Rununit fid for the schema for this FPRG */
 1266              3 FNAME UNAL,
 1267                4 SIZE UBIN BYTE UNAL,
 1268                4 TEXT CHAR(31) UNAL,
 1269              3 ACCT CHAR(8) UNAL,
 1270              3 PASS CHAR(8) UNAL,
 1271              3 PSN CHAR(6) UNAL,
 1272              3 MODTIME UBIN(36) UNAL,
 1273            2 STEP_MODE UBIN(18) UNAL,
 1274            2 FIXCOM_INDEX(0:20) UBIN UNAL,
 1275                          /* Index into S_D.FIXCOM for the breakpoint entry for this
 1276                             breakpoint for this FPRG */
 1277            2 KEEP(0:5) BIT(1) UNAL,
 1278            2 TRAP(0:5) BIT(1) UNAL,
 1279            2 IGNORE(0:5) BIT(1) UNAL,
 1280            2 * BIT(8) UNAL,
 1281            2 * UBIN(9) UNAL,
 1282            2 ONEXIT UBIN(9) UNAL,            /* ONEXIT breakpoint # */
 1283            2 ONCALLS UBIN(9) UNAL,           /* ONCALLS breakpoint # */
 1284            2 TR$INFO,
 1285              3 SET BIT(1),
 1286              3 TRANSFERS BIT(1),
 1287              3 CALLS BIT(1),
 1288              3 XCALLS BIT(1),
 1289              3 SILENT BIT(1),
 1290              3 P BIT(1),
 1291              3 ACTIVE BIT(1),
 1292              3 * BIT(2),
 1293              3 PSIZ UBIN(9) UNAL,
 1294              3 PTXT CHAR(24) CALIGNED;
 1295
14:19 JUL 28 '97 DD$BASED.:E05SI                                           36   
 1296      %MEND;
 1297      /**/
 1298      /* EQUs for FPRG state */
 1299      %EQU RUNNING = 1;
 1300      %EQU STOPPED = 2;
 1301      %EQU DISASSOCIATED = 3;
 1302      %EQU ATEXIT = 4;

