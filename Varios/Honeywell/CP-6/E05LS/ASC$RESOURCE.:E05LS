VERSION E05

PL6.E3A0      #001=ASC$RESOURCE File=ASC$RESOURCE.:E05TSI                        TUE 07/29/97 09:43 Page:1    
        1        1        /*M* ASC$RESOURCE: Processes RESOURCE and FERESOURCE options. */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X*  DMC,DMR,CCC,PLM=0,IND=3,CTI=5,DCI=6,IAD=0,DTI=0,IDT=0,ENI=3,
        8        8              ECU=3,CSU=3,SDI=3                                           */
        9        9                                                              /**/
       10       10        /*   ASC$RESOURCE - this module consists of procedures:
       11       11                            ASC$RESOURCE
       12       12                            ASC$FERESOURCE
       13       13        */
       14       14        ASC$RESOURCE: PROC ( MOD_FLG ) ;
       15       15
       16       16        %SET LISTSUB = '1'B;
       17       17        %EJECT;
PL6.E3A0      #001=ASC$RESOURCE File=ASC$RESOURCE.:E05TSI                        TUE 07/29/97 09:43 Page:2    
       18       18
       19       19        /********************************************************************/
       20       20        /*    Parameter   parameter   parameter   parameter   parameter     */
       21       21        /********************************************************************/
       22       22
       23       23    1   DCL MOD_FLG BIT(1) ALIGNED;
       24       24
       25       25        /*********************************************************************/
       26       26        /*   Include files   include files   include files   include files   */
       27       27        /*********************************************************************/
       28       28                                                              /**/
       29       29        %INCLUDE      AS_ENTRIES_M;
       30     1079        %INCLUDE      AS_SUPER_C ;
       31     1514        %INCLUDE      AS_SUBS_C ;
       32     2928        %INCLUDE      AS_MAC_C ;
       33     3008        %INCLUDE      B_MACROS_C ;
       34     3119        %INCLUDE      KL_SUPER_C ;
       35     6021        %INCLUDE      XU_MACRO_C ;
       36     9127        %INCLUDE      XU_FORMAT_C ;
       37     9289        %INCLUDE      CP_6 ;
       38     9370        %INCLUDE      AS_PERR_C;
       39     9972        %INCLUDE      AS_SUPER_R ;
       40    12988                                                              /**/
       41    12989
       42    12990        /*********************************************************************/
       43    12991        /*   Auto data       auto data       auto data       auto data       */
       44    12992        /*********************************************************************/
       45    12993                                                              /**/
       46    12994    1   DCL ARS UBIN WORD ;
       47    12995    1   DCL I UBIN WORD ;
       48    12996    1   DCL J UBIN WORD ;
       49    12997    1   DCL K UBIN WORD ;
       50    12998    1   DCL MODE UBIN WORD ;
       51    12999    1   DCL SUBS UBIN WORD ;
       52    13000    1   DCL SUBNDS UBIN WORD ;
       53    13001    1   DCL VAL UBIN WORD ;
       54    13002    1   DCL RES# UBIN WORD ;
PL6.E3A0      #001=ASC$RESOURCE File=ASC$RESOURCE.:E05TSI                        TUE 07/29/97 09:43 Page:3    
       55    13003    1   DCL MORE BIT(1) ;
       56    13004    1   DCL BLK$ PTR ;
       57    13005    1   DCL PTR$ PTR ;
       58    13006    1   DCL RES$ PTR ;
       59    13007    1   DCL DFLT$ PTR ;
       60    13008                                                              /* Things for saving
       61    13009                                                                 P_PCB. */
       62    13010    1   DCL WORK$ PTR ;
       63    13011    1   DCL ROOT$ PTR ;
       64    13012    1   DCL WKSZ UBIN WORD ;
       65    13013    1   DCL WK_USED UBIN WORD ;
       66    13014    1   DCL T_NODE$ PTR ;
       67    13015    1   DCL 1 RES_STRC,
       68    13016    1          2 NAME CHAR(2) UNAL,
       69    13017    1          2 MODE(0:3) SBIN HALF UNAL;
       70    13018
       71    13019        /*********************************************************************/
       72    13020        /*   Symrefs         symrefs         symrefs         symrefs         */
       73    13021        /*********************************************************************/
       74    13022                                                              /**/
       75    13023    1   DCL RES_OPTS UBIN WORD SYMREF ;
       76    13024
       77    13025        /********************************************************************/
       78    13026        /*   Static data     static data     static data     static data     */
       79    13027        /*********************************************************************/
       80    13028                                                              /**/
       81    13029
       82    13030        /*********************************************************************/
       83    13031        /*   Entry dcls      entry dcls      entry dcls      entry dcls      */
       84    13032        /*********************************************************************/
       85    13033                                                              /**/
       86    13034    1   DCL X$PARSE ENTRY(1) ALTRET ;
       87    13035        %ASB$READ_SI ;
       88    13038        %ASB$SET_PROMPT ;
       89    13041        %ASH$ERROR ;
       90    13044        %ASB$FLUSH_ERR ;
       91    13047        %ASH$HELP ;
PL6.E3A0      #001=ASC$RESOURCE File=ASC$RESOURCE.:E05TSI                        TUE 07/29/97 09:43 Page:4    
       92    13050        %ASH$QUEST ;
       93    13053        %ASH$DQUEST ;
       94    13056
       95    13057        /*********************************************************************/
       96    13058        /*   Local based     local based     local based     local based     */
       97    13059        /*********************************************************************/
       98    13060                                                              /**/
       99    13061        %LIST ;
      100    13062            %PARSE$OUT( NAME=P$NODE, STCLASS="BASED(NODE$)",
      101    13063                        NDTYPE=TYPE, NSUBLKS=SUBNODES) ;
             13064        /*F*  NAME:     PARSE$OUT
             13065              FUNCTION: a structure built by X$PARSE which corresponds to a "list",
             13066                  "alternative", "reducing alternative", or "koncat" node in
             13067                  the user's parse tree.
             13068        */
             13069    1   DCL 1 P$NODE BASED(NODE$) ALIGNED,
             13070    1         2 TEMP BIT(1) UNAL,
             13071    1         2 * BIT (11) UNAL,
             13072    1         2 TYPE UBIN (6) UNAL,
             13073        /*K* NDTYPE - specifies the type of parse node to which this PARSE$OUT
             13074                  block corresponds.  See the XU_SUBS_C file for the
             13075                  %EQU symbols whose values may appear in this field.
             13076        */
             13077    1         2 CODE UBIN HALF HALIGNED,
             13078        /*K* CODE - Contains the numeric "node code" specified by the user when
             13079                  the corresponding parse-node was defined.
             13080        */
             13081    1         2 SUBNODES UBIN HALF HALIGNED,
             13082        /*K* NSUBLKS - "number of sub-blocks".  This field contains the count of
             13083                  pointers actually available in the PARSE$OUT.SUBLK$ array.
             13084        */
             13085    1         2 SCRITCH UBIN HALF HALIGNED,
             13086        /*K* SCRITCH - an 18-bit scratch field reserved for the user.  X$PARSE
             13087                  initializes this field to zero when the PARSE$OUT structure
             13088                  is allocated, and never sets or examines it thereafter.
             13089                  The name of this field may be changed when the PARSE$OUT macro
             13090                  is invoked by the user (say "SCRITCH=yourname"), and its data
PL6.E3A0      #001=ASC$RESOURCE File=ASC$RESOURCE.:E05TSI                        TUE 07/29/97 09:43 Page:5    
             13091                  type may also be changed (say "SCRMODE=pl6datatype" and
             13092                  "SCRALGN=alignment").  BEWARE: this field MUST be 18-bits long,
             13093                  and be UNALIGNED, CALIGNED, or HALIGNED.
             13094        */
             13095    1         2 CPOS UBIN WORD,
             13096        /*K* CPOS - "character position" of this block.  This field will contain
             13097                  a character index (starting at 0) into the original parse
             13098                  string;  the index identifies the first character of the
             13099                  string which was accepted by this node (or by any of its
             13100                  sub-nodes).
             13101        */
             13102    1         2 SUBLK$(0:0) PTR UNAL;
             13103        /*K* SUBLK$ - an array of PL-6 PTRs.  The number of elements in this array
             13104                  is found in OUT$BLK.NSUBLKS;  each PTR will point to another
             13105                  OUT$BLK structure, or to an OUT$SYM structure.
             13106        */
      102    13108              %PARSE$SYM( NAME = OUT$SYM ,
      103    13109                          STCLASS="BASED(BLK$)") ;
             13110        /*F*  NAME:     PARSE$SYM
             13111              FUNCTION: holds "parse symbols".  Structures of this form are created
             13112                  by X$PARSE to hold those portions of the string being parsed
             13113                  which must be returned to the user - quoted strings, decimal
             13114                  or octal numbers, PL-6 identifiers, etc.
             13115        */
             13116    1   DCL 1 OUT$SYM BASED(BLK$) ALIGNED,
             13117    1         2 TEMP BIT(1) UNAL,
             13118    1         2 * BIT (11) UNAL,
             13119    1         2 NDTYPE UBIN (6) UNAL,
             13120        /*K* NDTYPE - see OUT$BLK.NDTYPE for details.
             13121        */
             13122    1         2 CODE UBIN HALF HALIGNED,
             13123        /*K* CODE - see OUT$BLK.CODE for details.
             13124        */
             13125    1         2 NSUBLKS UBIN HALF HALIGNED,
             13126        /*K* NSUBLKS - always contains the value 1.
             13127        */
             13128    1         2 SCRITCH UBIN HALF HALIGNED,
PL6.E3A0      #001=ASC$RESOURCE File=ASC$RESOURCE.:E05TSI                        TUE 07/29/97 09:43 Page:6    
             13129        /*K* SCRITCH - see OUT$BLK.SCRITCH for details.
             13130        */
             13131    1         2 CPOS UBIN WORD,
             13132        /*K* CPOS - see OUT$BLK.CPOS for details.
             13133        */
             13134    1         2 TEXTC$ PTR,
             13135        /*K* TEXTC$ - a pointer to a TEXTC-type string (a 1-byte count field
             13136                  followed by a variable number of characters).  Always
             13137                  points to OUT$SYM.COUNT in the current OUT$SYM block.
             13138        */
             13139    1         2 COUNT UBIN BYTE CALIGNED,
             13140        /*K* COUNT - contains the number of characters in OUT$SYM.TEXT.
             13141        */
             13142    1         2 TEXT CHAR(OUT$SYM.COUNT) CALIGNED;
             13143        /*K* TEXT - contains the text of a string, decimal number, PL-6
             13144                  identifier, or some other parser "symbol".
             13145        */
      104    13147    1   DCL 1 RES$LIST ALIGNED BASED(AS_RESOURCE_LIST$),
      105    13148    1          2 COUNT UBIN,
      106    13149    1          2 RES(0:0),
      107    13150    1             3 NAME CHAR(2) UNAL,
      108    13151    1             3 BMAX SBIN HALF UNAL,
      109    13152    1             3 GMAX SBIN HALF UNAL,
      110    13153    1             3 OMAX SBIN HALF UNAL,
      111    13154    1             3 TMAX SBIN HALF UNAL;
      112    13155    1   DCL 1 RES$STRC BASED( RES$ ) UNAL ,
      113    13156    1          2 NAME CHAR(2) UNAL ,
      114    13157    1          2 VAL(0:3) UBIN HALF UNAL ;
      115    13158    1   DCL 1 DFLT$STRC BASED( DFLT$ ) UNAL ,
      116    13159    1          2 NAME CHAR(2) UNAL ,
      117    13160    1          2 VAL(0:3) UBIN HALF UNAL ;
      118    13161        %PLIST ;
      119    13162        %SET LISTMAC = '1'B ;
      120    13163
      121    13164        /*********************************************************************/
      122    13165        /*   Procedure       procedure       procedure       procedure       */
      123    13166        /*********************************************************************/
PL6.E3A0      #001=ASC$RESOURCE File=ASC$RESOURCE.:E05TSI                        TUE 07/29/97 09:43 Page:7    
      124    13167                                                              /**/
      125    13168        /*
      126    13169            ***            Begin procedure                    ***
      127    13170        */
      128    13171    2   IF MOD_FLG THEN DO;
      129    13172    2      IF RES$LIST.COUNT = 0 THEN RETURN;
      130    13173    2      END;
      131    13174    2   ELSE DO;
      132    13175                                                              /* Save some of P_PCB. */
      133    13176    2      WORK$ = P_PCB.WORK$ ;
      134    13177    2      WKSZ = P_PCB.WKSZ ;
      135    13178    2      WK_USED = P_PCB.WK_USED ;
      136    13179    2      ROOT$ = P_PCB.ROOT$ ;
      137    13180                                                              /* Bump past area used. */
      138    13181    2      P_PCB.WORK$ = PINCRW( WORK$, P_PCB.WK_USED ) ;
      139    13182    2      P_PCB.WKSZ = WKSZ - P_PCB.WK_USED ;
      140    13183                                                              /* Save NODE$ */
      141    13184    2      T_NODE$ = NODE$ ;
      142    13185                                                              /* Set ROOT$ */
      143    13186    2      P_PCB.ROOT$ = ADDR(RES_OPTS) ;
      144    13187    2      REMEMBER RES_LOOP IN REMEM_VAR ;
      145    13188                                                              /*  Set prompt  */
      146    13189    2      CALL ASB$SET_PROMPT ( %PROMPT_SUB ) ;
      147    13190    2      AS_MOD_USER.RESOURCE = AS_TRUE;
      148    13191    2      END;
      149    13192
      150    13193    1   MORE = AS_TRUE;
      151    13194                                                              /**/
      152    13195    2   DO WHILE( MORE ) ;
      153    13196    2   RES_LOOP: ;
      154    13197                                                              /**/
      155    13198    3      IF MOD_FLG THEN DO;
      156    13199    3         MORE = AS_FALSE;
      157    13200    3         CODE = 31 /* RES_OPT */;
      158    13201    3         SUBS = RES$LIST.COUNT;
      159    13202    3         END;
      160    13203    3      ELSE DO;
PL6.E3A0      #001=ASC$RESOURCE File=ASC$RESOURCE.:E05TSI                        TUE 07/29/97 09:43 Page:8    
      161    13204    3         CALL ASB$READ_SI( IN_BUF, ARS ) ;
      162    13205    3         P_PCB.NCHARS = ARS ;
      163    13206    3         CALL X$PARSE( P_PCB ) ALTRET( RES_ERR ) ;
      164    13207    3         NODE$ = P_PCB.OUT$ ;
      165    13208    3         SUBS = P$NODE.SUBNODES ;
      166    13209    3         END;
      167    13210    3      DO I = 0 TO SUBS-1 ;
      168    13211    3         IF MOD_FLG THEN
      169    13212    3            RES_STRC = RES$LIST.RES(I) ;
      170    13213    3         ELSE
      171    13214    3            CODE = P$NODE.SUBLK$(I) -> P$NODE.CODE ;
      172    13215                                                              /**/
      173    13216    4         DO SELECT( CODE ) ;
      174    13217                                                              /**/
      175    13218    4            SELECT( 12   /*  END_VAL  */ ,
      176    13219    4                 26   /*  BLANK_LINE_VAL */ ) ;
      177    13220    4            MORE = AS_FALSE ;
      178    13221    4            I = SUBS ;
      179    13222                                                              /* Restore P_PCB. */
      180    13223    4            P_PCB.WORK$ = WORK$ ;
      181    13224    4            P_PCB.WKSZ = WKSZ ;
      182    13225    4            P_PCB.WK_USED = P_PCB.WK_USED ;
      183    13226    4            P_PCB.ROOT$ = ROOT$ ;
      184    13227                                                              /* Restore NODE$ */
      185    13228    4            NODE$ = T_NODE$ ;
      186    13229                                                              /**/
      187    13230    4            SELECT( 302 /* HELP_VAL */ ) ;
      188    13231    4            CALL ASH$HELP ;
      189    13232                                                                  /**/
      190    13233    4            SELECT( 301 /* QUESTION_VAL */ ) ;
      191    13234    4            CALL ASH$QUEST ;
      192    13235                                                                  /**/
      193    13236    4            SELECT( 300 /* DQUESTION_VAL */ ) ;
      194    13237    4            CALL ASH$DQUEST ;
      195    13238                                                                  /**/
      196    13239    4            SELECT( 16   /*  EOL_VAL  */ ) ;
      197    13240                                                              /**/
PL6.E3A0      #001=ASC$RESOURCE File=ASC$RESOURCE.:E05TSI                        TUE 07/29/97 09:43 Page:9    
      198    13241    4            SELECT( 31 /* RES_OPT */ ) ;
      199    13242    5            IF NOT MOD_FLG THEN DO;
      200    13243    5               BLK$ = P$NODE.SUBLK$(I) -> P$NODE.SUBLK$(0)
      201    13244    5                    -> P$NODE.SUBLK$(0) ;
      202    13245    5               IF OUT$SYM.COUNT > 2
      203    13246    6               THEN DO;
      204    13247        /*E*  ERROR:    ASC-E$RES_NAME_TOO_LONG-C
      205    13248              MESSAGE:  RESOURCE name too long.
      206    13249              MESSAGE1: RESOURCE name can be at most 2 characters long.
      207    13250        */
      208    13251                       %SCREAM( ERR#=E$RES_NAME_TOO_LONG, LEVEL=ERROR, MID='C' );
             13252        %LSET LISTDIR='0'B;
             13263    6         CALL ASH$ERROR( %(ERR_CODE) );
      209    13266    6                  GOTO SKIP_IT;
      210    13267    6                  END ;    /* Then do */
      211    13268    5               RES_STRC.NAME = OUT$SYM.TEXT ;
      212    13269    6               DO J = 0 TO 3;
      213    13270    6                  RES_STRC.MODE(J) = -1;
      214    13271    6                  END;
      215    13272    5               PTR$ = P$NODE.SUBLK$(I) -> P$NODE.SUBLK$(1) ;
      216    13273    5               SUBNDS = PTR$ -> P$NODE.SUBNODES ;
      217    13274    6               DO J = 0 TO SUBNDS-1 ;
      218    13275    6                  MODE = PTR$ -> P$NODE.SUBLK$(J) -> P$NODE.SUBLK$(0)
      219    13276    6                       -> P$NODE.CODE ;
      220    13277    6                  BLK$ = PTR$ -> P$NODE.SUBLK$(J) -> P$NODE.SUBLK$(1)
      221    13278    6                       -> P$NODE.SUBLK$(0) ;
      222    13279    6                  CALL CHARBIN( VAL, OUT$SYM.TEXT ) ;
      223    13280    6                  IF VAL > 511
      224    13281    7                  THEN DO;
      225    13282        /*E*  ERROR:    ASC-E$RES_VAL_TOO_BIG-C
      226    13283              MESSAGE:  RESOURCE value too big.
      227    13284              MESSAGE1: RESOURCE value can be at most 511.
      228    13285        */
      229    13286                          %SCREAM( ERR#=E$RES_VAL_TOO_BIG, LEVEL=ERROR,MID='C');
             13287        %LSET LISTDIR='0'B;
             13298    7         CALL ASH$ERROR( %(ERR_CODE) );
      230    13301    7                     END;
PL6.E3A0      #001=ASC$RESOURCE File=ASC$RESOURCE.:E05TSI                        TUE 07/29/97 09:43 Page:10   
      231    13302    6                  ELSE
      232    13303    6                     RES_STRC.MODE(MODE) = VAL;
      233    13304    6                  END;    /* Do j = 0 to SUBNDS-1 */
      234    13305    5               END;   /* If not MOD_FLG then do */
      235    13306                                                             /* Find res in users record. */
      236    13307    4            RES# = AS_USERS.TOT_TYPES ;
      237    13308    4            IF RES# > 0
      238    13309    5            THEN DO;
      239    13310    6               DO J = 0 TO RES#-1 ;
      240    13311    6                  IF AS_USERS.RESL.RNAME(J) = RES_STRC.NAME THEN GOTO FOUND_RES ;
      241    13312    6                  END ; /* Do j */
      242    13313    5               END;
      243    13314    5            ELSE DO;
      244    13315    5               J = 0;
      245    13316    5               END;
      246    13317                                                              /* Didn't find it. */
      247    13318    4            IF J > 7
      248    13319    5            THEN DO;
      249    13320        /*E*  ERROR:    ASC-E$TOO_MANY_RESOURCES-C
      250    13321              MESSAGE:  Too many RESOURCES.
      251    13322              MESSAGE1:  At most 8 RESOURCES can be defined.
      252    13323        */
      253    13324    5               IF MOD_FLG THEN CALL ASB$FLUSH_ERR;
      254    13325                    %SCREAM( ERR#=E$TOO_MANY_RESOURCES, LEVEL=ERROR, MID='C');
             13326        %LSET LISTDIR='0'B;
             13337    5         CALL ASH$ERROR( %(ERR_CODE) );
      255    13340    5               GOTO SKIP_IT;
      256    13341    5               END ;    /* Then do */
      257    13342                                                              /* Set up next slot. */
      258    13343    5            IF AS_CR_MOD_PROJ > 0 THEN DO;
      259    13344        /*E* ERROR:  ASC-E$NO_MORE_RES-C
      260    13345             MESSAGE:  You cannot define the resource for this user.
      261    13346             MESSAGE1: You must have that resource available to you.
      262    13347        */
      263    13348                    %SCREAM(ERR#=E$NO_MORE_RES,LEVEL=ERROR,MID='C');
             13349        %LSET LISTDIR='0'B;
             13360    5         CALL ASH$ERROR( %(ERR_CODE) );
PL6.E3A0      #001=ASC$RESOURCE File=ASC$RESOURCE.:E05TSI                        TUE 07/29/97 09:43 Page:11   
      264    13363    5               GOTO SKIP_IT ;
      265    13364    5               END;      /* Of then do     */
      266    13365    4            AS_USERS.TOT_TYPES = J + 1 ;
      267    13366    4            AS_USERS.RESL.RNAME(J) = RES_STRC.NAME ;
      268    13367    4            AS_USERS.RESL.BMAX(J) = 0 ;
      269    13368    4            AS_USERS.RESL.GMAX(J) = 0 ;
      270    13369    4            AS_USERS.RESL.OMAX(J) = 0 ;
      271    13370    4            AS_USERS.RESL.TMAX(J) = 0 ;
      272    13371    4   FOUND_RES: ;
      273    13372    4            RES$ = ADDR( AS_USERS.RESL.RNAME(J)) ;
      274    13373    4            DFLT$ = ADDR( AS_DFLT.RESL.RNAME(J)) ;
      275    13374    5            DO J = 0 TO 3;
      276    13375    6               IF RES_STRC.MODE(J) > -1 THEN DO ;
      277    13376    6                  IF  AS_CR_MOD_PROJ > 0  AND
      278    13377    6                       RES_STRC.MODE(J) > DFLT$STRC.VAL(J) THEN
      279    13378    7                  DO ;
      280    13379        /*E* ERROR:      ASC-E$RES_VAL_TOO_HIGH-C
      281    13380             MESSAGE:    This user cannot have more resource value than your resource value.
      282    13381        */
      283    13382                          %SCREAM (ERR#=E$RES_VAL_TOO_HIGH,LEVEL=ERROR,MID='C');
             13383        %LSET LISTDIR='0'B;
             13394    7         CALL ASH$ERROR( %(ERR_CODE) );
      284    13397    7                     GOTO SKIP_IT ;
      285    13398    7                     END;        /* Of then do    */
      286    13399    6                  RES$STRC.VAL( J ) = RES_STRC.MODE( J ) ;
      287    13400    6                  END;   /* Do if RES_STRC.MODE(J) > -1  */
      288    13401    5               END ; /* Do j */
      289    13402    4            IF NOT MOD_FLG  AND  AS_WILD_USER
      290    13403    5            THEN DO;
      291    13404    5               RES$LIST.RES( RES$LIST.COUNT) = RES_STRC;
      292    13405    5               RES$LIST.COUNT = RES$LIST.COUNT + 1;
      293    13406    5               END;
      294    13407    5            DO J = 0 TO 7;   /* Compress the resource limits table */
      295    13408    5               IF ((AS_USERS.RESL.BMAX (J) = 0) AND
      296    13409    5                    (AS_USERS.RESL.GMAX (J) = 0) AND
      297    13410    5                    (AS_USERS.RESL.OMAX (J) = 0) AND
      298    13411    5                    (AS_USERS.RESL.TMAX (J) = 0) AND
PL6.E3A0      #001=ASC$RESOURCE File=ASC$RESOURCE.:E05TSI                        TUE 07/29/97 09:43 Page:12   
      299    13412    5                    (AS_USERS.RESL.RNAME(J) ~= '  '))
      300    13413    6               THEN DO;
      301    13414    6                  AS_USERS.RESL.RNAME (J) = ' ';
      302    13415    6                  AS_USERS.TOT_TYPES = AS_USERS.TOT_TYPES -1;
      303    13416    7   SWAPONE:       DO K = 7 DOWNTO (J + 1);
      304    13417    7                     IF (AS_USERS.RESL.RNAME(K) ~= '  ') AND
      305    13418    7                          ((AS_USERS.RESL.BMAX (J) ~= 0) OR
      306    13419    7                          (AS_USERS.RESL.GMAX (J) ~= 0) OR
      307    13420    7                          (AS_USERS.RESL.OMAX (J) ~= 0) OR
      308    13421    7                          (AS_USERS.RESL.TMAX (J) ~= 0))
      309    13422    8                     THEN DO;
      310    13423    8                        AS_USERS.RESL.RNAME(J) = AS_USERS.RESL.RNAME(K);
      311    13424    8                        AS_USERS.RESL.RNAME(K) = ' ';
      312    13425    8                        AS_USERS.RESL.TMAX(J) = AS_USERS.RESL.TMAX(K);
      313    13426    8                        AS_USERS.RESL.GMAX(J) = AS_USERS.RESL.GMAX(K);
      314    13427    8                        AS_USERS.RESL.BMAX(J) = AS_USERS.RESL.BMAX(K);
      315    13428    8                        AS_USERS.RESL.OMAX(J) = AS_USERS.RESL.OMAX(K);
      316    13429    8                        EXIT SWAPONE;
      317    13430    8                        END;
      318    13431    7                     END;
      319    13432    6                  END;
      320    13433    5               END;
      321    13434    4   SKIP_IT: ;
      322    13435    4            END ; /* Do case */
      323    13436    3         END ; /* Do i */
      324    13437    2      END ; /* Do while( more ) */
      325    13438                                                              /**/
      326    13439    1   RETURN ;
      327    13440                                                              /**/
      328    13441    1   RES_ERR: ;
      329    13442    1   ERR_CODE = P_PCB.ERROR ;
      330    13443    1   CALL ASH$ERROR( ERR_CODE ) ;
      331    13444    1   GOTO RES_LOOP ;
      332    13445                                                              /**/
      333    13446    1   END   ASC$RESOURCE ;
      334    13447        %EOD ;

PL6.E3A0      #001=ASC$RESOURCE File=ASC$RESOURCE.:E05TSI                        TUE 07/29/97 09:43 Page:13   
--  Include file information  --

   AS_SUPER_R.:E05TOU  cannot be made into a system file and is referenced.
   AS_PERR_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   XU_FORMAT_C.:E05TOU  is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
   KL_SUPER_C.:E05TOU  is referenced.
   B_MACROS_C.:E05TOU  is referenced.
   AS_MAC_C.:E05TOU  cannot be made into a system file and is referenced.
   AS_SUBS_C.:E05TOU  is referenced.
   AS_SUPER_C.:E05TOU  is referenced.
   AS_ENTRIES_M.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure ASC$RESOURCE.

   Procedure ASC$RESOURCE requires 519 words for executable code.
   Procedure ASC$RESOURCE requires 30 words of local(AUTO) storage.

PL6.E3A0      #001=ASC$RESOURCE File=ASC$RESOURCE.:E05TSI                        TUE 07/29/97 09:43 Page:14   

 Object Unit name= ASC$RESOURCE                               File name= ASC$RESOURCE.:E05TOU
 UTS= JUL 29 '97 09:43:30.08 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1   DCB   even  none     0      0  M$LO
    2  RoData even  UTS      6      6  ASC$RESOURCE
    3   Proc  even  none   519   1007  ASC$RESOURCE
    4  RoData even  none    13     15  ASC$RESOURCE

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     3      0   yes            yes      Std        1  ASC$RESOURCE
PL6.E3A0      #001=ASC$RESOURCE File=ASC$RESOURCE.:E05TSI                        TUE 07/29/97 09:43 Page:15   

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes          ~proc      0 XU_OUTPUT_OPTIONS
         yes           Std       2 ASB$READ_SI
 yes     yes           Std       3 ASB$SET_PROMPT
         yes           Std       0 ASH$HELP
         yes           Std       0 ASH$QUEST
         yes           Std       2 ASH$ERROR
         yes           Std       0 ASB$FLUSH_ERR
 yes     yes           Std       1 X$PARSE
         yes           Std       0 ASH$DQUEST
                       nStd      0 X66_AUTO_1
                       nStd      0 X66_ARET
                       Std       0 B_CONSPOOL_D

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                             r    AS_TRUE                          r    AS_FALSE
r    AS_MODE                          r    AS_FE_MODE                            M$LO
     IN_BUF                                NODE$                                 CODE
     ERR_CODE                              REMEM_VAR                             REM_FCMD
     ASA_BRKS_LOC                          AS_WILD_USER                          AS_RESOURCE_LIST$
     AS_CR_MOD_PROJ                        P_PCB                                 AS_USERS
     AS_DFLT                               AS_MOD_USER                           RES_OPTS
     B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
PL6.E3A0      #001=ASC$RESOURCE File=ASC$RESOURCE.:E05TSI                        TUE 07/29/97 09:43 Page:16   


        1        1        /*M* ASC$RESOURCE: Processes RESOURCE and FERESOURCE options. */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X*  DMC,DMR,CCC,PLM=0,IND=3,CTI=5,DCI=6,IAD=0,DTI=0,IDT=0,ENI=3,
        8        8              ECU=3,CSU=3,SDI=3                                           */
        9        9                                                              /**/
       10       10        /*   ASC$RESOURCE - this module consists of procedures:
       11       11                            ASC$RESOURCE
       12       12                            ASC$FERESOURCE
       13       13        */
       14       14        ASC$RESOURCE: PROC ( MOD_FLG ) ;

     14  3 000000   000000 700200 xent  ASC$RESOURCE TSX0  ! X66_AUTO_1
         3 000001   000036 000001                    ZERO    30,1

       15       15
       16       16        %SET LISTSUB = '1'B;
       17       17        %EJECT;
PL6.E3A0      #001=ASC$RESOURCE File=ASC$RESOURCE.:E05TSI                        TUE 07/29/97 09:43 Page:17   
       18       18
       19       19        /********************************************************************/
       20       20        /*    Parameter   parameter   parameter   parameter   parameter     */
       21       21        /********************************************************************/
       22       22
       23       23    1   DCL MOD_FLG BIT(1) ALIGNED;
       24       24
       25       25        /*********************************************************************/
       26       26        /*   Include files   include files   include files   include files   */
       27       27        /*********************************************************************/
       28       28                                                              /**/
       29       29        %INCLUDE      AS_ENTRIES_M;
       30     1079        %INCLUDE      AS_SUPER_C ;
       31     1514        %INCLUDE      AS_SUBS_C ;
       32     2928        %INCLUDE      AS_MAC_C ;
       33     3008        %INCLUDE      B_MACROS_C ;
       34     3119        %INCLUDE      KL_SUPER_C ;
       35     6021        %INCLUDE      XU_MACRO_C ;
       36     9127        %INCLUDE      XU_FORMAT_C ;
       37     9289        %INCLUDE      CP_6 ;
       38     9370        %INCLUDE      AS_PERR_C;
       39     9972        %INCLUDE      AS_SUPER_R ;
       40    12988                                                              /**/
       41    12989
       42    12990        /*********************************************************************/
       43    12991        /*   Auto data       auto data       auto data       auto data       */
       44    12992        /*********************************************************************/
       45    12993                                                              /**/
       46    12994    1   DCL ARS UBIN WORD ;
       47    12995    1   DCL I UBIN WORD ;
       48    12996    1   DCL J UBIN WORD ;
       49    12997    1   DCL K UBIN WORD ;
       50    12998    1   DCL MODE UBIN WORD ;
       51    12999    1   DCL SUBS UBIN WORD ;
       52    13000    1   DCL SUBNDS UBIN WORD ;
       53    13001    1   DCL VAL UBIN WORD ;
       54    13002    1   DCL RES# UBIN WORD ;
PL6.E3A0      #001=ASC$RESOURCE File=ASC$RESOURCE.:E05TSI                        TUE 07/29/97 09:43 Page:18   
       55    13003    1   DCL MORE BIT(1) ;
       56    13004    1   DCL BLK$ PTR ;
       57    13005    1   DCL PTR$ PTR ;
       58    13006    1   DCL RES$ PTR ;
       59    13007    1   DCL DFLT$ PTR ;
       60    13008                                                              /* Things for saving
       61    13009                                                                 P_PCB. */
       62    13010    1   DCL WORK$ PTR ;
       63    13011    1   DCL ROOT$ PTR ;
       64    13012    1   DCL WKSZ UBIN WORD ;
       65    13013    1   DCL WK_USED UBIN WORD ;
       66    13014    1   DCL T_NODE$ PTR ;
       67    13015    1   DCL 1 RES_STRC,
       68    13016    1          2 NAME CHAR(2) UNAL,
       69    13017    1          2 MODE(0:3) SBIN HALF UNAL;
       70    13018
       71    13019        /*********************************************************************/
       72    13020        /*   Symrefs         symrefs         symrefs         symrefs         */
       73    13021        /*********************************************************************/
       74    13022                                                              /**/
       75    13023    1   DCL RES_OPTS UBIN WORD SYMREF ;
       76    13024
       77    13025        /********************************************************************/
       78    13026        /*   Static data     static data     static data     static data     */
       79    13027        /*********************************************************************/
       80    13028                                                              /**/
       81    13029
       82    13030        /*********************************************************************/
       83    13031        /*   Entry dcls      entry dcls      entry dcls      entry dcls      */
       84    13032        /*********************************************************************/
       85    13033                                                              /**/
       86    13034    1   DCL X$PARSE ENTRY(1) ALTRET ;
       87    13035        %ASB$READ_SI ;
       88    13038        %ASB$SET_PROMPT ;
       89    13041        %ASH$ERROR ;
       90    13044        %ASB$FLUSH_ERR ;
       91    13047        %ASH$HELP ;
PL6.E3A0      #001=ASC$RESOURCE File=ASC$RESOURCE.:E05TSI                        TUE 07/29/97 09:43 Page:19   
       92    13050        %ASH$QUEST ;
       93    13053        %ASH$DQUEST ;
       94    13056
       95    13057        /*********************************************************************/
       96    13058        /*   Local based     local based     local based     local based     */
       97    13059        /*********************************************************************/
       98    13060                                                              /**/
       99    13061        %LIST ;
      100    13062            %PARSE$OUT( NAME=P$NODE, STCLASS="BASED(NODE$)",
      101    13063                        NDTYPE=TYPE, NSUBLKS=SUBNODES) ;
             13064        /*F*  NAME:     PARSE$OUT
             13065              FUNCTION: a structure built by X$PARSE which corresponds to a "list",
             13066                  "alternative", "reducing alternative", or "koncat" node in
             13067                  the user's parse tree.
             13068        */
             13069    1   DCL 1 P$NODE BASED(NODE$) ALIGNED,
             13070    1         2 TEMP BIT(1) UNAL,
             13071    1         2 * BIT (11) UNAL,
             13072    1         2 TYPE UBIN (6) UNAL,
             13073        /*K* NDTYPE - specifies the type of parse node to which this PARSE$OUT
             13074                  block corresponds.  See the XU_SUBS_C file for the
             13075                  %EQU symbols whose values may appear in this field.
             13076        */
             13077    1         2 CODE UBIN HALF HALIGNED,
             13078        /*K* CODE - Contains the numeric "node code" specified by the user when
             13079                  the corresponding parse-node was defined.
             13080        */
             13081    1         2 SUBNODES UBIN HALF HALIGNED,
             13082        /*K* NSUBLKS - "number of sub-blocks".  This field contains the count of
             13083                  pointers actually available in the PARSE$OUT.SUBLK$ array.
             13084        */
             13085    1         2 SCRITCH UBIN HALF HALIGNED,
             13086        /*K* SCRITCH - an 18-bit scratch field reserved for the user.  X$PARSE
             13087                  initializes this field to zero when the PARSE$OUT structure
             13088                  is allocated, and never sets or examines it thereafter.
             13089                  The name of this field may be changed when the PARSE$OUT macro
             13090                  is invoked by the user (say "SCRITCH=yourname"), and its data
PL6.E3A0      #001=ASC$RESOURCE File=ASC$RESOURCE.:E05TSI                        TUE 07/29/97 09:43 Page:20   
             13091                  type may also be changed (say "SCRMODE=pl6datatype" and
             13092                  "SCRALGN=alignment").  BEWARE: this field MUST be 18-bits long,
             13093                  and be UNALIGNED, CALIGNED, or HALIGNED.
             13094        */
             13095    1         2 CPOS UBIN WORD,
             13096        /*K* CPOS - "character position" of this block.  This field will contain
             13097                  a character index (starting at 0) into the original parse
             13098                  string;  the index identifies the first character of the
             13099                  string which was accepted by this node (or by any of its
             13100                  sub-nodes).
             13101        */
             13102    1         2 SUBLK$(0:0) PTR UNAL;
             13103        /*K* SUBLK$ - an array of PL-6 PTRs.  The number of elements in this array
             13104                  is found in OUT$BLK.NSUBLKS;  each PTR will point to another
             13105                  OUT$BLK structure, or to an OUT$SYM structure.
             13106        */
      102    13108              %PARSE$SYM( NAME = OUT$SYM ,
      103    13109                          STCLASS="BASED(BLK$)") ;
             13110        /*F*  NAME:     PARSE$SYM
             13111              FUNCTION: holds "parse symbols".  Structures of this form are created
             13112                  by X$PARSE to hold those portions of the string being parsed
             13113                  which must be returned to the user - quoted strings, decimal
             13114                  or octal numbers, PL-6 identifiers, etc.
             13115        */
             13116    1   DCL 1 OUT$SYM BASED(BLK$) ALIGNED,
             13117    1         2 TEMP BIT(1) UNAL,
             13118    1         2 * BIT (11) UNAL,
             13119    1         2 NDTYPE UBIN (6) UNAL,
             13120        /*K* NDTYPE - see OUT$BLK.NDTYPE for details.
             13121        */
             13122    1         2 CODE UBIN HALF HALIGNED,
             13123        /*K* CODE - see OUT$BLK.CODE for details.
             13124        */
             13125    1         2 NSUBLKS UBIN HALF HALIGNED,
             13126        /*K* NSUBLKS - always contains the value 1.
             13127        */
             13128    1         2 SCRITCH UBIN HALF HALIGNED,
PL6.E3A0      #001=ASC$RESOURCE File=ASC$RESOURCE.:E05TSI                        TUE 07/29/97 09:43 Page:21   
             13129        /*K* SCRITCH - see OUT$BLK.SCRITCH for details.
             13130        */
             13131    1         2 CPOS UBIN WORD,
             13132        /*K* CPOS - see OUT$BLK.CPOS for details.
             13133        */
             13134    1         2 TEXTC$ PTR,
             13135        /*K* TEXTC$ - a pointer to a TEXTC-type string (a 1-byte count field
             13136                  followed by a variable number of characters).  Always
             13137                  points to OUT$SYM.COUNT in the current OUT$SYM block.
             13138        */
             13139    1         2 COUNT UBIN BYTE CALIGNED,
             13140        /*K* COUNT - contains the number of characters in OUT$SYM.TEXT.
             13141        */
             13142    1         2 TEXT CHAR(OUT$SYM.COUNT) CALIGNED;
             13143        /*K* TEXT - contains the text of a string, decimal number, PL-6
             13144                  identifier, or some other parser "symbol".
             13145        */
      104    13147    1   DCL 1 RES$LIST ALIGNED BASED(AS_RESOURCE_LIST$),
      105    13148    1          2 COUNT UBIN,
      106    13149    1          2 RES(0:0),
      107    13150    1             3 NAME CHAR(2) UNAL,
      108    13151    1             3 BMAX SBIN HALF UNAL,
      109    13152    1             3 GMAX SBIN HALF UNAL,
      110    13153    1             3 OMAX SBIN HALF UNAL,
      111    13154    1             3 TMAX SBIN HALF UNAL;
      112    13155    1   DCL 1 RES$STRC BASED( RES$ ) UNAL ,
      113    13156    1          2 NAME CHAR(2) UNAL ,
      114    13157    1          2 VAL(0:3) UBIN HALF UNAL ;
      115    13158    1   DCL 1 DFLT$STRC BASED( DFLT$ ) UNAL ,
      116    13159    1          2 NAME CHAR(2) UNAL ,
      117    13160    1          2 VAL(0:3) UBIN HALF UNAL ;
      118    13161        %PLIST ;
      119    13162        %SET LISTMAC = '1'B ;
      120    13163
      121    13164        /*********************************************************************/
      122    13165        /*   Procedure       procedure       procedure       procedure       */
      123    13166        /*********************************************************************/
PL6.E3A0      #001=ASC$RESOURCE File=ASC$RESOURCE.:E05TSI                        TUE 07/29/97 09:43 Page:22   
      124    13167                                                              /**/
      125    13168        /*
      126    13169            ***            Begin procedure                    ***
      127    13170        */
      128    13171    2   IF MOD_FLG THEN DO;

  13171  3 000002   200003 470500                    LDP0    @MOD_FLG,,AUTO
         3 000003   000000 234100                    SZN     0,,PR0
         3 000004   000011 605000 3                  TPL     s:13176

      129    13172    2      IF RES$LIST.COUNT = 0 THEN RETURN;

  13172  3 000005   000000 471400 xsym               LDP1    AS_RESOURCE_LIST$
         3 000006   100000 235100                    LDA     0,,PR1
         3 000007   000054 601000 3                  TNZ     s:13193

  13172  3 000010   000000 702200 xent               TSX2  ! X66_ARET

      130    13173    2      END;
      131    13174    2   ELSE DO;

      132    13175                                                              /* Save some of P_PCB. */
      133    13176    2      WORK$ = P_PCB.WORK$ ;

  13176  3 000011   000002 236000 xsym               LDQ     P_PCB+2
         3 000012   200022 756100                    STQ     WORK$,,AUTO

      134    13177    2      WKSZ = P_PCB.WKSZ ;

  13177  3 000013   000005 235000 xsym               LDA     P_PCB+5
         3 000014   000022 771000                    ARL     18
         3 000015   200024 755100                    STA     WKSZ,,AUTO

      135    13178    2      WK_USED = P_PCB.WK_USED ;

  13178  3 000016   000010 235000 xsym               LDA     P_PCB+8
         3 000017   000022 771000                    ARL     18
PL6.E3A0      #001=ASC$RESOURCE File=ASC$RESOURCE.:E05TSI                        TUE 07/29/97 09:43 Page:23   
         3 000020   200025 755100                    STA     WK_USED,,AUTO

      136    13179    2      ROOT$ = P_PCB.ROOT$ ;

  13179  3 000021   000001 236000 xsym               LDQ     P_PCB+1
         3 000022   200023 756100                    STQ     ROOT$,,AUTO

      137    13180                                                              /* Bump past area used. */
      138    13181    2      P_PCB.WORK$ = PINCRW( WORK$, P_PCB.WK_USED ) ;

  13181  3 000023   000010 236000 xsym               LDQ     P_PCB+8
         3 000024   777777 376003                    ANQ     -1,DU
         3 000025   200022 036100                    ADLQ    WORK$,,AUTO
         3 000026   000002 756000 xsym               STQ     P_PCB+2

      139    13182    2      P_PCB.WKSZ = WKSZ - P_PCB.WK_USED ;

  13182  3 000027   200032 755100                    STA     RES_STRC+3,,AUTO
         3 000030   200024 236100                    LDQ     WKSZ,,AUTO
         3 000031   200032 136100                    SBLQ    RES_STRC+3,,AUTO
         3 000032   000000 620006                    EAX0    0,QL
         3 000033   000005 740000 xsym               STX0    P_PCB+5

      140    13183                                                              /* Save NODE$ */
      141    13184    2      T_NODE$ = NODE$ ;

  13184  3 000034   000000 236000 xsym               LDQ     NODE$
         3 000035   200026 756100                    STQ     T_NODE$,,AUTO

      142    13185                                                              /* Set ROOT$ */
      143    13186    2      P_PCB.ROOT$ = ADDR(RES_OPTS) ;

  13186  3 000036   000000 236000 4                  LDQ     0
         3 000037   000001 756000 xsym               STQ     P_PCB+1

      144    13187    2      REMEMBER RES_LOOP IN REMEM_VAR ;

PL6.E3A0      #001=ASC$RESOURCE File=ASC$RESOURCE.:E05TSI                        TUE 07/29/97 09:43 Page:24   
  13187  3 000040   000061 635000 3                  EAA     RES_LOOP
         3 000041   000000 452400 xsym               STP2    REMEM_VAR
         3 000042   000001 755000 xsym               STA     REMEM_VAR+1

      145    13188                                                              /*  Set prompt  */
      146    13189    2      CALL ASB$SET_PROMPT ( %PROMPT_SUB ) ;

  13189  3 000043   000001 630400 4                  EPPR0   1
         3 000044   000017 631400 xsym               EPPR1   B_VECTNIL+15
         3 000045   000000 701000 xent               TSX1    ASB$SET_PROMPT
         3 000046   000000 011000                    NOP     0

      147    13190    2      AS_MOD_USER.RESOURCE = AS_TRUE;

  13190  3 000047   000000 236000 xsym               LDQ     AS_TRUE
         3 000050   000012 772000                    QRL     10
         3 000051   000024 676000 xsym               ERQ     AS_MOD_USER+20
         3 000052   000200 376003                    ANQ     128,DU
         3 000053   000024 656000 xsym               ERSQ    AS_MOD_USER+20

      148    13191    2      END;

      149    13192
      150    13193    1   MORE = AS_TRUE;

  13193  3 000054   000000 236000 xsym               LDQ     AS_TRUE
         3 000055   400000 376003                    ANQ     -131072,DU
         3 000056   200015 756100                    STQ     MORE,,AUTO

      151    13194                                                              /**/
      152    13195    2   DO WHILE( MORE ) ;

  13195  3 000057   200015 234100                    SZN     MORE,,AUTO
         3 000060   000777 605000 3                  TPL     s:13439

  13184  3 000061                       RES_LOOP     null
      153    13196    2   RES_LOOP: ;
PL6.E3A0      #001=ASC$RESOURCE File=ASC$RESOURCE.:E05TSI                        TUE 07/29/97 09:43 Page:25   
      154    13197                                                              /**/
      155    13198    3      IF MOD_FLG THEN DO;

  13198  3 000061   200003 470500                    LDP0    @MOD_FLG,,AUTO
         3 000062   000000 234100                    SZN     0,,PR0
         3 000063   000075 605000 3                  TPL     s:13204

      156    13199    3         MORE = AS_FALSE;

  13199  3 000064   000000 236000 xsym               LDQ     AS_FALSE
         3 000065   400000 376003                    ANQ     -131072,DU
         3 000066   200015 756100                    STQ     MORE,,AUTO

      157    13200    3         CODE = 31 /* RES_OPT */;

  13200  3 000067   000037 235007                    LDA     31,DL
         3 000070   000000 755000 xsym               STA     CODE

      158    13201    3         SUBS = RES$LIST.COUNT;

  13201  3 000071   000000 471400 xsym               LDP1    AS_RESOURCE_LIST$
         3 000072   100000 235100                    LDA     0,,PR1
         3 000073   200011 755100                    STA     SUBS,,AUTO

      159    13202    3         END;

  13202  3 000074   000121 710000 3                  TRA     s:13210

      160    13203    3      ELSE DO;

      161    13204    3         CALL ASB$READ_SI( IN_BUF, ARS ) ;

  13204  3 000075   200004 631500                    EPPR1   ARS,,AUTO
         3 000076   200033 451500                    STP1    RES_STRC+4,,AUTO
         3 000077   000002 236000 4                  LDQ     2
         3 000100   200032 756100                    STQ     RES_STRC+3,,AUTO
         3 000101   200032 630500                    EPPR0   RES_STRC+3,,AUTO
PL6.E3A0      #001=ASC$RESOURCE File=ASC$RESOURCE.:E05TSI                        TUE 07/29/97 09:43 Page:26   
         3 000102   000020 631400 xsym               EPPR1   B_VECTNIL+16
         3 000103   000000 701000 xent               TSX1    ASB$READ_SI
         3 000104   000000 011000                    NOP     0

      162    13205    3         P_PCB.NCHARS = ARS ;

  13205  3 000105   200004 235100                    LDA     ARS,,AUTO
         3 000106   000011 755000 xsym               STA     P_PCB+9

      163    13206    3         CALL X$PARSE( P_PCB ) ALTRET( RES_ERR ) ;

  13206  3 000107   000003 630400 4                  EPPR0   3
         3 000110   000017 631400 xsym               EPPR1   B_VECTNIL+15
         3 000111   000000 701000 xent               TSX1    X$PARSE
         3 000112   001000 702000 3                  TSX2    RES_ERR

      164    13207    3         NODE$ = P_PCB.OUT$ ;

  13207  3 000113   000003 236000 xsym               LDQ     P_PCB+3
         3 000114   000000 756000 xsym               STQ     NODE$

      165    13208    3         SUBS = P$NODE.SUBNODES ;

  13208  3 000115   000000 470400 xsym               LDP0    NODE$
         3 000116   000001 236100                    LDQ     1,,PR0
         3 000117   000022 772000                    QRL     18
         3 000120   200011 756100                    STQ     SUBS,,AUTO

      166    13209    3         END;

      167    13210    3      DO I = 0 TO SUBS-1 ;

  13210  3 000121   200005 450100                    STZ     I,,AUTO
         3 000122   000772 710000 3                  TRA     SKIP_IT+3

      168    13211    3         IF MOD_FLG THEN

PL6.E3A0      #001=ASC$RESOURCE File=ASC$RESOURCE.:E05TSI                        TUE 07/29/97 09:43 Page:27   
  13211  3 000123   200003 470500                    LDP0    @MOD_FLG,,AUTO
         3 000124   000000 234100                    SZN     0,,PR0
         3 000125   000135 605000 3                  TPL     s:13214

      169    13212    3            RES_STRC = RES$LIST.RES(I) ;

  13212  3 000126   200005 236100                    LDQ     I,,AUTO
         3 000127   000012 402007                    MPY     10,DL
         3 000130   000000 471400 xsym               LDP1    AS_RESOURCE_LIST$
         3 000131   000100 100506                    MLR     fill='000'O
         3 000132   100001 000012                    ADSC9   1,Q,PR1                  cn=0,n=10
         3 000133   200027 000012                    ADSC9   RES_STRC,,AUTO           cn=0,n=10
         3 000134   000143 710000 3                  TRA     s:13216

      170    13213    3         ELSE
      171    13214    3            CODE = P$NODE.SUBLK$(I) -> P$NODE.CODE ;

  13214  3 000135   000000 471400 xsym               LDP1    NODE$
         3 000136   200005 720100                    LXL0    I,,AUTO
         3 000137   100003 473510                    LDP3    3,X0,PR1
         3 000140   300000 236100                    LDQ     0,,PR3
         3 000141   777777 376007                    ANQ     -1,DL
         3 000142   000000 756000 xsym               STQ     CODE

      172    13215                                                              /**/
      173    13216    4         DO SELECT( CODE ) ;

  13216  3 000143   000000 236000 xsym               LDQ     CODE
         3 000144   000032 116007                    CMPQ    26,DL
         3 000145   000164 602000 3                  TNC     s:13216+17
         3 000146   000172 600000 3                  TZE     s:13220
         3 000147   000455 116007                    CMPQ    301,DL
         3 000150   000155 602000 3                  TNC     s:13216+10
         3 000151   000216 600000 3                  TZE     s:13234
         3 000152   000456 116007                    CMPQ    302,DL
         3 000153   000767 601000 3                  TNZ     SKIP_IT
         3 000154   000212 710000 3                  TRA     s:13231
PL6.E3A0      #001=ASC$RESOURCE File=ASC$RESOURCE.:E05TSI                        TUE 07/29/97 09:43 Page:28   
         3 000155   000454 116007                    CMPQ    300,DL
         3 000156   000161 602000 3                  TNC     s:13216+14
         3 000157   000222 600000 3                  TZE     s:13237
         3 000160   000767 710000 3                  TRA     SKIP_IT
         3 000161   000037 116007                    CMPQ    31,DL
         3 000162   000767 601000 3                  TNZ     SKIP_IT
         3 000163   000227 710000 3                  TRA     s:13242
         3 000164   000014 116007                    CMPQ    12,DL
         3 000165   000767 602000 3                  TNC     SKIP_IT
         3 000166   000172 600000 3                  TZE     s:13220
         3 000167   000020 116007                    CMPQ    16,DL
         3 000170   000767 601000 3                  TNZ     SKIP_IT
         3 000171   000226 710000 3                  TRA     s:13239

      174    13217                                                              /**/
      175    13218    4            SELECT( 12   /*  END_VAL  */ ,

      176    13219    4                 26   /*  BLANK_LINE_VAL */ ) ;
      177    13220    4            MORE = AS_FALSE ;

  13220  3 000172   000000 236000 xsym               LDQ     AS_FALSE
         3 000173   400000 376003                    ANQ     -131072,DU
         3 000174   200015 756100                    STQ     MORE,,AUTO

      178    13221    4            I = SUBS ;

  13221  3 000175   200011 235100                    LDA     SUBS,,AUTO
         3 000176   200005 755100                    STA     I,,AUTO

      179    13222                                                              /* Restore P_PCB. */
      180    13223    4            P_PCB.WORK$ = WORK$ ;

  13223  3 000177   200022 236100                    LDQ     WORK$,,AUTO
         3 000200   000002 756000 xsym               STQ     P_PCB+2

      181    13224    4            P_PCB.WKSZ = WKSZ ;

PL6.E3A0      #001=ASC$RESOURCE File=ASC$RESOURCE.:E05TSI                        TUE 07/29/97 09:43 Page:29   
  13224  3 000201   200024 720100                    LXL0    WKSZ,,AUTO
         3 000202   000005 740000 xsym               STX0    P_PCB+5

      182    13225    4            P_PCB.WK_USED = P_PCB.WK_USED ;

  13225  3 000203   000010 221000 xsym               LDX1    P_PCB+8
         3 000204   000010 741000 xsym               STX1    P_PCB+8

      183    13226    4            P_PCB.ROOT$ = ROOT$ ;

  13226  3 000205   200023 236100                    LDQ     ROOT$,,AUTO
         3 000206   000001 756000 xsym               STQ     P_PCB+1

      184    13227                                                              /* Restore NODE$ */
      185    13228    4            NODE$ = T_NODE$ ;

  13228  3 000207   200026 236100                    LDQ     T_NODE$,,AUTO
         3 000210   000000 756000 xsym               STQ     NODE$
         3 000211   000767 710000 3                  TRA     SKIP_IT

      186    13229                                                              /**/
      187    13230    4            SELECT( 302 /* HELP_VAL */ ) ;

      188    13231    4            CALL ASH$HELP ;

  13231  3 000212   000002 631400 xsym               EPPR1   B_VECTNIL+2
         3 000213   000000 701000 xent               TSX1    ASH$HELP
         3 000214   000000 011000                    NOP     0
         3 000215   000767 710000 3                  TRA     SKIP_IT

      189    13232                                                                  /**/
      190    13233    4            SELECT( 301 /* QUESTION_VAL */ ) ;

      191    13234    4            CALL ASH$QUEST ;

  13234  3 000216   000002 631400 xsym               EPPR1   B_VECTNIL+2
         3 000217   000000 701000 xent               TSX1    ASH$QUEST
PL6.E3A0      #001=ASC$RESOURCE File=ASC$RESOURCE.:E05TSI                        TUE 07/29/97 09:43 Page:30   
         3 000220   000000 011000                    NOP     0
         3 000221   000767 710000 3                  TRA     SKIP_IT

      192    13235                                                                  /**/
      193    13236    4            SELECT( 300 /* DQUESTION_VAL */ ) ;

      194    13237    4            CALL ASH$DQUEST ;

  13237  3 000222   000002 631400 xsym               EPPR1   B_VECTNIL+2
         3 000223   000000 701000 xent               TSX1    ASH$DQUEST
         3 000224   000000 011000                    NOP     0
         3 000225   000767 710000 3                  TRA     SKIP_IT

      195    13238                                                                  /**/
      196    13239    4            SELECT( 16   /*  EOL_VAL  */ ) ;

  13239  3 000226   000767 710000 3                  TRA     SKIP_IT

      197    13240                                                              /**/
      198    13241    4            SELECT( 31 /* RES_OPT */ ) ;

      199    13242    5            IF NOT MOD_FLG THEN DO;

  13242  3 000227   000000 234100                    SZN     0,,PR0
         3 000230   000352 604000 3                  TMI     s:13307

      200    13243    5               BLK$ = P$NODE.SUBLK$(I) -> P$NODE.SUBLK$(0)

  13243  3 000231   000000 471400 xsym               LDP1    NODE$
         3 000232   200005 720100                    LXL0    I,,AUTO
         3 000233   100003 473510                    LDP3    3,X0,PR1
         3 000234   300003 474500                    LDP4    3,,PR3
         3 000235   400003 236100                    LDQ     3,,PR4
         3 000236   200016 756100                    STQ     BLK$,,AUTO

      201    13244    5                    -> P$NODE.SUBLK$(0) ;
      202    13245    5               IF OUT$SYM.COUNT > 2
PL6.E3A0      #001=ASC$RESOURCE File=ASC$RESOURCE.:E05TSI                        TUE 07/29/97 09:43 Page:31   

  13245  3 000237   200016 475500                    LDP5    BLK$,,AUTO
         3 000240   500004 236100                    LDQ     4,,PR5
         3 000241   777000 376003                    ANQ     -512,DU
         3 000242   003000 116003                    CMPQ    1536,DU
         3 000243   000251 602000 3                  TNC     s:13268

      203    13246    6               THEN DO;

      204    13247        /*E*  ERROR:    ASC-E$RES_NAME_TOO_LONG-C
      205    13248              MESSAGE:  RESOURCE name too long.
      206    13249              MESSAGE1: RESOURCE name can be at most 2 characters long.
      207    13250        */
      208    13251                       %SCREAM( ERR#=E$RES_NAME_TOO_LONG, LEVEL=ERROR, MID='C' );
             13252        %LSET LISTDIR='0'B;
             13263    6         CALL ASH$ERROR( %(ERR_CODE) );

  13263  3 000244   000004 630400 4                  EPPR0   4
         3 000245   000017 631400 xsym               EPPR1   B_VECTNIL+15
         3 000246   000000 701000 xent               TSX1    ASH$ERROR
         3 000247   000000 011000                    NOP     0

      209    13266    6                  GOTO SKIP_IT;

  13266  3 000250   000767 710000 3                  TRA     SKIP_IT

      210    13267    6                  END ;    /* Then do */
      211    13268    5               RES_STRC.NAME = OUT$SYM.TEXT ;

  13268  3 000251   500004 236100                    LDQ     4,,PR5
         3 000252   000033 772000                    QRL     27
         3 000253   000000 621006                    EAX1    0,QL
         3 000254   040100 100540                    MLR     fill='040'O
         3 000255   500004 200011                    ADSC9   4,,PR5                   cn=1,n=*X1
         3 000256   200027 000002                    ADSC9   RES_STRC,,AUTO           cn=0,n=2

      212    13269    6               DO J = 0 TO 3;
PL6.E3A0      #001=ASC$RESOURCE File=ASC$RESOURCE.:E05TSI                        TUE 07/29/97 09:43 Page:32   

  13269  3 000257   200006 450100                    STZ     J,,AUTO

      213    13270    6                  RES_STRC.MODE(J) = -1;

  13270  3 000260   200006 235100                    LDA     J,,AUTO
         3 000261   000001 735000                    ALS     1
         3 000262   000105 101400                    MRL     fill='000'O
         3 000263   000027 000004 xsym               ADSC9   B_VECTNIL+23             cn=0,n=4
         3 000264   200027 400002                    ADSC9   RES_STRC,A,AUTO          cn=2,n=2

      214    13271    6                  END;

  13271  3 000265   200006 236100                    LDQ     J,,AUTO
         3 000266   000001 036007                    ADLQ    1,DL
         3 000267   200006 756100                    STQ     J,,AUTO
         3 000270   000004 116007                    CMPQ    4,DL
         3 000271   000260 602000 3                  TNC     s:13270

      215    13272    5               PTR$ = P$NODE.SUBLK$(I) -> P$NODE.SUBLK$(1) ;

  13272  3 000272   000000 470400 xsym               LDP0    NODE$
         3 000273   200005 720100                    LXL0    I,,AUTO
         3 000274   000003 471510                    LDP1    3,X0,PR0
         3 000275   100004 236100                    LDQ     4,,PR1
         3 000276   200017 756100                    STQ     PTR$,,AUTO

      216    13273    5               SUBNDS = PTR$ -> P$NODE.SUBNODES ;

  13273  3 000277   200017 473500                    LDP3    PTR$,,AUTO
         3 000300   300001 236100                    LDQ     1,,PR3
         3 000301   000022 772000                    QRL     18
         3 000302   200012 756100                    STQ     SUBNDS,,AUTO

      217    13274    6               DO J = 0 TO SUBNDS-1 ;

  13274  3 000303   200006 450100                    STZ     J,,AUTO
PL6.E3A0      #001=ASC$RESOURCE File=ASC$RESOURCE.:E05TSI                        TUE 07/29/97 09:43 Page:33   
         3 000304   000347 710000 3                  TRA     s:13304+3

      218    13275    6                  MODE = PTR$ -> P$NODE.SUBLK$(J) -> P$NODE.SUBLK$(0)

  13275  3 000305   200017 470500                    LDP0    PTR$,,AUTO
         3 000306   200006 720100                    LXL0    J,,AUTO
         3 000307   000003 471510                    LDP1    3,X0,PR0
         3 000310   100003 473500                    LDP3    3,,PR1
         3 000311   300000 236100                    LDQ     0,,PR3
         3 000312   777777 376007                    ANQ     -1,DL
         3 000313   200010 756100                    STQ     MODE,,AUTO

      219    13276    6                       -> P$NODE.CODE ;
      220    13277    6                  BLK$ = PTR$ -> P$NODE.SUBLK$(J) -> P$NODE.SUBLK$(1)

  13277  3 000314   100004 474500                    LDP4    4,,PR1
         3 000315   400003 236100                    LDQ     3,,PR4
         3 000316   200016 756100                    STQ     BLK$,,AUTO

      221    13278    6                       -> P$NODE.SUBLK$(0) ;
      222    13279    6                  CALL CHARBIN( VAL, OUT$SYM.TEXT ) ;

  13279  3 000317   200016 475500                    LDP5    BLK$,,AUTO
         3 000320   500004 236100                    LDQ     4,,PR5
         3 000321   000033 772000                    QRL     27
         3 000322   000000 621006                    EAX1    0,QL
         3 000323   000100 305540                    DTB
         3 000324   500004 230011                    NDSC9   4,,PR5                   cn=1,s=nosgn,sf=0,n=*X1
         3 000325   200032 000010                    NDSC9   RES_STRC+3,,AUTO         cn=0,s=lsgnf,sf=0,n=8
         3 000326   200033 235100                    LDA     RES_STRC+4,,AUTO
         3 000327   200013 755100                    STA     VAL,,AUTO

      223    13280    6                  IF VAL > 511

  13280  3 000330   001000 115007                    CMPA    512,DL
         3 000331   000337 602000 3                  TNC     s:13303

PL6.E3A0      #001=ASC$RESOURCE File=ASC$RESOURCE.:E05TSI                        TUE 07/29/97 09:43 Page:34   
      224    13281    7                  THEN DO;

      225    13282        /*E*  ERROR:    ASC-E$RES_VAL_TOO_BIG-C
      226    13283              MESSAGE:  RESOURCE value too big.
      227    13284              MESSAGE1: RESOURCE value can be at most 511.
      228    13285        */
      229    13286                          %SCREAM( ERR#=E$RES_VAL_TOO_BIG, LEVEL=ERROR,MID='C');
             13287        %LSET LISTDIR='0'B;
             13298    7         CALL ASH$ERROR( %(ERR_CODE) );

  13298  3 000332   000005 630400 4                  EPPR0   5
         3 000333   000017 631400 xsym               EPPR1   B_VECTNIL+15
         3 000334   000000 701000 xent               TSX1    ASH$ERROR
         3 000335   000000 011000                    NOP     0

      230    13301    7                     END;

  13301  3 000336   000344 710000 3                  TRA     s:13304

      231    13302    6                  ELSE
      232    13303    6                     RES_STRC.MODE(MODE) = VAL;

  13303  3 000337   200010 236100                    LDQ     MODE,,AUTO
         3 000340   000001 736000                    QLS     1
         3 000341   000106 101500                    MRL     fill='000'O
         3 000342   200013 000004                    ADSC9   VAL,,AUTO                cn=0,n=4
         3 000343   200027 400002                    ADSC9   RES_STRC,Q,AUTO          cn=2,n=2

      233    13304    6                  END;    /* Do j = 0 to SUBNDS-1 */

  13304  3 000344   200006 235100                    LDA     J,,AUTO
         3 000345   000001 035007                    ADLA    1,DL
         3 000346   200006 755100                    STA     J,,AUTO
         3 000347   200006 236100                    LDQ     J,,AUTO
         3 000350   200012 116100                    CMPQ    SUBNDS,,AUTO
         3 000351   000305 602000 3                  TNC     s:13275

PL6.E3A0      #001=ASC$RESOURCE File=ASC$RESOURCE.:E05TSI                        TUE 07/29/97 09:43 Page:35   
      234    13305    5               END;   /* If not MOD_FLG then do */

      235    13306                                                            /* Find res in users record. */
      236    13307    4            RES# = AS_USERS.TOT_TYPES ;

  13307  3 000352   000325 235000 xsym               LDA     AS_USERS+213
         3 000353   000022 771000                    ARL     18
         3 000354   200014 755100                    STA     RES#,,AUTO

      237    13308    4            IF RES# > 0

  13308  3 000355   000375 600000 3                  TZE     s:13315

      238    13309    5            THEN DO;

      239    13310    6               DO J = 0 TO RES#-1 ;

  13310  3 000356   200006 450100                    STZ     J,,AUTO
         3 000357   000371 710000 3                  TRA     s:13312+3

      240    13311    6                  IF AS_USERS.RESL.RNAME(J) = RES_STRC.NAME THEN GOTO FOUND_RES ;

  13311  3 000360   200006 236100                    LDQ     J,,AUTO
         3 000361   000012 402007                    MPY     10,DL
         3 000362   040100 106406                    CMPC    fill='040'O
         3 000363   000325 400002 xsym               ADSC9   AS_USERS+213,Q           cn=2,n=2
         3 000364   200027 000002                    ADSC9   RES_STRC,,AUTO           cn=0,n=2
         3 000365   000446 600000 3                  TZE     FOUND_RES

      241    13312    6                  END ; /* Do j */

  13312  3 000366   200006 235100                    LDA     J,,AUTO
         3 000367   000001 035007                    ADLA    1,DL
         3 000370   200006 755100                    STA     J,,AUTO
         3 000371   200006 236100                    LDQ     J,,AUTO
         3 000372   200014 116100                    CMPQ    RES#,,AUTO
         3 000373   000360 602000 3                  TNC     s:13311
PL6.E3A0      #001=ASC$RESOURCE File=ASC$RESOURCE.:E05TSI                        TUE 07/29/97 09:43 Page:36   

      242    13313    5               END;

  13313  3 000374   000376 710000 3                  TRA     s:13318

      243    13314    5            ELSE DO;

      244    13315    5               J = 0;

  13315  3 000375   200006 450100                    STZ     J,,AUTO

      245    13316    5               END;

      246    13317                                                              /* Didn't find it. */
      247    13318    4            IF J > 7

  13318  3 000376   200006 235100                    LDA     J,,AUTO
         3 000377   000010 115007                    CMPA    8,DL
         3 000400   000414 602000 3                  TNC     s:13343

      248    13319    5            THEN DO;

      249    13320        /*E*  ERROR:    ASC-E$TOO_MANY_RESOURCES-C
      250    13321              MESSAGE:  Too many RESOURCES.
      251    13322              MESSAGE1:  At most 8 RESOURCES can be defined.
      252    13323        */
      253    13324    5               IF MOD_FLG THEN CALL ASB$FLUSH_ERR;

  13324  3 000401   200003 470500                    LDP0    @MOD_FLG,,AUTO
         3 000402   000000 234100                    SZN     0,,PR0
         3 000403   000407 605000 3                  TPL     s:13337

  13324  3 000404   000002 631400 xsym               EPPR1   B_VECTNIL+2
         3 000405   000000 701000 xent               TSX1    ASB$FLUSH_ERR
         3 000406   000000 011000                    NOP     0

      254    13325                    %SCREAM( ERR#=E$TOO_MANY_RESOURCES, LEVEL=ERROR, MID='C');
PL6.E3A0      #001=ASC$RESOURCE File=ASC$RESOURCE.:E05TSI                        TUE 07/29/97 09:43 Page:37   
             13326        %LSET LISTDIR='0'B;
             13337    5         CALL ASH$ERROR( %(ERR_CODE) );

  13337  3 000407   000006 630400 4                  EPPR0   6
         3 000410   000017 631400 xsym               EPPR1   B_VECTNIL+15
         3 000411   000000 701000 xent               TSX1    ASH$ERROR
         3 000412   000000 011000                    NOP     0

      255    13340    5               GOTO SKIP_IT;

  13340  3 000413   000767 710000 3                  TRA     SKIP_IT

      256    13341    5               END ;    /* Then do */
      257    13342                                                              /* Set up next slot. */
      258    13343    5            IF AS_CR_MOD_PROJ > 0 THEN DO;

  13343  3 000414   000000 236000 xsym               LDQ     AS_CR_MOD_PROJ
         3 000415   000423 604400 3                  TMOZ    s:13365

      259    13344        /*E* ERROR:  ASC-E$NO_MORE_RES-C
      260    13345             MESSAGE:  You cannot define the resource for this user.
      261    13346             MESSAGE1: You must have that resource available to you.
      262    13347        */
      263    13348                    %SCREAM(ERR#=E$NO_MORE_RES,LEVEL=ERROR,MID='C');
             13349        %LSET LISTDIR='0'B;
             13360    5         CALL ASH$ERROR( %(ERR_CODE) );

  13360  3 000416   000007 630400 4                  EPPR0   7
         3 000417   000017 631400 xsym               EPPR1   B_VECTNIL+15
         3 000420   000000 701000 xent               TSX1    ASH$ERROR
         3 000421   000000 011000                    NOP     0

      264    13363    5               GOTO SKIP_IT ;

  13363  3 000422   000767 710000 3                  TRA     SKIP_IT

      265    13364    5               END;      /* Of then do     */
PL6.E3A0      #001=ASC$RESOURCE File=ASC$RESOURCE.:E05TSI                        TUE 07/29/97 09:43 Page:38   
      266    13365    4            AS_USERS.TOT_TYPES = J + 1 ;

  13365  3 000423   000001 620005                    EAX0    1,AL
         3 000424   000325 740000 xsym               STX0    AS_USERS+213

      267    13366    4            AS_USERS.RESL.RNAME(J) = RES_STRC.NAME ;

  13366  3 000425   200006 236100                    LDQ     J,,AUTO
         3 000426   000012 402007                    MPY     10,DL
         3 000427   040006 100500                    MLR     fill='040'O
         3 000430   200027 000002                    ADSC9   RES_STRC,,AUTO           cn=0,n=2
         3 000431   000325 400002 xsym               ADSC9   AS_USERS+213,Q           cn=2,n=2

      268    13367    4            AS_USERS.RESL.BMAX(J) = 0 ;

  13367  3 000432   000006 101400                    MRL     fill='000'O
         3 000433   000002 000004 xsym               ADSC9   B_VECTNIL+2              cn=0,n=4
         3 000434   000326 000002 xsym               ADSC9   AS_USERS+214,Q           cn=0,n=2

      269    13368    4            AS_USERS.RESL.GMAX(J) = 0 ;

  13368  3 000435   000006 101400                    MRL     fill='000'O
         3 000436   000002 000004 xsym               ADSC9   B_VECTNIL+2              cn=0,n=4
         3 000437   000326 400002 xsym               ADSC9   AS_USERS+214,Q           cn=2,n=2

      270    13369    4            AS_USERS.RESL.OMAX(J) = 0 ;

  13369  3 000440   000006 101400                    MRL     fill='000'O
         3 000441   000002 000004 xsym               ADSC9   B_VECTNIL+2              cn=0,n=4
         3 000442   000327 000002 xsym               ADSC9   AS_USERS+215,Q           cn=0,n=2

      271    13370    4            AS_USERS.RESL.TMAX(J) = 0 ;

  13370  3 000443   000006 101400                    MRL     fill='000'O
         3 000444   000002 000004 xsym               ADSC9   B_VECTNIL+2              cn=0,n=4
         3 000445   000327 400002 xsym               ADSC9   AS_USERS+215,Q           cn=2,n=2

PL6.E3A0      #001=ASC$RESOURCE File=ASC$RESOURCE.:E05TSI                        TUE 07/29/97 09:43 Page:39   
  13370  3 000446                       FOUND_RES    null
      272    13371    4   FOUND_RES: ;
      273    13372    4            RES$ = ADDR( AS_USERS.RESL.RNAME(J)) ;

  13372  3 000446   200006 236100                    LDQ     J,,AUTO
         3 000447   000011 402000 4                  MPY     9
         3 000450   000010 036000 4                  ADLQ    8
         3 000451   200020 756100                    STQ     RES$,,AUTO

      274    13373    4            DFLT$ = ADDR( AS_DFLT.RESL.RNAME(J)) ;

  13373  3 000452   200006 236100                    LDQ     J,,AUTO
         3 000453   000011 402000 4                  MPY     9
         3 000454   000012 036000 4                  ADLQ    10
         3 000455   200021 756100                    STQ     DFLT$,,AUTO

      275    13374    5            DO J = 0 TO 3;

  13374  3 000456   200006 450100                    STZ     J,,AUTO

      276    13375    6               IF RES_STRC.MODE(J) > -1 THEN DO ;

  13375  3 000457   200006 235100                    LDA     J,,AUTO
         3 000460   000001 735000                    ALS     1
         3 000461   000100 100505                    MLR     fill='000'O
         3 000462   200027 400002                    ADSC9   RES_STRC,A,AUTO          cn=2,n=2
         3 000463   200032 000004                    ADSC9   RES_STRC+3,,AUTO         cn=0,n=4
         3 000464   200032 236100                    LDQ     RES_STRC+3,,AUTO
         3 000465   000022 732000                    QRS     18
         3 000466   000000 116003                    CMPQ    0,DU
         3 000467   000520 604000 3                  TMI     s:13401

      277    13376    6                  IF  AS_CR_MOD_PROJ > 0  AND

  13376  3 000470   000000 236000 xsym               LDQ     AS_CR_MOD_PROJ
         3 000471   000514 604400 3                  TMOZ    s:13399
         3 000472   000100 100505                    MLR     fill='000'O
PL6.E3A0      #001=ASC$RESOURCE File=ASC$RESOURCE.:E05TSI                        TUE 07/29/97 09:43 Page:40   
         3 000473   200027 400002                    ADSC9   RES_STRC,A,AUTO          cn=2,n=2
         3 000474   200032 000004                    ADSC9   RES_STRC+3,,AUTO         cn=0,n=4
         3 000475   200032 236100                    LDQ     RES_STRC+3,,AUTO
         3 000476   000022 732000                    QRS     18
         3 000477   200033 756100                    STQ     RES_STRC+4,,AUTO
         3 000500   200021 470500                    LDP0    DFLT$,,AUTO
         3 000501   000100 101505                    MRL     fill='000'O
         3 000502   000000 400002                    ADSC9   0,A,PR0                  cn=2,n=2
         3 000503   200034 000004                    ADSC9   RES_STRC+5,,AUTO         cn=0,n=4
         3 000504   200034 236100                    LDQ     RES_STRC+5,,AUTO
         3 000505   200033 116100                    CMPQ    RES_STRC+4,,AUTO
         3 000506   000514 605000 3                  TPL     s:13399

      278    13377    6                       RES_STRC.MODE(J) > DFLT$STRC.VAL(J) THEN
      279    13378    7                  DO ;

      280    13379        /*E* ERROR:      ASC-E$RES_VAL_TOO_HIGH-C
      281    13380             MESSAGE:   This user cannot have more resource value than your resource value.
      282    13381        */
      283    13382                          %SCREAM (ERR#=E$RES_VAL_TOO_HIGH,LEVEL=ERROR,MID='C');
             13383        %LSET LISTDIR='0'B;
             13394    7         CALL ASH$ERROR( %(ERR_CODE) );

  13394  3 000507   000013 630400 4                  EPPR0   11
         3 000510   000017 631400 xsym               EPPR1   B_VECTNIL+15
         3 000511   000000 701000 xent               TSX1    ASH$ERROR
         3 000512   000000 011000                    NOP     0

      284    13397    7                     GOTO SKIP_IT ;

  13397  3 000513   000767 710000 3                  TRA     SKIP_IT

      285    13398    7                     END;        /* Of then do    */
      286    13399    6                  RES$STRC.VAL( J ) = RES_STRC.MODE( J ) ;

  13399  3 000514   200020 470500                    LDP0    RES$,,AUTO
         3 000515   000105 100505                    MLR     fill='000'O
PL6.E3A0      #001=ASC$RESOURCE File=ASC$RESOURCE.:E05TSI                        TUE 07/29/97 09:43 Page:41   
         3 000516   200027 400002                    ADSC9   RES_STRC,A,AUTO          cn=2,n=2
         3 000517   000000 400002                    ADSC9   0,A,PR0                  cn=2,n=2

      287    13400    6                  END;   /* Do if RES_STRC.MODE(J) > -1  */

      288    13401    5               END ; /* Do j */

  13401  3 000520   200006 236100                    LDQ     J,,AUTO
         3 000521   000001 036007                    ADLQ    1,DL
         3 000522   200006 756100                    STQ     J,,AUTO
         3 000523   000004 116007                    CMPQ    4,DL
         3 000524   000457 602000 3                  TNC     s:13375

      289    13402    4            IF NOT MOD_FLG  AND  AS_WILD_USER

  13402  3 000525   200003 470500                    LDP0    @MOD_FLG,,AUTO
         3 000526   000000 234100                    SZN     0,,PR0
         3 000527   000545 604000 3                  TMI     s:13407
         3 000530   000000 234000 xsym               SZN     AS_WILD_USER
         3 000531   000545 605000 3                  TPL     s:13407

      290    13403    5            THEN DO;

      291    13404    5               RES$LIST.RES( RES$LIST.COUNT) = RES_STRC;

  13404  3 000532   000000 471400 xsym               LDP1    AS_RESOURCE_LIST$
         3 000533   100000 235100                    LDA     0,,PR1
         3 000534   000044 733000                    LRS     36
         3 000535   000012 402007                    MPY     10,DL
         3 000536   000106 100500                    MLR     fill='000'O
         3 000537   200027 000012                    ADSC9   RES_STRC,,AUTO           cn=0,n=10
         3 000540   100001 000012                    ADSC9   1,Q,PR1                  cn=0,n=10

      292    13405    5               RES$LIST.COUNT = RES$LIST.COUNT + 1;

  13405  3 000541   000000 471400 xsym               LDP1    AS_RESOURCE_LIST$
         3 000542   100000 235100                    LDA     0,,PR1
PL6.E3A0      #001=ASC$RESOURCE File=ASC$RESOURCE.:E05TSI                        TUE 07/29/97 09:43 Page:42   
         3 000543   000001 035007                    ADLA    1,DL
         3 000544   100000 755100                    STA     0,,PR1

      293    13406    5               END;

      294    13407    5            DO J = 0 TO 7;   /* Compress the resource limits table */

  13407  3 000545   200006 450100                    STZ     J,,AUTO

      295    13408    5               IF ((AS_USERS.RESL.BMAX (J) = 0) AND

  13408  3 000546   200006 236100                    LDQ     J,,AUTO
         3 000547   000012 402007                    MPY     10,DL
         3 000550   000100 101406                    MRL     fill='000'O
         3 000551   000326 000002 xsym               ADSC9   AS_USERS+214,Q           cn=0,n=2
         3 000552   200032 000004                    ADSC9   RES_STRC+3,,AUTO         cn=0,n=4
         3 000553   200032 236100                    LDQ     RES_STRC+3,,AUTO
         3 000554   000000 116003                    CMPQ    0,DU
         3 000555   000762 601000 3                  TNZ     s:13433
         3 000556   200006 236100                    LDQ     J,,AUTO
         3 000557   000012 402007                    MPY     10,DL
         3 000560   000100 101406                    MRL     fill='000'O
         3 000561   000326 400002 xsym               ADSC9   AS_USERS+214,Q           cn=2,n=2
         3 000562   200033 000004                    ADSC9   RES_STRC+4,,AUTO         cn=0,n=4
         3 000563   200033 236100                    LDQ     RES_STRC+4,,AUTO
         3 000564   000000 116003                    CMPQ    0,DU
         3 000565   000762 601000 3                  TNZ     s:13433
         3 000566   200006 236100                    LDQ     J,,AUTO
         3 000567   000012 402007                    MPY     10,DL
         3 000570   000100 101406                    MRL     fill='000'O
         3 000571   000327 000002 xsym               ADSC9   AS_USERS+215,Q           cn=0,n=2
         3 000572   200034 000004                    ADSC9   RES_STRC+5,,AUTO         cn=0,n=4
         3 000573   200034 236100                    LDQ     RES_STRC+5,,AUTO
         3 000574   000000 116003                    CMPQ    0,DU
         3 000575   000762 601000 3                  TNZ     s:13433
         3 000576   200006 236100                    LDQ     J,,AUTO
         3 000577   000012 402007                    MPY     10,DL
PL6.E3A0      #001=ASC$RESOURCE File=ASC$RESOURCE.:E05TSI                        TUE 07/29/97 09:43 Page:43   
         3 000600   000100 101406                    MRL     fill='000'O
         3 000601   000327 400002 xsym               ADSC9   AS_USERS+215,Q           cn=2,n=2
         3 000602   200035 000004                    ADSC9   RES_STRC+6,,AUTO         cn=0,n=4
         3 000603   200035 236100                    LDQ     RES_STRC+6,,AUTO
         3 000604   000000 116003                    CMPQ    0,DU
         3 000605   000762 601000 3                  TNZ     s:13433
         3 000606   200006 236100                    LDQ     J,,AUTO
         3 000607   000012 402007                    MPY     10,DL
         3 000610   040000 106406                    CMPC    fill='040'O
         3 000611   000325 400002 xsym               ADSC9   AS_USERS+213,Q           cn=2,n=2
         3 000612   000005 000002 2                  ADSC9   5                        cn=0,n=2
         3 000613   000762 600000 3                  TZE     s:13433

      296    13409    5                    (AS_USERS.RESL.GMAX (J) = 0) AND
      297    13410    5                    (AS_USERS.RESL.OMAX (J) = 0) AND
      298    13411    5                    (AS_USERS.RESL.TMAX (J) = 0) AND
      299    13412    5                    (AS_USERS.RESL.RNAME(J) ~= '  '))
      300    13413    6               THEN DO;

      301    13414    6                  AS_USERS.RESL.RNAME (J) = ' ';

  13414  3 000614   040006 100400                    MLR     fill='040'O
         3 000615   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         3 000616   000325 400002 xsym               ADSC9   AS_USERS+213,Q           cn=2,n=2

      302    13415    6                  AS_USERS.TOT_TYPES = AS_USERS.TOT_TYPES -1;

  13415  3 000617   000325 220000 xsym               LDX0    AS_USERS+213
         3 000620   777777 621010                    EAX1    -1,X0
         3 000621   000325 741000 xsym               STX1    AS_USERS+213

      303    13416    7   SWAPONE:       DO K = 7 DOWNTO (J + 1);

  13416  3 000622   000007 235007       SWAPONE      LDA     7,DL
         3 000623   200007 755100                    STA     K,,AUTO
         3 000624   000757 710000 3                  TRA     s:13431+3

PL6.E3A0      #001=ASC$RESOURCE File=ASC$RESOURCE.:E05TSI                        TUE 07/29/97 09:43 Page:44   
      304    13417    7                     IF (AS_USERS.RESL.RNAME(K) ~= '  ') AND

  13417  3 000625   200007 236100                    LDQ     K,,AUTO
         3 000626   000012 402007                    MPY     10,DL
         3 000627   040000 106406                    CMPC    fill='040'O
         3 000630   000325 400002 xsym               ADSC9   AS_USERS+213,Q           cn=2,n=2
         3 000631   000005 000002 2                  ADSC9   5                        cn=0,n=2
         3 000632   000754 600000 3                  TZE     s:13431
         3 000633   200006 236100                    LDQ     J,,AUTO
         3 000634   000012 402007                    MPY     10,DL
         3 000635   000100 101406                    MRL     fill='000'O
         3 000636   000326 000002 xsym               ADSC9   AS_USERS+214,Q           cn=0,n=2
         3 000637   200032 000004                    ADSC9   RES_STRC+3,,AUTO         cn=0,n=4
         3 000640   200032 236100                    LDQ     RES_STRC+3,,AUTO
         3 000641   000000 116003                    CMPQ    0,DU
         3 000642   000673 601000 3                  TNZ     s:13423
         3 000643   200006 236100                    LDQ     J,,AUTO
         3 000644   000012 402007                    MPY     10,DL
         3 000645   000100 101406                    MRL     fill='000'O
         3 000646   000326 400002 xsym               ADSC9   AS_USERS+214,Q           cn=2,n=2
         3 000647   200033 000004                    ADSC9   RES_STRC+4,,AUTO         cn=0,n=4
         3 000650   200033 236100                    LDQ     RES_STRC+4,,AUTO
         3 000651   000000 116003                    CMPQ    0,DU
         3 000652   000673 601000 3                  TNZ     s:13423
         3 000653   200006 236100                    LDQ     J,,AUTO
         3 000654   000012 402007                    MPY     10,DL
         3 000655   000100 101406                    MRL     fill='000'O
         3 000656   000327 000002 xsym               ADSC9   AS_USERS+215,Q           cn=0,n=2
         3 000657   200034 000004                    ADSC9   RES_STRC+5,,AUTO         cn=0,n=4
         3 000660   200034 236100                    LDQ     RES_STRC+5,,AUTO
         3 000661   000000 116003                    CMPQ    0,DU
         3 000662   000673 601000 3                  TNZ     s:13423
         3 000663   200006 236100                    LDQ     J,,AUTO
         3 000664   000012 402007                    MPY     10,DL
         3 000665   000100 101406                    MRL     fill='000'O
         3 000666   000327 400002 xsym               ADSC9   AS_USERS+215,Q           cn=2,n=2
         3 000667   200035 000004                    ADSC9   RES_STRC+6,,AUTO         cn=0,n=4
PL6.E3A0      #001=ASC$RESOURCE File=ASC$RESOURCE.:E05TSI                        TUE 07/29/97 09:43 Page:45   
         3 000670   200035 236100                    LDQ     RES_STRC+6,,AUTO
         3 000671   000000 116003                    CMPQ    0,DU
         3 000672   000754 600000 3                  TZE     s:13431

      305    13418    7                          ((AS_USERS.RESL.BMAX (J) ~= 0) OR
      306    13419    7                          (AS_USERS.RESL.GMAX (J) ~= 0) OR
      307    13420    7                          (AS_USERS.RESL.OMAX (J) ~= 0) OR
      308    13421    7                          (AS_USERS.RESL.TMAX (J) ~= 0))
      309    13422    8                     THEN DO;

      310    13423    8                        AS_USERS.RESL.RNAME(J) = AS_USERS.RESL.RNAME(K);

  13423  3 000673   200007 236100                    LDQ     K,,AUTO
         3 000674   000012 402007                    MPY     10,DL
         3 000675   200032 756100                    STQ     RES_STRC+3,,AUTO
         3 000676   200006 236100                    LDQ     J,,AUTO
         3 000677   000012 402007                    MPY     10,DL
         3 000700   200032 235100                    LDA     RES_STRC+3,,AUTO
         3 000701   040006 100405                    MLR     fill='040'O
         3 000702   000325 400002 xsym               ADSC9   AS_USERS+213,A           cn=2,n=2
         3 000703   000325 400002 xsym               ADSC9   AS_USERS+213,Q           cn=2,n=2

      311    13424    8                        AS_USERS.RESL.RNAME(K) = ' ';

  13424  3 000704   200007 236100                    LDQ     K,,AUTO
         3 000705   000012 402007                    MPY     10,DL
         3 000706   040006 100400                    MLR     fill='040'O
         3 000707   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         3 000710   000325 400002 xsym               ADSC9   AS_USERS+213,Q           cn=2,n=2

      312    13425    8                        AS_USERS.RESL.TMAX(J) = AS_USERS.RESL.TMAX(K);

  13425  3 000711   200032 756100                    STQ     RES_STRC+3,,AUTO
         3 000712   200006 236100                    LDQ     J,,AUTO
         3 000713   000012 402007                    MPY     10,DL
         3 000714   200032 235100                    LDA     RES_STRC+3,,AUTO
         3 000715   000006 100405                    MLR     fill='000'O
PL6.E3A0      #001=ASC$RESOURCE File=ASC$RESOURCE.:E05TSI                        TUE 07/29/97 09:43 Page:46   
         3 000716   000327 400002 xsym               ADSC9   AS_USERS+215,A           cn=2,n=2
         3 000717   000327 400002 xsym               ADSC9   AS_USERS+215,Q           cn=2,n=2

      313    13426    8                        AS_USERS.RESL.GMAX(J) = AS_USERS.RESL.GMAX(K);

  13426  3 000720   200007 236100                    LDQ     K,,AUTO
         3 000721   000012 402007                    MPY     10,DL
         3 000722   200032 756100                    STQ     RES_STRC+3,,AUTO
         3 000723   200006 236100                    LDQ     J,,AUTO
         3 000724   000012 402007                    MPY     10,DL
         3 000725   200032 235100                    LDA     RES_STRC+3,,AUTO
         3 000726   000006 100405                    MLR     fill='000'O
         3 000727   000326 400002 xsym               ADSC9   AS_USERS+214,A           cn=2,n=2
         3 000730   000326 400002 xsym               ADSC9   AS_USERS+214,Q           cn=2,n=2

      314    13427    8                        AS_USERS.RESL.BMAX(J) = AS_USERS.RESL.BMAX(K);

  13427  3 000731   200007 236100                    LDQ     K,,AUTO
         3 000732   000012 402007                    MPY     10,DL
         3 000733   200032 756100                    STQ     RES_STRC+3,,AUTO
         3 000734   200006 236100                    LDQ     J,,AUTO
         3 000735   000012 402007                    MPY     10,DL
         3 000736   200032 235100                    LDA     RES_STRC+3,,AUTO
         3 000737   000006 100405                    MLR     fill='000'O
         3 000740   000326 000002 xsym               ADSC9   AS_USERS+214,A           cn=0,n=2
         3 000741   000326 000002 xsym               ADSC9   AS_USERS+214,Q           cn=0,n=2

      315    13428    8                        AS_USERS.RESL.OMAX(J) = AS_USERS.RESL.OMAX(K);

  13428  3 000742   200007 236100                    LDQ     K,,AUTO
         3 000743   000012 402007                    MPY     10,DL
         3 000744   200032 756100                    STQ     RES_STRC+3,,AUTO
         3 000745   200006 236100                    LDQ     J,,AUTO
         3 000746   000012 402007                    MPY     10,DL
         3 000747   200032 235100                    LDA     RES_STRC+3,,AUTO
         3 000750   000006 100405                    MLR     fill='000'O
         3 000751   000327 000002 xsym               ADSC9   AS_USERS+215,A           cn=0,n=2
PL6.E3A0      #001=ASC$RESOURCE File=ASC$RESOURCE.:E05TSI                        TUE 07/29/97 09:43 Page:47   
         3 000752   000327 000002 xsym               ADSC9   AS_USERS+215,Q           cn=0,n=2

      316    13429    8                        EXIT SWAPONE;

  13429  3 000753   000762 710000 3                  TRA     s:13433

      317    13430    8                        END;
      318    13431    7                     END;

  13431  3 000754   200007 235100                    LDA     K,,AUTO
         3 000755   000001 135007                    SBLA    1,DL
         3 000756   200007 755100                    STA     K,,AUTO
         3 000757   200006 236100                    LDQ     J,,AUTO
         3 000760   200007 116100                    CMPQ    K,,AUTO
         3 000761   000625 602000 3                  TNC     s:13417

      319    13432    6                  END;

      320    13433    5               END;

  13433  3 000762   200006 235100                    LDA     J,,AUTO
         3 000763   000001 035007                    ADLA    1,DL
         3 000764   200006 755100                    STA     J,,AUTO
         3 000765   000010 115007                    CMPA    8,DL
         3 000766   000546 602000 3                  TNC     s:13408

  13427  3 000767                       SKIP_IT      null
      321    13434    4   SKIP_IT: ;
      322    13435    4            END ; /* Do case */

      323    13436    3         END ; /* Do i */

  13436  3 000767   200005 235100                    LDA     I,,AUTO
         3 000770   000001 035007                    ADLA    1,DL
         3 000771   200005 755100                    STA     I,,AUTO
         3 000772   200005 236100                    LDQ     I,,AUTO
         3 000773   200011 116100                    CMPQ    SUBS,,AUTO
PL6.E3A0      #001=ASC$RESOURCE File=ASC$RESOURCE.:E05TSI                        TUE 07/29/97 09:43 Page:48   
         3 000774   000123 602000 3                  TNC     s:13211

      324    13437    2      END ; /* Do while( more ) */

  13437  3 000775   200015 234100                    SZN     MORE,,AUTO
         3 000776   000061 604000 3                  TMI     RES_LOOP

      325    13438                                                              /**/
      326    13439    1   RETURN ;

  13439  3 000777   000000 702200 xent               TSX2  ! X66_ARET

  13436  3 001000                       RES_ERR      null
      327    13440                                                              /**/
      328    13441    1   RES_ERR: ;
      329    13442    1   ERR_CODE = P_PCB.ERROR ;

  13442  3 001000   000006 236000 xsym               LDQ     P_PCB+6
         3 001001   000000 756000 xsym               STQ     ERR_CODE

      330    13443    1   CALL ASH$ERROR( ERR_CODE ) ;

  13443  3 001002   000014 630400 4                  EPPR0   12
         3 001003   000017 631400 xsym               EPPR1   B_VECTNIL+15
         3 001004   000000 701000 xent               TSX1    ASH$ERROR
         3 001005   000000 011000                    NOP     0

      331    13444    1   GOTO RES_LOOP ;

  13444  3 001006   000061 710000 3                  TRA     RES_LOOP
      332    13445                                                              /**/
      333    13446    1   END   ASC$RESOURCE ;
      334    13447        %EOD ;

PL6.E3A0      #001=ASC$RESOURCE File=ASC$RESOURCE.:E05TSI                        TUE 07/29/97 09:43 Page:49   
--  Include file information  --

   AS_SUPER_R.:E05TOU  cannot be made into a system file and is referenced.
   AS_PERR_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   XU_FORMAT_C.:E05TOU  is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
   KL_SUPER_C.:E05TOU  is referenced.
   B_MACROS_C.:E05TOU  is referenced.
   AS_MAC_C.:E05TOU  cannot be made into a system file and is referenced.
   AS_SUBS_C.:E05TOU  is referenced.
   AS_SUPER_C.:E05TOU  is referenced.
   AS_ENTRIES_M.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure ASC$RESOURCE.
PL6.E3A0      #001=ASC$RESOURCE File=ASC$RESOURCE.:E05TSI                        TUE 07/29/97 09:43 Page:50   

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @MOD_FLG                   4-0-0/w UBIN        r     1 ARS
    16-0-0/w PTR         r     1 BLK$                      21-0-0/w PTR         r     1 DFLT$
     5-0-0/w UBIN        r     1 I                          6-0-0/w UBIN        r     1 J
     7-0-0/w UBIN        r     1 K                         10-0-0/w UBIN        r     1 MODE
    *0-0-0/w BIT         r     1 MOD_FLG                   15-0-0/b BIT         r     1 MORE
    17-0-0/w PTR         r     1 PTR$                      14-0-0/w UBIN        r     1 RES#
    20-0-0/w PTR         r     1 RES$                      27-0-0/c STRC(90)    r     1 RES_STRC
    23-0-0/w PTR         r     1 ROOT$                     12-0-0/w UBIN        r     1 SUBNDS
    11-0-0/w UBIN        r     1 SUBS                      26-0-0/w PTR         r     1 T_NODE$
    13-0-0/w UBIN        r     1 VAL                       24-0-0/w UBIN        r     1 WKSZ
    25-0-0/w UBIN        r     1 WK_USED                   22-0-0/w PTR         r     1 WORK$

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN        r     1 AS_CR_MOD_PROJ             0-0-0/w STRC(18576) r     1 AS_DFLT
     0-0-0/b BIT         r     1 AS_FALSE                   0-0-0/w STRC(1483)  r     1 AS_MOD_USER
     0-0-0/w PTR         r     1 AS_RESOURCE_LIST$          0-0-0/b BIT         r     1 AS_TRUE
     0-0-0/w STRC(18576) r     1 AS_USERS                   0-0-0/b BIT         r     1 AS_WILD_USER
     0-0-0/w UBIN        r     1 CODE                       0-0-0/b STRC        r     1 ERR_CODE
     0-0-0/c CHAR(255)   r     1 IN_BUF                     0-0-0/w PTR         r     1 NODE$
     0-0-0/w STRC(504)   r     1 P_PCB                      0-0-0/d REMB        r     1 REMEM_VAR
     0-0-0/w UBIN        r     1 RES_OPTS

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name
PL6.E3A0      #001=ASC$RESOURCE File=ASC$RESOURCE.:E05TSI                        TUE 07/29/97 09:43 Page:51   

     0-0-0/c STRC(90)    r     1 DFLT$STRC                  0-0-0/w ASTR(153)   r     1 OUT$SYM
     0-0-0/w STRC(144)   r     1 P$NODE                     0-0-0/w STRC(126)   r     1 RES$LIST
     0-0-0/c STRC(90)    r     1 RES$STRC


   Procedure ASC$RESOURCE requires 519 words for executable code.
   Procedure ASC$RESOURCE requires 30 words of local(AUTO) storage.
PL6.E3A0      #001=ASC$RESOURCE File=ASC$RESOURCE.:E05TSI                        TUE 07/29/97 09:43 Page:52   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=ASC$RESOURCE File=ASC$RESOURCE.:E05TSI                        TUE 07/29/97 09:43 Page:53   
          MINI XREF LISTING

ARS
     12994**DCL     13204<>CALL    13205>>ASSIGN
ASA_BRKS_LOC
     10136**DCL     10136--REDEF
ASB$FLUSH_ERR
     13045**DCL-ENT 13324--CALL
ASB$READ_SI
     13036**DCL-ENT 13204--CALL
ASB$SET_PROMPT
     13039**DCL-ENT 13189--CALL
ASH$DQUEST
     13054**DCL-ENT 13237--CALL
ASH$ERROR
     13042**DCL-ENT 13263--CALL    13298--CALL    13337--CALL    13360--CALL    13394--CALL    13443--CALL
ASH$HELP
     13048**DCL-ENT 13231--CALL
ASH$QUEST
     13051**DCL-ENT 13234--CALL
AS_CR_MOD_PROJ
     10144**DCL     13343>>IF      13376>>IF
AS_DEFAULT.BANNER_PERM
     10829**DCL     10830--REDEF
AS_DEFAULT.BUDGET.MACCT
     10734**DCL     10738--REDEF
AS_DEFAULT.BUDGET.MAX_PROJECTS
     10747**DCL     10750--REDEF
AS_DEFAULT.BUDGET.PACCUM
     10730**DCL     10732--REDEF
AS_DEFAULT.BUDGET.PMAXC
     10725**DCL     10727--REDEF
AS_DEFAULT.SETUP_CHRA.TXT
     10845**DCL     10846--REDEF   10847--REDEF
PL6.E3A0      #001=ASC$RESOURCE File=ASC$RESOURCE.:E05TSI                        TUE 07/29/97 09:43 Page:54   
AS_DEFAULT_DREC.PASSWORD
     12099**DCL     12103--REDEF
AS_DEFAULT_DREC.RENAME
     12122**DCL     12123--REDEF
AS_DFLT.BANNER_PERM
     10651**DCL     10652--REDEF
AS_DFLT.BUDGET.MACCT
     10556**DCL     10560--REDEF
AS_DFLT.BUDGET.MAX_PROJECTS
     10569**DCL     10572--REDEF
AS_DFLT.BUDGET.PACCUM
     10552**DCL     10554--REDEF
AS_DFLT.BUDGET.PMAXC
     10547**DCL     10549--REDEF
AS_DFLT.RESL.RNAME
     10645**DCL     13373--ASSIGN
AS_DFLT.SETUP_CHRA.TXT
     10667**DCL     10668--REDEF   10669--REDEF
AS_FALSE
      9996**DCL     13199>>ASSIGN  13220>>ASSIGN
AS_FE_MODE
     10002**DCL     10003--REDEF
AS_MODE
      9999**DCL     10001--REDEF
AS_MOD_USER.ACCESS
     12864**DCL     12865--REDEF
AS_MOD_USER.BANNER
     12851**DCL     12852--REDEF
AS_MOD_USER.BANNER_PERM
     12853**DCL     12854--REDEF
AS_MOD_USER.BILL
     12859**DCL     12860--REDEF
AS_MOD_USER.CPROC
     12855**DCL     12856--REDEF
AS_MOD_USER.FEBILL
     12935**DCL     12936--REDEF
PL6.E3A0      #001=ASC$RESOURCE File=ASC$RESOURCE.:E05TSI                        TUE 07/29/97 09:43 Page:55   
AS_MOD_USER.FECXTMEM
     12952**DCL     12953--REDEF
AS_MOD_USER.FEMINTS
     12937**DCL     12938--REDEF
AS_MOD_USER.FEMMEM
     12948**DCL     12949--REDEF
AS_MOD_USER.FEMTIME
     12946**DCL     12947--REDEF
AS_MOD_USER.FEPPRIV
     12943**DCL     12945--REDEF
AS_MOD_USER.FEPRIV
     12940**DCL     12942--REDEF
AS_MOD_USER.FORCE_BIT
     12849**DCL     12850--REDEF
AS_MOD_USER.KEY
     12931**DCL     12933--REDEF
AS_MOD_USER.LASTCPROC
     12857**DCL     12858--REDEF
AS_MOD_USER.LIMITS.DO_
     12905**DCL     12906--REDEF
AS_MOD_USER.LIMITS.FPOOLS
     12921**DCL     12922--REDEF
AS_MOD_USER.LIMITS.LO
     12901**DCL     12902--REDEF
AS_MOD_USER.LIMITS.MEM
     12897**DCL     12898--REDEF
AS_MOD_USER.LIMITS.MPRIO
     12925**DCL     12926--REDEF
AS_MOD_USER.LIMITS.PDIS
     12913**DCL     12914--REDEF
AS_MOD_USER.LIMITS.PO
     12909**DCL     12910--REDEF
AS_MOD_USER.LIMITS.TDIS
     12917**DCL     12918--REDEF
AS_MOD_USER.LIMITS.TIME
     12893**DCL     12894--REDEF
PL6.E3A0      #001=ASC$RESOURCE File=ASC$RESOURCE.:E05TSI                        TUE 07/29/97 09:43 Page:56   
AS_MOD_USER.MAXENQ
     12874**DCL     12875--REDEF
AS_MOD_USER.PERM_BIT
     12847**DCL     12848--REDEF
AS_MOD_USER.PPRIV
     12869**DCL     12871--REDEF
AS_MOD_USER.PRIOB
     12876**DCL     12877--REDEF
AS_MOD_USER.PRIV
     12866**DCL     12868--REDEF
AS_MOD_USER.QUAN
     12872**DCL     12873--REDEF
AS_MOD_USER.RESOURCE
     12930**DCL     13190<<ASSIGN
AS_MOD_USER.SETUP
     12845**DCL     12846--REDEF
AS_PROJECT.BANNER_PERM
     11185**DCL     11186--REDEF
AS_PROJECT.BUDGET.MACCT
     11090**DCL     11094--REDEF
AS_PROJECT.BUDGET.MAX_PROJECTS
     11103**DCL     11106--REDEF
AS_PROJECT.BUDGET.PACCUM
     11086**DCL     11088--REDEF
AS_PROJECT.BUDGET.PMAXC
     11081**DCL     11083--REDEF
AS_PROJECT.SETUP_CHRA.TXT
     11201**DCL     11202--REDEF   11203--REDEF
AS_PROJECT_DFLT.BANNER_PERM
     11363**DCL     11364--REDEF
AS_PROJECT_DFLT.BUDGET.MACCT
     11268**DCL     11272--REDEF
AS_PROJECT_DFLT.BUDGET.MAX_PROJECTS
     11281**DCL     11284--REDEF
AS_PROJECT_DFLT.BUDGET.PACCUM
     11264**DCL     11266--REDEF
PL6.E3A0      #001=ASC$RESOURCE File=ASC$RESOURCE.:E05TSI                        TUE 07/29/97 09:43 Page:57   
AS_PROJECT_DFLT.BUDGET.PMAXC
     11259**DCL     11261--REDEF
AS_PROJECT_DFLT.SETUP_CHRA.TXT
     11379**DCL     11380--REDEF   11381--REDEF
AS_PROJECT_DFLT_DREC.PASSWORD
     12585**DCL     12589--REDEF
AS_PROJECT_DFLT_DREC.RENAME
     12608**DCL     12609--REDEF
AS_PROJECT_DREC.PASSWORD
     12423**DCL     12427--REDEF
AS_PROJECT_DREC.RENAME
     12446**DCL     12447--REDEF
AS_PROJ_ADMIN.BANNER_PERM
     11007**DCL     11008--REDEF
AS_PROJ_ADMIN.BUDGET.MACCT
     10912**DCL     10916--REDEF
AS_PROJ_ADMIN.BUDGET.MAX_PROJECTS
     10925**DCL     10928--REDEF
AS_PROJ_ADMIN.BUDGET.PACCUM
     10908**DCL     10910--REDEF
AS_PROJ_ADMIN.BUDGET.PMAXC
     10903**DCL     10905--REDEF
AS_PROJ_ADMIN.SETUP_CHRA.TXT
     11023**DCL     11024--REDEF   11025--REDEF
AS_PROJ_ADMIN_DREC.PASSWORD
     12261**DCL     12265--REDEF
AS_PROJ_ADMIN_DREC.RENAME
     12284**DCL     12285--REDEF
AS_RESOURCE_LIST$
     10141**DCL     13147--IMP-PTR 13172>>IF      13201>>ASSIGN  13212>>ASSIGN  13404>>ASSIGN  13404>>ASSIGN
     13405>>ASSIGN  13405>>ASSIGN
AS_TRUE
      9996**DCL     13190>>ASSIGN  13193>>ASSIGN
AS_USERS.BANNER_PERM
     10473**DCL     10474--REDEF
AS_USERS.BUDGET.MACCT
PL6.E3A0      #001=ASC$RESOURCE File=ASC$RESOURCE.:E05TSI                        TUE 07/29/97 09:43 Page:58   
     10378**DCL     10382--REDEF
AS_USERS.BUDGET.MAX_PROJECTS
     10391**DCL     10394--REDEF
AS_USERS.BUDGET.PACCUM
     10374**DCL     10376--REDEF
AS_USERS.BUDGET.PMAXC
     10369**DCL     10371--REDEF
AS_USERS.RESL.BMAX
     10468**DCL     13367<<ASSIGN  13408>>IF      13417>>IF      13427<<ASSIGN  13427>>ASSIGN
AS_USERS.RESL.GMAX
     10469**DCL     13368<<ASSIGN  13408>>IF      13417>>IF      13426<<ASSIGN  13426>>ASSIGN
AS_USERS.RESL.OMAX
     10470**DCL     13369<<ASSIGN  13408>>IF      13417>>IF      13428<<ASSIGN  13428>>ASSIGN
AS_USERS.RESL.RNAME
     10467**DCL     13311>>IF      13366<<ASSIGN  13372--ASSIGN  13408>>IF      13414<<ASSIGN  13417>>IF
     13423<<ASSIGN  13423>>ASSIGN  13424<<ASSIGN
AS_USERS.RESL.TMAX
     10471**DCL     13370<<ASSIGN  13408>>IF      13417>>IF      13425<<ASSIGN  13425>>ASSIGN
AS_USERS.SETUP_CHRA.TXT
     10489**DCL     10490--REDEF   10491--REDEF
AS_USERS.TOT_TYPES
     10465**DCL     13307>>ASSIGN  13365<<ASSIGN  13415<<ASSIGN  13415>>ASSIGN
AS_USERS_CONSTANT.BANNER_PERM
     11541**DCL     11542--REDEF
AS_USERS_CONSTANT.BUDGET.MACCT
     11446**DCL     11450--REDEF
AS_USERS_CONSTANT.BUDGET.MAX_PROJECTS
     11459**DCL     11462--REDEF
AS_USERS_CONSTANT.BUDGET.PACCUM
     11442**DCL     11444--REDEF
AS_USERS_CONSTANT.BUDGET.PMAXC
     11437**DCL     11439--REDEF
AS_USERS_CONSTANT.SETUP_CHRA.TXT
     11557**DCL     11558--REDEF   11559--REDEF
AS_WILD_USER
     10141**DCL     13402>>IF
PL6.E3A0      #001=ASC$RESOURCE File=ASC$RESOURCE.:E05TSI                        TUE 07/29/97 09:43 Page:59   
BLK$
     13004**DCL     13116--IMP-PTR 13243<<ASSIGN  13245>>IF      13268>>ASSIGN  13268>>ASSIGN  13277<<ASSIGN
     13279>>CALLBLT 13279>>CALLBLT
CODE
     10129**DCL     13200<<ASSIGN  13214<<ASSIGN  13216>>DOSELCT
DFLT$
     13007**DCL     13158--IMP-PTR 13373<<ASSIGN  13376>>IF
DFLT$STRC.VAL
     13160**DCL     13376>>IF
ERR_CODE
     10131**DCL     10132--REDEF   13442<<ASSIGN  13443<>CALL
FOUND_RES
     13370**LABEL   13311--GOTO
I
     12995**DCL     13210<<DOINDEX 13212>>ASSIGN  13214>>ASSIGN  13221<<ASSIGN  13243>>ASSIGN  13272>>ASSIGN
IN_BUF
     10127**DCL     13204<>CALL
J
     12996**DCL     13269<<DOINDEX 13270>>ASSIGN  13274<<DOINDEX 13275>>ASSIGN  13277>>ASSIGN  13310<<DOINDEX
     13311>>IF      13315<<ASSIGN  13318>>IF      13365>>ASSIGN  13366>>ASSIGN  13367>>ASSIGN  13368>>ASSIGN
     13369>>ASSIGN  13370>>ASSIGN  13372>>ASSIGN  13373>>ASSIGN  13374<<DOINDEX 13375>>IF      13376>>IF
     13376>>IF      13399>>ASSIGN  13399>>ASSIGN  13407<<DOINDEX 13408>>IF      13408>>IF      13408>>IF
     13408>>IF      13408>>IF      13414>>ASSIGN  13416>>DOINDEX 13417>>IF      13417>>IF      13417>>IF
     13417>>IF      13423>>ASSIGN  13425>>ASSIGN  13426>>ASSIGN  13427>>ASSIGN  13428>>ASSIGN
K
     12997**DCL     13416<<DOINDEX 13417>>IF      13423>>ASSIGN  13424>>ASSIGN  13425>>ASSIGN  13426>>ASSIGN
     13427>>ASSIGN  13428>>ASSIGN
KL_DEFAULT.PASSWORD
     12747**DCL     12751--REDEF
KL_DEFAULT.RENAME
     12770**DCL     12771--REDEF
KL_DFLT.PASSWORD
     11937**DCL     11941--REDEF
KL_DFLT.RENAME
     11960**DCL     11961--REDEF
KL_DREC.PASSWORD
PL6.E3A0      #001=ASC$RESOURCE File=ASC$RESOURCE.:E05TSI                        TUE 07/29/97 09:43 Page:60   
     11775**DCL     11779--REDEF
KL_DREC.RENAME
     11798**DCL     11799--REDEF
KL_DREC_CNT.PASSWORD
     11662**DCL     11666--REDEF
KL_DREC_CNT.RENAME
     11685**DCL     11686--REDEF
MODE
     12998**DCL     13275<<ASSIGN  13303>>ASSIGN
MOD_FLG
        23**DCL        14--PROC    13171>>IF      13198>>IF      13211>>IF      13242>>IF      13324>>IF
     13402>>IF
MORE
     13003**DCL     13193<<ASSIGN  13195>>DOWHILE 13199<<ASSIGN  13220<<ASSIGN
NODE$
     10129**DCL     13069--IMP-PTR 13184>>ASSIGN  13207<<ASSIGN  13208>>ASSIGN  13214>>ASSIGN  13228<<ASSIGN
     13243>>ASSIGN  13272>>ASSIGN
OUT$SYM.COUNT
     13139**DCL     13142--IMP-SIZ 13245>>IF      13268>>ASSIGN  13279>>CALLBLT
OUT$SYM.TEXT
     13142**DCL     13268>>ASSIGN  13279>>CALLBLT
P$NODE.CODE
     13077**DCL     13214>>ASSIGN  13275>>ASSIGN
P$NODE.SUBLK$
     13102**DCL     13214>>ASSIGN  13243>>ASSIGN  13243>>ASSIGN  13243>>ASSIGN  13272>>ASSIGN  13272>>ASSIGN
     13275>>ASSIGN  13275>>ASSIGN  13277>>ASSIGN  13277>>ASSIGN  13277>>ASSIGN
P$NODE.SUBNODES
     13081**DCL     13208>>ASSIGN  13273>>ASSIGN
PROJ_KEY.TEXT
     10009**DCL     10009--REDEF
PROJ_KEY.TXT.PROJECT
     10009**DCL     10009--REDEF
PTR$
     13005**DCL     13272<<ASSIGN  13273>>ASSIGN  13275>>ASSIGN  13277>>ASSIGN
P_PCB
     10164**DCL     13206<>CALL
PL6.E3A0      #001=ASC$RESOURCE File=ASC$RESOURCE.:E05TSI                        TUE 07/29/97 09:43 Page:61   
P_PCB.ERROR
     10268**DCL     13442>>ASSIGN
P_PCB.NCHARS
     10311**DCL     13205<<ASSIGN
P_PCB.OUT$
     10177**DCL     13207>>ASSIGN
P_PCB.ROOT$
     10169**DCL     13179>>ASSIGN  13186<<ASSIGN  13226<<ASSIGN
P_PCB.WKSZ
     10194**DCL     13177>>ASSIGN  13182<<ASSIGN  13224<<ASSIGN
P_PCB.WK_USED
     10297**DCL     13178>>ASSIGN  13181>>ASSIGN  13182>>ASSIGN  13225<<ASSIGN  13225>>ASSIGN
P_PCB.WORK$
     10173**DCL     13176>>ASSIGN  13181<<ASSIGN  13223<<ASSIGN
REMEM_VAR
     10135**DCL     10135--REDEF   13187<<REMEMBR
REM_FCMD
     10135**DCL     10136--REDEF
RES#
     13002**DCL     13307<<ASSIGN  13308>>IF      13310>>DOINDEX
RES$
     13006**DCL     13155--IMP-PTR 13372<<ASSIGN  13399>>ASSIGN
RES$LIST.COUNT
     13148**DCL     13172>>IF      13201>>ASSIGN  13404>>ASSIGN  13405<<ASSIGN  13405>>ASSIGN
RES$LIST.RES
     13149**DCL     13212>>ASSIGN  13404<<ASSIGN
RES$STRC.VAL
     13157**DCL     13399<<ASSIGN
RES_ERR
     13436**LABEL   13206--CALLALT
RES_LOOP
     13184**LABEL   13187--REMEMBR 13444--GOTO
RES_OPTS
     13023**DCL     13186--ASSIGN
RES_STRC
     13015**DCL     13212<<ASSIGN  13404>>ASSIGN
PL6.E3A0      #001=ASC$RESOURCE File=ASC$RESOURCE.:E05TSI                        TUE 07/29/97 09:43 Page:62   
RES_STRC.MODE
     13017**DCL     13270<<ASSIGN  13303<<ASSIGN  13375>>IF      13376>>IF      13399>>ASSIGN
RES_STRC.NAME
     13016**DCL     13268<<ASSIGN  13311>>IF      13366>>ASSIGN
ROOT$
     13011**DCL     13179<<ASSIGN  13226>>ASSIGN
SKIP_IT
     13427**LABEL   13266--GOTO    13340--GOTO    13363--GOTO    13397--GOTO
SUBNDS
     13000**DCL     13273<<ASSIGN  13274>>DOINDEX
SUBS
     12999**DCL     13201<<ASSIGN  13208<<ASSIGN  13210>>DOINDEX 13221>>ASSIGN
SWAPONE
     13416**LABEL   13429--EXIT
T_NODE$
     13014**DCL     13184<<ASSIGN  13228>>ASSIGN
USERS_KEY.TEXT
     10006**DCL     10007--REDEF   10007--REDEF   10007--REDEF   10008--REDEF
VAL
     13001**DCL     13279<<CALLBLT 13280>>IF      13303>>ASSIGN
WKSZ
     13012**DCL     13177<<ASSIGN  13182>>ASSIGN  13224>>ASSIGN
WK_USED
     13013**DCL     13178<<ASSIGN
WORK$
     13010**DCL     13176<<ASSIGN  13181>>ASSIGN  13223>>ASSIGN
X$PARSE
     13034**DCL-ENT 13206--CALL

PL6.E3A0      #002=ASC$FERESOURCE File=ASC$RESOURCE.:E05TSI                      TUE 07/29/97 09:45 Page:63   
      335        1        /*T***********************************************************/
      336        2        /*T*                                                         */
      337        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      338        4        /*T*                                                         */
      339        5        /*T***********************************************************/
      340        6        ASC$FERESOURCE: PROC ( MOD_FLG ) ;
      341        7
      342        8
      343        9        /********************************************************************/
      344       10        /*    Parameter   parameter   parameter   parameter   parameter     */
      345       11        /********************************************************************/
      346       12
      347       13    1   DCL MOD_FLG BIT(1) ALIGNED;
      348       14
      349       15        /*********************************************************************/
      350       16        /*   Include files   include files   include files   include files   */
      351       17        /*********************************************************************/
      352       18                                                              /**/
      353       19        %INCLUDE      AS_ENTRIES_M;
      354     1069        %INCLUDE      AS_SUPER_C ;
      355     1504        %INCLUDE      AS_SUBS_C ;
      356     2918        %INCLUDE      AS_MAC_C ;
      357     2998        %INCLUDE      B_MACROS_C ;
      358     3109        %INCLUDE      KL_SUPER_C ;
      359     6011        %INCLUDE      XU_MACRO_C ;
      360     9117        %INCLUDE      XU_FORMAT_C ;
      361     9279        %INCLUDE      CP_6 ;
      362     9360        %INCLUDE      AS_PERR_C;
      363     9962        %INCLUDE      AS_SUPER_R ;
      364    12978                                                              /**/
      365    12979
      366    12980        /*********************************************************************/
      367    12981        /*   Auto data       auto data       auto data       auto data       */
      368    12982        /*********************************************************************/
      369    12983                                                              /**/
      370    12984    1   DCL ARS UBIN WORD ;
      371    12985    1   DCL I UBIN WORD ;
PL6.E3A0      #002=ASC$FERESOURCE File=ASC$RESOURCE.:E05TSI                      TUE 07/29/97 09:45 Page:64   
      372    12986    1   DCL J UBIN WORD ;
      373    12987    1   DCL MODE UBIN WORD ;
      374    12988    1   DCL SUBS UBIN WORD ;
      375    12989    1   DCL SUBNDS UBIN WORD ;
      376    12990    1   DCL VAL UBIN WORD ;
      377    12991    1   DCL FERES# UBIN WORD ;
      378    12992    1   DCL MORE BIT(1) ;
      379    12993    1   DCL BLK$ PTR ;
      380    12994    1   DCL PTR$ PTR ;
      381    12995    1   DCL FERES$ PTR ;
      382    12996    1   DCL DFLT$ PTR ;
      383    12997                                                              /* Things for saving
      384    12998                                                                 P_PCB. */
      385    12999    1   DCL WORK$ PTR ;
      386    13000    1   DCL ROOT$ PTR ;
      387    13001    1   DCL WKSZ UBIN WORD ;
      388    13002    1   DCL WK_USED UBIN WORD ;
      389    13003    1   DCL T_NODE$ PTR ;
      390    13004    1   DCL 1 FERES_STRC,
      391    13005    1          2 NAME CHAR(2) UNAL,
      392    13006    1          2 MODE(0:3) SBIN HALF UNAL;
      393    13007
      394    13008        /*********************************************************************/
      395    13009        /*   Symrefs         symrefs         symrefs         symrefs         */
      396    13010        /*********************************************************************/
      397    13011                                                              /**/
      398    13012    1   DCL FERES_OPTS UBIN WORD SYMREF ;
      399    13013
      400    13014        /********************************************************************/
      401    13015        /*   Static data     static data     static data     static data     */
      402    13016        /*********************************************************************/
      403    13017                                                              /**/
      404    13018
      405    13019        /*********************************************************************/
      406    13020        /*   Entry dcls      entry dcls      entry dcls      entry dcls      */
      407    13021        /*********************************************************************/
      408    13022                                                              /**/
PL6.E3A0      #002=ASC$FERESOURCE File=ASC$RESOURCE.:E05TSI                      TUE 07/29/97 09:45 Page:65   
      409    13023    1   DCL X$PARSE ENTRY(1) ALTRET ;
      410    13024        %ASB$READ_SI ;
      411    13027        %ASB$SET_PROMPT ;
      412    13030        %ASH$ERROR ;
      413    13033        %ASB$FLUSH_ERR ;
      414    13036        %ASH$HELP ;
      415    13039        %ASH$QUEST ;
      416    13042        %ASH$DQUEST ;
      417    13045
      418    13046        /*********************************************************************/
      419    13047        /*   Local based     local based     local based     local based     */
      420    13048        /*********************************************************************/
      421    13049                                                              /**/
      422    13050        %LIST ;
      423    13051            %PARSE$OUT( NAME=P$NODE, STCLASS="BASED(NODE$)",
      424    13052                        NDTYPE=TYPE, NSUBLKS=SUBNODES) ;
             13053        /*F*  NAME:     PARSE$OUT
             13054              FUNCTION: a structure built by X$PARSE which corresponds to a "list",
             13055                  "alternative", "reducing alternative", or "koncat" node in
             13056                  the user's parse tree.
             13057        */
             13058    1   DCL 1 NAME STCLASS ALIGNED,
             13059    1         2 TEMP BIT(1) UNAL,
             13060    1         2 * BIT (11) UNAL,
             13061    1         2 NDTYPE UBIN (6) UNAL,
             13062        /*K* NDTYPE - specifies the type of parse node to which this PARSE$OUT
             13063                  block corresponds.  See the XU_SUBS_C file for the
             13064                  %EQU symbols whose values may appear in this field.
             13065        */
             13066    1         2 CODE UBIN HALF HALIGNED,
             13067        /*K* CODE - Contains the numeric "node code" specified by the user when
             13068                  the corresponding parse-node was defined.
             13069        */
             13070    1         2 NSUBLKS UBIN HALF HALIGNED,
             13071        /*K* NSUBLKS - "number of sub-blocks".  This field contains the count of
             13072                  pointers actually available in the PARSE$OUT.SUBLK$ array.
             13073        */
PL6.E3A0      #002=ASC$FERESOURCE File=ASC$RESOURCE.:E05TSI                      TUE 07/29/97 09:45 Page:66   
             13074    1         2 SCRITCH SCRMODE SCRALGN,
             13075        /*K* SCRITCH - an 18-bit scratch field reserved for the user.  X$PARSE
             13076                  initializes this field to zero when the PARSE$OUT structure
             13077                  is allocated, and never sets or examines it thereafter.
             13078                  The name of this field may be changed when the PARSE$OUT macro
             13079                  is invoked by the user (say "SCRITCH=yourname"), and its data
             13080                  type may also be changed (say "SCRMODE=pl6datatype" and
             13081                  "SCRALGN=alignment").  BEWARE: this field MUST be 18-bits long,
             13082                  and be UNALIGNED, CALIGNED, or HALIGNED.
             13083        */
             13084    1         2 CPOS UBIN WORD,
             13085        /*K* CPOS - "character position" of this block.  This field will contain
             13086                  a character index (starting at 0) into the original parse
             13087                  string;  the index identifies the first character of the
             13088                  string which was accepted by this node (or by any of its
             13089                  sub-nodes).
             13090        */
             13091    1         2 SUBLK$(0:0) PTR UNAL;
             13092        /*K* SUBLK$ - an array of PL-6 PTRs.  The number of elements in this array
             13093                  is found in OUT$BLK.NSUBLKS;  each PTR will point to another
             13094                  OUT$BLK structure, or to an OUT$SYM structure.
             13095        */
      425    13097              %PARSE$SYM( NAME = OUT$SYM ,
      426    13098                          STCLASS="BASED(BLK$)") ;
             13099        /*F*  NAME:     PARSE$SYM
             13100              FUNCTION: holds "parse symbols".  Structures of this form are created
             13101                  by X$PARSE to hold those portions of the string being parsed
             13102                  which must be returned to the user - quoted strings, decimal
             13103                  or octal numbers, PL-6 identifiers, etc.
             13104        */
             13105    1   DCL 1 NAME STCLASS ALIGNED,
             13106    1         2 TEMP BIT(1) UNAL,
             13107    1         2 * BIT (11) UNAL,
             13108    1         2 NDTYPE UBIN (6) UNAL,
             13109        /*K* NDTYPE - see OUT$BLK.NDTYPE for details.
             13110        */
             13111    1         2 CODE UBIN HALF HALIGNED,
PL6.E3A0      #002=ASC$FERESOURCE File=ASC$RESOURCE.:E05TSI                      TUE 07/29/97 09:45 Page:67   
             13112        /*K* CODE - see OUT$BLK.CODE for details.
             13113        */
             13114    1         2 NSUBLKS UBIN HALF HALIGNED,
             13115        /*K* NSUBLKS - always contains the value 1.
             13116        */
             13117    1         2 SCRITCH SCRMODE SCRALGN,
             13118        /*K* SCRITCH - see OUT$BLK.SCRITCH for details.
             13119        */
             13120    1         2 CPOS UBIN WORD,
             13121        /*K* CPOS - see OUT$BLK.CPOS for details.
             13122        */
             13123    1         2 TEXTC$ PTR,
             13124        /*K* TEXTC$ - a pointer to a TEXTC-type string (a 1-byte count field
             13125                  followed by a variable number of characters).  Always
             13126                  points to OUT$SYM.COUNT in the current OUT$SYM block.
             13127        */
             13128    1         2 COUNT UBIN BYTE CALIGNED,
             13129        /*K* COUNT - contains the number of characters in OUT$SYM.TEXT.
             13130        */
             13131    1         2 TEXT CHAR(NAME.COUNT) CALIGNED;
             13132        /*K* TEXT - contains the text of a string, decimal number, PL-6
             13133                  identifier, or some other parser "symbol".
             13134        */
      427    13136    1   DCL 1 FERES$LIST ALIGNED BASED(AS_FERESOURCE_LIST$),
      428    13137    1          2 COUNT UBIN,
      429    13138    1          2 FERES(0:0),
      430    13139    1             3 NAME CHAR(2) UNAL,
      431    13140    1             3 UMAX SBIN HALF UNAL,
      432    13141    1             3 CMAX SBIN HALF UNAL,
      433    13142    1             3 HMAX SBIN HALF UNAL,
      434    13143    1             3 GMAX SBIN HALF UNAL;
      435    13144    1   DCL 1 FERES$STRC BASED( FERES$ ) UNAL ,
      436    13145    1          2 NAME CHAR(2) UNAL ,
      437    13146    1          2 VAL(0:3) UBIN HALF UNAL ;
      438    13147    1   DCL 1 DFLT$STRC BASED( DFLT$ ) UNAL ,
      439    13148    1          2 NAME CHAR(2) UNAL ,
      440    13149    1          2 VAL(0:3) UBIN HALF UNAL ;
PL6.E3A0      #002=ASC$FERESOURCE File=ASC$RESOURCE.:E05TSI                      TUE 07/29/97 09:45 Page:68   
      441    13150        %PLIST ;
      442    13151
      443    13152        /*********************************************************************/
      444    13153        /*   Procedure       procedure       procedure       procedure       */
      445    13154        /*********************************************************************/
      446    13155                                                              /**/
      447    13156        /*
      448    13157            ***            Begin procedure                    ***
      449    13158        */
      450    13159    2   IF MOD_FLG THEN DO;
      451    13160    2      IF FERES$LIST.COUNT = 0 THEN RETURN;
      452    13161    2      END;
      453    13162    2   ELSE DO;
      454    13163                                                              /* Save some of P_PCB. */
      455    13164    2      WORK$ = P_PCB.WORK$ ;
      456    13165    2      WKSZ = P_PCB.WKSZ ;
      457    13166    2      WK_USED = P_PCB.WK_USED ;
      458    13167    2      ROOT$ = P_PCB.ROOT$ ;
      459    13168                                                              /* Bump past area used. */
      460    13169    2      P_PCB.WORK$ = PINCRW( WORK$, P_PCB.WK_USED ) ;
      461    13170    2      P_PCB.WKSZ = WKSZ - P_PCB.WK_USED ;
      462    13171                                                              /* Save NODE$ */
      463    13172    2      T_NODE$ = NODE$ ;
      464    13173                                                              /* Set ROOT$ */
      465    13174    2      P_PCB.ROOT$ = ADDR(FERES_OPTS) ;
      466    13175    2      REMEMBER FERES_LOOP IN REMEM_VAR ;
      467    13176                                                              /*  Set prompt  */
      468    13177    2      CALL ASB$SET_PROMPT ( %PROMPT_SUB ) ;
      469    13178    2      AS_MOD_USER.FERESOURCE = AS_TRUE;
      470    13179    2      END;
      471    13180
      472    13181    1   MORE = AS_TRUE;
      473    13182                                                              /**/
      474    13183    2   DO WHILE( MORE ) ;
      475    13184    2   FERES_LOOP: ;
      476    13185                                                              /**/
      477    13186    3      IF MOD_FLG THEN DO;
PL6.E3A0      #002=ASC$FERESOURCE File=ASC$RESOURCE.:E05TSI                      TUE 07/29/97 09:45 Page:69   
      478    13187    3         MORE = AS_FALSE;
      479    13188    3         CODE = FERES_OPT_VAL;
      480    13189    3         SUBS = FERES$LIST.COUNT;
      481    13190    3         END;
      482    13191    3      ELSE DO;
      483    13192    3         CALL ASB$READ_SI( IN_BUF, ARS ) ;
      484    13193    3         P_PCB.NCHARS = ARS ;
      485    13194    3         CALL X$PARSE( P_PCB ) ALTRET( FERES_ERR ) ;
      486    13195    3         NODE$ = P_PCB.OUT$ ;
      487    13196    3         SUBS = P$NODE.SUBNODES ;
      488    13197    3         END;
      489    13198    3      DO I = 0 TO SUBS-1 ;
      490    13199    3         IF MOD_FLG THEN
      491    13200    3            FERES_STRC = FERES$LIST.FERES(I) ;
      492    13201    3         ELSE
      493    13202    3            CODE = P$NODE.SUBLK$(I) -> P$NODE.CODE ;
      494    13203                                                              /**/
      495    13204    4         DO SELECT( CODE ) ;
      496    13205                                                              /**/
      497    13206    4            SELECT( END_VAL ,
      498    13207    4                 BLANK_LINE_VAL ) ;
      499    13208    4            MORE = AS_FALSE ;
      500    13209    4            I = SUBS ;
      501    13210                                                              /* Restore P_PCB. */
      502    13211    4            P_PCB.WORK$ = WORK$ ;
      503    13212    4            P_PCB.WKSZ = WKSZ ;
      504    13213    4            P_PCB.WK_USED = P_PCB.WK_USED ;
      505    13214    4            P_PCB.ROOT$ = ROOT$ ;
      506    13215                                                              /* Restore NODE$ */
      507    13216    4            NODE$ = T_NODE$ ;
      508    13217                                                              /**/
      509    13218    4            SELECT( HELP_VAL ) ;
      510    13219    4            CALL ASH$HELP ;
      511    13220                                                                  /**/
      512    13221    4            SELECT( QUESTION_VAL ) ;
      513    13222    4            CALL ASH$QUEST ;
      514    13223                                                                  /**/
PL6.E3A0      #002=ASC$FERESOURCE File=ASC$RESOURCE.:E05TSI                      TUE 07/29/97 09:45 Page:70   
      515    13224    4            SELECT( DQUESTION_VAL ) ;
      516    13225    4            CALL ASH$DQUEST ;
      517    13226                                                                  /**/
      518    13227    4            SELECT( EOL_VAL ) ;
      519    13228                                                              /**/
      520    13229    4            SELECT( FERES_OPT_VAL ) ;
      521    13230    5            IF NOT MOD_FLG THEN DO;
      522    13231    5               BLK$ = P$NODE.SUBLK$(I) -> P$NODE.SUBLK$(0)
      523    13232    5                    -> P$NODE.SUBLK$(0) ;
      524    13233    5               IF OUT$SYM.COUNT > 2
      525    13234    6               THEN DO;
      526    13235        /*E*  ERROR:    ASC-E$FERES_NAME_TOO_LONG-C
      527    13236              MESSAGE:  FERESOURCE name too long.
      528    13237              MESSAGE1: FERESOURCE name can be at most 2 characters long.
      529    13238        */
      530    13239                       %SCREAM( ERR#=E$FERES_NAME_TOO_LONG, LEVEL=ERROR, MID='C' );
      531    13254    6                  GOTO SKIP_IT;
      532    13255    6                  END ;    /* Then do */
      533    13256    5               FERES_STRC.NAME = OUT$SYM.TEXT ;
      534    13257    6               DO J = 0 TO 3;
      535    13258    6                  FERES_STRC.MODE(J) = -1;
      536    13259    6                  END;
      537    13260    5               PTR$ = P$NODE.SUBLK$(I) -> P$NODE.SUBLK$(1) ;
      538    13261    5               SUBNDS = PTR$ -> P$NODE.SUBNODES ;
      539    13262    6               DO J = 0 TO SUBNDS-1 ;
      540    13263    6                  MODE = PTR$ -> P$NODE.SUBLK$(J) -> P$NODE.SUBLK$(0)
      541    13264    6                       -> P$NODE.CODE ;
      542    13265    6                  BLK$ = PTR$ -> P$NODE.SUBLK$(J) -> P$NODE.SUBLK$(1)
      543    13266    6                       -> P$NODE.SUBLK$(0) ;
      544    13267    6                  CALL CHARBIN( VAL, OUT$SYM.TEXT ) ;
      545    13268    6                  IF VAL > 511
      546    13269    7                  THEN DO;
      547    13270        /*E*  ERROR:    ASC-E$FERES_VAL_TOO_BIG-C
      548    13271              MESSAGE:  FERESOURCE value too big.
      549    13272              MESSAGE1: FERESOURCE value can be at most 511.
      550    13273        */
      551    13274                          %SCREAM( ERR#=E$FERES_VAL_TOO_BIG, LEVEL=ERROR,MID='A');
PL6.E3A0      #002=ASC$FERESOURCE File=ASC$RESOURCE.:E05TSI                      TUE 07/29/97 09:45 Page:71   
      552    13289    7                     END;
      553    13290    6                  ELSE
      554    13291    6                     FERES_STRC.MODE(MODE) = VAL;
      555    13292    6                  END;    /* Do j = 0 to SUBNDS-1 */
      556    13293    5               END;   /* If not MOD_FLG then do */
      557    13294                                                           /* Find feres in users record. */
      558    13295    4            FERES# = KL_DREC.KL_DREC_FEBLK.RESL_CNT ;
      559    13296    5            DO J = 0 TO FERES#-1 ;
      560    13297    5               IF KL_DREC.KL_DREC_FEBLK.RESL.RNAME(J) = FERES_STRC.NAME THEN GOTO
             13297                        FOUND_FERES ;
      561    13298    5               END ; /* Do j */
      562    13299                                                              /* Didn't find it. */
      563    13300                                                              /* Set up next slot. */
      564    13301    5            IF AS_CR_MOD_PROJ > 0 THEN DO;
      565    13302        /*E* ERROR:  ASC-E$NO_MORE_FERES-C
      566    13303             MESSAGE:  You cannot define the feresource for this user.
      567    13304             MESSAGE1: You must have that feresource available to you.
      568    13305        */
      569    13306                    %SCREAM(ERR#=E$NO_MORE_FERES,LEVEL=ERROR,MID='C');
      570    13321    5               GOTO SKIP_IT ;
      571    13322    5               END;      /* Of then do     */
      572    13323    4            KL_DREC.KL_DREC_FEBLK.RESL_CNT = J + 1 ;
      573    13324    4            KL_DREC.KL_DREC_FEBLK.RESL.RNAME(J) = FERES_STRC.NAME ;
      574    13325    4            KL_DREC.KL_DREC_FEBLK.RESL.UMAX(J) = 0 ;
      575    13326    4            KL_DREC.KL_DREC_FEBLK.RESL.CMAX(J) = 0 ;
      576    13327    4            KL_DREC.KL_DREC_FEBLK.RESL.HMAX(J) = 0 ;
      577    13328    4            KL_DREC.KL_DREC_FEBLK.RESL.GMAX(J) = 0 ;
      578    13329    4   FOUND_FERES: ;
      579    13330    4            FERES$ = ADDR( KL_DREC.KL_DREC_FEBLK.RESL.RNAME(J)) ;
      580    13331    4            DFLT$ = ADDR( KL_DFLT.KL_DFLT_FEBLK.RESL.RNAME(J)) ;
      581    13332    5            DO J = 0 TO 3;
      582    13333    6               IF FERES_STRC.MODE(J) > -1 THEN DO ;
      583    13334    6                  IF  AS_CR_MOD_PROJ > 0  AND
      584    13335    6                       FERES_STRC.MODE(J) > DFLT$STRC.VAL(J) THEN
      585    13336    7                  DO ;
      586    13337        /*E* ERROR:      ASC-E$FERES_VAL_TOO_HIGH-C
      587    13338         MESSAGE:    This user cannot have more feresource value than your feresource value.
PL6.E3A0      #002=ASC$FERESOURCE File=ASC$RESOURCE.:E05TSI                      TUE 07/29/97 09:45 Page:72   
      588    13339        */
      589    13340                          %SCREAM (ERR#=E$FERES_VAL_TOO_HIGH,LEVEL=ERROR,MID='C');
      590    13355    7                     GOTO SKIP_IT ;
      591    13356    7                     END;        /* Of then do    */
      592    13357    6                  FERES$STRC.VAL( J ) = FERES_STRC.MODE( J ) ;
      593    13358    6                  END;   /* Do if FERES_STRC.MODE(J) > -1  */
      594    13359    5               END ; /* Do j */
      595    13360    4            IF NOT MOD_FLG  AND  AS_WILD_USER
      596    13361    5            THEN DO;
      597    13362    5               FERES$LIST.FERES( FERES$LIST.COUNT) = FERES_STRC;
      598    13363    5               FERES$LIST.COUNT = FERES$LIST.COUNT + 1;
      599    13364    5               END;
      600    13365    4   SKIP_IT: ;
      601    13366    4            END ; /* Do case */
      602    13367    3         END ; /* Do i */
      603    13368    2      END ; /* Do while( more ) */
      604    13369                                                              /**/
      605    13370    1   RETURN ;
      606    13371                                                              /**/
      607    13372    1   FERES_ERR: ;
      608    13373    1   ERR_CODE = P_PCB.ERROR ;
      609    13374    1   CALL ASH$ERROR( ERR_CODE ) ;
      610    13375    1   GOTO FERES_LOOP ;
      611    13376                                                              /**/
      612    13377    1   END   ASC$FERESOURCE ;

PL6.E3A0      #002=ASC$FERESOURCE File=ASC$RESOURCE.:E05TSI                      TUE 07/29/97 09:45 Page:73   
--  Include file information  --

   AS_SUPER_R.:E05TOU  cannot be made into a system file and is referenced.
   AS_PERR_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   XU_FORMAT_C.:E05TOU  is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
   KL_SUPER_C.:E05TOU  is referenced.
   B_MACROS_C.:E05TOU  is referenced.
   AS_MAC_C.:E05TOU  cannot be made into a system file and is referenced.
   AS_SUBS_C.:E05TOU  is referenced.
   AS_SUPER_C.:E05TOU  is referenced.
   AS_ENTRIES_M.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure ASC$FERESOURCE.

   Procedure ASC$FERESOURCE requires 355 words for executable code.
   Procedure ASC$FERESOURCE requires 30 words of local(AUTO) storage.

    No errors detected in file ASC$RESOURCE.:E05TSI    .

PL6.E3A0      #002=ASC$FERESOURCE File=ASC$RESOURCE.:E05TSI                      TUE 07/29/97 09:45 Page:74   

 Object Unit name= ASC$FERESOURCE                             File name= ASC$RESOURCE.:E05TOU
 UTS= JUL 29 '97 09:45:41.16 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1   DCB   even  none     0      0  M$LO
    2  RoData even  UTS      4      4  ASC$FERESOURCE
    3   Proc  even  none   355    543  ASC$FERESOURCE
    4  RoData even  none    12     14  ASC$FERESOURCE

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     3      0   yes            yes      Std        1  ASC$FERESOURCE

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes          ~proc      0 XU_OUTPUT_OPTIONS
         yes           Std       2 ASB$READ_SI
 yes     yes           Std       3 ASB$SET_PROMPT
         yes           Std       0 ASH$HELP
         yes           Std       0 ASH$QUEST
         yes           Std       2 ASH$ERROR
 yes     yes           Std       1 X$PARSE
         yes           Std       0 ASH$DQUEST
                       nStd      0 X66_AUTO_1
                       nStd      0 X66_ARET
                       Std       0 B_CONSPOOL_D
PL6.E3A0      #002=ASC$FERESOURCE File=ASC$RESOURCE.:E05TSI                      TUE 07/29/97 09:45 Page:75   

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                             r    AS_TRUE                          r    AS_FALSE
r    AS_MODE                          r    AS_FE_MODE                            M$LO
     IN_BUF                                NODE$                                 CODE
     ERR_CODE                              REMEM_VAR                             REM_FCMD
     ASA_BRKS_LOC                          AS_WILD_USER                          AS_FERESOURCE_LIST$
     AS_CR_MOD_PROJ                        P_PCB                                 KL_DREC
     KL_DFLT                               AS_MOD_USER                           FERES_OPTS
     B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
PL6.E3A0      #002=ASC$FERESOURCE File=ASC$RESOURCE.:E05TSI                      TUE 07/29/97 09:45 Page:76   


      335        1        /*T***********************************************************/
      336        2        /*T*                                                         */
      337        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      338        4        /*T*                                                         */
      339        5        /*T***********************************************************/
      340        6        ASC$FERESOURCE: PROC ( MOD_FLG ) ;

      6  3 000000   000000 700200 xent  ASC$FERESOU* TSX0  ! X66_AUTO_1
         3 000001   000036 000001                    ZERO    30,1

      341        7
      342        8
      343        9        /********************************************************************/
      344       10        /*    Parameter   parameter   parameter   parameter   parameter     */
      345       11        /********************************************************************/
      346       12
      347       13    1   DCL MOD_FLG BIT(1) ALIGNED;
      348       14
      349       15        /*********************************************************************/
      350       16        /*   Include files   include files   include files   include files   */
      351       17        /*********************************************************************/
      352       18                                                              /**/
      353       19        %INCLUDE      AS_ENTRIES_M;
      354     1069        %INCLUDE      AS_SUPER_C ;
      355     1504        %INCLUDE      AS_SUBS_C ;
      356     2918        %INCLUDE      AS_MAC_C ;
      357     2998        %INCLUDE      B_MACROS_C ;
      358     3109        %INCLUDE      KL_SUPER_C ;
      359     6011        %INCLUDE      XU_MACRO_C ;
      360     9117        %INCLUDE      XU_FORMAT_C ;
      361     9279        %INCLUDE      CP_6 ;
      362     9360        %INCLUDE      AS_PERR_C;
      363     9962        %INCLUDE      AS_SUPER_R ;
      364    12978                                                              /**/
      365    12979
      366    12980        /*********************************************************************/
PL6.E3A0      #002=ASC$FERESOURCE File=ASC$RESOURCE.:E05TSI                      TUE 07/29/97 09:45 Page:77   
      367    12981        /*   Auto data       auto data       auto data       auto data       */
      368    12982        /*********************************************************************/
      369    12983                                                              /**/
      370    12984    1   DCL ARS UBIN WORD ;
      371    12985    1   DCL I UBIN WORD ;
      372    12986    1   DCL J UBIN WORD ;
      373    12987    1   DCL MODE UBIN WORD ;
      374    12988    1   DCL SUBS UBIN WORD ;
      375    12989    1   DCL SUBNDS UBIN WORD ;
      376    12990    1   DCL VAL UBIN WORD ;
      377    12991    1   DCL FERES# UBIN WORD ;
      378    12992    1   DCL MORE BIT(1) ;
      379    12993    1   DCL BLK$ PTR ;
      380    12994    1   DCL PTR$ PTR ;
      381    12995    1   DCL FERES$ PTR ;
      382    12996    1   DCL DFLT$ PTR ;
      383    12997                                                              /* Things for saving
      384    12998                                                                 P_PCB. */
      385    12999    1   DCL WORK$ PTR ;
      386    13000    1   DCL ROOT$ PTR ;
      387    13001    1   DCL WKSZ UBIN WORD ;
      388    13002    1   DCL WK_USED UBIN WORD ;
      389    13003    1   DCL T_NODE$ PTR ;
      390    13004    1   DCL 1 FERES_STRC,
      391    13005    1          2 NAME CHAR(2) UNAL,
      392    13006    1          2 MODE(0:3) SBIN HALF UNAL;
      393    13007
      394    13008        /*********************************************************************/
      395    13009        /*   Symrefs         symrefs         symrefs         symrefs         */
      396    13010        /*********************************************************************/
      397    13011                                                              /**/
      398    13012    1   DCL FERES_OPTS UBIN WORD SYMREF ;
      399    13013
      400    13014        /********************************************************************/
      401    13015        /*   Static data     static data     static data     static data     */
      402    13016        /*********************************************************************/
      403    13017                                                              /**/
PL6.E3A0      #002=ASC$FERESOURCE File=ASC$RESOURCE.:E05TSI                      TUE 07/29/97 09:45 Page:78   
      404    13018
      405    13019        /*********************************************************************/
      406    13020        /*   Entry dcls      entry dcls      entry dcls      entry dcls      */
      407    13021        /*********************************************************************/
      408    13022                                                              /**/
      409    13023    1   DCL X$PARSE ENTRY(1) ALTRET ;
      410    13024        %ASB$READ_SI ;
      411    13027        %ASB$SET_PROMPT ;
      412    13030        %ASH$ERROR ;
      413    13033        %ASB$FLUSH_ERR ;
      414    13036        %ASH$HELP ;
      415    13039        %ASH$QUEST ;
      416    13042        %ASH$DQUEST ;
      417    13045
      418    13046        /*********************************************************************/
      419    13047        /*   Local based     local based     local based     local based     */
      420    13048        /*********************************************************************/
      421    13049                                                              /**/
      422    13050        %LIST ;
      423    13051            %PARSE$OUT( NAME=P$NODE, STCLASS="BASED(NODE$)",
      424    13052                        NDTYPE=TYPE, NSUBLKS=SUBNODES) ;
             13053        /*F*  NAME:     PARSE$OUT
             13054              FUNCTION: a structure built by X$PARSE which corresponds to a "list",
             13055                  "alternative", "reducing alternative", or "koncat" node in
             13056                  the user's parse tree.
             13057        */
             13058    1   DCL 1 NAME STCLASS ALIGNED,
             13059    1         2 TEMP BIT(1) UNAL,
             13060    1         2 * BIT (11) UNAL,
             13061    1         2 NDTYPE UBIN (6) UNAL,
             13062        /*K* NDTYPE - specifies the type of parse node to which this PARSE$OUT
             13063                  block corresponds.  See the XU_SUBS_C file for the
             13064                  %EQU symbols whose values may appear in this field.
             13065        */
             13066    1         2 CODE UBIN HALF HALIGNED,
             13067        /*K* CODE - Contains the numeric "node code" specified by the user when
             13068                  the corresponding parse-node was defined.
PL6.E3A0      #002=ASC$FERESOURCE File=ASC$RESOURCE.:E05TSI                      TUE 07/29/97 09:45 Page:79   
             13069        */
             13070    1         2 NSUBLKS UBIN HALF HALIGNED,
             13071        /*K* NSUBLKS - "number of sub-blocks".  This field contains the count of
             13072                  pointers actually available in the PARSE$OUT.SUBLK$ array.
             13073        */
             13074    1         2 SCRITCH SCRMODE SCRALGN,
             13075        /*K* SCRITCH - an 18-bit scratch field reserved for the user.  X$PARSE
             13076                  initializes this field to zero when the PARSE$OUT structure
             13077                  is allocated, and never sets or examines it thereafter.
             13078                  The name of this field may be changed when the PARSE$OUT macro
             13079                  is invoked by the user (say "SCRITCH=yourname"), and its data
             13080                  type may also be changed (say "SCRMODE=pl6datatype" and
             13081                  "SCRALGN=alignment").  BEWARE: this field MUST be 18-bits long,
             13082                  and be UNALIGNED, CALIGNED, or HALIGNED.
             13083        */
             13084    1         2 CPOS UBIN WORD,
             13085        /*K* CPOS - "character position" of this block.  This field will contain
             13086                  a character index (starting at 0) into the original parse
             13087                  string;  the index identifies the first character of the
             13088                  string which was accepted by this node (or by any of its
             13089                  sub-nodes).
             13090        */
             13091    1         2 SUBLK$(0:0) PTR UNAL;
             13092        /*K* SUBLK$ - an array of PL-6 PTRs.  The number of elements in this array
             13093                  is found in OUT$BLK.NSUBLKS;  each PTR will point to another
             13094                  OUT$BLK structure, or to an OUT$SYM structure.
             13095        */
      425    13097              %PARSE$SYM( NAME = OUT$SYM ,
      426    13098                          STCLASS="BASED(BLK$)") ;
             13099        /*F*  NAME:     PARSE$SYM
             13100              FUNCTION: holds "parse symbols".  Structures of this form are created
             13101                  by X$PARSE to hold those portions of the string being parsed
             13102                  which must be returned to the user - quoted strings, decimal
             13103                  or octal numbers, PL-6 identifiers, etc.
             13104        */
             13105    1   DCL 1 NAME STCLASS ALIGNED,
             13106    1         2 TEMP BIT(1) UNAL,
PL6.E3A0      #002=ASC$FERESOURCE File=ASC$RESOURCE.:E05TSI                      TUE 07/29/97 09:45 Page:80   
             13107    1         2 * BIT (11) UNAL,
             13108    1         2 NDTYPE UBIN (6) UNAL,
             13109        /*K* NDTYPE - see OUT$BLK.NDTYPE for details.
             13110        */
             13111    1         2 CODE UBIN HALF HALIGNED,
             13112        /*K* CODE - see OUT$BLK.CODE for details.
             13113        */
             13114    1         2 NSUBLKS UBIN HALF HALIGNED,
             13115        /*K* NSUBLKS - always contains the value 1.
             13116        */
             13117    1         2 SCRITCH SCRMODE SCRALGN,
             13118        /*K* SCRITCH - see OUT$BLK.SCRITCH for details.
             13119        */
             13120    1         2 CPOS UBIN WORD,
             13121        /*K* CPOS - see OUT$BLK.CPOS for details.
             13122        */
             13123    1         2 TEXTC$ PTR,
             13124        /*K* TEXTC$ - a pointer to a TEXTC-type string (a 1-byte count field
             13125                  followed by a variable number of characters).  Always
             13126                  points to OUT$SYM.COUNT in the current OUT$SYM block.
             13127        */
             13128    1         2 COUNT UBIN BYTE CALIGNED,
             13129        /*K* COUNT - contains the number of characters in OUT$SYM.TEXT.
             13130        */
             13131    1         2 TEXT CHAR(NAME.COUNT) CALIGNED;
             13132        /*K* TEXT - contains the text of a string, decimal number, PL-6
             13133                  identifier, or some other parser "symbol".
             13134        */
      427    13136    1   DCL 1 FERES$LIST ALIGNED BASED(AS_FERESOURCE_LIST$),
      428    13137    1          2 COUNT UBIN,
      429    13138    1          2 FERES(0:0),
      430    13139    1             3 NAME CHAR(2) UNAL,
      431    13140    1             3 UMAX SBIN HALF UNAL,
      432    13141    1             3 CMAX SBIN HALF UNAL,
      433    13142    1             3 HMAX SBIN HALF UNAL,
      434    13143    1             3 GMAX SBIN HALF UNAL;
      435    13144    1   DCL 1 FERES$STRC BASED( FERES$ ) UNAL ,
PL6.E3A0      #002=ASC$FERESOURCE File=ASC$RESOURCE.:E05TSI                      TUE 07/29/97 09:45 Page:81   
      436    13145    1          2 NAME CHAR(2) UNAL ,
      437    13146    1          2 VAL(0:3) UBIN HALF UNAL ;
      438    13147    1   DCL 1 DFLT$STRC BASED( DFLT$ ) UNAL ,
      439    13148    1          2 NAME CHAR(2) UNAL ,
      440    13149    1          2 VAL(0:3) UBIN HALF UNAL ;
      441    13150        %PLIST ;
      442    13151
      443    13152        /*********************************************************************/
      444    13153        /*   Procedure       procedure       procedure       procedure       */
      445    13154        /*********************************************************************/
      446    13155                                                              /**/
      447    13156        /*
      448    13157            ***            Begin procedure                    ***
      449    13158        */
      450    13159    2   IF MOD_FLG THEN DO;

  13159  3 000002   200003 470500                    LDP0    @MOD_FLG,,AUTO
         3 000003   000000 234100                    SZN     0,,PR0
         3 000004   000011 605000 3                  TPL     s:13164

      451    13160    2      IF FERES$LIST.COUNT = 0 THEN RETURN;

  13160  3 000005   000000 471400 xsym               LDP1    AS_FERESOURCE_LIST$
         3 000006   100000 235100                    LDA     0,,PR1
         3 000007   000054 601000 3                  TNZ     s:13181

  13160  3 000010   000000 702200 xent               TSX2  ! X66_ARET

      452    13161    2      END;
      453    13162    2   ELSE DO;

      454    13163                                                              /* Save some of P_PCB. */
      455    13164    2      WORK$ = P_PCB.WORK$ ;

  13164  3 000011   000002 236000 xsym               LDQ     P_PCB+2
         3 000012   200021 756100                    STQ     WORK$,,AUTO

PL6.E3A0      #002=ASC$FERESOURCE File=ASC$RESOURCE.:E05TSI                      TUE 07/29/97 09:45 Page:82   
      456    13165    2      WKSZ = P_PCB.WKSZ ;

  13165  3 000013   000005 235000 xsym               LDA     P_PCB+5
         3 000014   000022 771000                    ARL     18
         3 000015   200023 755100                    STA     WKSZ,,AUTO

      457    13166    2      WK_USED = P_PCB.WK_USED ;

  13166  3 000016   000010 235000 xsym               LDA     P_PCB+8
         3 000017   000022 771000                    ARL     18
         3 000020   200024 755100                    STA     WK_USED,,AUTO

      458    13167    2      ROOT$ = P_PCB.ROOT$ ;

  13167  3 000021   000001 236000 xsym               LDQ     P_PCB+1
         3 000022   200022 756100                    STQ     ROOT$,,AUTO

      459    13168                                                              /* Bump past area used. */
      460    13169    2      P_PCB.WORK$ = PINCRW( WORK$, P_PCB.WK_USED ) ;

  13169  3 000023   000010 236000 xsym               LDQ     P_PCB+8
         3 000024   777777 376003                    ANQ     -1,DU
         3 000025   200021 036100                    ADLQ    WORK$,,AUTO
         3 000026   000002 756000 xsym               STQ     P_PCB+2

      461    13170    2      P_PCB.WKSZ = WKSZ - P_PCB.WK_USED ;

  13170  3 000027   200032 755100                    STA     FERES_STRC+4,,AUTO
         3 000030   200023 236100                    LDQ     WKSZ,,AUTO
         3 000031   200032 136100                    SBLQ    FERES_STRC+4,,AUTO
         3 000032   000000 620006                    EAX0    0,QL
         3 000033   000005 740000 xsym               STX0    P_PCB+5

      462    13171                                                              /* Save NODE$ */
      463    13172    2      T_NODE$ = NODE$ ;

  13172  3 000034   000000 236000 xsym               LDQ     NODE$
PL6.E3A0      #002=ASC$FERESOURCE File=ASC$RESOURCE.:E05TSI                      TUE 07/29/97 09:45 Page:83   
         3 000035   200025 756100                    STQ     T_NODE$,,AUTO

      464    13173                                                              /* Set ROOT$ */
      465    13174    2      P_PCB.ROOT$ = ADDR(FERES_OPTS) ;

  13174  3 000036   000000 236000 4                  LDQ     0
         3 000037   000001 756000 xsym               STQ     P_PCB+1

      466    13175    2      REMEMBER FERES_LOOP IN REMEM_VAR ;

  13175  3 000040   000061 635000 3                  EAA     FERES_LOOP
         3 000041   000000 452400 xsym               STP2    REMEM_VAR
         3 000042   000001 755000 xsym               STA     REMEM_VAR+1

      467    13176                                                              /*  Set prompt  */
      468    13177    2      CALL ASB$SET_PROMPT ( %PROMPT_SUB ) ;

  13177  3 000043   000001 630400 4                  EPPR0   1
         3 000044   000017 631400 xsym               EPPR1   B_VECTNIL+15
         3 000045   000000 701000 xent               TSX1    ASB$SET_PROMPT
         3 000046   000000 011000                    NOP     0

      469    13178    2      AS_MOD_USER.FERESOURCE = AS_TRUE;

  13178  3 000047   000000 236000 xsym               LDQ     AS_TRUE
         3 000050   000004 772000                    QRL     4
         3 000051   000051 676000 xsym               ERQ     AS_MOD_USER+41
         3 000052   020000 376003                    ANQ     8192,DU
         3 000053   000051 656000 xsym               ERSQ    AS_MOD_USER+41

      470    13179    2      END;

      471    13180
      472    13181    1   MORE = AS_TRUE;

  13181  3 000054   000000 236000 xsym               LDQ     AS_TRUE
         3 000055   400000 376003                    ANQ     -131072,DU
PL6.E3A0      #002=ASC$FERESOURCE File=ASC$RESOURCE.:E05TSI                      TUE 07/29/97 09:45 Page:84   
         3 000056   200014 756100                    STQ     MORE,,AUTO

      473    13182                                                              /**/
      474    13183    2   DO WHILE( MORE ) ;

  13183  3 000057   200014 234100                    SZN     MORE,,AUTO
         3 000060   000533 605000 3                  TPL     s:13370

  13172  3 000061                       FERES_LOOP   null
      475    13184    2   FERES_LOOP: ;
      476    13185                                                              /**/
      477    13186    3      IF MOD_FLG THEN DO;

  13186  3 000061   200003 470500                    LDP0    @MOD_FLG,,AUTO
         3 000062   000000 234100                    SZN     0,,PR0
         3 000063   000075 605000 3                  TPL     s:13192

      478    13187    3         MORE = AS_FALSE;

  13187  3 000064   000000 236000 xsym               LDQ     AS_FALSE
         3 000065   400000 376003                    ANQ     -131072,DU
         3 000066   200014 756100                    STQ     MORE,,AUTO

      479    13188    3         CODE = FERES_OPT_VAL;

  13188  3 000067   000037 235007                    LDA     31,DL
         3 000070   000000 755000 xsym               STA     CODE

      480    13189    3         SUBS = FERES$LIST.COUNT;

  13189  3 000071   000000 471400 xsym               LDP1    AS_FERESOURCE_LIST$
         3 000072   100000 235100                    LDA     0,,PR1
         3 000073   200010 755100                    STA     SUBS,,AUTO

      481    13190    3         END;

  13190  3 000074   000121 710000 3                  TRA     s:13198
PL6.E3A0      #002=ASC$FERESOURCE File=ASC$RESOURCE.:E05TSI                      TUE 07/29/97 09:45 Page:85   

      482    13191    3      ELSE DO;

      483    13192    3         CALL ASB$READ_SI( IN_BUF, ARS ) ;

  13192  3 000075   200004 631500                    EPPR1   ARS,,AUTO
         3 000076   200033 451500                    STP1    FERES_STRC+5,,AUTO
         3 000077   000002 236000 4                  LDQ     2
         3 000100   200032 756100                    STQ     FERES_STRC+4,,AUTO
         3 000101   200032 630500                    EPPR0   FERES_STRC+4,,AUTO
         3 000102   000020 631400 xsym               EPPR1   B_VECTNIL+16
         3 000103   000000 701000 xent               TSX1    ASB$READ_SI
         3 000104   000000 011000                    NOP     0

      484    13193    3         P_PCB.NCHARS = ARS ;

  13193  3 000105   200004 235100                    LDA     ARS,,AUTO
         3 000106   000011 755000 xsym               STA     P_PCB+9

      485    13194    3         CALL X$PARSE( P_PCB ) ALTRET( FERES_ERR ) ;

  13194  3 000107   000003 630400 4                  EPPR0   3
         3 000110   000017 631400 xsym               EPPR1   B_VECTNIL+15
         3 000111   000000 701000 xent               TSX1    X$PARSE
         3 000112   000534 702000 3                  TSX2    FERES_ERR

      486    13195    3         NODE$ = P_PCB.OUT$ ;

  13195  3 000113   000003 236000 xsym               LDQ     P_PCB+3
         3 000114   000000 756000 xsym               STQ     NODE$

      487    13196    3         SUBS = P$NODE.SUBNODES ;

  13196  3 000115   000000 470400 xsym               LDP0    NODE$
         3 000116   000001 236100                    LDQ     1,,PR0
         3 000117   000022 772000                    QRL     18
         3 000120   200010 756100                    STQ     SUBS,,AUTO
PL6.E3A0      #002=ASC$FERESOURCE File=ASC$RESOURCE.:E05TSI                      TUE 07/29/97 09:45 Page:86   

      488    13197    3         END;

      489    13198    3      DO I = 0 TO SUBS-1 ;

  13198  3 000121   200005 450100                    STZ     I,,AUTO
         3 000122   000526 710000 3                  TRA     SKIP_IT+3

      490    13199    3         IF MOD_FLG THEN

  13199  3 000123   200003 470500                    LDP0    @MOD_FLG,,AUTO
         3 000124   000000 234100                    SZN     0,,PR0
         3 000125   000135 605000 3                  TPL     s:13202

      491    13200    3            FERES_STRC = FERES$LIST.FERES(I) ;

  13200  3 000126   200005 236100                    LDQ     I,,AUTO
         3 000127   000012 402007                    MPY     10,DL
         3 000130   000000 471400 xsym               LDP1    AS_FERESOURCE_LIST$
         3 000131   000100 100506                    MLR     fill='000'O
         3 000132   100001 000012                    ADSC9   1,Q,PR1                  cn=0,n=10
         3 000133   200026 000012                    ADSC9   FERES_STRC,,AUTO         cn=0,n=10
         3 000134   000143 710000 3                  TRA     s:13204

      492    13201    3         ELSE
      493    13202    3            CODE = P$NODE.SUBLK$(I) -> P$NODE.CODE ;

  13202  3 000135   000000 471400 xsym               LDP1    NODE$
         3 000136   200005 720100                    LXL0    I,,AUTO
         3 000137   100003 473510                    LDP3    3,X0,PR1
         3 000140   300000 236100                    LDQ     0,,PR3
         3 000141   777777 376007                    ANQ     -1,DL
         3 000142   000000 756000 xsym               STQ     CODE

      494    13203                                                              /**/
      495    13204    4         DO SELECT( CODE ) ;

PL6.E3A0      #002=ASC$FERESOURCE File=ASC$RESOURCE.:E05TSI                      TUE 07/29/97 09:45 Page:87   
  13204  3 000143   000000 236000 xsym               LDQ     CODE
         3 000144   000032 116007                    CMPQ    26,DL
         3 000145   000164 602000 3                  TNC     s:13204+17
         3 000146   000172 600000 3                  TZE     s:13208
         3 000147   000455 116007                    CMPQ    301,DL
         3 000150   000155 602000 3                  TNC     s:13204+10
         3 000151   000216 600000 3                  TZE     s:13222
         3 000152   000456 116007                    CMPQ    302,DL
         3 000153   000523 601000 3                  TNZ     SKIP_IT
         3 000154   000212 710000 3                  TRA     s:13219
         3 000155   000454 116007                    CMPQ    300,DL
         3 000156   000161 602000 3                  TNC     s:13204+14
         3 000157   000222 600000 3                  TZE     s:13225
         3 000160   000523 710000 3                  TRA     SKIP_IT
         3 000161   000037 116007                    CMPQ    31,DL
         3 000162   000523 601000 3                  TNZ     SKIP_IT
         3 000163   000227 710000 3                  TRA     s:13230
         3 000164   000014 116007                    CMPQ    12,DL
         3 000165   000523 602000 3                  TNC     SKIP_IT
         3 000166   000172 600000 3                  TZE     s:13208
         3 000167   000020 116007                    CMPQ    16,DL
         3 000170   000523 601000 3                  TNZ     SKIP_IT
         3 000171   000226 710000 3                  TRA     s:13227

      496    13205                                                              /**/
      497    13206    4            SELECT( END_VAL ,

      498    13207    4                 BLANK_LINE_VAL ) ;
      499    13208    4            MORE = AS_FALSE ;

  13208  3 000172   000000 236000 xsym               LDQ     AS_FALSE
         3 000173   400000 376003                    ANQ     -131072,DU
         3 000174   200014 756100                    STQ     MORE,,AUTO

      500    13209    4            I = SUBS ;

  13209  3 000175   200010 235100                    LDA     SUBS,,AUTO
PL6.E3A0      #002=ASC$FERESOURCE File=ASC$RESOURCE.:E05TSI                      TUE 07/29/97 09:45 Page:88   
         3 000176   200005 755100                    STA     I,,AUTO

      501    13210                                                              /* Restore P_PCB. */
      502    13211    4            P_PCB.WORK$ = WORK$ ;

  13211  3 000177   200021 236100                    LDQ     WORK$,,AUTO
         3 000200   000002 756000 xsym               STQ     P_PCB+2

      503    13212    4            P_PCB.WKSZ = WKSZ ;

  13212  3 000201   200023 720100                    LXL0    WKSZ,,AUTO
         3 000202   000005 740000 xsym               STX0    P_PCB+5

      504    13213    4            P_PCB.WK_USED = P_PCB.WK_USED ;

  13213  3 000203   000010 221000 xsym               LDX1    P_PCB+8
         3 000204   000010 741000 xsym               STX1    P_PCB+8

      505    13214    4            P_PCB.ROOT$ = ROOT$ ;

  13214  3 000205   200022 236100                    LDQ     ROOT$,,AUTO
         3 000206   000001 756000 xsym               STQ     P_PCB+1

      506    13215                                                              /* Restore NODE$ */
      507    13216    4            NODE$ = T_NODE$ ;

  13216  3 000207   200025 236100                    LDQ     T_NODE$,,AUTO
         3 000210   000000 756000 xsym               STQ     NODE$
         3 000211   000523 710000 3                  TRA     SKIP_IT

      508    13217                                                              /**/
      509    13218    4            SELECT( HELP_VAL ) ;

      510    13219    4            CALL ASH$HELP ;

  13219  3 000212   000002 631400 xsym               EPPR1   B_VECTNIL+2
         3 000213   000000 701000 xent               TSX1    ASH$HELP
PL6.E3A0      #002=ASC$FERESOURCE File=ASC$RESOURCE.:E05TSI                      TUE 07/29/97 09:45 Page:89   
         3 000214   000000 011000                    NOP     0
         3 000215   000523 710000 3                  TRA     SKIP_IT

      511    13220                                                                  /**/
      512    13221    4            SELECT( QUESTION_VAL ) ;

      513    13222    4            CALL ASH$QUEST ;

  13222  3 000216   000002 631400 xsym               EPPR1   B_VECTNIL+2
         3 000217   000000 701000 xent               TSX1    ASH$QUEST
         3 000220   000000 011000                    NOP     0
         3 000221   000523 710000 3                  TRA     SKIP_IT

      514    13223                                                                  /**/
      515    13224    4            SELECT( DQUESTION_VAL ) ;

      516    13225    4            CALL ASH$DQUEST ;

  13225  3 000222   000002 631400 xsym               EPPR1   B_VECTNIL+2
         3 000223   000000 701000 xent               TSX1    ASH$DQUEST
         3 000224   000000 011000                    NOP     0
         3 000225   000523 710000 3                  TRA     SKIP_IT

      517    13226                                                                  /**/
      518    13227    4            SELECT( EOL_VAL ) ;

  13227  3 000226   000523 710000 3                  TRA     SKIP_IT

      519    13228                                                              /**/
      520    13229    4            SELECT( FERES_OPT_VAL ) ;

      521    13230    5            IF NOT MOD_FLG THEN DO;

  13230  3 000227   000000 234100                    SZN     0,,PR0
         3 000230   000352 604000 3                  TMI     s:13295

      522    13231    5               BLK$ = P$NODE.SUBLK$(I) -> P$NODE.SUBLK$(0)
PL6.E3A0      #002=ASC$FERESOURCE File=ASC$RESOURCE.:E05TSI                      TUE 07/29/97 09:45 Page:90   

  13231  3 000231   000000 471400 xsym               LDP1    NODE$
         3 000232   200005 720100                    LXL0    I,,AUTO
         3 000233   100003 473510                    LDP3    3,X0,PR1
         3 000234   300003 474500                    LDP4    3,,PR3
         3 000235   400003 236100                    LDQ     3,,PR4
         3 000236   200015 756100                    STQ     BLK$,,AUTO

      523    13232    5                    -> P$NODE.SUBLK$(0) ;
      524    13233    5               IF OUT$SYM.COUNT > 2

  13233  3 000237   200015 475500                    LDP5    BLK$,,AUTO
         3 000240   500004 236100                    LDQ     4,,PR5
         3 000241   777000 376003                    ANQ     -512,DU
         3 000242   003000 116003                    CMPQ    1536,DU
         3 000243   000251 602000 3                  TNC     s:13256

      525    13234    6               THEN DO;

      526    13235        /*E*  ERROR:    ASC-E$FERES_NAME_TOO_LONG-C
      527    13236              MESSAGE:  FERESOURCE name too long.
      528    13237              MESSAGE1: FERESOURCE name can be at most 2 characters long.
      529    13238        */
      530    13239                       %SCREAM( ERR#=E$FERES_NAME_TOO_LONG, LEVEL=ERROR, MID='C' );

  13251  3 000244   000004 630400 4                  EPPR0   4
         3 000245   000017 631400 xsym               EPPR1   B_VECTNIL+15
         3 000246   000000 701000 xent               TSX1    ASH$ERROR
         3 000247   000000 011000                    NOP     0

      531    13254    6                  GOTO SKIP_IT;

  13254  3 000250   000523 710000 3                  TRA     SKIP_IT

      532    13255    6                  END ;    /* Then do */
      533    13256    5               FERES_STRC.NAME = OUT$SYM.TEXT ;

PL6.E3A0      #002=ASC$FERESOURCE File=ASC$RESOURCE.:E05TSI                      TUE 07/29/97 09:45 Page:91   
  13256  3 000251   500004 236100                    LDQ     4,,PR5
         3 000252   000033 772000                    QRL     27
         3 000253   000000 621006                    EAX1    0,QL
         3 000254   040100 100540                    MLR     fill='040'O
         3 000255   500004 200011                    ADSC9   4,,PR5                   cn=1,n=*X1
         3 000256   200026 000002                    ADSC9   FERES_STRC,,AUTO         cn=0,n=2

      534    13257    6               DO J = 0 TO 3;

  13257  3 000257   200006 450100                    STZ     J,,AUTO

      535    13258    6                  FERES_STRC.MODE(J) = -1;

  13258  3 000260   200006 235100                    LDA     J,,AUTO
         3 000261   000001 735000                    ALS     1
         3 000262   000105 101400                    MRL     fill='000'O
         3 000263   000027 000004 xsym               ADSC9   B_VECTNIL+23             cn=0,n=4
         3 000264   200026 400002                    ADSC9   FERES_STRC,A,AUTO        cn=2,n=2

      536    13259    6                  END;

  13259  3 000265   200006 236100                    LDQ     J,,AUTO
         3 000266   000001 036007                    ADLQ    1,DL
         3 000267   200006 756100                    STQ     J,,AUTO
         3 000270   000004 116007                    CMPQ    4,DL
         3 000271   000260 602000 3                  TNC     s:13258

      537    13260    5               PTR$ = P$NODE.SUBLK$(I) -> P$NODE.SUBLK$(1) ;

  13260  3 000272   000000 470400 xsym               LDP0    NODE$
         3 000273   200005 720100                    LXL0    I,,AUTO
         3 000274   000003 471510                    LDP1    3,X0,PR0
         3 000275   100004 236100                    LDQ     4,,PR1
         3 000276   200016 756100                    STQ     PTR$,,AUTO

      538    13261    5               SUBNDS = PTR$ -> P$NODE.SUBNODES ;

PL6.E3A0      #002=ASC$FERESOURCE File=ASC$RESOURCE.:E05TSI                      TUE 07/29/97 09:45 Page:92   
  13261  3 000277   200016 473500                    LDP3    PTR$,,AUTO
         3 000300   300001 236100                    LDQ     1,,PR3
         3 000301   000022 772000                    QRL     18
         3 000302   200011 756100                    STQ     SUBNDS,,AUTO

      539    13262    6               DO J = 0 TO SUBNDS-1 ;

  13262  3 000303   200006 450100                    STZ     J,,AUTO
         3 000304   000347 710000 3                  TRA     s:13292+3

      540    13263    6                  MODE = PTR$ -> P$NODE.SUBLK$(J) -> P$NODE.SUBLK$(0)

  13263  3 000305   200016 470500                    LDP0    PTR$,,AUTO
         3 000306   200006 720100                    LXL0    J,,AUTO
         3 000307   000003 471510                    LDP1    3,X0,PR0
         3 000310   100003 473500                    LDP3    3,,PR1
         3 000311   300000 236100                    LDQ     0,,PR3
         3 000312   777777 376007                    ANQ     -1,DL
         3 000313   200007 756100                    STQ     MODE,,AUTO

      541    13264    6                       -> P$NODE.CODE ;
      542    13265    6                  BLK$ = PTR$ -> P$NODE.SUBLK$(J) -> P$NODE.SUBLK$(1)

  13265  3 000314   100004 474500                    LDP4    4,,PR1
         3 000315   400003 236100                    LDQ     3,,PR4
         3 000316   200015 756100                    STQ     BLK$,,AUTO

      543    13266    6                       -> P$NODE.SUBLK$(0) ;
      544    13267    6                  CALL CHARBIN( VAL, OUT$SYM.TEXT ) ;

  13267  3 000317   200015 475500                    LDP5    BLK$,,AUTO
         3 000320   500004 236100                    LDQ     4,,PR5
         3 000321   000033 772000                    QRL     27
         3 000322   000000 621006                    EAX1    0,QL
         3 000323   000100 305540                    DTB
         3 000324   500004 230011                    NDSC9   4,,PR5                   cn=1,s=nosgn,sf=0,n=*X1
         3 000325   200032 000010                    NDSC9   FERES_STRC+4,,AUTO       cn=0,s=lsgnf,sf=0,n=8
PL6.E3A0      #002=ASC$FERESOURCE File=ASC$RESOURCE.:E05TSI                      TUE 07/29/97 09:45 Page:93   
         3 000326   200033 235100                    LDA     FERES_STRC+5,,AUTO
         3 000327   200012 755100                    STA     VAL,,AUTO

      545    13268    6                  IF VAL > 511

  13268  3 000330   001000 115007                    CMPA    512,DL
         3 000331   000337 602000 3                  TNC     s:13291

      546    13269    7                  THEN DO;

      547    13270        /*E*  ERROR:    ASC-E$FERES_VAL_TOO_BIG-C
      548    13271              MESSAGE:  FERESOURCE value too big.
      549    13272              MESSAGE1: FERESOURCE value can be at most 511.
      550    13273        */
      551    13274                          %SCREAM( ERR#=E$FERES_VAL_TOO_BIG, LEVEL=ERROR,MID='A');

  13286  3 000332   000005 630400 4                  EPPR0   5
         3 000333   000017 631400 xsym               EPPR1   B_VECTNIL+15
         3 000334   000000 701000 xent               TSX1    ASH$ERROR
         3 000335   000000 011000                    NOP     0

      552    13289    7                     END;

  13289  3 000336   000344 710000 3                  TRA     s:13292

      553    13290    6                  ELSE
      554    13291    6                     FERES_STRC.MODE(MODE) = VAL;

  13291  3 000337   200007 236100                    LDQ     MODE,,AUTO
         3 000340   000001 736000                    QLS     1
         3 000341   000106 101500                    MRL     fill='000'O
         3 000342   200012 000004                    ADSC9   VAL,,AUTO                cn=0,n=4
         3 000343   200026 400002                    ADSC9   FERES_STRC,Q,AUTO        cn=2,n=2

      555    13292    6                  END;    /* Do j = 0 to SUBNDS-1 */

  13292  3 000344   200006 235100                    LDA     J,,AUTO
PL6.E3A0      #002=ASC$FERESOURCE File=ASC$RESOURCE.:E05TSI                      TUE 07/29/97 09:45 Page:94   
         3 000345   000001 035007                    ADLA    1,DL
         3 000346   200006 755100                    STA     J,,AUTO
         3 000347   200006 236100                    LDQ     J,,AUTO
         3 000350   200011 116100                    CMPQ    SUBNDS,,AUTO
         3 000351   000305 602000 3                  TNC     s:13263

      556    13293    5               END;   /* If not MOD_FLG then do */

      557    13294                                                          /* Find feres in users record. */
      558    13295    4            FERES# = KL_DREC.KL_DREC_FEBLK.RESL_CNT ;

  13295  3 000352   000130 235000 xsym               LDA     KL_DREC+88
         3 000353   000022 771000                    ARL     18
         3 000354   200013 755100                    STA     FERES#,,AUTO

      559    13296    5            DO J = 0 TO FERES#-1 ;

  13296  3 000355   200006 450100                    STZ     J,,AUTO
         3 000356   000370 710000 3                  TRA     s:13298+3

      560    13297    5               IF KL_DREC.KL_DREC_FEBLK.RESL.RNAME(J) = FERES_STRC.NAME THEN GOTO
             13297                        FOUND_FERES ;

  13297  3 000357   200006 236100                    LDQ     J,,AUTO
         3 000360   000012 402007                    MPY     10,DL
         3 000361   040100 106406                    CMPC    fill='040'O
         3 000362   000130 400002 xsym               ADSC9   KL_DREC+88,Q             cn=2,n=2
         3 000363   200026 000002                    ADSC9   FERES_STRC,,AUTO         cn=0,n=2
         3 000364   000424 600000 3                  TZE     FOUND_FERES

      561    13298    5               END ; /* Do j */

  13298  3 000365   200006 235100                    LDA     J,,AUTO
         3 000366   000001 035007                    ADLA    1,DL
         3 000367   200006 755100                    STA     J,,AUTO
         3 000370   200006 236100                    LDQ     J,,AUTO
         3 000371   200013 116100                    CMPQ    FERES#,,AUTO
PL6.E3A0      #002=ASC$FERESOURCE File=ASC$RESOURCE.:E05TSI                      TUE 07/29/97 09:45 Page:95   
         3 000372   000357 602000 3                  TNC     s:13297

      562    13299                                                              /* Didn't find it. */
      563    13300                                                              /* Set up next slot. */
      564    13301    5            IF AS_CR_MOD_PROJ > 0 THEN DO;

  13301  3 000373   000000 235000 xsym               LDA     AS_CR_MOD_PROJ
         3 000374   000402 604400 3                  TMOZ    s:13323

      565    13302        /*E* ERROR:  ASC-E$NO_MORE_FERES-C
      566    13303             MESSAGE:  You cannot define the feresource for this user.
      567    13304             MESSAGE1: You must have that feresource available to you.
      568    13305        */
      569    13306                    %SCREAM(ERR#=E$NO_MORE_FERES,LEVEL=ERROR,MID='C');

  13318  3 000375   000006 630400 4                  EPPR0   6
         3 000376   000017 631400 xsym               EPPR1   B_VECTNIL+15
         3 000377   000000 701000 xent               TSX1    ASH$ERROR
         3 000400   000000 011000                    NOP     0

      570    13321    5               GOTO SKIP_IT ;

  13321  3 000401   000523 710000 3                  TRA     SKIP_IT

      571    13322    5               END;      /* Of then do     */
      572    13323    4            KL_DREC.KL_DREC_FEBLK.RESL_CNT = J + 1 ;

  13323  3 000402   000001 620006                    EAX0    1,QL
         3 000403   000130 740000 xsym               STX0    KL_DREC+88

      573    13324    4            KL_DREC.KL_DREC_FEBLK.RESL.RNAME(J) = FERES_STRC.NAME ;

  13324  3 000404   000012 402007                    MPY     10,DL
         3 000405   040006 100500                    MLR     fill='040'O
         3 000406   200026 000002                    ADSC9   FERES_STRC,,AUTO         cn=0,n=2
         3 000407   000130 400002 xsym               ADSC9   KL_DREC+88,Q             cn=2,n=2

PL6.E3A0      #002=ASC$FERESOURCE File=ASC$RESOURCE.:E05TSI                      TUE 07/29/97 09:45 Page:96   
      574    13325    4            KL_DREC.KL_DREC_FEBLK.RESL.UMAX(J) = 0 ;

  13325  3 000410   000006 101400                    MRL     fill='000'O
         3 000411   000002 000004 xsym               ADSC9   B_VECTNIL+2              cn=0,n=4
         3 000412   000131 000002 xsym               ADSC9   KL_DREC+89,Q             cn=0,n=2

      575    13326    4            KL_DREC.KL_DREC_FEBLK.RESL.CMAX(J) = 0 ;

  13326  3 000413   000006 101400                    MRL     fill='000'O
         3 000414   000002 000004 xsym               ADSC9   B_VECTNIL+2              cn=0,n=4
         3 000415   000131 400002 xsym               ADSC9   KL_DREC+89,Q             cn=2,n=2

      576    13327    4            KL_DREC.KL_DREC_FEBLK.RESL.HMAX(J) = 0 ;

  13327  3 000416   000006 101400                    MRL     fill='000'O
         3 000417   000002 000004 xsym               ADSC9   B_VECTNIL+2              cn=0,n=4
         3 000420   000132 000002 xsym               ADSC9   KL_DREC+90,Q             cn=0,n=2

      577    13328    4            KL_DREC.KL_DREC_FEBLK.RESL.GMAX(J) = 0 ;

  13328  3 000421   000006 101400                    MRL     fill='000'O
         3 000422   000002 000004 xsym               ADSC9   B_VECTNIL+2              cn=0,n=4
         3 000423   000132 400002 xsym               ADSC9   KL_DREC+90,Q             cn=2,n=2

  13328  3 000424                       FOUND_FERES  null
      578    13329    4   FOUND_FERES: ;
      579    13330    4            FERES$ = ADDR( KL_DREC.KL_DREC_FEBLK.RESL.RNAME(J)) ;

  13330  3 000424   200006 236100                    LDQ     J,,AUTO
         3 000425   000010 402000 4                  MPY     8
         3 000426   000007 036000 4                  ADLQ    7
         3 000427   200017 756100                    STQ     FERES$,,AUTO

      580    13331    4            DFLT$ = ADDR( KL_DFLT.KL_DFLT_FEBLK.RESL.RNAME(J)) ;

  13331  3 000430   200006 236100                    LDQ     J,,AUTO
         3 000431   000010 402000 4                  MPY     8
PL6.E3A0      #002=ASC$FERESOURCE File=ASC$RESOURCE.:E05TSI                      TUE 07/29/97 09:45 Page:97   
         3 000432   000011 036000 4                  ADLQ    9
         3 000433   200020 756100                    STQ     DFLT$,,AUTO

      581    13332    5            DO J = 0 TO 3;

  13332  3 000434   200006 450100                    STZ     J,,AUTO

      582    13333    6               IF FERES_STRC.MODE(J) > -1 THEN DO ;

  13333  3 000435   200006 235100                    LDA     J,,AUTO
         3 000436   000001 735000                    ALS     1
         3 000437   000100 100505                    MLR     fill='000'O
         3 000440   200026 400002                    ADSC9   FERES_STRC,A,AUTO        cn=2,n=2
         3 000441   200032 000004                    ADSC9   FERES_STRC+4,,AUTO       cn=0,n=4
         3 000442   200032 236100                    LDQ     FERES_STRC+4,,AUTO
         3 000443   000022 732000                    QRS     18
         3 000444   000000 116003                    CMPQ    0,DU
         3 000445   000476 604000 3                  TMI     s:13359

      583    13334    6                  IF  AS_CR_MOD_PROJ > 0  AND

  13334  3 000446   000000 236000 xsym               LDQ     AS_CR_MOD_PROJ
         3 000447   000472 604400 3                  TMOZ    s:13357
         3 000450   000100 100505                    MLR     fill='000'O
         3 000451   200026 400002                    ADSC9   FERES_STRC,A,AUTO        cn=2,n=2
         3 000452   200032 000004                    ADSC9   FERES_STRC+4,,AUTO       cn=0,n=4
         3 000453   200032 236100                    LDQ     FERES_STRC+4,,AUTO
         3 000454   000022 732000                    QRS     18
         3 000455   200033 756100                    STQ     FERES_STRC+5,,AUTO
         3 000456   200020 470500                    LDP0    DFLT$,,AUTO
         3 000457   000100 101505                    MRL     fill='000'O
         3 000460   000000 400002                    ADSC9   0,A,PR0                  cn=2,n=2
         3 000461   200034 000004                    ADSC9   FERES_STRC+6,,AUTO       cn=0,n=4
         3 000462   200034 236100                    LDQ     FERES_STRC+6,,AUTO
         3 000463   200033 116100                    CMPQ    FERES_STRC+5,,AUTO
         3 000464   000472 605000 3                  TPL     s:13357

PL6.E3A0      #002=ASC$FERESOURCE File=ASC$RESOURCE.:E05TSI                      TUE 07/29/97 09:45 Page:98   
      584    13335    6                       FERES_STRC.MODE(J) > DFLT$STRC.VAL(J) THEN
      585    13336    7                  DO ;

      586    13337        /*E* ERROR:      ASC-E$FERES_VAL_TOO_HIGH-C
      587    13338         MESSAGE:   This user cannot have more feresource value than your feresource value.
      588    13339        */
      589    13340                          %SCREAM (ERR#=E$FERES_VAL_TOO_HIGH,LEVEL=ERROR,MID='C');

  13352  3 000465   000012 630400 4                  EPPR0   10
         3 000466   000017 631400 xsym               EPPR1   B_VECTNIL+15
         3 000467   000000 701000 xent               TSX1    ASH$ERROR
         3 000470   000000 011000                    NOP     0

      590    13355    7                     GOTO SKIP_IT ;

  13355  3 000471   000523 710000 3                  TRA     SKIP_IT

      591    13356    7                     END;        /* Of then do    */
      592    13357    6                  FERES$STRC.VAL( J ) = FERES_STRC.MODE( J ) ;

  13357  3 000472   200017 470500                    LDP0    FERES$,,AUTO
         3 000473   000105 100505                    MLR     fill='000'O
         3 000474   200026 400002                    ADSC9   FERES_STRC,A,AUTO        cn=2,n=2
         3 000475   000000 400002                    ADSC9   0,A,PR0                  cn=2,n=2

      593    13358    6                  END;   /* Do if FERES_STRC.MODE(J) > -1  */

      594    13359    5               END ; /* Do j */

  13359  3 000476   200006 236100                    LDQ     J,,AUTO
         3 000477   000001 036007                    ADLQ    1,DL
         3 000500   200006 756100                    STQ     J,,AUTO
         3 000501   000004 116007                    CMPQ    4,DL
         3 000502   000435 602000 3                  TNC     s:13333

      595    13360    4            IF NOT MOD_FLG  AND  AS_WILD_USER

PL6.E3A0      #002=ASC$FERESOURCE File=ASC$RESOURCE.:E05TSI                      TUE 07/29/97 09:45 Page:99   
  13360  3 000503   200003 470500                    LDP0    @MOD_FLG,,AUTO
         3 000504   000000 234100                    SZN     0,,PR0
         3 000505   000523 604000 3                  TMI     SKIP_IT
         3 000506   000000 234000 xsym               SZN     AS_WILD_USER
         3 000507   000523 605000 3                  TPL     SKIP_IT

      596    13361    5            THEN DO;

      597    13362    5               FERES$LIST.FERES( FERES$LIST.COUNT) = FERES_STRC;

  13362  3 000510   000000 471400 xsym               LDP1    AS_FERESOURCE_LIST$
         3 000511   100000 235100                    LDA     0,,PR1
         3 000512   000044 733000                    LRS     36
         3 000513   000012 402007                    MPY     10,DL
         3 000514   000106 100500                    MLR     fill='000'O
         3 000515   200026 000012                    ADSC9   FERES_STRC,,AUTO         cn=0,n=10
         3 000516   100001 000012                    ADSC9   1,Q,PR1                  cn=0,n=10

      598    13363    5               FERES$LIST.COUNT = FERES$LIST.COUNT + 1;

  13363  3 000517   000000 471400 xsym               LDP1    AS_FERESOURCE_LIST$
         3 000520   100000 235100                    LDA     0,,PR1
         3 000521   000001 035007                    ADLA    1,DL
         3 000522   100000 755100                    STA     0,,PR1

      599    13364    5               END;

  13360  3 000523                       SKIP_IT      null
      600    13365    4   SKIP_IT: ;
      601    13366    4            END ; /* Do case */

      602    13367    3         END ; /* Do i */

  13367  3 000523   200005 235100                    LDA     I,,AUTO
         3 000524   000001 035007                    ADLA    1,DL
         3 000525   200005 755100                    STA     I,,AUTO
         3 000526   200005 236100                    LDQ     I,,AUTO
PL6.E3A0      #002=ASC$FERESOURCE File=ASC$RESOURCE.:E05TSI                      TUE 07/29/97 09:45 Page:100  
         3 000527   200010 116100                    CMPQ    SUBS,,AUTO
         3 000530   000123 602000 3                  TNC     s:13199

      603    13368    2      END ; /* Do while( more ) */

  13368  3 000531   200014 234100                    SZN     MORE,,AUTO
         3 000532   000061 604000 3                  TMI     FERES_LOOP

      604    13369                                                              /**/
      605    13370    1   RETURN ;

  13370  3 000533   000000 702200 xent               TSX2  ! X66_ARET

  13357  3 000534                       FERES_ERR    null
      606    13371                                                              /**/
      607    13372    1   FERES_ERR: ;
      608    13373    1   ERR_CODE = P_PCB.ERROR ;

  13373  3 000534   000006 236000 xsym               LDQ     P_PCB+6
         3 000535   000000 756000 xsym               STQ     ERR_CODE

      609    13374    1   CALL ASH$ERROR( ERR_CODE ) ;

  13374  3 000536   000013 630400 4                  EPPR0   11
         3 000537   000017 631400 xsym               EPPR1   B_VECTNIL+15
         3 000540   000000 701000 xent               TSX1    ASH$ERROR
         3 000541   000000 011000                    NOP     0

      610    13375    1   GOTO FERES_LOOP ;

  13375  3 000542   000061 710000 3                  TRA     FERES_LOOP
      611    13376                                                              /**/
      612    13377    1   END   ASC$FERESOURCE ;

PL6.E3A0      #002=ASC$FERESOURCE File=ASC$RESOURCE.:E05TSI                      TUE 07/29/97 09:45 Page:101  
--  Include file information  --

   AS_SUPER_R.:E05TOU  cannot be made into a system file and is referenced.
   AS_PERR_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   XU_FORMAT_C.:E05TOU  is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
   KL_SUPER_C.:E05TOU  is referenced.
   B_MACROS_C.:E05TOU  is referenced.
   AS_MAC_C.:E05TOU  cannot be made into a system file and is referenced.
   AS_SUBS_C.:E05TOU  is referenced.
   AS_SUPER_C.:E05TOU  is referenced.
   AS_ENTRIES_M.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure ASC$FERESOURCE.
PL6.E3A0      #002=ASC$FERESOURCE File=ASC$RESOURCE.:E05TSI                      TUE 07/29/97 09:45 Page:102  

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @MOD_FLG                   4-0-0/w UBIN        r     1 ARS
    15-0-0/w PTR         r     1 BLK$                      20-0-0/w PTR         r     1 DFLT$
    13-0-0/w UBIN        r     1 FERES#                    17-0-0/w PTR         r     1 FERES$
    26-0-0/c STRC(90)    r     1 FERES_STRC                 5-0-0/w UBIN        r     1 I
     6-0-0/w UBIN        r     1 J                          7-0-0/w UBIN        r     1 MODE
    *0-0-0/w BIT         r     1 MOD_FLG                   14-0-0/b BIT         r     1 MORE
    16-0-0/w PTR         r     1 PTR$                      22-0-0/w PTR         r     1 ROOT$
    11-0-0/w UBIN        r     1 SUBNDS                    10-0-0/w UBIN        r     1 SUBS
    25-0-0/w PTR         r     1 T_NODE$                   12-0-0/w UBIN        r     1 VAL
    23-0-0/w UBIN        r     1 WKSZ                      24-0-0/w UBIN        r     1 WK_USED
    21-0-0/w PTR         r     1 WORK$

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN        r     1 AS_CR_MOD_PROJ             0-0-0/b BIT         r     1 AS_FALSE
     0-0-0/w PTR         r     1 AS_FERESOURCE_LIST$        0-0-0/w STRC(1483)  r     1 AS_MOD_USER
     0-0-0/b BIT         r     1 AS_TRUE                    0-0-0/b BIT         r     1 AS_WILD_USER
     0-0-0/w UBIN        r     1 CODE                       0-0-0/b STRC        r     1 ERR_CODE
     0-0-0/w UBIN        r     1 FERES_OPTS                 0-0-0/c CHAR(255)   r     1 IN_BUF
     0-0-0/w STRC(6084)  r     1 KL_DFLT                    0-0-0/w STRC(6084)  r     1 KL_DREC
     0-0-0/w PTR         r     1 NODE$                      0-0-0/w STRC(504)   r     1 P_PCB
     0-0-0/d REMB        r     1 REMEM_VAR

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name
PL6.E3A0      #002=ASC$FERESOURCE File=ASC$RESOURCE.:E05TSI                      TUE 07/29/97 09:45 Page:103  

     0-0-0/c STRC(90)    r     1 DFLT$STRC                  0-0-0/w STRC(126)   r     1 FERES$LIST
     0-0-0/c STRC(90)    r     1 FERES$STRC                 0-0-0/w ASTR(153)   r     1 OUT$SYM
     0-0-0/w STRC(144)   r     1 P$NODE


   Procedure ASC$FERESOURCE requires 355 words for executable code.
   Procedure ASC$FERESOURCE requires 30 words of local(AUTO) storage.

    No errors detected in file ASC$RESOURCE.:E05TSI    .
PL6.E3A0      #002=ASC$FERESOURCE File=ASC$RESOURCE.:E05TSI                      TUE 07/29/97 09:45 Page:104  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #002=ASC$FERESOURCE File=ASC$RESOURCE.:E05TSI                      TUE 07/29/97 09:45 Page:105  
          MINI XREF LISTING

ARS
     12984**DCL     13192<>CALL    13193>>ASSIGN
ASA_BRKS_LOC
     10126**DCL     10126--REDEF
ASB$READ_SI
     13025**DCL-ENT 13192--CALL
ASB$SET_PROMPT
     13028**DCL-ENT 13177--CALL
ASH$DQUEST
     13043**DCL-ENT 13225--CALL
ASH$ERROR
     13031**DCL-ENT 13251--CALL    13286--CALL    13318--CALL    13352--CALL    13374--CALL
ASH$HELP
     13037**DCL-ENT 13219--CALL
ASH$QUEST
     13040**DCL-ENT 13222--CALL
AS_CR_MOD_PROJ
     10134**DCL     13301>>IF      13334>>IF
AS_DEFAULT.BANNER_PERM
     10819**DCL     10820--REDEF
AS_DEFAULT.BUDGET.MACCT
     10724**DCL     10728--REDEF
AS_DEFAULT.BUDGET.MAX_PROJECTS
     10737**DCL     10740--REDEF
AS_DEFAULT.BUDGET.PACCUM
     10720**DCL     10722--REDEF
AS_DEFAULT.BUDGET.PMAXC
     10715**DCL     10717--REDEF
AS_DEFAULT.SETUP_CHRA.TXT
     10835**DCL     10836--REDEF   10837--REDEF
AS_DEFAULT_DREC.PASSWORD
     12089**DCL     12093--REDEF
PL6.E3A0      #002=ASC$FERESOURCE File=ASC$RESOURCE.:E05TSI                      TUE 07/29/97 09:45 Page:106  
AS_DEFAULT_DREC.RENAME
     12112**DCL     12113--REDEF
AS_DFLT.BANNER_PERM
     10641**DCL     10642--REDEF
AS_DFLT.BUDGET.MACCT
     10546**DCL     10550--REDEF
AS_DFLT.BUDGET.MAX_PROJECTS
     10559**DCL     10562--REDEF
AS_DFLT.BUDGET.PACCUM
     10542**DCL     10544--REDEF
AS_DFLT.BUDGET.PMAXC
     10537**DCL     10539--REDEF
AS_DFLT.SETUP_CHRA.TXT
     10657**DCL     10658--REDEF   10659--REDEF
AS_FALSE
      9986**DCL     13187>>ASSIGN  13208>>ASSIGN
AS_FERESOURCE_LIST$
     10132**DCL     13136--IMP-PTR 13160>>IF      13189>>ASSIGN  13200>>ASSIGN  13362>>ASSIGN  13362>>ASSIGN
     13363>>ASSIGN  13363>>ASSIGN
AS_FE_MODE
      9992**DCL      9993--REDEF
AS_MODE
      9989**DCL      9991--REDEF
AS_MOD_USER.ACCESS
     12854**DCL     12855--REDEF
AS_MOD_USER.BANNER
     12841**DCL     12842--REDEF
AS_MOD_USER.BANNER_PERM
     12843**DCL     12844--REDEF
AS_MOD_USER.BILL
     12849**DCL     12850--REDEF
AS_MOD_USER.CPROC
     12845**DCL     12846--REDEF
AS_MOD_USER.FEBILL
     12925**DCL     12926--REDEF
AS_MOD_USER.FECXTMEM
PL6.E3A0      #002=ASC$FERESOURCE File=ASC$RESOURCE.:E05TSI                      TUE 07/29/97 09:45 Page:107  
     12942**DCL     12943--REDEF
AS_MOD_USER.FEMINTS
     12927**DCL     12928--REDEF
AS_MOD_USER.FEMMEM
     12938**DCL     12939--REDEF
AS_MOD_USER.FEMTIME
     12936**DCL     12937--REDEF
AS_MOD_USER.FEPPRIV
     12933**DCL     12935--REDEF
AS_MOD_USER.FEPRIV
     12930**DCL     12932--REDEF
AS_MOD_USER.FERESOURCE
     12945**DCL     13178<<ASSIGN
AS_MOD_USER.FORCE_BIT
     12839**DCL     12840--REDEF
AS_MOD_USER.KEY
     12921**DCL     12923--REDEF
AS_MOD_USER.LASTCPROC
     12847**DCL     12848--REDEF
AS_MOD_USER.LIMITS.DO_
     12895**DCL     12896--REDEF
AS_MOD_USER.LIMITS.FPOOLS
     12911**DCL     12912--REDEF
AS_MOD_USER.LIMITS.LO
     12891**DCL     12892--REDEF
AS_MOD_USER.LIMITS.MEM
     12887**DCL     12888--REDEF
AS_MOD_USER.LIMITS.MPRIO
     12915**DCL     12916--REDEF
AS_MOD_USER.LIMITS.PDIS
     12903**DCL     12904--REDEF
AS_MOD_USER.LIMITS.PO
     12899**DCL     12900--REDEF
AS_MOD_USER.LIMITS.TDIS
     12907**DCL     12908--REDEF
AS_MOD_USER.LIMITS.TIME
PL6.E3A0      #002=ASC$FERESOURCE File=ASC$RESOURCE.:E05TSI                      TUE 07/29/97 09:45 Page:108  
     12883**DCL     12884--REDEF
AS_MOD_USER.MAXENQ
     12864**DCL     12865--REDEF
AS_MOD_USER.PERM_BIT
     12837**DCL     12838--REDEF
AS_MOD_USER.PPRIV
     12859**DCL     12861--REDEF
AS_MOD_USER.PRIOB
     12866**DCL     12867--REDEF
AS_MOD_USER.PRIV
     12856**DCL     12858--REDEF
AS_MOD_USER.QUAN
     12862**DCL     12863--REDEF
AS_MOD_USER.SETUP
     12835**DCL     12836--REDEF
AS_PROJECT.BANNER_PERM
     11175**DCL     11176--REDEF
AS_PROJECT.BUDGET.MACCT
     11080**DCL     11084--REDEF
AS_PROJECT.BUDGET.MAX_PROJECTS
     11093**DCL     11096--REDEF
AS_PROJECT.BUDGET.PACCUM
     11076**DCL     11078--REDEF
AS_PROJECT.BUDGET.PMAXC
     11071**DCL     11073--REDEF
AS_PROJECT.SETUP_CHRA.TXT
     11191**DCL     11192--REDEF   11193--REDEF
AS_PROJECT_DFLT.BANNER_PERM
     11353**DCL     11354--REDEF
AS_PROJECT_DFLT.BUDGET.MACCT
     11258**DCL     11262--REDEF
AS_PROJECT_DFLT.BUDGET.MAX_PROJECTS
     11271**DCL     11274--REDEF
AS_PROJECT_DFLT.BUDGET.PACCUM
     11254**DCL     11256--REDEF
AS_PROJECT_DFLT.BUDGET.PMAXC
PL6.E3A0      #002=ASC$FERESOURCE File=ASC$RESOURCE.:E05TSI                      TUE 07/29/97 09:45 Page:109  
     11249**DCL     11251--REDEF
AS_PROJECT_DFLT.SETUP_CHRA.TXT
     11369**DCL     11370--REDEF   11371--REDEF
AS_PROJECT_DFLT_DREC.PASSWORD
     12575**DCL     12579--REDEF
AS_PROJECT_DFLT_DREC.RENAME
     12598**DCL     12599--REDEF
AS_PROJECT_DREC.PASSWORD
     12413**DCL     12417--REDEF
AS_PROJECT_DREC.RENAME
     12436**DCL     12437--REDEF
AS_PROJ_ADMIN.BANNER_PERM
     10997**DCL     10998--REDEF
AS_PROJ_ADMIN.BUDGET.MACCT
     10902**DCL     10906--REDEF
AS_PROJ_ADMIN.BUDGET.MAX_PROJECTS
     10915**DCL     10918--REDEF
AS_PROJ_ADMIN.BUDGET.PACCUM
     10898**DCL     10900--REDEF
AS_PROJ_ADMIN.BUDGET.PMAXC
     10893**DCL     10895--REDEF
AS_PROJ_ADMIN.SETUP_CHRA.TXT
     11013**DCL     11014--REDEF   11015--REDEF
AS_PROJ_ADMIN_DREC.PASSWORD
     12251**DCL     12255--REDEF
AS_PROJ_ADMIN_DREC.RENAME
     12274**DCL     12275--REDEF
AS_TRUE
      9986**DCL     13178>>ASSIGN  13181>>ASSIGN
AS_USERS.BANNER_PERM
     10463**DCL     10464--REDEF
AS_USERS.BUDGET.MACCT
     10368**DCL     10372--REDEF
AS_USERS.BUDGET.MAX_PROJECTS
     10381**DCL     10384--REDEF
AS_USERS.BUDGET.PACCUM
PL6.E3A0      #002=ASC$FERESOURCE File=ASC$RESOURCE.:E05TSI                      TUE 07/29/97 09:45 Page:110  
     10364**DCL     10366--REDEF
AS_USERS.BUDGET.PMAXC
     10359**DCL     10361--REDEF
AS_USERS.SETUP_CHRA.TXT
     10479**DCL     10480--REDEF   10481--REDEF
AS_USERS_CONSTANT.BANNER_PERM
     11531**DCL     11532--REDEF
AS_USERS_CONSTANT.BUDGET.MACCT
     11436**DCL     11440--REDEF
AS_USERS_CONSTANT.BUDGET.MAX_PROJECTS
     11449**DCL     11452--REDEF
AS_USERS_CONSTANT.BUDGET.PACCUM
     11432**DCL     11434--REDEF
AS_USERS_CONSTANT.BUDGET.PMAXC
     11427**DCL     11429--REDEF
AS_USERS_CONSTANT.SETUP_CHRA.TXT
     11547**DCL     11548--REDEF   11549--REDEF
AS_WILD_USER
     10131**DCL     13360>>IF
BLK$
     12993**DCL     13105--IMP-PTR 13231<<ASSIGN  13233>>IF      13256>>ASSIGN  13256>>ASSIGN  13265<<ASSIGN
     13267>>CALLBLT 13267>>CALLBLT
CODE
     10119**DCL     13188<<ASSIGN  13202<<ASSIGN  13204>>DOSELCT
DFLT$
     12996**DCL     13147--IMP-PTR 13331<<ASSIGN  13334>>IF
DFLT$STRC.VAL
     13149**DCL     13334>>IF
ERR_CODE
     10121**DCL     10122--REDEF   13373<<ASSIGN  13374<>CALL
FERES#
     12991**DCL     13295<<ASSIGN  13296>>DOINDEX
FERES$
     12995**DCL     13144--IMP-PTR 13330<<ASSIGN  13357>>ASSIGN
FERES$LIST.COUNT
     13137**DCL     13160>>IF      13189>>ASSIGN  13362>>ASSIGN  13363<<ASSIGN  13363>>ASSIGN
PL6.E3A0      #002=ASC$FERESOURCE File=ASC$RESOURCE.:E05TSI                      TUE 07/29/97 09:45 Page:111  
FERES$LIST.FERES
     13138**DCL     13200>>ASSIGN  13362<<ASSIGN
FERES$STRC.VAL
     13146**DCL     13357<<ASSIGN
FERES_ERR
     13357**LABEL   13194--CALLALT
FERES_LOOP
     13172**LABEL   13175--REMEMBR 13375--GOTO
FERES_OPTS
     13012**DCL     13174--ASSIGN
FERES_STRC
     13004**DCL     13200<<ASSIGN  13362>>ASSIGN
FERES_STRC.MODE
     13006**DCL     13258<<ASSIGN  13291<<ASSIGN  13333>>IF      13334>>IF      13357>>ASSIGN
FERES_STRC.NAME
     13005**DCL     13256<<ASSIGN  13297>>IF      13324>>ASSIGN
FOUND_FERES
     13328**LABEL   13297--GOTO
I
     12985**DCL     13198<<DOINDEX 13200>>ASSIGN  13202>>ASSIGN  13209<<ASSIGN  13231>>ASSIGN  13260>>ASSIGN
IN_BUF
     10117**DCL     13192<>CALL
J
     12986**DCL     13257<<DOINDEX 13258>>ASSIGN  13262<<DOINDEX 13263>>ASSIGN  13265>>ASSIGN  13296<<DOINDEX
     13297>>IF      13323>>ASSIGN  13324>>ASSIGN  13325>>ASSIGN  13326>>ASSIGN  13327>>ASSIGN  13328>>ASSIGN
     13330>>ASSIGN  13331>>ASSIGN  13332<<DOINDEX 13333>>IF      13334>>IF      13334>>IF      13357>>ASSIGN
     13357>>ASSIGN
KL_DEFAULT.PASSWORD
     12737**DCL     12741--REDEF
KL_DEFAULT.RENAME
     12760**DCL     12761--REDEF
KL_DFLT.KL_DFLT_FEBLK.RESL.RNAME
     12012**DCL     13331--ASSIGN
KL_DFLT.PASSWORD
     11927**DCL     11931--REDEF
KL_DFLT.RENAME
PL6.E3A0      #002=ASC$FERESOURCE File=ASC$RESOURCE.:E05TSI                      TUE 07/29/97 09:45 Page:112  
     11950**DCL     11951--REDEF
KL_DREC.KL_DREC_FEBLK.RESL.CMAX
     11852**DCL     13326<<ASSIGN
KL_DREC.KL_DREC_FEBLK.RESL.GMAX
     11854**DCL     13328<<ASSIGN
KL_DREC.KL_DREC_FEBLK.RESL.HMAX
     11853**DCL     13327<<ASSIGN
KL_DREC.KL_DREC_FEBLK.RESL.RNAME
     11850**DCL     13297>>IF      13324<<ASSIGN  13330--ASSIGN
KL_DREC.KL_DREC_FEBLK.RESL.UMAX
     11851**DCL     13325<<ASSIGN
KL_DREC.KL_DREC_FEBLK.RESL_CNT
     11848**DCL     13295>>ASSIGN  13323<<ASSIGN
KL_DREC.PASSWORD
     11765**DCL     11769--REDEF
KL_DREC.RENAME
     11788**DCL     11789--REDEF
KL_DREC_CNT.PASSWORD
     11652**DCL     11656--REDEF
KL_DREC_CNT.RENAME
     11675**DCL     11676--REDEF
MODE
     12987**DCL     13263<<ASSIGN  13291>>ASSIGN
MOD_FLG
        13**DCL         6--PROC    13159>>IF      13186>>IF      13199>>IF      13230>>IF      13360>>IF
MORE
     12992**DCL     13181<<ASSIGN  13183>>DOWHILE 13187<<ASSIGN  13208<<ASSIGN
NODE$
     10119**DCL     13058--IMP-PTR 13172>>ASSIGN  13195<<ASSIGN  13196>>ASSIGN  13202>>ASSIGN  13216<<ASSIGN
     13231>>ASSIGN  13260>>ASSIGN
OUT$SYM.COUNT
     13128**DCL     13131--IMP-SIZ 13233>>IF      13256>>ASSIGN  13267>>CALLBLT
OUT$SYM.TEXT
     13131**DCL     13256>>ASSIGN  13267>>CALLBLT
P$NODE.CODE
     13066**DCL     13202>>ASSIGN  13263>>ASSIGN
PL6.E3A0      #002=ASC$FERESOURCE File=ASC$RESOURCE.:E05TSI                      TUE 07/29/97 09:45 Page:113  
P$NODE.SUBLK$
     13091**DCL     13202>>ASSIGN  13231>>ASSIGN  13231>>ASSIGN  13231>>ASSIGN  13260>>ASSIGN  13260>>ASSIGN
     13263>>ASSIGN  13263>>ASSIGN  13265>>ASSIGN  13265>>ASSIGN  13265>>ASSIGN
P$NODE.SUBNODES
     13070**DCL     13196>>ASSIGN  13261>>ASSIGN
PROJ_KEY.TEXT
      9999**DCL      9999--REDEF
PROJ_KEY.TXT.PROJECT
      9999**DCL      9999--REDEF
PTR$
     12994**DCL     13260<<ASSIGN  13261>>ASSIGN  13263>>ASSIGN  13265>>ASSIGN
P_PCB
     10154**DCL     13194<>CALL
P_PCB.ERROR
     10258**DCL     13373>>ASSIGN
P_PCB.NCHARS
     10301**DCL     13193<<ASSIGN
P_PCB.OUT$
     10167**DCL     13195>>ASSIGN
P_PCB.ROOT$
     10159**DCL     13167>>ASSIGN  13174<<ASSIGN  13214<<ASSIGN
P_PCB.WKSZ
     10184**DCL     13165>>ASSIGN  13170<<ASSIGN  13212<<ASSIGN
P_PCB.WK_USED
     10287**DCL     13166>>ASSIGN  13169>>ASSIGN  13170>>ASSIGN  13213<<ASSIGN  13213>>ASSIGN
P_PCB.WORK$
     10163**DCL     13164>>ASSIGN  13169<<ASSIGN  13211<<ASSIGN
REMEM_VAR
     10125**DCL     10125--REDEF   13175<<REMEMBR
REM_FCMD
     10125**DCL     10126--REDEF
ROOT$
     13000**DCL     13167<<ASSIGN  13214>>ASSIGN
SKIP_IT
     13360**LABEL   13254--GOTO    13321--GOTO    13355--GOTO
SUBNDS
PL6.E3A0      #002=ASC$FERESOURCE File=ASC$RESOURCE.:E05TSI                      TUE 07/29/97 09:45 Page:114  
     12989**DCL     13261<<ASSIGN  13262>>DOINDEX
SUBS
     12988**DCL     13189<<ASSIGN  13196<<ASSIGN  13198>>DOINDEX 13209>>ASSIGN
T_NODE$
     13003**DCL     13172<<ASSIGN  13216>>ASSIGN
USERS_KEY.TEXT
      9996**DCL      9997--REDEF    9997--REDEF    9997--REDEF    9998--REDEF
VAL
     12990**DCL     13267<<CALLBLT 13268>>IF      13291>>ASSIGN
WKSZ
     13001**DCL     13165<<ASSIGN  13170>>ASSIGN  13212>>ASSIGN
WK_USED
     13002**DCL     13166<<ASSIGN
WORK$
     12999**DCL     13164<<ASSIGN  13169>>ASSIGN  13211>>ASSIGN
X$PARSE
     13023**DCL-ENT 13194--CALL
