VERSION E05

PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:1    
        1        1        /*M*      NAME: KZT$3270   3270 handler VDH/LINE MANAGER Interface           */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* */
        8        8
        9        9        KZT$3270: PROC(PARM) ALTRET;
       10       10
       11       11        /* Include Files */
       12       12
       13       13        %INCLUDE CP_6_SUBS;
       14      553        %INCLUDE LCP_6;
       15     4832        %INCLUDE KH$STT;
       16     4862        %INCLUDE KH$CHN;
       17     4984        %INCLUDE KH$CLK;
       18     5354        %INCLUDE KH_CLKFNC_E;
       19     5399        %INCLUDE KHC_MAC_C;
       20     5440        %INCLUDE KL_AFCN_C;
       21     5541        %INCLUDE KL_MACRO_C;
       22     8893        %INCLUDE KL_SUPER_C;
       23    11795        %INCLUDE KV$VDH;
       24    12226        %INCLUDE KV$GLB;
       25    12645        %INCLUDE KV$USR;
       26    12957        %INCLUDE KV$GLBCTX;
       27    13402        %INCLUDE KV_GLBCNS_E;
       28    13743        %INCLUDE KV_PRMID_E;
       29    13917        %INCLUDE KV_GLB_M;
       30    14039        %INCLUDE KZ$LINCTX;
       31    14659        %INCLUDE KZ$OTPBFR;
       32    14760        %INCLUDE KZ$INPBFR;
       33    14820        %INCLUDE KZ$3270CTR;
       34    14885        %INCLUDE KZ$3270DEV;
       35    15143        %INCLUDE KZ$3270STT;
       36    15207        %INCLUDE KZ$3270FLDS;
       37    15274        %INCLUDE KZ$BSCSTT;
PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:2    
       38    15380        %INCLUDE KZ_CLM_E;
       39    15552        %INCLUDE KZ_3270_C;
       40    15710        %INCLUDE KZ_PERR_C;
       41    15792        %INCLUDE KZ_3270M_C;
       42    16649        %EJECT;
PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:3    
       43    16650        /* Parameters */
       44    16651
       45    16652    1   DCL PARM UBIN;
       46    16653
       47    16654        /* EQUs */
       48    16655
       49    16656        %KV_INPOPRX_E;
       50    16668        %KZ_3270_E;
       51    16796        %KV_USR_FNC_E;
       52    16812        %KV_USR_EVT_ID_E;
       53    16832        %KV_PRMID_E;
       54    16988        %KV_CMPCOD_E;
       55    17002        %KV_STRTYP_E;
       56    17040        %KV_PHSPSTMOD_E;
       57    17047        %KV_ABSGRPRND_E;
       58    17056        %KV#DATMOD_E;
       59    17062        %EQU QUEUE_ON_HEAD = '0'B;
       60    17063        %EQU QUEUE_ON_TAIL = '1'B;
       61    17064        %EJECT;
PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:4    
       62    17065        /* Auto */
       63    17066
       64    17067    1   DCL PARM$ PTR;                          /* Address of first parameter         */
       65    17068    1   DCL DEV$ PTR;                           /* Device context addr                */
       66    17069    1   DCL BFR$ PTR;                 /* Current KZ$OTPBFR, from KV$VDI.OTPBFR_.ADR$  */
       67    17070    1   DCL TBFR$ PTR;
       68    17071    1   DCL T$ PTR;
       69    17072    1   DCL C$ CPTR;
       70    17073    1   DCL S UBIN;
       71    17074    1   DCL PHSPST_LIN                     SBIN;
       72    17075    1   DCL TOPPAGCNT                      UBIN;
       73    17076    1   DCL ROW                            SBIN;
       74    17077    1   DCL COL                            SBIN;
       75    17078    1   DCL ROW1                           SBIN;
       76    17079    1   DCL COL1                           SBIN;
       77    17080    1   DCL COL2                           SBIN;
       78    17081    1   DCL CUR_ROW                        SBIN;
       79    17082    1   DCL CUR_COL                        SBIN;
       80    17083    1   DCL SAVE_ROW                       SBIN;
       81    17084    1   DCL SAVE_COL                       SBIN;
       82    17085    1   DCL MAX_ROW SBIN;                       /* %KV_MRD.LNG set in GET_VAL         */
       83    17086    1   DCL MAX_COL SBIN;                       /* %KV_MRD.WDT set in GET_VAL         */
       84    17087    1   DCL SZ SBIN;                            /* GET BUFFER SIZE STORAGE            */
       85    17088    1   DCL SZX SBIN;                           /* SIZE ARRARY INDEX                  */
       86    17089    1   DCL NL SBIN;                            /* NEW LINES FOR PRINTER              */
       87    17090    1   DCL I SBIN;
       88    17091    1   DCL J SBIN;
       89    17092    1   DCL K SBIN;
       90    17093    1   DCL LSTBYT UBIN;
       91    17094    1   DCL SBA_DONE BIT(1) ALIGNED;
       92    17095    1   DCL BYTX UBIN;                          /* KV$VDI.OTPBFR_.BYTX                */
       93    17096    1   DCL BYTSIZ UBIN;                        /* KV$VDI.OTPBFR_.BYTSIZ              */
       94    17097    1   DCL 1 ATTR_CHAR,
       95    17098    1         2 * BIT(2),
       96    17099    1         2 PROTECT BIT(1),
       97    17100    1         2 NUMERIC BIT(1),
       98    17101    1         2 INTENSITY UBIN(2) UNAL,
PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:5    
       99    17102    1         2 * BIT(1),
      100    17103    1         2 MDT BIT(1);
      101    17104    1   DCL ATTR_CHR REDEF ATTR_CHAR UBIN BYTE CALIGNED;
      102    17105        %KV$GRPRND (STCLASS="");
      103    17132        %KV$VDH_DCLLCLPST (STCLASS="");
      104    17201        %KH$CLK (STCLASS="");
      105    17350        %INHIBIT_DCLS;
      106    17362        %EJECT;
PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:6    
      107    17363        /* Based Structures */
      108    17364
      109    17365        %KZ$LINCTX;
      110    17796        %KZ$3270CTR;
      111    17836        %KZ$3270DEV (STCLASS="BASED(DEV$)");
      112    18015        %KZ$3270WCC (STCLASS="BASED(BFR$)",ARY="(0:0)",NAME=WCC);
      113    18041        %KZ$OTPBFR (STCLASS="BASED(BFR$)");
      114    18106        %KV$PTR;
      115    18149        %KV$VDI;
      116    18220        %KH$CHN;
      117    18344        %KV$MRD;
      118    18391        %KV$ERD;
      119    18475        %KV$USRPRM;
      120    18526        %KV$USR_OTPMRK (STCLASS="BASED(PARM$)");
      121    18588        %KV$USR_DAT (STCLASS="BASED(PARM$)");
      122    18672        %KV$USR_ERS (STCLASS="BASED(PARM$)");
      123    18776        %KV$USR_EVT (STCLASS="BASED(PARM$)");
      124    18811        %KV$USR_INPPRC (STCLASS="BASED(PARM$)");
      125    18847        %KV$USR_SETPRM (STCLASS="BASED(PARM$)");
      126    18909        %KV$USR_GETPRM (STCLASS="BASED(PARM$)");
      127    18970        %KV$USR_GETOTPBFR (STCLASS="BASED(PARM$)");
      128    19005        %KV$USR_EXTOTPTRN (STCLASS="BASED(PARM$)");
      129    19041        %KV$USR_PST (STCLASS="BASED(PARM$)");
      130    19111        %KV$USR_SETATR (STCLASS="BASED(PARM$)");
      131    19234        %KV$OTPMRK;
      132    19261
      133    19262    1   DCL BYT(0:1023) UBIN BYTE BASED CALIGNED;
      134    19263    1   DCL CHR1 CHAR(1) BASED CALIGNED;
      135    19264    1   DCL BITS(0:0) BIT(8) BASED CALIGNED;
      136    19265        %KL_3270 (STCLASS=BASED CALIGNED);
      137    19290        %EJECT;
PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:7    
      138    19291        /* External Routines */
      139    19292
      140    19293    1   DCL KVV$VDI  ENTRY(1) ALTRET;
      141    19294    1   DCL KVB$GET2NSYS ENTRY(2) ALTRET;
      142    19295    1   DCL KVB$RLS2NSYS ENTRY(2) ALTRET;
      143    19296    1   DCL KZV$DFR ENTRY(1) ALTRET;
      144    19297    1   DCL KZV$DSC ENTRY(1) ALTRET;
      145    19298    1   DCL KZV$DSC_CONT ENTRY(1) ALTRET;
      146    19299    1   DCL KZV$DSC_LINE ENTRY(1) ALTRET;
      147    19300    1   DCL KZV$RELOTPBFR ENTRY(2) ALTRET;
      148    19301    1   DCL KZV$RLSCTX ENTRY(1) ALTRET;
      149    19302    1   DCL KHC$CLOCK ENTRY(1) ALTRET;
      150    19303    1   DCL KHA$ERRLOG ENTRY(2) ALTRET;
      151    19304        %EJECT;
PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:8    
      152    19305        /* Static */
      153    19306
      154    19307    1   DCL KZ_3270XLB(0:63) BIT(8) CONSTANT SYMDEF INIT(
      155    19308    1       '40'X,'C1'X,'C2'X,'C3'X,'C4'X,'C5'X,'C6'X,'C7'X,
      156    19309    1       'C8'X,'C9'X,'4A'X,'4B'X,'4C'X,'4D'X,'4E'X,'4F'X,
      157    19310    1       '50'X,'D1'X,'D2'X,'D3'X,'D4'X,'D5'X,'D6'X,'D7'X,
      158    19311    1       'D8'X,'D9'X,'5A'X,'5B'X,'5C'X,'5D'X,'5E'X,'5F'X,
      159    19312    1       '60'X,'61'X,'E2'X,'E3'X,'E4'X,'E5'X,'E6'X,'E7'X,
      160    19313    1       'E8'X,'E9'X,'6A'X,'6B'X,'6C'X,'6D'X,'6E'X,'6F'X,
      161    19314    1       'F0'X,'F1'X,'F2'X,'F3'X,'F4'X,'F5'X,'F6'X,'F7'X,
      162    19315    1       'F8'X,'F9'X,'7A'X,'7B'X,'7C'X,'7D'X,'7E'X,'7F'X);
      163    19316    1   DCL KZ_3270XL(0:63) REDEF KZ_3270XLB UBIN BYTE CALIGNED;
      164    19317
      165    19318    1   DCL KZ_3270_BFRSIZ(0:8) UBIN CONSTANT SYMDEF INIT(
      166    19319    1       0,16,32,64,128,256,512,1024,2048);
      167    19320        %EQU KZ#MAXBFR=8;
      168    19321
      169    19322        %KZ$OTPBFR (NAME=KZ_OTPBFR,STCLASS=CONSTANT);
      170    19387        %KH$CLK (FPTN=KH_CLK_RESET,FNC=%KH#CLK_RESET,STCLASS=CONSTANT);
      171    19536
      172    19537    1   DCL KZT_THRTL_INIT UBIN CONSTANT SYMDEF INIT(1000);
      173    19538    1   DCL KZT_THRTL_UNBLK UBIN CONSTANT SYMDEF INIT(600);
      174    19539    1   DCL KZT_THRTL_BLK  UBIN CONSTANT SYMDEF INIT(2000);
      175    19540        %EJECT;
PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:9    
      176    19541        /* External Data */
      177    19542
      178    19543    1   DCL KH_INHLVL UBIN SYMREF;
      179    19544        %KV$VDH_DCLLCLPST (NAME=KV_VDH_DCLLCLPST,STCLASS=SYMREF);
      180    19613        %KV$VDH_EVT (NAME=KV_VDH_EVT_CMPOTP,STCLASS=SYMREF);
      181    19648        %KV$VDH_EVT (NAME=KV_VDH_EVT_RQSOTP,STCLASS=SYMREF);
      182    19683        %KZ_3270M_HDR (STCLASS=SYMREF);
      183    19707        %KZ$3270STT (STCLASS="BASED(KZ_3270M_HDR.STTBFR$)");
      184    20139
      185    20140        /* Macros */
      186    20141
      187    20142        %MACRO MAC_SETBUFADR;
      188    20143                IF KZ$3270DEV.MUST_SBA OR
      189    20144                  ROW ~= %KV_MRD.DVCLIN OR
      190    20145                  COL ~= %KV_MRD.DVCCLM THEN
      191    20146                DO;
      192    20147                   BFR$->BYT(BYTX)=BITBIN(%KZ#SETBUFADR); /* Order code               */
      193    20148
      194    20149                   IF ROW=MAX_ROW AND COL>MAX_COL THEN DO;
      195    20150                      ROW=1; COL=1;
      196    20151                      END;
      197    20152                   I=COL-1+((ROW-1)*MAX_COL);
      198    20153                   J=I/64;
      199    20154                   I=MOD(I,64);
      200    20155                   BFR$->BYT(BYTX+1)=KZ_3270XL(J);
      201    20156                   BFR$->BYT(BYTX+2)=KZ_3270XL(I);
      202    20157
      203    20158                   BYTX=BYTX+3;
      204    20159                   BYTSIZ = BYTSIZ-3;
      205    20160
      206    20161                   KZ$3270DEV.MUST_SBA='0'B;
      207    20162                   CALL STORE_MRD (ROW,COL);
      208    20163                   SBA_DONE = '1'B;
      209    20164                   END;
      210    20165                ELSE
      211    20166                   SBA_DONE = '0'B;
      212    20167        %MEND;
PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:10   
      213    20168
      214    20169        %MACRO MAC_GETBFR;
      215    20170                IF KZ$3270DEV.PRINTER THEN
      216    20171                   SZX=KZ$3270DEV.OTPBFRSIZ;    /* Start with largest size            */
      217    20172                ELSE
      218    20173                   SZX=%KZ#INITBFR_SIZE;        /* Start with a small buffer          */
      219    20174
      220    20175                %DISABLE(INHLVL=KH_INHLVL);
      221    20176                DO WHILE(SZX > 0);
      222    20177                   SZ=KZ_3270_BFRSIZ(SZX);      /* Size of buffer in words            */
      223    20178                   CALL KVB$GET2NSYS(SZ,TBFR$) ALTRET(NOBFR);
      224    20179                   KZ$3270STT.OTPBFRSIZ(SZX) = KZ$3270STT.OTPBFRSIZ(SZX)+1;
      225    20180                   KZ$3270STT.KHSTT.OTPBFRBYTUTL = KZ$3270STT.KHSTT.OTPBFRBYTUTL+SZ*2;
      226    20181                   GOTO GOTBFR;
      227    20182        NOBFR:     SZX = SZX -1;
      228    20183                   END;
      229    20184                %ENABLE(INHLVL=KH_INHLVL);
      230    20185                ALTRETURN;
      231    20186
      232    20187        GOTBFR:
      233    20188                %ENABLE(INHLVL=KH_INHLVL);
      234    20189        %MEND;
      235    20190        %EJECT;
PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:11   
      236    20191        /* Warning - the following AUTO cells are assumed to always contain
      237    20192           the indicated values while in this module:
      238    20193
      239    20194           DEV$        Device context
      240    20195           BFR$        KV$VDI.OTPBFR_.ADR$
      241    20196           BYTX        KV$VDI.OTPBFR_.BYTX
      242    20197           BYTSIZ      KV$VDI.OTPBFR_.BYTSIZ
      243    20198
      244    20199        Note that BFR$, BYTX and BYTSIZ are loaded upon entry (GET_VAL)
      245    20200        and stored back in KV$VDI upon exit (SET_VAL).  KV$VDI.OTPBFR_
      246    20201        should not be looked at or modified except in those two routines,
      247    20202        and in DONE.
      248    20203        */
      249    20204
      250    20205    1           PARM$=ADDR(PARM);
      251    20206    1           DEV$=%KV_VDI.USRCTX$;
      252    20207    1           KZ$3270DEV.DONE='0'B;
      253    20208    1           IF KV$USR_DAT.FNC=%KV_USR_FNC_EVT THEN
      254    20209    1              IF KV$USR_EVT.ID =%KV_USR_EVT_ID_RLSSTR THEN
      255    20210    1                 IF KV$USR_EVT.PRM=%KV_STRTYP_VDI THEN GOTO SKIP_GET;
      256    20211    1           CALL GET_VAL;
      257    20212    1   SKIP_GET: ;
      258    20213
      259    20214    2           DO CASE(KV$USR_DAT.FNC);
      260    20215        %EJECT;
PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:12   
      261    20216        /* Get output buffer -
      262    20217           VDH needs more room to insert data into our output buffers.
      263    20218           We will either expand our current buffer or start a new
      264    20219           buffer and send the current buffer  to the line manager.
      265    20220        */
      266    20221
      267    20222    2            CASE(%KV_USR_FNC_GETOTPBFR);
      268    20223
      269    20224    2              IF KZ$3270DEV.ACTIVE THEN
      270    20225    2                 CALL EXP_BFR ALTRET(NO_MEMORY); /* Expand buffer/get new one    */
      271    20226        %EJECT;
PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:13   
      272    20227        /* Erase */
      273    20228        /*
      274    20229           Erase a window on the screen - we are given the top left and
      275    20230           bottom right positions (corners) of the area to be cleared and
      276    20231           a top line offset in case the entire first line is not erased.
      277    20232        */
      278    20233
      279    20234    2            CASE(%KV_USR_FNC_ERS);
      280    20235
      281    20236    2              IF KV$USR_ERS.BGNPHSCLM=1 AND KV$USR_ERS.TOPLFT.LIN=1
      282    20237    2                AND KV$USR_ERS.BTMRHT.LIN=MAX_ROW
      283    20238    2                AND KV$USR_ERS.ENDPHSCLM=MAX_COL
      284    20239    3                AND KV$USR_ERS.BTMRHT.CLM=MAX_COL THEN DO;
      285    20240    3                 CALL CLEAR ALTRET(NO_MEMORY); /* Clear entire screen            */
      286    20241    3                 GOTO XIT;
      287    20242    3                 END;
      288    20243
      289    20244    2              SAVE_ROW=%KV_MRD.DVCLIN;
      290    20245    2              SAVE_COL=%KV_MRD.DVCCLM;
      291    20246    2              CALL ERSWNDW(KV$USR_ERS.TOPLFT.LIN,
      292    20247    2                KV$USR_ERS.TOPLFT.CLM,
      293    20248    2                KV$USR_ERS.BTMRHT.LIN,
      294    20249    2                KV$USR_ERS.BTMRHT.CLM,
      295    20250    2                KV$USR_ERS.BGNPHSCLM,
      296    20251    2                KV$USR_ERS.ENDPHSCLM) ALTRET(NO_MEMORY);
      297    20252
      298    20253    2              IF NOT KV$USR_ERS.NO_RE_PST THEN
      299    20254    3              DO;
      300    20255    3                 ROW=SAVE_ROW;
      301    20256    3                 COL=SAVE_COL;
      302    20257    3                 CALL SETBUFADR       /* Move back to where VDH thinks we are    */
      303    20258    3                   ALTRET(NO_MEMORY);
      304    20259    3                 END;
      305    20260
      306    20261        %EJECT;
PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:14   
      307    20262        /* Getprm */
      308    20263        /*
      309    20264          Get parameters
      310    20265        */
      311    20266
      312    20267    2            CASE(%KV_USR_FNC_GETPRM);
      313    20268
      314    20269    2              IF KV$USR_GETPRM.PRMID = %KV_PRMID_CRTLINSPD THEN
      315    20270    2                 KV$USR_GETPRM.VAL = KZ$3270DEV.CTR$ -> KZ$3270CTR.LIN$ ->
      316    20271    2                   KZ$LINCTX.CHN$ -> KH$CHN.LINSPD;
      317    20272        %EJECT;
PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:15   
      318    20273        /*
      319    20274        SETPRM - MASTER REAL DEVICE LENGTH AND WIDTH
      320    20275           We will get preprocessing on VDH set params and if the parameters
      321    20276           being set are the device width or length, we may want to override
      322    20277           VDH. This will be done when the virtual device interface pointer
      323    20278           is nill.
      324    20279        */
      325    20280
      326    20281    2            CASE(%KV_USR_FNC_SETPRM);
      327    20282
      328    20283    3              DO CASE(KV$USR_SETPRM.PRMID);
      329    20284
      330    20285    3               CASE(%KV_PRMID_MRDWDT);
      331    20286    3                 IF KZ$3270DEV.VDI$ = ADDR(NIL) THEN
      332    20287    3                    KV$USR_SETPRM.VAL = KZ$3270DEV.COLS;
      333    20288    3                 ELSE
      334    20289    3                    IF NOT KZ$3270DEV.PRINTER AND
      335    20290    3                      ( KV$USR_SETPRM.VAL ~= 40 AND
      336    20291    3                      KV$USR_SETPRM.VAL ~= 80 AND
      337    20292    3                      KV$USR_SETPRM.VAL ~= 132 ) THEN
      338    20293    3                       GOTO ABRTPRM;
      339    20294
      340    20295    3               CASE(%KV_PRMID_MRDLNG);
      341    20296    3                 IF KZ$3270DEV.VDI$ = ADDR(NIL) THEN
      342    20297    3                    IF KZ$3270DEV.PRINTER THEN
      343    20298    3                       KV$USR_SETPRM.VAL = 0;
      344    20299    3                    ELSE
      345    20300    3                       KV$USR_SETPRM.VAL = KZ$3270DEV.ROWS;
      346    20301    3                 ELSE
      347    20302    3                    IF NOT KZ$3270DEV.PRINTER AND ( KV$USR_SETPRM.VAL = 0
      348    20303    3                      OR KV$USR_SETPRM.VAL > 43 ) THEN
      349    20304    3                       GOTO ABRTPRM;
      350    20305
      351    20306    3               CASE(%KV_PRMID_SCROLL,%KV_PRMID_DEVSCROLL);
      352    20307
      353    20308    3   ABRTPRM:      GOTO ALTRTN;
      354    20309
PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:16   
      355    20310    3               CASE(%KV_PRMID_3270);
      356    20311
      357    20312    3                 C$ = PINCRC(KV$USR_SETPRM.VAL_.ADR$,
      358    20313    3                   KV$USR_SETPRM.VAL_.BYTX);
      359    20314
      360    20315    3                 KZ$3270DEV.PRO.FF = C$->KL_3270.FRMFED;
      361    20316
      362    20317    3                 I = C$->KL_3270.DVCBFRSIZ;
      363    20318    4                 DO J = %KZ#MAXBFR DOWNTO 1 BY -1;
      364    20319    5                    IF I>=KZ_3270_BFRSIZ(J)*2 THEN DO;
      365    20320    5                       KZ$3270DEV.OTPBFRSIZ=J;
      366    20321    5                       GOTO BFRSIZ_SET;
      367    20322    5                       END;
      368    20323    4                    END;
      369    20324    3   BFRSIZ_SET:   ;
      370    20325
      371    20326    4                 DO CASE (BITBIN(C$->KL_3270.EWALT#));
      372    20327    4                  CASE (0);                /* NO                                 */
      373    20328    4                    KZ$3270DEV.PRO.EWALT='0'B;
      374    20329    4                  CASE (2);                /* YES                                */
      375    20330    5                    IF KZ$3270DEV.PRO.EWALT='0'B THEN DO;
      376    20331    5                       KZ$3270DEV.PRO.EWALT='1'B;
      377    20332    5                       CALL CLEAR ALTRET(NO_MEMORY);
      378    20333    5                       END;
      379    20334    4                  END;
      380    20335
      381    20336    3               END;                        /* CASE                               */
      382    20337
      383    20338        %EJECT;
PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:17   
      384    20339        /* Output marker */
      385    20340        /*
      386    20341              Output Marker Request - copy control data from VDH and hang on
      387    20342              to the control data until the line manager says the real data
      388    20343              has been recieved by the device, at which time KV$VDH_OTPMRK
      389    20344              will be called to notify the other end point of completion.
      390    20345
      391    20346              Calculate word size of the buffer needed to hold the control
      392    20347              data and add number of words needed to create the KZ$OTPMRK
      393    20348              structure.
      394    20349
      395    20350        */
      396    20351    2            CASE(%KV_USR_FNC_OTPMRK);
      397    20352
      398    20353
      399    20354    2              IF BFR$=ADDR(NIL) THEN
      400    20355    2                 CALL EXP_BFR ALTRET(NO_MEMORY); /* Must have output buffer      */
      401    20356
      402    20357    3              IF NOT KV$USR_OTPMRK.DAT.MSTRTR AND KZ$OTPBFR.MRKCNT~=0 THEN DO;
      403    20358    3                 T$=PINCRW(BFR$,KZ_3270_BFRSIZ(KZ$OTPBFR.BFRSIZ)-SIZEW(KV$OTPMRK));
      404    20359    4                 IF NOT T$->KV$OTPMRK.MSTRTR THEN DO;
      405    20360    4                    T$->KV$OTPMRK=KV$USR_OTPMRK.DAT;
      406    20361    4                    GOTO XIT;
      407    20362    4                    END;
      408    20363    3                 END;
      409    20364
      410    20365    2              IF BYTSIZ<SIZEW(KV$OTPMRK)*2 THEN
      411    20366    2                 CALL EXP_BFR ALTRET(NO_MEMORY); /* Make room for marker         */
      412    20367
      413    20368    2              KZ$OTPBFR.MRKCNT=KZ$OTPBFR.MRKCNT+1;
      414    20369    2              T$=PINCRW(BFR$,KZ_3270_BFRSIZ(KZ$OTPBFR.BFRSIZ)-
      415    20370    2                SIZEW(KV$OTPMRK)*KZ$OTPBFR.MRKCNT);
      416    20371    2              T$->KV$OTPMRK=KV$USR_OTPMRK.DAT;
      417    20372    2              BYTSIZ=BYTSIZ-SIZEW(KV$OTPMRK)*2;
      418    20373
      419    20374    2              IF KV$USR_OTPMRK.CMPOTP THEN
      420    20375    3              DO;  /* Process this otpmrk thru data stream - we'll recieve
PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:18   
      421    20376                              no more data until the pipe is clear         */
      422    20377    3                 KZ$3270DEV.LSTOTPLINX = 0;  /* Save 0 bytes in the buffer
      423    20378                                                        even if its a printer BFR. */
      424    20379    3                 CALL DONE (%QUEUE_ON_TAIL) ALTRET(NO_MEMORY);
      425    20380    3                 END;
      426    20381
      427    20382        %EJECT;
PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:19   
      428    20383        /* Extended translation */
      429    20384
      430    20385    2            CASE(%KV_USR_FNC_EXTOTPTRN);
      431    20386
      432    20387    3              DO CASE(KV$USR_EXTOTPTRN.ID);
      433    20388    3               CASE(%KZ#OTPFNC_BEL);
      434    20389                    /*
      435    20390                       Since VDH does not know how to make the bell sound on
      436    20391                       3270 devices, this event allows us to insert the proper
      437    20392                       commands for him.
      438    20393                    */
      439    20394    3                 IF KZ$3270DEV.CTR$->KZ$3270CTR.LIN$->KZ$LINCTX.PRO.SLAVE THEN
      440    20395    3                    SZ = SIZEC(KZ$OTPBFR)+4;
      441    20396    3                 ELSE
      442    20397    3                    SZ = SIZEC(KZ$OTPBFR)+2;
      443    20398    3                 WCC.ALARM(SZ) = '1'B;     /* SET ALARM BIT                      */
      444    20399    3               END;
      445    20400        %EJECT;
PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:20   
      446    20401        /*   Transparent data */
      447    20402        /*   Accept a buuffer full of untranslated data to complete a transparent
      448    20403             write to the device - The data will not be converted to EBCDIC or
      449    20404             anything else, only the escape char will be placed at the begining.
      450    20405        */
      451    20406    2            CASE(%KV_USR_FNC_DAT);
      452    20407        /*  DATMOD isn't implemented by VDH yet.  Since 3270 only uses                */
      453    20408        /*  KV_USR_FNC_DAT to do transparent I/O, there's no ambiguity here.          */
      454    20409        /*         IF KV$USR_DAT.DATMOD=%KV#DATMOD_TRN THEN                           */
      455    20410        /*         DO;                                                                */
      456    20411    2              LSTBYT = KV$USR_DAT.DAT__.ADR$ -> BYT(KV$USR_DAT.DAT__.BYTX);
      457    20412    2              IF LSTBYT ~= BITBIN(%KZ#COPY) AND
      458    20413    2                LSTBYT ~= BITBIN(%KZ#ERASE_ALL_UNPROTECTED) AND
      459    20414    2                LSTBYT ~= BITBIN(%KZ#ERASE_WRITE) AND
      460    20415    2                LSTBYT ~= BITBIN(%KZ#ERASE_WRITE_ALTERNATE) AND
      461    20416    2                LSTBYT ~= BITBIN(%KZ#READ_BUFFER) AND
      462    20417    2                LSTBYT ~= BITBIN(%KZ#READ_MODIFIED) AND
      463    20418    2                LSTBYT ~= BITBIN(%KZ#READ_MODIFIED_ALL) AND
      464    20419    2                LSTBYT ~= BITBIN(%KZ#WRITE) AND
      465    20420    2                LSTBYT ~= BITBIN(%KZ#WRITE_STRUCTURED_FIELD) THEN
      466    20421    3              DO;                /* Not a legal (or desired) 3270 command code   */
      467    20422    3                 RETURN;
      468    20423    3                 END;
      469    20424
      470    20425        /*  This case was taken out for D00F when it was discovered that some         */
      471    20426        /*  (perhaps all?  perhaps all except ETX?) of these characters are really    */
      472    20427        /*  legal to send to 3270s, for things like "define print matrix", or other   */
      473    20428        /*  graphics-like stuff.  See star #26687.                                    */
      474    20429        /*            DO I = (KV$USR_DAT.DAT__.BYTX) TO                               */
      475    20430        /*              (KV$USR_DAT.DAT__.BYTX+KV$USR_DAT.DAT__.DATBYTSIZ-1);         */
      476    20431        /*               DO CASE (KV$USR_DAT.DAT__.ADR$->BYT (I));                    */
      477    20432        /*                                  \*    SOH STX ETX ITB ETB ESC ENQ     *\  */
      478    20433        /*                CASE (1  ,2  ,3  ,31 ,38 ,39 ,45 );                         */
      479    20434        /*                  RETURN;                                                   */
      480    20435        /*                END;                                                        */
      481    20436        /*               END;                                                         */
      482    20437
PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:21   
      483    20438    2              KZ$3270DEV.LSTOTPLINX = 0;
      484    20439    2              CALL DONE (%QUEUE_ON_TAIL) ALTRET(NO_MEMORY);
      485    20440    2              IF BFR$=ADDR(NIL) THEN
      486    20441    2                 CALL INITBFR ALTRET(NO_MEMORY);
      487    20442    2              IF KZ$3270DEV.CTR$->KZ$3270CTR.LIN$->KZ$LINCTX.PRO.SLAVE THEN
      488    20443    2                 BYTX = SIZEC(KZ$OTPBFR) + 3;
      489    20444    2              ELSE
      490    20445    2                 BYTX = SIZEC(KZ$OTPBFR) + 1; /* Set to 1 past the escape char   */
      491    20446    2              BYTSIZ = 2 * KZ_3270_BFRSIZ(KZ$OTPBFR.BFRSIZ) - BYTX;
      492    20447        /*
      493    20448                 Old data has been sent and a new buffer initialized with just
      494    20449                 an escape character, now we'll expand that buffer until it's
      495    20450                 big enough to hold all the transparent data or if that's not
      496    20451                 possible we'll cancel the request.
      497    20452        */
      498    20453    2   CHKSIZ:
      499    20454    2              K = KV$USR_DAT.DAT__.DATBYTSIZ;
      500    20455    2              IF K >= BYTSIZ THEN
      501    20456    3              DO;
      502    20457    3                 IF KZ$3270DEV.PRINTER THEN
      503    20458    4                 DO;             /* BFR already max size - can't service request */
      504    20459    4   REL_BFR:
      505    20460    4                    T$ = BFR$;
      506    20461    4                    BFR$ = ADDR(NIL); BYTX = 0; BYTSIZ = 0;
      507    20462                         %DISABLE(INHLVL=KH_INHLVL);
      508    20466    4                    CALL KZV$RELOTPBFR(KZ$3270DEV,T$);
      509    20467                         %ENABLE(INHLVL=KH_INHLVL);
      510    20473    4                    RETURN;
      511    20474    4                    END;
      512    20475    3                 ELSE
      513    20476    4                 DO UNTIL( BYTSIZ > K );
      514    20477    4                    IF KZ$OTPBFR.BFRSIZ <= KZ$3270DEV.OTPBFRSIZ THEN
      515    20478    4                       CALL EXP_BFR ALTRET(NO_MEMORY);
      516    20479    5                    ELSE DO;               /* Can't get big enough buffer        */
      517    20480    5                       GOTO REL_BFR;
      518    20481    5                       END;
      519    20482    4                    K = KV$USR_DAT.DAT__.DATBYTSIZ;
PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:22   
      520    20483    4                    END;                   /* DO UNTIL                           */
      521    20484    3                 END;                      /* K > BYTSIZ                         */
      522    20485                 /*
      523    20486                       Move data into the output buffer and send it
      524    20487                 */
      525    20488    2              CALL INSERT(BFR$->CHR1,BYTX,K,
      526    20489    2                SUBSTR(KV$USR_DAT.DAT__.ADR$->CHR1,KV$USR_DAT.DAT__.BYTX,K));
      527    20490    2              BYTX = BYTX + K;
      528    20491    2              BYTSIZ = BYTSIZ - K;
      529    20492    2              KZ$OTPBFR.FLAGS.TRANS# = '1'B;
      530    20493    2              CALL DONE (%QUEUE_ON_TAIL) ALTRET(NO_MEMORY);
      531    20494    2              %KV_VDI.OTPBFR_.ADR$=ADDR(NIL);
      532    20495    2              %KV_VDI.OTPBFR_.BYTX=0;
      533    20496    2              %KV_VDI.OTPBFR_.BYTSIZ=0;
      534    20497    2              RETURN;                      /* Normal return                      */
      535    20498        /*            END;                      \* Transparant write              *\  */
      536    20499        %EJECT;
PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:23   
      537    20500        /* Position */
      538    20501
      539    20502    2            CASE(%KV_USR_FNC_PST);
      540    20503
      541    20504    2              PHSPST_LIN = KV$USR_PST.PHSPST.LIN;
      542    20505
      543    20506    2              IF NOT KZ$3270DEV.PRINTER THEN
      544    20507    3              DO;           /* Handle  positoning for standard display station   */
      545    20508              /*
      546    20509                Request to position device. This is done by inserting a
      547    20510                set buffer address command into the device's data stream
      548    20511              */
      549    20512
      550    20513    4                 IF KV$USR_PST.PHSPSTMOD=%KV_PHSPSTMOD_BLN THEN DO; /* Blank     */
      551    20514    4                    ROW = PHSPST_LIN;
      552    20515    4                    COL=KV$USR_PST.PHSPST.CLM-1;
      553    20516    5                    IF COL=0 THEN DO;
      554    20517    5                       ROW=ROW-1;          /* Back up to end of prev line        */
      555    20518    5                       COL=MAX_COL;
      556    20519    5                       END;
      557    20520    4                    IF ROW<%KV_MRD.DVCLIN OR
      558    20521    4                      (ROW=%KV_MRD.DVCLIN AND COL<%KV_MRD.DVCCLM) THEN
      559    20522    4                       GOTO POS_MOV;       /* Backing up - don't blank           */
      560    20523    4                    IF ROW>MAX_ROW THEN
      561    20524    4                       ROW=MAX_ROW;
      562    20525    4                    CALL ERSCUR_BLNKS ALTRET(NO_MEMORY);/* Position using blanks */
      563    20526    4                    END;
      564    20527    4                 ELSE DO;
      565    20528    4   POS_MOV:         ROW = PHSPST_LIN;
      566    20529    4                    COL=KV$USR_PST.PHSPST.CLM;
      567    20530    4                    CALL SETBUFADR ALTRET(NO_MEMORY);
      568    20531    4                    END;
      569    20532
      570    20533    3                 END;                      /* Positioning for display station.   */
      571    20534    3              ELSE DO;           /*  Handle positioning for line printer device. */
      572    20535
      573    20536    3                 CUR_ROW = %KV_MRD.DVCLIN;
PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:24   
      574    20537    3                 ROW = PHSPST_LIN;
      575    20538    3                 CUR_COL = %KV_MRD.DVCCLM;
      576    20539    3                 COL = KV$USR_PST.PHSPST.CLM;
      577    20540    3                 TOPPAGCNT = KV$USR_PST.TOPPAGCNT;
      578    20541
      579    20542           /*
      580    20543              1 - Figure out how much space in buffer is required to store
      581    20544                  the neccessary positon commands plus a new row of data.
      582    20545                  If not enough room in buffer then send current buffer and
      583    20546                  initialize a new buffer.
      584    20547              Set NL= Number of NL commands to new row.
      585    20548           */
      586    20549    3                 NL = ((TOPPAGCNT * MAX_ROW) - CUR_ROW) + ROW;
      587    20550
      588    20551    3                 IF NL > 0 THEN
      589    20552    4                 DO;                       /* We are positioning to a new line   */
      590    20553    4                    J = NL + MAX_COL + 1;
      591    20554    4                    COL2 = COL-1;          /* Num of spaces needed for filler    */
      592    20555    4                    END;
      593    20556    4                 ELSE DO;        /*  We are only changing column on current line */
      594    20557    4                    IF COL > CUR_COL THEN
      595    20558    5                    DO;          /* Move position out to right COL-CUR_COL cols  */
      596    20559    5                       J = (MAX_COL-CUR_COL) + 1;
      597    20560    5                       COL2 = COL - CUR_COL;
      598    20561    5                       END;
      599    20562    5                    ELSE DO;               /* Back space on current line         */
      600    20563    5                       J = MAX_COL + 1;
      601    20564    5                       COL2 = COL - 1;
      602    20565    5                       END;
      603    20566    4                    END;
      604    20567
      605    20568    3                 IF BFR$ = ADDR(NIL) THEN
      606    20569    3                    CALL INITBFR ALTRET(NO_MEMORY);
      607    20570
      608    20571    3                 IF J > BYTSIZ THEN   /* not enough room in buf to store data    */
      609    20572    3                    IF KZ$3270DEV.LSTOTPLINX = 0 THEN
      610    20573                             /* Our buffers are not large enough to handle the
PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:25   
      611    20574                             apparent large amount of overprint data. */
      612    20575    3                       CALL ERRLOG(%E$DATOVRFLW);
      613    20576    4                    ELSE DO;
      614    20577                   /* Send all data up to the last line to the device, copy
      615    20578                      the most recent line into a new buffer. This is incase any
      616    20579                      overprinting is to be done, it will all come out in the
      617    20580                      same data buffer.
      618    20581                       EM chan will be inserted by DONE in proper pos (BYTX) and
      619    20582                       since this is a printer device - DONE will also allocate
      620    20583                       a new buffer complete with the last line of data from
      621    20584                       VDH already stored in it .
      622    20585                    */
      623    20586
      624    20587    4                       CALL DONE (%QUEUE_ON_TAIL) ALTRET(NO_MEMORY);
      625    20588    4                       END;
      626    20589           /*
      627    20590              2 - Check if affected by a full line printed - either as the
      628    20591                  last thing printed or being printed now. A NL (new line)
      629    20592                  command cannot immediatly follow a full print line, and a
      630    20593                  full print line gives the printer an implicit NL command.
      631    20594           */
      632    20595    3                 IF CUR_COL >= MAX_COL THEN
      633    20596    4                 DO;                       /* CURRENTLY AT END OF LINE           */
      634    20597    4                    KZ$3270DEV.LSTOPR = %KZ#LSTOPR_FULL;
      635    20598    4                    NL = NL-1;             /* One less NL command is required    */
      636    20599    4                    END;
      637    20600    4                 ELSE DO;
      638    20601    4                    IF KZ$3270DEV.LSTOPR = %KZ#LSTOPR_FULL THEN
      639    20602    5                    DO;               /* LAST LINE OF OUTPUT WAS A FULL LINE     */
      640    20603    5                       KZ$3270DEV.LSTOPR = 0;
      641    20604    5                       IF CUR_COL = 1 THEN
      642    20605    6                       DO;  /* Pad with a blank to prevent NL after full line    */
      643    20606    6                          BFR$->BYT(BYTX) = %KZ#EBDC_SPACE; /* UBIN VALUE OF SPACE */
      644    20607    6                          BYTX = BYTX + 1;
      645    20608    6                          BYTSIZ = BYTSIZ-1;
      646    20609    6                          END;
      647    20610    5                       END;
PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:26   
      648    20611    4                    END;
      649    20612           /*
      650    20613              3 - Fill in the required new line printer commands to position
      651    20614                  to the new page and row.
      652    20615           */
      653    20616    3                 IF KZ$3270DEV.PRO.FF THEN
      654    20617    4                 DO;
      655    20618    4                    IF TOPPAGCNT ~= 0 THEN /* Insert NL                          */
      656    20619    5                    DO;
      657    20620    5                       BFR$->BYT(BYTX)=BITBIN(%KZ#NEW_LINE);
      658    20621    5                       BYTX=BYTX+1;
      659    20622    5                       BYTSIZ=BYTSIZ-1;
      660    20623    5                       IF CUR_ROW=MAX_ROW THEN
      661    20624    6                       DO;
      662    20625    6                          TOPPAGCNT = TOPPAGCNT - 1;
      663    20626    6                          NL=NL-1;
      664    20627    6                          END;
      665    20628    5                       END;
      666    20629    5                    DO J = 1 TO TOPPAGCNT; /* Use FORM FEED if device can use it */
      667    20630    5                       NL = (NL - MAX_ROW) + CUR_ROW -1;
      668    20631    5                       BFR$->BYT(BYTX) = BITBIN(%KZ#FORMFEED);
      669    20632    5                       BYTX = BYTX + 1;
      670    20633    5                       BYTSIZ = BYTSIZ - 1;
      671    20634    5                       CUR_ROW = 1;
      672    20635    5                       END;
      673    20636    4                    END;
      674    20637
      675    20638    4                 DO J = 1 TO NL;
      676    20639    4                    BFR$->BYT(BYTX) = BITBIN(%KZ#NEW_LINE);
      677    20640    4                    BYTX = BYTX + 1;
      678    20641    4                    BYTSIZ = BYTSIZ-1;
      679    20642    4                    END;
      680    20643    3                 IF NL > 0 OR TOPPAGCNT > 0 THEN
      681    20644    3                    KZ$3270DEV.LSTOTPLINX = BYTX; /* Save pos of end of last line */
      682    20645    3                 ELSE
      683    20646    3                    IF CUR_COL > COL THEN  /* BACK POSITION ON CURR LINE         */
      684    20647    4                    DO;                    /* BACKSPACE ON LINE                  */
PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:27   
      685    20648    4                       IF CUR_COL > MAX_COL THEN
      686    20649    5                       DO;
      687    20650    5                          BYTX = BYTX - 1;
      688    20651    5                          BYTSIZ = BYTSIZ + 1;
      689    20652    5                          END;
      690    20653    4                       IF KZ$3270DEV.PRO.OVRPRT.CR THEN
      691    20654    4                          BFR$ -> BYT(BYTX) = BITBIN(%KZ#CR); /* CARRIAGE RTN    */
      692    20655    4                       ELSE IF KZ$3270DEV.PRO.OVRPRT.SI THEN
      693    20656    4                             BFR$ -> BYT(BYTX) = BITBIN(%KZ#SI); /* SUPPRESS INDEX */
      694    20657    5                          ELSE DO;         /* Device not capable of over strike  */
      695    20658    5                             BFR$ -> BYT(BYTX) = BITBIN(%KZ#NEW_LINE);
      696    20659    5                             PHSPST_LIN = PHSPST_LIN + 1;
      697    20660    5                             KZ$3270DEV.LSTOTPLINX = BYTX + 1;
      698    20661    5                             END;
      699    20662    4                       BYTX = BYTX + 1;
      700    20663    4                       BYTSIZ = BYTSIZ - 1;
      701    20664    4                       END;                /* BACKSPACE ON LINE                  */
      702    20665        /*
      703    20666              4 - Space fill to specified column.
      704    20667        */
      705    20668    4                 DO J = 1 TO COL2;
      706    20669    4                    BFR$->BYT(BYTX) = %KZ#EBDC_SPACE; /* UBIN VALUE OF SPACE     */
      707    20670    4                    BYTX = BYTX + 1;
      708    20671    4                    BYTSIZ = BYTSIZ-1;
      709    20672    4                    END;
      710    20673    3                 END;                      /* Handle printer position call       */
      711    20674
      712    20675    2              %KV_MRD.DVCLIN = PHSPST_LIN;
      713    20676    2              %KV_MRD.DVCCLM=KV$USR_PST.PHSPST.CLM;
      714    20677
      715    20678        %EJECT;
PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:28   
      716    20679        /* Set attribute */
      717    20680        /*
      718    20681           VDH asking us to set device attributes for a particular field.
      719    20682           This is done by inserting a start field command into the data
      720    20683           stream followed by the attribute byte. We may change display
      721    20684           intensity, make it write protected, make it numeric only and
      722    20685           make it selector pen dectectable, all by seting bits in the
      723    20686           attribute character.
      724    20687        */
      725    20688    2            CASE(%KV_USR_FNC_SETATR);
      726    20689
      727    20690    3              IF NOT KZ$3270DEV.PRINTER THEN DO;
      728    20691
      729    20692                      %KV$CMPOTP; /*N* TEMP UNTIL VDH FIXED */
             20697    4           IF KV$PTR.VDI$->KV$VDI.OTPCNDPND THEN DO;
             20698    4              CALL KVV$VDI(KV_VDH_EVT_CMPOTP);
             20699    4              END;                         /* END IF                             */
      730    20701    3                 CALL GET_VAL;        /*N* TEMP */
      731    20702
      732    20703    3                 ATTR_CHAR='0'B;
      733    20704
      734    20705    3                 IF KV$USR_SETATR.QLF.PRTGRD OR KV$USR_SETATR.QLF.PRT OR
      735    20706    3                   KV$USR_SETATR.QLF.CNS THEN
      736    20707    3                    ATTR_CHAR.PROTECT='1'B;
      737    20708
      738    20709    3                 KV$GRPRND=KV$USR_SETATR.GRPRND;
      739    20710    3                 CALL SETATR;
      740    20711
      741    20712    3                 IF KV$USR_SETATR.QLF.ACPNMR THEN
      742    20713    3                    ATTR_CHAR.NUMERIC='1'B;
      743    20714
      744    20715    3                 IF KV$USR_SETATR.RTRDAT THEN
      745    20716    3                    ATTR_CHAR.MDT = '1'B;
      746    20717
      747    20718    3                 ROW=KV$USR_SETATR.PHSPST.LIN;
      748    20719    3                 COL=KV$USR_SETATR.PHSPST.CLM;
      749    20720    3                 IF KV$USR_SETATR.DLTFLD THEN
PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:29   
      750    20721    4                 DO;
      751    20722    4                    CALL CHK_BFR_SIZ(4) ALTRET(NO_MEMORY);
      752    20723    4                    CALL SETBUFADR_NCHK;
      753    20724    4                    CALL STORE_MRD(ROW,COL+1);
      754    20725    4                    BFR$->BYT(BYTX)=BITBIN(%KZ#NULL);
      755    20726    4                    BYTX=BYTX+1;
      756    20727    4                    BYTSIZ=BYTSIZ-1;
      757    20728    4                    GOTO XIT;
      758    20729    4                    END;
      759    20730    3                 CALL ATTR ALTRET(NO_MEMORY);
      760    20731
      761    20732    3                 END;
      762    20733
      763    20734        %EJECT;
PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:30   
      764    20735        /* Input Procedure */
      765    20736
      766    20737    2            CASE(%KV_USR_FNC_INPPRC);
      767    20738
      768    20739    2              IF KV$USR_INPPRC.ID=%KZ#3270INPPRC_SBA1 THEN
      769    20740    2                 KZ$3270DEV.SBA=BINBIT(ASCBIN(KV$USR_INPPRC.ORGCHR),8);
      770    20741    3              ELSE DO;
      771    20742    3                 I=BITBIN(KZ$3270DEV.SBA&'3F'X)*64+BITBIN(BINBIT(ASCBIN(KV$USR_INPPRC.
             20742                          ORGCHR),8)&'3F'X);
      772    20743    3                 KV$VDH_DCLLCLPST=KV_VDH_DCLLCLPST;
      773    20744    3                 KV$VDH_DCLLCLPST.PHSPST.LIN=(I/MAX_COL)+1;
      774    20745    3                 KV$VDH_DCLLCLPST.PHSPST.CLM=MOD(I,MAX_COL)+1;
      775    20746    3                 CALL KVV$VDI(KV$VDH_DCLLCLPST);
      776    20747    3                 RETURN;
      777    20748    3                 END;
      778    20749        %EJECT;
PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:31   
      779    20750        /* Event */
      780    20751
      781    20752    2            CASE(%KV_USR_FNC_EVT);
      782    20753                  /*
      783    20754                    The following do case is used to inform the handler when
      784    20755                    certain events happen in VDH that we are interested in
      785    20756                    because it means some action is required in behalf of
      786    20757                    the device. Such as VDH return to path mngt which is
      787    20758                    a signal that we may send any pending output buffers to the
      788    20759                    device.
      789    20760                  */
      790    20761        %EJECT;
PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:32   
      791    20762    3              DO CASE(KV$USR_EVT.ID);
      792    20763
      793    20764        /* Event - Delete output */
      794    20765
      795    20766    3               CASE(%KV_USR_EVT_ID_DLTOTP);
      796    20767
      797    20768    3                 CALL DONE (%QUEUE_ON_TAIL) ALTRET(NO_MEMORY);
      798    20769    3                 IF KZ$3270DEV.OTPHD$~=ADDR(NIL) THEN
      799    20770    4                 DO;                       /* DELETE PENDING OUTPUT              */
      800    20771                         %DISABLE(INHLVL=KH_INHLVL);
      801    20775    5                    DO WHILE(KZ$3270DEV.OTPHD$~=ADDR(NIL));
      802    20776    5                       T$=KZ$3270DEV.OTPHD$;
      803    20777    5                       KZ$3270DEV.OTPHD$=T$->KZ$OTPBFR.LNK$;
      804    20778    5                       IF KZ$3270DEV.OTPHD$=ADDR(NIL) THEN
      805    20779    5                          KZ$3270DEV.OTPTL$=ADDR(NIL);
      806    20780    5                       T$->KZ$OTPBFR.CMPCOD=%KV_CMPCOD_DLT;
      807    20781    5                       CALL KZV$RELOTPBFR(KZ$3270DEV,T$);
      808    20782    5                       END;
      809    20783    4                    KV$USR_EVT.ACT='1'B;
      810    20784    4                    KZ$3270DEV.KBDLCK='1'B; /* Assume keybrd left locked         */
      811    20785                         %ENABLE(INHLVL=KH_INHLVL);
      812    20791    4                    END;
      813    20792    3                 ELSE GOTO ALTRTN;
      814    20793
      815    20794        %EJECT;
PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:33   
      816    20795        /* Event - Disconnect */
      817    20796
      818    20797    3               CASE(%KV_USR_EVT_ID_DSC);
      819    20798
      820    20799    3                 IF %KV_VDI.SSNCNT > 1 THEN RETURN;
      821    20800    3                 IF NOT KZ$3270DEV.DSC THEN
      822    20801    4                 DO;
      823    20802                         %DISABLE(INHLVL=KH_INHLVL);
      824    20806    4                    KZ$3270DEV.DSC.INT='1'B;
      825    20807    4                    KZ$3270DEV.DSC.TOLD_VDH='1'B;
      826    20808    4                    CALL KZV$DSC(KZ$3270DEV);
      827    20809                         %ENABLE(INHLVL=KH_INHLVL);
      828    20815    4                    END;
      829    20816    3                 RETURN;         /* Dont't do SET_VAL - may have been re-entered */
      830    20817
      831    20818        %EJECT;
PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:34   
      832    20819        /* Event - Halt Output */
      833    20820        /*
      834    20821              ESC H or some such was input - Halt output and await users
      835    20822              intervention. (Usually means "Enter to Go"
      836    20823        */
      837    20824    3               CASE(%KV_USR_EVT_ID_HLTOTP);
      838    20825
      839    20826    4                 IF NOT KZ$3270DEV.DSC THEN DO;
      840    20827    4                    IF BFR$=ADDR(NIL) THEN
      841    20828    4                       CALL INITBFR ALTRET(NO_MEMORY);
      842    20829    4                    IF KV$USR_EVT.PRM=0 THEN
      843    20830    4                       KZ$OTPBFR.FLAGS.HALT.PAG#='1'B;
      844    20831    4                    ELSE
      845    20832    4                       KZ$OTPBFR.FLAGS.HALT.INP#='1'B;
      846    20833    4                    IF KZ$3270DEV.CTR$->KZ$3270CTR.LIN$->KZ$LINCTX.PRO.SLAVE THEN
      847    20834    4                       SZ = SIZEC(KZ$OTPBFR)+4;
      848    20835    4                    ELSE
      849    20836    4                       SZ = SIZEC(KZ$OTPBFR)+2;
      850    20837    4                    WCC.KEYRSTR(SZ)='1'B;
      851    20838    4                    END;
      852    20839    3                 CALL DONE (%QUEUE_ON_TAIL) ALTRET(NO_MEMORY);
      853    20840
      854    20841        %EJECT;
PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:35   
      855    20842        /* Event - Logon Accept */
      856    20843
      857    20844    3               CASE(%KV_USR_EVT_ID_LGNACP);
      858    20845
      859    20846    3                 IF KZ$3270DEV.CTR$->KZ$3270CTR.LIN$->KZ$LINCTX.PRO.SLAVE THEN
      860    20847    3                    CALL SND_SLV_BFR(%KZ#3270_SLV_LGNCMP) ALTRET(NO_MEMORY);
      861    20848
      862    20849
      863    20850        %EJECT;
PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:36   
      864    20851        /* Event - Logon Reject */
      865    20852
      866    20853    3               CASE(%KV_USR_EVT_ID_LGNRJC);
      867    20854
      868    20855    3                 CALL ERRLOG (%E$LGNREJ);
      869    20856    3                 KZ$3270DEV.ACTIVE='0'B;
      870    20857
      871    20858        %EJECT;
PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:37   
      872    20859        /* Event - Release Structure */
      873    20860
      874    20861    3               CASE(%KV_USR_EVT_ID_RLSSTR);
      875    20862
      876    20863        /*
      877    20864              VDH is ready to get rid of some of our interface context.
      878    20865        */
      879    20866    4                 IF KV$USR_EVT.PRM=%KV_STRTYP_VDI THEN DO;
      880    20867                         %DISABLE(INHLVL=KH_INHLVL);
      881    20871    4                    T$=%KV_VDI.OTPBFR_.ADR$;
      882    20872    5                    IF T$~=ADDR(NIL) THEN DO;
      883    20873    5                       I=KZ_3270_BFRSIZ(T$->KZ$OTPBFR.BFRSIZ);
      884    20874    5                       %KV_VDI.OTPBFR_='0'B;
      885    20875    5                       CALL KVB$RLS2NSYS(I,T$);
      886    20876    5                       END;
      887    20877    4                    CALL KZV$RLSCTX(KZ$3270DEV);
      888    20878                         %ENABLE(INHLVL=KH_INHLVL);
      889    20884    4                    RETURN;                /* Must RETURN here - no context left */
      890    20885    4                    END;
      891    20886
      892    20887        %EJECT;
PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:38   
      893    20888        /* Event - Get Structure */
      894    20889
      895    20890    3               CASE(%KV_USR_EVT_ID_GETSTR);
      896    20891
      897    20892        %EJECT;
PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:39   
      898    20893        /* Event - Schedule */
      899    20894
      900    20895    3               CASE(%KV_USR_EVT_ID_SCH);
      901    20896
      902    20897                      %DISABLE(INHLVL=KH_INHLVL);
      903    20901    3                 IF KZ$3270DEV.DFR.CLR THEN
      904    20902    4                 DO;
      905    20903    4                    KZ$3270DEV.DFR.CLR = '0'B;
      906    20904    4                    CALL KZT$CLEARIMM(KZ$3270DEV);
      907    20905    4                    END;
      908    20906
      909    20907    3                 IF KZ$3270DEV.DFRHD$~=ADDR(NIL) THEN
      910    20908    3                    CALL KZV$DFR(KZ$3270DEV);
      911    20909
      912    20910    3                 IF KZ$3270DEV.DSC THEN
      913    20911    3                    CALL KZV$DSC_CONT(KZ$3270DEV); /* Try to continue disconnect */
      914    20912    3                 ELSE
      915    20913    3                    IF KZ$3270DEV.DSC_LATER THEN
      916    20914    4                    DO;
      917    20915    4                       KZ$3270DEV.DSC_LATER='0'B;
      918    20916    4                       CALL KZV$DSC(KZ$3270DEV);
      919    20917    4                       END;
      920    20918                      %ENABLE(INHLVL=KH_INHLVL);
      921    20924    3                 RETURN;   /* DONT WANT TO FALL THROUGH TO SET_VAL DO TO
      922    20925                                   RE-ENTRANCE PROBLEMS.                    */
      923    20926
      924    20927        %EJECT;
PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:40   
      925    20928        /* Event - VDH Exit */
      926    20929
      927    20930    3               CASE(%KV_USR_EVT_ID_VDHEXT);
      928    20931
      929    20932    3                 IF BFR$=ADDR(NIL) AND KZ$3270DEV.KBDLCK AND %KV_VDI.USRRQSDAT THEN
      930    20933    3                    CALL INITBFR ALTRET(NO_MEMORY); /* Need to send unlock       */
      931    20934    3                 IF BFR$~=ADDR(NIL) THEN
      932    20935    4                    IF NOT KZ$3270DEV.OTPBSY AND KZ$3270DEV.OTPHD$=ADDR(NIL) THEN DO;
      933    20936    4                       CALL CMP_OTP ALTRET(NO_MEMORY); /* Send current output    */
      934    20937    4                       END;
      935    20938    3                    ELSE
      936    20939    3                       KZ$3270DEV.DONE='1'B; /* Remember to send later           */
      937    20940
      938    20941        %EJECT;
PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:41   
      939    20942        /* Event - Release VDI */
      940    20943
      941    20944    3               CASE(%KV_USR_EVT_ID_RLSVDI);
      942    20945
      943    20946                      %DISABLE(INHLVL=KH_INHLVL);
      944    20950    3                 KZ$3270DEV.DSC.VDH_FINAL='1'B;
      945    20951    3                 IF KZ$3270DEV.OTPHD$~=ADDR(NIL)
      946    20952    3                   OR KZ$3270DEV.DFRHD$~=ADDR(NIL) THEN
      947    20953    4                 DO;
      948    20954                         %ENABLE(INHLVL=KH_INHLVL);
      949    20960    4                    GOTO ALTRTN;
      950    20961    4                    END;
      951    20962    3                 ELSE
      952    20963    4                 DO;
      953    20964    4                    KZ$3270DEV.DSC.DEV_FINAL='1'B;
      954    20965                         %ENABLE(INHLVL=KH_INHLVL);
      955    20971    4                    END;
      956    20972
      957    20973
      958    20974    3               END;                        /* END DO CASE(event-id)              */
      959    20975
      960    20976    2            END;                           /* DO CASE                            */
      961    20977        %EJECT;
PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:42   
      962    20978    1   XIT:
      963    20979    1           IF KV$USR_DAT.FNC=%KV_USR_FNC_EVT THEN
      964    20980    1              IF KV$USR_EVT.ID =%KV_USR_EVT_ID_RLSSTR THEN
      965    20981    1                 IF KV$USR_EVT.PRM=%KV_STRTYP_VDI THEN GOTO SKIP_SET;
      966    20982    1           CALL SET_VAL;
      967    20983    1   SKIP_SET:
      968    20984    1           RETURN;
      969    20985
      970    20986    1   ALTRTN:
      971    20987    1           IF KV$USR_DAT.FNC=%KV_USR_FNC_EVT THEN
      972    20988    1              IF KV$USR_EVT.ID =%KV_USR_EVT_ID_RLSSTR THEN
      973    20989    1                 IF KV$USR_EVT.PRM=%KV_STRTYP_VDI THEN GOTO ALT_SKIP_SET;
      974    20990    1           CALL SET_VAL;
      975    20991    1   ALT_SKIP_SET:
      976    20992    1           ALTRETURN;
      977    20993
      978    20994    1   NO_MEMORY:
      979    20995    1           CALL ERRLOG(%E$NO_MEMORY);
      980    20996    1           CALL KZV$DSC_LINE(KZ$3270DEV.CTR$->KZ$3270CTR.LIN$->KZ$LINCTX);
      981    20997    1           BYTSIZ = 0;
      982    20998    1           GOTO XIT;
      983    20999        %EJECT;
PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:43   
      984    21000    1   SETATR: PROC;
      985    21001    2           IF KV$GRPRND.HDN THEN
      986    21002    2              ATTR_CHAR.INTENSITY=%KZ#ATTR_HIDDEN;
      987    21003    2           ELSE
      988    21004    2              IF KV$GRPRND.INCINT THEN
      989    21005    2                 ATTR_CHAR.INTENSITY=%KZ#ATTR_HIGH;
      990    21006    2              ELSE
      991    21007    2                 IF KV$GRPRND.DCRINT THEN
      992    21008    2                    ATTR_CHAR.INTENSITY=%KZ#ATTR_LOW_NO_PEN;
      993    21009    2           RETURN;
      994    21010    2   END SETATR;
      995    21011        %EJECT;
PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:44   
      996    21012        /* KZT$CLEAR - Called from device manager to clear screen */
      997    21013
      998    21014    1   KZT$CLEAR: ENTRY(PARM)ALTRET;
      999    21015    1           DEV$=ADDR(PARM);
     1000    21016    1           CALL GET_VAL;
     1001    21017    1           CALL CLEAR ALTRET(NO_MEMORY);
     1002    21018    1           CALL SET_VAL;
     1003    21019    1           RETURN;
     1004    21020        %EJECT;
PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:45   
     1005    21021        /* KZT$CLEARIMM - Chain a CLEAR on the head of the output queue */
     1006    21022
     1007    21023    1   KZT$CLEARIMM: ENTRY(PARM)ALTRET;
     1008    21024
     1009    21025    1           DEV$=ADDR(PARM);
     1010    21026    1           BFR$=ADDR(NIL);
     1011    21027    1           CALL CLEAR ALTRET(NO_MEMORY);
     1012    21028    1           KZ$3270DEV.KBDLCK='0'B;
     1013    21029    1           CALL DONE(%QUEUE_ON_HEAD) ALTRET(NO_MEMORY);
     1014    21030                /* KZ$3270DEV.KBDLCK will be set back to '1'B after our
     1015    21031                   caller has exited VDH; otherwise, DONE will build an
     1016    21032                   extra block to send WCC.KEYRSTR. */
     1017    21033    1           RETURN;
     1018    21034        %EJECT;
PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:46   
     1019    21035        /* KZT$CMPOTP - Call VDH for CMPOTP */
     1020    21036
     1021    21037    1   KZT$CMPOTP: ENTRY(PARM)ALTRET;
     1022    21038
     1023    21039    1           DEV$=ADDR(PARM);
     1024    21040    1           CALL GET_VAL;
     1025    21041    1           CALL CMP_OTP ALTRET(NO_MEMORY);
     1026    21042    1           CALL SET_VAL;
     1027    21043    1           RETURN;
     1028    21044        %EJECT;
PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:47   
     1029    21045        /* KZT$SNDSLV - Send an order to PASSTHRU */
     1030    21046
     1031    21047    1   KZT$SNDSLV: ENTRY(PARM)ALTRET;
     1032    21048
     1033    21049    1           DEV$=ADDR(PARM);
     1034    21050    1           CALL GET_VAL;
     1035    21051    1           CALL SND_SLV_BFR(%KZ#3270_SLV_LGFCMP) ALTRET(NO_MEMORY);
     1036    21052    1           RETURN;
     1037    21053        %EJECT;
PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:48   
     1038    21054        /* DONE - Package up current buffer and queue it to be sent to device */
     1039    21055
     1040    21056        /*F*   NAME:    DONE
     1041    21057               PURPOSE: To take the currently being built device output buffer
     1042    21058                       for a particular 3270, and place it at the end of that
     1043    21059                       devices' output queue.
     1044    21060        */
     1045    21061        /*D*   NAME:    DONE
     1046    21062              CALL:    Via 3270 handler routines
     1047    21063              USES DATA STRUCTURES
     1048    21064                       KZ$3270CTX
     1049    21065                       KZ$OTPBFR
     1050    21066              DESCRIPTION:
     1051    21067                       A call to this routine indicates that a block is ready
     1052    21068                       to be send to the device. It is therefore placed at
     1053    21069                       the end of the device output queue by this routine.
     1054    21070        */
     1055    21071
     1056    21072    1   DONE:   PROC (QUEUE_ON_TAIL) ALTRET;
     1057    21073    2   DCL QUEUE_ON_TAIL BIT(1) ALIGNED;
     1058    21074
     1059    21075    2           IF BFR$=ADDR(NIL) THEN
     1060    21076    2              RETURN;
     1061    21077
     1062    21078    2           KZ$3270DEV.SYNCX=SIZEC(KZ$OTPBFR);
     1063    21079
     1064    21080    2           IF KZ$3270DEV.PRINTER THEN
     1065    21081    3           DO;
     1066    21082    3              IF BYTX<=SIZEC(KZ$OTPBFR)+3 THEN
     1067    21083    4              DO;
     1068    21084    4                 IF KZ$OTPBFR.MRKCNT > 0 AND KZ$3270DEV.OTPHD$ = ADDR(NIL) AND
     1069    21085    4                   NOT KZ$3270DEV.OTPBSY THEN
     1070    21086    5                 DO;                       /* RLS BUFFER                         */
     1071    21087    5                    TBFR$ = BFR$;
     1072    21088    5                    KZ$OTPBFR.FLAGS.RELOTPBFR='1'B;
     1073    21089                         %DISABLE(INHLVL=KH_INHLVL);
     1074    21093    5                    CALL KZV$RELOTPBFR(KZ$3270DEV,TBFR$);
PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:49   
     1075    21094                         %ENABLE(INHLVL=KH_INHLVL);
     1076    21100    5                    BFR$ = ADDR(NIL) ; BYTX = 0; BYTSIZ = 0;
     1077    21101    5                    END;                   /* RLS   BUFFER                       */
     1078    21102    4                 RETURN;              /* Sending empty buffer causes new-line    */
     1079    21103    4                 END;
     1080    21104    4              ELSE DO;           /* Hold on to last line of data passed by VDH   */
     1081    21105                      %MAC_GETBFR;
     1082    21137                                      /* Transfer from current buffer to new buffer   */
     1083    21138    4                 K = SIZEC(KZ$OTPBFR) + 3;
     1084    21139    4                 J=0;
     1085    21140    4                 IF KZ$3270DEV.LSTOTPLINX > 0 THEN
     1086    21141    5                 DO;                       /* Transfer data                      */
     1087    21142    5                    J = BYTX - KZ$3270DEV.LSTOTPLINX;
     1088    21143    6                    IF J > (SZ * 2) - (SIZEC(KZ$OTPBFR) + 3) THEN DO;
     1089    21144                            /* The buffer we got is too small to hold the last line
     1090    21145                               of output...disconnect due to lack of MEMory. */
     1091    21146                            %DISABLE(INHLVL=KH_INHLVL);
     1092    21150    6                       CALL KVB$RLS2NSYS(SZ,TBFR$);
     1093    21151                            %ENABLE(INHLVL=KH_INHLVL);
     1094    21157    6                       ALTRETURN;
     1095    21158    6                       END;
     1096    21159    5                    K = SIZEC(KZ$OTPBFR)+3;
     1097    21160
     1098    21161    5                    CALL INSERT(TBFR$->CHR1,K,J,
     1099    21162    5                      SUBSTR(BFR$->CHR1,KZ$3270DEV.LSTOTPLINX,J));
     1100    21163    5                    BYTX = KZ$3270DEV.LSTOTPLINX;
     1101    21164    5                    END;                   /* Transfer data                      */
     1102    21165    4                 END;       /* Save last line of printer output in new buffer    */
     1103    21166    3              LSTBYT = BFR$ -> BYT(BYTX-1); /* Save last byte of data            */
     1104    21167    3              BFR$->BYT(BYTX) = BITBIN(%KZ#EM);
     1105    21168    3              BYTX = BYTX +1;
     1106    21169    3              BYTSIZ = BYTSIZ -1;
     1107    21170    3              END;
     1108    21171    2           ELSE
     1109    21172    3              IF NOT KZ$OTPBFR.FLAGS.TRANS# THEN DO;
     1110    21173    3                 BFR$->BYT(BYTX) = BITBIN(%KZ#INSERT_CURSOR);
     1111    21174    3                 BYTX = BYTX +1;
PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:50   
     1112    21175    3                 BYTSIZ = BYTSIZ -1;
     1113    21176    3                 END;
     1114    21177
     1115    21178    2           IF NOT KZ$3270DEV.CTR$->KZ$3270CTR.LIN$->KZ$LINCTX.PRO.SLAVE THEN
     1116    21179    2              S=SIZEC(KZ$OTPBFR)+2;
     1117    21180    2           ELSE
     1118    21181    2              S=SIZEC(KZ$OTPBFR)+4;
     1119    21182    3           IF NOT KZ$OTPBFR.FLAGS.TRANS# THEN DO;
     1120    21183    4              IF KZ$3270DEV.KBDLCK AND %KV_VDI.USRRQSDAT THEN DO;
     1121    21184    4                 WCC.KEYRSTR(S)='1'B;
     1122    21185    4                 KZ$3270DEV.KBDLCK='0'B;
     1123    21186    4                 END;
     1124    21187    3              BFR$->BYT(S)=KZ_3270XL(MOD(BFR$->BYT(S),64)); /* WCC               */
     1125    21188    3              END;
     1126    21189
     1127    21190    2           KZ$OTPBFR.DATA_SIZ=BYTX-SIZEC(KZ$OTPBFR);
     1128    21191
     1129    21192        /* DISABLE while mucking with items touched by dev manager */
     1130    21193                %DISABLE(INHLVL=KH_INHLVL);
     1131    21197    2           KZ$OTPBFR.FLAGS.CNT#='1'B;      /* DATA_SIZ added to OTPBYTES         */
     1132    21198    2           KZ$3270DEV.OTPBYTES=KZ$3270DEV.OTPBYTES+KZ$OTPBFR.DATA_SIZ;
     1133    21199    2           IF KZ$3270DEV.OTPBYTES>=KZT_THRTL_BLK AND
     1134    21200    3             NOT KZ$3270DEV.THROTL THEN DO;
     1135    21201    3              KZ$3270DEV.THROTL='1'B;
     1136    21202                   %ENABLE(INHLVL=KH_INHLVL);
     1137    21208                   %KV$RQSOTP (RQSOTP=NO);
             21214    4           IF KV$PTR.VDI$->KV$VDI.RQSOTP THEN DO;
             21215    4              KV$PTR.VDI$->KV$VDI.RQSOTP = '0'B;
             21216    4              IF KV$PTR.VDI$->KV$VDI.SSNCNT>1
             21217    4              THEN CALL KVV$VDI (KV_VDH_EVT_RQSOTP);
             21218    4              END;
     1138    21226                   %DISABLE(INHLVL=KH_INHLVL);
     1139    21230    3              END;
     1140    21231
     1141    21232    3           IF NOT KZ$3270DEV.ACTIVE THEN DO;
     1142    21233    3              KZ$OTPBFR.CMPCOD=%KV_CMPCOD_DVCERR;
     1143    21234    3              T$ = BFR$;     /* NIL BFR$ pointer before release buffer call
PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:51   
     1144    21235                      to prevent looping trying to release the same buffer */
     1145    21236    3              BFR$ = ADDR(NIL); %KV_VDI.OTPBFR_.ADR$ = ADDR(NIL);
     1146    21237    3              CALL KZV$RELOTPBFR(KZ$3270DEV,T$);
     1147    21238    3              GOTO DONE_END;
     1148    21239    3              END;
     1149    21240
     1150    21241    3           IF QUEUE_ON_TAIL THEN DO;
     1151    21242                                 /* Put the buffer on the END of the device queue     */
     1152    21243    3              IF KZ$3270DEV.OTPHD$=ADDR(NIL) THEN
     1153    21244    3                 KZ$3270DEV.OTPHD$=BFR$;
     1154    21245    3              ELSE
     1155    21246    3                 KZ$3270DEV.OTPTL$->KZ$OTPBFR.LNK$=BFR$;
     1156    21247    3              KZ$3270DEV.OTPTL$=BFR$;
     1157    21248    3              END;
     1158    21249    3           ELSE DO;
     1159    21250                                 /* Put the buffer on the FRONT of the device queue   */
     1160    21251    3              IF KZ$3270DEV.OTPHD$=ADDR(NIL) THEN
     1161    21252    3                 KZ$3270DEV.OTPTL$=BFR$;
     1162    21253    3              ELSE
     1163    21254    3                 BFR$->KZ$OTPBFR.LNK$=KZ$3270DEV.OTPHD$;
     1164    21255    3              KZ$3270DEV.OTPHD$=BFR$;
     1165    21256    3              END;
     1166    21257    2           T$=KZ$3270DEV.CTR$->KZ$3270CTR.LIN$; /* Line CTX addr                 */
     1167    21258    2           T$->KZ$LINCTX.OTPCNT=T$->KZ$LINCTX.OTPCNT+1;
     1168    21259    2           IF T$->KZ$LINCTX.PRMCTBTYP=%KZ#CTBTYP_DELAY AND
     1169    21260    3             T$->KZ$LINCTX.CTB.PRM$~=ADDR(NIL) THEN DO;
     1170    21261    3              KH$CLK=KH_CLK_RESET;
     1171    21262    3              KH$CLK.PRD=0;
     1172    21263    3              KH$CLK.CTBCTX$=T$->KZ$LINCTX.CTB.PRM$;
     1173    21264    3              CALL KHC$CLOCK (KH$CLK)
     1174    21265    3              WHENALTRETURN
     1175    21266    4              DO;
     1176    21267    4                 CALL M$XXX;
     1177    21268    4                 END;
     1178    21269    3              END;
     1179    21270    2   DONE_END:
     1180    21271                %ENABLE(INHLVL=KH_INHLVL);
PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:52   
     1181    21277
     1182    21278        /*
     1183    21279           If device = printer then a buffer has been allocated above and the  last
     1184    21280           line of output data from VDH has been moved into it. Now we'll init
     1185    21281           the buffer header and tell VDH it's there.
     1186    21282        */
     1187    21283    2           IF KZ$3270DEV.PRINTER THEN
     1188    21284    3           DO;
     1189    21285    3              BFR$ = TBFR$;
     1190    21286    3              CALL INITBFRHDR;
     1191    21287              /*
     1192    21288                 If the device is not active then no sence in saving the last line
     1193    21289                 of data since its been device errored anyway.
     1194    21290              */
     1195    21291    3              IF KZ$3270DEV.ACTIVE THEN
     1196    21292    4              DO;
     1197    21293    4                 BYTX = BYTX + J;     /* J = data bytes moved from previous BFR  */
     1198    21294    4                 BYTSIZ = BYTSIZ - J;
     1199    21295    4                 IF LSTBYT ~= BITBIN(%KZ#NEW_LINE) AND
     1200    21296    4                   LSTBYT ~= BITBIN(%KZ#FORMFEED) THEN
     1201    21297    5                 DO; /* If the last byte of data to the terminal was not a new line
     1202    21298                       cmd then our phs position is off by a line. (tell VDH) */
     1203    21299    5                    %KV_MRD.DVCLIN = %KV_MRD.DVCLIN + 1;
     1204    21300    5                    %KV_MRD.DVCCLM = 1;
     1205    21301    5                    END;
     1206    21302    4                 END;
     1207    21303    3              RETURN;
     1208    21304    3              END;                         /* IF PRINTER                         */
     1209    21305    2           BFR$=ADDR(NIL);
     1210    21306    2           BYTX=0;
     1211    21307    2           BYTSIZ=0;
     1212    21308
     1213    21309    2           RETURN;
     1214    21310    2   END DONE;
     1215    21311
     1216    21312        %EJECT;
PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:53   
     1217    21313        /* INITBFR - Build and initialize a new output buffer */
     1218    21314
     1219    21315        /*F*  NAME:    INITBFR
     1220    21316              PURPOSE: To get a chunck of system memory, apply a KZ$OTPBFR
     1221    21317                       header on it then attach the buffer to the device
     1222    21318                       context block based by BREG 1.
     1223    21319        */
     1224    21320        /*D*  NAME:    INITBFR
     1225    21321              CALL:    From DONE,CHK_BFR_SIZE AND CLEAR
     1226    21322              USES DATA STRUCTURES
     1227    21323                       KZ$3270CTX
     1228    21324                       KZ$OTPBFR
     1229    21325              INPUT:   Address of device context block (B1)
     1230    21326                       A row/col position for the Set Buffer Address command
     1231    21327                       that is inserted at the beginning of the buffer.(R2)
     1232    21328              DESCRIPTION:
     1233    21329                       This routine will get an output buffer and initialize
     1234    21330                       it with header information and attache it to the
     1235    21331                       device context block.
     1236    21332        */
     1237    21333    1   INITBFR: PROC ALTRET;
     1238    21334
     1239    21335
     1240    21336        /*
     1241    21337                   GET  AN  OUTPUT  BUFFER
     1242    21338        */
     1243    21339              %MAC_GETBFR;
     1244    21371
     1245    21372    2           BFR$ = TBFR$;
     1246    21373    2   INITBFRHDR: ENTRY;                      /*    INIT BUFFER HEADER              */
     1247    21374        /*
     1248    21375              This entry supplied so that buffers may be created in other areas
     1249    21376              of the KZT module, and still be initialized with VDH and header
     1250    21377              info here. Called after PRINTER data has been transfered from
     1251    21378              one buffer to a new buffer.
     1252    21379
     1253    21380              INIT  BUFFER  HEADER WITH FLAGS AND POINTERS.
PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:54   
     1254    21381        */
     1255    21382    2           KZ$OTPBFR=KZ_OTPBFR;
     1256    21383    2           BYTX=SIZEC(KZ$OTPBFR);
     1257    21384    2           KZ$OTPBFR.BFRSIZ = SZX;
     1258    21385    2           KZ$OTPBFR.FLAGS.FIRST#='1'B;
     1259    21386    2           KZ$OTPBFR.FLAGS.LAST#='1'B;
     1260    21387    2           KZ$OTPBFR.DEV$=ADDR(KZ$3270DEV);
     1261    21388
     1262    21389
     1263    21390    3           IF KZ$3270DEV.CTR$->KZ$3270CTR.LIN$->KZ$LINCTX.PRO.SLAVE THEN DO;
     1264    21391    3              BFR$->BYT(BYTX)=KZ_3270XL(KZ$3270DEV.CTR$->KZ$3270CTR.ADR);
     1265    21392    3              BFR$->BYT(BYTX+1)=KZ_3270XL(KZ$3270DEV.ADR);
     1266    21393    3              BYTX=BYTX+2;
     1267    21394    3              END;
     1268    21395
     1269    21396    2           BFR$->BYT(BYTX)=BITBIN(%KZ#ESCAPE);
     1270    21397        /*
     1271    21398             Insert the write command as the default device command.
     1272    21399        */
     1273    21400    2           IF KZ$3270DEV.PRINTER
     1274    21401    2           THEN BFR$->BYT(BYTX+1) = BITBIN(%KZ#ERASE_WRITE);
     1275    21402    2           ELSE BFR$->BYT(BYTX+1) = BITBIN(%KZ#WRITE);
     1276    21403
     1277    21404    2           BFR$->BYT(BYTX+2) = BITBIN(%KZ#WCC_DFLT);
     1278    21405    2           IF KZ$3270DEV.PRINTER THEN
     1279    21406    3           DO;                   /* SET START PRINTER BIT IN THE WCC COMMAND     */
     1280    21407    3              BFR$->WCC.STRTPNTR(BYTX+2) = '1'B;
     1281    21408    3              KZ$3270DEV.LSTOTPLINX = 0;
     1282    21409    3              END;
     1283    21410
     1284    21411    2           BYTSIZ = (SZ * 2) - (BYTX + 4); /*
     1285    21412                     Note the BYTSIZ is decrimented by 4 - This is to account
     1286    21413                     for the Escape,CC,WCC and a byte we want to reserve at
     1287    21414                     the end of the buffer to insert an EM or Insert cursor */
     1288    21415    2           BYTX=BYTX+3;
     1289    21416    2           RETURN;
     1290    21417
PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:55   
     1291    21418    2   END INITBFR;
     1292    21419
     1293    21420        %EJECT;
PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:56   
     1294    21421        /* CHK_BFR_SIZ - Make sure there is enough room in buffer */
     1295    21422
     1296    21423        /*F*  NAME:    CHK_BFR_SIZE
     1297    21424              PURPOSE: To look at the affect that the current call will have
     1298    21425                       on the current output buffer and decide if any buffer
     1299    21426                       size modifications are in order.
     1300    21427        */
     1301    21428        /*D*  NAME:    CHK_BFR_SIZE
     1302    21429              CALL:    From ATTR,ATTRIC,CLEAR
     1303    21430              USES DATA STRUCTURES
     1304    21431                       KZ$3270CTX
     1305    21432                       KZ$OTPBFR
     1306    21433              INPUT:   Address of device context block (B1)
     1307    21434                       No. of bytes the buffer will grow (R2)
     1308    21435              DESCRIPTION:
     1309    21436                       A call to this routine will check the size that this
     1310    21437                       buffer will grow after current data is added, and
     1311    21438                       create a bigger buffer if needed. Then copy the
     1312    21439                       old buffer into the new before executing the current
     1313    21440                       command (TEXT,ATTRIBUTE,CURSOR, or CLEAR).
     1314    21441                       Previous to D00, this routine RETURNed if the current
     1315    21442                       buffer was sent off and a new one allocated (i.e., a buffer
     1316    21443                       twice as big as the current one couldn't be found), and
     1317    21444                       ALTRETURNed if the current buffer was "expanded".  It
     1318    21445                       seemed that the difference between these two conditions
     1319    21446                       was never really checked, so, for >= D00, this routine
     1320    21447                       ALTRETURNs due to lack of MEMory only.
     1321    21448         */
     1322    21449    1   CHK_BFR_SIZ: PROC(SIZ) ALTRET;
     1323    21450
     1324    21451    2   DCL SIZ UBIN;
     1325    21452    2   DCL J UBIN;
     1326    21453    2   DCL ENTR_FLG UBIN;
     1327    21454    2   DCL MOVJBYTS CHAR(J) BASED CALIGNED;
     1328    21455
     1329    21456    2           ENTR_FLG = 1;
     1330    21457    2           GOTO CHECK_SIZ;
PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:57   
     1331    21458
     1332    21459    2   CHKBFR_SETADDR: ENTRY(SIZ) ALTRET;
     1333    21460        /*  This special entry point is made such that if the buffer being
     1334    21461            check is "DONE"ed and a new buffer created, a set buf addr will
     1335    21462            be placed in the new buffer.
     1336    21463        */
     1337    21464    2           ENTR_FLG = 0;
     1338    21465    2   CHECK_SIZ:
     1339    21466    2           IF BYTSIZ >= SIZ THEN
     1340    21467    2              RETURN;
     1341    21468    2           GOTO CHECK_BUF;
     1342    21469
     1343    21470    2   EXP_BFR: ENTRY ALTRET;                  /* Force expansion or new buffer      */
     1344    21471
     1345    21472    2           ENTR_FLG = 0;
     1346    21473    2   CHECK_BUF:;
     1347    21474    2           IF BFR$=ADDR(NIL) THEN
     1348    21475    2              GOTO NEW_BFR;
     1349    21476
     1350    21477    3           IF KZ$OTPBFR.BFRSIZ < KZ$3270DEV.OTPBFRSIZ THEN DO; /* Expand         */
     1351    21478
     1352    21479    3              J=KZ_3270_BFRSIZ(KZ$OTPBFR.BFRSIZ+1);
     1353    21480                   %DISABLE(INHLVL=KH_INHLVL);
     1354    21484    3              CALL KVB$GET2NSYS(J,TBFR$)   /* Get buf 2x as big                  */
     1355    21485    3              WHENALTRETURN
     1356    21486    4              DO;
     1357    21487                      %ENABLE(INHLVL=KH_INHLVL);
     1358    21493    4                 GOTO NEW_BFR;
     1359    21494    4                 END;
     1360    21495                   %ENABLE(INHLVL=KH_INHLVL);
     1361    21501    3              KZ$3270STT.KHSTT.OTPBFRBYTUTL = KZ$3270STT.KHSTT.OTPBFRBYTUTL + J;
     1362    21502    3              KZ$3270STT.OTPBFRSIZ(KZ$OTPBFR.BFRSIZ)=KZ$3270STT.OTPBFRSIZ(KZ$OTPBFR.
             21502                       BFRSIZ)-1;
     1363    21503    3              KZ$3270STT.OTPBFRSIZ(KZ$OTPBFR.BFRSIZ+1)=KZ$3270STT.OTPBFRSIZ(KZ$OTPBFR.
             21503                       BFRSIZ+1)+1;
     1364    21504    3              TBFR$->MOVJBYTS=BFR$->MOVJBYTS; /* Copy old to new                 */
     1365    21505    4              IF KZ$OTPBFR.MRKCNT~=0 THEN DO; /* Move output markers             */
PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:58   
     1366    21506    4                 J=KZ$OTPBFR.MRKCNT*SIZEW(KV$OTPMRK)*2;
     1367    21507    4                 PINCRW(TBFR$,KZ_3270_BFRSIZ(KZ$OTPBFR.BFRSIZ+1)-(J/2))->MOVJBYTS=
     1368    21508    4                   PINCRW(BFR$,KZ_3270_BFRSIZ(KZ$OTPBFR.BFRSIZ)-(J/2))->MOVJBYTS;
     1369    21509    4                 END;
     1370    21510
     1371    21511                   %DISABLE(INHLVL=KH_INHLVL);
     1372    21515    3              CALL KVB$RLS2NSYS(KZ_3270_BFRSIZ(KZ$OTPBFR.BFRSIZ+1)/2,BFR$);
     1373    21516                   %ENABLE(INHLVL=KH_INHLVL);
     1374    21522
     1375    21523    3              BFR$=TBFR$;
     1376    21524    3              BYTSIZ=BYTSIZ+KZ_3270_BFRSIZ(KZ$OTPBFR.BFRSIZ)*2;
     1377    21525    3              KZ$OTPBFR.BFRSIZ=KZ$OTPBFR.BFRSIZ+1;
     1378    21526
     1379    21527    3              RETURN;
     1380    21528    3              END;
     1381    21529
     1382    21530    2   NEW_BFR:
     1383    21531    2           CALL DONE (%QUEUE_ON_TAIL) ALTRET(NO_MEMORY);
     1384    21532    2           IF BFR$=ADDR(NIL)
     1385    21533    2           THEN CALL INITBFR ALTRET(NO_MEMORY);
     1386    21534    2           ELSE
     1387    21535    2              IF KZ$3270DEV.PRINTER
     1388    21536    2              THEN ;
     1389    21537    2              ELSE CALL INITBFR ALTRET(NO_MEMORY);
     1390    21538    3           IF ENTR_FLG = 0 AND NOT KZ$3270DEV.PRINTER THEN DO;
             21538                    /* SBA in new buffer requested. */
     1391    21539    3              ROW = %KV_MRD.DVCLIN;
     1392    21540    3              COL = %KV_MRD.DVCCLM;
     1393    21541    3              CALL SETBUFADR_NCHK;  /* Insert set buf adr w/out doing
     1394    21542                                             CHK_BFR_SIZ call              */
     1395    21543    3              END;
     1396    21544
     1397    21545
     1398    21546    2           RETURN;
     1399    21547
     1400    21548    2   NO_MEMORY:
     1401    21549    2           ALTRETURN;
PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:59   
     1402    21550
     1403    21551    2   END CHK_BFR_SIZ;
     1404    21552
     1405    21553        %EJECT;
PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:60   
     1406    21554        /* SETBUFADR - Build SBA order */
     1407    21555
     1408    21556        /*F*  NAME:    SETBUFADR
     1409    21557              PURPOSE: To insert a SET BUFFER ADDRESS (SBA) command into the
     1410    21558                       device output stream.
     1411    21559        */
     1412    21560        /*D*  NAME:    SETBUFADR
     1413    21561              ENTRY:   SETBUFADR_NCHK
     1414    21562              CALL:    From ATTR,ATTRIC,IC
     1415    21563              USES DATA STRUCTURES
     1416    21564                       KZ$3270CTX
     1417    21565                       KZ$OTPBFR
     1418    21566              DESCRIPTION:
     1419    21567                       This routine converts the ROW/COLUMN position specified
     1420    21568                       by R2/R3 into a 3270 buffer address. Then inserts a set
     1421    21569                       buffer addr (SBA) command followed by the buffer addr.
     1422    21570                       SETBUFADR checks that there is room in the buffer
     1423    21571                       for all three bytes, SETBUFADR_NCHK does not.
     1424    21572                       The %MAC_SETBUFADR MACRO will set the AUTO variable
     1425    21573                       SBA_DONE to logical 1 or 0 depending on whether the
     1426    21574                       SBA code was actually placed in the buffer or not.
     1427    21575                       Only SETBUFADR may ALTRETURN, and only when an
     1428    21576                       out-of-memory condition was encountered by CHK_BFR_SIZ.
     1429    21577        */
     1430    21578    1   SETBUFADR: PROC ALTRET;
     1431    21579
     1432    21580
     1433    21581    2           CALL CHK_BFR_SIZ(3) ALTRET(NO_MEMORY);
     1434    21582
     1435    21583                %MAC_SETBUFADR;
     1436    21606
     1437    21607    2           RETURN;
     1438    21608
     1439    21609    2   NO_MEMORY:
     1440    21610    2           ALTRETURN;
     1441    21611
     1442    21612    2   END SETBUFADR;
PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:61   
     1443    21613
     1444    21614
     1445    21615    1   SETBUFADR_NCHK: PROC;
     1446    21616
     1447    21617
     1448    21618                %MAC_SETBUFADR;
     1449    21641
     1450    21642    2           RETURN;
     1451    21643
     1452    21644    2   END SETBUFADR_NCHK;
     1453    21645        %EJECT;
PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:62   
     1454    21646        /* ATTR - Build attribute char */
     1455    21647
     1456    21648        /*F*  NAME:    ATTR
     1457    21649              PURPOSE: To insert an attribute character (followed by the
     1458    21650                       cursor if ATTRIC is called) at the specified
     1459    21651                       row/column position.
     1460    21652        */
     1461    21653        /*D*  NAME:    ATTR
     1462    21654              CALL:    From KZT$3270
     1463    21655              USES DATA STRUCTURES
     1464    21656                       KZ$3270CTX
     1465    21657                       KZ$OTPBFR
     1466    21658              INPUT:   Address of device context block (B1)
     1467    21659                       The value of the attribute character (R4)
     1468    21660                       Device row and column (R2)
     1469    21661              DESCRIPTION:
     1470    21662                       Inserts an attribute (or start field (SF)) character
     1471    21663                       possibly followed by an insert cursor (ATTRIC)
     1472    21664                       at the position specified by row and column (R2)
     1473    21665        */
     1474    21666    1   ATTR:   PROC ALTRET;
     1475    21667
     1476    21668
     1477    21669    2           CALL CHK_BFR_SIZ(5) ALTRET(NO_MEMORY);
     1478    21670
     1479    21671    2           CALL SETBUFADR_NCHK;       /* Set buf adr w/out checking for size     */
     1480    21672    2           CALL STORE_MRD(ROW,COL+1);
     1481    21673
     1482    21674    2           BFR$->BYT(BYTX)=BITBIN(%KZ#START_FIELD);
     1483    21675    2           BFR$->BYT(BYTX+1)=KZ_3270XL(ATTR_CHR);
     1484    21676
     1485    21677    2           BYTX=BYTX+2;
     1486    21678    2           BYTSIZ=BYTSIZ-2;
     1487    21679
     1488    21680    2           RETURN;
     1489    21681
     1490    21682    2   NO_MEMORY:
PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:63   
     1491    21683    2           ALTRETURN;
     1492    21684
     1493    21685    2   END ATTR;
     1494    21686
     1495    21687        %EJECT;
PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:64   
     1496    21688    1   STORE_MRD: PROC (R,C);
     1497    21689    2   DCL R SBIN;
     1498    21690    2   DCL C SBIN;
     1499    21691    2   DCL R_MRD SBIN;
     1500    21692    2   DCL C_MRD SBIN;
     1501    21693
     1502    21694    2           R_MRD=R; C_MRD=C;
     1503    21695    2           IF C_MRD>MAX_COL THEN
     1504    21696    3           DO;
     1505    21697    3              C_MRD=1;
     1506    21698    3              R_MRD=R_MRD+1;
     1507    21699    3              END;
     1508    21700    2           IF R_MRD>MAX_ROW THEN R_MRD=1;
     1509    21701    2           %KV_MRD.DVCLIN=R_MRD;
     1510    21702    2           %KV_MRD.DVCCLM=C_MRD;
     1511    21703    2           RETURN;
     1512    21704    2   END STORE_MRD;
     1513    21705        %EJECT;
PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:65   
     1514    21706        /* IC - Insert cursor */
     1515    21707
     1516    21708        /*F*  NAME:    IC
     1517    21709              PURPOSE: To insert a "INSERT CURSOR" command into the output
     1518    21710                       buffer.
     1519    21711        */
     1520    21712        /*D*  NAME:    IC
     1521    21713              CALL:    From KZT$3270
     1522    21714              USES DATA STRUCTURES
     1523    21715                       KZ$3270CTX
     1524    21716                       KZ$OTPBFR
     1525    21717              INPUT:   Cursor position as row/column.
     1526    21718        */
     1527    21719    1   IC:     PROC ALTRET;
     1528    21720
     1529    21721
     1530    21722    2           CALL CHK_BFR_SIZ(1) ALTRET(NO_MEMORY);
     1531    21723
     1532    21724    2           BFR$->BYT(BYTX)=BITBIN(%KZ#INSERT_CURSOR);
     1533    21725    2           BYTX=BYTX+1;
     1534    21726    2           BYTSIZ=BYTSIZ-1;
     1535    21727
     1536    21728    2           RETURN;
     1537    21729
     1538    21730    2   NO_MEMORY:
     1539    21731    2           ALTRETURN;
     1540    21732
     1541    21733    2   END IC;
     1542    21734
     1543    21735        %EJECT;
PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:66   
     1544    21736        /* ERS - Erase an area on the screen */
     1545    21737        /*F*   NAME:    ERS
     1546    21738              PURPOSE: To clear a portion of the screen by using the set
     1547    21739                       buffer address command followed by Repeat address
     1548    21740                       with the null character.
     1549    21741        */
     1550    21742        /*D*   NAME:    ERS
     1551    21743              CALL:    From KZT$3270
     1552    21744              USES DATA STRUCTURES
     1553    21745                       KZ$3270CTX
     1554    21746                       KZ$OTPBFR
     1555    21747                       Address of start of clear  and
     1556    21748                       Address of end of clear.
     1557    21749        */
     1558    21750
     1559    21751    1   ERS:    PROC ALTRET;
     1560    21752
     1561    21753    2   DCL   FILLCHAR UBIN BYTE UNAL;          /* CHAR TO BE REPEATED FOR SPACING    */
     1562    21754
     1563    21755
     1564    21756    2           CALL CHK_BFR_SIZ(7) ALTRET(NO_MEMORY); /* Space for SBA,RA,null,null  */
     1565    21757
     1566    21758    2           CALL SETBUFADR_NCHK;       /* Set buf adr w/out checking for size     */
     1567    21759    2           FILLCHAR = BITBIN(%KZ#NULL);
     1568    21760
     1569    21761    2   ERS2:   ROW = ROW1; COL = COL1+1;       /* Add 1 because repeat order         */
     1570    21762                                                /* goes to addr-1                     */
     1571    21763
     1572    21764    2           CALL SETBUFADR_NCHK;       /* Set buf adr w/out checking for size     */
     1573    21765    2           IF NOT SBA_DONE THEN
     1574    21766    2              RETURN;
     1575    21767
     1576    21768    2           BFR$->BYT(BYTX-3)=BITBIN(%KZ#REPEAT_ADDRESS);
     1577    21769    2           BFR$->BYT(BYTX)=FILLCHAR;       /* Char to repeat                     */
     1578    21770    2           BYTX=BYTX+1;
     1579    21771    2           BYTSIZ = BYTSIZ-1;
     1580    21772
PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:67   
     1581    21773    2           RETURN;
     1582    21774
     1583    21775    2   ERSCUR: ENTRY ALTRET;                   /* Erase from current position        */
     1584    21776
     1585    21777    2           FILLCHAR = BITBIN(%KZ#NULL);
     1586    21778    2   ERSC:
     1587    21779    2           ROW1 = ROW;
     1588    21780    2           COL1 = COL;
     1589    21781    2           CALL CHKBFR_SETADDR(4)          /* If new buf is created, insert SBA  */
     1590    21782    2             ALTRET(NO_MEMORY);
     1591    21783    2           GOTO ERS2;
     1592    21784
     1593    21785
     1594    21786    2   ERSCUR_BLNKS: ENTRY ALTRET;   /* Erase from current position using blanks     */
     1595    21787
     1596    21788    2           FILLCHAR = %KZ#EBDC_SPACE;
     1597    21789    2           GOTO ERSC;
     1598    21790
     1599    21791    2   NO_MEMORY:
     1600    21792    2           ALTRETURN;
     1601    21793
     1602    21794    2   END ERS;
     1603    21795        %EJECT;
PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:68   
     1604    21796        /* ERSWNDW - Erase a window */
     1605    21797
     1606    21798        /*F*   NAME: ERSWNDW
     1607    21799              PURPOSE: To clear a window on the screen of the device. Co-
     1608    21800              ordinates given are the topleft and bottom right corners of
     1609    21801              of the window with an offset column number to start from on
     1610    21802              the top line of the window.
     1611    21803        */
     1612    21804        /*D*   NAME: ERSWNDW
     1613    21805              CALL: From VDH -> VDH-user REQUEST driver.
     1614    21806              USES DATA STRUCTURES:
     1615    21807                   KZ$3270CTX
     1616    21808                   KV$USR_ERS
     1617    21809              INPUT: Top left and Btmright and top line offset describing
     1618    21810                     window coordinates.
     1619    21811
     1620    21812                 ECOL       ECOL2
     1621    21813                 |          |
     1622    21814         EROW___            ____________________________
     1623    21815                 ___________|                           |
     1624    21816                 |                                      |
     1625    21817                 |                                      |
     1626    21818                 |                                      |
     1627    21819                 |                                      |
     1628    21820                 |                        ______________|
     1629    21821                 |________________________|             _____EROW1
     1630    21822                                          |             |
     1631    21823                                          ECOL3         ECOL1
     1632    21824
     1633    21825        */
     1634    21826    1   ERSWNDW: PROC(EROW,ECOL,EROW1,ECOL1,ECOL2,ECOL3) ALTRET;
     1635    21827
     1636    21828    2   DCL EROW UBIN;
     1637    21829    2   DCL ECOL UBIN;
     1638    21830    2   DCL EROW1 UBIN;
     1639    21831    2   DCL ECOL1 UBIN;
     1640    21832    2   DCL ECOL2 UBIN;
PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:69   
     1641    21833    2   DCL ECOL3 UBIN;
     1642    21834    2   DCL I UBIN;
     1643    21835
     1644    21836    2           ROW = EROW;
     1645    21837    3           IF ECOL <= 1 AND ECOL1 >= MAX_COL THEN DO;
     1646    21838                                      /* Window is entire width - do with one call    */
     1647    21839    3              COL=ECOL2; ROW1=EROW1; COL1=ECOL3;
     1648    21840    4              IF ROW1=MAX_ROW AND COL1=MAX_COL THEN DO;
     1649    21841    4                 COL1=COL1-1;
     1650    21842    4                 CALL ERS ALTRET(NO_MEMORY);
     1651    21843    4                 ROW=MAX_ROW; COL=MAX_COL;
     1652    21844    4                 ATTR_CHAR='0'B;
     1653    21845    4                 KV$GRPRND=%KV_MRD.ABSGRPRND(%KV_ABSGRPRND_OUTPUT);
     1654    21846    4                 CALL SETATR;
     1655    21847    4                 ATTR_CHAR.PROTECT='1'B;
     1656    21848    4                 CALL ATTR            /* Put protected attr at end of screen     */
     1657    21849    4                   ALTRET(NO_MEMORY);
     1658    21850    4                 END;
     1659    21851    3              ELSE
     1660    21852    3                 CALL ERS ALTRET(NO_MEMORY);
     1661    21853    3              RETURN;
     1662    21854    3              END;
     1663    21855
     1664    21856    2           I=ROW; COL=ECOL2; COL1=ECOL1;
     1665    21857    3           DO WHILE(I<=EROW1);
     1666    21858    3              ROW=I; ROW1=I;
     1667    21859    3              IF I=EROW1 THEN
     1668    21860    3                 COL1 = ECOL3;
     1669    21861    3              CALL ERS ALTRET(NO_MEMORY);
     1670    21862    3              COL=ECOL;
     1671    21863    3              I=I+1;
     1672    21864    3              END;
     1673    21865
     1674    21866    2           RETURN;
     1675    21867
     1676    21868    2   NO_MEMORY:
     1677    21869    2           ALTRETURN;
PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:70   
     1678    21870
     1679    21871    2   END ERSWNDW;
     1680    21872        %EJECT;
PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:71   
     1681    21873        /* CLEAR - Clear the screen */
     1682    21874
     1683    21875    1   CLEAR:  PROC ALTRET;
     1684    21876
     1685    21877    2           IF BFR$~=ADDR(NIL) THEN
     1686    21878    2              CALL DONE (%QUEUE_ON_TAIL) ALTRET(NO_MEMORY);
     1687    21879    2           IF BFR$=ADDR(NIL) THEN
     1688    21880    2              CALL INITBFR ALTRET(NO_MEMORY);
     1689    21881    2           ELSE
     1690    21882    2              IF KZ$3270DEV.PRINTER
     1691    21883    2              THEN ;
     1692    21884    2              ELSE CALL INITBFR ALTRET(NO_MEMORY);
     1693    21885    2           IF KZ$3270DEV.PRO.EWALT THEN
     1694    21886    2              BFR$->BYT(BYTX-2)=BITBIN(%KZ#ERASE_WRITE_ALTERNATE);
     1695    21887    2           ELSE
     1696    21888    2              BFR$->BYT(BYTX-2)=BITBIN(%KZ#ERASE_WRITE);
     1697    21889
     1698    21890    2           CALL STORE_MRD(1,1);
     1699    21891    3           IF NOT KZ$3270DEV.PRINTER THEN DO;
     1700    21892    3              ROW=MAX_ROW;
     1701    21893    3              COL=MAX_COL;
     1702    21894    3              ATTR_CHAR='0'B;
     1703    21895    3              KV$GRPRND=%KV_MRD.ABSGRPRND(%KV_ABSGRPRND_OUTPUT);
     1704    21896    3              CALL SETATR;
     1705    21897    3              ATTR_CHAR.PROTECT='1'B;
     1706    21898    3              CALL ATTR          /* Put protected attr char at end of screen     */
     1707    21899    3                ALTRET(NO_MEMORY);
     1708    21900    3              END;
     1709    21901
     1710    21902    2           KZ$OTPBFR.FLAGS.FIRST#='1'B;
     1711    21903
     1712    21904    2           RETURN;
     1713    21905
     1714    21906    2   NO_MEMORY:
     1715    21907    2           ALTRETURN;
     1716    21908
     1717    21909    2   END CLEAR;
PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:72   
     1718    21910        %EJECT;
PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:73   
     1719    21911        /* CMPOTP - Call VDH to complete output, then send output */
     1720    21912
     1721    21913    1   CMP_OTP: PROC ALTRET;
     1722    21914
     1723    21915    2           IF BFR$=ADDR(NIL) THEN
     1724    21916    2              RETURN;
     1725    21917
     1726    21918    2           CALL SET_VAL;                   /* Stuff values - may get re-entered  */
     1727    21919                %KV$CMPOTP;
             21924    3           IF KV$PTR.VDI$->KV$VDI.OTPCNDPND THEN DO;
             21925    3              CALL KVV$VDI(KV_VDH_EVT_CMPOTP);
             21926    3              END;                         /* END IF                             */
     1728    21928    2           CALL GET_VAL;
     1729    21929    2           CALL DONE (%QUEUE_ON_TAIL) ALTRET(NO_MEMORY);
     1730    21930    2           KZ$3270DEV.DONE='0'B;
     1731    21931    2           RETURN;
     1732    21932
     1733    21933    2   NO_MEMORY:
     1734    21934    2           ALTRETURN;
     1735    21935
     1736    21936    2   END CMP_OTP;
     1737    21937        %EJECT;
PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:74   
     1738    21938        /* SND_SLV_BFR - Build and send a buffer with an order for PASSTHRU */
     1739    21939
     1740    21940    1   SND_SLV_BFR: PROC(WCC) ALTRET;
     1741    21941    2   DCL WCC UBIN;
     1742    21942
     1743    21943    2           IF NOT KZ$3270DEV.ACTIVE THEN
     1744    21944    2              RETURN;
     1745    21945    2           CALL SET_VAL;
     1746    21946    2           T$=BFR$;
     1747    21947    2           SZ=KZ_3270_BFRSIZ(1);
     1748    21948                %DISABLE(INHLVL=KH_INHLVL);
     1749    21952    2           CALL KVB$GET2NSYS(SZ,TBFR$) ALTRET(NO_MEMORY);
     1750    21953    2           SZX=1;
     1751    21954    2           BFR$=TBFR$;
     1752    21955    2           CALL INITBFRHDR;           /* Shouldn't ALTRETURN for lack of MEMory  */
     1753    21956    2           BFR$->BYT(BYTX-2)=%KZ#3270_SLV_CMND;
     1754    21957    2           BFR$->BYT(BYTX-1)=WCC;
     1755    21958    2           KZ$OTPBFR.DATA_SIZ=BYTX-SIZEC(KZ$OTPBFR);
     1756    21959    2           KZ$3270DEV.OTPBYTES=KZ$3270DEV.OTPBYTES+KZ$OTPBFR.DATA_SIZ;
     1757    21960    2           KZ$OTPBFR.FLAGS.CNT#='1'B;
     1758    21961    2           IF KZ$3270DEV.OTPTL$~=ADDR(NIL) THEN
     1759    21962    2              KZ$3270DEV.OTPTL$->KZ$OTPBFR.LNK$=BFR$;
     1760    21963    2           ELSE
     1761    21964    2              KZ$3270DEV.OTPHD$=BFR$;
     1762    21965    2           KZ$3270DEV.OTPTL$=BFR$;
     1763    21966    2           KZ$3270DEV.CTR$->KZ$3270CTR.LIN$->KZ$LINCTX.OTPCNT=
     1764    21967    2             KZ$3270DEV.CTR$->KZ$3270CTR.LIN$->KZ$LINCTX.OTPCNT+1;
     1765    21968                %ENABLE(INHLVL=KH_INHLVL);
     1766    21974    2           CALL GET_VAL;
     1767    21975    2           BFR$=T$;
     1768    21976    2           CALL SET_VAL;
     1769    21977    2           RETURN;
     1770    21978    2   NO_MEMORY:
     1771    21979    2           ALTRETURN;
     1772    21980    2   END SND_SLV_BFR;
     1773    21981        %EJECT;
PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:75   
     1774    21982        /* ERRLOG */
     1775    21983    1   ERRLOG: PROC (ERROR);
     1776    21984    2   DCL ERROR UBIN;
     1777    21985        %FPT_WRSYSLOG (STCLASS="");
     1778    22080        %FPT_WRSYSLOG (FPTN=FPT@WRSYSLOG,STCLASS=CONSTANT,FCG='KZ',MID='T');
     1779    22175
     1780    22176    2           FPT_WRSYSLOG = FPT@WRSYSLOG;
     1781    22177    2           FPT_WRSYSLOG.V.TERMID = KZ$3270DEV.CTR$->KZ$3270CTR.LIN$->
     1782    22178    2             KZ$LINCTX.LINID;
     1783    22179    2           FPT_WRSYSLOG.V.ERRCODE.ERR# = ERROR;
     1784    22180    3           DO CASE (ERROR);
     1785    22181
     1786    22182    3            CASE (%E$LGNREJ);
     1787    22183        /*E* ERROR:        KZT-E$LGNREJ-7
     1788    22184             MESSAGE:      3270 device logon rejected.
     1789    22185             DESCRIPTION:  The host rejected a 3270 device logon.
     1790    22186                           V0 = Channel number.
     1791    22187                           V1/V2 = Controller/Device numbers.
     1792    22188                           V3 = Reason:
     1793    22189                                1 = No LDCTs available
     1794    22190                                    (a NETCON parameter)
     1795    22191                                2 = No route available
     1796    22192                                3 = Protocol error
     1797    22193                                4 = Unmatching generation value
     1798    22194                                5 = User rejected connection
     1799    22195                                    (NODEADMN may be out of MEMory).
     1800    22196        */
     1801    22197    3              FPT_WRSYSLOG.V.VALUES(0)=KZ$3270DEV.CTR$->KZ$3270CTR.LIN$->
     1802    22198    3                KZ$LINCTX.CHAN;
     1803    22199    3              FPT_WRSYSLOG.V.VALUES(1)=KZ$3270DEV.CTR$->KZ$3270CTR.ADR;
     1804    22200    3              FPT_WRSYSLOG.V.VALUES(2)=KZ$3270DEV.ADR;
     1805    22201    3              FPT_WRSYSLOG.V.VALUES(3)=KV$USR_EVT.PRM;
     1806    22202
     1807    22203    3            CASE (%E$DATOVRFLW);
     1808    22204        /*E* ERROR:        KZT-E$DATOVRFLW-7
     1809    22205             MESSAGE:      More overprint data than buffer will allow.
     1810    22206             DESCRIPTION:  For printers, all data for a given line must be sent
PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:76   
     1811    22207                           in the same output block.  There is too much data in
     1812    22208                           this line to be sent in one output block.
     1813    22209                           V0 = Channel number.
     1814    22210                           V1/V2 = Controller/Device numbers.
     1815    22211                           V3 = Number of bytes needed to send in this block.
     1816    22212        */
     1817    22213
     1818    22214    3              FPT_WRSYSLOG.V.VALUES(0)=KZ$3270DEV.CTR$->KZ$3270CTR.LIN$->
     1819    22215    3                KZ$LINCTX.CHAN;
     1820    22216    3              FPT_WRSYSLOG.V.VALUES(1)=KZ$3270DEV.CTR$->KZ$3270CTR.ADR;
     1821    22217    3              FPT_WRSYSLOG.V.VALUES(2)=KZ$3270DEV.ADR;
     1822    22218    3              FPT_WRSYSLOG.V.VALUES(3)=J;
     1823    22219
     1824    22220    3            CASE (%E$NO_MEMORY);
     1825    22221        /*E* ERROR:        KZT-E$NO_MEMORY-6
     1826    22222             MESSAGE:      Insufficient BISYNC MEMory (a NETCON parameter).
     1827    22223             DESCRIPTION:  A KVB call ALTRETed to indicate that BISYNC is out of
     1828    22224                           MEMory.  Since a necessary I/O buffer or device context
     1829    22225                           could not be allocated, the 3270 LINE associated
     1830    22226                           with the request has been disconnected.
     1831    22227                           V0 = Channel number.
     1832    22228                           V1/V2 = Controller/Device numbers.
     1833    22229                           V3 = Size of buffer, in words, which could not be allocated.
     1834    22230        */
     1835    22231    3              FPT_WRSYSLOG.V.VALUES(0)=KZ$3270DEV.CTR$->KZ$3270CTR.LIN$->
     1836    22232    3                KZ$LINCTX.CHAN;
     1837    22233    3              FPT_WRSYSLOG.V.VALUES(1)=KZ$3270DEV.CTR$->KZ$3270CTR.ADR;
     1838    22234    3              FPT_WRSYSLOG.V.VALUES(2)=KZ$3270DEV.ADR;
     1839    22235    3              FPT_WRSYSLOG.V.VALUES(3)=SZ;
     1840    22236
     1841    22237    3            END;
     1842    22238    2           CALL KHA$ERRLOG(FPT_WRSYSLOG);
     1843    22239    2           RETURN;
     1844    22240    2   END ERRLOG;
     1845    22241        %EJECT;
PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:77   
     1846    22242        /* SCREECH */
     1847    22243
     1848    22244    1   SCREECH: PROC;
     1849    22245    2           CALL M$XXX;
     1850    22246    2   END SCREECH;
     1851    22247        %EJECT;
PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:78   
     1852    22248        /* GET_VAL - Get various interesting values from KV$VDI that describe
     1853    22249           the current buffer */
     1854    22250
     1855    22251    1   GET_VAL: PROC;
     1856    22252
     1857    22253    2           BFR$=%KV_VDI.OTPBFR_.ADR$;
     1858    22254    2           BYTX=%KV_VDI.OTPBFR_.BYTX;
     1859    22255    2           BYTSIZ=%KV_VDI.OTPBFR_.BYTSIZ;
     1860    22256    2           MAX_ROW = %KV_MRD.LNG;
     1861    22257    2           MAX_COL = %KV_MRD.WDT;
     1862    22258    2           RETURN;
     1863    22259    2   END GET_VAL;
     1864    22260
     1865    22261
     1866    22262
     1867    22263        /* SET_VAL - Update the buffer info in KV$VDI */
     1868    22264
     1869    22265    1   SET_VAL: PROC;
     1870    22266
     1871    22267
     1872    22268        /* Make the receiver happy - he wants to see two SYNCs at least
     1873    22269           once a second. */
     1874    22270    3           IF BFR$~=ADDR(NIL) AND BYTX-KZ$3270DEV.SYNCX>=100 AND BYTSIZ>=2 THEN DO;
     1875    22271    3              BFR$->BYT(BYTX)=50;          /*SYN*/
     1876    22272    3              BFR$->BYT(BYTX+1)=50;        /*SYN*/
     1877    22273    3              BYTX=BYTX+2;
     1878    22274    3              BYTSIZ=BYTSIZ-2;
     1879    22275    3              KZ$3270DEV.SYNCX=BYTX;
     1880    22276    3              END;
     1881    22277    2           %KV_VDI.OTPBFR_.ADR$=BFR$;
     1882    22278    2           %KV_VDI.OTPBFR_.BYTX=BYTX;
     1883    22279    2           %KV_VDI.OTPBFR_.BYTSIZ=BYTSIZ;
     1884    22280    2           RETURN;
     1885    22281    2   END SET_VAL;
     1886    22282
     1887    22283    1   END KZT$3270;

PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:79   
--  Include file information  --

   KZ_3270M_C.:E05TOU  is referenced.
   KZ_PERR_C.:E05TOU  is referenced.
   KZ_3270_C.:E05TOU  is referenced.
   KZ_CLM_E.:E05TOU  is referenced.
   KV$BPC.:E05TOU  is referenced.
   KZ$BSCSTT.:E05TOU  is referenced.
   KZ$3270FLDS.:E05TOU  is referenced.
   KZ$3270STT.:E05TOU  is referenced.
   KZ$3270DEV.:E05TOU  is referenced.
   KZ$3270CTR.:E05TOU  is referenced.
   KZ$INPBFR.:E05TOU  is referenced.
   KZ$OTPBFR.:E05TOU  is referenced.
   KZ$LINCTX.:E05TOU  is referenced.
   KV_GLB_M.:E05TOU  is referenced.
   KV_PRMID_E.:E05TOU  is referenced.
   KV_GLBCNS_E.:E05TOU  is referenced.
   KV$GLBCTX.:E05TOU  is referenced.
   KV$USR.:E05TOU  is referenced.
   KV$GLB.:E05TOU  is referenced.
   KV$VDH.:E05TOU  is referenced.
   KL_SUPER_C.:E05TOU  is referenced.
   KL_MACRO_C.:E05TOU  is referenced.
   KL_AFCN_C.:E05TOU  is referenced.
   KHC_MAC_C.:E05TOU  is referenced.
   KH_CLKFNC_E.:E05TOU  is referenced.
   KH$CLK.:E05TOU  is referenced.
   KH$CHN.:E05TOU  is referenced.
   KH$STT.:E05TOU  is referenced.
   G_LCP6_E.:E05TOU  is referenced.
   GT_LCP6_M.:E05TOU  is referenced.
   KI_CP6.:E05TOU  is referenced.
   GF_LCP6_M.:E05TOU  is referenced.
   GM_LCP6_M.:E05TOU  is referenced.
   GU_LCP6_M.:E05TOU  is referenced.
   GJ_LCP6_M.:E05TOU  is referenced.
PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:80   
   GH_LCP6_M.:E05TOU  is referenced.
   LCP_6.:E05TOU  cannot be made into a system file and is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
      No diagnostics issued in procedure KZT$3270.

   Procedure KZT$3270 requires 4901 words for executable code.
   Procedure KZT$3270 requires 106 words of local(AUTO) storage.

    No errors detected in file KZT$3270.:E05TSI    .

PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:81   

 Object Unit name= KZT$3270                                   File name= KZT$3270.:E05TOU
 UTS= JUL 30 '97 03:00:18.20 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_LCP6_SYSTEM                               Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size HexSiz  Section name
    0  RoData even  UTS     84     54  KZT$3270
    1   Proc  even  none  4901   1325  KZT$3270
    2  RoData even  none     4      4  KZT$3270

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect HexLoc Primary Altret sequence   type   Parms  Name
     1      0   yes    yes     yes      Std        1  KZT$3270
     1    8CB          yes     yes      Std        1  KZT$CLEAR
     1    8E0          yes     yes      Std        1  KZT$CLEARIMM
     1    900          yes     yes      Std        1  KZT$CMPOTP
     1    915          yes     yes      Std        1  KZT$SNDSLV

  ****  Data defs  ****

 Sect HexLoc  Name                           Sect HexLoc  Name
    0      0  KZ_3270XLB                         0     20  KZ_3270_BFRSIZ
    0     3C  KZT_THRTL_INIT                     0     3D  KZT_THRTL_UNBLK
    0     3E  KZT_THRTL_BLK
PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:82   

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       2 KVB$RLS2NSYS
 yes     yes           Std       1 KZV$DSC_LINE
         yes           Std       1 KHI$DISABLE
         yes           Std       0 KHI$ENABLE
 yes     yes           Std       1 KZV$DFR
 yes     yes           Std       1 KVV$VDI
 yes     yes           Std       1 KZV$RLSCTX
 yes     yes           Std       1 KZV$DSC
 yes     yes           Std       1 KZV$DSC_CONT
 yes     yes           Std       2 KZV$RELOTPBFR
 yes     yes           Std       2 KVB$GET2NSYS
 yes     yes           Std       1 KHC$CLOCK
 yes     yes           Std       2 KHA$ERRLOG
                       nStd      0 X6A_AUTO_1
                       nStd      0 X6B_BLR
                       nStd      0 X6A_ARET
                       nStd      0 X6A_AALT

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     KV$PTR$                               KH_INHLVL                             KV_VDH_DCLLCLPST
     KV_VDH_EVT_CMPOTP                     KV_VDH_EVT_RQSOTP                     KZ_3270M_HDR
r    G$ROS$
PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:83   


        1        1        /*M*      NAME: KZT$3270   3270 handler VDH/LINE MANAGER Interface           */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* */
        8        8
        9        9        KZT$3270: PROC(PARM) ALTRET;

      9   1 000000  D380 0000 0000  xent KZT$3270        LNJ,B5   X6A_AUTO_1
          1 000003       006A 0001                       DC       106,1

       10       10
       11       11        /* Include Files */
       12       12
       13       13        %INCLUDE CP_6_SUBS;
       14      553        %INCLUDE LCP_6;
       15     4832        %INCLUDE KH$STT;
       16     4862        %INCLUDE KH$CHN;
       17     4984        %INCLUDE KH$CLK;
       18     5354        %INCLUDE KH_CLKFNC_E;
       19     5399        %INCLUDE KHC_MAC_C;
       20     5440        %INCLUDE KL_AFCN_C;
       21     5541        %INCLUDE KL_MACRO_C;
       22     8893        %INCLUDE KL_SUPER_C;
       23    11795        %INCLUDE KV$VDH;
       24    12226        %INCLUDE KV$GLB;
       25    12645        %INCLUDE KV$USR;
       26    12957        %INCLUDE KV$GLBCTX;
       27    13402        %INCLUDE KV_GLBCNS_E;
       28    13743        %INCLUDE KV_PRMID_E;
       29    13917        %INCLUDE KV_GLB_M;
       30    14039        %INCLUDE KZ$LINCTX;
       31    14659        %INCLUDE KZ$OTPBFR;
       32    14760        %INCLUDE KZ$INPBFR;
PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:84   
       33    14820        %INCLUDE KZ$3270CTR;
       34    14885        %INCLUDE KZ$3270DEV;
       35    15143        %INCLUDE KZ$3270STT;
       36    15207        %INCLUDE KZ$3270FLDS;
       37    15274        %INCLUDE KZ$BSCSTT;
       38    15380        %INCLUDE KZ_CLM_E;
       39    15552        %INCLUDE KZ_3270_C;
       40    15710        %INCLUDE KZ_PERR_C;
       41    15792        %INCLUDE KZ_3270M_C;
       42    16649        %EJECT;
PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:85   
       43    16650        /* Parameters */
       44    16651
       45    16652    1   DCL PARM UBIN;
       46    16653
       47    16654        /* EQUs */
       48    16655
       49    16656        %KV_INPOPRX_E;
       50    16668        %KZ_3270_E;
       51    16796        %KV_USR_FNC_E;
       52    16812        %KV_USR_EVT_ID_E;
       53    16832        %KV_PRMID_E;
       54    16988        %KV_CMPCOD_E;
       55    17002        %KV_STRTYP_E;
       56    17040        %KV_PHSPSTMOD_E;
       57    17047        %KV_ABSGRPRND_E;
       58    17056        %KV#DATMOD_E;
       59    17062        %EQU QUEUE_ON_HEAD = '0'B;
       60    17063        %EQU QUEUE_ON_TAIL = '1'B;
       61    17064        %EJECT;
PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:86   
       62    17065        /* Auto */
       63    17066
       64    17067    1   DCL PARM$ PTR;                          /* Address of first parameter         */
       65    17068    1   DCL DEV$ PTR;                           /* Device context addr                */
       66    17069    1   DCL BFR$ PTR;                 /* Current KZ$OTPBFR, from KV$VDI.OTPBFR_.ADR$  */
       67    17070    1   DCL TBFR$ PTR;
       68    17071    1   DCL T$ PTR;
       69    17072    1   DCL C$ CPTR;
       70    17073    1   DCL S UBIN;
       71    17074    1   DCL PHSPST_LIN                     SBIN;
       72    17075    1   DCL TOPPAGCNT                      UBIN;
       73    17076    1   DCL ROW                            SBIN;
       74    17077    1   DCL COL                            SBIN;
       75    17078    1   DCL ROW1                           SBIN;
       76    17079    1   DCL COL1                           SBIN;
       77    17080    1   DCL COL2                           SBIN;
       78    17081    1   DCL CUR_ROW                        SBIN;
       79    17082    1   DCL CUR_COL                        SBIN;
       80    17083    1   DCL SAVE_ROW                       SBIN;
       81    17084    1   DCL SAVE_COL                       SBIN;
       82    17085    1   DCL MAX_ROW SBIN;                       /* %KV_MRD.LNG set in GET_VAL         */
       83    17086    1   DCL MAX_COL SBIN;                       /* %KV_MRD.WDT set in GET_VAL         */
       84    17087    1   DCL SZ SBIN;                            /* GET BUFFER SIZE STORAGE            */
       85    17088    1   DCL SZX SBIN;                           /* SIZE ARRARY INDEX                  */
       86    17089    1   DCL NL SBIN;                            /* NEW LINES FOR PRINTER              */
       87    17090    1   DCL I SBIN;
       88    17091    1   DCL J SBIN;
       89    17092    1   DCL K SBIN;
       90    17093    1   DCL LSTBYT UBIN;
       91    17094    1   DCL SBA_DONE BIT(1) ALIGNED;
       92    17095    1   DCL BYTX UBIN;                          /* KV$VDI.OTPBFR_.BYTX                */
       93    17096    1   DCL BYTSIZ UBIN;                        /* KV$VDI.OTPBFR_.BYTSIZ              */
       94    17097    1   DCL 1 ATTR_CHAR,
       95    17098    1         2 * BIT(2),
       96    17099    1         2 PROTECT BIT(1),
       97    17100    1         2 NUMERIC BIT(1),
       98    17101    1         2 INTENSITY UBIN(2) UNAL,
PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:87   
       99    17102    1         2 * BIT(1),
      100    17103    1         2 MDT BIT(1);
      101    17104    1   DCL ATTR_CHR REDEF ATTR_CHAR UBIN BYTE CALIGNED;
      102    17105        %KV$GRPRND (STCLASS="");
      103    17132        %KV$VDH_DCLLCLPST (STCLASS="");
      104    17201        %KH$CLK (STCLASS="");
      105    17350        %INHIBIT_DCLS;
      106    17362        %EJECT;
PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:88   
      107    17363        /* Based Structures */
      108    17364
      109    17365        %KZ$LINCTX;
      110    17796        %KZ$3270CTR;
      111    17836        %KZ$3270DEV (STCLASS="BASED(DEV$)");
      112    18015        %KZ$3270WCC (STCLASS="BASED(BFR$)",ARY="(0:0)",NAME=WCC);
      113    18041        %KZ$OTPBFR (STCLASS="BASED(BFR$)");
      114    18106        %KV$PTR;
      115    18149        %KV$VDI;
      116    18220        %KH$CHN;
      117    18344        %KV$MRD;
      118    18391        %KV$ERD;
      119    18475        %KV$USRPRM;
      120    18526        %KV$USR_OTPMRK (STCLASS="BASED(PARM$)");
      121    18588        %KV$USR_DAT (STCLASS="BASED(PARM$)");
      122    18672        %KV$USR_ERS (STCLASS="BASED(PARM$)");
      123    18776        %KV$USR_EVT (STCLASS="BASED(PARM$)");
      124    18811        %KV$USR_INPPRC (STCLASS="BASED(PARM$)");
      125    18847        %KV$USR_SETPRM (STCLASS="BASED(PARM$)");
      126    18909        %KV$USR_GETPRM (STCLASS="BASED(PARM$)");
      127    18970        %KV$USR_GETOTPBFR (STCLASS="BASED(PARM$)");
      128    19005        %KV$USR_EXTOTPTRN (STCLASS="BASED(PARM$)");
      129    19041        %KV$USR_PST (STCLASS="BASED(PARM$)");
      130    19111        %KV$USR_SETATR (STCLASS="BASED(PARM$)");
      131    19234        %KV$OTPMRK;
      132    19261
      133    19262    1   DCL BYT(0:1023) UBIN BYTE BASED CALIGNED;
      134    19263    1   DCL CHR1 CHAR(1) BASED CALIGNED;
      135    19264    1   DCL BITS(0:0) BIT(8) BASED CALIGNED;
      136    19265        %KL_3270 (STCLASS=BASED CALIGNED);
      137    19290        %EJECT;
PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:89   
      138    19291        /* External Routines */
      139    19292
      140    19293    1   DCL KVV$VDI  ENTRY(1) ALTRET;
      141    19294    1   DCL KVB$GET2NSYS ENTRY(2) ALTRET;
      142    19295    1   DCL KVB$RLS2NSYS ENTRY(2) ALTRET;
      143    19296    1   DCL KZV$DFR ENTRY(1) ALTRET;
      144    19297    1   DCL KZV$DSC ENTRY(1) ALTRET;
      145    19298    1   DCL KZV$DSC_CONT ENTRY(1) ALTRET;
      146    19299    1   DCL KZV$DSC_LINE ENTRY(1) ALTRET;
      147    19300    1   DCL KZV$RELOTPBFR ENTRY(2) ALTRET;
      148    19301    1   DCL KZV$RLSCTX ENTRY(1) ALTRET;
      149    19302    1   DCL KHC$CLOCK ENTRY(1) ALTRET;
      150    19303    1   DCL KHA$ERRLOG ENTRY(2) ALTRET;
      151    19304        %EJECT;
PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:90   
      152    19305        /* Static */
      153    19306
      154    19307    1   DCL KZ_3270XLB(0:63) BIT(8) CONSTANT SYMDEF INIT(
      155    19308    1       '40'X,'C1'X,'C2'X,'C3'X,'C4'X,'C5'X,'C6'X,'C7'X,
      156    19309    1       'C8'X,'C9'X,'4A'X,'4B'X,'4C'X,'4D'X,'4E'X,'4F'X,
      157    19310    1       '50'X,'D1'X,'D2'X,'D3'X,'D4'X,'D5'X,'D6'X,'D7'X,
      158    19311    1       'D8'X,'D9'X,'5A'X,'5B'X,'5C'X,'5D'X,'5E'X,'5F'X,
      159    19312    1       '60'X,'61'X,'E2'X,'E3'X,'E4'X,'E5'X,'E6'X,'E7'X,
      160    19313    1       'E8'X,'E9'X,'6A'X,'6B'X,'6C'X,'6D'X,'6E'X,'6F'X,
      161    19314    1       'F0'X,'F1'X,'F2'X,'F3'X,'F4'X,'F5'X,'F6'X,'F7'X,
      162    19315    1       'F8'X,'F9'X,'7A'X,'7B'X,'7C'X,'7D'X,'7E'X,'7F'X);
      163    19316    1   DCL KZ_3270XL(0:63) REDEF KZ_3270XLB UBIN BYTE CALIGNED;
      164    19317
      165    19318    1   DCL KZ_3270_BFRSIZ(0:8) UBIN CONSTANT SYMDEF INIT(
      166    19319    1       0,16,32,64,128,256,512,1024,2048);
      167    19320        %EQU KZ#MAXBFR=8;
      168    19321
      169    19322        %KZ$OTPBFR (NAME=KZ_OTPBFR,STCLASS=CONSTANT);
      170    19387        %KH$CLK (FPTN=KH_CLK_RESET,FNC=%KH#CLK_RESET,STCLASS=CONSTANT);
      171    19536
      172    19537    1   DCL KZT_THRTL_INIT UBIN CONSTANT SYMDEF INIT(1000);
      173    19538    1   DCL KZT_THRTL_UNBLK UBIN CONSTANT SYMDEF INIT(600);
      174    19539    1   DCL KZT_THRTL_BLK  UBIN CONSTANT SYMDEF INIT(2000);
      175    19540        %EJECT;
PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:91   
      176    19541        /* External Data */
      177    19542
      178    19543    1   DCL KH_INHLVL UBIN SYMREF;
      179    19544        %KV$VDH_DCLLCLPST (NAME=KV_VDH_DCLLCLPST,STCLASS=SYMREF);
      180    19613        %KV$VDH_EVT (NAME=KV_VDH_EVT_CMPOTP,STCLASS=SYMREF);
      181    19648        %KV$VDH_EVT (NAME=KV_VDH_EVT_RQSOTP,STCLASS=SYMREF);
      182    19683        %KZ_3270M_HDR (STCLASS=SYMREF);
      183    19707        %KZ$3270STT (STCLASS="BASED(KZ_3270M_HDR.STTBFR$)");
      184    20139
      185    20140        /* Macros */
      186    20141
      187    20142        %MACRO MAC_SETBUFADR;
      188    20143                IF KZ$3270DEV.MUST_SBA OR
      189    20144                  ROW ~= %KV_MRD.DVCLIN OR
      190    20145                  COL ~= %KV_MRD.DVCCLM THEN
      191    20146                DO;
      192    20147                   BFR$->BYT(BYTX)=BITBIN(%KZ#SETBUFADR); /* Order code               */
      193    20148
      194    20149                   IF ROW=MAX_ROW AND COL>MAX_COL THEN DO;
      195    20150                      ROW=1; COL=1;
      196    20151                      END;
      197    20152                   I=COL-1+((ROW-1)*MAX_COL);
      198    20153                   J=I/64;
      199    20154                   I=MOD(I,64);
      200    20155                   BFR$->BYT(BYTX+1)=KZ_3270XL(J);
      201    20156                   BFR$->BYT(BYTX+2)=KZ_3270XL(I);
      202    20157
      203    20158                   BYTX=BYTX+3;
      204    20159                   BYTSIZ = BYTSIZ-3;
      205    20160
      206    20161                   KZ$3270DEV.MUST_SBA='0'B;
      207    20162                   CALL STORE_MRD (ROW,COL);
      208    20163                   SBA_DONE = '1'B;
      209    20164                   END;
      210    20165                ELSE
      211    20166                   SBA_DONE = '0'B;
      212    20167        %MEND;
PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:92   
      213    20168
      214    20169        %MACRO MAC_GETBFR;
      215    20170                IF KZ$3270DEV.PRINTER THEN
      216    20171                   SZX=KZ$3270DEV.OTPBFRSIZ;    /* Start with largest size            */
      217    20172                ELSE
      218    20173                   SZX=%KZ#INITBFR_SIZE;        /* Start with a small buffer          */
      219    20174
      220    20175                %DISABLE(INHLVL=KH_INHLVL);
      221    20176                DO WHILE(SZX > 0);
      222    20177                   SZ=KZ_3270_BFRSIZ(SZX);      /* Size of buffer in words            */
      223    20178                   CALL KVB$GET2NSYS(SZ,TBFR$) ALTRET(NOBFR);
      224    20179                   KZ$3270STT.OTPBFRSIZ(SZX) = KZ$3270STT.OTPBFRSIZ(SZX)+1;
      225    20180                   KZ$3270STT.KHSTT.OTPBFRBYTUTL = KZ$3270STT.KHSTT.OTPBFRBYTUTL+SZ*2;
      226    20181                   GOTO GOTBFR;
      227    20182        NOBFR:     SZX = SZX -1;
      228    20183                   END;
      229    20184                %ENABLE(INHLVL=KH_INHLVL);
      230    20185                ALTRETURN;
      231    20186
      232    20187        GOTBFR:
      233    20188                %ENABLE(INHLVL=KH_INHLVL);
      234    20189        %MEND;
      235    20190        %EJECT;
PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:93   
      236    20191        /* Warning - the following AUTO cells are assumed to always contain
      237    20192           the indicated values while in this module:
      238    20193
      239    20194           DEV$        Device context
      240    20195           BFR$        KV$VDI.OTPBFR_.ADR$
      241    20196           BYTX        KV$VDI.OTPBFR_.BYTX
      242    20197           BYTSIZ      KV$VDI.OTPBFR_.BYTSIZ
      243    20198
      244    20199        Note that BFR$, BYTX and BYTSIZ are loaded upon entry (GET_VAL)
      245    20200        and stored back in KV$VDI upon exit (SET_VAL).  KV$VDI.OTPBFR_
      246    20201        should not be looked at or modified except in those two routines,
      247    20202        and in DONE.
      248    20203        */
      249    20204
      250    20205    1           PARM$=ADDR(PARM);

  20205   1 000005  ECC7 0004                            LDB,B6   @PARM,AUTO
          1 000007  EFC7 0006                            STB,B6   PARM$,AUTO

      251    20206    1           DEV$=%KV_VDI.USRCTX$;

  20206   1 000009  DC80 0000 0000  xsym                 LDB,B5   KV$PTR$
          1 00000C  CC85                                 LDB,B4   ,B5
          1 00000D  BCC4 0002                            LDB,B3   2,B4
          1 00000F  BFC7 0008                            STB,B3   DEV$,AUTO

      252    20207    1           KZ$3270DEV.DONE='0'B;

  20207   1 000011  8843 0012                            LBF,'0200'X       18,B3
  20207   1 000013       0200

      253    20208    1           IF KV$USR_DAT.FNC=%KV_USR_FNC_EVT THEN

  20208   1 000014  E286                                 LLH,R6   ,B6
          1 000015  6D04                                 CMV,R6   4
          1 000016  0981 000C                            BNE      s:20211,PREL

PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:94   
      254    20209    1              IF KV$USR_EVT.ID =%KV_USR_EVT_ID_RLSSTR THEN

  20209   1 000018  D806                                 LDR,R5   ,B6
          1 000019  D570 007F                            AND,R5   127,IMO
          1 00001B  5D0B                                 CMV,R5   11
          1 00001C  0981 0006                            BNE      s:20211,PREL

      255    20210    1                 IF KV$USR_EVT.PRM=%KV_STRTYP_VDI THEN GOTO SKIP_GET;

  20210   1 00001E  C846 0001                            LDR,R4   1,B6
          1 000020  4D1D                                 CMV,R4   29
          1 000021  0901 0004                            BE       s:20208,PREL

      256    20211    1           CALL GET_VAL;

  20211   1 000023  E3C0 12A2                            LNJ,B6   s:0,PREL
          1 000025       0001                            DC       s:20208,PREL

  20208   1                              SKIP_GET        null
      257    20212    1   SKIP_GET: ;
      258    20213
      259    20214    2           DO CASE(KV$USR_DAT.FNC);

  20214   1 000026  ECC7 0006            SKIP_GET        LDB,B6   PARM$,AUTO
          1 000028  B286                                 LLH,R3   ,B6
          1 000029  3D10                                 CMV,R3   16
          1 00002A  0281 0833                            BGE      s:20976,PREL
          1 00002C  A830 0000 0032  01                   LDR,R2   SKIP_GET+12,R3
          1 00002F  83A0 0000 0042  01                   JMP      s:20224,R2
          1 000032       081C                            DC       s:20976,PREL
          1 000033       0264                            DC       s:20411,PREL
          1 000034       081C                            DC       s:20976,PREL
          1 000035       000C                            DC       s:20236,PREL
          1 000036       05D3                            DC       s:20762,PREL
          1 000037       081C                            DC       s:20976,PREL
          1 000038       023D                            DC       s:20387,PREL
          1 000039       0000                            DC       s:20224,PREL
PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:95   
          1 00003A       006A                            DC       s:20269,PREL
          1 00003B       0588                            DC       s:20739,PREL
          1 00003C       01CE                            DC       s:20354,PREL
          1 00003D       081C                            DC       s:20976,PREL
          1 00003E       0363                            DC       s:20504,PREL
          1 00003F       081C                            DC       s:20976,PREL
          1 000040       0507                            DC       s:20690,PREL
          1 000041       007F                            DC       s:20283,PREL

      260    20215        %EJECT;
PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:96   
      261    20216        /* Get output buffer -
      262    20217           VDH needs more room to insert data into our output buffers.
      263    20218           We will either expand our current buffer or start a new
      264    20219           buffer and send the current buffer  to the line manager.
      265    20220        */
      266    20221
      267    20222    2            CASE(%KV_USR_FNC_GETOTPBFR);

      268    20223
      269    20224    2              IF KZ$3270DEV.ACTIVE THEN

  20224   1 000042  DCC7 0008                            LDB,B5   DEV$,AUTO
          1 000044  82C5 0012                            LB,'4000'X        18,B5
          1 000046       4000
          1 000047  0581 0816                            BBF      s:20976,PREL

      270    20225    2                 CALL EXP_BFR ALTRET(NO_MEMORY); /* Expand buffer/get new one    */

  20225   1 000049  E3C0 0CDC                            LNJ,B6   s:0,PREL
          1 00004B       0841                            DC       s:20995,PREL
          1 00004C  0F81 0811                            B        s:20976,PREL

      271    20226        %EJECT;
PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:97   
      272    20227        /* Erase */
      273    20228        /*
      274    20229           Erase a window on the screen - we are given the top left and
      275    20230           bottom right positions (corners) of the area to be cleared and
      276    20231           a top line offset in case the entire first line is not erased.
      277    20232        */
      278    20233
      279    20234    2            CASE(%KV_USR_FNC_ERS);

      280    20235
      281    20236    2              IF KV$USR_ERS.BGNPHSCLM=1 AND KV$USR_ERS.TOPLFT.LIN=1

  20236   1 00004E  E846 0005                            LDR,R6   5,B6
          1 000050  6D01                                 CMV,R6   1
          1 000051  0981 001F                            BNE      s:20244,PREL
          1 000053  D846 0001                            LDR,R5   1,B6
          1 000055  5D01                                 CMV,R5   1
          1 000056  0981 001A                            BNE      s:20244,PREL
          1 000058  C846 0003                            LDR,R4   3,B6
          1 00005A  C947 001E                            CMR,R4   MAX_ROW,AUTO
          1 00005C  0981 0014                            BNE      s:20244,PREL
          1 00005E  9846 0006                            LDR,R1   6,B6
          1 000060  1801 0010                            BLZ,R1   s:20244,PREL
          1 000062  9947 001F                            CMR,R1   MAX_COL,AUTO
          1 000064  0981 000C                            BNE      s:20244,PREL
          1 000066  E846 0004                            LDR,R6   4,B6
          1 000068  E947 001F                            CMR,R6   MAX_COL,AUTO
          1 00006A  0981 0006                            BNE      s:20244,PREL

      282    20237    2                AND KV$USR_ERS.BTMRHT.LIN=MAX_ROW
      283    20238    2                AND KV$USR_ERS.ENDPHSCLM=MAX_COL
      284    20239    3                AND KV$USR_ERS.BTMRHT.CLM=MAX_COL THEN DO;

      285    20240    3                 CALL CLEAR ALTRET(NO_MEMORY); /* Clear entire screen            */

  20240   1 00006C  E3C0 1079                            LNJ,B6   s:0,PREL
          1 00006E       081E                            DC       s:20995,PREL
PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:98   

      286    20241    3                 GOTO XIT;

  20241   1 00006F  0F81 07EE                            B        s:20976,PREL

      287    20242    3                 END;
      288    20243
      289    20244    2              SAVE_ROW=%KV_MRD.DVCLIN;

  20244   1 000071  DC80 0000 0000  xsym                 LDB,B5   KV$PTR$
          1 000074  CCC5 0008                            LDB,B4   8,B5
          1 000076  E844 001D                            LDR,R6   29,B4
          1 000078  EF47 001C                            STR,R6   SAVE_ROW,AUTO

      290    20245    2              SAVE_COL=%KV_MRD.DVCCLM;

  20245   1 00007A  D844 001E                            LDR,R5   30,B4
          1 00007C  DF47 001D                            STR,R5   SAVE_COL,AUTO

      291    20246    2              CALL ERSWNDW(KV$USR_ERS.TOPLFT.LIN,

  20246   1 00007E  BBC6 0006                            LAB,B3   6,B6
          1 000080  BFC7 004A                            STB,B3   @ECOL2+2,AUTO
          1 000082  CBC6 0005                            LAB,B4   5,B6
          1 000084  CFC7 0048                            STB,B4   @ECOL1+2,AUTO
          1 000086  ABC6 0004                            LAB,B2   4,B6
          1 000088  AFC7 0046                            STB,B2   @EROW1+2,AUTO
          1 00008A  9BC6 0003                            LAB,B1   3,B6
          1 00008C  9FC7 0044                            STB,B1   FPT_WRSYSLOG+2,AUTO
          1 00008E  DBC6 0002                            LAB,B5   2,B6
          1 000090  DFC7 0042                            STB,B5   @ERROR+2,AUTO
          1 000092  DBC6 0001                            LAB,B5   1,B6
          1 000094  DFC7 0040                            STB,B5   DISABLE_LEVEL+4,AUTO
          1 000096  E3C0 0FBD                            LNJ,B6   s:0,PREL
          1 000098       07F4                            DC       s:20995,PREL

      292    20247    2                KV$USR_ERS.TOPLFT.CLM,
PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:99   
      293    20248    2                KV$USR_ERS.BTMRHT.LIN,
      294    20249    2                KV$USR_ERS.BTMRHT.CLM,
      295    20250    2                KV$USR_ERS.BGNPHSCLM,
      296    20251    2                KV$USR_ERS.ENDPHSCLM) ALTRET(NO_MEMORY);
      297    20252
      298    20253    2              IF NOT KV$USR_ERS.NO_RE_PST THEN

  20253   1 000099  ECC7 0006                            LDB,B6   PARM$,AUTO
          1 00009B  8286                                 LB,'0040'X        ,B6
          1 00009C       0040
          1 00009D  0501 07C0                            BBT      s:20976,PREL

      299    20254    3              DO;

      300    20255    3                 ROW=SAVE_ROW;

  20255   1 00009F  E847 001C                            LDR,R6   SAVE_ROW,AUTO
          1 0000A1  EF47 0015                            STR,R6   ROW,AUTO

      301    20256    3                 COL=SAVE_COL;

  20256   1 0000A3  D847 001D                            LDR,R5   SAVE_COL,AUTO
          1 0000A5  DF47 0016                            STR,R5   COL,AUTO

      302    20257    3                 CALL SETBUFADR       /* Move back to where VDH thinks we are    */

  20257   1 0000A7  E3C0 0DCC                            LNJ,B6   s:0,PREL
          1 0000A9       07E3                            DC       s:20995,PREL

      303    20258    3                   ALTRET(NO_MEMORY);
      304    20259    3                 END;

  20259   1 0000AA  0F81 07B3                            B        s:20976,PREL

      305    20260
      306    20261        %EJECT;
PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:100  
      307    20262        /* Getprm */
      308    20263        /*
      309    20264          Get parameters
      310    20265        */
      311    20266
      312    20267    2            CASE(%KV_USR_FNC_GETPRM);

      313    20268
      314    20269    2              IF KV$USR_GETPRM.PRMID = %KV_PRMID_CRTLINSPD THEN

  20269   1 0000AC  E846 0001                            LDR,R6   1,B6
          1 0000AE  6D60                                 CMV,R6   96
          1 0000AF  0981 07AE                            BNE      s:20976,PREL

      315    20270    2                 KV$USR_GETPRM.VAL = KZ$3270DEV.CTR$ -> KZ$3270CTR.LIN$ ->

  20270   1 0000B1  DCC7 0008                            LDB,B5   DEV$,AUTO
          1 0000B3  CCC5 0002                            LDB,B4   2,B5
          1 0000B5  BCC4 0004                            LDB,B3   4,B4
          1 0000B7  ACC3 0002                            LDB,B2   2,B3
          1 0000B9  D842 0008                            LDR,R5   8,B2
          1 0000BB  D570 000F                            AND,R5   15,IMO
          1 0000BD  DF46 0002                            STR,R5   2,B6
          1 0000BF  0F81 079E                            B        s:20976,PREL

      316    20271    2                   KZ$LINCTX.CHN$ -> KH$CHN.LINSPD;
      317    20272        %EJECT;
PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:101  
      318    20273        /*
      319    20274        SETPRM - MASTER REAL DEVICE LENGTH AND WIDTH
      320    20275           We will get preprocessing on VDH set params and if the parameters
      321    20276           being set are the device width or length, we may want to override
      322    20277           VDH. This will be done when the virtual device interface pointer
      323    20278           is nill.
      324    20279        */
      325    20280
      326    20281    2            CASE(%KV_USR_FNC_SETPRM);

      327    20282
      328    20283    3              DO CASE(KV$USR_SETPRM.PRMID);

  20283   1 0000C1  9846 0001                            LDR,R1   1,B6
          1 0000C3  1EE7                                 ADV,R1   -25
          1 0000C4  1D62                                 CMV,R1   98
          1 0000C5  0281 0798                            BGE      s:20976,PREL
          1 0000C7  B810 0000 00CD  01                   LDR,R3   s:20283+12,R1
          1 0000CA  83B0 0000 012F  01                   JMP      s:20286,R3
          1 0000CD       0046                            DC       s:20312,PREL
          1 0000CE       00DF                            DC       s:20336,PREL
          1 0000CF       00DF                            DC       s:20336,PREL
          1 0000D0       00DF                            DC       s:20336,PREL
          1 0000D1       00DF                            DC       s:20336,PREL
          1 0000D2       00DF                            DC       s:20336,PREL
          1 0000D3       00DF                            DC       s:20336,PREL
          1 0000D4       00DF                            DC       s:20336,PREL
          1 0000D5       00DF                            DC       s:20336,PREL
          1 0000D6       00DF                            DC       s:20336,PREL
          1 0000D7       00DF                            DC       s:20336,PREL
          1 0000D8       00DF                            DC       s:20336,PREL
          1 0000D9       00DF                            DC       s:20336,PREL
          1 0000DA       00DF                            DC       s:20336,PREL
          1 0000DB       00DF                            DC       s:20336,PREL
          1 0000DC       00DF                            DC       s:20336,PREL
          1 0000DD       00DF                            DC       s:20336,PREL
          1 0000DE       00DF                            DC       s:20336,PREL
PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:102  
          1 0000DF       00DF                            DC       s:20336,PREL
          1 0000E0       00DF                            DC       s:20336,PREL
          1 0000E1       00DF                            DC       s:20336,PREL
          1 0000E2       00DF                            DC       s:20336,PREL
          1 0000E3       00DF                            DC       s:20336,PREL
          1 0000E4       00DF                            DC       s:20336,PREL
          1 0000E5       00DF                            DC       s:20336,PREL
          1 0000E6       00DF                            DC       s:20336,PREL
          1 0000E7       00DF                            DC       s:20336,PREL
          1 0000E8       00DF                            DC       s:20336,PREL
          1 0000E9       00DF                            DC       s:20336,PREL
          1 0000EA       00DF                            DC       s:20336,PREL
          1 0000EB       00DF                            DC       s:20336,PREL
          1 0000EC       00DF                            DC       s:20336,PREL
          1 0000ED       00DF                            DC       s:20336,PREL
          1 0000EE       00DF                            DC       s:20336,PREL
          1 0000EF       00DF                            DC       s:20336,PREL
          1 0000F0       00DF                            DC       s:20336,PREL
          1 0000F1       00DF                            DC       s:20336,PREL
          1 0000F2       00DF                            DC       s:20336,PREL
          1 0000F3       00DF                            DC       s:20336,PREL
          1 0000F4       00DF                            DC       s:20336,PREL
          1 0000F5       00DF                            DC       s:20336,PREL
          1 0000F6       00DF                            DC       s:20336,PREL
          1 0000F7       00DF                            DC       s:20336,PREL
          1 0000F8       00DF                            DC       s:20336,PREL
          1 0000F9       00DF                            DC       s:20336,PREL
          1 0000FA       00DF                            DC       s:20336,PREL
          1 0000FB       00DF                            DC       s:20336,PREL
          1 0000FC       00DF                            DC       s:20336,PREL
          1 0000FD       00DF                            DC       s:20336,PREL
          1 0000FE       00DF                            DC       s:20336,PREL
          1 0000FF       00DF                            DC       s:20336,PREL
          1 000100       00DF                            DC       s:20336,PREL
          1 000101       00DF                            DC       s:20336,PREL
          1 000102       00DF                            DC       s:20336,PREL
          1 000103       0044                            DC       s:20306,PREL
PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:103  
          1 000104       00DF                            DC       s:20336,PREL
          1 000105       00DF                            DC       s:20336,PREL
          1 000106       00DF                            DC       s:20336,PREL
          1 000107       00DF                            DC       s:20336,PREL
          1 000108       00DF                            DC       s:20336,PREL
          1 000109       00DF                            DC       s:20336,PREL
          1 00010A       00DF                            DC       s:20336,PREL
          1 00010B       00DF                            DC       s:20336,PREL
          1 00010C       00DF                            DC       s:20336,PREL
          1 00010D       00DF                            DC       s:20336,PREL
          1 00010E       00DF                            DC       s:20336,PREL
          1 00010F       00DF                            DC       s:20336,PREL
          1 000110       00DF                            DC       s:20336,PREL
          1 000111       00DF                            DC       s:20336,PREL
          1 000112       00DF                            DC       s:20336,PREL
          1 000113       00DF                            DC       s:20336,PREL
          1 000114       00DF                            DC       s:20336,PREL
          1 000115       00DF                            DC       s:20336,PREL
          1 000116       00DF                            DC       s:20336,PREL
          1 000117       00DF                            DC       s:20336,PREL
          1 000118       00DF                            DC       s:20336,PREL
          1 000119       00DF                            DC       s:20336,PREL
          1 00011A       0044                            DC       s:20306,PREL
          1 00011B       00DF                            DC       s:20336,PREL
          1 00011C       00DF                            DC       s:20336,PREL
          1 00011D       00DF                            DC       s:20336,PREL
          1 00011E       00DF                            DC       s:20336,PREL
          1 00011F       00DF                            DC       s:20336,PREL
          1 000120       00DF                            DC       s:20336,PREL
          1 000121       00DF                            DC       s:20336,PREL
          1 000122       00DF                            DC       s:20336,PREL
          1 000123       00DF                            DC       s:20336,PREL
          1 000124       00DF                            DC       s:20336,PREL
          1 000125       00DF                            DC       s:20336,PREL
          1 000126       00DF                            DC       s:20336,PREL
          1 000127       00DF                            DC       s:20336,PREL
          1 000128       00DF                            DC       s:20336,PREL
PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:104  
          1 000129       00DF                            DC       s:20336,PREL
          1 00012A       00DF                            DC       s:20336,PREL
          1 00012B       00DF                            DC       s:20336,PREL
          1 00012C       00DF                            DC       s:20336,PREL
          1 00012D       0000                            DC       s:20286,PREL
          1 00012E       0021                            DC       s:20296,PREL

      329    20284
      330    20285    3               CASE(%KV_PRMID_MRDWDT);

      331    20286    3                 IF KZ$3270DEV.VDI$ = ADDR(NIL) THEN

  20286   1 00012F  DCC7 0008                            LDB,B5   DEV$,AUTO
          1 000131  8DC5 0004                            CMN      4,B5
          1 000133  0981 0009                            BNE      s:20289,PREL

      332    20287    3                    KV$USR_SETPRM.VAL = KZ$3270DEV.COLS;

  20287   1 000135  E845 0017                            LDR,R6   23,B5
          1 000137  E570 00FF                            AND,R6   255,IMO
          1 000139  EF46 0002                            STR,R6   2,B6
          1 00013B  0F81 0722                            B        s:20976,PREL

      333    20288    3                 ELSE
      334    20289    3                    IF NOT KZ$3270DEV.PRINTER AND

  20289   1 00013D  82C5 0012                            LB,'0800'X        18,B5
  20289   1 00013F       0800
          1 000140  0501 000D                            BBT      s:20289+17,PREL
          1 000142  E846 0002                            LDR,R6   2,B6
          1 000144  6D28                                 CMV,R6   40
          1 000145  0901 0008                            BE       s:20289+17,PREL
          1 000147  6D50                                 CMV,R6   80
          1 000148  0901 0005                            BE       s:20289+17,PREL
          1 00014A  E970 0084                            CMR,R6   132,IMO
          1 00014C  0981 0026                            BNE      s:20306,PREL
          1 00014E  0F81 070F                            B        s:20976,PREL
PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:105  

      335    20290    3                      ( KV$USR_SETPRM.VAL ~= 40 AND
      336    20291    3                      KV$USR_SETPRM.VAL ~= 80 AND
      337    20292    3                      KV$USR_SETPRM.VAL ~= 132 ) THEN
      338    20293    3                       GOTO ABRTPRM;
      339    20294
      340    20295    3               CASE(%KV_PRMID_MRDLNG);

      341    20296    3                 IF KZ$3270DEV.VDI$ = ADDR(NIL) THEN

  20296   1 000150  DCC7 0008                            LDB,B5   DEV$,AUTO
          1 000152  8DC5 0004                            CMN      4,B5
          1 000154  0981 0010                            BNE      s:20302,PREL

      342    20297    3                    IF KZ$3270DEV.PRINTER THEN

  20297   1 000156  82C5 0012                            LB,'0800'X        18,B5
  20297   1 000158       0800
          1 000159  0581 0005                            BBF      s:20300,PREL

      343    20298    3                       KV$USR_SETPRM.VAL = 0;

  20298   1 00015B  8746 0002                            CL       2,B6
          1 00015D  0F81 0700                            B        s:20976,PREL

      344    20299    3                    ELSE
      345    20300    3                       KV$USR_SETPRM.VAL = KZ$3270DEV.ROWS;

  20300   1 00015F  E2C5 0017                            LLH,R6   23,B5
          1 000161  EF46 0002                            STR,R6   2,B6
          1 000163  0F81 06FA                            B        s:20976,PREL

      346    20301    3                 ELSE
      347    20302    3                    IF NOT KZ$3270DEV.PRINTER AND ( KV$USR_SETPRM.VAL = 0

  20302   1 000165  82C5 0012                            LB,'0800'X        18,B5
  20302   1 000167       0800
PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:106  
          1 000168  0501 0008                            BBT      s:20302+12,PREL
          1 00016A  E846 0002                            LDR,R6   2,B6
          1 00016C  6901 0006                            BEZ,R6   s:20306,PREL
          1 00016E  6D2B                                 CMV,R6   43
          1 00016F  0301 0003                            BG       s:20306,PREL
          1 000171  0F81 06EC                            B        s:20976,PREL

      348    20303    3                      OR KV$USR_SETPRM.VAL > 43 ) THEN
      349    20304    3                       GOTO ABRTPRM;
      350    20305
      351    20306    3               CASE(%KV_PRMID_SCROLL,%KV_PRMID_DEVSCROLL);

      352    20307
      353    20308    3   ABRTPRM:      GOTO ALTRTN;

  20308   1 000173  0F81 0701            ABRTPRM         B        s:20987,PREL

      354    20309
      355    20310    3               CASE(%KV_PRMID_3270);

      356    20311
      357    20312    3                 C$ = PINCRC(KV$USR_SETPRM.VAL_.ADR$,

  20312   1 000175  A846 0005                            LDR,R2   5,B6
          1 000177  DCC6 0003                            LDB,B5   3,B6
          1 000179  DFC7 0062                            STB,B5   C_MRD+1,AUTO
          1 00017B  8CC7 0062                            LDI      C_MRD+1,AUTO
          1 00017D  7031                                 DCL,R7   1
          1 00017E  8D47 0064                            SDI      C_MRD+3,AUTO
          1 000180  E852                                 LDR,R6   R2
          1 000181  70F0                                 DAR,R7   16
          1 000182  8447 0064                            AID      C_MRD+3,AUTO
          1 000184  7071                                 DCR,R7   1
          1 000185  8D47 0010                            SDI      C$,AUTO

      358    20313    3                   KV$USR_SETPRM.VAL_.BYTX);
      359    20314
PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:107  
      360    20315    3                 KZ$3270DEV.PRO.FF = C$->KL_3270.FRMFED;

  20315   1 000187  B856                                 LDR,R3   R6
          1 000188  E570 7FFF                            AND,R6   32767,IMO
          1 00018A  8D47 0062                            SDI      C_MRD+1,AUTO
          1 00018C  DCC7 0062                            LDB,B5   C_MRD+1,AUTO
          1 00018E  304F                                 SOR,R3   15
          1 00018F  BF47 0064                            STR,R3   C_MRD+3,AUTO
          1 000191  DFC7 0065                            STB,B5   C_MRD+4,AUTO
          1 000193  AB85                                 LAB,B2   ,B5
          1 000194  A853                                 LDR,R2   R3
          1 000195  2003                                 SOL,R2   3
          1 000196  2E03                                 ADV,R2   3
          1 000197  6C01                                 LDV,R6   1
          1 000198  BCC7 0008                            LDB,B3   DEV$,AUTO
          1 00019A  BBC3 0011                            LAB,B3   17,B3
          1 00019C  3C01                                 LDV,R3   1
          1 00019D  7C01                                 LDV,R7   1
          1 00019E  D380 0000 0000  xent                 LNJ,B5   X6B_BLR

      361    20316
      362    20317    3                 I = C$->KL_3270.DVCBFRSIZ;

  20317   1 0001A1  8CC7 0010                            LDI      C$,AUTO
          1 0001A3  B856                                 LDR,R3   R6
          1 0001A4  E570 7FFF                            AND,R6   32767,IMO
          1 0001A6  8D47 0062                            SDI      C_MRD+1,AUTO
          1 0001A8  ECC7 0062                            LDB,B6   C_MRD+1,AUTO
          1 0001AA  304F                                 SOR,R3   15
          1 0001AB  5C02                                 LDV,R5   2
          1 0001AC  0021                                 ALR      ;
          1 0001AD       4236 0001                                ALPHANUM(1,B6,R3,,2),;
          1 0001AF       4007 0064                                ALPHANUM(C_MRD+3,AUTO,,R5,FILL)
          1 0001B1  437F                                 CSYNC    s:20317+15,SPREL
          1 0001B2  C847 0064                            LDR,R4   C_MRD+3,AUTO
          1 0001B4  CF47 0023                            STR,R4   I,AUTO

PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:108  
      363    20318    4                 DO J = %KZ#MAXBFR DOWNTO 1 BY -1;

  20318   1 0001B6  3C08                                 LDV,R3   8
          1 0001B7  BF47 0024                            STR,R3   J,AUTO

      364    20319    5                    IF I>=KZ_3270_BFRSIZ(J)*2 THEN DO;

  20319   1 0001B9  B847 0024                            LDR,R3   J,AUTO
          1 0001BB  E830 0000 0020  00                   LDR,R6   KZ_3270_BFRSIZ,R3
          1 0001BE  6001                                 SOL,R6   1
          1 0001BF  6801 000B                            BLZ,R6   s:20323,PREL
          1 0001C1  E947 0023                            CMR,R6   I,AUTO
          1 0001C3  0A01 0007                            BAG      s:20323,PREL

      365    20320    5                       KZ$3270DEV.OTPBFRSIZ=J;

  20320   1 0001C5  ECC7 0008                            LDB,B6   DEV$,AUTO
          1 0001C7  BF46 0018                            STR,R3   24,B6

      366    20321    5                       GOTO BFRSIZ_SET;

  20321   1 0001C9  0F81 0007                            B        s:20318,PREL

      367    20322    5                       END;
      368    20323    4                    END;

  20323   1 0001CB  88C7 0024                            DEC      J,AUTO
          1 0001CD  E847 0024                            LDR,R6   J,AUTO
          1 0001CF  6D01                                 CMV,R6   1
          1 0001D0  08E9                                 BAGE     s:20319,SPREL

  20318   1                              BFRSIZ_SET      null
      369    20324    3   BFRSIZ_SET:   ;
      370    20325
      371    20326    4                 DO CASE (BITBIN(C$->KL_3270.EWALT#));

  20326   1 0001D1  8CC7 0010            BFRSIZ_SET      LDI      C$,AUTO
PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:109  
          1 0001D3  B856                                 LDR,R3   R6
          1 0001D4  E570 7FFF                            AND,R6   32767,IMO
          1 0001D6  8D47 0062                            SDI      C_MRD+1,AUTO
          1 0001D8  ECC7 0062                            LDB,B6   C_MRD+1,AUTO
          1 0001DA  304F                                 SOR,R3   15
          1 0001DB  BF47 0065                            STR,R3   C_MRD+4,AUTO
          1 0001DD  EFC7 0066                            STB,B6   C_MRD+5,AUTO
          1 0001DF  AB86                                 LAB,B2   ,B6
          1 0001E0  A853                                 LDR,R2   R3
          1 0001E1  2003                                 SOL,R2   3
          1 0001E2  2E04                                 ADV,R2   4
          1 0001E3  6C02                                 LDV,R6   2
          1 0001E4  BBC7 0062                            LAB,B3   C_MRD+1,AUTO
          1 0001E6  3C20                                 LDV,R3   32
          1 0001E7  7C10                                 LDV,R7   16
          1 0001E8  D380 0000 0000  xent                 LNJ,B5   X6B_BLR
          1 0001EB  E847 0064                            LDR,R6   C_MRD+3,AUTO
          1 0001ED  604E                                 SOR,R6   14
          1 0001EE  B856                                 LDR,R3   R6
          1 0001EF  3D03                                 CMV,R3   3
          1 0001F0  0281 066D                            BGE      s:20976,PREL
          1 0001F2  A830 0000 01F8  01                   LDR,R2   BFRSIZ_SET+39,R3
          1 0001F5  83A0 0000 01FB  01                   JMP      s:20328,R2
          1 0001F8       0000                            DC       s:20328,PREL
          1 0001F9       0013                            DC       s:20336,PREL
          1 0001FA       0007                            DC       s:20330,PREL

      372    20327    4                  CASE (0);                /* NO                                 */

      373    20328    4                    KZ$3270DEV.PRO.EWALT='0'B;

  20328   1 0001FB  ECC7 0008                            LDB,B6   DEV$,AUTO
          1 0001FD  8846 0011                            LBF,'8000'X       17,B6
          1 0001FF       8000
          1 000200  0F81 065D                            B        s:20976,PREL

      374    20329    4                  CASE (2);                /* YES                                */
PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:110  

      375    20330    5                    IF KZ$3270DEV.PRO.EWALT='0'B THEN DO;

  20330   1 000202  ECC7 0008                            LDB,B6   DEV$,AUTO
          1 000204  89C6 0011                            CMZ      17,B6
          1 000206  0801 0657                            BAL      s:20976,PREL

      376    20331    5                       KZ$3270DEV.PRO.EWALT='1'B;

  20331   1 000208  8946 0011                            LBT,'8000'X       17,B6
  20331   1 00020A       8000

      377    20332    5                       CALL CLEAR ALTRET(NO_MEMORY);

  20332   1 00020B  E3C0 0EDA                            LNJ,B6   s:0,PREL
          1 00020D       067F                            DC       s:20995,PREL

      378    20333    5                       END;

      379    20334    4                  END;

      380    20335
      381    20336    3               END;                        /* CASE                               */

  20336   1 00020E  0F81 064F                            B        s:20976,PREL

      382    20337
      383    20338        %EJECT;
PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:111  
      384    20339        /* Output marker */
      385    20340        /*
      386    20341              Output Marker Request - copy control data from VDH and hang on
      387    20342              to the control data until the line manager says the real data
      388    20343              has been recieved by the device, at which time KV$VDH_OTPMRK
      389    20344              will be called to notify the other end point of completion.
      390    20345
      391    20346              Calculate word size of the buffer needed to hold the control
      392    20347              data and add number of words needed to create the KZ$OTPMRK
      393    20348              structure.
      394    20349
      395    20350        */
      396    20351    2            CASE(%KV_USR_FNC_OTPMRK);

      397    20352
      398    20353
      399    20354    2              IF BFR$=ADDR(NIL) THEN

  20354   1 000210  8DC7 000A                            CMN      BFR$,AUTO
          1 000212  0981 0004                            BNE      s:20357,PREL

      400    20355    2                 CALL EXP_BFR ALTRET(NO_MEMORY); /* Must have output buffer      */

  20355   1 000214  E3C0 0B11                            LNJ,B6   s:0,PREL
          1 000216       0676                            DC       s:20995,PREL

      401    20356
      402    20357    3              IF NOT KV$USR_OTPMRK.DAT.MSTRTR AND KZ$OTPBFR.MRKCNT~=0 THEN DO;

  20357   1 000217  ECC7 0006                            LDB,B6   PARM$,AUTO
          1 000219  89C6 0001                            CMZ      1,B6
          1 00021B  0801 0023                            BAL      s:20365,PREL
          1 00021D  DCC7 000A                            LDB,B5   BFR$,AUTO
          1 00021F  82C5 0005                            LB,'00FF'X        5,B5
          1 000221       00FF
          1 000222  0581 001C                            BBF      s:20365,PREL

PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:112  
      403    20358    3                 T$=PINCRW(BFR$,KZ_3270_BFRSIZ(KZ$OTPBFR.BFRSIZ)-SIZEW(KV$OTPMRK));

  20358   1 000224  B845 0004                            LDR,R3   4,B5
          1 000226  A830 0000 0020  00                   LDR,R2   KZ_3270_BFRSIZ,R3
          1 000229  F852                                 LDR,R7   R2
          1 00022A  6C00                                 LDV,R6   0
          1 00022B  8447 000A                            AID      BFR$,AUTO
          1 00022D  8470 FFFF FFFD                       AID      -3,IMO
          1 000230  8D47 000E                            SDI      T$,AUTO

      404    20359    4                 IF NOT T$->KV$OTPMRK.MSTRTR THEN DO;

  20359   1 000232  CCC7 000E                            LDB,B4   T$,AUTO
          1 000234  8984                                 CMZ      ,B4
          1 000235  0801 0009                            BAL      s:20365,PREL

      405    20360    4                    T$->KV$OTPMRK=KV$USR_OTPMRK.DAT;

  20360   1 000237  AB86                                 LAB,B2   ,B6
          1 000238  2C02                                 LDV,R2   2
          1 000239  6C06                                 LDV,R6   6
          1 00023A  BB84                                 LAB,B3   ,B4
          1 00023B  3C00                                 LDV,R3   0
          1 00023C  0008                                 MMM

      406    20361    4                    GOTO XIT;

  20361   1 00023D  0F81 0620                            B        s:20976,PREL

      407    20362    4                    END;
      408    20363    3                 END;
      409    20364
      410    20365    2              IF BYTSIZ<SIZEW(KV$OTPMRK)*2 THEN

  20365   1 00023F  E847 0029                            LDR,R6   BYTSIZ,AUTO
          1 000241  6D06                                 CMV,R6   6
          1 000242  0281 0004                            BGE      s:20368,PREL
PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:113  

      411    20366    2                 CALL EXP_BFR ALTRET(NO_MEMORY); /* Make room for marker         */

  20366   1 000244  E3C0 0AE1                            LNJ,B6   s:0,PREL
          1 000246       0646                            DC       s:20995,PREL

      412    20367
      413    20368    2              KZ$OTPBFR.MRKCNT=KZ$OTPBFR.MRKCNT+1;

  20368   1 000247  ECC7 000A                            LDB,B6   BFR$,AUTO
          1 000249  E846 0005                            LDR,R6   5,B6
          1 00024B  EA70 0001                            ADD,R6   1,IMO
          1 00024D  EAC6 0005                            SRM,R6,'00FF'X    5,B6
          1 00024F       00FF

      414    20369    2              T$=PINCRW(BFR$,KZ_3270_BFRSIZ(KZ$OTPBFR.BFRSIZ)-

  20369   1 000250  ECC7 000A                            LDB,B6   BFR$,AUTO
          1 000252  B846 0004                            LDR,R3   4,B6
          1 000254  E846 0005                            LDR,R6   5,B6
          1 000256  E570 00FF                            AND,R6   255,IMO
          1 000258  6FFD                                 MLV,R6   -3
          1 000259  EA30 0000 0020  00                   ADD,R6   KZ_3270_BFRSIZ,R3
          1 00025C  A856                                 LDR,R2   R6
          1 00025D  DBA6                                 LAB,B5   ,B6,R2
          1 00025E  DFC7 000E                            STB,B5   T$,AUTO

      415    20370    2                SIZEW(KV$OTPMRK)*KZ$OTPBFR.MRKCNT);
      416    20371    2              T$->KV$OTPMRK=KV$USR_OTPMRK.DAT;

  20371   1 000260  ACC7 0006                            LDB,B2   PARM$,AUTO
          1 000262  2C02                                 LDV,R2   2
          1 000263  6C06                                 LDV,R6   6
          1 000264  BB85                                 LAB,B3   ,B5
          1 000265  3C00                                 LDV,R3   0
          1 000266  0008                                 MMM

PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:114  
      417    20372    2              BYTSIZ=BYTSIZ-SIZEW(KV$OTPMRK)*2;

  20372   1 000267  E847 0029                            LDR,R6   BYTSIZ,AUTO
          1 000269  6EFA                                 ADV,R6   -6
          1 00026A  EF47 0029                            STR,R6   BYTSIZ,AUTO

      418    20373
      419    20374    2              IF KV$USR_OTPMRK.CMPOTP THEN

  20374   1 00026C  ECC7 0006                            LDB,B6   PARM$,AUTO
          1 00026E  8286                                 LB,'0080'X        ,B6
          1 00026F       0080
          1 000270  0581 05ED                            BBF      s:20976,PREL

      420    20375    3              DO;  /* Process this otpmrk thru data stream - we'll recieve

      421    20376                              no more data until the pipe is clear         */
      422    20377    3                 KZ$3270DEV.LSTOTPLINX = 0;  /* Save 0 bytes in the buffer

  20377   1 000272  CCC7 0008                            LDB,B4   DEV$,AUTO
          1 000274  8744 0019                            CL       25,B4

      423    20378                                                        even if its a printer BFR. */
      424    20379    3                 CALL DONE (%QUEUE_ON_TAIL) ALTRET(NO_MEMORY);

  20379   1 000276  ABF0 8000                            LAB,B2   -32768,IMO
          1 000278  AFC7 005A                            STB,B2   ENTR_FLG+3,AUTO
          1 00027A  E3C0 06B0                            LNJ,B6   s:0,PREL
          1 00027C       0610                            DC       s:20995,PREL

      425    20380    3                 END;

  20380   1 00027D  0F81 05E0                            B        s:20976,PREL

      426    20381
      427    20382        %EJECT;
PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:115  
      428    20383        /* Extended translation */
      429    20384
      430    20385    2            CASE(%KV_USR_FNC_EXTOTPTRN);

      431    20386
      432    20387    3              DO CASE(KV$USR_EXTOTPTRN.ID);

  20387   1 00027F  92C6 0001                            LLH,R1   1,B6
          1 000281  1D02                                 CMV,R1   2
          1 000282  0281 05DB                            BGE      s:20976,PREL
          1 000284  B810 0000 028A  01                   LDR,R3   s:20387+11,R1
          1 000287  83B0 0000 028C  01                   JMP      s:20394,R3
          1 00028A       0018                            DC       s:20399,PREL
          1 00028B       0000                            DC       s:20394,PREL

      433    20388    3               CASE(%KZ#OTPFNC_BEL);

      434    20389                    /*
      435    20390                       Since VDH does not know how to make the bell sound on
      436    20391                       3270 devices, this event allows us to insert the proper
      437    20392                       commands for him.
      438    20393                    */
      439    20394    3                 IF KZ$3270DEV.CTR$->KZ$3270CTR.LIN$->KZ$LINCTX.PRO.SLAVE THEN

  20394   1 00028C  DCC7 0008                            LDB,B5   DEV$,AUTO
          1 00028E  CCC5 0002                            LDB,B4   2,B5
          1 000290  BCC4 0004                            LDB,B3   4,B4
          1 000292  89C3 004B                            CMZ      75,B3
          1 000294  0881 0006                            BAGE     s:20397,PREL

      440    20395    3                    SZ = SIZEC(KZ$OTPBFR)+4;

  20395   1 000296  6C14                                 LDV,R6   20
          1 000297  EF47 0020                            STR,R6   SZ,AUTO
          1 000299  0F81 0004                            B        s:20398,PREL

      441    20396    3                 ELSE
PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:116  
      442    20397    3                    SZ = SIZEC(KZ$OTPBFR)+2;

  20397   1 00029B  6C12                                 LDV,R6   18
          1 00029C  EF47 0020                            STR,R6   SZ,AUTO

      443    20398    3                 WCC.ALARM(SZ) = '1'B;     /* SET ALARM BIT                      */

  20398   1 00029E  CCC7 000A                            LDB,B4   BFR$,AUTO
          1 0002A0  B856                                 LDR,R3   R6
          1 0002A1  3003                                 SOL,R3   3
          1 0002A2  3E05                                 ADV,R3   5
          1 0002A3  8934                                 LBT      ,B4,R3

      444    20399    3               END;

  20399   1 0002A4  0F81 05B9                            B        s:20976,PREL

      445    20400        %EJECT;
PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:117  
      446    20401        /*   Transparent data */
      447    20402        /*   Accept a buuffer full of untranslated data to complete a transparent
      448    20403             write to the device - The data will not be converted to EBCDIC or
      449    20404             anything else, only the escape char will be placed at the begining.
      450    20405        */
      451    20406    2            CASE(%KV_USR_FNC_DAT);

      452    20407        /*  DATMOD isn't implemented by VDH yet.  Since 3270 only uses                */
      453    20408        /*  KV_USR_FNC_DAT to do transparent I/O, there's no ambiguity here.          */
      454    20409        /*         IF KV$USR_DAT.DATMOD=%KV#DATMOD_TRN THEN                           */
      455    20410        /*         DO;                                                                */
      456    20411    2              LSTBYT = KV$USR_DAT.DAT__.ADR$ -> BYT(KV$USR_DAT.DAT__.BYTX);

  20411   1 0002A6  DCC6 0001                            LDB,B5   1,B6
          1 0002A8  9846 0003                            LDR,R1   3,B6
          1 0002AA  E295                                 LLH,R6   ,B5,R1
          1 0002AB  EF47 0026                            STR,R6   LSTBYT,AUTO

      457    20412    2              IF LSTBYT ~= BITBIN(%KZ#COPY) AND

  20412   1 0002AD  E970 00F7                            CMR,R6   247,IMO
          1 0002AF  0901 0021                            BE       s:20438,PREL
          1 0002B1  6D6F                                 CMV,R6   111
          1 0002B2  0901 001E                            BE       s:20438,PREL
          1 0002B4  E970 00F5                            CMR,R6   245,IMO
          1 0002B6  0901 001A                            BE       s:20438,PREL
          1 0002B8  6D7E                                 CMV,R6   126
          1 0002B9  0901 0017                            BE       s:20438,PREL
          1 0002BB  E970 00F2                            CMR,R6   242,IMO
          1 0002BD  0901 0013                            BE       s:20438,PREL
          1 0002BF  E970 00F6                            CMR,R6   246,IMO
          1 0002C1  0901 000F                            BE       s:20438,PREL
          1 0002C3  6D6E                                 CMV,R6   110
          1 0002C4  0901 000C                            BE       s:20438,PREL
          1 0002C6  E970 00F1                            CMR,R6   241,IMO
          1 0002C8  0901 0008                            BE       s:20438,PREL
          1 0002CA  E970 00F3                            CMR,R6   243,IMO
PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:118  
          1 0002CC  0901 0004                            BE       s:20438,PREL

      458    20413    2                LSTBYT ~= BITBIN(%KZ#ERASE_ALL_UNPROTECTED) AND
      459    20414    2                LSTBYT ~= BITBIN(%KZ#ERASE_WRITE) AND
      460    20415    2                LSTBYT ~= BITBIN(%KZ#ERASE_WRITE_ALTERNATE) AND
      461    20416    2                LSTBYT ~= BITBIN(%KZ#READ_BUFFER) AND
      462    20417    2                LSTBYT ~= BITBIN(%KZ#READ_MODIFIED) AND
      463    20418    2                LSTBYT ~= BITBIN(%KZ#READ_MODIFIED_ALL) AND
      464    20419    2                LSTBYT ~= BITBIN(%KZ#WRITE) AND
      465    20420    2                LSTBYT ~= BITBIN(%KZ#WRITE_STRUCTURED_FIELD) THEN
      466    20421    3              DO;                /* Not a legal (or desired) 3270 command code   */

      467    20422    3                 RETURN;

  20422   1 0002CE  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

      468    20423    3                 END;
      469    20424
      470    20425        /*  This case was taken out for D00F when it was discovered that some         */
      471    20426        /*  (perhaps all?  perhaps all except ETX?) of these characters are really    */
      472    20427        /*  legal to send to 3270s, for things like "define print matrix", or other   */
      473    20428        /*  graphics-like stuff.  See star #26687.                                    */
      474    20429        /*            DO I = (KV$USR_DAT.DAT__.BYTX) TO                               */
      475    20430        /*              (KV$USR_DAT.DAT__.BYTX+KV$USR_DAT.DAT__.DATBYTSIZ-1);         */
      476    20431        /*               DO CASE (KV$USR_DAT.DAT__.ADR$->BYT (I));                    */
      477    20432        /*                                  \*    SOH STX ETX ITB ETB ESC ENQ     *\  */
      478    20433        /*                CASE (1  ,2  ,3  ,31 ,38 ,39 ,45 );                         */
      479    20434        /*                  RETURN;                                                   */
      480    20435        /*                END;                                                        */
      481    20436        /*               END;                                                         */
      482    20437
      483    20438    2              KZ$3270DEV.LSTOTPLINX = 0;

  20438   1 0002D1  CCC7 0008                            LDB,B4   DEV$,AUTO
          1 0002D3  8744 0019                            CL       25,B4

      484    20439    2              CALL DONE (%QUEUE_ON_TAIL) ALTRET(NO_MEMORY);
PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:119  

  20439   1 0002D5  DBF0 8000                            LAB,B5   -32768,IMO
          1 0002D7  DFC7 005A                            STB,B5   ENTR_FLG+3,AUTO
          1 0002D9  E3C0 0651                            LNJ,B6   s:0,PREL
          1 0002DB       05B1                            DC       s:20995,PREL

      485    20440    2              IF BFR$=ADDR(NIL) THEN

  20440   1 0002DC  8DC7 000A                            CMN      BFR$,AUTO
          1 0002DE  0981 0004                            BNE      s:20442,PREL

      486    20441    2                 CALL INITBFR ALTRET(NO_MEMORY);

  20441   1 0002E0  E3C0 092F                            LNJ,B6   s:0,PREL
          1 0002E2       05AA                            DC       s:20995,PREL

      487    20442    2              IF KZ$3270DEV.CTR$->KZ$3270CTR.LIN$->KZ$LINCTX.PRO.SLAVE THEN

  20442   1 0002E3  ECC7 0008                            LDB,B6   DEV$,AUTO
          1 0002E5  DCC6 0002                            LDB,B5   2,B6
          1 0002E7  CCC5 0004                            LDB,B4   4,B5
          1 0002E9  89C4 004B                            CMZ      75,B4
          1 0002EB  0881 0006                            BAGE     s:20445,PREL

      488    20443    2                 BYTX = SIZEC(KZ$OTPBFR) + 3;

  20443   1 0002ED  6C13                                 LDV,R6   19
          1 0002EE  EF47 0028                            STR,R6   BYTX,AUTO
          1 0002F0  0F81 0004                            B        s:20446,PREL

      489    20444    2              ELSE
      490    20445    2                 BYTX = SIZEC(KZ$OTPBFR) + 1; /* Set to 1 past the escape char   */

  20445   1 0002F2  6C11                                 LDV,R6   17
          1 0002F3  EF47 0028                            STR,R6   BYTX,AUTO

      491    20446    2              BYTSIZ = 2 * KZ_3270_BFRSIZ(KZ$OTPBFR.BFRSIZ) - BYTX;
PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:120  

  20446   1 0002F5  BCC7 000A                            LDB,B3   BFR$,AUTO
          1 0002F7  B843 0004                            LDR,R3   4,B3
          1 0002F9  D830 0000 0020  00                   LDR,R5   KZ_3270_BFRSIZ,R3
          1 0002FC  5001                                 SOL,R5   1
          1 0002FD  8255                                 NEG      R5
          1 0002FE  DA56                                 ADD,R5   R6
          1 0002FF  8255                                 NEG      R5
          1 000300  DF47 0029                            STR,R5   BYTSIZ,AUTO

      492    20447        /*
      493    20448                 Old data has been sent and a new buffer initialized with just
      494    20449                 an escape character, now we'll expand that buffer until it's
      495    20450                 big enough to hold all the transparent data or if that's not
      496    20451                 possible we'll cancel the request.
      497    20452        */
      498    20453    2   CHKSIZ:
      499    20454    2              K = KV$USR_DAT.DAT__.DATBYTSIZ;

  20454   1 000302  ACC7 0006            CHKSIZ          LDB,B2   PARM$,AUTO
          1 000304  C842 0004                            LDR,R4   4,B2
          1 000306  CF47 0025                            STR,R4   K,AUTO

      500    20455    2              IF K >= BYTSIZ THEN

  20455   1 000308  4801 0063                            BLZ,R4   s:20488,PREL
          1 00030A  C955                                 CMR,R4   R5
          1 00030B  0201 0060                            BL       s:20488,PREL

      501    20456    3              DO;

      502    20457    3                 IF KZ$3270DEV.PRINTER THEN

  20457   1 00030D  82C6 0012                            LB,'0800'X        18,B6
  20457   1 00030F       0800
          1 000310  0581 003F                            BBF      s:20477,PREL

PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:121  
      503    20458    4                 DO;             /* BFR already max size - can't service request */

      504    20459    4   REL_BFR:
      505    20460    4                    T$ = BFR$;

  20460   1 000312  ECC7 000A            REL_BFR         LDB,B6   BFR$,AUTO
          1 000314  EFC7 000E                            STB,B6   T$,AUTO

      506    20461    4                    BFR$ = ADDR(NIL); BYTX = 0; BYTSIZ = 0;

  20461   1 000316  DB80 0000 0000                       LAB,B5   0
          1 000319  DFC7 000A                            STB,B5   BFR$,AUTO

  20461   1 00031B  8747 0028                            CL       BYTX,AUTO

  20461   1 00031D  8747 0029                            CL       BYTSIZ,AUTO

      507    20462                         %DISABLE(INHLVL=KH_INHLVL);

  20463   1 00031F  E800 0000 0000  xsym                 LDR,R6   KH_INHLVL
          1 000322  EF47 003C                            STR,R6   DISABLE_LEVEL,AUTO

  20464   1 000324  CBC7 003C                            LAB,B4   DISABLE_LEVEL,AUTO
          1 000326  CFC7 0062                            STB,B4   C_MRD+1,AUTO
          1 000328  BBC7 0062                            LAB,B3   C_MRD+1,AUTO
          1 00032A  CBF0 0100                            LAB,B4   256,IMO
          1 00032C  E380 0000 0000  xent                 LNJ,B6   KHI$DISABLE
          1 00032F       0001                            DC       s:20466,PREL

      508    20466    4                    CALL KZV$RELOTPBFR(KZ$3270DEV,T$);

  20466   1 000330  EBC7 000E                            LAB,B6   T$,AUTO
          1 000332  EFC7 0064                            STB,B6   C_MRD+3,AUTO
          1 000334  DCC7 0008                            LDB,B5   DEV$,AUTO
          1 000336  DFC7 0062                            STB,B5   C_MRD+1,AUTO
          1 000338  BBC7 0062                            LAB,B3   C_MRD+1,AUTO
          1 00033A  CBF0 0200                            LAB,B4   512,IMO
PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:122  
          1 00033C  E380 0000 0000  xent                 LNJ,B6   KZV$RELOTPBFR
          1 00033F       0001                            DC       s:20468,PREL

      509    20467                         %ENABLE(INHLVL=KH_INHLVL);

  20468   1 000340  E847 003C                            LDR,R6   DISABLE_LEVEL,AUTO
          1 000342  E900 0000 0000  xsym                 CMR,R6   KH_INHLVL
          1 000345  0901 0007                            BE       s:20473,PREL

  20470   1 000347  CBF0 0000                            LAB,B4   0,IMO
          1 000349  E380 0000 0000  xent                 LNJ,B6   KHI$ENABLE
          1 00034C       0001                            DC       s:20473,PREL

      510    20473    4                    RETURN;

  20473   1 00034D  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

      511    20474    4                    END;
      512    20475    3                 ELSE
      513    20476    4                 DO UNTIL( BYTSIZ > K );

      514    20477    4                    IF KZ$OTPBFR.BFRSIZ <= KZ$3270DEV.OTPBFRSIZ THEN

  20477   1 000350  ECC7 000A                            LDB,B6   BFR$,AUTO
          1 000352  DCC7 0008                            LDB,B5   DEV$,AUTO
          1 000354  E846 0004                            LDR,R6   4,B6
          1 000356  E945 0018                            CMR,R6   24,B5
          1 000358  0301 0006                            BG       s:20480,PREL

      515    20478    4                       CALL EXP_BFR ALTRET(NO_MEMORY);

  20478   1 00035A  E3C0 09CB                            LNJ,B6   s:0,PREL
          1 00035C       0530                            DC       s:20995,PREL
          1 00035D  0F81 0003                            B        s:20482,PREL

      516    20479    5                    ELSE DO;               /* Can't get big enough buffer        */

PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:123  
      517    20480    5                       GOTO REL_BFR;

  20480   1 00035F  0F81 FFB2                            B        s:20458,PREL

      518    20481    5                       END;
      519    20482    4                    K = KV$USR_DAT.DAT__.DATBYTSIZ;

  20482   1 000361  ECC7 0006                            LDB,B6   PARM$,AUTO
          1 000363  E846 0004                            LDR,R6   4,B6
          1 000365  EF47 0025                            STR,R6   K,AUTO

      520    20483    4                    END;                   /* DO UNTIL                           */

  20483   1 000367  6801 0004                            BLZ,R6   s:20488,PREL
          1 000369  E947 0029                            CMR,R6   BYTSIZ,AUTO
          1 00036B  02E5                                 BGE      s:20477,SPREL

      521    20484    3                 END;                      /* K > BYTSIZ                         */

      522    20485                 /*
      523    20486                       Move data into the output buffer and send it
      524    20487                 */
      525    20488    2              CALL INSERT(BFR$->CHR1,BYTX,K,

  20488   1 00036C  ECC7 0006                            LDB,B6   PARM$,AUTO
          1 00036E  DCC6 0001                            LDB,B5   1,B6
          1 000370  E846 0003                            LDR,R6   3,B6
          1 000372  AB85                                 LAB,B2   ,B5
          1 000373  A856                                 LDR,R2   R6
          1 000374  E847 0025                            LDR,R6   K,AUTO
          1 000376  BCC7 000A                            LDB,B3   BFR$,AUTO
          1 000378  B847 0028                            LDR,R3   BYTX,AUTO
          1 00037A  0008                                 MMM

      526    20489    2                SUBSTR(KV$USR_DAT.DAT__.ADR$->CHR1,KV$USR_DAT.DAT__.BYTX,K));
      527    20490    2              BYTX = BYTX + K;

PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:124  
  20490   1 00037B  E847 0028                            LDR,R6   BYTX,AUTO
          1 00037D  EA47 0025                            ADD,R6   K,AUTO
          1 00037F  EF47 0028                            STR,R6   BYTX,AUTO

      528    20491    2              BYTSIZ = BYTSIZ - K;

  20491   1 000381  D847 0029                            LDR,R5   BYTSIZ,AUTO
          1 000383  D247 0025                            SUB,R5   K,AUTO
          1 000385  DF47 0029                            STR,R5   BYTSIZ,AUTO

      529    20492    2              KZ$OTPBFR.FLAGS.TRANS# = '1'B;

  20492   1 000387  ECC7 000A                            LDB,B6   BFR$,AUTO
          1 000389  8946 0002                            LBT,'0001'X       2,B6
          1 00038B       0001

      530    20493    2              CALL DONE (%QUEUE_ON_TAIL) ALTRET(NO_MEMORY);

  20493   1 00038C  EBF0 8000                            LAB,B6   -32768,IMO
          1 00038E  EFC7 005A                            STB,B6   ENTR_FLG+3,AUTO
          1 000390  E3C0 059A                            LNJ,B6   s:0,PREL
          1 000392       04FA                            DC       s:20995,PREL

      531    20494    2              %KV_VDI.OTPBFR_.ADR$=ADDR(NIL);

  20494   1 000393  EC80 0000 0000  xsym                 LDB,B6   KV$PTR$
          1 000396  DC86                                 LDB,B5   ,B6
          1 000397  CB80 0000 0000                       LAB,B4   0
          1 00039A  CFC5 000A                            STB,B4   10,B5

      532    20495    2              %KV_VDI.OTPBFR_.BYTX=0;

  20495   1 00039C  DC86                                 LDB,B5   ,B6
          1 00039D  8745 000C                            CL       12,B5

      533    20496    2              %KV_VDI.OTPBFR_.BYTSIZ=0;

PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:125  
  20496   1 00039F  DC86                                 LDB,B5   ,B6
          1 0003A0  8745 000D                            CL       13,B5

      534    20497    2              RETURN;                      /* Normal return                      */

  20497   1 0003A2  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

      535    20498        /*            END;                      \* Transparant write              *\  */
      536    20499        %EJECT;
PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:126  
      537    20500        /* Position */
      538    20501
      539    20502    2            CASE(%KV_USR_FNC_PST);

      540    20503
      541    20504    2              PHSPST_LIN = KV$USR_PST.PHSPST.LIN;

  20504   1 0003A5  E846 0001                            LDR,R6   1,B6
          1 0003A7  EF47 0013                            STR,R6   PHSPST_LIN,AUTO

      542    20505
      543    20506    2              IF NOT KZ$3270DEV.PRINTER THEN

  20506   1 0003A9  DCC7 0008                            LDB,B5   DEV$,AUTO
          1 0003AB  82C5 0012                            LB,'0800'X        18,B5
          1 0003AD       0800
          1 0003AE  0501 0040                            BBT      s:20536,PREL

      544    20507    3              DO;           /* Handle  positoning for standard display station   */

      545    20508              /*
      546    20509                Request to position device. This is done by inserting a
      547    20510                set buffer address command into the device's data stream
      548    20511              */
      549    20512
      550    20513    4                 IF KV$USR_PST.PHSPSTMOD=%KV_PHSPSTMOD_BLN THEN DO; /* Blank     */

  20513   1 0003B0  D2C6 0003                            LLH,R5   3,B6
          1 0003B2  5D02                                 CMV,R5   2
          1 0003B3  0981 0030                            BNE      s:20527,PREL

      551    20514    4                    ROW = PHSPST_LIN;

  20514   1 0003B5  EF47 0015                            STR,R6   ROW,AUTO

      552    20515    4                    COL=KV$USR_PST.PHSPST.CLM-1;

PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:127  
  20515   1 0003B7  D846 0002                            LDR,R5   2,B6
          1 0003B9  5EFF                                 ADV,R5   -1
          1 0003BA  DF47 0016                            STR,R5   COL,AUTO

      553    20516    5                    IF COL=0 THEN DO;

  20516   1 0003BC  5981 0007                            BNEZ,R5  s:20520,PREL

      554    20517    5                       ROW=ROW-1;          /* Back up to end of prev line        */

  20517   1 0003BE  88C7 0015                            DEC      ROW,AUTO

      555    20518    5                       COL=MAX_COL;

  20518   1 0003C0  D847 001F                            LDR,R5   MAX_COL,AUTO
          1 0003C2  DF47 0016                            STR,R5   COL,AUTO

      556    20519    5                       END;

      557    20520    4                    IF ROW<%KV_MRD.DVCLIN OR

  20520   1 0003C4  CC80 0000 0000  xsym                 LDB,B4   KV$PTR$
          1 0003C7  BCC4 0008                            LDB,B3   8,B4
          1 0003C9  C847 0015                            LDR,R4   ROW,AUTO
          1 0003CB  C943 001D                            CMR,R4   29,B3
          1 0003CD  0801 0016                            BAL      s:20527,PREL
          1 0003CF  0981 0007                            BNE      s:20523,PREL
          1 0003D1  5801 0012                            BLZ,R5   s:20527,PREL
          1 0003D3  D943 001E                            CMR,R5   30,B3
          1 0003D5  0201 000E                            BL       s:20527,PREL

      558    20521    4                      (ROW=%KV_MRD.DVCLIN AND COL<%KV_MRD.DVCCLM) THEN
      559    20522    4                       GOTO POS_MOV;       /* Backing up - don't blank           */
      560    20523    4                    IF ROW>MAX_ROW THEN

  20523   1 0003D7  C947 001E                            CMR,R4   MAX_ROW,AUTO
          1 0003D9  0A81 0005                            BALE     s:20525,PREL
PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:128  

      561    20524    4                       ROW=MAX_ROW;

  20524   1 0003DB  C847 001E                            LDR,R4   MAX_ROW,AUTO
          1 0003DD  CF47 0015                            STR,R4   ROW,AUTO

      562    20525    4                    CALL ERSCUR_BLNKS ALTRET(NO_MEMORY);/* Position using blanks */

  20525   1 0003DF  E3C0 0C6A                            LNJ,B6   s:0,PREL
          1 0003E1       04AB                            DC       s:20995,PREL

      563    20526    4                    END;

  20526   1 0003E2  0F81 0153                            B        s:20675,PREL

      564    20527    4                 ELSE DO;

      565    20528    4   POS_MOV:         ROW = PHSPST_LIN;

  20528   1 0003E4  EF47 0015            POS_MOV         STR,R6   ROW,AUTO

      566    20529    4                    COL=KV$USR_PST.PHSPST.CLM;

  20529   1 0003E6  D846 0002                            LDR,R5   2,B6
          1 0003E8  DF47 0016                            STR,R5   COL,AUTO

      567    20530    4                    CALL SETBUFADR ALTRET(NO_MEMORY);

  20530   1 0003EA  E3C0 0A89                            LNJ,B6   s:0,PREL
          1 0003EC       04A0                            DC       s:20995,PREL

      568    20531    4                    END;

      569    20532
      570    20533    3                 END;                      /* Positioning for display station.   */

  20533   1 0003ED  0F81 0148                            B        s:20675,PREL
PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:129  

      571    20534    3              ELSE DO;           /*  Handle positioning for line printer device. */

      572    20535
      573    20536    3                 CUR_ROW = %KV_MRD.DVCLIN;

  20536   1 0003EF  CC80 0000 0000  xsym                 LDB,B4   KV$PTR$
          1 0003F2  BCC4 0008                            LDB,B3   8,B4
          1 0003F4  D843 001D                            LDR,R5   29,B3
          1 0003F6  DF47 001A                            STR,R5   CUR_ROW,AUTO

      574    20537    3                 ROW = PHSPST_LIN;

  20537   1 0003F8  EF47 0015                            STR,R6   ROW,AUTO

      575    20538    3                 CUR_COL = %KV_MRD.DVCCLM;

  20538   1 0003FA  BCC4 0008                            LDB,B3   8,B4
          1 0003FC  C843 001E                            LDR,R4   30,B3
          1 0003FE  CF47 001B                            STR,R4   CUR_COL,AUTO

      576    20539    3                 COL = KV$USR_PST.PHSPST.CLM;

  20539   1 000400  B846 0002                            LDR,R3   2,B6
          1 000402  BF47 0016                            STR,R3   COL,AUTO

      577    20540    3                 TOPPAGCNT = KV$USR_PST.TOPPAGCNT;

  20540   1 000404  A806                                 LDR,R2   ,B6
          1 000405  A570 00FF                            AND,R2   255,IMO
          1 000407  AF47 0014                            STR,R2   TOPPAGCNT,AUTO

      578    20541
      579    20542           /*
      580    20543              1 - Figure out how much space in buffer is required to store
      581    20544                  the neccessary positon commands plus a new row of data.
      582    20545                  If not enough room in buffer then send current buffer and
PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:130  
      583    20546                  initialize a new buffer.
      584    20547              Set NL= Number of NL commands to new row.
      585    20548           */
      586    20549    3                 NL = ((TOPPAGCNT * MAX_ROW) - CUR_ROW) + ROW;

  20549   1 000409  AB47 001E                            MUL,R2   MAX_ROW,AUTO
          1 00040B  A255                                 SUB,R2   R5
          1 00040C  AA56                                 ADD,R2   R6
          1 00040D  AF47 0022                            STR,R2   NL,AUTO

      587    20550
      588    20551    3                 IF NL > 0 THEN

  20551   1 00040F  2A81 000B                            BLEZ,R2  s:20557,PREL

      589    20552    4                 DO;                       /* We are positioning to a new line   */

      590    20553    4                    J = NL + MAX_COL + 1;

  20553   1 000411  AA47 001F                            ADD,R2   MAX_COL,AUTO
          1 000413  2E01                                 ADV,R2   1
          1 000414  AF47 0024                            STR,R2   J,AUTO

      591    20554    4                    COL2 = COL-1;          /* Num of spaces needed for filler    */

  20554   1 000416  3EFF                                 ADV,R3   -1
          1 000417  BF47 0019                            STR,R3   COL2,AUTO

      592    20555    4                    END;

  20555   1 000419  0F81 0018                            B        s:20568,PREL

      593    20556    4                 ELSE DO;        /*  We are only changing column on current line */

      594    20557    4                    IF COL > CUR_COL THEN

  20557   1 00041B  B954                                 CMR,R3   R4
PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:131  
          1 00041C  0A81 000D                            BALE     s:20563,PREL

      595    20558    5                    DO;          /* Move position out to right COL-CUR_COL cols  */

      596    20559    5                       J = (MAX_COL-CUR_COL) + 1;

  20559   1 00041E  C247 001F                            SUB,R4   MAX_COL,AUTO
          1 000420  8254                                 NEG      R4
          1 000421  4E01                                 ADV,R4   1
          1 000422  CF47 0024                            STR,R4   J,AUTO

      597    20560    5                       COL2 = COL - CUR_COL;

  20560   1 000424  B247 001B                            SUB,R3   CUR_COL,AUTO
          1 000426  BF47 0019                            STR,R3   COL2,AUTO

      598    20561    5                       END;

  20561   1 000428  0F81 0009                            B        s:20568,PREL

      599    20562    5                    ELSE DO;               /* Back space on current line         */

      600    20563    5                       J = MAX_COL + 1;

  20563   1 00042A  9847 001F                            LDR,R1   MAX_COL,AUTO
          1 00042C  1E01                                 ADV,R1   1
          1 00042D  9F47 0024                            STR,R1   J,AUTO

      601    20564    5                       COL2 = COL - 1;

  20564   1 00042F  3EFF                                 ADV,R3   -1
          1 000430  BF47 0019                            STR,R3   COL2,AUTO

      602    20565    5                       END;

      603    20566    4                    END;

PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:132  
      604    20567
      605    20568    3                 IF BFR$ = ADDR(NIL) THEN

  20568   1 000432  8DC7 000A                            CMN      BFR$,AUTO
          1 000434  0981 0004                            BNE      s:20571,PREL

      606    20569    3                    CALL INITBFR ALTRET(NO_MEMORY);

  20569   1 000436  E3C0 07D9                            LNJ,B6   s:0,PREL
          1 000438       0454                            DC       s:20995,PREL

      607    20570
      608    20571    3                 IF J > BYTSIZ THEN   /* not enough room in buf to store data    */

  20571   1 000439  E847 0024                            LDR,R6   J,AUTO
          1 00043B  6801 001B                            BLZ,R6   s:20595,PREL
          1 00043D  E947 0029                            CMR,R6   BYTSIZ,AUTO
          1 00043F  0381 0017                            BLE      s:20595,PREL

      609    20572    3                    IF KZ$3270DEV.LSTOTPLINX = 0 THEN

  20572   1 000441  ECC7 0008                            LDB,B6   DEV$,AUTO
          1 000443  D846 0019                            LDR,R5   25,B6
          1 000445  5981 000A                            BNEZ,R5  s:20587,PREL

      610    20573                             /* Our buffers are not large enough to handle the
      611    20574                             apparent large amount of overprint data. */
      612    20575    3                       CALL ERRLOG(%E$DATOVRFLW);

  20575   1 000447  DBF0 00CE                            LAB,B5   206,IMO
          1 000449  DFC7 0040                            STB,B5   DISABLE_LEVEL+4,AUTO
          1 00044B  E3C0 0DE4                            LNJ,B6   s:0,PREL
          1 00044D       0001                            DC       s:20575+7,PREL
          1 00044E  0F81 0008                            B        s:20595,PREL

      613    20576    4                    ELSE DO;

PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:133  
      614    20577                   /* Send all data up to the last line to the device, copy
      615    20578                      the most recent line into a new buffer. This is incase any
      616    20579                      overprinting is to be done, it will all come out in the
      617    20580                      same data buffer.
      618    20581                       EM chan will be inserted by DONE in proper pos (BYTX) and
      619    20582                       since this is a printer device - DONE will also allocate
      620    20583                       a new buffer complete with the last line of data from
      621    20584                       VDH already stored in it .
      622    20585                    */
      623    20586
      624    20587    4                       CALL DONE (%QUEUE_ON_TAIL) ALTRET(NO_MEMORY);

  20587   1 000450  DBF0 8000                            LAB,B5   -32768,IMO
          1 000452  DFC7 005A                            STB,B5   ENTR_FLG+3,AUTO
          1 000454  E3C0 04D6                            LNJ,B6   s:0,PREL
          1 000456       0436                            DC       s:20995,PREL

      625    20588    4                       END;

      626    20589           /*
      627    20590              2 - Check if affected by a full line printed - either as the
      628    20591                  last thing printed or being printed now. A NL (new line)
      629    20592                  command cannot immediatly follow a full print line, and a
      630    20593                  full print line gives the printer an implicit NL command.
      631    20594           */
      632    20595    3                 IF CUR_COL >= MAX_COL THEN

  20595   1 000457  E847 001B                            LDR,R6   CUR_COL,AUTO
          1 000459  E947 001F                            CMR,R6   MAX_COL,AUTO
          1 00045B  0801 000B                            BAL      s:20601,PREL

      633    20596    4                 DO;                       /* CURRENTLY AT END OF LINE           */

      634    20597    4                    KZ$3270DEV.LSTOPR = %KZ#LSTOPR_FULL;

  20597   1 00045D  5C01                                 LDV,R5   1
          1 00045E  ECC7 0008                            LDB,B6   DEV$,AUTO
PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:134  
          1 000460  DAC6 0016                            SRM,R5,'00FF'X    22,B6
          1 000462       00FF

      635    20598    4                    NL = NL-1;             /* One less NL command is required    */

  20598   1 000463  88C7 0022                            DEC      NL,AUTO

      636    20599    4                    END;

  20599   1 000465  0F81 001A                            B        s:20616,PREL

      637    20600    4                 ELSE DO;

      638    20601    4                    IF KZ$3270DEV.LSTOPR = %KZ#LSTOPR_FULL THEN

  20601   1 000467  ECC7 0008                            LDB,B6   DEV$,AUTO
          1 000469  D846 0016                            LDR,R5   22,B6
          1 00046B  D570 00FF                            AND,R5   255,IMO
          1 00046D  5D01                                 CMV,R5   1
          1 00046E  0981 0011                            BNE      s:20616,PREL

      639    20602    5                    DO;               /* LAST LINE OF OUTPUT WAS A FULL LINE     */

      640    20603    5                       KZ$3270DEV.LSTOPR = 0;

  20603   1 000470  8846 0016                            LBF,'00FF'X       22,B6
  20603   1 000472       00FF

      641    20604    5                       IF CUR_COL = 1 THEN

  20604   1 000473  6D01                                 CMV,R6   1
          1 000474  0981 000B                            BNE      s:20616,PREL

      642    20605    6                       DO;  /* Pad with a blank to prevent NL after full line    */

      643    20606    6                          BFR$->BYT(BYTX) = %KZ#EBDC_SPACE; /* UBIN VALUE OF SPACE */

PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:135  
  20606   1 000476  5C40                                 LDV,R5   64
          1 000477  DCC7 000A                            LDB,B5   BFR$,AUTO
          1 000479  B847 0028                            LDR,R3   BYTX,AUTO
          1 00047B  D7B5                                 STH,R5   ,B5,R3

      644    20607    6                          BYTX = BYTX + 1;

  20607   1 00047C  8AC7 0028                            INC      BYTX,AUTO

      645    20608    6                          BYTSIZ = BYTSIZ-1;

  20608   1 00047E  88C7 0029                            DEC      BYTSIZ,AUTO

      646    20609    6                          END;

      647    20610    5                       END;

      648    20611    4                    END;

      649    20612           /*
      650    20613              3 - Fill in the required new line printer commands to position
      651    20614                  to the new page and row.
      652    20615           */
      653    20616    3                 IF KZ$3270DEV.PRO.FF THEN

  20616   1 000480  82C6 0011                            LB,'4000'X        17,B6
  20616   1 000482       4000
          1 000483  0581 003C                            BBF      s:20638,PREL

      654    20617    4                 DO;

      655    20618    4                    IF TOPPAGCNT ~= 0 THEN /* Insert NL                          */

  20618   1 000485  D847 0014                            LDR,R5   TOPPAGCNT,AUTO
          1 000487  5901 0015                            BEZ,R5   s:20629,PREL

      656    20619    5                    DO;
PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:136  

      657    20620    5                       BFR$->BYT(BYTX)=BITBIN(%KZ#NEW_LINE);

  20620   1 000489  4C15                                 LDV,R4   21
          1 00048A  DCC7 000A                            LDB,B5   BFR$,AUTO
          1 00048C  B847 0028                            LDR,R3   BYTX,AUTO
          1 00048E  C7B5                                 STH,R4   ,B5,R3

      658    20621    5                       BYTX=BYTX+1;

  20621   1 00048F  8AC7 0028                            INC      BYTX,AUTO

      659    20622    5                       BYTSIZ=BYTSIZ-1;

  20622   1 000491  88C7 0029                            DEC      BYTSIZ,AUTO

      660    20623    5                       IF CUR_ROW=MAX_ROW THEN

  20623   1 000493  B847 001A                            LDR,R3   CUR_ROW,AUTO
          1 000495  B947 001E                            CMR,R3   MAX_ROW,AUTO
          1 000497  0981 0005                            BNE      s:20629,PREL

      661    20624    6                       DO;

      662    20625    6                          TOPPAGCNT = TOPPAGCNT - 1;

  20625   1 000499  88C7 0014                            DEC      TOPPAGCNT,AUTO

      663    20626    6                          NL=NL-1;

  20626   1 00049B  88C7 0022                            DEC      NL,AUTO

      664    20627    6                          END;

      665    20628    5                       END;

      666    20629    5                    DO J = 1 TO TOPPAGCNT; /* Use FORM FEED if device can use it */
PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:137  

  20629   1 00049D  5C01                                 LDV,R5   1
          1 00049E  DF47 0024                            STR,R5   J,AUTO
          1 0004A0  0F81 0019                            B        s:20635+2,PREL

      667    20630    5                       NL = (NL - MAX_ROW) + CUR_ROW -1;

  20630   1 0004A2  E847 0022                            LDR,R6   NL,AUTO
          1 0004A4  E247 001E                            SUB,R6   MAX_ROW,AUTO
          1 0004A6  EA47 001A                            ADD,R6   CUR_ROW,AUTO
          1 0004A8  6EFF                                 ADV,R6   -1
          1 0004A9  EF47 0022                            STR,R6   NL,AUTO

      668    20631    5                       BFR$->BYT(BYTX) = BITBIN(%KZ#FORMFEED);

  20631   1 0004AB  5C0C                                 LDV,R5   12
          1 0004AC  ECC7 000A                            LDB,B6   BFR$,AUTO
          1 0004AE  B847 0028                            LDR,R3   BYTX,AUTO
          1 0004B0  D7B6                                 STH,R5   ,B6,R3

      669    20632    5                       BYTX = BYTX + 1;

  20632   1 0004B1  8AC7 0028                            INC      BYTX,AUTO

      670    20633    5                       BYTSIZ = BYTSIZ - 1;

  20633   1 0004B3  88C7 0029                            DEC      BYTSIZ,AUTO

      671    20634    5                       CUR_ROW = 1;

  20634   1 0004B5  4C01                                 LDV,R4   1
          1 0004B6  CF47 001A                            STR,R4   CUR_ROW,AUTO

      672    20635    5                       END;

  20635   1 0004B8  8AC7 0024                            INC      J,AUTO
          1 0004BA  E847 0024                            LDR,R6   J,AUTO
PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:138  
          1 0004BC  6866                                 BLZ,R6   s:20630,SPREL
          1 0004BD  E947 0014                            CMR,R6   TOPPAGCNT,AUTO
          1 0004BF  03E3                                 BLE      s:20630,SPREL

      673    20636    4                    END;

      674    20637
      675    20638    4                 DO J = 1 TO NL;

  20638   1 0004C0  6C01                                 LDV,R6   1
          1 0004C1  EF47 0024                            STR,R6   J,AUTO
          1 0004C3  0F81 000D                            B        s:20642+2,PREL

      676    20639    4                    BFR$->BYT(BYTX) = BITBIN(%KZ#NEW_LINE);

  20639   1 0004C5  6C15                                 LDV,R6   21
          1 0004C6  ECC7 000A                            LDB,B6   BFR$,AUTO
          1 0004C8  B847 0028                            LDR,R3   BYTX,AUTO
          1 0004CA  E7B6                                 STH,R6   ,B6,R3

      677    20640    4                    BYTX = BYTX + 1;

  20640   1 0004CB  8AC7 0028                            INC      BYTX,AUTO

      678    20641    4                    BYTSIZ = BYTSIZ-1;

  20641   1 0004CD  88C7 0029                            DEC      BYTSIZ,AUTO

      679    20642    4                    END;

  20642   1 0004CF  8AC7 0024                            INC      J,AUTO
          1 0004D1  E847 0024                            LDR,R6   J,AUTO
          1 0004D3  E947 0022                            CMR,R6   NL,AUTO
          1 0004D5  0AF0                                 BALE     s:20639,SPREL

      680    20643    3                 IF NL > 0 OR TOPPAGCNT > 0 THEN

PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:139  
  20643   1 0004D6  D847 0022                            LDR,R5   NL,AUTO
          1 0004D8  5A01 0005                            BGZ,R5   s:20644,PREL
          1 0004DA  C847 0014                            LDR,R4   TOPPAGCNT,AUTO
          1 0004DC  4901 0009                            BEZ,R4   s:20646,PREL

      681    20644    3                    KZ$3270DEV.LSTOTPLINX = BYTX; /* Save pos of end of last line */

  20644   1 0004DE  ECC7 0008                            LDB,B6   DEV$,AUTO
          1 0004E0  C847 0028                            LDR,R4   BYTX,AUTO
          1 0004E2  CF46 0019                            STR,R4   25,B6
          1 0004E4  0F81 003B                            B        s:20668,PREL

      682    20645    3                 ELSE
      683    20646    3                    IF CUR_COL > COL THEN  /* BACK POSITION ON CURR LINE         */

  20646   1 0004E6  B847 001B                            LDR,R3   CUR_COL,AUTO
          1 0004E8  B947 0016                            CMR,R3   COL,AUTO
          1 0004EA  0A81 0035                            BALE     s:20668,PREL

      684    20647    4                    DO;                    /* BACKSPACE ON LINE                  */

      685    20648    4                       IF CUR_COL > MAX_COL THEN

  20648   1 0004EC  B947 001F                            CMR,R3   MAX_COL,AUTO
          1 0004EE  0A81 0005                            BALE     s:20653,PREL

      686    20649    5                       DO;

      687    20650    5                          BYTX = BYTX - 1;

  20650   1 0004F0  88C7 0028                            DEC      BYTX,AUTO

      688    20651    5                          BYTSIZ = BYTSIZ + 1;

  20651   1 0004F2  8AC7 0029                            INC      BYTSIZ,AUTO

      689    20652    5                          END;
PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:140  

      690    20653    4                       IF KZ$3270DEV.PRO.OVRPRT.CR THEN

  20653   1 0004F4  ECC7 0008                            LDB,B6   DEV$,AUTO
          1 0004F6  82C6 0011                            LB,'2000'X        17,B6
          1 0004F8       2000
          1 0004F9  0581 0009                            BBF      s:20655,PREL

      691    20654    4                          BFR$ -> BYT(BYTX) = BITBIN(%KZ#CR); /* CARRIAGE RTN    */

  20654   1 0004FB  2C0D                                 LDV,R2   13
          1 0004FC  DCC7 000A                            LDB,B5   BFR$,AUTO
          1 0004FE  9847 0028                            LDR,R1   BYTX,AUTO
          1 000500  A795                                 STH,R2   ,B5,R1
          1 000501  0F81 001A                            B        s:20662,PREL

      692    20655    4                       ELSE IF KZ$3270DEV.PRO.OVRPRT.SI THEN

  20655   1 000503  82C6 0011                            LB,'1000'X        17,B6
  20655   1 000505       1000
          1 000506  0581 000A                            BBF      s:20658,PREL

      693    20656    4                             BFR$ -> BYT(BYTX) = BITBIN(%KZ#SI); /* SUPPRESS INDEX */

  20656   1 000508  A870 00BF                            LDR,R2   191,IMO
          1 00050A  DCC7 000A                            LDB,B5   BFR$,AUTO
          1 00050C  9847 0028                            LDR,R1   BYTX,AUTO
          1 00050E  A795                                 STH,R2   ,B5,R1
          1 00050F  0F81 000C                            B        s:20662,PREL

      694    20657    5                          ELSE DO;         /* Device not capable of over strike  */

      695    20658    5                             BFR$ -> BYT(BYTX) = BITBIN(%KZ#NEW_LINE);

  20658   1 000511  2C15                                 LDV,R2   21
          1 000512  DCC7 000A                            LDB,B5   BFR$,AUTO
          1 000514  9847 0028                            LDR,R1   BYTX,AUTO
PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:141  
          1 000516  A795                                 STH,R2   ,B5,R1

      696    20659    5                             PHSPST_LIN = PHSPST_LIN + 1;

  20659   1 000517  8AC7 0013                            INC      PHSPST_LIN,AUTO

      697    20660    5                             KZ$3270DEV.LSTOTPLINX = BYTX + 1;

  20660   1 000519  1E01                                 ADV,R1   1
          1 00051A  9F46 0019                            STR,R1   25,B6

      698    20661    5                             END;

      699    20662    4                       BYTX = BYTX + 1;

  20662   1 00051C  8AC7 0028                            INC      BYTX,AUTO

      700    20663    4                       BYTSIZ = BYTSIZ - 1;

  20663   1 00051E  88C7 0029                            DEC      BYTSIZ,AUTO

      701    20664    4                       END;                /* BACKSPACE ON LINE                  */

      702    20665        /*
      703    20666              4 - Space fill to specified column.
      704    20667        */
      705    20668    4                 DO J = 1 TO COL2;

  20668   1 000520  6C01                                 LDV,R6   1
          1 000521  EF47 0024                            STR,R6   J,AUTO
          1 000523  0F81 000D                            B        s:20672+2,PREL

      706    20669    4                    BFR$->BYT(BYTX) = %KZ#EBDC_SPACE; /* UBIN VALUE OF SPACE     */

  20669   1 000525  6C40                                 LDV,R6   64
          1 000526  ECC7 000A                            LDB,B6   BFR$,AUTO
          1 000528  B847 0028                            LDR,R3   BYTX,AUTO
PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:142  
          1 00052A  E7B6                                 STH,R6   ,B6,R3

      707    20670    4                    BYTX = BYTX + 1;

  20670   1 00052B  8AC7 0028                            INC      BYTX,AUTO

      708    20671    4                    BYTSIZ = BYTSIZ-1;

  20671   1 00052D  88C7 0029                            DEC      BYTSIZ,AUTO

      709    20672    4                    END;

  20672   1 00052F  8AC7 0024                            INC      J,AUTO
          1 000531  E847 0024                            LDR,R6   J,AUTO
          1 000533  E947 0019                            CMR,R6   COL2,AUTO
          1 000535  0AF0                                 BALE     s:20669,SPREL

      710    20673    3                 END;                      /* Handle printer position call       */

      711    20674
      712    20675    2              %KV_MRD.DVCLIN = PHSPST_LIN;

  20675   1 000536  EC80 0000 0000  xsym                 LDB,B6   KV$PTR$
          1 000539  DCC6 0008                            LDB,B5   8,B6
          1 00053B  E847 0013                            LDR,R6   PHSPST_LIN,AUTO
          1 00053D  EF45 001D                            STR,R6   29,B5

      713    20676    2              %KV_MRD.DVCCLM=KV$USR_PST.PHSPST.CLM;

  20676   1 00053F  DCC6 0008                            LDB,B5   8,B6
          1 000541  CCC7 0006                            LDB,B4   PARM$,AUTO
          1 000543  D844 0002                            LDR,R5   2,B4
          1 000545  DF45 001E                            STR,R5   30,B5
          1 000547  0F81 0316                            B        s:20976,PREL

      714    20677
      715    20678        %EJECT;
PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:143  
      716    20679        /* Set attribute */
      717    20680        /*
      718    20681           VDH asking us to set device attributes for a particular field.
      719    20682           This is done by inserting a start field command into the data
      720    20683           stream followed by the attribute byte. We may change display
      721    20684           intensity, make it write protected, make it numeric only and
      722    20685           make it selector pen dectectable, all by seting bits in the
      723    20686           attribute character.
      724    20687        */
      725    20688    2            CASE(%KV_USR_FNC_SETATR);

      726    20689
      727    20690    3              IF NOT KZ$3270DEV.PRINTER THEN DO;

  20690   1 000549  DCC7 0008                            LDB,B5   DEV$,AUTO
          1 00054B  82C5 0012                            LB,'0800'X        18,B5
          1 00054D       0800
          1 00054E  0501 030F                            BBT      s:20976,PREL

      728    20691
      729    20692                      %KV$CMPOTP; /*N* TEMP UNTIL VDH FIXED */
             20697    4           IF KV$PTR.VDI$->KV$VDI.OTPCNDPND THEN DO;

  20697   1 000550  CC80 0000 0000  xsym                 LDB,B4   KV$PTR$
          1 000553  BC84                                 LDB,B3   ,B4
          1 000554  E843 001A                            LDR,R6   26,B3
          1 000556  6901 000A                            BEZ,R6   s:20701,PREL

             20698    4              CALL KVV$VDI(KV_VDH_EVT_CMPOTP);

  20698   1 000558  BB80 0000 0000  02                   LAB,B3   0
          1 00055B  CBF0 0100                            LAB,B4   256,IMO
          1 00055D  E380 0000 0000  xent                 LNJ,B6   KVV$VDI
          1 000560       0001                            DC       s:20701,PREL

             20699    4              END;                         /* END IF                             */

PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:144  
      730    20701    3                 CALL GET_VAL;        /*N* TEMP */

  20701   1 000561  E3C0 0D64                            LNJ,B6   s:0,PREL
          1 000563       0001                            DC       s:20703,PREL

      731    20702
      732    20703    3                 ATTR_CHAR='0'B;

  20703   1 000564  87C7 002A                            CLH      ATTR_CHAR,AUTO

      733    20704
      734    20705    3                 IF KV$USR_SETATR.QLF.PRTGRD OR KV$USR_SETATR.QLF.PRT OR

  20705   1 000566  ECC7 0006                            LDB,B6   PARM$,AUTO
          1 000568  82C6 0003                            LB,'4000'X        3,B6
          1 00056A       4000
          1 00056B  0501 000B                            BBT      s:20707,PREL
          1 00056D  82C6 0003                            LB,'0400'X        3,B6
          1 00056F       0400
          1 000570  0501 0006                            BBT      s:20707,PREL
          1 000572  82C6 0003                            LB,'0100'X        3,B6
          1 000574       0100
          1 000575  0581 0004                            BBF      s:20709,PREL

      735    20706    3                   KV$USR_SETATR.QLF.CNS THEN
      736    20707    3                    ATTR_CHAR.PROTECT='1'B;

  20707   1 000577  8947 002A                            LBT,'2000'X       ATTR_CHAR,AUTO
  20707   1 000579       2000

      737    20708
      738    20709    3                 KV$GRPRND=KV$USR_SETATR.GRPRND;

  20709   1 00057A  E846 0003                            LDR,R6   3,B6
          1 00057C  6008                                 SOL,R6   8
          1 00057D  6048                                 SOR,R6   8
          1 00057E  E7C7 002B                            STH,R6   KV$GRPRND,AUTO
PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:145  

      739    20710    3                 CALL SETATR;

  20710   1 000580  E3C0 0326                            LNJ,B6   s:0,PREL
          1 000582       0001                            DC       s:20712,PREL

      740    20711
      741    20712    3                 IF KV$USR_SETATR.QLF.ACPNMR THEN

  20712   1 000583  ECC7 0006                            LDB,B6   PARM$,AUTO
          1 000585  82C6 0003                            LB,'1000'X        3,B6
          1 000587       1000
          1 000588  0581 0004                            BBF      s:20715,PREL

      742    20713    3                    ATTR_CHAR.NUMERIC='1'B;

  20713   1 00058A  8947 002A                            LBT,'1000'X       ATTR_CHAR,AUTO
  20713   1 00058C       1000

      743    20714
      744    20715    3                 IF KV$USR_SETATR.RTRDAT THEN

  20715   1 00058D  8286                                 LB,'0080'X        ,B6
  20715   1 00058E       0080
          1 00058F  0581 0004                            BBF      s:20718,PREL

      745    20716    3                    ATTR_CHAR.MDT = '1'B;

  20716   1 000591  8947 002A                            LBT,'0100'X       ATTR_CHAR,AUTO
  20716   1 000593       0100

      746    20717
      747    20718    3                 ROW=KV$USR_SETATR.PHSPST.LIN;

  20718   1 000594  E846 0001                            LDR,R6   1,B6
          1 000596  EF47 0015                            STR,R6   ROW,AUTO

PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:146  
      748    20719    3                 COL=KV$USR_SETATR.PHSPST.CLM;

  20719   1 000598  D846 0002                            LDR,R5   2,B6
          1 00059A  DF47 0016                            STR,R5   COL,AUTO

      749    20720    3                 IF KV$USR_SETATR.DLTFLD THEN

  20720   1 00059C  8286                                 LB,'0040'X        ,B6
  20720   1 00059D       0040
          1 00059E  0581 0026                            BBF      s:20730,PREL

      750    20721    4                 DO;

      751    20722    4                    CALL CHK_BFR_SIZ(4) ALTRET(NO_MEMORY);

  20722   1 0005A0  DBF0 0004                            LAB,B5   4,IMO
          1 0005A2  DFC7 0054                            STB,B5   FILLCHAR+4,AUTO
          1 0005A4  E3C0 0769                            LNJ,B6   s:0,PREL
          1 0005A6       02E6                            DC       s:20995,PREL

      752    20723    4                    CALL SETBUFADR_NCHK;

  20723   1 0005A7  E3C0 0954                            LNJ,B6   s:0,PREL
          1 0005A9       0001                            DC       s:20724,PREL

      753    20724    4                    CALL STORE_MRD(ROW,COL+1);

  20724   1 0005AA  E847 0016                            LDR,R6   COL,AUTO
          1 0005AC  6E01                                 ADV,R6   1
          1 0005AD  EF47 0068                            STR,R6   C_MRD+7,AUTO
          1 0005AF  EBC7 0068                            LAB,B6   C_MRD+7,AUTO
          1 0005B1  EFC7 005E                            STB,B6   @R+2,AUTO
          1 0005B3  DBC7 0015                            LAB,B5   ROW,AUTO
          1 0005B5  DFC7 005C                            STB,B5   @QUEUE_ON_TAIL+2,AUTO
          1 0005B7  E3C0 09FE                            LNJ,B6   s:0,PREL
          1 0005B9       0001                            DC       s:20725,PREL

PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:147  
      754    20725    4                    BFR$->BYT(BYTX)=BITBIN(%KZ#NULL);

  20725   1 0005BA  ECC7 000A                            LDB,B6   BFR$,AUTO
          1 0005BC  B847 0028                            LDR,R3   BYTX,AUTO
          1 0005BE  87B6                                 CLH      ,B6,R3

      755    20726    4                    BYTX=BYTX+1;

  20726   1 0005BF  8AC7 0028                            INC      BYTX,AUTO

      756    20727    4                    BYTSIZ=BYTSIZ-1;

  20727   1 0005C1  88C7 0029                            DEC      BYTSIZ,AUTO

      757    20728    4                    GOTO XIT;

  20728   1 0005C3  0F81 029A                            B        s:20976,PREL

      758    20729    4                    END;
      759    20730    3                 CALL ATTR ALTRET(NO_MEMORY);

  20730   1 0005C5  E3C0 09B3                            LNJ,B6   s:0,PREL
          1 0005C7       02C5                            DC       s:20995,PREL

      760    20731
      761    20732    3                 END;

  20732   1 0005C8  0F81 0295                            B        s:20976,PREL

      762    20733
      763    20734        %EJECT;
PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:148  
      764    20735        /* Input Procedure */
      765    20736
      766    20737    2            CASE(%KV_USR_FNC_INPPRC);

      767    20738
      768    20739    2              IF KV$USR_INPPRC.ID=%KZ#3270INPPRC_SBA1 THEN

  20739   1 0005CA  E2C6 0002                            LLH,R6   2,B6
          1 0005CC  6D01                                 CMV,R6   1
          1 0005CD  0981 000D                            BNE      s:20742,PREL

      769    20740    2                 KZ$3270DEV.SBA=BINBIT(ASCBIN(KV$USR_INPPRC.ORGCHR),8);

  20740   1 0005CF  D846 0002                            LDR,R5   2,B6
          1 0005D1  D570 00FF                            AND,R5   255,IMO
          1 0005D3  5008                                 SOL,R5   8
          1 0005D4  5048                                 SOR,R5   8
          1 0005D5  DCC7 0008                            LDB,B5   DEV$,AUTO
          1 0005D7  D7C5 001A                            STH,R5   26,B5
          1 0005D9  0F81 0284                            B        s:20976,PREL

      770    20741    3              ELSE DO;

      771    20742    3                 I=BITBIN(KZ$3270DEV.SBA&'3F'X)*64+BITBIN(BINBIT(ASCBIN(KV$USR_INPPRC.
             20742                          ORGCHR),8)&'3F'X);

  20742   1 0005DB  D846 0002                            LDR,R5   2,B6
          1 0005DD  D570 00FF                            AND,R5   255,IMO
          1 0005DF  5008                                 SOL,R5   8
          1 0005E0  D570 3F00                            AND,R5   16128,IMO
          1 0005E2  5048                                 SOR,R5   8
          1 0005E3  DCC7 0008                            LDB,B5   DEV$,AUTO
          1 0005E5  C2C5 001A                            LLH,R4   26,B5
          1 0005E7  4008                                 SOL,R4   8
          1 0005E8  C570 3F00                            AND,R4   16128,IMO
          1 0005EA  4048                                 SOR,R4   8
          1 0005EB  4006                                 SOL,R4   6
PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:149  
          1 0005EC  CA55                                 ADD,R4   R5
          1 0005ED  CF47 0023                            STR,R4   I,AUTO

      772    20743    3                 KV$VDH_DCLLCLPST=KV_VDH_DCLLCLPST;

  20743   1 0005EF  AB80 0000 0000  xsym                 LAB,B2   KV_VDH_DCLLCLPST
          1 0005F2  2C00                                 LDV,R2   0
          1 0005F3  6C08                                 LDV,R6   8
          1 0005F4  BB87                                 LAB,B3   ,AUTO
          1 0005F5  3C58                                 LDV,R3   88
          1 0005F6  0008                                 MMM

      773    20744    3                 KV$VDH_DCLLCLPST.PHSPST.LIN=(I/MAX_COL)+1;

  20744   1 0005F7  E847 0023                            LDR,R6   I,AUTO
          1 0005F9  E347 001F                            DIV,R6   MAX_COL,AUTO
          1 0005FB  6E01                                 ADV,R6   1
          1 0005FC  EF47 002D                            STR,R6   KV$VDH_DCLLCLPST+1,AUTO

      774    20745    3                 KV$VDH_DCLLCLPST.PHSPST.CLM=MOD(I,MAX_COL)+1;

  20745   1 0005FE  E847 0023                            LDR,R6   I,AUTO
          1 000600  70F0                                 DAR,R7   16
          1 000601  F347 001F                            DIV,R7   MAX_COL,AUTO
          1 000603  6E01                                 ADV,R6   1
          1 000604  EF47 002E                            STR,R6   KV$VDH_DCLLCLPST+2,AUTO

      775    20746    3                 CALL KVV$VDI(KV$VDH_DCLLCLPST);

  20746   1 000606  EBC7 002C                            LAB,B6   KV$VDH_DCLLCLPST,AUTO
          1 000608  EFC7 0062                            STB,B6   C_MRD+1,AUTO
          1 00060A  BBC7 0062                            LAB,B3   C_MRD+1,AUTO
          1 00060C  CBF0 0100                            LAB,B4   256,IMO
          1 00060E  E380 0000 0000  xent                 LNJ,B6   KVV$VDI
          1 000611       0001                            DC       s:20747,PREL

      776    20747    3                 RETURN;
PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:150  

  20747   1 000612  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

      777    20748    3                 END;
      778    20749        %EJECT;
PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:151  
      779    20750        /* Event */
      780    20751
      781    20752    2            CASE(%KV_USR_FNC_EVT);

      782    20753                  /*
      783    20754                    The following do case is used to inform the handler when
      784    20755                    certain events happen in VDH that we are interested in
      785    20756                    because it means some action is required in behalf of
      786    20757                    the device. Such as VDH return to path mngt which is
      787    20758                    a signal that we may send any pending output buffers to the
      788    20759                    device.
      789    20760                  */
      790    20761        %EJECT;
PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:152  
      791    20762    3              DO CASE(KV$USR_EVT.ID);

  20762   1 000615  9806                                 LDR,R1   ,B6
          1 000616  9570 007F                            AND,R1   127,IMO
          1 000618  1D10                                 CMV,R1   16
          1 000619  0281 0244                            BGE      s:20976,PREL
          1 00061B  B810 0000 0621  01                   LDR,R3   s:20762+12,R1
          1 00061E  83B0 0000 0631  01                   JMP      s:20768,R3
          1 000621       022D                            DC       s:20976,PREL
          1 000622       022D                            DC       s:20976,PREL
          1 000623       022D                            DC       s:20976,PREL
          1 000624       0000                            DC       s:20768,PREL
          1 000625       0060                            DC       s:20799,PREL
          1 000626       022D                            DC       s:20976,PREL
          1 000627       022D                            DC       s:20976,PREL
          1 000628       00A4                            DC       s:20826,PREL
          1 000629       00E5                            DC       s:20846,PREL
          1 00062A       00F8                            DC       s:20855,PREL
          1 00062B       022D                            DC       s:20976,PREL
          1 00062C       0106                            DC       s:20866,PREL
          1 00062D       015F                            DC       s:20898,PREL
          1 00062E       022D                            DC       s:20976,PREL
          1 00062F       01C0                            DC       s:20932,PREL
          1 000630       01F0                            DC       s:20947,PREL

      792    20763
      793    20764        /* Event - Delete output */
      794    20765
      795    20766    3               CASE(%KV_USR_EVT_ID_DLTOTP);

      796    20767
      797    20768    3                 CALL DONE (%QUEUE_ON_TAIL) ALTRET(NO_MEMORY);

  20768   1 000631  DBF0 8000                            LAB,B5   -32768,IMO
          1 000633  DFC7 005A                            STB,B5   ENTR_FLG+3,AUTO
          1 000635  E3C0 02F5                            LNJ,B6   s:0,PREL
          1 000637       0255                            DC       s:20995,PREL
PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:153  

      798    20769    3                 IF KZ$3270DEV.OTPHD$~=ADDR(NIL) THEN

  20769   1 000638  ECC7 0008                            LDB,B6   DEV$,AUTO
          1 00063A  8DC6 0008                            CMN      8,B6
          1 00063C  0901 0238                            BE       s:20987,PREL

      799    20770    4                 DO;                       /* DELETE PENDING OUTPUT              */

      800    20771                         %DISABLE(INHLVL=KH_INHLVL);

  20772   1 00063E  E800 0000 0000  xsym                 LDR,R6   KH_INHLVL
          1 000641  EF47 003C                            STR,R6   DISABLE_LEVEL,AUTO

  20773   1 000643  DBC7 003C                            LAB,B5   DISABLE_LEVEL,AUTO
          1 000645  DFC7 0062                            STB,B5   C_MRD+1,AUTO
          1 000647  BBC7 0062                            LAB,B3   C_MRD+1,AUTO
          1 000649  CBF0 0100                            LAB,B4   256,IMO
          1 00064B  E380 0000 0000  xent                 LNJ,B6   KHI$DISABLE
          1 00064E       0001                            DC       s:20775,PREL

      801    20775    5                    DO WHILE(KZ$3270DEV.OTPHD$~=ADDR(NIL));

  20775   1 00064F  0F81 0026                            B        s:20782,PREL

      802    20776    5                       T$=KZ$3270DEV.OTPHD$;

  20776   1 000651  ECC7 0008                            LDB,B6   DEV$,AUTO
          1 000653  DCC6 0008                            LDB,B5   8,B6
          1 000655  DFC7 000E                            STB,B5   T$,AUTO

      803    20777    5                       KZ$3270DEV.OTPHD$=T$->KZ$OTPBFR.LNK$;

  20777   1 000657  CC85                                 LDB,B4   ,B5
          1 000658  CFC6 0008                            STB,B4   8,B6

      804    20778    5                       IF KZ$3270DEV.OTPHD$=ADDR(NIL) THEN
PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:154  

  20778   1 00065A  8DC6 0008                            CMN      8,B6
          1 00065C  0981 0006                            BNE      s:20780,PREL

      805    20779    5                          KZ$3270DEV.OTPTL$=ADDR(NIL);

  20779   1 00065E  DB80 0000 0000                       LAB,B5   0
          1 000661  DFC6 000A                            STB,B5   10,B6

      806    20780    5                       T$->KZ$OTPBFR.CMPCOD=%KV_CMPCOD_DLT;

  20780   1 000663  6C0C                                 LDV,R6   12
          1 000664  DCC7 000E                            LDB,B5   T$,AUTO
          1 000666  E7C5 0005                            STH,R6   5,B5

      807    20781    5                       CALL KZV$RELOTPBFR(KZ$3270DEV,T$);

  20781   1 000668  DBC7 000E                            LAB,B5   T$,AUTO
          1 00066A  DFC7 0064                            STB,B5   C_MRD+3,AUTO
          1 00066C  EFC7 0062                            STB,B6   C_MRD+1,AUTO
          1 00066E  BBC7 0062                            LAB,B3   C_MRD+1,AUTO
          1 000670  CBF0 0200                            LAB,B4   512,IMO
          1 000672  E380 0000 0000  xent                 LNJ,B6   KZV$RELOTPBFR
          1 000675       0001                            DC       s:20782,PREL

      808    20782    5                       END;

  20782   1 000676  ECC7 0008                            LDB,B6   DEV$,AUTO
          1 000678  8DC6 0008                            CMN      8,B6
          1 00067A  09D7                                 BNE      s:20776,SPREL

      809    20783    4                    KV$USR_EVT.ACT='1'B;

  20783   1 00067B  DCC7 0006                            LDB,B5   PARM$,AUTO
          1 00067D  8905                                 LBT,'0080'X       ,B5
          1 00067E       0080

PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:155  
      810    20784    4                    KZ$3270DEV.KBDLCK='1'B; /* Assume keybrd left locked         */

  20784   1 00067F  8946 001A                            LBT,'0080'X       26,B6
  20784   1 000681       0080

      811    20785                         %ENABLE(INHLVL=KH_INHLVL);

  20786   1 000682  E847 003C                            LDR,R6   DISABLE_LEVEL,AUTO
          1 000684  E900 0000 0000  xsym                 CMR,R6   KH_INHLVL
          1 000687  0901 01D6                            BE       s:20976,PREL

  20788   1 000689  CBF0 0000                            LAB,B4   0,IMO
          1 00068B  E380 0000 0000  xent                 LNJ,B6   KHI$ENABLE
          1 00068E       0001                            DC       s:20791,PREL

      812    20791    4                    END;

  20791   1 00068F  0F81 01CE                            B        s:20976,PREL

      813    20792    3                 ELSE GOTO ALTRTN;
      814    20793
      815    20794        %EJECT;
PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:156  
      816    20795        /* Event - Disconnect */
      817    20796
      818    20797    3               CASE(%KV_USR_EVT_ID_DSC);

      819    20798
      820    20799    3                 IF %KV_VDI.SSNCNT > 1 THEN RETURN;

  20799   1 000691  DC80 0000 0000  xsym                 LDB,B5   KV$PTR$
          1 000694  CC85                                 LDB,B4   ,B5
          1 000695  E844 000E                            LDR,R6   14,B4
          1 000697  6D01                                 CMV,R6   1
          1 000698  0381 0004                            BLE      s:20800,PREL

  20799   1 00069A  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

      821    20800    3                 IF NOT KZ$3270DEV.DSC THEN

  20800   1 00069D  BCC7 0008                            LDB,B3   DEV$,AUTO
          1 00069F  82C3 0015                            LB,'00FF'X        21,B3
          1 0006A1       00FF
          1 0006A2  0501 002F                            BBT      s:20816,PREL

      822    20801    4                 DO;

      823    20802                         %DISABLE(INHLVL=KH_INHLVL);

  20803   1 0006A4  D800 0000 0000  xsym                 LDR,R5   KH_INHLVL
          1 0006A7  DF47 003C                            STR,R5   DISABLE_LEVEL,AUTO

  20804   1 0006A9  CBC7 003C                            LAB,B4   DISABLE_LEVEL,AUTO
          1 0006AB  CFC7 0062                            STB,B4   C_MRD+1,AUTO
          1 0006AD  BBC7 0062                            LAB,B3   C_MRD+1,AUTO
          1 0006AF  CBF0 0100                            LAB,B4   256,IMO
          1 0006B1  E380 0000 0000  xent                 LNJ,B6   KHI$DISABLE
          1 0006B4       0001                            DC       s:20806,PREL

      824    20806    4                    KZ$3270DEV.DSC.INT='1'B;
PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:157  

  20806   1 0006B5  ECC7 0008                            LDB,B6   DEV$,AUTO
          1 0006B7  8946 0015                            LBT,'0080'X       21,B6
          1 0006B9       0080

      825    20807    4                    KZ$3270DEV.DSC.TOLD_VDH='1'B;

  20807   1 0006BA  8946 0015                            LBT,'0040'X       21,B6
  20807   1 0006BC       0040

      826    20808    4                    CALL KZV$DSC(KZ$3270DEV);

  20808   1 0006BD  BBC7 0008                            LAB,B3   DEV$,AUTO
          1 0006BF  CBF0 0100                            LAB,B4   256,IMO
          1 0006C1  E380 0000 0000  xent                 LNJ,B6   KZV$DSC
          1 0006C4       0001                            DC       s:20810,PREL

      827    20809                         %ENABLE(INHLVL=KH_INHLVL);

  20810   1 0006C5  E847 003C                            LDR,R6   DISABLE_LEVEL,AUTO
          1 0006C7  E900 0000 0000  xsym                 CMR,R6   KH_INHLVL
          1 0006CA  0901 0007                            BE       s:20816,PREL

  20812   1 0006CC  CBF0 0000                            LAB,B4   0,IMO
          1 0006CE  E380 0000 0000  xent                 LNJ,B6   KHI$ENABLE
          1 0006D1       0001                            DC       s:20816,PREL

      828    20815    4                    END;

      829    20816    3                 RETURN;         /* Dont't do SET_VAL - may have been re-entered */

  20816   1 0006D2  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

      830    20817
      831    20818        %EJECT;
PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:158  
      832    20819        /* Event - Halt Output */
      833    20820        /*
      834    20821              ESC H or some such was input - Halt output and await users
      835    20822              intervention. (Usually means "Enter to Go"
      836    20823        */
      837    20824    3               CASE(%KV_USR_EVT_ID_HLTOTP);

      838    20825
      839    20826    4                 IF NOT KZ$3270DEV.DSC THEN DO;

  20826   1 0006D5  DCC7 0008                            LDB,B5   DEV$,AUTO
          1 0006D7  82C5 0015                            LB,'00FF'X        21,B5
          1 0006D9       00FF
          1 0006DA  0501 0032                            BBT      s:20839,PREL

      840    20827    4                    IF BFR$=ADDR(NIL) THEN

  20827   1 0006DC  8DC7 000A                            CMN      BFR$,AUTO
          1 0006DE  0981 0004                            BNE      s:20829,PREL

      841    20828    4                       CALL INITBFR ALTRET(NO_MEMORY);

  20828   1 0006E0  E3C0 052F                            LNJ,B6   s:0,PREL
          1 0006E2       01AA                            DC       s:20995,PREL

      842    20829    4                    IF KV$USR_EVT.PRM=0 THEN

  20829   1 0006E3  ECC7 0006                            LDB,B6   PARM$,AUTO
          1 0006E5  E846 0001                            LDR,R6   1,B6
          1 0006E7  6981 0008                            BNEZ,R6  s:20832,PREL

      843    20830    4                       KZ$OTPBFR.FLAGS.HALT.PAG#='1'B;

  20830   1 0006E9  DCC7 000A                            LDB,B5   BFR$,AUTO
          1 0006EB  8945 0002                            LBT,'0008'X       2,B5
          1 0006ED       0008
          1 0006EE  0F81 0006                            B        s:20833,PREL
PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:159  

      844    20831    4                    ELSE
      845    20832    4                       KZ$OTPBFR.FLAGS.HALT.INP#='1'B;

  20832   1 0006F0  DCC7 000A                            LDB,B5   BFR$,AUTO
          1 0006F2  8945 0002                            LBT,'0004'X       2,B5
          1 0006F4       0004

      846    20833    4                    IF KZ$3270DEV.CTR$->KZ$3270CTR.LIN$->KZ$LINCTX.PRO.SLAVE THEN

  20833   1 0006F5  DCC7 0008                            LDB,B5   DEV$,AUTO
          1 0006F7  CCC5 0002                            LDB,B4   2,B5
          1 0006F9  BCC4 0004                            LDB,B3   4,B4
          1 0006FB  89C3 004B                            CMZ      75,B3
          1 0006FD  0881 0006                            BAGE     s:20836,PREL

      847    20834    4                       SZ = SIZEC(KZ$OTPBFR)+4;

  20834   1 0006FF  6C14                                 LDV,R6   20
          1 000700  EF47 0020                            STR,R6   SZ,AUTO
          1 000702  0F81 0004                            B        s:20837,PREL

      848    20835    4                    ELSE
      849    20836    4                       SZ = SIZEC(KZ$OTPBFR)+2;

  20836   1 000704  6C12                                 LDV,R6   18
          1 000705  EF47 0020                            STR,R6   SZ,AUTO

      850    20837    4                    WCC.KEYRSTR(SZ)='1'B;

  20837   1 000707  CCC7 000A                            LDB,B4   BFR$,AUTO
          1 000709  B856                                 LDR,R3   R6
          1 00070A  3003                                 SOL,R3   3
          1 00070B  3E06                                 ADV,R3   6
          1 00070C  8934                                 LBT      ,B4,R3

      851    20838    4                    END;
PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:160  

      852    20839    3                 CALL DONE (%QUEUE_ON_TAIL) ALTRET(NO_MEMORY);

  20839   1 00070D  CBF0 8000                            LAB,B4   -32768,IMO
          1 00070F  CFC7 005A                            STB,B4   ENTR_FLG+3,AUTO
          1 000711  E3C0 0219                            LNJ,B6   s:0,PREL
          1 000713       0179                            DC       s:20995,PREL
          1 000714  0F81 0149                            B        s:20976,PREL

      853    20840
      854    20841        %EJECT;
PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:161  
      855    20842        /* Event - Logon Accept */
      856    20843
      857    20844    3               CASE(%KV_USR_EVT_ID_LGNACP);

      858    20845
      859    20846    3                 IF KZ$3270DEV.CTR$->KZ$3270CTR.LIN$->KZ$LINCTX.PRO.SLAVE THEN

  20846   1 000716  DCC7 0008                            LDB,B5   DEV$,AUTO
          1 000718  CCC5 0002                            LDB,B4   2,B5
          1 00071A  BCC4 0004                            LDB,B3   4,B4
          1 00071C  89C3 004B                            CMZ      75,B3
          1 00071E  0881 013F                            BAGE     s:20976,PREL

      860    20847    3                    CALL SND_SLV_BFR(%KZ#3270_SLV_LGNCMP) ALTRET(NO_MEMORY);

  20847   1 000720  ABF0 00C1                            LAB,B2   193,IMO
          1 000722  AFC7 0040                            STB,B2   DISABLE_LEVEL+4,AUTO
          1 000724  E3C0 0A6A                            LNJ,B6   s:0,PREL
          1 000726       0166                            DC       s:20995,PREL
          1 000727  0F81 0136                            B        s:20976,PREL

      861    20848
      862    20849
      863    20850        %EJECT;
PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:162  
      864    20851        /* Event - Logon Reject */
      865    20852
      866    20853    3               CASE(%KV_USR_EVT_ID_LGNRJC);

      867    20854
      868    20855    3                 CALL ERRLOG (%E$LGNREJ);

  20855   1 000729  DBF0 00CF                            LAB,B5   207,IMO
          1 00072B  DFC7 0040                            STB,B5   DISABLE_LEVEL+4,AUTO
          1 00072D  E3C0 0B02                            LNJ,B6   s:0,PREL
          1 00072F       0001                            DC       s:20856,PREL

      869    20856    3                 KZ$3270DEV.ACTIVE='0'B;

  20856   1 000730  ECC7 0008                            LDB,B6   DEV$,AUTO
          1 000732  8846 0012                            LBF,'4000'X       18,B6
          1 000734       4000
          1 000735  0F81 0128                            B        s:20976,PREL

      870    20857
      871    20858        %EJECT;
PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:163  
      872    20859        /* Event - Release Structure */
      873    20860
      874    20861    3               CASE(%KV_USR_EVT_ID_RLSSTR);

      875    20862
      876    20863        /*
      877    20864              VDH is ready to get rid of some of our interface context.
      878    20865        */
      879    20866    4                 IF KV$USR_EVT.PRM=%KV_STRTYP_VDI THEN DO;

  20866   1 000737  E846 0001                            LDR,R6   1,B6
          1 000739  6D1D                                 CMV,R6   29
          1 00073A  0981 0123                            BNE      s:20976,PREL

      880    20867                         %DISABLE(INHLVL=KH_INHLVL);

  20868   1 00073C  D800 0000 0000  xsym                 LDR,R5   KH_INHLVL
          1 00073F  DF47 003C                            STR,R5   DISABLE_LEVEL,AUTO

  20869   1 000741  DBC7 003C                            LAB,B5   DISABLE_LEVEL,AUTO
          1 000743  DFC7 0062                            STB,B5   C_MRD+1,AUTO
          1 000745  BBC7 0062                            LAB,B3   C_MRD+1,AUTO
          1 000747  CBF0 0100                            LAB,B4   256,IMO
          1 000749  E380 0000 0000  xent                 LNJ,B6   KHI$DISABLE
          1 00074C       0001                            DC       s:20871,PREL

      881    20871    4                    T$=%KV_VDI.OTPBFR_.ADR$;

  20871   1 00074D  EC80 0000 0000  xsym                 LDB,B6   KV$PTR$
          1 000750  DC86                                 LDB,B5   ,B6
          1 000751  CCC5 000A                            LDB,B4   10,B5
          1 000753  CFC7 000E                            STB,B4   T$,AUTO

      882    20872    5                    IF T$~=ADDR(NIL) THEN DO;

  20872   1 000755  8DC7 000E                            CMN      T$,AUTO
          1 000757  0901 0020                            BE       s:20877,PREL
PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:164  

      883    20873    5                       I=KZ_3270_BFRSIZ(T$->KZ$OTPBFR.BFRSIZ);

  20873   1 000759  B844 0004                            LDR,R3   4,B4
          1 00075B  E830 0000 0020  00                   LDR,R6   KZ_3270_BFRSIZ,R3
          1 00075E  EF47 0023                            STR,R6   I,AUTO

      884    20874    5                       %KV_VDI.OTPBFR_='0'B;

  20874   1 000760  DC86                                 LDB,B5   ,B6
          1 000761  5C08                                 LDV,R5   8
          1 000762  0021                                 ALR      ;
          1 000763       4178 0000                                ALPHANUM('0000'X,IMO,,1),;
          1 000765       4005 000A                                ALPHANUM(10,B5,,R5,FILL)

      885    20875    5                       CALL KVB$RLS2NSYS(I,T$);

  20875   1 000767  DBC7 000E                            LAB,B5   T$,AUTO
          1 000769  437F                                 CSYNC    s:20875+1,SPREL
          1 00076A  DFC7 0064                            STB,B5   C_MRD+3,AUTO
          1 00076C  CBC7 0023                            LAB,B4   I,AUTO
          1 00076E  CFC7 0062                            STB,B4   C_MRD+1,AUTO
          1 000770  BBC7 0062                            LAB,B3   C_MRD+1,AUTO
          1 000772  CBF0 0200                            LAB,B4   512,IMO
          1 000774  E380 0000 0000  xent                 LNJ,B6   KVB$RLS2NSYS
          1 000777       0001                            DC       s:20877,PREL

      886    20876    5                       END;

      887    20877    4                    CALL KZV$RLSCTX(KZ$3270DEV);

  20877   1 000778  BBC7 0008                            LAB,B3   DEV$,AUTO
          1 00077A  CBF0 0100                            LAB,B4   256,IMO
          1 00077C  E380 0000 0000  xent                 LNJ,B6   KZV$RLSCTX
          1 00077F       0001                            DC       s:20879,PREL

      888    20878                         %ENABLE(INHLVL=KH_INHLVL);
PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:165  

  20879   1 000780  E847 003C                            LDR,R6   DISABLE_LEVEL,AUTO
          1 000782  E900 0000 0000  xsym                 CMR,R6   KH_INHLVL
          1 000785  0901 0007                            BE       s:20884,PREL

  20881   1 000787  CBF0 0000                            LAB,B4   0,IMO
          1 000789  E380 0000 0000  xent                 LNJ,B6   KHI$ENABLE
          1 00078C       0001                            DC       s:20884,PREL

      889    20884    4                    RETURN;                /* Must RETURN here - no context left */

  20884   1 00078D  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

      890    20885    4                    END;
      891    20886
      892    20887        %EJECT;
PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:166  
      893    20888        /* Event - Get Structure */
      894    20889
      895    20890    3               CASE(%KV_USR_EVT_ID_GETSTR);

      896    20891
      897    20892        %EJECT;
PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:167  
      898    20893        /* Event - Schedule */
      899    20894
      900    20895    3               CASE(%KV_USR_EVT_ID_SCH);

      901    20896
      902    20897                      %DISABLE(INHLVL=KH_INHLVL);

  20898   1 000790  E800 0000 0000  xsym                 LDR,R6   KH_INHLVL
          1 000793  EF47 003C                            STR,R6   DISABLE_LEVEL,AUTO

  20899   1 000795  DBC7 003C                            LAB,B5   DISABLE_LEVEL,AUTO
          1 000797  DFC7 0062                            STB,B5   C_MRD+1,AUTO
          1 000799  BBC7 0062                            LAB,B3   C_MRD+1,AUTO
          1 00079B  CBF0 0100                            LAB,B4   256,IMO
          1 00079D  E380 0000 0000  xent                 LNJ,B6   KHI$DISABLE
          1 0007A0       0001                            DC       s:20901,PREL

      903    20901    3                 IF KZ$3270DEV.DFR.CLR THEN

  20901   1 0007A1  ECC7 0008                            LDB,B6   DEV$,AUTO
          1 0007A3  82C6 0016                            LB,'1000'X        22,B6
          1 0007A5       1000
          1 0007A6  0581 000B                            BBF      s:20907,PREL

      904    20902    4                 DO;

      905    20903    4                    KZ$3270DEV.DFR.CLR = '0'B;

  20903   1 0007A8  8846 0016                            LBF,'1000'X       22,B6
  20903   1 0007AA       1000

      906    20904    4                    CALL KZT$CLEARIMM(KZ$3270DEV);

  20904   1 0007AB  BBC7 0008                            LAB,B3   DEV$,AUTO
          1 0007AD  CBF0 0100                            LAB,B4   256,IMO
          1 0007AF  E3C0 0130                            LNJ,B6   s:21023,PREL
          1 0007B1       0001                            DC       s:20907,PREL
PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:168  

      907    20905    4                    END;

      908    20906
      909    20907    3                 IF KZ$3270DEV.DFRHD$~=ADDR(NIL) THEN

  20907   1 0007B2  ECC7 0008                            LDB,B6   DEV$,AUTO
          1 0007B4  8DC6 000C                            CMN      12,B6
          1 0007B6  0901 0009                            BE       s:20910,PREL

      910    20908    3                    CALL KZV$DFR(KZ$3270DEV);

  20908   1 0007B8  BBC7 0008                            LAB,B3   DEV$,AUTO
          1 0007BA  CBF0 0100                            LAB,B4   256,IMO
          1 0007BC  E380 0000 0000  xent                 LNJ,B6   KZV$DFR
          1 0007BF       0001                            DC       s:20910,PREL

      911    20909
      912    20910    3                 IF KZ$3270DEV.DSC THEN

  20910   1 0007C0  ECC7 0008                            LDB,B6   DEV$,AUTO
          1 0007C2  82C6 0015                            LB,'00FF'X        21,B6
          1 0007C4       00FF
          1 0007C5  0581 000B                            BBF      s:20913,PREL

      913    20911    3                    CALL KZV$DSC_CONT(KZ$3270DEV); /* Try to continue disconnect */

  20911   1 0007C7  BBC7 0008                            LAB,B3   DEV$,AUTO
          1 0007C9  CBF0 0100                            LAB,B4   256,IMO
          1 0007CB  E380 0000 0000  xent                 LNJ,B6   KZV$DSC_CONT
          1 0007CE       0001                            DC       s:20911+8,PREL
          1 0007CF  0F81 0011                            B        s:20919,PREL

      914    20912    3                 ELSE
      915    20913    3                    IF KZ$3270DEV.DSC_LATER THEN

  20913   1 0007D1  82C6 001A                            LB,'0020'X        26,B6
PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:169  
  20913   1 0007D3       0020
          1 0007D4  0581 000C                            BBF      s:20919,PREL

      916    20914    4                    DO;

      917    20915    4                       KZ$3270DEV.DSC_LATER='0'B;

  20915   1 0007D6  8846 001A                            LBF,'0020'X       26,B6
  20915   1 0007D8       0020

      918    20916    4                       CALL KZV$DSC(KZ$3270DEV);

  20916   1 0007D9  BBC7 0008                            LAB,B3   DEV$,AUTO
          1 0007DB  CBF0 0100                            LAB,B4   256,IMO
          1 0007DD  E380 0000 0000  xent                 LNJ,B6   KZV$DSC
          1 0007E0       0001                            DC       s:20919,PREL

      919    20917    4                       END;

      920    20918                      %ENABLE(INHLVL=KH_INHLVL);

  20919   1 0007E1  E847 003C                            LDR,R6   DISABLE_LEVEL,AUTO
          1 0007E3  E900 0000 0000  xsym                 CMR,R6   KH_INHLVL
          1 0007E6  0901 0007                            BE       s:20924,PREL

  20921   1 0007E8  CBF0 0000                            LAB,B4   0,IMO
          1 0007EA  E380 0000 0000  xent                 LNJ,B6   KHI$ENABLE
          1 0007ED       0001                            DC       s:20924,PREL

      921    20924    3                 RETURN;   /* DONT WANT TO FALL THROUGH TO SET_VAL DO TO

  20924   1 0007EE  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

      922    20925                                   RE-ENTRANCE PROBLEMS.                    */
      923    20926
      924    20927        %EJECT;
PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:170  
      925    20928        /* Event - VDH Exit */
      926    20929
      927    20930    3               CASE(%KV_USR_EVT_ID_VDHEXT);

      928    20931
      929    20932    3                 IF BFR$=ADDR(NIL) AND KZ$3270DEV.KBDLCK AND %KV_VDI.USRRQSDAT THEN

  20932   1 0007F1  8DC7 000A                            CMN      BFR$,AUTO
          1 0007F3  0981 0014                            BNE      s:20934,PREL
          1 0007F5  DCC7 0008                            LDB,B5   DEV$,AUTO
          1 0007F7  82C5 001A                            LB,'0080'X        26,B5
          1 0007F9       0080
          1 0007FA  0581 000D                            BBF      s:20934,PREL
          1 0007FC  CC80 0000 0000  xsym                 LDB,B4   KV$PTR$
          1 0007FF  BC84                                 LDB,B3   ,B4
          1 000800  82C3 001D                            LB,'0018'X        29,B3
          1 000802       0018
          1 000803  0581 0004                            BBF      s:20934,PREL

      930    20933    3                    CALL INITBFR ALTRET(NO_MEMORY); /* Need to send unlock       */

  20933   1 000805  E3C0 040A                            LNJ,B6   s:0,PREL
          1 000807       0085                            DC       s:20995,PREL

      931    20934    3                 IF BFR$~=ADDR(NIL) THEN

  20934   1 000808  8DC7 000A                            CMN      BFR$,AUTO
          1 00080A  0901 0053                            BE       s:20976,PREL

      932    20935    4                    IF NOT KZ$3270DEV.OTPBSY AND KZ$3270DEV.OTPHD$=ADDR(NIL) THEN DO;

  20935   1 00080C  ECC7 0008                            LDB,B6   DEV$,AUTO
          1 00080E  82C6 0012                            LB,'0400'X        18,B6
          1 000810       0400
          1 000811  0501 000A                            BBT      s:20939,PREL
          1 000813  8DC6 0008                            CMN      8,B6
          1 000815  0981 0006                            BNE      s:20939,PREL
PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:171  

      933    20936    4                       CALL CMP_OTP ALTRET(NO_MEMORY); /* Send current output    */

  20936   1 000817  E3C0 0942                            LNJ,B6   s:0,PREL
          1 000819       0073                            DC       s:20995,PREL

      934    20937    4                       END;

  20937   1 00081A  0F81 0043                            B        s:20976,PREL

      935    20938    3                    ELSE
      936    20939    3                       KZ$3270DEV.DONE='1'B; /* Remember to send later           */

  20939   1 00081C  8946 0012                            LBT,'0200'X       18,B6
  20939   1 00081E       0200
          1 00081F  0F81 003E                            B        s:20976,PREL

      937    20940
      938    20941        %EJECT;
PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:172  
      939    20942        /* Event - Release VDI */
      940    20943
      941    20944    3               CASE(%KV_USR_EVT_ID_RLSVDI);

      942    20945
      943    20946                      %DISABLE(INHLVL=KH_INHLVL);

  20947   1 000821  E800 0000 0000  xsym                 LDR,R6   KH_INHLVL
          1 000824  EF47 003C                            STR,R6   DISABLE_LEVEL,AUTO

  20948   1 000826  DBC7 003C                            LAB,B5   DISABLE_LEVEL,AUTO
          1 000828  DFC7 0062                            STB,B5   C_MRD+1,AUTO
          1 00082A  BBC7 0062                            LAB,B3   C_MRD+1,AUTO
          1 00082C  CBF0 0100                            LAB,B4   256,IMO
          1 00082E  E380 0000 0000  xent                 LNJ,B6   KHI$DISABLE
          1 000831       0001                            DC       s:20950,PREL

      944    20950    3                 KZ$3270DEV.DSC.VDH_FINAL='1'B;

  20950   1 000832  ECC7 0008                            LDB,B6   DEV$,AUTO
          1 000834  8946 0015                            LBT,'0020'X       21,B6
          1 000836       0020

      945    20951    3                 IF KZ$3270DEV.OTPHD$~=ADDR(NIL)

  20951   1 000837  8DC6 0008                            CMN      8,B6
          1 000839  0981 0005                            BNE      s:20955,PREL
          1 00083B  8DC6 000C                            CMN      12,B6
          1 00083D  0901 0010                            BE       s:20964,PREL

      946    20952    3                   OR KZ$3270DEV.DFRHD$~=ADDR(NIL) THEN
      947    20953    4                 DO;

      948    20954                         %ENABLE(INHLVL=KH_INHLVL);

  20955   1 00083F  E847 003C                            LDR,R6   DISABLE_LEVEL,AUTO
          1 000841  E900 0000 0000  xsym                 CMR,R6   KH_INHLVL
PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:173  
          1 000844  0901 0007                            BE       s:20960,PREL

  20957   1 000846  CBF0 0000                            LAB,B4   0,IMO
          1 000848  E380 0000 0000  xent                 LNJ,B6   KHI$ENABLE
          1 00084B       0001                            DC       s:20960,PREL

      949    20960    4                    GOTO ALTRTN;

  20960   1 00084C  0F81 0028                            B        s:20987,PREL

      950    20961    4                    END;
      951    20962    3                 ELSE
      952    20963    4                 DO;

      953    20964    4                    KZ$3270DEV.DSC.DEV_FINAL='1'B;

  20964   1 00084E  8946 0015                            LBT,'0010'X       21,B6
  20964   1 000850       0010

      954    20965                         %ENABLE(INHLVL=KH_INHLVL);

  20966   1 000851  E847 003C                            LDR,R6   DISABLE_LEVEL,AUTO
          1 000853  E900 0000 0000  xsym                 CMR,R6   KH_INHLVL
          1 000856  0901 0007                            BE       s:20976,PREL

  20968   1 000858  CBF0 0000                            LAB,B4   0,IMO
          1 00085A  E380 0000 0000  xent                 LNJ,B6   KHI$ENABLE
          1 00085D       0001                            DC       s:20976,PREL

      955    20971    4                    END;

      956    20972
      957    20973
      958    20974    3               END;                        /* END DO CASE(event-id)              */

      959    20975
      960    20976    2            END;                           /* DO CASE                            */
PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:174  

      961    20977        %EJECT;
PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:175  
      962    20978    1   XIT:
      963    20979    1           IF KV$USR_DAT.FNC=%KV_USR_FNC_EVT THEN

  20979   1 00085E  ECC7 0006            XIT             LDB,B6   PARM$,AUTO
          1 000860  E286                                 LLH,R6   ,B6
          1 000861  6D04                                 CMV,R6   4
          1 000862  0981 000C                            BNE      s:20982,PREL

      964    20980    1              IF KV$USR_EVT.ID =%KV_USR_EVT_ID_RLSSTR THEN

  20980   1 000864  D806                                 LDR,R5   ,B6
          1 000865  D570 007F                            AND,R5   127,IMO
          1 000867  5D0B                                 CMV,R5   11
          1 000868  0981 0006                            BNE      s:20982,PREL

      965    20981    1                 IF KV$USR_EVT.PRM=%KV_STRTYP_VDI THEN GOTO SKIP_SET;

  20981   1 00086A  C846 0001                            LDR,R4   1,B6
          1 00086C  4D1D                                 CMV,R4   29
          1 00086D  0901 0004                            BE       s:20984,PREL

      966    20982    1           CALL SET_VAL;

  20982   1 00086F  E3C0 0A77                            LNJ,B6   s:0,PREL
          1 000871       0001                            DC       s:20984,PREL

      967    20983    1   SKIP_SET:
      968    20984    1           RETURN;

  20984   1 000872  C380 0000 0000  xent SKIP_SET        LNJ,B4   X6A_ARET

      969    20985
      970    20986    1   ALTRTN:
      971    20987    1           IF KV$USR_DAT.FNC=%KV_USR_FNC_EVT THEN

  20987   1 000875  ECC7 0006            ALTRTN          LDB,B6   PARM$,AUTO
          1 000877  E286                                 LLH,R6   ,B6
PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:176  
          1 000878  6D04                                 CMV,R6   4
          1 000879  0981 000C                            BNE      s:20990,PREL

      972    20988    1              IF KV$USR_EVT.ID =%KV_USR_EVT_ID_RLSSTR THEN

  20988   1 00087B  D806                                 LDR,R5   ,B6
          1 00087C  D570 007F                            AND,R5   127,IMO
          1 00087E  5D0B                                 CMV,R5   11
          1 00087F  0981 0006                            BNE      s:20990,PREL

      973    20989    1                 IF KV$USR_EVT.PRM=%KV_STRTYP_VDI THEN GOTO ALT_SKIP_SET;

  20989   1 000881  C846 0001                            LDR,R4   1,B6
          1 000883  4D1D                                 CMV,R4   29
          1 000884  0901 0004                            BE       s:20992,PREL

      974    20990    1           CALL SET_VAL;

  20990   1 000886  E3C0 0A60                            LNJ,B6   s:0,PREL
          1 000888       0001                            DC       s:20992,PREL

      975    20991    1   ALT_SKIP_SET:
      976    20992    1           ALTRETURN;

  20992   1 000889  C380 0000 0000  xent ALT_SKIP_SET    LNJ,B4   X6A_AALT

      977    20993
      978    20994    1   NO_MEMORY:
      979    20995    1           CALL ERRLOG(%E$NO_MEMORY);

  20995   1 00088C  EBF0 00D0            NO_MEMORY       LAB,B6   208,IMO
          1 00088E  EFC7 0040                            STB,B6   DISABLE_LEVEL+4,AUTO
          1 000890  E3C0 099F                            LNJ,B6   s:0,PREL
          1 000892       0001                            DC       s:20996,PREL

      980    20996    1           CALL KZV$DSC_LINE(KZ$3270DEV.CTR$->KZ$3270CTR.LIN$->KZ$LINCTX);

PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:177  
  20996   1 000893  ECC7 0008                            LDB,B6   DEV$,AUTO
          1 000895  DCC6 0002                            LDB,B5   2,B6
          1 000897  CCC5 0004                            LDB,B4   4,B5
          1 000899  CFC7 0062                            STB,B4   C_MRD+1,AUTO
          1 00089B  BBC7 0062                            LAB,B3   C_MRD+1,AUTO
          1 00089D  CBF0 0100                            LAB,B4   256,IMO
          1 00089F  E380 0000 0000  xent                 LNJ,B6   KZV$DSC_LINE
          1 0008A2       0001                            DC       s:20997,PREL

      981    20997    1           BYTSIZ = 0;

  20997   1 0008A3  8747 0029                            CL       BYTSIZ,AUTO

      982    20998    1           GOTO XIT;

  20998   1 0008A5  0F81 FFB8                            B        s:20976,PREL

      983    20999        %EJECT;
PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:178  
      984    21000    1   SETATR: PROC;

  21000   1 0008A7  EFC7 004E            SETATR          STB,B6   I+2,AUTO

      985    21001    2           IF KV$GRPRND.HDN THEN

  21001   1 0008A9  82C7 002B                            LB,'4000'X        KV$GRPRND,AUTO
  21001   1 0008AB       4000
          1 0008AC  0581 0006                            BBF      s:21004,PREL

      986    21002    2              ATTR_CHAR.INTENSITY=%KZ#ATTR_HIDDEN;

  21002   1 0008AE  8947 002A                            LBT,'0C00'X       ATTR_CHAR,AUTO
  21002   1 0008B0       0C00
          1 0008B1  0F81 0015                            B        s:21009,PREL

      987    21003    2           ELSE
      988    21004    2              IF KV$GRPRND.INCINT THEN

  21004   1 0008B3  82C7 002B                            LB,'2000'X        KV$GRPRND,AUTO
  21004   1 0008B5       2000
          1 0008B6  0581 0008                            BBF      s:21007,PREL

      989    21005    2                 ATTR_CHAR.INTENSITY=%KZ#ATTR_HIGH;

  21005   1 0008B8  E870 0800                            LDR,R6   2048,IMO
          1 0008BA  EAC7 002A                            SRM,R6,'0C00'X    ATTR_CHAR,AUTO
          1 0008BC       0C00
          1 0008BD  0F81 0009                            B        s:21009,PREL

      990    21006    2              ELSE
      991    21007    2                 IF KV$GRPRND.DCRINT THEN

  21007   1 0008BF  82C7 002B                            LB,'1000'X        KV$GRPRND,AUTO
  21007   1 0008C1       1000
          1 0008C2  0581 0004                            BBF      s:21009,PREL

PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:179  
      992    21008    2                    ATTR_CHAR.INTENSITY=%KZ#ATTR_LOW_NO_PEN;

  21008   1 0008C4  8847 002A                            LBF,'0C00'X       ATTR_CHAR,AUTO
  21008   1 0008C6       0C00

      993    21009    2           RETURN;

  21009   1 0008C7  ECC7 004E                            LDB,B6   I+2,AUTO
          1 0008C9  C3C6 0001                            LNJ,B4   1,B6

      994    21010    2   END SETATR;
      995    21011        %EJECT;
PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:180  
      996    21012        /* KZT$CLEAR - Called from device manager to clear screen */
      997    21013
      998    21014    1   KZT$CLEAR: ENTRY(PARM)ALTRET;

  21014   1 0008CB  D380 0000 0000  xent KZT$CLEAR       LNJ,B5   X6A_AUTO_1
          1 0008CE       006A 0001                       DC       106,1

      999    21015    1           DEV$=ADDR(PARM);

  21015   1 0008D0  ECC7 0004                            LDB,B6   @PARM,AUTO
          1 0008D2  EFC7 0008                            STB,B6   DEV$,AUTO

     1000    21016    1           CALL GET_VAL;

  21016   1 0008D4  E3C0 09F1                            LNJ,B6   s:0,PREL
          1 0008D6       0001                            DC       s:21017,PREL

     1001    21017    1           CALL CLEAR ALTRET(NO_MEMORY);

  21017   1 0008D7  E3C0 080E                            LNJ,B6   s:0,PREL
          1 0008D9       FFB3                            DC       s:20995,PREL

     1002    21018    1           CALL SET_VAL;

  21018   1 0008DA  E3C0 0A0C                            LNJ,B6   s:0,PREL
          1 0008DC       0001                            DC       s:21019,PREL

     1003    21019    1           RETURN;

  21019   1 0008DD  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

     1004    21020        %EJECT;
PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:181  
     1005    21021        /* KZT$CLEARIMM - Chain a CLEAR on the head of the output queue */
     1006    21022
     1007    21023    1   KZT$CLEARIMM: ENTRY(PARM)ALTRET;

  21023   1 0008E0  D380 0000 0000  xent KZT$CLEARIMM    LNJ,B5   X6A_AUTO_1
          1 0008E3       006A 0001                       DC       106,1

     1008    21024
     1009    21025    1           DEV$=ADDR(PARM);

  21025   1 0008E5  ECC7 0004                            LDB,B6   @PARM,AUTO
          1 0008E7  EFC7 0008                            STB,B6   DEV$,AUTO

     1010    21026    1           BFR$=ADDR(NIL);

  21026   1 0008E9  DB80 0000 0000                       LAB,B5   0
          1 0008EC  DFC7 000A                            STB,B5   BFR$,AUTO

     1011    21027    1           CALL CLEAR ALTRET(NO_MEMORY);

  21027   1 0008EE  E3C0 07F7                            LNJ,B6   s:0,PREL
          1 0008F0       FF9C                            DC       s:20995,PREL

     1012    21028    1           KZ$3270DEV.KBDLCK='0'B;

  21028   1 0008F1  ECC7 0008                            LDB,B6   DEV$,AUTO
          1 0008F3  8846 001A                            LBF,'0080'X       26,B6
          1 0008F5       0080

     1013    21029    1           CALL DONE(%QUEUE_ON_HEAD) ALTRET(NO_MEMORY);

  21029   1 0008F6  DBF0 0000                            LAB,B5   0,IMO
          1 0008F8  DFC7 005A                            STB,B5   ENTR_FLG+3,AUTO
          1 0008FA  E3C0 0030                            LNJ,B6   s:0,PREL
          1 0008FC       FF90                            DC       s:20995,PREL

     1014    21030                /* KZ$3270DEV.KBDLCK will be set back to '1'B after our
PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:182  
     1015    21031                   caller has exited VDH; otherwise, DONE will build an
     1016    21032                   extra block to send WCC.KEYRSTR. */
     1017    21033    1           RETURN;

  21033   1 0008FD  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

     1018    21034        %EJECT;
PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:183  
     1019    21035        /* KZT$CMPOTP - Call VDH for CMPOTP */
     1020    21036
     1021    21037    1   KZT$CMPOTP: ENTRY(PARM)ALTRET;

  21037   1 000900  D380 0000 0000  xent KZT$CMPOTP      LNJ,B5   X6A_AUTO_1
          1 000903       006A 0001                       DC       106,1

     1022    21038
     1023    21039    1           DEV$=ADDR(PARM);

  21039   1 000905  ECC7 0004                            LDB,B6   @PARM,AUTO
          1 000907  EFC7 0008                            STB,B6   DEV$,AUTO

     1024    21040    1           CALL GET_VAL;

  21040   1 000909  E3C0 09BC                            LNJ,B6   s:0,PREL
          1 00090B       0001                            DC       s:21041,PREL

     1025    21041    1           CALL CMP_OTP ALTRET(NO_MEMORY);

  21041   1 00090C  E3C0 084D                            LNJ,B6   s:0,PREL
          1 00090E       FF7E                            DC       s:20995,PREL

     1026    21042    1           CALL SET_VAL;

  21042   1 00090F  E3C0 09D7                            LNJ,B6   s:0,PREL
          1 000911       0001                            DC       s:21043,PREL

     1027    21043    1           RETURN;

  21043   1 000912  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

     1028    21044        %EJECT;
PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:184  
     1029    21045        /* KZT$SNDSLV - Send an order to PASSTHRU */
     1030    21046
     1031    21047    1   KZT$SNDSLV: ENTRY(PARM)ALTRET;

  21047   1 000915  D380 0000 0000  xent KZT$SNDSLV      LNJ,B5   X6A_AUTO_1
          1 000918       006A 0001                       DC       106,1

     1032    21048
     1033    21049    1           DEV$=ADDR(PARM);

  21049   1 00091A  ECC7 0004                            LDB,B6   @PARM,AUTO
          1 00091C  EFC7 0008                            STB,B6   DEV$,AUTO

     1034    21050    1           CALL GET_VAL;

  21050   1 00091E  E3C0 09A7                            LNJ,B6   s:0,PREL
          1 000920       0001                            DC       s:21051,PREL

     1035    21051    1           CALL SND_SLV_BFR(%KZ#3270_SLV_LGFCMP) ALTRET(NO_MEMORY);

  21051   1 000921  EBF0 00C2                            LAB,B6   194,IMO
          1 000923  EFC7 0040                            STB,B6   DISABLE_LEVEL+4,AUTO
          1 000925  E3C0 0869                            LNJ,B6   s:0,PREL
          1 000927       FF65                            DC       s:20995,PREL

     1036    21052    1           RETURN;

  21052   1 000928  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

     1037    21053        %EJECT;
PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:185  
     1038    21054        /* DONE - Package up current buffer and queue it to be sent to device */
     1039    21055
     1040    21056        /*F*   NAME:    DONE
     1041    21057               PURPOSE: To take the currently being built device output buffer
     1042    21058                       for a particular 3270, and place it at the end of that
     1043    21059                       devices' output queue.
     1044    21060        */
     1045    21061        /*D*   NAME:    DONE
     1046    21062              CALL:    Via 3270 handler routines
     1047    21063              USES DATA STRUCTURES
     1048    21064                       KZ$3270CTX
     1049    21065                       KZ$OTPBFR
     1050    21066              DESCRIPTION:
     1051    21067                       A call to this routine indicates that a block is ready
     1052    21068                       to be send to the device. It is therefore placed at
     1053    21069                       the end of the device output queue by this routine.
     1054    21070        */
     1055    21071
     1056    21072    1   DONE:   PROC (QUEUE_ON_TAIL) ALTRET;

  21072   1 00092B  EFC7 0058            DONE            STB,B6   ENTR_FLG+1,AUTO

     1057    21073    2   DCL QUEUE_ON_TAIL BIT(1) ALIGNED;
     1058    21074
     1059    21075    2           IF BFR$=ADDR(NIL) THEN

  21075   1 00092D  8DC7 000A                            CMN      BFR$,AUTO
          1 00092F  0981 0005                            BNE      s:21078,PREL

     1060    21076    2              RETURN;

  21076   1 000931  ECC7 0058                            LDB,B6   ENTR_FLG+1,AUTO
          1 000933  C3C6 0001                            LNJ,B4   1,B6

     1061    21077
     1062    21078    2           KZ$3270DEV.SYNCX=SIZEC(KZ$OTPBFR);

PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:186  
  21078   1 000935  DCC7 0008                            LDB,B5   DEV$,AUTO
          1 000937  6C10                                 LDV,R6   16
          1 000938  EF45 0010                            STR,R6   16,B5

     1063    21079
     1064    21080    2           IF KZ$3270DEV.PRINTER THEN

  21080   1 00093A  82C5 0012                            LB,'0800'X        18,B5
  21080   1 00093C       0800
          1 00093D  0581 013A                            BBF      s:21172,PREL

     1065    21081    3           DO;

     1066    21082    3              IF BYTX<=SIZEC(KZ$OTPBFR)+3 THEN

  21082   1 00093F  D847 0028                            LDR,R5   BYTX,AUTO
          1 000941  5D13                                 CMV,R5   19
          1 000942  0301 0051                            BG       s:21106,PREL

     1067    21083    4              DO;

     1068    21084    4                 IF KZ$OTPBFR.MRKCNT > 0 AND KZ$3270DEV.OTPHD$ = ADDR(NIL) AND

  21084   1 000944  ECC7 000A                            LDB,B6   BFR$,AUTO
          1 000946  82C6 0005                            LB,'00FF'X        5,B6
          1 000948       00FF
          1 000949  0581 0046                            BBF      s:21102,PREL
          1 00094B  8DC5 0008                            CMN      8,B5
          1 00094D  0981 0042                            BNE      s:21102,PREL
          1 00094F  82C5 0012                            LB,'0400'X        18,B5
          1 000951       0400
          1 000952  0501 003D                            BBT      s:21102,PREL

     1069    21085    4                   NOT KZ$3270DEV.OTPBSY THEN
     1070    21086    5                 DO;                       /* RLS BUFFER                         */

     1071    21087    5                    TBFR$ = BFR$;
PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:187  

  21087   1 000954  EFC7 000C                            STB,B6   TBFR$,AUTO

     1072    21088    5                    KZ$OTPBFR.FLAGS.RELOTPBFR='1'B;

  21088   1 000956  8946 0002                            LBT,'0002'X       2,B6
  21088   1 000958       0002

     1073    21089                         %DISABLE(INHLVL=KH_INHLVL);

  21090   1 000959  C800 0000 0000  xsym                 LDR,R4   KH_INHLVL
          1 00095C  CF47 003C                            STR,R4   DISABLE_LEVEL,AUTO

  21091   1 00095E  EBC7 003C                            LAB,B6   DISABLE_LEVEL,AUTO
          1 000960  EFC7 0062                            STB,B6   C_MRD+1,AUTO
          1 000962  BBC7 0062                            LAB,B3   C_MRD+1,AUTO
          1 000964  CBF0 0100                            LAB,B4   256,IMO
          1 000966  E380 0000 0000  xent                 LNJ,B6   KHI$DISABLE
          1 000969       0001                            DC       s:21093,PREL

     1074    21093    5                    CALL KZV$RELOTPBFR(KZ$3270DEV,TBFR$);

  21093   1 00096A  EBC7 000C                            LAB,B6   TBFR$,AUTO
          1 00096C  EFC7 0064                            STB,B6   C_MRD+3,AUTO
          1 00096E  DCC7 0008                            LDB,B5   DEV$,AUTO
          1 000970  DFC7 0062                            STB,B5   C_MRD+1,AUTO
          1 000972  BBC7 0062                            LAB,B3   C_MRD+1,AUTO
          1 000974  CBF0 0200                            LAB,B4   512,IMO
          1 000976  E380 0000 0000  xent                 LNJ,B6   KZV$RELOTPBFR
          1 000979       0001                            DC       s:21095,PREL

     1075    21094                         %ENABLE(INHLVL=KH_INHLVL);

  21095   1 00097A  E847 003C                            LDR,R6   DISABLE_LEVEL,AUTO
          1 00097C  E900 0000 0000  xsym                 CMR,R6   KH_INHLVL
          1 00097F  0901 0007                            BE       s:21100,PREL

PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:188  
  21097   1 000981  CBF0 0000                            LAB,B4   0,IMO
          1 000983  E380 0000 0000  xent                 LNJ,B6   KHI$ENABLE
          1 000986       0001                            DC       s:21100,PREL

     1076    21100    5                    BFR$ = ADDR(NIL) ; BYTX = 0; BYTSIZ = 0;

  21100   1 000987  EB80 0000 0000                       LAB,B6   0
          1 00098A  EFC7 000A                            STB,B6   BFR$,AUTO

  21100   1 00098C  8747 0028                            CL       BYTX,AUTO

  21100   1 00098E  8747 0029                            CL       BYTSIZ,AUTO

     1077    21101    5                    END;                   /* RLS   BUFFER                       */

     1078    21102    4                 RETURN;              /* Sending empty buffer causes new-line    */

  21102   1 000990  ECC7 0058                            LDB,B6   ENTR_FLG+1,AUTO
          1 000992  C3C6 0001                            LNJ,B4   1,B6

     1079    21103    4                 END;
     1080    21104    4              ELSE DO;           /* Hold on to last line of data passed by VDH   */

     1081    21105                      %MAC_GETBFR;

  21106   1 000994  0581 0007                            BBF      s:21109,PREL

  21107   1 000996  C845 0018                            LDR,R4   24,B5
          1 000998  CF47 0021                            STR,R4   SZX,AUTO
          1 00099A  0F81 0004                            B        s:21111,PREL

  21109   1 00099C  4C02                                 LDV,R4   2
          1 00099D  CF47 0021                            STR,R4   SZX,AUTO

  21111   1 00099F  B800 0000 0000  xsym                 LDR,R3   KH_INHLVL
          1 0009A2  BF47 003C                            STR,R3   DISABLE_LEVEL,AUTO

PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:189  
  21112   1 0009A4  EBC7 003C                            LAB,B6   DISABLE_LEVEL,AUTO
          1 0009A6  EFC7 0062                            STB,B6   C_MRD+1,AUTO
          1 0009A8  BBC7 0062                            LAB,B3   C_MRD+1,AUTO
          1 0009AA  CBF0 0100                            LAB,B4   256,IMO
          1 0009AC  E380 0000 0000  xent                 LNJ,B6   KHI$DISABLE
          1 0009AF       0001                            DC       s:21114,PREL

  21114   1 0009B0  E847 0021                            LDR,R6   SZX,AUTO
          1 0009B2  6A81 0039                            BLEZ,R6  s:21123,PREL

  21115   1 0009B4  B847 0021                            LDR,R3   SZX,AUTO
          1 0009B6  E830 0000 0020  00                   LDR,R6   KZ_3270_BFRSIZ,R3
          1 0009B9  EF47 0020                            STR,R6   SZ,AUTO

  21116   1 0009BB  EBC7 000C                            LAB,B6   TBFR$,AUTO
          1 0009BD  EFC7 0064                            STB,B6   C_MRD+3,AUTO
          1 0009BF  DBC7 0020                            LAB,B5   SZ,AUTO
          1 0009C1  DFC7 0062                            STB,B5   C_MRD+1,AUTO
          1 0009C3  BBC7 0062                            LAB,B3   C_MRD+1,AUTO
          1 0009C5  CBF0 0200                            LAB,B4   512,IMO
          1 0009C7  E380 0000 0000  xent                 LNJ,B6   KVB$GET2NSYS
          1 0009CA       001D                            DC       s:21120,PREL

  21117   1 0009CB  EC80 0000 0006  xsym                 LDB,B6   KZ_3270M_HDR+6
          1 0009CE  B847 0021                            LDR,R3   SZX,AUTO
          1 0009D0  3E41                                 ADV,R3   65
          1 0009D1  BF47 0062                            STR,R3   C_MRD+1,AUTO
          1 0009D3  3001                                 SOL,R3   1
          1 0009D4  3E01                                 ADV,R3   1
          1 0009D5  A847 0062                            LDR,R2   C_MRD+1,AUTO
          1 0009D7  2001                                 SOL,R2   1
          1 0009D8  8AB6                                 INC      ,B6,R3
          1 0009D9  8EA6                                 CAD      ,B6,R2

  21118   1 0009DA  EC80 0000 0006  xsym                 LDB,B6   KZ_3270M_HDR+6
          1 0009DD  E847 0020                            LDR,R6   SZ,AUTO
          1 0009DF  70F0                                 DAR,R7   16
PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:190  
          1 0009E0  7081                                 DOL,R7   1
          1 0009E1  8446 001E                            AID      30,B6
          1 0009E3  8D46 001E                            SDI      30,B6

  21119   1 0009E5  0F81 0017                            B        s:21131,PREL

  21120   1 0009E7  88C7 0021            NOBFR           DEC      SZX,AUTO

  21121   1 0009E9  E847 0021                            LDR,R6   SZX,AUTO
          1 0009EB  6A49                                 BGZ,R6   s:21115,SPREL

  21123   1 0009EC  D847 003C                            LDR,R5   DISABLE_LEVEL,AUTO
          1 0009EE  D900 0000 0000  xsym                 CMR,R5   KH_INHLVL
          1 0009F1  0901 0007                            BE       s:21128,PREL

  21125   1 0009F3  CBF0 0000                            LAB,B4   0,IMO
          1 0009F5  E380 0000 0000  xent                 LNJ,B6   KHI$ENABLE
          1 0009F8       0001                            DC       s:21128,PREL

  21128   1 0009F9  ECC7 0058                            LDB,B6   ENTR_FLG+1,AUTO
          1 0009FB  B806                                 LDR,R3   ,B6
          1 0009FC  C3B6                                 LNJ,B4   ,B6,R3

  21131   1 0009FD  D847 003C            GOTBFR          LDR,R5   DISABLE_LEVEL,AUTO
          1 0009FF  D900 0000 0000  xsym                 CMR,R5   KH_INHLVL
          1 000A02  0901 0007                            BE       s:21138,PREL

  21133   1 000A04  CBF0 0000                            LAB,B4   0,IMO
          1 000A06  E380 0000 0000  xent                 LNJ,B6   KHI$ENABLE
          1 000A09       0001                            DC       s:21138,PREL

     1082    21137                                      /* Transfer from current buffer to new buffer   */
     1083    21138    4                 K = SIZEC(KZ$OTPBFR) + 3;

  21138   1 000A0A  6C13                                 LDV,R6   19
          1 000A0B  EF47 0025                            STR,R6   K,AUTO

PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:191  
     1084    21139    4                 J=0;

  21139   1 000A0D  8747 0024                            CL       J,AUTO

     1085    21140    4                 IF KZ$3270DEV.LSTOTPLINX > 0 THEN

  21140   1 000A0F  ECC7 0008                            LDB,B6   DEV$,AUTO
          1 000A11  D846 0019                            LDR,R5   25,B6
          1 000A13  5901 0052                            BEZ,R5   s:21166,PREL

     1086    21141    5                 DO;                       /* Transfer data                      */

     1087    21142    5                    J = BYTX - KZ$3270DEV.LSTOTPLINX;

  21142   1 000A15  D247 0028                            SUB,R5   BYTX,AUTO
          1 000A17  8255                                 NEG      R5
          1 000A18  DF47 0024                            STR,R5   J,AUTO

     1088    21143    6                    IF J > (SZ * 2) - (SIZEC(KZ$OTPBFR) + 3) THEN DO;

  21143   1 000A1A  C847 0020                            LDR,R4   SZ,AUTO
          1 000A1C  4001                                 SOL,R4   1
          1 000A1D  4EED                                 ADV,R4   -19
          1 000A1E  C955                                 CMR,R4   R5
          1 000A1F  0881 0033                            BAGE     s:21159,PREL

     1089    21144                            /* The buffer we got is too small to hold the last line
     1090    21145                               of output...disconnect due to lack of MEMory. */
     1091    21146                            %DISABLE(INHLVL=KH_INHLVL);

  21147   1 000A21  B800 0000 0000  xsym                 LDR,R3   KH_INHLVL
          1 000A24  BF47 003C                            STR,R3   DISABLE_LEVEL,AUTO

  21148   1 000A26  DBC7 003C                            LAB,B5   DISABLE_LEVEL,AUTO
          1 000A28  DFC7 0062                            STB,B5   C_MRD+1,AUTO
          1 000A2A  BBC7 0062                            LAB,B3   C_MRD+1,AUTO
          1 000A2C  CBF0 0100                            LAB,B4   256,IMO
PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:192  
          1 000A2E  E380 0000 0000  xent                 LNJ,B6   KHI$DISABLE
          1 000A31       0001                            DC       s:21150,PREL

     1092    21150    6                       CALL KVB$RLS2NSYS(SZ,TBFR$);

  21150   1 000A32  EBC7 000C                            LAB,B6   TBFR$,AUTO
          1 000A34  EFC7 0064                            STB,B6   C_MRD+3,AUTO
          1 000A36  DBC7 0020                            LAB,B5   SZ,AUTO
          1 000A38  DFC7 0062                            STB,B5   C_MRD+1,AUTO
          1 000A3A  BBC7 0062                            LAB,B3   C_MRD+1,AUTO
          1 000A3C  CBF0 0200                            LAB,B4   512,IMO
          1 000A3E  E380 0000 0000  xent                 LNJ,B6   KVB$RLS2NSYS
          1 000A41       0001                            DC       s:21152,PREL

     1093    21151                            %ENABLE(INHLVL=KH_INHLVL);

  21152   1 000A42  E847 003C                            LDR,R6   DISABLE_LEVEL,AUTO
          1 000A44  E900 0000 0000  xsym                 CMR,R6   KH_INHLVL
          1 000A47  0901 0007                            BE       s:21157,PREL

  21154   1 000A49  CBF0 0000                            LAB,B4   0,IMO
          1 000A4B  E380 0000 0000  xent                 LNJ,B6   KHI$ENABLE
          1 000A4E       0001                            DC       s:21157,PREL

     1094    21157    6                       ALTRETURN;

  21157   1 000A4F  ECC7 0058                            LDB,B6   ENTR_FLG+1,AUTO
          1 000A51  B806                                 LDR,R3   ,B6
          1 000A52  C3B6                                 LNJ,B4   ,B6,R3

     1095    21158    6                       END;
     1096    21159    5                    K = SIZEC(KZ$OTPBFR)+3;

  21159   1 000A53  EF47 0025                            STR,R6   K,AUTO

     1097    21160
     1098    21161    5                    CALL INSERT(TBFR$->CHR1,K,J,
PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:193  

  21161   1 000A55  B846 0019                            LDR,R3   25,B6
          1 000A57  ACC7 000A                            LDB,B2   BFR$,AUTO
          1 000A59  A853                                 LDR,R2   R3
          1 000A5A  E855                                 LDR,R6   R5
          1 000A5B  BCC7 000C                            LDB,B3   TBFR$,AUTO
          1 000A5D  B847 0025                            LDR,R3   K,AUTO
          1 000A5F  0008                                 MMM

     1099    21162    5                      SUBSTR(BFR$->CHR1,KZ$3270DEV.LSTOTPLINX,J));
     1100    21163    5                    BYTX = KZ$3270DEV.LSTOTPLINX;

  21163   1 000A60  ECC7 0008                            LDB,B6   DEV$,AUTO
          1 000A62  E846 0019                            LDR,R6   25,B6
          1 000A64  EF47 0028                            STR,R6   BYTX,AUTO

     1101    21164    5                    END;                   /* Transfer data                      */

     1102    21165    4                 END;       /* Save last line of printer output in new buffer    */

     1103    21166    3              LSTBYT = BFR$ -> BYT(BYTX-1); /* Save last byte of data            */

  21166   1 000A66  DCC7 000A                            LDB,B5   BFR$,AUTO
          1 000A68  B847 0028                            LDR,R3   BYTX,AUTO
          1 000A6A  3EFF                                 ADV,R3   -1
          1 000A6B  E2B5                                 LLH,R6   ,B5,R3
          1 000A6C  EF47 0026                            STR,R6   LSTBYT,AUTO

     1104    21167    3              BFR$->BYT(BYTX) = BITBIN(%KZ#EM);

  21167   1 000A6E  5C19                                 LDV,R5   25
          1 000A6F  A847 0028                            LDR,R2   BYTX,AUTO
          1 000A71  D7A5                                 STH,R5   ,B5,R2

     1105    21168    3              BYTX = BYTX +1;

  21168   1 000A72  8AC7 0028                            INC      BYTX,AUTO
PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:194  

     1106    21169    3              BYTSIZ = BYTSIZ -1;

  21169   1 000A74  88C7 0029                            DEC      BYTSIZ,AUTO

     1107    21170    3              END;

  21170   1 000A76  0F81 0010                            B        s:21178,PREL

     1108    21171    2           ELSE
     1109    21172    3              IF NOT KZ$OTPBFR.FLAGS.TRANS# THEN DO;

  21172   1 000A78  ECC7 000A                            LDB,B6   BFR$,AUTO
          1 000A7A  82C6 0002                            LB,'0001'X        2,B6
          1 000A7C       0001
          1 000A7D  0501 0009                            BBT      s:21178,PREL

     1110    21173    3                 BFR$->BYT(BYTX) = BITBIN(%KZ#INSERT_CURSOR);

  21173   1 000A7F  5C13                                 LDV,R5   19
          1 000A80  B847 0028                            LDR,R3   BYTX,AUTO
          1 000A82  D7B6                                 STH,R5   ,B6,R3

     1111    21174    3                 BYTX = BYTX +1;

  21174   1 000A83  8AC7 0028                            INC      BYTX,AUTO

     1112    21175    3                 BYTSIZ = BYTSIZ -1;

  21175   1 000A85  88C7 0029                            DEC      BYTSIZ,AUTO

     1113    21176    3                 END;

     1114    21177
     1115    21178    2           IF NOT KZ$3270DEV.CTR$->KZ$3270CTR.LIN$->KZ$LINCTX.PRO.SLAVE THEN

  21178   1 000A87  ECC7 0008                            LDB,B6   DEV$,AUTO
PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:195  
          1 000A89  DCC6 0002                            LDB,B5   2,B6
          1 000A8B  CCC5 0004                            LDB,B4   4,B5
          1 000A8D  89C4 004B                            CMZ      75,B4
          1 000A8F  0801 0006                            BAL      s:21181,PREL

     1116    21179    2              S=SIZEC(KZ$OTPBFR)+2;

  21179   1 000A91  6C12                                 LDV,R6   18
          1 000A92  EF47 0012                            STR,R6   S,AUTO
          1 000A94  0F81 0004                            B        s:21182,PREL

     1117    21180    2           ELSE
     1118    21181    2              S=SIZEC(KZ$OTPBFR)+4;

  21181   1 000A96  6C14                                 LDV,R6   20
          1 000A97  EF47 0012                            STR,R6   S,AUTO

     1119    21182    3           IF NOT KZ$OTPBFR.FLAGS.TRANS# THEN DO;

  21182   1 000A99  BCC7 000A                            LDB,B3   BFR$,AUTO
          1 000A9B  82C3 0002                            LB,'0001'X        2,B3
          1 000A9D       0001
          1 000A9E  0501 0021                            BBT      s:21190,PREL

     1120    21183    4              IF KZ$3270DEV.KBDLCK AND %KV_VDI.USRRQSDAT THEN DO;

  21183   1 000AA0  82C6 001A                            LB,'0080'X        26,B6
  21183   1 000AA2       0080
          1 000AA3  0581 0011                            BBF      s:21187,PREL
          1 000AA5  AC80 0000 0000  xsym                 LDB,B2   KV$PTR$
          1 000AA8  9C82                                 LDB,B1   ,B2
          1 000AA9  82C1 001D                            LB,'0018'X        29,B1
          1 000AAB       0018
          1 000AAC  0581 0008                            BBF      s:21187,PREL

     1121    21184    4                 WCC.KEYRSTR(S)='1'B;

PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:196  
  21184   1 000AAE  B856                                 LDR,R3   R6
          1 000AAF  3003                                 SOL,R3   3
          1 000AB0  3E06                                 ADV,R3   6
          1 000AB1  8933                                 LBT      ,B3,R3

     1122    21185    4                 KZ$3270DEV.KBDLCK='0'B;

  21185   1 000AB2  8846 001A                            LBF,'0080'X       26,B6
  21185   1 000AB4       0080

     1123    21186    4                 END;

     1124    21187    3              BFR$->BYT(S)=KZ_3270XL(MOD(BFR$->BYT(S),64)); /* WCC               */

  21187   1 000AB5  DCC7 000A                            LDB,B5   BFR$,AUTO
          1 000AB7  B856                                 LDR,R3   R6
          1 000AB8  D2B5                                 LLH,R5   ,B5,R3
          1 000AB9  D570 003F                            AND,R5   63,IMO
          1 000ABB  A855                                 LDR,R2   R5
          1 000ABC  D2A0 0000 0000  00                   LLH,R5   KZ_3270XLB,R2
          1 000ABF  D7B5                                 STH,R5   ,B5,R3

     1125    21188    3              END;

     1126    21189
     1127    21190    2           KZ$OTPBFR.DATA_SIZ=BYTX-SIZEC(KZ$OTPBFR);

  21190   1 000AC0  DCC7 000A                            LDB,B5   BFR$,AUTO
          1 000AC2  D847 0028                            LDR,R5   BYTX,AUTO
          1 000AC4  5EF0                                 ADV,R5   -16
          1 000AC5  DF45 0003                            STR,R5   3,B5

     1128    21191
     1129    21192        /* DISABLE while mucking with items touched by dev manager */
     1130    21193                %DISABLE(INHLVL=KH_INHLVL);

  21194   1 000AC7  C800 0000 0000  xsym                 LDR,R4   KH_INHLVL
PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:197  
          1 000ACA  CF47 003C                            STR,R4   DISABLE_LEVEL,AUTO

  21195   1 000ACC  DBC7 003C                            LAB,B5   DISABLE_LEVEL,AUTO
          1 000ACE  DFC7 0062                            STB,B5   C_MRD+1,AUTO
          1 000AD0  BBC7 0062                            LAB,B3   C_MRD+1,AUTO
          1 000AD2  CBF0 0100                            LAB,B4   256,IMO
          1 000AD4  E380 0000 0000  xent                 LNJ,B6   KHI$DISABLE
          1 000AD7       0001                            DC       s:21197,PREL

     1131    21197    2           KZ$OTPBFR.FLAGS.CNT#='1'B;      /* DATA_SIZ added to OTPBYTES         */

  21197   1 000AD8  ECC7 000A                            LDB,B6   BFR$,AUTO
          1 000ADA  8946 0002                            LBT,'0020'X       2,B6
          1 000ADC       0020

     1132    21198    2           KZ$3270DEV.OTPBYTES=KZ$3270DEV.OTPBYTES+KZ$OTPBFR.DATA_SIZ;

  21198   1 000ADD  ECC7 0008                            LDB,B6   DEV$,AUTO
          1 000ADF  DCC7 000A                            LDB,B5   BFR$,AUTO
          1 000AE1  E846 0014                            LDR,R6   20,B6
          1 000AE3  EA45 0003                            ADD,R6   3,B5
          1 000AE5  EF46 0014                            STR,R6   20,B6

     1133    21199    2           IF KZ$3270DEV.OTPBYTES>=KZT_THRTL_BLK AND

  21199   1 000AE7  E900 0000 003E  00                   CMR,R6   KZT_THRTL_BLK
          1 000AEA  0201 0042                            BL       s:21232,PREL
          1 000AEC  82C6 0012                            LB,'1000'X        18,B6
          1 000AEE       1000
          1 000AEF  0501 003D                            BBT      s:21232,PREL

     1134    21200    3             NOT KZ$3270DEV.THROTL THEN DO;

     1135    21201    3              KZ$3270DEV.THROTL='1'B;

  21201   1 000AF1  8946 0012                            LBT,'1000'X       18,B6
  21201   1 000AF3       1000
PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:198  

     1136    21202                   %ENABLE(INHLVL=KH_INHLVL);

  21203   1 000AF4  D847 003C                            LDR,R5   DISABLE_LEVEL,AUTO
          1 000AF6  D900 0000 0000  xsym                 CMR,R5   KH_INHLVL
          1 000AF9  0901 0007                            BE       s:21214,PREL

  21205   1 000AFB  CBF0 0000                            LAB,B4   0,IMO
          1 000AFD  E380 0000 0000  xent                 LNJ,B6   KHI$ENABLE
          1 000B00       0001                            DC       s:21214,PREL

     1137    21208                   %KV$RQSOTP (RQSOTP=NO);
             21214    4           IF KV$PTR.VDI$->KV$VDI.RQSOTP THEN DO;

  21214   1 000B01  EC80 0000 0000  xsym                 LDB,B6   KV$PTR$
          1 000B04  DC86                                 LDB,B5   ,B6
          1 000B05  82C5 0019                            LB,'0008'X        25,B5
          1 000B07       0008
          1 000B08  0581 0013                            BBF      s:21227,PREL

             21215    4              KV$PTR.VDI$->KV$VDI.RQSOTP = '0'B;

  21215   1 000B0A  8845 0019                            LBF,'0008'X       25,B5
  21215   1 000B0C       0008

             21216    4              IF KV$PTR.VDI$->KV$VDI.SSNCNT>1

  21216   1 000B0D  DC86                                 LDB,B5   ,B6
          1 000B0E  E845 000E                            LDR,R6   14,B5
          1 000B10  6D01                                 CMV,R6   1
          1 000B11  0381 000A                            BLE      s:21227,PREL

             21217    4              THEN CALL KVV$VDI (KV_VDH_EVT_RQSOTP);

  21217   1 000B13  BB80 0000 0002  02                   LAB,B3   +2
          1 000B16  CBF0 0100                            LAB,B4   256,IMO
          1 000B18  E380 0000 0000  xent                 LNJ,B6   KVV$VDI
PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:199  
          1 000B1B       0001                            DC       s:21227,PREL

             21218    4              END;

     1138    21226                   %DISABLE(INHLVL=KH_INHLVL);

  21227   1 000B1C  E800 0000 0000  xsym                 LDR,R6   KH_INHLVL
          1 000B1F  EF47 003C                            STR,R6   DISABLE_LEVEL,AUTO

  21228   1 000B21  EBC7 003C                            LAB,B6   DISABLE_LEVEL,AUTO
          1 000B23  EFC7 0062                            STB,B6   C_MRD+1,AUTO
          1 000B25  BBC7 0062                            LAB,B3   C_MRD+1,AUTO
          1 000B27  CBF0 0100                            LAB,B4   256,IMO
          1 000B29  E380 0000 0000  xent                 LNJ,B6   KHI$DISABLE
          1 000B2C       0001                            DC       s:21232,PREL

     1139    21230    3              END;

     1140    21231
     1141    21232    3           IF NOT KZ$3270DEV.ACTIVE THEN DO;

  21232   1 000B2D  ECC7 0008                            LDB,B6   DEV$,AUTO
          1 000B2F  82C6 0012                            LB,'4000'X        18,B6
          1 000B31       4000
          1 000B32  0501 0028                            BBT      s:21241,PREL

     1142    21233    3              KZ$OTPBFR.CMPCOD=%KV_CMPCOD_DVCERR;

  21233   1 000B34  6C0D                                 LDV,R6   13
          1 000B35  DCC7 000A                            LDB,B5   BFR$,AUTO
          1 000B37  E7C5 0005                            STH,R6   5,B5

     1143    21234    3              T$ = BFR$;     /* NIL BFR$ pointer before release buffer call

  21234   1 000B39  DCC7 000A                            LDB,B5   BFR$,AUTO
          1 000B3B  DFC7 000E                            STB,B5   T$,AUTO

PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:200  
     1144    21235                      to prevent looping trying to release the same buffer */
     1145    21236    3              BFR$ = ADDR(NIL); %KV_VDI.OTPBFR_.ADR$ = ADDR(NIL);

  21236   1 000B3D  CB80 0000 0000                       LAB,B4   0
          1 000B40  CFC7 000A                            STB,B4   BFR$,AUTO

  21236   1 000B42  BC80 0000 0000  xsym                 LDB,B3   KV$PTR$
          1 000B45  AC83                                 LDB,B2   ,B3
          1 000B46  9B80 0000 0000                       LAB,B1   0
          1 000B49  9FC2 000A                            STB,B1   10,B2

     1146    21237    3              CALL KZV$RELOTPBFR(KZ$3270DEV,T$);

  21237   1 000B4B  DBC7 000E                            LAB,B5   T$,AUTO
          1 000B4D  DFC7 0064                            STB,B5   C_MRD+3,AUTO
          1 000B4F  EFC7 0062                            STB,B6   C_MRD+1,AUTO
          1 000B51  BBC7 0062                            LAB,B3   C_MRD+1,AUTO
          1 000B53  CBF0 0200                            LAB,B4   512,IMO
          1 000B55  E380 0000 0000  xent                 LNJ,B6   KZV$RELOTPBFR
          1 000B58       0001                            DC       s:21238,PREL

     1147    21238    3              GOTO DONE_END;

  21238   1 000B59  0F81 0063                            B        s:21269,PREL

     1148    21239    3              END;
     1149    21240
     1150    21241    3           IF QUEUE_ON_TAIL THEN DO;

  21241   1 000B5B  DCC7 005A                            LDB,B5   @QUEUE_ON_TAIL,AUTO
          1 000B5D  8985                                 CMZ      ,B5
          1 000B5E  0881 0016                            BAGE     s:21251,PREL

     1151    21242                                 /* Put the buffer on the END of the device queue     */
     1152    21243    3              IF KZ$3270DEV.OTPHD$=ADDR(NIL) THEN

  21243   1 000B60  8DC6 0008                            CMN      8,B6
PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:201  
          1 000B62  0981 0007                            BNE      s:21246,PREL

     1153    21244    3                 KZ$3270DEV.OTPHD$=BFR$;

  21244   1 000B64  CCC7 000A                            LDB,B4   BFR$,AUTO
          1 000B66  CFC6 0008                            STB,B4   8,B6
          1 000B68  0F81 0006                            B        s:21247,PREL

     1154    21245    3              ELSE
     1155    21246    3                 KZ$3270DEV.OTPTL$->KZ$OTPBFR.LNK$=BFR$;

  21246   1 000B6A  CCC6 000A                            LDB,B4   10,B6
          1 000B6C  BCC7 000A                            LDB,B3   BFR$,AUTO
          1 000B6E  BF84                                 STB,B3   ,B4

     1156    21247    3              KZ$3270DEV.OTPTL$=BFR$;

  21247   1 000B6F  CCC7 000A                            LDB,B4   BFR$,AUTO
          1 000B71  CFC6 000A                            STB,B4   10,B6

     1157    21248    3              END;

  21248   1 000B73  0F81 0014                            B        s:21257,PREL

     1158    21249    3           ELSE DO;

     1159    21250                                 /* Put the buffer on the FRONT of the device queue   */
     1160    21251    3              IF KZ$3270DEV.OTPHD$=ADDR(NIL) THEN

  21251   1 000B75  8DC6 0008                            CMN      8,B6
          1 000B77  0981 0007                            BNE      s:21254,PREL

     1161    21252    3                 KZ$3270DEV.OTPTL$=BFR$;

  21252   1 000B79  CCC7 000A                            LDB,B4   BFR$,AUTO
          1 000B7B  CFC6 000A                            STB,B4   10,B6
          1 000B7D  0F81 0006                            B        s:21255,PREL
PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:202  

     1162    21253    3              ELSE
     1163    21254    3                 BFR$->KZ$OTPBFR.LNK$=KZ$3270DEV.OTPHD$;

  21254   1 000B7F  CCC6 0008                            LDB,B4   8,B6
          1 000B81  BCC7 000A                            LDB,B3   BFR$,AUTO
          1 000B83  CF83                                 STB,B4   ,B3

     1164    21255    3              KZ$3270DEV.OTPHD$=BFR$;

  21255   1 000B84  CCC7 000A                            LDB,B4   BFR$,AUTO
          1 000B86  CFC6 0008                            STB,B4   8,B6

     1165    21256    3              END;

     1166    21257    2           T$=KZ$3270DEV.CTR$->KZ$3270CTR.LIN$; /* Line CTX addr                 */

  21257   1 000B88  CCC6 0002                            LDB,B4   2,B6
          1 000B8A  BCC4 0004                            LDB,B3   4,B4
          1 000B8C  BFC7 000E                            STB,B3   T$,AUTO

     1167    21258    2           T$->KZ$LINCTX.OTPCNT=T$->KZ$LINCTX.OTPCNT+1;

  21258   1 000B8E  8AC3 004D                            INC      77,B3

     1168    21259    2           IF T$->KZ$LINCTX.PRMCTBTYP=%KZ#CTBTYP_DELAY AND

  21259   1 000B90  E843 000C                            LDR,R6   12,B3
          1 000B92  E570 00FF                            AND,R6   255,IMO
          1 000B94  6D03                                 CMV,R6   3
          1 000B95  0981 0027                            BNE      s:21269,PREL
          1 000B97  8DC3 0031                            CMN      49,B3
          1 000B99  0901 0023                            BE       s:21269,PREL

     1169    21260    3             T$->KZ$LINCTX.CTB.PRM$~=ADDR(NIL) THEN DO;

     1170    21261    3              KH$CLK=KH_CLK_RESET;
PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:203  

  21261   1 000B9B  AB80 0000 0000  00                   LAB,B2   KZ_3270XLB
          1 000B9E  2C62                                 LDV,R2   98
          1 000B9F  6C16                                 LDV,R6   22
          1 000BA0  BB87                                 LAB,B3   ,AUTO
          1 000BA1  3C60                                 LDV,R3   96
          1 000BA2  0008                                 MMM

     1171    21262    3              KH$CLK.PRD=0;

  21262   1 000BA3  8747 003A                            CL       KH$CLK+10,AUTO

     1172    21263    3              KH$CLK.CTBCTX$=T$->KZ$LINCTX.CTB.PRM$;

  21263   1 000BA5  ECC7 000E                            LDB,B6   T$,AUTO
          1 000BA7  CCC6 0031                            LDB,B4   49,B6
          1 000BA9  CFC7 0030                            STB,B4   KH$CLK,AUTO

     1173    21264    3              CALL KHC$CLOCK (KH$CLK)

  21264   1 000BAB  ABC7 0030                            LAB,B2   KH$CLK,AUTO
          1 000BAD  AFC7 0062                            STB,B2   C_MRD+1,AUTO
          1 000BAF  BBC7 0062                            LAB,B3   C_MRD+1,AUTO
          1 000BB1  CBF0 0100                            LAB,B4   256,IMO
          1 000BB3  E380 0000 0000  xent                 LNJ,B6   KHC$CLOCK
          1 000BB6       0003                            DC       s:21267,PREL
          1 000BB7  0F81 0005                            B        s:21269,PREL

     1174    21265    3              WHENALTRETURN
     1175    21266    4              DO;

     1176    21267    4                 CALL M$XXX;

  21267   1 000BB9  B870 0082                            LDR,R3   130,IMO
          1 000BBB  0001                                 MCL
          1 000BBC       0000                            DC       s:21267+3,PREL

PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:204  
     1177    21268    4                 END;

     1178    21269    3              END;

     1179    21270    2   DONE_END:
     1180    21271                %ENABLE(INHLVL=KH_INHLVL);

  21272   1 000BBD  E847 003C            DONE_END        LDR,R6   DISABLE_LEVEL,AUTO
          1 000BBF  E900 0000 0000  xsym                 CMR,R6   KH_INHLVL
          1 000BC2  0901 0007                            BE       s:21283,PREL

  21274   1 000BC4  CBF0 0000                            LAB,B4   0,IMO
          1 000BC6  E380 0000 0000  xent                 LNJ,B6   KHI$ENABLE
          1 000BC9       0001                            DC       s:21283,PREL

     1181    21277
     1182    21278        /*
     1183    21279           If device = printer then a buffer has been allocated above and the  last
     1184    21280           line of output data from VDH has been moved into it. Now we'll init
     1185    21281           the buffer header and tell VDH it's there.
     1186    21282        */
     1187    21283    2           IF KZ$3270DEV.PRINTER THEN

  21283   1 000BCA  ECC7 0008                            LDB,B6   DEV$,AUTO
          1 000BCC  82C6 0012                            LB,'0800'X        18,B6
          1 000BCE       0800
          1 000BCF  0581 0033                            BBF      s:21305,PREL

     1188    21284    3           DO;

     1189    21285    3              BFR$ = TBFR$;

  21285   1 000BD1  DCC7 000C                            LDB,B5   TBFR$,AUTO
          1 000BD3  DFC7 000A                            STB,B5   BFR$,AUTO

     1190    21286    3              CALL INITBFRHDR;

PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:205  
  21286   1 000BD5  E3C0 00BD                            LNJ,B6   s:0,PREL
          1 000BD7       0001                            DC       s:21291,PREL

     1191    21287              /*
     1192    21288                 If the device is not active then no sence in saving the last line
     1193    21289                 of data since its been device errored anyway.
     1194    21290              */
     1195    21291    3              IF KZ$3270DEV.ACTIVE THEN

  21291   1 000BD8  ECC7 0008                            LDB,B6   DEV$,AUTO
          1 000BDA  82C6 0012                            LB,'4000'X        18,B6
          1 000BDC       4000
          1 000BDD  0581 0021                            BBF      s:21303,PREL

     1196    21292    4              DO;

     1197    21293    4                 BYTX = BYTX + J;     /* J = data bytes moved from previous BFR  */

  21293   1 000BDF  E847 0028                            LDR,R6   BYTX,AUTO
          1 000BE1  EA47 0024                            ADD,R6   J,AUTO
          1 000BE3  EF47 0028                            STR,R6   BYTX,AUTO

     1198    21294    4                 BYTSIZ = BYTSIZ - J;

  21294   1 000BE5  D847 0029                            LDR,R5   BYTSIZ,AUTO
          1 000BE7  D247 0024                            SUB,R5   J,AUTO
          1 000BE9  DF47 0029                            STR,R5   BYTSIZ,AUTO

     1199    21295    4                 IF LSTBYT ~= BITBIN(%KZ#NEW_LINE) AND

  21295   1 000BEB  C847 0026                            LDR,R4   LSTBYT,AUTO
          1 000BED  4D15                                 CMV,R4   21
          1 000BEE  0901 0010                            BE       s:21303,PREL
          1 000BF0  4D0C                                 CMV,R4   12
          1 000BF1  0901 000D                            BE       s:21303,PREL

     1200    21296    4                   LSTBYT ~= BITBIN(%KZ#FORMFEED) THEN
PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:206  
     1201    21297    5                 DO; /* If the last byte of data to the terminal was not a new line

     1202    21298                       cmd then our phs position is off by a line. (tell VDH) */
     1203    21299    5                    %KV_MRD.DVCLIN = %KV_MRD.DVCLIN + 1;

  21299   1 000BF3  DC80 0000 0000  xsym                 LDB,B5   KV$PTR$
          1 000BF6  CCC5 0008                            LDB,B4   8,B5
          1 000BF8  8AC4 001D                            INC      29,B4

     1204    21300    5                    %KV_MRD.DVCCLM = 1;

  21300   1 000BFA  CCC5 0008                            LDB,B4   8,B5
          1 000BFC  3C01                                 LDV,R3   1
          1 000BFD  BF44 001E                            STR,R3   30,B4

     1205    21301    5                    END;

     1206    21302    4                 END;

     1207    21303    3              RETURN;

  21303   1 000BFF  ECC7 0058                            LDB,B6   ENTR_FLG+1,AUTO
          1 000C01  C3C6 0001                            LNJ,B4   1,B6

     1208    21304    3              END;                         /* IF PRINTER                         */
     1209    21305    2           BFR$=ADDR(NIL);

  21305   1 000C03  DB80 0000 0000                       LAB,B5   0
          1 000C06  DFC7 000A                            STB,B5   BFR$,AUTO

     1210    21306    2           BYTX=0;

  21306   1 000C08  8747 0028                            CL       BYTX,AUTO

     1211    21307    2           BYTSIZ=0;

  21307   1 000C0A  8747 0029                            CL       BYTSIZ,AUTO
PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:207  

     1212    21308
     1213    21309    2           RETURN;

  21309   1 000C0C  ECC7 0058                            LDB,B6   ENTR_FLG+1,AUTO
          1 000C0E  C3C6 0001                            LNJ,B4   1,B6

     1214    21310    2   END DONE;
     1215    21311
     1216    21312        %EJECT;
PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:208  
     1217    21313        /* INITBFR - Build and initialize a new output buffer */
     1218    21314
     1219    21315        /*F*  NAME:    INITBFR
     1220    21316              PURPOSE: To get a chunck of system memory, apply a KZ$OTPBFR
     1221    21317                       header on it then attach the buffer to the device
     1222    21318                       context block based by BREG 1.
     1223    21319        */
     1224    21320        /*D*  NAME:    INITBFR
     1225    21321              CALL:    From DONE,CHK_BFR_SIZE AND CLEAR
     1226    21322              USES DATA STRUCTURES
     1227    21323                       KZ$3270CTX
     1228    21324                       KZ$OTPBFR
     1229    21325              INPUT:   Address of device context block (B1)
     1230    21326                       A row/col position for the Set Buffer Address command
     1231    21327                       that is inserted at the beginning of the buffer.(R2)
     1232    21328              DESCRIPTION:
     1233    21329                       This routine will get an output buffer and initialize
     1234    21330                       it with header information and attache it to the
     1235    21331                       device context block.
     1236    21332        */
     1237    21333    1   INITBFR: PROC ALTRET;

  21333   1 000C10  EFC7 005C            INITBFR         STB,B6   @QUEUE_ON_TAIL+2,AUTO

     1238    21334
     1239    21335
     1240    21336        /*
     1241    21337                   GET  AN  OUTPUT  BUFFER
     1242    21338        */
     1243    21339              %MAC_GETBFR;

  21340   1 000C12  DCC7 0008                            LDB,B5   DEV$,AUTO
          1 000C14  82C5 0012                            LB,'0800'X        18,B5
          1 000C16       0800
          1 000C17  0581 0007                            BBF      s:21343,PREL

  21341   1 000C19  E845 0018                            LDR,R6   24,B5
PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:209  
          1 000C1B  EF47 0021                            STR,R6   SZX,AUTO
          1 000C1D  0F81 0004                            B        s:21345,PREL

  21343   1 000C1F  6C02                                 LDV,R6   2
          1 000C20  EF47 0021                            STR,R6   SZX,AUTO

  21345   1 000C22  D800 0000 0000  xsym                 LDR,R5   KH_INHLVL
          1 000C25  DF47 003C                            STR,R5   DISABLE_LEVEL,AUTO

  21346   1 000C27  CBC7 003C                            LAB,B4   DISABLE_LEVEL,AUTO
          1 000C29  CFC7 0062                            STB,B4   C_MRD+1,AUTO
          1 000C2B  BBC7 0062                            LAB,B3   C_MRD+1,AUTO
          1 000C2D  CBF0 0100                            LAB,B4   256,IMO
          1 000C2F  E380 0000 0000  xent                 LNJ,B6   KHI$DISABLE
          1 000C32       0001                            DC       s:21348,PREL

  21348   1 000C33  E847 0021                            LDR,R6   SZX,AUTO
          1 000C35  6A81 0039                            BLEZ,R6  s:21357,PREL

  21349   1 000C37  B847 0021                            LDR,R3   SZX,AUTO
          1 000C39  E830 0000 0020  00                   LDR,R6   KZ_3270_BFRSIZ,R3
          1 000C3C  EF47 0020                            STR,R6   SZ,AUTO

  21350   1 000C3E  EBC7 000C                            LAB,B6   TBFR$,AUTO
          1 000C40  EFC7 0064                            STB,B6   C_MRD+3,AUTO
          1 000C42  DBC7 0020                            LAB,B5   SZ,AUTO
          1 000C44  DFC7 0062                            STB,B5   C_MRD+1,AUTO
          1 000C46  BBC7 0062                            LAB,B3   C_MRD+1,AUTO
          1 000C48  CBF0 0200                            LAB,B4   512,IMO
          1 000C4A  E380 0000 0000  xent                 LNJ,B6   KVB$GET2NSYS
          1 000C4D       001D                            DC       s:21354,PREL

  21351   1 000C4E  EC80 0000 0006  xsym                 LDB,B6   KZ_3270M_HDR+6
          1 000C51  B847 0021                            LDR,R3   SZX,AUTO
          1 000C53  3E41                                 ADV,R3   65
          1 000C54  BF47 0062                            STR,R3   C_MRD+1,AUTO
          1 000C56  3001                                 SOL,R3   1
PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:210  
          1 000C57  3E01                                 ADV,R3   1
          1 000C58  A847 0062                            LDR,R2   C_MRD+1,AUTO
          1 000C5A  2001                                 SOL,R2   1
          1 000C5B  8AB6                                 INC      ,B6,R3
          1 000C5C  8EA6                                 CAD      ,B6,R2

  21352   1 000C5D  EC80 0000 0006  xsym                 LDB,B6   KZ_3270M_HDR+6
          1 000C60  E847 0020                            LDR,R6   SZ,AUTO
          1 000C62  70F0                                 DAR,R7   16
          1 000C63  7081                                 DOL,R7   1
          1 000C64  8446 001E                            AID      30,B6
          1 000C66  8D46 001E                            SDI      30,B6

  21353   1 000C68  0F81 0017                            B        s:21365,PREL

  21354   1 000C6A  88C7 0021            NOBFR           DEC      SZX,AUTO

  21355   1 000C6C  E847 0021                            LDR,R6   SZX,AUTO
          1 000C6E  6A49                                 BGZ,R6   s:21349,SPREL

  21357   1 000C6F  D847 003C                            LDR,R5   DISABLE_LEVEL,AUTO
          1 000C71  D900 0000 0000  xsym                 CMR,R5   KH_INHLVL
          1 000C74  0901 0007                            BE       s:21362,PREL

  21359   1 000C76  CBF0 0000                            LAB,B4   0,IMO
          1 000C78  E380 0000 0000  xent                 LNJ,B6   KHI$ENABLE
          1 000C7B       0001                            DC       s:21362,PREL

  21362   1 000C7C  ECC7 005C                            LDB,B6   @QUEUE_ON_TAIL+2,AUTO
          1 000C7E  B806                                 LDR,R3   ,B6
          1 000C7F  C3B6                                 LNJ,B4   ,B6,R3

  21365   1 000C80  D847 003C            GOTBFR          LDR,R5   DISABLE_LEVEL,AUTO
          1 000C82  D900 0000 0000  xsym                 CMR,R5   KH_INHLVL
          1 000C85  0901 0007                            BE       s:21372,PREL

  21367   1 000C87  CBF0 0000                            LAB,B4   0,IMO
PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:211  
          1 000C89  E380 0000 0000  xent                 LNJ,B6   KHI$ENABLE
          1 000C8C       0001                            DC       s:21372,PREL

     1244    21371
     1245    21372    2           BFR$ = TBFR$;

  21372   1 000C8D  ECC7 000C                            LDB,B6   TBFR$,AUTO
          1 000C8F  EFC7 000A                            STB,B6   BFR$,AUTO
          1 000C91  0F81 0003                            B        s:21382,PREL

     1246    21373    2   INITBFRHDR: ENTRY;                      /*    INIT BUFFER HEADER              */

  21373   1 000C93  EFC7 005C            INITBFRHDR      STB,B6   @QUEUE_ON_TAIL+2,AUTO

     1247    21374        /*
     1248    21375              This entry supplied so that buffers may be created in other areas
     1249    21376              of the KZT module, and still be initialized with VDH and header
     1250    21377              info here. Called after PRINTER data has been transfered from
     1251    21378              one buffer to a new buffer.
     1252    21379
     1253    21380              INIT  BUFFER  HEADER WITH FLAGS AND POINTERS.
     1254    21381        */
     1255    21382    2           KZ$OTPBFR=KZ_OTPBFR;

  21382   1 000C95  AB80 0000 0000  00                   LAB,B2   KZ_3270XLB
          1 000C98  2C52                                 LDV,R2   82
          1 000C99  6C10                                 LDV,R6   16
          1 000C9A  BCC7 000A                            LDB,B3   BFR$,AUTO
          1 000C9C  3C00                                 LDV,R3   0
          1 000C9D  0008                                 MMM

     1256    21383    2           BYTX=SIZEC(KZ$OTPBFR);

  21383   1 000C9E  6C10                                 LDV,R6   16
          1 000C9F  EF47 0028                            STR,R6   BYTX,AUTO

     1257    21384    2           KZ$OTPBFR.BFRSIZ = SZX;
PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:212  

  21384   1 000CA1  ECC7 000A                            LDB,B6   BFR$,AUTO
          1 000CA3  D847 0021                            LDR,R5   SZX,AUTO
          1 000CA5  DF46 0004                            STR,R5   4,B6

     1258    21385    2           KZ$OTPBFR.FLAGS.FIRST#='1'B;

  21385   1 000CA7  ECC7 000A                            LDB,B6   BFR$,AUTO
          1 000CA9  8946 0002                            LBT,'0080'X       2,B6
          1 000CAB       0080

     1259    21386    2           KZ$OTPBFR.FLAGS.LAST#='1'B;

  21386   1 000CAC  ECC7 000A                            LDB,B6   BFR$,AUTO
          1 000CAE  8946 0002                            LBT,'0040'X       2,B6
          1 000CB0       0040

     1260    21387    2           KZ$OTPBFR.DEV$=ADDR(KZ$3270DEV);

  21387   1 000CB1  ECC7 0008                            LDB,B6   DEV$,AUTO
          1 000CB3  DCC7 000A                            LDB,B5   BFR$,AUTO
          1 000CB5  EFC5 0006                            STB,B6   6,B5

     1261    21388
     1262    21389
     1263    21390    3           IF KZ$3270DEV.CTR$->KZ$3270CTR.LIN$->KZ$LINCTX.PRO.SLAVE THEN DO;

  21390   1 000CB7  DCC6 0002                            LDB,B5   2,B6
          1 000CB9  CCC5 0004                            LDB,B4   4,B5
          1 000CBB  89C4 004B                            CMZ      75,B4
          1 000CBD  0881 0016                            BAGE     s:21396,PREL

     1264    21391    3              BFR$->BYT(BYTX)=KZ_3270XL(KZ$3270DEV.CTR$->KZ$3270CTR.ADR);

  21391   1 000CBF  B2C5 000A                            LLH,R3   10,B5
          1 000CC1  C2B0 0000 0000  00                   LLH,R4   KZ_3270XLB,R3
          1 000CC4  BCC7 000A                            LDB,B3   BFR$,AUTO
PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:213  
          1 000CC6  A856                                 LDR,R2   R6
          1 000CC7  C7A3                                 STH,R4   ,B3,R2

     1265    21392    3              BFR$->BYT(BYTX+1)=KZ_3270XL(KZ$3270DEV.ADR);

  21392   1 000CC8  B2C6 0015                            LLH,R3   21,B6
          1 000CCA  C2B0 0000 0000  00                   LLH,R4   KZ_3270XLB,R3
          1 000CCD  DCC7 000A                            LDB,B5   BFR$,AUTO
          1 000CCF  2E01                                 ADV,R2   1
          1 000CD0  C7A5                                 STH,R4   ,B5,R2

     1266    21393    3              BYTX=BYTX+2;

  21393   1 000CD1  6E02                                 ADV,R6   2
          1 000CD2  EF47 0028                            STR,R6   BYTX,AUTO

     1267    21394    3              END;

     1268    21395
     1269    21396    2           BFR$->BYT(BYTX)=BITBIN(%KZ#ESCAPE);

  21396   1 000CD4  4C27                                 LDV,R4   39
          1 000CD5  DCC7 000A                            LDB,B5   BFR$,AUTO
          1 000CD7  B856                                 LDR,R3   R6
          1 000CD8  C7B5                                 STH,R4   ,B5,R3

     1270    21397        /*
     1271    21398             Insert the write command as the default device command.
     1272    21399        */
     1273    21400    2           IF KZ$3270DEV.PRINTER

  21400   1 000CD9  82C6 0012                            LB,'0800'X        18,B6
  21400   1 000CDB       0800
          1 000CDC  0581 0009                            BBF      s:21402,PREL

     1274    21401    2           THEN BFR$->BYT(BYTX+1) = BITBIN(%KZ#ERASE_WRITE);

PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:214  
  21401   1 000CDE  A870 00F5                            LDR,R2   245,IMO
          1 000CE0  DCC7 000A                            LDB,B5   BFR$,AUTO
          1 000CE2  3E01                                 ADV,R3   1
          1 000CE3  A7B5                                 STH,R2   ,B5,R3
          1 000CE4  0F81 0007                            B        s:21404,PREL

     1275    21402    2           ELSE BFR$->BYT(BYTX+1) = BITBIN(%KZ#WRITE);

  21402   1 000CE6  A870 00F1                            LDR,R2   241,IMO
          1 000CE8  DCC7 000A                            LDB,B5   BFR$,AUTO
          1 000CEA  3E01                                 ADV,R3   1
          1 000CEB  A7B5                                 STH,R2   ,B5,R3

     1276    21403
     1277    21404    2           BFR$->BYT(BYTX+2) = BITBIN(%KZ#WCC_DFLT);

  21404   1 000CEC  DCC7 000A                            LDB,B5   BFR$,AUTO
          1 000CEE  A856                                 LDR,R2   R6
          1 000CEF  2E02                                 ADV,R2   2
          1 000CF0  87A5                                 CLH      ,B5,R2

     1278    21405    2           IF KZ$3270DEV.PRINTER THEN

  21405   1 000CF1  82C6 0012                            LB,'0800'X        18,B6
  21405   1 000CF3       0800
          1 000CF4  0581 0009                            BBF      s:21411,PREL

     1279    21406    3           DO;                   /* SET START PRINTER BIT IN THE WCC COMMAND     */

     1280    21407    3              BFR$->WCC.STRTPNTR(BYTX+2) = '1'B;

  21407   1 000CF6  DCC7 000A                            LDB,B5   BFR$,AUTO
          1 000CF8  9856                                 LDR,R1   R6
          1 000CF9  1003                                 SOL,R1   3
          1 000CFA  1E14                                 ADV,R1   20
          1 000CFB  8915                                 LBT      ,B5,R1

PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:215  
     1281    21408    3              KZ$3270DEV.LSTOTPLINX = 0;

  21408   1 000CFC  8746 0019                            CL       25,B6

     1282    21409    3              END;

     1283    21410
     1284    21411    2           BYTSIZ = (SZ * 2) - (BYTX + 4); /*

  21411   1 000CFE  9847 0020                            LDR,R1   SZ,AUTO
          1 000D00  1001                                 SOL,R1   1
          1 000D01  8251                                 NEG      R1
          1 000D02  9A56                                 ADD,R1   R6
          1 000D03  8251                                 NEG      R1
          1 000D04  1EFC                                 ADV,R1   -4
          1 000D05  9F47 0029                            STR,R1   BYTSIZ,AUTO

     1285    21412                     Note the BYTSIZ is decrimented by 4 - This is to account
     1286    21413                     for the Escape,CC,WCC and a byte we want to reserve at
     1287    21414                     the end of the buffer to insert an EM or Insert cursor */
     1288    21415    2           BYTX=BYTX+3;

  21415   1 000D07  6E03                                 ADV,R6   3
          1 000D08  EF47 0028                            STR,R6   BYTX,AUTO

     1289    21416    2           RETURN;

  21416   1 000D0A  ECC7 005C                            LDB,B6   @QUEUE_ON_TAIL+2,AUTO
          1 000D0C  C3C6 0001                            LNJ,B4   1,B6

     1290    21417
     1291    21418    2   END INITBFR;
     1292    21419
     1293    21420        %EJECT;
PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:216  
     1294    21421        /* CHK_BFR_SIZ - Make sure there is enough room in buffer */
     1295    21422
     1296    21423        /*F*  NAME:    CHK_BFR_SIZE
     1297    21424              PURPOSE: To look at the affect that the current call will have
     1298    21425                       on the current output buffer and decide if any buffer
     1299    21426                       size modifications are in order.
     1300    21427        */
     1301    21428        /*D*  NAME:    CHK_BFR_SIZE
     1302    21429              CALL:    From ATTR,ATTRIC,CLEAR
     1303    21430              USES DATA STRUCTURES
     1304    21431                       KZ$3270CTX
     1305    21432                       KZ$OTPBFR
     1306    21433              INPUT:   Address of device context block (B1)
     1307    21434                       No. of bytes the buffer will grow (R2)
     1308    21435              DESCRIPTION:
     1309    21436                       A call to this routine will check the size that this
     1310    21437                       buffer will grow after current data is added, and
     1311    21438                       create a bigger buffer if needed. Then copy the
     1312    21439                       old buffer into the new before executing the current
     1313    21440                       command (TEXT,ATTRIBUTE,CURSOR, or CLEAR).
     1314    21441                       Previous to D00, this routine RETURNed if the current
     1315    21442                       buffer was sent off and a new one allocated (i.e., a buffer
     1316    21443                       twice as big as the current one couldn't be found), and
     1317    21444                       ALTRETURNed if the current buffer was "expanded".  It
     1318    21445                       seemed that the difference between these two conditions
     1319    21446                       was never really checked, so, for >= D00, this routine
     1320    21447                       ALTRETURNs due to lack of MEMory only.
     1321    21448         */
     1322    21449    1   CHK_BFR_SIZ: PROC(SIZ) ALTRET;

  21449   1 000D0E  EFC7 0052            CHK_BFR_SIZ     STB,B6   FILLCHAR+2,AUTO

     1323    21450
     1324    21451    2   DCL SIZ UBIN;
     1325    21452    2   DCL J UBIN;
     1326    21453    2   DCL ENTR_FLG UBIN;
     1327    21454    2   DCL MOVJBYTS CHAR(J) BASED CALIGNED;
PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:217  
     1328    21455
     1329    21456    2           ENTR_FLG = 1;

  21456   1 000D10  6C01                                 LDV,R6   1
          1 000D11  EF47 0057                            STR,R6   ENTR_FLG,AUTO

     1330    21457    2           GOTO CHECK_SIZ;

  21457   1 000D13  0F81 0005                            B        s:21466,PREL

     1331    21458
     1332    21459    2   CHKBFR_SETADDR: ENTRY(SIZ) ALTRET;

  21459   1 000D15  EFC7 0052            CHKBFR_SETADDR  STB,B6   FILLCHAR+2,AUTO

     1333    21460        /*  This special entry point is made such that if the buffer being
     1334    21461            check is "DONE"ed and a new buffer created, a set buf addr will
     1335    21462            be placed in the new buffer.
     1336    21463        */
     1337    21464    2           ENTR_FLG = 0;

  21464   1 000D17  8747 0057                            CL       ENTR_FLG,AUTO

     1338    21465    2   CHECK_SIZ:
     1339    21466    2           IF BYTSIZ >= SIZ THEN

  21466   1 000D19  DCC7 0054            CHECK_SIZ       LDB,B5   @SIZ,AUTO
          1 000D1B  E847 0029                            LDR,R6   BYTSIZ,AUTO
          1 000D1D  E905                                 CMR,R6   ,B5
          1 000D1E  0201 0005                            BL       s:21468,PREL

     1340    21467    2              RETURN;

  21467   1 000D20  ECC7 0052                            LDB,B6   FILLCHAR+2,AUTO
          1 000D22  C3C6 0001                            LNJ,B4   1,B6

     1341    21468    2           GOTO CHECK_BUF;
PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:218  

  21468   1 000D24  0F81 0005                            B        s:21472,PREL

     1342    21469
     1343    21470    2   EXP_BFR: ENTRY ALTRET;                  /* Force expansion or new buffer      */

  21470   1 000D26  EFC7 0052            EXP_BFR         STB,B6   FILLCHAR+2,AUTO

     1344    21471
     1345    21472    2           ENTR_FLG = 0;

  21472   1 000D28  8747 0057                            CL       ENTR_FLG,AUTO

  21472   1                              CHECK_BUF       null
     1346    21473    2   CHECK_BUF:;
     1347    21474    2           IF BFR$=ADDR(NIL) THEN

  21474   1 000D2A  8DC7 000A            CHECK_BUF       CMN      BFR$,AUTO
          1 000D2C  0901 0108                            BE       s:21531,PREL

     1348    21475    2              GOTO NEW_BFR;
     1349    21476
     1350    21477    3           IF KZ$OTPBFR.BFRSIZ < KZ$3270DEV.OTPBFRSIZ THEN DO; /* Expand         */

  21477   1 000D2E  DCC7 000A                            LDB,B5   BFR$,AUTO
          1 000D30  CCC7 0008                            LDB,B4   DEV$,AUTO
          1 000D32  E845 0004                            LDR,R6   4,B5
          1 000D34  E944 0018                            CMR,R6   24,B4
          1 000D36  0281 00FE                            BGE      s:21531,PREL

     1351    21478
     1352    21479    3              J=KZ_3270_BFRSIZ(KZ$OTPBFR.BFRSIZ+1);

  21479   1 000D38  B856                                 LDR,R3   R6
          1 000D39  D830 0000 0021  00                   LDR,R5   KZ_3270_BFRSIZ+1,R3
          1 000D3C  DF47 0056                            STR,R5   J,AUTO

PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:219  
     1353    21480                   %DISABLE(INHLVL=KH_INHLVL);

  21481   1 000D3E  C800 0000 0000  xsym                 LDR,R4   KH_INHLVL
          1 000D41  CF47 003C                            STR,R4   DISABLE_LEVEL,AUTO

  21482   1 000D43  BBC7 003C                            LAB,B3   DISABLE_LEVEL,AUTO
          1 000D45  BFC7 0062                            STB,B3   C_MRD+1,AUTO
          1 000D47  BBC7 0062                            LAB,B3   C_MRD+1,AUTO
          1 000D49  CBF0 0100                            LAB,B4   256,IMO
          1 000D4B  E380 0000 0000  xent                 LNJ,B6   KHI$DISABLE
          1 000D4E       0001                            DC       s:21484,PREL

     1354    21484    3              CALL KVB$GET2NSYS(J,TBFR$)   /* Get buf 2x as big                  */

  21484   1 000D4F  EBC7 000C                            LAB,B6   TBFR$,AUTO
          1 000D51  EFC7 0064                            STB,B6   C_MRD+3,AUTO
          1 000D53  DBC7 0056                            LAB,B5   J,AUTO
          1 000D55  DFC7 0062                            STB,B5   C_MRD+1,AUTO
          1 000D57  BBC7 0062                            LAB,B3   C_MRD+1,AUTO
          1 000D59  CBF0 0200                            LAB,B4   512,IMO
          1 000D5B  E380 0000 0000  xent                 LNJ,B6   KVB$GET2NSYS
          1 000D5E       0003                            DC       s:21488,PREL
          1 000D5F  0F81 0010                            B        s:21496,PREL

     1355    21485    3              WHENALTRETURN
     1356    21486    4              DO;

     1357    21487                      %ENABLE(INHLVL=KH_INHLVL);

  21488   1 000D61  E847 003C                            LDR,R6   DISABLE_LEVEL,AUTO
          1 000D63  E900 0000 0000  xsym                 CMR,R6   KH_INHLVL
          1 000D66  0901 0007                            BE       s:21493,PREL

  21490   1 000D68  CBF0 0000                            LAB,B4   0,IMO
          1 000D6A  E380 0000 0000  xent                 LNJ,B6   KHI$ENABLE
          1 000D6D       0001                            DC       s:21493,PREL

PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:220  
     1358    21493    4                 GOTO NEW_BFR;

  21493   1 000D6E  0F81 00C6                            B        s:21531,PREL

     1359    21494    4                 END;
     1360    21495                   %ENABLE(INHLVL=KH_INHLVL);

  21496   1 000D70  E847 003C                            LDR,R6   DISABLE_LEVEL,AUTO
          1 000D72  E900 0000 0000  xsym                 CMR,R6   KH_INHLVL
          1 000D75  0901 0007                            BE       s:21501,PREL

  21498   1 000D77  CBF0 0000                            LAB,B4   0,IMO
          1 000D79  E380 0000 0000  xent                 LNJ,B6   KHI$ENABLE
          1 000D7C       0001                            DC       s:21501,PREL

     1361    21501    3              KZ$3270STT.KHSTT.OTPBFRBYTUTL = KZ$3270STT.KHSTT.OTPBFRBYTUTL + J;

  21501   1 000D7D  EC80 0000 0006  xsym                 LDB,B6   KZ_3270M_HDR+6
          1 000D80  F847 0056                            LDR,R7   J,AUTO
          1 000D82  6C00                                 LDV,R6   0
          1 000D83  8446 001E                            AID      30,B6
          1 000D85  8D46 001E                            SDI      30,B6

     1362    21502    3              KZ$3270STT.OTPBFRSIZ(KZ$OTPBFR.BFRSIZ)=KZ$3270STT.OTPBFRSIZ(KZ$OTPBFR.
             21502                       BFRSIZ)-1;

  21502   1 000D87  DCC7 000A                            LDB,B5   BFR$,AUTO
          1 000D89  B845 0004                            LDR,R3   4,B5
          1 000D8B  BF47 0062                            STR,R3   C_MRD+1,AUTO
          1 000D8D  3E41                                 ADV,R3   65
          1 000D8E  8CB6                                 LDI      ,B6,R3
          1 000D8F  8470 FFFF FFFF                       AID      -1,IMO
          1 000D92  B847 0062                            LDR,R3   C_MRD+1,AUTO
          1 000D94  3E41                                 ADV,R3   65
          1 000D95  8D36                                 SDI      ,B6,R3

     1363    21503    3              KZ$3270STT.OTPBFRSIZ(KZ$OTPBFR.BFRSIZ+1)=KZ$3270STT.OTPBFRSIZ(KZ$OTPBFR.
PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:221  
             21503                       BFRSIZ+1)+1;

  21503   1 000D96  ECC7 000A                            LDB,B6   BFR$,AUTO
          1 000D98  A846 0004                            LDR,R2   4,B6
          1 000D9A  DC80 0000 0006  xsym                 LDB,B5   KZ_3270M_HDR+6
          1 000D9D  AF47 0062                            STR,R2   C_MRD+1,AUTO
          1 000D9F  2E42                                 ADV,R2   66
          1 000DA0  B847 0062                            LDR,R3   C_MRD+1,AUTO
          1 000DA2  3E42                                 ADV,R3   66
          1 000DA3  8CA5                                 LDI      ,B5,R2
          1 000DA4  8470 0000 0001                       AID      1,IMO
          1 000DA7  8D35                                 SDI      ,B5,R3

     1364    21504    3              TBFR$->MOVJBYTS=BFR$->MOVJBYTS; /* Copy old to new                 */

  21504   1 000DA8  ACC7 000A                            LDB,B2   BFR$,AUTO
          1 000DAA  2C00                                 LDV,R2   0
          1 000DAB  E847 0056                            LDR,R6   J,AUTO
          1 000DAD  BCC7 000C                            LDB,B3   TBFR$,AUTO
          1 000DAF  3C00                                 LDV,R3   0
          1 000DB0  0008                                 MMM

     1365    21505    4              IF KZ$OTPBFR.MRKCNT~=0 THEN DO; /* Move output markers             */

  21505   1 000DB1  ECC7 000A                            LDB,B6   BFR$,AUTO
          1 000DB3  82C6 0005                            LB,'00FF'X        5,B6
          1 000DB5       00FF
          1 000DB6  0581 0032                            BBF      s:21512,PREL

     1366    21506    4                 J=KZ$OTPBFR.MRKCNT*SIZEW(KV$OTPMRK)*2;

  21506   1 000DB8  E846 0005                            LDR,R6   5,B6
          1 000DBA  E570 00FF                            AND,R6   255,IMO
          1 000DBC  6F06                                 MLV,R6   6
          1 000DBD  EF47 0056                            STR,R6   J,AUTO

     1367    21507    4                 PINCRW(TBFR$,KZ_3270_BFRSIZ(KZ$OTPBFR.BFRSIZ+1)-(J/2))->MOVJBYTS=
PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:222  

  21507   1 000DBF  B846 0004                            LDR,R3   4,B6
          1 000DC1  6041                                 SOR,R6   1
          1 000DC2  E230 0000 0021  00                   SUB,R6   KZ_3270_BFRSIZ+1,R3
          1 000DC5  70F0                                 DAR,R7   16
          1 000DC6  84C7 000C                            SID      TBFR$,AUTO
          1 000DC8  8656                                 CPL      R6
          1 000DC9  8657                                 CPL      R7
          1 000DCA  8470 0000 0001                       AID      1,IMO
          1 000DCD  D847 0056                            LDR,R5   J,AUTO
          1 000DCF  5041                                 SOR,R5   1
          1 000DD0  D230 0000 0020  00                   SUB,R5   KZ_3270_BFRSIZ,R3
          1 000DD3  8D47 0062                            SDI      C_MRD+1,AUTO
          1 000DD5  E855                                 LDR,R6   R5
          1 000DD6  70F0                                 DAR,R7   16
          1 000DD7  84C7 000A                            SID      BFR$,AUTO
          1 000DD9  8656                                 CPL      R6
          1 000DDA  8657                                 CPL      R7
          1 000DDB  8470 0000 0001                       AID      1,IMO
          1 000DDE  8D47 0064                            SDI      C_MRD+3,AUTO
          1 000DE0  ACC7 0064                            LDB,B2   C_MRD+3,AUTO
          1 000DE2  2C00                                 LDV,R2   0
          1 000DE3  E847 0056                            LDR,R6   J,AUTO
          1 000DE5  BCC7 0062                            LDB,B3   C_MRD+1,AUTO
          1 000DE7  3C00                                 LDV,R3   0
          1 000DE8  0008                                 MMM

     1368    21508    4                   PINCRW(BFR$,KZ_3270_BFRSIZ(KZ$OTPBFR.BFRSIZ)-(J/2))->MOVJBYTS;
     1369    21509    4                 END;

     1370    21510
     1371    21511                   %DISABLE(INHLVL=KH_INHLVL);

  21512   1 000DE9  E800 0000 0000  xsym                 LDR,R6   KH_INHLVL
          1 000DEC  EF47 003C                            STR,R6   DISABLE_LEVEL,AUTO

  21513   1 000DEE  EBC7 003C                            LAB,B6   DISABLE_LEVEL,AUTO
PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:223  
          1 000DF0  EFC7 0062                            STB,B6   C_MRD+1,AUTO
          1 000DF2  BBC7 0062                            LAB,B3   C_MRD+1,AUTO
          1 000DF4  CBF0 0100                            LAB,B4   256,IMO
          1 000DF6  E380 0000 0000  xent                 LNJ,B6   KHI$DISABLE
          1 000DF9       0001                            DC       s:21515,PREL

     1372    21515    3              CALL KVB$RLS2NSYS(KZ_3270_BFRSIZ(KZ$OTPBFR.BFRSIZ+1)/2,BFR$);

  21515   1 000DFA  ECC7 000A                            LDB,B6   BFR$,AUTO
          1 000DFC  B846 0004                            LDR,R3   4,B6
          1 000DFE  E830 0000 0021  00                   LDR,R6   KZ_3270_BFRSIZ+1,R3
          1 000E01  6041                                 SOR,R6   1
          1 000E02  EF47 0062                            STR,R6   C_MRD+1,AUTO
          1 000E04  DBC7 000A                            LAB,B5   BFR$,AUTO
          1 000E06  DFC7 0065                            STB,B5   C_MRD+4,AUTO
          1 000E08  CBC7 0062                            LAB,B4   C_MRD+1,AUTO
          1 000E0A  CFC7 0063                            STB,B4   C_MRD+2,AUTO
          1 000E0C  BBC7 0063                            LAB,B3   C_MRD+2,AUTO
          1 000E0E  CBF0 0200                            LAB,B4   512,IMO
          1 000E10  E380 0000 0000  xent                 LNJ,B6   KVB$RLS2NSYS
          1 000E13       0001                            DC       s:21517,PREL

     1373    21516                   %ENABLE(INHLVL=KH_INHLVL);

  21517   1 000E14  E847 003C                            LDR,R6   DISABLE_LEVEL,AUTO
          1 000E16  E900 0000 0000  xsym                 CMR,R6   KH_INHLVL
          1 000E19  0901 0007                            BE       s:21523,PREL

  21519   1 000E1B  CBF0 0000                            LAB,B4   0,IMO
          1 000E1D  E380 0000 0000  xent                 LNJ,B6   KHI$ENABLE
          1 000E20       0001                            DC       s:21523,PREL

     1374    21522
     1375    21523    3              BFR$=TBFR$;

  21523   1 000E21  ECC7 000C                            LDB,B6   TBFR$,AUTO
          1 000E23  EFC7 000A                            STB,B6   BFR$,AUTO
PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:224  

     1376    21524    3              BYTSIZ=BYTSIZ+KZ_3270_BFRSIZ(KZ$OTPBFR.BFRSIZ)*2;

  21524   1 000E25  B846 0004                            LDR,R3   4,B6
          1 000E27  E830 0000 0020  00                   LDR,R6   KZ_3270_BFRSIZ,R3
          1 000E2A  6001                                 SOL,R6   1
          1 000E2B  EA47 0029                            ADD,R6   BYTSIZ,AUTO
          1 000E2D  EF47 0029                            STR,R6   BYTSIZ,AUTO

     1377    21525    3              KZ$OTPBFR.BFRSIZ=KZ$OTPBFR.BFRSIZ+1;

  21525   1 000E2F  8AC6 0004                            INC      4,B6

     1378    21526
     1379    21527    3              RETURN;

  21527   1 000E31  ECC7 0052                            LDB,B6   FILLCHAR+2,AUTO
          1 000E33  C3C6 0001                            LNJ,B4   1,B6

     1380    21528    3              END;
     1381    21529
     1382    21530    2   NEW_BFR:
     1383    21531    2           CALL DONE (%QUEUE_ON_TAIL) ALTRET(NO_MEMORY);

  21531   1 000E35  EBF0 8000            NEW_BFR         LAB,B6   -32768,IMO
          1 000E37  EFC7 005A                            STB,B6   @QUEUE_ON_TAIL,AUTO
          1 000E39  E3C0 FAF1                            LNJ,B6   s:0,PREL
          1 000E3B       0035                            DC       s:21549,PREL

     1384    21532    2           IF BFR$=ADDR(NIL)

  21532   1 000E3C  8DC7 000A                            CMN      BFR$,AUTO
          1 000E3E  0981 0006                            BNE      s:21535,PREL

     1385    21533    2           THEN CALL INITBFR ALTRET(NO_MEMORY);

  21533   1 000E40  E3C0 FDCF                            LNJ,B6   s:0,PREL
PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:225  
          1 000E42       002E                            DC       s:21549,PREL
          1 000E43  0F81 000B                            B        s:21538,PREL

     1386    21534    2           ELSE
     1387    21535    2              IF KZ$3270DEV.PRINTER

  21535   1 000E45  ECC7 0008                            LDB,B6   DEV$,AUTO
          1 000E47  82C6 0012                            LB,'0800'X        18,B6
          1 000E49       0800
          1 000E4A  0501 0004                            BBT      s:21538,PREL

     1388    21536    2              THEN ;
     1389    21537    2              ELSE CALL INITBFR ALTRET(NO_MEMORY);

  21537   1 000E4C  E3C0 FDC3                            LNJ,B6   s:0,PREL
          1 000E4E       0022                            DC       s:21549,PREL

     1390    21538    3           IF ENTR_FLG = 0 AND NOT KZ$3270DEV.PRINTER THEN DO;
             21538                    /* SBA in new buffer requested. */

  21538   1 000E4F  E847 0057                            LDR,R6   ENTR_FLG,AUTO
          1 000E51  6981 001A                            BNEZ,R6  s:21546,PREL
          1 000E53  ECC7 0008                            LDB,B6   DEV$,AUTO
          1 000E55  82C6 0012                            LB,'0800'X        18,B6
          1 000E57       0800
          1 000E58  0501 0013                            BBT      s:21546,PREL

     1391    21539    3              ROW = %KV_MRD.DVCLIN;

  21539   1 000E5A  DC80 0000 0000  xsym                 LDB,B5   KV$PTR$
          1 000E5D  CCC5 0008                            LDB,B4   8,B5
          1 000E5F  D844 001D                            LDR,R5   29,B4
          1 000E61  DF47 0015                            STR,R5   ROW,AUTO

     1392    21540    3              COL = %KV_MRD.DVCCLM;

  21540   1 000E63  CCC5 0008                            LDB,B4   8,B5
PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:226  
          1 000E65  C844 001E                            LDR,R4   30,B4
          1 000E67  CF47 0016                            STR,R4   COL,AUTO

     1393    21541    3              CALL SETBUFADR_NCHK;  /* Insert set buf adr w/out doing

  21541   1 000E69  E3C0 0092                            LNJ,B6   s:0,PREL
          1 000E6B       0001                            DC       s:21546,PREL

     1394    21542                                             CHK_BFR_SIZ call              */
     1395    21543    3              END;

     1396    21544
     1397    21545
     1398    21546    2           RETURN;

  21546   1 000E6C  ECC7 0052                            LDB,B6   FILLCHAR+2,AUTO
          1 000E6E  C3C6 0001                            LNJ,B4   1,B6

     1399    21547
     1400    21548    2   NO_MEMORY:
     1401    21549    2           ALTRETURN;

  21549   1 000E70  ECC7 0052            NO_MEMORY       LDB,B6   FILLCHAR+2,AUTO
          1 000E72  B806                                 LDR,R3   ,B6
          1 000E73  C3B6                                 LNJ,B4   ,B6,R3

     1402    21550
     1403    21551    2   END CHK_BFR_SIZ;
     1404    21552
     1405    21553        %EJECT;
PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:227  
     1406    21554        /* SETBUFADR - Build SBA order */
     1407    21555
     1408    21556        /*F*  NAME:    SETBUFADR
     1409    21557              PURPOSE: To insert a SET BUFFER ADDRESS (SBA) command into the
     1410    21558                       device output stream.
     1411    21559        */
     1412    21560        /*D*  NAME:    SETBUFADR
     1413    21561              ENTRY:   SETBUFADR_NCHK
     1414    21562              CALL:    From ATTR,ATTRIC,IC
     1415    21563              USES DATA STRUCTURES
     1416    21564                       KZ$3270CTX
     1417    21565                       KZ$OTPBFR
     1418    21566              DESCRIPTION:
     1419    21567                       This routine converts the ROW/COLUMN position specified
     1420    21568                       by R2/R3 into a 3270 buffer address. Then inserts a set
     1421    21569                       buffer addr (SBA) command followed by the buffer addr.
     1422    21570                       SETBUFADR checks that there is room in the buffer
     1423    21571                       for all three bytes, SETBUFADR_NCHK does not.
     1424    21572                       The %MAC_SETBUFADR MACRO will set the AUTO variable
     1425    21573                       SBA_DONE to logical 1 or 0 depending on whether the
     1426    21574                       SBA code was actually placed in the buffer or not.
     1427    21575                       Only SETBUFADR may ALTRETURN, and only when an
     1428    21576                       out-of-memory condition was encountered by CHK_BFR_SIZ.
     1429    21577        */
     1430    21578    1   SETBUFADR: PROC ALTRET;

  21578   1 000E74  EFC7 003E            SETBUFADR       STB,B6   DISABLE_LEVEL+2,AUTO

     1431    21579
     1432    21580
     1433    21581    2           CALL CHK_BFR_SIZ(3) ALTRET(NO_MEMORY);

  21581   1 000E76  DBF0 0003                            LAB,B5   3,IMO
          1 000E78  DFC7 0054                            STB,B5   @SIZ,AUTO
          1 000E7A  E3C0 FE93                            LNJ,B6   s:0,PREL
          1 000E7C       007C                            DC       s:21610,PREL

PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:228  
     1434    21582
     1435    21583                %MAC_SETBUFADR;

  21584   1 000E7D  ECC7 0008                            LDB,B6   DEV$,AUTO
          1 000E7F  82C6 001A                            LB,'0010'X        26,B6
          1 000E81       0010
          1 000E82  0501 0014                            BBT      s:21588,PREL
          1 000E84  DC80 0000 0000  xsym                 LDB,B5   KV$PTR$
          1 000E87  CCC5 0008                            LDB,B4   8,B5
          1 000E89  E847 0015                            LDR,R6   ROW,AUTO
          1 000E8B  E944 001D                            CMR,R6   29,B4
          1 000E8D  0981 0009                            BNE      s:21588,PREL
          1 000E8F  D847 0016                            LDR,R5   COL,AUTO
          1 000E91  5801 0005                            BLZ,R5   s:21588,PREL
          1 000E93  D944 001E                            CMR,R5   30,B4
          1 000E95  0901 005C                            BE       s:21604,PREL

  21588   1 000E97  6C11                                 LDV,R6   17
          1 000E98  DCC7 000A                            LDB,B5   BFR$,AUTO
          1 000E9A  B847 0028                            LDR,R3   BYTX,AUTO
          1 000E9C  E7B5                                 STH,R6   ,B5,R3

  21589   1 000E9D  D847 0015                            LDR,R5   ROW,AUTO
          1 000E9F  D947 001E                            CMR,R5   MAX_ROW,AUTO
          1 000EA1  0981 000D                            BNE      s:21592,PREL
          1 000EA3  C847 0016                            LDR,R4   COL,AUTO
          1 000EA5  C947 001F                            CMR,R4   MAX_COL,AUTO
          1 000EA7  0A81 0007                            BALE     s:21592,PREL

  21590   1 000EA9  5C01                                 LDV,R5   1
          1 000EAA  DF47 0015                            STR,R5   ROW,AUTO

  21590   1 000EAC  4C01                                 LDV,R4   1
          1 000EAD  CF47 0016                            STR,R4   COL,AUTO

  21592   1 000EAF  5EFF                                 ADV,R5   -1
          1 000EB0  DB47 001F                            MUL,R5   MAX_COL,AUTO
PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:229  
          1 000EB2  DA47 0016                            ADD,R5   COL,AUTO
          1 000EB4  5EFF                                 ADV,R5   -1
          1 000EB5  DF47 0023                            STR,R5   I,AUTO

  21593   1 000EB7  D370 0040                            DIV,R5   64,IMO
          1 000EB9  DF47 0024                            STR,R5   J,AUTO

  21594   1 000EBB  E847 0023                            LDR,R6   I,AUTO
          1 000EBD  70F0                                 DAR,R7   16
          1 000EBE  F370 0040                            DIV,R7   64,IMO
          1 000EC0  EF47 0023                            STR,R6   I,AUTO

  21595   1 000EC2  A855                                 LDR,R2   R5
          1 000EC3  C2A0 0000 0000  00                   LLH,R4   KZ_3270XLB,R2
          1 000EC6  DCC7 000A                            LDB,B5   BFR$,AUTO
          1 000EC8  3E01                                 ADV,R3   1
          1 000EC9  C7B5                                 STH,R4   ,B5,R3

  21596   1 000ECA  9847 0023                            LDR,R1   I,AUTO
          1 000ECC  E290 0000 0000  00                   LLH,R6   KZ_3270XLB,R1
          1 000ECF  DCC7 000A                            LDB,B5   BFR$,AUTO
          1 000ED1  B847 0028                            LDR,R3   BYTX,AUTO
          1 000ED3  3E02                                 ADV,R3   2
          1 000ED4  E7B5                                 STH,R6   ,B5,R3

  21597   1 000ED5  E847 0028                            LDR,R6   BYTX,AUTO
          1 000ED7  6E03                                 ADV,R6   3
          1 000ED8  EF47 0028                            STR,R6   BYTX,AUTO

  21598   1 000EDA  B847 0029                            LDR,R3   BYTSIZ,AUTO
          1 000EDC  3EFD                                 ADV,R3   -3
          1 000EDD  BF47 0029                            STR,R3   BYTSIZ,AUTO

  21599   1 000EDF  8846 001A                            LBF,'0010'X       26,B6
  21599   1 000EE1       0010

  21600   1 000EE2  DBC7 0016                            LAB,B5   COL,AUTO
PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:230  
          1 000EE4  DFC7 005E                            STB,B5   @R+2,AUTO
          1 000EE6  CBC7 0015                            LAB,B4   ROW,AUTO
          1 000EE8  CFC7 005C                            STB,B4   @QUEUE_ON_TAIL+2,AUTO
          1 000EEA  E3C0 00CB                            LNJ,B6   s:0,PREL
          1 000EEC       0001                            DC       s:21601,PREL

  21601   1 000EED  8947 0027                            LBT,'8000'X       SBA_DONE,AUTO
  21601   1 000EEF       8000

  21602   1 000EF0  0F81 0003                            B        s:21607,PREL

  21604   1 000EF2  8747 0027                            CL       SBA_DONE,AUTO

     1436    21606
     1437    21607    2           RETURN;

  21607   1 000EF4  ECC7 003E                            LDB,B6   DISABLE_LEVEL+2,AUTO
          1 000EF6  C3C6 0001                            LNJ,B4   1,B6

     1438    21608
     1439    21609    2   NO_MEMORY:
     1440    21610    2           ALTRETURN;

  21610   1 000EF8  ECC7 003E            NO_MEMORY       LDB,B6   DISABLE_LEVEL+2,AUTO
          1 000EFA  B806                                 LDR,R3   ,B6
          1 000EFB  C3B6                                 LNJ,B4   ,B6,R3

     1441    21611
     1442    21612    2   END SETBUFADR;
     1443    21613
     1444    21614
     1445    21615    1   SETBUFADR_NCHK: PROC;

  21615   1 000EFC  EFC7 0058            SETBUFADR_NCHK  STB,B6   ENTR_FLG+1,AUTO

     1446    21616
     1447    21617
PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:231  
     1448    21618                %MAC_SETBUFADR;

  21619   1 000EFE  DCC7 0008                            LDB,B5   DEV$,AUTO
          1 000F00  82C5 001A                            LB,'0010'X        26,B5
          1 000F02       0010
          1 000F03  0501 0014                            BBT      s:21623,PREL
          1 000F05  CC80 0000 0000  xsym                 LDB,B4   KV$PTR$
          1 000F08  BCC4 0008                            LDB,B3   8,B4
          1 000F0A  E847 0015                            LDR,R6   ROW,AUTO
          1 000F0C  E943 001D                            CMR,R6   29,B3
          1 000F0E  0981 0009                            BNE      s:21623,PREL
          1 000F10  D847 0016                            LDR,R5   COL,AUTO
          1 000F12  5801 0005                            BLZ,R5   s:21623,PREL
          1 000F14  D943 001E                            CMR,R5   30,B3
          1 000F16  0901 005C                            BE       s:21639,PREL

  21623   1 000F18  6C11                                 LDV,R6   17
          1 000F19  CCC7 000A                            LDB,B4   BFR$,AUTO
          1 000F1B  B847 0028                            LDR,R3   BYTX,AUTO
          1 000F1D  E7B4                                 STH,R6   ,B4,R3

  21624   1 000F1E  D847 0015                            LDR,R5   ROW,AUTO
          1 000F20  D947 001E                            CMR,R5   MAX_ROW,AUTO
          1 000F22  0981 000D                            BNE      s:21627,PREL
          1 000F24  C847 0016                            LDR,R4   COL,AUTO
          1 000F26  C947 001F                            CMR,R4   MAX_COL,AUTO
          1 000F28  0A81 0007                            BALE     s:21627,PREL

  21625   1 000F2A  5C01                                 LDV,R5   1
          1 000F2B  DF47 0015                            STR,R5   ROW,AUTO

  21625   1 000F2D  4C01                                 LDV,R4   1
          1 000F2E  CF47 0016                            STR,R4   COL,AUTO

  21627   1 000F30  5EFF                                 ADV,R5   -1
          1 000F31  DB47 001F                            MUL,R5   MAX_COL,AUTO
          1 000F33  DA47 0016                            ADD,R5   COL,AUTO
PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:232  
          1 000F35  5EFF                                 ADV,R5   -1
          1 000F36  DF47 0023                            STR,R5   I,AUTO

  21628   1 000F38  D370 0040                            DIV,R5   64,IMO
          1 000F3A  DF47 0024                            STR,R5   J,AUTO

  21629   1 000F3C  E847 0023                            LDR,R6   I,AUTO
          1 000F3E  70F0                                 DAR,R7   16
          1 000F3F  F370 0040                            DIV,R7   64,IMO
          1 000F41  EF47 0023                            STR,R6   I,AUTO

  21630   1 000F43  A855                                 LDR,R2   R5
          1 000F44  C2A0 0000 0000  00                   LLH,R4   KZ_3270XLB,R2
          1 000F47  ECC7 000A                            LDB,B6   BFR$,AUTO
          1 000F49  3E01                                 ADV,R3   1
          1 000F4A  C7B6                                 STH,R4   ,B6,R3

  21631   1 000F4B  9847 0023                            LDR,R1   I,AUTO
          1 000F4D  E290 0000 0000  00                   LLH,R6   KZ_3270XLB,R1
          1 000F50  ECC7 000A                            LDB,B6   BFR$,AUTO
          1 000F52  B847 0028                            LDR,R3   BYTX,AUTO
          1 000F54  3E02                                 ADV,R3   2
          1 000F55  E7B6                                 STH,R6   ,B6,R3

  21632   1 000F56  E847 0028                            LDR,R6   BYTX,AUTO
          1 000F58  6E03                                 ADV,R6   3
          1 000F59  EF47 0028                            STR,R6   BYTX,AUTO

  21633   1 000F5B  B847 0029                            LDR,R3   BYTSIZ,AUTO
          1 000F5D  3EFD                                 ADV,R3   -3
          1 000F5E  BF47 0029                            STR,R3   BYTSIZ,AUTO

  21634   1 000F60  8845 001A                            LBF,'0010'X       26,B5
  21634   1 000F62       0010

  21635   1 000F63  EBC7 0016                            LAB,B6   COL,AUTO
          1 000F65  EFC7 005E                            STB,B6   @R+2,AUTO
PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:233  
          1 000F67  CBC7 0015                            LAB,B4   ROW,AUTO
          1 000F69  CFC7 005C                            STB,B4   @QUEUE_ON_TAIL+2,AUTO
          1 000F6B  E3C0 004A                            LNJ,B6   s:0,PREL
          1 000F6D       0001                            DC       s:21636,PREL

  21636   1 000F6E  8947 0027                            LBT,'8000'X       SBA_DONE,AUTO
  21636   1 000F70       8000

  21637   1 000F71  0F81 0003                            B        s:21642,PREL

  21639   1 000F73  8747 0027                            CL       SBA_DONE,AUTO

     1449    21641
     1450    21642    2           RETURN;

  21642   1 000F75  ECC7 0058                            LDB,B6   ENTR_FLG+1,AUTO
          1 000F77  C3C6 0001                            LNJ,B4   1,B6

     1451    21643
     1452    21644    2   END SETBUFADR_NCHK;
     1453    21645        %EJECT;
PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:234  
     1454    21646        /* ATTR - Build attribute char */
     1455    21647
     1456    21648        /*F*  NAME:    ATTR
     1457    21649              PURPOSE: To insert an attribute character (followed by the
     1458    21650                       cursor if ATTRIC is called) at the specified
     1459    21651                       row/column position.
     1460    21652        */
     1461    21653        /*D*  NAME:    ATTR
     1462    21654              CALL:    From KZT$3270
     1463    21655              USES DATA STRUCTURES
     1464    21656                       KZ$3270CTX
     1465    21657                       KZ$OTPBFR
     1466    21658              INPUT:   Address of device context block (B1)
     1467    21659                       The value of the attribute character (R4)
     1468    21660                       Device row and column (R2)
     1469    21661              DESCRIPTION:
     1470    21662                       Inserts an attribute (or start field (SF)) character
     1471    21663                       possibly followed by an insert cursor (ATTRIC)
     1472    21664                       at the position specified by row and column (R2)
     1473    21665        */
     1474    21666    1   ATTR:   PROC ALTRET;

  21666   1 000F79  EFC7 004E            ATTR            STB,B6   I+2,AUTO

     1475    21667
     1476    21668
     1477    21669    2           CALL CHK_BFR_SIZ(5) ALTRET(NO_MEMORY);

  21669   1 000F7B  DBF0 0005                            LAB,B5   5,IMO
          1 000F7D  DFC7 0054                            STB,B5   @SIZ,AUTO
          1 000F7F  E3C0 FD8E                            LNJ,B6   s:0,PREL
          1 000F81       0031                            DC       s:21683,PREL

     1478    21670
     1479    21671    2           CALL SETBUFADR_NCHK;       /* Set buf adr w/out checking for size     */

  21671   1 000F82  E3C0 FF79                            LNJ,B6   s:0,PREL
PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:235  
          1 000F84       0001                            DC       s:21672,PREL

     1480    21672    2           CALL STORE_MRD(ROW,COL+1);

  21672   1 000F85  E847 0016                            LDR,R6   COL,AUTO
          1 000F87  6E01                                 ADV,R6   1
          1 000F88  EF47 0069                            STR,R6   C_MRD+8,AUTO
          1 000F8A  EBC7 0069                            LAB,B6   C_MRD+8,AUTO
          1 000F8C  EFC7 005E                            STB,B6   @R+2,AUTO
          1 000F8E  DBC7 0015                            LAB,B5   ROW,AUTO
          1 000F90  DFC7 005C                            STB,B5   @QUEUE_ON_TAIL+2,AUTO
          1 000F92  E3C0 0023                            LNJ,B6   s:0,PREL
          1 000F94       0001                            DC       s:21674,PREL

     1481    21673
     1482    21674    2           BFR$->BYT(BYTX)=BITBIN(%KZ#START_FIELD);

  21674   1 000F95  6C1D                                 LDV,R6   29
          1 000F96  ECC7 000A                            LDB,B6   BFR$,AUTO
          1 000F98  B847 0028                            LDR,R3   BYTX,AUTO
          1 000F9A  E7B6                                 STH,R6   ,B6,R3

     1483    21675    2           BFR$->BYT(BYTX+1)=KZ_3270XL(ATTR_CHR);

  21675   1 000F9B  A2C7 002A                            LLH,R2   ATTR_CHAR,AUTO
          1 000F9D  D2A0 0000 0000  00                   LLH,R5   KZ_3270XLB,R2
          1 000FA0  ECC7 000A                            LDB,B6   BFR$,AUTO
          1 000FA2  3E01                                 ADV,R3   1
          1 000FA3  D7B6                                 STH,R5   ,B6,R3

     1484    21676
     1485    21677    2           BYTX=BYTX+2;

  21677   1 000FA4  C847 0028                            LDR,R4   BYTX,AUTO
          1 000FA6  4E02                                 ADV,R4   2
          1 000FA7  CF47 0028                            STR,R4   BYTX,AUTO

PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:236  
     1486    21678    2           BYTSIZ=BYTSIZ-2;

  21678   1 000FA9  B847 0029                            LDR,R3   BYTSIZ,AUTO
          1 000FAB  3EFE                                 ADV,R3   -2
          1 000FAC  BF47 0029                            STR,R3   BYTSIZ,AUTO

     1487    21679
     1488    21680    2           RETURN;

  21680   1 000FAE  ECC7 004E                            LDB,B6   I+2,AUTO
          1 000FB0  C3C6 0001                            LNJ,B4   1,B6

     1489    21681
     1490    21682    2   NO_MEMORY:
     1491    21683    2           ALTRETURN;

  21683   1 000FB2  ECC7 004E            NO_MEMORY       LDB,B6   I+2,AUTO
          1 000FB4  B806                                 LDR,R3   ,B6
          1 000FB5  C3B6                                 LNJ,B4   ,B6,R3

     1492    21684
     1493    21685    2   END ATTR;
     1494    21686
     1495    21687        %EJECT;
PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:237  
     1496    21688    1   STORE_MRD: PROC (R,C);

  21688   1 000FB6  EFC7 005A            STORE_MRD       STB,B6   @QUEUE_ON_TAIL,AUTO

     1497    21689    2   DCL R SBIN;
     1498    21690    2   DCL C SBIN;
     1499    21691    2   DCL R_MRD SBIN;
     1500    21692    2   DCL C_MRD SBIN;
     1501    21693
     1502    21694    2           R_MRD=R; C_MRD=C;

  21694   1 000FB8  DCC7 005C                            LDB,B5   @R,AUTO
          1 000FBA  E805                                 LDR,R6   ,B5
          1 000FBB  EF47 0060                            STR,R6   R_MRD,AUTO

  21694   1 000FBD  CCC7 005E                            LDB,B4   @C,AUTO
          1 000FBF  D804                                 LDR,R5   ,B4
          1 000FC0  DF47 0061                            STR,R5   C_MRD,AUTO

     1503    21695    2           IF C_MRD>MAX_COL THEN

  21695   1 000FC2  D947 001F                            CMR,R5   MAX_COL,AUTO
          1 000FC4  0A81 0006                            BALE     s:21700,PREL

     1504    21696    3           DO;

     1505    21697    3              C_MRD=1;

  21697   1 000FC6  5C01                                 LDV,R5   1
          1 000FC7  DF47 0061                            STR,R5   C_MRD,AUTO

     1506    21698    3              R_MRD=R_MRD+1;

  21698   1 000FC9  8AC7 0060                            INC      R_MRD,AUTO

     1507    21699    3              END;

PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:238  
     1508    21700    2           IF R_MRD>MAX_ROW THEN R_MRD=1;

  21700   1 000FCB  C847 0060                            LDR,R4   R_MRD,AUTO
          1 000FCD  C947 001E                            CMR,R4   MAX_ROW,AUTO
          1 000FCF  0A81 0004                            BALE     s:21701,PREL

  21700   1 000FD1  4C01                                 LDV,R4   1
          1 000FD2  CF47 0060                            STR,R4   R_MRD,AUTO

     1509    21701    2           %KV_MRD.DVCLIN=R_MRD;

  21701   1 000FD4  BC80 0000 0000  xsym                 LDB,B3   KV$PTR$
          1 000FD7  ACC3 0008                            LDB,B2   8,B3
          1 000FD9  CF42 001D                            STR,R4   29,B2

     1510    21702    2           %KV_MRD.DVCCLM=C_MRD;

  21702   1 000FDB  ECC3 0008                            LDB,B6   8,B3
          1 000FDD  DF46 001E                            STR,R5   30,B6

     1511    21703    2           RETURN;

  21703   1 000FDF  ECC7 005A                            LDB,B6   @QUEUE_ON_TAIL,AUTO
          1 000FE1  C3C6 0001                            LNJ,B4   1,B6

     1512    21704    2   END STORE_MRD;
     1513    21705        %EJECT;
PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:239  
     1514    21706        /* IC - Insert cursor */
     1515    21707
     1516    21708        /*F*  NAME:    IC
     1517    21709              PURPOSE: To insert a "INSERT CURSOR" command into the output
     1518    21710                       buffer.
     1519    21711        */
     1520    21712        /*D*  NAME:    IC
     1521    21713              CALL:    From KZT$3270
     1522    21714              USES DATA STRUCTURES
     1523    21715                       KZ$3270CTX
     1524    21716                       KZ$OTPBFR
     1525    21717              INPUT:   Cursor position as row/column.
     1526    21718        */
     1527    21719    1   IC:     PROC ALTRET;

  21719   1 000FE3  EFC7 003E            IC              STB,B6   DISABLE_LEVEL+2,AUTO

     1528    21720
     1529    21721
     1530    21722    2           CALL CHK_BFR_SIZ(1) ALTRET(NO_MEMORY);

  21722   1 000FE5  DBF0 0001                            LAB,B5   1,IMO
          1 000FE7  DFC7 0054                            STB,B5   @SIZ,AUTO
          1 000FE9  E3C0 FD24                            LNJ,B6   s:0,PREL
          1 000FEB       000F                            DC       s:21731,PREL

     1531    21723
     1532    21724    2           BFR$->BYT(BYTX)=BITBIN(%KZ#INSERT_CURSOR);

  21724   1 000FEC  6C13                                 LDV,R6   19
          1 000FED  ECC7 000A                            LDB,B6   BFR$,AUTO
          1 000FEF  B847 0028                            LDR,R3   BYTX,AUTO
          1 000FF1  E7B6                                 STH,R6   ,B6,R3

     1533    21725    2           BYTX=BYTX+1;

  21725   1 000FF2  8AC7 0028                            INC      BYTX,AUTO
PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:240  

     1534    21726    2           BYTSIZ=BYTSIZ-1;

  21726   1 000FF4  88C7 0029                            DEC      BYTSIZ,AUTO

     1535    21727
     1536    21728    2           RETURN;

  21728   1 000FF6  ECC7 003E                            LDB,B6   DISABLE_LEVEL+2,AUTO
          1 000FF8  C3C6 0001                            LNJ,B4   1,B6

     1537    21729
     1538    21730    2   NO_MEMORY:
     1539    21731    2           ALTRETURN;

  21731   1 000FFA  ECC7 003E            NO_MEMORY       LDB,B6   DISABLE_LEVEL+2,AUTO
          1 000FFC  B806                                 LDR,R3   ,B6
          1 000FFD  C3B6                                 LNJ,B4   ,B6,R3

     1540    21732
     1541    21733    2   END IC;
     1542    21734
     1543    21735        %EJECT;
PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:241  
     1544    21736        /* ERS - Erase an area on the screen */
     1545    21737        /*F*   NAME:    ERS
     1546    21738              PURPOSE: To clear a portion of the screen by using the set
     1547    21739                       buffer address command followed by Repeat address
     1548    21740                       with the null character.
     1549    21741        */
     1550    21742        /*D*   NAME:    ERS
     1551    21743              CALL:    From KZT$3270
     1552    21744              USES DATA STRUCTURES
     1553    21745                       KZ$3270CTX
     1554    21746                       KZ$OTPBFR
     1555    21747                       Address of start of clear  and
     1556    21748                       Address of end of clear.
     1557    21749        */
     1558    21750
     1559    21751    1   ERS:    PROC ALTRET;

  21751   1 000FFE  EFC7 004E            ERS             STB,B6   I+2,AUTO

     1560    21752
     1561    21753    2   DCL   FILLCHAR UBIN BYTE UNAL;          /* CHAR TO BE REPEATED FOR SPACING    */
     1562    21754
     1563    21755
     1564    21756    2           CALL CHK_BFR_SIZ(7) ALTRET(NO_MEMORY); /* Space for SBA,RA,null,null  */

  21756   1 001000  DBF0 0007                            LAB,B5   7,IMO
          1 001002  DFC7 0054                            STB,B5   @SIZ,AUTO
          1 001004  E3C0 FD09                            LNJ,B6   s:0,PREL
          1 001006       004A                            DC       s:21792,PREL

     1565    21757
     1566    21758    2           CALL SETBUFADR_NCHK;       /* Set buf adr w/out checking for size     */

  21758   1 001007  E3C0 FEF4                            LNJ,B6   s:0,PREL
          1 001009       0001                            DC       s:21759,PREL

     1567    21759    2           FILLCHAR = BITBIN(%KZ#NULL);
PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:242  

  21759   1 00100A  87C7 0050                            CLH      FILLCHAR,AUTO

     1568    21760
     1569    21761    2   ERS2:   ROW = ROW1; COL = COL1+1;       /* Add 1 because repeat order         */

  21761   1 00100C  E847 0017            ERS2            LDR,R6   ROW1,AUTO
          1 00100E  EF47 0015                            STR,R6   ROW,AUTO

  21761   1 001010  D847 0018                            LDR,R5   COL1,AUTO
          1 001012  5E01                                 ADV,R5   1
          1 001013  DF47 0016                            STR,R5   COL,AUTO

     1570    21762                                                /* goes to addr-1                     */
     1571    21763
     1572    21764    2           CALL SETBUFADR_NCHK;       /* Set buf adr w/out checking for size     */

  21764   1 001015  E3C0 FEE6                            LNJ,B6   s:0,PREL
          1 001017       0001                            DC       s:21765,PREL

     1573    21765    2           IF NOT SBA_DONE THEN

  21765   1 001018  89C7 0027                            CMZ      SBA_DONE,AUTO
          1 00101A  0801 0005                            BAL      s:21768,PREL

     1574    21766    2              RETURN;

  21766   1 00101C  ECC7 004E                            LDB,B6   I+2,AUTO
          1 00101E  C3C6 0001                            LNJ,B4   1,B6

     1575    21767
     1576    21768    2           BFR$->BYT(BYTX-3)=BITBIN(%KZ#REPEAT_ADDRESS);

  21768   1 001020  6C3C                                 LDV,R6   60
          1 001021  ECC7 000A                            LDB,B6   BFR$,AUTO
          1 001023  B847 0028                            LDR,R3   BYTX,AUTO
          1 001025  3EFD                                 ADV,R3   -3
PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:243  
          1 001026  E7B6                                 STH,R6   ,B6,R3

     1577    21769    2           BFR$->BYT(BYTX)=FILLCHAR;       /* Char to repeat                     */

  21769   1 001027  D2C7 0050                            LLH,R5   FILLCHAR,AUTO
          1 001029  ECC7 000A                            LDB,B6   BFR$,AUTO
          1 00102B  A847 0028                            LDR,R2   BYTX,AUTO
          1 00102D  D7A6                                 STH,R5   ,B6,R2

     1578    21770    2           BYTX=BYTX+1;

  21770   1 00102E  8AC7 0028                            INC      BYTX,AUTO

     1579    21771    2           BYTSIZ = BYTSIZ-1;

  21771   1 001030  88C7 0029                            DEC      BYTSIZ,AUTO

     1580    21772
     1581    21773    2           RETURN;

  21773   1 001032  ECC7 004E                            LDB,B6   I+2,AUTO
          1 001034  C3C6 0001                            LNJ,B4   1,B6

     1582    21774
     1583    21775    2   ERSCUR: ENTRY ALTRET;                   /* Erase from current position        */

  21775   1 001036  EFC7 004E            ERSCUR          STB,B6   I+2,AUTO

     1584    21776
     1585    21777    2           FILLCHAR = BITBIN(%KZ#NULL);

  21777   1 001038  87C7 0050                            CLH      FILLCHAR,AUTO

     1586    21778    2   ERSC:
     1587    21779    2           ROW1 = ROW;

  21779   1 00103A  E847 0015            ERSC            LDR,R6   ROW,AUTO
PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:244  
          1 00103C  EF47 0017                            STR,R6   ROW1,AUTO

     1588    21780    2           COL1 = COL;

  21780   1 00103E  D847 0016                            LDR,R5   COL,AUTO
          1 001040  DF47 0018                            STR,R5   COL1,AUTO

     1589    21781    2           CALL CHKBFR_SETADDR(4)          /* If new buf is created, insert SBA  */

  21781   1 001042  EBF0 0004                            LAB,B6   4,IMO
          1 001044  EFC7 0054                            STB,B6   @SIZ,AUTO
          1 001046  E3C0 FCCE                            LNJ,B6   s:0,PREL
          1 001048       0008                            DC       s:21792,PREL

     1590    21782    2             ALTRET(NO_MEMORY);
     1591    21783    2           GOTO ERS2;

  21783   1 001049  0FC3                                 B        s:21761,SPREL

     1592    21784
     1593    21785
     1594    21786    2   ERSCUR_BLNKS: ENTRY ALTRET;   /* Erase from current position using blanks     */

  21786   1 00104A  EFC7 004E            ERSCUR_BLNKS    STB,B6   I+2,AUTO

     1595    21787
     1596    21788    2           FILLCHAR = %KZ#EBDC_SPACE;

  21788   1 00104C  6C40                                 LDV,R6   64
          1 00104D  E7C7 0050                            STH,R6   FILLCHAR,AUTO

     1597    21789    2           GOTO ERSC;

  21789   1 00104F  0FEB                                 B        s:21779,SPREL

     1598    21790
     1599    21791    2   NO_MEMORY:
PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:245  
     1600    21792    2           ALTRETURN;

  21792   1 001050  ECC7 004E            NO_MEMORY       LDB,B6   I+2,AUTO
          1 001052  B806                                 LDR,R3   ,B6
          1 001053  C3B6                                 LNJ,B4   ,B6,R3

     1601    21793
     1602    21794    2   END ERS;
     1603    21795        %EJECT;
PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:246  
     1604    21796        /* ERSWNDW - Erase a window */
     1605    21797
     1606    21798        /*F*   NAME: ERSWNDW
     1607    21799              PURPOSE: To clear a window on the screen of the device. Co-
     1608    21800              ordinates given are the topleft and bottom right corners of
     1609    21801              of the window with an offset column number to start from on
     1610    21802              the top line of the window.
     1611    21803        */
     1612    21804        /*D*   NAME: ERSWNDW
     1613    21805              CALL: From VDH -> VDH-user REQUEST driver.
     1614    21806              USES DATA STRUCTURES:
     1615    21807                   KZ$3270CTX
     1616    21808                   KV$USR_ERS
     1617    21809              INPUT: Top left and Btmright and top line offset describing
     1618    21810                     window coordinates.
     1619    21811
     1620    21812                 ECOL       ECOL2
     1621    21813                 |          |
     1622    21814         EROW___            ____________________________
     1623    21815                 ___________|                           |
     1624    21816                 |                                      |
     1625    21817                 |                                      |
     1626    21818                 |                                      |
     1627    21819                 |                                      |
     1628    21820                 |                        ______________|
     1629    21821                 |________________________|             _____EROW1
     1630    21822                                          |             |
     1631    21823                                          ECOL3         ECOL1
     1632    21824
     1633    21825        */
     1634    21826    1   ERSWNDW: PROC(EROW,ECOL,EROW1,ECOL1,ECOL2,ECOL3) ALTRET;

  21826   1 001054  EFC7 003E            ERSWNDW         STB,B6   DISABLE_LEVEL+2,AUTO

     1635    21827
     1636    21828    2   DCL EROW UBIN;
     1637    21829    2   DCL ECOL UBIN;
PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:247  
     1638    21830    2   DCL EROW1 UBIN;
     1639    21831    2   DCL ECOL1 UBIN;
     1640    21832    2   DCL ECOL2 UBIN;
     1641    21833    2   DCL ECOL3 UBIN;
     1642    21834    2   DCL I UBIN;
     1643    21835
     1644    21836    2           ROW = EROW;

  21836   1 001056  DCC7 0040                            LDB,B5   @EROW,AUTO
          1 001058  E805                                 LDR,R6   ,B5
          1 001059  EF47 0015                            STR,R6   ROW,AUTO

     1645    21837    3           IF ECOL <= 1 AND ECOL1 >= MAX_COL THEN DO;

  21837   1 00105B  CCC7 0042                            LDB,B4   @ECOL,AUTO
          1 00105D  D804                                 LDR,R5   ,B4
          1 00105E  5D01                                 CMV,R5   1
          1 00105F  0301 004D                            BG       s:21856,PREL
          1 001061  BCC7 0046                            LDB,B3   @ECOL1,AUTO
          1 001063  C803                                 LDR,R4   ,B3
          1 001064  4801 0005                            BLZ,R4   s:21839,PREL
          1 001066  C947 001F                            CMR,R4   MAX_COL,AUTO
          1 001068  0801 0044                            BAL      s:21856,PREL

     1646    21838                                      /* Window is entire width - do with one call    */
     1647    21839    3              COL=ECOL2; ROW1=EROW1; COL1=ECOL3;

  21839   1 00106A  ACC7 0048                            LDB,B2   @ECOL2,AUTO
          1 00106C  B802                                 LDR,R3   ,B2
          1 00106D  BF47 0016                            STR,R3   COL,AUTO

  21839   1 00106F  9CC7 0044                            LDB,B1   @EROW1,AUTO
          1 001071  D801                                 LDR,R5   ,B1
          1 001072  DF47 0017                            STR,R5   ROW1,AUTO

  21839   1 001074  ECC7 004A                            LDB,B6   @ECOL3,AUTO
          1 001076  C806                                 LDR,R4   ,B6
PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:248  
          1 001077  CF47 0018                            STR,R4   COL1,AUTO

     1648    21840    4              IF ROW1=MAX_ROW AND COL1=MAX_COL THEN DO;

  21840   1 001079  D947 001E                            CMR,R5   MAX_ROW,AUTO
          1 00107B  0981 002A                            BNE      s:21852,PREL
          1 00107D  C947 001F                            CMR,R4   MAX_COL,AUTO
          1 00107F  0981 0026                            BNE      s:21852,PREL

     1649    21841    4                 COL1=COL1-1;

  21841   1 001081  88C7 0018                            DEC      COL1,AUTO

     1650    21842    4                 CALL ERS ALTRET(NO_MEMORY);

  21842   1 001083  E3C0 FF7A                            LNJ,B6   s:0,PREL
          1 001085       005D                            DC       s:21869,PREL

     1651    21843    4                 ROW=MAX_ROW; COL=MAX_COL;

  21843   1 001086  E847 001E                            LDR,R6   MAX_ROW,AUTO
          1 001088  EF47 0015                            STR,R6   ROW,AUTO

  21843   1 00108A  D847 001F                            LDR,R5   MAX_COL,AUTO
          1 00108C  DF47 0016                            STR,R5   COL,AUTO

     1652    21844    4                 ATTR_CHAR='0'B;

  21844   1 00108E  87C7 002A                            CLH      ATTR_CHAR,AUTO

     1653    21845    4                 KV$GRPRND=%KV_MRD.ABSGRPRND(%KV_ABSGRPRND_OUTPUT);

  21845   1 001090  EC80 0000 0000  xsym                 LDB,B6   KV$PTR$
          1 001093  DCC6 0008                            LDB,B5   8,B6
          1 001095  C845 001B                            LDR,R4   27,B5
          1 001097  4008                                 SOL,R4   8
          1 001098  4048                                 SOR,R4   8
PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:249  
          1 001099  C7C7 002B                            STH,R4   KV$GRPRND,AUTO

     1654    21846    4                 CALL SETATR;

  21846   1 00109B  E3C0 F80B                            LNJ,B6   s:0,PREL
          1 00109D       0001                            DC       s:21847,PREL

     1655    21847    4                 ATTR_CHAR.PROTECT='1'B;

  21847   1 00109E  8947 002A                            LBT,'2000'X       ATTR_CHAR,AUTO
  21847   1 0010A0       2000

     1656    21848    4                 CALL ATTR            /* Put protected attr at end of screen     */

  21848   1 0010A1  E3C0 FED7                            LNJ,B6   s:0,PREL
          1 0010A3       003F                            DC       s:21869,PREL

     1657    21849    4                   ALTRET(NO_MEMORY);
     1658    21850    4                 END;

  21850   1 0010A4  0F81 0004                            B        s:21853,PREL

     1659    21851    3              ELSE
     1660    21852    3                 CALL ERS ALTRET(NO_MEMORY);

  21852   1 0010A6  E3C0 FF57                            LNJ,B6   s:0,PREL
          1 0010A8       003A                            DC       s:21869,PREL

     1661    21853    3              RETURN;

  21853   1 0010A9  ECC7 003E                            LDB,B6   DISABLE_LEVEL+2,AUTO
          1 0010AB  C3C6 0001                            LNJ,B4   1,B6

     1662    21854    3              END;
     1663    21855
     1664    21856    2           I=ROW; COL=ECOL2; COL1=ECOL1;

PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:250  
  21856   1 0010AD  EF47 004C                            STR,R6   I,AUTO

  21856   1 0010AF  BCC7 0048                            LDB,B3   @ECOL2,AUTO
          1 0010B1  C803                                 LDR,R4   ,B3
          1 0010B2  CF47 0016                            STR,R4   COL,AUTO

  21856   1 0010B4  ACC7 0046                            LDB,B2   @ECOL1,AUTO
          1 0010B6  D802                                 LDR,R5   ,B2
          1 0010B7  DF47 0018                            STR,R5   COL1,AUTO

     1665    21857    3           DO WHILE(I<=EROW1);

  21857   1 0010B9  9CC7 0044                            LDB,B1   @EROW1,AUTO
          1 0010BB  E901                                 CMR,R6   ,B1
          1 0010BC  0301 0021                            BG       s:21866,PREL

     1666    21858    3              ROW=I; ROW1=I;

  21858   1 0010BE  E847 004C                            LDR,R6   I,AUTO
          1 0010C0  EF47 0015                            STR,R6   ROW,AUTO

  21858   1 0010C2  EF47 0017                            STR,R6   ROW1,AUTO

     1667    21859    3              IF I=EROW1 THEN

  21859   1 0010C4  ECC7 0044                            LDB,B6   @EROW1,AUTO
          1 0010C6  E906                                 CMR,R6   ,B6
          1 0010C7  0981 0006                            BNE      s:21861,PREL

     1668    21860    3                 COL1 = ECOL3;

  21860   1 0010C9  DCC7 004A                            LDB,B5   @ECOL3,AUTO
          1 0010CB  D805                                 LDR,R5   ,B5
          1 0010CC  DF47 0018                            STR,R5   COL1,AUTO

     1669    21861    3              CALL ERS ALTRET(NO_MEMORY);

PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:251  
  21861   1 0010CE  E3C0 FF2F                            LNJ,B6   s:0,PREL
          1 0010D0       0012                            DC       s:21869,PREL

     1670    21862    3              COL=ECOL;

  21862   1 0010D1  ECC7 0042                            LDB,B6   @ECOL,AUTO
          1 0010D3  E806                                 LDR,R6   ,B6
          1 0010D4  EF47 0016                            STR,R6   COL,AUTO

     1671    21863    3              I=I+1;

  21863   1 0010D6  8AC7 004C                            INC      I,AUTO

     1672    21864    3              END;

  21864   1 0010D8  DCC7 0044                            LDB,B5   @EROW1,AUTO
          1 0010DA  D847 004C                            LDR,R5   I,AUTO
          1 0010DC  D905                                 CMR,R5   ,B5
          1 0010DD  03E1                                 BLE      s:21858,SPREL

     1673    21865
     1674    21866    2           RETURN;

  21866   1 0010DE  ECC7 003E                            LDB,B6   DISABLE_LEVEL+2,AUTO
          1 0010E0  C3C6 0001                            LNJ,B4   1,B6

     1675    21867
     1676    21868    2   NO_MEMORY:
     1677    21869    2           ALTRETURN;

  21869   1 0010E2  ECC7 003E            NO_MEMORY       LDB,B6   DISABLE_LEVEL+2,AUTO
          1 0010E4  B806                                 LDR,R3   ,B6
          1 0010E5  C3B6                                 LNJ,B4   ,B6,R3

     1678    21870
     1679    21871    2   END ERSWNDW;
     1680    21872        %EJECT;
PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:252  
     1681    21873        /* CLEAR - Clear the screen */
     1682    21874
     1683    21875    1   CLEAR:  PROC ALTRET;

  21875   1 0010E6  EFC7 003E            CLEAR           STB,B6   DISABLE_LEVEL+2,AUTO

     1684    21876
     1685    21877    2           IF BFR$~=ADDR(NIL) THEN

  21877   1 0010E8  8DC7 000A                            CMN      BFR$,AUTO
          1 0010EA  0901 0008                            BE       s:21879,PREL

     1686    21878    2              CALL DONE (%QUEUE_ON_TAIL) ALTRET(NO_MEMORY);

  21878   1 0010EC  DBF0 8000                            LAB,B5   -32768,IMO
          1 0010EE  DFC7 005A                            STB,B5   @QUEUE_ON_TAIL,AUTO
          1 0010F0  E3C0 F83A                            LNJ,B6   s:0,PREL
          1 0010F2       0064                            DC       s:21907,PREL

     1687    21879    2           IF BFR$=ADDR(NIL) THEN

  21879   1 0010F3  8DC7 000A                            CMN      BFR$,AUTO
          1 0010F5  0981 0006                            BNE      s:21882,PREL

     1688    21880    2              CALL INITBFR ALTRET(NO_MEMORY);

  21880   1 0010F7  E3C0 FB18                            LNJ,B6   s:0,PREL
          1 0010F9       005D                            DC       s:21907,PREL
          1 0010FA  0F81 000B                            B        s:21885,PREL

     1689    21881    2           ELSE
     1690    21882    2              IF KZ$3270DEV.PRINTER

  21882   1 0010FC  ECC7 0008                            LDB,B6   DEV$,AUTO
          1 0010FE  82C6 0012                            LB,'0800'X        18,B6
          1 001100       0800
          1 001101  0501 0004                            BBT      s:21885,PREL
PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:253  

     1691    21883    2              THEN ;
     1692    21884    2              ELSE CALL INITBFR ALTRET(NO_MEMORY);

  21884   1 001103  E3C0 FB0C                            LNJ,B6   s:0,PREL
          1 001105       0051                            DC       s:21907,PREL

     1693    21885    2           IF KZ$3270DEV.PRO.EWALT THEN

  21885   1 001106  ECC7 0008                            LDB,B6   DEV$,AUTO
          1 001108  89C6 0011                            CMZ      17,B6
          1 00110A  0881 000A                            BAGE     s:21888,PREL

     1694    21886    2              BFR$->BYT(BYTX-2)=BITBIN(%KZ#ERASE_WRITE_ALTERNATE);

  21886   1 00110C  6C7E                                 LDV,R6   126
          1 00110D  DCC7 000A                            LDB,B5   BFR$,AUTO
          1 00110F  B847 0028                            LDR,R3   BYTX,AUTO
          1 001111  3EFE                                 ADV,R3   -2
          1 001112  E7B5                                 STH,R6   ,B5,R3
          1 001113  0F81 0009                            B        s:21890,PREL

     1695    21887    2           ELSE
     1696    21888    2              BFR$->BYT(BYTX-2)=BITBIN(%KZ#ERASE_WRITE);

  21888   1 001115  E870 00F5                            LDR,R6   245,IMO
          1 001117  DCC7 000A                            LDB,B5   BFR$,AUTO
          1 001119  B847 0028                            LDR,R3   BYTX,AUTO
          1 00111B  3EFE                                 ADV,R3   -2
          1 00111C  E7B5                                 STH,R6   ,B5,R3

     1697    21889
     1698    21890    2           CALL STORE_MRD(1,1);

  21890   1 00111D  DBF0 0001                            LAB,B5   1,IMO
          1 00111F  CBF0 0001                            LAB,B4   1,IMO
          1 001121  CFC7 005E                            STB,B4   @C,AUTO
PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:254  
          1 001123  DFC7 005C                            STB,B5   @R,AUTO
          1 001125  E3C0 FE90                            LNJ,B6   s:0,PREL
          1 001127       0001                            DC       s:21891,PREL

     1699    21891    3           IF NOT KZ$3270DEV.PRINTER THEN DO;

  21891   1 001128  ECC7 0008                            LDB,B6   DEV$,AUTO
          1 00112A  82C6 0012                            LB,'0800'X        18,B6
          1 00112C       0800
          1 00112D  0501 001F                            BBT      s:21902,PREL

     1700    21892    3              ROW=MAX_ROW;

  21892   1 00112F  E847 001E                            LDR,R6   MAX_ROW,AUTO
          1 001131  EF47 0015                            STR,R6   ROW,AUTO

     1701    21893    3              COL=MAX_COL;

  21893   1 001133  D847 001F                            LDR,R5   MAX_COL,AUTO
          1 001135  DF47 0016                            STR,R5   COL,AUTO

     1702    21894    3              ATTR_CHAR='0'B;

  21894   1 001137  87C7 002A                            CLH      ATTR_CHAR,AUTO

     1703    21895    3              KV$GRPRND=%KV_MRD.ABSGRPRND(%KV_ABSGRPRND_OUTPUT);

  21895   1 001139  DC80 0000 0000  xsym                 LDB,B5   KV$PTR$
          1 00113C  CCC5 0008                            LDB,B4   8,B5
          1 00113E  C844 001B                            LDR,R4   27,B4
          1 001140  4008                                 SOL,R4   8
          1 001141  4048                                 SOR,R4   8
          1 001142  C7C7 002B                            STH,R4   KV$GRPRND,AUTO

     1704    21896    3              CALL SETATR;

  21896   1 001144  E3C0 F762                            LNJ,B6   s:0,PREL
PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:255  
          1 001146       0001                            DC       s:21897,PREL

     1705    21897    3              ATTR_CHAR.PROTECT='1'B;

  21897   1 001147  8947 002A                            LBT,'2000'X       ATTR_CHAR,AUTO
  21897   1 001149       2000

     1706    21898    3              CALL ATTR          /* Put protected attr char at end of screen     */

  21898   1 00114A  E3C0 FE2E                            LNJ,B6   s:0,PREL
          1 00114C       000A                            DC       s:21907,PREL

     1707    21899    3                ALTRET(NO_MEMORY);
     1708    21900    3              END;

     1709    21901
     1710    21902    2           KZ$OTPBFR.FLAGS.FIRST#='1'B;

  21902   1 00114D  ECC7 000A                            LDB,B6   BFR$,AUTO
          1 00114F  8946 0002                            LBT,'0080'X       2,B6
          1 001151       0080

     1711    21903
     1712    21904    2           RETURN;

  21904   1 001152  ECC7 003E                            LDB,B6   DISABLE_LEVEL+2,AUTO
          1 001154  C3C6 0001                            LNJ,B4   1,B6

     1713    21905
     1714    21906    2   NO_MEMORY:
     1715    21907    2           ALTRETURN;

  21907   1 001156  ECC7 003E            NO_MEMORY       LDB,B6   DISABLE_LEVEL+2,AUTO
          1 001158  B806                                 LDR,R3   ,B6
          1 001159  C3B6                                 LNJ,B4   ,B6,R3

     1716    21908
PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:256  
     1717    21909    2   END CLEAR;
     1718    21910        %EJECT;
PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:257  
     1719    21911        /* CMPOTP - Call VDH to complete output, then send output */
     1720    21912
     1721    21913    1   CMP_OTP: PROC ALTRET;

  21913   1 00115A  EFC7 003E            CMP_OTP         STB,B6   DISABLE_LEVEL+2,AUTO

     1722    21914
     1723    21915    2           IF BFR$=ADDR(NIL) THEN

  21915   1 00115C  8DC7 000A                            CMN      BFR$,AUTO
          1 00115E  0981 0005                            BNE      s:21918,PREL

     1724    21916    2              RETURN;

  21916   1 001160  ECC7 003E                            LDB,B6   DISABLE_LEVEL+2,AUTO
          1 001162  C3C6 0001                            LNJ,B4   1,B6

     1725    21917
     1726    21918    2           CALL SET_VAL;                   /* Stuff values - may get re-entered  */

  21918   1 001164  E3C0 0182                            LNJ,B6   s:0,PREL
          1 001166       0001                            DC       s:21924,PREL

     1727    21919                %KV$CMPOTP;
             21924    3           IF KV$PTR.VDI$->KV$VDI.OTPCNDPND THEN DO;

  21924   1 001167  EC80 0000 0000  xsym                 LDB,B6   KV$PTR$
          1 00116A  DC86                                 LDB,B5   ,B6
          1 00116B  E845 001A                            LDR,R6   26,B5
          1 00116D  6901 000A                            BEZ,R6   s:21928,PREL

             21925    3              CALL KVV$VDI(KV_VDH_EVT_CMPOTP);

  21925   1 00116F  BB80 0000 0000  02                   LAB,B3   0
          1 001172  CBF0 0100                            LAB,B4   256,IMO
          1 001174  E380 0000 0000  xent                 LNJ,B6   KVV$VDI
          1 001177       0001                            DC       s:21928,PREL
PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:258  

             21926    3              END;                         /* END IF                             */

     1728    21928    2           CALL GET_VAL;

  21928   1 001178  E3C0 014D                            LNJ,B6   s:0,PREL
          1 00117A       0001                            DC       s:21929,PREL

     1729    21929    2           CALL DONE (%QUEUE_ON_TAIL) ALTRET(NO_MEMORY);

  21929   1 00117B  EBF0 8000                            LAB,B6   -32768,IMO
          1 00117D  EFC7 005A                            STB,B6   @QUEUE_ON_TAIL,AUTO
          1 00117F  E3C0 F7AB                            LNJ,B6   s:0,PREL
          1 001181       000A                            DC       s:21934,PREL

     1730    21930    2           KZ$3270DEV.DONE='0'B;

  21930   1 001182  ECC7 0008                            LDB,B6   DEV$,AUTO
          1 001184  8846 0012                            LBF,'0200'X       18,B6
          1 001186       0200

     1731    21931    2           RETURN;

  21931   1 001187  ECC7 003E                            LDB,B6   DISABLE_LEVEL+2,AUTO
          1 001189  C3C6 0001                            LNJ,B4   1,B6

     1732    21932
     1733    21933    2   NO_MEMORY:
     1734    21934    2           ALTRETURN;

  21934   1 00118B  ECC7 003E            NO_MEMORY       LDB,B6   DISABLE_LEVEL+2,AUTO
          1 00118D  B806                                 LDR,R3   ,B6
          1 00118E  C3B6                                 LNJ,B4   ,B6,R3

     1735    21935
     1736    21936    2   END CMP_OTP;
     1737    21937        %EJECT;
PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:259  
     1738    21938        /* SND_SLV_BFR - Build and send a buffer with an order for PASSTHRU */
     1739    21939
     1740    21940    1   SND_SLV_BFR: PROC(WCC) ALTRET;

  21940   1 00118F  EFC7 003E            SND_SLV_BFR     STB,B6   DISABLE_LEVEL+2,AUTO

     1741    21941    2   DCL WCC UBIN;
     1742    21942
     1743    21943    2           IF NOT KZ$3270DEV.ACTIVE THEN

  21943   1 001191  DCC7 0008                            LDB,B5   DEV$,AUTO
          1 001193  82C5 0012                            LB,'4000'X        18,B5
          1 001195       4000
          1 001196  0501 0005                            BBT      s:21945,PREL

     1744    21944    2              RETURN;

  21944   1 001198  ECC7 003E                            LDB,B6   DISABLE_LEVEL+2,AUTO
          1 00119A  C3C6 0001                            LNJ,B4   1,B6

     1745    21945    2           CALL SET_VAL;

  21945   1 00119C  E3C0 014A                            LNJ,B6   s:0,PREL
          1 00119E       0001                            DC       s:21946,PREL

     1746    21946    2           T$=BFR$;

  21946   1 00119F  ECC7 000A                            LDB,B6   BFR$,AUTO
          1 0011A1  EFC7 000E                            STB,B6   T$,AUTO

     1747    21947    2           SZ=KZ_3270_BFRSIZ(1);

  21947   1 0011A3  E800 0000 0021  00                   LDR,R6   KZ_3270_BFRSIZ+1
          1 0011A6  EF47 0020                            STR,R6   SZ,AUTO

     1748    21948                %DISABLE(INHLVL=KH_INHLVL);

PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:260  
  21949   1 0011A8  D800 0000 0000  xsym                 LDR,R5   KH_INHLVL
          1 0011AB  DF47 003C                            STR,R5   DISABLE_LEVEL,AUTO

  21950   1 0011AD  DBC7 003C                            LAB,B5   DISABLE_LEVEL,AUTO
          1 0011AF  DFC7 0062                            STB,B5   C_MRD+1,AUTO
          1 0011B1  BBC7 0062                            LAB,B3   C_MRD+1,AUTO
          1 0011B3  CBF0 0100                            LAB,B4   256,IMO
          1 0011B5  E380 0000 0000  xent                 LNJ,B6   KHI$DISABLE
          1 0011B8       0001                            DC       s:21952,PREL

     1749    21952    2           CALL KVB$GET2NSYS(SZ,TBFR$) ALTRET(NO_MEMORY);

  21952   1 0011B9  EBC7 000C                            LAB,B6   TBFR$,AUTO
          1 0011BB  EFC7 0064                            STB,B6   C_MRD+3,AUTO
          1 0011BD  DBC7 0020                            LAB,B5   SZ,AUTO
          1 0011BF  DFC7 0062                            STB,B5   C_MRD+1,AUTO
          1 0011C1  BBC7 0062                            LAB,B3   C_MRD+1,AUTO
          1 0011C3  CBF0 0200                            LAB,B4   512,IMO
          1 0011C5  E380 0000 0000  xent                 LNJ,B6   KVB$GET2NSYS
          1 0011C8       0064                            DC       s:21979,PREL

     1750    21953    2           SZX=1;

  21953   1 0011C9  6C01                                 LDV,R6   1
          1 0011CA  EF47 0021                            STR,R6   SZX,AUTO

     1751    21954    2           BFR$=TBFR$;

  21954   1 0011CC  ECC7 000C                            LDB,B6   TBFR$,AUTO
          1 0011CE  EFC7 000A                            STB,B6   BFR$,AUTO

     1752    21955    2           CALL INITBFRHDR;           /* Shouldn't ALTRETURN for lack of MEMory  */

  21955   1 0011D0  E3C0 FAC2                            LNJ,B6   s:0,PREL
          1 0011D2       0001                            DC       s:21956,PREL

     1753    21956    2           BFR$->BYT(BYTX-2)=%KZ#3270_SLV_CMND;
PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:261  

  21956   1 0011D3  E870 00C3                            LDR,R6   195,IMO
          1 0011D5  ECC7 000A                            LDB,B6   BFR$,AUTO
          1 0011D7  B847 0028                            LDR,R3   BYTX,AUTO
          1 0011D9  3EFE                                 ADV,R3   -2
          1 0011DA  E7B6                                 STH,R6   ,B6,R3

     1754    21957    2           BFR$->BYT(BYTX-1)=WCC;

  21957   1 0011DB  ECC7 0040                            LDB,B6   @WCC,AUTO
          1 0011DD  D806                                 LDR,R5   ,B6
          1 0011DE  DCC7 000A                            LDB,B5   BFR$,AUTO
          1 0011E0  A847 0028                            LDR,R2   BYTX,AUTO
          1 0011E2  2EFF                                 ADV,R2   -1
          1 0011E3  D7A5                                 STH,R5   ,B5,R2

     1755    21958    2           KZ$OTPBFR.DATA_SIZ=BYTX-SIZEC(KZ$OTPBFR);

  21958   1 0011E4  DCC7 000A                            LDB,B5   BFR$,AUTO
          1 0011E6  D847 0028                            LDR,R5   BYTX,AUTO
          1 0011E8  5EF0                                 ADV,R5   -16
          1 0011E9  DF45 0003                            STR,R5   3,B5

     1756    21959    2           KZ$3270DEV.OTPBYTES=KZ$3270DEV.OTPBYTES+KZ$OTPBFR.DATA_SIZ;

  21959   1 0011EB  DCC7 0008                            LDB,B5   DEV$,AUTO
          1 0011ED  CCC7 000A                            LDB,B4   BFR$,AUTO
          1 0011EF  C845 0014                            LDR,R4   20,B5
          1 0011F1  CA44 0003                            ADD,R4   3,B4
          1 0011F3  CF45 0014                            STR,R4   20,B5

     1757    21960    2           KZ$OTPBFR.FLAGS.CNT#='1'B;

  21960   1 0011F5  8944 0002                            LBT,'0020'X       2,B4
  21960   1 0011F7       0020

     1758    21961    2           IF KZ$3270DEV.OTPTL$~=ADDR(NIL) THEN
PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:262  

  21961   1 0011F8  8DC5 000A                            CMN      10,B5
          1 0011FA  0901 0008                            BE       s:21964,PREL

     1759    21962    2              KZ$3270DEV.OTPTL$->KZ$OTPBFR.LNK$=BFR$;

  21962   1 0011FC  CCC5 000A                            LDB,B4   10,B5
          1 0011FE  BCC7 000A                            LDB,B3   BFR$,AUTO
          1 001200  BF84                                 STB,B3   ,B4
          1 001201  0F81 0005                            B        s:21965,PREL

     1760    21963    2           ELSE
     1761    21964    2              KZ$3270DEV.OTPHD$=BFR$;

  21964   1 001203  CCC7 000A                            LDB,B4   BFR$,AUTO
          1 001205  CFC5 0008                            STB,B4   8,B5

     1762    21965    2           KZ$3270DEV.OTPTL$=BFR$;

  21965   1 001207  CCC7 000A                            LDB,B4   BFR$,AUTO
          1 001209  CFC5 000A                            STB,B4   10,B5

     1763    21966    2           KZ$3270DEV.CTR$->KZ$3270CTR.LIN$->KZ$LINCTX.OTPCNT=

  21966   1 00120B  BCC5 0002                            LDB,B3   2,B5
          1 00120D  ACC3 0004                            LDB,B2   4,B3
          1 00120F  8AC2 004D                            INC      77,B2

     1764    21967    2             KZ$3270DEV.CTR$->KZ$3270CTR.LIN$->KZ$LINCTX.OTPCNT+1;
     1765    21968                %ENABLE(INHLVL=KH_INHLVL);

  21969   1 001211  C847 003C                            LDR,R4   DISABLE_LEVEL,AUTO
          1 001213  C900 0000 0000  xsym                 CMR,R4   KH_INHLVL
          1 001216  0901 0007                            BE       s:21974,PREL

  21971   1 001218  CBF0 0000                            LAB,B4   0,IMO
          1 00121A  E380 0000 0000  xent                 LNJ,B6   KHI$ENABLE
PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:263  
          1 00121D       0001                            DC       s:21974,PREL

     1766    21974    2           CALL GET_VAL;

  21974   1 00121E  E3C0 00A7                            LNJ,B6   s:0,PREL
          1 001220       0001                            DC       s:21975,PREL

     1767    21975    2           BFR$=T$;

  21975   1 001221  ECC7 000E                            LDB,B6   T$,AUTO
          1 001223  EFC7 000A                            STB,B6   BFR$,AUTO

     1768    21976    2           CALL SET_VAL;

  21976   1 001225  E3C0 00C1                            LNJ,B6   s:0,PREL
          1 001227       0001                            DC       s:21977,PREL

     1769    21977    2           RETURN;

  21977   1 001228  ECC7 003E                            LDB,B6   DISABLE_LEVEL+2,AUTO
          1 00122A  C3C6 0001                            LNJ,B4   1,B6

     1770    21978    2   NO_MEMORY:
     1771    21979    2           ALTRETURN;

  21979   1 00122C  ECC7 003E            NO_MEMORY       LDB,B6   DISABLE_LEVEL+2,AUTO
          1 00122E  B806                                 LDR,R3   ,B6
          1 00122F  C3B6                                 LNJ,B4   ,B6,R3

     1772    21980    2   END SND_SLV_BFR;
     1773    21981        %EJECT;
PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:264  
     1774    21982        /* ERRLOG */
     1775    21983    1   ERRLOG: PROC (ERROR);

  21983   1 001230  EFC7 003E            ERRLOG          STB,B6   DISABLE_LEVEL+2,AUTO

     1776    21984    2   DCL ERROR UBIN;
     1777    21985        %FPT_WRSYSLOG (STCLASS="");
     1778    22080        %FPT_WRSYSLOG (FPTN=FPT@WRSYSLOG,STCLASS=CONSTANT,FCG='KZ',MID='T');
     1779    22175
     1780    22176    2           FPT_WRSYSLOG = FPT@WRSYSLOG;

  22176   1 001232  AB80 0000 0000  00                   LAB,B2   KZ_3270XLB
          1 001235  2C7E                                 LDV,R2   126
          1 001236  6C2A                                 LDV,R6   42
          1 001237  BBC7 0042                            LAB,B3   FPT_WRSYSLOG,AUTO
          1 001239  3C00                                 LDV,R3   0
          1 00123A  0008                                 MMM

     1781    22177    2           FPT_WRSYSLOG.V.TERMID = KZ$3270DEV.CTR$->KZ$3270CTR.LIN$->

  22177   1 00123B  ECC7 0008                            LDB,B6   DEV$,AUTO
          1 00123D  DCC6 0002                            LDB,B5   2,B6
          1 00123F  CCC5 0004                            LDB,B4   4,B5
          1 001241  AB84                                 LAB,B2   ,B4
          1 001242  2C08                                 LDV,R2   8
          1 001243  6C10                                 LDV,R6   16
          1 001244  BBC7 004A                            LAB,B3   @ECOL3,AUTO
          1 001246  3C00                                 LDV,R3   0
          1 001247  0008                                 MMM

     1782    22178    2             KZ$LINCTX.LINID;
     1783    22179    2           FPT_WRSYSLOG.V.ERRCODE.ERR# = ERROR;

  22179   1 001248  ECC7 0040                            LDB,B6   @ERROR,AUTO
          1 00124A  E806                                 LDR,R6   ,B6
          1 00124B  6003                                 SOL,R6   3
          1 00124C  EAC7 0049                            SRM,R6,'FFF8'X    @ECOL2+1,AUTO
PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:265  
          1 00124E       FFF8

     1784    22180    3           DO CASE (ERROR);

  22180   1 00124F  B806                                 LDR,R3   ,B6
          1 001250  BA70 FF32                            ADD,R3   -206,IMO
          1 001252  3D03                                 CMV,R3   3
          1 001253  0281 0058                            BGE      s:22238,PREL
          1 001255  A830 0000 125B  01                   LDR,R2   s:22180+12,R3
          1 001258  83A0 0000 125E  01                   JMP      s:22197,R2
          1 00125B       001C                            DC       s:22214,PREL
          1 00125C       0000                            DC       s:22197,PREL
          1 00125D       0036                            DC       s:22231,PREL

     1785    22181
     1786    22182    3            CASE (%E$LGNREJ);

     1787    22183        /*E* ERROR:        KZT-E$LGNREJ-7
     1788    22184             MESSAGE:      3270 device logon rejected.
     1789    22185             DESCRIPTION:  The host rejected a 3270 device logon.
     1790    22186                           V0 = Channel number.
     1791    22187                           V1/V2 = Controller/Device numbers.
     1792    22188                           V3 = Reason:
     1793    22189                                1 = No LDCTs available
     1794    22190                                    (a NETCON parameter)
     1795    22191                                2 = No route available
     1796    22192                                3 = Protocol error
     1797    22193                                4 = Unmatching generation value
     1798    22194                                5 = User rejected connection
     1799    22195                                    (NODEADMN may be out of MEMory).
     1800    22196        */
     1801    22197    3              FPT_WRSYSLOG.V.VALUES(0)=KZ$3270DEV.CTR$->KZ$3270CTR.LIN$->

  22197   1 00125E  DCC7 0008                            LDB,B5   DEV$,AUTO
          1 001260  BCC5 0002                            LDB,B3   2,B5
          1 001262  9CC3 0004                            LDB,B1   4,B3
          1 001264  E841 0033                            LDR,R6   51,B1
PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:266  
          1 001266  EF47 0052                            STR,R6   FILLCHAR+2,AUTO

     1802    22198    3                KZ$LINCTX.CHAN;
     1803    22199    3              FPT_WRSYSLOG.V.VALUES(1)=KZ$3270DEV.CTR$->KZ$3270CTR.ADR;

  22199   1 001268  BCC5 0002                            LDB,B3   2,B5
          1 00126A  D2C3 000A                            LLH,R5   10,B3
          1 00126C  DF47 0053                            STR,R5   FILLCHAR+3,AUTO

     1804    22200    3              FPT_WRSYSLOG.V.VALUES(2)=KZ$3270DEV.ADR;

  22200   1 00126E  C2C5 0015                            LLH,R4   21,B5
          1 001270  CF47 0054                            STR,R4   @SIZ,AUTO

     1805    22201    3              FPT_WRSYSLOG.V.VALUES(3)=KV$USR_EVT.PRM;

  22201   1 001272  BCC7 0006                            LDB,B3   PARM$,AUTO
          1 001274  B843 0001                            LDR,R3   1,B3
          1 001276  BF47 0055                            STR,R3   @SIZ+1,AUTO
          1 001278  0F81 0033                            B        s:22238,PREL

     1806    22202
     1807    22203    3            CASE (%E$DATOVRFLW);

     1808    22204        /*E* ERROR:        KZT-E$DATOVRFLW-7
     1809    22205             MESSAGE:      More overprint data than buffer will allow.
     1810    22206             DESCRIPTION:  For printers, all data for a given line must be sent
     1811    22207                           in the same output block.  There is too much data in
     1812    22208                           this line to be sent in one output block.
     1813    22209                           V0 = Channel number.
     1814    22210                           V1/V2 = Controller/Device numbers.
     1815    22211                           V3 = Number of bytes needed to send in this block.
     1816    22212        */
     1817    22213
     1818    22214    3              FPT_WRSYSLOG.V.VALUES(0)=KZ$3270DEV.CTR$->KZ$3270CTR.LIN$->

  22214   1 00127A  DCC7 0008                            LDB,B5   DEV$,AUTO
PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:267  
          1 00127C  BCC5 0002                            LDB,B3   2,B5
          1 00127E  9CC3 0004                            LDB,B1   4,B3
          1 001280  E841 0033                            LDR,R6   51,B1
          1 001282  EF47 0052                            STR,R6   FILLCHAR+2,AUTO

     1819    22215    3                KZ$LINCTX.CHAN;
     1820    22216    3              FPT_WRSYSLOG.V.VALUES(1)=KZ$3270DEV.CTR$->KZ$3270CTR.ADR;

  22216   1 001284  BCC5 0002                            LDB,B3   2,B5
          1 001286  D2C3 000A                            LLH,R5   10,B3
          1 001288  DF47 0053                            STR,R5   FILLCHAR+3,AUTO

     1821    22217    3              FPT_WRSYSLOG.V.VALUES(2)=KZ$3270DEV.ADR;

  22217   1 00128A  C2C5 0015                            LLH,R4   21,B5
          1 00128C  CF47 0054                            STR,R4   @SIZ,AUTO

     1822    22218    3              FPT_WRSYSLOG.V.VALUES(3)=J;

  22218   1 00128E  B847 0024                            LDR,R3   J,AUTO
          1 001290  BF47 0055                            STR,R3   @SIZ+1,AUTO
          1 001292  0F81 0019                            B        s:22238,PREL

     1823    22219
     1824    22220    3            CASE (%E$NO_MEMORY);

     1825    22221        /*E* ERROR:        KZT-E$NO_MEMORY-6
     1826    22222             MESSAGE:      Insufficient BISYNC MEMory (a NETCON parameter).
     1827    22223             DESCRIPTION:  A KVB call ALTRETed to indicate that BISYNC is out of
     1828    22224                           MEMory.  Since a necessary I/O buffer or device context
     1829    22225                           could not be allocated, the 3270 LINE associated
     1830    22226                           with the request has been disconnected.
     1831    22227                           V0 = Channel number.
     1832    22228                           V1/V2 = Controller/Device numbers.
     1833    22229                           V3 = Size of buffer, in words, which could not be allocated.
     1834    22230        */
     1835    22231    3              FPT_WRSYSLOG.V.VALUES(0)=KZ$3270DEV.CTR$->KZ$3270CTR.LIN$->
PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:268  

  22231   1 001294  DCC7 0008                            LDB,B5   DEV$,AUTO
          1 001296  BCC5 0002                            LDB,B3   2,B5
          1 001298  9CC3 0004                            LDB,B1   4,B3
          1 00129A  E841 0033                            LDR,R6   51,B1
          1 00129C  EF47 0052                            STR,R6   FILLCHAR+2,AUTO

     1836    22232    3                KZ$LINCTX.CHAN;
     1837    22233    3              FPT_WRSYSLOG.V.VALUES(1)=KZ$3270DEV.CTR$->KZ$3270CTR.ADR;

  22233   1 00129E  BCC5 0002                            LDB,B3   2,B5
          1 0012A0  D2C3 000A                            LLH,R5   10,B3
          1 0012A2  DF47 0053                            STR,R5   FILLCHAR+3,AUTO

     1838    22234    3              FPT_WRSYSLOG.V.VALUES(2)=KZ$3270DEV.ADR;

  22234   1 0012A4  C2C5 0015                            LLH,R4   21,B5
          1 0012A6  CF47 0054                            STR,R4   @SIZ,AUTO

     1839    22235    3              FPT_WRSYSLOG.V.VALUES(3)=SZ;

  22235   1 0012A8  B847 0020                            LDR,R3   SZ,AUTO
          1 0012AA  BF47 0055                            STR,R3   @SIZ+1,AUTO

     1840    22236
     1841    22237    3            END;

     1842    22238    2           CALL KHA$ERRLOG(FPT_WRSYSLOG);

  22238   1 0012AC  DBC7 0042                            LAB,B5   FPT_WRSYSLOG,AUTO
          1 0012AE  DFC7 0062                            STB,B5   C_MRD+1,AUTO
          1 0012B0  BBC7 0062                            LAB,B3   C_MRD+1,AUTO
          1 0012B2  CBF0 0100                            LAB,B4   256,IMO
          1 0012B4  E380 0000 0000  xent                 LNJ,B6   KHA$ERRLOG
          1 0012B7       0001                            DC       s:22239,PREL

     1843    22239    2           RETURN;
PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:269  

  22239   1 0012B8  ECC7 003E                            LDB,B6   DISABLE_LEVEL+2,AUTO
          1 0012BA  C3C6 0001                            LNJ,B4   1,B6

     1844    22240    2   END ERRLOG;
     1845    22241        %EJECT;
PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:270  
     1846    22242        /* SCREECH */
     1847    22243
     1848    22244    1   SCREECH: PROC;

  22244   1 0012BC  EFC7 003E            SCREECH         STB,B6   DISABLE_LEVEL+2,AUTO

     1849    22245    2           CALL M$XXX;

  22245   1 0012BE  B870 0082                            LDR,R3   130,IMO
          1 0012C0  0001                                 MCL
          1 0012C1       0000                            DC       s:22245+3,PREL

     1850    22246    2   END SCREECH;

  22246   1 0012C2  ECC7 003E                            LDB,B6   DISABLE_LEVEL+2,AUTO
          1 0012C4  C3C6 0001                            LNJ,B4   1,B6

     1851    22247        %EJECT;
PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:271  
     1852    22248        /* GET_VAL - Get various interesting values from KV$VDI that describe
     1853    22249           the current buffer */
     1854    22250
     1855    22251    1   GET_VAL: PROC;

  22251   1 0012C6  EFC7 0042            GET_VAL         STB,B6   FPT_WRSYSLOG,AUTO

     1856    22252
     1857    22253    2           BFR$=%KV_VDI.OTPBFR_.ADR$;

  22253   1 0012C8  DC80 0000 0000  xsym                 LDB,B5   KV$PTR$
          1 0012CB  CC85                                 LDB,B4   ,B5
          1 0012CC  BCC4 000A                            LDB,B3   10,B4
          1 0012CE  BFC7 000A                            STB,B3   BFR$,AUTO

     1858    22254    2           BYTX=%KV_VDI.OTPBFR_.BYTX;

  22254   1 0012D0  CC85                                 LDB,B4   ,B5
          1 0012D1  E844 000C                            LDR,R6   12,B4
          1 0012D3  EF47 0028                            STR,R6   BYTX,AUTO

     1859    22255    2           BYTSIZ=%KV_VDI.OTPBFR_.BYTSIZ;

  22255   1 0012D5  D844 000D                            LDR,R5   13,B4
          1 0012D7  DF47 0029                            STR,R5   BYTSIZ,AUTO

     1860    22256    2           MAX_ROW = %KV_MRD.LNG;

  22256   1 0012D9  ACC5 0008                            LDB,B2   8,B5
          1 0012DB  C2C2 0015                            LLH,R4   21,B2
          1 0012DD  CF47 001E                            STR,R4   MAX_ROW,AUTO

     1861    22257    2           MAX_COL = %KV_MRD.WDT;

  22257   1 0012DF  B842 000B                            LDR,R3   11,B2
          1 0012E1  BF47 001F                            STR,R3   MAX_COL,AUTO

PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:272  
     1862    22258    2           RETURN;

  22258   1 0012E3  ECC7 0042                            LDB,B6   FPT_WRSYSLOG,AUTO
          1 0012E5  C3C6 0001                            LNJ,B4   1,B6

     1863    22259    2   END GET_VAL;
     1864    22260
     1865    22261
     1866    22262
     1867    22263        /* SET_VAL - Update the buffer info in KV$VDI */
     1868    22264
     1869    22265    1   SET_VAL: PROC;

  22265   1 0012E7  EFC7 0042            SET_VAL         STB,B6   FPT_WRSYSLOG,AUTO

     1870    22266
     1871    22267
     1872    22268        /* Make the receiver happy - he wants to see two SYNCs at least
     1873    22269           once a second. */
     1874    22270    3           IF BFR$~=ADDR(NIL) AND BYTX-KZ$3270DEV.SYNCX>=100 AND BYTSIZ>=2 THEN DO;

  22270   1 0012E9  8DC7 000A                            CMN      BFR$,AUTO
          1 0012EB  0901 0023                            BE       s:22277,PREL
          1 0012ED  DCC7 0008                            LDB,B5   DEV$,AUTO
          1 0012EF  E847 0028                            LDR,R6   BYTX,AUTO
          1 0012F1  E245 0010                            SUB,R6   16,B5
          1 0012F3  6D64                                 CMV,R6   100
          1 0012F4  0801 001A                            BAL      s:22277,PREL
          1 0012F6  E847 0029                            LDR,R6   BYTSIZ,AUTO
          1 0012F8  6D02                                 CMV,R6   2
          1 0012F9  0201 0015                            BL       s:22277,PREL

     1875    22271    3              BFR$->BYT(BYTX)=50;          /*SYN*/

  22271   1 0012FB  5C32                                 LDV,R5   50
          1 0012FC  CCC7 000A                            LDB,B4   BFR$,AUTO
          1 0012FE  B847 0028                            LDR,R3   BYTX,AUTO
PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:273  
          1 001300  D7B4                                 STH,R5   ,B4,R3

     1876    22272    3              BFR$->BYT(BYTX+1)=50;        /*SYN*/

  22272   1 001301  ECC7 000A                            LDB,B6   BFR$,AUTO
          1 001303  3E01                                 ADV,R3   1
          1 001304  D7B6                                 STH,R5   ,B6,R3

     1877    22273    3              BYTX=BYTX+2;

  22273   1 001305  C847 0028                            LDR,R4   BYTX,AUTO
          1 001307  4E02                                 ADV,R4   2
          1 001308  CF47 0028                            STR,R4   BYTX,AUTO

     1878    22274    3              BYTSIZ=BYTSIZ-2;

  22274   1 00130A  6EFE                                 ADV,R6   -2
          1 00130B  EF47 0029                            STR,R6   BYTSIZ,AUTO

     1879    22275    3              KZ$3270DEV.SYNCX=BYTX;

  22275   1 00130D  CF45 0010                            STR,R4   16,B5

     1880    22276    3              END;

     1881    22277    2           %KV_VDI.OTPBFR_.ADR$=BFR$;

  22277   1 00130F  EC80 0000 0000  xsym                 LDB,B6   KV$PTR$
          1 001312  DC86                                 LDB,B5   ,B6
          1 001313  CCC7 000A                            LDB,B4   BFR$,AUTO
          1 001315  CFC5 000A                            STB,B4   10,B5

     1882    22278    2           %KV_VDI.OTPBFR_.BYTX=BYTX;

  22278   1 001317  DC86                                 LDB,B5   ,B6
          1 001318  E847 0028                            LDR,R6   BYTX,AUTO
          1 00131A  EF45 000C                            STR,R6   12,B5
PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:274  

     1883    22279    2           %KV_VDI.OTPBFR_.BYTSIZ=BYTSIZ;

  22279   1 00131C  DC86                                 LDB,B5   ,B6
          1 00131D  D847 0029                            LDR,R5   BYTSIZ,AUTO
          1 00131F  DF45 000D                            STR,R5   13,B5

     1884    22280    2           RETURN;

  22280   1 001321  ECC7 0042                            LDB,B6   FPT_WRSYSLOG,AUTO
          1 001323  C3C6 0001                            LNJ,B4   1,B6
     1885    22281    2   END SET_VAL;
     1886    22282
     1887    22283    1   END KZT$3270;

PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:275  
--  Include file information  --

   KZ_3270M_C.:E05TOU  is referenced.
   KZ_PERR_C.:E05TOU  is referenced.
   KZ_3270_C.:E05TOU  is referenced.
   KZ_CLM_E.:E05TOU  is referenced.
   KV$BPC.:E05TOU  is referenced.
   KZ$BSCSTT.:E05TOU  is referenced.
   KZ$3270FLDS.:E05TOU  is referenced.
   KZ$3270STT.:E05TOU  is referenced.
   KZ$3270DEV.:E05TOU  is referenced.
   KZ$3270CTR.:E05TOU  is referenced.
   KZ$INPBFR.:E05TOU  is referenced.
   KZ$OTPBFR.:E05TOU  is referenced.
   KZ$LINCTX.:E05TOU  is referenced.
   KV_GLB_M.:E05TOU  is referenced.
   KV_PRMID_E.:E05TOU  is referenced.
   KV_GLBCNS_E.:E05TOU  is referenced.
   KV$GLBCTX.:E05TOU  is referenced.
   KV$USR.:E05TOU  is referenced.
   KV$GLB.:E05TOU  is referenced.
   KV$VDH.:E05TOU  is referenced.
   KL_SUPER_C.:E05TOU  is referenced.
   KL_MACRO_C.:E05TOU  is referenced.
   KL_AFCN_C.:E05TOU  is referenced.
   KHC_MAC_C.:E05TOU  is referenced.
   KH_CLKFNC_E.:E05TOU  is referenced.
   KH$CLK.:E05TOU  is referenced.
   KH$CHN.:E05TOU  is referenced.
   KH$STT.:E05TOU  is referenced.
   G_LCP6_E.:E05TOU  is referenced.
   GT_LCP6_M.:E05TOU  is referenced.
   KI_CP6.:E05TOU  is referenced.
   GF_LCP6_M.:E05TOU  is referenced.
   GM_LCP6_M.:E05TOU  is referenced.
   GU_LCP6_M.:E05TOU  is referenced.
   GJ_LCP6_M.:E05TOU  is referenced.
PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:276  
   GH_LCP6_M.:E05TOU  is referenced.
   LCP_6.:E05TOU  cannot be made into a system file and is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
      No diagnostics issued in procedure KZT$3270.
PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:277  

 **** Variables and constants ****

  ****  Section 000 RoData KZT$3270

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

    3F-0-0/w STRC(336)   r     1 FPT@WRSYSLOG              31-0-0/w STRC(176)   r     1 KH_CLK_RESET
    3E-0-0/w UBIN(16)    r     1 KZT_THRTL_BLK
     0-0-0/c UBIN(8)     r     1 KZ_3270XL(0:63)
     0-0-0/b BIT (8)     r     1 KZ_3270XLB(0:63)
    20-0-0/w UBIN(16)    r     1 KZ_3270_BFRSIZ(0:8)
    29-0-0/w STRC(128)   r     1 KZ_OTPBFR

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

    5E-0-0/w PTR         r     1 @C                        42-0-0/w PTR         r     1 @ECOL
    46-0-0/w PTR         r     1 @ECOL1                    48-0-0/w PTR         r     1 @ECOL2
    4A-0-0/w PTR         r     1 @ECOL3                    40-0-0/w PTR         r     1 @EROW
    44-0-0/w PTR         r     1 @EROW1                    40-0-0/w PTR         r     1 @ERROR
     4-0-0/w PTR         r     1 @PARM                     5A-0-0/w PTR         r     1 @QUEUE_ON_TAIL
    5C-0-0/w PTR         r     1 @R                        54-0-0/w PTR         r     1 @SIZ
    40-0-0/w PTR         r     1 @WCC                      2A-0-0/b STRC(8)     r     1 ATTR_CHAR
    2A-0-0/c UBIN(8)     r     1 ATTR_CHR                   A-0-0/w PTR         r     1 BFR$
    29-0-0/w UBIN(16)    r     1 BYTSIZ                    28-0-0/w UBIN(16)    r     1 BYTX
    *0-0-0/w SBIN(16)    r     1 C                         10-0-0/w PTR         r     1 C$
    16-0-0/w SBIN(16)    r     1 COL                       18-0-0/w SBIN(16)    r     1 COL1
    19-0-0/w SBIN(16)    r     1 COL2                      1B-0-0/w SBIN(16)    r     1 CUR_COL
    1A-0-0/w SBIN(16)    r     1 CUR_ROW                   61-0-0/w SBIN(16)    r     1 C_MRD
     8-0-0/w PTR         r     1 DEV$                      3C-0-0/w UBIN(16)    r     1 DISABLE_LEVEL
    *0-0-0/w UBIN(16)    r     1 ECOL                      *0-0-0/w UBIN(16)    r     1 ECOL1
    *0-0-0/w UBIN(16)    r     1 ECOL2                     *0-0-0/w UBIN(16)    r     1 ECOL3
    57-0-0/w UBIN(16)    r     1 ENTR_FLG                  *0-0-0/w UBIN(16)    r     1 EROW
    *0-0-0/w UBIN(16)    r     1 EROW1                     *0-0-0/w UBIN(16)    r     1 ERROR
PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:278  
    50-0-0/b UBIN(8)     r     1 FILLCHAR                  42-0-0/w STRC(336)   r     1 FPT_WRSYSLOG
    23-0-0/w SBIN(16)    r     1 I                         4C-0-0/w UBIN(16)    r     1 I
    24-0-0/w SBIN(16)    r     1 J                         56-0-0/w UBIN(16)    r     1 J
    25-0-0/w SBIN(16)    r     1 K                         30-0-0/w STRC(176)   r     1 KH$CLK
    2B-0-0/w STRC(8)     r     1 KV$GRPRND                 2C-0-0/w STRC(64)    r     1 KV$VDH_DCLLCLPST
    26-0-0/w UBIN(16)    r     1 LSTBYT                    1F-0-0/w SBIN(16)    r     1 MAX_COL
    1E-0-0/w SBIN(16)    r     1 MAX_ROW                   22-0-0/w SBIN(16)    r     1 NL
    *0-0-0/w UBIN(16)    r     1 PARM                       6-0-0/w PTR         r     1 PARM$
    13-0-0/w SBIN(16)    r     1 PHSPST_LIN                *0-0-0/w BIT         r     1 QUEUE_ON_TAIL
    *0-0-0/w SBIN(16)    r     1 R                         15-0-0/w SBIN(16)    r     1 ROW
    17-0-0/w SBIN(16)    r     1 ROW1                      60-0-0/w SBIN(16)    r     1 R_MRD
    12-0-0/w UBIN(16)    r     1 S                         1D-0-0/w SBIN(16)    r     1 SAVE_COL
    1C-0-0/w SBIN(16)    r     1 SAVE_ROW                  27-0-0/w BIT         r     1 SBA_DONE
    *0-0-0/w UBIN(16)    r     1 SIZ                       20-0-0/w SBIN(16)    r     1 SZ
    21-0-0/w SBIN(16)    r     1 SZX                        E-0-0/w PTR         r     1 T$
     C-0-0/w PTR         r     1 TBFR$                     14-0-0/w UBIN(16)    r     1 TOPPAGCNT
    *0-0-0/w UBIN(16)    r     1 WCC

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w UBIN(16)    r     1 KH_INHLVL                  0-0-0/w PTR         r     1 KV$PTR$
     0-0-0/w STRC(64)    r     1 KV_VDH_DCLLCLPST           0-0-0/w STRC(32)    r     1 KV_VDH_EVT_CMPOTP
     0-0-0/w STRC(32)    r     1 KV_VDH_EVT_RQSOTP          0-0-0/w STRC(272)   r     1 KZ_3270M_HDR

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c UBIN(8)     r     1 BYT(0:1023)                0-0-0/c CHAR        r     1 CHR1
     0-0-0/w STRC(512)   r     1 KH$CHN                     0-0-0/c STRC(32)    r     1 KL_3270
     0-0-0/w STRC(512)   r     1 KV$MRD                     0-0-0/w STRC(48)    r     1 KV$OTPMRK
     0-0-0/w STRC(480)   r     1 KV$PTR                     0-0-0/w STRC(128)   r     1 KV$USR_DAT
     0-0-0/w STRC(112)   r     1 KV$USR_ERS                 0-0-0/w STRC(32)    r     1 KV$USR_EVT
PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:279  
     0-0-0/w STRC(64)    r     1 KV$USR_EXTOTPTRN           0-0-0/w STRC(112)   r     1 KV$USR_GETPRM
     0-0-0/w STRC(48)    r     1 KV$USR_INPPRC              0-0-0/w STRC(64)    r     1 KV$USR_OTPMRK
     0-0-0/w STRC(64)    r     1 KV$USR_PST                 0-0-0/w STRC(64)    r     1 KV$USR_SETATR
     0-0-0/w STRC(128)   r     1 KV$USR_SETPRM              0-0-0/w STRC(512)   r     1 KV$VDI
     0-0-0/w STRC(176)   r     1 KZ$3270CTR                 0-0-0/w STRC(448)   r     1 KZ$3270DEV
     0-0-0/w STRC(2656)  r     1 KZ$3270STT                 0-0-0/w STRC(2192)  r     1 KZ$LINCTX
     0-0-0/w STRC(128)   r     1 KZ$OTPBFR                  0-0-0/c ACHR        r     1 MOVJBYTS
     0-0-0/c STRC(8)     r     1 WCC(0:0)


   Procedure KZT$3270 requires 4901 words for executable code.
   Procedure KZT$3270 requires 106 words of local(AUTO) storage.

    No errors detected in file KZT$3270.:E05TSI    .
PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:280  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:281  
          MINI XREF LISTING

ABRTPRM
     20308**LABEL   20293--GOTO    20304--GOTO
ALTRTN
     20987**LABEL   20308--GOTO    20792--GOTO    20960--GOTO
ALT_SKIP_SET
     20992**LABEL   20989--GOTO
ATTR
     21666**PROC    20730--CALL    21848--CALL    21898--CALL
ATTR_CHAR
     17097**DCL     17104--REDEF   20703<<ASSIGN  21844<<ASSIGN  21894<<ASSIGN
ATTR_CHAR.INTENSITY
     17101**DCL     21002<<ASSIGN  21005<<ASSIGN  21008<<ASSIGN
ATTR_CHAR.MDT
     17103**DCL     20716<<ASSIGN
ATTR_CHAR.NUMERIC
     17100**DCL     20713<<ASSIGN
ATTR_CHAR.PROTECT
     17099**DCL     20707<<ASSIGN  21847<<ASSIGN  21897<<ASSIGN
ATTR_CHR
     17104**DCL     21675>>ASSIGN
BFR$
     17069**DCL     18026--IMP-PTR 18052--IMP-PTR 20354>>IF      20357>>IF      20358>>ASSIGN  20358>>ASSIGN
     20368>>ASSIGN  20368>>ASSIGN  20369>>ASSIGN  20369>>ASSIGN  20369>>ASSIGN  20398>>ASSIGN  20440>>IF
     20446>>ASSIGN  20460>>ASSIGN  20461<<ASSIGN  20477>>IF      20488>>CALLBLT 20492>>ASSIGN  20568>>IF
     20606>>ASSIGN  20620>>ASSIGN  20631>>ASSIGN  20639>>ASSIGN  20654>>ASSIGN  20656>>ASSIGN  20658>>ASSIGN
     20669>>ASSIGN  20725>>ASSIGN  20827>>IF      20830>>ASSIGN  20832>>ASSIGN  20837>>ASSIGN  20932>>IF
     20934>>IF      21026<<ASSIGN  21075>>IF      21084>>IF      21087>>ASSIGN  21088>>ASSIGN  21100<<ASSIGN
     21161>>CALLBLT 21166>>ASSIGN  21167>>ASSIGN  21172>>IF      21173>>ASSIGN  21182>>IF      21184>>ASSIGN
     21187>>ASSIGN  21187>>ASSIGN  21190>>ASSIGN  21197>>ASSIGN  21198>>ASSIGN  21233>>ASSIGN  21234>>ASSIGN
     21236<<ASSIGN  21244>>ASSIGN  21246>>ASSIGN  21247>>ASSIGN  21252>>ASSIGN  21254>>ASSIGN  21255>>ASSIGN
     21285<<ASSIGN  21305<<ASSIGN  21372<<ASSIGN  21382>>ASSIGN  21384>>ASSIGN  21385>>ASSIGN  21386>>ASSIGN
     21387>>ASSIGN  21391>>ASSIGN  21392>>ASSIGN  21396>>ASSIGN  21401>>ASSIGN  21402>>ASSIGN  21404>>ASSIGN
PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:282  
     21407>>ASSIGN  21474>>IF      21477>>IF      21479>>ASSIGN  21502>>ASSIGN  21502>>ASSIGN  21503>>ASSIGN
     21503>>ASSIGN  21504>>ASSIGN  21505>>IF      21506>>ASSIGN  21507>>ASSIGN  21507>>ASSIGN  21507>>ASSIGN
     21515>>CALL    21515<>CALL    21523<<ASSIGN  21524>>ASSIGN  21525>>ASSIGN  21525>>ASSIGN  21532>>IF
     21588>>ASSIGN  21595>>ASSIGN  21596>>ASSIGN  21623>>ASSIGN  21630>>ASSIGN  21631>>ASSIGN  21674>>ASSIGN
     21675>>ASSIGN  21724>>ASSIGN  21768>>ASSIGN  21769>>ASSIGN  21877>>IF      21879>>IF      21886>>ASSIGN
     21888>>ASSIGN  21902>>ASSIGN  21915>>IF      21946>>ASSIGN  21954<<ASSIGN  21956>>ASSIGN  21957>>ASSIGN
     21958>>ASSIGN  21959>>ASSIGN  21960>>ASSIGN  21962>>ASSIGN  21964>>ASSIGN  21965>>ASSIGN  21975<<ASSIGN
     22253<<ASSIGN  22270>>IF      22271>>ASSIGN  22272>>ASSIGN  22277>>ASSIGN
BFRSIZ_SET
     20318**LABEL   20321--GOTO
BYT
     19262**DCL     20411>>ASSIGN  20606<<ASSIGN  20620<<ASSIGN  20631<<ASSIGN  20639<<ASSIGN  20654<<ASSIGN
     20656<<ASSIGN  20658<<ASSIGN  20669<<ASSIGN  20725<<ASSIGN  21166>>ASSIGN  21167<<ASSIGN  21173<<ASSIGN
     21187<<ASSIGN  21187>>ASSIGN  21391<<ASSIGN  21392<<ASSIGN  21396<<ASSIGN  21401<<ASSIGN  21402<<ASSIGN
     21404<<ASSIGN  21588<<ASSIGN  21595<<ASSIGN  21596<<ASSIGN  21623<<ASSIGN  21630<<ASSIGN  21631<<ASSIGN
     21674<<ASSIGN  21675<<ASSIGN  21724<<ASSIGN  21768<<ASSIGN  21769<<ASSIGN  21886<<ASSIGN  21888<<ASSIGN
     21956<<ASSIGN  21957<<ASSIGN  22271<<ASSIGN  22272<<ASSIGN
BYTSIZ
     17096**DCL     20365>>IF      20372<<ASSIGN  20372>>ASSIGN  20446<<ASSIGN  20455>>IF      20461<<ASSIGN
     20476>>DOUNTIL 20491<<ASSIGN  20491>>ASSIGN  20571>>IF      20608<<ASSIGN  20608>>ASSIGN  20622<<ASSIGN
     20622>>ASSIGN  20633<<ASSIGN  20633>>ASSIGN  20641<<ASSIGN  20641>>ASSIGN  20651<<ASSIGN  20651>>ASSIGN
     20663<<ASSIGN  20663>>ASSIGN  20671<<ASSIGN  20671>>ASSIGN  20727<<ASSIGN  20727>>ASSIGN  20997<<ASSIGN
     21100<<ASSIGN  21169<<ASSIGN  21169>>ASSIGN  21175<<ASSIGN  21175>>ASSIGN  21294<<ASSIGN  21294>>ASSIGN
     21307<<ASSIGN  21411<<ASSIGN  21466>>IF      21524<<ASSIGN  21524>>ASSIGN  21598<<ASSIGN  21598>>ASSIGN
     21633<<ASSIGN  21633>>ASSIGN  21678<<ASSIGN  21678>>ASSIGN  21726<<ASSIGN  21726>>ASSIGN  21771<<ASSIGN
     21771>>ASSIGN  22255<<ASSIGN  22270>>IF      22274<<ASSIGN  22274>>ASSIGN  22279>>ASSIGN
BYTX
     17095**DCL     20443<<ASSIGN  20445<<ASSIGN  20446>>ASSIGN  20461<<ASSIGN  20488>>CALLBLT 20490<<ASSIGN
     20490>>ASSIGN  20606>>ASSIGN  20607<<ASSIGN  20607>>ASSIGN  20620>>ASSIGN  20621<<ASSIGN  20621>>ASSIGN
     20631>>ASSIGN  20632<<ASSIGN  20632>>ASSIGN  20639>>ASSIGN  20640<<ASSIGN  20640>>ASSIGN  20644>>ASSIGN
     20650<<ASSIGN  20650>>ASSIGN  20654>>ASSIGN  20656>>ASSIGN  20658>>ASSIGN  20660>>ASSIGN  20662<<ASSIGN
     20662>>ASSIGN  20669>>ASSIGN  20670<<ASSIGN  20670>>ASSIGN  20725>>ASSIGN  20726<<ASSIGN  20726>>ASSIGN
     21082>>IF      21100<<ASSIGN  21142>>ASSIGN  21163<<ASSIGN  21166>>ASSIGN  21167>>ASSIGN  21168<<ASSIGN
     21168>>ASSIGN  21173>>ASSIGN  21174<<ASSIGN  21174>>ASSIGN  21190>>ASSIGN  21293<<ASSIGN  21293>>ASSIGN
     21306<<ASSIGN  21383<<ASSIGN  21391>>ASSIGN  21392>>ASSIGN  21393<<ASSIGN  21393>>ASSIGN  21396>>ASSIGN
     21401>>ASSIGN  21402>>ASSIGN  21404>>ASSIGN  21407>>ASSIGN  21411>>ASSIGN  21415<<ASSIGN  21415>>ASSIGN
PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:283  
     21588>>ASSIGN  21595>>ASSIGN  21596>>ASSIGN  21597<<ASSIGN  21597>>ASSIGN  21623>>ASSIGN  21630>>ASSIGN
     21631>>ASSIGN  21632<<ASSIGN  21632>>ASSIGN  21674>>ASSIGN  21675>>ASSIGN  21677<<ASSIGN  21677>>ASSIGN
     21724>>ASSIGN  21725<<ASSIGN  21725>>ASSIGN  21768>>ASSIGN  21769>>ASSIGN  21770<<ASSIGN  21770>>ASSIGN
     21886>>ASSIGN  21888>>ASSIGN  21956>>ASSIGN  21957>>ASSIGN  21958>>ASSIGN  22254<<ASSIGN  22270>>IF
     22271>>ASSIGN  22272>>ASSIGN  22273<<ASSIGN  22273>>ASSIGN  22275>>ASSIGN  22278>>ASSIGN
C IN PROCEDURE STORE_MRD
     21690**DCL     21688--PROC    21694>>ASSIGN
C$
     17072**DCL     20312<<ASSIGN  20315>>ASSIGN  20317>>ASSIGN  20326>>DOCASE
CHECK_BUF IN PROCEDURE CHK_BFR_SIZ
     21472**LABEL   21468--GOTO
CHECK_SIZ IN PROCEDURE CHK_BFR_SIZ
     21466**LABEL   21457--GOTO
CHKBFR_SETADDR IN PROCEDURE CHK_BFR_SIZ
     21459**ENTRY   21781--CALL
CHK_BFR_SIZ
     21449**PROC    20722--CALL    21581--CALL    21669--CALL    21722--CALL    21756--CALL
CHR1
     19263**DCL     20488<<CALLBLT 20488>>CALLBLT 21161<<CALLBLT 21161>>CALLBLT
CLEAR
     21875**PROC    20240--CALL    20332--CALL    21017--CALL    21027--CALL
CMP_OTP
     21913**PROC    20936--CALL    21041--CALL
COL
     17077**DCL     20256<<ASSIGN  20515<<ASSIGN  20516>>IF      20518<<ASSIGN  20520>>IF      20529<<ASSIGN
     20539<<ASSIGN  20554>>ASSIGN  20557>>IF      20560>>ASSIGN  20564>>ASSIGN  20646>>IF      20719<<ASSIGN
     20724>>CALL    21540<<ASSIGN  21584>>IF      21589>>IF      21590<<ASSIGN  21592>>ASSIGN  21600<>CALL
     21619>>IF      21624>>IF      21625<<ASSIGN  21627>>ASSIGN  21635<>CALL    21672>>CALL    21761<<ASSIGN
     21780>>ASSIGN  21839<<ASSIGN  21843<<ASSIGN  21856<<ASSIGN  21862<<ASSIGN  21893<<ASSIGN
COL1
     17079**DCL     21761>>ASSIGN  21780<<ASSIGN  21839<<ASSIGN  21840>>IF      21841<<ASSIGN  21841>>ASSIGN
     21856<<ASSIGN  21860<<ASSIGN
COL2
     17080**DCL     20554<<ASSIGN  20560<<ASSIGN  20564<<ASSIGN  20668>>DOINDEX
CUR_COL
     17082**DCL     20538<<ASSIGN  20557>>IF      20559>>ASSIGN  20560>>ASSIGN  20595>>IF      20604>>IF
PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:284  
     20646>>IF      20648>>IF
CUR_ROW
     17081**DCL     20536<<ASSIGN  20549>>ASSIGN  20623>>IF      20630>>ASSIGN  20634<<ASSIGN
C_MRD IN PROCEDURE STORE_MRD
     21692**DCL     21694<<ASSIGN  21695>>IF      21697<<ASSIGN  21702>>ASSIGN
DEV$
     17068**DCL     17847--IMP-PTR 20206<<ASSIGN  20207>>ASSIGN  20224>>IF      20270>>ASSIGN  20286>>IF
     20287>>ASSIGN  20289>>IF      20296>>IF      20297>>IF      20300>>ASSIGN  20302>>IF      20315>>ASSIGN
     20320>>ASSIGN  20328>>ASSIGN  20330>>IF      20331>>ASSIGN  20377>>ASSIGN  20394>>IF      20438>>ASSIGN
     20442>>IF      20457>>IF      20466>>CALL    20477>>IF      20506>>IF      20572>>IF      20597>>ASSIGN
     20601>>IF      20603>>ASSIGN  20616>>IF      20644>>ASSIGN  20653>>IF      20655>>IF      20660>>ASSIGN
     20690>>IF      20740>>ASSIGN  20742>>ASSIGN  20769>>IF      20775>>DOWHILE 20776>>ASSIGN  20777>>ASSIGN
     20778>>IF      20779>>ASSIGN  20781>>CALL    20784>>ASSIGN  20800>>IF      20806>>ASSIGN  20807>>ASSIGN
     20808>>CALL    20826>>IF      20833>>IF      20846>>IF      20856>>ASSIGN  20877>>CALL    20901>>IF
     20903>>ASSIGN  20904>>CALL    20907>>IF      20908>>CALL    20910>>IF      20911>>CALL    20913>>IF
     20915>>ASSIGN  20916>>CALL    20932>>IF      20935>>IF      20935>>IF      20939>>ASSIGN  20950>>ASSIGN
     20951>>IF      20951>>IF      20964>>ASSIGN  20996>>CALL    21015<<ASSIGN  21025<<ASSIGN  21028>>ASSIGN
     21039<<ASSIGN  21049<<ASSIGN  21078>>ASSIGN  21080>>IF      21084>>IF      21084>>IF      21093>>CALL
     21106>>IF      21107>>ASSIGN  21140>>IF      21142>>ASSIGN  21161>>CALLBLT 21163>>ASSIGN  21178>>IF
     21183>>IF      21185>>ASSIGN  21198>>ASSIGN  21198>>ASSIGN  21199>>IF      21199>>IF      21201>>ASSIGN
     21232>>IF      21237>>CALL    21243>>IF      21244>>ASSIGN  21246>>ASSIGN  21247>>ASSIGN  21251>>IF
     21252>>ASSIGN  21254>>ASSIGN  21255>>ASSIGN  21257>>ASSIGN  21283>>IF      21291>>IF      21340>>IF
     21341>>ASSIGN  21387>>ASSIGN  21390>>IF      21391>>ASSIGN  21392>>ASSIGN  21400>>IF      21405>>IF
     21408>>ASSIGN  21477>>IF      21535>>IF      21538>>IF      21584>>IF      21599>>ASSIGN  21619>>IF
     21634>>ASSIGN  21882>>IF      21885>>IF      21891>>IF      21930>>ASSIGN  21943>>IF      21959>>ASSIGN
     21959>>ASSIGN  21961>>IF      21962>>ASSIGN  21964>>ASSIGN  21965>>ASSIGN  21966>>ASSIGN  21966>>ASSIGN
     22177>>ASSIGN  22197>>ASSIGN  22199>>ASSIGN  22200>>ASSIGN  22214>>ASSIGN  22216>>ASSIGN  22217>>ASSIGN
     22231>>ASSIGN  22233>>ASSIGN  22234>>ASSIGN  22270>>IF      22275>>ASSIGN
DISABLE_LEVEL
     17360**DCL     20463<<ASSIGN  20464<>CALL    20468>>IF      20772<<ASSIGN  20773<>CALL    20786>>IF
     20803<<ASSIGN  20804<>CALL    20810>>IF      20868<<ASSIGN  20869<>CALL    20879>>IF      20898<<ASSIGN
     20899<>CALL    20919>>IF      20947<<ASSIGN  20948<>CALL    20955>>IF      20966>>IF      21090<<ASSIGN
     21091<>CALL    21095>>IF      21111<<ASSIGN  21112<>CALL    21123>>IF      21131>>IF      21147<<ASSIGN
     21148<>CALL    21152>>IF      21194<<ASSIGN  21195<>CALL    21203>>IF      21227<<ASSIGN  21228<>CALL
     21272>>IF      21345<<ASSIGN  21346<>CALL    21357>>IF      21365>>IF      21481<<ASSIGN  21482<>CALL
     21488>>IF      21496>>IF      21512<<ASSIGN  21513<>CALL    21517>>IF      21949<<ASSIGN  21950<>CALL
PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:285  
     21969>>IF
DONE
     21072**PROC    20379--CALL    20439--CALL    20493--CALL    20587--CALL    20768--CALL    20839--CALL
     21029--CALL    21531--CALL    21878--CALL    21929--CALL
DONE_END IN PROCEDURE DONE
     21272**LABEL   21238--GOTO
ECOL IN PROCEDURE ERSWNDW
     21829**DCL     21826--PROC    21837>>IF      21862>>ASSIGN
ECOL1 IN PROCEDURE ERSWNDW
     21831**DCL     21826--PROC    21837>>IF      21856>>ASSIGN
ECOL2 IN PROCEDURE ERSWNDW
     21832**DCL     21826--PROC    21839>>ASSIGN  21856>>ASSIGN
ECOL3 IN PROCEDURE ERSWNDW
     21833**DCL     21826--PROC    21839>>ASSIGN  21860>>ASSIGN
ENTR_FLG IN PROCEDURE CHK_BFR_SIZ
     21453**DCL     21456<<ASSIGN  21464<<ASSIGN  21472<<ASSIGN  21538>>IF
EROW IN PROCEDURE ERSWNDW
     21828**DCL     21826--PROC    21836>>ASSIGN
EROW1 IN PROCEDURE ERSWNDW
     21830**DCL     21826--PROC    21839>>ASSIGN  21857>>DOWHILE 21859>>IF
ERRLOG
     21983**PROC    20575--CALL    20855--CALL    20995--CALL
ERROR IN PROCEDURE ERRLOG
     21984**DCL     21983--PROC    22179>>ASSIGN  22180>>DOCASE
ERS
     21751**PROC    21842--CALL    21852--CALL    21861--CALL
ERS2 IN PROCEDURE ERS
     21761**LABEL   21783--GOTO
ERSC IN PROCEDURE ERS
     21779**LABEL   21789--GOTO
ERSCUR_BLNKS IN PROCEDURE ERS
     21786**ENTRY   20525--CALL
ERSWNDW
     21826**PROC    20246--CALL
EXP_BFR IN PROCEDURE CHK_BFR_SIZ
     21470**ENTRY   20225--CALL    20355--CALL    20366--CALL    20478--CALL
PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:286  
FILLCHAR IN PROCEDURE ERS
     21753**DCL     21759<<ASSIGN  21769>>ASSIGN  21777<<ASSIGN  21788<<ASSIGN
FPT@WRSYSLOG IN PROCEDURE ERRLOG
     22093**DCL     22176>>ASSIGN
FPT@WRSYSLOG.V IN PROCEDURE ERRLOG
     22097**DCL     22095--DCLINIT
FPT@WRSYSLOG.V.TERMID.TERM IN PROCEDURE ERRLOG
     22162**DCL     22171--REDEF
FPT_WRSYSLOG IN PROCEDURE ERRLOG
     21998**DCL     22176<<ASSIGN  22238<>CALL
FPT_WRSYSLOG.V.ERRCODE.ERR# IN PROCEDURE ERRLOG
     22046**DCL     22179<<ASSIGN
FPT_WRSYSLOG.V.TERMID IN PROCEDURE ERRLOG
     22065**DCL     22177<<ASSIGN
FPT_WRSYSLOG.V.TERMID.TERM IN PROCEDURE ERRLOG
     22067**DCL     22076--REDEF
FPT_WRSYSLOG.V.VALUES IN PROCEDURE ERRLOG
     22078**DCL     22197<<ASSIGN  22199<<ASSIGN  22200<<ASSIGN  22201<<ASSIGN  22214<<ASSIGN  22216<<ASSIGN
     22217<<ASSIGN  22218<<ASSIGN  22231<<ASSIGN  22233<<ASSIGN  22234<<ASSIGN  22235<<ASSIGN
GET_VAL
     22251**PROC    20211--CALL    20701--CALL    21016--CALL    21040--CALL    21050--CALL    21928--CALL
     21974--CALL
GOTBFR IN PROCEDURE DONE
     21131**LABEL   21119--GOTO
GOTBFR IN PROCEDURE INITBFR
     21365**LABEL   21353--GOTO
I
     17090**DCL     20317<<ASSIGN  20319>>IF      20742<<ASSIGN  20744>>ASSIGN  20745>>ASSIGN  20873<<ASSIGN
     20875<>CALL    21592<<ASSIGN  21593>>ASSIGN  21594<<ASSIGN  21594>>ASSIGN  21596>>ASSIGN  21627<<ASSIGN
     21628>>ASSIGN  21629<<ASSIGN  21629>>ASSIGN  21631>>ASSIGN
I IN PROCEDURE ERSWNDW
     21834**DCL     21856<<ASSIGN  21857>>DOWHILE 21858>>ASSIGN  21858>>ASSIGN  21859>>IF      21863<<ASSIGN
     21863>>ASSIGN
INITBFR
     21333**PROC    20441--CALL    20569--CALL    20828--CALL    20933--CALL    21533--CALL    21537--CALL
     21880--CALL    21884--CALL
PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:287  
INITBFRHDR IN PROCEDURE INITBFR
     21373**ENTRY   21286--CALL    21955--CALL
J
     17091**DCL     20318<<DOINDEX 20319>>IF      20320>>ASSIGN  20553<<ASSIGN  20559<<ASSIGN  20563<<ASSIGN
     20571>>IF      20629<<DOINDEX 20638<<DOINDEX 20668<<DOINDEX 21139<<ASSIGN  21142<<ASSIGN  21143>>IF
     21161>>CALLBLT 21161>>CALLBLT 21293>>ASSIGN  21294>>ASSIGN  21593<<ASSIGN  21595>>ASSIGN  21628<<ASSIGN
     21630>>ASSIGN  22218>>ASSIGN
J IN PROCEDURE CHK_BFR_SIZ
     21452**DCL     21454--IMP-SIZ 21479<<ASSIGN  21484<>CALL    21501>>ASSIGN  21504>>ASSIGN  21504>>ASSIGN
     21506<<ASSIGN  21507>>ASSIGN  21507>>ASSIGN  21507>>ASSIGN  21507>>ASSIGN
K
     17092**DCL     20454<<ASSIGN  20455>>IF      20476>>DOUNTIL 20482<<ASSIGN  20488>>CALLBLT 20488>>CALLBLT
     20490>>ASSIGN  20491>>ASSIGN  21138<<ASSIGN  21159<<ASSIGN  21161>>CALLBLT
KH$CHN.LINSPD
     18289**DCL     20270>>ASSIGN
KH$CHN.TERMID.TERM
     18331**DCL     18340--REDEF
KH$CLK
     17215**DCL     21261<<ASSIGN  21264<>CALL
KH$CLK.CTBCTX$
     17221**DCL     21263<<ASSIGN
KH$CLK.PRD
     17336**DCL     21262<<ASSIGN
KH$CLK.UID
     17231**DCL     17232--REDEF   17233--REDEF
KHA$ERRLOG
     19303**DCL-ENT 22238--CALL
KHC$CLOCK
     19302**DCL-ENT 21264--CALL
KHI$DISABLE
     17354**DCL-ENT 20464--CALL    20773--CALL    20804--CALL    20869--CALL    20899--CALL    20948--CALL
     21091--CALL    21112--CALL    21148--CALL    21195--CALL    21228--CALL    21346--CALL    21482--CALL
     21513--CALL    21950--CALL
KHI$ENABLE
     17353**DCL-ENT 20470--CALL    20788--CALL    20812--CALL    20881--CALL    20921--CALL    20957--CALL
     20968--CALL    21097--CALL    21125--CALL    21133--CALL    21154--CALL    21205--CALL    21274--CALL
PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:288  
     21359--CALL    21367--CALL    21490--CALL    21498--CALL    21519--CALL    21971--CALL
KH_CLK_RESET
     19401**DCL     21261>>ASSIGN
KH_CLK_RESET.UID
     19417**DCL     19418--REDEF   19419--REDEF
KH_INHLVL
     19543**DCL     20463>>ASSIGN  20468>>IF      20772>>ASSIGN  20786>>IF      20803>>ASSIGN  20810>>IF
     20868>>ASSIGN  20879>>IF      20898>>ASSIGN  20919>>IF      20947>>ASSIGN  20955>>IF      20966>>IF
     21090>>ASSIGN  21095>>IF      21111>>ASSIGN  21123>>IF      21131>>IF      21147>>ASSIGN  21152>>IF
     21194>>ASSIGN  21203>>IF      21227>>ASSIGN  21272>>IF      21345>>ASSIGN  21357>>IF      21365>>IF
     21481>>ASSIGN  21488>>IF      21496>>IF      21512>>ASSIGN  21517>>IF      21949>>ASSIGN  21969>>IF
KL_3270.DVCBFRSIZ
     19288**DCL     20317>>ASSIGN
KL_3270.EWALT#
     19285**DCL     20326>>DOCASE
KL_3270.FRMFED
     19284**DCL     20315>>ASSIGN
KV$ERD.EXTSRD_CHR
     18469**DCL     18469--REDEF   18470--REDEF
KV$GRPRND
     17124**DCL     20709<<ASSIGN  21845<<ASSIGN  21895<<ASSIGN
KV$GRPRND.DCRINT
     17128**DCL     21007>>IF
KV$GRPRND.HDN
     17128**DCL     21001>>IF
KV$GRPRND.INCINT
     17128**DCL     21004>>IF
KV$MRD.ABSGRPRND
     18384**DCL     21845>>ASSIGN  21895>>ASSIGN
KV$MRD.DVCCLM
     18388**DCL     20245>>ASSIGN  20520>>IF      20538>>ASSIGN  20676<<ASSIGN  21300<<ASSIGN  21540>>ASSIGN
     21584>>IF      21619>>IF      21702<<ASSIGN
KV$MRD.DVCLIN
     18388**DCL     20244>>ASSIGN  20520>>IF      20520>>IF      20536>>ASSIGN  20675<<ASSIGN  21299<<ASSIGN
     21299>>ASSIGN  21539>>ASSIGN  21584>>IF      21619>>IF      21701<<ASSIGN
KV$MRD.LNG
PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:289  
     18370**DCL     22256>>ASSIGN
KV$MRD.WDT
     18367**DCL     22257>>ASSIGN
KV$OTPMRK
     19253**DCL     20358--ASSIGN  20360<<ASSIGN  20365--IF      20369--ASSIGN  20371<<ASSIGN  20372--ASSIGN
     21506--ASSIGN
KV$OTPMRK.ID
     19258**DCL     19258--REDEF   19259--REDEF
KV$OTPMRK.MSTRTR
     19257**DCL     20359>>IF
KV$PTR.INPCNDPND
     18133**DCL     18142--REDEF   18146--REDEF
KV$PTR.LINLST$
     18129**DCL     18130--REDEF
KV$PTR.MRD$
     18128**DCL     20244>>ASSIGN  20245>>ASSIGN  20520>>IF      20520>>IF      20520>>IF      20536>>ASSIGN
     20538>>ASSIGN  20675>>ASSIGN  20676>>ASSIGN  21299>>ASSIGN  21299>>ASSIGN  21300>>ASSIGN  21539>>ASSIGN
     21540>>ASSIGN  21584>>IF      21584>>IF      21619>>IF      21619>>IF      21701>>ASSIGN  21702>>ASSIGN
     21845>>ASSIGN  21895>>ASSIGN  22256>>ASSIGN  22257>>ASSIGN
KV$PTR.VDI$
     18127**DCL     20206>>ASSIGN  20494>>ASSIGN  20495>>ASSIGN  20496>>ASSIGN  20697>>IF      20799>>IF
     20871>>ASSIGN  20874>>ASSIGN  20932>>IF      21183>>IF      21214>>IF      21215>>ASSIGN  21216>>IF
     21236>>ASSIGN  21924>>IF      22253>>ASSIGN  22254>>ASSIGN  22255>>ASSIGN  22277>>ASSIGN  22278>>ASSIGN
     22279>>ASSIGN
KV$PTR$
     18121**DCL     18127--IMP-PTR 20206>>ASSIGN  20244>>ASSIGN  20245>>ASSIGN  20494>>ASSIGN  20495>>ASSIGN
     20496>>ASSIGN  20520>>IF      20520>>IF      20520>>IF      20536>>ASSIGN  20538>>ASSIGN  20675>>ASSIGN
     20676>>ASSIGN  20697>>IF      20799>>IF      20871>>ASSIGN  20874>>ASSIGN  20932>>IF      21183>>IF
     21214>>IF      21215>>ASSIGN  21216>>IF      21236>>ASSIGN  21299>>ASSIGN  21299>>ASSIGN  21300>>ASSIGN
     21539>>ASSIGN  21540>>ASSIGN  21584>>IF      21584>>IF      21619>>IF      21619>>IF      21701>>ASSIGN
     21702>>ASSIGN  21845>>ASSIGN  21895>>ASSIGN  21924>>IF      22253>>ASSIGN  22254>>ASSIGN  22255>>ASSIGN
     22256>>ASSIGN  22257>>ASSIGN  22277>>ASSIGN  22278>>ASSIGN  22279>>ASSIGN
KV$USR_DAT.DAT__.ADR$
     18660**DCL     20411>>ASSIGN  20488>>CALLBLT
KV$USR_DAT.DAT__.BYTX
     18660**DCL     20411>>ASSIGN  20488>>CALLBLT
PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:290  
KV$USR_DAT.DAT__.DATBYTSIZ
     18660**DCL     20454>>ASSIGN  20482>>ASSIGN
KV$USR_DAT.FNC
     18608**DCL     20208>>IF      20214>>DOCASE  20979>>IF      20987>>IF
KV$USR_ERS.BGNPHSCLM
     18774**DCL     20236>>IF      20246<>CALL
KV$USR_ERS.BTMRHT
     18766**DCL     18771--REDEF
KV$USR_ERS.BTMRHT.CLM
     18768**DCL     20236>>IF      20246<>CALL
KV$USR_ERS.BTMRHT.LIN
     18768**DCL     20236>>IF      20246<>CALL
KV$USR_ERS.ENDPHSCLM
     18774**DCL     20236>>IF      20246<>CALL
KV$USR_ERS.NO_RE_PST
     18705**DCL     20253>>IF
KV$USR_ERS.TOPLFT
     18732**DCL     18737--REDEF
KV$USR_ERS.TOPLFT.CLM
     18734**DCL     20246<>CALL
KV$USR_ERS.TOPLFT.LIN
     18734**DCL     20236>>IF      20246<>CALL
KV$USR_EVT.ACT
     18809**DCL     20783<<ASSIGN
KV$USR_EVT.ID
     18809**DCL     20209>>IF      20762>>DOCASE  20980>>IF      20988>>IF
KV$USR_EVT.PRM
     18809**DCL     20210>>IF      20829>>IF      20866>>IF      20981>>IF      20989>>IF      22201>>ASSIGN
KV$USR_EXTOTPTRN.ID
     19038**DCL     20387>>DOCASE
KV$USR_GETPRM.PRMID
     18942**DCL     20269>>IF
KV$USR_GETPRM.VAL
     18942**DCL     20270<<ASSIGN
KV$USR_INPPRC.ID
     18844**DCL     20739>>IF
PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:291  
KV$USR_INPPRC.ORGCHR
     18845**DCL     20740>>ASSIGN  20742>>ASSIGN
KV$USR_OTPMRK.CMPOTP
     18559**DCL     20374>>IF
KV$USR_OTPMRK.DAT
     18581**DCL     20360>>ASSIGN  20371>>ASSIGN
KV$USR_OTPMRK.DAT.ID
     18584**DCL     18584--REDEF   18585--REDEF
KV$USR_OTPMRK.DAT.MSTRTR
     18583**DCL     20357>>IF
KV$USR_PST.PHSPST
     19101**DCL     19106--REDEF
KV$USR_PST.PHSPST.CLM
     19103**DCL     20515>>ASSIGN  20529>>ASSIGN  20539>>ASSIGN  20676>>ASSIGN
KV$USR_PST.PHSPST.LIN
     19103**DCL     20504>>ASSIGN
KV$USR_PST.PHSPSTMOD
     19109**DCL     20513>>IF
KV$USR_PST.TOPPAGCNT
     19074**DCL     20540>>ASSIGN
KV$USR_SETATR.DLTFLD
     19144**DCL     20720>>IF
KV$USR_SETATR.GRPRND
     19227**DCL     20709>>ASSIGN
KV$USR_SETATR.PHSPST
     19171**DCL     19176--REDEF
KV$USR_SETATR.PHSPST.CLM
     19173**DCL     20719>>ASSIGN
KV$USR_SETATR.PHSPST.LIN
     19173**DCL     20718>>ASSIGN
KV$USR_SETATR.QLF.ACPNMR
     19202**DCL     20712>>IF
KV$USR_SETATR.QLF.CNS
     19204**DCL     20705>>IF
KV$USR_SETATR.QLF.PRT
     19203**DCL     20705>>IF
PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:292  
KV$USR_SETATR.QLF.PRTGRD
     19202**DCL     20705>>IF
KV$USR_SETATR.RTRDAT
     19144**DCL     20715>>IF
KV$USR_SETPRM.PRMID
     18880**DCL     20283>>DOCASE
KV$USR_SETPRM.VAL
     18880**DCL     20287<<ASSIGN  20289>>IF      20289>>IF      20289>>IF      20298<<ASSIGN  20300<<ASSIGN
     20302>>IF      20302>>IF
KV$USR_SETPRM.VAL_.ADR$
     18904**DCL     20312>>ASSIGN
KV$USR_SETPRM.VAL_.BYTX
     18904**DCL     20312>>ASSIGN
KV$VDH_DCLLCLPST
     17159**DCL     20743<<ASSIGN  20746<>CALL
KV$VDH_DCLLCLPST.PHSPST
     17191**DCL     17196--REDEF
KV$VDH_DCLLCLPST.PHSPST.CLM
     17193**DCL     20745<<ASSIGN
KV$VDH_DCLLCLPST.PHSPST.LIN
     17193**DCL     20744<<ASSIGN
KV$VDI.OTPBFR_
     18194**DCL     20874<<ASSIGN
KV$VDI.OTPBFR_.ADR$
     18196**DCL     20494<<ASSIGN  20871>>ASSIGN  21236<<ASSIGN  22253>>ASSIGN  22277<<ASSIGN
KV$VDI.OTPBFR_.BYTSIZ
     18196**DCL     20496<<ASSIGN  22255>>ASSIGN  22279<<ASSIGN
KV$VDI.OTPBFR_.BYTX
     18196**DCL     20495<<ASSIGN  22254>>ASSIGN  22278<<ASSIGN
KV$VDI.OTPCNDPND
     18207**DCL     20697>>IF      21924>>IF
KV$VDI.RQSOTP
     18206**DCL     21214>>IF      21215<<ASSIGN
KV$VDI.SSNCNT
     18199**DCL     20799>>IF      21216>>IF
KV$VDI.USRCTX$
PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:293  
     18170**DCL     20206>>ASSIGN
KV$VDI.USRRQSDAT
     18211**DCL     20932>>IF      21183>>IF
KVB$GET2NSYS
     19294**DCL-ENT 21116--CALL    21350--CALL    21484--CALL    21952--CALL
KVB$RLS2NSYS
     19295**DCL-ENT 20875--CALL    21150--CALL    21515--CALL
KVV$VDI
     19293**DCL-ENT 20698--CALL    20746--CALL    21217--CALL    21925--CALL
KV_VDH_DCLLCLPST
     19571**DCL     20743>>ASSIGN
KV_VDH_DCLLCLPST.PHSPST
     19603**DCL     19608--REDEF
KV_VDH_EVT_CMPOTP
     19640**DCL     20698<>CALL    21925<>CALL
KV_VDH_EVT_RQSOTP
     19675**DCL     21217<>CALL
KZ$3270CTR.ADR
     17823**DCL     21391>>ASSIGN  22199>>ASSIGN  22216>>ASSIGN  22233>>ASSIGN
KZ$3270CTR.LIN$
     17813**DCL     20270>>ASSIGN  20394>>IF      20442>>IF      20833>>IF      20846>>IF      20996>>CALL
     21178>>IF      21257>>ASSIGN  21390>>IF      21966>>ASSIGN  21966>>ASSIGN  22177>>ASSIGN  22197>>ASSIGN
     22214>>ASSIGN  22231>>ASSIGN
KZ$3270DEV
     17847**DCL     20466<>CALL    20781<>CALL    20808<>CALL    20877<>CALL    20904<>CALL    20908<>CALL
     20911<>CALL    20916<>CALL    21093<>CALL    21237<>CALL    21387--ASSIGN
KZ$3270DEV.ACTIVE
     17895**DCL     20224>>IF      20856<<ASSIGN  21232>>IF      21291>>IF      21943>>IF
KZ$3270DEV.ADR
     17948**DCL     21392>>ASSIGN  22200>>ASSIGN  22217>>ASSIGN  22234>>ASSIGN
KZ$3270DEV.COLS
     17985**DCL     20287>>ASSIGN
KZ$3270DEV.CTR$
     17850**DCL     20270>>ASSIGN  20394>>IF      20442>>IF      20833>>IF      20846>>IF      20996>>CALL
     21178>>IF      21257>>ASSIGN  21390>>IF      21391>>ASSIGN  21966>>ASSIGN  21966>>ASSIGN  22177>>ASSIGN
     22197>>ASSIGN  22199>>ASSIGN  22214>>ASSIGN  22216>>ASSIGN  22231>>ASSIGN  22233>>ASSIGN
PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:294  
KZ$3270DEV.DFR.CLR
     17978**DCL     20901>>IF      20903<<ASSIGN
KZ$3270DEV.DFRHD$
     17861**DCL     20907>>IF      20951>>IF
KZ$3270DEV.DONE
     17911**DCL     20207<<ASSIGN  20939<<ASSIGN  21930<<ASSIGN
KZ$3270DEV.DSC
     17950**DCL     20800>>IF      20826>>IF      20910>>IF
KZ$3270DEV.DSC.DEV_FINAL
     17963**DCL     20964<<ASSIGN
KZ$3270DEV.DSC.INT
     17957**DCL     20806<<ASSIGN
KZ$3270DEV.DSC.TOLD_VDH
     17959**DCL     20807<<ASSIGN
KZ$3270DEV.DSC.VDH_FINAL
     17961**DCL     20950<<ASSIGN
KZ$3270DEV.DSC_LATER
     18002**DCL     20913>>IF      20915<<ASSIGN
KZ$3270DEV.KBDLCK
     17998**DCL     20784<<ASSIGN  20932>>IF      21028<<ASSIGN  21183>>IF      21185<<ASSIGN
KZ$3270DEV.LSTOPR
     17981**DCL     20597<<ASSIGN  20601>>IF      20603<<ASSIGN
KZ$3270DEV.LSTOTPLINX
     17990**DCL     20377<<ASSIGN  20438<<ASSIGN  20572>>IF      20644<<ASSIGN  20660<<ASSIGN  21140>>IF
     21142>>ASSIGN  21161>>CALLBLT 21163>>ASSIGN  21408<<ASSIGN
KZ$3270DEV.MUST_SBA
     18004**DCL     21584>>IF      21599<<ASSIGN  21619>>IF      21634<<ASSIGN
KZ$3270DEV.OTPBFRSIZ
     17987**DCL     20320<<ASSIGN  20477>>IF      21107>>ASSIGN  21341>>ASSIGN  21477>>IF
KZ$3270DEV.OTPBSY
     17907**DCL     20935>>IF      21084>>IF
KZ$3270DEV.OTPBYTES
     17944**DCL     21198<<ASSIGN  21198>>ASSIGN  21199>>IF      21959<<ASSIGN  21959>>ASSIGN
KZ$3270DEV.OTPHD$
     17856**DCL     20769>>IF      20775>>DOWHILE 20776>>ASSIGN  20777<<ASSIGN  20778>>IF      20935>>IF
     20951>>IF      21084>>IF      21243>>IF      21244<<ASSIGN  21251>>IF      21254>>ASSIGN  21255<<ASSIGN
PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:295  
     21964<<ASSIGN
KZ$3270DEV.OTPTL$
     17859**DCL     20779<<ASSIGN  21246>>ASSIGN  21247<<ASSIGN  21252<<ASSIGN  21961>>IF      21962>>ASSIGN
     21965<<ASSIGN
KZ$3270DEV.PRINTER
     17905**DCL     20289>>IF      20297>>IF      20302>>IF      20457>>IF      20506>>IF      20690>>IF
     21080>>IF      21106>>IF      21283>>IF      21340>>IF      21400>>IF      21405>>IF      21535>>IF
     21538>>IF      21882>>IF      21891>>IF
KZ$3270DEV.PRO.EWALT
     17874**DCL     20328<<ASSIGN  20330>>IF      20331<<ASSIGN  21885>>IF
KZ$3270DEV.PRO.FF
     17876**DCL     20315<<ASSIGN  20616>>IF
KZ$3270DEV.PRO.OVRPRT.CR
     17880**DCL     20653>>IF
KZ$3270DEV.PRO.OVRPRT.SI
     17882**DCL     20655>>IF
KZ$3270DEV.ROWS
     17983**DCL     20300>>ASSIGN
KZ$3270DEV.SBA
     17993**DCL     20740<<ASSIGN  20742>>ASSIGN
KZ$3270DEV.SYNCX
     17867**DCL     21078<<ASSIGN  22270>>IF      22275<<ASSIGN
KZ$3270DEV.THROTL
     17902**DCL     21199>>IF      21201<<ASSIGN
KZ$3270DEV.VDI$
     17852**DCL     20286>>IF      20296>>IF
KZ$3270STT.KHSTT.OTPBFRBYTUTL
     20070**DCL     21118<<ASSIGN  21118>>ASSIGN  21352<<ASSIGN  21352>>ASSIGN  21501<<ASSIGN  21501>>ASSIGN
KZ$3270STT.OTPBFRSIZ
     20116**DCL     21117<<ASSIGN  21117>>ASSIGN  21351<<ASSIGN  21351>>ASSIGN  21502<<ASSIGN  21502>>ASSIGN
     21503<<ASSIGN  21503>>ASSIGN
KZ$3270STT.REQSTATS.DSPMSK
     19998**DCL     20004--REDEF
KZ$3270STT.REQSTATS.SLCMSK
     20039**DCL     20046--REDEF
KZ$LINCTX
PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:296  
     17376**DCL     20996<>CALL
KZ$LINCTX.CHAN
     17467**DCL     22197>>ASSIGN  22214>>ASSIGN  22231>>ASSIGN
KZ$LINCTX.CHN$
     17379**DCL     20270>>ASSIGN
KZ$LINCTX.CTB.PRM$
     17465**DCL     21259>>IF      21263>>ASSIGN
KZ$LINCTX.LINID
     17397**DCL     22177>>ASSIGN
KZ$LINCTX.LINID.TERM
     17399**DCL     17408--REDEF
KZ$LINCTX.OTPCNT
     17664**DCL     17667--REDEF   21258<<ASSIGN  21258>>ASSIGN  21966<<ASSIGN  21966>>ASSIGN
KZ$LINCTX.POLSIZ
     17710**DCL     17712--REDEF
KZ$LINCTX.PRMCTBTYP
     17412**DCL     21259>>IF
KZ$LINCTX.PRO.SLAVE
     17615**DCL     20394>>IF      20442>>IF      20833>>IF      20846>>IF      21178>>IF      21390>>IF
KZ$OTPBFR
     18052**DCL     20395--ASSIGN  20397--ASSIGN  20443--ASSIGN  20445--ASSIGN  20834--ASSIGN  20836--ASSIGN
     21078--ASSIGN  21082--IF      21138--ASSIGN  21143--IF      21159--ASSIGN  21179--ASSIGN  21181--ASSIGN
     21190--ASSIGN  21382<<ASSIGN  21383--ASSIGN  21958--ASSIGN
KZ$OTPBFR.BFRSIZ
     18095**DCL     20358>>ASSIGN  20369>>ASSIGN  20446>>ASSIGN  20477>>IF      20873>>ASSIGN  21384<<ASSIGN
     21477>>IF      21479>>ASSIGN  21502>>ASSIGN  21502>>ASSIGN  21503>>ASSIGN  21503>>ASSIGN  21507>>ASSIGN
     21507>>ASSIGN  21515>>CALL    21524>>ASSIGN  21525<<ASSIGN  21525>>ASSIGN
KZ$OTPBFR.CMPCOD
     18098**DCL     20780<<ASSIGN  21233<<ASSIGN
KZ$OTPBFR.DATA_SIZ
     18093**DCL     21190<<ASSIGN  21198>>ASSIGN  21958<<ASSIGN  21959>>ASSIGN
KZ$OTPBFR.DEV$
     18103**DCL     21387<<ASSIGN
KZ$OTPBFR.FLAGS.CNT#
     18067**DCL     21197<<ASSIGN  21960<<ASSIGN
KZ$OTPBFR.FLAGS.FIRST#
PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:297  
     18058**DCL     21385<<ASSIGN  21902<<ASSIGN
KZ$OTPBFR.FLAGS.HALT.INP#
     18076**DCL     20832<<ASSIGN
KZ$OTPBFR.FLAGS.HALT.PAG#
     18074**DCL     20830<<ASSIGN
KZ$OTPBFR.FLAGS.LAST#
     18063**DCL     21386<<ASSIGN
KZ$OTPBFR.FLAGS.RELOTPBFR
     18078**DCL     21088<<ASSIGN
KZ$OTPBFR.FLAGS.TRANS#
     18079**DCL     20492<<ASSIGN  21172>>IF      21182>>IF
KZ$OTPBFR.LNK$
     18053**DCL     20777>>ASSIGN  21246<<ASSIGN  21254<<ASSIGN  21962<<ASSIGN
KZ$OTPBFR.MRKCNT
     18100**DCL     20357>>IF      20368<<ASSIGN  20368>>ASSIGN  20369>>ASSIGN  21084>>IF      21505>>IF
     21506>>ASSIGN
KZT$CLEARIMM
     21023**ENTRY   20904--CALL
KZT_THRTL_BLK
     19539**DCL     21199>>IF
KZV$DFR
     19296**DCL-ENT 20908--CALL
KZV$DSC
     19297**DCL-ENT 20808--CALL    20916--CALL
KZV$DSC_CONT
     19298**DCL-ENT 20911--CALL
KZV$DSC_LINE
     19299**DCL-ENT 20996--CALL
KZV$RELOTPBFR
     19300**DCL-ENT 20466--CALL    20781--CALL    21093--CALL    21237--CALL
KZV$RLSCTX
     19301**DCL-ENT 20877--CALL
KZ_3270M_HDR.STTBFR$
     19699**DCL     19727--IMP-PTR 21117>>ASSIGN  21117>>ASSIGN  21118>>ASSIGN  21118>>ASSIGN  21351>>ASSIGN
     21351>>ASSIGN  21352>>ASSIGN  21352>>ASSIGN  21501>>ASSIGN  21501>>ASSIGN  21502>>ASSIGN  21502>>ASSIGN
     21503>>ASSIGN  21503>>ASSIGN
PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:298  
KZ_3270XL
     19316**DCL     21187>>ASSIGN  21391>>ASSIGN  21392>>ASSIGN  21595>>ASSIGN  21596>>ASSIGN  21630>>ASSIGN
     21631>>ASSIGN  21675>>ASSIGN
KZ_3270XLB
     19307**DCL     19316--REDEF
KZ_3270_BFRSIZ
     19318**DCL     20319>>IF      20358>>ASSIGN  20369>>ASSIGN  20446>>ASSIGN  20873>>ASSIGN  21115>>ASSIGN
     21349>>ASSIGN  21479>>ASSIGN  21507>>ASSIGN  21507>>ASSIGN  21515>>CALL    21524>>ASSIGN  21947>>ASSIGN
KZ_OTPBFR
     19333**DCL     21382>>ASSIGN
LSTBYT
     17093**DCL     20411<<ASSIGN  20412>>IF      20412>>IF      20412>>IF      20412>>IF      20412>>IF
     20412>>IF      20412>>IF      20412>>IF      20412>>IF      21166<<ASSIGN  21295>>IF      21295>>IF
M$XXX
      4791**DCL-ENT 21267--CALL    22245--CALL
MAX_COL
     17086**DCL     20236>>IF      20236>>IF      20518>>ASSIGN  20553>>ASSIGN  20559>>ASSIGN  20563>>ASSIGN
     20595>>IF      20648>>IF      20744>>ASSIGN  20745>>ASSIGN  21589>>IF      21592>>ASSIGN  21624>>IF
     21627>>ASSIGN  21695>>IF      21837>>IF      21840>>IF      21843>>ASSIGN  21893>>ASSIGN  22257<<ASSIGN
MAX_ROW
     17085**DCL     20236>>IF      20523>>IF      20524>>ASSIGN  20549>>ASSIGN  20623>>IF      20630>>ASSIGN
     21589>>IF      21624>>IF      21700>>IF      21840>>IF      21843>>ASSIGN  21892>>ASSIGN  22256<<ASSIGN
MOVJBYTS IN PROCEDURE CHK_BFR_SIZ
     21454**DCL     21504<<ASSIGN  21504>>ASSIGN  21507<<ASSIGN  21507>>ASSIGN
NEW_BFR IN PROCEDURE CHK_BFR_SIZ
     21531**LABEL   21475--GOTO    21493--GOTO
NL
     17089**DCL     20549<<ASSIGN  20551>>IF      20553>>ASSIGN  20598<<ASSIGN  20598>>ASSIGN  20626<<ASSIGN
     20626>>ASSIGN  20630<<ASSIGN  20630>>ASSIGN  20638>>DOINDEX 20643>>IF
NOBFR IN PROCEDURE DONE
     21120**LABEL   21116--CALLALT
NOBFR IN PROCEDURE INITBFR
     21354**LABEL   21350--CALLALT
NO_MEMORY
     20995**LABEL   20225--CALLALT 20240--CALLALT 20246--CALLALT 20257--CALLALT 20332--CALLALT 20355--CALLALT
     20366--CALLALT 20379--CALLALT 20439--CALLALT 20441--CALLALT 20478--CALLALT 20493--CALLALT 20525--CALLALT
PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:299  
     20530--CALLALT 20569--CALLALT 20587--CALLALT 20722--CALLALT 20730--CALLALT 20768--CALLALT 20828--CALLALT
     20839--CALLALT 20847--CALLALT 20933--CALLALT 20936--CALLALT 21017--CALLALT 21027--CALLALT 21029--CALLALT
     21041--CALLALT 21051--CALLALT
NO_MEMORY IN PROCEDURE ATTR
     21683**LABEL   21669--CALLALT
NO_MEMORY IN PROCEDURE CHK_BFR_SIZ
     21549**LABEL   21531--CALLALT 21533--CALLALT 21537--CALLALT
NO_MEMORY IN PROCEDURE CLEAR
     21907**LABEL   21878--CALLALT 21880--CALLALT 21884--CALLALT 21898--CALLALT
NO_MEMORY IN PROCEDURE CMP_OTP
     21934**LABEL   21929--CALLALT
NO_MEMORY IN PROCEDURE ERS
     21792**LABEL   21756--CALLALT 21781--CALLALT
NO_MEMORY IN PROCEDURE ERSWNDW
     21869**LABEL   21842--CALLALT 21848--CALLALT 21852--CALLALT 21861--CALLALT
NO_MEMORY IN PROCEDURE IC
     21731**LABEL   21722--CALLALT
NO_MEMORY IN PROCEDURE SETBUFADR
     21610**LABEL   21581--CALLALT
NO_MEMORY IN PROCEDURE SND_SLV_BFR
     21979**LABEL   21952--CALLALT
PARM
     16652**DCL         9--PROC    20205--ASSIGN  21014--ENTRY   21015--ASSIGN  21023--ENTRY   21025--ASSIGN
     21037--ENTRY   21039--ASSIGN  21047--ENTRY   21049--ASSIGN
PARM$
     17067**DCL     18553--IMP-PTR 18604--IMP-PTR 18699--IMP-PTR 18803--IMP-PTR 18838--IMP-PTR 18874--IMP-PTR
     18936--IMP-PTR 18997--IMP-PTR 19032--IMP-PTR 19068--IMP-PTR 19138--IMP-PTR 20205<<ASSIGN  20208>>IF
     20209>>IF      20210>>IF      20214>>DOCASE  20236>>IF      20236>>IF      20236>>IF      20236>>IF
     20236>>IF      20246>>CALL    20246>>CALL    20246>>CALL    20246>>CALL    20246>>CALL    20246>>CALL
     20253>>IF      20269>>IF      20270>>ASSIGN  20283>>DOCASE  20287>>ASSIGN  20289>>IF      20289>>IF
     20289>>IF      20298>>ASSIGN  20300>>ASSIGN  20302>>IF      20302>>IF      20312>>ASSIGN  20312>>ASSIGN
     20357>>IF      20360>>ASSIGN  20371>>ASSIGN  20374>>IF      20387>>DOCASE  20411>>ASSIGN  20411>>ASSIGN
     20454>>ASSIGN  20482>>ASSIGN  20488>>CALLBLT 20488>>CALLBLT 20504>>ASSIGN  20513>>IF      20515>>ASSIGN
     20529>>ASSIGN  20539>>ASSIGN  20540>>ASSIGN  20676>>ASSIGN  20705>>IF      20705>>IF      20705>>IF
     20709>>ASSIGN  20712>>IF      20715>>IF      20718>>ASSIGN  20719>>ASSIGN  20720>>IF      20739>>IF
     20740>>ASSIGN  20742>>ASSIGN  20762>>DOCASE  20783>>ASSIGN  20829>>IF      20866>>IF      20979>>IF
PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:300  
     20980>>IF      20981>>IF      20987>>IF      20988>>IF      20989>>IF      22201>>ASSIGN
PHSPST_LIN
     17074**DCL     20504<<ASSIGN  20514>>ASSIGN  20528>>ASSIGN  20537>>ASSIGN  20659<<ASSIGN  20659>>ASSIGN
     20675>>ASSIGN
POS_MOV
     20528**LABEL   20522--GOTO
QUEUE_ON_TAIL IN PROCEDURE DONE
     21073**DCL     21072--PROC    21241>>IF
R IN PROCEDURE STORE_MRD
     21689**DCL     21688--PROC    21694>>ASSIGN
REL_BFR
     20460**LABEL   20480--GOTO
ROW
     17076**DCL     20255<<ASSIGN  20514<<ASSIGN  20517<<ASSIGN  20517>>ASSIGN  20520>>IF      20520>>IF
     20523>>IF      20524<<ASSIGN  20528<<ASSIGN  20537<<ASSIGN  20549>>ASSIGN  20718<<ASSIGN  20724<>CALL
     21539<<ASSIGN  21584>>IF      21589>>IF      21590<<ASSIGN  21592>>ASSIGN  21600<>CALL    21619>>IF
     21624>>IF      21625<<ASSIGN  21627>>ASSIGN  21635<>CALL    21672<>CALL    21761<<ASSIGN  21779>>ASSIGN
     21836<<ASSIGN  21843<<ASSIGN  21856>>ASSIGN  21858<<ASSIGN  21892<<ASSIGN
ROW1
     17078**DCL     21761>>ASSIGN  21779<<ASSIGN  21839<<ASSIGN  21840>>IF      21858<<ASSIGN
R_MRD IN PROCEDURE STORE_MRD
     21691**DCL     21694<<ASSIGN  21698<<ASSIGN  21698>>ASSIGN  21700>>IF      21700<<ASSIGN  21701>>ASSIGN
S
     17073**DCL     21179<<ASSIGN  21181<<ASSIGN  21184>>ASSIGN  21187>>ASSIGN  21187>>ASSIGN
SAVE_COL
     17084**DCL     20245<<ASSIGN  20256>>ASSIGN
SAVE_ROW
     17083**DCL     20244<<ASSIGN  20255>>ASSIGN
SBA_DONE
     17094**DCL     21601<<ASSIGN  21604<<ASSIGN  21636<<ASSIGN  21639<<ASSIGN  21765>>IF
SETATR
     21000**PROC    20710--CALL    21846--CALL    21896--CALL
SETBUFADR
     21578**PROC    20257--CALL    20530--CALL
SETBUFADR_NCHK
     21615**PROC    20723--CALL    21541--CALL    21671--CALL    21758--CALL    21764--CALL
PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:301  
SET_VAL
     22265**PROC    20982--CALL    20990--CALL    21018--CALL    21042--CALL    21918--CALL    21945--CALL
     21976--CALL
SIZ IN PROCEDURE CHK_BFR_SIZ
     21451**DCL     21449--PROC    21459--ENTRY   21466>>IF
SKIP_GET
     20208**LABEL   20210--GOTO
SKIP_SET
     20984**LABEL   20981--GOTO
SND_SLV_BFR
     21940**PROC    20847--CALL    21051--CALL
STORE_MRD
     21688**PROC    20724--CALL    21600--CALL    21635--CALL    21672--CALL    21890--CALL
SZ
     17087**DCL     20395<<ASSIGN  20397<<ASSIGN  20398>>ASSIGN  20834<<ASSIGN  20836<<ASSIGN  20837>>ASSIGN
     21115<<ASSIGN  21116<>CALL    21118>>ASSIGN  21143>>IF      21150<>CALL    21349<<ASSIGN  21350<>CALL
     21352>>ASSIGN  21411>>ASSIGN  21947<<ASSIGN  21952<>CALL    22235>>ASSIGN
SZX
     17088**DCL     21107<<ASSIGN  21109<<ASSIGN  21114>>DOWHILE 21115>>ASSIGN  21117>>ASSIGN  21117>>ASSIGN
     21120<<ASSIGN  21120>>ASSIGN  21341<<ASSIGN  21343<<ASSIGN  21348>>DOWHILE 21349>>ASSIGN  21351>>ASSIGN
     21351>>ASSIGN  21354<<ASSIGN  21354>>ASSIGN  21384>>ASSIGN  21953<<ASSIGN
T$
     17071**DCL     20358<<ASSIGN  20359>>IF      20360>>ASSIGN  20369<<ASSIGN  20371>>ASSIGN  20460<<ASSIGN
     20466<>CALL    20776<<ASSIGN  20777>>ASSIGN  20780>>ASSIGN  20781<>CALL    20871<<ASSIGN  20872>>IF
     20873>>ASSIGN  20875<>CALL    21234<<ASSIGN  21237<>CALL    21257<<ASSIGN  21258>>ASSIGN  21258>>ASSIGN
     21259>>IF      21259>>IF      21263>>ASSIGN  21946<<ASSIGN  21975>>ASSIGN
TBFR$
     17070**DCL     21087<<ASSIGN  21093<>CALL    21116<>CALL    21150<>CALL    21161>>CALLBLT 21285>>ASSIGN
     21350<>CALL    21372>>ASSIGN  21484<>CALL    21504>>ASSIGN  21507>>ASSIGN  21523>>ASSIGN  21952<>CALL
     21954>>ASSIGN
TOPPAGCNT
     17075**DCL     20540<<ASSIGN  20549>>ASSIGN  20618>>IF      20625<<ASSIGN  20625>>ASSIGN  20629>>DOINDEX
     20643>>IF
WCC.ALARM
     18034**DCL     20398<<ASSIGN
WCC.KEYRSTR
PL6.E3A0      #001=KZT$3270 File=KZT$3270.:E05TSI                                WED 07/30/97 03:00 Page:302  
     18036**DCL     20837<<ASSIGN  21184<<ASSIGN
WCC.STRTPNTR
     18032**DCL     21407<<ASSIGN
WCC IN PROCEDURE SND_SLV_BFR
     21941**DCL     21940--PROC    21957>>ASSIGN
XIT
     20979**LABEL   20241--GOTO    20361--GOTO    20728--GOTO    20998--GOTO
