VERSION E05

PL6.E3A0      #001=KLH$SGSCAN File=KLH$SGSCAN.:E05TSI                            WED 07/30/97 00:48 Page:1    
        1        1        /*M* KLH$SGSCAN - Sign on scanner */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X*  DMC,DMR,CCC,PLM=0,IND=3,CTI=5,DCI=6,IAD=0,DTI=0,IDT=0,ENI=3,
        8        8              ECU=3,CSU=3,SDI=3                                           */
        9        9
       10       10        KLH$SGSCAN: PROC (LOGON,ACCT,NAME,PW,PRO,ERR,HOST,NOSETUP,NOHEADER) ALTRET;
       11       11        /*D* NAME:        KLH$SGSCAN
       12       12             PURPOSE:     To scan the LOGON for logon ACCT, NAME, PW and PRO
       13       13         CALL:        CALL KLH$SGSCAN(LOGON,ACCT,NAME,PW,PRO,ERR,HOST,NOSETUP,NOHEADER) ALTR
                13        ET(LBL);
       14       14             INPUT:       LOGON - The logon message structure in TEXTC format
       15       15             OUTPUT:      ACCT - Account to log on
       16       16                          NAME - Name to log on
       17       17                          PW - Password to log on
       18       18                          PRO - Profile to use for the device (only if specified)
       19       19                          ERR - An error condition (%E$SGSYN or %E$BDID) if
       20       20                                an error occurs.
       21       21                          HOST - The host name if specified.
       22       22                          NOSETUP - If nosetup option was specified.
       23       23                          NOHEADER - If noheader option was specified.
       24       24             DESCRIPTION: KLH$SGSCAN scans off ACCT, NAME, PW, NS, PRO, and HOST from
       25       25                          KL$SGN.LOGON and returns. If any parsing errors occur,
       26       26                          an error will be returned in ERR and KLH$SGSCAN will ALTRET.
       27       27                          The string being scanned for takes on the form below:
       28       28               [('!'|'/')- STR1] NAME [','[ACCT] [','PW]] ['N/O' 'S/ETUP']
       29       29               ['PRO/FILE' '=' PRO] ['H/OST' '=' HOST] ['N/O' 'H/EADER']
       30       30                             where STR1 is any string not containing ' ' or ','
       31       31                                   ACCT is the account
       32       32                                   NAME is the name
       33       33                                   PW is the password
       34       34                                   PRO is the specified profile name
       35       35                                   NS means No Setup
       36       36                                   NH means no header (SYSID msg at logon)
PL6.E3A0      #001=KLH$SGSCAN File=KLH$SGSCAN.:E05TSI                            WED 07/30/97 00:48 Page:2    
       37       37                                   HOST is the host system to be connected to
       38       38                          A set of defaults for unspecified portions is provided:
       39       39                             ACCT - no default
       40       40                             NAME - '*'
       41       41                             PW   - all blanks
       42       42                             NOSETUP - '0'B
       43       43                             NOHEADER - '0'B
       44       44                             PRO  - length of zero
       45       45                             HOST - Current host name
       46       46        */
       47       47        /*N* ADDITIONAL_OPTIONS - In order to add additional options the following
       48       48                  procedure should be followed.
       49       49                     1) Add the option to this module and put it in the parameter list
       50       50                  for the call to KLH$SGSCAN.
       51       51                     2) In the file KL_MACRO_C add to the KL$PCD structure a field to
       52       52                  temporarily hold this option.  There are some unused bits after the
       53       53                  NOSETUP and the NOHEADER options.
       54       54                     3) In KLH$HLP fix the entry DCL and call for KLH$SGSCAN and add
       55       55                  the code to put the new parameter into the PCD structure.  In a
       56       56                  totally different part of the file is where this new option goes from
       57       57                  the PCD structure into the JIT.
       58       58                     4) Fix the following modules as needed since they are the ones
       59       59                  currently known to call SGSCAN;
       60       60                        ALA$LOGON
       61       61                        KFF$FEBOOT
       62       62                        KLI$FESET
       63       63                     minimally these routines need the entry dcls and calling sequences
       64       64                  updated.
       65       65        */
       66       66        %INCLUDE KL_ERRORS_C;
       67      108        %INCLUDE B$TABLES_C;
       68      216             %B$XL_UPPER_UR;
       69      220        %INCLUDE CP_6;
       70      301    1   DCL 1 LOGON,
       71      302    1          2 LEN UBIN BYTE UNAL,
       72      303    1          2 TXT CHAR(139);
       73      304    1   DCL ACCT CHAR(8);
PL6.E3A0      #001=KLH$SGSCAN File=KLH$SGSCAN.:E05TSI                            WED 07/30/97 00:48 Page:3    
       74      305    1   DCL 1 NAME ALIGNED,
       75      306    1          2 C UBIN BYTE UNAL,
       76      307    1          2 T CHAR(12) UNAL;
       77      308    1   DCL PW CHAR(8);
       78      309    1   DCL 1 PRO ALIGNED,
       79      310    1          2 C UBIN BYTE UNAL,
       80      311    1          2 T CHAR(11) UNAL;
       81      312    1   DCL ERR UBIN;
       82      313    1   DCL HOST CHAR(8);
       83      314    1   DCL NOSETUP BIT (1) ALIGNED;
       84      315    1   DCL NOHEADER BIT (1) ALIGNED;
       85      316    1   DCL I UBIN WORD;
       86      317    1   DCL J UBIN WORD;
       87      318    1   DCL LEN UBIN WORD;
       88      319    1   DCL LOGON_LEN UBIN WORD;
       89      320    1   DCL TNAME CHAR(16);
       90      321    1   DCL XLOGON CHAR (139);
       91      322        %EJECT;
PL6.E3A0      #001=KLH$SGSCAN File=KLH$SGSCAN.:E05TSI                            WED 07/30/97 00:48 Page:4    
       92      323    1   ACCT = ' ';
       93      324    1   NAME.C = 1;
       94      325    1   NAME.T = '*';
       95      326    1   PW = ' ';
       96      327    1   PRO.C = 0;
       97      328    1   PRO.T = ' ';
       98      329    1   HOST = ' ';
       99      330    1   NOSETUP = '0'B;
      100      331    1   NOHEADER = '0'B;
      101      332    1   I = 0;
      102      333    1   LOGON_LEN = LOGON.LEN;
      103      334
      104      335    1   IF (LOGON_LEN = 0) OR
      105      336    1        (LOGON_LEN > LENGTHC (LOGON.TXT))
      106      337    1   THEN GOTO BADID;
      107      338    1   IF ( (LOGON_LEN = 1) AND
      108      339    1        (SUBSTR (LOGON.TXT, 0, 1) = ':') )
      109      340    2   THEN DO;             /* Default ':SYS,LJS' for input ':' */
      110      341    2      ACCT = ':SYS';
      111      342    2      NOSETUP = '0'B;
      112      343    2      NOHEADER = '0'B;
      113      344    2      NAME.C = 3;
      114      345    2      NAME.T = 'LJS';
      115      346    2      PW = ' ';
      116      347    2      PRO.C = 0;
      117      348    2      RETURN;
      118      349    2      END;
      119      350
      120      351    1   IF ((SUBSTR (LOGON.TXT, 0, 1) = '!') OR
      121      352    1        (SUBSTR (LOGON.TXT, 0, 1) = '/') )
      122      353    1   THEN CALL BCSCAN ALTRET (BADID);  /* Get start of logon */
      123      354
      124      355    1   IF (SUBSTR (LOGON.TXT, I, 1) = ' ')
      125      356    1   THEN CALL NBSCAN ALTRET (BADID); /* Skip excess blanks */
      126      357
      127      358        /* Now we are at the begining of the account, pick it up. */
      128      359
PL6.E3A0      #001=KLH$SGSCAN File=KLH$SGSCAN.:E05TSI                            WED 07/30/97 00:48 Page:5    
      129      360    1   IF (SUBSTR (LOGON.TXT, I, 1) = ',')
      130      361    2   THEN DO; /* Account cant start with a ',' */
      131      362    2      GOTO BADID;
      132      363    2      END;
      133      364    1   CALL GETNM ALTRET (BADID);  /* That get us the account */
      134      365    1   IF (LEN > LENGTHC (ACCT))
      135      366    2   THEN DO;
      136      367    2      GOTO BADID;
      137      368    2      END;
      138      369    1   ACCT = TNAME; /* It's good, let's use it. */
      139      370
      140      371        /* Now get the username */
      141      372
      142      373    1   IF ((I < LOGON_LEN) AND
      143      374    1        (SUBSTR (LOGON.TXT, I, 1) = ',') )
      144      375    2   THEN DO; /* Get the uname it's next */
      145      376    2      CALL GETNMN ALTRET (BADID);
      146      377    2      IF (LEN > LENGTHC (NAME.T))
      147      378    3      THEN DO;
      148      379    3         GOTO BADID;
      149      380    3         END;
      150      381    2      IF (LEN > 0)
      151      382    3      THEN DO; /* We have a good username, let's use it. */
      152      383    3         NAME.C = LEN;
      153      384    3         NAME.T = TNAME;
      154      385    3         END;
      155      386
      156      387        /* Now get the password */
      157      388
      158      389    2      IF ((I < LOGON_LEN) AND
      159      390    2           (SUBSTR (LOGON.TXT, I, 1) = ',') )
      160      391    3      THEN DO;
      161      392    3         CALL GETNMN ALTRET (BADID);
      162      393    3         IF (LEN > LENGTHC (PW))
      163      394    4         THEN DO;
      164      395    4            GOTO BADID;
      165      396    4            END;
PL6.E3A0      #001=KLH$SGSCAN File=KLH$SGSCAN.:E05TSI                            WED 07/30/97 00:48 Page:6    
      166      397    3         PW = TNAME;  /* The password checks out, let's use it */
      167      398    3         IF ((I < LOGON_LEN) AND
      168      399    3              (SUBSTR (LOGON.TXT, I, 1) = ',') )
      169      400    4         THEN DO; /* The logon string must have blanks after it*/
      170      401    4            GOTO BADID;
      171      402    4            END;
      172      403    3         END;
      173      404    2      END; /* Of doing the password stuff. */
      174      405
      175      406        /* Now lets start scanning for the options... */
      176      407
      177      408        /* First convert the whole line to uppercase for the parsing. */
      178      409    1   CALL XLATE (XLOGON, B$XL_UPPER_UR, LOGON.TXT);
      179      410    1   SUBSTR(XLOGON,LOGON_LEN,LENGTHC(LOGON.TXT)-LOGON_LEN) = ' ';
      180      411
      181      412    1   CALL NBSCAN ALTRET (JUSTRET);
      182      413    2   DO WHILE (I < LOGON_LEN);
      183      414    3      DO SELECT (SUBSTR (XLOGON, I, 1));
      184      415    3         SELECT ('H');
      185      416    3         I = I + 1;
      186      417    3         IF (SUBSTR (XLOGON, I, 1) = 'O') THEN I = I + 1;
      187      418    3         IF (SUBSTR (XLOGON, I, 1) = 'S') THEN I = I + 1;
      188      419    3         IF (SUBSTR (XLOGON, I, 1) = 'T') THEN I = I + 1;
      189      420    3         IF (I >= LOGON_LEN)
      190      421    4         THEN DO;
      191      422    4            GOTO BADOPT;
      192      423    4            END;
      193      424    3         CALL NBSCAN ALTRET (BADOPT);
      194      425    3         IF (SUBSTR (XLOGON, I, 1) ~= '=')
      195      426    4         THEN DO;
      196      427    4            GOTO BADOPT;
      197      428    4            END;
      198      429    3         CALL GETNMN ALTRET (BADOPT);
      199      430    3         IF (LEN > LENGTHC (HOST))
      200      431    4         THEN DO;
      201      432    4            GOTO BADOPT;
      202      433    4            END;
PL6.E3A0      #001=KLH$SGSCAN File=KLH$SGSCAN.:E05TSI                            WED 07/30/97 00:48 Page:7    
      203      434    3         HOST = TNAME; /* We have a valid host, let's use it. */
      204      435    3         SELECT ('P');
      205      436    3         I = I + 1;
      206      437    3         IF (SUBSTR (XLOGON, I, 1) = 'R') THEN I = I + 1;
      207      438    3         IF (SUBSTR (XLOGON, I, 1) = 'O') THEN I = I + 1;
      208      439    3         IF (SUBSTR (XLOGON, I, 1) = 'F') THEN I = I + 1;
      209      440    3         IF (SUBSTR (XLOGON, I, 1) = 'I') THEN I = I + 1;
      210      441    3         IF (SUBSTR (XLOGON, I, 1) = 'L') THEN I = I + 1;
      211      442    3         IF (SUBSTR (XLOGON, I, 1) = 'E') THEN I = I + 1;
      212      443    3         IF (I >= LOGON_LEN)
      213      444    4         THEN DO;
      214      445    4            GOTO BADOPT;
      215      446    4            END;
      216      447    3         CALL NBSCAN ALTRET (BADOPT);
      217      448    3         IF (SUBSTR (XLOGON, I, 1) ~= '=')
      218      449    4         THEN DO;
      219      450    4            GOTO BADOPT;
      220      451    4            END;
      221      452    3         CALL GETNMN ALTRET (BADOPT);
      222      453    3         IF (LEN > LENGTHC (PRO.T))
      223      454    4         THEN DO;
      224      455    4            GOTO BADOPT;
      225      456    4            END;
      226      457    3         PRO.C = LEN;
      227      458    3         CALL XLATE (SUBSTR (PRO.T, 0, LEN), B$XL_UPPER_UR, SUBSTR (TNAME, 0, LEN) );
      228      459    3         SELECT ('N');
      229      460    3         I = I + 1;
      230      461    3         IF (SUBSTR (XLOGON, I, 1) = 'O') THEN I = I + 1;
      231      462    3         IF (SUBSTR (XLOGON, I, 1) = 'S')
      232      463    4         THEN DO;
      233      464    4            I = I + 1;
      234      465    4            IF (SUBSTR (XLOGON, I, 1) = 'E') THEN I = I + 1;
      235      466    4            IF (SUBSTR (XLOGON, I, 1) = 'T') THEN I = I + 1;
      236      467    4            IF (SUBSTR (XLOGON, I, 1) = 'U') THEN I = I + 1;
      237      468    4            IF (SUBSTR (XLOGON, I, 1) = 'P') THEN I = I + 1;
      238      469    4            IF ( I > LOGON_LEN)
      239      470    5            THEN DO;
PL6.E3A0      #001=KLH$SGSCAN File=KLH$SGSCAN.:E05TSI                            WED 07/30/97 00:48 Page:8    
      240      471    5               GOTO BADOPT;
      241      472    5               END;
      242      473                          /* If there was a syntax error in spelling the
      243      474                             option, it will get caught next time through
      244      475                             the loop by the case else.
      245      476                          */
      246      477    4            NOSETUP = '1'B;
      247      478    4            END; /* Setup stuff */
      248      479    3         ELSE IF (SUBSTR (XLOGON, I, 1) = 'H')
      249      480    4            THEN DO;
      250      481    4               I = I + 1;
      251      482    4               IF (SUBSTR (XLOGON, I, 1) = 'E') THEN I = I + 1;
      252      483    4               IF (SUBSTR (XLOGON, I, 1) = 'A') THEN I = I + 1;
      253      484    4               IF (SUBSTR (XLOGON, I, 1) = 'D') THEN I = I + 1;
      254      485    4               IF (SUBSTR (XLOGON, I, 1) = 'E') THEN I = I + 1;
      255      486    4               IF (SUBSTR (XLOGON, I, 1) = 'R') THEN I = I + 1;
      256      487    4               IF ( I > LOGON_LEN)
      257      488    5               THEN DO;
      258      489    5                  GOTO BADOPT;
      259      490    5                  END;
      260      491                          /* If there was a syntax error in spelling the
      261      492                             option, it will get caught next time through
      262      493                             the loop by the case else.
      263      494                          */
      264      495    4               NOHEADER = '1'B;
      265      496    4               END; /* Header stuff */
      266      497    4            ELSE DO;
      267      498    4               GOTO BADOPT;  /* Ns is the min abbrev */
      268      499    4               END;
      269      500    3         SELECT (ELSE);
      270      501    3      GOTO BADOPT;
      271      502    3         END; /* Of the do select */
      272      503    2   CALL NBSCAN ALTRET (JUSTRET);
      273      504    2   IF (SUBSTR (XLOGON, I, 1) = ',')
      274      505    3   THEN DO;
      275      506    3      I = I + 1; /* Scan past the comma */
      276      507    3      CALL NBSCAN ALTRET (BADOPT);
PL6.E3A0      #001=KLH$SGSCAN File=KLH$SGSCAN.:E05TSI                            WED 07/30/97 00:48 Page:9    
      277      508    3      END;
      278      509    2      END; /* Do while i is less than the string length */
      279      510
      280      511    1   JUSTRET: RETURN;
      281      512
      282      513    1   BADOPT: ERR = %E$SGSYN;
      283      514    1   ALTRETURN;
      284      515
      285      516    1   BADID: ERR = %E$BDID;
      286      517    1   ALTRETURN;
      287      518        %EJECT;
PL6.E3A0      #001=KLH$SGSCAN File=KLH$SGSCAN.:E05TSI                            WED 07/30/97 00:48 Page:10   
      288      519    1   BCSCAN: PROC ALTRET;
      289      520        /*I* NAME:        BCSCAN
      290      521             PURPOSE:     To set I to next ',' or ' ' or end-of-line
      291      522             DESCRIPTION: BCSCAN returns the current or next ' ' or ',' index in I
      292      523                          or returns LOGON_LEN if no ',' or ' ' exists
      293      524        */
      294      525    3   DO WHILE ('1'B);
      295      526    3      IF ((LOGON_LEN = I) OR
      296      527    3           (SUBSTR (LOGON.TXT, I, 1) = ',') OR
      297      528    3           (SUBSTR (LOGON.TXT, I, 1) = ' ') )
      298      529    3      THEN RETURN;
      299      530    3      ELSE I = I + 1;
      300      531    3      END;
      301      532    2   END BCSCAN;
      302      533        %EJECT;
PL6.E3A0      #001=KLH$SGSCAN File=KLH$SGSCAN.:E05TSI                            WED 07/30/97 00:48 Page:11   
      303      534    1   NBSCAN: PROC ALTRET;
      304      535        /*I* NAME:        NBSCAN
      305      536             PURPOSE:     To scan to next non-blank character
      306      537             DESCRIPTION: NBSCAN returns in I the current or next non-blank
      307      538                          character index or ALTRETURNs if the rest of the
      308      539                          string is blank or no string is left.
      309      540        */
      310      541    3   DO I = I TO LOGON_LEN - 1;
      311      542    3      IF (SUBSTR (LOGON.TXT, I, 1) ~= ' ') THEN RETURN;
      312      543    3      END;
      313      544    2   ALTRETURN;
      314      545    2   END NBSCAN;
      315      546        %EJECT;
PL6.E3A0      #001=KLH$SGSCAN File=KLH$SGSCAN.:E05TSI                            WED 07/30/97 00:48 Page:12   
      316      547    1   GETNMN: PROC ALTRET;
      317      548        /*I* NAME:        GETNMN
      318      549             PURPOSE:     To return the next lexeme in TNAME with length in LEN
      319      550             DESCRIPTION: GETNMN skips over the current character, any intervening
      320      551                          blanks, and then falls through into GETNM to return
      321      552                          the next lexeme in TNAME with length of TNAME in LEN.
      322      553                          Trailing blanks will then be stripped off leaving I
      323      554                          as index of next non-blank character (or last character
      324      555                          of the string). If no non-blank characters are left,
      325      556                          GETNMN will ALTRETURN.
      326      557        */
      327      558    2   I = I + 1;
      328      559    2   IF (I >= LOGON_LEN) THEN ALTRETURN;
      329      560    2   CALL NBSCAN
      330      561    3   WHENALTRETURN DO;
      331      562    3      ALTRETURN;
      332      563    3      END;
      333      564
      334      565    2   GETNM: ENTRY ALTRET;
      335      566        /*I* NAME:        GETNM
      336      567             DESCRIPTION: GETNM scans from the current I location looking for
      337      568                          a ' ', ',' or end-of-string. Everything in between is
      338      569                          returned in TNAME with length in LEN. LEN may be returned
      339      570                          as 0.
      340      571        */
      341      572    2   J = I;
      342      573    2   CALL BCSCAN
      343      574    3   WHENALTRETURN DO;
      344      575    3      END;
      345      576    2   LEN = I - J;
      346      577    2   TNAME = SUBSTR (LOGON.TXT, J, LEN);
      347      578    2   IF ((I < LOGON_LEN) AND
      348      579    2        (SUBSTR(LOGON.TXT,I,1) = ' ') )
      349      580    3   THEN DO;  /* Position i on the next nonblank */
      350      581    3      CALL NBSCAN
      351      582    4      WHENRETURN DO;
      352      583    4         END;
PL6.E3A0      #001=KLH$SGSCAN File=KLH$SGSCAN.:E05TSI                            WED 07/30/97 00:48 Page:13   
      353      584    4      WHENALTRETURN DO;
      354      585    4         END;
      355      586    3      END;
      356      587    2   RETURN;
      357      588    2   END GETNMN;
      358      589    1   END KLH$SGSCAN;

PL6.E3A0      #001=KLH$SGSCAN File=KLH$SGSCAN.:E05TSI                            WED 07/30/97 00:48 Page:14   
--  Include file information  --

   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B$TABLES_C.:E05TOU  cannot be made into a system file and is referenced.
   KL_ERRORS_C.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure KLH$SGSCAN.

   Procedure KLH$SGSCAN requires 484 words for executable code.
   Procedure KLH$SGSCAN requires 60 words of local(AUTO) storage.

    No errors detected in file KLH$SGSCAN.:E05TSI    .

PL6.E3A0      #001=KLH$SGSCAN File=KLH$SGSCAN.:E05TSI                            WED 07/30/97 00:48 Page:15   

 Object Unit name= KLH$SGSCAN                                 File name= KLH$SGSCAN.:E05TOU
 UTS= JUL 30 '97 00:48:06.36 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1  RoData even  UTS      2      2  KLH$SGSCAN
    2   Proc  even  none   484    744  KLH$SGSCAN
    3  RoData even  none    20     24  KLH$SGSCAN

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     2      0   yes    yes     yes      Std        9  KLH$SGSCAN

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes          ~proc      0 B_POINTER
                       nStd      0 X66_AUTO_N
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET
                       nStd      0 X66_AALT

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
r    B$XL_UPPER_UR$                        M$UC                                  B_VECTNIL
PL6.E3A0      #001=KLH$SGSCAN File=KLH$SGSCAN.:E05TSI                            WED 07/30/97 00:48 Page:16   


        1        1        /*M* KLH$SGSCAN - Sign on scanner */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X*  DMC,DMR,CCC,PLM=0,IND=3,CTI=5,DCI=6,IAD=0,DTI=0,IDT=0,ENI=3,
        8        8              ECU=3,CSU=3,SDI=3                                           */
        9        9
       10       10        KLH$SGSCAN: PROC (LOGON,ACCT,NAME,PW,PRO,ERR,HOST,NOSETUP,NOHEADER) ALTRET;

     10  2 000000   000000 700200 xent  KLH$SGSCAN   TSX0  ! X66_AUTO_N
         2 000001   000074 000011                    ZERO    60,9

       11       11        /*D* NAME:        KLH$SGSCAN
       12       12             PURPOSE:     To scan the LOGON for logon ACCT, NAME, PW and PRO
       13       13         CALL:       CALL KLH$SGSCAN(LOGON,ACCT,NAME,PW,PRO,ERR,HOST,NOSETUP,NOHEADER) ALTR
                13        ET(LBL);
       14       14             INPUT:       LOGON - The logon message structure in TEXTC format
       15       15             OUTPUT:      ACCT - Account to log on
       16       16                          NAME - Name to log on
       17       17                          PW - Password to log on
       18       18                          PRO - Profile to use for the device (only if specified)
       19       19                          ERR - An error condition (%E$SGSYN or %E$BDID) if
       20       20                                an error occurs.
       21       21                          HOST - The host name if specified.
       22       22                          NOSETUP - If nosetup option was specified.
       23       23                          NOHEADER - If noheader option was specified.
       24       24             DESCRIPTION: KLH$SGSCAN scans off ACCT, NAME, PW, NS, PRO, and HOST from
       25       25                          KL$SGN.LOGON and returns. If any parsing errors occur,
       26       26                          an error will be returned in ERR and KLH$SGSCAN will ALTRET.
       27       27                          The string being scanned for takes on the form below:
       28       28               [('!'|'/')- STR1] NAME [','[ACCT] [','PW]] ['N/O' 'S/ETUP']
       29       29               ['PRO/FILE' '=' PRO] ['H/OST' '=' HOST] ['N/O' 'H/EADER']
       30       30                             where STR1 is any string not containing ' ' or ','
       31       31                                   ACCT is the account
PL6.E3A0      #001=KLH$SGSCAN File=KLH$SGSCAN.:E05TSI                            WED 07/30/97 00:48 Page:17   
       32       32                                   NAME is the name
       33       33                                   PW is the password
       34       34                                   PRO is the specified profile name
       35       35                                   NS means No Setup
       36       36                                   NH means no header (SYSID msg at logon)
       37       37                                   HOST is the host system to be connected to
       38       38                          A set of defaults for unspecified portions is provided:
       39       39                             ACCT - no default
       40       40                             NAME - '*'
       41       41                             PW   - all blanks
       42       42                             NOSETUP - '0'B
       43       43                             NOHEADER - '0'B
       44       44                             PRO  - length of zero
       45       45                             HOST - Current host name
       46       46        */
       47       47        /*N* ADDITIONAL_OPTIONS - In order to add additional options the following
       48       48                  procedure should be followed.
       49       49                     1) Add the option to this module and put it in the parameter list
       50       50                  for the call to KLH$SGSCAN.
       51       51                     2) In the file KL_MACRO_C add to the KL$PCD structure a field to
       52       52                  temporarily hold this option.  There are some unused bits after the
       53       53                  NOSETUP and the NOHEADER options.
       54       54                     3) In KLH$HLP fix the entry DCL and call for KLH$SGSCAN and add
       55       55                  the code to put the new parameter into the PCD structure.  In a
       56       56                  totally different part of the file is where this new option goes from
       57       57                  the PCD structure into the JIT.
       58       58                     4) Fix the following modules as needed since they are the ones
       59       59                  currently known to call SGSCAN;
       60       60                        ALA$LOGON
       61       61                        KFF$FEBOOT
       62       62                        KLI$FESET
       63       63                     minimally these routines need the entry dcls and calling sequences
       64       64                  updated.
       65       65        */
       66       66        %INCLUDE KL_ERRORS_C;
       67      108        %INCLUDE B$TABLES_C;
       68      216             %B$XL_UPPER_UR;
PL6.E3A0      #001=KLH$SGSCAN File=KLH$SGSCAN.:E05TSI                            WED 07/30/97 00:48 Page:18   
       69      220        %INCLUDE CP_6;
       70      301    1   DCL 1 LOGON,
       71      302    1          2 LEN UBIN BYTE UNAL,
       72      303    1          2 TXT CHAR(139);
       73      304    1   DCL ACCT CHAR(8);
       74      305    1   DCL 1 NAME ALIGNED,
       75      306    1          2 C UBIN BYTE UNAL,
       76      307    1          2 T CHAR(12) UNAL;
       77      308    1   DCL PW CHAR(8);
       78      309    1   DCL 1 PRO ALIGNED,
       79      310    1          2 C UBIN BYTE UNAL,
       80      311    1          2 T CHAR(11) UNAL;
       81      312    1   DCL ERR UBIN;
       82      313    1   DCL HOST CHAR(8);
       83      314    1   DCL NOSETUP BIT (1) ALIGNED;
       84      315    1   DCL NOHEADER BIT (1) ALIGNED;
       85      316    1   DCL I UBIN WORD;
       86      317    1   DCL J UBIN WORD;
       87      318    1   DCL LEN UBIN WORD;
       88      319    1   DCL LOGON_LEN UBIN WORD;
       89      320    1   DCL TNAME CHAR(16);
       90      321    1   DCL XLOGON CHAR (139);
       91      322        %EJECT;
PL6.E3A0      #001=KLH$SGSCAN File=KLH$SGSCAN.:E05TSI                            WED 07/30/97 00:48 Page:19   
       92      323    1   ACCT = ' ';

    323  2 000002   200004 470500                    LDP0    @ACCT,,AUTO
         2 000003   040100 100400                    MLR     fill='040'O
         2 000004   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         2 000005   000000 000010                    ADSC9   0,,PR0                   cn=0,n=8

       93      324    1   NAME.C = 1;

    324  2 000006   200005 471500                    LDP1    @NAME,,AUTO
         2 000007   001000 236003                    LDQ     512,DU
         2 000010   100000 552140                    STBQ    0,'40'O,PR1

       94      325    1   NAME.T = '*';

    325  2 000011   040100 100400                    MLR     fill='040'O
         2 000012   000000 000001 3                  ADSC9   0                        cn=0,n=1
         2 000013   100000 200014                    ADSC9   0,,PR1                   cn=1,n=12

       95      326    1   PW = ' ';

    326  2 000014   200006 473500                    LDP3    @PW,,AUTO
         2 000015   040100 100400                    MLR     fill='040'O
         2 000016   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         2 000017   300000 000010                    ADSC9   0,,PR3                   cn=0,n=8

       96      327    1   PRO.C = 0;

    327  2 000020   200007 474500                    LDP4    @PRO,,AUTO
         2 000021   000000 236003                    LDQ     0,DU
         2 000022   400000 552140                    STBQ    0,'40'O,PR4

       97      328    1   PRO.T = ' ';

    328  2 000023   040100 100400                    MLR     fill='040'O
         2 000024   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         2 000025   400000 200013                    ADSC9   0,,PR4                   cn=1,n=11
PL6.E3A0      #001=KLH$SGSCAN File=KLH$SGSCAN.:E05TSI                            WED 07/30/97 00:48 Page:20   

       98      329    1   HOST = ' ';

    329  2 000026   200011 475500                    LDP5    @HOST,,AUTO
         2 000027   040100 100400                    MLR     fill='040'O
         2 000030   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         2 000031   500000 000010                    ADSC9   0,,PR5                   cn=0,n=8

       99      330    1   NOSETUP = '0'B;

    330  2 000032   200012 476500                    LDP6    @NOSETUP,,AUTO
         2 000033   600000 450100                    STZ     0,,PR6

      100      331    1   NOHEADER = '0'B;

    331  2 000034   200013 477500                    LDP7    @NOHEADER,,AUTO
         2 000035   700000 450100                    STZ     0,,PR7

      101      332    1   I = 0;

    332  2 000036   200014 450100                    STZ     I,,AUTO

      102      333    1   LOGON_LEN = LOGON.LEN;

    333  2 000037   200003 470500                    LDP0    @LOGON,,AUTO
         2 000040   000100 101500                    MRL     fill='000'O
         2 000041   000000 000001                    ADSC9   0,,PR0                   cn=0,n=1
         2 000042   200017 000004                    ADSC9   LOGON_LEN,,AUTO          cn=0,n=4

      103      334
      104      335    1   IF (LOGON_LEN = 0) OR

    335  2 000043   200017 235100                    LDA     LOGON_LEN,,AUTO
         2 000044   000623 600000 2                  TZE     BADID
         2 000045   000214 115007                    CMPA    140,DL
         2 000046   000623 603000 2                  TRC     BADID

PL6.E3A0      #001=KLH$SGSCAN File=KLH$SGSCAN.:E05TSI                            WED 07/30/97 00:48 Page:21   
      105      336    1        (LOGON_LEN > LENGTHC (LOGON.TXT))
      106      337    1   THEN GOTO BADID;
      107      338    1   IF ( (LOGON_LEN = 1) AND

    338  2 000047   000001 115007                    CMPA    1,DL
         2 000050   000076 601000 2                  TNZ     s:351
         2 000051   040000 106500                    CMPC    fill='040'O
         2 000052   000000 200001                    ADSC9   0,,PR0                   cn=1,n=1
         2 000053   000001 000001 3                  ADSC9   1                        cn=0,n=1
         2 000054   000076 601000 2                  TNZ     s:351

      108      339    1        (SUBSTR (LOGON.TXT, 0, 1) = ':') )
      109      340    2   THEN DO;             /* Default ':SYS,LJS' for input ':' */

      110      341    2      ACCT = ':SYS';

    341  2 000055   200004 470500                    LDP0    @ACCT,,AUTO
         2 000056   040100 100400                    MLR     fill='040'O
         2 000057   000000 000004 1                  ADSC9   0                        cn=0,n=4
         2 000060   000000 000010                    ADSC9   0,,PR0                   cn=0,n=8

      111      342    2      NOSETUP = '0'B;

    342  2 000061   600000 450100                    STZ     0,,PR6

      112      343    2      NOHEADER = '0'B;

    343  2 000062   700000 450100                    STZ     0,,PR7

      113      344    2      NAME.C = 3;

    344  2 000063   003000 236003                    LDQ     1536,DU
         2 000064   100000 552140                    STBQ    0,'40'O,PR1

      114      345    2      NAME.T = 'LJS';

    345  2 000065   040100 100400                    MLR     fill='040'O
PL6.E3A0      #001=KLH$SGSCAN File=KLH$SGSCAN.:E05TSI                            WED 07/30/97 00:48 Page:22   
         2 000066   000001 000003 1                  ADSC9   1                        cn=0,n=3
         2 000067   100000 200014                    ADSC9   0,,PR1                   cn=1,n=12

      115      346    2      PW = ' ';

    346  2 000070   040100 100400                    MLR     fill='040'O
         2 000071   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         2 000072   300000 000010                    ADSC9   0,,PR3                   cn=0,n=8

      116      347    2      PRO.C = 0;

    347  2 000073   000000 236003                    LDQ     0,DU
         2 000074   400000 552140                    STBQ    0,'40'O,PR4

      117      348    2      RETURN;

    348  2 000075   000000 702200 xent               TSX2  ! X66_ARET

      118      349    2      END;
      119      350
      120      351    1   IF ((SUBSTR (LOGON.TXT, 0, 1) = '!') OR

    351  2 000076   040000 106500                    CMPC    fill='040'O
         2 000077   000000 200001                    ADSC9   0,,PR0                   cn=1,n=1
         2 000100   000002 000001 3                  ADSC9   2                        cn=0,n=1
         2 000101   000106 600000 2                  TZE     s:353
         2 000102   040000 106500                    CMPC    fill='040'O
         2 000103   000000 200001                    ADSC9   0,,PR0                   cn=1,n=1
         2 000104   000003 000001 3                  ADSC9   3                        cn=0,n=1
         2 000105   000110 601000 2                  TNZ     s:355

      121      352    1        (SUBSTR (LOGON.TXT, 0, 1) = '/') )
      122      353    1   THEN CALL BCSCAN ALTRET (BADID);  /* Get start of logon */

    353  2 000106   000627 701000 2                  TSX1    BCSCAN
         2 000107   000623 702000 2                  TSX2    BADID

PL6.E3A0      #001=KLH$SGSCAN File=KLH$SGSCAN.:E05TSI                            WED 07/30/97 00:48 Page:23   
      123      354
      124      355    1   IF (SUBSTR (LOGON.TXT, I, 1) = ' ')

    355  2 000110   200003 470500                    LDP0    @LOGON,,AUTO
         2 000111   200014 235100                    LDA     I,,AUTO
         2 000112   040000 106505                    CMPC    fill='040'O
         2 000113   000000 200001                    ADSC9   0,A,PR0                  cn=1,n=1
         2 000114   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         2 000115   000120 601000 2                  TNZ     s:360

      125      356    1   THEN CALL NBSCAN ALTRET (BADID); /* Skip excess blanks */

    356  2 000116   000652 701000 2                  TSX1    NBSCAN
         2 000117   000623 702000 2                  TSX2    BADID

      126      357
      127      358        /* Now we are at the begining of the account, pick it up. */
      128      359
      129      360    1   IF (SUBSTR (LOGON.TXT, I, 1) = ',')

    360  2 000120   200003 470500                    LDP0    @LOGON,,AUTO
         2 000121   200014 235100                    LDA     I,,AUTO
         2 000122   040000 106505                    CMPC    fill='040'O
         2 000123   000000 200001                    ADSC9   0,A,PR0                  cn=1,n=1
         2 000124   000004 000001 3                  ADSC9   4                        cn=0,n=1
         2 000125   000127 601000 2                  TNZ     s:364

      130      361    2   THEN DO; /* Account cant start with a ',' */

      131      362    2      GOTO BADID;

    362  2 000126   000623 710000 2                  TRA     BADID

      132      363    2      END;
      133      364    1   CALL GETNM ALTRET (BADID);  /* That get us the account */

    364  2 000127   000711 701000 2                  TSX1    GETNM
PL6.E3A0      #001=KLH$SGSCAN File=KLH$SGSCAN.:E05TSI                            WED 07/30/97 00:48 Page:24   
         2 000130   000623 702000 2                  TSX2    BADID

      134      365    1   IF (LEN > LENGTHC (ACCT))

    365  2 000131   200016 235100                    LDA     LEN,,AUTO
         2 000132   000011 115007                    CMPA    9,DL
         2 000133   000135 602000 2                  TNC     s:369

      135      366    2   THEN DO;

      136      367    2      GOTO BADID;

    367  2 000134   000623 710000 2                  TRA     BADID

      137      368    2      END;
      138      369    1   ACCT = TNAME; /* It's good, let's use it. */

    369  2 000135   200004 470500                    LDP0    @ACCT,,AUTO
         2 000136   040100 100500                    MLR     fill='040'O
         2 000137   200020 000010                    ADSC9   TNAME,,AUTO              cn=0,n=8
         2 000140   000000 000010                    ADSC9   0,,PR0                   cn=0,n=8

      139      370
      140      371        /* Now get the username */
      141      372
      142      373    1   IF ((I < LOGON_LEN) AND

    373  2 000141   200014 236100                    LDQ     I,,AUTO
         2 000142   200017 116100                    CMPQ    LOGON_LEN,,AUTO
         2 000143   000223 603000 2                  TRC     s:409
         2 000144   200003 471500                    LDP1    @LOGON,,AUTO
         2 000145   040000 106506                    CMPC    fill='040'O
         2 000146   100000 200001                    ADSC9   0,Q,PR1                  cn=1,n=1
         2 000147   000004 000001 3                  ADSC9   4                        cn=0,n=1
         2 000150   000223 601000 2                  TNZ     s:409

      143      374    1        (SUBSTR (LOGON.TXT, I, 1) = ',') )
PL6.E3A0      #001=KLH$SGSCAN File=KLH$SGSCAN.:E05TSI                            WED 07/30/97 00:48 Page:25   
      144      375    2   THEN DO; /* Get the uname it's next */

      145      376    2      CALL GETNMN ALTRET (BADID);

    376  2 000151   000673 701000 2                  TSX1    GETNMN
         2 000152   000623 702000 2                  TSX2    BADID

      146      377    2      IF (LEN > LENGTHC (NAME.T))

    377  2 000153   200016 235100                    LDA     LEN,,AUTO
         2 000154   000015 115007                    CMPA    13,DL
         2 000155   000157 602000 2                  TNC     s:381

      147      378    3      THEN DO;

      148      379    3         GOTO BADID;

    379  2 000156   000623 710000 2                  TRA     BADID

      149      380    3         END;
      150      381    2      IF (LEN > 0)

    381  2 000157   000000 115003                    CMPA    0,DU
         2 000160   000170 600000 2                  TZE     s:389

      151      382    3      THEN DO; /* We have a good username, let's use it. */

      152      383    3         NAME.C = LEN;

    383  2 000161   200005 470500                    LDP0    @NAME,,AUTO
         2 000162   200016 236100                    LDQ     LEN,,AUTO
         2 000163   000033 736000                    QLS     27
         2 000164   000000 552140                    STBQ    0,'40'O,PR0

      153      384    3         NAME.T = TNAME;

    384  2 000165   040100 100500                    MLR     fill='040'O
PL6.E3A0      #001=KLH$SGSCAN File=KLH$SGSCAN.:E05TSI                            WED 07/30/97 00:48 Page:26   
         2 000166   200020 000014                    ADSC9   TNAME,,AUTO              cn=0,n=12
         2 000167   000000 200014                    ADSC9   0,,PR0                   cn=1,n=12

      154      385    3         END;

      155      386
      156      387        /* Now get the password */
      157      388
      158      389    2      IF ((I < LOGON_LEN) AND

    389  2 000170   200014 236100                    LDQ     I,,AUTO
         2 000171   200017 116100                    CMPQ    LOGON_LEN,,AUTO
         2 000172   000223 603000 2                  TRC     s:409
         2 000173   200003 470500                    LDP0    @LOGON,,AUTO
         2 000174   040000 106506                    CMPC    fill='040'O
         2 000175   000000 200001                    ADSC9   0,Q,PR0                  cn=1,n=1
         2 000176   000004 000001 3                  ADSC9   4                        cn=0,n=1
         2 000177   000223 601000 2                  TNZ     s:409

      159      390    2           (SUBSTR (LOGON.TXT, I, 1) = ',') )
      160      391    3      THEN DO;

      161      392    3         CALL GETNMN ALTRET (BADID);

    392  2 000200   000673 701000 2                  TSX1    GETNMN
         2 000201   000623 702000 2                  TSX2    BADID

      162      393    3         IF (LEN > LENGTHC (PW))

    393  2 000202   200016 235100                    LDA     LEN,,AUTO
         2 000203   000011 115007                    CMPA    9,DL
         2 000204   000206 602000 2                  TNC     s:397

      163      394    4         THEN DO;

      164      395    4            GOTO BADID;

PL6.E3A0      #001=KLH$SGSCAN File=KLH$SGSCAN.:E05TSI                            WED 07/30/97 00:48 Page:27   
    395  2 000205   000623 710000 2                  TRA     BADID

      165      396    4            END;
      166      397    3         PW = TNAME;  /* The password checks out, let's use it */

    397  2 000206   200006 470500                    LDP0    @PW,,AUTO
         2 000207   040100 100500                    MLR     fill='040'O
         2 000210   200020 000010                    ADSC9   TNAME,,AUTO              cn=0,n=8
         2 000211   000000 000010                    ADSC9   0,,PR0                   cn=0,n=8

      167      398    3         IF ((I < LOGON_LEN) AND

    398  2 000212   200014 236100                    LDQ     I,,AUTO
         2 000213   200017 116100                    CMPQ    LOGON_LEN,,AUTO
         2 000214   000223 603000 2                  TRC     s:409
         2 000215   200003 471500                    LDP1    @LOGON,,AUTO
         2 000216   040000 106506                    CMPC    fill='040'O
         2 000217   100000 200001                    ADSC9   0,Q,PR1                  cn=1,n=1
         2 000220   000004 000001 3                  ADSC9   4                        cn=0,n=1
         2 000221   000223 601000 2                  TNZ     s:409

      168      399    3              (SUBSTR (LOGON.TXT, I, 1) = ',') )
      169      400    4         THEN DO; /* The logon string must have blanks after it*/

      170      401    4            GOTO BADID;

    401  2 000222   000623 710000 2                  TRA     BADID

      171      402    4            END;
      172      403    3         END;
      173      404    2      END; /* Of doing the password stuff. */
      174      405
      175      406        /* Now lets start scanning for the options... */
      176      407
      177      408        /* First convert the whole line to uppercase for the parsing. */
      178      409    1   CALL XLATE (XLOGON, B$XL_UPPER_UR, LOGON.TXT);

PL6.E3A0      #001=KLH$SGSCAN File=KLH$SGSCAN.:E05TSI                            WED 07/30/97 00:48 Page:28   
    409  2 000223   200003 470500                    LDP0    @LOGON,,AUTO
         2 000224   000000 471400 xsym               LDP1    B$XL_UPPER_UR$
         2 000225   040100 160500                    MVT     fill='040'O
         2 000226   000000 200213                    ADSC9   0,,PR0                   cn=1,n=139
         2 000227   200024 000213                    ADSC9   XLOGON,,AUTO             cn=0,n=139
         2 000230   100000 000100                    ARG     0,,PR1

      179      410    1   SUBSTR(XLOGON,LOGON_LEN,LENGTHC(LOGON.TXT)-LOGON_LEN) = ' ';

    410  2 000231   200017 720100                    LXL0    LOGON_LEN,,AUTO
         2 000232   777564 620010                    EAX0    -140,X0
         2 000233   777777 660003                    ERX0    -1,DU
         2 000234   200017 235100                    LDA     LOGON_LEN,,AUTO
         2 000235   040145 100400                    MLR     fill='040'O
         2 000236   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         2 000237   200024 000010                    ADSC9   XLOGON,A,AUTO            cn=0,n=*X0

      180      411
      181      412    1   CALL NBSCAN ALTRET (JUSTRET);

    412  2 000240   000652 701000 2                  TSX1    NBSCAN
         2 000241   000616 702000 2                  TSX2    JUSTRET

      182      413    2   DO WHILE (I < LOGON_LEN);

    413  2 000242   200014 236100                    LDQ     I,,AUTO
         2 000243   200017 116100                    CMPQ    LOGON_LEN,,AUTO
         2 000244   000616 603000 2                  TRC     JUSTRET

      183      414    3      DO SELECT (SUBSTR (XLOGON, I, 1));

    414  2 000245   200014 235100                    LDA     I,,AUTO
         2 000246   040000 106505                    CMPC    fill='040'O
         2 000247   200024 000001                    ADSC9   XLOGON,A,AUTO            cn=0,n=1
         2 000250   000005 000001 3                  ADSC9   5                        cn=0,n=1
         2 000251   000260 602000 2                  TNC     s:414+11
         2 000252   000444 600000 2                  TZE     s:460
PL6.E3A0      #001=KLH$SGSCAN File=KLH$SGSCAN.:E05TSI                            WED 07/30/97 00:48 Page:29   
         2 000253   040000 106505                    CMPC    fill='040'O
         2 000254   200024 000001                    ADSC9   XLOGON,A,AUTO            cn=0,n=1
         2 000255   000006 000001 3                  ADSC9   6                        cn=0,n=1
         2 000256   000577 601000 2                  TNZ     s:501
         2 000257   000340 710000 2                  TRA     s:436
         2 000260   040000 106505                    CMPC    fill='040'O
         2 000261   200024 000001                    ADSC9   XLOGON,A,AUTO            cn=0,n=1
         2 000262   000007 000001 3                  ADSC9   7                        cn=0,n=1
         2 000263   000577 601000 2                  TNZ     s:501
         2 000264   000265 710000 2                  TRA     s:416

      184      415    3         SELECT ('H');

      185      416    3         I = I + 1;

    416  2 000265   000001 035007                    ADLA    1,DL
         2 000266   200014 755100                    STA     I,,AUTO

      186      417    3         IF (SUBSTR (XLOGON, I, 1) = 'O') THEN I = I + 1;

    417  2 000267   040000 106505                    CMPC    fill='040'O
         2 000270   200024 000001                    ADSC9   XLOGON,A,AUTO            cn=0,n=1
         2 000271   000010 000001 3                  ADSC9   8                        cn=0,n=1
         2 000272   000275 601000 2                  TNZ     s:418

    417  2 000273   000001 035007                    ADLA    1,DL
         2 000274   200014 755100                    STA     I,,AUTO

      187      418    3         IF (SUBSTR (XLOGON, I, 1) = 'S') THEN I = I + 1;

    418  2 000275   040000 106505                    CMPC    fill='040'O
         2 000276   200024 000001                    ADSC9   XLOGON,A,AUTO            cn=0,n=1
         2 000277   000011 000001 3                  ADSC9   9                        cn=0,n=1
         2 000300   000303 601000 2                  TNZ     s:419

    418  2 000301   000001 035007                    ADLA    1,DL
         2 000302   200014 755100                    STA     I,,AUTO
PL6.E3A0      #001=KLH$SGSCAN File=KLH$SGSCAN.:E05TSI                            WED 07/30/97 00:48 Page:30   

      188      419    3         IF (SUBSTR (XLOGON, I, 1) = 'T') THEN I = I + 1;

    419  2 000303   040000 106505                    CMPC    fill='040'O
         2 000304   200024 000001                    ADSC9   XLOGON,A,AUTO            cn=0,n=1
         2 000305   000012 000001 3                  ADSC9   10                       cn=0,n=1
         2 000306   000311 601000 2                  TNZ     s:420

    419  2 000307   000001 035007                    ADLA    1,DL
         2 000310   200014 755100                    STA     I,,AUTO

      189      420    3         IF (I >= LOGON_LEN)

    420  2 000311   200014 236100                    LDQ     I,,AUTO
         2 000312   200017 116100                    CMPQ    LOGON_LEN,,AUTO
         2 000313   000315 602000 2                  TNC     s:424

      190      421    4         THEN DO;

      191      422    4            GOTO BADOPT;

    422  2 000314   000617 710000 2                  TRA     BADOPT

      192      423    4            END;
      193      424    3         CALL NBSCAN ALTRET (BADOPT);

    424  2 000315   000652 701000 2                  TSX1    NBSCAN
         2 000316   000617 702000 2                  TSX2    BADOPT

      194      425    3         IF (SUBSTR (XLOGON, I, 1) ~= '=')

    425  2 000317   200014 235100                    LDA     I,,AUTO
         2 000320   040000 106505                    CMPC    fill='040'O
         2 000321   200024 000001                    ADSC9   XLOGON,A,AUTO            cn=0,n=1
         2 000322   000013 000001 3                  ADSC9   11                       cn=0,n=1
         2 000323   000325 600000 2                  TZE     s:429

PL6.E3A0      #001=KLH$SGSCAN File=KLH$SGSCAN.:E05TSI                            WED 07/30/97 00:48 Page:31   
      195      426    4         THEN DO;

      196      427    4            GOTO BADOPT;

    427  2 000324   000617 710000 2                  TRA     BADOPT

      197      428    4            END;
      198      429    3         CALL GETNMN ALTRET (BADOPT);

    429  2 000325   000673 701000 2                  TSX1    GETNMN
         2 000326   000617 702000 2                  TSX2    BADOPT

      199      430    3         IF (LEN > LENGTHC (HOST))

    430  2 000327   200016 235100                    LDA     LEN,,AUTO
         2 000330   000011 115007                    CMPA    9,DL
         2 000331   000333 602000 2                  TNC     s:434

      200      431    4         THEN DO;

      201      432    4            GOTO BADOPT;

    432  2 000332   000617 710000 2                  TRA     BADOPT

      202      433    4            END;
      203      434    3         HOST = TNAME; /* We have a valid host, let's use it. */

    434  2 000333   200011 470500                    LDP0    @HOST,,AUTO
         2 000334   040100 100500                    MLR     fill='040'O
         2 000335   200020 000010                    ADSC9   TNAME,,AUTO              cn=0,n=8
         2 000336   000000 000010                    ADSC9   0,,PR0                   cn=0,n=8
         2 000337   000600 710000 2                  TRA     s:503

      204      435    3         SELECT ('P');

      205      436    3         I = I + 1;

PL6.E3A0      #001=KLH$SGSCAN File=KLH$SGSCAN.:E05TSI                            WED 07/30/97 00:48 Page:32   
    436  2 000340   000001 035007                    ADLA    1,DL
         2 000341   200014 755100                    STA     I,,AUTO

      206      437    3         IF (SUBSTR (XLOGON, I, 1) = 'R') THEN I = I + 1;

    437  2 000342   040000 106505                    CMPC    fill='040'O
         2 000343   200024 000001                    ADSC9   XLOGON,A,AUTO            cn=0,n=1
         2 000344   000014 000001 3                  ADSC9   12                       cn=0,n=1
         2 000345   000350 601000 2                  TNZ     s:438

    437  2 000346   000001 035007                    ADLA    1,DL
         2 000347   200014 755100                    STA     I,,AUTO

      207      438    3         IF (SUBSTR (XLOGON, I, 1) = 'O') THEN I = I + 1;

    438  2 000350   040000 106505                    CMPC    fill='040'O
         2 000351   200024 000001                    ADSC9   XLOGON,A,AUTO            cn=0,n=1
         2 000352   000010 000001 3                  ADSC9   8                        cn=0,n=1
         2 000353   000356 601000 2                  TNZ     s:439

    438  2 000354   000001 035007                    ADLA    1,DL
         2 000355   200014 755100                    STA     I,,AUTO

      208      439    3         IF (SUBSTR (XLOGON, I, 1) = 'F') THEN I = I + 1;

    439  2 000356   040000 106505                    CMPC    fill='040'O
         2 000357   200024 000001                    ADSC9   XLOGON,A,AUTO            cn=0,n=1
         2 000360   000015 000001 3                  ADSC9   13                       cn=0,n=1
         2 000361   000364 601000 2                  TNZ     s:440

    439  2 000362   000001 035007                    ADLA    1,DL
         2 000363   200014 755100                    STA     I,,AUTO

      209      440    3         IF (SUBSTR (XLOGON, I, 1) = 'I') THEN I = I + 1;

    440  2 000364   040000 106505                    CMPC    fill='040'O
         2 000365   200024 000001                    ADSC9   XLOGON,A,AUTO            cn=0,n=1
PL6.E3A0      #001=KLH$SGSCAN File=KLH$SGSCAN.:E05TSI                            WED 07/30/97 00:48 Page:33   
         2 000366   000016 000001 3                  ADSC9   14                       cn=0,n=1
         2 000367   000372 601000 2                  TNZ     s:441

    440  2 000370   000001 035007                    ADLA    1,DL
         2 000371   200014 755100                    STA     I,,AUTO

      210      441    3         IF (SUBSTR (XLOGON, I, 1) = 'L') THEN I = I + 1;

    441  2 000372   040000 106505                    CMPC    fill='040'O
         2 000373   200024 000001                    ADSC9   XLOGON,A,AUTO            cn=0,n=1
         2 000374   000017 000001 3                  ADSC9   15                       cn=0,n=1
         2 000375   000400 601000 2                  TNZ     s:442

    441  2 000376   000001 035007                    ADLA    1,DL
         2 000377   200014 755100                    STA     I,,AUTO

      211      442    3         IF (SUBSTR (XLOGON, I, 1) = 'E') THEN I = I + 1;

    442  2 000400   040000 106505                    CMPC    fill='040'O
         2 000401   200024 000001                    ADSC9   XLOGON,A,AUTO            cn=0,n=1
         2 000402   000020 000001 3                  ADSC9   16                       cn=0,n=1
         2 000403   000406 601000 2                  TNZ     s:443

    442  2 000404   000001 035007                    ADLA    1,DL
         2 000405   200014 755100                    STA     I,,AUTO

      212      443    3         IF (I >= LOGON_LEN)

    443  2 000406   200014 236100                    LDQ     I,,AUTO
         2 000407   200017 116100                    CMPQ    LOGON_LEN,,AUTO
         2 000410   000412 602000 2                  TNC     s:447

      213      444    4         THEN DO;

      214      445    4            GOTO BADOPT;

    445  2 000411   000617 710000 2                  TRA     BADOPT
PL6.E3A0      #001=KLH$SGSCAN File=KLH$SGSCAN.:E05TSI                            WED 07/30/97 00:48 Page:34   

      215      446    4            END;
      216      447    3         CALL NBSCAN ALTRET (BADOPT);

    447  2 000412   000652 701000 2                  TSX1    NBSCAN
         2 000413   000617 702000 2                  TSX2    BADOPT

      217      448    3         IF (SUBSTR (XLOGON, I, 1) ~= '=')

    448  2 000414   200014 235100                    LDA     I,,AUTO
         2 000415   040000 106505                    CMPC    fill='040'O
         2 000416   200024 000001                    ADSC9   XLOGON,A,AUTO            cn=0,n=1
         2 000417   000013 000001 3                  ADSC9   11                       cn=0,n=1
         2 000420   000422 600000 2                  TZE     s:452

      218      449    4         THEN DO;

      219      450    4            GOTO BADOPT;

    450  2 000421   000617 710000 2                  TRA     BADOPT

      220      451    4            END;
      221      452    3         CALL GETNMN ALTRET (BADOPT);

    452  2 000422   000673 701000 2                  TSX1    GETNMN
         2 000423   000617 702000 2                  TSX2    BADOPT

      222      453    3         IF (LEN > LENGTHC (PRO.T))

    453  2 000424   200016 235100                    LDA     LEN,,AUTO
         2 000425   000014 115007                    CMPA    12,DL
         2 000426   000430 602000 2                  TNC     s:457

      223      454    4         THEN DO;

      224      455    4            GOTO BADOPT;

PL6.E3A0      #001=KLH$SGSCAN File=KLH$SGSCAN.:E05TSI                            WED 07/30/97 00:48 Page:35   
    455  2 000427   000617 710000 2                  TRA     BADOPT

      225      456    4            END;
      226      457    3         PRO.C = LEN;

    457  2 000430   200007 470500                    LDP0    @PRO,,AUTO
         2 000431   200016 236100                    LDQ     LEN,,AUTO
         2 000432   000033 736000                    QLS     27
         2 000433   000000 552140                    STBQ    0,'40'O,PR0

      227      458    3         CALL XLATE (SUBSTR (PRO.T, 0, LEN), B$XL_UPPER_UR, SUBSTR (TNAME, 0, LEN) );

    458  2 000434   000000 620005                    EAX0    0,AL
         2 000435   000000 471400 xsym               LDP1    B$XL_UPPER_UR$
         2 000436   200016 721100                    LXL1    LEN,,AUTO
         2 000437   040140 160540                    MVT     fill='040'O
         2 000440   200020 000010                    ADSC9   TNAME,,AUTO              cn=0,n=*X0
         2 000441   000000 200011                    ADSC9   0,,PR0                   cn=1,n=*X1
         2 000442   100000 000100                    ARG     0,,PR1
         2 000443   000600 710000 2                  TRA     s:503

      228      459    3         SELECT ('N');

      229      460    3         I = I + 1;

    460  2 000444   000001 035007                    ADLA    1,DL
         2 000445   200014 755100                    STA     I,,AUTO

      230      461    3         IF (SUBSTR (XLOGON, I, 1) = 'O') THEN I = I + 1;

    461  2 000446   040000 106505                    CMPC    fill='040'O
         2 000447   200024 000001                    ADSC9   XLOGON,A,AUTO            cn=0,n=1
         2 000450   000010 000001 3                  ADSC9   8                        cn=0,n=1
         2 000451   000454 601000 2                  TNZ     s:462

    461  2 000452   000001 035007                    ADLA    1,DL
         2 000453   200014 755100                    STA     I,,AUTO
PL6.E3A0      #001=KLH$SGSCAN File=KLH$SGSCAN.:E05TSI                            WED 07/30/97 00:48 Page:36   

      231      462    3         IF (SUBSTR (XLOGON, I, 1) = 'S')

    462  2 000454   040000 106505                    CMPC    fill='040'O
         2 000455   200024 000001                    ADSC9   XLOGON,A,AUTO            cn=0,n=1
         2 000456   000011 000001 3                  ADSC9   9                        cn=0,n=1
         2 000457   000522 601000 2                  TNZ     s:479

      232      463    4         THEN DO;

      233      464    4            I = I + 1;

    464  2 000460   000001 035007                    ADLA    1,DL
         2 000461   200014 755100                    STA     I,,AUTO

      234      465    4            IF (SUBSTR (XLOGON, I, 1) = 'E') THEN I = I + 1;

    465  2 000462   040000 106505                    CMPC    fill='040'O
         2 000463   200024 000001                    ADSC9   XLOGON,A,AUTO            cn=0,n=1
         2 000464   000020 000001 3                  ADSC9   16                       cn=0,n=1
         2 000465   000470 601000 2                  TNZ     s:466

    465  2 000466   000001 035007                    ADLA    1,DL
         2 000467   200014 755100                    STA     I,,AUTO

      235      466    4            IF (SUBSTR (XLOGON, I, 1) = 'T') THEN I = I + 1;

    466  2 000470   040000 106505                    CMPC    fill='040'O
         2 000471   200024 000001                    ADSC9   XLOGON,A,AUTO            cn=0,n=1
         2 000472   000012 000001 3                  ADSC9   10                       cn=0,n=1
         2 000473   000476 601000 2                  TNZ     s:467

    466  2 000474   000001 035007                    ADLA    1,DL
         2 000475   200014 755100                    STA     I,,AUTO

      236      467    4            IF (SUBSTR (XLOGON, I, 1) = 'U') THEN I = I + 1;

PL6.E3A0      #001=KLH$SGSCAN File=KLH$SGSCAN.:E05TSI                            WED 07/30/97 00:48 Page:37   
    467  2 000476   040000 106505                    CMPC    fill='040'O
         2 000477   200024 000001                    ADSC9   XLOGON,A,AUTO            cn=0,n=1
         2 000500   000021 000001 3                  ADSC9   17                       cn=0,n=1
         2 000501   000504 601000 2                  TNZ     s:468

    467  2 000502   000001 035007                    ADLA    1,DL
         2 000503   200014 755100                    STA     I,,AUTO

      237      468    4            IF (SUBSTR (XLOGON, I, 1) = 'P') THEN I = I + 1;

    468  2 000504   040000 106505                    CMPC    fill='040'O
         2 000505   200024 000001                    ADSC9   XLOGON,A,AUTO            cn=0,n=1
         2 000506   000006 000001 3                  ADSC9   6                        cn=0,n=1
         2 000507   000512 601000 2                  TNZ     s:469

    468  2 000510   000001 035007                    ADLA    1,DL
         2 000511   200014 755100                    STA     I,,AUTO

      238      469    4            IF ( I > LOGON_LEN)

    469  2 000512   200017 236100                    LDQ     LOGON_LEN,,AUTO
         2 000513   200014 116100                    CMPQ    I,,AUTO
         2 000514   000516 603000 2                  TRC     s:477

      239      470    5            THEN DO;

      240      471    5               GOTO BADOPT;

    471  2 000515   000617 710000 2                  TRA     BADOPT

      241      472    5               END;
      242      473                          /* If there was a syntax error in spelling the
      243      474                             option, it will get caught next time through
      244      475                             the loop by the case else.
      245      476                          */
      246      477    4            NOSETUP = '1'B;

PL6.E3A0      #001=KLH$SGSCAN File=KLH$SGSCAN.:E05TSI                            WED 07/30/97 00:48 Page:38   
    477  2 000516   400000 236003                    LDQ     -131072,DU
         2 000517   200012 470500                    LDP0    @NOSETUP,,AUTO
         2 000520   000000 756100                    STQ     0,,PR0

      247      478    4            END; /* Setup stuff */

    478  2 000521   000600 710000 2                  TRA     s:503

      248      479    3         ELSE IF (SUBSTR (XLOGON, I, 1) = 'H')

    479  2 000522   040000 106505                    CMPC    fill='040'O
         2 000523   200024 000001                    ADSC9   XLOGON,A,AUTO            cn=0,n=1
         2 000524   000007 000001 3                  ADSC9   7                        cn=0,n=1
         2 000525   000576 601000 2                  TNZ     s:498

      249      480    4            THEN DO;

      250      481    4               I = I + 1;

    481  2 000526   000001 035007                    ADLA    1,DL
         2 000527   200014 755100                    STA     I,,AUTO

      251      482    4               IF (SUBSTR (XLOGON, I, 1) = 'E') THEN I = I + 1;

    482  2 000530   040000 106505                    CMPC    fill='040'O
         2 000531   200024 000001                    ADSC9   XLOGON,A,AUTO            cn=0,n=1
         2 000532   000020 000001 3                  ADSC9   16                       cn=0,n=1
         2 000533   000536 601000 2                  TNZ     s:483

    482  2 000534   000001 035007                    ADLA    1,DL
         2 000535   200014 755100                    STA     I,,AUTO

      252      483    4               IF (SUBSTR (XLOGON, I, 1) = 'A') THEN I = I + 1;

    483  2 000536   040000 106505                    CMPC    fill='040'O
         2 000537   200024 000001                    ADSC9   XLOGON,A,AUTO            cn=0,n=1
         2 000540   000022 000001 3                  ADSC9   18                       cn=0,n=1
PL6.E3A0      #001=KLH$SGSCAN File=KLH$SGSCAN.:E05TSI                            WED 07/30/97 00:48 Page:39   
         2 000541   000544 601000 2                  TNZ     s:484

    483  2 000542   000001 035007                    ADLA    1,DL
         2 000543   200014 755100                    STA     I,,AUTO

      253      484    4               IF (SUBSTR (XLOGON, I, 1) = 'D') THEN I = I + 1;

    484  2 000544   040000 106505                    CMPC    fill='040'O
         2 000545   200024 000001                    ADSC9   XLOGON,A,AUTO            cn=0,n=1
         2 000546   000023 000001 3                  ADSC9   19                       cn=0,n=1
         2 000547   000552 601000 2                  TNZ     s:485

    484  2 000550   000001 035007                    ADLA    1,DL
         2 000551   200014 755100                    STA     I,,AUTO

      254      485    4               IF (SUBSTR (XLOGON, I, 1) = 'E') THEN I = I + 1;

    485  2 000552   040000 106505                    CMPC    fill='040'O
         2 000553   200024 000001                    ADSC9   XLOGON,A,AUTO            cn=0,n=1
         2 000554   000020 000001 3                  ADSC9   16                       cn=0,n=1
         2 000555   000560 601000 2                  TNZ     s:486

    485  2 000556   000001 035007                    ADLA    1,DL
         2 000557   200014 755100                    STA     I,,AUTO

      255      486    4               IF (SUBSTR (XLOGON, I, 1) = 'R') THEN I = I + 1;

    486  2 000560   040000 106505                    CMPC    fill='040'O
         2 000561   200024 000001                    ADSC9   XLOGON,A,AUTO            cn=0,n=1
         2 000562   000014 000001 3                  ADSC9   12                       cn=0,n=1
         2 000563   000566 601000 2                  TNZ     s:487

    486  2 000564   000001 035007                    ADLA    1,DL
         2 000565   200014 755100                    STA     I,,AUTO

      256      487    4               IF ( I > LOGON_LEN)

PL6.E3A0      #001=KLH$SGSCAN File=KLH$SGSCAN.:E05TSI                            WED 07/30/97 00:48 Page:40   
    487  2 000566   200017 236100                    LDQ     LOGON_LEN,,AUTO
         2 000567   200014 116100                    CMPQ    I,,AUTO
         2 000570   000572 603000 2                  TRC     s:495

      257      488    5               THEN DO;

      258      489    5                  GOTO BADOPT;

    489  2 000571   000617 710000 2                  TRA     BADOPT

      259      490    5                  END;
      260      491                          /* If there was a syntax error in spelling the
      261      492                             option, it will get caught next time through
      262      493                             the loop by the case else.
      263      494                          */
      264      495    4               NOHEADER = '1'B;

    495  2 000572   400000 236003                    LDQ     -131072,DU
         2 000573   200013 470500                    LDP0    @NOHEADER,,AUTO
         2 000574   000000 756100                    STQ     0,,PR0

      265      496    4               END; /* Header stuff */

    496  2 000575   000600 710000 2                  TRA     s:503

      266      497    4            ELSE DO;

      267      498    4               GOTO BADOPT;  /* Ns is the min abbrev */

    498  2 000576   000617 710000 2                  TRA     BADOPT

      268      499    4               END;
      269      500    3         SELECT (ELSE);

      270      501    3      GOTO BADOPT;

    501  2 000577   000617 710000 2                  TRA     BADOPT
PL6.E3A0      #001=KLH$SGSCAN File=KLH$SGSCAN.:E05TSI                            WED 07/30/97 00:48 Page:41   

      271      502    3         END; /* Of the do select */

      272      503    2   CALL NBSCAN ALTRET (JUSTRET);

    503  2 000600   000652 701000 2                  TSX1    NBSCAN
         2 000601   000616 702000 2                  TSX2    JUSTRET

      273      504    2   IF (SUBSTR (XLOGON, I, 1) = ',')

    504  2 000602   200014 235100                    LDA     I,,AUTO
         2 000603   040000 106505                    CMPC    fill='040'O
         2 000604   200024 000001                    ADSC9   XLOGON,A,AUTO            cn=0,n=1
         2 000605   000004 000001 3                  ADSC9   4                        cn=0,n=1
         2 000606   000613 601000 2                  TNZ     s:509

      274      505    3   THEN DO;

      275      506    3      I = I + 1; /* Scan past the comma */

    506  2 000607   000001 035007                    ADLA    1,DL
         2 000610   200014 755100                    STA     I,,AUTO

      276      507    3      CALL NBSCAN ALTRET (BADOPT);

    507  2 000611   000652 701000 2                  TSX1    NBSCAN
         2 000612   000617 702000 2                  TSX2    BADOPT

      277      508    3      END;

      278      509    2      END; /* Do while i is less than the string length */

    509  2 000613   200014 236100                    LDQ     I,,AUTO
         2 000614   200017 116100                    CMPQ    LOGON_LEN,,AUTO
         2 000615   000245 602000 2                  TNC     s:414

      279      510
PL6.E3A0      #001=KLH$SGSCAN File=KLH$SGSCAN.:E05TSI                            WED 07/30/97 00:48 Page:42   
      280      511    1   JUSTRET: RETURN;

    511  2 000616   000000 702200 xent  JUSTRET      TSX2  ! X66_ARET

      281      512
      282      513    1   BADOPT: ERR = %E$SGSYN;

    513  2 000617   002275 235007       BADOPT       LDA     1213,DL
         2 000620   200010 470500                    LDP0    @ERR,,AUTO
         2 000621   000000 755100                    STA     0,,PR0

      283      514    1   ALTRETURN;

    514  2 000622   000000 702200 xent               TSX2  ! X66_AALT

      284      515
      285      516    1   BADID: ERR = %E$BDID;

    516  2 000623   002267 235007       BADID        LDA     1207,DL
         2 000624   200010 470500                    LDP0    @ERR,,AUTO
         2 000625   000000 755100                    STA     0,,PR0

      286      517    1   ALTRETURN;

    517  2 000626   000000 702200 xent               TSX2  ! X66_AALT

      287      518        %EJECT;
PL6.E3A0      #001=KLH$SGSCAN File=KLH$SGSCAN.:E05TSI                            WED 07/30/97 00:48 Page:43   
      288      519    1   BCSCAN: PROC ALTRET;

    519  2 000627   200072 741300       BCSCAN       STX1  ! XLOGON+38,,AUTO

      289      520        /*I* NAME:        BCSCAN
      290      521             PURPOSE:     To set I to next ',' or ' ' or end-of-line
      291      522             DESCRIPTION: BCSCAN returns the current or next ' ' or ',' index in I
      292      523                          or returns LOGON_LEN if no ',' or ' ' exists
      293      524        */
      294      525    3   DO WHILE ('1'B);

      295      526    3      IF ((LOGON_LEN = I) OR

    526  2 000630   200017 236100                    LDQ     LOGON_LEN,,AUTO
         2 000631   200014 116100                    CMPQ    I,,AUTO
         2 000632   000645 600000 2                  TZE     s:529
         2 000633   200003 470500                    LDP0    @LOGON,,AUTO
         2 000634   200014 235100                    LDA     I,,AUTO
         2 000635   040000 106505                    CMPC    fill='040'O
         2 000636   000000 200001                    ADSC9   0,A,PR0                  cn=1,n=1
         2 000637   000004 000001 3                  ADSC9   4                        cn=0,n=1
         2 000640   000645 600000 2                  TZE     s:529
         2 000641   040000 106505                    CMPC    fill='040'O
         2 000642   000000 200001                    ADSC9   0,A,PR0                  cn=1,n=1
         2 000643   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         2 000644   000647 601000 2                  TNZ     s:530

      296      527    3           (SUBSTR (LOGON.TXT, I, 1) = ',') OR
      297      528    3           (SUBSTR (LOGON.TXT, I, 1) = ' ') )
      298      529    3      THEN RETURN;

    529  2 000645   200072 221300                    LDX1  ! XLOGON+38,,AUTO
         2 000646   000001 702211                    TSX2  ! 1,X1

      299      530    3      ELSE I = I + 1;

    530  2 000647   000001 035007                    ADLA    1,DL
PL6.E3A0      #001=KLH$SGSCAN File=KLH$SGSCAN.:E05TSI                            WED 07/30/97 00:48 Page:44   
         2 000650   200014 755100                    STA     I,,AUTO

      300      531    3      END;

    531  2 000651   000630 710000 2                  TRA     s:526

      301      532    2   END BCSCAN;
      302      533        %EJECT;
PL6.E3A0      #001=KLH$SGSCAN File=KLH$SGSCAN.:E05TSI                            WED 07/30/97 00:48 Page:45   
      303      534    1   NBSCAN: PROC ALTRET;

    534  2 000652   200072 741300       NBSCAN       STX1  ! XLOGON+38,,AUTO

      304      535        /*I* NAME:        NBSCAN
      305      536             PURPOSE:     To scan to next non-blank character
      306      537             DESCRIPTION: NBSCAN returns in I the current or next non-blank
      307      538                          character index or ALTRETURNs if the rest of the
      308      539                          string is blank or no string is left.
      309      540        */
      310      541    3   DO I = I TO LOGON_LEN - 1;

    541  2 000653   000666 710000 2                  TRA     s:543+2

      311      542    3      IF (SUBSTR (LOGON.TXT, I, 1) ~= ' ') THEN RETURN;

    542  2 000654   200003 470500                    LDP0    @LOGON,,AUTO
         2 000655   200014 235100                    LDA     I,,AUTO
         2 000656   040000 106505                    CMPC    fill='040'O
         2 000657   000000 200001                    ADSC9   0,A,PR0                  cn=1,n=1
         2 000660   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         2 000661   000664 600000 2                  TZE     s:543

    542  2 000662   200072 221300                    LDX1  ! XLOGON+38,,AUTO
         2 000663   000001 702211                    TSX2  ! 1,X1

      312      543    3      END;

    543  2 000664   000001 035007                    ADLA    1,DL
         2 000665   200014 755100                    STA     I,,AUTO
         2 000666   200014 236100                    LDQ     I,,AUTO
         2 000667   200017 116100                    CMPQ    LOGON_LEN,,AUTO
         2 000670   000654 602000 2                  TNC     s:542

      313      544    2   ALTRETURN;

    544  2 000671   200072 221300                    LDX1  ! XLOGON+38,,AUTO
PL6.E3A0      #001=KLH$SGSCAN File=KLH$SGSCAN.:E05TSI                            WED 07/30/97 00:48 Page:46   
         2 000672   000000 702211                    TSX2  ! 0,X1

      314      545    2   END NBSCAN;
      315      546        %EJECT;
PL6.E3A0      #001=KLH$SGSCAN File=KLH$SGSCAN.:E05TSI                            WED 07/30/97 00:48 Page:47   
      316      547    1   GETNMN: PROC ALTRET;

    547  2 000673   200070 741300       GETNMN       STX1  ! XLOGON+36,,AUTO

      317      548        /*I* NAME:        GETNMN
      318      549             PURPOSE:     To return the next lexeme in TNAME with length in LEN
      319      550             DESCRIPTION: GETNMN skips over the current character, any intervening
      320      551                          blanks, and then falls through into GETNM to return
      321      552                          the next lexeme in TNAME with length of TNAME in LEN.
      322      553                          Trailing blanks will then be stripped off leaving I
      323      554                          as index of next non-blank character (or last character
      324      555                          of the string). If no non-blank characters are left,
      325      556                          GETNMN will ALTRETURN.
      326      557        */
      327      558    2   I = I + 1;

    558  2 000674   200014 235100                    LDA     I,,AUTO
         2 000675   000001 035007                    ADLA    1,DL
         2 000676   200014 755100                    STA     I,,AUTO

      328      559    2   IF (I >= LOGON_LEN) THEN ALTRETURN;

    559  2 000677   200014 236100                    LDQ     I,,AUTO
         2 000700   200017 116100                    CMPQ    LOGON_LEN,,AUTO
         2 000701   000703 602000 2                  TNC     s:560

    559  2 000702   000000 702211                    TSX2  ! 0,X1

      329      560    2   CALL NBSCAN

    560  2 000703   000652 701000 2                  TSX1    NBSCAN
         2 000704   000706 702000 2                  TSX2    s:562
         2 000705   000710 710000 2                  TRA     s:562+2

      330      561    3   WHENALTRETURN DO;

      331      562    3      ALTRETURN;
PL6.E3A0      #001=KLH$SGSCAN File=KLH$SGSCAN.:E05TSI                            WED 07/30/97 00:48 Page:48   

    562  2 000706   200070 221300                    LDX1  ! XLOGON+36,,AUTO
         2 000707   000000 702211                    TSX2  ! 0,X1
         2 000710   000712 710000 2                  TRA     s:572

      332      563    3      END;
      333      564
      334      565    2   GETNM: ENTRY ALTRET;

    565  2 000711   200070 741300       GETNM        STX1  ! XLOGON+36,,AUTO

      335      566        /*I* NAME:        GETNM
      336      567             DESCRIPTION: GETNM scans from the current I location looking for
      337      568                          a ' ', ',' or end-of-string. Everything in between is
      338      569                          returned in TNAME with length in LEN. LEN may be returned
      339      570                          as 0.
      340      571        */
      341      572    2   J = I;

    572  2 000712   200014 235100                    LDA     I,,AUTO
         2 000713   200015 755100                    STA     J,,AUTO

      342      573    2   CALL BCSCAN

    573  2 000714   000627 701000 2                  TSX1    BCSCAN
         2 000715   000717 702000 2                  TSX2    s:576
         2 000716   000717 710000 2                  TRA     s:576

      343      574    3   WHENALTRETURN DO;

      344      575    3      END;

      345      576    2   LEN = I - J;

    576  2 000717   200014 236100                    LDQ     I,,AUTO
         2 000720   200015 136100                    SBLQ    J,,AUTO
         2 000721   200016 756100                    STQ     LEN,,AUTO
PL6.E3A0      #001=KLH$SGSCAN File=KLH$SGSCAN.:E05TSI                            WED 07/30/97 00:48 Page:49   

      346      577    2   TNAME = SUBSTR (LOGON.TXT, J, LEN);

    577  2 000722   200003 470500                    LDP0    @LOGON,,AUTO
         2 000723   000000 620006                    EAX0    0,QL
         2 000724   200015 235100                    LDA     J,,AUTO
         2 000725   040100 100545                    MLR     fill='040'O
         2 000726   000000 200010                    ADSC9   0,A,PR0                  cn=1,n=*X0
         2 000727   200020 000020                    ADSC9   TNAME,,AUTO              cn=0,n=16

      347      578    2   IF ((I < LOGON_LEN) AND

    578  2 000730   200014 236100                    LDQ     I,,AUTO
         2 000731   200017 116100                    CMPQ    LOGON_LEN,,AUTO
         2 000732   000742 603000 2                  TRC     s:587
         2 000733   040000 106506                    CMPC    fill='040'O
         2 000734   000000 200001                    ADSC9   0,Q,PR0                  cn=1,n=1
         2 000735   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         2 000736   000742 601000 2                  TNZ     s:587

      348      579    2        (SUBSTR(LOGON.TXT,I,1) = ' ') )
      349      580    3   THEN DO;  /* Position i on the next nonblank */

      350      581    3      CALL NBSCAN

    581  2 000737   000652 701000 2                  TSX1    NBSCAN
         2 000740   000742 702000 2                  TSX2    s:587

      351      582    4      WHENRETURN DO;

      352      583    4         END;

    583  2 000741   000742 710000 2                  TRA     s:587

      353      584    4      WHENALTRETURN DO;

      354      585    4         END;
PL6.E3A0      #001=KLH$SGSCAN File=KLH$SGSCAN.:E05TSI                            WED 07/30/97 00:48 Page:50   

      355      586    3      END;

      356      587    2   RETURN;

    587  2 000742   200070 221300                    LDX1  ! XLOGON+36,,AUTO
         2 000743   000001 702211                    TSX2  ! 1,X1
      357      588    2   END GETNMN;
      358      589    1   END KLH$SGSCAN;

PL6.E3A0      #001=KLH$SGSCAN File=KLH$SGSCAN.:E05TSI                            WED 07/30/97 00:48 Page:51   
--  Include file information  --

   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B$TABLES_C.:E05TOU  cannot be made into a system file and is referenced.
   KL_ERRORS_C.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure KLH$SGSCAN.
PL6.E3A0      #001=KLH$SGSCAN File=KLH$SGSCAN.:E05TSI                            WED 07/30/97 00:48 Page:52   

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     4-0-0/w PTR         r     1 @ACCT                     10-0-0/w PTR         r     1 @ERR
    11-0-0/w PTR         r     1 @HOST                      3-0-0/w PTR         r     1 @LOGON
     5-0-0/w PTR         r     1 @NAME                     13-0-0/w PTR         r     1 @NOHEADER
    12-0-0/w PTR         r     1 @NOSETUP                   7-0-0/w PTR         r     1 @PRO
     6-0-0/w PTR         r     1 @PW                       *0-0-0/c CHAR(8)     r     1 ACCT
    *0-0-0/w UBIN        r     1 ERR                       *0-0-0/c CHAR(8)     r     1 HOST
    14-0-0/w UBIN        r     1 I                         15-0-0/w UBIN        r     1 J
    16-0-0/w UBIN        r     1 LEN                       *0-0-0/c STRC(1260)  r     1 LOGON
    17-0-0/w UBIN        r     1 LOGON_LEN                 *0-0-0/w STRC(117)   r     1 NAME
    *0-0-0/w BIT         r     1 NOHEADER                  *0-0-0/w BIT         r     1 NOSETUP
    *0-0-0/w STRC(108)   r     1 PRO                       *0-0-0/c CHAR(8)     r     1 PW
    20-0-0/c CHAR(16)    r     1 TNAME                     24-0-0/c CHAR(139)   r     1 XLOGON

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 B$XL_UPPER_UR$

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d STRC(4608)  r     1 B$XL_UPPER_UR


   Procedure KLH$SGSCAN requires 484 words for executable code.
PL6.E3A0      #001=KLH$SGSCAN File=KLH$SGSCAN.:E05TSI                            WED 07/30/97 00:48 Page:53   
   Procedure KLH$SGSCAN requires 60 words of local(AUTO) storage.

    No errors detected in file KLH$SGSCAN.:E05TSI    .
PL6.E3A0      #001=KLH$SGSCAN File=KLH$SGSCAN.:E05TSI                            WED 07/30/97 00:48 Page:54   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=KLH$SGSCAN File=KLH$SGSCAN.:E05TSI                            WED 07/30/97 00:48 Page:55   
          MINI XREF LISTING

ACCT
       304**DCL        10--PROC      323<<ASSIGN    341<<ASSIGN    365--IF        369<<ASSIGN
B$XL_UPPER_UR
       218**DCL       409>>CALLBLT   458>>CALLBLT
B$XL_UPPER_UR$
       217**DCL       218--IMP-PTR   409>>CALLBLT   458>>CALLBLT
BADID
       516**LABEL     337--GOTO      353--CALLALT   356--CALLALT   362--GOTO      364--CALLALT   367--GOTO
       376--CALLALT   379--GOTO      392--CALLALT   395--GOTO      401--GOTO
BADOPT
       513**LABEL     422--GOTO      424--CALLALT   427--GOTO      429--CALLALT   432--GOTO      445--GOTO
       447--CALLALT   450--GOTO      452--CALLALT   455--GOTO      471--GOTO      489--GOTO      498--GOTO
       501--GOTO      507--CALLALT
BCSCAN
       519**PROC      353--CALL      573--CALL
ERR
       312**DCL        10--PROC      513<<ASSIGN    516<<ASSIGN
GETNM IN PROCEDURE GETNMN
       565**ENTRY     364--CALL
GETNMN
       547**PROC      376--CALL      392--CALL      429--CALL      452--CALL
HOST
       313**DCL        10--PROC      329<<ASSIGN    430--IF        434<<ASSIGN
I
       316**DCL       332<<ASSIGN    355>>IF        360>>IF        373>>IF        373>>IF        389>>IF
       389>>IF        398>>IF        398>>IF        413>>DOWHILE   414>>DOSELCT   416<<ASSIGN    416>>ASSIGN
       417>>IF        417<<ASSIGN    417>>ASSIGN    418>>IF        418<<ASSIGN    418>>ASSIGN    419>>IF
       419<<ASSIGN    419>>ASSIGN    420>>IF        425>>IF        436<<ASSIGN    436>>ASSIGN    437>>IF
       437<<ASSIGN    437>>ASSIGN    438>>IF        438<<ASSIGN    438>>ASSIGN    439>>IF        439<<ASSIGN
       439>>ASSIGN    440>>IF        440<<ASSIGN    440>>ASSIGN    441>>IF        441<<ASSIGN    441>>ASSIGN
       442>>IF        442<<ASSIGN    442>>ASSIGN    443>>IF        448>>IF        460<<ASSIGN    460>>ASSIGN
       461>>IF        461<<ASSIGN    461>>ASSIGN    462>>IF        464<<ASSIGN    464>>ASSIGN    465>>IF
PL6.E3A0      #001=KLH$SGSCAN File=KLH$SGSCAN.:E05TSI                            WED 07/30/97 00:48 Page:56   
       465<<ASSIGN    465>>ASSIGN    466>>IF        466<<ASSIGN    466>>ASSIGN    467>>IF        467<<ASSIGN
       467>>ASSIGN    468>>IF        468<<ASSIGN    468>>ASSIGN    469>>IF        479>>IF        481<<ASSIGN
       481>>ASSIGN    482>>IF        482<<ASSIGN    482>>ASSIGN    483>>IF        483<<ASSIGN    483>>ASSIGN
       484>>IF        484<<ASSIGN    484>>ASSIGN    485>>IF        485<<ASSIGN    485>>ASSIGN    486>>IF
       486<<ASSIGN    486>>ASSIGN    487>>IF        504>>IF        506<<ASSIGN    506>>ASSIGN    526>>IF
       526>>IF        526>>IF        530<<ASSIGN    530>>ASSIGN    541<<DOINDEX   541>>DOINDEX   542>>IF
       558<<ASSIGN    558>>ASSIGN    559>>IF        572>>ASSIGN    576>>ASSIGN    578>>IF        578>>IF
J
       317**DCL       572<<ASSIGN    576>>ASSIGN    577>>ASSIGN
JUSTRET
       511**LABEL     412--CALLALT   503--CALLALT
LEN
       318**DCL       365>>IF        377>>IF        381>>IF        383>>ASSIGN    393>>IF        430>>IF
       453>>IF        457>>ASSIGN    458>>CALLBLT   458>>CALLBLT   576<<ASSIGN    577>>ASSIGN
LOGON
       301**DCL        10--PROC
LOGON.LEN
       302**DCL       333>>ASSIGN
LOGON.TXT
       303**DCL       335--IF        338>>IF        351>>IF        351>>IF        355>>IF        360>>IF
       373>>IF        389>>IF        398>>IF        409>>CALLBLT   410--ASSIGN    526>>IF        526>>IF
       542>>IF        577>>ASSIGN    578>>IF
LOGON_LEN
       319**DCL       333<<ASSIGN    335>>IF        335>>IF        338>>IF        373>>IF        389>>IF
       398>>IF        410>>ASSIGN    410>>ASSIGN    413>>DOWHILE   420>>IF        443>>IF        469>>IF
       487>>IF        526>>IF        541>>DOINDEX   559>>IF        578>>IF
NAME
       305**DCL        10--PROC
NAME.C
       306**DCL       324<<ASSIGN    344<<ASSIGN    383<<ASSIGN
NAME.T
       307**DCL       325<<ASSIGN    345<<ASSIGN    377--IF        384<<ASSIGN
NBSCAN
       534**PROC      356--CALL      412--CALL      424--CALL      447--CALL      503--CALL      507--CALL
       560--CALL      581--CALL
NOHEADER
PL6.E3A0      #001=KLH$SGSCAN File=KLH$SGSCAN.:E05TSI                            WED 07/30/97 00:48 Page:57   
       315**DCL        10--PROC      331<<ASSIGN    343<<ASSIGN    495<<ASSIGN
NOSETUP
       314**DCL        10--PROC      330<<ASSIGN    342<<ASSIGN    477<<ASSIGN
PRO
       309**DCL        10--PROC
PRO.C
       310**DCL       327<<ASSIGN    347<<ASSIGN    457<<ASSIGN
PRO.T
       311**DCL       328<<ASSIGN    453--IF        458<<CALLBLT
PW
       308**DCL        10--PROC      326<<ASSIGN    346<<ASSIGN    393--IF        397<<ASSIGN
TNAME
       320**DCL       369>>ASSIGN    384>>ASSIGN    397>>ASSIGN    434>>ASSIGN    458>>CALLBLT   577<<ASSIGN
XLOGON
       321**DCL       409<<CALLBLT   410<<ASSIGN    414>>DOSELCT   417>>IF        418>>IF        419>>IF
       425>>IF        437>>IF        438>>IF        439>>IF        440>>IF        441>>IF        442>>IF
       448>>IF        461>>IF        462>>IF        465>>IF        466>>IF        467>>IF        468>>IF
       479>>IF        482>>IF        483>>IF        484>>IF        485>>IF        486>>IF        504>>IF
