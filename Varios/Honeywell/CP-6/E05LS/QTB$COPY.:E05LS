VERSION E05

PL6.E3A0      #001=QTB$COPY File=QTB$COPY.:E05TSI                                WED 07/30/97 05:46 Page:1    
        1        1        /*M* QTB$COPY - Process  COPY  command */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* IND=2, DCI=4, CSU=2, ECU=4, DTI=2, CTI=4, AND */
        8        8        QTB$COPY:
        9        9                PROC;
       10       10
       11       11        %INCLUDE Q_PAGE_C;
       12       43        %SET LISTEXP = '1'B;
       13       44        %PAGE(ARG="Includes");

                61        /***************************************************************************
                62         *                                                                         *
                63         *                                  Includes                               *
                64         *                                                                         *
                65         ***************************************************************************/

       14       69        %INCLUDE CP_6;
       15      150        %INCLUDE QT_DATA_R;
       16      164        %INCLUDE QT_PERR_C;
       17      215        %INCLUDE Q_ERRCODE_C;
       18      238        %INCLUDE QT_MACROS_C;
       19      396        %INCLUDE QT_SUBS_C;
       20      480        %INCLUDE XU_MACRO_C;
       21     3586        %PAGE(ARG="Externally defined routines");

              3603    1   /***************************************************************************
              3604    1    *                                                                         *
              3605    1    *                        Externally defined routines                      *
              3606    1    *                                                                         *
              3607    1    ***************************************************************************/

       22     3611    1   DCL XUR$ERRMSG ENTRY(7) ALTRET;
       23     3612    1   DCL QTC$READ_TRADER ENTRY(3) ALTRET;
PL6.E3A0      #001=QTB$COPY File=QTB$COPY.:E05TSI                                WED 07/30/97 05:46 Page:2    
       24     3613    1   DCL QTC$WRITE_TRADER ENTRY(2);
       25     3614    1   DCL QTC$DEL_TRADER ENTRY(2) ALTRET;
       26     3615        %PAGE(ARG="Based");

              3632    1   /***************************************************************************
              3633    1    *                                                                         *
              3634    1    *                                   Based                                 *
              3635    1    *                                                                         *
              3636    1    ***************************************************************************/

       27     3640        %PARSE$SYM(STCLASS=BASED);
       28     3678        %PARSE$OUT(STCLASS=BASED);
       29     3723        %PAGE(ARG="Static");

              3740    1   /***************************************************************************
              3741    1    *                                                                         *
              3742    1    *                                   Static                                *
              3743    1    *                                                                         *
              3744    1    ***************************************************************************/

       30     3748        %VLP_NAME(FPTN=TEXTC_MSGTYP, NAME='12345678');
       31     3775        %PAGE(ARG="Auto");

              3792    1   /***************************************************************************
              3793    1    *                                                                         *
              3794    1    *                                    Auto                                 *
              3795    1    *                                                                         *
              3796    1    ***************************************************************************/

       32     3800    1   DCL SUBLK$ PTR;
       33     3801
       34     3802    1   DCL I UBIN WORD;
       35     3803    1   DCL NSUBLKS UBIN WORD;
       36     3804    1   DCL TYPE UBIN WORD;
       37     3805    1   DCL POS UBIN WORD;
       38     3806    1   DCL COPYOPT UBIN WORD;
       39     3807
PL6.E3A0      #001=QTB$COPY File=QTB$COPY.:E05TSI                                WED 07/30/97 05:46 Page:3    
       40     3808    1   DCL FROM_MSGTYP CHAR(8);
       41     3809    1   DCL TO_MSGTYP CHAR(8);
       42     3810    1   DCL FOUND_MSGTYP CHAR(8);
       43     3811
       44     3812    1   DCL ENTRY_FOUND_FLAG BIT(1) ALIGNED;
       45     3813        %PAGE(ARG="Error codes", PAGE=YES);

PL6.E3A0      #001=QTB$COPY File=QTB$COPY.:E05TSI                                WED 07/30/97 05:46 Page:4    
              3830    1   /***************************************************************************
              3831    1    *                                                                         *
              3832    1    *                                Error codes                              *
              3833    1    *                                                                         *
              3834    1    ***************************************************************************/

       46     3838        %ERRCODE(NAME=CODE_NWH, CODE#=%E$NWH, FCG#=%FCG_QT, MID#=%MID_B);
       47     3845        %ERRCODE(NAME=CODE_TTE, CODE#=%E$TTE, FCG#=%FCG_QT, MID#=%MID_B);
       48     3852        %ERRCODE(NAME=CODE_NF, CODE#=%E$NF, FCG#=%FCG_QT, MID#=%MID_B);
       49     3859        /*E*       ERROR: QTB-E$NF-C
       50     3860
       51     3861                 MESSAGE: Can't copy; %U1 was not found.
       52     3862             DESCRIPTION: Can't copy something that does not exist.
       53     3863        */
       54     3864        /*E*       ERROR: QTB-E$TTE-C
       55     3865
       56     3866                 MESSAGE: Can't copy; %U1 already exists.
       57     3867             DESCRIPTION: Must use the OVER option to copy over
       58     3868                          something already exists.
       59     3869        */
       60     3870        %PAGE(ARG="QTB$COPY", PAGE=YES);

PL6.E3A0      #001=QTB$COPY File=QTB$COPY.:E05TSI                                WED 07/30/97 05:46 Page:5    
              3887    1   /***************************************************************************
              3888    1    *                                                                         *
              3889    1    *                                  QTB$COPY                               *
              3890    1    *                                                                         *
              3891    1    ***************************************************************************/

       61     3895    1           IF QT_CMDBLK.CODE = 4 /* COPY_ENTRY */ THEN
       62     3896    2             DO;
       63     3897    2               TYPE = 1 /* TYPE_E */;
       64     3898    2             END;
       65     3899    1           ELSE
       66     3900    2             DO;
       67     3901    2               TYPE = 2 /* TYPE_F */;
       68     3902    2             END;
       69     3903
       70     3904    1           NSUBLKS = QT_CMDBLK.OUT$ -> OUT$BLK.NSUBLKS - 1;
       71     3905
       72     3906    2           DO I = 0 TO NSUBLKS;
       73     3907    2             SUBLK$ = QT_CMDBLK.OUT$ -> OUT$BLK.SUBLK$(I);
       74     3908
       75     3909    3             DO CASE(SUBLK$ -> OUT$SYM.CODE);
       76     3910    3               CASE(1 /* OPT_FROMTYPE */);
       77     3911    3                 FROM_MSGTYP = SUBLK$ -> OUT$BLK.SUBLK$(0) -> OUT$SYM.TEXT;
       78     3912
       79     3913    3               CASE(3 /* OPT_COPY */);
       80     3914    3                 COPYOPT = SUBLK$ -> OUT$BLK.SUBLK$(0) -> OUT$SYM.CODE;
       81     3915
       82     3916    3               CASE(2 /* OPT_TOTYPE */);
       83     3917    3                 TO_MSGTYP = SUBLK$ -> OUT$BLK.SUBLK$(0) -> OUT$SYM.TEXT;
       84     3918
       85     3919    3             END /* CASE */;
       86     3920    2           END;
       87     3921
       88     3922    1           CALL INDEX(POS, '?', FROM_MSGTYP) ALTRET(NO_Q1);
       89     3923
       90     3924    1           QT_CMDBLK.MINOR_ERR = CODE_NWH;
       91     3925    1           GOTO PRINT_ERR;
PL6.E3A0      #001=QTB$COPY File=QTB$COPY.:E05TSI                                WED 07/30/97 05:46 Page:6    
       92     3926
       93     3927    1   NO_Q1:
       94     3928    1           CALL INDEX(POS, '?', TO_MSGTYP) ALTRET(NO_Q2);
       95     3929
       96     3930    1           QT_CMDBLK.MINOR_ERR = CODE_NWH;
       97     3931    1           GOTO PRINT_ERR;
       98     3932
       99     3933    1   NO_Q2:
      100     3934    1           IF COPYOPT = 2 /* OVER */ THEN
      101     3935    2             DO;
      102     3936    2               CALL COPY_OVER;
      103     3937    2             END;
      104     3938    1           ELSE
      105     3939    2             DO;
      106     3940    2               CALL COPY_TO;
      107     3941    2             END;
      108     3942
      109     3943    1           GOTO RET;
      110     3944
      111     3945    1   PRINT_ERR:
      112     3946    1           CALL XUR$ERRMSG(QT_CMDBLK.MINOR_ERR);
      113     3947
      114     3948    1   RET:
      115     3949    1           RETURN;
      116     3950                %PAGE(ARG="COPY_OVER", PAGE=YES);

PL6.E3A0      #001=QTB$COPY File=QTB$COPY.:E05TSI                                WED 07/30/97 05:46 Page:7    
              3967    1   /***************************************************************************
              3968    1    *                                                                         *
              3969    1    *                                 COPY_OVER                               *
              3970    1    *                                                                         *
              3971    1    ***************************************************************************/

      117     3975    1   COPY_OVER:
      118     3976    1           PROC;
      119     3977
      120     3978    2           ENTRY_FOUND_FLAG = '0'B;
      121     3979
      122     3980    2           IF TYPE = 1 /* TYPE_E */ THEN
      123     3981    3             DO;
      124     3982    3               CALL QTC$READ_TRADER(TO_MSGTYP, TYPE, FOUND_MSGTYP) ALTRET(READ_FROM);
      125     3983    3               ENTRY_FOUND_FLAG = '1'B;
      126     3984    3             END;
      127     3985
      128     3986    2   READ_FROM:
      129     3987    2           QT_GLOBAL.FIRST_READ = '1'B;
      130     3988    2           CALL QTC$READ_TRADER(FROM_MSGTYP, TYPE, FOUND_MSGTYP) ALTRET(NOT_FOUND);
      131     3989
      132     3990    3           DO WHILE('0'B);
      133     3991
      134     3992    3   NOT_FOUND:
      135     3993    3             TEXTC_MSGTYP.NAME# = FROM_MSGTYP;
      136     3994    3             QT_CMDBLK.MINOR_ERR = CODE_NF;
      137     3995    3             CALL XUR$ERRMSG(CODE_NF, , , VECTOR(TEXTC_MSGTYP));
      138     3996    3             GOTO RET;
      139     3997    3           END /* NEVER */;
      140     3998
      141     3999    2           IF ENTRY_FOUND_FLAG THEN
      142     4000    3             DO;
      143     4001    3               CALL QTC$DEL_TRADER(TO_MSGTYP, TYPE);
      144     4002    3             END;
      145     4003
      146     4004    2           CALL QTC$WRITE_TRADER(TO_MSGTYP, TYPE);
      147     4005
PL6.E3A0      #001=QTB$COPY File=QTB$COPY.:E05TSI                                WED 07/30/97 05:46 Page:8    
      148     4006    2   RET:
      149     4007    2           RETURN;
      150     4008
      151     4009    2   END COPY_OVER;
      152     4010                %PAGE(ARG="COPY_TO", PAGE=YES);

PL6.E3A0      #001=QTB$COPY File=QTB$COPY.:E05TSI                                WED 07/30/97 05:46 Page:9    
              4027    2   /***************************************************************************
              4028    2    *                                                                         *
              4029    2    *                                  COPY_TO                                *
              4030    2    *                                                                         *
              4031    2    ***************************************************************************/

      153     4035    1   COPY_TO:
      154     4036    1           PROC;
      155     4037
      156     4038    2           CALL QTC$READ_TRADER(TO_MSGTYP, TYPE, FOUND_MSGTYP) ALTRET(WRITE_REC);
      157     4039
      158     4040    2           QT_CMDBLK.MINOR_ERR = CODE_TTE;
      159     4041    2           TEXTC_MSGTYP.NAME# = TO_MSGTYP;
      160     4042    2           CALL XUR$ERRMSG(CODE_TTE, , , VECTOR(TEXTC_MSGTYP));
      161     4043    2           GOTO RET;
      162     4044
      163     4045    2   WRITE_REC:
      164     4046    2           QT_GLOBAL.FIRST_READ = '1'B;
      165     4047    2           CALL QTC$READ_TRADER(FROM_MSGTYP, TYPE, FOUND_MSGTYP) ALTRET(NOT_FOUND);
      166     4048    3           DO WHILE('0'B);
      167     4049
      168     4050    3   NOT_FOUND:
      169     4051    3             TEXTC_MSGTYP.NAME# = FROM_MSGTYP;
      170     4052    3             QT_CMDBLK.MINOR_ERR = CODE_NF;
      171     4053    3             CALL XUR$ERRMSG(CODE_NF, , , VECTOR(TEXTC_MSGTYP));
      172     4054    3             GOTO RET;
      173     4055
      174     4056    3           END /* NEVER */;
      175     4057
      176     4058    2           CALL QTC$WRITE_TRADER(TO_MSGTYP, TYPE);
      177     4059
      178     4060    2   RET:
      179     4061    2           RETURN;
      180     4062
      181     4063    2   END COPY_TO;
      182     4064    1   END QTB$COPY;

PL6.E3A0      #001=QTB$COPY File=QTB$COPY.:E05TSI                                WED 07/30/97 05:46 Page:10   
--  Include file information  --

   XU_MACRO_C.:E05TOU  is referenced.
   QT_SUBS_C.:E05TOU  is referenced.
   QT_MACROS_C.:E05TOU  is referenced.
   Q_ERRCODE_C.:E05TOU  is referenced.
   QT_PERR_C.:E05TOU  is referenced.
   QT_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   Q_PAGE_C.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure QTB$COPY.

   Procedure QTB$COPY requires 218 words for executable code.
   Procedure QTB$COPY requires 22 words of local(AUTO) storage.

    No errors detected in file QTB$COPY.:E05TSI    .

PL6.E3A0      #001=QTB$COPY File=QTB$COPY.:E05TSI                                WED 07/30/97 05:46 Page:11   

 Object Unit name= QTB$COPY                                   File name= QTB$COPY.:E05TOU
 UTS= JUL 30 '97 05:46:21.52 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1   Data  even  none     3      3  QTB$COPY
    2  RoData even  UTS      3      3  QTB$COPY
    3   Proc  even  none   218    332  QTB$COPY
    4  RoData even  none     7      7  QTB$COPY

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     3      0   yes            yes      Std        0  QTB$COPY

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       7 XUR$ERRMSG
 yes     yes           Std       3 QTC$READ_TRADER
 yes     yes           Std       2 QTC$DEL_TRADER
         yes           Std       2 QTC$WRITE_TRADER
                       nStd      0 X66_AUTO_0
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET
PL6.E3A0      #001=QTB$COPY File=QTB$COPY.:E05TSI                                WED 07/30/97 05:46 Page:12   

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                                  QT_GLOBAL                             QT_CMDBLK
     B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
PL6.E3A0      #001=QTB$COPY File=QTB$COPY.:E05TSI                                WED 07/30/97 05:46 Page:13   


        1        1        /*M* QTB$COPY - Process  COPY  command */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* IND=2, DCI=4, CSU=2, ECU=4, DTI=2, CTI=4, AND */
        8        8        QTB$COPY:
        9        9                PROC;

      9  3 000000   000000 700200 xent  QTB$COPY     TSX0  ! X66_AUTO_0
         3 000001   000026 000000                    ZERO    22,0

       10       10
       11       11        %INCLUDE Q_PAGE_C;
       12       43        %SET LISTEXP = '1'B;
       13       44        %PAGE(ARG="Includes");

                61        /***************************************************************************
                62         *                                                                         *
                63         *                                  Includes                               *
                64         *                                                                         *
                65         ***************************************************************************/

       14       69        %INCLUDE CP_6;
       15      150        %INCLUDE QT_DATA_R;
       16      164        %INCLUDE QT_PERR_C;
       17      215        %INCLUDE Q_ERRCODE_C;
       18      238        %INCLUDE QT_MACROS_C;
       19      396        %INCLUDE QT_SUBS_C;
       20      480        %INCLUDE XU_MACRO_C;
       21     3586        %PAGE(ARG="Externally defined routines");

              3603    1   /***************************************************************************
              3604    1    *                                                                         *
              3605    1    *                        Externally defined routines                      *
PL6.E3A0      #001=QTB$COPY File=QTB$COPY.:E05TSI                                WED 07/30/97 05:46 Page:14   
              3606    1    *                                                                         *
              3607    1    ***************************************************************************/

       22     3611    1   DCL XUR$ERRMSG ENTRY(7) ALTRET;
       23     3612    1   DCL QTC$READ_TRADER ENTRY(3) ALTRET;
       24     3613    1   DCL QTC$WRITE_TRADER ENTRY(2);
       25     3614    1   DCL QTC$DEL_TRADER ENTRY(2) ALTRET;
       26     3615        %PAGE(ARG="Based");

              3632    1   /***************************************************************************
              3633    1    *                                                                         *
              3634    1    *                                   Based                                 *
              3635    1    *                                                                         *
              3636    1    ***************************************************************************/

       27     3640        %PARSE$SYM(STCLASS=BASED);
       28     3678        %PARSE$OUT(STCLASS=BASED);
       29     3723        %PAGE(ARG="Static");

              3740    1   /***************************************************************************
              3741    1    *                                                                         *
              3742    1    *                                   Static                                *
              3743    1    *                                                                         *
              3744    1    ***************************************************************************/

       30     3748        %VLP_NAME(FPTN=TEXTC_MSGTYP, NAME='12345678');
       31     3775        %PAGE(ARG="Auto");

              3792    1   /***************************************************************************
              3793    1    *                                                                         *
              3794    1    *                                    Auto                                 *
              3795    1    *                                                                         *
              3796    1    ***************************************************************************/

       32     3800    1   DCL SUBLK$ PTR;
       33     3801
       34     3802    1   DCL I UBIN WORD;
PL6.E3A0      #001=QTB$COPY File=QTB$COPY.:E05TSI                                WED 07/30/97 05:46 Page:15   
       35     3803    1   DCL NSUBLKS UBIN WORD;
       36     3804    1   DCL TYPE UBIN WORD;
       37     3805    1   DCL POS UBIN WORD;
       38     3806    1   DCL COPYOPT UBIN WORD;
       39     3807
       40     3808    1   DCL FROM_MSGTYP CHAR(8);
       41     3809    1   DCL TO_MSGTYP CHAR(8);
       42     3810    1   DCL FOUND_MSGTYP CHAR(8);
       43     3811
       44     3812    1   DCL ENTRY_FOUND_FLAG BIT(1) ALIGNED;
       45     3813        %PAGE(ARG="Error codes", PAGE=YES);

PL6.E3A0      #001=QTB$COPY File=QTB$COPY.:E05TSI                                WED 07/30/97 05:46 Page:16   
              3830    1   /***************************************************************************
              3831    1    *                                                                         *
              3832    1    *                                Error codes                              *
              3833    1    *                                                                         *
              3834    1    ***************************************************************************/

       46     3838        %ERRCODE(NAME=CODE_NWH, CODE#=%E$NWH, FCG#=%FCG_QT, MID#=%MID_B);
       47     3845        %ERRCODE(NAME=CODE_TTE, CODE#=%E$TTE, FCG#=%FCG_QT, MID#=%MID_B);
       48     3852        %ERRCODE(NAME=CODE_NF, CODE#=%E$NF, FCG#=%FCG_QT, MID#=%MID_B);
       49     3859        /*E*       ERROR: QTB-E$NF-C
       50     3860
       51     3861                 MESSAGE: Can't copy; %U1 was not found.
       52     3862             DESCRIPTION: Can't copy something that does not exist.
       53     3863        */
       54     3864        /*E*       ERROR: QTB-E$TTE-C
       55     3865
       56     3866                 MESSAGE: Can't copy; %U1 already exists.
       57     3867             DESCRIPTION: Must use the OVER option to copy over
       58     3868                          something already exists.
       59     3869        */
       60     3870        %PAGE(ARG="QTB$COPY", PAGE=YES);

PL6.E3A0      #001=QTB$COPY File=QTB$COPY.:E05TSI                                WED 07/30/97 05:46 Page:17   
              3887    1   /***************************************************************************
              3888    1    *                                                                         *
              3889    1    *                                  QTB$COPY                               *
              3890    1    *                                                                         *
              3891    1    ***************************************************************************/

       61     3895    1           IF QT_CMDBLK.CODE = 4 /* COPY_ENTRY */ THEN

   3895  3 000002   000005 235000 xsym               LDA     QT_CMDBLK+5
         3 000003   000004 115007                    CMPA    4,DL
         3 000004   000010 601000 3                  TNZ     s:3901

       62     3896    2             DO;

       63     3897    2               TYPE = 1 /* TYPE_E */;

   3897  3 000005   000001 236007                    LDQ     1,DL
         3 000006   200006 756100                    STQ     TYPE,,AUTO

       64     3898    2             END;

   3898  3 000007   000012 710000 3                  TRA     s:3904

       65     3899    1           ELSE
       66     3900    2             DO;

       67     3901    2               TYPE = 2 /* TYPE_F */;

   3901  3 000010   000002 236007                    LDQ     2,DL
         3 000011   200006 756100                    STQ     TYPE,,AUTO

       68     3902    2             END;

       69     3903
       70     3904    1           NSUBLKS = QT_CMDBLK.OUT$ -> OUT$BLK.NSUBLKS - 1;

   3904  3 000012   000004 470400 xsym               LDP0    QT_CMDBLK+4
PL6.E3A0      #001=QTB$COPY File=QTB$COPY.:E05TSI                                WED 07/30/97 05:46 Page:18   
         3 000013   000001 236100                    LDQ     1,,PR0
         3 000014   000022 772000                    QRL     18
         3 000015   000001 136007                    SBLQ    1,DL
         3 000016   200005 756100                    STQ     NSUBLKS,,AUTO

       71     3905
       72     3906    2           DO I = 0 TO NSUBLKS;

   3906  3 000017   200004 450100                    STZ     I,,AUTO
         3 000020   000065 710000 3                  TRA     s:3920+3

       73     3907    2             SUBLK$ = QT_CMDBLK.OUT$ -> OUT$BLK.SUBLK$(I);

   3907  3 000021   000004 470400 xsym               LDP0    QT_CMDBLK+4
         3 000022   200004 720100                    LXL0    I,,AUTO
         3 000023   000003 236110                    LDQ     3,X0,PR0
         3 000024   200003 756100                    STQ     SUBLK$,,AUTO

       74     3908
       75     3909    3             DO CASE(SUBLK$ -> OUT$SYM.CODE);

   3909  3 000025   200003 471500                    LDP1    SUBLK$,,AUTO
         3 000026   100000 721100                    LXL1    0,,PR1
         3 000027   000004 101003                    CMPX1   4,DU
         3 000030   000032 602011 3                  TNC     s:3909+5,X1
         3 000031   000062 710000 3                  TRA     s:3920
         3 000032   000062 710000 3                  TRA     s:3920
         3 000033   000036 710000 3                  TRA     s:3911
         3 000034   000053 710000 3                  TRA     s:3917
         3 000035   000046 710000 3                  TRA     s:3914

       76     3910    3               CASE(1 /* OPT_FROMTYPE */);

       77     3911    3                 FROM_MSGTYP = SUBLK$ -> OUT$BLK.SUBLK$(0) -> OUT$SYM.TEXT;

   3911  3 000036   100003 473500                    LDP3    3,,PR1
         3 000037   300004 236100                    LDQ     4,,PR3
PL6.E3A0      #001=QTB$COPY File=QTB$COPY.:E05TSI                                WED 07/30/97 05:46 Page:19   
         3 000040   000033 772000                    QRL     27
         3 000041   000000 622006                    EAX2    0,QL
         3 000042   040100 100540                    MLR     fill='040'O
         3 000043   300004 200012                    ADSC9   4,,PR3                   cn=1,n=*X2
         3 000044   200011 000010                    ADSC9   FROM_MSGTYP,,AUTO        cn=0,n=8
         3 000045   000062 710000 3                  TRA     s:3920

       78     3912
       79     3913    3               CASE(3 /* OPT_COPY */);

       80     3914    3                 COPYOPT = SUBLK$ -> OUT$BLK.SUBLK$(0) -> OUT$SYM.CODE;

   3914  3 000046   100003 473500                    LDP3    3,,PR1
         3 000047   300000 236100                    LDQ     0,,PR3
         3 000050   777777 376007                    ANQ     -1,DL
         3 000051   200010 756100                    STQ     COPYOPT,,AUTO
         3 000052   000062 710000 3                  TRA     s:3920

       81     3915
       82     3916    3               CASE(2 /* OPT_TOTYPE */);

       83     3917    3                 TO_MSGTYP = SUBLK$ -> OUT$BLK.SUBLK$(0) -> OUT$SYM.TEXT;

   3917  3 000053   100003 473500                    LDP3    3,,PR1
         3 000054   300004 236100                    LDQ     4,,PR3
         3 000055   000033 772000                    QRL     27
         3 000056   000000 622006                    EAX2    0,QL
         3 000057   040100 100540                    MLR     fill='040'O
         3 000060   300004 200012                    ADSC9   4,,PR3                   cn=1,n=*X2
         3 000061   200013 000010                    ADSC9   TO_MSGTYP,,AUTO          cn=0,n=8

       84     3918
       85     3919    3             END /* CASE */;

       86     3920    2           END;

   3920  3 000062   200004 235100                    LDA     I,,AUTO
PL6.E3A0      #001=QTB$COPY File=QTB$COPY.:E05TSI                                WED 07/30/97 05:46 Page:20   
         3 000063   000001 035007                    ADLA    1,DL
         3 000064   200004 755100                    STA     I,,AUTO
         3 000065   200005 236100                    LDQ     NSUBLKS,,AUTO
         3 000066   200004 116100                    CMPQ    I,,AUTO
         3 000067   000021 603000 3                  TRC     s:3907

       87     3921
       88     3922    1           CALL INDEX(POS, '?', FROM_MSGTYP) ALTRET(NO_Q1);

   3922  3 000070   000000 124500                    SCM     mask='000'O
         3 000071   200011 000010                    ADSC9   FROM_MSGTYP,,AUTO        cn=0,n=8
         3 000072   000000 000001 4                  ADSC9   0                        cn=0,n=1
         3 000073   200007 000100                    ARG     POS,,AUTO
         3 000074   000100 606400 3                  TTN     NO_Q1

       89     3923
       90     3924    1           QT_CMDBLK.MINOR_ERR = CODE_NWH;

   3924  3 000075   000000 236000 2                  LDQ     CODE_NWH
         3 000076   000001 756000 xsym               STQ     QT_CMDBLK+1

       91     3925    1           GOTO PRINT_ERR;

   3925  3 000077   000121 710000 3                  TRA     PRINT_ERR

       92     3926
       93     3927    1   NO_Q1:
       94     3928    1           CALL INDEX(POS, '?', TO_MSGTYP) ALTRET(NO_Q2);

   3928  3 000100   000000 124500       NO_Q1        SCM     mask='000'O
         3 000101   200013 000010                    ADSC9   TO_MSGTYP,,AUTO          cn=0,n=8
         3 000102   000000 000001 4                  ADSC9   0                        cn=0,n=1
         3 000103   200007 000100                    ARG     POS,,AUTO
         3 000104   000110 606400 3                  TTN     NO_Q2

       95     3929
       96     3930    1           QT_CMDBLK.MINOR_ERR = CODE_NWH;
PL6.E3A0      #001=QTB$COPY File=QTB$COPY.:E05TSI                                WED 07/30/97 05:46 Page:21   

   3930  3 000105   000000 236000 2                  LDQ     CODE_NWH
         3 000106   000001 756000 xsym               STQ     QT_CMDBLK+1

       97     3931    1           GOTO PRINT_ERR;

   3931  3 000107   000121 710000 3                  TRA     PRINT_ERR

       98     3932
       99     3933    1   NO_Q2:
      100     3934    1           IF COPYOPT = 2 /* OVER */ THEN

   3934  3 000110   200010 235100       NO_Q2        LDA     COPYOPT,,AUTO
         3 000111   000002 115007                    CMPA    2,DL
         3 000112   000116 601000 3                  TNZ     s:3940

      101     3935    2             DO;

      102     3936    2               CALL COPY_OVER;

   3936  3 000113   000126 701000 3                  TSX1    COPY_OVER
         3 000114   000000 011000                    NOP     0

      103     3937    2             END;

   3937  3 000115   000120 710000 3                  TRA     s:3943

      104     3938    1           ELSE
      105     3939    2             DO;

      106     3940    2               CALL COPY_TO;

   3940  3 000116   000230 701000 3                  TSX1    COPY_TO
         3 000117   000000 011000                    NOP     0

      107     3941    2             END;

PL6.E3A0      #001=QTB$COPY File=QTB$COPY.:E05TSI                                WED 07/30/97 05:46 Page:22   
      108     3942
      109     3943    1           GOTO RET;

   3943  3 000120   000125 710000 3                  TRA     RET

      110     3944
      111     3945    1   PRINT_ERR:
      112     3946    1           CALL XUR$ERRMSG(QT_CMDBLK.MINOR_ERR);

   3946  3 000121   000001 630400 4     PRINT_ERR    EPPR0   1
         3 000122   000017 631400 xsym               EPPR1   B_VECTNIL+15
         3 000123   000000 701000 xent               TSX1    XUR$ERRMSG
         3 000124   000000 011000                    NOP     0

      113     3947
      114     3948    1   RET:
      115     3949    1           RETURN;

   3949  3 000125   000000 702200 xent  RET          TSX2  ! X66_ARET

      116     3950                %PAGE(ARG="COPY_OVER", PAGE=YES);

PL6.E3A0      #001=QTB$COPY File=QTB$COPY.:E05TSI                                WED 07/30/97 05:46 Page:23   
              3967    1   /***************************************************************************
              3968    1    *                                                                         *
              3969    1    *                                 COPY_OVER                               *
              3970    1    *                                                                         *
              3971    1    ***************************************************************************/

      117     3975    1   COPY_OVER:

   3975  3 000126   200020 741300       COPY_OVER    STX1  ! ENTRY_FOUND_FLAG+1,,AUTO

      118     3976    1           PROC;
      119     3977
      120     3978    2           ENTRY_FOUND_FLAG = '0'B;

   3978  3 000127   200017 450100                    STZ     ENTRY_FOUND_FLAG,,AUTO

      121     3979
      122     3980    2           IF TYPE = 1 /* TYPE_E */ THEN

   3980  3 000130   200006 235100                    LDA     TYPE,,AUTO
         3 000131   000001 115007                    CMPA    1,DL
         3 000132   000147 601000 3                  TNZ     READ_FROM

      123     3981    3             DO;

      124     3982    3               CALL QTC$READ_TRADER(TO_MSGTYP, TYPE, FOUND_MSGTYP) ALTRET(READ_FROM);

   3982  3 000133   200015 630500                    EPPR0   FOUND_MSGTYP,,AUTO
         3 000134   200024 450500                    STP0    ENTRY_FOUND_FLAG+5,,AUTO
         3 000135   200006 631500                    EPPR1   TYPE,,AUTO
         3 000136   200023 451500                    STP1    ENTRY_FOUND_FLAG+4,,AUTO
         3 000137   200013 633500                    EPPR3   TO_MSGTYP,,AUTO
         3 000140   200022 453500                    STP3    ENTRY_FOUND_FLAG+3,,AUTO
         3 000141   200022 630500                    EPPR0   ENTRY_FOUND_FLAG+3,,AUTO
         3 000142   000021 631400 xsym               EPPR1   B_VECTNIL+17
         3 000143   000000 701000 xent               TSX1    QTC$READ_TRADER
         3 000144   000147 702000 3                  TSX2    READ_FROM
PL6.E3A0      #001=QTB$COPY File=QTB$COPY.:E05TSI                                WED 07/30/97 05:46 Page:24   

      125     3983    3               ENTRY_FOUND_FLAG = '1'B;

   3983  3 000145   400000 236003                    LDQ     -131072,DU
         3 000146   200017 756100                    STQ     ENTRY_FOUND_FLAG,,AUTO

      126     3984    3             END;

      127     3985
      128     3986    2   READ_FROM:
      129     3987    2           QT_GLOBAL.FIRST_READ = '1'B;

   3987  3 000147   400000 236003       READ_FROM    LDQ     -131072,DU
         3 000150   000002 756000 xsym               STQ     QT_GLOBAL+2

      130     3988    2           CALL QTC$READ_TRADER(FROM_MSGTYP, TYPE, FOUND_MSGTYP) ALTRET(NOT_FOUND);

   3988  3 000151   200015 630500                    EPPR0   FOUND_MSGTYP,,AUTO
         3 000152   200024 450500                    STP0    ENTRY_FOUND_FLAG+5,,AUTO
         3 000153   200006 631500                    EPPR1   TYPE,,AUTO
         3 000154   200023 451500                    STP1    ENTRY_FOUND_FLAG+4,,AUTO
         3 000155   200011 633500                    EPPR3   FROM_MSGTYP,,AUTO
         3 000156   200022 453500                    STP3    ENTRY_FOUND_FLAG+3,,AUTO
         3 000157   200022 630500                    EPPR0   ENTRY_FOUND_FLAG+3,,AUTO
         3 000160   000021 631400 xsym               EPPR1   B_VECTNIL+17
         3 000161   000000 701000 xent               TSX1    QTC$READ_TRADER
         3 000162   000164 702000 3                  TSX2    NOT_FOUND

      131     3989
      132     3990    3           DO WHILE('0'B);

   3990  3 000163   000204 710000 3                  TRA     s:3999

      133     3991
      134     3992    3   NOT_FOUND:
      135     3993    3             TEXTC_MSGTYP.NAME# = FROM_MSGTYP;

PL6.E3A0      #001=QTB$COPY File=QTB$COPY.:E05TSI                                WED 07/30/97 05:46 Page:25   
   3993  3 000164   040000 100500       NOT_FOUND    MLR     fill='040'O
         3 000165   200011 000010                    ADSC9   FROM_MSGTYP,,AUTO        cn=0,n=8
         3 000166   000000 200010 1                  ADSC9   TEXTC_MSGTYP             cn=1,n=8

      136     3994    3             QT_CMDBLK.MINOR_ERR = CODE_NF;

   3994  3 000167   000002 236000 2                  LDQ     CODE_NF
         3 000170   000001 756000 xsym               STQ     QT_CMDBLK+1

      137     3995    3             CALL XUR$ERRMSG(CODE_NF, , , VECTOR(TEXTC_MSGTYP));

   3995  3 000171   000004 236000 4                  LDQ     4
         3 000172   000001 235000 xsym               LDA     B_VECTNIL+1
         3 000173   200024 757100                    STAQ    ENTRY_FOUND_FLAG+5,,AUTO
         3 000174   000001 236000 xsym               LDQ     B_VECTNIL+1
         3 000175   000005 235000 4                  LDA     5
         3 000176   200022 757100                    STAQ    ENTRY_FOUND_FLAG+3,,AUTO
         3 000177   200022 630500                    EPPR0   ENTRY_FOUND_FLAG+3,,AUTO
         3 000200   000022 631400 xsym               EPPR1   B_VECTNIL+18
         3 000201   000000 701000 xent               TSX1    XUR$ERRMSG
         3 000202   000000 011000                    NOP     0

      138     3996    3             GOTO RET;

   3996  3 000203   000226 710000 3                  TRA     RET

      139     3997    3           END /* NEVER */;

      140     3998
      141     3999    2           IF ENTRY_FOUND_FLAG THEN

   3999  3 000204   200017 234100                    SZN     ENTRY_FOUND_FLAG,,AUTO
         3 000205   000216 605000 3                  TPL     s:4004

      142     4000    3             DO;

      143     4001    3               CALL QTC$DEL_TRADER(TO_MSGTYP, TYPE);
PL6.E3A0      #001=QTB$COPY File=QTB$COPY.:E05TSI                                WED 07/30/97 05:46 Page:26   

   4001  3 000206   200006 630500                    EPPR0   TYPE,,AUTO
         3 000207   200023 450500                    STP0    ENTRY_FOUND_FLAG+4,,AUTO
         3 000210   200013 631500                    EPPR1   TO_MSGTYP,,AUTO
         3 000211   200022 451500                    STP1    ENTRY_FOUND_FLAG+3,,AUTO
         3 000212   200022 630500                    EPPR0   ENTRY_FOUND_FLAG+3,,AUTO
         3 000213   000020 631400 xsym               EPPR1   B_VECTNIL+16
         3 000214   000000 701000 xent               TSX1    QTC$DEL_TRADER
         3 000215   000000 011000                    NOP     0

      144     4002    3             END;

      145     4003
      146     4004    2           CALL QTC$WRITE_TRADER(TO_MSGTYP, TYPE);

   4004  3 000216   200006 630500                    EPPR0   TYPE,,AUTO
         3 000217   200023 450500                    STP0    ENTRY_FOUND_FLAG+4,,AUTO
         3 000220   200013 631500                    EPPR1   TO_MSGTYP,,AUTO
         3 000221   200022 451500                    STP1    ENTRY_FOUND_FLAG+3,,AUTO
         3 000222   200022 630500                    EPPR0   ENTRY_FOUND_FLAG+3,,AUTO
         3 000223   000020 631400 xsym               EPPR1   B_VECTNIL+16
         3 000224   000000 701000 xent               TSX1    QTC$WRITE_TRADER
         3 000225   000000 011000                    NOP     0

      147     4005
      148     4006    2   RET:
      149     4007    2           RETURN;

   4007  3 000226   200020 221300       RET          LDX1  ! ENTRY_FOUND_FLAG+1,,AUTO
         3 000227   000001 702211                    TSX2  ! 1,X1

      150     4008
      151     4009    2   END COPY_OVER;
      152     4010                %PAGE(ARG="COPY_TO", PAGE=YES);

PL6.E3A0      #001=QTB$COPY File=QTB$COPY.:E05TSI                                WED 07/30/97 05:46 Page:27   
              4027    2   /***************************************************************************
              4028    2    *                                                                         *
              4029    2    *                                  COPY_TO                                *
              4030    2    *                                                                         *
              4031    2    ***************************************************************************/

      153     4035    1   COPY_TO:

   4035  3 000230   200020 741300       COPY_TO      STX1  ! ENTRY_FOUND_FLAG+1,,AUTO

      154     4036    1           PROC;
      155     4037
      156     4038    2           CALL QTC$READ_TRADER(TO_MSGTYP, TYPE, FOUND_MSGTYP) ALTRET(WRITE_REC);

   4038  3 000231   200015 630500                    EPPR0   FOUND_MSGTYP,,AUTO
         3 000232   200024 450500                    STP0    ENTRY_FOUND_FLAG+5,,AUTO
         3 000233   200006 631500                    EPPR1   TYPE,,AUTO
         3 000234   200023 451500                    STP1    ENTRY_FOUND_FLAG+4,,AUTO
         3 000235   200013 633500                    EPPR3   TO_MSGTYP,,AUTO
         3 000236   200022 453500                    STP3    ENTRY_FOUND_FLAG+3,,AUTO
         3 000237   200022 630500                    EPPR0   ENTRY_FOUND_FLAG+3,,AUTO
         3 000240   000021 631400 xsym               EPPR1   B_VECTNIL+17
         3 000241   000000 701000 xent               TSX1    QTC$READ_TRADER
         3 000242   000263 702000 3                  TSX2    WRITE_REC

      157     4039
      158     4040    2           QT_CMDBLK.MINOR_ERR = CODE_TTE;

   4040  3 000243   000001 236000 2                  LDQ     CODE_TTE
         3 000244   000001 756000 xsym               STQ     QT_CMDBLK+1

      159     4041    2           TEXTC_MSGTYP.NAME# = TO_MSGTYP;

   4041  3 000245   040000 100500                    MLR     fill='040'O
         3 000246   200013 000010                    ADSC9   TO_MSGTYP,,AUTO          cn=0,n=8
         3 000247   000000 200010 1                  ADSC9   TEXTC_MSGTYP             cn=1,n=8

PL6.E3A0      #001=QTB$COPY File=QTB$COPY.:E05TSI                                WED 07/30/97 05:46 Page:28   
      160     4042    2           CALL XUR$ERRMSG(CODE_TTE, , , VECTOR(TEXTC_MSGTYP));

   4042  3 000250   000004 236000 4                  LDQ     4
         3 000251   000001 235000 xsym               LDA     B_VECTNIL+1
         3 000252   200024 757100                    STAQ    ENTRY_FOUND_FLAG+5,,AUTO
         3 000253   000001 236000 xsym               LDQ     B_VECTNIL+1
         3 000254   000006 235000 4                  LDA     6
         3 000255   200022 757100                    STAQ    ENTRY_FOUND_FLAG+3,,AUTO
         3 000256   200022 630500                    EPPR0   ENTRY_FOUND_FLAG+3,,AUTO
         3 000257   000022 631400 xsym               EPPR1   B_VECTNIL+18
         3 000260   000000 701000 xent               TSX1    XUR$ERRMSG
         3 000261   000000 011000                    NOP     0

      161     4043    2           GOTO RET;

   4043  3 000262   000330 710000 3                  TRA     RET

      162     4044
      163     4045    2   WRITE_REC:
      164     4046    2           QT_GLOBAL.FIRST_READ = '1'B;

   4046  3 000263   400000 236003       WRITE_REC    LDQ     -131072,DU
         3 000264   000002 756000 xsym               STQ     QT_GLOBAL+2

      165     4047    2           CALL QTC$READ_TRADER(FROM_MSGTYP, TYPE, FOUND_MSGTYP) ALTRET(NOT_FOUND);

   4047  3 000265   200015 630500                    EPPR0   FOUND_MSGTYP,,AUTO
         3 000266   200024 450500                    STP0    ENTRY_FOUND_FLAG+5,,AUTO
         3 000267   200006 631500                    EPPR1   TYPE,,AUTO
         3 000270   200023 451500                    STP1    ENTRY_FOUND_FLAG+4,,AUTO
         3 000271   200011 633500                    EPPR3   FROM_MSGTYP,,AUTO
         3 000272   200022 453500                    STP3    ENTRY_FOUND_FLAG+3,,AUTO
         3 000273   200022 630500                    EPPR0   ENTRY_FOUND_FLAG+3,,AUTO
         3 000274   000021 631400 xsym               EPPR1   B_VECTNIL+17
         3 000275   000000 701000 xent               TSX1    QTC$READ_TRADER
         3 000276   000300 702000 3                  TSX2    NOT_FOUND

PL6.E3A0      #001=QTB$COPY File=QTB$COPY.:E05TSI                                WED 07/30/97 05:46 Page:29   
      166     4048    3           DO WHILE('0'B);

   4048  3 000277   000320 710000 3                  TRA     s:4058

      167     4049
      168     4050    3   NOT_FOUND:
      169     4051    3             TEXTC_MSGTYP.NAME# = FROM_MSGTYP;

   4051  3 000300   040000 100500       NOT_FOUND    MLR     fill='040'O
         3 000301   200011 000010                    ADSC9   FROM_MSGTYP,,AUTO        cn=0,n=8
         3 000302   000000 200010 1                  ADSC9   TEXTC_MSGTYP             cn=1,n=8

      170     4052    3             QT_CMDBLK.MINOR_ERR = CODE_NF;

   4052  3 000303   000002 236000 2                  LDQ     CODE_NF
         3 000304   000001 756000 xsym               STQ     QT_CMDBLK+1

      171     4053    3             CALL XUR$ERRMSG(CODE_NF, , , VECTOR(TEXTC_MSGTYP));

   4053  3 000305   000004 236000 4                  LDQ     4
         3 000306   000001 235000 xsym               LDA     B_VECTNIL+1
         3 000307   200024 757100                    STAQ    ENTRY_FOUND_FLAG+5,,AUTO
         3 000310   000001 236000 xsym               LDQ     B_VECTNIL+1
         3 000311   000005 235000 4                  LDA     5
         3 000312   200022 757100                    STAQ    ENTRY_FOUND_FLAG+3,,AUTO
         3 000313   200022 630500                    EPPR0   ENTRY_FOUND_FLAG+3,,AUTO
         3 000314   000022 631400 xsym               EPPR1   B_VECTNIL+18
         3 000315   000000 701000 xent               TSX1    XUR$ERRMSG
         3 000316   000000 011000                    NOP     0

      172     4054    3             GOTO RET;

   4054  3 000317   000330 710000 3                  TRA     RET

      173     4055
      174     4056    3           END /* NEVER */;

PL6.E3A0      #001=QTB$COPY File=QTB$COPY.:E05TSI                                WED 07/30/97 05:46 Page:30   
      175     4057
      176     4058    2           CALL QTC$WRITE_TRADER(TO_MSGTYP, TYPE);

   4058  3 000320   200006 630500                    EPPR0   TYPE,,AUTO
         3 000321   200023 450500                    STP0    ENTRY_FOUND_FLAG+4,,AUTO
         3 000322   200013 631500                    EPPR1   TO_MSGTYP,,AUTO
         3 000323   200022 451500                    STP1    ENTRY_FOUND_FLAG+3,,AUTO
         3 000324   200022 630500                    EPPR0   ENTRY_FOUND_FLAG+3,,AUTO
         3 000325   000020 631400 xsym               EPPR1   B_VECTNIL+16
         3 000326   000000 701000 xent               TSX1    QTC$WRITE_TRADER
         3 000327   000000 011000                    NOP     0

      177     4059
      178     4060    2   RET:
      179     4061    2           RETURN;

   4061  3 000330   200020 221300       RET          LDX1  ! ENTRY_FOUND_FLAG+1,,AUTO
         3 000331   000001 702211                    TSX2  ! 1,X1
      180     4062
      181     4063    2   END COPY_TO;
      182     4064    1   END QTB$COPY;

PL6.E3A0      #001=QTB$COPY File=QTB$COPY.:E05TSI                                WED 07/30/97 05:46 Page:31   
--  Include file information  --

   XU_MACRO_C.:E05TOU  is referenced.
   QT_SUBS_C.:E05TOU  is referenced.
   QT_MACROS_C.:E05TOU  is referenced.
   Q_ERRCODE_C.:E05TOU  is referenced.
   QT_PERR_C.:E05TOU  is referenced.
   QT_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   Q_PAGE_C.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure QTB$COPY.
PL6.E3A0      #001=QTB$COPY File=QTB$COPY.:E05TSI                                WED 07/30/97 05:46 Page:32   

 **** Variables and constants ****

  ****  Section 001  Data  QTB$COPY

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c STRC(81)    r     1 TEXTC_MSGTYP

  ****  Section 002 RoData QTB$COPY

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     2-0-0/b STRC        r     1 CODE_NF                    0-0-0/b STRC        r     1 CODE_NWH
     1-0-0/b STRC        r     1 CODE_TTE

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

    10-0-0/w UBIN        r     1 COPYOPT                   17-0-0/w BIT         r     1 ENTRY_FOUND_FLAG
    15-0-0/c CHAR(8)     r     1 FOUND_MSGTYP              11-0-0/c CHAR(8)     r     1 FROM_MSGTYP
     4-0-0/w UBIN        r     1 I                          5-0-0/w UBIN        r     1 NSUBLKS
     7-0-0/w UBIN        r     1 POS                        3-0-0/w PTR         r     1 SUBLK$
    13-0-0/c CHAR(8)     r     1 TO_MSGTYP                  6-0-0/w UBIN        r     1 TYPE

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(261)   r     1 QT_CMDBLK                  0-0-0/w STRC(1872)  r     1 QT_GLOBAL

  ****  BASED and DCB variables  ****

PL6.E3A0      #001=QTB$COPY File=QTB$COPY.:E05TSI                                WED 07/30/97 05:46 Page:33   
  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(144)   r     1 OUT$BLK                    0-0-0/w ASTR(153)   r     1 OUT$SYM


   Procedure QTB$COPY requires 218 words for executable code.
   Procedure QTB$COPY requires 22 words of local(AUTO) storage.

    No errors detected in file QTB$COPY.:E05TSI    .
PL6.E3A0      #001=QTB$COPY File=QTB$COPY.:E05TSI                                WED 07/30/97 05:46 Page:34   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=QTB$COPY File=QTB$COPY.:E05TSI                                WED 07/30/97 05:46 Page:35   
          MINI XREF LISTING

CODE_NF
      3853**DCL      3994>>ASSIGN   3995<>CALL     4052>>ASSIGN   4053<>CALL
CODE_NWH
      3839**DCL      3924>>ASSIGN   3930>>ASSIGN
CODE_TTE
      3846**DCL      4040>>ASSIGN   4042<>CALL
COPYOPT
      3806**DCL      3914<<ASSIGN   3934>>IF
COPY_OVER
      3976**PROC     3936--CALL
COPY_TO
      4036**PROC     3940--CALL
ENTRY_FOUND_FLAG
      3812**DCL      3978<<ASSIGN   3983<<ASSIGN   3999>>IF
FOUND_MSGTYP
      3810**DCL      3982<>CALL     3988<>CALL     4038<>CALL     4047<>CALL
FROM_MSGTYP
      3808**DCL      3911<<ASSIGN   3922>>CALLBLT  3988<>CALL     3993>>ASSIGN   4047<>CALL     4051>>ASSIGN
I
      3802**DCL      3906<<DOINDEX  3907>>ASSIGN
NOT_FOUND IN PROCEDURE COPY_OVER
      3993**LABEL    3988--CALLALT
NOT_FOUND IN PROCEDURE COPY_TO
      4051**LABEL    4047--CALLALT
NO_Q1
      3928**LABEL    3922--CALLALT
NO_Q2
      3934**LABEL    3928--CALLALT
NSUBLKS
      3803**DCL      3904<<ASSIGN   3906>>DOINDEX
OUT$BLK.NSUBLKS
      3696**DCL      3904>>ASSIGN
PL6.E3A0      #001=QTB$COPY File=QTB$COPY.:E05TSI                                WED 07/30/97 05:46 Page:36   
OUT$BLK.SUBLK$
      3717**DCL      3907>>ASSIGN   3911>>ASSIGN   3911>>ASSIGN   3914>>ASSIGN   3917>>ASSIGN   3917>>ASSIGN
OUT$SYM.CODE
      3653**DCL      3909>>DOCASE   3914>>ASSIGN
OUT$SYM.COUNT
      3670**DCL      3673--IMP-SIZ  3911>>ASSIGN   3917>>ASSIGN
OUT$SYM.TEXT
      3673**DCL      3911>>ASSIGN   3917>>ASSIGN
POS
      3805**DCL      3922<<CALLBLT  3928<<CALLBLT
PRINT_ERR
      3946**LABEL    3925--GOTO     3931--GOTO
QTC$DEL_TRADER
      3614**DCL-ENT  4001--CALL
QTC$READ_TRADER
      3612**DCL-ENT  3982--CALL     3988--CALL     4038--CALL     4047--CALL
QTC$WRITE_TRADER
      3613**DCL-ENT  4004--CALL     4058--CALL
QT_CMDBLK.CODE
       162**DCL      3895>>IF
QT_CMDBLK.MINOR_ERR
       161**DCL      3924<<ASSIGN   3930<<ASSIGN   3946<>CALL     3994<<ASSIGN   4040<<ASSIGN   4052<<ASSIGN
QT_CMDBLK.OUT$
       161**DCL       162--REDEF    3904>>ASSIGN   3907>>ASSIGN
QT_GLOBAL.FIRST_READ
       158**DCL      3987<<ASSIGN   4046<<ASSIGN
READ_FROM IN PROCEDURE COPY_OVER
      3987**LABEL    3982--CALLALT
RET
      3949**LABEL    3943--GOTO
RET IN PROCEDURE COPY_OVER
      4007**LABEL    3996--GOTO
RET IN PROCEDURE COPY_TO
      4061**LABEL    4043--GOTO     4054--GOTO
SUBLK$
      3800**DCL      3907<<ASSIGN   3909>>DOCASE   3911>>ASSIGN   3911>>ASSIGN   3914>>ASSIGN   3917>>ASSIGN
PL6.E3A0      #001=QTB$COPY File=QTB$COPY.:E05TSI                                WED 07/30/97 05:46 Page:37   
      3917>>ASSIGN
TEXTC_MSGTYP
      3773**DCL      3995--CALL     4042--CALL     4053--CALL
TEXTC_MSGTYP.NAME#
      3773**DCL      3993<<ASSIGN   4041<<ASSIGN   4051<<ASSIGN
TO_MSGTYP
      3809**DCL      3917<<ASSIGN   3928>>CALLBLT  3982<>CALL     4001<>CALL     4004<>CALL     4038<>CALL
      4041>>ASSIGN   4058<>CALL
TYPE
      3804**DCL      3897<<ASSIGN   3901<<ASSIGN   3980>>IF       3982<>CALL     3988<>CALL     4001<>CALL
      4004<>CALL     4038<>CALL     4047<>CALL     4058<>CALL
WRITE_REC IN PROCEDURE COPY_TO
      4046**LABEL    4038--CALLALT
XUR$ERRMSG
      3611**DCL-ENT  3946--CALL     3995--CALL     4042--CALL     4053--CALL
