VERSION E05

PL6.E3A0      #001=CPD$SYNTAX File=CPD$SYNTAX.:E05TSI                            TUE 07/29/97 11:33 Page:1    
        1        1        /*M*          CPD$SYNTAX     Detailed syntax checker for IBEX commands     */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X*  DMC,DFC   */
        8        8        /**/
        9        9        /*P*          NAME:    CPD$SYNTAX
       10       10                      PURPOSE:    This routine is called following gross identification
       11       11                               of an IBEX command; its function is to call
       12       12                               CXG$GETCMD a second time with a detailed syntax tree for
       13       13                               the command which has already been identified by its
       14       14                               leading literal, e.g. JOB, LIMIT, SET, GOTO....
       15       15        */
       16       16        CPD$SYNTAX:
       17       17                PROC(GETCMD)   ALTRET;
       18       18        %EJECT;
PL6.E3A0      #001=CPD$SYNTAX File=CPD$SYNTAX.:E05TSI                            TUE 07/29/97 11:33 Page:2    
       19       19                %INCLUDE CP_MACROS_C;
       20      771                %INCLUDE CP_SUBS_C;
       21     1688                %INCLUDE XU_MACRO_C;
       22     4794                %INCLUDE CXG_ENTRY ;
       23     4806        /*
       24     4807            ***       PARAMETER
       25     4808        */
       26     4809            %XUG_GETCMD (NAME=GETCMD,STCLASS=PARAM);
       27     5147        %U$PARAM (NAME=U$PARAM,STCLASS=BASED);
       28     5163        /*
       29     5164            ***       MISCELLANEOUS STRUCTURES
       30     5165        */
       31     5166    1           DCL P$PCB$ PTR ;
       32     5167                %P$PCB (NAME=P$PCB, STCLASS="BASED(P$PCB$)") ;
       33     5368                %PARSE$OUT(NAME=P$B,STCLASS=BASED);
       34     5413                %PARSE$SYM(NAME=P$S,STCLASS=BASED);
       35     5451    1           DCL B$TEXT CHAR(%CPBUFFSIZE) BASED;
       36     5452        /*
       37     5453             ***      LOCAL STORAGE
       38     5454        */
       39     5455    1           DCL TEMPBUF CHAR (%CPBUFFSIZE) AUTO;
       40     5456    1           DCL TEMPBUF1 CHAR (%CPBUFFSIZE) AUTO;
       41     5457    1           DCL TEMPBUF_SZ UBIN WORD AUTO ;
       42     5458    1           DCL LABEL_SZ UBIN WORD AUTO;
       43     5459    1           DCL TEMP$BUF CHAR(TEMPBUF_SZ) BASED ;
       44     5460    1           DCL CALL_GETCMD BIT(1) ;
       45     5461    1           DCL SAVE_RCVD_PROMPT# BIT(1) ;
       46     5462        /*
       47     5463            ***       entry references
       48     5464        */
       49     5465    1   DCL     CPD$SET_NODES     ENTRY(4) ;
       50     5466    1   DCL     CPD$SYNTRY        ENTRY(1);
       51     5467        %EJECT;
PL6.E3A0      #001=CPD$SYNTAX File=CPD$SYNTAX.:E05TSI                            TUE 07/29/97 11:33 Page:3    
       52     5468        /*
       53     5469             ***** Save a copy of the first N characters so
       54     5470                   that the label may be restored after parsing.
       55     5471                   The label will be blanked out in the text buffer
       56     5472                   so that it will not screw up the parse ...
       57     5473        */
       58     5474    1        P$PCB$ = GETCMD.PCB$ ;
       59     5475    1        TEMPBUF_SZ = P$PCB.NCHARS ;
       60     5476    1        TEMPBUF = SUBSTR(P$PCB.TEXT$->B$TEXT,0,TEMPBUF_SZ) ;
       61     5477    1        CALL CPD$SET_NODES (P$PCB, GETCMD.NODES$, P$PCB.USER$->U$PARAM.SPCL$$,
       62     5478    1                             CALL_GETCMD) ;
       63     5479    1        TEMPBUF1 = SUBSTR(P$PCB.TEXT$->B$TEXT,0,TEMPBUF_SZ);
       64     5480    1        LABEL_SZ = P$PCB.OUT$ -> P$B.CPOS;
       65     5481    1     IF CALL_GETCMD
       66     5482    1         THEN
       67     5483    2             DO ;
       68     5484    2               GETCMD.SFROUTINE$ = ENTADDR(CPD$SYNTRY) ;
       69     5485    2               GETCMD.CONTINUE_OK# = '1'B ;
       70     5486    2               GETCMD.TEXT_ = VECTOR(SUBSTR(TEMPBUF1, 0, TEMPBUF_SZ));
       71     5487    2               GETCMD.SKIP_PREPROCESS# = '1'B ;
       72     5488    2               IF GETCMD.CONTINUED#
       73     5489    2                 THEN
       74     5490    2                   CALL INSERT(TEMPBUF1, TEMPBUF_SZ-1,1,';') ;
       75     5491    2               SAVE_RCVD_PROMPT# = GETCMD.RCVD_PROMPT# ;
       76     5492    2               CALL CXG$GETCMD(GETCMD) ALTRET(E_PARSE) ;
       77     5493    2               GETCMD.TEXT_ = VECTOR(NIL) ;
       78     5494    2               GETCMD.RCVD_PROMPT# = SAVE_RCVD_PROMPT# ;
       79     5495    2             END ; /* Then Do */
       80     5496    1         ELSE
       81     5497    1             GETCMD.OUT$ = P$PCB.OUT$ ;
       82     5498    1     CALL INSERT (P$PCB.TEXT$->TEMP$BUF,0,LABEL_SZ,TEMPBUF);
       83     5499    1     RETURN;
       84     5500        /**/
       85     5501    1   E_PARSE:
       86     5502    1     GETCMD.TEXT_ = VECTOR(NIL) ;
       87     5503    1     GETCMD.RCVD_PROMPT# = SAVE_RCVD_PROMPT# ;
       88     5504    1     CALL INSERT (P$PCB.TEXT$->TEMP$BUF,0,LABEL_SZ,TEMPBUF);
PL6.E3A0      #001=CPD$SYNTAX File=CPD$SYNTAX.:E05TSI                            TUE 07/29/97 11:33 Page:4    
       89     5505    1     ALTRETURN;
       90     5506    1   END       CPD$SYNTAX;

PL6.E3A0      #001=CPD$SYNTAX File=CPD$SYNTAX.:E05TSI                            TUE 07/29/97 11:33 Page:5    
--  Include file information  --

   CXG_ENTRY.:E05TOU  cannot be made into a system file and is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
   CP_SUBS_C.:E05TOU  is referenced.
   CP_MACROS_C.:E05TOU  is referenced.
      No diagnostics issued in procedure CPD$SYNTAX.

   Procedure CPD$SYNTAX requires 99 words for executable code.
   Procedure CPD$SYNTAX requires 142 words of local(AUTO) storage.

    No errors detected in file CPD$SYNTAX.:E05TSI    .

PL6.E3A0      #001=CPD$SYNTAX File=CPD$SYNTAX.:E05TSI                            TUE 07/29/97 11:33 Page:6    

 Object Unit name= CPD$SYNTAX                                 File name= CPD$SYNTAX.:E05TOU
 UTS= JUL 29 '97 11:33:52.04 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Proc  even  none    99    143  CPD$SYNTAX
    1  RoData even  none     4      4  CPD$SYNTAX

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     0      0   yes    yes     yes      Std        1  CPD$SYNTAX

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       4 CPD$SET_NODES
 yes     yes           Std       1 CXG$GETCMD
         yes           Std       1 CPD$SYNTRY
                       nStd      0 X66_AUTO_1
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET
                       nStd      0 X66_AALT

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     B_VECTNIL
PL6.E3A0      #001=CPD$SYNTAX File=CPD$SYNTAX.:E05TSI                            TUE 07/29/97 11:33 Page:7    

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     NULLSID
PL6.E3A0      #001=CPD$SYNTAX File=CPD$SYNTAX.:E05TSI                            TUE 07/29/97 11:33 Page:8    


        1        1        /*M*          CPD$SYNTAX     Detailed syntax checker for IBEX commands     */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X*  DMC,DFC   */
        8        8        /**/
        9        9        /*P*          NAME:    CPD$SYNTAX
       10       10                      PURPOSE:    This routine is called following gross identification
       11       11                               of an IBEX command; its function is to call
       12       12                               CXG$GETCMD a second time with a detailed syntax tree for
       13       13                               the command which has already been identified by its
       14       14                               leading literal, e.g. JOB, LIMIT, SET, GOTO....
       15       15        */
       16       16        CPD$SYNTAX:
       17       17                PROC(GETCMD)   ALTRET;

     17  0 000000   000000 700200 xent  CPD$SYNTAX   TSX0  ! X66_AUTO_1
         0 000001   000216 000001                    ZERO    142,1

       18       18        %EJECT;
PL6.E3A0      #001=CPD$SYNTAX File=CPD$SYNTAX.:E05TSI                            TUE 07/29/97 11:33 Page:9    
       19       19                %INCLUDE CP_MACROS_C;
       20      771                %INCLUDE CP_SUBS_C;
       21     1688                %INCLUDE XU_MACRO_C;
       22     4794                %INCLUDE CXG_ENTRY ;
       23     4806        /*
       24     4807            ***       PARAMETER
       25     4808        */
       26     4809            %XUG_GETCMD (NAME=GETCMD,STCLASS=PARAM);
       27     5147        %U$PARAM (NAME=U$PARAM,STCLASS=BASED);
       28     5163        /*
       29     5164            ***       MISCELLANEOUS STRUCTURES
       30     5165        */
       31     5166    1           DCL P$PCB$ PTR ;
       32     5167                %P$PCB (NAME=P$PCB, STCLASS="BASED(P$PCB$)") ;
       33     5368                %PARSE$OUT(NAME=P$B,STCLASS=BASED);
       34     5413                %PARSE$SYM(NAME=P$S,STCLASS=BASED);
       35     5451    1           DCL B$TEXT CHAR(%CPBUFFSIZE) BASED;
       36     5452        /*
       37     5453             ***      LOCAL STORAGE
       38     5454        */
       39     5455    1           DCL TEMPBUF CHAR (%CPBUFFSIZE) AUTO;
       40     5456    1           DCL TEMPBUF1 CHAR (%CPBUFFSIZE) AUTO;
       41     5457    1           DCL TEMPBUF_SZ UBIN WORD AUTO ;
       42     5458    1           DCL LABEL_SZ UBIN WORD AUTO;
       43     5459    1           DCL TEMP$BUF CHAR(TEMPBUF_SZ) BASED ;
       44     5460    1           DCL CALL_GETCMD BIT(1) ;
       45     5461    1           DCL SAVE_RCVD_PROMPT# BIT(1) ;
       46     5462        /*
       47     5463            ***       entry references
       48     5464        */
       49     5465    1   DCL     CPD$SET_NODES     ENTRY(4) ;
       50     5466    1   DCL     CPD$SYNTRY        ENTRY(1);
       51     5467        %EJECT;
PL6.E3A0      #001=CPD$SYNTAX File=CPD$SYNTAX.:E05TSI                            TUE 07/29/97 11:33 Page:10   
       52     5468        /*
       53     5469             ***** Save a copy of the first N characters so
       54     5470                   that the label may be restored after parsing.
       55     5471                   The label will be blanked out in the text buffer
       56     5472                   so that it will not screw up the parse ...
       57     5473        */
       58     5474    1        P$PCB$ = GETCMD.PCB$ ;

   5474  0 000002   200003 470500                    LDP0    @GETCMD,,AUTO
         0 000003   000003 236100                    LDQ     3,,PR0
         0 000004   200004 756100                    STQ     P$PCB$,,AUTO

       59     5475    1        TEMPBUF_SZ = P$PCB.NCHARS ;

   5475  0 000005   200004 471500                    LDP1    P$PCB$,,AUTO
         0 000006   100011 235100                    LDA     9,,PR1
         0 000007   200205 755100                    STA     TEMPBUF_SZ,,AUTO

       60     5476    1        TEMPBUF = SUBSTR(P$PCB.TEXT$->B$TEXT,0,TEMPBUF_SZ) ;

   5476  0 000010   100000 473500                    LDP3    0,,PR1
         0 000011   000000 620005                    EAX0    0,AL
         0 000012   040100 100540                    MLR     fill='040'O
         0 000013   300000 000010                    ADSC9   0,,PR3                   cn=0,n=*X0
         0 000014   200005 000400                    ADSC9   TEMPBUF,,AUTO            cn=0,n=256

       61     5477    1        CALL CPD$SET_NODES (P$PCB, GETCMD.NODES$, P$PCB.USER$->U$PARAM.SPCL$$,

   5477  0 000015   100014 474500                    LDP4    12,,PR1
         0 000016   200207 635500                    EPPR5   CALL_GETCMD,,AUTO
         0 000017   200215 455500                    STP5    SAVE_RCVD_PROMPT#+5,,AUTO
         0 000020   400003 633500                    EPPR3   3,,PR4
         0 000021   200214 453500                    STP3    SAVE_RCVD_PROMPT#+4,,AUTO
         0 000022   200003 236100                    LDQ     @GETCMD,,AUTO
         0 000023   200004 235100                    LDA     P$PCB$,,AUTO
         0 000024   200212 757100                    STAQ    SAVE_RCVD_PROMPT#+2,,AUTO
         0 000025   200212 630500                    EPPR0   SAVE_RCVD_PROMPT#+2,,AUTO
PL6.E3A0      #001=CPD$SYNTAX File=CPD$SYNTAX.:E05TSI                            TUE 07/29/97 11:33 Page:11   
         0 000026   000022 631400 xsym               EPPR1   B_VECTNIL+18
         0 000027   000000 701000 xent               TSX1    CPD$SET_NODES
         0 000030   000000 011000                    NOP     0

       62     5478    1                             CALL_GETCMD) ;
       63     5479    1        TEMPBUF1 = SUBSTR(P$PCB.TEXT$->B$TEXT,0,TEMPBUF_SZ);

   5479  0 000031   200004 470500                    LDP0    P$PCB$,,AUTO
         0 000032   000000 471500                    LDP1    0,,PR0
         0 000033   200205 720100                    LXL0    TEMPBUF_SZ,,AUTO
         0 000034   040100 100540                    MLR     fill='040'O
         0 000035   100000 000010                    ADSC9   0,,PR1                   cn=0,n=*X0
         0 000036   200105 000400                    ADSC9   TEMPBUF1,,AUTO           cn=0,n=256

       64     5480    1        LABEL_SZ = P$PCB.OUT$ -> P$B.CPOS;

   5480  0 000037   000003 471500                    LDP1    3,,PR0
         0 000040   100002 235100                    LDA     2,,PR1
         0 000041   200206 755100                    STA     LABEL_SZ,,AUTO

       65     5481    1     IF CALL_GETCMD

   5481  0 000042   200207 234100                    SZN     CALL_GETCMD,,AUTO
         0 000043   000112 605000 0                  TPL     s:5497

       66     5482    1         THEN
       67     5483    2             DO ;

       68     5484    2               GETCMD.SFROUTINE$ = ENTADDR(CPD$SYNTRY) ;

   5484  0 000044   000000 636000 xent               EAQ     CPD$SYNTRY
         0 000045   200003 473500                    LDP3    @GETCMD,,AUTO
         0 000046   300033 756100                    STQ     27,,PR3

       69     5485    2               GETCMD.CONTINUE_OK# = '1'B ;

   5485  0 000047   040000 236003                    LDQ     16384,DU
PL6.E3A0      #001=CPD$SYNTAX File=CPD$SYNTAX.:E05TSI                            TUE 07/29/97 11:33 Page:12   
         0 000050   300006 256100                    ORSQ    6,,PR3

       70     5486    2               GETCMD.TEXT_ = VECTOR(SUBSTR(TEMPBUF1, 0, TEMPBUF_SZ));

   5486  0 000051   200205 235100                    LDA     TEMPBUF_SZ,,AUTO
         0 000052   000020 735000                    ALS     16
         0 000053   000140 135007                    SBLA    96,DL
         0 000054   200212 452500                    STP2    SAVE_RCVD_PROMPT#+2,,AUTO
         0 000055   200212 236100                    LDQ     SAVE_RCVD_PROMPT#+2,,AUTO
         0 000056   000105 036003                    ADLQ    69,DU
         0 000057   300034 757100                    STAQ    28,,PR3

       71     5487    2               GETCMD.SKIP_PREPROCESS# = '1'B ;

   5487  0 000060   004000 236003                    LDQ     2048,DU
         0 000061   300006 256100                    ORSQ    6,,PR3

       72     5488    2               IF GETCMD.CONTINUED#

   5488  0 000062   300006 236100                    LDQ     6,,PR3
         0 000063   100000 316003                    CANQ    32768,DU
         0 000064   000071 600000 0                  TZE     s:5491

       73     5489    2                 THEN
       74     5490    2                   CALL INSERT(TEMPBUF1, TEMPBUF_SZ-1,1,';') ;

   5490  0 000065   200205 235100                    LDA     TEMPBUF_SZ,,AUTO
         0 000066   040105 100400                    MLR     fill='040'O
         0 000067   000000 000001 1                  ADSC9   0                        cn=0,n=1
         0 000070   200104 600001                    ADSC9   TEMPBUF+63,A,AUTO        cn=3,n=1

       75     5491    2               SAVE_RCVD_PROMPT# = GETCMD.RCVD_PROMPT# ;

   5491  0 000071   300006 236100                    LDQ     6,,PR3
         0 000072   000004 736000                    QLS     4
         0 000073   400000 376003                    ANQ     -131072,DU
         0 000074   200210 756100                    STQ     SAVE_RCVD_PROMPT#,,AUTO
PL6.E3A0      #001=CPD$SYNTAX File=CPD$SYNTAX.:E05TSI                            TUE 07/29/97 11:33 Page:13   

       76     5492    2               CALL CXG$GETCMD(GETCMD) ALTRET(E_PARSE) ;

   5492  0 000075   200003 630500                    EPPR0   @GETCMD,,AUTO
         0 000076   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 000077   000000 701000 xent               TSX1    CXG$GETCMD
         0 000100   000124 702000 0                  TSX2    E_PARSE

       77     5493    2               GETCMD.TEXT_ = VECTOR(NIL) ;

   5493  0 000101   000002 237000 1                  LDAQ    2
         0 000102   200003 470500                    LDP0    @GETCMD,,AUTO
         0 000103   000034 757100                    STAQ    28,,PR0

       78     5494    2               GETCMD.RCVD_PROMPT# = SAVE_RCVD_PROMPT# ;

   5494  0 000104   200210 236100                    LDQ     SAVE_RCVD_PROMPT#,,AUTO
         0 000105   000004 772000                    QRL     4
         0 000106   000006 676100                    ERQ     6,,PR0
         0 000107   020000 376003                    ANQ     8192,DU
         0 000110   000006 656100                    ERSQ    6,,PR0

       79     5495    2             END ; /* Then Do */

   5495  0 000111   000115 710000 0                  TRA     s:5498

       80     5496    1         ELSE
       81     5497    1             GETCMD.OUT$ = P$PCB.OUT$ ;

   5497  0 000112   000003 236100                    LDQ     3,,PR0
         0 000113   200003 473500                    LDP3    @GETCMD,,AUTO
         0 000114   300001 756100                    STQ     1,,PR3

       82     5498    1     CALL INSERT (P$PCB.TEXT$->TEMP$BUF,0,LABEL_SZ,TEMPBUF);

   5498  0 000115   200004 470500                    LDP0    P$PCB$,,AUTO
         0 000116   000000 471500                    LDP1    0,,PR0
PL6.E3A0      #001=CPD$SYNTAX File=CPD$SYNTAX.:E05TSI                            TUE 07/29/97 11:33 Page:14   
         0 000117   200206 720100                    LXL0    LABEL_SZ,,AUTO
         0 000120   040140 100500                    MLR     fill='040'O
         0 000121   200005 000400                    ADSC9   TEMPBUF,,AUTO            cn=0,n=256
         0 000122   100000 000010                    ADSC9   0,,PR1                   cn=0,n=*X0

       83     5499    1     RETURN;

   5499  0 000123   000000 702200 xent               TSX2  ! X66_ARET

       84     5500        /**/
       85     5501    1   E_PARSE:
       86     5502    1     GETCMD.TEXT_ = VECTOR(NIL) ;

   5502  0 000124   000002 237000 1     E_PARSE      LDAQ    2
         0 000125   200003 470500                    LDP0    @GETCMD,,AUTO
         0 000126   000034 757100                    STAQ    28,,PR0

       87     5503    1     GETCMD.RCVD_PROMPT# = SAVE_RCVD_PROMPT# ;

   5503  0 000127   200210 236100                    LDQ     SAVE_RCVD_PROMPT#,,AUTO
         0 000130   000004 772000                    QRL     4
         0 000131   000006 676100                    ERQ     6,,PR0
         0 000132   020000 376003                    ANQ     8192,DU
         0 000133   000006 656100                    ERSQ    6,,PR0

       88     5504    1     CALL INSERT (P$PCB.TEXT$->TEMP$BUF,0,LABEL_SZ,TEMPBUF);

   5504  0 000134   200004 471500                    LDP1    P$PCB$,,AUTO
         0 000135   100000 473500                    LDP3    0,,PR1
         0 000136   200206 720100                    LXL0    LABEL_SZ,,AUTO
         0 000137   040140 100500                    MLR     fill='040'O
         0 000140   200005 000400                    ADSC9   TEMPBUF,,AUTO            cn=0,n=256
         0 000141   300000 000010                    ADSC9   0,,PR3                   cn=0,n=*X0

       89     5505    1     ALTRETURN;

   5505  0 000142   000000 702200 xent               TSX2  ! X66_AALT
PL6.E3A0      #001=CPD$SYNTAX File=CPD$SYNTAX.:E05TSI                            TUE 07/29/97 11:33 Page:15   
       90     5506    1   END       CPD$SYNTAX;

PL6.E3A0      #001=CPD$SYNTAX File=CPD$SYNTAX.:E05TSI                            TUE 07/29/97 11:33 Page:16   
--  Include file information  --

   CXG_ENTRY.:E05TOU  cannot be made into a system file and is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
   CP_SUBS_C.:E05TOU  is referenced.
   CP_MACROS_C.:E05TOU  is referenced.
      No diagnostics issued in procedure CPD$SYNTAX.
PL6.E3A0      #001=CPD$SYNTAX File=CPD$SYNTAX.:E05TSI                            TUE 07/29/97 11:33 Page:17   

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @GETCMD                  207-0-0/b BIT         r     1 CALL_GETCMD
    *0-0-0/d STRC(1512)  r     1 GETCMD                   206-0-0/w UBIN        r     1 LABEL_SZ
     4-0-0/w PTR         r     1 P$PCB$                   210-0-0/b BIT         r     1 SAVE_RCVD_PROMPT#
     5-0-0/c CHAR(256)   r     1 TEMPBUF                  105-0-0/c CHAR(256)   r     1 TEMPBUF1
   205-0-0/w UBIN        r     1 TEMPBUF_SZ

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR(256)   r     1 B$TEXT                     0-0-0/w STRC(144)   r     1 P$B
     0-0-0/w STRC(504)   r     1 P$PCB                      0-0-0/w ASTR(153)   r     1 P$S
     0-0-0/c ACHR        r     1 TEMP$BUF                   0-0-0/w STRC(576)   r     1 U$PARAM


   Procedure CPD$SYNTAX requires 99 words for executable code.
   Procedure CPD$SYNTAX requires 142 words of local(AUTO) storage.

    No errors detected in file CPD$SYNTAX.:E05TSI    .
PL6.E3A0      #001=CPD$SYNTAX File=CPD$SYNTAX.:E05TSI                            TUE 07/29/97 11:33 Page:18   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=CPD$SYNTAX File=CPD$SYNTAX.:E05TSI                            TUE 07/29/97 11:33 Page:19   
          MINI XREF LISTING

B$TEXT
      5451**DCL      5476>>ASSIGN   5479>>ASSIGN
CALL_GETCMD
      5460**DCL      5477<>CALL     5481>>IF
CPD$SET_NODES
      5465**DCL-ENT  5477--CALL
CPD$SYNTRY
      5466**DCL-ENT  5484--ASSIGN
CXG$GETCMD
      4801**DCL-ENT  5492--CALL
E_PARSE
      5502**LABEL    5492--CALLALT
GETCMD
      4822**DCL        16--PROC     5492<>CALL
GETCMD.CONTINUED#
      4882**DCL      5488>>IF
GETCMD.CONTINUE_OK#
      4886**DCL      5485<<ASSIGN
GETCMD.NODES$
      4823**DCL      5477<>CALL
GETCMD.OUT$
      4827**DCL      4833--REDEF    5497<<ASSIGN
GETCMD.PCB$
      4847**DCL      5474>>ASSIGN
GETCMD.RCVD_PROMPT#
      4892**DCL      5491>>ASSIGN   5494<<ASSIGN   5503<<ASSIGN
GETCMD.SFROUTINE$
      5072**DCL      5484<<ASSIGN
GETCMD.SKIP_PREPROCESS#
      4903**DCL      5487<<ASSIGN
GETCMD.TEXT_
      5085**DCL      5486<<ASSIGN   5493<<ASSIGN   5502<<ASSIGN
PL6.E3A0      #001=CPD$SYNTAX File=CPD$SYNTAX.:E05TSI                            TUE 07/29/97 11:33 Page:20   
LABEL_SZ
      5458**DCL      5480<<ASSIGN   5498>>CALLBLT  5504>>CALLBLT
P$B.CPOS
      5400**DCL      5480>>ASSIGN
P$PCB
      5186**DCL      5477<>CALL
P$PCB.NCHARS
      5333**DCL      5475>>ASSIGN
P$PCB.OUT$
      5199**DCL      5480>>ASSIGN   5497>>ASSIGN
P$PCB.TEXT$
      5187**DCL      5476>>ASSIGN   5479>>ASSIGN   5498>>CALLBLT  5504>>CALLBLT
P$PCB.USER$
      5353**DCL      5477>>CALL
P$PCB$
      5166**DCL      5186--IMP-PTR  5474<<ASSIGN   5475>>ASSIGN   5476>>ASSIGN   5477>>CALL     5477>>CALL
      5479>>ASSIGN   5480>>ASSIGN   5497>>ASSIGN   5498>>CALLBLT  5504>>CALLBLT
P$S.COUNT
      5443**DCL      5446--IMP-SIZ
SAVE_RCVD_PROMPT#
      5461**DCL      5491<<ASSIGN   5494>>ASSIGN   5503>>ASSIGN
TEMP$BUF
      5459**DCL      5498<<CALLBLT  5504<<CALLBLT
TEMPBUF
      5455**DCL      5476<<ASSIGN   5498>>CALLBLT  5504>>CALLBLT
TEMPBUF1
      5456**DCL      5479<<ASSIGN   5486--ASSIGN   5490<<CALLBLT
TEMPBUF_SZ
      5457**DCL      5459--IMP-SIZ  5475<<ASSIGN   5476>>ASSIGN   5479>>ASSIGN   5486>>ASSIGN   5490>>CALLBLT
      5498>>CALLBLT  5504>>CALLBLT
U$PARAM.SPCL$$
      5152**DCL      5477<>CALL
