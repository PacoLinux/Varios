VERSION E05

PL6.E3A0      #001=FLS$FILE_PACKER_INIT File=FLS$FILE_PACKER.:E05TSI             TUE 07/29/97 16:20 Page:1    
        1        1        /*M* FLS$FILE_PACKER - packs file information into tape blocks */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* THI=1,PLM=3 */
        8        8        FLS$FILE_PACKER_INIT: PROC;
        9        9        /*F*  NAME: FLS$FILE_PACKER_INIT
       10       10              PURPOSE: Initialization for file packing routines
       11       11        */
       12       12
       13       13        /***
       14       14         *** INCLUDE
       15       15         ***/
       16       16
       17       17        %INCLUDE B_ERRORS_C;
       18     1144        %INCLUDE CP_6;
       19     6703        %INCLUDE CP_6_SUBS;
       20     7243        %INCLUDE FLI_DATA_R;
       21     8657        %INCLUDE FLN_DATA_R;
       22     9394        %INCLUDE FLS_DATA_R;
       23    11194
       24    11195        /***
       25    11196         *** ENTRY
       26    11197         ***/
       27    11198
       28    11199    1   DCL FLI$ALLOC_BUF ENTRY(2);
       29    11200    1   DCL FLI$RPT_ERR ENTRY(5);
       30    11201    1   DCL FLI$TAPE_IO_INIT ENTRY;
       31    11202
       32    11203        /***
       33    11204         *** AUTO
       34    11205         ***/
       35    11206
       36    11207    1   DCL M$TSN_USED$ PTR AUTO;
       37    11208    1   DCL SNLIST_END BIT(1) AUTO;
PL6.E3A0      #001=FLS$FILE_PACKER_INIT File=FLS$FILE_PACKER.:E05TSI             TUE 07/29/97 16:20 Page:2    
       38    11209    1   DCL SNLIST$ PTR AUTO;
       39    11210    1   DCL LAST_CT_SN CHAR(6) AUTO;
       40    11211    1   DCL I SBIN AUTO;
       41    11212    1   DCL DP_RUN_NBR SBIN AUTO;
       42    11213
       43    11214         /***
       44    11215          *** BASED
       45    11216          ***/
       46    11217
       47    11218        %F$DCB( STCLASS="BASED(M$TSN_USED$)" );
       48    11275        %VLP_SN( FPTN=VLP_SN,
       49    11276                 N=1,
       50    11277                 STCLASS="BASED(SNLIST$)" );
       51    11290        %B$TCB( STCLASS="BASED(B$TCB$)" );
       52    11293        %B$ALT;
       53    11301
       54    11302        /****************************************/
       55    11303
       56    11304        /***
       57    11305         *** We need at least two pages, one for block tags and one for
       58    11306         *** file FIT/data.
       59    11307         ***/
       60    11308
       61    11309    1      IF NBR_GRANS_PER_TAPE_BUF < 2
       62    11310    2       THEN DO;                  /* Can't save anything...need more granules     */
       63    11311    2         CALL M$XXX;                  /* Parsing routines shouldn't let this by  */
       64    11312    2         END;
       65    11313
       66    11314        /***
       67    11315         *** Get the tape buffer.  Set up primary variables to cause packing
       68    11316         *** routines to start a new output file.
       69    11317         ***/
       70    11318
       71    11319    1      CALL FLI$ALLOC_BUF( TAPE_BLOCK_, NBR_GRANS_PER_TAPE_BUF );
       72    11320
       73    11321    1      OUTBUF_ = TAPE_BLOCK_;
       74    11322    1      GRAN_BASE$ = PINCRW( TAPE_BLOCK_.PTR$, 1024 );
PL6.E3A0      #001=FLS$FILE_PACKER_INIT File=FLS$FILE_PACKER.:E05TSI             TUE 07/29/97 16:20 Page:3    
       75    11323
       76    11324    1      BLK_TAG0$ = PINCRW( GRAN_BASE$, -SIZEW(BLK_TAG0) );
       77    11325    1      BLK_TAG$ = BLK_TAG0$;                /* Must be set equal                  */
       78    11326    1      MIN_BLK_TAG$ = PINCRW( TAPE_BLOCK_.PTR$, SIZEW(BLK_TAG) );
       79    11327
       80    11328    1      CALL FLI$TAPE_IO_INIT;
       81    11329
       82    11330    1      NBR_BLOCK_BYTES = (NBR_GRANS_PER_TAPE_BUF - 1) * 4096;
       83    11331    1      NBR_FILE_BLOCKS = %MAX_NBR_FILE_BLOCKS + 1; /* Force new file              */
       84    11332
       85    11333    1      LAST_TSN_USED = ' ';
       86    11334    1      TSN_SET_NBR = TSN_SET_NBR + 1;
       87    11335    1      TSN_VOL = 0;
       88    11336    1      LAST_TYPE = %CLEANUP_FILE;
       89    11337    1      LAST_DSN_USED.SN#(0) = ' ';
       90    11338
       91    11339    1      CALL M$CLOSE( CLOSE_TSN_USED )
       92    11340    2       WHENALTRETURN DO;
       93    11341    2         END;
       94    11342
       95    11343    1      OPEN_TSN_USED.V.FUN# = %CREATE#;
       96    11344    1      CALL M$OPEN( OPEN_TSN_USED )
       97    11345    2       WHENALTRETURN DO;
       98    11346    2         CALL FLI$RPT_ERR;
       99    11347    2         END;
      100    11348
      101    11349    1      TSN_USED_KEY.L = LENGTHV(TSN_USED_KEY);
      102    11350    1      TSN_USED_KEY.RUN_NBR = 0;
      103    11351    1      TSN_USED_KEY.TSN_SET_NBR = 0;
      104    11352    1      TSN_USED_KEY.TSN_VOL = 0;
      105    11353    1      TSN_USED_KEY.TSN_SNLIST_NBR = 0;
      106    11354    1      READ_TSN_USED.V.KEYS# = '1'B;
      107    11355    1      CALL M$READ( READ_TSN_USED )
      108    11356    2       WHENRETURN DO;
      109    11357    2         RUN_NBR = TSN_USED_BUF.UTS;
      110    11358    2         END;
      111    11359    2       WHENALTRETURN DO;
PL6.E3A0      #001=FLS$FILE_PACKER_INIT File=FLS$FILE_PACKER.:E05TSI             TUE 07/29/97 16:20 Page:4    
      112    11360    2         RUN_NBR = 0;
      113    11361    2         END;
      114    11362
      115    11363         /***
      116    11364          *** Admittedly sleazy, but feature just wasn't designed in.
      117    11365          ***/
      118    11366
      119    11367    1      IF TAPE_OPEN.V.XTEND# AND CT_IMAGE ~= ' '
      120    11368    2       THEN DO;                            /* Attempt automatic extension of CT  */
      121    11369    2         LAST_CT_SN = ' ';
      122    11370    2         BACKUP_SN.SN#(0) = DPLIST.SN#(0);
      123    11371    2         OPEN_STATUS.V.RES# = DPRESLIST.NAME(0);
      124    11372    2         OPEN_STATUS.V.FUN# = %IN#;
      125    11373    2         CALL M$OPEN( OPEN_STATUS )
      126    11374    3          WHENRETURN DO;
      127    11375    3            STATUS_KEY.L = LENGTHV(STATUS_KEY);
      128    11376    3            STATUS_KEY.RUN_NBR = 0;
      129    11377    3            STATUS_KEY.TSN_SET_NBR = 0;
      130    11378    3            STATUS_KEY.TSN_VOL = 0;
      131    11379    3            READ_STATUS.V.KEYS# = '1'B;
      132    11380    3            CALL M$READ( READ_STATUS )
      133    11381    4             WHENRETURN DO;
      134    11382    4               DP_RUN_NBR = TSN_USED_BUF.UTS;
      135    11383    4               END;
      136    11384    4             WHENALTRETURN DO;
      137    11385    4               DP_RUN_NBR = 0;
      138    11386    4               END;
      139    11387    3            STATUS_KEY.L = LENGTHV(STATUS_KEY);
      140    11388    3            STATUS_KEY.RUN_NBR = DP_RUN_NBR;
      141    11389    3            STATUS_KEY.TSN_SET_NBR = /* last set number */ 1;
      142    11390    3            STATUS_KEY.TSN_VOL = 1;
      143    11391    3            SNLIST_END = '0'B;
      144    11392    3            LAST_CT_SN = TSN_USED_BUF.TSN;
      145    11393    4            DO WHILE( NOT SNLIST_END );
      146    11394    4               CALL M$READ( READ_STATUS )
      147    11395    5                WHENRETURN DO;
      148    11396    5                  IF STATUS_KEY.RUN_NBR ~= DP_RUN_NBR
PL6.E3A0      #001=FLS$FILE_PACKER_INIT File=FLS$FILE_PACKER.:E05TSI             TUE 07/29/97 16:20 Page:5    
      149    11397    5                   THEN SNLIST_END = '1'B;
      150    11398    6                   ELSE DO;
      151    11399    6                     READ_STATUS.V.KEYS# = '0'B;
      152    11400    6                     LAST_CT_SN = TSN_USED_BUF.TSN;
      153    11401    6                     END;
      154    11402    5                  END;
      155    11403    5                WHENALTRETURN DO;
      156    11404    5                  IF B$TCB$->B$TCB.ALT$->B$ALT.ERR.CODE = %E$NOKEY
      157    11405    5                   THEN READ_STATUS.V.KEYS# = '0'B;
      158    11406    5                   ELSE SNLIST_END = '1'B;
      159    11407    5                  END;
      160    11408    4               END;
      161    11409    3            CALL M$CLOSE( CLOSE_STATUS )
      162    11410    4             WHENALTRETURN DO;
      163    11411    4               END;
      164    11412    3            IF LAST_CT_SN ~= ' '
      165    11413    4             THEN DO;                 /* Find last SN in one of current lists    */
      166    11414    4               CALL FLC_FIND_SN;
      167    11415    4               END;
      168    11416    3             ELSE /* Just use given list */ ;
      169    11417    3            END;
      170    11418    2         END;
      171    11419    1      IF TSN_SET_NBR <= 1
      172    11420    1       THEN
      173    11421    1         RUN_NBR = RUN_NBR + 1;
      174    11422
      175    11423    1      TAPE_WRITE.V.IOERROK# = TAPE_OPEN.V.IOERROK#; /* Set the sane as in OPEN   */
      176    11424
      177    11425    1      RETURN;
      178    11426
      179    11427    1   FLC_FIND_SN: PROC;
      180    11428
      181    11429        /********************/
      182    11430
      183    11431    2      TVECTOR = SNVECLIST.SN_(0);
      184    11432    2      SNLIST$ = TVECTOR.PTR$;
      185    11433
PL6.E3A0      #001=FLS$FILE_PACKER_INIT File=FLS$FILE_PACKER.:E05TSI             TUE 07/29/97 16:20 Page:6    
      186    11434    3      DO I=0 TO VLP_SN.NUM#-1;
      187    11435    3         IF VLP_SN.SN#(I) = LAST_CT_SN
      188    11436    4          THEN DO;
      189    11437    4            TAPE_OPEN.V.VOL# = I + 1;
      190    11438    4            RETURN;
      191    11439    4            END;
      192    11440    3         END;
      193    11441
      194    11442    2      LAST_CT_SN = ' ';
      195    11443    2      RETURN;
      196    11444
      197    11445    2   END FLC_FIND_SN;
      198    11446
      199    11447    1   END FLS$FILE_PACKER_INIT;
      200    11448        %EOD;

PL6.E3A0      #001=FLS$FILE_PACKER_INIT File=FLS$FILE_PACKER.:E05TSI             TUE 07/29/97 16:20 Page:7    
--  Include file information  --

   FLS_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   FLN_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   B_MICROPS_C.:E05TOU  is referenced.
   FLB_SUBS_C.:E05TOU  is referenced.
   FLI_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   CP_6_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B_ERRORS_C.:E05TOU  is referenced.
      No diagnostics issued in procedure FLS$FILE_PACKER_INIT.

   Procedure FLS$FILE_PACKER_INIT requires 208 words for executable code.
   Procedure FLS$FILE_PACKER_INIT requires 12 words of local(AUTO) storage.

PL6.E3A0      #001=FLS$FILE_PACKER_INIT File=FLS$FILE_PACKER.:E05TSI             TUE 07/29/97 16:20 Page:8    

 Object Unit name= FLS$FILE_PACKER_INIT                       File name= FLS$FILE_PACKER.:E05TOU
 UTS= JUL 29 '97 16:20:01.92 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1   DCB   even  none     0      0  M$PRE_RET
    2   Data  even  none   108    154  FLS$FILE_PACKER_INIT
    3   DCB   even  none     0      0  M$DISK_IN
    4   DCB   even  none     0      0  M$DISK00
    5   DCB   even  none     0      0  M$DISK01
    6   DCB   even  none     0      0  M$DISK02
    7   DCB   even  none     0      0  M$DISK03
    8   DCB   even  none     0      0  M$TSN_USED
    9   DCB   even  none     0      0  M$STATUS
   10   DCB   even  none     0      0  M$REBUILD
   11   DCB   even  none     0      0  M$ARCHIVE
   12   DCB   even  none     0      0  M$NODATA_LIST
   13   Proc  even  none   208    320  FLS$FILE_PACKER_INIT
   14  RoData even  none     3      3  FLS$FILE_PACKER_INIT

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
    13      0   yes            yes      Std        0  FLS$FILE_PACKER_INIT
PL6.E3A0      #001=FLS$FILE_PACKER_INIT File=FLS$FILE_PACKER.:E05TSI             TUE 07/29/97 16:20 Page:9    

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       0 FLI$TAPE_IO_INIT
         yes           Std       5 FLI$RPT_ERR
         yes           Std       2 FLI$ALLOC_BUF
                       nStd      0 X66_AUTO_0
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                                  TAPE_DCBLIST$                         TAPE_OPEN
     TAPE_WRITE                            SNVECLIST$                            TVECTOR
     B$TCB$                                NBR_GRANS_PER_TAPE_BUF                DPLIST$
     DPRESLIST$                            DISK_FILE_SPEC$                       SPECCHARS
     EFTWORD                               CT_IMAGE                              M$PRE_RET
     RET_CMDS_NAME                         M$DISK_IN                             M$DISK00
     M$DISK01                              M$DISK02                              M$DISK03
     FROM_DISK_NAME                        FROM_DISK_ACCT                        FROM_DISK_SN
     M$TSN_USED                            M$STATUS                              M$REBUILD
     M$ARCHIVE                             M$NODATA_LIST                         MIN_BLK_TAG$
     BLK_TAG$                              BLK_TAG0$                             NBR_BLOCK_BYTES
     NBR_BYTES_TO_MOVE                     DISK_GRAN$                            BLOCK_GRAN$
     OUTBUF_                               TAPE_BLOCK_                           GRAN_BASE$
     NBR_FILE_BLOCKS                  r    EFT_CVOL_FILE                    r    EFT_RESTRICT_FILE
     LAST_TYPE                             LAST_TSN_USED                         RUN_NBR
     TSN_SET_NBR                           TSN_VOL                               TSN_USED_KEY
     STATUS_KEY                            TSN_USED_BUF                          OPEN_TSN_USED
     TSN_USED_NAME                         READ_TSN_USED                         CLOSE_TSN_USED
     OPEN_STATUS                           BACKUP_NAME                           BACKUP_SN
     READ_STATUS                           CLOSE_STATUS                     r    ARCHIVE_NAME
r    PRIME_FILE                       r    DUAL_FILE                             LAST_DSN_USED
PL6.E3A0      #001=FLS$FILE_PACKER_INIT File=FLS$FILE_PACKER.:E05TSI             TUE 07/29/97 16:20 Page:10   
     REBUILD_NAME                          REBUILD_DIR_KEY                       REBUILD_KEY
     NODATA_FILE_NAME                      NODATA_KEY                            B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID                                 NULLSID
PL6.E3A0      #001=FLS$FILE_PACKER_INIT File=FLS$FILE_PACKER.:E05TSI             TUE 07/29/97 16:20 Page:11   


        1        1        /*M* FLS$FILE_PACKER - packs file information into tape blocks */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* THI=1,PLM=3 */
        8        8        FLS$FILE_PACKER_INIT: PROC;

      8 13 000000   000000 700200 xent  FLS$FILE_PA* TSX0  ! X66_AUTO_0
        13 000001   000014 000000                    ZERO    12,0

        9        9        /*F*  NAME: FLS$FILE_PACKER_INIT
       10       10              PURPOSE: Initialization for file packing routines
       11       11        */
       12       12
       13       13        /***
       14       14         *** INCLUDE
       15       15         ***/
       16       16
       17       17        %INCLUDE B_ERRORS_C;
       18     1144        %INCLUDE CP_6;
       19     6703        %INCLUDE CP_6_SUBS;
       20     7243        %INCLUDE FLI_DATA_R;
       21     8657        %INCLUDE FLN_DATA_R;
       22     9394        %INCLUDE FLS_DATA_R;
       23    11194
       24    11195        /***
       25    11196         *** ENTRY
       26    11197         ***/
       27    11198
       28    11199    1   DCL FLI$ALLOC_BUF ENTRY(2);
       29    11200    1   DCL FLI$RPT_ERR ENTRY(5);
       30    11201    1   DCL FLI$TAPE_IO_INIT ENTRY;
       31    11202
       32    11203        /***
PL6.E3A0      #001=FLS$FILE_PACKER_INIT File=FLS$FILE_PACKER.:E05TSI             TUE 07/29/97 16:20 Page:12   
       33    11204         *** AUTO
       34    11205         ***/
       35    11206
       36    11207    1   DCL M$TSN_USED$ PTR AUTO;
       37    11208    1   DCL SNLIST_END BIT(1) AUTO;
       38    11209    1   DCL SNLIST$ PTR AUTO;
       39    11210    1   DCL LAST_CT_SN CHAR(6) AUTO;
       40    11211    1   DCL I SBIN AUTO;
       41    11212    1   DCL DP_RUN_NBR SBIN AUTO;
       42    11213
       43    11214         /***
       44    11215          *** BASED
       45    11216          ***/
       46    11217
       47    11218        %F$DCB( STCLASS="BASED(M$TSN_USED$)" );
       48    11275        %VLP_SN( FPTN=VLP_SN,
       49    11276                 N=1,
       50    11277                 STCLASS="BASED(SNLIST$)" );
       51    11290        %B$TCB( STCLASS="BASED(B$TCB$)" );
       52    11293        %B$ALT;
       53    11301
       54    11302        /****************************************/
       55    11303
       56    11304        /***
       57    11305         *** We need at least two pages, one for block tags and one for
       58    11306         *** file FIT/data.
       59    11307         ***/
       60    11308
       61    11309    1      IF NBR_GRANS_PER_TAPE_BUF < 2

  11309 13 000002   000000 235000 xsym               LDA     NBR_GRANS_PER_TAPE_BUF
        13 000003   000002 115007                    CMPA    2,DL
        13 000004   000007 605000 13                 TPL     s:11319

       62    11310    2       THEN DO;                  /* Can't save anything...need more granules     */

       63    11311    2         CALL M$XXX;                  /* Parsing routines shouldn't let this by  */
PL6.E3A0      #001=FLS$FILE_PACKER_INIT File=FLS$FILE_PACKER.:E05TSI             TUE 07/29/97 16:20 Page:13   

  11311 13 000005   000003 713400                    CLIMB   3
        13 000006   000000 401760                    pmme    nvectors=0

       64    11312    2         END;

       65    11313
       66    11314        /***
       67    11315         *** Get the tape buffer.  Set up primary variables to cause packing
       68    11316         *** routines to start a new output file.
       69    11317         ***/
       70    11318
       71    11319    1      CALL FLI$ALLOC_BUF( TAPE_BLOCK_, NBR_GRANS_PER_TAPE_BUF );

  11319 13 000007   000000 630400 14                 EPPR0   0
        13 000010   000020 631400 xsym               EPPR1   B_VECTNIL+16
        13 000011   000000 701000 xent               TSX1    FLI$ALLOC_BUF
        13 000012   000000 011000                    NOP     0

       72    11320
       73    11321    1      OUTBUF_ = TAPE_BLOCK_;

  11321 13 000013   000000 237000 xsym               LDAQ    TAPE_BLOCK_
        13 000014   000000 757000 xsym               STAQ    OUTBUF_

       74    11322    1      GRAN_BASE$ = PINCRW( TAPE_BLOCK_.PTR$, 1024 );

  11322 13 000015   000001 236000 xsym               LDQ     TAPE_BLOCK_+1
        13 000016   002000 036003                    ADLQ    1024,DU
        13 000017   000000 756000 xsym               STQ     GRAN_BASE$

       75    11323
       76    11324    1      BLK_TAG0$ = PINCRW( GRAN_BASE$, -SIZEW(BLK_TAG0) );

  11324 13 000020   777765 036003                    ADLQ    -11,DU
        13 000021   000000 756000 xsym               STQ     BLK_TAG0$

PL6.E3A0      #001=FLS$FILE_PACKER_INIT File=FLS$FILE_PACKER.:E05TSI             TUE 07/29/97 16:20 Page:14   
       77    11325    1      BLK_TAG$ = BLK_TAG0$;                /* Must be set equal                  */

  11325 13 000022   000000 756000 xsym               STQ     BLK_TAG$

       78    11326    1      MIN_BLK_TAG$ = PINCRW( TAPE_BLOCK_.PTR$, SIZEW(BLK_TAG) );

  11326 13 000023   000001 236000 xsym               LDQ     TAPE_BLOCK_+1
        13 000024   000013 036003                    ADLQ    11,DU
        13 000025   000000 756000 xsym               STQ     MIN_BLK_TAG$

       79    11327
       80    11328    1      CALL FLI$TAPE_IO_INIT;

  11328 13 000026   000002 631400 xsym               EPPR1   B_VECTNIL+2
        13 000027   000000 701000 xent               TSX1    FLI$TAPE_IO_INIT
        13 000030   000000 011000                    NOP     0

       81    11329
       82    11330    1      NBR_BLOCK_BYTES = (NBR_GRANS_PER_TAPE_BUF - 1) * 4096;

  11330 13 000031   000000 235000 xsym               LDA     NBR_GRANS_PER_TAPE_BUF
        13 000032   000014 735000                    ALS     12
        13 000033   010000 135007                    SBLA    4096,DL
        13 000034   000000 755000 xsym               STA     NBR_BLOCK_BYTES

       83    11331    1      NBR_FILE_BLOCKS = %MAX_NBR_FILE_BLOCKS + 1; /* Force new file              */

  11331 13 000035   000063 236007                    LDQ     51,DL
        13 000036   000000 756000 xsym               STQ     NBR_FILE_BLOCKS

       84    11332
       85    11333    1      LAST_TSN_USED = ' ';

  11333 13 000037   040000 100400                    MLR     fill='040'O
        13 000040   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
        13 000041   000000 000006 xsym               ADSC9   LAST_TSN_USED            cn=0,n=6

PL6.E3A0      #001=FLS$FILE_PACKER_INIT File=FLS$FILE_PACKER.:E05TSI             TUE 07/29/97 16:20 Page:15   
       86    11334    1      TSN_SET_NBR = TSN_SET_NBR + 1;

  11334 13 000042   000000 054000 xsym               AOS     TSN_SET_NBR

       87    11335    1      TSN_VOL = 0;

  11335 13 000043   000000 450000 xsym               STZ     TSN_VOL

       88    11336    1      LAST_TYPE = %CLEANUP_FILE;

  11336 13 000044   000010 235007                    LDA     8,DL
        13 000045   000000 755000 xsym               STA     LAST_TYPE

       89    11337    1      LAST_DSN_USED.SN#(0) = ' ';

  11337 13 000046   040000 100400                    MLR     fill='040'O
        13 000047   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
        13 000050   000001 000006 xsym               ADSC9   LAST_DSN_USED+1          cn=0,n=6

       90    11338
       91    11339    1      CALL M$CLOSE( CLOSE_TSN_USED )

  11339 13 000051   000000 630400 xsym               EPPR0   CLOSE_TSN_USED
        13 000052   450001 713400                    CLIMB   alt,close
        13 000053   406000 401760                    pmme    nvectors=13
        13 000054   000056 702000 13                 TSX2    s:11343
        13 000055   000056 710000 13                 TRA     s:11343

       92    11340    2       WHENALTRETURN DO;

       93    11341    2         END;

       94    11342
       95    11343    1      OPEN_TSN_USED.V.FUN# = %CREATE#;

  11343 13 000056   003000 236007                    LDQ     1536,DL
        13 000057   000045 552010 xsym               STBQ    OPEN_TSN_USED+37,'10'O
PL6.E3A0      #001=FLS$FILE_PACKER_INIT File=FLS$FILE_PACKER.:E05TSI             TUE 07/29/97 16:20 Page:16   

       96    11344    1      CALL M$OPEN( OPEN_TSN_USED )

  11344 13 000060   000000 630400 xsym               EPPR0   OPEN_TSN_USED
        13 000061   450000 713400                    CLIMB   alt,open
        13 000062   410400 401760                    pmme    nvectors=18
        13 000063   000065 702000 13                 TSX2    s:11346
        13 000064   000070 710000 13                 TRA     s:11349

       97    11345    2       WHENALTRETURN DO;

       98    11346    2         CALL FLI$RPT_ERR;

  11346 13 000065   000002 631400 xsym               EPPR1   B_VECTNIL+2
        13 000066   000000 701000 xent               TSX1    FLI$RPT_ERR
        13 000067   000000 011000                    NOP     0

       99    11347    2         END;

      100    11348
      101    11349    1      TSN_USED_KEY.L = LENGTHV(TSN_USED_KEY);

  11349 13 000070   004000 236003                    LDQ     2048,DU
        13 000071   000000 552040 xsym               STBQ    TSN_USED_KEY,'40'O

      102    11350    1      TSN_USED_KEY.RUN_NBR = 0;

  11350 13 000072   000000 236003                    LDQ     0,DU
        13 000073   000000 552020 xsym               STBQ    TSN_USED_KEY,'20'O

      103    11351    1      TSN_USED_KEY.TSN_SET_NBR = 0;

  11351 13 000074   000000 552010 xsym               STBQ    TSN_USED_KEY,'10'O

      104    11352    1      TSN_USED_KEY.TSN_VOL = 0;

  11352 13 000075   000000 552004 xsym               STBQ    TSN_USED_KEY,'04'O
PL6.E3A0      #001=FLS$FILE_PACKER_INIT File=FLS$FILE_PACKER.:E05TSI             TUE 07/29/97 16:20 Page:17   

      105    11353    1      TSN_USED_KEY.TSN_SNLIST_NBR = 0;

  11353 13 000076   000001 552040 xsym               STBQ    TSN_USED_KEY+1,'40'O

      106    11354    1      READ_TSN_USED.V.KEYS# = '1'B;

  11354 13 000077   200000 236007                    LDQ     65536,DL
        13 000100   000010 256000 xsym               ORSQ    READ_TSN_USED+8

      107    11355    1      CALL M$READ( READ_TSN_USED )

  11355 13 000101   000000 630400 xsym               EPPR0   READ_TSN_USED
        13 000102   440000 713400                    CLIMB   alt,read
        13 000103   401400 401760                    pmme    nvectors=4
        13 000104   000110 702000 13                 TSX2    s:11360

      108    11356    2       WHENRETURN DO;

      109    11357    2         RUN_NBR = TSN_USED_BUF.UTS;

  11357 13 000105   000000 235000 xsym               LDA     TSN_USED_BUF
        13 000106   000000 755000 xsym               STA     RUN_NBR

      110    11358    2         END;

  11358 13 000107   000111 710000 13                 TRA     s:11367

      111    11359    2       WHENALTRETURN DO;

      112    11360    2         RUN_NBR = 0;

  11360 13 000110   000000 450000 xsym               STZ     RUN_NBR

      113    11361    2         END;

      114    11362
PL6.E3A0      #001=FLS$FILE_PACKER_INIT File=FLS$FILE_PACKER.:E05TSI             TUE 07/29/97 16:20 Page:18   
      115    11363         /***
      116    11364          *** Admittedly sleazy, but feature just wasn't designed in.
      117    11365          ***/
      118    11366
      119    11367    1      IF TAPE_OPEN.V.XTEND# AND CT_IMAGE ~= ' '

  11367 13 000111   000060 236000 xsym               LDQ     TAPE_OPEN+48
        13 000112   030000 316003                    CANQ    12288,DU
        13 000113   000247 600000 13                 TZE     s:11419
        13 000114   000000 236000 xsym               LDQ     CT_IMAGE
        13 000115   000035 116000 xsym               CMPQ    B_VECTNIL+29
        13 000116   000247 600000 13                 TZE     s:11419

      120    11368    2       THEN DO;                            /* Attempt automatic extension of CT  */

      121    11369    2         LAST_CT_SN = ' ';

  11369 13 000117   040100 100400                    MLR     fill='040'O
        13 000120   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
        13 000121   200006 000006                    ADSC9   LAST_CT_SN,,AUTO         cn=0,n=6

      122    11370    2         BACKUP_SN.SN#(0) = DPLIST.SN#(0);

  11370 13 000122   000000 470400 xsym               LDP0    DPLIST$
        13 000123   040000 100500                    MLR     fill='040'O
        13 000124   000001 000006                    ADSC9   1,,PR0                   cn=0,n=6
        13 000125   000001 000006 xsym               ADSC9   BACKUP_SN+1              cn=0,n=6

      123    11371    2         OPEN_STATUS.V.RES# = DPRESLIST.NAME(0);

  11371 13 000126   000000 471400 xsym               LDP1    DPRESLIST$
        13 000127   100001 236100                    LDQ     1,,PR1
        13 000130   000050 756000 xsym               STQ     OPEN_STATUS+40

      124    11372    2         OPEN_STATUS.V.FUN# = %IN#;

  11372 13 000131   002000 236007                    LDQ     1024,DL
PL6.E3A0      #001=FLS$FILE_PACKER_INIT File=FLS$FILE_PACKER.:E05TSI             TUE 07/29/97 16:20 Page:19   
        13 000132   000045 552010 xsym               STBQ    OPEN_STATUS+37,'10'O

      125    11373    2         CALL M$OPEN( OPEN_STATUS )

  11373 13 000133   000000 630400 xsym               EPPR0   OPEN_STATUS
        13 000134   450000 713400                    CLIMB   alt,open
        13 000135   410400 401760                    pmme    nvectors=18
        13 000136   000247 702000 13                 TSX2    s:11419

      126    11374    3          WHENRETURN DO;

      127    11375    3            STATUS_KEY.L = LENGTHV(STATUS_KEY);

  11375 13 000137   003000 236003                    LDQ     1536,DU
        13 000140   000000 552040 xsym               STBQ    STATUS_KEY,'40'O

      128    11376    3            STATUS_KEY.RUN_NBR = 0;

  11376 13 000141   000000 236003                    LDQ     0,DU
        13 000142   000000 552020 xsym               STBQ    STATUS_KEY,'20'O

      129    11377    3            STATUS_KEY.TSN_SET_NBR = 0;

  11377 13 000143   000000 552010 xsym               STBQ    STATUS_KEY,'10'O

      130    11378    3            STATUS_KEY.TSN_VOL = 0;

  11378 13 000144   000000 552004 xsym               STBQ    STATUS_KEY,'04'O

      131    11379    3            READ_STATUS.V.KEYS# = '1'B;

  11379 13 000145   200000 236007                    LDQ     65536,DL
        13 000146   000010 256000 xsym               ORSQ    READ_STATUS+8

      132    11380    3            CALL M$READ( READ_STATUS )

  11380 13 000147   000000 630400 xsym               EPPR0   READ_STATUS
PL6.E3A0      #001=FLS$FILE_PACKER_INIT File=FLS$FILE_PACKER.:E05TSI             TUE 07/29/97 16:20 Page:20   
        13 000150   440000 713400                    CLIMB   alt,read
        13 000151   401400 401760                    pmme    nvectors=4
        13 000152   000156 702000 13                 TSX2    s:11385

      133    11381    4             WHENRETURN DO;

      134    11382    4               DP_RUN_NBR = TSN_USED_BUF.UTS;

  11382 13 000153   000000 235000 xsym               LDA     TSN_USED_BUF
        13 000154   200011 755100                    STA     DP_RUN_NBR,,AUTO

      135    11383    4               END;

  11383 13 000155   000157 710000 13                 TRA     s:11387

      136    11384    4             WHENALTRETURN DO;

      137    11385    4               DP_RUN_NBR = 0;

  11385 13 000156   200011 450100                    STZ     DP_RUN_NBR,,AUTO

      138    11386    4               END;

      139    11387    3            STATUS_KEY.L = LENGTHV(STATUS_KEY);

  11387 13 000157   003000 236003                    LDQ     1536,DU
        13 000160   000000 552040 xsym               STBQ    STATUS_KEY,'40'O

      140    11388    3            STATUS_KEY.RUN_NBR = DP_RUN_NBR;

  11388 13 000161   200011 236100                    LDQ     DP_RUN_NBR,,AUTO
        13 000162   000022 736000                    QLS     18
        13 000163   000000 552020 xsym               STBQ    STATUS_KEY,'20'O

      141    11389    3            STATUS_KEY.TSN_SET_NBR = /* last set number */ 1;

  11389 13 000164   001000 236007                    LDQ     512,DL
PL6.E3A0      #001=FLS$FILE_PACKER_INIT File=FLS$FILE_PACKER.:E05TSI             TUE 07/29/97 16:20 Page:21   
        13 000165   000000 552010 xsym               STBQ    STATUS_KEY,'10'O

      142    11390    3            STATUS_KEY.TSN_VOL = 1;

  11390 13 000166   000001 236007                    LDQ     1,DL
        13 000167   000000 552004 xsym               STBQ    STATUS_KEY,'04'O

      143    11391    3            SNLIST_END = '0'B;

  11391 13 000170   200004 450100                    STZ     SNLIST_END,,AUTO

      144    11392    3            LAST_CT_SN = TSN_USED_BUF.TSN;

  11392 13 000171   040100 100400                    MLR     fill='040'O
        13 000172   000005 000006 xsym               ADSC9   TSN_USED_BUF+5           cn=0,n=6
        13 000173   200006 000006                    ADSC9   LAST_CT_SN,,AUTO         cn=0,n=6

      145    11393    4            DO WHILE( NOT SNLIST_END );

  11393 13 000174   000232 710000 13                 TRA     s:11408

      146    11394    4               CALL M$READ( READ_STATUS )

  11394 13 000175   000000 630400 xsym               EPPR0   READ_STATUS
        13 000176   440000 713400                    CLIMB   alt,read
        13 000177   401400 401760                    pmme    nvectors=4
        13 000200   000217 702000 13                 TSX2    s:11404

      147    11395    5                WHENRETURN DO;

      148    11396    5                  IF STATUS_KEY.RUN_NBR ~= DP_RUN_NBR

  11396 13 000201   000000 236000 xsym               LDQ     STATUS_KEY
        13 000202   000022 772000                    QRL     18
        13 000203   000777 376007                    ANQ     511,DL
        13 000204   200011 116100                    CMPQ    DP_RUN_NBR,,AUTO
        13 000205   000211 600000 13                 TZE     s:11399
PL6.E3A0      #001=FLS$FILE_PACKER_INIT File=FLS$FILE_PACKER.:E05TSI             TUE 07/29/97 16:20 Page:22   

      149    11397    5                   THEN SNLIST_END = '1'B;

  11397 13 000206   400000 236003                    LDQ     -131072,DU
        13 000207   200004 756100                    STQ     SNLIST_END,,AUTO
        13 000210   000216 710000 13                 TRA     s:11402

      150    11398    6                   ELSE DO;

      151    11399    6                     READ_STATUS.V.KEYS# = '0'B;

  11399 13 000211   000002 236000 14                 LDQ     2
        13 000212   000010 356000 xsym               ANSQ    READ_STATUS+8

      152    11400    6                     LAST_CT_SN = TSN_USED_BUF.TSN;

  11400 13 000213   040100 100400                    MLR     fill='040'O
        13 000214   000005 000006 xsym               ADSC9   TSN_USED_BUF+5           cn=0,n=6
        13 000215   200006 000006                    ADSC9   LAST_CT_SN,,AUTO         cn=0,n=6

      153    11401    6                     END;

      154    11402    5                  END;

  11402 13 000216   000232 710000 13                 TRA     s:11408

      155    11403    5                WHENALTRETURN DO;

      156    11404    5                  IF B$TCB$->B$TCB.ALT$->B$ALT.ERR.CODE = %E$NOKEY

  11404 13 000217   000000 470400 xsym               LDP0    B$TCB$
        13 000220   000000 471500                    LDP1    0,,PR0
        13 000221   100102 236100                    LDQ     66,,PR1
        13 000222   377770 376007                    ANQ     131064,DL
        13 000223   001020 116007                    CMPQ    528,DL
        13 000224   000230 601000 13                 TNZ     s:11406

PL6.E3A0      #001=FLS$FILE_PACKER_INIT File=FLS$FILE_PACKER.:E05TSI             TUE 07/29/97 16:20 Page:23   
      157    11405    5                   THEN READ_STATUS.V.KEYS# = '0'B;

  11405 13 000225   000002 236000 14                 LDQ     2
        13 000226   000010 356000 xsym               ANSQ    READ_STATUS+8
        13 000227   000232 710000 13                 TRA     s:11408

      158    11406    5                   ELSE SNLIST_END = '1'B;

  11406 13 000230   400000 236003                    LDQ     -131072,DU
        13 000231   200004 756100                    STQ     SNLIST_END,,AUTO

      159    11407    5                  END;

      160    11408    4               END;

  11408 13 000232   200004 234100                    SZN     SNLIST_END,,AUTO
        13 000233   000175 605000 13                 TPL     s:11394

      161    11409    3            CALL M$CLOSE( CLOSE_STATUS )

  11409 13 000234   000000 630400 xsym               EPPR0   CLOSE_STATUS
        13 000235   450001 713400                    CLIMB   alt,close
        13 000236   406000 401760                    pmme    nvectors=13
        13 000237   000241 702000 13                 TSX2    s:11412
        13 000240   000241 710000 13                 TRA     s:11412

      162    11410    4             WHENALTRETURN DO;

      163    11411    4               END;

      164    11412    3            IF LAST_CT_SN ~= ' '

  11412 13 000241   040000 106500                    CMPC    fill='040'O
        13 000242   200006 000006                    ADSC9   LAST_CT_SN,,AUTO         cn=0,n=6
        13 000243   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
        13 000244   000247 600000 13                 TZE     s:11419

PL6.E3A0      #001=FLS$FILE_PACKER_INIT File=FLS$FILE_PACKER.:E05TSI             TUE 07/29/97 16:20 Page:24   
      165    11413    4             THEN DO;                 /* Find last SN in one of current lists    */

      166    11414    4               CALL FLC_FIND_SN;

  11414 13 000245   000261 701000 13                 TSX1    FLC_FIND_SN
        13 000246   000000 011000                    NOP     0

      167    11415    4               END;

      168    11416    3             ELSE /* Just use given list */ ;
      169    11417    3            END;

      170    11418    2         END;

      171    11419    1      IF TSN_SET_NBR <= 1

  11419 13 000247   000000 235000 xsym               LDA     TSN_SET_NBR
        13 000250   000001 115007                    CMPA    1,DL
        13 000251   000253 605400 13                 TPNZ    s:11423

      172    11420    1       THEN
      173    11421    1         RUN_NBR = RUN_NBR + 1;

  11421 13 000252   000000 054000 xsym               AOS     RUN_NBR

      174    11422
      175    11423    1      TAPE_WRITE.V.IOERROK# = TAPE_OPEN.V.IOERROK#; /* Set the sane as in OPEN   */

  11423 13 000253   000060 236000 xsym               LDQ     TAPE_OPEN+48
        13 000254   000030 772000                    QRL     24
        13 000255   000010 676000 xsym               ERQ     TAPE_WRITE+8
        13 000256   000020 376007                    ANQ     16,DL
        13 000257   000010 656000 xsym               ERSQ    TAPE_WRITE+8

      176    11424
      177    11425    1      RETURN;

PL6.E3A0      #001=FLS$FILE_PACKER_INIT File=FLS$FILE_PACKER.:E05TSI             TUE 07/29/97 16:20 Page:25   
  11425 13 000260   000000 702200 xent               TSX2  ! X66_ARET

      178    11426
      179    11427    1   FLC_FIND_SN: PROC;

  11427 13 000261   200012 741300       FLC_FIND_SN  STX1  ! DP_RUN_NBR+1,,AUTO

      180    11428
      181    11429        /********************/
      182    11430
      183    11431    2      TVECTOR = SNVECLIST.SN_(0);

  11431 13 000262   000000 470400 xsym               LDP0    SNVECLIST$
        13 000263   000000 237100                    LDAQ    0,,PR0
        13 000264   000000 757000 xsym               STAQ    TVECTOR

      184    11432    2      SNLIST$ = TVECTOR.PTR$;

  11432 13 000265   000001 236000 xsym               LDQ     TVECTOR+1
        13 000266   200005 756100                    STQ     SNLIST$,,AUTO

      185    11433
      186    11434    3      DO I=0 TO VLP_SN.NUM#-1;

  11434 13 000267   200010 450100                    STZ     I,,AUTO
        13 000270   000307 710000 13                 TRA     s:11440+1

      187    11435    3         IF VLP_SN.SN#(I) = LAST_CT_SN

  11435 13 000271   200010 236100                    LDQ     I,,AUTO
        13 000272   000006 402007                    MPY     6,DL
        13 000273   200005 470500                    LDP0    SNLIST$,,AUTO
        13 000274   040100 106506                    CMPC    fill='040'O
        13 000275   000001 000006                    ADSC9   1,Q,PR0                  cn=0,n=6
        13 000276   200006 000006                    ADSC9   LAST_CT_SN,,AUTO         cn=0,n=6
        13 000277   000306 601000 13                 TNZ     s:11440

PL6.E3A0      #001=FLS$FILE_PACKER_INIT File=FLS$FILE_PACKER.:E05TSI             TUE 07/29/97 16:20 Page:26   
      188    11436    4          THEN DO;

      189    11437    4            TAPE_OPEN.V.VOL# = I + 1;

  11437 13 000300   200010 236100                    LDQ     I,,AUTO
        13 000301   000001 036007                    ADLQ    1,DL
        13 000302   000033 736000                    QLS     27
        13 000303   000061 552040 xsym               STBQ    TAPE_OPEN+49,'40'O

      190    11438    4            RETURN;

  11438 13 000304   200012 221300                    LDX1  ! DP_RUN_NBR+1,,AUTO
        13 000305   000001 702211                    TSX2  ! 1,X1

      191    11439    4            END;
      192    11440    3         END;

  11440 13 000306   200010 054100                    AOS     I,,AUTO
        13 000307   200005 470500                    LDP0    SNLIST$,,AUTO
        13 000310   200010 236100                    LDQ     I,,AUTO
        13 000311   000000 116100                    CMPQ    0,,PR0
        13 000312   000271 604000 13                 TMI     s:11435

      193    11441
      194    11442    2      LAST_CT_SN = ' ';

  11442 13 000313   040100 100400                    MLR     fill='040'O
        13 000314   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
        13 000315   200006 000006                    ADSC9   LAST_CT_SN,,AUTO         cn=0,n=6

      195    11443    2      RETURN;

  11443 13 000316   200012 221300                    LDX1  ! DP_RUN_NBR+1,,AUTO
        13 000317   000001 702211                    TSX2  ! 1,X1
      196    11444
      197    11445    2   END FLC_FIND_SN;
      198    11446
PL6.E3A0      #001=FLS$FILE_PACKER_INIT File=FLS$FILE_PACKER.:E05TSI             TUE 07/29/97 16:20 Page:27   
      199    11447    1   END FLS$FILE_PACKER_INIT;
      200    11448        %EOD;

PL6.E3A0      #001=FLS$FILE_PACKER_INIT File=FLS$FILE_PACKER.:E05TSI             TUE 07/29/97 16:20 Page:28   
--  Include file information  --

   FLS_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   FLN_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   B_MICROPS_C.:E05TOU  is referenced.
   FLB_SUBS_C.:E05TOU  is referenced.
   FLI_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   CP_6_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B_ERRORS_C.:E05TOU  is referenced.
      No diagnostics issued in procedure FLS$FILE_PACKER_INIT.
PL6.E3A0      #001=FLS$FILE_PACKER_INIT File=FLS$FILE_PACKER.:E05TSI             TUE 07/29/97 16:20 Page:29   

 **** Variables and constants ****

  ****  Section 002  Data  FLS$FILE_PACKER_INIT

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

   100-0-0/d STRC(1080)  r     1 CLOSE_BLOCK_FILE         142-0-0/d STRC(360)   r     1 DEL_NODATA_REC
     6-0-0/d STRC(2088)  r     1 OPEN_BLOCK_FILE

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

    11-0-0/w SBIN        r     1 DP_RUN_NBR                10-0-0/w SBIN        r     1 I
     6-0-0/c CHAR(6)     r     1 LAST_CT_SN                 3-0-0/w PTR         r     1 M$TSN_USED$
     5-0-0/w PTR         r     1 SNLIST$                    4-0-0/b BIT         r     1 SNLIST_END

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c ASTR(9)     r     1 ARCHIVE_NAME               0-0-0/w PTR         r     1 B$TCB$
     0-0-0/c ASTR(9)     r     1 BACKUP_NAME                0-0-0/d STRC(90)    r     1 BACKUP_SN
     0-0-0/w PTR         r     1 BLK_TAG$                   0-0-0/w PTR         r     1 BLK_TAG0$
     0-0-0/w PTR         r     1 BLOCK_GRAN$                0-0-0/d STRC(1080)  r     1 CLOSE_STATUS
     0-0-0/d STRC(1080)  r     1 CLOSE_TSN_USED             0-0-0/c CHAR(4)     r     1 CT_IMAGE
     0-0-0/w PTR         r     1 DISK_FILE_SPEC$            0-0-0/w PTR         r     1 DISK_GRAN$
     0-0-0/w PTR         r     1 DPLIST$                    0-0-0/w PTR         r     1 DPRESLIST$
     0-0-0/c ASTR(9)     r     1 DUAL_FILE                  0-0-0/c ASTR(9)     r     1 EFT_CVOL_FILE
     0-0-0/c ASTR(9)     r     1 EFT_RESTRICT_FILE          0-0-0/c STRC(72)    r     1 FROM_DISK_ACCT
     0-0-0/c STRC(288)   r     1 FROM_DISK_NAME             0-0-0/d STRC(90)    r     1 FROM_DISK_SN
     0-0-0/w PTR         r     1 GRAN_BASE$                 0-0-0/d STRC(90)    r     1 LAST_DSN_USED
     0-0-0/c CHAR(6)     r     1 LAST_TSN_USED              0-0-0/w SBIN        r     1 LAST_TYPE
     0-0-0/w PTR         r     1 MIN_BLK_TAG$               0-0-0/w SBIN        r     1 NBR_BLOCK_BYTES
PL6.E3A0      #001=FLS$FILE_PACKER_INIT File=FLS$FILE_PACKER.:E05TSI             TUE 07/29/97 16:20 Page:30   
     0-0-0/w SBIN        r     1 NBR_BYTES_TO_MOVE          0-0-0/w SBIN        r     1 NBR_FILE_BLOCKS
     0-0-0/w SBIN        r     1 NBR_GRANS_PER_TAPE_BUF
     0-0-0/c ASTR(9)     r     1 NODATA_FILE_NAME           0-0-0/c STRC(369)   r     1 NODATA_KEY
     0-0-0/d STRC(2088)  r     1 OPEN_STATUS                0-0-0/d STRC(2088)  r     1 OPEN_TSN_USED
     0-0-0/d STRC(72)    r     1 OUTBUF_                    0-0-0/c ASTR(9)     r     1 PRIME_FILE
     0-0-0/d STRC(504)   r     1 READ_STATUS                0-0-0/d STRC(504)   r     1 READ_TSN_USED
     0-0-0/c ASTR(9)     r     1 REBUILD_DIR_KEY            0-0-0/c ASTR(9)     r     1 REBUILD_KEY
     0-0-0/c ASTR(9)     r     1 REBUILD_NAME               0-0-0/c ASTR(9)     r     1 RET_CMDS_NAME
     0-0-0/w SBIN        r     1 RUN_NBR                    0-0-0/w PTR         r     1 SNVECLIST$
     0-0-0/c STRC        r     1 STATUS_KEY                 0-0-0/d STRC(72)    r     1 TAPE_BLOCK_
     0-0-0/w PTR         r     1 TAPE_DCBLIST$              0-0-0/d STRC(2088)  r     1 TAPE_OPEN
     0-0-0/d STRC(432)   r     1 TAPE_WRITE                 0-0-0/w SBIN        r     1 TSN_SET_NBR
     0-0-0/w STRC(270)   r     1 TSN_USED_BUF               0-0-0/c STRC(45)    r     1 TSN_USED_KEY
     0-0-0/c ASTR(9)     r     1 TSN_USED_NAME              0-0-0/w SBIN        r     1 TSN_VOL
     0-0-0/d STRC(72)    r     1 TVECTOR

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(2448)  r     1 B$ALT                      0-0-0/w STRC(144)   r     1 B$TCB
     0-0-0/w STRC(396)   r     1 BLK_TAG                    0-0-0/w STRC(396)   r     1 BLK_TAG0
     0-0-0/d STRC(90)    r     1 DPLIST                     0-0-0/w STRC(72)    r     1 DPRESLIST
     0-0-0/d ASTR(3528)  r     1 F$DCB                      0-0-0N  NULL        r     1 M$DISK_IN
     0-0-0N  NULL        r     1 M$NODATA_LIST
     0-0-0/d STRC(72)    r     1 SNVECLIST(0:0)
     0-0-0/d STRC(90)    r     1 VLP_SN


   Procedure FLS$FILE_PACKER_INIT requires 208 words for executable code.
   Procedure FLS$FILE_PACKER_INIT requires 12 words of local(AUTO) storage.
PL6.E3A0      #001=FLS$FILE_PACKER_INIT File=FLS$FILE_PACKER.:E05TSI             TUE 07/29/97 16:20 Page:31   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=FLS$FILE_PACKER_INIT File=FLS$FILE_PACKER.:E05TSI             TUE 07/29/97 16:20 Page:32   
          MINI XREF LISTING

ARCHIVE_NAME.L#
     10286**DCL     10286--IMP-SIZ
B$ALT.CODE
     11295**DCL     11295--REDEF   11296--REDEF   11296--REDEF
B$ALT.ERR.CODE
     11297**DCL     11404>>IF
B$ALT.ERR.ERR#
     11297**DCL     11297--REDEF
B$ALT.EVID
     11296**DCL     11296--REDEF   11296--REDEF
B$TCB.ALT$
     11291**DCL     11404>>IF
B$TCB$
      8174**DCL     11291--IMP-PTR 11404>>IF
BACKUP_NAME.L#
      9930**DCL      9930--IMP-SIZ
BACKUP_SN.SN#
      9956**DCL     11370<<ASSIGN
BLK_TAG
      9419**DCL     11326--ASSIGN
BLK_TAG.NAME
      9422**DCL      9422--REDEF
BLK_TAG$
      9419**DCL      9419--IMP-PTR 11325<<ASSIGN
BLK_TAG0
      9425**DCL     11324--ASSIGN
BLK_TAG0.NAME
      9428**DCL      9428--REDEF
BLK_TAG0$
      9425**DCL      9425--IMP-PTR 11324<<ASSIGN  11325>>ASSIGN
BLOCK_GRAN$
      9432**DCL      9433--IMP-PTR
PL6.E3A0      #001=FLS$FILE_PACKER_INIT File=FLS$FILE_PACKER.:E05TSI             TUE 07/29/97 16:20 Page:33   
CLOSE_BLOCK_FILE.SN_
      9336**DCL      9336--REDEF
CLOSE_BLOCK_FILE.UTL_
      9337**DCL      9337--REDEF
CLOSE_BLOCK_FILE.V
      9341**DCL      9336--DCLINIT
CLOSE_BLOCK_FILE.V.EXPIRE#
      9351**DCL      9351--REDEF
CLOSE_BLOCK_FILE.V.TYPE#
      9349**DCL      9349--REDEF
CLOSE_BLOCK_FILE.V.XTNSIZE#
      9346**DCL      9346--REDEF    9348--REDEF
CLOSE_NODATA_LIST.SN_
     11084**DCL     11084--REDEF
CLOSE_NODATA_LIST.UTL_
     11085**DCL     11085--REDEF
CLOSE_NODATA_LIST.V.EXPIRE#
     11099**DCL     11099--REDEF
CLOSE_NODATA_LIST.V.TYPE#
     11097**DCL     11097--REDEF
CLOSE_NODATA_LIST.V.XTNSIZE#
     11094**DCL     11094--REDEF   11096--REDEF
CLOSE_PRIME_DUAL.SN_
     10561**DCL     10561--REDEF
CLOSE_PRIME_DUAL.UTL_
     10562**DCL     10562--REDEF
CLOSE_PRIME_DUAL.V.EXPIRE#
     10576**DCL     10576--REDEF
CLOSE_PRIME_DUAL.V.TYPE#
     10574**DCL     10574--REDEF
CLOSE_PRIME_DUAL.V.XTNSIZE#
     10571**DCL     10571--REDEF   10573--REDEF
CLOSE_REBUILD.SN_
     10836**DCL     10836--REDEF
CLOSE_REBUILD.UTL_
     10837**DCL     10837--REDEF
PL6.E3A0      #001=FLS$FILE_PACKER_INIT File=FLS$FILE_PACKER.:E05TSI             TUE 07/29/97 16:20 Page:34   
CLOSE_REBUILD.V.EXPIRE#
     10851**DCL     10851--REDEF
CLOSE_REBUILD.V.TYPE#
     10849**DCL     10849--REDEF
CLOSE_REBUILD.V.XTNSIZE#
     10846**DCL     10846--REDEF   10848--REDEF
CLOSE_STATUS
     10051**DCL     11409<>CALL
CLOSE_STATUS.SN_
     10051**DCL     10051--REDEF
CLOSE_STATUS.UTL_
     10052**DCL     10052--REDEF
CLOSE_STATUS.V.EXPIRE#
     10066**DCL     10066--REDEF
CLOSE_STATUS.V.TYPE#
     10064**DCL     10064--REDEF
CLOSE_STATUS.V.XTNSIZE#
     10061**DCL     10061--REDEF   10063--REDEF
CLOSE_TSN_USED
      9761**DCL     11339<>CALL
CLOSE_TSN_USED.SN_
      9761**DCL      9761--REDEF
CLOSE_TSN_USED.UTL_
      9762**DCL      9762--REDEF
CLOSE_TSN_USED.V.EXPIRE#
      9776**DCL      9776--REDEF
CLOSE_TSN_USED.V.TYPE#
      9774**DCL      9774--REDEF
CLOSE_TSN_USED.V.XTNSIZE#
      9771**DCL      9771--REDEF    9773--REDEF
CON_CLOSE_ARCHIVE.SN_
     10093**DCL     10093--REDEF
CON_CLOSE_ARCHIVE.UTL_
     10094**DCL     10094--REDEF
CON_CLOSE_ARCHIVE.V.EXPIRE#
     10108**DCL     10108--REDEF
PL6.E3A0      #001=FLS$FILE_PACKER_INIT File=FLS$FILE_PACKER.:E05TSI             TUE 07/29/97 16:20 Page:35   
CON_CLOSE_ARCHIVE.V.TYPE#
     10106**DCL     10106--REDEF
CON_CLOSE_ARCHIVE.V.XTNSIZE#
     10103**DCL     10103--REDEF   10105--REDEF
CON_OPEN_ARCHIVE_FILE.ACSVEH_
     10180**DCL     10181--REDEF
CON_OPEN_ARCHIVE_FILE.ALTKEYS_
     10186**DCL     10187--REDEF   10187--REDEF
CON_OPEN_ARCHIVE_FILE.HDR_
     10185**DCL     10186--REDEF
CON_OPEN_ARCHIVE_FILE.TAB_
     10184**DCL     10185--REDEF
CON_OPEN_ARCHIVE_FILE.UHL_
     10178**DCL     10179--REDEF   10179--REDEF
CON_OPEN_ARCHIVE_FILE.V.FSN#
     10218**DCL     10218--REDEF   10218--REDEF
CON_OPEN_ARCHIVE_FILE.WSN_
     10184**DCL     10184--REDEF
CON_READ_ARCHIVE_FILE.STATION_
     10242**DCL     10243--REDEF
CON_READ_ARCHIVE_FILE.V.DVBYTE.REREAD#
     10254**DCL     10254--REDEF
CON_READ_ARCHIVE_FILE.V.INDX#
     10252**DCL     10252--REDEF
CT_IMAGE
      8344**DCL     11367>>IF
CVOL_UTL.ULBL#
      9521**DCL      9521--REDEF
DEL_NODATA_REC.V
     11187**DCL     11184--DCLINIT
DISK_CLOSE.SN_
      7854**DCL      7854--REDEF
DISK_CLOSE.UTL_
      7855**DCL      7855--REDEF
DISK_CLOSE.V.EXPIRE#
      7869**DCL      7869--REDEF
PL6.E3A0      #001=FLS$FILE_PACKER_INIT File=FLS$FILE_PACKER.:E05TSI             TUE 07/29/97 16:20 Page:36   
DISK_CLOSE.V.TYPE#
      7867**DCL      7867--REDEF
DISK_CLOSE.V.XTNSIZE#
      7864**DCL      7864--REDEF    7866--REDEF
DISK_CLOSE_NEXT.SN_
      9033**DCL      9033--REDEF
DISK_CLOSE_NEXT.UTL_
      9034**DCL      9034--REDEF
DISK_CLOSE_NEXT.V.EXPIRE#
      9048**DCL      9048--REDEF
DISK_CLOSE_NEXT.V.TYPE#
      9046**DCL      9046--REDEF
DISK_CLOSE_NEXT.V.XTNSIZE#
      9043**DCL      9043--REDEF    9045--REDEF
DISK_CLOSE_ORDINARY.SN_
      9075**DCL      9075--REDEF
DISK_CLOSE_ORDINARY.UTL_
      9076**DCL      9076--REDEF
DISK_CLOSE_ORDINARY.V.EXPIRE#
      9090**DCL      9090--REDEF
DISK_CLOSE_ORDINARY.V.TYPE#
      9088**DCL      9088--REDEF
DISK_CLOSE_ORDINARY.V.XTNSIZE#
      9085**DCL      9085--REDEF    9087--REDEF
DISK_FILE_SPEC.SPEC
      8219**DCL      8221--REDEF
DISK_FILE_SPEC.SPEC.START
      8220**DCL      8220--REDEF
DISK_FILE_SPEC.SPEC.STOP
      8221**DCL      8221--REDEF
DISK_FILE_SPEC$
      8218**DCL      8219--IMP-PTR
DISK_GRAN$
      9432**DCL      9432--IMP-PTR
DISK_OPEN.ACSVEH_
      7719**DCL      7720--REDEF
PL6.E3A0      #001=FLS$FILE_PACKER_INIT File=FLS$FILE_PACKER.:E05TSI             TUE 07/29/97 16:20 Page:37   
DISK_OPEN.ALTKEYS_
      7725**DCL      7726--REDEF    7726--REDEF
DISK_OPEN.HDR_
      7724**DCL      7725--REDEF
DISK_OPEN.TAB_
      7723**DCL      7724--REDEF
DISK_OPEN.UHL_
      7717**DCL      7718--REDEF    7718--REDEF
DISK_OPEN.V.FSN#
      7757**DCL      7757--REDEF    7757--REDEF
DISK_OPEN.WSN_
      7723**DCL      7723--REDEF
DISK_OPEN_NEXT.ACSVEH_
      8859**DCL      8860--REDEF
DISK_OPEN_NEXT.ALTKEYS_
      8865**DCL      8866--REDEF    8866--REDEF
DISK_OPEN_NEXT.HDR_
      8864**DCL      8865--REDEF
DISK_OPEN_NEXT.TAB_
      8863**DCL      8864--REDEF
DISK_OPEN_NEXT.UHL_
      8857**DCL      8858--REDEF    8858--REDEF
DISK_OPEN_NEXT.V.FSN#
      8897**DCL      8897--REDEF    8897--REDEF
DISK_OPEN_NEXT.WSN_
      8863**DCL      8863--REDEF
DISK_OPEN_ORDINARY.ACSVEH_
      8968**DCL      8969--REDEF
DISK_OPEN_ORDINARY.ALTKEYS_
      8974**DCL      8975--REDEF    8975--REDEF
DISK_OPEN_ORDINARY.HDR_
      8973**DCL      8974--REDEF
DISK_OPEN_ORDINARY.TAB_
      8972**DCL      8973--REDEF
DISK_OPEN_ORDINARY.UHL_
      8966**DCL      8967--REDEF    8967--REDEF
PL6.E3A0      #001=FLS$FILE_PACKER_INIT File=FLS$FILE_PACKER.:E05TSI             TUE 07/29/97 16:20 Page:38   
DISK_OPEN_ORDINARY.V.FSN#
      9006**DCL      9006--REDEF    9006--REDEF
DISK_OPEN_ORDINARY.WSN_
      8972**DCL      8972--REDEF
DISK_READ.STATION_
      7781**DCL      7782--REDEF
DISK_READ.V.DVBYTE.REREAD#
      7793**DCL      7793--REDEF
DISK_READ.V.INDX#
      7791**DCL      7791--REDEF
DISK_WRITE.STATION_
      7819**DCL      7819--REDEF
DISK_WRITE.V.DVBYTE.VFC#
      7826**DCL      7826--REDEF
DPLIST.SN#
      8216**DCL     11370>>ASSIGN
DPLIST$
      8204**DCL      8216--IMP-PTR 11370>>ASSIGN
DPRESLIST.NAME
      8218**DCL     11371>>ASSIGN
DPRESLIST$
      8218**DCL      8218--IMP-PTR 11371>>ASSIGN
DP_RUN_NBR
     11212**DCL     11382<<ASSIGN  11385<<ASSIGN  11388>>ASSIGN  11396>>IF
DUAL_FILE.L#
     10357**DCL     10357--IMP-SIZ
EFTWORD
      8339**DCL      8339--REDEF
EFT_CVOL_FILE.L#
      9481**DCL      9481--IMP-SIZ
EFT_RESTRICT_FILE.L#
      9508**DCL      9508--IMP-SIZ
F$DCB.ACTPOS
     11251**DCL     11251--REDEF
F$DCB.ARS#
     11225**DCL     11225--REDEF
PL6.E3A0      #001=FLS$FILE_PACKER_INIT File=FLS$FILE_PACKER.:E05TSI             TUE 07/29/97 16:20 Page:39   
F$DCB.ATTR
     11244**DCL     11245--REDEF
F$DCB.BORROW
     11259**DCL     11259--REDEF   11259--REDEF   11259--REDEF
F$DCB.DCBNAME.L
     11273**DCL     11273--IMP-SIZ
F$DCB.EOMCHAR#
     11229**DCL     11229--REDEF
F$DCB.FLDID
     11254**DCL     11254--REDEF
F$DCB.FORM$
     11248**DCL     11248--REDEF
F$DCB.FSECT
     11264**DCL     11264--REDEF
F$DCB.FSN#
     11241**DCL     11241--REDEF   11241--REDEF   11242--REDEF
F$DCB.HEADER$
     11247**DCL     11247--REDEF
F$DCB.IXTNSIZE#
     11245**DCL     11245--REDEF
F$DCB.LASTSTA$
     11234**DCL     11234--REDEF
F$DCB.LVL
     11260**DCL     11260--REDEF
F$DCB.NAME#.C
     11235**DCL     11235--REDEF
F$DCB.NOEOF
     11257**DCL     11257--REDEF
F$DCB.NRECS#
     11246**DCL     11246--REDEF
F$DCB.NRECX
     11265**DCL     11265--REDEF
F$DCB.OHDR
     11257**DCL     11257--REDEF
F$DCB.ORG#
     11240**DCL     11240--REDEF
PL6.E3A0      #001=FLS$FILE_PACKER_INIT File=FLS$FILE_PACKER.:E05TSI             TUE 07/29/97 16:20 Page:40   
F$DCB.PRECNO
     11263**DCL     11263--REDEF
F$DCB.RCSZ
     11269**DCL     11269--REDEF
F$DCB.RES#
     11236**DCL     11236--REDEF
F$DCB.SETX
     11248**DCL     11248--REDEF
F$DCB.TAB$
     11248**DCL     11248--REDEF
F$DCB.TDA
     11262**DCL     11263--REDEF
F$DCB.WSN#
     11236**DCL     11236--REDEF
FIT_AREA.W2
      9792**DCL      9793--REDEF
FLC_FIND_SN
     11427**PROC    11414--CALL
FLI$ALLOC_BUF
     11199**DCL-ENT 11319--CALL
FLI$RPT_ERR
     11200**DCL-ENT 11346--CALL
FLI$TAPE_IO_INIT
     11201**DCL-ENT 11328--CALL
FPT_EXIT.V.STEPCC#
      7644**DCL      7644--REDEF
FROM_DISK_ACCT
      8750**DCL      9274--DCLINIT
FROM_DISK_NAME
      8724**DCL      9270--DCLINIT
FROM_DISK_SN
      8776**DCL      9269--DCLINIT
GRAN_BASE$
      9450**DCL     11322<<ASSIGN  11324>>ASSIGN
I
     11211**DCL     11434<<DOINDEX 11435>>IF      11437>>ASSIGN
PL6.E3A0      #001=FLS$FILE_PACKER_INIT File=FLS$FILE_PACKER.:E05TSI             TUE 07/29/97 16:20 Page:41   
LAST_CT_SN
     11210**DCL     11369<<ASSIGN  11392<<ASSIGN  11400<<ASSIGN  11412>>IF      11435>>IF      11442<<ASSIGN
LAST_DSN_USED.SN#
     10591**DCL     11337<<ASSIGN
LAST_TSN_USED
      9524**DCL     11333<<ASSIGN
LAST_TYPE
      9524**DCL     11336<<ASSIGN
M$CLOSE
      6631**DCL-ENT 11339--CALL    11409--CALL
M$OPEN
      6631**DCL-ENT 11344--CALL    11373--CALL
M$READ
      6632**DCL-ENT 11355--CALL    11380--CALL    11394--CALL
M$TSN_USED$
     11207**DCL     11219--IMP-PTR
M$XXX
      6643**DCL-ENT 11311--CALL
MIN_BLK_TAG$
      9419**DCL     11326<<ASSIGN
NBR_BLOCK_BYTES
      9431**DCL     11330<<ASSIGN
NBR_BYTES_TO_MOVE
      9431**DCL      9432--IMP-SIZ  9433--IMP-SIZ
NBR_FILE_BLOCKS
      9454**DCL     11331<<ASSIGN
NBR_GRANS_PER_TAPE_BUF
      8177**DCL     11309>>IF      11319<>CALL    11330>>ASSIGN
NODATA_FILE_NAME.L#
     11046**DCL     11046--IMP-SIZ
NODATA_KEY
     11192**DCL     11184--DCLINIT 11185--DCLINIT
OPEN_BLOCK_FILE.ACSVEH_
      9271**DCL      9272--REDEF
OPEN_BLOCK_FILE.ALTKEYS_
      9277**DCL      9278--REDEF    9278--REDEF
PL6.E3A0      #001=FLS$FILE_PACKER_INIT File=FLS$FILE_PACKER.:E05TSI             TUE 07/29/97 16:20 Page:42   
OPEN_BLOCK_FILE.HDR_
      9276**DCL      9277--REDEF
OPEN_BLOCK_FILE.TAB_
      9275**DCL      9276--REDEF
OPEN_BLOCK_FILE.UHL_
      9269**DCL      9270--REDEF    9270--REDEF
OPEN_BLOCK_FILE.V
      9278**DCL      9269--DCLINIT
OPEN_BLOCK_FILE.V.FSN#
      9309**DCL      9309--REDEF    9309--REDEF
OPEN_BLOCK_FILE.WSN_
      9275**DCL      9275--REDEF
OPEN_NODATA_LIST.ACSVEH_
     10979**DCL     10980--REDEF
OPEN_NODATA_LIST.ALTKEYS_
     10985**DCL     10986--REDEF   10986--REDEF
OPEN_NODATA_LIST.HDR_
     10984**DCL     10985--REDEF
OPEN_NODATA_LIST.TAB_
     10983**DCL     10984--REDEF
OPEN_NODATA_LIST.UHL_
     10977**DCL     10978--REDEF   10978--REDEF
OPEN_NODATA_LIST.V.FSN#
     11017**DCL     11017--REDEF   11017--REDEF
OPEN_NODATA_LIST.WSN_
     10983**DCL     10983--REDEF
OPEN_PRIME_DUAL.ACSVEH_
     10426**DCL     10427--REDEF
OPEN_PRIME_DUAL.ALTKEYS_
     10432**DCL     10433--REDEF   10433--REDEF
OPEN_PRIME_DUAL.HDR_
     10431**DCL     10432--REDEF
OPEN_PRIME_DUAL.TAB_
     10430**DCL     10431--REDEF
OPEN_PRIME_DUAL.UHL_
     10424**DCL     10425--REDEF   10425--REDEF
PL6.E3A0      #001=FLS$FILE_PACKER_INIT File=FLS$FILE_PACKER.:E05TSI             TUE 07/29/97 16:20 Page:43   
OPEN_PRIME_DUAL.V.FSN#
     10464**DCL     10464--REDEF   10464--REDEF
OPEN_PRIME_DUAL.WSN_
     10430**DCL     10430--REDEF
OPEN_REBUILD.ACSVEH_
     10661**DCL     10662--REDEF
OPEN_REBUILD.ALTKEYS_
     10667**DCL     10668--REDEF   10668--REDEF
OPEN_REBUILD.HDR_
     10666**DCL     10667--REDEF
OPEN_REBUILD.TAB_
     10665**DCL     10666--REDEF
OPEN_REBUILD.UHL_
     10659**DCL     10660--REDEF   10660--REDEF
OPEN_REBUILD.V.FSN#
     10699**DCL     10699--REDEF   10699--REDEF
OPEN_REBUILD.WSN_
     10665**DCL     10665--REDEF
OPEN_STATUS
      9861**DCL     11373<>CALL
OPEN_STATUS.ACSVEH_
      9863**DCL      9864--REDEF
OPEN_STATUS.ALTKEYS_
      9869**DCL      9870--REDEF    9870--REDEF
OPEN_STATUS.HDR_
      9868**DCL      9869--REDEF
OPEN_STATUS.TAB_
      9867**DCL      9868--REDEF
OPEN_STATUS.UHL_
      9861**DCL      9862--REDEF    9862--REDEF
OPEN_STATUS.V.FSN#
      9901**DCL      9901--REDEF    9901--REDEF
OPEN_STATUS.V.FUN#
      9880**DCL     11372<<ASSIGN
OPEN_STATUS.V.RES#
      9885**DCL     11371<<ASSIGN
PL6.E3A0      #001=FLS$FILE_PACKER_INIT File=FLS$FILE_PACKER.:E05TSI             TUE 07/29/97 16:20 Page:44   
OPEN_STATUS.WSN_
      9867**DCL      9867--REDEF
OPEN_TSN_USED
      9597**DCL     11344<>CALL
OPEN_TSN_USED.ACSVEH_
      9599**DCL      9600--REDEF
OPEN_TSN_USED.ALTKEYS_
      9605**DCL      9606--REDEF    9606--REDEF
OPEN_TSN_USED.HDR_
      9604**DCL      9605--REDEF
OPEN_TSN_USED.TAB_
      9603**DCL      9604--REDEF
OPEN_TSN_USED.UHL_
      9597**DCL      9598--REDEF    9598--REDEF
OPEN_TSN_USED.V.FSN#
      9637**DCL      9637--REDEF    9637--REDEF
OPEN_TSN_USED.V.FUN#
      9616**DCL     11343<<ASSIGN
OPEN_TSN_USED.WSN_
      9603**DCL      9603--REDEF
OUTBUF_
      9433**DCL     11321<<ASSIGN
PRE_RET_CLOSE.SN_
      8582**DCL      8582--REDEF
PRE_RET_CLOSE.UTL_
      8583**DCL      8583--REDEF
PRE_RET_CLOSE.V.EXPIRE#
      8597**DCL      8597--REDEF
PRE_RET_CLOSE.V.TYPE#
      8595**DCL      8595--REDEF
PRE_RET_CLOSE.V.XTNSIZE#
      8592**DCL      8592--REDEF    8594--REDEF
PRE_RET_OPEN.ACSVEH_
      8517**DCL      8518--REDEF
PRE_RET_OPEN.ALTKEYS_
      8523**DCL      8524--REDEF    8524--REDEF
PL6.E3A0      #001=FLS$FILE_PACKER_INIT File=FLS$FILE_PACKER.:E05TSI             TUE 07/29/97 16:20 Page:45   
PRE_RET_OPEN.HDR_
      8522**DCL      8523--REDEF
PRE_RET_OPEN.TAB_
      8521**DCL      8522--REDEF
PRE_RET_OPEN.UHL_
      8515**DCL      8516--REDEF    8516--REDEF
PRE_RET_OPEN.V.FSN#
      8555**DCL      8555--REDEF    8555--REDEF
PRE_RET_OPEN.WSN_
      8521**DCL      8521--REDEF
PRE_RET_READ.STATION_
      8372**DCL      8373--REDEF
PRE_RET_READ.V.DVBYTE.REREAD#
      8384**DCL      8384--REDEF
PRE_RET_READ.V.INDX#
      8382**DCL      8382--REDEF
PRE_RET_WRITE.STATION_
      8410**DCL      8410--REDEF
PRE_RET_WRITE.V.DVBYTE.VFC#
      8417**DCL      8417--REDEF
PRIME_FILE.L#
     10330**DCL     10330--IMP-SIZ
READ_AD_OR_FD.ACSVEH_
      9161**DCL      9162--REDEF
READ_AD_OR_FD.ALTKEYS_
      9167**DCL      9168--REDEF    9168--REDEF
READ_AD_OR_FD.HDR_
      9166**DCL      9167--REDEF
READ_AD_OR_FD.TAB_
      9165**DCL      9166--REDEF
READ_AD_OR_FD.UHL_
      9159**DCL      9160--REDEF    9160--REDEF
READ_AD_OR_FD.V.FSN#
      9199**DCL      9199--REDEF    9199--REDEF
READ_AD_OR_FD.WSN_
      9165**DCL      9165--REDEF
PL6.E3A0      #001=FLS$FILE_PACKER_INIT File=FLS$FILE_PACKER.:E05TSI             TUE 07/29/97 16:20 Page:46   
READ_NODATA_LIST.STATION_
     11123**DCL     11124--REDEF
READ_NODATA_LIST.V.DVBYTE.REREAD#
     11135**DCL     11135--REDEF
READ_NODATA_LIST.V.INDX#
     11133**DCL     11133--REDEF
READ_PRIME_DUAL.STATION_
     10488**DCL     10489--REDEF
READ_PRIME_DUAL.V.DVBYTE.REREAD#
     10500**DCL     10500--REDEF
READ_PRIME_DUAL.V.INDX#
     10498**DCL     10498--REDEF
READ_REBUILD.STATION_
     10794**DCL     10795--REDEF
READ_REBUILD.V.DVBYTE.REREAD#
     10806**DCL     10806--REDEF
READ_REBUILD.V.INDX#
     10804**DCL     10804--REDEF
READ_STATUS
     10006**DCL     11380<>CALL    11394<>CALL
READ_STATUS.STATION_
     10009**DCL     10010--REDEF
READ_STATUS.V.DVBYTE.REREAD#
     10021**DCL     10021--REDEF
READ_STATUS.V.INDX#
     10019**DCL     10019--REDEF
READ_STATUS.V.KEYS#
     10011**DCL     11379<<ASSIGN  11399<<ASSIGN  11405<<ASSIGN
READ_TSN_USED
      9716**DCL     11355<>CALL
READ_TSN_USED.STATION_
      9719**DCL      9720--REDEF
READ_TSN_USED.V.DVBYTE.REREAD#
      9731**DCL      9731--REDEF
READ_TSN_USED.V.INDX#
      9729**DCL      9729--REDEF
PL6.E3A0      #001=FLS$FILE_PACKER_INIT File=FLS$FILE_PACKER.:E05TSI             TUE 07/29/97 16:20 Page:47   
READ_TSN_USED.V.KEYS#
      9721**DCL     11354<<ASSIGN
REBUILD_DIR_KEY.L#
     10880**DCL     10880--IMP-SIZ
REBUILD_KEY.L#
     10907**DCL     10907--IMP-SIZ
REBUILD_NAME.L#
     10728**DCL     10728--IMP-SIZ
RET_CMDS_NAME.L#
      8626**DCL      8626--IMP-SIZ
RUN_NBR
      9525**DCL     11357<<ASSIGN  11360<<ASSIGN  11421<<ASSIGN  11421>>ASSIGN
SNLIST$
     11209**DCL     11288--IMP-PTR 11432<<ASSIGN  11434>>DOINDEX 11435>>IF
SNLIST_END
     11208**DCL     11391<<ASSIGN  11393>>DOWHILE 11397<<ASSIGN  11406<<ASSIGN
SNVECLIST.SN_
      8158**DCL     11431>>ASSIGN
SNVECLIST$
      8158**DCL      8158--IMP-PTR 11431>>ASSIGN
SPEC.START
      8222**DCL      8223--REDEF
SPEC.STOP
      8223**DCL      8224--REDEF
SPECCHARS
      8222**DCL      8222--REDEF
STATUS_KEY
      9527**DCL     11375--ASSIGN  11387--ASSIGN
STATUS_KEY.L
      9527**DCL     11375<<ASSIGN  11387<<ASSIGN
STATUS_KEY.RUN_NBR
      9528**DCL     11376<<ASSIGN  11388<<ASSIGN  11396>>IF
STATUS_KEY.TSN_SET_NBR
      9528**DCL     11377<<ASSIGN  11389<<ASSIGN
STATUS_KEY.TSN_VOL
      9528**DCL     11378<<ASSIGN  11390<<ASSIGN
PL6.E3A0      #001=FLS$FILE_PACKER_INIT File=FLS$FILE_PACKER.:E05TSI             TUE 07/29/97 16:20 Page:48   
TAPE_BLOCK_
      9446**DCL     11319<>CALL    11321>>ASSIGN
TAPE_BLOCK_.PTR$
      9448**DCL     11322>>ASSIGN  11326>>ASSIGN
TAPE_BLOCK_.W2
      9447**DCL      9448--REDEF
TAPE_CLOSE.SN_
      8075**DCL      8075--REDEF
TAPE_CLOSE.UTL_
      8076**DCL      8076--REDEF
TAPE_CLOSE.V.EXPIRE#
      8090**DCL      8090--REDEF
TAPE_CLOSE.V.TYPE#
      8088**DCL      8088--REDEF
TAPE_CLOSE.V.XTNSIZE#
      8085**DCL      8085--REDEF    8087--REDEF
TAPE_DCBLIST$
      7631**DCL      7631--IMP-PTR
TAPE_OPEN.ACSVEH_
      7940**DCL      7941--REDEF
TAPE_OPEN.ALTKEYS_
      7946**DCL      7947--REDEF    7947--REDEF
TAPE_OPEN.HDR_
      7945**DCL      7946--REDEF
TAPE_OPEN.TAB_
      7944**DCL      7945--REDEF
TAPE_OPEN.UHL_
      7938**DCL      7939--REDEF    7939--REDEF
TAPE_OPEN.V.FSN#
      7978**DCL      7978--REDEF    7978--REDEF
TAPE_OPEN.V.IOERROK#
      7969**DCL     11423>>ASSIGN
TAPE_OPEN.V.VOL#
      7972**DCL     11437<<ASSIGN
TAPE_OPEN.V.XTEND#
      7968**DCL     11367>>IF
PL6.E3A0      #001=FLS$FILE_PACKER_INIT File=FLS$FILE_PACKER.:E05TSI             TUE 07/29/97 16:20 Page:49   
TAPE_OPEN.WSN_
      7944**DCL      7944--REDEF
TAPE_READ.STATION_
      8002**DCL      8003--REDEF
TAPE_READ.V.DVBYTE.REREAD#
      8014**DCL      8014--REDEF
TAPE_READ.V.INDX#
      8012**DCL      8012--REDEF
TAPE_WRITE.STATION_
      8040**DCL      8040--REDEF
TAPE_WRITE.V.DVBYTE.VFC#
      8047**DCL      8047--REDEF
TAPE_WRITE.V.IOERROK#
      8045**DCL     11423<<ASSIGN
TSN_SET_NBR
      9525**DCL     11334<<ASSIGN  11334>>ASSIGN  11419>>IF
TSN_USED_BUF.TSN
      9529**DCL     11392>>ASSIGN  11400>>ASSIGN
TSN_USED_BUF.UTS
      9529**DCL     11357>>ASSIGN  11382>>ASSIGN
TSN_USED_KEY
      9526**DCL     11349--ASSIGN
TSN_USED_KEY.L
      9526**DCL     11349<<ASSIGN
TSN_USED_KEY.RUN_NBR
      9526**DCL     11350<<ASSIGN
TSN_USED_KEY.TSN_SET_NBR
      9527**DCL     11351<<ASSIGN
TSN_USED_KEY.TSN_SNLIST_NBR
      9527**DCL     11353<<ASSIGN
TSN_USED_KEY.TSN_VOL
      9527**DCL     11352<<ASSIGN
TSN_USED_NAME.L#
      9666**DCL      9666--IMP-SIZ
TSN_VOL
      9525**DCL     11335<<ASSIGN
PL6.E3A0      #001=FLS$FILE_PACKER_INIT File=FLS$FILE_PACKER.:E05TSI             TUE 07/29/97 16:20 Page:50   
TVECTOR
      8170**DCL     11431<<ASSIGN
TVECTOR.PTR$
      8172**DCL     11432>>ASSIGN
TVECTOR.W2
      8171**DCL      8172--REDEF
VLP_SN.NUM#
     11288**DCL     11434>>DOINDEX
VLP_SN.SN#
     11288**DCL     11435>>IF
WRITE_NODATA_LIST.STATION_
     11161**DCL     11161--REDEF
WRITE_NODATA_LIST.V.DVBYTE.VFC#
     11168**DCL     11168--REDEF
WRITE_PRIME_DUAL.STATION_
     10526**DCL     10526--REDEF
WRITE_PRIME_DUAL.V.DVBYTE.VFC#
     10533**DCL     10533--REDEF
WRITE_REBUILD.STATION_
     10762**DCL     10762--REDEF
WRITE_REBUILD.V.DVBYTE.VFC#
     10769**DCL     10769--REDEF
WRITE_STATUS.STATION_
      9977**DCL      9977--REDEF
WRITE_STATUS.V.DVBYTE.VFC#
      9984**DCL      9984--REDEF
WRITE_TSN_USED.STATION_
      9687**DCL      9687--REDEF
WRITE_TSN_USED.V.DVBYTE.VFC#
      9694**DCL      9694--REDEF

PL6.E3A0      #002=FLS$FILE_PACKER_FIN File=FLS$FILE_PACKER.:E05TSI              TUE 07/29/97 16:21 Page:51   
      201        1        /*T***********************************************************/
      202        2        /*T*                                                         */
      203        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      204        4        /*T*                                                         */
      205        5        /*T***********************************************************/
      206        6        FLS$FILE_PACKER_FIN: PROC( COMMAND ) ALTRET;
      207        7        /*F*  NAME: FLS$FILE_PACKER_FIN
      208        8              PURPOSE: Wrap up file packing.
      209        9        */
      210       10    1   DCL COMMAND SBIN ALIGNED;               /* Command being executed             */
      211       11    1   DCL NEW_TSN CHAR(6) CALIGNED; /* New current TSN returned on IOERRCONT,I-O err */
      212       12    1   DCL NEW_FSN UBIN WORD ALIGNED; /* New current FSN returned on IOERRCONT,I-O err */
      213       13
      214       14        /***
      215       15         *** INCLUDE
      216       16         ***/
      217       17
      218       18        %INCLUDE B_ERRORS_C;
      219     1145        %INCLUDE CP_6;
      220     6704        %INCLUDE FLI_DATA_R;
      221     8118        %INCLUDE FLS_DATA_R;
      222     9918
      223     9919        /***
      224     9920         *** ENTRY
      225     9921         ***/
      226     9922
      227     9923    1   DCL FLI$TAPE_CLOSE ENTRY(1) ALTRET;
      228     9924    1   DCL FLS$FLUSH_BLOCK ENTRY(4) ALTRET;
      229     9925
      230     9926        /***
      231     9927         *** BASED
      232     9928         ***/
      233     9929
      234     9930        %B$TCB( STCLASS="BASED(B$TCB$)" );
      235     9933        %B$ALT;
      236     9941
      237     9942        /***************************************/
PL6.E3A0      #002=FLS$FILE_PACKER_FIN File=FLS$FILE_PACKER.:E05TSI              TUE 07/29/97 16:21 Page:52   
      238     9943
      239     9944        /***
      240     9945         *** Flush out any partially filled tape block.
      241     9946         ***/
      242     9947
      243     9948    1      IF BLK_TAG$ ~= BLK_TAG0$
      244     9949    1       THEN CALL FLS$FLUSH_BLOCK( ,COMMAND, NEW_TSN, NEW_FSN )
      245     9950    2          WHENALTRETURN DO;
      246     9951    2            ALTRETURN;
      247     9952    2            END;
      248     9953
      249     9954        /***
      250     9955         *** Close the tape if it's open.
      251     9956         ***/
      252     9957
      253     9958    1      CALL FLI$TAPE_CLOSE
      254     9959    2       WHENALTRETURN DO;
      255     9960        /***
      256     9961         *** Serious error if we cannot close the tape file as file header info.
      257     9962         *** may not have been written.
      258     9963         ***/
      259     9964    2         CALL M$CLOSE( CLOSE_TSN_USED );
      260     9965    2         ALTRETURN;
      261     9966    2         END;
      262     9967
      263     9968    1      CALL M$CLOSE( CLOSE_TSN_USED )
      264     9969    2       WHENALTRETURN DO;
      265     9970    2         END;
      266     9971
      267     9972    1      RETURN;
      268     9973
      269     9974    1   END FLS$FILE_PACKER_FIN;
      270     9975        %EOD;

PL6.E3A0      #002=FLS$FILE_PACKER_FIN File=FLS$FILE_PACKER.:E05TSI              TUE 07/29/97 16:21 Page:53   
--  Include file information  --

   FLS_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   B_MICROPS_C.:E05TOU  is referenced.
   FLB_SUBS_C.:E05TOU  is referenced.
   FLI_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   CP_6_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B_ERRORS_C.:E05TOU  is referenced.
      No diagnostics issued in procedure FLS$FILE_PACKER_FIN.

   Procedure FLS$FILE_PACKER_FIN requires 32 words for executable code.
   Procedure FLS$FILE_PACKER_FIN requires 12 words of local(AUTO) storage.

PL6.E3A0      #002=FLS$FILE_PACKER_FIN File=FLS$FILE_PACKER.:E05TSI              TUE 07/29/97 16:21 Page:54   

 Object Unit name= FLS$FILE_PACKER_FIN                        File name= FLS$FILE_PACKER.:E05TOU
 UTS= JUL 29 '97 16:21:35.72 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1   DCB   even  none     0      0  M$PRE_RET
    2   Data  even  none    20     24  FLS$FILE_PACKER_FIN
    3   DCB   even  none     0      0  M$TSN_USED
    4   DCB   even  none     0      0  M$STATUS
    5   DCB   even  none     0      0  M$REBUILD
    6   DCB   even  none     0      0  M$ARCHIVE
    7   DCB   even  none     0      0  M$NODATA_LIST
    8   Proc  even  none    32     40  FLS$FILE_PACKER_FIN

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     8      0   yes    yes     yes      Std        1  FLS$FILE_PACKER_FIN

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       4 FLS$FLUSH_BLOCK
 yes     yes           Std       1 FLI$TAPE_CLOSE
                       nStd      0 X66_AUTO_1
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_AALT
                       nStd      0 X66_ARET
PL6.E3A0      #002=FLS$FILE_PACKER_FIN File=FLS$FILE_PACKER.:E05TSI              TUE 07/29/97 16:21 Page:55   

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                                  TAPE_DCBLIST$                         SNVECLIST$
     B$TCB$                                DPLIST$                               DPRESLIST$
     DISK_FILE_SPEC$                       SPECCHARS                             EFTWORD
     M$PRE_RET                             RET_CMDS_NAME                         M$TSN_USED
     M$STATUS                              M$REBUILD                             M$ARCHIVE
     M$NODATA_LIST                         BLK_TAG$                              BLK_TAG0$
     NBR_BYTES_TO_MOVE                     DISK_GRAN$                            BLOCK_GRAN$
r    EFT_CVOL_FILE                    r    EFT_RESTRICT_FILE                     TSN_USED_NAME
     CLOSE_TSN_USED                        BACKUP_NAME                      r    ARCHIVE_NAME
r    PRIME_FILE                       r    DUAL_FILE                             REBUILD_NAME
     REBUILD_DIR_KEY                       REBUILD_KEY                           NODATA_FILE_NAME
     NODATA_KEY                            B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID                                 NULLSID
PL6.E3A0      #002=FLS$FILE_PACKER_FIN File=FLS$FILE_PACKER.:E05TSI              TUE 07/29/97 16:21 Page:56   


      201        1        /*T***********************************************************/
      202        2        /*T*                                                         */
      203        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      204        4        /*T*                                                         */
      205        5        /*T***********************************************************/
      206        6        FLS$FILE_PACKER_FIN: PROC( COMMAND ) ALTRET;

      6  8 000000   000000 700200 xent  FLS$FILE_PA* TSX0  ! X66_AUTO_1
         8 000001   000014 000001                    ZERO    12,1

      207        7        /*F*  NAME: FLS$FILE_PACKER_FIN
      208        8              PURPOSE: Wrap up file packing.
      209        9        */
      210       10    1   DCL COMMAND SBIN ALIGNED;               /* Command being executed             */
      211       11    1   DCL NEW_TSN CHAR(6) CALIGNED; /* New current TSN returned on IOERRCONT,I-O err */
      212       12    1   DCL NEW_FSN UBIN WORD ALIGNED; /* New current FSN returned on IOERRCONT,I-O err */
      213       13
      214       14        /***
      215       15         *** INCLUDE
      216       16         ***/
      217       17
      218       18        %INCLUDE B_ERRORS_C;
      219     1145        %INCLUDE CP_6;
      220     6704        %INCLUDE FLI_DATA_R;
      221     8118        %INCLUDE FLS_DATA_R;
      222     9918
      223     9919        /***
      224     9920         *** ENTRY
      225     9921         ***/
      226     9922
      227     9923    1   DCL FLI$TAPE_CLOSE ENTRY(1) ALTRET;
      228     9924    1   DCL FLS$FLUSH_BLOCK ENTRY(4) ALTRET;
      229     9925
      230     9926        /***
      231     9927         *** BASED
      232     9928         ***/
PL6.E3A0      #002=FLS$FILE_PACKER_FIN File=FLS$FILE_PACKER.:E05TSI              TUE 07/29/97 16:21 Page:57   
      233     9929
      234     9930        %B$TCB( STCLASS="BASED(B$TCB$)" );
      235     9933        %B$ALT;
      236     9941
      237     9942        /***************************************/
      238     9943
      239     9944        /***
      240     9945         *** Flush out any partially filled tape block.
      241     9946         ***/
      242     9947
      243     9948    1      IF BLK_TAG$ ~= BLK_TAG0$

   9948  8 000002   000000 236000 xsym               LDQ     BLK_TAG$
         8 000003   000000 116000 xsym               CMPQ    BLK_TAG0$
         8 000004   000022 600000 8                  TZE     s:9958

      244     9949    1       THEN CALL FLS$FLUSH_BLOCK( ,COMMAND, NEW_TSN, NEW_FSN )

   9949  8 000005   200006 630500                    EPPR0   NEW_FSN,,AUTO
         8 000006   200013 450500                    STP0    NEW_FSN+5,,AUTO
         8 000007   200004 631500                    EPPR1   NEW_TSN,,AUTO
         8 000010   200012 451500                    STP1    NEW_FSN+4,,AUTO
         8 000011   200003 236100                    LDQ     @COMMAND,,AUTO
         8 000012   000001 235000 xsym               LDA     B_VECTNIL+1
         8 000013   200010 757100                    STAQ    NEW_FSN+2,,AUTO
         8 000014   200010 630500                    EPPR0   NEW_FSN+2,,AUTO
         8 000015   000022 631400 xsym               EPPR1   B_VECTNIL+18
         8 000016   000000 701000 xent               TSX1    FLS$FLUSH_BLOCK
         8 000017   000021 702000 8                  TSX2    s:9951
         8 000020   000022 710000 8                  TRA     s:9958

      245     9950    2          WHENALTRETURN DO;

      246     9951    2            ALTRETURN;

   9951  8 000021   000000 702200 xent               TSX2  ! X66_AALT

PL6.E3A0      #002=FLS$FILE_PACKER_FIN File=FLS$FILE_PACKER.:E05TSI              TUE 07/29/97 16:21 Page:58   
      247     9952    2            END;
      248     9953
      249     9954        /***
      250     9955         *** Close the tape if it's open.
      251     9956         ***/
      252     9957
      253     9958    1      CALL FLI$TAPE_CLOSE

   9958  8 000022   000002 631400 xsym               EPPR1   B_VECTNIL+2
         8 000023   000000 701000 xent               TSX1    FLI$TAPE_CLOSE
         8 000024   000026 702000 8                  TSX2    s:9964
         8 000025   000032 710000 8                  TRA     s:9968

      254     9959    2       WHENALTRETURN DO;

      255     9960        /***
      256     9961         *** Serious error if we cannot close the tape file as file header info.
      257     9962         *** may not have been written.
      258     9963         ***/
      259     9964    2         CALL M$CLOSE( CLOSE_TSN_USED );

   9964  8 000026   000000 630400 xsym               EPPR0   CLOSE_TSN_USED
         8 000027   050001 713400                    CLIMB   close
         8 000030   406000 401760                    pmme    nvectors=13

      260     9965    2         ALTRETURN;

   9965  8 000031   000000 702200 xent               TSX2  ! X66_AALT

      261     9966    2         END;
      262     9967
      263     9968    1      CALL M$CLOSE( CLOSE_TSN_USED )

   9968  8 000032   000000 630400 xsym               EPPR0   CLOSE_TSN_USED
         8 000033   450001 713400                    CLIMB   alt,close
         8 000034   406000 401760                    pmme    nvectors=13
         8 000035   000037 702000 8                  TSX2    s:9972
PL6.E3A0      #002=FLS$FILE_PACKER_FIN File=FLS$FILE_PACKER.:E05TSI              TUE 07/29/97 16:21 Page:59   
         8 000036   000037 710000 8                  TRA     s:9972

      264     9969    2       WHENALTRETURN DO;

      265     9970    2         END;

      266     9971
      267     9972    1      RETURN;

   9972  8 000037   000000 702200 xent               TSX2  ! X66_ARET
      268     9973
      269     9974    1   END FLS$FILE_PACKER_FIN;
      270     9975        %EOD;

PL6.E3A0      #002=FLS$FILE_PACKER_FIN File=FLS$FILE_PACKER.:E05TSI              TUE 07/29/97 16:21 Page:60   
--  Include file information  --

   FLS_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   B_MICROPS_C.:E05TOU  is referenced.
   FLB_SUBS_C.:E05TOU  is referenced.
   FLI_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   CP_6_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B_ERRORS_C.:E05TOU  is referenced.
      No diagnostics issued in procedure FLS$FILE_PACKER_FIN.
PL6.E3A0      #002=FLS$FILE_PACKER_FIN File=FLS$FILE_PACKER.:E05TSI              TUE 07/29/97 16:21 Page:61   

 **** Variables and constants ****

  ****  Section 002  Data  FLS$FILE_PACKER_FIN

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

    12-0-0/d STRC(360)   r     1 DEL_NODATA_REC

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @COMMAND                  *0-0-0/w SBIN        r     1 COMMAND
     6-0-0/w UBIN        r     1 NEW_FSN                    4-0-0/c CHAR(6)     r     1 NEW_TSN

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c ASTR(9)     r     1 ARCHIVE_NAME               0-0-0/w PTR         r     1 B$TCB$
     0-0-0/c ASTR(9)     r     1 BACKUP_NAME                0-0-0/w PTR         r     1 BLK_TAG$
     0-0-0/w PTR         r     1 BLK_TAG0$                  0-0-0/w PTR         r     1 BLOCK_GRAN$
     0-0-0/d STRC(1080)  r     1 CLOSE_TSN_USED             0-0-0/w PTR         r     1 DISK_FILE_SPEC$
     0-0-0/w PTR         r     1 DISK_GRAN$                 0-0-0/w PTR         r     1 DPLIST$
     0-0-0/w PTR         r     1 DPRESLIST$                 0-0-0/c ASTR(9)     r     1 DUAL_FILE
     0-0-0/c ASTR(9)     r     1 EFT_CVOL_FILE              0-0-0/c ASTR(9)     r     1 EFT_RESTRICT_FILE
     0-0-0/w SBIN        r     1 NBR_BYTES_TO_MOVE          0-0-0/c ASTR(9)     r     1 NODATA_FILE_NAME
     0-0-0/c STRC(369)   r     1 NODATA_KEY                 0-0-0/c ASTR(9)     r     1 PRIME_FILE
     0-0-0/c ASTR(9)     r     1 REBUILD_DIR_KEY            0-0-0/c ASTR(9)     r     1 REBUILD_KEY
     0-0-0/c ASTR(9)     r     1 REBUILD_NAME               0-0-0/c ASTR(9)     r     1 RET_CMDS_NAME
     0-0-0/w PTR         r     1 SNVECLIST$                 0-0-0/w PTR         r     1 TAPE_DCBLIST$
     0-0-0/c ASTR(9)     r     1 TSN_USED_NAME

  ****  BASED and DCB variables  ****
PL6.E3A0      #002=FLS$FILE_PACKER_FIN File=FLS$FILE_PACKER.:E05TSI              TUE 07/29/97 16:21 Page:62   

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0N  NULL        r     1 M$NODATA_LIST


   Procedure FLS$FILE_PACKER_FIN requires 32 words for executable code.
   Procedure FLS$FILE_PACKER_FIN requires 12 words of local(AUTO) storage.
PL6.E3A0      #002=FLS$FILE_PACKER_FIN File=FLS$FILE_PACKER.:E05TSI              TUE 07/29/97 16:21 Page:63   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #002=FLS$FILE_PACKER_FIN File=FLS$FILE_PACKER.:E05TSI              TUE 07/29/97 16:21 Page:64   
          MINI XREF LISTING

ARCHIVE_NAME.L#
      9010**DCL      9010--IMP-SIZ
B$ALT.CODE
      9935**DCL      9935--REDEF    9936--REDEF    9936--REDEF
B$ALT.ERR.ERR#
      9937**DCL      9937--REDEF
B$ALT.EVID
      9936**DCL      9936--REDEF    9936--REDEF
B$TCB$
      7635**DCL      9931--IMP-PTR
BACKUP_NAME.L#
      8654**DCL      8654--IMP-SIZ
BLK_TAG.NAME
      8146**DCL      8146--REDEF
BLK_TAG$
      8143**DCL      8143--IMP-PTR  9948>>IF
BLK_TAG0.NAME
      8152**DCL      8152--REDEF
BLK_TAG0$
      8149**DCL      8149--IMP-PTR  9948>>IF
BLOCK_GRAN$
      8156**DCL      8157--IMP-PTR
CLOSE_NODATA_LIST.SN_
      9808**DCL      9808--REDEF
CLOSE_NODATA_LIST.UTL_
      9809**DCL      9809--REDEF
CLOSE_NODATA_LIST.V.EXPIRE#
      9823**DCL      9823--REDEF
CLOSE_NODATA_LIST.V.TYPE#
      9821**DCL      9821--REDEF
CLOSE_NODATA_LIST.V.XTNSIZE#
      9818**DCL      9818--REDEF    9820--REDEF
PL6.E3A0      #002=FLS$FILE_PACKER_FIN File=FLS$FILE_PACKER.:E05TSI              TUE 07/29/97 16:21 Page:65   
CLOSE_PRIME_DUAL.SN_
      9285**DCL      9285--REDEF
CLOSE_PRIME_DUAL.UTL_
      9286**DCL      9286--REDEF
CLOSE_PRIME_DUAL.V.EXPIRE#
      9300**DCL      9300--REDEF
CLOSE_PRIME_DUAL.V.TYPE#
      9298**DCL      9298--REDEF
CLOSE_PRIME_DUAL.V.XTNSIZE#
      9295**DCL      9295--REDEF    9297--REDEF
CLOSE_REBUILD.SN_
      9560**DCL      9560--REDEF
CLOSE_REBUILD.UTL_
      9561**DCL      9561--REDEF
CLOSE_REBUILD.V.EXPIRE#
      9575**DCL      9575--REDEF
CLOSE_REBUILD.V.TYPE#
      9573**DCL      9573--REDEF
CLOSE_REBUILD.V.XTNSIZE#
      9570**DCL      9570--REDEF    9572--REDEF
CLOSE_STATUS.SN_
      8775**DCL      8775--REDEF
CLOSE_STATUS.UTL_
      8776**DCL      8776--REDEF
CLOSE_STATUS.V.EXPIRE#
      8790**DCL      8790--REDEF
CLOSE_STATUS.V.TYPE#
      8788**DCL      8788--REDEF
CLOSE_STATUS.V.XTNSIZE#
      8785**DCL      8785--REDEF    8787--REDEF
CLOSE_TSN_USED
      8485**DCL      9964<>CALL     9968<>CALL
CLOSE_TSN_USED.SN_
      8485**DCL      8485--REDEF
CLOSE_TSN_USED.UTL_
      8486**DCL      8486--REDEF
PL6.E3A0      #002=FLS$FILE_PACKER_FIN File=FLS$FILE_PACKER.:E05TSI              TUE 07/29/97 16:21 Page:66   
CLOSE_TSN_USED.V.EXPIRE#
      8500**DCL      8500--REDEF
CLOSE_TSN_USED.V.TYPE#
      8498**DCL      8498--REDEF
CLOSE_TSN_USED.V.XTNSIZE#
      8495**DCL      8495--REDEF    8497--REDEF
COMMAND
        10**DCL         6--PROC     9949<>CALL
CON_CLOSE_ARCHIVE.SN_
      8817**DCL      8817--REDEF
CON_CLOSE_ARCHIVE.UTL_
      8818**DCL      8818--REDEF
CON_CLOSE_ARCHIVE.V.EXPIRE#
      8832**DCL      8832--REDEF
CON_CLOSE_ARCHIVE.V.TYPE#
      8830**DCL      8830--REDEF
CON_CLOSE_ARCHIVE.V.XTNSIZE#
      8827**DCL      8827--REDEF    8829--REDEF
CON_OPEN_ARCHIVE_FILE.ACSVEH_
      8904**DCL      8905--REDEF
CON_OPEN_ARCHIVE_FILE.ALTKEYS_
      8910**DCL      8911--REDEF    8911--REDEF
CON_OPEN_ARCHIVE_FILE.HDR_
      8909**DCL      8910--REDEF
CON_OPEN_ARCHIVE_FILE.TAB_
      8908**DCL      8909--REDEF
CON_OPEN_ARCHIVE_FILE.UHL_
      8902**DCL      8903--REDEF    8903--REDEF
CON_OPEN_ARCHIVE_FILE.V.FSN#
      8942**DCL      8942--REDEF    8942--REDEF
CON_OPEN_ARCHIVE_FILE.WSN_
      8908**DCL      8908--REDEF
CON_READ_ARCHIVE_FILE.STATION_
      8966**DCL      8967--REDEF
CON_READ_ARCHIVE_FILE.V.DVBYTE.REREAD#
      8978**DCL      8978--REDEF
PL6.E3A0      #002=FLS$FILE_PACKER_FIN File=FLS$FILE_PACKER.:E05TSI              TUE 07/29/97 16:21 Page:67   
CON_READ_ARCHIVE_FILE.V.INDX#
      8976**DCL      8976--REDEF
CVOL_UTL.ULBL#
      8245**DCL      8245--REDEF
DEL_NODATA_REC.V
      9911**DCL      9908--DCLINIT
DISK_CLOSE.SN_
      7315**DCL      7315--REDEF
DISK_CLOSE.UTL_
      7316**DCL      7316--REDEF
DISK_CLOSE.V.EXPIRE#
      7330**DCL      7330--REDEF
DISK_CLOSE.V.TYPE#
      7328**DCL      7328--REDEF
DISK_CLOSE.V.XTNSIZE#
      7325**DCL      7325--REDEF    7327--REDEF
DISK_FILE_SPEC.SPEC
      7680**DCL      7682--REDEF
DISK_FILE_SPEC.SPEC.START
      7681**DCL      7681--REDEF
DISK_FILE_SPEC.SPEC.STOP
      7682**DCL      7682--REDEF
DISK_FILE_SPEC$
      7679**DCL      7680--IMP-PTR
DISK_GRAN$
      8156**DCL      8156--IMP-PTR
DISK_OPEN.ACSVEH_
      7180**DCL      7181--REDEF
DISK_OPEN.ALTKEYS_
      7186**DCL      7187--REDEF    7187--REDEF
DISK_OPEN.HDR_
      7185**DCL      7186--REDEF
DISK_OPEN.TAB_
      7184**DCL      7185--REDEF
DISK_OPEN.UHL_
      7178**DCL      7179--REDEF    7179--REDEF
PL6.E3A0      #002=FLS$FILE_PACKER_FIN File=FLS$FILE_PACKER.:E05TSI              TUE 07/29/97 16:21 Page:68   
DISK_OPEN.V.FSN#
      7218**DCL      7218--REDEF    7218--REDEF
DISK_OPEN.WSN_
      7184**DCL      7184--REDEF
DISK_READ.STATION_
      7242**DCL      7243--REDEF
DISK_READ.V.DVBYTE.REREAD#
      7254**DCL      7254--REDEF
DISK_READ.V.INDX#
      7252**DCL      7252--REDEF
DISK_WRITE.STATION_
      7280**DCL      7280--REDEF
DISK_WRITE.V.DVBYTE.VFC#
      7287**DCL      7287--REDEF
DPLIST$
      7665**DCL      7677--IMP-PTR
DPRESLIST$
      7679**DCL      7679--IMP-PTR
DUAL_FILE.L#
      9081**DCL      9081--IMP-SIZ
EFTWORD
      7800**DCL      7800--REDEF
EFT_CVOL_FILE.L#
      8205**DCL      8205--IMP-SIZ
EFT_RESTRICT_FILE.L#
      8232**DCL      8232--IMP-SIZ
FIT_AREA.W2
      8516**DCL      8517--REDEF
FLI$TAPE_CLOSE
      9923**DCL-ENT  9958--CALL
FLS$FLUSH_BLOCK
      9924**DCL-ENT  9949--CALL
FPT_EXIT.V.STEPCC#
      7105**DCL      7105--REDEF
M$CLOSE
      6632**DCL-ENT  9964--CALL     9968--CALL
PL6.E3A0      #002=FLS$FILE_PACKER_FIN File=FLS$FILE_PACKER.:E05TSI              TUE 07/29/97 16:21 Page:69   
NBR_BYTES_TO_MOVE
      8155**DCL      8156--IMP-SIZ  8157--IMP-SIZ
NEW_FSN
        12**DCL      9949<>CALL
NEW_TSN
        11**DCL      9949<>CALL
NODATA_FILE_NAME.L#
      9770**DCL      9770--IMP-SIZ
NODATA_KEY
      9916**DCL      9908--DCLINIT  9909--DCLINIT
OPEN_NODATA_LIST.ACSVEH_
      9703**DCL      9704--REDEF
OPEN_NODATA_LIST.ALTKEYS_
      9709**DCL      9710--REDEF    9710--REDEF
OPEN_NODATA_LIST.HDR_
      9708**DCL      9709--REDEF
OPEN_NODATA_LIST.TAB_
      9707**DCL      9708--REDEF
OPEN_NODATA_LIST.UHL_
      9701**DCL      9702--REDEF    9702--REDEF
OPEN_NODATA_LIST.V.FSN#
      9741**DCL      9741--REDEF    9741--REDEF
OPEN_NODATA_LIST.WSN_
      9707**DCL      9707--REDEF
OPEN_PRIME_DUAL.ACSVEH_
      9150**DCL      9151--REDEF
OPEN_PRIME_DUAL.ALTKEYS_
      9156**DCL      9157--REDEF    9157--REDEF
OPEN_PRIME_DUAL.HDR_
      9155**DCL      9156--REDEF
OPEN_PRIME_DUAL.TAB_
      9154**DCL      9155--REDEF
OPEN_PRIME_DUAL.UHL_
      9148**DCL      9149--REDEF    9149--REDEF
OPEN_PRIME_DUAL.V.FSN#
      9188**DCL      9188--REDEF    9188--REDEF
PL6.E3A0      #002=FLS$FILE_PACKER_FIN File=FLS$FILE_PACKER.:E05TSI              TUE 07/29/97 16:21 Page:70   
OPEN_PRIME_DUAL.WSN_
      9154**DCL      9154--REDEF
OPEN_REBUILD.ACSVEH_
      9385**DCL      9386--REDEF
OPEN_REBUILD.ALTKEYS_
      9391**DCL      9392--REDEF    9392--REDEF
OPEN_REBUILD.HDR_
      9390**DCL      9391--REDEF
OPEN_REBUILD.TAB_
      9389**DCL      9390--REDEF
OPEN_REBUILD.UHL_
      9383**DCL      9384--REDEF    9384--REDEF
OPEN_REBUILD.V.FSN#
      9423**DCL      9423--REDEF    9423--REDEF
OPEN_REBUILD.WSN_
      9389**DCL      9389--REDEF
OPEN_STATUS.ACSVEH_
      8587**DCL      8588--REDEF
OPEN_STATUS.ALTKEYS_
      8593**DCL      8594--REDEF    8594--REDEF
OPEN_STATUS.HDR_
      8592**DCL      8593--REDEF
OPEN_STATUS.TAB_
      8591**DCL      8592--REDEF
OPEN_STATUS.UHL_
      8585**DCL      8586--REDEF    8586--REDEF
OPEN_STATUS.V.FSN#
      8625**DCL      8625--REDEF    8625--REDEF
OPEN_STATUS.WSN_
      8591**DCL      8591--REDEF
OPEN_TSN_USED.ACSVEH_
      8323**DCL      8324--REDEF
OPEN_TSN_USED.ALTKEYS_
      8329**DCL      8330--REDEF    8330--REDEF
OPEN_TSN_USED.HDR_
      8328**DCL      8329--REDEF
PL6.E3A0      #002=FLS$FILE_PACKER_FIN File=FLS$FILE_PACKER.:E05TSI              TUE 07/29/97 16:21 Page:71   
OPEN_TSN_USED.TAB_
      8327**DCL      8328--REDEF
OPEN_TSN_USED.UHL_
      8321**DCL      8322--REDEF    8322--REDEF
OPEN_TSN_USED.V.FSN#
      8361**DCL      8361--REDEF    8361--REDEF
OPEN_TSN_USED.WSN_
      8327**DCL      8327--REDEF
PRE_RET_CLOSE.SN_
      8043**DCL      8043--REDEF
PRE_RET_CLOSE.UTL_
      8044**DCL      8044--REDEF
PRE_RET_CLOSE.V.EXPIRE#
      8058**DCL      8058--REDEF
PRE_RET_CLOSE.V.TYPE#
      8056**DCL      8056--REDEF
PRE_RET_CLOSE.V.XTNSIZE#
      8053**DCL      8053--REDEF    8055--REDEF
PRE_RET_OPEN.ACSVEH_
      7978**DCL      7979--REDEF
PRE_RET_OPEN.ALTKEYS_
      7984**DCL      7985--REDEF    7985--REDEF
PRE_RET_OPEN.HDR_
      7983**DCL      7984--REDEF
PRE_RET_OPEN.TAB_
      7982**DCL      7983--REDEF
PRE_RET_OPEN.UHL_
      7976**DCL      7977--REDEF    7977--REDEF
PRE_RET_OPEN.V.FSN#
      8016**DCL      8016--REDEF    8016--REDEF
PRE_RET_OPEN.WSN_
      7982**DCL      7982--REDEF
PRE_RET_READ.STATION_
      7833**DCL      7834--REDEF
PRE_RET_READ.V.DVBYTE.REREAD#
      7845**DCL      7845--REDEF
PL6.E3A0      #002=FLS$FILE_PACKER_FIN File=FLS$FILE_PACKER.:E05TSI              TUE 07/29/97 16:21 Page:72   
PRE_RET_READ.V.INDX#
      7843**DCL      7843--REDEF
PRE_RET_WRITE.STATION_
      7871**DCL      7871--REDEF
PRE_RET_WRITE.V.DVBYTE.VFC#
      7878**DCL      7878--REDEF
PRIME_FILE.L#
      9054**DCL      9054--IMP-SIZ
READ_NODATA_LIST.STATION_
      9847**DCL      9848--REDEF
READ_NODATA_LIST.V.DVBYTE.REREAD#
      9859**DCL      9859--REDEF
READ_NODATA_LIST.V.INDX#
      9857**DCL      9857--REDEF
READ_PRIME_DUAL.STATION_
      9212**DCL      9213--REDEF
READ_PRIME_DUAL.V.DVBYTE.REREAD#
      9224**DCL      9224--REDEF
READ_PRIME_DUAL.V.INDX#
      9222**DCL      9222--REDEF
READ_REBUILD.STATION_
      9518**DCL      9519--REDEF
READ_REBUILD.V.DVBYTE.REREAD#
      9530**DCL      9530--REDEF
READ_REBUILD.V.INDX#
      9528**DCL      9528--REDEF
READ_STATUS.STATION_
      8733**DCL      8734--REDEF
READ_STATUS.V.DVBYTE.REREAD#
      8745**DCL      8745--REDEF
READ_STATUS.V.INDX#
      8743**DCL      8743--REDEF
READ_TSN_USED.STATION_
      8443**DCL      8444--REDEF
READ_TSN_USED.V.DVBYTE.REREAD#
      8455**DCL      8455--REDEF
PL6.E3A0      #002=FLS$FILE_PACKER_FIN File=FLS$FILE_PACKER.:E05TSI              TUE 07/29/97 16:21 Page:73   
READ_TSN_USED.V.INDX#
      8453**DCL      8453--REDEF
REBUILD_DIR_KEY.L#
      9604**DCL      9604--IMP-SIZ
REBUILD_KEY.L#
      9631**DCL      9631--IMP-SIZ
REBUILD_NAME.L#
      9452**DCL      9452--IMP-SIZ
RET_CMDS_NAME.L#
      8087**DCL      8087--IMP-SIZ
SNVECLIST$
      7619**DCL      7619--IMP-PTR
SPEC.START
      7683**DCL      7684--REDEF
SPEC.STOP
      7684**DCL      7685--REDEF
SPECCHARS
      7683**DCL      7683--REDEF
TAPE_BLOCK_.W2
      8171**DCL      8172--REDEF
TAPE_CLOSE.SN_
      7536**DCL      7536--REDEF
TAPE_CLOSE.UTL_
      7537**DCL      7537--REDEF
TAPE_CLOSE.V.EXPIRE#
      7551**DCL      7551--REDEF
TAPE_CLOSE.V.TYPE#
      7549**DCL      7549--REDEF
TAPE_CLOSE.V.XTNSIZE#
      7546**DCL      7546--REDEF    7548--REDEF
TAPE_DCBLIST$
      7092**DCL      7092--IMP-PTR
TAPE_OPEN.ACSVEH_
      7401**DCL      7402--REDEF
TAPE_OPEN.ALTKEYS_
      7407**DCL      7408--REDEF    7408--REDEF
PL6.E3A0      #002=FLS$FILE_PACKER_FIN File=FLS$FILE_PACKER.:E05TSI              TUE 07/29/97 16:21 Page:74   
TAPE_OPEN.HDR_
      7406**DCL      7407--REDEF
TAPE_OPEN.TAB_
      7405**DCL      7406--REDEF
TAPE_OPEN.UHL_
      7399**DCL      7400--REDEF    7400--REDEF
TAPE_OPEN.V.FSN#
      7439**DCL      7439--REDEF    7439--REDEF
TAPE_OPEN.WSN_
      7405**DCL      7405--REDEF
TAPE_READ.STATION_
      7463**DCL      7464--REDEF
TAPE_READ.V.DVBYTE.REREAD#
      7475**DCL      7475--REDEF
TAPE_READ.V.INDX#
      7473**DCL      7473--REDEF
TAPE_WRITE.STATION_
      7501**DCL      7501--REDEF
TAPE_WRITE.V.DVBYTE.VFC#
      7508**DCL      7508--REDEF
TSN_USED_NAME.L#
      8390**DCL      8390--IMP-SIZ
TVECTOR.W2
      7632**DCL      7633--REDEF
WRITE_NODATA_LIST.STATION_
      9885**DCL      9885--REDEF
WRITE_NODATA_LIST.V.DVBYTE.VFC#
      9892**DCL      9892--REDEF
WRITE_PRIME_DUAL.STATION_
      9250**DCL      9250--REDEF
WRITE_PRIME_DUAL.V.DVBYTE.VFC#
      9257**DCL      9257--REDEF
WRITE_REBUILD.STATION_
      9486**DCL      9486--REDEF
WRITE_REBUILD.V.DVBYTE.VFC#
      9493**DCL      9493--REDEF
PL6.E3A0      #002=FLS$FILE_PACKER_FIN File=FLS$FILE_PACKER.:E05TSI              TUE 07/29/97 16:21 Page:75   
WRITE_STATUS.STATION_
      8701**DCL      8701--REDEF
WRITE_STATUS.V.DVBYTE.VFC#
      8708**DCL      8708--REDEF
WRITE_TSN_USED.STATION_
      8411**DCL      8411--REDEF
WRITE_TSN_USED.V.DVBYTE.VFC#
      8418**DCL      8418--REDEF

PL6.E3A0      #003=FLS$FILE_PACKER File=FLS$FILE_PACKER.:E05TSI                  TUE 07/29/97 16:22 Page:76   
      271        1        /*T***********************************************************/
      272        2        /*T*                                                         */
      273        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      274        4        /*T*                                                         */
      275        5        /*T***********************************************************/
      276        6        FLS$FILE_PACKER: PROC( ARG_DCB$, DCB#, FPARAM_, TSN, FSN, CROSS, ERRBACK, ABORT,
      277        7             FIT_ONLY_SAVED, COMMAND ) ALTRET;
      278        8        /*F*  NAME: FLS$FILE_PACKER
      279        9              PURPOSE: Packs current disk file into tape blocks.
      280       10        */
      281       11
      282       12        /***
      283       13         *** INCLUDE
      284       14         ***/
      285       15
      286       16        %INCLUDE B_ERRORS_C;
      287     1143        %INCLUDE CP_6;
      288     6702        %INCLUDE CP_6_SUBS;
      289     7242        %INCLUDE FLE_DATA_R;
      290    13193        %INCLUDE FLI_DATA_R;
      291    14607        %INCLUDE FLN_DATA_R;
      292    15344        %INCLUDE FLS_DATA_R;
      293    17144        %INCLUDE FM$FIT;
      294    17365        %INCLUDE FM$GRAN;
      295    17434
      296    17435        /***
      297    17436         *** PARAMETERS
      298    17437         ***/
      299    17438
      300    17439    1   DCL ARG_DCB$ PTR ALIGNED;               /* Points to DCB                      */
      301    17440    1   DCL DCB# SBIN ALIGNED;   /* DCB# of DCB open to disk file to pack onto tape   */
      302    17441    1   DCL 1 FPARAM_ DALIGNED,                 /* Frames FPARAM info of disk file    */
      303    17442    1         2 * BIT(36),
      304    17443    1         2 PTR$ PTR;
      305    17444    1   DCL TSN CHAR(6) CALIGNED;          /* Current tape serial number returned     */
      306    17445    1   DCL FSN UBIN WORD ALIGNED;    /* Current tape file sequence number returned   */
      307    17446    1   DCL CROSS CHAR(1) CALIGNED;        /* Tape bounary crossed indicator returned */
PL6.E3A0      #003=FLS$FILE_PACKER File=FLS$FILE_PACKER.:E05TSI                  TUE 07/29/97 16:22 Page:77   
      308    17447    1   DCL 1 ERRBACK ALIGNED,                  /* Error word returned                */
      309    17448    1         2 * BIT(12) UNAL,
      310    17449    1         2 * BIT(6) UNAL,
      311    17450    1         2 * BIT(1) UNAL,
      312    17451    1         2 CODE UBIN(14) UNAL,
      313    17452    1         2 * UBIN(3) UNAL;
      314    17453    1   DCL ABORT BIT(1) ALIGNED;               /* Action indicator returned          */
      315    17454    1   DCL FIT_ONLY_SAVED BIT(1) ALIGNED;      /* FIT only save indicator returned.  */
      316    17455                                                /* Possibly set only when ACUP spec'd */
      317    17456    1   DCL COMMAND SBIN ALIGNED;               /* Current command being executed     */
      318    17457
      319    17458        /***
      320    17459         *** ENTRY
      321    17460         ***/
      322    17461
      323    17462    1   DCL FLI$ALLOC_BUF ENTRY(2);
      324    17463    1   DCL FLI$DISK_READ_FILE_INIT ENTRY(1);
      325    17464    1   DCL FLI$DISK_READ ENTRY(5) ALTRET;
      326    17465    1   DCL FLI$RETURN_BUF ENTRY(1);
      327    17466    1   DCL FLI$RPT_ERR ENTRY(5);
      328    17467    1   DCL FLI$TAPE_CLOSE ENTRY(1) ALTRET;
      329    17468    1   DCL FLI$TAPE_IO_INIT ENTRY;
      330    17469    1   DCL FLI$TAPE_OPEN ENTRY(9) ALTRET;
      331    17470    1   DCL FLS$FLUSH_BLOCK ENTRY(4) ALTRET;
      332    17471    1   DCL XSF$LOCCODP ENTRY(2) ALTRET;
      333    17472
      334    17473        /***
      335    17474         *** SYMREF
      336    17475         ***/
      337    17476
      338    17477    1   DCL BREAK_DCB# SBIN SYMREF;
      339    17478
      340    17479        /***
      341    17480         *** STATIC
      342    17481         ***/
      343    17482
      344    17483    1   DCL INFO_BASE$ PTR STATIC;
PL6.E3A0      #003=FLS$FILE_PACKER File=FLS$FILE_PACKER.:E05TSI                  TUE 07/29/97 16:22 Page:78   
      345    17484    1   DCL NBR_GRANS_IN_FILE SBIN STATIC;
      346    17485
      347    17486        /***
      348    17487         *** AUTO
      349    17488         ***/
      350    17489
      351    17490    1   DCL ARS SBIN AUTO;
      352    17491    1   DCL BIX SBIN AUTO;
      353    17492    1   DCL CLEANING_UP BIT(1) AUTO;
      354    17493    1   DCL FIT$ PTR AUTO;
      355    17494    1   DCL CODE03$ PTR AUTO;
      356    17495    1   DCL CODE04$ PTR AUTO;
      357    17496    1   DCL CODE05$ PTR AUTO;
      358    17497    1   DCL 1 DATA_ DALIGNED AUTO,
      359    17498    1         2 * BIT(36),
      360    17499    1         2 PTR$ PTR;
      361    17500    1   DCL DI_ERR BIT(36) AUTO;
      362    17501    1   DCL READ_ERR BIT(36) AUTO;
      363    17502    1   DCL 1 ERR ALIGNED AUTO,
      364    17503    1         2 * BIT(12) UNAL,
      365    17504    1         2 * BIT(6) UNAL,
      366    17505    1         2 * BIT(1) UNAL,
      367    17506    1         2 CODE UBIN(14) UNAL,
      368    17507    1         2 * UBIN(3) UNAL;
      369    17508    1   DCL FLUSH BIT(1) AUTO;
      370    17509    1   DCL GRAN$ PTR AUTO;
      371    17510    1   DCL GRAN_START$ PTR AUTO;
      372    17511    1   DCL NBR_GRANS_TO_READ SBIN AUTO;
      373    17512    1   DCL NBR_NEEDED_BYTES SBIN AUTO;
      374    17513    1   DCL NEW_FILE BIT(1) AUTO;
      375    17514    1   DCL START_NEW_FILE BIT(1) AUTO;
      376    17515    1   DCL MOD_TIME UBIN BASED;
      377    17516        %CODE05 ( BASED=AUTO,CODE05=CODE05_SAVE );
      378    17519    1   DCL NDW_SAVE UBIN AUTO;
      379    17520
      380    17521        /***
      381    17522         *** BASED
PL6.E3A0      #003=FLS$FILE_PACKER File=FLS$FILE_PACKER.:E05TSI                  TUE 07/29/97 16:22 Page:79   
      382    17523         ***/
      383    17524
      384    17525        %CODE03( BASED="BASED(CODE03$)" );
      385    17532        %CODE04( BASED="BASED(CODE04$)" );
      386    17540        %CODE05 ( BASED = "BASED ( CODE05$ )" );
      387    17543        %FM$GRAN;
      388    17547        %FM$FIT(BASED="BASED(FIT$)");
      389    17550        %F$DCB(BASED="BASED(DCB$)");
      390    17607        %B$TCB(STCLASS="BASED(B$TCB$)");
      391    17610        %B$ALT;
      392    17618
      393    17619        /***************************************/
      394    17620
      395    17621        /***
      396    17622         *** Basic initialization.
      397    17623         ***/
      398    17624
      399    17625    1      DCB$ = ARG_DCB$;
      400    17626    1      BREAK_DCB# = DCB#;
      401    17627    1      CROSSED = ' ';
      402    17628    1      READ_ERR = '0'B;
      403    17629    1      FIT_ONLY_SAVED = '0'B;
      404    17630
      405    17631        /***
      406    17632         *** The error code tells what must be done:
      407    17633         ***     E$ADEOF - account directory
      408    17634         ***     E$FDEOF - file directory
      409    17635         ***     E$NOKEY - deleted account
      410    17636         ***     E$NOFILE - cleaned up file
      411    17637         ***     E$NOPROC - cleaned up account
      412    17638         ***     other   - some type of file
      413    17639         ***/
      414    17640
      415    17641    2      DO SELECT( ERRBACK.CODE );
      416    17642
      417    17643    2         SELECT( %E$ADEOF );
      418    17644    2         TYPE = %ACCT_DIR;
PL6.E3A0      #003=FLS$FILE_PACKER File=FLS$FILE_PACKER.:E05TSI                  TUE 07/29/97 16:22 Page:80   
      419    17645    2         NBR_NEEDED_BYTES = 4096;
      420    17646
      421    17647    2         SELECT( %E$NOKEY );
      422    17648    2         TYPE = %DEL_ACCT;
      423    17649    2         NBR_NEEDED_BYTES = 0;
      424    17650
      425    17651    2         SELECT( %E$FDEOF );
      426    17652    2         TYPE = %FILE_DIR;
      427    17653    2         NBR_NEEDED_BYTES = 4096;
      428    17654
      429    17655    2         SELECT( %E$NOFILE );
      430    17656    2         TYPE = %CLEANUP_FILE;
      431    17657    2         NBR_NEEDED_BYTES = 0;
      432    17658
      433    17659    2         SELECT( %E$NOPROC );
      434    17660    2         TYPE = %CLEANUP_ACCT;
      435    17661    2         NBR_NEEDED_BYTES = 0;
      436    17662
      437    17663    2         SELECT( ELSE );
      438    17664    2      IF F$DCB.DESC.DELF#
      439    17665    2       THEN IF F$DCB.DESC.ARCHIVE#
      440    17666    3          THEN DO;
      441    17667    3            TYPE = %INACTIVE_FILE;
      442    17668    3            NBR_NEEDED_BYTES = 4096;       /* Have FIT                           */
      443    17669    3            END;
      444    17670    3          ELSE DO;
      445    17671    3            TYPE = %DEL_FILE;
      446    17672    3            NBR_NEEDED_BYTES = 0;          /* No FIT                             */
      447    17673    3            END;
      448    17674    3       ELSE DO;
      449    17675    3         NBR_NEEDED_BYTES = 4096;          /* Have FIT                           */
      450    17676    3         CODE03$ = PINCRW( FPARAM_.PTR$, SIZEW(FM$GRAN) );
      451    17677    3         CALL XSF$LOCCODP( CODE03$, 03 )
      452    17678    4          WHENRETURN DO;
      453    17679    4            NBR_GRANS_TO_READ = CODE03.UGRANS - F$DCB.CRECNO;
      454    17680    4            IF (F$DCB.ORG# = %IDS# AND DISK_OPTION.IDSS = %FAST)
      455    17681    4             THEN TYPE = %IDS_FAST_FILE;
PL6.E3A0      #003=FLS$FILE_PACKER File=FLS$FILE_PACKER.:E05TSI                  TUE 07/29/97 16:22 Page:81   
      456    17682    4             ELSE TYPE = %REG_FILE;
      457    17683    4            IF DISK_OPTION.ACUP
      458    17684    5             THEN DO;
      459    17685    5               CODE04$ = PINCRW( FPARAM_.PTR$, SIZEW(FM$GRAN) );
      460    17686    5               CALL XSF$LOCCODP( CODE04$, 04 )
      461    17687    6                WHENRETURN DO;
      462    17688    6                  IF CODE04.ACCESS.TIME <= CODE04.MODIFY.TIME
      463    17689    6                   THEN TYPE = %REG_FILE;
      464    17690    7                   ELSE DO;
      465    17691    7                     CODE05$ = PINCRW( FPARAM_.PTR$, SIZEW(FM$GRAN) );
      466    17692    7                     CALL XSF$LOCCODP( CODE05$, 05 )
      467    17693    8                      WHENRETURN DO;
      468    17694    8                        IF CODE04.MODIFY.TIME >= CODE05.BACKUP.TIME
      469    17695    8                         THEN TYPE = %REG_FILE;
      470    17696    8                         ELSE IF CODE04.ACCESS.TIME >= CODE05.BACKUP.TIME
      471    17697    9                            THEN DO; /* Accessed but not modified since last backup */
      472    17698    9                              TYPE = %ACUP_FILE;
      473    17699    9                              FIT_ONLY_SAVED = '1'B;
      474    17700    9                              END;
      475    17701    8                            ELSE TYPE = %REG_FILE;
      476    17702    8                        END;
      477    17703    8                      WHENALTRETURN DO;
      478    17704    8                        TYPE = %REG_FILE;
      479    17705    8                        END;
      480    17706    7                     END;
      481    17707    6                  END;
      482    17708    5               END;
      483    17709    4            END;
      484    17710    4          WHENALTRETURN DO;           /* Shouldn't get here, but assume ACUP     */
      485    17711    4            CALL FLI$RPT_ERR( E_NO_CODE3, DCB# );
      486    17712    4            TYPE = %ACUP_FILE;             /* At least we know there's a FIT     */
      487    17713    4            FIT_ONLY_SAVED = '1'B;
      488    17714    4            END;
      489    17715    3         END;
      490    17716
      491    17717    2         END;
      492    17718
PL6.E3A0      #003=FLS$FILE_PACKER File=FLS$FILE_PACKER.:E05TSI                  TUE 07/29/97 16:22 Page:82   
      493    17719        /***
      494    17720         *** A new tape file should be started if the previous file caused
      495    17721         *** our maximum number of tape blocks per file to be exceeded
      496    17722         *** , if cleanup entries are to be written to tape or started copying
      497    17723         *** files from a new pack.
      498    17724         *** A new tape block should be started if:
      499    17725         ***     1) We need more bytes than remain in the current block;
      500    17726         ***  or 2) The packset or account changed and we're trying to
      501    17727         ***        pack a file for which we only have name information
      502    17728         ***        in the tag;
      503    17729         ***  or 3) We've run out of block tags in the current block.
      504    17730         ***/
      505    17731
      506    17732    1      FLUSH = '0'B;
      507    17733    1      NEW_FILE = '0'B;
      508    17734
      509    17735    2      DO CASE( LAST_TYPE );
      510    17736    2       CASE( %CLEANUP_FILE, %CLEANUP_ACCT );
      511    17737    2         CLEANING_UP = '1'B;
      512    17738    2       CASE( ELSE );
      513    17739    2         CLEANING_UP = '0'B;
      514    17740    2       END;
      515    17741    2      DO CASE( TYPE );
      516    17742    2       CASE( %CLEANUP_FILE, %CLEANUP_ACCT );
      517    17743    2         START_NEW_FILE = ~ CLEANING_UP;
      518    17744    2       CASE( ELSE );
      519    17745    2         START_NEW_FILE = CLEANING_UP;
      520    17746    2       END;
      521    17747
      522    17748    1      IF BLK_TAG$ < MIN_BLK_TAG$
      523    17749    1       THEN FLUSH = '1'B;
      524    17750    1      IF NBR_FILE_BLOCKS >= %MAX_NBR_FILE_BLOCKS
      525    17751                                      /* Start new file if current file is too large  */
      526    17752    1        OR START_NEW_FILE
      527    17753    1        OR LAST_DSN_USED.SN#(0) ~= DISK_SN.SN#(0) /* or copying from a new pack  */
      528    17754    2       THEN DO;
      529    17755    2         FLUSH = '1'B;
PL6.E3A0      #003=FLS$FILE_PACKER File=FLS$FILE_PACKER.:E05TSI                  TUE 07/29/97 16:22 Page:83   
      530    17756    2         NEW_FILE = '1'B;
      531    17757    2         END;
      532    17758    1       ELSE IF NBR_NEEDED_BYTES > NBR_BLOCK_BYTES_REMAINING
      533    17759    1          THEN FLUSH = '1'B;
      534    17760    1          ELSE IF ( TYPE = %REG_FILE OR TYPE = %DEL_FILE OR TYPE = %ACUP_FILE OR TYPE =
             17760                   %INACTIVE_FILE OR TYPE = %CLEANUP_FILE
      535    17761    1              OR TYPE = %IDS_FAST_FILE )
      536    17762    1              AND ( BLK_TAG0.WHERE.ACCT ~= F$DCB.ACCT# OR BLK_TAG0.WHERE.PSN ~= F$DCB.
             17762                       PSN# )
      537    17763    1             THEN FLUSH = '1'B;
      538    17764
      539    17765    1      LAST_TYPE = TYPE;
      540    17766    1      LAST_DSN_USED.SN#(0) = DISK_SN.SN#(0);
      541    17767
      542    17768        /***
      543    17769         *** Flush current block / open file as flags indicate.
      544    17770         ***/
      545    17771
      546    17772    1      IF FLUSH
      547    17773    2       THEN DO;
      548    17774    2         IF BLK_TAG$ ~= BLK_TAG0$
      549    17775    2          THEN CALL FLS$FLUSH_BLOCK( ,COMMAND, TAPE_SN, TAPE_FSN ) ALTRET( JUSTALT );
      550    17776    2         IF NEW_FILE
      551    17777    3          THEN DO;
      552    17778    3            IF TAPE_DCBLIST.DCB$(0)->F$DCB.FCD# /* Tape file open ?              */
      553    17779    3             THEN CALL FLI$TAPE_CLOSE ALTRET( JUSTALT );
      554    17780    3            CALL FLI$TAPE_OPEN( VECTOR(EFT_RESTRICT_FILE), TAPE_SN, TAPE_FSN, %NO#,
             17780                     '1'B, , A_FIT_, ERR, DCB# ) ALTRET( REPALT );
      555    17781    3            NBR_FILE_BLOCKS = 0;
      556    17782    3            END;
      557    17783    2         BREAK_DCB# = DCB#;
      558    17784    2         LOW_BLK_TAG$ = BLK_TAG0$;
      559    17785    2         BLK_TAG$ = BLK_TAG0$;
      560    17786    2         BLK_TAG0 = '0'B;                  /* Initialize BLK_TAG0 of next block  */
      561    17787    2         IF OVER_FIL
      562    17788    2          THEN BLK_TAG0.WHERE.PSN = DISK_DEST_SN.SN#(0);
      563    17789    2          ELSE BLK_TAG0.WHERE.PSN = F$DCB.PSN#;
PL6.E3A0      #003=FLS$FILE_PACKER File=FLS$FILE_PACKER.:E05TSI                  TUE 07/29/97 16:22 Page:84   
      564    17790    2         BLK_TAG0.WHERE.ACCT = F$DCB.ACCT#;
      565    17791    2         BLK_TAG_NBR = 0;
      566    17792    2         NBR_BLOCK_BYTES_REMAINING = NBR_BLOCK_BYTES;
      567    17793    2         BLOCK_GRAN$ = GRAN_BASE$;
      568    17794    2         END;
      569    17795
      570    17796        /***
      571    17797         *** Start current file at next block tag.  (The previous code
      572    17798         *** guarantees that a next block tag will exist.)  Initialize
      573    17799         *** the next block tag.
      574    17800         ***/
      575    17801
      576    17802    1      TSN = TAPE_SN;
      577    17803    1      FSN = TAPE_FSN;
      578    17804    1      BLK_TAG$ = PINCRW( BLK_TAG$, -SIZEW(BLK_TAG) );
      579    17805    1      IF BLK_TAG$ < LOW_BLK_TAG$
      580    17806    1       THEN LOW_BLK_TAG$ = BLK_TAG$;
      581    17807    1      BLK_TAG = '0'B;
      582    17808    1      BLK_TAG.TYPE = TYPE;
      583    17809    1      BLK_TAG_NBR = BLK_TAG_NBR + 1;
      584    17810    1      BLK_TAG.NBR = BLK_TAG_NBR;
      585    17811    1      BLK_TAG0.NBR = BLK_TAG_NBR;
      586    17812    1      DI_ERR = '0'B;
      587    17813
      588    17814        /***
      589    17815         *** Account-related information makes different
      590    17816         *** use of the block tag fields than file-related information.
      591    17817         ***/
      592    17818
      593    17819    2      DO CASE( TYPE );
      594    17820
      595    17821    2       CASE( %FILE_DIR, %DEL_ACCT, %ACCT_DIR, %CLEANUP_ACCT );
      596    17822    2         BLK_TAG.WHERE.PSN = F$DCB.PSN#;
      597    17823    2         BLK_TAG.WHERE.ACCT = F$DCB.ACCT#;
      598    17824
      599    17825    2       CASE( %REG_FILE, %INACTIVE_FILE, %ACUP_FILE, %DEL_FILE, %CLEANUP_FILE, %
             17825                IDS_FAST_FILE );
PL6.E3A0      #003=FLS$FILE_PACKER File=FLS$FILE_PACKER.:E05TSI                  TUE 07/29/97 16:22 Page:85   
      600    17826    2         BLK_TAG.NAME.L = F$DCB.NAME#.L;
      601    17827    2         BLK_TAG.NAME.C = F$DCB.NAME#.C;
      602    17828    2         BLK_TAG.DESC = F$DCB.DESC;
      603    17829
      604    17830    2       CASE( ELSE );
      605    17831    2         CALL M$XXX;                       /* Serious bug                        */
      606    17832    2       END;
      607    17833
      608    17834        /***
      609    17835         *** Deleted files and accounts don't have any FIT.  File and account
      610    17836         *** directories and accessed only and inactive files have either a
      611    17837         *** FIT or a FIT's worth of information.  Regular or IDS_FAST files must have
      612    17838         *** their data packed away.  Cleaned up files and accounts don't
      613    17839         *** have any FIT.
      614    17840         ***/
      615    17841
      616    17842    1      BLK_TAG.BEG = '1'B;
      617    17843    2      DO CASE( TYPE );
      618    17844
      619    17845    2       CASE( %DEL_ACCT, %DEL_FILE );
      620    17846    2         BLK_TAG.UTS = F$DCB.EXPIRE#;
      621    17847    2         BLK_TAG.FIN = '1'B;
      622    17848
      623    17849    2       CASE( %CLEANUP_ACCT, %CLEANUP_FILE );
      624    17850    2         CALL M$TIME( GET_NOW_UTS );
      625    17851    2         BLK_TAG.UTS = NOW_UTS;
      626    17852    2         BLK_TAG.FIN = '1'B;
      627    17853
      628    17854    2       CASE( %FILE_DIR, %ACCT_DIR, %ACUP_FILE, %INACTIVE_FILE );
      629    17855    2         CALL FLS_ADD_GRANS( FPARAM_.PTR$, 4096, TSN, FSN ) ALTRET( JUSTALT );
      630    17856    2         BLK_TAG.FIN = '1'B;
      631    17857
      632    17858    2       CASE( %REG_FILE, %IDS_FAST_FILE );
      633    17859    2         IF (COMMAND = %SAVE) OR (COMMAND = %BACKUP)
      634    17860    3          THEN DO;
      635    17861        /***
      636    17862         *** Set backup code05 on tape to current backup time and reel so that when
PL6.E3A0      #003=FLS$FILE_PACKER File=FLS$FILE_PACKER.:E05TSI                  TUE 07/29/97 16:22 Page:86   
      637    17863         *** restoring the file, code05 is correct.
      638    17864         ***/
      639    17865    3            CODE03.DESC.TPB = '1'B;
      640    17866    3            FIT$ = PINCRW ( FPARAM_.PTR$, SIZEW ( FM$GRAN ) );
      641    17867    3            CODE05$ = FIT$;
      642    17868    3            CALL XSF$LOCCODP ( CODE05$, 05 )
      643    17869    4             WHENRETURN DO;
      644    17870    4               CODE05_SAVE = CODE05;
      645    17871    4               NDW_SAVE = FM$FIT.CODES.NDW(05);
      646    17872    4               CALL M$TIME ( GET_NOW_UTS );
      647    17873    4               CODE05.BACKUP.TIME = NOW_UTS; /* Set backup info. for tape        */
      648    17874    4               CODE05.BACKUP.REEL = TAPE_SN;
      649    17875    4               CODE05.BACKUP.EFT.FSN = TAPE_FSN;
      650    17876    4               FM$FIT.CODES.NDW(05) = SIZEW(CODE05);
      651    17877    4               CALL FLS_ADD_GRANS( FPARAM_.PTR$, 4096, TSN, FSN )
      652    17878    5                WHENALTRETURN DO;
      653    17879    5                  CODE05 = CODE05_SAVE;
      654    17880    5                  FM$FIT.CODES.NDW(05) = NDW_SAVE;
      655    17881    5                  GOTO JUSTALT;
      656    17882    5                  END;
      657    17883    4               CODE05 = CODE05_SAVE;
      658    17884    4               FM$FIT.CODES.NDW(05) = NDW_SAVE;
      659    17885    4               END;
      660    17886    4             WHENALTRETURN DO;
      661    17887    4               CALL FLS_ADD_GRANS( FPARAM_.PTR$, 4096, TSN, FSN ) ALTRET( JUSTALT );
      662    17888    4               END;
      663    17889    3            END;
      664    17890    2          ELSE CALL FLS_ADD_GRANS( FPARAM_.PTR$, 4096, TSN, FSN ) ALTRET( JUSTALT );
      665    17891    2         IF NBR_GRANS_TO_READ > 0
      666    17892    2          THEN CALL FLS_BLOCK_FILE( TSN, FSN ) ALTRET( JUSTALT );
      667    17893    2          ELSE BLK_TAG.FIN = '1'B;
      668    17894
      669    17895    2       CASE( ELSE );
      670    17896    2         CALL M$XXX;
      671    17897    2       END;
      672    17898
      673    17899        /***
PL6.E3A0      #003=FLS$FILE_PACKER File=FLS$FILE_PACKER.:E05TSI                  TUE 07/29/97 16:22 Page:87   
      674    17900         *** Return data inconsistency error and volume crossing information
      675    17901         *** to caller.
      676    17902         ***/
      677    17903
      678    17904    1      IF DI_ERR
      679    17905    1       THEN ERRBACK = DI_ERR;
      680    17906    1      CROSS = CROSSED;
      681    17907    1      ABORT = '0'B;
      682    17908
      683    17909    1      RETURN;
      684    17910
      685    17911    1   REPALT: ;
      686    17912    1      CALL FLI$RPT_ERR( ERR, DCB# );
      687    17913
      688    17914    1   JUSTALT: ;
      689    17915    1      IF READ_ERR                /* Return read error and abort flag to caller   */
      690    17916    2       THEN DO;
      691    17917    2         ERRBACK = READ_ERR;               /* Don't abort on a read error.       */
      692    17918    2         ABORT = '0'B;
      693    17919    2         END;
      694    17920    1       ELSE
      695    17921    1         ABORT = '1'B;
      696    17922    1      CROSS = CROSSED;
      697    17923    1      ALTRETURN;
      698    17924
      699    17925        %EJECT;
PL6.E3A0      #003=FLS$FILE_PACKER File=FLS$FILE_PACKER.:E05TSI                  TUE 07/29/97 16:22 Page:88   
      700    17926    1   FLS_BLOCK_FILE: PROC( NEW_TSN, NEW_FSN ) ALTRET;
      701    17927        /*F*  NAME: FLS_BLOCK_FILE
      702    17928              PURPOSE: Write current file to tape.
      703    17929        */
      704    17930
      705    17931        /***
      706    17932         *** Parameters
      707    17933         ***/
      708    17934
      709    17935    2   DCL NEW_TSN CHAR(6) CALIGNED; /* New current TSN returned on IOERRCONT,I-O err */
      710    17936    2   DCL NEW_FSN UBIN WORD ALIGNED; /* New current FSN returned on IOERRCONT,I-O err */
      711    17937        /******************************/
      712    17938
      713    17939        /***
      714    17940         *** Initialization.
      715    17941         ***/
      716    17942
      717    17943    2      GRANULE_INDEX = -1;
      718    17944    2      CALL FLI$DISK_READ_FILE_INIT( NBR_GRANS_TO_READ );
      719    17945
      720    17946    3      DO WHILE( '1'B );
      721    17947
      722    17948    3         CALL FLI$DISK_READ( DATA_, BIX, ARS, ERR, DCB# )
      723    17949    4          WHENALTRETURN DO;
      724    17950    4            IF ERR.CODE = %E$EOF
      725    17951    5             THEN DO;                      /* Normal file termination            */
      726    17952    5               BLK_TAG.FIN = '1'B;
      727    17953    5               RETURN;
      728    17954    5               END;
      729    17955    4            READ_ERR = ERR;                /* Return read error to caller        */
      730    17956    4            BLK_TAG.FIN = '1'B;
      731    17957    4            ALTRETURN;
      732    17958    4            END;
      733    17959
      734    17960    3         CODE05$ = PINCRW ( FPARAM_.PTR$, SIZEW ( FM$GRAN ) );
      735    17961    3         CALL XSF$LOCCODP ( CODE05$, 05 ) ALTRET ( JUSTALT );
      736    17962
PL6.E3A0      #003=FLS$FILE_PACKER File=FLS$FILE_PACKER.:E05TSI                  TUE 07/29/97 16:22 Page:89   
      737    17963    3         IF F$DCB.ORG# = %RANDOM# OR F$DCB.ORG# = %RELATIVE# OR
      738    17964    3           ( F$DCB.ORG# = %IDS# AND DISK_OPTION.IDSS = %FAST )
      739    17965    4          THEN DO;                         /* Special handling for RANDOM files  */
      740    17966    4            GRAN$ = DATA_.PTR$;
      741    17967    4            GRAN_START$ = ADDR(NIL);
      742    17968    5            DO WHILE( ARS > 0 );
      743    17969    5               GRANULE_INDEX = GRANULE_INDEX + 1;
      744    17970    5               IF GRAN$->GRAN_KEY ~= -1 AND
      745    17971    5                 NOT ( F$DCB.ORG# = %IDS# AND
      746    17972    5                 PINCRW ( GRAN$, 1 ) -> MOD_TIME < CODE05.BACKUP.TIME )
      747    17973    6                THEN DO;                   /* Written granule                    */
      748    17974    6                  IF F$DCB.ORG# = %RANDOM# OR F$DCB.ORG# = %RELATIVE#
      749    17975    6                   THEN GRAN$->GRAN_KEY = GRANULE_INDEX;
      750    17976    6                  IF GRAN_START$ = ADDR(NIL)
      751    17977    6                   THEN GRAN_START$ = GRAN$;
             17977                            /* Start accumulating contiguous granules */
      752    17978    6                  END;
      753    17979    6                ELSE DO;                   /* Unwritten granule                  */
      754    17980    6                  IF GRAN_START$ ~= ADDR(NIL)
      755    17981    7                   THEN DO;
      756    17982    7                     CALL FLS_ADD_GRANS( GRAN_START$, POFFC( GRAN$, GRAN_START$ ),
             17982                              NEW_TSN, NEW_FSN ) ALTRET( JUSTALT );
      757    17983    7                     GRAN_START$ = ADDR(NIL);
      758    17984    7                     END;
      759    17985    6                  END;
      760    17986    5               ARS = ARS - 4096;
      761    17987    5               GRAN$ = PINCRW( GRAN$, 1024 );
      762    17988    5               END;
      763    17989    4            IF GRAN_START$ ~= ADDR(NIL)
      764    17990    4             THEN CALL FLS_ADD_GRANS( GRAN_START$, POFFC( GRAN$, GRAN_START$ ), NEW_TSN
             17990                      , NEW_FSN ) ALTRET( JUSTALT );
      765    17991    4            END;
      766    17992    4          ELSE DO;                         /* All other files are easy           */
      767    17993    4            IF ERR.CODE = %E$DI
      768    17994    5             THEN DO;            /* Save data inconsistency error if it happens  */
      769    17995    5               IF F$DCB.ORG# = %IDS# OR F$DCB.ORG# = %CG#
      770    17996    5                THEN ERR = '0'B;      /* Don't report E$DI for RELATIVE files    */
PL6.E3A0      #003=FLS$FILE_PACKER File=FLS$FILE_PACKER.:E05TSI                  TUE 07/29/97 16:22 Page:90   
      771    17997    5                ELSE DI_ERR = ERR;
      772    17998    5               END;
      773    17999    4            CALL FLS_ADD_GRANS( DATA_.PTR$, ARS, NEW_TSN, NEW_FSN ) ALTRET( JUSTALT );
      774    18000    4            GRANULE_INDEX = GRANULE_INDEX + ARS / 4096;
      775    18001    4            END;
      776    18002
      777    18003    3         CALL FLI$RETURN_BUF( BIX );
      778    18004    3         END;
      779    18005
      780    18006    2   JUSTALT: ;
      781    18007    2      ALTRETURN;
      782    18008
      783    18009    2   END FLS_BLOCK_FILE;
      784    18010
      785    18011        %EJECT;
PL6.E3A0      #003=FLS$FILE_PACKER File=FLS$FILE_PACKER.:E05TSI                  TUE 07/29/97 16:22 Page:91   
      786    18012    1   FLS_ADD_GRANS: PROC( GRANS$, ARS, NEW_TSN, NEW_FSN ) ALTRET;
      787    18013        /*F*  NAME: FLS_ADD_GRANS
      788    18014              PURPOSE: Add granules to current block, flushing when another
      789    18015                 block is needed.
      790    18016        */
      791    18017
      792    18018        /***
      793    18019         *** PARAMETERS
      794    18020         ***/
      795    18021
      796    18022    2   DCL GRANS$ PTR;
      797    18023    2   DCL ARS SBIN;
      798    18024    2   DCL NEW_TSN CHAR(6) CALIGNED; /* New current TSN returned on IOERRCONT,I-O err */
      799    18025    2   DCL NEW_FSN UBIN WORD ALIGNED; /* New current FSN returned on IOERRCONT,I-O err */
      800    18026
      801    18027        /******************************/
      802    18028
      803    18029        /***
      804    18030         *** Localize parameters.
      805    18031         ***/
      806    18032
      807    18033    2      DISK_GRAN$ = GRANS$;
      808    18034    2      NBR_BYTES = ARS;
      809    18035
      810    18036        /***
      811    18037         *** Pack granules into tape blocks flushing tape blocks as they
      812    18038         *** become full.
      813    18039         ***/
      814    18040
      815    18041    3      DO WHILE( '1'B );
      816    18042
      817    18043    3         IF NBR_BYTES > NBR_BLOCK_BYTES_REMAINING
      818    18044    3          THEN NBR_BYTES_TO_MOVE = NBR_BLOCK_BYTES_REMAINING;
      819    18045    3          ELSE NBR_BYTES_TO_MOVE = NBR_BYTES;
      820    18046
      821    18047    3         BLOCK_GRAN = DISK_GRAN;
      822    18048
PL6.E3A0      #003=FLS$FILE_PACKER File=FLS$FILE_PACKER.:E05TSI                  TUE 07/29/97 16:22 Page:92   
      823    18049    3         NBR_BYTES = NBR_BYTES - NBR_BYTES_TO_MOVE;
      824    18050    3         NBR_BLOCK_BYTES_REMAINING = NBR_BLOCK_BYTES_REMAINING - NBR_BYTES_TO_MOVE;
      825    18051
      826    18052    3         IF BLK_TAG.SIZE = 0
      827    18053    3          THEN BLK_TAG.BEGX = POFFC( BLOCK_GRAN$, GRAN_BASE$ );
      828    18054    3         BLK_TAG.SIZE = BLK_TAG.SIZE + NBR_BYTES_TO_MOVE;
      829    18055
      830    18056    3         BLOCK_GRAN$ = PINCRC( BLOCK_GRAN$, NBR_BYTES_TO_MOVE );
      831    18057    3         DISK_GRAN$ = PINCRC( DISK_GRAN$, NBR_BYTES_TO_MOVE );
      832    18058
      833    18059    3         IF NBR_BYTES > 0
      834    18060    3          THEN CALL FLS$FLUSH_BLOCK( '1'B ,COMMAND, NEW_TSN, NEW_FSN )
      835    18061    4             WHENALTRETURN DO;
      836    18062    4               ALTRETURN;
      837    18063    4               END;
      838    18064    3          ELSE RETURN;                     /* Done packing these granules        */
      839    18065    3         END;
      840    18066
      841    18067    2   END FLS_ADD_GRANS;
      842    18068
      843    18069    1   END FLS$FILE_PACKER;
      844    18070        %EOD;

PL6.E3A0      #003=FLS$FILE_PACKER File=FLS$FILE_PACKER.:E05TSI                  TUE 07/29/97 16:22 Page:93   
--  Include file information  --

   FM$GRAN.:E05TOU  is referenced.
   FM$FIT.:E05TOU  is referenced.
   FLS_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   FLN_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   B_MICROPS_C.:E05TOU  is referenced.
   FLB_SUBS_C.:E05TOU  is referenced.
   FLI_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   FL_PERR_C.:E05TOU  is referenced.
   FLE_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   CP_6_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B_ERRORS_C.:E05TOU  is referenced.
      No diagnostics issued in procedure FLS$FILE_PACKER.

   Procedure FLS$FILE_PACKER requires 859 words for executable code.
   Procedure FLS$FILE_PACKER requires 60 words of local(AUTO) storage.

PL6.E3A0      #003=FLS$FILE_PACKER File=FLS$FILE_PACKER.:E05TSI                  TUE 07/29/97 16:22 Page:94   

 Object Unit name= FLS$FILE_PACKER                            File name= FLS$FILE_PACKER.:E05TOU
 UTS= JUL 29 '97 16:22:50.40 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1   DCB   even  none     0      0  M$PRE_RET
    2   Data  even  none   110    156  FLS$FILE_PACKER
    3   DCB   even  none     0      0  M$DISK_IN
    4   DCB   even  none     0      0  M$DISK00
    5   DCB   even  none     0      0  M$DISK01
    6   DCB   even  none     0      0  M$DISK02
    7   DCB   even  none     0      0  M$DISK03
    8   DCB   even  none     0      0  M$TSN_USED
    9   DCB   even  none     0      0  M$STATUS
   10   DCB   even  none     0      0  M$REBUILD
   11   DCB   even  none     0      0  M$ARCHIVE
   12   DCB   even  none     0      0  M$NODATA_LIST
   13   Proc  even  none   859   1533  FLS$FILE_PACKER
   14  RoData even  none    16     20  FLS$FILE_PACKER

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
    13      0   yes    yes     yes      Std       10  FLS$FILE_PACKER
PL6.E3A0      #003=FLS$FILE_PACKER File=FLS$FILE_PACKER.:E05TSI                  TUE 07/29/97 16:22 Page:95   

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       2 XSF$LOCCODP
         yes           Std       5 FLI$RPT_ERR
 yes     yes           Std       9 FLI$TAPE_OPEN
 yes     yes           Std       4 FLS$FLUSH_BLOCK
 yes     yes           Std       1 FLI$TAPE_CLOSE
         yes           Std       1 FLI$DISK_READ_FILE_INIT
         yes           Std       1 FLI$RETURN_BUF
 yes     yes           Std       5 FLI$DISK_READ
                       nStd      0 X66_AUTO_N
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET
                       nStd      0 X66_AALT

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                             r    E_NO_CODE3                            TAPE_DCBLIST$
     SNVECLIST$                            B$TCB$                                OVER_FIL
     NOW_UTS                               GET_NOW_UTS                           DPLIST$
     DPRESLIST$                            DISK_FILE_SPEC$                       SPECCHARS
     DISK_OPTION                           DISK_DEST_SN                          EFTWORD
     M$PRE_RET                             RET_CMDS_NAME                         M$DISK_IN
     M$DISK00                              M$DISK01                              M$DISK02
     M$DISK03                              FROM_DISK_NAME                        FROM_DISK_ACCT
     DISK_SN                               FROM_DISK_SN                          M$TSN_USED
     M$STATUS                              M$REBUILD                             M$ARCHIVE
     M$NODATA_LIST                         DCB$                                  TYPE
     MIN_BLK_TAG$                          LOW_BLK_TAG$                          BLK_TAG$
     BLK_TAG0$                             BLK_TAG_NBR                           NBR_BLOCK_BYTES
     NBR_BLOCK_BYTES_REMAINING             NBR_BYTES_TO_MOVE                     NBR_BYTES
     DISK_GRAN$                            BLOCK_GRAN$                           GRAN_BASE$
PL6.E3A0      #003=FLS$FILE_PACKER File=FLS$FILE_PACKER.:E05TSI                  TUE 07/29/97 16:22 Page:96   
r    A_FIT_                                NBR_FILE_BLOCKS                       GRANULE_INDEX
     CROSSED                          r    EFT_CVOL_FILE                    r    EFT_RESTRICT_FILE
     TAPE_SN                               TAPE_FSN                              LAST_TYPE
     TSN_USED_NAME                         BACKUP_NAME                      r    ARCHIVE_NAME
r    PRIME_FILE                       r    DUAL_FILE                             LAST_DSN_USED
     REBUILD_NAME                          REBUILD_DIR_KEY                       REBUILD_KEY
     NODATA_FILE_NAME                      NODATA_KEY                            BREAK_DCB#
     B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID                                 NULLSID
PL6.E3A0      #003=FLS$FILE_PACKER File=FLS$FILE_PACKER.:E05TSI                  TUE 07/29/97 16:22 Page:97   


      271        1        /*T***********************************************************/
      272        2        /*T*                                                         */
      273        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      274        4        /*T*                                                         */
      275        5        /*T***********************************************************/
      276        6        FLS$FILE_PACKER: PROC( ARG_DCB$, DCB#, FPARAM_, TSN, FSN, CROSS, ERRBACK, ABORT,

      6 13 000000   000000 700200 xent  FLS$FILE_PA* TSX0  ! X66_AUTO_N
        13 000001   000074 000012                    ZERO    60,10

      277        7             FIT_ONLY_SAVED, COMMAND ) ALTRET;
      278        8        /*F*  NAME: FLS$FILE_PACKER
      279        9              PURPOSE: Packs current disk file into tape blocks.
      280       10        */
      281       11
      282       12        /***
      283       13         *** INCLUDE
      284       14         ***/
      285       15
      286       16        %INCLUDE B_ERRORS_C;
      287     1143        %INCLUDE CP_6;
      288     6702        %INCLUDE CP_6_SUBS;
      289     7242        %INCLUDE FLE_DATA_R;
      290    13193        %INCLUDE FLI_DATA_R;
      291    14607        %INCLUDE FLN_DATA_R;
      292    15344        %INCLUDE FLS_DATA_R;
      293    17144        %INCLUDE FM$FIT;
      294    17365        %INCLUDE FM$GRAN;
      295    17434
      296    17435        /***
      297    17436         *** PARAMETERS
      298    17437         ***/
      299    17438
      300    17439    1   DCL ARG_DCB$ PTR ALIGNED;               /* Points to DCB                      */
      301    17440    1   DCL DCB# SBIN ALIGNED;   /* DCB# of DCB open to disk file to pack onto tape   */
      302    17441    1   DCL 1 FPARAM_ DALIGNED,                 /* Frames FPARAM info of disk file    */
PL6.E3A0      #003=FLS$FILE_PACKER File=FLS$FILE_PACKER.:E05TSI                  TUE 07/29/97 16:22 Page:98   
      303    17442    1         2 * BIT(36),
      304    17443    1         2 PTR$ PTR;
      305    17444    1   DCL TSN CHAR(6) CALIGNED;          /* Current tape serial number returned     */
      306    17445    1   DCL FSN UBIN WORD ALIGNED;    /* Current tape file sequence number returned   */
      307    17446    1   DCL CROSS CHAR(1) CALIGNED;        /* Tape bounary crossed indicator returned */
      308    17447    1   DCL 1 ERRBACK ALIGNED,                  /* Error word returned                */
      309    17448    1         2 * BIT(12) UNAL,
      310    17449    1         2 * BIT(6) UNAL,
      311    17450    1         2 * BIT(1) UNAL,
      312    17451    1         2 CODE UBIN(14) UNAL,
      313    17452    1         2 * UBIN(3) UNAL;
      314    17453    1   DCL ABORT BIT(1) ALIGNED;               /* Action indicator returned          */
      315    17454    1   DCL FIT_ONLY_SAVED BIT(1) ALIGNED;      /* FIT only save indicator returned.  */
      316    17455                                                /* Possibly set only when ACUP spec'd */
      317    17456    1   DCL COMMAND SBIN ALIGNED;               /* Current command being executed     */
      318    17457
      319    17458        /***
      320    17459         *** ENTRY
      321    17460         ***/
      322    17461
      323    17462    1   DCL FLI$ALLOC_BUF ENTRY(2);
      324    17463    1   DCL FLI$DISK_READ_FILE_INIT ENTRY(1);
      325    17464    1   DCL FLI$DISK_READ ENTRY(5) ALTRET;
      326    17465    1   DCL FLI$RETURN_BUF ENTRY(1);
      327    17466    1   DCL FLI$RPT_ERR ENTRY(5);
      328    17467    1   DCL FLI$TAPE_CLOSE ENTRY(1) ALTRET;
      329    17468    1   DCL FLI$TAPE_IO_INIT ENTRY;
      330    17469    1   DCL FLI$TAPE_OPEN ENTRY(9) ALTRET;
      331    17470    1   DCL FLS$FLUSH_BLOCK ENTRY(4) ALTRET;
      332    17471    1   DCL XSF$LOCCODP ENTRY(2) ALTRET;
      333    17472
      334    17473        /***
      335    17474         *** SYMREF
      336    17475         ***/
      337    17476
      338    17477    1   DCL BREAK_DCB# SBIN SYMREF;
      339    17478
PL6.E3A0      #003=FLS$FILE_PACKER File=FLS$FILE_PACKER.:E05TSI                  TUE 07/29/97 16:22 Page:99   
      340    17479        /***
      341    17480         *** STATIC
      342    17481         ***/
      343    17482
      344    17483    1   DCL INFO_BASE$ PTR STATIC;
      345    17484    1   DCL NBR_GRANS_IN_FILE SBIN STATIC;
      346    17485
      347    17486        /***
      348    17487         *** AUTO
      349    17488         ***/
      350    17489
      351    17490    1   DCL ARS SBIN AUTO;
      352    17491    1   DCL BIX SBIN AUTO;
      353    17492    1   DCL CLEANING_UP BIT(1) AUTO;
      354    17493    1   DCL FIT$ PTR AUTO;
      355    17494    1   DCL CODE03$ PTR AUTO;
      356    17495    1   DCL CODE04$ PTR AUTO;
      357    17496    1   DCL CODE05$ PTR AUTO;
      358    17497    1   DCL 1 DATA_ DALIGNED AUTO,
      359    17498    1         2 * BIT(36),
      360    17499    1         2 PTR$ PTR;
      361    17500    1   DCL DI_ERR BIT(36) AUTO;
      362    17501    1   DCL READ_ERR BIT(36) AUTO;
      363    17502    1   DCL 1 ERR ALIGNED AUTO,
      364    17503    1         2 * BIT(12) UNAL,
      365    17504    1         2 * BIT(6) UNAL,
      366    17505    1         2 * BIT(1) UNAL,
      367    17506    1         2 CODE UBIN(14) UNAL,
      368    17507    1         2 * UBIN(3) UNAL;
      369    17508    1   DCL FLUSH BIT(1) AUTO;
      370    17509    1   DCL GRAN$ PTR AUTO;
      371    17510    1   DCL GRAN_START$ PTR AUTO;
      372    17511    1   DCL NBR_GRANS_TO_READ SBIN AUTO;
      373    17512    1   DCL NBR_NEEDED_BYTES SBIN AUTO;
      374    17513    1   DCL NEW_FILE BIT(1) AUTO;
      375    17514    1   DCL START_NEW_FILE BIT(1) AUTO;
      376    17515    1   DCL MOD_TIME UBIN BASED;
PL6.E3A0      #003=FLS$FILE_PACKER File=FLS$FILE_PACKER.:E05TSI                  TUE 07/29/97 16:22 Page:100  
      377    17516        %CODE05 ( BASED=AUTO,CODE05=CODE05_SAVE );
      378    17519    1   DCL NDW_SAVE UBIN AUTO;
      379    17520
      380    17521        /***
      381    17522         *** BASED
      382    17523         ***/
      383    17524
      384    17525        %CODE03( BASED="BASED(CODE03$)" );
      385    17532        %CODE04( BASED="BASED(CODE04$)" );
      386    17540        %CODE05 ( BASED = "BASED ( CODE05$ )" );
      387    17543        %FM$GRAN;
      388    17547        %FM$FIT(BASED="BASED(FIT$)");
      389    17550        %F$DCB(BASED="BASED(DCB$)");
      390    17607        %B$TCB(STCLASS="BASED(B$TCB$)");
      391    17610        %B$ALT;
      392    17618
      393    17619        /***************************************/
      394    17620
      395    17621        /***
      396    17622         *** Basic initialization.
      397    17623         ***/
      398    17624
      399    17625    1      DCB$ = ARG_DCB$;

  17625 13 000002   200003 470500                    LDP0    @ARG_DCB$,,AUTO
        13 000003   000000 236100                    LDQ     0,,PR0
        13 000004   000000 756000 xsym               STQ     DCB$

      400    17626    1      BREAK_DCB# = DCB#;

  17626 13 000005   200004 471500                    LDP1    @DCB#,,AUTO
        13 000006   100000 235100                    LDA     0,,PR1
        13 000007   000000 755000 xsym               STA     BREAK_DCB#

      401    17627    1      CROSSED = ' ';

  17627 13 000010   040000 236003                    LDQ     16384,DU
PL6.E3A0      #003=FLS$FILE_PACKER File=FLS$FILE_PACKER.:E05TSI                  TUE 07/29/97 16:22 Page:101  
        13 000011   000000 756000 xsym               STQ     CROSSED

      402    17628    1      READ_ERR = '0'B;

  17628 13 000012   200027 450100                    STZ     READ_ERR,,AUTO

      403    17629    1      FIT_ONLY_SAVED = '0'B;

  17629 13 000013   200013 473500                    LDP3    @FIT_ONLY_SAVED,,AUTO
        13 000014   300000 450100                    STZ     0,,PR3

      404    17630
      405    17631        /***
      406    17632         *** The error code tells what must be done:
      407    17633         ***     E$ADEOF - account directory
      408    17634         ***     E$FDEOF - file directory
      409    17635         ***     E$NOKEY - deleted account
      410    17636         ***     E$NOFILE - cleaned up file
      411    17637         ***     E$NOPROC - cleaned up account
      412    17638         ***     other   - some type of file
      413    17639         ***/
      414    17640
      415    17641    2      DO SELECT( ERRBACK.CODE );

  17641 13 000015   200011 474500                    LDP4    @ERRBACK,,AUTO
        13 000016   400000 236100                    LDQ     0,,PR4
        13 000017   000003 772000                    QRL     3
        13 000020   037777 376007                    ANQ     16383,DL
        13 000021   000154 116007                    CMPQ    108,DL
        13 000022   000040 602000 13                 TNC     s:17641+19
        13 000023   000056 600000 13                 TZE     s:17652
        13 000024   000175 116007                    CMPQ    125,DL
        13 000025   000033 602000 13                 TNC     s:17641+14
        13 000026   000045 600000 13                 TZE     s:17644
        13 000027   000003 736000                    QLS     3
        13 000030   003520 116007                    CMPQ    1872,DL
        13 000031   000073 601000 13                 TNZ     s:17664
PL6.E3A0      #003=FLS$FILE_PACKER File=FLS$FILE_PACKER.:E05TSI                  TUE 07/29/97 16:22 Page:102  
        13 000032   000067 710000 13                 TRA     s:17660
        13 000033   400000 236100                    LDQ     0,,PR4
        13 000034   377770 376007                    ANQ     131064,DL
        13 000035   001610 116007                    CMPQ    904,DL
        13 000036   000073 601000 13                 TNZ     s:17664
        13 000037   000063 710000 13                 TRA     s:17656
        13 000040   400000 236100                    LDQ     0,,PR4
        13 000041   377770 376007                    ANQ     131064,DL
        13 000042   001020 116007                    CMPQ    528,DL
        13 000043   000073 601000 13                 TNZ     s:17664
        13 000044   000052 710000 13                 TRA     s:17648

      416    17642
      417    17643    2         SELECT( %E$ADEOF );

      418    17644    2         TYPE = %ACCT_DIR;

  17644 13 000045   000005 235007                    LDA     5,DL
        13 000046   000000 755000 xsym               STA     TYPE

      419    17645    2         NBR_NEEDED_BYTES = 4096;

  17645 13 000047   010000 236007                    LDQ     4096,DL
        13 000050   200035 756100                    STQ     NBR_NEEDED_BYTES,,AUTO
        13 000051   000253 710000 13                 TRA     s:17732

      420    17646
      421    17647    2         SELECT( %E$NOKEY );

      422    17648    2         TYPE = %DEL_ACCT;

  17648 13 000052   000006 235007                    LDA     6,DL
        13 000053   000000 755000 xsym               STA     TYPE

      423    17649    2         NBR_NEEDED_BYTES = 0;

  17649 13 000054   200035 450100                    STZ     NBR_NEEDED_BYTES,,AUTO
PL6.E3A0      #003=FLS$FILE_PACKER File=FLS$FILE_PACKER.:E05TSI                  TUE 07/29/97 16:22 Page:103  
        13 000055   000253 710000 13                 TRA     s:17732

      424    17650
      425    17651    2         SELECT( %E$FDEOF );

      426    17652    2         TYPE = %FILE_DIR;

  17652 13 000056   000004 235007                    LDA     4,DL
        13 000057   000000 755000 xsym               STA     TYPE

      427    17653    2         NBR_NEEDED_BYTES = 4096;

  17653 13 000060   010000 236007                    LDQ     4096,DL
        13 000061   200035 756100                    STQ     NBR_NEEDED_BYTES,,AUTO
        13 000062   000253 710000 13                 TRA     s:17732

      428    17654
      429    17655    2         SELECT( %E$NOFILE );

      430    17656    2         TYPE = %CLEANUP_FILE;

  17656 13 000063   000010 235007                    LDA     8,DL
        13 000064   000000 755000 xsym               STA     TYPE

      431    17657    2         NBR_NEEDED_BYTES = 0;

  17657 13 000065   200035 450100                    STZ     NBR_NEEDED_BYTES,,AUTO
        13 000066   000253 710000 13                 TRA     s:17732

      432    17658
      433    17659    2         SELECT( %E$NOPROC );

      434    17660    2         TYPE = %CLEANUP_ACCT;

  17660 13 000067   000007 235007                    LDA     7,DL
        13 000070   000000 755000 xsym               STA     TYPE

PL6.E3A0      #003=FLS$FILE_PACKER File=FLS$FILE_PACKER.:E05TSI                  TUE 07/29/97 16:22 Page:104  
      435    17661    2         NBR_NEEDED_BYTES = 0;

  17661 13 000071   200035 450100                    STZ     NBR_NEEDED_BYTES,,AUTO
        13 000072   000253 710000 13                 TRA     s:17732

      436    17662
      437    17663    2         SELECT( ELSE );

      438    17664    2      IF F$DCB.DESC.DELF#

  17664 13 000073   000000 475400 xsym               LDP5    DCB$
        13 000074   500005 236100                    LDQ     5,,PR5
        13 000075   400000 316007                    CANQ    -131072,DL
        13 000076   000112 600000 13                 TZE     s:17675

      439    17665    2       THEN IF F$DCB.DESC.ARCHIVE#

  17665 13 000077   001000 316007                    CANQ    512,DL
        13 000100   000106 600000 13                 TZE     s:17671

      440    17666    3          THEN DO;

      441    17667    3            TYPE = %INACTIVE_FILE;

  17667 13 000101   000002 235007                    LDA     2,DL
        13 000102   000000 755000 xsym               STA     TYPE

      442    17668    3            NBR_NEEDED_BYTES = 4096;       /* Have FIT                           */

  17668 13 000103   010000 235007                    LDA     4096,DL
        13 000104   200035 755100                    STA     NBR_NEEDED_BYTES,,AUTO

      443    17669    3            END;

  17669 13 000105   000253 710000 13                 TRA     s:17732

      444    17670    3          ELSE DO;
PL6.E3A0      #003=FLS$FILE_PACKER File=FLS$FILE_PACKER.:E05TSI                  TUE 07/29/97 16:22 Page:105  

      445    17671    3            TYPE = %DEL_FILE;

  17671 13 000106   000001 235007                    LDA     1,DL
        13 000107   000000 755000 xsym               STA     TYPE

      446    17672    3            NBR_NEEDED_BYTES = 0;          /* No FIT                             */

  17672 13 000110   200035 450100                    STZ     NBR_NEEDED_BYTES,,AUTO

      447    17673    3            END;

  17673 13 000111   000253 710000 13                 TRA     s:17732

      448    17674    3       ELSE DO;

      449    17675    3         NBR_NEEDED_BYTES = 4096;          /* Have FIT                           */

  17675 13 000112   010000 235007                    LDA     4096,DL
        13 000113   200035 755100                    STA     NBR_NEEDED_BYTES,,AUTO

      450    17676    3         CODE03$ = PINCRW( FPARAM_.PTR$, SIZEW(FM$GRAN) );

  17676 13 000114   200005 476500                    LDP6    @FPARAM_,,AUTO
        13 000115   600001 236100                    LDQ     1,,PR6
        13 000116   000005 036003                    ADLQ    5,DU
        13 000117   200021 756100                    STQ     CODE03$,,AUTO

      451    17677    3         CALL XSF$LOCCODP( CODE03$, 03 )

  17677 13 000120   000000 236000 14                 LDQ     0
        13 000121   200057 756100                    STQ     @NEW_FSN+3,,AUTO
        13 000122   200021 637500                    EPPR7   CODE03$,,AUTO
        13 000123   200056 457500                    STP7    @NEW_FSN+2,,AUTO
        13 000124   200056 630500                    EPPR0   @NEW_FSN+2,,AUTO
        13 000125   000020 631400 xsym               EPPR1   B_VECTNIL+16
        13 000126   000000 701000 xent               TSX1    XSF$LOCCODP
PL6.E3A0      #003=FLS$FILE_PACKER File=FLS$FILE_PACKER.:E05TSI                  TUE 07/29/97 16:22 Page:106  
        13 000127   000237 702000 13                 TSX2    s:17711

      452    17678    4          WHENRETURN DO;

      453    17679    4            NBR_GRANS_TO_READ = CODE03.UGRANS - F$DCB.CRECNO;

  17679 13 000130   000000 470400 xsym               LDP0    DCB$
        13 000131   200021 471500                    LDP1    CODE03$,,AUTO
        13 000132   100000 236100                    LDQ     0,,PR1
        13 000133   000032 376000 xsym               ANQ     B_VECTNIL+26
        13 000134   000071 136100                    SBLQ    57,,PR0
        13 000135   200034 756100                    STQ     NBR_GRANS_TO_READ,,AUTO

      454    17680    4            IF (F$DCB.ORG# = %IDS# AND DISK_OPTION.IDSS = %FAST)

  17680 13 000136   000032 236100                    LDQ     26,,PR0
        13 000137   777000 376003                    ANQ     -512,DU
        13 000140   007000 116003                    CMPQ    3584,DU
        13 000141   000151 601000 13                 TNZ     s:17682
        13 000142   000001 236000 xsym               LDQ     DISK_OPTION+1
        13 000143   700000 376003                    ANQ     -32768,DU
        13 000144   100000 116003                    CMPQ    32768,DU
        13 000145   000151 601000 13                 TNZ     s:17682

      455    17681    4             THEN TYPE = %IDS_FAST_FILE;

  17681 13 000146   000011 235007                    LDA     9,DL
        13 000147   000000 755000 xsym               STA     TYPE
        13 000150   000152 710000 13                 TRA     s:17683

      456    17682    4             ELSE TYPE = %REG_FILE;

  17682 13 000151   000000 450000 xsym               STZ     TYPE

      457    17683    4            IF DISK_OPTION.ACUP

  17683 13 000152   000000 236000 xsym               LDQ     DISK_OPTION
PL6.E3A0      #003=FLS$FILE_PACKER File=FLS$FILE_PACKER.:E05TSI                  TUE 07/29/97 16:22 Page:107  
        13 000153   004000 316003                    CANQ    2048,DU
        13 000154   000236 600000 13                 TZE     s:17709

      458    17684    5             THEN DO;

      459    17685    5               CODE04$ = PINCRW( FPARAM_.PTR$, SIZEW(FM$GRAN) );

  17685 13 000155   200005 473500                    LDP3    @FPARAM_,,AUTO
        13 000156   300001 236100                    LDQ     1,,PR3
        13 000157   000005 036003                    ADLQ    5,DU
        13 000160   200022 756100                    STQ     CODE04$,,AUTO

      460    17686    5               CALL XSF$LOCCODP( CODE04$, 04 )

  17686 13 000161   000001 236000 14                 LDQ     1
        13 000162   200057 756100                    STQ     @NEW_FSN+3,,AUTO
        13 000163   200022 634500                    EPPR4   CODE04$,,AUTO
        13 000164   200056 454500                    STP4    @NEW_FSN+2,,AUTO
        13 000165   200056 630500                    EPPR0   @NEW_FSN+2,,AUTO
        13 000166   000020 631400 xsym               EPPR1   B_VECTNIL+16
        13 000167   000000 701000 xent               TSX1    XSF$LOCCODP
        13 000170   000236 702000 13                 TSX2    s:17709

      461    17687    6                WHENRETURN DO;

      462    17688    6                  IF CODE04.ACCESS.TIME <= CODE04.MODIFY.TIME

  17688 13 000171   200022 470500                    LDP0    CODE04$,,AUTO
        13 000172   000001 236100                    LDQ     1,,PR0
        13 000173   000000 116100                    CMPQ    0,,PR0
        13 000174   000177 602000 13                 TNC     s:17691

      463    17689    6                   THEN TYPE = %REG_FILE;

  17689 13 000175   000000 450000 xsym               STZ     TYPE
        13 000176   000236 710000 13                 TRA     s:17709

PL6.E3A0      #003=FLS$FILE_PACKER File=FLS$FILE_PACKER.:E05TSI                  TUE 07/29/97 16:22 Page:108  
      464    17690    7                   ELSE DO;

      465    17691    7                     CODE05$ = PINCRW( FPARAM_.PTR$, SIZEW(FM$GRAN) );

  17691 13 000177   200005 471500                    LDP1    @FPARAM_,,AUTO
        13 000200   100001 236100                    LDQ     1,,PR1
        13 000201   000005 036003                    ADLQ    5,DU
        13 000202   200023 756100                    STQ     CODE05$,,AUTO

      466    17692    7                     CALL XSF$LOCCODP( CODE05$, 05 )

  17692 13 000203   000002 236000 14                 LDQ     2
        13 000204   200057 756100                    STQ     @NEW_FSN+3,,AUTO
        13 000205   200023 633500                    EPPR3   CODE05$,,AUTO
        13 000206   200056 453500                    STP3    @NEW_FSN+2,,AUTO
        13 000207   200056 630500                    EPPR0   @NEW_FSN+2,,AUTO
        13 000210   000020 631400 xsym               EPPR1   B_VECTNIL+16
        13 000211   000000 701000 xent               TSX1    XSF$LOCCODP
        13 000212   000235 702000 13                 TSX2    s:17704

      467    17693    8                      WHENRETURN DO;

      468    17694    8                        IF CODE04.MODIFY.TIME >= CODE05.BACKUP.TIME

  17694 13 000213   200022 470500                    LDP0    CODE04$,,AUTO
        13 000214   200023 471500                    LDP1    CODE05$,,AUTO
        13 000215   000001 236100                    LDQ     1,,PR0
        13 000216   100000 116100                    CMPQ    0,,PR1
        13 000217   000222 602000 13                 TNC     s:17696

      469    17695    8                         THEN TYPE = %REG_FILE;

  17695 13 000220   000000 450000 xsym               STZ     TYPE
        13 000221   000234 710000 13                 TRA     s:17702

      470    17696    8                         ELSE IF CODE04.ACCESS.TIME >= CODE05.BACKUP.TIME

PL6.E3A0      #003=FLS$FILE_PACKER File=FLS$FILE_PACKER.:E05TSI                  TUE 07/29/97 16:22 Page:109  
  17696 13 000222   000000 236100                    LDQ     0,,PR0
        13 000223   100000 116100                    CMPQ    0,,PR1
        13 000224   000233 602000 13                 TNC     s:17701

      471    17697    9                            THEN DO; /* Accessed but not modified since last backup */

      472    17698    9                              TYPE = %ACUP_FILE;

  17698 13 000225   000003 235007                    LDA     3,DL
        13 000226   000000 755000 xsym               STA     TYPE

      473    17699    9                              FIT_ONLY_SAVED = '1'B;

  17699 13 000227   400000 236003                    LDQ     -131072,DU
        13 000230   200013 473500                    LDP3    @FIT_ONLY_SAVED,,AUTO
        13 000231   300000 756100                    STQ     0,,PR3

      474    17700    9                              END;

  17700 13 000232   000234 710000 13                 TRA     s:17702

      475    17701    8                            ELSE TYPE = %REG_FILE;

  17701 13 000233   000000 450000 xsym               STZ     TYPE

      476    17702    8                        END;

  17702 13 000234   000236 710000 13                 TRA     s:17709

      477    17703    8                      WHENALTRETURN DO;

      478    17704    8                        TYPE = %REG_FILE;

  17704 13 000235   000000 450000 xsym               STZ     TYPE

      479    17705    8                        END;

PL6.E3A0      #003=FLS$FILE_PACKER File=FLS$FILE_PACKER.:E05TSI                  TUE 07/29/97 16:22 Page:110  
      480    17706    7                     END;

      481    17707    6                  END;

      482    17708    5               END;

      483    17709    4            END;

  17709 13 000236   000253 710000 13                 TRA     s:17732

      484    17710    4          WHENALTRETURN DO;           /* Shouldn't get here, but assume ACUP     */

      485    17711    4            CALL FLI$RPT_ERR( E_NO_CODE3, DCB# );

  17711 13 000237   200004 236100                    LDQ     @DCB#,,AUTO
        13 000240   000003 235000 14                 LDA     3
        13 000241   200056 757100                    STAQ    @NEW_FSN+2,,AUTO
        13 000242   200056 630500                    EPPR0   @NEW_FSN+2,,AUTO
        13 000243   000020 631400 xsym               EPPR1   B_VECTNIL+16
        13 000244   000000 701000 xent               TSX1    FLI$RPT_ERR
        13 000245   000000 011000                    NOP     0

      486    17712    4            TYPE = %ACUP_FILE;             /* At least we know there's a FIT     */

  17712 13 000246   000003 235007                    LDA     3,DL
        13 000247   000000 755000 xsym               STA     TYPE

      487    17713    4            FIT_ONLY_SAVED = '1'B;

  17713 13 000250   400000 236003                    LDQ     -131072,DU
        13 000251   200013 470500                    LDP0    @FIT_ONLY_SAVED,,AUTO
        13 000252   000000 756100                    STQ     0,,PR0

      488    17714    4            END;

      489    17715    3         END;

PL6.E3A0      #003=FLS$FILE_PACKER File=FLS$FILE_PACKER.:E05TSI                  TUE 07/29/97 16:22 Page:111  
      490    17716
      491    17717    2         END;

      492    17718
      493    17719        /***
      494    17720         *** A new tape file should be started if the previous file caused
      495    17721         *** our maximum number of tape blocks per file to be exceeded
      496    17722         *** , if cleanup entries are to be written to tape or started copying
      497    17723         *** files from a new pack.
      498    17724         *** A new tape block should be started if:
      499    17725         ***     1) We need more bytes than remain in the current block;
      500    17726         ***  or 2) The packset or account changed and we're trying to
      501    17727         ***        pack a file for which we only have name information
      502    17728         ***        in the tag;
      503    17729         ***  or 3) We've run out of block tags in the current block.
      504    17730         ***/
      505    17731
      506    17732    1      FLUSH = '0'B;

  17732 13 000253   200031 450100                    STZ     FLUSH,,AUTO

      507    17733    1      NEW_FILE = '0'B;

  17733 13 000254   200036 450100                    STZ     NEW_FILE,,AUTO

      508    17734
      509    17735    2      DO CASE( LAST_TYPE );

  17735 13 000255   000000 235000 xsym               LDA     LAST_TYPE
        13 000256   000007 135007                    SBLA    7,DL
        13 000257   000002 115007                    CMPA    2,DL
        13 000260   000262 602005 13                 TNC     s:17735+5,AL
        13 000261   000267 710000 13                 TRA     s:17739
        13 000262   000264 710000 13                 TRA     s:17737
        13 000263   000264 710000 13                 TRA     s:17737

      510    17736    2       CASE( %CLEANUP_FILE, %CLEANUP_ACCT );
PL6.E3A0      #003=FLS$FILE_PACKER File=FLS$FILE_PACKER.:E05TSI                  TUE 07/29/97 16:22 Page:112  

      511    17737    2         CLEANING_UP = '1'B;

  17737 13 000264   400000 236003                    LDQ     -131072,DU
        13 000265   200017 756100                    STQ     CLEANING_UP,,AUTO
        13 000266   000270 710000 13                 TRA     s:17741

      512    17738    2       CASE( ELSE );

      513    17739    2         CLEANING_UP = '0'B;

  17739 13 000267   200017 450100                    STZ     CLEANING_UP,,AUTO

      514    17740    2       END;

      515    17741    2      DO CASE( TYPE );

  17741 13 000270   000000 236000 xsym               LDQ     TYPE
        13 000271   000007 136007                    SBLQ    7,DL
        13 000272   000002 116007                    CMPQ    2,DL
        13 000273   000275 602006 13                 TNC     s:17741+5,QL
        13 000274   000304 710000 13                 TRA     s:17745
        13 000275   000277 710000 13                 TRA     s:17743
        13 000276   000277 710000 13                 TRA     s:17743

      516    17742    2       CASE( %CLEANUP_FILE, %CLEANUP_ACCT );

      517    17743    2         START_NEW_FILE = ~ CLEANING_UP;

  17743 13 000277   200017 236100                    LDQ     CLEANING_UP,,AUTO
        13 000300   400000 376003                    ANQ     -131072,DU
        13 000301   400000 676003                    ERQ     -131072,DU
        13 000302   200037 756100                    STQ     START_NEW_FILE,,AUTO
        13 000303   000307 710000 13                 TRA     s:17748

      518    17744    2       CASE( ELSE );

PL6.E3A0      #003=FLS$FILE_PACKER File=FLS$FILE_PACKER.:E05TSI                  TUE 07/29/97 16:22 Page:113  
      519    17745    2         START_NEW_FILE = CLEANING_UP;

  17745 13 000304   200017 236100                    LDQ     CLEANING_UP,,AUTO
        13 000305   400000 376003                    ANQ     -131072,DU
        13 000306   200037 756100                    STQ     START_NEW_FILE,,AUTO

      520    17746    2       END;

      521    17747
      522    17748    1      IF BLK_TAG$ < MIN_BLK_TAG$

  17748 13 000307   000000 236000 xsym               LDQ     BLK_TAG$
        13 000310   000000 116000 xsym               CMPQ    MIN_BLK_TAG$
        13 000311   000314 603000 13                 TRC     s:17750

      523    17749    1       THEN FLUSH = '1'B;

  17749 13 000312   400000 236003                    LDQ     -131072,DU
        13 000313   200031 756100                    STQ     FLUSH,,AUTO

      524    17750    1      IF NBR_FILE_BLOCKS >= %MAX_NBR_FILE_BLOCKS

  17750 13 000314   000000 236000 xsym               LDQ     NBR_FILE_BLOCKS
        13 000315   000062 116007                    CMPQ    50,DL
        13 000316   000325 605000 13                 TPL     s:17755
        13 000317   200037 234100                    SZN     START_NEW_FILE,,AUTO
        13 000320   000325 604000 13                 TMI     s:17755
        13 000321   040000 106400                    CMPC    fill='040'O
        13 000322   000001 000006 xsym               ADSC9   LAST_DSN_USED+1          cn=0,n=6
        13 000323   000001 000006 xsym               ADSC9   DISK_SN+1                cn=0,n=6
        13 000324   000331 600000 13                 TZE     s:17758

      525    17751                                      /* Start new file if current file is too large  */
      526    17752    1        OR START_NEW_FILE
      527    17753    1        OR LAST_DSN_USED.SN#(0) ~= DISK_SN.SN#(0) /* or copying from a new pack  */
      528    17754    2       THEN DO;

PL6.E3A0      #003=FLS$FILE_PACKER File=FLS$FILE_PACKER.:E05TSI                  TUE 07/29/97 16:22 Page:114  
      529    17755    2         FLUSH = '1'B;

  17755 13 000325   400000 236003                    LDQ     -131072,DU
        13 000326   200031 756100                    STQ     FLUSH,,AUTO

      530    17756    2         NEW_FILE = '1'B;

  17756 13 000327   200036 756100                    STQ     NEW_FILE,,AUTO

      531    17757    2         END;

  17757 13 000330   000367 710000 13                 TRA     s:17765

      532    17758    1       ELSE IF NBR_NEEDED_BYTES > NBR_BLOCK_BYTES_REMAINING

  17758 13 000331   200035 236100                    LDQ     NBR_NEEDED_BYTES,,AUTO
        13 000332   000000 116000 xsym               CMPQ    NBR_BLOCK_BYTES_REMAINING
        13 000333   000337 604400 13                 TMOZ    s:17760

      533    17759    1          THEN FLUSH = '1'B;

  17759 13 000334   400000 236003                    LDQ     -131072,DU
        13 000335   200031 756100                    STQ     FLUSH,,AUTO
        13 000336   000367 710000 13                 TRA     s:17765

      534    17760    1         ELSE IF ( TYPE = %REG_FILE OR TYPE = %DEL_FILE OR TYPE = %ACUP_FILE OR TYPE =
             17760                   %INACTIVE_FILE OR TYPE = %CLEANUP_FILE

  17760 13 000337   000000 235000 xsym               LDA     TYPE
        13 000340   000353 600000 13                 TZE     s:17760+12
        13 000341   000001 115007                    CMPA    1,DL
        13 000342   000353 600000 13                 TZE     s:17760+12
        13 000343   000003 115007                    CMPA    3,DL
        13 000344   000353 600000 13                 TZE     s:17760+12
        13 000345   000002 115007                    CMPA    2,DL
        13 000346   000353 600000 13                 TZE     s:17760+12
        13 000347   000010 115007                    CMPA    8,DL
PL6.E3A0      #003=FLS$FILE_PACKER File=FLS$FILE_PACKER.:E05TSI                  TUE 07/29/97 16:22 Page:115  
        13 000350   000353 600000 13                 TZE     s:17760+12
        13 000351   000011 115007                    CMPA    9,DL
        13 000352   000367 601000 13                 TNZ     s:17765
        13 000353   000000 470400 xsym               LDP0    BLK_TAG0$
        13 000354   000000 471400 xsym               LDP1    DCB$
        13 000355   040100 106500                    CMPC    fill='040'O
        13 000356   000004 400010                    ADSC9   4,,PR0                   cn=2,n=8
        13 000357   100020 000010                    ADSC9   16,,PR1                  cn=0,n=8
        13 000360   000365 601000 13                 TNZ     s:17763
        13 000361   040100 106500                    CMPC    fill='040'O
        13 000362   000003 000006                    ADSC9   3,,PR0                   cn=0,n=6
        13 000363   100024 000006                    ADSC9   20,,PR1                  cn=0,n=6
        13 000364   000367 600000 13                 TZE     s:17765

      535    17761    1              OR TYPE = %IDS_FAST_FILE )
      536    17762    1              AND ( BLK_TAG0.WHERE.ACCT ~= F$DCB.ACCT# OR BLK_TAG0.WHERE.PSN ~= F$DCB.
             17762                       PSN# )
      537    17763    1             THEN FLUSH = '1'B;

  17763 13 000365   400000 236003                    LDQ     -131072,DU
        13 000366   200031 756100                    STQ     FLUSH,,AUTO

      538    17764
      539    17765    1      LAST_TYPE = TYPE;

  17765 13 000367   000000 235000 xsym               LDA     TYPE
        13 000370   000000 755000 xsym               STA     LAST_TYPE

      540    17766    1      LAST_DSN_USED.SN#(0) = DISK_SN.SN#(0);

  17766 13 000371   040000 100400                    MLR     fill='040'O
        13 000372   000001 000006 xsym               ADSC9   DISK_SN+1                cn=0,n=6
        13 000373   000001 000006 xsym               ADSC9   LAST_DSN_USED+1          cn=0,n=6

      541    17767
      542    17768        /***
      543    17769         *** Flush current block / open file as flags indicate.
PL6.E3A0      #003=FLS$FILE_PACKER File=FLS$FILE_PACKER.:E05TSI                  TUE 07/29/97 16:22 Page:116  
      544    17770         ***/
      545    17771
      546    17772    1      IF FLUSH

  17772 13 000374   200031 234100                    SZN     FLUSH,,AUTO
        13 000375   000520 605000 13                 TPL     s:17802

      547    17773    2       THEN DO;

      548    17774    2         IF BLK_TAG$ ~= BLK_TAG0$

  17774 13 000376   000000 236000 xsym               LDQ     BLK_TAG$
        13 000377   000000 116000 xsym               CMPQ    BLK_TAG0$
        13 000400   000412 600000 13                 TZE     s:17776

      549    17775    2          THEN CALL FLS$FLUSH_BLOCK( ,COMMAND, TAPE_SN, TAPE_FSN ) ALTRET( JUSTALT );

  17775 13 000401   000004 237000 14                 LDAQ    4
        13 000402   200060 757100                    STAQ    @NEW_FSN+4,,AUTO
        13 000403   200014 236100                    LDQ     @COMMAND,,AUTO
        13 000404   000001 235000 xsym               LDA     B_VECTNIL+1
        13 000405   200056 757100                    STAQ    @NEW_FSN+2,,AUTO
        13 000406   200056 630500                    EPPR0   @NEW_FSN+2,,AUTO
        13 000407   000022 631400 xsym               EPPR1   B_VECTNIL+18
        13 000410   000000 701000 xent               TSX1    FLS$FLUSH_BLOCK
        13 000411   001114 702000 13                 TSX2    JUSTALT

      550    17776    2         IF NEW_FILE

  17776 13 000412   200036 234100                    SZN     NEW_FILE,,AUTO
        13 000413   000460 605000 13                 TPL     s:17783

      551    17777    3          THEN DO;

      552    17778    3            IF TAPE_DCBLIST.DCB$(0)->F$DCB.FCD# /* Tape file open ?              */

  17778 13 000414   000000 470400 xsym               LDP0    TAPE_DCBLIST$
PL6.E3A0      #003=FLS$FILE_PACKER File=FLS$FILE_PACKER.:E05TSI                  TUE 07/29/97 16:22 Page:117  
        13 000415   000001 471500                    LDP1    1,,PR0
        13 000416   100031 236100                    LDQ     25,,PR1
        13 000417   020000 316007                    CANQ    8192,DL
        13 000420   000424 600000 13                 TZE     s:17780

      553    17779    3             THEN CALL FLI$TAPE_CLOSE ALTRET( JUSTALT );

  17779 13 000421   000002 631400 xsym               EPPR1   B_VECTNIL+2
        13 000422   000000 701000 xent               TSX1    FLI$TAPE_CLOSE
        13 000423   001114 702000 13                 TSX2    JUSTALT

      554    17780    3            CALL FLI$TAPE_OPEN( VECTOR(EFT_RESTRICT_FILE), TAPE_SN, TAPE_FSN, %NO#,
             17780                     '1'B, , A_FIT_, ERR, DCB# ) ALTRET( REPALT );

  17780 13 000424   000000 236000 xsym               LDQ     EFT_RESTRICT_FILE
        13 000425   000033 772000                    QRL     27
        13 000426   000001 620006                    EAX0    1,QL
        13 000427   000000 635010                    EAA     0,X0
        13 000430   000002 771000                    ARL     2
        13 000431   000140 135007                    SBLA    96,DL
        13 000432   000006 236000 14                 LDQ     6
        13 000433   200056 757100                    STAQ    @NEW_FSN+2,,AUTO
        13 000434   200004 236100                    LDQ     @DCB#,,AUTO
        13 000435   200070 756100                    STQ     @NEW_FSN+12,,AUTO
        13 000436   200030 630500                    EPPR0   ERR,,AUTO
        13 000437   200067 450500                    STP0    @NEW_FSN+11,,AUTO
        13 000440   000010 236000 14                 LDQ     8
        13 000441   200066 756100                    STQ     @NEW_FSN+10,,AUTO
        13 000442   000001 236000 xsym               LDQ     B_VECTNIL+1
        13 000443   000011 235000 14                 LDA     9
        13 000444   200064 757100                    STAQ    @NEW_FSN+8,,AUTO
        13 000445   000012 237000 14                 LDAQ    10
        13 000446   200062 757100                    STAQ    @NEW_FSN+6,,AUTO
        13 000447   000004 236000 14                 LDQ     4
        13 000450   200061 756100                    STQ     @NEW_FSN+5,,AUTO
        13 000451   200056 631500                    EPPR1   @NEW_FSN+2,,AUTO
        13 000452   200060 451500                    STP1    @NEW_FSN+4,,AUTO
PL6.E3A0      #003=FLS$FILE_PACKER File=FLS$FILE_PACKER.:E05TSI                  TUE 07/29/97 16:22 Page:118  
        13 000453   200060 630500                    EPPR0   @NEW_FSN+4,,AUTO
        13 000454   000007 631400 14                 EPPR1   7
        13 000455   000000 701000 xent               TSX1    FLI$TAPE_OPEN
        13 000456   001104 702000 13                 TSX2    REPALT

      555    17781    3            NBR_FILE_BLOCKS = 0;

  17781 13 000457   000000 450000 xsym               STZ     NBR_FILE_BLOCKS

      556    17782    3            END;

      557    17783    2         BREAK_DCB# = DCB#;

  17783 13 000460   200004 470500                    LDP0    @DCB#,,AUTO
        13 000461   000000 235100                    LDA     0,,PR0
        13 000462   000000 755000 xsym               STA     BREAK_DCB#

      558    17784    2         LOW_BLK_TAG$ = BLK_TAG0$;

  17784 13 000463   000000 236000 xsym               LDQ     BLK_TAG0$
        13 000464   000000 756000 xsym               STQ     LOW_BLK_TAG$

      559    17785    2         BLK_TAG$ = BLK_TAG0$;

  17785 13 000465   000000 756000 xsym               STQ     BLK_TAG$

      560    17786    2         BLK_TAG0 = '0'B;                  /* Initialize BLK_TAG0 of next block  */

  17786 13 000466   000000 471400 xsym               LDP1    BLK_TAG0$
        13 000467   000100 100400                    MLR     fill='000'O
        13 000470   000002 000001 xsym               ADSC9   B_VECTNIL+2              cn=0,n=1
        13 000471   100000 000054                    ADSC9   0,,PR1                   cn=0,n=44

      561    17787    2         IF OVER_FIL

  17787 13 000472   000000 234000 xsym               SZN     OVER_FIL
        13 000473   000501 605000 13                 TPL     s:17789
PL6.E3A0      #003=FLS$FILE_PACKER File=FLS$FILE_PACKER.:E05TSI                  TUE 07/29/97 16:22 Page:119  

      562    17788    2          THEN BLK_TAG0.WHERE.PSN = DISK_DEST_SN.SN#(0);

  17788 13 000474   000000 471400 xsym               LDP1    BLK_TAG0$
        13 000475   040100 100400                    MLR     fill='040'O
        13 000476   000001 000006 xsym               ADSC9   DISK_DEST_SN+1           cn=0,n=6
        13 000477   100003 000006                    ADSC9   3,,PR1                   cn=0,n=6
        13 000500   000506 710000 13                 TRA     s:17790

      563    17789    2          ELSE BLK_TAG0.WHERE.PSN = F$DCB.PSN#;

  17789 13 000501   000000 471400 xsym               LDP1    DCB$
        13 000502   000000 473400 xsym               LDP3    BLK_TAG0$
        13 000503   040100 100500                    MLR     fill='040'O
        13 000504   100024 000006                    ADSC9   20,,PR1                  cn=0,n=6
        13 000505   300003 000006                    ADSC9   3,,PR3                   cn=0,n=6

      564    17790    2         BLK_TAG0.WHERE.ACCT = F$DCB.ACCT#;

  17790 13 000506   000000 471400 xsym               LDP1    DCB$
        13 000507   000000 473400 xsym               LDP3    BLK_TAG0$
        13 000510   040100 100500                    MLR     fill='040'O
        13 000511   100020 000010                    ADSC9   16,,PR1                  cn=0,n=8
        13 000512   300004 400010                    ADSC9   4,,PR3                   cn=2,n=8

      565    17791    2         BLK_TAG_NBR = 0;

  17791 13 000513   000000 450000 xsym               STZ     BLK_TAG_NBR

      566    17792    2         NBR_BLOCK_BYTES_REMAINING = NBR_BLOCK_BYTES;

  17792 13 000514   000000 235000 xsym               LDA     NBR_BLOCK_BYTES
        13 000515   000000 755000 xsym               STA     NBR_BLOCK_BYTES_REMAINING

      567    17793    2         BLOCK_GRAN$ = GRAN_BASE$;

  17793 13 000516   000000 236000 xsym               LDQ     GRAN_BASE$
PL6.E3A0      #003=FLS$FILE_PACKER File=FLS$FILE_PACKER.:E05TSI                  TUE 07/29/97 16:22 Page:120  
        13 000517   000000 756000 xsym               STQ     BLOCK_GRAN$

      568    17794    2         END;

      569    17795
      570    17796        /***
      571    17797         *** Start current file at next block tag.  (The previous code
      572    17798         *** guarantees that a next block tag will exist.)  Initialize
      573    17799         *** the next block tag.
      574    17800         ***/
      575    17801
      576    17802    1      TSN = TAPE_SN;

  17802 13 000520   200006 470500                    LDP0    @TSN,,AUTO
        13 000521   040100 100400                    MLR     fill='040'O
        13 000522   000000 000006 xsym               ADSC9   TAPE_SN                  cn=0,n=6
        13 000523   000000 000006                    ADSC9   0,,PR0                   cn=0,n=6

      577    17803    1      FSN = TAPE_FSN;

  17803 13 000524   000000 235000 xsym               LDA     TAPE_FSN
        13 000525   200007 471500                    LDP1    @FSN,,AUTO
        13 000526   100000 755100                    STA     0,,PR1

      578    17804    1      BLK_TAG$ = PINCRW( BLK_TAG$, -SIZEW(BLK_TAG) );

  17804 13 000527   000000 236000 xsym               LDQ     BLK_TAG$
        13 000530   777765 036003                    ADLQ    -11,DU
        13 000531   000000 756000 xsym               STQ     BLK_TAG$

      579    17805    1      IF BLK_TAG$ < LOW_BLK_TAG$

  17805 13 000532   000000 116000 xsym               CMPQ    LOW_BLK_TAG$
        13 000533   000535 603000 13                 TRC     s:17807

      580    17806    1       THEN LOW_BLK_TAG$ = BLK_TAG$;

PL6.E3A0      #003=FLS$FILE_PACKER File=FLS$FILE_PACKER.:E05TSI                  TUE 07/29/97 16:22 Page:121  
  17806 13 000534   000000 756000 xsym               STQ     LOW_BLK_TAG$

      581    17807    1      BLK_TAG = '0'B;

  17807 13 000535   000000 473400 xsym               LDP3    BLK_TAG$
        13 000536   000100 100400                    MLR     fill='000'O
        13 000537   000002 000001 xsym               ADSC9   B_VECTNIL+2              cn=0,n=1
        13 000540   300000 000054                    ADSC9   0,,PR3                   cn=0,n=44

      582    17808    1      BLK_TAG.TYPE = TYPE;

  17808 13 000541   000000 473400 xsym               LDP3    BLK_TAG$
        13 000542   000000 236000 xsym               LDQ     TYPE
        13 000543   300000 752101                    STCQ    0,'01'O,PR3

      583    17809    1      BLK_TAG_NBR = BLK_TAG_NBR + 1;

  17809 13 000544   000000 054000 xsym               AOS     BLK_TAG_NBR

      584    17810    1      BLK_TAG.NBR = BLK_TAG_NBR;

  17810 13 000545   000000 473400 xsym               LDP3    BLK_TAG$
        13 000546   000000 236000 xsym               LDQ     BLK_TAG_NBR
        13 000547   000011 736000                    QLS     9
        13 000550   300000 552110                    STBQ    0,'10'O,PR3

      585    17811    1      BLK_TAG0.NBR = BLK_TAG_NBR;

  17811 13 000551   000000 473400 xsym               LDP3    BLK_TAG0$
        13 000552   000000 236000 xsym               LDQ     BLK_TAG_NBR
        13 000553   000011 736000                    QLS     9
        13 000554   300000 552110                    STBQ    0,'10'O,PR3

      586    17812    1      DI_ERR = '0'B;

  17812 13 000555   200026 450100                    STZ     DI_ERR,,AUTO

PL6.E3A0      #003=FLS$FILE_PACKER File=FLS$FILE_PACKER.:E05TSI                  TUE 07/29/97 16:22 Page:122  
      587    17813
      588    17814        /***
      589    17815         *** Account-related information makes different
      590    17816         *** use of the block tag fields than file-related information.
      591    17817         ***/
      592    17818
      593    17819    2      DO CASE( TYPE );

  17819 13 000556   000000 235000 xsym               LDA     TYPE
        13 000557   000012 115007                    CMPA    10,DL
        13 000560   000562 602005 13                 TNC     s:17819+4,AL
        13 000561   000617 710000 13                 TRA     s:17831
        13 000562   000605 710000 13                 TRA     s:17826
        13 000563   000605 710000 13                 TRA     s:17826
        13 000564   000605 710000 13                 TRA     s:17826
        13 000565   000605 710000 13                 TRA     s:17826
        13 000566   000574 710000 13                 TRA     s:17822
        13 000567   000574 710000 13                 TRA     s:17822
        13 000570   000574 710000 13                 TRA     s:17822
        13 000571   000574 710000 13                 TRA     s:17822
        13 000572   000605 710000 13                 TRA     s:17826
        13 000573   000605 710000 13                 TRA     s:17826

      594    17820
      595    17821    2       CASE( %FILE_DIR, %DEL_ACCT, %ACCT_DIR, %CLEANUP_ACCT );

      596    17822    2         BLK_TAG.WHERE.PSN = F$DCB.PSN#;

  17822 13 000574   000000 473400 xsym               LDP3    DCB$
        13 000575   000000 474400 xsym               LDP4    BLK_TAG$
        13 000576   040100 100500                    MLR     fill='040'O
        13 000577   300024 000006                    ADSC9   20,,PR3                  cn=0,n=6
        13 000600   400003 000006                    ADSC9   3,,PR4                   cn=0,n=6

      597    17823    2         BLK_TAG.WHERE.ACCT = F$DCB.ACCT#;

  17823 13 000601   040100 100500                    MLR     fill='040'O
PL6.E3A0      #003=FLS$FILE_PACKER File=FLS$FILE_PACKER.:E05TSI                  TUE 07/29/97 16:22 Page:123  
        13 000602   300020 000010                    ADSC9   16,,PR3                  cn=0,n=8
        13 000603   400004 400010                    ADSC9   4,,PR4                   cn=2,n=8
        13 000604   000621 710000 13                 TRA     s:17842

      598    17824
      599    17825    2       CASE( %REG_FILE, %INACTIVE_FILE, %ACUP_FILE, %DEL_FILE, %CLEANUP_FILE, %
             17825                IDS_FAST_FILE );

      600    17826    2         BLK_TAG.NAME.L = F$DCB.NAME#.L;

  17826 13 000605   000000 473400 xsym               LDP3    DCB$
        13 000606   000000 474400 xsym               LDP4    BLK_TAG$
        13 000607   300010 236100                    LDQ     8,,PR3
        13 000610   400003 552140                    STBQ    3,'40'O,PR4

      601    17827    2         BLK_TAG.NAME.C = F$DCB.NAME#.C;

  17827 13 000611   040100 100500                    MLR     fill='040'O
        13 000612   300010 200037                    ADSC9   8,,PR3                   cn=1,n=31
        13 000613   400003 200037                    ADSC9   3,,PR4                   cn=1,n=31

      602    17828    2         BLK_TAG.DESC = F$DCB.DESC;

  17828 13 000614   300005 720100                    LXL0    5,,PR3
        13 000615   400001 440100                    SXL0    1,,PR4
        13 000616   000621 710000 13                 TRA     s:17842

      603    17829
      604    17830    2       CASE( ELSE );

      605    17831    2         CALL M$XXX;                       /* Serious bug                        */

  17831 13 000617   000003 713400                    CLIMB   3
        13 000620   000000 401760                    pmme    nvectors=0

      606    17832    2       END;

PL6.E3A0      #003=FLS$FILE_PACKER File=FLS$FILE_PACKER.:E05TSI                  TUE 07/29/97 16:22 Page:124  
      607    17833
      608    17834        /***
      609    17835         *** Deleted files and accounts don't have any FIT.  File and account
      610    17836         *** directories and accessed only and inactive files have either a
      611    17837         *** FIT or a FIT's worth of information.  Regular or IDS_FAST files must have
      612    17838         *** their data packed away.  Cleaned up files and accounts don't
      613    17839         *** have any FIT.
      614    17840         ***/
      615    17841
      616    17842    1      BLK_TAG.BEG = '1'B;

  17842 13 000621   000000 470400 xsym               LDP0    BLK_TAG$
        13 000622   000400 236007                    LDQ     256,DL
        13 000623   000000 256100                    ORSQ    0,,PR0

      617    17843    2      DO CASE( TYPE );

  17843 13 000624   000000 235000 xsym               LDA     TYPE
        13 000625   000012 115007                    CMPA    10,DL
        13 000626   000630 602005 13                 TNC     s:17843+4,AL
        13 000627   001066 710000 13                 TRA     s:17896
        13 000630   000700 710000 13                 TRA     s:17859
        13 000631   000642 710000 13                 TRA     s:17846
        13 000632   000662 710000 13                 TRA     s:17855
        13 000633   000662 710000 13                 TRA     s:17855
        13 000634   000662 710000 13                 TRA     s:17855
        13 000635   000662 710000 13                 TRA     s:17855
        13 000636   000642 710000 13                 TRA     s:17846
        13 000637   000651 710000 13                 TRA     s:17850
        13 000640   000651 710000 13                 TRA     s:17850
        13 000641   000700 710000 13                 TRA     s:17859

      618    17844
      619    17845    2       CASE( %DEL_ACCT, %DEL_FILE );

      620    17846    2         BLK_TAG.UTS = F$DCB.EXPIRE#;

PL6.E3A0      #003=FLS$FILE_PACKER File=FLS$FILE_PACKER.:E05TSI                  TUE 07/29/97 16:22 Page:125  
  17846 13 000642   000000 470400 xsym               LDP0    DCB$
        13 000643   000035 235100                    LDA     29,,PR0
        13 000644   000000 471400 xsym               LDP1    BLK_TAG$
        13 000645   100002 755100                    STA     2,,PR1

      621    17847    2         BLK_TAG.FIN = '1'B;

  17847 13 000646   000200 236007                    LDQ     128,DL
        13 000647   100000 256100                    ORSQ    0,,PR1
        13 000650   001070 710000 13                 TRA     s:17904

      622    17848
      623    17849    2       CASE( %CLEANUP_ACCT, %CLEANUP_FILE );

      624    17850    2         CALL M$TIME( GET_NOW_UTS );

  17850 13 000651   000000 630400 xsym               EPPR0   GET_NOW_UTS
        13 000652   020004 713400                    CLIMB   8196
        13 000653   402000 401760                    pmme    nvectors=5

      625    17851    2         BLK_TAG.UTS = NOW_UTS;

  17851 13 000654   000000 470400 xsym               LDP0    BLK_TAG$
        13 000655   000000 235000 xsym               LDA     NOW_UTS
        13 000656   000002 755100                    STA     2,,PR0

      626    17852    2         BLK_TAG.FIN = '1'B;

  17852 13 000657   000200 236007                    LDQ     128,DL
        13 000660   000000 256100                    ORSQ    0,,PR0
        13 000661   001070 710000 13                 TRA     s:17904

      627    17853
      628    17854    2       CASE( %FILE_DIR, %ACCT_DIR, %ACUP_FILE, %INACTIVE_FILE );

      629    17855    2         CALL FLS_ADD_GRANS( FPARAM_.PTR$, 4096, TSN, FSN ) ALTRET( JUSTALT );

PL6.E3A0      #003=FLS$FILE_PACKER File=FLS$FILE_PACKER.:E05TSI                  TUE 07/29/97 16:22 Page:126  
  17855 13 000662   200007 236100                    LDQ     @FSN,,AUTO
        13 000663   200054 756100                    STQ     @NEW_TSN+1,,AUTO
        13 000664   200006 236100                    LDQ     @TSN,,AUTO
        13 000665   000015 235000 14                 LDA     13
        13 000666   200052 757100                    STAQ    @GRANS$+1,,AUTO
        13 000667   200005 236100                    LDQ     @FPARAM_,,AUTO
        13 000670   000001 036003                    ADLQ    1,DU
        13 000671   200051 756100                    STQ     @NEW_FSN+3,,AUTO
        13 000672   001426 701000 13                 TSX1    FLS_ADD_GRANS
        13 000673   001114 702000 13                 TSX2    JUSTALT

      630    17856    2         BLK_TAG.FIN = '1'B;

  17856 13 000674   000000 470400 xsym               LDP0    BLK_TAG$
        13 000675   000200 236007                    LDQ     128,DL
        13 000676   000000 256100                    ORSQ    0,,PR0
        13 000677   001070 710000 13                 TRA     s:17904

      631    17857
      632    17858    2       CASE( %REG_FILE, %IDS_FAST_FILE );

      633    17859    2         IF (COMMAND = %SAVE) OR (COMMAND = %BACKUP)

  17859 13 000700   200014 470500                    LDP0    @COMMAND,,AUTO
        13 000701   000000 235100                    LDA     0,,PR0
        13 000702   000006 115007                    CMPA    6,DL
        13 000703   000706 600000 13                 TZE     s:17865
        13 000704   000010 115007                    CMPA    8,DL
        13 000705   001037 601000 13                 TNZ     s:17890

      634    17860    3          THEN DO;

      635    17861        /***
      636    17862         *** Set backup code05 on tape to current backup time and reel so that when
      637    17863         *** restoring the file, code05 is correct.
      638    17864         ***/
      639    17865    3            CODE03.DESC.TPB = '1'B;
PL6.E3A0      #003=FLS$FILE_PACKER File=FLS$FILE_PACKER.:E05TSI                  TUE 07/29/97 16:22 Page:127  

  17865 13 000706   200021 471500                    LDP1    CODE03$,,AUTO
        13 000707   000040 236003                    LDQ     32,DU
        13 000710   100001 256100                    ORSQ    1,,PR1

      640    17866    3            FIT$ = PINCRW ( FPARAM_.PTR$, SIZEW ( FM$GRAN ) );

  17866 13 000711   200005 471500                    LDP1    @FPARAM_,,AUTO
        13 000712   100001 236100                    LDQ     1,,PR1
        13 000713   000005 036003                    ADLQ    5,DU
        13 000714   200020 756100                    STQ     FIT$,,AUTO

      641    17867    3            CODE05$ = FIT$;

  17867 13 000715   200023 756100                    STQ     CODE05$,,AUTO

      642    17868    3            CALL XSF$LOCCODP ( CODE05$, 05 )

  17868 13 000716   000002 236000 14                 LDQ     2
        13 000717   200057 756100                    STQ     @NEW_FSN+3,,AUTO
        13 000720   200023 633500                    EPPR3   CODE05$,,AUTO
        13 000721   200056 453500                    STP3    @NEW_FSN+2,,AUTO
        13 000722   200056 630500                    EPPR0   @NEW_FSN+2,,AUTO
        13 000723   000020 631400 xsym               EPPR1   B_VECTNIL+16
        13 000724   000000 701000 xent               TSX1    XSF$LOCCODP
        13 000725   001024 702000 13                 TSX2    s:17887

      643    17869    4             WHENRETURN DO;

      644    17870    4               CODE05_SAVE = CODE05;

  17870 13 000726   200023 470500                    LDP0    CODE05$,,AUTO
        13 000727   000100 100500                    MLR     fill='000'O
        13 000730   000000 000014                    ADSC9   0,,PR0                   cn=0,n=12
        13 000731   200040 000014                    ADSC9   CODE05_SAVE,,AUTO        cn=0,n=12

      645    17871    4               NDW_SAVE = FM$FIT.CODES.NDW(05);
PL6.E3A0      #003=FLS$FILE_PACKER File=FLS$FILE_PACKER.:E05TSI                  TUE 07/29/97 16:22 Page:128  

  17871 13 000732   200020 471500                    LDP1    FIT$,,AUTO
        13 000733   100005 236100                    LDQ     5,,PR1
        13 000734   000012 772000                    QRL     10
        13 000735   001777 376007                    ANQ     1023,DL
        13 000736   200043 756100                    STQ     NDW_SAVE,,AUTO

      646    17872    4               CALL M$TIME ( GET_NOW_UTS );

  17872 13 000737   000000 630400 xsym               EPPR0   GET_NOW_UTS
        13 000740   020004 713400                    CLIMB   8196
        13 000741   402000 401760                    pmme    nvectors=5

      647    17873    4               CODE05.BACKUP.TIME = NOW_UTS; /* Set backup info. for tape        */

  17873 13 000742   200023 470500                    LDP0    CODE05$,,AUTO
        13 000743   000000 235000 xsym               LDA     NOW_UTS
        13 000744   000000 755100                    STA     0,,PR0

      648    17874    4               CODE05.BACKUP.REEL = TAPE_SN;

  17874 13 000745   200023 470500                    LDP0    CODE05$,,AUTO
        13 000746   040100 100400                    MLR     fill='040'O
        13 000747   000000 000006 xsym               ADSC9   TAPE_SN                  cn=0,n=6
        13 000750   000001 000006                    ADSC9   1,,PR0                   cn=0,n=6

      649    17875    4               CODE05.BACKUP.EFT.FSN = TAPE_FSN;

  17875 13 000751   200023 470500                    LDP0    CODE05$,,AUTO
        13 000752   000000 236000 xsym               LDQ     TAPE_FSN
        13 000753   000002 676100                    ERQ     2,,PR0
        13 000754   037777 376007                    ANQ     16383,DL
        13 000755   000002 656100                    ERSQ    2,,PR0

      650    17876    4               FM$FIT.CODES.NDW(05) = SIZEW(CODE05);

  17876 13 000756   200020 470500                    LDP0    FIT$,,AUTO
PL6.E3A0      #003=FLS$FILE_PACKER File=FLS$FILE_PACKER.:E05TSI                  TUE 07/29/97 16:22 Page:129  
        13 000757   000005 236100                    LDQ     5,,PR0
        13 000760   000016 376000 14                 ANQ     14
        13 000761   006000 276007                    ORQ     3072,DL
        13 000762   000005 756100                    STQ     5,,PR0

      651    17877    4               CALL FLS_ADD_GRANS( FPARAM_.PTR$, 4096, TSN, FSN )

  17877 13 000763   200007 236100                    LDQ     @FSN,,AUTO
        13 000764   200054 756100                    STQ     @NEW_TSN+1,,AUTO
        13 000765   200006 236100                    LDQ     @TSN,,AUTO
        13 000766   000015 235000 14                 LDA     13
        13 000767   200052 757100                    STAQ    @GRANS$+1,,AUTO
        13 000770   200005 236100                    LDQ     @FPARAM_,,AUTO
        13 000771   000001 036003                    ADLQ    1,DU
        13 000772   200051 756100                    STQ     @NEW_FSN+3,,AUTO
        13 000773   001426 701000 13                 TSX1    FLS_ADD_GRANS
        13 000774   000776 702000 13                 TSX2    s:17879
        13 000775   001011 710000 13                 TRA     s:17883

      652    17878    5                WHENALTRETURN DO;

      653    17879    5                  CODE05 = CODE05_SAVE;

  17879 13 000776   200023 470500                    LDP0    CODE05$,,AUTO
        13 000777   000100 100500                    MLR     fill='000'O
        13 001000   200040 000014                    ADSC9   CODE05_SAVE,,AUTO        cn=0,n=12
        13 001001   000000 000014                    ADSC9   0,,PR0                   cn=0,n=12

      654    17880    5                  FM$FIT.CODES.NDW(05) = NDW_SAVE;

  17880 13 001002   200020 470500                    LDP0    FIT$,,AUTO
        13 001003   200043 236100                    LDQ     NDW_SAVE,,AUTO
        13 001004   000012 736000                    QLS     10
        13 001005   000005 676100                    ERQ     5,,PR0
        13 001006   000017 376000 14                 ANQ     15
        13 001007   000005 656100                    ERSQ    5,,PR0

PL6.E3A0      #003=FLS$FILE_PACKER File=FLS$FILE_PACKER.:E05TSI                  TUE 07/29/97 16:22 Page:130  
      655    17881    5                  GOTO JUSTALT;

  17881 13 001010   001114 710000 13                 TRA     JUSTALT

      656    17882    5                  END;
      657    17883    4               CODE05 = CODE05_SAVE;

  17883 13 001011   200023 470500                    LDP0    CODE05$,,AUTO
        13 001012   000100 100500                    MLR     fill='000'O
        13 001013   200040 000014                    ADSC9   CODE05_SAVE,,AUTO        cn=0,n=12
        13 001014   000000 000014                    ADSC9   0,,PR0                   cn=0,n=12

      658    17884    4               FM$FIT.CODES.NDW(05) = NDW_SAVE;

  17884 13 001015   200020 470500                    LDP0    FIT$,,AUTO
        13 001016   200043 236100                    LDQ     NDW_SAVE,,AUTO
        13 001017   000012 736000                    QLS     10
        13 001020   000005 676100                    ERQ     5,,PR0
        13 001021   000017 376000 14                 ANQ     15
        13 001022   000005 656100                    ERSQ    5,,PR0

      659    17885    4               END;

  17885 13 001023   001036 710000 13                 TRA     s:17889

      660    17886    4             WHENALTRETURN DO;

      661    17887    4               CALL FLS_ADD_GRANS( FPARAM_.PTR$, 4096, TSN, FSN ) ALTRET( JUSTALT );

  17887 13 001024   200007 236100                    LDQ     @FSN,,AUTO
        13 001025   200054 756100                    STQ     @NEW_TSN+1,,AUTO
        13 001026   200006 236100                    LDQ     @TSN,,AUTO
        13 001027   000015 235000 14                 LDA     13
        13 001030   200052 757100                    STAQ    @GRANS$+1,,AUTO
        13 001031   200005 236100                    LDQ     @FPARAM_,,AUTO
        13 001032   000001 036003                    ADLQ    1,DU
        13 001033   200051 756100                    STQ     @NEW_FSN+3,,AUTO
PL6.E3A0      #003=FLS$FILE_PACKER File=FLS$FILE_PACKER.:E05TSI                  TUE 07/29/97 16:22 Page:131  
        13 001034   001426 701000 13                 TSX1    FLS_ADD_GRANS
        13 001035   001114 702000 13                 TSX2    JUSTALT

      662    17888    4               END;

      663    17889    3            END;

  17889 13 001036   001051 710000 13                 TRA     s:17891

      664    17890    2          ELSE CALL FLS_ADD_GRANS( FPARAM_.PTR$, 4096, TSN, FSN ) ALTRET( JUSTALT );

  17890 13 001037   200007 236100                    LDQ     @FSN,,AUTO
        13 001040   200054 756100                    STQ     @NEW_TSN+1,,AUTO
        13 001041   200006 236100                    LDQ     @TSN,,AUTO
        13 001042   000015 235000 14                 LDA     13
        13 001043   200052 757100                    STAQ    @GRANS$+1,,AUTO
        13 001044   200005 236100                    LDQ     @FPARAM_,,AUTO
        13 001045   000001 036003                    ADLQ    1,DU
        13 001046   200051 756100                    STQ     @NEW_FSN+3,,AUTO
        13 001047   001426 701000 13                 TSX1    FLS_ADD_GRANS
        13 001050   001114 702000 13                 TSX2    JUSTALT

      665    17891    2         IF NBR_GRANS_TO_READ > 0

  17891 13 001051   200034 235100                    LDA     NBR_GRANS_TO_READ,,AUTO
        13 001052   001062 604400 13                 TMOZ    s:17893

      666    17892    2          THEN CALL FLS_BLOCK_FILE( TSN, FSN ) ALTRET( JUSTALT );

  17892 13 001053   200007 236100                    LDQ     @FSN,,AUTO
        13 001054   200046 756100                    STQ     @NEW_TSN+1,,AUTO
        13 001055   200006 236100                    LDQ     @TSN,,AUTO
        13 001056   200045 756100                    STQ     NDW_SAVE+2,,AUTO
        13 001057   001134 701000 13                 TSX1    FLS_BLOCK_FILE
        13 001060   001114 702000 13                 TSX2    JUSTALT
        13 001061   001070 710000 13                 TRA     s:17904

PL6.E3A0      #003=FLS$FILE_PACKER File=FLS$FILE_PACKER.:E05TSI                  TUE 07/29/97 16:22 Page:132  
      667    17893    2          ELSE BLK_TAG.FIN = '1'B;

  17893 13 001062   000000 470400 xsym               LDP0    BLK_TAG$
        13 001063   000200 236007                    LDQ     128,DL
        13 001064   000000 256100                    ORSQ    0,,PR0
        13 001065   001070 710000 13                 TRA     s:17904

      668    17894
      669    17895    2       CASE( ELSE );

      670    17896    2         CALL M$XXX;

  17896 13 001066   000003 713400                    CLIMB   3
        13 001067   000000 401760                    pmme    nvectors=0

      671    17897    2       END;

      672    17898
      673    17899        /***
      674    17900         *** Return data inconsistency error and volume crossing information
      675    17901         *** to caller.
      676    17902         ***/
      677    17903
      678    17904    1      IF DI_ERR

  17904 13 001070   200026 235100                    LDA     DI_ERR,,AUTO
        13 001071   001075 600000 13                 TZE     s:17906

      679    17905    1       THEN ERRBACK = DI_ERR;

  17905 13 001072   200026 236100                    LDQ     DI_ERR,,AUTO
        13 001073   200011 470500                    LDP0    @ERRBACK,,AUTO
        13 001074   000000 756100                    STQ     0,,PR0

      680    17906    1      CROSS = CROSSED;

  17906 13 001075   200010 470500                    LDP0    @CROSS,,AUTO
PL6.E3A0      #003=FLS$FILE_PACKER File=FLS$FILE_PACKER.:E05TSI                  TUE 07/29/97 16:22 Page:133  
        13 001076   040100 100400                    MLR     fill='040'O
        13 001077   000000 000001 xsym               ADSC9   CROSSED                  cn=0,n=1
        13 001100   000000 000001                    ADSC9   0,,PR0                   cn=0,n=1

      681    17907    1      ABORT = '0'B;

  17907 13 001101   200012 471500                    LDP1    @ABORT,,AUTO
        13 001102   100000 450100                    STZ     0,,PR1

      682    17908
      683    17909    1      RETURN;

  17909 13 001103   000000 702200 xent               TSX2  ! X66_ARET

  17907 13 001104                       REPALT       null
      684    17910
      685    17911    1   REPALT: ;
      686    17912    1      CALL FLI$RPT_ERR( ERR, DCB# );

  17912 13 001104   200004 236100                    LDQ     @DCB#,,AUTO
        13 001105   200057 756100                    STQ     @NEW_FSN+3,,AUTO
        13 001106   200030 630500                    EPPR0   ERR,,AUTO
        13 001107   200056 450500                    STP0    @NEW_FSN+2,,AUTO
        13 001110   200056 630500                    EPPR0   @NEW_FSN+2,,AUTO
        13 001111   000020 631400 xsym               EPPR1   B_VECTNIL+16
        13 001112   000000 701000 xent               TSX1    FLI$RPT_ERR
        13 001113   000000 011000                    NOP     0

  17907 13 001114                       JUSTALT      null
      687    17913
      688    17914    1   JUSTALT: ;
      689    17915    1      IF READ_ERR                /* Return read error and abort flag to caller   */

  17915 13 001114   200027 235100                    LDA     READ_ERR,,AUTO
        13 001115   001124 600000 13                 TZE     s:17921

      690    17916    2       THEN DO;
PL6.E3A0      #003=FLS$FILE_PACKER File=FLS$FILE_PACKER.:E05TSI                  TUE 07/29/97 16:22 Page:134  

      691    17917    2         ERRBACK = READ_ERR;               /* Don't abort on a read error.       */

  17917 13 001116   200027 236100                    LDQ     READ_ERR,,AUTO
        13 001117   200011 470500                    LDP0    @ERRBACK,,AUTO
        13 001120   000000 756100                    STQ     0,,PR0

      692    17918    2         ABORT = '0'B;

  17918 13 001121   200012 471500                    LDP1    @ABORT,,AUTO
        13 001122   100000 450100                    STZ     0,,PR1

      693    17919    2         END;

  17919 13 001123   001127 710000 13                 TRA     s:17922

      694    17920    1       ELSE
      695    17921    1         ABORT = '1'B;

  17921 13 001124   400000 236003                    LDQ     -131072,DU
        13 001125   200012 470500                    LDP0    @ABORT,,AUTO
        13 001126   000000 756100                    STQ     0,,PR0

      696    17922    1      CROSS = CROSSED;

  17922 13 001127   200010 470500                    LDP0    @CROSS,,AUTO
        13 001130   040100 100400                    MLR     fill='040'O
        13 001131   000000 000001 xsym               ADSC9   CROSSED                  cn=0,n=1
        13 001132   000000 000001                    ADSC9   0,,PR0                   cn=0,n=1

      697    17923    1      ALTRETURN;

  17923 13 001133   000000 702200 xent               TSX2  ! X66_AALT

      698    17924
      699    17925        %EJECT;
PL6.E3A0      #003=FLS$FILE_PACKER File=FLS$FILE_PACKER.:E05TSI                  TUE 07/29/97 16:22 Page:135  
      700    17926    1   FLS_BLOCK_FILE: PROC( NEW_TSN, NEW_FSN ) ALTRET;

  17926 13 001134   200044 741300       FLS_BLOCK_F* STX1  ! NDW_SAVE+1,,AUTO

      701    17927        /*F*  NAME: FLS_BLOCK_FILE
      702    17928              PURPOSE: Write current file to tape.
      703    17929        */
      704    17930
      705    17931        /***
      706    17932         *** Parameters
      707    17933         ***/
      708    17934
      709    17935    2   DCL NEW_TSN CHAR(6) CALIGNED; /* New current TSN returned on IOERRCONT,I-O err */
      710    17936    2   DCL NEW_FSN UBIN WORD ALIGNED; /* New current FSN returned on IOERRCONT,I-O err */
      711    17937        /******************************/
      712    17938
      713    17939        /***
      714    17940         *** Initialization.
      715    17941         ***/
      716    17942
      717    17943    2      GRANULE_INDEX = -1;

  17943 13 001135   000001 335007                    LCA     1,DL
        13 001136   000000 755000 xsym               STA     GRANULE_INDEX

      718    17944    2      CALL FLI$DISK_READ_FILE_INIT( NBR_GRANS_TO_READ );

  17944 13 001137   200034 630500                    EPPR0   NBR_GRANS_TO_READ,,AUTO
        13 001140   200056 450500                    STP0    @NEW_FSN+2,,AUTO
        13 001141   200056 630500                    EPPR0   @NEW_FSN+2,,AUTO
        13 001142   000017 631400 xsym               EPPR1   B_VECTNIL+15
        13 001143   000000 701000 xent               TSX1    FLI$DISK_READ_FILE_INIT
        13 001144   000000 011000                    NOP     0

      719    17945
      720    17946    3      DO WHILE( '1'B );

PL6.E3A0      #003=FLS$FILE_PACKER File=FLS$FILE_PACKER.:E05TSI                  TUE 07/29/97 16:22 Page:136  
      721    17947
      722    17948    3         CALL FLI$DISK_READ( DATA_, BIX, ARS, ERR, DCB# )

  17948 13 001145   200004 236100                    LDQ     @DCB#,,AUTO
        13 001146   200062 756100                    STQ     @NEW_FSN+6,,AUTO
        13 001147   200030 630500                    EPPR0   ERR,,AUTO
        13 001150   200061 450500                    STP0    @NEW_FSN+5,,AUTO
        13 001151   200015 631500                    EPPR1   ARS,,AUTO
        13 001152   200060 451500                    STP1    @NEW_FSN+4,,AUTO
        13 001153   200016 633500                    EPPR3   BIX,,AUTO
        13 001154   200057 453500                    STP3    @NEW_FSN+3,,AUTO
        13 001155   200024 634500                    EPPR4   DATA_,,AUTO
        13 001156   200056 454500                    STP4    @NEW_FSN+2,,AUTO
        13 001157   200056 630500                    EPPR0   @NEW_FSN+2,,AUTO
        13 001160   000023 631400 xsym               EPPR1   B_VECTNIL+19
        13 001161   000000 701000 xent               TSX1    FLI$DISK_READ
        13 001162   001164 702000 13                 TSX2    s:17950
        13 001163   001204 710000 13                 TRA     s:17960

      723    17949    4          WHENALTRETURN DO;

      724    17950    4            IF ERR.CODE = %E$EOF

  17950 13 001164   200030 236100                    LDQ     ERR,,AUTO
        13 001165   377770 376007                    ANQ     131064,DL
        13 001166   000060 116007                    CMPQ    48,DL
        13 001167   001175 601000 13                 TNZ     s:17955

      725    17951    5             THEN DO;                      /* Normal file termination            */

      726    17952    5               BLK_TAG.FIN = '1'B;

  17952 13 001170   000000 470400 xsym               LDP0    BLK_TAG$
        13 001171   000200 236007                    LDQ     128,DL
        13 001172   000000 256100                    ORSQ    0,,PR0

      727    17953    5               RETURN;
PL6.E3A0      #003=FLS$FILE_PACKER File=FLS$FILE_PACKER.:E05TSI                  TUE 07/29/97 16:22 Page:137  

  17953 13 001173   200044 221300                    LDX1  ! NDW_SAVE+1,,AUTO
        13 001174   000001 702211                    TSX2  ! 1,X1

      728    17954    5               END;
      729    17955    4            READ_ERR = ERR;                /* Return read error to caller        */

  17955 13 001175   200030 236100                    LDQ     ERR,,AUTO
        13 001176   200027 756100                    STQ     READ_ERR,,AUTO

      730    17956    4            BLK_TAG.FIN = '1'B;

  17956 13 001177   000000 470400 xsym               LDP0    BLK_TAG$
        13 001200   000200 236007                    LDQ     128,DL
        13 001201   000000 256100                    ORSQ    0,,PR0

      731    17957    4            ALTRETURN;

  17957 13 001202   200044 221300                    LDX1  ! NDW_SAVE+1,,AUTO
        13 001203   000000 702211                    TSX2  ! 0,X1

      732    17958    4            END;
      733    17959
      734    17960    3         CODE05$ = PINCRW ( FPARAM_.PTR$, SIZEW ( FM$GRAN ) );

  17960 13 001204   200005 470500                    LDP0    @FPARAM_,,AUTO
        13 001205   000001 236100                    LDQ     1,,PR0
        13 001206   000005 036003                    ADLQ    5,DU
        13 001207   200023 756100                    STQ     CODE05$,,AUTO

      735    17961    3         CALL XSF$LOCCODP ( CODE05$, 05 ) ALTRET ( JUSTALT );

  17961 13 001210   000002 236000 14                 LDQ     2
        13 001211   200057 756100                    STQ     @NEW_FSN+3,,AUTO
        13 001212   200023 631500                    EPPR1   CODE05$,,AUTO
        13 001213   200056 451500                    STP1    @NEW_FSN+2,,AUTO
        13 001214   200056 630500                    EPPR0   @NEW_FSN+2,,AUTO
PL6.E3A0      #003=FLS$FILE_PACKER File=FLS$FILE_PACKER.:E05TSI                  TUE 07/29/97 16:22 Page:138  
        13 001215   000020 631400 xsym               EPPR1   B_VECTNIL+16
        13 001216   000000 701000 xent               TSX1    XSF$LOCCODP
        13 001217   001424 702000 13                 TSX2    JUSTALT

      736    17962
      737    17963    3         IF F$DCB.ORG# = %RANDOM# OR F$DCB.ORG# = %RELATIVE# OR

  17963 13 001220   000000 470400 xsym               LDP0    DCB$
        13 001221   000032 236100                    LDQ     26,,PR0
        13 001222   777000 376003                    ANQ     -512,DU
        13 001223   003000 116003                    CMPQ    1536,DU
        13 001224   001235 600000 13                 TZE     s:17966
        13 001225   005000 116003                    CMPQ    2560,DU
        13 001226   001235 600000 13                 TZE     s:17966
        13 001227   007000 116003                    CMPQ    3584,DU
        13 001230   001361 601000 13                 TNZ     s:17993
        13 001231   000001 236000 xsym               LDQ     DISK_OPTION+1
        13 001232   700000 376003                    ANQ     -32768,DU
        13 001233   100000 116003                    CMPQ    32768,DU
        13 001234   001361 601000 13                 TNZ     s:17993

      738    17964    3           ( F$DCB.ORG# = %IDS# AND DISK_OPTION.IDSS = %FAST )
      739    17965    4          THEN DO;                         /* Special handling for RANDOM files  */

      740    17966    4            GRAN$ = DATA_.PTR$;

  17966 13 001235   200025 236100                    LDQ     DATA_+1,,AUTO
        13 001236   200032 756100                    STQ     GRAN$,,AUTO

      741    17967    4            GRAN_START$ = ADDR(NIL);

  17967 13 001237   000001 236000 xsym               LDQ     B_VECTNIL+1
        13 001240   200033 756100                    STQ     GRAN_START$,,AUTO

      742    17968    5            DO WHILE( ARS > 0 );

  17968 13 001241   200015 235100                    LDA     ARS,,AUTO
PL6.E3A0      #003=FLS$FILE_PACKER File=FLS$FILE_PACKER.:E05TSI                  TUE 07/29/97 16:22 Page:139  
        13 001242   001334 604400 13                 TMOZ    s:17989

      743    17969    5               GRANULE_INDEX = GRANULE_INDEX + 1;

  17969 13 001243   000000 054000 xsym               AOS     GRANULE_INDEX

      744    17970    5               IF GRAN$->GRAN_KEY ~= -1 AND

  17970 13 001244   200032 470500                    LDP0    GRAN$,,AUTO
        13 001245   000000 235100                    LDA     0,,PR0
        13 001246   000027 115000 xsym               CMPA    B_VECTNIL+23
        13 001247   001277 600000 13                 TZE     s:17980
        13 001250   000000 471400 xsym               LDP1    DCB$
        13 001251   100032 236100                    LDQ     26,,PR1
        13 001252   777000 376003                    ANQ     -512,DU
        13 001253   007000 116003                    CMPQ    3584,DU
        13 001254   001261 601000 13                 TNZ     s:17974
        13 001255   200023 473500                    LDP3    CODE05$,,AUTO
        13 001256   000001 236100                    LDQ     1,,PR0
        13 001257   300000 116100                    CMPQ    0,,PR3
        13 001260   001277 602000 13                 TNC     s:17980

      745    17971    5                 NOT ( F$DCB.ORG# = %IDS# AND
      746    17972    5                 PINCRW ( GRAN$, 1 ) -> MOD_TIME < CODE05.BACKUP.TIME )
      747    17973    6                THEN DO;                   /* Written granule                    */

      748    17974    6                  IF F$DCB.ORG# = %RANDOM# OR F$DCB.ORG# = %RELATIVE#

  17974 13 001261   100032 236100                    LDQ     26,,PR1
        13 001262   777000 376003                    ANQ     -512,DU
        13 001263   003000 116003                    CMPQ    1536,DU
        13 001264   001267 600000 13                 TZE     s:17975
        13 001265   005000 116003                    CMPQ    2560,DU
        13 001266   001271 601000 13                 TNZ     s:17976

      749    17975    6                   THEN GRAN$->GRAN_KEY = GRANULE_INDEX;

PL6.E3A0      #003=FLS$FILE_PACKER File=FLS$FILE_PACKER.:E05TSI                  TUE 07/29/97 16:22 Page:140  
  17975 13 001267   000000 235000 xsym               LDA     GRANULE_INDEX
        13 001270   000000 755100                    STA     0,,PR0

      750    17976    6                  IF GRAN_START$ = ADDR(NIL)

  17976 13 001271   200033 236100                    LDQ     GRAN_START$,,AUTO
        13 001272   000001 116000 xsym               CMPQ    B_VECTNIL+1
        13 001273   001325 601000 13                 TNZ     s:17986

      751    17977    6                   THEN GRAN_START$ = GRAN$;
             17977                            /* Start accumulating contiguous granules */

  17977 13 001274   200032 236100                    LDQ     GRAN$,,AUTO
        13 001275   200033 756100                    STQ     GRAN_START$,,AUTO

      752    17978    6                  END;

  17978 13 001276   001325 710000 13                 TRA     s:17986

      753    17979    6                ELSE DO;                   /* Unwritten granule                  */

      754    17980    6                  IF GRAN_START$ ~= ADDR(NIL)

  17980 13 001277   200033 236100                    LDQ     GRAN_START$,,AUTO
        13 001300   000001 116000 xsym               CMPQ    B_VECTNIL+1
        13 001301   001325 600000 13                 TZE     s:17986

      755    17981    7                   THEN DO;

      756    17982    7                     CALL FLS_ADD_GRANS( GRAN_START$, POFFC( GRAN$, GRAN_START$ ),
             17982                              NEW_TSN, NEW_FSN ) ALTRET( JUSTALT );

  17982 13 001302   200033 236100                    LDQ     GRAN_START$,,AUTO
        13 001303   000020 772000                    QRL     16
        13 001304   200056 756100                    STQ     @NEW_FSN+2,,AUTO
        13 001305   200032 236100                    LDQ     GRAN$,,AUTO
        13 001306   000020 772000                    QRL     16
PL6.E3A0      #003=FLS$FILE_PACKER File=FLS$FILE_PACKER.:E05TSI                  TUE 07/29/97 16:22 Page:141  
        13 001307   200056 136100                    SBLQ    @NEW_FSN+2,,AUTO
        13 001310   200071 756100                    STQ     @NEW_FSN+13,,AUTO
        13 001311   200046 236100                    LDQ     @NEW_FSN,,AUTO
        13 001312   200054 756100                    STQ     @NEW_TSN+1,,AUTO
        13 001313   200045 236100                    LDQ     @NEW_TSN,,AUTO
        13 001314   200053 756100                    STQ     @ARS+1,,AUTO
        13 001315   200071 631500                    EPPR1   @NEW_FSN+13,,AUTO
        13 001316   200052 451500                    STP1    @GRANS$+1,,AUTO
        13 001317   200033 633500                    EPPR3   GRAN_START$,,AUTO
        13 001320   200051 453500                    STP3    @NEW_FSN+3,,AUTO
        13 001321   001426 701000 13                 TSX1    FLS_ADD_GRANS
        13 001322   001424 702000 13                 TSX2    JUSTALT

      757    17983    7                     GRAN_START$ = ADDR(NIL);

  17983 13 001323   000001 236000 xsym               LDQ     B_VECTNIL+1
        13 001324   200033 756100                    STQ     GRAN_START$,,AUTO

      758    17984    7                     END;

      759    17985    6                  END;

      760    17986    5               ARS = ARS - 4096;

  17986 13 001325   010000 336007                    LCQ     4096,DL
        13 001326   200015 056100                    ASQ     ARS,,AUTO

      761    17987    5               GRAN$ = PINCRW( GRAN$, 1024 );

  17987 13 001327   200032 236100                    LDQ     GRAN$,,AUTO
        13 001330   002000 036003                    ADLQ    1024,DU
        13 001331   200032 756100                    STQ     GRAN$,,AUTO

      762    17988    5               END;

  17988 13 001332   200015 235100                    LDA     ARS,,AUTO
        13 001333   001243 605400 13                 TPNZ    s:17969
PL6.E3A0      #003=FLS$FILE_PACKER File=FLS$FILE_PACKER.:E05TSI                  TUE 07/29/97 16:22 Page:142  

      763    17989    4            IF GRAN_START$ ~= ADDR(NIL)

  17989 13 001334   200033 236100                    LDQ     GRAN_START$,,AUTO
        13 001335   000001 116000 xsym               CMPQ    B_VECTNIL+1
        13 001336   001415 600000 13                 TZE     s:18003

      764    17990    4            THEN CALL FLS_ADD_GRANS( GRAN_START$, POFFC( GRAN$, GRAN_START$ ), NEW_TSN
             17990                      , NEW_FSN ) ALTRET( JUSTALT );

  17990 13 001337   200033 236100                    LDQ     GRAN_START$,,AUTO
        13 001340   000020 772000                    QRL     16
        13 001341   200056 756100                    STQ     @NEW_FSN+2,,AUTO
        13 001342   200032 236100                    LDQ     GRAN$,,AUTO
        13 001343   000020 772000                    QRL     16
        13 001344   200056 136100                    SBLQ    @NEW_FSN+2,,AUTO
        13 001345   200072 756100                    STQ     @NEW_FSN+14,,AUTO
        13 001346   200046 236100                    LDQ     @NEW_FSN,,AUTO
        13 001347   200054 756100                    STQ     @NEW_TSN+1,,AUTO
        13 001350   200045 236100                    LDQ     @NEW_TSN,,AUTO
        13 001351   200053 756100                    STQ     @ARS+1,,AUTO
        13 001352   200072 630500                    EPPR0   @NEW_FSN+14,,AUTO
        13 001353   200052 450500                    STP0    @GRANS$+1,,AUTO
        13 001354   200033 631500                    EPPR1   GRAN_START$,,AUTO
        13 001355   200051 451500                    STP1    @NEW_FSN+3,,AUTO
        13 001356   001426 701000 13                 TSX1    FLS_ADD_GRANS
        13 001357   001424 702000 13                 TSX2    JUSTALT

      765    17991    4            END;

  17991 13 001360   001415 710000 13                 TRA     s:18003

      766    17992    4          ELSE DO;                         /* All other files are easy           */

      767    17993    4            IF ERR.CODE = %E$DI

  17993 13 001361   200030 236100                    LDQ     ERR,,AUTO
PL6.E3A0      #003=FLS$FILE_PACKER File=FLS$FILE_PACKER.:E05TSI                  TUE 07/29/97 16:22 Page:143  
        13 001362   377770 376007                    ANQ     131064,DL
        13 001363   000110 116007                    CMPQ    72,DL
        13 001364   001377 601000 13                 TNZ     s:17999

      768    17994    5             THEN DO;            /* Save data inconsistency error if it happens  */

      769    17995    5               IF F$DCB.ORG# = %IDS# OR F$DCB.ORG# = %CG#

  17995 13 001365   000032 236100                    LDQ     26,,PR0
        13 001366   777000 376003                    ANQ     -512,DU
        13 001367   007000 116003                    CMPQ    3584,DU
        13 001370   001373 600000 13                 TZE     s:17996
        13 001371   013000 116003                    CMPQ    5632,DU
        13 001372   001375 601000 13                 TNZ     s:17997

      770    17996    5                THEN ERR = '0'B;      /* Don't report E$DI for RELATIVE files    */

  17996 13 001373   200030 450100                    STZ     ERR,,AUTO
        13 001374   001377 710000 13                 TRA     s:17999

      771    17997    5                ELSE DI_ERR = ERR;

  17997 13 001375   200030 236100                    LDQ     ERR,,AUTO
        13 001376   200026 756100                    STQ     DI_ERR,,AUTO

      772    17998    5               END;

      773    17999    4            CALL FLS_ADD_GRANS( DATA_.PTR$, ARS, NEW_TSN, NEW_FSN ) ALTRET( JUSTALT );

  17999 13 001377   200046 236100                    LDQ     @NEW_FSN,,AUTO
        13 001400   200054 756100                    STQ     @NEW_TSN+1,,AUTO
        13 001401   200045 236100                    LDQ     @NEW_TSN,,AUTO
        13 001402   200053 756100                    STQ     @ARS+1,,AUTO
        13 001403   200015 631500                    EPPR1   ARS,,AUTO
        13 001404   200052 451500                    STP1    @GRANS$+1,,AUTO
        13 001405   200025 633500                    EPPR3   DATA_+1,,AUTO
        13 001406   200051 453500                    STP3    @NEW_FSN+3,,AUTO
PL6.E3A0      #003=FLS$FILE_PACKER File=FLS$FILE_PACKER.:E05TSI                  TUE 07/29/97 16:22 Page:144  
        13 001407   001426 701000 13                 TSX1    FLS_ADD_GRANS
        13 001410   001424 702000 13                 TSX2    JUSTALT

      774    18000    4            GRANULE_INDEX = GRANULE_INDEX + ARS / 4096;

  18000 13 001411   200015 236100                    LDQ     ARS,,AUTO
        13 001412   010000 506007                    DIV     4096,DL
        13 001413   000000 036000 xsym               ADLQ    GRANULE_INDEX
        13 001414   000000 756000 xsym               STQ     GRANULE_INDEX

      775    18001    4            END;

      776    18002
      777    18003    3         CALL FLI$RETURN_BUF( BIX );

  18003 13 001415   200016 630500                    EPPR0   BIX,,AUTO
        13 001416   200056 450500                    STP0    @NEW_FSN+2,,AUTO
        13 001417   200056 630500                    EPPR0   @NEW_FSN+2,,AUTO
        13 001420   000017 631400 xsym               EPPR1   B_VECTNIL+15
        13 001421   000000 701000 xent               TSX1    FLI$RETURN_BUF
        13 001422   000000 011000                    NOP     0

      778    18004    3         END;

  18004 13 001423   001145 710000 13                 TRA     s:17948

  18003 13 001424                       JUSTALT      null
      779    18005
      780    18006    2   JUSTALT: ;
      781    18007    2      ALTRETURN;

  18007 13 001424   200044 221300                    LDX1  ! NDW_SAVE+1,,AUTO
        13 001425   000000 702211                    TSX2  ! 0,X1

      782    18008
      783    18009    2   END FLS_BLOCK_FILE;
      784    18010
PL6.E3A0      #003=FLS$FILE_PACKER File=FLS$FILE_PACKER.:E05TSI                  TUE 07/29/97 16:22 Page:145  
      785    18011        %EJECT;
PL6.E3A0      #003=FLS$FILE_PACKER File=FLS$FILE_PACKER.:E05TSI                  TUE 07/29/97 16:22 Page:146  
      786    18012    1   FLS_ADD_GRANS: PROC( GRANS$, ARS, NEW_TSN, NEW_FSN ) ALTRET;

  18012 13 001426   200050 741300       FLS_ADD_GRA* STX1  ! @NEW_FSN+2,,AUTO

      787    18013        /*F*  NAME: FLS_ADD_GRANS
      788    18014              PURPOSE: Add granules to current block, flushing when another
      789    18015                 block is needed.
      790    18016        */
      791    18017
      792    18018        /***
      793    18019         *** PARAMETERS
      794    18020         ***/
      795    18021
      796    18022    2   DCL GRANS$ PTR;
      797    18023    2   DCL ARS SBIN;
      798    18024    2   DCL NEW_TSN CHAR(6) CALIGNED; /* New current TSN returned on IOERRCONT,I-O err */
      799    18025    2   DCL NEW_FSN UBIN WORD ALIGNED; /* New current FSN returned on IOERRCONT,I-O err */
      800    18026
      801    18027        /******************************/
      802    18028
      803    18029        /***
      804    18030         *** Localize parameters.
      805    18031         ***/
      806    18032
      807    18033    2      DISK_GRAN$ = GRANS$;

  18033 13 001427   200051 470500                    LDP0    @GRANS$,,AUTO
        13 001430   000000 236100                    LDQ     0,,PR0
        13 001431   000000 756000 xsym               STQ     DISK_GRAN$

      808    18034    2      NBR_BYTES = ARS;

  18034 13 001432   200052 471500                    LDP1    @ARS,,AUTO
        13 001433   100000 235100                    LDA     0,,PR1
        13 001434   000000 755000 xsym               STA     NBR_BYTES

      809    18035
PL6.E3A0      #003=FLS$FILE_PACKER File=FLS$FILE_PACKER.:E05TSI                  TUE 07/29/97 16:22 Page:147  
      810    18036        /***
      811    18037         *** Pack granules into tape blocks flushing tape blocks as they
      812    18038         *** become full.
      813    18039         ***/
      814    18040
      815    18041    3      DO WHILE( '1'B );

      816    18042
      817    18043    3         IF NBR_BYTES > NBR_BLOCK_BYTES_REMAINING

  18043 13 001435   000000 236000 xsym               LDQ     NBR_BYTES
        13 001436   000000 116000 xsym               CMPQ    NBR_BLOCK_BYTES_REMAINING
        13 001437   001443 604400 13                 TMOZ    s:18045

      818    18044    3          THEN NBR_BYTES_TO_MOVE = NBR_BLOCK_BYTES_REMAINING;

  18044 13 001440   000000 235000 xsym               LDA     NBR_BLOCK_BYTES_REMAINING
        13 001441   000000 755000 xsym               STA     NBR_BYTES_TO_MOVE
        13 001442   001444 710000 13                 TRA     s:18047

      819    18045    3          ELSE NBR_BYTES_TO_MOVE = NBR_BYTES;

  18045 13 001443   000000 756000 xsym               STQ     NBR_BYTES_TO_MOVE

      820    18046
      821    18047    3         BLOCK_GRAN = DISK_GRAN;

  18047 13 001444   000000 470400 xsym               LDP0    DISK_GRAN$
        13 001445   000000 720000 xsym               LXL0    NBR_BYTES_TO_MOVE
        13 001446   000000 471400 xsym               LDP1    BLOCK_GRAN$
        13 001447   040140 100540                    MLR     fill='040'O
        13 001450   000000 000010                    ADSC9   0,,PR0                   cn=0,n=*X0
        13 001451   100000 000010                    ADSC9   0,,PR1                   cn=0,n=*X0

      822    18048
      823    18049    3         NBR_BYTES = NBR_BYTES - NBR_BYTES_TO_MOVE;

PL6.E3A0      #003=FLS$FILE_PACKER File=FLS$FILE_PACKER.:E05TSI                  TUE 07/29/97 16:22 Page:148  
  18049 13 001452   000000 236000 xsym               LDQ     NBR_BYTES
        13 001453   000000 136000 xsym               SBLQ    NBR_BYTES_TO_MOVE
        13 001454   000000 756000 xsym               STQ     NBR_BYTES

      824    18050    3         NBR_BLOCK_BYTES_REMAINING = NBR_BLOCK_BYTES_REMAINING - NBR_BYTES_TO_MOVE;

  18050 13 001455   000000 236000 xsym               LDQ     NBR_BLOCK_BYTES_REMAINING
        13 001456   000000 136000 xsym               SBLQ    NBR_BYTES_TO_MOVE
        13 001457   000000 756000 xsym               STQ     NBR_BLOCK_BYTES_REMAINING

      825    18051
      826    18052    3         IF BLK_TAG.SIZE = 0

  18052 13 001460   000000 470400 xsym               LDP0    BLK_TAG$
        13 001461   000001 220100                    LDX0    1,,PR0
        13 001462   001473 601000 13                 TNZ     s:18054

      827    18053    3          THEN BLK_TAG.BEGX = POFFC( BLOCK_GRAN$, GRAN_BASE$ );

  18053 13 001463   000000 236000 xsym               LDQ     GRAN_BASE$
        13 001464   000020 772000                    QRL     16
        13 001465   200056 756100                    STQ     @NEW_FSN+2,,AUTO
        13 001466   000000 236000 xsym               LDQ     BLOCK_GRAN$
        13 001467   000020 772000                    QRL     16
        13 001470   200056 136100                    SBLQ    @NEW_FSN+2,,AUTO
        13 001471   000000 620006                    EAX0    0,QL
        13 001472   000000 740100                    STX0    0,,PR0

      828    18054    3         BLK_TAG.SIZE = BLK_TAG.SIZE + NBR_BYTES_TO_MOVE;

  18054 13 001473   000000 470400 xsym               LDP0    BLK_TAG$
        13 001474   000001 236100                    LDQ     1,,PR0
        13 001475   000022 772000                    QRL     18
        13 001476   000000 036000 xsym               ADLQ    NBR_BYTES_TO_MOVE
        13 001477   000000 620006                    EAX0    0,QL
        13 001500   000001 740100                    STX0    1,,PR0

PL6.E3A0      #003=FLS$FILE_PACKER File=FLS$FILE_PACKER.:E05TSI                  TUE 07/29/97 16:22 Page:149  
      829    18055
      830    18056    3         BLOCK_GRAN$ = PINCRC( BLOCK_GRAN$, NBR_BYTES_TO_MOVE );

  18056 13 001501   000000 236000 xsym               LDQ     NBR_BYTES_TO_MOVE
        13 001502   000020 736000                    QLS     16
        13 001503   000000 036000 xsym               ADLQ    BLOCK_GRAN$
        13 001504   000000 756000 xsym               STQ     BLOCK_GRAN$

      831    18057    3         DISK_GRAN$ = PINCRC( DISK_GRAN$, NBR_BYTES_TO_MOVE );

  18057 13 001505   000000 236000 xsym               LDQ     NBR_BYTES_TO_MOVE
        13 001506   000020 736000                    QLS     16
        13 001507   000000 036000 xsym               ADLQ    DISK_GRAN$
        13 001510   000000 756000 xsym               STQ     DISK_GRAN$

      832    18058
      833    18059    3         IF NBR_BYTES > 0

  18059 13 001511   000000 235000 xsym               LDA     NBR_BYTES
        13 001512   001531 604400 13                 TMOZ    s:18064

      834    18060    3          THEN CALL FLS$FLUSH_BLOCK( '1'B ,COMMAND, NEW_TSN, NEW_FSN )

  18060 13 001513   200054 236100                    LDQ     @NEW_FSN,,AUTO
        13 001514   200053 235100                    LDA     @NEW_TSN,,AUTO
        13 001515   200060 757100                    STAQ    @NEW_FSN+4,,AUTO
        13 001516   200014 236100                    LDQ     @COMMAND,,AUTO
        13 001517   000011 235000 14                 LDA     9
        13 001520   200056 757100                    STAQ    @NEW_FSN+2,,AUTO
        13 001521   200056 630500                    EPPR0   @NEW_FSN+2,,AUTO
        13 001522   000022 631400 xsym               EPPR1   B_VECTNIL+18
        13 001523   000000 701000 xent               TSX1    FLS$FLUSH_BLOCK
        13 001524   001526 702000 13                 TSX2    s:18062
        13 001525   001530 710000 13                 TRA     s:18062+2

      835    18061    4             WHENALTRETURN DO;

PL6.E3A0      #003=FLS$FILE_PACKER File=FLS$FILE_PACKER.:E05TSI                  TUE 07/29/97 16:22 Page:150  
      836    18062    4               ALTRETURN;

  18062 13 001526   200050 221300                    LDX1  ! @NEW_FSN+2,,AUTO
        13 001527   000000 702211                    TSX2  ! 0,X1
        13 001530   001435 710000 13                 TRA     s:18043

      837    18063    4               END;
      838    18064    3          ELSE RETURN;                     /* Done packing these granules        */

  18064 13 001531   200050 221300                    LDX1  ! @NEW_FSN+2,,AUTO
        13 001532   000001 702211                    TSX2  ! 1,X1
      839    18065    3         END;
      840    18066
      841    18067    2   END FLS_ADD_GRANS;
      842    18068
      843    18069    1   END FLS$FILE_PACKER;
      844    18070        %EOD;

PL6.E3A0      #003=FLS$FILE_PACKER File=FLS$FILE_PACKER.:E05TSI                  TUE 07/29/97 16:22 Page:151  
--  Include file information  --

   FM$GRAN.:E05TOU  is referenced.
   FM$FIT.:E05TOU  is referenced.
   FLS_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   FLN_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   B_MICROPS_C.:E05TOU  is referenced.
   FLB_SUBS_C.:E05TOU  is referenced.
   FLI_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   FL_PERR_C.:E05TOU  is referenced.
   FLE_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   CP_6_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B_ERRORS_C.:E05TOU  is referenced.
      No diagnostics issued in procedure FLS$FILE_PACKER.
PL6.E3A0      #003=FLS$FILE_PACKER File=FLS$FILE_PACKER.:E05TSI                  TUE 07/29/97 16:22 Page:152  

 **** Variables and constants ****

  ****  Section 002  Data  FLS$FILE_PACKER

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

   100-0-0/d STRC(1080)  r     1 CLOSE_BLOCK_FILE         142-0-0/d STRC(360)   r     1 DEL_NODATA_REC
     6-0-0/d STRC(2088)  r     1 OPEN_BLOCK_FILE

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

    12-0-0/w PTR         r     1 @ABORT                     3-0-0/w PTR         r     1 @ARG_DCB$
    52-0-0/w PTR         r     1 @ARS                      14-0-0/w PTR         r     1 @COMMAND
    10-0-0/w PTR         r     1 @CROSS                     4-0-0/w PTR         r     1 @DCB#
    11-0-0/w PTR         r     1 @ERRBACK                  13-0-0/w PTR         r     1 @FIT_ONLY_SAVED
     5-0-0/w PTR         r     1 @FPARAM_                   7-0-0/w PTR         r     1 @FSN
    51-0-0/w PTR         r     1 @GRANS$                   46-0-0/w PTR         r     1 @NEW_FSN
    54-0-0/w PTR         r     1 @NEW_FSN                  45-0-0/w PTR         r     1 @NEW_TSN
    53-0-0/w PTR         r     1 @NEW_TSN                   6-0-0/w PTR         r     1 @TSN
    *0-0-0/w BIT         r     1 ABORT                     *0-0-0/w PTR         r     1 ARG_DCB$
    15-0-0/w SBIN        r     1 ARS                       *0-0-0/w SBIN        r     1 ARS
    16-0-0/w SBIN        r     1 BIX                       17-0-0/b BIT         r     1 CLEANING_UP
    21-0-0/w PTR         r     1 CODE03$                   22-0-0/w PTR         r     1 CODE04$
    23-0-0/w PTR         r     1 CODE05$                   40-0-0/w STRC(108)   r     1 CODE05_SAVE
    *0-0-0/w SBIN        r     1 COMMAND                   *0-0-0/c CHAR        r     1 CROSS
    24-0-0/d STRC(72)    r     1 DATA_                     *0-0-0/w SBIN        r     1 DCB#
    26-0-0/b BIT         r     1 DI_ERR                    30-0-0/w STRC        r     1 ERR
    *0-0-0/w STRC        r     1 ERRBACK                   20-0-0/w PTR         r     1 FIT$
    *0-0-0/w BIT         r     1 FIT_ONLY_SAVED            31-0-0/b BIT         r     1 FLUSH
    *0-0-0/d STRC(72)    r     1 FPARAM_                   *0-0-0/w UBIN        r     1 FSN
    32-0-0/w PTR         r     1 GRAN$                     *0-0-0/w PTR         r     1 GRANS$
    33-0-0/w PTR         r     1 GRAN_START$               34-0-0/w SBIN        r     1 NBR_GRANS_TO_READ
    35-0-0/w SBIN        r     1 NBR_NEEDED_BYTES          43-0-0/w UBIN        r     1 NDW_SAVE
PL6.E3A0      #003=FLS$FILE_PACKER File=FLS$FILE_PACKER.:E05TSI                  TUE 07/29/97 16:22 Page:153  
    36-0-0/b BIT         r     1 NEW_FILE                  *0-0-0/w UBIN        r     1 NEW_FSN
    *0-0-0/w UBIN        r     1 NEW_FSN                   *0-0-0/c CHAR(6)     r     1 NEW_TSN
    *0-0-0/c CHAR(6)     r     1 NEW_TSN                   27-0-0/b BIT         r     1 READ_ERR
    37-0-0/b BIT         r     1 START_NEW_FILE            *0-0-0/c CHAR(6)     r     1 TSN

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c ASTR(9)     r     1 ARCHIVE_NAME               0-0-0/d VECT        r     1 A_FIT_
     0-0-0/w PTR         r     1 B$TCB$                     0-0-0/c ASTR(9)     r     1 BACKUP_NAME
     0-0-0/w PTR         r     1 BLK_TAG$                   0-0-0/w PTR         r     1 BLK_TAG0$
     0-0-0/w SBIN        r     1 BLK_TAG_NBR                0-0-0/w PTR         r     1 BLOCK_GRAN$
     0-0-0/w SBIN        r     1 BREAK_DCB#                 0-0-0/c CHAR        r     1 CROSSED
     0-0-0/w PTR         r     1 DCB$                       0-0-0/d STRC(90)    r     1 DISK_DEST_SN
     0-0-0/w PTR         r     1 DISK_FILE_SPEC$            0-0-0/w PTR         r     1 DISK_GRAN$
     0-0-0/w STRC(145)   r     1 DISK_OPTION                0-0-0/d STRC(90)    r     1 DISK_SN
     0-0-0/w PTR         r     1 DPLIST$                    0-0-0/w PTR         r     1 DPRESLIST$
     0-0-0/c ASTR(9)     r     1 DUAL_FILE                  0-0-0/c ASTR(9)     r     1 EFT_CVOL_FILE
     0-0-0/c ASTR(9)     r     1 EFT_RESTRICT_FILE          0-0-0/w STRC        r     1 E_NO_CODE3
     0-0-0/c STRC(72)    r     1 FROM_DISK_ACCT             0-0-0/c STRC(288)   r     1 FROM_DISK_NAME
     0-0-0/d STRC(90)    r     1 FROM_DISK_SN               0-0-0/d STRC(432)   r     1 GET_NOW_UTS
     0-0-0/w SBIN        r     1 GRANULE_INDEX              0-0-0/w PTR         r     1 GRAN_BASE$
     0-0-0/d STRC(90)    r     1 LAST_DSN_USED              0-0-0/w SBIN        r     1 LAST_TYPE
     0-0-0/w PTR         r     1 LOW_BLK_TAG$               0-0-0/w PTR         r     1 MIN_BLK_TAG$
     0-0-0/w SBIN        r     1 NBR_BLOCK_BYTES
     0-0-0/w SBIN        r     1 NBR_BLOCK_BYTES_REMAINING
     0-0-0/w SBIN        r     1 NBR_BYTES                  0-0-0/w SBIN        r     1 NBR_BYTES_TO_MOVE
     0-0-0/w SBIN        r     1 NBR_FILE_BLOCKS            0-0-0/c ASTR(9)     r     1 NODATA_FILE_NAME
     0-0-0/c STRC(369)   r     1 NODATA_KEY                 0-0-0/w UBIN        r     1 NOW_UTS
     0-0-0/b BIT         r     1 OVER_FIL                   0-0-0/c ASTR(9)     r     1 PRIME_FILE
     0-0-0/c ASTR(9)     r     1 REBUILD_DIR_KEY            0-0-0/c ASTR(9)     r     1 REBUILD_KEY
     0-0-0/c ASTR(9)     r     1 REBUILD_NAME               0-0-0/c ASTR(9)     r     1 RET_CMDS_NAME
     0-0-0/w PTR         r     1 SNVECLIST$                 0-0-0/w PTR         r     1 TAPE_DCBLIST$
     0-0-0/w SBIN        r     1 TAPE_FSN                   0-0-0/c CHAR(6)     r     1 TAPE_SN
     0-0-0/c ASTR(9)     r     1 TSN_USED_NAME              0-0-0/w SBIN        r     1 TYPE
PL6.E3A0      #003=FLS$FILE_PACKER File=FLS$FILE_PACKER.:E05TSI                  TUE 07/29/97 16:22 Page:154  

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(396)   r     1 BLK_TAG                    0-0-0/w STRC(396)   r     1 BLK_TAG0
     0-0-0/w ACHR        r     1 BLOCK_GRAN                 0-0-0/w STRC(324)   r     1 CODE03
     0-0-0/w STRC(396)   r     1 CODE04                     0-0-0/w STRC(108)   r     1 CODE05
     0-0-0/w ACHR        r     1 DISK_GRAN                  0-0-0/d ASTR(3528)  r     1 F$DCB
     0-0-0/w STRC(1116)  r     1 FM$FIT                     0-0-0/w STRC(180)   r     1 FM$GRAN
     0-0-0/w SBIN        r     1 GRAN_KEY                   0-0-0N  NULL        r     1 M$DISK_IN
     0-0-0N  NULL        r     1 M$NODATA_LIST              0-0-0/w UBIN        r     1 MOD_TIME
     0-0-0/w STRC(72)    r     1 TAPE_DCBLIST(0:0)


   Procedure FLS$FILE_PACKER requires 859 words for executable code.
   Procedure FLS$FILE_PACKER requires 60 words of local(AUTO) storage.
PL6.E3A0      #003=FLS$FILE_PACKER File=FLS$FILE_PACKER.:E05TSI                  TUE 07/29/97 16:22 Page:155  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #003=FLS$FILE_PACKER File=FLS$FILE_PACKER.:E05TSI                  TUE 07/29/97 16:22 Page:156  
          MINI XREF LISTING

ABORT
     17453**DCL         6--PROC    17907<<ASSIGN  17918<<ASSIGN  17921<<ASSIGN
ARCHIVE_NAME.L#
     16236**DCL     16236--IMP-SIZ
ARG_DCB$
     17439**DCL         6--PROC    17625>>ASSIGN
ARS
     17490**DCL     17948<>CALL    17968>>DOWHILE 17986<<ASSIGN  17986>>ASSIGN  17999<>CALL    18000>>ASSIGN
ARS IN PROCEDURE FLS_ADD_GRANS
     18023**DCL     18012--PROC    18034>>ASSIGN
A_FIT_
     15401**DCL     17780<>CALL
B$ALT.CODE
     17612**DCL     17612--REDEF   17613--REDEF   17613--REDEF
B$ALT.ERR.ERR#
     17614**DCL     17614--REDEF
B$ALT.EVID
     17613**DCL     17613--REDEF   17613--REDEF
B$TCB$
     14124**DCL     17608--IMP-PTR
BACKUP_NAME.L#
     15880**DCL     15880--IMP-SIZ
BIX
     17491**DCL     17948<>CALL    18003<>CALL
BLK_TAG
     15369**DCL     17804--ASSIGN  17807<<ASSIGN
BLK_TAG.BEG
     15371**DCL     17842<<ASSIGN
BLK_TAG.BEGX
     15371**DCL     18053<<ASSIGN
BLK_TAG.DESC
     15371**DCL     17828<<ASSIGN
PL6.E3A0      #003=FLS$FILE_PACKER File=FLS$FILE_PACKER.:E05TSI                  TUE 07/29/97 16:22 Page:157  
BLK_TAG.FIN
     15371**DCL     17847<<ASSIGN  17852<<ASSIGN  17856<<ASSIGN  17893<<ASSIGN  17952<<ASSIGN  17956<<ASSIGN
BLK_TAG.NAME
     15372**DCL     15372--REDEF
BLK_TAG.NAME.C
     15372**DCL     17827<<ASSIGN
BLK_TAG.NAME.L
     15372**DCL     17826<<ASSIGN
BLK_TAG.NBR
     15371**DCL     17810<<ASSIGN
BLK_TAG.SIZE
     15371**DCL     18052>>IF      18054<<ASSIGN  18054>>ASSIGN
BLK_TAG.TYPE
     15371**DCL     17808<<ASSIGN
BLK_TAG.UTS
     15372**DCL     17846<<ASSIGN  17851<<ASSIGN
BLK_TAG.WHERE.ACCT
     15372**DCL     17823<<ASSIGN
BLK_TAG.WHERE.PSN
     15372**DCL     17822<<ASSIGN
BLK_TAG$
     15369**DCL     15369--IMP-PTR 17748>>IF      17774>>IF      17785<<ASSIGN  17804<<ASSIGN  17804>>ASSIGN
     17805>>IF      17806>>ASSIGN  17807>>ASSIGN  17808>>ASSIGN  17810>>ASSIGN  17822>>ASSIGN  17823>>ASSIGN
     17826>>ASSIGN  17827>>ASSIGN  17828>>ASSIGN  17842>>ASSIGN  17846>>ASSIGN  17847>>ASSIGN  17851>>ASSIGN
     17852>>ASSIGN  17856>>ASSIGN  17893>>ASSIGN  17952>>ASSIGN  17956>>ASSIGN  18052>>IF      18053>>ASSIGN
     18054>>ASSIGN  18054>>ASSIGN
BLK_TAG0
     15375**DCL     17786<<ASSIGN
BLK_TAG0.NAME
     15378**DCL     15378--REDEF
BLK_TAG0.NBR
     15377**DCL     17811<<ASSIGN
BLK_TAG0.WHERE.ACCT
     15378**DCL     17760>>IF      17790<<ASSIGN
BLK_TAG0.WHERE.PSN
     15378**DCL     17760>>IF      17788<<ASSIGN  17789<<ASSIGN
PL6.E3A0      #003=FLS$FILE_PACKER File=FLS$FILE_PACKER.:E05TSI                  TUE 07/29/97 16:22 Page:158  
BLK_TAG0$
     15375**DCL     15375--IMP-PTR 17760>>IF      17760>>IF      17774>>IF      17784>>ASSIGN  17785>>ASSIGN
     17786>>ASSIGN  17788>>ASSIGN  17789>>ASSIGN  17790>>ASSIGN  17811>>ASSIGN
BLK_TAG_NBR
     15381**DCL     17791<<ASSIGN  17809<<ASSIGN  17809>>ASSIGN  17810>>ASSIGN  17811>>ASSIGN
BLOCK_GRAN
     15383**DCL     18047<<ASSIGN
BLOCK_GRAN$
     15382**DCL     15383--IMP-PTR 17793<<ASSIGN  18047>>ASSIGN  18053>>ASSIGN  18056<<ASSIGN  18056>>ASSIGN
BREAK_DCB#
     17477**DCL     17626<<ASSIGN  17783<<ASSIGN
CLEANING_UP
     17492**DCL     17737<<ASSIGN  17739<<ASSIGN  17743>>ASSIGN  17745>>ASSIGN
CLOSE_BLOCK_FILE.SN_
     15286**DCL     15286--REDEF
CLOSE_BLOCK_FILE.UTL_
     15287**DCL     15287--REDEF
CLOSE_BLOCK_FILE.V
     15291**DCL     15286--DCLINIT
CLOSE_BLOCK_FILE.V.EXPIRE#
     15301**DCL     15301--REDEF
CLOSE_BLOCK_FILE.V.TYPE#
     15299**DCL     15299--REDEF
CLOSE_BLOCK_FILE.V.XTNSIZE#
     15296**DCL     15296--REDEF   15298--REDEF
CLOSE_NODATA_LIST.SN_
     17034**DCL     17034--REDEF
CLOSE_NODATA_LIST.UTL_
     17035**DCL     17035--REDEF
CLOSE_NODATA_LIST.V.EXPIRE#
     17049**DCL     17049--REDEF
CLOSE_NODATA_LIST.V.TYPE#
     17047**DCL     17047--REDEF
CLOSE_NODATA_LIST.V.XTNSIZE#
     17044**DCL     17044--REDEF   17046--REDEF
CLOSE_PRIME_DUAL.SN_
PL6.E3A0      #003=FLS$FILE_PACKER File=FLS$FILE_PACKER.:E05TSI                  TUE 07/29/97 16:22 Page:159  
     16511**DCL     16511--REDEF
CLOSE_PRIME_DUAL.UTL_
     16512**DCL     16512--REDEF
CLOSE_PRIME_DUAL.V.EXPIRE#
     16526**DCL     16526--REDEF
CLOSE_PRIME_DUAL.V.TYPE#
     16524**DCL     16524--REDEF
CLOSE_PRIME_DUAL.V.XTNSIZE#
     16521**DCL     16521--REDEF   16523--REDEF
CLOSE_REBUILD.SN_
     16786**DCL     16786--REDEF
CLOSE_REBUILD.UTL_
     16787**DCL     16787--REDEF
CLOSE_REBUILD.V.EXPIRE#
     16801**DCL     16801--REDEF
CLOSE_REBUILD.V.TYPE#
     16799**DCL     16799--REDEF
CLOSE_REBUILD.V.XTNSIZE#
     16796**DCL     16796--REDEF   16798--REDEF
CLOSE_STATUS.SN_
     16001**DCL     16001--REDEF
CLOSE_STATUS.UTL_
     16002**DCL     16002--REDEF
CLOSE_STATUS.V.EXPIRE#
     16016**DCL     16016--REDEF
CLOSE_STATUS.V.TYPE#
     16014**DCL     16014--REDEF
CLOSE_STATUS.V.XTNSIZE#
     16011**DCL     16011--REDEF   16013--REDEF
CLOSE_TSN_USED.SN_
     15711**DCL     15711--REDEF
CLOSE_TSN_USED.UTL_
     15712**DCL     15712--REDEF
CLOSE_TSN_USED.V.EXPIRE#
     15726**DCL     15726--REDEF
CLOSE_TSN_USED.V.TYPE#
PL6.E3A0      #003=FLS$FILE_PACKER File=FLS$FILE_PACKER.:E05TSI                  TUE 07/29/97 16:22 Page:160  
     15724**DCL     15724--REDEF
CLOSE_TSN_USED.V.XTNSIZE#
     15721**DCL     15721--REDEF   15723--REDEF
CODE03.DESC.TPB
     17527**DCL     17865<<ASSIGN
CODE03.UGRANS
     17526**DCL     17679>>ASSIGN
CODE03$
     17494**DCL     17526--IMP-PTR 17676<<ASSIGN  17677<>CALL    17679>>ASSIGN  17865>>ASSIGN
CODE04.ACCESS.TIME
     17537**DCL     17688>>IF      17696>>IF
CODE04.MODIFY.TIME
     17537**DCL     17688>>IF      17694>>IF
CODE04$
     17495**DCL     17535--IMP-PTR 17685<<ASSIGN  17686<>CALL    17688>>IF      17688>>IF      17694>>IF
     17696>>IF
CODE05
     17541**DCL     17870>>ASSIGN  17876--ASSIGN  17879<<ASSIGN  17883<<ASSIGN
CODE05.BACKUP.EFT.FSN
     17541**DCL     17875<<ASSIGN
CODE05.BACKUP.REEL
     17541**DCL     17874<<ASSIGN
CODE05.BACKUP.TIME
     17541**DCL     17694>>IF      17696>>IF      17873<<ASSIGN  17970>>IF
CODE05$
     17496**DCL     17541--IMP-PTR 17691<<ASSIGN  17692<>CALL    17694>>IF      17696>>IF      17867<<ASSIGN
     17868<>CALL    17870>>ASSIGN  17873>>ASSIGN  17874>>ASSIGN  17875>>ASSIGN  17879>>ASSIGN  17883>>ASSIGN
     17960<<ASSIGN  17961<>CALL    17970>>IF
CODE05_SAVE
     17517**DCL     17870<<ASSIGN  17879>>ASSIGN  17883>>ASSIGN
COMMAND
     17456**DCL         6--PROC    17775<>CALL    17859>>IF      17859>>IF      18060<>CALL
CON_CLOSE_ARCHIVE.SN_
     16043**DCL     16043--REDEF
CON_CLOSE_ARCHIVE.UTL_
     16044**DCL     16044--REDEF
PL6.E3A0      #003=FLS$FILE_PACKER File=FLS$FILE_PACKER.:E05TSI                  TUE 07/29/97 16:22 Page:161  
CON_CLOSE_ARCHIVE.V.EXPIRE#
     16058**DCL     16058--REDEF
CON_CLOSE_ARCHIVE.V.TYPE#
     16056**DCL     16056--REDEF
CON_CLOSE_ARCHIVE.V.XTNSIZE#
     16053**DCL     16053--REDEF   16055--REDEF
CON_OPEN_ARCHIVE_FILE.ACSVEH_
     16130**DCL     16131--REDEF
CON_OPEN_ARCHIVE_FILE.ALTKEYS_
     16136**DCL     16137--REDEF   16137--REDEF
CON_OPEN_ARCHIVE_FILE.HDR_
     16135**DCL     16136--REDEF
CON_OPEN_ARCHIVE_FILE.TAB_
     16134**DCL     16135--REDEF
CON_OPEN_ARCHIVE_FILE.UHL_
     16128**DCL     16129--REDEF   16129--REDEF
CON_OPEN_ARCHIVE_FILE.V.FSN#
     16168**DCL     16168--REDEF   16168--REDEF
CON_OPEN_ARCHIVE_FILE.WSN_
     16134**DCL     16134--REDEF
CON_READ_ARCHIVE_FILE.STATION_
     16192**DCL     16193--REDEF
CON_READ_ARCHIVE_FILE.V.DVBYTE.REREAD#
     16204**DCL     16204--REDEF
CON_READ_ARCHIVE_FILE.V.INDX#
     16202**DCL     16202--REDEF
CROSS
     17446**DCL         6--PROC    17906<<ASSIGN  17922<<ASSIGN
CROSSED
     15404**DCL     17627<<ASSIGN  17906>>ASSIGN  17922>>ASSIGN
CVOL_UTL.ULBL#
     15471**DCL     15471--REDEF
DATA_
     17497**DCL     17948<>CALL
DATA_.PTR$
     17499**DCL     17966>>ASSIGN  17999<>CALL
PL6.E3A0      #003=FLS$FILE_PACKER File=FLS$FILE_PACKER.:E05TSI                  TUE 07/29/97 16:22 Page:162  
DCB#
     17440**DCL         6--PROC    17626>>ASSIGN  17711<>CALL    17780<>CALL    17783>>ASSIGN  17912<>CALL
     17948<>CALL
DCB$
     15368**DCL     17551--IMP-PTR 17625<<ASSIGN  17664>>IF      17665>>IF      17679>>ASSIGN  17680>>IF
     17760>>IF      17760>>IF      17789>>ASSIGN  17790>>ASSIGN  17822>>ASSIGN  17823>>ASSIGN  17826>>ASSIGN
     17827>>ASSIGN  17828>>ASSIGN  17846>>ASSIGN  17963>>IF      17963>>IF      17963>>IF      17970>>IF
     17974>>IF      17974>>IF      17995>>IF      17995>>IF
DEL_NODATA_REC.V
     17137**DCL     17134--DCLINIT
DISK_CLOSE.SN_
     13804**DCL     13804--REDEF
DISK_CLOSE.UTL_
     13805**DCL     13805--REDEF
DISK_CLOSE.V.EXPIRE#
     13819**DCL     13819--REDEF
DISK_CLOSE.V.TYPE#
     13817**DCL     13817--REDEF
DISK_CLOSE.V.XTNSIZE#
     13814**DCL     13814--REDEF   13816--REDEF
DISK_CLOSE_NEXT.SN_
     14983**DCL     14983--REDEF
DISK_CLOSE_NEXT.UTL_
     14984**DCL     14984--REDEF
DISK_CLOSE_NEXT.V.EXPIRE#
     14998**DCL     14998--REDEF
DISK_CLOSE_NEXT.V.TYPE#
     14996**DCL     14996--REDEF
DISK_CLOSE_NEXT.V.XTNSIZE#
     14993**DCL     14993--REDEF   14995--REDEF
DISK_CLOSE_ORDINARY.SN_
     15025**DCL     15025--REDEF
DISK_CLOSE_ORDINARY.UTL_
     15026**DCL     15026--REDEF
DISK_CLOSE_ORDINARY.V.EXPIRE#
     15040**DCL     15040--REDEF
PL6.E3A0      #003=FLS$FILE_PACKER File=FLS$FILE_PACKER.:E05TSI                  TUE 07/29/97 16:22 Page:163  
DISK_CLOSE_ORDINARY.V.TYPE#
     15038**DCL     15038--REDEF
DISK_CLOSE_ORDINARY.V.XTNSIZE#
     15035**DCL     15035--REDEF   15037--REDEF
DISK_DEST_SN.SN#
     14273**DCL     17788>>ASSIGN
DISK_FILE_SPEC.SPEC
     14169**DCL     14171--REDEF
DISK_FILE_SPEC.SPEC.START
     14170**DCL     14170--REDEF
DISK_FILE_SPEC.SPEC.STOP
     14171**DCL     14171--REDEF
DISK_FILE_SPEC$
     14168**DCL     14169--IMP-PTR
DISK_GRAN
     15382**DCL     18047>>ASSIGN
DISK_GRAN$
     15382**DCL     15382--IMP-PTR 18033<<ASSIGN  18047>>ASSIGN  18057<<ASSIGN  18057>>ASSIGN
DISK_OPEN.ACSVEH_
     13669**DCL     13670--REDEF
DISK_OPEN.ALTKEYS_
     13675**DCL     13676--REDEF   13676--REDEF
DISK_OPEN.HDR_
     13674**DCL     13675--REDEF
DISK_OPEN.TAB_
     13673**DCL     13674--REDEF
DISK_OPEN.UHL_
     13667**DCL     13668--REDEF   13668--REDEF
DISK_OPEN.V.FSN#
     13707**DCL     13707--REDEF   13707--REDEF
DISK_OPEN.WSN_
     13673**DCL     13673--REDEF
DISK_OPEN_NEXT.ACSVEH_
     14809**DCL     14810--REDEF
DISK_OPEN_NEXT.ALTKEYS_
     14815**DCL     14816--REDEF   14816--REDEF
PL6.E3A0      #003=FLS$FILE_PACKER File=FLS$FILE_PACKER.:E05TSI                  TUE 07/29/97 16:22 Page:164  
DISK_OPEN_NEXT.HDR_
     14814**DCL     14815--REDEF
DISK_OPEN_NEXT.TAB_
     14813**DCL     14814--REDEF
DISK_OPEN_NEXT.UHL_
     14807**DCL     14808--REDEF   14808--REDEF
DISK_OPEN_NEXT.V.FSN#
     14847**DCL     14847--REDEF   14847--REDEF
DISK_OPEN_NEXT.WSN_
     14813**DCL     14813--REDEF
DISK_OPEN_ORDINARY.ACSVEH_
     14918**DCL     14919--REDEF
DISK_OPEN_ORDINARY.ALTKEYS_
     14924**DCL     14925--REDEF   14925--REDEF
DISK_OPEN_ORDINARY.HDR_
     14923**DCL     14924--REDEF
DISK_OPEN_ORDINARY.TAB_
     14922**DCL     14923--REDEF
DISK_OPEN_ORDINARY.UHL_
     14916**DCL     14917--REDEF   14917--REDEF
DISK_OPEN_ORDINARY.V.FSN#
     14956**DCL     14956--REDEF   14956--REDEF
DISK_OPEN_ORDINARY.WSN_
     14922**DCL     14922--REDEF
DISK_OPTION.ACUP
     14182**DCL     17683>>IF
DISK_OPTION.IDSS
     14182**DCL     17680>>IF      17963>>IF
DISK_READ.STATION_
     13731**DCL     13732--REDEF
DISK_READ.V.DVBYTE.REREAD#
     13743**DCL     13743--REDEF
DISK_READ.V.INDX#
     13741**DCL     13741--REDEF
DISK_SN.SN#
     14713**DCL     17750>>IF      17766>>ASSIGN
PL6.E3A0      #003=FLS$FILE_PACKER File=FLS$FILE_PACKER.:E05TSI                  TUE 07/29/97 16:22 Page:165  
DISK_WRITE.STATION_
     13769**DCL     13769--REDEF
DISK_WRITE.V.DVBYTE.VFC#
     13776**DCL     13776--REDEF
DI_ERR
     17500**DCL     17812<<ASSIGN  17904>>IF      17905>>ASSIGN  17997<<ASSIGN
DPLIST$
     14154**DCL     14166--IMP-PTR
DPRESLIST$
     14168**DCL     14168--IMP-PTR
DUAL_FILE.L#
     16307**DCL     16307--IMP-SIZ
EFTWORD
     14289**DCL     14289--REDEF
EFT_CVOL_FILE.L#
     15431**DCL     15431--IMP-SIZ
EFT_RESTRICT_FILE
     15458**DCL     17780--CALL
EFT_RESTRICT_FILE.L#
     15458**DCL     15458--IMP-SIZ 17780>>CALL
ERR
     17502**DCL     17780<>CALL    17912<>CALL    17948<>CALL    17955>>ASSIGN  17996<<ASSIGN  17997>>ASSIGN
ERR.CODE
     17506**DCL     17950>>IF      17993>>IF
ERRBACK
     17447**DCL         6--PROC    17905<<ASSIGN  17917<<ASSIGN
ERRBACK.CODE
     17451**DCL     17641>>DOSELCT
E_NO_CODE3
     10054**DCL     17711<>CALL
F$DCB.ACCT#
     17567**DCL     17760>>IF      17790>>ASSIGN  17823>>ASSIGN
F$DCB.ACTPOS
     17583**DCL     17583--REDEF
F$DCB.ARS#
     17557**DCL     17557--REDEF
PL6.E3A0      #003=FLS$FILE_PACKER File=FLS$FILE_PACKER.:E05TSI                  TUE 07/29/97 16:22 Page:166  
F$DCB.ATTR
     17576**DCL     17577--REDEF
F$DCB.BORROW
     17591**DCL     17591--REDEF   17591--REDEF   17591--REDEF
F$DCB.CRECNO
     17595**DCL     17679>>ASSIGN
F$DCB.DCBNAME.L
     17605**DCL     17605--IMP-SIZ
F$DCB.DESC
     17564**DCL     17828>>ASSIGN
F$DCB.DESC.ARCHIVE#
     17565**DCL     17665>>IF
F$DCB.DESC.DELF#
     17564**DCL     17664>>IF
F$DCB.EOMCHAR#
     17561**DCL     17561--REDEF
F$DCB.EXPIRE#
     17574**DCL     17846>>ASSIGN
F$DCB.FCD#
     17570**DCL     17778>>IF
F$DCB.FLDID
     17586**DCL     17586--REDEF
F$DCB.FORM$
     17580**DCL     17580--REDEF
F$DCB.FSECT
     17596**DCL     17596--REDEF
F$DCB.FSN#
     17573**DCL     17573--REDEF   17573--REDEF   17574--REDEF
F$DCB.HEADER$
     17579**DCL     17579--REDEF
F$DCB.IXTNSIZE#
     17577**DCL     17577--REDEF
F$DCB.LASTSTA$
     17566**DCL     17566--REDEF
F$DCB.LVL
     17592**DCL     17592--REDEF
PL6.E3A0      #003=FLS$FILE_PACKER File=FLS$FILE_PACKER.:E05TSI                  TUE 07/29/97 16:22 Page:167  
F$DCB.NAME#.C
     17567**DCL     17567--REDEF   17827>>ASSIGN
F$DCB.NAME#.L
     17567**DCL     17826>>ASSIGN
F$DCB.NOEOF
     17589**DCL     17589--REDEF
F$DCB.NRECS#
     17578**DCL     17578--REDEF
F$DCB.NRECX
     17597**DCL     17597--REDEF
F$DCB.OHDR
     17589**DCL     17589--REDEF
F$DCB.ORG#
     17572**DCL     17572--REDEF   17680>>IF      17963>>IF      17963>>IF      17963>>IF      17970>>IF
     17974>>IF      17974>>IF      17995>>IF      17995>>IF
F$DCB.PRECNO
     17595**DCL     17595--REDEF
F$DCB.PSN#
     17567**DCL     17760>>IF      17789>>ASSIGN  17822>>ASSIGN
F$DCB.RCSZ
     17601**DCL     17601--REDEF
F$DCB.RES#
     17568**DCL     17568--REDEF
F$DCB.SETX
     17580**DCL     17580--REDEF
F$DCB.TAB$
     17580**DCL     17580--REDEF
F$DCB.TDA
     17594**DCL     17595--REDEF
F$DCB.WSN#
     17568**DCL     17568--REDEF
FIT$
     17493**DCL     17548--IMP-PTR 17866<<ASSIGN  17867>>ASSIGN  17871>>ASSIGN  17876>>ASSIGN  17880>>ASSIGN
     17884>>ASSIGN
FIT_AREA.W2
     15742**DCL     15743--REDEF
PL6.E3A0      #003=FLS$FILE_PACKER File=FLS$FILE_PACKER.:E05TSI                  TUE 07/29/97 16:22 Page:168  
FIT_ONLY_SAVED
     17454**DCL         6--PROC    17629<<ASSIGN  17699<<ASSIGN  17713<<ASSIGN
FLI$DISK_READ
     17464**DCL-ENT 17948--CALL
FLI$DISK_READ_FILE_INIT
     17463**DCL-ENT 17944--CALL
FLI$RETURN_BUF
     17465**DCL-ENT 18003--CALL
FLI$RPT_ERR
     17466**DCL-ENT 17711--CALL    17912--CALL
FLI$TAPE_CLOSE
     17467**DCL-ENT 17779--CALL
FLI$TAPE_OPEN
     17469**DCL-ENT 17780--CALL
FLS$FLUSH_BLOCK
     17470**DCL-ENT 17775--CALL    18060--CALL
FLS_ADD_GRANS
     18012**PROC    17855--CALL    17877--CALL    17887--CALL    17890--CALL    17982--CALL    17990--CALL
     17999--CALL
FLS_BLOCK_FILE
     17926**PROC    17892--CALL
FLUSH
     17508**DCL     17732<<ASSIGN  17749<<ASSIGN  17755<<ASSIGN  17759<<ASSIGN  17763<<ASSIGN  17772>>IF
FM$FIT.CODES.NDW
     17548**DCL     17871>>ASSIGN  17876<<ASSIGN  17880<<ASSIGN  17884<<ASSIGN
FM$GRAN
     17544**DCL     17676--ASSIGN  17685--ASSIGN  17691--ASSIGN  17866--ASSIGN  17960--ASSIGN
FPARAM_
     17441**DCL         6--PROC
FPARAM_.PTR$
     17443**DCL     17676>>ASSIGN  17685>>ASSIGN  17691>>ASSIGN  17855<>CALL    17866>>ASSIGN  17877<>CALL
     17887<>CALL    17890<>CALL    17960>>ASSIGN
FPT_EXIT.V.STEPCC#
     13594**DCL     13594--REDEF
FROM_DISK_ACCT
     14700**DCL     15224--DCLINIT
PL6.E3A0      #003=FLS$FILE_PACKER File=FLS$FILE_PACKER.:E05TSI                  TUE 07/29/97 16:22 Page:169  
FROM_DISK_NAME
     14674**DCL     15220--DCLINIT
FROM_DISK_SN
     14726**DCL     15219--DCLINIT
FSN
     17445**DCL         6--PROC    17803<<ASSIGN  17855<>CALL    17877<>CALL    17887<>CALL    17890<>CALL
     17892<>CALL
GET_NOW_UTS
     14145**DCL     17850<>CALL    17872<>CALL
GRAN$
     17509**DCL     17966<<ASSIGN  17970>>IF      17970>>IF      17975>>ASSIGN  17977>>ASSIGN  17982>>CALL
     17987<<ASSIGN  17987>>ASSIGN  17990>>CALL
GRANS$ IN PROCEDURE FLS_ADD_GRANS
     18022**DCL     18012--PROC    18033>>ASSIGN
GRANULE_INDEX
     15404**DCL     17943<<ASSIGN  17969<<ASSIGN  17969>>ASSIGN  17975>>ASSIGN  18000<<ASSIGN  18000>>ASSIGN
GRAN_BASE$
     15400**DCL     17793>>ASSIGN  18053>>ASSIGN
GRAN_KEY
     15368**DCL     17970>>IF      17975<<ASSIGN
GRAN_START$
     17510**DCL     17967<<ASSIGN  17976>>IF      17977<<ASSIGN  17980>>IF      17982<>CALL    17982>>CALL
     17983<<ASSIGN  17989>>IF      17990<>CALL    17990>>CALL
JUSTALT
     17907**LABEL   17775--CALLALT 17779--CALLALT 17855--CALLALT 17881--GOTO    17887--CALLALT 17890--CALLALT
     17892--CALLALT
JUSTALT IN PROCEDURE FLS_BLOCK_FILE
     18003**LABEL   17961--CALLALT 17982--CALLALT 17990--CALLALT 17999--CALLALT
LAST_DSN_USED.SN#
     16541**DCL     17750>>IF      17766<<ASSIGN
LAST_TYPE
     15474**DCL     17735>>DOCASE  17765<<ASSIGN
LOW_BLK_TAG$
     15369**DCL     17784<<ASSIGN  17805>>IF      17806<<ASSIGN
M$TIME
      6697**DCL-ENT 17850--CALL    17872--CALL
PL6.E3A0      #003=FLS$FILE_PACKER File=FLS$FILE_PACKER.:E05TSI                  TUE 07/29/97 16:22 Page:170  
M$XXX
      6642**DCL-ENT 17831--CALL    17896--CALL
MIN_BLK_TAG$
     15369**DCL     17748>>IF
MOD_TIME
     17515**DCL     17970>>IF
NBR_BLOCK_BYTES
     15381**DCL     17792>>ASSIGN
NBR_BLOCK_BYTES_REMAINING
     15381**DCL     17758>>IF      17792<<ASSIGN  18043>>IF      18044>>ASSIGN  18050<<ASSIGN  18050>>ASSIGN
NBR_BYTES
     15382**DCL     18034<<ASSIGN  18043>>IF      18045>>ASSIGN  18049<<ASSIGN  18049>>ASSIGN  18059>>IF
NBR_BYTES_TO_MOVE
     15381**DCL     15382--IMP-SIZ 15383--IMP-SIZ 18044<<ASSIGN  18045<<ASSIGN  18047>>ASSIGN  18047>>ASSIGN
     18049>>ASSIGN  18050>>ASSIGN  18054>>ASSIGN  18056>>ASSIGN  18057>>ASSIGN
NBR_FILE_BLOCKS
     15404**DCL     17750>>IF      17781<<ASSIGN
NBR_GRANS_TO_READ
     17511**DCL     17679<<ASSIGN  17891>>IF      17944<>CALL
NBR_NEEDED_BYTES
     17512**DCL     17645<<ASSIGN  17649<<ASSIGN  17653<<ASSIGN  17657<<ASSIGN  17661<<ASSIGN  17668<<ASSIGN
     17672<<ASSIGN  17675<<ASSIGN  17758>>IF
NDW_SAVE
     17519**DCL     17871<<ASSIGN  17880>>ASSIGN  17884>>ASSIGN
NEW_FILE
     17513**DCL     17733<<ASSIGN  17756<<ASSIGN  17776>>IF
NEW_FSN IN PROCEDURE FLS_ADD_GRANS
     18025**DCL     18012--PROC    18060<>CALL
NEW_FSN IN PROCEDURE FLS_BLOCK_FILE
     17936**DCL     17926--PROC    17982<>CALL    17990<>CALL    17999<>CALL
NEW_TSN IN PROCEDURE FLS_ADD_GRANS
     18024**DCL     18012--PROC    18060<>CALL
NEW_TSN IN PROCEDURE FLS_BLOCK_FILE
     17935**DCL     17926--PROC    17982<>CALL    17990<>CALL    17999<>CALL
NODATA_FILE_NAME.L#
     16996**DCL     16996--IMP-SIZ
PL6.E3A0      #003=FLS$FILE_PACKER File=FLS$FILE_PACKER.:E05TSI                  TUE 07/29/97 16:22 Page:171  
NODATA_KEY
     17142**DCL     17134--DCLINIT 17135--DCLINIT
NOW_UTS
     14133**DCL     17851>>ASSIGN  17873>>ASSIGN
OPEN_BLOCK_FILE.ACSVEH_
     15221**DCL     15222--REDEF
OPEN_BLOCK_FILE.ALTKEYS_
     15227**DCL     15228--REDEF   15228--REDEF
OPEN_BLOCK_FILE.HDR_
     15226**DCL     15227--REDEF
OPEN_BLOCK_FILE.TAB_
     15225**DCL     15226--REDEF
OPEN_BLOCK_FILE.UHL_
     15219**DCL     15220--REDEF   15220--REDEF
OPEN_BLOCK_FILE.V
     15228**DCL     15219--DCLINIT
OPEN_BLOCK_FILE.V.FSN#
     15259**DCL     15259--REDEF   15259--REDEF
OPEN_BLOCK_FILE.WSN_
     15225**DCL     15225--REDEF
OPEN_NODATA_LIST.ACSVEH_
     16929**DCL     16930--REDEF
OPEN_NODATA_LIST.ALTKEYS_
     16935**DCL     16936--REDEF   16936--REDEF
OPEN_NODATA_LIST.HDR_
     16934**DCL     16935--REDEF
OPEN_NODATA_LIST.TAB_
     16933**DCL     16934--REDEF
OPEN_NODATA_LIST.UHL_
     16927**DCL     16928--REDEF   16928--REDEF
OPEN_NODATA_LIST.V.FSN#
     16967**DCL     16967--REDEF   16967--REDEF
OPEN_NODATA_LIST.WSN_
     16933**DCL     16933--REDEF
OPEN_PRIME_DUAL.ACSVEH_
     16376**DCL     16377--REDEF
PL6.E3A0      #003=FLS$FILE_PACKER File=FLS$FILE_PACKER.:E05TSI                  TUE 07/29/97 16:22 Page:172  
OPEN_PRIME_DUAL.ALTKEYS_
     16382**DCL     16383--REDEF   16383--REDEF
OPEN_PRIME_DUAL.HDR_
     16381**DCL     16382--REDEF
OPEN_PRIME_DUAL.TAB_
     16380**DCL     16381--REDEF
OPEN_PRIME_DUAL.UHL_
     16374**DCL     16375--REDEF   16375--REDEF
OPEN_PRIME_DUAL.V.FSN#
     16414**DCL     16414--REDEF   16414--REDEF
OPEN_PRIME_DUAL.WSN_
     16380**DCL     16380--REDEF
OPEN_REBUILD.ACSVEH_
     16611**DCL     16612--REDEF
OPEN_REBUILD.ALTKEYS_
     16617**DCL     16618--REDEF   16618--REDEF
OPEN_REBUILD.HDR_
     16616**DCL     16617--REDEF
OPEN_REBUILD.TAB_
     16615**DCL     16616--REDEF
OPEN_REBUILD.UHL_
     16609**DCL     16610--REDEF   16610--REDEF
OPEN_REBUILD.V.FSN#
     16649**DCL     16649--REDEF   16649--REDEF
OPEN_REBUILD.WSN_
     16615**DCL     16615--REDEF
OPEN_STATUS.ACSVEH_
     15813**DCL     15814--REDEF
OPEN_STATUS.ALTKEYS_
     15819**DCL     15820--REDEF   15820--REDEF
OPEN_STATUS.HDR_
     15818**DCL     15819--REDEF
OPEN_STATUS.TAB_
     15817**DCL     15818--REDEF
OPEN_STATUS.UHL_
     15811**DCL     15812--REDEF   15812--REDEF
PL6.E3A0      #003=FLS$FILE_PACKER File=FLS$FILE_PACKER.:E05TSI                  TUE 07/29/97 16:22 Page:173  
OPEN_STATUS.V.FSN#
     15851**DCL     15851--REDEF   15851--REDEF
OPEN_STATUS.WSN_
     15817**DCL     15817--REDEF
OPEN_TSN_USED.ACSVEH_
     15549**DCL     15550--REDEF
OPEN_TSN_USED.ALTKEYS_
     15555**DCL     15556--REDEF   15556--REDEF
OPEN_TSN_USED.HDR_
     15554**DCL     15555--REDEF
OPEN_TSN_USED.TAB_
     15553**DCL     15554--REDEF
OPEN_TSN_USED.UHL_
     15547**DCL     15548--REDEF   15548--REDEF
OPEN_TSN_USED.V.FSN#
     15587**DCL     15587--REDEF   15587--REDEF
OPEN_TSN_USED.WSN_
     15553**DCL     15553--REDEF
OVER_FIL
     14125**DCL     17787>>IF
PRE_RET_CLOSE.SN_
     14532**DCL     14532--REDEF
PRE_RET_CLOSE.UTL_
     14533**DCL     14533--REDEF
PRE_RET_CLOSE.V.EXPIRE#
     14547**DCL     14547--REDEF
PRE_RET_CLOSE.V.TYPE#
     14545**DCL     14545--REDEF
PRE_RET_CLOSE.V.XTNSIZE#
     14542**DCL     14542--REDEF   14544--REDEF
PRE_RET_OPEN.ACSVEH_
     14467**DCL     14468--REDEF
PRE_RET_OPEN.ALTKEYS_
     14473**DCL     14474--REDEF   14474--REDEF
PRE_RET_OPEN.HDR_
     14472**DCL     14473--REDEF
PL6.E3A0      #003=FLS$FILE_PACKER File=FLS$FILE_PACKER.:E05TSI                  TUE 07/29/97 16:22 Page:174  
PRE_RET_OPEN.TAB_
     14471**DCL     14472--REDEF
PRE_RET_OPEN.UHL_
     14465**DCL     14466--REDEF   14466--REDEF
PRE_RET_OPEN.V.FSN#
     14505**DCL     14505--REDEF   14505--REDEF
PRE_RET_OPEN.WSN_
     14471**DCL     14471--REDEF
PRE_RET_READ.STATION_
     14322**DCL     14323--REDEF
PRE_RET_READ.V.DVBYTE.REREAD#
     14334**DCL     14334--REDEF
PRE_RET_READ.V.INDX#
     14332**DCL     14332--REDEF
PRE_RET_WRITE.STATION_
     14360**DCL     14360--REDEF
PRE_RET_WRITE.V.DVBYTE.VFC#
     14367**DCL     14367--REDEF
PRIME_FILE.L#
     16280**DCL     16280--IMP-SIZ
READ_AD_OR_FD.ACSVEH_
     15111**DCL     15112--REDEF
READ_AD_OR_FD.ALTKEYS_
     15117**DCL     15118--REDEF   15118--REDEF
READ_AD_OR_FD.HDR_
     15116**DCL     15117--REDEF
READ_AD_OR_FD.TAB_
     15115**DCL     15116--REDEF
READ_AD_OR_FD.UHL_
     15109**DCL     15110--REDEF   15110--REDEF
READ_AD_OR_FD.V.FSN#
     15149**DCL     15149--REDEF   15149--REDEF
READ_AD_OR_FD.WSN_
     15115**DCL     15115--REDEF
READ_ERR
     17501**DCL     17628<<ASSIGN  17915>>IF      17917>>ASSIGN  17955<<ASSIGN
PL6.E3A0      #003=FLS$FILE_PACKER File=FLS$FILE_PACKER.:E05TSI                  TUE 07/29/97 16:22 Page:175  
READ_NODATA_LIST.STATION_
     17073**DCL     17074--REDEF
READ_NODATA_LIST.V.DVBYTE.REREAD#
     17085**DCL     17085--REDEF
READ_NODATA_LIST.V.INDX#
     17083**DCL     17083--REDEF
READ_PRIME_DUAL.STATION_
     16438**DCL     16439--REDEF
READ_PRIME_DUAL.V.DVBYTE.REREAD#
     16450**DCL     16450--REDEF
READ_PRIME_DUAL.V.INDX#
     16448**DCL     16448--REDEF
READ_REBUILD.STATION_
     16744**DCL     16745--REDEF
READ_REBUILD.V.DVBYTE.REREAD#
     16756**DCL     16756--REDEF
READ_REBUILD.V.INDX#
     16754**DCL     16754--REDEF
READ_STATUS.STATION_
     15959**DCL     15960--REDEF
READ_STATUS.V.DVBYTE.REREAD#
     15971**DCL     15971--REDEF
READ_STATUS.V.INDX#
     15969**DCL     15969--REDEF
READ_TSN_USED.STATION_
     15669**DCL     15670--REDEF
READ_TSN_USED.V.DVBYTE.REREAD#
     15681**DCL     15681--REDEF
READ_TSN_USED.V.INDX#
     15679**DCL     15679--REDEF
REBUILD_DIR_KEY.L#
     16830**DCL     16830--IMP-SIZ
REBUILD_KEY.L#
     16857**DCL     16857--IMP-SIZ
REBUILD_NAME.L#
     16678**DCL     16678--IMP-SIZ
PL6.E3A0      #003=FLS$FILE_PACKER File=FLS$FILE_PACKER.:E05TSI                  TUE 07/29/97 16:22 Page:176  
REPALT
     17907**LABEL   17780--CALLALT
RET_CMDS_NAME.L#
     14576**DCL     14576--IMP-SIZ
SNVECLIST$
     14108**DCL     14108--IMP-PTR
SPEC.START
     14172**DCL     14173--REDEF
SPEC.STOP
     14173**DCL     14174--REDEF
SPECCHARS
     14172**DCL     14172--REDEF
START_NEW_FILE
     17514**DCL     17743<<ASSIGN  17745<<ASSIGN  17750>>IF
TAPE_BLOCK_.W2
     15397**DCL     15398--REDEF
TAPE_CLOSE.SN_
     14025**DCL     14025--REDEF
TAPE_CLOSE.UTL_
     14026**DCL     14026--REDEF
TAPE_CLOSE.V.EXPIRE#
     14040**DCL     14040--REDEF
TAPE_CLOSE.V.TYPE#
     14038**DCL     14038--REDEF
TAPE_CLOSE.V.XTNSIZE#
     14035**DCL     14035--REDEF   14037--REDEF
TAPE_DCBLIST.DCB$
     13581**DCL     17778>>IF
TAPE_DCBLIST$
     13581**DCL     13581--IMP-PTR 17778>>IF
TAPE_FSN
     15474**DCL     17775<>CALL    17780<>CALL    17803>>ASSIGN  17875>>ASSIGN
TAPE_OPEN.ACSVEH_
     13890**DCL     13891--REDEF
TAPE_OPEN.ALTKEYS_
     13896**DCL     13897--REDEF   13897--REDEF
PL6.E3A0      #003=FLS$FILE_PACKER File=FLS$FILE_PACKER.:E05TSI                  TUE 07/29/97 16:22 Page:177  
TAPE_OPEN.HDR_
     13895**DCL     13896--REDEF
TAPE_OPEN.TAB_
     13894**DCL     13895--REDEF
TAPE_OPEN.UHL_
     13888**DCL     13889--REDEF   13889--REDEF
TAPE_OPEN.V.FSN#
     13928**DCL     13928--REDEF   13928--REDEF
TAPE_OPEN.WSN_
     13894**DCL     13894--REDEF
TAPE_READ.STATION_
     13952**DCL     13953--REDEF
TAPE_READ.V.DVBYTE.REREAD#
     13964**DCL     13964--REDEF
TAPE_READ.V.INDX#
     13962**DCL     13962--REDEF
TAPE_SN
     15474**DCL     17775<>CALL    17780<>CALL    17802>>ASSIGN  17874>>ASSIGN
TAPE_WRITE.STATION_
     13990**DCL     13990--REDEF
TAPE_WRITE.V.DVBYTE.VFC#
     13997**DCL     13997--REDEF
TSN
     17444**DCL         6--PROC    17802<<ASSIGN  17855<>CALL    17877<>CALL    17887<>CALL    17890<>CALL
     17892<>CALL
TSN_USED_NAME.L#
     15616**DCL     15616--IMP-SIZ
TVECTOR.W2
     14121**DCL     14122--REDEF
TYPE
     15368**DCL     17644<<ASSIGN  17648<<ASSIGN  17652<<ASSIGN  17656<<ASSIGN  17660<<ASSIGN  17667<<ASSIGN
     17671<<ASSIGN  17681<<ASSIGN  17682<<ASSIGN  17689<<ASSIGN  17695<<ASSIGN  17698<<ASSIGN  17701<<ASSIGN
     17704<<ASSIGN  17712<<ASSIGN  17741>>DOCASE  17760>>IF      17760>>IF      17760>>IF      17760>>IF
     17760>>IF      17760>>IF      17765>>ASSIGN  17808>>ASSIGN  17819>>DOCASE  17843>>DOCASE
WRITE_NODATA_LIST.STATION_
     17111**DCL     17111--REDEF
PL6.E3A0      #003=FLS$FILE_PACKER File=FLS$FILE_PACKER.:E05TSI                  TUE 07/29/97 16:22 Page:178  
WRITE_NODATA_LIST.V.DVBYTE.VFC#
     17118**DCL     17118--REDEF
WRITE_PRIME_DUAL.STATION_
     16476**DCL     16476--REDEF
WRITE_PRIME_DUAL.V.DVBYTE.VFC#
     16483**DCL     16483--REDEF
WRITE_REBUILD.STATION_
     16712**DCL     16712--REDEF
WRITE_REBUILD.V.DVBYTE.VFC#
     16719**DCL     16719--REDEF
WRITE_STATUS.STATION_
     15927**DCL     15927--REDEF
WRITE_STATUS.V.DVBYTE.VFC#
     15934**DCL     15934--REDEF
WRITE_TSN_USED.STATION_
     15637**DCL     15637--REDEF
WRITE_TSN_USED.V.DVBYTE.VFC#
     15644**DCL     15644--REDEF
XSF$LOCCODP
     17471**DCL-ENT 17677--CALL    17686--CALL    17692--CALL    17868--CALL    17961--CALL

PL6.E3A0      #004=FLS$FLUSH_BLOCK File=FLS$FILE_PACKER.:E05TSI                  TUE 07/29/97 16:25 Page:179  
      845        1        /*T***********************************************************/
      846        2        /*T*                                                         */
      847        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      848        4        /*T*                                                         */
      849        5        /*T***********************************************************/
      850        6        FLS$FLUSH_BLOCK: PROC( NOT_END, COMMAND, NEW_TSN, NEW_FSN ) ALTRET;
      851        7        /*F*  NAME: FLS$FLUSH_BLOCK
      852        8              PURPOSE: Flush current tape block to tape.
      853        9        */
      854       10
      855       11    1   DCL NOT_END BIT(1) ALIGNED;   /* Indicates if more of current file present    */
      856       12    1   DCL COMMAND SBIN ALIGNED;
      857       13    1   DCL NEW_TSN CHAR(6) CALIGNED; /* New current TSN returned on IOERRCONT,I-O err */
      858       14    1   DCL NEW_FSN UBIN WORD ALIGNED; /* New current FSN returned on IOERRCONT,I-O err */
      859       15
      860       16        /***
      861       17         *** INCLUDE
      862       18         ***/
      863       19
      864       20        %INCLUDE B_ERRORS_C;
      865     1147        %INCLUDE CP_6;
      866     6706        %INCLUDE FLE_DATA_R;
      867    12657        %INCLUDE FLI_DATA_R;
      868    14071        %INCLUDE FLS_DATA_R;
      869    15871        %INCLUDE FLN_DATA_R;
      870    16608
      871    16609        /***
      872    16610         *** ENTRY
      873    16611         ***/
      874    16612
      875    16613    1   DCL FLI$RPT_ERR ENTRY(5);
      876    16614    1   DCL FLI$TAPE_CLOSE ENTRY(1) ALTRET;
      877    16615    1   DCL FLI$TAPE_OPEN ENTRY(9) ALTRET;
      878    16616    1   DCL FLI$TAPE_WRITE ENTRY(6) ALTRET;
      879    16617    1   DCL FLP$WR_FILE_INFO ENTRY(9) ALTRET;
      880    16618    1   DCL FLE$ESTMOD ENTRY(1);
      881    16619
PL6.E3A0      #004=FLS$FLUSH_BLOCK File=FLS$FILE_PACKER.:E05TSI                  TUE 07/29/97 16:25 Page:180  
      882    16620        /***
      883    16621         *** AUTO
      884    16622         ***/
      885    16623
      886    16624    1   DCL DCB# SBIN AUTO;
      887    16625    1   DCL I SBIN AUTO;
      888    16626    1   DCL 1 ERR ALIGNED AUTO,
      889    16627    1         2 * BIT(12) UNAL,
      890    16628    1         2 * BIT(6) UNAL,
      891    16629    1         2 * BIT(1) UNAL,
      892    16630    1         2 CODE UBIN(14) UNAL,
      893    16631    1         2 * UBIN(3) UNAL;
      894    16632    1   DCL NEW_BLK_TAG$ PTR AUTO;
      895    16633    1   DCL TEMP_TSN CHAR(6) AUTO;
      896    16634    1   DCL TEMP_FSN UBIN WORD AUTO;
      897    16635
      898    16636        /***
      899    16637         *** STATIC
      900    16638         ***/
      901    16639
      902    16640    1   DCL PREV_LOW_BLK_TAG_BEG BIT(1) STATIC; /* Previous block tag beginning flag  */
      903    16641
      904    16642        /***
      905    16643         ***  SYMREF
      906    16644         ***/
      907    16645
      908    16646
      909    16647        /***
      910    16648         *** BASED
      911    16649         ***/
      912    16650
      913    16651        %F$DCB;
      914    16708
      915    16709        /****************************************/
      916    16710
      917    16711        /***
      918    16712         *** Write from first lowest block tag through highest file granule.
PL6.E3A0      #004=FLS$FLUSH_BLOCK File=FLS$FILE_PACKER.:E05TSI                  TUE 07/29/97 16:25 Page:181  
      919    16713         ***/
      920    16714
      921    16715    1      OUTBUF_.PTR$ = LOW_BLK_TAG$;
      922    16716
      923    16717        /***
      924    16718         *** Set TAPE_SN for OD as it will only get set the first time through
      925    16719         *** (first OPEN). This must be done due to no CVOL control for OD.
      926    16720         ***/
      927    16721    1      IF SUBSTR(TAPE_DCBLIST.DCB$(0)->F$DCB.RES#,0,2) = 'OD'
      928    16722    1       THEN TAPE_SN = TAPE_DCBLIST.DCB$(0)->F$DCB.PSN#;
      929    16723
      930    16724    1      TEMP_FSN = 0;
      931    16725    1      TEMP_TSN = ' ';
      932    16726    1      CALL FLI$TAPE_WRITE( OUTBUF_, POFFC( BLOCK_GRAN$, LOW_BLK_TAG$ ), EOVOL, COMMAND,
             16726               TEMP_TSN, TEMP_FSN ) ALTRET( WHATS_MISSING );
      933    16727        /***
      934    16728         *** If a SN change when IO ERR CONTINUE set, the previous block (already
      935    16729         *** written to tape) and the current block wil get rewritten to the next tape. If
      936    16730         *** this file begins in the current block or the previous block, must return new
      937    16731         *** SN and FSN so fit gets updated properly by FLM$MOVE routine.
      938    16732         ***/
      939    16733    1      IF (TAPE_WRITE.V.IOERROK#
      940    16734    1        AND TEMP_TSN ~= ' '
      941    16735    1        AND (LOW_BLK_TAG$->BLK_TAG.BEG     /* Current block                      */
      942    16736    1        OR PREV_LOW_BLK_TAG_BEG))          /* Previous block                     */
      943    16737    2       THEN DO;
      944    16738    2         NEW_TSN = TEMP_TSN;
      945    16739    2         NEW_FSN = TEMP_FSN;
      946    16740    2         END;
      947    16741
      948    16742    1      NBR_FILE_BLOCKS = NBR_FILE_BLOCKS + 1;
      949    16743
      950    16744    1      IF LAST_TSN_USED ~= TAPE_SN
      951    16745    2       THEN DO;                            /* New reel                           */
      952    16746    2         TSN_VOL = TSN_VOL + 1;
      953    16747        /***
      954    16748         *** If it is ARCHIVing and tapeset is from :ARCHIVE.$$EFT,
PL6.E3A0      #004=FLS$FLUSH_BLOCK File=FLS$FILE_PACKER.:E05TSI                  TUE 07/29/97 16:25 Page:182  
      955    16749         *** then call routine to update :ARCHIVE.$$EFT.
      956    16750         ***/
      957    16751    2         IF ARCHIVE$ ~= ADDR(NIL) AND LAST_TSN_USED ~= ' '
      958    16752    2          THEN
      959    16753    2            CALL FLE$ESTMOD(%ARCHIVE);
      960    16754        /***
      961    16755         *** If optical disk, determine if file crosses volume boundry.
      962    16756         ***/
      963    16757    2         IF SUBSTR(TAPE_DCBLIST.DCB$(0)->F$DCB.RES#,0,2) = 'OD'
      964    16758    2           AND LAST_TSN_USED ~= ' '
      965    16759    3          THEN DO;
      966    16760    3            IF LAST_TSN_USED ~= TAPE_SN
      967    16761    3             THEN CROSSED = '*';
      968    16762    3            END;
      969    16763
      970    16764    2         LAST_TSN_USED = TAPE_SN;
      971    16765    2         TSN_USED_KEY.L = LENGTHV(TSN_USED_KEY);
      972    16766    2         TSN_USED_KEY.RUN_NBR = RUN_NBR;
      973    16767    2         TSN_USED_KEY.TSN_SET_NBR = TSN_SET_NBR;
      974    16768    2         TSN_USED_KEY.TSN_VOL = TSN_VOL;
      975    16769    2         TSN_USED_KEY.TSN_SNLIST_NBR = 0;
      976    16770    2         TSN_USED_BUF.TSN = TAPE_SN;
      977    16771    2         TSN_USED_BUF.FSN = TAPE_FSN;
      978    16772    2         TSN_USED_BUF.BACKUP_FSN = 0;
      979    16773    2         CALL M$TIME( GET_NOW_UTS );
      980    16774    2         TSN_USED_BUF.UTS = NOW_UTS;
      981    16775    2         CALL M$WRITE( WRITE_TSN_USED )
      982    16776    3          WHENALTRETURN DO;
      983    16777    3            END;
      984    16778    3         DO I=1 TO NBR_SNLISTS - 1;
      985    16779    3            TSN_USED_KEY.TSN_SNLIST_NBR = TSN_USED_KEY.TSN_SNLIST_NBR + 1;
      986    16780    3            TSN_USED_BUF.TSN = TAPE_DCBLIST.DCB$(I)->F$DCB.PSN#;
      987    16781    3            CALL M$WRITE( WRITE_TSN_USED)
      988    16782    4             WHENALTRETURN DO;
      989    16783    4               END;
      990    16784    3            END;
      991    16785    2         END;
PL6.E3A0      #004=FLS$FLUSH_BLOCK File=FLS$FILE_PACKER.:E05TSI                  TUE 07/29/97 16:25 Page:183  
      992    16786
      993    16787        /***
      994    16788         *** If the end-of-volume was hit on the last write and this is
      995    16789         *** not the end of the current file, create the special volume
      996    16790         *** transition file.  The two tape write guarantee that a volume
      997    16791         *** transition will be made.
      998    16792         ***/
      999    16793
     1000    16794    1      IF EOVOL
     1001    16795    2       THEN DO;
     1002    16796    2         IF TAPE_DCBLIST.DCB$(0)->F$DCB.FCD# /* Tape file open?                  */
     1003    16797    2          THEN IF ADDR(NOT_END) = ADDR(NIL)
     1004    16798    2             THEN CALL FLI$TAPE_CLOSE ALTRET( JUSTALT );
     1005    16799    3             ELSE DO;
     1006    16800    3               CROSSED = '*';
     1007    16801    3               CALL FLI$TAPE_CLOSE( '1'B /* CVOL */ ) ALTRET( JUSTALT );
     1008    16802    3               END;
     1009    16803    2         CALL FLI$TAPE_OPEN( VECTOR(EFT_CVOL_FILE), TAPE_SN, TAPE_FSN, '0'B, '1'B, ,
             16803                  A_FIT_, ERR, DCB# ) ALTRET( REPALT );
     1010    16804    2         TEMP_TSN = ' ';
     1011    16805    2         CALL FLI$TAPE_WRITE( OUTBUF_, POFFC( BLOCK_GRAN$, LOW_BLK_TAG$ ), EOVOL,
             16805                  COMMAND, TEMP_TSN, TEMP_FSN ) ALTRET( WHATS_MISSING );
     1012    16806                                                /* Second write forces volume change  */
     1013    16807    2         CALL FLI$TAPE_WRITE( OUTBUF_, POFFC( BLOCK_GRAN$, LOW_BLK_TAG$ ), EOVOL,
             16807                  COMMAND, TEMP_TSN, TEMP_FSN ) ALTRET( WHATS_MISSING );
     1014    16808
     1015    16809    2         IF (TAPE_WRITE.V.IOERROK#         /* Return new FSN,SN                  */
     1016    16810    2           AND TEMP_TSN ~= ' '
     1017    16811    2           AND (LOW_BLK_TAG$->BLK_TAG.BEG  /* Current block                      */
     1018    16812    2           OR PREV_LOW_BLK_TAG_BEG))       /* Previous block                     */
     1019    16813    3          THEN DO;
     1020    16814    3            NEW_TSN = TEMP_TSN;
     1021    16815    3            NEW_FSN = TEMP_FSN;
     1022    16816    3            END;
     1023    16817
     1024    16818    2         CALL FLI$TAPE_CLOSE ALTRET( JUSTALT );
     1025    16819    2         CALL FLI$TAPE_OPEN( VECTOR(EFT_RESTRICT_FILE), TAPE_SN, TAPE_FSN, '0'B, '1'B,
PL6.E3A0      #004=FLS$FLUSH_BLOCK File=FLS$FILE_PACKER.:E05TSI                  TUE 07/29/97 16:25 Page:184  
             16819                  , A_FIT_, ERR, DCB# ) ALTRET( REPALT );
     1026    16820    2         NBR_FILE_BLOCKS = %MAX_NBR_FILE_BLOCKS + 1; /* Force new block          */
     1027    16821    2         END;
     1028    16822
     1029    16823    1      PREV_LOW_BLK_TAG_BEG = LOW_BLK_TAG$->BLK_TAG.BEG; /* Save block flag       */
     1030    16824
     1031    16825        /***
     1032    16826         *** Initialize assuming continuation of current file.  BLK_TAG0
     1033    16827         *** stays the same.
     1034    16828         ***/
     1035    16829
     1036    16830    1      IF ADDR(NOT_END) ~= ADDR(NIL)
     1037    16831    2       THEN DO;
     1038    16832    2         NEW_BLK_TAG$ = PINCRW( BLK_TAG0$, -SIZEW(BLK_TAG) );
     1039    16833    2         NEW_BLK_TAG$->BLK_TAG = BLK_TAG;
     1040    16834    2         BLK_TAG$ = NEW_BLK_TAG$;
     1041    16835    2         BLK_TAG.BEGX = 0;
     1042    16836    2         BLK_TAG.SIZE = 0;
     1043    16837    2         BLK_TAG.BEG = '0'B;
     1044    16838    2         BLK_TAG_NBR = 1;
     1045    16839    2         END;
     1046    16840    2       ELSE DO;
     1047    16841    2         BLK_TAG$ = BLK_TAG0$;
     1048    16842    2         BLK_TAG_NBR = 0;
     1049    16843    2         END;
     1050    16844
     1051    16845    1      LOW_BLK_TAG$ = BLK_TAG$;
     1052    16846    1      BLK_TAG.NBR = BLK_TAG_NBR;
     1053    16847    1      NBR_BLOCK_BYTES_REMAINING = NBR_BLOCK_BYTES;
     1054    16848    1      BLOCK_GRAN$ = GRAN_BASE$;
     1055    16849
     1056    16850    1      RETURN;
     1057    16851
     1058    16852        /***
     1059    16853         *** The following code lists the contents of the current block.
     1060    16854         ***/
     1061    16855
PL6.E3A0      #004=FLS$FLUSH_BLOCK File=FLS$FILE_PACKER.:E05TSI                  TUE 07/29/97 16:25 Page:185  
     1062    16856    1   WHATS_MISSING: ;
     1063    16857
     1064    16858    1      CALL FLI$RPT_ERR( E_MISSING_FILES, );
     1065    16859
     1066    16860    1      BLK_TAG$ = PINCRW( BLK_TAG0$, -SIZEW(BLK_TAG) ); /* Start at first tag     */
     1067    16861
     1068    16862    1      EFTFILE_DCB$->F$DCB.PSN# = BLK_TAG0.WHERE.PSN;
     1069    16863    1      EFTFILE_DCB$->F$DCB.ACCT# = BLK_TAG0.WHERE.ACCT;
     1070    16864
     1071    16865    2      DO WHILE( BLK_TAG$ >= LOW_BLK_TAG$ );
     1072    16866    2         ERR = '777777777777'O;
     1073    16867
     1074    16868    3         DO CASE( BLK_TAG.TYPE );          /* Set appropriate error code         */
     1075    16869    3          CASE( %FILE_DIR );
     1076    16870    3            ERR.CODE = %E$FDEOF;
     1077    16871    3          CASE( %ACCT_DIR );
     1078    16872    3            ERR.CODE = %E$ADEOF;
     1079    16873    3          CASE( %DEL_ACCT );
     1080    16874    3            ERR.CODE = %E$NOKEY;
     1081    16875    3            EFTFILE_DCB$->F$DCB.EXPIRE# = BLK_TAG.UTS;
     1082    16876    3          CASE( %CLEANUP_FILE );
     1083    16877    3            ERR.CODE = %E$NOFILE;
     1084    16878    3            EFTFILE_DCB$->F$DCB.EXPIRE# = BLK_TAG.UTS;
     1085    16879    3          CASE( %CLEANUP_ACCT );
     1086    16880    3            ERR.CODE = %E$NOPROC;
     1087    16881    3            EFTFILE_DCB$->F$DCB.EXPIRE# = BLK_TAG.UTS;
     1088    16882    3          CASE( %DEL_FILE );
     1089    16883    3            EFTFILE_DCB$->F$DCB.EXPIRE# = BLK_TAG.UTS;
     1090    16884    3          CASE( ELSE );
     1091    16885    3          END;
     1092    16886
     1093    16887    3         DO CASE( BLK_TAG.TYPE );
     1094    16888
     1095    16889    3          CASE( %FILE_DIR, %DEL_ACCT, %CLEANUP_ACCT );
     1096    16890    3            EFTFILE_DCB$->F$DCB.ACCT# = BLK_TAG.WHERE.ACCT;
     1097    16891    3            EFTFILE_DCB$->F$DCB.PSN# = BLK_TAG.WHERE.PSN;
     1098    16892    3            CALL FLP$WR_FILE_INFO( EFTFILE_DCB$, ADDR(NIL), '      ', 0, ' ', '1'B, ERR
PL6.E3A0      #004=FLS$FLUSH_BLOCK File=FLS$FILE_PACKER.:E05TSI                  TUE 07/29/97 16:25 Page:186  
             16892                     , '1'B, '0'B ) ALTRET( JUSTALT );
     1099    16893
     1100    16894    3          CASE( %ACCT_DIR );
     1101    16895    3            EFTFILE_DCB$->F$DCB.ACCT# = BLK_TAG.WHERE.ACCT;
     1102    16896    3            EFTFILE_DCB$->F$DCB.PSN# = BLK_TAG.WHERE.PSN;
     1103    16897
     1104    16898    3          CASE( %DEL_FILE, %CLEANUP_FILE );
     1105    16899    3            EFTFILE_DCB$->F$DCB.NAME#.C = BLK_TAG.NAME.C;
     1106    16900    3            EFTFILE_DCB$->F$DCB.NAME#.L = BLK_TAG.NAME.L;
     1107    16901    3            EFTFILE_DCB$->F$DCB.DESC = BLK_TAG.DESC;
     1108    16902    3            CALL FLP$WR_FILE_INFO( EFTFILE_DCB$, ADDR(NIL), '      ', 0, ' ', , ERR,
             16902                     '1'B, '0'B ) ALTRET( JUSTALT );
     1109    16903
     1110    16904    3          CASE( %INACTIVE_FILE, %REG_FILE, %ACUP_FILE, %IDS_FAST_FILE );
     1111    16905    3            EFTFILE_DCB$->F$DCB.NAME#.C = BLK_TAG.NAME.C;
     1112    16906    3            EFTFILE_DCB$->F$DCB.NAME#.L = BLK_TAG.NAME.L;
     1113    16907    3            EFTFILE_DCB$->F$DCB.DESC = BLK_TAG.DESC;
     1114    16908    3            CALL FLP$WR_FILE_INFO( EFTFILE_DCB$, ADDR(NIL), '      ', 0, ' ', , ERR,
             16908                     '1'B, '0'B ) ALTRET( JUSTALT );
     1115    16909
     1116    16910    3          CASE( ELSE );
     1117    16911                 /*N* Might want to give an error message */
     1118    16912    3          END;
     1119    16913    2         BLK_TAG$ = PINCRW( BLK_TAG$, -SIZEW(BLK_TAG) );
     1120    16914    2         END;
     1121    16915
     1122    16916    1      BLK_TAG$ = BLK_TAG0$;                /* Indicates nothing to flush         */
     1123    16917    1      ALTRETURN;
     1124    16918
     1125    16919    1   REPALT: ;
     1126    16920    1      CALL FLI$RPT_ERR( ERR, DCB# );
     1127    16921
     1128    16922    1   JUSTALT: ;
     1129    16923    1      ALTRETURN;
     1130    16924
     1131    16925    1   END FLS$FLUSH_BLOCK;

PL6.E3A0      #004=FLS$FLUSH_BLOCK File=FLS$FILE_PACKER.:E05TSI                  TUE 07/29/97 16:25 Page:187  
--  Include file information  --

   FLN_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   FLS_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   B_MICROPS_C.:E05TOU  is referenced.
   FLB_SUBS_C.:E05TOU  is referenced.
   FLI_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   FL_PERR_C.:E05TOU  is referenced.
   FLE_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   CP_6_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B_ERRORS_C.:E05TOU  is referenced.
      No diagnostics issued in procedure FLS$FLUSH_BLOCK.

   Procedure FLS$FLUSH_BLOCK requires 524 words for executable code.
   Procedure FLS$FLUSH_BLOCK requires 26 words of local(AUTO) storage.

    No errors detected in file FLS$FILE_PACKER.:E05TSI    .

PL6.E3A0      #004=FLS$FLUSH_BLOCK File=FLS$FILE_PACKER.:E05TSI                  TUE 07/29/97 16:25 Page:188  

 Object Unit name= FLS$FLUSH_BLOCK                            File name= FLS$FILE_PACKER.:E05TOU
 UTS= JUL 29 '97 16:25:19.92 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1   DCB   even  none     0      0  M$PRE_RET
    2   Data  even  none   109    155  FLS$FLUSH_BLOCK
    3   DCB   even  none     0      0  M$TSN_USED
    4   DCB   even  none     0      0  M$STATUS
    5   DCB   even  none     0      0  M$REBUILD
    6   DCB   even  none     0      0  M$ARCHIVE
    7   DCB   even  none     0      0  M$NODATA_LIST
    8   DCB   even  none     0      0  M$DISK_IN
    9   DCB   even  none     0      0  M$DISK00
   10   DCB   even  none     0      0  M$DISK01
   11   DCB   even  none     0      0  M$DISK02
   12   DCB   even  none     0      0  M$DISK03
   13  RoData even  UTS      3      3  FLS$FLUSH_BLOCK
   14   Proc  even  none   524   1014  FLS$FLUSH_BLOCK
   15  RoData even  none    21     25  FLS$FLUSH_BLOCK

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
    14      0   yes    yes     yes      Std        4  FLS$FLUSH_BLOCK
PL6.E3A0      #004=FLS$FLUSH_BLOCK File=FLS$FILE_PACKER.:E05TSI                  TUE 07/29/97 16:25 Page:189  

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       6 FLI$TAPE_WRITE
         yes           Std       1 FLE$ESTMOD
 yes     yes           Std       9 FLI$TAPE_OPEN
 yes     yes           Std       9 FLP$WR_FILE_INFO
         yes           Std       5 FLI$RPT_ERR
 yes     yes           Std       1 FLI$TAPE_CLOSE
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_AUTO_4
                       nStd      0 X66_ARET
                       nStd      0 X66_AALT

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                             r    E_MISSING_FILES                       NBR_SNLISTS
     TAPE_DCBLIST$                         TAPE_WRITE                            SNVECLIST$
     NOW_UTS                               GET_NOW_UTS                           DPLIST$
     DPRESLIST$                            DISK_FILE_SPEC$                       SPECCHARS
     EFTWORD                               M$PRE_RET                             RET_CMDS_NAME
     M$TSN_USED                            M$STATUS                              M$REBUILD
     M$ARCHIVE                             M$NODATA_LIST                         LOW_BLK_TAG$
     BLK_TAG$                              BLK_TAG0$                             BLK_TAG_NBR
     NBR_BLOCK_BYTES                       NBR_BLOCK_BYTES_REMAINING             NBR_BYTES_TO_MOVE
     DISK_GRAN$                            BLOCK_GRAN$                           OUTBUF_
     GRAN_BASE$                       r    A_FIT_                                NBR_FILE_BLOCKS
     EOVOL                                 CROSSED                          r    EFTFILE_DCB$
r    EFT_CVOL_FILE                    r    EFT_RESTRICT_FILE                     TAPE_SN
     TAPE_FSN                              LAST_TSN_USED                         RUN_NBR
     TSN_SET_NBR                           TSN_VOL                               TSN_USED_KEY
     TSN_USED_BUF                          TSN_USED_NAME                         WRITE_TSN_USED
     BACKUP_NAME                      r    ARCHIVE_NAME                     r    PRIME_FILE
PL6.E3A0      #004=FLS$FLUSH_BLOCK File=FLS$FILE_PACKER.:E05TSI                  TUE 07/29/97 16:25 Page:190  
r    DUAL_FILE                             REBUILD_NAME                          REBUILD_DIR_KEY
     REBUILD_KEY                           NODATA_FILE_NAME                      NODATA_KEY
     M$DISK_IN                             ARCHIVE$                              M$DISK00
     M$DISK01                              M$DISK02                              M$DISK03
     FROM_DISK_NAME                        FROM_DISK_ACCT                        FROM_DISK_SN
     B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID                                 NULLSID
PL6.E3A0      #004=FLS$FLUSH_BLOCK File=FLS$FILE_PACKER.:E05TSI                  TUE 07/29/97 16:25 Page:191  


      845        1        /*T***********************************************************/
      846        2        /*T*                                                         */
      847        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      848        4        /*T*                                                         */
      849        5        /*T***********************************************************/
      850        6        FLS$FLUSH_BLOCK: PROC( NOT_END, COMMAND, NEW_TSN, NEW_FSN ) ALTRET;

      6 14 000000   000000 700200 xent  FLS$FLUSH_B* TSX0  ! X66_AUTO_4
        14 000001   000032 000004                    ZERO    26,4

      851        7        /*F*  NAME: FLS$FLUSH_BLOCK
      852        8              PURPOSE: Flush current tape block to tape.
      853        9        */
      854       10
      855       11    1   DCL NOT_END BIT(1) ALIGNED;   /* Indicates if more of current file present    */
      856       12    1   DCL COMMAND SBIN ALIGNED;
      857       13    1   DCL NEW_TSN CHAR(6) CALIGNED; /* New current TSN returned on IOERRCONT,I-O err */
      858       14    1   DCL NEW_FSN UBIN WORD ALIGNED; /* New current FSN returned on IOERRCONT,I-O err */
      859       15
      860       16        /***
      861       17         *** INCLUDE
      862       18         ***/
      863       19
      864       20        %INCLUDE B_ERRORS_C;
      865     1147        %INCLUDE CP_6;
      866     6706        %INCLUDE FLE_DATA_R;
      867    12657        %INCLUDE FLI_DATA_R;
      868    14071        %INCLUDE FLS_DATA_R;
      869    15871        %INCLUDE FLN_DATA_R;
      870    16608
      871    16609        /***
      872    16610         *** ENTRY
      873    16611         ***/
      874    16612
      875    16613    1   DCL FLI$RPT_ERR ENTRY(5);
      876    16614    1   DCL FLI$TAPE_CLOSE ENTRY(1) ALTRET;
PL6.E3A0      #004=FLS$FLUSH_BLOCK File=FLS$FILE_PACKER.:E05TSI                  TUE 07/29/97 16:25 Page:192  
      877    16615    1   DCL FLI$TAPE_OPEN ENTRY(9) ALTRET;
      878    16616    1   DCL FLI$TAPE_WRITE ENTRY(6) ALTRET;
      879    16617    1   DCL FLP$WR_FILE_INFO ENTRY(9) ALTRET;
      880    16618    1   DCL FLE$ESTMOD ENTRY(1);
      881    16619
      882    16620        /***
      883    16621         *** AUTO
      884    16622         ***/
      885    16623
      886    16624    1   DCL DCB# SBIN AUTO;
      887    16625    1   DCL I SBIN AUTO;
      888    16626    1   DCL 1 ERR ALIGNED AUTO,
      889    16627    1         2 * BIT(12) UNAL,
      890    16628    1         2 * BIT(6) UNAL,
      891    16629    1         2 * BIT(1) UNAL,
      892    16630    1         2 CODE UBIN(14) UNAL,
      893    16631    1         2 * UBIN(3) UNAL;
      894    16632    1   DCL NEW_BLK_TAG$ PTR AUTO;
      895    16633    1   DCL TEMP_TSN CHAR(6) AUTO;
      896    16634    1   DCL TEMP_FSN UBIN WORD AUTO;
      897    16635
      898    16636        /***
      899    16637         *** STATIC
      900    16638         ***/
      901    16639
      902    16640    1   DCL PREV_LOW_BLK_TAG_BEG BIT(1) STATIC; /* Previous block tag beginning flag  */
      903    16641
      904    16642        /***
      905    16643         ***  SYMREF
      906    16644         ***/
      907    16645
      908    16646
      909    16647        /***
      910    16648         *** BASED
      911    16649         ***/
      912    16650
      913    16651        %F$DCB;
PL6.E3A0      #004=FLS$FLUSH_BLOCK File=FLS$FILE_PACKER.:E05TSI                  TUE 07/29/97 16:25 Page:193  
      914    16708
      915    16709        /****************************************/
      916    16710
      917    16711        /***
      918    16712         *** Write from first lowest block tag through highest file granule.
      919    16713         ***/
      920    16714
      921    16715    1      OUTBUF_.PTR$ = LOW_BLK_TAG$;

  16715 14 000002   000000 236000 xsym               LDQ     LOW_BLK_TAG$
        14 000003   000001 756000 xsym               STQ     OUTBUF_+1

      922    16716
      923    16717        /***
      924    16718         *** Set TAPE_SN for OD as it will only get set the first time through
      925    16719         *** (first OPEN). This must be done due to no CVOL control for OD.
      926    16720         ***/
      927    16721    1      IF SUBSTR(TAPE_DCBLIST.DCB$(0)->F$DCB.RES#,0,2) = 'OD'

  16721 14 000004   000000 470400 xsym               LDP0    TAPE_DCBLIST$
        14 000005   000001 471500                    LDP1    1,,PR0
        14 000006   100026 220100                    LDX0    22,,PR1
        14 000007   000000 100000 13                 CMPX0   0
        14 000010   000014 601000 14                 TNZ     s:16724

      928    16722    1       THEN TAPE_SN = TAPE_DCBLIST.DCB$(0)->F$DCB.PSN#;

  16722 14 000011   040000 100500                    MLR     fill='040'O
        14 000012   100024 000006                    ADSC9   20,,PR1                  cn=0,n=6
        14 000013   000000 000006 xsym               ADSC9   TAPE_SN                  cn=0,n=6

      929    16723
      930    16724    1      TEMP_FSN = 0;

  16724 14 000014   200015 450100                    STZ     TEMP_FSN,,AUTO

      931    16725    1      TEMP_TSN = ' ';
PL6.E3A0      #004=FLS$FLUSH_BLOCK File=FLS$FILE_PACKER.:E05TSI                  TUE 07/29/97 16:25 Page:194  

  16725 14 000015   040100 100400                    MLR     fill='040'O
        14 000016   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
        14 000017   200013 000006                    ADSC9   TEMP_TSN,,AUTO           cn=0,n=6

      932    16726    1     CALL FLI$TAPE_WRITE( OUTBUF_, POFFC( BLOCK_GRAN$, LOW_BLK_TAG$ ), EOVOL, COMMAND,
             16726               TEMP_TSN, TEMP_FSN ) ALTRET( WHATS_MISSING );

  16726 14 000020   000000 236000 xsym               LDQ     LOW_BLK_TAG$
        14 000021   000020 772000                    QRL     16
        14 000022   200016 756100                    STQ     TEMP_FSN+1,,AUTO
        14 000023   000000 236000 xsym               LDQ     BLOCK_GRAN$
        14 000024   000020 772000                    QRL     16
        14 000025   200016 136100                    SBLQ    TEMP_FSN+1,,AUTO
        14 000026   200017 756100                    STQ     TEMP_FSN+2,,AUTO
        14 000027   200015 631500                    EPPR1   TEMP_FSN,,AUTO
        14 000030   200025 451500                    STP1    TEMP_FSN+8,,AUTO
        14 000031   200013 633500                    EPPR3   TEMP_TSN,,AUTO
        14 000032   200024 453500                    STP3    TEMP_FSN+7,,AUTO
        14 000033   200004 236100                    LDQ     @COMMAND,,AUTO
        14 000034   000000 235000 15                 LDA     0
        14 000035   200022 757100                    STAQ    TEMP_FSN+5,,AUTO
        14 000036   200017 634500                    EPPR4   TEMP_FSN+2,,AUTO
        14 000037   200021 454500                    STP4    TEMP_FSN+4,,AUTO
        14 000040   000001 236000 15                 LDQ     1
        14 000041   200020 756100                    STQ     TEMP_FSN+3,,AUTO
        14 000042   200020 630500                    EPPR0   TEMP_FSN+3,,AUTO
        14 000043   000024 631400 xsym               EPPR1   B_VECTNIL+20
        14 000044   000000 701000 xent               TSX1    FLI$TAPE_WRITE
        14 000045   000513 702000 14                 TSX2    WHATS_MISSING

      933    16727        /***
      934    16728         *** If a SN change when IO ERR CONTINUE set, the previous block (already
      935    16729         *** written to tape) and the current block wil get rewritten to the next tape. If
      936    16730         *** this file begins in the current block or the previous block, must return new
      937    16731         *** SN and FSN so fit gets updated properly by FLM$MOVE routine.
      938    16732         ***/
PL6.E3A0      #004=FLS$FLUSH_BLOCK File=FLS$FILE_PACKER.:E05TSI                  TUE 07/29/97 16:25 Page:195  
      939    16733    1      IF (TAPE_WRITE.V.IOERROK#

  16733 14 000046   000010 236000 xsym               LDQ     TAPE_WRITE+8
        14 000047   000020 316007                    CANQ    16,DL
        14 000050   000072 600000 14                 TZE     s:16742
        14 000051   040000 106500                    CMPC    fill='040'O
        14 000052   200013 000006                    ADSC9   TEMP_TSN,,AUTO           cn=0,n=6
        14 000053   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
        14 000054   000072 600000 14                 TZE     s:16742
        14 000055   000000 470400 xsym               LDP0    LOW_BLK_TAG$
        14 000056   000000 236100                    LDQ     0,,PR0
        14 000057   000400 316007                    CANQ    256,DL
        14 000060   000063 601000 14                 TNZ     s:16738
        14 000061   000154 234000 2                  SZN     PREV_LOW_BLK_TAG_BEG
        14 000062   000072 605000 14                 TPL     s:16742

      940    16734    1        AND TEMP_TSN ~= ' '
      941    16735    1        AND (LOW_BLK_TAG$->BLK_TAG.BEG     /* Current block                      */
      942    16736    1        OR PREV_LOW_BLK_TAG_BEG))          /* Previous block                     */
      943    16737    2       THEN DO;

      944    16738    2         NEW_TSN = TEMP_TSN;

  16738 14 000063   200005 471500                    LDP1    @NEW_TSN,,AUTO
        14 000064   040100 100500                    MLR     fill='040'O
        14 000065   200013 000006                    ADSC9   TEMP_TSN,,AUTO           cn=0,n=6
        14 000066   100000 000006                    ADSC9   0,,PR1                   cn=0,n=6

      945    16739    2         NEW_FSN = TEMP_FSN;

  16739 14 000067   200006 470500                    LDP0    @NEW_FSN,,AUTO
        14 000070   200015 235100                    LDA     TEMP_FSN,,AUTO
        14 000071   000000 755100                    STA     0,,PR0

      946    16740    2         END;

      947    16741
PL6.E3A0      #004=FLS$FLUSH_BLOCK File=FLS$FILE_PACKER.:E05TSI                  TUE 07/29/97 16:25 Page:196  
      948    16742    1      NBR_FILE_BLOCKS = NBR_FILE_BLOCKS + 1;

  16742 14 000072   000000 054000 xsym               AOS     NBR_FILE_BLOCKS

      949    16743
      950    16744    1      IF LAST_TSN_USED ~= TAPE_SN

  16744 14 000073   040000 106400                    CMPC    fill='040'O
        14 000074   000000 000006 xsym               ADSC9   LAST_TSN_USED            cn=0,n=6
        14 000075   000000 000006 xsym               ADSC9   TAPE_SN                  cn=0,n=6
        14 000076   000220 600000 14                 TZE     s:16794

      951    16745    2       THEN DO;                            /* New reel                           */

      952    16746    2         TSN_VOL = TSN_VOL + 1;

  16746 14 000077   000000 054000 xsym               AOS     TSN_VOL

      953    16747        /***
      954    16748         *** If it is ARCHIVing and tapeset is from :ARCHIVE.$$EFT,
      955    16749         *** then call routine to update :ARCHIVE.$$EFT.
      956    16750         ***/
      957    16751    2         IF ARCHIVE$ ~= ADDR(NIL) AND LAST_TSN_USED ~= ' '

  16751 14 000100   000000 236000 xsym               LDQ     ARCHIVE$
        14 000101   000001 116000 xsym               CMPQ    B_VECTNIL+1
        14 000102   000113 600000 14                 TZE     s:16757
        14 000103   040000 106400                    CMPC    fill='040'O
        14 000104   000000 000006 xsym               ADSC9   LAST_TSN_USED            cn=0,n=6
        14 000105   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
        14 000106   000113 600000 14                 TZE     s:16757

      958    16752    2          THEN
      959    16753    2            CALL FLE$ESTMOD(%ARCHIVE);

  16753 14 000107   000002 630400 15                 EPPR0   2
        14 000110   000017 631400 xsym               EPPR1   B_VECTNIL+15
PL6.E3A0      #004=FLS$FLUSH_BLOCK File=FLS$FILE_PACKER.:E05TSI                  TUE 07/29/97 16:25 Page:197  
        14 000111   000000 701000 xent               TSX1    FLE$ESTMOD
        14 000112   000000 011000                    NOP     0

      960    16754        /***
      961    16755         *** If optical disk, determine if file crosses volume boundry.
      962    16756         ***/
      963    16757    2         IF SUBSTR(TAPE_DCBLIST.DCB$(0)->F$DCB.RES#,0,2) = 'OD'

  16757 14 000113   000000 470400 xsym               LDP0    TAPE_DCBLIST$
        14 000114   000001 471500                    LDP1    1,,PR0
        14 000115   100026 220100                    LDX0    22,,PR1
        14 000116   000000 100000 13                 CMPX0   0
        14 000117   000132 601000 14                 TNZ     s:16764
        14 000120   040000 106400                    CMPC    fill='040'O
        14 000121   000000 000006 xsym               ADSC9   LAST_TSN_USED            cn=0,n=6
        14 000122   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
        14 000123   000132 600000 14                 TZE     s:16764

      964    16758    2           AND LAST_TSN_USED ~= ' '
      965    16759    3          THEN DO;

      966    16760    3            IF LAST_TSN_USED ~= TAPE_SN

  16760 14 000124   040000 106400                    CMPC    fill='040'O
        14 000125   000000 000006 xsym               ADSC9   LAST_TSN_USED            cn=0,n=6
        14 000126   000000 000006 xsym               ADSC9   TAPE_SN                  cn=0,n=6
        14 000127   000132 600000 14                 TZE     s:16764

      967    16761    3             THEN CROSSED = '*';

  16761 14 000130   052000 236003                    LDQ     21504,DU
        14 000131   000000 756000 xsym               STQ     CROSSED

      968    16762    3            END;

      969    16763
      970    16764    2         LAST_TSN_USED = TAPE_SN;
PL6.E3A0      #004=FLS$FLUSH_BLOCK File=FLS$FILE_PACKER.:E05TSI                  TUE 07/29/97 16:25 Page:198  

  16764 14 000132   040000 100400                    MLR     fill='040'O
        14 000133   000000 000006 xsym               ADSC9   TAPE_SN                  cn=0,n=6
        14 000134   000000 000006 xsym               ADSC9   LAST_TSN_USED            cn=0,n=6

      971    16765    2         TSN_USED_KEY.L = LENGTHV(TSN_USED_KEY);

  16765 14 000135   004000 236003                    LDQ     2048,DU
        14 000136   000000 552040 xsym               STBQ    TSN_USED_KEY,'40'O

      972    16766    2         TSN_USED_KEY.RUN_NBR = RUN_NBR;

  16766 14 000137   000000 236000 xsym               LDQ     RUN_NBR
        14 000140   000022 736000                    QLS     18
        14 000141   000000 552020 xsym               STBQ    TSN_USED_KEY,'20'O

      973    16767    2         TSN_USED_KEY.TSN_SET_NBR = TSN_SET_NBR;

  16767 14 000142   000000 236000 xsym               LDQ     TSN_SET_NBR
        14 000143   000011 736000                    QLS     9
        14 000144   000000 552010 xsym               STBQ    TSN_USED_KEY,'10'O

      974    16768    2         TSN_USED_KEY.TSN_VOL = TSN_VOL;

  16768 14 000145   000000 236000 xsym               LDQ     TSN_VOL
        14 000146   000000 552004 xsym               STBQ    TSN_USED_KEY,'04'O

      975    16769    2         TSN_USED_KEY.TSN_SNLIST_NBR = 0;

  16769 14 000147   000000 236003                    LDQ     0,DU
        14 000150   000001 552040 xsym               STBQ    TSN_USED_KEY+1,'40'O

      976    16770    2         TSN_USED_BUF.TSN = TAPE_SN;

  16770 14 000151   040000 100400                    MLR     fill='040'O
        14 000152   000000 000006 xsym               ADSC9   TAPE_SN                  cn=0,n=6
        14 000153   000005 000006 xsym               ADSC9   TSN_USED_BUF+5           cn=0,n=6
PL6.E3A0      #004=FLS$FLUSH_BLOCK File=FLS$FILE_PACKER.:E05TSI                  TUE 07/29/97 16:25 Page:199  

      977    16771    2         TSN_USED_BUF.FSN = TAPE_FSN;

  16771 14 000154   000000 720000 xsym               LXL0    TAPE_FSN
        14 000155   000006 440000 xsym               SXL0    TSN_USED_BUF+6

      978    16772    2         TSN_USED_BUF.BACKUP_FSN = 0;

  16772 14 000156   000000 221003                    LDX1    0,DU
        14 000157   000007 741000 xsym               STX1    TSN_USED_BUF+7

      979    16773    2         CALL M$TIME( GET_NOW_UTS );

  16773 14 000160   000000 630400 xsym               EPPR0   GET_NOW_UTS
        14 000161   020004 713400                    CLIMB   8196
        14 000162   402000 401760                    pmme    nvectors=5

      980    16774    2         TSN_USED_BUF.UTS = NOW_UTS;

  16774 14 000163   000000 235000 xsym               LDA     NOW_UTS
        14 000164   000000 755000 xsym               STA     TSN_USED_BUF

      981    16775    2         CALL M$WRITE( WRITE_TSN_USED )

  16775 14 000165   000000 630400 xsym               EPPR0   WRITE_TSN_USED
        14 000166   440001 713400                    CLIMB   alt,write
        14 000167   401400 401760                    pmme    nvectors=4
        14 000170   000172 702000 14                 TSX2    s:16778
        14 000171   000172 710000 14                 TRA     s:16778

      982    16776    3          WHENALTRETURN DO;

      983    16777    3            END;

      984    16778    3         DO I=1 TO NBR_SNLISTS - 1;

  16778 14 000172   000001 235007                    LDA     1,DL
PL6.E3A0      #004=FLS$FLUSH_BLOCK File=FLS$FILE_PACKER.:E05TSI                  TUE 07/29/97 16:25 Page:200  
        14 000173   200010 755100                    STA     I,,AUTO
        14 000174   000215 710000 14                 TRA     s:16784+1

      985    16779    3            TSN_USED_KEY.TSN_SNLIST_NBR = TSN_USED_KEY.TSN_SNLIST_NBR + 1;

  16779 14 000175   000001 236000 xsym               LDQ     TSN_USED_KEY+1
        14 000176   001000 036003                    ADLQ    512,DU
        14 000177   000001 552040 xsym               STBQ    TSN_USED_KEY+1,'40'O

      986    16780    3            TSN_USED_BUF.TSN = TAPE_DCBLIST.DCB$(I)->F$DCB.PSN#;

  16780 14 000200   200010 235100                    LDA     I,,AUTO
        14 000201   000001 735000                    ALS     1
        14 000202   000000 470400 xsym               LDP0    TAPE_DCBLIST$
        14 000203   000001 471505                    LDP1    1,AL,PR0
        14 000204   040000 100500                    MLR     fill='040'O
        14 000205   100024 000006                    ADSC9   20,,PR1                  cn=0,n=6
        14 000206   000005 000006 xsym               ADSC9   TSN_USED_BUF+5           cn=0,n=6

      987    16781    3            CALL M$WRITE( WRITE_TSN_USED)

  16781 14 000207   000000 630400 xsym               EPPR0   WRITE_TSN_USED
        14 000210   440001 713400                    CLIMB   alt,write
        14 000211   401400 401760                    pmme    nvectors=4
        14 000212   000214 702000 14                 TSX2    s:16784
        14 000213   000214 710000 14                 TRA     s:16784

      988    16782    4             WHENALTRETURN DO;

      989    16783    4               END;

      990    16784    3            END;

  16784 14 000214   200010 054100                    AOS     I,,AUTO
        14 000215   200010 236100                    LDQ     I,,AUTO
        14 000216   000000 116000 xsym               CMPQ    NBR_SNLISTS
        14 000217   000175 604000 14                 TMI     s:16779
PL6.E3A0      #004=FLS$FLUSH_BLOCK File=FLS$FILE_PACKER.:E05TSI                  TUE 07/29/97 16:25 Page:201  

      991    16785    2         END;

      992    16786
      993    16787        /***
      994    16788         *** If the end-of-volume was hit on the last write and this is
      995    16789         *** not the end of the current file, create the special volume
      996    16790         *** transition file.  The two tape write guarantee that a volume
      997    16791         *** transition will be made.
      998    16792         ***/
      999    16793
     1000    16794    1      IF EOVOL

  16794 14 000220   000000 234000 xsym               SZN     EOVOL
        14 000221   000442 605000 14                 TPL     s:16823

     1001    16795    2       THEN DO;

     1002    16796    2         IF TAPE_DCBLIST.DCB$(0)->F$DCB.FCD# /* Tape file open?                  */

  16796 14 000222   000000 470400 xsym               LDP0    TAPE_DCBLIST$
        14 000223   000001 471500                    LDP1    1,,PR0
        14 000224   100031 236100                    LDQ     25,,PR1
        14 000225   020000 316007                    CANQ    8192,DL
        14 000226   000244 600000 14                 TZE     s:16803

     1003    16797    2          THEN IF ADDR(NOT_END) = ADDR(NIL)

  16797 14 000227   200003 236100                    LDQ     @NOT_END,,AUTO
        14 000230   000001 116000 xsym               CMPQ    B_VECTNIL+1
        14 000231   000236 601000 14                 TNZ     s:16800

     1004    16798    2             THEN CALL FLI$TAPE_CLOSE ALTRET( JUSTALT );

  16798 14 000232   000002 631400 xsym               EPPR1   B_VECTNIL+2
        14 000233   000000 701000 xent               TSX1    FLI$TAPE_CLOSE
        14 000234   001013 702000 14                 TSX2    JUSTALT
PL6.E3A0      #004=FLS$FLUSH_BLOCK File=FLS$FILE_PACKER.:E05TSI                  TUE 07/29/97 16:25 Page:202  
        14 000235   000244 710000 14                 TRA     s:16803

     1005    16799    3             ELSE DO;

     1006    16800    3               CROSSED = '*';

  16800 14 000236   052000 236003                    LDQ     21504,DU
        14 000237   000000 756000 xsym               STQ     CROSSED

     1007    16801    3               CALL FLI$TAPE_CLOSE( '1'B /* CVOL */ ) ALTRET( JUSTALT );

  16801 14 000240   000003 630400 15                 EPPR0   3
        14 000241   000017 631400 xsym               EPPR1   B_VECTNIL+15
        14 000242   000000 701000 xent               TSX1    FLI$TAPE_CLOSE
        14 000243   001013 702000 14                 TSX2    JUSTALT

     1008    16802    3               END;

     1009    16803    2         CALL FLI$TAPE_OPEN( VECTOR(EFT_CVOL_FILE), TAPE_SN, TAPE_FSN, '0'B, '1'B, ,
             16803                  A_FIT_, ERR, DCB# ) ALTRET( REPALT );

  16803 14 000244   000000 236000 xsym               LDQ     EFT_CVOL_FILE
        14 000245   000033 772000                    QRL     27
        14 000246   000001 620006                    EAX0    1,QL
        14 000247   000000 635010                    EAA     0,X0
        14 000250   000002 771000                    ARL     2
        14 000251   000140 135007                    SBLA    96,DL
        14 000252   000004 236000 15                 LDQ     4
        14 000253   200016 757100                    STAQ    TEMP_FSN+1,,AUTO
        14 000254   200007 630500                    EPPR0   DCB#,,AUTO
        14 000255   200030 450500                    STP0    TEMP_FSN+11,,AUTO
        14 000256   200011 631500                    EPPR1   ERR,,AUTO
        14 000257   200027 451500                    STP1    TEMP_FSN+10,,AUTO
        14 000260   000006 236000 15                 LDQ     6
        14 000261   200026 756100                    STQ     TEMP_FSN+9,,AUTO
        14 000262   000001 236000 xsym               LDQ     B_VECTNIL+1
        14 000263   000003 235000 15                 LDA     3
PL6.E3A0      #004=FLS$FLUSH_BLOCK File=FLS$FILE_PACKER.:E05TSI                  TUE 07/29/97 16:25 Page:203  
        14 000264   200024 757100                    STAQ    TEMP_FSN+7,,AUTO
        14 000265   000010 237000 15                 LDAQ    8
        14 000266   200022 757100                    STAQ    TEMP_FSN+5,,AUTO
        14 000267   000012 236000 15                 LDQ     10
        14 000270   200021 756100                    STQ     TEMP_FSN+4,,AUTO
        14 000271   200016 633500                    EPPR3   TEMP_FSN+1,,AUTO
        14 000272   200020 453500                    STP3    TEMP_FSN+3,,AUTO
        14 000273   200020 630500                    EPPR0   TEMP_FSN+3,,AUTO
        14 000274   000005 631400 15                 EPPR1   5
        14 000275   000000 701000 xent               TSX1    FLI$TAPE_OPEN
        14 000276   001003 702000 14                 TSX2    REPALT

     1010    16804    2         TEMP_TSN = ' ';

  16804 14 000277   040100 100400                    MLR     fill='040'O
        14 000300   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
        14 000301   200013 000006                    ADSC9   TEMP_TSN,,AUTO           cn=0,n=6

     1011    16805    2         CALL FLI$TAPE_WRITE( OUTBUF_, POFFC( BLOCK_GRAN$, LOW_BLK_TAG$ ), EOVOL,
             16805                  COMMAND, TEMP_TSN, TEMP_FSN ) ALTRET( WHATS_MISSING );

  16805 14 000302   000000 236000 xsym               LDQ     LOW_BLK_TAG$
        14 000303   000020 772000                    QRL     16
        14 000304   200016 756100                    STQ     TEMP_FSN+1,,AUTO
        14 000305   000000 236000 xsym               LDQ     BLOCK_GRAN$
        14 000306   000020 772000                    QRL     16
        14 000307   200016 136100                    SBLQ    TEMP_FSN+1,,AUTO
        14 000310   200017 756100                    STQ     TEMP_FSN+2,,AUTO
        14 000311   200015 630500                    EPPR0   TEMP_FSN,,AUTO
        14 000312   200025 450500                    STP0    TEMP_FSN+8,,AUTO
        14 000313   200013 631500                    EPPR1   TEMP_TSN,,AUTO
        14 000314   200024 451500                    STP1    TEMP_FSN+7,,AUTO
        14 000315   200004 236100                    LDQ     @COMMAND,,AUTO
        14 000316   000000 235000 15                 LDA     0
        14 000317   200022 757100                    STAQ    TEMP_FSN+5,,AUTO
        14 000320   200017 633500                    EPPR3   TEMP_FSN+2,,AUTO
        14 000321   200021 453500                    STP3    TEMP_FSN+4,,AUTO
PL6.E3A0      #004=FLS$FLUSH_BLOCK File=FLS$FILE_PACKER.:E05TSI                  TUE 07/29/97 16:25 Page:204  
        14 000322   000001 236000 15                 LDQ     1
        14 000323   200020 756100                    STQ     TEMP_FSN+3,,AUTO
        14 000324   200020 630500                    EPPR0   TEMP_FSN+3,,AUTO
        14 000325   000024 631400 xsym               EPPR1   B_VECTNIL+20
        14 000326   000000 701000 xent               TSX1    FLI$TAPE_WRITE
        14 000327   000513 702000 14                 TSX2    WHATS_MISSING

     1012    16806                                                /* Second write forces volume change  */
     1013    16807    2         CALL FLI$TAPE_WRITE( OUTBUF_, POFFC( BLOCK_GRAN$, LOW_BLK_TAG$ ), EOVOL,
             16807                  COMMAND, TEMP_TSN, TEMP_FSN ) ALTRET( WHATS_MISSING );

  16807 14 000330   000000 236000 xsym               LDQ     LOW_BLK_TAG$
        14 000331   000020 772000                    QRL     16
        14 000332   200016 756100                    STQ     TEMP_FSN+1,,AUTO
        14 000333   000000 236000 xsym               LDQ     BLOCK_GRAN$
        14 000334   000020 772000                    QRL     16
        14 000335   200016 136100                    SBLQ    TEMP_FSN+1,,AUTO
        14 000336   200017 756100                    STQ     TEMP_FSN+2,,AUTO
        14 000337   200015 630500                    EPPR0   TEMP_FSN,,AUTO
        14 000340   200025 450500                    STP0    TEMP_FSN+8,,AUTO
        14 000341   200013 631500                    EPPR1   TEMP_TSN,,AUTO
        14 000342   200024 451500                    STP1    TEMP_FSN+7,,AUTO
        14 000343   200004 236100                    LDQ     @COMMAND,,AUTO
        14 000344   000000 235000 15                 LDA     0
        14 000345   200022 757100                    STAQ    TEMP_FSN+5,,AUTO
        14 000346   200017 633500                    EPPR3   TEMP_FSN+2,,AUTO
        14 000347   200021 453500                    STP3    TEMP_FSN+4,,AUTO
        14 000350   000001 236000 15                 LDQ     1
        14 000351   200020 756100                    STQ     TEMP_FSN+3,,AUTO
        14 000352   200020 630500                    EPPR0   TEMP_FSN+3,,AUTO
        14 000353   000024 631400 xsym               EPPR1   B_VECTNIL+20
        14 000354   000000 701000 xent               TSX1    FLI$TAPE_WRITE
        14 000355   000513 702000 14                 TSX2    WHATS_MISSING

     1014    16808
     1015    16809    2         IF (TAPE_WRITE.V.IOERROK#         /* Return new FSN,SN                  */

PL6.E3A0      #004=FLS$FLUSH_BLOCK File=FLS$FILE_PACKER.:E05TSI                  TUE 07/29/97 16:25 Page:205  
  16809 14 000356   000010 236000 xsym               LDQ     TAPE_WRITE+8
        14 000357   000020 316007                    CANQ    16,DL
        14 000360   000402 600000 14                 TZE     s:16818
        14 000361   040000 106500                    CMPC    fill='040'O
        14 000362   200013 000006                    ADSC9   TEMP_TSN,,AUTO           cn=0,n=6
        14 000363   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
        14 000364   000402 600000 14                 TZE     s:16818
        14 000365   000000 470400 xsym               LDP0    LOW_BLK_TAG$
        14 000366   000000 236100                    LDQ     0,,PR0
        14 000367   000400 316007                    CANQ    256,DL
        14 000370   000373 601000 14                 TNZ     s:16814
        14 000371   000154 234000 2                  SZN     PREV_LOW_BLK_TAG_BEG
        14 000372   000402 605000 14                 TPL     s:16818

     1016    16810    2           AND TEMP_TSN ~= ' '
     1017    16811    2           AND (LOW_BLK_TAG$->BLK_TAG.BEG  /* Current block                      */
     1018    16812    2           OR PREV_LOW_BLK_TAG_BEG))       /* Previous block                     */
     1019    16813    3          THEN DO;

     1020    16814    3            NEW_TSN = TEMP_TSN;

  16814 14 000373   200005 471500                    LDP1    @NEW_TSN,,AUTO
        14 000374   040100 100500                    MLR     fill='040'O
        14 000375   200013 000006                    ADSC9   TEMP_TSN,,AUTO           cn=0,n=6
        14 000376   100000 000006                    ADSC9   0,,PR1                   cn=0,n=6

     1021    16815    3            NEW_FSN = TEMP_FSN;

  16815 14 000377   200006 470500                    LDP0    @NEW_FSN,,AUTO
        14 000400   200015 235100                    LDA     TEMP_FSN,,AUTO
        14 000401   000000 755100                    STA     0,,PR0

     1022    16816    3            END;

     1023    16817
     1024    16818    2         CALL FLI$TAPE_CLOSE ALTRET( JUSTALT );

PL6.E3A0      #004=FLS$FLUSH_BLOCK File=FLS$FILE_PACKER.:E05TSI                  TUE 07/29/97 16:25 Page:206  
  16818 14 000402   000002 631400 xsym               EPPR1   B_VECTNIL+2
        14 000403   000000 701000 xent               TSX1    FLI$TAPE_CLOSE
        14 000404   001013 702000 14                 TSX2    JUSTALT

     1025    16819    2         CALL FLI$TAPE_OPEN( VECTOR(EFT_RESTRICT_FILE), TAPE_SN, TAPE_FSN, '0'B, '1'B,
             16819                  , A_FIT_, ERR, DCB# ) ALTRET( REPALT );

  16819 14 000405   000000 236000 xsym               LDQ     EFT_RESTRICT_FILE
        14 000406   000033 772000                    QRL     27
        14 000407   000001 620006                    EAX0    1,QL
        14 000410   000000 635010                    EAA     0,X0
        14 000411   000002 771000                    ARL     2
        14 000412   000140 135007                    SBLA    96,DL
        14 000413   000013 236000 15                 LDQ     11
        14 000414   200016 757100                    STAQ    TEMP_FSN+1,,AUTO
        14 000415   200007 630500                    EPPR0   DCB#,,AUTO
        14 000416   200030 450500                    STP0    TEMP_FSN+11,,AUTO
        14 000417   200011 631500                    EPPR1   ERR,,AUTO
        14 000420   200027 451500                    STP1    TEMP_FSN+10,,AUTO
        14 000421   000006 236000 15                 LDQ     6
        14 000422   200026 756100                    STQ     TEMP_FSN+9,,AUTO
        14 000423   000001 236000 xsym               LDQ     B_VECTNIL+1
        14 000424   000003 235000 15                 LDA     3
        14 000425   200024 757100                    STAQ    TEMP_FSN+7,,AUTO
        14 000426   000010 237000 15                 LDAQ    8
        14 000427   200022 757100                    STAQ    TEMP_FSN+5,,AUTO
        14 000430   000012 236000 15                 LDQ     10
        14 000431   200021 756100                    STQ     TEMP_FSN+4,,AUTO
        14 000432   200016 633500                    EPPR3   TEMP_FSN+1,,AUTO
        14 000433   200020 453500                    STP3    TEMP_FSN+3,,AUTO
        14 000434   200020 630500                    EPPR0   TEMP_FSN+3,,AUTO
        14 000435   000005 631400 15                 EPPR1   5
        14 000436   000000 701000 xent               TSX1    FLI$TAPE_OPEN
        14 000437   001003 702000 14                 TSX2    REPALT

     1026    16820    2         NBR_FILE_BLOCKS = %MAX_NBR_FILE_BLOCKS + 1; /* Force new block          */

PL6.E3A0      #004=FLS$FLUSH_BLOCK File=FLS$FILE_PACKER.:E05TSI                  TUE 07/29/97 16:25 Page:207  
  16820 14 000440   000063 235007                    LDA     51,DL
        14 000441   000000 755000 xsym               STA     NBR_FILE_BLOCKS

     1027    16821    2         END;

     1028    16822
     1029    16823    1      PREV_LOW_BLK_TAG_BEG = LOW_BLK_TAG$->BLK_TAG.BEG; /* Save block flag       */

  16823 14 000442   000000 470400 xsym               LDP0    LOW_BLK_TAG$
        14 000443   000000 236100                    LDQ     0,,PR0
        14 000444   000033 736000                    QLS     27
        14 000445   400000 376003                    ANQ     -131072,DU
        14 000446   000154 756000 2                  STQ     PREV_LOW_BLK_TAG_BEG

     1030    16824
     1031    16825        /***
     1032    16826         *** Initialize assuming continuation of current file.  BLK_TAG0
     1033    16827         *** stays the same.
     1034    16828         ***/
     1035    16829
     1036    16830    1      IF ADDR(NOT_END) ~= ADDR(NIL)

  16830 14 000447   200003 236100                    LDQ     @NOT_END,,AUTO
        14 000450   000001 116000 xsym               CMPQ    B_VECTNIL+1
        14 000451   000475 600000 14                 TZE     s:16841

     1037    16831    2       THEN DO;

     1038    16832    2         NEW_BLK_TAG$ = PINCRW( BLK_TAG0$, -SIZEW(BLK_TAG) );

  16832 14 000452   000000 236000 xsym               LDQ     BLK_TAG0$
        14 000453   777765 036003                    ADLQ    -11,DU
        14 000454   200012 756100                    STQ     NEW_BLK_TAG$,,AUTO

     1039    16833    2         NEW_BLK_TAG$->BLK_TAG = BLK_TAG;

  16833 14 000455   000000 471400 xsym               LDP1    BLK_TAG$
PL6.E3A0      #004=FLS$FLUSH_BLOCK File=FLS$FILE_PACKER.:E05TSI                  TUE 07/29/97 16:25 Page:208  
        14 000456   200012 473500                    LDP3    NEW_BLK_TAG$,,AUTO
        14 000457   000100 100500                    MLR     fill='000'O
        14 000460   100000 000054                    ADSC9   0,,PR1                   cn=0,n=44
        14 000461   300000 000054                    ADSC9   0,,PR3                   cn=0,n=44

     1040    16834    2         BLK_TAG$ = NEW_BLK_TAG$;

  16834 14 000462   000000 756000 xsym               STQ     BLK_TAG$

     1041    16835    2         BLK_TAG.BEGX = 0;

  16835 14 000463   000000 220003                    LDX0    0,DU
        14 000464   000000 470400 xsym               LDP0    BLK_TAG$
        14 000465   000000 740100                    STX0    0,,PR0

     1042    16836    2         BLK_TAG.SIZE = 0;

  16836 14 000466   000000 470400 xsym               LDP0    BLK_TAG$
        14 000467   000001 740100                    STX0    1,,PR0

     1043    16837    2         BLK_TAG.BEG = '0'B;

  16837 14 000470   000014 236000 15                 LDQ     12
        14 000471   000000 356100                    ANSQ    0,,PR0

     1044    16838    2         BLK_TAG_NBR = 1;

  16838 14 000472   000001 235007                    LDA     1,DL
        14 000473   000000 755000 xsym               STA     BLK_TAG_NBR

     1045    16839    2         END;

  16839 14 000474   000500 710000 14                 TRA     s:16845

     1046    16840    2       ELSE DO;

     1047    16841    2         BLK_TAG$ = BLK_TAG0$;
PL6.E3A0      #004=FLS$FLUSH_BLOCK File=FLS$FILE_PACKER.:E05TSI                  TUE 07/29/97 16:25 Page:209  

  16841 14 000475   000000 236000 xsym               LDQ     BLK_TAG0$
        14 000476   000000 756000 xsym               STQ     BLK_TAG$

     1048    16842    2         BLK_TAG_NBR = 0;

  16842 14 000477   000000 450000 xsym               STZ     BLK_TAG_NBR

     1049    16843    2         END;

     1050    16844
     1051    16845    1      LOW_BLK_TAG$ = BLK_TAG$;

  16845 14 000500   000000 236000 xsym               LDQ     BLK_TAG$
        14 000501   000000 756000 xsym               STQ     LOW_BLK_TAG$

     1052    16846    1      BLK_TAG.NBR = BLK_TAG_NBR;

  16846 14 000502   000000 470400 xsym               LDP0    BLK_TAG$
        14 000503   000000 236000 xsym               LDQ     BLK_TAG_NBR
        14 000504   000011 736000                    QLS     9
        14 000505   000000 552110                    STBQ    0,'10'O,PR0

     1053    16847    1      NBR_BLOCK_BYTES_REMAINING = NBR_BLOCK_BYTES;

  16847 14 000506   000000 235000 xsym               LDA     NBR_BLOCK_BYTES
        14 000507   000000 755000 xsym               STA     NBR_BLOCK_BYTES_REMAINING

     1054    16848    1      BLOCK_GRAN$ = GRAN_BASE$;

  16848 14 000510   000000 236000 xsym               LDQ     GRAN_BASE$
        14 000511   000000 756000 xsym               STQ     BLOCK_GRAN$

     1055    16849
     1056    16850    1      RETURN;

  16850 14 000512   000000 702200 xent               TSX2  ! X66_ARET
PL6.E3A0      #004=FLS$FLUSH_BLOCK File=FLS$FILE_PACKER.:E05TSI                  TUE 07/29/97 16:25 Page:210  

  16848 14 000513                       WHATS_MISSI* null
     1057    16851
     1058    16852        /***
     1059    16853         *** The following code lists the contents of the current block.
     1060    16854         ***/
     1061    16855
     1062    16856    1   WHATS_MISSING: ;
     1063    16857
     1064    16858    1      CALL FLI$RPT_ERR( E_MISSING_FILES, );

  16858 14 000513   000015 630400 15                 EPPR0   13
        14 000514   000017 631400 xsym               EPPR1   B_VECTNIL+15
        14 000515   000000 701000 xent               TSX1    FLI$RPT_ERR
        14 000516   000000 011000                    NOP     0

     1065    16859
     1066    16860    1      BLK_TAG$ = PINCRW( BLK_TAG0$, -SIZEW(BLK_TAG) ); /* Start at first tag     */

  16860 14 000517   000000 236000 xsym               LDQ     BLK_TAG0$
        14 000520   777765 036003                    ADLQ    -11,DU
        14 000521   000000 756000 xsym               STQ     BLK_TAG$

     1067    16861
     1068    16862    1      EFTFILE_DCB$->F$DCB.PSN# = BLK_TAG0.WHERE.PSN;

  16862 14 000522   000000 470400 xsym               LDP0    BLK_TAG0$
        14 000523   000000 471400 xsym               LDP1    EFTFILE_DCB$
        14 000524   040100 100500                    MLR     fill='040'O
        14 000525   000003 000006                    ADSC9   3,,PR0                   cn=0,n=6
        14 000526   100024 000006                    ADSC9   20,,PR1                  cn=0,n=6

     1069    16863    1      EFTFILE_DCB$->F$DCB.ACCT# = BLK_TAG0.WHERE.ACCT;

  16863 14 000527   040100 100500                    MLR     fill='040'O
        14 000530   000004 400010                    ADSC9   4,,PR0                   cn=2,n=8
        14 000531   100020 000010                    ADSC9   16,,PR1                  cn=0,n=8
PL6.E3A0      #004=FLS$FLUSH_BLOCK File=FLS$FILE_PACKER.:E05TSI                  TUE 07/29/97 16:25 Page:211  

     1070    16864
     1071    16865    2      DO WHILE( BLK_TAG$ >= LOW_BLK_TAG$ );

  16865 14 000532   000000 116000 xsym               CMPQ    LOW_BLK_TAG$
        14 000533   001000 602000 14                 TNC     s:16916

     1072    16866    2         ERR = '777777777777'O;

  16866 14 000534   000027 236000 xsym               LDQ     B_VECTNIL+23
        14 000535   200011 756100                    STQ     ERR,,AUTO

     1073    16867
     1074    16868    3         DO CASE( BLK_TAG.TYPE );          /* Set appropriate error code         */

  16868 14 000536   000000 470400 xsym               LDP0    BLK_TAG$
        14 000537   000000 720100                    LXL0    0,,PR0
        14 000540   000077 360003                    ANX0    63,DU
        14 000541   000011 100003                    CMPX0   9,DU
        14 000542   000544 602010 14                 TNC     s:16868+6,X0
        14 000543   000616 710000 14                 TRA     s:16887
        14 000544   000616 710000 14                 TRA     s:16887
        14 000545   000612 710000 14                 TRA     s:16883
        14 000546   000616 710000 14                 TRA     s:16887
        14 000547   000616 710000 14                 TRA     s:16887
        14 000550   000555 710000 14                 TRA     s:16870
        14 000551   000561 710000 14                 TRA     s:16872
        14 000552   000565 710000 14                 TRA     s:16874
        14 000553   000603 710000 14                 TRA     s:16880
        14 000554   000574 710000 14                 TRA     s:16877

     1075    16869    3          CASE( %FILE_DIR );

     1076    16870    3            ERR.CODE = %E$FDEOF;

  16870 14 000555   000016 376000 15                 ANQ     14
        14 000556   001540 276007                    ORQ     864,DL
PL6.E3A0      #004=FLS$FLUSH_BLOCK File=FLS$FILE_PACKER.:E05TSI                  TUE 07/29/97 16:25 Page:212  
        14 000557   200011 756100                    STQ     ERR,,AUTO
        14 000560   000616 710000 14                 TRA     s:16887

     1077    16871    3          CASE( %ACCT_DIR );

     1078    16872    3            ERR.CODE = %E$ADEOF;

  16872 14 000561   000016 376000 15                 ANQ     14
        14 000562   001750 276007                    ORQ     1000,DL
        14 000563   200011 756100                    STQ     ERR,,AUTO
        14 000564   000616 710000 14                 TRA     s:16887

     1079    16873    3          CASE( %DEL_ACCT );

     1080    16874    3            ERR.CODE = %E$NOKEY;

  16874 14 000565   000016 376000 15                 ANQ     14
        14 000566   001020 276007                    ORQ     528,DL
        14 000567   200011 756100                    STQ     ERR,,AUTO

     1081    16875    3            EFTFILE_DCB$->F$DCB.EXPIRE# = BLK_TAG.UTS;

  16875 14 000570   000002 235100                    LDA     2,,PR0
        14 000571   000000 471400 xsym               LDP1    EFTFILE_DCB$
        14 000572   100035 755100                    STA     29,,PR1
        14 000573   000616 710000 14                 TRA     s:16887

     1082    16876    3          CASE( %CLEANUP_FILE );

     1083    16877    3            ERR.CODE = %E$NOFILE;

  16877 14 000574   000016 376000 15                 ANQ     14
        14 000575   001610 276007                    ORQ     904,DL
        14 000576   200011 756100                    STQ     ERR,,AUTO

     1084    16878    3            EFTFILE_DCB$->F$DCB.EXPIRE# = BLK_TAG.UTS;

PL6.E3A0      #004=FLS$FLUSH_BLOCK File=FLS$FILE_PACKER.:E05TSI                  TUE 07/29/97 16:25 Page:213  
  16878 14 000577   000002 235100                    LDA     2,,PR0
        14 000600   000000 471400 xsym               LDP1    EFTFILE_DCB$
        14 000601   100035 755100                    STA     29,,PR1
        14 000602   000616 710000 14                 TRA     s:16887

     1085    16879    3          CASE( %CLEANUP_ACCT );

     1086    16880    3            ERR.CODE = %E$NOPROC;

  16880 14 000603   000016 376000 15                 ANQ     14
        14 000604   003520 276007                    ORQ     1872,DL
        14 000605   200011 756100                    STQ     ERR,,AUTO

     1087    16881    3            EFTFILE_DCB$->F$DCB.EXPIRE# = BLK_TAG.UTS;

  16881 14 000606   000002 235100                    LDA     2,,PR0
        14 000607   000000 471400 xsym               LDP1    EFTFILE_DCB$
        14 000610   100035 755100                    STA     29,,PR1
        14 000611   000616 710000 14                 TRA     s:16887

     1088    16882    3          CASE( %DEL_FILE );

     1089    16883    3            EFTFILE_DCB$->F$DCB.EXPIRE# = BLK_TAG.UTS;

  16883 14 000612   000002 235100                    LDA     2,,PR0
        14 000613   000000 471400 xsym               LDP1    EFTFILE_DCB$
        14 000614   100035 755100                    STA     29,,PR1
        14 000615   000616 710000 14                 TRA     s:16887

     1090    16884    3          CASE( ELSE );

     1091    16885    3          END;

     1092    16886
     1093    16887    3         DO CASE( BLK_TAG.TYPE );

  16887 14 000616   000000 720100                    LXL0    0,,PR0
PL6.E3A0      #004=FLS$FLUSH_BLOCK File=FLS$FILE_PACKER.:E05TSI                  TUE 07/29/97 16:25 Page:214  
        14 000617   000077 360003                    ANX0    63,DU
        14 000620   000012 100003                    CMPX0   10,DU
        14 000621   000623 602010 14                 TNC     s:16887+5,X0
        14 000622   000773 710000 14                 TRA     s:16913
        14 000623   000736 710000 14                 TRA     s:16905
        14 000624   000701 710000 14                 TRA     s:16899
        14 000625   000736 710000 14                 TRA     s:16905
        14 000626   000736 710000 14                 TRA     s:16905
        14 000627   000635 710000 14                 TRA     s:16890
        14 000630   000671 710000 14                 TRA     s:16895
        14 000631   000635 710000 14                 TRA     s:16890
        14 000632   000635 710000 14                 TRA     s:16890
        14 000633   000701 710000 14                 TRA     s:16899
        14 000634   000736 710000 14                 TRA     s:16905

     1094    16888
     1095    16889    3          CASE( %FILE_DIR, %DEL_ACCT, %CLEANUP_ACCT );

     1096    16890    3            EFTFILE_DCB$->F$DCB.ACCT# = BLK_TAG.WHERE.ACCT;

  16890 14 000635   000000 471400 xsym               LDP1    EFTFILE_DCB$
        14 000636   040100 100500                    MLR     fill='040'O
        14 000637   000004 400010                    ADSC9   4,,PR0                   cn=2,n=8
        14 000640   100020 000010                    ADSC9   16,,PR1                  cn=0,n=8

     1097    16891    3            EFTFILE_DCB$->F$DCB.PSN# = BLK_TAG.WHERE.PSN;

  16891 14 000641   040100 100500                    MLR     fill='040'O
        14 000642   000003 000006                    ADSC9   3,,PR0                   cn=0,n=6
        14 000643   100024 000006                    ADSC9   20,,PR1                  cn=0,n=6

     1098    16892    3            CALL FLP$WR_FILE_INFO( EFTFILE_DCB$, ADDR(NIL), '     ', 0, ' ', '1'B, ERR
             16892                     , '1'B, '0'B ) ALTRET( JUSTALT );

  16892 14 000644   000001 236000 xsym               LDQ     B_VECTNIL+1
        14 000645   200016 756100                    STQ     TEMP_FSN+1,,AUTO
        14 000646   000020 237000 15                 LDAQ    16
PL6.E3A0      #004=FLS$FLUSH_BLOCK File=FLS$FILE_PACKER.:E05TSI                  TUE 07/29/97 16:25 Page:215  
        14 000647   200026 757100                    STAQ    TEMP_FSN+9,,AUTO
        14 000650   200011 633500                    EPPR3   ERR,,AUTO
        14 000651   200025 453500                    STP3    TEMP_FSN+8,,AUTO
        14 000652   000003 236000 15                 LDQ     3
        14 000653   200024 756100                    STQ     TEMP_FSN+7,,AUTO
        14 000654   000022 237000 15                 LDAQ    18
        14 000655   200022 757100                    STAQ    TEMP_FSN+5,,AUTO
        14 000656   000017 236000 15                 LDQ     15
        14 000657   200021 756100                    STQ     TEMP_FSN+4,,AUTO
        14 000660   200016 634500                    EPPR4   TEMP_FSN+1,,AUTO
        14 000661   200020 454500                    STP4    TEMP_FSN+3,,AUTO
        14 000662   000024 236000 15                 LDQ     20
        14 000663   200017 756100                    STQ     TEMP_FSN+2,,AUTO
        14 000664   200017 630500                    EPPR0   TEMP_FSN+2,,AUTO
        14 000665   000005 631400 15                 EPPR1   5
        14 000666   000000 701000 xent               TSX1    FLP$WR_FILE_INFO
        14 000667   001013 702000 14                 TSX2    JUSTALT
        14 000670   000773 710000 14                 TRA     s:16913

     1099    16893
     1100    16894    3          CASE( %ACCT_DIR );

     1101    16895    3            EFTFILE_DCB$->F$DCB.ACCT# = BLK_TAG.WHERE.ACCT;

  16895 14 000671   000000 471400 xsym               LDP1    EFTFILE_DCB$
        14 000672   040100 100500                    MLR     fill='040'O
        14 000673   000004 400010                    ADSC9   4,,PR0                   cn=2,n=8
        14 000674   100020 000010                    ADSC9   16,,PR1                  cn=0,n=8

     1102    16896    3            EFTFILE_DCB$->F$DCB.PSN# = BLK_TAG.WHERE.PSN;

  16896 14 000675   040100 100500                    MLR     fill='040'O
        14 000676   000003 000006                    ADSC9   3,,PR0                   cn=0,n=6
        14 000677   100024 000006                    ADSC9   20,,PR1                  cn=0,n=6
        14 000700   000773 710000 14                 TRA     s:16913

     1103    16897
PL6.E3A0      #004=FLS$FLUSH_BLOCK File=FLS$FILE_PACKER.:E05TSI                  TUE 07/29/97 16:25 Page:216  
     1104    16898    3          CASE( %DEL_FILE, %CLEANUP_FILE );

     1105    16899    3            EFTFILE_DCB$->F$DCB.NAME#.C = BLK_TAG.NAME.C;

  16899 14 000701   000000 471400 xsym               LDP1    EFTFILE_DCB$
        14 000702   040100 100500                    MLR     fill='040'O
        14 000703   000003 200037                    ADSC9   3,,PR0                   cn=1,n=31
        14 000704   100010 200037                    ADSC9   8,,PR1                   cn=1,n=31

     1106    16900    3            EFTFILE_DCB$->F$DCB.NAME#.L = BLK_TAG.NAME.L;

  16900 14 000705   000003 236100                    LDQ     3,,PR0
        14 000706   100010 552140                    STBQ    8,'40'O,PR1

     1107    16901    3            EFTFILE_DCB$->F$DCB.DESC = BLK_TAG.DESC;

  16901 14 000707   000001 720100                    LXL0    1,,PR0
        14 000710   100005 440100                    SXL0    5,,PR1

     1108    16902    3            CALL FLP$WR_FILE_INFO( EFTFILE_DCB$, ADDR(NIL), '      ', 0, ' ', , ERR,
             16902                     '1'B, '0'B ) ALTRET( JUSTALT );

  16902 14 000711   000001 236000 xsym               LDQ     B_VECTNIL+1
        14 000712   200016 756100                    STQ     TEMP_FSN+1,,AUTO
        14 000713   000020 237000 15                 LDAQ    16
        14 000714   200026 757100                    STAQ    TEMP_FSN+9,,AUTO
        14 000715   200011 633500                    EPPR3   ERR,,AUTO
        14 000716   200025 453500                    STP3    TEMP_FSN+8,,AUTO
        14 000717   000001 236000 xsym               LDQ     B_VECTNIL+1
        14 000720   200024 756100                    STQ     TEMP_FSN+7,,AUTO
        14 000721   000022 237000 15                 LDAQ    18
        14 000722   200022 757100                    STAQ    TEMP_FSN+5,,AUTO
        14 000723   000017 236000 15                 LDQ     15
        14 000724   200021 756100                    STQ     TEMP_FSN+4,,AUTO
        14 000725   200016 634500                    EPPR4   TEMP_FSN+1,,AUTO
        14 000726   200020 454500                    STP4    TEMP_FSN+3,,AUTO
        14 000727   000024 236000 15                 LDQ     20
PL6.E3A0      #004=FLS$FLUSH_BLOCK File=FLS$FILE_PACKER.:E05TSI                  TUE 07/29/97 16:25 Page:217  
        14 000730   200017 756100                    STQ     TEMP_FSN+2,,AUTO
        14 000731   200017 630500                    EPPR0   TEMP_FSN+2,,AUTO
        14 000732   000005 631400 15                 EPPR1   5
        14 000733   000000 701000 xent               TSX1    FLP$WR_FILE_INFO
        14 000734   001013 702000 14                 TSX2    JUSTALT
        14 000735   000773 710000 14                 TRA     s:16913

     1109    16903
     1110    16904    3          CASE( %INACTIVE_FILE, %REG_FILE, %ACUP_FILE, %IDS_FAST_FILE );

     1111    16905    3            EFTFILE_DCB$->F$DCB.NAME#.C = BLK_TAG.NAME.C;

  16905 14 000736   000000 471400 xsym               LDP1    EFTFILE_DCB$
        14 000737   040100 100500                    MLR     fill='040'O
        14 000740   000003 200037                    ADSC9   3,,PR0                   cn=1,n=31
        14 000741   100010 200037                    ADSC9   8,,PR1                   cn=1,n=31

     1112    16906    3            EFTFILE_DCB$->F$DCB.NAME#.L = BLK_TAG.NAME.L;

  16906 14 000742   000003 236100                    LDQ     3,,PR0
        14 000743   100010 552140                    STBQ    8,'40'O,PR1

     1113    16907    3            EFTFILE_DCB$->F$DCB.DESC = BLK_TAG.DESC;

  16907 14 000744   000001 720100                    LXL0    1,,PR0
        14 000745   100005 440100                    SXL0    5,,PR1

     1114    16908    3            CALL FLP$WR_FILE_INFO( EFTFILE_DCB$, ADDR(NIL), '      ', 0, ' ', , ERR,
             16908                     '1'B, '0'B ) ALTRET( JUSTALT );

  16908 14 000746   000001 236000 xsym               LDQ     B_VECTNIL+1
        14 000747   200016 756100                    STQ     TEMP_FSN+1,,AUTO
        14 000750   000020 237000 15                 LDAQ    16
        14 000751   200026 757100                    STAQ    TEMP_FSN+9,,AUTO
        14 000752   200011 633500                    EPPR3   ERR,,AUTO
        14 000753   200025 453500                    STP3    TEMP_FSN+8,,AUTO
        14 000754   000001 236000 xsym               LDQ     B_VECTNIL+1
PL6.E3A0      #004=FLS$FLUSH_BLOCK File=FLS$FILE_PACKER.:E05TSI                  TUE 07/29/97 16:25 Page:218  
        14 000755   200024 756100                    STQ     TEMP_FSN+7,,AUTO
        14 000756   000022 237000 15                 LDAQ    18
        14 000757   200022 757100                    STAQ    TEMP_FSN+5,,AUTO
        14 000760   000017 236000 15                 LDQ     15
        14 000761   200021 756100                    STQ     TEMP_FSN+4,,AUTO
        14 000762   200016 634500                    EPPR4   TEMP_FSN+1,,AUTO
        14 000763   200020 454500                    STP4    TEMP_FSN+3,,AUTO
        14 000764   000024 236000 15                 LDQ     20
        14 000765   200017 756100                    STQ     TEMP_FSN+2,,AUTO
        14 000766   200017 630500                    EPPR0   TEMP_FSN+2,,AUTO
        14 000767   000005 631400 15                 EPPR1   5
        14 000770   000000 701000 xent               TSX1    FLP$WR_FILE_INFO
        14 000771   001013 702000 14                 TSX2    JUSTALT
        14 000772   000773 710000 14                 TRA     s:16913

     1115    16909
     1116    16910    3          CASE( ELSE );

     1117    16911                 /*N* Might want to give an error message */
     1118    16912    3          END;

     1119    16913    2         BLK_TAG$ = PINCRW( BLK_TAG$, -SIZEW(BLK_TAG) );

  16913 14 000773   000000 236000 xsym               LDQ     BLK_TAG$
        14 000774   777765 036003                    ADLQ    -11,DU
        14 000775   000000 756000 xsym               STQ     BLK_TAG$

     1120    16914    2         END;

  16914 14 000776   000000 116000 xsym               CMPQ    LOW_BLK_TAG$
        14 000777   000534 603000 14                 TRC     s:16866

     1121    16915
     1122    16916    1      BLK_TAG$ = BLK_TAG0$;                /* Indicates nothing to flush         */

  16916 14 001000   000000 236000 xsym               LDQ     BLK_TAG0$
        14 001001   000000 756000 xsym               STQ     BLK_TAG$
PL6.E3A0      #004=FLS$FLUSH_BLOCK File=FLS$FILE_PACKER.:E05TSI                  TUE 07/29/97 16:25 Page:219  

     1123    16917    1      ALTRETURN;

  16917 14 001002   000000 702200 xent               TSX2  ! X66_AALT

  16916 14 001003                       REPALT       null
     1124    16918
     1125    16919    1   REPALT: ;
     1126    16920    1      CALL FLI$RPT_ERR( ERR, DCB# );

  16920 14 001003   200007 630500                    EPPR0   DCB#,,AUTO
        14 001004   200017 450500                    STP0    TEMP_FSN+2,,AUTO
        14 001005   200011 631500                    EPPR1   ERR,,AUTO
        14 001006   200016 451500                    STP1    TEMP_FSN+1,,AUTO
        14 001007   200016 630500                    EPPR0   TEMP_FSN+1,,AUTO
        14 001010   000020 631400 xsym               EPPR1   B_VECTNIL+16
        14 001011   000000 701000 xent               TSX1    FLI$RPT_ERR
        14 001012   000000 011000                    NOP     0

  16916 14 001013                       JUSTALT      null
     1127    16921
     1128    16922    1   JUSTALT: ;
     1129    16923    1      ALTRETURN;

  16923 14 001013   000000 702200 xent               TSX2  ! X66_AALT
     1130    16924
     1131    16925    1   END FLS$FLUSH_BLOCK;

PL6.E3A0      #004=FLS$FLUSH_BLOCK File=FLS$FILE_PACKER.:E05TSI                  TUE 07/29/97 16:25 Page:220  
--  Include file information  --

   FLN_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   FLS_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   B_MICROPS_C.:E05TOU  is referenced.
   FLB_SUBS_C.:E05TOU  is referenced.
   FLI_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   FL_PERR_C.:E05TOU  is referenced.
   FLE_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   CP_6_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B_ERRORS_C.:E05TOU  is referenced.
      No diagnostics issued in procedure FLS$FLUSH_BLOCK.
PL6.E3A0      #004=FLS$FLUSH_BLOCK File=FLS$FILE_PACKER.:E05TSI                  TUE 07/29/97 16:25 Page:221  

 **** Variables and constants ****

  ****  Section 002  Data  FLS$FLUSH_BLOCK

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

   116-0-0/d STRC(1080)  r     1 CLOSE_BLOCK_FILE          12-0-0/d STRC(360)   r     1 DEL_NODATA_REC
    24-0-0/d STRC(2088)  r     1 OPEN_BLOCK_FILE          154-0-0/b BIT         r     1 PREV_LOW_BLK_TAG_BEG

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     4-0-0/w PTR         r     1 @COMMAND                   6-0-0/w PTR         r     1 @NEW_FSN
     5-0-0/w PTR         r     1 @NEW_TSN                   3-0-0/w PTR         r     1 @NOT_END
    *0-0-0/w SBIN        r     1 COMMAND                    7-0-0/w SBIN        r     1 DCB#
    11-0-0/w STRC        r     1 ERR                       10-0-0/w SBIN        r     1 I
    12-0-0/w PTR         r     1 NEW_BLK_TAG$              *0-0-0/w UBIN        r     1 NEW_FSN
    *0-0-0/c CHAR(6)     r     1 NEW_TSN                   *0-0-0/w BIT         r     1 NOT_END
    15-0-0/w UBIN        r     1 TEMP_FSN                  13-0-0/c CHAR(6)     r     1 TEMP_TSN

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 ARCHIVE$                   0-0-0/c ASTR(9)     r     1 ARCHIVE_NAME
     0-0-0/d VECT        r     1 A_FIT_                     0-0-0/c ASTR(9)     r     1 BACKUP_NAME
     0-0-0/w PTR         r     1 BLK_TAG$                   0-0-0/w PTR         r     1 BLK_TAG0$
     0-0-0/w SBIN        r     1 BLK_TAG_NBR                0-0-0/w PTR         r     1 BLOCK_GRAN$
     0-0-0/c CHAR        r     1 CROSSED                    0-0-0/w PTR         r     1 DISK_FILE_SPEC$
     0-0-0/w PTR         r     1 DISK_GRAN$                 0-0-0/w PTR         r     1 DPLIST$
     0-0-0/w PTR         r     1 DPRESLIST$                 0-0-0/c ASTR(9)     r     1 DUAL_FILE
     0-0-0/w PTR         r     1 EFTFILE_DCB$               0-0-0/c ASTR(9)     r     1 EFT_CVOL_FILE
     0-0-0/c ASTR(9)     r     1 EFT_RESTRICT_FILE          0-0-0/b BIT         r     1 EOVOL
PL6.E3A0      #004=FLS$FLUSH_BLOCK File=FLS$FILE_PACKER.:E05TSI                  TUE 07/29/97 16:25 Page:222  
     0-0-0/w STRC        r     1 E_MISSING_FILES            0-0-0/c STRC(72)    r     1 FROM_DISK_ACCT
     0-0-0/c STRC(288)   r     1 FROM_DISK_NAME             0-0-0/d STRC(90)    r     1 FROM_DISK_SN
     0-0-0/d STRC(432)   r     1 GET_NOW_UTS                0-0-0/w PTR         r     1 GRAN_BASE$
     0-0-0/c CHAR(6)     r     1 LAST_TSN_USED              0-0-0/w PTR         r     1 LOW_BLK_TAG$
     0-0-0/w SBIN        r     1 NBR_BLOCK_BYTES
     0-0-0/w SBIN        r     1 NBR_BLOCK_BYTES_REMAINING
     0-0-0/w SBIN        r     1 NBR_BYTES_TO_MOVE          0-0-0/w SBIN        r     1 NBR_FILE_BLOCKS
     0-0-0/w SBIN        r     1 NBR_SNLISTS                0-0-0/c ASTR(9)     r     1 NODATA_FILE_NAME
     0-0-0/c STRC(369)   r     1 NODATA_KEY                 0-0-0/w UBIN        r     1 NOW_UTS
     0-0-0/d STRC(72)    r     1 OUTBUF_                    0-0-0/c ASTR(9)     r     1 PRIME_FILE
     0-0-0/c ASTR(9)     r     1 REBUILD_DIR_KEY            0-0-0/c ASTR(9)     r     1 REBUILD_KEY
     0-0-0/c ASTR(9)     r     1 REBUILD_NAME               0-0-0/c ASTR(9)     r     1 RET_CMDS_NAME
     0-0-0/w SBIN        r     1 RUN_NBR                    0-0-0/w PTR         r     1 SNVECLIST$
     0-0-0/w PTR         r     1 TAPE_DCBLIST$              0-0-0/w SBIN        r     1 TAPE_FSN
     0-0-0/c CHAR(6)     r     1 TAPE_SN                    0-0-0/d STRC(432)   r     1 TAPE_WRITE
     0-0-0/w SBIN        r     1 TSN_SET_NBR                0-0-0/w STRC(270)   r     1 TSN_USED_BUF
     0-0-0/c STRC(45)    r     1 TSN_USED_KEY               0-0-0/c ASTR(9)     r     1 TSN_USED_NAME
     0-0-0/w SBIN        r     1 TSN_VOL                    0-0-0/d STRC(432)   r     1 WRITE_TSN_USED

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(396)   r     1 BLK_TAG                    0-0-0/w STRC(396)   r     1 BLK_TAG0
     0-0-0/d ASTR(3528)  r     1 F$DCB                      0-0-0N  NULL        r     1 M$DISK_IN
     0-0-0N  NULL        r     1 M$NODATA_LIST
     0-0-0/w STRC(72)    r     1 TAPE_DCBLIST(0:0)


   Procedure FLS$FLUSH_BLOCK requires 524 words for executable code.
   Procedure FLS$FLUSH_BLOCK requires 26 words of local(AUTO) storage.

    No errors detected in file FLS$FILE_PACKER.:E05TSI    .
PL6.E3A0      #004=FLS$FLUSH_BLOCK File=FLS$FILE_PACKER.:E05TSI                  TUE 07/29/97 16:25 Page:223  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #004=FLS$FLUSH_BLOCK File=FLS$FILE_PACKER.:E05TSI                  TUE 07/29/97 16:25 Page:224  
          MINI XREF LISTING

ARCHIVE$
     15881**DCL     16751>>IF
ARCHIVE_NAME.L#
     14963**DCL     14963--IMP-SIZ
A_FIT_
     14128**DCL     16803<>CALL    16819<>CALL
BACKUP_NAME.L#
     14607**DCL     14607--IMP-SIZ
BLK_TAG
     14096**DCL     16832--ASSIGN  16833<<ASSIGN  16833>>ASSIGN  16860--ASSIGN  16913--ASSIGN
BLK_TAG.BEG
     14098**DCL     16733>>IF      16809>>IF      16823>>ASSIGN  16837<<ASSIGN
BLK_TAG.BEGX
     14098**DCL     16835<<ASSIGN
BLK_TAG.DESC
     14098**DCL     16901>>ASSIGN  16907>>ASSIGN
BLK_TAG.NAME
     14099**DCL     14099--REDEF
BLK_TAG.NAME.C
     14099**DCL     16899>>ASSIGN  16905>>ASSIGN
BLK_TAG.NAME.L
     14099**DCL     16900>>ASSIGN  16906>>ASSIGN
BLK_TAG.NBR
     14098**DCL     16846<<ASSIGN
BLK_TAG.SIZE
     14098**DCL     16836<<ASSIGN
BLK_TAG.TYPE
     14098**DCL     16868>>DOCASE  16887>>DOCASE
BLK_TAG.UTS
     14099**DCL     16875>>ASSIGN  16878>>ASSIGN  16881>>ASSIGN  16883>>ASSIGN
BLK_TAG.WHERE.ACCT
     14099**DCL     16890>>ASSIGN  16895>>ASSIGN
PL6.E3A0      #004=FLS$FLUSH_BLOCK File=FLS$FILE_PACKER.:E05TSI                  TUE 07/29/97 16:25 Page:225  
BLK_TAG.WHERE.PSN
     14099**DCL     16891>>ASSIGN  16896>>ASSIGN
BLK_TAG$
     14096**DCL     14096--IMP-PTR 16833>>ASSIGN  16834<<ASSIGN  16835>>ASSIGN  16836>>ASSIGN  16837>>ASSIGN
     16841<<ASSIGN  16845>>ASSIGN  16846>>ASSIGN  16860<<ASSIGN  16865>>DOWHILE 16868>>DOCASE  16875>>ASSIGN
     16878>>ASSIGN  16881>>ASSIGN  16883>>ASSIGN  16887>>DOCASE  16890>>ASSIGN  16891>>ASSIGN  16895>>ASSIGN
     16896>>ASSIGN  16899>>ASSIGN  16900>>ASSIGN  16901>>ASSIGN  16905>>ASSIGN  16906>>ASSIGN  16907>>ASSIGN
     16913<<ASSIGN  16913>>ASSIGN  16916<<ASSIGN
BLK_TAG0.NAME
     14105**DCL     14105--REDEF
BLK_TAG0.WHERE.ACCT
     14105**DCL     16863>>ASSIGN
BLK_TAG0.WHERE.PSN
     14105**DCL     16862>>ASSIGN
BLK_TAG0$
     14102**DCL     14102--IMP-PTR 16832>>ASSIGN  16841>>ASSIGN  16860>>ASSIGN  16862>>ASSIGN  16863>>ASSIGN
     16916>>ASSIGN
BLK_TAG_NBR
     14108**DCL     16838<<ASSIGN  16842<<ASSIGN  16846>>ASSIGN
BLOCK_GRAN$
     14109**DCL     14110--IMP-PTR 16726>>CALL    16805>>CALL    16807>>CALL    16848<<ASSIGN
CLOSE_BLOCK_FILE.SN_
     16550**DCL     16550--REDEF
CLOSE_BLOCK_FILE.UTL_
     16551**DCL     16551--REDEF
CLOSE_BLOCK_FILE.V
     16555**DCL     16550--DCLINIT
CLOSE_BLOCK_FILE.V.EXPIRE#
     16565**DCL     16565--REDEF
CLOSE_BLOCK_FILE.V.TYPE#
     16563**DCL     16563--REDEF
CLOSE_BLOCK_FILE.V.XTNSIZE#
     16560**DCL     16560--REDEF   16562--REDEF
CLOSE_NODATA_LIST.SN_
     15761**DCL     15761--REDEF
CLOSE_NODATA_LIST.UTL_
PL6.E3A0      #004=FLS$FLUSH_BLOCK File=FLS$FILE_PACKER.:E05TSI                  TUE 07/29/97 16:25 Page:226  
     15762**DCL     15762--REDEF
CLOSE_NODATA_LIST.V.EXPIRE#
     15776**DCL     15776--REDEF
CLOSE_NODATA_LIST.V.TYPE#
     15774**DCL     15774--REDEF
CLOSE_NODATA_LIST.V.XTNSIZE#
     15771**DCL     15771--REDEF   15773--REDEF
CLOSE_PRIME_DUAL.SN_
     15238**DCL     15238--REDEF
CLOSE_PRIME_DUAL.UTL_
     15239**DCL     15239--REDEF
CLOSE_PRIME_DUAL.V.EXPIRE#
     15253**DCL     15253--REDEF
CLOSE_PRIME_DUAL.V.TYPE#
     15251**DCL     15251--REDEF
CLOSE_PRIME_DUAL.V.XTNSIZE#
     15248**DCL     15248--REDEF   15250--REDEF
CLOSE_REBUILD.SN_
     15513**DCL     15513--REDEF
CLOSE_REBUILD.UTL_
     15514**DCL     15514--REDEF
CLOSE_REBUILD.V.EXPIRE#
     15528**DCL     15528--REDEF
CLOSE_REBUILD.V.TYPE#
     15526**DCL     15526--REDEF
CLOSE_REBUILD.V.XTNSIZE#
     15523**DCL     15523--REDEF   15525--REDEF
CLOSE_STATUS.SN_
     14728**DCL     14728--REDEF
CLOSE_STATUS.UTL_
     14729**DCL     14729--REDEF
CLOSE_STATUS.V.EXPIRE#
     14743**DCL     14743--REDEF
CLOSE_STATUS.V.TYPE#
     14741**DCL     14741--REDEF
CLOSE_STATUS.V.XTNSIZE#
PL6.E3A0      #004=FLS$FLUSH_BLOCK File=FLS$FILE_PACKER.:E05TSI                  TUE 07/29/97 16:25 Page:227  
     14738**DCL     14738--REDEF   14740--REDEF
CLOSE_TSN_USED.SN_
     14438**DCL     14438--REDEF
CLOSE_TSN_USED.UTL_
     14439**DCL     14439--REDEF
CLOSE_TSN_USED.V.EXPIRE#
     14453**DCL     14453--REDEF
CLOSE_TSN_USED.V.TYPE#
     14451**DCL     14451--REDEF
CLOSE_TSN_USED.V.XTNSIZE#
     14448**DCL     14448--REDEF   14450--REDEF
COMMAND
        12**DCL         6--PROC    16726<>CALL    16805<>CALL    16807<>CALL
CON_CLOSE_ARCHIVE.SN_
     14770**DCL     14770--REDEF
CON_CLOSE_ARCHIVE.UTL_
     14771**DCL     14771--REDEF
CON_CLOSE_ARCHIVE.V.EXPIRE#
     14785**DCL     14785--REDEF
CON_CLOSE_ARCHIVE.V.TYPE#
     14783**DCL     14783--REDEF
CON_CLOSE_ARCHIVE.V.XTNSIZE#
     14780**DCL     14780--REDEF   14782--REDEF
CON_OPEN_ARCHIVE_FILE.ACSVEH_
     14857**DCL     14858--REDEF
CON_OPEN_ARCHIVE_FILE.ALTKEYS_
     14863**DCL     14864--REDEF   14864--REDEF
CON_OPEN_ARCHIVE_FILE.HDR_
     14862**DCL     14863--REDEF
CON_OPEN_ARCHIVE_FILE.TAB_
     14861**DCL     14862--REDEF
CON_OPEN_ARCHIVE_FILE.UHL_
     14855**DCL     14856--REDEF   14856--REDEF
CON_OPEN_ARCHIVE_FILE.V.FSN#
     14895**DCL     14895--REDEF   14895--REDEF
CON_OPEN_ARCHIVE_FILE.WSN_
PL6.E3A0      #004=FLS$FLUSH_BLOCK File=FLS$FILE_PACKER.:E05TSI                  TUE 07/29/97 16:25 Page:228  
     14861**DCL     14861--REDEF
CON_READ_ARCHIVE_FILE.STATION_
     14919**DCL     14920--REDEF
CON_READ_ARCHIVE_FILE.V.DVBYTE.REREAD#
     14931**DCL     14931--REDEF
CON_READ_ARCHIVE_FILE.V.INDX#
     14929**DCL     14929--REDEF
CROSSED
     14131**DCL     16761<<ASSIGN  16800<<ASSIGN
CVOL_UTL.ULBL#
     14198**DCL     14198--REDEF
DCB#
     16624**DCL     16803<>CALL    16819<>CALL    16920<>CALL
DEL_NODATA_REC.V
     15864**DCL     15861--DCLINIT
DISK_CLOSE.SN_
     13268**DCL     13268--REDEF
DISK_CLOSE.UTL_
     13269**DCL     13269--REDEF
DISK_CLOSE.V.EXPIRE#
     13283**DCL     13283--REDEF
DISK_CLOSE.V.TYPE#
     13281**DCL     13281--REDEF
DISK_CLOSE.V.XTNSIZE#
     13278**DCL     13278--REDEF   13280--REDEF
DISK_CLOSE_NEXT.SN_
     16247**DCL     16247--REDEF
DISK_CLOSE_NEXT.UTL_
     16248**DCL     16248--REDEF
DISK_CLOSE_NEXT.V.EXPIRE#
     16262**DCL     16262--REDEF
DISK_CLOSE_NEXT.V.TYPE#
     16260**DCL     16260--REDEF
DISK_CLOSE_NEXT.V.XTNSIZE#
     16257**DCL     16257--REDEF   16259--REDEF
DISK_CLOSE_ORDINARY.SN_
PL6.E3A0      #004=FLS$FLUSH_BLOCK File=FLS$FILE_PACKER.:E05TSI                  TUE 07/29/97 16:25 Page:229  
     16289**DCL     16289--REDEF
DISK_CLOSE_ORDINARY.UTL_
     16290**DCL     16290--REDEF
DISK_CLOSE_ORDINARY.V.EXPIRE#
     16304**DCL     16304--REDEF
DISK_CLOSE_ORDINARY.V.TYPE#
     16302**DCL     16302--REDEF
DISK_CLOSE_ORDINARY.V.XTNSIZE#
     16299**DCL     16299--REDEF   16301--REDEF
DISK_FILE_SPEC.SPEC
     13633**DCL     13635--REDEF
DISK_FILE_SPEC.SPEC.START
     13634**DCL     13634--REDEF
DISK_FILE_SPEC.SPEC.STOP
     13635**DCL     13635--REDEF
DISK_FILE_SPEC$
     13632**DCL     13633--IMP-PTR
DISK_GRAN$
     14109**DCL     14109--IMP-PTR
DISK_OPEN.ACSVEH_
     13133**DCL     13134--REDEF
DISK_OPEN.ALTKEYS_
     13139**DCL     13140--REDEF   13140--REDEF
DISK_OPEN.HDR_
     13138**DCL     13139--REDEF
DISK_OPEN.TAB_
     13137**DCL     13138--REDEF
DISK_OPEN.UHL_
     13131**DCL     13132--REDEF   13132--REDEF
DISK_OPEN.V.FSN#
     13171**DCL     13171--REDEF   13171--REDEF
DISK_OPEN.WSN_
     13137**DCL     13137--REDEF
DISK_OPEN_NEXT.ACSVEH_
     16073**DCL     16074--REDEF
DISK_OPEN_NEXT.ALTKEYS_
PL6.E3A0      #004=FLS$FLUSH_BLOCK File=FLS$FILE_PACKER.:E05TSI                  TUE 07/29/97 16:25 Page:230  
     16079**DCL     16080--REDEF   16080--REDEF
DISK_OPEN_NEXT.HDR_
     16078**DCL     16079--REDEF
DISK_OPEN_NEXT.TAB_
     16077**DCL     16078--REDEF
DISK_OPEN_NEXT.UHL_
     16071**DCL     16072--REDEF   16072--REDEF
DISK_OPEN_NEXT.V.FSN#
     16111**DCL     16111--REDEF   16111--REDEF
DISK_OPEN_NEXT.WSN_
     16077**DCL     16077--REDEF
DISK_OPEN_ORDINARY.ACSVEH_
     16182**DCL     16183--REDEF
DISK_OPEN_ORDINARY.ALTKEYS_
     16188**DCL     16189--REDEF   16189--REDEF
DISK_OPEN_ORDINARY.HDR_
     16187**DCL     16188--REDEF
DISK_OPEN_ORDINARY.TAB_
     16186**DCL     16187--REDEF
DISK_OPEN_ORDINARY.UHL_
     16180**DCL     16181--REDEF   16181--REDEF
DISK_OPEN_ORDINARY.V.FSN#
     16220**DCL     16220--REDEF   16220--REDEF
DISK_OPEN_ORDINARY.WSN_
     16186**DCL     16186--REDEF
DISK_READ.STATION_
     13195**DCL     13196--REDEF
DISK_READ.V.DVBYTE.REREAD#
     13207**DCL     13207--REDEF
DISK_READ.V.INDX#
     13205**DCL     13205--REDEF
DISK_WRITE.STATION_
     13233**DCL     13233--REDEF
DISK_WRITE.V.DVBYTE.VFC#
     13240**DCL     13240--REDEF
DPLIST$
PL6.E3A0      #004=FLS$FLUSH_BLOCK File=FLS$FILE_PACKER.:E05TSI                  TUE 07/29/97 16:25 Page:231  
     13618**DCL     13630--IMP-PTR
DPRESLIST$
     13632**DCL     13632--IMP-PTR
DUAL_FILE.L#
     15034**DCL     15034--IMP-SIZ
EFTFILE_DCB$
     14131**DCL     16862>>ASSIGN  16863>>ASSIGN  16875>>ASSIGN  16878>>ASSIGN  16881>>ASSIGN  16883>>ASSIGN
     16890>>ASSIGN  16891>>ASSIGN  16892<>CALL    16895>>ASSIGN  16896>>ASSIGN  16899>>ASSIGN  16900>>ASSIGN
     16901>>ASSIGN  16902<>CALL    16905>>ASSIGN  16906>>ASSIGN  16907>>ASSIGN  16908<>CALL
EFTWORD
     13753**DCL     13753--REDEF
EFT_CVOL_FILE
     14158**DCL     16803--CALL
EFT_CVOL_FILE.L#
     14158**DCL     14158--IMP-SIZ 16803>>CALL
EFT_RESTRICT_FILE
     14185**DCL     16819--CALL
EFT_RESTRICT_FILE.L#
     14185**DCL     14185--IMP-SIZ 16819>>CALL
EOVOL
     14131**DCL     16726<>CALL    16794>>IF      16805<>CALL    16807<>CALL
ERR
     16626**DCL     16803<>CALL    16819<>CALL    16866<<ASSIGN  16892<>CALL    16902<>CALL    16908<>CALL
     16920<>CALL
ERR.CODE
     16630**DCL     16870<<ASSIGN  16872<<ASSIGN  16874<<ASSIGN  16877<<ASSIGN  16880<<ASSIGN
E_MISSING_FILES
      8348**DCL     16858<>CALL
F$DCB.ACCT#
     16668**DCL     16863<<ASSIGN  16890<<ASSIGN  16895<<ASSIGN
F$DCB.ACTPOS
     16684**DCL     16684--REDEF
F$DCB.ARS#
     16658**DCL     16658--REDEF
F$DCB.ATTR
     16677**DCL     16678--REDEF
PL6.E3A0      #004=FLS$FLUSH_BLOCK File=FLS$FILE_PACKER.:E05TSI                  TUE 07/29/97 16:25 Page:232  
F$DCB.BORROW
     16692**DCL     16692--REDEF   16692--REDEF   16692--REDEF
F$DCB.DCBNAME.L
     16706**DCL     16706--IMP-SIZ
F$DCB.DESC
     16665**DCL     16901<<ASSIGN  16907<<ASSIGN
F$DCB.EOMCHAR#
     16662**DCL     16662--REDEF
F$DCB.EXPIRE#
     16675**DCL     16875<<ASSIGN  16878<<ASSIGN  16881<<ASSIGN  16883<<ASSIGN
F$DCB.FCD#
     16671**DCL     16796>>IF
F$DCB.FLDID
     16687**DCL     16687--REDEF
F$DCB.FORM$
     16681**DCL     16681--REDEF
F$DCB.FSECT
     16697**DCL     16697--REDEF
F$DCB.FSN#
     16674**DCL     16674--REDEF   16674--REDEF   16675--REDEF
F$DCB.HEADER$
     16680**DCL     16680--REDEF
F$DCB.IXTNSIZE#
     16678**DCL     16678--REDEF
F$DCB.LASTSTA$
     16667**DCL     16667--REDEF
F$DCB.LVL
     16693**DCL     16693--REDEF
F$DCB.NAME#.C
     16668**DCL     16668--REDEF   16899<<ASSIGN  16905<<ASSIGN
F$DCB.NAME#.L
     16668**DCL     16900<<ASSIGN  16906<<ASSIGN
F$DCB.NOEOF
     16690**DCL     16690--REDEF
F$DCB.NRECS#
     16679**DCL     16679--REDEF
PL6.E3A0      #004=FLS$FLUSH_BLOCK File=FLS$FILE_PACKER.:E05TSI                  TUE 07/29/97 16:25 Page:233  
F$DCB.NRECX
     16698**DCL     16698--REDEF
F$DCB.OHDR
     16690**DCL     16690--REDEF
F$DCB.ORG#
     16673**DCL     16673--REDEF
F$DCB.PRECNO
     16696**DCL     16696--REDEF
F$DCB.PSN#
     16668**DCL     16722>>ASSIGN  16780>>ASSIGN  16862<<ASSIGN  16891<<ASSIGN  16896<<ASSIGN
F$DCB.RCSZ
     16702**DCL     16702--REDEF
F$DCB.RES#
     16669**DCL     16669--REDEF   16721>>IF      16757>>IF
F$DCB.SETX
     16681**DCL     16681--REDEF
F$DCB.TAB$
     16681**DCL     16681--REDEF
F$DCB.TDA
     16695**DCL     16696--REDEF
F$DCB.WSN#
     16669**DCL     16669--REDEF
FIT_AREA.W2
     14469**DCL     14470--REDEF
FLE$ESTMOD
     16618**DCL-ENT 16753--CALL
FLI$RPT_ERR
     16613**DCL-ENT 16858--CALL    16920--CALL
FLI$TAPE_CLOSE
     16614**DCL-ENT 16798--CALL    16801--CALL    16818--CALL
FLI$TAPE_OPEN
     16615**DCL-ENT 16803--CALL    16819--CALL
FLI$TAPE_WRITE
     16616**DCL-ENT 16726--CALL    16805--CALL    16807--CALL
FLP$WR_FILE_INFO
     16617**DCL-ENT 16892--CALL    16902--CALL    16908--CALL
PL6.E3A0      #004=FLS$FLUSH_BLOCK File=FLS$FILE_PACKER.:E05TSI                  TUE 07/29/97 16:25 Page:234  
FPT_EXIT.V.STEPCC#
     13058**DCL     13058--REDEF
FROM_DISK_ACCT
     15964**DCL     16488--DCLINIT
FROM_DISK_NAME
     15938**DCL     16484--DCLINIT
FROM_DISK_SN
     15990**DCL     16483--DCLINIT
GET_NOW_UTS
     13609**DCL     16773<>CALL
GRAN_BASE$
     14127**DCL     16848>>ASSIGN
I
     16625**DCL     16778<<DOINDEX 16780>>ASSIGN
JUSTALT
     16916**LABEL   16798--CALLALT 16801--CALLALT 16818--CALLALT 16892--CALLALT 16902--CALLALT 16908--CALLALT
LAST_TSN_USED
     14201**DCL     16744>>IF      16751>>IF      16757>>IF      16760>>IF      16764<<ASSIGN
LOW_BLK_TAG$
     14096**DCL     16715>>ASSIGN  16726>>CALL    16733>>IF      16805>>CALL    16807>>CALL    16809>>IF
     16823>>ASSIGN  16845<<ASSIGN  16865>>DOWHILE
M$TIME
      6701**DCL-ENT 16773--CALL
M$WRITE
      6635**DCL-ENT 16775--CALL    16781--CALL
NBR_BLOCK_BYTES
     14108**DCL     16847>>ASSIGN
NBR_BLOCK_BYTES_REMAINING
     14108**DCL     16847<<ASSIGN
NBR_BYTES_TO_MOVE
     14108**DCL     14109--IMP-SIZ 14110--IMP-SIZ
NBR_FILE_BLOCKS
     14131**DCL     16742<<ASSIGN  16742>>ASSIGN  16820<<ASSIGN
NBR_SNLISTS
     13045**DCL     16778>>DOINDEX
NEW_BLK_TAG$
PL6.E3A0      #004=FLS$FLUSH_BLOCK File=FLS$FILE_PACKER.:E05TSI                  TUE 07/29/97 16:25 Page:235  
     16632**DCL     16832<<ASSIGN  16833>>ASSIGN  16834>>ASSIGN
NEW_FSN
        14**DCL         6--PROC    16739<<ASSIGN  16815<<ASSIGN
NEW_TSN
        13**DCL         6--PROC    16738<<ASSIGN  16814<<ASSIGN
NODATA_FILE_NAME.L#
     15723**DCL     15723--IMP-SIZ
NODATA_KEY
     15869**DCL     15861--DCLINIT 15862--DCLINIT
NOT_END
        11**DCL         6--PROC    16797--IF      16830--IF
NOW_UTS
     13597**DCL     16774>>ASSIGN
OPEN_BLOCK_FILE.ACSVEH_
     16485**DCL     16486--REDEF
OPEN_BLOCK_FILE.ALTKEYS_
     16491**DCL     16492--REDEF   16492--REDEF
OPEN_BLOCK_FILE.HDR_
     16490**DCL     16491--REDEF
OPEN_BLOCK_FILE.TAB_
     16489**DCL     16490--REDEF
OPEN_BLOCK_FILE.UHL_
     16483**DCL     16484--REDEF   16484--REDEF
OPEN_BLOCK_FILE.V
     16492**DCL     16483--DCLINIT
OPEN_BLOCK_FILE.V.FSN#
     16523**DCL     16523--REDEF   16523--REDEF
OPEN_BLOCK_FILE.WSN_
     16489**DCL     16489--REDEF
OPEN_NODATA_LIST.ACSVEH_
     15656**DCL     15657--REDEF
OPEN_NODATA_LIST.ALTKEYS_
     15662**DCL     15663--REDEF   15663--REDEF
OPEN_NODATA_LIST.HDR_
     15661**DCL     15662--REDEF
OPEN_NODATA_LIST.TAB_
PL6.E3A0      #004=FLS$FLUSH_BLOCK File=FLS$FILE_PACKER.:E05TSI                  TUE 07/29/97 16:25 Page:236  
     15660**DCL     15661--REDEF
OPEN_NODATA_LIST.UHL_
     15654**DCL     15655--REDEF   15655--REDEF
OPEN_NODATA_LIST.V.FSN#
     15694**DCL     15694--REDEF   15694--REDEF
OPEN_NODATA_LIST.WSN_
     15660**DCL     15660--REDEF
OPEN_PRIME_DUAL.ACSVEH_
     15103**DCL     15104--REDEF
OPEN_PRIME_DUAL.ALTKEYS_
     15109**DCL     15110--REDEF   15110--REDEF
OPEN_PRIME_DUAL.HDR_
     15108**DCL     15109--REDEF
OPEN_PRIME_DUAL.TAB_
     15107**DCL     15108--REDEF
OPEN_PRIME_DUAL.UHL_
     15101**DCL     15102--REDEF   15102--REDEF
OPEN_PRIME_DUAL.V.FSN#
     15141**DCL     15141--REDEF   15141--REDEF
OPEN_PRIME_DUAL.WSN_
     15107**DCL     15107--REDEF
OPEN_REBUILD.ACSVEH_
     15338**DCL     15339--REDEF
OPEN_REBUILD.ALTKEYS_
     15344**DCL     15345--REDEF   15345--REDEF
OPEN_REBUILD.HDR_
     15343**DCL     15344--REDEF
OPEN_REBUILD.TAB_
     15342**DCL     15343--REDEF
OPEN_REBUILD.UHL_
     15336**DCL     15337--REDEF   15337--REDEF
OPEN_REBUILD.V.FSN#
     15376**DCL     15376--REDEF   15376--REDEF
OPEN_REBUILD.WSN_
     15342**DCL     15342--REDEF
OPEN_STATUS.ACSVEH_
PL6.E3A0      #004=FLS$FLUSH_BLOCK File=FLS$FILE_PACKER.:E05TSI                  TUE 07/29/97 16:25 Page:237  
     14540**DCL     14541--REDEF
OPEN_STATUS.ALTKEYS_
     14546**DCL     14547--REDEF   14547--REDEF
OPEN_STATUS.HDR_
     14545**DCL     14546--REDEF
OPEN_STATUS.TAB_
     14544**DCL     14545--REDEF
OPEN_STATUS.UHL_
     14538**DCL     14539--REDEF   14539--REDEF
OPEN_STATUS.V.FSN#
     14578**DCL     14578--REDEF   14578--REDEF
OPEN_STATUS.WSN_
     14544**DCL     14544--REDEF
OPEN_TSN_USED.ACSVEH_
     14276**DCL     14277--REDEF
OPEN_TSN_USED.ALTKEYS_
     14282**DCL     14283--REDEF   14283--REDEF
OPEN_TSN_USED.HDR_
     14281**DCL     14282--REDEF
OPEN_TSN_USED.TAB_
     14280**DCL     14281--REDEF
OPEN_TSN_USED.UHL_
     14274**DCL     14275--REDEF   14275--REDEF
OPEN_TSN_USED.V.FSN#
     14314**DCL     14314--REDEF   14314--REDEF
OPEN_TSN_USED.WSN_
     14280**DCL     14280--REDEF
OUTBUF_
     14110**DCL     16726<>CALL    16805<>CALL    16807<>CALL
OUTBUF_.PTR$
     14110**DCL     16715<<ASSIGN
PREV_LOW_BLK_TAG_BEG
     16640**DCL     16733>>IF      16809>>IF      16823<<ASSIGN
PRE_RET_CLOSE.SN_
     13996**DCL     13996--REDEF
PRE_RET_CLOSE.UTL_
PL6.E3A0      #004=FLS$FLUSH_BLOCK File=FLS$FILE_PACKER.:E05TSI                  TUE 07/29/97 16:25 Page:238  
     13997**DCL     13997--REDEF
PRE_RET_CLOSE.V.EXPIRE#
     14011**DCL     14011--REDEF
PRE_RET_CLOSE.V.TYPE#
     14009**DCL     14009--REDEF
PRE_RET_CLOSE.V.XTNSIZE#
     14006**DCL     14006--REDEF   14008--REDEF
PRE_RET_OPEN.ACSVEH_
     13931**DCL     13932--REDEF
PRE_RET_OPEN.ALTKEYS_
     13937**DCL     13938--REDEF   13938--REDEF
PRE_RET_OPEN.HDR_
     13936**DCL     13937--REDEF
PRE_RET_OPEN.TAB_
     13935**DCL     13936--REDEF
PRE_RET_OPEN.UHL_
     13929**DCL     13930--REDEF   13930--REDEF
PRE_RET_OPEN.V.FSN#
     13969**DCL     13969--REDEF   13969--REDEF
PRE_RET_OPEN.WSN_
     13935**DCL     13935--REDEF
PRE_RET_READ.STATION_
     13786**DCL     13787--REDEF
PRE_RET_READ.V.DVBYTE.REREAD#
     13798**DCL     13798--REDEF
PRE_RET_READ.V.INDX#
     13796**DCL     13796--REDEF
PRE_RET_WRITE.STATION_
     13824**DCL     13824--REDEF
PRE_RET_WRITE.V.DVBYTE.VFC#
     13831**DCL     13831--REDEF
PRIME_FILE.L#
     15007**DCL     15007--IMP-SIZ
READ_AD_OR_FD.ACSVEH_
     16375**DCL     16376--REDEF
READ_AD_OR_FD.ALTKEYS_
PL6.E3A0      #004=FLS$FLUSH_BLOCK File=FLS$FILE_PACKER.:E05TSI                  TUE 07/29/97 16:25 Page:239  
     16381**DCL     16382--REDEF   16382--REDEF
READ_AD_OR_FD.HDR_
     16380**DCL     16381--REDEF
READ_AD_OR_FD.TAB_
     16379**DCL     16380--REDEF
READ_AD_OR_FD.UHL_
     16373**DCL     16374--REDEF   16374--REDEF
READ_AD_OR_FD.V.FSN#
     16413**DCL     16413--REDEF   16413--REDEF
READ_AD_OR_FD.WSN_
     16379**DCL     16379--REDEF
READ_NODATA_LIST.STATION_
     15800**DCL     15801--REDEF
READ_NODATA_LIST.V.DVBYTE.REREAD#
     15812**DCL     15812--REDEF
READ_NODATA_LIST.V.INDX#
     15810**DCL     15810--REDEF
READ_PRIME_DUAL.STATION_
     15165**DCL     15166--REDEF
READ_PRIME_DUAL.V.DVBYTE.REREAD#
     15177**DCL     15177--REDEF
READ_PRIME_DUAL.V.INDX#
     15175**DCL     15175--REDEF
READ_REBUILD.STATION_
     15471**DCL     15472--REDEF
READ_REBUILD.V.DVBYTE.REREAD#
     15483**DCL     15483--REDEF
READ_REBUILD.V.INDX#
     15481**DCL     15481--REDEF
READ_STATUS.STATION_
     14686**DCL     14687--REDEF
READ_STATUS.V.DVBYTE.REREAD#
     14698**DCL     14698--REDEF
READ_STATUS.V.INDX#
     14696**DCL     14696--REDEF
READ_TSN_USED.STATION_
PL6.E3A0      #004=FLS$FLUSH_BLOCK File=FLS$FILE_PACKER.:E05TSI                  TUE 07/29/97 16:25 Page:240  
     14396**DCL     14397--REDEF
READ_TSN_USED.V.DVBYTE.REREAD#
     14408**DCL     14408--REDEF
READ_TSN_USED.V.INDX#
     14406**DCL     14406--REDEF
REBUILD_DIR_KEY.L#
     15557**DCL     15557--IMP-SIZ
REBUILD_KEY.L#
     15584**DCL     15584--IMP-SIZ
REBUILD_NAME.L#
     15405**DCL     15405--IMP-SIZ
REPALT
     16916**LABEL   16803--CALLALT 16819--CALLALT
RET_CMDS_NAME.L#
     14040**DCL     14040--IMP-SIZ
RUN_NBR
     14202**DCL     16766>>ASSIGN
SNVECLIST$
     13572**DCL     13572--IMP-PTR
SPEC.START
     13636**DCL     13637--REDEF
SPEC.STOP
     13637**DCL     13638--REDEF
SPECCHARS
     13636**DCL     13636--REDEF
TAPE_BLOCK_.W2
     14124**DCL     14125--REDEF
TAPE_CLOSE.SN_
     13489**DCL     13489--REDEF
TAPE_CLOSE.UTL_
     13490**DCL     13490--REDEF
TAPE_CLOSE.V.EXPIRE#
     13504**DCL     13504--REDEF
TAPE_CLOSE.V.TYPE#
     13502**DCL     13502--REDEF
TAPE_CLOSE.V.XTNSIZE#
PL6.E3A0      #004=FLS$FLUSH_BLOCK File=FLS$FILE_PACKER.:E05TSI                  TUE 07/29/97 16:25 Page:241  
     13499**DCL     13499--REDEF   13501--REDEF
TAPE_DCBLIST.DCB$
     13045**DCL     16721>>IF      16722>>ASSIGN  16757>>IF      16780>>ASSIGN  16796>>IF
TAPE_DCBLIST$
     13045**DCL     13045--IMP-PTR 16721>>IF      16722>>ASSIGN  16757>>IF      16780>>ASSIGN  16796>>IF
TAPE_FSN
     14201**DCL     16771>>ASSIGN  16803<>CALL    16819<>CALL
TAPE_OPEN.ACSVEH_
     13354**DCL     13355--REDEF
TAPE_OPEN.ALTKEYS_
     13360**DCL     13361--REDEF   13361--REDEF
TAPE_OPEN.HDR_
     13359**DCL     13360--REDEF
TAPE_OPEN.TAB_
     13358**DCL     13359--REDEF
TAPE_OPEN.UHL_
     13352**DCL     13353--REDEF   13353--REDEF
TAPE_OPEN.V.FSN#
     13392**DCL     13392--REDEF   13392--REDEF
TAPE_OPEN.WSN_
     13358**DCL     13358--REDEF
TAPE_READ.STATION_
     13416**DCL     13417--REDEF
TAPE_READ.V.DVBYTE.REREAD#
     13428**DCL     13428--REDEF
TAPE_READ.V.INDX#
     13426**DCL     13426--REDEF
TAPE_SN
     14201**DCL     16722<<ASSIGN  16744>>IF      16760>>IF      16764>>ASSIGN  16770>>ASSIGN  16803<>CALL
     16819<>CALL
TAPE_WRITE.STATION_
     13454**DCL     13454--REDEF
TAPE_WRITE.V.DVBYTE.VFC#
     13461**DCL     13461--REDEF
TAPE_WRITE.V.IOERROK#
     13459**DCL     16733>>IF      16809>>IF
PL6.E3A0      #004=FLS$FLUSH_BLOCK File=FLS$FILE_PACKER.:E05TSI                  TUE 07/29/97 16:25 Page:242  
TEMP_FSN
     16634**DCL     16724<<ASSIGN  16726<>CALL    16739>>ASSIGN  16805<>CALL    16807<>CALL    16815>>ASSIGN
TEMP_TSN
     16633**DCL     16725<<ASSIGN  16726<>CALL    16733>>IF      16738>>ASSIGN  16804<<ASSIGN  16805<>CALL
     16807<>CALL    16809>>IF      16814>>ASSIGN
TSN_SET_NBR
     14202**DCL     16767>>ASSIGN
TSN_USED_BUF.BACKUP_FSN
     14206**DCL     16772<<ASSIGN
TSN_USED_BUF.FSN
     14206**DCL     16771<<ASSIGN
TSN_USED_BUF.TSN
     14206**DCL     16770<<ASSIGN  16780<<ASSIGN
TSN_USED_BUF.UTS
     14206**DCL     16774<<ASSIGN
TSN_USED_KEY
     14203**DCL     16765--ASSIGN
TSN_USED_KEY.L
     14203**DCL     16765<<ASSIGN
TSN_USED_KEY.RUN_NBR
     14203**DCL     16766<<ASSIGN
TSN_USED_KEY.TSN_SET_NBR
     14204**DCL     16767<<ASSIGN
TSN_USED_KEY.TSN_SNLIST_NBR
     14204**DCL     16769<<ASSIGN  16779<<ASSIGN  16779>>ASSIGN
TSN_USED_KEY.TSN_VOL
     14204**DCL     16768<<ASSIGN
TSN_USED_NAME.L#
     14343**DCL     14343--IMP-SIZ
TSN_VOL
     14202**DCL     16746<<ASSIGN  16746>>ASSIGN  16768>>ASSIGN
TVECTOR.W2
     13585**DCL     13586--REDEF
WHATS_MISSING
     16848**LABEL   16726--CALLALT 16805--CALLALT 16807--CALLALT
WRITE_NODATA_LIST.STATION_
PL6.E3A0      #004=FLS$FLUSH_BLOCK File=FLS$FILE_PACKER.:E05TSI                  TUE 07/29/97 16:25 Page:243  
     15838**DCL     15838--REDEF
WRITE_NODATA_LIST.V.DVBYTE.VFC#
     15845**DCL     15845--REDEF
WRITE_PRIME_DUAL.STATION_
     15203**DCL     15203--REDEF
WRITE_PRIME_DUAL.V.DVBYTE.VFC#
     15210**DCL     15210--REDEF
WRITE_REBUILD.STATION_
     15439**DCL     15439--REDEF
WRITE_REBUILD.V.DVBYTE.VFC#
     15446**DCL     15446--REDEF
WRITE_STATUS.STATION_
     14654**DCL     14654--REDEF
WRITE_STATUS.V.DVBYTE.VFC#
     14661**DCL     14661--REDEF
WRITE_TSN_USED
     14362**DCL     16775<>CALL    16781<>CALL
WRITE_TSN_USED.STATION_
     14364**DCL     14364--REDEF
WRITE_TSN_USED.V.DVBYTE.VFC#
     14371**DCL     14371--REDEF
