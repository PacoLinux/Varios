VERSION E05

PL6.E3A0      #001=FTX$LABEL File=FTX$LABEL.:E05TSI                              TUE 07/29/97 18:01 Page:1    
        1        1        /*M* FTX$LABEL - Magnetic tape label initialization program */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* CRT=1,CTI=4,DCI=6,SQB,ECI=3,CSI=3,IPC,DIN=2,SDI=3 */
        8        8
        9        9        FTX$LABEL: PROC MAIN;
       10       10
       11       11         /***
       12       12          *** INCLUDE files:
       13       13          ***/
       14       14
       15       15        %INCLUDE B_ERRORS_C;
       16     1142        %INCLUDE CP_6;
       17     1223        %INCLUDE CP_6_SUBS;
       18     1763        %INCLUDE F$DCB;
       19     1812        %INCLUDE F$JIT_C;
       20     1929        %MACRO LABELS(BASED=BASED);
       21     1930         %INCLUDE FT$LBLS;
       22     2198        %MEND;
       23     2199        %MACRO ODLABELS(BASED=BASED);
       24     2200         %INCLUDE FP$LBLS;
       25     2362        %MEND;
       26     2363        %LIST;
       27     2364        %INCLUDE FTX_SUBS_C;
        1+    2365        /*M* FTX_SUBS_C substitutions for LABEL processor and its nodes */
        2+    2366        /*T***********************************************************/
        3+    2367        /*T*                                                         */
        4+    2368        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5+    2369        /*T*                                                         */
        6+    2370        /*T***********************************************************/
        7+    2371        /*X* DFC,DMC */
        8+    2372
        9+    2373        %EQU END_COMMAND=1;
       10+    2374        %EQU SEQUENTIAL_COMMAND=2;
PL6.E3A0      #001=FTX$LABEL File=FTX$LABEL.:E05TSI                              TUE 07/29/97 18:01 Page:2    
       11+    2375        %EQU ODSEQUEN_COMMAND=3;
       12+    2376        %EQU LABEL_COMMAND=4;
       13+    2377        %EQU ODLABEL_COMMAND=5;
       14+    2378        %EQU REM_COMMAND=6;
       15+    2379        %EQU SCRATCH_COMMAND=7;
       16+    2380        %EQU PLACE=8;
       17+    2381        %EQU SERIAL=9;
       18+    2382        %EQU INACC=10;
       19+    2383        %EQU NONEACC=11;
       20+    2384        %EQU ALLACC=12;
       21+    2385        %EQU ACCOUNT=13;
       22+    2386        %EQU SNLIST=14;
       23+    2387        %EQU PLATLIST=15;
       24+    2388        %EQU NUMTAPES=16;
       25+    2389        %EQU START=17;
       26+    2390        %EQU INCREMENT=18;
       27+    2391        %EQU DEN800=19;
       28+    2392        %EQU DEN1600=20;
       29+    2393        %EQU DEN6250=21;
       30+    2394        %EQU BYPCONCHK=22;
       31+    2395        %EQU DEN38000=23 ;
       32+    2396        %EQU MAXOPTIONCODE=23;
       28     2397        %PLIST;
       29     2398        %INCLUDE B_MICROPS_C;
       30     2570        %INCLUDE XU_MACRO_C;
       31     5676        %INCLUDE XU_SUBS_C;
       32     5768        %INCLUDE XUG_ENTRY;
       33     5799        %INCLUDE B$TABLES_C;
       34     5907         %B$XL_EBC_ASC;
       35     5911         %B$SR_NON_BLANK;
       36     5915
       37     5916         /***
       38     5917          *** External routines:
       39     5918          ***/
       40     5919
       41     5920    1     DCL FTX$LBLBRK ENTRY ASYNC;           /* Break handler                      */
       42     5921    1     DCL X$PARSE ENTRY(1) ALTRET;
PL6.E3A0      #001=FTX$LABEL File=FTX$LABEL.:E05TSI                              TUE 07/29/97 18:01 Page:3    
       43     5922
       44     5923         /***
       45     5924          *** SYMREFs:
       46     5925          ***/
       47     5926
       48     5927    1     DCL A_COMMAND UBIN SYMREF;            /* Parse nodes                        */
       49     5928    1     DCL B$JIT$ PTR SYMREF;
       50     5929    1     DCL B$TCB$ PTR SYMREF;
       51     5930    1     DCL B_VERSION CHAR(1) SYMREF;
       52     5931
       53     5932         /***
       54     5933          *** DCBs:
       55     5934          ***/
       56     5935
       57     5936    1     DCL M$DO DCB;                         /* Error output                       */
       58     5937    1     DCL M$EI DCB;                         /* Tape input/output                  */
       59     5938    1     DCL M$LO DCB;                         /* General output                     */
       60     5939    1     DCL M$SI DCB;                         /* Command input                      */
       61     5940
       62     5941
       63     5942         /***
       64     5943          *** Locals:
       65     5944          ***/
       66     5945
       67     5946        %VLP_SN(FPTN=NSNLIST,N=128);
       68     5959        %VLP_SN(FPTN=TAPESN,N=1);
       69     5972        %VLP_ACCT(FPTN=VOLACN);
       70     5985        %VLP_SN(FPTN=VOLSN,N=1);
       71     5998        %VLR_SITEINFO;
       72     6017
       73     6018    1     DCL ASN CHAR(6) STATIC;               /* A serial number                    */
       74     6019    1     DCL BASESN CHAR(6) STATIC;            /* Serial number image                */
       75     6020    1     DCL BRKFLAG BIT(1) STATIC SYMDEF;     /* For breaks                         */
       76     6021    1     DCL BYPCONCHK BIT(1) STATIC;          /* Bypass content checking            */
       77     6022    1     DCL CMNDERROR BIT(1) STATIC;          /* Error flag                         */
       78     6023    1     DCL COMMAND SBIN STATIC;              /* Command being executed             */
       79     6024    1     DCL CPOS SBIN STATIC;                 /* Character position                 */
PL6.E3A0      #001=FTX$LABEL File=FTX$LABEL.:E05TSI                              TUE 07/29/97 18:01 Page:4    
       80     6025    1     DCL DSTARTNUM CHAR(12) STATIC;        /* Decimal ser seq num                */
       81     6026    1     DCL DSTARTNUMC(0:11) REDEF DSTARTNUM CHAR(1);
       82     6027    1     DCL FIRSTSEQSN CHAR(6) STATIC;        /* First sequential sn of range       */
       83     6028    1     DCL FMSEC BIT(36) STATIC;             /* Remembers if FMSEC on              */
       84     6029    1     DCL FOUR_CHARS CHAR(4) STATIC;
       85     6030    1     DCL 1 GREETINGS STATIC,
       86     6031    1            2 * CHAR(0) UNAL INIT(' LABEL '),
       87     6032    1            2 GVERS CHAR(4) CALIGNED INIT('XXXX'),
       88     6033    1            2 * CHAR(1) CALIGNED INIT(' '),
       89     6034    1            2 GTIME CHAR(5) UNAL,
       90     6035    1            2 * CHAR(0) UNAL INIT(' '),
       91     6036    1            2 GDAY CHAR(3) UNAL,
       92     6037    1            2 * CHAR(0) UNAL INIT(' '),
       93     6038    1            2 GDATE CHAR(10) UNAL;
       94     6039    1     DCL INCNUM SBIN STATIC;               /* Increment                          */
       95     6040    1     DCL INSEQUENCE BIT(1) STATIC;         /* If in sequence                     */
       96     6041    1     DCL LASTSEQSN CHAR(6) STATIC;         /* Last sequential sn of range        */
       97     6042    1     DCL LBLBUF CHAR(80) STATIC;           /* Tape label                         */
       98     6043        %LABELS(BASED="REDEF LBLBUF");
       99     6298        %ODLABELS(BASED="REDEF LBLBUF");
      100     6450    1     DCL N SBIN STATIC;
      101     6451    1     DCL NEXTFREENSN SBIN STATIC;          /* Next open named serial number      */
      102     6452    1     DCL NUMLABELED SBIN STATIC;           /* Number of tapes labelled           */
      103     6453    1     DCL 1 NUMLBLMSG STATIC,
      104     6454    1            2 * CHAR(0) UNAL INIT(' '),
      105     6455    1            2 NUMLBL CHAR(4) UNAL,
      106     6456    1            2 * CHAR(0) UNAL INIT(' tapes labelled');
      107     6457    1     DCL NUMSNSPECS SBIN STATIC;           /* Number of named serial number      */
      108     6458    1     DCL OBUFSIZE SBIN STATIC;             /* Output buffer size                 */
      109     6459    1     DCL OBUFX SBIN STATIC;                /* Output buffer index                */
      110     6460    1     DCL OPTIONBLK$ PTR STATIC;            /* Pointer to option node             */
      111     6461    1     DCL OPTIONNUM SBIN STATIC;            /* Ix of option being processed       */
      112     6462    1     DCL OPTIONSPECIFIED(0:%MAXOPTIONCODE) BIT(1) STATIC;
      113     6463                                                /* To check if multiply specified     */
      114     6464    1     DCL OUT$ PTR STATIC;                  /* Pointer to output nodes            */
      115     6465    1     DCL OUTBUF CHAR(80) STATIC;           /* Output buffer                      */
      116     6466    1     DCL PLACESIZE SBIN STATIC;            /* Size of number field               */
PL6.E3A0      #001=FTX$LABEL File=FTX$LABEL.:E05TSI                              TUE 07/29/97 18:01 Page:5    
      117     6467    1     DCL PLACESTART SBIN STATIC;           /* Ix of number byte                  */
      118     6468    1     DCL PREVSN CHAR(6) STATIC;            /* Previous serial number             */
      119     6469    1     DCL SNBLANKX SBIN STATIC;             /* Ix of first blank of sn            */
      120     6470    1     DCL SNNUM SBIN STATIC;                /* Serial number number               */
      121     6471    1     DCL 1 SNSPECS(0:127) STATIC,          /* Serial number specifications       */
      122     6472    1            2 NAMED BIT(1) UNAL,           /* Is this sn named?                  */
      123     6473    1            2 FIRSTNAMEX UBIN(17) UNAL,    /* Index of first name in NSNLIST     */
      124     6474    1            2 LASTNAMEX UBIN(18) UNAL,     /* Index of last name                 */
      125     6475    1            2 NUMNOTNAMED REDEF LASTNAMEX UBIN(18) UNAL;
      126     6476    1     DCL SPEC SBIN STATIC;                 /* Specification number               */
      127     6477                                                /* Number not named                   */
      128     6478    1     DCL STARTNUM SBIN STATIC;             /* Starting number                    */
      129     6479    1     DCL TEMP SBIN STATIC;
      130     6480    1     DCL TEMP$ PTR STATIC;
      131     6481    1     DCL TEMP2$ PTR STATIC;
      132     6482    1     DCL VOLACCESS SBIN STATIC;            /* Access limitation                  */
      133     6483    1     DCL DENSITY SBIN STATIC;              /* Density                            */
      134     6484    1     DCL VOLUME_TYPE SBIN STATIC;         /* Type of volume being re-initialized */
      135     6485
      136     6486         /***
      137     6487          *** BASED:
      138     6488          ***/
      139     6489
      140     6490        %B$ALT;
      141     6498        %B$TCB;
      142     6501    1     DCL CHARS CHAR(N) BASED UNAL;         /* The variable character string      */
      143     6502        %PARSE$OUT(STCLASS=BASED);
      144     6547        %PARSE$SYM(STCLASS=BASED);
      145     6585    1     DCL 1 TEXTC BASED UNAL,
      146     6586    1            2 L UBIN BYTE UNAL,
      147     6587    1            2 C CHAR(TEXTC.L) UNAL;
      148     6588
      149     6589         /***
      150     6590          *** FPTs:
      151     6591          ***/
      152     6592
      153     6593        %FPT_INT(FPTN=BRKCTL,
PL6.E3A0      #001=FTX$LABEL File=FTX$LABEL.:E05TSI                              TUE 07/29/97 18:01 Page:6    
      154     6594         UENTRY=FTX$LBLBRK);
      155     6608
      156     6609        %FPT_PRIV( FPTN=CHKLABELRUN,
      157     6610         PRIV=%PPR_LABEL#,
      158     6611         PPRIV=YES);
      159     6626
      160     6627        %FPT_MONINFO(SITEINFO=VLR_SITEINFO);
      161     6642
      162     6643        %FPT_CLOSE(FPTN=CLSREMLBL,
      163     6644         DCB=M$EI,
      164     6645         POS=REM);
      165     6687
      166     6688        %FPT_CLOSE(FPTN=CLSREWLBL,
      167     6689         DCB=M$EI,
      168     6690         NOMARKS=YES,
      169     6691         POS=PTV);
      170     6733
      171     6734        %FPT_EXIT(FPTN=EXITCC,
      172     6735         STEPCC=OK);
      173     6750
      174     6751        %FPT_WRITE(FPTN=ERRTELL,
      175     6752         DCB=M$DO);
      176     6783
      177     6784        %FPT_TIME(FPTN=GETTIME,
      178     6785         TIME="GREETINGS.GTIME",
      179     6786         DAY="GREETINGS.GDAY",
      180     6787         DATE="GREETINGS.GDATE");
      181     6806
      182     6807        %FPT_WRITE(FPTN=GREETUSR,
      183     6808         DCB=M$LO,
      184     6809         BUF=GREETINGS);
      185     6840
      186     6841        %XUG_INIT(COMMANDS=YES,
      187     6842         GOODCMD=YES,
      188     6843         INHIBIT_END=YES);
      189     7256
      190     7257        %XUG_GETCMD(NODES=A_COMMAND,
PL6.E3A0      #001=FTX$LABEL File=FTX$LABEL.:E05TSI                              TUE 07/29/97 18:01 Page:7    
      191     7258         PROMPT=LABEL_PROMPT);
      192     7596
      193     7597        %FPT_OPEN(FPTN=OPENCREATELBL,
      194     7598         DCB=M$EI,
      195     7599         ASN=DEVICE,
      196     7600         RES='MT',
      197     7601         SN=TAPESN,
      198     7602         FUN=CREATE,
      199     7603         SCRUB=YES);
      200     7712
      201     7713        %FPT_OPEN(FPTN=OPENLBL,
      202     7714         DCB=M$EI,
      203     7715         ASN=DEVICE,
      204     7716         RES='MT',
      205     7717         SN=TAPESN,
      206     7718         FUN=UPDATE,
      207     7719         SCRUB=YES);
      208     7828
      209     7829        %FPT_OPEN(FPTN=OPENOD,
      210     7830         DCB=M$EI,
      211     7831         ASN=DEVICE,
      212     7832         RES='OD',
      213     7833         SN=TAPESN,
      214     7834         SCRUB=YES);
      215     7943
      216     7944        %FPT_REM(FPTN=REMLBL);
      217     7958
      218     7959        %FPT_READ(FPTN=READLBL,
      219     7960         DCB=M$EI,
      220     7961         BUF=LBLBUF);
      221     8000
      222     8001        %FPT_REW(FPTN=REWLBL,
      223     8002         DCB=M$EI);
      224     8017
      225     8018        %FPT_WRITE(FPTN=SHOWOUT,
      226     8019         DCB=M$LO,
      227     8020         BUF=OUTBUF);
PL6.E3A0      #001=FTX$LABEL File=FTX$LABEL.:E05TSI                              TUE 07/29/97 18:01 Page:8    
      228     8051
      229     8052        %FPT_PRIV( FPTN=SWITCHFMSEC,
      230     8053         PRIV=%PR_FMSEC#);
      231     8068
      232     8069        %FPT_WRITE(FPTN=TELNUMLBL,
      233     8070         DCB=M$LO,
      234     8071         BUF=NUMLBLMSG);
      235     8102
      236     8103        %FPT_WEOF(FPTN=WEOFLBL,
      237     8104         DCB=M$EI);
      238     8118
      239     8119        %FPT_WRITE(FPTN=WRITBLNK,
      240     8120         DCB=M$DO,
      241     8121         BUF=BLANKS);
      242     8152
      243     8153        %FPT_WRITE(FPTN=WRITLBL,
      244     8154         DCB=M$EI,
      245     8155         BUF=LBLBUF);
      246     8186
      247     8187        %FPT_WRITE(FPTN=WRITLBLOD,
      248     8188         DCB=M$EI,
      249     8189         BUF=LBLBUF,
      250     8190         ODFNC=LABEL);
      251     8221
      252     8222         /***
      253     8223          *** CONSTANTs:
      254     8224          ***/
      255     8225
      256     8226    1     DCL ACNSIZE SBIN CONSTANT INIT(LENGTHC(VOLACN.ACCT#));
      257     8227    1     DCL BLANKS CHAR(1) CONSTANT INIT(' ');
      258     8228    1     DCL LABEL_PROMPT CHAR(1) CONSTANT INIT('*');
      259     8229    1     DCL NO3LEADINGZS(0:2) BIT(9) CONSTANT UNAL INIT( %MVZB3, %SES10, %MVC1 );
      260     8230    1     DCL SNSIZE SBIN CONSTANT INIT(LENGTHC(VOLSN.SN#(0)));
      261     8231
      262     8232    1     DCL PO80B(0:19) BIT(36) CONSTANT INIT(
              8232              /* First 80 bytes of CP-6 PO tape read ASCII */
      263     8233    1    '000007000000'O,'260010000000'O,'150377377377'O,'370000000000'O,
PL6.E3A0      #001=FTX$LABEL File=FTX$LABEL.:E05TSI                              TUE 07/29/97 18:01 Page:9    
      264     8234    1    '000000000000'O,'322010000000'O,'273300200000'O,'000123310000'O,
      265     8235    1    '000037364200'O,'000000203310'O,'000000265072'O,'200000000075'O,
      266     8236    1    '250056202005'O,'072207000000'O,'075250000000'O,'303042200000'O,
      267     8237    1    '006074050000'O,'000004032200'O,'000000361310'O,'000000243220'O );
      268     8238    1     DCL PO80 REDEF PO80B CHAR(80);
      269     8239
      270     8240
      271     8241        %EQU MAX_ERMSG=13;
      272     8242    1     DCL ERMSG(0:%MAX_ERMSG) CHAR(70) CONSTANT INIT(
      273     8243        %EQU PROGRAM_BUG=0;
      274     8244    1               ' *** LABEL bug...talk to programmergrammerrammerammermmermererr',
      275     8245         %EQU PLACE_RANGE_START_WRONG=1;
      276     8246    1               ' *** PLACE must identify character position within serial number',
      277     8247         %EQU PLACE_RANGE_END_WRONG=2;
      278     8248    1               ' *** PLACE must identify character position within serial number',
      279     8249         %EQU PLACE_RANGE_END_SMALL=3;
      280     8250    1               ' *** End of PLACE range must be at least as large as start',
      281     8251         %EQU AT_LEAST_1=4;
      282     8252    1               ' *** At least 1 tape must be specified',
      283     8253         %EQU AT_MOST_1=5;
      284     8254    1               ' *** No more than 1 tape can be specified',
      285     8255         %EQU BLANK_IN_SN=6;
      286     8256    1               ' *** A serial number can not begin with blanks',
      287     8257         %EQU NO_NUM_ROOM=7;
      288     8258    1               ' *** The serial sequence number can not be placed in the SN',
      289     8259         %EQU NO_ACCOUNT_ACCESS=8;
      290     8260    1               ' *** An ACCOUNT must be specified if ACCESS is specified',
      291     8261         %EQU BLANK_IN_OUT_SN=9;
      292     8262    1               ' *** A serial number can not contain blanks',
      293     8263         %EQU NO_OD_PLATLIST=10;
      294     8264    1               ' *** You must specify an input platter number!',
      295     8265         %EQU INVALID_OD_SIDE=11;
      296     8266    1               ' *** Invalid platter side (must be A or B)!',
      297     8267         %EQU CANT_RUN_LABEL=12;
      298     8268    1               ' *** You are not allowed to run LABEL',
      299     8269         %EQU SHOULD_HAVE_FMSEC=13;
      300     8270    1               ' *** This LABEL wasn''t LINKed with FMSEC...turn it on' );
PL6.E3A0      #001=FTX$LABEL File=FTX$LABEL.:E05TSI                              TUE 07/29/97 18:01 Page:10   
      301     8271
      302     8272                                                /*** Volume types ***/
      303     8273
      304     8274        %EQU ASCII_VOL=0;
      305     8275        %EQU EBCDIC_VOL=1;
      306     8276        %EQU UNKNOWN_VOL=2;
      307     8277        %EQU PO_VOL=3;
      308     8278
      309     8279         /***
      310     8280          *** SUBs:
      311     8281          ***/
      312     8282
      313     8283        %SUB ALTRET_HANDLING="WHILE('0'B)";
      314     8284
      315     8285        /********************/
      316     8286
      317     8287         /***
      318     8288          *** Make sure user is allowed to run LABEL.
      319     8289          ***/
      320     8290
      321     8291    1           FMSEC = B$JIT.PRIV.JOB & %PR_FMSEC#; /* Remember if FMSEC on          */
      322     8292    1           IF NOT FMSEC THEN CALL M$RPRIV( SWITCHFMSEC ) ALTRET( SHFMSEC );
      323     8293    2           DO ALTRET_HANDLING;
      324     8294    2   SHFMSEC:   ;                            /* Should have had FMSEC              */
      325     8295    2              CALL FTX_ERROR( %SHOULD_HAVE_FMSEC, -1 );
      326     8296    2              CALL M$EXIT( EXITCC );
      327     8297    2              END;
      328     8298    1           CALL M$SPRIV( CHKLABELRUN ) ALTRET( CANTRUNLABEL );
      329     8299    2           DO ALTRET_HANDLING;
      330     8300    2   CANTRUNLABEL: ;
      331     8301    2              CALL FTX_ERROR( %CANT_RUN_LABEL, -1 );
      332     8302    2              CALL M$EXIT( EXITCC );
      333     8303    2              END;
      334     8304    1           CALL M$TIME( GETTIME ) ALTRET( MONERR );
      335     8305    1           GREETINGS.GVERS = ADDR(B_VERSION)->TEXTC.C;
      336     8306    1           CALL M$WRITE( GREETUSR );
      337     8307    1           CALL M$MONINFO(FPT_MONINFO);
PL6.E3A0      #001=FTX$LABEL File=FTX$LABEL.:E05TSI                              TUE 07/29/97 18:01 Page:11   
      338     8308    1           CALL M$INT( BRKCTL );
      339     8309    1           CALL XUG$INIT(XUG_GETCMD, XUG_INIT);
      340     8310         /***
      341     8311          *** Get next command.
      342     8312          ***/
      343     8313
      344     8314    2           DO WHILE('1'B);
      345     8315
      346     8316         /***
      347     8317             *** Get next command and parse it.
      348     8318             ***/
      349     8319
      350     8320    2              CALL XUG$GETCMD(XUG_GETCMD) ALTRET(MONERR);
      351     8321    2              CMNDERROR = %NO#;            /* No errors detected yet             */
      352     8322    2              BRKFLAG = %NO#;              /* No breaks                          */
      353     8323
      354     8324         /***
      355     8325             *** Remember type to command to determine if options are valid.
      356     8326             ***/
      357     8327
      358     8328    3              DO CASE(XUG_GETCMD.OUT$->OUT$BLK.CODE); /* Determine command       */
      359     8329    3                 CASE(%LABEL_COMMAND);
      360     8330    3                    COMMAND = %LABEL_COMMAND;
      361     8331    3                    CALL FTX_SEQ_LBL_OPTIONS;
      362     8332    3                 CASE(%ODLABEL_COMMAND);
      363     8333    3                    COMMAND = %ODLABEL_COMMAND;
      364     8334    3                    CALL FTX_SEQ_LBL_OPTIONS;
      365     8335    3                 CASE(%SEQUENTIAL_COMMAND);
      366     8336    3                    COMMAND = %SEQUENTIAL_COMMAND;
      367     8337    3                    CALL FTX_SEQ_LBL_OPTIONS;
      368     8338    3                 CASE(%ODSEQUEN_COMMAND);
      369     8339    3                    COMMAND = %ODSEQUEN_COMMAND;
      370     8340    3                    CALL FTX_SEQ_LBL_OPTIONS;
      371     8341    3                 CASE(%END_COMMAND);
      372     8342    3                    CALL M$EXIT( EXITCC );
      373     8343    3                 CASE(%SCRATCH_COMMAND);
      374     8344    3                    COMMAND = %SCRATCH_COMMAND;
PL6.E3A0      #001=FTX$LABEL File=FTX$LABEL.:E05TSI                              TUE 07/29/97 18:01 Page:12   
      375     8345    3                    CALL FTX_SEQ_LBL_OPTIONS;
      376     8346    3                 CASE(%REM_COMMAND);
      377     8347    3                    COMMAND = %REM_COMMAND;
      378     8348    3                    CALL FTX_REM_OPTION;
      379     8349    3                 CASE(ELSE);
      380     8350    3                    CALL FTX_ERROR(%PROGRAM_BUG,0);
      381     8351    3                    CALL M$EXIT( EXITCC );
      382     8352    3                 END;
      383     8353
      384     8354    3              DO WHILE('0'B);
      385     8355    3   MONERR:       ;
      386     8356    3                 CALL FTX_RPTERR;
      387     8357    3                 CALL M$EXIT( EXITCC );
      388     8358    3                 END;
      389     8359    2              END;
      390     8360        /********************************************************************/
      391     8361        %EJECT;
PL6.E3A0      #001=FTX$LABEL File=FTX$LABEL.:E05TSI                              TUE 07/29/97 18:01 Page:13   
      392     8362        /********************************************************************/
      393     8363    1   FTX_SEQ_LBL_OPTIONS: PROC;
      394     8364        /*F*     NAME: FTX_SEQ_LBL_OPTIONS
      395     8365                 PURPOSE: Process SEQUENTIAL or LABEL options.
      396     8366         ***/
      397     8367
      398     8368        /********************/
      399     8369
      400     8370         /***
      401     8371          *** Initialize for next command.
      402     8372          ***/
      403     8373
      404     8374    3              DO N=0 TO %MAXOPTIONCODE;    /* No options seen yet                */
      405     8375    3                 OPTIONSPECIFIED(N) = %NO#;
      406     8376    3                 END;
      407     8377
      408     8378    2              NEXTFREENSN = -1;            /* Nothing in named sn list           */
      409     8379    2              STARTNUM = 0;                /* Default start is 0                 */
      410     8380    2              INCNUM = 1;                  /* Default increment is 1             */
      411     8381    2              VOLACCESS = 0;               /* No volume protection specified     */
      412     8382    2              DENSITY = 0;                 /* No density specified               */
      413     8383    2              BASESN = '000000';           /* No base serial number              */
      414     8384    2              PLACESTART = -1;             /* No place to put seq number         */
      415     8385    2              NUMLABELED = 0;              /* No tapes labelled                  */
      416     8386    2              VOLACN.ACCT# = ' ';          /* No owner                           */
      417     8387    2              FIRSTSEQSN = ' ';            /* No range beginning                 */
      418     8388    2              NUMSNSPECS = 0;              /* No input sn list                   */
      419     8389    2              SNBLANKX = 0;                /* From initial sn                    */
      420     8390    2              BYPCONCHK = %NO#;            /* Default check contents             */
      421     8391
      422     8392         /***
      423     8393          *** Process options.
      424     8394          ***/
      425     8395
      426     8396    3              DO OPTIONNUM=0 TO XUG_GETCMD.OUT$->OUT$BLK.NSUBLKS-1;
      427     8397    3                 IF BRKFLAG THEN
      428     8398    3                    RETURN;               /* Don't execute command if break hit. */
PL6.E3A0      #001=FTX$LABEL File=FTX$LABEL.:E05TSI                              TUE 07/29/97 18:01 Page:14   
      429     8399    3                 OPTIONBLK$ = XUG_GETCMD.OUT$->OUT$BLK.SUBLK$(OPTIONNUM);
      430     8400    3                 OPTIONSPECIFIED(OPTIONBLK$->OUT$BLK.CODE) = %YES#;
      431     8401    4                 DO CASE(OPTIONBLK$->OUT$BLK.CODE);
      432     8402    4                    CASE(%SNLIST);
      433     8403    4                       SNNUM = OPTIONBLK$->OUT$BLK.NSUBLKS; /* Get number of sns */
      434     8404    5                       DO N=0 TO SNNUM-1;
      435     8405    5                          ASN = OPTIONBLK$->OUT$BLK.SUBLK$(N)->OUT$SYM.TEXT;
              8405                                   /* Save sn */
      436     8406    5                          NEXTFREENSN = NEXTFREENSN + 1;
      437     8407    5                          NSNLIST.SN#(NEXTFREENSN) = ASN;
      438     8408    5                          CALL INDEX(TEMP,' ',ASN);
      439     8409    6                          IF TEMP = 0 THEN DO;
      440     8410    6                             CPOS = OPTIONBLK$->OUT$BLK.SUBLK$(N)->OUT$SYM.CPOS;
      441     8411    6                             CALL FTX_ERROR(%BLANK_IN_SN,CPOS);
      442     8412    6                             END;
      443     8413    5                          END;
      444     8414    4                       SNSPECS.NAMED(NUMSNSPECS) = %YES#; /* These are named     */
      445     8415    4                       SNSPECS.LASTNAMEX(NUMSNSPECS) = NEXTFREENSN;
              8415                                /* Ix of last in group */
      446     8416    4                       SNSPECS.FIRSTNAMEX(NUMSNSPECS) = NEXTFREENSN - (SNNUM - 1);
      447     8417    4                       NUMSNSPECS = NUMSNSPECS + 1;
      448     8418
      449     8419    4                    CASE(%PLATLIST);
      450     8420    4                       SNNUM = OPTIONBLK$->OUT$BLK.NSUBLKS; /* Get number of sns */
      451     8421    5                       DO N=0 TO SNNUM-1;
      452     8422    5                          TEMP = OPTIONBLK$->OUT$BLK.SUBLK$(N)->OUT$SYM.COUNT;
      453     8423    5                          ASN = OPTIONBLK$->OUT$BLK.SUBLK$(N)->OUT$SYM.TEXT;
      454     8424    6                          IF SUBSTR(ASN,TEMP-1,1) ~= 'A' AND SUBSTR(ASN,TEMP-1,1) ~=
              8424                                   'B' THEN DO;
      455     8425    6                             CPOS = OPTIONBLK$->OUT$BLK.SUBLK$(N)->OUT$SYM.CPOS + TEMP
              8425                                      - 1;
      456     8426    6                             CALL FTX_ERROR(%INVALID_OD_SIDE,CPOS);
      457     8427    6                             END;
      458     8428    5                          NEXTFREENSN = NEXTFREENSN + 1;
      459     8429    5                          NSNLIST.SN#(NEXTFREENSN) = ASN;
      460     8430    5                          END;
      461     8431    4                       SNSPECS.NAMED(NUMSNSPECS) = %YES#; /* These are named     */
PL6.E3A0      #001=FTX$LABEL File=FTX$LABEL.:E05TSI                              TUE 07/29/97 18:01 Page:15   
      462     8432    4                       SNSPECS.LASTNAMEX(NUMSNSPECS) = NEXTFREENSN;
              8432                                /* Ix of last in group */
      463     8433    4                       SNSPECS.FIRSTNAMEX(NUMSNSPECS) = NEXTFREENSN - (SNNUM - 1);
      464     8434    4                       NUMSNSPECS = NUMSNSPECS + 1;
      465     8435
      466     8436    4                    CASE(%NUMTAPES);
      467     8437    4                       SNSPECS.NAMED(NUMSNSPECS) = %NO#;
      468     8438    4                       CALL CHARBIN(N,OPTIONBLK$->OUT$BLK.SUBLK$(0)->OUT$SYM.TEXT);
      469     8439    5                       IF N >= 1 THEN DO;
      470     8440    5                          SNSPECS.NUMNOTNAMED(NUMSNSPECS) = N;
      471     8441    5                          NUMSNSPECS = NUMSNSPECS + 1;
      472     8442    5                          END;
      473     8443
      474     8444    4                    CASE(%START);
      475     8445    4                       CALL CHARBIN(STARTNUM,OPTIONBLK$->OUT$BLK.SUBLK$(0)->OUT$SYM.
              8445                                TEXT);
      476     8446
      477     8447    4                    CASE(%INCREMENT);
      478     8448    4                       CALL CHARBIN(INCNUM,OPTIONBLK$->OUT$BLK.SUBLK$(0)->OUT$SYM.TEXT)
              8448                                ;
      479     8449
      480     8450    4                    CASE(%PLACE);
      481     8451    4                       CALL CHARBIN(PLACESTART,OPTIONBLK$->OUT$BLK.SUBLK$(0)->OUT$SYM.
              8451                                TEXT);
      482     8452    5                       IF PLACESTART < 1 OR PLACESTART > 6 THEN DO;
              8452                                /* Must ix(1-6) char of sn */
      483     8453    5                          CPOS = OPTIONBLK$->OUT$BLK.SUBLK$(0)->OUT$SYM.CPOS;
      484     8454    5                          CALL FTX_ERROR(%PLACE_RANGE_START_WRONG,CPOS);
      485     8455    5                          PLACESTART = 1;
      486     8456    5                          END;
      487     8457    4                       IF OPTIONBLK$->OUT$BLK.NSUBLKS = 1 THEN
      488     8458    4                          PLACESIZE = 1;   /* Just place start specified         */
      489     8459    5                       ELSE DO;            /* End specified also                 */
      490     8460    5                          CALL CHARBIN(N,OPTIONBLK$->OUT$BLK.SUBLK$(1)->OUT$SYM.TEXT);
      491     8461    6                          IF N < 1 OR N > 6 THEN DO; /* End must be in sn        */
      492     8462    6                             CPOS = OPTIONBLK$->OUT$BLK.SUBLK$(1)->OUT$SYM.CPOS;
      493     8463    6                             CALL FTX_ERROR(%PLACE_RANGE_END_WRONG,CPOS);
PL6.E3A0      #001=FTX$LABEL File=FTX$LABEL.:E05TSI                              TUE 07/29/97 18:01 Page:16   
      494     8464    6                             END;
      495     8465    5                          PLACESIZE = N - PLACESTART + 1;
      496     8466    6                          IF PLACESIZE < 1 THEN DO;
              8466                                   /* Can't put into less than 1 byte */
      497     8467    6                             CPOS = OPTIONBLK$->OUT$BLK.SUBLK$(1)->OUT$SYM.CPOS;
      498     8468    6                             CALL FTX_ERROR(%PLACE_RANGE_END_SMALL,CPOS);
      499     8469    6                             END;
      500     8470    5                          END;
      501     8471
      502     8472    4                    CASE(%SERIAL);
      503     8473    4                       BASESN = OPTIONBLK$->OUT$BLK.SUBLK$(0)->OUT$SYM.TEXT;
              8473                                /* Remember sn */
      504     8474    4                       VOLSN.SN#(0) = BASESN;
      505     8475    4                       CALL INDEX(SNBLANKX,' ',BASESN); /* Check validity        */
      506     8476    5                       IF SNBLANKX = 0 THEN DO;
      507     8477    5                          CPOS = OPTIONBLK$->OUT$BLK.SUBLK$(0)->OUT$SYM.CPOS;
      508     8478    5                          CALL FTX_ERROR(%BLANK_IN_SN,CPOS);
      509     8479    5                          END;
      510     8480
      511     8481    4                    CASE(%INACC);
      512     8482    4                       VOLACCESS = %IN#;
      513     8483
      514     8484    4                    CASE(%NONEACC);
      515     8485    4                       OPTIONSPECIFIED(%INACC) = %YES#;
      516     8486    4                       VOLACCESS = %NONE#;
      517     8487
      518     8488    4                    CASE(%ALLACC);
      519     8489    4                       OPTIONSPECIFIED(%INACC) = %YES#;
      520     8490    4                       VOLACCESS = %ALL#;
      521     8491
      522     8492    4                    CASE(%DEN800);
      523     8493    4                       DENSITY = %D800#;
      524     8494
      525     8495    4                    CASE(%DEN1600);
      526     8496    4                       OPTIONSPECIFIED(%DEN800) = %YES#;
      527     8497    4                       DENSITY = %D1600#;
      528     8498
PL6.E3A0      #001=FTX$LABEL File=FTX$LABEL.:E05TSI                              TUE 07/29/97 18:01 Page:17   
      529     8499    4                    CASE(%DEN6250);
      530     8500    4                       OPTIONSPECIFIED(%DEN800) = %YES#;
      531     8501    4                       DENSITY = %D6250#;
      532     8502
      533     8503    4                    CASE(%DEN38000);
      534     8504    4                       OPTIONSPECIFIED(%DEN800) = %YES#;
      535     8505    4                       DENSITY = %D38000#;
      536     8506
      537     8507    4                    CASE(%ACCOUNT);
      538     8508    4                       VOLACN.ACCT# = OPTIONBLK$->OUT$BLK.SUBLK$(0)->OUT$SYM.TEXT;
              8508                                /* Remember account */
      539     8509
      540     8510    4                    CASE(%BYPCONCHK);
      541     8511    4                       BYPCONCHK = %YES#;
      542     8512
      543     8513    4                    CASE(ELSE);
      544     8514    4                       CALL FTX_ERROR(%PROGRAM_BUG,0);
      545     8515    4                    END;
      546     8516    3                 END;
      547     8517
      548     8518         /***
      549     8519          *** ACCOUNT must be specified if ACCESS is.
      550     8520          ***/
      551     8521
      552     8522    2              IF OPTIONSPECIFIED(%INACC) AND NOT OPTIONSPECIFIED(%ACCOUNT) THEN
      553     8523    2                 CALL FTX_ERROR(%NO_ACCOUNT_ACCESS,-1);
      554     8524
      555     8525         /***
      556     8526          *** Must specify a PLATLIST when labelling optical disk.
      557     8527          ***/
      558     8528
      559     8529    2              IF COMMAND = %ODLABEL_COMMAND OR COMMAND = %ODSEQUEN_COMMAND THEN
      560     8530    3                 IF NOT OPTIONSPECIFIED(%PLATLIST) THEN DO;
      561     8531    3                    CALL FTX_ERROR(%NO_OD_PLATLIST,-1);
      562     8532    3                    RETURN;
      563     8533    3                    END;
      564     8534         /***
PL6.E3A0      #001=FTX$LABEL File=FTX$LABEL.:E05TSI                              TUE 07/29/97 18:01 Page:18   
      565     8535          *** If no input specified, assume 1 TAPE.
      566     8536          ***/
      567     8537
      568     8538    3              IF NUMSNSPECS < 1 THEN DO;
      569     8539    4                 IF OPTIONSPECIFIED(%NUMTAPES) THEN DO; /* Didn't specify any    */
      570     8540    4                    CALL FTX_ERROR(%AT_LEAST_1,-1);
      571     8541    4                    RETURN;
      572     8542    4                    END;
      573     8543    3                 SNSPECS.NAMED(0) = %NO#;
      574     8544    3                 SNSPECS.NUMNOTNAMED(0) = 1;
      575     8545    3                 NUMSNSPECS = 1;
      576     8546    3                 END;
      577     8547
      578     8548         /***
      579     8549          *** Only one input volume can be specified for LABEL command.
      580     8550          ***/
      581     8551
      582     8552    3              IF COMMAND ~= %SCRATCH_COMMAND THEN DO;
      583     8553    4                 IF COMMAND = %LABEL_COMMAND OR COMMAND = %ODLABEL_COMMAND THEN DO;
      584     8554    4                    IF NUMSNSPECS > 1      /* Too many specs                     */
      585     8555    4                        OR (SNSPECS.NAMED(0) /* More than 1 named volume         */
      586     8556    4                        AND SNSPECS.FIRSTNAMEX(0) ~= SNSPECS.LASTNAMEX(0) )
      587     8557    4                        OR (NOT SNSPECS.NAMED(0) /* More than 1 unnamed volume   */
      588     8558    5                        AND SNSPECS.NUMNOTNAMED(0) > 1) THEN DO;
              8558                                 /* More than 1 specified */
      589     8559    5                       CALL FTX_ERROR(%AT_MOST_1,-1);
      590     8560    5                       END;
      591     8561    4                    END;
      592     8562    4                 ELSE DO;                  /* Sequential command                 */
      593     8563    5                    IF PLACESTART = -1 THEN DO; /* Not specified                 */
      594     8564    5                       PLACESTART = SNBLANKX + 1;
      595     8565    5                       PLACESIZE = LENGTHC(VOLSN.SN#(0)) - PLACESTART + 1;
      596     8566    5                       IF PLACESTART > 6 THEN /* No room for number              */
      597     8567    5                          CALL FTX_ERROR(%NO_NUM_ROOM,-1);
      598     8568    5                       END;
      599     8569    4                    PLACESTART = PLACESTART - 1; /* Change to index              */
      600     8570    5                    IF PLACESTART > SNBLANKX THEN DO; /* Don't create sn with blanks */
PL6.E3A0      #001=FTX$LABEL File=FTX$LABEL.:E05TSI                              TUE 07/29/97 18:01 Page:19   
      601     8571    5                       CALL FTX_ERROR(%BLANK_IN_OUT_SN,-1);
      602     8572    5                       RETURN;
      603     8573    5                       END;
      604     8574    4                    STARTNUM = STARTNUM - INCNUM; /* Set initial start number    */
      605     8575    4                    END;
      606     8576    3                 END;
      607     8577
      608     8578         /***
      609     8579          *** Don't execute command if error.
      610     8580          ***/
      611     8581
      612     8582    2              IF BRKFLAG OR CMNDERROR THEN
      613     8583    2                 RETURN;
      614     8584
      615     8585         /***
      616     8586          *** Ready to label tapes.
      617     8587          ***/
      618     8588
      619     8589    2              SPEC = 0;                    /* Start at first input spec          */
      620     8590    2              INSEQUENCE = %NO#;           /* Not known to be in sequence        */
      621     8591    2              OBUFSIZE = 0;                /* Nothing in output buffer           */
      622     8592    2              OBUFX = 0;
      623     8593    2              OUTBUF = ' ';                /* Blank output buffer                */
      624     8594    3              DO CASE(COMMAND);
      625     8595    3                 CASE(%LABEL_COMMAND);
      626     8596    3                    CALL FTX_GEN_NEXT_IN_SN ALTRET(DONESEQ);
      627     8597    3                    CALL FTX_LABEL_TAPE ALTRET(DONESEQ);
      628     8598    3                 CASE(%ODLABEL_COMMAND);
      629     8599    3                    CALL FTX_GEN_NEXT_IN_SN ALTRET(DONESEQ);
      630     8600    3                    CALL FTX_LABEL_OD ALTRET(DONESEQ);
      631     8601    3                 CASE(%SEQUENTIAL_COMMAND);
      632     8602    4                    DO WHILE('1'B);
      633     8603    4                       CALL FTX_GEN_NEXT_OUT_SN ALTRET(DONESEQ);
      634     8604    4                       CALL FTX_GEN_NEXT_IN_SN ALTRET(DONESEQ);
      635     8605    4                       CALL FTX_LABEL_TAPE ALTRET(DONESEQ);
      636     8606    4                       END;
      637     8607    3                 CASE(%ODSEQUEN_COMMAND);
PL6.E3A0      #001=FTX$LABEL File=FTX$LABEL.:E05TSI                              TUE 07/29/97 18:01 Page:20   
      638     8608    4                    DO WHILE('1'B);
      639     8609    4                       CALL FTX_GEN_NEXT_OUT_SN ALTRET(DONESEQ);
      640     8610    4                       CALL FTX_GEN_NEXT_IN_SN ALTRET(DONESEQ);
      641     8611    4                       CALL FTX_LABEL_OD ALTRET(DONESEQ);
      642     8612    4                       END;
      643     8613    3                 CASE(%SCRATCH_COMMAND);
      644     8614    3                    VOLSN.SN#(0) = ' ';    /* No output sn                       */
      645     8615    4                    DO WHILE('1'B);
      646     8616    4                       CALL FTX_GEN_NEXT_IN_SN ALTRET(DONESEQ);
      647     8617    4                       CALL FTX_LABEL_TAPE ALTRET(DONESEQ);
      648     8618    4                       END;
      649     8619    3                 END;
      650     8620
      651     8621    2   DONESEQ:   ;
      652     8622    2              CALL FTX_DUMP_BUF;
      653     8623    2              CALL BINCHAR( FOUR_CHARS, NUMLABELED );
      654     8624    2              CALL EDITCHAR( NUMLBLMSG.NUMLBL, , , NO3LEADINGZS, FOUR_CHARS );
      655     8625    2              CALL M$WRITE( TELNUMLBL );
      656     8626
      657     8627    2              RETURN;
      658     8628
      659     8629    2      END FTX_SEQ_LBL_OPTIONS;
      660     8630        /********************************************************************/
      661     8631        %EJECT;
PL6.E3A0      #001=FTX$LABEL File=FTX$LABEL.:E05TSI                              TUE 07/29/97 18:01 Page:21   
      662     8632        /********************************************************************/
      663     8633    1   FTX_LABEL_TAPE: PROC ALTRET;
      664     8634        /*F*     NAME: FTX_LABEL_TAPE
      665     8635                 PURPOSE: Labels tape volume and does error checking.
      666     8636         ***/
      667     8637
      668     8638        /********************/
      669     8639
      670     8640         /***
      671     8641          *** To open the tape, turn on FMSEC if user would have it on due
      672     8642          *** to JIT.PRIV.JOB regardless of JIT.PRIV.PRC.  Open the volume.
      673     8643          *** Turn off FMSEC do make sure user can't read (as commands) or
      674     8644          *** write (as listing or diagnostic output) any files which couldn't
      675     8645          *** ordinarily be accessed.
      676     8646          ***/
      677     8647
      678     8648    2              IF NOT FMSEC THEN CALL M$SPRIV( SWITCHFMSEC );
      679     8649    3              IF BYPCONCHK AND DENSITY ~= 0 THEN DO;
      680     8650    3                 OPENCREATELBL.V.DENSITY# = DENSITY;
      681     8651    3                 CALL M$OPEN(OPENCREATELBL) ALTRET(OPNERR);
      682     8652    3                 END;
      683     8653    2              ELSE
      684     8654    2                 CALL M$OPEN( OPENLBL ) ALTRET( OPNERR );
      685     8655    2              IF NOT FMSEC THEN CALL M$RPRIV( SWITCHFMSEC );
      686     8656
      687     8657         /***
      688     8658          *** If bypass content check, use canned label.  Otherwise,
      689     8659          *** read the VOL1 label to determine tape type and previous
      690     8660          *** serial number.
      691     8661          ***/
      692     8662
      693     8663    2              IF BYPCONCHK THEN
      694     8664    2                 PREVSN = '******';
      695     8665    3              ELSE DO;
      696     8666    3                 CALL FTX_READVOL1 ALTRET( RDERR );
      697     8667    4                 DO WHILE('0'B);
      698     8668    4   RDERR:           ;
PL6.E3A0      #001=FTX$LABEL File=FTX$LABEL.:E05TSI                              TUE 07/29/97 18:01 Page:22   
      699     8669    4                    N = B$TCB$->B$TCB.ALT$->B$ALT.ERR.CODE;
      700     8670    4                    IF N ~= %E$EOF AND N ~= %E$BLNKTP AND N ~= %E$IOERR THEN
      701     8671    4                       GOTO LBLERR;
      702     8672    4                    END;
      703     8673    4                 DO CASE(VOLUME_TYPE);
      704     8674    4                    CASE(%ASCII_VOL,%EBCDIC_VOL);
      705     8675    4                       PREVSN = FT$VOL1.SN;
      706     8676    4                    CASE(%UNKNOWN_VOL,%PO_VOL);
      707     8677    4                       PREVSN = ' ';
      708     8678    4                    END;
      709     8679    3                 END;
      710     8680
      711     8681    3              IF BRKFLAG THEN DO;          /* Finish labelling                   */
      712     8682    3                 CALL M$CLOSE( CLSREMLBL ) ALTRET( MONERR );
      713     8683    3                 ALTRETURN;
      714     8684    3                 END;
      715     8685
      716     8686         /***
      717     8687          *** If DENSITY specified, close tape (rewind) and open with
      718     8688          *** proper density at BOT.
      719     8689          ***/
      720     8690
      721     8691    3              IF ~BYPCONCHK AND DENSITY ~= 0 THEN DO;
      722     8692    3                 CALL M$CLOSE( CLSREWLBL ) ALTRET( MONERR );
      723     8693    3                 OPENCREATELBL.V.DENSITY# = DENSITY;
      724     8694    3                 IF NOT FMSEC THEN CALL M$SPRIV( SWITCHFMSEC );
      725     8695    3                 CALL M$OPEN( OPENCREATELBL ) ALTRET( OPNERR );
      726     8696    3                 IF NOT FMSEC THEN CALL M$RPRIV( SWITCHFMSEC );
      727     8697    3                 END;
      728     8698    2              IF COMMAND ~= %SCRATCH_COMMAND THEN
      729     8699    2                 CALL FTX_WRITVOL1 ALTRET( LBLERR );
      730     8700    3              ELSE DO;
      731     8701    3                 CALL M$REW( REWLBL ) ALTRET( LBLERR );
      732     8702    3                 CALL M$WEOF( WEOFLBL ) ALTRET( LBLERR );
      733     8703    3                 NUMLABELED = NUMLABELED + 1;
      734     8704    3                 CALL M$WEOF( WEOFLBL ) ALTRET( LBLERR );
      735     8705    3                 END;
PL6.E3A0      #001=FTX$LABEL File=FTX$LABEL.:E05TSI                              TUE 07/29/97 18:01 Page:23   
      736     8706    2              CALL M$CLOSE( CLSREMLBL ) ALTRET( MONERR );
      737     8707
      738     8708    2              CALL FTX_LIST_TAPE_LABELLED;
      739     8709
      740     8710    2              RETURN;
      741     8711
      742     8712    2   OPNERR:    ;
      743     8713    2              CALL FTX_RPTERR;
      744     8714    2              ALTRETURN;
      745     8715
      746     8716    2   LBLERR:    ;
      747     8717    2              N = B$TCB$->B$TCB.ALT$->B$ALT.ERR.CODE;
      748     8718    2              CALL FTX_RPTERR;
      749     8719    3              CALL M$CLOSE( CLSREMLBL ) WHENALTRETURN DO;
              8719                       /* Most likely the same (I/O) error */
      750     8720    3                 IF N ~= B$TCB$->B$TCB.ALT$->B$ALT.ERR.CODE THEN
      751     8721    3                    CALL FTX_RPTERR;       /* Report different error             */
      752     8722    3                 END;
      753     8723    2              ALTRETURN;
      754     8724
      755     8725    2   MONERR:    ;
      756     8726    2              CALL FTX_RPTERR;
      757     8727
      758     8728    2   JUSTALT:   ;
      759     8729    2              ALTRETURN;
      760     8730
      761     8731    2      END FTX_LABEL_TAPE;
      762     8732        /********************************************************************/
      763     8733        %EJECT;
PL6.E3A0      #001=FTX$LABEL File=FTX$LABEL.:E05TSI                              TUE 07/29/97 18:01 Page:24   
      764     8734        /********************************************************************/
      765     8735    1   FTX_LABEL_OD: PROC ALTRET;
      766     8736        /*F*     NAME: FTX_LABEL_OD
      767     8737                 PURPOSE: Labels optical disk volume and does error checking.
      768     8738         ***/
      769     8739
      770     8740        /********************/
      771     8741
      772     8742         /***
      773     8743          *** To open the optical disk, turn on FMSEC if user would have it on due
      774     8744          *** to JIT.PRIV.JOB regardless of JIT.PRIV.PRC.  Open the volume.
      775     8745          *** Turn off FMSEC do make sure user can't read (as commands) or
      776     8746          *** write (as listing or diagnostic output) any files which couldn't
      777     8747          *** ordinarily be accessed.
      778     8748          ***/
      779     8749
      780     8750    2              IF NOT FMSEC THEN
      781     8751    2                 CALL M$SPRIV( SWITCHFMSEC );
      782     8752    2              CALL M$OPEN( OPENOD ) ALTRET( OPNERR );
      783     8753    2              IF NOT FMSEC THEN
      784     8754    2                 CALL M$RPRIV( SWITCHFMSEC );
      785     8755
      786     8756    2              PREVSN = ' ';
      787     8757    2              CALL FTX_WRITVOL1OD ALTRET( LBLERR );
      788     8758    2              CALL M$CLOSE( CLSREMLBL ) ALTRET( MONERR );
      789     8759    2              CALL FTX_LIST_TAPE_LABELLED;
      790     8760    2              RETURN;
      791     8761
      792     8762    2   OPNERR:    CALL FTX_RPTERR;
      793     8763    2              ALTRETURN;
      794     8764
      795     8765    2   LBLERR:    N = B$TCB$->B$TCB.ALT$->B$ALT.ERR.CODE;
      796     8766    2              CALL FTX_RPTERR;
      797     8767    3              CALL M$CLOSE( CLSREMLBL ) WHENALTRETURN DO;
              8767                       /* Most likely the same (I/O) error */
      798     8768    3                 IF N ~= B$TCB$->B$TCB.ALT$->B$ALT.ERR.CODE THEN
      799     8769    3                    CALL FTX_RPTERR;       /* Report different error             */
PL6.E3A0      #001=FTX$LABEL File=FTX$LABEL.:E05TSI                              TUE 07/29/97 18:01 Page:25   
      800     8770    3                 END;
      801     8771    2              ALTRETURN;
      802     8772
      803     8773    2   MONERR:    CALL FTX_RPTERR;
      804     8774
      805     8775    2   JUSTALT:   ALTRETURN;
      806     8776
      807     8777    2      END FTX_LABEL_OD;
      808     8778        /********************************************************************/
      809     8779        %EJECT;
PL6.E3A0      #001=FTX$LABEL File=FTX$LABEL.:E05TSI                              TUE 07/29/97 18:01 Page:26   
      810     8780        /********************************************************************/
      811     8781    1   FTX_LIST_TAPE_LABELLED: PROC;
      812     8782        /*F*     NAME: FTX_LIST_TAPE_LABELLED
      813     8783                 PURPOSE: Lists tapes as they are labelled.
      814     8784         ***/
      815     8785
      816     8786        /********************/
      817     8787
      818     8788    3              IF TAPESN.SN#(0) = VOLSN.SN#(0) THEN DO; /* Sequence begins/continues */
      819     8789    4                 IF PREVSN ~= ' ' THEN DO; /* Tape had different label           */
      820     8790    4                    CALL FTX_DUMP_BUF;
      821     8791    4                    CALL CONCAT(OUTBUF,VOLSN.SN#(0),'   ','      ','(',PREVSN,')');
      822     8792    4                    CALL FTX_DUMP_BUF;
      823     8793    4                    END;
      824     8794    4                 ELSE DO;                  /* May begin or continue sequence     */
      825     8795    4                    IF INSEQUENCE THEN
      826     8796    4                       LASTSEQSN = VOLSN.SN#(0);
      827     8797    5                    ELSE DO;
      828     8798    5                       INSEQUENCE = %YES#; /* Now in sequence                    */
      829     8799    5                       FIRSTSEQSN = TAPESN.SN#(0);
      830     8800    5                       LASTSEQSN = VOLSN.SN#(0);
      831     8801    5                       END;
      832     8802    4                    END;
      833     8803    3                 END;
      834     8804    3              ELSE DO;                     /* To different labelled tape         */
      835     8805    3                 CALL FTX_DUMP_BUF;
      836     8806    3                 IF PREVSN ~= ' ' THEN
      837     8807    3                    CALL CONCAT(OUTBUF,VOLSN.SN#(0),' < ',TAPESN.SN#(0),'(',PREVSN,')')
              8807                             ;
      838     8808    3                 ELSE
      839     8809    3                    CALL CONCAT(OUTBUF,VOLSN.SN#(0),' < ',TAPESN.SN#(0));
      840     8810    3                 CALL FTX_DUMP_BUF;
      841     8811    3                 END;
      842     8812    2              RETURN;
      843     8813
      844     8814    2      END FTX_LIST_TAPE_LABELLED;
      845     8815        /********************************************************************/
PL6.E3A0      #001=FTX$LABEL File=FTX$LABEL.:E05TSI                              TUE 07/29/97 18:01 Page:27   
      846     8816        %EJECT;
PL6.E3A0      #001=FTX$LABEL File=FTX$LABEL.:E05TSI                              TUE 07/29/97 18:01 Page:28   
      847     8817        /********************************************************************/
      848     8818    1   FTX_DUMP_BUF: PROC;
      849     8819
      850     8820    3              IF INSEQUENCE THEN DO;       /* Range to dump                      */
      851     8821    3                 IF FIRSTSEQSN = LASTSEQSN THEN
      852     8822    3                    CALL CONCAT( OUTBUF, LASTSEQSN );
      853     8823    3                 ELSE
      854     8824    3                    CALL CONCAT( OUTBUF, FIRSTSEQSN, ' - ', LASTSEQSN );
      855     8825    3                 INSEQUENCE = %NO#;
      856     8826    3                 END;
      857     8827    2              CALL SEARCHR(OBUFSIZE,TEMP,B$SR_NON_BLANK,OUTBUF) ALTRET(JUSTRET);
      858     8828    2              SHOWOUT.BUF_.BOUND = OBUFSIZE;
      859     8829    2              CALL M$WRITE( SHOWOUT );
      860     8830    2              OUTBUF = ' ';
      861     8831    2              OBUFSIZE = 0;
      862     8832
      863     8833    2   JUSTRET:   ;
      864     8834    2              RETURN;
      865     8835
      866     8836    2      END FTX_DUMP_BUF;
      867     8837        /********************************************************************/
      868     8838        %EJECT;
PL6.E3A0      #001=FTX$LABEL File=FTX$LABEL.:E05TSI                              TUE 07/29/97 18:01 Page:29   
      869     8839        /********************************************************************/
      870     8840    1   FTX_WRITVOL1: PROC ALTRET;
      871     8841        /*F*     NAME: FTX_WRITVOL1
      872     8842                 PURPOSE: Write VOL1 label.
      873     8843         ***/
      874     8844
      875     8845        /*********************/
      876     8846
      877     8847    2              FT$BLBL = ' ';
      878     8848    2              FT$VOL1.LABEL_TYPE = 'VOL1';
      879     8849    2              FT$VOL1.SN = VOLSN.SN#(0);
      880     8850    3              DO CASE(VOLACCESS);
      881     8851    3                 CASE(%IN#);
      882     8852    3                    FT$VOL1.ACCESS = 'I';
      883     8853    3                 CASE(%NONE#);
      884     8854    3                    FT$VOL1.ACCESS = 'N';
      885     8855    3                 END;
      886     8856    2              FT$VOL1.ACCOUNT = VOLACN.ACCT#;
      887     8857    2              FT$VOL1.SYSTEM_CODE.ID = 'CP-6';
      888     8858    2              FT$VOL1.SYSTEM_CODE.VERSION = VLR_SITEINFO.VERSION#;
      889     8859    2              FT$VOL1.SYSTEM = 'CP-6';
      890     8860    2              FT$VOL1.VERSION = '3';
      891     8861
      892     8862    2              CALL M$REW(REWLBL) ALTRET(JUSTALT);
      893     8863    2              CALL M$WRITE(WRITLBL) ALTRET(JUSTALT);
      894     8864    2              NUMLABELED = NUMLABELED + 1; /* One more labelled                  */
      895     8865    2              CALL M$WEOF(WEOFLBL) ALTRET(JUSTALT);
      896     8866    2              CALL M$WEOF(WEOFLBL) ALTRET(JUSTALT);
      897     8867    2              RETURN;
      898     8868
      899     8869    2   JUSTALT:   ;
      900     8870    2              ALTRETURN;
      901     8871
      902     8872    2      END FTX_WRITVOL1;
      903     8873        /********************************************************************/
      904     8874        %EJECT;
PL6.E3A0      #001=FTX$LABEL File=FTX$LABEL.:E05TSI                              TUE 07/29/97 18:01 Page:30   
      905     8875        /********************************************************************/
      906     8876    1   FTX_WRITVOL1OD: PROC ALTRET;
      907     8877        /*F*     NAME: FTX_WRITVOL1OD
      908     8878                 PURPOSE: Write VOL1 label on optical disk.
      909     8879         ***/
      910     8880
      911     8881        /*********************/
      912     8882
      913     8883    2              FP$BLBL = ' ';
      914     8884    2              FP$VOL1.LABEL_TYPE = 'VOL1';
      915     8885    2              FP$VOL1.SN = VOLSN.SN#(0);
      916     8886    2              FP$VOL1.PLATTER = TAPESN.SN#(0);
      917     8887    3              DO CASE(VOLACCESS);
      918     8888    3                 CASE(%IN#);
      919     8889    3                    FP$VOL1.ACCESS = 'I';
      920     8890    3                 CASE(%NONE#);
      921     8891    3                    FP$VOL1.ACCESS = 'N';
      922     8892    3                 END;
      923     8893    2              FP$VOL1.ACCOUNT = VOLACN.ACCT#;
      924     8894    2              FP$VOL1.SYSTEM_CODE.ID = 'CP-6';
      925     8895    2              FP$VOL1.SYSTEM_CODE.VERSION = VLR_SITEINFO.VERSION#;
      926     8896    2              FP$VOL1.SYSTEM = 'CP-6';
      927     8897    2              IF NOT FMSEC THEN
      928     8898    2                 CALL M$SPRIV(SWITCHFMSEC);
      929     8899    2              CALL M$WRITE(WRITLBLOD) ALTRET(JUSTALT);
      930     8900    2              IF NOT FMSEC THEN
      931     8901    2                 CALL M$RPRIV(SWITCHFMSEC);
      932     8902    2              NUMLABELED = NUMLABELED + 1; /* One more labelled                  */
      933     8903    2              RETURN;
      934     8904
      935     8905    2   JUSTALT:   ;
      936     8906    2              ALTRETURN;
      937     8907
      938     8908    2      END FTX_WRITVOL1OD;
      939     8909        /********************************************************************/
      940     8910        %EJECT;
PL6.E3A0      #001=FTX$LABEL File=FTX$LABEL.:E05TSI                              TUE 07/29/97 18:01 Page:31   
      941     8911        /********************************************************************/
      942     8912    1   FTX_REM_OPTION: PROC;
      943     8913        /*F*     NAME: FTX_REM_OPTION
      944     8914                 PURPOSE: Process REM command option.
      945     8915         ***/
      946     8916
      947     8917        /********************/
      948     8918
      949     8919         /***
      950     8920          *** If valid sn, remove volume.
      951     8921          ***/
      952     8922
      953     8923    2              REMLBL.V.PSN# = XUG_GETCMD.OUT$->OUT$BLK.SUBLK$(0)->OUT$SYM.TEXT;
      954     8924    2              CALL M$REM(REMLBL) ALTRET(MONERR);
      955     8925    2              RETURN;
      956     8926
      957     8927    2   MONERR:    ;
      958     8928    2              CALL FTX_RPTERR;
      959     8929    2              RETURN;
      960     8930
      961     8931    2      END FTX_REM_OPTION;
      962     8932        /********************************************************************/
      963     8933        %EJECT;
PL6.E3A0      #001=FTX$LABEL File=FTX$LABEL.:E05TSI                              TUE 07/29/97 18:01 Page:32   
      964     8934        /********************************************************************/
      965     8935    1   FTX_GEN_NEXT_OUT_SN: PROC ALTRET;
      966     8936        /*F*     NAME: FTX_GEN_NEXT_OUT_SN
      967     8937                 PURPOSE: Generate next output serial number.
      968     8938         ***/
      969     8939
      970     8940        /********************/
      971     8941
      972     8942    2              STARTNUM = STARTNUM + INCNUM; /* Determine next seq ser            */
      973     8943    2              CALL BINCHAR(DSTARTNUM,STARTNUM);
      974     8944    2              TEMP = 0;
      975     8945    3              DO WHILE( TEMP < LENGTHC(DSTARTNUM)-1 AND DSTARTNUMC(TEMP) = '0' );
      976     8946    3                 TEMP = TEMP + 1;
      977     8947    3                 END;
      978     8948
      979     8949    2              TEMP = LENGTHC(DSTARTNUM) - TEMP;
              8949                       /* Determine length of non-zero portion */
      980     8950    3              IF TEMP > PLACESIZE THEN DO;
      981     8951    3                 CALL FTX_ERROR(%NO_NUM_ROOM,-1);
      982     8952    3                 ALTRETURN;
      983     8953    3                 END;
      984     8954
      985     8955         /***
      986     8956          *** Put sequential serial number in sn.
      987     8957          ***/
      988     8958
      989     8959    2              TEMP$ = PINCRC( ADDR(VOLSN.SN#(0)), PLACESTART );
      990     8960    2              N = PLACESIZE;
      991     8961    2              TEMP2$ = PINCRC( ADDR(DSTARTNUM), LENGTHC(DSTARTNUM)-PLACESIZE );
      992     8962    2              VOLSN.SN#(0) = BASESN;       /* Set image                          */
      993     8963    2              TEMP$->CHARS = TEMP2$->CHARS; /* Put in seq num                    */
      994     8964    2              RETURN;
      995     8965
      996     8966    2      END FTX_GEN_NEXT_OUT_SN;
      997     8967        /********************************************************************/
      998     8968        %EJECT;
PL6.E3A0      #001=FTX$LABEL File=FTX$LABEL.:E05TSI                              TUE 07/29/97 18:01 Page:33   
      999     8969        /********************************************************************/
     1000     8970    1   FTX_GEN_NEXT_IN_SN: PROC ALTRET;
     1001     8971        /*F*     NAME: FTX_GEN_NEXT_IN_SN
     1002     8972                 PURPOSE: Generate next input serial number.
     1003     8973         ***/
     1004     8974
     1005     8975        /********************/
     1006     8976
     1007     8977    3              DO WHILE('0'B);
     1008     8978    3   INCSPEC:      ;                         /* Increment spec number              */
     1009     8979    3                 SPEC = SPEC + 1;
     1010     8980    3                 IF SPEC >= NUMSNSPECS THEN
     1011     8981    3                    ALTRETURN;             /* When done                          */
     1012     8982    3                 END;
     1013     8983
     1014     8984         /***
     1015     8985          *** If named, return named sn.  If not, return generated sn.
     1016     8986          ***/
     1017     8987
     1018     8988    3              IF SNSPECS.NAMED(SPEC) THEN DO; /* Named specs...use list          */
     1019     8989    3                 TEMP = SNSPECS.FIRSTNAMEX(SPEC); /* Get next name index         */
     1020     8990    3                 IF TEMP > SNSPECS.LASTNAMEX(SPEC) THEN /* Done with this spec?  */
     1021     8991    3                    GOTO INCSPEC;
     1022     8992    3                 TAPESN.SN#(0) = NSNLIST.SN#(TEMP);
     1023     8993    3                 SNSPECS.FIRSTNAMEX(SPEC) = TEMP + 1;
     1024     8994    3                 END;
     1025     8995    3              ELSE DO;                     /* Sn not specified                   */
     1026     8996    3                 TEMP = SNSPECS.NUMNOTNAMED(SPEC);
     1027     8997    3                 IF TEMP = 0 THEN          /* Done with this spec?               */
     1028     8998    3                    GOTO INCSPEC;
     1029     8999    3                 TAPESN.SN#(0) = VOLSN.SN#(0); /* Ask for volume by output name  */
     1030     9000    3                 SNSPECS.LASTNAMEX(SPEC) = TEMP - 1;
     1031     9001    3                 END;
     1032     9002    2              RETURN;
     1033     9003
     1034     9004    2      END FTX_GEN_NEXT_IN_SN;
     1035     9005        /********************************************************************/
PL6.E3A0      #001=FTX$LABEL File=FTX$LABEL.:E05TSI                              TUE 07/29/97 18:01 Page:34   
     1036     9006        %EJECT;
PL6.E3A0      #001=FTX$LABEL File=FTX$LABEL.:E05TSI                              TUE 07/29/97 18:01 Page:35   
     1037     9007        /********************************************************************/
     1038     9008    1   FTX_READVOL1: PROC ALTRET;
     1039     9009        /*F*     NAME: FTX_READVOL1
     1040     9010                 PURPOSE: Read VOL1 label and determine type.
     1041     9011         ***/
     1042     9012
     1043     9013        /********************/
     1044     9014
     1045     9015    2              VOLUME_TYPE = %UNKNOWN_VOL;
     1046     9016    2              CALL M$REW(REWLBL) ALTRET(JUSTALT);
     1047     9017    2              CALL M$READ(READLBL) ALTRET(JUSTALT);
     1048     9018    3              IF DCBADDR(DCBNUM(M$EI))->F$DCB.ARS < 80 THEN DO;
     1049     9019    3                 RETURN;
     1050     9020    3                 END;
     1051     9021
     1052     9022    3              IF FT$ANYLBL.LABEL_TYPE = 'VOL1' THEN DO;
     1053     9023    3                 VOLUME_TYPE = %ASCII_VOL;
     1054     9024    3                 RETURN;
     1055     9025    3                 END;
     1056     9026
     1057     9027    3              IF FT$BLBL = PO80 THEN DO;
     1058     9028    3                 VOLUME_TYPE = %PO_VOL;
     1059     9029    3                 RETURN;
     1060     9030    3                 END;
     1061     9031
     1062     9032    2              CALL XLATE(LBLBUF,B$XL_EBC_ASC,LBLBUF);
     1063     9033    3              IF FT$ANYLBL.LABEL_TYPE = 'VOL1' THEN DO; /* EBCDIC                */
     1064     9034    3                 VOLUME_TYPE = %EBCDIC_VOL;
     1065     9035    3                 RETURN;
     1066     9036    3                 END;
     1067     9037
     1068     9038    2              VOLUME_TYPE = %UNKNOWN_VOL;
     1069     9039    2              RETURN;
     1070     9040
     1071     9041    2   JUSTALT:   ;
     1072     9042    2              ALTRETURN;
     1073     9043
PL6.E3A0      #001=FTX$LABEL File=FTX$LABEL.:E05TSI                              TUE 07/29/97 18:01 Page:36   
     1074     9044    2      END FTX_READVOL1;
     1075     9045        /********************************************************************/
     1076     9046        %EJECT;
PL6.E3A0      #001=FTX$LABEL File=FTX$LABEL.:E05TSI                              TUE 07/29/97 18:01 Page:37   
     1077     9047        /********************************************************************/
     1078     9048    1   FTX_RPTERR: PROC;
     1079     9049        /*F*     NAME: FTX_RPTERR
     1080     9050                 PURPOSE: Report ALTRET frame error.
     1081     9051         ***/
     1082     9052
     1083     9053        /********************/
     1084     9054
     1085     9055    2              EXITCC.V.STEPCC# = 4;
     1086     9056    2              XUG_GETCMD.USE_EPOS# = %NO#;
     1087     9057    2              XUG_GETCMD.DCB_PARAM# = DCBNUM(M$DO);
     1088     9058    2              XUG_GETCMD.ERRDCB# = B$TCB$->B$TCB.ALT$->B$ALT.DCB#;
     1089     9059    2              XUG_GETCMD.ERR_CODE = B$TCB$->B$TCB.ALT$->B$ALT.ERR;
     1090     9060    2              XUG_GETCMD.ERR_CODE.SEV# = 0;
     1091     9061    3              CALL XUG$ERRMSG(XUG_GETCMD) WHENALTRETURN DO; END;
     1092     9062    2              RETURN;
     1093     9063
     1094     9064    2      END FTX_RPTERR;
     1095     9065        /********************************************************************/
     1096     9066        %EJECT;
PL6.E3A0      #001=FTX$LABEL File=FTX$LABEL.:E05TSI                              TUE 07/29/97 18:01 Page:38   
     1097     9067        /********************************************************************/
     1098     9068    1   FTX_ERROR: PROC(ECODE,RPOS);
     1099     9069        /*F*     NAME: FTX_ERROR
     1100     9070                 PURPOSE: Report semantic errors.
     1101     9071         ***/
     1102     9072
     1103     9073         /***
     1104     9074          *** Parameters:
     1105     9075          ***/
     1106     9076
     1107     9077    2     DCL ECODE SBIN;                       /* Internal error code                */
     1108     9078    2     DCL RPOS SBIN;                        /* Position in record                 */
     1109     9079
     1110     9080         /***
     1111     9081          *** Print error message.
     1112     9082          ***/
     1113     9083
     1114     9084    2              EXITCC.V.STEPCC# = 4;
     1115     9085    2              CMNDERROR = %YES#;           /* Remember error occurred            */
     1116     9086    3              IF RPOS >= 0 THEN DO;        /* Point at the error                 */
     1117     9087    3                 XUG_GETCMD.USE_EPOS# = %YES#;
     1118     9088    3                 XUG_GETCMD.DCB_PARAM# = DCBNUM(M$DO);
     1119     9089    3                 XUG_GETCMD.EPOS# = RPOS;
     1120     9090    3                 CALL XUG$ERRPTR(XUG_GETCMD) ALTRET(MONERR);
     1121     9091    3                 END;
     1122     9092    2              ERRTELL.BUF_ = VECTOR(ERMSG(ECODE));
     1123     9093    2              CALL M$WRITE( ERRTELL ) ALTRET( MONERR );
     1124     9094    2              RETURN;
     1125     9095
     1126     9096    2   MONERR:    ;
     1127     9097    2              CALL FTX_RPTERR;
     1128     9098    2              CALL M$EXIT( EXITCC );
     1129     9099
     1130     9100    2      END FTX_ERROR;
     1131     9101        /********************************************************************/
     1132     9102    1   END FTX$LABEL;
     1133     9103        %EOD;
PL6.E3A0      #001=FTX$LABEL File=FTX$LABEL.:E05TSI                              TUE 07/29/97 18:01 Page:39   

PL6.E3A0      #001=FTX$LABEL File=FTX$LABEL.:E05TSI                              TUE 07/29/97 18:01 Page:40   
--  Include file information  --

   B$TABLES_C.:E05TOU  cannot be made into a system file and is referenced.
   XUG_ENTRY.:E05TOU  cannot be made into a system file and is referenced.
   XU_SUBS_C.:E05TOU  is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
   B_MICROPS_C.:E05TOU  is referenced.
   FTX_SUBS_C.:E05TOU  is referenced.
   FP$LBLS.:E05TOU  is referenced.
   FT$LBLS.:E05TOU  is referenced.
   F$JIT_C.:E05TOU  cannot be made into a system file and is referenced.
   F$DCB.:E05TOU  cannot be made into a system file and is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B_ERRORS_C.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure FTX$LABEL.

   Procedure FTX$LABEL requires 1347 words for executable code.
   Procedure FTX$LABEL requires 16 words of local(AUTO) storage.

PL6.E3A0      #001=FTX$LABEL File=FTX$LABEL.:E05TSI                              TUE 07/29/97 18:01 Page:41   

 Object Unit name= FTX$LABEL                                  File name= FTX$LABEL.:E05TOU
 UTS= JUL 29 '97 18:01:38.04 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1   DCB   even  none     0      0  M$DO
    2   DCB   even  none     0      0  M$EI
    3   DCB   even  none     0      0  M$LO
    4   DCB   even  none     0      0  M$SI
    5   Data  even  none   958   1676  FTX$LABEL
    6  RoData even  UTS    282    432  FTX$LABEL
    7   Proc  even  none  1347   2503  FTX$LABEL
    8  RoData even  none    31     37  FTX$LABEL

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     7      0   yes            yes      Main       0  FTX$LABEL

  ****  Data defs  ****

 Sect OctLoc  Name                           Sect OctLoc  Name
    5    416  BRKFLAG
PL6.E3A0      #001=FTX$LABEL File=FTX$LABEL.:E05TSI                              TUE 07/29/97 18:01 Page:42   

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes          ~proc      0 B_POINTER
         yes          Async      0 FTX$LBLBRK
 yes     yes           Std       2 XTX$ADAPT
 yes     yes           Std       1 XUG$GETCMD
 yes     yes           Std       2 XUG$INIT
 yes     yes           Std       1 XUG$ERRMSG
 yes     yes           Std       1 XUG$ERRPTR
                       nStd      0 X66_MAUTO
                       Std       0 B_CONSPOOL_D

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                             r    B$XL_EBC_ASC$                    r    B$SR_NON_BLANK$
     A_COMMAND                             B$JIT$                                B$TCB$
     B_VERSION                             M$DO                                  M$EI
     M$LO                                  M$SI                                  B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID                                 NULLSID                               ROSID
PL6.E3A0      #001=FTX$LABEL File=FTX$LABEL.:E05TSI                              TUE 07/29/97 18:01 Page:43   


        1        1        /*M* FTX$LABEL - Magnetic tape label initialization program */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* CRT=1,CTI=4,DCI=6,SQB,ECI=3,CSI=3,IPC,DIN=2,SDI=3 */
        8        8
        9        9        FTX$LABEL: PROC MAIN;

      9  7 000000   000000 700200 xent  FTX$LABEL    TSX0  ! X66_MAUTO
         7 000001   000020 000000                    ZERO    16,0

       10       10
       11       11         /***
       12       12          *** INCLUDE files:
       13       13          ***/
       14       14
       15       15        %INCLUDE B_ERRORS_C;
       16     1142        %INCLUDE CP_6;
       17     1223        %INCLUDE CP_6_SUBS;
       18     1763        %INCLUDE F$DCB;
       19     1812        %INCLUDE F$JIT_C;
       20     1929        %MACRO LABELS(BASED=BASED);
       21     1930         %INCLUDE FT$LBLS;
       22     2198        %MEND;
       23     2199        %MACRO ODLABELS(BASED=BASED);
       24     2200         %INCLUDE FP$LBLS;
       25     2362        %MEND;
       26     2363        %LIST;
       27     2364        %INCLUDE FTX_SUBS_C;
        1+    2365        /*M* FTX_SUBS_C substitutions for LABEL processor and its nodes */
        2+    2366        /*T***********************************************************/
        3+    2367        /*T*                                                         */
        4+    2368        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5+    2369        /*T*                                                         */
PL6.E3A0      #001=FTX$LABEL File=FTX$LABEL.:E05TSI                              TUE 07/29/97 18:01 Page:44   
        6+    2370        /*T***********************************************************/
        7+    2371        /*X* DFC,DMC */
        8+    2372
        9+    2373        %EQU END_COMMAND=1;
       10+    2374        %EQU SEQUENTIAL_COMMAND=2;
       11+    2375        %EQU ODSEQUEN_COMMAND=3;
       12+    2376        %EQU LABEL_COMMAND=4;
       13+    2377        %EQU ODLABEL_COMMAND=5;
       14+    2378        %EQU REM_COMMAND=6;
       15+    2379        %EQU SCRATCH_COMMAND=7;
       16+    2380        %EQU PLACE=8;
       17+    2381        %EQU SERIAL=9;
       18+    2382        %EQU INACC=10;
       19+    2383        %EQU NONEACC=11;
       20+    2384        %EQU ALLACC=12;
       21+    2385        %EQU ACCOUNT=13;
       22+    2386        %EQU SNLIST=14;
       23+    2387        %EQU PLATLIST=15;
       24+    2388        %EQU NUMTAPES=16;
       25+    2389        %EQU START=17;
       26+    2390        %EQU INCREMENT=18;
       27+    2391        %EQU DEN800=19;
       28+    2392        %EQU DEN1600=20;
       29+    2393        %EQU DEN6250=21;
       30+    2394        %EQU BYPCONCHK=22;
       31+    2395        %EQU DEN38000=23 ;
       32+    2396        %EQU MAXOPTIONCODE=23;
       28     2397        %PLIST;
       29     2398        %INCLUDE B_MICROPS_C;
       30     2570        %INCLUDE XU_MACRO_C;
       31     5676        %INCLUDE XU_SUBS_C;
       32     5768        %INCLUDE XUG_ENTRY;
       33     5799        %INCLUDE B$TABLES_C;
       34     5907         %B$XL_EBC_ASC;
       35     5911         %B$SR_NON_BLANK;
       36     5915
       37     5916         /***
PL6.E3A0      #001=FTX$LABEL File=FTX$LABEL.:E05TSI                              TUE 07/29/97 18:01 Page:45   
       38     5917          *** External routines:
       39     5918          ***/
       40     5919
       41     5920    1     DCL FTX$LBLBRK ENTRY ASYNC;           /* Break handler                      */
       42     5921    1     DCL X$PARSE ENTRY(1) ALTRET;
       43     5922
       44     5923         /***
       45     5924          *** SYMREFs:
       46     5925          ***/
       47     5926
       48     5927    1     DCL A_COMMAND UBIN SYMREF;            /* Parse nodes                        */
       49     5928    1     DCL B$JIT$ PTR SYMREF;
       50     5929    1     DCL B$TCB$ PTR SYMREF;
       51     5930    1     DCL B_VERSION CHAR(1) SYMREF;
       52     5931
       53     5932         /***
       54     5933          *** DCBs:
       55     5934          ***/
       56     5935
       57     5936    1     DCL M$DO DCB;                         /* Error output                       */
       58     5937    1     DCL M$EI DCB;                         /* Tape input/output                  */
       59     5938    1     DCL M$LO DCB;                         /* General output                     */
       60     5939    1     DCL M$SI DCB;                         /* Command input                      */
       61     5940
       62     5941
       63     5942         /***
       64     5943          *** Locals:
       65     5944          ***/
       66     5945
       67     5946        %VLP_SN(FPTN=NSNLIST,N=128);
       68     5959        %VLP_SN(FPTN=TAPESN,N=1);
       69     5972        %VLP_ACCT(FPTN=VOLACN);
       70     5985        %VLP_SN(FPTN=VOLSN,N=1);
       71     5998        %VLR_SITEINFO;
       72     6017
       73     6018    1     DCL ASN CHAR(6) STATIC;               /* A serial number                    */
       74     6019    1     DCL BASESN CHAR(6) STATIC;            /* Serial number image                */
PL6.E3A0      #001=FTX$LABEL File=FTX$LABEL.:E05TSI                              TUE 07/29/97 18:01 Page:46   
       75     6020    1     DCL BRKFLAG BIT(1) STATIC SYMDEF;     /* For breaks                         */
       76     6021    1     DCL BYPCONCHK BIT(1) STATIC;          /* Bypass content checking            */
       77     6022    1     DCL CMNDERROR BIT(1) STATIC;          /* Error flag                         */
       78     6023    1     DCL COMMAND SBIN STATIC;              /* Command being executed             */
       79     6024    1     DCL CPOS SBIN STATIC;                 /* Character position                 */
       80     6025    1     DCL DSTARTNUM CHAR(12) STATIC;        /* Decimal ser seq num                */
       81     6026    1     DCL DSTARTNUMC(0:11) REDEF DSTARTNUM CHAR(1);
       82     6027    1     DCL FIRSTSEQSN CHAR(6) STATIC;        /* First sequential sn of range       */
       83     6028    1     DCL FMSEC BIT(36) STATIC;             /* Remembers if FMSEC on              */
       84     6029    1     DCL FOUR_CHARS CHAR(4) STATIC;
       85     6030    1     DCL 1 GREETINGS STATIC,
       86     6031    1            2 * CHAR(0) UNAL INIT(' LABEL '),
       87     6032    1            2 GVERS CHAR(4) CALIGNED INIT('XXXX'),
       88     6033    1            2 * CHAR(1) CALIGNED INIT(' '),
       89     6034    1            2 GTIME CHAR(5) UNAL,
       90     6035    1            2 * CHAR(0) UNAL INIT(' '),
       91     6036    1            2 GDAY CHAR(3) UNAL,
       92     6037    1            2 * CHAR(0) UNAL INIT(' '),
       93     6038    1            2 GDATE CHAR(10) UNAL;
       94     6039    1     DCL INCNUM SBIN STATIC;               /* Increment                          */
       95     6040    1     DCL INSEQUENCE BIT(1) STATIC;         /* If in sequence                     */
       96     6041    1     DCL LASTSEQSN CHAR(6) STATIC;         /* Last sequential sn of range        */
       97     6042    1     DCL LBLBUF CHAR(80) STATIC;           /* Tape label                         */
       98     6043        %LABELS(BASED="REDEF LBLBUF");
       99     6298        %ODLABELS(BASED="REDEF LBLBUF");
      100     6450    1     DCL N SBIN STATIC;
      101     6451    1     DCL NEXTFREENSN SBIN STATIC;          /* Next open named serial number      */
      102     6452    1     DCL NUMLABELED SBIN STATIC;           /* Number of tapes labelled           */
      103     6453    1     DCL 1 NUMLBLMSG STATIC,
      104     6454    1            2 * CHAR(0) UNAL INIT(' '),
      105     6455    1            2 NUMLBL CHAR(4) UNAL,
      106     6456    1            2 * CHAR(0) UNAL INIT(' tapes labelled');
      107     6457    1     DCL NUMSNSPECS SBIN STATIC;           /* Number of named serial number      */
      108     6458    1     DCL OBUFSIZE SBIN STATIC;             /* Output buffer size                 */
      109     6459    1     DCL OBUFX SBIN STATIC;                /* Output buffer index                */
      110     6460    1     DCL OPTIONBLK$ PTR STATIC;            /* Pointer to option node             */
      111     6461    1     DCL OPTIONNUM SBIN STATIC;            /* Ix of option being processed       */
PL6.E3A0      #001=FTX$LABEL File=FTX$LABEL.:E05TSI                              TUE 07/29/97 18:01 Page:47   
      112     6462    1     DCL OPTIONSPECIFIED(0:%MAXOPTIONCODE) BIT(1) STATIC;
      113     6463                                                /* To check if multiply specified     */
      114     6464    1     DCL OUT$ PTR STATIC;                  /* Pointer to output nodes            */
      115     6465    1     DCL OUTBUF CHAR(80) STATIC;           /* Output buffer                      */
      116     6466    1     DCL PLACESIZE SBIN STATIC;            /* Size of number field               */
      117     6467    1     DCL PLACESTART SBIN STATIC;           /* Ix of number byte                  */
      118     6468    1     DCL PREVSN CHAR(6) STATIC;            /* Previous serial number             */
      119     6469    1     DCL SNBLANKX SBIN STATIC;             /* Ix of first blank of sn            */
      120     6470    1     DCL SNNUM SBIN STATIC;                /* Serial number number               */
      121     6471    1     DCL 1 SNSPECS(0:127) STATIC,          /* Serial number specifications       */
      122     6472    1            2 NAMED BIT(1) UNAL,           /* Is this sn named?                  */
      123     6473    1            2 FIRSTNAMEX UBIN(17) UNAL,    /* Index of first name in NSNLIST     */
      124     6474    1            2 LASTNAMEX UBIN(18) UNAL,     /* Index of last name                 */
      125     6475    1            2 NUMNOTNAMED REDEF LASTNAMEX UBIN(18) UNAL;
      126     6476    1     DCL SPEC SBIN STATIC;                 /* Specification number               */
      127     6477                                                /* Number not named                   */
      128     6478    1     DCL STARTNUM SBIN STATIC;             /* Starting number                    */
      129     6479    1     DCL TEMP SBIN STATIC;
      130     6480    1     DCL TEMP$ PTR STATIC;
      131     6481    1     DCL TEMP2$ PTR STATIC;
      132     6482    1     DCL VOLACCESS SBIN STATIC;            /* Access limitation                  */
      133     6483    1     DCL DENSITY SBIN STATIC;              /* Density                            */
      134     6484    1     DCL VOLUME_TYPE SBIN STATIC;         /* Type of volume being re-initialized */
      135     6485
      136     6486         /***
      137     6487          *** BASED:
      138     6488          ***/
      139     6489
      140     6490        %B$ALT;
      141     6498        %B$TCB;
      142     6501    1     DCL CHARS CHAR(N) BASED UNAL;         /* The variable character string      */
      143     6502        %PARSE$OUT(STCLASS=BASED);
      144     6547        %PARSE$SYM(STCLASS=BASED);
      145     6585    1     DCL 1 TEXTC BASED UNAL,
      146     6586    1            2 L UBIN BYTE UNAL,
      147     6587    1            2 C CHAR(TEXTC.L) UNAL;
      148     6588
PL6.E3A0      #001=FTX$LABEL File=FTX$LABEL.:E05TSI                              TUE 07/29/97 18:01 Page:48   
      149     6589         /***
      150     6590          *** FPTs:
      151     6591          ***/
      152     6592
      153     6593        %FPT_INT(FPTN=BRKCTL,
      154     6594         UENTRY=FTX$LBLBRK);
      155     6608
      156     6609        %FPT_PRIV( FPTN=CHKLABELRUN,
      157     6610         PRIV=%PPR_LABEL#,
      158     6611         PPRIV=YES);
      159     6626
      160     6627        %FPT_MONINFO(SITEINFO=VLR_SITEINFO);
      161     6642
      162     6643        %FPT_CLOSE(FPTN=CLSREMLBL,
      163     6644         DCB=M$EI,
      164     6645         POS=REM);
      165     6687
      166     6688        %FPT_CLOSE(FPTN=CLSREWLBL,
      167     6689         DCB=M$EI,
      168     6690         NOMARKS=YES,
      169     6691         POS=PTV);
      170     6733
      171     6734        %FPT_EXIT(FPTN=EXITCC,
      172     6735         STEPCC=OK);
      173     6750
      174     6751        %FPT_WRITE(FPTN=ERRTELL,
      175     6752         DCB=M$DO);
      176     6783
      177     6784        %FPT_TIME(FPTN=GETTIME,
      178     6785         TIME="GREETINGS.GTIME",
      179     6786         DAY="GREETINGS.GDAY",
      180     6787         DATE="GREETINGS.GDATE");
      181     6806
      182     6807        %FPT_WRITE(FPTN=GREETUSR,
      183     6808         DCB=M$LO,
      184     6809         BUF=GREETINGS);
      185     6840
PL6.E3A0      #001=FTX$LABEL File=FTX$LABEL.:E05TSI                              TUE 07/29/97 18:01 Page:49   
      186     6841        %XUG_INIT(COMMANDS=YES,
      187     6842         GOODCMD=YES,
      188     6843         INHIBIT_END=YES);
      189     7256
      190     7257        %XUG_GETCMD(NODES=A_COMMAND,
      191     7258         PROMPT=LABEL_PROMPT);
      192     7596
      193     7597        %FPT_OPEN(FPTN=OPENCREATELBL,
      194     7598         DCB=M$EI,
      195     7599         ASN=DEVICE,
      196     7600         RES='MT',
      197     7601         SN=TAPESN,
      198     7602         FUN=CREATE,
      199     7603         SCRUB=YES);
      200     7712
      201     7713        %FPT_OPEN(FPTN=OPENLBL,
      202     7714         DCB=M$EI,
      203     7715         ASN=DEVICE,
      204     7716         RES='MT',
      205     7717         SN=TAPESN,
      206     7718         FUN=UPDATE,
      207     7719         SCRUB=YES);
      208     7828
      209     7829        %FPT_OPEN(FPTN=OPENOD,
      210     7830         DCB=M$EI,
      211     7831         ASN=DEVICE,
      212     7832         RES='OD',
      213     7833         SN=TAPESN,
      214     7834         SCRUB=YES);
      215     7943
      216     7944        %FPT_REM(FPTN=REMLBL);
      217     7958
      218     7959        %FPT_READ(FPTN=READLBL,
      219     7960         DCB=M$EI,
      220     7961         BUF=LBLBUF);
      221     8000
      222     8001        %FPT_REW(FPTN=REWLBL,
PL6.E3A0      #001=FTX$LABEL File=FTX$LABEL.:E05TSI                              TUE 07/29/97 18:01 Page:50   
      223     8002         DCB=M$EI);
      224     8017
      225     8018        %FPT_WRITE(FPTN=SHOWOUT,
      226     8019         DCB=M$LO,
      227     8020         BUF=OUTBUF);
      228     8051
      229     8052        %FPT_PRIV( FPTN=SWITCHFMSEC,
      230     8053         PRIV=%PR_FMSEC#);
      231     8068
      232     8069        %FPT_WRITE(FPTN=TELNUMLBL,
      233     8070         DCB=M$LO,
      234     8071         BUF=NUMLBLMSG);
      235     8102
      236     8103        %FPT_WEOF(FPTN=WEOFLBL,
      237     8104         DCB=M$EI);
      238     8118
      239     8119        %FPT_WRITE(FPTN=WRITBLNK,
      240     8120         DCB=M$DO,
      241     8121         BUF=BLANKS);
      242     8152
      243     8153        %FPT_WRITE(FPTN=WRITLBL,
      244     8154         DCB=M$EI,
      245     8155         BUF=LBLBUF);
      246     8186
      247     8187        %FPT_WRITE(FPTN=WRITLBLOD,
      248     8188         DCB=M$EI,
      249     8189         BUF=LBLBUF,
      250     8190         ODFNC=LABEL);
      251     8221
      252     8222         /***
      253     8223          *** CONSTANTs:
      254     8224          ***/
      255     8225
      256     8226    1     DCL ACNSIZE SBIN CONSTANT INIT(LENGTHC(VOLACN.ACCT#));
      257     8227    1     DCL BLANKS CHAR(1) CONSTANT INIT(' ');
      258     8228    1     DCL LABEL_PROMPT CHAR(1) CONSTANT INIT('*');
      259     8229    1     DCL NO3LEADINGZS(0:2) BIT(9) CONSTANT UNAL INIT( %MVZB3, %SES10, %MVC1 );
PL6.E3A0      #001=FTX$LABEL File=FTX$LABEL.:E05TSI                              TUE 07/29/97 18:01 Page:51   
      260     8230    1     DCL SNSIZE SBIN CONSTANT INIT(LENGTHC(VOLSN.SN#(0)));
      261     8231
      262     8232    1     DCL PO80B(0:19) BIT(36) CONSTANT INIT(
              8232              /* First 80 bytes of CP-6 PO tape read ASCII */
      263     8233    1    '000007000000'O,'260010000000'O,'150377377377'O,'370000000000'O,
      264     8234    1    '000000000000'O,'322010000000'O,'273300200000'O,'000123310000'O,
      265     8235    1    '000037364200'O,'000000203310'O,'000000265072'O,'200000000075'O,
      266     8236    1    '250056202005'O,'072207000000'O,'075250000000'O,'303042200000'O,
      267     8237    1    '006074050000'O,'000004032200'O,'000000361310'O,'000000243220'O );
      268     8238    1     DCL PO80 REDEF PO80B CHAR(80);
      269     8239
      270     8240
      271     8241        %EQU MAX_ERMSG=13;
      272     8242    1     DCL ERMSG(0:%MAX_ERMSG) CHAR(70) CONSTANT INIT(
      273     8243        %EQU PROGRAM_BUG=0;
      274     8244    1               ' *** LABEL bug...talk to programmergrammerrammerammermmermererr',
      275     8245         %EQU PLACE_RANGE_START_WRONG=1;
      276     8246    1               ' *** PLACE must identify character position within serial number',
      277     8247         %EQU PLACE_RANGE_END_WRONG=2;
      278     8248    1               ' *** PLACE must identify character position within serial number',
      279     8249         %EQU PLACE_RANGE_END_SMALL=3;
      280     8250    1               ' *** End of PLACE range must be at least as large as start',
      281     8251         %EQU AT_LEAST_1=4;
      282     8252    1               ' *** At least 1 tape must be specified',
      283     8253         %EQU AT_MOST_1=5;
      284     8254    1               ' *** No more than 1 tape can be specified',
      285     8255         %EQU BLANK_IN_SN=6;
      286     8256    1               ' *** A serial number can not begin with blanks',
      287     8257         %EQU NO_NUM_ROOM=7;
      288     8258    1               ' *** The serial sequence number can not be placed in the SN',
      289     8259         %EQU NO_ACCOUNT_ACCESS=8;
      290     8260    1               ' *** An ACCOUNT must be specified if ACCESS is specified',
      291     8261         %EQU BLANK_IN_OUT_SN=9;
      292     8262    1               ' *** A serial number can not contain blanks',
      293     8263         %EQU NO_OD_PLATLIST=10;
      294     8264    1               ' *** You must specify an input platter number!',
      295     8265         %EQU INVALID_OD_SIDE=11;
PL6.E3A0      #001=FTX$LABEL File=FTX$LABEL.:E05TSI                              TUE 07/29/97 18:01 Page:52   
      296     8266    1               ' *** Invalid platter side (must be A or B)!',
      297     8267         %EQU CANT_RUN_LABEL=12;
      298     8268    1               ' *** You are not allowed to run LABEL',
      299     8269         %EQU SHOULD_HAVE_FMSEC=13;
      300     8270    1               ' *** This LABEL wasn''t LINKed with FMSEC...turn it on' );
      301     8271
      302     8272                                                /*** Volume types ***/
      303     8273
      304     8274        %EQU ASCII_VOL=0;
      305     8275        %EQU EBCDIC_VOL=1;
      306     8276        %EQU UNKNOWN_VOL=2;
      307     8277        %EQU PO_VOL=3;
      308     8278
      309     8279         /***
      310     8280          *** SUBs:
      311     8281          ***/
      312     8282
      313     8283        %SUB ALTRET_HANDLING="WHILE('0'B)";
      314     8284
      315     8285        /********************/
      316     8286
      317     8287         /***
      318     8288          *** Make sure user is allowed to run LABEL.
      319     8289          ***/
      320     8290
      321     8291    1           FMSEC = B$JIT.PRIV.JOB & %PR_FMSEC#; /* Remember if FMSEC on          */

   8291  7 000002   000000 470400 xsym               LDP0    B$JIT$
         7 000003   000015 236100                    LDQ     13,,PR0
         7 000004   000416 376000 6                  ANQ     ERMSG+245
         7 000005   000430 756000 5                  STQ     FMSEC

      322     8292    1           IF NOT FMSEC THEN CALL M$RPRIV( SWITCHFMSEC ) ALTRET( SHFMSEC );

   8292  7 000006   000013 601000 7                  TNZ     s:8293

   8292  7 000007   001606 630400 5                  EPPR0   SWITCHFMSEC
PL6.E3A0      #001=FTX$LABEL File=FTX$LABEL.:E05TSI                              TUE 07/29/97 18:01 Page:53   
         7 000010   420013 713400                    CLIMB   alt,+8203
         7 000011   400000 401760                    pmme    nvectors=1
         7 000012   000014 702000 7                  TSX2    SHFMSEC

      323     8293    2           DO ALTRET_HANDLING;

   8293  7 000013   000025 710000 7                  TRA     s:8298

   8292  7 000014                       SHFMSEC      null
      324     8294    2   SHFMSEC:   ;                            /* Should have had FMSEC              */
      325     8295    2              CALL FTX_ERROR( %SHOULD_HAVE_FMSEC, -1 );

   8295  7 000014   000001 236000 8                  LDQ     1
         7 000015   200012 756100                    STQ     @ECODE+1,,AUTO
         7 000016   000002 236000 8                  LDQ     2
         7 000017   200011 756100                    STQ     9,,AUTO
         7 000020   002433 701000 7                  TSX1    FTX_ERROR
         7 000021   000000 011000                    NOP     0

      326     8296    2              CALL M$EXIT( EXITCC );

   8296  7 000022   001074 630400 5                  EPPR0   EXITCC
         7 000023   000001 713400                    CLIMB   exit
         7 000024   400400 401760                    pmme    nvectors=2

      327     8297    2              END;

      328     8298    1           CALL M$SPRIV( CHKLABELRUN ) ALTRET( CANTRUNLABEL );

   8298  7 000025   000760 630400 5                  EPPR0   CHKLABELRUN
         7 000026   420012 713400                    CLIMB   alt,+8202
         7 000027   400000 401760                    pmme    nvectors=1
         7 000030   000032 702000 7                  TSX2    CANTRUNLABEL

      329     8299    2           DO ALTRET_HANDLING;

   8299  7 000031   000043 710000 7                  TRA     s:8304
PL6.E3A0      #001=FTX$LABEL File=FTX$LABEL.:E05TSI                              TUE 07/29/97 18:01 Page:54   

   8298  7 000032                       CANTRUNLABEL null
      330     8300    2   CANTRUNLABEL: ;
      331     8301    2              CALL FTX_ERROR( %CANT_RUN_LABEL, -1 );

   8301  7 000032   000001 236000 8                  LDQ     1
         7 000033   200012 756100                    STQ     @ECODE+1,,AUTO
         7 000034   000004 236000 8                  LDQ     4
         7 000035   200011 756100                    STQ     9,,AUTO
         7 000036   002433 701000 7                  TSX1    FTX_ERROR
         7 000037   000000 011000                    NOP     0

      332     8302    2              CALL M$EXIT( EXITCC );

   8302  7 000040   001074 630400 5                  EPPR0   EXITCC
         7 000041   000001 713400                    CLIMB   exit
         7 000042   400400 401760                    pmme    nvectors=2

      333     8303    2              END;

      334     8304    1           CALL M$TIME( GETTIME ) ALTRET( MONERR );

   8304  7 000043   001116 630400 5                  EPPR0   GETTIME
         7 000044   420004 713400                    CLIMB   alt,+8196
         7 000045   402000 401760                    pmme    nvectors=5
         7 000046   000170 702000 7                  TSX2    MONERR

      335     8305    1           GREETINGS.GVERS = ADDR(B_VERSION)->TEXTC.C;

   8305  7 000047   000000 236000 xsym               LDQ     B_VERSION
         7 000050   000033 772000                    QRL     27
         7 000051   000000 620006                    EAX0    0,QL
         7 000052   040000 100440                    MLR     fill='040'O
         7 000053   000000 200010 xsym               ADSC9   B_VERSION                cn=1,n=*X0
         7 000054   000433 600004 5                  ADSC9   GREETINGS+1              cn=3,n=4

      336     8306    1           CALL M$WRITE( GREETUSR );
PL6.E3A0      #001=FTX$LABEL File=FTX$LABEL.:E05TSI                              TUE 07/29/97 18:01 Page:55   

   8306  7 000055   001132 630400 5                  EPPR0   GREETUSR
         7 000056   040001 713400                    CLIMB   write
         7 000057   401400 401760                    pmme    nvectors=4

      337     8307    1           CALL M$MONINFO(FPT_MONINFO);

   8307  7 000060   000764 630400 5                  EPPR0   FPT_MONINFO
         7 000061   020023 713400                    CLIMB   8211
         7 000062   402400 401760                    pmme    nvectors=6

      338     8308    1           CALL M$INT( BRKCTL );

   8308  7 000063   000754 630400 5                  EPPR0   BRKCTL
         7 000064   010002 713400                    CLIMB   4098
         7 000065   400000 401760                    pmme    nvectors=1

      339     8309    1           CALL XUG$INIT(XUG_GETCMD, XUG_INIT);

   8309  7 000066   000005 630400 8                  EPPR0   5
         7 000067   000020 631400 xsym               EPPR1   B_VECTNIL+16
         7 000070   000000 701000 xent               TSX1    XUG$INIT
         7 000071   000000 011000                    NOP     0

      340     8310         /***
      341     8311          *** Get next command.
      342     8312          ***/
      343     8313
      344     8314    2           DO WHILE('1'B);

      345     8315
      346     8316         /***
      347     8317             *** Get next command and parse it.
      348     8318             ***/
      349     8319
      350     8320    2              CALL XUG$GETCMD(XUG_GETCMD) ALTRET(MONERR);

PL6.E3A0      #001=FTX$LABEL File=FTX$LABEL.:E05TSI                              TUE 07/29/97 18:01 Page:56   
   8320  7 000072   000005 630400 8                  EPPR0   5
         7 000073   000017 631400 xsym               EPPR1   B_VECTNIL+15
         7 000074   000000 701000 xent               TSX1    XUG$GETCMD
         7 000075   000170 702000 7                  TSX2    MONERR

      351     8321    2              CMNDERROR = %NO#;            /* No errors detected yet             */

   8321  7 000076   000420 450000 5                  STZ     CMNDERROR

      352     8322    2              BRKFLAG = %NO#;              /* No breaks                          */

   8322  7 000077   000416 450000 5                  STZ     BRKFLAG

      353     8323
      354     8324         /***
      355     8325             *** Remember type to command to determine if options are valid.
      356     8326             ***/
      357     8327
      358     8328    3              DO CASE(XUG_GETCMD.OUT$->OUT$BLK.CODE); /* Determine command       */

   8328  7 000100   001213 470400 5                  LDP0    XUG_GETCMD+1
         7 000101   000000 720100                    LXL0    0,,PR0
         7 000102   000010 100003                    CMPX0   8,DU
         7 000103   000105 602010 7                  TNC     s:8328+5,X0
         7 000104   000157 710000 7                  TRA     s:8350
         7 000105   000157 710000 7                  TRA     s:8350
         7 000106   000141 710000 7                  TRA     s:8342
         7 000107   000127 710000 7                  TRA     s:8336
         7 000110   000134 710000 7                  TRA     s:8339
         7 000111   000115 710000 7                  TRA     s:8330
         7 000112   000122 710000 7                  TRA     s:8333
         7 000113   000152 710000 7                  TRA     s:8347
         7 000114   000145 710000 7                  TRA     s:8344

      359     8329    3                 CASE(%LABEL_COMMAND);

      360     8330    3                    COMMAND = %LABEL_COMMAND;
PL6.E3A0      #001=FTX$LABEL File=FTX$LABEL.:E05TSI                              TUE 07/29/97 18:01 Page:57   

   8330  7 000115   000004 235007                    LDA     4,DL
         7 000116   000421 755000 5                  STA     COMMAND

      361     8331    3                    CALL FTX_SEQ_LBL_OPTIONS;

   8331  7 000117   000176 701000 7                  TSX1    FTX_SEQ_LBL_OPTIONS
         7 000120   000000 011000                    NOP     0
         7 000121   000167 710000 7                  TRA     s:8354

      362     8332    3                 CASE(%ODLABEL_COMMAND);

      363     8333    3                    COMMAND = %ODLABEL_COMMAND;

   8333  7 000122   000005 235007                    LDA     5,DL
         7 000123   000421 755000 5                  STA     COMMAND

      364     8334    3                    CALL FTX_SEQ_LBL_OPTIONS;

   8334  7 000124   000176 701000 7                  TSX1    FTX_SEQ_LBL_OPTIONS
         7 000125   000000 011000                    NOP     0
         7 000126   000167 710000 7                  TRA     s:8354

      365     8335    3                 CASE(%SEQUENTIAL_COMMAND);

      366     8336    3                    COMMAND = %SEQUENTIAL_COMMAND;

   8336  7 000127   000002 235007                    LDA     2,DL
         7 000130   000421 755000 5                  STA     COMMAND

      367     8337    3                    CALL FTX_SEQ_LBL_OPTIONS;

   8337  7 000131   000176 701000 7                  TSX1    FTX_SEQ_LBL_OPTIONS
         7 000132   000000 011000                    NOP     0
         7 000133   000167 710000 7                  TRA     s:8354

      368     8338    3                 CASE(%ODSEQUEN_COMMAND);
PL6.E3A0      #001=FTX$LABEL File=FTX$LABEL.:E05TSI                              TUE 07/29/97 18:01 Page:58   

      369     8339    3                    COMMAND = %ODSEQUEN_COMMAND;

   8339  7 000134   000003 235007                    LDA     3,DL
         7 000135   000421 755000 5                  STA     COMMAND

      370     8340    3                    CALL FTX_SEQ_LBL_OPTIONS;

   8340  7 000136   000176 701000 7                  TSX1    FTX_SEQ_LBL_OPTIONS
         7 000137   000000 011000                    NOP     0
         7 000140   000167 710000 7                  TRA     s:8354

      371     8341    3                 CASE(%END_COMMAND);

      372     8342    3                    CALL M$EXIT( EXITCC );

   8342  7 000141   001074 630400 5                  EPPR0   EXITCC
         7 000142   000001 713400                    CLIMB   exit
         7 000143   400400 401760                    pmme    nvectors=2
         7 000144   000167 710000 7                  TRA     s:8354

      373     8343    3                 CASE(%SCRATCH_COMMAND);

      374     8344    3                    COMMAND = %SCRATCH_COMMAND;

   8344  7 000145   000007 235007                    LDA     7,DL
         7 000146   000421 755000 5                  STA     COMMAND

      375     8345    3                    CALL FTX_SEQ_LBL_OPTIONS;

   8345  7 000147   000176 701000 7                  TSX1    FTX_SEQ_LBL_OPTIONS
         7 000150   000000 011000                    NOP     0
         7 000151   000167 710000 7                  TRA     s:8354

      376     8346    3                 CASE(%REM_COMMAND);

      377     8347    3                    COMMAND = %REM_COMMAND;
PL6.E3A0      #001=FTX$LABEL File=FTX$LABEL.:E05TSI                              TUE 07/29/97 18:01 Page:59   

   8347  7 000152   000006 235007                    LDA     6,DL
         7 000153   000421 755000 5                  STA     COMMAND

      378     8348    3                    CALL FTX_REM_OPTION;

   8348  7 000154   002136 701000 7                  TSX1    FTX_REM_OPTION
         7 000155   000000 011000                    NOP     0
         7 000156   000167 710000 7                  TRA     s:8354

      379     8349    3                 CASE(ELSE);

      380     8350    3                    CALL FTX_ERROR(%PROGRAM_BUG,0);

   8350  7 000157   000007 236000 8                  LDQ     7
         7 000160   200012 756100                    STQ     @ECODE+1,,AUTO
         7 000161   200011 756100                    STQ     9,,AUTO
         7 000162   002433 701000 7                  TSX1    FTX_ERROR
         7 000163   000000 011000                    NOP     0

      381     8351    3                    CALL M$EXIT( EXITCC );

   8351  7 000164   001074 630400 5                  EPPR0   EXITCC
         7 000165   000001 713400                    CLIMB   exit
         7 000166   400400 401760                    pmme    nvectors=2

      382     8352    3                 END;

      383     8353
      384     8354    3              DO WHILE('0'B);

   8354  7 000167   000072 710000 7                  TRA     s:8320

   8351  7 000170                       MONERR       null
      385     8355    3   MONERR:       ;
      386     8356    3                 CALL FTX_RPTERR;

PL6.E3A0      #001=FTX$LABEL File=FTX$LABEL.:E05TSI                              TUE 07/29/97 18:01 Page:60   
   8356  7 000170   002404 701000 7                  TSX1    FTX_RPTERR
         7 000171   000000 011000                    NOP     0

      387     8357    3                 CALL M$EXIT( EXITCC );

   8357  7 000172   001074 630400 5                  EPPR0   EXITCC
         7 000173   000001 713400                    CLIMB   exit
         7 000174   400400 401760                    pmme    nvectors=2

      388     8358    3                 END;

      389     8359    2              END;

   8359  7 000175   000072 710000 7                  TRA     s:8320

      390     8360        /********************************************************************/
      391     8361        %EJECT;
PL6.E3A0      #001=FTX$LABEL File=FTX$LABEL.:E05TSI                              TUE 07/29/97 18:01 Page:61   
      392     8362        /********************************************************************/
      393     8363    1   FTX_SEQ_LBL_OPTIONS: PROC;

   8363  7 000176   200004 741300       FTX_SEQ_LBL* STX1  ! 4,,AUTO

      394     8364        /*F*     NAME: FTX_SEQ_LBL_OPTIONS
      395     8365                 PURPOSE: Process SEQUENTIAL or LABEL options.
      396     8366         ***/
      397     8367
      398     8368        /********************/
      399     8369
      400     8370         /***
      401     8371          *** Initialize for next command.
      402     8372          ***/
      403     8373
      404     8374    3              DO N=0 TO %MAXOPTIONCODE;    /* No options seen yet                */

   8374  7 000177   000472 450000 5                  STZ     N

      405     8375    3                 OPTIONSPECIFIED(N) = %NO#;

   8375  7 000200   000472 235000 5                  LDA     N
         7 000201   000203 605000 7                  TPL     s:8375+3
         7 000202   000044 035003                    ADLA    36,DU
         7 000203   003005 060400                    CSL     bolr='003'O
         7 000204   000002 000001 xsym               BDSC    B_VECTNIL+2              by=0,bit=0,n=1
         7 000205   000507 000001 5                  BDSC    OPTIONSPECIFIED,A        by=0,bit=0,n=1

      406     8376    3                 END;

   8376  7 000206   000472 054000 5                  AOS     N
         7 000207   000472 235000 5                  LDA     N
         7 000210   000027 115007                    CMPA    23,DL
         7 000211   000200 604400 7                  TMOZ    s:8375

      407     8377
      408     8378    2              NEXTFREENSN = -1;            /* Nothing in named sn list           */
PL6.E3A0      #001=FTX$LABEL File=FTX$LABEL.:E05TSI                              TUE 07/29/97 18:01 Page:62   

   8378  7 000212   000001 336007                    LCQ     1,DL
         7 000213   000473 756000 5                  STQ     NEXTFREENSN

      409     8379    2              STARTNUM = 0;                /* Default start is 0                 */

   8379  7 000214   000744 450000 5                  STZ     STARTNUM

      410     8380    2              INCNUM = 1;                  /* Default increment is 1             */

   8380  7 000215   000001 235007                    LDA     1,DL
         7 000216   000442 755000 5                  STA     INCNUM

      411     8381    2              VOLACCESS = 0;               /* No volume protection specified     */

   8381  7 000217   000750 450000 5                  STZ     VOLACCESS

      412     8382    2              DENSITY = 0;                 /* No density specified               */

   8382  7 000220   000751 450000 5                  STZ     DENSITY

      413     8383    2              BASESN = '000000';           /* No base serial number              */

   8383  7 000221   040000 100400                    MLR     fill='040'O
         7 000222   000417 000006 6                  ADSC9   ERMSG+246                cn=0,n=6
         7 000223   000414 000006 5                  ADSC9   BASESN                   cn=0,n=6

      414     8384    2              PLACESTART = -1;             /* No place to put seq number         */

   8384  7 000224   000536 756000 5                  STQ     PLACESTART

      415     8385    2              NUMLABELED = 0;              /* No tapes labelled                  */

   8385  7 000225   000474 450000 5                  STZ     NUMLABELED

      416     8386    2              VOLACN.ACCT# = ' ';          /* No owner                           */

PL6.E3A0      #001=FTX$LABEL File=FTX$LABEL.:E05TSI                              TUE 07/29/97 18:01 Page:63   
   8386  7 000226   000035 235000 xsym               LDA     B_VECTNIL+29
         7 000227   000035 236000 xsym               LDQ     B_VECTNIL+29
         7 000230   000306 757000 5                  STAQ    VOLACN

      417     8387    2              FIRSTSEQSN = ' ';            /* No range beginning                 */

   8387  7 000231   040000 100400                    MLR     fill='040'O
         7 000232   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         7 000233   000426 000006 5                  ADSC9   FIRSTSEQSN               cn=0,n=6

      418     8388    2              NUMSNSPECS = 0;              /* No input sn list                   */

   8388  7 000234   000502 450000 5                  STZ     NUMSNSPECS

      419     8389    2              SNBLANKX = 0;                /* From initial sn                    */

   8389  7 000235   000541 450000 5                  STZ     SNBLANKX

      420     8390    2              BYPCONCHK = %NO#;            /* Default check contents             */

   8390  7 000236   000417 450000 5                  STZ     BYPCONCHK

      421     8391
      422     8392         /***
      423     8393          *** Process options.
      424     8394          ***/
      425     8395
      426     8396    3              DO OPTIONNUM=0 TO XUG_GETCMD.OUT$->OUT$BLK.NSUBLKS-1;

   8396  7 000237   000506 450000 5                  STZ     OPTIONNUM
         7 000240   000732 710000 7                  TRA     s:8516+1

      427     8397    3                 IF BRKFLAG THEN

   8397  7 000241   000416 234000 5                  SZN     BRKFLAG
         7 000242   000245 605000 7                  TPL     s:8399

PL6.E3A0      #001=FTX$LABEL File=FTX$LABEL.:E05TSI                              TUE 07/29/97 18:01 Page:64   
      428     8398    3                    RETURN;               /* Don't execute command if break hit. */

   8398  7 000243   200004 221300                    LDX1  ! 4,,AUTO
         7 000244   000001 702211                    TSX2  ! 1,X1

      429     8399    3                 OPTIONBLK$ = XUG_GETCMD.OUT$->OUT$BLK.SUBLK$(OPTIONNUM);

   8399  7 000245   001213 470400 5                  LDP0    XUG_GETCMD+1
         7 000246   000506 720000 5                  LXL0    OPTIONNUM
         7 000247   000003 236110                    LDQ     3,X0,PR0
         7 000250   000505 756000 5                  STQ     OPTIONBLK$

      430     8400    3                 OPTIONSPECIFIED(OPTIONBLK$->OUT$BLK.CODE) = %YES#;

   8400  7 000251   000505 471400 5                  LDP1    OPTIONBLK$
         7 000252   100000 236100                    LDQ     0,,PR1
         7 000253   777777 376007                    ANQ     -1,DL
         7 000254   003006 060400                    CSL     bolr='003'O
         7 000255   000030 000001 xsym               BDSC    B_VECTNIL+24             by=0,bit=0,n=1
         7 000256   000507 000001 5                  BDSC    OPTIONSPECIFIED,Q        by=0,bit=0,n=1

      431     8401    4                 DO CASE(OPTIONBLK$->OUT$BLK.CODE);

   8401  7 000257   000010 136007                    SBLQ    8,DL
         7 000260   000020 116007                    CMPQ    16,DL
         7 000261   000263 602006 7                  TNC     s:8401+4,QL
         7 000262   000724 710000 7                  TRA     s:8514
         7 000263   000521 710000 7                  TRA     s:8451
         7 000264   000620 710000 7                  TRA     s:8473
         7 000265   000652 710000 7                  TRA     s:8482
         7 000266   000655 710000 7                  TRA     s:8485
         7 000267   000662 710000 7                  TRA     s:8489
         7 000270   000711 710000 7                  TRA     s:8508
         7 000271   000303 710000 7                  TRA     s:8403
         7 000272   000367 710000 7                  TRA     s:8420
         7 000273   000461 710000 7                  TRA     s:8437
         7 000274   000501 710000 7                  TRA     s:8445
PL6.E3A0      #001=FTX$LABEL File=FTX$LABEL.:E05TSI                              TUE 07/29/97 18:01 Page:65   
         7 000275   000511 710000 7                  TRA     s:8448
         7 000276   000667 710000 7                  TRA     s:8493
         7 000277   000672 710000 7                  TRA     s:8496
         7 000300   000677 710000 7                  TRA     s:8500
         7 000301   000721 710000 7                  TRA     s:8511
         7 000302   000704 710000 7                  TRA     s:8504

      432     8402    4                    CASE(%SNLIST);

      433     8403    4                       SNNUM = OPTIONBLK$->OUT$BLK.NSUBLKS; /* Get number of sns */

   8403  7 000303   100001 236100                    LDQ     1,,PR1
         7 000304   000022 772000                    QRL     18
         7 000305   000542 756000 5                  STQ     SNNUM

      434     8404    5                       DO N=0 TO SNNUM-1;

   8404  7 000306   000472 450000 5                  STZ     N
         7 000307   000346 710000 7                  TRA     s:8413+1

      435     8405    5                          ASN = OPTIONBLK$->OUT$BLK.SUBLK$(N)->OUT$SYM.TEXT;
              8405                                   /* Save sn */

   8405  7 000310   000505 470400 5                  LDP0    OPTIONBLK$
         7 000311   000472 720000 5                  LXL0    N
         7 000312   000003 471510                    LDP1    3,X0,PR0
         7 000313   100004 236100                    LDQ     4,,PR1
         7 000314   000033 772000                    QRL     27
         7 000315   000000 621006                    EAX1    0,QL
         7 000316   040000 100540                    MLR     fill='040'O
         7 000317   100004 200011                    ADSC9   4,,PR1                   cn=1,n=*X1
         7 000320   000412 000006 5                  ADSC9   ASN                      cn=0,n=6

      436     8406    5                          NEXTFREENSN = NEXTFREENSN + 1;

   8406  7 000321   000473 054000 5                  AOS     NEXTFREENSN

PL6.E3A0      #001=FTX$LABEL File=FTX$LABEL.:E05TSI                              TUE 07/29/97 18:01 Page:66   
      437     8407    5                          NSNLIST.SN#(NEXTFREENSN) = ASN;

   8407  7 000322   000473 236000 5                  LDQ     NEXTFREENSN
         7 000323   000006 402007                    MPY     6,DL
         7 000324   040006 100400                    MLR     fill='040'O
         7 000325   000412 000006 5                  ADSC9   ASN                      cn=0,n=6
         7 000326   000001 000006 5                  ADSC9   NSNLIST+1,Q              cn=0,n=6

      438     8408    5                          CALL INDEX(TEMP,' ',ASN);

   8408  7 000327   000000 124400                    SCM     mask='000'O
         7 000330   000412 000006 5                  ADSC9   ASN                      cn=0,n=6
         7 000331   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         7 000332   000745 000000 5                  ARG     TEMP

      439     8409    6                          IF TEMP = 0 THEN DO;

   8409  7 000333   000745 235000 5                  LDA     TEMP
         7 000334   000345 601000 7                  TNZ     s:8413

      440     8410    6                             CPOS = OPTIONBLK$->OUT$BLK.SUBLK$(N)->OUT$SYM.CPOS;

   8410  7 000335   100002 235100                    LDA     2,,PR1
         7 000336   000422 755000 5                  STA     CPOS

      441     8411    6                             CALL FTX_ERROR(%BLANK_IN_SN,CPOS);

   8411  7 000337   000010 236000 8                  LDQ     8
         7 000340   200012 756100                    STQ     @ECODE+1,,AUTO
         7 000341   000011 236000 8                  LDQ     9
         7 000342   200011 756100                    STQ     9,,AUTO
         7 000343   002433 701000 7                  TSX1    FTX_ERROR
         7 000344   000000 011000                    NOP     0

      442     8412    6                             END;

      443     8413    5                          END;
PL6.E3A0      #001=FTX$LABEL File=FTX$LABEL.:E05TSI                              TUE 07/29/97 18:01 Page:67   

   8413  7 000345   000472 054000 5                  AOS     N
         7 000346   000472 236000 5                  LDQ     N
         7 000347   000542 116000 5                  CMPQ    SNNUM
         7 000350   000310 604000 7                  TMI     s:8405

      444     8414    4                       SNSPECS.NAMED(NUMSNSPECS) = %YES#; /* These are named     */

   8414  7 000351   000502 720000 5                  LXL0    NUMSNSPECS
         7 000352   400000 236003                    LDQ     -131072,DU
         7 000353   000543 256010 5                  ORSQ    SNSPECS,X0

      445     8415    4                       SNSPECS.LASTNAMEX(NUMSNSPECS) = NEXTFREENSN;
              8415                                /* Ix of last in group */

   8415  7 000354   000473 721000 5                  LXL1    NEXTFREENSN
         7 000355   000543 441010 5                  SXL1    SNSPECS,X0

      446     8416    4                       SNSPECS.FIRSTNAMEX(NUMSNSPECS) = NEXTFREENSN - (SNNUM - 1);

   8416  7 000356   000473 236000 5                  LDQ     NEXTFREENSN
         7 000357   000542 136000 5                  SBLQ    SNNUM
         7 000360   000001 036007                    ADLQ    1,DL
         7 000361   000022 736000                    QLS     18
         7 000362   000543 676010 5                  ERQ     SNSPECS,X0
         7 000363   377777 376003                    ANQ     131071,DU
         7 000364   000543 656010 5                  ERSQ    SNSPECS,X0

      447     8417    4                       NUMSNSPECS = NUMSNSPECS + 1;

   8417  7 000365   000502 054000 5                  AOS     NUMSNSPECS
         7 000366   000731 710000 7                  TRA     s:8516

      448     8418
      449     8419    4                    CASE(%PLATLIST);

      450     8420    4                       SNNUM = OPTIONBLK$->OUT$BLK.NSUBLKS; /* Get number of sns */
PL6.E3A0      #001=FTX$LABEL File=FTX$LABEL.:E05TSI                              TUE 07/29/97 18:01 Page:68   

   8420  7 000367   100001 236100                    LDQ     1,,PR1
         7 000370   000022 772000                    QRL     18
         7 000371   000542 756000 5                  STQ     SNNUM

      451     8421    5                       DO N=0 TO SNNUM-1;

   8421  7 000372   000472 450000 5                  STZ     N
         7 000373   000440 710000 7                  TRA     s:8430+1

      452     8422    5                          TEMP = OPTIONBLK$->OUT$BLK.SUBLK$(N)->OUT$SYM.COUNT;

   8422  7 000374   000505 470400 5                  LDP0    OPTIONBLK$
         7 000375   000472 720000 5                  LXL0    N
         7 000376   000003 471510                    LDP1    3,X0,PR0
         7 000377   100004 236100                    LDQ     4,,PR1
         7 000400   000033 772000                    QRL     27
         7 000401   000745 756000 5                  STQ     TEMP

      453     8423    5                          ASN = OPTIONBLK$->OUT$BLK.SUBLK$(N)->OUT$SYM.TEXT;

   8423  7 000402   000000 621006                    EAX1    0,QL
         7 000403   040000 100540                    MLR     fill='040'O
         7 000404   100004 200011                    ADSC9   4,,PR1                   cn=1,n=*X1
         7 000405   000412 000006 5                  ADSC9   ASN                      cn=0,n=6

      454     8424    6                          IF SUBSTR(ASN,TEMP-1,1) ~= 'A' AND SUBSTR(ASN,TEMP-1,1) ~=
              8424                                   'B' THEN DO;

   8424  7 000406   000745 235000 5                  LDA     TEMP
         7 000407   040000 106405                    CMPC    fill='040'O
         7 000410   000411 600001 5                  ADSC9   VLR_SITEINFO+61,A        cn=3,n=1
         7 000411   000012 000001 8                  ADSC9   10                       cn=0,n=1
         7 000412   000431 600000 7                  TZE     s:8428
         7 000413   040000 106405                    CMPC    fill='040'O
         7 000414   000411 600001 5                  ADSC9   VLR_SITEINFO+61,A        cn=3,n=1
         7 000415   000013 000001 8                  ADSC9   11                       cn=0,n=1
PL6.E3A0      #001=FTX$LABEL File=FTX$LABEL.:E05TSI                              TUE 07/29/97 18:01 Page:69   
         7 000416   000431 600000 7                  TZE     s:8428

      455     8425    6                             CPOS = OPTIONBLK$->OUT$BLK.SUBLK$(N)->OUT$SYM.CPOS + TEMP
              8425                                      - 1;

   8425  7 000417   100002 236100                    LDQ     2,,PR1
         7 000420   000745 036000 5                  ADLQ    TEMP
         7 000421   000001 136007                    SBLQ    1,DL
         7 000422   000422 756000 5                  STQ     CPOS

      456     8426    6                             CALL FTX_ERROR(%INVALID_OD_SIDE,CPOS);

   8426  7 000423   000010 236000 8                  LDQ     8
         7 000424   200012 756100                    STQ     @ECODE+1,,AUTO
         7 000425   000014 236000 8                  LDQ     12
         7 000426   200011 756100                    STQ     9,,AUTO
         7 000427   002433 701000 7                  TSX1    FTX_ERROR
         7 000430   000000 011000                    NOP     0

      457     8427    6                             END;

      458     8428    5                          NEXTFREENSN = NEXTFREENSN + 1;

   8428  7 000431   000473 054000 5                  AOS     NEXTFREENSN

      459     8429    5                          NSNLIST.SN#(NEXTFREENSN) = ASN;

   8429  7 000432   000473 236000 5                  LDQ     NEXTFREENSN
         7 000433   000006 402007                    MPY     6,DL
         7 000434   040006 100400                    MLR     fill='040'O
         7 000435   000412 000006 5                  ADSC9   ASN                      cn=0,n=6
         7 000436   000001 000006 5                  ADSC9   NSNLIST+1,Q              cn=0,n=6

      460     8430    5                          END;

   8430  7 000437   000472 054000 5                  AOS     N
         7 000440   000472 236000 5                  LDQ     N
PL6.E3A0      #001=FTX$LABEL File=FTX$LABEL.:E05TSI                              TUE 07/29/97 18:01 Page:70   
         7 000441   000542 116000 5                  CMPQ    SNNUM
         7 000442   000374 604000 7                  TMI     s:8422

      461     8431    4                       SNSPECS.NAMED(NUMSNSPECS) = %YES#; /* These are named     */

   8431  7 000443   000502 720000 5                  LXL0    NUMSNSPECS
         7 000444   400000 236003                    LDQ     -131072,DU
         7 000445   000543 256010 5                  ORSQ    SNSPECS,X0

      462     8432    4                       SNSPECS.LASTNAMEX(NUMSNSPECS) = NEXTFREENSN;
              8432                                /* Ix of last in group */

   8432  7 000446   000473 721000 5                  LXL1    NEXTFREENSN
         7 000447   000543 441010 5                  SXL1    SNSPECS,X0

      463     8433    4                       SNSPECS.FIRSTNAMEX(NUMSNSPECS) = NEXTFREENSN - (SNNUM - 1);

   8433  7 000450   000473 236000 5                  LDQ     NEXTFREENSN
         7 000451   000542 136000 5                  SBLQ    SNNUM
         7 000452   000001 036007                    ADLQ    1,DL
         7 000453   000022 736000                    QLS     18
         7 000454   000543 676010 5                  ERQ     SNSPECS,X0
         7 000455   377777 376003                    ANQ     131071,DU
         7 000456   000543 656010 5                  ERSQ    SNSPECS,X0

      464     8434    4                       NUMSNSPECS = NUMSNSPECS + 1;

   8434  7 000457   000502 054000 5                  AOS     NUMSNSPECS
         7 000460   000731 710000 7                  TRA     s:8516

      465     8435
      466     8436    4                    CASE(%NUMTAPES);

      467     8437    4                       SNSPECS.NAMED(NUMSNSPECS) = %NO#;

   8437  7 000461   000502 721000 5                  LXL1    NUMSNSPECS
         7 000462   000031 236000 xsym               LDQ     B_VECTNIL+25
PL6.E3A0      #001=FTX$LABEL File=FTX$LABEL.:E05TSI                              TUE 07/29/97 18:01 Page:71   
         7 000463   000543 356011 5                  ANSQ    SNSPECS,X1

      468     8438    4                       CALL CHARBIN(N,OPTIONBLK$->OUT$BLK.SUBLK$(0)->OUT$SYM.TEXT);

   8438  7 000464   100003 473500                    LDP3    3,,PR1
         7 000465   300004 236100                    LDQ     4,,PR3
         7 000466   000033 772000                    QRL     27
         7 000467   000000 622006                    EAX2    0,QL
         7 000470   000000 305540                    DTB
         7 000471   300004 230012                    NDSC9   4,,PR3                   cn=1,s=nosgn,sf=0,n=*X2
         7 000472   000472 000004 5                  NDSC9   N                        cn=0,s=lsgnf,sf=0,n=4

      469     8439    5                       IF N >= 1 THEN DO;

   8439  7 000473   000472 235000 5                  LDA     N
         7 000474   000731 604400 7                  TMOZ    s:8516

      470     8440    5                          SNSPECS.NUMNOTNAMED(NUMSNSPECS) = N;

   8440  7 000475   000000 623005                    EAX3    0,AL
         7 000476   000543 443011 5                  SXL3    SNSPECS,X1

      471     8441    5                          NUMSNSPECS = NUMSNSPECS + 1;

   8441  7 000477   000502 054000 5                  AOS     NUMSNSPECS

      472     8442    5                          END;

   8442  7 000500   000731 710000 7                  TRA     s:8516

      473     8443
      474     8444    4                    CASE(%START);

      475     8445    4                       CALL CHARBIN(STARTNUM,OPTIONBLK$->OUT$BLK.SUBLK$(0)->OUT$SYM.
              8445                                TEXT);

   8445  7 000501   100003 473500                    LDP3    3,,PR1
PL6.E3A0      #001=FTX$LABEL File=FTX$LABEL.:E05TSI                              TUE 07/29/97 18:01 Page:72   
         7 000502   300004 236100                    LDQ     4,,PR3
         7 000503   000033 772000                    QRL     27
         7 000504   000000 621006                    EAX1    0,QL
         7 000505   000000 305540                    DTB
         7 000506   300004 230011                    NDSC9   4,,PR3                   cn=1,s=nosgn,sf=0,n=*X1
         7 000507   000744 000004 5                  NDSC9   STARTNUM                 cn=0,s=lsgnf,sf=0,n=4
         7 000510   000731 710000 7                  TRA     s:8516

      476     8446
      477     8447    4                    CASE(%INCREMENT);

      478     8448    4                      CALL CHARBIN(INCNUM,OPTIONBLK$->OUT$BLK.SUBLK$(0)->OUT$SYM.TEXT)
              8448                                ;

   8448  7 000511   100003 473500                    LDP3    3,,PR1
         7 000512   300004 236100                    LDQ     4,,PR3
         7 000513   000033 772000                    QRL     27
         7 000514   000000 621006                    EAX1    0,QL
         7 000515   000000 305540                    DTB
         7 000516   300004 230011                    NDSC9   4,,PR3                   cn=1,s=nosgn,sf=0,n=*X1
         7 000517   000442 000004 5                  NDSC9   INCNUM                   cn=0,s=lsgnf,sf=0,n=4
         7 000520   000731 710000 7                  TRA     s:8516

      479     8449
      480     8450    4                    CASE(%PLACE);

      481     8451    4                       CALL CHARBIN(PLACESTART,OPTIONBLK$->OUT$BLK.SUBLK$(0)->OUT$SYM.
              8451                                TEXT);

   8451  7 000521   100003 473500                    LDP3    3,,PR1
         7 000522   300004 236100                    LDQ     4,,PR3
         7 000523   000033 772000                    QRL     27
         7 000524   000000 621006                    EAX1    0,QL
         7 000525   000000 305540                    DTB
         7 000526   300004 230011                    NDSC9   4,,PR3                   cn=1,s=nosgn,sf=0,n=*X1
         7 000527   000536 000004 5                  NDSC9   PLACESTART               cn=0,s=lsgnf,sf=0,n=4

PL6.E3A0      #001=FTX$LABEL File=FTX$LABEL.:E05TSI                              TUE 07/29/97 18:01 Page:73   
      482     8452    5                       IF PLACESTART < 1 OR PLACESTART > 6 THEN DO;
              8452                                /* Must ix(1-6) char of sn */

   8452  7 000530   000536 235000 5                  LDA     PLACESTART
         7 000531   000534 604400 7                  TMOZ    s:8453
         7 000532   000006 115007                    CMPA    6,DL
         7 000533   000546 604400 7                  TMOZ    s:8457

      483     8453    5                          CPOS = OPTIONBLK$->OUT$BLK.SUBLK$(0)->OUT$SYM.CPOS;

   8453  7 000534   300002 235100                    LDA     2,,PR3
         7 000535   000422 755000 5                  STA     CPOS

      484     8454    5                          CALL FTX_ERROR(%PLACE_RANGE_START_WRONG,CPOS);

   8454  7 000536   000010 236000 8                  LDQ     8
         7 000537   200012 756100                    STQ     @ECODE+1,,AUTO
         7 000540   000015 236000 8                  LDQ     13
         7 000541   200011 756100                    STQ     9,,AUTO
         7 000542   002433 701000 7                  TSX1    FTX_ERROR
         7 000543   000000 011000                    NOP     0

      485     8455    5                          PLACESTART = 1;

   8455  7 000544   000001 235007                    LDA     1,DL
         7 000545   000536 755000 5                  STA     PLACESTART

      486     8456    5                          END;

      487     8457    4                       IF OPTIONBLK$->OUT$BLK.NSUBLKS = 1 THEN

   8457  7 000546   000505 470400 5                  LDP0    OPTIONBLK$
         7 000547   000001 220100                    LDX0    1,,PR0
         7 000550   000001 100003                    CMPX0   1,DU
         7 000551   000555 601000 7                  TNZ     s:8460

      488     8458    4                          PLACESIZE = 1;   /* Just place start specified         */
PL6.E3A0      #001=FTX$LABEL File=FTX$LABEL.:E05TSI                              TUE 07/29/97 18:01 Page:74   

   8458  7 000552   000001 236007                    LDQ     1,DL
         7 000553   000535 756000 5                  STQ     PLACESIZE
         7 000554   000731 710000 7                  TRA     s:8516

      489     8459    5                       ELSE DO;            /* End specified also                 */

      490     8460    5                          CALL CHARBIN(N,OPTIONBLK$->OUT$BLK.SUBLK$(1)->OUT$SYM.TEXT);

   8460  7 000555   000004 471500                    LDP1    4,,PR0
         7 000556   100004 236100                    LDQ     4,,PR1
         7 000557   000033 772000                    QRL     27
         7 000560   000000 621006                    EAX1    0,QL
         7 000561   000000 305540                    DTB
         7 000562   100004 230011                    NDSC9   4,,PR1                   cn=1,s=nosgn,sf=0,n=*X1
         7 000563   000472 000004 5                  NDSC9   N                        cn=0,s=lsgnf,sf=0,n=4

      491     8461    6                          IF N < 1 OR N > 6 THEN DO; /* End must be in sn        */

   8461  7 000564   000472 235000 5                  LDA     N
         7 000565   000570 604400 7                  TMOZ    s:8462
         7 000566   000006 115007                    CMPA    6,DL
         7 000567   000600 604400 7                  TMOZ    s:8465

      492     8462    6                             CPOS = OPTIONBLK$->OUT$BLK.SUBLK$(1)->OUT$SYM.CPOS;

   8462  7 000570   100002 235100                    LDA     2,,PR1
         7 000571   000422 755000 5                  STA     CPOS

      493     8463    6                             CALL FTX_ERROR(%PLACE_RANGE_END_WRONG,CPOS);

   8463  7 000572   000010 236000 8                  LDQ     8
         7 000573   200012 756100                    STQ     @ECODE+1,,AUTO
         7 000574   000016 236000 8                  LDQ     14
         7 000575   200011 756100                    STQ     9,,AUTO
         7 000576   002433 701000 7                  TSX1    FTX_ERROR
         7 000577   000000 011000                    NOP     0
PL6.E3A0      #001=FTX$LABEL File=FTX$LABEL.:E05TSI                              TUE 07/29/97 18:01 Page:75   

      494     8464    6                             END;

      495     8465    5                          PLACESIZE = N - PLACESTART + 1;

   8465  7 000600   000472 236000 5                  LDQ     N
         7 000601   000536 136000 5                  SBLQ    PLACESTART
         7 000602   000001 036007                    ADLQ    1,DL
         7 000603   000535 756000 5                  STQ     PLACESIZE

      496     8466    6                          IF PLACESIZE < 1 THEN DO;
              8466                                   /* Can't put into less than 1 byte */

   8466  7 000604   000731 605400 7                  TPNZ    s:8516

      497     8467    6                             CPOS = OPTIONBLK$->OUT$BLK.SUBLK$(1)->OUT$SYM.CPOS;

   8467  7 000605   000505 470400 5                  LDP0    OPTIONBLK$
         7 000606   000004 471500                    LDP1    4,,PR0
         7 000607   100002 235100                    LDA     2,,PR1
         7 000610   000422 755000 5                  STA     CPOS

      498     8468    6                             CALL FTX_ERROR(%PLACE_RANGE_END_SMALL,CPOS);

   8468  7 000611   000010 236000 8                  LDQ     8
         7 000612   200012 756100                    STQ     @ECODE+1,,AUTO
         7 000613   000017 236000 8                  LDQ     15
         7 000614   200011 756100                    STQ     9,,AUTO
         7 000615   002433 701000 7                  TSX1    FTX_ERROR
         7 000616   000000 011000                    NOP     0

      499     8469    6                             END;

      500     8470    5                          END;

   8470  7 000617   000731 710000 7                  TRA     s:8516

PL6.E3A0      #001=FTX$LABEL File=FTX$LABEL.:E05TSI                              TUE 07/29/97 18:01 Page:76   
      501     8471
      502     8472    4                    CASE(%SERIAL);

      503     8473    4                       BASESN = OPTIONBLK$->OUT$BLK.SUBLK$(0)->OUT$SYM.TEXT;
              8473                                /* Remember sn */

   8473  7 000620   100003 473500                    LDP3    3,,PR1
         7 000621   300004 236100                    LDQ     4,,PR3
         7 000622   000033 772000                    QRL     27
         7 000623   000000 621006                    EAX1    0,QL
         7 000624   040000 100540                    MLR     fill='040'O
         7 000625   300004 200011                    ADSC9   4,,PR3                   cn=1,n=*X1
         7 000626   000414 000006 5                  ADSC9   BASESN                   cn=0,n=6

      504     8474    4                       VOLSN.SN#(0) = BASESN;

   8474  7 000627   040000 100400                    MLR     fill='040'O
         7 000630   000414 000006 5                  ADSC9   BASESN                   cn=0,n=6
         7 000631   000311 000006 5                  ADSC9   VOLSN+1                  cn=0,n=6

      505     8475    4                       CALL INDEX(SNBLANKX,' ',BASESN); /* Check validity        */

   8475  7 000632   000000 124400                    SCM     mask='000'O
         7 000633   000414 000006 5                  ADSC9   BASESN                   cn=0,n=6
         7 000634   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         7 000635   000541 000000 5                  ARG     SNBLANKX

      506     8476    5                       IF SNBLANKX = 0 THEN DO;

   8476  7 000636   000541 235000 5                  LDA     SNBLANKX
         7 000637   000731 601000 7                  TNZ     s:8516

      507     8477    5                          CPOS = OPTIONBLK$->OUT$BLK.SUBLK$(0)->OUT$SYM.CPOS;

   8477  7 000640   100003 473500                    LDP3    3,,PR1
         7 000641   300002 235100                    LDA     2,,PR3
         7 000642   000422 755000 5                  STA     CPOS
PL6.E3A0      #001=FTX$LABEL File=FTX$LABEL.:E05TSI                              TUE 07/29/97 18:01 Page:77   

      508     8478    5                          CALL FTX_ERROR(%BLANK_IN_SN,CPOS);

   8478  7 000643   000010 236000 8                  LDQ     8
         7 000644   200012 756100                    STQ     @ECODE+1,,AUTO
         7 000645   000011 236000 8                  LDQ     9
         7 000646   200011 756100                    STQ     9,,AUTO
         7 000647   002433 701000 7                  TSX1    FTX_ERROR
         7 000650   000000 011000                    NOP     0

      509     8479    5                          END;

   8479  7 000651   000731 710000 7                  TRA     s:8516

      510     8480
      511     8481    4                    CASE(%INACC);

      512     8482    4                       VOLACCESS = %IN#;

   8482  7 000652   000002 235007                    LDA     2,DL
         7 000653   000750 755000 5                  STA     VOLACCESS
         7 000654   000731 710000 7                  TRA     s:8516

      513     8483
      514     8484    4                    CASE(%NONEACC);

      515     8485    4                       OPTIONSPECIFIED(%INACC) = %YES#;

   8485  7 000655   000200 236003                    LDQ     128,DU
         7 000656   000507 256000 5                  ORSQ    OPTIONSPECIFIED

      516     8486    4                       VOLACCESS = %NONE#;

   8486  7 000657   000003 235007                    LDA     3,DL
         7 000660   000750 755000 5                  STA     VOLACCESS
         7 000661   000731 710000 7                  TRA     s:8516

PL6.E3A0      #001=FTX$LABEL File=FTX$LABEL.:E05TSI                              TUE 07/29/97 18:01 Page:78   
      517     8487
      518     8488    4                    CASE(%ALLACC);

      519     8489    4                       OPTIONSPECIFIED(%INACC) = %YES#;

   8489  7 000662   000200 236003                    LDQ     128,DU
         7 000663   000507 256000 5                  ORSQ    OPTIONSPECIFIED

      520     8490    4                       VOLACCESS = %ALL#;

   8490  7 000664   000001 235007                    LDA     1,DL
         7 000665   000750 755000 5                  STA     VOLACCESS
         7 000666   000731 710000 7                  TRA     s:8516

      521     8491
      522     8492    4                    CASE(%DEN800);

      523     8493    4                       DENSITY = %D800#;

   8493  7 000667   000002 235007                    LDA     2,DL
         7 000670   000751 755000 5                  STA     DENSITY
         7 000671   000731 710000 7                  TRA     s:8516

      524     8494
      525     8495    4                    CASE(%DEN1600);

      526     8496    4                       OPTIONSPECIFIED(%DEN800) = %YES#;

   8496  7 000672   200000 236007                    LDQ     65536,DL
         7 000673   000507 256000 5                  ORSQ    OPTIONSPECIFIED

      527     8497    4                       DENSITY = %D1600#;

   8497  7 000674   000003 235007                    LDA     3,DL
         7 000675   000751 755000 5                  STA     DENSITY
         7 000676   000731 710000 7                  TRA     s:8516

PL6.E3A0      #001=FTX$LABEL File=FTX$LABEL.:E05TSI                              TUE 07/29/97 18:01 Page:79   
      528     8498
      529     8499    4                    CASE(%DEN6250);

      530     8500    4                       OPTIONSPECIFIED(%DEN800) = %YES#;

   8500  7 000677   200000 236007                    LDQ     65536,DL
         7 000700   000507 256000 5                  ORSQ    OPTIONSPECIFIED

      531     8501    4                       DENSITY = %D6250#;

   8501  7 000701   000004 235007                    LDA     4,DL
         7 000702   000751 755000 5                  STA     DENSITY
         7 000703   000731 710000 7                  TRA     s:8516

      532     8502
      533     8503    4                    CASE(%DEN38000);

      534     8504    4                       OPTIONSPECIFIED(%DEN800) = %YES#;

   8504  7 000704   200000 236007                    LDQ     65536,DL
         7 000705   000507 256000 5                  ORSQ    OPTIONSPECIFIED

      535     8505    4                       DENSITY = %D38000#;

   8505  7 000706   000005 235007                    LDA     5,DL
         7 000707   000751 755000 5                  STA     DENSITY
         7 000710   000731 710000 7                  TRA     s:8516

      536     8506
      537     8507    4                    CASE(%ACCOUNT);

      538     8508    4                       VOLACN.ACCT# = OPTIONBLK$->OUT$BLK.SUBLK$(0)->OUT$SYM.TEXT;
              8508                                /* Remember account */

   8508  7 000711   100003 473500                    LDP3    3,,PR1
         7 000712   300004 236100                    LDQ     4,,PR3
         7 000713   000033 772000                    QRL     27
PL6.E3A0      #001=FTX$LABEL File=FTX$LABEL.:E05TSI                              TUE 07/29/97 18:01 Page:80   
         7 000714   000000 621006                    EAX1    0,QL
         7 000715   040000 100540                    MLR     fill='040'O
         7 000716   300004 200011                    ADSC9   4,,PR3                   cn=1,n=*X1
         7 000717   000306 000010 5                  ADSC9   VOLACN                   cn=0,n=8
         7 000720   000731 710000 7                  TRA     s:8516

      539     8509
      540     8510    4                    CASE(%BYPCONCHK);

      541     8511    4                       BYPCONCHK = %YES#;

   8511  7 000721   400000 236003                    LDQ     -131072,DU
         7 000722   000417 756000 5                  STQ     BYPCONCHK
         7 000723   000731 710000 7                  TRA     s:8516

      542     8512
      543     8513    4                    CASE(ELSE);

      544     8514    4                       CALL FTX_ERROR(%PROGRAM_BUG,0);

   8514  7 000724   000007 236000 8                  LDQ     7
         7 000725   200012 756100                    STQ     @ECODE+1,,AUTO
         7 000726   200011 756100                    STQ     9,,AUTO
         7 000727   002433 701000 7                  TSX1    FTX_ERROR
         7 000730   000000 011000                    NOP     0

      545     8515    4                    END;

      546     8516    3                 END;

   8516  7 000731   000506 054000 5                  AOS     OPTIONNUM
         7 000732   001213 470400 5                  LDP0    XUG_GETCMD+1
         7 000733   000001 236100                    LDQ     1,,PR0
         7 000734   000022 772000                    QRL     18
         7 000735   000506 116000 5                  CMPQ    OPTIONNUM
         7 000736   000241 605400 7                  TPNZ    s:8397

PL6.E3A0      #001=FTX$LABEL File=FTX$LABEL.:E05TSI                              TUE 07/29/97 18:01 Page:81   
      547     8517
      548     8518         /***
      549     8519          *** ACCOUNT must be specified if ACCESS is.
      550     8520          ***/
      551     8521
      552     8522    2              IF OPTIONSPECIFIED(%INACC) AND NOT OPTIONSPECIFIED(%ACCOUNT) THEN

   8522  7 000737   000507 236000 5                  LDQ     OPTIONSPECIFIED
         7 000740   000200 316003                    CANQ    128,DU
         7 000741   000752 600000 7                  TZE     s:8529
         7 000742   000020 316003                    CANQ    16,DU
         7 000743   000752 601000 7                  TNZ     s:8529

      553     8523    2                 CALL FTX_ERROR(%NO_ACCOUNT_ACCESS,-1);

   8523  7 000744   000001 236000 8                  LDQ     1
         7 000745   200012 756100                    STQ     @ECODE+1,,AUTO
         7 000746   000020 236000 8                  LDQ     16
         7 000747   200011 756100                    STQ     9,,AUTO
         7 000750   002433 701000 7                  TSX1    FTX_ERROR
         7 000751   000000 011000                    NOP     0

      554     8524
      555     8525         /***
      556     8526          *** Must specify a PLATLIST when labelling optical disk.
      557     8527          ***/
      558     8528
      559     8529    2              IF COMMAND = %ODLABEL_COMMAND OR COMMAND = %ODSEQUEN_COMMAND THEN

   8529  7 000752   000421 235000 5                  LDA     COMMAND
         7 000753   000005 115007                    CMPA    5,DL
         7 000754   000757 600000 7                  TZE     s:8530
         7 000755   000003 115007                    CMPA    3,DL
         7 000756   000772 601000 7                  TNZ     s:8538

      560     8530    3                 IF NOT OPTIONSPECIFIED(%PLATLIST) THEN DO;

PL6.E3A0      #001=FTX$LABEL File=FTX$LABEL.:E05TSI                              TUE 07/29/97 18:01 Page:82   
   8530  7 000757   000507 236000 5                  LDQ     OPTIONSPECIFIED
         7 000760   000004 316003                    CANQ    4,DU
         7 000761   000772 601000 7                  TNZ     s:8538

      561     8531    3                    CALL FTX_ERROR(%NO_OD_PLATLIST,-1);

   8531  7 000762   000001 236000 8                  LDQ     1
         7 000763   200012 756100                    STQ     @ECODE+1,,AUTO
         7 000764   000021 236000 8                  LDQ     17
         7 000765   200011 756100                    STQ     9,,AUTO
         7 000766   002433 701000 7                  TSX1    FTX_ERROR
         7 000767   000000 011000                    NOP     0

      562     8532    3                    RETURN;

   8532  7 000770   200004 221300                    LDX1  ! 4,,AUTO
         7 000771   000001 702211                    TSX2  ! 1,X1

      563     8533    3                    END;
      564     8534         /***
      565     8535          *** If no input specified, assume 1 TAPE.
      566     8536          ***/
      567     8537
      568     8538    3              IF NUMSNSPECS < 1 THEN DO;

   8538  7 000772   000502 236000 5                  LDQ     NUMSNSPECS
         7 000773   001015 605400 7                  TPNZ    s:8552

      569     8539    4                 IF OPTIONSPECIFIED(%NUMTAPES) THEN DO; /* Didn't specify any    */

   8539  7 000774   000507 236000 5                  LDQ     OPTIONSPECIFIED
         7 000775   000002 316003                    CANQ    2,DU
         7 000776   001007 600000 7                  TZE     s:8543

      570     8540    4                    CALL FTX_ERROR(%AT_LEAST_1,-1);

   8540  7 000777   000001 236000 8                  LDQ     1
PL6.E3A0      #001=FTX$LABEL File=FTX$LABEL.:E05TSI                              TUE 07/29/97 18:01 Page:83   
         7 001000   200012 756100                    STQ     @ECODE+1,,AUTO
         7 001001   000022 236000 8                  LDQ     18
         7 001002   200011 756100                    STQ     9,,AUTO
         7 001003   002433 701000 7                  TSX1    FTX_ERROR
         7 001004   000000 011000                    NOP     0

      571     8541    4                    RETURN;

   8541  7 001005   200004 221300                    LDX1  ! 4,,AUTO
         7 001006   000001 702211                    TSX2  ! 1,X1

      572     8542    4                    END;
      573     8543    3                 SNSPECS.NAMED(0) = %NO#;

   8543  7 001007   000031 236000 xsym               LDQ     B_VECTNIL+25
         7 001010   000543 356000 5                  ANSQ    SNSPECS

      574     8544    3                 SNSPECS.NUMNOTNAMED(0) = 1;

   8544  7 001011   000001 220003                    LDX0    1,DU
         7 001012   000543 440000 5                  SXL0    SNSPECS

      575     8545    3                 NUMSNSPECS = 1;

   8545  7 001013   000001 235007                    LDA     1,DL
         7 001014   000502 755000 5                  STA     NUMSNSPECS

      576     8546    3                 END;

      577     8547
      578     8548         /***
      579     8549          *** Only one input volume can be specified for LABEL command.
      580     8550          ***/
      581     8551
      582     8552    3              IF COMMAND ~= %SCRATCH_COMMAND THEN DO;

   8552  7 001015   000421 235000 5                  LDA     COMMAND
PL6.E3A0      #001=FTX$LABEL File=FTX$LABEL.:E05TSI                              TUE 07/29/97 18:01 Page:84   
         7 001016   000007 115007                    CMPA    7,DL
         7 001017   001117 600000 7                  TZE     s:8582

      583     8553    4                 IF COMMAND = %LABEL_COMMAND OR COMMAND = %ODLABEL_COMMAND THEN DO;

   8553  7 001020   000004 115007                    CMPA    4,DL
         7 001021   001024 600000 7                  TZE     s:8554
         7 001022   000005 115007                    CMPA    5,DL
         7 001023   001055 601000 7                  TNZ     s:8563

      584     8554    4                    IF NUMSNSPECS > 1      /* Too many specs                     */

   8554  7 001024   000502 236000 5                  LDQ     NUMSNSPECS
         7 001025   000001 116007                    CMPQ    1,DL
         7 001026   001046 605400 7                  TPNZ    s:8559
         7 001027   000543 234000 5                  SZN     SNSPECS
         7 001030   001041 605000 7                  TPL     s:8554+13
         7 001031   000543 236000 5                  LDQ     SNSPECS
         7 001032   777777 376007                    ANQ     -1,DL
         7 001033   200016 756100                    STQ     @RPOS+4,,AUTO
         7 001034   000543 236000 5                  LDQ     SNSPECS
         7 001035   000022 772000                    QRL     18
         7 001036   377777 376007                    ANQ     131071,DL
         7 001037   200016 116100                    CMPQ    @RPOS+4,,AUTO
         7 001040   001046 601000 7                  TNZ     s:8559
         7 001041   000543 234000 5                  SZN     SNSPECS
         7 001042   001117 604000 7                  TMI     s:8582
         7 001043   000543 720000 5                  LXL0    SNSPECS
         7 001044   000002 100003                    CMPX0   2,DU
         7 001045   001117 602000 7                  TNC     s:8582

      585     8555    4                        OR (SNSPECS.NAMED(0) /* More than 1 named volume         */
      586     8556    4                        AND SNSPECS.FIRSTNAMEX(0) ~= SNSPECS.LASTNAMEX(0) )
      587     8557    4                        OR (NOT SNSPECS.NAMED(0) /* More than 1 unnamed volume   */
      588     8558    5                        AND SNSPECS.NUMNOTNAMED(0) > 1) THEN DO;
              8558                                 /* More than 1 specified */

PL6.E3A0      #001=FTX$LABEL File=FTX$LABEL.:E05TSI                              TUE 07/29/97 18:01 Page:85   
      589     8559    5                       CALL FTX_ERROR(%AT_MOST_1,-1);

   8559  7 001046   000001 236000 8                  LDQ     1
         7 001047   200012 756100                    STQ     @ECODE+1,,AUTO
         7 001050   000023 236000 8                  LDQ     19
         7 001051   200011 756100                    STQ     9,,AUTO
         7 001052   002433 701000 7                  TSX1    FTX_ERROR
         7 001053   000000 011000                    NOP     0

      590     8560    5                       END;

      591     8561    4                    END;

   8561  7 001054   001117 710000 7                  TRA     s:8582

      592     8562    4                 ELSE DO;                  /* Sequential command                 */

      593     8563    5                    IF PLACESTART = -1 THEN DO; /* Not specified                 */

   8563  7 001055   000536 236000 5                  LDQ     PLACESTART
         7 001056   000027 116000 xsym               CMPQ    B_VECTNIL+23
         7 001057   001077 601000 7                  TNZ     s:8569

      594     8564    5                       PLACESTART = SNBLANKX + 1;

   8564  7 001060   000541 235000 5                  LDA     SNBLANKX
         7 001061   000001 035007                    ADLA    1,DL
         7 001062   000536 755000 5                  STA     PLACESTART

      595     8565    5                       PLACESIZE = LENGTHC(VOLSN.SN#(0)) - PLACESTART + 1;

   8565  7 001063   000027 675000 xsym               ERA     B_VECTNIL+23
         7 001064   000010 035007                    ADLA    8,DL
         7 001065   000535 755000 5                  STA     PLACESIZE

      596     8566    5                       IF PLACESTART > 6 THEN /* No room for number              */

PL6.E3A0      #001=FTX$LABEL File=FTX$LABEL.:E05TSI                              TUE 07/29/97 18:01 Page:86   
   8566  7 001066   000536 236000 5                  LDQ     PLACESTART
         7 001067   000006 116007                    CMPQ    6,DL
         7 001070   001077 604400 7                  TMOZ    s:8569

      597     8567    5                          CALL FTX_ERROR(%NO_NUM_ROOM,-1);

   8567  7 001071   000001 236000 8                  LDQ     1
         7 001072   200012 756100                    STQ     @ECODE+1,,AUTO
         7 001073   000024 236000 8                  LDQ     20
         7 001074   200011 756100                    STQ     9,,AUTO
         7 001075   002433 701000 7                  TSX1    FTX_ERROR
         7 001076   000000 011000                    NOP     0

      598     8568    5                       END;

      599     8569    4                    PLACESTART = PLACESTART - 1; /* Change to index              */

   8569  7 001077   000001 336007                    LCQ     1,DL
         7 001100   000536 056000 5                  ASQ     PLACESTART

      600     8570    5                   IF PLACESTART > SNBLANKX THEN DO; /* Don't create sn with blanks */

   8570  7 001101   000536 236000 5                  LDQ     PLACESTART
         7 001102   000541 116000 5                  CMPQ    SNBLANKX
         7 001103   001114 604400 7                  TMOZ    s:8574

      601     8571    5                       CALL FTX_ERROR(%BLANK_IN_OUT_SN,-1);

   8571  7 001104   000001 236000 8                  LDQ     1
         7 001105   200012 756100                    STQ     @ECODE+1,,AUTO
         7 001106   000025 236000 8                  LDQ     21
         7 001107   200011 756100                    STQ     9,,AUTO
         7 001110   002433 701000 7                  TSX1    FTX_ERROR
         7 001111   000000 011000                    NOP     0

      602     8572    5                       RETURN;

PL6.E3A0      #001=FTX$LABEL File=FTX$LABEL.:E05TSI                              TUE 07/29/97 18:01 Page:87   
   8572  7 001112   200004 221300                    LDX1  ! 4,,AUTO
         7 001113   000001 702211                    TSX2  ! 1,X1

      603     8573    5                       END;
      604     8574    4                    STARTNUM = STARTNUM - INCNUM; /* Set initial start number    */

   8574  7 001114   000744 236000 5                  LDQ     STARTNUM
         7 001115   000442 136000 5                  SBLQ    INCNUM
         7 001116   000744 756000 5                  STQ     STARTNUM

      605     8575    4                    END;

      606     8576    3                 END;

      607     8577
      608     8578         /***
      609     8579          *** Don't execute command if error.
      610     8580          ***/
      611     8581
      612     8582    2              IF BRKFLAG OR CMNDERROR THEN

   8582  7 001117   000416 234000 5                  SZN     BRKFLAG
         7 001120   001123 604000 7                  TMI     s:8583
         7 001121   000420 234000 5                  SZN     CMNDERROR
         7 001122   001125 605000 7                  TPL     s:8589

      613     8583    2                 RETURN;

   8583  7 001123   200004 221300                    LDX1  ! 4,,AUTO
         7 001124   000001 702211                    TSX2  ! 1,X1

      614     8584
      615     8585         /***
      616     8586          *** Ready to label tapes.
      617     8587          ***/
      618     8588
      619     8589    2              SPEC = 0;                    /* Start at first input spec          */
PL6.E3A0      #001=FTX$LABEL File=FTX$LABEL.:E05TSI                              TUE 07/29/97 18:01 Page:88   

   8589  7 001125   000743 450000 5                  STZ     SPEC

      620     8590    2              INSEQUENCE = %NO#;           /* Not known to be in sequence        */

   8590  7 001126   000443 450000 5                  STZ     INSEQUENCE

      621     8591    2              OBUFSIZE = 0;                /* Nothing in output buffer           */

   8591  7 001127   000503 450000 5                  STZ     OBUFSIZE

      622     8592    2              OBUFX = 0;

   8592  7 001130   000504 450000 5                  STZ     OBUFX

      623     8593    2              OUTBUF = ' ';                /* Blank output buffer                */

   8593  7 001131   040000 100400                    MLR     fill='040'O
         7 001132   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         7 001133   000511 000120 5                  ADSC9   OUTBUF                   cn=0,n=80

      624     8594    3              DO CASE(COMMAND);

   8594  7 001134   000421 235000 5                  LDA     COMMAND
         7 001135   000010 115007                    CMPA    8,DL
         7 001136   001140 602005 7                  TNC     s:8594+4,AL
         7 001137   001210 710000 7                  TRA     DONESEQ
         7 001140   001210 710000 7                  TRA     DONESEQ
         7 001141   001210 710000 7                  TRA     DONESEQ
         7 001142   001162 710000 7                  TRA     s:8603
         7 001143   001171 710000 7                  TRA     s:8609
         7 001144   001150 710000 7                  TRA     s:8596
         7 001145   001155 710000 7                  TRA     s:8599
         7 001146   001210 710000 7                  TRA     DONESEQ
         7 001147   001200 710000 7                  TRA     s:8614

      625     8595    3                 CASE(%LABEL_COMMAND);
PL6.E3A0      #001=FTX$LABEL File=FTX$LABEL.:E05TSI                              TUE 07/29/97 18:01 Page:89   

      626     8596    3                    CALL FTX_GEN_NEXT_IN_SN ALTRET(DONESEQ);

   8596  7 001150   002246 701000 7                  TSX1    FTX_GEN_NEXT_IN_SN
         7 001151   001210 702000 7                  TSX2    DONESEQ

      627     8597    3                    CALL FTX_LABEL_TAPE ALTRET(DONESEQ);

   8597  7 001152   001226 701000 7                  TSX1    FTX_LABEL_TAPE
         7 001153   001210 702000 7                  TSX2    DONESEQ
         7 001154   001210 710000 7                  TRA     DONESEQ

      628     8598    3                 CASE(%ODLABEL_COMMAND);

      629     8599    3                    CALL FTX_GEN_NEXT_IN_SN ALTRET(DONESEQ);

   8599  7 001155   002246 701000 7                  TSX1    FTX_GEN_NEXT_IN_SN
         7 001156   001210 702000 7                  TSX2    DONESEQ

      630     8600    3                    CALL FTX_LABEL_OD ALTRET(DONESEQ);

   8600  7 001157   001461 701000 7                  TSX1    FTX_LABEL_OD
         7 001160   001210 702000 7                  TSX2    DONESEQ
         7 001161   001210 710000 7                  TRA     DONESEQ

      631     8601    3                 CASE(%SEQUENTIAL_COMMAND);

      632     8602    4                    DO WHILE('1'B);

      633     8603    4                       CALL FTX_GEN_NEXT_OUT_SN ALTRET(DONESEQ);

   8603  7 001162   002161 701000 7                  TSX1    FTX_GEN_NEXT_OUT_SN
         7 001163   001210 702000 7                  TSX2    DONESEQ

      634     8604    4                       CALL FTX_GEN_NEXT_IN_SN ALTRET(DONESEQ);

   8604  7 001164   002246 701000 7                  TSX1    FTX_GEN_NEXT_IN_SN
PL6.E3A0      #001=FTX$LABEL File=FTX$LABEL.:E05TSI                              TUE 07/29/97 18:01 Page:90   
         7 001165   001210 702000 7                  TSX2    DONESEQ

      635     8605    4                       CALL FTX_LABEL_TAPE ALTRET(DONESEQ);

   8605  7 001166   001226 701000 7                  TSX1    FTX_LABEL_TAPE
         7 001167   001210 702000 7                  TSX2    DONESEQ

      636     8606    4                       END;

   8606  7 001170   001162 710000 7                  TRA     s:8603

      637     8607    3                 CASE(%ODSEQUEN_COMMAND);

      638     8608    4                    DO WHILE('1'B);

      639     8609    4                       CALL FTX_GEN_NEXT_OUT_SN ALTRET(DONESEQ);

   8609  7 001171   002161 701000 7                  TSX1    FTX_GEN_NEXT_OUT_SN
         7 001172   001210 702000 7                  TSX2    DONESEQ

      640     8610    4                       CALL FTX_GEN_NEXT_IN_SN ALTRET(DONESEQ);

   8610  7 001173   002246 701000 7                  TSX1    FTX_GEN_NEXT_IN_SN
         7 001174   001210 702000 7                  TSX2    DONESEQ

      641     8611    4                       CALL FTX_LABEL_OD ALTRET(DONESEQ);

   8611  7 001175   001461 701000 7                  TSX1    FTX_LABEL_OD
         7 001176   001210 702000 7                  TSX2    DONESEQ

      642     8612    4                       END;

   8612  7 001177   001171 710000 7                  TRA     s:8609

      643     8613    3                 CASE(%SCRATCH_COMMAND);

      644     8614    3                    VOLSN.SN#(0) = ' ';    /* No output sn                       */
PL6.E3A0      #001=FTX$LABEL File=FTX$LABEL.:E05TSI                              TUE 07/29/97 18:01 Page:91   

   8614  7 001200   040000 100400                    MLR     fill='040'O
         7 001201   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         7 001202   000311 000006 5                  ADSC9   VOLSN+1                  cn=0,n=6

      645     8615    4                    DO WHILE('1'B);

      646     8616    4                       CALL FTX_GEN_NEXT_IN_SN ALTRET(DONESEQ);

   8616  7 001203   002246 701000 7                  TSX1    FTX_GEN_NEXT_IN_SN
         7 001204   001210 702000 7                  TSX2    DONESEQ

      647     8617    4                       CALL FTX_LABEL_TAPE ALTRET(DONESEQ);

   8617  7 001205   001226 701000 7                  TSX1    FTX_LABEL_TAPE
         7 001206   001210 702000 7                  TSX2    DONESEQ

      648     8618    4                       END;

   8618  7 001207   001203 710000 7                  TRA     s:8616

      649     8619    3                 END;

   8611  7 001210                       DONESEQ      null
      650     8620
      651     8621    2   DONESEQ:   ;
      652     8622    2              CALL FTX_DUMP_BUF;

   8622  7 001210   001700 701000 7                  TSX1    FTX_DUMP_BUF
         7 001211   000000 011000                    NOP     0

      653     8623    2              CALL BINCHAR( FOUR_CHARS, NUMLABELED );

   8623  7 001212   000000 301400                    BTD
         7 001213   000474 000004 5                  NDSC9   NUMLABELED               cn=0,s=lsgnf,sf=0,n=4
         7 001214   000431 030004 5                  NDSC9   FOUR_CHARS               cn=0,s=nosgn,sf=0,n=4

PL6.E3A0      #001=FTX$LABEL File=FTX$LABEL.:E05TSI                              TUE 07/29/97 18:01 Page:92   
      654     8624    2              CALL EDITCHAR( NUMLBLMSG.NUMLBL, , , NO3LEADINGZS, FOUR_CHARS );

   8624  7 001215   000000 024400                    MVNE
         7 001216   000431 030004 5                  NDSC9   FOUR_CHARS               cn=0,s=nosgn,sf=0,n=4
         7 001217   000003 000003 6                  ADSC9   NO3LEADINGZS             cn=0,n=3
         7 001220   000475 200004 5                  ADSC9   NUMLBLMSG                cn=1,n=4

      655     8625    2              CALL M$WRITE( TELNUMLBL );

   8625  7 001221   001612 630400 5                  EPPR0   TELNUMLBL
         7 001222   040001 713400                    CLIMB   write
         7 001223   401400 401760                    pmme    nvectors=4

      656     8626
      657     8627    2              RETURN;

   8627  7 001224   200004 221300                    LDX1  ! 4,,AUTO
         7 001225   000001 702211                    TSX2  ! 1,X1

      658     8628
      659     8629    2      END FTX_SEQ_LBL_OPTIONS;
      660     8630        /********************************************************************/
      661     8631        %EJECT;
PL6.E3A0      #001=FTX$LABEL File=FTX$LABEL.:E05TSI                              TUE 07/29/97 18:01 Page:93   
      662     8632        /********************************************************************/
      663     8633    1   FTX_LABEL_TAPE: PROC ALTRET;

   8633  7 001226   200006 741300       FTX_LABEL_T* STX1  ! 6,,AUTO

      664     8634        /*F*     NAME: FTX_LABEL_TAPE
      665     8635                 PURPOSE: Labels tape volume and does error checking.
      666     8636         ***/
      667     8637
      668     8638        /********************/
      669     8639
      670     8640         /***
      671     8641          *** To open the tape, turn on FMSEC if user would have it on due
      672     8642          *** to JIT.PRIV.JOB regardless of JIT.PRIV.PRC.  Open the volume.
      673     8643          *** Turn off FMSEC do make sure user can't read (as commands) or
      674     8644          *** write (as listing or diagnostic output) any files which couldn't
      675     8645          *** ordinarily be accessed.
      676     8646          ***/
      677     8647
      678     8648    2              IF NOT FMSEC THEN CALL M$SPRIV( SWITCHFMSEC );

   8648  7 001227   000430 235000 5                  LDA     FMSEC
         7 001230   001234 601000 7                  TNZ     s:8649

   8648  7 001231   001606 630400 5                  EPPR0   SWITCHFMSEC
         7 001232   020012 713400                    CLIMB   8202
         7 001233   400000 401760                    pmme    nvectors=1

      679     8649    3              IF BYPCONCHK AND DENSITY ~= 0 THEN DO;

   8649  7 001234   000417 234000 5                  SZN     BYPCONCHK
         7 001235   001247 605000 7                  TPL     s:8654
         7 001236   000751 235000 5                  LDA     DENSITY
         7 001237   001247 600000 7                  TZE     s:8654

      680     8650    3                 OPENCREATELBL.V.DENSITY# = DENSITY;

PL6.E3A0      #001=FTX$LABEL File=FTX$LABEL.:E05TSI                              TUE 07/29/97 18:01 Page:94   
   8650  7 001240   000751 236000 5                  LDQ     DENSITY
         7 001241   001352 552004 5                  STBQ    OPENCREATELBL+54,'04'O

      681     8651    3                 CALL M$OPEN(OPENCREATELBL) ALTRET(OPNERR);

   8651  7 001242   001264 630400 5                  EPPR0   OPENCREATELBL
         7 001243   450000 713400                    CLIMB   alt,open
         7 001244   410400 401760                    pmme    nvectors=18
         7 001245   001421 702000 7                  TSX2    OPNERR

      682     8652    3                 END;

   8652  7 001246   001253 710000 7                  TRA     s:8655

      683     8653    2              ELSE
      684     8654    2                 CALL M$OPEN( OPENLBL ) ALTRET( OPNERR );

   8654  7 001247   001356 630400 5                  EPPR0   OPENLBL
         7 001250   450000 713400                    CLIMB   alt,open
         7 001251   410400 401760                    pmme    nvectors=18
         7 001252   001421 702000 7                  TSX2    OPNERR

      685     8655    2              IF NOT FMSEC THEN CALL M$RPRIV( SWITCHFMSEC );

   8655  7 001253   000430 235000 5                  LDA     FMSEC
         7 001254   001260 601000 7                  TNZ     s:8663

   8655  7 001255   001606 630400 5                  EPPR0   SWITCHFMSEC
         7 001256   020013 713400                    CLIMB   8203
         7 001257   400000 401760                    pmme    nvectors=1

      686     8656
      687     8657         /***
      688     8658          *** If bypass content check, use canned label.  Otherwise,
      689     8659          *** read the VOL1 label to determine tape type and previous
      690     8660          *** serial number.
      691     8661          ***/
PL6.E3A0      #001=FTX$LABEL File=FTX$LABEL.:E05TSI                              TUE 07/29/97 18:01 Page:95   
      692     8662
      693     8663    2              IF BYPCONCHK THEN

   8663  7 001260   000417 234000 5                  SZN     BYPCONCHK
         7 001261   001266 605000 7                  TPL     s:8666

      694     8664    2                 PREVSN = '******';

   8664  7 001262   040000 100400                    MLR     fill='040'O
         7 001263   000421 000006 6                  ADSC9   ERMSG+248                cn=0,n=6
         7 001264   000537 000006 5                  ADSC9   PREVSN                   cn=0,n=6
         7 001265   001324 710000 7                  TRA     s:8681

      695     8665    3              ELSE DO;

      696     8666    3                 CALL FTX_READVOL1 ALTRET( RDERR );

   8666  7 001266   002320 701000 7                  TSX1    FTX_READVOL1
         7 001267   001271 702000 7                  TSX2    RDERR

      697     8667    4                 DO WHILE('0'B);

   8667  7 001270   001305 710000 7                  TRA     s:8673

   8651  7 001271                       RDERR        null
      698     8668    4   RDERR:           ;
      699     8669    4                    N = B$TCB$->B$TCB.ALT$->B$ALT.ERR.CODE;

   8669  7 001271   000000 470400 xsym               LDP0    B$TCB$
         7 001272   000000 471500                    LDP1    0,,PR0
         7 001273   100102 236100                    LDQ     66,,PR1
         7 001274   000003 772000                    QRL     3
         7 001275   037777 376007                    ANQ     16383,DL
         7 001276   000472 756000 5                  STQ     N

      700     8670    4                    IF N ~= %E$EOF AND N ~= %E$BLNKTP AND N ~= %E$IOERR THEN

PL6.E3A0      #001=FTX$LABEL File=FTX$LABEL.:E05TSI                              TUE 07/29/97 18:01 Page:96   
   8670  7 001277   000006 116007                    CMPQ    6,DL
         7 001300   001305 600000 7                  TZE     s:8673
         7 001301   000005 116007                    CMPQ    5,DL
         7 001302   001305 600000 7                  TZE     s:8673
         7 001303   000010 116007                    CMPQ    8,DL
         7 001304   001425 601000 7                  TNZ     LBLERR

      701     8671    4                       GOTO LBLERR;
      702     8672    4                    END;

      703     8673    4                 DO CASE(VOLUME_TYPE);

   8673  7 001305   000752 235000 5                  LDA     VOLUME_TYPE
         7 001306   000004 115007                    CMPA    4,DL
         7 001307   001311 602005 7                  TNC     s:8673+4,AL
         7 001310   001324 710000 7                  TRA     s:8681
         7 001311   001315 710000 7                  TRA     s:8675
         7 001312   001315 710000 7                  TRA     s:8675
         7 001313   001321 710000 7                  TRA     s:8677
         7 001314   001321 710000 7                  TRA     s:8677

      704     8674    4                    CASE(%ASCII_VOL,%EBCDIC_VOL);

      705     8675    4                       PREVSN = FT$VOL1.SN;

   8675  7 001315   040000 100400                    MLR     fill='040'O
         7 001316   000447 000006 5                  ADSC9   LBLBUF+1                 cn=0,n=6
         7 001317   000537 000006 5                  ADSC9   PREVSN                   cn=0,n=6
         7 001320   001324 710000 7                  TRA     s:8681

      706     8676    4                    CASE(%UNKNOWN_VOL,%PO_VOL);

      707     8677    4                       PREVSN = ' ';

   8677  7 001321   040000 100400                    MLR     fill='040'O
         7 001322   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         7 001323   000537 000006 5                  ADSC9   PREVSN                   cn=0,n=6
PL6.E3A0      #001=FTX$LABEL File=FTX$LABEL.:E05TSI                              TUE 07/29/97 18:01 Page:97   

      708     8678    4                    END;

      709     8679    3                 END;

      710     8680
      711     8681    3              IF BRKFLAG THEN DO;          /* Finish labelling                   */

   8681  7 001324   000416 234000 5                  SZN     BRKFLAG
         7 001325   001334 605000 7                  TPL     s:8691

      712     8682    3                 CALL M$CLOSE( CLSREMLBL ) ALTRET( MONERR );

   8682  7 001326   001000 630400 5                  EPPR0   CLSREMLBL
         7 001327   450001 713400                    CLIMB   alt,close
         7 001330   406000 401760                    pmme    nvectors=13
         7 001331   001455 702000 7                  TSX2    MONERR

      713     8683    3                 ALTRETURN;

   8683  7 001332   200006 221300                    LDX1  ! 6,,AUTO
         7 001333   000000 702211                    TSX2  ! 0,X1

      714     8684    3                 END;
      715     8685
      716     8686         /***
      717     8687          *** If DENSITY specified, close tape (rewind) and open with
      718     8688          *** proper density at BOT.
      719     8689          ***/
      720     8690
      721     8691    3              IF ~BYPCONCHK AND DENSITY ~= 0 THEN DO;

   8691  7 001334   000417 236000 5                  LDQ     BYPCONCHK
         7 001335   400000 376003                    ANQ     -131072,DU
         7 001336   400000 676003                    ERQ     -131072,DU
         7 001337   001366 600000 7                  TZE     s:8698
         7 001340   000751 235000 5                  LDA     DENSITY
PL6.E3A0      #001=FTX$LABEL File=FTX$LABEL.:E05TSI                              TUE 07/29/97 18:01 Page:98   
         7 001341   001366 600000 7                  TZE     s:8698

      722     8692    3                 CALL M$CLOSE( CLSREWLBL ) ALTRET( MONERR );

   8692  7 001342   001036 630400 5                  EPPR0   CLSREWLBL
         7 001343   450001 713400                    CLIMB   alt,close
         7 001344   406000 401760                    pmme    nvectors=13
         7 001345   001455 702000 7                  TSX2    MONERR

      723     8693    3                 OPENCREATELBL.V.DENSITY# = DENSITY;

   8693  7 001346   000751 236000 5                  LDQ     DENSITY
         7 001347   001352 552004 5                  STBQ    OPENCREATELBL+54,'04'O

      724     8694    3                 IF NOT FMSEC THEN CALL M$SPRIV( SWITCHFMSEC );

   8694  7 001350   000430 235000 5                  LDA     FMSEC
         7 001351   001355 601000 7                  TNZ     s:8695

   8694  7 001352   001606 630400 5                  EPPR0   SWITCHFMSEC
         7 001353   020012 713400                    CLIMB   8202
         7 001354   400000 401760                    pmme    nvectors=1

      725     8695    3                 CALL M$OPEN( OPENCREATELBL ) ALTRET( OPNERR );

   8695  7 001355   001264 630400 5                  EPPR0   OPENCREATELBL
         7 001356   450000 713400                    CLIMB   alt,open
         7 001357   410400 401760                    pmme    nvectors=18
         7 001360   001421 702000 7                  TSX2    OPNERR

      726     8696    3                 IF NOT FMSEC THEN CALL M$RPRIV( SWITCHFMSEC );

   8696  7 001361   000430 235000 5                  LDA     FMSEC
         7 001362   001366 601000 7                  TNZ     s:8698

   8696  7 001363   001606 630400 5                  EPPR0   SWITCHFMSEC
         7 001364   020013 713400                    CLIMB   8203
PL6.E3A0      #001=FTX$LABEL File=FTX$LABEL.:E05TSI                              TUE 07/29/97 18:01 Page:99   
         7 001365   400000 401760                    pmme    nvectors=1

      727     8697    3                 END;

      728     8698    2              IF COMMAND ~= %SCRATCH_COMMAND THEN

   8698  7 001366   000421 235000 5                  LDA     COMMAND
         7 001367   000007 115007                    CMPA    7,DL
         7 001370   001374 600000 7                  TZE     s:8701

      729     8699    2                 CALL FTX_WRITVOL1 ALTRET( LBLERR );

   8699  7 001371   001757 701000 7                  TSX1    FTX_WRITVOL1
         7 001372   001425 702000 7                  TSX2    LBLERR
         7 001373   001411 710000 7                  TRA     s:8706

      730     8700    3              ELSE DO;

      731     8701    3                 CALL M$REW( REWLBL ) ALTRET( LBLERR );

   8701  7 001374   001564 630400 5                  EPPR0   REWLBL
         7 001375   440006 713400                    CLIMB   alt,+16390
         7 001376   400000 401760                    pmme    nvectors=1
         7 001377   001425 702000 7                  TSX2    LBLERR

      732     8702    3                 CALL M$WEOF( WEOFLBL ) ALTRET( LBLERR );

   8702  7 001400   001626 630400 5                  EPPR0   WEOFLBL
         7 001401   440007 713400                    CLIMB   alt,+16391
         7 001402   400000 401760                    pmme    nvectors=1
         7 001403   001425 702000 7                  TSX2    LBLERR

      733     8703    3                 NUMLABELED = NUMLABELED + 1;

   8703  7 001404   000474 054000 5                  AOS     NUMLABELED

      734     8704    3                 CALL M$WEOF( WEOFLBL ) ALTRET( LBLERR );
PL6.E3A0      #001=FTX$LABEL File=FTX$LABEL.:E05TSI                              TUE 07/29/97 18:01 Page:100  

   8704  7 001405   001626 630400 5                  EPPR0   WEOFLBL
         7 001406   440007 713400                    CLIMB   alt,+16391
         7 001407   400000 401760                    pmme    nvectors=1
         7 001410   001425 702000 7                  TSX2    LBLERR

      735     8705    3                 END;

      736     8706    2              CALL M$CLOSE( CLSREMLBL ) ALTRET( MONERR );

   8706  7 001411   001000 630400 5                  EPPR0   CLSREMLBL
         7 001412   450001 713400                    CLIMB   alt,close
         7 001413   406000 401760                    pmme    nvectors=13
         7 001414   001455 702000 7                  TSX2    MONERR

      737     8707
      738     8708    2              CALL FTX_LIST_TAPE_LABELLED;

   8708  7 001415   001555 701000 7                  TSX1    FTX_LIST_TAPE_LABELLED
         7 001416   000000 011000                    NOP     0

      739     8709
      740     8710    2              RETURN;

   8710  7 001417   200006 221300                    LDX1  ! 6,,AUTO
         7 001420   000001 702211                    TSX2  ! 1,X1

   8705  7 001421                       OPNERR       null
      741     8711
      742     8712    2   OPNERR:    ;
      743     8713    2              CALL FTX_RPTERR;

   8713  7 001421   002404 701000 7                  TSX1    FTX_RPTERR
         7 001422   000000 011000                    NOP     0

      744     8714    2              ALTRETURN;

PL6.E3A0      #001=FTX$LABEL File=FTX$LABEL.:E05TSI                              TUE 07/29/97 18:01 Page:101  
   8714  7 001423   200006 221300                    LDX1  ! 6,,AUTO
         7 001424   000000 702211                    TSX2  ! 0,X1

   8705  7 001425                       LBLERR       null
      745     8715
      746     8716    2   LBLERR:    ;
      747     8717    2              N = B$TCB$->B$TCB.ALT$->B$ALT.ERR.CODE;

   8717  7 001425   000000 470400 xsym               LDP0    B$TCB$
         7 001426   000000 471500                    LDP1    0,,PR0
         7 001427   100102 236100                    LDQ     66,,PR1
         7 001430   000003 772000                    QRL     3
         7 001431   037777 376007                    ANQ     16383,DL
         7 001432   000472 756000 5                  STQ     N

      748     8718    2              CALL FTX_RPTERR;

   8718  7 001433   002404 701000 7                  TSX1    FTX_RPTERR
         7 001434   000000 011000                    NOP     0

      749     8719    3              CALL M$CLOSE( CLSREMLBL ) WHENALTRETURN DO;
              8719                       /* Most likely the same (I/O) error */

   8719  7 001435   001000 630400 5                  EPPR0   CLSREMLBL
         7 001436   450001 713400                    CLIMB   alt,close
         7 001437   406000 401760                    pmme    nvectors=13
         7 001440   001442 702000 7                  TSX2    s:8720
         7 001441   001453 710000 7                  TRA     s:8723

      750     8720    3                 IF N ~= B$TCB$->B$TCB.ALT$->B$ALT.ERR.CODE THEN

   8720  7 001442   000000 470400 xsym               LDP0    B$TCB$
         7 001443   000000 471500                    LDP1    0,,PR0
         7 001444   100102 236100                    LDQ     66,,PR1
         7 001445   000003 772000                    QRL     3
         7 001446   037777 376007                    ANQ     16383,DL
         7 001447   000472 116000 5                  CMPQ    N
PL6.E3A0      #001=FTX$LABEL File=FTX$LABEL.:E05TSI                              TUE 07/29/97 18:01 Page:102  
         7 001450   001453 600000 7                  TZE     s:8723

      751     8721    3                    CALL FTX_RPTERR;       /* Report different error             */

   8721  7 001451   002404 701000 7                  TSX1    FTX_RPTERR
         7 001452   000000 011000                    NOP     0

      752     8722    3                 END;

      753     8723    2              ALTRETURN;

   8723  7 001453   200006 221300                    LDX1  ! 6,,AUTO
         7 001454   000000 702211                    TSX2  ! 0,X1

   8717  7 001455                       MONERR       null
      754     8724
      755     8725    2   MONERR:    ;
      756     8726    2              CALL FTX_RPTERR;

   8726  7 001455   002404 701000 7                  TSX1    FTX_RPTERR
         7 001456   000000 011000                    NOP     0

      757     8727
      758     8728    2   JUSTALT:   ;

   8728  7 001457                       JUSTALT      null
      759     8729    2              ALTRETURN;

   8729  7 001457   200006 221300                    LDX1  ! 6,,AUTO
         7 001460   000000 702211                    TSX2  ! 0,X1

      760     8730
      761     8731    2      END FTX_LABEL_TAPE;
      762     8732        /********************************************************************/
      763     8733        %EJECT;
PL6.E3A0      #001=FTX$LABEL File=FTX$LABEL.:E05TSI                              TUE 07/29/97 18:01 Page:103  
      764     8734        /********************************************************************/
      765     8735    1   FTX_LABEL_OD: PROC ALTRET;

   8735  7 001461   200006 741300       FTX_LABEL_OD STX1  ! 6,,AUTO

      766     8736        /*F*     NAME: FTX_LABEL_OD
      767     8737                 PURPOSE: Labels optical disk volume and does error checking.
      768     8738         ***/
      769     8739
      770     8740        /********************/
      771     8741
      772     8742         /***
      773     8743          *** To open the optical disk, turn on FMSEC if user would have it on due
      774     8744          *** to JIT.PRIV.JOB regardless of JIT.PRIV.PRC.  Open the volume.
      775     8745          *** Turn off FMSEC do make sure user can't read (as commands) or
      776     8746          *** write (as listing or diagnostic output) any files which couldn't
      777     8747          *** ordinarily be accessed.
      778     8748          ***/
      779     8749
      780     8750    2              IF NOT FMSEC THEN

   8750  7 001462   000430 235000 5                  LDA     FMSEC
         7 001463   001467 601000 7                  TNZ     s:8752

      781     8751    2                 CALL M$SPRIV( SWITCHFMSEC );

   8751  7 001464   001606 630400 5                  EPPR0   SWITCHFMSEC
         7 001465   020012 713400                    CLIMB   8202
         7 001466   400000 401760                    pmme    nvectors=1

      782     8752    2              CALL M$OPEN( OPENOD ) ALTRET( OPNERR );

   8752  7 001467   001450 630400 5                  EPPR0   OPENOD
         7 001470   450000 713400                    CLIMB   alt,open
         7 001471   410400 401760                    pmme    nvectors=18
         7 001472   001515 702000 7                  TSX2    OPNERR

PL6.E3A0      #001=FTX$LABEL File=FTX$LABEL.:E05TSI                              TUE 07/29/97 18:01 Page:104  
      783     8753    2              IF NOT FMSEC THEN

   8753  7 001473   000430 235000 5                  LDA     FMSEC
         7 001474   001500 601000 7                  TNZ     s:8756

      784     8754    2                 CALL M$RPRIV( SWITCHFMSEC );

   8754  7 001475   001606 630400 5                  EPPR0   SWITCHFMSEC
         7 001476   020013 713400                    CLIMB   8203
         7 001477   400000 401760                    pmme    nvectors=1

      785     8755
      786     8756    2              PREVSN = ' ';

   8756  7 001500   040000 100400                    MLR     fill='040'O
         7 001501   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         7 001502   000537 000006 5                  ADSC9   PREVSN                   cn=0,n=6

      787     8757    2              CALL FTX_WRITVOL1OD ALTRET( LBLERR );

   8757  7 001503   002047 701000 7                  TSX1    FTX_WRITVOL1OD
         7 001504   001521 702000 7                  TSX2    LBLERR

      788     8758    2              CALL M$CLOSE( CLSREMLBL ) ALTRET( MONERR );

   8758  7 001505   001000 630400 5                  EPPR0   CLSREMLBL
         7 001506   450001 713400                    CLIMB   alt,close
         7 001507   406000 401760                    pmme    nvectors=13
         7 001510   001551 702000 7                  TSX2    MONERR

      789     8759    2              CALL FTX_LIST_TAPE_LABELLED;

   8759  7 001511   001555 701000 7                  TSX1    FTX_LIST_TAPE_LABELLED
         7 001512   000000 011000                    NOP     0

      790     8760    2              RETURN;

PL6.E3A0      #001=FTX$LABEL File=FTX$LABEL.:E05TSI                              TUE 07/29/97 18:01 Page:105  
   8760  7 001513   200006 221300                    LDX1  ! 6,,AUTO
         7 001514   000001 702211                    TSX2  ! 1,X1

      791     8761
      792     8762    2   OPNERR:    CALL FTX_RPTERR;

   8762  7 001515   002404 701000 7     OPNERR       TSX1    FTX_RPTERR
         7 001516   000000 011000                    NOP     0

      793     8763    2              ALTRETURN;

   8763  7 001517   200006 221300                    LDX1  ! 6,,AUTO
         7 001520   000000 702211                    TSX2  ! 0,X1

      794     8764
      795     8765    2   LBLERR:    N = B$TCB$->B$TCB.ALT$->B$ALT.ERR.CODE;

   8765  7 001521   000000 470400 xsym  LBLERR       LDP0    B$TCB$
         7 001522   000000 471500                    LDP1    0,,PR0
         7 001523   100102 236100                    LDQ     66,,PR1
         7 001524   000003 772000                    QRL     3
         7 001525   037777 376007                    ANQ     16383,DL
         7 001526   000472 756000 5                  STQ     N

      796     8766    2              CALL FTX_RPTERR;

   8766  7 001527   002404 701000 7                  TSX1    FTX_RPTERR
         7 001530   000000 011000                    NOP     0

      797     8767    3              CALL M$CLOSE( CLSREMLBL ) WHENALTRETURN DO;
              8767                       /* Most likely the same (I/O) error */

   8767  7 001531   001000 630400 5                  EPPR0   CLSREMLBL
         7 001532   450001 713400                    CLIMB   alt,close
         7 001533   406000 401760                    pmme    nvectors=13
         7 001534   001536 702000 7                  TSX2    s:8768
         7 001535   001547 710000 7                  TRA     s:8771
PL6.E3A0      #001=FTX$LABEL File=FTX$LABEL.:E05TSI                              TUE 07/29/97 18:01 Page:106  

      798     8768    3                 IF N ~= B$TCB$->B$TCB.ALT$->B$ALT.ERR.CODE THEN

   8768  7 001536   000000 470400 xsym               LDP0    B$TCB$
         7 001537   000000 471500                    LDP1    0,,PR0
         7 001540   100102 236100                    LDQ     66,,PR1
         7 001541   000003 772000                    QRL     3
         7 001542   037777 376007                    ANQ     16383,DL
         7 001543   000472 116000 5                  CMPQ    N
         7 001544   001547 600000 7                  TZE     s:8771

      799     8769    3                    CALL FTX_RPTERR;       /* Report different error             */

   8769  7 001545   002404 701000 7                  TSX1    FTX_RPTERR
         7 001546   000000 011000                    NOP     0

      800     8770    3                 END;

      801     8771    2              ALTRETURN;

   8771  7 001547   200006 221300                    LDX1  ! 6,,AUTO
         7 001550   000000 702211                    TSX2  ! 0,X1

      802     8772
      803     8773    2   MONERR:    CALL FTX_RPTERR;

   8773  7 001551   002404 701000 7     MONERR       TSX1    FTX_RPTERR
         7 001552   000000 011000                    NOP     0

      804     8774
      805     8775    2   JUSTALT:   ALTRETURN;

   8775  7 001553   200006 221300       JUSTALT      LDX1  ! 6,,AUTO
         7 001554   000000 702211                    TSX2  ! 0,X1

      806     8776
      807     8777    2      END FTX_LABEL_OD;
PL6.E3A0      #001=FTX$LABEL File=FTX$LABEL.:E05TSI                              TUE 07/29/97 18:01 Page:107  
      808     8778        /********************************************************************/
      809     8779        %EJECT;
PL6.E3A0      #001=FTX$LABEL File=FTX$LABEL.:E05TSI                              TUE 07/29/97 18:01 Page:108  
      810     8780        /********************************************************************/
      811     8781    1   FTX_LIST_TAPE_LABELLED: PROC;

   8781  7 001555   200010 741300       FTX_LIST_TA* STX1  ! 8,,AUTO

      812     8782        /*F*     NAME: FTX_LIST_TAPE_LABELLED
      813     8783                 PURPOSE: Lists tapes as they are labelled.
      814     8784         ***/
      815     8785
      816     8786        /********************/
      817     8787
      818     8788    3              IF TAPESN.SN#(0) = VOLSN.SN#(0) THEN DO; /* Sequence begins/continues */

   8788  7 001556   040000 106400                    CMPC    fill='040'O
         7 001557   000303 000006 5                  ADSC9   TAPESN+1                 cn=0,n=6
         7 001560   000311 000006 5                  ADSC9   VOLSN+1                  cn=0,n=6
         7 001561   001633 601000 7                  TNZ     s:8805

      819     8789    4                 IF PREVSN ~= ' ' THEN DO; /* Tape had different label           */

   8789  7 001562   040000 106400                    CMPC    fill='040'O
         7 001563   000537 000006 5                  ADSC9   PREVSN                   cn=0,n=6
         7 001564   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         7 001565   001614 600000 7                  TZE     s:8795

      820     8790    4                    CALL FTX_DUMP_BUF;

   8790  7 001566   001700 701000 7                  TSX1    FTX_DUMP_BUF
         7 001567   000000 011000                    NOP     0

      821     8791    4                    CALL CONCAT(OUTBUF,VOLSN.SN#(0),'   ','      ','(',PREVSN,')');

   8791  7 001570   040000 100400                    MLR     fill='040'O
         7 001571   000311 000006 5                  ADSC9   VOLSN+1                  cn=0,n=6
         7 001572   000511 000006 5                  ADSC9   OUTBUF                   cn=0,n=6
         7 001573   040000 100400                    MLR     fill='040'O
         7 001574   000423 000003 6                  ADSC9   ERMSG+250                cn=0,n=3
PL6.E3A0      #001=FTX$LABEL File=FTX$LABEL.:E05TSI                              TUE 07/29/97 18:01 Page:109  
         7 001575   000512 400003 5                  ADSC9   OUTBUF+1                 cn=2,n=3
         7 001576   040000 100400                    MLR     fill='040'O
         7 001577   000424 000006 6                  ADSC9   ERMSG+251                cn=0,n=6
         7 001600   000513 200006 5                  ADSC9   OUTBUF+2                 cn=1,n=6
         7 001601   000050 236007                    LDQ     40,DL
         7 001602   000514 552004 5                  STBQ    OUTBUF+3,'04'O
         7 001603   040000 100400                    MLR     fill='040'O
         7 001604   000537 000006 5                  ADSC9   PREVSN                   cn=0,n=6
         7 001605   000515 000006 5                  ADSC9   OUTBUF+4                 cn=0,n=6
         7 001606   040000 100400                    MLR     fill='040'O
         7 001607   000026 000001 8                  ADSC9   22                       cn=0,n=1
         7 001610   000516 400072 5                  ADSC9   OUTBUF+5                 cn=2,n=58

      822     8792    4                    CALL FTX_DUMP_BUF;

   8792  7 001611   001700 701000 7                  TSX1    FTX_DUMP_BUF
         7 001612   000000 011000                    NOP     0

      823     8793    4                    END;

   8793  7 001613   001676 710000 7                  TRA     s:8812

      824     8794    4                 ELSE DO;                  /* May begin or continue sequence     */

      825     8795    4                    IF INSEQUENCE THEN

   8795  7 001614   000443 234000 5                  SZN     INSEQUENCE
         7 001615   001622 605000 7                  TPL     s:8798

      826     8796    4                       LASTSEQSN = VOLSN.SN#(0);

   8796  7 001616   040000 100400                    MLR     fill='040'O
         7 001617   000311 000006 5                  ADSC9   VOLSN+1                  cn=0,n=6
         7 001620   000444 000006 5                  ADSC9   LASTSEQSN                cn=0,n=6
         7 001621   001676 710000 7                  TRA     s:8812

      827     8797    5                    ELSE DO;
PL6.E3A0      #001=FTX$LABEL File=FTX$LABEL.:E05TSI                              TUE 07/29/97 18:01 Page:110  

      828     8798    5                       INSEQUENCE = %YES#; /* Now in sequence                    */

   8798  7 001622   400000 236003                    LDQ     -131072,DU
         7 001623   000443 756000 5                  STQ     INSEQUENCE

      829     8799    5                       FIRSTSEQSN = TAPESN.SN#(0);

   8799  7 001624   040000 100400                    MLR     fill='040'O
         7 001625   000303 000006 5                  ADSC9   TAPESN+1                 cn=0,n=6
         7 001626   000426 000006 5                  ADSC9   FIRSTSEQSN               cn=0,n=6

      830     8800    5                       LASTSEQSN = VOLSN.SN#(0);

   8800  7 001627   040000 100400                    MLR     fill='040'O
         7 001630   000311 000006 5                  ADSC9   VOLSN+1                  cn=0,n=6
         7 001631   000444 000006 5                  ADSC9   LASTSEQSN                cn=0,n=6

      831     8801    5                       END;

      832     8802    4                    END;

      833     8803    3                 END;

   8803  7 001632   001676 710000 7                  TRA     s:8812

      834     8804    3              ELSE DO;                     /* To different labelled tape         */

      835     8805    3                 CALL FTX_DUMP_BUF;

   8805  7 001633   001700 701000 7                  TSX1    FTX_DUMP_BUF
         7 001634   000000 011000                    NOP     0

      836     8806    3                 IF PREVSN ~= ' ' THEN

   8806  7 001635   040000 106400                    CMPC    fill='040'O
         7 001636   000537 000006 5                  ADSC9   PREVSN                   cn=0,n=6
PL6.E3A0      #001=FTX$LABEL File=FTX$LABEL.:E05TSI                              TUE 07/29/97 18:01 Page:111  
         7 001637   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         7 001640   001663 600000 7                  TZE     s:8809

      837     8807    3                   CALL CONCAT(OUTBUF,VOLSN.SN#(0),' < ',TAPESN.SN#(0),'(',PREVSN,')')
              8807                             ;

   8807  7 001641   040000 100400                    MLR     fill='040'O
         7 001642   000311 000006 5                  ADSC9   VOLSN+1                  cn=0,n=6
         7 001643   000511 000006 5                  ADSC9   OUTBUF                   cn=0,n=6
         7 001644   040000 100400                    MLR     fill='040'O
         7 001645   000426 000003 6                  ADSC9   ERMSG+253                cn=0,n=3
         7 001646   000512 400003 5                  ADSC9   OUTBUF+1                 cn=2,n=3
         7 001647   040000 100400                    MLR     fill='040'O
         7 001650   000303 000006 5                  ADSC9   TAPESN+1                 cn=0,n=6
         7 001651   000513 200006 5                  ADSC9   OUTBUF+2                 cn=1,n=6
         7 001652   000050 236007                    LDQ     40,DL
         7 001653   000514 552004 5                  STBQ    OUTBUF+3,'04'O
         7 001654   040000 100400                    MLR     fill='040'O
         7 001655   000537 000006 5                  ADSC9   PREVSN                   cn=0,n=6
         7 001656   000515 000006 5                  ADSC9   OUTBUF+4                 cn=0,n=6
         7 001657   040000 100400                    MLR     fill='040'O
         7 001660   000026 000001 8                  ADSC9   22                       cn=0,n=1
         7 001661   000516 400072 5                  ADSC9   OUTBUF+5                 cn=2,n=58
         7 001662   001674 710000 7                  TRA     s:8810

      838     8808    3                 ELSE
      839     8809    3                    CALL CONCAT(OUTBUF,VOLSN.SN#(0),' < ',TAPESN.SN#(0));

   8809  7 001663   040000 100400                    MLR     fill='040'O
         7 001664   000311 000006 5                  ADSC9   VOLSN+1                  cn=0,n=6
         7 001665   000511 000006 5                  ADSC9   OUTBUF                   cn=0,n=6
         7 001666   040000 100400                    MLR     fill='040'O
         7 001667   000426 000003 6                  ADSC9   ERMSG+253                cn=0,n=3
         7 001670   000512 400003 5                  ADSC9   OUTBUF+1                 cn=2,n=3
         7 001671   040000 100400                    MLR     fill='040'O
         7 001672   000303 000006 5                  ADSC9   TAPESN+1                 cn=0,n=6
         7 001673   000513 200107 5                  ADSC9   OUTBUF+2                 cn=1,n=71
PL6.E3A0      #001=FTX$LABEL File=FTX$LABEL.:E05TSI                              TUE 07/29/97 18:01 Page:112  

      840     8810    3                 CALL FTX_DUMP_BUF;

   8810  7 001674   001700 701000 7                  TSX1    FTX_DUMP_BUF
         7 001675   000000 011000                    NOP     0

      841     8811    3                 END;

      842     8812    2              RETURN;

   8812  7 001676   200010 221300                    LDX1  ! 8,,AUTO
         7 001677   000001 702211                    TSX2  ! 1,X1

      843     8813
      844     8814    2      END FTX_LIST_TAPE_LABELLED;
      845     8815        /********************************************************************/
      846     8816        %EJECT;
PL6.E3A0      #001=FTX$LABEL File=FTX$LABEL.:E05TSI                              TUE 07/29/97 18:01 Page:113  
      847     8817        /********************************************************************/
      848     8818    1   FTX_DUMP_BUF: PROC;

   8818  7 001700   200012 741300       FTX_DUMP_BUF STX1  ! @ECODE+1,,AUTO

      849     8819
      850     8820    3              IF INSEQUENCE THEN DO;       /* Range to dump                      */

   8820  7 001701   000443 234000 5                  SZN     INSEQUENCE
         7 001702   001725 605000 7                  TPL     s:8827

      851     8821    3                 IF FIRSTSEQSN = LASTSEQSN THEN

   8821  7 001703   040000 106400                    CMPC    fill='040'O
         7 001704   000426 000006 5                  ADSC9   FIRSTSEQSN               cn=0,n=6
         7 001705   000444 000006 5                  ADSC9   LASTSEQSN                cn=0,n=6
         7 001706   001713 601000 7                  TNZ     s:8824

      852     8822    3                    CALL CONCAT( OUTBUF, LASTSEQSN );

   8822  7 001707   040000 100400                    MLR     fill='040'O
         7 001710   000444 000006 5                  ADSC9   LASTSEQSN                cn=0,n=6
         7 001711   000511 000120 5                  ADSC9   OUTBUF                   cn=0,n=80
         7 001712   001724 710000 7                  TRA     s:8825

      853     8823    3                 ELSE
      854     8824    3                    CALL CONCAT( OUTBUF, FIRSTSEQSN, ' - ', LASTSEQSN );

   8824  7 001713   040000 100400                    MLR     fill='040'O
         7 001714   000426 000006 5                  ADSC9   FIRSTSEQSN               cn=0,n=6
         7 001715   000511 000006 5                  ADSC9   OUTBUF                   cn=0,n=6
         7 001716   040000 100400                    MLR     fill='040'O
         7 001717   000427 000003 6                  ADSC9   ERMSG+254                cn=0,n=3
         7 001720   000512 400003 5                  ADSC9   OUTBUF+1                 cn=2,n=3
         7 001721   040000 100400                    MLR     fill='040'O
         7 001722   000444 000006 5                  ADSC9   LASTSEQSN                cn=0,n=6
         7 001723   000513 200107 5                  ADSC9   OUTBUF+2                 cn=1,n=71
PL6.E3A0      #001=FTX$LABEL File=FTX$LABEL.:E05TSI                              TUE 07/29/97 18:01 Page:114  

      855     8825    3                 INSEQUENCE = %NO#;

   8825  7 001724   000443 450000 5                  STZ     INSEQUENCE

      856     8826    3                 END;

      857     8827    2              CALL SEARCHR(OBUFSIZE,TEMP,B$SR_NON_BLANK,OUTBUF) ALTRET(JUSTRET);

   8827  7 001725   000000 470400 xsym               LDP0    B$SR_NON_BLANK$
         7 001726   000000 165400                    TCTR
         7 001727   000511 000120 5                  ADSC9   OUTBUF                   cn=0,n=80
         7 001730   000000 000100                    ARG     0,,PR0
         7 001731   000503 000000 5                  ARG     OBUFSIZE
         7 001732   000503 235000 5                  LDA     OBUFSIZE
         7 001733   000033 771000                    ARL     27
         7 001734   000745 755000 5                  STA     TEMP
         7 001735   000503 551040 5                  STBA    OBUFSIZE,'40'O
         7 001736   001755 606400 7                  TTN     JUSTRET
         7 001737   000117 236007                    LDQ     79,DL
         7 001740   000503 156000 5                  SSQ     OBUFSIZE

      858     8828    2              SHOWOUT.BUF_.BOUND = OBUFSIZE;

   8828  7 001741   000503 236000 5                  LDQ     OBUFSIZE
         7 001742   000020 736000                    QLS     16
         7 001743   001576 676000 5                  ERQ     SHOWOUT+4
         7 001744   000034 376000 xsym               ANQ     B_VECTNIL+28
         7 001745   001576 656000 5                  ERSQ    SHOWOUT+4

      859     8829    2              CALL M$WRITE( SHOWOUT );

   8829  7 001746   001572 630400 5                  EPPR0   SHOWOUT
         7 001747   040001 713400                    CLIMB   write
         7 001750   401400 401760                    pmme    nvectors=4

      860     8830    2              OUTBUF = ' ';
PL6.E3A0      #001=FTX$LABEL File=FTX$LABEL.:E05TSI                              TUE 07/29/97 18:01 Page:115  

   8830  7 001751   040000 100400                    MLR     fill='040'O
         7 001752   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         7 001753   000511 000120 5                  ADSC9   OUTBUF                   cn=0,n=80

      861     8831    2              OBUFSIZE = 0;

   8831  7 001754   000503 450000 5                  STZ     OBUFSIZE

   8831  7 001755                       JUSTRET      null
      862     8832
      863     8833    2   JUSTRET:   ;
      864     8834    2              RETURN;

   8834  7 001755   200012 221300                    LDX1  ! @ECODE+1,,AUTO
         7 001756   000001 702211                    TSX2  ! 1,X1

      865     8835
      866     8836    2      END FTX_DUMP_BUF;
      867     8837        /********************************************************************/
      868     8838        %EJECT;
PL6.E3A0      #001=FTX$LABEL File=FTX$LABEL.:E05TSI                              TUE 07/29/97 18:01 Page:116  
      869     8839        /********************************************************************/
      870     8840    1   FTX_WRITVOL1: PROC ALTRET;

   8840  7 001757   200010 741300       FTX_WRITVOL1 STX1  ! 8,,AUTO

      871     8841        /*F*     NAME: FTX_WRITVOL1
      872     8842                 PURPOSE: Write VOL1 label.
      873     8843         ***/
      874     8844
      875     8845        /*********************/
      876     8846
      877     8847    2              FT$BLBL = ' ';

   8847  7 001760   040000 100400                    MLR     fill='040'O
         7 001761   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         7 001762   000446 000120 5                  ADSC9   LBLBUF                   cn=0,n=80

      878     8848    2              FT$VOL1.LABEL_TYPE = 'VOL1';

   8848  7 001763   000430 236000 6                  LDQ     ERMSG+255
         7 001764   000446 756000 5                  STQ     LBLBUF

      879     8849    2              FT$VOL1.SN = VOLSN.SN#(0);

   8849  7 001765   040000 100400                    MLR     fill='040'O
         7 001766   000311 000006 5                  ADSC9   VOLSN+1                  cn=0,n=6
         7 001767   000447 000006 5                  ADSC9   LBLBUF+1                 cn=0,n=6

      880     8850    3              DO CASE(VOLACCESS);

   8850  7 001770   000750 235000 5                  LDA     VOLACCESS
         7 001771   000004 115007                    CMPA    4,DL
         7 001772   001774 602005 7                  TNC     s:8850+4,AL
         7 001773   002005 710000 7                  TRA     s:8856
         7 001774   002005 710000 7                  TRA     s:8856
         7 001775   002005 710000 7                  TRA     s:8856
         7 001776   002000 710000 7                  TRA     s:8852
PL6.E3A0      #001=FTX$LABEL File=FTX$LABEL.:E05TSI                              TUE 07/29/97 18:01 Page:117  
         7 001777   002003 710000 7                  TRA     s:8854

      881     8851    3                 CASE(%IN#);

      882     8852    3                    FT$VOL1.ACCESS = 'I';

   8852  7 002000   111000 236007                    LDQ     37376,DL
         7 002001   000450 552010 5                  STBQ    LBLBUF+2,'10'O
         7 002002   002005 710000 7                  TRA     s:8856

      883     8853    3                 CASE(%NONE#);

      884     8854    3                    FT$VOL1.ACCESS = 'N';

   8854  7 002003   116000 236007                    LDQ     39936,DL
         7 002004   000450 552010 5                  STBQ    LBLBUF+2,'10'O

      885     8855    3                 END;

      886     8856    2              FT$VOL1.ACCOUNT = VOLACN.ACCT#;

   8856  7 002005   040000 100400                    MLR     fill='040'O
         7 002006   000306 000010 5                  ADSC9   VOLACN                   cn=0,n=8
         7 002007   000457 200010 5                  ADSC9   LBLBUF+9                 cn=1,n=8

      887     8857    2              FT$VOL1.SYSTEM_CODE.ID = 'CP-6';

   8857  7 002010   000431 236000 6                  LDQ     ERMSG+256
         7 002011   000454 756000 5                  STQ     LBLBUF+6

      888     8858    2              FT$VOL1.SYSTEM_CODE.VERSION = VLR_SITEINFO.VERSION#;

   8858  7 002012   040000 100400                    MLR     fill='040'O
         7 002013   000400 000004 5                  ADSC9   VLR_SITEINFO+52          cn=0,n=4
         7 002014   000455 000011 5                  ADSC9   LBLBUF+7                 cn=0,n=9

      889     8859    2              FT$VOL1.SYSTEM = 'CP-6';
PL6.E3A0      #001=FTX$LABEL File=FTX$LABEL.:E05TSI                              TUE 07/29/97 18:01 Page:118  

   8859  7 002015   040000 100400                    MLR     fill='040'O
         7 002016   000431 000004 6                  ADSC9   ERMSG+256                cn=0,n=4
         7 002017   000461 200006 5                  ADSC9   LBLBUF+11                cn=1,n=6

      890     8860    2              FT$VOL1.VERSION = '3';

   8860  7 002020   000063 236007                    LDQ     51,DL
         7 002021   000471 552004 5                  STBQ    LBLBUF+19,'04'O

      891     8861
      892     8862    2              CALL M$REW(REWLBL) ALTRET(JUSTALT);

   8862  7 002022   001564 630400 5                  EPPR0   REWLBL
         7 002023   440006 713400                    CLIMB   alt,+16390
         7 002024   400000 401760                    pmme    nvectors=1
         7 002025   002045 702000 7                  TSX2    JUSTALT

      893     8863    2              CALL M$WRITE(WRITLBL) ALTRET(JUSTALT);

   8863  7 002026   001646 630400 5                  EPPR0   WRITLBL
         7 002027   440001 713400                    CLIMB   alt,write
         7 002030   401400 401760                    pmme    nvectors=4
         7 002031   002045 702000 7                  TSX2    JUSTALT

      894     8864    2              NUMLABELED = NUMLABELED + 1; /* One more labelled                  */

   8864  7 002032   000474 054000 5                  AOS     NUMLABELED

      895     8865    2              CALL M$WEOF(WEOFLBL) ALTRET(JUSTALT);

   8865  7 002033   001626 630400 5                  EPPR0   WEOFLBL
         7 002034   440007 713400                    CLIMB   alt,+16391
         7 002035   400000 401760                    pmme    nvectors=1
         7 002036   002045 702000 7                  TSX2    JUSTALT

      896     8866    2              CALL M$WEOF(WEOFLBL) ALTRET(JUSTALT);
PL6.E3A0      #001=FTX$LABEL File=FTX$LABEL.:E05TSI                              TUE 07/29/97 18:01 Page:119  

   8866  7 002037   001626 630400 5                  EPPR0   WEOFLBL
         7 002040   440007 713400                    CLIMB   alt,+16391
         7 002041   400000 401760                    pmme    nvectors=1
         7 002042   002045 702000 7                  TSX2    JUSTALT

      897     8867    2              RETURN;

   8867  7 002043   200010 221300                    LDX1  ! 8,,AUTO
         7 002044   000001 702211                    TSX2  ! 1,X1

   8864  7 002045                       JUSTALT      null
      898     8868
      899     8869    2   JUSTALT:   ;
      900     8870    2              ALTRETURN;

   8870  7 002045   200010 221300                    LDX1  ! 8,,AUTO
         7 002046   000000 702211                    TSX2  ! 0,X1

      901     8871
      902     8872    2      END FTX_WRITVOL1;
      903     8873        /********************************************************************/
      904     8874        %EJECT;
PL6.E3A0      #001=FTX$LABEL File=FTX$LABEL.:E05TSI                              TUE 07/29/97 18:01 Page:120  
      905     8875        /********************************************************************/
      906     8876    1   FTX_WRITVOL1OD: PROC ALTRET;

   8876  7 002047   200010 741300       FTX_WRITVOL* STX1  ! 8,,AUTO

      907     8877        /*F*     NAME: FTX_WRITVOL1OD
      908     8878                 PURPOSE: Write VOL1 label on optical disk.
      909     8879         ***/
      910     8880
      911     8881        /*********************/
      912     8882
      913     8883    2              FP$BLBL = ' ';

   8883  7 002050   040000 100400                    MLR     fill='040'O
         7 002051   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         7 002052   000446 000120 5                  ADSC9   LBLBUF                   cn=0,n=80

      914     8884    2              FP$VOL1.LABEL_TYPE = 'VOL1';

   8884  7 002053   000430 236000 6                  LDQ     ERMSG+255
         7 002054   000446 756000 5                  STQ     LBLBUF

      915     8885    2              FP$VOL1.SN = VOLSN.SN#(0);

   8885  7 002055   040000 100400                    MLR     fill='040'O
         7 002056   000311 000006 5                  ADSC9   VOLSN+1                  cn=0,n=6
         7 002057   000447 000006 5                  ADSC9   LBLBUF+1                 cn=0,n=6

      916     8886    2              FP$VOL1.PLATTER = TAPESN.SN#(0);

   8886  7 002060   040000 100400                    MLR     fill='040'O
         7 002061   000303 000006 5                  ADSC9   TAPESN+1                 cn=0,n=6
         7 002062   000450 600006 5                  ADSC9   LBLBUF+2                 cn=3,n=6

      917     8887    3              DO CASE(VOLACCESS);

   8887  7 002063   000750 235000 5                  LDA     VOLACCESS
PL6.E3A0      #001=FTX$LABEL File=FTX$LABEL.:E05TSI                              TUE 07/29/97 18:01 Page:121  
         7 002064   000004 115007                    CMPA    4,DL
         7 002065   002067 602005 7                  TNC     s:8887+4,AL
         7 002066   002100 710000 7                  TRA     s:8893
         7 002067   002100 710000 7                  TRA     s:8893
         7 002070   002100 710000 7                  TRA     s:8893
         7 002071   002073 710000 7                  TRA     s:8889
         7 002072   002076 710000 7                  TRA     s:8891

      918     8888    3                 CASE(%IN#);

      919     8889    3                    FP$VOL1.ACCESS = 'I';

   8889  7 002073   111000 236007                    LDQ     37376,DL
         7 002074   000450 552010 5                  STBQ    LBLBUF+2,'10'O
         7 002075   002100 710000 7                  TRA     s:8893

      920     8890    3                 CASE(%NONE#);

      921     8891    3                    FP$VOL1.ACCESS = 'N';

   8891  7 002076   116000 236007                    LDQ     39936,DL
         7 002077   000450 552010 5                  STBQ    LBLBUF+2,'10'O

      922     8892    3                 END;

      923     8893    2              FP$VOL1.ACCOUNT = VOLACN.ACCT#;

   8893  7 002100   040000 100400                    MLR     fill='040'O
         7 002101   000306 000010 5                  ADSC9   VOLACN                   cn=0,n=8
         7 002102   000457 200010 5                  ADSC9   LBLBUF+9                 cn=1,n=8

      924     8894    2              FP$VOL1.SYSTEM_CODE.ID = 'CP-6';

   8894  7 002103   000431 236000 6                  LDQ     ERMSG+256
         7 002104   000454 756000 5                  STQ     LBLBUF+6

      925     8895    2              FP$VOL1.SYSTEM_CODE.VERSION = VLR_SITEINFO.VERSION#;
PL6.E3A0      #001=FTX$LABEL File=FTX$LABEL.:E05TSI                              TUE 07/29/97 18:01 Page:122  

   8895  7 002105   040000 100400                    MLR     fill='040'O
         7 002106   000400 000004 5                  ADSC9   VLR_SITEINFO+52          cn=0,n=4
         7 002107   000455 000011 5                  ADSC9   LBLBUF+7                 cn=0,n=9

      926     8896    2              FP$VOL1.SYSTEM = 'CP-6';

   8896  7 002110   040000 100400                    MLR     fill='040'O
         7 002111   000431 000004 6                  ADSC9   ERMSG+256                cn=0,n=4
         7 002112   000461 200006 5                  ADSC9   LBLBUF+11                cn=1,n=6

      927     8897    2              IF NOT FMSEC THEN

   8897  7 002113   000430 235000 5                  LDA     FMSEC
         7 002114   002120 601000 7                  TNZ     s:8899

      928     8898    2                 CALL M$SPRIV(SWITCHFMSEC);

   8898  7 002115   001606 630400 5                  EPPR0   SWITCHFMSEC
         7 002116   020012 713400                    CLIMB   8202
         7 002117   400000 401760                    pmme    nvectors=1

      929     8899    2              CALL M$WRITE(WRITLBLOD) ALTRET(JUSTALT);

   8899  7 002120   001662 630400 5                  EPPR0   WRITLBLOD
         7 002121   440001 713400                    CLIMB   alt,write
         7 002122   401400 401760                    pmme    nvectors=4
         7 002123   002134 702000 7                  TSX2    JUSTALT

      930     8900    2              IF NOT FMSEC THEN

   8900  7 002124   000430 235000 5                  LDA     FMSEC
         7 002125   002131 601000 7                  TNZ     s:8902

      931     8901    2                 CALL M$RPRIV(SWITCHFMSEC);

   8901  7 002126   001606 630400 5                  EPPR0   SWITCHFMSEC
PL6.E3A0      #001=FTX$LABEL File=FTX$LABEL.:E05TSI                              TUE 07/29/97 18:01 Page:123  
         7 002127   020013 713400                    CLIMB   8203
         7 002130   400000 401760                    pmme    nvectors=1

      932     8902    2              NUMLABELED = NUMLABELED + 1; /* One more labelled                  */

   8902  7 002131   000474 054000 5                  AOS     NUMLABELED

      933     8903    2              RETURN;

   8903  7 002132   200010 221300                    LDX1  ! 8,,AUTO
         7 002133   000001 702211                    TSX2  ! 1,X1

   8902  7 002134                       JUSTALT      null
      934     8904
      935     8905    2   JUSTALT:   ;
      936     8906    2              ALTRETURN;

   8906  7 002134   200010 221300                    LDX1  ! 8,,AUTO
         7 002135   000000 702211                    TSX2  ! 0,X1

      937     8907
      938     8908    2      END FTX_WRITVOL1OD;
      939     8909        /********************************************************************/
      940     8910        %EJECT;
PL6.E3A0      #001=FTX$LABEL File=FTX$LABEL.:E05TSI                              TUE 07/29/97 18:01 Page:124  
      941     8911        /********************************************************************/
      942     8912    1   FTX_REM_OPTION: PROC;

   8912  7 002136   200004 741300       FTX_REM_OPT* STX1  ! 4,,AUTO

      943     8913        /*F*     NAME: FTX_REM_OPTION
      944     8914                 PURPOSE: Process REM command option.
      945     8915         ***/
      946     8916
      947     8917        /********************/
      948     8918
      949     8919         /***
      950     8920          *** If valid sn, remove volume.
      951     8921          ***/
      952     8922
      953     8923    2              REMLBL.V.PSN# = XUG_GETCMD.OUT$->OUT$BLK.SUBLK$(0)->OUT$SYM.TEXT;

   8923  7 002137   001213 470400 5                  LDP0    XUG_GETCMD+1
         7 002140   000003 471500                    LDP1    3,,PR0
         7 002141   100004 236100                    LDQ     4,,PR1
         7 002142   000033 772000                    QRL     27
         7 002143   000000 620006                    EAX0    0,QL
         7 002144   040000 100540                    MLR     fill='040'O
         7 002145   100004 200010                    ADSC9   4,,PR1                   cn=1,n=*X0
         7 002146   001544 400006 5                  ADSC9   REMLBL+2                 cn=2,n=6

      954     8924    2              CALL M$REM(REMLBL) ALTRET(MONERR);

   8924  7 002147   001542 630400 5                  EPPR0   REMLBL
         7 002150   460006 713400                    CLIMB   alt,+24582
         7 002151   400000 401760                    pmme    nvectors=1
         7 002152   002155 702000 7                  TSX2    MONERR

      955     8925    2              RETURN;

   8925  7 002153   200004 221300                    LDX1  ! 4,,AUTO
         7 002154   000001 702211                    TSX2  ! 1,X1
PL6.E3A0      #001=FTX$LABEL File=FTX$LABEL.:E05TSI                              TUE 07/29/97 18:01 Page:125  

   8923  7 002155                       MONERR       null
      956     8926
      957     8927    2   MONERR:    ;
      958     8928    2              CALL FTX_RPTERR;

   8928  7 002155   002404 701000 7                  TSX1    FTX_RPTERR
         7 002156   000000 011000                    NOP     0

      959     8929    2              RETURN;

   8929  7 002157   200004 221300                    LDX1  ! 4,,AUTO
         7 002160   000001 702211                    TSX2  ! 1,X1

      960     8930
      961     8931    2      END FTX_REM_OPTION;
      962     8932        /********************************************************************/
      963     8933        %EJECT;
PL6.E3A0      #001=FTX$LABEL File=FTX$LABEL.:E05TSI                              TUE 07/29/97 18:01 Page:126  
      964     8934        /********************************************************************/
      965     8935    1   FTX_GEN_NEXT_OUT_SN: PROC ALTRET;

   8935  7 002161   200006 741300       FTX_GEN_NEX* STX1  ! 6,,AUTO

      966     8936        /*F*     NAME: FTX_GEN_NEXT_OUT_SN
      967     8937                 PURPOSE: Generate next output serial number.
      968     8938         ***/
      969     8939
      970     8940        /********************/
      971     8941
      972     8942    2              STARTNUM = STARTNUM + INCNUM; /* Determine next seq ser            */

   8942  7 002162   000744 236000 5                  LDQ     STARTNUM
         7 002163   000442 036000 5                  ADLQ    INCNUM
         7 002164   000744 756000 5                  STQ     STARTNUM

      973     8943    2              CALL BINCHAR(DSTARTNUM,STARTNUM);

   8943  7 002165   000000 301400                    BTD
         7 002166   000744 000004 5                  NDSC9   STARTNUM                 cn=0,s=lsgnf,sf=0,n=4
         7 002167   000423 030014 5                  NDSC9   DSTARTNUM                cn=0,s=nosgn,sf=0,n=12

      974     8944    2              TEMP = 0;

   8944  7 002170   000745 450000 5                  STZ     TEMP

      975     8945    3              DO WHILE( TEMP < LENGTHC(DSTARTNUM)-1 AND DSTARTNUMC(TEMP) = '0' );

   8945  7 002171   002173 710000 7                  TRA     s:8947

      976     8946    3                 TEMP = TEMP + 1;

   8946  7 002172   000745 054000 5                  AOS     TEMP

      977     8947    3                 END;

PL6.E3A0      #001=FTX$LABEL File=FTX$LABEL.:E05TSI                              TUE 07/29/97 18:01 Page:127  
   8947  7 002173   000745 235000 5                  LDA     TEMP
         7 002174   000013 115007                    CMPA    11,DL
         7 002175   002202 605000 7                  TPL     s:8949
         7 002176   040000 106405                    CMPC    fill='040'O
         7 002177   000423 000001 5                  ADSC9   DSTARTNUM,A              cn=0,n=1
         7 002200   000027 000001 8                  ADSC9   23                       cn=0,n=1
         7 002201   002172 600000 7                  TZE     s:8946

      978     8948
      979     8949    2              TEMP = LENGTHC(DSTARTNUM) - TEMP;
              8949                       /* Determine length of non-zero portion */

   8949  7 002202   000027 675000 xsym               ERA     B_VECTNIL+23
         7 002203   000015 035007                    ADLA    13,DL
         7 002204   000745 755000 5                  STA     TEMP

      980     8950    3              IF TEMP > PLACESIZE THEN DO;

   8950  7 002205   000745 236000 5                  LDQ     TEMP
         7 002206   000535 116000 5                  CMPQ    PLACESIZE
         7 002207   002220 604400 7                  TMOZ    s:8959

      981     8951    3                 CALL FTX_ERROR(%NO_NUM_ROOM,-1);

   8951  7 002210   000001 236000 8                  LDQ     1
         7 002211   200012 756100                    STQ     @ECODE+1,,AUTO
         7 002212   000024 236000 8                  LDQ     20
         7 002213   200011 756100                    STQ     9,,AUTO
         7 002214   002433 701000 7                  TSX1    FTX_ERROR
         7 002215   000000 011000                    NOP     0

      982     8952    3                 ALTRETURN;

   8952  7 002216   200006 221300                    LDX1  ! 6,,AUTO
         7 002217   000000 702211                    TSX2  ! 0,X1

      983     8953    3                 END;
PL6.E3A0      #001=FTX$LABEL File=FTX$LABEL.:E05TSI                              TUE 07/29/97 18:01 Page:128  
      984     8954
      985     8955         /***
      986     8956          *** Put sequential serial number in sn.
      987     8957          ***/
      988     8958
      989     8959    2              TEMP$ = PINCRC( ADDR(VOLSN.SN#(0)), PLACESTART );

   8959  7 002220   000536 236000 5                  LDQ     PLACESTART
         7 002221   000020 736000                    QLS     16
         7 002222   000030 036000 8                  ADLQ    24
         7 002223   000746 756000 5                  STQ     TEMP$

      990     8960    2              N = PLACESIZE;

   8960  7 002224   000535 235000 5                  LDA     PLACESIZE
         7 002225   000472 755000 5                  STA     N

      991     8961    2              TEMP2$ = PINCRC( ADDR(DSTARTNUM), LENGTHC(DSTARTNUM)-PLACESIZE );

   8961  7 002226   000535 336000 5                  LCQ     PLACESIZE
         7 002227   000020 736000                    QLS     16
         7 002230   000031 036000 8                  ADLQ    25
         7 002231   000747 756000 5                  STQ     TEMP2$

      992     8962    2              VOLSN.SN#(0) = BASESN;       /* Set image                          */

   8962  7 002232   040000 100400                    MLR     fill='040'O
         7 002233   000414 000006 5                  ADSC9   BASESN                   cn=0,n=6
         7 002234   000311 000006 5                  ADSC9   VOLSN+1                  cn=0,n=6

      993     8963    2              TEMP$->CHARS = TEMP2$->CHARS; /* Put in seq num                    */

   8963  7 002235   000747 470400 5                  LDP0    TEMP2$
         7 002236   000000 620005                    EAX0    0,AL
         7 002237   000746 471400 5                  LDP1    TEMP$
         7 002240   000472 721000 5                  LXL1    N
         7 002241   040140 100540                    MLR     fill='040'O
PL6.E3A0      #001=FTX$LABEL File=FTX$LABEL.:E05TSI                              TUE 07/29/97 18:01 Page:129  
         7 002242   000000 000010                    ADSC9   0,,PR0                   cn=0,n=*X0
         7 002243   100000 000011                    ADSC9   0,,PR1                   cn=0,n=*X1

      994     8964    2              RETURN;

   8964  7 002244   200006 221300                    LDX1  ! 6,,AUTO
         7 002245   000001 702211                    TSX2  ! 1,X1

      995     8965
      996     8966    2      END FTX_GEN_NEXT_OUT_SN;
      997     8967        /********************************************************************/
      998     8968        %EJECT;
PL6.E3A0      #001=FTX$LABEL File=FTX$LABEL.:E05TSI                              TUE 07/29/97 18:01 Page:130  
      999     8969        /********************************************************************/
     1000     8970    1   FTX_GEN_NEXT_IN_SN: PROC ALTRET;

   8970  7 002246   200006 741300       FTX_GEN_NEX* STX1  ! 6,,AUTO

     1001     8971        /*F*     NAME: FTX_GEN_NEXT_IN_SN
     1002     8972                 PURPOSE: Generate next input serial number.
     1003     8973         ***/
     1004     8974
     1005     8975        /********************/
     1006     8976
     1007     8977    3              DO WHILE('0'B);

   8977  7 002247   002256 710000 7                  TRA     s:8988

   8963  7 002250                       INCSPEC      null
     1008     8978    3   INCSPEC:      ;                         /* Increment spec number              */
     1009     8979    3                 SPEC = SPEC + 1;

   8979  7 002250   000743 054000 5                  AOS     SPEC

     1010     8980    3                 IF SPEC >= NUMSNSPECS THEN

   8980  7 002251   000743 236000 5                  LDQ     SPEC
         7 002252   000502 116000 5                  CMPQ    NUMSNSPECS
         7 002253   002256 604000 7                  TMI     s:8988

     1011     8981    3                    ALTRETURN;             /* When done                          */

   8981  7 002254   200006 221300                    LDX1  ! 6,,AUTO
         7 002255   000000 702211                    TSX2  ! 0,X1

     1012     8982    3                 END;

     1013     8983
     1014     8984         /***
     1015     8985          *** If named, return named sn.  If not, return generated sn.
PL6.E3A0      #001=FTX$LABEL File=FTX$LABEL.:E05TSI                              TUE 07/29/97 18:01 Page:131  
     1016     8986          ***/
     1017     8987
     1018     8988    3              IF SNSPECS.NAMED(SPEC) THEN DO; /* Named specs...use list          */

   8988  7 002256   000743 720000 5                  LXL0    SPEC
         7 002257   000543 234010 5                  SZN     SNSPECS,X0
         7 002260   002305 605000 7                  TPL     s:8996

     1019     8989    3                 TEMP = SNSPECS.FIRSTNAMEX(SPEC); /* Get next name index         */

   8989  7 002261   000543 236010 5                  LDQ     SNSPECS,X0
         7 002262   000022 772000                    QRL     18
         7 002263   377777 376007                    ANQ     131071,DL
         7 002264   000745 756000 5                  STQ     TEMP

     1020     8990    3                 IF TEMP > SNSPECS.LASTNAMEX(SPEC) THEN /* Done with this spec?  */

   8990  7 002265   000543 236010 5                  LDQ     SNSPECS,X0
         7 002266   777777 376007                    ANQ     -1,DL
         7 002267   000745 116000 5                  CMPQ    TEMP
         7 002270   002250 604000 7                  TMI     INCSPEC

     1021     8991    3                    GOTO INCSPEC;
     1022     8992    3                 TAPESN.SN#(0) = NSNLIST.SN#(TEMP);

   8992  7 002271   000745 236000 5                  LDQ     TEMP
         7 002272   000006 402007                    MPY     6,DL
         7 002273   040000 100406                    MLR     fill='040'O
         7 002274   000001 000006 5                  ADSC9   NSNLIST+1,Q              cn=0,n=6
         7 002275   000303 000006 5                  ADSC9   TAPESN+1                 cn=0,n=6

     1023     8993    3                 SNSPECS.FIRSTNAMEX(SPEC) = TEMP + 1;

   8993  7 002276   000745 236000 5                  LDQ     TEMP
         7 002277   000001 036007                    ADLQ    1,DL
         7 002300   000022 736000                    QLS     18
         7 002301   000543 676010 5                  ERQ     SNSPECS,X0
PL6.E3A0      #001=FTX$LABEL File=FTX$LABEL.:E05TSI                              TUE 07/29/97 18:01 Page:132  
         7 002302   377777 376003                    ANQ     131071,DU
         7 002303   000543 656010 5                  ERSQ    SNSPECS,X0

     1024     8994    3                 END;

   8994  7 002304   002316 710000 7                  TRA     s:9002

     1025     8995    3              ELSE DO;                     /* Sn not specified                   */

     1026     8996    3                 TEMP = SNSPECS.NUMNOTNAMED(SPEC);

   8996  7 002305   000543 236010 5                  LDQ     SNSPECS,X0
         7 002306   777777 376007                    ANQ     -1,DL
         7 002307   000745 756000 5                  STQ     TEMP

     1027     8997    3                 IF TEMP = 0 THEN          /* Done with this spec?               */

   8997  7 002310   002250 600000 7                  TZE     INCSPEC

     1028     8998    3                    GOTO INCSPEC;
     1029     8999    3                 TAPESN.SN#(0) = VOLSN.SN#(0); /* Ask for volume by output name  */

   8999  7 002311   040000 100400                    MLR     fill='040'O
         7 002312   000311 000006 5                  ADSC9   VOLSN+1                  cn=0,n=6
         7 002313   000303 000006 5                  ADSC9   TAPESN+1                 cn=0,n=6

     1030     9000    3                 SNSPECS.LASTNAMEX(SPEC) = TEMP - 1;

   9000  7 002314   777777 621006                    EAX1    -1,QL
         7 002315   000543 441010 5                  SXL1    SNSPECS,X0

     1031     9001    3                 END;

     1032     9002    2              RETURN;

   9002  7 002316   200006 221300                    LDX1  ! 6,,AUTO
         7 002317   000001 702211                    TSX2  ! 1,X1
PL6.E3A0      #001=FTX$LABEL File=FTX$LABEL.:E05TSI                              TUE 07/29/97 18:01 Page:133  

     1033     9003
     1034     9004    2      END FTX_GEN_NEXT_IN_SN;
     1035     9005        /********************************************************************/
     1036     9006        %EJECT;
PL6.E3A0      #001=FTX$LABEL File=FTX$LABEL.:E05TSI                              TUE 07/29/97 18:01 Page:134  
     1037     9007        /********************************************************************/
     1038     9008    1   FTX_READVOL1: PROC ALTRET;

   9008  7 002320   200010 741300       FTX_READVOL1 STX1  ! 8,,AUTO

     1039     9009        /*F*     NAME: FTX_READVOL1
     1040     9010                 PURPOSE: Read VOL1 label and determine type.
     1041     9011         ***/
     1042     9012
     1043     9013        /********************/
     1044     9014
     1045     9015    2              VOLUME_TYPE = %UNKNOWN_VOL;

   9015  7 002321   000002 235007                    LDA     2,DL
         7 002322   000752 755000 5                  STA     VOLUME_TYPE

     1046     9016    2              CALL M$REW(REWLBL) ALTRET(JUSTALT);

   9016  7 002323   001564 630400 5                  EPPR0   REWLBL
         7 002324   440006 713400                    CLIMB   alt,+16390
         7 002325   400000 401760                    pmme    nvectors=1
         7 002326   002402 702000 7                  TSX2    JUSTALT

     1047     9017    2              CALL M$READ(READLBL) ALTRET(JUSTALT);

   9017  7 002327   001546 630400 5                  EPPR0   READLBL
         7 002330   440000 713400                    CLIMB   alt,read
         7 002331   401400 401760                    pmme    nvectors=4
         7 002332   002402 702000 7                  TSX2    JUSTALT

     1048     9018    3              IF DCBADDR(DCBNUM(M$EI))->F$DCB.ARS < 80 THEN DO;

   9018  7 002333   000000 236007 xsym               LDQ     M$EI,DL
         7 002334   000032 470400 8                  LDP0    26
         7 002335   000000 471500                    LDP1    0,,PR0
         7 002336   100000 473506                    LDP3    0,QL,PR1
         7 002337   300000 235100                    LDA     0,,PR3
PL6.E3A0      #001=FTX$LABEL File=FTX$LABEL.:E05TSI                              TUE 07/29/97 18:01 Page:135  
         7 002340   000120 115007                    CMPA    80,DL
         7 002341   002344 605000 7                  TPL     s:9022

     1049     9019    3                 RETURN;

   9019  7 002342   200010 221300                    LDX1  ! 8,,AUTO
         7 002343   000001 702211                    TSX2  ! 1,X1

     1050     9020    3                 END;
     1051     9021
     1052     9022    3              IF FT$ANYLBL.LABEL_TYPE = 'VOL1' THEN DO;

   9022  7 002344   000446 236000 5                  LDQ     LBLBUF
         7 002345   000430 116000 6                  CMPQ    ERMSG+255
         7 002346   002352 601000 7                  TNZ     s:9027

     1053     9023    3                 VOLUME_TYPE = %ASCII_VOL;

   9023  7 002347   000752 450000 5                  STZ     VOLUME_TYPE

     1054     9024    3                 RETURN;

   9024  7 002350   200010 221300                    LDX1  ! 8,,AUTO
         7 002351   000001 702211                    TSX2  ! 1,X1

     1055     9025    3                 END;
     1056     9026
     1057     9027    3              IF FT$BLBL = PO80 THEN DO;

   9027  7 002352   040000 106400                    CMPC    fill='040'O
         7 002353   000446 000120 5                  ADSC9   LBLBUF                   cn=0,n=80
         7 002354   000005 000120 6                  ADSC9   PO80B                    cn=0,n=80
         7 002355   002362 601000 7                  TNZ     s:9032

     1058     9028    3                 VOLUME_TYPE = %PO_VOL;

   9028  7 002356   000003 235007                    LDA     3,DL
PL6.E3A0      #001=FTX$LABEL File=FTX$LABEL.:E05TSI                              TUE 07/29/97 18:01 Page:136  
         7 002357   000752 755000 5                  STA     VOLUME_TYPE

     1059     9029    3                 RETURN;

   9029  7 002360   200010 221300                    LDX1  ! 8,,AUTO
         7 002361   000001 702211                    TSX2  ! 1,X1

     1060     9030    3                 END;
     1061     9031
     1062     9032    2              CALL XLATE(LBLBUF,B$XL_EBC_ASC,LBLBUF);

   9032  7 002362   000000 473400 xsym               LDP3    B$XL_EBC_ASC$
         7 002363   040000 160400                    MVT     fill='040'O
         7 002364   000446 000120 5                  ADSC9   LBLBUF                   cn=0,n=80
         7 002365   000446 000120 5                  ADSC9   LBLBUF                   cn=0,n=80
         7 002366   300000 000100                    ARG     0,,PR3

     1063     9033    3              IF FT$ANYLBL.LABEL_TYPE = 'VOL1' THEN DO; /* EBCDIC                */

   9033  7 002367   000446 236000 5                  LDQ     LBLBUF
         7 002370   000430 116000 6                  CMPQ    ERMSG+255
         7 002371   002376 601000 7                  TNZ     s:9038

     1064     9034    3                 VOLUME_TYPE = %EBCDIC_VOL;

   9034  7 002372   000001 235007                    LDA     1,DL
         7 002373   000752 755000 5                  STA     VOLUME_TYPE

     1065     9035    3                 RETURN;

   9035  7 002374   200010 221300                    LDX1  ! 8,,AUTO
         7 002375   000001 702211                    TSX2  ! 1,X1

     1066     9036    3                 END;
     1067     9037
     1068     9038    2              VOLUME_TYPE = %UNKNOWN_VOL;

PL6.E3A0      #001=FTX$LABEL File=FTX$LABEL.:E05TSI                              TUE 07/29/97 18:01 Page:137  
   9038  7 002376   000002 235007                    LDA     2,DL
         7 002377   000752 755000 5                  STA     VOLUME_TYPE

     1069     9039    2              RETURN;

   9039  7 002400   200010 221300                    LDX1  ! 8,,AUTO
         7 002401   000001 702211                    TSX2  ! 1,X1

   9038  7 002402                       JUSTALT      null
     1070     9040
     1071     9041    2   JUSTALT:   ;
     1072     9042    2              ALTRETURN;

   9042  7 002402   200010 221300                    LDX1  ! 8,,AUTO
         7 002403   000000 702211                    TSX2  ! 0,X1

     1073     9043
     1074     9044    2      END FTX_READVOL1;
     1075     9045        /********************************************************************/
     1076     9046        %EJECT;
PL6.E3A0      #001=FTX$LABEL File=FTX$LABEL.:E05TSI                              TUE 07/29/97 18:01 Page:138  
     1077     9047        /********************************************************************/
     1078     9048    1   FTX_RPTERR: PROC;

   9048  7 002404   200014 741300       FTX_RPTERR   STX1  ! @RPOS+2,,AUTO

     1079     9049        /*F*     NAME: FTX_RPTERR
     1080     9050                 PURPOSE: Report ALTRET frame error.
     1081     9051         ***/
     1082     9052
     1083     9053        /********************/
     1084     9054
     1085     9055    2              EXITCC.V.STEPCC# = 4;

   9055  7 002405   004000 236003                    LDQ     2048,DU
         7 002406   001100 552040 5                  STBQ    EXITCC+4,'40'O

     1086     9056    2              XUG_GETCMD.USE_EPOS# = %NO#;

   9056  7 002407   000031 236000 xsym               LDQ     B_VECTNIL+25
         7 002410   001220 356000 5                  ANSQ    XUG_GETCMD+6

     1087     9057    2              XUG_GETCMD.DCB_PARAM# = DCBNUM(M$DO);

   9057  7 002411   000000 236007 xsym               LDQ     M$DO,DL
         7 002412   001226 756000 5                  STQ     XUG_GETCMD+12

     1088     9058    2              XUG_GETCMD.ERRDCB# = B$TCB$->B$TCB.ALT$->B$ALT.DCB#;

   9058  7 002413   000000 470400 xsym               LDP0    B$TCB$
         7 002414   000000 471500                    LDP1    0,,PR0
         7 002415   100101 235100                    LDA     65,,PR1
         7 002416   001223 755000 5                  STA     XUG_GETCMD+9

     1089     9059    2              XUG_GETCMD.ERR_CODE = B$TCB$->B$TCB.ALT$->B$ALT.ERR;

   9059  7 002417   000000 471500                    LDP1    0,,PR0
         7 002420   100102 236100                    LDQ     66,,PR1
PL6.E3A0      #001=FTX$LABEL File=FTX$LABEL.:E05TSI                              TUE 07/29/97 18:01 Page:139  
         7 002421   001222 756000 5                  STQ     XUG_GETCMD+8

     1090     9060    2              XUG_GETCMD.ERR_CODE.SEV# = 0;

   9060  7 002422   000033 236000 8                  LDQ     27
         7 002423   001222 356000 5                  ANSQ    XUG_GETCMD+8

     1091     9061    3              CALL XUG$ERRMSG(XUG_GETCMD) WHENALTRETURN DO; END;

   9061  7 002424   000005 630400 8                  EPPR0   5
         7 002425   000017 631400 xsym               EPPR1   B_VECTNIL+15
         7 002426   000000 701000 xent               TSX1    XUG$ERRMSG
         7 002427   002431 702000 7                  TSX2    s:9062
         7 002430   002431 710000 7                  TRA     s:9062

     1092     9062    2              RETURN;

   9062  7 002431   200014 221300                    LDX1  ! @RPOS+2,,AUTO
         7 002432   000001 702211                    TSX2  ! 1,X1

     1093     9063
     1094     9064    2      END FTX_RPTERR;
     1095     9065        /********************************************************************/
     1096     9066        %EJECT;
PL6.E3A0      #001=FTX$LABEL File=FTX$LABEL.:E05TSI                              TUE 07/29/97 18:01 Page:140  
     1097     9067        /********************************************************************/
     1098     9068    1   FTX_ERROR: PROC(ECODE,RPOS);

   9068  7 002433   200010 741300       FTX_ERROR    STX1  ! 8,,AUTO

     1099     9069        /*F*     NAME: FTX_ERROR
     1100     9070                 PURPOSE: Report semantic errors.
     1101     9071         ***/
     1102     9072
     1103     9073         /***
     1104     9074          *** Parameters:
     1105     9075          ***/
     1106     9076
     1107     9077    2     DCL ECODE SBIN;                       /* Internal error code                */
     1108     9078    2     DCL RPOS SBIN;                        /* Position in record                 */
     1109     9079
     1110     9080         /***
     1111     9081          *** Print error message.
     1112     9082          ***/
     1113     9083
     1114     9084    2              EXITCC.V.STEPCC# = 4;

   9084  7 002434   004000 236003                    LDQ     2048,DU
         7 002435   001100 552040 5                  STBQ    EXITCC+4,'40'O

     1115     9085    2              CMNDERROR = %YES#;           /* Remember error occurred            */

   9085  7 002436   400000 236003                    LDQ     -131072,DU
         7 002437   000420 756000 5                  STQ     CMNDERROR

     1116     9086    3              IF RPOS >= 0 THEN DO;        /* Point at the error                 */

   9086  7 002440   200012 470500                    LDP0    @RPOS,,AUTO
         7 002441   000000 235100                    LDA     0,,PR0
         7 002442   002454 604000 7                  TMI     s:9092

     1117     9087    3                 XUG_GETCMD.USE_EPOS# = %YES#;
PL6.E3A0      #001=FTX$LABEL File=FTX$LABEL.:E05TSI                              TUE 07/29/97 18:01 Page:141  

   9087  7 002443   001220 256000 5                  ORSQ    XUG_GETCMD+6

     1118     9088    3                 XUG_GETCMD.DCB_PARAM# = DCBNUM(M$DO);

   9088  7 002444   000000 236007 xsym               LDQ     M$DO,DL
         7 002445   001226 756000 5                  STQ     XUG_GETCMD+12

     1119     9089    3                 XUG_GETCMD.EPOS# = RPOS;

   9089  7 002446   000000 720100                    LXL0    0,,PR0
         7 002447   001220 440000 5                  SXL0    XUG_GETCMD+6

     1120     9090    3                 CALL XUG$ERRPTR(XUG_GETCMD) ALTRET(MONERR);

   9090  7 002450   000005 630400 8                  EPPR0   5
         7 002451   000017 631400 xsym               EPPR1   B_VECTNIL+15
         7 002452   000000 701000 xent               TSX1    XUG$ERRPTR
         7 002453   002474 702000 7                  TSX2    MONERR

     1121     9091    3                 END;

     1122     9092    2              ERRTELL.BUF_ = VECTOR(ERMSG(ECODE));

   9092  7 002454   200011 470500                    LDP0    @ECODE,,AUTO
         7 002455   000000 235100                    LDA     0,,PR0
         7 002456   200016 755100                    STA     @RPOS+4,,AUTO
         7 002457   000034 235000 8                  LDA     28
         7 002460   200016 236100                    LDQ     @RPOS+4,,AUTO
         7 002461   200017 755100                    STA     @RPOS+5,,AUTO
         7 002462   000036 402000 8                  MPY     30
         7 002463   000035 036000 8                  ADLQ    29
         7 002464   200017 235100                    LDA     @RPOS+5,,AUTO
         7 002465   001106 757000 5                  STAQ    ERRTELL+4

     1123     9093    2              CALL M$WRITE( ERRTELL ) ALTRET( MONERR );

PL6.E3A0      #001=FTX$LABEL File=FTX$LABEL.:E05TSI                              TUE 07/29/97 18:01 Page:142  
   9093  7 002466   001102 630400 5                  EPPR0   ERRTELL
         7 002467   440001 713400                    CLIMB   alt,write
         7 002470   401400 401760                    pmme    nvectors=4
         7 002471   002474 702000 7                  TSX2    MONERR

     1124     9094    2              RETURN;

   9094  7 002472   200010 221300                    LDX1  ! 8,,AUTO
         7 002473   000001 702211                    TSX2  ! 1,X1

   9092  7 002474                       MONERR       null
     1125     9095
     1126     9096    2   MONERR:    ;
     1127     9097    2              CALL FTX_RPTERR;

   9097  7 002474   002404 701000 7                  TSX1    FTX_RPTERR
         7 002475   000000 011000                    NOP     0

     1128     9098    2              CALL M$EXIT( EXITCC );

   9098  7 002476   001074 630400 5                  EPPR0   EXITCC
         7 002477   000001 713400                    CLIMB   exit
         7 002500   400400 401760                    pmme    nvectors=2

     1129     9099
     1130     9100    2      END FTX_ERROR;

   9100  7 002501   200010 221300                    LDX1  ! 8,,AUTO
         7 002502   000001 702211                    TSX2  ! 1,X1
     1131     9101        /********************************************************************/
     1132     9102    1   END FTX$LABEL;
     1133     9103        %EOD;

PL6.E3A0      #001=FTX$LABEL File=FTX$LABEL.:E05TSI                              TUE 07/29/97 18:01 Page:143  
--  Include file information  --

   B$TABLES_C.:E05TOU  cannot be made into a system file and is referenced.
   XUG_ENTRY.:E05TOU  cannot be made into a system file and is referenced.
   XU_SUBS_C.:E05TOU  is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
   B_MICROPS_C.:E05TOU  is referenced.
   FTX_SUBS_C.:E05TOU  is referenced.
   FP$LBLS.:E05TOU  is referenced.
   FT$LBLS.:E05TOU  is referenced.
   F$JIT_C.:E05TOU  cannot be made into a system file and is referenced.
   F$DCB.:E05TOU  cannot be made into a system file and is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B_ERRORS_C.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure FTX$LABEL.
PL6.E3A0      #001=FTX$LABEL File=FTX$LABEL.:E05TSI                              TUE 07/29/97 18:01 Page:144  

 **** Variables and constants ****

  ****  Section 005  Data  FTX$LABEL

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

   412-0-0/c CHAR(6)     r     1 ASN                      414-0-0/c CHAR(6)     r     1 BASESN
   754-0-0/d STRC(144)   r     1 BRKCTL                   416-0-0/b BIT         r     1 BRKFLAG
   417-0-0/b BIT         r     1 BYPCONCHK                760-0-0/d STRC(144)   r     1 CHKLABELRUN
  1000-0-0/d STRC(1080)  r     1 CLSREMLBL               1036-0-0/d STRC(1080)  r     1 CLSREWLBL
   420-0-0/b BIT         r     1 CMNDERROR                421-0-0/w SBIN        r     1 COMMAND
   422-0-0/w SBIN        r     1 CPOS                     751-0-0/w SBIN        r     1 DENSITY
   423-0-0/c CHAR(12)    r     1 DSTARTNUM
   423-0-0/c CHAR        r     1 DSTARTNUMC(0:11)
  1102-0-0/d STRC(432)   r     1 ERRTELL                 1074-0-0/d STRC(216)   r     1 EXITCC
   426-0-0/c CHAR(6)     r     1 FIRSTSEQSN               430-0-0/b BIT         r     1 FMSEC
   431-0-0/c CHAR(4)     r     1 FOUR_CHARS               446-0-0/c CHAR(80)    r     1 FP$BLBL
   446-0-0/c STRC(720)   r     1 FP$VOL1                  764-0-0/d STRC(432)   r     1 FPT_MONINFO
   446-0-0/c STRC(720)   r     1 FT$ANYLBL                446-0-0/c CHAR(80)    r     1 FT$BLBL
   446-0-0/c STRC(720)   r     1 FT$VOL1                 1116-0-0/d STRC(432)   r     1 GETTIME
   432-0-0/c STRC(288)   r     1 GREETINGS               1132-0-0/d STRC(432)   r     1 GREETUSR
   442-0-0/w SBIN        r     1 INCNUM                   443-0-0/b BIT         r     1 INSEQUENCE
   444-0-0/c CHAR(6)     r     1 LASTSEQSN                446-0-0/c CHAR(80)    r     1 LBLBUF
   472-0-0/w SBIN        r     1 N                        473-0-0/w SBIN        r     1 NEXTFREENSN
     0-0-0/d STRC(6948)  r     1 NSNLIST                  474-0-0/w SBIN        r     1 NUMLABELED
   475-0-0/c STRC(180)   r     1 NUMLBLMSG                502-0-0/w SBIN        r     1 NUMSNSPECS
   503-0-0/w SBIN        r     1 OBUFSIZE                 504-0-0/w SBIN        r     1 OBUFX
  1264-0-0/d STRC(2088)  r     1 OPENCREATELBL           1356-0-0/d STRC(2088)  r     1 OPENLBL
  1450-0-0/d STRC(2088)  r     1 OPENOD                   505-0-0/w PTR         r     1 OPTIONBLK$
   506-0-0/w SBIN        r     1 OPTIONNUM
   507-0-0/b BIT         r     1 OPTIONSPECIFIED(0:23)
   511-0-0/c CHAR(80)    r     1 OUTBUF                   535-0-0/w SBIN        r     1 PLACESIZE
   536-0-0/w SBIN        r     1 PLACESTART               537-0-0/c CHAR(6)     r     1 PREVSN
  1546-0-0/d STRC(504)   r     1 READLBL                 1542-0-0/d STRC(144)   r     1 REMLBL
  1564-0-0/d STRC(216)   r     1 REWLBL                  1572-0-0/d STRC(432)   r     1 SHOWOUT
   541-0-0/w SBIN        r     1 SNBLANKX                 542-0-0/w SBIN        r     1 SNNUM
PL6.E3A0      #001=FTX$LABEL File=FTX$LABEL.:E05TSI                              TUE 07/29/97 18:01 Page:145  
   543-0-0/b STRC        r     1 SNSPECS(0:127)           743-0-0/w SBIN        r     1 SPEC
   744-0-0/w SBIN        r     1 STARTNUM                1606-0-0/d STRC(144)   r     1 SWITCHFMSEC
   302-0-0/d STRC(90)    r     1 TAPESN                  1612-0-0/d STRC(432)   r     1 TELNUMLBL
   745-0-0/w SBIN        r     1 TEMP                     746-0-0/w PTR         r     1 TEMP$
   747-0-0/w PTR         r     1 TEMP2$                   314-0-0/d STRC(2232)  r     1 VLR_SITEINFO
   750-0-0/w SBIN        r     1 VOLACCESS                306-0-0/c STRC(72)    r     1 VOLACN
   310-0-0/d STRC(90)    r     1 VOLSN                    752-0-0/w SBIN        r     1 VOLUME_TYPE
  1626-0-0/d STRC(144)   r     1 WEOFLBL                 1632-0-0/d STRC(432)   r     1 WRITBLNK
  1646-0-0/d STRC(432)   r     1 WRITLBL                 1662-0-0/d STRC(432)   r     1 WRITLBLOD
  1212-0-0/d STRC(1512)  r     1 XUG_GETCMD              1146-0-0/d STRC(1296)  r     1 XUG_INIT

  ****  Section 006 RoData FTX$LABEL

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     1-0-0/c CHAR        r     1 BLANKS                    31-0-0/c CHAR(70)    r     1 ERMSG(0:13)
     2-0-0/c CHAR        r     1 LABEL_PROMPT
     3-0-0/b BIT (9)     r     1 NO3LEADINGZS(0:2)
     5-0-0/c CHAR(80)    r     1 PO80                       5-0-0/b BIT         r     1 PO80B(0:19)

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

    11-0-0/w PTR         r     1 @ECODE                    12-0-0/w PTR         r     1 @RPOS
    *0-0-0/w SBIN        r     1 ECODE                     *0-0-0/w SBIN        r     1 RPOS

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w UBIN        r     1 A_COMMAND                  0-0-0/w PTR         r     1 B$JIT$
     0-0-0/w PTR         r     1 B$SR_NON_BLANK$            0-0-0/w PTR         r     1 B$TCB$
     0-0-0/w PTR         r     1 B$XL_EBC_ASC$              0-0-0/c CHAR        r     1 B_VERSION
PL6.E3A0      #001=FTX$LABEL File=FTX$LABEL.:E05TSI                              TUE 07/29/97 18:01 Page:146  

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(2448)  r     1 B$ALT                      0-0-0/d STRC(8856)  r     1 B$JIT
     0-0-0/d STRC(4608)  r     1 B$SR_NON_BLANK             0-0-0/w STRC(144)   r     1 B$TCB
     0-0-0/d STRC(4608)  r     1 B$XL_EBC_ASC               0-0-0/c ACHR        r     1 CHARS
     0-0-0/d ASTR(3528)  r     1 F$DCB                      0-0-0N  NULL        r     1 M$DO
     0-0-0N  NULL        r     1 M$EI                       0-0-0N  NULL        r     1 M$LO
     0-0-0/w STRC(144)   r     1 OUT$BLK                    0-0-0/w ASTR(153)   r     1 OUT$SYM
     0-0-0/c ASTR(9)     r     1 TEXTC


   Procedure FTX$LABEL requires 1347 words for executable code.
   Procedure FTX$LABEL requires 16 words of local(AUTO) storage.
PL6.E3A0      #001=FTX$LABEL File=FTX$LABEL.:E05TSI                              TUE 07/29/97 18:01 Page:147  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=FTX$LABEL File=FTX$LABEL.:E05TSI                              TUE 07/29/97 18:01 Page:148  
          MINI XREF LISTING

ASN
      6018**DCL      8405<<ASSIGN   8407>>ASSIGN   8408>>CALLBLT  8423<<ASSIGN   8424>>IF       8424>>IF
      8429>>ASSIGN
A_COMMAND
      5927**DCL      7272--DCLINIT
B$ALT.CODE
      6492**DCL      6492--REDEF    6493--REDEF    6493--REDEF
B$ALT.DCB#
      6493**DCL      9058>>ASSIGN
B$ALT.ERR
      6493**DCL      9059>>ASSIGN
B$ALT.ERR.CODE
      6494**DCL      8669>>ASSIGN   8717>>ASSIGN   8720>>IF       8765>>ASSIGN   8768>>IF
B$ALT.ERR.ERR#
      6494**DCL      6494--REDEF
B$ALT.EVID
      6493**DCL      6493--REDEF    6493--REDEF
B$JIT.ERR.MID
      1827**DCL      1827--REDEF
B$JIT.PRIV.JOB
      1870**DCL      8291>>ASSIGN
B$JIT$
      5928**DCL      1821--IMP-PTR  8291>>ASSIGN
B$SR_NON_BLANK
      5913**DCL      8827>>CALLBLT
B$SR_NON_BLANK$
      5912**DCL      5913--IMP-PTR  8827>>CALLBLT
B$TCB.ALT$
      6499**DCL      8669>>ASSIGN   8717>>ASSIGN   8720>>IF       8765>>ASSIGN   8768>>IF       9058>>ASSIGN
      9059>>ASSIGN
B$TCB$
      5929**DCL      8669>>ASSIGN   8717>>ASSIGN   8720>>IF       8765>>ASSIGN   8768>>IF       9058>>ASSIGN
PL6.E3A0      #001=FTX$LABEL File=FTX$LABEL.:E05TSI                              TUE 07/29/97 18:01 Page:149  
      9059>>ASSIGN
B$XL_EBC_ASC
      5909**DCL      9032>>CALLBLT
B$XL_EBC_ASC$
      5908**DCL      5909--IMP-PTR  9032>>CALLBLT
BASESN
      6019**DCL      8383<<ASSIGN   8473<<ASSIGN   8474>>ASSIGN   8475>>CALLBLT  8962>>ASSIGN
BLANKS
      8227**DCL      8139--DCLINIT  8140--DCLINIT
BRKCTL
      6605**DCL      8308<>CALL
BRKCTL.V
      6605**DCL      6605--DCLINIT
BRKFLAG
      6020**DCL      8322<<ASSIGN   8397>>IF       8582>>IF       8681>>IF
BYPCONCHK
      6021**DCL      8390<<ASSIGN   8511<<ASSIGN   8649>>IF       8663>>IF       8691>>IF
B_VERSION
      5930**DCL      8305--ASSIGN   8305--ASSIGN
CANTRUNLABEL
      8298**LABEL    8298--CALLALT
CHARS
      6501**DCL      8963<<ASSIGN   8963>>ASSIGN
CHKLABELRUN
      6622**DCL      8298<>CALL
CHKLABELRUN.V
      6622**DCL      6622--DCLINIT
CLSREMLBL
      6668**DCL      8682<>CALL     8706<>CALL     8719<>CALL     8758<>CALL     8767<>CALL
CLSREMLBL.SN_
      6668**DCL      6668--REDEF
CLSREMLBL.UTL_
      6669**DCL      6669--REDEF
CLSREMLBL.V
      6673**DCL      6668--DCLINIT
CLSREMLBL.V.EXPIRE#
PL6.E3A0      #001=FTX$LABEL File=FTX$LABEL.:E05TSI                              TUE 07/29/97 18:01 Page:150  
      6683**DCL      6683--REDEF
CLSREMLBL.V.TYPE#
      6681**DCL      6681--REDEF
CLSREMLBL.V.XTNSIZE#
      6678**DCL      6678--REDEF    6680--REDEF
CLSREWLBL
      6714**DCL      8692<>CALL
CLSREWLBL.SN_
      6714**DCL      6714--REDEF
CLSREWLBL.UTL_
      6715**DCL      6715--REDEF
CLSREWLBL.V
      6719**DCL      6714--DCLINIT
CLSREWLBL.V.EXPIRE#
      6729**DCL      6729--REDEF
CLSREWLBL.V.TYPE#
      6727**DCL      6727--REDEF
CLSREWLBL.V.XTNSIZE#
      6724**DCL      6724--REDEF    6726--REDEF
CMNDERROR
      6022**DCL      8321<<ASSIGN   8582>>IF       9085<<ASSIGN
COMMAND
      6023**DCL      8330<<ASSIGN   8333<<ASSIGN   8336<<ASSIGN   8339<<ASSIGN   8344<<ASSIGN   8347<<ASSIGN
      8529>>IF       8529>>IF       8552>>IF       8553>>IF       8553>>IF       8594>>DOCASE   8698>>IF
CPOS
      6024**DCL      8410<<ASSIGN   8411<>CALL     8425<<ASSIGN   8426<>CALL     8453<<ASSIGN   8454<>CALL
      8462<<ASSIGN   8463<>CALL     8467<<ASSIGN   8468<>CALL     8477<<ASSIGN   8478<>CALL
DENSITY
      6483**DCL      8382<<ASSIGN   8493<<ASSIGN   8497<<ASSIGN   8501<<ASSIGN   8505<<ASSIGN   8649>>IF
      8650>>ASSIGN   8691>>IF       8693>>ASSIGN
DONESEQ IN PROCEDURE FTX_SEQ_LBL_OPTIONS
      8611**LABEL    8596--CALLALT  8597--CALLALT  8599--CALLALT  8600--CALLALT  8603--CALLALT  8604--CALLALT
      8605--CALLALT  8609--CALLALT  8610--CALLALT  8611--CALLALT  8616--CALLALT  8617--CALLALT
DSTARTNUM
      6025**DCL      6026--REDEF    8943<<CALLBLT  8945--DOWHILE  8949--ASSIGN   8961--ASSIGN   8961--ASSIGN
DSTARTNUMC
PL6.E3A0      #001=FTX$LABEL File=FTX$LABEL.:E05TSI                              TUE 07/29/97 18:01 Page:151  
      6026**DCL      8945>>DOWHILE
ECODE IN PROCEDURE FTX_ERROR
      9077**DCL      9068--PROC     9092>>ASSIGN
ERMSG
      8242**DCL      9092--ASSIGN
ERRTELL
      6769**DCL      9093<>CALL
ERRTELL.BUF_
      6769**DCL      9092<<ASSIGN
ERRTELL.STATION_
      6771**DCL      6771--REDEF
ERRTELL.V
      6772**DCL      6769--DCLINIT
ERRTELL.V.DVBYTE.VFC#
      6778**DCL      6778--REDEF
EXITCC
      6746**DCL      8296<>CALL     8302<>CALL     8342<>CALL     8351<>CALL     8357<>CALL     9098<>CALL
EXITCC.V
      6746**DCL      6746--DCLINIT
EXITCC.V.STEPCC#
      6747**DCL      6747--REDEF    9055<<ASSIGN   9084<<ASSIGN
F$DCB.ACTPOS
      1789**DCL      1789--REDEF
F$DCB.ARS
      1764**DCL      1764--REDEF    9018>>IF
F$DCB.ATTR
      1782**DCL      1783--REDEF
F$DCB.BORROW
      1797**DCL      1797--REDEF    1797--REDEF    1797--REDEF
F$DCB.DCBNAME.L
      1811**DCL      1811--IMP-SIZ
F$DCB.EOMCHAR
      1768**DCL      1768--REDEF
F$DCB.FLDID
      1792**DCL      1792--REDEF
F$DCB.FORM$
PL6.E3A0      #001=FTX$LABEL File=FTX$LABEL.:E05TSI                              TUE 07/29/97 18:01 Page:152  
      1786**DCL      1786--REDEF
F$DCB.FSECT
      1802**DCL      1802--REDEF
F$DCB.FSN
      1779**DCL      1779--REDEF    1779--REDEF    1780--REDEF
F$DCB.HEADER$
      1785**DCL      1785--REDEF
F$DCB.IXTNSIZE
      1783**DCL      1783--REDEF
F$DCB.LASTSTA$
      1773**DCL      1773--REDEF
F$DCB.LVL
      1798**DCL      1798--REDEF
F$DCB.NAME.C
      1773**DCL      1773--REDEF
F$DCB.NOEOF
      1794**DCL      1794--REDEF
F$DCB.NRECS
      1784**DCL      1784--REDEF
F$DCB.NRECX
      1803**DCL      1803--REDEF
F$DCB.OHDR
      1795**DCL      1795--REDEF
F$DCB.ORG
      1778**DCL      1778--REDEF
F$DCB.PRECNO
      1801**DCL      1801--REDEF
F$DCB.RCSZ
      1806**DCL      1806--REDEF
F$DCB.RES
      1774**DCL      1774--REDEF
F$DCB.SETX
      1786**DCL      1786--REDEF
F$DCB.TAB$
      1785**DCL      1786--REDEF
F$DCB.TDA
PL6.E3A0      #001=FTX$LABEL File=FTX$LABEL.:E05TSI                              TUE 07/29/97 18:01 Page:153  
      1800**DCL      1800--REDEF
F$DCB.WSN
      1775**DCL      1775--REDEF
FIRSTSEQSN
      6027**DCL      8387<<ASSIGN   8799<<ASSIGN   8821>>IF       8824>>CALLBLT
FMSEC
      6028**DCL      8291<<ASSIGN   8292>>IF       8648>>IF       8655>>IF       8694>>IF       8696>>IF
      8750>>IF       8753>>IF       8897>>IF       8900>>IF
FOUR_CHARS
      6029**DCL      8623<<CALLBLT  8624>>CALLBLT
FP$BLBL
      6442**DCL      8883<<ASSIGN
FP$LBL1.SYSTEM_ID
      6383**DCL      6384--REDEF
FP$VOL1.ACCESS
      6312**DCL      8889<<ASSIGN   8891<<ASSIGN
FP$VOL1.ACCOUNT
      6321**DCL      8893<<ASSIGN
FP$VOL1.LABEL_TYPE
      6310**DCL      8884<<ASSIGN
FP$VOL1.PLATTER
      6316**DCL      8886<<ASSIGN
FP$VOL1.SN
      6311**DCL      8885<<ASSIGN
FP$VOL1.SYSTEM
      6322**DCL      8896<<ASSIGN
FP$VOL1.SYSTEM_CODE.ID
      6319**DCL      8894<<ASSIGN
FP$VOL1.SYSTEM_CODE.VERSION
      6320**DCL      8895<<ASSIGN
FPT_MONINFO
      6638**DCL      8307<>CALL
FT$ANYLBL.LABEL_TYPE
      6295**DCL      9022>>IF       9033>>IF
FT$BLBL
      6282**DCL      8847<<ASSIGN   9027>>IF
PL6.E3A0      #001=FTX$LABEL File=FTX$LABEL.:E05TSI                              TUE 07/29/97 18:01 Page:154  
FT$LBL1.SYSTEM_ID
      6128**DCL      6129--REDEF
FT$LBL2.CP6
      6199**DCL      6217--REDEF
FT$ULBL.LABEL_NBIN
      6288**DCL      6289--REDEF
FT$VOL1.ACCESS
      6057**DCL      8852<<ASSIGN   8854<<ASSIGN
FT$VOL1.ACCOUNT
      6065**DCL      8856<<ASSIGN
FT$VOL1.LABEL_TYPE
      6055**DCL      8848<<ASSIGN
FT$VOL1.SN
      6056**DCL      8675>>ASSIGN   8849<<ASSIGN
FT$VOL1.SYSTEM
      6066**DCL      8859<<ASSIGN
FT$VOL1.SYSTEM_CODE.ID
      6063**DCL      8857<<ASSIGN
FT$VOL1.SYSTEM_CODE.VERSION
      6064**DCL      8858<<ASSIGN
FT$VOL1.VERSION
      6068**DCL      8860<<ASSIGN
FTX$LBLBRK
      5920**DCL-ENT  6605--DCLINIT
FTX_DUMP_BUF
      8818**PROC     8622--CALL     8790--CALL     8792--CALL     8805--CALL     8810--CALL
FTX_ERROR
      9068**PROC     8295--CALL     8301--CALL     8350--CALL     8411--CALL     8426--CALL     8454--CALL
      8463--CALL     8468--CALL     8478--CALL     8514--CALL     8523--CALL     8531--CALL     8540--CALL
      8559--CALL     8567--CALL     8571--CALL     8951--CALL
FTX_GEN_NEXT_IN_SN
      8970**PROC     8596--CALL     8599--CALL     8604--CALL     8610--CALL     8616--CALL
FTX_GEN_NEXT_OUT_SN
      8935**PROC     8603--CALL     8609--CALL
FTX_LABEL_OD
      8735**PROC     8600--CALL     8611--CALL
PL6.E3A0      #001=FTX$LABEL File=FTX$LABEL.:E05TSI                              TUE 07/29/97 18:01 Page:155  
FTX_LABEL_TAPE
      8633**PROC     8597--CALL     8605--CALL     8617--CALL
FTX_LIST_TAPE_LABELLED
      8781**PROC     8708--CALL     8759--CALL
FTX_READVOL1
      9008**PROC     8666--CALL
FTX_REM_OPTION
      8912**PROC     8348--CALL
FTX_RPTERR
      9048**PROC     8356--CALL     8713--CALL     8718--CALL     8721--CALL     8726--CALL     8762--CALL
      8766--CALL     8769--CALL     8773--CALL     8928--CALL     9097--CALL
FTX_SEQ_LBL_OPTIONS
      8363**PROC     8331--CALL     8334--CALL     8337--CALL     8340--CALL     8345--CALL
FTX_WRITVOL1
      8840**PROC     8699--CALL
FTX_WRITVOL1OD
      8876**PROC     8757--CALL
GETTIME
      6798**DCL      8304<>CALL
GETTIME.V
      6802**DCL      6798--DCLINIT
GREETINGS
      6030**DCL      6827--DCLINIT  6828--DCLINIT
GREETINGS.GDATE
      6038**DCL      6798--DCLINIT  6799--DCLINIT
GREETINGS.GDAY
      6036**DCL      6801--DCLINIT
GREETINGS.GTIME
      6034**DCL      6800--DCLINIT  6801--DCLINIT
GREETINGS.GVERS
      6032**DCL      8305<<ASSIGN
GREETUSR
      6826**DCL      8306<>CALL
GREETUSR.STATION_
      6828**DCL      6828--REDEF
GREETUSR.V
PL6.E3A0      #001=FTX$LABEL File=FTX$LABEL.:E05TSI                              TUE 07/29/97 18:01 Page:156  
      6829**DCL      6826--DCLINIT
GREETUSR.V.DVBYTE.VFC#
      6835**DCL      6835--REDEF
INCNUM
      6039**DCL      8380<<ASSIGN   8448<<CALLBLT  8574>>ASSIGN   8942>>ASSIGN
INCSPEC IN PROCEDURE FTX_GEN_NEXT_IN_SN
      8963**LABEL    8991--GOTO     8998--GOTO
INSEQUENCE
      6040**DCL      8590<<ASSIGN   8795>>IF       8798<<ASSIGN   8820>>IF       8825<<ASSIGN
JUSTALT IN PROCEDURE FTX_READVOL1
      9038**LABEL    9016--CALLALT  9017--CALLALT
JUSTALT IN PROCEDURE FTX_WRITVOL1
      8864**LABEL    8862--CALLALT  8863--CALLALT  8865--CALLALT  8866--CALLALT
JUSTALT IN PROCEDURE FTX_WRITVOL1OD
      8902**LABEL    8899--CALLALT
JUSTRET IN PROCEDURE FTX_DUMP_BUF
      8831**LABEL    8827--CALLALT
LABEL_PROMPT
      8228**DCL      7480--DCLINIT
LASTSEQSN
      6041**DCL      8796<<ASSIGN   8800<<ASSIGN   8821>>IF       8822>>CALLBLT  8824>>CALLBLT
LBLBUF
      6042**DCL      6054--REDEF    6109--REDEF    6189--REDEF    6282--REDEF    6286--REDEF    6294--REDEF
      6309--REDEF    6364--REDEF    6442--REDEF    6446--REDEF    7980--DCLINIT  7981--DCLINIT  8173--DCLINIT
      8174--DCLINIT  8208--DCLINIT  8209--DCLINIT  9032<<CALLBLT  9032>>CALLBLT
LBLERR IN PROCEDURE FTX_LABEL_OD
      8765**LABEL    8757--CALLALT
LBLERR IN PROCEDURE FTX_LABEL_TAPE
      8705**LABEL    8671--GOTO     8699--CALLALT  8701--CALLALT  8702--CALLALT  8704--CALLALT
M$CLOSE
      1151**DCL-ENT  8682--CALL     8692--CALL     8706--CALL     8719--CALL     8758--CALL     8767--CALL
M$DO
      5936**DCL      9057>>ASSIGN   9088>>ASSIGN
M$EI
      5937**DCL      9018--IF
M$EXIT
PL6.E3A0      #001=FTX$LABEL File=FTX$LABEL.:E05TSI                              TUE 07/29/97 18:01 Page:157  
      1163**DCL-ENT  8296--CALL     8302--CALL     8342--CALL     8351--CALL     8357--CALL     9098--CALL
M$INT
      1206**DCL-ENT  8308--CALL
M$MONINFO
      1219**DCL-ENT  8307--CALL
M$OPEN
      1151**DCL-ENT  8651--CALL     8654--CALL     8695--CALL     8752--CALL
M$READ
      1152**DCL-ENT  9017--CALL
M$REM
      1160**DCL-ENT  8924--CALL
M$REW
      1154**DCL-ENT  8701--CALL     8862--CALL     9016--CALL
M$RPRIV
      1210**DCL-ENT  8292--CALL     8655--CALL     8696--CALL     8754--CALL     8901--CALL
M$SPRIV
      1210**DCL-ENT  8298--CALL     8648--CALL     8694--CALL     8751--CALL     8898--CALL
M$TIME
      1218**DCL-ENT  8304--CALL
M$WEOF
      1154**DCL-ENT  8702--CALL     8704--CALL     8865--CALL     8866--CALL
M$WRITE
      1152**DCL-ENT  8306--CALL     8625--CALL     8829--CALL     8863--CALL     8899--CALL     9093--CALL
MONERR
      8351**LABEL    8304--CALLALT  8320--CALLALT
MONERR IN PROCEDURE FTX_ERROR
      9092**LABEL    9090--CALLALT  9093--CALLALT
MONERR IN PROCEDURE FTX_LABEL_OD
      8773**LABEL    8758--CALLALT
MONERR IN PROCEDURE FTX_LABEL_TAPE
      8717**LABEL    8682--CALLALT  8692--CALLALT  8706--CALLALT
MONERR IN PROCEDURE FTX_REM_OPTION
      8923**LABEL    8924--CALLALT
N
      6450**DCL      6501--IMP-SIZ  8374<<DOINDEX  8375>>ASSIGN   8404<<DOINDEX  8405>>ASSIGN   8405>>ASSIGN
      8410>>ASSIGN   8421<<DOINDEX  8422>>ASSIGN   8423>>ASSIGN   8423>>ASSIGN   8425>>ASSIGN   8438<<CALLBLT
PL6.E3A0      #001=FTX$LABEL File=FTX$LABEL.:E05TSI                              TUE 07/29/97 18:01 Page:158  
      8439>>IF       8440>>ASSIGN   8460<<CALLBLT  8461>>IF       8461>>IF       8465>>ASSIGN   8669<<ASSIGN
      8670>>IF       8670>>IF       8670>>IF       8717<<ASSIGN   8720>>IF       8765<<ASSIGN   8768>>IF
      8960<<ASSIGN   8963>>ASSIGN   8963>>ASSIGN
NEXTFREENSN
      6451**DCL      8378<<ASSIGN   8406<<ASSIGN   8406>>ASSIGN   8407>>ASSIGN   8415>>ASSIGN   8416>>ASSIGN
      8428<<ASSIGN   8428>>ASSIGN   8429>>ASSIGN   8432>>ASSIGN   8433>>ASSIGN
NO3LEADINGZS
      8229**DCL      8624>>CALLBLT
NSNLIST.SN#
      5957**DCL      8407<<ASSIGN   8429<<ASSIGN   8992>>ASSIGN
NUMLABELED
      6452**DCL      8385<<ASSIGN   8623>>CALLBLT  8703<<ASSIGN   8703>>ASSIGN   8864<<ASSIGN   8864>>ASSIGN
      8902<<ASSIGN   8902>>ASSIGN
NUMLBLMSG
      6453**DCL      8089--DCLINIT  8090--DCLINIT
NUMLBLMSG.NUMLBL
      6455**DCL      8624<<CALLBLT
NUMSNSPECS
      6457**DCL      8388<<ASSIGN   8414>>ASSIGN   8415>>ASSIGN   8416>>ASSIGN   8417<<ASSIGN   8417>>ASSIGN
      8431>>ASSIGN   8432>>ASSIGN   8433>>ASSIGN   8434<<ASSIGN   8434>>ASSIGN   8437>>ASSIGN   8440>>ASSIGN
      8441<<ASSIGN   8441>>ASSIGN   8538>>IF       8545<<ASSIGN   8554>>IF       8980>>IF
OBUFSIZE
      6458**DCL      8591<<ASSIGN   8827<<CALLBLT  8828>>ASSIGN   8831<<ASSIGN
OBUFX
      6459**DCL      8592<<ASSIGN
OPENCREATELBL
      7668**DCL      8651<>CALL     8695<>CALL
OPENCREATELBL.ACSVEH_
      7670**DCL      7671--REDEF
OPENCREATELBL.ALTKEYS_
      7676**DCL      7677--REDEF    7677--REDEF
OPENCREATELBL.HDR_
      7675**DCL      7676--REDEF
OPENCREATELBL.TAB_
      7674**DCL      7675--REDEF
OPENCREATELBL.UHL_
PL6.E3A0      #001=FTX$LABEL File=FTX$LABEL.:E05TSI                              TUE 07/29/97 18:01 Page:159  
      7668**DCL      7669--REDEF    7669--REDEF
OPENCREATELBL.V
      7677**DCL      7668--DCLINIT
OPENCREATELBL.V.DENSITY#
      7709**DCL      8650<<ASSIGN   8693<<ASSIGN
OPENCREATELBL.V.FSN#
      7708**DCL      7708--REDEF    7708--REDEF
OPENCREATELBL.WSN_
      7674**DCL      7674--REDEF
OPENLBL
      7784**DCL      8654<>CALL
OPENLBL.ACSVEH_
      7786**DCL      7787--REDEF
OPENLBL.ALTKEYS_
      7792**DCL      7793--REDEF    7793--REDEF
OPENLBL.HDR_
      7791**DCL      7792--REDEF
OPENLBL.TAB_
      7790**DCL      7791--REDEF
OPENLBL.UHL_
      7784**DCL      7785--REDEF    7785--REDEF
OPENLBL.V
      7793**DCL      7784--DCLINIT
OPENLBL.V.FSN#
      7824**DCL      7824--REDEF    7824--REDEF
OPENLBL.WSN_
      7790**DCL      7790--REDEF
OPENOD
      7899**DCL      8752<>CALL
OPENOD.ACSVEH_
      7901**DCL      7902--REDEF
OPENOD.ALTKEYS_
      7907**DCL      7908--REDEF    7908--REDEF
OPENOD.HDR_
      7906**DCL      7907--REDEF
OPENOD.TAB_
PL6.E3A0      #001=FTX$LABEL File=FTX$LABEL.:E05TSI                              TUE 07/29/97 18:01 Page:160  
      7905**DCL      7906--REDEF
OPENOD.UHL_
      7899**DCL      7900--REDEF    7900--REDEF
OPENOD.V
      7908**DCL      7899--DCLINIT
OPENOD.V.FSN#
      7939**DCL      7939--REDEF    7939--REDEF
OPENOD.WSN_
      7905**DCL      7905--REDEF
OPNERR IN PROCEDURE FTX_LABEL_OD
      8762**LABEL    8752--CALLALT
OPNERR IN PROCEDURE FTX_LABEL_TAPE
      8705**LABEL    8651--CALLALT  8654--CALLALT  8695--CALLALT
OPTIONBLK$
      6460**DCL      8399<<ASSIGN   8400>>ASSIGN   8401>>DOCASE   8403>>ASSIGN   8405>>ASSIGN   8405>>ASSIGN
      8410>>ASSIGN   8420>>ASSIGN   8422>>ASSIGN   8423>>ASSIGN   8423>>ASSIGN   8425>>ASSIGN   8438>>CALLBLT
      8438>>CALLBLT  8445>>CALLBLT  8445>>CALLBLT  8448>>CALLBLT  8448>>CALLBLT  8451>>CALLBLT  8451>>CALLBLT
      8453>>ASSIGN   8457>>IF       8460>>CALLBLT  8460>>CALLBLT  8462>>ASSIGN   8467>>ASSIGN   8473>>ASSIGN
      8473>>ASSIGN   8477>>ASSIGN   8508>>ASSIGN   8508>>ASSIGN
OPTIONNUM
      6461**DCL      8396<<DOINDEX  8399>>ASSIGN
OPTIONSPECIFIED
      6462**DCL      8375<<ASSIGN   8400<<ASSIGN   8485<<ASSIGN   8489<<ASSIGN   8496<<ASSIGN   8500<<ASSIGN
      8504<<ASSIGN   8522>>IF       8522>>IF       8530>>IF       8539>>IF
OUT$BLK.CODE
      6516**DCL      8328>>DOCASE   8400>>ASSIGN   8401>>DOCASE
OUT$BLK.NSUBLKS
      6520**DCL      8396>>DOINDEX  8403>>ASSIGN   8420>>ASSIGN   8457>>IF
OUT$BLK.SUBLK$
      6541**DCL      8399>>ASSIGN   8405>>ASSIGN   8405>>ASSIGN   8410>>ASSIGN   8422>>ASSIGN   8423>>ASSIGN
      8423>>ASSIGN   8425>>ASSIGN   8438>>CALLBLT  8438>>CALLBLT  8445>>CALLBLT  8445>>CALLBLT  8448>>CALLBLT
      8448>>CALLBLT  8451>>CALLBLT  8451>>CALLBLT  8453>>ASSIGN   8460>>CALLBLT  8460>>CALLBLT  8462>>ASSIGN
      8467>>ASSIGN   8473>>ASSIGN   8473>>ASSIGN   8477>>ASSIGN   8508>>ASSIGN   8508>>ASSIGN   8923>>ASSIGN
      8923>>ASSIGN
OUT$SYM.COUNT
      6577**DCL      6580--IMP-SIZ  8405>>ASSIGN   8422>>ASSIGN   8423>>ASSIGN   8438>>CALLBLT  8445>>CALLBLT
PL6.E3A0      #001=FTX$LABEL File=FTX$LABEL.:E05TSI                              TUE 07/29/97 18:01 Page:161  
      8448>>CALLBLT  8451>>CALLBLT  8460>>CALLBLT  8473>>ASSIGN   8508>>ASSIGN   8923>>ASSIGN
OUT$SYM.CPOS
      6569**DCL      8410>>ASSIGN   8425>>ASSIGN   8453>>ASSIGN   8462>>ASSIGN   8467>>ASSIGN   8477>>ASSIGN
OUT$SYM.TEXT
      6580**DCL      8405>>ASSIGN   8423>>ASSIGN   8438>>CALLBLT  8445>>CALLBLT  8448>>CALLBLT  8451>>CALLBLT
      8460>>CALLBLT  8473>>ASSIGN   8508>>ASSIGN   8923>>ASSIGN
OUTBUF
      6465**DCL      8038--DCLINIT  8039--DCLINIT  8593<<ASSIGN   8791<<CALLBLT  8807<<CALLBLT  8809<<CALLBLT
      8822<<CALLBLT  8824<<CALLBLT  8827>>CALLBLT  8830<<ASSIGN
PLACESIZE
      6466**DCL      8458<<ASSIGN   8465<<ASSIGN   8466>>IF       8565<<ASSIGN   8950>>IF       8960>>ASSIGN
      8961>>ASSIGN
PLACESTART
      6467**DCL      8384<<ASSIGN   8451<<CALLBLT  8452>>IF       8452>>IF       8455<<ASSIGN   8465>>ASSIGN
      8563>>IF       8564<<ASSIGN   8565>>ASSIGN   8566>>IF       8569<<ASSIGN   8569>>ASSIGN   8570>>IF
      8959>>ASSIGN
PO80
      8238**DCL      9027>>IF
PO80B
      8232**DCL      8238--REDEF
PREVSN
      6468**DCL      8664<<ASSIGN   8675<<ASSIGN   8677<<ASSIGN   8756<<ASSIGN   8789>>IF       8791>>CALLBLT
      8806>>IF       8807>>CALLBLT
RDERR IN PROCEDURE FTX_LABEL_TAPE
      8651**LABEL    8666--CALLALT
READLBL
      7978**DCL      9017<>CALL
READLBL.STATION_
      7981**DCL      7982--REDEF
READLBL.V
      7982**DCL      7978--DCLINIT
READLBL.V.DVBYTE.REREAD#
      7993**DCL      7993--REDEF
READLBL.V.INDX#
      7991**DCL      7991--REDEF
REMLBL
PL6.E3A0      #001=FTX$LABEL File=FTX$LABEL.:E05TSI                              TUE 07/29/97 18:01 Page:162  
      7955**DCL      8924<>CALL
REMLBL.V
      7955**DCL      7955--DCLINIT
REMLBL.V.PSN#
      7956**DCL      8923<<ASSIGN
REWLBL
      8013**DCL      8701<>CALL     8862<>CALL     9016<>CALL
REWLBL.V
      8013**DCL      8013--DCLINIT
RPOS IN PROCEDURE FTX_ERROR
      9078**DCL      9068--PROC     9086>>IF       9089>>ASSIGN
SHFMSEC
      8292**LABEL    8292--CALLALT
SHOWOUT
      8037**DCL      8829<>CALL
SHOWOUT.BUF_.BOUND
      8037**DCL      8828<<ASSIGN
SHOWOUT.STATION_
      8039**DCL      8039--REDEF
SHOWOUT.V
      8040**DCL      8037--DCLINIT
SHOWOUT.V.DVBYTE.VFC#
      8046**DCL      8046--REDEF
SNBLANKX
      6469**DCL      8389<<ASSIGN   8475<<CALLBLT  8476>>IF       8564>>ASSIGN   8570>>IF
SNNUM
      6470**DCL      8403<<ASSIGN   8404>>DOINDEX  8416>>ASSIGN   8420<<ASSIGN   8421>>DOINDEX  8433>>ASSIGN
SNSPECS.FIRSTNAMEX
      6473**DCL      8416<<ASSIGN   8433<<ASSIGN   8554>>IF       8989>>ASSIGN   8993<<ASSIGN
SNSPECS.LASTNAMEX
      6474**DCL      6475--REDEF    8415<<ASSIGN   8432<<ASSIGN   8554>>IF       8990>>IF       9000<<ASSIGN
SNSPECS.NAMED
      6472**DCL      8414<<ASSIGN   8431<<ASSIGN   8437<<ASSIGN   8543<<ASSIGN   8554>>IF       8554>>IF
      8988>>IF
SNSPECS.NUMNOTNAMED
      6475**DCL      8440<<ASSIGN   8544<<ASSIGN   8554>>IF       8996>>ASSIGN
PL6.E3A0      #001=FTX$LABEL File=FTX$LABEL.:E05TSI                              TUE 07/29/97 18:01 Page:163  
SPEC
      6476**DCL      8589<<ASSIGN   8979<<ASSIGN   8979>>ASSIGN   8980>>IF       8988>>IF       8989>>ASSIGN
      8990>>IF       8993>>ASSIGN   8996>>ASSIGN   9000>>ASSIGN
STARTNUM
      6478**DCL      8379<<ASSIGN   8445<<CALLBLT  8574<<ASSIGN   8574>>ASSIGN   8942<<ASSIGN   8942>>ASSIGN
      8943>>CALLBLT
SWITCHFMSEC
      8064**DCL      8292<>CALL     8648<>CALL     8655<>CALL     8694<>CALL     8696<>CALL     8751<>CALL
      8754<>CALL     8898<>CALL     8901<>CALL
SWITCHFMSEC.V
      8064**DCL      8064--DCLINIT
TAPESN
      5970**DCL      7668--DCLINIT  7784--DCLINIT  7899--DCLINIT
TAPESN.SN#
      5970**DCL      8788>>IF       8799>>ASSIGN   8807>>CALLBLT  8809>>CALLBLT  8886>>ASSIGN   8992<<ASSIGN
      8999<<ASSIGN
TELNUMLBL
      8088**DCL      8625<>CALL
TELNUMLBL.STATION_
      8090**DCL      8090--REDEF
TELNUMLBL.V
      8091**DCL      8088--DCLINIT
TELNUMLBL.V.DVBYTE.VFC#
      8097**DCL      8097--REDEF
TEMP
      6479**DCL      8408<<CALLBLT  8409>>IF       8422<<ASSIGN   8424>>IF       8424>>IF       8425>>ASSIGN
      8827<<CALLBLT  8944<<ASSIGN   8945>>DOWHILE  8945>>DOWHILE  8946<<ASSIGN   8946>>ASSIGN   8949<<ASSIGN
      8949>>ASSIGN   8950>>IF       8989<<ASSIGN   8990>>IF       8992>>ASSIGN   8993>>ASSIGN   8996<<ASSIGN
      8997>>IF       9000>>ASSIGN
TEMP$
      6480**DCL      8959<<ASSIGN   8963>>ASSIGN
TEMP2$
      6481**DCL      8961<<ASSIGN   8963>>ASSIGN
TEXTC.C
      6587**DCL      8305>>ASSIGN
TEXTC.L
PL6.E3A0      #001=FTX$LABEL File=FTX$LABEL.:E05TSI                              TUE 07/29/97 18:01 Page:164  
      6586**DCL      6587--IMP-SIZ  8305>>ASSIGN
VLR_SITEINFO
      6009**DCL      6638--DCLINIT
VLR_SITEINFO.VERSION#
      6012**DCL      8858>>ASSIGN   8895>>ASSIGN
VOLACCESS
      6482**DCL      8381<<ASSIGN   8482<<ASSIGN   8486<<ASSIGN   8490<<ASSIGN   8850>>DOCASE   8887>>DOCASE
VOLACN.ACCT#
      5983**DCL      8226--DCLINIT  8386<<ASSIGN   8508<<ASSIGN   8856>>ASSIGN   8893>>ASSIGN
VOLSN.SN#
      5996**DCL      8230--DCLINIT  8474<<ASSIGN   8565--ASSIGN   8614<<ASSIGN   8788>>IF       8791>>CALLBLT
      8796>>ASSIGN   8800>>ASSIGN   8807>>CALLBLT  8809>>CALLBLT  8849>>ASSIGN   8885>>ASSIGN   8959--ASSIGN
      8962<<ASSIGN   8999>>ASSIGN
VOLUME_TYPE
      6484**DCL      8673>>DOCASE   9015<<ASSIGN   9023<<ASSIGN   9028<<ASSIGN   9034<<ASSIGN   9038<<ASSIGN
WEOFLBL
      8115**DCL      8702<>CALL     8704<>CALL     8865<>CALL     8866<>CALL
WEOFLBL.V
      8115**DCL      8115--DCLINIT
WRITBLNK.STATION_
      8140**DCL      8140--REDEF
WRITBLNK.V
      8141**DCL      8138--DCLINIT
WRITBLNK.V.DVBYTE.VFC#
      8147**DCL      8147--REDEF
WRITLBL
      8172**DCL      8863<>CALL
WRITLBL.STATION_
      8174**DCL      8174--REDEF
WRITLBL.V
      8175**DCL      8172--DCLINIT
WRITLBL.V.DVBYTE.VFC#
      8181**DCL      8181--REDEF
WRITLBLOD
      8207**DCL      8899<>CALL
WRITLBLOD.STATION_
PL6.E3A0      #001=FTX$LABEL File=FTX$LABEL.:E05TSI                              TUE 07/29/97 18:01 Page:165  
      8209**DCL      8209--REDEF
WRITLBLOD.V
      8210**DCL      8207--DCLINIT
WRITLBLOD.V.DVBYTE.VFC#
      8216**DCL      8216--REDEF
XTX$ADAPT
      6860**DCL-ENT  7176--DCLINIT
XUG$ERRMSG
      5782**DCL-ENT  9061--CALL
XUG$ERRPTR
      5776**DCL-ENT  9090--CALL
XUG$GETCMD
      5775**DCL-ENT  8320--CALL
XUG$INIT
      5779**DCL-ENT  8309--CALL
XUG_GETCMD
      7271**DCL      8309<>CALL     8320<>CALL     9061<>CALL     9090<>CALL
XUG_GETCMD.DCB_PARAM#
      7451**DCL      9057<<ASSIGN   9088<<ASSIGN
XUG_GETCMD.EPOS#
      7381**DCL      9089<<ASSIGN
XUG_GETCMD.ERRDCB#
      7430**DCL      9058<<ASSIGN
XUG_GETCMD.ERR_CODE
      7419**DCL      9059<<ASSIGN
XUG_GETCMD.ERR_CODE.SEV#
      7423**DCL      9060<<ASSIGN
XUG_GETCMD.OUT$
      7276**DCL      7282--REDEF    8328>>DOCASE   8396>>DOINDEX  8399>>ASSIGN   8923>>ASSIGN   8923>>ASSIGN
XUG_GETCMD.USE_EPOS#
      7314**DCL      9056<<ASSIGN   9087<<ASSIGN
XUG_INIT
      6865**DCL      8309<>CALL

PL6.E3A0      #002=FTX$LBLBRK File=FTX$LABEL.:E05TSI                             TUE 07/29/97 18:05 Page:166  
     1134        1        /*M* FTX$LBLBRK - break handler for LABEL */
     1135        2        /*T***********************************************************/
     1136        3        /*T*                                                         */
     1137        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
     1138        5        /*T*                                                         */
     1139        6        /*T***********************************************************/
     1140        7        FTX$LBLBRK: PROC ASYNC;
     1141        8        /*F*     NAME: FTX$LBLBRK
     1142        9                 PURPOSE: Sets break flag for LABEL.
     1143       10         ***/
     1144       11
     1145       12    1     DCL BRKFLAG BIT(1) SYMREF;
     1146       13
     1147       14        %INCLUDE CP_6;
     1148       95
     1149       96    1           BRKFLAG = '1'B;
     1150       97    1           RETURN;
     1151       98
     1152       99    1   END FTX$LBLBRK;

PL6.E3A0      #002=FTX$LBLBRK File=FTX$LABEL.:E05TSI                             TUE 07/29/97 18:05 Page:167  
--  Include file information  --

   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure FTX$LBLBRK.

   Procedure FTX$LBLBRK requires 5 words for executable code.
   Procedure FTX$LBLBRK requires 4 words of local(AUTO) storage.

    No errors detected in file FTX$LABEL.:E05TSI    .

PL6.E3A0      #002=FTX$LBLBRK File=FTX$LABEL.:E05TSI                             TUE 07/29/97 18:05 Page:168  

 Object Unit name= FTX$LBLBRK                                 File name= FTX$LABEL.:E05TOU
 UTS= JUL 29 '97 18:05:36.64 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1   Proc  even  none     5      5  FTX$LBLBRK

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     1      0   yes            yes     Async       0  FTX$LBLBRK

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
                       nStd      0 X66_AAUTO
                       nStd      0 X66_AARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     BRKFLAG                               M$UC
PL6.E3A0      #002=FTX$LBLBRK File=FTX$LABEL.:E05TSI                             TUE 07/29/97 18:05 Page:169  


     1134        1        /*M* FTX$LBLBRK - break handler for LABEL */
     1135        2        /*T***********************************************************/
     1136        3        /*T*                                                         */
     1137        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
     1138        5        /*T*                                                         */
     1139        6        /*T***********************************************************/
     1140        7        FTX$LBLBRK: PROC ASYNC;

      7  1 000000   000000 700200 xent  FTX$LBLBRK   TSX0  ! X66_AAUTO
         1 000001   000004 000000                    ZERO    4,0

     1141        8        /*F*     NAME: FTX$LBLBRK
     1142        9                 PURPOSE: Sets break flag for LABEL.
     1143       10         ***/
     1144       11
     1145       12    1     DCL BRKFLAG BIT(1) SYMREF;
     1146       13
     1147       14        %INCLUDE CP_6;
     1148       95
     1149       96    1           BRKFLAG = '1'B;

     96  1 000002   400000 236003                    LDQ     -131072,DU
         1 000003   000000 756000 xsym               STQ     BRKFLAG

     1150       97    1           RETURN;

     97  1 000004   000000 702200 xent               TSX2  ! X66_AARET
     1151       98
     1152       99    1   END FTX$LBLBRK;

PL6.E3A0      #002=FTX$LBLBRK File=FTX$LABEL.:E05TSI                             TUE 07/29/97 18:05 Page:170  
--  Include file information  --

   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure FTX$LBLBRK.
PL6.E3A0      #002=FTX$LBLBRK File=FTX$LABEL.:E05TSI                             TUE 07/29/97 18:05 Page:171  

 **** Variables and constants ****

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/b BIT         r     1 BRKFLAG


   Procedure FTX$LBLBRK requires 5 words for executable code.
   Procedure FTX$LBLBRK requires 4 words of local(AUTO) storage.

    No errors detected in file FTX$LABEL.:E05TSI    .
PL6.E3A0      #002=FTX$LBLBRK File=FTX$LABEL.:E05TSI                             TUE 07/29/97 18:05 Page:172  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #002=FTX$LBLBRK File=FTX$LABEL.:E05TSI                             TUE 07/29/97 18:05 Page:173  
          MINI XREF LISTING

BRKFLAG
        12**DCL        96<<ASSIGN
