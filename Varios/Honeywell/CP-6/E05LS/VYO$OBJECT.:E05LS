VERSION E05

PL6.E3A0      #001=VYO$OBJECT File=VYO$OBJECT.:E05TSI                            WED 07/30/97 08:58 Page:1    
        1        1        /*M* VYO$OBJECT - performs the function of the current LEMUR command on an object un
                 1        it */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* PLM=4,STI=0,IND=4,CTI=3,DCI=4,ECI=4,CSI=0,THI=0,DTI=0,ENI=4,
        8        8             CLM=0,SQB,NTB,MOC,CCI=3,NLB,MCL=0,EDMC*/
        9        9        /*P*  NAME:       VYO$OBJECT
       10       10              PURPOSE:    Perform the function of the current LEMUR command on
       11       11                          an object unit.
       12       12        */
       13       13
       14       14        VYO$OBJECT:
       15       15            PROC( FID$, SOURCE, ALLOCATE$ ) ALTRET;
       16       16        %INCLUDE VY_INC_C;
       17     9192        %INCLUDE B_ERRORS_C;
       18    10319        %VY$NODE;

             10331    1   /*******************************************************************************
             10332    1   *                                                                              *
             10333    1   *                          VY$NODE                                                 *
             10334    1   *                                                                              *
             10335    1   *******************************************************************************/

             10351    1   DCL 1 VY$NODE      ALIGNED    BASED,
             10352    1         2 SON$ PTR /*(ADDR(NIL))*/, /* Son pointer                      */
             10353    1         2 BROTHER$ PTR /*(ADDR(NIL))*/, /* Brother pointer              */
             10354    1         2 FATHER$ PTR /*(ADDR(NIL))*/, /* Father pointer                */
             10355    1         2 PATH$ PTR /*(ADDR(NIL))*/, /* Path   pointer                  */
             10356    1         2 HEAD$       PTR /*(ADDR(NIL))*/, /* Head pointer to
             10357                              to list of file nodes for this node            */
             10358    1         2 TAIL$ PTR /*(ADDR(NIL))*/, /* Tail pointer to list            */
             10359    1         2 SHARED_LIB_HEAD$ PTR /*(ADDR(NIL))*/,
             10359                  /* Head pointer to shared library list */
             10360    1         2 LIB_HEAD$         PTR /*(ADDR(NIL))*/,
PL6.E3A0      #001=VYO$OBJECT File=VYO$OBJECT.:E05TSI                            WED 07/30/97 08:58 Page:2    
             10360                  /* Head pointer to list of shared libraries
             10361                                          which have been mapped to included libraries */
             10362    1         2 NUM          UBIN(36)  UNAL,    /* Node number                        */
             10363    1         2 DEPTH          UBIN(36)  UNAL,  /* Depth; ROOT=0*/
             10364    1         2 ADDR_START_A(0:2/*@ROS*/) SBIN WORD /*(0*3)*/, /* Array            */
             10365    1         2 ADDR_START REDEF  ADDR_START_A,
             10366    1           3 RDATA       SBIN WORD,   /* First address for this node in data     */
             10367    1           3 RPROC       SBIN WORD,   /* First address for this node in proc     */
             10368    1           3 ROS       SBIN WORD,          /* Last address for program in ros    */
             10369    1         2 ADDR_STOP_A(0:2/*@ROS*/) SBIN WORD /*(-1*3)*/, /* Array            */
             10370    1         2 ADDR_STOP  REDEF  ADDR_STOP_A,
             10371    1           3 RDATA       SBIN WORD,        /* Last address for this node in data */
             10372    1           3 RPROC       SBIN WORD,        /* Last address for this node in proc */
             10373    1           3 ROS       SBIN WORD,          /* Last address for program in ros    */
             10374    1         2 START_PAGE#_A(0:2/*@ROS*/) SBIN WORD /*(0*3)*/, /* Array           */
             10375    1         2 START_PAGE# REDEF START_PAGE#_A,
             10376    1           3 RDATA       SBIN WORD,   /* First page    for this node in data     */
             10377    1           3 RPROC       SBIN WORD,   /* First page    for this node in proc     */
             10378    1           3 ROS       SBIN WORD,          /* First page   for program in ros    */
             10379    1         2 STOP_PAGE#_A(0:2/*@ROS*/) SBIN WORD /*(-1*3)*/, /* Array*/
             10380    1         2 STOP_PAGE#  REDEF STOP_PAGE#_A,
             10381    1           3 RDATA       SBIN WORD,   /* Last  page    for this node in data     */
             10382    1           3 RPROC       SBIN WORD,   /* Last  page    for this node in proc     */
             10383    1           3 ROS       SBIN WORD,          /* Last  page   for program in ros    */
             10384    1         2 START_SC_ALL$ PTR /*(ADDR(NIL))*/,
             10384                  /* Starting pointer for common sections for this node */
             10385    1         2 STOP_SC_ALL$ PTR /*(ADDR(NIL))*/,
             10385                  /* Stopping pointer for common sections for this node */
             10386    1         2 L_START,
             10387    1           3 SN$ PTR /*(ADDR(NIL))*/, /* Segment definition names        */
             10388    1           3 DN$ PTR /*(ADDR(NIL))*/, /* Def names                       */
             10389    1           3 RN$ PTR /*(ADDR(NIL))*/, /* Ref names                       */
             10390    1           3 SC$ PTR /*(ADDR(NIL))*/, /* Sections                        */
             10391    1           3 ED$ PTR /*(ADDR(NIL))*/, /* Entry defs*/
             10392    1           3 ER$ PTR /*(ADDR(NIL))*/, /* Entry refs*/
             10393    1           3 DD$ PTR /*(ADDR(NIL))*/, /* Data defs                       */
             10394    1           3 DR$ PTR /*(ADDR(NIL))*/, /* Data refs                       */
PL6.E3A0      #001=VYO$OBJECT File=VYO$OBJECT.:E05TSI                            WED 07/30/97 08:58 Page:3    
             10395    1           3 SD$ PTR /*(ADDR(NIL))*/, /* Seg defs                        */
             10396    1           3 SR$ PTR /*(ADDR(NIL))*/, /* Seg refs                        */
             10397    1         2 L_START_A$(0:9)     REDEF L_START PTR,
             10398    1         2 L_STOP,
             10399    1           3 SN$ PTR /*(ADDR(NIL))*/, /* Segment definition names        */
             10400    1           3 DN$ PTR /*(ADDR(NIL))*/, /* Def names                       */
             10401    1           3 RN$ PTR /*(ADDR(NIL))*/, /* Ref names                       */
             10402    1           3 SC$ PTR /*(ADDR(NIL))*/, /* Sections                        */
             10403    1           3 ED$ PTR /*(ADDR(NIL))*/, /* Entry defs*/
             10404    1           3 ER$ PTR /*(ADDR(NIL))*/, /* Entry refs*/
             10405    1           3 DD$ PTR /*(ADDR(NIL))*/, /* Data defs                       */
             10406    1           3 DR$ PTR /*(ADDR(NIL))*/, /* Data refs                       */
             10407    1           3 SD$ PTR /*(ADDR(NIL))*/, /* Seg defs                        */
             10408    1           3 SR$ PTR /*(ADDR(NIL))*/, /* Seg refs                        */
             10409    1         2 L_STOP_A$(0:9) REDEF   L_STOP    PTR,
             10410    1         2 L_SIZE,
             10411    1           3 SN      UBIN /*(0)*/, /* Segment definition names           */
             10412    1           3 DN      UBIN /*(0)*/, /* Def names                          */
             10413    1           3 RN      UBIN /*(0)*/, /* Ref names                          */
             10414    1           3 SC      UBIN /*(0)*/, /* Sections                           */
             10415    1           3 ED      UBIN /*(0)*/, /* Entry defs*/
             10416    1           3 ER      UBIN /*(0)*/, /* Entry refs*/
             10417    1           3 DD      UBIN /*(0)*/, /* Data defs                          */
             10418    1           3 DR      UBIN /*(0)*/, /* Data refs                          */
             10419    1           3 SD      UBIN /*(0)*/, /* Seg defs                           */
             10420    1           3 SR      UBIN /*(0)*/, /* Seg refs                           */
             10421    1         2 L_SIZE_A(0:9)  REDEF   L_SIZE    UBIN,
             10422    1         2 L_PREV_SIZE,
             10423    1           3 SN      UBIN /*(0)*/, /* Segment definition names           */
             10424    1           3 DN      UBIN /*(0)*/, /* Def names                          */
             10425    1           3 RN      UBIN /*(0)*/, /* Ref names                          */
             10426    1           3 SC      UBIN /*(0)*/, /* Sections                           */
             10427    1           3 ED      UBIN /*(0)*/, /* Entry defs*/
             10428    1           3 ER      UBIN /*(0)*/, /* Entry refs*/
             10429    1           3 DD      UBIN /*(0)*/, /* Data defs                          */
             10430    1           3 DR      UBIN /*(0)*/, /* Data refs                          */
             10431    1           3 SD      UBIN /*(0)*/, /* Seg defs                           */
PL6.E3A0      #001=VYO$OBJECT File=VYO$OBJECT.:E05TSI                            WED 07/30/97 08:58 Page:4    
             10432    1           3 SR      UBIN /*(0)*/, /* Seg refs                           */
             10433    1         2 L_PREV_SIZE_A(0:9)  REDEF   L_PREV_SIZE    UBIN,
             10434    1         2 BIT_MAP                ALIGNED,
             10435    1           3 DATA                  ALIGNED,
             10436    1             4 BITS(0:255)          BIT(1)    UNAL /*('0'B*256)*/,
             10437    1           3 RPROC                 ALIGNED,
             10438    1             4 BITS(0:255)          BIT(1)    UNAL /*('0'B*256)*/,
             10439    1           3 ROS                   ALIGNED,
             10440    1             4 BITS(0:255)          BIT(1)    UNAL /*('0'B*256)*/,
             10441    1         2 L_SC_START,
             10442    1           3 SC_BLK_COM$ PTR /*(ADDR(NIL))*/, /* Blank common            */
             10443    1           3 SC_ROOT_LBL_COM$ PTR /*(ADDR(NIL))*/, /* Root labelled common */
             10444    1           3 SC_LBL_COM$ PTR /*(ADDR(NIL))*/, /* Labelled common         */
             10445    1           3 SC_DCB$ PTR /*(ADDR(NIL))*/, /* Dcbs                        */
             10446    1         2 L_SC_START_A$(0:3)  REDEF L_SC_START PTR,
             10447    1         2 L_SC_STOP,
             10448    1           3 SC_BLK_COM$ PTR /*(ADDR(NIL))*/, /* Blank common            */
             10449    1           3 SC_ROOT_LBL_COM$ PTR /*(ADDR(NIL))*/, /* Root labelled common */
             10450    1           3 SC_LBL_COM$ PTR /*(ADDR(NIL))*/, /* Labelled common         */
             10451    1           3 SC_DCB$ PTR /*(ADDR(NIL))*/, /* Dcbs                        */
             10452    1         2 L_SC_STOP_A$(0:3)   REDEF L_SC_STOP  PTR,
             10453    1         2 PROMOTE_HEAD,
             10454    1           3 BLK_COM$              PTR /*(ADDR(NIL))*/,
             10455    1           3 LBL_COM$              PTR /*(ADDR(NIL))*/,
             10456    1         2 PROMOTE_HEAD_A$(0:1) REDEF PROMOTE_HEAD     PTR,
             10457    1         2 PROMOTE_TAIL,
             10458    1           3 BLK_COM$              PTR /*(ADDR(NIL))*/,
             10459    1           3 LBL_COM$              PTR /*(ADDR(NIL))*/,
             10460    1         2 PROMOTE_TAIL_A$(0:1) REDEF PROMOTE_TAIL     PTR,
             10461    1         2 HAVE_ASL          BIT(1)    UNAL /*('0'B)*/,
             10462    1         2 ALL_BLK_COM          BIT(1)    UNAL /*('0'B)*/,
             10463    1         2 *                 BIT(34)   UNAL /*('0'B)*/,
             10464    1         2 BLANK_COMMON$     PTR       ALIGNED /*(ADDR(NIL))*/;

       19    10468        %VY$LST;

             10480    1   /*******************************************************************************
PL6.E3A0      #001=VYO$OBJECT File=VYO$OBJECT.:E05TSI                            WED 07/30/97 08:58 Page:5    
             10481    1   *                                                                              *
             10482    1   *                          VY$LST                                                 *
             10483    1   *                                                                              *
             10484    1   *******************************************************************************/

             10489    1   DCL 1 VY$LST                        ALIGNED BASED,
             10490    1         2 LINK$        PTR,               /* Link to next item                  */
             10491    1         2 TYPE         UBIN( 18) UNAL,    /* Type                               */
             10492    1         2 SUB_TYPE     UBIN( 18) UNAL,    /* Sub-type                           */
             10493    1         2 OBJECT_NAME$ PTR,               /* Pointer to object unit name        */
             10494    1         2 SC_HEAD$     PTR,               /* Head pointer to section link list  */
             10495    1         2 SC_TAIL$     PTR,               /* Tail pointer to section link list  */
             10496    1         2 P,
             10497    1           3 NAME_       ALIGNED,
             10498    1             4 BOUND      UBIN(20)  UNAL,
             10499    1             4 FLAGSV     UBIN(11)  UNAL,
             10500    1             4 *          BIT(5)    UNAL,
             10501    1             4 NAME$      PTR,
             10502    1           3 ACCT_       ALIGNED,
             10503    1             4 BOUND      UBIN(20)  UNAL,
             10504    1             4 FLAGSV     UBIN(11)  UNAL,
             10505    1             4 *          BIT(5)    UNAL,
             10506    1             4 ACCT$      PTR,
             10507    1           3 PASS_       ALIGNED,
             10508    1             4 BOUND      UBIN(20)  UNAL,
             10509    1             4 FLAGSV     UBIN(11)  UNAL,
             10510    1             4 *          BIT(5)    UNAL,
             10511    1             4 PASS$      PTR,
             10512    1           3 SN_         ALIGNED,
             10513    1             4 BOUND      UBIN(20)  UNAL,
             10514    1             4 FLAGSV     UBIN(11)  UNAL,
             10515    1             4 *          BIT(5)    UNAL,
             10516    1             4 SN$        PTR,
             10517    1           3 WSN_        ALIGNED,
             10518    1             4 BOUND      UBIN(20)  UNAL,
             10519    1             4 FLAGSV     UBIN(11)  UNAL,
             10520    1             4 *          BIT(5)    UNAL,
PL6.E3A0      #001=VYO$OBJECT File=VYO$OBJECT.:E05TSI                            WED 07/30/97 08:58 Page:6    
             10521    1             4 WSN$       PTR,
             10522    1           3 B           ALIGNED,
             10523    1             4 RES        BIT(1)    UNAL,
             10524    1             4 ASN        BIT(1)    UNAL,
             10525    1             4 *          BIT(34)   UNAL,
             10526    1           3 RES         CHAR(4)   ALIGNED,
             10527    1           3 ASN         UBIN(36)  ALIGNED;
       20    10530        %VY$LLIST;

             10542    1   /*******************************************************************************
             10543    1   *                                                                              *
             10544    1   *                          VY$LLIST                                                *
             10545    1   *                                                                              *
             10546    1   *******************************************************************************/

             10551    1   DCL 1 VY$LLIST                BASED     ALIGNED,
             10552    1         2 LINK$                  PTR  ALIGNED,
             10553    1         2 ITEM$                  PTR  ALIGNED;
       21    10556        %VY$SC;

             10570    1   /*******************************************************************************
             10571    1   *                                                                              *
             10572    1   *                          VY$SC                                                 *
             10573    1   *                                                                              *
             10574    1   *******************************************************************************/

             10578    1   DCL 1 VY$SC               BASED     ALIGNED,
             10579    1         2 TYPE              UBIN(9)   UNAL,
             10580    1         2 EMPTY             BIT (1)   UNAL,
             10581    1         2 ATTR                        UNAL,
             10582    1           3 INT              UBIN(2)   UNAL,
             10583    1           3 SEGMENT          BIT(1)    UNAL,
             10584    1           3 ALL              BIT(1)    UNAL,
             10585    1           3 PRE_DCB          BIT(1) UNAL, /* '1'B => true; '0'B => false        */
             10586    1           3 MES_INIT         BIT (1)   UNAL,
             10587    1           3 ALIGN            UBIN(2)   UNAL,
             10588    1         2 ADDRESS           UBIN(18)  UNAL,
PL6.E3A0      #001=VYO$OBJECT File=VYO$OBJECT.:E05TSI                            WED 07/30/97 08:58 Page:7    
             10589    1         2 NAME_DISP         SBIN HALF UNAL,
             10590    1         2 SIZE              UBIN(18)  UNAL,
             10591    1         2 NODE#             UBIN(18)  UNAL,
             10592    1         2 COM_LINK          UBIN(18)  UNAL;

             10601    1   /*******************************************************************************
             10602    1   *                                                                              *
             10603    1   *                          VY$SECT                                                 *
             10604    1   *                                                                              *
             10605    1   *******************************************************************************/

             10609    1   DCL 1 VY$SECT       BASED     ALIGNED,
             10610    1         2 TYPE              UBIN(9)   UNAL,
             10611    1         2 EMPTY             BIT (1)   UNAL,
             10612    1         2 ATTR                        UNAL,
             10613    1           3 INT              UBIN(2)  UNAL,
             10614    1           3 SEGMENT          BIT (1)  UNAL,
             10615    1           3 *                UBIN(3)  UNAL,
             10616    1           3 ALIGN            UBIN(2)  UNAL,
             10617    1         2 SIZE              UBIN(18)  UNAL,
             10618    1         2 NAME_DISP         SBIN HALF UNAL,
             10619    1         2 SEG_NPOINTER      UBIN(18)  UNAL;
       22    10622        %VYD$TMPLT;

             10634    1   /*******************************************************************************
             10635    1   *                                                                              *
             10636    1   *                          VYD$TMPLT                                               *
             10637    1   *                                                                              *
             10638    1   *******************************************************************************/

             10643    1   DCL 1 VYD$TMPLT          ALIGNED BASED, /* Template for defs                  */
             10644    1         2 A(0:3)       UBIN(18)  UNAL,    /* Array ...                          */
             10645    1         2 A_SBIN(0:3) REDEF A    SBIN HALF UNAL,
             10646    1         2 I       REDEF     A,            /* Items                              */
             10647    1           3 WHERE        UBIN( 3) UNAL,   /* Source of def                      */
             10648                                                                /* Value from
             10649                                                                     0   object
PL6.E3A0      #001=VYO$OBJECT File=VYO$OBJECT.:E05TSI                            WED 07/30/97 08:58 Page:8    
             10650                                                                     1   library */
             10651    1           3 DEFINED      BIT( 1) UNAL,    /* Defined or not                     */
             10652    1           3 B                      UNAL,
             10653    1             4 MULTIPLY    BIT(1) UNAL,    /* Multiply defined                   */
             10654    1           3 SC#          UBIN(13) UNAL,   /* Section #                          */
             10655    1           3 AFTER        REDEF SC#      UNAL,
             10656    1             4 USED        BIT(1) UNAL,    /* Used or not                        */
             10657    1             4 *           BIT(12) UNAL,
             10658    1           3 OFFSET      UBIN(18) UNAL,    /* Offset/address                     */
             10659    1           3 NAME_DISP   UBIN(18) UNAL,    /* Displacement to name(in words)     */
             10660    1           3 NAME_DISP_SBIN REDEF NAME_DISP   SBIN HALF UNAL,
             10661    1           3 P           UBIN( 1) UNAL,    /* Primary entdef                     */
             10662    1           3 C REDEF P   BIT(  1) UNAL,    /* Constant bit for symdefs           */
             10663    1           3 A           UBIN( 1) UNAL,    /* Altret specified                   */
             10664    1           3 MULTIPLY REDEF A BIT(1) UNAL, /* Multiply defined for constant sym defs */
             10665    1           3 I           BIT(  1) UNAL,    /* Argument/parameter check           */
             10666    1           3 USED    REDEF I  BIT(1) UNAL, /* Used or not for constant sym defs  */
             10667    1           3 CST         UBIN( 4) UNAL,    /* Calling sequence type              */
             10668    1           3 WHERE_C REDEF CST UBIN(4) UNAL, /* Source of def for constant sym defs */
             10669    1           3 NP          UBIN(11) UNAL,    /* # of parameters                    */
             10670    1           3 IS_DCB  REDEF     NP,
             10671    1             4 DCB_BIT     BIT(1)    UNAL,
             10672    1             4 *           BIT(10)   UNAL,
             10673    1         2 SEG REDEF A,
             10674    1           3 *             UBIN      UNAL,
             10675    1           3 NPOINTER      UBIN(18)  UNAL,
             10676    1           3 CONSTNT       BIT(1)    UNAL,
             10677    1           3 TYPE          UBIN(5)   UNAL,
             10678    1           3 SEGID         UBIN(12)  UNAL,
             10679    1         2 V REDEF A,
             10680    1           3 VALUE       UBIN(36) UNAL,    /* Value if C=1                       */
             10681    1           3 *           UBIN(36) UNAL,
             10682    1         2 S  REDEF  A,                    /* Value if C=1                       */
             10683    1           3 *         UBIN(24) UNAL,
             10684    1           3 SEGID     UBIN(12) UNAL,
             10685    1           3 *         UBIN     UNAL;
       23    10688        %VYR$TMPLT;
PL6.E3A0      #001=VYO$OBJECT File=VYO$OBJECT.:E05TSI                            WED 07/30/97 08:58 Page:9    

             10702    1   /*******************************************************************************
             10703    1   *                                                                              *
             10704    1   *                          VYR$TMPLT                                               *
             10705    1   *                                                                              *
             10706    1   *******************************************************************************/

             10710    1   DCL 1 VYR$TMPLT                                         BASED ALIGNED,
             10711    1         2 NAME_DISP              UBIN(18)       UNAL,
             10712    1         2 ER                                    UNAL,
             10713    1           3 SREF                  BIT (1)        UNAL,
             10714    1           3 A                     UBIN(1)        UNAL,
             10715    1           3 I                     BIT(1)         UNAL,
             10716    1           3 CST                   UBIN(4)        UNAL,
             10717    1           3 NP                    UBIN(11)       UNAL,
             10718    1         2 CAND    REDEF     ER,
             10719    1           3 SREF                  BIT (1)        UNAL,
             10720    1           3 READ_ONLY             BIT(1)         UNAL,
             10721    1           3 STATE                 BIT(1)         UNAL,
             10722    1           3 *                     UBIN(15)       UNAL,
             10723    1         2 OU_NAME_DISP REDEF     ER,
             10724    1           3 SREF                  BIT (1)        UNAL,
             10725    1           3 READ_ONLY             BIT(1)         UNAL,
             10726    1           3 GOT                   BIT(1)         UNAL,
             10727    1           3 NAME_DISP             UBIN(15)       UNAL,
             10728    1         2 SAT     REDEF     ER,
             10729    1           3 BREF                  BIT ( 1)       UNAL,
             10730    1           3 *                     BIT (17)       UNAL;

             10739    1   /*******************************************************************************
             10740    1   *                                                                              *
             10741    1   *                          VYR$SAT                                                 *
             10742    1   *                                                                              *
             10743    1   *******************************************************************************/

             10747    1   DCL 1 VYR$SAT                 ALIGNED   BASED,
             10748    1         2 VALUE        UBIN(36)  ALIGNED,
PL6.E3A0      #001=VYO$OBJECT File=VYO$OBJECT.:E05TSI                            WED 07/30/97 08:58 Page:10   
             10749    1         2 SEG   REDEF  VALUE,
             10750    1           3 OFFSET     UBIN(18)  UNAL,
             10751    1           3 *          BIT(6)    UNAL,
             10752    1           3 SEGID      UBIN(12)  UNAL,
             10753    1         2 BELOW        BIT(1)    UNAL,
             10754    1         2 *            BIT(17)   UNAL,
             10755    1         2 NODE#        UBIN(18)  UNAL;
       24    10758        %TMPLT;

             10770    1   /*******************************************************************************
             10771    1   *                                                                              *
             10772    1   *                          TMPLT                                                 *
             10773    1   *                                                                              *
             10774    1   *******************************************************************************/

             10779    1   DCL 1 VY$TMPLT           ALIGNED BASED, /* Template for defs                  */
             10780    1         2 A(0:3)       UBIN(18)  UNAL,    /* Array access                       */
             10781    1         2 A_SBIN(0:3) REDEF A    SBIN HALF UNAL,
             10782    1         2 W       REDEF     A,            /* By name                            */
             10783    1           3 WORD0       UBIN(36)  UNAL,   /* First word                         */
             10784    1           3 WORD1       UBIN(36)  UNAL;   /* Second word                        */
       25    10787        %T$C;

             10799    1   /*******************************************************************************
             10800    1   *                                                                              *
             10801    1   *                          T$C                                                 *
             10802    1   *                                                                              *
             10803    1   *******************************************************************************/

             10808    1   DCL 1 T$C           BASED     ALIGNED,  /* Text count                         */
             10809    1         2 COUNT        UBIN( 9) UNAL,
             10810    1         2 CHARS        CHAR( T$C.COUNT )   UNAL;
             10811    1   DCL 1 T$C_UNAL      BASED     UNAL,     /* Text count                         */
             10812    1         2 COUNT        UBIN( 9) UNAL,
             10813    1         2 CHARS        CHAR( T$C_UNAL.COUNT ) UNAL;
       26    10816        %VY$UTS;

PL6.E3A0      #001=VYO$OBJECT File=VYO$OBJECT.:E05TSI                            WED 07/30/97 08:58 Page:11   
             10829    1   /*******************************************************************************
             10830    1   *                                                                              *
             10831    1   *                          VY$UTS                                                 *
             10832    1   *                                                                              *
             10833    1   *******************************************************************************/

             10838    1   DCL 1 VY$UTS           BASED,
             10839    1         2 I,
             10840    1           3 LEMUR    UBIN(36) ALIGNED,
             10841    1           3 COMPILER UBIN(36) ALIGNED,
             10842    1         2 A(0:1) REDEF I UBIN(36);
       27    10845        %VY$WORD;

             10857    1   /*******************************************************************************
             10858    1   *                                                                              *
             10859    1   *                          VY$WORD                                                 *
             10860    1   *                                                                              *
             10861    1   *******************************************************************************/

             10866    1   DCL VY$WORD_A(0:0)       UBIN(36) ALIGNED    BASED;
             10867    1   DCL VY$HALF_A(0:0)       UBIN(18) HALIGNED   BASED;
             10868    1   DCL VY$BYTE_A(0:0)       UBIN( 9) CALIGNED   BASED;
             10869    1   DCL VY$CHAR_A(0:0)       CHAR( 1) UNAL       BASED;
             10870        /**/
             10871    1   DCL VY$WORD_SBIN_A(0:0)  SBIN WORD ALIGNED   BASED;
             10872    1   DCL VY$HALF_SBIN_A(0:0)  SBIN HALF HALIGNED  BASED;
             10873    1   DCL VY$BYTE_SBIN_A(0:0)  SBIN HALF CALIGNED  BASED;
             10874    1   DCL VY$BIT_A(0:0)        BIT(36)   ALIGNED   BASED;
       28    10877        %SET LISTMAC='1'B;
       29    10878        %SET LISTSUB='1'B;
       30    10879        %SET LISTEXP='1'B;
       31    10880        %B$DNAME( NAME=B$DNAME, STCLASS=BASED );
             10881            %LSET STR='BASED        ';
             10882            %IF
             10883                '0'B;
             10885            %ELSE;
             10886                %LSET INIT=/*;
PL6.E3A0      #001=VYO$OBJECT File=VYO$OBJECT.:E05TSI                            WED 07/30/97 08:58 Page:12   
             10887            %ENDIF;
             10888    1   DCL 1 B$DNAME BASED ALIGNED,
             10889    1         2 COUNT UBIN HALF UNAL /*(SIZEC(' ')) /**/,
             10890                /*K*  COUNT is the number of characters in the name */
             10891            %IF
             10892                '0'B;
             10895            %ELSE;
             10896    1         2 TEXT CHAR(B$DNAME.COUNT) UNAL;
             10897            %ENDIF;
       32    10899        %P;
             10900        %LSET LISTDIR='0'B;

             10907    1   /*******************************************************************************
             10908    1   *                                                                              *
             10909    1   *                          PARAMETERS                                              *
             10910    1   *                                                                              *
             10911    1   *******************************************************************************/

       33    10915    1   DCL FID$ PTR ALIGNED;
       34    10916    1   DCL SOURCE SBIN WORD ALIGNED;
       35    10917    1   DCL ALLOCATE$ PTR ALIGNED;
       36    10918        %BANNER( ARG=SUBS );
             10919        %LSET LISTDIR='0'B;

             10926    1   /*******************************************************************************
             10927    1   *                                                                              *
             10928    1   *                          SUBS                                                 *
             10929    1   *                                                                              *
             10930    1   *******************************************************************************/

       37    10934        %B$RECORDSUBS;
             10935        %EQU TYPHEAD=0 ;
             10936        %EQU TYPDNAM=1 ;
             10937        %EQU TYPRNAM=2 ;
             10938        %EQU TYPSECT=3 ;
             10939        %EQU TYPEDEF=4 ;
             10940        %EQU TYPEREF=5 ;
PL6.E3A0      #001=VYO$OBJECT File=VYO$OBJECT.:E05TSI                            WED 07/30/97 08:58 Page:13   
             10941        %EQU TYPSDEF=6 ;
             10942        %EQU TYPSREF=7 ;
             10943        %EQU TYPSEGDEF=8 ;
             10944        %EQU TYPSEGREF=9 ;
             10945        %EQU TYPPROG=10 ;
             10946        %EQU SUBTYPPROG=0 ;
             10947        %EQU SUBTYPREL=1 ;
             10948        %EQU TYPLOGBLK=11 ;
             10949        %EQU TYPINTNTRY=12 ;
             10950        %EQU TYPEXST=13 ;
             10951        %EQU TYPVREBL=14 ;
             10952        %EQU TYPDBGNAM=15 ;
             10953        %EQU TYPLV1LB=16 ;
             10954        %EQU TYPLV1=17 ;
             10955        %EQU TYPDATASEG=18 ;
             10956        %EQU TYPRUM=20 ;
             10957        %EQU TYPBIRTH=21 ;
             10958        %EQU TYPPLOVER=22 ;
             10959        %EQU TYPCOMPID=23 ;
             10960        %EQU TYPROS=30 ;
       38    10962        %B;
             10963        %LSET LISTDIR='0'B;

             10970    1   /*******************************************************************************
             10971    1   *                                                                              *
             10972    1   *                          BIT                                                 *
             10973    1   *                                                                              *
             10974    1   *******************************************************************************/

       39    10978    1   DCL FIRST BIT(1) ALIGNED STATIC/*AUTO*/;
       40    10979    1   DCL WRITE_SWITCH BIT(1) ALIGNED STATIC/*AUTO*/;
       41    10980    1   DCL HAVE_PRIMARY BIT(1) ALIGNED STATIC/*AUTO*/;
       42    10981        %C;
             10982        %LSET LISTDIR='0'B;

             10989    1   /*******************************************************************************
             10990    1   *                                                                              *
PL6.E3A0      #001=VYO$OBJECT File=VYO$OBJECT.:E05TSI                            WED 07/30/97 08:58 Page:14   
             10991    1   *                          CHAR                                                 *
             10992    1   *                                                                              *
             10993    1   *******************************************************************************/

       43    10997    1   DCL VERS_NUM CHAR(3);
       44    10998        %E;
             10999        %LSET LISTDIR='0'B;

             11006    1   /*******************************************************************************
             11007    1   *                                                                              *
             11008    1   *                          ENTRY                                                 *
             11009    1   *                                                                              *
             11010    1   *******************************************************************************/

       45    11014        %ENTRIES;
             11015    1   DCL VYE$ERROR       ENTRY(4);
             11016    1   DCL VYE$ERR         ENTRY(3);
             11017    1   DCL VYE$MERC        ENTRY;
             11018    1   DCL VYE$ERRMSG      ENTRY(1);
             11019    1   DCL VYR$READ        ENTRY( 3 ) ALTRET;
             11020    1   DCL VYW$WRITE       ENTRY( 3 ) ALTRET;
             11021    1   DCL VYW$WRITE_DO    ENTRY( 2 ) ALTRET;
             11022    1   DCL VYD$B2C         ENTRY( 5 );
             11023    1   DCL VYD$C2B         ENTRY( 3 );
             11024    1   DCL VYA$GET         ENTRY( 3 );
             11025    1   DCL VYF$FREE        ENTRY( 3 );
             11026    1   DCL VYQ$SORT        ENTRY( 7 );
             11027    1   DCL VYY$YESNO       ENTRY( 1 );
       46    11029        %ENTRIES_IO;
             11030    1   DCL VYF$OPEN        ENTRY(4)    ALTRET;
             11031    1   DCL VYF$CLOSE       ENTRY(3);
             11032    1   DCL VYU$PREAD       ENTRY(12)  ALTRET;
             11033    1   DCL VYK$KEY         ENTRY(4);
             11034    1   DCL VYI$READ        ENTRY(5)  ALTRET;
             11035    1   DCL VYI$WRITE       ENTRY(5)  ALTRET;
             11036    1   DCL VYI$WRITE_C     ENTRY(5)  ALTRET;
       47    11038    1   DCL VYS$LST ENTRY(6) ALTRET;
PL6.E3A0      #001=VYO$OBJECT File=VYO$OBJECT.:E05TSI                            WED 07/30/97 08:58 Page:15   
       48    11039    1   DCL VYU$CHK_TARGET ENTRY ALTRET;
       49    11040    1   DCL VYU$FIND_UTS ENTRY(5) ALTRET;
       50    11041    1   DCL VYU$READ_UTS ENTRY(4) ALTRET;
       51    11042    1   DCL VYU$ADD_UTS ENTRY(3) ALTRET;
       52    11043    1   DCL VYU$DEL_UTS ENTRY(3) ALTRET;
       53    11044    1   DCL VYO$DEL_UNIT ENTRY(6);
       54    11045        %PTR;
             11046        %LSET LISTDIR='0'B;

             11053    1   /*******************************************************************************
             11054    1   *                                                                              *
             11055    1   *                          PTR                                                 *
             11056    1   *                                                                              *
             11057    1   *******************************************************************************/

       55    11061        %POINTER;
             11062    1   DCL P$         PTR       ALIGNED STATIC/*AUTO*/;
             11063    1   DCL Q$         PTR       ALIGNED STATIC/*AUTO*/;
             11064    1   DCL R$         PTR       ALIGNED STATIC/*AUTO*/;
       56    11066    1   DCL ALL$ PTR ALIGNED STATIC/*AUTO*/;
       57    11067    1   DCL DN_START$ PTR ALIGNED STATIC/*AUTO*/;
       58    11068    1   DCL NAME$ PTR ALIGNED STATIC/*AUTO*/;
       59    11069    1   DCL CURR$ PTR ALIGNED STATIC/*AUTO*/;
       60    11070    1   DCL ITEM$ PTR ALIGNED STATIC/*AUTO*/;
       61    11071    1   DCL PREV$ PTR ALIGNED STATIC/*AUTO*/;
       62    11072    1   DCL WHERE$ PTR ALIGNED STATIC/*AUTO*/;
       63    11073    1   DCL START$ PTR ALIGNED STATIC/*AUTO*/;
       64    11074    1   DCL TAIL$ PTR ALIGNED STATIC/*AUTO*/;
       65    11075    1   DCL ED_START$ PTR ALIGNED STATIC/*AUTO*/;
       66    11076    1   DCL RN_START$ PTR ALIGNED STATIC/*AUTO*/;
       67    11077    1   DCL ER_START$ PTR ALIGNED STATIC/*AUTO*/;
       68    11078    1   DCL TEMP_ER_START$ PTR ALIGNED STATIC/*AUTO*/;
       69    11079    1   DCL TEMP_RN_START$ PTR ALIGNED STATIC/*AUTO*/;
       70    11080    1   DCL ED_STOP$ PTR ALIGNED STATIC/*AUTO*/;
       71    11081    1   DCL ER_STOP$ PTR ALIGNED STATIC/*AUTO*/;
       72    11082    1   DCL TEMP_ER_STOP$ PTR ALIGNED STATIC/*AUTO*/;
       73    11083    1   DCL TEMP_RN_STOP$ PTR ALIGNED STATIC/*AUTO*/;
PL6.E3A0      #001=VYO$OBJECT File=VYO$OBJECT.:E05TSI                            WED 07/30/97 08:58 Page:16   
       74    11084    1   DCL CURR_ER_START$ PTR ALIGNED STATIC/*AUTO*/;
       75    11085    1   DCL SC_CURR$ PTR ALIGNED STATIC/*AUTO*/;
       76    11086        %U;
             11087        %LSET LISTDIR='0'B;

             11094    1   /*******************************************************************************
             11095    1   *                                                                              *
             11096    1   *                          UBIN                                                 *
             11097    1   *                                                                              *
             11098    1   *******************************************************************************/

       77    11102        %INDEX;
             11103    1   DCL I          UBIN(36) ALIGNED STATIC/*AUTO*/;
             11104    1   DCL SI REDEF I SBIN WORD ALIGNED;
             11105    1   DCL J          UBIN(36) ALIGNED STATIC/*AUTO*/;
             11106    1   DCL SJ REDEF J SBIN WORD ALIGNED;
             11107    1   DCL K          UBIN(36) ALIGNED STATIC/*AUTO*/;
             11108    1   DCL SK REDEF K SBIN WORD ALIGNED;
             11109    1   DCL L          UBIN(36) ALIGNED STATIC/*AUTO*/;
             11110    1   DCL SL REDEF L    SBIN WORD ALIGNED;
       78    11112    1   DCL REC_TYPE UBIN(36) ALIGNED STATIC/*AUTO*/;
       79    11113    1   DCL ALL_TYPE UBIN(36) ALIGNED STATIC/*AUTO*/;
       80    11114    1   DCL PAGE_A(0:15) UBIN(36) ALIGNED STATIC/*AUTO*/;
       81    11115    1   DCL TOTAL(0:15) SBIN WORD ALIGNED STATIC/*AUTO*/;
       82    11116    1   DCL SECT_COUNT UBIN(36) ALIGNED STATIC/*AUTO*/;
       83    11117    1   DCL HEAD_INX UBIN(36) ALIGNED STATIC/*AUTO*/;
       84    11118    1   DCL TSIZE UBIN(36) ALIGNED STATIC/*AUTO*/;
       85    11119    1   DCL SIZE UBIN(36) ALIGNED STATIC/*AUTO*/;
       86    11120    1   DCL PAGE UBIN(36) ALIGNED STATIC/*AUTO*/;
       87    11121    1   DCL RTYPE UBIN(36) ALIGNED STATIC/*AUTO*/;
       88    11122    1   DCL GET UBIN(36) ALIGNED STATIC/*AUTO*/;
       89    11123    1   DCL IO_SIZEW SBIN(36) ALIGNED STATIC/*AUTO*/;
       90    11124    1   DCL ERR_LEVEL SBIN WORD ALIGNED STATIC/*AUTO*/;
       91    11125    1   DCL PAGE_SIZE UBIN(36) ALIGNED STATIC/*AUTO*/;
       92    11126    1   DCL HALVE UBIN(36) ALIGNED STATIC/*AUTO*/;
       93    11127    1   DCL NPAGE UBIN(36) ALIGNED STATIC/*AUTO*/;
       94    11128    1   DCL TSIZE_READ UBIN(36) ALIGNED STATIC/*AUTO*/;
PL6.E3A0      #001=VYO$OBJECT File=VYO$OBJECT.:E05TSI                            WED 07/30/97 08:58 Page:17   
       95    11129    1   DCL SC_TYPE UBIN(36) ALIGNED STATIC/*AUTO*/;
       96    11130    1   DCL INDX UBIN(36) ALIGNED STATIC/*AUTO*/;
       97    11131    1   DCL LAST_DISP UBIN(36) ALIGNED STATIC/*AUTO*/;
       98    11132    1   DCL ED_SIZE UBIN(36) ALIGNED STATIC/*AUTO*/;
       99    11133    1   DCL ER_SIZE UBIN(36) ALIGNED STATIC/*AUTO*/;
      100    11134    1   DCL TEMP_ER_SIZE UBIN(36) ALIGNED STATIC/*AUTO*/;
      101    11135    1   DCL TEMP_RN_SIZE UBIN(36) ALIGNED STATIC/*AUTO*/;
      102    11136    1   DCL RN_FREE UBIN(36) ALIGNED STATIC/*AUTO*/;
      103    11137    1   DCL SECT# UBIN(36) ALIGNED STATIC/*AUTO*/;
      104    11138    1   DCL PSIZE UBIN(36) ALIGNED STATIC/*AUTO*/;
      105    11139    1   DCL OLD_UTS UBIN(36) ALIGNED STATIC/*AUTO*/;
      106    11140    1   DCL DEBUG_MAP(0:3) UBIN(36) ALIGNED CONSTANT INIT(
      107    11141    1    7,
      108    11142    1    5,
      109    11143    1    6,
      110    11144    1    4 );
      111    11145    1   DCL COMPILE_UTS UBIN(36) ALIGNED STATIC/*AUTO*/;
      112    11146    1   DCL ANSWER UBIN(36) ALIGNED STATIC/*AUTO*/;
      113    11147    1   DCL HB UBIN(36) ALIGNED STATIC/*AUTO*/;
      114    11148    1   DCL X UBIN(36) ALIGNED STATIC/*AUTO*/;
      115    11149    1   DCL PRIMARY_NAME_DISP UBIN(36) ALIGNED STATIC/*AUTO*/;
      116    11150    1   DCL INC UBIN(36) ALIGNED STATIC/*AUTO*/;
      117    11151        %S;
             11152        %LSET LISTDIR='0'B;

             11159    1   /*******************************************************************************
             11160    1   *                                                                              *
             11161    1   *                          SBIN                                                 *
             11162    1   *                                                                              *
             11163    1   *******************************************************************************/

      118    11167    1   DCL PAGE# SBIN WORD ALIGNED STATIC/*AUTO*/;
      119    11168    1   DCL ALL_A(0:10) SBIN WORD ALIGNED STATIC/*AUTO*/;
      120    11169    1   DCL NEW_VALUE SBIN WORD ALIGNED STATIC/*AUTO*/;
      121    11170        %FILE;
             11171    1   DCL 1 F$NAME_                 BASED,
             11172    1         2 COUNT             UBIN( 9) UNAL,
PL6.E3A0      #001=VYO$OBJECT File=VYO$OBJECT.:E05TSI                            WED 07/30/97 08:58 Page:18   
             11173    1         2 CHARS             CHAR( F$NAME_.COUNT ) UNAL;
             11174    1   DCL F$ACCT_         CHAR(8/*@F_ACCT_SIZEC*/) BASED;
             11175    1   DCL F$ACCT_A(0:7/*@F_ACCT_SIZEC1*/)     CHAR(1)   BASED;
             11176    1   DCL F$PASS_         CHAR(8/*@F_PASS_SIZEC*/) BASED;
             11177    1   DCL F$PASS_A(0:7/*@F_PASS_SIZEC1*/)     CHAR(1)   BASED;
      122    11179    1   DCL ERR_WORD_DISP UBIN(36) ALIGNED STATIC/*AUTO*/;
      123    11180
      124    11181
      125    11182
      126    11183
      127    11184        %VY$LLIST_SC;
             11185        %LSET LISTDIR='0'B;

             11196    1   /*******************************************************************************
             11197    1   *                                                                              *
             11198    1   *                          VY$LLIST_SC                                             *
             11199    1   *                                                                              *
             11200    1   *******************************************************************************/

             11205    1   DCL 1 VY$LLIST_SC               BASED     ALIGNED,
             11206    1         2 LINK$             PTR,
             11207    1         2 BASE$             PTR,
             11208    1         2 COUNT             UBIN(36);
      128    11211        %MOVE_TMPLT;
             11212    1   DCL VY$TARGET_B           BIT( VY_TARGET_COUNT ) ALIGNED    BASED;
             11213    1   DCL VY$SOURCE_B           BIT( VY_SOURCE_COUNT ) ALIGNED    BASED;
             11214    1   DCL VY$TARGET_C         CHAR( VY_TARGET_COUNT ) ALIGNED BASED;
             11215    1   DCL VY$SOURCE_C         CHAR( VY_SOURCE_COUNT ) ALIGNED BASED;
      129    11217        %PLIST;
      130    11218        %INCLUDE VY_PSUBS_C;
      131    11279        %FPT_PRECORD(
      132    11280         FPTN=FPT_PRECORD,
      133    11281         STCLASS=CONSTANT,
      134    11282         DCB=M$OF,
      135    11283         N="-1");
      136    11304    1   DCL M$OF DCB;
      137    11305    1   DCL M$RF DCB;
PL6.E3A0      #001=VYO$OBJECT File=VYO$OBJECT.:E05TSI                            WED 07/30/97 08:58 Page:19   
      138    11306
      139    11307        %FPT_TIME( FPTN= FPT_TIME,
      140    11308         DATE=VY_HEADER.DATE_C,
      141    11309         TIME=VY_HEADER.TIME_C,
      142    11310         DAY =VY_HEADER.DAY_C,
      143    11311         DEST=EXT,
      144    11312         TSTAMP=VY_LINK_UTS);
      145    11331        %F$DCB;
      146    11388        %FPT_DELREC(FPTN=FPT_DELREC,
      147    11389         STCLASS=CONSTANT,
      148    11390         DCB=M$OF,
      149    11391         KEY=VY_O_KEY_BUF);
      150    11410    1   DCL CHAR$CHAR CHAR(VY_IO_SIZEC) BASED(BUFFER$);
      151    11411    1   DCL BUFFER$ PTR ALIGNED STATIC/*AUTO*/;
      152    11412    1   DCL DNAME$ PTR ALIGNED STATIC/*AUTO*/;
      153    11413    1   DCL SAVE_START$(0:9) PTR ALIGNED STATIC/*AUTO*/;
      154    11414    1   DCL SAVE_STOP$(0:9) PTR ALIGNED STATIC/*AUTO*/;
      155    11415    1   DCL SAVE_SIZE(0:9) UBIN(36) ALIGNED STATIC/*AUTO*/;
      156    11416    1   DCL SAVE_PREV_SIZE(0:9) UBIN(36) ALIGNED STATIC/*AUTO*/;
      157    11417        %FPT_TIME( FPTN=UTS_TIME,
      158    11418         STCLASS=CONSTANT,
      159    11419         DATE=UTS_DATE,
      160    11420         TIME=UTS_T,
      161    11421         DEST=EXT,
      162    11422         SOURCE=UTS,
      163    11423         TSTAMP=UTS_TEMP);
      164    11442    1   DCL UTS_DATE CHAR(10) ALIGNED STATIC/*AUTO*/;
      165    11443    1   DCL 1 UTS_T ALIGNED STATIC/*AUTO*/,
      166    11444    1         2 H_M CHAR(5) UNAL,
      167    11445    1         2 * CHAR(6) UNAL;
      168    11446    1   DCL UTS_TEMP UBIN(36) ALIGNED STATIC/*AUTO*/;
      169    11447    1   DCL COMP_UTS UBIN(36) ALIGNED STATIC/*AUTO*/;
      170    11448    1   DCL UTS_SIZE UBIN(36) ALIGNED STATIC/*AUTO*/;
      171    11449    1   DCL LIST_HEADER CHAR(0) CONSTANT INIT(
      172    11450    1   'ADBG SEV COMPILER      LIBRARY FILE    COMPILE TIME      OBJECT UNIT NAME');
      173    11451    1   DCL LANG_ID(0:13) CHAR(5) ALIGNED CONSTANT INIT(
      174    11452    1    'GMAP ',
PL6.E3A0      #001=VYO$OBJECT File=VYO$OBJECT.:E05TSI                            WED 07/30/97 08:58 Page:20   
      175    11453    1    'PL6  ',
      176    11454    1    'FORT ',
      177    11455    1    'COBOL',
      178    11456    1    'PL1  ',
      179    11457    1    'RPG  ',
      180    11458    1    'PASCL',
      181    11459    1    'MOMUS',
      182    11460    1    'FPL',
      183    11461    1    'PRTRG',
      184    11462    1    'IDL',
      185    11463    1    'ELSIE',
      186    11464    1    'CALF',
      187    11465    1    'C' );
      188    11466        %MOVE_NAME_DCL;
      189    11471        %B$TCB;
      190    11474        %B$ALT;
      191    11482        %EJECT;
PL6.E3A0      #001=VYO$OBJECT File=VYO$OBJECT.:E05TSI                            WED 07/30/97 08:58 Page:21   
      192    11483    1       HAVE_PRIMARY = '0'B/*@FALSE_B*/;
      193    11484    2       DO CASE( VY_COMMAND );
      194    11485    2       CASE( 3/*@C_COPY_KEY_WORD*/ );
      195    11486    2           CALL VYU$CHK_TARGET ALTRET(DO_RETURN);
      196    11487    2           CALL M$TIME( FPT_TIME );
      197    11488    3           IF ~VY_COPY_EXTRACT THEN DO;
      198    11489    3               VY_COPY_EXTRACT = '1'B/*@TRUE_B*/;
      199    11490        /*E*  ERROR: VYO-E$COPYING_VY-0
      200    11491              MESSAGE: ... COPYing
      201    11492              DESCRIPTION: Self-explanatory.
      202    11493        */
      203    11494                    %SCREAM( ERR#=%E$COPYING_VY, MID="'O'", LEVEL=0 );
      204    11497    3               END;
      205    11498    2           CALL READ_WRITE_RECORDS;
      206    11499    2           SIZE = VY_OK.OUNAME.COUNT;
      207    11500    2           DN_START$ = VY_ROOT$ -> VY$NODE.L_START.DN$;
      208    11501    2           START$ = VY_ED_START$;
      209    11502    3           DO WHILE( START$ <= VY_ED_STOP$ );
      210    11503    3               NAME$ = PINCRW( DN_START$, START$ -> VYD$TMPLT.I.NAME_DISP );
      211    11504    3               VY_O_KEY_BUF.FORM0.COUNT = NAME$ -> B$DNAME.COUNT;
      212    11505    3               VY_O_KEY_BUF.FORM0.CHARS = NAME$ -> B$DNAME.TEXT;
      213    11506    3               WRITE_SWITCH = VY_INV_OWRITE;
      214    11507    3   RETRY:
      215    11508    3               CALL VYI$WRITE_C( 1/*@RF*/,
      216    11509    3                  ADDR( VY_OK.OUNAME.CHARS ),
      217    11510    3                  SIZE,
      218    11511    3                  0/*@OF*/, WRITE_SWITCH) ALTRET( A_DUP);
      219    11512    4               DO WHILE( '0'B );
      220    11513    4   A_DUP:
      221    11514    5                   DO CASE( VY_O.PRIMARY_OPTION.DUPLICATE );
      222    11515    5                   CASE( 2/*@C_ERROR_KEY_WORD*/ );
      223    11516    5                       CALL DUP_ERR( 2022 );
      224    11517    5                   CASE( 1/*@C_INQUIRE_KEY_WORD*/ );
      225    11518    5                       CALL DUP_ERR( 2021 );
      226    11519        /*E*  ERROR: VYO-E$DUP_ASK_VY-0
      227    11520              MESSAGE: Do you wish to overwrite(Y/N)?
      228    11521              DESCRIPTION: Self-explanatory.
PL6.E3A0      #001=VYO$OBJECT File=VYO$OBJECT.:E05TSI                            WED 07/30/97 08:58 Page:22   
      229    11522        */
      230    11523                            %SCREAM( ERR#=%E$DUP_ASK_VY, LEVEL=%@E$I_VY, MID="'O'" );
      231    11526    5                       CALL VYY$YESNO( ANSWER );
      232    11527    6                       IF ANSWER = 1/*@YES*/ THEN DO;
      233    11528    6                           WRITE_SWITCH = '1'B/*@TRUE_B*/;
      234    11529    6                           GOTO RETRY;
      235    11530    6                           END;
      236    11531    5                       END; /* Do case( VY_O.PRIMARY_OPTION.DUPLICATE ); */
      237    11532    4                   END; /* Do never */
      238    11533    3               START$ = PINCRW( START$, SIZEW( VYD$TMPLT ) );
      239    11534    3               END; /* Do while( START$ <= VY_ED_STOP$ ); */
      240    11535    2           CALL READ_WRITE_REMAINING_RECORDS;
      241    11536
      242    11537        %EJECT;
PL6.E3A0      #001=VYO$OBJECT File=VYO$OBJECT.:E05TSI                            WED 07/30/97 08:58 Page:23   
      243    11538    2       CASE( 4/*@C_EXTRACT_KEY_WORD*/ );
      244    11539    2           CALL VYU$CHK_TARGET ALTRET(DO_RETURN);
      245    11540    3           IF ~VY_COPY_EXTRACT THEN DO;
      246    11541    3               VY_COPY_EXTRACT = '1'B/*@TRUE_B*/;
      247    11542        /*E*  ERROR: VYO-E$EXTRACTING_VY-0
      248    11543              MESSAGE: ... EXTRACTing
      249    11544              DESCRIPTION: Self-explanatory.
      250    11545        */
      251    11546                    %SCREAM( ERR#=%E$EXTRACTING_VY, MID="'O'", LEVEL=%@E$I_VY );
      252    11549    3               END;
      253    11550    2           CALL VYU$READ_UTS( 0/*@OF*/, WHERE$, TAIL$, TSIZE ) ALTRET(NOT_READ );
      254    11551    2           CALL VYU$FIND_UTS( ALL$, VY_OU_HEAD.UTS, 0, WHERE$, TAIL$ ) ALTRET(
             11551                    NOT_FOUND );
      255    11552    2           VY_LINK_UTS = ALL$ -> VY$UTS.I.COMPILER;
      256    11553    3           DO WHILE( '0'B );
      257    11554    3   NOT_FOUND:
      258    11555    4               IF M$OF$ -> F$DCB.TYPE# = 'LE' THEN DO;
      259    11556        /*E*  ERROR: VYO-E$NO_COMPILE_TIME_VY-0
      260    11557              MESSAGE: Cannot find compile time UTS for extraction. Current UTS used.
      261    11558              DESCRIPTION: Self-explanatory.
      262    11559        */
      263    11560                        %SCREAM(
      264    11561                        ERR#=%E$NO_COMPILE_TIME_VY,
      265    11562                        LEVEL=%@E$W_VY,
      266    11563                        MID="'O'",
      267    11564                        AUX=%@E$OUOF_VY);
      268    11567    4                   END;
      269    11568    3               VY_LINK_UTS = VY_OU_HEAD.UTS;
      270    11569    3               END; /* Do never */
      271    11570    2           CALL VYF$FREE( 8/*@UTS_DS*/, TSIZE, 0 );
      272    11571    3           DO WHILE( '0'B );
      273    11572    3   NOT_READ:   VY_LINK_UTS = VY_OU_HEAD.UTS;
      274    11573    3               END;
      275    11574    2           CALL READ_WRITE_RECORDS;
      276    11575    2           CALL READ_WRITE_REMAINING_RECORDS;
      277    11576
      278    11577
PL6.E3A0      #001=VYO$OBJECT File=VYO$OBJECT.:E05TSI                            WED 07/30/97 08:58 Page:24   
      279    11578        %EJECT;
PL6.E3A0      #001=VYO$OBJECT File=VYO$OBJECT.:E05TSI                            WED 07/30/97 08:58 Page:25   
      280    11579    2       CASE( 5/*@C_DELETE_KEY_WORD*/ );
      281    11580    2           CALL VYO$DEL_UNIT( 0/*@OF*/,
      282    11581    2              '1'B,
      283    11582    2              '1'B,
      284    11583    2              '1'B,
      285    11584    2              VY_OU_HEAD.UTS,
      286    11585    2              0);
      287    11586        %EJECT;
PL6.E3A0      #001=VYO$OBJECT File=VYO$OBJECT.:E05TSI                            WED 07/30/97 08:58 Page:26   
      288    11587    2       CASE( 6/*@C_LIST_KEY_WORD*/ );
      289    11588    3           IF ~VY_LIST_HEADER THEN DO;
      290    11589    3               VY_LIST_HEADER = '1'B/*@TRUE_B*/;
      291    11590                    %WR_LIT( MES1=LIST_HEADER );
      292    11600    3               END; /* If ~VY_LIST_HEADER then do; */
      293    11601    2           VY_MBUF.CHARS = 'A';
      294    11602    2           MOVE_SIZE = VY_OU_HEAD.LB_SIZE;
      295    11603    3           IF MOVE_SIZE > 0 THEN DO;
      296    11604                    %ALLOCATE(
      297    11605                    PTR$=P$,
      298    11606                    TYPE=@GDP,
      299    11607                    SIZE=MOVE_SIZE);
      300    11614    3               CALL VYK$KEY( 0/*@OF*/, 11, 0, 0 );
      301    11615    3               CALL VYI$READ( 0/*@OF*/,
      302    11616    3                  P$,
      303    11617    3                  MOVE_SIZE,
      304    11618    3                  0/*@OF*/,
      305    11619    3                  '0'B ) ALTRET(NO_DEBUG);
      306    11620    3               VY_MBUF.CHARS_A(2) = 'Y';
      307    11621    4               DO WHILE( '0'B );
      308    11622    4   NO_DEBUG:
      309    11623    4                   VY_MBUF.CHARS_A(2) = 'N';
      310    11624    4                   END;
      311    11625    3               CALL VYF$FREE( 8/*@GDP*/, MOVE_SIZE, 0 );
      312    11626    3               END;
      313    11627    3           ELSE DO;
      314    11628    3               VY_MBUF.CHARS_A(2) = 'N';
      315    11629    3               END;
      316    11630    2           MOVE_SIZE = VY_OU_HEAD.SEVLEV;
      317    11631                %NUMBER( NUM1=MOVE_SIZE );
      318    11648    2           CALL INSERT( VY_MBUF.CHARS, 5, 3, SUBSTR(VY_EFIELD1.CHARS,0,VY_EFIELD1.COUNT
             11648                    ) );
      319    11649    2           SIZE = VY_OU_HEAD.CMPLRID.ID;
      320    11650    3           IF SIZE <= 13 THEN DO;
      321    11651    3               CALL INSERT(VY_MBUF.CHARS, 9, LENGTHC(LANG_ID(0)), LANG_ID(SIZE));
      322    11652    3               MOVE_SIZE = VY_OU_HEAD.CMPLRID.VERS_NUMBER;
      323    11653    3               CALL BINCHAR( VERS_NUM, MOVE_SIZE );
PL6.E3A0      #001=VYO$OBJECT File=VYO$OBJECT.:E05TSI                            WED 07/30/97 08:58 Page:27   
      324    11654    3               IF MOVE_SIZE > 99 THEN
      325    11655    3                   CALL INSERT(VY_MBUF.CHARS, 15, 4, VY_OU_HEAD.CMPLRID.VERS_LETTER,
             11655                            VERS_NUM );
      326    11656    3               ELSE
      327    11657    3                   CALL INSERT(VY_MBUF.CHARS, 15, 4, VY_OU_HEAD.CMPLRID.VERS_LETTER,
             11657                            SUBSTR(VERS_NUM,1) );
      328    11658    3               END; /* If size <= 5 */
      329    11659    2           COMP_UTS=VY_OU_HEAD.UTS;
      330    11660    2           IF M$OF$->F$DCB.TYPE# = 'LE'
      331    11661    2           THEN
      332    11662    2               CALL INSERT(VY_MBUF.CHARS,27,3,'YES');
      333    11663    2           ELSE
      334    11664    2               CALL INSERT(VY_MBUF.CHARS,27,2,'NO');
      335    11665    2           UTS_TEMP = COMP_UTS;
      336    11666    2           CALL M$TIME( UTS_TIME );
      337    11667         /* Do COMPILE_TIME formatting */
      338    11668         %SUB @LIST_COMPILE_TIME=39;
      339    11669    2           CALL INSERT( VY_MBUF.CHARS, 39, LENGTHC(UTS_T.H_M), UTS_T.H_M );
      340    11670    2           CALL INSERT( VY_MBUF.CHARS, 39+6, LENGTHC(UTS_DATE), UTS_DATE);
      341    11671    2           CALL INSERT( VY_MBUF.CHARS, 57, VY_OK.OUNAME.COUNT, VY_OK.OUNAME.CHARS);
      342    11672                %M_WRITE;
      343    11681    3           DO WHILE( '0'B );
      344    11682    3   MAP_IO_ERROR:
      345    11683    3               CALL M$MERC ALTRET( MERC_ERROR );
      346    11684                    %ERROR_IT;
      347    11687    3   MERC_ERROR:
      348    11688    3               CALL VYE$MERC;
      349    11689    3               END;
      350    11690    2           IF VY_O.MAP_ATTCH.DEF + VY_O.MAP_ATTCH.REF > 0
      351    11691    2           THEN CALL READ_WRITE_RECORDS;
      352    11692        %EJECT;
PL6.E3A0      #001=VYO$OBJECT File=VYO$OBJECT.:E05TSI                            WED 07/30/97 08:58 Page:28   
      353    11693    2       CASE( 9/*@C_DEFINE_KEY_WORD*/ );
      354    11694    2           VY_ED_START$ = ADDR(NIL);
      355    11695    3           DO I = 0 TO SIZEW( VY_DEF_REC_A ) -2;
      356    11696    3               REC_TYPE = VY_DEF_REC_A(I); /* Get record type */
      357    11697    3               SAVE_START$(I) = VY_CURR$ -> VY$NODE.L_START_A$(REC_TYPE);
      358    11698    3               SAVE_STOP$(I) = VY_CURR$ -> VY$NODE.L_STOP_A$(REC_TYPE);
      359    11699    3               SAVE_SIZE(I) = VY_CURR$ -> VY$NODE.L_SIZE_A(REC_TYPE);
      360    11700    3               SAVE_PREV_SIZE(I) = VY_CURR$ -> VY$NODE.L_PREV_SIZE_A(REC_TYPE);
      361    11701    3               ALL_A(REC_TYPE) = 0;
      362    11702    3               ALL_TYPE = VY_PASS1_ALL_TYPE(REC_TYPE);
      363    11703    3               HEAD_INX = VY_HEAD_INX(REC_TYPE); /* Get index into head record */
      364    11704    3               TSIZE = VY_OU_HEAD.REC_A.SIZE(HEAD_INX);
             11704                        /* Get total size for this record type */
      365    11705    3               PAGE = VY_OU_HEAD.REC_A.PAGE(HEAD_INX); /* Get the page size */
      366    11706    3               GET = TSIZE;
      367    11707    4               IF TSIZE > 0 THEN DO;
      368    11708    5                   IF REC_TYPE = 4/*@ED*/ THEN DO;
      369    11709    6                       IF MOD( PAGE, 2 ) ~= 0 THEN DO;
             11709                                /* Not an even page size - bitch */
      370    11710                                %NUMBER( NUM1=PAGE, NUM2=REC_TYPE );
      371    11727                                %SCREAM( ERR#=%E$ODD_PAGE_SIZE_VY,MID="'O'",LEVEL=%@E$F_VY,
             11727                                    AUX=%@E$OUOF_VY);
      372    11730    6                           RETURN;
      373    11731    6                           END;
      374    11732    5                       END;
      375    11733                        %ALLOCATE( PTR$=START$, TYPE=ALL_TYPE, SIZE=GET );
      376    11740    4                   CALL VYU$PREAD(
      377    11741    4                      NPAGE,
      378    11742    4                      TSIZE_READ,
      379    11743    4                      0/*@OF*/,
      380    11744    4                      1/*@RF*/,
      381    11745    4                      REC_TYPE,
      382    11746    4                      START$,
      383    11747    4                      PAGE,
      384    11748    4                      TSIZE,
      385    11749    4                      ALL_TYPE,
      386    11750    4                      GET,
PL6.E3A0      #001=VYO$OBJECT File=VYO$OBJECT.:E05TSI                            WED 07/30/97 08:58 Page:29   
      387    11751    4                      VY_CURR$,
      388    11752    4                      0/*@SOURCE_OBJECT*/
      389    11753    4                      );
      390    11754    4                   ALL_A(REC_TYPE) = TSIZE_READ;
      391    11755    5                   IF REC_TYPE = 4/*@ED*/ THEN DO;
      392    11756    5                       VY_ED_START$ = START$;
      393    11757    5                       VY_ED_STOP$ = PINCRW( START$, TSIZE_READ - SIZEW( VYD$TMPLT ) );
      394    11758    5                       END;
      395    11759    4                   IF TSIZE_READ < GET THEN CALL VYF$FREE( ALL_TYPE, GET - TSIZE_READ,
             11759                            1 );
      396    11760    4                   END;
      397    11761    3               END;
      398    11762    2           SIZE = VY_OK.OUNAME.COUNT;
      399    11763
      400    11764    2           CURR$ = VY_SYMBOL$;
      401    11765    3           DO WHILE( CURR$ ~= ADDR(NIL) );
      402    11766    3               ITEM$ = CURR$ -> VY$LLIST.ITEM$;
      403    11767    3               P$ = VY_ED_START$;
      404    11768    4               IF P$ ~= ADDR(NIL) THEN DO;
      405    11769    4                   DNAME$ = VY_ROOT$ -> VY$NODE.L_START.DN$;
      406    11770    5                   DO WHILE( P$ <= VY_ED_STOP$ );
      407    11771    5                       IF PINCRW( DNAME$, P$->VYD$TMPLT.I.NAME_DISP) -> B$DNAME
      408    11772    5                          = ITEM$ -> B$DNAME THEN GOTO EXIT_LOOP;
      409    11773    5                       P$ = PINCRW( P$, SIZEW(VYD$TMPLT) );
      410    11774    5                       END;
      411    11775    4                   END;
      412    11776    3   EXIT_LOOP:
      413    11777    4               IF P$ > VY_ED_STOP$ OR P$ = ADDR(NIL) THEN DO;
      414    11778        /*E*  ERROR: VYO-E$ENTRY_NAME_NOT_DEFINED_VY-C
      415    11779              MESSAGE: %U1 is not a defined entry-name in the object unit %U2.
      416    11780                       A cross-reference is not defined for %U1.
      417    11781        */
      418    11782    4                   VY_EFIELD1.COUNT = ITEM$ -> B$DNAME.COUNT;
      419    11783    4                   VY_EFIELD1.CHARS = ITEM$ -> B$DNAME.TEXT;
      420    11784    4                   VY_EFIELD2 = VY_OK.OUNAME;
      421    11785                        %SCREAM( ERR#=%E$ENTRY_NAME_NOT_DEFINED_VY,LEVEL=%@E$S_VY,MID="'O'")
             11785                            ;
PL6.E3A0      #001=VYO$OBJECT File=VYO$OBJECT.:E05TSI                            WED 07/30/97 08:58 Page:30   
      422    11788    4                   GOTO NEXT_ONE;
      423    11789    4                   END;
      424    11790    3               VY_O_KEY_BUF.FORM0.COUNT = ITEM$ -> B$DNAME.COUNT;
      425    11791    3               VY_O_KEY_BUF.FORM0.CHARS = ITEM$ -> B$DNAME.TEXT;
      426    11792
      427    11793    3               WRITE_SWITCH = VY_INV_OWRITE;
      428    11794    3   RETRY_DEFINE:
      429    11795    3               CALL VYI$WRITE_C( 0/*@OF*/,
      430    11796    3                  ADDR( VY_OK.OUNAME.CHARS ),
      431    11797    3                  SIZE,
      432    11798    3                  0/*@OF*/, WRITE_SWITCH) ALTRET( A_DUP_DEFINE);
      433    11799    4               DO WHILE( '0'B );
      434    11800    4   A_DUP_DEFINE:
      435    11801    5                   DO CASE( VY_O.PRIMARY_OPTION.DUPLICATE );
      436    11802    5                   CASE( 2/*@C_ERROR_KEY_WORD*/ );
      437    11803    5                       CALL DUP_ERR( 2022 );
      438    11804    5                   CASE( 1/*@C_INQUIRE_KEY_WORD*/ );
      439    11805    5                       CALL DUP_ERR( 2021 );
      440    11806                            %SCREAM(
      441    11807                            ERR#=%E$DUP_ASK_VY,
      442    11808                            LEVEL=%@E$I_VY,
      443    11809                            MID="'O'");
      444    11812    5                       CALL VYY$YESNO( ANSWER );
      445    11813    6                       IF ANSWER = 1/*@YES*/ THEN DO;
      446    11814    6                           WRITE_SWITCH = '1'B/*@TRUE_B*/;
      447    11815    6                           GOTO RETRY_DEFINE;
      448    11816    6                           END;
      449    11817    5                       END; /* Do case( VY_O.PRIMARY_OPTION.DUPLICATE ); */
      450    11818    4                   END; /* Do never */
      451    11819
      452    11820    3   NEXT_ONE:
      453    11821    3               CURR$ = CURR$ -> VY$LLIST.LINK$;
      454    11822    3               END; /* Do while( CURR$ ~= addr(nil) ) */
      455    11823    3           DO I = 0 TO SIZEW( VY_DEF_REC_A ) -2;
      456    11824    3               REC_TYPE = VY_DEF_REC_A(I); /* Get record type */
      457    11825    3               VY_CURR$ -> VY$NODE.L_START_A$(REC_TYPE) = SAVE_START$(I);
      458    11826    3               VY_CURR$ -> VY$NODE.L_STOP_A$(REC_TYPE) = SAVE_STOP$(I);
PL6.E3A0      #001=VYO$OBJECT File=VYO$OBJECT.:E05TSI                            WED 07/30/97 08:58 Page:31   
      459    11827    3               VY_CURR$ -> VY$NODE.L_SIZE_A(REC_TYPE) = SAVE_SIZE(I);
      460    11828    3               VY_CURR$ -> VY$NODE.L_PREV_SIZE_A(REC_TYPE) = SAVE_PREV_SIZE(I);
      461    11829    3               ALL_TYPE = VY_PASS1_ALL_TYPE(REC_TYPE);
      462    11830    3               IF ALL_A(REC_TYPE) >0 THEN
      463    11831    3                   CALL VYF$FREE( ALL_TYPE, ALL_A(REC_TYPE), 0 );
      464    11832    3               END; /* Do i = 0 to 1; */
      465    11833        %EJECT;
PL6.E3A0      #001=VYO$OBJECT File=VYO$OBJECT.:E05TSI                            WED 07/30/97 08:58 Page:32   
      466    11834    2       CASE( 10/*@C_DROP_KEY_WORD*/ );
      467    11835
      468    11836                %ALLOCATE( PTR$=BUFFER$, TYPE=@GDP, SIZE=8 );
      469    11843    2           CURR$ = VY_SYMBOL$;
      470    11844    3           DO WHILE( CURR$ ~= ADDR(NIL) );
      471    11845    3               ITEM$ = CURR$ -> VY$LLIST.ITEM$;
      472    11846    3               VY_O_KEY_BUF.FORM0.COUNT = ITEM$ -> B$DNAME.COUNT;
      473    11847    3               VY_O_KEY_BUF.FORM0.CHARS = ITEM$ -> B$DNAME.TEXT;
      474    11848
      475    11849    3               CALL VYI$READ( 0/*@OF*/,
      476    11850    3                  BUFFER$,
      477    11851    3                  8,
      478    11852    3                  0/*@OF*/,
      479    11853    3                  '1'B ) ALTRET(INC_P);
      480    11854    4               IF BUFFER$ -> CHAR$CHAR = VY_OK.OUNAME.CHARS THEN DO;
      481    11855    4                   CALL M$DELREC( FPT_DELREC );
      482    11856    4                   END; /* If BUFFER$ -> .... */
      483    11857    4               ELSE DO;
      484    11858        /*E*  ERROR: VYO-E$DROP_ERR_VY-0
      485    11859              MESSAGE: %U1 is not in %U2; It is in %U3; Not dropped.
      486    11860              DESCRIPTION: Self-explanatory.
      487    11861        */
      488    11862    4                   VY_EFIELD1.COUNT = ITEM$ -> B$DNAME.COUNT;
      489    11863    4                   VY_EFIELD1.CHARS = ITEM$ -> B$DNAME.TEXT;
      490    11864    4                   VY_EFIELD2 = VY_OK.OUNAME;
      491    11865    4                   VY_EFIELD3.COUNT = VY_IO_SIZEC;
      492    11866    4                   VY_EFIELD3.CHARS = BUFFER$ -> CHAR$CHAR;
      493    11867                        %SCREAM(
      494    11868                        ERR#=%E$DROP_ERR_VY,
      495    11869                        LEVEL=%@E$S_VY,
      496    11870                        MID="'O'");
      497    11873    4                   END; /* Else do; */
      498    11874    4               DO WHILE( '0'B );
      499    11875    4   INC_P:
      500    11876        /*E*  ERROR: VYO-E$DROP_ERR_EXIST_VY-0
      501    11877              MESSAGE: %U1 is not in %U2; Does not exist.
      502    11878        */
PL6.E3A0      #001=VYO$OBJECT File=VYO$OBJECT.:E05TSI                            WED 07/30/97 08:58 Page:33   
      503    11879    4                   VY_EFIELD1.COUNT = ITEM$ -> B$DNAME.COUNT;
      504    11880    4                   VY_EFIELD1.CHARS = ITEM$ -> B$DNAME.TEXT;
      505    11881    4                   VY_EFIELD2 = VY_OK.OUNAME;
      506    11882                        %SCREAM(
      507    11883                        ERR#=%E$DROP_ERR_EXIST_VY,
      508    11884                        LEVEL=%@E$S_VY,
      509    11885                        MID="'O'");
      510    11888    4                   END; /* Do never */
      511    11889
      512    11890    3               CURR$ = CURR$ -> VY$LLIST.LINK$;
      513    11891    3               END; /* Do while( CURR$ ~= addr(nil) ); */
      514    11892    2           CALL VYF$FREE( 8/*@GDP*/, 8, 0 );
      515    11893    2           END; /* Do case( VY_COMMAND ); */
      516    11894    1   DO_RETURN:
      517    11895    1       RETURN;
      518    11896
      519    11897        %EJECT;
PL6.E3A0      #001=VYO$OBJECT File=VYO$OBJECT.:E05TSI                            WED 07/30/97 08:58 Page:34   
      520    11898        /*I*  NAME:       READ_WRITE_RECORDS
      521    11899              PURPOSE:    Read object unit records and write them to a library/object file
      522    11900              INTERFACE:  VYU$PREAD
      523    11901                          VYE$ERROR
      524    11902                          VYF$FREE
      525    11903                          VYD$B2C
      526    11904                          VYA$GET
      527    11905              DESCRIPTION:
      528    11906                  For object unit record types 1 (Defined names) to 9 (SEGREFs)
      529    11907                  the procedure allocates a buffer for the record type and calls
      530    11908                  VYU$PREAD to read all the records for the record type into the
      531    11909                  allocated buffer and to write the records to a library/object file
      532    11910                  for COPY and EXTRACT commands.
      533    11911        */
      534    11912
      535    11913
      536    11914    1   READ_WRITE_RECORDS: PROC;
      537    11915
      538    11916
      539    11917    2       VY_ED_START$=ADDR(NIL);
      540    11918    2       HB = SIZEW( VY_PASS1_REC_TYPE ) - 1;
      541    11919    2       ALL$ = ALLOCATE$;
      542    11920    3       DO I = 0 TO HB; /* @DN to @SR */
      543    11921    3           REC_TYPE = VY_PASS1_REC_TYPE(I); /* Get record type */
      544    11922    3           IF VY_COMMAND = 6/*@C_LIST_KEY_WORD*/ AND VY_O.MAP_A(REC_TYPE) = 0/*@NO*/
      545    11923    3           THEN ; /* Do nothing */
      546    11924    4           ELSE DO;
      547    11925    4               SAVE_START$(I) = VY_CURR$ -> VY$NODE.L_START_A$(REC_TYPE);
      548    11926    4               SAVE_STOP$(I) = VY_CURR$ -> VY$NODE.L_STOP_A$(REC_TYPE);
      549    11927    4               SAVE_SIZE(I) = VY_CURR$ -> VY$NODE.L_SIZE_A(REC_TYPE);
      550    11928    4               SAVE_PREV_SIZE(I) = VY_CURR$ -> VY$NODE.L_PREV_SIZE_A(REC_TYPE);
      551    11929    4               ALL_A(REC_TYPE) = 0;
      552    11930    4               ALL_TYPE = ALL$ -> VY$WORD_A(REC_TYPE);
             11930                        /*Get segment index for this record type */
      553    11931    5               IF REC_TYPE = 3 THEN DO;
      554    11932    5                   TSIZE = 32768; /*  (2**14)*2 */
      555    11933    5                   PAGE = 1024/*@PAGE_SIZE*/;
PL6.E3A0      #001=VYO$OBJECT File=VYO$OBJECT.:E05TSI                            WED 07/30/97 08:58 Page:35   
      556    11934    5                   GET = 1024/*@PAGE_SIZE*/;
      557    11935    5                   END;
      558    11936    5               ELSE DO;
      559    11937    5                   HEAD_INX = VY_HEAD_INX(REC_TYPE); /* Get index into head record */
      560    11938    5                   TSIZE = VY_OU_HEAD.REC_A.SIZE(HEAD_INX);
             11938                            /* Get total size for this record type */
      561    11939    5                   PAGE = VY_OU_HEAD.REC_A.PAGE(HEAD_INX); /* Get the page size */
      562    11940    5                   GET = TSIZE;
      563    11941    5                   END;
      564    11942    5               IF TSIZE > 0 THEN DO;
      565    11943    6                   DO CASE( REC_TYPE );
      566    11944    6                   CASE( 3, 4, 6, 8 );
      567    11945    7                       IF MOD( PAGE, 2 ) ~= 0 THEN DO;
             11945                                /* Not an even page size - bitch */
      568    11946        /*E*  ERROR: VYO-E$ODD_PAGE_SIZE_VY-0
      569    11947              MESSAGE: Object language error. Odd page size.
      570    11948                       Page size = %U1; Record type = %U2.
      571    11949              DESCRIPTION: Self-explanatory.
      572    11950        */
      573    11951                                %NUMBER( NUM1=PAGE, NUM2=REC_TYPE );
      574    11968                                %SCREAM(
      575    11969                                ERR#=%E$ODD_PAGE_SIZE_VY,
      576    11970                                MID="'O'",
      577    11971                                LEVEL=%@E$F_VY,
      578    11972                                AUX=%@E$OUOF_VY);
      579    11975    7                           RETURN;
      580    11976    7                           END;
      581    11977    6                       END;
      582    11978                        %ALLOCATE( PTR$=START$, TYPE=ALL_TYPE, SIZE=GET );
      583    11985    6                   IF REC_TYPE = 3 THEN DO;
      584    11986    6                       IF VY_CURR$ -> VY$NODE.L_START_A$(REC_TYPE) = ADDR(NIL) THEN
      585    11987    6                           VY_CURR$ -> VY$NODE.L_START_A$(REC_TYPE) = START$;
      586    11988         /* Set start for this record type */
      587    11989    6                       VY_LAST_SC$ = START$;
      588    11990    6                       END;
      589    11991    5                   CALL VYU$PREAD(
      590    11992    5                      NPAGE,
PL6.E3A0      #001=VYO$OBJECT File=VYO$OBJECT.:E05TSI                            WED 07/30/97 08:58 Page:36   
      591    11993    5                      TSIZE_READ,
      592    11994    5                      0/*@OF*/,
      593    11995    5                      0/*@OF*/,
      594    11996    5                      REC_TYPE,
      595    11997    5                      START$,
      596    11998    5                      PAGE,
      597    11999    5                      TSIZE,
      598    12000    5                      ALL_TYPE,
      599    12001    5                      GET,
      600    12002    5                      VY_CURR$,
      601    12003    5                      SOURCE );
      602    12004    5                   ALL_A(REC_TYPE) = TSIZE_READ;
      603    12005
      604    12006    6                   IF TSIZE_READ > 0 THEN DO;
      605    12007    6                       P$ = START$;
      606    12008    7                       IF REC_TYPE = 4 THEN DO;
      607    12009    7                           VY_ED_START$ = START$;
      608    12010    7                           VY_ED_STOP$ = PINCRW( START$, TSIZE_READ - SIZEW( VYD$TMPLT
             12010                                    ) );
      609    12011    8                           DO WHILE( P$ <= VY_ED_STOP$ AND ~ HAVE_PRIMARY );
      610    12012    9                               IF P$ -> VYD$TMPLT.I.P ~= 0 THEN DO;
      611    12013    9                                   HAVE_PRIMARY = '1'B/*@TRUE_B*/;
      612    12014    9                                   IF VY_O.MAP_ATTCH.REF = 1/*@YES*/
      613    12015    9                                   THEN VY_O.MAP_ATTCH.DEF = 1/*@YES*/;
      614    12016    9                                   PRIMARY_NAME_DISP = P$ -> VYD$TMPLT.I.NAME_DISP;
      615    12017    9                                   END;
      616    12018    8                               ELSE P$ = PINCRW( P$, SIZEW( VYD$TMPLT ) );
      617    12019    8                               END;
      618    12020    7                           END;
      619    12021    7                       IF REC_TYPE >= 4 AND REC_TYPE <= 9 AND VY_O.MAP_A(REC_TYPE) ~= 0
             12021                                /*@NO*/ THEN DO;
      620    12022    8                           IF ~ HAVE_PRIMARY THEN DO;
      621    12023    8                               VY_O.MAP_ATTCH.DEF = 1/*@YES*/;
      622    12024    8                               NEW_VALUE = ( VY_OK.OUNAME.COUNT + 4/*@CHAR_WORD*/+1) /
             12024                                        4/*@CHAR_WORD*/;
      623    12025                                    %ALLOCATE( PTR$=P$, TYPE=@DN_DS_1,SIZE=NEW_VALUE);
      624    12032    8                               P$ -> B$DNAME.COUNT = VY_OK.OUNAME.COUNT;
PL6.E3A0      #001=VYO$OBJECT File=VYO$OBJECT.:E05TSI                            WED 07/30/97 08:58 Page:37   
      625    12033    8                               P$ -> B$DNAME.TEXT = VY_OK.OUNAME.CHARS;
      626    12034    8                               IF VY_CURR$ -> VY$NODE.L_START.DN$ = ADDR(NIL)
      627    12035    8                               THEN VY_CURR$ -> VY$NODE.L_START.DN$ = P$;
      628    12036    8                               PRIMARY_NAME_DISP = VY_CURR$ -> VY$NODE.L_SIZE.DN;
      629    12037    8                               VY_CURR$ -> VY$NODE.L_SIZE.DN = VY_CURR$ -> VY$NODE.
             12037                                        L_SIZE.DN + NEW_VALUE;
      630    12038    8                               VY_CURR$ -> VY$NODE.L_STOP.DN$ = PINCRW( P$, NEW_VALUE-1
             12038                                        );
      631    12039    8                               END;
      632    12040    7                           P$ = START$;
      633    12041    8                           IF MOD( REC_TYPE, 2 ) = 0 THEN DO;
      634    12042    8                               X = 3;
      635    12043    8                               INC = SIZEW( VYD$TMPLT );
      636    12044    8                               END;
      637    12045    8                           ELSE DO;
      638    12046    8                               X = 1;
      639    12047    8                               INC = SIZEW( VYR$TMPLT );
      640    12048    8                               END;
      641    12049    7                           Q$ = PINCRW( START$, TSIZE_READ - INC );
      642    12050    8                           DO WHILE( P$ <= Q$ );
      643    12051    8                               P$ -> VYD$TMPLT.A_SBIN(X) = PRIMARY_NAME_DISP;
      644    12052    8                               P$ = PINCRW( P$, INC );
      645    12053    8                               END;
      646    12054    7                           END;
      647    12055    6                       END;
      648    12056    5                   IF TSIZE_READ < GET THEN CALL VYF$FREE( ALL_TYPE, GET - TSIZE_READ,
             12056                            1 );
      649    12057    5                   END;
      650    12058    4               END;
      651    12059    3           END;
      652    12060    2   END READ_WRITE_RECORDS;
      653    12061        %EJECT;
PL6.E3A0      #001=VYO$OBJECT File=VYO$OBJECT.:E05TSI                            WED 07/30/97 08:58 Page:38   
      654    12062        /*I*  NAME:       READ_WRITE_REMAINING_RECORDS
      655    12063              PURPOSE:    Read all records not read by READ_WRITE_RECORDS from
      656    12064                          the object unit and writes them to a library/object file.
      657    12065              INTERFACE:  VYA$GET
      658    12066                          VYF$FREE
      659    12067                          VYK$KEY
      660    12068                          VYI$READ
      661    12069                          VYI$WRITE
      662    12070                          VYE$ERROR
      663    12071                          READ_WRITE_DEBUG_RECORDS
      664    12072                          READ_WRITE_PLOVER_RECORDS
      665    12073                          M$PRECORD
      666    12074              DESCRIPTION:
      667    12075                  Reads all type 10 records from the object unit and writes them
      668    12076                  to a library/object file.  Calls READ_WRITE_DEBUG_RECORDS to read and
      669    12077                  write all debug records.  Calls READ_WRITE_PLOVER_RECORDS to
      670    12078                  to read and write all PLOVER records.  Finally, it writes the
      671    12079                  head record to the target library/object file.
      672    12080        */
      673    12081
      674    12082
      675    12083    1   READ_WRITE_REMAINING_RECORDS: PROC;
      676    12084
      677    12085
      678    12086
      679    12087         /* Now do a partial determination of the receiving buffer size */
      680    12088    2       VY_REC_BUF_SIZE = VY_OU_HEAD.LB_SIZE;
      681    12089    2       IF VY_OU_HEAD.PR_SIZE > VY_REC_BUF_SIZE THEN VY_REC_BUF_SIZE = VY_OU_HEAD.
             12089                PR_SIZE;
      682    12090    2       IF VY_OU_HEAD.RL_SIZE > VY_REC_BUF_SIZE THEN VY_REC_BUF_SIZE = VY_OU_HEAD.
             12090                RL_SIZE;
      683    12091            %ALLOCATE(
      684    12092            PTR$=VY_REC_BUF_START$,
      685    12093            TYPE=@PR_DS_1,
      686    12094            SIZE=VY_REC_BUF_SIZE);
      687    12101
      688    12102
PL6.E3A0      #001=VYO$OBJECT File=VYO$OBJECT.:E05TSI                            WED 07/30/97 08:58 Page:39   
      689    12103    2       TOTAL(11) = VY_OU_HEAD.LB_SIZE;
      690    12104    2       PAGE_A(11) = TOTAL(11);
      691    12105    2       FIRST = '1'B/*@TRUE_B*/;
      692    12106    2   FIRST_READ:
      693    12107    2       CALL VYK$KEY( 0/*@OF*/, 10, 0, 0 );
      694    12108    2       CALL VYI$READ( 0/*@OF*/,
      695    12109    2          VY_REC_BUF_START$,
      696    12110    2          VY_REC_BUF_SIZE,
      697    12111    2          0/*@OF*/, '0'B ) ALTRET(IO_ERROR_FIRST);
      698    12112    2       FIRST = '0'B/*@FALSE_B*/;
      699    12113    2       GOTO READ_RECORD;
      700    12114    2   IO_ERROR_FIRST:
      701    12115    3       DO CASE( VY_IO_STATUS );
      702    12116    3       CASE( 0/*@IO_EOF*/ ); /* Error - empty */
      703    12117        /*E*  ERROR: VYO-E$FIMAGE_IO_EOF_VY-0
      704    12118              MESSAGE: No program or relocation records; End of file encountered.
      705    12119              DESCRIPTION: Self-explanatory.
      706    12120        */
      707    12121                %SCREAM(
      708    12122                ERR#=%E$FIMAGE_IO_EOF_VY,
      709    12123                MID="'O'",
      710    12124                LEVEL=%@E$F_VY,
      711    12125                AUX=%@E$OUOF_VY);
      712    12128    3       CASE( 1/*@IO_NOKEY*/ );
      713    12129    3           GOTO NEXT_RECORD;
      714    12130    3       CASE( 2/*@IO_LD*/ );
      715    12131    3   IO_ERROR_LD:
      716    12132        /*E*  ERROR: VYO-E$FIMAGE_IO_LD_VY-0
      717    12133        MESSAGE: Object language error. Lost data condition for program/relocation.
      718    12134                 Attempting recovery.
      719    12135              DESCRIPTION: Self-explanatory.
      720    12136        */
      721    12137                %SCREAM(
      722    12138                ERR#=%E$FIMAGE_IO_LD_VY,
      723    12139                MID="'O'",
      724    12140                LEVEL=%@E$S_VY,
      725    12141                AUX=%@E$OUOF_VY);
PL6.E3A0      #001=VYO$OBJECT File=VYO$OBJECT.:E05TSI                            WED 07/30/97 08:58 Page:40   
      726    12144                %ALLOCATE(
      727    12145                PTR$=Q$,
      728    12146                TYPE=@PR_DS_1,
      729    12147                SIZE=VY_REC_BUF_SIZE);
      730    12154    3           VY_REC_BUF_SIZE = VY_REC_BUF_SIZE + VY_REC_BUF_SIZE;
      731    12155    3           IF FIRST THEN GOTO FIRST_READ;
      732    12156    3           CALL M$PRECORD( FPT_PRECORD );
      733    12157    3           GOTO NEXT_RECORD;
      734    12158    3           END; /* Do case( VY_IO_STATUS ); */
      735    12159
      736    12160        %EJECT;
PL6.E3A0      #001=VYO$OBJECT File=VYO$OBJECT.:E05TSI                            WED 07/30/97 08:58 Page:41   
      737    12161    2   NEXT_RECORD:
      738    12162    2       CALL VYI$READ( 0/*@OF*/,
      739    12163    2          VY_REC_BUF_START$,
      740    12164    2          VY_REC_BUF_SIZE,
      741    12165    2          4/*@NO_KEY*/, '0'B ) ALTRET(IO_ERROR_SUBSEQUENT);
      742    12166    3       DO WHILE( '0'B );
      743    12167    3   IO_ERROR_SUBSEQUENT:
      744    12168    4           DO CASE( VY_IO_STATUS );
      745    12169    4           CASE( 0/*@IO_EOF*/ );
      746    12170    4               GOTO POST;
      747    12171    4           CASE( 1/*@IO_NOKEY*/ );
      748    12172        /*E*  ERROR: VYO-E$INTERNAL_FIMAGE_NOKEY_VY-0
      749    12173        MESSAGE: LEMUR internal error. No such key error in image processing on
      750    12174                 the I-th read; I>1.
      751    12175              DESCRIPTION: Self-explanatory.
      752    12176        */
      753    12177                    %SCREAM(
      754    12178                    ERR#=%E$INTERNAL_FIMAGE_NOKEY_VY,
      755    12179                    LEVEL=%@E$F_VY,
      756    12180                    MID="'O'",
      757    12181                    AUX=%@E$OUOF_VY);
      758    12184    4           CASE( 2/*@IO_LD*/ );
      759    12185    4               GOTO IO_ERROR_LD;
      760    12186    4               END; /* Do case( VY_IO_STATUS ); */
      761    12187    3           END; /* Do never */
      762    12188        %EJECT;
PL6.E3A0      #001=VYO$OBJECT File=VYO$OBJECT.:E05TSI                            WED 07/30/97 08:58 Page:42   
      763    12189    2   READ_RECORD:
      764    12190    2       IF VY_O_KEY_BUF.FORM2.UTS ~= VY_OU_HEAD.UTS THEN GOTO POST;
      765    12191    2       P$ = VY_REC_BUF_START$;
      766    12192    2       RTYPE = VY_OK.KRTYPE;
      767    12193    2       PAGE# = VY_OK.KPAGE#;
      768    12194    2       IO_SIZEW = VY_IO_SIZEW;
      769    12195    2       SECT# = VY_OK.KSECT#;
      770    12196    3       IF VY_IO_SIZEW = 0 THEN DO;
      771    12197        /*E*   ERROR: VYO-E$FIMAGE_ZERO_REC_SIZE_VY-0
      772    12198              MESSAGE: Object language error: 0 record size.
      773    12199              DESCRIPTION: Self-explanatory.
      774    12200        */
      775    12201    3           ERR_LEVEL = -3;
      776    12202                %SCREAM(
      777    12203                ERR#=%E$FIMAGE_ZERO_REC_SIZE_VY,
      778    12204                LEVEL=ERR_LEVEL,
      779    12205                MID="'O'");
      780    12208    3   TELL_PAGE_TYPE:
      781    12209        /*E*  ERROR: VYO-E$FIMAGE_TYPE_PAGE_VY-0
      782    12210              MESSAGE: In record type 10 (sub-type %U1). Key offset = %U2 (octal).
      783    12211                       Word displacement into record = %U3 (octal).
      784    12212              DESCRIPTION: Self-explanatory.
      785    12213        */
      786    12214    3           ERR_WORD_DISP = POFFW( P$, VY_REC_BUF_START$ );
      787    12215    3           IF ERR_LEVEL < 0 THEN ERR_LEVEL = - ERR_LEVEL;
      788    12216                %NUMBER( NUM1="VY_OK.KSTYPE", NUM2="VY_OK.KOFSET", BASE2=8,
      789    12217                NUM3=ERR_WORD_DISP, BASE3=8 );
      790    12234                %SCREAM(
      791    12235                ERR#=%E$FIMAGE_TYPE_PAGE_VY,
      792    12236                MID="'O'",
      793    12237                AUX=%@E$OUOF_VY,
      794    12238                LEVEL=ERR_LEVEL);
      795    12241    3           GOTO NEXT_RECORD;
      796    12242    3           END;
      797    12243    3       IF RTYPE = 10 THEN DO;
      798    12244    3           VY_OL_KEY_BUF = VY_O_KEY_BUF;
      799    12245    3           VY_OL_KEY_BUF.FORM1.UTS = VY_OU_HEAD.UTS;
PL6.E3A0      #001=VYO$OBJECT File=VYO$OBJECT.:E05TSI                            WED 07/30/97 08:58 Page:43   
      800    12246    3           CALL VYI$WRITE( 1/*@RF*/, VY_REC_BUF_START$, VY_IO_SIZEW, 3/*@NEW_KEY*/ );
      801    12247    3           GOTO NEXT_RECORD;
      802    12248    3           END;
      803    12249    2       ELSE
      804    12250    3           IF RTYPE >= 11 AND RTYPE <= 15 THEN DO;
      805    12251         /* In debug record range */
      806    12252    3               CALL READ_WRITE_DEBUG_RECORDS;
      807    12253    3               END;
      808    12254    3           ELSE DO; /* Scream bloody murder */
      809    12255        /*E*  ERROR: VYO-E$FIMAGE_UNKNOWN_REC_VY-0
      810    12256              MESSAGE: Object language error: Unknown record type.
      811    12257              DESCRIPTION: Self-explanatory.
      812    12258        */
      813    12259                    %SCREAM(
      814    12260                    ERR#=%E$FIMAGE_UNKNOWN_REC_VY,
      815    12261                    LEVEL=%@E$S_VY,
      816    12262                    MID="'O'",
      817    12263                    AUX=%@E$OUOF_VY);
      818    12266    3               GOTO NEXT_RECORD;
      819    12267    3               END;
      820    12268
      821    12269        %EJECT;
PL6.E3A0      #001=VYO$OBJECT File=VYO$OBJECT.:E05TSI                            WED 07/30/97 08:58 Page:44   
      822    12270    2   POST:
      823    12271    2       CALL VYF$FREE( 0/*@PR_DS_1*/, VY_REC_BUF_SIZE, 0 );
      824    12272
      825    12273         /* Read/write plover records */
      826    12274
      827    12275    2       CALL READ_WRITE_PLOVER_RECORDS;
      828    12276
      829    12277         /* Write head record */
      830    12278
      831    12279    2       OLD_UTS = VY_OU_HEAD.UTS;
      832    12280    2       VY_O_KEY_BUF.FORM0.COUNT = VY_OK.OUNAME.COUNT + 1;
      833    12281    2       CALL CONCAT( VY_O_KEY_BUF.FORM0.CHARS,
      834    12282    2          '"',
      835    12283    2          VY_OK.OUNAME.CHARS );
      836    12284    2       CALL VYI$WRITE( 1/*@RF*/,
      837    12285    2          ADDR( VY_OU_HEAD ),
      838    12286    2          SIZEW( VY_OU_HEAD ),
      839    12287    2          0/*@OF*/,
      840    12288    2          '1'B );
      841    12289
      842    12290
      843    12291
      844    12292
      845    12293
      846    12294    3       DO I = 0 TO HB; /* @DN to @ER */
      847    12295    3           REC_TYPE = VY_PASS1_REC_TYPE(I); /* Get record type */
      848    12296    3           ALL_TYPE = ALL$ -> VY$WORD_A(REC_TYPE);
             12296                    /*Get segment index for this record type */
      849    12297    4           IF ALL_A(REC_TYPE) >0 AND VY_O.MAP_A(REC_TYPE) = 0/*@NO*/ THEN DO;
      850    12298    4               VY_CURR$ -> VY$NODE.L_START_A$(REC_TYPE) = SAVE_START$(I);
      851    12299    4               VY_CURR$ -> VY$NODE.L_STOP_A$(REC_TYPE) = SAVE_STOP$(I);
      852    12300    4               VY_CURR$ -> VY$NODE.L_SIZE_A(REC_TYPE) = SAVE_SIZE(I);
      853    12301    4               VY_CURR$ -> VY$NODE.L_PREV_SIZE_A(REC_TYPE) = SAVE_PREV_SIZE(I);
      854    12302    4               CALL VYF$FREE( ALL_TYPE, ALL_A(REC_TYPE), 0 );
      855    12303    4               END; /* If ... */
      856    12304    3           END; /* Do i = 0 to hb; */
      857    12305
PL6.E3A0      #001=VYO$OBJECT File=VYO$OBJECT.:E05TSI                            WED 07/30/97 08:58 Page:45   
      858    12306
      859    12307    2   END READ_WRITE_REMAINING_RECORDS;
      860    12308
      861    12309        %EJECT;
PL6.E3A0      #001=VYO$OBJECT File=VYO$OBJECT.:E05TSI                            WED 07/30/97 08:58 Page:46   
      862    12310        /*I*  NAME:       READ_WRITE_DEBUG_RECORDS
      863    12311              PURPOSE:    Read debug records from an object unit file and write
      864    12312                          them to a library/object file.
      865    12313              INTERFACE:  VYK$KEY
      866    12314                          VYI$READ
      867    12315                          VYI$WRITE
      868    12316                          VYE$ERROR
      869    12317                          VYA$GET
      870    12318                          VYF$FREE
      871    12319              DESCRIPTION:
      872    12320                  Reads all debug records for an object unit and writes them
      873    12321                  to a library/object file.
      874    12322        */
      875    12323
      876    12324
      877    12325    1   READ_WRITE_DEBUG_RECORDS: PROC;
      878    12326
      879    12327
      880    12328    3       IF VY_O.PRIMARY_OPTION.NODEBUG ~= 0 THEN DO;
      881    12329    3           VY_OU_HEAD.LB_SIZE = 0;
      882    12330    3           RETURN;
      883    12331    3           END;
      884    12332    3       IF RTYPE ~= 11 THEN DO; /* It's not a logical block debug record */
      885    12333        /*E*  ERROR: VYT-E$FIMAGE_NO_LB_VY-0
      886    12334              MESSAGE: Object language error.  Debug records present but logical
      887    12335                       block record missing.  Skipping debug processing.
      888    12336              DESCRIPTION: Self-explanatory.
      889    12337        */
      890    12338                %SCREAM( ERR#=%E$FIMAGE_NO_LB_VY, MID="'T'", LEVEL=%@E$S_VY,
      891    12339                AUX=%@E$OUOF_VY );
      892    12342    3           RETURN;
      893    12343    3           END;
      894    12344    3       IF PAGE# ~= 0 THEN DO;
      895    12345        /*E*  ERROR: VYO-E$FIMAGE_D_LB_VY-0
      896    12346              MESSAGE: First page of logical block records is %U1; Must be 0.
      897    12347              DESCRIPTION: Self-explanatory.
      898    12348        */
PL6.E3A0      #001=VYO$OBJECT File=VYO$OBJECT.:E05TSI                            WED 07/30/97 08:58 Page:47   
      899    12349                %NUMBER( NUM1=PAGE# );
      900    12366                %SCREAM( ERR#=%E$FIMAGE_D_LB_VY, MID="'O'", LEVEL=%@E$S_D_VY );
      901    12369    3   SKIP_DEBUG:
      902    12370        /*E*  ERROR: VYO-E$FIMAGE_D_SKIP_VY-0
      903    12371              MESSAGE: Skipping debug record processing.
      904    12372              DESCRIPTION: Self-explanatory.
      905    12373        */
      906    12374                %SCREAM(
      907    12375                ERR#=%E$FIMAGE_D_SKIP_VY,
      908    12376                LEVEL=%@E$S_VY,
      909    12377                MID="'O'",
      910    12378                AUX=%@E$OUOF_VY);
      911    12381    3           RETURN;
      912    12382    3           END;
      913    12383    3       IF IO_SIZEW < 8 THEN DO;
      914    12384        /*E*  ERROR: VYO-E$FIMAGE_D_SHORT_LB_VY-0
      915    12385              MESSAGE: Page 0 of debug record type 11 is less than 8 words.
      916    12386              DESCRIPTION: Self-explanatory.
      917    12387        */
      918    12388                %SCREAM(
      919    12389                ERR#=%E$FIMAGE_D_SHORT_LB_VY,
      920    12390                MID="'O'",
      921    12391                LEVEL=%@E$S_D_VY);
      922    12394    3           GOTO SKIP_DEBUG;
      923    12395    3           END;
      924    12396    2       PAGE_SIZE = 0;
      925    12397    2       J = 0;
      926    12398    2       TOTAL(11) = VY_IO_SIZEW;
      927    12399    2       PAGE_A(11) = VY_IO_SIZEW;
      928    12400    3       DO I = 12 TO 15;
      929    12401    3           Q$ = PINCRW( VY_REC_BUF_START$, DEBUG_MAP(J) );
      930    12402    3           TSIZE = Q$ -> VY$HALF_A(0);
      931    12403    3           PSIZE = Q$ -> VY$HALF_A(1);
      932    12404    3           IF PAGE_SIZE < PSIZE THEN PAGE_SIZE = PSIZE;
      933    12405    3           TOTAL(I) = TSIZE;
      934    12406    3           PAGE_A(I) = PSIZE;
      935    12407    3           J = J + 1;
PL6.E3A0      #001=VYO$OBJECT File=VYO$OBJECT.:E05TSI                            WED 07/30/97 08:58 Page:48   
      936    12408    3           END; /* Do i = @ES to @PN */
      937    12409    3       IF PAGE_SIZE > VY_REC_BUF_SIZE THEN DO;
      938    12410    3           J = PAGE_SIZE - VY_REC_BUF_SIZE;
      939    12411                %ALLOCATE(
      940    12412                PTR$=Q$,
      941    12413                TYPE=@PR_DS_1,
      942    12414                SIZE=J);
      943    12421    3           VY_REC_BUF_SIZE = VY_REC_BUF_SIZE + J;
      944    12422    3           END; /* If PAGE_SIZE > VY_REC_BUF_SIZE then do; */
      945    12423
      946    12424
      947    12425
      948    12426    3       DO WHILE( '1'B );
      949    12427    4           IF MOD( IO_SIZEW, VY_REC_SIZE_A(RTYPE) ) ~= 0 THEN DO;
      950    12428        /*E*  ERROR: VYO-E$FIMAGE_D_ENTRIES_VY-0
      951    12429              MESSAGE: Debug record type %U1 does not contain an integral # of entries.
      952    12430              DESCRIPTION: Self-explanatory.
      953    12431        */
      954    12432                    %NUMBER( NUM1=RTYPE );
      955    12449                    %SCREAM( ERR#=%E$FIMAGE_D_ENTRIES_VY, MID="'O'", LEVEL=%@E$S_D_VY );
      956    12452    4               GOTO SKIP_DEBUG;
      957    12453    4               END;
      958    12454
      959    12455         /*Now write the record out */
      960    12456    3           VY_OL_KEY_BUF = VY_O_KEY_BUF;
      961    12457    3           VY_OL_KEY_BUF.FORM1.UTS = VY_OU_HEAD.UTS;
      962    12458    3           CALL VYI$WRITE( 1/*@RF*/, VY_REC_BUF_START$, IO_SIZEW, 3/*@NEW_KEY*/ );
      963    12459
      964    12460    3           IF RTYPE = 15 THEN IO_SIZEW = PAGE_A( 15 );
      965    12461    3           TOTAL( RTYPE ) = TOTAL( RTYPE ) - IO_SIZEW;
      966    12462
      967    12463    4           DO WHILE( TOTAL( RTYPE ) <= 0 );
      968    12464    4               RTYPE = RTYPE + 1;
      969    12465    4               PAGE# = -1;
      970    12466    4               IF RTYPE > 15 THEN RETURN;
      971    12467    4               END; /* Do while( total( rtype ) <= 0 ); */
      972    12468
PL6.E3A0      #001=VYO$OBJECT File=VYO$OBJECT.:E05TSI                            WED 07/30/97 08:58 Page:49   
      973    12469    3           PAGE# = PAGE# + 1;
      974    12470    3   D_READ:
      975    12471    3           CALL VYK$KEY( 0/*@OF*/, RTYPE, J, PAGE# );
      976    12472    3           CALL VYI$READ( 0/*@OF*/,
      977    12473    3              VY_REC_BUF_START$,
      978    12474    3              PAGE_A(RTYPE),
      979    12475    3              0/*@OF*/, '0'B ) ALTRET( IO_ERROR_DEBUG );
      980    12476    3           P$ = VY_REC_BUF_START$;
      981    12477    3           RTYPE = VY_OK.KRTYPE;
      982    12478    3           PAGE# = VY_OK.KPAGE#;
      983    12479    3           IO_SIZEW = VY_IO_SIZEW;
      984    12480    4           IF IO_SIZEW = 0 THEN DO;
      985    12481        /*E*   ERROR: VYO-E$FIMAGE_D_ZERO_REC_SIZE_VY-0
      986    12482              MESSAGE: 0 record size for debug record type = %U1; Skipping debug processing.
      987    12483              DESCRIPTION: Self-explanatory.
      988    12484        */
      989    12485                    %NUMBER( NUM1=RTYPE );
      990    12502                    %SCREAM( ERR#=%E$FIMAGE_D_ZERO_REC_SIZE_VY, MID="'O'", LEVEL=%@E$S_VY );
      991    12505    4               RETURN;
      992    12506    4               END; /* Else do; */
      993    12507    3           END; /* Do forever */
      994    12508
      995    12509
      996    12510    2   IO_ERROR_DEBUG:
      997    12511    3       DO CASE( VY_IO_STATUS );
      998    12512    3       CASE( 0/*@IO_EOF*/ );
      999    12513    3       CASE( 1/*@IO_NOKEY*/ );
     1000    12514        /*E*  ERROR: VYO-E$FIMAGE_D_NOKEY_VY-0
     1001    12515              MESSAGE: No such key error while processing debug record type = %U1;
     1002    12516                       Skipping debug processing.
     1003    12517              DESCRIPTION: Self-explanatory.
     1004    12518        */
     1005    12519                %NUMBER( NUM1=RTYPE );
     1006    12536                %SCREAM(
     1007    12537                ERR#=%E$FIMAGE_D_NOKEY_VY,
     1008    12538                LEVEL=%@E$S_VY,
     1009    12539                MID="'O'",
PL6.E3A0      #001=VYO$OBJECT File=VYO$OBJECT.:E05TSI                            WED 07/30/97 08:58 Page:50   
     1010    12540                AUX=%@E$OUOF_VY);
     1011    12543    3       CASE( 2/*@IO_LD*/ );
     1012    12544        /*E*  ERROR: VYO-E$FIMAGE_D_IO_LD_VY-0
     1013    12545        MESSAGE: Object language error. Lost data condition for debug record type = %U1.
     1014    12546                 Attempting recovery.
     1015    12547              DESCRIPTION: Self-explanatory.
     1016    12548        */
     1017    12549                %NUMBER( NUM1=RTYPE );
     1018    12566                %SCREAM(
     1019    12567                ERR#=%E$FIMAGE_D_IO_LD_VY,
     1020    12568                MID="'O'",
     1021    12569                LEVEL=%@E$S_VY,
     1022    12570                AUX=%@E$OUOF_VY);
     1023    12573                %ALLOCATE(
     1024    12574                PTR$=Q$,
     1025    12575                TYPE=@PR_DS_1,
     1026    12576                SIZE=VY_REC_BUF_SIZE);
     1027    12583    3           VY_REC_BUF_SIZE = VY_REC_BUF_SIZE + VY_REC_BUF_SIZE;
     1028    12584    3           GOTO D_READ;
     1029    12585    3           END; /* Do case( VY_IO_STATUS ); */
     1030    12586    2       RETURN;
     1031    12587
     1032    12588    2   END READ_WRITE_DEBUG_RECORDS;
     1033    12589        %EJECT;
PL6.E3A0      #001=VYO$OBJECT File=VYO$OBJECT.:E05TSI                            WED 07/30/97 08:58 Page:51   
     1034    12590        /*I*  NAME:       READ_WRITE_PLOVER_RECORDS
     1035    12591              PURPOSE:    Read PLOVER records from an object unit file and write
     1036    12592                          them to a library/object file.
     1037    12593              INTERFACE:  VYW$WRITE_C
     1038    12594                          VYE$ERRMSG
     1039    12595              DESCRIPTION:
     1040    12596                  Reads all PLOVER records for an object unit and writes them
     1041    12597                  to a library/object file.
     1042    12598        */
     1043    12599
     1044    12600
     1045    12601    1   READ_WRITE_PLOVER_RECORDS: PROC;
     1046    12602
     1047    12603        %B$PLOVERKEY( NAME=B_PLOVERKEY, STCLASS=CONSTANT );
     1048    12633        %B$PLOVERKEY( NAME=B$PLOVERKEY, STCLASS="BASED(OU_KEY$)" );
     1049    12663        %B$PLOVERBIRTHKEY( NAME=PLOVER_BIRTH_KEY, STCLASS=STATIC );
     1050    12686        %B$PLOVERBIRTH( NAME=PLOVER_BIRTH, STCLASS=STATIC );
     1051    12708
     1052    12709        %FPT_READ( FPTN=READ_PLOVER_BIRTH, BUF=PLOVER_BIRTH, KEY=PLOVER_BIRTH_KEY, KEYS=YES,
             12709            DCB=M$OF );
     1053    12748        %FPT_READ( FPTN=READ_OF_SEQ, DCB=M$OF, BUF=TXT, KEY=VY_OL_KEY_BUF, KEYS=NO, KEYR=
             12748            YES );
     1054    12787
     1055    12788    2   DCL TXT CHAR(256) STATIC;
     1056    12789    2   DCL CNT SBIN STATIC;
     1057    12790
     1058    12791    2   DCL TXT$ PTR CONSTANT INIT(ADDR(TXT));
     1059    12792    2   DCL OU_KEY$ PTR CONSTANT INIT(ADDR(VY_OL_KEY_BUF));
     1060    12793
     1061    12794
     1062    12795    2       PLOVER_BIRTH_KEY.UTS = VY_OU_HEAD.UTS;
     1063    12796    2       CALL M$READ( READ_PLOVER_BIRTH ) ALTRET( NO_PLOVER_BIRTH );
     1064    12797    3       DO WHILE( '0'B );
     1065    12798    3   NO_PLOVER_BIRTH:
     1066    12799    3           IF B$TCB$ -> B$TCB.ALT$ -> B$ALT.ERR.ERR#/*@ALT_ERROR*/ ~= 66 THEN CALL
             12799                    VYE$ERRMSG;
     1067    12800    3           RETURN;
PL6.E3A0      #001=VYO$OBJECT File=VYO$OBJECT.:E05TSI                            WED 07/30/97 08:58 Page:52   
     1068    12801    3           END;
     1069    12802    2       VY_OL_KEY_BUF = PLOVER_BIRTH_KEY;
     1070    12803    2       CALL VYI$WRITE_C( 1/*@RF*/, ADDR(PLOVER_BIRTH), SIZEC(PLOVER_BIRTH), 3
             12803                /*@NEW_KEY*/ );
     1071    12804    2       TXT = ' ';
     1072    12805    2       CALL M$READ( READ_OF_SEQ ) ALTRET(DONE);
     1073    12806    2       CNT = M$OF$ -> F$DCB.ARS#;
     1074    12807    3       DO WHILE( B$PLOVERKEY.KEYSIZ = B_PLOVERKEY.KEYSIZ
     1075    12808    3          AND B$PLOVERKEY.NOTHD = B_PLOVERKEY.NOTHD
     1076    12809    3          AND B$PLOVERKEY.UTS = VY_OU_HEAD.UTS );
     1077    12810    3           B$PLOVERKEY.UTS = VY_OU_HEAD.UTS;
     1078    12811    3           CALL VYI$WRITE_C( 1/*@RF*/, TXT$, CNT, 3/*@NEW_KEY*/ );
     1079    12812    3           TXT = ' ';
     1080    12813    3           CALL M$READ( READ_OF_SEQ ) ALTRET(DONE);
     1081    12814    3           CNT = M$OF$ -> F$DCB.ARS#;
     1082    12815    3           END;
     1083    12816    2   DONE:
     1084    12817    2       RETURN;
     1085    12818
     1086    12819    2   END READ_WRITE_PLOVER_RECORDS;
     1087    12820        %EJECT;
PL6.E3A0      #001=VYO$OBJECT File=VYO$OBJECT.:E05TSI                            WED 07/30/97 08:58 Page:53   
     1088    12821    1   DUP_ERR: PROC( ER# );
     1089    12822
     1090    12823    2   DCL ER# UBIN(36) ALIGNED;
     1091    12824
     1092    12825
     1093    12826        /*E*  ERROR: VYO-E$DUP_ERR_VY-0
     1094    12827        MESSAGE: Duplicate ( Entry definition ) - ( Object unit ) relationship
     1095    12828                 attempted for: %U1.
     1096    12829              DESCRIPTION: Self-explanatory.
     1097    12830        */
     1098    12831        /*E*  ERROR: VYO-E$DUP_ERR_IGNORED_VY-0
     1099    12832        MESSAGE: Duplicate ( Entry definition ) - ( Object unit ) relationship
     1100    12833                 ignored for: %U1.
     1101    12834              DESCRIPTION: Self-explanatory.
     1102    12835        */
     1103    12836    2       VY_EFIELD1 = VY_O_KEY_BUF;
     1104    12837            %SCREAM(
     1105    12838            ERR#=ER#,
     1106    12839            LEVEL=%@E$W_VY,
     1107    12840            MID="'O'",
     1108    12841            AUX=%@E$OUOF_VY);
     1109    12844    2   END DUP_ERR;
     1110    12845
     1111    12846
     1112    12847
     1113    12848    1   END VYO$OBJECT;

PL6.E3A0      #001=VYO$OBJECT File=VYO$OBJECT.:E05TSI                            WED 07/30/97 08:58 Page:54   
--  Include file information  --

   VY_PSUBS_C.:E05TOU  is referenced.
   B_ERRORS_C.:E05TOU  is referenced.
   B$OBJECT_C.:E05TOU  is referenced.
   VY_DCB_R.:E05TOU  cannot be made into a system file and is referenced.
   VY_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
   VY_FIXED_R.:E05TOU  cannot be made into a system file and is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   VY_MACRO_C.:E05TOU  is referenced.
   VY_PERR_C.:E05TOU  is referenced.
   VY_SUBS_C.:E05TOU  is referenced.
   VY_INC_NO_C.:E05TOU  is referenced.
   VY_SWITCH_C.:E05TOU  is referenced.
   VY_INC_C.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure VYO$OBJECT.

   Procedure VYO$OBJECT requires 1574 words for executable code.
   Procedure VYO$OBJECT requires 24 words of local(AUTO) storage.

    No errors detected in file VYO$OBJECT.:E05TSI    .

PL6.E3A0      #001=VYO$OBJECT File=VYO$OBJECT.:E05TSI                            WED 07/30/97 08:58 Page:55   

 Object Unit name= VYO$OBJECT                                 File name= VYO$OBJECT.:E05TOU
 UTS= JUL 30 '97 08:58:43.20 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1   Data  even  none   281    431  VYO$OBJECT
    2  RoData even  UTS     93    135  VYO$OBJECT
    3   DCB   even  none     0      0  M$OF
    4   DCB   even  none     0      0  M$RF
    5   Proc  even  none  1574   3046  VYO$OBJECT
    6  RoData even  none   274    422  VYO$OBJECT

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     5      0   yes    yes     yes      Std        3  VYO$OBJECT
PL6.E3A0      #001=VYO$OBJECT File=VYO$OBJECT.:E05TSI                            WED 07/30/97 08:58 Page:56   

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       0 VYU$CHK_TARGET
         yes           Std       3 VYA$GET
         yes           Std       0 VYE$MERC
         yes           Std       4 VYK$KEY
         yes           Std       4 VYE$ERROR
         yes           Std       1 VYY$YESNO
         yes           Std       3 VYF$FREE
         yes           Std       6 VYO$DEL_UNIT
 yes     yes           Std       5 VYI$READ
 yes     yes           Std      12 VYU$PREAD
 yes     yes           Std       5 VYU$FIND_UTS
         yes           Std       5 VYD$B2C
 yes     yes           Std       5 VYI$WRITE_C
 yes     yes           Std       4 VYU$READ_UTS
 yes     yes           Std       5 VYI$WRITE
         yes           Std       1 VYE$ERRMSG
                       nStd      0 X66_AUTO_3
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_AUNWIND
                       nStd      0 X66_ARET
PL6.E3A0      #001=VYO$OBJECT File=VYO$OBJECT.:E05TSI                            WED 07/30/97 08:58 Page:57   

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                                  VY_MAP_LO_FPT_WRITE                   VY_MAP_LIT_LO_FPT_WRITE
     VY_O_KEY_BUF                          VY_OL_KEY_BUF                         VY_OK
     B$TCB$                                VY_OU_HEAD                            VY_LAST_SC$
     VY_COMMAND                            VY_LINK_UTS                           VY_ROOT$
     VY_CURR$                              VY_ERRORS                             VY_M_FREE
     VY_M_ALL                              VY_M_BASE_PTR                         VY_O
     VY_EFIELD1                            VY_EFIELD2                            VY_EFIELD3
     VY_TARGET_COUNT                       VY_SOURCE_COUNT                       VY_IO_STATUS
     VY_IO_SIZEW                           VY_IO_SIZEC                           VY_HEADER
     VY_REC_BUF_START$                     VY_REC_BUF_SIZE                  r    VY_PASS1_REC_TYPE
r    VY_PASS1_ALL_TYPE                r    VY_HEAD_INX                      r    VY_REC_SIZE_A
r    VY_DEF_REC_A                          VY_UNWIND                             VY_PAR_UNWIND
     VY_SYMBOL$                            VY_LIST_HEADER                        VY_ED_START$
     VY_ED_STOP$                           VY_INV_OWRITE                         VY_CTAB
     VY_MBUF                               VY_COPY_EXTRACT                       M$OF$
     M$OF                                  M$RF                                  B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID                                 NULLSID
PL6.E3A0      #001=VYO$OBJECT File=VYO$OBJECT.:E05TSI                            WED 07/30/97 08:58 Page:58   


        1        1       /*M* VYO$OBJECT - performs the function of the current LEMUR command on an object un
                 1        it */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* PLM=4,STI=0,IND=4,CTI=3,DCI=4,ECI=4,CSI=0,THI=0,DTI=0,ENI=4,
        8        8             CLM=0,SQB,NTB,MOC,CCI=3,NLB,MCL=0,EDMC*/
        9        9        /*P*  NAME:       VYO$OBJECT
       10       10              PURPOSE:    Perform the function of the current LEMUR command on
       11       11                          an object unit.
       12       12        */
       13       13
       14       14        VYO$OBJECT:
       15       15            PROC( FID$, SOURCE, ALLOCATE$ ) ALTRET;

     15  5 000000   000000 700200 xent  VYO$OBJECT   TSX0  ! X66_AUTO_3
         5 000001   000030 000003                    ZERO    24,3

       16       16        %INCLUDE VY_INC_C;
       17     9192        %INCLUDE B_ERRORS_C;
       18    10319        %VY$NODE;

             10331    1   /*******************************************************************************
             10332    1   *                                                                              *
             10333    1   *                          VY$NODE                                                *
             10334    1   *                                                                              *
             10335    1   *******************************************************************************/

             10351    1   DCL 1 VY$NODE      ALIGNED    BASED,
             10352    1         2 SON$ PTR /*(ADDR(NIL))*/, /* Son pointer                      */
             10353    1         2 BROTHER$ PTR /*(ADDR(NIL))*/, /* Brother pointer              */
             10354    1         2 FATHER$ PTR /*(ADDR(NIL))*/, /* Father pointer                */
             10355    1         2 PATH$ PTR /*(ADDR(NIL))*/, /* Path   pointer                  */
             10356    1         2 HEAD$       PTR /*(ADDR(NIL))*/, /* Head pointer to
PL6.E3A0      #001=VYO$OBJECT File=VYO$OBJECT.:E05TSI                            WED 07/30/97 08:58 Page:59   
             10357                              to list of file nodes for this node            */
             10358    1         2 TAIL$ PTR /*(ADDR(NIL))*/, /* Tail pointer to list            */
             10359    1         2 SHARED_LIB_HEAD$ PTR /*(ADDR(NIL))*/,
             10359                  /* Head pointer to shared library list */
             10360    1         2 LIB_HEAD$         PTR /*(ADDR(NIL))*/,
             10360                  /* Head pointer to list of shared libraries
             10361                                          which have been mapped to included libraries */
             10362    1         2 NUM          UBIN(36)  UNAL,    /* Node number                        */
             10363    1         2 DEPTH          UBIN(36)  UNAL,  /* Depth; ROOT=0*/
             10364    1         2 ADDR_START_A(0:2/*@ROS*/) SBIN WORD /*(0*3)*/, /* Array            */
             10365    1         2 ADDR_START REDEF  ADDR_START_A,
             10366    1           3 RDATA       SBIN WORD,   /* First address for this node in data     */
             10367    1           3 RPROC       SBIN WORD,   /* First address for this node in proc     */
             10368    1           3 ROS       SBIN WORD,          /* Last address for program in ros    */
             10369    1         2 ADDR_STOP_A(0:2/*@ROS*/) SBIN WORD /*(-1*3)*/, /* Array            */
             10370    1         2 ADDR_STOP  REDEF  ADDR_STOP_A,
             10371    1           3 RDATA       SBIN WORD,        /* Last address for this node in data */
             10372    1           3 RPROC       SBIN WORD,        /* Last address for this node in proc */
             10373    1           3 ROS       SBIN WORD,          /* Last address for program in ros    */
             10374    1         2 START_PAGE#_A(0:2/*@ROS*/) SBIN WORD /*(0*3)*/, /* Array           */
             10375    1         2 START_PAGE# REDEF START_PAGE#_A,
             10376    1           3 RDATA       SBIN WORD,   /* First page    for this node in data     */
             10377    1           3 RPROC       SBIN WORD,   /* First page    for this node in proc     */
             10378    1           3 ROS       SBIN WORD,          /* First page   for program in ros    */
             10379    1         2 STOP_PAGE#_A(0:2/*@ROS*/) SBIN WORD /*(-1*3)*/, /* Array*/
             10380    1         2 STOP_PAGE#  REDEF STOP_PAGE#_A,
             10381    1           3 RDATA       SBIN WORD,   /* Last  page    for this node in data     */
             10382    1           3 RPROC       SBIN WORD,   /* Last  page    for this node in proc     */
             10383    1           3 ROS       SBIN WORD,          /* Last  page   for program in ros    */
             10384    1         2 START_SC_ALL$ PTR /*(ADDR(NIL))*/,
             10384                  /* Starting pointer for common sections for this node */
             10385    1         2 STOP_SC_ALL$ PTR /*(ADDR(NIL))*/,
             10385                  /* Stopping pointer for common sections for this node */
             10386    1         2 L_START,
             10387    1           3 SN$ PTR /*(ADDR(NIL))*/, /* Segment definition names        */
             10388    1           3 DN$ PTR /*(ADDR(NIL))*/, /* Def names                       */
             10389    1           3 RN$ PTR /*(ADDR(NIL))*/, /* Ref names                       */
PL6.E3A0      #001=VYO$OBJECT File=VYO$OBJECT.:E05TSI                            WED 07/30/97 08:58 Page:60   
             10390    1           3 SC$ PTR /*(ADDR(NIL))*/, /* Sections                        */
             10391    1           3 ED$ PTR /*(ADDR(NIL))*/, /* Entry defs*/
             10392    1           3 ER$ PTR /*(ADDR(NIL))*/, /* Entry refs*/
             10393    1           3 DD$ PTR /*(ADDR(NIL))*/, /* Data defs                       */
             10394    1           3 DR$ PTR /*(ADDR(NIL))*/, /* Data refs                       */
             10395    1           3 SD$ PTR /*(ADDR(NIL))*/, /* Seg defs                        */
             10396    1           3 SR$ PTR /*(ADDR(NIL))*/, /* Seg refs                        */
             10397    1         2 L_START_A$(0:9)     REDEF L_START PTR,
             10398    1         2 L_STOP,
             10399    1           3 SN$ PTR /*(ADDR(NIL))*/, /* Segment definition names        */
             10400    1           3 DN$ PTR /*(ADDR(NIL))*/, /* Def names                       */
             10401    1           3 RN$ PTR /*(ADDR(NIL))*/, /* Ref names                       */
             10402    1           3 SC$ PTR /*(ADDR(NIL))*/, /* Sections                        */
             10403    1           3 ED$ PTR /*(ADDR(NIL))*/, /* Entry defs*/
             10404    1           3 ER$ PTR /*(ADDR(NIL))*/, /* Entry refs*/
             10405    1           3 DD$ PTR /*(ADDR(NIL))*/, /* Data defs                       */
             10406    1           3 DR$ PTR /*(ADDR(NIL))*/, /* Data refs                       */
             10407    1           3 SD$ PTR /*(ADDR(NIL))*/, /* Seg defs                        */
             10408    1           3 SR$ PTR /*(ADDR(NIL))*/, /* Seg refs                        */
             10409    1         2 L_STOP_A$(0:9) REDEF   L_STOP    PTR,
             10410    1         2 L_SIZE,
             10411    1           3 SN      UBIN /*(0)*/, /* Segment definition names           */
             10412    1           3 DN      UBIN /*(0)*/, /* Def names                          */
             10413    1           3 RN      UBIN /*(0)*/, /* Ref names                          */
             10414    1           3 SC      UBIN /*(0)*/, /* Sections                           */
             10415    1           3 ED      UBIN /*(0)*/, /* Entry defs*/
             10416    1           3 ER      UBIN /*(0)*/, /* Entry refs*/
             10417    1           3 DD      UBIN /*(0)*/, /* Data defs                          */
             10418    1           3 DR      UBIN /*(0)*/, /* Data refs                          */
             10419    1           3 SD      UBIN /*(0)*/, /* Seg defs                           */
             10420    1           3 SR      UBIN /*(0)*/, /* Seg refs                           */
             10421    1         2 L_SIZE_A(0:9)  REDEF   L_SIZE    UBIN,
             10422    1         2 L_PREV_SIZE,
             10423    1           3 SN      UBIN /*(0)*/, /* Segment definition names           */
             10424    1           3 DN      UBIN /*(0)*/, /* Def names                          */
             10425    1           3 RN      UBIN /*(0)*/, /* Ref names                          */
             10426    1           3 SC      UBIN /*(0)*/, /* Sections                           */
PL6.E3A0      #001=VYO$OBJECT File=VYO$OBJECT.:E05TSI                            WED 07/30/97 08:58 Page:61   
             10427    1           3 ED      UBIN /*(0)*/, /* Entry defs*/
             10428    1           3 ER      UBIN /*(0)*/, /* Entry refs*/
             10429    1           3 DD      UBIN /*(0)*/, /* Data defs                          */
             10430    1           3 DR      UBIN /*(0)*/, /* Data refs                          */
             10431    1           3 SD      UBIN /*(0)*/, /* Seg defs                           */
             10432    1           3 SR      UBIN /*(0)*/, /* Seg refs                           */
             10433    1         2 L_PREV_SIZE_A(0:9)  REDEF   L_PREV_SIZE    UBIN,
             10434    1         2 BIT_MAP                ALIGNED,
             10435    1           3 DATA                  ALIGNED,
             10436    1             4 BITS(0:255)          BIT(1)    UNAL /*('0'B*256)*/,
             10437    1           3 RPROC                 ALIGNED,
             10438    1             4 BITS(0:255)          BIT(1)    UNAL /*('0'B*256)*/,
             10439    1           3 ROS                   ALIGNED,
             10440    1             4 BITS(0:255)          BIT(1)    UNAL /*('0'B*256)*/,
             10441    1         2 L_SC_START,
             10442    1           3 SC_BLK_COM$ PTR /*(ADDR(NIL))*/, /* Blank common            */
             10443    1           3 SC_ROOT_LBL_COM$ PTR /*(ADDR(NIL))*/, /* Root labelled common */
             10444    1           3 SC_LBL_COM$ PTR /*(ADDR(NIL))*/, /* Labelled common         */
             10445    1           3 SC_DCB$ PTR /*(ADDR(NIL))*/, /* Dcbs                        */
             10446    1         2 L_SC_START_A$(0:3)  REDEF L_SC_START PTR,
             10447    1         2 L_SC_STOP,
             10448    1           3 SC_BLK_COM$ PTR /*(ADDR(NIL))*/, /* Blank common            */
             10449    1           3 SC_ROOT_LBL_COM$ PTR /*(ADDR(NIL))*/, /* Root labelled common */
             10450    1           3 SC_LBL_COM$ PTR /*(ADDR(NIL))*/, /* Labelled common         */
             10451    1           3 SC_DCB$ PTR /*(ADDR(NIL))*/, /* Dcbs                        */
             10452    1         2 L_SC_STOP_A$(0:3)   REDEF L_SC_STOP  PTR,
             10453    1         2 PROMOTE_HEAD,
             10454    1           3 BLK_COM$              PTR /*(ADDR(NIL))*/,
             10455    1           3 LBL_COM$              PTR /*(ADDR(NIL))*/,
             10456    1         2 PROMOTE_HEAD_A$(0:1) REDEF PROMOTE_HEAD     PTR,
             10457    1         2 PROMOTE_TAIL,
             10458    1           3 BLK_COM$              PTR /*(ADDR(NIL))*/,
             10459    1           3 LBL_COM$              PTR /*(ADDR(NIL))*/,
             10460    1         2 PROMOTE_TAIL_A$(0:1) REDEF PROMOTE_TAIL     PTR,
             10461    1         2 HAVE_ASL          BIT(1)    UNAL /*('0'B)*/,
             10462    1         2 ALL_BLK_COM          BIT(1)    UNAL /*('0'B)*/,
             10463    1         2 *                 BIT(34)   UNAL /*('0'B)*/,
PL6.E3A0      #001=VYO$OBJECT File=VYO$OBJECT.:E05TSI                            WED 07/30/97 08:58 Page:62   
             10464    1         2 BLANK_COMMON$     PTR       ALIGNED /*(ADDR(NIL))*/;

       19    10468        %VY$LST;

             10480    1   /*******************************************************************************
             10481    1   *                                                                              *
             10482    1   *                          VY$LST                                                 *
             10483    1   *                                                                              *
             10484    1   *******************************************************************************/

             10489    1   DCL 1 VY$LST                        ALIGNED BASED,
             10490    1         2 LINK$        PTR,               /* Link to next item                  */
             10491    1         2 TYPE         UBIN( 18) UNAL,    /* Type                               */
             10492    1         2 SUB_TYPE     UBIN( 18) UNAL,    /* Sub-type                           */
             10493    1         2 OBJECT_NAME$ PTR,               /* Pointer to object unit name        */
             10494    1         2 SC_HEAD$     PTR,               /* Head pointer to section link list  */
             10495    1         2 SC_TAIL$     PTR,               /* Tail pointer to section link list  */
             10496    1         2 P,
             10497    1           3 NAME_       ALIGNED,
             10498    1             4 BOUND      UBIN(20)  UNAL,
             10499    1             4 FLAGSV     UBIN(11)  UNAL,
             10500    1             4 *          BIT(5)    UNAL,
             10501    1             4 NAME$      PTR,
             10502    1           3 ACCT_       ALIGNED,
             10503    1             4 BOUND      UBIN(20)  UNAL,
             10504    1             4 FLAGSV     UBIN(11)  UNAL,
             10505    1             4 *          BIT(5)    UNAL,
             10506    1             4 ACCT$      PTR,
             10507    1           3 PASS_       ALIGNED,
             10508    1             4 BOUND      UBIN(20)  UNAL,
             10509    1             4 FLAGSV     UBIN(11)  UNAL,
             10510    1             4 *          BIT(5)    UNAL,
             10511    1             4 PASS$      PTR,
             10512    1           3 SN_         ALIGNED,
             10513    1             4 BOUND      UBIN(20)  UNAL,
             10514    1             4 FLAGSV     UBIN(11)  UNAL,
             10515    1             4 *          BIT(5)    UNAL,
PL6.E3A0      #001=VYO$OBJECT File=VYO$OBJECT.:E05TSI                            WED 07/30/97 08:58 Page:63   
             10516    1             4 SN$        PTR,
             10517    1           3 WSN_        ALIGNED,
             10518    1             4 BOUND      UBIN(20)  UNAL,
             10519    1             4 FLAGSV     UBIN(11)  UNAL,
             10520    1             4 *          BIT(5)    UNAL,
             10521    1             4 WSN$       PTR,
             10522    1           3 B           ALIGNED,
             10523    1             4 RES        BIT(1)    UNAL,
             10524    1             4 ASN        BIT(1)    UNAL,
             10525    1             4 *          BIT(34)   UNAL,
             10526    1           3 RES         CHAR(4)   ALIGNED,
             10527    1           3 ASN         UBIN(36)  ALIGNED;
       20    10530        %VY$LLIST;

             10542    1   /*******************************************************************************
             10543    1   *                                                                              *
             10544    1   *                          VY$LLIST                                               *
             10545    1   *                                                                              *
             10546    1   *******************************************************************************/

             10551    1   DCL 1 VY$LLIST                BASED     ALIGNED,
             10552    1         2 LINK$                  PTR  ALIGNED,
             10553    1         2 ITEM$                  PTR  ALIGNED;
       21    10556        %VY$SC;

             10570    1   /*******************************************************************************
             10571    1   *                                                                              *
             10572    1   *                          VY$SC                                                 *
             10573    1   *                                                                              *
             10574    1   *******************************************************************************/

             10578    1   DCL 1 VY$SC               BASED     ALIGNED,
             10579    1         2 TYPE              UBIN(9)   UNAL,
             10580    1         2 EMPTY             BIT (1)   UNAL,
             10581    1         2 ATTR                        UNAL,
             10582    1           3 INT              UBIN(2)   UNAL,
             10583    1           3 SEGMENT          BIT(1)    UNAL,
PL6.E3A0      #001=VYO$OBJECT File=VYO$OBJECT.:E05TSI                            WED 07/30/97 08:58 Page:64   
             10584    1           3 ALL              BIT(1)    UNAL,
             10585    1           3 PRE_DCB          BIT(1) UNAL, /* '1'B => true; '0'B => false        */
             10586    1           3 MES_INIT         BIT (1)   UNAL,
             10587    1           3 ALIGN            UBIN(2)   UNAL,
             10588    1         2 ADDRESS           UBIN(18)  UNAL,
             10589    1         2 NAME_DISP         SBIN HALF UNAL,
             10590    1         2 SIZE              UBIN(18)  UNAL,
             10591    1         2 NODE#             UBIN(18)  UNAL,
             10592    1         2 COM_LINK          UBIN(18)  UNAL;

             10601    1   /*******************************************************************************
             10602    1   *                                                                              *
             10603    1   *                          VY$SECT                                                *
             10604    1   *                                                                              *
             10605    1   *******************************************************************************/

             10609    1   DCL 1 VY$SECT       BASED     ALIGNED,
             10610    1         2 TYPE              UBIN(9)   UNAL,
             10611    1         2 EMPTY             BIT (1)   UNAL,
             10612    1         2 ATTR                        UNAL,
             10613    1           3 INT              UBIN(2)  UNAL,
             10614    1           3 SEGMENT          BIT (1)  UNAL,
             10615    1           3 *                UBIN(3)  UNAL,
             10616    1           3 ALIGN            UBIN(2)  UNAL,
             10617    1         2 SIZE              UBIN(18)  UNAL,
             10618    1         2 NAME_DISP         SBIN HALF UNAL,
             10619    1         2 SEG_NPOINTER      UBIN(18)  UNAL;
       22    10622        %VYD$TMPLT;

             10634    1   /*******************************************************************************
             10635    1   *                                                                              *
             10636    1   *                          VYD$TMPLT                                              *
             10637    1   *                                                                              *
             10638    1   *******************************************************************************/

             10643    1   DCL 1 VYD$TMPLT          ALIGNED BASED, /* Template for defs                  */
             10644    1         2 A(0:3)       UBIN(18)  UNAL,    /* Array ...                          */
PL6.E3A0      #001=VYO$OBJECT File=VYO$OBJECT.:E05TSI                            WED 07/30/97 08:58 Page:65   
             10645    1         2 A_SBIN(0:3) REDEF A    SBIN HALF UNAL,
             10646    1         2 I       REDEF     A,            /* Items                              */
             10647    1           3 WHERE        UBIN( 3) UNAL,   /* Source of def                      */
             10648                                                                /* Value from
             10649                                                                     0   object
             10650                                                                     1   library */
             10651    1           3 DEFINED      BIT( 1) UNAL,    /* Defined or not                     */
             10652    1           3 B                      UNAL,
             10653    1             4 MULTIPLY    BIT(1) UNAL,    /* Multiply defined                   */
             10654    1           3 SC#          UBIN(13) UNAL,   /* Section #                          */
             10655    1           3 AFTER        REDEF SC#      UNAL,
             10656    1             4 USED        BIT(1) UNAL,    /* Used or not                        */
             10657    1             4 *           BIT(12) UNAL,
             10658    1           3 OFFSET      UBIN(18) UNAL,    /* Offset/address                     */
             10659    1           3 NAME_DISP   UBIN(18) UNAL,    /* Displacement to name(in words)     */
             10660    1           3 NAME_DISP_SBIN REDEF NAME_DISP   SBIN HALF UNAL,
             10661    1           3 P           UBIN( 1) UNAL,    /* Primary entdef                     */
             10662    1           3 C REDEF P   BIT(  1) UNAL,    /* Constant bit for symdefs           */
             10663    1           3 A           UBIN( 1) UNAL,    /* Altret specified                   */
             10664    1          3 MULTIPLY REDEF A BIT(1) UNAL, /* Multiply defined for constant sym defs */
             10665    1           3 I           BIT(  1) UNAL,    /* Argument/parameter check           */
             10666    1           3 USED    REDEF I  BIT(1) UNAL, /* Used or not for constant sym defs  */
             10667    1           3 CST         UBIN( 4) UNAL,    /* Calling sequence type              */
             10668    1           3 WHERE_C REDEF CST UBIN(4) UNAL, /* Source of def for constant sym defs */
             10669    1           3 NP          UBIN(11) UNAL,    /* # of parameters                    */
             10670    1           3 IS_DCB  REDEF     NP,
             10671    1             4 DCB_BIT     BIT(1)    UNAL,
             10672    1             4 *           BIT(10)   UNAL,
             10673    1         2 SEG REDEF A,
             10674    1           3 *             UBIN      UNAL,
             10675    1           3 NPOINTER      UBIN(18)  UNAL,
             10676    1           3 CONSTNT       BIT(1)    UNAL,
             10677    1           3 TYPE          UBIN(5)   UNAL,
             10678    1           3 SEGID         UBIN(12)  UNAL,
             10679    1         2 V REDEF A,
             10680    1           3 VALUE       UBIN(36) UNAL,    /* Value if C=1                       */
             10681    1           3 *           UBIN(36) UNAL,
PL6.E3A0      #001=VYO$OBJECT File=VYO$OBJECT.:E05TSI                            WED 07/30/97 08:58 Page:66   
             10682    1         2 S  REDEF  A,                    /* Value if C=1                       */
             10683    1           3 *         UBIN(24) UNAL,
             10684    1           3 SEGID     UBIN(12) UNAL,
             10685    1           3 *         UBIN     UNAL;
       23    10688        %VYR$TMPLT;

             10702    1   /*******************************************************************************
             10703    1   *                                                                              *
             10704    1   *                          VYR$TMPLT                                              *
             10705    1   *                                                                              *
             10706    1   *******************************************************************************/

             10710    1   DCL 1 VYR$TMPLT                                         BASED ALIGNED,
             10711    1         2 NAME_DISP              UBIN(18)       UNAL,
             10712    1         2 ER                                    UNAL,
             10713    1           3 SREF                  BIT (1)        UNAL,
             10714    1           3 A                     UBIN(1)        UNAL,
             10715    1           3 I                     BIT(1)         UNAL,
             10716    1           3 CST                   UBIN(4)        UNAL,
             10717    1           3 NP                    UBIN(11)       UNAL,
             10718    1         2 CAND    REDEF     ER,
             10719    1           3 SREF                  BIT (1)        UNAL,
             10720    1           3 READ_ONLY             BIT(1)         UNAL,
             10721    1           3 STATE                 BIT(1)         UNAL,
             10722    1           3 *                     UBIN(15)       UNAL,
             10723    1         2 OU_NAME_DISP REDEF     ER,
             10724    1           3 SREF                  BIT (1)        UNAL,
             10725    1           3 READ_ONLY             BIT(1)         UNAL,
             10726    1           3 GOT                   BIT(1)         UNAL,
             10727    1           3 NAME_DISP             UBIN(15)       UNAL,
             10728    1         2 SAT     REDEF     ER,
             10729    1           3 BREF                  BIT ( 1)       UNAL,
             10730    1           3 *                     BIT (17)       UNAL;

             10739    1   /*******************************************************************************
             10740    1   *                                                                              *
             10741    1   *                          VYR$SAT                                                *
PL6.E3A0      #001=VYO$OBJECT File=VYO$OBJECT.:E05TSI                            WED 07/30/97 08:58 Page:67   
             10742    1   *                                                                              *
             10743    1   *******************************************************************************/

             10747    1   DCL 1 VYR$SAT                 ALIGNED   BASED,
             10748    1         2 VALUE        UBIN(36)  ALIGNED,
             10749    1         2 SEG   REDEF  VALUE,
             10750    1           3 OFFSET     UBIN(18)  UNAL,
             10751    1           3 *          BIT(6)    UNAL,
             10752    1           3 SEGID      UBIN(12)  UNAL,
             10753    1         2 BELOW        BIT(1)    UNAL,
             10754    1         2 *            BIT(17)   UNAL,
             10755    1         2 NODE#        UBIN(18)  UNAL;
       24    10758        %TMPLT;

             10770    1   /*******************************************************************************
             10771    1   *                                                                              *
             10772    1   *                          TMPLT                                                 *
             10773    1   *                                                                              *
             10774    1   *******************************************************************************/

             10779    1   DCL 1 VY$TMPLT           ALIGNED BASED, /* Template for defs                  */
             10780    1         2 A(0:3)       UBIN(18)  UNAL,    /* Array access                       */
             10781    1         2 A_SBIN(0:3) REDEF A    SBIN HALF UNAL,
             10782    1         2 W       REDEF     A,            /* By name                            */
             10783    1           3 WORD0       UBIN(36)  UNAL,   /* First word                         */
             10784    1           3 WORD1       UBIN(36)  UNAL;   /* Second word                        */
       25    10787        %T$C;

             10799    1   /*******************************************************************************
             10800    1   *                                                                              *
             10801    1   *                          T$C                                                 *
             10802    1   *                                                                              *
             10803    1   *******************************************************************************/

             10808    1   DCL 1 T$C           BASED     ALIGNED,  /* Text count                         */
             10809    1         2 COUNT        UBIN( 9) UNAL,
             10810    1         2 CHARS        CHAR( T$C.COUNT )   UNAL;
PL6.E3A0      #001=VYO$OBJECT File=VYO$OBJECT.:E05TSI                            WED 07/30/97 08:58 Page:68   
             10811    1   DCL 1 T$C_UNAL      BASED     UNAL,     /* Text count                         */
             10812    1         2 COUNT        UBIN( 9) UNAL,
             10813    1         2 CHARS        CHAR( T$C_UNAL.COUNT ) UNAL;
       26    10816        %VY$UTS;

             10829    1   /*******************************************************************************
             10830    1   *                                                                              *
             10831    1   *                          VY$UTS                                                 *
             10832    1   *                                                                              *
             10833    1   *******************************************************************************/

             10838    1   DCL 1 VY$UTS           BASED,
             10839    1         2 I,
             10840    1           3 LEMUR    UBIN(36) ALIGNED,
             10841    1           3 COMPILER UBIN(36) ALIGNED,
             10842    1         2 A(0:1) REDEF I UBIN(36);
       27    10845        %VY$WORD;

             10857    1   /*******************************************************************************
             10858    1   *                                                                              *
             10859    1   *                          VY$WORD                                                *
             10860    1   *                                                                              *
             10861    1   *******************************************************************************/

             10866    1   DCL VY$WORD_A(0:0)       UBIN(36) ALIGNED    BASED;
             10867    1   DCL VY$HALF_A(0:0)       UBIN(18) HALIGNED   BASED;
             10868    1   DCL VY$BYTE_A(0:0)       UBIN( 9) CALIGNED   BASED;
             10869    1   DCL VY$CHAR_A(0:0)       CHAR( 1) UNAL       BASED;
             10870        /**/
             10871    1   DCL VY$WORD_SBIN_A(0:0)  SBIN WORD ALIGNED   BASED;
             10872    1   DCL VY$HALF_SBIN_A(0:0)  SBIN HALF HALIGNED  BASED;
             10873    1   DCL VY$BYTE_SBIN_A(0:0)  SBIN HALF CALIGNED  BASED;
             10874    1   DCL VY$BIT_A(0:0)        BIT(36)   ALIGNED   BASED;
       28    10877        %SET LISTMAC='1'B;
       29    10878        %SET LISTSUB='1'B;
       30    10879        %SET LISTEXP='1'B;
       31    10880        %B$DNAME( NAME=B$DNAME, STCLASS=BASED );
PL6.E3A0      #001=VYO$OBJECT File=VYO$OBJECT.:E05TSI                            WED 07/30/97 08:58 Page:69   
             10881            %LSET STR='BASED        ';
             10882            %IF
             10883                '0'B;
             10885            %ELSE;
             10886                %LSET INIT=/*;
             10887            %ENDIF;
             10888    1   DCL 1 B$DNAME BASED ALIGNED,
             10889    1         2 COUNT UBIN HALF UNAL /*(SIZEC(' ')) /**/,
             10890                /*K*  COUNT is the number of characters in the name */
             10891            %IF
             10892                '0'B;
             10895            %ELSE;
             10896    1         2 TEXT CHAR(B$DNAME.COUNT) UNAL;
             10897            %ENDIF;
       32    10899        %P;
             10900        %LSET LISTDIR='0'B;

             10907    1   /*******************************************************************************
             10908    1   *                                                                              *
             10909    1   *                          PARAMETERS                                             *
             10910    1   *                                                                              *
             10911    1   *******************************************************************************/

       33    10915    1   DCL FID$ PTR ALIGNED;
       34    10916    1   DCL SOURCE SBIN WORD ALIGNED;
       35    10917    1   DCL ALLOCATE$ PTR ALIGNED;
       36    10918        %BANNER( ARG=SUBS );
             10919        %LSET LISTDIR='0'B;

             10926    1   /*******************************************************************************
             10927    1   *                                                                              *
             10928    1   *                          SUBS                                                 *
             10929    1   *                                                                              *
             10930    1   *******************************************************************************/

       37    10934        %B$RECORDSUBS;
             10935        %EQU TYPHEAD=0 ;
PL6.E3A0      #001=VYO$OBJECT File=VYO$OBJECT.:E05TSI                            WED 07/30/97 08:58 Page:70   
             10936        %EQU TYPDNAM=1 ;
             10937        %EQU TYPRNAM=2 ;
             10938        %EQU TYPSECT=3 ;
             10939        %EQU TYPEDEF=4 ;
             10940        %EQU TYPEREF=5 ;
             10941        %EQU TYPSDEF=6 ;
             10942        %EQU TYPSREF=7 ;
             10943        %EQU TYPSEGDEF=8 ;
             10944        %EQU TYPSEGREF=9 ;
             10945        %EQU TYPPROG=10 ;
             10946        %EQU SUBTYPPROG=0 ;
             10947        %EQU SUBTYPREL=1 ;
             10948        %EQU TYPLOGBLK=11 ;
             10949        %EQU TYPINTNTRY=12 ;
             10950        %EQU TYPEXST=13 ;
             10951        %EQU TYPVREBL=14 ;
             10952        %EQU TYPDBGNAM=15 ;
             10953        %EQU TYPLV1LB=16 ;
             10954        %EQU TYPLV1=17 ;
             10955        %EQU TYPDATASEG=18 ;
             10956        %EQU TYPRUM=20 ;
             10957        %EQU TYPBIRTH=21 ;
             10958        %EQU TYPPLOVER=22 ;
             10959        %EQU TYPCOMPID=23 ;
             10960        %EQU TYPROS=30 ;
       38    10962        %B;
             10963        %LSET LISTDIR='0'B;

             10970    1   /*******************************************************************************
             10971    1   *                                                                              *
             10972    1   *                          BIT                                                 *
             10973    1   *                                                                              *
             10974    1   *******************************************************************************/

       39    10978    1   DCL FIRST BIT(1) ALIGNED STATIC/*AUTO*/;
       40    10979    1   DCL WRITE_SWITCH BIT(1) ALIGNED STATIC/*AUTO*/;
       41    10980    1   DCL HAVE_PRIMARY BIT(1) ALIGNED STATIC/*AUTO*/;
PL6.E3A0      #001=VYO$OBJECT File=VYO$OBJECT.:E05TSI                            WED 07/30/97 08:58 Page:71   
       42    10981        %C;
             10982        %LSET LISTDIR='0'B;

             10989    1   /*******************************************************************************
             10990    1   *                                                                              *
             10991    1   *                          CHAR                                                 *
             10992    1   *                                                                              *
             10993    1   *******************************************************************************/

       43    10997    1   DCL VERS_NUM CHAR(3);
       44    10998        %E;
             10999        %LSET LISTDIR='0'B;

             11006    1   /*******************************************************************************
             11007    1   *                                                                              *
             11008    1   *                          ENTRY                                                 *
             11009    1   *                                                                              *
             11010    1   *******************************************************************************/

       45    11014        %ENTRIES;
             11015    1   DCL VYE$ERROR       ENTRY(4);
             11016    1   DCL VYE$ERR         ENTRY(3);
             11017    1   DCL VYE$MERC        ENTRY;
             11018    1   DCL VYE$ERRMSG      ENTRY(1);
             11019    1   DCL VYR$READ        ENTRY( 3 ) ALTRET;
             11020    1   DCL VYW$WRITE       ENTRY( 3 ) ALTRET;
             11021    1   DCL VYW$WRITE_DO    ENTRY( 2 ) ALTRET;
             11022    1   DCL VYD$B2C         ENTRY( 5 );
             11023    1   DCL VYD$C2B         ENTRY( 3 );
             11024    1   DCL VYA$GET         ENTRY( 3 );
             11025    1   DCL VYF$FREE        ENTRY( 3 );
             11026    1   DCL VYQ$SORT        ENTRY( 7 );
             11027    1   DCL VYY$YESNO       ENTRY( 1 );
       46    11029        %ENTRIES_IO;
             11030    1   DCL VYF$OPEN        ENTRY(4)    ALTRET;
             11031    1   DCL VYF$CLOSE       ENTRY(3);
             11032    1   DCL VYU$PREAD       ENTRY(12)  ALTRET;
PL6.E3A0      #001=VYO$OBJECT File=VYO$OBJECT.:E05TSI                            WED 07/30/97 08:58 Page:72   
             11033    1   DCL VYK$KEY         ENTRY(4);
             11034    1   DCL VYI$READ        ENTRY(5)  ALTRET;
             11035    1   DCL VYI$WRITE       ENTRY(5)  ALTRET;
             11036    1   DCL VYI$WRITE_C     ENTRY(5)  ALTRET;
       47    11038    1   DCL VYS$LST ENTRY(6) ALTRET;
       48    11039    1   DCL VYU$CHK_TARGET ENTRY ALTRET;
       49    11040    1   DCL VYU$FIND_UTS ENTRY(5) ALTRET;
       50    11041    1   DCL VYU$READ_UTS ENTRY(4) ALTRET;
       51    11042    1   DCL VYU$ADD_UTS ENTRY(3) ALTRET;
       52    11043    1   DCL VYU$DEL_UTS ENTRY(3) ALTRET;
       53    11044    1   DCL VYO$DEL_UNIT ENTRY(6);
       54    11045        %PTR;
             11046        %LSET LISTDIR='0'B;

             11053    1   /*******************************************************************************
             11054    1   *                                                                              *
             11055    1   *                          PTR                                                 *
             11056    1   *                                                                              *
             11057    1   *******************************************************************************/

       55    11061        %POINTER;
             11062    1   DCL P$         PTR       ALIGNED STATIC/*AUTO*/;
             11063    1   DCL Q$         PTR       ALIGNED STATIC/*AUTO*/;
             11064    1   DCL R$         PTR       ALIGNED STATIC/*AUTO*/;
       56    11066    1   DCL ALL$ PTR ALIGNED STATIC/*AUTO*/;
       57    11067    1   DCL DN_START$ PTR ALIGNED STATIC/*AUTO*/;
       58    11068    1   DCL NAME$ PTR ALIGNED STATIC/*AUTO*/;
       59    11069    1   DCL CURR$ PTR ALIGNED STATIC/*AUTO*/;
       60    11070    1   DCL ITEM$ PTR ALIGNED STATIC/*AUTO*/;
       61    11071    1   DCL PREV$ PTR ALIGNED STATIC/*AUTO*/;
       62    11072    1   DCL WHERE$ PTR ALIGNED STATIC/*AUTO*/;
       63    11073    1   DCL START$ PTR ALIGNED STATIC/*AUTO*/;
       64    11074    1   DCL TAIL$ PTR ALIGNED STATIC/*AUTO*/;
       65    11075    1   DCL ED_START$ PTR ALIGNED STATIC/*AUTO*/;
       66    11076    1   DCL RN_START$ PTR ALIGNED STATIC/*AUTO*/;
       67    11077    1   DCL ER_START$ PTR ALIGNED STATIC/*AUTO*/;
       68    11078    1   DCL TEMP_ER_START$ PTR ALIGNED STATIC/*AUTO*/;
PL6.E3A0      #001=VYO$OBJECT File=VYO$OBJECT.:E05TSI                            WED 07/30/97 08:58 Page:73   
       69    11079    1   DCL TEMP_RN_START$ PTR ALIGNED STATIC/*AUTO*/;
       70    11080    1   DCL ED_STOP$ PTR ALIGNED STATIC/*AUTO*/;
       71    11081    1   DCL ER_STOP$ PTR ALIGNED STATIC/*AUTO*/;
       72    11082    1   DCL TEMP_ER_STOP$ PTR ALIGNED STATIC/*AUTO*/;
       73    11083    1   DCL TEMP_RN_STOP$ PTR ALIGNED STATIC/*AUTO*/;
       74    11084    1   DCL CURR_ER_START$ PTR ALIGNED STATIC/*AUTO*/;
       75    11085    1   DCL SC_CURR$ PTR ALIGNED STATIC/*AUTO*/;
       76    11086        %U;
             11087        %LSET LISTDIR='0'B;

             11094    1   /*******************************************************************************
             11095    1   *                                                                              *
             11096    1   *                          UBIN                                                 *
             11097    1   *                                                                              *
             11098    1   *******************************************************************************/

       77    11102        %INDEX;
             11103    1   DCL I          UBIN(36) ALIGNED STATIC/*AUTO*/;
             11104    1   DCL SI REDEF I SBIN WORD ALIGNED;
             11105    1   DCL J          UBIN(36) ALIGNED STATIC/*AUTO*/;
             11106    1   DCL SJ REDEF J SBIN WORD ALIGNED;
             11107    1   DCL K          UBIN(36) ALIGNED STATIC/*AUTO*/;
             11108    1   DCL SK REDEF K SBIN WORD ALIGNED;
             11109    1   DCL L          UBIN(36) ALIGNED STATIC/*AUTO*/;
             11110    1   DCL SL REDEF L    SBIN WORD ALIGNED;
       78    11112    1   DCL REC_TYPE UBIN(36) ALIGNED STATIC/*AUTO*/;
       79    11113    1   DCL ALL_TYPE UBIN(36) ALIGNED STATIC/*AUTO*/;
       80    11114    1   DCL PAGE_A(0:15) UBIN(36) ALIGNED STATIC/*AUTO*/;
       81    11115    1   DCL TOTAL(0:15) SBIN WORD ALIGNED STATIC/*AUTO*/;
       82    11116    1   DCL SECT_COUNT UBIN(36) ALIGNED STATIC/*AUTO*/;
       83    11117    1   DCL HEAD_INX UBIN(36) ALIGNED STATIC/*AUTO*/;
       84    11118    1   DCL TSIZE UBIN(36) ALIGNED STATIC/*AUTO*/;
       85    11119    1   DCL SIZE UBIN(36) ALIGNED STATIC/*AUTO*/;
       86    11120    1   DCL PAGE UBIN(36) ALIGNED STATIC/*AUTO*/;
       87    11121    1   DCL RTYPE UBIN(36) ALIGNED STATIC/*AUTO*/;
       88    11122    1   DCL GET UBIN(36) ALIGNED STATIC/*AUTO*/;
       89    11123    1   DCL IO_SIZEW SBIN(36) ALIGNED STATIC/*AUTO*/;
PL6.E3A0      #001=VYO$OBJECT File=VYO$OBJECT.:E05TSI                            WED 07/30/97 08:58 Page:74   
       90    11124    1   DCL ERR_LEVEL SBIN WORD ALIGNED STATIC/*AUTO*/;
       91    11125    1   DCL PAGE_SIZE UBIN(36) ALIGNED STATIC/*AUTO*/;
       92    11126    1   DCL HALVE UBIN(36) ALIGNED STATIC/*AUTO*/;
       93    11127    1   DCL NPAGE UBIN(36) ALIGNED STATIC/*AUTO*/;
       94    11128    1   DCL TSIZE_READ UBIN(36) ALIGNED STATIC/*AUTO*/;
       95    11129    1   DCL SC_TYPE UBIN(36) ALIGNED STATIC/*AUTO*/;
       96    11130    1   DCL INDX UBIN(36) ALIGNED STATIC/*AUTO*/;
       97    11131    1   DCL LAST_DISP UBIN(36) ALIGNED STATIC/*AUTO*/;
       98    11132    1   DCL ED_SIZE UBIN(36) ALIGNED STATIC/*AUTO*/;
       99    11133    1   DCL ER_SIZE UBIN(36) ALIGNED STATIC/*AUTO*/;
      100    11134    1   DCL TEMP_ER_SIZE UBIN(36) ALIGNED STATIC/*AUTO*/;
      101    11135    1   DCL TEMP_RN_SIZE UBIN(36) ALIGNED STATIC/*AUTO*/;
      102    11136    1   DCL RN_FREE UBIN(36) ALIGNED STATIC/*AUTO*/;
      103    11137    1   DCL SECT# UBIN(36) ALIGNED STATIC/*AUTO*/;
      104    11138    1   DCL PSIZE UBIN(36) ALIGNED STATIC/*AUTO*/;
      105    11139    1   DCL OLD_UTS UBIN(36) ALIGNED STATIC/*AUTO*/;
      106    11140    1   DCL DEBUG_MAP(0:3) UBIN(36) ALIGNED CONSTANT INIT(
      107    11141    1    7,
      108    11142    1    5,
      109    11143    1    6,
      110    11144    1    4 );
      111    11145    1   DCL COMPILE_UTS UBIN(36) ALIGNED STATIC/*AUTO*/;
      112    11146    1   DCL ANSWER UBIN(36) ALIGNED STATIC/*AUTO*/;
      113    11147    1   DCL HB UBIN(36) ALIGNED STATIC/*AUTO*/;
      114    11148    1   DCL X UBIN(36) ALIGNED STATIC/*AUTO*/;
      115    11149    1   DCL PRIMARY_NAME_DISP UBIN(36) ALIGNED STATIC/*AUTO*/;
      116    11150    1   DCL INC UBIN(36) ALIGNED STATIC/*AUTO*/;
      117    11151        %S;
             11152        %LSET LISTDIR='0'B;

             11159    1   /*******************************************************************************
             11160    1   *                                                                              *
             11161    1   *                          SBIN                                                 *
             11162    1   *                                                                              *
             11163    1   *******************************************************************************/

      118    11167    1   DCL PAGE# SBIN WORD ALIGNED STATIC/*AUTO*/;
PL6.E3A0      #001=VYO$OBJECT File=VYO$OBJECT.:E05TSI                            WED 07/30/97 08:58 Page:75   
      119    11168    1   DCL ALL_A(0:10) SBIN WORD ALIGNED STATIC/*AUTO*/;
      120    11169    1   DCL NEW_VALUE SBIN WORD ALIGNED STATIC/*AUTO*/;
      121    11170        %FILE;
             11171    1   DCL 1 F$NAME_                 BASED,
             11172    1         2 COUNT             UBIN( 9) UNAL,
             11173    1         2 CHARS             CHAR( F$NAME_.COUNT ) UNAL;
             11174    1   DCL F$ACCT_         CHAR(8/*@F_ACCT_SIZEC*/) BASED;
             11175    1   DCL F$ACCT_A(0:7/*@F_ACCT_SIZEC1*/)     CHAR(1)   BASED;
             11176    1   DCL F$PASS_         CHAR(8/*@F_PASS_SIZEC*/) BASED;
             11177    1   DCL F$PASS_A(0:7/*@F_PASS_SIZEC1*/)     CHAR(1)   BASED;
      122    11179    1   DCL ERR_WORD_DISP UBIN(36) ALIGNED STATIC/*AUTO*/;
      123    11180
      124    11181
      125    11182
      126    11183
      127    11184        %VY$LLIST_SC;
             11185        %LSET LISTDIR='0'B;

             11196    1   /*******************************************************************************
             11197    1   *                                                                              *
             11198    1   *                          VY$LLIST_SC                                            *
             11199    1   *                                                                              *
             11200    1   *******************************************************************************/

             11205    1   DCL 1 VY$LLIST_SC               BASED     ALIGNED,
             11206    1         2 LINK$             PTR,
             11207    1         2 BASE$             PTR,
             11208    1         2 COUNT             UBIN(36);
      128    11211        %MOVE_TMPLT;
             11212    1   DCL VY$TARGET_B           BIT( VY_TARGET_COUNT ) ALIGNED    BASED;
             11213    1   DCL VY$SOURCE_B           BIT( VY_SOURCE_COUNT ) ALIGNED    BASED;
             11214    1   DCL VY$TARGET_C         CHAR( VY_TARGET_COUNT ) ALIGNED BASED;
             11215    1   DCL VY$SOURCE_C         CHAR( VY_SOURCE_COUNT ) ALIGNED BASED;
      129    11217        %PLIST;
      130    11218        %INCLUDE VY_PSUBS_C;
      131    11279        %FPT_PRECORD(
      132    11280         FPTN=FPT_PRECORD,
PL6.E3A0      #001=VYO$OBJECT File=VYO$OBJECT.:E05TSI                            WED 07/30/97 08:58 Page:76   
      133    11281         STCLASS=CONSTANT,
      134    11282         DCB=M$OF,
      135    11283         N="-1");
      136    11304    1   DCL M$OF DCB;
      137    11305    1   DCL M$RF DCB;
      138    11306
      139    11307        %FPT_TIME( FPTN= FPT_TIME,
      140    11308         DATE=VY_HEADER.DATE_C,
      141    11309         TIME=VY_HEADER.TIME_C,
      142    11310         DAY =VY_HEADER.DAY_C,
      143    11311         DEST=EXT,
      144    11312         TSTAMP=VY_LINK_UTS);
      145    11331        %F$DCB;
      146    11388        %FPT_DELREC(FPTN=FPT_DELREC,
      147    11389         STCLASS=CONSTANT,
      148    11390         DCB=M$OF,
      149    11391         KEY=VY_O_KEY_BUF);
      150    11410    1   DCL CHAR$CHAR CHAR(VY_IO_SIZEC) BASED(BUFFER$);
      151    11411    1   DCL BUFFER$ PTR ALIGNED STATIC/*AUTO*/;
      152    11412    1   DCL DNAME$ PTR ALIGNED STATIC/*AUTO*/;
      153    11413    1   DCL SAVE_START$(0:9) PTR ALIGNED STATIC/*AUTO*/;
      154    11414    1   DCL SAVE_STOP$(0:9) PTR ALIGNED STATIC/*AUTO*/;
      155    11415    1   DCL SAVE_SIZE(0:9) UBIN(36) ALIGNED STATIC/*AUTO*/;
      156    11416    1   DCL SAVE_PREV_SIZE(0:9) UBIN(36) ALIGNED STATIC/*AUTO*/;
      157    11417        %FPT_TIME( FPTN=UTS_TIME,
      158    11418         STCLASS=CONSTANT,
      159    11419         DATE=UTS_DATE,
      160    11420         TIME=UTS_T,
      161    11421         DEST=EXT,
      162    11422         SOURCE=UTS,
      163    11423         TSTAMP=UTS_TEMP);
      164    11442    1   DCL UTS_DATE CHAR(10) ALIGNED STATIC/*AUTO*/;
      165    11443    1   DCL 1 UTS_T ALIGNED STATIC/*AUTO*/,
      166    11444    1         2 H_M CHAR(5) UNAL,
      167    11445    1         2 * CHAR(6) UNAL;
      168    11446    1   DCL UTS_TEMP UBIN(36) ALIGNED STATIC/*AUTO*/;
      169    11447    1   DCL COMP_UTS UBIN(36) ALIGNED STATIC/*AUTO*/;
PL6.E3A0      #001=VYO$OBJECT File=VYO$OBJECT.:E05TSI                            WED 07/30/97 08:58 Page:77   
      170    11448    1   DCL UTS_SIZE UBIN(36) ALIGNED STATIC/*AUTO*/;
      171    11449    1   DCL LIST_HEADER CHAR(0) CONSTANT INIT(
      172    11450    1   'ADBG SEV COMPILER      LIBRARY FILE    COMPILE TIME      OBJECT UNIT NAME');
      173    11451    1   DCL LANG_ID(0:13) CHAR(5) ALIGNED CONSTANT INIT(
      174    11452    1    'GMAP ',
      175    11453    1    'PL6  ',
      176    11454    1    'FORT ',
      177    11455    1    'COBOL',
      178    11456    1    'PL1  ',
      179    11457    1    'RPG  ',
      180    11458    1    'PASCL',
      181    11459    1    'MOMUS',
      182    11460    1    'FPL',
      183    11461    1    'PRTRG',
      184    11462    1    'IDL',
      185    11463    1    'ELSIE',
      186    11464    1    'CALF',
      187    11465    1    'C' );
      188    11466        %MOVE_NAME_DCL;
      189    11471        %B$TCB;
      190    11474        %B$ALT;
      191    11482        %EJECT;
PL6.E3A0      #001=VYO$OBJECT File=VYO$OBJECT.:E05TSI                            WED 07/30/97 08:58 Page:78   
      192    11483    1       HAVE_PRIMARY = '0'B/*@FALSE_B*/;

  11483  5 000002   000002 450000 1                  STZ     HAVE_PRIMARY

      193    11484    2       DO CASE( VY_COMMAND );

  11484  5 000003   000000 235000 xsym               LDA     VY_COMMAND
         5 000004   000013 115007                    CMPA    11,DL
         5 000005   000007 602005 5                  TNC     s:11484+4,AL
         5 000006   001260 710000 5                  TRA     DO_RETURN
         5 000007   001260 710000 5                  TRA     DO_RETURN
         5 000010   001260 710000 5                  TRA     DO_RETURN
         5 000011   001260 710000 5                  TRA     DO_RETURN
         5 000012   000022 710000 5                  TRA     s:11486
         5 000013   000165 710000 5                  TRA     s:11539
         5 000014   000244 710000 5                  TRA     s:11580
         5 000015   000251 710000 5                  TRA     s:11588
         5 000016   001260 710000 5                  TRA     DO_RETURN
         5 000017   001260 710000 5                  TRA     DO_RETURN
         5 000020   000507 710000 5                  TRA     s:11694
         5 000021   001127 710000 5                  TRA     s:11837

      194    11485    2       CASE( 3/*@C_COPY_KEY_WORD*/ );

      195    11486    2           CALL VYU$CHK_TARGET ALTRET(DO_RETURN);

  11486  5 000022   000002 631400 xsym               EPPR1   B_VECTNIL+2
         5 000023   000000 701000 xent               TSX1    VYU$CHK_TARGET
         5 000024   001260 702000 5                  TSX2    DO_RETURN

      196    11487    2           CALL M$TIME( FPT_TIME );

  11487  5 000025   000154 630400 1                  EPPR0   FPT_TIME
         5 000026   020004 713400                    CLIMB   8196
         5 000027   402000 401760                    pmme    nvectors=5

      197    11488    3           IF ~VY_COPY_EXTRACT THEN DO;
PL6.E3A0      #001=VYO$OBJECT File=VYO$OBJECT.:E05TSI                            WED 07/30/97 08:58 Page:79   

  11488  5 000030   000000 236000 xsym               LDQ     VY_COPY_EXTRACT
         5 000031   400000 376003                    ANQ     -131072,DU
         5 000032   400000 676003                    ERQ     -131072,DU
         5 000033   000042 600000 5                  TZE     s:11498

      198    11489    3               VY_COPY_EXTRACT = '1'B/*@TRUE_B*/;

  11489  5 000034   400000 236003                    LDQ     -131072,DU
         5 000035   000000 756000 xsym               STQ     VY_COPY_EXTRACT

      199    11490        /*E*  ERROR: VYO-E$COPYING_VY-0
      200    11491              MESSAGE: ... COPYing
      201    11492              DESCRIPTION: Self-explanatory.
      202    11493        */
      203    11494                    %SCREAM( ERR#=%E$COPYING_VY, MID="'O'", LEVEL=0 );

  11495  5 000036   000002 630400 6                  EPPR0   2
         5 000037   000022 631400 xsym               EPPR1   B_VECTNIL+18
         5 000040   000000 701000 xent               TSX1    VYE$ERROR
         5 000041   000000 011000                    NOP     0

      204    11497    3               END;

      205    11498    2           CALL READ_WRITE_RECORDS;

  11498  5 000042   001261 701000 5                  TSX1    READ_WRITE_RECORDS
         5 000043   000000 011000                    NOP     0

      206    11499    2           SIZE = VY_OK.OUNAME.COUNT;

  11499  5 000044   000013 236000 xsym               LDQ     VY_OK+11
         5 000045   000033 772000                    QRL     27
         5 000046   000103 756000 1                  STQ     SIZE

      207    11500    2           DN_START$ = VY_ROOT$ -> VY$NODE.L_START.DN$;

PL6.E3A0      #001=VYO$OBJECT File=VYO$OBJECT.:E05TSI                            WED 07/30/97 08:58 Page:80   
  11500  5 000047   000000 470400 xsym               LDP0    VY_ROOT$
         5 000050   000031 236100                    LDQ     25,,PR0
         5 000051   000007 756000 1                  STQ     DN_START$

      208    11501    2           START$ = VY_ED_START$;

  11501  5 000052   000000 236000 xsym               LDQ     VY_ED_START$
         5 000053   000015 756000 1                  STQ     START$

      209    11502    3           DO WHILE( START$ <= VY_ED_STOP$ );

  11502  5 000054   000000 116000 xsym               CMPQ    VY_ED_STOP$
         5 000055   000057 600000 5                  TZE     s:11503
         5 000056   000162 603000 5                  TRC     s:11535

      210    11503    3               NAME$ = PINCRW( DN_START$, START$ -> VYD$TMPLT.I.NAME_DISP );

  11503  5 000057   000015 470400 1                  LDP0    START$
         5 000060   000001 220100                    LDX0    1,,PR0
         5 000061   000000 636010                    EAQ     0,X0
         5 000062   000007 036000 1                  ADLQ    DN_START$
         5 000063   000010 756000 1                  STQ     NAME$

      211    11504    3               VY_O_KEY_BUF.FORM0.COUNT = NAME$ -> B$DNAME.COUNT;

  11504  5 000064   000010 471400 1                  LDP1    NAME$
         5 000065   100000 236100                    LDQ     0,,PR1
         5 000066   000011 736000                    QLS     9
         5 000067   000000 552040 xsym               STBQ    VY_O_KEY_BUF,'40'O

      212    11505    3               VY_O_KEY_BUF.FORM0.CHARS = NAME$ -> B$DNAME.TEXT;

  11505  5 000070   100000 221100                    LDX1    0,,PR1
         5 000071   040000 100540                    MLR     fill='040'O
         5 000072   100000 400011                    ADSC9   0,,PR1                   cn=2,n=*X1
         5 000073   000000 201000 xsym               ADSC9   VY_O_KEY_BUF             cn=1,n=512

PL6.E3A0      #001=VYO$OBJECT File=VYO$OBJECT.:E05TSI                            WED 07/30/97 08:58 Page:81   
      213    11506    3               WRITE_SWITCH = VY_INV_OWRITE;

  11506  5 000074   000000 236000 xsym               LDQ     VY_INV_OWRITE
         5 000075   400000 376003                    ANQ     -131072,DU
         5 000076   000001 756000 1                  STQ     WRITE_SWITCH

      214    11507    3   RETRY:
      215    11508    3               CALL VYI$WRITE_C( 1/*@RF*/,

  11508  5 000077   000006 236000 6     RETRY        LDQ     6
         5 000100   200014 756100                    STQ     @ER#+3,,AUTO
         5 000101   000010 237000 6                  LDAQ    8
         5 000102   200020 757100                    STAQ    @ER#+7,,AUTO
         5 000103   000012 236000 6                  LDQ     10
         5 000104   200017 756100                    STQ     @ER#+6,,AUTO
         5 000105   200014 630500                    EPPR0   @ER#+3,,AUTO
         5 000106   200016 450500                    STP0    @ER#+5,,AUTO
         5 000107   000013 236000 6                  LDQ     11
         5 000110   200015 756100                    STQ     @ER#+4,,AUTO
         5 000111   200015 630500                    EPPR0   @ER#+4,,AUTO
         5 000112   000023 631400 xsym               EPPR1   B_VECTNIL+19
         5 000113   000000 701000 xent               TSX1    VYI$WRITE_C
         5 000114   000116 702000 5                  TSX2    A_DUP

      216    11509    3                  ADDR( VY_OK.OUNAME.CHARS ),
      217    11510    3                  SIZE,
      218    11511    3                  0/*@OF*/, WRITE_SWITCH) ALTRET( A_DUP);
      219    11512    4               DO WHILE( '0'B );

  11512  5 000115   000154 710000 5                  TRA     s:11533

      220    11513    4   A_DUP:
      221    11514    5                   DO CASE( VY_O.PRIMARY_OPTION.DUPLICATE );

  11514  5 000116   000001 235000 xsym  A_DUP        LDA     VY_O+1
         5 000117   000003 115007                    CMPA    3,DL
         5 000120   000122 602005 5                  TNC     A_DUP+4,AL
PL6.E3A0      #001=VYO$OBJECT File=VYO$OBJECT.:E05TSI                            WED 07/30/97 08:58 Page:82   
         5 000121   000154 710000 5                  TRA     s:11533
         5 000122   000154 710000 5                  TRA     s:11533
         5 000123   000132 710000 5                  TRA     s:11518
         5 000124   000125 710000 5                  TRA     s:11516

      222    11515    5                   CASE( 2/*@C_ERROR_KEY_WORD*/ );

      223    11516    5                       CALL DUP_ERR( 2022 );

  11516  5 000125   000015 236000 6                  LDQ     13
         5 000126   200011 756100                    STQ     VERS_NUM+3,,AUTO
         5 000127   003027 701000 5                  TSX1    DUP_ERR
         5 000130   000000 011000                    NOP     0
         5 000131   000154 710000 5                  TRA     s:11533

      224    11517    5                   CASE( 1/*@C_INQUIRE_KEY_WORD*/ );

      225    11518    5                       CALL DUP_ERR( 2021 );

  11518  5 000132   000017 236000 6                  LDQ     15
         5 000133   200011 756100                    STQ     VERS_NUM+3,,AUTO
         5 000134   003027 701000 5                  TSX1    DUP_ERR
         5 000135   000000 011000                    NOP     0

      226    11519        /*E*  ERROR: VYO-E$DUP_ASK_VY-0
      227    11520              MESSAGE: Do you wish to overwrite(Y/N)?
      228    11521              DESCRIPTION: Self-explanatory.
      229    11522        */
      230    11523                            %SCREAM( ERR#=%E$DUP_ASK_VY, LEVEL=%@E$I_VY, MID="'O'" );

  11524  5 000136   000021 630400 6                  EPPR0   17
         5 000137   000022 631400 xsym               EPPR1   B_VECTNIL+18
         5 000140   000000 701000 xent               TSX1    VYE$ERROR
         5 000141   000000 011000                    NOP     0

      231    11526    5                       CALL VYY$YESNO( ANSWER );

PL6.E3A0      #001=VYO$OBJECT File=VYO$OBJECT.:E05TSI                            WED 07/30/97 08:58 Page:83   
  11526  5 000142   000025 630400 6                  EPPR0   21
         5 000143   000017 631400 xsym               EPPR1   B_VECTNIL+15
         5 000144   000000 701000 xent               TSX1    VYY$YESNO
         5 000145   000000 011000                    NOP     0

      232    11527    6                       IF ANSWER = 1/*@YES*/ THEN DO;

  11527  5 000146   000131 235000 1                  LDA     ANSWER
         5 000147   000001 115007                    CMPA    1,DL
         5 000150   000154 601000 5                  TNZ     s:11533

      233    11528    6                           WRITE_SWITCH = '1'B/*@TRUE_B*/;

  11528  5 000151   400000 236003                    LDQ     -131072,DU
         5 000152   000001 756000 1                  STQ     WRITE_SWITCH

      234    11529    6                           GOTO RETRY;

  11529  5 000153   000077 710000 5                  TRA     RETRY

      235    11530    6                           END;
      236    11531    5                       END; /* Do case( VY_O.PRIMARY_OPTION.DUPLICATE ); */

      237    11532    4                   END; /* Do never */

      238    11533    3               START$ = PINCRW( START$, SIZEW( VYD$TMPLT ) );

  11533  5 000154   000015 236000 1                  LDQ     START$
         5 000155   000002 036003                    ADLQ    2,DU
         5 000156   000015 756000 1                  STQ     START$

      239    11534    3               END; /* Do while( START$ <= VY_ED_STOP$ ); */

  11534  5 000157   000000 116000 xsym               CMPQ    VY_ED_STOP$
         5 000160   000057 602000 5                  TNC     s:11503
         5 000161   000057 600000 5                  TZE     s:11503

PL6.E3A0      #001=VYO$OBJECT File=VYO$OBJECT.:E05TSI                            WED 07/30/97 08:58 Page:84   
      240    11535    2           CALL READ_WRITE_REMAINING_RECORDS;

  11535  5 000162   001724 701000 5                  TSX1    READ_WRITE_REMAINING_RECORDS
         5 000163   000000 011000                    NOP     0
         5 000164   001260 710000 5                  TRA     DO_RETURN

      241    11536
      242    11537        %EJECT;
PL6.E3A0      #001=VYO$OBJECT File=VYO$OBJECT.:E05TSI                            WED 07/30/97 08:58 Page:85   
      243    11538    2       CASE( 4/*@C_EXTRACT_KEY_WORD*/ );

      244    11539    2           CALL VYU$CHK_TARGET ALTRET(DO_RETURN);

  11539  5 000165   000002 631400 xsym               EPPR1   B_VECTNIL+2
         5 000166   000000 701000 xent               TSX1    VYU$CHK_TARGET
         5 000167   001260 702000 5                  TSX2    DO_RETURN

      245    11540    3           IF ~VY_COPY_EXTRACT THEN DO;

  11540  5 000170   000000 236000 xsym               LDQ     VY_COPY_EXTRACT
         5 000171   400000 376003                    ANQ     -131072,DU
         5 000172   400000 676003                    ERQ     -131072,DU
         5 000173   000202 600000 5                  TZE     s:11550

      246    11541    3               VY_COPY_EXTRACT = '1'B/*@TRUE_B*/;

  11541  5 000174   400000 236003                    LDQ     -131072,DU
         5 000175   000000 756000 xsym               STQ     VY_COPY_EXTRACT

      247    11542        /*E*  ERROR: VYO-E$EXTRACTING_VY-0
      248    11543              MESSAGE: ... EXTRACTing
      249    11544              DESCRIPTION: Self-explanatory.
      250    11545        */
      251    11546                    %SCREAM( ERR#=%E$EXTRACTING_VY, MID="'O'", LEVEL=%@E$I_VY );

  11547  5 000176   000027 630400 6                  EPPR0   23
         5 000177   000022 631400 xsym               EPPR1   B_VECTNIL+18
         5 000200   000000 701000 xent               TSX1    VYE$ERROR
         5 000201   000000 011000                    NOP     0

      252    11549    3               END;

      253    11550    2           CALL VYU$READ_UTS( 0/*@OF*/, WHERE$, TAIL$, TSIZE ) ALTRET(NOT_READ );

  11550  5 000202   000033 630400 6                  EPPR0   27
         5 000203   000022 631400 xsym               EPPR1   B_VECTNIL+18
PL6.E3A0      #001=VYO$OBJECT File=VYO$OBJECT.:E05TSI                            WED 07/30/97 08:58 Page:86   
         5 000204   000000 701000 xent               TSX1    VYU$READ_UTS
         5 000205   000235 702000 5                  TSX2    NOT_READ

      254    11551    2           CALL VYU$FIND_UTS( ALL$, VY_OU_HEAD.UTS, 0, WHERE$, TAIL$ ) ALTRET(
             11551                    NOT_FOUND );

  11551  5 000206   000037 630400 6                  EPPR0   31
         5 000207   000023 631400 xsym               EPPR1   B_VECTNIL+19
         5 000210   000000 701000 xent               TSX1    VYU$FIND_UTS
         5 000211   000216 702000 5                  TSX2    NOT_FOUND

      255    11552    2           VY_LINK_UTS = ALL$ -> VY$UTS.I.COMPILER;

  11552  5 000212   000006 470400 1                  LDP0    ALL$
         5 000213   000001 235100                    LDA     1,,PR0
         5 000214   000000 755000 xsym               STA     VY_LINK_UTS

      256    11553    3           DO WHILE( '0'B );

  11553  5 000215   000230 710000 5                  TRA     s:11570

      257    11554    3   NOT_FOUND:
      258    11555    4               IF M$OF$ -> F$DCB.TYPE# = 'LE' THEN DO;

  11555  5 000216   000000 470400 xsym  NOT_FOUND    LDP0    M$OF$
         5 000217   000025 720100                    LXL0    21,,PR0
         5 000220   000131 100000 2                  CMPX0   OU_KEY$+1
         5 000221   000226 601000 5                  TNZ     s:11568

      259    11556        /*E*  ERROR: VYO-E$NO_COMPILE_TIME_VY-0
      260    11557              MESSAGE: Cannot find compile time UTS for extraction. Current UTS used.
      261    11558              DESCRIPTION: Self-explanatory.
      262    11559        */
      263    11560                        %SCREAM(
      264    11561                        ERR#=%E$NO_COMPILE_TIME_VY,
      265    11562                        LEVEL=%@E$W_VY,
      266    11563                        MID="'O'",
PL6.E3A0      #001=VYO$OBJECT File=VYO$OBJECT.:E05TSI                            WED 07/30/97 08:58 Page:87   
      267    11564                        AUX=%@E$OUOF_VY);

  11565  5 000222   000045 630400 6                  EPPR0   37
         5 000223   000022 631400 xsym               EPPR1   B_VECTNIL+18
         5 000224   000000 701000 xent               TSX1    VYE$ERROR
         5 000225   000000 011000                    NOP     0

      268    11567    4                   END;

      269    11568    3               VY_LINK_UTS = VY_OU_HEAD.UTS;

  11568  5 000226   000000 235000 xsym               LDA     VY_OU_HEAD
         5 000227   000000 755000 xsym               STA     VY_LINK_UTS

      270    11569    3               END; /* Do never */

      271    11570    2           CALL VYF$FREE( 8/*@UTS_DS*/, TSIZE, 0 );

  11570  5 000230   000051 630400 6                  EPPR0   41
         5 000231   000021 631400 xsym               EPPR1   B_VECTNIL+17
         5 000232   000000 701000 xent               TSX1    VYF$FREE
         5 000233   000000 011000                    NOP     0

      272    11571    3           DO WHILE( '0'B );

  11571  5 000234   000237 710000 5                  TRA     s:11574

      273    11572    3   NOT_READ:   VY_LINK_UTS = VY_OU_HEAD.UTS;

  11572  5 000235   000000 235000 xsym  NOT_READ     LDA     VY_OU_HEAD
         5 000236   000000 755000 xsym               STA     VY_LINK_UTS

      274    11573    3               END;

      275    11574    2           CALL READ_WRITE_RECORDS;

  11574  5 000237   001261 701000 5                  TSX1    READ_WRITE_RECORDS
PL6.E3A0      #001=VYO$OBJECT File=VYO$OBJECT.:E05TSI                            WED 07/30/97 08:58 Page:88   
         5 000240   000000 011000                    NOP     0

      276    11575    2           CALL READ_WRITE_REMAINING_RECORDS;

  11575  5 000241   001724 701000 5                  TSX1    READ_WRITE_REMAINING_RECORDS
         5 000242   000000 011000                    NOP     0
         5 000243   001260 710000 5                  TRA     DO_RETURN

      277    11576
      278    11577
      279    11578        %EJECT;
PL6.E3A0      #001=VYO$OBJECT File=VYO$OBJECT.:E05TSI                            WED 07/30/97 08:58 Page:89   
      280    11579    2       CASE( 5/*@C_DELETE_KEY_WORD*/ );

      281    11580    2           CALL VYO$DEL_UNIT( 0/*@OF*/,

  11580  5 000244   000054 630400 6                  EPPR0   44
         5 000245   000024 631400 xsym               EPPR1   B_VECTNIL+20
         5 000246   000000 701000 xent               TSX1    VYO$DEL_UNIT
         5 000247   000000 011000                    NOP     0
         5 000250   001260 710000 5                  TRA     DO_RETURN

      282    11581    2              '1'B,
      283    11582    2              '1'B,
      284    11583    2              '1'B,
      285    11584    2              VY_OU_HEAD.UTS,
      286    11585    2              0);
      287    11586        %EJECT;
PL6.E3A0      #001=VYO$OBJECT File=VYO$OBJECT.:E05TSI                            WED 07/30/97 08:58 Page:90   
      288    11587    2       CASE( 6/*@C_LIST_KEY_WORD*/ );

      289    11588    3           IF ~VY_LIST_HEADER THEN DO;

  11588  5 000251   000000 236000 xsym               LDQ     VY_LIST_HEADER
         5 000252   400000 376003                    ANQ     -131072,DU
         5 000253   400000 676003                    ERQ     -131072,DU
         5 000254   000265 600000 5                  TZE     s:11601

      290    11589    3               VY_LIST_HEADER = '1'B/*@TRUE_B*/;

  11589  5 000255   400000 236003                    LDQ     -131072,DU
         5 000256   000000 756000 xsym               STQ     VY_LIST_HEADER

      291    11590                    %WR_LIT( MES1=LIST_HEADER );

  11591  5 000257   000062 237000 6                  LDAQ    50
         5 000260   000004 757000 xsym               STAQ    VY_MAP_LIT_LO_FPT_WRITE+4

  11592  5 000261   000000 630400 xsym               EPPR0   VY_MAP_LIT_LO_FPT_WRITE
         5 000262   440001 713400                    CLIMB   alt,write
         5 000263   401400 401760                    pmme    nvectors=4
         5 000264   000470 702000 5                  TSX2    MAP_IO_ERROR

      292    11600    3               END; /* If ~VY_LIST_HEADER then do; */

      293    11601    2           VY_MBUF.CHARS = 'A';

  11601  5 000265   040000 100400                    MLR     fill='040'O
         5 000266   000064 000001 6                  ADSC9   52                       cn=0,n=1
         5 000267   000000 000204 xsym               ADSC9   VY_MBUF                  cn=0,n=132

      294    11602    2           MOVE_SIZE = VY_OU_HEAD.LB_SIZE;

  11602  5 000270   000003 236000 xsym               LDQ     VY_OU_HEAD+3
         5 000271   777777 376007                    ANQ     -1,DL
         5 000272   000253 756000 1                  STQ     MOVE_SIZE
PL6.E3A0      #001=VYO$OBJECT File=VYO$OBJECT.:E05TSI                            WED 07/30/97 08:58 Page:91   

      295    11603    3           IF MOVE_SIZE > 0 THEN DO;

  11603  5 000273   000337 600000 5                  TZE     s:11628

      296    11604                    %ALLOCATE(
      297    11605                    PTR$=P$,
      298    11606                    TYPE=@GDP,
      299    11607                    SIZE=MOVE_SIZE);

  11608  5 000274   000010 236000 xsym               LDQ     VY_M_ALL+8
         5 000275   000010 136000 xsym               SBLQ    VY_M_FREE+8
         5 000276   000311 604000 5                  TMI     s:11612
         5 000277   000253 116000 1                  CMPQ    MOVE_SIZE
         5 000300   000311 602000 5                  TNC     s:11612

  11609  5 000301   000010 236000 xsym               LDQ     VY_M_FREE+8
         5 000302   000022 736000                    QLS     18
         5 000303   000010 036000 xsym               ADLQ    VY_M_BASE_PTR+8
         5 000304   000003 756000 1                  STQ     P$

  11610  5 000305   000010 236000 xsym               LDQ     VY_M_FREE+8
         5 000306   000253 036000 1                  ADLQ    MOVE_SIZE
         5 000307   000010 756000 xsym               STQ     VY_M_FREE+8

  11611  5 000310   000315 710000 5                  TRA     s:11614

  11612  5 000311   000065 630400 6                  EPPR0   53
         5 000312   000021 631400 xsym               EPPR1   B_VECTNIL+17
         5 000313   000000 701000 xent               TSX1    VYA$GET
         5 000314   000000 011000                    NOP     0

      300    11614    3               CALL VYK$KEY( 0/*@OF*/, 11, 0, 0 );

  11614  5 000315   000070 630400 6                  EPPR0   56
         5 000316   000022 631400 xsym               EPPR1   B_VECTNIL+18
         5 000317   000000 701000 xent               TSX1    VYK$KEY
PL6.E3A0      #001=VYO$OBJECT File=VYO$OBJECT.:E05TSI                            WED 07/30/97 08:58 Page:92   
         5 000320   000000 011000                    NOP     0

      301    11615    3               CALL VYI$READ( 0/*@OF*/,

  11615  5 000321   000074 630400 6                  EPPR0   60
         5 000322   000023 631400 xsym               EPPR1   B_VECTNIL+19
         5 000323   000000 701000 xent               TSX1    VYI$READ
         5 000324   000330 702000 5                  TSX2    NO_DEBUG

      302    11616    3                  P$,
      303    11617    3                  MOVE_SIZE,
      304    11618    3                  0/*@OF*/,
      305    11619    3                  '0'B ) ALTRET(NO_DEBUG);
      306    11620    3               VY_MBUF.CHARS_A(2) = 'Y';

  11620  5 000325   131000 236007                    LDQ     45568,DL
         5 000326   000000 552010 xsym               STBQ    VY_MBUF,'10'O

      307    11621    4               DO WHILE( '0'B );

  11621  5 000327   000332 710000 5                  TRA     s:11625

      308    11622    4   NO_DEBUG:
      309    11623    4                   VY_MBUF.CHARS_A(2) = 'N';

  11623  5 000330   116000 236007       NO_DEBUG     LDQ     39936,DL
         5 000331   000000 552010 xsym               STBQ    VY_MBUF,'10'O

      310    11624    4                   END;

      311    11625    3               CALL VYF$FREE( 8/*@GDP*/, MOVE_SIZE, 0 );

  11625  5 000332   000066 630400 6                  EPPR0   54
         5 000333   000021 631400 xsym               EPPR1   B_VECTNIL+17
         5 000334   000000 701000 xent               TSX1    VYF$FREE
         5 000335   000000 011000                    NOP     0

PL6.E3A0      #001=VYO$OBJECT File=VYO$OBJECT.:E05TSI                            WED 07/30/97 08:58 Page:93   
      312    11626    3               END;

  11626  5 000336   000341 710000 5                  TRA     s:11630

      313    11627    3           ELSE DO;

      314    11628    3               VY_MBUF.CHARS_A(2) = 'N';

  11628  5 000337   116000 236007                    LDQ     39936,DL
         5 000340   000000 552010 xsym               STBQ    VY_MBUF,'10'O

      315    11629    3               END;

      316    11630    2           MOVE_SIZE = VY_OU_HEAD.SEVLEV;

  11630  5 000341   000003 235000 xsym               LDA     VY_OU_HEAD+3
         5 000342   000022 771000                    ARL     18
         5 000343   000253 755000 1                  STA     MOVE_SIZE

      317    11631                %NUMBER( NUM1=MOVE_SIZE );

  11637  5 000344   000101 630400 6                  EPPR0   65
         5 000345   000023 631400 xsym               EPPR1   B_VECTNIL+19
         5 000346   000000 701000 xent               TSX1    VYD$B2C
         5 000347   000000 011000                    NOP     0

      318    11648    2          CALL INSERT( VY_MBUF.CHARS, 5, 3, SUBSTR(VY_EFIELD1.CHARS,0,VY_EFIELD1.COUNT
             11648                    ) );

  11648  5 000350   000000 236000 xsym               LDQ     VY_EFIELD1
         5 000351   000033 772000                    QRL     27
         5 000352   000000 620006                    EAX0    0,QL
         5 000353   040000 100440                    MLR     fill='040'O
         5 000354   000000 200010 xsym               ADSC9   VY_EFIELD1               cn=1,n=*X0
         5 000355   000001 200003 xsym               ADSC9   VY_MBUF+1                cn=1,n=3

      319    11649    2           SIZE = VY_OU_HEAD.CMPLRID.ID;
PL6.E3A0      #001=VYO$OBJECT File=VYO$OBJECT.:E05TSI                            WED 07/30/97 08:58 Page:94   

  11649  5 000356   000001 236000 xsym               LDQ     VY_OU_HEAD+1
         5 000357   000022 772000                    QRL     18
         5 000360   000777 376007                    ANQ     511,DL
         5 000361   000103 756000 1                  STQ     SIZE

      320    11650    3           IF SIZE <= 13 THEN DO;

  11650  5 000362   000016 116007                    CMPQ    14,DL
         5 000363   000422 603000 5                  TRC     s:11659

      321    11651    3               CALL INSERT(VY_MBUF.CHARS, 9, LENGTHC(LANG_ID(0)), LANG_ID(SIZE));

  11651  5 000364   000103 235000 1                  LDA     SIZE
         5 000365   000003 735000                    ALS     3
         5 000366   040000 100405                    MLR     fill='040'O
         5 000367   000067 000005 2                  ADSC9   LANG_ID,A                cn=0,n=5
         5 000370   000002 200005 xsym               ADSC9   VY_MBUF+2                cn=1,n=5

      322    11652    3               MOVE_SIZE = VY_OU_HEAD.CMPLRID.VERS_NUMBER;

  11652  5 000371   000001 236000 xsym               LDQ     VY_OU_HEAD+1
         5 000372   000777 376007                    ANQ     511,DL
         5 000373   000253 756000 1                  STQ     MOVE_SIZE

      323    11653    3               CALL BINCHAR( VERS_NUM, MOVE_SIZE );

  11653  5 000374   000000 235003                    LDA     0,DU
         5 000375   200014 757100                    STAQ    @ER#+3,,AUTO
         5 000376   000100 301500                    BTD
         5 000377   200014 000010                    NDSC9   @ER#+3,,AUTO             cn=0,s=lsgnf,sf=0,n=8
         5 000400   200006 030003                    NDSC9   VERS_NUM,,AUTO           cn=0,s=nosgn,sf=0,n=3

      324    11654    3               IF MOVE_SIZE > 99 THEN

  11654  5 000401   000253 236000 1                  LDQ     MOVE_SIZE
         5 000402   000144 116007                    CMPQ    100,DL
PL6.E3A0      #001=VYO$OBJECT File=VYO$OBJECT.:E05TSI                            WED 07/30/97 08:58 Page:95   
         5 000403   000412 602000 5                  TNC     s:11657

      325    11655    3                   CALL INSERT(VY_MBUF.CHARS, 15, 4, VY_OU_HEAD.CMPLRID.VERS_LETTER,
             11655                            VERS_NUM );

  11655  5 000404   000001 236000 xsym               LDQ     VY_OU_HEAD+1
         5 000405   000011 772000                    QRL     9
         5 000406   000003 552004 xsym               STBQ    VY_MBUF+3,'04'O
         5 000407   200006 236100                    LDQ     VERS_NUM,,AUTO
         5 000410   000004 552070 xsym               STBQ    VY_MBUF+4,'70'O
         5 000411   000422 710000 5                  TRA     s:11659

      326    11656    3               ELSE
      327    11657    3                   CALL INSERT(VY_MBUF.CHARS, 15, 4, VY_OU_HEAD.CMPLRID.VERS_LETTER,
             11657                            SUBSTR(VERS_NUM,1) );

  11657  5 000412   000001 236000 xsym               LDQ     VY_OU_HEAD+1
         5 000413   000011 772000                    QRL     9
         5 000414   000003 552004 xsym               STBQ    VY_MBUF+3,'04'O
         5 000415   200006 236100                    LDQ     VERS_NUM,,AUTO
         5 000416   000011 736000                    QLS     9
         5 000417   777777 376003                    ANQ     -1,DU
         5 000420   040040 276007                    ORQ     16416,DL
         5 000421   000004 552070 xsym               STBQ    VY_MBUF+4,'70'O

      328    11658    3               END; /* If size <= 5 */

      329    11659    2           COMP_UTS=VY_OU_HEAD.UTS;

  11659  5 000422   000000 235000 xsym               LDA     VY_OU_HEAD
         5 000423   000251 755000 1                  STA     COMP_UTS

      330    11660    2           IF M$OF$->F$DCB.TYPE# = 'LE'

  11660  5 000424   000000 470400 xsym               LDP0    M$OF$
         5 000425   000025 720100                    LXL0    21,,PR0
         5 000426   000131 100000 2                  CMPX0   OU_KEY$+1
PL6.E3A0      #001=VYO$OBJECT File=VYO$OBJECT.:E05TSI                            WED 07/30/97 08:58 Page:96   
         5 000427   000434 601000 5                  TNZ     s:11664

      331    11661    2           THEN
      332    11662    2               CALL INSERT(VY_MBUF.CHARS,27,3,'YES');

  11662  5 000430   040000 100400                    MLR     fill='040'O
         5 000431   000132 000003 2                  ADSC9   OU_KEY$+2                cn=0,n=3
         5 000432   000006 600003 xsym               ADSC9   VY_MBUF+6                cn=3,n=3
         5 000433   000437 710000 5                  TRA     s:11665

      333    11663    2           ELSE
      334    11664    2               CALL INSERT(VY_MBUF.CHARS,27,2,'NO');

  11664  5 000434   040000 100400                    MLR     fill='040'O
         5 000435   000133 000002 2                  ADSC9   OU_KEY$+3                cn=0,n=2
         5 000436   000006 600002 xsym               ADSC9   VY_MBUF+6                cn=3,n=2

      335    11665    2           UTS_TEMP = COMP_UTS;

  11665  5 000437   000250 755000 1                  STA     UTS_TEMP

      336    11666    2           CALL M$TIME( UTS_TIME );

  11666  5 000440   000030 630400 2                  EPPR0   UTS_TIME
         5 000441   020004 713400                    CLIMB   8196
         5 000442   402000 401760                    pmme    nvectors=5

      337    11667         /* Do COMPILE_TIME formatting */
      338    11668         %SUB @LIST_COMPILE_TIME=39;
      339    11669    2           CALL INSERT( VY_MBUF.CHARS, 39, LENGTHC(UTS_T.H_M), UTS_T.H_M );

  11669  5 000443   040000 100400                    MLR     fill='040'O
         5 000444   000245 000005 1                  ADSC9   UTS_T                    cn=0,n=5
         5 000445   000011 600005 xsym               ADSC9   VY_MBUF+9                cn=3,n=5

      340    11670    2           CALL INSERT( VY_MBUF.CHARS, 39+6, LENGTHC(UTS_DATE), UTS_DATE);

PL6.E3A0      #001=VYO$OBJECT File=VYO$OBJECT.:E05TSI                            WED 07/30/97 08:58 Page:97   
  11670  5 000446   040000 100400                    MLR     fill='040'O
         5 000447   000242 000012 1                  ADSC9   UTS_DATE                 cn=0,n=10
         5 000450   000013 200012 xsym               ADSC9   VY_MBUF+11               cn=1,n=10

      341    11671    2           CALL INSERT( VY_MBUF.CHARS, 57, VY_OK.OUNAME.COUNT, VY_OK.OUNAME.CHARS);

  11671  5 000451   000013 236000 xsym               LDQ     VY_OK+11
         5 000452   000033 772000                    QRL     27
         5 000453   000000 620006                    EAX0    0,QL
         5 000454   040040 100400                    MLR     fill='040'O
         5 000455   000013 200777 xsym               ADSC9   VY_OK+11                 cn=1,n=511
         5 000456   000016 200010 xsym               ADSC9   VY_MBUF+14               cn=1,n=*X0

      342    11672                %M_WRITE;

  11674  5 000457   000000 630400 xsym               EPPR0   VY_MAP_LO_FPT_WRITE
         5 000460   440001 713400                    CLIMB   alt,write
         5 000461   401400 401760                    pmme    nvectors=4
         5 000462   000470 702000 5                  TSX2    MAP_IO_ERROR

  11678  5 000463   040000 100400                    MLR     fill='040'O
         5 000464   000134 000002 2                  ADSC9   OU_KEY$+4                cn=0,n=2
         5 000465   000000 000204 xsym               ADSC9   VY_MBUF                  cn=0,n=132

  11679  5 000466   000000 450000 xsym               STZ     VY_CTAB

      343    11681    3           DO WHILE( '0'B );

  11681  5 000467   000501 710000 5                  TRA     s:11690

      344    11682    3   MAP_IO_ERROR:
      345    11683    3               CALL M$MERC ALTRET( MERC_ERROR );

  11683  5 000470   410007 713400       MAP_IO_ERROR CLIMB   alt,+4103
         5 000471   000000 401760                    pmme    nvectors=0
         5 000472   000476 702000 5                  TSX2    MERC_ERROR

PL6.E3A0      #001=VYO$OBJECT File=VYO$OBJECT.:E05TSI                            WED 07/30/97 08:58 Page:98   
      346    11684                    %ERROR_IT;

  11685  5 000473   000000 237200 xsym               LDAQ  ! VY_UNWIND
         5 000474   000000 700200 xent               TSX0  ! X66_AUNWIND
         5 000475   000000 000200                    ZERO    0,128

      347    11687    3   MERC_ERROR:
      348    11688    3               CALL VYE$MERC;

  11688  5 000476   000002 631400 xsym  MERC_ERROR   EPPR1   B_VECTNIL+2
         5 000477   000000 701000 xent               TSX1    VYE$MERC
         5 000500   000000 011000                    NOP     0

      349    11689    3               END;

      350    11690    2           IF VY_O.MAP_ATTCH.DEF + VY_O.MAP_ATTCH.REF > 0

  11690  5 000501   000005 236000 xsym               LDQ     VY_O+5
         5 000502   000006 036000 xsym               ADLQ    VY_O+6
         5 000503   001260 600000 5                  TZE     DO_RETURN

      351    11691    2           THEN CALL READ_WRITE_RECORDS;

  11691  5 000504   001261 701000 5                  TSX1    READ_WRITE_RECORDS
         5 000505   000000 011000                    NOP     0
         5 000506   001260 710000 5                  TRA     DO_RETURN

      352    11692        %EJECT;
PL6.E3A0      #001=VYO$OBJECT File=VYO$OBJECT.:E05TSI                            WED 07/30/97 08:58 Page:99   
      353    11693    2       CASE( 9/*@C_DEFINE_KEY_WORD*/ );

      354    11694    2           VY_ED_START$ = ADDR(NIL);

  11694  5 000507   000001 236000 xsym               LDQ     B_VECTNIL+1
         5 000510   000000 756000 xsym               STQ     VY_ED_START$

      355    11695    3           DO I = 0 TO SIZEW( VY_DEF_REC_A ) -2;

  11695  5 000511   000032 450000 1                  STZ     I
         5 000512   000660 710000 5                  TRA     s:11761+3

      356    11696    3               REC_TYPE = VY_DEF_REC_A(I); /* Get record type */

  11696  5 000513   000032 720000 1                  LXL0    I
         5 000514   000000 235010 xsym               LDA     VY_DEF_REC_A,X0
         5 000515   000036 755000 1                  STA     REC_TYPE

      357    11697    3               SAVE_START$(I) = VY_CURR$ -> VY$NODE.L_START_A$(REC_TYPE);

  11697  5 000516   000000 470400 xsym               LDP0    VY_CURR$
         5 000517   000030 236105                    LDQ     24,AL,PR0
         5 000520   000172 756010 1                  STQ     SAVE_START$,X0

      358    11698    3               SAVE_STOP$(I) = VY_CURR$ -> VY$NODE.L_STOP_A$(REC_TYPE);

  11698  5 000521   000036 721000 1                  LXL1    REC_TYPE
         5 000522   000042 236111                    LDQ     34,X1,PR0
         5 000523   000204 756010 1                  STQ     SAVE_STOP$,X0

      359    11699    3               SAVE_SIZE(I) = VY_CURR$ -> VY$NODE.L_SIZE_A(REC_TYPE);

  11699  5 000524   000054 235111                    LDA     44,X1,PR0
         5 000525   000216 755010 1                  STA     SAVE_SIZE,X0

      360    11700    3               SAVE_PREV_SIZE(I) = VY_CURR$ -> VY$NODE.L_PREV_SIZE_A(REC_TYPE);

PL6.E3A0      #001=VYO$OBJECT File=VYO$OBJECT.:E05TSI                            WED 07/30/97 08:58 Page:100  
  11700  5 000526   000066 235111                    LDA     54,X1,PR0
         5 000527   000230 755010 1                  STA     SAVE_PREV_SIZE,X0

      361    11701    3               ALL_A(REC_TYPE) = 0;

  11701  5 000530   000137 450011 1                  STZ     ALL_A,X1

      362    11702    3               ALL_TYPE = VY_PASS1_ALL_TYPE(REC_TYPE);

  11702  5 000531   000036 721000 1                  LXL1    REC_TYPE
         5 000532   000000 235011 xsym               LDA     VY_PASS1_ALL_TYPE,X1
         5 000533   000037 755000 1                  STA     ALL_TYPE

      363    11703    3               HEAD_INX = VY_HEAD_INX(REC_TYPE); /* Get index into head record */

  11703  5 000534   000000 235011 xsym               LDA     VY_HEAD_INX,X1
         5 000535   000101 755000 1                  STA     HEAD_INX

      364    11704    3               TSIZE = VY_OU_HEAD.REC_A.SIZE(HEAD_INX);
             11704                        /* Get total size for this record type */

  11704  5 000536   000005 236005 xsym               LDQ     VY_OU_HEAD+5,AL
         5 000537   000022 772000                    QRL     18
         5 000540   000102 756000 1                  STQ     TSIZE

      365    11705    3               PAGE = VY_OU_HEAD.REC_A.PAGE(HEAD_INX); /* Get the page size */

  11705  5 000541   000101 722000 1                  LXL2    HEAD_INX
         5 000542   000005 236012 xsym               LDQ     VY_OU_HEAD+5,X2
         5 000543   777777 376007                    ANQ     -1,DL
         5 000544   000104 756000 1                  STQ     PAGE

      366    11706    3               GET = TSIZE;

  11706  5 000545   000102 235000 1                  LDA     TSIZE
         5 000546   000106 755000 1                  STA     GET

PL6.E3A0      #001=VYO$OBJECT File=VYO$OBJECT.:E05TSI                            WED 07/30/97 08:58 Page:101  
      367    11707    4               IF TSIZE > 0 THEN DO;

  11707  5 000547   000655 600000 5                  TZE     s:11761

      368    11708    5                   IF REC_TYPE = 4/*@ED*/ THEN DO;

  11708  5 000550   000036 235000 1                  LDA     REC_TYPE
         5 000551   000004 115007                    CMPA    4,DL
         5 000552   000572 601000 5                  TNZ     s:11734

      369    11709    6                       IF MOD( PAGE, 2 ) ~= 0 THEN DO;
             11709                                /* Not an even page size - bitch */

  11709  5 000553   000001 376007                    ANQ     1,DL
         5 000554   000572 600000 5                  TZE     s:11734

      370    11710                                %NUMBER( NUM1=PAGE, NUM2=REC_TYPE );

  11716  5 000555   000106 630400 6                  EPPR0   70
         5 000556   000023 631400 xsym               EPPR1   B_VECTNIL+19
         5 000557   000000 701000 xent               TSX1    VYD$B2C
         5 000560   000000 011000                    NOP     0

  11720  5 000561   000114 630400 6                  EPPR0   76
         5 000562   000023 631400 xsym               EPPR1   B_VECTNIL+19
         5 000563   000000 701000 xent               TSX1    VYD$B2C
         5 000564   000000 011000                    NOP     0

      371    11727                                %SCREAM( ERR#=%E$ODD_PAGE_SIZE_VY,MID="'O'",LEVEL=%@E$F_VY,
             11727                                    AUX=%@E$OUOF_VY);

  11728  5 000565   000122 630400 6                  EPPR0   82
         5 000566   000022 631400 xsym               EPPR1   B_VECTNIL+18
         5 000567   000000 701000 xent               TSX1    VYE$ERROR
         5 000570   000000 011000                    NOP     0

      372    11730    6                           RETURN;
PL6.E3A0      #001=VYO$OBJECT File=VYO$OBJECT.:E05TSI                            WED 07/30/97 08:58 Page:102  

  11730  5 000571   000000 702200 xent               TSX2  ! X66_ARET

      373    11731    6                           END;
      374    11732    5                       END;
      375    11733                        %ALLOCATE( PTR$=START$, TYPE=ALL_TYPE, SIZE=GET );

  11734  5 000572   000037 723000 1                  LXL3    ALL_TYPE
         5 000573   000000 236013 xsym               LDQ     VY_M_ALL,X3
         5 000574   000000 136013 xsym               SBLQ    VY_M_FREE,X3
         5 000575   000610 604000 5                  TMI     s:11738
         5 000576   000106 116000 1                  CMPQ    GET
         5 000577   000610 602000 5                  TNC     s:11738

  11735  5 000600   000000 236013 xsym               LDQ     VY_M_FREE,X3
         5 000601   000000 471413 xsym               LDP1    VY_M_BASE_PTR,X3
         5 000602   100000 633506                    EPPR3   0,QL,PR1
         5 000603   000015 453400 1                  STP3    START$

  11736  5 000604   000000 236013 xsym               LDQ     VY_M_FREE,X3
         5 000605   000106 036000 1                  ADLQ    GET
         5 000606   000000 756013 xsym               STQ     VY_M_FREE,X3

  11737  5 000607   000614 710000 5                  TRA     s:11740

  11738  5 000610   000126 630400 6                  EPPR0   86
         5 000611   000021 631400 xsym               EPPR1   B_VECTNIL+17
         5 000612   000000 701000 xent               TSX1    VYA$GET
         5 000613   000000 011000                    NOP     0

      376    11740    4                   CALL VYU$PREAD(

  11740  5 000614   000132 630400 6                  EPPR0   90
         5 000615   000131 631400 6                  EPPR1   89
         5 000616   000000 701000 xent               TSX1    VYU$PREAD
         5 000617   000000 011000                    NOP     0

PL6.E3A0      #001=VYO$OBJECT File=VYO$OBJECT.:E05TSI                            WED 07/30/97 08:58 Page:103  
      377    11741    4                      NPAGE,
      378    11742    4                      TSIZE_READ,
      379    11743    4                      0/*@OF*/,
      380    11744    4                      1/*@RF*/,
      381    11745    4                      REC_TYPE,
      382    11746    4                      START$,
      383    11747    4                      PAGE,
      384    11748    4                      TSIZE,
      385    11749    4                      ALL_TYPE,
      386    11750    4                      GET,
      387    11751    4                      VY_CURR$,
      388    11752    4                      0/*@SOURCE_OBJECT*/
      389    11753    4                      );
      390    11754    4                   ALL_A(REC_TYPE) = TSIZE_READ;

  11754  5 000620   000114 235000 1                  LDA     TSIZE_READ
         5 000621   000036 720000 1                  LXL0    REC_TYPE
         5 000622   000137 755010 1                  STA     ALL_A,X0

      391    11755    5                   IF REC_TYPE = 4/*@ED*/ THEN DO;

  11755  5 000623   000036 235000 1                  LDA     REC_TYPE
         5 000624   000004 115007                    CMPA    4,DL
         5 000625   000635 601000 5                  TNZ     s:11759

      392    11756    5                       VY_ED_START$ = START$;

  11756  5 000626   000015 236000 1                  LDQ     START$
         5 000627   000000 756000 xsym               STQ     VY_ED_START$

      393    11757    5                      VY_ED_STOP$ = PINCRW( START$, TSIZE_READ - SIZEW( VYD$TMPLT ) );

  11757  5 000630   000114 236000 1                  LDQ     TSIZE_READ
         5 000631   000022 736000                    QLS     18
         5 000632   000002 136003                    SBLQ    2,DU
         5 000633   000015 036000 1                  ADLQ    START$
         5 000634   000000 756000 xsym               STQ     VY_ED_STOP$
PL6.E3A0      #001=VYO$OBJECT File=VYO$OBJECT.:E05TSI                            WED 07/30/97 08:58 Page:104  

      394    11758    5                       END;

      395    11759    4                   IF TSIZE_READ < GET THEN CALL VYF$FREE( ALL_TYPE, GET - TSIZE_READ,
             11759                            1 );

  11759  5 000635   000114 236000 1                  LDQ     TSIZE_READ
         5 000636   000106 116000 1                  CMPQ    GET
         5 000637   000655 603000 5                  TRC     s:11761

  11759  5 000640   000106 236000 1                  LDQ     GET
         5 000641   000114 136000 1                  SBLQ    TSIZE_READ
         5 000642   200014 756100                    STQ     @ER#+3,,AUTO
         5 000643   000013 236000 6                  LDQ     11
         5 000644   200017 756100                    STQ     @ER#+6,,AUTO
         5 000645   200014 630500                    EPPR0   @ER#+3,,AUTO
         5 000646   200016 450500                    STP0    @ER#+5,,AUTO
         5 000647   000127 236000 6                  LDQ     87
         5 000650   200015 756100                    STQ     @ER#+4,,AUTO
         5 000651   200015 630500                    EPPR0   @ER#+4,,AUTO
         5 000652   000021 631400 xsym               EPPR1   B_VECTNIL+17
         5 000653   000000 701000 xent               TSX1    VYF$FREE
         5 000654   000000 011000                    NOP     0

      396    11760    4                   END;

      397    11761    3               END;

  11761  5 000655   000032 235000 1                  LDA     I
         5 000656   000001 035007                    ADLA    1,DL
         5 000657   000032 755000 1                  STA     I
         5 000660   000032 235000 1                  LDA     I
         5 000661   000002 115007                    CMPA    2,DL
         5 000662   000513 602000 5                  TNC     s:11696

      398    11762    2           SIZE = VY_OK.OUNAME.COUNT;

PL6.E3A0      #001=VYO$OBJECT File=VYO$OBJECT.:E05TSI                            WED 07/30/97 08:58 Page:105  
  11762  5 000663   000013 236000 xsym               LDQ     VY_OK+11
         5 000664   000033 772000                    QRL     27
         5 000665   000103 756000 1                  STQ     SIZE

      399    11763
      400    11764    2           CURR$ = VY_SYMBOL$;

  11764  5 000666   000000 236000 xsym               LDQ     VY_SYMBOL$
         5 000667   000011 756000 1                  STQ     CURR$

      401    11765    3           DO WHILE( CURR$ ~= ADDR(NIL) );

  11765  5 000670   001053 710000 5                  TRA     s:11822

      402    11766    3               ITEM$ = CURR$ -> VY$LLIST.ITEM$;

  11766  5 000671   000011 470400 1                  LDP0    CURR$
         5 000672   000001 236100                    LDQ     1,,PR0
         5 000673   000012 756000 1                  STQ     ITEM$

      403    11767    3               P$ = VY_ED_START$;

  11767  5 000674   000000 236000 xsym               LDQ     VY_ED_START$
         5 000675   000003 756000 1                  STQ     P$

      404    11768    4               IF P$ ~= ADDR(NIL) THEN DO;

  11768  5 000676   000001 116000 xsym               CMPQ    B_VECTNIL+1
         5 000677   000732 600000 5                  TZE     EXIT_LOOP

      405    11769    4                   DNAME$ = VY_ROOT$ -> VY$NODE.L_START.DN$;

  11769  5 000700   000000 471400 xsym               LDP1    VY_ROOT$
         5 000701   100031 236100                    LDQ     25,,PR1
         5 000702   000171 756000 1                  STQ     DNAME$

      406    11770    5                   DO WHILE( P$ <= VY_ED_STOP$ );
PL6.E3A0      #001=VYO$OBJECT File=VYO$OBJECT.:E05TSI                            WED 07/30/97 08:58 Page:106  

  11770  5 000703   000000 236000 xsym               LDQ     VY_ED_STOP$
         5 000704   000003 116000 1                  CMPQ    P$
         5 000705   000732 602000 5                  TNC     EXIT_LOOP

      407    11771    5                       IF PINCRW( DNAME$, P$->VYD$TMPLT.I.NAME_DISP) -> B$DNAME

  11771  5 000706   000003 470400 1                  LDP0    P$
         5 000707   000001 220100                    LDX0    1,,PR0
         5 000710   000171 471400 1                  LDP1    DNAME$
         5 000711   100000 221110                    LDX1    0,X0,PR1
         5 000712   000002 622011                    EAX2    2,X1
         5 000713   000012 473400 1                  LDP3    ITEM$
         5 000714   300000 223100                    LDX3    0,,PR3
         5 000715   000002 624013                    EAX4    2,X3
         5 000716   000000 635010                    EAA     0,X0
         5 000717   000020 771000                    ARL     16
         5 000720   000140 106545                    CMPC    fill='000'O
         5 000721   100000 000012                    ADSC9   0,A,PR1                  cn=0,n=*X2
         5 000722   300000 000014                    ADSC9   0,,PR3                   cn=0,n=*X4
         5 000723   000732 600000 5                  TZE     EXIT_LOOP

      408    11772    5                          = ITEM$ -> B$DNAME THEN GOTO EXIT_LOOP;
      409    11773    5                       P$ = PINCRW( P$, SIZEW(VYD$TMPLT) );

  11773  5 000724   000003 236000 1                  LDQ     P$
         5 000725   000002 036003                    ADLQ    2,DU
         5 000726   000003 756000 1                  STQ     P$

      410    11774    5                       END;

  11774  5 000727   000000 116000 xsym               CMPQ    VY_ED_STOP$
         5 000730   000706 602000 5                  TNC     s:11771
         5 000731   000706 600000 5                  TZE     s:11771

      411    11775    4                   END;

PL6.E3A0      #001=VYO$OBJECT File=VYO$OBJECT.:E05TSI                            WED 07/30/97 08:58 Page:107  
      412    11776    3   EXIT_LOOP:
      413    11777    4               IF P$ > VY_ED_STOP$ OR P$ = ADDR(NIL) THEN DO;

  11777  5 000732   000000 236000 xsym  EXIT_LOOP    LDQ     VY_ED_STOP$
         5 000733   000003 116000 1                  CMPQ    P$
         5 000734   000740 602000 5                  TNC     s:11782
         5 000735   000003 236000 1                  LDQ     P$
         5 000736   000001 116000 xsym               CMPQ    B_VECTNIL+1
         5 000737   000760 601000 5                  TNZ     s:11790

      414    11778        /*E*  ERROR: VYO-E$ENTRY_NAME_NOT_DEFINED_VY-C
      415    11779              MESSAGE: %U1 is not a defined entry-name in the object unit %U2.
      416    11780                       A cross-reference is not defined for %U1.
      417    11781        */
      418    11782    4                   VY_EFIELD1.COUNT = ITEM$ -> B$DNAME.COUNT;

  11782  5 000740   000012 470400 1                  LDP0    ITEM$
         5 000741   000000 236100                    LDQ     0,,PR0
         5 000742   000011 736000                    QLS     9
         5 000743   000000 552040 xsym               STBQ    VY_EFIELD1,'40'O

      419    11783    4                   VY_EFIELD1.CHARS = ITEM$ -> B$DNAME.TEXT;

  11783  5 000744   000000 220100                    LDX0    0,,PR0
         5 000745   040000 100540                    MLR     fill='040'O
         5 000746   000000 400010                    ADSC9   0,,PR0                   cn=2,n=*X0
         5 000747   000000 200117 xsym               ADSC9   VY_EFIELD1               cn=1,n=79

      420    11784    4                   VY_EFIELD2 = VY_OK.OUNAME;

  11784  5 000750   000000 100400                    MLR     fill='000'O
         5 000751   000013 000120 xsym               ADSC9   VY_OK+11                 cn=0,n=80
         5 000752   000000 000120 xsym               ADSC9   VY_EFIELD2               cn=0,n=80

      421    11785                       %SCREAM( ERR#=%E$ENTRY_NAME_NOT_DEFINED_VY,LEVEL=%@E$S_VY,MID="'O'")
             11785                            ;

PL6.E3A0      #001=VYO$OBJECT File=VYO$OBJECT.:E05TSI                            WED 07/30/97 08:58 Page:108  
  11786  5 000753   000147 630400 6                  EPPR0   103
         5 000754   000022 631400 xsym               EPPR1   B_VECTNIL+18
         5 000755   000000 701000 xent               TSX1    VYE$ERROR
         5 000756   000000 011000                    NOP     0

      422    11788    4                   GOTO NEXT_ONE;

  11788  5 000757   001050 710000 5                  TRA     NEXT_ONE

      423    11789    4                   END;
      424    11790    3               VY_O_KEY_BUF.FORM0.COUNT = ITEM$ -> B$DNAME.COUNT;

  11790  5 000760   000012 470400 1                  LDP0    ITEM$
         5 000761   000000 236100                    LDQ     0,,PR0
         5 000762   000011 736000                    QLS     9
         5 000763   000000 552040 xsym               STBQ    VY_O_KEY_BUF,'40'O

      425    11791    3               VY_O_KEY_BUF.FORM0.CHARS = ITEM$ -> B$DNAME.TEXT;

  11791  5 000764   000000 220100                    LDX0    0,,PR0
         5 000765   040000 100540                    MLR     fill='040'O
         5 000766   000000 400010                    ADSC9   0,,PR0                   cn=2,n=*X0
         5 000767   000000 201000 xsym               ADSC9   VY_O_KEY_BUF             cn=1,n=512

      426    11792
      427    11793    3               WRITE_SWITCH = VY_INV_OWRITE;

  11793  5 000770   000000 236000 xsym               LDQ     VY_INV_OWRITE
         5 000771   400000 376003                    ANQ     -131072,DU
         5 000772   000001 756000 1                  STQ     WRITE_SWITCH

      428    11794    3   RETRY_DEFINE:
      429    11795    3               CALL VYI$WRITE_C( 0/*@OF*/,

  11795  5 000773   000006 236000 6     RETRY_DEFINE LDQ     6
         5 000774   200014 756100                    STQ     @ER#+3,,AUTO
         5 000775   000010 237000 6                  LDAQ    8
PL6.E3A0      #001=VYO$OBJECT File=VYO$OBJECT.:E05TSI                            WED 07/30/97 08:58 Page:109  
         5 000776   200020 757100                    STAQ    @ER#+7,,AUTO
         5 000777   000012 236000 6                  LDQ     10
         5 001000   200017 756100                    STQ     @ER#+6,,AUTO
         5 001001   200014 630500                    EPPR0   @ER#+3,,AUTO
         5 001002   200016 450500                    STP0    @ER#+5,,AUTO
         5 001003   000003 236000 6                  LDQ     3
         5 001004   200015 756100                    STQ     @ER#+4,,AUTO
         5 001005   200015 630500                    EPPR0   @ER#+4,,AUTO
         5 001006   000023 631400 xsym               EPPR1   B_VECTNIL+19
         5 001007   000000 701000 xent               TSX1    VYI$WRITE_C
         5 001010   001012 702000 5                  TSX2    A_DUP_DEFINE

      430    11796    3                  ADDR( VY_OK.OUNAME.CHARS ),
      431    11797    3                  SIZE,
      432    11798    3                  0/*@OF*/, WRITE_SWITCH) ALTRET( A_DUP_DEFINE);
      433    11799    4               DO WHILE( '0'B );

  11799  5 001011   001050 710000 5                  TRA     NEXT_ONE

      434    11800    4   A_DUP_DEFINE:
      435    11801    5                   DO CASE( VY_O.PRIMARY_OPTION.DUPLICATE );

  11801  5 001012   000001 235000 xsym  A_DUP_DEFINE LDA     VY_O+1
         5 001013   000003 115007                    CMPA    3,DL
         5 001014   001016 602005 5                  TNC     A_DUP_DEFINE+4,AL
         5 001015   001050 710000 5                  TRA     NEXT_ONE
         5 001016   001050 710000 5                  TRA     NEXT_ONE
         5 001017   001026 710000 5                  TRA     s:11805
         5 001020   001021 710000 5                  TRA     s:11803

      436    11802    5                   CASE( 2/*@C_ERROR_KEY_WORD*/ );

      437    11803    5                       CALL DUP_ERR( 2022 );

  11803  5 001021   000015 236000 6                  LDQ     13
         5 001022   200011 756100                    STQ     VERS_NUM+3,,AUTO
         5 001023   003027 701000 5                  TSX1    DUP_ERR
PL6.E3A0      #001=VYO$OBJECT File=VYO$OBJECT.:E05TSI                            WED 07/30/97 08:58 Page:110  
         5 001024   000000 011000                    NOP     0
         5 001025   001050 710000 5                  TRA     NEXT_ONE

      438    11804    5                   CASE( 1/*@C_INQUIRE_KEY_WORD*/ );

      439    11805    5                       CALL DUP_ERR( 2021 );

  11805  5 001026   000017 236000 6                  LDQ     15
         5 001027   200011 756100                    STQ     VERS_NUM+3,,AUTO
         5 001030   003027 701000 5                  TSX1    DUP_ERR
         5 001031   000000 011000                    NOP     0

      440    11806                            %SCREAM(
      441    11807                            ERR#=%E$DUP_ASK_VY,
      442    11808                            LEVEL=%@E$I_VY,
      443    11809                            MID="'O'");

  11810  5 001032   000021 630400 6                  EPPR0   17
         5 001033   000022 631400 xsym               EPPR1   B_VECTNIL+18
         5 001034   000000 701000 xent               TSX1    VYE$ERROR
         5 001035   000000 011000                    NOP     0

      444    11812    5                       CALL VYY$YESNO( ANSWER );

  11812  5 001036   000025 630400 6                  EPPR0   21
         5 001037   000017 631400 xsym               EPPR1   B_VECTNIL+15
         5 001040   000000 701000 xent               TSX1    VYY$YESNO
         5 001041   000000 011000                    NOP     0

      445    11813    6                       IF ANSWER = 1/*@YES*/ THEN DO;

  11813  5 001042   000131 235000 1                  LDA     ANSWER
         5 001043   000001 115007                    CMPA    1,DL
         5 001044   001050 601000 5                  TNZ     NEXT_ONE

      446    11814    6                           WRITE_SWITCH = '1'B/*@TRUE_B*/;

PL6.E3A0      #001=VYO$OBJECT File=VYO$OBJECT.:E05TSI                            WED 07/30/97 08:58 Page:111  
  11814  5 001045   400000 236003                    LDQ     -131072,DU
         5 001046   000001 756000 1                  STQ     WRITE_SWITCH

      447    11815    6                           GOTO RETRY_DEFINE;

  11815  5 001047   000773 710000 5                  TRA     RETRY_DEFINE

      448    11816    6                           END;
      449    11817    5                       END; /* Do case( VY_O.PRIMARY_OPTION.DUPLICATE ); */

      450    11818    4                   END; /* Do never */

      451    11819
      452    11820    3   NEXT_ONE:
      453    11821    3               CURR$ = CURR$ -> VY$LLIST.LINK$;

  11821  5 001050   000011 470400 1     NEXT_ONE     LDP0    CURR$
         5 001051   000000 236100                    LDQ     0,,PR0
         5 001052   000011 756000 1                  STQ     CURR$

      454    11822    3               END; /* Do while( CURR$ ~= addr(nil) ) */

  11822  5 001053   000001 116000 xsym               CMPQ    B_VECTNIL+1
         5 001054   000671 601000 5                  TNZ     s:11766

      455    11823    3           DO I = 0 TO SIZEW( VY_DEF_REC_A ) -2;

  11823  5 001055   000032 450000 1                  STZ     I
         5 001056   001123 710000 5                  TRA     s:11832+3

      456    11824    3               REC_TYPE = VY_DEF_REC_A(I); /* Get record type */

  11824  5 001057   000032 720000 1                  LXL0    I
         5 001060   000000 235010 xsym               LDA     VY_DEF_REC_A,X0
         5 001061   000036 755000 1                  STA     REC_TYPE

      457    11825    3               VY_CURR$ -> VY$NODE.L_START_A$(REC_TYPE) = SAVE_START$(I);
PL6.E3A0      #001=VYO$OBJECT File=VYO$OBJECT.:E05TSI                            WED 07/30/97 08:58 Page:112  

  11825  5 001062   000172 236010 1                  LDQ     SAVE_START$,X0
         5 001063   000000 470400 xsym               LDP0    VY_CURR$
         5 001064   000030 756105                    STQ     24,AL,PR0

      458    11826    3               VY_CURR$ -> VY$NODE.L_STOP_A$(REC_TYPE) = SAVE_STOP$(I);

  11826  5 001065   000204 236010 1                  LDQ     SAVE_STOP$,X0
         5 001066   000000 470400 xsym               LDP0    VY_CURR$
         5 001067   000036 721000 1                  LXL1    REC_TYPE
         5 001070   000042 756111                    STQ     34,X1,PR0

      459    11827    3               VY_CURR$ -> VY$NODE.L_SIZE_A(REC_TYPE) = SAVE_SIZE(I);

  11827  5 001071   000000 470400 xsym               LDP0    VY_CURR$
         5 001072   000036 721000 1                  LXL1    REC_TYPE
         5 001073   000216 235010 1                  LDA     SAVE_SIZE,X0
         5 001074   000054 755111                    STA     44,X1,PR0

      460    11828    3               VY_CURR$ -> VY$NODE.L_PREV_SIZE_A(REC_TYPE) = SAVE_PREV_SIZE(I);

  11828  5 001075   000000 470400 xsym               LDP0    VY_CURR$
         5 001076   000036 721000 1                  LXL1    REC_TYPE
         5 001077   000230 235010 1                  LDA     SAVE_PREV_SIZE,X0
         5 001100   000066 755111                    STA     54,X1,PR0

      461    11829    3               ALL_TYPE = VY_PASS1_ALL_TYPE(REC_TYPE);

  11829  5 001101   000036 721000 1                  LXL1    REC_TYPE
         5 001102   000000 235011 xsym               LDA     VY_PASS1_ALL_TYPE,X1
         5 001103   000037 755000 1                  STA     ALL_TYPE

      462    11830    3               IF ALL_A(REC_TYPE) >0 THEN

  11830  5 001104   000137 235011 1                  LDA     ALL_A,X1
         5 001105   001120 604400 5                  TMOZ    s:11832

PL6.E3A0      #001=VYO$OBJECT File=VYO$OBJECT.:E05TSI                            WED 07/30/97 08:58 Page:113  
      463    11831    3                   CALL VYF$FREE( ALL_TYPE, ALL_A(REC_TYPE), 0 );

  11831  5 001106   000003 236000 6                  LDQ     3
         5 001107   200016 756100                    STQ     @ER#+5,,AUTO
         5 001110   000137 630411 1                  EPPR0   ALL_A,X1
         5 001111   200015 450500                    STP0    @ER#+4,,AUTO
         5 001112   000127 236000 6                  LDQ     87
         5 001113   200014 756100                    STQ     @ER#+3,,AUTO
         5 001114   200014 630500                    EPPR0   @ER#+3,,AUTO
         5 001115   000021 631400 xsym               EPPR1   B_VECTNIL+17
         5 001116   000000 701000 xent               TSX1    VYF$FREE
         5 001117   000000 011000                    NOP     0

      464    11832    3               END; /* Do i = 0 to 1; */

  11832  5 001120   000032 235000 1                  LDA     I
         5 001121   000001 035007                    ADLA    1,DL
         5 001122   000032 755000 1                  STA     I
         5 001123   000032 235000 1                  LDA     I
         5 001124   000002 115007                    CMPA    2,DL
         5 001125   001057 602000 5                  TNC     s:11824
         5 001126   001260 710000 5                  TRA     DO_RETURN

      465    11833        %EJECT;
PL6.E3A0      #001=VYO$OBJECT File=VYO$OBJECT.:E05TSI                            WED 07/30/97 08:58 Page:114  
      466    11834    2       CASE( 10/*@C_DROP_KEY_WORD*/ );

      467    11835
      468    11836                %ALLOCATE( PTR$=BUFFER$, TYPE=@GDP, SIZE=8 );

  11837  5 001127   000010 236000 xsym               LDQ     VY_M_ALL+8
         5 001130   000010 136000 xsym               SBLQ    VY_M_FREE+8
         5 001131   000010 116007                    CMPQ    8,DL
         5 001132   001142 604000 5                  TMI     s:11841

  11838  5 001133   000010 236000 xsym               LDQ     VY_M_FREE+8
         5 001134   000022 736000                    QLS     18
         5 001135   000010 036000 xsym               ADLQ    VY_M_BASE_PTR+8
         5 001136   000170 756000 1                  STQ     BUFFER$

  11839  5 001137   000010 236007                    LDQ     8,DL
         5 001140   000010 056000 xsym               ASQ     VY_M_FREE+8

  11840  5 001141   001146 710000 5                  TRA     s:11843

  11841  5 001142   000153 630400 6                  EPPR0   107
         5 001143   000021 631400 xsym               EPPR1   B_VECTNIL+17
         5 001144   000000 701000 xent               TSX1    VYA$GET
         5 001145   000000 011000                    NOP     0

      469    11843    2           CURR$ = VY_SYMBOL$;

  11843  5 001146   000000 236000 xsym               LDQ     VY_SYMBOL$
         5 001147   000011 756000 1                  STQ     CURR$

      470    11844    3           DO WHILE( CURR$ ~= ADDR(NIL) );

  11844  5 001150   001252 710000 5                  TRA     s:11891

      471    11845    3               ITEM$ = CURR$ -> VY$LLIST.ITEM$;

  11845  5 001151   000011 470400 1                  LDP0    CURR$
PL6.E3A0      #001=VYO$OBJECT File=VYO$OBJECT.:E05TSI                            WED 07/30/97 08:58 Page:115  
         5 001152   000001 236100                    LDQ     1,,PR0
         5 001153   000012 756000 1                  STQ     ITEM$

      472    11846    3               VY_O_KEY_BUF.FORM0.COUNT = ITEM$ -> B$DNAME.COUNT;

  11846  5 001154   000012 471400 1                  LDP1    ITEM$
         5 001155   100000 236100                    LDQ     0,,PR1
         5 001156   000011 736000                    QLS     9
         5 001157   000000 552040 xsym               STBQ    VY_O_KEY_BUF,'40'O

      473    11847    3               VY_O_KEY_BUF.FORM0.CHARS = ITEM$ -> B$DNAME.TEXT;

  11847  5 001160   100000 220100                    LDX0    0,,PR1
         5 001161   040000 100540                    MLR     fill='040'O
         5 001162   100000 400010                    ADSC9   0,,PR1                   cn=2,n=*X0
         5 001163   000000 201000 xsym               ADSC9   VY_O_KEY_BUF             cn=1,n=512

      474    11848
      475    11849    3               CALL VYI$READ( 0/*@OF*/,

  11849  5 001164   000156 630400 6                  EPPR0   110
         5 001165   000023 631400 xsym               EPPR1   B_VECTNIL+19
         5 001166   000000 701000 xent               TSX1    VYI$READ
         5 001167   001230 702000 5                  TSX2    INC_P

      476    11850    3                  BUFFER$,
      477    11851    3                  8,
      478    11852    3                  0/*@OF*/,
      479    11853    3                  '1'B ) ALTRET(INC_P);
      480    11854    4               IF BUFFER$ -> CHAR$CHAR = VY_OK.OUNAME.CHARS THEN DO;

  11854  5 001170   000170 470400 1                  LDP0    BUFFER$
         5 001171   000000 720000 xsym               LXL0    VY_IO_SIZEC
         5 001172   040000 106540                    CMPC    fill='040'O
         5 001173   000000 000010                    ADSC9   0,,PR0                   cn=0,n=*X0
         5 001174   000013 200777 xsym               ADSC9   VY_OK+11                 cn=1,n=511
         5 001175   001202 601000 5                  TNZ     s:11862
PL6.E3A0      #001=VYO$OBJECT File=VYO$OBJECT.:E05TSI                            WED 07/30/97 08:58 Page:116  

      481    11855    4                   CALL M$DELREC( FPT_DELREC );

  11855  5 001176   000016 630400 2                  EPPR0   FPT_DELREC
         5 001177   040002 713400                    CLIMB   16386
         5 001200   401400 401760                    pmme    nvectors=4

      482    11856    4                   END; /* If BUFFER$ -> .... */

  11856  5 001201   001227 710000 5                  TRA     s:11874

      483    11857    4               ELSE DO;

      484    11858        /*E*  ERROR: VYO-E$DROP_ERR_VY-0
      485    11859              MESSAGE: %U1 is not in %U2; It is in %U3; Not dropped.
      486    11860              DESCRIPTION: Self-explanatory.
      487    11861        */
      488    11862    4                   VY_EFIELD1.COUNT = ITEM$ -> B$DNAME.COUNT;

  11862  5 001202   000012 471400 1                  LDP1    ITEM$
         5 001203   100000 236100                    LDQ     0,,PR1
         5 001204   000011 736000                    QLS     9
         5 001205   000000 552040 xsym               STBQ    VY_EFIELD1,'40'O

      489    11863    4                   VY_EFIELD1.CHARS = ITEM$ -> B$DNAME.TEXT;

  11863  5 001206   100000 221100                    LDX1    0,,PR1
         5 001207   040000 100540                    MLR     fill='040'O
         5 001210   100000 400011                    ADSC9   0,,PR1                   cn=2,n=*X1
         5 001211   000000 200117 xsym               ADSC9   VY_EFIELD1               cn=1,n=79

      490    11864    4                   VY_EFIELD2 = VY_OK.OUNAME;

  11864  5 001212   000000 100400                    MLR     fill='000'O
         5 001213   000013 000120 xsym               ADSC9   VY_OK+11                 cn=0,n=80
         5 001214   000000 000120 xsym               ADSC9   VY_EFIELD2               cn=0,n=80

PL6.E3A0      #001=VYO$OBJECT File=VYO$OBJECT.:E05TSI                            WED 07/30/97 08:58 Page:117  
      491    11865    4                   VY_EFIELD3.COUNT = VY_IO_SIZEC;

  11865  5 001215   000000 236000 xsym               LDQ     VY_IO_SIZEC
         5 001216   000033 736000                    QLS     27
         5 001217   000000 552040 xsym               STBQ    VY_EFIELD3,'40'O

      492    11866    4                   VY_EFIELD3.CHARS = BUFFER$ -> CHAR$CHAR;

  11866  5 001220   040000 100540                    MLR     fill='040'O
         5 001221   000000 000010                    ADSC9   0,,PR0                   cn=0,n=*X0
         5 001222   000000 200117 xsym               ADSC9   VY_EFIELD3               cn=1,n=79

      493    11867                        %SCREAM(
      494    11868                        ERR#=%E$DROP_ERR_VY,
      495    11869                        LEVEL=%@E$S_VY,
      496    11870                        MID="'O'");

  11871  5 001223   000164 630400 6                  EPPR0   116
         5 001224   000022 631400 xsym               EPPR1   B_VECTNIL+18
         5 001225   000000 701000 xent               TSX1    VYE$ERROR
         5 001226   000000 011000                    NOP     0

      497    11873    4                   END; /* Else do; */

      498    11874    4               DO WHILE( '0'B );

  11874  5 001227   001247 710000 5                  TRA     s:11890

      499    11875    4   INC_P:
      500    11876        /*E*  ERROR: VYO-E$DROP_ERR_EXIST_VY-0
      501    11877              MESSAGE: %U1 is not in %U2; Does not exist.
      502    11878        */
      503    11879    4                   VY_EFIELD1.COUNT = ITEM$ -> B$DNAME.COUNT;

  11879  5 001230   000012 470400 1     INC_P        LDP0    ITEM$
         5 001231   000000 236100                    LDQ     0,,PR0
         5 001232   000011 736000                    QLS     9
PL6.E3A0      #001=VYO$OBJECT File=VYO$OBJECT.:E05TSI                            WED 07/30/97 08:58 Page:118  
         5 001233   000000 552040 xsym               STBQ    VY_EFIELD1,'40'O

      504    11880    4                   VY_EFIELD1.CHARS = ITEM$ -> B$DNAME.TEXT;

  11880  5 001234   000000 220100                    LDX0    0,,PR0
         5 001235   040000 100540                    MLR     fill='040'O
         5 001236   000000 400010                    ADSC9   0,,PR0                   cn=2,n=*X0
         5 001237   000000 200117 xsym               ADSC9   VY_EFIELD1               cn=1,n=79

      505    11881    4                   VY_EFIELD2 = VY_OK.OUNAME;

  11881  5 001240   000000 100400                    MLR     fill='000'O
         5 001241   000013 000120 xsym               ADSC9   VY_OK+11                 cn=0,n=80
         5 001242   000000 000120 xsym               ADSC9   VY_EFIELD2               cn=0,n=80

      506    11882                        %SCREAM(
      507    11883                        ERR#=%E$DROP_ERR_EXIST_VY,
      508    11884                        LEVEL=%@E$S_VY,
      509    11885                        MID="'O'");

  11886  5 001243   000171 630400 6                  EPPR0   121
         5 001244   000022 631400 xsym               EPPR1   B_VECTNIL+18
         5 001245   000000 701000 xent               TSX1    VYE$ERROR
         5 001246   000000 011000                    NOP     0

      510    11888    4                   END; /* Do never */

      511    11889
      512    11890    3               CURR$ = CURR$ -> VY$LLIST.LINK$;

  11890  5 001247   000011 470400 1                  LDP0    CURR$
         5 001250   000000 236100                    LDQ     0,,PR0
         5 001251   000011 756000 1                  STQ     CURR$

      513    11891    3               END; /* Do while( CURR$ ~= addr(nil) ); */

  11891  5 001252   000001 116000 xsym               CMPQ    B_VECTNIL+1
PL6.E3A0      #001=VYO$OBJECT File=VYO$OBJECT.:E05TSI                            WED 07/30/97 08:58 Page:119  
         5 001253   001151 601000 5                  TNZ     s:11845

      514    11892    2           CALL VYF$FREE( 8/*@GDP*/, 8, 0 );

  11892  5 001254   000154 630400 6                  EPPR0   108
         5 001255   000021 631400 xsym               EPPR1   B_VECTNIL+17
         5 001256   000000 701000 xent               TSX1    VYF$FREE
         5 001257   000000 011000                    NOP     0

      515    11893    2           END; /* Do case( VY_COMMAND ); */

      516    11894    1   DO_RETURN:
      517    11895    1       RETURN;

  11895  5 001260   000000 702200 xent  DO_RETURN    TSX2  ! X66_ARET

      518    11896
      519    11897        %EJECT;
PL6.E3A0      #001=VYO$OBJECT File=VYO$OBJECT.:E05TSI                            WED 07/30/97 08:58 Page:120  
      520    11898        /*I*  NAME:       READ_WRITE_RECORDS
      521    11899              PURPOSE:    Read object unit records and write them to a library/object file
      522    11900              INTERFACE:  VYU$PREAD
      523    11901                          VYE$ERROR
      524    11902                          VYF$FREE
      525    11903                          VYD$B2C
      526    11904                          VYA$GET
      527    11905              DESCRIPTION:
      528    11906                  For object unit record types 1 (Defined names) to 9 (SEGREFs)
      529    11907                  the procedure allocates a buffer for the record type and calls
      530    11908                  VYU$PREAD to read all the records for the record type into the
      531    11909                  allocated buffer and to write the records to a library/object file
      532    11910                  for COPY and EXTRACT commands.
      533    11911        */
      534    11912
      535    11913
      536    11914    1   READ_WRITE_RECORDS: PROC;

  11914  5 001261   200010 741300       READ_WRITE_* STX1  ! VERS_NUM+2,,AUTO

      537    11915
      538    11916
      539    11917    2       VY_ED_START$=ADDR(NIL);

  11917  5 001262   000001 236000 xsym               LDQ     B_VECTNIL+1
         5 001263   000000 756000 xsym               STQ     VY_ED_START$

      540    11918    2       HB = SIZEW( VY_PASS1_REC_TYPE ) - 1;

  11918  5 001264   000010 235007                    LDA     8,DL
         5 001265   000132 755000 1                  STA     HB

      541    11919    2       ALL$ = ALLOCATE$;

  11919  5 001266   200005 470500                    LDP0    @ALLOCATE$,,AUTO
         5 001267   000000 236100                    LDQ     0,,PR0
         5 001270   000006 756000 1                  STQ     ALL$
PL6.E3A0      #001=VYO$OBJECT File=VYO$OBJECT.:E05TSI                            WED 07/30/97 08:58 Page:121  

      542    11920    3       DO I = 0 TO HB; /* @DN to @SR */

  11920  5 001271   000032 450000 1                  STZ     I
         5 001272   001717 710000 5                  TRA     s:12059+3

      543    11921    3           REC_TYPE = VY_PASS1_REC_TYPE(I); /* Get record type */

  11921  5 001273   000032 720000 1                  LXL0    I
         5 001274   000000 235010 xsym               LDA     VY_PASS1_REC_TYPE,X0
         5 001275   000036 755000 1                  STA     REC_TYPE

      544    11922    3           IF VY_COMMAND = 6/*@C_LIST_KEY_WORD*/ AND VY_O.MAP_A(REC_TYPE) = 0/*@NO*/

  11922  5 001276   000000 236000 xsym               LDQ     VY_COMMAND
         5 001277   000006 116007                    CMPQ    6,DL
         5 001300   001303 601000 5                  TNZ     s:11925
         5 001301   000004 235005 xsym               LDA     VY_O+4,AL
         5 001302   001714 600000 5                  TZE     s:12059

      545    11923    3           THEN ; /* Do nothing */
      546    11924    4           ELSE DO;

      547    11925    4               SAVE_START$(I) = VY_CURR$ -> VY$NODE.L_START_A$(REC_TYPE);

  11925  5 001303   000000 470400 xsym               LDP0    VY_CURR$
         5 001304   000036 721000 1                  LXL1    REC_TYPE
         5 001305   000030 236111                    LDQ     24,X1,PR0
         5 001306   000172 756010 1                  STQ     SAVE_START$,X0

      548    11926    4               SAVE_STOP$(I) = VY_CURR$ -> VY$NODE.L_STOP_A$(REC_TYPE);

  11926  5 001307   000042 236111                    LDQ     34,X1,PR0
         5 001310   000204 756010 1                  STQ     SAVE_STOP$,X0

      549    11927    4               SAVE_SIZE(I) = VY_CURR$ -> VY$NODE.L_SIZE_A(REC_TYPE);

PL6.E3A0      #001=VYO$OBJECT File=VYO$OBJECT.:E05TSI                            WED 07/30/97 08:58 Page:122  
  11927  5 001311   000054 235111                    LDA     44,X1,PR0
         5 001312   000216 755010 1                  STA     SAVE_SIZE,X0

      550    11928    4               SAVE_PREV_SIZE(I) = VY_CURR$ -> VY$NODE.L_PREV_SIZE_A(REC_TYPE);

  11928  5 001313   000066 235111                    LDA     54,X1,PR0
         5 001314   000230 755010 1                  STA     SAVE_PREV_SIZE,X0

      551    11929    4               ALL_A(REC_TYPE) = 0;

  11929  5 001315   000137 450011 1                  STZ     ALL_A,X1

      552    11930    4               ALL_TYPE = ALL$ -> VY$WORD_A(REC_TYPE);
             11930                        /*Get segment index for this record type */

  11930  5 001316   000006 471400 1                  LDP1    ALL$
         5 001317   000036 721000 1                  LXL1    REC_TYPE
         5 001320   100000 235111                    LDA     0,X1,PR1
         5 001321   000037 755000 1                  STA     ALL_TYPE

      553    11931    5               IF REC_TYPE = 3 THEN DO;

  11931  5 001322   000036 235000 1                  LDA     REC_TYPE
         5 001323   000003 115007                    CMPA    3,DL
         5 001324   001333 601000 5                  TNZ     s:11937

      554    11932    5                   TSIZE = 32768; /*  (2**14)*2 */

  11932  5 001325   100000 235007                    LDA     32768,DL
         5 001326   000102 755000 1                  STA     TSIZE

      555    11933    5                   PAGE = 1024/*@PAGE_SIZE*/;

  11933  5 001327   002000 235007                    LDA     1024,DL
         5 001330   000104 755000 1                  STA     PAGE

      556    11934    5                   GET = 1024/*@PAGE_SIZE*/;
PL6.E3A0      #001=VYO$OBJECT File=VYO$OBJECT.:E05TSI                            WED 07/30/97 08:58 Page:123  

  11934  5 001331   000106 755000 1                  STA     GET

      557    11935    5                   END;

  11935  5 001332   001346 710000 5                  TRA     s:11942

      558    11936    5               ELSE DO;

      559    11937    5                   HEAD_INX = VY_HEAD_INX(REC_TYPE); /* Get index into head record */

  11937  5 001333   000000 235011 xsym               LDA     VY_HEAD_INX,X1
         5 001334   000101 755000 1                  STA     HEAD_INX

      560    11938    5                   TSIZE = VY_OU_HEAD.REC_A.SIZE(HEAD_INX);
             11938                            /* Get total size for this record type */

  11938  5 001335   000005 236005 xsym               LDQ     VY_OU_HEAD+5,AL
         5 001336   000022 772000                    QRL     18
         5 001337   000102 756000 1                  STQ     TSIZE

      561    11939    5                   PAGE = VY_OU_HEAD.REC_A.PAGE(HEAD_INX); /* Get the page size */

  11939  5 001340   000101 722000 1                  LXL2    HEAD_INX
         5 001341   000005 236012 xsym               LDQ     VY_OU_HEAD+5,X2
         5 001342   777777 376007                    ANQ     -1,DL
         5 001343   000104 756000 1                  STQ     PAGE

      562    11940    5                   GET = TSIZE;

  11940  5 001344   000102 235000 1                  LDA     TSIZE
         5 001345   000106 755000 1                  STA     GET

      563    11941    5                   END;

      564    11942    5               IF TSIZE > 0 THEN DO;

PL6.E3A0      #001=VYO$OBJECT File=VYO$OBJECT.:E05TSI                            WED 07/30/97 08:58 Page:124  
  11942  5 001346   000102 236000 1                  LDQ     TSIZE
         5 001347   001714 600000 5                  TZE     s:12059

      565    11943    6                   DO CASE( REC_TYPE );

  11943  5 001350   000036 235000 1                  LDA     REC_TYPE
         5 001351   000011 115007                    CMPA    9,DL
         5 001352   001354 602005 5                  TNC     s:11943+4,AL
         5 001353   001406 710000 5                  TRA     s:11979
         5 001354   001406 710000 5                  TRA     s:11979
         5 001355   001406 710000 5                  TRA     s:11979
         5 001356   001406 710000 5                  TRA     s:11979
         5 001357   001365 710000 5                  TRA     s:11945
         5 001360   001365 710000 5                  TRA     s:11945
         5 001361   001406 710000 5                  TRA     s:11979
         5 001362   001365 710000 5                  TRA     s:11945
         5 001363   001406 710000 5                  TRA     s:11979
         5 001364   001365 710000 5                  TRA     s:11945

      566    11944    6                   CASE( 3, 4, 6, 8 );

      567    11945    7                       IF MOD( PAGE, 2 ) ~= 0 THEN DO;
             11945                                /* Not an even page size - bitch */

  11945  5 001365   000104 236000 1                  LDQ     PAGE
         5 001366   000001 376007                    ANQ     1,DL
         5 001367   001406 600000 5                  TZE     s:11979

      568    11946        /*E*  ERROR: VYO-E$ODD_PAGE_SIZE_VY-0
      569    11947              MESSAGE: Object language error. Odd page size.
      570    11948                       Page size = %U1; Record type = %U2.
      571    11949              DESCRIPTION: Self-explanatory.
      572    11950        */
      573    11951                                %NUMBER( NUM1=PAGE, NUM2=REC_TYPE );

  11957  5 001370   000106 630400 6                  EPPR0   70
         5 001371   000023 631400 xsym               EPPR1   B_VECTNIL+19
PL6.E3A0      #001=VYO$OBJECT File=VYO$OBJECT.:E05TSI                            WED 07/30/97 08:58 Page:125  
         5 001372   000000 701000 xent               TSX1    VYD$B2C
         5 001373   000000 011000                    NOP     0

  11961  5 001374   000114 630400 6                  EPPR0   76
         5 001375   000023 631400 xsym               EPPR1   B_VECTNIL+19
         5 001376   000000 701000 xent               TSX1    VYD$B2C
         5 001377   000000 011000                    NOP     0

      574    11968                                %SCREAM(
      575    11969                                ERR#=%E$ODD_PAGE_SIZE_VY,
      576    11970                                MID="'O'",
      577    11971                                LEVEL=%@E$F_VY,
      578    11972                                AUX=%@E$OUOF_VY);

  11973  5 001400   000122 630400 6                  EPPR0   82
         5 001401   000022 631400 xsym               EPPR1   B_VECTNIL+18
         5 001402   000000 701000 xent               TSX1    VYE$ERROR
         5 001403   000000 011000                    NOP     0

      579    11975    7                           RETURN;

  11975  5 001404   200010 221300                    LDX1  ! VERS_NUM+2,,AUTO
         5 001405   000001 702211                    TSX2  ! 1,X1

      580    11976    7                           END;
      581    11977    6                       END;

      582    11978                        %ALLOCATE( PTR$=START$, TYPE=ALL_TYPE, SIZE=GET );

  11979  5 001406   000037 722000 1                  LXL2    ALL_TYPE
         5 001407   000000 236012 xsym               LDQ     VY_M_ALL,X2
         5 001410   000000 136012 xsym               SBLQ    VY_M_FREE,X2
         5 001411   001424 604000 5                  TMI     s:11983
         5 001412   000106 116000 1                  CMPQ    GET
         5 001413   001424 602000 5                  TNC     s:11983

  11980  5 001414   000000 236012 xsym               LDQ     VY_M_FREE,X2
PL6.E3A0      #001=VYO$OBJECT File=VYO$OBJECT.:E05TSI                            WED 07/30/97 08:58 Page:126  
         5 001415   000000 473412 xsym               LDP3    VY_M_BASE_PTR,X2
         5 001416   300000 634506                    EPPR4   0,QL,PR3
         5 001417   000015 454400 1                  STP4    START$

  11981  5 001420   000000 236012 xsym               LDQ     VY_M_FREE,X2
         5 001421   000106 036000 1                  ADLQ    GET
         5 001422   000000 756012 xsym               STQ     VY_M_FREE,X2

  11982  5 001423   001430 710000 5                  TRA     s:11985

  11983  5 001424   000126 630400 6                  EPPR0   86
         5 001425   000021 631400 xsym               EPPR1   B_VECTNIL+17
         5 001426   000000 701000 xent               TSX1    VYA$GET
         5 001427   000000 011000                    NOP     0

      583    11985    6                   IF REC_TYPE = 3 THEN DO;

  11985  5 001430   000036 235000 1                  LDA     REC_TYPE
         5 001431   000003 115007                    CMPA    3,DL
         5 001432   001444 601000 5                  TNZ     s:11991

      584    11986    6                       IF VY_CURR$ -> VY$NODE.L_START_A$(REC_TYPE) = ADDR(NIL) THEN

  11986  5 001433   000000 470400 xsym               LDP0    VY_CURR$
         5 001434   000030 236105                    LDQ     24,AL,PR0
         5 001435   000001 116000 xsym               CMPQ    B_VECTNIL+1
         5 001436   001442 601000 5                  TNZ     s:11989

      585    11987    6                           VY_CURR$ -> VY$NODE.L_START_A$(REC_TYPE) = START$;

  11987  5 001437   000015 236000 1                  LDQ     START$
         5 001440   000036 720000 1                  LXL0    REC_TYPE
         5 001441   000030 756110                    STQ     24,X0,PR0

      586    11988         /* Set start for this record type */
      587    11989    6                       VY_LAST_SC$ = START$;

PL6.E3A0      #001=VYO$OBJECT File=VYO$OBJECT.:E05TSI                            WED 07/30/97 08:58 Page:127  
  11989  5 001442   000015 236000 1                  LDQ     START$
         5 001443   000000 756000 xsym               STQ     VY_LAST_SC$

      588    11990    6                       END;

      589    11991    5                   CALL VYU$PREAD(

  11991  5 001444   200004 236100                    LDQ     @SOURCE,,AUTO
         5 001445   000144 235000 6                  LDA     100
         5 001446   200026 757100                    STAQ    @ER#+13,,AUTO
         5 001447   000142 237000 6                  LDAQ    98
         5 001450   200024 757100                    STAQ    @ER#+11,,AUTO
         5 001451   000140 237000 6                  LDAQ    96
         5 001452   200022 757100                    STAQ    @ER#+9,,AUTO
         5 001453   000136 237000 6                  LDAQ    94
         5 001454   200020 757100                    STAQ    @ER#+7,,AUTO
         5 001455   000072 237000 6                  LDAQ    58
         5 001456   200016 757100                    STAQ    @ER#+5,,AUTO
         5 001457   000132 237000 6                  LDAQ    90
         5 001460   200014 757100                    STAQ    @ER#+3,,AUTO
         5 001461   200014 630500                    EPPR0   @ER#+3,,AUTO
         5 001462   000131 631400 6                  EPPR1   89
         5 001463   000000 701000 xent               TSX1    VYU$PREAD
         5 001464   000000 011000                    NOP     0

      590    11992    5                      NPAGE,
      591    11993    5                      TSIZE_READ,
      592    11994    5                      0/*@OF*/,
      593    11995    5                      0/*@OF*/,
      594    11996    5                      REC_TYPE,
      595    11997    5                      START$,
      596    11998    5                      PAGE,
      597    11999    5                      TSIZE,
      598    12000    5                      ALL_TYPE,
      599    12001    5                      GET,
      600    12002    5                      VY_CURR$,
      601    12003    5                      SOURCE );
PL6.E3A0      #001=VYO$OBJECT File=VYO$OBJECT.:E05TSI                            WED 07/30/97 08:58 Page:128  
      602    12004    5                   ALL_A(REC_TYPE) = TSIZE_READ;

  12004  5 001465   000114 235000 1                  LDA     TSIZE_READ
         5 001466   000036 720000 1                  LXL0    REC_TYPE
         5 001467   000137 755010 1                  STA     ALL_A,X0

      603    12005
      604    12006    6                   IF TSIZE_READ > 0 THEN DO;

  12006  5 001470   000114 235000 1                  LDA     TSIZE_READ
         5 001471   001674 600000 5                  TZE     s:12056

      605    12007    6                       P$ = START$;

  12007  5 001472   000015 236000 1                  LDQ     START$
         5 001473   000003 756000 1                  STQ     P$

      606    12008    7                       IF REC_TYPE = 4 THEN DO;

  12008  5 001474   000036 235000 1                  LDA     REC_TYPE
         5 001475   000004 115007                    CMPA    4,DL
         5 001476   001537 601000 5                  TNZ     s:12021

      607    12009    7                           VY_ED_START$ = START$;

  12009  5 001477   000000 756000 xsym               STQ     VY_ED_START$

      608    12010    7                           VY_ED_STOP$ = PINCRW( START$, TSIZE_READ - SIZEW( VYD$TMPLT
             12010                                    ) );

  12010  5 001500   000114 236000 1                  LDQ     TSIZE_READ
         5 001501   000022 736000                    QLS     18
         5 001502   000002 136003                    SBLQ    2,DU
         5 001503   000015 036000 1                  ADLQ    START$
         5 001504   000000 756000 xsym               STQ     VY_ED_STOP$

      609    12011    8                           DO WHILE( P$ <= VY_ED_STOP$ AND ~ HAVE_PRIMARY );
PL6.E3A0      #001=VYO$OBJECT File=VYO$OBJECT.:E05TSI                            WED 07/30/97 08:58 Page:129  

  12011  5 001505   001530 710000 5                  TRA     s:12019

      610    12012    9                               IF P$ -> VYD$TMPLT.I.P ~= 0 THEN DO;

  12012  5 001506   000003 470400 1                  LDP0    P$
         5 001507   000001 236100                    LDQ     1,,PR0
         5 001510   400000 316007                    CANQ    -131072,DL
         5 001511   001525 600000 5                  TZE     s:12018

      611    12013    9                                   HAVE_PRIMARY = '1'B/*@TRUE_B*/;

  12013  5 001512   400000 236003                    LDQ     -131072,DU
         5 001513   000002 756000 1                  STQ     HAVE_PRIMARY

      612    12014    9                                   IF VY_O.MAP_ATTCH.REF = 1/*@YES*/

  12014  5 001514   000006 235000 xsym               LDA     VY_O+6
         5 001515   000001 115007                    CMPA    1,DL
         5 001516   001521 601000 5                  TNZ     s:12016

      613    12015    9                                   THEN VY_O.MAP_ATTCH.DEF = 1/*@YES*/;

  12015  5 001517   000001 235007                    LDA     1,DL
         5 001520   000005 755000 xsym               STA     VY_O+5

      614    12016    9                                   PRIMARY_NAME_DISP = P$ -> VYD$TMPLT.I.NAME_DISP;

  12016  5 001521   000001 236100                    LDQ     1,,PR0
         5 001522   000022 772000                    QRL     18
         5 001523   000134 756000 1                  STQ     PRIMARY_NAME_DISP

      615    12017    9                                   END;

  12017  5 001524   001530 710000 5                  TRA     s:12019

      616    12018    8                               ELSE P$ = PINCRW( P$, SIZEW( VYD$TMPLT ) );
PL6.E3A0      #001=VYO$OBJECT File=VYO$OBJECT.:E05TSI                            WED 07/30/97 08:58 Page:130  

  12018  5 001525   000003 236000 1                  LDQ     P$
         5 001526   000002 036003                    ADLQ    2,DU
         5 001527   000003 756000 1                  STQ     P$

      617    12019    8                               END;

  12019  5 001530   000000 236000 xsym               LDQ     VY_ED_STOP$
         5 001531   000003 116000 1                  CMPQ    P$
         5 001532   001537 602000 5                  TNC     s:12021
         5 001533   000002 236000 1                  LDQ     HAVE_PRIMARY
         5 001534   400000 376003                    ANQ     -131072,DU
         5 001535   400000 676003                    ERQ     -131072,DU
         5 001536   001506 601000 5                  TNZ     s:12012

      618    12020    7                           END;

      619    12021    7                      IF REC_TYPE >= 4 AND REC_TYPE <= 9 AND VY_O.MAP_A(REC_TYPE) ~= 0
             12021                                /*@NO*/ THEN DO;

  12021  5 001537   000036 235000 1                  LDA     REC_TYPE
         5 001540   000004 115007                    CMPA    4,DL
         5 001541   001674 602000 5                  TNC     s:12056
         5 001542   000012 115007                    CMPA    10,DL
         5 001543   001674 603000 5                  TRC     s:12056
         5 001544   000004 235005 xsym               LDA     VY_O+4,AL
         5 001545   001674 600000 5                  TZE     s:12056

      620    12022    8                           IF ~ HAVE_PRIMARY THEN DO;

  12022  5 001546   000002 236000 1                  LDQ     HAVE_PRIMARY
         5 001547   400000 376003                    ANQ     -131072,DU
         5 001550   400000 676003                    ERQ     -131072,DU
         5 001551   001633 600000 5                  TZE     s:12040

      621    12023    8                               VY_O.MAP_ATTCH.DEF = 1/*@YES*/;

PL6.E3A0      #001=VYO$OBJECT File=VYO$OBJECT.:E05TSI                            WED 07/30/97 08:58 Page:131  
  12023  5 001552   000001 235007                    LDA     1,DL
         5 001553   000005 755000 xsym               STA     VY_O+5

      622    12024    8                               NEW_VALUE = ( VY_OK.OUNAME.COUNT + 4/*@CHAR_WORD*/+1) /
             12024                                        4/*@CHAR_WORD*/;

  12024  5 001554   000013 236000 xsym               LDQ     VY_OK+11
         5 001555   000033 772000                    QRL     27
         5 001556   000005 036007                    ADLQ    5,DL
         5 001557   000002 772000                    QRL     2
         5 001560   000152 756000 1                  STQ     NEW_VALUE

      623    12025                                    %ALLOCATE( PTR$=P$, TYPE=@DN_DS_1,SIZE=NEW_VALUE);

  12026  5 001561   000004 236000 xsym               LDQ     VY_M_ALL+4
         5 001562   000004 136000 xsym               SBLQ    VY_M_FREE+4
         5 001563   000152 116000 1                  CMPQ    NEW_VALUE
         5 001564   001575 604000 5                  TMI     s:12030

  12027  5 001565   000004 236000 xsym               LDQ     VY_M_FREE+4
         5 001566   000022 736000                    QLS     18
         5 001567   000004 036000 xsym               ADLQ    VY_M_BASE_PTR+4
         5 001570   000003 756000 1                  STQ     P$

  12028  5 001571   000004 236000 xsym               LDQ     VY_M_FREE+4
         5 001572   000152 036000 1                  ADLQ    NEW_VALUE
         5 001573   000004 756000 xsym               STQ     VY_M_FREE+4

  12029  5 001574   001601 710000 5                  TRA     s:12032

  12030  5 001575   000175 630400 6                  EPPR0   125
         5 001576   000021 631400 xsym               EPPR1   B_VECTNIL+17
         5 001577   000000 701000 xent               TSX1    VYA$GET
         5 001600   000000 011000                    NOP     0

      624    12032    8                               P$ -> B$DNAME.COUNT = VY_OK.OUNAME.COUNT;

PL6.E3A0      #001=VYO$OBJECT File=VYO$OBJECT.:E05TSI                            WED 07/30/97 08:58 Page:132  
  12032  5 001601   000013 236000 xsym               LDQ     VY_OK+11
         5 001602   000033 772000                    QRL     27
         5 001603   000000 620006                    EAX0    0,QL
         5 001604   000003 470400 1                  LDP0    P$
         5 001605   000000 740100                    STX0    0,,PR0

      625    12033    8                               P$ -> B$DNAME.TEXT = VY_OK.OUNAME.CHARS;

  12033  5 001606   000003 470400 1                  LDP0    P$
         5 001607   000000 220100                    LDX0    0,,PR0
         5 001610   040140 100400                    MLR     fill='040'O
         5 001611   000013 200777 xsym               ADSC9   VY_OK+11                 cn=1,n=511
         5 001612   000000 400010                    ADSC9   0,,PR0                   cn=2,n=*X0

      626    12034    8                               IF VY_CURR$ -> VY$NODE.L_START.DN$ = ADDR(NIL)

  12034  5 001613   000000 470400 xsym               LDP0    VY_CURR$
         5 001614   000031 236100                    LDQ     25,,PR0
         5 001615   000001 116000 xsym               CMPQ    B_VECTNIL+1
         5 001616   001621 601000 5                  TNZ     s:12036

      627    12035    8                               THEN VY_CURR$ -> VY$NODE.L_START.DN$ = P$;

  12035  5 001617   000003 236000 1                  LDQ     P$
         5 001620   000031 756100                    STQ     25,,PR0

      628    12036    8                               PRIMARY_NAME_DISP = VY_CURR$ -> VY$NODE.L_SIZE.DN;

  12036  5 001621   000055 235100                    LDA     45,,PR0
         5 001622   000134 755000 1                  STA     PRIMARY_NAME_DISP

      629    12037    8                               VY_CURR$ -> VY$NODE.L_SIZE.DN = VY_CURR$ -> VY$NODE.
             12037                                        L_SIZE.DN + NEW_VALUE;

  12037  5 001623   000055 236100                    LDQ     45,,PR0
         5 001624   000152 036000 1                  ADLQ    NEW_VALUE
         5 001625   000055 756100                    STQ     45,,PR0
PL6.E3A0      #001=VYO$OBJECT File=VYO$OBJECT.:E05TSI                            WED 07/30/97 08:58 Page:133  

      630    12038    8                              VY_CURR$ -> VY$NODE.L_STOP.DN$ = PINCRW( P$, NEW_VALUE-1
             12038                                        );

  12038  5 001626   000152 236000 1                  LDQ     NEW_VALUE
         5 001627   000022 736000                    QLS     18
         5 001630   000001 136003                    SBLQ    1,DU
         5 001631   000003 036000 1                  ADLQ    P$
         5 001632   000043 756100                    STQ     35,,PR0

      631    12039    8                               END;

      632    12040    7                           P$ = START$;

  12040  5 001633   000015 236000 1                  LDQ     START$
         5 001634   000003 756000 1                  STQ     P$

      633    12041    8                           IF MOD( REC_TYPE, 2 ) = 0 THEN DO;

  12041  5 001635   000036 236000 1                  LDQ     REC_TYPE
         5 001636   000001 376007                    ANQ     1,DL
         5 001637   001645 601000 5                  TNZ     s:12046

      634    12042    8                               X = 3;

  12042  5 001640   000003 235007                    LDA     3,DL
         5 001641   000133 755000 1                  STA     X

      635    12043    8                               INC = SIZEW( VYD$TMPLT );

  12043  5 001642   000002 236007                    LDQ     2,DL
         5 001643   000135 756000 1                  STQ     INC

      636    12044    8                               END;

  12044  5 001644   001650 710000 5                  TRA     s:12049

PL6.E3A0      #001=VYO$OBJECT File=VYO$OBJECT.:E05TSI                            WED 07/30/97 08:58 Page:134  
      637    12045    8                           ELSE DO;

      638    12046    8                               X = 1;

  12046  5 001645   000001 235007                    LDA     1,DL
         5 001646   000133 755000 1                  STA     X

      639    12047    8                               INC = SIZEW( VYR$TMPLT );

  12047  5 001647   000135 755000 1                  STA     INC

      640    12048    8                               END;

      641    12049    7                           Q$ = PINCRW( START$, TSIZE_READ - INC );

  12049  5 001650   000114 236000 1                  LDQ     TSIZE_READ
         5 001651   000135 136000 1                  SBLQ    INC
         5 001652   000022 736000                    QLS     18
         5 001653   000015 036000 1                  ADLQ    START$
         5 001654   000004 756000 1                  STQ     Q$

      642    12050    8                           DO WHILE( P$ <= Q$ );

  12050  5 001655   000003 116000 1                  CMPQ    P$
         5 001656   001674 602000 5                  TNC     s:12056

      643    12051    8                               P$ -> VYD$TMPLT.A_SBIN(X) = PRIMARY_NAME_DISP;

  12051  5 001657   000133 235000 1                  LDA     X
         5 001660   000001 735000                    ALS     1
         5 001661   000003 470400 1                  LDP0    P$
         5 001662   000105 101400                    MRL     fill='000'O
         5 001663   000134 000004 1                  ADSC9   PRIMARY_NAME_DISP        cn=0,n=4
         5 001664   000000 000002                    ADSC9   0,A,PR0                  cn=0,n=2

      644    12052    8                               P$ = PINCRW( P$, INC );

PL6.E3A0      #001=VYO$OBJECT File=VYO$OBJECT.:E05TSI                            WED 07/30/97 08:58 Page:135  
  12052  5 001665   000135 236000 1                  LDQ     INC
         5 001666   000022 736000                    QLS     18
         5 001667   000003 036000 1                  ADLQ    P$
         5 001670   000003 756000 1                  STQ     P$

      645    12053    8                               END;

  12053  5 001671   000004 116000 1                  CMPQ    Q$
         5 001672   001657 602000 5                  TNC     s:12051
         5 001673   001657 600000 5                  TZE     s:12051

      646    12054    7                           END;

      647    12055    6                       END;

      648    12056    5                   IF TSIZE_READ < GET THEN CALL VYF$FREE( ALL_TYPE, GET - TSIZE_READ,
             12056                            1 );

  12056  5 001674   000114 236000 1                  LDQ     TSIZE_READ
         5 001675   000106 116000 1                  CMPQ    GET
         5 001676   001714 603000 5                  TRC     s:12059

  12056  5 001677   000106 236000 1                  LDQ     GET
         5 001700   000114 136000 1                  SBLQ    TSIZE_READ
         5 001701   200014 756100                    STQ     @ER#+3,,AUTO
         5 001702   000013 236000 6                  LDQ     11
         5 001703   200017 756100                    STQ     @ER#+6,,AUTO
         5 001704   200014 630500                    EPPR0   @ER#+3,,AUTO
         5 001705   200016 450500                    STP0    @ER#+5,,AUTO
         5 001706   000127 236000 6                  LDQ     87
         5 001707   200015 756100                    STQ     @ER#+4,,AUTO
         5 001710   200015 630500                    EPPR0   @ER#+4,,AUTO
         5 001711   000021 631400 xsym               EPPR1   B_VECTNIL+17
         5 001712   000000 701000 xent               TSX1    VYF$FREE
         5 001713   000000 011000                    NOP     0

      649    12057    5                   END;
PL6.E3A0      #001=VYO$OBJECT File=VYO$OBJECT.:E05TSI                            WED 07/30/97 08:58 Page:136  

      650    12058    4               END;

      651    12059    3           END;

  12059  5 001714   000032 235000 1                  LDA     I
         5 001715   000001 035007                    ADLA    1,DL
         5 001716   000032 755000 1                  STA     I
         5 001717   000132 236000 1                  LDQ     HB
         5 001720   000032 116000 1                  CMPQ    I
         5 001721   001273 603000 5                  TRC     s:11921

      652    12060    2   END READ_WRITE_RECORDS;

  12060  5 001722   200010 221300                    LDX1  ! VERS_NUM+2,,AUTO
         5 001723   000001 702211                    TSX2  ! 1,X1

      653    12061        %EJECT;
PL6.E3A0      #001=VYO$OBJECT File=VYO$OBJECT.:E05TSI                            WED 07/30/97 08:58 Page:137  
      654    12062        /*I*  NAME:       READ_WRITE_REMAINING_RECORDS
      655    12063              PURPOSE:    Read all records not read by READ_WRITE_RECORDS from
      656    12064                          the object unit and writes them to a library/object file.
      657    12065              INTERFACE:  VYA$GET
      658    12066                          VYF$FREE
      659    12067                          VYK$KEY
      660    12068                          VYI$READ
      661    12069                          VYI$WRITE
      662    12070                          VYE$ERROR
      663    12071                          READ_WRITE_DEBUG_RECORDS
      664    12072                          READ_WRITE_PLOVER_RECORDS
      665    12073                          M$PRECORD
      666    12074              DESCRIPTION:
      667    12075                  Reads all type 10 records from the object unit and writes them
      668    12076                  to a library/object file.  Calls READ_WRITE_DEBUG_RECORDS to read and
      669    12077                  write all debug records.  Calls READ_WRITE_PLOVER_RECORDS to
      670    12078                  to read and write all PLOVER records.  Finally, it writes the
      671    12079                  head record to the target library/object file.
      672    12080        */
      673    12081
      674    12082
      675    12083    1   READ_WRITE_REMAINING_RECORDS: PROC;

  12083  5 001724   200010 741300       READ_WRITE_* STX1  ! VERS_NUM+2,,AUTO

      676    12084
      677    12085
      678    12086
      679    12087         /* Now do a partial determination of the receiving buffer size */
      680    12088    2       VY_REC_BUF_SIZE = VY_OU_HEAD.LB_SIZE;

  12088  5 001725   000003 236000 xsym               LDQ     VY_OU_HEAD+3
         5 001726   777777 376007                    ANQ     -1,DL
         5 001727   000000 756000 xsym               STQ     VY_REC_BUF_SIZE

      681    12089    2       IF VY_OU_HEAD.PR_SIZE > VY_REC_BUF_SIZE THEN VY_REC_BUF_SIZE = VY_OU_HEAD.
             12089                PR_SIZE;
PL6.E3A0      #001=VYO$OBJECT File=VYO$OBJECT.:E05TSI                            WED 07/30/97 08:58 Page:138  

  12089  5 001730   000004 236000 xsym               LDQ     VY_OU_HEAD+4
         5 001731   000022 772000                    QRL     18
         5 001732   000000 116000 xsym               CMPQ    VY_REC_BUF_SIZE
         5 001733   001736 602000 5                  TNC     s:12090
         5 001734   001736 600000 5                  TZE     s:12090

  12089  5 001735   000000 756000 xsym               STQ     VY_REC_BUF_SIZE

      682    12090    2       IF VY_OU_HEAD.RL_SIZE > VY_REC_BUF_SIZE THEN VY_REC_BUF_SIZE = VY_OU_HEAD.
             12090                RL_SIZE;

  12090  5 001736   000004 236000 xsym               LDQ     VY_OU_HEAD+4
         5 001737   777777 376007                    ANQ     -1,DL
         5 001740   000000 116000 xsym               CMPQ    VY_REC_BUF_SIZE
         5 001741   001744 602000 5                  TNC     s:12095
         5 001742   001744 600000 5                  TZE     s:12095

  12090  5 001743   000000 756000 xsym               STQ     VY_REC_BUF_SIZE

      683    12091            %ALLOCATE(
      684    12092            PTR$=VY_REC_BUF_START$,
      685    12093            TYPE=@PR_DS_1,
      686    12094            SIZE=VY_REC_BUF_SIZE);

  12095  5 001744   000000 236000 xsym               LDQ     VY_M_ALL
         5 001745   000000 136000 xsym               SBLQ    VY_M_FREE
         5 001746   001761 604000 5                  TMI     s:12099
         5 001747   000000 116000 xsym               CMPQ    VY_REC_BUF_SIZE
         5 001750   001761 602000 5                  TNC     s:12099

  12096  5 001751   000000 236000 xsym               LDQ     VY_M_FREE
         5 001752   000022 736000                    QLS     18
         5 001753   000000 036000 xsym               ADLQ    VY_M_BASE_PTR
         5 001754   000000 756000 xsym               STQ     VY_REC_BUF_START$

  12097  5 001755   000000 236000 xsym               LDQ     VY_M_FREE
PL6.E3A0      #001=VYO$OBJECT File=VYO$OBJECT.:E05TSI                            WED 07/30/97 08:58 Page:139  
         5 001756   000000 036000 xsym               ADLQ    VY_REC_BUF_SIZE
         5 001757   000000 756000 xsym               STQ     VY_M_FREE

  12098  5 001760   001765 710000 5                  TRA     s:12103

  12099  5 001761   000200 630400 6                  EPPR0   128
         5 001762   000021 631400 xsym               EPPR1   B_VECTNIL+17
         5 001763   000000 701000 xent               TSX1    VYA$GET
         5 001764   000000 011000                    NOP     0

      687    12101
      688    12102
      689    12103    2       TOTAL(11) = VY_OU_HEAD.LB_SIZE;

  12103  5 001765   000003 236000 xsym               LDQ     VY_OU_HEAD+3
         5 001766   777777 376007                    ANQ     -1,DL
         5 001767   000073 756000 1                  STQ     TOTAL+11

      690    12104    2       PAGE_A(11) = TOTAL(11);

  12104  5 001770   000053 756000 1                  STQ     PAGE_A+11

      691    12105    2       FIRST = '1'B/*@TRUE_B*/;

  12105  5 001771   400000 236003                    LDQ     -131072,DU
         5 001772   000000 756000 1                  STQ     FIRST

      692    12106    2   FIRST_READ:
      693    12107    2       CALL VYK$KEY( 0/*@OF*/, 10, 0, 0 );

  12107  5 001773   000203 630400 6     FIRST_READ   EPPR0   131
         5 001774   000022 631400 xsym               EPPR1   B_VECTNIL+18
         5 001775   000000 701000 xent               TSX1    VYK$KEY
         5 001776   000000 011000                    NOP     0

      694    12108    2       CALL VYI$READ( 0/*@OF*/,

PL6.E3A0      #001=VYO$OBJECT File=VYO$OBJECT.:E05TSI                            WED 07/30/97 08:58 Page:140  
  12108  5 001777   000207 630400 6                  EPPR0   135
         5 002000   000023 631400 xsym               EPPR1   B_VECTNIL+19
         5 002001   000000 701000 xent               TSX1    VYI$READ
         5 002002   002005 702000 5                  TSX2    IO_ERROR_FIRST

      695    12109    2          VY_REC_BUF_START$,
      696    12110    2          VY_REC_BUF_SIZE,
      697    12111    2          0/*@OF*/, '0'B ) ALTRET(IO_ERROR_FIRST);
      698    12112    2       FIRST = '0'B/*@FALSE_B*/;

  12112  5 002003   000000 450000 1                  STZ     FIRST

      699    12113    2       GOTO READ_RECORD;

  12113  5 002004   002103 710000 5                  TRA     READ_RECORD

      700    12114    2   IO_ERROR_FIRST:
      701    12115    3       DO CASE( VY_IO_STATUS );

  12115  5 002005   000000 235000 xsym  IO_ERROR_FI* LDA     VY_IO_STATUS
         5 002006   000003 115007                    CMPA    3,DL
         5 002007   002011 602005 5                  TNC     IO_ERROR_FIRST+4,AL
         5 002010   002060 710000 5                  TRA     NEXT_RECORD
         5 002011   002014 710000 5                  TRA     s:12126
         5 002012   002021 710000 5                  TRA     s:12129
         5 002013   002022 710000 5                  TRA     IO_ERROR_LD

      702    12116    3       CASE( 0/*@IO_EOF*/ ); /* Error - empty */

      703    12117        /*E*  ERROR: VYO-E$FIMAGE_IO_EOF_VY-0
      704    12118              MESSAGE: No program or relocation records; End of file encountered.
      705    12119              DESCRIPTION: Self-explanatory.
      706    12120        */
      707    12121                %SCREAM(
      708    12122                ERR#=%E$FIMAGE_IO_EOF_VY,
      709    12123                MID="'O'",
      710    12124                LEVEL=%@E$F_VY,
PL6.E3A0      #001=VYO$OBJECT File=VYO$OBJECT.:E05TSI                            WED 07/30/97 08:58 Page:141  
      711    12125                AUX=%@E$OUOF_VY);

  12126  5 002014   000215 630400 6                  EPPR0   141
         5 002015   000022 631400 xsym               EPPR1   B_VECTNIL+18
         5 002016   000000 701000 xent               TSX1    VYE$ERROR
         5 002017   000000 011000                    NOP     0
         5 002020   002060 710000 5                  TRA     NEXT_RECORD

      712    12128    3       CASE( 1/*@IO_NOKEY*/ );

      713    12129    3           GOTO NEXT_RECORD;

  12129  5 002021   002060 710000 5                  TRA     NEXT_RECORD

      714    12130    3       CASE( 2/*@IO_LD*/ );

      715    12131    3   IO_ERROR_LD:
      716    12132        /*E*  ERROR: VYO-E$FIMAGE_IO_LD_VY-0
      717    12133        MESSAGE: Object language error. Lost data condition for program/relocation.
      718    12134                 Attempting recovery.
      719    12135              DESCRIPTION: Self-explanatory.
      720    12136        */
      721    12137                %SCREAM(
      722    12138                ERR#=%E$FIMAGE_IO_LD_VY,
      723    12139                MID="'O'",
      724    12140                LEVEL=%@E$S_VY,
      725    12141                AUX=%@E$OUOF_VY);

  12142  5 002022   000222 630400 6     IO_ERROR_LD  EPPR0   146
         5 002023   000022 631400 xsym               EPPR1   B_VECTNIL+18
         5 002024   000000 701000 xent               TSX1    VYE$ERROR
         5 002025   000000 011000                    NOP     0

      726    12144                %ALLOCATE(
      727    12145                PTR$=Q$,
      728    12146                TYPE=@PR_DS_1,
      729    12147                SIZE=VY_REC_BUF_SIZE);
PL6.E3A0      #001=VYO$OBJECT File=VYO$OBJECT.:E05TSI                            WED 07/30/97 08:58 Page:142  

  12148  5 002026   000000 236000 xsym               LDQ     VY_M_ALL
         5 002027   000000 136000 xsym               SBLQ    VY_M_FREE
         5 002030   002043 604000 5                  TMI     s:12152
         5 002031   000000 116000 xsym               CMPQ    VY_REC_BUF_SIZE
         5 002032   002043 602000 5                  TNC     s:12152

  12149  5 002033   000000 236000 xsym               LDQ     VY_M_FREE
         5 002034   000022 736000                    QLS     18
         5 002035   000000 036000 xsym               ADLQ    VY_M_BASE_PTR
         5 002036   000004 756000 1                  STQ     Q$

  12150  5 002037   000000 236000 xsym               LDQ     VY_M_FREE
         5 002040   000000 036000 xsym               ADLQ    VY_REC_BUF_SIZE
         5 002041   000000 756000 xsym               STQ     VY_M_FREE

  12151  5 002042   002047 710000 5                  TRA     s:12154

  12152  5 002043   000226 630400 6                  EPPR0   150
         5 002044   000021 631400 xsym               EPPR1   B_VECTNIL+17
         5 002045   000000 701000 xent               TSX1    VYA$GET
         5 002046   000000 011000                    NOP     0

      730    12154    3           VY_REC_BUF_SIZE = VY_REC_BUF_SIZE + VY_REC_BUF_SIZE;

  12154  5 002047   000000 236000 xsym               LDQ     VY_REC_BUF_SIZE
         5 002050   000000 036000 xsym               ADLQ    VY_REC_BUF_SIZE
         5 002051   000000 756000 xsym               STQ     VY_REC_BUF_SIZE

      731    12155    3           IF FIRST THEN GOTO FIRST_READ;

  12155  5 002052   000000 234000 1                  SZN     FIRST
         5 002053   001773 604000 5                  TMI     FIRST_READ

      732    12156    3           CALL M$PRECORD( FPT_PRECORD );

  12156  5 002054   000004 630400 2                  EPPR0   FPT_PRECORD
PL6.E3A0      #001=VYO$OBJECT File=VYO$OBJECT.:E05TSI                            WED 07/30/97 08:58 Page:143  
         5 002055   040003 713400                    CLIMB   16387
         5 002056   401000 401760                    pmme    nvectors=3

      733    12157    3           GOTO NEXT_RECORD;

  12157  5 002057   002060 710000 5                  TRA     NEXT_RECORD

      734    12158    3           END; /* Do case( VY_IO_STATUS ); */

      735    12159
      736    12160        %EJECT;
PL6.E3A0      #001=VYO$OBJECT File=VYO$OBJECT.:E05TSI                            WED 07/30/97 08:58 Page:144  
      737    12161    2   NEXT_RECORD:
      738    12162    2       CALL VYI$READ( 0/*@OF*/,

  12162  5 002060   000231 630400 6     NEXT_RECORD  EPPR0   153
         5 002061   000023 631400 xsym               EPPR1   B_VECTNIL+19
         5 002062   000000 701000 xent               TSX1    VYI$READ
         5 002063   002065 702000 5                  TSX2    IO_ERROR_SUBSEQUENT

      739    12163    2          VY_REC_BUF_START$,
      740    12164    2          VY_REC_BUF_SIZE,
      741    12165    2          4/*@NO_KEY*/, '0'B ) ALTRET(IO_ERROR_SUBSEQUENT);
      742    12166    3       DO WHILE( '0'B );

  12166  5 002064   002103 710000 5                  TRA     READ_RECORD

      743    12167    3   IO_ERROR_SUBSEQUENT:
      744    12168    4           DO CASE( VY_IO_STATUS );

  12168  5 002065   000000 235000 xsym  IO_ERROR_SU* LDA     VY_IO_STATUS
         5 002066   000003 115007                    CMPA    3,DL
         5 002067   002071 602005 5                  TNC     IO_ERROR_SUBSEQUENT+4,AL
         5 002070   002103 710000 5                  TRA     READ_RECORD
         5 002071   002074 710000 5                  TRA     s:12170
         5 002072   002075 710000 5                  TRA     s:12182
         5 002073   002102 710000 5                  TRA     s:12185

      745    12169    4           CASE( 0/*@IO_EOF*/ );

      746    12170    4               GOTO POST;

  12170  5 002074   002220 710000 5                  TRA     POST

      747    12171    4           CASE( 1/*@IO_NOKEY*/ );

      748    12172        /*E*  ERROR: VYO-E$INTERNAL_FIMAGE_NOKEY_VY-0
      749    12173        MESSAGE: LEMUR internal error. No such key error in image processing on
      750    12174                 the I-th read; I>1.
PL6.E3A0      #001=VYO$OBJECT File=VYO$OBJECT.:E05TSI                            WED 07/30/97 08:58 Page:145  
      751    12175              DESCRIPTION: Self-explanatory.
      752    12176        */
      753    12177                    %SCREAM(
      754    12178                    ERR#=%E$INTERNAL_FIMAGE_NOKEY_VY,
      755    12179                    LEVEL=%@E$F_VY,
      756    12180                    MID="'O'",
      757    12181                    AUX=%@E$OUOF_VY);

  12182  5 002075   000237 630400 6                  EPPR0   159
         5 002076   000022 631400 xsym               EPPR1   B_VECTNIL+18
         5 002077   000000 701000 xent               TSX1    VYE$ERROR
         5 002100   000000 011000                    NOP     0
         5 002101   002103 710000 5                  TRA     READ_RECORD

      758    12184    4           CASE( 2/*@IO_LD*/ );

      759    12185    4               GOTO IO_ERROR_LD;

  12185  5 002102   002022 710000 5                  TRA     IO_ERROR_LD

      760    12186    4               END; /* Do case( VY_IO_STATUS ); */

      761    12187    3           END; /* Do never */

      762    12188        %EJECT;
PL6.E3A0      #001=VYO$OBJECT File=VYO$OBJECT.:E05TSI                            WED 07/30/97 08:58 Page:146  
      763    12189    2   READ_RECORD:
      764    12190    2       IF VY_O_KEY_BUF.FORM2.UTS ~= VY_OU_HEAD.UTS THEN GOTO POST;

  12190  5 002103   000000 235000 xsym  READ_RECORD  LDA     VY_O_KEY_BUF
         5 002104   000001 236000 xsym               LDQ     VY_O_KEY_BUF+1
         5 002105   000022 773000                    LRL     18
         5 002106   000000 116000 xsym               CMPQ    VY_OU_HEAD
         5 002107   002220 601000 5                  TNZ     POST

      765    12191    2       P$ = VY_REC_BUF_START$;

  12191  5 002110   000000 236000 xsym               LDQ     VY_REC_BUF_START$
         5 002111   000003 756000 1                  STQ     P$

      766    12192    2       RTYPE = VY_OK.KRTYPE;

  12192  5 002112   000002 235000 xsym               LDA     VY_OK+2
         5 002113   000105 755000 1                  STA     RTYPE

      767    12193    2       PAGE# = VY_OK.KPAGE#;

  12193  5 002114   000003 235000 xsym               LDA     VY_OK+3
         5 002115   000136 755000 1                  STA     PAGE#

      768    12194    2       IO_SIZEW = VY_IO_SIZEW;

  12194  5 002116   000000 235000 xsym               LDA     VY_IO_SIZEW
         5 002117   000107 755000 1                  STA     IO_SIZEW

      769    12195    2       SECT# = VY_OK.KSECT#;

  12195  5 002120   000007 235000 xsym               LDA     VY_OK+7
         5 002121   000125 755000 1                  STA     SECT#

      770    12196    3       IF VY_IO_SIZEW = 0 THEN DO;

  12196  5 002122   000000 235000 xsym               LDA     VY_IO_SIZEW
PL6.E3A0      #001=VYO$OBJECT File=VYO$OBJECT.:E05TSI                            WED 07/30/97 08:58 Page:147  
         5 002123   002166 601000 5                  TNZ     s:12243

      771    12197        /*E*   ERROR: VYO-E$FIMAGE_ZERO_REC_SIZE_VY-0
      772    12198              MESSAGE: Object language error: 0 record size.
      773    12199              DESCRIPTION: Self-explanatory.
      774    12200        */
      775    12201    3           ERR_LEVEL = -3;

  12201  5 002124   000003 335007                    LCA     3,DL
         5 002125   000110 755000 1                  STA     ERR_LEVEL

      776    12202                %SCREAM(
      777    12203                ERR#=%E$FIMAGE_ZERO_REC_SIZE_VY,
      778    12204                LEVEL=ERR_LEVEL,
      779    12205                MID="'O'");

  12206  5 002126   000244 630400 6                  EPPR0   164
         5 002127   000022 631400 xsym               EPPR1   B_VECTNIL+18
         5 002130   000000 701000 xent               TSX1    VYE$ERROR
         5 002131   000000 011000                    NOP     0

      780    12208    3   TELL_PAGE_TYPE:
      781    12209        /*E*  ERROR: VYO-E$FIMAGE_TYPE_PAGE_VY-0
      782    12210              MESSAGE: In record type 10 (sub-type %U1). Key offset = %U2 (octal).
      783    12211                       Word displacement into record = %U3 (octal).
      784    12212              DESCRIPTION: Self-explanatory.
      785    12213        */
      786    12214    3           ERR_WORD_DISP = POFFW( P$, VY_REC_BUF_START$ );

  12214  5 002132   000000 235000 xsym  TELL_PAGE_T* LDA     VY_REC_BUF_START$
         5 002133   000022 771000                    ARL     18
         5 002134   200014 755100                    STA     @ER#+3,,AUTO
         5 002135   000003 236000 1                  LDQ     P$
         5 002136   000022 772000                    QRL     18
         5 002137   200014 136100                    SBLQ    @ER#+3,,AUTO
         5 002140   000153 756000 1                  STQ     ERR_WORD_DISP

PL6.E3A0      #001=VYO$OBJECT File=VYO$OBJECT.:E05TSI                            WED 07/30/97 08:58 Page:148  
      787    12215    3           IF ERR_LEVEL < 0 THEN ERR_LEVEL = - ERR_LEVEL;

  12215  5 002141   000110 235000 1                  LDA     ERR_LEVEL
         5 002142   002145 605000 5                  TPL     s:12223

  12215  5 002143   000000 531000                    NEG     0
         5 002144   000110 755000 1                  STA     ERR_LEVEL

      788    12216                %NUMBER( NUM1="VY_OK.KSTYPE", NUM2="VY_OK.KOFSET", BASE2=8,
      789    12217                NUM3=ERR_WORD_DISP, BASE3=8 );

  12223  5 002145   000250 630400 6                  EPPR0   168
         5 002146   000023 631400 xsym               EPPR1   B_VECTNIL+19
         5 002147   000000 701000 xent               TSX1    VYD$B2C
         5 002150   000000 011000                    NOP     0

  12227  5 002151   000255 630400 6                  EPPR0   173
         5 002152   000023 631400 xsym               EPPR1   B_VECTNIL+19
         5 002153   000000 701000 xent               TSX1    VYD$B2C
         5 002154   000000 011000                    NOP     0

  12231  5 002155   000263 630400 6                  EPPR0   179
         5 002156   000023 631400 xsym               EPPR1   B_VECTNIL+19
         5 002157   000000 701000 xent               TSX1    VYD$B2C
         5 002160   000000 011000                    NOP     0

      790    12234                %SCREAM(
      791    12235                ERR#=%E$FIMAGE_TYPE_PAGE_VY,
      792    12236                MID="'O'",
      793    12237                AUX=%@E$OUOF_VY,
      794    12238                LEVEL=ERR_LEVEL);

  12239  5 002161   000271 630400 6                  EPPR0   185
         5 002162   000022 631400 xsym               EPPR1   B_VECTNIL+18
         5 002163   000000 701000 xent               TSX1    VYE$ERROR
         5 002164   000000 011000                    NOP     0

PL6.E3A0      #001=VYO$OBJECT File=VYO$OBJECT.:E05TSI                            WED 07/30/97 08:58 Page:149  
      795    12241    3           GOTO NEXT_RECORD;

  12241  5 002165   002060 710000 5                  TRA     NEXT_RECORD

      796    12242    3           END;
      797    12243    3       IF RTYPE = 10 THEN DO;

  12243  5 002166   000105 235000 1                  LDA     RTYPE
         5 002167   000012 115007                    CMPA    10,DL
         5 002170   002204 601000 5                  TNZ     s:12250

      798    12244    3           VY_OL_KEY_BUF = VY_O_KEY_BUF;

  12244  5 002171   000000 100400                    MLR     fill='000'O
         5 002172   000000 001001 xsym               ADSC9   VY_O_KEY_BUF             cn=0,n=513
         5 002173   000000 001001 xsym               ADSC9   VY_OL_KEY_BUF            cn=0,n=513

      799    12245    3           VY_OL_KEY_BUF.FORM1.UTS = VY_OU_HEAD.UTS;

  12245  5 002174   000000 100400                    MLR     fill='000'O
         5 002175   000000 000004 xsym               ADSC9   VY_OU_HEAD               cn=0,n=4
         5 002176   000000 400004 xsym               ADSC9   VY_OL_KEY_BUF            cn=2,n=4

      800    12246    3           CALL VYI$WRITE( 1/*@RF*/, VY_REC_BUF_START$, VY_IO_SIZEW, 3/*@NEW_KEY*/ );

  12246  5 002177   000275 630400 6                  EPPR0   189
         5 002200   000022 631400 xsym               EPPR1   B_VECTNIL+18
         5 002201   000000 701000 xent               TSX1    VYI$WRITE
         5 002202   000000 011000                    NOP     0

      801    12247    3           GOTO NEXT_RECORD;

  12247  5 002203   002060 710000 5                  TRA     NEXT_RECORD

      802    12248    3           END;
      803    12249    2       ELSE
      804    12250    3           IF RTYPE >= 11 AND RTYPE <= 15 THEN DO;
PL6.E3A0      #001=VYO$OBJECT File=VYO$OBJECT.:E05TSI                            WED 07/30/97 08:58 Page:150  

  12250  5 002204   000013 115007                    CMPA    11,DL
         5 002205   002213 602000 5                  TNC     s:12264
         5 002206   000020 115007                    CMPA    16,DL
         5 002207   002213 603000 5                  TRC     s:12264

      805    12251         /* In debug record range */
      806    12252    3               CALL READ_WRITE_DEBUG_RECORDS;

  12252  5 002210   002337 701000 5                  TSX1    READ_WRITE_DEBUG_RECORDS
         5 002211   000000 011000                    NOP     0

      807    12253    3               END;

  12253  5 002212   002220 710000 5                  TRA     POST

      808    12254    3           ELSE DO; /* Scream bloody murder */

      809    12255        /*E*  ERROR: VYO-E$FIMAGE_UNKNOWN_REC_VY-0
      810    12256              MESSAGE: Object language error: Unknown record type.
      811    12257              DESCRIPTION: Self-explanatory.
      812    12258        */
      813    12259                    %SCREAM(
      814    12260                    ERR#=%E$FIMAGE_UNKNOWN_REC_VY,
      815    12261                    LEVEL=%@E$S_VY,
      816    12262                    MID="'O'",
      817    12263                    AUX=%@E$OUOF_VY);

  12264  5 002213   000302 630400 6                  EPPR0   194
         5 002214   000022 631400 xsym               EPPR1   B_VECTNIL+18
         5 002215   000000 701000 xent               TSX1    VYE$ERROR
         5 002216   000000 011000                    NOP     0

      818    12266    3               GOTO NEXT_RECORD;

  12266  5 002217   002060 710000 5                  TRA     NEXT_RECORD

PL6.E3A0      #001=VYO$OBJECT File=VYO$OBJECT.:E05TSI                            WED 07/30/97 08:58 Page:151  
      819    12267    3               END;
      820    12268
      821    12269        %EJECT;
PL6.E3A0      #001=VYO$OBJECT File=VYO$OBJECT.:E05TSI                            WED 07/30/97 08:58 Page:152  
      822    12270    2   POST:
      823    12271    2       CALL VYF$FREE( 0/*@PR_DS_1*/, VY_REC_BUF_SIZE, 0 );

  12271  5 002220   000201 630400 6     POST         EPPR0   129
         5 002221   000021 631400 xsym               EPPR1   B_VECTNIL+17
         5 002222   000000 701000 xent               TSX1    VYF$FREE
         5 002223   000000 011000                    NOP     0

      824    12272
      825    12273         /* Read/write plover records */
      826    12274
      827    12275    2       CALL READ_WRITE_PLOVER_RECORDS;

  12275  5 002224   002707 701000 5                  TSX1    READ_WRITE_PLOVER_RECORDS
         5 002225   000000 011000                    NOP     0

      828    12276
      829    12277         /* Write head record */
      830    12278
      831    12279    2       OLD_UTS = VY_OU_HEAD.UTS;

  12279  5 002226   000000 235000 xsym               LDA     VY_OU_HEAD
         5 002227   000127 755000 1                  STA     OLD_UTS

      832    12280    2       VY_O_KEY_BUF.FORM0.COUNT = VY_OK.OUNAME.COUNT + 1;

  12280  5 002230   000013 236000 xsym               LDQ     VY_OK+11
         5 002231   000033 772000                    QRL     27
         5 002232   000001 036007                    ADLQ    1,DL
         5 002233   000033 736000                    QLS     27
         5 002234   000000 552040 xsym               STBQ    VY_O_KEY_BUF,'40'O

      833    12281    2       CALL CONCAT( VY_O_KEY_BUF.FORM0.CHARS,

  12281  5 002235   000042 236003                    LDQ     34,DU
         5 002236   000000 552020 xsym               STBQ    VY_O_KEY_BUF,'20'O
         5 002237   040000 100400                    MLR     fill='040'O
PL6.E3A0      #001=VYO$OBJECT File=VYO$OBJECT.:E05TSI                            WED 07/30/97 08:58 Page:153  
         5 002240   000013 200777 xsym               ADSC9   VY_OK+11                 cn=1,n=511
         5 002241   000000 400777 xsym               ADSC9   VY_O_KEY_BUF             cn=2,n=511

      834    12282    2          '"',
      835    12283    2          VY_OK.OUNAME.CHARS );
      836    12284    2       CALL VYI$WRITE( 1/*@RF*/,

  12284  5 002242   000040 236000 6                  LDQ     32
         5 002243   200014 756100                    STQ     @ER#+3,,AUTO
         5 002244   000054 237000 6                  LDAQ    44
         5 002245   200020 757100                    STAQ    @ER#+7,,AUTO
         5 002246   000307 236000 6                  LDQ     199
         5 002247   200017 756100                    STQ     @ER#+6,,AUTO
         5 002250   200014 630500                    EPPR0   @ER#+3,,AUTO
         5 002251   200016 450500                    STP0    @ER#+5,,AUTO
         5 002252   000013 236000 6                  LDQ     11
         5 002253   200015 756100                    STQ     @ER#+4,,AUTO
         5 002254   200015 630500                    EPPR0   @ER#+4,,AUTO
         5 002255   000023 631400 xsym               EPPR1   B_VECTNIL+19
         5 002256   000000 701000 xent               TSX1    VYI$WRITE
         5 002257   000000 011000                    NOP     0

      837    12285    2          ADDR( VY_OU_HEAD ),
      838    12286    2          SIZEW( VY_OU_HEAD ),
      839    12287    2          0/*@OF*/,
      840    12288    2          '1'B );
      841    12289
      842    12290
      843    12291
      844    12292
      845    12293
      846    12294    3       DO I = 0 TO HB; /* @DN to @ER */

  12294  5 002260   000032 450000 1                  STZ     I
         5 002261   002332 710000 5                  TRA     s:12304+3

      847    12295    3           REC_TYPE = VY_PASS1_REC_TYPE(I); /* Get record type */
PL6.E3A0      #001=VYO$OBJECT File=VYO$OBJECT.:E05TSI                            WED 07/30/97 08:58 Page:154  

  12295  5 002262   000032 720000 1                  LXL0    I
         5 002263   000000 235010 xsym               LDA     VY_PASS1_REC_TYPE,X0
         5 002264   000036 755000 1                  STA     REC_TYPE

      848    12296    3           ALL_TYPE = ALL$ -> VY$WORD_A(REC_TYPE);
             12296                    /*Get segment index for this record type */

  12296  5 002265   000006 470400 1                  LDP0    ALL$
         5 002266   000000 235105                    LDA     0,AL,PR0
         5 002267   000037 755000 1                  STA     ALL_TYPE

      849    12297    4           IF ALL_A(REC_TYPE) >0 AND VY_O.MAP_A(REC_TYPE) = 0/*@NO*/ THEN DO;

  12297  5 002270   000036 721000 1                  LXL1    REC_TYPE
         5 002271   000137 235011 1                  LDA     ALL_A,X1
         5 002272   002327 604400 5                  TMOZ    s:12304
         5 002273   000004 235011 xsym               LDA     VY_O+4,X1
         5 002274   002327 601000 5                  TNZ     s:12304

      850    12298    4               VY_CURR$ -> VY$NODE.L_START_A$(REC_TYPE) = SAVE_START$(I);

  12298  5 002275   000172 236010 1                  LDQ     SAVE_START$,X0
         5 002276   000000 471400 xsym               LDP1    VY_CURR$
         5 002277   100030 756111                    STQ     24,X1,PR1

      851    12299    4               VY_CURR$ -> VY$NODE.L_STOP_A$(REC_TYPE) = SAVE_STOP$(I);

  12299  5 002300   000204 236010 1                  LDQ     SAVE_STOP$,X0
         5 002301   000000 470400 xsym               LDP0    VY_CURR$
         5 002302   000036 721000 1                  LXL1    REC_TYPE
         5 002303   000042 756111                    STQ     34,X1,PR0

      852    12300    4               VY_CURR$ -> VY$NODE.L_SIZE_A(REC_TYPE) = SAVE_SIZE(I);

  12300  5 002304   000000 470400 xsym               LDP0    VY_CURR$
         5 002305   000036 721000 1                  LXL1    REC_TYPE
PL6.E3A0      #001=VYO$OBJECT File=VYO$OBJECT.:E05TSI                            WED 07/30/97 08:58 Page:155  
         5 002306   000216 235010 1                  LDA     SAVE_SIZE,X0
         5 002307   000054 755111                    STA     44,X1,PR0

      853    12301    4               VY_CURR$ -> VY$NODE.L_PREV_SIZE_A(REC_TYPE) = SAVE_PREV_SIZE(I);

  12301  5 002310   000000 470400 xsym               LDP0    VY_CURR$
         5 002311   000036 721000 1                  LXL1    REC_TYPE
         5 002312   000230 235010 1                  LDA     SAVE_PREV_SIZE,X0
         5 002313   000066 755111                    STA     54,X1,PR0

      854    12302    4               CALL VYF$FREE( ALL_TYPE, ALL_A(REC_TYPE), 0 );

  12302  5 002314   000003 236000 6                  LDQ     3
         5 002315   200016 756100                    STQ     @ER#+5,,AUTO
         5 002316   000036 721000 1                  LXL1    REC_TYPE
         5 002317   000137 630411 1                  EPPR0   ALL_A,X1
         5 002320   200015 450500                    STP0    @ER#+4,,AUTO
         5 002321   000127 236000 6                  LDQ     87
         5 002322   200014 756100                    STQ     @ER#+3,,AUTO
         5 002323   200014 630500                    EPPR0   @ER#+3,,AUTO
         5 002324   000021 631400 xsym               EPPR1   B_VECTNIL+17
         5 002325   000000 701000 xent               TSX1    VYF$FREE
         5 002326   000000 011000                    NOP     0

      855    12303    4               END; /* If ... */

      856    12304    3           END; /* Do i = 0 to hb; */

  12304  5 002327   000032 235000 1                  LDA     I
         5 002330   000001 035007                    ADLA    1,DL
         5 002331   000032 755000 1                  STA     I
         5 002332   000132 236000 1                  LDQ     HB
         5 002333   000032 116000 1                  CMPQ    I
         5 002334   002262 603000 5                  TRC     s:12295

      857    12305
      858    12306
PL6.E3A0      #001=VYO$OBJECT File=VYO$OBJECT.:E05TSI                            WED 07/30/97 08:58 Page:156  
      859    12307    2   END READ_WRITE_REMAINING_RECORDS;

  12307  5 002335   200010 221300                    LDX1  ! VERS_NUM+2,,AUTO
         5 002336   000001 702211                    TSX2  ! 1,X1

      860    12308
      861    12309        %EJECT;
PL6.E3A0      #001=VYO$OBJECT File=VYO$OBJECT.:E05TSI                            WED 07/30/97 08:58 Page:157  
      862    12310        /*I*  NAME:       READ_WRITE_DEBUG_RECORDS
      863    12311              PURPOSE:    Read debug records from an object unit file and write
      864    12312                          them to a library/object file.
      865    12313              INTERFACE:  VYK$KEY
      866    12314                          VYI$READ
      867    12315                          VYI$WRITE
      868    12316                          VYE$ERROR
      869    12317                          VYA$GET
      870    12318                          VYF$FREE
      871    12319              DESCRIPTION:
      872    12320                  Reads all debug records for an object unit and writes them
      873    12321                  to a library/object file.
      874    12322        */
      875    12323
      876    12324
      877    12325    1   READ_WRITE_DEBUG_RECORDS: PROC;

  12325  5 002337   200012 741300       READ_WRITE_* STX1  ! @ER#+1,,AUTO

      878    12326
      879    12327
      880    12328    3       IF VY_O.PRIMARY_OPTION.NODEBUG ~= 0 THEN DO;

  12328  5 002340   000003 235000 xsym               LDA     VY_O+3
         5 002341   002345 600000 5                  TZE     s:12332

      881    12329    3           VY_OU_HEAD.LB_SIZE = 0;

  12329  5 002342   000000 220003                    LDX0    0,DU
         5 002343   000003 440000 xsym               SXL0    VY_OU_HEAD+3

      882    12330    3           RETURN;

  12330  5 002344   000001 702211                    TSX2  ! 1,X1

      883    12331    3           END;
      884    12332    3       IF RTYPE ~= 11 THEN DO; /* It's not a logical block debug record */
PL6.E3A0      #001=VYO$OBJECT File=VYO$OBJECT.:E05TSI                            WED 07/30/97 08:58 Page:158  

  12332  5 002345   000105 236000 1                  LDQ     RTYPE
         5 002346   000013 116007                    CMPQ    11,DL
         5 002347   002356 600000 5                  TZE     s:12344

      885    12333        /*E*  ERROR: VYT-E$FIMAGE_NO_LB_VY-0
      886    12334              MESSAGE: Object language error.  Debug records present but logical
      887    12335                       block record missing.  Skipping debug processing.
      888    12336              DESCRIPTION: Self-explanatory.
      889    12337        */
      890    12338                %SCREAM( ERR#=%E$FIMAGE_NO_LB_VY, MID="'T'", LEVEL=%@E$S_VY,
      891    12339                AUX=%@E$OUOF_VY );

  12340  5 002350   000312 630400 6                  EPPR0   202
         5 002351   000022 631400 xsym               EPPR1   B_VECTNIL+18
         5 002352   000000 701000 xent               TSX1    VYE$ERROR
         5 002353   000000 011000                    NOP     0

      892    12342    3           RETURN;

  12342  5 002354   200012 221300                    LDX1  ! @ER#+1,,AUTO
         5 002355   000001 702211                    TSX2  ! 1,X1

      893    12343    3           END;
      894    12344    3       IF PAGE# ~= 0 THEN DO;

  12344  5 002356   000136 235000 1                  LDA     PAGE#
         5 002357   002376 600000 5                  TZE     s:12383

      895    12345        /*E*  ERROR: VYO-E$FIMAGE_D_LB_VY-0
      896    12346              MESSAGE: First page of logical block records is %U1; Must be 0.
      897    12347              DESCRIPTION: Self-explanatory.
      898    12348        */
      899    12349                %NUMBER( NUM1=PAGE# );

  12355  5 002360   000316 630400 6                  EPPR0   206
         5 002361   000023 631400 xsym               EPPR1   B_VECTNIL+19
PL6.E3A0      #001=VYO$OBJECT File=VYO$OBJECT.:E05TSI                            WED 07/30/97 08:58 Page:159  
         5 002362   000000 701000 xent               TSX1    VYD$B2C
         5 002363   000000 011000                    NOP     0

      900    12366                %SCREAM( ERR#=%E$FIMAGE_D_LB_VY, MID="'O'", LEVEL=%@E$S_D_VY );

  12367  5 002364   000324 630400 6                  EPPR0   212
         5 002365   000022 631400 xsym               EPPR1   B_VECTNIL+18
         5 002366   000000 701000 xent               TSX1    VYE$ERROR
         5 002367   000000 011000                    NOP     0

      901    12369    3   SKIP_DEBUG:
      902    12370        /*E*  ERROR: VYO-E$FIMAGE_D_SKIP_VY-0
      903    12371              MESSAGE: Skipping debug record processing.
      904    12372              DESCRIPTION: Self-explanatory.
      905    12373        */
      906    12374                %SCREAM(
      907    12375                ERR#=%E$FIMAGE_D_SKIP_VY,
      908    12376                LEVEL=%@E$S_VY,
      909    12377                MID="'O'",
      910    12378                AUX=%@E$OUOF_VY);

  12379  5 002370   000331 630400 6     SKIP_DEBUG   EPPR0   217
         5 002371   000022 631400 xsym               EPPR1   B_VECTNIL+18
         5 002372   000000 701000 xent               TSX1    VYE$ERROR
         5 002373   000000 011000                    NOP     0

      911    12381    3           RETURN;

  12381  5 002374   200012 221300                    LDX1  ! @ER#+1,,AUTO
         5 002375   000001 702211                    TSX2  ! 1,X1

      912    12382    3           END;
      913    12383    3       IF IO_SIZEW < 8 THEN DO;

  12383  5 002376   000107 235000 1                  LDA     IO_SIZEW
         5 002377   000010 115007                    CMPA    8,DL
         5 002400   002406 605000 5                  TPL     s:12396
PL6.E3A0      #001=VYO$OBJECT File=VYO$OBJECT.:E05TSI                            WED 07/30/97 08:58 Page:160  

      914    12384        /*E*  ERROR: VYO-E$FIMAGE_D_SHORT_LB_VY-0
      915    12385              MESSAGE: Page 0 of debug record type 11 is less than 8 words.
      916    12386              DESCRIPTION: Self-explanatory.
      917    12387        */
      918    12388                %SCREAM(
      919    12389                ERR#=%E$FIMAGE_D_SHORT_LB_VY,
      920    12390                MID="'O'",
      921    12391                LEVEL=%@E$S_D_VY);

  12392  5 002401   000336 630400 6                  EPPR0   222
         5 002402   000022 631400 xsym               EPPR1   B_VECTNIL+18
         5 002403   000000 701000 xent               TSX1    VYE$ERROR
         5 002404   000000 011000                    NOP     0

      922    12394    3           GOTO SKIP_DEBUG;

  12394  5 002405   002370 710000 5                  TRA     SKIP_DEBUG

      923    12395    3           END;
      924    12396    2       PAGE_SIZE = 0;

  12396  5 002406   000111 450000 1                  STZ     PAGE_SIZE

      925    12397    2       J = 0;

  12397  5 002407   000033 450000 1                  STZ     J

      926    12398    2       TOTAL(11) = VY_IO_SIZEW;

  12398  5 002410   000000 235000 xsym               LDA     VY_IO_SIZEW
         5 002411   000073 755000 1                  STA     TOTAL+11

      927    12399    2       PAGE_A(11) = VY_IO_SIZEW;

  12399  5 002412   000053 755000 1                  STA     PAGE_A+11

PL6.E3A0      #001=VYO$OBJECT File=VYO$OBJECT.:E05TSI                            WED 07/30/97 08:58 Page:161  
      928    12400    3       DO I = 12 TO 15;

  12400  5 002413   000014 235007                    LDA     12,DL
         5 002414   000032 755000 1                  STA     I

      929    12401    3           Q$ = PINCRW( VY_REC_BUF_START$, DEBUG_MAP(J) );

  12401  5 002415   000033 720000 1                  LXL0    J
         5 002416   000000 721010 2                  LXL1    DEBUG_MAP,X0
         5 002417   000000 636011                    EAQ     0,X1
         5 002420   000000 036000 xsym               ADLQ    VY_REC_BUF_START$
         5 002421   000004 756000 1                  STQ     Q$

      930    12402    3           TSIZE = Q$ -> VY$HALF_A(0);

  12402  5 002422   000004 470400 1                  LDP0    Q$
         5 002423   000000 101500                    MRL     fill='000'O
         5 002424   000000 000002                    ADSC9   0,,PR0                   cn=0,n=2
         5 002425   000102 000004 1                  ADSC9   TSIZE                    cn=0,n=4

      931    12403    3           PSIZE = Q$ -> VY$HALF_A(1);

  12403  5 002426   000000 101500                    MRL     fill='000'O
         5 002427   000000 400002                    ADSC9   0,,PR0                   cn=2,n=2
         5 002430   000126 000004 1                  ADSC9   PSIZE                    cn=0,n=4

      932    12404    3           IF PAGE_SIZE < PSIZE THEN PAGE_SIZE = PSIZE;

  12404  5 002431   000111 236000 1                  LDQ     PAGE_SIZE
         5 002432   000126 116000 1                  CMPQ    PSIZE
         5 002433   002436 603000 5                  TRC     s:12405

  12404  5 002434   000126 235000 1                  LDA     PSIZE
         5 002435   000111 755000 1                  STA     PAGE_SIZE

      933    12405    3           TOTAL(I) = TSIZE;

PL6.E3A0      #001=VYO$OBJECT File=VYO$OBJECT.:E05TSI                            WED 07/30/97 08:58 Page:162  
  12405  5 002436   000102 235000 1                  LDA     TSIZE
         5 002437   000032 722000 1                  LXL2    I
         5 002440   000060 755012 1                  STA     TOTAL,X2

      934    12406    3           PAGE_A(I) = PSIZE;

  12406  5 002441   000126 236000 1                  LDQ     PSIZE
         5 002442   000040 756012 1                  STQ     PAGE_A,X2

      935    12407    3           J = J + 1;

  12407  5 002443   000033 235000 1                  LDA     J
         5 002444   000001 035007                    ADLA    1,DL
         5 002445   000033 755000 1                  STA     J

      936    12408    3           END; /* Do i = @ES to @PN */

  12408  5 002446   000032 235000 1                  LDA     I
         5 002447   000001 035007                    ADLA    1,DL
         5 002450   000032 755000 1                  STA     I
         5 002451   000020 115007                    CMPA    16,DL
         5 002452   002415 602000 5                  TNC     s:12401

      937    12409    3       IF PAGE_SIZE > VY_REC_BUF_SIZE THEN DO;

  12409  5 002453   000000 236000 xsym               LDQ     VY_REC_BUF_SIZE
         5 002454   000111 116000 1                  CMPQ    PAGE_SIZE
         5 002455   002505 603000 5                  TRC     s:12427

      938    12410    3           J = PAGE_SIZE - VY_REC_BUF_SIZE;

  12410  5 002456   000111 236000 1                  LDQ     PAGE_SIZE
         5 002457   000000 136000 xsym               SBLQ    VY_REC_BUF_SIZE
         5 002460   000033 756000 1                  STQ     J

      939    12411                %ALLOCATE(
      940    12412                PTR$=Q$,
PL6.E3A0      #001=VYO$OBJECT File=VYO$OBJECT.:E05TSI                            WED 07/30/97 08:58 Page:163  
      941    12413                TYPE=@PR_DS_1,
      942    12414                SIZE=J);

  12415  5 002461   000000 236000 xsym               LDQ     VY_M_ALL
         5 002462   000000 136000 xsym               SBLQ    VY_M_FREE
         5 002463   002476 604000 5                  TMI     s:12419
         5 002464   000033 116000 1                  CMPQ    J
         5 002465   002476 602000 5                  TNC     s:12419

  12416  5 002466   000000 236000 xsym               LDQ     VY_M_FREE
         5 002467   000022 736000                    QLS     18
         5 002470   000000 036000 xsym               ADLQ    VY_M_BASE_PTR
         5 002471   000004 756000 1                  STQ     Q$

  12417  5 002472   000000 236000 xsym               LDQ     VY_M_FREE
         5 002473   000033 036000 1                  ADLQ    J
         5 002474   000000 756000 xsym               STQ     VY_M_FREE

  12418  5 002475   002502 710000 5                  TRA     s:12421

  12419  5 002476   000342 630400 6                  EPPR0   226
         5 002477   000021 631400 xsym               EPPR1   B_VECTNIL+17
         5 002500   000000 701000 xent               TSX1    VYA$GET
         5 002501   000000 011000                    NOP     0

      943    12421    3           VY_REC_BUF_SIZE = VY_REC_BUF_SIZE + J;

  12421  5 002502   000000 236000 xsym               LDQ     VY_REC_BUF_SIZE
         5 002503   000033 036000 1                  ADLQ    J
         5 002504   000000 756000 xsym               STQ     VY_REC_BUF_SIZE

      944    12422    3           END; /* If PAGE_SIZE > VY_REC_BUF_SIZE then do; */

      945    12423
      946    12424
      947    12425
      948    12426    3       DO WHILE( '1'B );
PL6.E3A0      #001=VYO$OBJECT File=VYO$OBJECT.:E05TSI                            WED 07/30/97 08:58 Page:164  

      949    12427    4           IF MOD( IO_SIZEW, VY_REC_SIZE_A(RTYPE) ) ~= 0 THEN DO;

  12427  5 002505   000105 720000 1                  LXL0    RTYPE
         5 002506   000107 236000 1                  LDQ     IO_SIZEW
         5 002507   000000 506010 xsym               DIV     VY_REC_SIZE_A,X0
         5 002510   000044 733000                    LRS     36
         5 002511   000000 116003                    CMPQ    0,DU
         5 002512   002524 600000 5                  TZE     s:12456

      950    12428        /*E*  ERROR: VYO-E$FIMAGE_D_ENTRIES_VY-0
      951    12429              MESSAGE: Debug record type %U1 does not contain an integral # of entries.
      952    12430              DESCRIPTION: Self-explanatory.
      953    12431        */
      954    12432                    %NUMBER( NUM1=RTYPE );

  12438  5 002513   000345 630400 6                  EPPR0   229
         5 002514   000023 631400 xsym               EPPR1   B_VECTNIL+19
         5 002515   000000 701000 xent               TSX1    VYD$B2C
         5 002516   000000 011000                    NOP     0

      955    12449                    %SCREAM( ERR#=%E$FIMAGE_D_ENTRIES_VY, MID="'O'", LEVEL=%@E$S_D_VY );

  12450  5 002517   000353 630400 6                  EPPR0   235
         5 002520   000022 631400 xsym               EPPR1   B_VECTNIL+18
         5 002521   000000 701000 xent               TSX1    VYE$ERROR
         5 002522   000000 011000                    NOP     0

      956    12452    4               GOTO SKIP_DEBUG;

  12452  5 002523   002370 710000 5                  TRA     SKIP_DEBUG

      957    12453    4               END;
      958    12454
      959    12455         /*Now write the record out */
      960    12456    3           VY_OL_KEY_BUF = VY_O_KEY_BUF;

PL6.E3A0      #001=VYO$OBJECT File=VYO$OBJECT.:E05TSI                            WED 07/30/97 08:58 Page:165  
  12456  5 002524   000000 100400                    MLR     fill='000'O
         5 002525   000000 001001 xsym               ADSC9   VY_O_KEY_BUF             cn=0,n=513
         5 002526   000000 001001 xsym               ADSC9   VY_OL_KEY_BUF            cn=0,n=513

      961    12457    3           VY_OL_KEY_BUF.FORM1.UTS = VY_OU_HEAD.UTS;

  12457  5 002527   000000 100400                    MLR     fill='000'O
         5 002530   000000 000004 xsym               ADSC9   VY_OU_HEAD               cn=0,n=4
         5 002531   000000 400004 xsym               ADSC9   VY_OL_KEY_BUF            cn=2,n=4

      962    12458    3           CALL VYI$WRITE( 1/*@RF*/, VY_REC_BUF_START$, IO_SIZEW, 3/*@NEW_KEY*/ );

  12458  5 002532   000357 630400 6                  EPPR0   239
         5 002533   000022 631400 xsym               EPPR1   B_VECTNIL+18
         5 002534   000000 701000 xent               TSX1    VYI$WRITE
         5 002535   000000 011000                    NOP     0

      963    12459
      964    12460    3           IF RTYPE = 15 THEN IO_SIZEW = PAGE_A( 15 );

  12460  5 002536   000105 235000 1                  LDA     RTYPE
         5 002537   000017 115007                    CMPA    15,DL
         5 002540   002543 601000 5                  TNZ     s:12461

  12460  5 002541   000057 236000 1                  LDQ     PAGE_A+15
         5 002542   000107 756000 1                  STQ     IO_SIZEW

      965    12461    3           TOTAL( RTYPE ) = TOTAL( RTYPE ) - IO_SIZEW;

  12461  5 002543   000060 236005 1                  LDQ     TOTAL,AL
         5 002544   000107 136000 1                  SBLQ    IO_SIZEW
         5 002545   000105 720000 1                  LXL0    RTYPE
         5 002546   000060 756010 1                  STQ     TOTAL,X0

      966    12462
      967    12463    4           DO WHILE( TOTAL( RTYPE ) <= 0 );

PL6.E3A0      #001=VYO$OBJECT File=VYO$OBJECT.:E05TSI                            WED 07/30/97 08:58 Page:166  
  12463  5 002547   000000 116003                    CMPQ    0,DU
         5 002550   002564 605400 5                  TPNZ    s:12469

      968    12464    4               RTYPE = RTYPE + 1;

  12464  5 002551   000105 235000 1                  LDA     RTYPE
         5 002552   000001 035007                    ADLA    1,DL
         5 002553   000105 755000 1                  STA     RTYPE

      969    12465    4               PAGE# = -1;

  12465  5 002554   000001 336007                    LCQ     1,DL
         5 002555   000136 756000 1                  STQ     PAGE#

      970    12466    4               IF RTYPE > 15 THEN RETURN;

  12466  5 002556   000020 115007                    CMPA    16,DL
         5 002557   002562 602000 5                  TNC     s:12467

  12466  5 002560   200012 221300                    LDX1  ! @ER#+1,,AUTO
         5 002561   000001 702211                    TSX2  ! 1,X1

      971    12467    4               END; /* Do while( total( rtype ) <= 0 ); */

  12467  5 002562   000060 235005 1                  LDA     TOTAL,AL
         5 002563   002551 604400 5                  TMOZ    s:12464

      972    12468
      973    12469    3           PAGE# = PAGE# + 1;

  12469  5 002564   000136 054000 1                  AOS     PAGE#

      974    12470    3   D_READ:
      975    12471    3           CALL VYK$KEY( 0/*@OF*/, RTYPE, J, PAGE# );

  12471  5 002565   000363 630400 6     D_READ       EPPR0   243
         5 002566   000022 631400 xsym               EPPR1   B_VECTNIL+18
PL6.E3A0      #001=VYO$OBJECT File=VYO$OBJECT.:E05TSI                            WED 07/30/97 08:58 Page:167  
         5 002567   000000 701000 xent               TSX1    VYK$KEY
         5 002570   000000 011000                    NOP     0

      976    12472    3           CALL VYI$READ( 0/*@OF*/,

  12472  5 002571   000003 236000 6                  LDQ     3
         5 002572   200020 756100                    STQ     @ER#+7,,AUTO
         5 002573   200017 756100                    STQ     @ER#+6,,AUTO
         5 002574   000105 720000 1                  LXL0    RTYPE
         5 002575   000040 630410 1                  EPPR0   PAGE_A,X0
         5 002576   200016 450500                    STP0    @ER#+5,,AUTO
         5 002577   000370 237000 6                  LDAQ    248
         5 002600   200014 757100                    STAQ    @ER#+3,,AUTO
         5 002601   200014 630500                    EPPR0   @ER#+3,,AUTO
         5 002602   000023 631400 xsym               EPPR1   B_VECTNIL+19
         5 002603   000000 701000 xent               TSX1    VYI$READ
         5 002604   002630 702000 5                  TSX2    IO_ERROR_DEBUG

      977    12473    3              VY_REC_BUF_START$,
      978    12474    3              PAGE_A(RTYPE),
      979    12475    3              0/*@OF*/, '0'B ) ALTRET( IO_ERROR_DEBUG );
      980    12476    3           P$ = VY_REC_BUF_START$;

  12476  5 002605   000000 236000 xsym               LDQ     VY_REC_BUF_START$
         5 002606   000003 756000 1                  STQ     P$

      981    12477    3           RTYPE = VY_OK.KRTYPE;

  12477  5 002607   000002 235000 xsym               LDA     VY_OK+2
         5 002610   000105 755000 1                  STA     RTYPE

      982    12478    3           PAGE# = VY_OK.KPAGE#;

  12478  5 002611   000003 235000 xsym               LDA     VY_OK+3
         5 002612   000136 755000 1                  STA     PAGE#

      983    12479    3           IO_SIZEW = VY_IO_SIZEW;
PL6.E3A0      #001=VYO$OBJECT File=VYO$OBJECT.:E05TSI                            WED 07/30/97 08:58 Page:168  

  12479  5 002613   000000 235000 xsym               LDA     VY_IO_SIZEW
         5 002614   000107 755000 1                  STA     IO_SIZEW

      984    12480    4           IF IO_SIZEW = 0 THEN DO;

  12480  5 002615   002505 601000 5                  TNZ     s:12427

      985    12481        /*E*   ERROR: VYO-E$FIMAGE_D_ZERO_REC_SIZE_VY-0
      986    12482             MESSAGE: 0 record size for debug record type = %U1; Skipping debug processing.
      987    12483              DESCRIPTION: Self-explanatory.
      988    12484        */
      989    12485                    %NUMBER( NUM1=RTYPE );

  12491  5 002616   000345 630400 6                  EPPR0   229
         5 002617   000023 631400 xsym               EPPR1   B_VECTNIL+19
         5 002620   000000 701000 xent               TSX1    VYD$B2C
         5 002621   000000 011000                    NOP     0

      990    12502                   %SCREAM( ERR#=%E$FIMAGE_D_ZERO_REC_SIZE_VY, MID="'O'", LEVEL=%@E$S_VY );

  12503  5 002622   000373 630400 6                  EPPR0   251
         5 002623   000022 631400 xsym               EPPR1   B_VECTNIL+18
         5 002624   000000 701000 xent               TSX1    VYE$ERROR
         5 002625   000000 011000                    NOP     0

      991    12505    4               RETURN;

  12505  5 002626   200012 221300                    LDX1  ! @ER#+1,,AUTO
         5 002627   000001 702211                    TSX2  ! 1,X1

      992    12506    4               END; /* Else do; */
      993    12507    3           END; /* Do forever */

      994    12508
      995    12509
      996    12510    2   IO_ERROR_DEBUG:
PL6.E3A0      #001=VYO$OBJECT File=VYO$OBJECT.:E05TSI                            WED 07/30/97 08:58 Page:169  
      997    12511    3       DO CASE( VY_IO_STATUS );

  12511  5 002630   000000 235000 xsym  IO_ERROR_DE* LDA     VY_IO_STATUS
         5 002631   000003 115007                    CMPA    3,DL
         5 002632   002634 602005 5                  TNC     IO_ERROR_DEBUG+4,AL
         5 002633   002705 710000 5                  TRA     s:12586
         5 002634   002705 710000 5                  TRA     s:12586
         5 002635   002637 710000 5                  TRA     s:12525
         5 002636   002650 710000 5                  TRA     s:12555

      998    12512    3       CASE( 0/*@IO_EOF*/ );

      999    12513    3       CASE( 1/*@IO_NOKEY*/ );

     1000    12514        /*E*  ERROR: VYO-E$FIMAGE_D_NOKEY_VY-0
     1001    12515              MESSAGE: No such key error while processing debug record type = %U1;
     1002    12516                       Skipping debug processing.
     1003    12517              DESCRIPTION: Self-explanatory.
     1004    12518        */
     1005    12519                %NUMBER( NUM1=RTYPE );

  12525  5 002637   000345 630400 6                  EPPR0   229
         5 002640   000023 631400 xsym               EPPR1   B_VECTNIL+19
         5 002641   000000 701000 xent               TSX1    VYD$B2C
         5 002642   000000 011000                    NOP     0

     1006    12536                %SCREAM(
     1007    12537                ERR#=%E$FIMAGE_D_NOKEY_VY,
     1008    12538                LEVEL=%@E$S_VY,
     1009    12539                MID="'O'",
     1010    12540                AUX=%@E$OUOF_VY);

  12541  5 002643   000400 630400 6                  EPPR0   256
         5 002644   000022 631400 xsym               EPPR1   B_VECTNIL+18
         5 002645   000000 701000 xent               TSX1    VYE$ERROR
         5 002646   000000 011000                    NOP     0
         5 002647   002705 710000 5                  TRA     s:12586
PL6.E3A0      #001=VYO$OBJECT File=VYO$OBJECT.:E05TSI                            WED 07/30/97 08:58 Page:170  

     1011    12543    3       CASE( 2/*@IO_LD*/ );

     1012    12544        /*E*  ERROR: VYO-E$FIMAGE_D_IO_LD_VY-0
     1013    12545        MESSAGE: Object language error. Lost data condition for debug record type = %U1.
     1014    12546                 Attempting recovery.
     1015    12547              DESCRIPTION: Self-explanatory.
     1016    12548        */
     1017    12549                %NUMBER( NUM1=RTYPE );

  12555  5 002650   000345 630400 6                  EPPR0   229
         5 002651   000023 631400 xsym               EPPR1   B_VECTNIL+19
         5 002652   000000 701000 xent               TSX1    VYD$B2C
         5 002653   000000 011000                    NOP     0

     1018    12566                %SCREAM(
     1019    12567                ERR#=%E$FIMAGE_D_IO_LD_VY,
     1020    12568                MID="'O'",
     1021    12569                LEVEL=%@E$S_VY,
     1022    12570                AUX=%@E$OUOF_VY);

  12571  5 002654   000405 630400 6                  EPPR0   261
         5 002655   000022 631400 xsym               EPPR1   B_VECTNIL+18
         5 002656   000000 701000 xent               TSX1    VYE$ERROR
         5 002657   000000 011000                    NOP     0

     1023    12573                %ALLOCATE(
     1024    12574                PTR$=Q$,
     1025    12575                TYPE=@PR_DS_1,
     1026    12576                SIZE=VY_REC_BUF_SIZE);

  12577  5 002660   000000 236000 xsym               LDQ     VY_M_ALL
         5 002661   000000 136000 xsym               SBLQ    VY_M_FREE
         5 002662   002675 604000 5                  TMI     s:12581
         5 002663   000000 116000 xsym               CMPQ    VY_REC_BUF_SIZE
         5 002664   002675 602000 5                  TNC     s:12581

PL6.E3A0      #001=VYO$OBJECT File=VYO$OBJECT.:E05TSI                            WED 07/30/97 08:58 Page:171  
  12578  5 002665   000000 236000 xsym               LDQ     VY_M_FREE
         5 002666   000022 736000                    QLS     18
         5 002667   000000 036000 xsym               ADLQ    VY_M_BASE_PTR
         5 002670   000004 756000 1                  STQ     Q$

  12579  5 002671   000000 236000 xsym               LDQ     VY_M_FREE
         5 002672   000000 036000 xsym               ADLQ    VY_REC_BUF_SIZE
         5 002673   000000 756000 xsym               STQ     VY_M_FREE

  12580  5 002674   002701 710000 5                  TRA     s:12583

  12581  5 002675   000226 630400 6                  EPPR0   150
         5 002676   000021 631400 xsym               EPPR1   B_VECTNIL+17
         5 002677   000000 701000 xent               TSX1    VYA$GET
         5 002700   000000 011000                    NOP     0

     1027    12583    3           VY_REC_BUF_SIZE = VY_REC_BUF_SIZE + VY_REC_BUF_SIZE;

  12583  5 002701   000000 236000 xsym               LDQ     VY_REC_BUF_SIZE
         5 002702   000000 036000 xsym               ADLQ    VY_REC_BUF_SIZE
         5 002703   000000 756000 xsym               STQ     VY_REC_BUF_SIZE

     1028    12584    3           GOTO D_READ;

  12584  5 002704   002565 710000 5                  TRA     D_READ

     1029    12585    3           END; /* Do case( VY_IO_STATUS ); */

     1030    12586    2       RETURN;

  12586  5 002705   200012 221300                    LDX1  ! @ER#+1,,AUTO
         5 002706   000001 702211                    TSX2  ! 1,X1

     1031    12587
     1032    12588    2   END READ_WRITE_DEBUG_RECORDS;
     1033    12589        %EJECT;
PL6.E3A0      #001=VYO$OBJECT File=VYO$OBJECT.:E05TSI                            WED 07/30/97 08:58 Page:172  
     1034    12590        /*I*  NAME:       READ_WRITE_PLOVER_RECORDS
     1035    12591              PURPOSE:    Read PLOVER records from an object unit file and write
     1036    12592                          them to a library/object file.
     1037    12593              INTERFACE:  VYW$WRITE_C
     1038    12594                          VYE$ERRMSG
     1039    12595              DESCRIPTION:
     1040    12596                  Reads all PLOVER records for an object unit and writes them
     1041    12597                  to a library/object file.
     1042    12598        */
     1043    12599
     1044    12600
     1045    12601    1   READ_WRITE_PLOVER_RECORDS: PROC;

  12601  5 002707   200012 741300       READ_WRITE_* STX1  ! @ER#+1,,AUTO

     1046    12602
     1047    12603        %B$PLOVERKEY( NAME=B_PLOVERKEY, STCLASS=CONSTANT );
     1048    12633        %B$PLOVERKEY( NAME=B$PLOVERKEY, STCLASS="BASED(OU_KEY$)" );
     1049    12663        %B$PLOVERBIRTHKEY( NAME=PLOVER_BIRTH_KEY, STCLASS=STATIC );
     1050    12686        %B$PLOVERBIRTH( NAME=PLOVER_BIRTH, STCLASS=STATIC );
     1051    12708
     1052    12709       %FPT_READ( FPTN=READ_PLOVER_BIRTH, BUF=PLOVER_BIRTH, KEY=PLOVER_BIRTH_KEY, KEYS=YES,
             12709            DCB=M$OF );
     1053    12748        %FPT_READ( FPTN=READ_OF_SEQ, DCB=M$OF, BUF=TXT, KEY=VY_OL_KEY_BUF, KEYS=NO, KEYR=
             12748            YES );
     1054    12787
     1055    12788    2   DCL TXT CHAR(256) STATIC;
     1056    12789    2   DCL CNT SBIN STATIC;
     1057    12790
     1058    12791    2   DCL TXT$ PTR CONSTANT INIT(ADDR(TXT));
     1059    12792    2   DCL OU_KEY$ PTR CONSTANT INIT(ADDR(VY_OL_KEY_BUF));
     1060    12793
     1061    12794
     1062    12795    2       PLOVER_BIRTH_KEY.UTS = VY_OU_HEAD.UTS;

  12795  5 002710   000000 100400                    MLR     fill='000'O
         5 002711   000000 000004 xsym               ADSC9   VY_OU_HEAD               cn=0,n=4
PL6.E3A0      #001=VYO$OBJECT File=VYO$OBJECT.:E05TSI                            WED 07/30/97 08:58 Page:173  
         5 002712   000255 400004 1                  ADSC9   PLOVER_BIRTH_KEY         cn=2,n=4

     1063    12796    2       CALL M$READ( READ_PLOVER_BIRTH ) ALTRET( NO_PLOVER_BIRTH );

  12796  5 002713   000274 630400 1                  EPPR0   READ_PLOVER_BIRTH
         5 002714   440000 713400                    CLIMB   alt,read
         5 002715   401400 401760                    pmme    nvectors=4
         5 002716   002720 702000 5                  TSX2    NO_PLOVER_BIRTH

     1064    12797    3       DO WHILE( '0'B );

  12797  5 002717   002733 710000 5                  TRA     s:12802

     1065    12798    3   NO_PLOVER_BIRTH:
     1066    12799    3           IF B$TCB$ -> B$TCB.ALT$ -> B$ALT.ERR.ERR#/*@ALT_ERROR*/ ~= 66 THEN CALL
             12799                    VYE$ERRMSG;

  12799  5 002720   000000 470400 xsym  NO_PLOVER_B* LDP0    B$TCB$
         5 002721   000000 471500                    LDP1    0,,PR0
         5 002722   100102 236100                    LDQ     66,,PR1
         5 002723   377770 376007                    ANQ     131064,DL
         5 002724   001020 116007                    CMPQ    528,DL
         5 002725   002731 600000 5                  TZE     s:12800

  12799  5 002726   000002 631400 xsym               EPPR1   B_VECTNIL+2
         5 002727   000000 701000 xent               TSX1    VYE$ERRMSG
         5 002730   000000 011000                    NOP     0

     1067    12800    3           RETURN;

  12800  5 002731   200012 221300                    LDX1  ! @ER#+1,,AUTO
         5 002732   000001 702211                    TSX2  ! 1,X1

     1068    12801    3           END;

     1069    12802    2       VY_OL_KEY_BUF = PLOVER_BIRTH_KEY;

PL6.E3A0      #001=VYO$OBJECT File=VYO$OBJECT.:E05TSI                            WED 07/30/97 08:58 Page:174  
  12802  5 002733   000000 100400                    MLR     fill='000'O
         5 002734   000255 000006 1                  ADSC9   PLOVER_BIRTH_KEY         cn=0,n=6
         5 002735   000000 001001 xsym               ADSC9   VY_OL_KEY_BUF            cn=0,n=513

     1070    12803    2       CALL VYI$WRITE_C( 1/*@RF*/, ADDR(PLOVER_BIRTH), SIZEC(PLOVER_BIRTH), 3
             12803                /*@NEW_KEY*/ );

  12803  5 002736   000411 236000 6                  LDQ     265
         5 002737   200014 756100                    STQ     @ER#+3,,AUTO
         5 002740   000414 237000 6                  LDAQ    268
         5 002741   200020 757100                    STAQ    @ER#+7,,AUTO
         5 002742   200014 630500                    EPPR0   @ER#+3,,AUTO
         5 002743   200017 450500                    STP0    @ER#+6,,AUTO
         5 002744   000013 236000 6                  LDQ     11
         5 002745   200016 756100                    STQ     @ER#+5,,AUTO
         5 002746   200016 630500                    EPPR0   @ER#+5,,AUTO
         5 002747   000022 631400 xsym               EPPR1   B_VECTNIL+18
         5 002750   000000 701000 xent               TSX1    VYI$WRITE_C
         5 002751   000000 011000                    NOP     0

     1071    12804    2       TXT = ' ';

  12804  5 002752   040000 100400                    MLR     fill='040'O
         5 002753   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         5 002754   000330 000400 1                  ADSC9   TXT                      cn=0,n=256

     1072    12805    2       CALL M$READ( READ_OF_SEQ ) ALTRET(DONE);

  12805  5 002755   000312 630400 1                  EPPR0   READ_OF_SEQ
         5 002756   440000 713400                    CLIMB   alt,read
         5 002757   401400 401760                    pmme    nvectors=4
         5 002760   003025 702000 5                  TSX2    DONE

     1073    12806    2       CNT = M$OF$ -> F$DCB.ARS#;

  12806  5 002761   000000 470400 xsym               LDP0    M$OF$
         5 002762   000000 235100                    LDA     0,,PR0
PL6.E3A0      #001=VYO$OBJECT File=VYO$OBJECT.:E05TSI                            WED 07/30/97 08:58 Page:175  
         5 002763   000430 755000 1                  STA     CNT

     1074    12807    3       DO WHILE( B$PLOVERKEY.KEYSIZ = B_PLOVERKEY.KEYSIZ

  12807  5 002764   003007 710000 5                  TRA     s:12815

     1075    12808    3          AND B$PLOVERKEY.NOTHD = B_PLOVERKEY.NOTHD
     1076    12809    3          AND B$PLOVERKEY.UTS = VY_OU_HEAD.UTS );
     1077    12810    3           B$PLOVERKEY.UTS = VY_OU_HEAD.UTS;

  12810  5 002765   000130 470400 2                  LDP0    OU_KEY$
         5 002766   000100 100400                    MLR     fill='000'O
         5 002767   000000 000004 xsym               ADSC9   VY_OU_HEAD               cn=0,n=4
         5 002770   000000 400004                    ADSC9   0,,PR0                   cn=2,n=4

     1078    12811    3           CALL VYI$WRITE_C( 1/*@RF*/, TXT$, CNT, 3/*@NEW_KEY*/ );

  12811  5 002771   000416 630400 6                  EPPR0   270
         5 002772   000022 631400 xsym               EPPR1   B_VECTNIL+18
         5 002773   000000 701000 xent               TSX1    VYI$WRITE_C
         5 002774   000000 011000                    NOP     0

     1079    12812    3           TXT = ' ';

  12812  5 002775   040000 100400                    MLR     fill='040'O
         5 002776   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         5 002777   000330 000400 1                  ADSC9   TXT                      cn=0,n=256

     1080    12813    3           CALL M$READ( READ_OF_SEQ ) ALTRET(DONE);

  12813  5 003000   000312 630400 1                  EPPR0   READ_OF_SEQ
         5 003001   440000 713400                    CLIMB   alt,read
         5 003002   401400 401760                    pmme    nvectors=4
         5 003003   003025 702000 5                  TSX2    DONE

     1081    12814    3           CNT = M$OF$ -> F$DCB.ARS#;

PL6.E3A0      #001=VYO$OBJECT File=VYO$OBJECT.:E05TSI                            WED 07/30/97 08:58 Page:176  
  12814  5 003004   000000 470400 xsym               LDP0    M$OF$
         5 003005   000000 235100                    LDA     0,,PR0
         5 003006   000430 755000 1                  STA     CNT

     1082    12815    3           END;

  12815  5 003007   000130 471400 2                  LDP1    OU_KEY$
         5 003010   100000 236100                    LDQ     0,,PR1
         5 003011   000123 676000 2                  ERQ     B_PLOVERKEY
         5 003012   777000 376003                    ANQ     -512,DU
         5 003013   003025 601000 5                  TNZ     DONE
         5 003014   100000 236100                    LDQ     0,,PR1
         5 003015   000123 676000 2                  ERQ     B_PLOVERKEY
         5 003016   000777 376003                    ANQ     511,DU
         5 003017   003025 601000 5                  TNZ     DONE
         5 003020   100000 235100                    LDA     0,,PR1
         5 003021   100001 236100                    LDQ     1,,PR1
         5 003022   000022 773000                    LRL     18
         5 003023   000000 116000 xsym               CMPQ    VY_OU_HEAD
         5 003024   002765 600000 5                  TZE     s:12810

     1083    12816    2   DONE:
     1084    12817    2       RETURN;

  12817  5 003025   200012 221300       DONE         LDX1  ! @ER#+1,,AUTO
         5 003026   000001 702211                    TSX2  ! 1,X1

     1085    12818
     1086    12819    2   END READ_WRITE_PLOVER_RECORDS;
     1087    12820        %EJECT;
PL6.E3A0      #001=VYO$OBJECT File=VYO$OBJECT.:E05TSI                            WED 07/30/97 08:58 Page:177  
     1088    12821    1   DUP_ERR: PROC( ER# );

  12821  5 003027   200010 741300       DUP_ERR      STX1  ! VERS_NUM+2,,AUTO

     1089    12822
     1090    12823    2   DCL ER# UBIN(36) ALIGNED;
     1091    12824
     1092    12825
     1093    12826        /*E*  ERROR: VYO-E$DUP_ERR_VY-0
     1094    12827        MESSAGE: Duplicate ( Entry definition ) - ( Object unit ) relationship
     1095    12828                 attempted for: %U1.
     1096    12829              DESCRIPTION: Self-explanatory.
     1097    12830        */
     1098    12831        /*E*  ERROR: VYO-E$DUP_ERR_IGNORED_VY-0
     1099    12832        MESSAGE: Duplicate ( Entry definition ) - ( Object unit ) relationship
     1100    12833                 ignored for: %U1.
     1101    12834              DESCRIPTION: Self-explanatory.
     1102    12835        */
     1103    12836    2       VY_EFIELD1 = VY_O_KEY_BUF;

  12836  5 003030   000000 100400                    MLR     fill='000'O
         5 003031   000000 000120 xsym               ADSC9   VY_O_KEY_BUF             cn=0,n=80
         5 003032   000000 000120 xsym               ADSC9   VY_EFIELD1               cn=0,n=80

     1104    12837            %SCREAM(
     1105    12838            ERR#=ER#,
     1106    12839            LEVEL=%@E$W_VY,
     1107    12840            MID="'O'",
     1108    12841            AUX=%@E$OUOF_VY);

  12842  5 003033   000124 237000 6                  LDAQ    84
         5 003034   200016 757100                    STAQ    @ER#+5,,AUTO
         5 003035   000046 236000 6                  LDQ     38
         5 003036   200011 235100                    LDA     @ER#,,AUTO
         5 003037   200014 757100                    STAQ    @ER#+3,,AUTO
         5 003040   200014 630500                    EPPR0   @ER#+3,,AUTO
         5 003041   000022 631400 xsym               EPPR1   B_VECTNIL+18
PL6.E3A0      #001=VYO$OBJECT File=VYO$OBJECT.:E05TSI                            WED 07/30/97 08:58 Page:178  
         5 003042   000000 701000 xent               TSX1    VYE$ERROR
         5 003043   000000 011000                    NOP     0

     1109    12844    2   END DUP_ERR;

  12844  5 003044   200010 221300                    LDX1  ! VERS_NUM+2,,AUTO
         5 003045   000001 702211                    TSX2  ! 1,X1
     1110    12845
     1111    12846
     1112    12847
     1113    12848    1   END VYO$OBJECT;

PL6.E3A0      #001=VYO$OBJECT File=VYO$OBJECT.:E05TSI                            WED 07/30/97 08:58 Page:179  
--  Include file information  --

   VY_PSUBS_C.:E05TOU  is referenced.
   B_ERRORS_C.:E05TOU  is referenced.
   B$OBJECT_C.:E05TOU  is referenced.
   VY_DCB_R.:E05TOU  cannot be made into a system file and is referenced.
   VY_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
   VY_FIXED_R.:E05TOU  cannot be made into a system file and is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   VY_MACRO_C.:E05TOU  is referenced.
   VY_PERR_C.:E05TOU  is referenced.
   VY_SUBS_C.:E05TOU  is referenced.
   VY_INC_NO_C.:E05TOU  is referenced.
   VY_SWITCH_C.:E05TOU  is referenced.
   VY_INC_C.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure VYO$OBJECT.
PL6.E3A0      #001=VYO$OBJECT File=VYO$OBJECT.:E05TSI                            WED 07/30/97 08:58 Page:180  

 **** Variables and constants ****

  ****  Section 001  Data  VYO$OBJECT

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     6-0-0/w PTR         r     1 ALL$                     137-0-0/w SBIN        r     1 ALL_A(0:10)
    37-0-0/w UBIN        r     1 ALL_TYPE                 131-0-0/w UBIN        r     1 ANSWER
   170-0-0/w PTR         r     1 BUFFER$                  430-0-0/w SBIN        r     1 CNT
   251-0-0/w UBIN        r     1 COMP_UTS                  11-0-0/w PTR         r     1 CURR$
   171-0-0/w PTR         r     1 DNAME$                     7-0-0/w PTR         r     1 DN_START$
   110-0-0/w SBIN        r     1 ERR_LEVEL                153-0-0/w UBIN        r     1 ERR_WORD_DISP
     0-0-0/w BIT         r     1 FIRST                    154-0-0/d STRC(432)   r     1 FPT_TIME
   106-0-0/w UBIN        r     1 GET                        2-0-0/w BIT         r     1 HAVE_PRIMARY
   132-0-0/w UBIN        r     1 HB                       101-0-0/w UBIN        r     1 HEAD_INX
    32-0-0/w UBIN        r     1 I                        135-0-0/w UBIN        r     1 INC
   107-0-0/w SBIN        r     1 IO_SIZEW                  12-0-0/w PTR         r     1 ITEM$
    33-0-0/w UBIN        r     1 J                        253-0-0/w UBIN        r     1 MOVE_SIZE
    10-0-0/w PTR         r     1 NAME$                    152-0-0/w SBIN        r     1 NEW_VALUE
   113-0-0/w UBIN        r     1 NPAGE                    127-0-0/w UBIN        r     1 OLD_UTS
     3-0-0/w PTR         r     1 P$                       104-0-0/w UBIN        r     1 PAGE
   136-0-0/w SBIN        r     1 PAGE#                     40-0-0/w UBIN        r     1 PAGE_A(0:15)
   111-0-0/w UBIN        r     1 PAGE_SIZE                257-0-0/w STRC(468)   r     1 PLOVER_BIRTH
   255-0-0/w STRC(54)    r     1 PLOVER_BIRTH_KEY         134-0-0/w UBIN        r     1 PRIMARY_NAME_DISP
   126-0-0/w UBIN        r     1 PSIZE                      4-0-0/w PTR         r     1 Q$
   312-0-0/d STRC(504)   r     1 READ_OF_SEQ              274-0-0/d STRC(504)   r     1 READ_PLOVER_BIRTH
    36-0-0/w UBIN        r     1 REC_TYPE                 105-0-0/w UBIN        r     1 RTYPE
   230-0-0/w UBIN        r     1 SAVE_PREV_SIZE(0:9)
   216-0-0/w UBIN        r     1 SAVE_SIZE(0:9)
   172-0-0/w PTR         r     1 SAVE_START$(0:9)
   204-0-0/w PTR         r     1 SAVE_STOP$(0:9)
   125-0-0/w UBIN        r     1 SECT#                    103-0-0/w UBIN        r     1 SIZE
    15-0-0/w PTR         r     1 START$                    16-0-0/w PTR         r     1 TAIL$
    60-0-0/w SBIN        r     1 TOTAL(0:15)              102-0-0/w UBIN        r     1 TSIZE
   114-0-0/w UBIN        r     1 TSIZE_READ               330-0-0/c CHAR(256)   r     1 TXT
   242-0-0/w CHAR(10)    r     1 UTS_DATE                 245-0-0/w STRC(99)    r     1 UTS_T
PL6.E3A0      #001=VYO$OBJECT File=VYO$OBJECT.:E05TSI                            WED 07/30/97 08:58 Page:181  
   250-0-0/w UBIN        r     1 UTS_TEMP                  14-0-0/w PTR         r     1 WHERE$
     1-0-0/w BIT         r     1 WRITE_SWITCH             133-0-0/w UBIN        r     1 X

  ****  Section 002 RoData VYO$OBJECT

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

   123-0-0/w STRC(117)   r     1 B_PLOVERKEY
     0-0-0/w UBIN        r     1 DEBUG_MAP(0:3)
    16-0-0/d STRC(360)   r     1 FPT_DELREC                 4-0-0/d STRC(360)   r     1 FPT_PRECORD
    67-0-0/w CHAR(5)     r     1 LANG_ID(0:13)             44-0-0/c CHAR(73)    r     1 LIST_HEADER
   130-0-0/w PTR         r     1 OU_KEY$                  127-0-0/w PTR         r     1 TXT$
    30-0-0/d STRC(432)   r     1 UTS_TIME

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     5-0-0/w PTR         r     1 @ALLOCATE$                11-0-0/w PTR         r     1 @ER#
     3-0-0/w PTR         r     1 @FID$                      4-0-0/w PTR         r     1 @SOURCE
    *0-0-0/w PTR         r     1 ALLOCATE$                 *0-0-0/w UBIN        r     1 ER#
    *0-0-0/w PTR         r     1 FID$                      *0-0-0/w SBIN        r     1 SOURCE
     6-0-0/c CHAR(3)     r     1 VERS_NUM

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 B$TCB$                     0-0-0/w PTR         r     1 M$OF$
     0-0-0/w UBIN        r     1 VY_COMMAND                 0-0-0/w BIT         r     1 VY_COPY_EXTRACT
     0-0-0/w UBIN        r     1 VY_CTAB                    0-0-0/w PTR         r     1 VY_CURR$
     0-0-0/w UBIN        r     1 VY_DEF_REC_A(0:2)
     0-0-0/w PTR         r     1 VY_ED_START$               0-0-0/w PTR         r     1 VY_ED_STOP$
     0-0-0/w STRC(720)   r     1 VY_EFIELD1                 0-0-0/w STRC(720)   r     1 VY_EFIELD2
PL6.E3A0      #001=VYO$OBJECT File=VYO$OBJECT.:E05TSI                            WED 07/30/97 08:58 Page:182  
     0-0-0/w STRC(720)   r     1 VY_EFIELD3                 0-0-0/c STRC(450)   r     1 VY_HEADER
     0-0-0/w SBIN        r     1 VY_HEAD_INX(0:9)
     0-0-0/w BIT         r     1 VY_INV_OWRITE              0-0-0/w SBIN        r     1 VY_IO_SIZEC
     0-0-0/w SBIN        r     1 VY_IO_SIZEW                0-0-0/w SBIN        r     1 VY_IO_STATUS
     0-0-0/w PTR         r     1 VY_LAST_SC$                0-0-0/w UBIN        r     1 VY_LINK_UTS
     0-0-0/w BIT         r     1 VY_LIST_HEADER
     0-0-0/d STRC(432)   r     1 VY_MAP_LIT_LO_FPT_WRITE
     0-0-0/d STRC(432)   r     1 VY_MAP_LO_FPT_WRITE        0-0-0/w STRC(1188)  r     1 VY_MBUF
     0-0-0/w SBIN        r     1 VY_M_ALL(0:8)
     0-0-0/w PTR         r     1 VY_M_BASE_PTR(0:8)
     0-0-0/w SBIN        r     1 VY_M_FREE(0:8)
     0-0-0/w STRC(648)   r     1 VY_O                       0-0-0/w STRC(5796)  r     1 VY_OK
     0-0-0/w STRC(4617)  r     1 VY_OL_KEY_BUF              0-0-0/c STRC(1044)  r     1 VY_OU_HEAD
     0-0-0/w STRC(4617)  r     1 VY_O_KEY_BUF
     0-0-0/w SBIN        r     1 VY_PASS1_ALL_TYPE(0:9)
     0-0-0/w SBIN        r     1 VY_PASS1_REC_TYPE(0:8)
     0-0-0/w UBIN        r     1 VY_REC_BUF_SIZE            0-0-0/w PTR         r     1 VY_REC_BUF_START$
     0-0-0/w SBIN        r     1 VY_REC_SIZE_A(0:15)
     0-0-0/w PTR         r     1 VY_ROOT$                   0-0-0/w UBIN        r     1 VY_SOURCE_COUNT
     0-0-0/w PTR         r     1 VY_SYMBOL$                 0-0-0/w UBIN        r     1 VY_TARGET_COUNT
     0-0-0/d REMB        r     1 VY_UNWIND

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(2448)  r     1 B$ALT                      0-0-0/w ASTR(18)    r     1 B$DNAME
     0-0-0/w STRC(117)   r     1 B$PLOVERKEY                0-0-0/w STRC(144)   r     1 B$TCB
     0-0-0/c ACHR        r     1 CHAR$CHAR                  0-0-0/d ASTR(3528)  r     1 F$DCB
     0-0-0/c ASTR(9)     r     1 F$NAME_                    0-0-0N  NULL        r     1 M$OF
     0-0-0/w ASTR(9)     r     1 T$C                        0-0-0/c ASTR(9)     r     1 T$C_UNAL
     0-0-0/h UBIN(18)    r     1 VY$HALF_A(0:0)
     0-0-0/w STRC(72)    r     1 VY$LLIST                   0-0-0/w STRC(3672)  r     1 VY$NODE
     0-0-0/w STRC(72)    r     1 VY$UTS
     0-0-0/w UBIN        r     1 VY$WORD_A(0:0)
     0-0-0/w STRC(72)    r     1 VYD$TMPLT                  0-0-0/w STRC        r     1 VYR$TMPLT
PL6.E3A0      #001=VYO$OBJECT File=VYO$OBJECT.:E05TSI                            WED 07/30/97 08:58 Page:183  


   Procedure VYO$OBJECT requires 1574 words for executable code.
   Procedure VYO$OBJECT requires 24 words of local(AUTO) storage.

    No errors detected in file VYO$OBJECT.:E05TSI    .
PL6.E3A0      #001=VYO$OBJECT File=VYO$OBJECT.:E05TSI                            WED 07/30/97 08:58 Page:184  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=VYO$OBJECT File=VYO$OBJECT.:E05TSI                            WED 07/30/97 08:58 Page:185  
          MINI XREF LISTING

ALL$
     11066**DCL     11551<>CALL    11552>>ASSIGN  11919<<ASSIGN  11930>>ASSIGN  12296>>ASSIGN
ALLOCATE$
     10917**DCL        14--PROC    11919>>ASSIGN
ALL_A
     11168**DCL     11701<<ASSIGN  11754<<ASSIGN  11830>>IF      11831<>CALL    11929<<ASSIGN  12004<<ASSIGN
     12297>>IF      12302<>CALL
ALL_TYPE
     11113**DCL     11702<<ASSIGN  11734>>IF      11734>>IF      11735>>ASSIGN  11735>>ASSIGN  11736>>ASSIGN
     11736>>ASSIGN  11738<>CALL    11740<>CALL    11759<>CALL    11829<<ASSIGN  11831<>CALL    11930<<ASSIGN
     11979>>IF      11979>>IF      11980>>ASSIGN  11980>>ASSIGN  11981>>ASSIGN  11981>>ASSIGN  11983<>CALL
     11991<>CALL    12056<>CALL    12296<<ASSIGN  12302<>CALL
ANSWER
     11146**DCL     11526<>CALL    11527>>IF      11812<>CALL    11813>>IF
A_DUP
     11514**LABEL   11508--CALLALT
A_DUP_DEFINE
     11801**LABEL   11795--CALLALT
B$ALT.CODE
     11476**DCL     11476--REDEF   11477--REDEF   11477--REDEF
B$ALT.ERR.ERR#
     11478**DCL     11478--REDEF   12799>>IF
B$ALT.EVID
     11477**DCL     11477--REDEF   11477--REDEF
B$DNAME
     10888**DCL     11771>>IF      11771>>IF
B$DNAME.COUNT
     10889**DCL     10896--IMP-SIZ 11504>>ASSIGN  11505>>ASSIGN  11771>>IF      11771>>IF      11782>>ASSIGN
     11783>>ASSIGN  11790>>ASSIGN  11791>>ASSIGN  11846>>ASSIGN  11847>>ASSIGN  11862>>ASSIGN  11863>>ASSIGN
     11879>>ASSIGN  11880>>ASSIGN  12032<<ASSIGN  12033>>ASSIGN
B$DNAME.TEXT
     10896**DCL     11505>>ASSIGN  11783>>ASSIGN  11791>>ASSIGN  11847>>ASSIGN  11863>>ASSIGN  11880>>ASSIGN
PL6.E3A0      #001=VYO$OBJECT File=VYO$OBJECT.:E05TSI                            WED 07/30/97 08:58 Page:186  
     12033<<ASSIGN
B$PLOVERKEY.KEYSIZ IN PROCEDURE READ_WRITE_PLOVER_RECORDS
     12647**DCL     12807>>DOWHILE
B$PLOVERKEY.NOTHD IN PROCEDURE READ_WRITE_PLOVER_RECORDS
     12650**DCL     12807>>DOWHILE
B$PLOVERKEY.UTS IN PROCEDURE READ_WRITE_PLOVER_RECORDS
     12652**DCL     12807>>DOWHILE 12810<<ASSIGN
B$TCB.ALT$
     11472**DCL     12799>>IF
B$TCB$
      5343**DCL     12799>>IF
BUFFER$
     11411**DCL     11410--IMP-PTR 11838<<ASSIGN  11841<>CALL    11849<>CALL    11854>>IF      11866>>ASSIGN
B_PLOVERKEY.KEYSIZ IN PROCEDURE READ_WRITE_PLOVER_RECORDS
     12617**DCL     12807>>DOWHILE
B_PLOVERKEY.NOTHD IN PROCEDURE READ_WRITE_PLOVER_RECORDS
     12620**DCL     12807>>DOWHILE
CHAR$CHAR
     11410**DCL     11854>>IF      11866>>ASSIGN
CNT IN PROCEDURE READ_WRITE_PLOVER_RECORDS
     12789**DCL     12806<<ASSIGN  12811<>CALL    12814<<ASSIGN
COMP_UTS
     11447**DCL     11659<<ASSIGN  11665>>ASSIGN
CURR$
     11069**DCL     11764<<ASSIGN  11765>>DOWHILE 11766>>ASSIGN  11821<<ASSIGN  11821>>ASSIGN  11843<<ASSIGN
     11844>>DOWHILE 11845>>ASSIGN  11890<<ASSIGN  11890>>ASSIGN
DEBUG_MAP
     11140**DCL     12401>>ASSIGN
DNAME$
     11412**DCL     11769<<ASSIGN  11771>>IF      11771>>IF
DN_START$
     11067**DCL     11500<<ASSIGN  11503>>ASSIGN
DONE IN PROCEDURE READ_WRITE_PLOVER_RECORDS
     12817**LABEL   12805--CALLALT 12813--CALLALT
DO_RETURN
     11895**LABEL   11486--CALLALT 11539--CALLALT
PL6.E3A0      #001=VYO$OBJECT File=VYO$OBJECT.:E05TSI                            WED 07/30/97 08:58 Page:187  
DUP_ERR
     12821**PROC    11516--CALL    11518--CALL    11803--CALL    11805--CALL
D_READ IN PROCEDURE READ_WRITE_DEBUG_RECORDS
     12471**LABEL   12584--GOTO
ER# IN PROCEDURE DUP_ERR
     12823**DCL     12821--PROC    12842<>CALL
ERR_LEVEL
     11124**DCL     12201<<ASSIGN  12206<>CALL    12215>>IF      12215<<ASSIGN  12215>>ASSIGN  12239<>CALL
ERR_WORD_DISP
     11179**DCL     12214<<ASSIGN  12231<>CALL
EXIT_LOOP
     11777**LABEL   11772--GOTO
F$DCB.ACTPOS
     11364**DCL     11364--REDEF
F$DCB.ARS#
     11338**DCL     11338--REDEF   12806>>ASSIGN  12814>>ASSIGN
F$DCB.ATTR
     11357**DCL     11358--REDEF
F$DCB.BORROW
     11372**DCL     11372--REDEF   11372--REDEF   11372--REDEF
F$DCB.DCBNAME.L
     11386**DCL     11386--IMP-SIZ
F$DCB.EOMCHAR#
     11342**DCL     11342--REDEF
F$DCB.FLDID
     11367**DCL     11367--REDEF
F$DCB.FORM$
     11361**DCL     11361--REDEF
F$DCB.FSECT
     11377**DCL     11377--REDEF
F$DCB.FSN#
     11354**DCL     11354--REDEF   11354--REDEF   11355--REDEF
F$DCB.HEADER$
     11360**DCL     11360--REDEF
F$DCB.IXTNSIZE#
     11358**DCL     11358--REDEF
PL6.E3A0      #001=VYO$OBJECT File=VYO$OBJECT.:E05TSI                            WED 07/30/97 08:58 Page:188  
F$DCB.LASTSTA$
     11347**DCL     11347--REDEF
F$DCB.LVL
     11373**DCL     11373--REDEF
F$DCB.NAME#.C
     11348**DCL     11348--REDEF
F$DCB.NOEOF
     11370**DCL     11370--REDEF
F$DCB.NRECS#
     11359**DCL     11359--REDEF
F$DCB.NRECX
     11378**DCL     11378--REDEF
F$DCB.OHDR
     11370**DCL     11370--REDEF
F$DCB.ORG#
     11353**DCL     11353--REDEF
F$DCB.PRECNO
     11376**DCL     11376--REDEF
F$DCB.RCSZ
     11382**DCL     11382--REDEF
F$DCB.RES#
     11349**DCL     11349--REDEF
F$DCB.SETX
     11361**DCL     11361--REDEF
F$DCB.TAB$
     11361**DCL     11361--REDEF
F$DCB.TDA
     11375**DCL     11376--REDEF
F$DCB.TYPE#
     11349**DCL     11555>>IF      11660>>IF
F$DCB.WSN#
     11349**DCL     11349--REDEF
F$NAME_.COUNT
     11172**DCL     11173--IMP-SIZ
FID$
     10915**DCL        14--PROC
PL6.E3A0      #001=VYO$OBJECT File=VYO$OBJECT.:E05TSI                            WED 07/30/97 08:58 Page:189  
FIRST
     10978**DCL     12105<<ASSIGN  12112<<ASSIGN  12155>>IF
FIRST_READ IN PROCEDURE READ_WRITE_REMAINING_RECORDS
     12107**LABEL   12155--GOTO
FPT_DELREC
     11402**DCL     11855<>CALL
FPT_DELREC.V
     11405**DCL     11402--DCLINIT
FPT_PRECORD
     11294**DCL     12156<>CALL
FPT_PRECORD.V
     11296**DCL     11294--DCLINIT
FPT_TIME
     11323**DCL     11487<>CALL
FPT_TIME.V
     11327**DCL     11323--DCLINIT
GET
     11122**DCL     11706<<ASSIGN  11734>>IF      11736>>ASSIGN  11738<>CALL    11740<>CALL    11759>>IF
     11759>>CALL    11934<<ASSIGN  11940<<ASSIGN  11979>>IF      11981>>ASSIGN  11983<>CALL    11991<>CALL
     12056>>IF      12056>>CALL
HAVE_PRIMARY
     10980**DCL     11483<<ASSIGN  12011>>DOWHILE 12013<<ASSIGN  12022>>IF
HB
     11147**DCL     11918<<ASSIGN  11920>>DOINDEX 12294>>DOINDEX
HEAD_INX
     11117**DCL     11703<<ASSIGN  11704>>ASSIGN  11705>>ASSIGN  11937<<ASSIGN  11938>>ASSIGN  11939>>ASSIGN
I
     11103**DCL     11104--REDEF   11695<<DOINDEX 11696>>ASSIGN  11697>>ASSIGN  11698>>ASSIGN  11699>>ASSIGN
     11700>>ASSIGN  11823<<DOINDEX 11824>>ASSIGN  11825>>ASSIGN  11826>>ASSIGN  11827>>ASSIGN  11828>>ASSIGN
     11920<<DOINDEX 11921>>ASSIGN  11925>>ASSIGN  11926>>ASSIGN  11927>>ASSIGN  11928>>ASSIGN  12294<<DOINDEX
     12295>>ASSIGN  12298>>ASSIGN  12299>>ASSIGN  12300>>ASSIGN  12301>>ASSIGN  12400<<DOINDEX 12405>>ASSIGN
     12406>>ASSIGN
INC
     11150**DCL     12043<<ASSIGN  12047<<ASSIGN  12049>>ASSIGN  12052>>ASSIGN
INC_P
     11879**LABEL   11849--CALLALT
PL6.E3A0      #001=VYO$OBJECT File=VYO$OBJECT.:E05TSI                            WED 07/30/97 08:58 Page:190  
IO_ERROR_DEBUG IN PROCEDURE READ_WRITE_DEBUG_RECORDS
     12511**LABEL   12472--CALLALT
IO_ERROR_FIRST IN PROCEDURE READ_WRITE_REMAINING_RECORDS
     12115**LABEL   12108--CALLALT
IO_ERROR_LD IN PROCEDURE READ_WRITE_REMAINING_RECORDS
     12142**LABEL   12185--GOTO
IO_ERROR_SUBSEQUENT IN PROCEDURE READ_WRITE_REMAINING_RECORDS
     12168**LABEL   12162--CALLALT
IO_SIZEW
     11123**DCL     12194<<ASSIGN  12383>>IF      12427>>IF      12458<>CALL    12460<<ASSIGN  12461>>ASSIGN
     12479<<ASSIGN  12480>>IF
ITEM$
     11070**DCL     11766<<ASSIGN  11771>>IF      11771>>IF      11782>>ASSIGN  11783>>ASSIGN  11783>>ASSIGN
     11790>>ASSIGN  11791>>ASSIGN  11791>>ASSIGN  11845<<ASSIGN  11846>>ASSIGN  11847>>ASSIGN  11847>>ASSIGN
     11862>>ASSIGN  11863>>ASSIGN  11863>>ASSIGN  11879>>ASSIGN  11880>>ASSIGN  11880>>ASSIGN
J
     11105**DCL     11106--REDEF   12397<<ASSIGN  12401>>ASSIGN  12407<<ASSIGN  12407>>ASSIGN  12410<<ASSIGN
     12415>>IF      12417>>ASSIGN  12419<>CALL    12421>>ASSIGN  12471<>CALL
K
     11107**DCL     11108--REDEF
L
     11109**DCL     11110--REDEF
LANG_ID
     11451**DCL     11651--CALLBLT 11651>>CALLBLT
LIST_HEADER
     11449**DCL     11591--ASSIGN
M$DELREC
      1615**DCL-ENT 11855--CALL
M$MERC
      1669**DCL-ENT 11683--CALL
M$OF$
      5760**DCL     11555>>IF      11660>>IF      12806>>ASSIGN  12814>>ASSIGN
M$PRECORD
      1617**DCL-ENT 12156--CALL
M$READ
      1614**DCL-ENT 12796--CALL    12805--CALL    12813--CALL
PL6.E3A0      #001=VYO$OBJECT File=VYO$OBJECT.:E05TSI                            WED 07/30/97 08:58 Page:191  
M$TIME
      1680**DCL-ENT 11487--CALL    11666--CALL
M$WRITE
      1614**DCL-ENT 11592--CALL    11674--CALL
MAP_IO_ERROR
     11683**LABEL   11592--CALLALT 11674--CALLALT
MERC_ERROR
     11688**LABEL   11683--CALLALT
MOVE_SIZE
     11467**DCL     11468--IMP-SIZ 11602<<ASSIGN  11603>>IF      11608>>IF      11610>>ASSIGN  11612<>CALL
     11615<>CALL    11625<>CALL    11630<<ASSIGN  11637<>CALL    11652<<ASSIGN  11653>>CALLBLT 11654>>IF
NAME$
     11068**DCL     11503<<ASSIGN  11504>>ASSIGN  11505>>ASSIGN  11505>>ASSIGN
NEW_VALUE
     11169**DCL     12024<<ASSIGN  12026>>IF      12028>>ASSIGN  12030<>CALL    12037>>ASSIGN  12038>>ASSIGN
NEXT_ONE
     11821**LABEL   11788--GOTO
NEXT_RECORD IN PROCEDURE READ_WRITE_REMAINING_RECORDS
     12162**LABEL   12129--GOTO    12157--GOTO    12241--GOTO    12247--GOTO    12266--GOTO
NOT_FOUND
     11555**LABEL   11551--CALLALT
NOT_READ
     11572**LABEL   11550--CALLALT
NO_DEBUG
     11623**LABEL   11615--CALLALT
NO_PLOVER_BIRTH IN PROCEDURE READ_WRITE_PLOVER_RECORDS
     12799**LABEL   12796--CALLALT
NPAGE
     11127**DCL     11740<>CALL    11991<>CALL
OLD_UTS
     11139**DCL     12279<<ASSIGN
OU_KEY$ IN PROCEDURE READ_WRITE_PLOVER_RECORDS
     12792**DCL     12646--IMP-PTR 12807>>DOWHILE 12807>>DOWHILE 12807>>DOWHILE 12810>>ASSIGN
P$
     11062**DCL     11609<<ASSIGN  11612<>CALL    11615<>CALL    11767<<ASSIGN  11768>>IF      11770>>DOWHILE
     11771>>IF      11771>>IF      11773<<ASSIGN  11773>>ASSIGN  11777>>IF      11777>>IF      12007<<ASSIGN
PL6.E3A0      #001=VYO$OBJECT File=VYO$OBJECT.:E05TSI                            WED 07/30/97 08:58 Page:192  
     12011>>DOWHILE 12012>>IF      12016>>ASSIGN  12018<<ASSIGN  12018>>ASSIGN  12027<<ASSIGN  12030<>CALL
     12032>>ASSIGN  12033>>ASSIGN  12033>>ASSIGN  12035>>ASSIGN  12038>>ASSIGN  12040<<ASSIGN  12050>>DOWHILE
     12051>>ASSIGN  12052<<ASSIGN  12052>>ASSIGN  12191<<ASSIGN  12214>>ASSIGN  12476<<ASSIGN
PAGE
     11120**DCL     11705<<ASSIGN  11709>>IF      11716<>CALL    11740<>CALL    11933<<ASSIGN  11939<<ASSIGN
     11945>>IF      11957<>CALL    11991<>CALL
PAGE#
     11167**DCL     12193<<ASSIGN  12344>>IF      12355<>CALL    12465<<ASSIGN  12469<<ASSIGN  12469>>ASSIGN
     12471<>CALL    12478<<ASSIGN
PAGE_A
     11114**DCL     12104<<ASSIGN  12399<<ASSIGN  12406<<ASSIGN  12460>>ASSIGN  12472<>CALL
PAGE_SIZE
     11125**DCL     12396<<ASSIGN  12404>>IF      12404<<ASSIGN  12409>>IF      12410>>ASSIGN
PLOVER_BIRTH IN PROCEDURE READ_WRITE_PLOVER_RECORDS
     12687**DCL     12728--DCLINIT 12729--DCLINIT 12803--CALL    12803--CALL
PLOVER_BIRTH_KEY IN PROCEDURE READ_WRITE_PLOVER_RECORDS
     12676**DCL     12726--DCLINIT 12727--DCLINIT 12802>>ASSIGN
PLOVER_BIRTH_KEY.UTS IN PROCEDURE READ_WRITE_PLOVER_RECORDS
     12682**DCL     12795<<ASSIGN
POST IN PROCEDURE READ_WRITE_REMAINING_RECORDS
     12271**LABEL   12170--GOTO    12190--GOTO
PRIMARY_NAME_DISP
     11149**DCL     12016<<ASSIGN  12036<<ASSIGN  12051>>ASSIGN
PSIZE
     11138**DCL     12403<<ASSIGN  12404>>IF      12404>>ASSIGN  12406>>ASSIGN
Q$
     11063**DCL     12049<<ASSIGN  12050>>DOWHILE 12149<<ASSIGN  12152<>CALL    12401<<ASSIGN  12402>>ASSIGN
     12403>>ASSIGN  12416<<ASSIGN  12419<>CALL    12578<<ASSIGN  12581<>CALL
READ_OF_SEQ IN PROCEDURE READ_WRITE_PLOVER_RECORDS
     12765**DCL     12805<>CALL    12813<>CALL
READ_OF_SEQ.STATION_ IN PROCEDURE READ_WRITE_PLOVER_RECORDS
     12768**DCL     12769--REDEF
READ_OF_SEQ.V IN PROCEDURE READ_WRITE_PLOVER_RECORDS
     12769**DCL     12765--DCLINIT
READ_OF_SEQ.V.DVBYTE.REREAD# IN PROCEDURE READ_WRITE_PLOVER_RECORDS
     12780**DCL     12780--REDEF
PL6.E3A0      #001=VYO$OBJECT File=VYO$OBJECT.:E05TSI                            WED 07/30/97 08:58 Page:193  
READ_OF_SEQ.V.INDX# IN PROCEDURE READ_WRITE_PLOVER_RECORDS
     12778**DCL     12778--REDEF
READ_PLOVER_BIRTH IN PROCEDURE READ_WRITE_PLOVER_RECORDS
     12726**DCL     12796<>CALL
READ_PLOVER_BIRTH.STATION_ IN PROCEDURE READ_WRITE_PLOVER_RECORDS
     12729**DCL     12730--REDEF
READ_PLOVER_BIRTH.V IN PROCEDURE READ_WRITE_PLOVER_RECORDS
     12730**DCL     12726--DCLINIT
READ_PLOVER_BIRTH.V.DVBYTE.REREAD# IN PROCEDURE READ_WRITE_PLOVER_RECORDS
     12741**DCL     12741--REDEF
READ_PLOVER_BIRTH.V.INDX# IN PROCEDURE READ_WRITE_PLOVER_RECORDS
     12739**DCL     12739--REDEF
READ_RECORD IN PROCEDURE READ_WRITE_REMAINING_RECORDS
     12190**LABEL   12113--GOTO
READ_WRITE_DEBUG_RECORDS
     12325**PROC    12252--CALL
READ_WRITE_PLOVER_RECORDS
     12601**PROC    12275--CALL
READ_WRITE_RECORDS
     11914**PROC    11498--CALL    11574--CALL    11691--CALL
READ_WRITE_REMAINING_RECORDS
     12083**PROC    11535--CALL    11575--CALL
REC_TYPE
     11112**DCL     11696<<ASSIGN  11697>>ASSIGN  11698>>ASSIGN  11699>>ASSIGN  11700>>ASSIGN  11701>>ASSIGN
     11702>>ASSIGN  11703>>ASSIGN  11708>>IF      11720<>CALL    11740<>CALL    11754>>ASSIGN  11755>>IF
     11824<<ASSIGN  11825>>ASSIGN  11826>>ASSIGN  11827>>ASSIGN  11828>>ASSIGN  11829>>ASSIGN  11830>>IF
     11831>>CALL    11921<<ASSIGN  11922>>IF      11925>>ASSIGN  11926>>ASSIGN  11927>>ASSIGN  11928>>ASSIGN
     11929>>ASSIGN  11930>>ASSIGN  11931>>IF      11937>>ASSIGN  11943>>DOCASE  11961<>CALL    11985>>IF
     11986>>IF      11987>>ASSIGN  11991<>CALL    12004>>ASSIGN  12008>>IF      12021>>IF      12021>>IF
     12021>>IF      12041>>IF      12295<<ASSIGN  12296>>ASSIGN  12297>>IF      12297>>IF      12298>>ASSIGN
     12299>>ASSIGN  12300>>ASSIGN  12301>>ASSIGN  12302>>CALL
RETRY
     11508**LABEL   11529--GOTO
RETRY_DEFINE
     11795**LABEL   11815--GOTO
RTYPE
PL6.E3A0      #001=VYO$OBJECT File=VYO$OBJECT.:E05TSI                            WED 07/30/97 08:58 Page:194  
     11121**DCL     12192<<ASSIGN  12243>>IF      12250>>IF      12250>>IF      12332>>IF      12427>>IF
     12438<>CALL    12460>>IF      12461>>ASSIGN  12461>>ASSIGN  12463>>DOWHILE 12464<<ASSIGN  12464>>ASSIGN
     12466>>IF      12471<>CALL    12472>>CALL    12477<<ASSIGN  12491<>CALL    12525<>CALL    12555<>CALL
SAVE_PREV_SIZE
     11416**DCL     11700<<ASSIGN  11828>>ASSIGN  11928<<ASSIGN  12301>>ASSIGN
SAVE_SIZE
     11415**DCL     11699<<ASSIGN  11827>>ASSIGN  11927<<ASSIGN  12300>>ASSIGN
SAVE_START$
     11413**DCL     11697<<ASSIGN  11825>>ASSIGN  11925<<ASSIGN  12298>>ASSIGN
SAVE_STOP$
     11414**DCL     11698<<ASSIGN  11826>>ASSIGN  11926<<ASSIGN  12299>>ASSIGN
SECT#
     11137**DCL     12195<<ASSIGN
SIZE
     11119**DCL     11499<<ASSIGN  11508<>CALL    11649<<ASSIGN  11650>>IF      11651>>CALLBLT 11762<<ASSIGN
     11795<>CALL
SKIP_DEBUG IN PROCEDURE READ_WRITE_DEBUG_RECORDS
     12379**LABEL   12394--GOTO    12452--GOTO
SOURCE
     10916**DCL        14--PROC    11991<>CALL
START$
     11073**DCL     11501<<ASSIGN  11502>>DOWHILE 11503>>ASSIGN  11533<<ASSIGN  11533>>ASSIGN  11735<<ASSIGN
     11738<>CALL    11740<>CALL    11756>>ASSIGN  11757>>ASSIGN  11980<<ASSIGN  11983<>CALL    11987>>ASSIGN
     11989>>ASSIGN  11991<>CALL    12007>>ASSIGN  12009>>ASSIGN  12010>>ASSIGN  12040>>ASSIGN  12049>>ASSIGN
T$C.COUNT
     10809**DCL     10810--IMP-SIZ
T$C_UNAL.COUNT
     10812**DCL     10813--IMP-SIZ
TAIL$
     11074**DCL     11550<>CALL    11551<>CALL
TOTAL
     11115**DCL     12103<<ASSIGN  12104>>ASSIGN  12398<<ASSIGN  12405<<ASSIGN  12461<<ASSIGN  12461>>ASSIGN
     12463>>DOWHILE
TSIZE
     11118**DCL     11550<>CALL    11570<>CALL    11704<<ASSIGN  11706>>ASSIGN  11707>>IF      11740<>CALL
     11932<<ASSIGN  11938<<ASSIGN  11940>>ASSIGN  11942>>IF      11991<>CALL    12402<<ASSIGN  12405>>ASSIGN
PL6.E3A0      #001=VYO$OBJECT File=VYO$OBJECT.:E05TSI                            WED 07/30/97 08:58 Page:195  
TSIZE_READ
     11128**DCL     11740<>CALL    11754>>ASSIGN  11757>>ASSIGN  11759>>IF      11759>>CALL    11991<>CALL
     12004>>ASSIGN  12006>>IF      12010>>ASSIGN  12049>>ASSIGN  12056>>IF      12056>>CALL
TXT IN PROCEDURE READ_WRITE_PLOVER_RECORDS
     12788**DCL     12767--DCLINIT 12768--DCLINIT 12791--DCLINIT 12804<<ASSIGN  12812<<ASSIGN
TXT$ IN PROCEDURE READ_WRITE_PLOVER_RECORDS
     12791**DCL     12811<>CALL
UTS_DATE
     11442**DCL     11434--DCLINIT 11435--DCLINIT 11670--CALLBLT 11670>>CALLBLT
UTS_T
     11443**DCL     11436--DCLINIT 11437--DCLINIT
UTS_T.H_M
     11444**DCL     11669--CALLBLT 11669>>CALLBLT
UTS_TEMP
     11446**DCL     11438--DCLINIT 11665<<ASSIGN
UTS_TIME
     11434**DCL     11666<>CALL
UTS_TIME.V
     11438**DCL     11434--DCLINIT
VERS_NUM
     10997**DCL     11653<<CALLBLT 11655>>CALLBLT 11657>>CALLBLT
VY$HALF_A
     10867**DCL     12402>>ASSIGN  12403>>ASSIGN
VY$LLIST.ITEM$
     10553**DCL     11766>>ASSIGN  11845>>ASSIGN
VY$LLIST.LINK$
     10552**DCL     11821>>ASSIGN  11890>>ASSIGN
VY$NODE.ADDR_START_A
     10364**DCL     10365--REDEF
VY$NODE.ADDR_STOP_A
     10369**DCL     10370--REDEF
VY$NODE.L_PREV_SIZE
     10422**DCL     10433--REDEF
VY$NODE.L_PREV_SIZE_A
     10433**DCL     11700>>ASSIGN  11828<<ASSIGN  11928>>ASSIGN  12301<<ASSIGN
VY$NODE.L_SC_START
PL6.E3A0      #001=VYO$OBJECT File=VYO$OBJECT.:E05TSI                            WED 07/30/97 08:58 Page:196  
     10441**DCL     10446--REDEF
VY$NODE.L_SC_STOP
     10447**DCL     10452--REDEF
VY$NODE.L_SIZE
     10410**DCL     10421--REDEF
VY$NODE.L_SIZE.DN
     10412**DCL     12036>>ASSIGN  12037<<ASSIGN  12037>>ASSIGN
VY$NODE.L_SIZE_A
     10421**DCL     11699>>ASSIGN  11827<<ASSIGN  11927>>ASSIGN  12300<<ASSIGN
VY$NODE.L_START
     10386**DCL     10397--REDEF
VY$NODE.L_START.DN$
     10388**DCL     11500>>ASSIGN  11769>>ASSIGN  12034>>IF      12035<<ASSIGN
VY$NODE.L_START_A$
     10397**DCL     11697>>ASSIGN  11825<<ASSIGN  11925>>ASSIGN  11986>>IF      11987<<ASSIGN  12298<<ASSIGN
VY$NODE.L_STOP
     10398**DCL     10409--REDEF
VY$NODE.L_STOP.DN$
     10400**DCL     12038<<ASSIGN
VY$NODE.L_STOP_A$
     10409**DCL     11698>>ASSIGN  11826<<ASSIGN  11926>>ASSIGN  12299<<ASSIGN
VY$NODE.PROMOTE_HEAD
     10453**DCL     10456--REDEF
VY$NODE.PROMOTE_TAIL
     10457**DCL     10460--REDEF
VY$NODE.START_PAGE#_A
     10374**DCL     10375--REDEF
VY$NODE.STOP_PAGE#_A
     10379**DCL     10380--REDEF
VY$TMPLT.A
     10780**DCL     10781--REDEF   10782--REDEF
VY$UTS.I
     10839**DCL     10842--REDEF
VY$UTS.I.COMPILER
     10841**DCL     11552>>ASSIGN
VY$WORD_A
PL6.E3A0      #001=VYO$OBJECT File=VYO$OBJECT.:E05TSI                            WED 07/30/97 08:58 Page:197  
     10866**DCL     11930>>ASSIGN  12296>>ASSIGN
VYA$GET
     11024**DCL-ENT 11612--CALL    11738--CALL    11841--CALL    11983--CALL    12030--CALL    12099--CALL
     12152--CALL    12419--CALL    12581--CALL
VYD$B2C
     11022**DCL-ENT 11637--CALL    11716--CALL    11720--CALL    11957--CALL    11961--CALL    12223--CALL
     12227--CALL    12231--CALL    12355--CALL    12438--CALL    12491--CALL    12525--CALL    12555--CALL
VYD$TMPLT
     10643**DCL     11533--ASSIGN  11757--ASSIGN  11773--ASSIGN  12010--ASSIGN  12018--ASSIGN  12043--ASSIGN
VYD$TMPLT.A
     10644**DCL     10645--REDEF   10646--REDEF   10673--REDEF   10679--REDEF   10682--REDEF
VYD$TMPLT.A_SBIN
     10645**DCL     12051<<ASSIGN
VYD$TMPLT.I.A
     10663**DCL     10664--REDEF
VYD$TMPLT.I.CST
     10667**DCL     10668--REDEF
VYD$TMPLT.I.I
     10665**DCL     10666--REDEF
VYD$TMPLT.I.NAME_DISP
     10659**DCL     10660--REDEF   11503>>ASSIGN  11771>>IF      11771>>IF      12016>>ASSIGN
VYD$TMPLT.I.NP
     10669**DCL     10670--REDEF
VYD$TMPLT.I.P
     10661**DCL     10662--REDEF   12012>>IF
VYD$TMPLT.I.SC#
     10654**DCL     10655--REDEF
VYE$ERRMSG
     11018**DCL-ENT 12799--CALL
VYE$ERROR
     11015**DCL-ENT 11495--CALL    11524--CALL    11547--CALL    11565--CALL    11728--CALL    11786--CALL
     11810--CALL    11871--CALL    11886--CALL    11973--CALL    12126--CALL    12142--CALL    12182--CALL
     12206--CALL    12239--CALL    12264--CALL    12340--CALL    12367--CALL    12379--CALL    12392--CALL
     12450--CALL    12503--CALL    12541--CALL    12571--CALL    12842--CALL
VYE$MERC
     11017**DCL-ENT 11688--CALL
PL6.E3A0      #001=VYO$OBJECT File=VYO$OBJECT.:E05TSI                            WED 07/30/97 08:58 Page:198  
VYF$FREE
     11025**DCL-ENT 11570--CALL    11625--CALL    11759--CALL    11831--CALL    11892--CALL    12056--CALL
     12271--CALL    12302--CALL
VYI$READ
     11034**DCL-ENT 11615--CALL    11849--CALL    12108--CALL    12162--CALL    12472--CALL
VYI$WRITE
     11035**DCL-ENT 12246--CALL    12284--CALL    12458--CALL
VYI$WRITE_C
     11036**DCL-ENT 11508--CALL    11795--CALL    12803--CALL    12811--CALL
VYK$KEY
     11033**DCL-ENT 11614--CALL    12107--CALL    12471--CALL
VYO$DEL_UNIT
     11044**DCL-ENT 11580--CALL
VYR$SAT.VALUE
     10748**DCL     10749--REDEF
VYR$TMPLT
     10710**DCL     12047--ASSIGN
VYR$TMPLT.ER
     10712**DCL     10718--REDEF   10723--REDEF   10728--REDEF
VYU$CHK_TARGET
     11039**DCL-ENT 11486--CALL    11539--CALL
VYU$FIND_UTS
     11040**DCL-ENT 11551--CALL
VYU$PREAD
     11032**DCL-ENT 11740--CALL    11991--CALL
VYU$READ_UTS
     11041**DCL-ENT 11550--CALL
VYY$YESNO
     11027**DCL-ENT 11526--CALL    11812--CALL
VY_BIAS.A
      5392**DCL      5392--REDEF
VY_CBUF.CHARS_A
      5383**DCL      5383--REDEF
VY_COMMAND
      5383**DCL     11484>>DOCASE  11922>>IF
VY_COPY_EXTRACT
PL6.E3A0      #001=VYO$OBJECT File=VYO$OBJECT.:E05TSI                            WED 07/30/97 08:58 Page:199  
      5750**DCL     11488>>IF      11489<<ASSIGN  11540>>IF      11541<<ASSIGN
VY_CTAB
      5747**DCL     11679<<ASSIGN
VY_CURR$
      5387**DCL     11697>>ASSIGN  11698>>ASSIGN  11699>>ASSIGN  11700>>ASSIGN  11740<>CALL    11825>>ASSIGN
     11826>>ASSIGN  11827>>ASSIGN  11828>>ASSIGN  11925>>ASSIGN  11926>>ASSIGN  11927>>ASSIGN  11928>>ASSIGN
     11986>>IF      11987>>ASSIGN  11991<>CALL    12034>>IF      12035>>ASSIGN  12036>>ASSIGN  12037>>ASSIGN
     12037>>ASSIGN  12038>>ASSIGN  12298>>ASSIGN  12299>>ASSIGN  12300>>ASSIGN  12301>>ASSIGN
VY_DEF_REC_A
      5705**DCL     11695--DOINDEX 11696>>ASSIGN  11823--DOINDEX 11824>>ASSIGN
VY_EBUF.CHARS_A
      5684**DCL      5685--REDEF
VY_ED_START$
      5744**DCL     11501>>ASSIGN  11694<<ASSIGN  11756<<ASSIGN  11767>>ASSIGN  11917<<ASSIGN  12009<<ASSIGN
VY_ED_STOP$
      5744**DCL     11502>>DOWHILE 11757<<ASSIGN  11770>>DOWHILE 11777>>IF      12010<<ASSIGN  12011>>DOWHILE
VY_EFIELD1
      5685**DCL     12836<<ASSIGN
VY_EFIELD1.CHARS
      5685**DCL      5685--REDEF   11648>>CALLBLT 11783<<ASSIGN  11863<<ASSIGN  11880<<ASSIGN
VY_EFIELD1.CHARS_A
      5685**DCL     11637<>CALL    11716<>CALL    11957<>CALL    12223<>CALL    12355<>CALL    12438<>CALL
     12491<>CALL    12525<>CALL    12555<>CALL
VY_EFIELD1.COUNT
      5685**DCL     11648>>CALLBLT 11782<<ASSIGN  11862<<ASSIGN  11879<<ASSIGN
VY_EFIELD2
      5686**DCL     11784<<ASSIGN  11864<<ASSIGN  11881<<ASSIGN
VY_EFIELD2.CHARS
      5686**DCL      5686--REDEF
VY_EFIELD2.CHARS_A
      5686**DCL     11720<>CALL    11961<>CALL    12227<>CALL
VY_EFIELD3.CHARS
      5687**DCL      5687--REDEF   11866<<ASSIGN
VY_EFIELD3.CHARS_A
      5687**DCL     12231<>CALL
VY_EFIELD3.COUNT
PL6.E3A0      #001=VYO$OBJECT File=VYO$OBJECT.:E05TSI                            WED 07/30/97 08:58 Page:200  
      5687**DCL     11865<<ASSIGN
VY_ERRORS
      5388**DCL      5390--REDEF
VY_ERRORS.CONFLICT_A
      5389**DCL      5390--REDEF
VY_ERRORS.UNSAT_A
      5388**DCL      5389--REDEF
VY_HEADER.DATE_C
      5692**DCL     11323--DCLINIT 11324--DCLINIT
VY_HEADER.DAY_C
      5691**DCL     11326--DCLINIT
VY_HEADER.TIME_C
      5692**DCL     11325--DCLINIT 11326--DCLINIT
VY_HEAD_INX
      5704**DCL     11703>>ASSIGN  11937>>ASSIGN
VY_IMAGE_DATA.CPAGE#_A
      5276**DCL      5277--REDEF
VY_IMAGE_DATA.NODE_A$
      5288**DCL      5289--REDEF
VY_IMAGE_DATA.START_A$
      5280**DCL      5281--REDEF
VY_IMAGE_DATA.STOP_A$
      5284**DCL      5285--REDEF
VY_IMAGE_PROC.CPAGE#_A
      5299**DCL      5300--REDEF
VY_IMAGE_PROC.NODE_A$
      5311**DCL      5312--REDEF
VY_IMAGE_PROC.START_A$
      5303**DCL      5304--REDEF
VY_IMAGE_PROC.STOP_A$
      5307**DCL      5308--REDEF
VY_IMAGE_ROS.CPAGE#_A
      5322**DCL      5323--REDEF
VY_IMAGE_ROS.NODE_A$
      5334**DCL      5335--REDEF
VY_IMAGE_ROS.START_A$
PL6.E3A0      #001=VYO$OBJECT File=VYO$OBJECT.:E05TSI                            WED 07/30/97 08:58 Page:201  
      5326**DCL      5327--REDEF
VY_IMAGE_ROS.STOP_A$
      5330**DCL      5331--REDEF
VY_INV_OWRITE
      5746**DCL     11506>>ASSIGN  11793>>ASSIGN
VY_IO_SIZEC
      5690**DCL     11410--IMP-SIZ 11854>>IF      11865>>ASSIGN  11866>>ASSIGN
VY_IO_SIZEW
      5690**DCL     12194>>ASSIGN  12196>>IF      12246<>CALL    12398>>ASSIGN  12399>>ASSIGN  12479>>ASSIGN
VY_IO_STATUS
      5690**DCL     12115>>DOCASE  12168>>DOCASE  12511>>DOCASE
VY_LAST_SC$
      5378**DCL     11989<<ASSIGN
VY_LINK_UTS
      5386**DCL     11327--DCLINIT 11552<<ASSIGN  11568<<ASSIGN  11572<<ASSIGN
VY_LIST_HEADER
      5744**DCL     11588>>IF      11589<<ASSIGN
VY_MAP_HDR.CHARS
      5749**DCL      5750--REDEF    5750--REDEF
VY_MAP_LIT_LO_FPT_WRITE
      5076**DCL     11592<>CALL
VY_MAP_LIT_LO_FPT_WRITE.BUF_
      5076**DCL     11591<<ASSIGN
VY_MAP_LIT_LO_FPT_WRITE.STATION_
      5078**DCL      5078--REDEF
VY_MAP_LIT_LO_FPT_WRITE.V.DVBYTE.VFC#
      5085**DCL      5085--REDEF
VY_MAP_LO_FPT_WRITE
      5045**DCL     11674<>CALL
VY_MAP_LO_FPT_WRITE.STATION_
      5047**DCL      5047--REDEF
VY_MAP_LO_FPT_WRITE.V.DVBYTE.VFC#
      5054**DCL      5054--REDEF
VY_MBUF.CHARS
      5748**DCL      5749--REDEF    5749--REDEF   11601<<ASSIGN  11648<<CALLBLT 11651<<CALLBLT 11655<<CALLBLT
     11657<<CALLBLT 11662<<CALLBLT 11664<<CALLBLT 11669<<CALLBLT 11670<<CALLBLT 11671<<CALLBLT 11678<<ASSIGN
PL6.E3A0      #001=VYO$OBJECT File=VYO$OBJECT.:E05TSI                            WED 07/30/97 08:58 Page:202  
VY_MBUF.CHARS_A
      5749**DCL     11620<<ASSIGN  11623<<ASSIGN  11628<<ASSIGN
VY_M_ALL
      5393**DCL     11608>>IF      11734>>IF      11837>>IF      11979>>IF      12026>>IF      12095>>IF
     12148>>IF      12415>>IF      12577>>IF
VY_M_BASE_PTR
      5394**DCL     11609>>ASSIGN  11735>>ASSIGN  11838>>ASSIGN  11980>>ASSIGN  12027>>ASSIGN  12096>>ASSIGN
     12149>>ASSIGN  12416>>ASSIGN  12578>>ASSIGN
VY_M_FREE
      5393**DCL     11608>>IF      11609>>ASSIGN  11610<<ASSIGN  11610>>ASSIGN  11734>>IF      11735>>ASSIGN
     11736<<ASSIGN  11736>>ASSIGN  11837>>IF      11838>>ASSIGN  11839<<ASSIGN  11839>>ASSIGN  11979>>IF
     11980>>ASSIGN  11981<<ASSIGN  11981>>ASSIGN  12026>>IF      12027>>ASSIGN  12028<<ASSIGN  12028>>ASSIGN
     12095>>IF      12096>>ASSIGN  12097<<ASSIGN  12097>>ASSIGN  12148>>IF      12149>>ASSIGN  12150<<ASSIGN
     12150>>ASSIGN  12415>>IF      12416>>ASSIGN  12417<<ASSIGN  12417>>ASSIGN  12577>>IF      12578>>ASSIGN
     12579<<ASSIGN  12579>>ASSIGN
VY_M_VECTOR.F
      5117**DCL      5121--REDEF
VY_M_VECTOR_DP.F
      5152**DCL      5156--REDEF
VY_O.DUPL_ATTCH
      5530**DCL      5534--REDEF
VY_O.MAP_A
      5529**DCL     11922>>IF      12021>>IF      12297>>IF
VY_O.MAP_ATTCH
      5518**DCL      5529--REDEF
VY_O.MAP_ATTCH.DEF
      5520**DCL     11690>>IF      12015<<ASSIGN  12023<<ASSIGN
VY_O.MAP_ATTCH.REF
      5521**DCL     11690>>IF      12014>>IF
VY_O.PRIMARY_OPTION
      5512**DCL      5517--REDEF
VY_O.PRIMARY_OPTION.DUPLICATE
      5514**DCL     11514>>DOCASE  11801>>DOCASE
VY_O.PRIMARY_OPTION.NODEBUG
      5516**DCL     12328>>IF
VY_O.SEV_ATTCH
PL6.E3A0      #001=VYO$OBJECT File=VYO$OBJECT.:E05TSI                            WED 07/30/97 08:58 Page:203  
      5535**DCL      5537--REDEF
VY_OD.DUPL_ATTCH
      5674**DCL      5678--REDEF
VY_OD.MAP_ATTCH
      5662**DCL      5673--REDEF
VY_OD.PRIMARY_OPTION
      5656**DCL      5661--REDEF
VY_OD.SEV_ATTCH
      5679**DCL      5681--REDEF
VY_OK.KOFSET
      5256**DCL     12227<>CALL
VY_OK.KPAGE#
      5255**DCL     12193>>ASSIGN  12478>>ASSIGN
VY_OK.KRTYPE
      5254**DCL     12192>>ASSIGN  12477>>ASSIGN
VY_OK.KSECT#
      5259**DCL     12195>>ASSIGN
VY_OK.KSTYPE
      5257**DCL     12223<>CALL
VY_OK.OUNAME
      5263**DCL     11784>>ASSIGN  11864>>ASSIGN  11881>>ASSIGN
VY_OK.OUNAME.CHARS
      5265**DCL     11508--CALL    11671>>CALLBLT 11795--CALL    11854>>IF      12033>>ASSIGN  12281>>CALLBLT
VY_OK.OUNAME.COUNT
      5264**DCL     11499>>ASSIGN  11671>>CALLBLT 11762>>ASSIGN  12024>>ASSIGN  12032>>ASSIGN  12280>>ASSIGN
VY_OL_KEY_BUF
      5184**DCL     12244<<ASSIGN  12456<<ASSIGN  12765--DCLINIT 12766--DCLINIT 12792--DCLINIT 12802<<ASSIGN
VY_OL_KEY_BUF.FORM0
      5185**DCL      5188--REDEF    5195--REDEF
VY_OL_KEY_BUF.FORM1.UTS
      5191**DCL     12245<<ASSIGN  12457<<ASSIGN
VY_OU_HEAD
      5371**DCL     12284--CALL    12284--CALL
VY_OU_HEAD.CMPLRID.ID
      5371**DCL     11649>>ASSIGN
VY_OU_HEAD.CMPLRID.VERS_LETTER
PL6.E3A0      #001=VYO$OBJECT File=VYO$OBJECT.:E05TSI                            WED 07/30/97 08:58 Page:204  
      5371**DCL     11655>>CALLBLT 11657>>CALLBLT
VY_OU_HEAD.CMPLRID.VERS_NUMBER
      5372**DCL     11652>>ASSIGN
VY_OU_HEAD.LB_SIZE
      5373**DCL     11602>>ASSIGN  12088>>ASSIGN  12103>>ASSIGN  12329<<ASSIGN
VY_OU_HEAD.PR_SIZE
      5373**DCL     12089>>IF      12089>>ASSIGN
VY_OU_HEAD.REC_A
      5373**DCL      5374--REDEF
VY_OU_HEAD.REC_A.PAGE
      5374**DCL     11705>>ASSIGN  11939>>ASSIGN
VY_OU_HEAD.REC_A.SIZE
      5373**DCL     11704>>ASSIGN  11938>>ASSIGN
VY_OU_HEAD.RL_SIZE
      5373**DCL     12090>>IF      12090>>ASSIGN
VY_OU_HEAD.SEVLEV
      5373**DCL     11630>>ASSIGN
VY_OU_HEAD.UTS
      5371**DCL     11551<>CALL    11568>>ASSIGN  11572>>ASSIGN  11580<>CALL    11659>>ASSIGN  12190>>IF
     12245>>ASSIGN  12279>>ASSIGN  12457>>ASSIGN  12795>>ASSIGN  12807>>DOWHILE 12810>>ASSIGN
VY_O_KEY_BUF
      5161**DCL     11402--DCLINIT 11403--DCLINIT 12244>>ASSIGN  12456>>ASSIGN  12836>>ASSIGN
VY_O_KEY_BUF.FORM0
      5162**DCL      5165--REDEF    5172--REDEF
VY_O_KEY_BUF.FORM0.CHARS
      5164**DCL     11505<<ASSIGN  11791<<ASSIGN  11847<<ASSIGN  12281<<CALLBLT
VY_O_KEY_BUF.FORM0.COUNT
      5163**DCL     11504<<ASSIGN  11790<<ASSIGN  11846<<ASSIGN  12280<<ASSIGN
VY_O_KEY_BUF.FORM2.UTS
      5175**DCL     12190>>IF
VY_O_KEY_BUF_L.FORM0
      5208**DCL      5211--REDEF    5218--REDEF
VY_PAR_UNWIND
      5743**DCL      5743--REDEF
VY_PASS1_ALL_TYPE
      5703**DCL     11702>>ASSIGN  11829>>ASSIGN
PL6.E3A0      #001=VYO$OBJECT File=VYO$OBJECT.:E05TSI                            WED 07/30/97 08:58 Page:205  
VY_PASS1_REC_TYPE
      5702**DCL     11918--ASSIGN  11921>>ASSIGN  12295>>ASSIGN
VY_PASS2_REF.OU.L_START
      5710**DCL      5711--REDEF
VY_PASS2_REF.OU.L_STOP
      5711**DCL      5712--REDEF
VY_PASS2_REF.OU.MAX
      5709**DCL      5710--REDEF
VY_PASS2_REF.OU.SIZE
      5712**DCL      5713--REDEF
VY_PASS2_REF.SAT.COUNT
      5716**DCL      5717--REDEF
VY_PASS2_REF.SAT.ENT_SIZE
      5718**DCL      5719--REDEF
VY_PASS2_REF.SAT.L_START
      5714**DCL      5715--REDEF
VY_PASS2_REF.SAT.L_STOP
      5715**DCL      5716--REDEF
VY_PASS2_REF.SAT.MAX
      5713**DCL      5714--REDEF
VY_PASS2_REF.UNSAT.L_START
      5720**DCL      5721--REDEF
VY_PASS2_REF.UNSAT.L_STOP
      5721**DCL      5722--REDEF
VY_PASS2_REF.UNSAT.L_WHERE
      5722**DCL      5723--REDEF
VY_PASS2_REF.UNSAT.MAX
      5719**DCL      5720--REDEF
VY_PASS2_REF.UNSAT.PAGE#
      5724**DCL      5725--REDEF
VY_PASS2_REF.UNSAT.SIZE
      5723**DCL      5724--REDEF
VY_PROGRAM_BIAS.A
      5391**DCL      5391--REDEF
VY_REC_BUF_SIZE
      5695**DCL     12088<<ASSIGN  12089>>IF      12089<<ASSIGN  12090>>IF      12090<<ASSIGN  12095>>IF
PL6.E3A0      #001=VYO$OBJECT File=VYO$OBJECT.:E05TSI                            WED 07/30/97 08:58 Page:206  
     12097>>ASSIGN  12099<>CALL    12108<>CALL    12148>>IF      12150>>ASSIGN  12152<>CALL    12154<<ASSIGN
     12154>>ASSIGN  12154>>ASSIGN  12162<>CALL    12271<>CALL    12409>>IF      12410>>ASSIGN  12421<<ASSIGN
     12421>>ASSIGN  12577>>IF      12579>>ASSIGN  12581<>CALL    12583<<ASSIGN  12583>>ASSIGN  12583>>ASSIGN
VY_REC_BUF_START$
      5695**DCL     12096<<ASSIGN  12099<>CALL    12108<>CALL    12162<>CALL    12191>>ASSIGN  12214>>ASSIGN
     12246<>CALL    12401>>ASSIGN  12458<>CALL    12472<>CALL    12476>>ASSIGN
VY_REC_SIZE_A
      5705**DCL     12427>>IF
VY_ROOT$
      5386**DCL     11500>>ASSIGN  11769>>ASSIGN
VY_RU_HEAD.DATA_SEGMENT
      5359**DCL      5359--REDEF
VY_RU_HEAD.L
      5355**DCL      5356--REDEF
VY_RU_HEAD.MAP_BITS
      5356**DCL      5358--REDEF
VY_RU_HEAD.PBIT
      5352**DCL      5352--REDEF
VY_RU_HEAD_BUF.DATA_SEGMENT
      5369**DCL      5369--REDEF
VY_RU_HEAD_BUF.L
      5364**DCL      5365--REDEF
VY_RU_HEAD_BUF.MAP_BITS
      5366**DCL      5368--REDEF
VY_RU_HEAD_BUF.PBIT
      5361**DCL      5362--REDEF
VY_R_KEY_BUF.FORM0
      5231**DCL      5235--REDEF    5241--REDEF
VY_SI_KEY_BUF.KEY
      5739**DCL      5739--REDEF
VY_SOURCE_COUNT
      5689**DCL     11213--IMP-SIZ 11215--IMP-SIZ
VY_SPC.B$.MINE
      5734**DCL      5735--REDEF
VY_SPC.B$.NAME
      5731**DCL      5731--REDEF
PL6.E3A0      #001=VYO$OBJECT File=VYO$OBJECT.:E05TSI                            WED 07/30/97 08:58 Page:207  
VY_SPC.B$.SKIP
      5733**DCL      5734--REDEF
VY_SPC.B$.VALUE
      5732**DCL      5733--REDEF
VY_SPC.SEG.NAME
      5726**DCL      5727--REDEF
VY_SPC.SEG.VALUE
      5727**DCL      5728--REDEF
VY_SYMBOL$
      5744**DCL     11764>>ASSIGN  11843>>ASSIGN
VY_TARGET_COUNT
      5689**DCL     11212--IMP-SIZ 11214--IMP-SIZ
VY_TSX0_OVERLAY.H
      5698**DCL      5699--REDEF
VY_UNWIND
      5743**DCL     11685>>UNWIND
WHERE$
     11072**DCL     11550<>CALL    11551<>CALL
WRITE_SWITCH
     10979**DCL     11506<<ASSIGN  11508<>CALL    11528<<ASSIGN  11793<<ASSIGN  11795<>CALL    11814<<ASSIGN
X
     11148**DCL     12042<<ASSIGN  12046<<ASSIGN  12051>>ASSIGN
