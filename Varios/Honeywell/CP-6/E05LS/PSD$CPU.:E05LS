VERSION E05

PL6.E3A0      #001=PSD$CPU File=PSD$CPU.:E05TSI                                  WED 07/30/97 04:25 Page:1    
        1        1        /*M*  PSD$CPU  Generate STATS' "CPU" display                                  */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* CLM=77,CRM=80,CRT=1,PLM=3,CTI=1,THI=2                                    */
        8        8        PSD$CPU: PROC;
        9        9        %INCLUDE CP_6;
       10       90        %INCLUDE PS_DATA_R;
       11     5386        %INCLUDE CP_6_SUBS;
       12     5926        %INCLUDE B$JIT;
       13     6216        %MACRO BEGIN_TABLE (NAME=*);
       14     6217        DCL 1 NAME CONSTANT SYMDEF,
       15     6218        %MEND;
       16     6219        %MACRO ITEM (VAR=NIL, INDEX=0, TITLE=' ', OFFSET=0,
       17     6220                     PCODE(ABS=0, DIFF=1, RATE=2, PERCENT=3)=0);
       18     6221           2 *,
       19     6222            3 VAR$ PTR ALIGNED INIT (ADDR(VAR)),
       20     6223            3 INDEX# UBIN BYTE UNAL INIT (INDEX),
       21     6224            3 OFFSET# UBIN BYTE UNAL INIT (OFFSET),
       22     6225            3 PCODE# UBIN BYTE UNAL INIT (PCODE),
       23     6226            3 * UBIN BYTE UNAL INIT (0),
       24     6227            3 TITLE# CHAR (20) UNAL INIT (TITLE),
       25     6228        %MEND;
       26     6229        %MACRO END_TABLE;
       27     6230            2 *,
       28     6231            3 * PTR INIT (ADDR(NIL)),
       29     6232            3 * SBIN BYTE UNAL INIT (-1);
       30     6233        %MEND;
       31     6234    1   DCL 1 PRINT_TBL BASED (PRINT$) UNAL,
       32     6235    1         2 VAR$ PTR ALIGNED,
       33     6236    1         2 INDEX# SBIN BYTE UNAL,
       34     6237    1         2 OFFSET# UBIN BYTE UNAL,
       35     6238    1         2 PCODE# UBIN BYTE UNAL,
       36     6239    1         2 * UBIN BYTE UNAL,
       37     6240    1         2 TITLE# CHAR (20);
PL6.E3A0      #001=PSD$CPU File=PSD$CPU.:E05TSI                                  WED 07/30/97 04:25 Page:2    
       38     6241
       39     6242    1   DCL PRINT$ PTR;
       40     6243    1   DCL TITLE (0:1) CHAR (20) STATIC;
       41     6244    1   DCL VALUE (0:15) UBIN WORD STATIC;
       42     6245    1   DCL 1 QVALUE (0:3) REDEF VALUE,
       43     6246    1         2 P1 BIT (72),
       44     6247    1         2 P2 BIT (72);
       45     6248    1   DCL 1 CPU_FORMAT CONSTANT,
       46     6249    1         2 * CHAR (0) INIT ('%20A  %4D.%1D %4D.%1D    '),
       47     6250    1         2 * CHAR (0) INIT ('%20A  %6D %6D');
       48     6251    1   DCL CPU_VECTORS (0:3) BIT (72) DALIGNED STATIC INIT ('0'B*0);
       49     6252    1   DCL 1 CPU_HEAD_FORMAT CONSTANT,
       50     6253    1         2 * CHAR (0) INIT ('%/%/%20X   %6A %6A    '),
       51     6254    1         2 * CHAR (0) INIT ('%20X  %6A %6A');
       52     6255    1   DCL CPU_HEAD (0:1) BIT(72) DALIGNED CONSTANT INIT (VECTOR(CPU_HEAD_STUFF)*2);
       53     6256    1   DCL 1 CPU_HEAD_STUFF CONSTANT,
       54     6257    1         2 * CHAR (6) INIT (' {all}'),
       55     6258    1         2 * CHAR (6) INIT ('{snap}');
       56     6259    1   DCL ALL_VALUE UBIN;
       57     6260    1   DCL SNAP_VALUE UBIN;
       58     6261    1   DCL OLD_VALUE UBIN;
       59     6262    1   DCL NEW_VALUE UBIN;
       60     6263    1   DCL PRINT_CODE UBIN;
       61     6264    1   DCL PR_NUM UBIN;
       62     6265    1   DCL P$ PTR;
       63     6266    1   DCL Q$ PTR;
       64     6267    1   DCL TEMP1 UBIN;
       65     6268    1   DCL B$JIT$ PTR SYMREF;
       66     6269        %INCLUDE XUF_ENTRY;
       67     6277    1   DCL PSD$SKIP ENTRY;
       68     6278    1   DCL PSD$EJECT ENTRY (1);
       69     6279    1   DCL PSL$LOCATE ENTRY (3);
       70     6280    1   DCL PSL$CHOMP ENTRY (5);
       71     6281        %EJECT;
PL6.E3A0      #001=PSD$CPU File=PSD$CPU.:E05TSI                                  WED 07/30/97 04:25 Page:3    
       72     6282        %BEGIN_TABLE (NAME=CPU_TABLE);
       73     6285        %ITEM (INDEX=P_UXEQTIME#,OFFSET=%M_BATCH#,PCODE=PERCENT,
       74     6286               TITLE='% batch execution');
       75     6295        %ITEM (VAR=PS_COLLECT.ETMF,TITLE='ETMF');
       76     6304        %ITEM (INDEX=P_USRVTIME#,OFFSET=%M_BATCH#,PCODE=PERCENT,
       77     6305               TITLE='% batch service');
       78     6314        %ITEM (VAR=PS_COLLECT.RT90,TITLE='90% response time');
       79     6323        %ITEM (INDEX=P_UXEQTIME#,OFFSET=%M_INT#,PCODE=PERCENT,
       80     6324               TITLE='% online execution');
       81     6333        %ITEM (VAR=PS_COLLECT.IOLOAD, TITLE='I/O load factor');
       82     6342        %ITEM (INDEX=P_USRVTIME#,OFFSET=%M_INT#,PCODE=PERCENT,
       83     6343               TITLE='% online service');
       84     6352        %ITEM (VAR=PS_COLLECT.USERS.BATCH,TITLE='# of batch users');
       85     6361        %ITEM (INDEX=P_UXEQTIME#,OFFSET=%M_GHOST#,PCODE=PERCENT,
       86     6362               TITLE='% ghost execution');
       87     6371        %ITEM (VAR=PS_COLLECT.USERS.INT,TITLE='# of online users');
       88     6380        %ITEM (INDEX=P_USRVTIME#,OFFSET=%M_GHOST#,PCODE=PERCENT,
       89     6381               TITLE='% ghost service');
       90     6390        %ITEM (VAR=PS_COLLECT.USERS.GHOST,TITLE='# of ghost users');
       91     6399        %ITEM (INDEX=P_UXEQTIME#,OFFSET=%M_TP#,PCODE=PERCENT,
       92     6400               TITLE='% TP execution');
       93     6409        %ITEM (VAR=PS_COLLECT.USERS.TP,TITLE='# of TP users');
       94     6418        %ITEM (INDEX=P_USRVTIME#,OFFSET=%M_TP#,PCODE=PERCENT,
       95     6419               TITLE='% TP service');
       96     6428        %ITEM (VAR=PS_COLLECT.IOS, TITLE='I/Os per minute', PCODE=RATE);
       97     6437        %ITEM (VAR=PS_COLLECT.MONXEQ,PCODE=PERCENT,TITLE='% monitor execution');
       98     6446        %ITEM (VAR=PS_COLLECT.SCHEDS,PCODE=RATE,TITLE='Schedules per minute');
       99     6455        %ITEM (VAR=PS_COLLECT.IDLWIO,PCODE=PERCENT,TITLE='% I/O wait');
      100     6464        %ITEM (INDEX=P_NINTS#,PCODE=RATE,TITLE='Interactions per min');
      101     6473        %ITEM (VAR=PS_COLLECT.IDLWRES,PCODE=PERCENT,TITLE='% resource wait');
      102     6482        %ITEM (VAR=PS_COLLECT.EVENTS,PCODE=RATE,TITLE='Events per minute');
      103     6491        %ITEM (VAR=PS_COLLECT.IDLWRESIO,PCODE=PERCENT,TITLE='% I/O&resource wait');
      104     6500        %ITEM (VAR=PS_COLLECT.CALCNT,PCODE=RATE,TITLE='PMMEs per minute');
      105     6509        %ITEM (VAR=PS_COLLECT.IDLE,PCODE=PERCENT,TITLE='% true idle');
      106     6518        %ITEM (VAR=PS_COLLECT.USEC_PER_PMME,TITLE='Avg. usec per PMME');
      107     6527        %ITEM (VAR=PS_COLLECT.TOTAL,PCODE=PERCENT,TITLE='Total');
      108     6536        %ITEM (INDEX=P_UPTIME#,TITLE='Minutes in interval',PCODE=DIFF);
PL6.E3A0      #001=PSD$CPU File=PSD$CPU.:E05TSI                                  WED 07/30/97 04:25 Page:4    
      109     6545        %END_TABLE;
      110     6550        %EJECT;
PL6.E3A0      #001=PSD$CPU File=PSD$CPU.:E05TSI                                  WED 07/30/97 04:25 Page:5    
      111     6551    1   FROBB: PROC (VALUE, UNITS, TENTHS);
      112     6552
      113     6553    2   DCL VALUE UBIN;
      114     6554    2   DCL VALUE_SBIN REDEF VALUE SBIN;
      115     6555    2   DCL UNITS UBIN;
      116     6556    2   DCL TENTHS UBIN;
      117     6557
      118     6558    2      UNITS = VALUE / 10;
      119     6559    2      TENTHS = MOD(VALUE_SBIN, 10);
      120     6560
      121     6561    2      RETURN;
      122     6562
      123     6563    2   END FROBB;
      124     6564        %EJECT;
PL6.E3A0      #001=PSD$CPU File=PSD$CPU.:E05TSI                                  WED 07/30/97 04:25 Page:6    
      125     6565    1      CALL PSD$EJECT (18) /* ensure that display fits on 1 page */;
      126     6566
      127     6567    1      CALL X$WRITE (PS_FDS, VECTOR(CPU_HEAD_FORMAT),
      128     6568    1       CPU_HEAD(0), CPU_HEAD(1));
      129     6569
      130     6570    1      PR_NUM = 0;
      131     6571
      132     6572    1      PRINT$ = ADDR(CPU_TABLE);
      133     6573
      134     6574    2      DO WHILE (PRINT_TBL.INDEX# ~= -1);
      135     6575
      136     6576    2         TITLE(PR_NUM) = PRINT_TBL.TITLE#;
      137     6577
      138     6578    2         IF PRINT_TBL.VAR$ = ADDR(NIL)
      139     6579    3           THEN DO;
      140     6580
      141     6581    3            TEMP1 = PRINT_TBL.INDEX#;
      142     6582
      143     6583    3            CALL PSL$LOCATE (TEMP1, P$, Q$);
      144     6584
      145     6585    3            NEW_VALUE = P$ -> BLOCK.DATA(PRINT_TBL.OFFSET#);
      146     6586
      147     6587    3            IF Q$ = ADDR(NIL)
      148     6588    3              THEN OLD_VALUE = 0;
      149     6589    3              ELSE OLD_VALUE = Q$ -> BLOCK.DATA(PRINT_TBL.OFFSET#);
      150     6590
      151     6591    3            END;
      152     6592
      153     6593    3           ELSE DO;
      154     6594
      155     6595    3            NEW_VALUE = PINCRW(PRINT_TBL.VAR$, PRINT_TBL.OFFSET#) -> SBIN_;
      156     6596
      157     6597    3            OLD_VALUE = PINCRW(ADDR(PS_OLD_COLLECT), PRINT_TBL.OFFSET# +
      158     6598    3             POFFW(PRINT_TBL.VAR$, ADDR(PS_COLLECT))) -> SBIN_;
      159     6599
      160     6600    3            END;
      161     6601
PL6.E3A0      #001=PSD$CPU File=PSD$CPU.:E05TSI                                  WED 07/30/97 04:25 Page:7    
      162     6602    2         PRINT_CODE = PRINT_TBL.PCODE#;
      163     6603
      164     6604    2         IF PRINT_CODE = PERCENT#
      165     6605    3           THEN DO;                 /* Fudge stuff to permit tenths of a percent */
      166     6606
      167     6607    3            OLD_VALUE = OLD_VALUE * 10;
      168     6608    3            NEW_VALUE = NEW_VALUE * 10;
      169     6609
      170     6610    3            END;
      171     6611
      172     6612    2         CALL PSL$CHOMP (OLD_VALUE, NEW_VALUE, PRINT_CODE, ALL_VALUE, SNAP_VALUE);
      173     6613
      174     6614    3         DO CASE (PR_NUM);
      175     6615
      176     6616    3          CASE (0 /* timing stuff in left column */);
      177     6617
      178     6618    3            CALL FROBB(ALL_VALUE, VALUE(0), VALUE(1));
      179     6619    3            CALL FROBB(SNAP_VALUE, VALUE(2), VALUE(3));
      180     6620
      181     6621    3          CASE (1 /* numerical stuff in right column */);
      182     6622
      183     6623    3            VALUE(4) = ALL_VALUE;
      184     6624    3            VALUE(5) = SNAP_VALUE;
      185     6625
      186     6626    3            CALL X$WRITE (PS_FDS, VECTOR(CPU_FORMAT),
      187     6627    3             VECTOR(TITLE(0)), VECTOR(QVALUE(0)),
      188     6628    3             VECTOR(TITLE(1)), VECTOR(QVALUE.P1(1)));
      189     6629
      190     6630    3          END;
      191     6631
      192     6632    2         PR_NUM = 1 - PR_NUM;
      193     6633
      194     6634    2         PRINT$ = PINCRW(PRINT$, SIZEW(PRINT_TBL));
      195     6635
      196     6636    2         END /* do while */;
      197     6637
      198     6638    1      CALL PSD$SKIP;
PL6.E3A0      #001=PSD$CPU File=PSD$CPU.:E05TSI                                  WED 07/30/97 04:25 Page:8    
      199     6639
      200     6640    1      RETURN;
      201     6641
      202     6642        %EJECT;
PL6.E3A0      #001=PSD$CPU File=PSD$CPU.:E05TSI                                  WED 07/30/97 04:25 Page:9    
      203     6643    1   PSD$RESOURCES: ENTRY;
      204     6644
      205     6645    1      RETURN;
      206     6646
      207     6647    1   END PSD$CPU;

PL6.E3A0      #001=PSD$CPU File=PSD$CPU.:E05TSI                                  WED 07/30/97 04:25 Page:10   
--  Include file information  --

   XUF_ENTRY.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT.:E05TOU  cannot be made into a system file and is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   KL_MACRO_C.:E05TOU  is referenced.
   KL_AFCN_C.:E05TOU  is referenced.
   P_FEP_M.:E05TOU  is referenced.
   K_ID_E.:E05TOU  is referenced.
   XU_FORMAT_C.:E05TOU  is referenced.
   PM_BUCKET_C.:E05TOU  is referenced.
   PS_SUBS_C.:E05TOU  is referenced.
   PS_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure PSD$CPU.

   Procedure PSD$CPU requires 158 words for executable code.
   Procedure PSD$CPU requires 24 words of local(AUTO) storage.

    No errors detected in file PSD$CPU.:E05TSI    .

PL6.E3A0      #001=PSD$CPU File=PSD$CPU.:E05TSI                                  WED 07/30/97 04:25 Page:11   

 Object Unit name= PSD$CPU                                    File name= PSD$CPU.:E05TOU
 UTS= JUL 30 '97 04:25:38.96 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1   DCB   even  none     0      0  M$LO
    2   DCB   even  none     0      0  M$DO
    3   DCB   even  none     0      0  M$SI
    4   DCB   even  none     0      0  F$LOG
    5   DCB   even  none     0      0  M$ME
    6   DCB   even  none     0      0  M$HLPCG
    7  RtLbCm even  none    30     36  PS_FDS
    8  RtLbCm even  none    32     40  PS_SELECT_RPN
    9  RtLbCm even  none    17     21  PS_STATS_RPN
   10  RtLbCm even  none    34     42  PS_STATS_BUCKET
   11   Data  even  none    34     42  PSD$CPU
   12  RoData even  UTS    225    341  PSD$CPU
   13   Proc  even  none   158    236  PSD$CPU
   14  RoData even  none    30     36  PSD$CPU

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
    13      0   yes            yes      Std        0  PSD$CPU
    13    233                  yes      Std        0  PSD$RESOURCES

  ****  Data defs  ****

 Sect OctLoc  Name                           Sect OctLoc  Name
   12     33  CPU_TABLE
PL6.E3A0      #001=PSD$CPU File=PSD$CPU.:E05TSI                                  WED 07/30/97 04:25 Page:12   

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       1 PSD$EJECT
         yes           Std      22 X$WRITE
         yes           Std       5 PSL$CHOMP
         yes           Std       3 PSL$LOCATE
         yes           Std       0 PSD$SKIP
                       nStd      0 X66_AUTO_0
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                                  M$LO                                  M$DO
     M$SI                                  F$LOG                                 M$ME
     M$HLPCG                               PS_BUFFER                             PS_COLLECT
     PS_OLD_COLLECT                        PS_STATS$                             B$JIT$
     B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     NULLSID                               ISSID
PL6.E3A0      #001=PSD$CPU File=PSD$CPU.:E05TSI                                  WED 07/30/97 04:25 Page:13   


        1        1        /*M*  PSD$CPU  Generate STATS' "CPU" display                                  */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* CLM=77,CRM=80,CRT=1,PLM=3,CTI=1,THI=2                                    */
        8        8        PSD$CPU: PROC;

      8 13 000000   000000 700200 xent  PSD$CPU      TSX0  ! X66_AUTO_0
        13 000001   000030 000000                    ZERO    24,0
        13 000002   000020 710000 13                 TRA     s:6565

        9        9        %INCLUDE CP_6;
       10       90        %INCLUDE PS_DATA_R;
       11     5386        %INCLUDE CP_6_SUBS;
       12     5926        %INCLUDE B$JIT;
       13     6216        %MACRO BEGIN_TABLE (NAME=*);
       14     6217        DCL 1 NAME CONSTANT SYMDEF,
       15     6218        %MEND;
       16     6219        %MACRO ITEM (VAR=NIL, INDEX=0, TITLE=' ', OFFSET=0,
       17     6220                     PCODE(ABS=0, DIFF=1, RATE=2, PERCENT=3)=0);
       18     6221           2 *,
       19     6222            3 VAR$ PTR ALIGNED INIT (ADDR(VAR)),
       20     6223            3 INDEX# UBIN BYTE UNAL INIT (INDEX),
       21     6224            3 OFFSET# UBIN BYTE UNAL INIT (OFFSET),
       22     6225            3 PCODE# UBIN BYTE UNAL INIT (PCODE),
       23     6226            3 * UBIN BYTE UNAL INIT (0),
       24     6227            3 TITLE# CHAR (20) UNAL INIT (TITLE),
       25     6228        %MEND;
       26     6229        %MACRO END_TABLE;
       27     6230            2 *,
       28     6231            3 * PTR INIT (ADDR(NIL)),
       29     6232            3 * SBIN BYTE UNAL INIT (-1);
       30     6233        %MEND;
       31     6234    1   DCL 1 PRINT_TBL BASED (PRINT$) UNAL,
PL6.E3A0      #001=PSD$CPU File=PSD$CPU.:E05TSI                                  WED 07/30/97 04:25 Page:14   
       32     6235    1         2 VAR$ PTR ALIGNED,
       33     6236    1         2 INDEX# SBIN BYTE UNAL,
       34     6237    1         2 OFFSET# UBIN BYTE UNAL,
       35     6238    1         2 PCODE# UBIN BYTE UNAL,
       36     6239    1         2 * UBIN BYTE UNAL,
       37     6240    1         2 TITLE# CHAR (20);
       38     6241
       39     6242    1   DCL PRINT$ PTR;
       40     6243    1   DCL TITLE (0:1) CHAR (20) STATIC;
       41     6244    1   DCL VALUE (0:15) UBIN WORD STATIC;
       42     6245    1   DCL 1 QVALUE (0:3) REDEF VALUE,
       43     6246    1         2 P1 BIT (72),
       44     6247    1         2 P2 BIT (72);
       45     6248    1   DCL 1 CPU_FORMAT CONSTANT,
       46     6249    1         2 * CHAR (0) INIT ('%20A  %4D.%1D %4D.%1D    '),
       47     6250    1         2 * CHAR (0) INIT ('%20A  %6D %6D');
       48     6251    1   DCL CPU_VECTORS (0:3) BIT (72) DALIGNED STATIC INIT ('0'B*0);
       49     6252    1   DCL 1 CPU_HEAD_FORMAT CONSTANT,
       50     6253    1         2 * CHAR (0) INIT ('%/%/%20X   %6A %6A    '),
       51     6254    1         2 * CHAR (0) INIT ('%20X  %6A %6A');
       52     6255    1   DCL CPU_HEAD (0:1) BIT(72) DALIGNED CONSTANT INIT (VECTOR(CPU_HEAD_STUFF)*2);
       53     6256    1   DCL 1 CPU_HEAD_STUFF CONSTANT,
       54     6257    1         2 * CHAR (6) INIT (' {all}'),
       55     6258    1         2 * CHAR (6) INIT ('{snap}');
       56     6259    1   DCL ALL_VALUE UBIN;
       57     6260    1   DCL SNAP_VALUE UBIN;
       58     6261    1   DCL OLD_VALUE UBIN;
       59     6262    1   DCL NEW_VALUE UBIN;
       60     6263    1   DCL PRINT_CODE UBIN;
       61     6264    1   DCL PR_NUM UBIN;
       62     6265    1   DCL P$ PTR;
       63     6266    1   DCL Q$ PTR;
       64     6267    1   DCL TEMP1 UBIN;
       65     6268    1   DCL B$JIT$ PTR SYMREF;
       66     6269        %INCLUDE XUF_ENTRY;
       67     6277    1   DCL PSD$SKIP ENTRY;
       68     6278    1   DCL PSD$EJECT ENTRY (1);
PL6.E3A0      #001=PSD$CPU File=PSD$CPU.:E05TSI                                  WED 07/30/97 04:25 Page:15   
       69     6279    1   DCL PSL$LOCATE ENTRY (3);
       70     6280    1   DCL PSL$CHOMP ENTRY (5);
       71     6281        %EJECT;
PL6.E3A0      #001=PSD$CPU File=PSD$CPU.:E05TSI                                  WED 07/30/97 04:25 Page:16   
       72     6282        %BEGIN_TABLE (NAME=CPU_TABLE);
       73     6285        %ITEM (INDEX=P_UXEQTIME#,OFFSET=%M_BATCH#,PCODE=PERCENT,
       74     6286               TITLE='% batch execution');
       75     6295        %ITEM (VAR=PS_COLLECT.ETMF,TITLE='ETMF');
       76     6304        %ITEM (INDEX=P_USRVTIME#,OFFSET=%M_BATCH#,PCODE=PERCENT,
       77     6305               TITLE='% batch service');
       78     6314        %ITEM (VAR=PS_COLLECT.RT90,TITLE='90% response time');
       79     6323        %ITEM (INDEX=P_UXEQTIME#,OFFSET=%M_INT#,PCODE=PERCENT,
       80     6324               TITLE='% online execution');
       81     6333        %ITEM (VAR=PS_COLLECT.IOLOAD, TITLE='I/O load factor');
       82     6342        %ITEM (INDEX=P_USRVTIME#,OFFSET=%M_INT#,PCODE=PERCENT,
       83     6343               TITLE='% online service');
       84     6352        %ITEM (VAR=PS_COLLECT.USERS.BATCH,TITLE='# of batch users');
       85     6361        %ITEM (INDEX=P_UXEQTIME#,OFFSET=%M_GHOST#,PCODE=PERCENT,
       86     6362               TITLE='% ghost execution');
       87     6371        %ITEM (VAR=PS_COLLECT.USERS.INT,TITLE='# of online users');
       88     6380        %ITEM (INDEX=P_USRVTIME#,OFFSET=%M_GHOST#,PCODE=PERCENT,
       89     6381               TITLE='% ghost service');
       90     6390        %ITEM (VAR=PS_COLLECT.USERS.GHOST,TITLE='# of ghost users');
       91     6399        %ITEM (INDEX=P_UXEQTIME#,OFFSET=%M_TP#,PCODE=PERCENT,
       92     6400               TITLE='% TP execution');
       93     6409        %ITEM (VAR=PS_COLLECT.USERS.TP,TITLE='# of TP users');
       94     6418        %ITEM (INDEX=P_USRVTIME#,OFFSET=%M_TP#,PCODE=PERCENT,
       95     6419               TITLE='% TP service');
       96     6428        %ITEM (VAR=PS_COLLECT.IOS, TITLE='I/Os per minute', PCODE=RATE);
       97     6437        %ITEM (VAR=PS_COLLECT.MONXEQ,PCODE=PERCENT,TITLE='% monitor execution');
       98     6446        %ITEM (VAR=PS_COLLECT.SCHEDS,PCODE=RATE,TITLE='Schedules per minute');
       99     6455        %ITEM (VAR=PS_COLLECT.IDLWIO,PCODE=PERCENT,TITLE='% I/O wait');
      100     6464        %ITEM (INDEX=P_NINTS#,PCODE=RATE,TITLE='Interactions per min');
      101     6473        %ITEM (VAR=PS_COLLECT.IDLWRES,PCODE=PERCENT,TITLE='% resource wait');
      102     6482        %ITEM (VAR=PS_COLLECT.EVENTS,PCODE=RATE,TITLE='Events per minute');
      103     6491        %ITEM (VAR=PS_COLLECT.IDLWRESIO,PCODE=PERCENT,TITLE='% I/O&resource wait');
      104     6500        %ITEM (VAR=PS_COLLECT.CALCNT,PCODE=RATE,TITLE='PMMEs per minute');
      105     6509        %ITEM (VAR=PS_COLLECT.IDLE,PCODE=PERCENT,TITLE='% true idle');
      106     6518        %ITEM (VAR=PS_COLLECT.USEC_PER_PMME,TITLE='Avg. usec per PMME');
      107     6527        %ITEM (VAR=PS_COLLECT.TOTAL,PCODE=PERCENT,TITLE='Total');
      108     6536        %ITEM (INDEX=P_UPTIME#,TITLE='Minutes in interval',PCODE=DIFF);
PL6.E3A0      #001=PSD$CPU File=PSD$CPU.:E05TSI                                  WED 07/30/97 04:25 Page:17   
      109     6545        %END_TABLE;
      110     6550        %EJECT;
PL6.E3A0      #001=PSD$CPU File=PSD$CPU.:E05TSI                                  WED 07/30/97 04:25 Page:18   
      111     6551    1   FROBB: PROC (VALUE, UNITS, TENTHS);

   6551 13 000003   200016 741300       FROBB        STX1  ! TEMP1+1,,AUTO

      112     6552
      113     6553    2   DCL VALUE UBIN;
      114     6554    2   DCL VALUE_SBIN REDEF VALUE SBIN;
      115     6555    2   DCL UNITS UBIN;
      116     6556    2   DCL TENTHS UBIN;
      117     6557
      118     6558    2      UNITS = VALUE / 10;

   6558 13 000004   200017 470500                    LDP0    @VALUE,,AUTO
        13 000005   000000 236100                    LDQ     0,,PR0
        13 000006   000001 772000                    QRL     1
        13 000007   000005 506007                    DIV     5,DL
        13 000010   200020 471500                    LDP1    @UNITS,,AUTO
        13 000011   100000 756100                    STQ     0,,PR1

      119     6559    2      TENTHS = MOD(VALUE_SBIN, 10);

   6559 13 000012   000000 236100                    LDQ     0,,PR0
        13 000013   000012 506007                    DIV     10,DL
        13 000014   200021 473500                    LDP3    @TENTHS,,AUTO
        13 000015   300000 755100                    STA     0,,PR3

      120     6560
      121     6561    2      RETURN;

   6561 13 000016   200016 221300                    LDX1  ! TEMP1+1,,AUTO
        13 000017   000001 702211                    TSX2  ! 1,X1

      122     6562
      123     6563    2   END FROBB;
      124     6564        %EJECT;
PL6.E3A0      #001=PSD$CPU File=PSD$CPU.:E05TSI                                  WED 07/30/97 04:25 Page:19   
      125     6565    1      CALL PSD$EJECT (18) /* ensure that display fits on 1 page */;

   6565 13 000020   000001 630400 14                 EPPR0   1
        13 000021   000017 631400 xsym               EPPR1   B_VECTNIL+15
        13 000022   000000 701000 xent               TSX1    PSD$EJECT
        13 000023   000000 011000                    NOP     0

      126     6566
      127     6567    1      CALL X$WRITE (PS_FDS, VECTOR(CPU_HEAD_FORMAT),

   6567 13 000024   000004 630400 14                 EPPR0   4
        13 000025   000022 631400 xsym               EPPR1   B_VECTNIL+18
        13 000026   000000 701000 xent               TSX1    X$WRITE
        13 000027   000000 011000                    NOP     0

      128     6568    1       CPU_HEAD(0), CPU_HEAD(1));
      129     6569
      130     6570    1      PR_NUM = 0;

   6570 13 000030   200012 450100                    STZ     PR_NUM,,AUTO

      131     6571
      132     6572    1      PRINT$ = ADDR(CPU_TABLE);

   6572 13 000031   000010 236000 14                 LDQ     8
        13 000032   200004 756100                    STQ     PRINT$,,AUTO

      133     6573
      134     6574    2      DO WHILE (PRINT_TBL.INDEX# ~= -1);

   6574 13 000033   000222 710000 13                 TRA     s:6636

      135     6575
      136     6576    2         TITLE(PR_NUM) = PRINT_TBL.TITLE#;

   6576 13 000034   200012 236100                    LDQ     PR_NUM,,AUTO
        13 000035   000024 402007                    MPY     20,DL
PL6.E3A0      #001=PSD$CPU File=PSD$CPU.:E05TSI                                  WED 07/30/97 04:25 Page:20   
        13 000036   200004 470500                    LDP0    PRINT$,,AUTO
        13 000037   040006 100500                    MLR     fill='040'O
        13 000040   000002 000024                    ADSC9   2,,PR0                   cn=0,n=20
        13 000041   000000 000024 11                 ADSC9   TITLE,Q                  cn=0,n=20

      137     6577
      138     6578    2         IF PRINT_TBL.VAR$ = ADDR(NIL)

   6578 13 000042   000000 236100                    LDQ     0,,PR0
        13 000043   000001 116000 xsym               CMPQ    B_VECTNIL+1
        13 000044   000103 601000 13                 TNZ     s:6595

      139     6579    3           THEN DO;

      140     6580
      141     6581    3            TEMP1 = PRINT_TBL.INDEX#;

   6581 13 000045   000001 236100                    LDQ     1,,PR0
        13 000046   000033 732000                    QRS     27
        13 000047   200015 756100                    STQ     TEMP1,,AUTO

      142     6582
      143     6583    3            CALL PSL$LOCATE (TEMP1, P$, Q$);

   6583 13 000050   200014 631500                    EPPR1   Q$,,AUTO
        13 000051   200024 451500                    STP1    @TENTHS+3,,AUTO
        13 000052   200013 633500                    EPPR3   P$,,AUTO
        13 000053   200023 453500                    STP3    @TENTHS+2,,AUTO
        13 000054   200015 634500                    EPPR4   TEMP1,,AUTO
        13 000055   200022 454500                    STP4    @TENTHS+1,,AUTO
        13 000056   200022 630500                    EPPR0   @TENTHS+1,,AUTO
        13 000057   000021 631400 xsym               EPPR1   B_VECTNIL+17
        13 000060   000000 701000 xent               TSX1    PSL$LOCATE
        13 000061   000000 011000                    NOP     0

      144     6584
      145     6585    3            NEW_VALUE = P$ -> BLOCK.DATA(PRINT_TBL.OFFSET#);
PL6.E3A0      #001=PSD$CPU File=PSD$CPU.:E05TSI                                  WED 07/30/97 04:25 Page:21   

   6585 13 000062   200004 470500                    LDP0    PRINT$,,AUTO
        13 000063   000001 220100                    LDX0    1,,PR0
        13 000064   000777 360003                    ANX0    511,DU
        13 000065   200013 471500                    LDP1    P$,,AUTO
        13 000066   100002 235110                    LDA     2,X0,PR1
        13 000067   200010 755100                    STA     NEW_VALUE,,AUTO

      146     6586
      147     6587    3            IF Q$ = ADDR(NIL)

   6587 13 000070   200014 236100                    LDQ     Q$,,AUTO
        13 000071   000001 116000 xsym               CMPQ    B_VECTNIL+1
        13 000072   000075 601000 13                 TNZ     s:6589

      148     6588    3              THEN OLD_VALUE = 0;

   6588 13 000073   200007 450100                    STZ     OLD_VALUE,,AUTO
        13 000074   000127 710000 13                 TRA     s:6602

      149     6589    3              ELSE OLD_VALUE = Q$ -> BLOCK.DATA(PRINT_TBL.OFFSET#);

   6589 13 000075   000001 220100                    LDX0    1,,PR0
        13 000076   000777 360003                    ANX0    511,DU
        13 000077   200014 473500                    LDP3    Q$,,AUTO
        13 000100   300002 235110                    LDA     2,X0,PR3
        13 000101   200007 755100                    STA     OLD_VALUE,,AUTO

      150     6590
      151     6591    3            END;

   6591 13 000102   000127 710000 13                 TRA     s:6602

      152     6592
      153     6593    3           ELSE DO;

      154     6594
PL6.E3A0      #001=PSD$CPU File=PSD$CPU.:E05TSI                                  WED 07/30/97 04:25 Page:22   
      155     6595    3            NEW_VALUE = PINCRW(PRINT_TBL.VAR$, PRINT_TBL.OFFSET#) -> SBIN_;

   6595 13 000103   000001 220100                    LDX0    1,,PR0
        13 000104   000777 360003                    ANX0    511,DU
        13 000105   000000 471500                    LDP1    0,,PR0
        13 000106   100000 235110                    LDA     0,X0,PR1
        13 000107   200010 755100                    STA     NEW_VALUE,,AUTO

      156     6596
      157     6597    3            OLD_VALUE = PINCRW(ADDR(PS_OLD_COLLECT), PRINT_TBL.OFFSET# +

   6597 13 000110   000011 236000 14                 LDQ     9
        13 000111   000022 772000                    QRL     18
        13 000112   200022 756100                    STQ     @TENTHS+1,,AUTO
        13 000113   000000 236100                    LDQ     0,,PR0
        13 000114   000022 772000                    QRL     18
        13 000115   200022 136100                    SBLQ    @TENTHS+1,,AUTO
        13 000116   200023 756100                    STQ     @TENTHS+2,,AUTO
        13 000117   000001 236100                    LDQ     1,,PR0
        13 000120   000022 772000                    QRL     18
        13 000121   000777 376007                    ANQ     511,DL
        13 000122   200024 756100                    STQ     @TENTHS+3,,AUTO
        13 000123   200023 236100                    LDQ     @TENTHS+2,,AUTO
        13 000124   200024 036100                    ADLQ    @TENTHS+3,,AUTO
        13 000125   000000 235006 xsym               LDA     PS_OLD_COLLECT,QL
        13 000126   200007 755100                    STA     OLD_VALUE,,AUTO

      158     6598    3             POFFW(PRINT_TBL.VAR$, ADDR(PS_COLLECT))) -> SBIN_;
      159     6599
      160     6600    3            END;

      161     6601
      162     6602    2         PRINT_CODE = PRINT_TBL.PCODE#;

   6602 13 000127   000001 236100                    LDQ     1,,PR0
        13 000130   000011 772000                    QRL     9
        13 000131   000777 376007                    ANQ     511,DL
PL6.E3A0      #001=PSD$CPU File=PSD$CPU.:E05TSI                                  WED 07/30/97 04:25 Page:23   
        13 000132   200011 756100                    STQ     PRINT_CODE,,AUTO

      163     6603
      164     6604    2         IF PRINT_CODE = PERCENT#

   6604 13 000133   000003 116007                    CMPQ    3,DL
        13 000134   000143 601000 13                 TNZ     s:6612

      165     6605    3           THEN DO;                 /* Fudge stuff to permit tenths of a percent */

      166     6606
      167     6607    3            OLD_VALUE = OLD_VALUE * 10;

   6607 13 000135   200007 236100                    LDQ     OLD_VALUE,,AUTO
        13 000136   000012 402007                    MPY     10,DL
        13 000137   200007 756100                    STQ     OLD_VALUE,,AUTO

      168     6608    3            NEW_VALUE = NEW_VALUE * 10;

   6608 13 000140   200010 236100                    LDQ     NEW_VALUE,,AUTO
        13 000141   000012 402007                    MPY     10,DL
        13 000142   200010 756100                    STQ     NEW_VALUE,,AUTO

      169     6609
      170     6610    3            END;

      171     6611
      172     6612    2         CALL PSL$CHOMP (OLD_VALUE, NEW_VALUE, PRINT_CODE, ALL_VALUE, SNAP_VALUE);

   6612 13 000143   200006 631500                    EPPR1   SNAP_VALUE,,AUTO
        13 000144   200026 451500                    STP1    @TENTHS+5,,AUTO
        13 000145   200005 633500                    EPPR3   ALL_VALUE,,AUTO
        13 000146   200025 453500                    STP3    @TENTHS+4,,AUTO
        13 000147   200011 634500                    EPPR4   PRINT_CODE,,AUTO
        13 000150   200024 454500                    STP4    @TENTHS+3,,AUTO
        13 000151   200010 635500                    EPPR5   NEW_VALUE,,AUTO
        13 000152   200023 455500                    STP5    @TENTHS+2,,AUTO
PL6.E3A0      #001=PSD$CPU File=PSD$CPU.:E05TSI                                  WED 07/30/97 04:25 Page:24   
        13 000153   200007 636500                    EPPR6   OLD_VALUE,,AUTO
        13 000154   200022 456500                    STP6    @TENTHS+1,,AUTO
        13 000155   200022 630500                    EPPR0   @TENTHS+1,,AUTO
        13 000156   000023 631400 xsym               EPPR1   B_VECTNIL+19
        13 000157   000000 701000 xent               TSX1    PSL$CHOMP
        13 000160   000000 011000                    NOP     0

      173     6613
      174     6614    3         DO CASE (PR_NUM);

   6614 13 000161   200012 235100                    LDA     PR_NUM,,AUTO
        13 000162   000002 115007                    CMPA    2,DL
        13 000163   000165 602005 13                 TNC     s:6614+4,AL
        13 000164   000214 710000 13                 TRA     s:6632
        13 000165   000167 710000 13                 TRA     s:6618
        13 000166   000204 710000 13                 TRA     s:6623

      175     6615
      176     6616    3          CASE (0 /* timing stuff in left column */);

      177     6617
      178     6618    3            CALL FROBB(ALL_VALUE, VALUE(0), VALUE(1));

   6618 13 000167   000012 237000 14                 LDAQ    10
        13 000170   200020 757100                    STAQ    @VALUE+1,,AUTO
        13 000171   200005 630500                    EPPR0   ALL_VALUE,,AUTO
        13 000172   200017 450500                    STP0    TEMP1+2,,AUTO
        13 000173   000003 701000 13                 TSX1    FROBB
        13 000174   000000 011000                    NOP     0

      179     6619    3            CALL FROBB(SNAP_VALUE, VALUE(2), VALUE(3));

   6619 13 000175   000014 237000 14                 LDAQ    12
        13 000176   200020 757100                    STAQ    @VALUE+1,,AUTO
        13 000177   200006 630500                    EPPR0   SNAP_VALUE,,AUTO
        13 000200   200017 450500                    STP0    TEMP1+2,,AUTO
        13 000201   000003 701000 13                 TSX1    FROBB
PL6.E3A0      #001=PSD$CPU File=PSD$CPU.:E05TSI                                  WED 07/30/97 04:25 Page:25   
        13 000202   000000 011000                    NOP     0
        13 000203   000214 710000 13                 TRA     s:6632

      180     6620
      181     6621    3          CASE (1 /* numerical stuff in right column */);

      182     6622
      183     6623    3            VALUE(4) = ALL_VALUE;

   6623 13 000204   200005 236100                    LDQ     ALL_VALUE,,AUTO
        13 000205   000016 756000 11                 STQ     VALUE+4

      184     6624    3            VALUE(5) = SNAP_VALUE;

   6624 13 000206   200006 235100                    LDA     SNAP_VALUE,,AUTO
        13 000207   000017 755000 11                 STA     VALUE+5

      185     6625
      186     6626    3            CALL X$WRITE (PS_FDS, VECTOR(CPU_FORMAT),

   6626 13 000210   000030 630400 14                 EPPR0   24
        13 000211   000024 631400 xsym               EPPR1   B_VECTNIL+20
        13 000212   000000 701000 xent               TSX1    X$WRITE
        13 000213   000000 011000                    NOP     0

      187     6627    3             VECTOR(TITLE(0)), VECTOR(QVALUE(0)),
      188     6628    3             VECTOR(TITLE(1)), VECTOR(QVALUE.P1(1)));
      189     6629
      190     6630    3          END;

      191     6631
      192     6632    2         PR_NUM = 1 - PR_NUM;

   6632 13 000214   000001 235007                    LDA     1,DL
        13 000215   200012 135100                    SBLA    PR_NUM,,AUTO
        13 000216   200012 755100                    STA     PR_NUM,,AUTO

PL6.E3A0      #001=PSD$CPU File=PSD$CPU.:E05TSI                                  WED 07/30/97 04:25 Page:26   
      193     6633
      194     6634    2         PRINT$ = PINCRW(PRINT$, SIZEW(PRINT_TBL));

   6634 13 000217   200004 236100                    LDQ     PRINT$,,AUTO
        13 000220   000007 036003                    ADLQ    7,DU
        13 000221   200004 756100                    STQ     PRINT$,,AUTO

      195     6635
      196     6636    2         END /* do while */;

   6636 13 000222   200004 470500                    LDP0    PRINT$,,AUTO
        13 000223   000001 236100                    LDQ     1,,PR0
        13 000224   777000 376003                    ANQ     -512,DU
        13 000225   777000 116003                    CMPQ    -512,DU
        13 000226   000034 601000 13                 TNZ     s:6576

      197     6637
      198     6638    1      CALL PSD$SKIP;

   6638 13 000227   000002 631400 xsym               EPPR1   B_VECTNIL+2
        13 000230   000000 701000 xent               TSX1    PSD$SKIP
        13 000231   000000 011000                    NOP     0

      199     6639
      200     6640    1      RETURN;

   6640 13 000232   000000 702200 xent               TSX2  ! X66_ARET

      201     6641
      202     6642        %EJECT;
PL6.E3A0      #001=PSD$CPU File=PSD$CPU.:E05TSI                                  WED 07/30/97 04:25 Page:27   
      203     6643    1   PSD$RESOURCES: ENTRY;

   6643 13 000233   000000 700200 xent  PSD$RESOURC* TSX0  ! X66_AUTO_0
        13 000234   000030 000000                    ZERO    24,0

      204     6644
      205     6645    1      RETURN;

   6645 13 000235   000000 702200 xent               TSX2  ! X66_ARET
      206     6646
      207     6647    1   END PSD$CPU;

PL6.E3A0      #001=PSD$CPU File=PSD$CPU.:E05TSI                                  WED 07/30/97 04:25 Page:28   
--  Include file information  --

   XUF_ENTRY.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT.:E05TOU  cannot be made into a system file and is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   KL_MACRO_C.:E05TOU  is referenced.
   KL_AFCN_C.:E05TOU  is referenced.
   P_FEP_M.:E05TOU  is referenced.
   K_ID_E.:E05TOU  is referenced.
   XU_FORMAT_C.:E05TOU  is referenced.
   PM_BUCKET_C.:E05TOU  is referenced.
   PS_SUBS_C.:E05TOU  is referenced.
   PS_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure PSD$CPU.
PL6.E3A0      #001=PSD$CPU File=PSD$CPU.:E05TSI                                  WED 07/30/97 04:25 Page:29   

 **** Variables and constants ****

  ****  Section 007 RtLmCm PS_FDS

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(1080)  r     1 PS_FDS

  ****  Section 011  Data  PSD$CPU

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

    12-0-0/w STRC(144)   r     1 QVALUE(0:3)                0-0-0/c CHAR(20)    r     1 TITLE(0:1)
    12-0-0/w UBIN        r     1 VALUE(0:15)

  ****  Section 012 RoData PSD$CPU

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c STRC(342)   r     1 CPU_FORMAT
    24-0-0/d BIT (72)    r     1 CPU_HEAD(0:1)
    12-0-0/c STRC(315)   r     1 CPU_HEAD_FORMAT           30-0-0/c STRC(108)   r     1 CPU_HEAD_STUFF
    33-0-0/w STRC(7128)  r     1 CPU_TABLE

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

    21-0-0/w PTR         r     1 @TENTHS                   20-0-0/w PTR         r     1 @UNITS
    17-0-0/w PTR         r     1 @VALUE                     5-0-0/w UBIN        r     1 ALL_VALUE
    10-0-0/w UBIN        r     1 NEW_VALUE                  7-0-0/w UBIN        r     1 OLD_VALUE
    13-0-0/w PTR         r     1 P$                         4-0-0/w PTR         r     1 PRINT$
    11-0-0/w UBIN        r     1 PRINT_CODE                12-0-0/w UBIN        r     1 PR_NUM
PL6.E3A0      #001=PSD$CPU File=PSD$CPU.:E05TSI                                  WED 07/30/97 04:25 Page:30   
    14-0-0/w PTR         r     1 Q$                         6-0-0/w UBIN        r     1 SNAP_VALUE
    15-0-0/w UBIN        r     1 TEMP1                     *0-0-0/w UBIN        r     1 TENTHS
    *0-0-0/w UBIN        r     1 UNITS                     *0-0-0/w UBIN        r     1 VALUE
    *0-0-0/w SBIN        r     1 VALUE_SBIN

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 B$JIT$                     0-0-0/c CHAR(140)   r     1 PS_BUFFER
     0-0-0/w STRC(936)   r     1 PS_COLLECT                 0-0-0/w STRC(936)   r     1 PS_OLD_COLLECT
     0-0-0/w PTR         r     1 PS_STATS$

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(108)   r     1 BLOCK                      0-0-0N  NULL        r     1 M$LO
     0-0-0/w STRC(252)   r     1 PRINT_TBL                  0-0-0/w SBIN        r     1 SBIN_
     0-0-0/c ASTR(9)     r     1 TEXTC


   Procedure PSD$CPU requires 158 words for executable code.
   Procedure PSD$CPU requires 24 words of local(AUTO) storage.

    No errors detected in file PSD$CPU.:E05TSI    .
PL6.E3A0      #001=PSD$CPU File=PSD$CPU.:E05TSI                                  WED 07/30/97 04:25 Page:31   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=PSD$CPU File=PSD$CPU.:E05TSI                                  WED 07/30/97 04:25 Page:32   
          MINI XREF LISTING

ALL_VALUE
      6259**DCL      6612<>CALL     6618<>CALL     6623>>ASSIGN
B$JIT.CPFLAGS1.SLEAZE
      6034**DCL      6034--REDEF
B$JIT.ERR.MID
      5941**DCL      5941--REDEF
B$JIT.JRESPEAK
      6102**DCL      6103--REDEF
B$JIT.ORIGINATOR_PORT.FROM_CR
      6211**DCL      6211--REDEF    6212--REDEF
B$JIT.PNR
      6115**DCL      6115--REDEF
B$JIT.TSLINE
      6209**DCL      6210--REDEF
B$JIT$
      6268**DCL      5935--IMP-PTR
BLOCK.DATA
      4918**DCL      6585>>ASSIGN   6589>>ASSIGN
CPU_FORMAT
      6248**DCL      6626--CALL
CPU_HEAD
      6255**DCL      6567<>CALL     6567<>CALL
CPU_HEAD_FORMAT
      6252**DCL      6567--CALL
CPU_HEAD_STUFF
      6256**DCL      6255--DCLINIT
CPU_TABLE
      6283**DCL      6572--ASSIGN
FROBB
      6551**PROC     6618--CALL     6619--CALL
NEW_VALUE
      6262**DCL      6585<<ASSIGN   6595<<ASSIGN   6608<<ASSIGN   6608>>ASSIGN   6612<>CALL
PL6.E3A0      #001=PSD$CPU File=PSD$CPU.:E05TSI                                  WED 07/30/97 04:25 Page:33   
OLD_VALUE
      6261**DCL      6588<<ASSIGN   6589<<ASSIGN   6597<<ASSIGN   6607<<ASSIGN   6607>>ASSIGN   6612<>CALL
P$
      6265**DCL      6583<>CALL     6585>>ASSIGN
PRINT$
      6242**DCL      6234--IMP-PTR  6572<<ASSIGN   6574>>DOWHILE  6576>>ASSIGN   6578>>IF       6581>>ASSIGN
      6585>>ASSIGN   6589>>ASSIGN   6595>>ASSIGN   6595>>ASSIGN   6597>>ASSIGN   6597>>ASSIGN   6602>>ASSIGN
      6634<<ASSIGN   6634>>ASSIGN
PRINT_CODE
      6263**DCL      6602<<ASSIGN   6604>>IF       6612<>CALL
PRINT_TBL
      6234**DCL      6634--ASSIGN
PRINT_TBL.INDEX#
      6236**DCL      6574>>DOWHILE  6581>>ASSIGN
PRINT_TBL.OFFSET#
      6237**DCL      6585>>ASSIGN   6589>>ASSIGN   6595>>ASSIGN   6597>>ASSIGN
PRINT_TBL.PCODE#
      6238**DCL      6602>>ASSIGN
PRINT_TBL.TITLE#
      6240**DCL      6576>>ASSIGN
PRINT_TBL.VAR$
      6235**DCL      6578>>IF       6595>>ASSIGN   6597>>ASSIGN
PR_NUM
      6264**DCL      6570<<ASSIGN   6576>>ASSIGN   6614>>DOCASE   6632<<ASSIGN   6632>>ASSIGN
PSD$EJECT
      6278**DCL-ENT  6565--CALL
PSD$SKIP
      6277**DCL-ENT  6638--CALL
PSL$CHOMP
      6280**DCL-ENT  6612--CALL
PSL$LOCATE
      6279**DCL-ENT  6583--CALL
PS_BUFFER
      4921**DCL      4956--DCLINIT  4958--DCLINIT
PS_COLLECT
      5073**DCL      6597--ASSIGN
PL6.E3A0      #001=PSD$CPU File=PSD$CPU.:E05TSI                                  WED 07/30/97 04:25 Page:34   
PS_COLLECT.CALCNT
      5076**DCL      5076--REDEF    6502--DCLINIT
PS_COLLECT.ETMF
      5076**DCL      6297--DCLINIT
PS_COLLECT.EVENTS
      5077**DCL      6484--DCLINIT
PS_COLLECT.IDLE
      5074**DCL      6511--DCLINIT
PS_COLLECT.IDLWIO
      5074**DCL      6457--DCLINIT
PS_COLLECT.IDLWRES
      5074**DCL      6475--DCLINIT
PS_COLLECT.IDLWRESIO
      5074**DCL      6493--DCLINIT
PS_COLLECT.IOLOAD
      5075**DCL      6335--DCLINIT
PS_COLLECT.IOS
      5077**DCL      6430--DCLINIT
PS_COLLECT.MONXEQ
      5074**DCL      6439--DCLINIT
PS_COLLECT.RT90
      5076**DCL      6316--DCLINIT
PS_COLLECT.SCHEDS
      5077**DCL      6448--DCLINIT
PS_COLLECT.TOTAL
      5075**DCL      6529--DCLINIT
PS_COLLECT.USEC_PER_PMME
      5076**DCL      6520--DCLINIT
PS_COLLECT.USERS.BATCH
      5075**DCL      6354--DCLINIT
PS_COLLECT.USERS.GHOST
      5075**DCL      6392--DCLINIT
PS_COLLECT.USERS.INT
      5075**DCL      6373--DCLINIT
PS_COLLECT.USERS.TP
      5075**DCL      6411--DCLINIT
PL6.E3A0      #001=PSD$CPU File=PSD$CPU.:E05TSI                                  WED 07/30/97 04:25 Page:35   
PS_COLLECT.USRSRV
      5073**DCL      5074--REDEF
PS_FDS
      4938**DCL      6567<>CALL     6626<>CALL
PS_HLPCGBUF.DSPMSK
      5333**DCL      5339--REDEF
PS_HLPCGBUF.SLCMSK
      5374**DCL      5381--REDEF
PS_OLD_COLLECT
      5077**DCL      6597--ASSIGN
PS_OLD_COLLECT.CALCNT
      5080**DCL      5081--REDEF
PS_OLD_COLLECT.USRSRV
      5078**DCL      5078--REDEF
PS_STATS$
      5082**DCL      5084--IMP-PTR
Q$
      6266**DCL      6583<>CALL     6587>>IF       6589>>ASSIGN
QVALUE
      6245**DCL      6626--CALL
QVALUE.P1
      6246**DCL      6626--CALL
SBIN_
      5086**DCL      6595>>ASSIGN   6597>>ASSIGN
SNAP_VALUE
      6260**DCL      6612<>CALL     6619<>CALL     6624>>ASSIGN
TEMP1
      6267**DCL      6581<<ASSIGN   6583<>CALL
TENTHS IN PROCEDURE FROBB
      6556**DCL      6551--PROC     6559<<ASSIGN
TEXTC.LEN
      5086**DCL      5086--IMP-SIZ
TITLE
      6243**DCL      6576<<ASSIGN   6626--CALL     6626--CALL
UNITS IN PROCEDURE FROBB
      6555**DCL      6551--PROC     6558<<ASSIGN
PL6.E3A0      #001=PSD$CPU File=PSD$CPU.:E05TSI                                  WED 07/30/97 04:25 Page:36   
VALUE
      6244**DCL      6245--REDEF    6618<>CALL     6618<>CALL     6619<>CALL     6619<>CALL     6623<<ASSIGN
      6624<<ASSIGN
VALUE IN PROCEDURE FROBB
      6553**DCL      6551--PROC     6554--REDEF    6558>>ASSIGN
VALUE_SBIN IN PROCEDURE FROBB
      6554**DCL      6559>>ASSIGN
X$WRITE
      6275**DCL-ENT  6567--CALL     6626--CALL
