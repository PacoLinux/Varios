

15:01 JUL 28 '97 KZ_CLM_E.:E05SI                                           1    
    1      /*M*     KZ_CLM_C - Common line manager connect/state/event equs   */
    2      /*T***********************************************************/
    3      /*T*                                                         */
    4      /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
    5      /*T*                                                         */
    6      /*T***********************************************************/
    7
    8      /**/
    9      /*
   10          Common Line Manager event codes
   11      */
   12      /**/
   13
   14          %EQU KZ#CLM_EVENT_LISTEN      = 0;  /* Await logon text        */
   15          %EQU KZ#CLM_EVENT_RQSLPR      = 1;  /* Request line profile    */
   16          %EQU KZ#CLM_EVENT_BLDCTX      = 2;  /* Line context received   */
   17          %EQU KZ#CLM_EVENT_CTXCMP      = 3;  /* Line context complete   */
   18          %EQU KZ#CLM_EVENT_LGNCMP      = 4;  /* VDH devices logged on   */
   19          %EQU KZ#CLM_EVENT_LINACK      = 5;  /* Line ACKed our slave bid*/
   20          %EQU KZ#CLM_EVENT_FINPOL      = 6;  /* Done polled setup       */
   21          %EQU KZ#CLM_EVENT_KILLED      = 7;  /* Admin kill request      */
   22          %EQU KZ#CLM_EVENT_DSABLD      = 8;  /* Admin disable request   */
   23          %EQU KZ#CLM_EVENT_DSCTRM      = 9;  /* Initiate disconnect     */
   24          %EQU KZ#CLM_EVENT_LINDSC      = 10; /* Finish line disconnect  */
   25          %EQU KZ#CLM_EVENT_DEVDSC      = 11; /* Finish dev disconnect   */
   26          %EQU KZ#CLM_EVENT_SUBCNC      = 12; /* Sub device connect msg  */
   27          %EQU KZ#CLM_EVENT_CNCRQS      = 13; /* Sub device test connect */
   28
   29      /**/
   30      /*
   31          Common Line Manager event equates
   32      */
   33      /**/
   34
   35          %EQU KZ#CLM_STATE_INTNUL      = 0;  /* Initial state, no logon */
   36          %EQU KZ#CLM_STATE_LISTEN      = 1;  /* Await logon text        */
   37          %EQU KZ#CLM_STATE_RQSLPR      = 2;  /* Request line profile    */
15:01 JUL 28 '97 KZ_CLM_E.:E05SI                                           2    
   38          %EQU KZ#CLM_STATE_BLDCTX      = 3;  /* Line context received   */
   39          %EQU KZ#CLM_STATE_CTXCMP      = 4;  /* End of line context     */
   40          %EQU KZ#CLM_STATE_INTPRO      = 5;  /* Initial state, autolog  */
   41          %EQU KZ#CLM_STATE_AUTORQS     = 6;  /* Request line profile    */
   42          %EQU KZ#CLM_STATE_AUTOBLD     = 7;  /* Line context received   */
   43          %EQU KZ#CLM_STATE_AUTOCTX     = 8;  /* End of line context     */
   44          %EQU KZ#CLM_STATE_AUTOCMP     = 9;  /* VDH devices logged on   */
   45          %EQU KZ#CLM_STATE_VAMOOSE     = 10; /* All connected           */
   46          %EQU KZ#CLM_STATE_DSCDEV      = 11; /* Initiate disconnect     */
   47          %EQU KZ#CLM_STATE_LINDONE     = 12; /* Finish line disconnect  */
   48          %EQU KZ#CLM_STATE_DSCPND1     = 13; /* Disconnect pending 1    */
   49          %EQU KZ#CLM_STATE_DSCPND2     = 14; /* Disconnect pending 2    */
   50          %EQU KZ#CLM_STATE_DEVDONE     = 15; /* Finish dev disconnect   */
   51          %EQU KZ#CLM_STATE_DEVCNC      = 16; /* Device connect message  */
   52          %EQU KZ#CLM_STATE_CNCRQS      = 17; /* Connect request         */
   53
   54      /**/
   55      /*
   56          3270 state codes...
   57      */
   58      /**/
   59
   60          %EQU KZ#3270_STATE_INIT       = 0;  /* Initial state for 3270  */
   61          %EQU KZ#3270_STATE_RQSCTR     = 1;  /* Request active contrlr  */
   62          %EQU KZ#3270_STATE_INITACK1   = 2;  /* Send ACK1 during init   */
   63          %EQU KZ#3270_STATE_INITACK0   = 3;  /* Send ACK0 during init   */
   64          %EQU KZ#3270_STATE_INITNAK    = 4;  /* Send NAK during init    */
   65          %EQU KZ#3270_STATE_INITEOT    = 5;  /* Send EOT after error    */
   66          %EQU KZ#3270_STATE_SPCPOLALL  = 6;  /* Specific poll all devs  */
   67          %EQU KZ#3270_STATE_SELPOL     = 7;  /* Select device           */
   68          %EQU KZ#3270_STATE_SPCPOL     = 8;  /* Specific poll all/one   */
   69          %EQU KZ#3270_STATE_GENPOL     = 9;  /* General poll all        */
   70          %EQU KZ#3270_STATE_1STSND     = 10; /* Send first data block   */
   71          %EQU KZ#3270_STATE_EVNSND     = 11; /* Send even data block    */
   72          %EQU KZ#3270_STATE_ODDSND     = 12; /* Send odd data block     */
   73                                              /* Spare - 13              */
   74                                              /* Spare - 14              */
15:01 JUL 28 '97 KZ_CLM_E.:E05SI                                           3    
   75                                              /* Spare - 15              */
   76                                              /* Spare - 16              */
   77                                              /* Spare - 17              */
   78          %EQU KZ#3270_STATE_1STENQ     = 18; /* Send ENQ to first ACK   */
   79          %EQU KZ#3270_STATE_ODDENQ     = 19; /* Send ENQ/wait for ACK1  */
   80          %EQU KZ#3270_STATE_EVNENQ     = 20; /* Send ENQ/wait for ACK0  */
   81          %EQU KZ#3270_STATE_GNACK1     = 21; /* Send ACK1 to odd block  */
   82          %EQU KZ#3270_STATE_GNACK0     = 22; /* Send ACK0 to even block */
   83          %EQU KZ#3270_STATE_ENQNAK     = 23; /* Send NAK to ENQ block   */
   84          %EQU KZ#3270_STATE_ODDNAK     = 24; /* Send NAK to odd block   */
   85          %EQU KZ#3270_STATE_EVNNAK     = 25; /* Send NAK to even block  */
   86
   87      /**/
   88      /*
   89          INIT state codes ....
   90      */
   91      /**/
   92
   93          %EQU KZ#INIT_STATE_INIT       = 0;  /* Init is init is init    */
   94          %EQU KZ#INIT_STATE_REDBID     = 26; /* Line is reading for bid */
   95          %EQU KZ#INIT_STATE_HSPMST     = 27; /* Line is to speak HASP   */
   96          %EQU KZ#INIT_STATE_BSCMST     = 28; /* Line is to speak BSC    */
   97
   98      /**/
   99      /*
  100          BSC state codes ...
  101      */
  102      /**/
  103
  104          %EQU KZ#BSC_STATE_INIT        = 0;
  105          %EQU KZ#BSC_STATE_LISTEN      = 43; /* Listen for bid          */
  106          %EQU KZ#BSC_STATE_DOWHAT      = 44; /* Decide what to do       */
  107          %EQU KZ#BSC_STATE_ACK0        = 45; /* Send ACK0               */
  108          %EQU KZ#BSC_STATE_WACK        = 46; /* Send defered WACK       */
  109          %EQU KZ#BSC_STATE_ACK1        = 47; /* Send ACK1               */
  110          %EQU KZ#BSC_STATE_NAK         = 48; /* Send NAK                */
  111          %EQU KZ#BSC_STATE_DNAK        = 49; /* Send defered NAK        */
15:01 JUL 28 '97 KZ_CLM_E.:E05SI                                           4    
  112          %EQU KZ#BSC_STATE_BID         = 50; /* Send ENQ as bid         */
  113          %EQU KZ#BSC_STATE_TTD         = 51; /* Send TTD                */
  114          %EQU KZ#BSC_STATE_ETB         = 52; /* Send ETB block          */
  115          %EQU KZ#BSC_STATE_ETX         = 53; /* Send ETX block          */
  116          %EQU KZ#BSC_STATE_XITSND      = 54; /* Return to control mode  */
  117          %EQU KZ#BSC_STATE_ENQERR      = 55; /* Retry with ENQ          */
  118          %EQU KZ#BSC_STATE_ENQ         = 56; /* Send ENQ to WACK        */
  119
  120      /**/
  121      /*
  122          HASP state codes ...
  123      */
  124      /**/
  125
  126          %EQU KZ#HASP_STATE_INIT       = 0;
  127          %EQU KZ#HASP_STATE_BID        = 29; /* Bid (SOH-ENQ) sent      */
  128          %EQU KZ#HASP_STATE_ACKBID     = 30; /* Acknowledge bid         */
  129          %EQU KZ#HASP_STATE_INTACK     = 31; /* Init time ACK           */
  130          %EQU KZ#HASP_STATE_INTBLK     = 32; /* Init time block         */
  131          %EQU KZ#HASP_STATE_INTNAK     = 33; /* Init time NAK           */
  132          %EQU KZ#HASP_STATE_STRT       = 34; /* All connected           */
  133          %EQU KZ#HASP_STATE_HSPACK     = 35; /* Received ACK0           */
  134          %EQU KZ#HASP_STATE_HSPBLK     = 36; /* Received a block        */
  135          %EQU KZ#HASP_STATE_HSPNAK     = 37; /* Received NAK            */
  136          %EQU KZ#3270_STATE_EOT        = 38; /* EOT received            */
  137          %EQU KZ#3270_STATE_LISTEN     = 39; /* Listen for poll         */
  138          %EQU KZ#3270_STATE_POL_RCVD   = 40; /* Poll received           */
  139          %EQU KZ#3270_STATE_TIMOUT     = 41; /* Time-out                */
  140          %EQU KZ#3270_STATE_SPCPOLCTR  = 42; /* Specific poll new ctr   */
  141
  142       /**/
  143      /*
  144          3270 Operation Codes
  145      */
  146      /**/
  147
  148          %EQU KZ#3270_OPR_GENPOL       =  1; /* General Poll            */
15:01 JUL 28 '97 KZ_CLM_E.:E05SI                                           5    
  149          %EQU KZ#3270_OPR_SPCPOLALL    =  2; /* Specific Poll all devs  */
  150          %EQU KZ#3270_OPR_SPCPOL       =  3; /* Specific Poll one dev   */
  151          %EQU KZ#3270_OPR_RQSCTR       =  4; /* Poll inactive controller */
  152          %EQU KZ#3270_OPR_SPCPOLCTR    =  5; /* Specific poll one ctr   */
  153
  154      /**/
  155      /*
  156          ERRLOG Codes
  157      */
  158      /**/
  159
  160          %EQU KZ#LIN_ERRLG_DSC         =  1; /* (KZP) Disconect */
  161          %EQU KZ#LIN_ERRLG_RTROK       =  2; /* (KZP) Successful error retry */
  162          %EQU KZ#LIN_ERRLG_TIMOUT      =  3; /* (KZP) Time-out */
  163
  164      /**/
  165      /*
  166          PRM Clock type codes
  167      */
  168      /**/
  169          %EQU KZ#CTBTYP_INP            =  1; /* Input */
  170          %EQU KZ#CTBTYP_OTP            =  2; /* Output */
  171          %EQU KZ#CTBTYP_DELAY          =  3; /* Delay */

