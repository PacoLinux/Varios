VERSION E05

PL6.E3A0      #001=OCS$SYNTAX File=OCS$SYNTAX.:E05TSI                            WED 07/30/97 04:06 Page:1    
        1        1        /*M* OCS$SYNTAX KEYIN's keyin parser and output block builder. */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* DMR,PLM=5,IND=5,CTI=5,SDI=5,MCL=10,CSI=0,ECI=0 */
        8        8        %SET LISTSUB='1'B;
        9        9        /*
       10       10        ***********************************************************************
       11       11           ###     ###     ###      #      ###    #   #   #   #   #####    ###    #   #
       12       12          #   #   #   #   #   #    ###    #   #   #   #   #   #     #     #   #   #   #
       13       13          #   #   #       #       # #     #        # #    ##  #     #     #   #    # #
       14       14          #   #   #        ###     ###     ###      #     # # #     #     #####     #
       15       15          #   #   #           #     # #       #     #     #  ##     #     #   #    # #
       16       16          #   #   #   #   #   #    ###    #   #     #     #   #     #     #   #   #   #
       17       17           ###     ###     ###      #      ###      #     #   #     #     #   #   #   #
       18       18        ***********************************************************************
       19       19                                                                          */
       20       20                                                /**/
       21       21        /*D*    Adding a new Keyin attribute (console privilege)
       22       22             -    Place the attribute in OCI_SUBS_C in the form
       23       23                  "K_privlege" and increase MAX_ATTR#.
       24       24             -    If it is for GOOSE, modify console entry for
       25       25                  GOOSE in OCK$KEYIN; otherwise, make sure SUPER knows
       26       26                  how to assign this attribute to a console.
       27       27             -    Adjust OCS_ATTRTAB in OCS$SYNTAX.
       28       28             -    Add lexeme sub to OCS_SUBS_C in the form
       29       29                  "XCATTR_privilege" and increase TOP_ATTR#.
       30       30             -    Place lexeme in OC_KEY_S in the form "LGL_privilege"
       31       31                  (Make sure the placement of the lexeme corresponds
       32       32                  exactly with the table OCS_ATTRTAB)
       33       33             -    Add sub to OC_SUBS_C in the form "M_privilege"            */
       34       34
       35       35                                                /**/
       36       36        OCS$SYNTAX: PROC;
       37       37                                                /**/
PL6.E3A0      #001=OCS$SYNTAX File=OCS$SYNTAX.:E05TSI                            WED 07/30/97 04:06 Page:2    
       38       38                                                /**/
       39       39    1   DCL OCS$CHKINP ENTRY;
       40       40    1   DCL OCS$UNEXP ENTRY(2);
       41       41    1   DCL OCS$ANLZ ENTRY(2);
       42       42    1   DCL OCC$CHKDIG ENTRY(2) ALTRET;
       43       43    1   DCL OCS$FAILURES ENTRY(1);
       44       44    1   DCL X$PARSE ENTRY(1) ALTRET;
       45       45        %INCLUDE XU_SUBS_C;
       46      137                                                /**/
       47      138        %INCLUDE XU_MACRO_C;
       48     3244        %INCLUDE XU_PERR_C;
       49     3435                                                /**/
       50     3436                                                /**/
       51     3437             %P_PCB         (NAME=OC_PCB,
       52     3438                                 STCLASS="STATIC SYMDEF",
       53     3439                                 R=NIL,
       54     3440                                 W=OCS_WORKSPACE,
       55     3441                                 U$=OCS$FAILURES,
       56     3442                                 WSZ=1024,
       57     3443                                 N#=0);
       58     3642                                           /* OC_PCB.ROOT$ is dynamically built
       59     3643                                                and points to COMMON.
       60     3644                                             OC_PCB.NCHARS is dynamically
       61     3645                                                updated from NWIO.ARS
       62     3646                                                                          */
       63     3647                                                /**/
       64     3648             %PARSE$SYM     (NAME=OC$OUTSYM,
       65     3649                                 STCLASS="BASED");
       66     3687                                                /**/
       67     3688             %PARSE$OUT     (NAME=OC$OUTBLK,
       68     3689                                 STCLASS="BASED");
       69     3734                                                /**/
       70     3735             %P$NODE        (NAME=P$NODE,
       71     3736                                 STCLASS="BASED");
       72     3830                                                /**/
       73     3831             %P$LIT         (NAME=P$LIT,
       74     3832                                 STCLASS="BASED");
PL6.E3A0      #001=OCS$SYNTAX File=OCS$SYNTAX.:E05TSI                            WED 07/30/97 04:06 Page:3    
       75     3885                                                /**/
       76     3886        %INCLUDE OCI_SUBS_C;
       77     3984                                                /**/
       78     3985        %INCLUDE OC_SUBS_C;
       79     4716                                                /**/
       80     4717        %INCLUDE OCS_SUBS_C;
       81     4934                                                /**/
       82     4935        %INCLUDE OCS_DATA_R;
       83     4952                                                /**/
       84     4953
       85     4954        %INCLUDE CP_6;
       86     5035        %INCLUDE CP_6_SUBS;
       87     5575        %INCLUDE OC_DAT_R;
       88     5736
       89     5737        %INCLUDE KC$CGBLK;
       90     5785             %KC$CGID      (FPTN=KC$CGID,
       91     5786                                 STCLASS=CONSTANT);
       92     5812             %KC$CGID       (FPTN=COMGROUP_FID,
       93     5813                                 STCLASS=BASED);
       94     5839
       95     5840
       96     5841             %FPT_FID       (FPTN=GET_COMGROUP_FID,
       97     5842                                 ACCT=CG_ACCT,
       98     5843                                 ASN=CG_ASN,
       99     5844                                 RES=CG_RES,
      100     5845                                 SN=CG_SN,
      101     5846                                 NAME=CG_NAME,
      102     5847                                 RESULTS=CG_RESULTS,
      103     5848                                 TEXTFID=SECOND_STRING);
      104     5871
      105     5872                  %VLP_ACCT (FPTN=CG_ACCT,
      106     5873                                 ACCT='        ');
      107     5886
      108     5887                  %VLP_NAME (FPTN=CG_NAME,
      109     5888                                 NAME='                               ');
      110     5915
      111     5916                  %VLR_FID  (FPTN=CG_RESULTS);
PL6.E3A0      #001=OCS$SYNTAX File=OCS$SYNTAX.:E05TSI                            WED 07/30/97 04:06 Page:4    
      112     5935
      113     5936                  %VLP_SN   (FPTN=CG_SN,
      114     5937                                 N=1);
      115     5950
      116     5951    1   DCL CG_ASN UBIN BYTE STATIC ALIGNED;
      117     5952    1   DCL CG_RES CHAR(4) STATIC;
      118     5953
      119     5954                                                /**/
      120     5955                                                /**/
      121     5956                                           /* Kludge up a pointer to COMMON
      122     5957                                                data page 0 */
      123     5958    1   DCL 1 COMMON STATIC DALIGNED,
      124     5959    1            2 KLUDGE,
      125     5960    1                 3 * UBIN(18) INIT(0) UNAL,
      126     5961    1                 3 * BIT(18) INIT('006005'O) UNAL,
      127     5962    1            2 PTR$ REDEF KLUDGE PTR;
      128     5963                                                /**/
      129     5964                                           /* Parsenode-chase and structure
      130     5965                                                creation pointers */
      131     5966    1   DCL OCS_SUBLK$ PTR STATIC;
      132     5967    1   DCL OCS_SUBLKO$ PTR STATIC;
      133     5968    1   DCL OCS_STRUCT$ PTR STATIC;
      134     5969                                                /**/
      135     5970                                           /* Local loop control and temp storage */
      136     5971    1   DCL MAX_BLKS UBIN WORD STATIC;
      137     5972    1   DCL LCOUNT UBIN WORD STATIC;
      138     5973    1   DCL I UBIN WORD STATIC;
      139     5974    1   DCL J SBIN WORD STATIC ALIGNED;
      140     5975    1   DCL PTR$ PTR STATIC;
      141     5976                                                /**/
      142     5977    1   DCL OCS_NAME (0:3 /* MAX_NAMES# */) UBIN WORD STATIC;
      143     5978                                                /**/
      144     5979                                                /* General use data items */
      145     5980    1   DCL BYTES_ UBIN WORD STATIC;
      146     5981    1   DCL CVSN_ UBIN WORD STATIC;
      147     5982    1   DCL OFFSET_ UBIN WORD STATIC;
      148     5983    1   DCL COUNT_ UBIN WORD STATIC;
PL6.E3A0      #001=OCS$SYNTAX File=OCS$SYNTAX.:E05TSI                            WED 07/30/97 04:06 Page:5    
      149     5984    1   DCL INDEX_ UBIN WORD STATIC;
      150     5985    1   DCL CASE_ UBIN WORD STATIC;
      151     5986    1   DCL CODE_ UBIN WORD STATIC;
      152     5987                                                /**/
      153     5988                                                /* Special TEXTC computation items */
      154     5989    1   DCL NWDS_ UBIN WORD STATIC;
      155     5990    1   DCL NTEMP_ UBIN WORD STATIC;
      156     5991                                                /**/
      157     5992                                           /* String-conversion and manipulation
      158     5993                                                data areas */
      159     5994    1   DCL PLUS CHAR(1) INIT ('+') STATIC UNAL;
      160     5995    1   DCL MINUS CHAR(1) INIT ('-') STATIC UNAL;
      161     5996    1   DCL OCS_NUMC UBIN HALF STATIC UNAL;
      162     5997    1   DCL SECOND_STRING CHAR(64) STATIC;
      163     5998    1   DCL SEC_STRING (0:63) REDEF SECOND_STRING UBIN BYTE UNAL;
      164     5999    1   DCL SECC_STRING (0:63) REDEF SECOND_STRING CHAR(1) UNAL;
      165     6000    1   DCL SECOND$STRING BASED CHAR(OCS_NUMC) CALIGNED;
      166     6001    1   DCL PASS_TWSN CHAR(8) STATIC UNAL;
      167     6002    1   DCL OCS_CONVERTED UBIN WORD ALIGNED STATIC;
      168     6003    1   DCL OCS_CONVERTEDS SBIN WORD ALIGNED STATIC;
      169     6004                                                /**/
      170     6005        %EJECT;
PL6.E3A0      #001=OCS$SYNTAX File=OCS$SYNTAX.:E05TSI                            WED 07/30/97 04:06 Page:6    
      171     6006                                                /**/
      172     6007                                           /* XLATE table for lc to uc conversion */
      173     6008                                                /**/
      174     6009    1   DCL OCS_XTAB1 (0:127) UBIN BYTE UNAL STATIC INIT (
      175     6010    1   0*48,
      176     6011    1   ASCBIN('0'),
      177     6012    1   ASCBIN('1'),
      178     6013    1   ASCBIN('2'),
      179     6014    1   ASCBIN('3'),
      180     6015    1   ASCBIN('4'),
      181     6016    1   ASCBIN('5'),
      182     6017    1   ASCBIN('6'),
      183     6018    1   ASCBIN('7'),
      184     6019    1   ASCBIN('8'),
      185     6020    1   ASCBIN('9'),
      186     6021    1   0*6,
      187     6022    1   0,
      188     6023    1   ASCBIN('A'),
      189     6024    1   ASCBIN('B'),
      190     6025    1   ASCBIN('C'),
      191     6026    1   ASCBIN('D'),
      192     6027    1   ASCBIN('E'),
      193     6028    1   ASCBIN('F'),
      194     6029    1   ASCBIN('G'),
      195     6030    1   ASCBIN('H'),
      196     6031    1   ASCBIN('I'),
      197     6032    1   ASCBIN('J'),
      198     6033    1   ASCBIN('K'),
      199     6034    1   ASCBIN('L'),
      200     6035    1   ASCBIN('M'),
      201     6036    1   ASCBIN('N'),
      202     6037    1   ASCBIN('O'),
      203     6038    1   ASCBIN('P'),
      204     6039    1   ASCBIN('Q'),
      205     6040    1   ASCBIN('R'),
      206     6041    1   ASCBIN('S'),
      207     6042    1   ASCBIN('T'),
PL6.E3A0      #001=OCS$SYNTAX File=OCS$SYNTAX.:E05TSI                            WED 07/30/97 04:06 Page:7    
      208     6043    1   ASCBIN('U'),
      209     6044    1   ASCBIN('V'),
      210     6045    1   ASCBIN('W'),
      211     6046    1   ASCBIN('X'),
      212     6047    1   ASCBIN('Y'),
      213     6048    1   ASCBIN('Z'),
      214     6049    1   0*6,
      215     6050    1   ASCBIN('A'),
      216     6051    1   ASCBIN('B'),
      217     6052    1   ASCBIN('C'),
      218     6053    1   ASCBIN('D'),
      219     6054    1   ASCBIN('E'),
      220     6055    1   ASCBIN('F'),
      221     6056    1   ASCBIN('G'),
      222     6057    1   ASCBIN('H'),
      223     6058    1   ASCBIN('I'),
      224     6059    1   ASCBIN('J'),
      225     6060    1   ASCBIN('K'),
      226     6061    1   ASCBIN('L'),
      227     6062    1   ASCBIN('M'),
      228     6063    1   ASCBIN('N'),
      229     6064    1   ASCBIN('O'),
      230     6065    1   ASCBIN('P'),
      231     6066    1   ASCBIN('Q'),
      232     6067    1   ASCBIN('R'),
      233     6068    1   ASCBIN('S'),
      234     6069    1   ASCBIN('T'),
      235     6070    1   ASCBIN('U'),
      236     6071    1   ASCBIN('V'),
      237     6072    1   ASCBIN('W'),
      238     6073    1   ASCBIN('X'),
      239     6074    1   ASCBIN('Y'),
      240     6075    1   ASCBIN('Z'),
      241     6076    1   0*5);
      242     6077                                                /**/
      243     6078                                           /* Create "mask" templates to store
      244     6079                                                and manipulate various sized
PL6.E3A0      #001=OCS$SYNTAX File=OCS$SYNTAX.:E05TSI                            WED 07/30/97 04:06 Page:8    
      245     6080                                                fields under pointer control */
      246     6081    1   DCL OCS$T1 BASED CHAR(1) CALIGNED;
      247     6082    1   DCL OCS$T2 BASED CHAR(2) CALIGNED;
      248     6083    1   DCL OCS$T3 BASED CHAR(3) CALIGNED;
      249     6084    1   DCL OCS$T4 BASED CHAR(4) CALIGNED;
      250     6085    1   DCL OCS$T6 BASED CHAR(6) CALIGNED;
      251     6086    1   DCL OCS$T8 BASED CHAR(8) CALIGNED;
      252     6087    1   DCL OCS$T12 BASED CHAR(12) CALIGNED;
      253     6088    1   DCL OCS$T16 BASED CHAR(16) CALIGNED;
      254     6089                                                /**/
      255     6090    1   DCL 1 OCS$2T8 BASED CALIGNED,
      256     6091    1            2 T81 CHAR(8) CALIGNED,
      257     6092    1            2 T82 CHAR(8) CALIGNED;
      258     6093                                                /**/
      259     6094    1   DCL 1 OCS$2B72 BASED CALIGNED,
      260     6095    1            2 B721 BIT(72) CALIGNED,
      261     6096    1            2 B722 BIT(72) CALIGNED;
      262     6097                                                /**/
      263     6098                                                /**/
      264     6099    1   DCL 1 OCS$TN BASED CALIGNED,
      265     6100    1            2 COUNT UBIN BYTE CALIGNED,
      266     6101    1            2 TEXT CHAR(OCS$TN.COUNT) CALIGNED;
      267     6102                                                /**/
      268     6103    1   DCL OCS$D1 BASED UBIN BYTE CALIGNED;
      269     6104    1   DCL OCS$D2 BASED UBIN HALF CALIGNED;
      270     6105    1   DCL OCS$D3 BASED UBIN(27) CALIGNED;
      271     6106    1   DCL OCS$D4 BASED UBIN WORD CALIGNED;
      272     6107                                                /**/
      273     6108    1   DCL OCS$DS1 BASED SBIN BYTE CALIGNED;
      274     6109    1   DCL OCS$DS2 BASED SBIN HALF CALIGNED;
      275     6110    1   DCL OCS$DS3 BASED SBIN(27) CALIGNED;
      276     6111    1   DCL OCS$DS4 BASED SBIN WORD CALIGNED;
      277     6112                                                /**/
      278     6113    1   DCL OCS$B2 BASED BIT(18) CALIGNED;
      279     6114                                                /**/
      280     6115                                                /**/
      281     6116        %EJECT;
PL6.E3A0      #001=OCS$SYNTAX File=OCS$SYNTAX.:E05TSI                            WED 07/30/97 04:06 Page:9    
      282     6117                                                /**/
      283     6118    1   DCL 1 OCS_PARSED (0:19 /* MAX_PARSED# */) STATIC DALIGNED,
      284     6119    1            2 PTR$ PTR,
      285     6120    1            2 NCODE UBIN WORD;
      286     6121                                                /**/
      287     6122    1   DCL 1 OCS_ATTRTAB (0:18 /* MAX_ATTR# */) STATIC UNAL,
      288     6123    1            2 ATTR BIT(36) UNAL INIT (
      289     6124    1              '200000'O /* K_SYS  */,
      290     6125    1              '200000200000'O /* K_SYSALL */,
      291     6126    1                  '100000100000'O /* K_DEVCALL */,
      292     6127    1                  '040000040000'O /* K_ADMINALL */,
      293     6128    1              '020000'O /* K_DLTA  */,
      294     6129    1              '010000'O /* K_LIBRN */,
      295     6130    1              '004000'O /* K_COMM */,
      296     6131    1                  '100000100000'O /* K_TAPEALL */,
      297     6132    1                  '100000100000'O /* K_DISKALL */,
      298     6133    1                  '100000100000'O /* K_URALL */,
      299     6134    1                  '040000'O /* K_ADMIN */,
      300     6135    1                  '100000'O /* K_DEVC  */,
      301     6136    1                  '100000'O /* K_TAPE */,
      302     6137    1                  '100000'O /* K_DISK */,
      303     6138    1                  '100000'O /* K_UR */,
      304     6139    1                  '377377377377'O /* K_MISC */,
      305     6140    1                  '001000001000'O /* K_TPALL */,
      306     6141    1                  '001000'O /* K_TP */,
      307     6142    1                  '000400'O /* K_GOOSE */);
      308     6143                                                /**/
      309     6144        %EJECT;
PL6.E3A0      #001=OCS$SYNTAX File=OCS$SYNTAX.:E05TSI                            WED 07/30/97 04:06 Page:10   
      310     6145        /*
      311     6146                  begin O C S $ S Y N T A X
      312     6147                                                */
      313     6148                                                /**/
      314     6149    2        DO WHILE (OCS_FIRST_TIME);
      315     6150    2             OC_PCB.ROOT$ = COMMON.PTR$;
      316     6151    2             OCS_FIRST_TIME = '0'B;
      317     6152    2           END;                            /* DO WHILE FIRST TIME THRU */
      318     6153    1        OC_PCB.TEXT$ = OC_KEYINBUF$;
      319     6154    1        OC_PCB.NCHARS = OCS_KSIZE;         /* ARS from read complete */
      320     6155    1        REMEMBER OCS$ERRTRN IN OCS_ERROR_ADDR;
      321     6156    1        OCS_ERRCODE = 0;
      322     6157                                           /* Call X$PARSE ... note that
      323     6158                                                ROOT node is 1st item in
      324     6159                                                COMMON segment..... */
      325     6160    1        CALL X$PARSE (OC_PCB) ALTRET (OCS$ERRORS);
      326     6161                                                /**/
      327     6162    1        OC_KEYIN# = OC_PCB.OUT$ -> OC$OUTSYM.CODE;
      328     6163    1        IF OC_KEYIN# = 0
      329     6164    1        THEN
      330     6165    1             RETURN;
      331     6166                                           /* Keyin must be tracked down here
      332     6167                                                Basic technique is gather
      333     6168                                                pointers to textc blocks from
      334     6169                                                output nodes into an array
      335     6170                                                indexed by the subnode #.
      336     6171                                                This will create the order
      337     6172                                                that the data will be built
      338     6173                                                into the keyin output structure
      339     6174                                                Note special case handling for
      340     6175                                                console types and MONKEY vector
      341     6176                                                numbers */
      342     6177                                                /**/
      343     6178                                                /* Clean out data array */
      344     6179    2        DO I = 0 TO 3 /* MAX_NAMES# */;
      345     6180    2             OCS_STA(I) = ' ';
      346     6181    2             OCS_NAME(I) = 0;
PL6.E3A0      #001=OCS$SYNTAX File=OCS$SYNTAX.:E05TSI                            WED 07/30/97 04:06 Page:11   
      347     6182    2           END;                            /* DO I = 0 TO MAX_NAMES# */
      348     6183    2        DO I = 0 TO 19 /* MAX_PARSED# */;
      349     6184    2             OCS_PARSED.PTR$(I) = ADDR(NIL);
      350     6185    2             OCS_PARSED.NCODE(I) = 0;
      351     6186    2           END;
      352     6187    1        OCS_ATTR = '0'B;
      353     6188    1        OCS_VECTOR = 0;
      354     6189    1        OCS_SSIZE = 0;
      355     6190    1        OCS_NAMES = 0;
      356     6191    1        OCS_STRUCT$ = ADDR(OCS_STRUCTURE);
      357     6192                                                /**/
      358     6193                                           /* Chase the pointer chains down
      359     6194                                                Certain assumptions are made
      360     6195                                                about depth and tree structure
      361     6196                                                that may prevent certain types
      362     6197                                                of syntaxes from being parsed
      363     6198                                                for present  */
      364     6199    1        IF OC_PCB.OUT$ -> OC$OUTBLK.NSUBLKS = 0
      365     6200    1        THEN
      366     6201    1             CALL OCS$CHKINP;
      367     6202    1        MAX_BLKS = OC_PCB.OUT$ -> OC$OUTBLK.NSUBLKS - 1;
      368     6203                                                /**/
      369     6204                                                /**/
      370     6205    2        DO I = 0 TO MAX_BLKS;
      371     6206    2             OCS_SUBLKO$ = ADDR(NIL);
      372     6207    2             OCS_SUBLK$ = OC_PCB.OUT$ -> OC$OUTBLK.SUBLK$(I);
      373     6208        %EJECT;
PL6.E3A0      #001=OCS$SYNTAX File=OCS$SYNTAX.:E05TSI                            WED 07/30/97 04:06 Page:12   
      374     6209                                                /**/
      375     6210                                           /* LCOUNT is loop count variable
      376     6211                                                maintained to prevent infinite
      377     6212                                                looping in the pointer chanse
      378     6213                                                search */
      379     6214    2             LCOUNT = 0;
      380     6215                                                /**/
      381     6216    3             DO WHILE (OCS_SUBLK$ -> OC$OUTBLK.CODE < 500 /* LOW_LEXEME# */ );
      382     6217    3                  OCS_SUBLKO$ = OCS_SUBLK$;
      383     6218    3                  OCS_SUBLK$ = OCS_SUBLKO$ -> OC$OUTSYM.TEXTC$;
      384     6219    3                  LCOUNT = LCOUNT + 1;
      385     6220    3                  IF LCOUNT > 49 /* MAX_LOOPS# */
      386     6221    3                  THEN
      387     6222    3                       CALL OCS$CHKINP;
      388     6223    3                END;
      389     6224        %EJECT;
PL6.E3A0      #001=OCS$SYNTAX File=OCS$SYNTAX.:E05TSI                            WED 07/30/97 04:06 Page:13   
      390     6225                                           /* Now the pointers are at
      391     6226                                                subnode(n) and appropriate
      392     6227                                                internal code node
      393     6228                                        ** If the code returned is a conversion
      394     6229                                           type item, save the code and textc.
      395     6230                                        ** If the code is a special internal
      396     6231                                           conversion type item, save the code
      397     6232                                           and textc.
      398     6233                                        ** If the code is a device attribute
      399     6234                                           item, OR the appropriate bits into
      400     6235                                           the attribute save cell.
      401     6236                                        ** If the item is a Ghost selector or
      402     6237                                           MONKEY vector selector, stash it
      403     6238                                           in the appropriate cell  */
      404     6239    2             CODE_ = OCS_SUBLK$ -> OC$OUTBLK.CODE;
      405     6240    2             IF CODE_ < 750 /* TOP_VECT# */
      406     6241    2             THEN CASE_ = 5 /* CASE_VECT# */;
      407     6242    2             ELSE
      408     6243    2                  IF CODE_ < 900 /* TOP_NAMES# */
      409     6244    2                  THEN CASE_ = 4 /* CASE_NAMES# */;
      410     6245    2                  ELSE
      411     6246    2                       IF CODE_ < 930 /* TOP_LEXEMES# */
      412     6247    2                       THEN CASE_ = 3 /* CASE_LEXEMES# */;
      413     6248    2                       ELSE
      414     6249    2                            IF CODE_ < 952 /* TOP_FORCED# */
      415     6250    2                            THEN CASE_ = 2 /* CASE_FORCED# */;
      416     6251    2                            ELSE
      417     6252    2                                 IF CODE_ < 975 /* TOP_INTRINS# */
      418     6253    2                                 THEN CASE_ = 1 /* CASE_INTRINS# */;
      419     6254    2                                 ELSE
      420     6255    2                                      IF CODE_ < 999 /* TOP_ATTR# */
      421     6256    2                                      THEN CASE_ = 0 /* CASE_ATTR# */;
      422     6257                                                /**/
      423     6258                                                /**/
      424     6259    3             DO CASE ( CASE_ );
      425     6260                                                /**/
      426     6261    3             CASE ( 4 /* CASE_NAMES# */ );
PL6.E3A0      #001=OCS$SYNTAX File=OCS$SYNTAX.:E05TSI                            WED 07/30/97 04:06 Page:14   
      427     6262    3                OCS_NAME(OCS_NAMES) = OCS_SUBLK$ -> OC$OUTBLK.CODE;
      428     6263    3                IF OCS_NAMES < 3 /* MAX_NAMES# */
      429     6264    3                THEN
      430     6265    3                     OCS_NAMES = OCS_NAMES + 1;
      431     6266    3                ELSE
      432     6267    3                     CALL OCS$CHKINP;
      433     6268                                                /**/
      434     6269    3             CASE ( 3 /* CASE_LEXEMES# */,
      435     6270    3                          1 /* CASE_INTRINS# */,
      436     6271    3                          2 /* CASE_FORCED# */ );
      437     6272    3                INDEX_ = OCS_SUBLKO$ -> OC$OUTBLK.CODE;
      438     6273    3                IF INDEX_ > 19 /* MAX_PARSED# */
      439     6274    3                THEN
      440     6275    3                     CALL OCS$CHKINP;
      441     6276    3                IF OCS_PARSED.PTR$ (INDEX_) = ADDR(NIL)
      442     6277    3                THEN
      443     6278    4                DO;
      444     6279    4                     OCS_PARSED.PTR$ (INDEX_) = OCS_SUBLK$ -> OC$OUTSYM.TEXTC$;
      445     6280    4                     OCS_PARSED.NCODE(INDEX_) = OCS_SUBLK$ -> OC$OUTSYM.CODE;
      446     6281    4                   END;
      447     6282                                                /**/
      448     6283    3             CASE ( 0 /* CASE_ATTR# */ );
      449     6284    3                INDEX_ = OCS_SUBLK$ -> OC$OUTBLK.CODE - 980 /* BOT_ATTR# */;
      450     6285    3                OCS_ATTR = OCS_ATTR | OCS_ATTRTAB.ATTR(INDEX_);
      451     6286                                                /**/
      452     6287    3             CASE ( 5 /* CASE_VECT# */ );
      453     6288    3                OCS_VECTOR = OCS_SUBLK$ -> OC$OUTBLK.CODE - 500 /* LOW_VECT# */;
      454     6289    3             END;                          /* DO CASE */
      455     6290                                                /**/
      456     6291    2           END;                            /* DO I = 0 TO NSUBLKS-1 (MAX_BLKS) */
      457     6292                                                /**/
      458     6293        %EJECT;
PL6.E3A0      #001=OCS$SYNTAX File=OCS$SYNTAX.:E05TSI                            WED 07/30/97 04:06 Page:15   
      459     6294                                                /**/
      460     6295                                           /* Examine the parsed blocks for
      461     6296                                                lexeme codes and pointers to
      462     6297                                                text.  Build the output struct-
      463     6298                                                ure accordingly. */
      464     6299    2        DO I = 1 TO 19 /* MAX_PARSED# */;
      465     6300    2             CODE_ = OCS_PARSED.NCODE (I);
      466     6301    2             IF CODE_ ~= 0
      467     6302    2             THEN
      468     6303    3             DO;
      469     6304    3                  PTR$ = OCS_PARSED.PTR$(I);
      470     6305    3                  INDEX_ = 0;
      471     6306    4                  DO WHILE (CODE_ ~= OCS_LEXEMES.CODE(INDEX_));
      472     6307    4                       INDEX_ = INDEX_ + 1;
      473     6308    4                       IF INDEX_ > 49 /* MAX_LEXEMES# */
      474     6309    4                       THEN
      475     6310    4                            CALL OCS$CHKINP;
      476     6311    4                     END;
      477     6312    3                  BYTES_ = OCS_LEXEMES.BYTES(INDEX_);
      478     6313    3                  CVSN_ = OCS_LEXEMES.CVSN (INDEX_);
      479     6314    3                  OFFSET_= OCS_LEXEMES.OFFSET(INDEX_);
      480     6315                                                /**/
      481     6316        %EJECT;
PL6.E3A0      #001=OCS$SYNTAX File=OCS$SYNTAX.:E05TSI                            WED 07/30/97 04:06 Page:16   
      482     6317                                                /**/
      483     6318                                           /* The values pertinent to this
      484     6319                                                input item have been
      485     6320                                                established.  Use OCS_STRUCT$
      486     6321                                                to build the output block. */
      487     6322                                                /**/
      488     6323    4                  DO CASE ( CVSN_ );
      489     6324                                                /**/
      490     6325    4                  CASE ( 1 /* TTXT# */ );          /* Sized TEXT field */
      491     6326                                                /**/
      492     6327    4                     COUNT_ = PTR$ -> OCS$D1;
      493     6328    4                     IF COUNT_ > BYTES_
      494     6329    4                     THEN
      495     6330    4                          CALL OCS$UNEXP (PTR$, 2 /*E#TOOLONG*/);
      496     6331                                                /**/
      497     6332    5                     DO CASE ( OFFSET_ );
      498     6333                                                /**/
      499     6334    5                     CASE ( 0 /* T1_BYTE# */ );
      500     6335    5                        OCS_STRUCT$ -> OCS$T1 = PTR$ -> OCS$TN.TEXT;
      501     6336    5                     CASE ( 1 /* T2_BYTE# */ );
      502     6337    5                        OCS_STRUCT$ -> OCS$T2 = PTR$ -> OCS$TN.TEXT;
      503     6338    5                     CASE ( 2 /* T3_BYTE# */ );
      504     6339    5                        OCS_STRUCT$ -> OCS$T3 = PTR$ -> OCS$TN.TEXT;
      505     6340    5                     CASE ( 3 /* T4_BYTE# */ );
      506     6341    5                        OCS_STRUCT$ -> OCS$T4 = PTR$ -> OCS$TN.TEXT;
      507     6342    5                     CASE ( 4 /* T6_BYTE# */ );
      508     6343    5                        OCS_STRUCT$ -> OCS$T6 = PTR$ -> OCS$TN.TEXT;
      509     6344    5                     CASE ( 5 /* T8_BYTE# */ );
      510     6345    5                        OCS_STRUCT$ -> OCS$T8 = PTR$ -> OCS$TN.TEXT;
      511     6346    5                     CASE ( 6 /* T12_BYTE# */ );
      512     6347    5                        OCS_STRUCT$ -> OCS$T12 = PTR$ -> OCS$TN.TEXT;
      513     6348    5                     END;                  /* DO CASE TTXT# */
      514     6349        %EJECT;
PL6.E3A0      #001=OCS$SYNTAX File=OCS$SYNTAX.:E05TSI                            WED 07/30/97 04:06 Page:17   
      515     6350                                                /**/
      516     6351    4                  CASE ( 2 /* TTXTC# */ );
      517     6352                                                /**/
      518     6353    4                     BYTES_ = PTR$ -> OCS$TN.COUNT + 1;
      519     6354                                           /* To get the TEXTC to TEXTC move
      520     6355                                                correct, the count must be
      521     6356                                                moved first, then the textc */
      522     6357    4                     OCS_STRUCT$ -> OCS$TN.COUNT = PTR$ -> OCS$TN.COUNT;
      523     6358    4                     OCS_STRUCT$ -> OCS$TN = PTR$ -> OCS$TN;
      524     6359        %EJECT;
PL6.E3A0      #001=OCS$SYNTAX File=OCS$SYNTAX.:E05TSI                            WED 07/30/97 04:06 Page:18   
      525     6360                                                /**/
      526     6361    4                  CASE ( 3 /* TDEC# */ );
      527     6362                                                /* Unsigned decimal number */
      528     6363    4                     CALL CHARBIN (OCS_CONVERTED, PTR$ -> OCS$TN.TEXT);
      529     6364    4                     IF OCS_CONVERTED > OCS_LEXEMES.MAX(INDEX_)
      530     6365    4                     THEN
      531     6366    4                          CALL OCS$UNEXP (PTR$, 3 /*E#TOOLARGE*/);
      532     6367                                                /**/
      533     6368    5                     DO CASE ( OFFSET_ );
      534     6369                                                /**/
      535     6370    5                     CASE ( 0 /* D1_BYTE# */ );
      536     6371    5                        OCS_STRUCT$ -> OCS$D1 = OCS_CONVERTED;
      537     6372    5                     CASE ( 1 /* D2_BYTE# */ );
      538     6373    5                        OCS_STRUCT$ -> OCS$D2 = OCS_CONVERTED;
      539     6374    5                     CASE ( 2 /* D3_BYTE# */ );
      540     6375    5                        OCS_STRUCT$ -> OCS$D3 = OCS_CONVERTED;
      541     6376    5                     CASE ( 3 /* D4_BYTE# */ );
      542     6377    5                        OCS_STRUCT$ -> OCS$D4 = OCS_CONVERTED;
      543     6378    5                     END;                  /* DO CASE OFFSET_ */
      544     6379        %EJECT;
PL6.E3A0      #001=OCS$SYNTAX File=OCS$SYNTAX.:E05TSI                            WED 07/30/97 04:06 Page:19   
      545     6380                                                /**/
      546     6381    4                  CASE ( 4 /* TDECS# */ );
      547     6382                                           /* Special action is required
      548     6383                                                here to place + sign on
      549     6384                                                unsigned case... if parser
      550     6385                                                passed us the item, it is
      551     6386                                                preceeded by either a '-' or
      552     6387                                                nothing (+ case is ignored as
      553     6388                                                default) */
      554     6389    4                     IF (SUBSTR( PTR$ -> OCS$TN.TEXT, 0, 1) ~= MINUS)
      555     6390    4                     THEN
      556     6391    5                     DO;
      557     6392    5                          CALL CONCAT(SECOND_STRING,PLUS,PTR$-> OCS$TN.TEXT);
      558     6393    5                          OCS_NUMC = PTR$ -> OCS$TN.COUNT + 1;
      559     6394    5                        END;
      560     6395    4                     ELSE
      561     6396    5                     DO;
      562     6397    5                          SECOND_STRING = PTR$ -> OCS$TN.TEXT;
      563     6398    5                          OCS_NUMC = PTR$ -> OCS$TN.COUNT;
      564     6399    5                          IF OCS_NUMC < 2  /* - PLUS DIGIT */
      565     6400    5                          THEN
      566     6401    5                               CALL OCS$UNEXP (PTR$, 4 /*E#OUTFRANGE*/);
      567     6402                                                /**/
      568     6403    5                        END;
      569     6404    4                     CALL INDEX (J, MINUS,
      570     6405    4                          SUBSTR(SECOND_STRING,1,OCS_NUMC-1))
      571     6406    4                          ALTRET (GOOD_MINUS_STRING);
      572     6407                                                /**/
      573     6408    4                     CALL OCS$UNEXP (PTR$, 4 /*E#OUTFRANGE*/);
      574     6409                                                /**/
      575     6410    4   GOOD_MINUS_STRING: ;
      576     6411                                                /**/
      577     6412                                                /**/
      578     6413    4                     IF OCS_NUMC > SIZEC(SECOND_STRING)
      579     6414    4                     THEN
      580     6415    4                          CALL OCS$UNEXP (PTR$, 4 /*E#OUTFRANGE*/);
      581     6416                                                /**/
PL6.E3A0      #001=OCS$SYNTAX File=OCS$SYNTAX.:E05TSI                            WED 07/30/97 04:06 Page:20   
      582     6417    4                     CALL XCHARBIN ( OCS_CONVERTEDS,
      583     6418    4                          ADDR(SECOND_STRING)->SECOND$STRING);
      584     6419                                                /**/
      585     6420    4                     IF OCS_CONVERTEDS < OCS_LEXEMES.MINS(INDEX_)
      586     6421    4                          OR
      587     6422    4                          OCS_CONVERTEDS > OCS_LEXEMES.MAXS(INDEX_)
      588     6423    4                     THEN
      589     6424    4                          CALL OCS$UNEXP (PTR$, 4 /*E#OUTFRANGE*/);
      590     6425                                                /**/
      591     6426    5                     DO CASE ( OFFSET_ );
      592     6427                                                /**/
      593     6428    5                     CASE ( 0 /* DS1_BYTE# */ );
      594     6429    5                        OCS_STRUCT$ -> OCS$DS1 = OCS_CONVERTEDS;
      595     6430    5                     CASE ( 1 /* DS2_BYTE# */ );
      596     6431    5                        OCS_STRUCT$ -> OCS$DS2 = OCS_CONVERTEDS;
      597     6432    5                     CASE ( 2 /* DS3_BYTE# */ );
      598     6433    5                        OCS_STRUCT$ -> OCS$DS3 = OCS_CONVERTEDS;
      599     6434    5                     CASE ( 3 /* DS4_BYTE# */ );
      600     6435    5                        OCS_STRUCT$ -> OCS$DS4 = OCS_CONVERTEDS;
      601     6436    5                     END;                  /* DO CASE OFFSET_ */
      602     6437                                                /**/
      603     6438        %EJECT;
PL6.E3A0      #001=OCS$SYNTAX File=OCS$SYNTAX.:E05TSI                            WED 07/30/97 04:06 Page:21   
      604     6439                                                /**/
      605     6440    4                  CASE ( 5 /* TOCT# */ );
      606     6441                                                /**/
      607     6442    4                     SECOND_STRING = PTR$ -> OCS$TN.TEXT;
      608     6443    4                     OCS_CONVERTED = 0;
      609     6444    5                     DO J = 0 TO (PTR$ -> OCS$TN.COUNT - 1);
      610     6445    5                          OCS_CONVERTED = OCS_CONVERTED * 8 +
      611     6446    5                               (SEC_STRING(J) - 48 /* ASCIIZERO# */);
      612     6447    5                        END;
      613     6448    4                     IF OCS_CONVERTED > OCS_LEXEMES.MAX(INDEX_)
      614     6449    4                     THEN
      615     6450    4                          CALL OCS$UNEXP (PTR$, 3 /*E#TOOLARGE*/);
      616     6451                                                /**/
      617     6452    5                     DO CASE ( OFFSET_ );
      618     6453                                                /**/
      619     6454    5                     CASE ( 0 /* O1_BYTE# */ );
      620     6455    5                        OCS_STRUCT$ -> OCS$D1 = OCS_CONVERTED;
      621     6456    5                     CASE ( 1 /* O2_BYTE# */ );
      622     6457    5                        OCS_STRUCT$ -> OCS$D2 = OCS_CONVERTED;
      623     6458    5                     CASE ( 2 /* O3_BYTE# */ );
      624     6459    5                        OCS_STRUCT$ -> OCS$D3 = OCS_CONVERTED;
      625     6460    5                     CASE ( 3 /* O4_BYTE# */ );
      626     6461    5                        OCS_STRUCT$ -> OCS$D4 = OCS_CONVERTED;
      627     6462    5                     END;                  /* DO CASE OFFSET_ */
      628     6463                                                /**/
      629     6464        %EJECT;
PL6.E3A0      #001=OCS$SYNTAX File=OCS$SYNTAX.:E05TSI                            WED 07/30/97 04:06 Page:22   
      630     6465                                                /**/
      631     6466    4                  CASE ( 6 /* THEX# */ );
      632     6467                                                /**/
      633     6468    4                     OCS_CONVERTED = 0;
      634     6469    4                     SECOND_STRING = PTR$ -> OCS$TN.TEXT;
      635     6470    5                     DO J = 0 TO (PTR$ -> OCS$TN.COUNT - 1);
      636     6471    5                          IF SEC_STRING(J) > 57 /* ASCIININE# */
      637     6472    5                          THEN
      638     6473    6                          DO;
      639     6474    6                               IF SEC_STRING(J) > 96 THEN
      640     6475                                                /* MAKE UPPERCASE */
      641     6476    6                                    SEC_STRING(J) = SEC_STRING(J) - 32;
      642     6477    6                               OCS_CONVERTED = OCS_CONVERTED * 16 +
      643     6478    6                                    (SEC_STRING(J) - 55 /* ASCIISEVEN# */ );
      644     6479    6                             END;
      645     6480    5                          ELSE
      646     6481    5                               OCS_CONVERTED = OCS_CONVERTED * 16 +
      647     6482    5                                    (SEC_STRING(J) - 48 /* ASCIIZERO# */);
      648     6483    5                        END;
      649     6484    4                     IF OCS_CONVERTED > OCS_LEXEMES.MAX(INDEX_)
      650     6485    4                     THEN
      651     6486    4                          CALL OCS$UNEXP (PTR$, 3 /*E#TOOLARGE*/);
      652     6487                                                /**/
      653     6488    5                     DO CASE ( OFFSET_ );
      654     6489                                                /**/
      655     6490    5                     CASE ( 0 /* H1_BYTE# */ );
      656     6491    5                        OCS_STRUCT$ -> OCS$D1 = OCS_CONVERTED;
      657     6492    5                     CASE ( 1 /* H2_BYTE# */ );
      658     6493    5                        OCS_STRUCT$ -> OCS$D2 = OCS_CONVERTED;
      659     6494    5                     CASE ( 2 /* H3_BYTE# */ );
      660     6495    5                        OCS_STRUCT$ -> OCS$D3 = OCS_CONVERTED;
      661     6496    5                     CASE ( 3 /* H4_BYTE# */ );
      662     6497    5                        OCS_STRUCT$ -> OCS$D4 = OCS_CONVERTED;
      663     6498    5                     END;                  /* DO CASE OFFSET_ */
      664     6499                                                /**/
      665     6500        %EJECT;
PL6.E3A0      #001=OCS$SYNTAX File=OCS$SYNTAX.:E05TSI                            WED 07/30/97 04:06 Page:23   
      666     6501                                                /**/
      667     6502    4                  CASE ( 7 /* TBLK# */ );
      668     6503                                                /**/
      669     6504    5                     DO CASE ( OFFSET_ );
      670     6505                                                /**/
      671     6506    5                     CASE ( 0 /* B1_BYTE# */ );
      672     6507    5                        OCS_STRUCT$ -> OCS$T1 = ' ';
      673     6508    5                     CASE ( 1 /* B2_BYTE# */ );
      674     6509    5                        OCS_STRUCT$ -> OCS$T2 = ' ';
      675     6510    5                     CASE ( 2 /* B3_BYTE# */ );
      676     6511    5                        OCS_STRUCT$ -> OCS$T3 = ' ';
      677     6512    5                     CASE ( 3 /* B4_BYTE# */ );
      678     6513    5                        OCS_STRUCT$ -> OCS$T4 = ' ';
      679     6514    5                     CASE ( 4 /* B6_BYTE# */ );
      680     6515    5                        OCS_STRUCT$ -> OCS$T6 = ' ';
      681     6516    5                     CASE ( 5 /* B8_BYTE# */ );
      682     6517    5                        OCS_STRUCT$ -> OCS$T8 = ' ';
      683     6518    5                     CASE ( 6 /* B12_BYTE# */ );
      684     6519    5                        OCS_STRUCT$ -> OCS$T12 = ' ';
      685     6520    5                     END;                  /* DO CASE OFFSET_ */
      686     6521                                                /**/
      687     6522        %EJECT;
PL6.E3A0      #001=OCS$SYNTAX File=OCS$SYNTAX.:E05TSI                            WED 07/30/97 04:06 Page:24   
      688     6523                                                /**/
      689     6524    4                  CASE ( 9 /* TNUL# */ );
      690     6525                                                /**/
      691     6526    5                     DO CASE ( OFFSET_ );
      692     6527                                                /**/
      693     6528    5                     CASE ( 0 /* N1_BYTE# */ );
      694     6529    5                        OCS_STRUCT$ -> OCS$D1 = 0;
      695     6530    5                     CASE ( 1 /* N2_BYTE# */ );
      696     6531    5                        OCS_STRUCT$ -> OCS$D2 = 0;
      697     6532    5                     CASE ( 2 /* N3_BYTE# */ );
      698     6533    5                        OCS_STRUCT$ -> OCS$D3 = 0;
      699     6534    5                     CASE ( 3 /* N4_BYTE# */ );
      700     6535    5                        OCS_STRUCT$ -> OCS$D4 = 0;
      701     6536    5                     END;                  /* DO CASE OFFSET_ */
      702     6537                                                /**/
      703     6538        %EJECT;
PL6.E3A0      #001=OCS$SYNTAX File=OCS$SYNTAX.:E05TSI                            WED 07/30/97 04:06 Page:25   
      704     6539                                                /**/
      705     6540    4                  CASE ( 10 /* TXWSN# */ );
      706     6541                                                /**/
      707     6542    4                     CALL CONCAT (SECOND_STRING,
      708     6543    4                          SUBSTR(OC_CONSOLE.STATION(OCS_CINDEX),4,4),
      709     6544    4                          '    ') ;
      710     6545                                                /**/
      711     6546                                           /* If this is a system console,
      712     6547                                                change default wsn from local
      713     6548                                                to 'ALL' */
      714     6549                                                /**/
      715     6550    4                     IF OC_CONSOLE.ATTR(OCS_CINDEX)
      716     6551    4                          &
      717     6552    4                          '200000'O /* K_SYS  */
      718     6553    4                     THEN
      719     6554    4                          CALL INSERT (SECOND_STRING, 0, 4, '    ');
      720     6555                                                /**/
      721     6556    4                     OCS_NUMC = BYTES_;
      722     6557    4                     OCS_STRUCT$ -> OCS$T8 =
      723     6558    4                          ADDR(SECOND_STRING) -> SECOND$STRING;
      724     6559                                                /**/
      725     6560        %EJECT;
PL6.E3A0      #001=OCS$SYNTAX File=OCS$SYNTAX.:E05TSI                            WED 07/30/97 04:06 Page:26   
      726     6561                                                /**/
      727     6562    4                  CASE ( 11 /* TXDEV# */, 24 /* TXGNDEV# */ );
      728     6563
      729     6564                                           /* Its possible that an XDEV node
      730     6565                                                can have a ,F on it...allow
      731     6566                                                for it here ... blanking the
      732     6567                                                device field */
      733     6568    4                     IF (PTR$ -> OCS$TN.COUNT = 1)
      734     6569    4                          AND
      735     6570    4                          (PTR$ -> OCS$TN.TEXT = ' ')
      736     6571    4                     THEN
      737     6572    5                     DO;
      738     6573    5                          ADDR(SECC_STRING(0)) -> OCS$T4 = ' ';
      739     6574    5                          GOTO OCS$INSERT_WSN;
      740     6575    5                        END;
      741     6576                                         /* XGNDEV is the same as XDEV except
      742     6577                                           that a two-letter generic device
      743     6578                                           is also accepted: 'LP  '         */
      744     6579
      745     6580    4                     IF CVSN_ = 24 /* TXGNDEV# */ AND PTR$->OCS$TN.COUNT = 2
      746     6581    5                     THEN DO;
      747     6582    5                          ADDR(SECC_STRING(2))->OCS$T2 = '  ';
      748     6583    5                        END;
      749     6584    5                     ELSE DO;
      750     6585
      751     6586                                           /* XDEV: 4-char device name 'LP01'
      752     6587                                              Special check for 4 characters
      753     6588                                                input....no more, no less */
      754     6589    5                          IF PTR$ -> OCS$TN.COUNT ~= 4
      755     6590    5                          THEN
      756     6591    5                               CALL OCS$UNEXP (PTR$, 5 /*E#NOTDEV*/);
      757     6592                                                /* AND verify digit-digit */
      758     6593    5                          CALL OCC$CHKDIG(SUBSTR(PTR$->OCS$TN.TEXT,2,2),2)
      759     6594    6                          WHENALTRETURN DO;
      760     6595    6                               CALL OCS$UNEXP (PTR$, 5 /*E#NOTDEV*/);
      761     6596    6                             END;          /* ALTRET */
      762     6597                                                /* PUT IN NN FROM DEVNAME */
PL6.E3A0      #001=OCS$SYNTAX File=OCS$SYNTAX.:E05TSI                            WED 07/30/97 04:06 Page:27   
      763     6598    5                          ADDR(SECC_STRING(2)) -> OCS$T2 =
      764     6599    5                               SUBSTR (PTR$->OCS$TN.TEXT,2,2);
      765     6600    5                        END;               /* IF NOT GNDEV */
      766     6601
      767     6602                                                /* SIZE OF DEVICE NAME=2 */
      768     6603    4                     CALL XLATE ( ADDR(SECC_STRING(0))->OCS$T2,
      769     6604    4                          OCS_XTAB1,
      770     6605    4                          SUBSTR(PTR$->OCS$TN.TEXT,0,2));
      771     6606
      772     6607    4                     IF SEC_STRING(0) = 0
      773     6608    4                          OR
      774     6609    4                          SEC_STRING(1) = 0
      775     6610    4                     THEN
      776     6611    4                          CALL OCS$UNEXP (PTR$, 5 /*E#NOTDEV*/);
      777     6612
      778     6613
      779     6614                                                /* Add 4 chars of WSN from CTAB */
      780     6615    4   OCS$INSERT_WSN:   ADDR(SECC_STRING(4)) -> OCS$T4 =
      781     6616    4                          SUBSTR (OC_CONSOLE.STATION(OCS_CINDEX),
      782     6617    4                          4,4);
      783     6618    4                     OCS_NUMC = BYTES_;
      784     6619    4                     OCS_STRUCT$ -> OCS$T8 = ADDR(SECOND_STRING) ->
      785     6620    4                          SECOND$STRING;
      786     6621
      787     6622        %EJECT;
PL6.E3A0      #001=OCS$SYNTAX File=OCS$SYNTAX.:E05TSI                            WED 07/30/97 04:06 Page:28   
      788     6623                                                /**/
      789     6624    4                  CASE ( 12 /* TXPRIO# */ );
      790     6625                                                /**/
      791     6626    4                     OCS_STRUCT$ -> OCS$D1 = OC_CONSOLE.MXPRIO(OCS_CINDEX);
      792     6627                                                /**/
      793     6628        %EJECT;
PL6.E3A0      #001=OCS$SYNTAX File=OCS$SYNTAX.:E05TSI                            WED 07/30/97 04:06 Page:29   
      794     6629                                                /**/
      795     6630    4                  CASE ( 13 /* TXTERM# */ );
      796     6631                                                /**/
      797     6632    4                     IF (OC_CONSOLE.ATTR(OCS_CINDEX) & '200000'O /* K_SYS  */)
      798     6633    4                          OR
      799     6634    4                          (OC_CONSOLE.ATTRO(OCS_CINDEX) & '200000'O /* K_SYS  */)
      800     6635    4                     THEN
      801     6636    4                          OCS_STRUCT$ -> OCS$T8 = ' ';
      802     6637    4                     ELSE
      803     6638    4                          OCS_STRUCT$ -> OCS$T8 = OC_CONSOLE.TERM_NAME (OCS_CINDEX);
      804     6639                                                /**/
      805     6640        %EJECT;
PL6.E3A0      #001=OCS$SYNTAX File=OCS$SYNTAX.:E05TSI                            WED 07/30/97 04:06 Page:30   
      806     6641                                                /**/
      807     6642    4                  CASE ( 14 /* TXCATTR# */ );
      808     6643                                                /**/
      809     6644    4                     OCS_STRUCT$ -> OCS$B2 = OC_CONSOLE.ATTR_INPUT(OCS_CINDEX);
      810     6645    4                     PINCRC (OCS_STRUCT$,2) -> OCS$B2 =
      811     6646    4                          OC_CONSOLE.ATTR_OUTPUT(OCS_CINDEX);
      812     6647                                                /**/
      813     6648        %EJECT;
PL6.E3A0      #001=OCS$SYNTAX File=OCS$SYNTAX.:E05TSI                            WED 07/30/97 04:06 Page:31   
      814     6649                                                /**/
      815     6650    4                  CASE (15 /* TXCWSN# */);
      816     6651                                                /**/
      817     6652    4                     OCS_STRUCT$ -> OCS$T8 =
      818     6653    4                          OC_CONSOLE.WSN(OCS_CINDEX);
      819     6654                                                /**/
      820     6655        %EJECT;
PL6.E3A0      #001=OCS$SYNTAX File=OCS$SYNTAX.:E05TSI                            WED 07/30/97 04:06 Page:32   
      821     6656                                                /**/
      822     6657    4                  CASE (16 /* TXNAME# */);
      823     6658                                                /**/
      824     6659    4                     OCS_STRUCT$ -> OCS$T8 =
      825     6660    4                          OC_CONSOLE.STATION(OCS_CINDEX);
      826     6661                                                /**/
      827     6662        %EJECT;
PL6.E3A0      #001=OCS$SYNTAX File=OCS$SYNTAX.:E05TSI                            WED 07/30/97 04:06 Page:33   
      828     6663                                                /**/
      829     6664    4                  CASE (17 /* TXBWSN# */);
      830     6665                                                /**/
      831     6666                                           /* If not system, admin, or devc
      832     6667                                                what to do? */
      833     6668    4                     OCS_STRUCT$ -> OCS$T16 = '????????????????';
      834     6669                                                /**/
      835     6670                                                /**/
      836     6671    4                     IF OC_CONSOLE.ATTR(OCS_CINDEX) & '040000'O /* K_ADMIN */
      837     6672    4                          OR
      838     6673    4                          OC_CONSOLE.ATTRO(OCS_CINDEX) & '040000'O /* K_ADMIN */
      839     6674    4                          OR
      840     6675    4                          OC_CONSOLE.ATTR(OCS_CINDEX) & '200000'O /* K_SYS  */
      841     6676    4                     THEN
      842     6677    4                          OCS_STRUCT$ -> OCS$2T8.T81 =
      843     6678    4                               OC_CONSOLE.WSN(OCS_CINDEX);
      844     6679    4                     ELSE
      845     6680    4                          OCS_STRUCT$ -> OCS$2B72.B721 = '0'B /*FALSE#*/;
      846     6681    4                     IF OC_CONSOLE.ATTR(OCS_CINDEX) & '100000'O /* K_DEVC  */
      847     6682    4                          OR
      848     6683    4                          OC_CONSOLE.ATTRO(OCS_CINDEX) & '100000'O /* K_DEVC  */
      849     6684    4                     THEN
      850     6685    4                          OCS_STRUCT$ -> OCS$2T8.T82 =
      851     6686    4                               OC_CONSOLE.TERM_NAME(OCS_CINDEX);
      852     6687    4                     ELSE
      853     6688    4                          OCS_STRUCT$ -> OCS$2B72.B722 = '0'B /*FALSE#*/;
      854     6689
      855     6690    4                     IF (OC_CONSOLE.ATTR(OCS_CINDEX) & '200000'O /* K_SYS  */)
      856     6691    4                          OR
      857     6692    4                          (OC_CONSOLE.ATTRO(OCS_CINDEX) & '200000'O /* K_SYS  */)
      858     6693    4                     THEN
      859     6694    4                          OCS_STRUCT$ -> OCS$2T8.T82 = ' ';
      860     6695
      861     6696                                                /**/
      862     6697                                                /**/
      863     6698        %EJECT;
PL6.E3A0      #001=OCS$SYNTAX File=OCS$SYNTAX.:E05TSI                            WED 07/30/97 04:06 Page:34   
      864     6699                                                /**/
      865     6700    4                  CASE (18 /* TXBTWSN# */);
      866     6701                                                /**/
      867     6702                                           /* PTR$ IS ACTUALLY PTR$ING TO A
      868     6703                                                P$SYM BLOCK...GO ONE MORE
      869     6704                                                LEVEL DOWN */
      870     6705    4                     PTR$ = PTR$ -> OC$OUTSYM.TEXTC$;
      871     6706                                                /**/
      872     6707                                                /**/
      873     6708    4                     IF PTR$ -> OCS$TN.COUNT = 0
      874     6709    4                          OR
      875     6710    4                          PTR$ -> OCS$TN.TEXT = ' '
      876     6711    4                     THEN
      877     6712    4                          CALL OCS$UNEXP (PTR$, 6 /*E#NOTTERM*/);
      878     6713                                                /**/
      879     6714    4                     IF PTR$ -> OCS$TN.COUNT > 8
      880     6715    4                     THEN
      881     6716    4                          CALL OCS$UNEXP(PTR$, 2 /*E#TOOLONG*/);
      882     6717    4                     SECOND_STRING = '????????';
      883     6718                                                /**/
      884     6719    4                     OCS_STRUCT$ -> OCS$2T8.T81 = PTR$ -> OCS$TN.TEXT;
      885     6720    4                     OCS_STRUCT$ -> OCS$2T8.T82 = SECOND_STRING;
      886     6721                                                /**/
      887     6722                                                /**/
      888     6723        %EJECT;
PL6.E3A0      #001=OCS$SYNTAX File=OCS$SYNTAX.:E05TSI                            WED 07/30/97 04:06 Page:35   
      889     6724                                                /**/
      890     6725    4                  CASE (19 /* TXSTA# */);
      891     6726                                                /**/
      892     6727                                           /* Add the input item to the
      893     6728                                                station list on CSCG */
      894     6729    4                     COUNT_ = PTR$ -> OCS$D1;
      895     6730    4                     IF COUNT_ > BYTES_
      896     6731    4                     THEN
      897     6732    4                          CALL OCS$UNEXP (PTR$, 2 /*E#TOOLONG*/);
      898     6733
      899     6734                                                /**/
      900     6735    4                     OCS_STA (OCS_NAMES) = PTR$ -> OCS$TN.TEXT;
      901     6736                                                /**/
      902     6737    4                     IF OCS_NAMES < 3 /* MAX_NAMES# */
      903     6738    4                     THEN
      904     6739    4                          OCS_NAMES = OCS_NAMES + 1;
      905     6740    4                     ELSE
      906     6741    4                          CALL OCS$CHKINP;
      907     6742                                                /**/
      908     6743    4                     BYTES_ = 0;           /* Dont incr STRUCT$ */
      909     6744                                                /**/
      910     6745        %EJECT;
PL6.E3A0      #001=OCS$SYNTAX File=OCS$SYNTAX.:E05TSI                            WED 07/30/97 04:06 Page:36   
      911     6746                                                /**/
      912     6747    4                  CASE (20 /* TXNATL# */);
      913     6748                                           /* Move native language byte to
      914     6749                                                output block */
      915     6750    4                     OCS_STRUCT$ -> OCS$T1 =
      916     6751    4                          OC_CONSOLE.NATLANG(OCS_CINDEX);
      917     6752                                                /**/
      918     6753        %EJECT;
PL6.E3A0      #001=OCS$SYNTAX File=OCS$SYNTAX.:E05TSI                            WED 07/30/97 04:06 Page:37   
      919     6754    4                  CASE (21 /* TXNOT# */);
      920     6755    4                     OCS_STRUCT$ -> OCS$D1 = 1; /* NOT WAS FOUND */
      921     6756        %EJECT;
PL6.E3A0      #001=OCS$SYNTAX File=OCS$SYNTAX.:E05TSI                            WED 07/30/97 04:06 Page:38   
      922     6757                                                /**/
      923     6758    4                  CASE (22 /* TXCGFID# */);
      924     6759                                                /**/
      925     6760                                           /*
      926     6761                                                Break a ComGroup FID into
      927     6762                                                a KC$CGID block for ELF */
      928     6763
      929     6764    4                     COUNT_ = PTR$ -> OCS$D1;
      930     6765
      931     6766    4                     IF COUNT_ = 0
      932     6767    4                          OR
      933     6768    4                          COUNT_ > 63
      934     6769    4                     THEN
      935     6770    4                          CALL OCS$UNEXP (PTR$, 2 /*E#TOOLONG*/);
      936     6771
      937     6772    4                     SECOND_STRING = ' ';
      938     6773
      939     6774    4                     OCS_NUMC = COUNT_;
      940     6775
      941     6776    4                     ADDR(SECOND_STRING) -> SECOND$STRING =
      942     6777    4                          PTR$ -> OCS$TN.TEXT;
      943     6778
      944     6779    4                     CALL M$FID (GET_COMGROUP_FID) ALTRET (WHAT_NOW);
      945     6780
      946     6781    5                     DO WHILE ('0'B /*FALSE#*/);
      947     6782    5   WHAT_NOW:              ;
      948     6783    5                          CALL OCS$UNEXP (PTR$, 7 /* E#BADFID */);
      949     6784
      950     6785    5                        END;                     /* DO IF BAD FID (OR BAD FID
      951     6786                                                PARTS DETECTED) */
      952     6787
      953     6788    4                     IF CG_ASN ~= %COMGROUP#
      954     6789    4                     THEN
      955     6790    4                          GOTO WHAT_NOW;
      956     6791
      957     6792    4                     IF ~CG_RESULTS.NAME
      958     6793    4                     THEN
PL6.E3A0      #001=OCS$SYNTAX File=OCS$SYNTAX.:E05TSI                            WED 07/30/97 04:06 Page:39   
      959     6794    4                          GOTO WHAT_NOW;
      960     6795
      961     6796    4                     OCS_STRUCT$ -> COMGROUP_FID = KC$CGID; /* Initialize area */
      962     6797
      963     6798    4                     IF CG_RESULTS.ACCT
      964     6799    4                     THEN
      965     6800    4                          OCS_STRUCT$ -> COMGROUP_FID.ACCT# = CG_ACCT.ACCT#;
      966     6801
      967     6802    4                     IF CG_RESULTS.NAME
      968     6803    4                     THEN
      969     6804    4                          OCS_STRUCT$ -> COMGROUP_FID.NAME# = CG_NAME;
      970     6805
      971     6806    4                     IF CG_RESULTS.SN
      972     6807    4                     THEN
      973     6808    4                          OCS_STRUCT$ -> COMGROUP_FID.PSN# = CG_SN.SN#(0);
      974     6809
      975     6810    4                     BYTES_ = SIZEC(KC$CGID);
      976     6811
      977     6812
      978     6813        %EJECT;
PL6.E3A0      #001=OCS$SYNTAX File=OCS$SYNTAX.:E05TSI                            WED 07/30/97 04:06 Page:40   
      979     6814                                                /**/
      980     6815                                                /* Move LP_WSN to output
      981     6816                                                     block                */
      982     6817    4                  CASE (23 /* TXLPWSN# */);
      983     6818
      984     6819    4                     OCS_STRUCT$ -> OCS$T8 =
      985     6820    4                          OC_CONSOLE.LP_WSN(OCS_CINDEX);
      986     6821
      987     6822        %EJECT;
PL6.E3A0      #001=OCS$SYNTAX File=OCS$SYNTAX.:E05TSI                            WED 07/30/97 04:06 Page:41   
      988     6823                                                /**/
      989     6824    4                  END;                     /* DO CASE CVSN_ */
      990     6825    3                  OCS_STRUCT$ = PINCRC (OCS_STRUCT$, BYTES_); /* !! */
      991     6826    3                  IF POFFC(OCS_STRUCT$,ADDR(OCS_STRUCTURE)) >
      992     6827    3                       ( 140 /* CSCG_MAXMC# */ - 4 /* SIZE_KNHDR# */ )
      993     6828    3                  THEN
      994     6829    3                       CALL OCS$CHKINP;
      995     6830                                                /**/
      996     6831    3                END;                       /* IF CODE = 0 */
      997     6832    2           END;                            /* DO I */
      998     6833        %EJECT;
PL6.E3A0      #001=OCS$SYNTAX File=OCS$SYNTAX.:E05TSI                            WED 07/30/97 04:06 Page:42   
      999     6834                                                /**/
     1000     6835                                           /* Now that the structure is built,
     1001     6836                                                trace down the Ghost (or MONKEY)
     1002     6837                                           name from the data cell obtained
     1003     6838                                                in the CASE (NAMES#) OCS_NAME */
     1004     6839                                           /* ASSUMPTION: The parsenodes are set
     1005     6840                                                up so that the first SUBLKS$ in
     1006     6841                                                the first parsenode in the data
     1007     6842                                                segment points to the names */
     1008     6843    1        IF OCS_NAMES = 0
     1009     6844    1        THEN
     1010     6845    1             CALL OCS$CHKINP;
     1011     6846                                                /**/
     1012     6847    2        DO J = 0 TO (OCS_NAMES - 1);
     1013     6848                                                /**/
     1014     6849    2             IF OCS_STA (J) = ' '
     1015     6850    2             THEN
     1016     6851    3             DO;
     1017     6852    3                  PTR$ = COMMON.PTR$ -> P$NODE.SUBNDS$(0);
     1018     6853    3                  MAX_BLKS = PTR$ -> P$NODE.NSUBNDS - 1;
     1019     6854    3                  IF MAX_BLKS = 0
     1020     6855    3                  THEN
     1021     6856    3                       CALL OCS$CHKINP;
     1022     6857                                                /**/
     1023     6858    3                  OCS_SUBLKO$ = PTR$ -> P$NODE.SUBNDS$(0);
     1024     6859    3                  OCS_SUBLK$ = OCS_SUBLKO$;
     1025     6860                                                /**/
     1026     6861    3                  I = 1;
     1027     6862    4                  DO WHILE (OCS_SUBLK$ -> P$LIT.CODE < OCS_NAME(J));
     1028     6863    4                       IF I > MAX_BLKS
     1029     6864    4                       THEN
     1030     6865    4                            CALL OCS$CHKINP;
     1031     6866    4                       OCS_SUBLKO$ = OCS_SUBLK$;
     1032     6867    4                       OCS_SUBLK$ = PTR$ -> P$NODE.SUBNDS$ (I);
     1033     6868    4                       I = I + 1;
     1034     6869    4                     END;
     1035     6870                                                /* FOUND! Place in Textc template
PL6.E3A0      #001=OCS$SYNTAX File=OCS$SYNTAX.:E05TSI                            WED 07/30/97 04:06 Page:43   
     1036     6871                                                     and move the text */
     1037     6872    3                  OCS_NUMC = OCS_SUBLK$ -> P$LIT.COUNT;
     1038     6873    3                  OCS_STA(J) = ADDR(OCS_SUBLK$ -> P$LIT.TEXT) -> SECOND$STRING;
     1039     6874                                                /**/
     1040     6875    3                END;                       /* DO IF OKAY TO LOOKUP */
     1041     6876    2           END;                            /* DO J = 0 TO OCS_NAMES - 1 */
     1042     6877                                                /**/
     1043     6878                                                /* Size of structure to return
     1044     6879                                                     to OCP$KEYIN */
     1045     6880    1        OCS_SSIZE = POFFC (OCS_STRUCT$, ADDR(OCS_STRUCTURE));
     1046     6881    1        OCS_ERRCODE = 0;
     1047     6882                                                /**/
     1048     6883                                                /* RETURN TO OCP$KEYIN */
     1049     6884    1        RETURN;
     1050     6885                                                /**/
     1051     6886        %EJECT;
PL6.E3A0      #001=OCS$SYNTAX File=OCS$SYNTAX.:E05TSI                            WED 07/30/97 04:06 Page:44   
     1052     6887                                                /**/
     1053     6888                                                /**/
     1054     6889    1   OCS$ERRORS:
     1055     6890    1        IF OC_PCB.ERROR.CODE ~= %E$SYNERR
     1056     6891    1        THEN
     1057     6892    1             CALL OCS$CHKINP;
     1058     6893    1        OCS_ERRCODE = 3 /* OCS_ERRORS#  */;
     1059     6894                                                /**/
     1060     6895    1        J = OC_PCB.HI_CHAR;
     1061     6896    1        CALL OCS$ANLZ (OC_KEYINBUF$, J);
     1062     6897                                                /**/
     1063     6898    1   OCS$ERRTRN: ;
     1064     6899    1        RETURN;
     1065     6900                                                /**/
     1066     6901    1   END OCS$SYNTAX;
     1067     6902                                                /**/
     1068     6903        %EOD;

PL6.E3A0      #001=OCS$SYNTAX File=OCS$SYNTAX.:E05TSI                            WED 07/30/97 04:06 Page:45   
--  Include file information  --

   KC$CGBLK.:E05TOU  is referenced.
   OC$MESSHD_C.:E05TOU  is referenced.
   OC_DAT_R.:E05TOU  cannot be made into a system file and is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   OCS_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   OCS_SUBS_C.:E05TOU  is referenced.
   OC_SUBS_C.:E05TOU  is referenced.
   OCI_SUBS_C.:E05TOU  is referenced.
   XU_PERR_C.:E05TOU  is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
   XU_SUBS_C.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure OCS$SYNTAX.

   Procedure OCS$SYNTAX requires 1283 words for executable code.
   Procedure OCS$SYNTAX requires 8 words of local(AUTO) storage.

PL6.E3A0      #001=OCS$SYNTAX File=OCS$SYNTAX.:E05TSI                            WED 07/30/97 04:06 Page:46   

 Object Unit name= OCS$SYNTAX                                 File name= OCS$SYNTAX.:E05TOU
 UTS= JUL 30 '97 04:06:12.64 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Data  even  none   201    311  OCS$SYNTAX
    1   DCB   even  none     0      0  M$UC
    2  RoData even  UTS     17     21  OCS$SYNTAX
    3   Proc  even  none  1283   2403  OCS$SYNTAX
    4  RoData even  none    16     20  OCS$SYNTAX

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     3      0   yes            yes      Std        0  OCS$SYNTAX

  ****  Data defs  ****

 Sect OctLoc  Name                           Sect OctLoc  Name
    0      0  OC_PCB
PL6.E3A0      #001=OCS$SYNTAX File=OCS$SYNTAX.:E05TSI                            WED 07/30/97 04:06 Page:47   

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       1 OCS$FAILURES
         yes           Std       0 OCS$CHKINP
         yes           Std       2 OCS$UNEXP
 yes     yes           Std       2 OCC$CHKDIG
         yes           Std       2 OCS$ANLZ
 yes     yes           Std       1 X$PARSE
                       nStd      0 X66_AUTO_0
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     OCS_STRUCTURE                         OCS_SSIZE                             OCS_KSIZE
     OCS_STA                               OCS_NAMES                             OCS_ATTR
     OCS_ERRCODE                           OCS_CINDEX                            OCS_VECTOR
     OCS_ERROR_ADDR                        OCS_FIRST_TIME                        OCS_LEXEMES
     OCS_WORKSPACE                         M$UC                                  OC_INTMSG
     OC_MESSBUF                            OC_MSGBUFFER                          OC_KEYIN#
     OC_PARAM                              OC_CONSOLE$                           OC_KEYINBUF$
     OC_DIR                                OC_INTBIT                             OC_MASK
     B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     NULLSID                               ISSID
PL6.E3A0      #001=OCS$SYNTAX File=OCS$SYNTAX.:E05TSI                            WED 07/30/97 04:06 Page:48   


        1        1        /*M* OCS$SYNTAX KEYIN's keyin parser and output block builder. */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* DMR,PLM=5,IND=5,CTI=5,SDI=5,MCL=10,CSI=0,ECI=0 */
        8        8        %SET LISTSUB='1'B;
        9        9        /*
       10       10        ***********************************************************************
       11       11           ###     ###     ###      #      ###    #   #   #   #   #####    ###    #   #
       12       12          #   #   #   #   #   #    ###    #   #   #   #   #   #     #     #   #   #   #
       13       13          #   #   #       #       # #     #        # #    ##  #     #     #   #    # #
       14       14          #   #   #        ###     ###     ###      #     # # #     #     #####     #
       15       15          #   #   #           #     # #       #     #     #  ##     #     #   #    # #
       16       16          #   #   #   #   #   #    ###    #   #     #     #   #     #     #   #   #   #
       17       17           ###     ###     ###      #      ###      #     #   #     #     #   #   #   #
       18       18        ***********************************************************************
       19       19                                                                          */
       20       20                                                /**/
       21       21        /*D*    Adding a new Keyin attribute (console privilege)
       22       22             -    Place the attribute in OCI_SUBS_C in the form
       23       23                  "K_privlege" and increase MAX_ATTR#.
       24       24             -    If it is for GOOSE, modify console entry for
       25       25                  GOOSE in OCK$KEYIN; otherwise, make sure SUPER knows
       26       26                  how to assign this attribute to a console.
       27       27             -    Adjust OCS_ATTRTAB in OCS$SYNTAX.
       28       28             -    Add lexeme sub to OCS_SUBS_C in the form
       29       29                  "XCATTR_privilege" and increase TOP_ATTR#.
       30       30             -    Place lexeme in OC_KEY_S in the form "LGL_privilege"
       31       31                  (Make sure the placement of the lexeme corresponds
       32       32                  exactly with the table OCS_ATTRTAB)
       33       33             -    Add sub to OC_SUBS_C in the form "M_privilege"            */
       34       34
       35       35                                                /**/
       36       36        OCS$SYNTAX: PROC;
PL6.E3A0      #001=OCS$SYNTAX File=OCS$SYNTAX.:E05TSI                            WED 07/30/97 04:06 Page:49   

     36  3 000000   000000 700200 xent  OCS$SYNTAX   TSX0  ! X66_AUTO_0
         3 000001   000010 000000                    ZERO    8,0

       37       37                                                /**/
       38       38                                                /**/
       39       39    1   DCL OCS$CHKINP ENTRY;
       40       40    1   DCL OCS$UNEXP ENTRY(2);
       41       41    1   DCL OCS$ANLZ ENTRY(2);
       42       42    1   DCL OCC$CHKDIG ENTRY(2) ALTRET;
       43       43    1   DCL OCS$FAILURES ENTRY(1);
       44       44    1   DCL X$PARSE ENTRY(1) ALTRET;
       45       45        %INCLUDE XU_SUBS_C;
       46      137                                                /**/
       47      138        %INCLUDE XU_MACRO_C;
       48     3244        %INCLUDE XU_PERR_C;
       49     3435                                                /**/
       50     3436                                                /**/
       51     3437             %P_PCB         (NAME=OC_PCB,
       52     3438                                 STCLASS="STATIC SYMDEF",
       53     3439                                 R=NIL,
       54     3440                                 W=OCS_WORKSPACE,
       55     3441                                 U$=OCS$FAILURES,
       56     3442                                 WSZ=1024,
       57     3443                                 N#=0);
       58     3642                                           /* OC_PCB.ROOT$ is dynamically built
       59     3643                                                and points to COMMON.
       60     3644                                             OC_PCB.NCHARS is dynamically
       61     3645                                                updated from NWIO.ARS
       62     3646                                                                          */
       63     3647                                                /**/
       64     3648             %PARSE$SYM     (NAME=OC$OUTSYM,
       65     3649                                 STCLASS="BASED");
       66     3687                                                /**/
       67     3688             %PARSE$OUT     (NAME=OC$OUTBLK,
       68     3689                                 STCLASS="BASED");
       69     3734                                                /**/
PL6.E3A0      #001=OCS$SYNTAX File=OCS$SYNTAX.:E05TSI                            WED 07/30/97 04:06 Page:50   
       70     3735             %P$NODE        (NAME=P$NODE,
       71     3736                                 STCLASS="BASED");
       72     3830                                                /**/
       73     3831             %P$LIT         (NAME=P$LIT,
       74     3832                                 STCLASS="BASED");
       75     3885                                                /**/
       76     3886        %INCLUDE OCI_SUBS_C;
       77     3984                                                /**/
       78     3985        %INCLUDE OC_SUBS_C;
       79     4716                                                /**/
       80     4717        %INCLUDE OCS_SUBS_C;
       81     4934                                                /**/
       82     4935        %INCLUDE OCS_DATA_R;
       83     4952                                                /**/
       84     4953
       85     4954        %INCLUDE CP_6;
       86     5035        %INCLUDE CP_6_SUBS;
       87     5575        %INCLUDE OC_DAT_R;
       88     5736
       89     5737        %INCLUDE KC$CGBLK;
       90     5785             %KC$CGID      (FPTN=KC$CGID,
       91     5786                                 STCLASS=CONSTANT);
       92     5812             %KC$CGID       (FPTN=COMGROUP_FID,
       93     5813                                 STCLASS=BASED);
       94     5839
       95     5840
       96     5841             %FPT_FID       (FPTN=GET_COMGROUP_FID,
       97     5842                                 ACCT=CG_ACCT,
       98     5843                                 ASN=CG_ASN,
       99     5844                                 RES=CG_RES,
      100     5845                                 SN=CG_SN,
      101     5846                                 NAME=CG_NAME,
      102     5847                                 RESULTS=CG_RESULTS,
      103     5848                                 TEXTFID=SECOND_STRING);
      104     5871
      105     5872                  %VLP_ACCT (FPTN=CG_ACCT,
      106     5873                                 ACCT='        ');
PL6.E3A0      #001=OCS$SYNTAX File=OCS$SYNTAX.:E05TSI                            WED 07/30/97 04:06 Page:51   
      107     5886
      108     5887                  %VLP_NAME (FPTN=CG_NAME,
      109     5888                                 NAME='                               ');
      110     5915
      111     5916                  %VLR_FID  (FPTN=CG_RESULTS);
      112     5935
      113     5936                  %VLP_SN   (FPTN=CG_SN,
      114     5937                                 N=1);
      115     5950
      116     5951    1   DCL CG_ASN UBIN BYTE STATIC ALIGNED;
      117     5952    1   DCL CG_RES CHAR(4) STATIC;
      118     5953
      119     5954                                                /**/
      120     5955                                                /**/
      121     5956                                           /* Kludge up a pointer to COMMON
      122     5957                                                data page 0 */
      123     5958    1   DCL 1 COMMON STATIC DALIGNED,
      124     5959    1            2 KLUDGE,
      125     5960    1                 3 * UBIN(18) INIT(0) UNAL,
      126     5961    1                 3 * BIT(18) INIT('006005'O) UNAL,
      127     5962    1            2 PTR$ REDEF KLUDGE PTR;
      128     5963                                                /**/
      129     5964                                           /* Parsenode-chase and structure
      130     5965                                                creation pointers */
      131     5966    1   DCL OCS_SUBLK$ PTR STATIC;
      132     5967    1   DCL OCS_SUBLKO$ PTR STATIC;
      133     5968    1   DCL OCS_STRUCT$ PTR STATIC;
      134     5969                                                /**/
      135     5970                                           /* Local loop control and temp storage */
      136     5971    1   DCL MAX_BLKS UBIN WORD STATIC;
      137     5972    1   DCL LCOUNT UBIN WORD STATIC;
      138     5973    1   DCL I UBIN WORD STATIC;
      139     5974    1   DCL J SBIN WORD STATIC ALIGNED;
      140     5975    1   DCL PTR$ PTR STATIC;
      141     5976                                                /**/
      142     5977    1   DCL OCS_NAME (0:3 /* MAX_NAMES# */) UBIN WORD STATIC;
      143     5978                                                /**/
PL6.E3A0      #001=OCS$SYNTAX File=OCS$SYNTAX.:E05TSI                            WED 07/30/97 04:06 Page:52   
      144     5979                                                /* General use data items */
      145     5980    1   DCL BYTES_ UBIN WORD STATIC;
      146     5981    1   DCL CVSN_ UBIN WORD STATIC;
      147     5982    1   DCL OFFSET_ UBIN WORD STATIC;
      148     5983    1   DCL COUNT_ UBIN WORD STATIC;
      149     5984    1   DCL INDEX_ UBIN WORD STATIC;
      150     5985    1   DCL CASE_ UBIN WORD STATIC;
      151     5986    1   DCL CODE_ UBIN WORD STATIC;
      152     5987                                                /**/
      153     5988                                                /* Special TEXTC computation items */
      154     5989    1   DCL NWDS_ UBIN WORD STATIC;
      155     5990    1   DCL NTEMP_ UBIN WORD STATIC;
      156     5991                                                /**/
      157     5992                                           /* String-conversion and manipulation
      158     5993                                                data areas */
      159     5994    1   DCL PLUS CHAR(1) INIT ('+') STATIC UNAL;
      160     5995    1   DCL MINUS CHAR(1) INIT ('-') STATIC UNAL;
      161     5996    1   DCL OCS_NUMC UBIN HALF STATIC UNAL;
      162     5997    1   DCL SECOND_STRING CHAR(64) STATIC;
      163     5998    1   DCL SEC_STRING (0:63) REDEF SECOND_STRING UBIN BYTE UNAL;
      164     5999    1   DCL SECC_STRING (0:63) REDEF SECOND_STRING CHAR(1) UNAL;
      165     6000    1   DCL SECOND$STRING BASED CHAR(OCS_NUMC) CALIGNED;
      166     6001    1   DCL PASS_TWSN CHAR(8) STATIC UNAL;
      167     6002    1   DCL OCS_CONVERTED UBIN WORD ALIGNED STATIC;
      168     6003    1   DCL OCS_CONVERTEDS SBIN WORD ALIGNED STATIC;
      169     6004                                                /**/
      170     6005        %EJECT;
PL6.E3A0      #001=OCS$SYNTAX File=OCS$SYNTAX.:E05TSI                            WED 07/30/97 04:06 Page:53   
      171     6006                                                /**/
      172     6007                                           /* XLATE table for lc to uc conversion */
      173     6008                                                /**/
      174     6009    1   DCL OCS_XTAB1 (0:127) UBIN BYTE UNAL STATIC INIT (
      175     6010    1   0*48,
      176     6011    1   ASCBIN('0'),
      177     6012    1   ASCBIN('1'),
      178     6013    1   ASCBIN('2'),
      179     6014    1   ASCBIN('3'),
      180     6015    1   ASCBIN('4'),
      181     6016    1   ASCBIN('5'),
      182     6017    1   ASCBIN('6'),
      183     6018    1   ASCBIN('7'),
      184     6019    1   ASCBIN('8'),
      185     6020    1   ASCBIN('9'),
      186     6021    1   0*6,
      187     6022    1   0,
      188     6023    1   ASCBIN('A'),
      189     6024    1   ASCBIN('B'),
      190     6025    1   ASCBIN('C'),
      191     6026    1   ASCBIN('D'),
      192     6027    1   ASCBIN('E'),
      193     6028    1   ASCBIN('F'),
      194     6029    1   ASCBIN('G'),
      195     6030    1   ASCBIN('H'),
      196     6031    1   ASCBIN('I'),
      197     6032    1   ASCBIN('J'),
      198     6033    1   ASCBIN('K'),
      199     6034    1   ASCBIN('L'),
      200     6035    1   ASCBIN('M'),
      201     6036    1   ASCBIN('N'),
      202     6037    1   ASCBIN('O'),
      203     6038    1   ASCBIN('P'),
      204     6039    1   ASCBIN('Q'),
      205     6040    1   ASCBIN('R'),
      206     6041    1   ASCBIN('S'),
      207     6042    1   ASCBIN('T'),
PL6.E3A0      #001=OCS$SYNTAX File=OCS$SYNTAX.:E05TSI                            WED 07/30/97 04:06 Page:54   
      208     6043    1   ASCBIN('U'),
      209     6044    1   ASCBIN('V'),
      210     6045    1   ASCBIN('W'),
      211     6046    1   ASCBIN('X'),
      212     6047    1   ASCBIN('Y'),
      213     6048    1   ASCBIN('Z'),
      214     6049    1   0*6,
      215     6050    1   ASCBIN('A'),
      216     6051    1   ASCBIN('B'),
      217     6052    1   ASCBIN('C'),
      218     6053    1   ASCBIN('D'),
      219     6054    1   ASCBIN('E'),
      220     6055    1   ASCBIN('F'),
      221     6056    1   ASCBIN('G'),
      222     6057    1   ASCBIN('H'),
      223     6058    1   ASCBIN('I'),
      224     6059    1   ASCBIN('J'),
      225     6060    1   ASCBIN('K'),
      226     6061    1   ASCBIN('L'),
      227     6062    1   ASCBIN('M'),
      228     6063    1   ASCBIN('N'),
      229     6064    1   ASCBIN('O'),
      230     6065    1   ASCBIN('P'),
      231     6066    1   ASCBIN('Q'),
      232     6067    1   ASCBIN('R'),
      233     6068    1   ASCBIN('S'),
      234     6069    1   ASCBIN('T'),
      235     6070    1   ASCBIN('U'),
      236     6071    1   ASCBIN('V'),
      237     6072    1   ASCBIN('W'),
      238     6073    1   ASCBIN('X'),
      239     6074    1   ASCBIN('Y'),
      240     6075    1   ASCBIN('Z'),
      241     6076    1   0*5);
      242     6077                                                /**/
      243     6078                                           /* Create "mask" templates to store
      244     6079                                                and manipulate various sized
PL6.E3A0      #001=OCS$SYNTAX File=OCS$SYNTAX.:E05TSI                            WED 07/30/97 04:06 Page:55   
      245     6080                                                fields under pointer control */
      246     6081    1   DCL OCS$T1 BASED CHAR(1) CALIGNED;
      247     6082    1   DCL OCS$T2 BASED CHAR(2) CALIGNED;
      248     6083    1   DCL OCS$T3 BASED CHAR(3) CALIGNED;
      249     6084    1   DCL OCS$T4 BASED CHAR(4) CALIGNED;
      250     6085    1   DCL OCS$T6 BASED CHAR(6) CALIGNED;
      251     6086    1   DCL OCS$T8 BASED CHAR(8) CALIGNED;
      252     6087    1   DCL OCS$T12 BASED CHAR(12) CALIGNED;
      253     6088    1   DCL OCS$T16 BASED CHAR(16) CALIGNED;
      254     6089                                                /**/
      255     6090    1   DCL 1 OCS$2T8 BASED CALIGNED,
      256     6091    1            2 T81 CHAR(8) CALIGNED,
      257     6092    1            2 T82 CHAR(8) CALIGNED;
      258     6093                                                /**/
      259     6094    1   DCL 1 OCS$2B72 BASED CALIGNED,
      260     6095    1            2 B721 BIT(72) CALIGNED,
      261     6096    1            2 B722 BIT(72) CALIGNED;
      262     6097                                                /**/
      263     6098                                                /**/
      264     6099    1   DCL 1 OCS$TN BASED CALIGNED,
      265     6100    1            2 COUNT UBIN BYTE CALIGNED,
      266     6101    1            2 TEXT CHAR(OCS$TN.COUNT) CALIGNED;
      267     6102                                                /**/
      268     6103    1   DCL OCS$D1 BASED UBIN BYTE CALIGNED;
      269     6104    1   DCL OCS$D2 BASED UBIN HALF CALIGNED;
      270     6105    1   DCL OCS$D3 BASED UBIN(27) CALIGNED;
      271     6106    1   DCL OCS$D4 BASED UBIN WORD CALIGNED;
      272     6107                                                /**/
      273     6108    1   DCL OCS$DS1 BASED SBIN BYTE CALIGNED;
      274     6109    1   DCL OCS$DS2 BASED SBIN HALF CALIGNED;
      275     6110    1   DCL OCS$DS3 BASED SBIN(27) CALIGNED;
      276     6111    1   DCL OCS$DS4 BASED SBIN WORD CALIGNED;
      277     6112                                                /**/
      278     6113    1   DCL OCS$B2 BASED BIT(18) CALIGNED;
      279     6114                                                /**/
      280     6115                                                /**/
      281     6116        %EJECT;
PL6.E3A0      #001=OCS$SYNTAX File=OCS$SYNTAX.:E05TSI                            WED 07/30/97 04:06 Page:56   
      282     6117                                                /**/
      283     6118    1   DCL 1 OCS_PARSED (0:19 /* MAX_PARSED# */) STATIC DALIGNED,
      284     6119    1            2 PTR$ PTR,
      285     6120    1            2 NCODE UBIN WORD;
      286     6121                                                /**/
      287     6122    1   DCL 1 OCS_ATTRTAB (0:18 /* MAX_ATTR# */) STATIC UNAL,
      288     6123    1            2 ATTR BIT(36) UNAL INIT (
      289     6124    1              '200000'O /* K_SYS  */,
      290     6125    1              '200000200000'O /* K_SYSALL */,
      291     6126    1                  '100000100000'O /* K_DEVCALL */,
      292     6127    1                  '040000040000'O /* K_ADMINALL */,
      293     6128    1              '020000'O /* K_DLTA  */,
      294     6129    1              '010000'O /* K_LIBRN */,
      295     6130    1              '004000'O /* K_COMM */,
      296     6131    1                  '100000100000'O /* K_TAPEALL */,
      297     6132    1                  '100000100000'O /* K_DISKALL */,
      298     6133    1                  '100000100000'O /* K_URALL */,
      299     6134    1                  '040000'O /* K_ADMIN */,
      300     6135    1                  '100000'O /* K_DEVC  */,
      301     6136    1                  '100000'O /* K_TAPE */,
      302     6137    1                  '100000'O /* K_DISK */,
      303     6138    1                  '100000'O /* K_UR */,
      304     6139    1                  '377377377377'O /* K_MISC */,
      305     6140    1                  '001000001000'O /* K_TPALL */,
      306     6141    1                  '001000'O /* K_TP */,
      307     6142    1                  '000400'O /* K_GOOSE */);
      308     6143                                                /**/
      309     6144        %EJECT;
PL6.E3A0      #001=OCS$SYNTAX File=OCS$SYNTAX.:E05TSI                            WED 07/30/97 04:06 Page:57   
      310     6145        /*
      311     6146                  begin O C S $ S Y N T A X
      312     6147                                                */
      313     6148                                                /**/
      314     6149    2        DO WHILE (OCS_FIRST_TIME);

   6149  3 000002   000000 234000 xsym               SZN     OCS_FIRST_TIME
         3 000003   000011 605000 3                  TPL     s:6153

      315     6150    2             OC_PCB.ROOT$ = COMMON.PTR$;

   6150  3 000004   000100 236000 0                  LDQ     COMMON
         3 000005   000001 756000 0                  STQ     OC_PCB+1

      316     6151    2             OCS_FIRST_TIME = '0'B;

   6151  3 000006   000000 450000 xsym               STZ     OCS_FIRST_TIME

      317     6152    2           END;                            /* DO WHILE FIRST TIME THRU */

   6152  3 000007   000000 234000 xsym               SZN     OCS_FIRST_TIME
         3 000010   000004 604000 3                  TMI     s:6150

      318     6153    1        OC_PCB.TEXT$ = OC_KEYINBUF$;

   6153  3 000011   000000 236000 xsym               LDQ     OC_KEYINBUF$
         3 000012   000000 756000 0                  STQ     OC_PCB

      319     6154    1        OC_PCB.NCHARS = OCS_KSIZE;         /* ARS from read complete */

   6154  3 000013   000000 235000 xsym               LDA     OCS_KSIZE
         3 000014   000011 755000 0                  STA     OC_PCB+9

      320     6155    1        REMEMBER OCS$ERRTRN IN OCS_ERROR_ADDR;

   6155  3 000015   002402 635000 3                  EAA     OCS$ERRTRN
         3 000016   000000 452400 xsym               STP2    OCS_ERROR_ADDR
PL6.E3A0      #001=OCS$SYNTAX File=OCS$SYNTAX.:E05TSI                            WED 07/30/97 04:06 Page:58   
         3 000017   000001 755000 xsym               STA     OCS_ERROR_ADDR+1

      321     6156    1        OCS_ERRCODE = 0;

   6156  3 000020   000000 450000 xsym               STZ     OCS_ERRCODE

      322     6157                                           /* Call X$PARSE ... note that
      323     6158                                                ROOT node is 1st item in
      324     6159                                                COMMON segment..... */
      325     6160    1        CALL X$PARSE (OC_PCB) ALTRET (OCS$ERRORS);

   6160  3 000021   000000 630400 4                  EPPR0   0
         3 000022   000017 631400 xsym               EPPR1   B_VECTNIL+15
         3 000023   000000 701000 xent               TSX1    X$PARSE
         3 000024   002363 702000 3                  TSX2    OCS$ERRORS

      326     6161                                                /**/
      327     6162    1        OC_KEYIN# = OC_PCB.OUT$ -> OC$OUTSYM.CODE;

   6162  3 000025   000003 470400 0                  LDP0    OC_PCB+3
         3 000026   000000 236100                    LDQ     0,,PR0
         3 000027   777777 376007                    ANQ     -1,DL
         3 000030   000000 756000 xsym               STQ     OC_KEYIN#

      328     6163    1        IF OC_KEYIN# = 0

   6163  3 000031   000033 601000 3                  TNZ     s:6179

      329     6164    1        THEN
      330     6165    1             RETURN;

   6165  3 000032   000000 702200 xent               TSX2  ! X66_ARET

      331     6166                                           /* Keyin must be tracked down here
      332     6167                                                Basic technique is gather
      333     6168                                                pointers to textc blocks from
      334     6169                                                output nodes into an array
PL6.E3A0      #001=OCS$SYNTAX File=OCS$SYNTAX.:E05TSI                            WED 07/30/97 04:06 Page:59   
      335     6170                                                indexed by the subnode #.
      336     6171                                                This will create the order
      337     6172                                                that the data will be built
      338     6173                                                into the keyin output structure
      339     6174                                                Note special case handling for
      340     6175                                                console types and MONKEY vector
      341     6176                                                numbers */
      342     6177                                                /**/
      343     6178                                                /* Clean out data array */
      344     6179    2        DO I = 0 TO 3 /* MAX_NAMES# */;

   6179  3 000033   000107 450000 0                  STZ     I

      345     6180    2             OCS_STA(I) = ' ';

   6180  3 000034   000107 235000 0                  LDA     I
         3 000035   000001 735000                    ALS     1
         3 000036   000000 620005                    EAX0    0,AL
         3 000037   000000 621005                    EAX1    0,AL
         3 000040   000035 235000 xsym               LDA     B_VECTNIL+29
         3 000041   000035 236000 xsym               LDQ     B_VECTNIL+29
         3 000042   000000 755010 xsym               STA     OCS_STA,X0
         3 000043   000001 756011 xsym               STQ     OCS_STA+1,X1

      346     6181    2             OCS_NAME(I) = 0;

   6181  3 000044   000107 722000 0                  LXL2    I
         3 000045   000112 450012 0                  STZ     OCS_NAME,X2

      347     6182    2           END;                            /* DO I = 0 TO MAX_NAMES# */

   6182  3 000046   000107 235000 0                  LDA     I
         3 000047   000001 035007                    ADLA    1,DL
         3 000050   000107 755000 0                  STA     I
         3 000051   000004 115007                    CMPA    4,DL
         3 000052   000034 602000 3                  TNC     s:6180

PL6.E3A0      #001=OCS$SYNTAX File=OCS$SYNTAX.:E05TSI                            WED 07/30/97 04:06 Page:60   
      348     6183    2        DO I = 0 TO 19 /* MAX_PARSED# */;

   6183  3 000053   000107 450000 0                  STZ     I

      349     6184    2             OCS_PARSED.PTR$(I) = ADDR(NIL);

   6184  3 000054   000107 235000 0                  LDA     I
         3 000055   000001 735000                    ALS     1
         3 000056   000001 236000 xsym               LDQ     B_VECTNIL+1
         3 000057   000216 756005 0                  STQ     OCS_PARSED,AL

      350     6185    2             OCS_PARSED.NCODE(I) = 0;

   6185  3 000060   000217 450005 0                  STZ     OCS_PARSED+1,AL

      351     6186    2           END;

   6186  3 000061   000107 235000 0                  LDA     I
         3 000062   000001 035007                    ADLA    1,DL
         3 000063   000107 755000 0                  STA     I
         3 000064   000024 115007                    CMPA    20,DL
         3 000065   000054 602000 3                  TNC     s:6184

      352     6187    1        OCS_ATTR = '0'B;

   6187  3 000066   000000 450000 xsym               STZ     OCS_ATTR

      353     6188    1        OCS_VECTOR = 0;

   6188  3 000067   000000 450000 xsym               STZ     OCS_VECTOR

      354     6189    1        OCS_SSIZE = 0;

   6189  3 000070   000000 450000 xsym               STZ     OCS_SSIZE

      355     6190    1        OCS_NAMES = 0;

PL6.E3A0      #001=OCS$SYNTAX File=OCS$SYNTAX.:E05TSI                            WED 07/30/97 04:06 Page:61   
   6190  3 000071   000000 450000 xsym               STZ     OCS_NAMES

      356     6191    1        OCS_STRUCT$ = ADDR(OCS_STRUCTURE);

   6191  3 000072   000001 236000 4                  LDQ     1
         3 000073   000104 756000 0                  STQ     OCS_STRUCT$

      357     6192                                                /**/
      358     6193                                           /* Chase the pointer chains down
      359     6194                                                Certain assumptions are made
      360     6195                                                about depth and tree structure
      361     6196                                                that may prevent certain types
      362     6197                                                of syntaxes from being parsed
      363     6198                                                for present  */
      364     6199    1        IF OC_PCB.OUT$ -> OC$OUTBLK.NSUBLKS = 0

   6199  3 000074   000003 470400 0                  LDP0    OC_PCB+3
         3 000075   000001 220100                    LDX0    1,,PR0
         3 000076   000102 601000 3                  TNZ     s:6202

      365     6200    1        THEN
      366     6201    1             CALL OCS$CHKINP;

   6201  3 000077   000002 631400 xsym               EPPR1   B_VECTNIL+2
         3 000100   000000 701000 xent               TSX1    OCS$CHKINP
         3 000101   000000 011000                    NOP     0

      367     6202    1        MAX_BLKS = OC_PCB.OUT$ -> OC$OUTBLK.NSUBLKS - 1;

   6202  3 000102   000003 470400 0                  LDP0    OC_PCB+3
         3 000103   000001 236100                    LDQ     1,,PR0
         3 000104   000022 772000                    QRL     18
         3 000105   000001 136007                    SBLQ    1,DL
         3 000106   000105 756000 0                  STQ     MAX_BLKS

      368     6203                                                /**/
      369     6204                                                /**/
PL6.E3A0      #001=OCS$SYNTAX File=OCS$SYNTAX.:E05TSI                            WED 07/30/97 04:06 Page:62   
      370     6205    2        DO I = 0 TO MAX_BLKS;

   6205  3 000107   000107 450000 0                  STZ     I
         3 000110   000274 710000 3                  TRA     s:6291+3

      371     6206    2             OCS_SUBLKO$ = ADDR(NIL);

   6206  3 000111   000001 236000 xsym               LDQ     B_VECTNIL+1
         3 000112   000103 756000 0                  STQ     OCS_SUBLKO$

      372     6207    2             OCS_SUBLK$ = OC_PCB.OUT$ -> OC$OUTBLK.SUBLK$(I);

   6207  3 000113   000003 470400 0                  LDP0    OC_PCB+3
         3 000114   000107 720000 0                  LXL0    I
         3 000115   000003 236110                    LDQ     3,X0,PR0
         3 000116   000102 756000 0                  STQ     OCS_SUBLK$

      373     6208        %EJECT;
PL6.E3A0      #001=OCS$SYNTAX File=OCS$SYNTAX.:E05TSI                            WED 07/30/97 04:06 Page:63   
      374     6209                                                /**/
      375     6210                                           /* LCOUNT is loop count variable
      376     6211                                                maintained to prevent infinite
      377     6212                                                looping in the pointer chanse
      378     6213                                                search */
      379     6214    2             LCOUNT = 0;

   6214  3 000117   000106 450000 0                  STZ     LCOUNT

      380     6215                                                /**/
      381     6216    3             DO WHILE (OCS_SUBLK$ -> OC$OUTBLK.CODE < 500 /* LOW_LEXEME# */ );

   6216  3 000120   000102 471400 0                  LDP1    OCS_SUBLK$
         3 000121   100000 721100                    LXL1    0,,PR1
         3 000122   000764 101003                    CMPX1   500,DU
         3 000123   000145 603000 3                  TRC     s:6239

      382     6217    3                  OCS_SUBLKO$ = OCS_SUBLK$;

   6217  3 000124   000102 236000 0                  LDQ     OCS_SUBLK$
         3 000125   000103 756000 0                  STQ     OCS_SUBLKO$

      383     6218    3                  OCS_SUBLK$ = OCS_SUBLKO$ -> OC$OUTSYM.TEXTC$;

   6218  3 000126   000103 470400 0                  LDP0    OCS_SUBLKO$
         3 000127   000003 236100                    LDQ     3,,PR0
         3 000130   000102 756000 0                  STQ     OCS_SUBLK$

      384     6219    3                  LCOUNT = LCOUNT + 1;

   6219  3 000131   000106 235000 0                  LDA     LCOUNT
         3 000132   000001 035007                    ADLA    1,DL
         3 000133   000106 755000 0                  STA     LCOUNT

      385     6220    3                  IF LCOUNT > 49 /* MAX_LOOPS# */

   6220  3 000134   000062 115007                    CMPA    50,DL
PL6.E3A0      #001=OCS$SYNTAX File=OCS$SYNTAX.:E05TSI                            WED 07/30/97 04:06 Page:64   
         3 000135   000141 602000 3                  TNC     s:6223

      386     6221    3                  THEN
      387     6222    3                       CALL OCS$CHKINP;

   6222  3 000136   000002 631400 xsym               EPPR1   B_VECTNIL+2
         3 000137   000000 701000 xent               TSX1    OCS$CHKINP
         3 000140   000000 011000                    NOP     0

      388     6223    3                END;

   6223  3 000141   000102 470400 0                  LDP0    OCS_SUBLK$
         3 000142   000000 720100                    LXL0    0,,PR0
         3 000143   000764 100003                    CMPX0   500,DU
         3 000144   000124 602000 3                  TNC     s:6217

      389     6224        %EJECT;
PL6.E3A0      #001=OCS$SYNTAX File=OCS$SYNTAX.:E05TSI                            WED 07/30/97 04:06 Page:65   
      390     6225                                           /* Now the pointers are at
      391     6226                                                subnode(n) and appropriate
      392     6227                                                internal code node
      393     6228                                        ** If the code returned is a conversion
      394     6229                                           type item, save the code and textc.
      395     6230                                        ** If the code is a special internal
      396     6231                                           conversion type item, save the code
      397     6232                                           and textc.
      398     6233                                        ** If the code is a device attribute
      399     6234                                           item, OR the appropriate bits into
      400     6235                                           the attribute save cell.
      401     6236                                        ** If the item is a Ghost selector or
      402     6237                                           MONKEY vector selector, stash it
      403     6238                                           in the appropriate cell  */
      404     6239    2             CODE_ = OCS_SUBLK$ -> OC$OUTBLK.CODE;

   6239  3 000145   000102 470400 0                  LDP0    OCS_SUBLK$
         3 000146   000000 236100                    LDQ     0,,PR0
         3 000147   777777 376007                    ANQ     -1,DL
         3 000150   000124 756000 0                  STQ     CODE_

      405     6240    2             IF CODE_ < 750 /* TOP_VECT# */

   6240  3 000151   001356 116007                    CMPQ    750,DL
         3 000152   000156 603000 3                  TRC     s:6243

      406     6241    2             THEN CASE_ = 5 /* CASE_VECT# */;

   6241  3 000153   000005 235007                    LDA     5,DL
         3 000154   000123 755000 0                  STA     CASE_
         3 000155   000205 710000 3                  TRA     s:6259

      407     6242    2             ELSE
      408     6243    2                  IF CODE_ < 900 /* TOP_NAMES# */

   6243  3 000156   001604 116007                    CMPQ    900,DL
         3 000157   000163 603000 3                  TRC     s:6246
PL6.E3A0      #001=OCS$SYNTAX File=OCS$SYNTAX.:E05TSI                            WED 07/30/97 04:06 Page:66   

      409     6244    2                  THEN CASE_ = 4 /* CASE_NAMES# */;

   6244  3 000160   000004 235007                    LDA     4,DL
         3 000161   000123 755000 0                  STA     CASE_
         3 000162   000205 710000 3                  TRA     s:6259

      410     6245    2                  ELSE
      411     6246    2                       IF CODE_ < 930 /* TOP_LEXEMES# */

   6246  3 000163   001642 116007                    CMPQ    930,DL
         3 000164   000170 603000 3                  TRC     s:6249

      412     6247    2                       THEN CASE_ = 3 /* CASE_LEXEMES# */;

   6247  3 000165   000003 235007                    LDA     3,DL
         3 000166   000123 755000 0                  STA     CASE_
         3 000167   000205 710000 3                  TRA     s:6259

      413     6248    2                       ELSE
      414     6249    2                            IF CODE_ < 952 /* TOP_FORCED# */

   6249  3 000170   001670 116007                    CMPQ    952,DL
         3 000171   000175 603000 3                  TRC     s:6252

      415     6250    2                            THEN CASE_ = 2 /* CASE_FORCED# */;

   6250  3 000172   000002 235007                    LDA     2,DL
         3 000173   000123 755000 0                  STA     CASE_
         3 000174   000205 710000 3                  TRA     s:6259

      416     6251    2                            ELSE
      417     6252    2                                 IF CODE_ < 975 /* TOP_INTRINS# */

   6252  3 000175   001717 116007                    CMPQ    975,DL
         3 000176   000202 603000 3                  TRC     s:6255

PL6.E3A0      #001=OCS$SYNTAX File=OCS$SYNTAX.:E05TSI                            WED 07/30/97 04:06 Page:67   
      418     6253    2                                 THEN CASE_ = 1 /* CASE_INTRINS# */;

   6253  3 000177   000001 235007                    LDA     1,DL
         3 000200   000123 755000 0                  STA     CASE_
         3 000201   000205 710000 3                  TRA     s:6259

      419     6254    2                                 ELSE
      420     6255    2                                      IF CODE_ < 999 /* TOP_ATTR# */

   6255  3 000202   001747 116007                    CMPQ    999,DL
         3 000203   000205 603000 3                  TRC     s:6259

      421     6256    2                                      THEN CASE_ = 0 /* CASE_ATTR# */;

   6256  3 000204   000123 450000 0                  STZ     CASE_

      422     6257                                                /**/
      423     6258                                                /**/
      424     6259    3             DO CASE ( CASE_ );

   6259  3 000205   000123 235000 0                  LDA     CASE_
         3 000206   000006 115007                    CMPA    6,DL
         3 000207   000211 602005 3                  TNC     s:6259+4,AL
         3 000210   000271 710000 3                  TRA     s:6291
         3 000211   000260 710000 3                  TRA     s:6284
         3 000212   000233 710000 3                  TRA     s:6272
         3 000213   000233 710000 3                  TRA     s:6272
         3 000214   000233 710000 3                  TRA     s:6272
         3 000215   000217 710000 3                  TRA     s:6262
         3 000216   000267 710000 3                  TRA     s:6288

      425     6260                                                /**/
      426     6261    3             CASE ( 4 /* CASE_NAMES# */ );

      427     6262    3                OCS_NAME(OCS_NAMES) = OCS_SUBLK$ -> OC$OUTBLK.CODE;

   6262  3 000217   000000 720000 xsym               LXL0    OCS_NAMES
PL6.E3A0      #001=OCS$SYNTAX File=OCS$SYNTAX.:E05TSI                            WED 07/30/97 04:06 Page:68   
         3 000220   000112 756010 0                  STQ     OCS_NAME,X0

      428     6263    3                IF OCS_NAMES < 3 /* MAX_NAMES# */

   6263  3 000221   000000 235000 xsym               LDA     OCS_NAMES
         3 000222   000003 115007                    CMPA    3,DL
         3 000223   000227 603000 3                  TRC     s:6267

      429     6264    3                THEN
      430     6265    3                     OCS_NAMES = OCS_NAMES + 1;

   6265  3 000224   000001 035007                    ADLA    1,DL
         3 000225   000000 755000 xsym               STA     OCS_NAMES
         3 000226   000271 710000 3                  TRA     s:6291

      431     6266    3                ELSE
      432     6267    3                     CALL OCS$CHKINP;

   6267  3 000227   000002 631400 xsym               EPPR1   B_VECTNIL+2
         3 000230   000000 701000 xent               TSX1    OCS$CHKINP
         3 000231   000000 011000                    NOP     0
         3 000232   000271 710000 3                  TRA     s:6291

      433     6268                                                /**/
      434     6269    3             CASE ( 3 /* CASE_LEXEMES# */,

      435     6270    3                          1 /* CASE_INTRINS# */,
      436     6271    3                          2 /* CASE_FORCED# */ );
      437     6272    3                INDEX_ = OCS_SUBLKO$ -> OC$OUTBLK.CODE;

   6272  3 000233   000103 471400 0                  LDP1    OCS_SUBLKO$
         3 000234   100000 236100                    LDQ     0,,PR1
         3 000235   777777 376007                    ANQ     -1,DL
         3 000236   000122 756000 0                  STQ     INDEX_

      438     6273    3                IF INDEX_ > 19 /* MAX_PARSED# */

PL6.E3A0      #001=OCS$SYNTAX File=OCS$SYNTAX.:E05TSI                            WED 07/30/97 04:06 Page:69   
   6273  3 000237   000024 116007                    CMPQ    20,DL
         3 000240   000244 602000 3                  TNC     s:6276

      439     6274    3                THEN
      440     6275    3                     CALL OCS$CHKINP;

   6275  3 000241   000002 631400 xsym               EPPR1   B_VECTNIL+2
         3 000242   000000 701000 xent               TSX1    OCS$CHKINP
         3 000243   000000 011000                    NOP     0

      441     6276    3                IF OCS_PARSED.PTR$ (INDEX_) = ADDR(NIL)

   6276  3 000244   000122 235000 0                  LDA     INDEX_
         3 000245   000001 735000                    ALS     1
         3 000246   000216 236005 0                  LDQ     OCS_PARSED,AL
         3 000247   000001 116000 xsym               CMPQ    B_VECTNIL+1
         3 000250   000271 601000 3                  TNZ     s:6291

      442     6277    3                THEN
      443     6278    4                DO;

      444     6279    4                     OCS_PARSED.PTR$ (INDEX_) = OCS_SUBLK$ -> OC$OUTSYM.TEXTC$;

   6279  3 000251   000102 470400 0                  LDP0    OCS_SUBLK$
         3 000252   000003 236100                    LDQ     3,,PR0
         3 000253   000216 756005 0                  STQ     OCS_PARSED,AL

      445     6280    4                     OCS_PARSED.NCODE(INDEX_) = OCS_SUBLK$ -> OC$OUTSYM.CODE;

   6280  3 000254   000000 236100                    LDQ     0,,PR0
         3 000255   777777 376007                    ANQ     -1,DL
         3 000256   000217 756005 0                  STQ     OCS_PARSED+1,AL

      446     6281    4                   END;

   6281  3 000257   000271 710000 3                  TRA     s:6291

PL6.E3A0      #001=OCS$SYNTAX File=OCS$SYNTAX.:E05TSI                            WED 07/30/97 04:06 Page:70   
      447     6282                                                /**/
      448     6283    3             CASE ( 0 /* CASE_ATTR# */ );

      449     6284    3                INDEX_ = OCS_SUBLK$ -> OC$OUTBLK.CODE - 980 /* BOT_ATTR# */;

   6284  3 000260   001724 136007                    SBLQ    980,DL
         3 000261   000122 756000 0                  STQ     INDEX_

      450     6285    3                OCS_ATTR = OCS_ATTR | OCS_ATTRTAB.ATTR(INDEX_);

   6285  3 000262   000000 620006                    EAX0    0,QL
         3 000263   000000 236000 xsym               LDQ     OCS_ATTR
         3 000264   000266 276010 0                  ORQ     OCS_ATTRTAB,X0
         3 000265   000000 756000 xsym               STQ     OCS_ATTR
         3 000266   000271 710000 3                  TRA     s:6291

      451     6286                                                /**/
      452     6287    3             CASE ( 5 /* CASE_VECT# */ );

      453     6288    3                OCS_VECTOR = OCS_SUBLK$ -> OC$OUTBLK.CODE - 500 /* LOW_VECT# */;

   6288  3 000267   000764 136007                    SBLQ    500,DL
         3 000270   000000 756000 xsym               STQ     OCS_VECTOR

      454     6289    3             END;                          /* DO CASE */

      455     6290                                                /**/
      456     6291    2           END;                            /* DO I = 0 TO NSUBLKS-1 (MAX_BLKS) */

   6291  3 000271   000107 235000 0                  LDA     I
         3 000272   000001 035007                    ADLA    1,DL
         3 000273   000107 755000 0                  STA     I
         3 000274   000105 236000 0                  LDQ     MAX_BLKS
         3 000275   000107 116000 0                  CMPQ    I
         3 000276   000111 603000 3                  TRC     s:6206

      457     6292                                                /**/
PL6.E3A0      #001=OCS$SYNTAX File=OCS$SYNTAX.:E05TSI                            WED 07/30/97 04:06 Page:71   
      458     6293        %EJECT;
PL6.E3A0      #001=OCS$SYNTAX File=OCS$SYNTAX.:E05TSI                            WED 07/30/97 04:06 Page:72   
      459     6294                                                /**/
      460     6295                                           /* Examine the parsed blocks for
      461     6296                                                lexeme codes and pointers to
      462     6297                                                text.  Build the output struct-
      463     6298                                                ure accordingly. */
      464     6299    2        DO I = 1 TO 19 /* MAX_PARSED# */;

   6299  3 000277   000001 235007                    LDA     1,DL
         3 000300   000107 755000 0                  STA     I

      465     6300    2             CODE_ = OCS_PARSED.NCODE (I);

   6300  3 000301   000107 235000 0                  LDA     I
         3 000302   000001 735000                    ALS     1
         3 000303   000217 235005 0                  LDA     OCS_PARSED+1,AL
         3 000304   000124 755000 0                  STA     CODE_

      466     6301    2             IF CODE_ ~= 0

   6301  3 000305   002233 600000 3                  TZE     s:6832

      467     6302    2             THEN
      468     6303    3             DO;

      469     6304    3                  PTR$ = OCS_PARSED.PTR$(I);

   6304  3 000306   000107 236000 0                  LDQ     I
         3 000307   000001 736000                    QLS     1
         3 000310   000216 236006 0                  LDQ     OCS_PARSED,QL
         3 000311   000111 756000 0                  STQ     PTR$

      470     6305    3                  INDEX_ = 0;

   6305  3 000312   000122 450000 0                  STZ     INDEX_

      471     6306    4                  DO WHILE (CODE_ ~= OCS_LEXEMES.CODE(INDEX_));

PL6.E3A0      #001=OCS$SYNTAX File=OCS$SYNTAX.:E05TSI                            WED 07/30/97 04:06 Page:73   
   6306  3 000313   000122 235000 0                  LDA     INDEX_
         3 000314   000002 735000                    ALS     2
         3 000315   000000 236005 xsym               LDQ     OCS_LEXEMES,AL
         3 000316   777777 376007                    ANQ     -1,DL
         3 000317   000124 116000 0                  CMPQ    CODE_
         3 000320   000337 600000 3                  TZE     s:6312

      472     6307    4                       INDEX_ = INDEX_ + 1;

   6307  3 000321   000122 235000 0                  LDA     INDEX_
         3 000322   000001 035007                    ADLA    1,DL
         3 000323   000122 755000 0                  STA     INDEX_

      473     6308    4                       IF INDEX_ > 49 /* MAX_LEXEMES# */

   6308  3 000324   000062 115007                    CMPA    50,DL
         3 000325   000331 602000 3                  TNC     s:6311

      474     6309    4                       THEN
      475     6310    4                            CALL OCS$CHKINP;

   6310  3 000326   000002 631400 xsym               EPPR1   B_VECTNIL+2
         3 000327   000000 701000 xent               TSX1    OCS$CHKINP
         3 000330   000000 011000                    NOP     0

      476     6311    4                     END;

   6311  3 000331   000122 235000 0                  LDA     INDEX_
         3 000332   000002 735000                    ALS     2
         3 000333   000000 236005 xsym               LDQ     OCS_LEXEMES,AL
         3 000334   777777 376007                    ANQ     -1,DL
         3 000335   000124 116000 0                  CMPQ    CODE_
         3 000336   000321 601000 3                  TNZ     s:6307

      477     6312    3                  BYTES_ = OCS_LEXEMES.BYTES(INDEX_);

   6312  3 000337   000000 236005 xsym               LDQ     OCS_LEXEMES,AL
PL6.E3A0      #001=OCS$SYNTAX File=OCS$SYNTAX.:E05TSI                            WED 07/30/97 04:06 Page:74   
         3 000340   000033 772000                    QRL     27
         3 000341   000116 756000 0                  STQ     BYTES_

      478     6313    3                  CVSN_ = OCS_LEXEMES.CVSN (INDEX_);

   6313  3 000342   000000 236005 xsym               LDQ     OCS_LEXEMES,AL
         3 000343   000022 772000                    QRL     18
         3 000344   000777 376007                    ANQ     511,DL
         3 000345   000117 756000 0                  STQ     CVSN_

      479     6314    3                  OFFSET_= OCS_LEXEMES.OFFSET(INDEX_);

   6314  3 000346   000003 236005 xsym               LDQ     OCS_LEXEMES+3,AL
         3 000347   000033 772000                    QRL     27
         3 000350   000120 756000 0                  STQ     OFFSET_

      480     6315                                                /**/
      481     6316        %EJECT;
PL6.E3A0      #001=OCS$SYNTAX File=OCS$SYNTAX.:E05TSI                            WED 07/30/97 04:06 Page:75   
      482     6317                                                /**/
      483     6318                                           /* The values pertinent to this
      484     6319                                                input item have been
      485     6320                                                established.  Use OCS_STRUCT$
      486     6321                                                to build the output block. */
      487     6322                                                /**/
      488     6323    4                  DO CASE ( CVSN_ );

   6323  3 000351   000117 235000 0                  LDA     CVSN_
         3 000352   000031 115007                    CMPA    25,DL
         3 000353   000355 602005 3                  TNC     s:6323+4,AL
         3 000354   002214 710000 3                  TRA     s:6825
         3 000355   002214 710000 3                  TRA     s:6825
         3 000356   000406 710000 3                  TRA     s:6327
         3 000357   000542 710000 3                  TRA     s:6353
         3 000360   000574 710000 3                  TRA     s:6363
         3 000361   000653 710000 3                  TRA     s:6389
         3 000362   001023 710000 3                  TRA     s:6442
         3 000363   001124 710000 3                  TRA     s:6468
         3 000364   001264 710000 3                  TRA     s:6504
         3 000365   002214 710000 3                  TRA     s:6825
         3 000366   001341 710000 3                  TRA     s:6526
         3 000367   001374 710000 3                  TRA     s:6542
         3 000370   001423 710000 3                  TRA     s:6568
         3 000371   001562 710000 3                  TRA     s:6626
         3 000372   001572 710000 3                  TRA     s:6632
         3 000373   001617 710000 3                  TRA     s:6644
         3 000374   001635 710000 3                  TRA     s:6652
         3 000375   001645 710000 3                  TRA     s:6659
         3 000376   001655 710000 3                  TRA     s:6668
         3 000377   001744 710000 3                  TRA     s:6705
         3 000400   002025 710000 3                  TRA     s:6729
         3 000401   002066 710000 3                  TRA     s:6750
         3 000402   002076 710000 3                  TRA     s:6755
         3 000403   002103 710000 3                  TRA     s:6764
         3 000404   002205 710000 3                  TRA     s:6819
         3 000405   001423 710000 3                  TRA     s:6568
PL6.E3A0      #001=OCS$SYNTAX File=OCS$SYNTAX.:E05TSI                            WED 07/30/97 04:06 Page:76   

      489     6324                                                /**/
      490     6325    4                  CASE ( 1 /* TTXT# */ );          /* Sized TEXT field */

      491     6326                                                /**/
      492     6327    4                     COUNT_ = PTR$ -> OCS$D1;

   6327  3 000406   000111 470400 0                  LDP0    PTR$
         3 000407   000000 101500                    MRL     fill='000'O
         3 000410   000000 000001                    ADSC9   0,,PR0                   cn=0,n=1
         3 000411   000121 000004 0                  ADSC9   COUNT_                   cn=0,n=4

      493     6328    4                     IF COUNT_ > BYTES_

   6328  3 000412   000116 236000 0                  LDQ     BYTES_
         3 000413   000121 116000 0                  CMPQ    COUNT_
         3 000414   000421 603000 3                  TRC     s:6332

      494     6329    4                     THEN
      495     6330    4                          CALL OCS$UNEXP (PTR$, 2 /*E#TOOLONG*/);

   6330  3 000415   000002 630400 4                  EPPR0   2
         3 000416   000020 631400 xsym               EPPR1   B_VECTNIL+16
         3 000417   000000 701000 xent               TSX1    OCS$UNEXP
         3 000420   000000 011000                    NOP     0

      496     6331                                                /**/
      497     6332    5                     DO CASE ( OFFSET_ );

   6332  3 000421   000120 235000 0                  LDA     OFFSET_
         3 000422   000007 115007                    CMPA    7,DL
         3 000423   000425 602005 3                  TNC     s:6332+4,AL
         3 000424   002214 710000 3                  TRA     s:6825
         3 000425   000434 710000 3                  TRA     s:6335
         3 000426   000446 710000 3                  TRA     s:6337
         3 000427   000460 710000 3                  TRA     s:6339
         3 000430   000472 710000 3                  TRA     s:6341
PL6.E3A0      #001=OCS$SYNTAX File=OCS$SYNTAX.:E05TSI                            WED 07/30/97 04:06 Page:77   
         3 000431   000504 710000 3                  TRA     s:6343
         3 000432   000516 710000 3                  TRA     s:6345
         3 000433   000530 710000 3                  TRA     s:6347

      498     6333                                                /**/
      499     6334    5                     CASE ( 0 /* T1_BYTE# */ );

      500     6335    5                        OCS_STRUCT$ -> OCS$T1 = PTR$ -> OCS$TN.TEXT;

   6335  3 000434   000111 470400 0                  LDP0    PTR$
         3 000435   000100 101500                    MRL     fill='000'O
         3 000436   000000 000001                    ADSC9   0,,PR0                   cn=0,n=1
         3 000437   200004 000002                    ADSC9   4,,AUTO                  cn=0,n=2
         3 000440   200004 220100                    LDX0    4,,AUTO
         3 000441   000104 471400 0                  LDP1    OCS_STRUCT$
         3 000442   040100 100540                    MLR     fill='040'O
         3 000443   000000 200010                    ADSC9   0,,PR0                   cn=1,n=*X0
         3 000444   100000 000001                    ADSC9   0,,PR1                   cn=0,n=1
         3 000445   002214 710000 3                  TRA     s:6825

      501     6336    5                     CASE ( 1 /* T2_BYTE# */ );

      502     6337    5                        OCS_STRUCT$ -> OCS$T2 = PTR$ -> OCS$TN.TEXT;

   6337  3 000446   000111 470400 0                  LDP0    PTR$
         3 000447   000100 101500                    MRL     fill='000'O
         3 000450   000000 000001                    ADSC9   0,,PR0                   cn=0,n=1
         3 000451   200004 000002                    ADSC9   4,,AUTO                  cn=0,n=2
         3 000452   200004 220100                    LDX0    4,,AUTO
         3 000453   000104 471400 0                  LDP1    OCS_STRUCT$
         3 000454   040100 100540                    MLR     fill='040'O
         3 000455   000000 200010                    ADSC9   0,,PR0                   cn=1,n=*X0
         3 000456   100000 000002                    ADSC9   0,,PR1                   cn=0,n=2
         3 000457   002214 710000 3                  TRA     s:6825

      503     6338    5                     CASE ( 2 /* T3_BYTE# */ );

PL6.E3A0      #001=OCS$SYNTAX File=OCS$SYNTAX.:E05TSI                            WED 07/30/97 04:06 Page:78   
      504     6339    5                        OCS_STRUCT$ -> OCS$T3 = PTR$ -> OCS$TN.TEXT;

   6339  3 000460   000111 470400 0                  LDP0    PTR$
         3 000461   000100 101500                    MRL     fill='000'O
         3 000462   000000 000001                    ADSC9   0,,PR0                   cn=0,n=1
         3 000463   200004 000002                    ADSC9   4,,AUTO                  cn=0,n=2
         3 000464   200004 220100                    LDX0    4,,AUTO
         3 000465   000104 471400 0                  LDP1    OCS_STRUCT$
         3 000466   040100 100540                    MLR     fill='040'O
         3 000467   000000 200010                    ADSC9   0,,PR0                   cn=1,n=*X0
         3 000470   100000 000003                    ADSC9   0,,PR1                   cn=0,n=3
         3 000471   002214 710000 3                  TRA     s:6825

      505     6340    5                     CASE ( 3 /* T4_BYTE# */ );

      506     6341    5                        OCS_STRUCT$ -> OCS$T4 = PTR$ -> OCS$TN.TEXT;

   6341  3 000472   000111 470400 0                  LDP0    PTR$
         3 000473   000100 101500                    MRL     fill='000'O
         3 000474   000000 000001                    ADSC9   0,,PR0                   cn=0,n=1
         3 000475   200004 000002                    ADSC9   4,,AUTO                  cn=0,n=2
         3 000476   200004 220100                    LDX0    4,,AUTO
         3 000477   000104 471400 0                  LDP1    OCS_STRUCT$
         3 000500   040100 100540                    MLR     fill='040'O
         3 000501   000000 200010                    ADSC9   0,,PR0                   cn=1,n=*X0
         3 000502   100000 000004                    ADSC9   0,,PR1                   cn=0,n=4
         3 000503   002214 710000 3                  TRA     s:6825

      507     6342    5                     CASE ( 4 /* T6_BYTE# */ );

      508     6343    5                        OCS_STRUCT$ -> OCS$T6 = PTR$ -> OCS$TN.TEXT;

   6343  3 000504   000111 470400 0                  LDP0    PTR$
         3 000505   000100 101500                    MRL     fill='000'O
         3 000506   000000 000001                    ADSC9   0,,PR0                   cn=0,n=1
         3 000507   200004 000002                    ADSC9   4,,AUTO                  cn=0,n=2
         3 000510   200004 220100                    LDX0    4,,AUTO
PL6.E3A0      #001=OCS$SYNTAX File=OCS$SYNTAX.:E05TSI                            WED 07/30/97 04:06 Page:79   
         3 000511   000104 471400 0                  LDP1    OCS_STRUCT$
         3 000512   040100 100540                    MLR     fill='040'O
         3 000513   000000 200010                    ADSC9   0,,PR0                   cn=1,n=*X0
         3 000514   100000 000006                    ADSC9   0,,PR1                   cn=0,n=6
         3 000515   002214 710000 3                  TRA     s:6825

      509     6344    5                     CASE ( 5 /* T8_BYTE# */ );

      510     6345    5                        OCS_STRUCT$ -> OCS$T8 = PTR$ -> OCS$TN.TEXT;

   6345  3 000516   000111 470400 0                  LDP0    PTR$
         3 000517   000100 101500                    MRL     fill='000'O
         3 000520   000000 000001                    ADSC9   0,,PR0                   cn=0,n=1
         3 000521   200004 000002                    ADSC9   4,,AUTO                  cn=0,n=2
         3 000522   200004 220100                    LDX0    4,,AUTO
         3 000523   000104 471400 0                  LDP1    OCS_STRUCT$
         3 000524   040100 100540                    MLR     fill='040'O
         3 000525   000000 200010                    ADSC9   0,,PR0                   cn=1,n=*X0
         3 000526   100000 000010                    ADSC9   0,,PR1                   cn=0,n=8
         3 000527   002214 710000 3                  TRA     s:6825

      511     6346    5                     CASE ( 6 /* T12_BYTE# */ );

      512     6347    5                        OCS_STRUCT$ -> OCS$T12 = PTR$ -> OCS$TN.TEXT;

   6347  3 000530   000111 470400 0                  LDP0    PTR$
         3 000531   000100 101500                    MRL     fill='000'O
         3 000532   000000 000001                    ADSC9   0,,PR0                   cn=0,n=1
         3 000533   200004 000002                    ADSC9   4,,AUTO                  cn=0,n=2
         3 000534   200004 220100                    LDX0    4,,AUTO
         3 000535   000104 471400 0                  LDP1    OCS_STRUCT$
         3 000536   040100 100540                    MLR     fill='040'O
         3 000537   000000 200010                    ADSC9   0,,PR0                   cn=1,n=*X0
         3 000540   100000 000014                    ADSC9   0,,PR1                   cn=0,n=12

      513     6348    5                     END;                  /* DO CASE TTXT# */

PL6.E3A0      #001=OCS$SYNTAX File=OCS$SYNTAX.:E05TSI                            WED 07/30/97 04:06 Page:80   
   6348  3 000541   002214 710000 3                  TRA     s:6825

      514     6349        %EJECT;
PL6.E3A0      #001=OCS$SYNTAX File=OCS$SYNTAX.:E05TSI                            WED 07/30/97 04:06 Page:81   
      515     6350                                                /**/
      516     6351    4                  CASE ( 2 /* TTXTC# */ );

      517     6352                                                /**/
      518     6353    4                     BYTES_ = PTR$ -> OCS$TN.COUNT + 1;

   6353  3 000542   000111 470400 0                  LDP0    PTR$
         3 000543   000100 101500                    MRL     fill='000'O
         3 000544   000000 000001                    ADSC9   0,,PR0                   cn=0,n=1
         3 000545   200004 000004                    ADSC9   4,,AUTO                  cn=0,n=4
         3 000546   200004 236100                    LDQ     4,,AUTO
         3 000547   000001 036007                    ADLQ    1,DL
         3 000550   000116 756000 0                  STQ     BYTES_

      519     6354                                           /* To get the TEXTC to TEXTC move
      520     6355                                                correct, the count must be
      521     6356                                                moved first, then the textc */
      522     6357    4                     OCS_STRUCT$ -> OCS$TN.COUNT = PTR$ -> OCS$TN.COUNT;

   6357  3 000551   000104 471400 0                  LDP1    OCS_STRUCT$
         3 000552   000100 100500                    MLR     fill='000'O
         3 000553   000000 000001                    ADSC9   0,,PR0                   cn=0,n=1
         3 000554   100000 000001                    ADSC9   0,,PR1                   cn=0,n=1

      523     6358    4                     OCS_STRUCT$ -> OCS$TN = PTR$ -> OCS$TN;

   6358  3 000555   000100 101500                    MRL     fill='000'O
         3 000556   100000 000001                    ADSC9   0,,PR1                   cn=0,n=1
         3 000557   200004 000002                    ADSC9   4,,AUTO                  cn=0,n=2
         3 000560   200004 220100                    LDX0    4,,AUTO
         3 000561   000001 621010                    EAX1    1,X0
         3 000562   000111 470400 0                  LDP0    PTR$
         3 000563   000100 101500                    MRL     fill='000'O
         3 000564   000000 000001                    ADSC9   0,,PR0                   cn=0,n=1
         3 000565   200005 000002                    ADSC9   5,,AUTO                  cn=0,n=2
         3 000566   200005 222100                    LDX2    5,,AUTO
         3 000567   000001 623012                    EAX3    1,X2
PL6.E3A0      #001=OCS$SYNTAX File=OCS$SYNTAX.:E05TSI                            WED 07/30/97 04:06 Page:82   
         3 000570   000140 100540                    MLR     fill='000'O
         3 000571   000000 000013                    ADSC9   0,,PR0                   cn=0,n=*X3
         3 000572   100000 000011                    ADSC9   0,,PR1                   cn=0,n=*X1
         3 000573   002214 710000 3                  TRA     s:6825

      524     6359        %EJECT;
PL6.E3A0      #001=OCS$SYNTAX File=OCS$SYNTAX.:E05TSI                            WED 07/30/97 04:06 Page:83   
      525     6360                                                /**/
      526     6361    4                  CASE ( 3 /* TDEC# */ );

      527     6362                                                /* Unsigned decimal number */
      528     6363    4                     CALL CHARBIN (OCS_CONVERTED, PTR$ -> OCS$TN.TEXT);

   6363  3 000574   000111 470400 0                  LDP0    PTR$
         3 000575   000100 101500                    MRL     fill='000'O
         3 000576   000000 000001                    ADSC9   0,,PR0                   cn=0,n=1
         3 000577   200004 000002                    ADSC9   4,,AUTO                  cn=0,n=2
         3 000600   200004 220100                    LDX0    4,,AUTO
         3 000601   000100 305540                    DTB
         3 000602   000000 230010                    NDSC9   0,,PR0                   cn=1,s=nosgn,sf=0,n=*X0
         3 000603   200006 000010                    NDSC9   6,,AUTO                  cn=0,s=lsgnf,sf=0,n=8
         3 000604   200007 235100                    LDA     7,,AUTO
         3 000605   000154 755000 0                  STA     OCS_CONVERTED

      529     6364    4                     IF OCS_CONVERTED > OCS_LEXEMES.MAX(INDEX_)

   6364  3 000606   000122 235000 0                  LDA     INDEX_
         3 000607   000002 735000                    ALS     2
         3 000610   000002 236005 xsym               LDQ     OCS_LEXEMES+2,AL
         3 000611   000154 116000 0                  CMPQ    OCS_CONVERTED
         3 000612   000617 603000 3                  TRC     s:6368

      530     6365    4                     THEN
      531     6366    4                          CALL OCS$UNEXP (PTR$, 3 /*E#TOOLARGE*/);

   6366  3 000613   000004 630400 4                  EPPR0   4
         3 000614   000020 631400 xsym               EPPR1   B_VECTNIL+16
         3 000615   000000 701000 xent               TSX1    OCS$UNEXP
         3 000616   000000 011000                    NOP     0

      532     6367                                                /**/
      533     6368    5                     DO CASE ( OFFSET_ );

   6368  3 000617   000120 235000 0                  LDA     OFFSET_
PL6.E3A0      #001=OCS$SYNTAX File=OCS$SYNTAX.:E05TSI                            WED 07/30/97 04:06 Page:84   
         3 000620   000004 115007                    CMPA    4,DL
         3 000621   000623 602005 3                  TNC     s:6368+4,AL
         3 000622   002214 710000 3                  TRA     s:6825
         3 000623   000627 710000 3                  TRA     s:6371
         3 000624   000634 710000 3                  TRA     s:6373
         3 000625   000641 710000 3                  TRA     s:6375
         3 000626   000646 710000 3                  TRA     s:6377

      534     6369                                                /**/
      535     6370    5                     CASE ( 0 /* D1_BYTE# */ );

      536     6371    5                        OCS_STRUCT$ -> OCS$D1 = OCS_CONVERTED;

   6371  3 000627   000104 470400 0                  LDP0    OCS_STRUCT$
         3 000630   000100 101400                    MRL     fill='000'O
         3 000631   000154 000004 0                  ADSC9   OCS_CONVERTED            cn=0,n=4
         3 000632   000000 000001                    ADSC9   0,,PR0                   cn=0,n=1
         3 000633   002214 710000 3                  TRA     s:6825

      537     6372    5                     CASE ( 1 /* D2_BYTE# */ );

      538     6373    5                        OCS_STRUCT$ -> OCS$D2 = OCS_CONVERTED;

   6373  3 000634   000104 470400 0                  LDP0    OCS_STRUCT$
         3 000635   000100 101400                    MRL     fill='000'O
         3 000636   000154 000004 0                  ADSC9   OCS_CONVERTED            cn=0,n=4
         3 000637   000000 000002                    ADSC9   0,,PR0                   cn=0,n=2
         3 000640   002214 710000 3                  TRA     s:6825

      539     6374    5                     CASE ( 2 /* D3_BYTE# */ );

      540     6375    5                        OCS_STRUCT$ -> OCS$D3 = OCS_CONVERTED;

   6375  3 000641   000104 470400 0                  LDP0    OCS_STRUCT$
         3 000642   000100 101400                    MRL     fill='000'O
         3 000643   000154 000004 0                  ADSC9   OCS_CONVERTED            cn=0,n=4
         3 000644   000000 000003                    ADSC9   0,,PR0                   cn=0,n=3
PL6.E3A0      #001=OCS$SYNTAX File=OCS$SYNTAX.:E05TSI                            WED 07/30/97 04:06 Page:85   
         3 000645   002214 710000 3                  TRA     s:6825

      541     6376    5                     CASE ( 3 /* D4_BYTE# */ );

      542     6377    5                        OCS_STRUCT$ -> OCS$D4 = OCS_CONVERTED;

   6377  3 000646   000104 470400 0                  LDP0    OCS_STRUCT$
         3 000647   000100 100400                    MLR     fill='000'O
         3 000650   000154 000004 0                  ADSC9   OCS_CONVERTED            cn=0,n=4
         3 000651   000000 000004                    ADSC9   0,,PR0                   cn=0,n=4

      543     6378    5                     END;                  /* DO CASE OFFSET_ */

   6378  3 000652   002214 710000 3                  TRA     s:6825

      544     6379        %EJECT;
PL6.E3A0      #001=OCS$SYNTAX File=OCS$SYNTAX.:E05TSI                            WED 07/30/97 04:06 Page:86   
      545     6380                                                /**/
      546     6381    4                  CASE ( 4 /* TDECS# */ );

      547     6382                                           /* Special action is required
      548     6383                                                here to place + sign on
      549     6384                                                unsigned case... if parser
      550     6385                                                passed us the item, it is
      551     6386                                                preceeded by either a '-' or
      552     6387                                                nothing (+ case is ignored as
      553     6388                                                default) */
      554     6389    4                     IF (SUBSTR( PTR$ -> OCS$TN.TEXT, 0, 1) ~= MINUS)

   6389  3 000653   000111 470400 0                  LDP0    PTR$
         3 000654   000100 101500                    MRL     fill='000'O
         3 000655   000000 000001                    ADSC9   0,,PR0                   cn=0,n=1
         3 000656   200004 000002                    ADSC9   4,,AUTO                  cn=0,n=2
         3 000657   200004 220100                    LDX0    4,,AUTO
         3 000660   040000 106500                    CMPC    fill='040'O
         3 000661   000000 200001                    ADSC9   0,,PR0                   cn=1,n=1
         3 000662   000130 000001 0                  ADSC9   MINUS                    cn=0,n=1
         3 000663   000705 600000 3                  TZE     s:6397

      555     6390    4                     THEN
      556     6391    5                     DO;

      557     6392    5                          CALL CONCAT(SECOND_STRING,PLUS,PTR$-> OCS$TN.TEXT);

   6392  3 000664   000100 101500                    MRL     fill='000'O
         3 000665   000000 000001                    ADSC9   0,,PR0                   cn=0,n=1
         3 000666   200004 000002                    ADSC9   4,,AUTO                  cn=0,n=2
         3 000667   200004 220100                    LDX0    4,,AUTO
         3 000670   000127 236000 0                  LDQ     PLUS
         3 000671   000132 552040 0                  STBQ    SECOND_STRING,'40'O
         3 000672   040000 100540                    MLR     fill='040'O
         3 000673   000000 200010                    ADSC9   0,,PR0                   cn=1,n=*X0
         3 000674   000132 200077 0                  ADSC9   SECOND_STRING            cn=1,n=63

PL6.E3A0      #001=OCS$SYNTAX File=OCS$SYNTAX.:E05TSI                            WED 07/30/97 04:06 Page:87   
      558     6393    5                          OCS_NUMC = PTR$ -> OCS$TN.COUNT + 1;

   6393  3 000675   000111 470400 0                  LDP0    PTR$
         3 000676   000100 101500                    MRL     fill='000'O
         3 000677   000000 000001                    ADSC9   0,,PR0                   cn=0,n=1
         3 000700   200004 000002                    ADSC9   4,,AUTO                  cn=0,n=2
         3 000701   200004 220100                    LDX0    4,,AUTO
         3 000702   000001 621010                    EAX1    1,X0
         3 000703   000131 741000 0                  STX1    OCS_NUMC

      559     6394    5                        END;

   6394  3 000704   000726 710000 3                  TRA     s:6404

      560     6395    4                     ELSE
      561     6396    5                     DO;

      562     6397    5                          SECOND_STRING = PTR$ -> OCS$TN.TEXT;

   6397  3 000705   000100 101500                    MRL     fill='000'O
         3 000706   000000 000001                    ADSC9   0,,PR0                   cn=0,n=1
         3 000707   200004 000002                    ADSC9   4,,AUTO                  cn=0,n=2
         3 000710   200004 220100                    LDX0    4,,AUTO
         3 000711   040000 100540                    MLR     fill='040'O
         3 000712   000000 200010                    ADSC9   0,,PR0                   cn=1,n=*X0
         3 000713   000132 000100 0                  ADSC9   SECOND_STRING            cn=0,n=64

      563     6398    5                          OCS_NUMC = PTR$ -> OCS$TN.COUNT;

   6398  3 000714   000000 101500                    MRL     fill='000'O
         3 000715   000000 000001                    ADSC9   0,,PR0                   cn=0,n=1
         3 000716   000131 000002 0                  ADSC9   OCS_NUMC                 cn=0,n=2

      564     6399    5                          IF OCS_NUMC < 2  /* - PLUS DIGIT */

   6399  3 000717   000131 220000 0                  LDX0    OCS_NUMC
         3 000720   000002 100003                    CMPX0   2,DU
PL6.E3A0      #001=OCS$SYNTAX File=OCS$SYNTAX.:E05TSI                            WED 07/30/97 04:06 Page:88   
         3 000721   000726 603000 3                  TRC     s:6404

      565     6400    5                          THEN
      566     6401    5                               CALL OCS$UNEXP (PTR$, 4 /*E#OUTFRANGE*/);

   6401  3 000722   000006 630400 4                  EPPR0   6
         3 000723   000020 631400 xsym               EPPR1   B_VECTNIL+16
         3 000724   000000 701000 xent               TSX1    OCS$UNEXP
         3 000725   000000 011000                    NOP     0

      567     6402                                                /**/
      568     6403    5                        END;

      569     6404    4                     CALL INDEX (J, MINUS,

   6404  3 000726   000131 220000 0                  LDX0    OCS_NUMC
         3 000727   777777 621010                    EAX1    -1,X0
         3 000730   000000 124440                    SCM     mask='000'O
         3 000731   000132 200011 0                  ADSC9   SECOND_STRING            cn=1,n=*X1
         3 000732   000130 000001 0                  ADSC9   MINUS                    cn=0,n=1
         3 000733   000110 000000 0                  ARG     J
         3 000734   000741 606400 3                  TTN     GOOD_MINUS_STRING

      570     6405    4                          SUBSTR(SECOND_STRING,1,OCS_NUMC-1))
      571     6406    4                          ALTRET (GOOD_MINUS_STRING);
      572     6407                                                /**/
      573     6408    4                     CALL OCS$UNEXP (PTR$, 4 /*E#OUTFRANGE*/);

   6408  3 000735   000006 630400 4                  EPPR0   6
         3 000736   000020 631400 xsym               EPPR1   B_VECTNIL+16
         3 000737   000000 701000 xent               TSX1    OCS$UNEXP
         3 000740   000000 011000                    NOP     0

   6404  3 000741                       GOOD_MINUS_* null
      574     6409                                                /**/
      575     6410    4   GOOD_MINUS_STRING: ;
      576     6411                                                /**/
PL6.E3A0      #001=OCS$SYNTAX File=OCS$SYNTAX.:E05TSI                            WED 07/30/97 04:06 Page:89   
      577     6412                                                /**/
      578     6413    4                     IF OCS_NUMC > SIZEC(SECOND_STRING)

   6413  3 000741   000131 220000 0                  LDX0    OCS_NUMC
         3 000742   000101 100003                    CMPX0   65,DU
         3 000743   000750 602000 3                  TNC     s:6417

      579     6414    4                     THEN
      580     6415    4                          CALL OCS$UNEXP (PTR$, 4 /*E#OUTFRANGE*/);

   6415  3 000744   000006 630400 4                  EPPR0   6
         3 000745   000020 631400 xsym               EPPR1   B_VECTNIL+16
         3 000746   000000 701000 xent               TSX1    OCS$UNEXP
         3 000747   000000 011000                    NOP     0

      581     6416                                                /**/
      582     6417    4                     CALL XCHARBIN ( OCS_CONVERTEDS,

   6417  3 000750   000131 220000 0                  LDX0    OCS_NUMC
         3 000751   000000 305440                    DTB
         3 000752   000132 010010 0                  NDSC9   SECOND_STRING            cn=0,s=lsgns,sf=0,n=*X0
         3 000753   000155 000004 0                  NDSC9   OCS_CONVERTEDS           cn=0,s=lsgnf,sf=0,n=4

      583     6418    4                          ADDR(SECOND_STRING)->SECOND$STRING);
      584     6419                                                /**/
      585     6420    4                     IF OCS_CONVERTEDS < OCS_LEXEMES.MINS(INDEX_)

   6420  3 000754   000122 235000 0                  LDA     INDEX_
         3 000755   000002 735000                    ALS     2
         3 000756   000155 236000 0                  LDQ     OCS_CONVERTEDS
         3 000757   000001 116005 xsym               CMPQ    OCS_LEXEMES+1,AL
         3 000760   000763 604000 3                  TMI     s:6424
         3 000761   000002 116005 xsym               CMPQ    OCS_LEXEMES+2,AL
         3 000762   000767 604400 3                  TMOZ    s:6426

      586     6421    4                          OR
      587     6422    4                          OCS_CONVERTEDS > OCS_LEXEMES.MAXS(INDEX_)
PL6.E3A0      #001=OCS$SYNTAX File=OCS$SYNTAX.:E05TSI                            WED 07/30/97 04:06 Page:90   
      588     6423    4                     THEN
      589     6424    4                          CALL OCS$UNEXP (PTR$, 4 /*E#OUTFRANGE*/);

   6424  3 000763   000006 630400 4                  EPPR0   6
         3 000764   000020 631400 xsym               EPPR1   B_VECTNIL+16
         3 000765   000000 701000 xent               TSX1    OCS$UNEXP
         3 000766   000000 011000                    NOP     0

      590     6425                                                /**/
      591     6426    5                     DO CASE ( OFFSET_ );

   6426  3 000767   000120 235000 0                  LDA     OFFSET_
         3 000770   000004 115007                    CMPA    4,DL
         3 000771   000773 602005 3                  TNC     s:6426+4,AL
         3 000772   002214 710000 3                  TRA     s:6825
         3 000773   000777 710000 3                  TRA     s:6429
         3 000774   001004 710000 3                  TRA     s:6431
         3 000775   001011 710000 3                  TRA     s:6433
         3 000776   001016 710000 3                  TRA     s:6435

      592     6427                                                /**/
      593     6428    5                     CASE ( 0 /* DS1_BYTE# */ );

      594     6429    5                        OCS_STRUCT$ -> OCS$DS1 = OCS_CONVERTEDS;

   6429  3 000777   000104 470400 0                  LDP0    OCS_STRUCT$
         3 001000   000100 101400                    MRL     fill='000'O
         3 001001   000155 000004 0                  ADSC9   OCS_CONVERTEDS           cn=0,n=4
         3 001002   000000 000001                    ADSC9   0,,PR0                   cn=0,n=1
         3 001003   002214 710000 3                  TRA     s:6825

      595     6430    5                     CASE ( 1 /* DS2_BYTE# */ );

      596     6431    5                        OCS_STRUCT$ -> OCS$DS2 = OCS_CONVERTEDS;

   6431  3 001004   000104 470400 0                  LDP0    OCS_STRUCT$
         3 001005   000100 101400                    MRL     fill='000'O
PL6.E3A0      #001=OCS$SYNTAX File=OCS$SYNTAX.:E05TSI                            WED 07/30/97 04:06 Page:91   
         3 001006   000155 000004 0                  ADSC9   OCS_CONVERTEDS           cn=0,n=4
         3 001007   000000 000002                    ADSC9   0,,PR0                   cn=0,n=2
         3 001010   002214 710000 3                  TRA     s:6825

      597     6432    5                     CASE ( 2 /* DS3_BYTE# */ );

      598     6433    5                        OCS_STRUCT$ -> OCS$DS3 = OCS_CONVERTEDS;

   6433  3 001011   000104 470400 0                  LDP0    OCS_STRUCT$
         3 001012   000100 101400                    MRL     fill='000'O
         3 001013   000155 000004 0                  ADSC9   OCS_CONVERTEDS           cn=0,n=4
         3 001014   000000 000003                    ADSC9   0,,PR0                   cn=0,n=3
         3 001015   002214 710000 3                  TRA     s:6825

      599     6434    5                     CASE ( 3 /* DS4_BYTE# */ );

      600     6435    5                        OCS_STRUCT$ -> OCS$DS4 = OCS_CONVERTEDS;

   6435  3 001016   000104 470400 0                  LDP0    OCS_STRUCT$
         3 001017   000100 100400                    MLR     fill='000'O
         3 001020   000155 000004 0                  ADSC9   OCS_CONVERTEDS           cn=0,n=4
         3 001021   000000 000004                    ADSC9   0,,PR0                   cn=0,n=4

      601     6436    5                     END;                  /* DO CASE OFFSET_ */

   6436  3 001022   002214 710000 3                  TRA     s:6825

      602     6437                                                /**/
      603     6438        %EJECT;
PL6.E3A0      #001=OCS$SYNTAX File=OCS$SYNTAX.:E05TSI                            WED 07/30/97 04:06 Page:92   
      604     6439                                                /**/
      605     6440    4                  CASE ( 5 /* TOCT# */ );

      606     6441                                                /**/
      607     6442    4                     SECOND_STRING = PTR$ -> OCS$TN.TEXT;

   6442  3 001023   000111 470400 0                  LDP0    PTR$
         3 001024   000100 101500                    MRL     fill='000'O
         3 001025   000000 000001                    ADSC9   0,,PR0                   cn=0,n=1
         3 001026   200004 000002                    ADSC9   4,,AUTO                  cn=0,n=2
         3 001027   200004 220100                    LDX0    4,,AUTO
         3 001030   040000 100540                    MLR     fill='040'O
         3 001031   000000 200010                    ADSC9   0,,PR0                   cn=1,n=*X0
         3 001032   000132 000100 0                  ADSC9   SECOND_STRING            cn=0,n=64

      608     6443    4                     OCS_CONVERTED = 0;

   6443  3 001033   000154 450000 0                  STZ     OCS_CONVERTED

      609     6444    5                     DO J = 0 TO (PTR$ -> OCS$TN.COUNT - 1);

   6444  3 001034   000110 450000 0                  STZ     J
         3 001035   001050 710000 3                  TRA     s:6447+1

      610     6445    5                          OCS_CONVERTED = OCS_CONVERTED * 8 +

   6445  3 001036   000110 235000 0                  LDA     J
         3 001037   000100 101405                    MRL     fill='000'O
         3 001040   000132 000001 0                  ADSC9   SECOND_STRING,A          cn=0,n=1
         3 001041   200004 000004                    ADSC9   4,,AUTO                  cn=0,n=4
         3 001042   000154 236000 0                  LDQ     OCS_CONVERTED
         3 001043   000003 736000                    QLS     3
         3 001044   200004 036100                    ADLQ    4,,AUTO
         3 001045   000060 136007                    SBLQ    48,DL
         3 001046   000154 756000 0                  STQ     OCS_CONVERTED

      611     6446    5                               (SEC_STRING(J) - 48 /* ASCIIZERO# */);
PL6.E3A0      #001=OCS$SYNTAX File=OCS$SYNTAX.:E05TSI                            WED 07/30/97 04:06 Page:93   
      612     6447    5                        END;

   6447  3 001047   000110 054000 0                  AOS     J
         3 001050   000111 470400 0                  LDP0    PTR$
         3 001051   000100 101500                    MRL     fill='000'O
         3 001052   000000 000001                    ADSC9   0,,PR0                   cn=0,n=1
         3 001053   200004 000004                    ADSC9   4,,AUTO                  cn=0,n=4
         3 001054   200004 236100                    LDQ     4,,AUTO
         3 001055   000110 116000 0                  CMPQ    J
         3 001056   001036 605400 3                  TPNZ    s:6445

      613     6448    4                     IF OCS_CONVERTED > OCS_LEXEMES.MAX(INDEX_)

   6448  3 001057   000122 235000 0                  LDA     INDEX_
         3 001060   000002 735000                    ALS     2
         3 001061   000002 236005 xsym               LDQ     OCS_LEXEMES+2,AL
         3 001062   000154 116000 0                  CMPQ    OCS_CONVERTED
         3 001063   001070 603000 3                  TRC     s:6452

      614     6449    4                     THEN
      615     6450    4                          CALL OCS$UNEXP (PTR$, 3 /*E#TOOLARGE*/);

   6450  3 001064   000004 630400 4                  EPPR0   4
         3 001065   000020 631400 xsym               EPPR1   B_VECTNIL+16
         3 001066   000000 701000 xent               TSX1    OCS$UNEXP
         3 001067   000000 011000                    NOP     0

      616     6451                                                /**/
      617     6452    5                     DO CASE ( OFFSET_ );

   6452  3 001070   000120 235000 0                  LDA     OFFSET_
         3 001071   000004 115007                    CMPA    4,DL
         3 001072   001074 602005 3                  TNC     s:6452+4,AL
         3 001073   002214 710000 3                  TRA     s:6825
         3 001074   001100 710000 3                  TRA     s:6455
         3 001075   001105 710000 3                  TRA     s:6457
         3 001076   001112 710000 3                  TRA     s:6459
PL6.E3A0      #001=OCS$SYNTAX File=OCS$SYNTAX.:E05TSI                            WED 07/30/97 04:06 Page:94   
         3 001077   001117 710000 3                  TRA     s:6461

      618     6453                                                /**/
      619     6454    5                     CASE ( 0 /* O1_BYTE# */ );

      620     6455    5                        OCS_STRUCT$ -> OCS$D1 = OCS_CONVERTED;

   6455  3 001100   000104 470400 0                  LDP0    OCS_STRUCT$
         3 001101   000100 101400                    MRL     fill='000'O
         3 001102   000154 000004 0                  ADSC9   OCS_CONVERTED            cn=0,n=4
         3 001103   000000 000001                    ADSC9   0,,PR0                   cn=0,n=1
         3 001104   002214 710000 3                  TRA     s:6825

      621     6456    5                     CASE ( 1 /* O2_BYTE# */ );

      622     6457    5                        OCS_STRUCT$ -> OCS$D2 = OCS_CONVERTED;

   6457  3 001105   000104 470400 0                  LDP0    OCS_STRUCT$
         3 001106   000100 101400                    MRL     fill='000'O
         3 001107   000154 000004 0                  ADSC9   OCS_CONVERTED            cn=0,n=4
         3 001110   000000 000002                    ADSC9   0,,PR0                   cn=0,n=2
         3 001111   002214 710000 3                  TRA     s:6825

      623     6458    5                     CASE ( 2 /* O3_BYTE# */ );

      624     6459    5                        OCS_STRUCT$ -> OCS$D3 = OCS_CONVERTED;

   6459  3 001112   000104 470400 0                  LDP0    OCS_STRUCT$
         3 001113   000100 101400                    MRL     fill='000'O
         3 001114   000154 000004 0                  ADSC9   OCS_CONVERTED            cn=0,n=4
         3 001115   000000 000003                    ADSC9   0,,PR0                   cn=0,n=3
         3 001116   002214 710000 3                  TRA     s:6825

      625     6460    5                     CASE ( 3 /* O4_BYTE# */ );

      626     6461    5                        OCS_STRUCT$ -> OCS$D4 = OCS_CONVERTED;

PL6.E3A0      #001=OCS$SYNTAX File=OCS$SYNTAX.:E05TSI                            WED 07/30/97 04:06 Page:95   
   6461  3 001117   000104 470400 0                  LDP0    OCS_STRUCT$
         3 001120   000100 100400                    MLR     fill='000'O
         3 001121   000154 000004 0                  ADSC9   OCS_CONVERTED            cn=0,n=4
         3 001122   000000 000004                    ADSC9   0,,PR0                   cn=0,n=4

      627     6462    5                     END;                  /* DO CASE OFFSET_ */

   6462  3 001123   002214 710000 3                  TRA     s:6825

      628     6463                                                /**/
      629     6464        %EJECT;
PL6.E3A0      #001=OCS$SYNTAX File=OCS$SYNTAX.:E05TSI                            WED 07/30/97 04:06 Page:96   
      630     6465                                                /**/
      631     6466    4                  CASE ( 6 /* THEX# */ );

      632     6467                                                /**/
      633     6468    4                     OCS_CONVERTED = 0;

   6468  3 001124   000154 450000 0                  STZ     OCS_CONVERTED

      634     6469    4                     SECOND_STRING = PTR$ -> OCS$TN.TEXT;

   6469  3 001125   000111 470400 0                  LDP0    PTR$
         3 001126   000100 101500                    MRL     fill='000'O
         3 001127   000000 000001                    ADSC9   0,,PR0                   cn=0,n=1
         3 001130   200004 000002                    ADSC9   4,,AUTO                  cn=0,n=2
         3 001131   200004 220100                    LDX0    4,,AUTO
         3 001132   040000 100540                    MLR     fill='040'O
         3 001133   000000 200010                    ADSC9   0,,PR0                   cn=1,n=*X0
         3 001134   000132 000100 0                  ADSC9   SECOND_STRING            cn=0,n=64

      635     6470    5                     DO J = 0 TO (PTR$ -> OCS$TN.COUNT - 1);

   6470  3 001135   000110 450000 0                  STZ     J
         3 001136   001210 710000 3                  TRA     s:6483+1

      636     6471    5                          IF SEC_STRING(J) > 57 /* ASCIININE# */

   6471  3 001137   000110 235000 0                  LDA     J
         3 001140   000100 101405                    MRL     fill='000'O
         3 001141   000132 000001 0                  ADSC9   SECOND_STRING,A          cn=0,n=1
         3 001142   200004 000004                    ADSC9   4,,AUTO                  cn=0,n=4
         3 001143   200004 236100                    LDQ     4,,AUTO
         3 001144   000072 116007                    CMPQ    58,DL
         3 001145   001177 604000 3                  TMI     s:6481

      637     6472    5                          THEN
      638     6473    6                          DO;

PL6.E3A0      #001=OCS$SYNTAX File=OCS$SYNTAX.:E05TSI                            WED 07/30/97 04:06 Page:97   
      639     6474    6                               IF SEC_STRING(J) > 96 THEN

   6474  3 001146   000100 101405                    MRL     fill='000'O
         3 001147   000132 000001 0                  ADSC9   SECOND_STRING,A          cn=0,n=1
         3 001150   200004 000004                    ADSC9   4,,AUTO                  cn=0,n=4
         3 001151   200004 236100                    LDQ     4,,AUTO
         3 001152   000141 116007                    CMPQ    97,DL
         3 001153   001165 604000 3                  TMI     s:6477

      640     6475                                                /* MAKE UPPERCASE */
      641     6476    6                                    SEC_STRING(J) = SEC_STRING(J) - 32;

   6476  3 001154   000100 101405                    MRL     fill='000'O
         3 001155   000132 000001 0                  ADSC9   SECOND_STRING,A          cn=0,n=1
         3 001156   200005 000004                    ADSC9   5,,AUTO                  cn=0,n=4
         3 001157   200005 236100                    LDQ     5,,AUTO
         3 001160   000040 136007                    SBLQ    32,DL
         3 001161   200004 756100                    STQ     4,,AUTO
         3 001162   000005 101500                    MRL     fill='000'O
         3 001163   200004 000004                    ADSC9   4,,AUTO                  cn=0,n=4
         3 001164   000132 000001 0                  ADSC9   SECOND_STRING,A          cn=0,n=1

      642     6477    6                               OCS_CONVERTED = OCS_CONVERTED * 16 +

   6477  3 001165   000110 235000 0                  LDA     J
         3 001166   000100 101405                    MRL     fill='000'O
         3 001167   000132 000001 0                  ADSC9   SECOND_STRING,A          cn=0,n=1
         3 001170   200004 000004                    ADSC9   4,,AUTO                  cn=0,n=4
         3 001171   000154 236000 0                  LDQ     OCS_CONVERTED
         3 001172   000004 736000                    QLS     4
         3 001173   200004 036100                    ADLQ    4,,AUTO
         3 001174   000067 136007                    SBLQ    55,DL
         3 001175   000154 756000 0                  STQ     OCS_CONVERTED

      643     6478    6                                    (SEC_STRING(J) - 55 /* ASCIISEVEN# */ );
      644     6479    6                             END;

PL6.E3A0      #001=OCS$SYNTAX File=OCS$SYNTAX.:E05TSI                            WED 07/30/97 04:06 Page:98   
   6479  3 001176   001207 710000 3                  TRA     s:6483

      645     6480    5                          ELSE
      646     6481    5                               OCS_CONVERTED = OCS_CONVERTED * 16 +

   6481  3 001177   000100 101405                    MRL     fill='000'O
         3 001200   000132 000001 0                  ADSC9   SECOND_STRING,A          cn=0,n=1
         3 001201   200004 000004                    ADSC9   4,,AUTO                  cn=0,n=4
         3 001202   000154 236000 0                  LDQ     OCS_CONVERTED
         3 001203   000004 736000                    QLS     4
         3 001204   200004 036100                    ADLQ    4,,AUTO
         3 001205   000060 136007                    SBLQ    48,DL
         3 001206   000154 756000 0                  STQ     OCS_CONVERTED

      647     6482    5                                    (SEC_STRING(J) - 48 /* ASCIIZERO# */);
      648     6483    5                        END;

   6483  3 001207   000110 054000 0                  AOS     J
         3 001210   000111 470400 0                  LDP0    PTR$
         3 001211   000100 101500                    MRL     fill='000'O
         3 001212   000000 000001                    ADSC9   0,,PR0                   cn=0,n=1
         3 001213   200004 000004                    ADSC9   4,,AUTO                  cn=0,n=4
         3 001214   200004 236100                    LDQ     4,,AUTO
         3 001215   000110 116000 0                  CMPQ    J
         3 001216   001137 605400 3                  TPNZ    s:6471

      649     6484    4                     IF OCS_CONVERTED > OCS_LEXEMES.MAX(INDEX_)

   6484  3 001217   000122 235000 0                  LDA     INDEX_
         3 001220   000002 735000                    ALS     2
         3 001221   000002 236005 xsym               LDQ     OCS_LEXEMES+2,AL
         3 001222   000154 116000 0                  CMPQ    OCS_CONVERTED
         3 001223   001230 603000 3                  TRC     s:6488

      650     6485    4                     THEN
      651     6486    4                          CALL OCS$UNEXP (PTR$, 3 /*E#TOOLARGE*/);

PL6.E3A0      #001=OCS$SYNTAX File=OCS$SYNTAX.:E05TSI                            WED 07/30/97 04:06 Page:99   
   6486  3 001224   000004 630400 4                  EPPR0   4
         3 001225   000020 631400 xsym               EPPR1   B_VECTNIL+16
         3 001226   000000 701000 xent               TSX1    OCS$UNEXP
         3 001227   000000 011000                    NOP     0

      652     6487                                                /**/
      653     6488    5                     DO CASE ( OFFSET_ );

   6488  3 001230   000120 235000 0                  LDA     OFFSET_
         3 001231   000004 115007                    CMPA    4,DL
         3 001232   001234 602005 3                  TNC     s:6488+4,AL
         3 001233   002214 710000 3                  TRA     s:6825
         3 001234   001240 710000 3                  TRA     s:6491
         3 001235   001245 710000 3                  TRA     s:6493
         3 001236   001252 710000 3                  TRA     s:6495
         3 001237   001257 710000 3                  TRA     s:6497

      654     6489                                                /**/
      655     6490    5                     CASE ( 0 /* H1_BYTE# */ );

      656     6491    5                        OCS_STRUCT$ -> OCS$D1 = OCS_CONVERTED;

   6491  3 001240   000104 470400 0                  LDP0    OCS_STRUCT$
         3 001241   000100 101400                    MRL     fill='000'O
         3 001242   000154 000004 0                  ADSC9   OCS_CONVERTED            cn=0,n=4
         3 001243   000000 000001                    ADSC9   0,,PR0                   cn=0,n=1
         3 001244   002214 710000 3                  TRA     s:6825

      657     6492    5                     CASE ( 1 /* H2_BYTE# */ );

      658     6493    5                        OCS_STRUCT$ -> OCS$D2 = OCS_CONVERTED;

   6493  3 001245   000104 470400 0                  LDP0    OCS_STRUCT$
         3 001246   000100 101400                    MRL     fill='000'O
         3 001247   000154 000004 0                  ADSC9   OCS_CONVERTED            cn=0,n=4
         3 001250   000000 000002                    ADSC9   0,,PR0                   cn=0,n=2
         3 001251   002214 710000 3                  TRA     s:6825
PL6.E3A0      #001=OCS$SYNTAX File=OCS$SYNTAX.:E05TSI                            WED 07/30/97 04:06 Page:100  

      659     6494    5                     CASE ( 2 /* H3_BYTE# */ );

      660     6495    5                        OCS_STRUCT$ -> OCS$D3 = OCS_CONVERTED;

   6495  3 001252   000104 470400 0                  LDP0    OCS_STRUCT$
         3 001253   000100 101400                    MRL     fill='000'O
         3 001254   000154 000004 0                  ADSC9   OCS_CONVERTED            cn=0,n=4
         3 001255   000000 000003                    ADSC9   0,,PR0                   cn=0,n=3
         3 001256   002214 710000 3                  TRA     s:6825

      661     6496    5                     CASE ( 3 /* H4_BYTE# */ );

      662     6497    5                        OCS_STRUCT$ -> OCS$D4 = OCS_CONVERTED;

   6497  3 001257   000104 470400 0                  LDP0    OCS_STRUCT$
         3 001260   000100 100400                    MLR     fill='000'O
         3 001261   000154 000004 0                  ADSC9   OCS_CONVERTED            cn=0,n=4
         3 001262   000000 000004                    ADSC9   0,,PR0                   cn=0,n=4

      663     6498    5                     END;                  /* DO CASE OFFSET_ */

   6498  3 001263   002214 710000 3                  TRA     s:6825

      664     6499                                                /**/
      665     6500        %EJECT;
PL6.E3A0      #001=OCS$SYNTAX File=OCS$SYNTAX.:E05TSI                            WED 07/30/97 04:06 Page:101  
      666     6501                                                /**/
      667     6502    4                  CASE ( 7 /* TBLK# */ );

      668     6503                                                /**/
      669     6504    5                     DO CASE ( OFFSET_ );

   6504  3 001264   000007 116007                    CMPQ    7,DL
         3 001265   001267 602006 3                  TNC     s:6504+3,QL
         3 001266   002214 710000 3                  TRA     s:6825
         3 001267   001276 710000 3                  TRA     s:6507
         3 001270   001303 710000 3                  TRA     s:6509
         3 001271   001310 710000 3                  TRA     s:6511
         3 001272   001315 710000 3                  TRA     s:6513
         3 001273   001322 710000 3                  TRA     s:6515
         3 001274   001327 710000 3                  TRA     s:6517
         3 001275   001334 710000 3                  TRA     s:6519

      670     6505                                                /**/
      671     6506    5                     CASE ( 0 /* B1_BYTE# */ );

      672     6507    5                        OCS_STRUCT$ -> OCS$T1 = ' ';

   6507  3 001276   000104 470400 0                  LDP0    OCS_STRUCT$
         3 001277   040100 100400                    MLR     fill='040'O
         3 001300   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         3 001301   000000 000001                    ADSC9   0,,PR0                   cn=0,n=1
         3 001302   002214 710000 3                  TRA     s:6825

      673     6508    5                     CASE ( 1 /* B2_BYTE# */ );

      674     6509    5                        OCS_STRUCT$ -> OCS$T2 = ' ';

   6509  3 001303   000104 470400 0                  LDP0    OCS_STRUCT$
         3 001304   040100 100400                    MLR     fill='040'O
         3 001305   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         3 001306   000000 000002                    ADSC9   0,,PR0                   cn=0,n=2
         3 001307   002214 710000 3                  TRA     s:6825
PL6.E3A0      #001=OCS$SYNTAX File=OCS$SYNTAX.:E05TSI                            WED 07/30/97 04:06 Page:102  

      675     6510    5                     CASE ( 2 /* B3_BYTE# */ );

      676     6511    5                        OCS_STRUCT$ -> OCS$T3 = ' ';

   6511  3 001310   000104 470400 0                  LDP0    OCS_STRUCT$
         3 001311   040100 100400                    MLR     fill='040'O
         3 001312   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         3 001313   000000 000003                    ADSC9   0,,PR0                   cn=0,n=3
         3 001314   002214 710000 3                  TRA     s:6825

      677     6512    5                     CASE ( 3 /* B4_BYTE# */ );

      678     6513    5                        OCS_STRUCT$ -> OCS$T4 = ' ';

   6513  3 001315   000104 470400 0                  LDP0    OCS_STRUCT$
         3 001316   040100 100400                    MLR     fill='040'O
         3 001317   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         3 001320   000000 000004                    ADSC9   0,,PR0                   cn=0,n=4
         3 001321   002214 710000 3                  TRA     s:6825

      679     6514    5                     CASE ( 4 /* B6_BYTE# */ );

      680     6515    5                        OCS_STRUCT$ -> OCS$T6 = ' ';

   6515  3 001322   000104 470400 0                  LDP0    OCS_STRUCT$
         3 001323   040100 100400                    MLR     fill='040'O
         3 001324   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         3 001325   000000 000006                    ADSC9   0,,PR0                   cn=0,n=6
         3 001326   002214 710000 3                  TRA     s:6825

      681     6516    5                     CASE ( 5 /* B8_BYTE# */ );

      682     6517    5                        OCS_STRUCT$ -> OCS$T8 = ' ';

   6517  3 001327   000104 470400 0                  LDP0    OCS_STRUCT$
         3 001330   040100 100400                    MLR     fill='040'O
PL6.E3A0      #001=OCS$SYNTAX File=OCS$SYNTAX.:E05TSI                            WED 07/30/97 04:06 Page:103  
         3 001331   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         3 001332   000000 000010                    ADSC9   0,,PR0                   cn=0,n=8
         3 001333   002214 710000 3                  TRA     s:6825

      683     6518    5                     CASE ( 6 /* B12_BYTE# */ );

      684     6519    5                        OCS_STRUCT$ -> OCS$T12 = ' ';

   6519  3 001334   000104 470400 0                  LDP0    OCS_STRUCT$
         3 001335   040100 100400                    MLR     fill='040'O
         3 001336   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         3 001337   000000 000014                    ADSC9   0,,PR0                   cn=0,n=12

      685     6520    5                     END;                  /* DO CASE OFFSET_ */

   6520  3 001340   002214 710000 3                  TRA     s:6825

      686     6521                                                /**/
      687     6522        %EJECT;
PL6.E3A0      #001=OCS$SYNTAX File=OCS$SYNTAX.:E05TSI                            WED 07/30/97 04:06 Page:104  
      688     6523                                                /**/
      689     6524    4                  CASE ( 9 /* TNUL# */ );

      690     6525                                                /**/
      691     6526    5                     DO CASE ( OFFSET_ );

   6526  3 001341   000004 116007                    CMPQ    4,DL
         3 001342   001344 602006 3                  TNC     s:6526+3,QL
         3 001343   002214 710000 3                  TRA     s:6825
         3 001344   001350 710000 3                  TRA     s:6529
         3 001345   001355 710000 3                  TRA     s:6531
         3 001346   001362 710000 3                  TRA     s:6533
         3 001347   001367 710000 3                  TRA     s:6535

      692     6527                                                /**/
      693     6528    5                     CASE ( 0 /* N1_BYTE# */ );

      694     6529    5                        OCS_STRUCT$ -> OCS$D1 = 0;

   6529  3 001350   000104 470400 0                  LDP0    OCS_STRUCT$
         3 001351   000100 101400                    MRL     fill='000'O
         3 001352   000002 000004 xsym               ADSC9   B_VECTNIL+2              cn=0,n=4
         3 001353   000000 000001                    ADSC9   0,,PR0                   cn=0,n=1
         3 001354   002214 710000 3                  TRA     s:6825

      695     6530    5                     CASE ( 1 /* N2_BYTE# */ );

      696     6531    5                        OCS_STRUCT$ -> OCS$D2 = 0;

   6531  3 001355   000104 470400 0                  LDP0    OCS_STRUCT$
         3 001356   000100 101400                    MRL     fill='000'O
         3 001357   000002 000004 xsym               ADSC9   B_VECTNIL+2              cn=0,n=4
         3 001360   000000 000002                    ADSC9   0,,PR0                   cn=0,n=2
         3 001361   002214 710000 3                  TRA     s:6825

      697     6532    5                     CASE ( 2 /* N3_BYTE# */ );

PL6.E3A0      #001=OCS$SYNTAX File=OCS$SYNTAX.:E05TSI                            WED 07/30/97 04:06 Page:105  
      698     6533    5                        OCS_STRUCT$ -> OCS$D3 = 0;

   6533  3 001362   000104 470400 0                  LDP0    OCS_STRUCT$
         3 001363   000100 101400                    MRL     fill='000'O
         3 001364   000002 000004 xsym               ADSC9   B_VECTNIL+2              cn=0,n=4
         3 001365   000000 000003                    ADSC9   0,,PR0                   cn=0,n=3
         3 001366   002214 710000 3                  TRA     s:6825

      699     6534    5                     CASE ( 3 /* N4_BYTE# */ );

      700     6535    5                        OCS_STRUCT$ -> OCS$D4 = 0;

   6535  3 001367   000104 470400 0                  LDP0    OCS_STRUCT$
         3 001370   000100 100400                    MLR     fill='000'O
         3 001371   000002 000004 xsym               ADSC9   B_VECTNIL+2              cn=0,n=4
         3 001372   000000 000004                    ADSC9   0,,PR0                   cn=0,n=4

      701     6536    5                     END;                  /* DO CASE OFFSET_ */

   6536  3 001373   002214 710000 3                  TRA     s:6825

      702     6537                                                /**/
      703     6538        %EJECT;
PL6.E3A0      #001=OCS$SYNTAX File=OCS$SYNTAX.:E05TSI                            WED 07/30/97 04:06 Page:106  
      704     6539                                                /**/
      705     6540    4                  CASE ( 10 /* TXWSN# */ );

      706     6541                                                /**/
      707     6542    4                     CALL CONCAT (SECOND_STRING,

   6542  3 001374   000000 236000 xsym               LDQ     OCS_CINDEX
         3 001375   000076 402007                    MPY     62,DL
         3 001376   000000 470400 xsym               LDP0    OC_CONSOLE$
         3 001377   000001 236106                    LDQ     1,QL,PR0
         3 001400   000132 756000 0                  STQ     SECOND_STRING
         3 001401   040000 100400                    MLR     fill='040'O
         3 001402   000014 000004 2                  ADSC9   KC$CGID+12               cn=0,n=4
         3 001403   000133 000074 0                  ADSC9   SECOND_STRING+1          cn=0,n=60

      708     6543    4                          SUBSTR(OC_CONSOLE.STATION(OCS_CINDEX),4,4),
      709     6544    4                          '    ') ;
      710     6545                                                /**/
      711     6546                                           /* If this is a system console,
      712     6547                                                change default wsn from local
      713     6548                                                to 'ALL' */
      714     6549                                                /**/
      715     6550    4                     IF OC_CONSOLE.ATTR(OCS_CINDEX)

   6550  3 001404   000000 236000 xsym               LDQ     OCS_CINDEX
         3 001405   000076 402007                    MPY     62,DL
         3 001406   000000 470400 xsym               LDP0    OC_CONSOLE$
         3 001407   000013 220106                    LDX0    11,QL,PR0
         3 001410   200000 360003                    ANX0    65536,DU
         3 001411   001414 600000 3                  TZE     s:6556

      716     6551    4                          &
      717     6552    4                          '200000'O /* K_SYS  */
      718     6553    4                     THEN
      719     6554    4                          CALL INSERT (SECOND_STRING, 0, 4, '    ');

   6554  3 001412   000014 236000 2                  LDQ     KC$CGID+12
PL6.E3A0      #001=OCS$SYNTAX File=OCS$SYNTAX.:E05TSI                            WED 07/30/97 04:06 Page:107  
         3 001413   000132 756000 0                  STQ     SECOND_STRING

      720     6555                                                /**/
      721     6556    4                     OCS_NUMC = BYTES_;

   6556  3 001414   000116 720000 0                  LXL0    BYTES_
         3 001415   000131 740000 0                  STX0    OCS_NUMC

      722     6557    4                     OCS_STRUCT$ -> OCS$T8 =

   6557  3 001416   000104 471400 0                  LDP1    OCS_STRUCT$
         3 001417   040100 100440                    MLR     fill='040'O
         3 001420   000132 000010 0                  ADSC9   SECOND_STRING            cn=0,n=*X0
         3 001421   100000 000010                    ADSC9   0,,PR1                   cn=0,n=8
         3 001422   002214 710000 3                  TRA     s:6825

      723     6558    4                          ADDR(SECOND_STRING) -> SECOND$STRING;
      724     6559                                                /**/
      725     6560        %EJECT;
PL6.E3A0      #001=OCS$SYNTAX File=OCS$SYNTAX.:E05TSI                            WED 07/30/97 04:06 Page:108  
      726     6561                                                /**/
      727     6562    4                  CASE ( 11 /* TXDEV# */, 24 /* TXGNDEV# */ );

      728     6563
      729     6564                                           /* Its possible that an XDEV node
      730     6565                                                can have a ,F on it...allow
      731     6566                                                for it here ... blanking the
      732     6567                                                device field */
      733     6568    4                     IF (PTR$ -> OCS$TN.COUNT = 1)

   6568  3 001423   000111 470400 0                  LDP0    PTR$
         3 001424   000100 101500                    MRL     fill='000'O
         3 001425   000000 000001                    ADSC9   0,,PR0                   cn=0,n=1
         3 001426   200004 000004                    ADSC9   4,,AUTO                  cn=0,n=4
         3 001427   200004 236100                    LDQ     4,,AUTO
         3 001430   000001 116007                    CMPQ    1,DL
         3 001431   001445 601000 3                  TNZ     s:6580
         3 001432   000100 101500                    MRL     fill='000'O
         3 001433   000000 000001                    ADSC9   0,,PR0                   cn=0,n=1
         3 001434   200005 000002                    ADSC9   5,,AUTO                  cn=0,n=2
         3 001435   200005 220100                    LDX0    5,,AUTO
         3 001436   040000 106540                    CMPC    fill='040'O
         3 001437   000000 200010                    ADSC9   0,,PR0                   cn=1,n=*X0
         3 001440   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         3 001441   001445 601000 3                  TNZ     s:6580

      734     6569    4                          AND
      735     6570    4                          (PTR$ -> OCS$TN.TEXT = ' ')
      736     6571    4                     THEN
      737     6572    5                     DO;

      738     6573    5                          ADDR(SECC_STRING(0)) -> OCS$T4 = ' ';

   6573  3 001442   000035 236000 xsym               LDQ     B_VECTNIL+29
         3 001443   000132 756000 0                  STQ     SECOND_STRING

      739     6574    5                          GOTO OCS$INSERT_WSN;
PL6.E3A0      #001=OCS$SYNTAX File=OCS$SYNTAX.:E05TSI                            WED 07/30/97 04:06 Page:109  

   6574  3 001444   001546 710000 3                  TRA     OCS$INSERT_WSN

      740     6575    5                        END;
      741     6576                                         /* XGNDEV is the same as XDEV except
      742     6577                                           that a two-letter generic device
      743     6578                                           is also accepted: 'LP  '         */
      744     6579
      745     6580    4                     IF CVSN_ = 24 /* TXGNDEV# */ AND PTR$->OCS$TN.COUNT = 2

   6580  3 001445   000030 115007                    CMPA    24,DL
         3 001446   001460 601000 3                  TNZ     s:6589
         3 001447   000100 101500                    MRL     fill='000'O
         3 001450   000000 000001                    ADSC9   0,,PR0                   cn=0,n=1
         3 001451   200004 000004                    ADSC9   4,,AUTO                  cn=0,n=4
         3 001452   200004 236100                    LDQ     4,,AUTO
         3 001453   000002 116007                    CMPQ    2,DL
         3 001454   001460 601000 3                  TNZ     s:6589

      746     6581    5                     THEN DO;

      747     6582    5                          ADDR(SECC_STRING(2))->OCS$T2 = '  ';

   6582  3 001455   000014 220000 2                  LDX0    KC$CGID+12
         3 001456   000132 440000 0                  SXL0    SECOND_STRING

      748     6583    5                        END;

   6583  3 001457   001525 710000 3                  TRA     s:6603

      749     6584    5                     ELSE DO;

      750     6585
      751     6586                                           /* XDEV: 4-char device name 'LP01'
      752     6587                                              Special check for 4 characters
      753     6588                                                input....no more, no less */
      754     6589    5                          IF PTR$ -> OCS$TN.COUNT ~= 4
PL6.E3A0      #001=OCS$SYNTAX File=OCS$SYNTAX.:E05TSI                            WED 07/30/97 04:06 Page:110  

   6589  3 001460   000100 101500                    MRL     fill='000'O
         3 001461   000000 000001                    ADSC9   0,,PR0                   cn=0,n=1
         3 001462   200004 000004                    ADSC9   4,,AUTO                  cn=0,n=4
         3 001463   200004 236100                    LDQ     4,,AUTO
         3 001464   000004 116007                    CMPQ    4,DL
         3 001465   001472 600000 3                  TZE     s:6593

      755     6590    5                          THEN
      756     6591    5                               CALL OCS$UNEXP (PTR$, 5 /*E#NOTDEV*/);

   6591  3 001466   000010 630400 4                  EPPR0   8
         3 001467   000020 631400 xsym               EPPR1   B_VECTNIL+16
         3 001470   000000 701000 xent               TSX1    OCS$UNEXP
         3 001471   000000 011000                    NOP     0

      757     6592                                                /* AND verify digit-digit */
      758     6593    5                          CALL OCC$CHKDIG(SUBSTR(PTR$->OCS$TN.TEXT,2,2),2)

   6593  3 001472   000111 470400 0                  LDP0    PTR$
         3 001473   000100 101500                    MRL     fill='000'O
         3 001474   000000 000001                    ADSC9   0,,PR0                   cn=0,n=1
         3 001475   200004 000002                    ADSC9   4,,AUTO                  cn=0,n=2
         3 001476   200004 220100                    LDX0    4,,AUTO
         3 001477   000003 236000 4                  LDQ     3
         3 001500   200007 756100                    STQ     7,,AUTO
         3 001501   000111 236000 0                  LDQ     PTR$
         3 001502   600000 036007                    ADLQ    -65536,DL
         3 001503   200006 756100                    STQ     6,,AUTO
         3 001504   200006 630500                    EPPR0   6,,AUTO
         3 001505   000020 631400 xsym               EPPR1   B_VECTNIL+16
         3 001506   000000 701000 xent               TSX1    OCC$CHKDIG
         3 001507   001511 702000 3                  TSX2    s:6595
         3 001510   001515 710000 3                  TRA     s:6598

      759     6594    6                          WHENALTRETURN DO;

PL6.E3A0      #001=OCS$SYNTAX File=OCS$SYNTAX.:E05TSI                            WED 07/30/97 04:06 Page:111  
      760     6595    6                               CALL OCS$UNEXP (PTR$, 5 /*E#NOTDEV*/);

   6595  3 001511   000010 630400 4                  EPPR0   8
         3 001512   000020 631400 xsym               EPPR1   B_VECTNIL+16
         3 001513   000000 701000 xent               TSX1    OCS$UNEXP
         3 001514   000000 011000                    NOP     0

      761     6596    6                             END;          /* ALTRET */

      762     6597                                                /* PUT IN NN FROM DEVNAME */
      763     6598    5                          ADDR(SECC_STRING(2)) -> OCS$T2 =

   6598  3 001515   000111 470400 0                  LDP0    PTR$
         3 001516   000100 101500                    MRL     fill='000'O
         3 001517   000000 000001                    ADSC9   0,,PR0                   cn=0,n=1
         3 001520   200004 000002                    ADSC9   4,,AUTO                  cn=0,n=2
         3 001521   200004 220100                    LDX0    4,,AUTO
         3 001522   040000 100500                    MLR     fill='040'O
         3 001523   000000 600002                    ADSC9   0,,PR0                   cn=3,n=2
         3 001524   000132 400002 0                  ADSC9   SECOND_STRING            cn=2,n=2

      764     6599    5                               SUBSTR (PTR$->OCS$TN.TEXT,2,2);
      765     6600    5                        END;               /* IF NOT GNDEV */

      766     6601
      767     6602                                                /* SIZE OF DEVICE NAME=2 */
      768     6603    4                     CALL XLATE ( ADDR(SECC_STRING(0))->OCS$T2,

   6603  3 001525   000100 101500                    MRL     fill='000'O
         3 001526   000000 000001                    ADSC9   0,,PR0                   cn=0,n=1
         3 001527   200004 000002                    ADSC9   4,,AUTO                  cn=0,n=2
         3 001530   200004 220100                    LDX0    4,,AUTO
         3 001531   040000 160500                    MVT     fill='040'O
         3 001532   000000 200002                    ADSC9   0,,PR0                   cn=1,n=2
         3 001533   000132 000002 0                  ADSC9   SECOND_STRING            cn=0,n=2
         3 001534   000156 000000 0                  ARG     OCS_XTAB1

PL6.E3A0      #001=OCS$SYNTAX File=OCS$SYNTAX.:E05TSI                            WED 07/30/97 04:06 Page:112  
      769     6604    4                          OCS_XTAB1,
      770     6605    4                          SUBSTR(PTR$->OCS$TN.TEXT,0,2));
      771     6606
      772     6607    4                     IF SEC_STRING(0) = 0

   6607  3 001535   000132 236000 0                  LDQ     SECOND_STRING
         3 001536   777000 316003                    CANQ    -512,DU
         3 001537   001542 600000 3                  TZE     s:6611
         3 001540   000777 316003                    CANQ    511,DU
         3 001541   001546 601000 3                  TNZ     OCS$INSERT_WSN

      773     6608    4                          OR
      774     6609    4                          SEC_STRING(1) = 0
      775     6610    4                     THEN
      776     6611    4                          CALL OCS$UNEXP (PTR$, 5 /*E#NOTDEV*/);

   6611  3 001542   000010 630400 4                  EPPR0   8
         3 001543   000020 631400 xsym               EPPR1   B_VECTNIL+16
         3 001544   000000 701000 xent               TSX1    OCS$UNEXP
         3 001545   000000 011000                    NOP     0

      777     6612
      778     6613
      779     6614                                                /* Add 4 chars of WSN from CTAB */
      780     6615    4   OCS$INSERT_WSN:   ADDR(SECC_STRING(4)) -> OCS$T4 =

   6615  3 001546   000000 236000 xsym  OCS$INSERT_* LDQ     OCS_CINDEX
         3 001547   000076 402007                    MPY     62,DL
         3 001550   000000 470400 xsym               LDP0    OC_CONSOLE$
         3 001551   000001 236106                    LDQ     1,QL,PR0
         3 001552   000133 756000 0                  STQ     SECOND_STRING+1

      781     6616    4                          SUBSTR (OC_CONSOLE.STATION(OCS_CINDEX),
      782     6617    4                          4,4);
      783     6618    4                     OCS_NUMC = BYTES_;

   6618  3 001553   000116 720000 0                  LXL0    BYTES_
PL6.E3A0      #001=OCS$SYNTAX File=OCS$SYNTAX.:E05TSI                            WED 07/30/97 04:06 Page:113  
         3 001554   000131 740000 0                  STX0    OCS_NUMC

      784     6619    4                     OCS_STRUCT$ -> OCS$T8 = ADDR(SECOND_STRING) ->

   6619  3 001555   000104 471400 0                  LDP1    OCS_STRUCT$
         3 001556   040100 100440                    MLR     fill='040'O
         3 001557   000132 000010 0                  ADSC9   SECOND_STRING            cn=0,n=*X0
         3 001560   100000 000010                    ADSC9   0,,PR1                   cn=0,n=8
         3 001561   002214 710000 3                  TRA     s:6825

      785     6620    4                          SECOND$STRING;
      786     6621
      787     6622        %EJECT;
PL6.E3A0      #001=OCS$SYNTAX File=OCS$SYNTAX.:E05TSI                            WED 07/30/97 04:06 Page:114  
      788     6623                                                /**/
      789     6624    4                  CASE ( 12 /* TXPRIO# */ );

      790     6625                                                /**/
      791     6626    4                     OCS_STRUCT$ -> OCS$D1 = OC_CONSOLE.MXPRIO(OCS_CINDEX);

   6626  3 001562   000000 236000 xsym               LDQ     OCS_CINDEX
         3 001563   000370 402007                    MPY     248,DL
         3 001564   000000 470400 xsym               LDP0    OC_CONSOLE$
         3 001565   000104 471400 0                  LDP1    OCS_STRUCT$
         3 001566   000100 100506                    MLR     fill='000'O
         3 001567   000075 000001                    ADSC9   61,Q,PR0                 cn=0,n=1
         3 001570   100000 000001                    ADSC9   0,,PR1                   cn=0,n=1
         3 001571   002214 710000 3                  TRA     s:6825

      792     6627                                                /**/
      793     6628        %EJECT;
PL6.E3A0      #001=OCS$SYNTAX File=OCS$SYNTAX.:E05TSI                            WED 07/30/97 04:06 Page:115  
      794     6629                                                /**/
      795     6630    4                  CASE ( 13 /* TXTERM# */ );

      796     6631                                                /**/
      797     6632    4                     IF (OC_CONSOLE.ATTR(OCS_CINDEX) & '200000'O /* K_SYS  */)

   6632  3 001572   000000 236000 xsym               LDQ     OCS_CINDEX
         3 001573   000076 402007                    MPY     62,DL
         3 001574   000000 470400 xsym               LDP0    OC_CONSOLE$
         3 001575   000013 220106                    LDX0    11,QL,PR0
         3 001576   200000 360003                    ANX0    65536,DU
         3 001577   001603 601000 3                  TNZ     s:6636
         3 001600   000014 220106                    LDX0    12,QL,PR0
         3 001601   200000 360003                    ANX0    65536,DU
         3 001602   001610 600000 3                  TZE     s:6638

      798     6633    4                          OR
      799     6634    4                          (OC_CONSOLE.ATTRO(OCS_CINDEX) & '200000'O /* K_SYS  */)
      800     6635    4                     THEN
      801     6636    4                          OCS_STRUCT$ -> OCS$T8 = ' ';

   6636  3 001603   000104 471400 0                  LDP1    OCS_STRUCT$
         3 001604   040100 100400                    MLR     fill='040'O
         3 001605   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         3 001606   100000 000010                    ADSC9   0,,PR1                   cn=0,n=8
         3 001607   002214 710000 3                  TRA     s:6825

      802     6637    4                     ELSE
      803     6638    4                          OCS_STRUCT$ -> OCS$T8 = OC_CONSOLE.TERM_NAME (OCS_CINDEX);

   6638  3 001610   000000 236000 xsym               LDQ     OCS_CINDEX
         3 001611   000370 402007                    MPY     248,DL
         3 001612   000104 471400 0                  LDP1    OCS_STRUCT$
         3 001613   040100 100506                    MLR     fill='040'O
         3 001614   000002 000010                    ADSC9   2,Q,PR0                  cn=0,n=8
         3 001615   100000 000010                    ADSC9   0,,PR1                   cn=0,n=8
         3 001616   002214 710000 3                  TRA     s:6825
PL6.E3A0      #001=OCS$SYNTAX File=OCS$SYNTAX.:E05TSI                            WED 07/30/97 04:06 Page:116  

      804     6639                                                /**/
      805     6640        %EJECT;
PL6.E3A0      #001=OCS$SYNTAX File=OCS$SYNTAX.:E05TSI                            WED 07/30/97 04:06 Page:117  
      806     6641                                                /**/
      807     6642    4                  CASE ( 14 /* TXCATTR# */ );

      808     6643                                                /**/
      809     6644    4                     OCS_STRUCT$ -> OCS$B2 = OC_CONSOLE.ATTR_INPUT(OCS_CINDEX);

   6644  3 001617   000000 236000 xsym               LDQ     OCS_CINDEX
         3 001620   000370 402007                    MPY     248,DL
         3 001621   000000 470400 xsym               LDP0    OC_CONSOLE$
         3 001622   000104 471400 0                  LDP1    OCS_STRUCT$
         3 001623   000100 100506                    MLR     fill='000'O
         3 001624   000013 000002                    ADSC9   11,Q,PR0                 cn=0,n=2
         3 001625   100000 000002                    ADSC9   0,,PR1                   cn=0,n=2

      810     6645    4                     PINCRC (OCS_STRUCT$,2) -> OCS$B2 =

   6645  3 001626   000000 236000 xsym               LDQ     OCS_CINDEX
         3 001627   000370 402007                    MPY     248,DL
         3 001630   000000 470400 xsym               LDP0    OC_CONSOLE$
         3 001631   000100 100506                    MLR     fill='000'O
         3 001632   000014 000002                    ADSC9   12,Q,PR0                 cn=0,n=2
         3 001633   100000 400002                    ADSC9   0,,PR1                   cn=2,n=2
         3 001634   002214 710000 3                  TRA     s:6825

      811     6646    4                          OC_CONSOLE.ATTR_OUTPUT(OCS_CINDEX);
      812     6647                                                /**/
      813     6648        %EJECT;
PL6.E3A0      #001=OCS$SYNTAX File=OCS$SYNTAX.:E05TSI                            WED 07/30/97 04:06 Page:118  
      814     6649                                                /**/
      815     6650    4                  CASE (15 /* TXCWSN# */);

      816     6651                                                /**/
      817     6652    4                     OCS_STRUCT$ -> OCS$T8 =

   6652  3 001635   000000 236000 xsym               LDQ     OCS_CINDEX
         3 001636   000370 402007                    MPY     248,DL
         3 001637   000000 470400 xsym               LDP0    OC_CONSOLE$
         3 001640   000104 471400 0                  LDP1    OCS_STRUCT$
         3 001641   040100 100506                    MLR     fill='040'O
         3 001642   000004 000010                    ADSC9   4,Q,PR0                  cn=0,n=8
         3 001643   100000 000010                    ADSC9   0,,PR1                   cn=0,n=8
         3 001644   002214 710000 3                  TRA     s:6825

      818     6653    4                          OC_CONSOLE.WSN(OCS_CINDEX);
      819     6654                                                /**/
      820     6655        %EJECT;
PL6.E3A0      #001=OCS$SYNTAX File=OCS$SYNTAX.:E05TSI                            WED 07/30/97 04:06 Page:119  
      821     6656                                                /**/
      822     6657    4                  CASE (16 /* TXNAME# */);

      823     6658                                                /**/
      824     6659    4                     OCS_STRUCT$ -> OCS$T8 =

   6659  3 001645   000000 236000 xsym               LDQ     OCS_CINDEX
         3 001646   000370 402007                    MPY     248,DL
         3 001647   000000 470400 xsym               LDP0    OC_CONSOLE$
         3 001650   000104 471400 0                  LDP1    OCS_STRUCT$
         3 001651   040100 100506                    MLR     fill='040'O
         3 001652   000000 000010                    ADSC9   0,Q,PR0                  cn=0,n=8
         3 001653   100000 000010                    ADSC9   0,,PR1                   cn=0,n=8
         3 001654   002214 710000 3                  TRA     s:6825

      825     6660    4                          OC_CONSOLE.STATION(OCS_CINDEX);
      826     6661                                                /**/
      827     6662        %EJECT;
PL6.E3A0      #001=OCS$SYNTAX File=OCS$SYNTAX.:E05TSI                            WED 07/30/97 04:06 Page:120  
      828     6663                                                /**/
      829     6664    4                  CASE (17 /* TXBWSN# */);

      830     6665                                                /**/
      831     6666                                           /* If not system, admin, or devc
      832     6667                                                what to do? */
      833     6668    4                     OCS_STRUCT$ -> OCS$T16 = '????????????????';

   6668  3 001655   000104 470400 0                  LDP0    OCS_STRUCT$
         3 001656   040100 100400                    MLR     fill='040'O
         3 001657   000015 000020 2                  ADSC9   KC$CGID+13               cn=0,n=16
         3 001660   000000 000020                    ADSC9   0,,PR0                   cn=0,n=16

      834     6669                                                /**/
      835     6670                                                /**/
      836     6671    4                     IF OC_CONSOLE.ATTR(OCS_CINDEX) & '040000'O /* K_ADMIN */

   6671  3 001661   000000 236000 xsym               LDQ     OCS_CINDEX
         3 001662   000076 402007                    MPY     62,DL
         3 001663   000000 471400 xsym               LDP1    OC_CONSOLE$
         3 001664   100013 220106                    LDX0    11,QL,PR1
         3 001665   040000 360003                    ANX0    16384,DU
         3 001666   001675 601000 3                  TNZ     s:6677
         3 001667   100014 220106                    LDX0    12,QL,PR1
         3 001670   040000 360003                    ANX0    16384,DU
         3 001671   001675 601000 3                  TNZ     s:6677
         3 001672   100013 220106                    LDX0    11,QL,PR1
         3 001673   200000 360003                    ANX0    65536,DU
         3 001674   001703 600000 3                  TZE     s:6680

      837     6672    4                          OR
      838     6673    4                          OC_CONSOLE.ATTRO(OCS_CINDEX) & '040000'O /* K_ADMIN */
      839     6674    4                          OR
      840     6675    4                          OC_CONSOLE.ATTR(OCS_CINDEX) & '200000'O /* K_SYS  */
      841     6676    4                     THEN
      842     6677    4                          OCS_STRUCT$ -> OCS$2T8.T81 =

PL6.E3A0      #001=OCS$SYNTAX File=OCS$SYNTAX.:E05TSI                            WED 07/30/97 04:06 Page:121  
   6677  3 001675   000000 236000 xsym               LDQ     OCS_CINDEX
         3 001676   000370 402007                    MPY     248,DL
         3 001677   040100 100506                    MLR     fill='040'O
         3 001700   100004 000010                    ADSC9   4,Q,PR1                  cn=0,n=8
         3 001701   000000 000010                    ADSC9   0,,PR0                   cn=0,n=8
         3 001702   001706 710000 3                  TRA     s:6681

      843     6678    4                               OC_CONSOLE.WSN(OCS_CINDEX);
      844     6679    4                     ELSE
      845     6680    4                          OCS_STRUCT$ -> OCS$2B72.B721 = '0'B /*FALSE#*/;

   6680  3 001703   000100 100400                    MLR     fill='000'O
         3 001704   000002 000001 xsym               ADSC9   B_VECTNIL+2              cn=0,n=1
         3 001705   000000 000010                    ADSC9   0,,PR0                   cn=0,n=8

      846     6681    4                     IF OC_CONSOLE.ATTR(OCS_CINDEX) & '100000'O /* K_DEVC  */

   6681  3 001706   000000 236000 xsym               LDQ     OCS_CINDEX
         3 001707   000076 402007                    MPY     62,DL
         3 001710   000000 471400 xsym               LDP1    OC_CONSOLE$
         3 001711   100013 220106                    LDX0    11,QL,PR1
         3 001712   100000 360003                    ANX0    32768,DU
         3 001713   001717 601000 3                  TNZ     s:6685
         3 001714   100014 220106                    LDX0    12,QL,PR1
         3 001715   100000 360003                    ANX0    32768,DU
         3 001716   001725 600000 3                  TZE     s:6688

      847     6682    4                          OR
      848     6683    4                          OC_CONSOLE.ATTRO(OCS_CINDEX) & '100000'O /* K_DEVC  */
      849     6684    4                     THEN
      850     6685    4                          OCS_STRUCT$ -> OCS$2T8.T82 =

   6685  3 001717   000000 236000 xsym               LDQ     OCS_CINDEX
         3 001720   000370 402007                    MPY     248,DL
         3 001721   040100 100506                    MLR     fill='040'O
         3 001722   100002 000010                    ADSC9   2,Q,PR1                  cn=0,n=8
         3 001723   000002 000010                    ADSC9   2,,PR0                   cn=0,n=8
PL6.E3A0      #001=OCS$SYNTAX File=OCS$SYNTAX.:E05TSI                            WED 07/30/97 04:06 Page:122  
         3 001724   001730 710000 3                  TRA     s:6690

      851     6686    4                               OC_CONSOLE.TERM_NAME(OCS_CINDEX);
      852     6687    4                     ELSE
      853     6688    4                          OCS_STRUCT$ -> OCS$2B72.B722 = '0'B /*FALSE#*/;

   6688  3 001725   000100 100400                    MLR     fill='000'O
         3 001726   000002 000001 xsym               ADSC9   B_VECTNIL+2              cn=0,n=1
         3 001727   000002 000010                    ADSC9   2,,PR0                   cn=0,n=8

      854     6689
      855     6690    4                     IF (OC_CONSOLE.ATTR(OCS_CINDEX) & '200000'O /* K_SYS  */)

   6690  3 001730   000000 236000 xsym               LDQ     OCS_CINDEX
         3 001731   000076 402007                    MPY     62,DL
         3 001732   100013 220106                    LDX0    11,QL,PR1
         3 001733   200000 360003                    ANX0    65536,DU
         3 001734   001740 601000 3                  TNZ     s:6694
         3 001735   100014 220106                    LDX0    12,QL,PR1
         3 001736   200000 360003                    ANX0    65536,DU
         3 001737   002214 600000 3                  TZE     s:6825

      856     6691    4                          OR
      857     6692    4                          (OC_CONSOLE.ATTRO(OCS_CINDEX) & '200000'O /* K_SYS  */)
      858     6693    4                     THEN
      859     6694    4                          OCS_STRUCT$ -> OCS$2T8.T82 = ' ';

   6694  3 001740   040100 100400                    MLR     fill='040'O
         3 001741   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         3 001742   000002 000010                    ADSC9   2,,PR0                   cn=0,n=8
         3 001743   002214 710000 3                  TRA     s:6825

      860     6695
      861     6696                                                /**/
      862     6697                                                /**/
      863     6698        %EJECT;
PL6.E3A0      #001=OCS$SYNTAX File=OCS$SYNTAX.:E05TSI                            WED 07/30/97 04:06 Page:123  
      864     6699                                                /**/
      865     6700    4                  CASE (18 /* TXBTWSN# */);

      866     6701                                                /**/
      867     6702                                           /* PTR$ IS ACTUALLY PTR$ING TO A
      868     6703                                                P$SYM BLOCK...GO ONE MORE
      869     6704                                                LEVEL DOWN */
      870     6705    4                     PTR$ = PTR$ -> OC$OUTSYM.TEXTC$;

   6705  3 001744   000111 470400 0                  LDP0    PTR$
         3 001745   000003 236100                    LDQ     3,,PR0
         3 001746   000111 756000 0                  STQ     PTR$

      871     6706                                                /**/
      872     6707                                                /**/
      873     6708    4                     IF PTR$ -> OCS$TN.COUNT = 0

   6708  3 001747   000111 470400 0                  LDP0    PTR$
         3 001750   000100 101500                    MRL     fill='000'O
         3 001751   000000 000001                    ADSC9   0,,PR0                   cn=0,n=1
         3 001752   200004 000004                    ADSC9   4,,AUTO                  cn=0,n=4
         3 001753   200004 236100                    LDQ     4,,AUTO
         3 001754   000000 116003                    CMPQ    0,DU
         3 001755   001766 600000 3                  TZE     s:6712
         3 001756   000100 101500                    MRL     fill='000'O
         3 001757   000000 000001                    ADSC9   0,,PR0                   cn=0,n=1
         3 001760   200005 000002                    ADSC9   5,,AUTO                  cn=0,n=2
         3 001761   200005 220100                    LDX0    5,,AUTO
         3 001762   040000 106540                    CMPC    fill='040'O
         3 001763   000000 200010                    ADSC9   0,,PR0                   cn=1,n=*X0
         3 001764   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         3 001765   001772 601000 3                  TNZ     s:6714

      874     6709    4                          OR
      875     6710    4                          PTR$ -> OCS$TN.TEXT = ' '
      876     6711    4                     THEN
      877     6712    4                          CALL OCS$UNEXP (PTR$, 6 /*E#NOTTERM*/);
PL6.E3A0      #001=OCS$SYNTAX File=OCS$SYNTAX.:E05TSI                            WED 07/30/97 04:06 Page:124  

   6712  3 001766   000012 630400 4                  EPPR0   10
         3 001767   000020 631400 xsym               EPPR1   B_VECTNIL+16
         3 001770   000000 701000 xent               TSX1    OCS$UNEXP
         3 001771   000000 011000                    NOP     0

      878     6713                                                /**/
      879     6714    4                     IF PTR$ -> OCS$TN.COUNT > 8

   6714  3 001772   000111 470400 0                  LDP0    PTR$
         3 001773   000100 101500                    MRL     fill='000'O
         3 001774   000000 000001                    ADSC9   0,,PR0                   cn=0,n=1
         3 001775   200004 000004                    ADSC9   4,,AUTO                  cn=0,n=4
         3 001776   200004 236100                    LDQ     4,,AUTO
         3 001777   000011 116007                    CMPQ    9,DL
         3 002000   002005 604000 3                  TMI     s:6717

      880     6715    4                     THEN
      881     6716    4                          CALL OCS$UNEXP(PTR$, 2 /*E#TOOLONG*/);

   6716  3 002001   000002 630400 4                  EPPR0   2
         3 002002   000020 631400 xsym               EPPR1   B_VECTNIL+16
         3 002003   000000 701000 xent               TSX1    OCS$UNEXP
         3 002004   000000 011000                    NOP     0

      882     6717    4                     SECOND_STRING = '????????';

   6717  3 002005   040000 100400                    MLR     fill='040'O
         3 002006   000015 000010 2                  ADSC9   KC$CGID+13               cn=0,n=8
         3 002007   000132 000100 0                  ADSC9   SECOND_STRING            cn=0,n=64

      883     6718                                                /**/
      884     6719    4                     OCS_STRUCT$ -> OCS$2T8.T81 = PTR$ -> OCS$TN.TEXT;

   6719  3 002010   000111 470400 0                  LDP0    PTR$
         3 002011   000100 101500                    MRL     fill='000'O
         3 002012   000000 000001                    ADSC9   0,,PR0                   cn=0,n=1
PL6.E3A0      #001=OCS$SYNTAX File=OCS$SYNTAX.:E05TSI                            WED 07/30/97 04:06 Page:125  
         3 002013   200004 000002                    ADSC9   4,,AUTO                  cn=0,n=2
         3 002014   200004 220100                    LDX0    4,,AUTO
         3 002015   000104 471400 0                  LDP1    OCS_STRUCT$
         3 002016   040100 100540                    MLR     fill='040'O
         3 002017   000000 200010                    ADSC9   0,,PR0                   cn=1,n=*X0
         3 002020   100000 000010                    ADSC9   0,,PR1                   cn=0,n=8

      885     6720    4                     OCS_STRUCT$ -> OCS$2T8.T82 = SECOND_STRING;

   6720  3 002021   040100 100400                    MLR     fill='040'O
         3 002022   000132 000010 0                  ADSC9   SECOND_STRING            cn=0,n=8
         3 002023   100002 000010                    ADSC9   2,,PR1                   cn=0,n=8
         3 002024   002214 710000 3                  TRA     s:6825

      886     6721                                                /**/
      887     6722                                                /**/
      888     6723        %EJECT;
PL6.E3A0      #001=OCS$SYNTAX File=OCS$SYNTAX.:E05TSI                            WED 07/30/97 04:06 Page:126  
      889     6724                                                /**/
      890     6725    4                  CASE (19 /* TXSTA# */);

      891     6726                                                /**/
      892     6727                                           /* Add the input item to the
      893     6728                                                station list on CSCG */
      894     6729    4                     COUNT_ = PTR$ -> OCS$D1;

   6729  3 002025   000111 470400 0                  LDP0    PTR$
         3 002026   000000 101500                    MRL     fill='000'O
         3 002027   000000 000001                    ADSC9   0,,PR0                   cn=0,n=1
         3 002030   000121 000004 0                  ADSC9   COUNT_                   cn=0,n=4

      895     6730    4                     IF COUNT_ > BYTES_

   6730  3 002031   000116 236000 0                  LDQ     BYTES_
         3 002032   000121 116000 0                  CMPQ    COUNT_
         3 002033   002040 603000 3                  TRC     s:6735

      896     6731    4                     THEN
      897     6732    4                          CALL OCS$UNEXP (PTR$, 2 /*E#TOOLONG*/);

   6732  3 002034   000002 630400 4                  EPPR0   2
         3 002035   000020 631400 xsym               EPPR1   B_VECTNIL+16
         3 002036   000000 701000 xent               TSX1    OCS$UNEXP
         3 002037   000000 011000                    NOP     0

      898     6733
      899     6734                                                /**/
      900     6735    4                     OCS_STA (OCS_NAMES) = PTR$ -> OCS$TN.TEXT;

   6735  3 002040   000000 235000 xsym               LDA     OCS_NAMES
         3 002041   000001 735000                    ALS     1
         3 002042   000111 470400 0                  LDP0    PTR$
         3 002043   000100 101500                    MRL     fill='000'O
         3 002044   000000 000001                    ADSC9   0,,PR0                   cn=0,n=1
         3 002045   200004 000002                    ADSC9   4,,AUTO                  cn=0,n=2
PL6.E3A0      #001=OCS$SYNTAX File=OCS$SYNTAX.:E05TSI                            WED 07/30/97 04:06 Page:127  
         3 002046   200004 220100                    LDX0    4,,AUTO
         3 002047   000002 735000                    ALS     2
         3 002050   040005 100540                    MLR     fill='040'O
         3 002051   000000 200010                    ADSC9   0,,PR0                   cn=1,n=*X0
         3 002052   000000 000010 xsym               ADSC9   OCS_STA,A                cn=0,n=8

      901     6736                                                /**/
      902     6737    4                     IF OCS_NAMES < 3 /* MAX_NAMES# */

   6737  3 002053   000000 235000 xsym               LDA     OCS_NAMES
         3 002054   000003 115007                    CMPA    3,DL
         3 002055   002061 603000 3                  TRC     s:6741

      903     6738    4                     THEN
      904     6739    4                          OCS_NAMES = OCS_NAMES + 1;

   6739  3 002056   000001 035007                    ADLA    1,DL
         3 002057   000000 755000 xsym               STA     OCS_NAMES
         3 002060   002064 710000 3                  TRA     s:6743

      905     6740    4                     ELSE
      906     6741    4                          CALL OCS$CHKINP;

   6741  3 002061   000002 631400 xsym               EPPR1   B_VECTNIL+2
         3 002062   000000 701000 xent               TSX1    OCS$CHKINP
         3 002063   000000 011000                    NOP     0

      907     6742                                                /**/
      908     6743    4                     BYTES_ = 0;           /* Dont incr STRUCT$ */

   6743  3 002064   000116 450000 0                  STZ     BYTES_
         3 002065   002214 710000 3                  TRA     s:6825

      909     6744                                                /**/
      910     6745        %EJECT;
PL6.E3A0      #001=OCS$SYNTAX File=OCS$SYNTAX.:E05TSI                            WED 07/30/97 04:06 Page:128  
      911     6746                                                /**/
      912     6747    4                  CASE (20 /* TXNATL# */);

      913     6748                                           /* Move native language byte to
      914     6749                                                output block */
      915     6750    4                     OCS_STRUCT$ -> OCS$T1 =

   6750  3 002066   000000 236000 xsym               LDQ     OCS_CINDEX
         3 002067   000370 402007                    MPY     248,DL
         3 002070   000000 470400 xsym               LDP0    OC_CONSOLE$
         3 002071   000104 471400 0                  LDP1    OCS_STRUCT$
         3 002072   040100 100506                    MLR     fill='040'O
         3 002073   000017 600001                    ADSC9   15,Q,PR0                 cn=3,n=1
         3 002074   100000 000001                    ADSC9   0,,PR1                   cn=0,n=1
         3 002075   002214 710000 3                  TRA     s:6825

      916     6751    4                          OC_CONSOLE.NATLANG(OCS_CINDEX);
      917     6752                                                /**/
      918     6753        %EJECT;
PL6.E3A0      #001=OCS$SYNTAX File=OCS$SYNTAX.:E05TSI                            WED 07/30/97 04:06 Page:129  
      919     6754    4                  CASE (21 /* TXNOT# */);

      920     6755    4                     OCS_STRUCT$ -> OCS$D1 = 1; /* NOT WAS FOUND */

   6755  3 002076   000104 470400 0                  LDP0    OCS_STRUCT$
         3 002077   000100 101400                    MRL     fill='000'O
         3 002100   000003 000004 xsym               ADSC9   B_VECTNIL+3              cn=0,n=4
         3 002101   000000 000001                    ADSC9   0,,PR0                   cn=0,n=1
         3 002102   002214 710000 3                  TRA     s:6825

      921     6756        %EJECT;
PL6.E3A0      #001=OCS$SYNTAX File=OCS$SYNTAX.:E05TSI                            WED 07/30/97 04:06 Page:130  
      922     6757                                                /**/
      923     6758    4                  CASE (22 /* TXCGFID# */);

      924     6759                                                /**/
      925     6760                                           /*
      926     6761                                                Break a ComGroup FID into
      927     6762                                                a KC$CGID block for ELF */
      928     6763
      929     6764    4                     COUNT_ = PTR$ -> OCS$D1;

   6764  3 002103   000111 470400 0                  LDP0    PTR$
         3 002104   000000 101500                    MRL     fill='000'O
         3 002105   000000 000001                    ADSC9   0,,PR0                   cn=0,n=1
         3 002106   000121 000004 0                  ADSC9   COUNT_                   cn=0,n=4

      930     6765
      931     6766    4                     IF COUNT_ = 0

   6766  3 002107   000121 235000 0                  LDA     COUNT_
         3 002110   002113 600000 3                  TZE     s:6770
         3 002111   000100 115007                    CMPA    64,DL
         3 002112   002117 602000 3                  TNC     s:6772

      932     6767    4                          OR
      933     6768    4                          COUNT_ > 63
      934     6769    4                     THEN
      935     6770    4                          CALL OCS$UNEXP (PTR$, 2 /*E#TOOLONG*/);

   6770  3 002113   000002 630400 4                  EPPR0   2
         3 002114   000020 631400 xsym               EPPR1   B_VECTNIL+16
         3 002115   000000 701000 xent               TSX1    OCS$UNEXP
         3 002116   000000 011000                    NOP     0

      936     6771
      937     6772    4                     SECOND_STRING = ' ';

   6772  3 002117   040000 100400                    MLR     fill='040'O
PL6.E3A0      #001=OCS$SYNTAX File=OCS$SYNTAX.:E05TSI                            WED 07/30/97 04:06 Page:131  
         3 002120   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         3 002121   000132 000100 0                  ADSC9   SECOND_STRING            cn=0,n=64

      938     6773
      939     6774    4                     OCS_NUMC = COUNT_;

   6774  3 002122   000121 720000 0                  LXL0    COUNT_
         3 002123   000131 740000 0                  STX0    OCS_NUMC

      940     6775
      941     6776    4                     ADDR(SECOND_STRING) -> SECOND$STRING =

   6776  3 002124   000111 470400 0                  LDP0    PTR$
         3 002125   000100 101500                    MRL     fill='000'O
         3 002126   000000 000001                    ADSC9   0,,PR0                   cn=0,n=1
         3 002127   200004 000002                    ADSC9   4,,AUTO                  cn=0,n=2
         3 002130   200004 221100                    LDX1    4,,AUTO
         3 002131   040040 100540                    MLR     fill='040'O
         3 002132   000000 200011                    ADSC9   0,,PR0                   cn=1,n=*X1
         3 002133   000132 000010 0                  ADSC9   SECOND_STRING            cn=0,n=*X0

      942     6777    4                          PTR$ -> OCS$TN.TEXT;
      943     6778
      944     6779    4                     CALL M$FID (GET_COMGROUP_FID) ALTRET (WHAT_NOW);

   6779  3 002134   000016 630400 0                  EPPR0   GET_COMGROUP_FID
         3 002135   420001 713400                    CLIMB   alt,+8193
         3 002136   404400 401760                    pmme    nvectors=10
         3 002137   002141 702000 3                  TSX2    WHAT_NOW

      945     6780
      946     6781    5                     DO WHILE ('0'B /*FALSE#*/);

   6781  3 002140   002145 710000 3                  TRA     s:6788

   6779  3 002141                       WHAT_NOW     null
      947     6782    5   WHAT_NOW:              ;
PL6.E3A0      #001=OCS$SYNTAX File=OCS$SYNTAX.:E05TSI                            WED 07/30/97 04:06 Page:132  
      948     6783    5                          CALL OCS$UNEXP (PTR$, 7 /* E#BADFID */);

   6783  3 002141   000014 630400 4                  EPPR0   12
         3 002142   000020 631400 xsym               EPPR1   B_VECTNIL+16
         3 002143   000000 701000 xent               TSX1    OCS$UNEXP
         3 002144   000000 011000                    NOP     0

      949     6784
      950     6785    5                        END;                     /* DO IF BAD FID (OR BAD FID

      951     6786                                                PARTS DETECTED) */
      952     6787
      953     6788    4                     IF CG_ASN ~= %COMGROUP#

   6788  3 002145   000076 236000 0                  LDQ     CG_ASN
         3 002146   777000 376003                    ANQ     -512,DU
         3 002147   004000 116003                    CMPQ    2048,DU
         3 002150   002141 601000 3                  TNZ     WHAT_NOW

      954     6789    4                     THEN
      955     6790    4                          GOTO WHAT_NOW;
      956     6791
      957     6792    4                     IF ~CG_RESULTS.NAME

   6792  3 002151   000060 236000 0                  LDQ     CG_RESULTS
         3 002152   400000 376003                    ANQ     -131072,DU
         3 002153   400000 676003                    ERQ     -131072,DU
         3 002154   002141 601000 3                  TNZ     WHAT_NOW

      958     6793    4                     THEN
      959     6794    4                          GOTO WHAT_NOW;
      960     6795
      961     6796    4                     OCS_STRUCT$ -> COMGROUP_FID = KC$CGID; /* Initialize area */

   6796  3 002155   000104 470400 0                  LDP0    OCS_STRUCT$
         3 002156   000100 100400                    MLR     fill='000'O
         3 002157   000000 000060 2                  ADSC9   KC$CGID                  cn=0,n=48
PL6.E3A0      #001=OCS$SYNTAX File=OCS$SYNTAX.:E05TSI                            WED 07/30/97 04:06 Page:133  
         3 002160   000000 000060                    ADSC9   0,,PR0                   cn=0,n=48

      962     6797
      963     6798    4                     IF CG_RESULTS.ACCT

   6798  3 002161   000060 236000 0                  LDQ     CG_RESULTS
         3 002162   200000 316003                    CANQ    65536,DU
         3 002163   002167 600000 3                  TZE     s:6802

      964     6799    4                     THEN
      965     6800    4                          OCS_STRUCT$ -> COMGROUP_FID.ACCT# = CG_ACCT.ACCT#;

   6800  3 002164   000046 237000 0                  LDAQ    CG_ACCT
         3 002165   000000 755100                    STA     0,,PR0
         3 002166   000001 756100                    STQ     1,,PR0

      966     6801
      967     6802    4                     IF CG_RESULTS.NAME

   6802  3 002167   000060 234000 0                  SZN     CG_RESULTS
         3 002170   002174 605000 3                  TPL     s:6806

      968     6803    4                     THEN
      969     6804    4                          OCS_STRUCT$ -> COMGROUP_FID.NAME# = CG_NAME;

   6804  3 002171   000100 100400                    MLR     fill='000'O
         3 002172   000050 000040 0                  ADSC9   CG_NAME                  cn=0,n=32
         3 002173   000004 000040                    ADSC9   4,,PR0                   cn=0,n=32

      970     6805
      971     6806    4                     IF CG_RESULTS.SN

   6806  3 002174   000060 236000 0                  LDQ     CG_RESULTS
         3 002175   040000 316003                    CANQ    16384,DU
         3 002176   002202 600000 3                  TZE     s:6810

      972     6807    4                     THEN
PL6.E3A0      #001=OCS$SYNTAX File=OCS$SYNTAX.:E05TSI                            WED 07/30/97 04:06 Page:134  
      973     6808    4                          OCS_STRUCT$ -> COMGROUP_FID.PSN# = CG_SN.SN#(0);

   6808  3 002177   040100 100400                    MLR     fill='040'O
         3 002200   000073 000006 0                  ADSC9   CG_SN+1                  cn=0,n=6
         3 002201   000002 000006                    ADSC9   2,,PR0                   cn=0,n=6

      974     6809
      975     6810    4                     BYTES_ = SIZEC(KC$CGID);

   6810  3 002202   000060 235007                    LDA     48,DL
         3 002203   000116 755000 0                  STA     BYTES_
         3 002204   002214 710000 3                  TRA     s:6825

      976     6811
      977     6812
      978     6813        %EJECT;
PL6.E3A0      #001=OCS$SYNTAX File=OCS$SYNTAX.:E05TSI                            WED 07/30/97 04:06 Page:135  
      979     6814                                                /**/
      980     6815                                                /* Move LP_WSN to output
      981     6816                                                     block                */
      982     6817    4                  CASE (23 /* TXLPWSN# */);

      983     6818
      984     6819    4                     OCS_STRUCT$ -> OCS$T8 =

   6819  3 002205   000000 236000 xsym               LDQ     OCS_CINDEX
         3 002206   000370 402007                    MPY     248,DL
         3 002207   000000 470400 xsym               LDP0    OC_CONSOLE$
         3 002210   000104 471400 0                  LDP1    OCS_STRUCT$
         3 002211   040100 100506                    MLR     fill='040'O
         3 002212   000010 000010                    ADSC9   8,Q,PR0                  cn=0,n=8
         3 002213   100000 000010                    ADSC9   0,,PR1                   cn=0,n=8

      985     6820    4                          OC_CONSOLE.LP_WSN(OCS_CINDEX);
      986     6821
      987     6822        %EJECT;
PL6.E3A0      #001=OCS$SYNTAX File=OCS$SYNTAX.:E05TSI                            WED 07/30/97 04:06 Page:136  
      988     6823                                                /**/
      989     6824    4                  END;                     /* DO CASE CVSN_ */

      990     6825    3                  OCS_STRUCT$ = PINCRC (OCS_STRUCT$, BYTES_); /* !! */

   6825  3 002214   000116 236000 0                  LDQ     BYTES_
         3 002215   000020 736000                    QLS     16
         3 002216   000104 036000 0                  ADLQ    OCS_STRUCT$
         3 002217   000104 756000 0                  STQ     OCS_STRUCT$

      991     6826    3                  IF POFFC(OCS_STRUCT$,ADDR(OCS_STRUCTURE)) >

   6826  3 002220   000001 236000 4                  LDQ     1
         3 002221   000020 772000                    QRL     16
         3 002222   200004 756100                    STQ     4,,AUTO
         3 002223   000104 236000 0                  LDQ     OCS_STRUCT$
         3 002224   000020 772000                    QRL     16
         3 002225   200004 136100                    SBLQ    4,,AUTO
         3 002226   000210 116007                    CMPQ    136,DL
         3 002227   002233 604400 3                  TMOZ    s:6832

      992     6827    3                       ( 140 /* CSCG_MAXMC# */ - 4 /* SIZE_KNHDR# */ )
      993     6828    3                  THEN
      994     6829    3                       CALL OCS$CHKINP;

   6829  3 002230   000002 631400 xsym               EPPR1   B_VECTNIL+2
         3 002231   000000 701000 xent               TSX1    OCS$CHKINP
         3 002232   000000 011000                    NOP     0

      995     6830                                                /**/
      996     6831    3                END;                       /* IF CODE = 0 */

      997     6832    2           END;                            /* DO I */

   6832  3 002233   000107 235000 0                  LDA     I
         3 002234   000001 035007                    ADLA    1,DL
         3 002235   000107 755000 0                  STA     I
PL6.E3A0      #001=OCS$SYNTAX File=OCS$SYNTAX.:E05TSI                            WED 07/30/97 04:06 Page:137  
         3 002236   000024 115007                    CMPA    20,DL
         3 002237   000301 602000 3                  TNC     s:6300

      998     6833        %EJECT;
PL6.E3A0      #001=OCS$SYNTAX File=OCS$SYNTAX.:E05TSI                            WED 07/30/97 04:06 Page:138  
      999     6834                                                /**/
     1000     6835                                           /* Now that the structure is built,
     1001     6836                                                trace down the Ghost (or MONKEY)
     1002     6837                                           name from the data cell obtained
     1003     6838                                                in the CASE (NAMES#) OCS_NAME */
     1004     6839                                           /* ASSUMPTION: The parsenodes are set
     1005     6840                                                up so that the first SUBLKS$ in
     1006     6841                                                the first parsenode in the data
     1007     6842                                                segment points to the names */
     1008     6843    1        IF OCS_NAMES = 0

   6843  3 002240   000000 236000 xsym               LDQ     OCS_NAMES
         3 002241   002245 601000 3                  TNZ     s:6847

     1009     6844    1        THEN
     1010     6845    1             CALL OCS$CHKINP;

   6845  3 002242   000002 631400 xsym               EPPR1   B_VECTNIL+2
         3 002243   000000 701000 xent               TSX1    OCS$CHKINP
         3 002244   000000 011000                    NOP     0

     1011     6846                                                /**/
     1012     6847    2        DO J = 0 TO (OCS_NAMES - 1);

   6847  3 002245   000110 450000 0                  STZ     J
         3 002246   002346 710000 3                  TRA     s:6876+1

     1013     6848                                                /**/
     1014     6849    2             IF OCS_STA (J) = ' '

   6849  3 002247   000110 235000 0                  LDA     J
         3 002250   000003 735000                    ALS     3
         3 002251   040000 106405                    CMPC    fill='040'O
         3 002252   000000 000010 xsym               ADSC9   OCS_STA,A                cn=0,n=8
         3 002253   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         3 002254   002345 601000 3                  TNZ     s:6876

PL6.E3A0      #001=OCS$SYNTAX File=OCS$SYNTAX.:E05TSI                            WED 07/30/97 04:06 Page:139  
     1015     6850    2             THEN
     1016     6851    3             DO;

     1017     6852    3                  PTR$ = COMMON.PTR$ -> P$NODE.SUBNDS$(0);

   6852  3 002255   000100 470400 0                  LDP0    COMMON
         3 002256   000001 236100                    LDQ     1,,PR0
         3 002257   000111 756000 0                  STQ     PTR$

     1018     6853    3                  MAX_BLKS = PTR$ -> P$NODE.NSUBNDS - 1;

   6853  3 002260   000111 471400 0                  LDP1    PTR$
         3 002261   100000 236100                    LDQ     0,,PR1
         3 002262   000020 772000                    QRL     16
         3 002263   000777 376007                    ANQ     511,DL
         3 002264   000001 136007                    SBLQ    1,DL
         3 002265   000105 756000 0                  STQ     MAX_BLKS

     1019     6854    3                  IF MAX_BLKS = 0

   6854  3 002266   002272 601000 3                  TNZ     s:6858

     1020     6855    3                  THEN
     1021     6856    3                       CALL OCS$CHKINP;

   6856  3 002267   000002 631400 xsym               EPPR1   B_VECTNIL+2
         3 002270   000000 701000 xent               TSX1    OCS$CHKINP
         3 002271   000000 011000                    NOP     0

     1022     6857                                                /**/
     1023     6858    3                  OCS_SUBLKO$ = PTR$ -> P$NODE.SUBNDS$(0);

   6858  3 002272   000111 470400 0                  LDP0    PTR$
         3 002273   000001 236100                    LDQ     1,,PR0
         3 002274   000103 756000 0                  STQ     OCS_SUBLKO$

     1024     6859    3                  OCS_SUBLK$ = OCS_SUBLKO$;
PL6.E3A0      #001=OCS$SYNTAX File=OCS$SYNTAX.:E05TSI                            WED 07/30/97 04:06 Page:140  

   6859  3 002275   000102 756000 0                  STQ     OCS_SUBLK$

     1025     6860                                                /**/
     1026     6861    3                  I = 1;

   6861  3 002276   000001 235007                    LDA     1,DL
         3 002277   000107 755000 0                  STA     I

     1027     6862    4                  DO WHILE (OCS_SUBLK$ -> P$LIT.CODE < OCS_NAME(J));

   6862  3 002300   000110 720000 0                  LXL0    J
         3 002301   000102 471400 0                  LDP1    OCS_SUBLK$
         3 002302   100000 236100                    LDQ     0,,PR1
         3 002303   177777 376007                    ANQ     65535,DL
         3 002304   000112 116010 0                  CMPQ    OCS_NAME,X0
         3 002305   002333 603000 3                  TRC     s:6872

     1028     6863    4                       IF I > MAX_BLKS

   6863  3 002306   000105 236000 0                  LDQ     MAX_BLKS
         3 002307   000107 116000 0                  CMPQ    I
         3 002310   002314 603000 3                  TRC     s:6866

     1029     6864    4                       THEN
     1030     6865    4                            CALL OCS$CHKINP;

   6865  3 002311   000002 631400 xsym               EPPR1   B_VECTNIL+2
         3 002312   000000 701000 xent               TSX1    OCS$CHKINP
         3 002313   000000 011000                    NOP     0

     1031     6866    4                       OCS_SUBLKO$ = OCS_SUBLK$;

   6866  3 002314   000102 236000 0                  LDQ     OCS_SUBLK$
         3 002315   000103 756000 0                  STQ     OCS_SUBLKO$

     1032     6867    4                       OCS_SUBLK$ = PTR$ -> P$NODE.SUBNDS$ (I);
PL6.E3A0      #001=OCS$SYNTAX File=OCS$SYNTAX.:E05TSI                            WED 07/30/97 04:06 Page:141  

   6867  3 002316   000111 470400 0                  LDP0    PTR$
         3 002317   000107 720000 0                  LXL0    I
         3 002320   000001 236110                    LDQ     1,X0,PR0
         3 002321   000102 756000 0                  STQ     OCS_SUBLK$

     1033     6868    4                       I = I + 1;

   6868  3 002322   000107 235000 0                  LDA     I
         3 002323   000001 035007                    ADLA    1,DL
         3 002324   000107 755000 0                  STA     I

     1034     6869    4                     END;

   6869  3 002325   000110 720000 0                  LXL0    J
         3 002326   000102 471400 0                  LDP1    OCS_SUBLK$
         3 002327   100000 236100                    LDQ     0,,PR1
         3 002330   177777 376007                    ANQ     65535,DL
         3 002331   000112 116010 0                  CMPQ    OCS_NAME,X0
         3 002332   002306 602000 3                  TNC     s:6863

     1035     6870                                                /* FOUND! Place in Textc template
     1036     6871                                                     and move the text */
     1037     6872    3                  OCS_NUMC = OCS_SUBLK$ -> P$LIT.COUNT;

   6872  3 002333   100001 236100                    LDQ     1,,PR1
         3 002334   000033 772000                    QRL     27
         3 002335   000000 621006                    EAX1    0,QL
         3 002336   000131 741000 0                  STX1    OCS_NUMC

     1038     6873    3                  OCS_STA(J) = ADDR(OCS_SUBLK$ -> P$LIT.TEXT) -> SECOND$STRING;

   6873  3 002337   000110 235000 0                  LDA     J
         3 002340   000001 735000                    ALS     1
         3 002341   000002 735000                    ALS     2
         3 002342   040005 100540                    MLR     fill='040'O
         3 002343   100001 200011                    ADSC9   1,,PR1                   cn=1,n=*X1
PL6.E3A0      #001=OCS$SYNTAX File=OCS$SYNTAX.:E05TSI                            WED 07/30/97 04:06 Page:142  
         3 002344   000000 000010 xsym               ADSC9   OCS_STA,A                cn=0,n=8

     1039     6874                                                /**/
     1040     6875    3                END;                       /* DO IF OKAY TO LOOKUP */

     1041     6876    2           END;                            /* DO J = 0 TO OCS_NAMES - 1 */

   6876  3 002345   000110 054000 0                  AOS     J
         3 002346   000110 236000 0                  LDQ     J
         3 002347   002247 604000 3                  TMI     s:6849
         3 002350   000000 116000 xsym               CMPQ    OCS_NAMES
         3 002351   002247 602000 3                  TNC     s:6849

     1042     6877                                                /**/
     1043     6878                                                /* Size of structure to return
     1044     6879                                                     to OCP$KEYIN */
     1045     6880    1        OCS_SSIZE = POFFC (OCS_STRUCT$, ADDR(OCS_STRUCTURE));

   6880  3 002352   000001 236000 4                  LDQ     1
         3 002353   000020 772000                    QRL     16
         3 002354   200004 756100                    STQ     4,,AUTO
         3 002355   000104 236000 0                  LDQ     OCS_STRUCT$
         3 002356   000020 772000                    QRL     16
         3 002357   200004 136100                    SBLQ    4,,AUTO
         3 002360   000000 756000 xsym               STQ     OCS_SSIZE

     1046     6881    1        OCS_ERRCODE = 0;

   6881  3 002361   000000 450000 xsym               STZ     OCS_ERRCODE

     1047     6882                                                /**/
     1048     6883                                                /* RETURN TO OCP$KEYIN */
     1049     6884    1        RETURN;

   6884  3 002362   000000 702200 xent               TSX2  ! X66_ARET

     1050     6885                                                /**/
PL6.E3A0      #001=OCS$SYNTAX File=OCS$SYNTAX.:E05TSI                            WED 07/30/97 04:06 Page:143  
     1051     6886        %EJECT;
PL6.E3A0      #001=OCS$SYNTAX File=OCS$SYNTAX.:E05TSI                            WED 07/30/97 04:06 Page:144  
     1052     6887                                                /**/
     1053     6888                                                /**/
     1054     6889    1   OCS$ERRORS:
     1055     6890    1        IF OC_PCB.ERROR.CODE ~= %E$SYNERR

   6890  3 002363   000006 236000 0     OCS$ERRORS   LDQ     OC_PCB+6
         3 002364   377770 376007                    ANQ     131064,DL
         3 002365   000010 116007                    CMPQ    8,DL
         3 002366   002372 600000 3                  TZE     s:6893

     1056     6891    1        THEN
     1057     6892    1             CALL OCS$CHKINP;

   6892  3 002367   000002 631400 xsym               EPPR1   B_VECTNIL+2
         3 002370   000000 701000 xent               TSX1    OCS$CHKINP
         3 002371   000000 011000                    NOP     0

     1058     6893    1        OCS_ERRCODE = 3 /* OCS_ERRORS#  */;

   6893  3 002372   000003 235007                    LDA     3,DL
         3 002373   000000 755000 xsym               STA     OCS_ERRCODE

     1059     6894                                                /**/
     1060     6895    1        J = OC_PCB.HI_CHAR;

   6895  3 002374   000012 236000 0                  LDQ     OC_PCB+10
         3 002375   000110 756000 0                  STQ     J

     1061     6896    1        CALL OCS$ANLZ (OC_KEYINBUF$, J);

   6896  3 002376   000016 630400 4                  EPPR0   14
         3 002377   000020 631400 xsym               EPPR1   B_VECTNIL+16
         3 002400   000000 701000 xent               TSX1    OCS$ANLZ
         3 002401   000000 011000                    NOP     0

   6895  3 002402                       OCS$ERRTRN   null
     1062     6897                                                /**/
PL6.E3A0      #001=OCS$SYNTAX File=OCS$SYNTAX.:E05TSI                            WED 07/30/97 04:06 Page:145  
     1063     6898    1   OCS$ERRTRN: ;
     1064     6899    1        RETURN;

   6899  3 002402   000000 702200 xent               TSX2  ! X66_ARET
     1065     6900                                                /**/
     1066     6901    1   END OCS$SYNTAX;
     1067     6902                                                /**/
     1068     6903        %EOD;

PL6.E3A0      #001=OCS$SYNTAX File=OCS$SYNTAX.:E05TSI                            WED 07/30/97 04:06 Page:146  
--  Include file information  --

   KC$CGBLK.:E05TOU  is referenced.
   OC$MESSHD_C.:E05TOU  is referenced.
   OC_DAT_R.:E05TOU  cannot be made into a system file and is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   OCS_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   OCS_SUBS_C.:E05TOU  is referenced.
   OC_SUBS_C.:E05TOU  is referenced.
   OCI_SUBS_C.:E05TOU  is referenced.
   XU_PERR_C.:E05TOU  is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
   XU_SUBS_C.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure OCS$SYNTAX.
PL6.E3A0      #001=OCS$SYNTAX File=OCS$SYNTAX.:E05TSI                            WED 07/30/97 04:06 Page:147  

 **** Variables and constants ****

  ****  Section 000  Data  OCS$SYNTAX

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

   116-0-0/w UBIN        r     1 BYTES_                   123-0-0/w UBIN        r     1 CASE_
    46-0-0/c STRC(72)    r     1 CG_ACCT                   76-0-0/w UBIN(9)     r     1 CG_ASN
    50-0-0/c STRC(288)   r     1 CG_NAME                   77-0-0/c CHAR(4)     r     1 CG_RES
    60-0-0/d STRC(324)   r     1 CG_RESULTS                72-0-0/d STRC(90)    r     1 CG_SN
   124-0-0/w UBIN        r     1 CODE_                    100-0-0/d STRC        r     1 COMMON
   121-0-0/w UBIN        r     1 COUNT_                   117-0-0/w UBIN        r     1 CVSN_
    16-0-0/d STRC(864)   r     1 GET_COMGROUP_FID         107-0-0/w UBIN        r     1 I
   122-0-0/w UBIN        r     1 INDEX_                   110-0-0/w SBIN        r     1 J
   106-0-0/w UBIN        r     1 LCOUNT                   105-0-0/w UBIN        r     1 MAX_BLKS
   130-0-0/c CHAR        r     1 MINUS
   266-0-0/b STRC        r     1 OCS_ATTRTAB(0:18)
   154-0-0/w UBIN        r     1 OCS_CONVERTED            155-0-0/w SBIN        r     1 OCS_CONVERTEDS
   112-0-0/w UBIN        r     1 OCS_NAME(0:3)
   131-0-0/b UBIN(18)    r     1 OCS_NUMC
   216-0-0/d STRC(72)    r     1 OCS_PARSED(0:19)
   104-0-0/w PTR         r     1 OCS_STRUCT$              102-0-0/w PTR         r     1 OCS_SUBLK$
   103-0-0/w PTR         r     1 OCS_SUBLKO$
   156-0-0/b UBIN(9)     r     1 OCS_XTAB1(0:127)
     0-0-0/w STRC(504)   r     1 OC_PCB                   120-0-0/w UBIN        r     1 OFFSET_
   127-0-0/c CHAR        r     1 PLUS                     111-0-0/w PTR         r     1 PTR$
   132-0-0/c CHAR        r     1 SECC_STRING(0:63)
   132-0-0/c CHAR(64)    r     1 SECOND_STRING
   132-0-0/c UBIN(9)     r     1 SEC_STRING(0:63)

  ****  Section 002 RoData OCS$SYNTAX

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(432)   r     1 KC$CGID
PL6.E3A0      #001=OCS$SYNTAX File=OCS$SYNTAX.:E05TSI                            WED 07/30/97 04:06 Page:148  

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w BIT         r     1 OCS_ATTR                   0-0-0/w UBIN        r     1 OCS_CINDEX
     0-0-0/w UBIN        r     1 OCS_ERRCODE                0-0-0/d REMB        r     1 OCS_ERROR_ADDR
     0-0-0/w BIT         r     1 OCS_FIRST_TIME             0-0-0/w UBIN        r     1 OCS_KSIZE
     0-0-0/w STRC(126)   r     1 OCS_LEXEMES(0:8191)
     0-0-0/w UBIN        r     1 OCS_NAMES                  0-0-0/w UBIN        r     1 OCS_SSIZE
     0-0-0/c CHAR(8)     r     1 OCS_STA(0:8191)
     0-0-0/b STRC(9)     r     1 OCS_STRUCTURE(0:139)
     0-0-0/w UBIN        r     1 OCS_VECTOR
     0-0-0/w UBIN        r     1 OCS_WORKSPACE(0:1023)
     0-0-0/w PTR         r     1 OC_CONSOLE$                0-0-0/w UBIN        r     1 OC_KEYIN#
     0-0-0/w PTR         r     1 OC_KEYINBUF$

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(432)   r     1 COMGROUP_FID               0-0-0/w STRC(144)   r     1 OC$OUTBLK
     0-0-0/w ASTR(153)   r     1 OC$OUTSYM                  0-0-0/c STRC(144)   r     1 OCS$2B72
     0-0-0/c STRC(144)   r     1 OCS$2T8                    0-0-0/c BIT (18)    r     1 OCS$B2
     0-0-0/c UBIN(9)     r     1 OCS$D1                     0-0-0/c UBIN(18)    r     1 OCS$D2
     0-0-0/c UBIN(27)    r     1 OCS$D3                     0-0-0/c UBIN        r     1 OCS$D4
     0-0-0/c SBIN(9)     r     1 OCS$DS1                    0-0-0/c SBIN(18)    r     1 OCS$DS2
     0-0-0/c SBIN(27)    r     1 OCS$DS3                    0-0-0/c SBIN        r     1 OCS$DS4
     0-0-0/c CHAR        r     1 OCS$T1                     0-0-0/c CHAR(12)    r     1 OCS$T12
     0-0-0/c CHAR(16)    r     1 OCS$T16                    0-0-0/c CHAR(2)     r     1 OCS$T2
     0-0-0/c CHAR(3)     r     1 OCS$T3                     0-0-0/c CHAR(4)     r     1 OCS$T4
     0-0-0/c CHAR(6)     r     1 OCS$T6                     0-0-0/c CHAR(8)     r     1 OCS$T8
     0-0-0/c ASTR(9)     r     1 OCS$TN
     0-0-0/w STRC(2205)  r     1 OC_CONSOLE(0:0)
     0-0-0/w STRC(63)    r     1 P$LIT                      0-0-0/w STRC(72)    r     1 P$NODE
PL6.E3A0      #001=OCS$SYNTAX File=OCS$SYNTAX.:E05TSI                            WED 07/30/97 04:06 Page:149  
     0-0-0/c ACHR        r     1 SECOND$STRING


   Procedure OCS$SYNTAX requires 1283 words for executable code.
   Procedure OCS$SYNTAX requires 8 words of local(AUTO) storage.
PL6.E3A0      #001=OCS$SYNTAX File=OCS$SYNTAX.:E05TSI                            WED 07/30/97 04:06 Page:150  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=OCS$SYNTAX File=OCS$SYNTAX.:E05TSI                            WED 07/30/97 04:06 Page:151  
          MINI XREF LISTING

BYTES_
      5980**DCL      6312<<ASSIGN   6328>>IF       6353<<ASSIGN   6556>>ASSIGN   6618>>ASSIGN   6730>>IF
      6743<<ASSIGN   6810<<ASSIGN   6825>>ASSIGN
CASE_
      5985**DCL      6241<<ASSIGN   6244<<ASSIGN   6247<<ASSIGN   6250<<ASSIGN   6253<<ASSIGN   6256<<ASSIGN
      6259>>DOCASE
CG_ACCT
      5884**DCL      5860--DCLINIT
CG_ACCT.ACCT#
      5884**DCL      6800>>ASSIGN
CG_ASN
      5951**DCL      5862--DCLINIT  6788>>IF
CG_NAME
      5913**DCL      5860--DCLINIT  6804>>ASSIGN
CG_RES
      5952**DCL      5862--DCLINIT
CG_RESULTS
      5927**DCL      5863--DCLINIT
CG_RESULTS.ACCT
      5927**DCL      6798>>IF
CG_RESULTS.NAME
      5927**DCL      6792>>IF       6802>>IF
CG_RESULTS.SN
      5927**DCL      6806>>IF
CG_SN
      5948**DCL      5861--DCLINIT
CG_SN.SN#
      5948**DCL      6808>>ASSIGN
CODE_
      5986**DCL      6239<<ASSIGN   6240>>IF       6243>>IF       6246>>IF       6249>>IF       6252>>IF
      6255>>IF       6300<<ASSIGN   6301>>IF       6306>>DOWHILE
COMGROUP_FID
PL6.E3A0      #001=OCS$SYNTAX File=OCS$SYNTAX.:E05TSI                            WED 07/30/97 04:06 Page:152  
      5828**DCL      6796<<ASSIGN
COMGROUP_FID.ACCT#
      5832**DCL      6800<<ASSIGN
COMGROUP_FID.NAME#
      5835**DCL      6804<<ASSIGN
COMGROUP_FID.PSN#
      5833**DCL      6808<<ASSIGN
COMMON.KLUDGE
      5959**DCL      5962--REDEF
COMMON.PTR$
      5962**DCL      6150>>ASSIGN   6852>>ASSIGN
COUNT_
      5983**DCL      6327<<ASSIGN   6328>>IF       6729<<ASSIGN   6730>>IF       6764<<ASSIGN   6766>>IF
      6766>>IF       6774>>ASSIGN
CVSN_
      5981**DCL      6313<<ASSIGN   6323>>DOCASE   6580>>IF
GET_COMGROUP_FID
      5859**DCL      6779<>CALL
GET_COMGROUP_FID.V
      5863**DCL      5859--DCLINIT
GOOD_MINUS_STRING
      6404**LABEL    6404--CALLALT
I
      5973**DCL      6179<<DOINDEX  6180>>ASSIGN   6181>>ASSIGN   6183<<DOINDEX  6184>>ASSIGN   6185>>ASSIGN
      6205<<DOINDEX  6207>>ASSIGN   6299<<DOINDEX  6300>>ASSIGN   6304>>ASSIGN   6861<<ASSIGN   6863>>IF
      6867>>ASSIGN   6868<<ASSIGN   6868>>ASSIGN
INDEX_
      5984**DCL      6272<<ASSIGN   6273>>IF       6276>>IF       6279>>ASSIGN   6280>>ASSIGN   6284<<ASSIGN
      6285>>ASSIGN   6305<<ASSIGN   6306>>DOWHILE  6307<<ASSIGN   6307>>ASSIGN   6308>>IF       6312>>ASSIGN
      6313>>ASSIGN   6314>>ASSIGN   6364>>IF       6420>>IF       6420>>IF       6448>>IF       6484>>IF
J
      5974**DCL      6404<<CALLBLT  6444<<DOINDEX  6445>>ASSIGN   6470<<DOINDEX  6471>>IF       6474>>IF
      6476>>ASSIGN   6476>>ASSIGN   6477>>ASSIGN   6481>>ASSIGN   6847<<DOINDEX  6849>>IF       6862>>DOWHILE
      6873>>ASSIGN   6895<<ASSIGN   6896<>CALL
KC$CGID
      5801**DCL      6796>>ASSIGN   6810--ASSIGN
PL6.E3A0      #001=OCS$SYNTAX File=OCS$SYNTAX.:E05TSI                            WED 07/30/97 04:06 Page:153  
LCOUNT
      5972**DCL      6214<<ASSIGN   6219<<ASSIGN   6219>>ASSIGN   6220>>IF
M$FID
      5026**DCL-ENT  6779--CALL
MAX_BLKS
      5971**DCL      6202<<ASSIGN   6205>>DOINDEX  6853<<ASSIGN   6854>>IF       6863>>IF
MINUS
      5995**DCL      6389>>IF       6404>>CALLBLT
OC$OUTBLK.CODE
      3703**DCL      6216>>DOWHILE  6239>>ASSIGN   6262>>ASSIGN   6272>>ASSIGN   6284>>ASSIGN   6288>>ASSIGN
OC$OUTBLK.NSUBLKS
      3707**DCL      6199>>IF       6202>>ASSIGN
OC$OUTBLK.SUBLK$
      3728**DCL      6207>>ASSIGN
OC$OUTSYM.CODE
      3662**DCL      6162>>ASSIGN   6280>>ASSIGN
OC$OUTSYM.COUNT
      3679**DCL      3682--IMP-SIZ
OC$OUTSYM.TEXTC$
      3674**DCL      6218>>ASSIGN   6279>>ASSIGN   6705>>ASSIGN
OCC$CHKDIG
        42**DCL-ENT  6593--CALL
OCS$2B72.B721
      6095**DCL      6680<<ASSIGN
OCS$2B72.B722
      6096**DCL      6688<<ASSIGN
OCS$2T8.T81
      6091**DCL      6677<<ASSIGN   6719<<ASSIGN
OCS$2T8.T82
      6092**DCL      6685<<ASSIGN   6694<<ASSIGN   6720<<ASSIGN
OCS$ANLZ
        41**DCL-ENT  6896--CALL
OCS$B2
      6113**DCL      6644<<ASSIGN   6645<<ASSIGN
OCS$CHKINP
        39**DCL-ENT  6201--CALL     6222--CALL     6267--CALL     6275--CALL     6310--CALL     6741--CALL
PL6.E3A0      #001=OCS$SYNTAX File=OCS$SYNTAX.:E05TSI                            WED 07/30/97 04:06 Page:154  
      6829--CALL     6845--CALL     6856--CALL     6865--CALL     6892--CALL
OCS$D1
      6103**DCL      6327>>ASSIGN   6371<<ASSIGN   6455<<ASSIGN   6491<<ASSIGN   6529<<ASSIGN   6626<<ASSIGN
      6729>>ASSIGN   6755<<ASSIGN   6764>>ASSIGN
OCS$D2
      6104**DCL      6373<<ASSIGN   6457<<ASSIGN   6493<<ASSIGN   6531<<ASSIGN
OCS$D3
      6105**DCL      6375<<ASSIGN   6459<<ASSIGN   6495<<ASSIGN   6533<<ASSIGN
OCS$D4
      6106**DCL      6377<<ASSIGN   6461<<ASSIGN   6497<<ASSIGN   6535<<ASSIGN
OCS$DS1
      6108**DCL      6429<<ASSIGN
OCS$DS2
      6109**DCL      6431<<ASSIGN
OCS$DS3
      6110**DCL      6433<<ASSIGN
OCS$DS4
      6111**DCL      6435<<ASSIGN
OCS$ERRORS
      6890**LABEL    6160--CALLALT
OCS$ERRTRN
      6895**LABEL    6155--REMEMBR
OCS$FAILURES
        43**DCL-ENT  3479--DCLINIT
OCS$INSERT_WSN
      6615**LABEL    6574--GOTO
OCS$T1
      6081**DCL      6335<<ASSIGN   6507<<ASSIGN   6750<<ASSIGN
OCS$T12
      6087**DCL      6347<<ASSIGN   6519<<ASSIGN
OCS$T16
      6088**DCL      6668<<ASSIGN
OCS$T2
      6082**DCL      6337<<ASSIGN   6509<<ASSIGN   6582<<ASSIGN   6598<<ASSIGN   6603<<CALLBLT
OCS$T3
      6083**DCL      6339<<ASSIGN   6511<<ASSIGN
PL6.E3A0      #001=OCS$SYNTAX File=OCS$SYNTAX.:E05TSI                            WED 07/30/97 04:06 Page:155  
OCS$T4
      6084**DCL      6341<<ASSIGN   6513<<ASSIGN   6573<<ASSIGN   6615<<ASSIGN
OCS$T6
      6085**DCL      6343<<ASSIGN   6515<<ASSIGN
OCS$T8
      6086**DCL      6345<<ASSIGN   6517<<ASSIGN   6557<<ASSIGN   6619<<ASSIGN   6636<<ASSIGN   6638<<ASSIGN
      6652<<ASSIGN   6659<<ASSIGN   6819<<ASSIGN
OCS$TN
      6099**DCL      6358<<ASSIGN   6358>>ASSIGN
OCS$TN.COUNT
      6100**DCL      6101--IMP-SIZ  6335>>ASSIGN   6337>>ASSIGN   6339>>ASSIGN   6341>>ASSIGN   6343>>ASSIGN
      6345>>ASSIGN   6347>>ASSIGN   6353>>ASSIGN   6357<<ASSIGN   6357>>ASSIGN   6358>>ASSIGN   6358>>ASSIGN
      6363>>CALLBLT  6389>>IF       6392>>CALLBLT  6393>>ASSIGN   6397>>ASSIGN   6398>>ASSIGN   6442>>ASSIGN
      6444>>DOINDEX  6469>>ASSIGN   6470>>DOINDEX  6568>>IF       6568>>IF       6580>>IF       6589>>IF
      6593>>CALL     6598>>ASSIGN   6603>>CALLBLT  6708>>IF       6708>>IF       6714>>IF       6719>>ASSIGN
      6735>>ASSIGN   6776>>ASSIGN
OCS$TN.TEXT
      6101**DCL      6335>>ASSIGN   6337>>ASSIGN   6339>>ASSIGN   6341>>ASSIGN   6343>>ASSIGN   6345>>ASSIGN
      6347>>ASSIGN   6363>>CALLBLT  6389>>IF       6392>>CALLBLT  6397>>ASSIGN   6442>>ASSIGN   6469>>ASSIGN
      6568>>IF       6593<>CALL     6598>>ASSIGN   6603>>CALLBLT  6708>>IF       6719>>ASSIGN   6735>>ASSIGN
      6776>>ASSIGN
OCS$UNEXP
        40**DCL-ENT  6330--CALL     6366--CALL     6401--CALL     6408--CALL     6415--CALL     6424--CALL
      6450--CALL     6486--CALL     6591--CALL     6595--CALL     6611--CALL     6712--CALL     6716--CALL
      6732--CALL     6770--CALL     6783--CALL
OCS_ATTR
      4944**DCL      6187<<ASSIGN   6285<<ASSIGN   6285>>ASSIGN
OCS_ATTRTAB.ATTR
      6123**DCL      6285>>ASSIGN
OCS_CINDEX
      4945**DCL      6542>>CALLBLT  6550>>IF       6615>>ASSIGN   6626>>ASSIGN   6632>>IF       6632>>IF
      6638>>ASSIGN   6644>>ASSIGN   6645>>ASSIGN   6652>>ASSIGN   6659>>ASSIGN   6671>>IF       6671>>IF
      6671>>IF       6677>>ASSIGN   6681>>IF       6681>>IF       6685>>ASSIGN   6690>>IF       6690>>IF
      6750>>ASSIGN   6819>>ASSIGN
OCS_CONVERTED
      6002**DCL      6363<<CALLBLT  6364>>IF       6371>>ASSIGN   6373>>ASSIGN   6375>>ASSIGN   6377>>ASSIGN
PL6.E3A0      #001=OCS$SYNTAX File=OCS$SYNTAX.:E05TSI                            WED 07/30/97 04:06 Page:156  
      6443<<ASSIGN   6445<<ASSIGN   6445>>ASSIGN   6448>>IF       6455>>ASSIGN   6457>>ASSIGN   6459>>ASSIGN
      6461>>ASSIGN   6468<<ASSIGN   6477<<ASSIGN   6477>>ASSIGN   6481<<ASSIGN   6481>>ASSIGN   6484>>IF
      6491>>ASSIGN   6493>>ASSIGN   6495>>ASSIGN   6497>>ASSIGN
OCS_CONVERTEDS
      6003**DCL      6417<<CALLBLT  6420>>IF       6420>>IF       6429>>ASSIGN   6431>>ASSIGN   6433>>ASSIGN
      6435>>ASSIGN
OCS_ERRCODE
      4945**DCL      6156<<ASSIGN   6881<<ASSIGN   6893<<ASSIGN
OCS_ERROR_ADDR
      4946**DCL      6155<<REMEMBR
OCS_FIRST_TIME
      4946**DCL      6149>>DOWHILE  6151<<ASSIGN
OCS_KSIZE
      4943**DCL      6154>>ASSIGN
OCS_LEXEMES.BYTES
      4949**DCL      6312>>ASSIGN
OCS_LEXEMES.CODE
      4950**DCL      6306>>DOWHILE
OCS_LEXEMES.CVSN
      4949**DCL      6313>>ASSIGN
OCS_LEXEMES.MAX
      4950**DCL      4950--REDEF    6364>>IF       6448>>IF       6484>>IF
OCS_LEXEMES.MAXS
      4950**DCL      6420>>IF
OCS_LEXEMES.MIN
      4950**DCL      4950--REDEF
OCS_LEXEMES.MINS
      4950**DCL      6420>>IF
OCS_LEXEMES.OFFSET
      4950**DCL      6314>>ASSIGN
OCS_NAME
      5977**DCL      6181<<ASSIGN   6262<<ASSIGN   6862>>DOWHILE
OCS_NAMES
      4944**DCL      6190<<ASSIGN   6262>>ASSIGN   6263>>IF       6265<<ASSIGN   6265>>ASSIGN   6735>>ASSIGN
      6737>>IF       6739<<ASSIGN   6739>>ASSIGN   6843>>IF       6847>>DOINDEX
OCS_NUMC
PL6.E3A0      #001=OCS$SYNTAX File=OCS$SYNTAX.:E05TSI                            WED 07/30/97 04:06 Page:157  
      5996**DCL      6000--IMP-SIZ  6393<<ASSIGN   6398<<ASSIGN   6399>>IF       6404>>CALLBLT  6413>>IF
      6417>>CALLBLT  6556<<ASSIGN   6557>>ASSIGN   6618<<ASSIGN   6619>>ASSIGN   6774<<ASSIGN   6776>>ASSIGN
      6872<<ASSIGN   6873>>ASSIGN
OCS_PARSED.NCODE
      6120**DCL      6185<<ASSIGN   6280<<ASSIGN   6300>>ASSIGN
OCS_PARSED.PTR$
      6119**DCL      6184<<ASSIGN   6276>>IF       6279<<ASSIGN   6304>>ASSIGN
OCS_SSIZE
      4943**DCL      6189<<ASSIGN   6880<<ASSIGN
OCS_STA
      4944**DCL      6180<<ASSIGN   6735<<ASSIGN   6849>>IF       6873<<ASSIGN
OCS_STRUCT$
      5968**DCL      6191<<ASSIGN   6335>>ASSIGN   6337>>ASSIGN   6339>>ASSIGN   6341>>ASSIGN   6343>>ASSIGN
      6345>>ASSIGN   6347>>ASSIGN   6357>>ASSIGN   6358>>ASSIGN   6358>>ASSIGN   6371>>ASSIGN   6373>>ASSIGN
      6375>>ASSIGN   6377>>ASSIGN   6429>>ASSIGN   6431>>ASSIGN   6433>>ASSIGN   6435>>ASSIGN   6455>>ASSIGN
      6457>>ASSIGN   6459>>ASSIGN   6461>>ASSIGN   6491>>ASSIGN   6493>>ASSIGN   6495>>ASSIGN   6497>>ASSIGN
      6507>>ASSIGN   6509>>ASSIGN   6511>>ASSIGN   6513>>ASSIGN   6515>>ASSIGN   6517>>ASSIGN   6519>>ASSIGN
      6529>>ASSIGN   6531>>ASSIGN   6533>>ASSIGN   6535>>ASSIGN   6557>>ASSIGN   6619>>ASSIGN   6626>>ASSIGN
      6636>>ASSIGN   6638>>ASSIGN   6644>>ASSIGN   6645>>ASSIGN   6652>>ASSIGN   6659>>ASSIGN   6668>>ASSIGN
      6677>>ASSIGN   6680>>ASSIGN   6685>>ASSIGN   6688>>ASSIGN   6694>>ASSIGN   6719>>ASSIGN   6720>>ASSIGN
      6750>>ASSIGN   6755>>ASSIGN   6796>>ASSIGN   6800>>ASSIGN   6804>>ASSIGN   6808>>ASSIGN   6819>>ASSIGN
      6825<<ASSIGN   6825>>ASSIGN   6826>>IF       6880>>ASSIGN
OCS_STRUCTURE
      4943**DCL      4943--REDEF    6191--ASSIGN   6826--IF       6880--ASSIGN
OCS_SUBLK$
      5966**DCL      6207<<ASSIGN   6216>>DOWHILE  6217>>ASSIGN   6218<<ASSIGN   6239>>ASSIGN   6262>>ASSIGN
      6279>>ASSIGN   6280>>ASSIGN   6284>>ASSIGN   6288>>ASSIGN   6859<<ASSIGN   6862>>DOWHILE  6866>>ASSIGN
      6867<<ASSIGN   6872>>ASSIGN   6873>>ASSIGN
OCS_SUBLKO$
      5967**DCL      6206<<ASSIGN   6217<<ASSIGN   6218>>ASSIGN   6272>>ASSIGN   6858<<ASSIGN   6859>>ASSIGN
      6866<<ASSIGN
OCS_VECTOR
      4946**DCL      6188<<ASSIGN   6288<<ASSIGN
OCS_WORKSPACE
      4951**DCL      3470--DCLINIT
OCS_XTAB1
PL6.E3A0      #001=OCS$SYNTAX File=OCS$SYNTAX.:E05TSI                            WED 07/30/97 04:06 Page:158  
      6009**DCL      6603>>CALLBLT
OC_CONSOLE.ATTR
      5689**DCL      5689--REDEF    6550>>IF       6632>>IF       6671>>IF       6671>>IF       6681>>IF
      6690>>IF
OC_CONSOLE.ATTRO
      5690**DCL      5690--REDEF    6632>>IF       6671>>IF       6681>>IF       6690>>IF
OC_CONSOLE.ATTR_INPUT
      5689**DCL      6644>>ASSIGN
OC_CONSOLE.ATTR_OUTPUT
      5690**DCL      6645>>ASSIGN
OC_CONSOLE.CID
      5688**DCL      5689--REDEF
OC_CONSOLE.LP_WSN
      5688**DCL      6819>>ASSIGN
OC_CONSOLE.MXPRIO
      5726**DCL      6626>>ASSIGN
OC_CONSOLE.NATLANG
      5693**DCL      6750>>ASSIGN
OC_CONSOLE.STATION
      5687**DCL      5687--REDEF    6542>>CALLBLT  6615>>ASSIGN   6659>>ASSIGN
OC_CONSOLE.TERM_NAME
      5688**DCL      6638>>ASSIGN   6685>>ASSIGN
OC_CONSOLE.WSN
      5688**DCL      6652>>ASSIGN   6677>>ASSIGN
OC_CONSOLE$
      5686**DCL      5687--IMP-PTR  6542>>CALLBLT  6550>>IF       6615>>ASSIGN   6626>>ASSIGN   6632>>IF
      6632>>IF       6638>>ASSIGN   6644>>ASSIGN   6645>>ASSIGN   6652>>ASSIGN   6659>>ASSIGN   6671>>IF
      6671>>IF       6671>>IF       6677>>ASSIGN   6681>>IF       6681>>IF       6685>>ASSIGN   6690>>IF
      6690>>IF       6750>>ASSIGN   6819>>ASSIGN
OC_DIR
      5729**DCL      5729--REDEF
OC_INTBIT
      5729**DCL      5730--REDEF
OC_INTMSG
      5606**DCL      5619--REDEF
OC_INTMSG.FLAGS
PL6.E3A0      #001=OCS$SYNTAX File=OCS$SYNTAX.:E05TSI                            WED 07/30/97 04:06 Page:159  
      5613**DCL      5614--REDEF
OC_INTMSG.MESS
      5619**DCL      5619--REDEF
OC_INTMSG.MSGID
      5609**DCL      5610--REDEF
OC_INTMSG.WSN
      5616**DCL      5617--REDEF
OC_KEYIN#
      5680**DCL      6162<<ASSIGN   6163>>IF
OC_KEYINBUF$
      5727**DCL      6153>>ASSIGN   6896<>CALL
OC_MASK
      5730**DCL      5730--REDEF
OC_MESSBUF
      5621**DCL      5636--REDEF    5650--REDEF
OC_MESSBUF.FLAGS
      5628**DCL      5629--REDEF
OC_MESSBUF.MESS
      5634**DCL      5634--REDEF
OC_MESSBUF.MSGID
      5624**DCL      5625--REDEF
OC_MESSBUF.WSN
      5631**DCL      5632--REDEF
OC_MESSBUF1.FLAGS
      5643**DCL      5644--REDEF
OC_MESSBUF1.LEN
      5649**DCL      5649--REDEF
OC_MESSBUF1.MSGID
      5639**DCL      5640--REDEF
OC_MESSBUF1.WSN
      5646**DCL      5647--REDEF
OC_MSGBUFFER
      5652**DCL      5667--REDEF
OC_MSGBUFFER.FLAGS
      5659**DCL      5660--REDEF
OC_MSGBUFFER.MESS
PL6.E3A0      #001=OCS$SYNTAX File=OCS$SYNTAX.:E05TSI                            WED 07/30/97 04:06 Page:160  
      5665**DCL      5665--REDEF
OC_MSGBUFFER.MSGID
      5655**DCL      5656--REDEF
OC_MSGBUFFER.WSN
      5662**DCL      5663--REDEF
OC_MSGBUFFER2.FLAGS
      5674**DCL      5675--REDEF
OC_MSGBUFFER2.MSGID
      5670**DCL      5671--REDEF
OC_MSGBUFFER2.WSN
      5677**DCL      5678--REDEF
OC_PARAM
      5685**DCL      5685--REDEF
OC_PCB
      3461**DCL      6160<>CALL
OC_PCB.ERROR.CODE
      3573**DCL      6890>>IF
OC_PCB.HI_CHAR
      3612**DCL      6895>>ASSIGN
OC_PCB.NCHARS
      3608**DCL      6154<<ASSIGN
OC_PCB.OUT$
      3474**DCL      6162>>ASSIGN   6199>>IF       6202>>ASSIGN   6207>>ASSIGN
OC_PCB.ROOT$
      3466**DCL      6150<<ASSIGN
OC_PCB.TEXT$
      3462**DCL      6153<<ASSIGN
OC_QUEUE.PARMC
      5684**DCL      5684--REDEF
OFFSET_
      5982**DCL      6314<<ASSIGN   6332>>DOCASE   6368>>DOCASE   6426>>DOCASE   6452>>DOCASE   6488>>DOCASE
      6504>>DOCASE   6526>>DOCASE
P$LIT.CODE
      3872**DCL      6862>>DOWHILE
P$LIT.COUNT
      3873**DCL      6872>>ASSIGN
PL6.E3A0      #001=OCS$SYNTAX File=OCS$SYNTAX.:E05TSI                            WED 07/30/97 04:06 Page:161  
P$LIT.TEXT
      3876**DCL      6873--ASSIGN
P$NODE.NSUBNDS
      3812**DCL      6853>>ASSIGN
P$NODE.SUBNDS$
      3820**DCL      6852>>ASSIGN   6858>>ASSIGN   6867>>ASSIGN
PLUS
      5994**DCL      6392>>CALLBLT
PTR$
      5975**DCL      6304<<ASSIGN   6327>>ASSIGN   6330<>CALL     6335>>ASSIGN   6335>>ASSIGN   6337>>ASSIGN
      6337>>ASSIGN   6339>>ASSIGN   6339>>ASSIGN   6341>>ASSIGN   6341>>ASSIGN   6343>>ASSIGN   6343>>ASSIGN
      6345>>ASSIGN   6345>>ASSIGN   6347>>ASSIGN   6347>>ASSIGN   6353>>ASSIGN   6357>>ASSIGN   6358>>ASSIGN
      6358>>ASSIGN   6363>>CALLBLT  6363>>CALLBLT  6366<>CALL     6389>>IF       6389>>IF       6392>>CALLBLT
      6392>>CALLBLT  6393>>ASSIGN   6397>>ASSIGN   6397>>ASSIGN   6398>>ASSIGN   6401<>CALL     6408<>CALL
      6415<>CALL     6424<>CALL     6442>>ASSIGN   6442>>ASSIGN   6444>>DOINDEX  6450<>CALL     6469>>ASSIGN
      6469>>ASSIGN   6470>>DOINDEX  6486<>CALL     6568>>IF       6568>>IF       6568>>IF       6580>>IF
      6589>>IF       6591<>CALL     6593>>CALL     6593>>CALL     6595<>CALL     6598>>ASSIGN   6598>>ASSIGN
      6603>>CALLBLT  6603>>CALLBLT  6611<>CALL     6705<<ASSIGN   6705>>ASSIGN   6708>>IF       6708>>IF
      6708>>IF       6712<>CALL     6714>>IF       6716<>CALL     6719>>ASSIGN   6719>>ASSIGN   6729>>ASSIGN
      6732<>CALL     6735>>ASSIGN   6735>>ASSIGN   6764>>ASSIGN   6770<>CALL     6776>>ASSIGN   6776>>ASSIGN
      6783<>CALL     6852<<ASSIGN   6853>>ASSIGN   6858>>ASSIGN   6867>>ASSIGN
SECC_STRING
      5999**DCL      6573--ASSIGN   6582--ASSIGN   6598--ASSIGN   6603--CALLBLT  6615--ASSIGN
SECOND$STRING
      6000**DCL      6417>>CALLBLT  6557>>ASSIGN   6619>>ASSIGN   6776<<ASSIGN   6873>>ASSIGN
SECOND_STRING
      5997**DCL      5859--DCLINIT  5998--REDEF    5999--REDEF    6392<<CALLBLT  6397<<ASSIGN   6404>>CALLBLT
      6413--IF       6417--CALLBLT  6442<<ASSIGN   6469<<ASSIGN   6542<<CALLBLT  6554<<CALLBLT  6557--ASSIGN
      6619--ASSIGN   6717<<ASSIGN   6720>>ASSIGN   6772<<ASSIGN   6776--ASSIGN
SEC_STRING
      5998**DCL      6445>>ASSIGN   6471>>IF       6474>>IF       6476<<ASSIGN   6476>>ASSIGN   6477>>ASSIGN
      6481>>ASSIGN   6607>>IF       6607>>IF
WHAT_NOW
      6779**LABEL    6779--CALLALT  6790--GOTO     6794--GOTO
X$PARSE
        44**DCL-ENT  6160--CALL

PL6.E3A0      #002=OCS$ERRORS File=OCS$SYNTAX.:E05TSI                            WED 07/30/97 04:07 Page:162  
     1069        1        /*M* OCS$ERRORS collects errors made during parse */
     1070        2        /*T***********************************************************/
     1071        3        /*T*                                                         */
     1072        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
     1073        5        /*T*                                                         */
     1074        6        /*T***********************************************************/
     1075        7        %SET LISTSUB='1'B;
     1076        8        /*
     1077        9          ###    ###    ###     #    #####  ####   ####    ###   ####    ###
     1078       10         # # #  #   #  #   #   ###   #      #   #  #   #  # # #  #   #  #   #
     1079       11         # # #  #      #      # #    #      #   #  #   #  # # #  #   #  #
     1080       12         #  ##  #       ###    ###   ####   ####   ####   #  ##  ####    ###
     1081       13         #   #  #          #    # #  #      # #    # #    #   #  # #        #
     1082       14         #   #  #   #  #   #   ###   #      #  #   #  #   #   #  #  #   #   #
     1083       15          ###    ###    ###     #    #####  #   #  #   #   ###   #   #   ###
     1084       16                                                                          */
     1085       17
     1086       18        OCS$ERRORS: PROC (PTR$, ERROR_CODE);
     1087       19                                                /**/
     1088       20    1   DCL PTR$ PTR;
     1089       21    1   DCL ERROR_CODE UBIN WORD;
     1090       22                                                /**/
     1091       23    1   DCL OCS$ANLZ ENTRY(2);
     1092       24                                                /**/
     1093       25
     1094       26        %INCLUDE OCS_SUBS_C;
     1095      243        %INCLUDE OCS_DATA_R;
     1096      260
     1097      261                                                /**/
     1098      262    1   OCS$UNEXP: ENTRY (PTR$, ERROR_CODE);
     1099      263                                                /**/
     1100      264    1        OCS_ERRCODE = 1 /* OCS_UNEXPEC# */;
     1101      265                                                /**/
     1102      266    1        CALL OCS$ANLZ (PTR$, ERROR_CODE);
     1103      267                                                /**/
     1104      268    1        UNWIND TO OCS_ERROR_ADDR;
     1105      269                                                /**/
PL6.E3A0      #002=OCS$ERRORS File=OCS$SYNTAX.:E05TSI                            WED 07/30/97 04:07 Page:163  
     1106      270                                                /**/
     1107      271    1   OCS$CHKINP: ENTRY;
     1108      272                                                /**/
     1109      273    1        OCS_ERRCODE = 2 /* OCS_ILLEGAL# */;
     1110      274                                                /**/
     1111      275    1        CALL OCS$ANLZ (ADDR(NIL), 5 /*E#UNEVAL*/);
     1112      276                                                /**/
     1113      277    1        UNWIND TO OCS_ERROR_ADDR;
     1114      278                                                /**/
     1115      279    1   END OCS$ERRORS;
     1116      280        %EOD;

PL6.E3A0      #002=OCS$ERRORS File=OCS$SYNTAX.:E05TSI                            WED 07/30/97 04:07 Page:164  
--  Include file information  --

   OCS_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   OCS_SUBS_C.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure OCS$ERRORS.

   Procedure OCS$ERRORS requires 31 words for executable code.
   Procedure OCS$ERRORS requires 10 words of local(AUTO) storage.

PL6.E3A0      #002=OCS$ERRORS File=OCS$SYNTAX.:E05TSI                            WED 07/30/97 04:07 Page:165  

 Object Unit name= OCS$ERRORS                                 File name= OCS$SYNTAX.:E05TOU
 UTS= JUL 30 '97 04:07:33.64 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Proc  even  none    31     37  OCS$ERRORS
    1  RoData even  none     1      1  OCS$ERRORS

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     0      0   yes            yes      Std        2  OCS$ERRORS
     0      3                  yes      Std        2  OCS$UNEXP
     0     16                  yes      Std        0  OCS$CHKINP

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       2 OCS$ANLZ
                       nStd      0 X66_AUTO_2
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_AUNWIND

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     OCS_STRUCTURE                         OCS_ERRCODE                           OCS_ERROR_ADDR
     B_VECTNIL
PL6.E3A0      #002=OCS$ERRORS File=OCS$SYNTAX.:E05TSI                            WED 07/30/97 04:07 Page:166  

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
PL6.E3A0      #002=OCS$ERRORS File=OCS$SYNTAX.:E05TSI                            WED 07/30/97 04:07 Page:167  


     1069        1        /*M* OCS$ERRORS collects errors made during parse */
     1070        2        /*T***********************************************************/
     1071        3        /*T*                                                         */
     1072        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
     1073        5        /*T*                                                         */
     1074        6        /*T***********************************************************/
     1075        7        %SET LISTSUB='1'B;
     1076        8        /*
     1077        9          ###    ###    ###     #    #####  ####   ####    ###   ####    ###
     1078       10         # # #  #   #  #   #   ###   #      #   #  #   #  # # #  #   #  #   #
     1079       11         # # #  #      #      # #    #      #   #  #   #  # # #  #   #  #
     1080       12         #  ##  #       ###    ###   ####   ####   ####   #  ##  ####    ###
     1081       13         #   #  #          #    # #  #      # #    # #    #   #  # #        #
     1082       14         #   #  #   #  #   #   ###   #      #  #   #  #   #   #  #  #   #   #
     1083       15          ###    ###    ###     #    #####  #   #  #   #   ###   #   #   ###
     1084       16                                                                          */
     1085       17
     1086       18        OCS$ERRORS: PROC (PTR$, ERROR_CODE);

     18  0 000000   000000 700200 xent  OCS$ERRORS   TSX0  ! X66_AUTO_2
         0 000001   000012 000002                    ZERO    10,2
         0 000002   000005 710000 0                  TRA     s:264

     1087       19                                                /**/
     1088       20    1   DCL PTR$ PTR;
     1089       21    1   DCL ERROR_CODE UBIN WORD;
     1090       22                                                /**/
     1091       23    1   DCL OCS$ANLZ ENTRY(2);
     1092       24                                                /**/
     1093       25
     1094       26        %INCLUDE OCS_SUBS_C;
     1095      243        %INCLUDE OCS_DATA_R;
     1096      260
     1097      261                                                /**/
     1098      262    1   OCS$UNEXP: ENTRY (PTR$, ERROR_CODE);

PL6.E3A0      #002=OCS$ERRORS File=OCS$SYNTAX.:E05TSI                            WED 07/30/97 04:07 Page:168  
    262  0 000003   000000 700200 xent  OCS$UNEXP    TSX0  ! X66_AUTO_2
         0 000004   000012 000002                    ZERO    10,2

     1099      263                                                /**/
     1100      264    1        OCS_ERRCODE = 1 /* OCS_UNEXPEC# */;

    264  0 000005   000001 235007                    LDA     1,DL
         0 000006   000000 755000 xsym               STA     OCS_ERRCODE

     1101      265                                                /**/
     1102      266    1        CALL OCS$ANLZ (PTR$, ERROR_CODE);

    266  0 000007   200003 630500                    EPPR0   @PTR$,,AUTO
         0 000010   000020 631400 xsym               EPPR1   B_VECTNIL+16
         0 000011   000000 701000 xent               TSX1    OCS$ANLZ
         0 000012   000000 011000                    NOP     0

     1103      267                                                /**/
     1104      268    1        UNWIND TO OCS_ERROR_ADDR;

    268  0 000013   000000 237200 xsym               LDAQ  ! OCS_ERROR_ADDR
         0 000014   000000 700200 xent               TSX0  ! X66_AUNWIND
         0 000015   000000 000200                    ZERO    0,128

     1105      269                                                /**/
     1106      270                                                /**/
     1107      271    1   OCS$CHKINP: ENTRY;

    271  0 000016   000000 700200 xent  OCS$CHKINP   TSX0  ! X66_AUTO_2
         0 000017   000012 000002                    ZERO    10,2

     1108      272                                                /**/
     1109      273    1        OCS_ERRCODE = 2 /* OCS_ILLEGAL# */;

    273  0 000020   000002 235007                    LDA     2,DL
         0 000021   000000 755000 xsym               STA     OCS_ERRCODE

PL6.E3A0      #002=OCS$ERRORS File=OCS$SYNTAX.:E05TSI                            WED 07/30/97 04:07 Page:169  
     1110      274                                                /**/
     1111      275    1        CALL OCS$ANLZ (ADDR(NIL), 5 /*E#UNEVAL*/);

    275  0 000022   000001 236000 xsym               LDQ     B_VECTNIL+1
         0 000023   200006 756100                    STQ     @ERROR_CODE+2,,AUTO
         0 000024   000000 236000 1                  LDQ     0
         0 000025   200011 756100                    STQ     @ERROR_CODE+5,,AUTO
         0 000026   200006 630500                    EPPR0   @ERROR_CODE+2,,AUTO
         0 000027   200010 450500                    STP0    @ERROR_CODE+4,,AUTO
         0 000030   200010 630500                    EPPR0   @ERROR_CODE+4,,AUTO
         0 000031   000020 631400 xsym               EPPR1   B_VECTNIL+16
         0 000032   000000 701000 xent               TSX1    OCS$ANLZ
         0 000033   000000 011000                    NOP     0

     1112      276                                                /**/
     1113      277    1        UNWIND TO OCS_ERROR_ADDR;

    277  0 000034   000000 237200 xsym               LDAQ  ! OCS_ERROR_ADDR
         0 000035   000000 700200 xent               TSX0  ! X66_AUNWIND
         0 000036   000000 000200                    ZERO    0,128
     1114      278                                                /**/
     1115      279    1   END OCS$ERRORS;
     1116      280        %EOD;

PL6.E3A0      #002=OCS$ERRORS File=OCS$SYNTAX.:E05TSI                            WED 07/30/97 04:07 Page:170  
--  Include file information  --

   OCS_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   OCS_SUBS_C.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure OCS$ERRORS.
PL6.E3A0      #002=OCS$ERRORS File=OCS$SYNTAX.:E05TSI                            WED 07/30/97 04:07 Page:171  

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     4-0-0/w PTR         r     1 @ERROR_CODE                3-0-0/w PTR         r     1 @PTR$
    *0-0-0/w UBIN        r     1 ERROR_CODE                *0-0-0/w PTR         r     1 PTR$

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w UBIN        r     1 OCS_ERRCODE                0-0-0/d REMB        r     1 OCS_ERROR_ADDR


   Procedure OCS$ERRORS requires 31 words for executable code.
   Procedure OCS$ERRORS requires 10 words of local(AUTO) storage.
PL6.E3A0      #002=OCS$ERRORS File=OCS$SYNTAX.:E05TSI                            WED 07/30/97 04:07 Page:172  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #002=OCS$ERRORS File=OCS$SYNTAX.:E05TSI                            WED 07/30/97 04:07 Page:173  
          MINI XREF LISTING

ERROR_CODE
        21**DCL        18--PROC      262--ENTRY     266<>CALL
OCS$ANLZ
        23**DCL-ENT   266--CALL      275--CALL
OCS_ERRCODE
       253**DCL       264<<ASSIGN    273<<ASSIGN
OCS_ERROR_ADDR
       254**DCL       268>>UNWIND    277>>UNWIND
OCS_LEXEMES.MAX
       258**DCL       258--REDEF
OCS_LEXEMES.MIN
       258**DCL       258--REDEF
OCS_STRUCTURE
       251**DCL       251--REDEF
PTR$
        20**DCL        18--PROC      262--ENTRY     266<>CALL

PL6.E3A0      #003=OCS$ANLZ File=OCS$SYNTAX.:E05TSI                              WED 07/30/97 04:07 Page:174  
     1117        1        /*M* OCS$ANLZ KEYINs procedure to find human errors in keyins */
     1118        2        /*T***********************************************************/
     1119        3        /*T*                                                         */
     1120        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
     1121        5        /*T*                                                         */
     1122        6        /*T***********************************************************/
     1123        7        %SET LISTSUB='1'B;
     1124        8        /*
     1125        9          ###    ###    ###     #     ###   #   #  #      #####
     1126       10         # # #  #   #  #   #   ###   #   #  #   #  #          #
     1127       11         # # #  #      #      # #    #   #  ##  #  #         #
     1128       12         #  ##  #       ###    ###   #####  # # #  #        #
     1129       13         #   #  #          #    # #  #   #  #  ##  #       #
     1130       14         #   #  #   #  #   #   ###   #   #  #   #  #      #
     1131       15          ###    ###    ###     #    #   #  #   #  #####  #####
     1132       16                                                                           */
     1133       17                                                /**/
     1134       18                                                /**/
     1135       19        OCS$ANLZ: PROC (PTR$, ERROR_CODE);
     1136       20                                                /**/
     1137       21    1   DCL PTR$ PTR;
     1138       22    1   DCL ERROR_CODE UBIN WORD;
     1139       23    1   DCL PCB_HI_CHAR REDEF ERROR_CODE UBIN WORD;
     1140       24                                                /**/
     1141       25        %INCLUDE OCS_SUBS_C;
     1142      242                                                /**/
     1143      243        %INCLUDE OCS_DATA_R;
     1144      260                                                /**/
     1145      261    1   DCL 1 TEXTC BASED,
     1146      262    1            2 COUNT UBIN BYTE UNAL,
     1147      263    1            2 TEXT CHAR(TEXTC.COUNT) UNAL;
     1148      264    1   DCL OCS$T1 BASED CHAR(1) CALIGNED;
     1149      265    1   DCL OCS$TN BASED CHAR(SIZEC_TEXT) CALIGNED;
     1150      266                                                /**/
     1151      267                                                /**/
     1152      268    1   DCL SIZEC_TEXT UBIN WORD STATIC;
     1153      269    1   DCL START$ PTR STATIC;
PL6.E3A0      #003=OCS$ANLZ File=OCS$SYNTAX.:E05TSI                              WED 07/30/97 04:07 Page:175  
     1154      270    1   DCL END$ PTR STATIC;
     1155      271    1   DCL HERE$ PTR STATIC;
     1156      272    1   DCL I SBIN WORD STATIC;
     1157      273    1   DCL I_UBIN REDEF I UBIN WORD;
     1158      274    1   DCL J SBIN WORD STATIC;
     1159      275                                                /**/
     1160      276        %EJECT;
PL6.E3A0      #003=OCS$ANLZ File=OCS$SYNTAX.:E05TSI                              WED 07/30/97 04:07 Page:176  
     1161      277        /*
     1162      278                  Internal routine PUTITIN
     1163      279                                                */
     1164      280    1   PUTITIN: PROC( SSTART$, SEND$, FLAG);
     1165      281                                                /**/
     1166      282    2   DCL SSTART$ PTR;
     1167      283    2   DCL SEND$ PTR;
     1168      284    2   DCL LPTR$ PTR;
     1169      285    2   DCL FLAG BIT(1) ALIGNED;                /* IF ON, RIGHT JUSTIFY */
     1170      286                                                /**/
     1171      287    2        SIZEC_TEXT = POFFC (SEND$, SSTART$) + 1;
     1172      288    2        LPTR$ = SSTART$;
     1173      289                                                /**/
     1174      290    2        IF SIZEC_TEXT > SIZEC(OCS_ERRMSGB.TEXT_STRING)
     1175      291    2        THEN
     1176      292    3        DO;
     1177      293    3             SIZEC_TEXT = SIZEC(OCS_ERRMSGB.TEXT_STRING);
     1178      294    3             IF FLAG
     1179      295    3             THEN
     1180      296    3                  LPTR$ = PINCRC(SEND$, -SIZEC(OCS_ERRMSGB.TEXT_STRING));
     1181      297                                                /**/
     1182      298    3             CALL INSERT (OCS_ERRMSGB.TEXT_STRING, 0,
     1183      299    3                  SIZEC(OCS_ERRMSGB.TEXT_STRING),
     1184      300    3                  LPTR$ -> OCS$TN);
     1185      301    3           END;                            /* DO IF OVERFLOW */
     1186      302    2        ELSE
     1187      303    3        DO;
     1188      304    3             CALL INSERT (OCS_ERRMSGB.TEXT_STRING, 0,
     1189      305    3                  SIZEC_TEXT, LPTR$ -> OCS$TN);
     1190      306    3           END;                            /* DO IF NOT OVERFLOW */
     1191      307    2        OCS_ERRMSGC.SIZE_TEXT = SIZEC_TEXT;
     1192      308                                                /**/
     1193      309                                                /**/
     1194      310    2   END PUTITIN;
     1195      311        %EJECT;
PL6.E3A0      #003=OCS$ANLZ File=OCS$SYNTAX.:E05TSI                              WED 07/30/97 04:07 Page:177  
     1196      312        /*
     1197      313                  Begin  O C S $ A N L Z   main
     1198      314                                                                          */
     1199      315                                                /**/
     1200      316                                                /**/
     1201      317    1        IF OCS_ERRCODE ~= 3 /* OCS_ERRORS#  */
     1202      318    1        THEN
     1203      319    2        DO;
     1204      320    2             OCS_ERRMSGB.TYPE = OCS_ERRCODE;
     1205      321    2             OCS_ERRMSGB.SYNERR_AT = 0;
     1206      322    2             OCS_ERRMSGB.MSG_SELECT = ERROR_CODE;
     1207      323    2             IF OCS_ERRCODE = 2 /* OCS_ILLEGAL# */
     1208      324    2             THEN
     1209      325    3             DO;
     1210      326    3                  OCS_ERRMSGB.MSG_SELECT = 0;
     1211      327    3                  OCS_ERRMSGC.SIZE_TEXT = 1;
     1212      328    3                  OCS_ERRMSGB.TEXT_STRING = ' ';
     1213      329    3                END;                       /* DO IF CHKINP */
     1214      330    2             ELSE
     1215      331    3             DO;
     1216      332    3                  OCS_ERRMSGB.MSG_SELECT = ERROR_CODE;
     1217      333    3                  IF PTR$ -> TEXTC.COUNT > SIZEC(OCS_ERRMSGB.TEXT_STRING)
     1218      334    3                  THEN
     1219      335    4                  DO;
     1220      336    4                       OCS_ERRMSGC.SIZE_TEXT = SIZEC(OCS_ERRMSGB.TEXT_STRING);
     1221      337    4                       OCS_ERRMSGB.TEXT_STRING = PTR$ -> TEXTC.TEXT;
     1222      338    4                     END;                  /* DO IF OVER FLOW */
     1223      339    3                  ELSE
     1224      340    4                  DO;
     1225      341    4                       OCS_ERRMSGC.SIZE_TEXT = PTR$ -> TEXTC.COUNT;
     1226      342    4                       OCS_ERRMSGB.TEXT_STRING = PTR$ -> TEXTC.TEXT;
     1227      343    4                     END;                  /* DO IF NO OVER FLOW */
     1228      344    3                END;                       /* DO IF NOT BAD NODES */
     1229      345    2             RETURN;                       /* If not syntax error, return */
     1230      346    2           END;                            /* DO IF not syntax error */
     1231      347                                                /**/
     1232      348                                                /**/
PL6.E3A0      #003=OCS$ANLZ File=OCS$SYNTAX.:E05TSI                              WED 07/30/97 04:07 Page:178  
     1233      349        %EJECT;
PL6.E3A0      #003=OCS$ANLZ File=OCS$SYNTAX.:E05TSI                              WED 07/30/97 04:07 Page:179  
     1234      350                                           /* Process the X$PARSE syntax error
     1235      351                                                in some kind of general manner
     1236      352                                                here....the following "rules"
     1237      353                                                were determined by trial and
     1238      354                                                error:
     1239      355                                           1) PCB.HICHAR > INBUFFER
     1240      356                                                Something is missing after the
     1241      357                                                last character input.  It's
     1242      358                                                ok till there.
     1243      359                                           2) PCB.HICHAR = 0 or PCB.HICHAR
     1244      360                                                = first non_prompt character
     1245      361                                                (like space or !)
     1246      362                                                indicates, in general, that
     1247      363                                                the command is illegal, i.e.
     1248      364                                                the keyword or command word
     1249      365                                                was not recognized.
     1250      366                                           3) PCB.HICHAR ~= 0 but no delimiter
     1251      367                                                between HICHAR and start of
     1252      368                                                line.
     1253      369                                                This usually indicates that
     1254      370                                                the command was legal until
     1255      371                                                HICHAR. After that, no dice.
     1256      372                                           4) PCB.HICHAR ~= 0 and a delimiter
     1257      373                                                is at HICHAR or HICHAR - 1.
     1258      374                                                Indicates illegal value start-
     1259      375                                                ing at the indicated character
     1260      376                                                (sometimes implies incorrect
     1261      377                                                field, such as non-numeric
     1262      378                                                when numeric expected, etc.)
     1263      379                                           5) PCB.HICHAR ~= 0 and a delimiter
     1264      380                                                is not at HICHAR - 1.
     1265      381                                                I dunno. I couldn't produce it
     1266      382                                                                          */
     1267      383    1        IF PCB_HI_CHAR >= OCS_KSIZE  /* HI_CHAR is zero_based;
     1268      384                                                KSIZE is 1_based */
     1269      385    1        THEN
     1270      386    2        DO;
PL6.E3A0      #003=OCS$ANLZ File=OCS$SYNTAX.:E05TSI                              WED 07/30/97 04:07 Page:180  
     1271      387    2             OCS_ERRMSGB.TYPE = OCS_ERRCODE;
     1272      388    2             OCS_ERRMSGB.SYNERR_AT = PCB_HI_CHAR;
     1273      389    2             OCS_ERRMSGB.MSG_SELECT = 3 /*E#SMISNG*/;
     1274      390                                                /**/
     1275      391    2             HERE$ = PINCRC (PTR$, (PCB_HI_CHAR - 1));
     1276      392    2             END$ = HERE$;
     1277      393                                                /**/
     1278      394    3             DO WHILE ((HERE$ > PTR$) AND (HERE$ -> OCS$T1 ~= ' '));
     1279      395    3                  HERE$ = PINCRC (HERE$, -1);
     1280      396    3                END;                       /* DO WHILE HERE$ NOT RIGHT */
     1281      397                                                /**/
     1282      398    2             IF HERE$ -> OCS$T1 = ' '
     1283      399    2             THEN
     1284      400    2                  HERE$ = PINCRC(HERE$,1);
     1285      401                                                /**/
     1286      402    2             CALL PUTITIN(HERE$,END$,'1'B);
     1287      403    2             RETURN;
     1288      404    2           END;                            /* DO IF E#SMISNG */
     1289      405                                                /**/
     1290      406                                                /**/
     1291      407        %EJECT;
PL6.E3A0      #003=OCS$ANLZ File=OCS$SYNTAX.:E05TSI                              WED 07/30/97 04:07 Page:181  
     1292      408                                           /* Here we check to see if
     1293      409                                                "Illegal command" by virtue
     1294      410                                                of the fact that the parser
     1295      411                                                choked on the first character
     1296      412                                                that was "legal".  Legal means
     1297      413                                                that maybe there was a series
     1298      414                                                of spaces or bangs before it
     1299      415                                                which may or may not be legal
     1300      416                                                This is checked for       */
     1301      417    1        START$ = PTR$;
     1302      418    1        END$ = PINCRC(START$,OCS_KSIZE - 1);
     1303      419                                                /**/
     1304      420    2        DO I = 0 TO OCS_KSIZE - 1;
     1305      421    2             IF I_UBIN >= PCB_HI_CHAR
     1306      422    2             THEN
     1307      423    2                  I = OCS_KSIZE;
     1308      424    2             ELSE
     1309      425    2                  IF START$ -> OCS$T1 ~= ' '
     1310      426    2                       AND
     1311      427    2                       START$ -> OCS$T1 ~= '!'
     1312      428    2                  THEN
     1313      429    2                       I = OCS_KSIZE;
     1314      430    2                  ELSE
     1315      431    2                       START$ = PINCRC(START$,1);
     1316      432    2           END;                            /* DO I = 0 TO END_OF_BUF */
     1317      433                                                /**/
     1318      434                                                /**/
     1319      435    1        IF PCB_HI_CHAR = 0
     1320      436    1             OR
     1321      437    1             START$ >= PINCRC(PTR$, PCB_HI_CHAR)
     1322      438    1        THEN
     1323      439    2        DO;
     1324      440    2             HERE$ = START$;
     1325      441    3             DO WHILE ((HERE$ -> OCS$T1 ~=' ')
     1326      442    3                  AND
     1327      443    3                  (HERE$ < END$));
     1328      444    3                  HERE$ = PINCRC(HERE$,1);
PL6.E3A0      #003=OCS$ANLZ File=OCS$SYNTAX.:E05TSI                              WED 07/30/97 04:07 Page:182  
     1329      445    3                END;                       /* DO WHILE MORE IN STRING */
     1330      446    2             IF START$ > PINCRC (PTR$, PCB_HI_CHAR)
     1331      447    2             THEN
     1332      448    2                  START$ = PINCRC(PTR$, PCB_HI_CHAR);
     1333      449    2             IF HERE$ > END$
     1334      450    2             THEN
     1335      451    2                  HERE$ = END$;
     1336      452    2             IF HERE$ -> OCS$T1 = ' '
     1337      453    2             THEN
     1338      454    2                  HERE$ = PINCRC(HERE$, -1);
     1339      455    2             CALL PUTITIN( START$, HERE$, '0'B);
     1340      456    2             OCS_ERRMSGB.TYPE = OCS_ERRCODE;
     1341      457    2             OCS_ERRMSGB.SYNERR_AT = PCB_HI_CHAR;
     1342      458    2             OCS_ERRMSGB.MSG_SELECT = 1 /*E#NOTCMD*/;
     1343      459    2             RETURN;                       /* TO PRINT MESSAGE */
     1344      460    2           END;                            /* DO IF BAD COMMAND */
     1345      461                                                /**/
     1346      462        %EJECT;
PL6.E3A0      #003=OCS$ANLZ File=OCS$SYNTAX.:E05TSI                              WED 07/30/97 04:07 Page:183  
     1347      463                                           /* Here we check for "bad command"
     1348      464                                                but this time it could be bad
     1349      465                                                because the first few characters
     1350      466                                                "n" werent....attempt to detect
     1351      467                                                this by trying to find a space
     1352      468                                                somewhere before HI_CHAR
     1353      469                                                If START$ is found before a
     1354      470                                                space, frame START$ to END$
     1355      471                                                and complain */
     1356      472    1        HERE$ = PINCRC(PTR$, PCB_HI_CHAR);
     1357      473                                                /**/
     1358      474    2        DO WHILE (( HERE$ -> OCS$T1 = ' ')
     1359      475    2             AND
     1360      476    2             (HERE$ < END$));
     1361      477    2             HERE$ = PINCRC (HERE$, 1);
     1362      478    2           END;                            /* DO WHILE BLANKS */
     1363      479                                                /**/
     1364      480                                                /**/
     1365      481    2        DO WHILE ((HERE$ -> OCS$T1 ~= ' ')
     1366      482    2             AND
     1367      483    2             (HERE$ < END$));
     1368      484    2             HERE$ = PINCRC (HERE$, 1);
     1369      485    2           END;                            /* DO WHILE */
     1370      486                                                /**/
     1371      487    1        IF HERE$ -> OCS$T1 = ' '
     1372      488    1        THEN
     1373      489    1             HERE$ = PINCRC(HERE$, -1);
     1374      490                                                /**/
     1375      491    1        END$ = HERE$;
     1376      492                                                /**/
     1377      493    1        HERE$ = PINCRC (PTR$, PCB_HI_CHAR);
     1378      494                                                /**/
     1379      495    2        DO WHILE ((PINCRC(HERE$,-1) -> OCS$T1 ~=' ')
     1380      496    2             AND
     1381      497    2             (HERE$ > START$));
     1382      498    2             HERE$ = PINCRC (HERE$, -1);
     1383      499    2           END;                            /* DO WHILE */
PL6.E3A0      #003=OCS$ANLZ File=OCS$SYNTAX.:E05TSI                              WED 07/30/97 04:07 Page:184  
     1384      500                                                /**/
     1385      501    1        IF HERE$ = START$
     1386      502    1        THEN
     1387      503    2        DO;
     1388      504    2             CALL PUTITIN(START$, END$, '0'B);
     1389      505    2             OCS_ERRMSGB.TYPE = OCS_ERRCODE;
     1390      506    2             OCS_ERRMSGB.SYNERR_AT = PCB_HI_CHAR;
     1391      507    2             OCS_ERRMSGB.MSG_SELECT = 1 /*E#NOTCMD*/;
     1392      508    2             RETURN;                       /* TO PRINT MESSAGE */
     1393      509    2           END;                            /* DO IF BAD COMMAND */
     1394      510                                                /**/
     1395      511                                                /**/
     1396      512        %EJECT;
PL6.E3A0      #003=OCS$ANLZ File=OCS$SYNTAX.:E05TSI                              WED 07/30/97 04:07 Page:185  
     1397      513    1        IF PINCRC(HERE$, -1) -> OCS$T1 = ' '
     1398      514    1        THEN
     1399      515    2        DO;
     1400      516    2             CALL PUTITIN (HERE$, END$, '0'B);
     1401      517    2             OCS_ERRMSGB.TYPE = OCS_ERRCODE;
     1402      518    2             OCS_ERRMSGB.SYNERR_AT = PCB_HI_CHAR;
     1403      519    2             OCS_ERRMSGB.MSG_SELECT = 2 /*E#NOTLGL*/;
     1404      520    2             RETURN;                       /* TO PRINT MESSAGE */
     1405      521    2           END;                            /* DO IF BAD COMMAND */
     1406      522                                                /**/
     1407      523                                                /**/
     1408      524    1        OCS_ERRMSGB.TYPE = OCS_ERRCODE;
     1409      525    1        OCS_ERRMSGB.SYNERR_AT = PCB_HI_CHAR;
     1410      526    1        OCS_ERRMSGB.MSG_SELECT = 5 /*E#UNEVAL*/;
     1411      527    1        RETURN;                            /* TO PRINT MESSAGE */
     1412      528                                                /**/
     1413      529    1   END OCS$ANLZ;
     1414      530        %EOD;

PL6.E3A0      #003=OCS$ANLZ File=OCS$SYNTAX.:E05TSI                              WED 07/30/97 04:07 Page:186  
--  Include file information  --

   OCS_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   OCS_SUBS_C.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure OCS$ANLZ.

   Procedure OCS$ANLZ requires 360 words for executable code.
   Procedure OCS$ANLZ requires 14 words of local(AUTO) storage.

PL6.E3A0      #003=OCS$ANLZ File=OCS$SYNTAX.:E05TSI                              WED 07/30/97 04:07 Page:187  

 Object Unit name= OCS$ANLZ                                   File name= OCS$SYNTAX.:E05TOU
 UTS= JUL 30 '97 04:07:37.76 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Data  even  none     6      6  OCS$ANLZ
    1   Proc  even  none   360    550  OCS$ANLZ
    2  RoData even  none    10     12  OCS$ANLZ

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     1      0   yes            yes      Std        2  OCS$ANLZ

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
                       nStd      0 X66_AUTO_2
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     OCS_STRUCTURE                         OCS_KSIZE                             OCS_ERRCODE
     OCS_ERRMSGC                           OCS_ERRMSGB                           B_VECTNIL
PL6.E3A0      #003=OCS$ANLZ File=OCS$SYNTAX.:E05TSI                              WED 07/30/97 04:07 Page:188  

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
PL6.E3A0      #003=OCS$ANLZ File=OCS$SYNTAX.:E05TSI                              WED 07/30/97 04:07 Page:189  


     1117        1        /*M* OCS$ANLZ KEYINs procedure to find human errors in keyins */
     1118        2        /*T***********************************************************/
     1119        3        /*T*                                                         */
     1120        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
     1121        5        /*T*                                                         */
     1122        6        /*T***********************************************************/
     1123        7        %SET LISTSUB='1'B;
     1124        8        /*
     1125        9          ###    ###    ###     #     ###   #   #  #      #####
     1126       10         # # #  #   #  #   #   ###   #   #  #   #  #          #
     1127       11         # # #  #      #      # #    #   #  ##  #  #         #
     1128       12         #  ##  #       ###    ###   #####  # # #  #        #
     1129       13         #   #  #          #    # #  #   #  #  ##  #       #
     1130       14         #   #  #   #  #   #   ###   #   #  #   #  #      #
     1131       15          ###    ###    ###     #    #   #  #   #  #####  #####
     1132       16                                                                           */
     1133       17                                                /**/
     1134       18                                                /**/
     1135       19        OCS$ANLZ: PROC (PTR$, ERROR_CODE);

     19  1 000000   000000 700200 xent  OCS$ANLZ     TSX0  ! X66_AUTO_2
         1 000001   000016 000002                    ZERO    14,2
         1 000002   000052 710000 1                  TRA     s:317

     1136       20                                                /**/
     1137       21    1   DCL PTR$ PTR;
     1138       22    1   DCL ERROR_CODE UBIN WORD;
     1139       23    1   DCL PCB_HI_CHAR REDEF ERROR_CODE UBIN WORD;
     1140       24                                                /**/
     1141       25        %INCLUDE OCS_SUBS_C;
     1142      242                                                /**/
     1143      243        %INCLUDE OCS_DATA_R;
     1144      260                                                /**/
     1145      261    1   DCL 1 TEXTC BASED,
     1146      262    1            2 COUNT UBIN BYTE UNAL,
     1147      263    1            2 TEXT CHAR(TEXTC.COUNT) UNAL;
PL6.E3A0      #003=OCS$ANLZ File=OCS$SYNTAX.:E05TSI                              WED 07/30/97 04:07 Page:190  
     1148      264    1   DCL OCS$T1 BASED CHAR(1) CALIGNED;
     1149      265    1   DCL OCS$TN BASED CHAR(SIZEC_TEXT) CALIGNED;
     1150      266                                                /**/
     1151      267                                                /**/
     1152      268    1   DCL SIZEC_TEXT UBIN WORD STATIC;
     1153      269    1   DCL START$ PTR STATIC;
     1154      270    1   DCL END$ PTR STATIC;
     1155      271    1   DCL HERE$ PTR STATIC;
     1156      272    1   DCL I SBIN WORD STATIC;
     1157      273    1   DCL I_UBIN REDEF I UBIN WORD;
     1158      274    1   DCL J SBIN WORD STATIC;
     1159      275                                                /**/
     1160      276        %EJECT;
PL6.E3A0      #003=OCS$ANLZ File=OCS$SYNTAX.:E05TSI                              WED 07/30/97 04:07 Page:191  
     1161      277        /*
     1162      278                  Internal routine PUTITIN
     1163      279                                                */
     1164      280    1   PUTITIN: PROC( SSTART$, SEND$, FLAG);

    280  1 000003   200006 741300       PUTITIN      STX1  ! @ERROR_CODE+2,,AUTO

     1165      281                                                /**/
     1166      282    2   DCL SSTART$ PTR;
     1167      283    2   DCL SEND$ PTR;
     1168      284    2   DCL LPTR$ PTR;
     1169      285    2   DCL FLAG BIT(1) ALIGNED;                /* IF ON, RIGHT JUSTIFY */
     1170      286                                                /**/
     1171      287    2        SIZEC_TEXT = POFFC (SEND$, SSTART$) + 1;

    287  1 000004   200007 470500                    LDP0    @SSTART$,,AUTO
         1 000005   000000 236100                    LDQ     0,,PR0
         1 000006   000020 772000                    QRL     16
         1 000007   200014 756100                    STQ     LPTR$+2,,AUTO
         1 000010   200010 471500                    LDP1    @SEND$,,AUTO
         1 000011   100000 236100                    LDQ     0,,PR1
         1 000012   000020 772000                    QRL     16
         1 000013   200014 136100                    SBLQ    LPTR$+2,,AUTO
         1 000014   000001 036007                    ADLQ    1,DL
         1 000015   000000 756000 0                  STQ     SIZEC_TEXT

     1172      288    2        LPTR$ = SSTART$;

    288  1 000016   000000 236100                    LDQ     0,,PR0
         1 000017   200012 756100                    STQ     LPTR$,,AUTO

     1173      289                                                /**/
     1174      290    2        IF SIZEC_TEXT > SIZEC(OCS_ERRMSGB.TEXT_STRING)

    290  1 000020   000000 235000 0                  LDA     SIZEC_TEXT
         1 000021   000121 115007                    CMPA    81,DL
         1 000022   000041 602000 1                  TNC     s:304
PL6.E3A0      #003=OCS$ANLZ File=OCS$SYNTAX.:E05TSI                              WED 07/30/97 04:07 Page:192  

     1175      291    2        THEN
     1176      292    3        DO;

     1177      293    3             SIZEC_TEXT = SIZEC(OCS_ERRMSGB.TEXT_STRING);

    293  1 000023   000120 235007                    LDA     80,DL
         1 000024   000000 755000 0                  STA     SIZEC_TEXT

     1178      294    3             IF FLAG

    294  1 000025   200011 473500                    LDP3    @FLAG,,AUTO
         1 000026   300000 234100                    SZN     0,,PR3
         1 000027   000033 605000 1                  TPL     s:298

     1179      295    3             THEN
     1180      296    3                  LPTR$ = PINCRC(SEND$, -SIZEC(OCS_ERRMSGB.TEXT_STRING));

    296  1 000030   100000 236100                    LDQ     0,,PR1
         1 000031   777754 036003                    ADLQ    -20,DU
         1 000032   200012 756100                    STQ     LPTR$,,AUTO

     1181      297                                                /**/
     1182      298    3             CALL INSERT (OCS_ERRMSGB.TEXT_STRING, 0,

    298  1 000033   200012 474500                    LDP4    LPTR$,,AUTO
         1 000034   000000 620005                    EAX0    0,AL
         1 000035   040000 100540                    MLR     fill='040'O
         1 000036   400000 000010                    ADSC9   0,,PR4                   cn=0,n=*X0
         1 000037   000000 600120 xsym               ADSC9   OCS_ERRMSGB              cn=3,n=80

     1183      299    3                  SIZEC(OCS_ERRMSGB.TEXT_STRING),
     1184      300    3                  LPTR$ -> OCS$TN);
     1185      301    3           END;                            /* DO IF OVERFLOW */

    301  1 000040   000047 710000 1                  TRA     s:307

PL6.E3A0      #003=OCS$ANLZ File=OCS$SYNTAX.:E05TSI                              WED 07/30/97 04:07 Page:193  
     1186      302    2        ELSE
     1187      303    3        DO;

     1188      304    3             CALL INSERT (OCS_ERRMSGB.TEXT_STRING, 0,

    304  1 000041   200012 473500                    LDP3    LPTR$,,AUTO
         1 000042   000000 620005                    EAX0    0,AL
         1 000043   000000 722000 0                  LXL2    SIZEC_TEXT
         1 000044   040040 100540                    MLR     fill='040'O
         1 000045   300000 000010                    ADSC9   0,,PR3                   cn=0,n=*X0
         1 000046   000000 600012 xsym               ADSC9   OCS_ERRMSGB              cn=3,n=*X2

     1189      305    3                  SIZEC_TEXT, LPTR$ -> OCS$TN);
     1190      306    3           END;                            /* DO IF NOT OVERFLOW */

     1191      307    2        OCS_ERRMSGC.SIZE_TEXT = SIZEC_TEXT;

    307  1 000047   000000 236000 0                  LDQ     SIZEC_TEXT
         1 000050   000000 552004 xsym               STBQ    OCS_ERRMSGC,'04'O

     1192      308                                                /**/
     1193      309                                                /**/
     1194      310    2   END PUTITIN;

    310  1 000051   000001 702211                    TSX2  ! 1,X1

     1195      311        %EJECT;
PL6.E3A0      #003=OCS$ANLZ File=OCS$SYNTAX.:E05TSI                              WED 07/30/97 04:07 Page:194  
     1196      312        /*
     1197      313                  Begin  O C S $ A N L Z   main
     1198      314                                                                          */
     1199      315                                                /**/
     1200      316                                                /**/
     1201      317    1        IF OCS_ERRCODE ~= 3 /* OCS_ERRORS#  */

    317  1 000052   000000 235000 xsym               LDA     OCS_ERRCODE
         1 000053   000003 115007                    CMPA    3,DL
         1 000054   000143 600000 1                  TZE     s:383

     1202      318    1        THEN
     1203      319    2        DO;

     1204      320    2             OCS_ERRMSGB.TYPE = OCS_ERRCODE;

    320  1 000055   000000 236000 xsym               LDQ     OCS_ERRCODE
         1 000056   000033 736000                    QLS     27
         1 000057   000000 552040 xsym               STBQ    OCS_ERRMSGB,'40'O

     1205      321    2             OCS_ERRMSGB.SYNERR_AT = 0;

    321  1 000060   000000 236003                    LDQ     0,DU
         1 000061   000000 552020 xsym               STBQ    OCS_ERRMSGB,'20'O

     1206      322    2             OCS_ERRMSGB.MSG_SELECT = ERROR_CODE;

    322  1 000062   200004 470500                    LDP0    @ERROR_CODE,,AUTO
         1 000063   000000 236100                    LDQ     0,,PR0
         1 000064   000011 736000                    QLS     9
         1 000065   000000 552010 xsym               STBQ    OCS_ERRMSGB,'10'O

     1207      323    2             IF OCS_ERRCODE = 2 /* OCS_ILLEGAL# */

    323  1 000066   000002 115007                    CMPA    2,DL
         1 000067   000100 601000 1                  TNZ     s:332

PL6.E3A0      #003=OCS$ANLZ File=OCS$SYNTAX.:E05TSI                              WED 07/30/97 04:07 Page:195  
     1208      324    2             THEN
     1209      325    3             DO;

     1210      326    3                  OCS_ERRMSGB.MSG_SELECT = 0;

    326  1 000070   000000 236003                    LDQ     0,DU
         1 000071   000000 552010 xsym               STBQ    OCS_ERRMSGB,'10'O

     1211      327    3                  OCS_ERRMSGC.SIZE_TEXT = 1;

    327  1 000072   000001 236007                    LDQ     1,DL
         1 000073   000000 552004 xsym               STBQ    OCS_ERRMSGC,'04'O

     1212      328    3                  OCS_ERRMSGB.TEXT_STRING = ' ';

    328  1 000074   040000 100400                    MLR     fill='040'O
         1 000075   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         1 000076   000000 600120 xsym               ADSC9   OCS_ERRMSGB              cn=3,n=80

     1213      329    3                END;                       /* DO IF CHKINP */

    329  1 000077   000142 710000 1                  TRA     s:345

     1214      330    2             ELSE
     1215      331    3             DO;

     1216      332    3                  OCS_ERRMSGB.MSG_SELECT = ERROR_CODE;

    332  1 000100   000000 236100                    LDQ     0,,PR0
         1 000101   000011 736000                    QLS     9
         1 000102   000000 552010 xsym               STBQ    OCS_ERRMSGB,'10'O

     1217      333    3                  IF PTR$ -> TEXTC.COUNT > SIZEC(OCS_ERRMSGB.TEXT_STRING)

    333  1 000103   200003 471500                    LDP1    @PTR$,,AUTO
         1 000104   100000 473500                    LDP3    0,,PR1
         1 000105   000100 101500                    MRL     fill='000'O
PL6.E3A0      #003=OCS$ANLZ File=OCS$SYNTAX.:E05TSI                              WED 07/30/97 04:07 Page:196  
         1 000106   300000 000001                    ADSC9   0,,PR3                   cn=0,n=1
         1 000107   200014 000004                    ADSC9   LPTR$+2,,AUTO            cn=0,n=4
         1 000110   200014 236100                    LDQ     LPTR$+2,,AUTO
         1 000111   000121 116007                    CMPQ    81,DL
         1 000112   000126 604000 1                  TMI     s:341

     1218      334    3                  THEN
     1219      335    4                  DO;

     1220      336    4                       OCS_ERRMSGC.SIZE_TEXT = SIZEC(OCS_ERRMSGB.TEXT_STRING);

    336  1 000113   000120 236007                    LDQ     80,DL
         1 000114   000000 552004 xsym               STBQ    OCS_ERRMSGC,'04'O

     1221      337    4                       OCS_ERRMSGB.TEXT_STRING = PTR$ -> TEXTC.TEXT;

    337  1 000115   100000 473500                    LDP3    0,,PR1
         1 000116   000100 101500                    MRL     fill='000'O
         1 000117   300000 000001                    ADSC9   0,,PR3                   cn=0,n=1
         1 000120   200014 000002                    ADSC9   LPTR$+2,,AUTO            cn=0,n=2
         1 000121   200014 220100                    LDX0    LPTR$+2,,AUTO
         1 000122   040000 100540                    MLR     fill='040'O
         1 000123   300000 200010                    ADSC9   0,,PR3                   cn=1,n=*X0
         1 000124   000000 600120 xsym               ADSC9   OCS_ERRMSGB              cn=3,n=80

     1222      338    4                     END;                  /* DO IF OVER FLOW */

    338  1 000125   000142 710000 1                  TRA     s:345

     1223      339    3                  ELSE
     1224      340    4                  DO;

     1225      341    4                       OCS_ERRMSGC.SIZE_TEXT = PTR$ -> TEXTC.COUNT;

    341  1 000126   100000 473500                    LDP3    0,,PR1
         1 000127   000000 100500                    MLR     fill='000'O
         1 000130   300000 000001                    ADSC9   0,,PR3                   cn=0,n=1
PL6.E3A0      #003=OCS$ANLZ File=OCS$SYNTAX.:E05TSI                              WED 07/30/97 04:07 Page:197  
         1 000131   000000 600001 xsym               ADSC9   OCS_ERRMSGC              cn=3,n=1

     1226      342    4                       OCS_ERRMSGB.TEXT_STRING = PTR$ -> TEXTC.TEXT;

    342  1 000132   100000 473500                    LDP3    0,,PR1
         1 000133   000100 101500                    MRL     fill='000'O
         1 000134   300000 000001                    ADSC9   0,,PR3                   cn=0,n=1
         1 000135   200014 000002                    ADSC9   LPTR$+2,,AUTO            cn=0,n=2
         1 000136   200014 220100                    LDX0    LPTR$+2,,AUTO
         1 000137   040000 100540                    MLR     fill='040'O
         1 000140   300000 200010                    ADSC9   0,,PR3                   cn=1,n=*X0
         1 000141   000000 600120 xsym               ADSC9   OCS_ERRMSGB              cn=3,n=80

     1227      343    4                     END;                  /* DO IF NO OVER FLOW */

     1228      344    3                END;                       /* DO IF NOT BAD NODES */

     1229      345    2             RETURN;                       /* If not syntax error, return */

    345  1 000142   000000 702200 xent               TSX2  ! X66_ARET

     1230      346    2           END;                            /* DO IF not syntax error */
     1231      347                                                /**/
     1232      348                                                /**/
     1233      349        %EJECT;
PL6.E3A0      #003=OCS$ANLZ File=OCS$SYNTAX.:E05TSI                              WED 07/30/97 04:07 Page:198  
     1234      350                                           /* Process the X$PARSE syntax error
     1235      351                                                in some kind of general manner
     1236      352                                                here....the following "rules"
     1237      353                                                were determined by trial and
     1238      354                                                error:
     1239      355                                           1) PCB.HICHAR > INBUFFER
     1240      356                                                Something is missing after the
     1241      357                                                last character input.  It's
     1242      358                                                ok till there.
     1243      359                                           2) PCB.HICHAR = 0 or PCB.HICHAR
     1244      360                                                = first non_prompt character
     1245      361                                                (like space or !)
     1246      362                                                indicates, in general, that
     1247      363                                                the command is illegal, i.e.
     1248      364                                                the keyword or command word
     1249      365                                                was not recognized.
     1250      366                                           3) PCB.HICHAR ~= 0 but no delimiter
     1251      367                                                between HICHAR and start of
     1252      368                                                line.
     1253      369                                                This usually indicates that
     1254      370                                                the command was legal until
     1255      371                                                HICHAR. After that, no dice.
     1256      372                                           4) PCB.HICHAR ~= 0 and a delimiter
     1257      373                                                is at HICHAR or HICHAR - 1.
     1258      374                                                Indicates illegal value start-
     1259      375                                                ing at the indicated character
     1260      376                                                (sometimes implies incorrect
     1261      377                                                field, such as non-numeric
     1262      378                                                when numeric expected, etc.)
     1263      379                                           5) PCB.HICHAR ~= 0 and a delimiter
     1264      380                                                is not at HICHAR - 1.
     1265      381                                                I dunno. I couldn't produce it
     1266      382                                                                          */
     1267      383    1        IF PCB_HI_CHAR >= OCS_KSIZE  /* HI_CHAR is zero_based;

    383  1 000143   200004 470500                    LDP0    @ERROR_CODE,,AUTO
         1 000144   000000 236100                    LDQ     0,,PR0
PL6.E3A0      #003=OCS$ANLZ File=OCS$SYNTAX.:E05TSI                              WED 07/30/97 04:07 Page:199  
         1 000145   000000 116000 xsym               CMPQ    OCS_KSIZE
         1 000146   000225 602000 1                  TNC     s:417

     1268      384                                                KSIZE is 1_based */
     1269      385    1        THEN
     1270      386    2        DO;

     1271      387    2             OCS_ERRMSGB.TYPE = OCS_ERRCODE;

    387  1 000147   000000 236000 xsym               LDQ     OCS_ERRCODE
         1 000150   000033 736000                    QLS     27
         1 000151   000000 552040 xsym               STBQ    OCS_ERRMSGB,'40'O

     1272      388    2             OCS_ERRMSGB.SYNERR_AT = PCB_HI_CHAR;

    388  1 000152   000000 236100                    LDQ     0,,PR0
         1 000153   000022 736000                    QLS     18
         1 000154   000000 552020 xsym               STBQ    OCS_ERRMSGB,'20'O

     1273      389    2             OCS_ERRMSGB.MSG_SELECT = 3 /*E#SMISNG*/;

    389  1 000155   003000 236007                    LDQ     1536,DL
         1 000156   000000 552010 xsym               STBQ    OCS_ERRMSGB,'10'O

     1274      390                                                /**/
     1275      391    2             HERE$ = PINCRC (PTR$, (PCB_HI_CHAR - 1));

    391  1 000157   000000 236100                    LDQ     0,,PR0
         1 000160   200003 471500                    LDP1    @PTR$,,AUTO
         1 000161   100000 473500                    LDP3    0,,PR1
         1 000162   000011 402007                    MPY     9,DL
         1 000163   000011 136007                    SBLQ    9,DL
         1 000164   000166 605000 1                  TPL     s:391+7
         1 000165   000044 036003                    ADLQ    36,DU
         1 000166   300000 503506                    ABD     0,QL,PR3
         1 000167   000003 453400 0                  STP3    HERE$

PL6.E3A0      #003=OCS$ANLZ File=OCS$SYNTAX.:E05TSI                              WED 07/30/97 04:07 Page:200  
     1276      392    2             END$ = HERE$;

    392  1 000170   000003 236000 0                  LDQ     HERE$
         1 000171   000002 756000 0                  STQ     END$

     1277      393                                                /**/
     1278      394    3             DO WHILE ((HERE$ > PTR$) AND (HERE$ -> OCS$T1 ~= ' '));

    394  1 000172   000176 710000 1                  TRA     s:396

     1279      395    3                  HERE$ = PINCRC (HERE$, -1);

    395  1 000173   000003 236000 0                  LDQ     HERE$
         1 000174   000034 036000 xsym               ADLQ    B_VECTNIL+28
         1 000175   000003 756000 0                  STQ     HERE$

     1280      396    3                END;                       /* DO WHILE HERE$ NOT RIGHT */

    396  1 000176   200003 470500                    LDP0    @PTR$,,AUTO
         1 000177   000000 116100                    CMPQ    0,,PR0
         1 000200   000207 602000 1                  TNC     s:398
         1 000201   000207 600000 1                  TZE     s:398
         1 000202   000003 471400 0                  LDP1    HERE$
         1 000203   040000 106500                    CMPC    fill='040'O
         1 000204   100000 000001                    ADSC9   0,,PR1                   cn=0,n=1
         1 000205   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         1 000206   000173 601000 1                  TNZ     s:395

     1281      397                                                /**/
     1282      398    2             IF HERE$ -> OCS$T1 = ' '

    398  1 000207   000003 471400 0                  LDP1    HERE$
         1 000210   040000 106500                    CMPC    fill='040'O
         1 000211   100000 000001                    ADSC9   0,,PR1                   cn=0,n=1
         1 000212   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         1 000213   000216 601000 1                  TNZ     s:402

PL6.E3A0      #003=OCS$ANLZ File=OCS$SYNTAX.:E05TSI                              WED 07/30/97 04:07 Page:201  
     1283      399    2             THEN
     1284      400    2                  HERE$ = PINCRC(HERE$,1);

    400  1 000214   200000 036007                    ADLQ    65536,DL
         1 000215   000003 756000 0                  STQ     HERE$

     1285      401                                                /**/
     1286      402    2             CALL PUTITIN(HERE$,END$,'1'B);

    402  1 000216   000000 237000 2                  LDAQ    0
         1 000217   200010 757100                    STAQ    @SSTART$+1,,AUTO
         1 000220   000002 236000 2                  LDQ     2
         1 000221   200007 756100                    STQ     @ERROR_CODE+3,,AUTO
         1 000222   000003 701000 1                  TSX1    PUTITIN
         1 000223   000000 011000                    NOP     0

     1287      403    2             RETURN;

    403  1 000224   000000 702200 xent               TSX2  ! X66_ARET

     1288      404    2           END;                            /* DO IF E#SMISNG */
     1289      405                                                /**/
     1290      406                                                /**/
     1291      407        %EJECT;
PL6.E3A0      #003=OCS$ANLZ File=OCS$SYNTAX.:E05TSI                              WED 07/30/97 04:07 Page:202  
     1292      408                                           /* Here we check to see if
     1293      409                                                "Illegal command" by virtue
     1294      410                                                of the fact that the parser
     1295      411                                                choked on the first character
     1296      412                                                that was "legal".  Legal means
     1297      413                                                that maybe there was a series
     1298      414                                                of spaces or bangs before it
     1299      415                                                which may or may not be legal
     1300      416                                                This is checked for       */
     1301      417    1        START$ = PTR$;

    417  1 000225   200003 471500                    LDP1    @PTR$,,AUTO
         1 000226   100000 236100                    LDQ     0,,PR1
         1 000227   000001 756000 0                  STQ     START$

     1302      418    1        END$ = PINCRC(START$,OCS_KSIZE - 1);

    418  1 000230   000000 236000 xsym               LDQ     OCS_KSIZE
         1 000231   000020 736000                    QLS     16
         1 000232   200000 136007                    SBLQ    65536,DL
         1 000233   000001 036000 0                  ADLQ    START$
         1 000234   000002 756000 0                  STQ     END$

     1303      419                                                /**/
     1304      420    2        DO I = 0 TO OCS_KSIZE - 1;

    420  1 000235   000004 450000 0                  STZ     I
         1 000236   000266 710000 1                  TRA     s:432+1

     1305      421    2             IF I_UBIN >= PCB_HI_CHAR

    421  1 000237   200004 470500                    LDP0    @ERROR_CODE,,AUTO
         1 000240   000004 236000 0                  LDQ     I
         1 000241   000000 116100                    CMPQ    0,,PR0
         1 000242   000246 602000 1                  TNC     s:425

     1306      422    2             THEN
PL6.E3A0      #003=OCS$ANLZ File=OCS$SYNTAX.:E05TSI                              WED 07/30/97 04:07 Page:203  
     1307      423    2                  I = OCS_KSIZE;

    423  1 000243   000000 235000 xsym               LDA     OCS_KSIZE
         1 000244   000004 755000 0                  STA     I
         1 000245   000265 710000 1                  TRA     s:432

     1308      424    2             ELSE
     1309      425    2                  IF START$ -> OCS$T1 ~= ' '

    425  1 000246   000001 471400 0                  LDP1    START$
         1 000247   040000 106500                    CMPC    fill='040'O
         1 000250   100000 000001                    ADSC9   0,,PR1                   cn=0,n=1
         1 000251   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         1 000252   000262 600000 1                  TZE     s:431
         1 000253   040000 106500                    CMPC    fill='040'O
         1 000254   100000 000001                    ADSC9   0,,PR1                   cn=0,n=1
         1 000255   000003 000001 2                  ADSC9   3                        cn=0,n=1
         1 000256   000262 600000 1                  TZE     s:431

     1310      426    2                       AND
     1311      427    2                       START$ -> OCS$T1 ~= '!'
     1312      428    2                  THEN
     1313      429    2                       I = OCS_KSIZE;

    429  1 000257   000000 235000 xsym               LDA     OCS_KSIZE
         1 000260   000004 755000 0                  STA     I
         1 000261   000265 710000 1                  TRA     s:432

     1314      430    2                  ELSE
     1315      431    2                       START$ = PINCRC(START$,1);

    431  1 000262   000001 236000 0                  LDQ     START$
         1 000263   200000 036007                    ADLQ    65536,DL
         1 000264   000001 756000 0                  STQ     START$

     1316      432    2           END;                            /* DO I = 0 TO END_OF_BUF */

PL6.E3A0      #003=OCS$ANLZ File=OCS$SYNTAX.:E05TSI                              WED 07/30/97 04:07 Page:204  
    432  1 000265   000004 054000 0                  AOS     I
         1 000266   000004 236000 0                  LDQ     I
         1 000267   000237 604000 1                  TMI     s:421
         1 000270   000000 116000 xsym               CMPQ    OCS_KSIZE
         1 000271   000237 602000 1                  TNC     s:421

     1317      433                                                /**/
     1318      434                                                /**/
     1319      435    1        IF PCB_HI_CHAR = 0

    435  1 000272   000000 235100                    LDA     0,,PR0
         1 000273   000306 600000 1                  TZE     s:440
         1 000274   000000 236100                    LDQ     0,,PR0
         1 000275   200003 471500                    LDP1    @PTR$,,AUTO
         1 000276   100000 473500                    LDP3    0,,PR1
         1 000277   000011 402007                    MPY     9,DL
         1 000300   300000 503506                    ABD     0,QL,PR3
         1 000301   200014 453500                    STP3    LPTR$+2,,AUTO
         1 000302   200014 236100                    LDQ     LPTR$+2,,AUTO
         1 000303   000001 116000 0                  CMPQ    START$
         1 000304   000306 600000 1                  TZE     s:440
         1 000305   000376 603000 1                  TRC     s:472

     1320      436    1             OR
     1321      437    1             START$ >= PINCRC(PTR$, PCB_HI_CHAR)
     1322      438    1        THEN
     1323      439    2        DO;

     1324      440    2             HERE$ = START$;

    440  1 000306   000001 236000 0                  LDQ     START$
         1 000307   000003 756000 0                  STQ     HERE$

     1325      441    3             DO WHILE ((HERE$ -> OCS$T1 ~=' ')

    441  1 000310   000314 710000 1                  TRA     s:445

PL6.E3A0      #003=OCS$ANLZ File=OCS$SYNTAX.:E05TSI                              WED 07/30/97 04:07 Page:205  
     1326      442    3                  AND
     1327      443    3                  (HERE$ < END$));
     1328      444    3                  HERE$ = PINCRC(HERE$,1);

    444  1 000311   000003 236000 0                  LDQ     HERE$
         1 000312   200000 036007                    ADLQ    65536,DL
         1 000313   000003 756000 0                  STQ     HERE$

     1329      445    3                END;                       /* DO WHILE MORE IN STRING */

    445  1 000314   000003 470400 0                  LDP0    HERE$
         1 000315   040000 106500                    CMPC    fill='040'O
         1 000316   000000 000001                    ADSC9   0,,PR0                   cn=0,n=1
         1 000317   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         1 000320   000323 600000 1                  TZE     s:446
         1 000321   000002 116000 0                  CMPQ    END$
         1 000322   000311 602000 1                  TNC     s:444

     1330      446    2             IF START$ > PINCRC (PTR$, PCB_HI_CHAR)

    446  1 000323   200004 471500                    LDP1    @ERROR_CODE,,AUTO
         1 000324   100000 236100                    LDQ     0,,PR1
         1 000325   200003 473500                    LDP3    @PTR$,,AUTO
         1 000326   300000 474500                    LDP4    0,,PR3
         1 000327   000011 402007                    MPY     9,DL
         1 000330   400000 503506                    ABD     0,QL,PR4
         1 000331   200014 454500                    STP4    LPTR$+2,,AUTO
         1 000332   200014 236100                    LDQ     LPTR$+2,,AUTO
         1 000333   000001 116000 0                  CMPQ    START$
         1 000334   000342 603000 1                  TRC     s:449

     1331      447    2             THEN
     1332      448    2                  START$ = PINCRC(PTR$, PCB_HI_CHAR);

    448  1 000335   100000 236100                    LDQ     0,,PR1
         1 000336   300000 474500                    LDP4    0,,PR3
         1 000337   000011 402007                    MPY     9,DL
PL6.E3A0      #003=OCS$ANLZ File=OCS$SYNTAX.:E05TSI                              WED 07/30/97 04:07 Page:206  
         1 000340   400000 503506                    ABD     0,QL,PR4
         1 000341   000001 454400 0                  STP4    START$

     1333      449    2             IF HERE$ > END$

    449  1 000342   000002 236000 0                  LDQ     END$
         1 000343   000003 116000 0                  CMPQ    HERE$
         1 000344   000346 603000 1                  TRC     s:452

     1334      450    2             THEN
     1335      451    2                  HERE$ = END$;

    451  1 000345   000003 756000 0                  STQ     HERE$

     1336      452    2             IF HERE$ -> OCS$T1 = ' '

    452  1 000346   000003 470400 0                  LDP0    HERE$
         1 000347   040000 106500                    CMPC    fill='040'O
         1 000350   000000 000001                    ADSC9   0,,PR0                   cn=0,n=1
         1 000351   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         1 000352   000356 601000 1                  TNZ     s:455

     1337      453    2             THEN
     1338      454    2                  HERE$ = PINCRC(HERE$, -1);

    454  1 000353   000003 236000 0                  LDQ     HERE$
         1 000354   000034 036000 xsym               ADLQ    B_VECTNIL+28
         1 000355   000003 756000 0                  STQ     HERE$

     1339      455    2             CALL PUTITIN( START$, HERE$, '0'B);

    455  1 000356   000004 237000 2                  LDAQ    4
         1 000357   200010 757100                    STAQ    @SSTART$+1,,AUTO
         1 000360   000006 236000 2                  LDQ     6
         1 000361   200007 756100                    STQ     @ERROR_CODE+3,,AUTO
         1 000362   000003 701000 1                  TSX1    PUTITIN
         1 000363   000000 011000                    NOP     0
PL6.E3A0      #003=OCS$ANLZ File=OCS$SYNTAX.:E05TSI                              WED 07/30/97 04:07 Page:207  

     1340      456    2             OCS_ERRMSGB.TYPE = OCS_ERRCODE;

    456  1 000364   000000 236000 xsym               LDQ     OCS_ERRCODE
         1 000365   000033 736000                    QLS     27
         1 000366   000000 552040 xsym               STBQ    OCS_ERRMSGB,'40'O

     1341      457    2             OCS_ERRMSGB.SYNERR_AT = PCB_HI_CHAR;

    457  1 000367   200004 470500                    LDP0    @ERROR_CODE,,AUTO
         1 000370   000000 236100                    LDQ     0,,PR0
         1 000371   000022 736000                    QLS     18
         1 000372   000000 552020 xsym               STBQ    OCS_ERRMSGB,'20'O

     1342      458    2             OCS_ERRMSGB.MSG_SELECT = 1 /*E#NOTCMD*/;

    458  1 000373   001000 236007                    LDQ     512,DL
         1 000374   000000 552010 xsym               STBQ    OCS_ERRMSGB,'10'O

     1343      459    2             RETURN;                       /* TO PRINT MESSAGE */

    459  1 000375   000000 702200 xent               TSX2  ! X66_ARET

     1344      460    2           END;                            /* DO IF BAD COMMAND */
     1345      461                                                /**/
     1346      462        %EJECT;
PL6.E3A0      #003=OCS$ANLZ File=OCS$SYNTAX.:E05TSI                              WED 07/30/97 04:07 Page:208  
     1347      463                                           /* Here we check for "bad command"
     1348      464                                                but this time it could be bad
     1349      465                                                because the first few characters
     1350      466                                                "n" werent....attempt to detect
     1351      467                                                this by trying to find a space
     1352      468                                                somewhere before HI_CHAR
     1353      469                                                If START$ is found before a
     1354      470                                                space, frame START$ to END$
     1355      471                                                and complain */
     1356      472    1        HERE$ = PINCRC(PTR$, PCB_HI_CHAR);

    472  1 000376   000000 236100                    LDQ     0,,PR0
         1 000377   100000 474500                    LDP4    0,,PR1
         1 000400   000011 402007                    MPY     9,DL
         1 000401   400000 503506                    ABD     0,QL,PR4
         1 000402   000003 454400 0                  STP4    HERE$

     1357      473                                                /**/
     1358      474    2        DO WHILE (( HERE$ -> OCS$T1 = ' ')

    474  1 000403   000407 710000 1                  TRA     s:478

     1359      475    2             AND
     1360      476    2             (HERE$ < END$));
     1361      477    2             HERE$ = PINCRC (HERE$, 1);

    477  1 000404   000003 236000 0                  LDQ     HERE$
         1 000405   200000 036007                    ADLQ    65536,DL
         1 000406   000003 756000 0                  STQ     HERE$

     1362      478    2           END;                            /* DO WHILE BLANKS */

    478  1 000407   000003 470400 0                  LDP0    HERE$
         1 000410   040000 106500                    CMPC    fill='040'O
         1 000411   000000 000001                    ADSC9   0,,PR0                   cn=0,n=1
         1 000412   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         1 000413   000417 601000 1                  TNZ     s:481
PL6.E3A0      #003=OCS$ANLZ File=OCS$SYNTAX.:E05TSI                              WED 07/30/97 04:07 Page:209  
         1 000414   000003 236000 0                  LDQ     HERE$
         1 000415   000002 116000 0                  CMPQ    END$
         1 000416   000404 602000 1                  TNC     s:477

     1363      479                                                /**/
     1364      480                                                /**/
     1365      481    2        DO WHILE ((HERE$ -> OCS$T1 ~= ' ')

    481  1 000417   000423 710000 1                  TRA     s:485

     1366      482    2             AND
     1367      483    2             (HERE$ < END$));
     1368      484    2             HERE$ = PINCRC (HERE$, 1);

    484  1 000420   000003 236000 0                  LDQ     HERE$
         1 000421   200000 036007                    ADLQ    65536,DL
         1 000422   000003 756000 0                  STQ     HERE$

     1369      485    2           END;                            /* DO WHILE */

    485  1 000423   000003 470400 0                  LDP0    HERE$
         1 000424   040000 106500                    CMPC    fill='040'O
         1 000425   000000 000001                    ADSC9   0,,PR0                   cn=0,n=1
         1 000426   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         1 000427   000433 600000 1                  TZE     s:487
         1 000430   000003 236000 0                  LDQ     HERE$
         1 000431   000002 116000 0                  CMPQ    END$
         1 000432   000420 602000 1                  TNC     s:484

     1370      486                                                /**/
     1371      487    1        IF HERE$ -> OCS$T1 = ' '

    487  1 000433   040000 106500                    CMPC    fill='040'O
         1 000434   000000 000001                    ADSC9   0,,PR0                   cn=0,n=1
         1 000435   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         1 000436   000442 601000 1                  TNZ     s:491

PL6.E3A0      #003=OCS$ANLZ File=OCS$SYNTAX.:E05TSI                              WED 07/30/97 04:07 Page:210  
     1372      488    1        THEN
     1373      489    1             HERE$ = PINCRC(HERE$, -1);

    489  1 000437   000003 236000 0                  LDQ     HERE$
         1 000440   000034 036000 xsym               ADLQ    B_VECTNIL+28
         1 000441   000003 756000 0                  STQ     HERE$

     1374      490                                                /**/
     1375      491    1        END$ = HERE$;

    491  1 000442   000003 236000 0                  LDQ     HERE$
         1 000443   000002 756000 0                  STQ     END$

     1376      492                                                /**/
     1377      493    1        HERE$ = PINCRC (PTR$, PCB_HI_CHAR);

    493  1 000444   200004 470500                    LDP0    @ERROR_CODE,,AUTO
         1 000445   000000 236100                    LDQ     0,,PR0
         1 000446   200003 471500                    LDP1    @PTR$,,AUTO
         1 000447   100000 473500                    LDP3    0,,PR1
         1 000450   000011 402007                    MPY     9,DL
         1 000451   300000 503506                    ABD     0,QL,PR3
         1 000452   000003 453400 0                  STP3    HERE$

     1378      494                                                /**/
     1379      495    2        DO WHILE ((PINCRC(HERE$,-1) -> OCS$T1 ~=' ')

    495  1 000453   000457 710000 1                  TRA     s:499

     1380      496    2             AND
     1381      497    2             (HERE$ > START$));
     1382      498    2             HERE$ = PINCRC (HERE$, -1);

    498  1 000454   000003 236000 0                  LDQ     HERE$
         1 000455   000034 036000 xsym               ADLQ    B_VECTNIL+28
         1 000456   000003 756000 0                  STQ     HERE$

PL6.E3A0      #003=OCS$ANLZ File=OCS$SYNTAX.:E05TSI                              WED 07/30/97 04:07 Page:211  
     1383      499    2           END;                            /* DO WHILE */

    499  1 000457   000003 470400 0                  LDP0    HERE$
         1 000460   040000 106500                    CMPC    fill='040'O
         1 000461   077777 600001                    ADSC9   -1,,PR0                  cn=3,n=1
         1 000462   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         1 000463   000467 600000 1                  TZE     s:501
         1 000464   000001 236000 0                  LDQ     START$
         1 000465   000003 116000 0                  CMPQ    HERE$
         1 000466   000454 602000 1                  TNC     s:498

     1384      500                                                /**/
     1385      501    1        IF HERE$ = START$

    501  1 000467   000003 236000 0                  LDQ     HERE$
         1 000470   000001 116000 0                  CMPQ    START$
         1 000471   000512 601000 1                  TNZ     s:513

     1386      502    1        THEN
     1387      503    2        DO;

     1388      504    2             CALL PUTITIN(START$, END$, '0'B);

    504  1 000472   000010 237000 2                  LDAQ    8
         1 000473   200010 757100                    STAQ    @SSTART$+1,,AUTO
         1 000474   000006 236000 2                  LDQ     6
         1 000475   200007 756100                    STQ     @ERROR_CODE+3,,AUTO
         1 000476   000003 701000 1                  TSX1    PUTITIN
         1 000477   000000 011000                    NOP     0

     1389      505    2             OCS_ERRMSGB.TYPE = OCS_ERRCODE;

    505  1 000500   000000 236000 xsym               LDQ     OCS_ERRCODE
         1 000501   000033 736000                    QLS     27
         1 000502   000000 552040 xsym               STBQ    OCS_ERRMSGB,'40'O

     1390      506    2             OCS_ERRMSGB.SYNERR_AT = PCB_HI_CHAR;
PL6.E3A0      #003=OCS$ANLZ File=OCS$SYNTAX.:E05TSI                              WED 07/30/97 04:07 Page:212  

    506  1 000503   200004 470500                    LDP0    @ERROR_CODE,,AUTO
         1 000504   000000 236100                    LDQ     0,,PR0
         1 000505   000022 736000                    QLS     18
         1 000506   000000 552020 xsym               STBQ    OCS_ERRMSGB,'20'O

     1391      507    2             OCS_ERRMSGB.MSG_SELECT = 1 /*E#NOTCMD*/;

    507  1 000507   001000 236007                    LDQ     512,DL
         1 000510   000000 552010 xsym               STBQ    OCS_ERRMSGB,'10'O

     1392      508    2             RETURN;                       /* TO PRINT MESSAGE */

    508  1 000511   000000 702200 xent               TSX2  ! X66_ARET

     1393      509    2           END;                            /* DO IF BAD COMMAND */
     1394      510                                                /**/
     1395      511                                                /**/
     1396      512        %EJECT;
PL6.E3A0      #003=OCS$ANLZ File=OCS$SYNTAX.:E05TSI                              WED 07/30/97 04:07 Page:213  
     1397      513    1        IF PINCRC(HERE$, -1) -> OCS$T1 = ' '

    513  1 000512   040000 106500                    CMPC    fill='040'O
         1 000513   077777 600001                    ADSC9   -1,,PR0                  cn=3,n=1
         1 000514   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         1 000515   000536 601000 1                  TNZ     s:524

     1398      514    1        THEN
     1399      515    2        DO;

     1400      516    2             CALL PUTITIN (HERE$, END$, '0'B);

    516  1 000516   000010 237000 2                  LDAQ    8
         1 000517   200010 757100                    STAQ    @SSTART$+1,,AUTO
         1 000520   000002 236000 2                  LDQ     2
         1 000521   200007 756100                    STQ     @ERROR_CODE+3,,AUTO
         1 000522   000003 701000 1                  TSX1    PUTITIN
         1 000523   000000 011000                    NOP     0

     1401      517    2             OCS_ERRMSGB.TYPE = OCS_ERRCODE;

    517  1 000524   000000 236000 xsym               LDQ     OCS_ERRCODE
         1 000525   000033 736000                    QLS     27
         1 000526   000000 552040 xsym               STBQ    OCS_ERRMSGB,'40'O

     1402      518    2             OCS_ERRMSGB.SYNERR_AT = PCB_HI_CHAR;

    518  1 000527   200004 470500                    LDP0    @ERROR_CODE,,AUTO
         1 000530   000000 236100                    LDQ     0,,PR0
         1 000531   000022 736000                    QLS     18
         1 000532   000000 552020 xsym               STBQ    OCS_ERRMSGB,'20'O

     1403      519    2             OCS_ERRMSGB.MSG_SELECT = 2 /*E#NOTLGL*/;

    519  1 000533   002000 236007                    LDQ     1024,DL
         1 000534   000000 552010 xsym               STBQ    OCS_ERRMSGB,'10'O

PL6.E3A0      #003=OCS$ANLZ File=OCS$SYNTAX.:E05TSI                              WED 07/30/97 04:07 Page:214  
     1404      520    2             RETURN;                       /* TO PRINT MESSAGE */

    520  1 000535   000000 702200 xent               TSX2  ! X66_ARET

     1405      521    2           END;                            /* DO IF BAD COMMAND */
     1406      522                                                /**/
     1407      523                                                /**/
     1408      524    1        OCS_ERRMSGB.TYPE = OCS_ERRCODE;

    524  1 000536   000000 236000 xsym               LDQ     OCS_ERRCODE
         1 000537   000033 736000                    QLS     27
         1 000540   000000 552040 xsym               STBQ    OCS_ERRMSGB,'40'O

     1409      525    1        OCS_ERRMSGB.SYNERR_AT = PCB_HI_CHAR;

    525  1 000541   200004 471500                    LDP1    @ERROR_CODE,,AUTO
         1 000542   100000 236100                    LDQ     0,,PR1
         1 000543   000022 736000                    QLS     18
         1 000544   000000 552020 xsym               STBQ    OCS_ERRMSGB,'20'O

     1410      526    1        OCS_ERRMSGB.MSG_SELECT = 5 /*E#UNEVAL*/;

    526  1 000545   005000 236007                    LDQ     2560,DL
         1 000546   000000 552010 xsym               STBQ    OCS_ERRMSGB,'10'O

     1411      527    1        RETURN;                            /* TO PRINT MESSAGE */

    527  1 000547   000000 702200 xent               TSX2  ! X66_ARET
     1412      528                                                /**/
     1413      529    1   END OCS$ANLZ;
     1414      530        %EOD;

PL6.E3A0      #003=OCS$ANLZ File=OCS$SYNTAX.:E05TSI                              WED 07/30/97 04:07 Page:215  
--  Include file information  --

   OCS_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   OCS_SUBS_C.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure OCS$ANLZ.
PL6.E3A0      #003=OCS$ANLZ File=OCS$SYNTAX.:E05TSI                              WED 07/30/97 04:07 Page:216  

 **** Variables and constants ****

  ****  Section 000  Data  OCS$ANLZ

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     2-0-0/w PTR         r     1 END$                       3-0-0/w PTR         r     1 HERE$
     4-0-0/w SBIN        r     1 I                          4-0-0/w UBIN        r     1 I_UBIN
     0-0-0/w UBIN        r     1 SIZEC_TEXT                 1-0-0/w PTR         r     1 START$

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     4-0-0/w PTR         r     1 @ERROR_CODE               11-0-0/w PTR         r     1 @FLAG
     3-0-0/w PTR         r     1 @PTR$                     10-0-0/w PTR         r     1 @SEND$
     7-0-0/w PTR         r     1 @SSTART$                  *0-0-0/w UBIN        r     1 ERROR_CODE
    *0-0-0/w BIT         r     1 FLAG                      12-0-0/w PTR         r     1 LPTR$
    *0-0-0/w UBIN        r     1 PCB_HI_CHAR               *0-0-0/w PTR         r     1 PTR$
    *0-0-0/w PTR         r     1 SEND$                     *0-0-0/w PTR         r     1 SSTART$

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w UBIN        r     1 OCS_ERRCODE                0-0-0/c STRC(747)   r     1 OCS_ERRMSGB
     0-0-0/b STRC        r     1 OCS_ERRMSGC                0-0-0/w UBIN        r     1 OCS_KSIZE

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR        r     1 OCS$T1                     0-0-0/c ACHR        r     1 OCS$TN
PL6.E3A0      #003=OCS$ANLZ File=OCS$SYNTAX.:E05TSI                              WED 07/30/97 04:07 Page:217  
     0-0-0/c ASTR(9)     r     1 TEXTC


   Procedure OCS$ANLZ requires 360 words for executable code.
   Procedure OCS$ANLZ requires 14 words of local(AUTO) storage.
PL6.E3A0      #003=OCS$ANLZ File=OCS$SYNTAX.:E05TSI                              WED 07/30/97 04:07 Page:218  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #003=OCS$ANLZ File=OCS$SYNTAX.:E05TSI                              WED 07/30/97 04:07 Page:219  
          MINI XREF LISTING

END$
       270**DCL       392<<ASSIGN    402<>CALL      418<<ASSIGN    441>>DOWHILE   449>>IF        451>>ASSIGN
       474>>DOWHILE   481>>DOWHILE   491<<ASSIGN    504<>CALL      516<>CALL
ERROR_CODE
        22**DCL        19--PROC       23--REDEF     322>>ASSIGN    332>>ASSIGN
FLAG IN PROCEDURE PUTITIN
       285**DCL       280--PROC      294>>IF
HERE$
       271**DCL       391<<ASSIGN    392>>ASSIGN    394>>DOWHILE   394>>DOWHILE   395<<ASSIGN    395>>ASSIGN
       398>>IF        400<<ASSIGN    400>>ASSIGN    402<>CALL      440<<ASSIGN    441>>DOWHILE   441>>DOWHILE
       444<<ASSIGN    444>>ASSIGN    449>>IF        451<<ASSIGN    452>>IF        454<<ASSIGN    454>>ASSIGN
       455<>CALL      472<<ASSIGN    474>>DOWHILE   474>>DOWHILE   477<<ASSIGN    477>>ASSIGN    481>>DOWHILE
       481>>DOWHILE   484<<ASSIGN    484>>ASSIGN    487>>IF        489<<ASSIGN    489>>ASSIGN    491>>ASSIGN
       493<<ASSIGN    495>>DOWHILE   495>>DOWHILE   498<<ASSIGN    498>>ASSIGN    501>>IF        513>>IF
       516<>CALL
I
       272**DCL       273--REDEF     420<<DOINDEX   423<<ASSIGN    429<<ASSIGN
I_UBIN
       273**DCL       421>>IF
LPTR$ IN PROCEDURE PUTITIN
       284**DCL       288<<ASSIGN    296<<ASSIGN    298>>CALLBLT   304>>CALLBLT
OCS$T1
       264**DCL       394>>DOWHILE   398>>IF        425>>IF        425>>IF        441>>DOWHILE   452>>IF
       474>>DOWHILE   481>>DOWHILE   487>>IF        495>>DOWHILE   513>>IF
OCS$TN
       265**DCL       298>>CALLBLT   304>>CALLBLT
OCS_ERRCODE
       253**DCL       317>>IF        320>>ASSIGN    323>>IF        387>>ASSIGN    456>>ASSIGN    505>>ASSIGN
       517>>ASSIGN    524>>ASSIGN
OCS_ERRMSGB.MSG_SELECT
       257**DCL       322<<ASSIGN    326<<ASSIGN    332<<ASSIGN    389<<ASSIGN    458<<ASSIGN    507<<ASSIGN
       519<<ASSIGN    526<<ASSIGN
PL6.E3A0      #003=OCS$ANLZ File=OCS$SYNTAX.:E05TSI                              WED 07/30/97 04:07 Page:220  
OCS_ERRMSGB.SYNERR_AT
       256**DCL       321<<ASSIGN    388<<ASSIGN    457<<ASSIGN    506<<ASSIGN    518<<ASSIGN    525<<ASSIGN
OCS_ERRMSGB.TEXT_STRING
       257**DCL       290--IF        293--ASSIGN    296--ASSIGN    298<<CALLBLT   298--CALLBLT   304<<CALLBLT
       328<<ASSIGN    333--IF        336--ASSIGN    337<<ASSIGN    342<<ASSIGN
OCS_ERRMSGB.TYPE
       256**DCL       320<<ASSIGN    387<<ASSIGN    456<<ASSIGN    505<<ASSIGN    517<<ASSIGN    524<<ASSIGN
OCS_ERRMSGC.SIZE_TEXT
       256**DCL       307<<ASSIGN    327<<ASSIGN    336<<ASSIGN    341<<ASSIGN
OCS_KSIZE
       251**DCL       383>>IF        418>>ASSIGN    420>>DOINDEX   423>>ASSIGN    429>>ASSIGN
OCS_LEXEMES.MAX
       258**DCL       258--REDEF
OCS_LEXEMES.MIN
       258**DCL       258--REDEF
OCS_STRUCTURE
       251**DCL       251--REDEF
PCB_HI_CHAR
        23**DCL       383>>IF        388>>ASSIGN    391>>ASSIGN    421>>IF        435>>IF        435>>IF
       446>>IF        448>>ASSIGN    457>>ASSIGN    472>>ASSIGN    493>>ASSIGN    506>>ASSIGN    518>>ASSIGN
       525>>ASSIGN
PTR$
        21**DCL        19--PROC      333>>IF        337>>ASSIGN    337>>ASSIGN    341>>ASSIGN    342>>ASSIGN
       342>>ASSIGN    391>>ASSIGN    394>>DOWHILE   417>>ASSIGN    435>>IF        446>>IF        448>>ASSIGN
       472>>ASSIGN    493>>ASSIGN
PUTITIN
       280**PROC      402--CALL      455--CALL      504--CALL      516--CALL
SEND$ IN PROCEDURE PUTITIN
       283**DCL       280--PROC      287>>ASSIGN    296>>ASSIGN
SIZEC_TEXT
       268**DCL       265--IMP-SIZ   287<<ASSIGN    290>>IF        293<<ASSIGN    298>>CALLBLT   304>>CALLBLT
       304>>CALLBLT   307>>ASSIGN
SSTART$ IN PROCEDURE PUTITIN
       282**DCL       280--PROC      287>>ASSIGN    288>>ASSIGN
START$
       269**DCL       417<<ASSIGN    418>>ASSIGN    425>>IF        425>>IF        431<<ASSIGN    431>>ASSIGN
PL6.E3A0      #003=OCS$ANLZ File=OCS$SYNTAX.:E05TSI                              WED 07/30/97 04:07 Page:221  
       435>>IF        440>>ASSIGN    446>>IF        448<<ASSIGN    455<>CALL      495>>DOWHILE   501>>IF
       504<>CALL
TEXTC.COUNT
       262**DCL       263--IMP-SIZ   333>>IF        337>>ASSIGN    341>>ASSIGN    342>>ASSIGN
TEXTC.TEXT
       263**DCL       337>>ASSIGN    342>>ASSIGN

PL6.E3A0      #004=OCS$FAILURES File=OCS$SYNTAX.:E05TSI                          WED 07/30/97 04:07 Page:222  
     1415        1        /*M* OCS$FAILURES Intercepts parser failure nodes to initialize
     1416        2                  forced data */
     1417        3        /*T***********************************************************/
     1418        4        /*T*                                                         */
     1419        5        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
     1420        6        /*T*                                                         */
     1421        7        /*T***********************************************************/
     1422        8        %SET LISTSUB='1'B;
     1423        9        /*
     1424       10         ###    ###    ###    #   #####   ###    ###   #      #   #  ####   #####   ###
     1425       11        #   #  #   #  #   #  ###  #      #   #    #    #      #   #  #   #  #      #   #
     1426       12        #   #  #      #     # #   #      #   #    #    #      #   #  #   #  #      #
     1427       13        #   #  #       ###   ###  ####   #####    #    #      #   #  ####   ####    ###
     1428       14        #   #  #          #   # # #      #   #    #    #      #   #  # #    #          #
     1429       15        #   #  #   #  #   #  ###  #      #   #    #    #      #   #  #  #   #      #   #
     1430       16         ###    ###    ###    #   #      #   #   ###   #####   ###   #   #  #####   ###
     1431       17                                                                   */
     1432       18                                                /**/
     1433       19                                                /**/
     1434       20        OCS$FAILURES: PROC (XU$PARAM);
     1435       21                                                /**/
     1436       22                                                /**/
     1437       23        %INCLUDE XU_MACRO_C;
     1438     3129        %INCLUDE XU_SUBS_C;
     1439     3221                                                /**/
     1440     3222                                                /**/
     1441     3223             %P$PCB         (NAME=OC_PCB,
     1442     3224                                 STCLASS="SYMREF");
     1443     3425                                                /**/
     1444     3426             %P$NODE        (NAME=P$NODE,
     1445     3427                                 STCLASS="BASED");
     1446     3521                                                /**/
     1447     3522             %G$D           (NAME=G$D,
     1448     3523                                 STCLASS="BASED");
     1449     3619                                                /**/
     1450     3620             %PARSE$OUT;
     1451     3665                                                /**/
PL6.E3A0      #004=OCS$FAILURES File=OCS$SYNTAX.:E05TSI                          WED 07/30/97 04:07 Page:223  
     1452     3666             %PARSE$SYM;
     1453     3704                                                /**/
     1454     3705             %P$LIT         (NAME=P$LIT,
     1455     3706                                 STCLASS="BASED",
     1456     3707                                 LEN="P$LIT.COUNT");
     1457     3760                                                /**/
     1458     3761        %EJECT;
PL6.E3A0      #004=OCS$FAILURES File=OCS$SYNTAX.:E05TSI                          WED 07/30/97 04:07 Page:224  
     1459     3762                                                /**/
     1460     3763                                           /* Create "mask" templates to store
     1461     3764                                                and manipulate various sized
     1462     3765                                                fields under pointer control */
     1463     3766    1   DCL OCS$T1 BASED CHAR(1) CALIGNED;
     1464     3767    1   DCL OCS$T2 BASED CHAR(2) CALIGNED;
     1465     3768    1   DCL OCS$T3 BASED CHAR(3) CALIGNED;
     1466     3769    1   DCL OCS$T4 BASED CHAR(4) CALIGNED;
     1467     3770    1   DCL OCS$T6 BASED CHAR(6) CALIGNED;
     1468     3771    1   DCL OCS$T8 BASED CHAR(8) CALIGNED;
     1469     3772    1   DCL OCS$T12 BASED CHAR(12) CALIGNED;
     1470     3773                                                /**/
     1471     3774    1   DCL 1 OCS$TN BASED CALIGNED,
     1472     3775    1            2 COUNT UBIN BYTE CALIGNED,
     1473     3776    1            2 TEXT CHAR(OCS$TN.COUNT) CALIGNED;
     1474     3777                                                /**/
     1475     3778    1   DCL OCS$D1 BASED UBIN BYTE CALIGNED;
     1476     3779    1   DCL OCS$D2 BASED UBIN HALF CALIGNED;
     1477     3780    1   DCL OCS$D3 BASED UBIN(27) CALIGNED;
     1478     3781    1   DCL OCS$D4 BASED UBIN WORD CALIGNED;
     1479     3782                                                /**/
     1480     3783    1   DCL OCS$DS1 BASED SBIN BYTE CALIGNED;
     1481     3784    1   DCL OCS$DS2 BASED SBIN HALF CALIGNED;
     1482     3785    1   DCL OCS$DS3 BASED SBIN(27) CALIGNED;
     1483     3786    1   DCL OCS$DS4 BASED SBIN WORD CALIGNED;
     1484     3787                                                /**/
     1485     3788        %EJECT;
PL6.E3A0      #004=OCS$FAILURES File=OCS$SYNTAX.:E05TSI                          WED 07/30/97 04:07 Page:225  
     1486     3789                                                /**/
     1487     3790    1   DCL X$GETSPACE ENTRY(3);
     1488     3791    1   DCL OCS$NCODE ENTRY(1);
     1489     3792                                                /**/
     1490     3793             %PARSE$PARAM   (NAME=XU$PARAM);
     1491     3874                                                /**/
     1492     3875        %PLIST;
     1493     3876                                                /**/
     1494     3877    1   DCL SIZE_PARSEB UBIN WORD ALIGNED STATIC;
     1495     3878    1   DCL I UBIN WORD ALIGNED STATIC;
     1496     3879    1   DCL MAX_ UBIN WORD ALIGNED STATIC;
     1497     3880    1   DCL INDEX_ UBIN WORD ALIGNED STATIC;
     1498     3881    1   DCL OCS_PTR$ PTR STATIC INIT(ADDR(I));
     1499     3882    1   DCL OCS_PTRO$ PTR STATIC;
     1500     3883    1   DCL CVSN_ UBIN WORD STATIC;
     1501     3884    1   DCL BLK$ PTR STATIC;
     1502     3885                                                /**/
     1503     3886    1   DCL OCS_CODE_ STATIC SYMDEF UBIN WORD;
     1504     3887    1   DCL OCS_NODE$ STATIC SYMDEF PTR;
     1505     3888                                                /**/
     1506     3889        %INCLUDE OCI_SUBS_C;
     1507     3987        %INCLUDE CP_6;
     1508     4068        %INCLUDE OC_DAT_R;
     1509     4229                                                /**/
     1510     4230        %INCLUDE OCS_SUBS_C;
     1511     4447                                                /**/
     1512     4448        %INCLUDE OC_SUBS_C;
     1513     5179                                                /**/
     1514     5180        %INCLUDE OCS_DATA_R;
     1515     5197                                                /**/
     1516     5198        %EJECT;
PL6.E3A0      #004=OCS$FAILURES File=OCS$SYNTAX.:E05TSI                          WED 07/30/97 04:07 Page:226  
     1517     5199        /*
     1518     5200                  Begin  O C S $ F A I L U R E S
     1519     5201                                                                      */
     1520     5202    1        IF XU$PARAM.TYPE ~= %FAIL#
     1521     5203    1        THEN RETURN;
     1522     5204                                                /**/
     1523     5205                                           /* Calculate the SIZEW of a PARSE$BLK
     1524     5206                                                that only has 1 TEXTC word */
     1525     5207                                                /**/
     1526     5208    1        SIZE_PARSEB = POFFW(ADDR(OCS_PTR$->OUT$SYM.COUNT),
     1527     5209    1             ADDR(OCS_PTR$->OUT$SYM.TEMP));
     1528     5210                                                /**/
     1529     5211                                                /**/
     1530     5212    1        CALL X$GETSPACE (SIZE_PARSEB, BLK$, XU$PARAM.GLOBAL$->G$D);
     1531     5213                                                /**/
     1532     5214    1        BLK$->OUT$BLK.CODE = XU$PARAM.NODE$->P$NODE.CODE;
     1533     5215    1        BLK$->OUT$BLK.CPOS = XU$PARAM.CHARPOS;
     1534     5216    1        BLK$->OUT$BLK.NDTYPE = %KONCAT#;
     1535     5217    1        BLK$->OUT$BLK.NSUBLKS = 1;
     1536     5218    1        OCS_PTRO$ = BLK$;
     1537     5219    1        SIZE_PARSEB = SIZE_PARSEB + 1;
     1538     5220                                                /**/
     1539     5221        %EJECT;
PL6.E3A0      #004=OCS$FAILURES File=OCS$SYNTAX.:E05TSI                          WED 07/30/97 04:07 Page:227  
     1540     5222                                                /**/
     1541     5223                                           /* Search input node for first non-
     1542     5224                                                intrinsic node type, and use
     1543     5225                                                its code as the code of the
     1544     5226                                                lexeme to build a phoney output
     1545     5227                                                node for                  */
     1546     5228    1        OCS_DFW_LEVEL = '0'B /*FALSE#*/;
     1547     5229    1        OCS_LEVEL_MARK = 0;
     1548     5230    1        OCS_CODE_ = 0;
     1549     5231    1        OCS_NODE$ = ADDR(NIL);
     1550     5232    1        CALL OCS$NCODE ( XU$PARAM.NODE$ );
     1551     5233                                                /**/
     1552     5234    1        IF OCS_CODE_ = 0
     1553     5235    1        THEN
     1554     5236    1             RETURN;
     1555     5237                                                /**/
     1556     5238    1        IF OCS_CODE_ =  971 /* XNOT# */
     1557     5239    1        THEN
     1558     5240    1             OCS_CODE_ = 909 /* XDEC9# */;           /* TREAT LIKE DEICMAL */
     1559     5241                                                /**/
     1560     5242    1        CVSN_ = 0;
     1561     5243                                                /**/
     1562     5244    2        DO I = 0 TO 49 /* MAX_LEXEMES# */;
     1563     5245    2             IF OCS_CODE_ = OCS_LEXEMES.CODE(I)
     1564     5246    2             THEN
     1565     5247    3             DO;
     1566     5248    3                  CVSN_ = OCS_LEXEMES.CVSN(I);
     1567     5249    3                  INDEX_ = I;
     1568     5250    3                  I = 49 /* MAX_LEXEMES# */ + 1;    /* to exit loop */
     1569     5251    3                END;
     1570     5252    2           END;
     1571     5253                                                /**/
     1572     5254    1        IF CVSN_ = 0
     1573     5255    1        THEN
     1574     5256    1             RETURN;
     1575     5257                                                /**/
     1576     5258        %EJECT;
PL6.E3A0      #004=OCS$FAILURES File=OCS$SYNTAX.:E05TSI                          WED 07/30/97 04:07 Page:228  
     1577     5259                                                /**/
     1578     5260                                           /* Process the detected node here
     1579     5261                                                There are two possibilities:
     1580     5262                                                a) The detected node has no
     1581     5263                                                     initializing value, and
     1582     5264                                                     the output block should
     1583     5265                                                     get the initializing value
     1584     5266                                                     from the default table
     1585     5267                                                b) The node was determined to
     1586     5268                                                     have an initializing value
     1587     5269                                                     which should be moved to
     1588     5270                                                     the output block.
     1589     5271                                                                          */
     1590     5272    1        IF OCS_NODE$ = ADDR(NIL)
     1591     5273    1        THEN
     1592     5274    2        DO;
     1593     5275    2             CALL X$GETSPACE (SIZE_PARSEB, BLK$, XU$PARAM.GLOBAL$ -> G$D);
     1594     5276                                                /**/
     1595     5277                                                /**/
     1596     5278                                           /* DO CASE ON CONVERSION VALUE
     1597     5279                                                (special handling is required
     1598     5280                                                for TXTC...
     1599     5281                                                others just get INITIAL values */
     1600     5282    3             DO CASE ( CVSN_ );
     1601     5283                                                /**/
     1602     5284    3             CASE ( 1 /* TTXT# */,
     1603     5285    3                  3 /* TDEC# */,
     1604     5286    3                  4 /* TDECS# */,
     1605     5287    3                  5 /* TOCT# */,
     1606     5288    3                  6 /* THEX# */,
     1607     5289    3                  9 /* TNUL# */,
     1608     5290    3                  7 /* TBLK# */,
     1609     5291    3                  10 /* TXWSN# */,
     1610     5292    3                  11 /* TXDEV# */ );
     1611     5293                                                /**/
     1612     5294    3                BLK$->OUT$SYM.TEXTC$ = ADDR(BLK$->OUT$SYM.COUNT);
     1613     5295    3                BLK$->OUT$SYM.COUNT = 1;
PL6.E3A0      #004=OCS$FAILURES File=OCS$SYNTAX.:E05TSI                          WED 07/30/97 04:07 Page:229  
     1614     5296    3                BLK$->OUT$SYM.TEXT = OCS_LEXEMES.INITIAL(INDEX_);
     1615     5297                                                /**/
     1616     5298    3             CASE ( 2 /* TTXTC# */ );
     1617     5299    3                BLK$->OUT$SYM.TEXTC$ = ADDR(BLK$->OUT$SYM.COUNT);
     1618     5300    3                BLK$->OUT$SYM.COUNT = 0;
     1619     5301                                                /**/
     1620     5302    3             END;                          /* DO CASE CVSN_ */
     1621     5303                                                /**/
     1622     5304    2           END;                          /* DO IF OCS_NODE$ = ADDR(NIL)
     1623     5305                                           (Meaning no literal node found
     1624     5306                                            on input tree search          */
     1625     5307                                                /**/
     1626     5308    1        ELSE
     1627     5309    2        DO;                           /* There was a detectable literal
     1628     5310                                                node in the input tree */
     1629     5311    2             I = OCS_NODE$ -> P$LIT.COUNT / 4 /* BYTESPERWD# */;
     1630     5312    2             SIZE_PARSEB = SIZE_PARSEB + I;
     1631     5313                                                /**/
     1632     5314    2             CALL X$GETSPACE (SIZE_PARSEB, BLK$, XU$PARAM.GLOBAL$ -> G$D);
     1633     5315                                                /**/
     1634     5316    2             BLK$ -> OUT$SYM.TEXTC$ = ADDR(BLK$ -> OUT$SYM.COUNT);
     1635     5317    2             BLK$ -> OUT$SYM.COUNT = OCS_NODE$ -> P$LIT.COUNT;
     1636     5318    2             BLK$ -> OUT$SYM.TEXT = OCS_NODE$ -> P$LIT.TEXT;
     1637     5319                                                /**/
     1638     5320    2           END;                            /* DO IF OCS_NODE$ ~= ADDR(NIL) */
     1639     5321                                                /**/
     1640     5322        %EJECT;
PL6.E3A0      #004=OCS$FAILURES File=OCS$SYNTAX.:E05TSI                          WED 07/30/97 04:07 Page:230  
     1641     5323                                                /**/
     1642     5324    1        BLK$->OUT$SYM.CODE = OCS_CODE_;
     1643     5325    1        BLK$->OUT$SYM.CPOS = XU$PARAM.CHARPOS;
     1644     5326    1        BLK$->OUT$SYM.NDTYPE = %ALNUM#;
     1645     5327    1        BLK$->OUT$SYM.NSUBLKS = 1;
     1646     5328    1        OCS_PTRO$->OUT$BLK.SUBLK$(0) = BLK$;
     1647     5329                                                /**/
     1648     5330    1        XU$PARAM.ACCEPT = '1'B /*TRUE#*/;
     1649     5331    1        XU$PARAM.OUT$ = OCS_PTRO$;
     1650     5332                                                /**/
     1651     5333    1        RETURN;
     1652     5334                                                /**/
     1653     5335    1   END OCS$FAILURES;
     1654     5336        %EOD;

PL6.E3A0      #004=OCS$FAILURES File=OCS$SYNTAX.:E05TSI                          WED 07/30/97 04:07 Page:231  
--  Include file information  --

   OCS_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   OC_SUBS_C.:E05TOU  is referenced.
   OCS_SUBS_C.:E05TOU  is referenced.
   OC$MESSHD_C.:E05TOU  is referenced.
   OC_DAT_R.:E05TOU  cannot be made into a system file and is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   OCI_SUBS_C.:E05TOU  is referenced.
   XU_SUBS_C.:E05TOU  is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure OCS$FAILURES.

   Procedure OCS$FAILURES requires 196 words for executable code.
   Procedure OCS$FAILURES requires 8 words of local(AUTO) storage.

PL6.E3A0      #004=OCS$FAILURES File=OCS$SYNTAX.:E05TSI                          WED 07/30/97 04:07 Page:232  

 Object Unit name= OCS$FAILURES                               File name= OCS$SYNTAX.:E05TOU
 UTS= JUL 30 '97 04:07:55.32 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Data  even  none    10     12  OCS$FAILURES
    1   DCB   even  none     0      0  M$UC
    2   Proc  even  none   196    304  OCS$FAILURES
    3  RoData even  none     2      2  OCS$FAILURES

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     2      0   yes            yes      Std        1  OCS$FAILURES

  ****  Data defs  ****

 Sect OctLoc  Name                           Sect OctLoc  Name
    0     10  OCS_CODE_                          0     11  OCS_NODE$

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       3 X$GETSPACE
         yes           Std       1 OCS$NCODE
                       nStd      0 X66_AUTO_1
                       nStd      0 X66_ARET
                       Std       0 B_CONSPOOL_D
PL6.E3A0      #004=OCS$FAILURES File=OCS$SYNTAX.:E05TSI                          WED 07/30/97 04:07 Page:233  

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                                  OC_INTMSG                             OC_MESSBUF
     OC_MSGBUFFER                          OC_PARAM                              OC_CONSOLE$
     OC_DIR                                OC_INTBIT                             OC_MASK
     OCS_STRUCTURE                         OCS_LEVEL_MARK                        OCS_DFW_LEVEL
     OCS_LEXEMES                           B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
PL6.E3A0      #004=OCS$FAILURES File=OCS$SYNTAX.:E05TSI                          WED 07/30/97 04:07 Page:234  


     1415        1        /*M* OCS$FAILURES Intercepts parser failure nodes to initialize
     1416        2                  forced data */
     1417        3        /*T***********************************************************/
     1418        4        /*T*                                                         */
     1419        5        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
     1420        6        /*T*                                                         */
     1421        7        /*T***********************************************************/
     1422        8        %SET LISTSUB='1'B;
     1423        9        /*
     1424       10         ###    ###    ###    #   #####   ###    ###   #      #   #  ####   #####   ###
     1425       11        #   #  #   #  #   #  ###  #      #   #    #    #      #   #  #   #  #      #   #
     1426       12        #   #  #      #     # #   #      #   #    #    #      #   #  #   #  #      #
     1427       13        #   #  #       ###   ###  ####   #####    #    #      #   #  ####   ####    ###
     1428       14        #   #  #          #   # # #      #   #    #    #      #   #  # #    #          #
     1429       15        #   #  #   #  #   #  ###  #      #   #    #    #      #   #  #  #   #      #   #
     1430       16         ###    ###    ###    #   #      #   #   ###   #####   ###   #   #  #####   ###
     1431       17                                                                   */
     1432       18                                                /**/
     1433       19                                                /**/
     1434       20        OCS$FAILURES: PROC (XU$PARAM);

     20  2 000000   000000 700200 xent  OCS$FAILURES TSX0  ! X66_AUTO_1
         2 000001   000010 000001                    ZERO    8,1

     1435       21                                                /**/
     1436       22                                                /**/
     1437       23        %INCLUDE XU_MACRO_C;
     1438     3129        %INCLUDE XU_SUBS_C;
     1439     3221                                                /**/
     1440     3222                                                /**/
     1441     3223             %P$PCB         (NAME=OC_PCB,
     1442     3224                                 STCLASS="SYMREF");
     1443     3425                                                /**/
     1444     3426             %P$NODE        (NAME=P$NODE,
     1445     3427                                 STCLASS="BASED");
     1446     3521                                                /**/
PL6.E3A0      #004=OCS$FAILURES File=OCS$SYNTAX.:E05TSI                          WED 07/30/97 04:07 Page:235  
     1447     3522             %G$D           (NAME=G$D,
     1448     3523                                 STCLASS="BASED");
     1449     3619                                                /**/
     1450     3620             %PARSE$OUT;
     1451     3665                                                /**/
     1452     3666             %PARSE$SYM;
     1453     3704                                                /**/
     1454     3705             %P$LIT         (NAME=P$LIT,
     1455     3706                                 STCLASS="BASED",
     1456     3707                                 LEN="P$LIT.COUNT");
     1457     3760                                                /**/
     1458     3761        %EJECT;
PL6.E3A0      #004=OCS$FAILURES File=OCS$SYNTAX.:E05TSI                          WED 07/30/97 04:07 Page:236  
     1459     3762                                                /**/
     1460     3763                                           /* Create "mask" templates to store
     1461     3764                                                and manipulate various sized
     1462     3765                                                fields under pointer control */
     1463     3766    1   DCL OCS$T1 BASED CHAR(1) CALIGNED;
     1464     3767    1   DCL OCS$T2 BASED CHAR(2) CALIGNED;
     1465     3768    1   DCL OCS$T3 BASED CHAR(3) CALIGNED;
     1466     3769    1   DCL OCS$T4 BASED CHAR(4) CALIGNED;
     1467     3770    1   DCL OCS$T6 BASED CHAR(6) CALIGNED;
     1468     3771    1   DCL OCS$T8 BASED CHAR(8) CALIGNED;
     1469     3772    1   DCL OCS$T12 BASED CHAR(12) CALIGNED;
     1470     3773                                                /**/
     1471     3774    1   DCL 1 OCS$TN BASED CALIGNED,
     1472     3775    1            2 COUNT UBIN BYTE CALIGNED,
     1473     3776    1            2 TEXT CHAR(OCS$TN.COUNT) CALIGNED;
     1474     3777                                                /**/
     1475     3778    1   DCL OCS$D1 BASED UBIN BYTE CALIGNED;
     1476     3779    1   DCL OCS$D2 BASED UBIN HALF CALIGNED;
     1477     3780    1   DCL OCS$D3 BASED UBIN(27) CALIGNED;
     1478     3781    1   DCL OCS$D4 BASED UBIN WORD CALIGNED;
     1479     3782                                                /**/
     1480     3783    1   DCL OCS$DS1 BASED SBIN BYTE CALIGNED;
     1481     3784    1   DCL OCS$DS2 BASED SBIN HALF CALIGNED;
     1482     3785    1   DCL OCS$DS3 BASED SBIN(27) CALIGNED;
     1483     3786    1   DCL OCS$DS4 BASED SBIN WORD CALIGNED;
     1484     3787                                                /**/
     1485     3788        %EJECT;
PL6.E3A0      #004=OCS$FAILURES File=OCS$SYNTAX.:E05TSI                          WED 07/30/97 04:07 Page:237  
     1486     3789                                                /**/
     1487     3790    1   DCL X$GETSPACE ENTRY(3);
     1488     3791    1   DCL OCS$NCODE ENTRY(1);
     1489     3792                                                /**/
     1490     3793             %PARSE$PARAM   (NAME=XU$PARAM);
     1491     3874                                                /**/
     1492     3875        %PLIST;
     1493     3876                                                /**/
     1494     3877    1   DCL SIZE_PARSEB UBIN WORD ALIGNED STATIC;
     1495     3878    1   DCL I UBIN WORD ALIGNED STATIC;
     1496     3879    1   DCL MAX_ UBIN WORD ALIGNED STATIC;
     1497     3880    1   DCL INDEX_ UBIN WORD ALIGNED STATIC;
     1498     3881    1   DCL OCS_PTR$ PTR STATIC INIT(ADDR(I));
     1499     3882    1   DCL OCS_PTRO$ PTR STATIC;
     1500     3883    1   DCL CVSN_ UBIN WORD STATIC;
     1501     3884    1   DCL BLK$ PTR STATIC;
     1502     3885                                                /**/
     1503     3886    1   DCL OCS_CODE_ STATIC SYMDEF UBIN WORD;
     1504     3887    1   DCL OCS_NODE$ STATIC SYMDEF PTR;
     1505     3888                                                /**/
     1506     3889        %INCLUDE OCI_SUBS_C;
     1507     3987        %INCLUDE CP_6;
     1508     4068        %INCLUDE OC_DAT_R;
     1509     4229                                                /**/
     1510     4230        %INCLUDE OCS_SUBS_C;
     1511     4447                                                /**/
     1512     4448        %INCLUDE OC_SUBS_C;
     1513     5179                                                /**/
     1514     5180        %INCLUDE OCS_DATA_R;
     1515     5197                                                /**/
     1516     5198        %EJECT;
PL6.E3A0      #004=OCS$FAILURES File=OCS$SYNTAX.:E05TSI                          WED 07/30/97 04:07 Page:238  
     1517     5199        /*
     1518     5200                  Begin  O C S $ F A I L U R E S
     1519     5201                                                                      */
     1520     5202    1        IF XU$PARAM.TYPE ~= %FAIL#

   5202  2 000002   200003 470500                    LDP0    @XU$PARAM,,AUTO
         2 000003   000000 236100                    LDQ     0,,PR0
         2 000004   777000 376003                    ANQ     -512,DU
         2 000005   003000 116003                    CMPQ    1536,DU
         2 000006   000010 600000 2                  TZE     s:5208

     1521     5203    1        THEN RETURN;

   5203  2 000007   000000 702200 xent               TSX2  ! X66_ARET

     1522     5204                                                /**/
     1523     5205                                           /* Calculate the SIZEW of a PARSE$BLK
     1524     5206                                                that only has 1 TEXTC word */
     1525     5207                                                /**/
     1526     5208    1        SIZE_PARSEB = POFFW(ADDR(OCS_PTR$->OUT$SYM.COUNT),

   5208  2 000010   000004 236000 0                  LDQ     OCS_PTR$
         2 000011   000022 772000                    QRL     18
         2 000012   200004 756100                    STQ     @XU$PARAM+1,,AUTO
         2 000013   000004 236000 0                  LDQ     OCS_PTR$
         2 000014   000004 036003                    ADLQ    4,DU
         2 000015   000022 772000                    QRL     18
         2 000016   200004 136100                    SBLQ    @XU$PARAM+1,,AUTO
         2 000017   000000 756000 0                  STQ     SIZE_PARSEB

     1527     5209    1             ADDR(OCS_PTR$->OUT$SYM.TEMP));
     1528     5210                                                /**/
     1529     5211                                                /**/
     1530     5212    1        CALL X$GETSPACE (SIZE_PARSEB, BLK$, XU$PARAM.GLOBAL$->G$D);

   5212  2 000020   000003 471500                    LDP1    3,,PR0
         2 000021   200006 451500                    STP1    @XU$PARAM+3,,AUTO
PL6.E3A0      #004=OCS$FAILURES File=OCS$SYNTAX.:E05TSI                          WED 07/30/97 04:07 Page:239  
         2 000022   000000 237000 3                  LDAQ    0
         2 000023   200004 757100                    STAQ    @XU$PARAM+1,,AUTO
         2 000024   200004 630500                    EPPR0   @XU$PARAM+1,,AUTO
         2 000025   000021 631400 xsym               EPPR1   B_VECTNIL+17
         2 000026   000000 701000 xent               TSX1    X$GETSPACE
         2 000027   000000 011000                    NOP     0

     1531     5213                                                /**/
     1532     5214    1        BLK$->OUT$BLK.CODE = XU$PARAM.NODE$->P$NODE.CODE;

   5214  2 000030   200003 470500                    LDP0    @XU$PARAM,,AUTO
         2 000031   000001 471500                    LDP1    1,,PR0
         2 000032   100000 720100                    LXL0    0,,PR1
         2 000033   177777 360003                    ANX0    65535,DU
         2 000034   000007 473400 0                  LDP3    BLK$
         2 000035   300000 440100                    SXL0    0,,PR3

     1533     5215    1        BLK$->OUT$BLK.CPOS = XU$PARAM.CHARPOS;

   5215  2 000036   000007 471400 0                  LDP1    BLK$
         2 000037   000004 235100                    LDA     4,,PR0
         2 000040   100002 755100                    STA     2,,PR1

     1534     5216    1        BLK$->OUT$BLK.NDTYPE = %KONCAT#;

   5216  2 000041   000007 471400 0                  LDP1    BLK$
         2 000042   000002 236003                    LDQ     2,DU
         2 000043   100000 752110                    STCQ    0,'10'O,PR1

     1535     5217    1        BLK$->OUT$BLK.NSUBLKS = 1;

   5217  2 000044   000001 220003                    LDX0    1,DU
         2 000045   000007 471400 0                  LDP1    BLK$
         2 000046   100001 740100                    STX0    1,,PR1

     1536     5218    1        OCS_PTRO$ = BLK$;

PL6.E3A0      #004=OCS$FAILURES File=OCS$SYNTAX.:E05TSI                          WED 07/30/97 04:07 Page:240  
   5218  2 000047   000007 236000 0                  LDQ     BLK$
         2 000050   000005 756000 0                  STQ     OCS_PTRO$

     1537     5219    1        SIZE_PARSEB = SIZE_PARSEB + 1;

   5219  2 000051   000000 235000 0                  LDA     SIZE_PARSEB
         2 000052   000001 035007                    ADLA    1,DL
         2 000053   000000 755000 0                  STA     SIZE_PARSEB

     1538     5220                                                /**/
     1539     5221        %EJECT;
PL6.E3A0      #004=OCS$FAILURES File=OCS$SYNTAX.:E05TSI                          WED 07/30/97 04:07 Page:241  
     1540     5222                                                /**/
     1541     5223                                           /* Search input node for first non-
     1542     5224                                                intrinsic node type, and use
     1543     5225                                                its code as the code of the
     1544     5226                                                lexeme to build a phoney output
     1545     5227                                                node for                  */
     1546     5228    1        OCS_DFW_LEVEL = '0'B /*FALSE#*/;

   5228  2 000054   000000 450000 xsym               STZ     OCS_DFW_LEVEL

     1547     5229    1        OCS_LEVEL_MARK = 0;

   5229  2 000055   000000 450000 xsym               STZ     OCS_LEVEL_MARK

     1548     5230    1        OCS_CODE_ = 0;

   5230  2 000056   000010 450000 0                  STZ     OCS_CODE_

     1549     5231    1        OCS_NODE$ = ADDR(NIL);

   5231  2 000057   000001 236000 xsym               LDQ     B_VECTNIL+1
         2 000060   000011 756000 0                  STQ     OCS_NODE$

     1550     5232    1        CALL OCS$NCODE ( XU$PARAM.NODE$ );

   5232  2 000061   200003 236100                    LDQ     @XU$PARAM,,AUTO
         2 000062   000001 036003                    ADLQ    1,DU
         2 000063   200004 756100                    STQ     @XU$PARAM+1,,AUTO
         2 000064   200004 630500                    EPPR0   @XU$PARAM+1,,AUTO
         2 000065   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 000066   000000 701000 xent               TSX1    OCS$NCODE
         2 000067   000000 011000                    NOP     0

     1551     5233                                                /**/
     1552     5234    1        IF OCS_CODE_ = 0

   5234  2 000070   000010 235000 0                  LDA     OCS_CODE_
PL6.E3A0      #004=OCS$FAILURES File=OCS$SYNTAX.:E05TSI                          WED 07/30/97 04:07 Page:242  
         2 000071   000073 601000 2                  TNZ     s:5238

     1553     5235    1        THEN
     1554     5236    1             RETURN;

   5236  2 000072   000000 702200 xent               TSX2  ! X66_ARET

     1555     5237                                                /**/
     1556     5238    1        IF OCS_CODE_ =  971 /* XNOT# */

   5238  2 000073   001713 115007                    CMPA    971,DL
         2 000074   000077 601000 2                  TNZ     s:5242

     1557     5239    1        THEN
     1558     5240    1             OCS_CODE_ = 909 /* XDEC9# */;           /* TREAT LIKE DEICMAL */

   5240  2 000075   001615 236007                    LDQ     909,DL
         2 000076   000010 756000 0                  STQ     OCS_CODE_

     1559     5241                                                /**/
     1560     5242    1        CVSN_ = 0;

   5242  2 000077   000006 450000 0                  STZ     CVSN_

     1561     5243                                                /**/
     1562     5244    2        DO I = 0 TO 49 /* MAX_LEXEMES# */;

   5244  2 000100   000001 450000 0                  STZ     I

     1563     5245    2             IF OCS_CODE_ = OCS_LEXEMES.CODE(I)

   5245  2 000101   000001 235000 0                  LDA     I
         2 000102   000002 735000                    ALS     2
         2 000103   000000 236005 xsym               LDQ     OCS_LEXEMES,AL
         2 000104   777777 376007                    ANQ     -1,DL
         2 000105   000010 116000 0                  CMPQ    OCS_CODE_
         2 000106   000117 601000 2                  TNZ     s:5252
PL6.E3A0      #004=OCS$FAILURES File=OCS$SYNTAX.:E05TSI                          WED 07/30/97 04:07 Page:243  

     1564     5246    2             THEN
     1565     5247    3             DO;

     1566     5248    3                  CVSN_ = OCS_LEXEMES.CVSN(I);

   5248  2 000107   000000 236005 xsym               LDQ     OCS_LEXEMES,AL
         2 000110   000022 772000                    QRL     18
         2 000111   000777 376007                    ANQ     511,DL
         2 000112   000006 756000 0                  STQ     CVSN_

     1567     5249    3                  INDEX_ = I;

   5249  2 000113   000001 235000 0                  LDA     I
         2 000114   000003 755000 0                  STA     INDEX_

     1568     5250    3                  I = 49 /* MAX_LEXEMES# */ + 1;    /* to exit loop */

   5250  2 000115   000062 235007                    LDA     50,DL
         2 000116   000001 755000 0                  STA     I

     1569     5251    3                END;

     1570     5252    2           END;

   5252  2 000117   000001 235000 0                  LDA     I
         2 000120   000001 035007                    ADLA    1,DL
         2 000121   000001 755000 0                  STA     I
         2 000122   000062 115007                    CMPA    50,DL
         2 000123   000101 602000 2                  TNC     s:5245

     1571     5253                                                /**/
     1572     5254    1        IF CVSN_ = 0

   5254  2 000124   000006 236000 0                  LDQ     CVSN_
         2 000125   000127 601000 2                  TNZ     s:5272

PL6.E3A0      #004=OCS$FAILURES File=OCS$SYNTAX.:E05TSI                          WED 07/30/97 04:07 Page:244  
     1573     5255    1        THEN
     1574     5256    1             RETURN;

   5256  2 000126   000000 702200 xent               TSX2  ! X66_ARET

     1575     5257                                                /**/
     1576     5258        %EJECT;
PL6.E3A0      #004=OCS$FAILURES File=OCS$SYNTAX.:E05TSI                          WED 07/30/97 04:07 Page:245  
     1577     5259                                                /**/
     1578     5260                                           /* Process the detected node here
     1579     5261                                                There are two possibilities:
     1580     5262                                                a) The detected node has no
     1581     5263                                                     initializing value, and
     1582     5264                                                     the output block should
     1583     5265                                                     get the initializing value
     1584     5266                                                     from the default table
     1585     5267                                                b) The node was determined to
     1586     5268                                                     have an initializing value
     1587     5269                                                     which should be moved to
     1588     5270                                                     the output block.
     1589     5271                                                                          */
     1590     5272    1        IF OCS_NODE$ = ADDR(NIL)

   5272  2 000127   000011 236000 0                  LDQ     OCS_NODE$
         2 000130   000001 116000 xsym               CMPQ    B_VECTNIL+1
         2 000131   000214 601000 2                  TNZ     s:5311

     1591     5273    1        THEN
     1592     5274    2        DO;

     1593     5275    2             CALL X$GETSPACE (SIZE_PARSEB, BLK$, XU$PARAM.GLOBAL$ -> G$D);

   5275  2 000132   200003 470500                    LDP0    @XU$PARAM,,AUTO
         2 000133   000003 471500                    LDP1    3,,PR0
         2 000134   200006 451500                    STP1    @XU$PARAM+3,,AUTO
         2 000135   000000 237000 3                  LDAQ    0
         2 000136   200004 757100                    STAQ    @XU$PARAM+1,,AUTO
         2 000137   200004 630500                    EPPR0   @XU$PARAM+1,,AUTO
         2 000140   000021 631400 xsym               EPPR1   B_VECTNIL+17
         2 000141   000000 701000 xent               TSX1    X$GETSPACE
         2 000142   000000 011000                    NOP     0

     1594     5276                                                /**/
     1595     5277                                                /**/
     1596     5278                                           /* DO CASE ON CONVERSION VALUE
PL6.E3A0      #004=OCS$FAILURES File=OCS$SYNTAX.:E05TSI                          WED 07/30/97 04:07 Page:246  
     1597     5279                                                (special handling is required
     1598     5280                                                for TXTC...
     1599     5281                                                others just get INITIAL values */
     1600     5282    3             DO CASE ( CVSN_ );

   5282  2 000143   000006 235000 0                  LDA     CVSN_
         2 000144   000014 115007                    CMPA    12,DL
         2 000145   000147 602005 2                  TNC     s:5282+4,AL
         2 000146   000257 710000 2                  TRA     s:5324
         2 000147   000213 710000 2                  TRA     s:5304
         2 000150   000163 710000 2                  TRA     s:5294
         2 000151   000204 710000 2                  TRA     s:5299
         2 000152   000163 710000 2                  TRA     s:5294
         2 000153   000163 710000 2                  TRA     s:5294
         2 000154   000163 710000 2                  TRA     s:5294
         2 000155   000163 710000 2                  TRA     s:5294
         2 000156   000163 710000 2                  TRA     s:5294
         2 000157   000213 710000 2                  TRA     s:5304
         2 000160   000163 710000 2                  TRA     s:5294
         2 000161   000163 710000 2                  TRA     s:5294
         2 000162   000163 710000 2                  TRA     s:5294

     1601     5283                                                /**/
     1602     5284    3             CASE ( 1 /* TTXT# */,

     1603     5285    3                  3 /* TDEC# */,
     1604     5286    3                  4 /* TDECS# */,
     1605     5287    3                  5 /* TOCT# */,
     1606     5288    3                  6 /* THEX# */,
     1607     5289    3                  9 /* TNUL# */,
     1608     5290    3                  7 /* TBLK# */,
     1609     5291    3                  10 /* TXWSN# */,
     1610     5292    3                  11 /* TXDEV# */ );
     1611     5293                                                /**/
     1612     5294    3                BLK$->OUT$SYM.TEXTC$ = ADDR(BLK$->OUT$SYM.COUNT);

   5294  2 000163   000007 236000 0                  LDQ     BLK$
PL6.E3A0      #004=OCS$FAILURES File=OCS$SYNTAX.:E05TSI                          WED 07/30/97 04:07 Page:247  
         2 000164   000004 036003                    ADLQ    4,DU
         2 000165   000007 470400 0                  LDP0    BLK$
         2 000166   000003 756100                    STQ     3,,PR0

     1613     5295    3                BLK$->OUT$SYM.COUNT = 1;

   5295  2 000167   000007 470400 0                  LDP0    BLK$
         2 000170   001000 236003                    LDQ     512,DU
         2 000171   000004 552140                    STBQ    4,'40'O,PR0

     1614     5296    3                BLK$->OUT$SYM.TEXT = OCS_LEXEMES.INITIAL(INDEX_);

   5296  2 000172   000007 470400 0                  LDP0    BLK$
         2 000173   000004 236100                    LDQ     4,,PR0
         2 000174   000033 772000                    QRL     27
         2 000175   000003 235000 0                  LDA     INDEX_
         2 000176   000004 735000                    ALS     4
         2 000177   000000 620006                    EAX0    0,QL
         2 000200   040140 100405                    MLR     fill='040'O
         2 000201   000003 200001 xsym               ADSC9   OCS_LEXEMES+3,A          cn=1,n=1
         2 000202   000004 200010                    ADSC9   4,,PR0                   cn=1,n=*X0
         2 000203   000257 710000 2                  TRA     s:5324

     1615     5297                                                /**/
     1616     5298    3             CASE ( 2 /* TTXTC# */ );

     1617     5299    3                BLK$->OUT$SYM.TEXTC$ = ADDR(BLK$->OUT$SYM.COUNT);

   5299  2 000204   000007 236000 0                  LDQ     BLK$
         2 000205   000004 036003                    ADLQ    4,DU
         2 000206   000007 470400 0                  LDP0    BLK$
         2 000207   000003 756100                    STQ     3,,PR0

     1618     5300    3                BLK$->OUT$SYM.COUNT = 0;

   5300  2 000210   000007 470400 0                  LDP0    BLK$
         2 000211   000000 236003                    LDQ     0,DU
PL6.E3A0      #004=OCS$FAILURES File=OCS$SYNTAX.:E05TSI                          WED 07/30/97 04:07 Page:248  
         2 000212   000004 552140                    STBQ    4,'40'O,PR0

     1619     5301                                                /**/
     1620     5302    3             END;                          /* DO CASE CVSN_ */

     1621     5303                                                /**/
     1622     5304    2           END;                          /* DO IF OCS_NODE$ = ADDR(NIL)

   5304  2 000213   000257 710000 2                  TRA     s:5324

     1623     5305                                           (Meaning no literal node found
     1624     5306                                            on input tree search          */
     1625     5307                                                /**/
     1626     5308    1        ELSE
     1627     5309    2        DO;                           /* There was a detectable literal

     1628     5310                                                node in the input tree */
     1629     5311    2             I = OCS_NODE$ -> P$LIT.COUNT / 4 /* BYTESPERWD# */;

   5311  2 000214   000011 470400 0                  LDP0    OCS_NODE$
         2 000215   000001 236100                    LDQ     1,,PR0
         2 000216   000033 772000                    QRL     27
         2 000217   000002 772000                    QRL     2
         2 000220   000001 756000 0                  STQ     I

     1630     5312    2             SIZE_PARSEB = SIZE_PARSEB + I;

   5312  2 000221   000000 036000 0                  ADLQ    SIZE_PARSEB
         2 000222   000000 756000 0                  STQ     SIZE_PARSEB

     1631     5313                                                /**/
     1632     5314    2             CALL X$GETSPACE (SIZE_PARSEB, BLK$, XU$PARAM.GLOBAL$ -> G$D);

   5314  2 000223   200003 471500                    LDP1    @XU$PARAM,,AUTO
         2 000224   100003 473500                    LDP3    3,,PR1
         2 000225   200006 453500                    STP3    @XU$PARAM+3,,AUTO
         2 000226   000000 237000 3                  LDAQ    0
PL6.E3A0      #004=OCS$FAILURES File=OCS$SYNTAX.:E05TSI                          WED 07/30/97 04:07 Page:249  
         2 000227   200004 757100                    STAQ    @XU$PARAM+1,,AUTO
         2 000230   200004 630500                    EPPR0   @XU$PARAM+1,,AUTO
         2 000231   000021 631400 xsym               EPPR1   B_VECTNIL+17
         2 000232   000000 701000 xent               TSX1    X$GETSPACE
         2 000233   000000 011000                    NOP     0

     1633     5315                                                /**/
     1634     5316    2             BLK$ -> OUT$SYM.TEXTC$ = ADDR(BLK$ -> OUT$SYM.COUNT);

   5316  2 000234   000007 236000 0                  LDQ     BLK$
         2 000235   000004 036003                    ADLQ    4,DU
         2 000236   000007 470400 0                  LDP0    BLK$
         2 000237   000003 756100                    STQ     3,,PR0

     1635     5317    2             BLK$ -> OUT$SYM.COUNT = OCS_NODE$ -> P$LIT.COUNT;

   5317  2 000240   000011 470400 0                  LDP0    OCS_NODE$
         2 000241   000007 471400 0                  LDP1    BLK$
         2 000242   000001 236100                    LDQ     1,,PR0
         2 000243   100004 552140                    STBQ    4,'40'O,PR1

     1636     5318    2             BLK$ -> OUT$SYM.TEXT = OCS_NODE$ -> P$LIT.TEXT;

   5318  2 000244   000007 470400 0                  LDP0    BLK$
         2 000245   000004 236100                    LDQ     4,,PR0
         2 000246   000033 772000                    QRL     27
         2 000247   000011 471400 0                  LDP1    OCS_NODE$
         2 000250   000000 620006                    EAX0    0,QL
         2 000251   100001 236100                    LDQ     1,,PR1
         2 000252   000033 772000                    QRL     27
         2 000253   000000 621006                    EAX1    0,QL
         2 000254   040140 100540                    MLR     fill='040'O
         2 000255   100001 200011                    ADSC9   1,,PR1                   cn=1,n=*X1
         2 000256   000004 200010                    ADSC9   4,,PR0                   cn=1,n=*X0

     1637     5319                                                /**/
     1638     5320    2           END;                            /* DO IF OCS_NODE$ ~= ADDR(NIL) */
PL6.E3A0      #004=OCS$FAILURES File=OCS$SYNTAX.:E05TSI                          WED 07/30/97 04:07 Page:250  

     1639     5321                                                /**/
     1640     5322        %EJECT;
PL6.E3A0      #004=OCS$FAILURES File=OCS$SYNTAX.:E05TSI                          WED 07/30/97 04:07 Page:251  
     1641     5323                                                /**/
     1642     5324    1        BLK$->OUT$SYM.CODE = OCS_CODE_;

   5324  2 000257   000010 720000 0                  LXL0    OCS_CODE_
         2 000260   000007 470400 0                  LDP0    BLK$
         2 000261   000000 440100                    SXL0    0,,PR0

     1643     5325    1        BLK$->OUT$SYM.CPOS = XU$PARAM.CHARPOS;

   5325  2 000262   200003 470500                    LDP0    @XU$PARAM,,AUTO
         2 000263   000007 471400 0                  LDP1    BLK$
         2 000264   000004 235100                    LDA     4,,PR0
         2 000265   100002 755100                    STA     2,,PR1

     1644     5326    1        BLK$->OUT$SYM.NDTYPE = %ALNUM#;

   5326  2 000266   000007 471400 0                  LDP1    BLK$
         2 000267   000024 236003                    LDQ     20,DU
         2 000270   100000 752110                    STCQ    0,'10'O,PR1

     1645     5327    1        BLK$->OUT$SYM.NSUBLKS = 1;

   5327  2 000271   000001 220003                    LDX0    1,DU
         2 000272   000007 471400 0                  LDP1    BLK$
         2 000273   100001 740100                    STX0    1,,PR1

     1646     5328    1        OCS_PTRO$->OUT$BLK.SUBLK$(0) = BLK$;

   5328  2 000274   000007 236000 0                  LDQ     BLK$
         2 000275   000005 471400 0                  LDP1    OCS_PTRO$
         2 000276   100003 756100                    STQ     3,,PR1

     1647     5329                                                /**/
     1648     5330    1        XU$PARAM.ACCEPT = '1'B /*TRUE#*/;

   5330  2 000277   000400 236003                    LDQ     256,DU
         2 000300   000000 256100                    ORSQ    0,,PR0
PL6.E3A0      #004=OCS$FAILURES File=OCS$SYNTAX.:E05TSI                          WED 07/30/97 04:07 Page:252  

     1649     5331    1        XU$PARAM.OUT$ = OCS_PTRO$;

   5331  2 000301   000005 236000 0                  LDQ     OCS_PTRO$
         2 000302   000002 756100                    STQ     2,,PR0

     1650     5332                                                /**/
     1651     5333    1        RETURN;

   5333  2 000303   000000 702200 xent               TSX2  ! X66_ARET
     1652     5334                                                /**/
     1653     5335    1   END OCS$FAILURES;
     1654     5336        %EOD;

PL6.E3A0      #004=OCS$FAILURES File=OCS$SYNTAX.:E05TSI                          WED 07/30/97 04:07 Page:253  
--  Include file information  --

   OCS_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   OC_SUBS_C.:E05TOU  is referenced.
   OCS_SUBS_C.:E05TOU  is referenced.
   OC$MESSHD_C.:E05TOU  is referenced.
   OC_DAT_R.:E05TOU  cannot be made into a system file and is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   OCI_SUBS_C.:E05TOU  is referenced.
   XU_SUBS_C.:E05TOU  is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure OCS$FAILURES.
PL6.E3A0      #004=OCS$FAILURES File=OCS$SYNTAX.:E05TSI                          WED 07/30/97 04:07 Page:254  

 **** Variables and constants ****

  ****  Section 000  Data  OCS$FAILURES

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     7-0-0/w PTR         r     1 BLK$                       6-0-0/w UBIN        r     1 CVSN_
     1-0-0/w UBIN        r     1 I                          3-0-0/w UBIN        r     1 INDEX_
    10-0-0/w UBIN        r     1 OCS_CODE_                 11-0-0/w PTR         r     1 OCS_NODE$
     4-0-0/w PTR         r     1 OCS_PTR$                   5-0-0/w PTR         r     1 OCS_PTRO$
     0-0-0/w UBIN        r     1 SIZE_PARSEB

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @XU$PARAM                 *0-0-0/w STRC(270)   r     1 XU$PARAM

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w BIT         r     1 OCS_DFW_LEVEL              0-0-0/w UBIN        r     1 OCS_LEVEL_MARK
     0-0-0/w STRC(126)   r     1 OCS_LEXEMES(0:8191)
     0-0-0/w PTR         r     1 OC_CONSOLE$

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d STRC(5175)  r     1 G$D                        0-0-0/c ASTR(9)     r     1 OCS$TN
     0-0-0/w STRC(144)   r     1 OUT$BLK                    0-0-0/w ASTR(153)   r     1 OUT$SYM
     0-0-0/w ASTR(45)    r     1 P$LIT                      0-0-0/w STRC(72)    r     1 P$NODE
PL6.E3A0      #004=OCS$FAILURES File=OCS$SYNTAX.:E05TSI                          WED 07/30/97 04:07 Page:255  


   Procedure OCS$FAILURES requires 196 words for executable code.
   Procedure OCS$FAILURES requires 8 words of local(AUTO) storage.
PL6.E3A0      #004=OCS$FAILURES File=OCS$SYNTAX.:E05TSI                          WED 07/30/97 04:07 Page:256  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #004=OCS$FAILURES File=OCS$SYNTAX.:E05TSI                          WED 07/30/97 04:07 Page:257  
          MINI XREF LISTING

BLK$
      3884**DCL      3626--IMP-PTR  3673--IMP-PTR  5212<>CALL     5214>>ASSIGN   5215>>ASSIGN   5216>>ASSIGN
      5217>>ASSIGN   5218>>ASSIGN   5275<>CALL     5294>>ASSIGN   5294>>ASSIGN   5295>>ASSIGN   5296>>ASSIGN
      5296>>ASSIGN   5299>>ASSIGN   5299>>ASSIGN   5300>>ASSIGN   5314<>CALL     5316>>ASSIGN   5316>>ASSIGN
      5317>>ASSIGN   5318>>ASSIGN   5318>>ASSIGN   5324>>ASSIGN   5325>>ASSIGN   5326>>ASSIGN   5327>>ASSIGN
      5328>>ASSIGN
CVSN_
      3883**DCL      5242<<ASSIGN   5248<<ASSIGN   5254>>IF       5282>>DOCASE
G$D
      3532**DCL      5212<>CALL     5275<>CALL     5314<>CALL
G$D.LDCMNT.TX
      3602**DCL      3603--REDEF
G$D.SCRATCH
      3569**DCL      3572--REDEF
G$D.TRCMNT.TX
      3610**DCL      3611--REDEF
I
      3878**DCL      3881--DCLINIT  5244<<DOINDEX  5245>>IF       5248>>ASSIGN   5249>>ASSIGN   5250<<ASSIGN
      5311<<ASSIGN   5312>>ASSIGN
INDEX_
      3880**DCL      5249<<ASSIGN   5296>>ASSIGN
OCS$NCODE
      3791**DCL-ENT  5232--CALL
OCS$TN.COUNT
      3775**DCL      3776--IMP-SIZ
OCS_CODE_
      3886**DCL      5230<<ASSIGN   5234>>IF       5238>>IF       5240<<ASSIGN   5245>>IF       5324>>ASSIGN
OCS_DFW_LEVEL
      5192**DCL      5228<<ASSIGN
OCS_LEVEL_MARK
      5192**DCL      5229<<ASSIGN
OCS_LEXEMES.CODE
PL6.E3A0      #004=OCS$FAILURES File=OCS$SYNTAX.:E05TSI                          WED 07/30/97 04:07 Page:258  
      5195**DCL      5245>>IF
OCS_LEXEMES.CVSN
      5194**DCL      5248>>ASSIGN
OCS_LEXEMES.INITIAL
      5196**DCL      5296>>ASSIGN
OCS_LEXEMES.MAX
      5195**DCL      5195--REDEF
OCS_LEXEMES.MIN
      5195**DCL      5195--REDEF
OCS_NODE$
      3887**DCL      5231<<ASSIGN   5272>>IF       5311>>ASSIGN   5317>>ASSIGN   5318>>ASSIGN   5318>>ASSIGN
OCS_PTR$
      3881**DCL      5208>>ASSIGN   5208>>ASSIGN
OCS_PTRO$
      3882**DCL      5218<<ASSIGN   5328>>ASSIGN   5331>>ASSIGN
OCS_STRUCTURE
      5188**DCL      5188--REDEF
OC_CONSOLE.ATTR
      4182**DCL      4182--REDEF
OC_CONSOLE.ATTRO
      4183**DCL      4183--REDEF
OC_CONSOLE.CID
      4181**DCL      4182--REDEF
OC_CONSOLE.STATION
      4180**DCL      4180--REDEF
OC_CONSOLE$
      4179**DCL      4180--IMP-PTR
OC_DIR
      4222**DCL      4222--REDEF
OC_INTBIT
      4222**DCL      4223--REDEF
OC_INTMSG
      4099**DCL      4112--REDEF
OC_INTMSG.FLAGS
      4106**DCL      4107--REDEF
OC_INTMSG.MESS
PL6.E3A0      #004=OCS$FAILURES File=OCS$SYNTAX.:E05TSI                          WED 07/30/97 04:07 Page:259  
      4112**DCL      4112--REDEF
OC_INTMSG.MSGID
      4102**DCL      4103--REDEF
OC_INTMSG.WSN
      4109**DCL      4110--REDEF
OC_MASK
      4223**DCL      4223--REDEF
OC_MESSBUF
      4114**DCL      4129--REDEF    4143--REDEF
OC_MESSBUF.FLAGS
      4121**DCL      4122--REDEF
OC_MESSBUF.MESS
      4127**DCL      4127--REDEF
OC_MESSBUF.MSGID
      4117**DCL      4118--REDEF
OC_MESSBUF.WSN
      4124**DCL      4125--REDEF
OC_MESSBUF1.FLAGS
      4136**DCL      4137--REDEF
OC_MESSBUF1.LEN
      4142**DCL      4142--REDEF
OC_MESSBUF1.MSGID
      4132**DCL      4133--REDEF
OC_MESSBUF1.WSN
      4139**DCL      4140--REDEF
OC_MSGBUFFER
      4145**DCL      4160--REDEF
OC_MSGBUFFER.FLAGS
      4152**DCL      4153--REDEF
OC_MSGBUFFER.MESS
      4158**DCL      4158--REDEF
OC_MSGBUFFER.MSGID
      4148**DCL      4149--REDEF
OC_MSGBUFFER.WSN
      4155**DCL      4156--REDEF
OC_MSGBUFFER2.FLAGS
PL6.E3A0      #004=OCS$FAILURES File=OCS$SYNTAX.:E05TSI                          WED 07/30/97 04:07 Page:260  
      4167**DCL      4168--REDEF
OC_MSGBUFFER2.MSGID
      4163**DCL      4164--REDEF
OC_MSGBUFFER2.WSN
      4170**DCL      4171--REDEF
OC_PARAM
      4178**DCL      4178--REDEF
OC_QUEUE.PARMC
      4177**DCL      4177--REDEF
OUT$BLK.CODE
      3634**DCL      5214<<ASSIGN
OUT$BLK.CPOS
      3652**DCL      5215<<ASSIGN
OUT$BLK.NDTYPE
      3629**DCL      5216<<ASSIGN
OUT$BLK.NSUBLKS
      3638**DCL      5217<<ASSIGN
OUT$BLK.SUBLK$
      3659**DCL      5328<<ASSIGN
OUT$SYM.CODE
      3679**DCL      5324<<ASSIGN
OUT$SYM.COUNT
      3696**DCL      3699--IMP-SIZ  5208--ASSIGN   5294--ASSIGN   5295<<ASSIGN   5296>>ASSIGN   5299--ASSIGN
      5300<<ASSIGN   5316--ASSIGN   5317<<ASSIGN   5318>>ASSIGN
OUT$SYM.CPOS
      3688**DCL      5325<<ASSIGN
OUT$SYM.NDTYPE
      3676**DCL      5326<<ASSIGN
OUT$SYM.NSUBLKS
      3682**DCL      5327<<ASSIGN
OUT$SYM.TEMP
      3674**DCL      5208--ASSIGN
OUT$SYM.TEXT
      3699**DCL      5296<<ASSIGN   5318<<ASSIGN
OUT$SYM.TEXTC$
      3691**DCL      5294<<ASSIGN   5299<<ASSIGN   5316<<ASSIGN
PL6.E3A0      #004=OCS$FAILURES File=OCS$SYNTAX.:E05TSI                          WED 07/30/97 04:07 Page:261  
P$LIT.COUNT
      3748**DCL      3751--IMP-SIZ  5311>>ASSIGN   5317>>ASSIGN   5318>>ASSIGN
P$LIT.TEXT
      3751**DCL      5318>>ASSIGN
P$NODE.CODE
      3506**DCL      5214>>ASSIGN
SIZE_PARSEB
      3877**DCL      5208<<ASSIGN   5212<>CALL     5219<<ASSIGN   5219>>ASSIGN   5275<>CALL     5312<<ASSIGN
      5312>>ASSIGN   5314<>CALL
X$GETSPACE
      3790**DCL-ENT  5212--CALL     5275--CALL     5314--CALL
XU$PARAM
      3812**DCL        20--PROC
XU$PARAM.ACCEPT
      3819**DCL      5330<<ASSIGN
XU$PARAM.CHARPOS
      3850**DCL      5215>>ASSIGN   5325>>ASSIGN
XU$PARAM.GLOBAL$
      3846**DCL      5212>>CALL     5275>>CALL     5314>>CALL
XU$PARAM.NODE$
      3838**DCL      5214>>ASSIGN   5232<>CALL
XU$PARAM.OUT$
      3842**DCL      5331<<ASSIGN
XU$PARAM.TYPE
      3813**DCL      5202>>IF

PL6.E3A0      #005=OCS$NCODE File=OCS$SYNTAX.:E05TSI                             WED 07/30/97 04:08 Page:262  
     1655        1        /*M* OCS$NCODE procedure to recursively examine input nodes to determine
     1656        2                       node code for failure output block gneration       */
     1657        3        /*T***********************************************************/
     1658        4        /*T*                                                         */
     1659        5        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
     1660        6        /*T*                                                         */
     1661        7        /*T***********************************************************/
     1662        8        %SET LISTSUB='1'B;
     1663        9        /*
     1664       10         ###    ###    ###    #   #   #   ###    ###   ####   #####
     1665       11        #   #  #   #  #   #  ###  #   #  #   #  #   #  #   #  #
     1666       12        #   #  #      #     # #   ##  #  #      #   #  #   #  #
     1667       13        #   #  #       ###   ###  # # #  #      #   #  #   #  ####
     1668       14        #   #  #          #   # # #  ##  #      #   #  #   #  #
     1669       15        #   #  #   #  #   #  ###  #   #  #   #  #   #  #   #  #
     1670       16         ###    ###    ###    #   #   #   ###    ###   ####   #####
     1671       17                                                                   */
     1672       18                                                /**/
     1673       19        OCS$NCODE: PROC (PTR$);
     1674       20                                                /**/
     1675       21        %INCLUDE XU_MACRO_C;
     1676     3127                                                /**/
     1677     3128        %INCLUDE XU_SUBS_C;
     1678     3220                                                /**/
     1679     3221             %P$NODE        (NAME=P$NODE,
     1680     3222                                 STCLASS="BASED");
     1681     3316                                                /**/
     1682     3317        %INCLUDE OCS_SUBS_C;
     1683     3534        %INCLUDE OCI_SUBS_C;
     1684     3632                                                /**/
     1685     3633        %EJECT;
PL6.E3A0      #005=OCS$NCODE File=OCS$SYNTAX.:E05TSI                             WED 07/30/97 04:08 Page:263  
     1686     3634                                                /**/
     1687     3635    1   DCL PTR$ PTR;
     1688     3636    1   DCL IA UBIN WORD;
     1689     3637    1   DCL OCS_CODE_ UBIN WORD SYMREF;
     1690     3638    1   DCL OCS_NODE$ PTR SYMREF;
     1691     3639    1   DCL OCS_LEVEL_MARK UBIN WORD ALIGNED SYMREF;
     1692     3640    1   DCL OCS_DFW_LEVEL BIT(1) ALIGNED SYMREF;
     1693     3641    1   DCL IMAX_ UBIN WORD;
     1694     3642                                                /**/
     1695     3643        %EJECT;
PL6.E3A0      #005=OCS$NCODE File=OCS$SYNTAX.:E05TSI                             WED 07/30/97 04:08 Page:264  
     1696     3644                                                /**/
     1697     3645        /*
     1698     3646                  Begin O C S $ N C O D E
     1699     3647                                                     */
     1700     3648                                                /**/
     1701     3649    2        DO CASE ( PTR$->P$NODE.TYPE );
     1702     3650                                                /**/
     1703     3651    2        CASE ( %TYPE_ALTERN#,
     1704     3652    2             %TYPE_KONCAT#,
     1705     3653    2             %TYPE_LIST#,
     1706     3654    2             %TYPE_RALTERN# );
     1707     3655                                                /**/
     1708     3656    2           IF PTR$->P$NODE.NSUBNDS > 1
     1709     3657    2           THEN
     1710     3658    3           DO;
     1711     3659                                                /**/
     1712     3660    3                IMAX_ = PTR$->P$NODE.NSUBNDS - 1;
     1713     3661    4                DO IA = 0 TO IMAX_;
     1714     3662                                                /**/
     1715     3663    4                     IF PTR$->P$NODE.SUBNDS$(IA)->P$NODE.NSUBNDS > 1
     1716     3664    4                     THEN
     1717     3665    5                     DO;
     1718     3666    5                          CALL OCS$NCODE ( PTR$->P$NODE.SUBNDS$(IA) );
     1719     3667                                                /**/
     1720     3668    5                          IF OCS_CODE_ ~= 0
     1721     3669    5                          THEN
     1722     3670    5                               IF OCS_DFW_LEVEL = '0'B /*FALSE#*/
     1723     3671    5                               THEN
     1724     3672    5                                    IF OCS_LEVEL_MARK < 2
     1725     3673    5                                    THEN
     1726     3674    6                                    DO;
     1727     3675    6                                         OCS_LEVEL_MARK = OCS_LEVEL_MARK + 1;
     1728     3676    6                                       END;
     1729     3677    5                                    ELSE
     1730     3678    6                                    DO;
     1731     3679    6                                         IF PTR$ -> P$NODE.TYPE =
     1732     3680    6                                              %TYPE_ALTERN#
PL6.E3A0      #005=OCS$NCODE File=OCS$SYNTAX.:E05TSI                             WED 07/30/97 04:08 Page:265  
     1733     3681    6                                         THEN
     1734     3682    6                                              IF PTR$ -> P$NODE.NSUBNDS
     1735     3683    6                                                   = 2
     1736     3684    6                                              THEN
     1737     3685    6                                                   IF IA = 0
     1738     3686    6                                                   THEN
     1739     3687    6                                                        IF PTR$ ->
     1740     3688    6                                                             P$NODE.SUBNDS$(1)
     1741     3689    6                                                             ->
     1742     3690    6                                                             P$NODE.TYPE
     1743     3691    6                                                             =
     1744     3692    6                                                             %TYPE_LITERAL#
     1745     3693    6                                                        THEN
     1746     3694    6                                                             OCS_NODE$
     1747     3695    6                                                                  =
     1748     3696    6                                                                  PTR$ ->
     1749     3697    6                                                                  P$NODE.SUBNDS$(1);
     1750     3698                                                /**/
     1751     3699    6                                         OCS_DFW_LEVEL = '1'B /*TRUE#*/;
     1752     3700                                                /**/
     1753     3701    6                                       END; /* DO IF SETTING */
     1754     3702    5                        END;               /* DO IF NON_ZERO */
     1755     3703    4                     ELSE
     1756     3704    5                     DO;
     1757     3705    5                          OCS_CODE_ = PTR$->P$NODE.SUBNDS$(IA)->P$NODE.CODE;
     1758     3706                                                /**/
     1759     3707    5                          IF PTR$ -> P$NODE.TYPE = %TYPE_ALTERN#
     1760     3708    5                          THEN
     1761     3709    5                               IF PTR$ -> P$NODE.NSUBNDS = 2
     1762     3710    5                               THEN
     1763     3711    5                                    IF IA = 0
     1764     3712    5                                    THEN
     1765     3713    5                                         IF PTR$ -> P$NODE.SUBNDS$(1) ->
     1766     3714    5                                              P$NODE.TYPE = %TYPE_LITERAL#
     1767     3715    5                                         THEN
     1768     3716    5                                              OCS_NODE$ = PTR$ -> P$NODE.SUBNDS$(1);
     1769     3717    5                        END;               /* DO If valid node found */
PL6.E3A0      #005=OCS$NCODE File=OCS$SYNTAX.:E05TSI                             WED 07/30/97 04:08 Page:266  
     1770     3718                                                /**/
     1771     3719    4                     IF OCS_CODE_ > 500 /* LOW_LEXEME# */
     1772     3720    4                     THEN
     1773     3721    4                          RETURN;
     1774     3722    4                   END;
     1775     3723    3                RETURN;
     1776     3724    3              END;
     1777     3725    2        CASE (ELSE);
     1778     3726    2           OCS_CODE_ = PTR$->P$NODE.CODE;
     1779     3727                                                /**/
     1780     3728                                                /**/
     1781     3729                                                /**/
     1782     3730    2        END;                               /* DO CASE (NDTYPE) */
     1783     3731    1        RETURN;
     1784     3732    1   END OCS$NCODE;

PL6.E3A0      #005=OCS$NCODE File=OCS$SYNTAX.:E05TSI                             WED 07/30/97 04:08 Page:267  
--  Include file information  --

   OCI_SUBS_C.:E05TOU  is referenced.
   OCS_SUBS_C.:E05TOU  is referenced.
   XU_SUBS_C.:E05TOU  is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure OCS$NCODE.

   Procedure OCS$NCODE requires 107 words for executable code.
   Procedure OCS$NCODE requires 8 words of local(AUTO) storage.

    No errors detected in file OCS$SYNTAX.:E05TSI    .

PL6.E3A0      #005=OCS$NCODE File=OCS$SYNTAX.:E05TSI                             WED 07/30/97 04:08 Page:268  

 Object Unit name= OCS$NCODE                                  File name= OCS$SYNTAX.:E05TOU
 UTS= JUL 30 '97 04:08:25.04 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Proc  even  none   107    153  OCS$NCODE
    1  RoData even  none     1      1  OCS$NCODE

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     0      0   yes            yes      Std        1  OCS$NCODE

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
                       nStd      0 X66_AUTO_1
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     OCS_CODE_                             OCS_NODE$                             OCS_LEVEL_MARK
     OCS_DFW_LEVEL                         B_VECTNIL
PL6.E3A0      #005=OCS$NCODE File=OCS$SYNTAX.:E05TSI                             WED 07/30/97 04:08 Page:269  


     1655        1        /*M* OCS$NCODE procedure to recursively examine input nodes to determine
     1656        2                       node code for failure output block gneration       */
     1657        3        /*T***********************************************************/
     1658        4        /*T*                                                         */
     1659        5        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
     1660        6        /*T*                                                         */
     1661        7        /*T***********************************************************/
     1662        8        %SET LISTSUB='1'B;
     1663        9        /*
     1664       10         ###    ###    ###    #   #   #   ###    ###   ####   #####
     1665       11        #   #  #   #  #   #  ###  #   #  #   #  #   #  #   #  #
     1666       12        #   #  #      #     # #   ##  #  #      #   #  #   #  #
     1667       13        #   #  #       ###   ###  # # #  #      #   #  #   #  ####
     1668       14        #   #  #          #   # # #  ##  #      #   #  #   #  #
     1669       15        #   #  #   #  #   #  ###  #   #  #   #  #   #  #   #  #
     1670       16         ###    ###    ###    #   #   #   ###    ###   ####   #####
     1671       17                                                                   */
     1672       18                                                /**/
     1673       19        OCS$NCODE: PROC (PTR$);

     19  0 000000   000000 700200 xent  OCS$NCODE    TSX0  ! X66_AUTO_1
         0 000001   000010 000001                    ZERO    8,1

     1674       20                                                /**/
     1675       21        %INCLUDE XU_MACRO_C;
     1676     3127                                                /**/
     1677     3128        %INCLUDE XU_SUBS_C;
     1678     3220                                                /**/
     1679     3221             %P$NODE        (NAME=P$NODE,
     1680     3222                                 STCLASS="BASED");
     1681     3316                                                /**/
     1682     3317        %INCLUDE OCS_SUBS_C;
     1683     3534        %INCLUDE OCI_SUBS_C;
     1684     3632                                                /**/
     1685     3633        %EJECT;
PL6.E3A0      #005=OCS$NCODE File=OCS$SYNTAX.:E05TSI                             WED 07/30/97 04:08 Page:270  
     1686     3634                                                /**/
     1687     3635    1   DCL PTR$ PTR;
     1688     3636    1   DCL IA UBIN WORD;
     1689     3637    1   DCL OCS_CODE_ UBIN WORD SYMREF;
     1690     3638    1   DCL OCS_NODE$ PTR SYMREF;
     1691     3639    1   DCL OCS_LEVEL_MARK UBIN WORD ALIGNED SYMREF;
     1692     3640    1   DCL OCS_DFW_LEVEL BIT(1) ALIGNED SYMREF;
     1693     3641    1   DCL IMAX_ UBIN WORD;
     1694     3642                                                /**/
     1695     3643        %EJECT;
PL6.E3A0      #005=OCS$NCODE File=OCS$SYNTAX.:E05TSI                             WED 07/30/97 04:08 Page:271  
     1696     3644                                                /**/
     1697     3645        /*
     1698     3646                  Begin O C S $ N C O D E
     1699     3647                                                     */
     1700     3648                                                /**/
     1701     3649    2        DO CASE ( PTR$->P$NODE.TYPE );

   3649  0 000002   200003 470500                    LDP0    @PTR$,,AUTO
         0 000003   000000 471500                    LDP1    0,,PR0
         0 000004   100000 236100                    LDQ     0,,PR1
         0 000005   000041 772000                    QRL     33
         0 000006   000005 116007                    CMPQ    5,DL
         0 000007   000011 602006 0                  TNC     s:3649+7,QL
         0 000010   000147 710000 0                  TRA     s:3726
         0 000011   000147 710000 0                  TRA     s:3726
         0 000012   000016 710000 0                  TRA     s:3656
         0 000013   000016 710000 0                  TRA     s:3656
         0 000014   000016 710000 0                  TRA     s:3656
         0 000015   000016 710000 0                  TRA     s:3656

     1702     3650                                                /**/
     1703     3651    2        CASE ( %TYPE_ALTERN#,

     1704     3652    2             %TYPE_KONCAT#,
     1705     3653    2             %TYPE_LIST#,
     1706     3654    2             %TYPE_RALTERN# );
     1707     3655                                                /**/
     1708     3656    2           IF PTR$->P$NODE.NSUBNDS > 1

   3656  0 000016   100000 236100                    LDQ     0,,PR1
         0 000017   000000 376000 1                  ANQ     0
         0 000020   400000 116007                    CMPQ    -131072,DL
         0 000021   000152 602000 0                  TNC     s:3731

     1709     3657    2           THEN
     1710     3658    3           DO;

PL6.E3A0      #005=OCS$NCODE File=OCS$SYNTAX.:E05TSI                             WED 07/30/97 04:08 Page:272  
     1711     3659                                                /**/
     1712     3660    3                IMAX_ = PTR$->P$NODE.NSUBNDS - 1;

   3660  0 000022   100000 236100                    LDQ     0,,PR1
         0 000023   000020 772000                    QRL     16
         0 000024   000777 376007                    ANQ     511,DL
         0 000025   000001 136007                    SBLQ    1,DL
         0 000026   200005 756100                    STQ     IMAX_,,AUTO

     1713     3661    4                DO IA = 0 TO IMAX_;

   3661  0 000027   200004 450100                    STZ     IA,,AUTO
         0 000030   000143 710000 0                  TRA     s:3722+3

     1714     3662                                                /**/
     1715     3663    4                     IF PTR$->P$NODE.SUBNDS$(IA)->P$NODE.NSUBNDS > 1

   3663  0 000031   200003 470500                    LDP0    @PTR$,,AUTO
         0 000032   000000 471500                    LDP1    0,,PR0
         0 000033   200004 720100                    LXL0    IA,,AUTO
         0 000034   100001 473510                    LDP3    1,X0,PR1
         0 000035   300000 236100                    LDQ     0,,PR3
         0 000036   000000 376000 1                  ANQ     0
         0 000037   400000 116007                    CMPQ    -131072,DL
         0 000040   000107 602000 0                  TNC     s:3705

     1716     3664    4                     THEN
     1717     3665    5                     DO;

     1718     3666    5                          CALL OCS$NCODE ( PTR$->P$NODE.SUBNDS$(IA) );

   3666  0 000041   100001 634510                    EPPR4   1,X0,PR1
         0 000042   200006 454500                    STP4    IMAX_+1,,AUTO
         0 000043   200006 630500                    EPPR0   IMAX_+1,,AUTO
         0 000044   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 000045   000000 701000 0                  TSX1    s:19
         0 000046   000000 011000                    NOP     0
PL6.E3A0      #005=OCS$NCODE File=OCS$SYNTAX.:E05TSI                             WED 07/30/97 04:08 Page:273  

     1719     3667                                                /**/
     1720     3668    5                          IF OCS_CODE_ ~= 0

   3668  0 000047   000000 235000 xsym               LDA     OCS_CODE_
         0 000050   000134 600000 0                  TZE     s:3719

     1721     3669    5                          THEN
     1722     3670    5                               IF OCS_DFW_LEVEL = '0'B /*FALSE#*/

   3670  0 000051   000000 234000 xsym               SZN     OCS_DFW_LEVEL
         0 000052   000134 604000 0                  TMI     s:3719

     1723     3671    5                               THEN
     1724     3672    5                                    IF OCS_LEVEL_MARK < 2

   3672  0 000053   000000 236000 xsym               LDQ     OCS_LEVEL_MARK
         0 000054   000002 116007                    CMPQ    2,DL
         0 000055   000061 603000 0                  TRC     s:3679

     1725     3673    5                                    THEN
     1726     3674    6                                    DO;

     1727     3675    6                                         OCS_LEVEL_MARK = OCS_LEVEL_MARK + 1;

   3675  0 000056   000001 036007                    ADLQ    1,DL
         0 000057   000000 756000 xsym               STQ     OCS_LEVEL_MARK

     1728     3676    6                                       END;

   3676  0 000060   000134 710000 0                  TRA     s:3719

     1729     3677    5                                    ELSE
     1730     3678    6                                    DO;

     1731     3679    6                                         IF PTR$ -> P$NODE.TYPE =

PL6.E3A0      #005=OCS$NCODE File=OCS$SYNTAX.:E05TSI                             WED 07/30/97 04:08 Page:274  
   3679  0 000061   200003 470500                    LDP0    @PTR$,,AUTO
         0 000062   000000 471500                    LDP1    0,,PR0
         0 000063   100000 236100                    LDQ     0,,PR1
         0 000064   700000 376003                    ANQ     -32768,DU
         0 000065   100000 116003                    CMPQ    32768,DU
         0 000066   000104 601000 0                  TNZ     s:3699

     1732     3680    6                                              %TYPE_ALTERN#
     1733     3681    6                                         THEN
     1734     3682    6                                              IF PTR$ -> P$NODE.NSUBNDS

   3682  0 000067   100000 236100                    LDQ     0,,PR1
         0 000070   000000 376000 1                  ANQ     0
         0 000071   400000 116007                    CMPQ    -131072,DL
         0 000072   000104 601000 0                  TNZ     s:3699

     1735     3683    6                                                   = 2
     1736     3684    6                                              THEN
     1737     3685    6                                                   IF IA = 0

   3685  0 000073   200004 235100                    LDA     IA,,AUTO
         0 000074   000104 601000 0                  TNZ     s:3699

     1738     3686    6                                                   THEN
     1739     3687    6                                                        IF PTR$ ->

   3687  0 000075   100002 473500                    LDP3    2,,PR1
         0 000076   300000 236100                    LDQ     0,,PR3
         0 000077   700000 376003                    ANQ     -32768,DU
         0 000100   500000 116003                    CMPQ    -98304,DU
         0 000101   000104 601000 0                  TNZ     s:3699

     1740     3688    6                                                             P$NODE.SUBNDS$(1)
     1741     3689    6                                                             ->
     1742     3690    6                                                             P$NODE.TYPE
     1743     3691    6                                                             =
     1744     3692    6                                                             %TYPE_LITERAL#
PL6.E3A0      #005=OCS$NCODE File=OCS$SYNTAX.:E05TSI                             WED 07/30/97 04:08 Page:275  
     1745     3693    6                                                        THEN
     1746     3694    6                                                             OCS_NODE$

   3694  0 000102   100002 236100                    LDQ     2,,PR1
         0 000103   000000 756000 xsym               STQ     OCS_NODE$

     1747     3695    6                                                                  =
     1748     3696    6                                                                  PTR$ ->
     1749     3697    6                                                                  P$NODE.SUBNDS$(1);
     1750     3698                                                /**/
     1751     3699    6                                         OCS_DFW_LEVEL = '1'B /*TRUE#*/;

   3699  0 000104   400000 236003                    LDQ     -131072,DU
         0 000105   000000 756000 xsym               STQ     OCS_DFW_LEVEL

     1752     3700                                                /**/
     1753     3701    6                                       END; /* DO IF SETTING */

     1754     3702    5                        END;               /* DO IF NON_ZERO */

   3702  0 000106   000134 710000 0                  TRA     s:3719

     1755     3703    4                     ELSE
     1756     3704    5                     DO;

     1757     3705    5                          OCS_CODE_ = PTR$->P$NODE.SUBNDS$(IA)->P$NODE.CODE;

   3705  0 000107   300000 236100                    LDQ     0,,PR3
         0 000110   177777 376007                    ANQ     65535,DL
         0 000111   000000 756000 xsym               STQ     OCS_CODE_

     1758     3706                                                /**/
     1759     3707    5                          IF PTR$ -> P$NODE.TYPE = %TYPE_ALTERN#

   3707  0 000112   000000 471500                    LDP1    0,,PR0
         0 000113   100000 236100                    LDQ     0,,PR1
         0 000114   700000 376003                    ANQ     -32768,DU
PL6.E3A0      #005=OCS$NCODE File=OCS$SYNTAX.:E05TSI                             WED 07/30/97 04:08 Page:276  
         0 000115   100000 116003                    CMPQ    32768,DU
         0 000116   000134 601000 0                  TNZ     s:3719

     1760     3708    5                          THEN
     1761     3709    5                               IF PTR$ -> P$NODE.NSUBNDS = 2

   3709  0 000117   100000 236100                    LDQ     0,,PR1
         0 000120   000000 376000 1                  ANQ     0
         0 000121   400000 116007                    CMPQ    -131072,DL
         0 000122   000134 601000 0                  TNZ     s:3719

     1762     3710    5                               THEN
     1763     3711    5                                    IF IA = 0

   3711  0 000123   200004 235100                    LDA     IA,,AUTO
         0 000124   000134 601000 0                  TNZ     s:3719

     1764     3712    5                                    THEN
     1765     3713    5                                         IF PTR$ -> P$NODE.SUBNDS$(1) ->

   3713  0 000125   100002 473500                    LDP3    2,,PR1
         0 000126   300000 236100                    LDQ     0,,PR3
         0 000127   700000 376003                    ANQ     -32768,DU
         0 000130   500000 116003                    CMPQ    -98304,DU
         0 000131   000134 601000 0                  TNZ     s:3719

     1766     3714    5                                              P$NODE.TYPE = %TYPE_LITERAL#
     1767     3715    5                                         THEN
     1768     3716    5                                              OCS_NODE$ = PTR$ -> P$NODE.SUBNDS$(1);

   3716  0 000132   100002 236100                    LDQ     2,,PR1
         0 000133   000000 756000 xsym               STQ     OCS_NODE$

     1769     3717    5                        END;               /* DO If valid node found */

     1770     3718                                                /**/
     1771     3719    4                     IF OCS_CODE_ > 500 /* LOW_LEXEME# */
PL6.E3A0      #005=OCS$NCODE File=OCS$SYNTAX.:E05TSI                             WED 07/30/97 04:08 Page:277  

   3719  0 000134   000000 235000 xsym               LDA     OCS_CODE_
         0 000135   000765 115007                    CMPA    501,DL
         0 000136   000140 602000 0                  TNC     s:3722

     1772     3720    4                     THEN
     1773     3721    4                          RETURN;

   3721  0 000137   000000 702200 xent               TSX2  ! X66_ARET

     1774     3722    4                   END;

   3722  0 000140   200004 236100                    LDQ     IA,,AUTO
         0 000141   000001 036007                    ADLQ    1,DL
         0 000142   200004 756100                    STQ     IA,,AUTO
         0 000143   200005 236100                    LDQ     IMAX_,,AUTO
         0 000144   200004 116100                    CMPQ    IA,,AUTO
         0 000145   000031 603000 0                  TRC     s:3663

     1775     3723    3                RETURN;

   3723  0 000146   000000 702200 xent               TSX2  ! X66_ARET

     1776     3724    3              END;
     1777     3725    2        CASE (ELSE);

     1778     3726    2           OCS_CODE_ = PTR$->P$NODE.CODE;

   3726  0 000147   100000 236100                    LDQ     0,,PR1
         0 000150   177777 376007                    ANQ     65535,DL
         0 000151   000000 756000 xsym               STQ     OCS_CODE_

     1779     3727                                                /**/
     1780     3728                                                /**/
     1781     3729                                                /**/
     1782     3730    2        END;                               /* DO CASE (NDTYPE) */

PL6.E3A0      #005=OCS$NCODE File=OCS$SYNTAX.:E05TSI                             WED 07/30/97 04:08 Page:278  
     1783     3731    1        RETURN;

   3731  0 000152   000000 702200 xent               TSX2  ! X66_ARET
     1784     3732    1   END OCS$NCODE;

PL6.E3A0      #005=OCS$NCODE File=OCS$SYNTAX.:E05TSI                             WED 07/30/97 04:08 Page:279  
--  Include file information  --

   OCI_SUBS_C.:E05TOU  is referenced.
   OCS_SUBS_C.:E05TOU  is referenced.
   XU_SUBS_C.:E05TOU  is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure OCS$NCODE.
PL6.E3A0      #005=OCS$NCODE File=OCS$SYNTAX.:E05TSI                             WED 07/30/97 04:08 Page:280  

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @PTR$                      4-0-0/w UBIN        r     1 IA
     5-0-0/w UBIN        r     1 IMAX_                     *0-0-0/w PTR         r     1 PTR$

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w UBIN        r     1 OCS_CODE_                  0-0-0/w BIT         r     1 OCS_DFW_LEVEL
     0-0-0/w UBIN        r     1 OCS_LEVEL_MARK             0-0-0/w PTR         r     1 OCS_NODE$

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(72)    r     1 P$NODE


   Procedure OCS$NCODE requires 107 words for executable code.
   Procedure OCS$NCODE requires 8 words of local(AUTO) storage.

    No errors detected in file OCS$SYNTAX.:E05TSI    .
PL6.E3A0      #005=OCS$NCODE File=OCS$SYNTAX.:E05TSI                             WED 07/30/97 04:08 Page:281  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #005=OCS$NCODE File=OCS$SYNTAX.:E05TSI                             WED 07/30/97 04:08 Page:282  
          MINI XREF LISTING

IA
      3636**DCL      3661<<DOINDEX  3663>>IF       3666>>CALL     3685>>IF       3705>>ASSIGN   3711>>IF
IMAX_
      3641**DCL      3660<<ASSIGN   3661>>DOINDEX
OCS$NCODE
        19**PROC     3666--CALL
OCS_CODE_
      3637**DCL      3668>>IF       3705<<ASSIGN   3719>>IF       3726<<ASSIGN
OCS_DFW_LEVEL
      3640**DCL      3670>>IF       3699<<ASSIGN
OCS_LEVEL_MARK
      3639**DCL      3672>>IF       3675<<ASSIGN   3675>>ASSIGN
OCS_NODE$
      3638**DCL      3694<<ASSIGN   3716<<ASSIGN
P$NODE.CODE
      3301**DCL      3705>>ASSIGN   3726>>ASSIGN
P$NODE.NSUBNDS
      3298**DCL      3656>>IF       3660>>ASSIGN   3663>>IF       3682>>IF       3709>>IF
P$NODE.SUBNDS$
      3306**DCL      3663>>IF       3666<>CALL     3687>>IF       3694>>ASSIGN   3705>>ASSIGN   3713>>IF
      3716>>ASSIGN
P$NODE.TYPE
      3244**DCL      3649>>DOCASE   3679>>IF       3687>>IF       3707>>IF       3713>>IF
PTR$
      3635**DCL        19--PROC     3649>>DOCASE   3656>>IF       3660>>ASSIGN   3663>>IF       3666>>CALL
      3679>>IF       3682>>IF       3687>>IF       3694>>ASSIGN   3705>>ASSIGN   3707>>IF       3709>>IF
      3713>>IF       3716>>ASSIGN   3726>>ASSIGN
