VERSION E05

PL6.E3A0      #001=MMM$ACCESS File=MMM$ACCESS.:E05TSI                            WED 07/30/97 03:23 Page:1    
        1        1        /*M* MODIFY SPECIAL DESCRIPTORS IN USER LINKAGE SEGMENT.           */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* PLM=8,IND=2,THI=2,ENU=2,CSU=2,DTI=4,DCI=4,ECU=4,AND,CCC,MCL=20,CRT=5,CRM=80,CLM
                 7        =40 */
        8        8        /*F*   NAME:   MMM$ACCESS                                          */
        9        9        /*F*   PURPOSE: To replace one of the user's special-purpose       */
       10       10        /*,*           linkage segment descriptors with one from the       */
       11       11        /*,*           monitor's linkage segment.                          */
       12       12        MMM$ACCESS: PROC(EWSQ,MONSID,USERSID) ALTRET;
       13       13    1   DCL EWSQ SBIN;                          /* Effective wsq issuing request      */
       14       14    1   DCL MONSID UBIN(36);                    /* Segid of descriptor in mon ls      */
       15       15    1   DCL BMONSID REDEF MONSID BIT(36);
       16       16    1   DCL USERSID UBIN(36);              /* Segid of spcl descriptor in user ls     */
       17       17    1   DCL BUSERSID REDEF USERSID BIT(36);
       18       18                                                /**/
       19       19                                                /**/
       20       20    1   DCL USID UBIN(36);
       21       21    1   DCL MSID UBIN(36);
       22       22    1   DCL ELS$ PTR;
       23       23    1   DCL TEMPDR BIT(72) DALIGNED;
       24       24    1   DCL B$LS(0:0) BIT(72) DALIGNED BASED;
       25       25    1   DCL B$LS$    PTR SYMREF;
       26       26    1   DCL B$JIT$ PTR SYMREF;
       27       27    1   DCL B$PS1$ PTR SYMREF;
       28       28                                                /**/
       29       29    1   DCL MMA$WHERE ENTRY(5);
       30       30                                                /**/
       31       31        %INCLUDE MM_DATA_R;
       32      551        %INCLUDE U$JIT_C;                       /* Based jit definitions              */
       33     1050        %INCLUDE M_ERRORS_C;                    /* Mm error codes                     */
       34     1114        %INCLUDE M_ERRSET_C;                    /* Mm error macros                    */
       35     1138        %INCLUDE B_SEGIDS_C;                    /* System segid definitions           */
       36     1677        %INCLUDE B_MACROS_C;                    /* System macro definitions           */
PL6.E3A0      #001=MMM$ACCESS File=MMM$ACCESS.:E05TSI                            WED 07/30/97 03:23 Page:2    
       37     1788                                                /**/
       38     1789        %MODERR(MODULE='15'O);
       39     1797        %T01DESCR(NAME=B$DR);
       40     1805        %T23DESCR(NAME=B$DR2);
       41     1813                                                /**/
       42     1814        %EJECT;
PL6.E3A0      #001=MMM$ACCESS File=MMM$ACCESS.:E05TSI                            WED 07/30/97 03:23 Page:3    
       43     1815                                                /**/
       44     1816        /* Insure both segids make sense */
       45     1817    1           IF (USERSID < BITBIN(%SPCL1SID)) OR (USERSID > BITBIN(%SPCL8SID)) OR (
              1817                    USERSID=BITBIN(%ASLENTSID))
       46     1818    1             OR (MONSID < BITBIN(%ISSID)) OR (MONSID > BITBIN(%MAXMONSID)) THEN
       47     1819    2               DO;
       48     1820        /*E*   ERROR:  MMM-E$BADSAD-0
       49     1821               MESSAGE: Invalid SEGID specified on M$SAD or M$STD.         */
       50     1822                      %ERRSET(CODE=%E$BADSAD);
       51     1825    2                 ALTRETURN;
       52     1826    2               END;
       53     1827    1           USID = BITBIN(BUSERSID & '000000000777'O);
       54     1828    1           MSID = BITBIN(BMONSID & '000000000777'O);
       55     1829        /* If its either of the funny monitor LS-via-WSQ3-descriptors
       56     1830           being requested, then give 'em the write-allowed version if
       57     1831           they have EXMM privilege, otherwise give 'em no-write one.      */
       58     1832    1           IF (MONSID = BITBIN(%WS3MLSSID)) OR
       59     1833    1             (MONSID = BITBIN(%WS3MLSNWSID))
       60     1834    1             THEN IF (B$JIT.PRIV.ACTIVE & %PR_EXMM#)
       61     1835    1               THEN MSID = BITBIN(%WS3MLSSID & '0777'O);
       62     1836    1               ELSE MSID = BITBIN(%WS3MLSNWSID & '0777'O);
       63     1837                %FINDLS (WSQ = EWSQ , P$ = ELS$);
       64     1840    1           TEMPDR = B$LS$->B$LS(MSID);
       65     1841    1           IF ADDR(TEMPDR)->B$DR.TYP > 3 THEN
       66     1842    2               DO;
       67     1843        /*E*    ERROR:  MMM-E$DRTYPEBAD-0
       68     1844                MESSAGE: Monitor SEGID must indicate a type 0-3 descriptor. */
       69     1845                      %ERRSET(CODE=%E$DRTYPEBAD);
       70     1848    2                 ALTRETURN;
       71     1849    2               END;
       72     1850        /* If descriptor type = 0 or 1, and wsr = 0, then make wsr = 1 */
       73     1851    1           IF (ADDR(TEMPDR)->B$DR.TYP <= 1) AND (ADDR(TEMPDR)->B$DR.WSR = 0)
       74     1852    1             THEN ADDR(TEMPDR)->B$DR.WSR = 1;
       75     1853        /* Change sad's onto monitor's $LS0 to give back a type 2
       76     1854           descriptor pointing at the wsq 3 page table (no housekeeping
       77     1855           pages).                                                         */
       78     1856    1           IF MONSID = BITBIN(%ISSID) THEN
PL6.E3A0      #001=MMM$ACCESS File=MMM$ACCESS.:E05TSI                            WED 07/30/97 03:23 Page:4    
       79     1857    2               DO;
       80     1858    2                 ADDR(TEMPDR)->B$DR2.TYP = 2;
       81     1859    2                 ADDR(TEMPDR)->B$DR2.WSQ = 3;
       82     1860    2               END;
       83     1861        /* Reset write access flag if user doesn't have extended mm privilege */
       84     1862    1           IF (B$JIT$->B$JIT.PRIV.ACTIVE & %PR_EXMM#) = '0'B
       85     1863    1             THEN ADDR(TEMPDR)->B$DR.FLGS=ADDR(TEMPDR)->B$DR.FLGS&~%DSWRITE;
       86     1864    1           ELS$->B$LS(USID) = TEMPDR;
       87     1865    1           RETURN;
       88     1866                                                /**/
       89     1867        %EJECT;
PL6.E3A0      #001=MMM$ACCESS File=MMM$ACCESS.:E05TSI                            WED 07/30/97 03:23 Page:5    
       90     1868        /**/
       91     1869        /*F*   NAME:   MMM$NEW_DR                                          */
       92     1870        /*F*   PURPOSE: To insert a descriptor shrunken from those avail-  */
       93     1871        /*,*           to a user program into one of the user's special    */
       94     1872        /*,*           descriptors in his linkage segment.                 */
       95     1873    1   MMM$NEW_DR: ENTRY(EWSQ,MONSID,USERSID) ALTRET;
       96     1874                                                /* NOTE: Monsid is not used here      */
       97     1875        /* Insure that usersid is one of the special segid's */
       98     1876    1           IF (USERSID < BITBIN(%SPCL1SID)) OR (USERSID > BITBIN(%SPCL8SID)) OR (
              1876                    USERSID=BITBIN(%ASLENTSID)) THEN
       99     1877    2               DO;
      100     1878                      %ERRSET(CODE=%E$BADSAD);
      101     1881    2                 ALTRETURN;
      102     1882    2               END;
      103     1883    1           USID = BITBIN(BUSERSID & '000000000777'O);
      104     1884                %FINDLS (WSQ = EWSQ , P$ = ELS$);
      105     1887        /* MMA$WHERE is used here to place the user's descriptor (now in   */
      106     1888        /* $PS1) into the non-housekeeping location MM_WHDR. The results   */
      107     1889        /* returned by the routine are ignored.                            */
      108     1890    1           CALL MMA$WHERE(B$PS1$,MSID,MSID,MSID,ELS$->B$LS(USID));
      109     1891    1           RETURN;
      110     1892        /**/
      111     1893    1   END MMM$ACCESS;

PL6.E3A0      #001=MMM$ACCESS File=MMM$ACCESS.:E05TSI                            WED 07/30/97 03:23 Page:6    
--  Include file information  --

   B_MACROS_C.:E05TOU  is referenced.
   B_SEGIDS_C.:E05TOU  is referenced.
   M_ERRSET_C.:E05TOU  is referenced.
   M_ERRORS_C.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  is referenced.
   U$JIT_C.:E05TOU  cannot be made into a system file and is referenced.
   MM_MACRO_M.:E05TOU  is referenced.
   B_STRINGS_C.:E05TOU  is referenced.
   MM$SYSGEN.:E05TOU  is referenced.
   M_INFO_C.:E05TOU  is referenced.
   MM_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure MMM$ACCESS.

   Procedure MMM$ACCESS requires 139 words for executable code.
   Procedure MMM$ACCESS requires 18 words of local(AUTO) storage.

    No errors detected in file MMM$ACCESS.:E05TSI    .

PL6.E3A0      #001=MMM$ACCESS File=MMM$ACCESS.:E05TSI                            WED 07/30/97 03:23 Page:7    

 Object Unit name= MMM$ACCESS                                 File name= MMM$ACCESS.:E05TOU
 UTS= JUL 30 '97 03:23:08.40 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0  RoData even  UTS      2      2  MMM$ACCESS
    1   Proc  even  none   139    213  MMM$ACCESS
    2  RoData even  none     4      4  MMM$ACCESS

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     1      0   yes    yes     yes      Std        3  MMM$ACCESS
     1    143          yes     yes      Std        3  MMM$NEW_DR

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       5 MMA$WHERE
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_AUTO_3
                       nStd      0 X66_AALT
                       nStd      0 X66_ARET
PL6.E3A0      #001=MMM$ACCESS File=MMM$ACCESS.:E05TSI                            WED 07/30/97 03:23 Page:8    

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     B$LS$                                 B$JIT$                                B$PS1$
r    MM_BYP$                          r    MM_LSPTRS$                            B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
PL6.E3A0      #001=MMM$ACCESS File=MMM$ACCESS.:E05TSI                            WED 07/30/97 03:23 Page:9    


        1        1        /*M* MODIFY SPECIAL DESCRIPTORS IN USER LINKAGE SEGMENT.           */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7       /*X* PLM=8,IND=2,THI=2,ENU=2,CSU=2,DTI=4,DCI=4,ECU=4,AND,CCC,MCL=20,CRT=5,CRM=80,CLM
                 7        =40 */
        8        8        /*F*   NAME:   MMM$ACCESS                                          */
        9        9        /*F*   PURPOSE: To replace one of the user's special-purpose       */
       10       10        /*,*           linkage segment descriptors with one from the       */
       11       11        /*,*           monitor's linkage segment.                          */
       12       12        MMM$ACCESS: PROC(EWSQ,MONSID,USERSID) ALTRET;

     12  1 000000   000000 700200 xent  MMM$ACCESS   TSX0  ! X66_AUTO_3
         1 000001   000022 000003                    ZERO    18,3

       13       13    1   DCL EWSQ SBIN;                          /* Effective wsq issuing request      */
       14       14    1   DCL MONSID UBIN(36);                    /* Segid of descriptor in mon ls      */
       15       15    1   DCL BMONSID REDEF MONSID BIT(36);
       16       16    1   DCL USERSID UBIN(36);              /* Segid of spcl descriptor in user ls     */
       17       17    1   DCL BUSERSID REDEF USERSID BIT(36);
       18       18                                                /**/
       19       19                                                /**/
       20       20    1   DCL USID UBIN(36);
       21       21    1   DCL MSID UBIN(36);
       22       22    1   DCL ELS$ PTR;
       23       23    1   DCL TEMPDR BIT(72) DALIGNED;
       24       24    1   DCL B$LS(0:0) BIT(72) DALIGNED BASED;
       25       25    1   DCL B$LS$    PTR SYMREF;
       26       26    1   DCL B$JIT$ PTR SYMREF;
       27       27    1   DCL B$PS1$ PTR SYMREF;
       28       28                                                /**/
       29       29    1   DCL MMA$WHERE ENTRY(5);
       30       30                                                /**/
       31       31        %INCLUDE MM_DATA_R;
PL6.E3A0      #001=MMM$ACCESS File=MMM$ACCESS.:E05TSI                            WED 07/30/97 03:23 Page:10   
       32      551        %INCLUDE U$JIT_C;                       /* Based jit definitions              */
       33     1050        %INCLUDE M_ERRORS_C;                    /* Mm error codes                     */
       34     1114        %INCLUDE M_ERRSET_C;                    /* Mm error macros                    */
       35     1138        %INCLUDE B_SEGIDS_C;                    /* System segid definitions           */
       36     1677        %INCLUDE B_MACROS_C;                    /* System macro definitions           */
       37     1788                                                /**/
       38     1789        %MODERR(MODULE='15'O);
       39     1797        %T01DESCR(NAME=B$DR);
       40     1805        %T23DESCR(NAME=B$DR2);
       41     1813                                                /**/
       42     1814        %EJECT;
PL6.E3A0      #001=MMM$ACCESS File=MMM$ACCESS.:E05TSI                            WED 07/30/97 03:23 Page:11   
       43     1815                                                /**/
       44     1816        /* Insure both segids make sense */
       45     1817    1           IF (USERSID < BITBIN(%SPCL1SID)) OR (USERSID > BITBIN(%SPCL8SID)) OR (
              1817                    USERSID=BITBIN(%ASLENTSID))

   1817  1 000002   200005 470500                    LDP0    @USERSID,,AUTO
         1 000003   000000 235100                    LDA     0,,PR0
         1 000004   006021 115007                    CMPA    3089,DL
         1 000005   000020 602000 1                  TNC     s:1823
         1 000006   006032 115007                    CMPA    3098,DL
         1 000007   000020 603000 1                  TRC     s:1823
         1 000010   006025 115007                    CMPA    3093,DL
         1 000011   000020 600000 1                  TZE     s:1823
         1 000012   200004 471500                    LDP1    @MONSID,,AUTO
         1 000013   100000 235100                    LDA     0,,PR1
         1 000014   006000 115007                    CMPA    3072,DL
         1 000015   000020 602000 1                  TNC     s:1823
         1 000016   006203 115007                    CMPA    3203,DL
         1 000017   000026 602000 1                  TNC     s:1827

       46     1818    1             OR (MONSID < BITBIN(%ISSID)) OR (MONSID > BITBIN(%MAXMONSID)) THEN
       47     1819    2               DO;

       48     1820        /*E*   ERROR:  MMM-E$BADSAD-0
       49     1821               MESSAGE: Invalid SEGID specified on M$SAD or M$STD.         */
       50     1822                      %ERRSET(CODE=%E$BADSAD);

   1823  1 000020   001157 236007                    LDQ     623,DL
         1 000021   000003 736000                    QLS     3
         1 000022   000000 276000 0                  ORQ     MMERR
         1 000023   000000 471400 xsym               LDP1    B$JIT$
         1 000024   100012 756100                    STQ     10,,PR1

       51     1825    2                 ALTRETURN;

   1825  1 000025   000000 702200 xent               TSX2  ! X66_AALT

PL6.E3A0      #001=MMM$ACCESS File=MMM$ACCESS.:E05TSI                            WED 07/30/97 03:23 Page:12   
       52     1826    2               END;
       53     1827    1           USID = BITBIN(BUSERSID & '000000000777'O);

   1827  1 000026   000000 236100                    LDQ     0,,PR0
         1 000027   000001 376000 0                  ANQ     MMERR+1
         1 000030   200006 756100                    STQ     USID,,AUTO

       54     1828    1           MSID = BITBIN(BMONSID & '000000000777'O);

   1828  1 000031   100000 236100                    LDQ     0,,PR1
         1 000032   000001 376000 0                  ANQ     MMERR+1
         1 000033   200007 756100                    STQ     MSID,,AUTO

       55     1829        /* If its either of the funny monitor LS-via-WSQ3-descriptors
       56     1830           being requested, then give 'em the write-allowed version if
       57     1831           they have EXMM privilege, otherwise give 'em no-write one.      */
       58     1832    1           IF (MONSID = BITBIN(%WS3MLSSID)) OR

   1832  1 000034   100000 235100                    LDA     0,,PR1
         1 000035   006133 115007                    CMPA    3163,DL
         1 000036   000041 600000 1                  TZE     s:1834
         1 000037   006160 115007                    CMPA    3184,DL
         1 000040   000052 601000 1                  TNZ     s:1838

       59     1833    1             (MONSID = BITBIN(%WS3MLSNWSID))
       60     1834    1             THEN IF (B$JIT.PRIV.ACTIVE & %PR_EXMM#)

   1834  1 000041   000000 473400 xsym               LDP3    B$JIT$
         1 000042   300013 236100                    LDQ     11,,PR3
         1 000043   000004 376000 xsym               ANQ     B_VECTNIL+4
         1 000044   000050 600000 1                  TZE     s:1836

       61     1835    1               THEN MSID = BITBIN(%WS3MLSSID & '0777'O);

   1835  1 000045   000133 236007                    LDQ     91,DL
         1 000046   200007 756100                    STQ     MSID,,AUTO
         1 000047   000052 710000 1                  TRA     s:1838
PL6.E3A0      #001=MMM$ACCESS File=MMM$ACCESS.:E05TSI                            WED 07/30/97 03:23 Page:13   

       62     1836    1               ELSE MSID = BITBIN(%WS3MLSNWSID & '0777'O);

   1836  1 000050   000160 236007                    LDQ     112,DL
         1 000051   200007 756100                    STQ     MSID,,AUTO

       63     1837                %FINDLS (WSQ = EWSQ , P$ = ELS$);

   1838  1 000052   200003 473500                    LDP3    @EWSQ,,AUTO
         1 000053   300000 720100                    LXL0    0,,PR3
         1 000054   000000 236010 xsym               LDQ     MM_LSPTRS$,X0
         1 000055   200010 756100                    STQ     ELS$,,AUTO

       64     1840    1           TEMPDR = B$LS$->B$LS(MSID);

   1840  1 000056   200007 235100                    LDA     MSID,,AUTO
         1 000057   000001 735000                    ALS     1
         1 000060   000000 474400 xsym               LDP4    B$LS$
         1 000061   400000 237105                    LDAQ    0,AL,PR4
         1 000062   200012 757100                    STAQ    TEMPDR,,AUTO

       65     1841    1           IF ADDR(TEMPDR)->B$DR.TYP > 3 THEN

   1841  1 000063   200012 236100                    LDQ     TEMPDR,,AUTO
         1 000064   000017 376007                    ANQ     15,DL
         1 000065   000004 116007                    CMPQ    4,DL
         1 000066   000075 602000 1                  TNC     s:1851

       66     1842    2               DO;

       67     1843        /*E*    ERROR:  MMM-E$DRTYPEBAD-0
       68     1844                MESSAGE: Monitor SEGID must indicate a type 0-3 descriptor. */
       69     1845                      %ERRSET(CODE=%E$DRTYPEBAD);

   1846  1 000067   001164 236007                    LDQ     628,DL
         1 000070   000003 736000                    QLS     3
         1 000071   000000 276000 0                  ORQ     MMERR
PL6.E3A0      #001=MMM$ACCESS File=MMM$ACCESS.:E05TSI                            WED 07/30/97 03:23 Page:14   
         1 000072   000000 475400 xsym               LDP5    B$JIT$
         1 000073   500012 756100                    STQ     10,,PR5

       70     1848    2                 ALTRETURN;

   1848  1 000074   000000 702200 xent               TSX2  ! X66_AALT

       71     1849    2               END;
       72     1850        /* If descriptor type = 0 or 1, and wsr = 0, then make wsr = 1 */
       73     1851    1           IF (ADDR(TEMPDR)->B$DR.TYP <= 1) AND (ADDR(TEMPDR)->B$DR.WSR = 0)

   1851  1 000075   000002 116007                    CMPQ    2,DL
         1 000076   000105 603000 1                  TRC     s:1856
         1 000077   200012 236100                    LDQ     TEMPDR,,AUTO
         1 000100   000160 316007                    CANQ    112,DL
         1 000101   000105 601000 1                  TNZ     s:1856

       74     1852    1             THEN ADDR(TEMPDR)->B$DR.WSR = 1;

   1852  1 000102   000000 376000 2                  ANQ     0
         1 000103   000020 276007                    ORQ     16,DL
         1 000104   200012 756100                    STQ     TEMPDR,,AUTO

       75     1853        /* Change sad's onto monitor's $LS0 to give back a type 2
       76     1854           descriptor pointing at the wsq 3 page table (no housekeeping
       77     1855           pages).                                                         */
       78     1856    1           IF MONSID = BITBIN(%ISSID) THEN

   1856  1 000105   100000 235100                    LDA     0,,PR1
         1 000106   006000 115007                    CMPA    3072,DL
         1 000107   000120 601000 1                  TNZ     s:1862

       79     1857    2               DO;

       80     1858    2                 ADDR(TEMPDR)->B$DR2.TYP = 2;

   1858  1 000110   200012 236100                    LDQ     TEMPDR,,AUTO
PL6.E3A0      #001=MMM$ACCESS File=MMM$ACCESS.:E05TSI                            WED 07/30/97 03:23 Page:15   
         1 000111   000001 376000 2                  ANQ     1
         1 000112   000002 276007                    ORQ     2,DL
         1 000113   200012 756100                    STQ     TEMPDR,,AUTO

       81     1859    2                 ADDR(TEMPDR)->B$DR2.WSQ = 3;

   1859  1 000114   200012 236100                    LDQ     TEMPDR,,AUTO
         1 000115   000002 376000 2                  ANQ     2
         1 000116   000060 276007                    ORQ     48,DL
         1 000117   200012 756100                    STQ     TEMPDR,,AUTO

       82     1860    2               END;

       83     1861        /* Reset write access flag if user doesn't have extended mm privilege */
       84     1862    1           IF (B$JIT$->B$JIT.PRIV.ACTIVE & %PR_EXMM#) = '0'B

   1862  1 000120   000000 475400 xsym               LDP5    B$JIT$
         1 000121   500013 236100                    LDQ     11,,PR5
         1 000122   000004 376000 xsym               ANQ     B_VECTNIL+4
         1 000123   000134 601000 1                  TNZ     s:1864

       85     1863    1             THEN ADDR(TEMPDR)->B$DR.FLGS=ADDR(TEMPDR)->B$DR.FLGS&~%DSWRITE;

   1863  1 000124   200012 236100                    LDQ     TEMPDR,,AUTO
         1 000125   000024 736000                    QLS     20
         1 000126   777000 376003                    ANQ     -512,DU
         1 000127   577000 376003                    ANQ     -66048,DU
         1 000130   000024 772000                    QRL     20
         1 000131   200012 676100                    ERQ     TEMPDR,,AUTO
         1 000132   177600 376007                    ANQ     65408,DL
         1 000133   200012 656100                    ERSQ    TEMPDR,,AUTO

       86     1864    1           ELS$->B$LS(USID) = TEMPDR;

   1864  1 000134   200006 235100                    LDA     USID,,AUTO
         1 000135   000001 735000                    ALS     1
         1 000136   000000 620005                    EAX0    0,AL
PL6.E3A0      #001=MMM$ACCESS File=MMM$ACCESS.:E05TSI                            WED 07/30/97 03:23 Page:16   
         1 000137   200012 237100                    LDAQ    TEMPDR,,AUTO
         1 000140   200010 476500                    LDP6    ELS$,,AUTO
         1 000141   600000 757110                    STAQ    0,X0,PR6

       87     1865    1           RETURN;

   1865  1 000142   000000 702200 xent               TSX2  ! X66_ARET

       88     1866                                                /**/
       89     1867        %EJECT;
PL6.E3A0      #001=MMM$ACCESS File=MMM$ACCESS.:E05TSI                            WED 07/30/97 03:23 Page:17   
       90     1868        /**/
       91     1869        /*F*   NAME:   MMM$NEW_DR                                          */
       92     1870        /*F*   PURPOSE: To insert a descriptor shrunken from those avail-  */
       93     1871        /*,*           to a user program into one of the user's special    */
       94     1872        /*,*           descriptors in his linkage segment.                 */
       95     1873    1   MMM$NEW_DR: ENTRY(EWSQ,MONSID,USERSID) ALTRET;

   1873  1 000143   000000 700200 xent  MMM$NEW_DR   TSX0  ! X66_AUTO_3
         1 000144   000022 000003                    ZERO    18,3

       96     1874                                                /* NOTE: Monsid is not used here      */
       97     1875        /* Insure that usersid is one of the special segid's */
       98     1876    1           IF (USERSID < BITBIN(%SPCL1SID)) OR (USERSID > BITBIN(%SPCL8SID)) OR (
              1876                    USERSID=BITBIN(%ASLENTSID)) THEN

   1876  1 000145   200005 470500                    LDP0    @USERSID,,AUTO
         1 000146   000000 235100                    LDA     0,,PR0
         1 000147   006021 115007                    CMPA    3089,DL
         1 000150   000155 602000 1                  TNC     s:1879
         1 000151   006032 115007                    CMPA    3098,DL
         1 000152   000155 603000 1                  TRC     s:1879
         1 000153   006025 115007                    CMPA    3093,DL
         1 000154   000163 601000 1                  TNZ     s:1883

       99     1877    2               DO;

      100     1878                      %ERRSET(CODE=%E$BADSAD);

   1879  1 000155   001157 236007                    LDQ     623,DL
         1 000156   000003 736000                    QLS     3
         1 000157   000000 276000 0                  ORQ     MMERR
         1 000160   000000 471400 xsym               LDP1    B$JIT$
         1 000161   100012 756100                    STQ     10,,PR1

      101     1881    2                 ALTRETURN;

   1881  1 000162   000000 702200 xent               TSX2  ! X66_AALT
PL6.E3A0      #001=MMM$ACCESS File=MMM$ACCESS.:E05TSI                            WED 07/30/97 03:23 Page:18   

      102     1882    2               END;
      103     1883    1           USID = BITBIN(BUSERSID & '000000000777'O);

   1883  1 000163   000000 236100                    LDQ     0,,PR0
         1 000164   000001 376000 0                  ANQ     MMERR+1
         1 000165   200006 756100                    STQ     USID,,AUTO

      104     1884                %FINDLS (WSQ = EWSQ , P$ = ELS$);

   1885  1 000166   200003 471500                    LDP1    @EWSQ,,AUTO
         1 000167   100000 720100                    LXL0    0,,PR1
         1 000170   000000 236010 xsym               LDQ     MM_LSPTRS$,X0
         1 000171   200010 756100                    STQ     ELS$,,AUTO

      105     1887        /* MMA$WHERE is used here to place the user's descriptor (now in   */
      106     1888        /* $PS1) into the non-housekeeping location MM_WHDR. The results   */
      107     1889        /* returned by the routine are ignored.                            */
      108     1890    1           CALL MMA$WHERE(B$PS1$,MSID,MSID,MSID,ELS$->B$LS(USID));

   1890  1 000172   200006 236100                    LDQ     USID,,AUTO
         1 000173   000023 736000                    QLS     19
         1 000174   200010 036100                    ADLQ    ELS$,,AUTO
         1 000175   200020 756100                    STQ     TEMPDR+6,,AUTO
         1 000176   200007 633500                    EPPR3   MSID,,AUTO
         1 000177   200017 453500                    STP3    TEMPDR+5,,AUTO
         1 000200   200007 634500                    EPPR4   MSID,,AUTO
         1 000201   200016 454500                    STP4    TEMPDR+4,,AUTO
         1 000202   200007 635500                    EPPR5   MSID,,AUTO
         1 000203   200015 455500                    STP5    TEMPDR+3,,AUTO
         1 000204   000003 236000 2                  LDQ     3
         1 000205   200014 756100                    STQ     TEMPDR+2,,AUTO
         1 000206   200014 630500                    EPPR0   TEMPDR+2,,AUTO
         1 000207   000023 631400 xsym               EPPR1   B_VECTNIL+19
         1 000210   000000 701000 xent               TSX1    MMA$WHERE
         1 000211   000000 011000                    NOP     0

PL6.E3A0      #001=MMM$ACCESS File=MMM$ACCESS.:E05TSI                            WED 07/30/97 03:23 Page:19   
      109     1891    1           RETURN;

   1891  1 000212   000000 702200 xent               TSX2  ! X66_ARET

MMERR
 Sect OctLoc
   0     000   151515 400000                                                    i...

(unnamed)
 Sect OctLoc
   0     001   000000 000777                                                    ....

(unnamed)
 Sect OctLoc
   2     000   777777 777617   777777 777760   777777 760017   000000 006000    ................
      110     1892        /**/
      111     1893    1   END MMM$ACCESS;

PL6.E3A0      #001=MMM$ACCESS File=MMM$ACCESS.:E05TSI                            WED 07/30/97 03:23 Page:20   
--  Include file information  --

   B_MACROS_C.:E05TOU  is referenced.
   B_SEGIDS_C.:E05TOU  is referenced.
   M_ERRSET_C.:E05TOU  is referenced.
   M_ERRORS_C.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  is referenced.
   U$JIT_C.:E05TOU  cannot be made into a system file and is referenced.
   MM_MACRO_M.:E05TOU  is referenced.
   B_STRINGS_C.:E05TOU  is referenced.
   MM$SYSGEN.:E05TOU  is referenced.
   M_INFO_C.:E05TOU  is referenced.
   MM_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure MMM$ACCESS.
PL6.E3A0      #001=MMM$ACCESS File=MMM$ACCESS.:E05TSI                            WED 07/30/97 03:23 Page:21   

 **** Variables and constants ****

  ****  Section 000 RoData MMM$ACCESS

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/b STRC        r     1 MMERR

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @EWSQ                      4-0-0/w PTR         r     1 @MONSID
     5-0-0/w PTR         r     1 @USERSID                  *0-0-0/w BIT         r     1 BMONSID
    *0-0-0/w BIT         r     1 BUSERSID                  10-0-0/w PTR         r     1 ELS$
    *0-0-0/w SBIN        r     1 EWSQ                      *0-0-0/w UBIN        r     1 MONSID
     7-0-0/w UBIN        r     1 MSID                      12-0-0/d BIT (72)    r     1 TEMPDR
    *0-0-0/w UBIN        r     1 USERSID                    6-0-0/w UBIN        r     1 USID

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 B$JIT$                     0-0-0/w PTR         r     1 B$LS$
     0-0-0/w PTR         r     1 B$PS1$                     0-0-0/w PTR         r     1 MM_BYP$
     0-0-0/w PTR         r     1 MM_LSPTRS$(0:8)

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(72)    r     1 B$DR                       0-0-0/w STRC(72)    r     1 B$DR2
     0-0-0/d STRC(8856)  r     1 B$JIT                      0-0-0/d BIT (72)    r     1 B$LS(0:0)
PL6.E3A0      #001=MMM$ACCESS File=MMM$ACCESS.:E05TSI                            WED 07/30/97 03:23 Page:22   


   Procedure MMM$ACCESS requires 139 words for executable code.
   Procedure MMM$ACCESS requires 18 words of local(AUTO) storage.

    No errors detected in file MMM$ACCESS.:E05TSI    .
PL6.E3A0      #001=MMM$ACCESS File=MMM$ACCESS.:E05TSI                            WED 07/30/97 03:23 Page:23   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=MMM$ACCESS File=MMM$ACCESS.:E05TSI                            WED 07/30/97 03:23 Page:24   
          MINI XREF LISTING

B$DR.FLGS
      1800**DCL      1863<<ASSIGN   1863>>ASSIGN
B$DR.TYP
      1802**DCL      1841>>IF       1851>>IF
B$DR.WSR
      1801**DCL      1851>>IF       1852<<ASSIGN
B$DR2.TYP
      1810**DCL      1858<<ASSIGN
B$DR2.WSQ
      1809**DCL      1859<<ASSIGN
B$JIT.CPFLAGS1.SLEAZE
       972**DCL       972--REDEF
B$JIT.ERR
       878**DCL      1823<<ASSIGN   1846<<ASSIGN   1879<<ASSIGN
B$JIT.ERR.MID
       879**DCL       879--REDEF
B$JIT.PRIV.ACTIVE
       879**DCL      1834>>IF       1862>>IF
B$JIT$
        26**DCL       873--IMP-PTR  1823>>ASSIGN   1834>>IF       1846>>ASSIGN   1862>>IF       1879>>ASSIGN
B$LS
        24**DCL      1840>>ASSIGN   1864<<ASSIGN   1890<>CALL
B$LS$
        25**DCL      1840>>ASSIGN
B$PS1$
        27**DCL      1890<>CALL
BMONSID
        15**DCL      1828>>ASSIGN
BUSERSID
        17**DCL      1827>>ASSIGN   1883>>ASSIGN
ELS$
        22**DCL      1838<<ASSIGN   1864>>ASSIGN   1885<<ASSIGN   1890>>CALL
PL6.E3A0      #001=MMM$ACCESS File=MMM$ACCESS.:E05TSI                            WED 07/30/97 03:23 Page:25   
EWSQ
        13**DCL        12--PROC     1838>>ASSIGN   1873--ENTRY    1885>>ASSIGN
MM$DESC.BOUND
       502**DCL       503--REDEF
MM$DESC.FLGS
       503**DCL       503--REDEF
MM$PPUT.USER#
       491**DCL       491--REDEF
MMA$WHERE
        29**DCL-ENT  1890--CALL
MMERR
      1790**DCL      1823>>ASSIGN   1846>>ASSIGN   1879>>ASSIGN
MM_BYP$
       422**DCL       422--IMP-PTR
MM_LSPTRS$
       502**DCL      1838>>ASSIGN   1885>>ASSIGN
MONSID
        14**DCL        12--PROC       15--REDEF    1817>>IF       1817>>IF       1832>>IF       1832>>IF
      1856>>IF       1873--ENTRY
MSID
        21**DCL      1828<<ASSIGN   1835<<ASSIGN   1836<<ASSIGN   1840>>ASSIGN   1890<>CALL     1890<>CALL
      1890<>CALL
TEMPDR
        23**DCL      1840<<ASSIGN   1841--IF       1851--IF       1851--IF       1852--ASSIGN   1858--ASSIGN
      1859--ASSIGN   1863--ASSIGN   1863--ASSIGN   1864>>ASSIGN
USERSID
        16**DCL        12--PROC       17--REDEF    1817>>IF       1817>>IF       1817>>IF       1873--ENTRY
      1876>>IF       1876>>IF       1876>>IF
USID
        20**DCL      1827<<ASSIGN   1864>>ASSIGN   1883<<ASSIGN   1890>>CALL
