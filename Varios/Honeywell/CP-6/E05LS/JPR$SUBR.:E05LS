VERSION E05

PL6.E3A0      #001=JPR$FINRES File=JPR$SUBR.:E05TSI                              TUE 07/29/97 23:38 Page:1    
        1        1        /*M* JPR$SUBR Contains modules concerned with RESOURCE processing */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* DMC,PLM=4,IND=0,DCI=4,CSI=2,IAD=2,DTI=2,AND,ECI=0,DIN=2,STI=2 */
        8        8        JPR$FINRES: PROC (JOB_TBL, VIRT_TBL, PSN_TBL, PHYS_LIST);
        9        9        /***** Include files *****/
       10       10          %INCLUDE AS_SUPER_C;
       11      445          %INCLUDE B$JIT;
       12      735          %INCLUDE CP_6;
       13      816          %INCLUDE CP_6_SUBS;
       14     1356          %INCLUDE CP_MACROS_C;
       15     2108          %INCLUDE JP_PERR_C;
       16     2126          %INCLUDE CP_SUBS_C;
       17     3043          %INCLUDE JM$STRUCT;
       18     3788          %INCLUDE JM_SUBS_C;
       19     3894          %INCLUDE KL_SUPER_C;
       20     6796          %INCLUDE M_INFO_C;
       21     6936          %INCLUDE XSJ_SUBS_C;
       22     6963          %INCLUDE JP_DATA_R;
       23     7508        /***** External routines *****/
       24     7509    1     DCL JPE$REASON ENTRY(1);
       25     7510    1     DCL JPE$ERRORS ENTRY(2);
       26     7511    1     DCL CPO$EXPAND ENTRY(2) ALTRET;
       27     7512    1     DCL CPO$STORE_PSN ENTRY(3) ALTRET;
       28     7513    1     DCL CPO$VALIDATE ENTRY(7) ALTRET;
       29     7514        /***** Parameters *****/
       30     7515        %JM_IF (FPTN = JOB_TBL,FIT = YES,STCLASS = " ");
       31     7673        %JM_RESLIST (FPTN = VIRT_TBL,ARRAY = "(0:VIRT_SLOTS)",FIT = YES,STCLASS=" ");
       32     7728        %JM_SNLIST (FPTN = PSN_TBL,ARRAY = "(0:PSN_SLOTS)",FIT = YES,STCLASS = " ");
       33     7785        %VLP_PRES (FPTN=PHYS_LIST,STCLASS = " ");
       34     7801        /***** Local auto *****/
       35     7802        %JM_SN(FPTN = PSN,TYP = LIST,STCLASS = AUTO);
       36     7841        %ERR_CODE (STCLASS = AUTO);
       37     7861        %VLP_NAME (FPTN = ERR_TEXT,LEN = 7,STCLASS = AUTO);
PL6.E3A0      #001=JPR$FINRES File=JPR$SUBR.:E05TSI                              TUE 07/29/97 23:38 Page:2    
       38     7888    1     DCL RES_START SBIN WORD AUTO;
       39     7889        /***** Error codes *****/
       40     7890        %ERR_CODE(NAME=E_SMALLMEM,FCG#='1220'O,MID#='22'O,CODE#=%E$JPSMALLMEM,STCLASS=
              7890            CONSTANT);
       41     7910        /*E* ERROR: JPR-E$JPSMALLMEM-0
       42     7911             MESSAGE: Default MEMORY resource less than system minimum */
       43     7912        %EJECT;
PL6.E3A0      #001=JPR$FINRES File=JPR$SUBR.:E05TSI                              TUE 07/29/97 23:38 Page:3    
       44     7913    1       IF JOB_TBL.RRT(JM_RX$MEM) < %MM_MINMEM#
       45     7914    1       THEN
       46     7915    2         DO;
       47     7916    2           CALL JPE$REASON(%REJ_RES#);
       48     7917    2           CALL JPE$ERRORS(E_SMALLMEM);
       49     7918    2         END;
       50     7919    1       IF NHPSN# = %NO#
       51     7920    1       THEN   /* NHPSN not specified */
       52     7921    2         DO;
       53     7922        /*
       54     7923             ***** Reset all flags. Don't care in what mode this
       55     7924                   packset is mounted so long as it is mounted ...
       56     7925        */
       57     7926    2           PSN.FLGS = %NO#;
       58     7927    2           PSN.TXT = KL_DREC.HPS.N;
       59     7928    2           CALL CPO$STORE_PSN (PSN_TBL,PSN,ERR_CODE) ALTRET(E_PSN);
       60     7929    3           DO NEVER;
       61     7930    3   E_PSN:
       62     7931    3             CALL JPE$ERRORS (ERR_CODE);
       63     7932    3           END;
       64     7933    2         END;
       65     7934        /*
       66     7935             ***** Expand the VIRT_TBL list.
       67     7936                   If too many PHYSICAL RESOURCES were requested
       68     7937                   then abort processing of the RESOURCE cmd ...
       69     7938        */
       70     7939    1       CALL CPO$EXPAND (VIRT_TBL, ERR_CODE) ALTRET(E_EXPAND);
       71     7940        /*
       72     7941             ***** Validate this list against :USERS and actual
       73     7942                   system resources available ...
       74     7943        */
       75     7944    1       RES_START = 0;
       76     7945    2       DO WHILE (RES_START < VIRT_TBL.COUNT);
       77     7946    2         CALL CPO$VALIDATE (RES_START, %M_BATCH#, VIRT_TBL, PHYS_LIST,
       78     7947    2           AS_USERS, ERR_CODE, ERR_TEXT) ALTRET(E_VALIDATE);
       79     7948    3         DO NEVER;
       80     7949    3   E_VALIDATE:
PL6.E3A0      #001=JPR$FINRES File=JPR$SUBR.:E05TSI                              TUE 07/29/97 23:38 Page:4    
       81     7950    3           CALL JPE$REASON (%REJ_RES#);
       82     7951    3           CALL JPE$ERRORS (ERR_CODE,VECTOR(ERR_TEXT));
       83     7952    3         END;
       84     7953    2       END; /* Validate loop */
       85     7954        /**/
       86     7955    2       DO NEVER;
       87     7956    2   E_EXPAND:
       88     7957    2         CALL JPE$REASON (%REJ_PRESCAN#);
       89     7958    2         CALL JPE$ERRORS (ERR_CODE);
       90     7959    2       END;
       91     7960    1       RETURN;
       92     7961    1   END JPR$FINRES;

PL6.E3A0      #001=JPR$FINRES File=JPR$SUBR.:E05TSI                              TUE 07/29/97 23:38 Page:5    
--  Include file information  --

   JP_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   XSJ_SUBS_C.:E05TOU  is referenced.
   M_INFO_C.:E05TOU  is referenced.
   KL_SUPER_C.:E05TOU  is referenced.
   JM_SUBS_C.:E05TOU  is referenced.
   JM$STRUCT.:E05TOU  is referenced.
   CP_SUBS_C.:E05TOU  is referenced.
   JP_PERR_C.:E05TOU  is referenced.
   CP_MACROS_C.:E05TOU  is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT.:E05TOU  cannot be made into a system file and is referenced.
   AS_SUPER_C.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure JPR$FINRES.

   Procedure JPR$FINRES requires 104 words for executable code.
   Procedure JPR$FINRES requires 22 words of local(AUTO) storage.

    No errors detected in file JPR$SUBR.:E05TSI    .

PL6.E3A0      #001=JPR$FINRES File=JPR$SUBR.:E05TSI                              TUE 07/29/97 23:38 Page:6    

 Object Unit name= JPR$FINRES                                 File name= JPR$SUBR.:E05TOU
 UTS= JUL 29 '97 23:38:35.20 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1   DCB   even  none     0      0  M$CG
    2   DCB   even  none     0      0  M$EI
    3   DCB   even  none     0      0  M$LO
    4   DCB   even  none     0      0  M$JOBSTAT
    5   DCB   even  none     0      0  M$HLP
    6   DCB   even  none     0      0  M$USERS
    7  RoData even  UTS      1      1  JPR$FINRES
    8   Proc  even  none   104    150  JPR$FINRES
    9  RoData even  none     9     11  JPR$FINRES

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     8      0   yes            yes      Std        4  JPR$FINRES
PL6.E3A0      #001=JPR$FINRES File=JPR$SUBR.:E05TSI                              TUE 07/29/97 23:38 Page:7    

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       1 JPE$REASON
 yes     yes           Std       2 CPO$EXPAND
 yes     yes           Std       7 CPO$VALIDATE
         yes           Std       2 JPE$ERRORS
 yes     yes           Std       3 CPO$STORE_PSN
                       nStd      0 X66_AUTO_4
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                             r    B$JIT$                           r    B$TCB$
     AS_USERS                              KL_DREC                               M$CG
     M$EI                                  M$LO                                  M$JOBSTAT
     M$HLP                                 M$USERS                               NHPSN#
     ES$                                   B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
PL6.E3A0      #001=JPR$FINRES File=JPR$SUBR.:E05TSI                              TUE 07/29/97 23:38 Page:8    


        1        1        /*M* JPR$SUBR Contains modules concerned with RESOURCE processing */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* DMC,PLM=4,IND=0,DCI=4,CSI=2,IAD=2,DTI=2,AND,ECI=0,DIN=2,STI=2 */
        8        8        JPR$FINRES: PROC (JOB_TBL, VIRT_TBL, PSN_TBL, PHYS_LIST);

      8  8 000000   000000 700200 xent  JPR$FINRES   TSX0  ! X66_AUTO_4
         8 000001   000026 000004                    ZERO    22,4

        9        9        /***** Include files *****/
       10       10          %INCLUDE AS_SUPER_C;
       11      445          %INCLUDE B$JIT;
       12      735          %INCLUDE CP_6;
       13      816          %INCLUDE CP_6_SUBS;
       14     1356          %INCLUDE CP_MACROS_C;
       15     2108          %INCLUDE JP_PERR_C;
       16     2126          %INCLUDE CP_SUBS_C;
       17     3043          %INCLUDE JM$STRUCT;
       18     3788          %INCLUDE JM_SUBS_C;
       19     3894          %INCLUDE KL_SUPER_C;
       20     6796          %INCLUDE M_INFO_C;
       21     6936          %INCLUDE XSJ_SUBS_C;
       22     6963          %INCLUDE JP_DATA_R;
       23     7508        /***** External routines *****/
       24     7509    1     DCL JPE$REASON ENTRY(1);
       25     7510    1     DCL JPE$ERRORS ENTRY(2);
       26     7511    1     DCL CPO$EXPAND ENTRY(2) ALTRET;
       27     7512    1     DCL CPO$STORE_PSN ENTRY(3) ALTRET;
       28     7513    1     DCL CPO$VALIDATE ENTRY(7) ALTRET;
       29     7514        /***** Parameters *****/
       30     7515        %JM_IF (FPTN = JOB_TBL,FIT = YES,STCLASS = " ");
       31     7673        %JM_RESLIST (FPTN = VIRT_TBL,ARRAY = "(0:VIRT_SLOTS)",FIT = YES,STCLASS=" ");
       32     7728        %JM_SNLIST (FPTN = PSN_TBL,ARRAY = "(0:PSN_SLOTS)",FIT = YES,STCLASS = " ");
PL6.E3A0      #001=JPR$FINRES File=JPR$SUBR.:E05TSI                              TUE 07/29/97 23:38 Page:9    
       33     7785        %VLP_PRES (FPTN=PHYS_LIST,STCLASS = " ");
       34     7801        /***** Local auto *****/
       35     7802        %JM_SN(FPTN = PSN,TYP = LIST,STCLASS = AUTO);
       36     7841        %ERR_CODE (STCLASS = AUTO);
       37     7861        %VLP_NAME (FPTN = ERR_TEXT,LEN = 7,STCLASS = AUTO);
       38     7888    1     DCL RES_START SBIN WORD AUTO;
       39     7889        /***** Error codes *****/
       40     7890        %ERR_CODE(NAME=E_SMALLMEM,FCG#='1220'O,MID#='22'O,CODE#=%E$JPSMALLMEM,STCLASS=
              7890            CONSTANT);
       41     7910        /*E* ERROR: JPR-E$JPSMALLMEM-0
       42     7911             MESSAGE: Default MEMORY resource less than system minimum */
       43     7912        %EJECT;
PL6.E3A0      #001=JPR$FINRES File=JPR$SUBR.:E05TSI                              TUE 07/29/97 23:38 Page:10   
       44     7913    1       IF JOB_TBL.RRT(JM_RX$MEM) < %MM_MINMEM#

   7913  8 000002   200003 470500                    LDP0    @JOB_TBL,,AUTO
         8 000003   000042 220100                    LDX0    34,,PR0
         8 000004   000010 100003                    CMPX0   8,DU
         8 000005   000016 603000 8                  TRC     s:7919

       45     7914    1       THEN
       46     7915    2         DO;

       47     7916    2           CALL JPE$REASON(%REJ_RES#);

   7916  8 000006   000001 630400 9                  EPPR0   1
         8 000007   000017 631400 xsym               EPPR1   B_VECTNIL+15
         8 000010   000000 701000 xent               TSX1    JPE$REASON
         8 000011   000000 011000                    NOP     0

       48     7917    2           CALL JPE$ERRORS(E_SMALLMEM);

   7917  8 000012   000002 630400 9                  EPPR0   2
         8 000013   000017 631400 xsym               EPPR1   B_VECTNIL+15
         8 000014   000000 701000 xent               TSX1    JPE$ERRORS
         8 000015   000000 011000                    NOP     0

       49     7918    2         END;

       50     7919    1       IF NHPSN# = %NO#

   7919  8 000016   000000 234000 xsym               SZN     NHPSN#
         8 000017   000046 604000 8                  TMI     s:7939

       51     7920    1       THEN   /* NHPSN not specified */
       52     7921    2         DO;

       53     7922        /*
       54     7923             ***** Reset all flags. Don't care in what mode this
       55     7924                   packset is mounted so long as it is mounted ...
PL6.E3A0      #001=JPR$FINRES File=JPR$SUBR.:E05TSI                              TUE 07/29/97 23:38 Page:11   
       56     7925        */
       57     7926    2           PSN.FLGS = %NO#;

   7926  8 000020   000003 236000 9                  LDQ     3
         8 000021   200010 356100                    ANSQ    PSN+1,,AUTO

       58     7927    2           PSN.TXT = KL_DREC.HPS.N;

   7927  8 000022   040100 100400                    MLR     fill='040'O
         8 000023   000011 000006 xsym               ADSC9   KL_DREC+9                cn=0,n=6
         8 000024   200007 000006                    ADSC9   PSN,,AUTO                cn=0,n=6

       59     7928    2           CALL CPO$STORE_PSN (PSN_TBL,PSN,ERR_CODE) ALTRET(E_PSN);

   7928  8 000025   200011 630500                    EPPR0   ERR_CODE,,AUTO
         8 000026   200020 450500                    STP0    RES_START+4,,AUTO
         8 000027   200007 631500                    EPPR1   PSN,,AUTO
         8 000030   200017 451500                    STP1    RES_START+3,,AUTO
         8 000031   200005 236100                    LDQ     @PSN_TBL,,AUTO
         8 000032   200016 756100                    STQ     RES_START+2,,AUTO
         8 000033   200016 630500                    EPPR0   RES_START+2,,AUTO
         8 000034   000021 631400 xsym               EPPR1   B_VECTNIL+17
         8 000035   000000 701000 xent               TSX1    CPO$STORE_PSN
         8 000036   000040 702000 8                  TSX2    E_PSN

       60     7929    3           DO NEVER;

   7929  8 000037   000046 710000 8                  TRA     s:7939

       61     7930    3   E_PSN:
       62     7931    3             CALL JPE$ERRORS (ERR_CODE);

   7931  8 000040   200011 630500       E_PSN        EPPR0   ERR_CODE,,AUTO
         8 000041   200016 450500                    STP0    RES_START+2,,AUTO
         8 000042   200016 630500                    EPPR0   RES_START+2,,AUTO
         8 000043   000017 631400 xsym               EPPR1   B_VECTNIL+15
         8 000044   000000 701000 xent               TSX1    JPE$ERRORS
PL6.E3A0      #001=JPR$FINRES File=JPR$SUBR.:E05TSI                              TUE 07/29/97 23:38 Page:12   
         8 000045   000000 011000                    NOP     0

       63     7932    3           END;

       64     7933    2         END;

       65     7934        /*
       66     7935             ***** Expand the VIRT_TBL list.
       67     7936                   If too many PHYSICAL RESOURCES were requested
       68     7937                   then abort processing of the RESOURCE cmd ...
       69     7938        */
       70     7939    1       CALL CPO$EXPAND (VIRT_TBL, ERR_CODE) ALTRET(E_EXPAND);

   7939  8 000046   200011 630500                    EPPR0   ERR_CODE,,AUTO
         8 000047   200017 450500                    STP0    RES_START+3,,AUTO
         8 000050   200004 236100                    LDQ     @VIRT_TBL,,AUTO
         8 000051   200016 756100                    STQ     RES_START+2,,AUTO
         8 000052   200016 630500                    EPPR0   RES_START+2,,AUTO
         8 000053   000020 631400 xsym               EPPR1   B_VECTNIL+16
         8 000054   000000 701000 xent               TSX1    CPO$EXPAND
         8 000055   000135 702000 8                  TSX2    E_EXPAND

       71     7940        /*
       72     7941             ***** Validate this list against :USERS and actual
       73     7942                   system resources available ...
       74     7943        */
       75     7944    1       RES_START = 0;

   7944  8 000056   200014 450100                    STZ     RES_START,,AUTO

       76     7945    2       DO WHILE (RES_START < VIRT_TBL.COUNT);

   7945  8 000057   200004 470500                    LDP0    @VIRT_TBL,,AUTO
         8 000060   200014 236100                    LDQ     RES_START,,AUTO
         8 000061   000064 604000 8                  TMI     s:7946
         8 000062   000000 116100                    CMPQ    0,,PR0
         8 000063   000134 603000 8                  TRC     s:7955
PL6.E3A0      #001=JPR$FINRES File=JPR$SUBR.:E05TSI                              TUE 07/29/97 23:38 Page:13   

       77     7946    2         CALL CPO$VALIDATE (RES_START, %M_BATCH#, VIRT_TBL, PHYS_LIST,

   7946  8 000064   200012 630500                    EPPR0   ERR_TEXT,,AUTO
         8 000065   200024 450500                    STP0    RES_START+8,,AUTO
         8 000066   200011 631500                    EPPR1   ERR_CODE,,AUTO
         8 000067   200023 451500                    STP1    RES_START+7,,AUTO
         8 000070   000004 236000 9                  LDQ     4
         8 000071   200022 756100                    STQ     RES_START+6,,AUTO
         8 000072   200006 236100                    LDQ     @PHYS_LIST,,AUTO
         8 000073   200004 235100                    LDA     @VIRT_TBL,,AUTO
         8 000074   200020 757100                    STAQ    RES_START+4,,AUTO
         8 000075   000005 236000 9                  LDQ     5
         8 000076   200017 756100                    STQ     RES_START+3,,AUTO
         8 000077   200014 633500                    EPPR3   RES_START,,AUTO
         8 000100   200016 453500                    STP3    RES_START+2,,AUTO
         8 000101   200016 630500                    EPPR0   RES_START+2,,AUTO
         8 000102   000025 631400 xsym               EPPR1   B_VECTNIL+21
         8 000103   000000 701000 xent               TSX1    CPO$VALIDATE
         8 000104   000106 702000 8                  TSX2    E_VALIDATE

       78     7947    2           AS_USERS, ERR_CODE, ERR_TEXT) ALTRET(E_VALIDATE);
       79     7948    3         DO NEVER;

   7948  8 000105   000127 710000 8                  TRA     s:7953

       80     7949    3   E_VALIDATE:
       81     7950    3           CALL JPE$REASON (%REJ_RES#);

   7950  8 000106   000001 630400 9     E_VALIDATE   EPPR0   1
         8 000107   000017 631400 xsym               EPPR1   B_VECTNIL+15
         8 000110   000000 701000 xent               TSX1    JPE$REASON
         8 000111   000000 011000                    NOP     0

       82     7951    3           CALL JPE$ERRORS (ERR_CODE,VECTOR(ERR_TEXT));

   7951  8 000112   000006 235000 9                  LDA     6
PL6.E3A0      #001=JPR$FINRES File=JPR$SUBR.:E05TSI                              TUE 07/29/97 23:38 Page:14   
         8 000113   200016 452500                    STP2    RES_START+2,,AUTO
         8 000114   200016 236100                    LDQ     RES_START+2,,AUTO
         8 000115   000012 036003                    ADLQ    10,DU
         8 000116   200020 757100                    STAQ    RES_START+4,,AUTO
         8 000117   200020 630500                    EPPR0   RES_START+4,,AUTO
         8 000120   200023 450500                    STP0    RES_START+7,,AUTO
         8 000121   200011 631500                    EPPR1   ERR_CODE,,AUTO
         8 000122   200022 451500                    STP1    RES_START+6,,AUTO
         8 000123   200022 630500                    EPPR0   RES_START+6,,AUTO
         8 000124   000020 631400 xsym               EPPR1   B_VECTNIL+16
         8 000125   000000 701000 xent               TSX1    JPE$ERRORS
         8 000126   000000 011000                    NOP     0

       83     7952    3         END;

       84     7953    2       END; /* Validate loop */

   7953  8 000127   200004 470500                    LDP0    @VIRT_TBL,,AUTO
         8 000130   200014 236100                    LDQ     RES_START,,AUTO
         8 000131   000064 604000 8                  TMI     s:7946
         8 000132   000000 116100                    CMPQ    0,,PR0
         8 000133   000064 602000 8                  TNC     s:7946

       85     7954        /**/
       86     7955    2       DO NEVER;

   7955  8 000134   000147 710000 8                  TRA     s:7960

       87     7956    2   E_EXPAND:
       88     7957    2         CALL JPE$REASON (%REJ_PRESCAN#);

   7957  8 000135   000010 630400 9     E_EXPAND     EPPR0   8
         8 000136   000017 631400 xsym               EPPR1   B_VECTNIL+15
         8 000137   000000 701000 xent               TSX1    JPE$REASON
         8 000140   000000 011000                    NOP     0

       89     7958    2         CALL JPE$ERRORS (ERR_CODE);
PL6.E3A0      #001=JPR$FINRES File=JPR$SUBR.:E05TSI                              TUE 07/29/97 23:38 Page:15   

   7958  8 000141   200011 630500                    EPPR0   ERR_CODE,,AUTO
         8 000142   200016 450500                    STP0    RES_START+2,,AUTO
         8 000143   200016 630500                    EPPR0   RES_START+2,,AUTO
         8 000144   000017 631400 xsym               EPPR1   B_VECTNIL+15
         8 000145   000000 701000 xent               TSX1    JPE$ERRORS
         8 000146   000000 011000                    NOP     0

       90     7959    2       END;

       91     7960    1       RETURN;

   7960  8 000147   000000 702200 xent               TSX2  ! X66_ARET
       92     7961    1   END JPR$FINRES;

PL6.E3A0      #001=JPR$FINRES File=JPR$SUBR.:E05TSI                              TUE 07/29/97 23:38 Page:16   
--  Include file information  --

   JP_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   XSJ_SUBS_C.:E05TOU  is referenced.
   M_INFO_C.:E05TOU  is referenced.
   KL_SUPER_C.:E05TOU  is referenced.
   JM_SUBS_C.:E05TOU  is referenced.
   JM$STRUCT.:E05TOU  is referenced.
   CP_SUBS_C.:E05TOU  is referenced.
   JP_PERR_C.:E05TOU  is referenced.
   CP_MACROS_C.:E05TOU  is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT.:E05TOU  cannot be made into a system file and is referenced.
   AS_SUPER_C.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure JPR$FINRES.
PL6.E3A0      #001=JPR$FINRES File=JPR$SUBR.:E05TSI                              TUE 07/29/97 23:38 Page:17   

 **** Variables and constants ****

  ****  Section 007 RoData JPR$FINRES

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC        r     1 E_SMALLMEM

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @JOB_TBL                   6-0-0/w PTR         r     1 @PHYS_LIST
     5-0-0/w PTR         r     1 @PSN_TBL                   4-0-0/w PTR         r     1 @VIRT_TBL
    11-0-0/w STRC        r     1 ERR_CODE                  12-0-0/c STRC(72)    r     1 ERR_TEXT
    *0-0-0/w STRC(1980)  r     1 JOB_TBL                   *0-0-0/d STRC(360)   r     1 PHYS_LIST
     7-0-0/w STRC(63)    r     1 PSN                       *0-0-0/w STRC(2988)  r     1 PSN_TBL
    14-0-0/w SBIN        r     1 RES_START                 *0-0-0/w STRC(2268)  r     1 VIRT_TBL

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(18576) r     1 AS_USERS                   0-0-0/w PTR         r     1 B$JIT$
     0-0-0/w PTR         r     1 B$TCB$                     0-0-0/w PTR         r     1 ES$
     0-0-0/w STRC(6084)  r     1 KL_DREC                    0-0-0/b BIT         r     1 NHPSN#

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d ASTR(3528)  r     1 F$DCB

PL6.E3A0      #001=JPR$FINRES File=JPR$SUBR.:E05TSI                              TUE 07/29/97 23:38 Page:18   

   Procedure JPR$FINRES requires 104 words for executable code.
   Procedure JPR$FINRES requires 22 words of local(AUTO) storage.

    No errors detected in file JPR$SUBR.:E05TSI    .
PL6.E3A0      #001=JPR$FINRES File=JPR$SUBR.:E05TSI                              TUE 07/29/97 23:38 Page:19   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=JPR$FINRES File=JPR$SUBR.:E05TSI                              TUE 07/29/97 23:38 Page:20   
          MINI XREF LISTING

AS_USERS
      7152**DCL      7946<>CALL
AS_USERS.BANNER_PERM
      7267**DCL      7268--REDEF
AS_USERS.BUDGET.MACCT
      7172**DCL      7176--REDEF
AS_USERS.BUDGET.MAX_PROJECTS
      7185**DCL      7188--REDEF
AS_USERS.BUDGET.PACCUM
      7168**DCL      7170--REDEF
AS_USERS.BUDGET.PMAXC
      7163**DCL      7165--REDEF
AS_USERS.SETUP_CHRA.TXT
      7283**DCL      7284--REDEF    7285--REDEF
B$ALT.CODE
      7076**DCL      7076--REDEF    7077--REDEF    7077--REDEF
B$ALT.ERR.ERR#
      7078**DCL      7078--REDEF
B$ALT.EVID
      7077**DCL      7077--REDEF    7077--REDEF
B$JIT.CPFLAGS1.SLEAZE
       553**DCL       553--REDEF
B$JIT.ERR.MID
       460**DCL       460--REDEF
B$JIT.JRESPEAK
       621**DCL       622--REDEF
B$JIT.ORIGINATOR_PORT.FROM_CR
       730**DCL       730--REDEF     731--REDEF
B$JIT.PNR
       634**DCL       634--REDEF
B$JIT.TSLINE
       728**DCL       729--REDEF
PL6.E3A0      #001=JPR$FINRES File=JPR$SUBR.:E05TSI                              TUE 07/29/97 23:38 Page:21   
B$JIT$
      7064**DCL       454--IMP-PTR
B$TCB$
      7066**DCL      7072--IMP-PTR
CPO$EXPAND
      7511**DCL-ENT  7939--CALL
CPO$STORE_PSN
      7512**DCL-ENT  7928--CALL
CPO$VALIDATE
      7513**DCL-ENT  7946--CALL
ERR_CODE
      7854**DCL      7928<>CALL     7931<>CALL     7939<>CALL     7946<>CALL     7951<>CALL     7958<>CALL
ERR_TEXT
      7886**DCL      7946<>CALL     7951--CALL
ES$
      7501**DCL      7502--REDEF    7505--IMP-PTR
E_EXPAND
      7957**LABEL    7939--CALLALT
E_PSN
      7931**LABEL    7928--CALLALT
E_SMALLMEM
      7903**DCL      7917<>CALL
E_VALIDATE
      7950**LABEL    7946--CALLALT
F$DCB.ACTPOS
      7115**DCL      7115--REDEF
F$DCB.ARS#
      7089**DCL      7089--REDEF
F$DCB.ATTR
      7108**DCL      7109--REDEF
F$DCB.BORROW
      7123**DCL      7123--REDEF    7123--REDEF    7123--REDEF
F$DCB.DCBNAME.L
      7137**DCL      7137--IMP-SIZ
F$DCB.EOMCHAR#
      7093**DCL      7093--REDEF
PL6.E3A0      #001=JPR$FINRES File=JPR$SUBR.:E05TSI                              TUE 07/29/97 23:38 Page:22   
F$DCB.FLDID
      7118**DCL      7118--REDEF
F$DCB.FORM$
      7112**DCL      7112--REDEF
F$DCB.FSECT
      7128**DCL      7128--REDEF
F$DCB.FSN#
      7105**DCL      7105--REDEF    7105--REDEF    7106--REDEF
F$DCB.HEADER$
      7111**DCL      7111--REDEF
F$DCB.IXTNSIZE#
      7109**DCL      7109--REDEF
F$DCB.LASTSTA$
      7098**DCL      7098--REDEF
F$DCB.LVL
      7124**DCL      7124--REDEF
F$DCB.NAME#.C
      7099**DCL      7099--REDEF
F$DCB.NOEOF
      7121**DCL      7121--REDEF
F$DCB.NRECS#
      7110**DCL      7110--REDEF
F$DCB.NRECX
      7129**DCL      7129--REDEF
F$DCB.OHDR
      7121**DCL      7121--REDEF
F$DCB.ORG#
      7104**DCL      7104--REDEF
F$DCB.PRECNO
      7127**DCL      7127--REDEF
F$DCB.RCSZ
      7133**DCL      7133--REDEF
F$DCB.RES#
      7100**DCL      7100--REDEF
F$DCB.SETX
      7112**DCL      7112--REDEF
PL6.E3A0      #001=JPR$FINRES File=JPR$SUBR.:E05TSI                              TUE 07/29/97 23:38 Page:23   
F$DCB.TAB$
      7112**DCL      7112--REDEF
F$DCB.TDA
      7126**DCL      7127--REDEF
F$DCB.WSN#
      7100**DCL      7100--REDEF
JOB_TBL
      7528**DCL         8--PROC
JOB_TBL.RRT
      7644**DCL      7913>>IF
JPE$ERRORS
      7510**DCL-ENT  7917--CALL     7931--CALL     7951--CALL     7958--CALL
JPE$REASON
      7509**DCL-ENT  7916--CALL     7950--CALL     7957--CALL
KL_DREC.HPS.N
      7416**DCL      7927>>ASSIGN
KL_DREC.PASSWORD
      7388**DCL      7392--REDEF
KL_DREC.RENAME
      7411**DCL      7412--REDEF
NHPSN#
      7487**DCL      7919>>IF
PHYS_LIST
      7796**DCL         8--PROC     7946<>CALL
PHYS_LIST.PRLIST.RNAME#
      7796**DCL      7797--REDEF
PSN
      7817**DCL      7928<>CALL
PSN.FLGS
      7824**DCL      7926<<ASSIGN
PSN.TXT
      7822**DCL      7927<<ASSIGN
PSN_TBL
      7741**DCL         8--PROC     7928<>CALL
READ_CARD.STATION_
      7037**DCL      7038--REDEF
PL6.E3A0      #001=JPR$FINRES File=JPR$SUBR.:E05TSI                              TUE 07/29/97 23:38 Page:24   
READ_CARD.V.DVBYTE.REREAD#
      7049**DCL      7049--REDEF
READ_CARD.V.INDX#
      7047**DCL      7047--REDEF
RES_START
      7888**DCL      7944<<ASSIGN   7945>>DOWHILE  7946<>CALL
VIRT_TBL
      7686**DCL         8--PROC     7939<>CALL     7946<>CALL
VIRT_TBL.COUNT
      7688**DCL      7945>>DOWHILE
VIRT_TBL.RES.VNUM
      7712**DCL      7714--REDEF
