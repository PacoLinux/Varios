VERSION E05

PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:1    
        1        1        /*M* QI_DATA_D:  Context for the FPL interpreter.  */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* DMC,PLM=4,IND=0,DCI=4,CSI=2,IAD=2,DTI=2,AND,ECI=0,DIN=2,STI=2 */
        8        8
        9        9        QI_DATA_D: PROC;
       10       10
       11       11          %INCLUDE LCP_6;
       12      202
       13      203          %SET LISTINC = '1'B;
       14      204          %SET LISTMAC = '1'B;
       15      205
       16      206          %INCLUDE QG_MACRO_M;
        1+     207        /*M* QG_MACRO_M:  Macros for VDO-buffering library services.  */
        2+     208        /*T***********************************************************/
        3+     209        /*T*                                                         */
        4+     210        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5+     211        /*T*                                                         */
        6+     212        /*T***********************************************************/
        7+     213        /*F* NAME:  QGB_INCLUDE Files
        8+     214        The include file necessary to make use of the QGB services
        9+     215        is located in the :LIBRARY account.  It is a PL-6 include file
       10+     216        and contains MACRO and ENTRY definitions which are used to interface
       11+     217        to the services.
       12+     218        ..::TB "INCLUDE File for QGB Services\File\#15\Contents"
       13+     219        ..::IT "QG_MACRO_M"
       14+     220        QGB_PARAM macro which defines the parameter block that is passed to
       15+     221        the QGB services.
       16+     222
       17+     223        QGB_ENTRIES macro which defines entry points for QGB services.
       18+     224        ..::TB
       19+     225        */
       20+     226        /*F* NAME:  QGB_Linking Information
       21+     227        The QGB services are FEP-resident routines that are not present
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:2    
       22+     228        in the :SHARED_LCP6_SYSTEM shared library.  They reside in the
       23+     229        QGB$BUFFER_VDO object unit in the :LIBRARY account, and must be
       24+     230        explicitly linked with the user's program with FEPLINK:
       25+     231
       26+     232        }  !FEPLINK my_ou, QGB$BUFFER_VDO.:LIBRARY OVER my_ru (options)
       27+     233        */
       28+     234        /*F* NAME:  QGB_PARAM
       29+     235        The QGB_PARAM macro generates a structure that is passed to the QGB
       30+     236        services.  This structure locates the buffer passed to the QGB$
       31+     237        services and contains context information used by the
       32+     238        library services.  Additional fields described below may be checked
       33+     239        by the caller of the QGB services.  The caller should check these
       34+     240        fields because the QGB services are unable to store this information
       35+     241        in the normal places in the DCB and TCB.
       36+     242        */
       37+     243
       38+     244          %MACRO QGB_PARAM ( NAME = QGB_PARAM,
       39+     245                             STCLASS = STCLASS,
       40+     246                             BBUF = NIL );
       41+     247            %LSET STR=CONCAT(TEXTCHAR(STCLASS),'        ');
       42+     248            %IF (SUBSTR(STR,0,6)='STATIC')
       43+     249             OR (SUBSTR(STR,0,8)='CONSTANT')
       44+     250             OR (SUBSTR(STR,0,3)='EXT');
       45+     251              %LSET INIT=CHARTEXT('INIT');
       46+     252            %ELSE;
       47+     253              %LSET INIT=CHARTEXT('/*');
       48+     254            %ENDIF;
       49+     255
       50+     256          DCL 1 NAME STCLASS ALIGNED,
       51+     257        /*K* BBUF_ - VECTOR.
       52+     258        Contains the size and location of the blocking buffer to be used
       53+     259        by the VDO packing and unpacking routines.  The buffer must be
       54+     260        allocated by the caller, and this field must be initialized, before
       55+     261        any QGB$ routines may be called.  A size of one or two FEP pages
       56+     262        is recommended.  The keyword used to initialize this field is BBUF.
       57+     263        */
       58+     264              2 BBUF_ VECTOR %INIT(VECTOR(BBUF))%CHARTEXT('/**/'),
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:3    
       59+     265              2 BBUF_OFFSET$ CPTR %INIT(ADDR(NIL))%CHARTEXT('/**/'),
       60+     266        /*K* ERR - Contains a VLP_ERRCODE structure.  This portion of the
       61+     267        structure corresponds to G$TCB$ -> G$TCB.ALT$ -> G$EXCFR.TRLR.ERR.
       62+     268        */
       63+     269              %VLP_ERRCODE ( FPTN = ERR,
       64+     270                             STCLASS = STCLASS,
       65+     271                             LVL = 2,
       66+     272                             LAST = "," );
       67+     273              2 MSG$ PTR %INIT(ADDR(NIL))%CHARTEXT('/**/'),
       68+     274              2 MSGC$ REDEF MSG$ CPTR,
       69+     275              2 MSGSZ SBIN WORD %INIT(0)%CHARTEXT('/**/'),
       70+     276              2 DVE CALIGNED,
       71+     277                3 DVBYTE UNAL,
       72+     278                  4 BP BIT(1) %INIT('1'B)%CHARTEXT('/**/'),
       73+     279                  4 VFC BIT(1) %INIT('0'B)%CHARTEXT('/**/'),
       74+     280                  4 REREAD REDEF VFC BIT(1),
       75+     281                  4 BIN BIT(1) %INIT('0'B)%CHARTEXT('/**/'),
       76+     282                  4 TRANS BIT(1) %INIT('0'B)%CHARTEXT('/**/'),
       77+     283                  4 RRR BIT(1) %INIT('0'B)%CHARTEXT('/**/'),
       78+     284                  4 NODAT BIT(1) %INIT('0'B)%CHARTEXT('/**/'),
       79+     285                  4 DCBHDR BIT(1) %INIT('0'B)%CHARTEXT('/**/'),
       80+     286                  4 CONT BIT(1) %INIT('0'B)%CHARTEXT('/**/'),
       81+     287        /*K* DVE.EOMCHAR - VALUE-CHAR(1).
       82+     288        When the VDO returned to the caller corresponds to the field in
       83+     289        which the activation character was typed, EOMCHAR is filled in with
       84+     290        the activation character; otherwise, QGB_PARAM.EOM_EOR is set. */
       85+     291                3 EOMCHAR CHAR(1) CALIGNED %INIT(BITASC('501'O))%CHARTEXT('/**/'),
       86+     292                3 VFC REDEF EOMCHAR CHAR(1) CALIGNED,
       87+     293              2 EOFNONE BIT(1) UNAL %INIT('0'B)%CHARTEXT('/**/'),
       88+     294              2 EOM_EOR BIT(1) %INIT('0'B)%CHARTEXT('/**/'),
       89+     295              2 CURRENTLY_READING BIT(1) %INIT('0'B)%CHARTEXT('/**/'),
       90+     296              2 * BIT(5) UNAL %INIT('0'B)%CHARTEXT('/**/'),
       91+     297              2 IP$ PTR %INIT(ADDR(NIL))%CHARTEXT('/**/'),
       92+     298              2 UHDR$ PTR %INIT(ADDR(NIL))%CHARTEXT('/**/'),
       93+     299              2 UHDRC$ REDEF UHDR$ CPTR,
       94+     300              2 UHDRSZ UBIN %INIT(0)%CHARTEXT('/**/'),
       95+     301              2 MRKTYP UBIN BYTE UNAL %INIT(0)%CHARTEXT('/**/'),
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:4    
       96+     302              2 STR UBIN BYTE UNAL %INIT(1)%CHARTEXT('/**/'),
       97+     303              2 V$ PTR %INIT(ADDR(NIL))%CHARTEXT('/**/'),
       98+     304              2 KEY$ PTR %INIT(ADDR(NIL))%CHARTEXT('/**/'),
       99+     305              2 VSZ UBIN %INIT(0)%CHARTEXT('/**/'),
      100+     306        /*K* FLDID - VALUE-UBIN.
      101+     307        Contains the field ID reported by the most recent operation for an
      102+     308        ORG=FORM DCB.  It is the same as that returned in KEY if KEYTYPE=FLDID,
      103+     309        but is always returned here.  This is particularly useful for operations
      104+     310        like M$DCLFLD that have no provision for returning a key.
      105+     311        */
      106+     312              2 FLDID UBIN %INIT(0)%CHARTEXT('/**/'),
      107+     313        /*K* ACTPOS - VALUE-DEC(0-32767).
      108+     314        Indicates the position in the record at which activation occurred.
      109+     315        The first character of the record is at position one.  A value of
      110+     316        zero means that the activation occurred at the end of the record.
      111+     317        */
      112+     318              2 ACTPOS UBIN %INIT(0)%CHARTEXT('/**/'),
      113+     319        /*K* ARS - VALUE-UBIN.
      114+     320        Contains the actual record size read (in bytes).
      115+     321        */
      116+     322              2 ARS UBIN %INIT(0)%CHARTEXT('/**/'),
      117+     323              2 KEYTYPE UBIN BYTE CALIGNED %INIT(0)%CHARTEXT('/**/'),
      118+     324              2 KEYSZ UBIN BYTE CALIGNED %INIT(0)%CHARTEXT('/**/');
      119+     325
      120+     326          %MEND;
      121+     327
      122+     328          %MACRO QGB_ENTRIES;
      123+     329
      124+     330          DCL QGB$OPEN ENTRY (2) ALTRET;
      125+     331          DCL QGB$CLOSE ENTRY (2) ALTRET;
      126+     332          DCL QGB$DCLFLD ENTRY (2) ALTRET;
      127+     333          DCL QGB$MDFFLD ENTRY (2) ALTRET;
      128+     334          DCL QGB$SLCFLD ENTRY (2) ALTRET;
      129+     335          DCL QGB$RLSFLD ENTRY (2) ALTRET;
      130+     336          DCL QGB$ERASE ENTRY (2) ALTRET;
      131+     337          DCL QGB$WRITE ENTRY (2) ALTRET;
      132+     338          DCL QGB$READ ENTRY (2) ALTRET;
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:5    
      133+     339          DCL QGB$DEVICE ENTRY (2) ALTRET;
      134+     340          DCL QGB$FLUSH ENTRY (2) ALTRET;
      135+     341
      136+     342          %MEND;
       17      343          %INCLUDE QI_EQUATES_E;
        1+     344        /*M* QI_EQUATES_E:  General EQUates for the FPL interpreter.  */
        2+     345        /*T***********************************************************/
        3+     346        /*T*                                                         */
        4+     347        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5+     348        /*T*                                                         */
        6+     349        /*T***********************************************************/
        7+     350
        8+     351        %EQU QI#DATA = 0;
        9+     352        %EQU QI#PROC = 1;
       10+     353        %EQU QI#INTR = 2;
       11+     354
       12+     355        %EQU QI#SOURCE = 0;
       13+     356        %SET QI#DEFAULT_SOURCE = QI#SOURCE;
       14+     357        %EQU QI#TARGET = 1;
       15+     358        %SET QI#DEFAULT_TARGET = QI#TARGET;
       16+     359        %EQU QI#AUX = 2;
       17+     360        %EQU QI#PICTURE_STRING = 2;
       18+     361        %EQU QI#DE_EDIT = 2;
       19+     362        /*
       20+     363                 internal mode control values
       21+     364        */
       22+     365        %SET QI#DEBUG = '1'B;
       23+     366        %SET QI#RETRY_COUNT_IMPLEMENTED = '0'B;
       24+     367        %SET QI#ABORT_DUMP = 1;
       25+     368        %SET QI#HAVE_USE_PROC = 0;
       26+     369        %EQU QI#ERROR_MESSAGE_LINE_SIZE = 72;
       27+     370                          /* Error message line byte size  */
       28+     371        %EQU QI#ERROR_MESSAGE_BLINKING = '1'B;
       29+     372                          /* 1 will give the error message line
       30+     373                             ERROR visual-attribute  */
       31+     374        %EQU QI#ERROR_STATUS_BYTE_SIZE = 8;
       32+     375                          /* ERROR STATUS variable byte size */
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:6    
       33+     376        %EQU QI#ERR_ST_FILL_WORD = BITBIN('3000'X);
       34+     377        %EQU QI#OP_TEXT_BYTE_SIZE = 2;
       35+     378                          /* ERROR STATUS variable statement sub-field
       36+     379                             byte size  */
       37+     380        %EQU QI#HAVE_ARRAY_BOUNDS = '0'B;
       38+     381        /*
       39+     382                 Dimensional EQUates.
       40+     383                 (Values for QI$...DAD.WORD0_FLAGS.DIMENSION_COUNT.)
       41+     384        */
       42+     385        %EQU QI#MAXIMUM_DIMENSION = 3;
       43+     386        %EQU QI#ELEMENTARY_ITEM = 0;
       44+     387        %EQU QI#ONE_DIMENSIONAL_ITEM = 1;
       45+     388        %EQU QI#TWO_DIMENSIONAL_ITEM = 2;
       46+     389        %EQU QI#THREE_DIMENSIONAL_ITEM = 3;
       47+     390        /*
       48+     391                 TYPE declarations
       49+     392        */
       50+     393        %EQU QI#TYPE_DISPLAY = 0;
       51+     394        %EQU QI#TYPE_PACKED = 1;
       52+     395        %EQU QI#TYPE_BINARY = 2;
       53+     396        %EQU QI#TYPE_ALPHANUMERIC = 3;
       54+     397        %EQU QI#TYPE_BIT = 4;
       55+     398        /*
       56+     399                 values 5-7 are reserved for future use
       57+     400        */
       58+     401        %EQU QI#TYPE_MINOR = 8;
       59+     402        %EQU QI#TYPE_MAJOR = 9;
       60+     403        %EQU QI#TYPE_FRAME = 10;
       61+     404        %EQU QI#TYPE_FORM = 11;
       62+     405        %EQU QI#TYPE_TRANSACTION = 12;
       63+     406        /*
       64+     407                 values 13-15 are reserved for future use
       65+     408        */
       66+     409        /*
       67+     410                 IO codes for FIELD variables
       68+     411        */
       69+     412        %EQU QI#IO_VALUE_INPUT = 1;
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:7    
       70+     413        %EQU QI#IO_VALUE_OUTPUT = 2;
       71+     414        %EQU QI#IO_VALUE_IO = 3;
       72+     415        /*
       73+     416                 ENABLEd codes for FIELD variables
       74+     417        */
       75+     418        %EQU QI#DISABLED = 0;
       76+     419        %EQU QI#ENABLED_INPUT = 1;
       77+     420        %EQU QI#ENABLED_OUTPUT = 2;
       78+     421        %EQU QI#ENABLED_IO = 3;
       79+     422        /*
       80+     423                 state codes for FIELD variables
       81+     424        */
       82+     425        %EQU QI#STATE_NULL = 0;   /* NULL STATE */
       83+     426        %EQU QI#STATE_AVAIL_OUTPUT = 1;   /* DATA WAS LAST PRESENTED */
       84+     427        %EQU QI#STATE_AVAIL_VERIFY = 2;   /* DATA WAS LAST READ */
       85+     428        /*
       86+     429                 VISUAL-ATTRIBUTE codes
       87+     430        */
       88+     431        %EQU QI#NO_VISUAL_ATTRIBUTE = 0;
       89+     432        %EQU QI#NULL_VISUAL_ATTRIBUTE = 1;
       90+     433        %EQU QI#HIDDEN_VISUAL_ATTRIBUTE = 2;
       91+     434        %EQU QI#EMPHASIS_VISUAL_ATTRIBUTE = 3;
       92+     435        %EQU QI#INPUT_VISUAL_ATTRIBUTE = 4;
       93+     436        %EQU QI#OUTPUT_VISUAL_ATTRIBUTE = 5;
       94+     437        %EQU QI#ERROR_VISUAL_ATTRIBUTE = 6;
       95+     438        %EQU QI#WARNING_VISUAL_ATTRIBUTE = 7;
       96+     439        %EQU QI#INITIAL_VISUAL_ATTRIBUTE = 8;
       97+     440        /*
       98+     441                 values for string decimal signs
       99+     442        */
      100+     443        %EQU QI#CD_UNSIGNED = 0;
      101+     444        %EQU QI#CD_TRAIL_OVER = 1;
      102+     445        %EQU QI#CD_LEAD_SEP = 2;
      103+     446        %EQU QI#CD_TRAIL_SEP = 3;
      104+     447        %EQU QI#CD_SIGN_TRAILING_OVER = 1;
      105+     448        %EQU QI#CD_SIGN_LEADING_SEPARATE = 2;
      106+     449        %EQU QI#CD_SIGN_TRAILING_SEPARATE = 3;
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:8    
      107+     450        /*
      108+     451                 values for packed decimal signs
      109+     452        */
      110+     453        %EQU QI#CP_UNSIGNED = 0;
      111+     454        %EQU QI#CP_SIGN_TRAILING = 1;
      112+     455        /*
      113+     456                 sign conventions for string decimals
      114+     457        */
      115+     458        %EQU QI#DEC_POS_SEP_SIGN = BITBIN('2B'X);
      116+     459
      117+     460        %EQU QI#DEC_NEG_SEP_SIGN = BITBIN('2D'X);
      118+     461
      119+     462        %EQU QI#DEC_POS_OVER_SIGN = BITBIN('30'X);
      120+     463
      121+     464        %EQU QI#DEC_POS_ZONE = '30'X;
      122+     465        /*
      123+     466                 sign conventions for packed decimals
      124+     467        */
      125+     468        %EQU QI#PACK_POS_SIGN = BITBIN('B'X);
      126+     469        %EQU QI#PACK_NEG_SIGN = BITBIN('D'X);
      127+     470        /*
      128+     471                 characters
      129+     472        */
      130+     473        %EQU QI#BLANK = ASCBIN(' ');
      131+     474        %EQU QI#BLANK_WORD = BITBIN('2020'X);
      132+     475        %EQU QI#BLANK_LEFT_HALF = BITBIN('2000'X);
      133+     476        %EQU QI#CIP_BLANK_FILL = QI#BLANK;
      134+     477        %EQU QI#BLANK_RIGHT_HALF = QI#BLANK;
      135+     478
      136+     479        %EQU QI#SLASH = ASCBIN('/');
      137+     480        %EQU QI#SLASH_WORD = BITBIN('2F2F'X);
      138+     481        %EQU QI#SLASH_LEFT_HALF = BITBIN('2F00'X);
      139+     482        %EQU QI#CIP_SLASH_FILL = QI#SLASH;
      140+     483        %EQU QI#SLASH_RIGHT_HALF = QI#SLASH;
      141+     484
      142+     485        %EQU QI#ZERO = ASCBIN('0');
      143+     486        %EQU QI#ZERO_WORD = BITBIN('3030'X);
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:9    
      144+     487        %EQU QI#ZERO_LEFT_HALF = BITBIN('3000'X);
      145+     488        %EQU QI#CIP_ZERO_FILL = QI#ZERO;
      146+     489        %EQU QI#ZERO_RIGHT_HALF = QI#ZERO;
      147+     490
      148+     491        %EQU QI#PLUS = ASCBIN('+');
      149+     492        %EQU QI#MINUS = ASCBIN('-');
      150+     493        %EQU QI#ASTERISK = ASCBIN('*');
      151+     494        %EQU QI#DOLLAR_SIGN = ASCBIN('$');
      152+     495        %EQU QI#COMMA = ASCBIN(',');
      153+     496        %EQU QI#PERIOD = ASCBIN('.');
      154+     497
      155+     498        %EQU QI#BINARY_ZERO = 0;
      156+     499        %EQU QI#MAT_MATCH = 1;
      157+     500        %EQU QI#MAT_NONMATCH = 0;
      158+     501        /*
      159+     502                 common address syllables
      160+     503        */
      161+     504        %EQU QI#CIP_DEFAULT_AS = BITBIN('B'X);
      162+     505        %EQU QI#CIP_INDEXED_SOURCE_AS = BITBIN('1B'X);
      163+     506        %EQU QI#CIP_INDEXED_TARGET_AS = BITBIN('2B'X);
      164+     507        /*
      165+     508                 lengths of stuff
      166+     509        */
      167+     510        %EQU QI#MAXIMUM_FIELD_LENGTH = 256;
      168+     511        %EQU QI#MAX_CIP_ALPHA_MOVE = 255;
      169+     512        %EQU QI#MAX_CIP_NUMERIC = 31;
      170+     513        %EQU QI#MIN_BINARY_LENGTH = 2;
      171+     514        %EQU QI#MAX_BINARY_LENGTH = 4;
      172+     515        %EQU QI#MIN_BINARY_DIGIT_COUNT = 5;
      173+     516        %EQU QI#MAX_BINARY_DIGIT_COUNT = 10;
      174+     517        %EQU QI#MIN_DISPLAY = 1;
      175+     518        %EQU QI#MIN_DISPLAY_LENGTH = 1;
      176+     519        %EQU QI#MAX_DISPLAY = 15;
      177+     520        %EQU QI#MAX_DISPLAY_LEN = 15;
      178+     521        %EQU QI#MAX_DISPLAY_LENGTH = 15;
      179+     522        /*
      180+     523                 accumulator attributes
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:10   
      181+     524        */
      182+     525        %EQU QI#ACCUMULATOR_DEC = 15;  /* IMPLIED DEC POSITION */
      183+     526        %EQU QI#ACCUMULATOR_LEN = 31;  /* LENGTH OF ACCUMULATOR */
      184+     527        %EQU QI#ACCUMULATOR_OFFSET = 0;   /* IMPLIED OFFSET(ATOM) */
      185+     528        %EQU QI#ACCUMULATOR_TYPE = QI#TYPE_PACKED; /* IMPLIED DATA TYPE OF ACCUMULATOR */
      186+     529        /*
      187+     530                 PICture string stuff
      188+     531        */
      189+     532        %EQU QI#ALPHANUMERIC_PICTURE_STRING = 0;
      190+     533        %EQU QI#NUMERIC_PICTURE_STRING = 1;
      191+     534        %EQU QI#PIC_M_9_A_X = 0;
      192+     535        %EQU QI#PIC_M_B = 1;
      193+     536        %EQU QI#PIC_M_0 = 2;
      194+     537        %EQU QI#PIC_M_SLASH = 3;
      195+     538        /*
      196+     539                 values for operand classes
      197+     540        */
      198+     541        %EQU QI#SOURCE_CLASS_FIRST = 0;
      199+     542        %EQU QI#SOURCE_REG = QI#SOURCE_CLASS_FIRST;
      200+     543        %EQU QI#SOURCE_ALL = 1;
      201+     544        %EQU QI#SOURCE_FIG = 2;
      202+     545        %EQU QI#SOURCE_ERR = 3;
      203+     546        %EQU QI#SOURCE_CLASS_LAST = QI#SOURCE_ERR;
      204+     547        /*
      205+     548                 bit masks
      206+     549        */
      207+     550        %EQU QI#FILL_BIT_MASK = BITBIN('4000'X);
      208+     551        %EQU QI#INDIRECT_BIT_MASK = BITBIN('8000'X);
      209+     552        %EQU QI#IS_ALL_LITERAL_BIT_MASK = BITBIN('0100'X);
      210+     553        %EQU QI#IS_FORM_VARIABLE_BIT_MASK = BITBIN('0080'X);
      211+     554        %EQU QI#IS_TEMP_BIT_MASK = BITBIN('0200'X);
      212+     555        %EQU QI#TEMP_WORD0_MASK = BITBIN('8280'X);
      213+     556        /*
      214+     557           Presence bits for COBOL DADs
      215+     558        */
      216+     559        %EQU QI#P_COBOL_FIRST_INDEX = 1;
      217+     560        %EQU QI#P_COBOL_LAST_INDEX = 3;
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:11   
      218+     561        %EQU QI#P_PICTURE_STRING_INDEX = 1;
      219+     562        %EQU QI#P_LEGAL_INDEX = 2;
      220+     563        %EQU QI#P_ERROR_MESSAGE_INDEX = 3;
      221+     564        /*
      222+     565           Presence bits for FIELD DADs
      223+     566        */
      224+     567        %EQU QI#P_FIELD_FIRST_INDEX = 0;
      225+     568        %EQU QI#P_FIELD_LAST_INDEX = 5;
      226+     569        %EQU QI#P_FILL_SIZE_INDEX = 0;
      227+     570        %EQU QI#P_CLASS_INDEX = 1;
      228+     571        %EQU QI#P_DEFAULT_INDEX = 2;
      229+     572        %EQU QI#P_PROMPT_INDEX = 3;
      230+     573        %EQU QI#P_REPEATS_INDEX = 4;
      231+     574        %EQU QI#P_SEPARATED_INDEX = 5;
      232+     575        /*
      233+     576           conditional result EQUs
      234+     577        */
      235+     578        %EQU QI#IF_GREATER     = 0;   /* '0000'X */
      236+     579        %EQU QI#IF_LESS        = 1;   /* '0001'X */
      237+     580        %EQU QI#IF_EQUAL       = 2;   /* '0002'X */
      238+     581        %EQU QI#IF_NOT_GREATER = 16;  /* '0010'X */
      239+     582        %EQU QI#IF_NOT_LESS    = 17;  /* '0011'X */
      240+     583        %EQU QI#IF_NOT_EQUAL   = 18;  /* '0012'X */
      241+     584        /*
      242+     585           various values within the ATTRIBUTE word of the IF CLASS
      243+     586           op-code sequence.
      244+     587        */
      245+     588        %EQU QI#IF_CLASS_ALPHA = 8;
      246+     589        %EQU QI#IF_CLASS_NUMERIC = 4;
      247+     590        %EQU QI#IF_CLASS_DIGITS = 2;
      248+     591        /*
      249+     592           various values within the ATTRIBUTE word of the IF STATUS (IFINDR)
      250+     593           op-code sequence.
      251+     594        */
      252+     595        %EQU QI#IF_INDICATOR_ACTIVE = 0;
      253+     596        %EQU QI#IF_INDICATOR_ENABLED_INPUT = 1;
      254+     597        %EQU QI#IF_INDICATOR_ENABLED_OUTPUT = 2;
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:12   
      255+     598        %EQU QI#IF_INDICATOR_ENABLED_IO = 3;
      256+     599        %EQU QI#IF_INDICATOR_PRESENTED = 4;
      257+     600        %EQU QI#IF_INDICATOR_AVAILABLE = 5;
      258+     601        /*
      259+     602           values for CLASS_TYPE within QI$FIELD_DAD
      260+     603        */
      261+     604        %EQU QI#ABSOLUTELY_NO_CLASS = 0;
      262+     605        %EQU QI#CLASS_NUMERIC = 1;
      263+     606        %EQU QI#CLASS_ALPHA = 2;
      264+     607        %EQU QI#CLASS_ALPHABET = 3;
      265+     608        /*
      266+     609           various values within the QI$LEGAL_CONDITION_BLOCK structure
      267+     610           referring to different species of LEGAL checking.
      268+     611        */
      269+     612        %EQU QI#LEGAL_LIST = 0;
      270+     613        %EQU QI#LEGAL_ARRAY = 1;
      271+     614        %EQU QI#LEGAL_RANGE = 2;
      272+     615        /*
      273+     616           various values within the TYPE field of the ACCEPT
      274+     617           op-code sequence.
      275+     618        */
      276+     619        %EQU QI#ACCEPT_FIELD = 0;
      277+     620        %EQU QI#ACCEPT_DATE = 1;
      278+     621        %EQU QI#ACCEPT_DAY = 2;
      279+     622        %EQU QI#ACCEPT_TIME = 3;
      280+     623        %EQU QI#ACCEPT_DAY_OF_WEEK = 4;
      281+     624        %EQU QI#ACCEPT_TERMINAL_ATTRIBUTES = 5;
      282+     625        %EQU QI#ACCEPT_LOADER = 6;
      283+     626        /*
      284+     627           various values for QI$TERMINAL_ATTRIBUTES items
      285+     628           for ACCEPT *thing* FROM TERMINAL-ATTRIBUTES.
      286+     629        */
      287+     630        %EQU QI#CAPABLE_OF_NOTHIN = '0';
      288+     631        %EQU QI#CAPABLE_OF_INPUT = '1';
      289+     632        %EQU QI#CAPABLE_OF_OUTPUT = '2';
      290+     633        %EQU QI#CAPABLE_OF_I_O = '3';
      291+     634        %EQU QI#DEVICE_IS_HARDWIRED = '1';
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:13   
      292+     635        %EQU QI#DEVICE_IS_DIALED_UP = '2';
      293+     636        %EQU QI#DEBUGGER_IS_NOT_ASSOCIATED = '0';
      294+     637        %EQU QI#DEBUGGER_IS_ASSOCIATED = '1';
      295+     638        %EQU QI#DEVICE_IS_NOT_HARDCOPY = '0';
      296+     639        %EQU QI#DEVICE_IS_HARDCOPY = '1';
      297+     640        /*
      298+     641           various values within the TYPE field of the DISPLAY
      299+     642           op-code sequence.
      300+     643        */
      301+     644        %EQU QI#DISPLAY_FIELD = 0;
      302+     645        %EQU QI#DISPLAY_ALARM = 1;
      303+     646        /*
      304+     647           various values within the ATTRIBUTE word of the INSPECT
      305+     648           op-code sequence.
      306+     649        */
      307+     650        %EQU QI#INSPECT_NO_INITIAL = 0;
      308+     651        %EQU QI#INSPECT_BEFORE_INITIAL = 1;
      309+     652        %EQU QI#INSPECT_AFTER_INITIAL = 2;
      310+     653        %EQU QI#INSPECT_CHARACTERS = 0;
      311+     654        %EQU QI#INSPECT_ALL = 1;
      312+     655        %EQU QI#INSPECT_LEADING = 2;
      313+     656        %EQU QI#INSPECT_FIRST = 4;
      314+     657        /*
      315+     658           Various EQUates for QCU$USE stuff.
      316+     659        */
      317+     660        %EQU QI#USE_INVALID_RETURN = 0;
      318+     661                          /* INVALID clause is present; return to level 0.  */
      319+     662        %EQU QI#USE_INVALID_RETRY = 1;
      320+     663                          /* Retry current operation/atomic unit.  */
      321+     664        %EQU QI#USE_INVALID_SKIP_TO_NEXT = 2;
      322+     665                          /* Continue at "next" operation/atomic unit.  */
      323+     666        %EQU QI#USE_INVALID_OK = 3;
      324+     667                          /* USE code was never called:  everything's OK.  */
      325+     668
      326+     669        %EQU QI#STANDARD = 0;
      327+     670        %EQU QI#VERIFY = 1;
      328+     671
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:14   
      329+     672                          /*  QI_1.USE_DEFAULT_IO value EQUs.  */
      330+     673        %EQU QI#USE_DEFAULT_NONE = 0;
      331+     674        %EQU QI#USE_DEFAULT_INPUT = 1;
      332+     675        %EQU QI#USE_DEFAULT_OUTPUT = 2;
      333+     676        %EQU QI#USE_DEFAULT_VERIFY = 3;
      334+     677
      335+     678                          /*  Internal USE-type EQUs.  */
      336+     679        %EQU QI#USE_FILE_TYPE = 0;
      337+     680        %EQU QI#USE_DEFAULT_TYPE = 1;
      338+     681
      339+     682        /*
      340+     683           miscellaneous / useful stuff
      341+     684        */
      342+     685        %EQU FOREVER = CHARTEXT('WHILE (''1''B)');
      343+     686        %EQU NEVER   = CHARTEXT('WHILE (''0''B)');
      344+     687        %EQU YES = '1'B;
      345+     688        %EQU NO = '0'B;
      346+     689        %EQU ON = '1'B;
      347+     690        %EQU OFF = '0'B;
      348+     691        %EQU SET = '1'B;
      349+     692        %EQU RESET = '0'B;
      350+     693        %EQU TRUE = '1'B;
      351+     694        %EQU FALSE = '0'B;
      352+     695        %EQU QI#DONT_CHECK_FOR_SIZE_ERROR = 0;
      353+     696        %EQU QI#CHECK_FOR_SIZE_ERROR = 1;
      354+     697        %EQU QI#SOME_HUGE_NUMBER = BITBIN('FFFF'X);
      355+     698        /*
      356+     699           macro depth gauge
      357+     700        */
      358+     701        %SET QI#MACRO_DEPTH = 0;
       18      702          %INCLUDE QI_PERR_C;
        1+     703        /*M* QI_PERR_C:  Error code EQUates for the FPL interpreter.  */
        2+     704        /*T***********************************************************/
        3+     705        /*T*                                                         */
        4+     706        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5+     707        /*T*                                                         */
        6+     708        /*T***********************************************************/
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:15   
        7+     709        /*X* DMC,PLM=4,IND=0,DCI=4,CSI=2,IAD=2,DTI=2,AND,ECI=0,DIN=2,STI=2 */
        8+     710
        9+     711        /*  The following are for QB?, QC?, and QI FCG errcodes.  */
       10+     712        %EQU E$FILE_NOT_OPEN                 = 1;
       11+     713        %EQU E$FILE_ALREADY_OPEN             = 2;
       12+     714        %EQU E$FILE_ALREADY_CLOSED           = 4;
       13+     715        %EQU E$FILE_NOT_OPEN_INPUT           = 5;
       14+     716        %EQU E$FILE_NOT_OPEN_OUTPUT          = 6;
       15+     717        %EQU E$FRAME_NOT_ACTIVE              = 7;
       16+     718        %EQU E$POSTREAD_ILLEGAL_DEFAULT      = 8;
       17+     719        %EQU E$RETRY_COUNT_EXHAUSTED         = 9;
       18+     720        %EQU E$VERIFY_GET_FIELD_DISABLED     = 10;
       19+     721        %EQU E$VERIFY_ILLEGAL_DEFAULT        = 11;
       20+     722        %EQU E$FRAME_ALREADY_ACTIVATED       = 12;
       21+     723        %EQU E$FRAME_ALREADY_DEACTIVATED     = 13;
       22+     724        %EQU E$FIELD_OVERLAPS                = 14;
       23+     725        %EQU E$FIELD_SPACE_CADET             = 15;
       24+     726        %EQU E$FORM_READ_ERROR               = 16;
       25+     727        %EQU E$FORM_WRITE_ERROR              = 17;
       26+     728        %EQU E$DE_EDIT_ILLEGAL_SOURCE        = 18;
       27+     729        %EQU E$CALL_UNSATISFIED_REFERENCE    = 19;
       28+     730        %EQU E$COMMERCIAL_ILLEGAL_CHARACTER  = 20;
       29+     731        %EQU E$COMMERCIAL_DIVIDE_BY_ZERO     = 21;
       30+     732        %EQU E$BINARY_OVERFLOW               = 22;
       31+     733        %EQU E$SUBSCRIPT_OUT_OF_RANGE        = 23;
       32+     734        %EQU E$SUBSCRIPT_OUT_OF_SIGHT        = 24;
       33+     735        %EQU E$SUBSCRIPT_ZERO                = 25;
       34+     736        %EQU E$LOAD_ILLEGAL_FID              = 26;
       35+     737        %EQU E$LOAD_ERROR                    = 27;
       36+     738        %EQU E$NO_LOADER_INFORMATION         = 28;
       37+     739        %EQU E$ABORT_EXECUTED                = 29;
       38+     740        %EQU E$INTERNAL_COMPILER_ERROR       = 50;
       39+     741        %EQU E$INTERNAL_INTERPRETER_ERROR    = 51;
       40+     742        %EQU E$UNEXPECTED_QCC_ALTRET         = 52;
       41+     743        %EQU E$INTERPRETER_TRAP              = 53;
       42+     744        %EQU E$UNEXPECTED_ALTRET             = 54;
       43+     745        %EQU E$INCOMPATIBLE_VERSION          = 55;
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:16   
       44+     746        %EQU E$INSUFFICIENT_MEMORY           = 56;
       45+     747        %EQU E$TRANSACTION_READ_ERROR        = 200;
       46+     748        %EQU E$TPAP_ABORT                    = 201;
       47+     749        %EQU E$TRANSACTION_TYPE_STAR         = 202;
       48+     750        %EQU E$TRANSACTION_TYPE_ILLEGAL      = 203;
       49+     751        %EQU E$TRANSACTION_TYPE_WILD         = 204;
       50+     752        %EQU E$TRANSACTION_WRITE_ERROR       = 205;
       51+     753        %EQU E$TRANSACTION_RRR_ERROR         = 206;
       52+     754        %EQU E$TRANSACTION_LOST_DATA         = 207;
       53+     755        %EQU E$ILLEGAL_VALUE                 = 100;
       54+     756        %EQU E$EMBEDDED_BLANKS               = 101;
       55+     757        %EQU E$SIGN_ONLY                     = 102;
       56+     758        %EQU E$NON_NUMERICAL                 = 103;
       57+     759        %EQU E$ILLEGAL_CHARACTER             = 104;
       58+     760        %EQU E$MINIMUM_SIZE                  = 105;
       59+     761        %EQU E$MAXIMUM_SIZE_LEADING_SIGN     = 106;
       60+     762        %EQU E$MAXIMUM_SIZE_TRAILING_SIGN    = 107;
       61+     763        %EQU E$ILLEGAL_INPUT                 = 108;
       62+     764        %EQU E$ENTRY_REQUIRED                = 109;
       63+     765        %EQU E$FULLA_FILL                    = 110;
       64+     766
       65+     767        /*  The following are op-code equates
       66+     768            (gen'd that way by the compiler),
       67+     769            used for QIO (O for Opcode) FCG errcodes.  */
       68+     770        %EQU QI#OP_FPL_START   =  0;
       69+     771        %EQU QI#OP_ACCEPT      =  0;
       70+     772        %EQU QI#OP_ABORT       =  1;
       71+     773        %EQU QI#OP_BREAK       =  0002; /* BRK instruction */
       72+     774        %EQU QI#OP_ADD         =  3;
       73+     775        %EQU QI#OP_ADDX        =  4;
       74+     776        %EQU QI#OP_CALL        =  5;
       75+     777        %EQU QI#OP_DIV         =  6;
       76+     778        %EQU QI#OP_DIVX        =  7;
       77+     779        %EQU QI#OP_GOTO        =  8;
       78+     780        %EQU QI#OP_GOTODP      =  9;
       79+     781        %EQU QI#OP_IFRELN      =  10;
       80+     782        %EQU QI#OP_IFRELA      =  11;
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:17   
       81+     783        %EQU QI#OP_IFCLS       =  12;
       82+     784        %EQU QI#OP_IFCNDN      =  13;
       83+     785        %EQU QI#OP_IFCNDA      =  14;
       84+     786        %EQU QI#OP_IFIDX       =  15;
       85+     787        %EQU QI#OP_INSPECT     =  16;
       86+     788        %EQU QI#OP_MOVG        =  17;
       87+     789        %EQU QI#OP_MOVA        =  18;
       88+     790        %EQU QI#OP_MOVN        =  19;
       89+     791        %EQU QI#OP_MOVP        =  20;
       90+     792        %EQU QI#OP_MOVB        =  21;
       91+     793        %EQU QI#OP_MOVAJ       =  22;
       92+     794        %EQU QI#OP_MOVAE       =  23;
       93+     795        %EQU QI#OP_MOVNE       =  24;
       94+     796        %EQU QI#OP_MOVDE       =  25;
       95+     797        %EQU QI#OP_PERFM       =  27;
       96+     798        %EQU QI#OP_PERFMT      =  29;
       97+     799        %EQU QI#OP_SET         =  30;
       98+     800        %EQU QI#OP_SETD        =  31;
       99+     801        %EQU QI#OP_SETX        =  32;
      100+     802        %EQU QI#OP_SETXUD      =  33;
      101+     803        %EQU QI#OP_CNVBNX      =  34;
      102+     804        %EQU QI#OP_CNVBPX      =  35;
      103+     805        %EQU QI#OP_CNVBBX      =  36;
      104+     806        %EQU QI#OP_STOP_RUN    =  37;
      105+     807        %EQU QI#OP_STOP_1      =  38;
      106+     808        %EQU QI#OP_SUB         =  39;
      107+     809        %EQU QI#OP_SUBX        =  40;
      108+     810        %EQU QI#OP_ROUND       =  41;
      109+     811        %EQU QI#OP_CLOSE       =  42;
      110+     812        %EQU QI#OP_ACTIVATE    =  43;
      111+     813        %EQU QI#OP_DEACTIVATE  =  44;
      112+     814        %EQU QI#OP_LOAD        =  45;
      113+     815        %EQU QI#OP_ENABLE      =  46;
      114+     816        %EQU QI#OP_DISABLE     =  47;
      115+     817        %EQU QI#OP_OPEN        =  49;
      116+     818        %EQU QI#OP_READ_TRAN   =  53;
      117+     819        %EQU QI#OP_READ_FORM   =  54;
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:18   
      118+     820        %EQU QI#OP_MULT        =  56;
      119+     821        %EQU QI#OP_MULTX       =  57;
      120+     822        %EQU QI#OP_ALL_LITERAL =  58;
      121+     823        %EQU QI#OP_APPLY       =  59;
      122+     824        %EQU QI#OP_IFINDR      =  63;
      123+     825        %EQU QI#OP_WRITE_TRAN  =  64;
      124+     826        %EQU QI#OP_WRITE_FORM  =  65;
      125+     827        %EQU QI#OP_PRESENT     =  66;
      126+     828        %EQU QI#OP_VERIFY      =  67;
      127+     829        %EQU QI#OP_CLEAR       =  68;
      128+     830        %EQU QI#OP_DISPLAY     =  69;
      129+     831        %EQU QI#OP_EXIT        =  70;
      130+     832        %EQU QI#OP_SUBSCR      =  75;
      131+     833        %EQU QI#OP_CNVPN       =  76;
      132+     834        %EQU QI#OP_CNVBN       =  77;
      133+     835        %EQU QI#OP_MOVNA       =  78;
      134+     836        %EQU QI#OP_MOVPA       =  79;
      135+     837        %EQU QI#OP_MOVBA       =  80;
      136+     838        %EQU QI#OP_MOVNEA      =  81;
      137+     839        %EQU QI#OP_CNVNBT      =  82;
      138+     840        %EQU QI#OP_CNVPBT      =  83;
      139+     841        %EQU QI#OP_INIT        =  84;
      140+     842        %EQU QI#OP_IFRELG      =  88;
      141+     843        %EQU QI#OP_JAZ         =  91;
      142+     844        %EQU QI#OP_ZACCEPT     =  92;
      143+     845        %EQU QI#OP_ZDISPLAY    =  93;
      144+     846        %EQU QI#OP_JND         =  94;
      145+     847        %EQU QI#OP_FORM_START  =  102;
      146+     848        %EQU QI#OP_SEARCH      =  103;
      147+     849        %EQU QI#OP_INDEX       =  104;
      148+     850
      149+     851        %EQU QI#OP_ACCEPT_TEXT     = '00';
      150+     852        %EQU QI#OP_ABORT_TEXT      = '01';
      151+     853        %EQU QI#OP_CLOSE_TEXT      = '42';
      152+     854        %EQU QI#OP_ACTIVATE_TEXT   = '43';
      153+     855        %EQU QI#OP_DEACTIVATE_TEXT = '44';
      154+     856        %EQU QI#OP_LOAD_TEXT       = '45';
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:19   
      155+     857        %EQU QI#OP_ENABLE_TEXT     = '46';
      156+     858        %EQU QI#OP_DISABLE_TEXT    = '47';
      157+     859        %EQU QI#OP_OPEN_TEXT       = '49';
      158+     860        %EQU QI#OP_READ_TRAN_TEXT  = '53';
      159+     861        %EQU QI#OP_READ_FORM_TEXT  = '54';
      160+     862        %EQU QI#OP_APPLY_TEXT      = '59';
      161+     863        %EQU QI#OP_IFINDR_TEXT     = '63';
      162+     864        %EQU QI#OP_WRITE_TRAN_TEXT = '64';
      163+     865        %EQU QI#OP_WRITE_FORM_TEXT = '65';
      164+     866        %EQU QI#OP_PRESENT_TEXT    = '66';
      165+     867        %EQU QI#OP_VERIFY_TEXT     = '67';
      166+     868        %EQU QI#OP_CLEAR_TEXT      = '68';
      167+     869        %EQU QI#OP_DISPLAY_TEXT    = '69';
       19      870          %INCLUDE QI_MACROS_M;
        1+     871        /*M* QI_MACROS_M:  MACRO defs / invocs for the FPL interpreter.  */
        2+     872        /*T***********************************************************/
        3+     873        /*T*                                                         */
        4+     874        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5+     875        /*T*                                                         */
        6+     876        /*T***********************************************************/
        7+     877
        8+     878        /*P* NAME:         QI_MACROS_M
        9+     879             PURPOSE:      To provide the MACROs necessary to generate
       10+     880                           descriptors for the CIP hardware, the context
       11+     881                           area for the FPL interpreter, and to frame
       12+     882                           various areas of the FPL program itself.
       13+     883             DESCRIPTION:  QI_MACROS_M contains MACROs which define:
       14+     884                           1)  CIP operations (QI@CIP_OPERATION), which
       15+     885                               are blocks of data passed to the QCC$xxxx
       16+     886                               routines to execute a desired CIP instruction
       17+     887                               (ALR, etc.);
       18+     888                           2)  CIP descriptors (QI_CIP_DESCRIPTOR), which
       19+     889                               define the descriptors used to locate and
       20+     890                               describe data manipulated by the CIP;
       21+     891                           3)  the FPL interpreter context (QI_1), which
       22+     892                               is a STATIC area allocated one-per-FPL-user;
       23+     893                           4)  based structures which define the size and
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:20   
       24+     894                               shape of entities within the user's FPL
       25+     895                               program;
       26+     896                           5)  based structures which define the dynamic
       27+     897                               area allocated to fields when they've been
       28+     898                               M$DCLFLDed;
       29+     899                           6)  CONSTANT FPTs;
       30+     900                           7)  whatever else is in here.
       31+     901        */
       32+     902        %EJECT;
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:21   
       33+     903        /*
       34+     904                                %%%%%     %%%%   %%%%%%
       35+     905                               %%   %%     %%    %%   %%
       36+     906                               %%          %%    %%   %%
       37+     907                               %%          %%    %%%%%%
       38+     908                               %%          %%    %%
       39+     909                               %%   %%     %%    %%
       40+     910                                %%%%%     %%%%   %%
       41+     911                                                   %%%
       42+     912                                                   %%%
       43+     913              %%%%%   %% %%%    %%%%%   %% %%%%     %%     %%%%%%
       44+     914             %%   %%  %%%  %%  %%   %%  %%%%       %%     %%
       45+     915             %%   %%  %%%  %%  %%%%%%%  %%%                %%%%%
       46+     916             %%   %%  %%%  %%  %%       %%                     %%
       47+     917              %%%%%   %% %%%    %%%%%   %%                %%%%%%
       48+     918                      %%
       49+     919                      %%
       50+     920                                                                            */
       51+     921        /*D* NAME:         QI@CIP_OPERATION
       52+     922             PURPOSE:      Used to generate a structure passed to
       53+     923                           QCC$xxxx modules.
       54+     924             DESCRIPTION:  This MACRO generates 3 two-word CIP descriptors,
       55+     925                           PTRs to data which they describe, and a myriad
       56+     926                           of other parameters, all to eventually be passed
       57+     927                           to one or more QCC$xxxx routines.  Not all
       58+     928                           descriptors or parameters generated will be used
       59+     929                           by any one QCC$xxxx module, but the MACRO parameter
       60+     930                           TYPE allows the user to specify which xxxx the
       61+     931                           structure is primarily intended for.  For example,
       62+     932                           the user who wishes to perform an ALR operation
       63+     933                           from a source string to a target string would
       64+     934                           invoke the macro with TYPE=ALR, and would then
       65+     935                           be allowed to specify several initialization
       66+     936                           values for other parameters.  When the structure
       67+     937                           is actually passed to QCC$ALR, only the first
       68+     938                           two CIP descriptors, their data pointers, the
       69+     939                           first two LENs, the first two INXs, and FILL_CHAR
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:22   
       70+     940                           will actually be used.
       71+     941                           Also, a pool of commonly-used QI@CIP_OPERATIONs
       72+     942                           is kept with STCLASS = CONSTANT and
       73+     943                           NAME = QI_name:  see GENERAL_PURPOSE_CIPS.
       74+     944        */
       75+     945
       76+     946          %MACRO QI@CIP_OPERATION
       77+     947                 ( NAME = QI@CIP_OPERATION,
       78+     948                   CIPS_NAME = CIP,
       79+     949                   FIRST_CIP_NAME = S,
       80+     950                   SECOND_CIP_NAME = T,
       81+     951                   THIRD_CIP_NAME = AUX,
       82+     952                   DATAS_NAME = DATA,
       83+     953                   FIRST_DATA_NAME = S$,
       84+     954                   SECOND_DATA_NAME = T$,
       85+     955                   THIRD_DATA_NAME = AUX$,
       86+     956                   LENS_NAME = LEN,
       87+     957                   FIRST_LEN_NAME = S,
       88+     958                   SECOND_LEN_NAME = T,
       89+     959                   THIRD_LEN_NAME = AUX,
       90+     960                   DECS_NAME = DEC,
       91+     961                   FIRST_DEC_NAME = S,
       92+     962                   SECOND_DEC_NAME = T,
       93+     963                   THIRD_DEC_NAME = AUX,
       94+     964                   SRCH_VRFY_ARGS_NAME = SRCH_VRFY_ARGS,
       95+     965                   SRCH_VRFY_ARGS_LEN_NAME = LEN,
       96+     966                   SRCH_VRFY_ARGS_LIST_LEN_NAME = LIST_LEN,
       97+     967                   SHIFT_COUNTS_NAME = SHIFT_COUNT,
       98+     968                   FIRST_SHIFT_COUNT_NAME = S,
       99+     969                   SECOND_SHIFT_COUNT_NAME = T,
      100+     970                   THIRD_SHIFT_COUNT_NAME = AUX,
      101+     971                   SRCH_VRFY_ELEMS_NAME = SRCH_VRFY_ELEMS,
      102+     972                   SRCH_VRFY_ELEMS_LEN_NAME = LEN,
      103+     973                   SRCH_VRFY_ELEMS_LIST_LEN_NAME = LIST_LEN,
      104+     974                   INXS_NAME = INX,
      105+     975                   FIRST_INX_NAME = S,
      106+     976                   SECOND_INX_NAME = T,
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:23   
      107+     977                   THIRD_INX_NAME = AUX,
      108+     978                   FILL_CHAR_NAME = FILL_CHAR,
      109+     979                   FILL_CHAR_TEXT_NAME = TEXT,
      110+     980                   ROUND_NAME = ROUND,
      111+     981                   SRCH_RESULT_NAME = SRCH_RESULT,
      112+     982                   SRCH_RESULT_ARG_NUMBER_NAME = ARG_NUMBER,
      113+     983                   SRCH_RESULT_DISP_NAME = DISP,
      114+     984                   VRFY_RESULT_NAME = VRFY_RESULT,
      115+     985                   VRFY_RESULT_DISP_NAME = DISP,
      116+     986                   PICTURE_STRING_NAME = PICTURE_STRING,
      117+     987                   PICTURE_STRING_INT_LEN_NAME = INTERMEDIATE_RESULT_LEN,
      118+     988                   PICTURE_STRING_DEC_NAME = DEC,
      119+     989                   COMP_RESULT_NAME = COMP_RESULT,
      120+     990                   SIZE_ERROR_NAME = SIZE_ERROR,
      121+     991                   TARGET_SIZE_NAME = TARGET_SIZE,
      122+     992                   STCLASS = "  ",
      123+     993                   LVL = 1,
      124+     994                   TYPE ( ACM = "ACM",
      125+     995                          ALR = "ALR",
      126+     996                          CBD = "CBD",
      127+     997                          CDB = "CDB",
      128+     998                          DAD = "DAD",
      129+     999                          DCM = "DCM",
      130+    1000                          DDV = "DDV",
      131+    1001                          DLS = "DLS",
      132+    1002                          DMC = "DMC",
      133+    1003                          DME = "DME",
      134+    1004                          DML = "DML",
      135+    1005                          DRS = "DRS",
      136+    1006                          DSB = "DSB",
      137+    1007                          MAT = "MAT",
      138+    1008                          SRCH = "SRCH",
      139+    1009                          VRFY = "VRFY",
      140+    1010                          ANY ) = "ALR",
      141+    1011                   FIRST_CIP_TYPE ( DISPLAY = 0,
      142+    1012                                    PACKED = 1,
      143+    1013                                    BINARY = 2,
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:24   
      144+    1014                                    ALPHANUMERIC = 3,
      145+    1015                                    ANY ) = 3,
      146+    1016                   FIRST_CIP_OFFSET = 0,
      147+    1017                   FIRST_CIP_LEN = 0,
      148+    1018                   FIRST_CIP_SIGN ( UNSIGNED = 0,
      149+    1019                                    TRAILING = 1,
      150+    1020                                    LEADING = 2,
      151+    1021                                    OVERPUNCHED = 3,
      152+    1022                                    ANY ) = 0,
      153+    1023                   FIRST_CIP_AS ( DEFAULT = "BITBIN('B'X)",
      154+    1024                                  INDEX = "BITBIN('1B'X)",
      155+    1025                                  ANY ) = "BITBIN('B'X)",
      156+    1026                   FIRST_CIP_FILL ( YES = 1,
      157+    1027                                    NO = 0,
      158+    1028                                    ANY ) = 1,
      159+    1029                   SECOND_CIP_TYPE ( DISPLAY = 0,
      160+    1030                                     PACKED = 1,
      161+    1031                                     BINARY = 2,
      162+    1032                                     ALPHANUMERIC = 3,
      163+    1033                                     ANY ) = 3,
      164+    1034                   SECOND_CIP_OFFSET = 0,
      165+    1035                   SECOND_CIP_LEN = 0,
      166+    1036                   SECOND_CIP_SIGN ( UNSIGNED = 0,
      167+    1037                                     TRAILING = 1,
      168+    1038                                     LEADING = 2,
      169+    1039                                     OVERPUNCHED = 3,
      170+    1040                                     ANY ) = 0,
      171+    1041                   SECOND_CIP_AS ( DEFAULT = "BITBIN('B'X)",
      172+    1042                                   INDEX = "BITBIN('2B'X)",
      173+    1043                                   ANY ) = "BITBIN('B'X)",
      174+    1044                   SECOND_CIP_FILL ( YES = 1,
      175+    1045                                     NO = 0,
      176+    1046                                     ANY ) = 1,
      177+    1047                   THIRD_CIP_TYPE ( DISPLAY = 0,
      178+    1048                                    PACKED = 1,
      179+    1049                                    BINARY = 2,
      180+    1050                                    ALPHANUMERIC = 3,
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:25   
      181+    1051                                    ANY ) = 3,
      182+    1052                   THIRD_CIP_OFFSET = 0,
      183+    1053                   THIRD_CIP_LEN = 0,
      184+    1054                   THIRD_CIP_SIGN ( UNSIGNED = 0,
      185+    1055                                    TRAILING = 1,
      186+    1056                                    LEADING = 2,
      187+    1057                                    OVERPUNCHED = 3,
      188+    1058                                    ANY ) = 0,
      189+    1059                   THIRD_CIP_AS ( DEFAULT = "BITBIN('B'X)",
      190+    1060                                  INDEX = "BITBIN('3B'X)",
      191+    1061                                  ANY ) = "BITBIN('B'X)",
      192+    1062                   THIRD_CIP_FILL ( YES = 1,
      193+    1063                                    NO = 0,
      194+    1064                                    ANY ) = 1,
      195+    1065                   WITH_DATAS ( YES = '1'B,
      196+    1066                                 NO = '0'B,
      197+    1067                                 ANY ) = '1'B,
      198+    1068                   FIRST_DATA = "ADDR(NIL)",
      199+    1069                   SECOND_DATA = "ADDR(NIL)",
      200+    1070                   THIRD_DATA = "ADDR(NIL)",
      201+    1071                   WITH_PARAMS ( YES = '1'B,
      202+    1072                                 NO = '0'B,
      203+    1073                                 ANY ) = '1'B,
      204+    1074                   FIRST_LEN = 0,
      205+    1075                   SECOND_LEN = 0,
      206+    1076                   THIRD_LEN = 0,
      207+    1077                   FIRST_DEC = 0,
      208+    1078                   SECOND_DEC = 0,
      209+    1079                   THIRD_DEC = 0,
      210+    1080                   SRCH_VRFY_ARGS_LEN = 0,
      211+    1081                   SRCH_VRFY_ARGS_LIST_LEN = 0,
      212+    1082                   FIRST_SHIFT_COUNT = 0,
      213+    1083                   SECOND_SHIFT_COUNT = 0,
      214+    1084                   THIRD_SHIFT_COUNT = 0,
      215+    1085                   SRCH_VRFY_ELEMS_LEN = 0,
      216+    1086                   SRCH_VRFY_ELEMS_LIST_LEN = 0,
      217+    1087                   FIRST_INX = 0,
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:26   
      218+    1088                   SECOND_INX = 0,
      219+    1089                   THIRD_INX = 0,
      220+    1090                   FILL_CHAR = %QI#CIP_BLANK_FILL,
      221+    1091                   ROUND = 0,
      222+    1092                   SRCH_RESULT_ARG_NUMBER = 0,
      223+    1093                   SRCH_RESULT_DISP = 0,
      224+    1094                   VRFY_RESULT_DISP = 0,
      225+    1095                   PICTURE_STRING_LEN = 0,
      226+    1096                   PICTURE_STRING_DEC = 0,
      227+    1097                   COMP_RESULT = 0,
      228+    1098                   SIZE_ERROR = 0,
      229+    1099                   TARGET_SIZE = 0,
      230+    1100                   END_STRUCTURE ( YES = ";",
      231+    1101                                   NO = ",",
      232+    1102                                   ANY ) = ";" );
      233+    1103
      234+    1104            %BEGIN_MACRO ( STCLASS = STCLASS );
      235+    1105
      236+    1106            %LSET THE_TYPE = TEXTCHAR (TYPE);
      237+    1107            %IF LVL = 1;
      238+    1108          DCL 1 NAME STCLASS DALIGNED,
      239+    1109            %ELSE;
      240+    1110              %(LVL) NAME DALIGNED,
      241+    1111            %ENDIF;
      242+    1112
      243+    1113                %(LVL+1) CIPS_NAME,
      244+    1114
      245+    1115            %LSET LEVEL = %(LVL+2);
      246+    1116            %IF TEXTCHAR(END_STRUCTURE)=';' AND ( NOT WITH_DATAS ) AND ( NOT WITH_PARAMS );
      247+    1117              %LSET CIPS_END_STRUCTURE = CHARTEXT(';');
      248+    1118            %ELSE;
      249+    1119              %LSET CIPS_END_STRUCTURE = CHARTEXT(',');
      250+    1120            %ENDIF;
      251+    1121            %QI_CIP_DESCRIPTOR ( NAME = FIRST_CIP_NAME,
      252+    1122                                 STCLASS = STCLASS,
      253+    1123                                 LVL = %LEVEL,
      254+    1124                                 TYPE = FIRST_CIP_TYPE,
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:27   
      255+    1125                                 OFFSET = FIRST_CIP_OFFSET,
      256+    1126                                 SIGN = FIRST_CIP_SIGN,
      257+    1127                                 LEN = FIRST_CIP_LEN,
      258+    1128                                 AS = FIRST_CIP_AS,
      259+    1129                                 DISP = SOURCE,
      260+    1130                                 FILL = FIRST_CIP_FILL,
      261+    1131                                 END_STRUCTURE = NO );
      262+    1132            %QI_CIP_DESCRIPTOR ( NAME = SECOND_CIP_NAME,
      263+    1133                                 STCLASS = STCLASS,
      264+    1134                                 LVL = %LEVEL,
      265+    1135                                 TYPE = SECOND_CIP_TYPE,
      266+    1136                                 OFFSET = SECOND_CIP_OFFSET,
      267+    1137                                 SIGN = SECOND_CIP_SIGN,
      268+    1138                                 LEN = SECOND_CIP_LEN,
      269+    1139                                 AS = SECOND_CIP_AS,
      270+    1140                                 DISP = TARGET,
      271+    1141                                 FILL = SECOND_CIP_FILL,
      272+    1142                                 END_STRUCTURE = NO );
      273+    1143            %QI_CIP_DESCRIPTOR ( NAME = THIRD_CIP_NAME,
      274+    1144                                 STCLASS = STCLASS,
      275+    1145                                 LVL = %LEVEL,
      276+    1146                                 TYPE = THIRD_CIP_TYPE,
      277+    1147                                 OFFSET = THIRD_CIP_OFFSET,
      278+    1148                                 SIGN = THIRD_CIP_SIGN,
      279+    1149                                 LEN = THIRD_CIP_LEN,
      280+    1150                                 AS = THIRD_CIP_AS,
      281+    1151                                 DISP = AUX,
      282+    1152                                 FILL = THIRD_CIP_FILL,
      283+    1153                                 END_STRUCTURE = %CIPS_END_STRUCTURE );
      284+    1154
      285+    1155        %(LVL+1) %CHARTEXT(CONCAT(TEXTCHAR(CIPS_NAME),'_A')) (0:2) REDEF CIPS_NAME UBIN(32),
      286+    1156
      287+    1157            %IF WITH_DATAS;
      288+    1158              %IF TEXTCHAR(END_STRUCTURE)=';' AND ( NOT WITH_PARAMS );
      289+    1159                %LSET DATAS_END_STRUCTURE = CHARTEXT(';');
      290+    1160              %ELSE;
      291+    1161                %LSET DATAS_END_STRUCTURE = CHARTEXT(',');
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:28   
      292+    1162              %ENDIF;
      293+    1163                %(LVL+1) DATAS_NAME DALIGNED,
      294+    1164                  %(LVL+2) FIRST_DATA_NAME PTR %INIT(FIRST_DATA)%CHARTEXT('/**/'),
      295+    1165                  %(LVL+2) SECOND_DATA_NAME PTR %INIT(SECOND_DATA)%CHARTEXT('/**/'),
      296+    1166                  %(LVL+2) THIRD_DATA_NAME PTR %INIT(THIRD_DATA)%CHARTEXT('/**/'),
      297+    1167          %(LVL+1) %CHARTEXT(CONCAT(TEXTCHAR(DATAS_NAME),'_A$')) (0:2) REDEF DATAS_NAME PTR,
      298+    1168            %ENDIF;
      299+    1169
      300+    1170            %IF WITH_PARAMS;
      301+    1171              %IF THE_TYPE = 'SRCH' OR THE_TYPE = 'VRFY';
      302+    1172                %(LVL+1) SRCH_VRFY_ARGS_NAME,
      303+    1173           %(LVL+2) SRCH_VRFY_ARGS_LEN_NAME UBIN %INIT(SRCH_VRFY_ARGS_LEN)%CHARTEXT('/**/'),
      304+    1174         %(LVL+2) SRCH_VRFY_ARGS_LIST_LEN_NAME UBIN %INIT(SRCH_VRFY_ARGS_LIST_LEN)%CHARTEXT(
              1174        '/**/'),
      305+    1175                  %(LVL+2) * UBIN,
      306+    1176         %(LVL+1) %CHARTEXT(CONCAT(TEXTCHAR(SRCH_VRFY_ARGS_NAME),'_A')) (0:2) REDEF SRCH_VRF
              1176        Y_ARGS_NAME UBIN,
      307+    1177                %(LVL+1) SHIFT_COUNTS_NAME REDEF SRCH_VRFY_ARGS_NAME,
      308+    1178                  %(LVL+2) FIRST_SHIFT_COUNT_NAME UBIN,
      309+    1179                  %(LVL+2) SECOND_SHIFT_COUNT_NAME UBIN,
      310+    1180                  %(LVL+2) THIRD_SHIFT_COUNT_NAME UBIN,
      311+    1181         %(LVL+1) %CHARTEXT(CONCAT(TEXTCHAR(SHIFT_COUNTS_NAME),'_A')) (0:2) REDEF SRCH_VRFY_
              1181        ARGS_NAME UBIN,
      312+    1182                %(LVL+1) LENS_NAME REDEF SRCH_VRFY_ARGS_NAME,
      313+    1183                  %(LVL+2) FIRST_LEN_NAME UBIN,
      314+    1184                  %(LVL+2) SECOND_LEN_NAME UBIN,
      315+    1185                  %(LVL+2) THIRD_LEN_NAME UBIN,
      316+    1186         %(LVL+1) %CHARTEXT(CONCAT(TEXTCHAR(LENS_NAME),'_A')) (0:2) REDEF SRCH_VRFY_ARGS_NAM
              1186        E UBIN,
      317+    1187              %ELSEIF THE_TYPE = 'DLS' OR THE_TYPE = 'DRS';
      318+    1188                %(LVL+1) SHIFT_COUNTS_NAME,
      319+    1189             %(LVL+2) FIRST_SHIFT_COUNT_NAME UBIN %INIT(FIRST_SHIFT_COUNT)%CHARTEXT('/**/'),
      320+    1190           %(LVL+2) SECOND_SHIFT_COUNT_NAME UBIN %INIT(SECOND_SHIFT_COUNT)%CHARTEXT('/**/'),
      321+    1191             %(LVL+2) THIRD_SHIFT_COUNT_NAME UBIN %INIT(THIRD_SHIFT_COUNT)%CHARTEXT('/**/'),
      322+    1192         %(LVL+1) %CHARTEXT(CONCAT(TEXTCHAR(SHIFT_COUNTS_NAME),'_A')) (0:2) REDEF SHIFT_COUN
              1192        TS_NAME UBIN,
      323+    1193                %(LVL+1) LENS_NAME REDEF SHIFT_COUNTS_NAME,
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:29   
      324+    1194                  %(LVL+2) FIRST_LEN_NAME UBIN,
      325+    1195                  %(LVL+2) SECOND_LEN_NAME UBIN,
      326+    1196                  %(LVL+2) THIRD_LEN_NAME UBIN,
      327+    1197         %(LVL+1) %CHARTEXT(CONCAT(TEXTCHAR(LENS_NAME),'_A')) (0:2) REDEF SHIFT_COUNTS_NAME
              1197        UBIN,
      328+    1198                %(LVL+1) SRCH_VRFY_ARGS_NAME REDEF SHIFT_COUNTS_NAME,
      329+    1199                  %(LVL+2) SRCH_VRFY_ARGS_LEN_NAME UBIN,
      330+    1200                  %(LVL+2) SRCH_VRFY_ARGS_LIST_LEN_NAME UBIN,
      331+    1201                  %(LVL+2) * UBIN,
      332+    1202         %(LVL+1) %CHARTEXT(CONCAT(TEXTCHAR(SRCH_VRFY_ARGS_NAME),'_A')) (0:2) REDEF SHIFT_CO
              1202        UNTS_NAME UBIN,
      333+    1203              %ELSE;
      334+    1204                %(LVL+1) LENS_NAME,
      335+    1205                  %(LVL+2) FIRST_LEN_NAME UBIN %INIT(FIRST_LEN)%CHARTEXT('/**/'),
      336+    1206                  %(LVL+2) SECOND_LEN_NAME UBIN %INIT(SECOND_LEN)%CHARTEXT('/**/'),
      337+    1207                  %(LVL+2) THIRD_LEN_NAME UBIN %INIT(THIRD_LEN)%CHARTEXT('/**/'),
      338+    1208            %(LVL+1) %CHARTEXT(CONCAT(TEXTCHAR(LENS_NAME),'_A')) (0:2) REDEF LENS_NAME UBIN,
      339+    1209                %(LVL+1) SRCH_VRFY_ARGS_NAME REDEF LENS_NAME,
      340+    1210                  %(LVL+2) SRCH_VRFY_ARGS_LEN_NAME UBIN,
      341+    1211                  %(LVL+2) SRCH_VRFY_ARGS_LIST_LEN_NAME UBIN,
      342+    1212                  %(LVL+2) * UBIN,
      343+    1213         %(LVL+1) %CHARTEXT(CONCAT(TEXTCHAR(SRCH_VRFY_ARGS_NAME),'_A')) (0:2) REDEF LENS_NAM
              1213        E UBIN,
      344+    1214                %(LVL+1) SHIFT_COUNTS_NAME REDEF LENS_NAME,
      345+    1215                  %(LVL+2) FIRST_SHIFT_COUNT_NAME UBIN,
      346+    1216                  %(LVL+2) SECOND_SHIFT_COUNT_NAME UBIN,
      347+    1217                  %(LVL+2) THIRD_SHIFT_COUNT_NAME UBIN,
      348+    1218         %(LVL+1) %CHARTEXT(CONCAT(TEXTCHAR(SHIFT_COUNTS_NAME),'_A')) (0:2) REDEF LENS_NAME
              1218        UBIN,
      349+    1219              %ENDIF;
      350+    1220
      351+    1221              %IF THE_TYPE = 'ALR' OR THE_TYPE = 'ACM';
      352+    1222                %(LVL+1) INXS_NAME,
      353+    1223                  %(LVL+2) FIRST_INX_NAME UBIN %INIT(FIRST_INX)%CHARTEXT('/**/'),
      354+    1224                  %(LVL+2) SECOND_INX_NAME UBIN %INIT(SECOND_INX)%CHARTEXT('/**/'),
      355+    1225                  %(LVL+2) THIRD_INX_NAME UBIN %INIT(THIRD_INX)%CHARTEXT('/**/'),
      356+    1226            %(LVL+1) %CHARTEXT(CONCAT(TEXTCHAR(INXS_NAME),'_A')) (0:2) REDEF INXS_NAME UBIN,
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:30   
      357+    1227                %(LVL+1) DECS_NAME REDEF INXS_NAME,
      358+    1228                  %(LVL+2) FIRST_DEC_NAME SBIN,
      359+    1229                  %(LVL+2) SECOND_DEC_NAME SBIN,
      360+    1230                  %(LVL+2) THIRD_DEC_NAME SBIN,
      361+    1231            %(LVL+1) %CHARTEXT(CONCAT(TEXTCHAR(DECS_NAME),'_A')) (0:2) REDEF INXS_NAME SBIN,
      362+    1232              %ELSE;
      363+    1233                %(LVL+1) DECS_NAME,
      364+    1234                  %(LVL+2) FIRST_DEC_NAME SBIN %INIT(FIRST_DEC)%CHARTEXT('/**/'),
      365+    1235                  %(LVL+2) SECOND_DEC_NAME SBIN %INIT(SECOND_DEC)%CHARTEXT('/**/'),
      366+    1236                  %(LVL+2) THIRD_DEC_NAME SBIN %INIT(THIRD_DEC)%CHARTEXT('/**/'),
      367+    1237            %(LVL+1) %CHARTEXT(CONCAT(TEXTCHAR(DECS_NAME),'_A')) (0:2) REDEF DECS_NAME SBIN,
      368+    1238                %(LVL+1) INXS_NAME REDEF DECS_NAME,
      369+    1239                  %(LVL+2) FIRST_INX_NAME UBIN,
      370+    1240                  %(LVL+2) SECOND_INX_NAME UBIN,
      371+    1241                  %(LVL+2) THIRD_INX_NAME UBIN,
      372+    1242            %(LVL+1) %CHARTEXT(CONCAT(TEXTCHAR(INXS_NAME),'_A')) (0:2) REDEF DECS_NAME UBIN,
      373+    1243              %ENDIF;
      374+    1244
      375+    1245                %(LVL+1) SRCH_VRFY_ELEMS_NAME,
      376+    1246         %(LVL+2) SRCH_VRFY_ELEMS_LEN_NAME UBIN %INIT(SRCH_VRFY_ELEMS_LEN)%CHARTEXT('/**/'),
      377+    1247         %(LVL+2) SRCH_VRFY_ELEMS_LIST_LEN_NAME UBIN %INIT(SRCH_VRFY_ELEMS_LIST_LEN)%CHARTEX
              1247        T('/**/'),
      378+    1248         %(LVL+1) %CHARTEXT(CONCAT(TEXTCHAR(SRCH_VRFY_ELEMS_NAME),'_A')) (0:1) REDEF SRCH_VR
              1248        FY_ELEMS_NAME UBIN,
      379+    1249
      380+    1250              %IF THE_TYPE = 'SRCH';
      381+    1251                %(LVL+1) SRCH_RESULT_NAME,
      382+    1252         %(LVL+2) SRCH_RESULT_ARG_NUMBER_NAME UBIN %INIT(SRCH_RESULT_ARG_NUMBER)%CHARTEXT('/
              1252        **/'),
      383+    1253               %(LVL+2) SRCH_RESULT_DISP_NAME UBIN %INIT(SRCH_RESULT_DISP)%CHARTEXT('/**/'),
      384+    1254         %(LVL+1) %CHARTEXT(CONCAT(TEXTCHAR(SRCH_RESULT_NAME),'_A')) (0:1) REDEF SRCH_RESULT
              1254        _NAME UBIN,
      385+    1255                %(LVL+1) VRFY_RESULT_NAME REDEF SRCH_RESULT_NAME,
      386+    1256                  %(LVL+2) VRFY_RESULT_DISP_NAME UBIN,
      387+    1257                  %(LVL+2) * UBIN,
      388+    1258         %(LVL+1) %CHARTEXT(CONCAT(TEXTCHAR(VRFY_RESULT_NAME),'_A')) (0:1) REDEF SRCH_RESULT
              1258        _NAME UBIN,
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:31   
      389+    1259                %(LVL+1) PICTURE_STRING_NAME REDEF SRCH_RESULT_NAME,
      390+    1260                  %(LVL+2) PICTURE_STRING_INT_LEN_NAME UBIN,
      391+    1261                  %(LVL+2) PICTURE_STRING_DEC_NAME UBIN,
      392+    1262         %(LVL+1) %CHARTEXT(CONCAT(TEXTCHAR(PICTURE_STRING_NAME),'_A')) (0:1) REDEF SRCH_RES
              1262        ULT_NAME UBIN,
      393+    1263              %ELSEIF THE_TYPE = 'VRFY';
      394+    1264                %(LVL+1) VRFY_RESULT_NAME,
      395+    1265               %(LVL+2) VRFY_RESULT_DISP_NAME UBIN %INIT(VRFY_RESULT_DISP)%CHARTEXT('/**/'),
      396+    1266                  %(LVL+2) * UBIN,
      397+    1267         %(LVL+1) %CHARTEXT(CONCAT(TEXTCHAR(VRFY_RESULT_NAME),'_A')) (0:1) REDEF VRFY_RESULT
              1267        _NAME UBIN,
      398+    1268                %(LVL+1) PICTURE_STRING_NAME REDEF VRFY_RESULT_NAME,
      399+    1269                  %(LVL+2) PICTURE_STRING_INT_LEN_NAME UBIN,
      400+    1270                  %(LVL+2) PICTURE_STRING_DEC_NAME UBIN,
      401+    1271         %(LVL+1) %CHARTEXT(CONCAT(TEXTCHAR(PICTURE_STRING_NAME),'_A')) (0:1) REDEF VRFY_RES
              1271        ULT_NAME UBIN,
      402+    1272                %(LVL+1) SRCH_RESULT_NAME REDEF VRFY_RESULT_NAME,
      403+    1273                  %(LVL+2) SRCH_RESULT_ARG_NUMBER_NAME UBIN,
      404+    1274                  %(LVL+2) SRCH_RESULT_DISP_NAME UBIN,
      405+    1275         %(LVL+1) %CHARTEXT(CONCAT(TEXTCHAR(SRCH_RESULT_NAME),'_A')) (0:1) REDEF VRFY_RESULT
              1275        _NAME UBIN,
      406+    1276              %ELSE;
      407+    1277                %(LVL+1) PICTURE_STRING_NAME,
      408+    1278         %(LVL+2) PICTURE_STRING_INT_LEN_NAME UBIN %INIT(PICTURE_STRING_LEN)%CHARTEXT('/**/'
              1278        ),
      409+    1279           %(LVL+2) PICTURE_STRING_DEC_NAME UBIN %INIT(PICTURE_STRING_DEC)%CHARTEXT('/**/'),
      410+    1280         %(LVL+1) %CHARTEXT(CONCAT(TEXTCHAR(PICTURE_STRING_NAME),'_A')) (0:1) REDEF PICTURE_
              1280        STRING_NAME UBIN,
      411+    1281                %(LVL+1) SRCH_RESULT_NAME REDEF PICTURE_STRING_NAME,
      412+    1282                  %(LVL+2) SRCH_RESULT_ARG_NUMBER_NAME UBIN,
      413+    1283                  %(LVL+2) SRCH_RESULT_DISP_NAME UBIN,
      414+    1284         %(LVL+1) %CHARTEXT(CONCAT(TEXTCHAR(SRCH_RESULT_NAME),'_A')) (0:1) REDEF PICTURE_STR
              1284        ING_NAME UBIN,
      415+    1285                %(LVL+1) VRFY_RESULT_NAME REDEF PICTURE_STRING_NAME,
      416+    1286                  %(LVL+2) VRFY_RESULT_DISP_NAME UBIN,
      417+    1287                  %(LVL+2) * UBIN,
      418+    1288         %(LVL+1) %CHARTEXT(CONCAT(TEXTCHAR(VRFY_RESULT_NAME),'_A')) (0:1) REDEF PICTURE_STR
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:32   
              1288        ING_NAME UBIN,
      419+    1289              %ENDIF;
      420+    1290
      421+    1291         %IF THE_TYPE = 'ALR' OR THE_TYPE = 'ACM' OR THE_TYPE = 'MAT' OR THE_TYPE = 'SRCH' O
              1291        R THE_TYPE = 'VRFY';
      422+    1292                %(LVL+1) FILL_CHAR_NAME,
      423+    1293              %(LVL+2) FILL_CHAR_TEXT_NAME UBIN BYTE UNAL %INIT(FILL_CHAR)%CHARTEXT('/**/'),
      424+    1294                  %(LVL+2) * UBIN BYTE UNAL %INIT(0)%CHARTEXT('/**/'),
      425+    1295                %(LVL+1) SIZE_ERROR_NAME REDEF FILL_CHAR_NAME UBIN,
      426+    1296              %ELSE;
      427+    1297                %(LVL+1) SIZE_ERROR_NAME UBIN %INIT(SIZE_ERROR)%CHARTEXT('/**/'),
      428+    1298                %(LVL+1) FILL_CHAR_NAME REDEF SIZE_ERROR_NAME,
      429+    1299                  %(LVL+2) FILL_CHAR_TEXT_NAME UBIN BYTE UNAL,
      430+    1300                  %(LVL+2) * UBIN BYTE UNAL,
      431+    1301              %ENDIF;
      432+    1302
      433+    1303              %IF THE_TYPE = 'ACM' OR THE_TYPE = 'DCM';
      434+    1304                %(LVL+1) COMP_RESULT_NAME UBIN %INIT(COMP_RESULT)%CHARTEXT('/**/'),
      435+    1305                %(LVL+1) ROUND REDEF COMP_RESULT_NAME UBIN,
      436+    1306                %(LVL+1) TARGET_SIZE_NAME REDEF COMP_RESULT_NAME UBIN END_STRUCTURE
      437+    1307              %ELSEIF THE_TYPE = 'DAD' OR THE_TYPE = 'DSB' OR THE_TYPE = 'DML';
      438+    1308                %(LVL+1) TARGET_SIZE_NAME UBIN %INIT(TARGET_SIZE)%CHARTEXT('/**/'),
      439+    1309                %(LVL+1) COMP_RESULT_NAME REDEF TARGET_SIZE_NAME UBIN,
      440+    1310                %(LVL+1) ROUND_NAME REDEF TARGET_SIZE_NAME UBIN END_STRUCTURE
      441+    1311              %ELSE;
      442+    1312                %(LVL+1) ROUND_NAME UBIN %INIT(ROUND)%CHARTEXT('/**/'),
      443+    1313                %(LVL+1) COMP_RESULT_NAME REDEF ROUND_NAME UBIN,
      444+    1314                %(LVL+1) TARGET_SIZE_NAME REDEF ROUND_NAME UBIN END_STRUCTURE
      445+    1315              %ENDIF;
      446+    1316
      447+    1317            %ENDIF;
      448+    1318
      449+    1319            %END_MACRO;
      450+    1320
      451+    1321          %MEND;
      452+    1322
      453+    1323        %EJECT;
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:33   
      454+    1324        /*
      455+    1325                                %%%%%     %%%%   %%%%%%
      456+    1326                               %%   %%     %%    %%   %%
      457+    1327                               %%          %%    %%   %%
      458+    1328                               %%          %%    %%%%%%
      459+    1329                               %%          %%    %%
      460+    1330                               %%   %%     %%    %%
      461+    1331                                %%%%%     %%%%   %%
      462+    1332                  %%                               %%%
      463+    1333                  %%                               %%%
      464+    1334              %%% %%   %%%%%    %%%%%%   %%%%%%     %%     %%%%%%
      465+    1335             %%  %%%  %%   %%  %%       %%         %%     %%
      466+    1336             %%  %%%  %%%%%%%   %%%%%   %%                 %%%%%
      467+    1337             %%  %%%  %%            %%  %%                     %%
      468+    1338              %%% %%   %%%%%   %%%%%%    %%%%%%           %%%%%%
      469+    1339                                                                            */
      470+    1340
      471+    1341        /*D* NAME:         QI_CIP_DESCRIPTOR
      472+    1342             PURPOSE:      Used to generate a structure which frames a
      473+    1343                           descriptor used by various CIP instructions.
      474+    1344             DESCRIPTION:  This MACRO is primarily invoked by the MACRO
      475+    1345                           QI@CIP_OPERATION (see its *D*) to generate
      476+    1346                           generate a two word remote CIP descriptor.
      477+    1347                           Several general-purpose CONSTANT CIP descriptors
      478+    1348                           exist...see *D* for GENERAL_PURPOSE_CIPS.
      479+    1349        */
      480+    1350          %MACRO QI_CIP_DESCRIPTOR
      481+    1351                 ( NAME = QI_CIP_DESCRIPTOR,
      482+    1352                   CA_NAME = CA,
      483+    1353                   CB_NAME = CB,
      484+    1354                   CD_NAME = CD,
      485+    1355                   CP_NAME = CP,
      486+    1356                   FILL_NAME = FILL,
      487+    1357                   MBZ_NAME = MBZ,
      488+    1358                   OFFSET_NAME = OFFSET,
      489+    1359                   SIGN_NAME = SIGN,
      490+    1360                   LEN_NAME = LEN,
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:34   
      491+    1361                   T_NAME = T,
      492+    1362                   AS_NAME = AS,
      493+    1363                   DISP_NAME = DISP,
      494+    1364                   STCLASS = " ",
      495+    1365                   LVL = 1,
      496+    1366                   TYPE ( DISPLAY = 0,
      497+    1367                          PACKED = 1,
      498+    1368                          BINARY = 2,
      499+    1369                          ALPHANUMERIC = 3,
      500+    1370                          ANY ) = 3,
      501+    1371                   OFFSET = 0,
      502+    1372                   SIGN ( UNSIGNED = 0,
      503+    1373                          TRAILING = 1,
      504+    1374                          LEADING = 2,
      505+    1375                          OVERPUNCHED = 3,
      506+    1376                          ANY ) = 0,
      507+    1377                   LEN = 0,
      508+    1378                   AS ( DEFAULT = "BITBIN('B'X)",
      509+    1379                        INDEX = "BITBIN('1B'X)",
      510+    1380                        INDEX_SOURCE = "BITBIN('1B'X)",
      511+    1381                        INDEX_TARGET = "BITBIN('2B'X)",
      512+    1382                        INDEX_AUX = "BITBIN('3B'X)",
      513+    1383                        ANY ) = "BITBIN('B'X)",
      514+    1384                   DISP ( SOURCE = 6,
      515+    1385                          TARGET = 8,
      516+    1386                          AUX = 10 ) = 6,
      517+    1387                   FILL ( YES = 1,
      518+    1388                          NO = 0,
      519+    1389                          ANY ) = 1,
      520+    1390                   END_STRUCTURE ( YES = ";",
      521+    1391                                   NO = ",",
      522+    1392                                   ANY ) = ";" );
      523+    1393
      524+    1394            %BEGIN_MACRO ( STCLASS = STCLASS );
      525+    1395
      526+    1396            %LSET NOTHING = TEXTCHAR(SIGN);
      527+    1397            %LSET NOTHING = TEXTCHAR(FILL);
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:35   
      528+    1398            %LSET NOTHING = TEXTCHAR(DATA$);
      529+    1399            %LSET NOTHING = TEXTCHAR(PNAME$);
      530+    1400            %LSET NOTHING = TEXTCHAR(STCLASS);
      531+    1401
      532+    1402            %IF (TYPE >= 0) AND (TYPE <= 3);
      533+    1403              %IF TEXTCHAR(INIT) = 'INIT';
      534+    1404                %LSET STR_LEN=CHARBIN(TEXTCHAR(LEN));
      535+    1405                %LSET STR_OFFSET=CHARBIN(TEXTCHAR(OFFSET));
      536+    1406                %LSET STR_SIGN=CHARBIN(TEXTCHAR(SIGN));
      537+    1407                %IF TYPE=2;
      538+    1408                  %IF (STR_LEN ~= 0) AND (STR_LEN ~= 2) AND (STR_LEN ~= 4);
      539+    1409                    %ERROR (CONCAT('Illegal LEN for ',TEXTCHAR(NAME)),3);
      540+    1410                  %ENDIF;
      541+    1411                %ELSE;
      542+    1412                  %IF (STR_LEN < 0) OR (STR_LEN > 31);
      543+    1413                    %ERROR (CONCAT('Illegal LEN for ',TEXTCHAR(NAME)),3);
      544+    1414                  %ENDIF;
      545+    1415                %ENDIF;
      546+    1416                %IF TYPE=1;        /* PACKED */
      547+    1417                  %IF (STR_OFFSET < 0) OR (STR_OFFSET > 3);
      548+    1418                    %ERROR (CONCAT('Illegal OFFSET for ',TEXTCHAR(NAME)),3);
      549+    1419                  %ENDIF;
      550+    1420                  %IF (STR_SIGN < 0) OR (STR_SIGN > 1);
      551+    1421                    %ERROR (CONCAT('Illegal SIGN for ',TEXTCHAR(NAME)),3);
      552+    1422                  %ENDIF;
      553+    1423                %ELSE;
      554+    1424                  %IF (STR_OFFSET < 0) OR (STR_OFFSET > 1);
      555+    1425                    %ERROR (CONCAT('Illegal OFFSET for ',TEXTCHAR(NAME)),3);
      556+    1426                  %ENDIF;
      557+    1427                  %IF (STR_SIGN < 0) OR (STR_SIGN > 3);
      558+    1428                    %ERROR (CONCAT('Illegal SIGN for ',TEXTCHAR(NAME)),3);
      559+    1429                  %ENDIF;
      560+    1430                %ENDIF;
      561+    1431              %ENDIF;
      562+    1432              %IF LVL=1;
      563+    1433                DCL 1 NAME STCLASS DALIGNED,        /* CIP descriptor */
      564+    1434              %ELSE;
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:36   
      565+    1435                    %(LVL) NAME DALIGNED,           /* CIP descriptor */
      566+    1436              %ENDIF;
      567+    1437              %IF TYPE=3;                         /* ALPHANUMERIC primary descriptor */
      568+    1438                      %(LVL+1) CA,                  /* Control bits for ALPHANUMERIC */
      569+    1439                        %(LVL+2) OFFSET_NAME UBIN(1) UNAL %INIT(OFFSET)%CHARTEXT('/**/'),
      570+    1440                        %(LVL+2) FILL_NAME UBIN(1) UNAL %INIT(FILL)%CHARTEXT('/**/'),
      571+    1441                        %(LVL+2) MBZ_NAME UBIN(1) UNAL %INIT(0)%CHARTEXT('/**/'),
      572+    1442                      %(LVL+1) CB REDEF CA,         /* Control bits for BINARY */
      573+    1443                        %(LVL+2) OFFSET_NAME UBIN(1) UNAL,
      574+    1444                        %(LVL+2) MBZ UBIN(2) UNAL,  /* not used:  MBZ */
      575+    1445                      %(LVL+1) CD REDEF CA,         /* Control bits for DISPLAY */
      576+    1446                        %(LVL+2) OFFSET_NAME UBIN(1) UNAL,
      577+    1447                        %(LVL+2) SIGN_NAME UBIN(2) UNAL,
      578+    1448                      %(LVL+1) CP REDEF CA,         /* Control bits for PACKED */
      579+    1449                        %(LVL+2) OFFSET_NAME UBIN(2) UNAL,
      580+    1450                        %(LVL+2) SIGN_NAME UBIN(1) UNAL,
      581+    1451              %ELSEIF TYPE=2;                     /* BINARY primary descriptor */
      582+    1452                      %(LVL+1) CB,                  /* Control bits for BINARY */
      583+    1453                        %(LVL+2) OFFSET_NAME UBIN(1) UNAL %INIT(OFFSET)%CHARTEXT('/**/'),
      584+    1454                        %(LVL+2) MBZ_NAME UBIN(2) UNAL %INIT(0)%CHARTEXT('/**/'),
      585+    1455                      %(LVL+1) CA REDEF CB,         /* Control bits for ALPHANUMERIC */
      586+    1456                        %(LVL+2) OFFSET_NAME UBIN(1) UNAL,
      587+    1457                        %(LVL+2) FILL_NAME UBIN(1) UNAL,
      588+    1458                        %(LVL+2) MBZ UBIN(1) UNAL,  /* not used:  MBZ */
      589+    1459                      %(LVL+1) CD REDEF CB,         /* Control bits for DISPLAY */
      590+    1460                        %(LVL+2) OFFSET_NAME UBIN(1) UNAL,
      591+    1461                        %(LVL+2) SIGN_NAME UBIN(2) UNAL,
      592+    1462                      %(LVL+1) CP REDEF CB,         /* Control bits for PACKED */
      593+    1463                        %(LVL+2) OFFSET_NAME UBIN(2) UNAL,
      594+    1464                        %(LVL+2) SIGN_NAME UBIN(1) UNAL,
      595+    1465              %ELSEIF TYPE=1;                     /* PACKED primary descriptor */
      596+    1466                      %(LVL+1) CP,                  /* Control bits for PACKED */
      597+    1467                        %(LVL+2) OFFSET_NAME UBIN(2) UNAL %INIT(OFFSET)%CHARTEXT('/**/'),
      598+    1468                        %(LVL+2) SIGN_NAME UBIN(1) UNAL %INIT(SIGN)%CHARTEXT('/**/'),
      599+    1469                      %(LVL+1) CA REDEF CP,         /* Control bits for ALPHANUMERIC */
      600+    1470                        %(LVL+2) OFFSET_NAME UBIN(1) UNAL,
      601+    1471                        %(LVL+2) FILL_NAME UBIN(1) UNAL,
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:37   
      602+    1472                        %(LVL+2) MBZ UBIN(1) UNAL,  /* not used:  MBZ */
      603+    1473                      %(LVL+1) CB REDEF CP,         /* Control bits for BINARY */
      604+    1474                        %(LVL+2) OFFSET_NAME UBIN(1) UNAL,
      605+    1475                        %(LVL+2) MBZ UBIN(2) UNAL,  /* not used:  MBZ */
      606+    1476                      %(LVL+1) CD REDEF CP,         /* Control bits for DISPLAY */
      607+    1477                        %(LVL+2) OFFSET_NAME UBIN(1) UNAL,
      608+    1478                        %(LVL+2) SIGN_NAME UBIN(2) UNAL,
      609+    1479              %ELSE;                              /* DISPLAY primary descriptor */
      610+    1480                      %(LVL+1) CD,                  /* Control bits for DISPLAY */
      611+    1481                        %(LVL+2) OFFSET_NAME UBIN(1) UNAL %INIT(OFFSET)%CHARTEXT('/**/'),
      612+    1482                        %(LVL+2) SIGN_NAME UBIN(2) UNAL %INIT(SIGN)%CHARTEXT('/**/'),
      613+    1483                      %(LVL+1) CA REDEF CD,         /* Control bits for ALPHANUMERIC */
      614+    1484                        %(LVL+2) OFFSET_NAME UBIN(1) UNAL,
      615+    1485                        %(LVL+2) FILL_NAME UBIN(1) UNAL,
      616+    1486                        %(LVL+2) MBZ UBIN(1) UNAL,  /* not used:  MBZ */
      617+    1487                      %(LVL+1) CB REDEF CD,         /* Control bits for BINARY */
      618+    1488                        %(LVL+2) OFFSET_NAME UBIN(1) UNAL,
      619+    1489                        %(LVL+2) MBZ UBIN(2) UNAL,  /* not used:  MBZ */
      620+    1490                      %(LVL+1) CP REDEF CD,         /* Control bits for PACKED */
      621+    1491                        %(LVL+2) OFFSET_NAME UBIN(2) UNAL,
      622+    1492                        %(LVL+2) SIGN_NAME UBIN(1) UNAL,
      623+    1493              %ENDIF;
      624+    1494                      %(LVL+1) LEN_NAME UBIN(5) UNAL %INIT(LEN)%CHARTEXT('/**/'),
      625+    1495              %IF TYPE=1;                         /* PACKED primary descriptor */
      626+    1496                      %(LVL+1) T_NAME UBIN(1) UNAL %INIT(1)%CHARTEXT('/**/'),
      627+    1497              %ELSE;
      628+    1498                      %(LVL+1) T_NAME UBIN(1) UNAL %INIT(0)%CHARTEXT('/**/'),
      629+    1499              %ENDIF;
      630+    1500                      %(LVL+1) AS_NAME UBIN(7) UNAL %INIT(AS)%CHARTEXT('/**/'),
      631+    1501              %IF LVL=1;
      632+    1502                      %(LVL+1) DISP_NAME UBIN %INIT(DISP)%CHARTEXT('/**/');
      633+    1503                DCL 1 %CHARTEXT(CONCAT(TEXTCHAR(NAME),'_A')) (0:1) REDEF NAME UBIN;
      634+    1504              %ELSE;
      635+    1505                      %(LVL+1) DISP_NAME UBIN %INIT(DISP)%CHARTEXT('/**/'),
      636+    1506           %(LVL) %CHARTEXT(CONCAT(TEXTCHAR(NAME),'_A')) (0:1) REDEF NAME UBIN END_STRUCTURE
      637+    1507              %ENDIF;
      638+    1508            %ELSE;
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:38   
      639+    1509              %ERROR ( CONCAT ( 'Illegal TYPE for ', TEXTCHAR (NAME) ), 3 );
      640+    1510            %ENDIF;
      641+    1511
      642+    1512            %END_MACRO;
      643+    1513
      644+    1514          %MEND;
      645+    1515
      646+    1516        %EJECT;
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:39   
      647+    1517        /*
      648+    1518                                 %%       %%
      649+    1519                       %%%%%   %%%%%%   %%%%%%    %%%%%   %% %%%%
      650+    1520                      %%   %%    %%       %%     %%   %%  %%%%
      651+    1521                      %%   %%    %%       %%     %%%%%%%  %%%
      652+    1522                      %%   %%    %%       %%     %%       %%
      653+    1523                       %%%%%      %%%      %%%    %%%%%   %%
      654+    1524
      655+    1525                       %%%%%%  %% %%%    %%% %%   %%%%%%   %%%%%
      656+    1526                      %%       %%%  %%  %%  %%%  %%       %%   %%
      657+    1527                       %%%%%   %%%  %%  %%  %%%  %%       %%%%%%%
      658+    1528                           %%  %%%  %%  %%  %%%  %%       %%
      659+    1529                      %%%%%%   %% %%%    %%% %%   %%%%%%   %%%%%
      660+    1530                               %%
      661+    1531                               %%
      662+    1532                                                                            */
      663+    1533
      664+    1534        /*D* NAME:         QI@OTTER_SPACE
      665+    1535             PURPOSE:      To provide a temporary area in the interpreter's
      666+    1536                           AUTO for conversion of data items, etc.
      667+    1537             DESCRIPTION:  This MACRO simply generates some temporary space
      668+    1538                           in AUTO, referencable as a structure, a character
      669+    1539                           array, or an unsigned byte array.  It's used
      670+    1540                           heavily by some MOVE op-codes which unpack COMP
      671+    1541                           items into a copy of it with STCLASS = otter...
      672+    1542        */
      673+    1543
      674+    1544          %MACRO QI@OTTER_SPACE ( NAME = QI@OTTER_SPACE,
      675+    1545                                  STCLASS = AUTO,
      676+    1546                                  BYTE_SIZE = 16 );
      677+    1547
      678+    1548            %BEGIN_MACRO ( STCLASS = STCLASS );
      679+    1549
      680+    1550            DCL 1 NAME STCLASS ALIGNED,
      681+    1551                  2 *(0:%(BYTE_SIZE-1)) UBIN BYTE UNAL %INIT(0*0)%CHARTEXT('/**/');
      682+    1552
      683+    1553         DCL 1 %CHARTEXT(CONCAT(TEXTCHAR(NAME),'_CA')) (0:%(BYTE_SIZE-1)) REDEF NAME CHAR(1)
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:40   
              1553         UNAL;
      684+    1554
      685+    1555         DCL 1 %CHARTEXT(CONCAT(TEXTCHAR(NAME),'_BA')) (0:%(BYTE_SIZE-1)) REDEF NAME UBIN BY
              1555        TE UNAL;
      686+    1556
      687+    1557            %END_MACRO;
      688+    1558
      689+    1559          %MEND;
      690+    1560
      691+    1561        %EJECT;
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:41   
      692+    1562        /*
      693+    1563                                          %%                         %%
      694+    1564              %%%%%%   %%%%%   %% %%%   %%%%%%    %%%%%   %%   %%  %%%%%%
      695+    1565             %%       %%   %%  %%%  %%    %%     %%   %%   %% %%     %%
      696+    1566             %%       %%   %%  %%   %%    %%     %%%%%%%    %%%      %%
      697+    1567             %%       %%   %%  %%   %%    %%     %%        %% %%     %%
      698+    1568              %%%%%%   %%%%%   %%   %%     %%%    %%%%%   %%   %%     %%%
      699+    1569                                                                            */
      700+    1570
      701+    1571          %MACRO QI_1 ( STCLASS = "SYMREF",
      702+    1572                        NAME = QI_1 );
      703+    1573
      704+    1574            %BEGIN_MACRO ( STCLASS = STCLASS );
      705+    1575
      706+    1576          DCL 1 NAME STCLASS DALIGNED,         /* interpreter data */
      707+    1577                2 BASE DALIGNED,
      708+    1578                  3 DATA$ PTR %INIT(ADDR(NIL))%CHARTEXT('/**/'),
      709+    1579                            /* base pointer for user data */
      710+    1580                  3 PROC$ PTR %INIT(ADDR(NIL))%CHARTEXT('/**/'),
      711+    1581                            /* base pointer for user proc */
      712+    1582                  3 INTR$ PTR %INIT(ADDR(NIL))%CHARTEXT('/**/'),
      713+    1583                            /* base pointer for intr data */
      714+    1584                2 BASE_A$(0:2) REDEF BASE PTR,
      715+    1585
      716+    1586                2 INSTR$ PTR DALIGNED %INIT(ADDR(NIL))%CHARTEXT('/**/'),
      717+    1587                            /* pointer to last/current op-code sequence */
      718+    1588                2 CURR_INSTR$ PTR DALIGNED %INIT(ADDR(NIL))%CHARTEXT('/**/'),
      719+    1589                            /* current instruction */
      720+    1590                2 INITIALIZATION_BLOCK$ PTR DALIGNED %INIT(ADDR(NIL))%CHARTEXT('/**/'),
      721+    1591                            /* from arguments to QAT$TALLYHO */
      722+    1592            2 ARGUMENTS_AND_OR_FREE_AUTO_A$$ PTR DALIGNED %INIT(ADDR(NIL))%CHARTEXT('/**/'),
      723+    1593                            /* from arguments to QAT$TALLYHO */
      724+    1594                2 UNWIND$ REMEMBER DALIGNED /*%INIT(QAU$UNWIND)%CHARTEXT('\**\')*/,
      725+    1595                            /* contains address of somebody in QAT$TALLYHO
      726+    1596                               (somebody using top auto frame) */
      727+    1597                2 VERIFY_BUFFER$ PTR DALIGNED %INIT(ADDR(NIL))%CHARTEXT('/**/'),
      728+    1598                            /* address of working area for VERIFY */
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:42   
      729+    1599                2 VERIFY_BUFFER_SIZE UBIN %INIT(0)%CHARTEXT('/**/'),
      730+    1600                            /* size in bytes of working area for VERIFY */
      731+    1601                2 HOUSEKEEPING ALIGNED,
      732+    1602                  3 IS_DBCONTROL_ESTABLISHED BIT(1) UNAL %INIT('0'B)%CHARTEXT('/**/'),
      733+    1603                            /* set if M$DBCONTROL has been called */
      734+    1604                  3 IS_INT_ESTABLISHED BIT(1) UNAL %INIT('0'B)%CHARTEXT('/**/'),
      735+    1605                            /* set if M$INT has been called */
      736+    1606                  3 IS_TRAP_ESTABLISHED BIT(1) UNAL %INIT('0'B)%CHARTEXT('/**/'),
      737+    1607                            /* set if M$TRAP has been called */
      738+    1608                  3 IS_BUFFER_ALLOCATED BIT(1) UNAL %INIT('0'B)%CHARTEXT('/**/'),
      739+    1609                            /* set if the buffer for X$whatever has been allocated */
      740+    1610                  3 IS_MESSAGE_LINE_CREATED BIT(1) UNAL %INIT('0'B)%CHARTEXT('/**/'),
      741+    1611                            /* set if the MESSAGE LINE has been M$OPENed */
      742+    1612                  3 IS_DEBUGGER_ASSOCIATING BIT(1) UNAL %INIT('0'B)%CHARTEXT('/**/'),
      743+    1613                            /* set if the debugger has post-associated
      744+    1614                               (QCE$ERROR_DBCONTROL was entered) */
      745+    1615                  3 INITIAL_PAGEHALT_SETTING BIT(2) UNAL %INIT('00'B)%CHARTEXT('/**/'),
      746+    1616                            /* value of VLP_TRMCTL.PAGEHALT at invocation */
      747+    1617                2 SCREEN_UPDATE_FLAGS ALIGNED,
      748+    1618                              /* set by screen-updating routines:
      749+    1619                                     APPLY, CLEAR, DEACTIVATE, GET_FIELD, WRITE/DISPLAY
      750+    1620                                 checked/reset by QCU$UPDATE_SCREEN */
      751+    1621                  3 WAS_APPLIED BIT(1) UNAL %INIT('0'B)%CHARTEXT('/**/'),
      752+    1622                              /* an APPLY (M$MDFFLD) was done */
      753+    1623                  3 WAS_CLEARED BIT(1) UNAL %INIT('0'B)%CHARTEXT('/**/'),
      754+    1624                              /* a CLEAR (M$ERASE) was done */
      755+    1625                  3 WAS_DEACTIVATED BIT(1) UNAL %INIT('0'B)%CHARTEXT('/**/'),
      756+    1626                              /* a DEACTIVATE (M$RLSFLD) was done */
      757+    1627                  3 WAS_WRITTEN BIT(1) UNAL %INIT('0'B)%CHARTEXT('/**/'),
      758+    1628                              /* a DISPLAY/WRITE (M$WRITE) was done */
      759+    1629                2 SOURCE$ PTR DALIGNED %INIT(ADDR(NIL))%CHARTEXT('/**/'),
      760+    1630                            /* pointer to DAD for QCS$SETUP */
      761+    1631
      762+    1632                %QI@CIP_OPERATION ( NAME = OP,
      763+    1633                                    STCLASS = STCLASS,
      764+    1634                                    LVL = 2,
      765+    1635                                    FIRST_CIP_TYPE = DISPLAY,
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:43   
      766+    1636                                    SECOND_CIP_TYPE = DISPLAY,
      767+    1637                                    THIRD_CIP_TYPE = DISPLAY,
      768+    1638                                    END_STRUCTURE = NO );
      769+    1639
      770+    1640                2 DAD DALIGNED,
      771+    1641                            /* pointers to DADs */
      772+    1642                  3 S$ PTR %INIT(ADDR(NIL))%CHARTEXT('/**/'),
      773+    1643                  3 T$ PTR %INIT(ADDR(NIL))%CHARTEXT('/**/'),
      774+    1644                  3 AUX$ PTR %INIT(ADDR(NIL))%CHARTEXT('/**/'),
      775+    1645                2 DAD_A$(0:2) REDEF DAD PTR,
      776+    1646                2 IS_ALL_LIT,
      777+    1647                            /* ALL "literal" indicator */
      778+    1648                  3 S BIT(1) ALIGNED %INIT('0'B)%CHARTEXT('/**/'),
      779+    1649                  3 T BIT(1) ALIGNED %INIT('0'B)%CHARTEXT('/**/'),
      780+    1650                  3 AUX BIT(1) ALIGNED %INIT('0'B)%CHARTEXT('/**/'),
      781+    1651                2 IS_ALL_LIT_A(0:2) REDEF IS_ALL_LIT BIT(1) ALIGNED,
      782+    1652                2 IS_FORM_VARIABLE,
      783+    1653                            /* COBOL vs FIELD variable type indicator */
      784+    1654                  3 S BIT(1) ALIGNED %INIT('0'B)%CHARTEXT('/**/'),
      785+    1655                  3 T BIT(1) ALIGNED %INIT('0'B)%CHARTEXT('/**/'),
      786+    1656                  3 AUX BIT(1) ALIGNED %INIT('0'B)%CHARTEXT('/**/'),
      787+    1657                2 IS_FORM_VARIABLE_A(0:2) REDEF IS_FORM_VARIABLE BIT(1) ALIGNED,
      788+    1658                2 IS_TEMP,
      789+    1659                            /* on if this is a temp (must build descriptor) */
      790+    1660                  3 S BIT(1) ALIGNED %INIT('0'B)%CHARTEXT('/**/'),
      791+    1661                  3 T BIT(1) ALIGNED %INIT('0'B)%CHARTEXT('/**/'),
      792+    1662                  3 AUX BIT(1) ALIGNED %INIT('0'B)%CHARTEXT('/**/'),
      793+    1663                2 IS_TEMP_A(0:2) REDEF IS_TEMP BIT(1) ALIGNED,
      794+    1664                2 OFFSET,
      795+    1665                            /* byte offsets */
      796+    1666                  3 S UBIN %INIT(0)%CHARTEXT('/**/'),
      797+    1667                  3 T UBIN %INIT(0)%CHARTEXT('/**/'),
      798+    1668                  3 AUX UBIN %INIT(0)%CHARTEXT('/**/'),
      799+    1669                2 OFFSET_A(0:2) REDEF OFFSET UBIN,
      800+    1670                2 OTTER_SPACE DALIGNED,
      801+    1671                            /* pointers to OTTER space */
      802+    1672                  3 S$ PTR %INIT(ADDR(NIL))%CHARTEXT('/**/'),
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:44   
      803+    1673                  3 T$ PTR %INIT(ADDR(NIL))%CHARTEXT('/**/'),
      804+    1674                  3 AUX$ PTR %INIT(ADDR(NIL))%CHARTEXT('/**/'),
      805+    1675                2 OTTER_SPACE_A$(0:2) REDEF OTTER_SPACE PTR,
      806+    1676                2 PICTURE_STRING DALIGNED,
      807+    1677                            /* pointers to PICture strings */
      808+    1678                  3 S$ PTR %INIT(ADDR(NIL))%CHARTEXT('/**/'),
      809+    1679                  3 T$ PTR %INIT(ADDR(NIL))%CHARTEXT('/**/'),
      810+    1680                  3 AUX$ PTR %INIT(ADDR(NIL))%CHARTEXT('/**/'),
      811+    1681                2 PICTURE_STRING_A$(0:2) REDEF PICTURE_STRING PTR,
      812+    1682                2 TYPE,
      813+    1683                            /* data types of operands */
      814+    1684                  3 S UBIN %INIT(0)%CHARTEXT('/**/'),
      815+    1685                  3 T UBIN %INIT(0)%CHARTEXT('/**/'),
      816+    1686                  3 AUX UBIN %INIT(0)%CHARTEXT('/**/'),
      817+    1687                2 TYPE_A(0:2) REDEF TYPE UBIN,
      818+    1688
      819+    1689                2 OP_CODE UBIN %INIT(0)%CHARTEXT('/**/'),
      820+    1690                            /* current op-code */
      821+    1691                2 A_REG SBIN %INIT(0)%CHARTEXT('/**/'),
      822+    1692                            /* A-register */
      823+    1693                2 SIZE_ERR UBIN %INIT(0)%CHARTEXT('/**/'),
      824+    1694                            /* If 1, a "SIZE ERROR" condition has occured */
      825+    1695                2 AT_END UBIN %INIT(0)%CHARTEXT('/**/'),
      826+    1696                            /* "AT END" flag */
      827+    1697                2 ACCUM(0:7) UBIN %INIT(0*0)%CHARTEXT('/**/'),
      828+    1698                            /* accumulator */
      829+    1699                2 DEC_ACC SBIN %INIT(0)%CHARTEXT('/**/'),
      830+    1700                            /* decimal position of accumulator */
      831+    1701                2 NO_DATA UBIN %INIT(0)%CHARTEXT('/**/'),
      832+    1702                            /* no-data indicator */
      833+    1703
      834+    1704                %QI$DAD ( NAME = MESSAGE_LINE_DAD,
      835+    1705                          STCLASS = STCLASS,
      836+    1706                          LVL = 2,
      837+    1707                          END_STRUCTURE = NO );
      838+    1708
      839+    1709                2 MESSAGE_LINE_GZ DALIGNED,
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:45   
      840+    1710                  3 HEADER$ PTR %INIT(ADDR(NIL))%CHARTEXT('/**/'),
      841+    1711                          /* Pointer to the QI$GZ_HEADER area corresponding to
      842+    1712                             the default MESSAGE LINE. */
      843+    1713                  3 START$ PTR %INIT(ADDR(NIL))%CHARTEXT('/**/'),
      844+    1714                          /* Pointer to the QI$GZ_FIELD area corresponding to
      845+    1715                             the default MESSAGE LINE. */
      846+    1716                  3 STOP$ PTR %INIT(ADDR(NIL))%CHARTEXT('/**/'),
      847+    1717                          /* Pointer to the QI$GZ_FIELD area corresponding to
      848+    1718                             the default MESSAGE LINE.  (Included for consistency.) */
      849+    1719
      850+    1720                2 GZ DALIGNED,
      851+    1721                  3 LAST_HEADER$ PTR %INIT(ADDR(NIL))%CHARTEXT('/**/'),
      852+    1722                            /* Pointer to the most recently allocated QI$GZ_HEADER
      853+    1723                               area (and therefore the "highest" in memory). */
      854+    1724                  3 AVAILABLE$ PTR %INIT(ADDR(NIL))%CHARTEXT('/**/'),
      855+    1725                            /* Pointer to the next available spot at which a
      856+    1726                               QI$GZ_HEADER area may reside. */
      857+    1727                  3 NEXT_AVAILABLE_FLDID UBIN %INIT(0)%CHARTEXT('/**/'),
      858+    1728                            /* Running count of FLDIDs:  they are allocated
      859+    1729                               in FRame-sized chunks by QBA$ACTIVATE, and
      860+    1730                               remain the property of a once-activated FRame,
      861+    1731                               even if/when it's DEACTIVATEd. */
      862+    1732
      863+    1733                2 FILE_HEAD DALIGNED,
      864+    1734                  3 FORM$ PTR %INIT(ADDR(NIL))%CHARTEXT('/**/'),
      865+    1735                            /* Pointer to head of currently opened
      866+    1736                               form FD chain. */
      867+    1737                  3 TRAN$ PTR %INIT(ADDR(NIL))%CHARTEXT('/**/'),
      868+    1738                            /* Pointer to head of currently opened
      869+    1739                               transaction FD chain. */
      870+    1740                2 FILE_HEAD_A$(0:%(QI#TYPE_TRANSACTION-QI#TYPE_FORM)) REDEF FILE_HEAD PTR,
      871+    1741
      872+    1742                2 OPENED_COUNT,
      873+    1743                  3 FORM UBIN %INIT(0)%CHARTEXT('/**/'),
      874+    1744                  3 TRAN UBIN %INIT(0)%CHARTEXT('/**/'),
      875+    1745            2 OPENED_COUNT_A(0:%(QI#TYPE_TRANSACTION-QI#TYPE_FORM)) REDEF OPENED_COUNT UBIN,
      876+    1746
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:46   
      877+    1747                2 CURRENT,
      878+    1748                  3 FILE$ PTR DALIGNED %INIT(ADDR(NIL))%CHARTEXT('/**/'),
      879+    1749                            /* pointer to currently working file */
      880+    1750                  3 FORM$ REDEF FILE$ PTR,
      881+    1751                            /* for when we know it's a form file */
      882+    1752                  3 TRAN$ REDEF FILE$ PTR,
      883+    1753                            /* for when we know it's a transaction file */
      884+    1754                  3 FILE_STATUS$ PTR DALIGNED %INIT(ADDR(NIL))%CHARTEXT('/**/'),
      885+    1755                            /* pointer to currently working file status area */
      886+    1756                  3 FORM_STATUS$ REDEF FILE_STATUS$ PTR,
      887+    1757                            /* for when we know it's a form file */
      888+    1758                  3 TRAN_STATUS$ REDEF FILE_STATUS$ PTR,
      889+    1759                            /* for when we know it's a transaction file */
      890+    1760                  3 FRAME$ PTR DALIGNED %INIT(ADDR(NIL))%CHARTEXT('/**/'),
      891+    1761                            /* pointer to currently working FRAME block */
      892+    1762                  3 FRAME_STATUS$ PTR DALIGNED %INIT(ADDR(NIL))%CHARTEXT('/**/'),
      893+    1763                            /* pointer to currently working FRAME scratch area */
      894+    1764                  3 FRAME_INDEX UBIN %INIT(0)%CHARTEXT('/**/'),
      895+    1765                            /* index into QI$FORM_FILE.FRAME_LIST_A@P
      896+    1766                               of QI_1.CURRENT.FRAME$ */
      897+    1767                  3 NODE$ PTR DALIGNED %INIT(ADDR(NIL))%CHARTEXT('/**/'),
      898+    1768                            /* pointer to currently working node block */
      899+    1769                  3 NODE_STATUS$ PTR DALIGNED %INIT(ADDR(NIL))%CHARTEXT('/**/'),
      900+    1770                            /* pointer to currently working node scratch area */
      901+    1771
      902+    1772                2 SPECIAL_NAMES DALIGNED,
      903+    1773                  3 CURRENT_FORM$ PTR %INIT(ADDR(NIL))%CHARTEXT('/**/'),
      904+    1774                            /* Pointer to data area of CURRENT-FORM variable. */
      905+    1775                  3 CURRENT_FRAME$ PTR %INIT(ADDR(NIL))%CHARTEXT('/**/'),
      906+    1776                            /* Pointer to data area of CURRENT-FRAME variable. */
      907+    1777                  3 CURRENT_FIELD$ PTR %INIT(ADDR(NIL))%CHARTEXT('/**/'),
      908+    1778                            /* Pointer to data area of CURRENT-FIELD variable. */
      909+    1779                  3 RETRY$ PTR DALIGNED %INIT(ADDR(NIL))%CHARTEXT('/**/'),
      910+    1780                            /* Pointer to data area of RETRY variable. */
      911+    1781                2 SPECIAL_NAMES_A$(0:3) REDEF SPECIAL_NAMES PTR,
      912+    1782                            /* For array references. */
      913+    1783
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:47   
      914+    1784                2 ERROR_STATUS UBIN %INIT(0)%CHARTEXT('/**/'),
      915+    1785                            /* binary value of error condition */
      916+    1786                2 USE_DEFAULT_IO UBIN %INIT(0)%CHARTEXT('/**/'),
      917+    1787                            /* for default USE procedures, this cell contains
      918+    1788                               INPUT or OUTPUT */
      919+    1789                2 DEFAULT_USE_PROCEDURE_A@P(0:2) UBIN %INIT(0*0)%CHARTEXT('/**/'),
      920+    1790                            /* default USE procedure address:  "0" means none */
      921+    1791                2 IS_DEFAULT_USE_PROC_ACTIVE_A(0:15) BIT(1) %INIT('0'B*0)%CHARTEXT('/**/'),
      922+    1792                            /* activation bits for corr default USE proc */
      923+    1793                2 USE_PROCEDURE@P UBIN %INIT(0)%CHARTEXT('/**/'),
      924+    1794                            /* displacement value dropped by QCU$USE
      925+    1795                               for QCU$USE_CALL to warp to */
      926+    1796                2 PREVIOUS_INTERFACE_START$ PTR %INIT(ADDR(NIL))%CHARTEXT('/**/'),
      927+    1797                            /* pointer to previous saved state/internal value s
      928+    1798                               for master interface */
      929+    1799                2 PREVIOUS_FIELD_START_INDEX UBIN %INIT(0)%CHARTEXT('/**/'),
      930+    1800                            /* index for previous interface table range */
      931+    1801                2 PREVIOUS_FIELD_STOP_INDEX UBIN %INIT(0)%CHARTEXT('/**/'),
      932+    1802                            /* index for previous interface table range */
      933+    1803                2 EXPAND(0:9) UBIN;
      934+    1804
      935+    1805            %END_MACRO;
      936+    1806
      937+    1807          %MEND;
      938+    1808
      939+    1809        %EJECT;
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:48   
      940+    1810
      941+    1811          %MACRO QI_SWORK ( STCLASS = "SYMREF",
      942+    1812                            NAME = QI_SWORK );
      943+    1813
      944+    1814            %BEGIN_MACRO ( STCLASS = STCLASS );
      945+    1815
      946+    1816          DCL 1 NAME(0:7) UBIN STCLASS %INIT(0*0)%CHARTEXT('/**/');
      947+    1817
      948+    1818            %END_MACRO;
      949+    1819
      950+    1820          %MEND;
      951+    1821
      952+    1822          %MACRO QI_SWORK_2 ( STCLASS = "SYMREF",
      953+    1823                              NAME = QI_SWORK_2 );
      954+    1824
      955+    1825            %BEGIN_MACRO ( STCLASS = STCLASS );
      956+    1826
      957+    1827          DCL 1 NAME(0:7) UBIN STCLASS %INIT(0*0)%CHARTEXT('/**/');
      958+    1828
      959+    1829            %END_MACRO;
      960+    1830
      961+    1831          %MEND;
      962+    1832
      963+    1833        %EJECT;
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:49   
      964+    1834
      965+    1835          %MACRO QI_BLANK ( STCLASS = "SYMREF",
      966+    1836                            NAME = QI_BLANK );
      967+    1837
      968+    1838            %BEGIN_MACRO ( STCLASS = STCLASS );
      969+    1839
      970+    1840          DCL NAME STCLASS UBIN BYTE ALIGNED %INIT(%QI#BLANK)%CHARTEXT('/**/');
      971+    1841
      972+    1842            %END_MACRO;
      973+    1843
      974+    1844          %MEND;
      975+    1845
      976+    1846        %EJECT;
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:50   
      977+    1847
      978+    1848          %MACRO QI_MAT_MATCH ( STCLASS = "SYMREF",
      979+    1849                                NAME = QI_MAT_MATCH );
      980+    1850
      981+    1851            %BEGIN_MACRO ( STCLASS = STCLASS );
      982+    1852
      983+    1853          DCL NAME STCLASS UBIN BYTE ALIGNED %INIT(%QI#MAT_MATCH)%CHARTEXT('/**/');
      984+    1854
      985+    1855            %END_MACRO;
      986+    1856
      987+    1857          %MEND;
      988+    1858
      989+    1859          %MACRO QI_MAT_NONMATCH ( STCLASS = "SYMREF",
      990+    1860                                   NAME = QI_MAT_NONMATCH );
      991+    1861
      992+    1862            %BEGIN_MACRO ( STCLASS = STCLASS );
      993+    1863
      994+    1864          DCL NAME STCLASS UBIN BYTE ALIGNED %INIT(%QI#MAT_NONMATCH)%CHARTEXT('/**/');
      995+    1865
      996+    1866            %END_MACRO;
      997+    1867
      998+    1868          %MEND;
      999+    1869
     1000+    1870        %EJECT;
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:51   
     1001+    1871
     1002+    1872          %MACRO QI_SLASH ( STCLASS = "SYMREF",
     1003+    1873                            NAME = QI_SLASH );
     1004+    1874
     1005+    1875            %BEGIN_MACRO ( STCLASS = STCLASS );
     1006+    1876
     1007+    1877          DCL NAME STCLASS UBIN BYTE ALIGNED %INIT(%QI#SLASH)%CHARTEXT('/**/');
     1008+    1878
     1009+    1879            %END_MACRO;
     1010+    1880
     1011+    1881          %MEND;
     1012+    1882
     1013+    1883        %EJECT;
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:52   
     1014+    1884
     1015+    1885          %MACRO QI_ZERO ( STCLASS = "SYMREF",
     1016+    1886                           NAME = QI_ZERO );
     1017+    1887
     1018+    1888            %BEGIN_MACRO ( STCLASS = STCLASS );
     1019+    1889
     1020+    1890          DCL NAME STCLASS UBIN BYTE ALIGNED %INIT(%QI#ZERO)%CHARTEXT('/**/');
     1021+    1891
     1022+    1892            %END_MACRO;
     1023+    1893
     1024+    1894          %MEND;
     1025+    1895
     1026+    1896          %MACRO QI_BINARY_ZERO ( STCLASS = "SYMREF",
     1027+    1897                                  NAME = QI_BINARY_ZERO );
     1028+    1898
     1029+    1899            %BEGIN_MACRO ( STCLASS = STCLASS );
     1030+    1900
     1031+    1901          DCL NAME STCLASS UBIN BYTE ALIGNED %INIT(%QI#BINARY_ZERO)%CHARTEXT('/**/');
     1032+    1902
     1033+    1903            %END_MACRO;
     1034+    1904
     1035+    1905          %MEND;
     1036+    1906
     1037+    1907        %EJECT;
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:53   
     1038+    1908
     1039+    1909          %MACRO QI_CLASS_ALPHA ( STCLASS = "SYMREF",
     1040+    1910                                  NAME = QI_CLASS_ALPHA );
     1041+    1911
     1042+    1912            %BEGIN_MACRO ( STCLASS = STCLASS );
     1043+    1913
     1044+    1914          DCL NAME(0:255) STCLASS UBIN BYTE UNAL %INIT(
     1045+    1915              0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
     1046+    1916              1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
     1047+    1917              0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,
     1048+    1918              0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
     1049+    1919              0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
     1050+    1920              0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
     1051+    1921              0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
     1052+    1922              0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
     1053+    1923                                                      )%CHARTEXT('/**/');
     1054+    1924
     1055+    1925            %END_MACRO;
     1056+    1926
     1057+    1927          %MEND;
     1058+    1928
     1059+    1929        %EJECT;
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:54   
     1060+    1930
     1061+    1931          %MACRO QI_CLASS_NUMERIC ( STCLASS = "SYMREF",
     1062+    1932                                    NAME = QI_CLASS_NUMERIC );
     1063+    1933
     1064+    1934            %BEGIN_MACRO ( STCLASS = STCLASS );
     1065+    1935
     1066+    1936          DCL NAME(0:255) STCLASS UBIN BYTE UNAL %INIT(
     1067+    1937              0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
     1068+    1938              0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,
     1069+    1939              0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
     1070+    1940              0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
     1071+    1941              0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
     1072+    1942              0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
     1073+    1943              0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
     1074+    1944              0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
     1075+    1945                                                      )%CHARTEXT('/**/');
     1076+    1946
     1077+    1947            %END_MACRO;
     1078+    1948
     1079+    1949          %MEND;
     1080+    1950
     1081+    1951        %EJECT;
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:55   
     1082+    1952
     1083+    1953          %MACRO QI_OVERPUNCHED_SIGNS ( STCLASS = "SYMREF",
     1084+    1954                                        NAME = QI_OVERPUNCHED_SIGNS );
     1085+    1955
     1086+    1956            %BEGIN_MACRO ( STCLASS = STCLASS );
     1087+    1957
     1088+    1958          DCL NAME(0:19) STCLASS UBIN BYTE UNAL %INIT(
     1089+    1959              %ASCBIN('{'),%ASCBIN('A'),%ASCBIN('B'),%ASCBIN('C'),
     1090+    1960              %ASCBIN('D'),%ASCBIN('E'),%ASCBIN('F'),%ASCBIN('G'),
     1091+    1961              %ASCBIN('H'),%ASCBIN('I'),%ASCBIN('}'),%ASCBIN('J'),
     1092+    1962              %ASCBIN('K'),%ASCBIN('L'),%ASCBIN('M'),%ASCBIN('N'),
     1093+    1963              %ASCBIN('O'),%ASCBIN('P'),%ASCBIN('Q'),%ASCBIN('R')
     1094+    1964                                                      )%CHARTEXT('/**/');
     1095+    1965
     1096+    1966            %END_MACRO;
     1097+    1967
     1098+    1968          %MEND;
     1099+    1969
     1100+    1970        %EJECT;
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:56   
     1101+    1971
     1102+    1972          %MACRO QI_ZERO_ACCUMULATOR ( STCLASS = "SYMREF",
     1103+    1973                                       NAME = QI_ZERO_ACCUMULATOR );
     1104+    1974
     1105+    1975            %BEGIN_MACRO ( STCLASS = STCLASS );
     1106+    1976
     1107+    1977          DCL 1 NAME STCLASS,
     1108+    1978                2 *(0:6) UBIN %INIT(0*0)%CHARTEXT('/**/'),
     1109+    1979                2 * BIT(16) %INIT('00B0'X)%CHARTEXT('/**/');
     1110+    1980
     1111+    1981            %END_MACRO;
     1112+    1982
     1113+    1983          %MEND;
     1114+    1984
     1115+    1985        %EJECT;
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:57   
     1116+    1986        /*
     1117+    1987                               %%%%%%%  %%
     1118+    1988                                  %%    %%
     1119+    1989                                  %%    %% %%%    %%%%%
     1120+    1990                                  %%    %%%  %%  %%   %%
     1121+    1991                                  %%    %%   %%  %%%%%%%
     1122+    1992                                  %%    %%   %%  %%
     1123+    1993                                  %%    %%   %%   %%%%%
     1124+    1994
     1125+    1995                               %%%%%%%  %%%%%%   %%
     1126+    1996                               %%       %%   %%  %%
     1127+    1997                               %%       %%   %%  %%
     1128+    1998                               %%%%%    %%%%%%   %%
     1129+    1999                               %%       %%       %%
     1130+    2000                               %%       %%       %%
     1131+    2001                               %%       %%       %%%%%%%
     1132+    2002
     1133+    2003             %% %%%   %% %%%%   %%%%%    %%% %%  %% %%%%   %%% %%  %%% %%
     1134+    2004             %%%  %%  %%%%     %%   %%  %%  %%%  %%%%     %%  %%%  %% % %%
     1135+    2005             %%%  %%  %%%      %%   %%  %%  %%%  %%%      %%  %%%  %% % %%
     1136+    2006             %%%  %%  %%       %%   %%  %%  %%%  %%       %%  %%%  %% % %%
     1137+    2007             %% %%%   %%        %%%%%    %%% %%  %%        %%% %%  %% % %%
     1138+    2008             %%                              %%
     1139+    2009             %%                          %%%%%
     1140+    2010                                                                            */
     1141+    2011        /*D* NAME:         FPL_PROGRAM_STRUCTURE
     1142+    2012             PURPOSE:      To provide the MACROs which frame compiler-
     1143+    2013                           generated structures within the user's FPL
     1144+    2014                           program.
     1145+    2015             DESCRIPTION:  Below are MACROs whose invocation will
     1146+    2016                           cause generation of structures which frame
     1147+    2017                           the FPL program itself:
     1148+    2018                           1)  the opcode-operand sequences for runtime
     1149+    2019                               instructions;
     1150+    2020                           2)  static data (in user procedure) which
     1151+    2021                               define the attributes of FILEs, FRames,
     1152+    2022                               WORKING-STORAGE data, etc.;
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:58   
     1153+    2023                           3)  static data (in user data) which define
     1154+    2024                               the runtime status, or scratch, area,
     1155+    2025                               used to keep track of current operations
     1156+    2026                               on the item addressed (FILE, FRame, etc.).
     1157+    2027        */
     1158+    2028
     1159+    2029        %EJECT;
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:59   
     1160+    2030        /*
     1161+    2031                                                               %%
     1162+    2032                                                               %%
     1163+    2033              %%%%%   %% %%%             %%%%%%   %%%%%    %%% %%   %%%%%
     1164+    2034             %%   %%  %%%  %%  %%%%%%%  %%       %%   %%  %%  %%%  %%   %%
     1165+    2035             %%   %%  %%%  %%           %%       %%   %%  %%  %%%  %%%%%%%
     1166+    2036             %%   %%  %%%  %%           %%       %%   %%  %%  %%%  %%
     1167+    2037              %%%%%   %% %%%             %%%%%%   %%%%%    %%% %%   %%%%%
     1168+    2038                      %%
     1169+    2039                      %%
     1170+    2040                                                   %%%
     1171+    2041                                                   %%%
     1172+    2042                       %%%%%%   %%%%%    %%% %%     %%     %%%%%%
     1173+    2043                      %%       %%   %%  %%  %%%    %%     %%
     1174+    2044                       %%%%%   %%%%%%%  %%  %%%            %%%%%
     1175+    2045                           %%  %%       %%  %%%                %%
     1176+    2046                      %%%%%%    %%%%%    %%% %%           %%%%%%
     1177+    2047                                             %%
     1178+    2048                                             %%
     1179+    2049                                                                            */
     1180+    2050
     1181+    2051        /*
     1182+    2052                 Basic op-code sequence
     1183+    2053        */
     1184+    2054          %MACRO QI$OP_SEQUENCE ( STCLASS = "BASED",
     1185+    2055                           NAME = QI$OP_SEQUENCE );
     1186+    2056
     1187+    2057            %BEGIN_MACRO ( STCLASS = STCLASS );
     1188+    2058
     1189+    2059          DCL 1 NAME STCLASS ALIGNED,
     1190+    2060                2 CODE UBIN,
     1191+    2061                          /* Op-code. */
     1192+    2062                2 OPERAND_A@P(0:0) UBIN;
     1193+    2063                          /* Operands:  generally a list of DADs. */
     1194+    2064
     1195+    2065            %END_MACRO;
     1196+    2066
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:60   
     1197+    2067          %MEND;
     1198+    2068
     1199+    2069        %EJECT;
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:61   
     1200+    2070        /*
     1201+    2071            Op-code sequence for ABORT [ "literal" | dataname ] verb.
     1202+    2072        */
     1203+    2073          %MACRO QI$OP_ABORT ( STCLASS = "BASED",
     1204+    2074                               NAME = QI$OP_ABORT );
     1205+    2075
     1206+    2076            %BEGIN_MACRO ( STCLASS = STCLASS );
     1207+    2077
     1208+    2078          DCL 1 NAME STCLASS ALIGNED,
     1209+    2079                2 CODE UBIN,
     1210+    2080                2 OPERAND@P UBIN,
     1211+    2081                2 NEXT_CODE@P UBIN;
     1212+    2082
     1213+    2083            %END_MACRO;
     1214+    2084
     1215+    2085          %MEND;
     1216+    2086
     1217+    2087        /*
     1218+    2088            Op-code sequence for ACCEPT verb.
     1219+    2089        */
     1220+    2090          %MACRO QI$OP_ACCEPT ( STCLASS = "BASED",
     1221+    2091                                NAME = QI$OP_ACCEPT );
     1222+    2092
     1223+    2093            %BEGIN_MACRO ( STCLASS = STCLASS );
     1224+    2094
     1225+    2095          DCL 1 NAME STCLASS ALIGNED,
     1226+    2096                2 CODE UBIN,
     1227+    2097                2 TYPE UBIN(3) UNAL,
     1228+    2098                2 FIELD_COUNT UBIN(13) UNAL,
     1229+    2099                2 DATANAME@P UBIN,
     1230+    2100                2 FIELD_A@P(0:0) REDEF DATANAME@P UBIN,
     1231+    2101                2 NEXT_CODE@P UBIN;
     1232+    2102
     1233+    2103            %END_MACRO;
     1234+    2104
     1235+    2105          %MEND;
     1236+    2106
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:62   
     1237+    2107        /*
     1238+    2108            Op-code sequence for ACTIVATE verb.
     1239+    2109        */
     1240+    2110          %MACRO QI$OP_ACTIVATE ( STCLASS = "BASED",
     1241+    2111                                  NAME = QI$OP_ACTIVATE );
     1242+    2112
     1243+    2113            %BEGIN_MACRO ( STCLASS = STCLASS );
     1244+    2114
     1245+    2115          DCL 1 NAME STCLASS ALIGNED,
     1246+    2116                2 CODE UBIN,
     1247+    2117                2 OPERAND_COUNT UBIN,
     1248+    2118                2 OPERAND_A@P(0:0) UBIN;
     1249+    2119
     1250+    2120            %END_MACRO;
     1251+    2121
     1252+    2122          %MEND;
     1253+    2123
     1254+    2124        /*
     1255+    2125            Op-code sequence for ADD operation.
     1256+    2126        */
     1257+    2127          %MACRO QI$OP_ADD ( STCLASS = "BASED",
     1258+    2128                             NAME = QI$OP_ADD );
     1259+    2129
     1260+    2130            %BEGIN_MACRO ( STCLASS = STCLASS );
     1261+    2131
     1262+    2132          DCL 1 NAME STCLASS ALIGNED,
     1263+    2133                2 CODE UBIN,
     1264+    2134                2 NUMERIC_SOURCE@P UBIN,
     1265+    2135                2 NUMERIC_TARGET@P UBIN,
     1266+    2136                2 NEXT_CODE@P UBIN;
     1267+    2137
     1268+    2138            %END_MACRO;
     1269+    2139
     1270+    2140          %MEND;
     1271+    2141
     1272+    2142        /*
     1273+    2143            Op-code sequence for ADDing a group of arguments.
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:63   
     1274+    2144        */
     1275+    2145          %MACRO QI$OP_ADDX ( STCLASS = "BASED",
     1276+    2146                              NAME = QI$OP_ADDX );
     1277+    2147
     1278+    2148            %BEGIN_MACRO ( STCLASS = STCLASS );
     1279+    2149
     1280+    2150          DCL 1 NAME STCLASS ALIGNED,
     1281+    2151                2 CODE UBIN,
     1282+    2152                2 ARGUMENT_COUNT UBIN,
     1283+    2153                2 ARGUMENT_A@P(0:0) UBIN;
     1284+    2154
     1285+    2155            %END_MACRO;
     1286+    2156
     1287+    2157          %MEND;
     1288+    2158
     1289+    2159        /*
     1290+    2160            Op-code sequence for ALL "literal" to 'temp' DISPLAY operation.
     1291+    2161        */
     1292+    2162          %MACRO QI$OP_ALL_LITERAL ( STCLASS = "BASED",
     1293+    2163                                     NAME = QI$OP_ALL_LITERAL );
     1294+    2164
     1295+    2165            %BEGIN_MACRO ( STCLASS = STCLASS );
     1296+    2166
     1297+    2167          DCL 1 NAME STCLASS ALIGNED,
     1298+    2168                2 CODE UBIN,
     1299+    2169                2 ALL_LITERAL_SOURCE@P UBIN,
     1300+    2170                2 TEMP_DISPLAY_TARGET@P UBIN,
     1301+    2171                2 NEXT_CODE@P UBIN;
     1302+    2172
     1303+    2173            %END_MACRO;
     1304+    2174
     1305+    2175          %MEND;
     1306+    2176
     1307+    2177        /*
     1308+    2178            Op-code sequence for APPLY verb.
     1309+    2179        */
     1310+    2180          %MACRO QI$OP_APPLY ( STCLASS = "BASED",
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:64   
     1311+    2181                               NAME = QI$OP_APPLY );
     1312+    2182
     1313+    2183            %BEGIN_MACRO ( STCLASS = STCLASS );
     1314+    2184
     1315+    2185          DCL 1 NAME STCLASS ALIGNED,
     1316+    2186                2 CODE UBIN,
     1317+    2187                2 VISUAL_ATTRIBUTE UBIN,
     1318+    2188                2 OPERAND_COUNT UBIN,
     1319+    2189                2 OPERAND_A@P(0:0) UBIN;
     1320+    2190
     1321+    2191            %END_MACRO;
     1322+    2192
     1323+    2193          %MEND;
     1324+    2194
     1325+    2195        /*
     1326+    2196            Op-code sequence for CALL verb.
     1327+    2197        */
     1328+    2198          %MACRO QI$OP_CALL ( STCLASS = "BASED",
     1329+    2199                              NAME = QI$OP_CALL );
     1330+    2200
     1331+    2201            %BEGIN_MACRO ( STCLASS = STCLASS );
     1332+    2202
     1333+    2203          DCL 1 NAME STCLASS ALIGNED,
     1334+    2204                2 CODE UBIN,
     1335+    2205                2 EPTR$ EPTR,
     1336+    2206                2 PTR$ REDEF EPTR$ PTR,
     1337+    2207                2 DESCRIPTOR_LIST,
     1338+    2208                  3 ARGUMENT_COUNT UBIN(8) UNAL,
     1339+    2209                  3 DESCRIPTOR_COUNT UBIN(8) UNAL,
     1340+    2210                2 ARGUMENT_A@P(0:0) UBIN;
     1341+    2211
     1342+    2212            %END_MACRO;
     1343+    2213
     1344+    2214          %MEND;
     1345+    2215
     1346+    2216        /*
     1347+    2217            Op-code sequence for CLEAR verb.
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:65   
     1348+    2218        */
     1349+    2219          %MACRO QI$OP_CLEAR ( STCLASS = "BASED",
     1350+    2220                               NAME = QI$OP_CLEAR );
     1351+    2221
     1352+    2222            %BEGIN_MACRO ( STCLASS = STCLASS );
     1353+    2223
     1354+    2224          DCL 1 NAME STCLASS ALIGNED,
     1355+    2225                2 CODE UBIN,
     1356+    2226                2 IS_CLEAR_ALL BIT(1) UNAL,
     1357+    2227                2 IO_FLAGS,
     1358+    2228                  3 IS_OUTPUT BIT(1) UNAL,
     1359+    2229                  3 IS_INPUT BIT(1) UNAL,
     1360+    2230                2 IO_VALUE REDEF IO_FLAGS UBIN(2) UNAL,
     1361+    2231                2 OPERAND_COUNT UBIN(13) UNAL,
     1362+    2232                2 OPERAND_A@P(0:0) UBIN;
     1363+    2233
     1364+    2234            %END_MACRO;
     1365+    2235
     1366+    2236          %MEND;
     1367+    2237
     1368+    2238        /*
     1369+    2239            Op-code sequence for CLOSE verb.
     1370+    2240        */
     1371+    2241          %MACRO QI$OP_CLOSE ( STCLASS = "BASED",
     1372+    2242                               NAME = QI$OP_CLOSE );
     1373+    2243
     1374+    2244            %BEGIN_MACRO ( STCLASS = STCLASS );
     1375+    2245
     1376+    2246          DCL 1 NAME STCLASS ALIGNED,
     1377+    2247                2 CODE UBIN,
     1378+    2248                2 FILE_COUNT UBIN,
     1379+    2249                2 OPERAND_A(0:0),
     1380+    2250                  3 FUNNY_ZERO_WORD UBIN,
     1381+    2251                  3 FILE@P UBIN;
     1382+    2252
     1383+    2253            %END_MACRO;
     1384+    2254
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:66   
     1385+    2255          %MEND;
     1386+    2256
     1387+    2257        /*
     1388+    2258            Op-code sequence for 'temp' BINARY to BINARY conversion.
     1389+    2259        */
     1390+    2260          %MACRO QI$OP_CNVBBX ( STCLASS = "BASED",
     1391+    2261                                NAME = QI$OP_CNVBBX );
     1392+    2262
     1393+    2263            %BEGIN_MACRO ( STCLASS = STCLASS );
     1394+    2264
     1395+    2265          DCL 1 NAME STCLASS ALIGNED,
     1396+    2266                2 CODE UBIN,
     1397+    2267                2 TEMP_BINARY_SOURCE@P UBIN,
     1398+    2268                2 BINARY_TARGET@P UBIN,
     1399+    2269                2 NEXT_CODE@P UBIN;
     1400+    2270
     1401+    2271            %END_MACRO;
     1402+    2272
     1403+    2273          %MEND;
     1404+    2274
     1405+    2275        /*
     1406+    2276            Op-code sequence for BINARY to 'temp' DISPLAY conversion.
     1407+    2277        */
     1408+    2278          %MACRO QI$OP_CNVBN ( STCLASS = "BASED",
     1409+    2279                               NAME = QI$OP_CNVBN );
     1410+    2280
     1411+    2281            %BEGIN_MACRO ( STCLASS = STCLASS );
     1412+    2282
     1413+    2283          DCL 1 NAME STCLASS ALIGNED,
     1414+    2284                2 CODE UBIN,
     1415+    2285                2 BINARY_SOURCE@P UBIN,
     1416+    2286                2 TEMP_DISPLAY_TARGET@P UBIN,
     1417+    2287                2 NEXT_CODE@P UBIN;
     1418+    2288
     1419+    2289            %END_MACRO;
     1420+    2290
     1421+    2291          %MEND;
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:67   
     1422+    2292
     1423+    2293        /*
     1424+    2294            Op-code sequence for 'temp' BINARY to DISPLAY conversion.
     1425+    2295        */
     1426+    2296          %MACRO QI$OP_CNVBNX ( STCLASS = "BASED",
     1427+    2297                                NAME = QI$OP_CNVBNX );
     1428+    2298
     1429+    2299            %BEGIN_MACRO ( STCLASS = STCLASS );
     1430+    2300
     1431+    2301          DCL 1 NAME STCLASS ALIGNED,
     1432+    2302                2 CODE UBIN,
     1433+    2303                2 TEMP_BINARY_SOURCE@P UBIN,
     1434+    2304                2 DISPLAY_TARGET@P UBIN,
     1435+    2305                2 NEXT_CODE@P UBIN;
     1436+    2306
     1437+    2307            %END_MACRO;
     1438+    2308
     1439+    2309          %MEND;
     1440+    2310
     1441+    2311        /*
     1442+    2312            Op-code sequence for 'temp' BINARY to PACKED conversion.
     1443+    2313        */
     1444+    2314          %MACRO QI$OP_CNVBPX ( STCLASS = "BASED",
     1445+    2315                                NAME = QI$OP_CNVBPX );
     1446+    2316
     1447+    2317            %BEGIN_MACRO ( STCLASS = STCLASS );
     1448+    2318
     1449+    2319          DCL 1 NAME STCLASS ALIGNED,
     1450+    2320                2 CODE UBIN,
     1451+    2321                2 TEMP_BINARY_SOURCE@P UBIN,
     1452+    2322                2 PACKED_TARGET@P UBIN,
     1453+    2323                2 NEXT_CODE@P UBIN;
     1454+    2324
     1455+    2325            %END_MACRO;
     1456+    2326
     1457+    2327          %MEND;
     1458+    2328
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:68   
     1459+    2329        /*
     1460+    2330            Op-code sequence for DISPLAY to 'temp' BINARY conversion.
     1461+    2331        */
     1462+    2332          %MACRO QI$OP_CNVNBT ( STCLASS = "BASED",
     1463+    2333                                NAME = QI$OP_CNVNBT );
     1464+    2334
     1465+    2335            %BEGIN_MACRO ( STCLASS = STCLASS );
     1466+    2336
     1467+    2337          DCL 1 NAME STCLASS ALIGNED,
     1468+    2338                2 CODE UBIN,
     1469+    2339                2 DISPLAY_SOURCE@P UBIN,
     1470+    2340                2 TEMP_BINARY_TARGET@P UBIN,
     1471+    2341                2 NEXT_CODE@P UBIN;
     1472+    2342
     1473+    2343            %END_MACRO;
     1474+    2344
     1475+    2345          %MEND;
     1476+    2346
     1477+    2347        /*
     1478+    2348            Op-code sequence for PACKED to 'temp' BINARY conversion.
     1479+    2349        */
     1480+    2350          %MACRO QI$OP_CNVPBT ( STCLASS = "BASED",
     1481+    2351                                NAME = QI$OP_CNVPBT );
     1482+    2352
     1483+    2353            %BEGIN_MACRO ( STCLASS = STCLASS );
     1484+    2354
     1485+    2355          DCL 1 NAME STCLASS ALIGNED,
     1486+    2356                2 CODE UBIN,
     1487+    2357                2 PACKED_SOURCE@P UBIN,
     1488+    2358                2 TEMP_BINARY_TARGET@P UBIN,
     1489+    2359                2 NEXT_CODE@P UBIN;
     1490+    2360
     1491+    2361            %END_MACRO;
     1492+    2362
     1493+    2363          %MEND;
     1494+    2364
     1495+    2365        /*
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:69   
     1496+    2366            Op-code sequence for PACKED to 'temp' DISPLAY conversion.
     1497+    2367        */
     1498+    2368          %MACRO QI$OP_CNVPN ( STCLASS = "BASED",
     1499+    2369                                NAME = QI$OP_CNVPN );
     1500+    2370
     1501+    2371            %BEGIN_MACRO ( STCLASS = STCLASS );
     1502+    2372
     1503+    2373          DCL 1 NAME STCLASS ALIGNED,
     1504+    2374                2 CODE UBIN,
     1505+    2375                2 PACKED_SOURCE@P UBIN,
     1506+    2376                2 TEMP_DISPLAY_TARGET@P UBIN,
     1507+    2377                2 NEXT_CODE@P UBIN;
     1508+    2378
     1509+    2379            %END_MACRO;
     1510+    2380
     1511+    2381          %MEND;
     1512+    2382
     1513+    2383        /*
     1514+    2384            Op-code sequence for DISPLAY verb.
     1515+    2385        */
     1516+    2386          %MACRO QI$OP_DISPLAY ( STCLASS = "BASED",
     1517+    2387                                 NAME = QI$OP_DISPLAY );
     1518+    2388
     1519+    2389            %BEGIN_MACRO ( STCLASS = STCLASS );
     1520+    2390
     1521+    2391          DCL 1 NAME STCLASS ALIGNED,
     1522+    2392                2 CODE UBIN,
     1523+    2393                2 TYPE UBIN(3) UNAL,
     1524+    2394                2 FIELD_COUNT UBIN(13) UNAL,
     1525+    2395                2 FIELD_A@P(0:0) UBIN,
     1526+    2396                2 NEXT_CODE@P REDEF FIELD_A@P UBIN;
     1527+    2397
     1528+    2398            %END_MACRO;
     1529+    2399
     1530+    2400          %MEND;
     1531+    2401
     1532+    2402        /*
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:70   
     1533+    2403            Op-code sequence for DIVide operation.
     1534+    2404        */
     1535+    2405          %MACRO QI$OP_DIV ( STCLASS = "BASED",
     1536+    2406                             NAME = QI$OP_DIV );
     1537+    2407
     1538+    2408            %BEGIN_MACRO ( STCLASS = STCLASS );
     1539+    2409
     1540+    2410          DCL 1 NAME STCLASS ALIGNED,
     1541+    2411                2 CODE UBIN,
     1542+    2412                2 DIVISOR@P UBIN,
     1543+    2413                2 DIVIDEND_AND_QUOTIENT@P UBIN,
     1544+    2414                2 NEXT_CODE@P UBIN;
     1545+    2415
     1546+    2416            %END_MACRO;
     1547+    2417
     1548+    2418          %MEND;
     1549+    2419
     1550+    2420        /*
     1551+    2421            Op-code sequence for DIViding two arguments and placing the
     1552+    2422            result into the accumulator.
     1553+    2423        */
     1554+    2424          %MACRO QI$OP_DIVX ( STCLASS = "BASED",
     1555+    2425                              NAME = QI$OP_DIVX );
     1556+    2426
     1557+    2427            %BEGIN_MACRO ( STCLASS = STCLASS );
     1558+    2428
     1559+    2429          DCL 1 NAME STCLASS ALIGNED,
     1560+    2430                2 CODE UBIN,
     1561+    2431                2 DIVISOR@P UBIN,
     1562+    2432                2 DIVIDEND@P UBIN,
     1563+    2433                2 NEXT_CODE@P UBIN;
     1564+    2434
     1565+    2435            %END_MACRO;
     1566+    2436
     1567+    2437          %MEND;
     1568+    2438
     1569+    2439        /*
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:71   
     1570+    2440           Op-code sequence for ENABLE verb.
     1571+    2441        */
     1572+    2442          %MACRO QI$OP_ENABLE ( STCLASS = "BASED",
     1573+    2443                                NAME = QI$OP_ENABLE );
     1574+    2444
     1575+    2445            %BEGIN_MACRO ( STCLASS = STCLASS );
     1576+    2446
     1577+    2447          DCL 1 NAME STCLASS ALIGNED,
     1578+    2448                2 CODE UBIN,
     1579+    2449                2 * UBIN(1) UNAL,
     1580+    2450                2 IO_FLAGS,
     1581+    2451                  3 IS_OUTPUT BIT(1) UNAL,
     1582+    2452                  3 IS_INPUT BIT(1) UNAL,
     1583+    2453                2 IO_VALUE REDEF IO_FLAGS UBIN(2) UNAL,
     1584+    2454                2 OPERAND_COUNT UBIN(13) UNAL,
     1585+    2455                2 OPERAND_A@P(0:0) UBIN;
     1586+    2456
     1587+    2457            %END_MACRO;
     1588+    2458
     1589+    2459          %MEND;
     1590+    2460
     1591+    2461        /*
     1592+    2462           Op-code sequence for GO TO transfer of control verb.
     1593+    2463        */
     1594+    2464          %MACRO QI$OP_GOTO ( STCLASS = "BASED",
     1595+    2465                              NAME = QI$OP_GOTO );
     1596+    2466
     1597+    2467            %BEGIN_MACRO ( STCLASS = STCLASS );
     1598+    2468
     1599+    2469          DCL 1 NAME STCLASS ALIGNED,
     1600+    2470                2 CODE UBIN,
     1601+    2471                2 GOTO@P UBIN,
     1602+    2472                2 NEXT_CODE@P UBIN;
     1603+    2473
     1604+    2474            %END_MACRO;
     1605+    2475
     1606+    2476          %MEND;
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:72   
     1607+    2477
     1608+    2478        /*
     1609+    2479            Op-code sequence for GO TO DEPENDING ON transfer of control verb.
     1610+    2480        */
     1611+    2481          %MACRO QI$OP_GOTODP ( STCLASS = "BASED",
     1612+    2482                                NAME = QI$OP_GOTODP );
     1613+    2483
     1614+    2484            %BEGIN_MACRO ( STCLASS = STCLASS );
     1615+    2485
     1616+    2486          DCL 1 NAME STCLASS ALIGNED,
     1617+    2487                2 CODE UBIN,
     1618+    2488                2 GOTO_INDEX@P UBIN,
     1619+    2489                2 PROCEDURE_NAME_COUNT UBIN,
     1620+    2490                2 PROCEDURE_NAME_A@P(0:0) UBIN;
     1621+    2491
     1622+    2492            %END_MACRO;
     1623+    2493
     1624+    2494          %MEND;
     1625+    2495
     1626+    2496        /*
     1627+    2497            Op-code sequence for IF CLASS transfer of control verb.
     1628+    2498        */
     1629+    2499          %MACRO QI$OP_IFCLS ( STCLASS = "BASED",
     1630+    2500                               NAME = QI$OP_IFCLS );
     1631+    2501
     1632+    2502            %BEGIN_MACRO ( STCLASS = STCLASS );
     1633+    2503
     1634+    2504          DCL 1 NAME STCLASS ALIGNED,
     1635+    2505                2 CODE UBIN,
     1636+    2506                2 SOURCE@P UBIN,
     1637+    2507                2 ATTRIBUTE,
     1638+    2508                  3 * UBIN(11) UNAL,
     1639+    2509                  3 IS_NOT BIT(1) UNAL,
     1640+    2510                  3 TYPE,
     1641+    2511                    4 IS_ALPHA BIT(1) UNAL,
     1642+    2512                    4 IS_NUMERIC BIT(1) UNAL,
     1643+    2513                    4 IS_DIGITS BIT(1) UNAL,
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:73   
     1644+    2514                    4 * UBIN(1) UNAL,
     1645+    2515                  3 TYPES REDEF TYPE UBIN(4) UNAL,
     1646+    2516                2 FALSE_CONDITION@P UBIN,
     1647+    2517                2 NEXT_CODE@P UBIN;
     1648+    2518
     1649+    2519            %END_MACRO;
     1650+    2520
     1651+    2521          %MEND;
     1652+    2522
     1653+    2523        /*
     1654+    2524            Op-code sequence for IF CONDITIONAL ALPHA tranfer of control verb.
     1655+    2525        */
     1656+    2526          %MACRO QI$OP_IFCNDA ( STCLASS = "BASED",
     1657+    2527                                NAME = QI$OP_IFCNDA );
     1658+    2528
     1659+    2529            %BEGIN_MACRO ( STCLASS = STCLASS );
     1660+    2530
     1661+    2531          DCL 1 NAME STCLASS ALIGNED,
     1662+    2532                2 CODE UBIN,
     1663+    2533                2 ALPHANUMERIC_SOURCE@P UBIN,
     1664+    2534                2 CONDITION_CONTROL_BLOCK@P UBIN,
     1665+    2535                2 ATTRIBUTE,
     1666+    2536                  3 * UBIN(11) UNAL,
     1667+    2537                  3 IS_NOT BIT(1) UNAL,
     1668+    2538                  3 * UBIN(4) UNAL,
     1669+    2539                2 FALSE_CONDITION@P UBIN,
     1670+    2540                2 NEXT_CODE@P UBIN;
     1671+    2541
     1672+    2542            %END_MACRO;
     1673+    2543
     1674+    2544          %MEND;
     1675+    2545
     1676+    2546        /*
     1677+    2547            Op-code sequence for IF CONDITIONAL NUMERIC transfer of control
     1678+    2548            verb.
     1679+    2549        */
     1680+    2550          %MACRO QI$OP_IFCNDN ( STCLASS = "BASED",
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:74   
     1681+    2551                                NAME = QI$OP_IFCNDN );
     1682+    2552
     1683+    2553            %BEGIN_MACRO ( STCLASS = STCLASS );
     1684+    2554
     1685+    2555          DCL 1 NAME STCLASS ALIGNED,
     1686+    2556                2 CODE UBIN,
     1687+    2557                2 NUMERIC_SOURCE@P UBIN,
     1688+    2558                2 CONDITION_CONTROL_BLOCK@P UBIN,
     1689+    2559                2 ATTRIBUTE,
     1690+    2560                  3 * UBIN(11) UNAL,
     1691+    2561                  3 IS_NOT BIT(1) UNAL,
     1692+    2562                  3 * UBIN(4) UNAL,
     1693+    2563                2 FALSE_CONDITION@P UBIN,
     1694+    2564                2 NEXT_CODE@P UBIN;
     1695+    2565
     1696+    2566            %END_MACRO;
     1697+    2567
     1698+    2568          %MEND;
     1699+    2569
     1700+    2570        /*
     1701+    2571            Op-code sequence for IF frame-or-field-status
     1702+    2572            IF framename ACTIVE
     1703+    2573            IF fieldname ENABLED FOR { INPUT | OUTPUT | I-O }
     1704+    2574            IF fieldname { AVAILABLE | PRESENTED }
     1705+    2575        */
     1706+    2576          %MACRO QI$OP_IFINDR ( STCLASS = "BASED",
     1707+    2577                                NAME = QI$OP_IFINDR );
     1708+    2578
     1709+    2579            %BEGIN_MACRO ( STCLASS = STCLASS );
     1710+    2580
     1711+    2581          DCL 1 NAME STCLASS ALIGNED,
     1712+    2582                2 CODE UBIN,
     1713+    2583                2 FRAME_OR_FIELD@P UBIN,
     1714+    2584                2 ATTRIBUTE,
     1715+    2585                  3 * UBIN(11) UNAL,
     1716+    2586                  3 IS_NOT BIT(1) UNAL,
     1717+    2587                  3 STATUS_TYPE UBIN(4) UNAL,
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:75   
     1718+    2588                2 FALSE_CONDITION@P UBIN,
     1719+    2589                2 NEXT_CODE@P UBIN;
     1720+    2590
     1721+    2591            %END_MACRO;
     1722+    2592
     1723+    2593          %MEND;
     1724+    2594
     1725+    2595        /*
     1726+    2596            Op-code sequence for IF RELATIONAL ALPHABETIC transfer of control
     1727+    2597            verb.
     1728+    2598        */
     1729+    2599          %MACRO QI$OP_IFRELA ( STCLASS = "BASED",
     1730+    2600                                NAME = QI$OP_IFRELA );
     1731+    2601
     1732+    2602            %BEGIN_MACRO ( STCLASS = STCLASS );
     1733+    2603
     1734+    2604          DCL 1 NAME STCLASS ALIGNED,
     1735+    2605                2 CODE UBIN,
     1736+    2606                2 ALPHANUMERIC_SOURCE@P UBIN,
     1737+    2607                2 ALPHANUMERIC_TARGET@P UBIN,
     1738+    2608                2 RELATIONAL_ATTRIBUTE UBIN,
     1739+    2609                2 FALSE_CONDITION@P UBIN,
     1740+    2610                2 NEXT_CODE@P UBIN;
     1741+    2611
     1742+    2612            %END_MACRO;
     1743+    2613
     1744+    2614          %MEND;
     1745+    2615
     1746+    2616        /*
     1747+    2617            Op-code sequence for IF RELATIONAL GROUP transfer of control
     1748+    2618            verb.
     1749+    2619        */
     1750+    2620          %MACRO QI$OP_IFRELG ( STCLASS = "BASED",
     1751+    2621                                NAME = QI$OP_IFRELG );
     1752+    2622
     1753+    2623            %BEGIN_MACRO ( STCLASS = STCLASS );
     1754+    2624
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:76   
     1755+    2625          DCL 1 NAME STCLASS ALIGNED,
     1756+    2626                2 CODE UBIN,
     1757+    2627                2 IS_SOURCE_GROUP BIT(1) UNAL,
     1758+    2628                2 * UBIN(1) UNAL,
     1759+    2629                2 ANTI_GROUP_LENGTH UBIN(14) UNAL,
     1760+    2630                2 SOURCE@P UBIN,
     1761+    2631                2 TARGET@P UBIN,
     1762+    2632                2 RELATIONAL_ATTRIBUTE UBIN,
     1763+    2633                2 FALSE_CONDITION@P UBIN,
     1764+    2634                2 NEXT_CODE@P UBIN;
     1765+    2635
     1766+    2636            %END_MACRO;
     1767+    2637
     1768+    2638          %MEND;
     1769+    2639
     1770+    2640        /*
     1771+    2641            Op-code sequence for IF RELATIONAL NUMERIC transfer of control
     1772+    2642            verb.
     1773+    2643        */
     1774+    2644          %MACRO QI$OP_IFRELN ( STCLASS = "BASED",
     1775+    2645                                NAME = QI$OP_IFRELN );
     1776+    2646
     1777+    2647            %BEGIN_MACRO ( STCLASS = STCLASS );
     1778+    2648
     1779+    2649          DCL 1 NAME STCLASS ALIGNED,
     1780+    2650                2 CODE UBIN,
     1781+    2651                2 NUMERIC_SOURCE@P UBIN,
     1782+    2652                2 NUMERIC_TARGET@P UBIN,
     1783+    2653                2 RELATIONAL_ATTRIBUTE UBIN,
     1784+    2654                2 FALSE_CONDITION@P UBIN,
     1785+    2655                2 NEXT_CODE@P UBIN;
     1786+    2656
     1787+    2657            %END_MACRO;
     1788+    2658
     1789+    2659          %MEND;
     1790+    2660
     1791+    2661
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:77   
     1792+    2662        /*
     1793+    2663            Op-code sequence for INSPECT verb (TALLYING or REPLACING).
     1794+    2664        */
     1795+    2665          %MACRO QI$OP_INSPECT ( STCLASS = "BASED",
     1796+    2666                                 NAME = QI$OP_INSPECT );
     1797+    2667
     1798+    2668            %BEGIN_MACRO ( STCLASS = STCLASS );
     1799+    2669
     1800+    2670          DCL 1 NAME STCLASS ALIGNED,
     1801+    2671                2 CODE UBIN,
     1802+    2672                2 SOURCE@P UBIN,
     1803+    2673                2 TALLYING_ITEM@P UBIN,
     1804+    2674                2 REPLACING_OLD_ITEM@P REDEF TALLYING_ITEM@P UBIN,
     1805+    2675                2 TALLYING_FOR_ITEM@P UBIN,
     1806+    2676                2 REPLACING_NEW_ITEM@P REDEF TALLYING_FOR_ITEM@P UBIN,
     1807+    2677                2 TALLYING_INITIAL_ITEM@P UBIN,
     1808+    2678                2 REPLACING_INITIAL_ITEM@P REDEF TALLYING_INITIAL_ITEM@P UBIN,
     1809+    2679                2 ATTRIBUTE,
     1810+    2680                  3 * UBIN(10) UNAL,
     1811+    2681                  3 IS_REPLACING BIT(1) UNAL,
     1812+    2682                  3 BEFORE_AFTER UBIN(2) UNAL,
     1813+    2683                  3 WHICH_CHARS UBIN(3) UNAL,
     1814+    2684                2 NEXT_CODE@P UBIN;
     1815+    2685
     1816+    2686            %END_MACRO;
     1817+    2687
     1818+    2688          %MEND;
     1819+    2689
     1820+    2690        /*
     1821+    2691            Op-code sequence for ON SIZE ERROR condition.
     1822+    2692        */
     1823+    2693          %MACRO QI$OP_JAZ ( STCLASS = "BASED",
     1824+    2694                             NAME = QI$OP_JAZ );
     1825+    2695
     1826+    2696            %BEGIN_MACRO ( STCLASS = STCLASS );
     1827+    2697
     1828+    2698          DCL 1 NAME STCLASS ALIGNED,
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:78   
     1829+    2699                2 CODE UBIN,
     1830+    2700                2 EVERYTHINGS_PEACHY@P UBIN,
     1831+    2701                2 NEXT_CODE@P UBIN;
     1832+    2702
     1833+    2703            %END_MACRO;
     1834+    2704
     1835+    2705          %MEND;
     1836+    2706
     1837+    2707        /*
     1838+    2708            Op-code sequence for NO DATA condition.
     1839+    2709        */
     1840+    2710          %MACRO QI$OP_JND ( STCLASS = "BASED",
     1841+    2711                             NAME = QI$OP_JND );
     1842+    2712
     1843+    2713            %BEGIN_MACRO ( STCLASS = STCLASS );
     1844+    2714
     1845+    2715          DCL 1 NAME STCLASS ALIGNED,
     1846+    2716                2 CODE UBIN,
     1847+    2717                2 EVERYTHINGS_PEACHY@P UBIN,
     1848+    2718                2 NEXT_CODE@P UBIN;
     1849+    2719
     1850+    2720            %END_MACRO;
     1851+    2721
     1852+    2722          %MEND;
     1853+    2723
     1854+    2724        /*
     1855+    2725            Op-code sequence for LOAD verb.
     1856+    2726        */
     1857+    2727          %MACRO QI$OP_LOAD ( STCLASS = "BASED",
     1858+    2728                              NAME = QI$OP_LOAD );
     1859+    2729
     1860+    2730            %BEGIN_MACRO ( STCLASS = STCLASS );
     1861+    2731
     1862+    2732          DCL 1 NAME STCLASS ALIGNED,
     1863+    2733                2 CODE UBIN,
     1864+    2734                2 IS_ARGUMENT_PASSED BIT(1) UNAL,
     1865+    2735                2 * UBIN(1) UNAL,
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:79   
     1866+    2736                2 IS_BY_NAME BIT(1) UNAL,
     1867+    2737                2 * UBIN(13) UNAL,
     1868+    2738                2 NAME_OR_TYPE@P UBIN,
     1869+    2739                2 ARGUMENT@P UBIN,
     1870+    2740                2 NEXT_CODE@P UBIN;
     1871+    2741
     1872+    2742            %END_MACRO;
     1873+    2743
     1874+    2744          %MEND;
     1875+    2745
     1876+    2746        /*
     1877+    2747            Op-code sequence for anything to ALPHANUMERIC MOVEs.
     1878+    2748            PIC xxx -> PIC X
     1879+    2749        */
     1880+    2750          %MACRO QI$OP_MOVA ( STCLASS = "BASED",
     1881+    2751                              NAME = QI$OP_MOVA );
     1882+    2752
     1883+    2753            %BEGIN_MACRO ( STCLASS = STCLASS );
     1884+    2754
     1885+    2755          DCL 1 NAME STCLASS ALIGNED,
     1886+    2756                2 CODE UBIN,
     1887+    2757                2 SOURCE@P UBIN,
     1888+    2758                2 ALPHANUMERIC_TARGET@P UBIN,
     1889+    2759                2 NEXT_CODE@P UBIN;
     1890+    2760
     1891+    2761            %END_MACRO;
     1892+    2762
     1893+    2763          %MEND;
     1894+    2764
     1895+    2765        /*
     1896+    2766            Op-code sequence for anything to ALPHANUMERIC EDITED MOVEs.
     1897+    2767            PIC xxx -> PIC B0X/
     1898+    2768        */
     1899+    2769          %MACRO QI$OP_MOVAE ( STCLASS = "BASED",
     1900+    2770                               NAME = QI$OP_MOVAE );
     1901+    2771
     1902+    2772            %BEGIN_MACRO ( STCLASS = STCLASS );
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:80   
     1903+    2773
     1904+    2774          DCL 1 NAME STCLASS ALIGNED,
     1905+    2775                2 CODE UBIN,
     1906+    2776                2 SOURCE@P UBIN,
     1907+    2777                2 ALPHANUMERIC_EDITED_TARGET@P UBIN,
     1908+    2778                2 NEXT_CODE@P UBIN;
     1909+    2779
     1910+    2780            %END_MACRO;
     1911+    2781
     1912+    2782          %MEND;
     1913+    2783
     1914+    2784        /*
     1915+    2785            Op-code sequence for anything to ALPHANUMERIC JUSTIFIED RIGHT MOVEs.
     1916+    2786            PIC xxx -> PIC XX JUSTIFIED RIGHT
     1917+    2787        */
     1918+    2788          %MACRO QI$OP_MOVAJ ( STCLASS = "BASED",
     1919+    2789                               NAME = QI$OP_MOVAJ );
     1920+    2790
     1921+    2791            %BEGIN_MACRO ( STCLASS = STCLASS );
     1922+    2792
     1923+    2793          DCL 1 NAME STCLASS ALIGNED,
     1924+    2794                2 CODE UBIN,
     1925+    2795                2 SOURCE@P UBIN,
     1926+    2796                2 RJ_ALPHANUMERIC_TARGET@P UBIN,
     1927+    2797                2 NEXT_CODE@P UBIN;
     1928+    2798
     1929+    2799            %END_MACRO;
     1930+    2800
     1931+    2801          %MEND;
     1932+    2802
     1933+    2803        /*
     1934+    2804            Op-code sequence for anything to BINARY MOVEs.
     1935+    2805            PIC xxx  ->  [ PIC 9( 2 | 4 ) ]  { COMP-1 | COMP-2 }
     1936+    2806        */
     1937+    2807          %MACRO QI$OP_MOVB ( STCLASS = "BASED",
     1938+    2808                              NAME = QI$OP_MOVB );
     1939+    2809
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:81   
     1940+    2810            %BEGIN_MACRO ( STCLASS = STCLASS );
     1941+    2811
     1942+    2812          DCL 1 NAME STCLASS ALIGNED,
     1943+    2813                2 CODE UBIN,
     1944+    2814                2 SOURCE@P UBIN,
     1945+    2815                2 BINARY_TARGET@P UBIN,
     1946+    2816                2 NEXT_CODE@P UBIN;
     1947+    2817
     1948+    2818            %END_MACRO;
     1949+    2819
     1950+    2820          %MEND;
     1951+    2821
     1952+    2822        /*
     1953+    2823            Op-code sequence for 'accumulator' to BINARY MOVEs.
     1954+    2824            QI_1.ACCUM  ->  [ PIC 9( 2 | 4 ) ]  { COMP-1 | COMP-2 }
     1955+    2825        */
     1956+    2826          %MACRO QI$OP_MOVBA ( STCLASS = "BASED",
     1957+    2827                               NAME = QI$OP_MOVBA );
     1958+    2828
     1959+    2829            %BEGIN_MACRO ( STCLASS = STCLASS );
     1960+    2830
     1961+    2831          DCL 1 NAME STCLASS ALIGNED,
     1962+    2832                2 CODE UBIN,
     1963+    2833                2 BINARY_TARGET@P UBIN,
     1964+    2834                2 NEXT_CODE@P UBIN;
     1965+    2835
     1966+    2836            %END_MACRO;
     1967+    2837
     1968+    2838          %MEND;
     1969+    2839
     1970+    2840        /*
     1971+    2841            Op-code sequence for NUMERIC EDITED to NUMERIC MOVEs.
     1972+    2842            PIC $9  ->  PIC 99
     1973+    2843        */
     1974+    2844          %MACRO QI$OP_MOVDE ( STCLASS = "BASED",
     1975+    2845                               NAME = QI$OP_MOVDE );
     1976+    2846
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:82   
     1977+    2847            %BEGIN_MACRO ( STCLASS = STCLASS );
     1978+    2848
     1979+    2849          DCL 1 NAME STCLASS ALIGNED,
     1980+    2850                2 CODE UBIN,
     1981+    2851                2 NUMERIC_EDITED_SOURCE@P UBIN,
     1982+    2852                2 NUMERIC_TARGET@P UBIN,
     1983+    2853                2 NEXT_CODE@P UBIN;
     1984+    2854
     1985+    2855            %END_MACRO;
     1986+    2856
     1987+    2857          %MEND;
     1988+    2858
     1989+    2859        /*
     1990+    2860            Op-code sequence for anything/group to anything/group MOVEs.
     1991+    2861            GROUP  ->  PIC xxx    |    PIC xxx  ->  GROUP
     1992+    2862        */
     1993+    2863          %MACRO QI$OP_MOVG ( STCLASS = "BASED",
     1994+    2864                              NAME = QI$OP_MOVG );
     1995+    2865
     1996+    2866            %BEGIN_MACRO ( STCLASS = STCLASS );
     1997+    2867
     1998+    2868          DCL 1 NAME STCLASS ALIGNED,
     1999+    2869                2 CODE UBIN,
     2000+    2870                2 SOURCE@P UBIN,
     2001+    2871                2 TARGET@P UBIN,
     2002+    2872                2 IS_SOURCE_GROUP BIT(1) UNAL,
     2003+    2873                2 * UBIN(1) UNAL,
     2004+    2874                2 ANTI_GROUP_LENGTH UBIN(14) UNAL,
     2005+    2875                2 NEXT_CODE@P UBIN;
     2006+    2876
     2007+    2877            %END_MACRO;
     2008+    2878
     2009+    2879          %MEND;
     2010+    2880
     2011+    2881        /*
     2012+    2882            Op-code sequence for anything to DISPLAY MOVEs.
     2013+    2883            PIC xxx  ->  PIC 9
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:83   
     2014+    2884        */
     2015+    2885          %MACRO QI$OP_MOVN ( STCLASS = "BASED",
     2016+    2886                              NAME = QI$OP_MOVN );
     2017+    2887
     2018+    2888            %BEGIN_MACRO ( STCLASS = STCLASS );
     2019+    2889
     2020+    2890          DCL 1 NAME STCLASS ALIGNED,
     2021+    2891                2 CODE UBIN,
     2022+    2892                2 SOURCE@P UBIN,
     2023+    2893                2 DISPLAY_TARGET@P UBIN,
     2024+    2894                2 NEXT_CODE@P UBIN;
     2025+    2895
     2026+    2896            %END_MACRO;
     2027+    2897
     2028+    2898          %MEND;
     2029+    2899
     2030+    2900        /*
     2031+    2901            Op-code sequence for 'accumulator' to DISPLAY MOVEs.
     2032+    2902            QI_1.ACCUM  ->  PIC 9
     2033+    2903        */
     2034+    2904          %MACRO QI$OP_MOVNA ( STCLASS = "BASED",
     2035+    2905                               NAME = QI$OP_MOVNA );
     2036+    2906
     2037+    2907            %BEGIN_MACRO ( STCLASS = STCLASS );
     2038+    2908
     2039+    2909          DCL 1 NAME STCLASS ALIGNED,
     2040+    2910                2 CODE UBIN,
     2041+    2911                2 DISPLAY_TARGET@P UBIN,
     2042+    2912                2 NEXT_CODE@P UBIN;
     2043+    2913
     2044+    2914            %END_MACRO;
     2045+    2915
     2046+    2916          %MEND;
     2047+    2917
     2048+    2918        /*
     2049+    2919            Op-code sequence for anything to NUMERIC EDITED MOVEs.
     2050+    2920            PIC xxx  ->  PIC $
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:84   
     2051+    2921        */
     2052+    2922          %MACRO QI$OP_MOVNE ( STCLASS = "BASED",
     2053+    2923                               NAME = QI$OP_MOVNE );
     2054+    2924
     2055+    2925            %BEGIN_MACRO ( STCLASS = STCLASS );
     2056+    2926
     2057+    2927          DCL 1 NAME STCLASS ALIGNED,
     2058+    2928                2 CODE UBIN,
     2059+    2929                2 SOURCE@P UBIN,
     2060+    2930                2 NUMERIC_EDITED_TARGET@P UBIN,
     2061+    2931                2 NEXT_CODE@P UBIN;
     2062+    2932
     2063+    2933            %END_MACRO;
     2064+    2934
     2065+    2935          %MEND;
     2066+    2936
     2067+    2937        /*
     2068+    2938            Op-code sequence for 'accumulator' to NUMERIC EDITED MOVEs.
     2069+    2939            QI_1.ACCUM  ->  PIC $
     2070+    2940        */
     2071+    2941          %MACRO QI$OP_MOVNEA ( STCLASS = "BASED",
     2072+    2942                                NAME = QI$OP_MOVNEA );
     2073+    2943
     2074+    2944            %BEGIN_MACRO ( STCLASS = STCLASS );
     2075+    2945
     2076+    2946          DCL 1 NAME STCLASS ALIGNED,
     2077+    2947                2 CODE UBIN,
     2078+    2948                2 NUMERIC_EDITED_TARGET@P UBIN,
     2079+    2949                2 NEXT_CODE@P UBIN;
     2080+    2950
     2081+    2951            %END_MACRO;
     2082+    2952
     2083+    2953          %MEND;
     2084+    2954
     2085+    2955        /*
     2086+    2956            Op-code sequence for anything to PACKED MOVEs.
     2087+    2957            PIC xxx  ->  PIC 9 COMP
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:85   
     2088+    2958        */
     2089+    2959          %MACRO QI$OP_MOVP ( STCLASS = "BASED",
     2090+    2960                              NAME = QI$OP_MOVP );
     2091+    2961
     2092+    2962            %BEGIN_MACRO ( STCLASS = STCLASS );
     2093+    2963
     2094+    2964          DCL 1 NAME STCLASS ALIGNED,
     2095+    2965                2 CODE UBIN,
     2096+    2966                2 SOURCE@P UBIN,
     2097+    2967                2 PACKED_TARGET@P UBIN,
     2098+    2968                2 NEXT_CODE@P UBIN;
     2099+    2969
     2100+    2970            %END_MACRO;
     2101+    2971
     2102+    2972          %MEND;
     2103+    2973
     2104+    2974        /*
     2105+    2975            Op-code sequence for 'accumulator' to PACKED MOVEs.
     2106+    2976            QI_1.ACCUM  ->  PIC 9 COMP
     2107+    2977        */
     2108+    2978          %MACRO QI$OP_MOVPA ( STCLASS = "BASED",
     2109+    2979                               NAME = QI$OP_MOVPA );
     2110+    2980
     2111+    2981            %BEGIN_MACRO ( STCLASS = STCLASS );
     2112+    2982
     2113+    2983          DCL 1 NAME STCLASS ALIGNED,
     2114+    2984                2 CODE UBIN,
     2115+    2985                2 PACKED_TARGET@P UBIN,
     2116+    2986                2 NEXT_CODE@P UBIN;
     2117+    2987
     2118+    2988            %END_MACRO;
     2119+    2989
     2120+    2990          %MEND;
     2121+    2991
     2122+    2992        /*
     2123+    2993            Op-code sequence for MULTiply operation.
     2124+    2994        */
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:86   
     2125+    2995          %MACRO QI$OP_MULT ( STCLASS = "BASED",
     2126+    2996                              NAME = QI$OP_MULT );
     2127+    2997
     2128+    2998            %BEGIN_MACRO ( STCLASS = STCLASS );
     2129+    2999
     2130+    3000          DCL 1 NAME STCLASS ALIGNED,
     2131+    3001                2 CODE UBIN,
     2132+    3002                2 NUMERIC_SOURCE@P UBIN,
     2133+    3003                2 TARGET_AND_RESULT@P UBIN,
     2134+    3004                2 NEXT_CODE@P UBIN;
     2135+    3005
     2136+    3006            %END_MACRO;
     2137+    3007
     2138+    3008          %MEND;
     2139+    3009
     2140+    3010        /*
     2141+    3011            Op-code sequence for MULTiplying two arguments together and
     2142+    3012            placing the result into the accumulator.
     2143+    3013        */
     2144+    3014          %MACRO QI$OP_MULTX ( STCLASS = "BASED",
     2145+    3015                               NAME = QI$OP_MULTX );
     2146+    3016
     2147+    3017            %BEGIN_MACRO ( STCLASS = STCLASS );
     2148+    3018
     2149+    3019          DCL 1 NAME STCLASS ALIGNED,
     2150+    3020                2 CODE UBIN,
     2151+    3021                2 NUMERIC_SOURCE@P UBIN,
     2152+    3022                2 NUMERIC_TARGET@P UBIN,
     2153+    3023                2 NEXT_CODE@P UBIN;
     2154+    3024
     2155+    3025            %END_MACRO;
     2156+    3026
     2157+    3027          %MEND;
     2158+    3028
     2159+    3029        /*
     2160+    3030            Op-code sequence for OPEN verb.
     2161+    3031        */
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:87   
     2162+    3032          %MACRO QI$OP_OPEN ( STCLASS = "BASED",
     2163+    3033                              NAME = QI$OP_OPEN );
     2164+    3034
     2165+    3035            %BEGIN_MACRO ( STCLASS = STCLASS );
     2166+    3036
     2167+    3037          DCL 1 NAME STCLASS ALIGNED,
     2168+    3038                2 CODE UBIN,
     2169+    3039                2 * BIT(1) UNAL,
     2170+    3040                2 IO_FLAGS,
     2171+    3041                  3 IS_OUTPUT BIT(1) UNAL,
     2172+    3042                  3 IS_INPUT BIT(1) UNAL,
     2173+    3043                2 IO_VALUE REDEF IO_FLAGS UBIN(2) UNAL,
     2174+    3044                2 FILE_COUNT UBIN(13) UNAL,
     2175+    3045                2 FILE_A@P(0:0) UBIN;
     2176+    3046
     2177+    3047            %END_MACRO;
     2178+    3048
     2179+    3049          %MEND;
     2180+    3050
     2181+    3051        /*
     2182+    3052            Op-code sequence for beginning PERFORM transfer of control verb.
     2183+    3053        */
     2184+    3054          %MACRO QI$OP_PERFM ( STCLASS = "BASED",
     2185+    3055                               NAME = QI$OP_PERFM );
     2186+    3056
     2187+    3057            %BEGIN_MACRO ( STCLASS = STCLASS );
     2188+    3058
     2189+    3059          DCL 1 NAME STCLASS ALIGNED,
     2190+    3060                2 CODE UBIN,
     2191+    3061                2 FROM@P UBIN,
     2192+    3062                2 PERFORM_BLOCK@D UBIN,
     2193+    3063                2 ATTRIBUTE,
     2194+    3064                  3 PARAGRAPH_SECTION BIT (1) UNAL,
     2195+    3065                  3 * BIT (11) UNAL,
     2196+    3066                  3 ITERATION_FIELD UBIN (4) UNAL,
     2197+    3067                2 BINARY_ITERATION_COUNT@P UBIN,
     2198+    3068                2 SINGLE_ITERATION_NEXT_CODE@P REDEF BINARY_ITERATION_COUNT@P UBIN,
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:88   
     2199+    3069                2 MULTIPLE_ITERATION_NEXT_CODE@P UBIN;
     2200+    3070
     2201+    3071            %END_MACRO;
     2202+    3072
     2203+    3073          %MEND;
     2204+    3074
     2205+    3075        /*
     2206+    3076            Op-code sequence for ending PERFORM transfer of control verb.
     2207+    3077        */
     2208+    3078          %MACRO QI$OP_PERFMT ( STCLASS = "BASED",
     2209+    3079                                NAME = QI$OP_PERFMT );
     2210+    3080
     2211+    3081            %BEGIN_MACRO ( STCLASS = STCLASS );
     2212+    3082
     2213+    3083          DCL 1 NAME STCLASS ALIGNED,
     2214+    3084                2 CODE UBIN,
     2215+    3085                2 PERFORM_BLOCK@D UBIN,
     2216+    3086                2 NEXT_CODE@P UBIN;
     2217+    3087
     2218+    3088            %END_MACRO;
     2219+    3089
     2220+    3090          %MEND;
     2221+    3091
     2222+    3092        /*
     2223+    3093            Op-code sequence for READ form-file verb.
     2224+    3094        */
     2225+    3095          %MACRO QI$OP_READ_FORM ( STCLASS = "BASED",
     2226+    3096                                   NAME = QI$OP_READ_FORM );
     2227+    3097
     2228+    3098            %BEGIN_MACRO ( STCLASS = STCLASS );
     2229+    3099
     2230+    3100          DCL 1 NAME STCLASS ALIGNED,
     2231+    3101                2 CODE UBIN,
     2232+    3102                2 FORM_FILE@P UBIN,
     2233+    3103                2 IS_POSITIONING_CURSOR BIT(1) UNAL,
     2234+    3104                2 * BIT(15) UNAL,
     2235+    3105                2 CURSOR_FIELD@P UBIN,
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:89   
     2236+    3106                2 NEXT_CODE@P UBIN;
     2237+    3107
     2238+    3108            %END_MACRO;
     2239+    3109
     2240+    3110          %MEND;
     2241+    3111
     2242+    3112        /*
     2243+    3113            Op-code sequence for READ transaction-file verb.
     2244+    3114        */
     2245+    3115          %MACRO QI$OP_READ_TRAN ( STCLASS = "BASED",
     2246+    3116                                   NAME = QI$OP_READ_TRAN );
     2247+    3117
     2248+    3118            %BEGIN_MACRO ( STCLASS = STCLASS );
     2249+    3119
     2250+    3120          DCL 1 NAME STCLASS ALIGNED,
     2251+    3121                2 CODE UBIN,
     2252+    3122                2 TRAN_FILE@P UBIN,
     2253+    3123                2 * UBIN(15) UNAL,
     2254+    3124                2 NO_DATA BIT(1) UNAL,
     2255+    3125                2 NEXT_CODE@P UBIN;
     2256+    3126
     2257+    3127            %END_MACRO;
     2258+    3128
     2259+    3129          %MEND;
     2260+    3130
     2261+    3131        /*
     2262+    3132            Op-code sequence for the ROUND verb.
     2263+    3133        */
     2264+    3134          %MACRO QI$OP_ROUND ( STCLASS = "BASED",
     2265+    3135                               NAME = QI$OP_ROUND );
     2266+    3136
     2267+    3137            %BEGIN_MACRO ( STCLASS = STCLASS );
     2268+    3138
     2269+    3139          DCL 1 NAME STCLASS ALIGNED,
     2270+    3140                2 CODE UBIN,
     2271+    3141                2 DECIMAL_PLACES UBIN,
     2272+    3142                2 NEXT_CODE@P UBIN;
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:90   
     2273+    3143
     2274+    3144            %END_MACRO;
     2275+    3145
     2276+    3146          %MEND;
     2277+    3147
     2278+    3148        /*
     2279+    3149            Op-code sequence for STOP [ PAUSING... | POSTING... ] verb.
     2280+    3150        */
     2281+    3151          %MACRO QI$OP_STOP_PAUSE ( STCLASS = "BASED",
     2282+    3152                                    NAME = QI$OP_STOP_PAUSE );
     2283+    3153
     2284+    3154            %BEGIN_MACRO ( STCLASS = STCLASS );
     2285+    3155
     2286+    3156          DCL 1 NAME STCLASS ALIGNED,
     2287+    3157                2 CODE UBIN,
     2288+    3158                2 * UBIN(13) UNAL,
     2289+    3159                2 IS_IMPLICIT_POSTING BIT(1) UNAL,
     2290+    3160                2 IS_EXPLICIT_POSTING BIT(1) UNAL,
     2291+    3161                2 IS_PAUSING BIT(1) UNAL,
     2292+    3162                2 PAUSING_OPERAND@P UBIN,
     2293+    3163                2 POSTING_OPERAND@P UBIN,
     2294+    3164                2 NEXT_CODE@P UBIN;
     2295+    3165
     2296+    3166            %END_MACRO;
     2297+    3167
     2298+    3168          %MEND;
     2299+    3169
     2300+    3170        /*
     2301+    3171            Op-code sequence for STOP { RUN } verb.
     2302+    3172        */
     2303+    3173          %MACRO QI$OP_STOP_RUN ( STCLASS = "BASED",
     2304+    3174                                  NAME = QI$OP_STOP_RUN );
     2305+    3175
     2306+    3176            %BEGIN_MACRO ( STCLASS = STCLASS );
     2307+    3177
     2308+    3178          DCL 1 NAME STCLASS ALIGNED,
     2309+    3179                2 CODE UBIN,
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:91   
     2310+    3180                2 NEXT_CODE@P UBIN;
     2311+    3181
     2312+    3182            %END_MACRO;
     2313+    3183
     2314+    3184          %MEND;
     2315+    3185
     2316+    3186        /*
     2317+    3187            Op-code sequence for SUBtract operation.
     2318+    3188        */
     2319+    3189          %MACRO QI$OP_SUB ( STCLASS = "BASED",
     2320+    3190                             NAME =  QI$OP_SUB );
     2321+    3191
     2322+    3192            %BEGIN_MACRO ( STCLASS = STCLASS );
     2323+    3193
     2324+    3194          DCL 1 NAME STCLASS ALIGNED,
     2325+    3195                2 CODE UBIN,
     2326+    3196                2 NUMERIC_SOURCE@P UBIN,
     2327+    3197                2 NUMERIC_TARGET@P UBIN,
     2328+    3198                2 NEXT_CODE@P UBIN;
     2329+    3199
     2330+    3200            %END_MACRO;
     2331+    3201
     2332+    3202          %MEND;
     2333+    3203
     2334+    3204        /*
     2335+    3205            Op-code sequence for SUBSCRIPTing operations.
     2336+    3206        */
     2337+    3207          %MACRO QI$OP_SUBSCR ( STCLASS = "BASED",
     2338+    3208                                NAME = QI$OP_SUBSCR );
     2339+    3209
     2340+    3210            %BEGIN_MACRO ( STCLASS = STCLASS );
     2341+    3211
     2342+    3212          DCL 1 NAME STCLASS ALIGNED,
     2343+    3213                2 CODE UBIN,
     2344+    3214                2 ARRAY_SOURCE@P UBIN,
     2345+    3215                2 SUBSCRIPT_A@P(0:0) UBIN,
     2346+    3216                          /* SUBSCRIPT_A@P is one or two entries long
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:92   
     2347+    3217                             depending on the dimension_count of
     2348+    3218                             ARRAY_SOURCE@P.  */
     2349+    3219                2 DUMMY_RESULT@P UBIN,
     2350+    3220                2 NEXT_CODE UBIN;
     2351+    3221
     2352+    3222            %END_MACRO;
     2353+    3223
     2354+    3224          %MEND;
     2355+    3225
     2356+    3226        /*
     2357+    3227            Op-code sequence for SUBtracting several arguments from one
     2358+    3228            argument and placing the result into the accumulator.
     2359+    3229        */
     2360+    3230          %MACRO QI$OP_SUBX ( STCLASS = "BASED",
     2361+    3231                              NAME = QI$OP_SUBX );
     2362+    3232
     2363+    3233            %BEGIN_MACRO ( STCLASS = STCLASS );
     2364+    3234
     2365+    3235          DCL 1 NAME STCLASS ALIGNED,
     2366+    3236                2 CODE UBIN,
     2367+    3237                2 ARGUMENT_COUNT UBIN,
     2368+    3238                2 ARGUMENT_A@P(0:0) UBIN;
     2369+    3239
     2370+    3240            %END_MACRO;
     2371+    3241
     2372+    3242          %MEND;
     2373+    3243
     2374+    3244        /*
     2375+    3245            Op-code sequence for the PRESENT verb.
     2376+    3246        */
     2377+    3247          %MACRO QI$OP_VERI_PRES ( STCLASS = "BASED",
     2378+    3248                                   NAME = QI$OP_VERI_PRES );
     2379+    3249
     2380+    3250            %BEGIN_MACRO ( STCLASS = STCLASS );
     2381+    3251
     2382+    3252          DCL 1 NAME STCLASS ALIGNED,
     2383+    3253                2 CODE UBIN,
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:93   
     2384+    3254                2 DAD_PAIR_COUNT UBIN,
     2385+    3255                2 DAD_PAIR_A(0:0),
     2386+    3256                  3 SOURCE@P UBIN,
     2387+    3257                  3 TARGET@P UBIN;
     2388+    3258
     2389+    3259            %END_MACRO;
     2390+    3260
     2391+    3261          %MEND;
     2392+    3262
     2393+    3263        /*
     2394+    3264            Op-code sequence for WRITE frame-section-record verb.
     2395+    3265        */
     2396+    3266          %MACRO QI$OP_WRITE_FORM ( STCLASS = "BASED",
     2397+    3267                                    NAME = QI$OP_WRITE_FORM );
     2398+    3268
     2399+    3269            %BEGIN_MACRO ( STCLASS = STCLASS );
     2400+    3270
     2401+    3271          DCL 1 NAME STCLASS ALIGNED,
     2402+    3272                2 CODE UBIN,
     2403+    3273                2 IS_WRITE_PAGE BIT(1) UNAL,
     2404+    3274                2 * BIT(15) UNAL,
     2405+    3275                2 FORM_RECORD@P UBIN,
     2406+    3276                2 NEXT_CODE@P UBIN;
     2407+    3277
     2408+    3278            %END_MACRO;
     2409+    3279
     2410+    3280          %MEND;
     2411+    3281
     2412+    3282        /*
     2413+    3283            Op-code sequence for WRITE transaction-record verb.
     2414+    3284        */
     2415+    3285          %MACRO QI$OP_WRITE_TRAN ( STCLASS = "BASED",
     2416+    3286                                    NAME = QI$OP_WRITE_TRAN );
     2417+    3287
     2418+    3288            %BEGIN_MACRO ( STCLASS = STCLASS );
     2419+    3289
     2420+    3290          DCL 1 NAME STCLASS ALIGNED,
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:94   
     2421+    3291                2 CODE UBIN,
     2422+    3292                2 TRAN_RECORD@P UBIN,
     2423+    3293                2 DATA_SIZE UBIN,
     2424+    3294                2 NEXT_CODE@P UBIN;
     2425+    3295
     2426+    3296            %END_MACRO;
     2427+    3297
     2428+    3298          %MEND;
     2429+    3299
     2430+    3300        %EJECT;
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:95   
     2431+    3301        /*
     2432+    3302                               %%%%%%%  %%%%%%   %%
     2433+    3303                               %%       %%   %%  %%
     2434+    3304                               %%       %%   %%  %%
     2435+    3305                               %%%%%    %%%%%%   %%
     2436+    3306                               %%       %%       %%
     2437+    3307                               %%       %%       %%
     2438+    3308                               %%       %%       %%%%%%%
     2439+    3309
     2440+    3310                                                   %%%         %%
     2441+    3311                                                   %%%         %%
     2442+    3312             %% %%%   %% %%%%   %%%%%    %%%%%%     %%     %%% %%  %% %%%%
     2443+    3313             %%%  %%  %%%%     %%   %%  %%         %%     %%  %%%  %%%%
     2444+    3314             %%%  %%  %%%      %%   %%  %%                %%  %%%  %%%
     2445+    3315             %%%  %%  %%       %%   %%  %%                %%  %%%  %%
     2446+    3316             %% %%%   %%        %%%%%    %%%%%%            %%% %%  %%
     2447+    3317             %%
     2448+    3318             %%
     2449+    3319                                                                            */
     2450+    3320
     2451+    3321          %MACRO QI$INITIALIZATION_BLOCK ( STCLASS = "BASED",
     2452+    3322                                           NAME = QI$INITIALIZATION_BLOCK );
     2453+    3323
     2454+    3324            %BEGIN_MACRO ( STCLASS = STCLASS );
     2455+    3325
     2456+    3326        /*
     2457+    3327           This INITIALIZATION_BLOCK is used by QAT$TALLYHO
     2458+    3328           during startup to, well, initialize.
     2459+    3329        */
     2460+    3330          DCL 1 NAME STCLASS ALIGNED,
     2461+    3331                2 DATA_START$ PTR,
     2462+    3332                2 PROC_START$ PTR,
     2463+    3333                2 EXPECTED_ARGUMENT_COUNT UBIN,
     2464+    3334                2 CURRENT_FORM@P UBIN,
     2465+    3335                2 CURRENT_FRAME@P UBIN,
     2466+    3336                2 CURRENT_FIELD@P UBIN,
     2467+    3337                2 RETRY@P UBIN,
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:96   
     2468+    3338                2 VERIFY_BUFFER_1@P UBIN,
     2469+    3339                2 VERIFY_BUFFER_2@P UBIN,
     2470+    3340                2 VERIFY_BUFFER_3@P UBIN,
     2471+    3341                2 VERIFY_BUFFER_4@P UBIN,
     2472+    3342                2 COMPILER_VERSION CHAR(4),
     2473+    3343                2 OUTPUT_OR_IO_USE_PROCEDURE@P UBIN,
     2474+    3344                2 INPUT_OR_IO_USE_PROCEDURE@P UBIN,
     2475+    3345                2 VERIFICATION_USE_PROCEDURE@P UBIN,
     2476+    3346                2 MESSAGE_LINE_DCB# UBIN,
     2477+    3347                2 VANILLA_HOST_DCB# UBIN,
     2478+    3348                2 IS_THIS_A_SUBROUTINE BIT(1) UNAL,
     2479+    3349                2 * UBIN(15) UNAL;
     2480+    3350
     2481+    3351            %END_MACRO;
     2482+    3352
     2483+    3353          %MEND;
     2484+    3354
     2485+    3355        %EJECT;
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:97   
     2486+    3356
     2487+    3357          %MACRO QI$CONDITION_CONTROL_BLOCK ( STCLASS = "BASED",
     2488+    3358                                          NAME = QI$CONDITION_CONTROL_BLOCK );
     2489+    3359
     2490+    3360            %BEGIN_MACRO ( STCLASS = STCLASS );
     2491+    3361
     2492+    3362        /*
     2493+    3363           CONDITION CONTROL BLOCK used to refer to target data on conditional
     2494+    3364           IFs (i.e. IFCNDA, and IFCNDN).
     2495+    3365        */
     2496+    3366          DCL 1 NAME STCLASS ALIGNED,
     2497+    3367                2 WORD0_FLAGS,
     2498+    3368                  3 IS_THROUGH BIT(1) UNAL,
     2499+    3369                  3 * UBIN(15) UNAL,
     2500+    3370                2 LIST_LENGTH REDEF WORD0_FLAGS UBIN,
     2501+    3371                2 LIST_A@P(0:0) UBIN,
     2502+    3372                2 RANGE_A@P(0:0) REDEF LIST_A@P UBIN;
     2503+    3373
     2504+    3374            %END_MACRO;
     2505+    3375
     2506+    3376          %MEND;
     2507+    3377
     2508+    3378        %EJECT;
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:98   
     2509+    3379
     2510+    3380          %MACRO QI$CONDITION_LEGAL_BLOCK ( STCLASS = "BASED",
     2511+    3381                                            NAME = QI$CONDITION_LEGAL_BLOCK );
     2512+    3382
     2513+    3383            %BEGIN_MACRO ( STCLASS = STCLASS );
     2514+    3384
     2515+    3385        /*
     2516+    3386           CONDITION BLOCK used for holding information about the LEGAL
     2517+    3387           list/range/array for a COBOL-like data item.
     2518+    3388        */
     2519+    3389          DCL 1 NAME STCLASS ALIGNED,
     2520+    3390                2 TYPE UBIN(2) UNAL,
     2521+    3391                2 LIST_LENGTH UBIN(14) UNAL,
     2522+    3392                2 ARRAY@P UBIN,
     2523+    3393                2 LIST_A@P(0:0) REDEF ARRAY@P UBIN,
     2524+    3394                2 RANGE_A@P(0:0) REDEF ARRAY@P UBIN;
     2525+    3395
     2526+    3396            %END_MACRO;
     2527+    3397
     2528+    3398          %MEND;
     2529+    3399
     2530+    3400        %EJECT;
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:99   
     2531+    3401
     2532+    3402        /*
     2533+    3403                 Compiler-generated pseudo-CIP descriptor.
     2534+    3404        */
     2535+    3405          %MACRO QI$PSEUDO_CIP
     2536+    3406                 ( NAME = QI$PSEUDO_CIP,
     2537+    3407                   STCLASS = "BASED",
     2538+    3408                   LVL = 1,
     2539+    3409                   END_STRUCTURE ( YES = ";",
     2540+    3410                                   NO = ",",
     2541+    3411                                   ANY ) = ";" );
     2542+    3412
     2543+    3413            %BEGIN_MACRO ( STCLASS = STCLASS );
     2544+    3414
     2545+    3415            %IF LVL = 1;
     2546+    3416          DCL 1 NAME STCLASS ALIGNED,        /* CIP descriptor */
     2547+    3417            %ELSE;
     2548+    3418              %(LVL) NAME ALIGNED,           /* CIP descriptor */
     2549+    3419            %ENDIF;
     2550+    3420
     2551+    3421                %(LVL+1) ALPHANUMERIC,
     2552+    3422                  %(LVL+2) CA,                  /* Control bits for ALPHANUMERIC */
     2553+    3423                    %(LVL+3) OFFSET UBIN(1) UNAL,
     2554+    3424                  %(LVL+2) * UBIN(1) UNAL,
     2555+    3425                  %(LVL+2) LEN UBIN(14) UNAL,
     2556+    3426                %(LVL+1) NUMERIC REDEF ALPHANUMERIC,
     2557+    3427                  %(LVL+2) CB,                  /* Control bits for BINARY */
     2558+    3428                    %(LVL+3) OFFSET UBIN(1) UNAL,
     2559+    3429                    %(LVL+3) MBZ UBIN(2) UNAL,
     2560+    3430                  %(LVL+2) CD REDEF CB,         /* Control bits for DISPLAY */
     2561+    3431                    %(LVL+3) OFFSET UBIN(1) UNAL,
     2562+    3432                    %(LVL+3) SIGN UBIN(2) UNAL,
     2563+    3433                  %(LVL+2) CP REDEF CB,         /* Control bits for PACKED */
     2564+    3434                    %(LVL+3) OFFSET UBIN(2) UNAL,
     2565+    3435                    %(LVL+3) SIGN UBIN(1) UNAL,
     2566+    3436                  %(LVL+2) LEN UBIN(5) UNAL,
     2567+    3437                  %(LVL+2) * UBIN(2) UNAL,
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:100  
     2568+    3438                  %(LVL+2) DEC SBIN(6) UNAL,
     2569+    3439            %IF LVL = 1;
     2570+    3440                %(LVL+1) DATA@ UBIN;
     2571+    3441          DCL 1 %CHARTEXT(CONCAT(TEXTCHAR(NAME),'_A')) (0:1) REDEF NAME UBIN;
     2572+    3442            %ELSE;
     2573+    3443                %(LVL+1) DATA@ UBIN,
     2574+    3444           %(LVL) %CHARTEXT(CONCAT(TEXTCHAR(NAME),'_A')) (0:1) REDEF NAME UBIN END_STRUCTURE
     2575+    3445            %ENDIF;
     2576+    3446
     2577+    3447            %END_MACRO;
     2578+    3448
     2579+    3449          %MEND;
     2580+    3450
     2581+    3451        %EJECT;
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:101  
     2582+    3452
     2583+    3453        /*
     2584+    3454                 Real live CIP descriptor.
     2585+    3455        */
     2586+    3456          %MACRO QI$CIP ( STCLASS = "BASED",
     2587+    3457                          NAME = QI$CIP );
     2588+    3458
     2589+    3459            %BEGIN_MACRO ( STCLASS = STCLASS );
     2590+    3460
     2591+    3461            %QI_CIP_DESCRIPTOR ( NAME = NAME,
     2592+    3462                                 STCLASS = STCLASS );
     2593+    3463
     2594+    3464            %END_MACRO;
     2595+    3465
     2596+    3466          %MEND;
     2597+    3467
     2598+    3468        %EJECT;
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:102  
     2599+    3469
     2600+    3470        /*
     2601+    3471                 Basic DAD
     2602+    3472        */
     2603+    3473          %MACRO QI$DAD
     2604+    3474                 ( NAME = QI$DAD,
     2605+    3475                   STCLASS = "BASED",
     2606+    3476                   LVL = 1,
     2607+    3477                   END_STRUCTURE ( YES = ";",
     2608+    3478                                   NO = ",",
     2609+    3479                                   ANY ) = ";" );
     2610+    3480
     2611+    3481            %BEGIN_MACRO ( STCLASS = STCLASS );
     2612+    3482
     2613+    3483            %IF LVL = 1;
     2614+    3484          DCL 1 NAME STCLASS ALIGNED,
     2615+    3485            %ELSE;
     2616+    3486              %(LVL) NAME ALIGNED,
     2617+    3487            %ENDIF;
     2618+    3488                %(LVL+1) WORD0 SBIN,
     2619+    3489                %(LVL+1) WORD0_FLAGS REDEF WORD0,
     2620+    3490                  %(LVL+2) INDIRECT BIT(1) UNAL,          /* on for indirect reference */
     2621+    3491                  %(LVL+2) * UBIN(4) UNAL,
     2622+    3492                  %(LVL+2) IS_JUSTIFIED_RIGHT BIT(1) UNAL,
     2623+    3493                  %(LVL+2) * UBIN(2) UNAL,
     2624+    3494                  %(LVL+2) IS_FORM_VARIABLE BIT(1) UNAL,  /* on for FORM variable */
     2625+    3495                  %(LVL+2) IS_CONSTANT BIT(1) UNAL,       /* on if CONSTANT */
     2626+    3496                  %(LVL+2) DIMENSION_COUNT UBIN(2) UNAL,  /* # of dimensions */
     2627+    3497                  %(LVL+2) TYPE UBIN(4) UNAL,             /* variable TYPE */
     2628+    3498
     2629+    3499            %LSET NEXT_LEVEL = LVL + 1;
     2630+    3500
     2631+    3501                %QI$PSEUDO_CIP ( NAME = PSEUDO_CIP,
     2632+    3502                                 LVL = %NEXT_LEVEL,
     2633+    3503                                 END_STRUCTURE = END_STRUCTURE );
     2634+    3504
     2635+    3505            %END_MACRO;
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:103  
     2636+    3506
     2637+    3507          %MEND;
     2638+    3508
     2639+    3509        %EJECT;
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:104  
     2640+    3510
     2641+    3511          %MACRO QI$COBOL_DAD ( STCLASS = "BASED",
     2642+    3512                                NAME = QI$COBOL_DAD );
     2643+    3513
     2644+    3514            %BEGIN_MACRO ( STCLASS = STCLASS );
     2645+    3515
     2646+    3516          DCL 1 NAME STCLASS ALIGNED,
     2647+    3517                2 WORD0 SBIN,
     2648+    3518                2 WORD0_FLAGS REDEF WORD0,
     2649+    3519                  3 INDIRECT BIT(1) UNAL,
     2650+    3520                  3 P,
     2651+    3521                    4 PICTURE BIT(1) UNAL,
     2652+    3522                    4 VALID BIT(1) UNAL,
     2653+    3523                    4 ERROR_MESSAGE BIT(1) UNAL,
     2654+    3524                  3 IS_LINKAGE_ARGUMENT BIT(1) UNAL,/* on if in LINKAGE SECTION */
     2655+    3525                  3 IS_JUSTIFIED_RIGHT BIT(1) UNAL,/* on if JUSTIFIED RIGHT */
     2656+    3526                  3 IS_TEMP BIT(1) UNAL,           /* on if this is a temp */
     2657+    3527                  3 IS_ALL_LIT BIT(1) UNAL,        /* on if this is an ALL "literal" */
     2658+    3528                  3 IS_FORM_VARIABLE BIT(1) UNAL,  /* on if a FORM variable */
     2659+    3529                  3 IS_CONSTANT BIT(1) UNAL,       /* on if CONSTANT */
     2660+    3530                  3 DIMENSION_COUNT UBIN(2) UNAL,  /* # of dimensions */
     2661+    3531                  3 TYPE UBIN(4) UNAL,
     2662+    3532                2 P_A(0:15) REDEF WORD0 BIT(1) UNAL,
     2663+    3533                %QI$PSEUDO_CIP ( NAME = PSEUDO_CIP,
     2664+    3534                                 LVL = 2,
     2665+    3535                                 END_STRUCTURE = NO );
     2666+    3536                2 VARIABLE_LENGTH_ITEMS,
     2667+    3537                  3 LEVEL_MULTIPLIERS,
     2668+    3538                    4 ONE_DIMENSIONAL,
     2669+    3539                      5 ELEMENT_COUNT UBIN,
     2670+    3540                      5 ELEMENT_LENGTH UBIN,
     2671+    3541                    4 TWO_DIMENSIONAL,
     2672+    3542                      5 ELEMENT_COUNT UBIN,
     2673+    3543                      5 ELEMENT_LENGTH UBIN,
     2674+    3544                    4 THREE_DIMENSIONAL,
     2675+    3545                      5 ELEMENT_COUNT UBIN,
     2676+    3546                      5 ELEMENT_LENGTH UBIN,
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:105  
     2677+    3547                  3 LEVEL_MULTIPLIER_A(0:%(QI#MAXIMUM_DIMENSION-1)) REDEF LEVEL_MULTIPLIERS,
     2678+    3548                    4 ELEMENT_COUNT UBIN,
     2679+    3549                    4 ELEMENT_LENGTH UBIN,
     2680+    3550                  3 P_ITEM_A(0:%((2*QI#MAXIMUM_DIMENSION)-1)) REDEF LEVEL_MULTIPLIERS UBIN,
     2681+    3551                  3 *(0:%(QI#P_COBOL_LAST_INDEX-QI#P_COBOL_FIRST_INDEX)) UBIN,
     2682+    3552                2 ELEMENTARY_ITEM REDEF VARIABLE_LENGTH_ITEMS,
     2683+    3553                  3 P_ITEM_A(0:%(QI#P_COBOL_LAST_INDEX-QI#P_COBOL_FIRST_INDEX)) UBIN,
     2684+    3554                  3 * UBIN,
     2685+    3555                  3 * UBIN,
     2686+    3556                  3 * UBIN,
     2687+    3557                  3 * UBIN,
     2688+    3558                  3 * UBIN,
     2689+    3559                  3 * UBIN,
     2690+    3560                2 ONE_DIMENSIONAL_ITEM REDEF VARIABLE_LENGTH_ITEMS,
     2691+    3561                  3 * UBIN,
     2692+    3562                  3 * UBIN,
     2693+    3563                  3 P_ITEM_A(0:%(QI#P_COBOL_LAST_INDEX-QI#P_COBOL_FIRST_INDEX)) UBIN,
     2694+    3564                  3 * UBIN,
     2695+    3565                  3 * UBIN,
     2696+    3566                  3 * UBIN,
     2697+    3567                  3 * UBIN,
     2698+    3568                2 TWO_DIMENSIONAL_ITEM REDEF VARIABLE_LENGTH_ITEMS,
     2699+    3569                  3 * UBIN,
     2700+    3570                  3 * UBIN,
     2701+    3571                  3 * UBIN,
     2702+    3572                  3 * UBIN,
     2703+    3573                  3 P_ITEM_A(0:%(QI#P_COBOL_LAST_INDEX-QI#P_COBOL_FIRST_INDEX)) UBIN,
     2704+    3574                  3 * UBIN,
     2705+    3575                  3 * UBIN;
     2706+    3576
     2707+    3577            %END_MACRO;
     2708+    3578
     2709+    3579          %MEND;
     2710+    3580
     2711+    3581        %EJECT;
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:106  
     2712+    3582
     2713+    3583          %MACRO QI$COBOL_DAD_P_BITS ( STCLASS = "BASED",
     2714+    3584                                       NAME = QI$COBOL_DAD_P_BITS );
     2715+    3585
     2716+    3586            %BEGIN_MACRO ( STCLASS = STCLASS );
     2717+    3587
     2718+    3588        /*
     2719+    3589                 Presence bits for COBOL-type DADs.
     2720+    3590        */
     2721+    3591          DCL 1 NAME STCLASS ALIGNED,
     2722+    3592                2 P,
     2723+    3593                  3 * BIT(1) UNAL,
     2724+    3594                  3 PICTURE BIT(1) UNAL,
     2725+    3595                  3 VALID BIT(1) UNAL,
     2726+    3596                  3 ERROR_MESSAGE BIT(1) UNAL,
     2727+    3597                  3 USE_PROCEDURE BIT(1) UNAL,
     2728+    3598                2 P_A(0:4) REDEF P BIT(1) UNAL;
     2729+    3599
     2730+    3600            %END_MACRO;
     2731+    3601
     2732+    3602          %MEND;
     2733+    3603
     2734+    3604        %EJECT;
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:107  
     2735+    3605
     2736+    3606          %MACRO QI$COBOL_DAD_P_ITEMS ( STCLASS = "BASED",
     2737+    3607                                        NAME = QI$COBOL_DAD_P_ITEMS );
     2738+    3608
     2739+    3609            %BEGIN_MACRO ( STCLASS = STCLASS );
     2740+    3610
     2741+    3611        /*
     2742+    3612                 Presence item array for COBOL-type DADs.
     2743+    3613        */
     2744+    3614          DCL 1 NAME STCLASS ALIGNED,
     2745+    3615                2 P_ITEM_A(0:%(QI#P_COBOL_LAST_INDEX-QI#P_COBOL_FIRST_INDEX)) UBIN;
     2746+    3616
     2747+    3617            %END_MACRO;
     2748+    3618
     2749+    3619          %MEND;
     2750+    3620
     2751+    3621        %EJECT;
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:108  
     2752+    3622
     2753+    3623          %MACRO QI$LINKAGE_ARGUMENT_DESCRIPTOR ( STCLASS = "BASED",
     2754+    3624                                                  NAME = QI$LINKAGE_ARGUMENT_DESCRIPTOR );
     2755+    3625
     2756+    3626            %BEGIN_MACRO ( STCLASS = STCLASS );
     2757+    3627
     2758+    3628          DCL 1 NAME STCLASS ALIGNED,
     2759+    3629                2 ARGUMENT_NUMBER UBIN,
     2760+    3630                          /* argument "number" from
     2761+    3631                             PROCEDURE DIVISION USING P1, P2, P3,....
     2762+    3632                             E.g., 0 for P1, 1 for P2, 2 for P3,.... */
     2763+    3633                2 WORD_OFFSET_FROM_01_ITEM UBIN;
     2764+    3634                          /* word offset from the nearest 01-level item
     2765+    3635                             above to the current item. */
     2766+    3636
     2767+    3637            %END_MACRO;
     2768+    3638
     2769+    3639          %MEND;
     2770+    3640
     2771+    3641        %EJECT;
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:109  
     2772+    3642
     2773+    3643          %MACRO QI$FIELD_DAD ( STCLASS = "BASED",
     2774+    3644                                NAME = QI$FIELD_DAD );
     2775+    3645
     2776+    3646            %BEGIN_MACRO ( STCLASS = STCLASS );
     2777+    3647
     2778+    3648          DCL 1 NAME STCLASS ALIGNED,
     2779+    3649                2 WORD0 SBIN,
     2780+    3650                2 WORD0_FLAGS REDEF WORD0,
     2781+    3651                  3 INDIRECT BIT(1) UNAL,
     2782+    3652                                           /* on if an indirect reference */
     2783+    3653                  3 IO_FLAGS,
     2784+    3654                    4 IS_OUTPUT BIT(1) UNAL,
     2785+    3655                                           /* on if this FIELD is OUTPUT or I-O */
     2786+    3656                    4 IS_INPUT BIT(1) UNAL,
     2787+    3657                                           /* on if this FIELD is INPUT or I-O */
     2788+    3658                  3 IO_VALUE REDEF IO_FLAGS UBIN(2) UNAL,
     2789+    3659                                           /* all 1's if this field is I-O */
     2790+    3660                  3 IS_ENTRY_REQUIRED BIT(1) UNAL,
     2791+    3661                                           /* on if INPUT-REQUIRED */
     2792+    3662                  3 IS_OUTPUT_CONSTANT BIT(1) UNAL,
     2793+    3663                                           /* on if CONSTANT OUTPUT */
     2794+    3664                  3 IS_JUSTIFIED_RIGHT BIT(1) UNAL,
     2795+    3665                                           /* on if right justification is in effect */
     2796+    3666                  3 IS_AOIM BIT(1) UNAL,
     2797+    3667                                           /* on if A-O-I-M */
     2798+    3668                  3 * BIT(1) UNAL,
     2799+    3669                  3 IS_FORM_VARIABLE BIT(1) UNAL,
     2800+    3670                                           /* on if a FORM var */
     2801+    3671                  3 IS_CONSTANT BIT(1) UNAL,
     2802+    3672                                           /* on if CONSTANT */
     2803+    3673                  3 DIMENSION_COUNT UBIN(2) UNAL,
     2804+    3674                                           /* # of dimensions */
     2805+    3675                  3 TYPE UBIN(4) UNAL,
     2806+    3676                                           /* TYPE of variable */
     2807+    3677                %QI$PSEUDO_CIP ( NAME = PSEUDO_CIP,
     2808+    3678                                 LVL = 2,
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:110  
     2809+    3679                                 END_STRUCTURE = NO );
     2810+    3680                2 PICTURE_STRING@P UBIN,
     2811+    3681                                           /* ADDR (PROC) disp to PICTURE string */
     2812+    3682                2 BROTHER@P UBIN,
     2813+    3683                                           /* ADDR disp to DAD of brother/sister */
     2814+    3684                2 FATHER@P UBIN,
     2815+    3685                                           /* ADDR disp to DAD of father */
     2816+    3686                2 STATUS_AREA@D UBIN,
     2817+    3687                                           /* ADDR (DATA) disp to scratch area */
     2818+    3688                2 IDENTIFIER@P UBIN,
     2819+    3689                                           /* ADDR (PROC) disp to identifier */
     2820+    3690                2 POSITION,
     2821+    3691                  3 LINE UBIN,
     2822+    3692                                           /* LINE integer or ADDR disp to
     2823+    3693                                              DAD of LINE variable         */
     2824+    3694                  3 COLUMN UBIN,
     2825+    3695                                           /* COLUMN integer or ADDR disp to
     2826+    3696                                              DAD of COLUMN variable         */
     2827+    3697                2 * UBIN BYTE UNAL,
     2828+    3698                2 VISUAL_ATTRIBUTE UBIN BYTE UNAL,
     2829+    3699                                           /* VISUAL-ATTRIBUTE code byte */
     2830+    3700                2 VARIABLE_LENGTH_ITEMS,
     2831+    3701                  3 LEVEL_MULTIPLIERS,
     2832+    3702                    4 ONE_DIMENSIONAL,
     2833+    3703                      5 ELEMENT_COUNT UBIN,
     2834+    3704                      5 ELEMENT_LENGTH UBIN,
     2835+    3705                    4 TWO_DIMENSIONAL,
     2836+    3706                      5 ELEMENT_COUNT UBIN,
     2837+    3707                      5 ELEMENT_LENGTH UBIN,
     2838+    3708                    4 THREE_DIMENSIONAL,
     2839+    3709                      5 ELEMENT_COUNT UBIN,
     2840+    3710                      5 ELEMENT_LENGTH UBIN,
     2841+    3711                  3 LEVEL_MULTIPLIER_A(0:%(QI#MAXIMUM_DIMENSION-1)) REDEF LEVEL_MULTIPLIERS,
     2842+    3712                    4 ELEMENT_COUNT UBIN,
     2843+    3713                    4 ELEMENT_LENGTH UBIN,
     2844+    3714                  3 P_ITEM_A(0:%((2*QI#MAXIMUM_DIMENSION)-1)) REDEF LEVEL_MULTIPLIERS UBIN,
     2845+    3715                  3 *(0:%(QI#P_FIELD_LAST_INDEX-QI#P_FIELD_FIRST_INDEX+1)) UBIN,
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:111  
     2846+    3716                2 ELEMENTARY_ITEM REDEF VARIABLE_LENGTH_ITEMS,
     2847+    3717                  3 P,
     2848+    3718                    4 FILL_CHARACTER_MINIMUM_SIZE BIT(1) UNAL,
     2849+    3719                    4 CLASS_ALPHABET BIT(1) UNAL,
     2850+    3720                    4 DEFAULT BIT(1) UNAL,
     2851+    3721                    4 PROMPT BIT(1) UNAL,
     2852+    3722                    4 REPEATS BIT(1) UNAL,
     2853+    3723                    4 SEPARATED BIT(1) UNAL,
     2854+    3724                  3 P_A(0:5) REDEF P BIT(1) UNAL,
     2855+    3725                  3 * UBIN(7) UNAL,
     2856+    3726                  3 CLASS_TYPE UBIN(3) UNAL,
     2857+    3727                  3 P_ITEM_A(0:%(QI#P_FIELD_LAST_INDEX-QI#P_FIELD_FIRST_INDEX)) UBIN,
     2858+    3728                  3 * UBIN,
     2859+    3729                  3 * UBIN,
     2860+    3730                  3 * UBIN,
     2861+    3731                  3 * UBIN,
     2862+    3732                  3 * UBIN,
     2863+    3733                  3 * UBIN,
     2864+    3734                2 ONE_DIMENSIONAL_ITEM REDEF VARIABLE_LENGTH_ITEMS,
     2865+    3735                  3 * UBIN,
     2866+    3736                  3 * UBIN,
     2867+    3737                  3 P,
     2868+    3738                    4 FILL_CHARACTER_MINIMUM_SIZE BIT(1) UNAL,
     2869+    3739                    4 CLASS_ALPHABET BIT(1) UNAL,
     2870+    3740                    4 DEFAULT BIT(1) UNAL,
     2871+    3741                    4 PROMPT BIT(1) UNAL,
     2872+    3742                    4 REPEATS BIT(1) UNAL,
     2873+    3743                    4 SEPARATED BIT(1) UNAL,
     2874+    3744                  3 P_A(0:5) REDEF P BIT(1) UNAL,
     2875+    3745                  3 * UBIN(7) UNAL,
     2876+    3746                  3 CLASS_TYPE UBIN(3) UNAL,
     2877+    3747                  3 P_ITEM_A(0:%(QI#P_FIELD_LAST_INDEX-QI#P_FIELD_FIRST_INDEX)) UBIN,
     2878+    3748                  3 * UBIN,
     2879+    3749                  3 * UBIN,
     2880+    3750                  3 * UBIN,
     2881+    3751                  3 * UBIN,
     2882+    3752                2 TWO_DIMENSIONAL_ITEM REDEF VARIABLE_LENGTH_ITEMS,
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:112  
     2883+    3753                  3 * UBIN,
     2884+    3754                  3 * UBIN,
     2885+    3755                  3 * UBIN,
     2886+    3756                  3 * UBIN,
     2887+    3757                  3 P,
     2888+    3758                    4 FILL_CHARACTER_MINIMUM_SIZE BIT(1) UNAL,
     2889+    3759                    4 CLASS_ALPHABET BIT(1) UNAL,
     2890+    3760                    4 DEFAULT BIT(1) UNAL,
     2891+    3761                    4 PROMPT BIT(1) UNAL,
     2892+    3762                    4 REPEATS BIT(1) UNAL,
     2893+    3763                    4 SEPARATED BIT(1) UNAL,
     2894+    3764                  3 P_A(0:5) REDEF P BIT(1) UNAL,
     2895+    3765                  3 * UBIN(7) UNAL,
     2896+    3766                  3 CLASS_TYPE UBIN(3) UNAL,
     2897+    3767                  3 P_ITEM_A(0:%(QI#P_FIELD_LAST_INDEX-QI#P_FIELD_FIRST_INDEX)) UBIN,
     2898+    3768                  3 * UBIN,
     2899+    3769                  3 * UBIN;
     2900+    3770
     2901+    3771            %END_MACRO;
     2902+    3772
     2903+    3773          %MEND;
     2904+    3774
     2905+    3775        %EJECT;
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:113  
     2906+    3776
     2907+    3777          %MACRO QI$FIELD_DAD_P ( STCLASS = "BASED",
     2908+    3778                                  NAME = QI$FIELD_DAD_P );
     2909+    3779
     2910+    3780            %BEGIN_MACRO ( STCLASS = STCLASS );
     2911+    3781
     2912+    3782        /*
     2913+    3783            Presence bits for FIELD-type DADs.
     2914+    3784        */
     2915+    3785          DCL 1 NAME STCLASS ALIGNED,
     2916+    3786                2 P,
     2917+    3787                  3 FILL_CHARACTER_MINIMUM_SIZE BIT(1) UNAL,
     2918+    3788                  3 CLASS_ALPHABET BIT(1) UNAL,
     2919+    3789                  3 DEFAULT BIT(1) UNAL,
     2920+    3790                  3 PROMPT BIT(1) UNAL,
     2921+    3791                  3 REPEATS BIT(1) UNAL,
     2922+    3792                  3 SEPARATED BIT(1) UNAL,
     2923+    3793                2 P_A(0:5) REDEF P BIT(1) UNAL,
     2924+    3794                2 * UBIN(7) UNAL,
     2925+    3795                2 CLASS_TYPE UBIN(3) UNAL,
     2926+    3796                2 P_ITEM_A(0:%(QI#P_FIELD_LAST_INDEX-QI#P_FIELD_FIRST_INDEX)) UBIN;
     2927+    3797
     2928+    3798            %END_MACRO;
     2929+    3799
     2930+    3800          %MEND;
     2931+    3801
     2932+    3802        %EJECT;
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:114  
     2933+    3803
     2934+    3804          %MACRO QI$MAJOR_NODE ( STCLASS = "BASED",
     2935+    3805                                 NAME = QI$MAJOR_NODE );
     2936+    3806
     2937+    3807            %BEGIN_MACRO ( STCLASS = STCLASS );
     2938+    3808
     2939+    3809          DCL 1 NAME STCLASS ALIGNED,
     2940+    3810                2 WORD0 SBIN,
     2941+    3811                2 WORD0_FLAGS REDEF WORD0,
     2942+    3812                  3 INDIRECT BIT(1) UNAL,
     2943+    3813                  3 IS_ANY_DESCENDANT_OUTPUT BIT(1) UNAL,
     2944+    3814                  3 IS_ANY_DESCENDANT_INPUT BIT(1) UNAL,
     2945+    3815                  3 * UBIN(5) UNAL,
     2946+    3816                  3 IS_FORM_VARIABLE BIT(1) UNAL,
     2947+    3817                  3 IS_CONSTANT BIT(1) UNAL,
     2948+    3818                  3 * UBIN(2) UNAL,
     2949+    3819                  3 TYPE UBIN(4) UNAL,
     2950+    3820                2 * UBIN,
     2951+    3821                2 * UBIN,
     2952+    3822                2 SON@P UBIN,
     2953+    3823                2 BROTHER@P UBIN,
     2954+    3824                2 FATHER@P UBIN,
     2955+    3825                          /* chauvanists. */
     2956+    3826                2 STATUS_AREA@D UBIN,
     2957+    3827                2 IDENTIFIER@P UBIN;
     2958+    3828
     2959+    3829            %END_MACRO;
     2960+    3830
     2961+    3831          %MEND;
     2962+    3832
     2963+    3833        %EJECT;
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:115  
     2964+    3834
     2965+    3835          %MACRO QI$MINOR_NODE ( STCLASS = "BASED",
     2966+    3836                                 NAME = QI$MINOR_NODE );
     2967+    3837
     2968+    3838            %BEGIN_MACRO ( STCLASS = STCLASS );
     2969+    3839
     2970+    3840          DCL 1 NAME STCLASS ALIGNED,
     2971+    3841                2 WORD0 SBIN,
     2972+    3842                2 WORD0_FLAGS REDEF WORD0,
     2973+    3843                  3 INDIRECT BIT(1) UNAL,
     2974+    3844                  3 IS_ANY_DESCENDANT_OUTPUT BIT(1) UNAL,
     2975+    3845                  3 IS_ANY_DESCENDANT_INPUT BIT(1) UNAL,
     2976+    3846                  3 * UBIN(5) UNAL,
     2977+    3847                  3 IS_FORM_VARIABLE BIT(1) UNAL,
     2978+    3848                  3 IS_CONSTANT BIT(1) UNAL,
     2979+    3849                  3 * UBIN(2) UNAL,
     2980+    3850                  3 TYPE UBIN(4) UNAL,
     2981+    3851                2 REPEATS UBIN,
     2982+    3852                2 SEPARATED UBIN,
     2983+    3853                2 SON@P UBIN,
     2984+    3854                2 BROTHER@P UBIN,
     2985+    3855                2 FATHER@P UBIN,
     2986+    3856                          /* chauvanists. */
     2987+    3857                2 STATUS_AREA@D UBIN,
     2988+    3858                2 IDENTIFIER@P UBIN;
     2989+    3859
     2990+    3860            %END_MACRO;
     2991+    3861
     2992+    3862          %MEND;
     2993+    3863
     2994+    3864        %EJECT;
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:116  
     2995+    3865
     2996+    3866          %MACRO QI$FILE ( STCLASS = "BASED",
     2997+    3867                           NAME = QI$FILE );
     2998+    3868
     2999+    3869            %BEGIN_MACRO ( STCLASS = STCLASS );
     3000+    3870
     3001+    3871          DCL 1 NAME STCLASS ALIGNED,
     3002+    3872                2 WORD0 SBIN,
     3003+    3873                2 WORD0_FLAGS REDEF WORD0,
     3004+    3874                  3 INDIRECT BIT(1) UNAL,
     3005+    3875                          /* If indirect, this is a pointer to the real DAD,
     3006+    3876                             which lives in user data. */
     3007+    3877                  3 IS_ERROR_STATUS_VALID BIT(1) UNAL,
     3008+    3878                          /* If error_status_valid, there is a DAD pointer
     3009+    3879                             to an ERROR STATUS variable below. */
     3010+    3880                  3 * UBIN(10) UNAL,
     3011+    3881                  3 TYPE UBIN(4) UNAL,
     3012+    3882                          /* Type of file:  transaction or form. */
     3013+    3883                2 * UBIN,
     3014+    3884                2 * UBIN,
     3015+    3885                2 ERROR_STATUS@D UBIN,
     3016+    3886                          /* Offset (in data) of the 8-word space reserved
     3017+    3887                             for the ERROR STATUS variable. */
     3018+    3888                2 * UBIN,
     3019+    3889                2 * UBIN,
     3020+    3890                2 STATUS_AREA@D UBIN,
     3021+    3891                          /* Offset (in data) of the QI$FILE_STATUS
     3022+    3892                             status area for this file FD. */
     3023+    3893                2 IDENTIFIER@P UBIN,
     3024+    3894                          /* Offset (in procedure) of the ATEXTC
     3025+    3895                             of the file name. */
     3026+    3896                2 DCB# UBIN,
     3027+    3897                          /* SYMREFed DCBNUM for this file. */
     3028+    3898                2 USE_PROCEDURE@P UBIN,
     3029+    3899                          /* Offset (in procedure) of the USE procedure. */
     3030+    3900                2 * UBIN;
     3031+    3901
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:117  
     3032+    3902            %END_MACRO;
     3033+    3903
     3034+    3904          %MEND;
     3035+    3905
     3036+    3906        %EJECT;
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:118  
     3037+    3907
     3038+    3908          %MACRO QI$FORM_FILE ( STCLASS = "BASED",
     3039+    3909                                NAME = QI$FORM_FILE );
     3040+    3910
     3041+    3911            %BEGIN_MACRO ( STCLASS = STCLASS );
     3042+    3912
     3043+    3913          DCL 1 NAME STCLASS ALIGNED,
     3044+    3914                2 WORD0 SBIN,
     3045+    3915                2 WORD0_FLAGS REDEF WORD0,
     3046+    3916                  3 INDIRECT BIT(1) UNAL,
     3047+    3917                          /* If indirect, this is a pointer to the read DAD,
     3048+    3918                             which lives in user data. */
     3049+    3919                  3 IS_ERROR_STATUS_VALID BIT(1) UNAL,
     3050+    3920                          /* If error_status_valid, there is a DAD pointer
     3051+    3921                             to an ERROR STATUS variable below. */
     3052+    3922                  3 IS_MESSAGE_LINE_VALID BIT(1) UNAL,
     3053+    3923                          /* if message_line_valid, there is a DAD pointer
     3054+    3924                             to a MESSAGE LINE variable below. */
     3055+    3925                  3 IS_ACTIVATION_STATUS_VALID BIT(1) UNAL,
     3056+    3926                          /* if activation_status_valid, there is a DAD pointer
     3057+    3927                             to an ACTIVATION STATUS variable below. */
     3058+    3928                  3 * UBIN(4) UNAL,
     3059+    3929                  3 IS_FORM_VARIABLE BIT(1) UNAL,
     3060+    3930                          /* if form_variable, then this thing was defined
     3061+    3931                             within the FRAME SECTION. */
     3062+    3932                  3 IS_CONSTANT BIT(1) UNAL,
     3063+    3933                          /* If constant, this item is located in user
     3064+    3934                             procedure. */
     3065+    3935                  3 * UBIN(2) UNAL,
     3066+    3936                  3 TYPE UBIN(4) UNAL,
     3067+    3937                          /* For form DADs, type is
     3068+    3938                             always 11 ('B'X). */
     3069+    3939                2 FRAME_COUNT UBIN,
     3070+    3940                          /* Number of elements in FRAME_LIST_A below. */
     3071+    3941                2 ACTIVATION_STATUS@P UBIN,
     3072+    3942                          /* Offset (in procedure) of the user-supplied
     3073+    3943                             ACTIVATION STATUS variable. */
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:119  
     3074+    3944                2 ERROR_STATUS@D UBIN,
     3075+    3945                          /* Offset (in data) of the 8-word space reserved
     3076+    3946                             for the ERROR STATUS variable. */
     3077+    3947                2 MESSAGE_LINE UBIN,
     3078+    3948                          /* Integer value of the ERROR MESSAGE
     3079+    3949                             line number. */
     3080+    3950                2 RETRY_COUNT UBIN,
     3081+    3951                          /* Integer value of the retry count. */
     3082+    3952                2 STATUS_AREA@D UBIN,
     3083+    3953                          /* Offset (in data) of the QI$FORM_STATUS
     3084+    3954                             status area for this form FD. */
     3085+    3955                2 IDENTIFIER@P UBIN,
     3086+    3956                          /* Offset (in procedure) of the ATEXTC
     3087+    3957                             of the file name. */
     3088+    3958                2 DCB# UBIN,
     3089+    3959                          /* SYMREFed DCBNUM for this FORM_FILE. */
     3090+    3960                2 USE_PROCEDURE,
     3091+    3961                  3 STANDARD,
     3092+    3962                    4 WHERE@P UBIN,
     3093+    3963                          /* Offset (in procedure) of the USE procedure. */
     3094+    3964                  3 VERIFY,
     3095+    3965                    4 WHERE@P UBIN,
     3096+    3966                          /* Offset (in procedure) of the USE procedure. */
     3097+    3967                2 USE_PROCEDURE_A@P(0:1) REDEF USE_PROCEDURE UBIN,
     3098+    3968                2 FRAME_LIST_A@P(0:0) UBIN;
     3099+    3969                          /* List of offsets of FRAMES specified in the
     3100+    3970                             FRAMES ARE clause. */
     3101+    3971
     3102+    3972            %END_MACRO;
     3103+    3973
     3104+    3974          %MEND;
     3105+    3975
     3106+    3976        %EJECT;
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:120  
     3107+    3977
     3108+    3978          %MACRO QI$TRAN_FILE ( STCLASS = "BASED",
     3109+    3979                                NAME = QI$TRAN_FILE );
     3110+    3980
     3111+    3981            %BEGIN_MACRO ( STCLASS = STCLASS );
     3112+    3982
     3113+    3983          DCL 1 NAME STCLASS ALIGNED,
     3114+    3984                2 WORD0 SBIN,
     3115+    3985                2 WORD0_FLAGS REDEF WORD0,
     3116+    3986                  3 INDIRECT BIT(1) UNAL,
     3117+    3987                          /* If indirect, this is a pointer to the read DAD,
     3118+    3988                             which lives in user data. */
     3119+    3989                  3 IS_ERROR_STATUS_VALID BIT(1) UNAL,
     3120+    3990                          /* If error_status_valid, there is a DAD pointer
     3121+    3991                             to an ERROR STATUS variable below. */
     3122+    3992                  3 IS_RELATIVE_KEY_VALID BIT(1) UNAL,
     3123+    3993                          /* If relative_key_valid, there is a DAD pointer
     3124+    3994                             to a RELATIVE KEY variable below. */
     3125+    3995                  3 IS_ID_VALID BIT(1) UNAL,
     3126+    3996                          /* If id_valid, there is a DAD pointer to an
     3127+    3997                             ID variable below. */
     3128+    3998                  3 * UBIN(3) UNAL,
     3129+    3999                  3 INPUT_CLASS BIT(1) UNAL,
     3130+    4000                          /* Input_class is:  0 for response
     3131+    4001                                              1 for report. */
     3132+    4002                  3 ACCESS UBIN(2) UNAL,
     3133+    4003                          /* Access is:  0 for sequential
     3134+    4004                                         1 for dynamic
     3135+    4005                                         2 for random.
     3136+    4006                                         (Not currently used.) */
     3137+    4007                  3 * UBIN(2) UNAL,
     3138+    4008                  3 TYPE UBIN(4) UNAL,
     3139+    4009                          /* For transaction DADs, file_type is
     3140+    4010                             always 12 ('C'X). */
     3141+    4011                2 MAX_RECORD_SIZE UBIN,
     3142+    4012                          /* Size of the largest record in this FD (bytes). */
     3143+    4013                2 BUFFER@D UBIN,
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:121  
     3144+    4014                          /* Offset (in data) of the buffer to be written. */
     3145+    4015                2 ERROR_STATUS@D UBIN,
     3146+    4016                          /* Offset (in data) of the 8-word space reserved
     3147+    4017                             for the ERROR STATUS variable. */
     3148+    4018                2 RELATIVE_KEY@ UBIN,
     3149+    4019                          /* Offset of the DAD describing the
     3150+    4020                             RELATIVE KEY variable.  (Unimplemented).  */
     3151+    4021                2 ID@P UBIN,
     3152+    4022                          /* Offset of the DAD describing the
     3153+    4023                             ID variable. */
     3154+    4024                2 STATUS_AREA@D UBIN,
     3155+    4025                          /* Offset (in data) of the QI$TRAN_STATUS
     3156+    4026                             status area for this transaction FD. */
     3157+    4027                2 IDENTIFIER@P UBIN,
     3158+    4028                          /* Offset (in procedure) of the ATEXTC
     3159+    4029                             of the file name. */
     3160+    4030                2 DCB# UBIN,
     3161+    4031                          /* SYMREFed DCBNUM for this TRAN_FILE. */
     3162+    4032                2 USE_PROCEDURE@P UBIN,
     3163+    4033                          /* Offset (in procedure) of the USE procedure. */
     3164+    4034                2 * UBIN,
     3165+    4035                2 TYPE@P UBIN;
     3166+    4036                          /* Offset of the DAD describing the
     3167+    4037                             TYPE variable. */
     3168+    4038
     3169+    4039            %END_MACRO;
     3170+    4040
     3171+    4041          %MEND;
     3172+    4042
     3173+    4043        %EJECT;
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:122  
     3174+    4044
     3175+    4045          %MACRO QI$FRAME ( STCLASS = "BASED",
     3176+    4046                            NAME = QI$FRAME );
     3177+    4047
     3178+    4048            %BEGIN_MACRO ( STCLASS = STCLASS );
     3179+    4049
     3180+    4050          DCL 1 NAME STCLASS ALIGNED,
     3181+    4051                2 WORD0 SBIN,
     3182+    4052                2 WORD0_FLAGS REDEF WORD0,
     3183+    4053                  3 INDIRECT BIT(1) UNAL,
     3184+    4054                  3 * UBIN(5) UNAL,
     3185+    4055                  3 IS_LINE_ORIGIN_VARIABLE BIT(1) UNAL,
     3186+    4056                  3 IS_COLUMN_ORIGIN_VARIABLE BIT(1) UNAL,
     3187+    4057                  3 IS_FORM_VARIABLE BIT(1) UNAL,
     3188+    4058                  3 IS_CONSTANT BIT(1) UNAL,
     3189+    4059                  3 * UBIN(2) UNAL,
     3190+    4060                  3 TYPE UBIN(4) UNAL,
     3191+    4061                2 LINE_ORIGIN UBIN,
     3192+    4062                2 COLUMN_ORIGIN UBIN,
     3193+    4063                2 SON@P UBIN,
     3194+    4064                2 BROTHER@P UBIN,
     3195+    4065                2 FATHER@P UBIN,
     3196+    4066                          /* chauvanists. */
     3197+    4067                2 STATUS_AREA@D UBIN,
     3198+    4068                2 IDENTIFIER@P UBIN;
     3199+    4069
     3200+    4070            %END_MACRO;
     3201+    4071
     3202+    4072          %MEND;
     3203+    4073
     3204+    4074        %EJECT;
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:123  
     3205+    4075
     3206+    4076        /*
     3207+    4077                 PICture string pointer-to-ers...
     3208+    4078        */
     3209+    4079
     3210+    4080          %MACRO QI$PICTURE_STRING ( STCLASS = "BASED",
     3211+    4081                                     NAME = QI$PICTURE_STRING );
     3212+    4082
     3213+    4083            %BEGIN_MACRO ( STCLASS = STCLASS );
     3214+    4084
     3215+    4085          DCL 1 NAME STCLASS ALIGNED,
     3216+    4086                2 TYPE UBIN(3) UNAL,
     3217+    4087                2 * UBIN(13) UNAL,
     3218+    4088                2 OTHER_STUFF_A(0:0) UBIN;
     3219+    4089
     3220+    4090            %END_MACRO;
     3221+    4091
     3222+    4092          %MEND;
     3223+    4093
     3224+    4094          %MACRO QI$NUMERIC_PICTURE_STRING ( STCLASS = "BASED",
     3225+    4095                           NAME = QI$NUMERIC_PICTURE_STRING );
     3226+    4096
     3227+    4097            %BEGIN_MACRO ( STCLASS = STCLASS );
     3228+    4098
     3229+    4099          DCL 1 NAME STCLASS ALIGNED,
     3230+    4100                2 TYPE UBIN(3) UNAL,
     3231+    4101                2 MAX_DIGIT_COUNT UBIN(5) UNAL,
     3232+    4102                2 * UBIN(2) UNAL,
     3233+    4103                2 DECIMAL_SCALING UBIN(6) UNAL,
     3234+    4104                2 MOP_STRING_COUNT UBIN BYTE UNAL,
     3235+    4105                2 MOP_STRING_A(0:0) UBIN BYTE UNAL;
     3236+    4106
     3237+    4107            %END_MACRO;
     3238+    4108
     3239+    4109          %MEND;
     3240+    4110
     3241+    4111          %MACRO QI$ALPHANUMERIC_PICTURE_STRING ( STCLASS = "BASED",
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:124  
     3242+    4112                           NAME = QI$ALPHANUMERIC_PICTURE_STRING );
     3243+    4113
     3244+    4114            %BEGIN_MACRO ( STCLASS = STCLASS );
     3245+    4115
     3246+    4116          DCL 1 NAME STCLASS ALIGNED,
     3247+    4117                2 TYPE UBIN(3) UNAL,
     3248+    4118                2 EDIT_STRING_COUNT UBIN(13) UNAL,
     3249+    4119                2 EDIT_STRING_A(0:0),
     3250+    4120                  3 FUNCTION UBIN(2) UNAL,
     3251+    4121                  3 LENGTH UBIN(14) UNAL;
     3252+    4122
     3253+    4123            %END_MACRO;
     3254+    4124
     3255+    4125          %MEND;
     3256+    4126
     3257+    4127        %EJECT;
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:125  
     3258+    4128        /*
     3259+    4129                               %%%%%%%  %%%%%%   %%
     3260+    4130                               %%       %%   %%  %%
     3261+    4131                               %%       %%   %%  %%
     3262+    4132                               %%%%%    %%%%%%   %%
     3263+    4133                               %%       %%       %%
     3264+    4134                               %%       %%       %%
     3265+    4135                               %%       %%       %%%%%%%
     3266+    4136
     3267+    4137                           %%
     3268+    4138                           %%             %%
     3269+    4139                       %%% %%   %%% %%  %%%%%%    %%% %%
     3270+    4140                      %%  %%%  %%  %%%    %%     %%  %%%
     3271+    4141                      %%  %%%  %%  %%%    %%     %%  %%%
     3272+    4142                      %%  %%%  %%  %%%    %%     %%  %%%
     3273+    4143                       %%% %%   %%% %%     %%%    %%% %%
     3274+    4144                                                                            */
     3275+    4145
     3276+    4146          %MACRO QI$TERMINAL_ATTRIBUTES ( STCLASS = "BASED",
     3277+    4147                                          NAME = QI$TERMINAL_ATTRIBUTES );
     3278+    4148
     3279+    4149            %BEGIN_MACRO ( STCLASS = STCLASS );
     3280+    4150
     3281+    4151        /*    Although the compiler never explicitly generates this,
     3282+    4152              it's implicitly the largest possible *thing* to say
     3283+    4153              ACCEPT *thing* FROM TERMINAL-ATTRIBUTES
     3284+    4154              about.  See the FPL manual under the ACCEPT verb.
     3285+    4155        */
     3286+    4156
     3287+    4157          DCL 1 NAME STCLASS CALIGNED,
     3288+    4158                2 STATION_NAME CHAR(8) CALIGNED,
     3289+    4159                2 CURRENT_DEVICE_PROFILE CHAR(12) CALIGNED,
     3290+    4160                2 NUMBER_OF_LINES CHAR(4) CALIGNED,
     3291+    4161                2 NUMBER_OF_COLUMNS CHAR(4) CALIGNED,
     3292+    4162                2 DEVICE_I_O_CAPABILITY CHAR(1) CALIGNED,
     3293+    4163                2 CONNECTION_TYPE CHAR(1) CALIGNED,
     3294+    4164                2 CP_6_NODE CHAR(4) CALIGNED,
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:126  
     3295+    4165                2 CP_6_PORT CHAR(4) CALIGNED,
     3296+    4166                2 PROGRAM_EXECUTION CHAR(1) CALIGNED,
     3297+    4167                2 DEVICE_TYPE CHAR(1) CALIGNED,
     3298+    4168                2 CP_6_CONTROLLER CHAR(4) CALIGNED,
     3299+    4169                2 CP_6_DEVICE CHAR(4) CALIGNED;
     3300+    4170
     3301+    4171          DCL 1 %CHARTEXT(CONCAT(TEXTCHAR(NAME),'_TEXT')) REDEF NAME CHAR(48);
     3302+    4172
     3303+    4173            %END_MACRO;
     3304+    4174
     3305+    4175          %MEND;
     3306+    4176
     3307+    4177        %EJECT;
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:127  
     3308+    4178          %MACRO QI$ACTIVATION_STATUS ( STCLASS = "BASED",
     3309+    4179                                        NAME = QI$ACTIVATION_STATUS );
     3310+    4180
     3311+    4181            %BEGIN_MACRO ( STCLASS = STCLASS );
     3312+    4182
     3313+    4183        /*    Although the compiler never explicitly generates this,
     3314+    4184              it's implicitly the largest possible *thing* to say
     3315+    4185              ACTIVATION STATUS IS *thing*
     3316+    4186              about.  See the FPL manual under the SELECT clause.
     3317+    4187        */
     3318+    4188
     3319+    4189          DCL 1 NAME STCLASS CALIGNED,
     3320+    4190                2 ACTIVATION_CHARACTER CHAR(1) CALIGNED,
     3321+    4191                2 ACTIVATION_POSITION CHAR(3) CALIGNED,
     3322+    4192                2 ACTIVATION_LINE CHAR(3) CALIGNED,
     3323+    4193                2 ACTIVATION_COLUMN CHAR(3) CALIGNED,
     3324+    4194                2 ACTIVATION_FIELD CHAR(30) CALIGNED;
     3325+    4195
     3326+    4196          DCL 1 %CHARTEXT(CONCAT(TEXTCHAR(NAME),'_TEXT')) REDEF NAME CHAR(40);
     3327+    4197
     3328+    4198            %END_MACRO;
     3329+    4199
     3330+    4200          %MEND;
     3331+    4201
     3332+    4202        %EJECT;
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:128  
     3333+    4203
     3334+    4204          %MACRO QI$PERFORM_BLOCK ( STCLASS = "BASED",
     3335+    4205                                    NAME = QI$PERFORM_BLOCK );
     3336+    4206
     3337+    4207            %BEGIN_MACRO ( STCLASS = STCLASS );
     3338+    4208
     3339+    4209        /*
     3340+    4210          This structure is used by PERFM and PERFMT routines to refer
     3341+    4211          to iteration data.
     3342+    4212        */
     3343+    4213          DCL 1 NAME STCLASS ALIGNED,
     3344+    4214                2 FROM@P UBIN,
     3345+    4215                2 RETURN$ PTR,
     3346+    4216                2 ITERATION UBIN;
     3347+    4217
     3348+    4218            %END_MACRO;
     3349+    4219
     3350+    4220          %MEND;
     3351+    4221
     3352+    4222        %EJECT;
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:129  
     3353+    4223
     3354+    4224          %MACRO QI$INDICATORS
     3355+    4225                 ( NAME = QI$INDICATORS,
     3356+    4226                   STCLASS = "BASED",
     3357+    4227                   LVL = 1,
     3358+    4228                   END_STRUCTURE ( YES = ";",
     3359+    4229                                   NO = ",",
     3360+    4230                                   ANY ) = ";" );
     3361+    4231
     3362+    4232            %BEGIN_MACRO ( STCLASS = STCLASS );
     3363+    4233
     3364+    4234            %IF LVL = 1;
     3365+    4235          DCL 1 NAME STCLASS ALIGNED,
     3366+    4236            %ELSE;
     3367+    4237              %(LVL) NAME ALIGNED,
     3368+    4238            %ENDIF;
     3369+    4239                %(LVL+1) IS_ACTIVE BIT(1) UNAL,
     3370+    4240                                           /* Is (or is in) an ACTIVATEd frame */
     3371+    4241                %(LVL+1) ENABLED_FLAGS,
     3372+    4242                  %(LVL+2) IS_OUTPUT BIT(1) UNAL,
     3373+    4243                                           /* ENABLEd for OUTPUT */
     3374+    4244                  %(LVL+2) IS_INPUT BIT(1) UNAL,
     3375+    4245                                           /* ENABLEd for INPUT */
     3376+    4246                %(LVL+1) ENABLED_VALUE REDEF ENABLED_FLAGS UBIN(2) UNAL,
     3377+    4247                %(LVL+1) STATE_FLAGS,
     3378+    4248                  %(LVL+2) IS_AVAILABLE BIT(1) UNAL,
     3379+    4249                                           /* Last operation was a READ or ACCEPT */
     3380+    4250                  %(LVL+2) IS_PRESENTED BIT(1) UNAL,
     3381+    4251                                           /* Last operation was a PRESENT */
     3382+    4252                %(LVL+1) STATE_VALUE REDEF STATE_FLAGS UBIN(2) UNAL,
     3383+    4253                %(LVL+1) OPEN_FLAGS,
     3384+    4254                  %(LVL+2) IS_OUTPUT BIT(1) UNAL,
     3385+    4255                                           /* Is (or is in) an FD opened
     3386+    4256                                              for INPUT or I-O */
     3387+    4257                  %(LVL+2) IS_INPUT BIT(1) UNAL,
     3388+    4258                                           /* Is (or is in) an FD opened
     3389+    4259                                              for OUTPUT or I-O */
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:130  
     3390+    4260                %(LVL+1) OPEN_VALUE REDEF OPEN_FLAGS UBIN(2) UNAL,
     3391+    4261                %(LVL+1) * UBIN(5) UNAL,
     3392+    4262
     3393+    4263            %IF LVL = 1;
     3394+    4264                %(LVL+1) TYPE UBIN(4) UNAL;
     3395+    4265                                           /* Type is form, frame, or field */
     3396+    4266          DCL 1 %CHARTEXT(CONCAT(TEXTCHAR(NAME),'_A'))(0:0) REDEF NAME UBIN ALIGNED;
     3397+    4267            %ELSE;
     3398+    4268                %(LVL+1) TYPE UBIN(4) UNAL,
     3399+    4269                                           /* Type is form, frame, or field */
     3400+    4270         %(LVL) %CHARTEXT(CONCAT(TEXTCHAR(NAME),'_A'))(0:0) REDEF NAME UBIN ALIGNED END_STRU
              4270        CTURE
     3401+    4271            %ENDIF;
     3402+    4272
     3403+    4273            %END_MACRO;
     3404+    4274
     3405+    4275          %MEND;
     3406+    4276
     3407+    4277        %EJECT;
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:131  
     3408+    4278
     3409+    4279          %MACRO QI$FIELD_STATUS ( STCLASS = "BASED",
     3410+    4280                                   NAME = QI$FIELD_STATUS );
     3411+    4281
     3412+    4282            %BEGIN_MACRO ( STCLASS = STCLASS );
     3413+    4283
     3414+    4284          DCL 1 NAME STCLASS ALIGNED,
     3415+    4285                2 GZ,
     3416+    4286                  3 FIELD_START_INDEX UBIN,
     3417+    4287                                           /* starting index into interface table */
     3418+    4288                  3 FIELD_STOP_INDEX UBIN,
     3419+    4289                                           /* ending index into interface table */
     3420+    4290                %QI$INDICATORS ( NAME = INDICATORS,
     3421+    4291                                 STCLASS = STCLASS,
     3422+    4292                                 LVL = 2 );
     3423+    4293
     3424+    4294            %END_MACRO;
     3425+    4295
     3426+    4296          %MEND;
     3427+    4297
     3428+    4298        %EJECT;
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:132  
     3429+    4299
     3430+    4300          %MACRO QI$MAJOR_STATUS ( STCLASS = "BASED",
     3431+    4301                                   NAME = QI$MAJOR_STATUS );
     3432+    4302
     3433+    4303            %BEGIN_MACRO ( STCLASS = STCLASS );
     3434+    4304
     3435+    4305          DCL 1 NAME STCLASS ALIGNED,
     3436+    4306                2 GZ,
     3437+    4307                  3 FIELD_START_INDEX UBIN,
     3438+    4308                                           /* starting index into interface table */
     3439+    4309                  3 FIELD_STOP_INDEX UBIN,
     3440+    4310                                           /* ending index into interface table */
     3441+    4311                %QI$INDICATORS ( NAME = INDICATORS,
     3442+    4312                                 STCLASS = STCLASS,
     3443+    4313                                 LVL = 2 );
     3444+    4314
     3445+    4315            %END_MACRO;
     3446+    4316
     3447+    4317          %MEND;
     3448+    4318
     3449+    4319        %EJECT;
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:133  
     3450+    4320
     3451+    4321          %MACRO QI$MINOR_STATUS ( STCLASS = "BASED",
     3452+    4322                                   NAME = QI$MINOR_STATUS );
     3453+    4323
     3454+    4324            %BEGIN_MACRO ( STCLASS = STCLASS );
     3455+    4325
     3456+    4326          DCL 1 NAME STCLASS ALIGNED,
     3457+    4327                2 GZ,
     3458+    4328                  3 FIELD_START_INDEX UBIN,
     3459+    4329                                           /* starting index into interface table */
     3460+    4330                  3 FIELD_STOP_INDEX UBIN,
     3461+    4331                                           /* ending index into interface table */
     3462+    4332                %QI$INDICATORS ( NAME = INDICATORS,
     3463+    4333                                 STCLASS = STCLASS,
     3464+    4334                                 LVL = 2 );
     3465+    4335
     3466+    4336            %END_MACRO;
     3467+    4337
     3468+    4338          %MEND;
     3469+    4339
     3470+    4340        %EJECT;
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:134  
     3471+    4341
     3472+    4342          %MACRO QI$FILE_STATUS ( STCLASS = "BASED",
     3473+    4343                                  NAME = QI$FILE_STATUS );
     3474+    4344
     3475+    4345            %BEGIN_MACRO ( STCLASS = STCLASS );
     3476+    4346
     3477+    4347          DCL 1 NAME STCLASS ALIGNED,
     3478+    4348                2 CURRENT,
     3479+    4349                  3 * BIT(5) UNAL,
     3480+    4350                  3 USAGE,
     3481+    4351                    4 OPENED BIT(1) UNAL,
     3482+    4352                          /* Opened is:  0 for never opened
     3483+    4353                                         1 for opened at least once. */
     3484+    4354                    4 CLOSED BIT(1) UNAL,
     3485+    4355                          /* Closed is:  0 for never closed
     3486+    4356                                         1 for closed at least once. */
     3487+    4357                  3 * UBIN(9) UNAL,
     3488+    4358                2 BACK_LINK@P UBIN,
     3489+    4359                          /* Back_link to the file FD
     3490+    4360                             (in procedure). */
     3491+    4361                2 FLINK$ PTR,
     3492+    4362                          /* Pointer to next opened FD of this type. */
     3493+    4363                2 * UBIN,
     3494+    4364                2 * UBIN,
     3495+    4365                2 * UBIN,
     3496+    4366                2 * UBIN,
     3497+    4367                %QI$INDICATORS ( NAME = INDICATORS,
     3498+    4368                                 STCLASS = STCLASS,
     3499+    4369                                 LVL = 2 );
     3500+    4370
     3501+    4371            %END_MACRO;
     3502+    4372
     3503+    4373          %MEND;
     3504+    4374
     3505+    4375        %EJECT;
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:135  
     3506+    4376
     3507+    4377          %MACRO QI$FORM_STATUS ( STCLASS = "BASED",
     3508+    4378                                  NAME = QI$FORM_STATUS );
     3509+    4379
     3510+    4380            %BEGIN_MACRO ( STCLASS = STCLASS );
     3511+    4381
     3512+    4382          DCL 1 NAME STCLASS ALIGNED,
     3513+    4383                2 CURRENT,
     3514+    4384                  3 * BIT(3) UNAL,
     3515+    4385                  3 IS_USE_PROCEDURE_ACTIVE,
     3516+    4386                    4 STANDARD BIT(1) UNAL,
     3517+    4387                    4 VERIFY BIT(1) UNAL,
     3518+    4388                  3 USAGE,
     3519+    4389                    4 OPENED BIT(1) UNAL,
     3520+    4390                          /* Opened is:  0 for never opened
     3521+    4391                                         1 for opened at least once. */
     3522+    4392                    4 CLOSED BIT(1) UNAL,
     3523+    4393                          /* Closed is:  0 for never closed
     3524+    4394                                         1 for closed at least once. */
     3525+    4395                  3 IS_MESSAGE_LINE_NON_BLANK BIT(1) UNAL,
     3526+    4396                          /* Set if the screen is currently displaying
     3527+    4397                             a non-blank MESSAGE LINE. */
     3528+    4398                  3 IS_UPDATED BIT(1) UNAL,
     3529+    4399                          /* Set if the screen has been updated with
     3530+    4400                             a DISPLAY, WRITE or CLEAR and must be
     3531+    4401                             M$DEVICEd before a STOP "literal" or
     3532+    4402                             a host read. */
     3533+    4403                  3 * UBIN(7) UNAL,
     3534+    4404                2 BACK_LINK@P UBIN,
     3535+    4405                          /* Back_link to the form FD
     3536+    4406                             (in procedure). */
     3537+    4407                2 FLINK$ PTR,
     3538+    4408                          /* Pointer to next opened screen FD. */
     3539+    4409                2 GZ,
     3540+    4410                  3 NEXT_AVAILABLE_FLDID UBIN,
     3541+    4411                          /* Next VDH FLDID to use for activating frames
     3542+    4412                             within this form. */
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:136  
     3543+    4413                2 * UBIN,
     3544+    4414                2 * UBIN,
     3545+    4415                2 * UBIN,
     3546+    4416                %QI$INDICATORS ( NAME = INDICATORS,
     3547+    4417                                 STCLASS = STCLASS,
     3548+    4418                                 LVL = 2 );
     3549+    4419
     3550+    4420            %END_MACRO;
     3551+    4421
     3552+    4422          %MEND;
     3553+    4423
     3554+    4424        %EJECT;
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:137  
     3555+    4425
     3556+    4426          %MACRO QI$TRAN_STATUS ( STCLASS = "BASED",
     3557+    4427                                  NAME = QI$TRAN_STATUS );
     3558+    4428
     3559+    4429            %BEGIN_MACRO ( STCLASS = STCLASS );
     3560+    4430
     3561+    4431          DCL 1 NAME STCLASS ALIGNED,
     3562+    4432                2 CURRENT,
     3563+    4433                  3 * BIT(3) UNAL,
     3564+    4434                  3 IS_RRR_ID_VALID BIT(1) UNAL,
     3565+    4435                          /* If is_rrr_id_valid, rrr_id is real and we
     3566+    4436                             should M$REP_OTP_COMP. */
     3567+    4437                  3 * BIT(1) UNAL,
     3568+    4438                  3 USAGE,
     3569+    4439                    4 OPENED BIT(1) UNAL,
     3570+    4440                          /* Opened is:  0 for never opened
     3571+    4441                                         1 for opened at least once. */
     3572+    4442                    4 CLOSED BIT(1) UNAL,
     3573+    4443                          /* Closed is:  0 for never closed
     3574+    4444                                         1 for closed at least once. */
     3575+    4445                  3 * UBIN(9) UNAL,
     3576+    4446                2 BACK_LINK@P UBIN,
     3577+    4447                          /* Back_link to the transaction FD
     3578+    4448                             (in procedure). */
     3579+    4449                2 FLINK$ PTR,
     3580+    4450                          /* Pointer to next opened transaction FD. */
     3581+    4451                2 LAST_ID UBIN(32),
     3582+    4452                          /* Last transaction id produced by a
     3583+    4453                             WRITE to this FD. */
     3584+    4454                2 RRR_ID UBIN(32),
     3585+    4455                          /* RRR id of the last record READ,
     3586+    4456                             if it was WRITtEn secure. */
     3587+    4457                %QI$INDICATORS ( NAME = INDICATORS,
     3588+    4458                                 STCLASS = STCLASS,
     3589+    4459                                 LVL = 2 );
     3590+    4460
     3591+    4461            %END_MACRO;
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:138  
     3592+    4462
     3593+    4463          %MEND;
     3594+    4464
     3595+    4465        %EJECT;
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:139  
     3596+    4466
     3597+    4467          %MACRO QI$FRAME_STATUS ( STCLASS = "BASED",
     3598+    4468                                   NAME = QI$FRAME_STATUS );
     3599+    4469
     3600+    4470            %BEGIN_MACRO ( STCLASS = STCLASS );
     3601+    4471
     3602+    4472          DCL 1 NAME STCLASS ALIGNED,
     3603+    4473                2 GZ,
     3604+    4474                  3 FIELD_START_INDEX UBIN,
     3605+    4475                                           /* Starting index into interface table. */
     3606+    4476                  3 FIELD_STOP_INDEX UBIN,
     3607+    4477                                           /* Ending index into interface table. */
     3608+    4478                  3 FLDID_START UBIN,
     3609+    4479                                           /* First VDH FLDID for this frame. */
     3610+    4480                  3 FLDID_STOP UBIN,
     3611+    4481                                           /* Last VDH FLDID for this frame. */
     3612+    4482                  3 HEADER$ PTR,
     3613+    4483                                           /* Pointer to interface header area */
     3614+    4484                  3 START$ PTR,
     3615+    4485                                           /* Pointer to start of interface array */
     3616+    4486                  3 STOP$ PTR,
     3617+    4487                                           /* Pointer to end of interface array */
     3618+    4488                2 CURRENT,
     3619+    4489                  3 * BIT(5) UNAL,
     3620+    4490                  3 USAGE,
     3621+    4491                    4 ACTIVATED BIT(1) UNAL,
     3622+    4492                          /* Activated is:  0 for never activated
     3623+    4493                                            1 for activated at least once.  */
     3624+    4494                    4 DEACTIVATED BIT(1) UNAL,
     3625+    4495                          /* Deactivated is:  0 for never deactivated
     3626+    4496                                              1 for deactivated at least once.  */
     3627+    4497                  3 * UBIN(9) UNAL,
     3628+    4498                2 FORM_BACK_LINK@P UBIN,
     3629+    4499                                           /* Back_link to the form FD
     3630+    4500                                              (in procedure). */
     3631+    4501                %QI$INDICATORS ( NAME = INDICATORS,
     3632+    4502                                 STCLASS = STCLASS,
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:140  
     3633+    4503                                 LVL = 2 );
     3634+    4504
     3635+    4505            %END_MACRO;
     3636+    4506
     3637+    4507          %MEND;
     3638+    4508
     3639+    4509        %EJECT;
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:141  
     3640+    4510
     3641+    4511        /*
     3642+    4512                               %%%%%%%  %%%%%%   %%
     3643+    4513                               %%       %%   %%  %%
     3644+    4514                               %%       %%   %%  %%
     3645+    4515                               %%%%%    %%%%%%   %%
     3646+    4516                               %%       %%       %%
     3647+    4517                               %%       %%       %%
     3648+    4518                               %%       %%       %%%%%%%
     3649+    4519                                                                     %%%
     3650+    4520                                                                      %%
     3651+    4521              %%% %%   %%%%%   %% %%%    %%%%%   %% %%%%   %%% %%     %%
     3652+    4522             %%  %%%  %%   %%  %%%  %%  %%   %%  %%%%     %%  %%%     %%
     3653+    4523             %%  %%%  %%%%%%%  %%   %%  %%%%%%%  %%%      %%  %%%     %%
     3654+    4524             %%  %%%  %%       %%   %%  %%       %%       %%  %%%     %%
     3655+    4525              %%% %%   %%%%%   %%   %%   %%%%%   %%        %%% %%   %%%%%%
     3656+    4526                  %%
     3657+    4527              %%%%%
     3658+    4528                                                                            */
     3659+    4529
     3660+    4530          %MACRO QI$GENERAL_BASED ( STCLASS = "BASED" );
     3661+    4531
     3662+    4532            %BEGIN_MACRO ( STCLASS = STCLASS );
     3663+    4533
     3664+    4534        /*
     3665+    4535            some useful stuff...
     3666+    4536        */
     3667+    4537          DCL QI$PROC_A@P(0:0) UBIN STCLASS;
     3668+    4538          DCL QI$DATA_A@D(0:0) UBIN STCLASS;
     3669+    4539          DCL QI$AREA_A@(0:0) UBIN STCLASS;
     3670+    4540
     3671+    4541          DCL 1 QI$BITS ALIGNED STCLASS,
     3672+    4542                2 BIT_A(0:0) BIT(1) UNAL;
     3673+    4543          DCL QI$CHAR_A(0:0) CHAR(1) CALIGNED STCLASS;
     3674+    4544          DCL QI$UBYTE_A(0:0) UBIN BYTE CALIGNED STCLASS;
     3675+    4545          DCL QI$SBYTE_A(0:0) SBIN BYTE CALIGNED STCLASS;
     3676+    4546          DCL QI$UWORD_A(0:0) UBIN STCLASS;
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:142  
     3677+    4547          DCL QI$SWORD_A(0:0) SBIN STCLASS;
     3678+    4548          DCL QI$DWORD_A(0:0) BIT(32) ALIGNED STCLASS;
     3679+    4549          DCL QI$PTR_A$(0:0) PTR STCLASS;
     3680+    4550
     3681+    4551          DCL 1 QI$MESSAGE_TYPE CALIGNED STCLASS,
     3682+    4552                2 TEXT CHAR(8) UNAL;
     3683+    4553          DCL QI$MESSAGE_TYPE_A(0:7) REDEF QI$MESSAGE_TYPE UBIN BYTE CALIGNED;
     3684+    4554
     3685+    4555          DCL 1 QI$ERROR_STATUS CALIGNED STCLASS,
     3686+    4556                2 TEXT CHAR(8) UNAL;
     3687+    4557          DCL QI$ERROR_STATUS_A(0:7) REDEF QI$ERROR_STATUS UBIN BYTE CALIGNED;
     3688+    4558
     3689+    4559          DCL 1 QI$ERROR_MESSAGE_LINE CALIGNED STCLASS,
     3690+    4560                2 TEXT CHAR(%QI#ERROR_MESSAGE_LINE_SIZE) UNAL;
     3691+    4561         DCL QI$ERROR_MESSAGE_LINE_A(0:%(QI#ERROR_MESSAGE_LINE_SIZE-1)) REDEF QI$ERROR_MESSA
              4561        GE_LINE UBIN BYTE CALIGNED;
     3692+    4562
     3693+    4563          DCL 1 QI$IDENTIFIER CALIGNED STCLASS,
     3694+    4564                2 TEXT CHAR(30) UNAL;
     3695+    4565          DCL QI$IDENTIFIER_A(0:29) REDEF QI$IDENTIFIER UBIN BYTE CALIGNED;
     3696+    4566
     3697+    4567          DCL 1 QI$VARIABLE_IDENTIFIER CALIGNED STCLASS,
     3698+    4568                2 LENGTH UBIN BYTE UNAL,
     3699+    4569                2 TEXT CHAR(QI$VARIABLE_IDENTIFIER.LENGTH) UNAL;
     3700+    4570
     3701+    4571        /*
     3702+    4572            note that the following require the QI_CONTEXT macro to be
     3703+    4573            invoked along with the QI$GENERAL one.
     3704+    4574        */
     3705+    4575          DCL 1 QI$VARIABLE_STRING_SOURCE CALIGNED STCLASS,
     3706+    4576                2 TEXT CHAR(QI_1.OP.LEN.S) UNAL;
     3707+    4577          DCL 1 QI$VARIABLE_STRING_TARGET CALIGNED STCLASS,
     3708+    4578                2 TEXT CHAR(QI_1.OP.LEN.T) UNAL;
     3709+    4579          DCL 1 QI$VARIABLE_STRING_AUX CALIGNED STCLASS,
     3710+    4580                2 TEXT CHAR(QI_1.OP.LEN.AUX) UNAL;
     3711+    4581
     3712+    4582            %END_MACRO;
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:143  
     3713+    4583
     3714+    4584          %MEND;
     3715+    4585
     3716+    4586        %EJECT;
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:144  
     3717+    4587
     3718+    4588        /*
     3719+    4589                           %%       %%
     3720+    4590                           %%       %%
     3721+    4591              %%% %%   %%% %%   %%% %%  %% %%%%   %%%%%    %%%%%%   %%%%%%
     3722+    4592             %%  %%%  %%  %%%  %%  %%%  %%%%     %%   %%  %%       %%
     3723+    4593             %%  %%%  %%  %%%  %%  %%%  %%%      %%%%%%%   %%%%%    %%%%%
     3724+    4594             %%  %%%  %%  %%%  %%  %%%  %%       %%            %%       %%
     3725+    4595              %%% %%   %%% %%   %%% %%  %%        %%%%%   %%%%%%   %%%%%%
     3726+    4596
     3727+    4597                %%%      %%                  %%
     3728+    4598               %%                            %%
     3729+    4599               %%       %%%    %% %%%    %%% %%   %%%%%   %% %%%%   %%%%%%
     3730+    4600             %%%%%%      %%    %%%  %%  %%  %%%  %%   %%  %%%%     %%
     3731+    4601               %%        %%    %%   %%  %%  %%%  %%%%%%%  %%%       %%%%%
     3732+    4602               %%        %%    %%   %%  %%  %%%  %%       %%            %%
     3733+    4603               %%      %%%%%%  %%   %%   %%% %%   %%%%%   %%       %%%%%%
     3734+    4604                                                                            */
     3735+    4605
     3736+    4606          %MACRO DATA_ADDRESS ( THING@D = WHATS_THIS_NO_THING@D,
     3737+    4607                                CHECK_FOR_INDIRECTION ( YES = '1'B,
     3738+    4608                                                        NO = '0'B ) = NO,
     3739+    4609                                RESULT$ = WHATS_THIS_NO_RESULT$ );
     3740+    4610
     3741+    4611            %BEGIN_MACRO ( STCLASS = STCLASS );
     3742+    4612
     3743+    4613              /* This is the same DAD-tracking-down code
     3744+    4614                 as is used in QCS$SETUP. */
     3745+    4615              DO;
     3746+    4616                RESULT$ = PINCRW ( QI_1.BASE.DATA$, THING@D );
     3747+    4617            %IF CHECK_FOR_INDIRECTION;
     3748+    4618                DO WHILE ( RESULT$ -> QI$DAD.WORD0_FLAGS.INDIRECT );
     3749+    4619                  RESULT$ = PINCRW ( QI_1.BASE_A$ (
     3750+    4620                            BITBIN ( RESULT$ -> QI$DAD.WORD0_FLAGS.IS_CONSTANT )
     3751+    4621                                                  ),
     3752+    4622                                     RESULT$ -> QI$DAD.PSEUDO_CIP.DATA@ );
     3753+    4623                END;
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:145  
     3754+    4624            %ENDIF;
     3755+    4625              END;
     3756+    4626
     3757+    4627            %END_MACRO;
     3758+    4628
     3759+    4629          %MEND;
     3760+    4630
     3761+    4631          %MACRO PROC_ADDRESS ( THING@P = WHATS_THIS_NO_THING@P,
     3762+    4632                                CHECK_FOR_INDIRECTION ( YES = '1'B,
     3763+    4633                                                        NO = '0'B ) = NO,
     3764+    4634                                RESULT$ = WHATS_THIS_NO_RESULT$ );
     3765+    4635
     3766+    4636            %BEGIN_MACRO ( STCLASS = STCLASS );
     3767+    4637
     3768+    4638              /* This is the same DAD-tracking-down code
     3769+    4639                 as is used in QCS$SETUP. */
     3770+    4640              DO;
     3771+    4641                RESULT$ = PINCRW ( QI_1.BASE.PROC$, THING@P );
     3772+    4642            %IF CHECK_FOR_INDIRECTION;
     3773+    4643                DO WHILE ( RESULT$ -> QI$DAD.WORD0_FLAGS.INDIRECT );
     3774+    4644                  RESULT$ = PINCRW ( QI_1.BASE_A$ (
     3775+    4645                            BITBIN ( RESULT$ -> QI$DAD.WORD0_FLAGS.IS_CONSTANT )
     3776+    4646                                                  ),
     3777+    4647                                     RESULT$ -> QI$DAD.PSEUDO_CIP.DATA@ );
     3778+    4648                END;
     3779+    4649            %ENDIF;
     3780+    4650              END;
     3781+    4651
     3782+    4652            %END_MACRO;
     3783+    4653
     3784+    4654          %MEND;
     3785+    4655
     3786+    4656          %MACRO LINKAGE_ARGUMENT_ADDRESS ( THING$ = WHATS_THIS_NO_THING$,
     3787+    4657                                            RESULT$ = WHATS_THIS_NO_RESULT$ );
     3788+    4658
     3789+    4659            %BEGIN_MACRO ( STCLASS = STCLASS );
     3790+    4660
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:146  
     3791+    4661              /* This is the same DATA$-tracking-down code
     3792+    4662                 as is used in QCS$SETUP. */
     3793+    4663              DO;
     3794+    4664                RESULT$ =
     3795+    4665                  PINCRW (
     3796+    4666                  QI_1.ARGUMENTS_AND_OR_FREE_AUTO_A$$ ->
     3797+    4667                  QI$PTR_A$ ( THING$ ->
     3798+    4668                  QI$LINKAGE_ARGUMENT_DESCRIPTOR.ARGUMENT_NUMBER ),
     3799+    4669                  THING$ ->
     3800+    4670                  QI$LINKAGE_ARGUMENT_DESCRIPTOR.WORD_OFFSET_FROM_01_ITEM
     3801+    4671                  );
     3802+    4672              END;
     3803+    4673
     3804+    4674            %END_MACRO;
     3805+    4675
     3806+    4676          %MEND;
     3807+    4677
     3808+    4678          %MACRO PRESENCE_DISPLACEMENT ( PRESENCE_THING$ = WHATS_THIS_NO_PRESENCE_THING$,
     3809+    4679                                         INDEX = WHATS_THIS_NO_INDEX,
     3810+    4680                                         START = 0,
     3811+    4681                                         STOP = 0,
     3812+    4682                                         RESULT = WHATS_THIS_NO_RESULT );
     3813+    4683
     3814+    4684            %BEGIN_MACRO ( STCLASS = STCLASS );
     3815+    4685
     3816+    4686              DO;
     3817+    4687                RESULT = -1;
     3818+    4688                DO INDEX = START TO STOP;
     3819+    4689                  IF PRESENCE_THING$ -> QI$BITS.BIT_A ( INDEX )
     3820+    4690                  THEN
     3821+    4691                    RESULT = RESULT + 1;
     3822+    4692                END;
     3823+    4693              END;
     3824+    4694
     3825+    4695            %END_MACRO;
     3826+    4696
     3827+    4697          %MEND;
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:147  
     3828+    4698
     3829+    4699        %EJECT;
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:148  
     3830+    4700        /*
     3831+    4701                               %%%%%%%  %%
     3832+    4702                                  %%    %%
     3833+    4703                                  %%    %% %%%    %%%%%
     3834+    4704                                  %%    %%%  %%  %%   %%
     3835+    4705                                  %%    %%   %%  %%%%%%%
     3836+    4706                                  %%    %%   %%  %%
     3837+    4707                                  %%    %%   %%   %%%%%
     3838+    4708
     3839+    4709                                                   %%%
     3840+    4710                                                    %%
     3841+    4711                      %% %%%    %%%%%    %%%%%      %%
     3842+    4712                      %%%  %%  %%   %%  %%   %%     %%
     3843+    4713                      %%%  %%  %%   %%  %%   %%     %%
     3844+    4714                      %%%  %%  %%   %%  %%   %%     %%
     3845+    4715                      %% %%%    %%%%%    %%%%%    %%%%%%
     3846+    4716                      %%
     3847+    4717                      %%
     3848+    4718                                                                            */
     3849+    4719
     3850+    4720        /*D* NAME:         GENERAL_PURPOSE_CIPS
     3851+    4721             PURPOSE:      To provide a common pool of CONSTANT CIP
     3852+    4722                           descriptors.
     3853+    4723             DESCRIPTION:  Whenever a CIP operation block (QI@CIP_OPERATION)
     3854+    4724                           or a lone CIP descriptor (QI_CIP_DESCRIPTOR) is
     3855+    4725                           generated in CONSTANT storage, it appears here as
     3856+    4726                           a macro which is invoked with STCLASS = CONSTANT
     3857+    4727                           and NAME = QI_name in QI_DATA_D, with
     3858+    4728                           STCLASS = SYMREF and NAME = QI_name in the
     3859+    4729                           QI_GENERAL_CIPS invocation-macro, and possibly with
     3860+    4730                           STCLASS = AUTO and NAME = QI@name in the refer-
     3861+    4731                           encing module(s).  This will hopefully avoid
     3862+    4732                           duplication of these structures in diverse modules,
     3863+    4733                           i.e., since it's such a pain to generate them, the
     3864+    4734                           temptation will be to look here to see if there's
     3865+    4735                           already one of the desired initialization.
     3866+    4736                           Maybe it's not such a great idea; who asked you
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:149  
     3867+    4737                           anyway?
     3868+    4738        */
     3869+    4739        /*
     3870+    4740                       %%%%%   %% %%%    %%%%%   %% %%%%
     3871+    4741                      %%   %%  %%%  %%  %%   %%  %%%%
     3872+    4742                      %%   %%  %%%  %%  %%%%%%%  %%%
     3873+    4743                      %%   %%  %%%  %%  %%       %%        %%%
     3874+    4744                       %%%%%   %% %%%    %%%%%   %%        %%%
     3875+    4745                               %%
     3876+    4746                               %%
     3877+    4747               %%%
     3878+    4748                %%
     3879+    4749                %%     %%% %%   %%% %%   %%%%%    %%%%%   %% %%%
     3880+    4750                %%    %%  %%%  %%  %%%  %%   %%  %%   %%  %%%  %%
     3881+    4751                %%    %%  %%%  %%  %%%  %%   %%  %%   %%  %%   %%
     3882+    4752                %%    %%  %%%  %%  %%%  %%   %%  %%   %%  %%   %%
     3883+    4753              %%%%%%   %%% %%   %%% %%   %%%%%    %%%%%   %%   %%
     3884+    4754                                    %%
     3885+    4755                                %%%%%
     3886+    4756                                                                            */
     3887+    4757          %MACRO QI@ALR ( STCLASS = "AUTO",
     3888+    4758                          NAME = QI@ALR );
     3889+    4759
     3890+    4760            %BEGIN_MACRO ( STCLASS = STCLASS );
     3891+    4761
     3892+    4762            %QI@CIP_OPERATION ( NAME = NAME,
     3893+    4763                                STCLASS = STCLASS,
     3894+    4764                                TYPE = ALR,
     3895+    4765                                FIRST_LEN = 1 );
     3896+    4766
     3897+    4767            %END_MACRO;
     3898+    4768
     3899+    4769          %MEND;
     3900+    4770
     3901+    4771          %MACRO QI@TYPE_DISPLAY_SOURCE ( STCLASS = "AUTO",
     3902+    4772                                          NAME = QI@TYPE_DISPLAY_SOURCE );
     3903+    4773
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:150  
     3904+    4774            %BEGIN_MACRO ( STCLASS = STCLASS );
     3905+    4775
     3906+    4776            %QI@CIP_OPERATION ( NAME = NAME,
     3907+    4777                                STCLASS = STCLASS,
     3908+    4778                                TYPE = DMC,
     3909+    4779                                FIRST_CIP_TYPE = DISPLAY,
     3910+    4780                                FIRST_CIP_LEN = 15 /* %QI#MAX_DISPLAY */ );
     3911+    4781
     3912+    4782            %END_MACRO;
     3913+    4783
     3914+    4784          %MEND;
     3915+    4785
     3916+    4786          %MACRO QI@TYPE_DISPLAY_TARGET ( STCLASS = "AUTO",
     3917+    4787                                          NAME = QI@TYPE_DISPLAY_TARGET );
     3918+    4788
     3919+    4789            %BEGIN_MACRO ( STCLASS = STCLASS );
     3920+    4790
     3921+    4791            %QI@CIP_OPERATION ( NAME = NAME,
     3922+    4792                                STCLASS = STCLASS,
     3923+    4793                                TYPE = DMC,
     3924+    4794                                SECOND_CIP_TYPE = DISPLAY,
     3925+    4795                                SECOND_CIP_LEN = 15 /* %QI#MAX_DISPLAY */,
     3926+    4796                                SECOND_CIP_FILL = NO );
     3927+    4797
     3928+    4798            %END_MACRO;
     3929+    4799
     3930+    4800          %MEND;
     3931+    4801
     3932+    4802          %MACRO QI@TYPE_BINARY_TARGET ( STCLASS = "AUTO",
     3933+    4803                                         NAME = QI@TYPE_BINARY_TARGET );
     3934+    4804
     3935+    4805            %BEGIN_MACRO ( STCLASS = STCLASS );
     3936+    4806
     3937+    4807            %QI@CIP_OPERATION ( NAME = NAME,
     3938+    4808                                STCLASS = STCLASS,
     3939+    4809                                TYPE = CDB,
     3940+    4810                                SECOND_CIP_TYPE = BINARY,
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:151  
     3941+    4811                                SECOND_CIP_LEN = 2 /* %QI#MIN_BINARY_LENGTH */,
     3942+    4812                                SECOND_CIP_FILL = NO );
     3943+    4813
     3944+    4814            %END_MACRO;
     3945+    4815
     3946+    4816          %MEND;
     3947+    4817
     3948+    4818          %MACRO QI@SRCH_VRFY ( STCLASS = "AUTO",
     3949+    4819                                NAME = QI@SRCH_VRFY );
     3950+    4820
     3951+    4821            %BEGIN_MACRO ( STCLASS = STCLASS );
     3952+    4822
     3953+    4823            %QI@CIP_OPERATION ( NAME = NAME,
     3954+    4824                                STCLASS = STCLASS,
     3955+    4825                                TYPE = SRCH,
     3956+    4826                                FIRST_CIP_FILL = NO,
     3957+    4827                                FIRST_CIP_AS = INDEX,
     3958+    4828                                SRCH_VRFY_ARGS_LEN = 1,
     3959+    4829                                SRCH_VRFY_ARGS_LIST_LEN = 1,
     3960+    4830                                SECOND_CIP_LEN = 4,
     3961+    4831                                SECOND_CIP_FILL = NO,
     3962+    4832                                THIRD_CIP_FILL = NO,
     3963+    4833                                THIRD_CIP_AS = INDEX,
     3964+    4834                                SRCH_VRFY_ELEMS_LEN = 1,
     3965+    4835                                SRCH_VRFY_ELEMS_LIST_LEN = 1 );
     3966+    4836
     3967+    4837            %END_MACRO;
     3968+    4838
     3969+    4839          %MEND;
     3970+    4840
     3971+    4841          %MACRO QI@MAT ( STCLASS = "AUTO",
     3972+    4842                          NAME = QI@MAT );
     3973+    4843
     3974+    4844            %BEGIN_MACRO ( STCLASS = STCLASS );
     3975+    4845
     3976+    4846            %QI@CIP_OPERATION ( NAME = NAME,
     3977+    4847                                STCLASS = STCLASS,
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:152  
     3978+    4848                                TYPE = MAT,
     3979+    4849                                FIRST_CIP_FILL = NO,
     3980+    4850                                FIRST_CIP_AS = INDEX,
     3981+    4851                                SECOND_CIP_AS = INDEX,
     3982+    4852                                THIRD_CIP_FILL = NO,
     3983+    4853                                THIRD_LEN = 256,
     3984+    4854                                FILL_CHAR = 01 /* QI_MAT_MATCH */ );
     3985+    4855
     3986+    4856            %END_MACRO;
     3987+    4857
     3988+    4858          %MEND;
     3989+    4859
     3990+    4860        %EJECT;
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:153  
     3991+    4861
     3992+    4862        /*
     3993+    4863                           %%
     3994+    4864                           %%
     3995+    4865                       %%% %%   %%%%%    %%%%%%   %%%%%%
     3996+    4866                      %%  %%%  %%   %%  %%       %%
     3997+    4867                      %%  %%%  %%%%%%%   %%%%%   %%
     3998+    4868                      %%  %%%  %%            %%  %%        %%%
     3999+    4869                       %%% %%   %%%%%   %%%%%%    %%%%%%   %%%
     4000+    4870
     4001+    4871                       %%%%%%  %  %  %   %%% %%  %%% %%   %% %%%
     4002+    4872                      %%       % %%% %  %%  %%%  %% % %%  %%%  %%
     4003+    4873                       %%%%%   % %%% %  %%  %%%  %% % %%  %%%  %%
     4004+    4874                           %%  %%% %%%  %%  %%%  %% % %%  %%%  %%
     4005+    4875                      %%%%%%   %%   %%   %%% %%  %% % %%  %% %%%
     4006+    4876                                                          %%
     4007+    4877                                                          %%
     4008+    4878                                                                            */
     4009+    4879
     4010+    4880          %MACRO QI@4_CHAR_ALPHANUMERIC ( STCLASS = "AUTO",
     4011+    4881                                          NAME = QI@4_CHAR_ALPHANUMERIC );
     4012+    4882
     4013+    4883            %BEGIN_MACRO ( STCLASS = STCLASS );
     4014+    4884
     4015+    4885            %QI_CIP_DESCRIPTOR ( NAME = NAME,
     4016+    4886                                 STCLASS = STCLASS,
     4017+    4887                                 TYPE = ALPHANUMERIC,
     4018+    4888                                 LEN = 4,
     4019+    4889                                 DISP = SOURCE );
     4020+    4890
     4021+    4891            %END_MACRO;
     4022+    4892
     4023+    4893          %MEND;
     4024+    4894
     4025+    4895          %MACRO QI@31_DIGIT_SLS_DISPLAY ( STCLASS = "AUTO",
     4026+    4896                                           NAME = QI@31_DIGIT_SLS_DISPLAY );
     4027+    4897
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:154  
     4028+    4898            %BEGIN_MACRO;
     4029+    4899
     4030+    4900            %QI_CIP_DESCRIPTOR ( NAME = NAME,
     4031+    4901                                 STCLASS = STCLASS,
     4032+    4902                                 TYPE = DISPLAY,
     4033+    4903                                 SIGN = LEADING,
     4034+    4904                                 LEN = 31,
     4035+    4905                                 DISP = SOURCE );
     4036+    4906
     4037+    4907            %END_MACRO;
     4038+    4908
     4039+    4909          %MEND;
     4040+    4910
     4041+    4911          %MACRO QI@16_BIT_BINARY ( STCLASS = "AUTO",
     4042+    4912                                    NAME = QI@32_BIT_BINARY );
     4043+    4913
     4044+    4914            %BEGIN_MACRO ( STCLASS = STCLASS );
     4045+    4915
     4046+    4916            %QI_CIP_DESCRIPTOR ( NAME = NAME,
     4047+    4917                                 STCLASS = STCLASS,
     4048+    4918                                 TYPE = BINARY,
     4049+    4919                                 LEN = 2,
     4050+    4920                                 DISP = SOURCE );
     4051+    4921
     4052+    4922            %END_MACRO;
     4053+    4923
     4054+    4924          %MEND;
     4055+    4925
     4056+    4926          %MACRO QI@32_BIT_BINARY ( STCLASS = "AUTO",
     4057+    4927                                    NAME = QI@32_BIT_BINARY );
     4058+    4928
     4059+    4929            %BEGIN_MACRO ( STCLASS = STCLASS );
     4060+    4930
     4061+    4931            %QI_CIP_DESCRIPTOR ( NAME = NAME,
     4062+    4932                                 STCLASS = STCLASS,
     4063+    4933                                 TYPE = BINARY,
     4064+    4934                                 LEN = 4,
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:155  
     4065+    4935                                 DISP = SOURCE );
     4066+    4936
     4067+    4937            %END_MACRO;
     4068+    4938
     4069+    4939          %MEND;
     4070+    4940
     4071+    4941          %MACRO QI@31_DIGIT_ST_PACKED ( STCLASS = "AUTO",
     4072+    4942                                         NAME = QI@31_DIGIT_ST_PACKED );
     4073+    4943
     4074+    4944            %BEGIN_MACRO ( STCLASS = STCLASS );
     4075+    4945
     4076+    4946            %QI_CIP_DESCRIPTOR ( NAME = NAME,
     4077+    4947                                 STCLASS = STCLASS,
     4078+    4948                                 TYPE = PACKED,
     4079+    4949                                 LEN = 31,
     4080+    4950                                 SIGN = TRAILING,
     4081+    4951                                 DISP = SOURCE );
     4082+    4952
     4083+    4953            %END_MACRO;
     4084+    4954
     4085+    4955          %MEND;
     4086+    4956
     4087+    4957          %MACRO QI@PICTURE_STRING ( STCLASS = "AUTO",
     4088+    4958                                     NAME = QI@PICTURE_STRING );
     4089+    4959
     4090+    4960            %BEGIN_MACRO;
     4091+    4961
     4092+    4962            %QI_CIP_DESCRIPTOR ( NAME = NAME,
     4093+    4963                                 STCLASS = STCLASS,
     4094+    4964                                 TYPE = ALPHANUMERIC,
     4095+    4965                                 OFFSET = 1,  /* Lookit dat. */
     4096+    4966                                 LEN = 0,
     4097+    4967                                 DISP = AUX );
     4098+    4968
     4099+    4969            %END_MACRO;
     4100+    4970
     4101+    4971          %MEND;
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:156  
     4102+    4972
     4103+    4973          %MACRO QI@ACCUMULATOR_DAD ( STCLASS = "AUTO",
     4104+    4974                                      NAME = QI@ACCUMULATOR_DAD );
     4105+    4975
     4106+    4976            %BEGIN_MACRO;
     4107+    4977
     4108+    4978          DCL 1 NAME STCLASS ALIGNED,
     4109+    4979                          /* CONSTANT "DAD" describing QI_1.ACCUM. */
     4110+    4980                2 * UBIN(12) UNAL %INIT(0)%CHARTEXT('/**/'),
     4111+    4981                2 TYPE UBIN(4) UNAL %INIT(%QI#ACCUMULATOR_TYPE)%CHARTEXT('/**/'),
     4112+    4982                %QI_CIP_DESCRIPTOR ( NAME = CIP,
     4113+    4983                                     STCLASS = STCLASS,
     4114+    4984                                     LVL = 2,
     4115+    4985                                     TYPE = PACKED,
     4116+    4986                                     SIGN = TRAILING,
     4117+    4987                                     LEN = 31,
     4118+    4988                                     DISP = SOURCE );
     4119+    4989
     4120+    4990            %END_MACRO;
     4121+    4991
     4122+    4992          %MEND;
     4123+    4993
     4124+    4994        %EJECT;
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:157  
     4125+    4995
     4126+    4996        /*
     4127+    4997                  %%                                         %%
     4128+    4998                  %%
     4129+    4999              %%% %%  %%   %%  %% %%%    %%% %%  %%% %%     %%%     %%%%%%
     4130+    5000             %%  %%%  %%   %%  %%%  %%  %%  %%%  %% % %%     %%    %%
     4131+    5001             %%  %%%  %%   %%  %%   %%  %%  %%%  %% % %%     %%    %%
     4132+    5002             %%  %%%  %%  %%%  %%   %%  %%  %%%  %% % %%     %%    %%
     4133+    5003              %%% %%   %%% %%  %%   %%   %%% %%  %% % %%   %%%%%%   %%%%%%
     4134+    5004                           %%
     4135+    5005                      %%%%%%
     4136+    5006
     4137+    5007                                                    %%%      %%%
     4138+    5008                                 %%                %%       %%
     4139+    5009                       %%%%%%  %%%%%%   %%   %%    %%       %%
     4140+    5010                      %%         %%     %%   %%  %%%%%%   %%%%%%
     4141+    5011                       %%%%%     %%     %%   %%    %%       %%
     4142+    5012                           %%    %%     %%  %%%    %%       %%
     4143+    5013                      %%%%%%      %%%    %%% %%    %%       %%
     4144+    5014                                                                       */
     4145+    5015          %MACRO QI$GZ_HEADER ( STCLASS = "BASED",
     4146+    5016                                NAME = QI$GZ_HEADER );
     4147+    5017
     4148+    5018            %BEGIN_MACRO ( STCLASS = STCLASS );
     4149+    5019
     4150+    5020          DCL 1 NAME STCLASS ALIGNED,
     4151+    5021                2 IS_ACTIVE BIT(1) ALIGNED,
     4152+    5022                                           /* "Does this QI$GZ_HEADER represent an
     4153+    5023                                              ACTIVE something-or-other?" indicator */
     4154+    5024                2 BACK_LINK$ PTR,
     4155+    5025                                           /* Back_link to last QI$GZ_HEADER */
     4156+    5026                2 DCB# UBIN,
     4157+    5027                                           /* DCB# for this header */
     4158+    5028                2 FIELD_COUNT UBIN,
     4159+    5029                                           /* number of fields following this header */
     4160+    5030                2 FRAME_DAD$ PTR,
     4161+    5031                                           /* ptr to frame DAD for this header */
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:158  
     4162+    5032                2 OPERATION,
     4163+    5033                  3 START_INDEX UBIN,
     4164+    5034                                           /* starting index into the field array
     4165+    5035                                              following this header */
     4166+    5036                  3 STOP_INDEX UBIN,
     4167+    5037                                           /* stopping index into the field array
     4168+    5038                                              following this header */
     4169+    5039                  3 DONE_INDEX UBIN,
     4170+    5040                                           /* index into the field array
     4171+    5041                                              following this header of
     4172+    5042                                              the last field actually operated on */
     4173+    5043                2 STATUS UBIN;
     4174+    5044                                           /* returned status */
     4175+    5045
     4176+    5046            %END_MACRO;
     4177+    5047
     4178+    5048          %MEND;
     4179+    5049
     4180+    5050        %EJECT;
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:159  
     4181+    5051
     4182+    5052          %MACRO QI$GZ_FIELD ( STCLASS = "BASED",
     4183+    5053                               NAME = QI$GZ_FIELD );
     4184+    5054
     4185+    5055            %BEGIN_MACRO ( STCLASS = STCLASS );
     4186+    5056
     4187+    5057          DCL 1 NAME STCLASS ALIGNED,
     4188+    5058                2 INDICATORS$ PTR,
     4189+    5059                2 DESCRIPTION,
     4190+    5060                  3 IO_FLAGS,
     4191+    5061                    4 IS_OUTPUT BIT(1) UNAL,
     4192+    5062                                           /* on if this FIELD is OUTPUT or I-O */
     4193+    5063                    4 IS_INPUT BIT(1) UNAL,
     4194+    5064                                           /* on if this FIELD is INPUT or I-O */
     4195+    5065                  3 IO_VALUE REDEF IO_FLAGS UBIN(2) UNAL,
     4196+    5066                                           /* all 1's if this field is I-O */
     4197+    5067                  3 IS_ENTRY_REQUIRED BIT(1) UNAL,
     4198+    5068                                           /* on if ENTRY-REQUIRED */
     4199+    5069                  3 IS_OUTPUT_CONSTANT BIT(1) UNAL,
     4200+    5070                                           /* on if OUTPUT CONSTANT */
     4201+    5071                  3 IS_AOIM BIT(1) UNAL,
     4202+    5072                                           /* on if A-O-I-M */
     4203+    5073                  3 * UBIN(3) UNAL,
     4204+    5074                  3 LENGTH UBIN BYTE CALIGNED,
     4205+    5075                                           /* field length */
     4206+    5076                  3 POSITION,
     4207+    5077                    4 LINE UBIN BYTE CALIGNED,
     4208+    5078                                           /* LINE whatever */
     4209+    5079                    4 COLUMN UBIN BYTE CALIGNED,
     4210+    5080                                           /* COLUMN whatever */
     4211+    5081                  3 FIELD_DAD$ PTR,
     4212+    5082                                           /* ptr back to the original field DAD */
     4213+    5083                2 STATUS,
     4214+    5084                  3 OFFSET UBIN(1) UNAL,
     4215+    5085                                           /* byte offset from DATA$ of the real data */
     4216+    5086                  3 IS_AOIM_MODIFIED BIT(1) UNAL,
     4217+    5087                                           /* on if this A-O-I-M field was modified,
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:160  
     4218+    5088                                              off if this A-O-I-M field hasn't changed */
     4219+    5089                  3 IS_VALUE_DEFAULT BIT(1) UNAL,
     4220+    5090                                           /* on if data came from a DEFAULT clause,
     4221+    5091                                              off if data came from a terminal */
     4222+    5092                  3 WAS_IO_EVER_DONE BIT(1) UNAL,
     4223+    5093                                           /* reset by USE prep code */
     4224+    5094                  3 LENGTH UBIN BYTE CALIGNED,
     4225+    5095                                           /* length of data returned */
     4226+    5096                  3 VISUAL_ATTRIBUTE UBIN BYTE CALIGNED,
     4227+    5097                                           /* ABStractGRPhicRNDition goop */
     4228+    5098                  3 FLDID UBIN,
     4229+    5099                                           /* VDH FLDID for this elementary
     4230+    5100                                              field */
     4231+    5101                  3 DATA$ PTR,
     4232+    5102                                           /* ptr to the real data */
     4233+    5103                2 OPERATION,
     4234+    5104                  3 IS_OPERATE BIT(1) UNAL,
     4235+    5105                                           /* do something */
     4236+    5106                  3 IS_VISUAL_ATTRIBUTE_CHANGE BIT(1) UNAL,
     4237+    5107                                           /* change the VISUAL-ATTRIBUTE
     4238+    5108                                              while yer at it */
     4239+    5109                  3 IS_DONE BIT(1) UNAL,
     4240+    5110                                           /* did something */
     4241+    5111                2 FPL_ERROR BIT(1) UNAL,
     4242+    5112                                           /* internally detected oops */
     4243+    5113                2 USE_STUFF UBIN(4) UNAL;
     4244+    5114                                           /* cleared field for
     4245+    5115                                              USE prep code */
     4246+    5116
     4247+    5117            %END_MACRO;
     4248+    5118
     4249+    5119          %MEND;
     4250+    5120
     4251+    5121        %EJECT;
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:161  
     4252+    5122        /*
     4253+    5123                       %%%%%%%%% %%%%%%%   %%%%%%%%%
     4254+    5124                       %%%%%%%%% %%%%%%%%  %%%%%%%%%
     4255+    5125                       %%        %%     %%    %%%
     4256+    5126                       %%        %%     %%    %%%
     4257+    5127                       %%%%%     %%%%%%%%     %%%     %%%%%%%%
     4258+    5128                       %%        %%%%%%%      %%%    %%
     4259+    5129                       %%        %%           %%%     %%%%%%%
     4260+    5130                       %%        %%           %%%           %%
     4261+    5131                       %%        %%           %%%    %%%%%%%%
     4262+    5132                                                                            */
     4263+    5133
     4264+    5134        /*D* NAME:         QI_FPTS
     4265+    5135             PURPOSE:      To house STCLASS = CONSTANT copies of monitor
     4266+    5136                           service FPTs.
     4267+    5137             DESCRIPTION:  FPTs with STCLASS = CONSTANT get generated here
     4268+    5138                           with as many options as possible specified at
     4269+    5139                           compile time.  The names of these FPTs are
     4270+    5140                           generally QI_FPT_whatever.  Routines referencing
     4271+    5141                           these FPTs fill in STCLASS = AUTO FPTs with them.
     4272+    5142                           The QI_FPTS macro isn't included in QI$ALL
     4273+    5143                           so that not all modules need %INCLUDE LCP_6;.
     4274+    5144        */
     4275+    5145
     4276+    5146          %MACRO QI_FPT_CLOSE ( STCLASS = "SYMREF",
     4277+    5147                                NAME = QI_FPT_CLOSE );
     4278+    5148
     4279+    5149            %BEGIN_MACRO ( STCLASS = STCLASS );
     4280+    5150
     4281+    5151          %FPT_CLOSE ( FPTN = NAME,
     4282+    5152                       STCLASS = STCLASS,
     4283+    5153                       DCB = NIL,
     4284+    5154                       DISP = KEEP );
     4285+    5155
     4286+    5156            %END_MACRO;
     4287+    5157
     4288+    5158          %MEND;
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:162  
     4289+    5159
     4290+    5160          %MACRO QI_FPT_DBCONTROL ( STCLASS = "SYMREF",
     4291+    5161                                    NAME = QI_FPT_DBCONTROL );
     4292+    5162
     4293+    5163            %BEGIN_MACRO ( STCLASS = STCLASS );
     4294+    5164
     4295+    5165          %FPT_DBCONTROL ( FPTN = NAME,
     4296+    5166                           STCLASS = STCLASS );
     4297+    5167
     4298+    5168            %END_MACRO;
     4299+    5169
     4300+    5170          %MEND;
     4301+    5171
     4302+    5172          %MACRO QI_FPT_DCLFLD ( STCLASS = "SYMREF",
     4303+    5173                                 NAME = QI_FPT_DCLFLD );
     4304+    5174
     4305+    5175            %BEGIN_MACRO ( STCLASS = STCLASS );
     4306+    5176
     4307+    5177          %FPT_DCLFLD ( FPTN = NAME,
     4308+    5178                        STCLASS = STCLASS,
     4309+    5179                        DCB = NIL );
     4310+    5180
     4311+    5181            %END_MACRO;
     4312+    5182
     4313+    5183          %MEND;
     4314+    5184
     4315+    5185          %MACRO QI_VLP_FLDATR ( STCLASS = "SYMREF",
     4316+    5186                                 NAME = QI_VLP_FLDATR );
     4317+    5187
     4318+    5188            %BEGIN_MACRO ( STCLASS = STCLASS );
     4319+    5189
     4320+    5190          %VLP_FLDATR ( FPTN = NAME,
     4321+    5191                        STCLASS = STCLASS,
     4322+    5192                        ABSGRPRND = WARNING );
     4323+    5193
     4324+    5194            %END_MACRO;
     4325+    5195
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:163  
     4326+    5196          %MEND;
     4327+    5197
     4328+    5198          %MACRO QI_FPT_DEVICE ( STCLASS = "SYMREF",
     4329+    5199                                 NAME = QI_FPT_DEVICE );
     4330+    5200
     4331+    5201            %BEGIN_MACRO ( STCLASS = STCLASS );
     4332+    5202
     4333+    5203          %FPT_DEVICE ( FPTN = NAME,
     4334+    5204                        STCLASS = STCLASS,
     4335+    5205                        DCB = NIL );
     4336+    5206
     4337+    5207            %END_MACRO;
     4338+    5208
     4339+    5209          %MEND;
     4340+    5210
     4341+    5211          %MACRO QI_FPT_ERASE ( STCLASS = "SYMREF",
     4342+    5212                                NAME = QI_FPT_ERASE );
     4343+    5213
     4344+    5214            %BEGIN_MACRO ( STCLASS = STCLASS );
     4345+    5215
     4346+    5216          %FPT_ERASE ( FPTN = NAME,
     4347+    5217                       STCLASS = STCLASS,
     4348+    5218                       DCB = NIL,
     4349+    5219                       CNS = YES,
     4350+    5220                       PRT = YES );
     4351+    5221
     4352+    5222            %END_MACRO;
     4353+    5223
     4354+    5224          %MEND;
     4355+    5225
     4356+    5226          %MACRO QI_FPT_ERRMSG ( STCLASS = "SYMREF",
     4357+    5227                                 NAME = QI_FPT_ERRMSG );
     4358+    5228
     4359+    5229            %BEGIN_MACRO ( STCLASS = STCLASS );
     4360+    5230
     4361+    5231          %FPT_ERRMSG ( FPTN = NAME,
     4362+    5232                        STCLASS = STCLASS,
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:164  
     4363+    5233                        INCLCODE = NO );
     4364+    5234
     4365+    5235            %END_MACRO;
     4366+    5236
     4367+    5237          %MEND;
     4368+    5238
     4369+    5239          %MACRO QI_FPT_EXIT ( STCLASS = "SYMREF",
     4370+    5240                               NAME = QI_FPT_EXIT );
     4371+    5241
     4372+    5242            %BEGIN_MACRO ( STCLASS = STCLASS );
     4373+    5243
     4374+    5244          %FPT_EXIT ( FPTN = NAME,
     4375+    5245                      STCLASS = STCLASS,
     4376+    5246                      STEPCC = G_SKIP# );
     4377+    5247
     4378+    5248            %END_MACRO;
     4379+    5249
     4380+    5250          %MEND;
     4381+    5251
     4382+    5252
     4383+    5253          %MACRO QI_FPT_FDS ( STCLASS = "SYMREF",
     4384+    5254                              NAME = QI_FPT_FDS );
     4385+    5255
     4386+    5256            %BEGIN_MACRO ( STCLASS = STCLASS );
     4387+    5257
     4388+    5258          %FPT_FDS ( FPTN = NAME,
     4389+    5259                     STCLASS = STCLASS,
     4390+    5260                     RESULTS = QI_VLP_SEGMENT );
     4391+    5261
     4392+    5262            %END_MACRO;
     4393+    5263
     4394+    5264          %MEND;
     4395+    5265
     4396+    5266          %MACRO QI_FPT_FDS_LOAD ( STCLASS = "SYMREF",
     4397+    5267                                   NAME = QI_FPT_FDS_LOAD );
     4398+    5268
     4399+    5269            %BEGIN_MACRO ( STCLASS = STCLASS );
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:165  
     4400+    5270
     4401+    5271          %FPT_FDS ( FPTN = NAME,
     4402+    5272                     STCLASS = STCLASS,
     4403+    5273                     RESULTS = QI_VLP_SEGMENT_LOAD );
     4404+    5274
     4405+    5275            %END_MACRO;
     4406+    5276
     4407+    5277          %MEND;
     4408+    5278
     4409+    5279          %MACRO QI_FPT_GDS ( STCLASS = "SYMREF",
     4410+    5280                              NAME = QI_FPT_GDS );
     4411+    5281
     4412+    5282            %BEGIN_MACRO ( STCLASS = STCLASS );
     4413+    5283
     4414+    5284          %FPT_GDS ( FPTN = NAME,
     4415+    5285                     STCLASS = STCLASS,
     4416+    5286                     RESULTS = QI_VLP_SEGMENT,
     4417+    5287                     NEXT = BIG,
     4418+    5288                     PAGES = 1 );
     4419+    5289
     4420+    5290            %END_MACRO;
     4421+    5291
     4422+    5292          %MEND;
     4423+    5293
     4424+    5294          %MACRO QI_VLP_SEGMENT ( STCLASS = "SYMREF",
     4425+    5295                                  NAME = QI_VLP_SEGMENT );
     4426+    5296
     4427+    5297            %BEGIN_MACRO ( STCLASS = STCLASS );
     4428+    5298
     4429+    5299          %VLP_SEGMENT ( FPTN = NAME,
     4430+    5300                         STCLASS = STCLASS );
     4431+    5301
     4432+    5302            %END_MACRO;
     4433+    5303
     4434+    5304          %MEND;
     4435+    5305
     4436+    5306          %MACRO QI_FPT_GDS_BUFFER ( STCLASS = "SYMREF",
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:166  
     4437+    5307                                     NAME = QI_FPT_GDS_BUFFER );
     4438+    5308
     4439+    5309            %BEGIN_MACRO ( STCLASS = STCLASS );
     4440+    5310
     4441+    5311          %FPT_GDS ( FPTN = NAME,
     4442+    5312                     STCLASS = STCLASS,
     4443+    5313                     RESULTS = QI_VLP_SEGMENT_BUFFER,
     4444+    5314                     NEXT = LITTLE,
     4445+    5315                     PAGES = 4 );
     4446+    5316
     4447+    5317            %END_MACRO;
     4448+    5318
     4449+    5319          %MEND;
     4450+    5320
     4451+    5321          %MACRO QI_VLP_SEGMENT_BUFFER ( STCLASS = "SYMREF",
     4452+    5322                                         NAME = QI_VLP_SEGMENT_BUFFER );
     4453+    5323
     4454+    5324            %BEGIN_MACRO ( STCLASS = STCLASS );
     4455+    5325
     4456+    5326          %VLP_SEGMENT ( FPTN = NAME,
     4457+    5327                         STCLASS = STCLASS );
     4458+    5328            %END_MACRO;
     4459+    5329
     4460+    5330          %MEND;
     4461+    5331
     4462+    5332          %MACRO QI_FPT_GDS_LOAD ( STCLASS = "SYMREF",
     4463+    5333                                   NAME = QI_FPT_GDS_LOAD );
     4464+    5334
     4465+    5335            %BEGIN_MACRO ( STCLASS = STCLASS );
     4466+    5336
     4467+    5337          %FPT_GDS ( FPTN = NAME,
     4468+    5338                     STCLASS = STCLASS,
     4469+    5339                     RESULTS = QI_VLP_SEGMENT_LOAD,
     4470+    5340                     NEXT = LITTLE,
     4471+    5341                     PAGES = 1 );
     4472+    5342
     4473+    5343            %END_MACRO;
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:167  
     4474+    5344
     4475+    5345          %MEND;
     4476+    5346
     4477+    5347          %MACRO QI_VLP_SEGMENT_LOAD ( STCLASS = "SYMREF",
     4478+    5348                                       NAME = QI_VLP_SEGMENT_LOAD );
     4479+    5349
     4480+    5350            %BEGIN_MACRO ( STCLASS = STCLASS );
     4481+    5351
     4482+    5352          %VLP_SEGMENT ( FPTN = NAME,
     4483+    5353                         STCLASS = STCLASS );
     4484+    5354
     4485+    5355            %END_MACRO;
     4486+    5356
     4487+    5357          %MEND;
     4488+    5358          %MACRO QI_FPT_GLINEATTR ( STCLASS = "SYMREF",
     4489+    5359                                    NAME = QI_FPT_GLINEATTR );
     4490+    5360
     4491+    5361            %BEGIN_MACRO ( STCLASS = STCLASS );
     4492+    5362
     4493+    5363          %FPT_GLINEATTR ( FPTN = NAME,
     4494+    5364                           STCLASS = STCLASS,
     4495+    5365                           DCB = NIL );
     4496+    5366
     4497+    5367            %END_MACRO;
     4498+    5368
     4499+    5369          %MEND;
     4500+    5370
     4501+    5371          %MACRO QI_FPT_INT ( STCLASS = "SYMREF",
     4502+    5372                              NAME = QI_FPT_INT );
     4503+    5373
     4504+    5374            %BEGIN_MACRO ( STCLASS = STCLASS );
     4505+    5375
     4506+    5376          %FPT_INT ( FPTN = NAME,
     4507+    5377                     STCLASS = STCLASS );
     4508+    5378
     4509+    5379            %END_MACRO;
     4510+    5380
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:168  
     4511+    5381          %MEND;
     4512+    5382
     4513+    5383          %MACRO QI_FPT_LDTRC ( STCLASS = "SYMREF",
     4514+    5384                                NAME = QI_FPT_LDTRC );
     4515+    5385
     4516+    5386            %BEGIN_MACRO ( STCLASS = STCLASS );
     4517+    5387
     4518+    5388          %FPT_LDTRC ( FPTN = NAME,
     4519+    5389                       STCLASS = STCLASS,
     4520+    5390                       DISP = KEEP );
     4521+    5391
     4522+    5392            %END_MACRO;
     4523+    5393
     4524+    5394          %MEND;
     4525+    5395
     4526+    5396          %MACRO QI_FPT_MDFFLD ( STCLASS = "SYMREF",
     4527+    5397                                 NAME = QI_FPT_MDFFLD );
     4528+    5398
     4529+    5399            %BEGIN_MACRO ( STCLASS = STCLASS );
     4530+    5400
     4531+    5401          %FPT_MDFFLD ( FPTN = NAME,
     4532+    5402                        STCLASS = STCLASS,
     4533+    5403                        DCB = NIL,
     4534+    5404                        SETGRPRND = YES );
     4535+    5405
     4536+    5406            %END_MACRO;
     4537+    5407
     4538+    5408          %MEND;
     4539+    5409
     4540+    5410          %MACRO QI_FPT_OPEN ( STCLASS = "SYMREF",
     4541+    5411                               NAME = QI_FPT_OPEN );
     4542+    5412
     4543+    5413            %BEGIN_MACRO ( STCLASS = STCLASS );
     4544+    5414
     4545+    5415          %FPT_OPEN ( FPTN = NAME,
     4546+    5416                      STCLASS = STCLASS,
     4547+    5417                      DCB = NIL,
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:169  
     4548+    5418                      DISP = KEEP,
     4549+    5419                      SCRUB = YES );
     4550+    5420
     4551+    5421            %END_MACRO;
     4552+    5422
     4553+    5423          %MEND;
     4554+    5424
     4555+    5425          %MACRO QI_FPT_PROMPT ( STCLASS = "SYMREF",
     4556+    5426                                 NAME = QI_FPT_PROMPT );
     4557+    5427
     4558+    5428            %BEGIN_MACRO ( STCLASS = STCLASS );
     4559+    5429
     4560+    5430          %FPT_PROMPT ( FPTN = NAME,
     4561+    5431                        STCLASS = STCLASS,
     4562+    5432                        DCB = NIL,
     4563+    5433                        VFC = YES );
     4564+    5434
     4565+    5435            %END_MACRO;
     4566+    5436
     4567+    5437          %MEND;
     4568+    5438
     4569+    5439          %MACRO QI_FPT_READ ( STCLASS = "SYMREF",
     4570+    5440                               NAME = QI_FPT_READ );
     4571+    5441
     4572+    5442            %BEGIN_MACRO ( STCLASS = STCLASS );
     4573+    5443
     4574+    5444          %FPT_READ ( FPTN = NAME,
     4575+    5445                      STCLASS = STCLASS,
     4576+    5446                      DCB = NIL );
     4577+    5447
     4578+    5448            %END_MACRO;
     4579+    5449
     4580+    5450          %MEND;
     4581+    5451
     4582+    5452          %MACRO QI_VLP_CG ( STCLASS = "SYMREF",
     4583+    5453                             NAME = QI_VLP_CG );
     4584+    5454
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:170  
     4585+    5455            %BEGIN_MACRO ( STCLASS = STCLASS );
     4586+    5456
     4587+    5457          %VLP_CG ( FPTN = NAME,
     4588+    5458                    STCLASS = STCLASS );
     4589+    5459
     4590+    5460            %END_MACRO;
     4591+    5461
     4592+    5462          %MEND;
     4593+    5463
     4594+    5464          %MACRO QI_FPT_RLSFLD ( STCLASS = "SYMREF",
     4595+    5465                                 NAME = QI_FPT_RLSFLD );
     4596+    5466
     4597+    5467            %BEGIN_MACRO ( STCLASS = STCLASS );
     4598+    5468
     4599+    5469          %FPT_RLSFLD ( FPTN = NAME,
     4600+    5470                        STCLASS = STCLASS,
     4601+    5471                        DCB = NIL );
     4602+    5472
     4603+    5473            %END_MACRO;
     4604+    5474
     4605+    5475          %MEND;
     4606+    5476
     4607+    5477          %MACRO QI_FPT_SLCFLD ( STCLASS = "SYMREF",
     4608+    5478                                 NAME = QI_FPT_SLCFLD );
     4609+    5479
     4610+    5480            %BEGIN_MACRO ( STCLASS = STCLASS );
     4611+    5481
     4612+    5482          %FPT_SLCFLD ( FPTN = NAME,
     4613+    5483                        STCLASS = STCLASS,
     4614+    5484                        DCB = NIL );
     4615+    5485
     4616+    5486            %END_MACRO;
     4617+    5487
     4618+    5488          %MEND;
     4619+    5489
     4620+    5490          %MACRO QI_FPT_TIME ( STCLASS = "SYMREF",
     4621+    5491                               NAME = QI_FPT_TIME );
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:171  
     4622+    5492
     4623+    5493            %BEGIN_MACRO ( STCLASS = STCLASS );
     4624+    5494
     4625+    5495          %FPT_TIME ( FPTN = NAME,
     4626+    5496                      STCLASS = STCLASS,
     4627+    5497                      SOURCE = CLOCK,
     4628+    5498                      DEST = ANS );
     4629+    5499
     4630+    5500            %END_MACRO;
     4631+    5501
     4632+    5502          %MEND;
     4633+    5503
     4634+    5504          %MACRO QI_FPT_TRAP ( STCLASS = "SYMREF",
     4635+    5505                               NAME = QI_FPT_TRAP );
     4636+    5506
     4637+    5507            %BEGIN_MACRO ( STCLASS = STCLASS );
     4638+    5508
     4639+    5509          %FPT_TRAP ( FPTN = NAME,
     4640+    5510                      NTC = QI_VLP_TRAP_CONDITIONS,
     4641+    5511                      STCLASS = STCLASS );
     4642+    5512
     4643+    5513            %END_MACRO;
     4644+    5514
     4645+    5515          %MEND;
     4646+    5516
     4647+    5517          %MACRO QI_VLP_TRAP_CONDITIONS ( STCLASS = "SYMREF",
     4648+    5518                                          NAME = QI_VLP_TRAP_CONDITIONS );
     4649+    5519
     4650+    5520            %BEGIN_MACRO ( STCLASS = STCLASS );
     4651+    5521
     4652+    5522          %VLP_TRAP_CONDITIONS ( FPTN = NAME,
     4653+    5523                                 NO_SIP = G_ENT_TRAP#,
     4654+    5524                                 UNIMPL = G_ENT_TRAP#,
     4655+    5525                                 REMOTE_DESC = G_ENT_TRAP#,
     4656+    5526                                 PRIV = G_ENT_TRAP#,
     4657+    5527                                 MEM_PROT = G_ENT_TRAP#,
     4658+    5528                                 INT_UR = G_ENT_TRAP#,
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:172  
     4659+    5529                                 PROG_ERR = G_ENT_TRAP#,
     4660+    5530                                 EXT_UR = G_ENT_TRAP#,
     4661+    5531                                 C_DBZ = G_ENT_TRAP#,
     4662+    5532                                 C_SPEC = G_ENT_TRAP#,
     4663+    5533                                 C_CHAR = G_ENT_TRAP#,
     4664+    5534                                 STCLASS = STCLASS );
     4665+    5535
     4666+    5536            %END_MACRO;
     4667+    5537
     4668+    5538          %MEND;
     4669+    5539
     4670+    5540          %MACRO QI_FPT_TRMATTR ( STCLASS = "SYMREF",
     4671+    5541                                  NAME = QI_FPT_TRMATTR );
     4672+    5542
     4673+    5543            %BEGIN_MACRO ( STCLASS = STCLASS );
     4674+    5544
     4675+    5545          %FPT_TRMATTR ( FPTN = NAME,
     4676+    5546                         STCLASS = STCLASS,
     4677+    5547                         DCB = NIL );
     4678+    5548
     4679+    5549            %END_MACRO;
     4680+    5550
     4681+    5551          %MEND;
     4682+    5552
     4683+    5553          %MACRO QI_FPT_TRMCTL ( STCLASS = "SYMREF",
     4684+    5554                                 NAME = QI_FPT_TRMCTL );
     4685+    5555
     4686+    5556            %BEGIN_MACRO ( STCLASS = STCLASS );
     4687+    5557
     4688+    5558          %FPT_TRMCTL ( FPTN = NAME,
     4689+    5559                        STCLASS = STCLASS,
     4690+    5560                        DCB = NIL );
     4691+    5561
     4692+    5562            %END_MACRO;
     4693+    5563
     4694+    5564          %MEND;
     4695+    5565
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:173  
     4696+    5566          %MACRO QI_VLP_TRMCTL ( STCLASS = "SYMREF",
     4697+    5567                                 NAME = QI_VLP_TRMCTL );
     4698+    5568
     4699+    5569            %BEGIN_MACRO ( STCLASS = STCLASS );
     4700+    5570
     4701+    5571          %VLP_TRMCTL ( FPTN = NAME,
     4702+    5572                        STCLASS = STCLASS );
     4703+    5573
     4704+    5574            %END_MACRO;
     4705+    5575
     4706+    5576          %MEND;
     4707+    5577
     4708+    5578          %MACRO QI_FPT_WAIT ( STCLASS = "SYMREF",
     4709+    5579                               NAME = QI_FPT_WAIT );
     4710+    5580
     4711+    5581            %BEGIN_MACRO ( STCLASS = STCLASS );
     4712+    5582
     4713+    5583          %FPT_WAIT ( FPTN = NAME,
     4714+    5584                      STCLASS = STCLASS );
     4715+    5585
     4716+    5586            %END_MACRO;
     4717+    5587
     4718+    5588          %MEND;
     4719+    5589
     4720+    5590          %MACRO QI_FPT_WRITE ( STCLASS = "SYMREF",
     4721+    5591                                NAME = QI_FPT_WRITE );
     4722+    5592
     4723+    5593            %BEGIN_MACRO ( STCLASS = STCLASS );
     4724+    5594
     4725+    5595          %FPT_WRITE ( FPTN = NAME,
     4726+    5596                       STCLASS = STCLASS,
     4727+    5597                       DCB = NIL );
     4728+    5598
     4729+    5599            %END_MACRO;
     4730+    5600
     4731+    5601          %MEND;
     4732+    5602
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:174  
     4733+    5603          %MACRO QI_FPT_XBREAK ( STCLASS = "SYMREF",
     4734+    5604                                 NAME = QI_FPT_XBREAK );
     4735+    5605
     4736+    5606            %BEGIN_MACRO ( STCLASS = STCLASS );
     4737+    5607
     4738+    5608          %FPT_XBREAK ( FPTN = NAME,
     4739+    5609                        STCLASS = STCLASS,
     4740+    5610                        VLP_XBREAK = QI_VLP_XBREAK );
     4741+    5611
     4742+    5612            %END_MACRO;
     4743+    5613
     4744+    5614          %MEND;
     4745+    5615
     4746+    5616          %MACRO QI_VLP_XBREAK ( STCLASS = "SYMREF",
     4747+    5617                                 NAME = QI_VLP_XBREAK );
     4748+    5618
     4749+    5619            %BEGIN_MACRO ( STCLASS = STCLASS );
     4750+    5620
     4751+    5621          %VLP_XBREAK ( FPTN = NAME,
     4752+    5622                        STCLASS = STCLASS );
     4753+    5623
     4754+    5624            %END_MACRO;
     4755+    5625
     4756+    5626          %MEND;
     4757+    5627
     4758+    5628        %EJECT;
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:175  
     4759+    5629
     4760+    5630        /*
     4761+    5631                      %%% %%    %%% %%   %%%%%%  %% %%%%   %%%%%
     4762+    5632                      %% % %%  %%  %%%  %%       %%%%     %%   %%
     4763+    5633                      %% % %%  %%  %%%  %%       %%%      %%   %%
     4764+    5634                      %% % %%  %%  %%%  %%       %%       %%   %%
     4765+    5635                      %% % %%   %%% %%   %%%%%%  %%        %%%%%
     4766+    5636
     4767+    5637                %%                                          %%%
     4768+    5638                                                            %%%
     4769+    5639               %%%    %% %%%   %%   %%   %%%%%    %%%%%%     %%     %%%%%%
     4770+    5640                %%    %%%  %%  %%   %%  %%   %%  %%         %%     %%
     4771+    5641                %%    %%   %%   %% %%   %%   %%  %%                 %%%%%
     4772+    5642                %%    %%   %%    %%%    %%   %%  %%                     %%
     4773+    5643              %%%%%%  %%   %%     %      %%%%%    %%%%%%           %%%%%%
     4774+    5644                                                                            */
     4775+    5645
     4776+    5646          %MACRO QI$ALL ( STCLASS = "SYMREF" );
     4777+    5647
     4778+    5648            %BEGIN_MACRO ( STCLASS = STCLASS );
     4779+    5649
     4780+    5650            %QI$FPL;
     4781+    5651            %QI_CONTEXT ( STCLASS = STCLASS );
     4782+    5652            %QI$GENERAL;
     4783+    5653            %QI_GENERAL_CIPS ( STCLASS = STCLASS );
     4784+    5654            %QI$DYNAMIC;
     4785+    5655
     4786+    5656            %END_MACRO;
     4787+    5657
     4788+    5658          %MEND;
     4789+    5659
     4790+    5660          %MACRO QI$FPL;
     4791+    5661
     4792+    5662            %BEGIN_MACRO ( STCLASS = STCLASS );
     4793+    5663
     4794+    5664            %QI$OP_SEQUENCE;
     4795+    5665            %QI$OP_ABORT;
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:176  
     4796+    5666            %QI$OP_ACCEPT;
     4797+    5667            %QI$OP_ACTIVATE;
     4798+    5668            %QI$OP_ADD;
     4799+    5669            %QI$OP_ADDX;
     4800+    5670            %QI$OP_ALL_LITERAL;
     4801+    5671            %QI$OP_APPLY;
     4802+    5672            %QI$OP_CALL;
     4803+    5673            %QI$OP_CLEAR;
     4804+    5674            %QI$OP_CLOSE;
     4805+    5675            %QI$OP_CNVBBX;
     4806+    5676            %QI$OP_CNVBN;
     4807+    5677            %QI$OP_CNVBNX;
     4808+    5678            %QI$OP_CNVBPX;
     4809+    5679            %QI$OP_CNVNBT;
     4810+    5680            %QI$OP_CNVPBT;
     4811+    5681            %QI$OP_CNVPN;
     4812+    5682            %QI$OP_DISPLAY;
     4813+    5683            %QI$OP_DIV;
     4814+    5684            %QI$OP_DIVX;
     4815+    5685            %QI$OP_ENABLE;
     4816+    5686            %QI$OP_GOTO;
     4817+    5687            %QI$OP_GOTODP;
     4818+    5688            %QI$OP_IFCLS;
     4819+    5689            %QI$OP_IFCNDA;
     4820+    5690            %QI$OP_IFCNDN;
     4821+    5691            %QI$OP_IFINDR;
     4822+    5692            %QI$OP_IFRELA;
     4823+    5693            %QI$OP_IFRELG;
     4824+    5694            %QI$OP_IFRELN;
     4825+    5695            %QI$OP_INSPECT;
     4826+    5696            %QI$OP_JAZ;
     4827+    5697            %QI$OP_JND;
     4828+    5698            %QI$OP_LOAD;
     4829+    5699            %QI$OP_MOVA;
     4830+    5700            %QI$OP_MOVAE;
     4831+    5701            %QI$OP_MOVAJ;
     4832+    5702            %QI$OP_MOVB;
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:177  
     4833+    5703            %QI$OP_MOVBA;
     4834+    5704            %QI$OP_MOVDE;
     4835+    5705            %QI$OP_MOVG;
     4836+    5706            %QI$OP_MOVN;
     4837+    5707            %QI$OP_MOVNA;
     4838+    5708            %QI$OP_MOVNE;
     4839+    5709            %QI$OP_MOVNEA;
     4840+    5710            %QI$OP_MOVP;
     4841+    5711            %QI$OP_MOVPA;
     4842+    5712            %QI$OP_MULT;
     4843+    5713            %QI$OP_MULTX;
     4844+    5714            %QI$OP_OPEN;
     4845+    5715            %QI$OP_PERFM;
     4846+    5716            %QI$OP_PERFMT;
     4847+    5717            %QI$OP_READ_FORM;
     4848+    5718            %QI$OP_READ_TRAN;
     4849+    5719            %QI$OP_ROUND;
     4850+    5720            %QI$OP_STOP_PAUSE;
     4851+    5721            %QI$OP_STOP_RUN;
     4852+    5722            %QI$OP_SUB;
     4853+    5723            %QI$OP_SUBSCR;
     4854+    5724            %QI$OP_SUBX;
     4855+    5725            %QI$OP_VERI_PRES;
     4856+    5726            %QI$OP_WRITE_FORM;
     4857+    5727            %QI$OP_WRITE_TRAN;
     4858+    5728
     4859+    5729            %QI$INITIALIZATION_BLOCK;
     4860+    5730            %QI$CONDITION_CONTROL_BLOCK;
     4861+    5731            %QI$CONDITION_LEGAL_BLOCK;
     4862+    5732            %QI$PSEUDO_CIP;
     4863+    5733            %QI$CIP;
     4864+    5734            %QI$DAD;
     4865+    5735            %QI$COBOL_DAD;
     4866+    5736            %QI$COBOL_DAD_P_BITS;
     4867+    5737            %QI$COBOL_DAD_P_ITEMS;
     4868+    5738            %QI$LINKAGE_ARGUMENT_DESCRIPTOR;
     4869+    5739            %QI$FIELD_DAD;
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:178  
     4870+    5740            %QI$FIELD_DAD_P;
     4871+    5741            %QI$MAJOR_NODE;
     4872+    5742            %QI$MINOR_NODE;
     4873+    5743            %QI$FILE;
     4874+    5744            %QI$FORM_FILE;
     4875+    5745            %QI$TRAN_FILE;
     4876+    5746            %QI$FRAME;
     4877+    5747            %QI$PICTURE_STRING;
     4878+    5748            %QI$NUMERIC_PICTURE_STRING;
     4879+    5749            %QI$ALPHANUMERIC_PICTURE_STRING;
     4880+    5750
     4881+    5751            %QI$TERMINAL_ATTRIBUTES;
     4882+    5752            %QI$ACTIVATION_STATUS;
     4883+    5753            %QI$PERFORM_BLOCK;
     4884+    5754            %QI$INDICATORS;
     4885+    5755            %QI$FIELD_STATUS;
     4886+    5756            %QI$MAJOR_STATUS;
     4887+    5757            %QI$MINOR_STATUS;
     4888+    5758            %QI$FILE_STATUS;
     4889+    5759            %QI$FORM_STATUS;
     4890+    5760            %QI$TRAN_STATUS;
     4891+    5761            %QI$FRAME_STATUS;
     4892+    5762
     4893+    5763            %END_MACRO;
     4894+    5764
     4895+    5765          %MEND;
     4896+    5766
     4897+    5767          %MACRO QI_CONTEXT ( STCLASS = "SYMREF" );
     4898+    5768
     4899+    5769            %BEGIN_MACRO ( STCLASS = STCLASS );
     4900+    5770
     4901+    5771            %QI_1 ( STCLASS = STCLASS );
     4902+    5772            %QI_SWORK ( STCLASS = STCLASS );
     4903+    5773            %QI_SWORK_2 ( STCLASS = STCLASS );
     4904+    5774            %QI_BLANK ( STCLASS = STCLASS );
     4905+    5775            %QI_MAT_MATCH ( STCLASS = STCLASS );
     4906+    5776            %QI_MAT_NONMATCH ( STCLASS = STCLASS );
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:179  
     4907+    5777            %QI_SLASH ( STCLASS = STCLASS );
     4908+    5778            %QI_ZERO ( STCLASS = STCLASS );
     4909+    5779            %QI_BINARY_ZERO ( STCLASS = STCLASS );
     4910+    5780            %QI_CLASS_ALPHA ( STCLASS = STCLASS );
     4911+    5781            %QI_CLASS_NUMERIC ( STCLASS = STCLASS );
     4912+    5782            %QI_OVERPUNCHED_SIGNS ( STCLASS = STCLASS );
     4913+    5783            %QI_ZERO_ACCUMULATOR ( STCLASS = STCLASS );
     4914+    5784            %QGB_PARAM ( STCLASS = STCLASS );
     4915+    5785
     4916+    5786            %END_MACRO;
     4917+    5787
     4918+    5788          %MEND;
     4919+    5789
     4920+    5790          %MACRO QI$GENERAL;
     4921+    5791
     4922+    5792            %BEGIN_MACRO ( STCLASS = STCLASS );
     4923+    5793
     4924+    5794            %QI$GENERAL_BASED;
     4925+    5795
     4926+    5796            %END_MACRO;
     4927+    5797
     4928+    5798          %MEND;
     4929+    5799
     4930+    5800          %MACRO QI_GENERAL_CIPS ( STCLASS = "SYMREF" );
     4931+    5801
     4932+    5802            %BEGIN_MACRO ( STCLASS = STCLASS );
     4933+    5803
     4934+    5804            /* QI@CIP_OPERATION stuff.... */
     4935+    5805            %QI@ALR ( STCLASS = STCLASS,
     4936+    5806                      NAME = QI_ALR );
     4937+    5807            %QI@TYPE_DISPLAY_SOURCE ( STCLASS = STCLASS,
     4938+    5808                                      NAME = QI_TYPE_DISPLAY_SOURCE );
     4939+    5809            %QI@TYPE_DISPLAY_TARGET ( STCLASS = STCLASS,
     4940+    5810                                      NAME = QI_TYPE_DISPLAY_TARGET );
     4941+    5811            %QI@TYPE_BINARY_TARGET ( STCLASS = STCLASS,
     4942+    5812                                     NAME = QI_TYPE_BINARY_TARGET );
     4943+    5813            %QI@SRCH_VRFY ( STCLASS = STCLASS,
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:180  
     4944+    5814                            NAME = QI_SRCH_VRFY );
     4945+    5815            %QI@MAT ( STCLASS = STCLASS,
     4946+    5816                      NAME = QI_MAT );
     4947+    5817
     4948+    5818            /* QI_CIP_DESCRIPTOR stuff.... */
     4949+    5819            %QI@4_CHAR_ALPHANUMERIC ( STCLASS = STCLASS,
     4950+    5820                                      NAME = QI_4_CHAR_ALPHANUMERIC );
     4951+    5821            %QI@31_DIGIT_SLS_DISPLAY ( STCLASS = STCLASS,
     4952+    5822                                      NAME = QI_31_DIGIT_SLS_DISPLAY );
     4953+    5823            %QI@16_BIT_BINARY ( STCLASS = STCLASS,
     4954+    5824                                NAME = QI_16_BIT_BINARY );
     4955+    5825            %QI@32_BIT_BINARY ( STCLASS = STCLASS,
     4956+    5826                                NAME = QI_32_BIT_BINARY );
     4957+    5827            %QI@31_DIGIT_ST_PACKED ( STCLASS = STCLASS,
     4958+    5828                                     NAME = QI_31_DIGIT_ST_PACKED );
     4959+    5829            %QI@PICTURE_STRING ( STCLASS = STCLASS,
     4960+    5830                                 NAME = QI_PICTURE_STRING );
     4961+    5831            %QI@ACCUMULATOR_DAD ( STCLASS = STCLASS,
     4962+    5832                                  NAME = QI_ACCUMULATOR_DAD );
     4963+    5833
     4964+    5834            %END_MACRO;
     4965+    5835
     4966+    5836          %MEND;
     4967+    5837
     4968+    5838          %MACRO QI$DYNAMIC ( STCLASS = STCLASS );
     4969+    5839
     4970+    5840            %BEGIN_MACRO ( STCLASS = STCLASS );
     4971+    5841
     4972+    5842            %QI$GZ_HEADER;
     4973+    5843            %QI$GZ_FIELD;
     4974+    5844
     4975+    5845            %END_MACRO;
     4976+    5846
     4977+    5847          %MEND;
     4978+    5848
     4979+    5849          %MACRO QI_FPTS ( STCLASS = "SYMREF" );
     4980+    5850
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:181  
     4981+    5851            %BEGIN_MACRO ( STCLASS = STCLASS );
     4982+    5852
     4983+    5853            %QI_FPT_CLOSE ( STCLASS = STCLASS );
     4984+    5854            %QI_FPT_DBCONTROL ( STCLASS = STCLASS );
     4985+    5855            %QI_FPT_DCLFLD ( STCLASS = STCLASS );
     4986+    5856            %QI_VLP_FLDATR ( STCLASS = STCLASS );
     4987+    5857            %QI_FPT_DEVICE ( STCLASS = STCLASS );
     4988+    5858            %QI_FPT_ERASE ( STCLASS = STCLASS );
     4989+    5859            %QI_FPT_ERRMSG ( STCLASS = STCLASS );
     4990+    5860            %QI_FPT_EXIT ( STCLASS = STCLASS );
     4991+    5861            %QI_FPT_FDS ( STCLASS = STCLASS );
     4992+    5862            %QI_FPT_FDS_LOAD ( STCLASS = STCLASS );
     4993+    5863            %QI_FPT_GDS ( STCLASS = STCLASS );
     4994+    5864            %QI_VLP_SEGMENT ( STCLASS = STCLASS );
     4995+    5865            %QI_FPT_GDS_BUFFER ( STCLASS = STCLASS );
     4996+    5866            %QI_VLP_SEGMENT_BUFFER ( STCLASS = STCLASS );
     4997+    5867            %QI_FPT_GDS_LOAD ( STCLASS = STCLASS );
     4998+    5868            %QI_VLP_SEGMENT_LOAD ( STCLASS = STCLASS );
     4999+    5869            %QI_FPT_GLINEATTR ( STCLASS = STCLASS );
     5000+    5870            %QI_FPT_INT ( STCLASS = STCLASS );
     5001+    5871            %QI_FPT_LDTRC ( STCLASS = STCLASS );
     5002+    5872            %QI_FPT_MDFFLD ( STCLASS = STCLASS );
     5003+    5873            %QI_FPT_OPEN ( STCLASS = STCLASS );
     5004+    5874            %QI_FPT_PROMPT ( STCLASS = STCLASS );
     5005+    5875            %QI_FPT_READ ( STCLASS = STCLASS );
     5006+    5876            %QI_VLP_CG ( STCLASS = STCLASS );
     5007+    5877            %QI_FPT_RLSFLD ( STCLASS = STCLASS );
     5008+    5878            %QI_FPT_SLCFLD ( STCLASS = STCLASS );
     5009+    5879            %QI_FPT_TIME ( STCLASS = STCLASS );
     5010+    5880            %QI_FPT_TRAP ( STCLASS = STCLASS );
     5011+    5881            %QI_VLP_TRAP_CONDITIONS ( STCLASS = STCLASS );
     5012+    5882            %QI_FPT_TRMATTR ( STCLASS = STCLASS );
     5013+    5883            %QI_FPT_TRMCTL ( STCLASS = STCLASS );
     5014+    5884            %QI_VLP_TRMCTL ( STCLASS = STCLASS );
     5015+    5885            %QI_FPT_WAIT ( STCLASS = STCLASS );
     5016+    5886            %QI_FPT_WRITE ( STCLASS = STCLASS );
     5017+    5887            %QI_FPT_XBREAK ( STCLASS = STCLASS );
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:182  
     5018+    5888            %QI_VLP_XBREAK ( STCLASS = STCLASS );
     5019+    5889
     5020+    5890            %END_MACRO;
     5021+    5891
     5022+    5892          %MEND;
     5023+    5893
     5024+    5894        %EJECT;
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:183  
     5025+    5895
     5026+    5896          %MACRO BEGIN_MACRO ( STCLASS = "QI#HUH" );
     5027+    5897
     5028+    5898            %SET LISTDIR = '0'B;
     5029+    5899            %SET LISTEXP = '1'B;
     5030+    5900            %SET LISTSUB = '1'B;
     5031+    5901
     5032+    5902
     5033+    5903            %LSET QI#STCLASS = CONCAT(TEXTCHAR(STCLASS),'        ');
     5034+    5904
     5035+    5905            %IF (SUBSTR(QI#STCLASS,0,6) = 'STATIC')
     5036+    5906             OR (SUBSTR(QI#STCLASS,0,8) = 'CONSTANT')
     5037+    5907             OR (SUBSTR(QI#STCLASS,0,3) = 'EXT');
     5038+    5908              %SET INIT = CHARTEXT('INIT');
     5039+    5909            %ELSE;
     5040+    5910              %SET INIT = CHARTEXT('/* Was INIT''ed to:  ');
     5041+    5911            %ENDIF;
     5042+    5912
     5043+    5913            %SET QI#MACRO_DEPTH = QI#MACRO_DEPTH + 1;
     5044+    5914
     5045+    5915          %MEND;
     5046+    5916
     5047+    5917          %MACRO END_MACRO;
     5048+    5918
     5049+    5919            %SET QI#MACRO_DEPTH = QI#MACRO_DEPTH - 1;
     5050+    5920
     5051+    5921            %IF QI#MACRO_DEPTH = 0;
     5052+    5922              %SET LISTEXP = '0'B;
     5053+    5923              %SET LISTSUB = '0'B;
     5054+    5924              %SET LISTDIR = '1'B;
     5055+    5925            %ENDIF;
     5056+    5926
     5057+    5927          %MEND;
       20     5928
       21     5929        /*
       22     5930           STATIC and CONSTANT context-type stuff.
       23     5931        */
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:184  
       24     5932          %QI_1 ( STCLASS = "STATIC SYMDEF" );
              5933            %BEGIN_MACRO ( STCLASS = STCLASS );
              5934            %SET LISTDIR = '0'B;
              5947    1     DCL 1 QI_1 STATIC SYMDEF DALIGNED,         /* interpreter data */
              5948    1           2 BASE DALIGNED,
              5949    1             3 DATA$ PTR INIT(ADDR(NIL))/**/,
              5950                            /* base pointer for user data */
              5951    1             3 PROC$ PTR INIT(ADDR(NIL))/**/,
              5952                            /* base pointer for user proc */
              5953    1             3 INTR$ PTR INIT(ADDR(NIL))/**/,
              5954                            /* base pointer for intr data */
              5955    1           2 BASE_A$(0:2) REDEF BASE PTR,
              5956    1           2 INSTR$ PTR DALIGNED INIT(ADDR(NIL))/**/,
              5957                            /* pointer to last/current op-code sequence */
              5958    1           2 CURR_INSTR$ PTR DALIGNED INIT(ADDR(NIL))/**/,
              5959                            /* current instruction */
              5960    1           2 INITIALIZATION_BLOCK$ PTR DALIGNED INIT(ADDR(NIL))/**/,
              5961                            /* from arguments to QAT$TALLYHO */
              5962    1           2 ARGUMENTS_AND_OR_FREE_AUTO_A$$ PTR DALIGNED INIT(ADDR(NIL))/**/,
              5963                            /* from arguments to QAT$TALLYHO */
              5964    1           2 UNWIND$ REMEMBER DALIGNED /*%INIT(QAU$UNWIND)%CHARTEXT('\**\')*/,
              5965                            /* contains address of somebody in QAT$TALLYHO
              5966                               (somebody using top auto frame) */
              5967    1           2 VERIFY_BUFFER$ PTR DALIGNED INIT(ADDR(NIL))/**/,
              5968                            /* address of working area for VERIFY */
              5969    1           2 VERIFY_BUFFER_SIZE UBIN INIT(0)/**/,
              5970                            /* size in bytes of working area for VERIFY */
              5971    1           2 HOUSEKEEPING ALIGNED,
              5972    1             3 IS_DBCONTROL_ESTABLISHED BIT(1) UNAL INIT('0'B)/**/,
              5973                            /* set if M$DBCONTROL has been called */
              5974    1             3 IS_INT_ESTABLISHED BIT(1) UNAL INIT('0'B)/**/,
              5975                            /* set if M$INT has been called */
              5976    1             3 IS_TRAP_ESTABLISHED BIT(1) UNAL INIT('0'B)/**/,
              5977                            /* set if M$TRAP has been called */
              5978    1             3 IS_BUFFER_ALLOCATED BIT(1) UNAL INIT('0'B)/**/,
              5979                            /* set if the buffer for X$whatever has been allocated */
              5980    1             3 IS_MESSAGE_LINE_CREATED BIT(1) UNAL INIT('0'B)/**/,
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:185  
              5981                            /* set if the MESSAGE LINE has been M$OPENed */
              5982    1             3 IS_DEBUGGER_ASSOCIATING BIT(1) UNAL INIT('0'B)/**/,
              5983                            /* set if the debugger has post-associated
              5984                               (QCE$ERROR_DBCONTROL was entered) */
              5985    1             3 INITIAL_PAGEHALT_SETTING BIT(2) UNAL INIT('00'B)/**/,
              5986                            /* value of VLP_TRMCTL.PAGEHALT at invocation */
              5987    1           2 SCREEN_UPDATE_FLAGS ALIGNED,
              5988                              /* set by screen-updating routines:
              5989                                     APPLY, CLEAR, DEACTIVATE, GET_FIELD, WRITE/DISPLAY
              5990                                 checked/reset by QCU$UPDATE_SCREEN */
              5991    1             3 WAS_APPLIED BIT(1) UNAL INIT('0'B)/**/,
              5992                              /* an APPLY (M$MDFFLD) was done */
              5993    1             3 WAS_CLEARED BIT(1) UNAL INIT('0'B)/**/,
              5994                              /* a CLEAR (M$ERASE) was done */
              5995    1             3 WAS_DEACTIVATED BIT(1) UNAL INIT('0'B)/**/,
              5996                              /* a DEACTIVATE (M$RLSFLD) was done */
              5997    1             3 WAS_WRITTEN BIT(1) UNAL INIT('0'B)/**/,
              5998                              /* a DISPLAY/WRITE (M$WRITE) was done */
              5999    1           2 SOURCE$ PTR DALIGNED INIT(ADDR(NIL))/**/,
              6000                            /* pointer to DAD for QCS$SETUP */
              6026    1         2 OP DALIGNED,
              6028    1           3 CIP,
              6098    1               4 S DALIGNED,           /* CIP descriptor */
              6143    1                 5 CD,                  /* Control bits for DISPLAY */
              6144    1                   6 OFFSET UBIN(1) UNAL INIT(0)/**/,
              6145    1                   6 SIGN UBIN(2) UNAL INIT(0)/**/,
              6146    1                 5 CA REDEF CD,         /* Control bits for ALPHANUMERIC */
              6147    1                   6 OFFSET UBIN(1) UNAL,
              6148    1                   6 FILL UBIN(1) UNAL,
              6149    1                   6 MBZ UBIN(1) UNAL,  /* not used:  MBZ */
              6150    1                 5 CB REDEF CD,         /* Control bits for BINARY */
              6151    1                   6 OFFSET UBIN(1) UNAL,
              6152    1                   6 MBZ UBIN(2) UNAL,  /* not used:  MBZ */
              6153    1                 5 CP REDEF CD,         /* Control bits for PACKED */
              6154    1                   6 OFFSET UBIN(2) UNAL,
              6155    1                   6 SIGN UBIN(1) UNAL,
              6157    1                 5 LEN UBIN(5) UNAL INIT(0)/**/,
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:186  
              6161    1                 5 T UBIN(1) UNAL INIT(0)/**/,
              6163    1                 5 AS UBIN(7) UNAL INIT(BITBIN('B'X))/**/,
              6168    1                 5 DISP UBIN INIT(6)/**/,
              6169    1               4 S_A (0:1) REDEF S UBIN ,
              6246    1               4 T DALIGNED,           /* CIP descriptor */
              6291    1                 5 CD,                  /* Control bits for DISPLAY */
              6292    1                   6 OFFSET UBIN(1) UNAL INIT(0)/**/,
              6293    1                   6 SIGN UBIN(2) UNAL INIT(0)/**/,
              6294    1                 5 CA REDEF CD,         /* Control bits for ALPHANUMERIC */
              6295    1                   6 OFFSET UBIN(1) UNAL,
              6296    1                   6 FILL UBIN(1) UNAL,
              6297    1                   6 MBZ UBIN(1) UNAL,  /* not used:  MBZ */
              6298    1                 5 CB REDEF CD,         /* Control bits for BINARY */
              6299    1                   6 OFFSET UBIN(1) UNAL,
              6300    1                   6 MBZ UBIN(2) UNAL,  /* not used:  MBZ */
              6301    1                 5 CP REDEF CD,         /* Control bits for PACKED */
              6302    1                   6 OFFSET UBIN(2) UNAL,
              6303    1                   6 SIGN UBIN(1) UNAL,
              6305    1                 5 LEN UBIN(5) UNAL INIT(0)/**/,
              6309    1                 5 T UBIN(1) UNAL INIT(0)/**/,
              6311    1                 5 AS UBIN(7) UNAL INIT(BITBIN('B'X))/**/,
              6316    1                 5 DISP UBIN INIT(8)/**/,
              6317    1               4 T_A (0:1) REDEF T UBIN ,
              6394    1               4 AUX DALIGNED,           /* CIP descriptor */
              6439    1                 5 CD,                  /* Control bits for DISPLAY */
              6440    1                   6 OFFSET UBIN(1) UNAL INIT(0)/**/,
              6441    1                   6 SIGN UBIN(2) UNAL INIT(0)/**/,
              6442    1                 5 CA REDEF CD,         /* Control bits for ALPHANUMERIC */
              6443    1                   6 OFFSET UBIN(1) UNAL,
              6444    1                   6 FILL UBIN(1) UNAL,
              6445    1                   6 MBZ UBIN(1) UNAL,  /* not used:  MBZ */
              6446    1                 5 CB REDEF CD,         /* Control bits for BINARY */
              6447    1                   6 OFFSET UBIN(1) UNAL,
              6448    1                   6 MBZ UBIN(2) UNAL,  /* not used:  MBZ */
              6449    1                 5 CP REDEF CD,         /* Control bits for PACKED */
              6450    1                   6 OFFSET UBIN(2) UNAL,
              6451    1                   6 SIGN UBIN(1) UNAL,
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:187  
              6453    1                 5 LEN UBIN(5) UNAL INIT(0)/**/,
              6457    1                 5 T UBIN(1) UNAL INIT(0)/**/,
              6459    1                 5 AS UBIN(7) UNAL INIT(BITBIN('B'X))/**/,
              6464    1                 5 DISP UBIN INIT(10)/**/,
              6465    1               4 AUX_A (0:1) REDEF AUX UBIN ,
              6479    1           3 CIP_A (0:2) REDEF CIP UBIN(32),
              6486    1           3 DATA DALIGNED,
              6487    1             4 S$ PTR INIT(ADDR(NIL))/**/,
              6488    1             4 T$ PTR INIT(ADDR(NIL))/**/,
              6489    1             4 AUX$ PTR INIT(ADDR(NIL))/**/,
              6490    1           3 DATA_A$ (0:2) REDEF DATA PTR,
              6526    1           3 LEN,
              6527    1             4 S UBIN INIT(0)/**/,
              6528    1             4 T UBIN INIT(0)/**/,
              6529    1             4 AUX UBIN INIT(0)/**/,
              6530    1           3 LEN_A (0:2) REDEF LEN UBIN,
              6531    1           3 SRCH_VRFY_ARGS REDEF LEN,
              6532    1             4 LEN UBIN,
              6533    1             4 LIST_LEN UBIN,
              6534    1             4 * UBIN,
              6535    1           3 SRCH_VRFY_ARGS_A (0:2) REDEF LEN UBIN,
              6536    1           3 SHIFT_COUNT REDEF LEN,
              6537    1             4 S UBIN,
              6538    1             4 T UBIN,
              6539    1             4 AUX UBIN,
              6540    1           3 SHIFT_COUNT_A (0:2) REDEF LEN UBIN,
              6543    1           3 INX,
              6544    1             4 S UBIN INIT(0)/**/,
              6545    1             4 T UBIN INIT(0)/**/,
              6546    1             4 AUX UBIN INIT(0)/**/,
              6547    1           3 INX_A (0:2) REDEF INX UBIN,
              6548    1           3 DEC REDEF INX,
              6549    1             4 S SBIN,
              6550    1             4 T SBIN,
              6551    1             4 AUX SBIN,
              6552    1           3 DEC_A (0:2) REDEF INX SBIN,
              6565    1           3 SRCH_VRFY_ELEMS,
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:188  
              6566    1             4 LEN UBIN INIT(0)/**/,
              6567    1             4 LIST_LEN UBIN INIT(0)/**/,
              6568    1           3 SRCH_VRFY_ELEMS_A (0:1) REDEF SRCH_VRFY_ELEMS UBIN,
              6596    1           3 PICTURE_STRING,
              6597    1             4 INTERMEDIATE_RESULT_LEN UBIN INIT(0)/**/,
              6598    1             4 DEC UBIN INIT(0)/**/,
              6599    1           3 PICTURE_STRING_A (0:1) REDEF PICTURE_STRING UBIN,
              6600    1           3 SRCH_RESULT REDEF PICTURE_STRING,
              6601    1             4 ARG_NUMBER UBIN,
              6602    1             4 DISP UBIN,
              6603    1           3 SRCH_RESULT_A (0:1) REDEF PICTURE_STRING UBIN,
              6604    1           3 VRFY_RESULT REDEF PICTURE_STRING,
              6605    1             4 DISP UBIN,
              6606    1             4 * UBIN,
              6607    1           3 VRFY_RESULT_A (0:1) REDEF PICTURE_STRING UBIN,
              6610    1           3 FILL_CHAR,
              6611    1             4 TEXT UBIN BYTE UNAL INIT(32)/**/,
              6612    1             4 * UBIN BYTE UNAL INIT(0)/**/,
              6613    1           3 SIZE_ERROR REDEF FILL_CHAR UBIN,
              6629    1           3 ROUND UBIN INIT(0)/**/,
              6630    1           3 COMP_RESULT REDEF ROUND UBIN,
              6631    1           3 TARGET_SIZE REDEF ROUND UBIN ,
              6643    1           2 DAD DALIGNED,
              6644                            /* pointers to DADs */
              6645    1             3 S$ PTR INIT(ADDR(NIL))/**/,
              6646    1             3 T$ PTR INIT(ADDR(NIL))/**/,
              6647    1             3 AUX$ PTR INIT(ADDR(NIL))/**/,
              6648    1           2 DAD_A$(0:2) REDEF DAD PTR,
              6649    1           2 IS_ALL_LIT,
              6650                            /* ALL "literal" indicator */
              6651    1             3 S BIT(1) ALIGNED INIT('0'B)/**/,
              6652    1             3 T BIT(1) ALIGNED INIT('0'B)/**/,
              6653    1             3 AUX BIT(1) ALIGNED INIT('0'B)/**/,
              6654    1           2 IS_ALL_LIT_A(0:2) REDEF IS_ALL_LIT BIT(1) ALIGNED,
              6655    1           2 IS_FORM_VARIABLE,
              6656                            /* COBOL vs FIELD variable type indicator */
              6657    1             3 S BIT(1) ALIGNED INIT('0'B)/**/,
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:189  
              6658    1             3 T BIT(1) ALIGNED INIT('0'B)/**/,
              6659    1             3 AUX BIT(1) ALIGNED INIT('0'B)/**/,
              6660    1           2 IS_FORM_VARIABLE_A(0:2) REDEF IS_FORM_VARIABLE BIT(1) ALIGNED,
              6661    1           2 IS_TEMP,
              6662                            /* on if this is a temp (must build descriptor) */
              6663    1             3 S BIT(1) ALIGNED INIT('0'B)/**/,
              6664    1             3 T BIT(1) ALIGNED INIT('0'B)/**/,
              6665    1             3 AUX BIT(1) ALIGNED INIT('0'B)/**/,
              6666    1           2 IS_TEMP_A(0:2) REDEF IS_TEMP BIT(1) ALIGNED,
              6667    1           2 OFFSET,
              6668                            /* byte offsets */
              6669    1             3 S UBIN INIT(0)/**/,
              6670    1             3 T UBIN INIT(0)/**/,
              6671    1             3 AUX UBIN INIT(0)/**/,
              6672    1           2 OFFSET_A(0:2) REDEF OFFSET UBIN,
              6673    1           2 OTTER_SPACE DALIGNED,
              6674                            /* pointers to OTTER space */
              6675    1             3 S$ PTR INIT(ADDR(NIL))/**/,
              6676    1             3 T$ PTR INIT(ADDR(NIL))/**/,
              6677    1             3 AUX$ PTR INIT(ADDR(NIL))/**/,
              6678    1           2 OTTER_SPACE_A$(0:2) REDEF OTTER_SPACE PTR,
              6679    1           2 PICTURE_STRING DALIGNED,
              6680                            /* pointers to PICture strings */
              6681    1             3 S$ PTR INIT(ADDR(NIL))/**/,
              6682    1             3 T$ PTR INIT(ADDR(NIL))/**/,
              6683    1             3 AUX$ PTR INIT(ADDR(NIL))/**/,
              6684    1           2 PICTURE_STRING_A$(0:2) REDEF PICTURE_STRING PTR,
              6685    1           2 TYPE,
              6686                            /* data types of operands */
              6687    1             3 S UBIN INIT(0)/**/,
              6688    1             3 T UBIN INIT(0)/**/,
              6689    1             3 AUX UBIN INIT(0)/**/,
              6690    1           2 TYPE_A(0:2) REDEF TYPE UBIN,
              6691    1           2 OP_CODE UBIN INIT(0)/**/,
              6692                            /* current op-code */
              6693    1           2 A_REG SBIN INIT(0)/**/,
              6694                            /* A-register */
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:190  
              6695    1           2 SIZE_ERR UBIN INIT(0)/**/,
              6696                            /* If 1, a "SIZE ERROR" condition has occured */
              6697    1           2 AT_END UBIN INIT(0)/**/,
              6698                            /* "AT END" flag */
              6699    1           2 ACCUM(0:7) UBIN INIT(0*0)/**/,
              6700                            /* accumulator */
              6701    1           2 DEC_ACC SBIN INIT(0)/**/,
              6702                            /* decimal position of accumulator */
              6703    1           2 NO_DATA UBIN INIT(0)/**/,
              6704                            /* no-data indicator */
              6726    1         2 MESSAGE_LINE_DAD ALIGNED,
              6728    1           3 WORD0 SBIN,
              6729    1           3 WORD0_FLAGS REDEF WORD0,
              6730    1             4 INDIRECT BIT(1) UNAL,          /* on for indirect reference */
              6731    1             4 * UBIN(4) UNAL,
              6732    1             4 IS_JUSTIFIED_RIGHT BIT(1) UNAL,
              6733    1             4 * UBIN(2) UNAL,
              6734    1             4 IS_FORM_VARIABLE BIT(1) UNAL,  /* on for FORM variable */
              6735    1             4 IS_CONSTANT BIT(1) UNAL,       /* on if CONSTANT */
              6736    1             4 DIMENSION_COUNT UBIN(2) UNAL,  /* # of dimensions */
              6737    1             4 TYPE UBIN(4) UNAL,             /* variable TYPE */
              6759    1         3 PSEUDO_CIP ALIGNED,           /* CIP descriptor */
              6761    1           4 ALPHANUMERIC,
              6762    1             5 CA,                  /* Control bits for ALPHANUMERIC */
              6763    1               6 OFFSET UBIN(1) UNAL,
              6764    1             5 * UBIN(1) UNAL,
              6765    1             5 LEN UBIN(14) UNAL,
              6766    1           4 NUMERIC REDEF ALPHANUMERIC,
              6767    1             5 CB,                  /* Control bits for BINARY */
              6768    1               6 OFFSET UBIN(1) UNAL,
              6769    1               6 MBZ UBIN(2) UNAL,
              6770    1             5 CD REDEF CB,         /* Control bits for DISPLAY */
              6771    1               6 OFFSET UBIN(1) UNAL,
              6772    1               6 SIGN UBIN(2) UNAL,
              6773    1             5 CP REDEF CB,         /* Control bits for PACKED */
              6774    1               6 OFFSET UBIN(2) UNAL,
              6775    1               6 SIGN UBIN(1) UNAL,
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:191  
              6776    1             5 LEN UBIN(5) UNAL,
              6777    1             5 * UBIN(2) UNAL,
              6778    1             5 DEC SBIN(6) UNAL,
              6783    1           4 DATA@ UBIN,
              6784    1         3 PSEUDO_CIP_A (0:1) REDEF PSEUDO_CIP UBIN ,
              6804    1           2 MESSAGE_LINE_GZ DALIGNED,
              6805    1             3 HEADER$ PTR /* Was INIT'ed to:  (ADDR(NIL))/**/,
              6806                          /* Pointer to the QI$GZ_HEADER area corresponding to
              6807                             the default MESSAGE LINE. */
              6808    1             3 START$ PTR /* Was INIT'ed to:  (ADDR(NIL))/**/,
              6809                          /* Pointer to the QI$GZ_FIELD area corresponding to
              6810                             the default MESSAGE LINE. */
              6811    1             3 STOP$ PTR /* Was INIT'ed to:  (ADDR(NIL))/**/,
              6812                          /* Pointer to the QI$GZ_FIELD area corresponding to
              6813                             the default MESSAGE LINE.  (Included for consistency.) */
              6814    1           2 GZ DALIGNED,
              6815    1             3 LAST_HEADER$ PTR /* Was INIT'ed to:  (ADDR(NIL))/**/,
              6816                            /* Pointer to the most recently allocated QI$GZ_HEADER
              6817                               area (and therefore the "highest" in memory). */
              6818    1             3 AVAILABLE$ PTR /* Was INIT'ed to:  (ADDR(NIL))/**/,
              6819                            /* Pointer to the next available spot at which a
              6820                               QI$GZ_HEADER area may reside. */
              6821    1             3 NEXT_AVAILABLE_FLDID UBIN /* Was INIT'ed to:  (0)/**/,
              6822                            /* Running count of FLDIDs:  they are allocated
              6823                               in FRame-sized chunks by QBA$ACTIVATE, and
              6824                               remain the property of a once-activated FRame,
              6825                               even if/when it's DEACTIVATEd. */
              6826    1           2 FILE_HEAD DALIGNED,
              6827    1             3 FORM$ PTR /* Was INIT'ed to:  (ADDR(NIL))/**/,
              6828                            /* Pointer to head of currently opened
              6829                               form FD chain. */
              6830    1             3 TRAN$ PTR /* Was INIT'ed to:  (ADDR(NIL))/**/,
              6831                            /* Pointer to head of currently opened
              6832                               transaction FD chain. */
              6833    1           2 FILE_HEAD_A$(0:1) REDEF FILE_HEAD PTR,
              6834    1           2 OPENED_COUNT,
              6835    1             3 FORM UBIN /* Was INIT'ed to:  (0)/**/,
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:192  
              6836    1             3 TRAN UBIN /* Was INIT'ed to:  (0)/**/,
              6837    1           2 OPENED_COUNT_A(0:1) REDEF OPENED_COUNT UBIN,
              6838    1           2 CURRENT,
              6839    1             3 FILE$ PTR DALIGNED /* Was INIT'ed to:  (ADDR(NIL))/**/,
              6840                            /* pointer to currently working file */
              6841    1             3 FORM$ REDEF FILE$ PTR,
              6842                            /* for when we know it's a form file */
              6843    1             3 TRAN$ REDEF FILE$ PTR,
              6844                            /* for when we know it's a transaction file */
              6845    1             3 FILE_STATUS$ PTR DALIGNED /* Was INIT'ed to:  (ADDR(NIL))/**/,
              6846                            /* pointer to currently working file status area */
              6847    1             3 FORM_STATUS$ REDEF FILE_STATUS$ PTR,
              6848                            /* for when we know it's a form file */
              6849    1             3 TRAN_STATUS$ REDEF FILE_STATUS$ PTR,
              6850                            /* for when we know it's a transaction file */
              6851    1             3 FRAME$ PTR DALIGNED /* Was INIT'ed to:  (ADDR(NIL))/**/,
              6852                            /* pointer to currently working FRAME block */
              6853    1             3 FRAME_STATUS$ PTR DALIGNED /* Was INIT'ed to:  (ADDR(NIL))/**/,
              6854                            /* pointer to currently working FRAME scratch area */
              6855    1             3 FRAME_INDEX UBIN /* Was INIT'ed to:  (0)/**/,
              6856                            /* index into QI$FORM_FILE.FRAME_LIST_A@P
              6857                               of QI_1.CURRENT.FRAME$ */
              6858    1             3 NODE$ PTR DALIGNED /* Was INIT'ed to:  (ADDR(NIL))/**/,
              6859                            /* pointer to currently working node block */
              6860    1             3 NODE_STATUS$ PTR DALIGNED /* Was INIT'ed to:  (ADDR(NIL))/**/,
              6861                            /* pointer to currently working node scratch area */
              6862    1           2 SPECIAL_NAMES DALIGNED,
              6863    1             3 CURRENT_FORM$ PTR /* Was INIT'ed to:  (ADDR(NIL))/**/,
              6864                            /* Pointer to data area of CURRENT-FORM variable. */
              6865    1             3 CURRENT_FRAME$ PTR /* Was INIT'ed to:  (ADDR(NIL))/**/,
              6866                            /* Pointer to data area of CURRENT-FRAME variable. */
              6867    1             3 CURRENT_FIELD$ PTR /* Was INIT'ed to:  (ADDR(NIL))/**/,
              6868                            /* Pointer to data area of CURRENT-FIELD variable. */
              6869    1             3 RETRY$ PTR DALIGNED /* Was INIT'ed to:  (ADDR(NIL))/**/,
              6870                            /* Pointer to data area of RETRY variable. */
              6871    1           2 SPECIAL_NAMES_A$(0:3) REDEF SPECIAL_NAMES PTR,
              6872                            /* For array references. */
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:193  
              6873    1           2 ERROR_STATUS UBIN /* Was INIT'ed to:  (0)/**/,
              6874                            /* binary value of error condition */
              6875    1           2 USE_DEFAULT_IO UBIN /* Was INIT'ed to:  (0)/**/,
              6876                            /* for default USE procedures, this cell contains
              6877                               INPUT or OUTPUT */
              6878    1           2 DEFAULT_USE_PROCEDURE_A@P(0:2) UBIN /* Was INIT'ed to:  (0*0)/**/,
              6879                            /* default USE procedure address:  "0" means none */
              6880    1           2 IS_DEFAULT_USE_PROC_ACTIVE_A(0:15) BIT(1) /* Was INIT'ed to:  ('0'B*0)/**/
              6880                    ,
              6881                            /* activation bits for corr default USE proc */
              6882    1           2 USE_PROCEDURE@P UBIN /* Was INIT'ed to:  (0)/**/,
              6883                            /* displacement value dropped by QCU$USE
              6884                               for QCU$USE_CALL to warp to */
              6885    1           2 PREVIOUS_INTERFACE_START$ PTR /* Was INIT'ed to:  (ADDR(NIL))/**/,
              6886                            /* pointer to previous saved state/internal value s
              6887                               for master interface */
              6888    1           2 PREVIOUS_FIELD_START_INDEX UBIN /* Was INIT'ed to:  (0)/**/,
              6889                            /* index for previous interface table range */
              6890    1           2 PREVIOUS_FIELD_STOP_INDEX UBIN /* Was INIT'ed to:  (0)/**/,
              6891                            /* index for previous interface table range */
              6892    1           2 EXPAND(0:9) UBIN;
              6899            %ENDIF;
       25     6902          %QI_SWORK ( STCLASS = "STATIC SYMDEF" );
              6903            %BEGIN_MACRO ( STCLASS = STCLASS );
              6904            %SET LISTDIR = '0'B;
              6917    1     DCL 1 QI_SWORK(0:7) UBIN STATIC SYMDEF INIT(0*0)/**/;
              6924            %ENDIF;
       26     6927          %QI_SWORK_2 ( STCLASS = "STATIC SYMDEF" );
              6928            %BEGIN_MACRO ( STCLASS = STCLASS );
              6929            %SET LISTDIR = '0'B;
              6942    1     DCL 1 QI_SWORK_2(0:7) UBIN STATIC SYMDEF INIT(0*0)/**/;
              6949            %ENDIF;
       27     6952          %QI_BLANK ( STCLASS = "CONSTANT SYMDEF" );
              6953            %BEGIN_MACRO ( STCLASS = STCLASS );
              6954            %SET LISTDIR = '0'B;
              6967    1     DCL QI_BLANK CONSTANT SYMDEF UBIN BYTE ALIGNED INIT(32)/**/;
              6974            %ENDIF;
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:194  
       28     6977          %QI_MAT_MATCH ( STCLASS = "CONSTANT SYMDEF" );
              6978            %BEGIN_MACRO ( STCLASS = STCLASS );
              6979            %SET LISTDIR = '0'B;
              6992    1     DCL QI_MAT_MATCH CONSTANT SYMDEF UBIN BYTE ALIGNED INIT(1)/**/;
              6999            %ENDIF;
       29     7002          %QI_MAT_NONMATCH ( STCLASS = "CONSTANT SYMDEF" );
              7003            %BEGIN_MACRO ( STCLASS = STCLASS );
              7004            %SET LISTDIR = '0'B;
              7017    1     DCL QI_MAT_NONMATCH CONSTANT SYMDEF UBIN BYTE ALIGNED INIT(0)/**/;
              7024            %ENDIF;
       30     7027          %QI_SLASH ( STCLASS = "CONSTANT SYMDEF" );
              7028            %BEGIN_MACRO ( STCLASS = STCLASS );
              7029            %SET LISTDIR = '0'B;
              7042    1     DCL QI_SLASH CONSTANT SYMDEF UBIN BYTE ALIGNED INIT(47)/**/;
              7049            %ENDIF;
       31     7052          %QI_ZERO ( STCLASS = "CONSTANT SYMDEF" );
              7053            %BEGIN_MACRO ( STCLASS = STCLASS );
              7054            %SET LISTDIR = '0'B;
              7067    1     DCL QI_ZERO CONSTANT SYMDEF UBIN BYTE ALIGNED INIT(48)/**/;
              7074            %ENDIF;
       32     7077          %QI_BINARY_ZERO ( STCLASS = "CONSTANT SYMDEF" );
              7078            %BEGIN_MACRO ( STCLASS = STCLASS );
              7079            %SET LISTDIR = '0'B;
              7092    1     DCL QI_BINARY_ZERO CONSTANT SYMDEF UBIN BYTE ALIGNED INIT(0)/**/;
              7099            %ENDIF;
       33     7102          %QI_CLASS_ALPHA ( STCLASS = "CONSTANT SYMDEF" );
              7103            %BEGIN_MACRO ( STCLASS = STCLASS );
              7104            %SET LISTDIR = '0'B;
              7117    1     DCL QI_CLASS_ALPHA(0:255) CONSTANT SYMDEF UBIN BYTE UNAL INIT(
              7118    1         0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
              7119    1         1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
              7120    1         0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,
              7121    1         0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
              7122    1         0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
              7123    1         0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
              7124    1         0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
              7125    1         0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:195  
              7126    1                                                 )/**/;
              7133            %ENDIF;
       34     7136          %QI_CLASS_NUMERIC ( STCLASS = "CONSTANT SYMDEF" );
              7137            %BEGIN_MACRO ( STCLASS = STCLASS );
              7138            %SET LISTDIR = '0'B;
              7151    1     DCL QI_CLASS_NUMERIC(0:255) CONSTANT SYMDEF UBIN BYTE UNAL INIT(
              7152    1         0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
              7153    1         0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,
              7154    1         0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
              7155    1         0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
              7156    1         0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
              7157    1         0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
              7158    1         0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
              7159    1         0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
              7160    1                                                 )/**/;
              7167            %ENDIF;
       35     7170          %QI_OVERPUNCHED_SIGNS ( STCLASS = "CONSTANT SYMDEF" );
              7171            %BEGIN_MACRO ( STCLASS = STCLASS );
              7172            %SET LISTDIR = '0'B;
              7185    1     DCL QI_OVERPUNCHED_SIGNS(0:19) CONSTANT SYMDEF UBIN BYTE UNAL INIT(
              7186    1         123,65,66,67,
              7187    1         68,69,70,71,
              7188    1         72,73,125,74,
              7189    1         75,76,77,78,
              7190    1         79,80,81,82
              7191    1                                                 )/**/;
              7198            %ENDIF;
       36     7201          %QI_ZERO_ACCUMULATOR ( STCLASS = "CONSTANT SYMDEF" );
              7202            %BEGIN_MACRO ( STCLASS = STCLASS );
              7203            %SET LISTDIR = '0'B;
              7216    1     DCL 1 QI_ZERO_ACCUMULATOR CONSTANT SYMDEF,
              7217    1           2 *(0:6) UBIN INIT(0*0)/**/,
              7218    1           2 * BIT(16) INIT('00B0'X)/**/;
              7225            %ENDIF;
       37     7228          %QGB_PARAM ( STCLASS = "STATIC SYMDEF" );
              7229            %LSET STR=CONCAT(TEXTCHAR(STCLASS),'        ');
              7230            %IF (SUBSTR(STR,0,6)='STATIC')
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:196  
              7231             OR (SUBSTR(STR,0,8)='CONSTANT')
              7232             OR (SUBSTR(STR,0,3)='EXT');
              7233              %LSET INIT=CHARTEXT('INIT');
              7234            %ELSE;
              7236            %ENDIF;
              7237    1     DCL 1 NAME STCLASS ALIGNED,
              7238        /*K* BBUF_ - VECTOR.
              7239        Contains the size and location of the blocking buffer to be used
              7240        by the VDO packing and unpacking routines.  The buffer must be
              7241        allocated by the caller, and this field must be initialized, before
              7242        any QGB$ routines may be called.  A size of one or two FEP pages
              7243        is recommended.  The keyword used to initialize this field is BBUF.
              7244        */
              7245    1         2 BBUF_ VECTOR %INIT(VECTOR(BBUF))%CHARTEXT('/**/'),
              7246    1         2 BBUF_OFFSET$ CPTR %INIT(ADDR(NIL))%CHARTEXT('/**/'),
              7247        /*K* ERR - Contains a VLP_ERRCODE structure.  This portion of the
              7248        structure corresponds to G$TCB$ -> G$TCB.ALT$ -> G$EXCFR.TRLR.ERR.
              7249        */
              7250              %VLP_ERRCODE ( FPTN = ERR,
              7251                             STCLASS = STCLASS,
              7252                             LVL = 2,
              7253                             LAST = "," );
              7254        %LSET LISTDIR='0'B;
              7269    1   2 ERR WALIGNED,
              7283    1   3 FCG  BIT(10)INIT('0'B),
              7296    1   3 MID  BIT(5)INIT('0'B),3 MON  BIT(1)INIT('0'B),3 ERR#
              7297    1   UBIN(13)INIT(0) UNAL,3 SEV  UBIN(3)INIT(0) UNAL ,
              7299    1         2 MSG$ PTR %INIT(ADDR(NIL))%CHARTEXT('/**/'),
              7300    1         2 MSGC$ REDEF MSG$ CPTR,
              7301    1         2 MSGSZ SBIN WORD %INIT(0)%CHARTEXT('/**/'),
              7302    1         2 DVE CALIGNED,
              7303    1           3 DVBYTE UNAL,
              7304    1             4 BP BIT(1) %INIT('1'B)%CHARTEXT('/**/'),
              7305    1             4 VFC BIT(1) %INIT('0'B)%CHARTEXT('/**/'),
              7306    1             4 REREAD REDEF VFC BIT(1),
              7307    1             4 BIN BIT(1) %INIT('0'B)%CHARTEXT('/**/'),
              7308    1             4 TRANS BIT(1) %INIT('0'B)%CHARTEXT('/**/'),
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:197  
              7309    1             4 RRR BIT(1) %INIT('0'B)%CHARTEXT('/**/'),
              7310    1             4 NODAT BIT(1) %INIT('0'B)%CHARTEXT('/**/'),
              7311    1             4 DCBHDR BIT(1) %INIT('0'B)%CHARTEXT('/**/'),
              7312    1             4 CONT BIT(1) %INIT('0'B)%CHARTEXT('/**/'),
              7313        /*K* DVE.EOMCHAR - VALUE-CHAR(1).
              7314        When the VDO returned to the caller corresponds to the field in
              7315        which the activation character was typed, EOMCHAR is filled in with
              7316        the activation character; otherwise, QGB_PARAM.EOM_EOR is set. */
              7317    1           3 EOMCHAR CHAR(1) CALIGNED %INIT(BITASC('501'O))%CHARTEXT('/**/'),
              7318    1           3 VFC REDEF EOMCHAR CHAR(1) CALIGNED,
              7319    1         2 EOFNONE BIT(1) UNAL %INIT('0'B)%CHARTEXT('/**/'),
              7320    1         2 EOM_EOR BIT(1) %INIT('0'B)%CHARTEXT('/**/'),
              7321    1         2 CURRENTLY_READING BIT(1) %INIT('0'B)%CHARTEXT('/**/'),
              7322    1         2 * BIT(5) UNAL %INIT('0'B)%CHARTEXT('/**/'),
              7323    1         2 IP$ PTR %INIT(ADDR(NIL))%CHARTEXT('/**/'),
              7324    1         2 UHDR$ PTR %INIT(ADDR(NIL))%CHARTEXT('/**/'),
              7325    1         2 UHDRC$ REDEF UHDR$ CPTR,
              7326    1         2 UHDRSZ UBIN %INIT(0)%CHARTEXT('/**/'),
              7327    1         2 MRKTYP UBIN BYTE UNAL %INIT(0)%CHARTEXT('/**/'),
              7328    1         2 STR UBIN BYTE UNAL %INIT(1)%CHARTEXT('/**/'),
              7329    1         2 V$ PTR %INIT(ADDR(NIL))%CHARTEXT('/**/'),
              7330    1         2 KEY$ PTR %INIT(ADDR(NIL))%CHARTEXT('/**/'),
              7331    1         2 VSZ UBIN %INIT(0)%CHARTEXT('/**/'),
              7332        /*K* FLDID - VALUE-UBIN.
              7333        Contains the field ID reported by the most recent operation for an
              7334        ORG=FORM DCB.  It is the same as that returned in KEY if KEYTYPE=FLDID,
              7335        but is always returned here.  This is particularly useful for operations
              7336        like M$DCLFLD that have no provision for returning a key.
              7337        */
              7338    1         2 FLDID UBIN %INIT(0)%CHARTEXT('/**/'),
              7339        /*K* ACTPOS - VALUE-DEC(0-32767).
              7340        Indicates the position in the record at which activation occurred.
              7341        The first character of the record is at position one.  A value of
              7342        zero means that the activation occurred at the end of the record.
              7343        */
              7344    1         2 ACTPOS UBIN %INIT(0)%CHARTEXT('/**/'),
              7345        /*K* ARS - VALUE-UBIN.
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:198  
              7346        Contains the actual record size read (in bytes).
              7347        */
              7348    1         2 ARS UBIN %INIT(0)%CHARTEXT('/**/'),
              7349    1         2 KEYTYPE UBIN BYTE CALIGNED %INIT(0)%CHARTEXT('/**/'),
              7350    1         2 KEYSZ UBIN BYTE CALIGNED %INIT(0)%CHARTEXT('/**/');
       38     7352
       39     7353          %QI_FPT_CLOSE ( STCLASS = "CONSTANT SYMDEF" );
              7354            %BEGIN_MACRO ( STCLASS = STCLASS );
              7355            %SET LISTDIR = '0'B;
              7384    1   DCL 1 QI_FPT_CLOSE CONSTANT SYMDEF WALIGNED,
              7386    1   2 V_ VECTOR INIT(VECTOR(QI_FPT_CLOSE.V)),2 NAME_ VECTOR INIT(VECTOR(NIL)),2 ACCT_
              7386            VECTOR INIT(VECTOR(NIL)),2 SPARE1
              7387    1   VECTOR INIT(VECTOR(NIL)),2 SPARE2 VECTOR INIT(VECTOR(NIL)),
              7389    1   2 V,3 DCB# UBIN BYTE UNAL INIT(DCBNUM(NIL)),3 DISP UBIN BYTE UNAL INIT(2);
              7397            %ENDIF;
       40     7400          %QI_FPT_DBCONTROL ( STCLASS = "CONSTANT SYMDEF" );
              7401            %BEGIN_MACRO ( STCLASS = STCLASS );
              7402            %SET LISTDIR = '0'B;
              7438    1   DCL 1 QI_FPT_DBCONTROL CONSTANT SYMDEF WALIGNED,
              7442    1   2 V_ VECTOR  INIT(VECTOR(QI_FPT_DBCONTROL.V)),2 NDBCONTROL_ REDEF V_ VECTOR,
              7446    1   2 PDBCONTROL_ VECTOR  INIT(VECTOR(NIL)),
              7451    1   2 V,
              7453    1   3 DBCONTROL$ EPTR  INIT(ENTADDR(NIL));
              7462            %ENDIF;
       41     7465          %QI_FPT_DCLFLD ( STCLASS = "CONSTANT SYMDEF" );
              7466            %BEGIN_MACRO ( STCLASS = STCLASS );
              7467            %SET LISTDIR = '0'B;
              7498    1   DCL 1 QI_FPT_DCLFLD CONSTANT SYMDEF ALIGNED,
              7500    1   2 V_ VECTOR INIT(VECTOR(QI_FPT_DCLFLD.V)),
              7504    1   2 BUF_ VECTOR INIT(VECTOR(NIL)),2 FLDATR_ VECTOR INIT(VECTOR(NIL)),
              7506    1   2 V ALIGNED,3 DCB# UBIN(8)UNAL INIT(DCBNUM(NIL)),
              7510    1   3 DVBYTE,
              7514    1   4 BP BIT(1)INIT('0'B),4 VFC BIT(1)INIT('0'B),4 BIN BIT(1)INIT('0'B),4 TRANS BIT(1)
              7514            INIT('0'B),4
              7515    1   RRR BIT(1)INIT('0'B),4 NODAT BIT(1)INIT('0'B),4 * BIT(1)INIT('0'B),4 CONT BIT(1)INIT
              7515            ('0'B),3
              7516    1   LIN UBIN(16)UNAL INIT(0),3 CLM UBIN(16)UNAL INIT(0),3
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:199  
              7517    1   ID UBIN(16)INIT(0) UNAL,3 WDT UBIN(8)UNAL INIT(0),3 * BIT(8
              7518    1   )INIT('0'B);
              7526            %ENDIF;
       42     7529          %QI_VLP_FLDATR ( STCLASS = "CONSTANT SYMDEF" );
              7530            %BEGIN_MACRO ( STCLASS = STCLASS );
              7531            %SET LISTDIR = '0'B;
              7563    1   DCL 1 QI_VLP_FLDATR CONSTANT SYMDEF ALIGNED,2 GRPRND,3 * BIT(1)INIT('0'B),3 HDN BIT(
              7563            1)INIT('0'B),3 INCINT
              7564    1   BIT(1)INIT('0'B),3 DCRINT BIT(1)INIT('0'B),3 UNDSCR BIT(1)INIT('0'B),3
              7565    1   SLWBLN BIT(1)INIT('0'B),3 FSTBLN BIT(1)INIT('0'B),3 RVRVID BIT
              7566    1   (1)INIT('0'B),3 * BIT(8)INIT('0'B),  2 QLF,3 ACPALL BIT(1)INIT('0'B),3
              7567    1   PRTGRD BIT(1)INIT('0'B),3 ACPGRP BIT(1)INIT('0'B),3 ACPNMR BIT(1)INIT
              7568    1   ('0'B),3 ACPALP BIT(1)INIT('0'B),3 PRT BIT(1)INIT('0'B),3
              7569    1   MSTENT BIT(1)INIT('0'B),3 CNS BIT(1)INIT('0'B),3 * BIT(8)INIT('0'B),  2
              7570    1   ABSGRPRND UBIN BYTE UNAL INIT(7),2 * UBIN(8)UNAL INIT(0);
              7578            %ENDIF;
       43     7581          %QI_FPT_DEVICE ( STCLASS = "CONSTANT SYMDEF" );
              7582            %BEGIN_MACRO ( STCLASS = STCLASS );
              7583            %SET LISTDIR = '0'B;
              7615    1   DCL 1 QI_FPT_DEVICE CONSTANT SYMDEF WALIGNED,
              7617    1   2 V_ VECTOR INIT(VECTOR(QI_FPT_DEVICE.V)),2 TAB_ VECTOR INIT(VECTOR(NIL)),2 HDR_
              7617            VECTOR INIT(VECTOR(NIL)),
              7619    1   2 V WALIGNED,3 DCB# UBIN(8)UNAL INIT(DCBNUM(NIL)), 3 SEQ BIT(2)INIT('01'B),3
              7620    1   PAGE BIT(1)INIT('0'B),3 * BIT(5)INIT('0'B),3 SEQCOL UBIN BYTE UNAL
              7621    1   INIT(73),3 SEQID CHAR(4)INIT(' '),3 DVFC CHAR(1)INIT(BINASC(0)
              7622    1   ),3 * UBIN BYTE UNAL INIT(0),3 LINES UBIN(8)UNAL INIT(0),3 * UBIN UNAL
              7623    1   INIT(0);
              7631            %ENDIF;
       44     7634          %QI_FPT_ERASE ( STCLASS = "CONSTANT SYMDEF" );
              7635            %BEGIN_MACRO ( STCLASS = STCLASS );
              7636            %SET LISTDIR = '0'B;
              7669    1   DCL 1 QI_FPT_ERASE CONSTANT SYMDEF ALIGNED,
              7671    1   2 V_ VECTOR INIT(VECTOR(QI_FPT_ERASE.V)),
              7675    1   2 KEY_ VECTOR INIT(VECTOR(NIL)),
              7677    1   2 V ALIGNED,3 DCB# UBIN(8)UNAL INIT(DCBNUM(NIL)),3 DVBYTE,
              7681    1   4 BP BIT(1)INIT('0'B),4 VFC BIT(1)INIT('0'B),4 BIN BIT(1)INIT('0'B),4 TRANS BIT(1)
              7681            INIT('0'B),4
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:200  
              7682    1   RRR BIT(1)INIT('0'B),4 NODAT BIT(1)INIT('0'B),4 * BIT(1)INIT('0'B),4 CONT BIT(1)INIT
              7682            ('0'B),3
              7683    1   KEYTYPE UBIN BYTE CALIGNED INIT(0),3 * BIT(8)INIT('0'B),3 PRT BIT(1
              7684    1   )INIT('1'B),3 CNS BIT(1)INIT('1'B),3 * BIT(14)INIT('0'B);
              7692            %ENDIF;
       45     7695          %QI_FPT_ERRMSG ( STCLASS = "CONSTANT SYMDEF" );
              7696            %BEGIN_MACRO ( STCLASS = STCLASS );
              7697            %SET LISTDIR = '0'B;
              7725    1   DCL 1 QI_FPT_ERRMSG CONSTANT SYMDEF WALIGNED,
              7728    1   2 V_ VECTOR INIT(VECTOR(QI_FPT_ERRMSG.V)),2 CODE_ VECTOR INIT(VECTOR(NIL)),2 BUF_
              7728            VECTOR INIT(VECTOR(NIL)),2 FILENAME_
              7729    1   VECTOR INIT(VECTOR(NIL)),2 FILEACCT_ VECTOR INIT(VECTOR(NIL)),2 FILEPASS_ VECTOR
              7729            INIT(VECTOR(NIL)
              7730    1   ),2 FIELD1_ VECTOR INIT(VECTOR(NIL)),2 FIELD2_ VECTOR INIT(VECTOR(NIL)),2 FIELD3_
              7730            VECTOR INIT(VECTOR
              7731    1   (NIL)),2 RESULTS_ VECTOR INIT(VECTOR(NIL)),2 ALTCODE_ VECTOR INIT(VECTOR(NIL)),2 V,
              7735    1   3 DCB# UBIN(8)UNAL INIT(DCBNUM(NIL)),3 SUBFILE BIT(1)INIT('1'B),3
              7736    1   SUBMESS BIT(1)INIT('1'B),3 SUBLANG BIT(1)INIT('1'B),3 INCLCODE BIT(1)INIT
              7737    1   ('0'B),3 MY_LANG  BIT(1)INIT('1'B),3 SOURCE  UBIN(3)UNAL INIT(0),
              7738    1   3 LANG CHAR(1)INIT(' '),3 FLAGLEV  UBIN BYTE UNAL INIT(0);
              7746            %ENDIF;
       46     7749          %QI_FPT_EXIT ( STCLASS = "CONSTANT SYMDEF" );
              7750            %BEGIN_MACRO ( STCLASS = STCLASS );
              7751            %SET LISTDIR = '0'B;
              7779    1   DCL 1 QI_FPT_EXIT CONSTANT SYMDEF WALIGNED,
              7781    1   2 ERRCODE_ VECTOR  INIT(VECTOR(NIL)),2 V_ VECTOR  INIT(VECTOR(QI_FPT_EXIT.V)),2 V,
              7786    1   3 STEPCC UBIN BYTE UNAL  INIT(2),3 * BIT(24) INIT('0'B);
              7794            %ENDIF;
       47     7797          %QI_FPT_FDS ( STCLASS = "CONSTANT SYMDEF" );
              7798            %BEGIN_MACRO ( STCLASS = STCLASS );
              7799            %SET LISTDIR = '0'B;
              7827    1   DCL 1 QI_FPT_FDS CONSTANT SYMDEF WALIGNED,
              7830    1   2 V_ VECTOR INIT(VECTOR(QI_FPT_FDS.V)),2 RESULTS_ VECTOR INIT(VECTOR(QI_VLP_SEGMENT)
              7830            ),2 V,
              7834    1   3 PAGES UBIN INIT(0),3 * BIT(16)INIT('0'B);
              7842            %ENDIF;
       48     7845          %QI_FPT_FDS_LOAD ( STCLASS = "CONSTANT SYMDEF" );
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:201  
              7846            %BEGIN_MACRO ( STCLASS = STCLASS );
              7847            %SET LISTDIR = '0'B;
              7875    1   DCL 1 QI_FPT_FDS_LOAD CONSTANT SYMDEF WALIGNED,
              7878    1   2 V_ VECTOR INIT(VECTOR(QI_FPT_FDS_LOAD.V)),2 RESULTS_ VECTOR INIT(VECTOR(
              7878            QI_VLP_SEGMENT_LOAD)),2 V,
              7882    1   3 PAGES UBIN INIT(0),3 * BIT(16)INIT('0'B);
              7890            %ENDIF;
       49     7893          %QI_FPT_GDS ( STCLASS = "CONSTANT SYMDEF" );
              7894            %BEGIN_MACRO ( STCLASS = STCLASS );
              7895            %SET LISTDIR = '0'B;
              7925    1   DCL 1 QI_FPT_GDS CONSTANT SYMDEF WALIGNED,
              7928    1   2 V_ VECTOR INIT(VECTOR(QI_FPT_GDS.V)),2 RESULTS_ VECTOR INIT(VECTOR(QI_VLP_SEGMENT)
              7928            ),2 V,
              7932    1   3 PAGES UBIN INIT(1),3 FREE BIT(1)INIT('0'B),3 PARK BIT(1)INIT
              7933    1   ('1'B),3 IOBUF BIT(1)INIT('0'B),3 * BIT(5)INIT('0'B),3 NEXT UBIN BYTE UNAL
              7934    1   INIT(2);
              7942            %ENDIF;
       50     7945          %QI_VLP_SEGMENT ( STCLASS = "STATIC SYMDEF" );
              7946            %BEGIN_MACRO ( STCLASS = STCLASS );
              7947            %SET LISTDIR = '0'B;
              7975    1   DCL 1 QI_VLP_SEGMENT STATIC SYMDEF WALIGNED,
              7979    1   2 BASE UBIN(32)INIT(0),2 BASE$ REDEF BASE PTR,2 PAGES UBIN
              7980    1   INIT(0) ;
              7988            %ENDIF;
       51     7991          %QI_FPT_GDS_BUFFER ( STCLASS = "CONSTANT SYMDEF" );
              7992            %BEGIN_MACRO ( STCLASS = STCLASS );
              7993            %SET LISTDIR = '0'B;
              8023    1   DCL 1 QI_FPT_GDS_BUFFER CONSTANT SYMDEF WALIGNED,
              8026    1   2 V_ VECTOR INIT(VECTOR(QI_FPT_GDS_BUFFER.V)),2 RESULTS_ VECTOR INIT(VECTOR(
              8026            QI_VLP_SEGMENT_BUFFER)),2 V,
              8030    1   3 PAGES UBIN INIT(4),3 FREE BIT(1)INIT('0'B),3 PARK BIT(1)INIT
              8031    1   ('1'B),3 IOBUF BIT(1)INIT('0'B),3 * BIT(5)INIT('0'B),3 NEXT UBIN BYTE UNAL
              8032    1   INIT(1);
              8040            %ENDIF;
       52     8043          %QI_VLP_SEGMENT_BUFFER ( STCLASS = "STATIC SYMDEF" );
              8044            %BEGIN_MACRO ( STCLASS = STCLASS );
              8045            %SET LISTDIR = '0'B;
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:202  
              8073    1   DCL 1 QI_VLP_SEGMENT_BUFFER STATIC SYMDEF WALIGNED,
              8077    1   2 BASE UBIN(32)INIT(0),2 BASE$ REDEF BASE PTR,2 PAGES UBIN
              8078    1   INIT(0) ;
              8086            %ENDIF;
       53     8089          %QI_FPT_GDS_LOAD ( STCLASS = "CONSTANT SYMDEF" );
              8090            %BEGIN_MACRO ( STCLASS = STCLASS );
              8091            %SET LISTDIR = '0'B;
              8121    1   DCL 1 QI_FPT_GDS_LOAD CONSTANT SYMDEF WALIGNED,
              8124    1   2 V_ VECTOR INIT(VECTOR(QI_FPT_GDS_LOAD.V)),2 RESULTS_ VECTOR INIT(VECTOR(
              8124            QI_VLP_SEGMENT_LOAD)),2 V,
              8128    1   3 PAGES UBIN INIT(1),3 FREE BIT(1)INIT('0'B),3 PARK BIT(1)INIT
              8129    1   ('1'B),3 IOBUF BIT(1)INIT('0'B),3 * BIT(5)INIT('0'B),3 NEXT UBIN BYTE UNAL
              8130    1   INIT(1);
              8138            %ENDIF;
       54     8141          %QI_VLP_SEGMENT_LOAD ( STCLASS = "STATIC SYMDEF" );
              8142            %BEGIN_MACRO ( STCLASS = STCLASS );
              8143            %SET LISTDIR = '0'B;
              8171    1   DCL 1 QI_VLP_SEGMENT_LOAD STATIC SYMDEF WALIGNED,
              8175    1   2 BASE UBIN(32)INIT(0),2 BASE$ REDEF BASE PTR,2 PAGES UBIN
              8176    1   INIT(0) ;
              8184            %ENDIF;
       55     8187          %QI_FPT_GLINEATTR ( STCLASS = "CONSTANT SYMDEF" );
              8188            %BEGIN_MACRO ( STCLASS = STCLASS );
              8189            %SET LISTDIR = '0'B;
              8219    1   DCL 1 QI_FPT_GLINEATTR CONSTANT SYMDEF ALIGNED,
              8221    1   2 V_ VECTOR INIT(VECTOR(QI_FPT_GLINEATTR.V)),
              8225    1   2 LINEATTR_ VECTOR INIT(VECTOR(NIL)),
              8227    1   2 V ALIGNED,3 DCB# UBIN(8)UNAL INIT(DCBNUM(NIL)),3 * BIT(8)INIT('0'B);
              8235            %ENDIF;
       56     8238          %QI_FPT_INT ( STCLASS = "CONSTANT SYMDEF" );
              8239            %BEGIN_MACRO ( STCLASS = STCLASS );
              8240            %SET LISTDIR = '0'B;
              8276    1   DCL 1 QI_FPT_INT CONSTANT SYMDEF WALIGNED,
              8280    1   2 V_ VECTOR  INIT(VECTOR(QI_FPT_INT.V)),2 NINT_ REDEF V_ VECTOR,
              8284    1   2 PINT_ VECTOR  INIT(VECTOR(NIL)),
              8289    1   2 V,
              8291    1   3 INT$ EPTR  INIT(ENTADDR(NIL));
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:203  
              8300            %ENDIF;
       57     8303          %QI_FPT_LDTRC ( STCLASS = "CONSTANT SYMDEF" );
              8304            %BEGIN_MACRO ( STCLASS = STCLASS );
              8305            %SET LISTDIR = '0'B;
              8333    1   DCL 1 QI_FPT_LDTRC CONSTANT SYMDEF WALIGNED,
              8335    1   2 NAME_ VECTOR INIT(VECTOR(NIL)),2 ACCT_ VECTOR INIT(VECTOR(NIL)),2 PASS_ VECTOR
              8335            INIT(VECTOR(NIL)),2 PSN_
              8336    1   VECTOR INIT(VECTOR(NIL)),2 CMD_ VECTOR INIT(VECTOR(NIL)),2 V_ VECTOR INIT(VECTOR(
              8336            QI_FPT_LDTRC.V)),2 V,
              8341    1   3 DISP UBIN BYTE UNAL INIT(2),3 * BIT(7)INIT('0'B),3
              8342    1   NO_MICROFPL BIT(1) UNAL INIT('0'B),3 * BIT(16)INIT('0'B);
              8350            %ENDIF;
       58     8353          %QI_FPT_MDFFLD ( STCLASS = "CONSTANT SYMDEF" );
              8354            %BEGIN_MACRO ( STCLASS = STCLASS );
              8355            %SET LISTDIR = '0'B;
              8387    1   DCL 1 QI_FPT_MDFFLD CONSTANT SYMDEF ALIGNED,
              8389    1   2 V_ VECTOR INIT(VECTOR(QI_FPT_MDFFLD.V)),
              8393    1   2 BUF_ VECTOR INIT(VECTOR(NIL)),2 KEY_ VECTOR INIT(VECTOR(NIL)),2 FLDATR_ VECTOR
              8393            INIT(VECTOR(NIL)),
              8395    1   2 V ALIGNED,3 DCB# UBIN(8)UNAL INIT(DCBNUM(NIL)),3 * BIT(8)INIT('0'B),3 DVBYTE,
              8399    1   4 BP BIT(1)INIT('0'B),4 VFC BIT(1)INIT('0'B),4 BIN BIT(1)INIT('0'B),4 TRANS BIT(1)
              8399            INIT('0'B),4
              8400    1   RRR BIT(1)INIT('0'B),4 NODAT BIT(1)INIT('0'B),4 * BIT(1)INIT('0'B),4 CONT BIT(1)INIT
              8400            ('0'B),3
              8401    1   KEYTYPE UBIN BYTE CALIGNED INIT(0),3 SETGRPRND BIT(1)INIT('1'B),3
              8402    1   SETQLF BIT(1)INIT('0'B),3 * UBIN(14)UNAL INIT(0);
              8410            %ENDIF;
       59     8413          %QI_FPT_OPEN ( STCLASS = "CONSTANT SYMDEF" );
              8414            %BEGIN_MACRO ( STCLASS = STCLASS );
              8415            %SET LISTDIR = '0'B;
              8445    1   DCL 1 QI_FPT_OPEN CONSTANT SYMDEF WALIGNED,
              8447    1   2 V_ VECTOR INIT(VECTOR(QI_FPT_OPEN.V)),2 HMI_ VECTOR INIT(VECTOR(NIL)),2 LOGON_
              8447            VECTOR INIT(VECTOR(NIL)),2 WINDOW_
              8448    1   VECTOR INIT(VECTOR(NIL)),2 NAME_ VECTOR INIT(VECTOR(NIL)),2 WSN_ VECTOR INIT(VECTOR(
              8448            NIL)),2 ACCT_ VECTOR
              8449    1   INIT(VECTOR(NIL)),2 ACCESS_ VECTOR INIT(VECTOR(NIL)),2 TAB_ VECTOR INIT(VECTOR(NIL))
              8449            ,2 HDR_ VECTOR INIT
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:204  
              8450    1   (VECTOR(NIL)),2 SPARE2 VECTOR INIT(VECTOR(NIL)),2 SPARE3 VECTOR INIT(VECTOR(NIL)),2
              8450            SPARE4 VECTOR INIT(VECTOR
              8451    1   (NIL)),
              8453    1   2 V,3 DCB# UBIN BYTE UNAL INIT(DCBNUM(NIL)),3 INITZ,4 SCRUB BIT(1)INIT('1'B),4
              8453            REASSIGN BIT
              8454    1   (1)INIT('0'B),3 SETDCB BIT(1)INIT('0'B),3 * BIT(1)INIT('0'B),3 DISP UBIN(4)UNAL
              8455    1   INIT(2),3 ASN UBIN(8)INIT(1) UNAL,3 KEYTYPE UBIN(8)UNAL INIT(0),3
              8456    1   ORG UBIN(8)INIT(0) UNAL,3 DVFC CHAR(1)INIT(BINASC(0)),3 RES CHAR(4)INIT(' '
              8457    1   ),3 LINES UBIN WORD INIT(0),3 RECL UBIN WORD INIT(0) UNAL,3 EVENT
              8458    1   SBIN WORD INIT(0);
              8466            %ENDIF;
       60     8469          %QI_FPT_PROMPT ( STCLASS = "CONSTANT SYMDEF" );
              8470            %BEGIN_MACRO ( STCLASS = STCLASS );
              8471            %SET LISTDIR = '0'B;
              8503    1   DCL 1 QI_FPT_PROMPT CONSTANT SYMDEF ALIGNED,
              8505    1   2 V_ VECTOR INIT(VECTOR(QI_FPT_PROMPT.V)),
              8509    1   2 PROMPT_ VECTOR INIT(VECTOR(NIL)),
              8511    1   2 V ALIGNED,3 DCB# UBIN(8)UNAL INIT(DCBNUM(NIL)),3 * BIT(8)INIT('0'B),3 DVBYTE#,4 *
              8511            BIT(1)INIT
              8512    1   ('0'B),4 VFC BIT(1)INIT('1'B),4 BIN BIT(1)INIT('0'B),4 TRANS
              8513    1   BIT(1)INIT('0'B),4 * BIT(4)INIT('0'B),3 * BIT(8)INIT('0'B);
              8521            %ENDIF;
       61     8524          %QI_FPT_READ ( STCLASS = "CONSTANT SYMDEF" );
              8525            %BEGIN_MACRO ( STCLASS = STCLASS );
              8526            %SET LISTDIR = '0'B;
              8554    1   DCL 1 QI_FPT_READ CONSTANT SYMDEF WALIGNED,
              8556    1   2 V_ VECTOR INIT(VECTOR(QI_FPT_READ.V)),2 KEY_ VECTOR INIT(VECTOR(NIL)),2 BUF_
              8556            VECTOR INIT(VECTOR(NIL)),2 CG_ VECTOR
              8557    1   INIT(VECTOR(NIL)),2 SPARE2 VECTOR INIT(VECTOR(NIL)),
              8559    1   2 V,3 DCB# UBIN(8)UNAL INIT(DCBNUM(NIL)),3 KEYS BIT(1)INIT('0'B),3 KEYR BIT(1)INIT(
              8559            '0'B
              8560    1   ),3 WAIT BIT(1)INIT('1'B),3 BRKABLE BIT(1)INIT('0'B),3 * BIT(1)INIT('0'B),3
              8561    1   READMLT BIT(1)INIT('0'B),3 * BIT(1)INIT('0'B),3 EVENT SBIN INIT(0),3 DVBYTE,4
              8562    1   * BIT(1)INIT('0'B),4 REREAD BIT(1)INIT('0'B),4 BIN BIT(1)INIT('0'B),4
              8563    1   TRANS BIT(1)INIT('0'B),4 RRR BIT(1)INIT('0'B),4 NODAT BIT(1)INIT('0'B),4
              8564    1   PAGHDNTYP UBIN(1)UNAL INIT(0),4 CONT BIT(1)INIT('0'B),3 KEYTYPE UBIN
              8565    1   BYTE UNAL INIT(0);
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:205  
              8573            %ENDIF;
       62     8576          %QI_VLP_CG ( STCLASS = "CONSTANT SYMDEF" );
              8577            %BEGIN_MACRO ( STCLASS = STCLASS );
              8578            %SET LISTDIR = '0'B;
              8604    1   DCL 1 QI_VLP_CG CONSTANT SYMDEF ALIGNED,
              8608    1   2 STATION# CHAR(8)INIT(' ')/**/,2 MSGTYP# CHAR(8)INIT(' ')/**/,2 CTL,
              8609    1   3 * BIT(16)INIT('0'B)/**/,2 MSGID# UBIN(32)INIT(0)/**/,2 * UBIN INIT(0)
              8610    1   /**/ ;
              8618            %ENDIF;
       63     8621          %QI_FPT_RLSFLD ( STCLASS = "CONSTANT SYMDEF" );
              8622            %BEGIN_MACRO ( STCLASS = STCLASS );
              8623            %SET LISTDIR = '0'B;
              8654    1   DCL 1 QI_FPT_RLSFLD CONSTANT SYMDEF ALIGNED,
              8656    1   2 V_ VECTOR INIT(VECTOR(QI_FPT_RLSFLD.V)),
              8660    1   2 KEY_ VECTOR INIT(VECTOR(NIL)),
              8662    1   2 V ALIGNED,3 DCB# UBIN(8)UNAL INIT(DCBNUM(NIL)),3 DVBYTE,
              8666    1   4 BP BIT(1)INIT('0'B),4 VFC BIT(1)INIT('0'B),4 BIN BIT(1)INIT('0'B),4 TRANS BIT(1)
              8666            INIT('0'B),4
              8667    1   RRR BIT(1)INIT('0'B),4 NODAT BIT(1)INIT('0'B),4 * BIT(1)INIT('0'B),4 CONT BIT(1)INIT
              8667            ('0'B),3
              8668    1   KEYTYPE UBIN BYTE CALIGNED INIT(0),3 * BIT(8)INIT('0'B);
              8676            %ENDIF;
       64     8679          %QI_FPT_SLCFLD ( STCLASS = "CONSTANT SYMDEF" );
              8680            %BEGIN_MACRO ( STCLASS = STCLASS );
              8681            %SET LISTDIR = '0'B;
              8712    1   DCL 1 QI_FPT_SLCFLD CONSTANT SYMDEF ALIGNED,
              8714    1   2 V_ VECTOR INIT(VECTOR(QI_FPT_SLCFLD.V)),
              8718    1   2 KEY_ VECTOR INIT(VECTOR(NIL)),
              8720    1   2 V ALIGNED,3 DCB# UBIN(8)UNAL INIT(DCBNUM(NIL)),3 DVBYTE,
              8724    1   4 BP BIT(1)INIT('0'B),4 VFC BIT(1)INIT('0'B),4 BIN BIT(1)INIT('0'B),4 TRANS BIT(1)
              8724            INIT('0'B),4
              8725    1   RRR BIT(1)INIT('0'B),4 NODAT BIT(1)INIT('0'B),4 * BIT(1)INIT('0'B),4 CONT BIT(1)INIT
              8725            ('0'B),3
              8726    1   KEYTYPE UBIN BYTE CALIGNED INIT(0),3 * BIT(8)INIT('0'B);
              8734            %ENDIF;
       65     8737          %QI_FPT_TIME ( STCLASS = "CONSTANT SYMDEF" );
              8738            %BEGIN_MACRO ( STCLASS = STCLASS );
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:206  
              8739            %SET LISTDIR = '0'B;
              8768    1   DCL 1 QI_FPT_TIME CONSTANT SYMDEF WALIGNED,
              8771    1   2 V_ VECTOR INIT(VECTOR(QI_FPT_TIME.V)),2 DATE_ VECTOR INIT(VECTOR(NIL)),2 TIME_
              8771            VECTOR INIT
              8772    1   (VECTOR(NIL)),2 DAY_ VECTOR INIT(VECTOR(NIL)),2 TSTAMP_ VECTOR INIT(VECTOR(NIL)),2
              8773    1   V,
              8777    1   3 SOURCE UBIN(8)UNAL INIT(0),3 DEST UBIN(8)UNAL INIT(2);
              8785            %ENDIF;
       66     8788          %QI_FPT_TRAP ( STCLASS = "CONSTANT SYMDEF" );
              8789            %BEGIN_MACRO ( STCLASS = STCLASS );
              8790            %SET LISTDIR = '0'B;
              8818    1   DCL 1 QI_FPT_TRAP CONSTANT SYMDEF WALIGNED,2 NTC_ VECTOR INIT(VECTOR(
              8818            QI_VLP_TRAP_CONDITIONS)),2 PTC_ VECTOR INIT(VECTOR(NIL));
              8826            %ENDIF;
       67     8829          %QI_VLP_TRAP_CONDITIONS ( STCLASS = "CONSTANT SYMDEF" );
              8830            %BEGIN_MACRO ( STCLASS = STCLASS );
              8831            %SET LISTDIR = '0'B;
              8869    1   DCL 1 QI_VLP_TRAP_CONDITIONS CONSTANT SYMDEF WALIGNED,2 TRAP$  EPTR INIT(ENTADDR(NIL
              8869            )),
              8889    1   2 FLTFLG,
              8891    1   3 IGN_IO  BIT(1)INIT('0'B),3 MCL  BIT(1)INIT('0'B),3
              8892    1   TRACE  BIT(1)INIT('0'B),3 NO_SIP  BIT(1)INIT('1'B),3 TROT BIT(1)INIT('0'B),
              8893    1   3 UNIMPL  BIT(1)INIT('1'B),3 INT_REG_OV  BIT(1)INIT('0'B),3
              8894    1   S_DBZ  BIT(1)INIT('0'B),3 S_EXP_OV  BIT(1)INIT('0'B),3 STK_UF
              8895    1   BIT(1)INIT('0'B),3 STK_OV  BIT(1)INIT('0'B),3 * BIT(1)INIT('0'B),3
              8896    1   REMOTE_DESC  BIT(1)INIT('1'B),3 PRIV  BIT(1)INIT('1'B),3
              8897    1   MEM_PROT  BIT(1)INIT('1'B),3 INT_UR  BIT(1)INIT('1'B),3 PROG_ERR
              8898    1   BIT(1)INIT('1'B),3 INT_MBE  BIT(1)INIT('0'B),3 * BIT(1)INIT('0'B),3
              8899    1   S_EXP_UF  BIT(1)INIT('0'B),3 S_PROG_ERR  BIT(1)INIT('0'B),3
              8900    1   S_SIGNIF  BIT(1)INIT('0'B),3 S_PRECISION  BIT(1)INIT('0'B),3 EXT_UR  BIT
              8901    1   (1)INIT('1'B),3 EXT_MBE  BIT(1)INIT('0'B),3 C_DBZ  BIT(1)INIT('1'B
              8902    1   ),3 C_SPEC  BIT(1)INIT('1'B),3 C_CHAR  BIT(1)INIT('1'B),3
              8903    1   C_TRUNC  BIT(1)INIT('0'B),3 C_OV  BIT(1)INIT('0'B),3 CIP_QLT
              8904    1   BIT(1)INIT('0'B),3 SIP_QLT  BIT(1)INIT('0'B),3 EXT_PROT  BIT(1)INIT
              8905    1   ('0'B),3 S_ARG  BIT(1)INIT('0'B),
              8907    1   3 *(0:13)BIT(1)INIT('0'B*0) ,
              8937    1   2 M1,
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:207  
              8939    1   3 * BIT(8) INIT('0'B),3 J BIT(1)  INIT('0'B),3 R1_OV BIT(1)  INIT('0'B
              8940    1   ),3 R2_OV BIT(1)  INIT('0'B),3 R3_OV BIT(1)  INIT('0'B),3
              8941    1   R4_OV BIT(1)  INIT('0'B),3 R5_OV BIT(1)  INIT('0'B),3
              8942    1   R6_OV BIT(1)  INIT('0'B),3 R7_OV BIT(1)  INIT('0'B) ,
              8944    1   2 M2 BIT(16)INIT('0'B),
              8961    1   2 M3,
              8963    1   3 * BIT(8) INIT('0'B),3 CIP_OV BIT(1)  INIT('0'B),3 CIP_TR BIT(1)  INIT
              8964    1   ('0'B),3 RFU BIT(6) INIT('0'B) ,
              8982    1   2 M4,
              8984    1   3 * BIT(8) INIT('0'B),3 RT BIT(1)  INIT('0'B),3 * BIT(1) INIT('0'B),3
              8985    1   SA1_ML BIT(1)  INIT('0'B),3 SA1_AL BIT(1)  INIT('0'B),3
              8986    1   SA2_ML BIT(1)  INIT('0'B),3 SA2_AL BIT(1)  INIT('0'B),3 SA3_ML BIT(1)
              8987    1    INIT('0'B),3 SA3_AL BIT(1)  INIT('0'B) ,
              9005    1   2 M5,
              9007    1   3 * BIT(8) INIT('0'B),3 EUM BIT(1)  INIT('0'B),3 * BIT(1) INIT('0'B),3
              9008    1   SEM BIT(1)  INIT('0'B),3 PEM BIT(1)  INIT('0'B),3 RFU BIT(4) INIT('0'B) ,
              9010    1   2 M6 BIT(16)INIT('0'B),2 M7 BIT(16)INIT('0'B);
              9018            %ENDIF;
       68     9021          %QI_FPT_TRMATTR ( STCLASS = "CONSTANT SYMDEF" );
              9022            %BEGIN_MACRO ( STCLASS = STCLASS );
              9023            %SET LISTDIR = '0'B;
              9053    1   DCL 1 QI_FPT_TRMATTR CONSTANT SYMDEF ALIGNED,
              9055    1   2 V_ VECTOR INIT(VECTOR(QI_FPT_TRMATTR.V)),
              9059    1   2 TRMATTR_ VECTOR INIT(VECTOR(NIL)),
              9061    1   2 V ALIGNED,3 DCB# UBIN(8)UNAL INIT(DCBNUM(NIL)),3 * BIT(8)INIT('0'B);
              9069            %ENDIF;
       69     9072          %QI_FPT_TRMCTL ( STCLASS = "CONSTANT SYMDEF" );
              9073            %BEGIN_MACRO ( STCLASS = STCLASS );
              9074            %SET LISTDIR = '0'B;
              9105    1   DCL 1 QI_FPT_TRMCTL CONSTANT SYMDEF ALIGNED,
              9107    1   2 V_ VECTOR INIT(VECTOR(QI_FPT_TRMCTL.V)),
              9111    1   2 TRMCTL_ VECTOR INIT(VECTOR(NIL)),
              9113    1   2 V ALIGNED,3 DCB# UBIN(8)UNAL INIT(DCBNUM(NIL)),3 VLPTYPE UBIN(8)UNAL INIT(0
              9114    1   ),3 * UBIN WORD UNAL INIT(0);
              9122            %ENDIF;
       70     9125          %QI_VLP_TRMCTL ( STCLASS = "CONSTANT SYMDEF" );
              9126            %BEGIN_MACRO ( STCLASS = STCLASS );
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:208  
              9127            %SET LISTDIR = '0'B;
              9158    1   DCL 1 QI_VLP_TRMCTL CONSTANT SYMDEF ALIGNED, 2 TABSIM BIT(2)INIT('01'B),2
              9158            TABRELATIVE BIT(2)INIT
              9159    1   ('01'B),2 SPACEINSERT BIT(2)INIT('01'B),2 SENDBKSPACE BIT(2)INIT
              9160    1   ('01'B), 2 DISPINPUT BIT(2)INIT('01'B),2 PARITYCHECK BIT(2)INIT
              9161    1   ('01'B),2 * BIT(2)INIT('01'B),2 OUTPUTDISCARD BIT(2)INIT('01'B), 2
              9162    1   UPPERCASE BIT(2)INIT('01'B),2 LOWERCASE BIT(2)INIT('01'B),2
              9163    1   FULLDUXPAPERTAPE BIT(2)INIT('01'B),2 HALFDUXPAPERTAPE BIT(2)INIT('01'B
              9164    1   ), 2 ACTONTRN BIT(2)INIT('01'B),2 APLLCNRM BIT(2)INIT('01'B),2
              9165    1   RETYPOVR BIT(2)INIT('01'B),2 EDITOVR BIT(2)INIT('01'B), 2
              9166    1   SCROLL BIT(2)INIT('01'B),2 PAGEHALT BIT(2)INIT('01'B),2 PRINTHALT BIT(2
              9167    1   )INIT('01'B),2 RELPAGE BIT(2)INIT('01'B), 2 SIMPERF BIT(2)INIT('01'B
              9168    1   ),2 TRUNCATE BIT(2)INIT('01'B),2 NOOPTMIZ BIT(2)INIT('01'B),2
              9169    1   WRAPPAGE BIT(2)INIT('01'B), 2 SINPUTSZ UBIN(8)UNAL INIT(255), 2
              9170    1   BREAKCOUNT UBIN(8)UNAL INIT(255),2 BREAKCOUNT# REDEF BREAKCOUNT UBIN(8)UNAL, 2
              9171    1   HSCROLL BIT(2)INIT('01'B),2 INSERTMODE BIT(2)INIT('01'B),2 MSGHALT
              9172    1   BIT(2)INIT('01'B),2 ENBENTEXTSRDCHR BIT(2)INIT('01'B), 2 MSGLINE BIT(2
              9173    1   )INIT('01'B),2 C00FPT BIT(1)INIT('1'B),2 TRNUSRINPFNC BIT(2)INIT('01'B),2 * UBIN(3)
              9174    1   UNAL INIT(7),2 WORDWRAPCLM UBIN BYTE UNAL INIT(255),2 AUTOTABCLM UBIN BYTE
              9175    1   UNAL INIT(255),2 HSMARGIN UBIN BYTE UNAL INIT(255),2 HSSHIFT UBIN BYTE
              9176    1   UNAL INIT(255), 2 PARKCURSOR BIT(2)INIT('01'B),2 CURSORREAD BIT(2
              9177    1   )INIT('01'B),2 KEEPTYPAHD BIT(2)INIT('01'B),2 AUTOCURSOR BIT(2)INIT
              9178    1   ('01'B), 2 ADJTOPLFT BIT(2)INIT('01'B),2 * BIT(2)INIT('11'B),2 * BIT(2)INIT
              9179    1   ('11'B),2 * BIT(2)INIT('11'B);
              9187            %ENDIF;
       71     9190          %QI_FPT_WAIT ( STCLASS = "CONSTANT SYMDEF" );
              9191            %BEGIN_MACRO ( STCLASS = STCLASS );
              9192            %SET LISTDIR = '0'B;
              9219    1   DCL 1 QI_FPT_WAIT CONSTANT SYMDEF WALIGNED,
              9222    1   2 V_ VECTOR INIT(VECTOR(QI_FPT_WAIT.V)),2 UNITS  VECTOR INIT(VECTOR(NIL)),2 UETIME
              9222            VECTOR INIT
              9223    1   (VECTOR(NIL)),2 V,
              9227    1   3 MODE  UBIN(2)UNAL INIT(0),3 UTYPE  UBIN(2)UNAL INIT(1),3 * BIT(12)INIT
              9228    1   ('0'B);
              9236            %ENDIF;
       72     9239          %QI_FPT_WRITE ( STCLASS = "CONSTANT SYMDEF" );
              9240            %BEGIN_MACRO ( STCLASS = STCLASS );
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:209  
              9241            %SET LISTDIR = '0'B;
              9269    1   DCL 1 QI_FPT_WRITE CONSTANT SYMDEF WALIGNED,
              9271    1   2 V_ VECTOR INIT(VECTOR(QI_FPT_WRITE.V)),2 KEY_ VECTOR INIT(VECTOR(NIL)),2 BUF_
              9271            VECTOR INIT(VECTOR(NIL)),2 CG_ VECTOR
              9272    1   INIT(VECTOR(NIL)),2 SPARE2 VECTOR INIT(VECTOR(NIL)),
              9274    1   2 V,3 DCB# UBIN(8)UNAL INIT(DCBNUM(NIL)),3 EOM BIT(1)INIT('0'B),3 KEYTYPE UBIN(7)
              9274            UNAL INIT
              9275    1   (0),3 EVENT SBIN INIT(0),3 DVBYTE,4 BP BIT(1)INIT('0'B),4 VFC BIT
              9276    1   (1)INIT('0'B),4 BIN BIT(1)INIT('0'B),4 TRANS BIT(1)INIT('0'B),4 RRR BIT
              9277    1   (1)INIT('0'B),4 NODAT BIT(1)INIT('0'B),4 PAGHDNTYP UBIN(1)UNAL INIT(0),4
              9278    1   CONT BIT(1)INIT('0'B),3 EOMCHAR CHAR(1)INIT(' ');
              9286            %ENDIF;
       73     9289          %QI_FPT_XBREAK ( STCLASS = "CONSTANT SYMDEF" );
              9290            %BEGIN_MACRO ( STCLASS = STCLASS );
              9291            %SET LISTDIR = '0'B;
              9319    1   DCL 1 QI_FPT_XBREAK CONSTANT SYMDEF WALIGNED,2 VLP_XBREAK_ VECTOR INIT(VECTOR(
              9319            QI_VLP_XBREAK));
              9327            %ENDIF;
       74     9330          %QI_VLP_XBREAK ( STCLASS = "STATIC SYMDEF" );
              9331            %BEGIN_MACRO ( STCLASS = STCLASS );
              9332            %SET LISTDIR = '0'B;
              9359    1   DCL 1 QI_VLP_XBREAK STATIC SYMDEF WALIGNED,2 IC SBIN(32)INIT(0),2 IC$ REDEF IC PTR,2
              9359            OLDIC SBIN(32)INIT
              9360    1   (0),2 OLDIC$ REDEF OLDIC PTR,2 REPLACED REDEF OLDIC,3 * BIT(16),3 INSTR UBIN(16),2
              9360            AUTO$ PTR
              9361    1   INIT(ADDR(NIL)),2 TRAP# UBIN(8)UNAL INIT(0),2 TT BIT(1)INIT('0'B),2 GOIC BIT(1
              9362    1   )INIT('0'B),2 GOBREAK BIT(1)INIT('0'B),2 TC BIT(1)INIT('0'B),2 * BIT(4)INIT('0'B
              9363    1   );
              9371            %ENDIF;
       75     9374
       76     9375        /*
       77     9376           BASED FPL-program-templating stuff.
       78     9377           (Put here only so that !DRAW.X QI_DATA_D.xxxOU... will look neat.)
       79     9378        */
       80     9379          %QI$FPL;
              9380            %BEGIN_MACRO ( STCLASS = STCLASS );
              9381            %SET LISTDIR = '0'B;
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:210  
              9409    1     DCL 1 QI$OP_SEQUENCE BASED ALIGNED,
              9410    1           2 CODE UBIN,
              9411                          /* Op-code. */
              9412    1           2 OPERAND_A@P(0:0) UBIN;
              9413                          /* Operands:  generally a list of DADs. */
              9438    1     DCL 1 QI$OP_ABORT BASED ALIGNED,
              9439    1           2 CODE UBIN,
              9440    1           2 OPERAND@P UBIN,
              9441    1           2 NEXT_CODE@P UBIN;
              9466    1     DCL 1 QI$OP_ACCEPT BASED ALIGNED,
              9467    1           2 CODE UBIN,
              9468    1           2 TYPE UBIN(3) UNAL,
              9469    1           2 FIELD_COUNT UBIN(13) UNAL,
              9470    1           2 DATANAME@P UBIN,
              9471    1           2 FIELD_A@P(0:0) REDEF DATANAME@P UBIN,
              9472    1           2 NEXT_CODE@P UBIN;
              9497    1     DCL 1 QI$OP_ACTIVATE BASED ALIGNED,
              9498    1           2 CODE UBIN,
              9499    1           2 OPERAND_COUNT UBIN,
              9500    1           2 OPERAND_A@P(0:0) UBIN;
              9525    1     DCL 1 QI$OP_ADD BASED ALIGNED,
              9526    1           2 CODE UBIN,
              9527    1           2 NUMERIC_SOURCE@P UBIN,
              9528    1           2 NUMERIC_TARGET@P UBIN,
              9529    1           2 NEXT_CODE@P UBIN;
              9554    1     DCL 1 QI$OP_ADDX BASED ALIGNED,
              9555    1           2 CODE UBIN,
              9556    1           2 ARGUMENT_COUNT UBIN,
              9557    1           2 ARGUMENT_A@P(0:0) UBIN;
              9582    1     DCL 1 QI$OP_ALL_LITERAL BASED ALIGNED,
              9583    1           2 CODE UBIN,
              9584    1           2 ALL_LITERAL_SOURCE@P UBIN,
              9585    1           2 TEMP_DISPLAY_TARGET@P UBIN,
              9586    1           2 NEXT_CODE@P UBIN;
              9611    1     DCL 1 QI$OP_APPLY BASED ALIGNED,
              9612    1           2 CODE UBIN,
              9613    1           2 VISUAL_ATTRIBUTE UBIN,
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:211  
              9614    1           2 OPERAND_COUNT UBIN,
              9615    1           2 OPERAND_A@P(0:0) UBIN;
              9640    1     DCL 1 QI$OP_CALL BASED ALIGNED,
              9641    1           2 CODE UBIN,
              9642    1           2 EPTR$ EPTR,
              9643    1           2 PTR$ REDEF EPTR$ PTR,
              9644    1           2 DESCRIPTOR_LIST,
              9645    1             3 ARGUMENT_COUNT UBIN(8) UNAL,
              9646    1             3 DESCRIPTOR_COUNT UBIN(8) UNAL,
              9647    1           2 ARGUMENT_A@P(0:0) UBIN;
              9672    1     DCL 1 QI$OP_CLEAR BASED ALIGNED,
              9673    1           2 CODE UBIN,
              9674    1           2 IS_CLEAR_ALL BIT(1) UNAL,
              9675    1           2 IO_FLAGS,
              9676    1             3 IS_OUTPUT BIT(1) UNAL,
              9677    1             3 IS_INPUT BIT(1) UNAL,
              9678    1           2 IO_VALUE REDEF IO_FLAGS UBIN(2) UNAL,
              9679    1           2 OPERAND_COUNT UBIN(13) UNAL,
              9680    1           2 OPERAND_A@P(0:0) UBIN;
              9705    1     DCL 1 QI$OP_CLOSE BASED ALIGNED,
              9706    1           2 CODE UBIN,
              9707    1           2 FILE_COUNT UBIN,
              9708    1           2 OPERAND_A(0:0),
              9709    1             3 FUNNY_ZERO_WORD UBIN,
              9710    1             3 FILE@P UBIN;
              9735    1     DCL 1 QI$OP_CNVBBX BASED ALIGNED,
              9736    1           2 CODE UBIN,
              9737    1           2 TEMP_BINARY_SOURCE@P UBIN,
              9738    1           2 BINARY_TARGET@P UBIN,
              9739    1           2 NEXT_CODE@P UBIN;
              9764    1     DCL 1 QI$OP_CNVBN BASED ALIGNED,
              9765    1           2 CODE UBIN,
              9766    1           2 BINARY_SOURCE@P UBIN,
              9767    1           2 TEMP_DISPLAY_TARGET@P UBIN,
              9768    1           2 NEXT_CODE@P UBIN;
              9793    1     DCL 1 QI$OP_CNVBNX BASED ALIGNED,
              9794    1           2 CODE UBIN,
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:212  
              9795    1           2 TEMP_BINARY_SOURCE@P UBIN,
              9796    1           2 DISPLAY_TARGET@P UBIN,
              9797    1           2 NEXT_CODE@P UBIN;
              9822    1     DCL 1 QI$OP_CNVBPX BASED ALIGNED,
              9823    1           2 CODE UBIN,
              9824    1           2 TEMP_BINARY_SOURCE@P UBIN,
              9825    1           2 PACKED_TARGET@P UBIN,
              9826    1           2 NEXT_CODE@P UBIN;
              9851    1     DCL 1 QI$OP_CNVNBT BASED ALIGNED,
              9852    1           2 CODE UBIN,
              9853    1           2 DISPLAY_SOURCE@P UBIN,
              9854    1           2 TEMP_BINARY_TARGET@P UBIN,
              9855    1           2 NEXT_CODE@P UBIN;
              9880    1     DCL 1 QI$OP_CNVPBT BASED ALIGNED,
              9881    1           2 CODE UBIN,
              9882    1           2 PACKED_SOURCE@P UBIN,
              9883    1           2 TEMP_BINARY_TARGET@P UBIN,
              9884    1           2 NEXT_CODE@P UBIN;
              9909    1     DCL 1 QI$OP_CNVPN BASED ALIGNED,
              9910    1           2 CODE UBIN,
              9911    1           2 PACKED_SOURCE@P UBIN,
              9912    1           2 TEMP_DISPLAY_TARGET@P UBIN,
              9913    1           2 NEXT_CODE@P UBIN;
              9938    1     DCL 1 QI$OP_DISPLAY BASED ALIGNED,
              9939    1           2 CODE UBIN,
              9940    1           2 TYPE UBIN(3) UNAL,
              9941    1           2 FIELD_COUNT UBIN(13) UNAL,
              9942    1           2 FIELD_A@P(0:0) UBIN,
              9943    1           2 NEXT_CODE@P REDEF FIELD_A@P UBIN;
              9968    1     DCL 1 QI$OP_DIV BASED ALIGNED,
              9969    1           2 CODE UBIN,
              9970    1           2 DIVISOR@P UBIN,
              9971    1           2 DIVIDEND_AND_QUOTIENT@P UBIN,
              9972    1           2 NEXT_CODE@P UBIN;
              9997    1     DCL 1 QI$OP_DIVX BASED ALIGNED,
              9998    1           2 CODE UBIN,
              9999    1           2 DIVISOR@P UBIN,
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:213  
             10000    1           2 DIVIDEND@P UBIN,
             10001    1           2 NEXT_CODE@P UBIN;
             10026    1     DCL 1 QI$OP_ENABLE BASED ALIGNED,
             10027    1           2 CODE UBIN,
             10028    1           2 * UBIN(1) UNAL,
             10029    1           2 IO_FLAGS,
             10030    1             3 IS_OUTPUT BIT(1) UNAL,
             10031    1             3 IS_INPUT BIT(1) UNAL,
             10032    1           2 IO_VALUE REDEF IO_FLAGS UBIN(2) UNAL,
             10033    1           2 OPERAND_COUNT UBIN(13) UNAL,
             10034    1           2 OPERAND_A@P(0:0) UBIN;
             10059    1     DCL 1 QI$OP_GOTO BASED ALIGNED,
             10060    1           2 CODE UBIN,
             10061    1           2 GOTO@P UBIN,
             10062    1           2 NEXT_CODE@P UBIN;
             10087    1     DCL 1 QI$OP_GOTODP BASED ALIGNED,
             10088    1           2 CODE UBIN,
             10089    1           2 GOTO_INDEX@P UBIN,
             10090    1           2 PROCEDURE_NAME_COUNT UBIN,
             10091    1           2 PROCEDURE_NAME_A@P(0:0) UBIN;
             10116    1     DCL 1 QI$OP_IFCLS BASED ALIGNED,
             10117    1           2 CODE UBIN,
             10118    1           2 SOURCE@P UBIN,
             10119    1           2 ATTRIBUTE,
             10120    1             3 * UBIN(11) UNAL,
             10121    1             3 IS_NOT BIT(1) UNAL,
             10122    1             3 TYPE,
             10123    1               4 IS_ALPHA BIT(1) UNAL,
             10124    1               4 IS_NUMERIC BIT(1) UNAL,
             10125    1               4 IS_DIGITS BIT(1) UNAL,
             10126    1               4 * UBIN(1) UNAL,
             10127    1             3 TYPES REDEF TYPE UBIN(4) UNAL,
             10128    1           2 FALSE_CONDITION@P UBIN,
             10129    1           2 NEXT_CODE@P UBIN;
             10154    1     DCL 1 QI$OP_IFCNDA BASED ALIGNED,
             10155    1           2 CODE UBIN,
             10156    1           2 ALPHANUMERIC_SOURCE@P UBIN,
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:214  
             10157    1           2 CONDITION_CONTROL_BLOCK@P UBIN,
             10158    1           2 ATTRIBUTE,
             10159    1             3 * UBIN(11) UNAL,
             10160    1             3 IS_NOT BIT(1) UNAL,
             10161    1             3 * UBIN(4) UNAL,
             10162    1           2 FALSE_CONDITION@P UBIN,
             10163    1           2 NEXT_CODE@P UBIN;
             10188    1     DCL 1 QI$OP_IFCNDN BASED ALIGNED,
             10189    1           2 CODE UBIN,
             10190    1           2 NUMERIC_SOURCE@P UBIN,
             10191    1           2 CONDITION_CONTROL_BLOCK@P UBIN,
             10192    1           2 ATTRIBUTE,
             10193    1             3 * UBIN(11) UNAL,
             10194    1             3 IS_NOT BIT(1) UNAL,
             10195    1             3 * UBIN(4) UNAL,
             10196    1           2 FALSE_CONDITION@P UBIN,
             10197    1           2 NEXT_CODE@P UBIN;
             10222    1     DCL 1 QI$OP_IFINDR BASED ALIGNED,
             10223    1           2 CODE UBIN,
             10224    1           2 FRAME_OR_FIELD@P UBIN,
             10225    1           2 ATTRIBUTE,
             10226    1             3 * UBIN(11) UNAL,
             10227    1             3 IS_NOT BIT(1) UNAL,
             10228    1             3 STATUS_TYPE UBIN(4) UNAL,
             10229    1           2 FALSE_CONDITION@P UBIN,
             10230    1           2 NEXT_CODE@P UBIN;
             10255    1     DCL 1 QI$OP_IFRELA BASED ALIGNED,
             10256    1           2 CODE UBIN,
             10257    1           2 ALPHANUMERIC_SOURCE@P UBIN,
             10258    1           2 ALPHANUMERIC_TARGET@P UBIN,
             10259    1           2 RELATIONAL_ATTRIBUTE UBIN,
             10260    1           2 FALSE_CONDITION@P UBIN,
             10261    1           2 NEXT_CODE@P UBIN;
             10286    1     DCL 1 QI$OP_IFRELG BASED ALIGNED,
             10287    1           2 CODE UBIN,
             10288    1           2 IS_SOURCE_GROUP BIT(1) UNAL,
             10289    1           2 * UBIN(1) UNAL,
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:215  
             10290    1           2 ANTI_GROUP_LENGTH UBIN(14) UNAL,
             10291    1           2 SOURCE@P UBIN,
             10292    1           2 TARGET@P UBIN,
             10293    1           2 RELATIONAL_ATTRIBUTE UBIN,
             10294    1           2 FALSE_CONDITION@P UBIN,
             10295    1           2 NEXT_CODE@P UBIN;
             10320    1     DCL 1 QI$OP_IFRELN BASED ALIGNED,
             10321    1           2 CODE UBIN,
             10322    1           2 NUMERIC_SOURCE@P UBIN,
             10323    1           2 NUMERIC_TARGET@P UBIN,
             10324    1           2 RELATIONAL_ATTRIBUTE UBIN,
             10325    1           2 FALSE_CONDITION@P UBIN,
             10326    1           2 NEXT_CODE@P UBIN;
             10351    1     DCL 1 QI$OP_INSPECT BASED ALIGNED,
             10352    1           2 CODE UBIN,
             10353    1           2 SOURCE@P UBIN,
             10354    1           2 TALLYING_ITEM@P UBIN,
             10355    1           2 REPLACING_OLD_ITEM@P REDEF TALLYING_ITEM@P UBIN,
             10356    1           2 TALLYING_FOR_ITEM@P UBIN,
             10357    1           2 REPLACING_NEW_ITEM@P REDEF TALLYING_FOR_ITEM@P UBIN,
             10358    1           2 TALLYING_INITIAL_ITEM@P UBIN,
             10359    1           2 REPLACING_INITIAL_ITEM@P REDEF TALLYING_INITIAL_ITEM@P UBIN,
             10360    1           2 ATTRIBUTE,
             10361    1             3 * UBIN(10) UNAL,
             10362    1             3 IS_REPLACING BIT(1) UNAL,
             10363    1             3 BEFORE_AFTER UBIN(2) UNAL,
             10364    1             3 WHICH_CHARS UBIN(3) UNAL,
             10365    1           2 NEXT_CODE@P UBIN;
             10390    1     DCL 1 QI$OP_JAZ BASED ALIGNED,
             10391    1           2 CODE UBIN,
             10392    1           2 EVERYTHINGS_PEACHY@P UBIN,
             10393    1           2 NEXT_CODE@P UBIN;
             10418    1     DCL 1 QI$OP_JND BASED ALIGNED,
             10419    1           2 CODE UBIN,
             10420    1           2 EVERYTHINGS_PEACHY@P UBIN,
             10421    1           2 NEXT_CODE@P UBIN;
             10446    1     DCL 1 QI$OP_LOAD BASED ALIGNED,
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:216  
             10447    1           2 CODE UBIN,
             10448    1           2 IS_ARGUMENT_PASSED BIT(1) UNAL,
             10449    1           2 * UBIN(1) UNAL,
             10450    1           2 IS_BY_NAME BIT(1) UNAL,
             10451    1           2 * UBIN(13) UNAL,
             10452    1           2 NAME_OR_TYPE@P UBIN,
             10453    1           2 ARGUMENT@P UBIN,
             10454    1           2 NEXT_CODE@P UBIN;
             10479    1     DCL 1 QI$OP_MOVA BASED ALIGNED,
             10480    1           2 CODE UBIN,
             10481    1           2 SOURCE@P UBIN,
             10482    1           2 ALPHANUMERIC_TARGET@P UBIN,
             10483    1           2 NEXT_CODE@P UBIN;
             10508    1     DCL 1 QI$OP_MOVAE BASED ALIGNED,
             10509    1           2 CODE UBIN,
             10510    1           2 SOURCE@P UBIN,
             10511    1           2 ALPHANUMERIC_EDITED_TARGET@P UBIN,
             10512    1           2 NEXT_CODE@P UBIN;
             10537    1     DCL 1 QI$OP_MOVAJ BASED ALIGNED,
             10538    1           2 CODE UBIN,
             10539    1           2 SOURCE@P UBIN,
             10540    1           2 RJ_ALPHANUMERIC_TARGET@P UBIN,
             10541    1           2 NEXT_CODE@P UBIN;
             10566    1     DCL 1 QI$OP_MOVB BASED ALIGNED,
             10567    1           2 CODE UBIN,
             10568    1           2 SOURCE@P UBIN,
             10569    1           2 BINARY_TARGET@P UBIN,
             10570    1           2 NEXT_CODE@P UBIN;
             10595    1     DCL 1 QI$OP_MOVBA BASED ALIGNED,
             10596    1           2 CODE UBIN,
             10597    1           2 BINARY_TARGET@P UBIN,
             10598    1           2 NEXT_CODE@P UBIN;
             10623    1     DCL 1 QI$OP_MOVDE BASED ALIGNED,
             10624    1           2 CODE UBIN,
             10625    1           2 NUMERIC_EDITED_SOURCE@P UBIN,
             10626    1           2 NUMERIC_TARGET@P UBIN,
             10627    1           2 NEXT_CODE@P UBIN;
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:217  
             10652    1     DCL 1 QI$OP_MOVG BASED ALIGNED,
             10653    1           2 CODE UBIN,
             10654    1           2 SOURCE@P UBIN,
             10655    1           2 TARGET@P UBIN,
             10656    1           2 IS_SOURCE_GROUP BIT(1) UNAL,
             10657    1           2 * UBIN(1) UNAL,
             10658    1           2 ANTI_GROUP_LENGTH UBIN(14) UNAL,
             10659    1           2 NEXT_CODE@P UBIN;
             10684    1     DCL 1 QI$OP_MOVN BASED ALIGNED,
             10685    1           2 CODE UBIN,
             10686    1           2 SOURCE@P UBIN,
             10687    1           2 DISPLAY_TARGET@P UBIN,
             10688    1           2 NEXT_CODE@P UBIN;
             10713    1     DCL 1 QI$OP_MOVNA BASED ALIGNED,
             10714    1           2 CODE UBIN,
             10715    1           2 DISPLAY_TARGET@P UBIN,
             10716    1           2 NEXT_CODE@P UBIN;
             10741    1     DCL 1 QI$OP_MOVNE BASED ALIGNED,
             10742    1           2 CODE UBIN,
             10743    1           2 SOURCE@P UBIN,
             10744    1           2 NUMERIC_EDITED_TARGET@P UBIN,
             10745    1           2 NEXT_CODE@P UBIN;
             10770    1     DCL 1 QI$OP_MOVNEA BASED ALIGNED,
             10771    1           2 CODE UBIN,
             10772    1           2 NUMERIC_EDITED_TARGET@P UBIN,
             10773    1           2 NEXT_CODE@P UBIN;
             10798    1     DCL 1 QI$OP_MOVP BASED ALIGNED,
             10799    1           2 CODE UBIN,
             10800    1           2 SOURCE@P UBIN,
             10801    1           2 PACKED_TARGET@P UBIN,
             10802    1           2 NEXT_CODE@P UBIN;
             10827    1     DCL 1 QI$OP_MOVPA BASED ALIGNED,
             10828    1           2 CODE UBIN,
             10829    1           2 PACKED_TARGET@P UBIN,
             10830    1           2 NEXT_CODE@P UBIN;
             10855    1     DCL 1 QI$OP_MULT BASED ALIGNED,
             10856    1           2 CODE UBIN,
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:218  
             10857    1           2 NUMERIC_SOURCE@P UBIN,
             10858    1           2 TARGET_AND_RESULT@P UBIN,
             10859    1           2 NEXT_CODE@P UBIN;
             10884    1     DCL 1 QI$OP_MULTX BASED ALIGNED,
             10885    1           2 CODE UBIN,
             10886    1           2 NUMERIC_SOURCE@P UBIN,
             10887    1           2 NUMERIC_TARGET@P UBIN,
             10888    1           2 NEXT_CODE@P UBIN;
             10913    1     DCL 1 QI$OP_OPEN BASED ALIGNED,
             10914    1           2 CODE UBIN,
             10915    1           2 * BIT(1) UNAL,
             10916    1           2 IO_FLAGS,
             10917    1             3 IS_OUTPUT BIT(1) UNAL,
             10918    1             3 IS_INPUT BIT(1) UNAL,
             10919    1           2 IO_VALUE REDEF IO_FLAGS UBIN(2) UNAL,
             10920    1           2 FILE_COUNT UBIN(13) UNAL,
             10921    1           2 FILE_A@P(0:0) UBIN;
             10946    1     DCL 1 QI$OP_PERFM BASED ALIGNED,
             10947    1           2 CODE UBIN,
             10948    1           2 FROM@P UBIN,
             10949    1           2 PERFORM_BLOCK@D UBIN,
             10950    1           2 ATTRIBUTE,
             10951    1             3 PARAGRAPH_SECTION BIT (1) UNAL,
             10952    1             3 * BIT (11) UNAL,
             10953    1             3 ITERATION_FIELD UBIN (4) UNAL,
             10954    1           2 BINARY_ITERATION_COUNT@P UBIN,
             10955    1           2 SINGLE_ITERATION_NEXT_CODE@P REDEF BINARY_ITERATION_COUNT@P UBIN,
             10956    1           2 MULTIPLE_ITERATION_NEXT_CODE@P UBIN;
             10981    1     DCL 1 QI$OP_PERFMT BASED ALIGNED,
             10982    1           2 CODE UBIN,
             10983    1           2 PERFORM_BLOCK@D UBIN,
             10984    1           2 NEXT_CODE@P UBIN;
             11009    1     DCL 1 QI$OP_READ_FORM BASED ALIGNED,
             11010    1           2 CODE UBIN,
             11011    1           2 FORM_FILE@P UBIN,
             11012    1           2 IS_POSITIONING_CURSOR BIT(1) UNAL,
             11013    1           2 * BIT(15) UNAL,
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:219  
             11014    1           2 CURSOR_FIELD@P UBIN,
             11015    1           2 NEXT_CODE@P UBIN;
             11040    1     DCL 1 QI$OP_READ_TRAN BASED ALIGNED,
             11041    1           2 CODE UBIN,
             11042    1           2 TRAN_FILE@P UBIN,
             11043    1           2 * UBIN(15) UNAL,
             11044    1           2 NO_DATA BIT(1) UNAL,
             11045    1           2 NEXT_CODE@P UBIN;
             11070    1     DCL 1 QI$OP_ROUND BASED ALIGNED,
             11071    1           2 CODE UBIN,
             11072    1           2 DECIMAL_PLACES UBIN,
             11073    1           2 NEXT_CODE@P UBIN;
             11098    1     DCL 1 QI$OP_STOP_PAUSE BASED ALIGNED,
             11099    1           2 CODE UBIN,
             11100    1           2 * UBIN(13) UNAL,
             11101    1           2 IS_IMPLICIT_POSTING BIT(1) UNAL,
             11102    1           2 IS_EXPLICIT_POSTING BIT(1) UNAL,
             11103    1           2 IS_PAUSING BIT(1) UNAL,
             11104    1           2 PAUSING_OPERAND@P UBIN,
             11105    1           2 POSTING_OPERAND@P UBIN,
             11106    1           2 NEXT_CODE@P UBIN;
             11131    1     DCL 1 QI$OP_STOP_RUN BASED ALIGNED,
             11132    1           2 CODE UBIN,
             11133    1           2 NEXT_CODE@P UBIN;
             11158    1     DCL 1 QI$OP_SUB BASED ALIGNED,
             11159    1           2 CODE UBIN,
             11160    1           2 NUMERIC_SOURCE@P UBIN,
             11161    1           2 NUMERIC_TARGET@P UBIN,
             11162    1           2 NEXT_CODE@P UBIN;
             11187    1     DCL 1 QI$OP_SUBSCR BASED ALIGNED,
             11188    1           2 CODE UBIN,
             11189    1           2 ARRAY_SOURCE@P UBIN,
             11190    1           2 SUBSCRIPT_A@P(0:0) UBIN,
             11191                          /* SUBSCRIPT_A@P is one or two entries long
             11192                             depending on the dimension_count of
             11193                             ARRAY_SOURCE@P.  */
             11194    1           2 DUMMY_RESULT@P UBIN,
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:220  
             11195    1           2 NEXT_CODE UBIN;
             11220    1     DCL 1 QI$OP_SUBX BASED ALIGNED,
             11221    1           2 CODE UBIN,
             11222    1           2 ARGUMENT_COUNT UBIN,
             11223    1           2 ARGUMENT_A@P(0:0) UBIN;
             11248    1     DCL 1 QI$OP_VERI_PRES BASED ALIGNED,
             11249    1           2 CODE UBIN,
             11250    1           2 DAD_PAIR_COUNT UBIN,
             11251    1           2 DAD_PAIR_A(0:0),
             11252    1             3 SOURCE@P UBIN,
             11253    1             3 TARGET@P UBIN;
             11278    1     DCL 1 QI$OP_WRITE_FORM BASED ALIGNED,
             11279    1           2 CODE UBIN,
             11280    1           2 IS_WRITE_PAGE BIT(1) UNAL,
             11281    1           2 * BIT(15) UNAL,
             11282    1           2 FORM_RECORD@P UBIN,
             11283    1           2 NEXT_CODE@P UBIN;
             11308    1     DCL 1 QI$OP_WRITE_TRAN BASED ALIGNED,
             11309    1           2 CODE UBIN,
             11310    1           2 TRAN_RECORD@P UBIN,
             11311    1           2 DATA_SIZE UBIN,
             11312    1           2 NEXT_CODE@P UBIN;
             11337        /*
             11338           This INITIALIZATION_BLOCK is used by QAT$TALLYHO
             11339           during startup to, well, initialize.
             11340        */
             11341    1     DCL 1 QI$INITIALIZATION_BLOCK BASED ALIGNED,
             11342    1           2 DATA_START$ PTR,
             11343    1           2 PROC_START$ PTR,
             11344    1           2 EXPECTED_ARGUMENT_COUNT UBIN,
             11345    1           2 CURRENT_FORM@P UBIN,
             11346    1           2 CURRENT_FRAME@P UBIN,
             11347    1           2 CURRENT_FIELD@P UBIN,
             11348    1           2 RETRY@P UBIN,
             11349    1           2 VERIFY_BUFFER_1@P UBIN,
             11350    1           2 VERIFY_BUFFER_2@P UBIN,
             11351    1           2 VERIFY_BUFFER_3@P UBIN,
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:221  
             11352    1           2 VERIFY_BUFFER_4@P UBIN,
             11353    1           2 COMPILER_VERSION CHAR(4),
             11354    1           2 OUTPUT_OR_IO_USE_PROCEDURE@P UBIN,
             11355    1           2 INPUT_OR_IO_USE_PROCEDURE@P UBIN,
             11356    1           2 VERIFICATION_USE_PROCEDURE@P UBIN,
             11357    1           2 MESSAGE_LINE_DCB# UBIN,
             11358    1           2 VANILLA_HOST_DCB# UBIN,
             11359    1           2 IS_THIS_A_SUBROUTINE BIT(1) UNAL,
             11360    1           2 * UBIN(15) UNAL;
             11385        /*
             11386           CONDITION CONTROL BLOCK used to refer to target data on conditional
             11387           IFs (i.e. IFCNDA, and IFCNDN).
             11388        */
             11389    1     DCL 1 QI$CONDITION_CONTROL_BLOCK BASED ALIGNED,
             11390    1           2 WORD0_FLAGS,
             11391    1             3 IS_THROUGH BIT(1) UNAL,
             11392    1             3 * UBIN(15) UNAL,
             11393    1           2 LIST_LENGTH REDEF WORD0_FLAGS UBIN,
             11394    1           2 LIST_A@P(0:0) UBIN,
             11395    1           2 RANGE_A@P(0:0) REDEF LIST_A@P UBIN;
             11420        /*
             11421           CONDITION BLOCK used for holding information about the LEGAL
             11422           list/range/array for a COBOL-like data item.
             11423        */
             11424    1     DCL 1 QI$CONDITION_LEGAL_BLOCK BASED ALIGNED,
             11425    1           2 TYPE UBIN(2) UNAL,
             11426    1           2 LIST_LENGTH UBIN(14) UNAL,
             11427    1           2 ARRAY@P UBIN,
             11428    1           2 LIST_A@P(0:0) REDEF ARRAY@P UBIN,
             11429    1           2 RANGE_A@P(0:0) REDEF ARRAY@P UBIN;
             11455    1     DCL 1 QI$PSEUDO_CIP BASED ALIGNED,        /* CIP descriptor */
             11459    1           2 ALPHANUMERIC,
             11460    1             3 CA,                  /* Control bits for ALPHANUMERIC */
             11461    1               4 OFFSET UBIN(1) UNAL,
             11462    1             3 * UBIN(1) UNAL,
             11463    1             3 LEN UBIN(14) UNAL,
             11464    1           2 NUMERIC REDEF ALPHANUMERIC,
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:222  
             11465    1             3 CB,                  /* Control bits for BINARY */
             11466    1               4 OFFSET UBIN(1) UNAL,
             11467    1               4 MBZ UBIN(2) UNAL,
             11468    1             3 CD REDEF CB,         /* Control bits for DISPLAY */
             11469    1               4 OFFSET UBIN(1) UNAL,
             11470    1               4 SIGN UBIN(2) UNAL,
             11471    1             3 CP REDEF CB,         /* Control bits for PACKED */
             11472    1               4 OFFSET UBIN(2) UNAL,
             11473    1               4 SIGN UBIN(1) UNAL,
             11474    1             3 LEN UBIN(5) UNAL,
             11475    1             3 * UBIN(2) UNAL,
             11476    1             3 DEC SBIN(6) UNAL,
             11478    1           2 DATA@ UBIN;
             11479    1     DCL 1 QI$PSEUDO_CIP_A (0:1) REDEF QI$PSEUDO_CIP UBIN;
             11560    1           DCL 1 QI$CIP BASED DALIGNED,        /* CIP descriptor */
             11565    1                 2 CA,                  /* Control bits for ALPHANUMERIC */
             11566    1                   3 OFFSET UBIN(1) UNAL /* Was INIT'ed to:  (0)/**/,
             11567    1                   3 FILL UBIN(1) UNAL /* Was INIT'ed to:  (1)/**/,
             11568    1                   3 MBZ UBIN(1) UNAL /* Was INIT'ed to:  (0)/**/,
             11569    1                 2 CB REDEF CA,         /* Control bits for BINARY */
             11570    1                   3 OFFSET UBIN(1) UNAL,
             11571    1                   3 MBZ UBIN(2) UNAL,  /* not used:  MBZ */
             11572    1                 2 CD REDEF CA,         /* Control bits for DISPLAY */
             11573    1                   3 OFFSET UBIN(1) UNAL,
             11574    1                   3 SIGN UBIN(2) UNAL,
             11575    1                 2 CP REDEF CA,         /* Control bits for PACKED */
             11576    1                   3 OFFSET UBIN(2) UNAL,
             11577    1                   3 SIGN UBIN(1) UNAL,
             11621    1                 2 LEN UBIN(5) UNAL /* Was INIT'ed to:  (0)/**/,
             11625    1                 2 T UBIN(1) UNAL /* Was INIT'ed to:  (0)/**/,
             11627    1                 2 AS UBIN(7) UNAL /* Was INIT'ed to:  (BITBIN('B'X))/**/,
             11629    1                 2 DISP UBIN /* Was INIT'ed to:  (6)/**/;
             11630    1           DCL 1 QI$CIP_A (0:1) REDEF QI$CIP UBIN;
             11672    1     DCL 1 QI$DAD BASED ALIGNED,
             11676    1           2 WORD0 SBIN,
             11677    1           2 WORD0_FLAGS REDEF WORD0,
             11678    1             3 INDIRECT BIT(1) UNAL,          /* on for indirect reference */
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:223  
             11679    1             3 * UBIN(4) UNAL,
             11680    1             3 IS_JUSTIFIED_RIGHT BIT(1) UNAL,
             11681    1             3 * UBIN(2) UNAL,
             11682    1             3 IS_FORM_VARIABLE BIT(1) UNAL,  /* on for FORM variable */
             11683    1             3 IS_CONSTANT BIT(1) UNAL,       /* on if CONSTANT */
             11684    1             3 DIMENSION_COUNT UBIN(2) UNAL,  /* # of dimensions */
             11685    1             3 TYPE UBIN(4) UNAL,             /* variable TYPE */
             11707    1         2 PSEUDO_CIP ALIGNED,           /* CIP descriptor */
             11709    1           3 ALPHANUMERIC,
             11710    1             4 CA,                  /* Control bits for ALPHANUMERIC */
             11711    1               5 OFFSET UBIN(1) UNAL,
             11712    1             4 * UBIN(1) UNAL,
             11713    1             4 LEN UBIN(14) UNAL,
             11714    1           3 NUMERIC REDEF ALPHANUMERIC,
             11715    1             4 CB,                  /* Control bits for BINARY */
             11716    1               5 OFFSET UBIN(1) UNAL,
             11717    1               5 MBZ UBIN(2) UNAL,
             11718    1             4 CD REDEF CB,         /* Control bits for DISPLAY */
             11719    1               5 OFFSET UBIN(1) UNAL,
             11720    1               5 SIGN UBIN(2) UNAL,
             11721    1             4 CP REDEF CB,         /* Control bits for PACKED */
             11722    1               5 OFFSET UBIN(2) UNAL,
             11723    1               5 SIGN UBIN(1) UNAL,
             11724    1             4 LEN UBIN(5) UNAL,
             11725    1             4 * UBIN(2) UNAL,
             11726    1             4 DEC SBIN(6) UNAL,
             11731    1           3 DATA@ UBIN,
             11732    1         2 PSEUDO_CIP_A (0:1) REDEF PSEUDO_CIP UBIN ;
             11767    1     DCL 1 QI$COBOL_DAD BASED ALIGNED,
             11768    1           2 WORD0 SBIN,
             11769    1           2 WORD0_FLAGS REDEF WORD0,
             11770    1             3 INDIRECT BIT(1) UNAL,
             11771    1             3 P,
             11772    1               4 PICTURE BIT(1) UNAL,
             11773    1               4 VALID BIT(1) UNAL,
             11774    1               4 ERROR_MESSAGE BIT(1) UNAL,
             11775    1             3 IS_LINKAGE_ARGUMENT BIT(1) UNAL,/* on if in LINKAGE SECTION */
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:224  
             11776    1             3 IS_JUSTIFIED_RIGHT BIT(1) UNAL,/* on if JUSTIFIED RIGHT */
             11777    1             3 IS_TEMP BIT(1) UNAL,           /* on if this is a temp */
             11778    1             3 IS_ALL_LIT BIT(1) UNAL,        /* on if this is an ALL "literal" */
             11779    1             3 IS_FORM_VARIABLE BIT(1) UNAL,  /* on if a FORM variable */
             11780    1             3 IS_CONSTANT BIT(1) UNAL,       /* on if CONSTANT */
             11781    1             3 DIMENSION_COUNT UBIN(2) UNAL,  /* # of dimensions */
             11782    1             3 TYPE UBIN(4) UNAL,
             11783    1           2 P_A(0:15) REDEF WORD0 BIT(1) UNAL,
             11804    1         2 PSEUDO_CIP ALIGNED,           /* CIP descriptor */
             11806    1           3 ALPHANUMERIC,
             11807    1             4 CA,                  /* Control bits for ALPHANUMERIC */
             11808    1               5 OFFSET UBIN(1) UNAL,
             11809    1             4 * UBIN(1) UNAL,
             11810    1             4 LEN UBIN(14) UNAL,
             11811    1           3 NUMERIC REDEF ALPHANUMERIC,
             11812    1             4 CB,                  /* Control bits for BINARY */
             11813    1               5 OFFSET UBIN(1) UNAL,
             11814    1               5 MBZ UBIN(2) UNAL,
             11815    1             4 CD REDEF CB,         /* Control bits for DISPLAY */
             11816    1               5 OFFSET UBIN(1) UNAL,
             11817    1               5 SIGN UBIN(2) UNAL,
             11818    1             4 CP REDEF CB,         /* Control bits for PACKED */
             11819    1               5 OFFSET UBIN(2) UNAL,
             11820    1               5 SIGN UBIN(1) UNAL,
             11821    1             4 LEN UBIN(5) UNAL,
             11822    1             4 * UBIN(2) UNAL,
             11823    1             4 DEC SBIN(6) UNAL,
             11828    1           3 DATA@ UBIN,
             11829    1         2 PSEUDO_CIP_A (0:1) REDEF PSEUDO_CIP UBIN ,
             11840    1           2 VARIABLE_LENGTH_ITEMS,
             11841    1             3 LEVEL_MULTIPLIERS,
             11842    1               4 ONE_DIMENSIONAL,
             11843    1                 5 ELEMENT_COUNT UBIN,
             11844    1                 5 ELEMENT_LENGTH UBIN,
             11845    1               4 TWO_DIMENSIONAL,
             11846    1                 5 ELEMENT_COUNT UBIN,
             11847    1                 5 ELEMENT_LENGTH UBIN,
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:225  
             11848    1               4 THREE_DIMENSIONAL,
             11849    1                 5 ELEMENT_COUNT UBIN,
             11850    1                 5 ELEMENT_LENGTH UBIN,
             11851    1             3 LEVEL_MULTIPLIER_A(0:2) REDEF LEVEL_MULTIPLIERS,
             11852    1               4 ELEMENT_COUNT UBIN,
             11853    1               4 ELEMENT_LENGTH UBIN,
             11854    1             3 P_ITEM_A(0:5) REDEF LEVEL_MULTIPLIERS UBIN,
             11855    1             3 *(0:2) UBIN,
             11856    1           2 ELEMENTARY_ITEM REDEF VARIABLE_LENGTH_ITEMS,
             11857    1             3 P_ITEM_A(0:2) UBIN,
             11858    1             3 * UBIN,
             11859    1             3 * UBIN,
             11860    1             3 * UBIN,
             11861    1             3 * UBIN,
             11862    1             3 * UBIN,
             11863    1             3 * UBIN,
             11864    1           2 ONE_DIMENSIONAL_ITEM REDEF VARIABLE_LENGTH_ITEMS,
             11865    1             3 * UBIN,
             11866    1             3 * UBIN,
             11867    1             3 P_ITEM_A(0:2) UBIN,
             11868    1             3 * UBIN,
             11869    1             3 * UBIN,
             11870    1             3 * UBIN,
             11871    1             3 * UBIN,
             11872    1           2 TWO_DIMENSIONAL_ITEM REDEF VARIABLE_LENGTH_ITEMS,
             11873    1             3 * UBIN,
             11874    1             3 * UBIN,
             11875    1             3 * UBIN,
             11876    1             3 * UBIN,
             11877    1             3 P_ITEM_A(0:2) UBIN,
             11878    1             3 * UBIN,
             11879    1             3 * UBIN;
             11904        /*
             11905                 Presence bits for COBOL-type DADs.
             11906        */
             11907    1     DCL 1 QI$COBOL_DAD_P_BITS BASED ALIGNED,
             11908    1           2 P,
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:226  
             11909    1             3 * BIT(1) UNAL,
             11910    1             3 PICTURE BIT(1) UNAL,
             11911    1             3 VALID BIT(1) UNAL,
             11912    1             3 ERROR_MESSAGE BIT(1) UNAL,
             11913    1             3 USE_PROCEDURE BIT(1) UNAL,
             11914    1           2 P_A(0:4) REDEF P BIT(1) UNAL;
             11939        /*
             11940                 Presence item array for COBOL-type DADs.
             11941        */
             11942    1     DCL 1 QI$COBOL_DAD_P_ITEMS BASED ALIGNED,
             11943    1           2 P_ITEM_A(0:2) UBIN;
             11968    1     DCL 1 QI$LINKAGE_ARGUMENT_DESCRIPTOR BASED ALIGNED,
             11969    1           2 ARGUMENT_NUMBER UBIN,
             11970                          /* argument "number" from
             11971                             PROCEDURE DIVISION USING P1, P2, P3,....
             11972                             E.g., 0 for P1, 1 for P2, 2 for P3,.... */
             11973    1           2 WORD_OFFSET_FROM_01_ITEM UBIN;
             11974                          /* word offset from the nearest 01-level item
             11975                             above to the current item. */
             12000    1     DCL 1 QI$FIELD_DAD BASED ALIGNED,
             12001    1           2 WORD0 SBIN,
             12002    1           2 WORD0_FLAGS REDEF WORD0,
             12003    1             3 INDIRECT BIT(1) UNAL,
             12004                                           /* on if an indirect reference */
             12005    1             3 IO_FLAGS,
             12006    1               4 IS_OUTPUT BIT(1) UNAL,
             12007                                           /* on if this FIELD is OUTPUT or I-O */
             12008    1               4 IS_INPUT BIT(1) UNAL,
             12009                                           /* on if this FIELD is INPUT or I-O */
             12010    1             3 IO_VALUE REDEF IO_FLAGS UBIN(2) UNAL,
             12011                                           /* all 1's if this field is I-O */
             12012    1             3 IS_ENTRY_REQUIRED BIT(1) UNAL,
             12013                                           /* on if INPUT-REQUIRED */
             12014    1             3 IS_OUTPUT_CONSTANT BIT(1) UNAL,
             12015                                           /* on if CONSTANT OUTPUT */
             12016    1             3 IS_JUSTIFIED_RIGHT BIT(1) UNAL,
             12017                                           /* on if right justification is in effect */
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:227  
             12018    1             3 IS_AOIM BIT(1) UNAL,
             12019                                           /* on if A-O-I-M */
             12020    1             3 * BIT(1) UNAL,
             12021    1             3 IS_FORM_VARIABLE BIT(1) UNAL,
             12022                                           /* on if a FORM var */
             12023    1             3 IS_CONSTANT BIT(1) UNAL,
             12024                                           /* on if CONSTANT */
             12025    1             3 DIMENSION_COUNT UBIN(2) UNAL,
             12026                                           /* # of dimensions */
             12027    1             3 TYPE UBIN(4) UNAL,
             12028                                           /* TYPE of variable */
             12049    1         2 PSEUDO_CIP ALIGNED,           /* CIP descriptor */
             12051    1           3 ALPHANUMERIC,
             12052    1             4 CA,                  /* Control bits for ALPHANUMERIC */
             12053    1               5 OFFSET UBIN(1) UNAL,
             12054    1             4 * UBIN(1) UNAL,
             12055    1             4 LEN UBIN(14) UNAL,
             12056    1           3 NUMERIC REDEF ALPHANUMERIC,
             12057    1             4 CB,                  /* Control bits for BINARY */
             12058    1               5 OFFSET UBIN(1) UNAL,
             12059    1               5 MBZ UBIN(2) UNAL,
             12060    1             4 CD REDEF CB,         /* Control bits for DISPLAY */
             12061    1               5 OFFSET UBIN(1) UNAL,
             12062    1               5 SIGN UBIN(2) UNAL,
             12063    1             4 CP REDEF CB,         /* Control bits for PACKED */
             12064    1               5 OFFSET UBIN(2) UNAL,
             12065    1               5 SIGN UBIN(1) UNAL,
             12066    1             4 LEN UBIN(5) UNAL,
             12067    1             4 * UBIN(2) UNAL,
             12068    1             4 DEC SBIN(6) UNAL,
             12073    1           3 DATA@ UBIN,
             12074    1         2 PSEUDO_CIP_A (0:1) REDEF PSEUDO_CIP UBIN ,
             12085    1           2 PICTURE_STRING@P UBIN,
             12086                                           /* ADDR (PROC) disp to PICTURE string */
             12087    1           2 BROTHER@P UBIN,
             12088                                           /* ADDR disp to DAD of brother/sister */
             12089    1           2 FATHER@P UBIN,
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:228  
             12090                                           /* ADDR disp to DAD of father */
             12091    1           2 STATUS_AREA@D UBIN,
             12092                                           /* ADDR (DATA) disp to scratch area */
             12093    1           2 IDENTIFIER@P UBIN,
             12094                                           /* ADDR (PROC) disp to identifier */
             12095    1           2 POSITION,
             12096    1             3 LINE UBIN,
             12097                                           /* LINE integer or ADDR disp to
             12098                                              DAD of LINE variable         */
             12099    1             3 COLUMN UBIN,
             12100                                           /* COLUMN integer or ADDR disp to
             12101                                              DAD of COLUMN variable         */
             12102    1           2 * UBIN BYTE UNAL,
             12103    1           2 VISUAL_ATTRIBUTE UBIN BYTE UNAL,
             12104                                           /* VISUAL-ATTRIBUTE code byte */
             12105    1           2 VARIABLE_LENGTH_ITEMS,
             12106    1             3 LEVEL_MULTIPLIERS,
             12107    1               4 ONE_DIMENSIONAL,
             12108    1                 5 ELEMENT_COUNT UBIN,
             12109    1                 5 ELEMENT_LENGTH UBIN,
             12110    1               4 TWO_DIMENSIONAL,
             12111    1                 5 ELEMENT_COUNT UBIN,
             12112    1                 5 ELEMENT_LENGTH UBIN,
             12113    1               4 THREE_DIMENSIONAL,
             12114    1                 5 ELEMENT_COUNT UBIN,
             12115    1                 5 ELEMENT_LENGTH UBIN,
             12116    1             3 LEVEL_MULTIPLIER_A(0:2) REDEF LEVEL_MULTIPLIERS,
             12117    1               4 ELEMENT_COUNT UBIN,
             12118    1               4 ELEMENT_LENGTH UBIN,
             12119    1             3 P_ITEM_A(0:5) REDEF LEVEL_MULTIPLIERS UBIN,
             12120    1             3 *(0:6) UBIN,
             12121    1           2 ELEMENTARY_ITEM REDEF VARIABLE_LENGTH_ITEMS,
             12122    1             3 P,
             12123    1               4 FILL_CHARACTER_MINIMUM_SIZE BIT(1) UNAL,
             12124    1               4 CLASS_ALPHABET BIT(1) UNAL,
             12125    1               4 DEFAULT BIT(1) UNAL,
             12126    1               4 PROMPT BIT(1) UNAL,
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:229  
             12127    1               4 REPEATS BIT(1) UNAL,
             12128    1               4 SEPARATED BIT(1) UNAL,
             12129    1             3 P_A(0:5) REDEF P BIT(1) UNAL,
             12130    1             3 * UBIN(7) UNAL,
             12131    1             3 CLASS_TYPE UBIN(3) UNAL,
             12132    1             3 P_ITEM_A(0:5) UBIN,
             12133    1             3 * UBIN,
             12134    1             3 * UBIN,
             12135    1             3 * UBIN,
             12136    1             3 * UBIN,
             12137    1             3 * UBIN,
             12138    1             3 * UBIN,
             12139    1           2 ONE_DIMENSIONAL_ITEM REDEF VARIABLE_LENGTH_ITEMS,
             12140    1             3 * UBIN,
             12141    1             3 * UBIN,
             12142    1             3 P,
             12143    1               4 FILL_CHARACTER_MINIMUM_SIZE BIT(1) UNAL,
             12144    1               4 CLASS_ALPHABET BIT(1) UNAL,
             12145    1               4 DEFAULT BIT(1) UNAL,
             12146    1               4 PROMPT BIT(1) UNAL,
             12147    1               4 REPEATS BIT(1) UNAL,
             12148    1               4 SEPARATED BIT(1) UNAL,
             12149    1             3 P_A(0:5) REDEF P BIT(1) UNAL,
             12150    1             3 * UBIN(7) UNAL,
             12151    1             3 CLASS_TYPE UBIN(3) UNAL,
             12152    1             3 P_ITEM_A(0:5) UBIN,
             12153    1             3 * UBIN,
             12154    1             3 * UBIN,
             12155    1             3 * UBIN,
             12156    1             3 * UBIN,
             12157    1           2 TWO_DIMENSIONAL_ITEM REDEF VARIABLE_LENGTH_ITEMS,
             12158    1             3 * UBIN,
             12159    1             3 * UBIN,
             12160    1             3 * UBIN,
             12161    1             3 * UBIN,
             12162    1             3 P,
             12163    1               4 FILL_CHARACTER_MINIMUM_SIZE BIT(1) UNAL,
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:230  
             12164    1               4 CLASS_ALPHABET BIT(1) UNAL,
             12165    1               4 DEFAULT BIT(1) UNAL,
             12166    1               4 PROMPT BIT(1) UNAL,
             12167    1               4 REPEATS BIT(1) UNAL,
             12168    1               4 SEPARATED BIT(1) UNAL,
             12169    1             3 P_A(0:5) REDEF P BIT(1) UNAL,
             12170    1             3 * UBIN(7) UNAL,
             12171    1             3 CLASS_TYPE UBIN(3) UNAL,
             12172    1             3 P_ITEM_A(0:5) UBIN,
             12173    1             3 * UBIN,
             12174    1             3 * UBIN;
             12199        /*
             12200            Presence bits for FIELD-type DADs.
             12201        */
             12202    1     DCL 1 QI$FIELD_DAD_P BASED ALIGNED,
             12203    1           2 P,
             12204    1             3 FILL_CHARACTER_MINIMUM_SIZE BIT(1) UNAL,
             12205    1             3 CLASS_ALPHABET BIT(1) UNAL,
             12206    1             3 DEFAULT BIT(1) UNAL,
             12207    1             3 PROMPT BIT(1) UNAL,
             12208    1             3 REPEATS BIT(1) UNAL,
             12209    1             3 SEPARATED BIT(1) UNAL,
             12210    1           2 P_A(0:5) REDEF P BIT(1) UNAL,
             12211    1           2 * UBIN(7) UNAL,
             12212    1           2 CLASS_TYPE UBIN(3) UNAL,
             12213    1           2 P_ITEM_A(0:5) UBIN;
             12238    1     DCL 1 QI$MAJOR_NODE BASED ALIGNED,
             12239    1           2 WORD0 SBIN,
             12240    1           2 WORD0_FLAGS REDEF WORD0,
             12241    1             3 INDIRECT BIT(1) UNAL,
             12242    1             3 IS_ANY_DESCENDANT_OUTPUT BIT(1) UNAL,
             12243    1             3 IS_ANY_DESCENDANT_INPUT BIT(1) UNAL,
             12244    1             3 * UBIN(5) UNAL,
             12245    1             3 IS_FORM_VARIABLE BIT(1) UNAL,
             12246    1             3 IS_CONSTANT BIT(1) UNAL,
             12247    1             3 * UBIN(2) UNAL,
             12248    1             3 TYPE UBIN(4) UNAL,
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:231  
             12249    1           2 * UBIN,
             12250    1           2 * UBIN,
             12251    1           2 SON@P UBIN,
             12252    1           2 BROTHER@P UBIN,
             12253    1           2 FATHER@P UBIN,
             12254                          /* chauvanists. */
             12255    1           2 STATUS_AREA@D UBIN,
             12256    1           2 IDENTIFIER@P UBIN;
             12281    1     DCL 1 QI$MINOR_NODE BASED ALIGNED,
             12282    1           2 WORD0 SBIN,
             12283    1           2 WORD0_FLAGS REDEF WORD0,
             12284    1             3 INDIRECT BIT(1) UNAL,
             12285    1             3 IS_ANY_DESCENDANT_OUTPUT BIT(1) UNAL,
             12286    1             3 IS_ANY_DESCENDANT_INPUT BIT(1) UNAL,
             12287    1             3 * UBIN(5) UNAL,
             12288    1             3 IS_FORM_VARIABLE BIT(1) UNAL,
             12289    1             3 IS_CONSTANT BIT(1) UNAL,
             12290    1             3 * UBIN(2) UNAL,
             12291    1             3 TYPE UBIN(4) UNAL,
             12292    1           2 REPEATS UBIN,
             12293    1           2 SEPARATED UBIN,
             12294    1           2 SON@P UBIN,
             12295    1           2 BROTHER@P UBIN,
             12296    1           2 FATHER@P UBIN,
             12297                          /* chauvanists. */
             12298    1           2 STATUS_AREA@D UBIN,
             12299    1           2 IDENTIFIER@P UBIN;
             12324    1     DCL 1 QI$FILE BASED ALIGNED,
             12325    1           2 WORD0 SBIN,
             12326    1           2 WORD0_FLAGS REDEF WORD0,
             12327    1             3 INDIRECT BIT(1) UNAL,
             12328                          /* If indirect, this is a pointer to the real DAD,
             12329                             which lives in user data. */
             12330    1             3 IS_ERROR_STATUS_VALID BIT(1) UNAL,
             12331                          /* If error_status_valid, there is a DAD pointer
             12332                             to an ERROR STATUS variable below. */
             12333    1             3 * UBIN(10) UNAL,
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:232  
             12334    1             3 TYPE UBIN(4) UNAL,
             12335                          /* Type of file:  transaction or form. */
             12336    1           2 * UBIN,
             12337    1           2 * UBIN,
             12338    1           2 ERROR_STATUS@D UBIN,
             12339                          /* Offset (in data) of the 8-word space reserved
             12340                             for the ERROR STATUS variable. */
             12341    1           2 * UBIN,
             12342    1           2 * UBIN,
             12343    1           2 STATUS_AREA@D UBIN,
             12344                          /* Offset (in data) of the QI$FILE_STATUS
             12345                             status area for this file FD. */
             12346    1           2 IDENTIFIER@P UBIN,
             12347                          /* Offset (in procedure) of the ATEXTC
             12348                             of the file name. */
             12349    1           2 DCB# UBIN,
             12350                          /* SYMREFed DCBNUM for this file. */
             12351    1           2 USE_PROCEDURE@P UBIN,
             12352                          /* Offset (in procedure) of the USE procedure. */
             12353    1           2 * UBIN;
             12378    1     DCL 1 QI$FORM_FILE BASED ALIGNED,
             12379    1           2 WORD0 SBIN,
             12380    1           2 WORD0_FLAGS REDEF WORD0,
             12381    1             3 INDIRECT BIT(1) UNAL,
             12382                          /* If indirect, this is a pointer to the read DAD,
             12383                             which lives in user data. */
             12384    1             3 IS_ERROR_STATUS_VALID BIT(1) UNAL,
             12385                          /* If error_status_valid, there is a DAD pointer
             12386                             to an ERROR STATUS variable below. */
             12387    1             3 IS_MESSAGE_LINE_VALID BIT(1) UNAL,
             12388                          /* if message_line_valid, there is a DAD pointer
             12389                             to a MESSAGE LINE variable below. */
             12390    1             3 IS_ACTIVATION_STATUS_VALID BIT(1) UNAL,
             12391                          /* if activation_status_valid, there is a DAD pointer
             12392                             to an ACTIVATION STATUS variable below. */
             12393    1             3 * UBIN(4) UNAL,
             12394    1             3 IS_FORM_VARIABLE BIT(1) UNAL,
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:233  
             12395                          /* if form_variable, then this thing was defined
             12396                             within the FRAME SECTION. */
             12397    1             3 IS_CONSTANT BIT(1) UNAL,
             12398                          /* If constant, this item is located in user
             12399                             procedure. */
             12400    1             3 * UBIN(2) UNAL,
             12401    1             3 TYPE UBIN(4) UNAL,
             12402                          /* For form DADs, type is
             12403                             always 11 ('B'X). */
             12404    1           2 FRAME_COUNT UBIN,
             12405                          /* Number of elements in FRAME_LIST_A below. */
             12406    1           2 ACTIVATION_STATUS@P UBIN,
             12407                          /* Offset (in procedure) of the user-supplied
             12408                             ACTIVATION STATUS variable. */
             12409    1           2 ERROR_STATUS@D UBIN,
             12410                          /* Offset (in data) of the 8-word space reserved
             12411                             for the ERROR STATUS variable. */
             12412    1           2 MESSAGE_LINE UBIN,
             12413                          /* Integer value of the ERROR MESSAGE
             12414                             line number. */
             12415    1           2 RETRY_COUNT UBIN,
             12416                          /* Integer value of the retry count. */
             12417    1           2 STATUS_AREA@D UBIN,
             12418                          /* Offset (in data) of the QI$FORM_STATUS
             12419                             status area for this form FD. */
             12420    1           2 IDENTIFIER@P UBIN,
             12421                          /* Offset (in procedure) of the ATEXTC
             12422                             of the file name. */
             12423    1           2 DCB# UBIN,
             12424                          /* SYMREFed DCBNUM for this FORM_FILE. */
             12425    1           2 USE_PROCEDURE,
             12426    1             3 STANDARD,
             12427    1               4 WHERE@P UBIN,
             12428                          /* Offset (in procedure) of the USE procedure. */
             12429    1             3 VERIFY,
             12430    1               4 WHERE@P UBIN,
             12431                          /* Offset (in procedure) of the USE procedure. */
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:234  
             12432    1           2 USE_PROCEDURE_A@P(0:1) REDEF USE_PROCEDURE UBIN,
             12433    1           2 FRAME_LIST_A@P(0:0) UBIN;
             12434                          /* List of offsets of FRAMES specified in the
             12435                             FRAMES ARE clause. */
             12460    1     DCL 1 QI$TRAN_FILE BASED ALIGNED,
             12461    1           2 WORD0 SBIN,
             12462    1           2 WORD0_FLAGS REDEF WORD0,
             12463    1             3 INDIRECT BIT(1) UNAL,
             12464                          /* If indirect, this is a pointer to the read DAD,
             12465                             which lives in user data. */
             12466    1             3 IS_ERROR_STATUS_VALID BIT(1) UNAL,
             12467                          /* If error_status_valid, there is a DAD pointer
             12468                             to an ERROR STATUS variable below. */
             12469    1             3 IS_RELATIVE_KEY_VALID BIT(1) UNAL,
             12470                          /* If relative_key_valid, there is a DAD pointer
             12471                             to a RELATIVE KEY variable below. */
             12472    1             3 IS_ID_VALID BIT(1) UNAL,
             12473                          /* If id_valid, there is a DAD pointer to an
             12474                             ID variable below. */
             12475    1             3 * UBIN(3) UNAL,
             12476    1             3 INPUT_CLASS BIT(1) UNAL,
             12477                          /* Input_class is:  0 for response
             12478                                              1 for report. */
             12479    1             3 ACCESS UBIN(2) UNAL,
             12480                          /* Access is:  0 for sequential
             12481                                         1 for dynamic
             12482                                         2 for random.
             12483                                         (Not currently used.) */
             12484    1             3 * UBIN(2) UNAL,
             12485    1             3 TYPE UBIN(4) UNAL,
             12486                          /* For transaction DADs, file_type is
             12487                             always 12 ('C'X). */
             12488    1           2 MAX_RECORD_SIZE UBIN,
             12489                          /* Size of the largest record in this FD (bytes). */
             12490    1           2 BUFFER@D UBIN,
             12491                          /* Offset (in data) of the buffer to be written. */
             12492    1           2 ERROR_STATUS@D UBIN,
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:235  
             12493                          /* Offset (in data) of the 8-word space reserved
             12494                             for the ERROR STATUS variable. */
             12495    1           2 RELATIVE_KEY@ UBIN,
             12496                          /* Offset of the DAD describing the
             12497                             RELATIVE KEY variable.  (Unimplemented).  */
             12498    1           2 ID@P UBIN,
             12499                          /* Offset of the DAD describing the
             12500                             ID variable. */
             12501    1           2 STATUS_AREA@D UBIN,
             12502                          /* Offset (in data) of the QI$TRAN_STATUS
             12503                             status area for this transaction FD. */
             12504    1           2 IDENTIFIER@P UBIN,
             12505                          /* Offset (in procedure) of the ATEXTC
             12506                             of the file name. */
             12507    1           2 DCB# UBIN,
             12508                          /* SYMREFed DCBNUM for this TRAN_FILE. */
             12509    1           2 USE_PROCEDURE@P UBIN,
             12510                          /* Offset (in procedure) of the USE procedure. */
             12511    1           2 * UBIN,
             12512    1           2 TYPE@P UBIN;
             12513                          /* Offset of the DAD describing the
             12514                             TYPE variable. */
             12539    1     DCL 1 QI$FRAME BASED ALIGNED,
             12540    1           2 WORD0 SBIN,
             12541    1           2 WORD0_FLAGS REDEF WORD0,
             12542    1             3 INDIRECT BIT(1) UNAL,
             12543    1             3 * UBIN(5) UNAL,
             12544    1             3 IS_LINE_ORIGIN_VARIABLE BIT(1) UNAL,
             12545    1             3 IS_COLUMN_ORIGIN_VARIABLE BIT(1) UNAL,
             12546    1             3 IS_FORM_VARIABLE BIT(1) UNAL,
             12547    1             3 IS_CONSTANT BIT(1) UNAL,
             12548    1             3 * UBIN(2) UNAL,
             12549    1             3 TYPE UBIN(4) UNAL,
             12550    1           2 LINE_ORIGIN UBIN,
             12551    1           2 COLUMN_ORIGIN UBIN,
             12552    1           2 SON@P UBIN,
             12553    1           2 BROTHER@P UBIN,
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:236  
             12554    1           2 FATHER@P UBIN,
             12555                          /* chauvanists. */
             12556    1           2 STATUS_AREA@D UBIN,
             12557    1           2 IDENTIFIER@P UBIN;
             12582    1     DCL 1 QI$PICTURE_STRING BASED ALIGNED,
             12583    1           2 TYPE UBIN(3) UNAL,
             12584    1           2 * UBIN(13) UNAL,
             12585    1           2 OTHER_STUFF_A(0:0) UBIN;
             12610    1     DCL 1 QI$NUMERIC_PICTURE_STRING BASED ALIGNED,
             12611    1           2 TYPE UBIN(3) UNAL,
             12612    1           2 MAX_DIGIT_COUNT UBIN(5) UNAL,
             12613    1           2 * UBIN(2) UNAL,
             12614    1           2 DECIMAL_SCALING UBIN(6) UNAL,
             12615    1           2 MOP_STRING_COUNT UBIN BYTE UNAL,
             12616    1           2 MOP_STRING_A(0:0) UBIN BYTE UNAL;
             12641    1     DCL 1 QI$ALPHANUMERIC_PICTURE_STRING BASED ALIGNED,
             12642    1           2 TYPE UBIN(3) UNAL,
             12643    1           2 EDIT_STRING_COUNT UBIN(13) UNAL,
             12644    1           2 EDIT_STRING_A(0:0),
             12645    1             3 FUNCTION UBIN(2) UNAL,
             12646    1             3 LENGTH UBIN(14) UNAL;
             12671        /*    Although the compiler never explicitly generates this,
             12672              it's implicitly the largest possible *thing* to say
             12673              ACCEPT *thing* FROM TERMINAL-ATTRIBUTES
             12674              about.  See the FPL manual under the ACCEPT verb.
             12675        */
             12676    1     DCL 1 QI$TERMINAL_ATTRIBUTES BASED CALIGNED,
             12677    1           2 STATION_NAME CHAR(8) CALIGNED,
             12678    1           2 CURRENT_DEVICE_PROFILE CHAR(12) CALIGNED,
             12679    1           2 NUMBER_OF_LINES CHAR(4) CALIGNED,
             12680    1           2 NUMBER_OF_COLUMNS CHAR(4) CALIGNED,
             12681    1           2 DEVICE_I_O_CAPABILITY CHAR(1) CALIGNED,
             12682    1           2 CONNECTION_TYPE CHAR(1) CALIGNED,
             12683    1           2 CP_6_NODE CHAR(4) CALIGNED,
             12684    1           2 CP_6_PORT CHAR(4) CALIGNED,
             12685    1           2 PROGRAM_EXECUTION CHAR(1) CALIGNED,
             12686    1           2 DEVICE_TYPE CHAR(1) CALIGNED,
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:237  
             12687    1           2 CP_6_CONTROLLER CHAR(4) CALIGNED,
             12688    1           2 CP_6_DEVICE CHAR(4) CALIGNED;
             12689    1     DCL 1 QI$TERMINAL_ATTRIBUTES_TEXT REDEF QI$TERMINAL_ATTRIBUTES CHAR(48);
             12714        /*    Although the compiler never explicitly generates this,
             12715              it's implicitly the largest possible *thing* to say
             12716              ACTIVATION STATUS IS *thing*
             12717              about.  See the FPL manual under the SELECT clause.
             12718        */
             12719    1     DCL 1 QI$ACTIVATION_STATUS BASED CALIGNED,
             12720    1           2 ACTIVATION_CHARACTER CHAR(1) CALIGNED,
             12721    1           2 ACTIVATION_POSITION CHAR(3) CALIGNED,
             12722    1           2 ACTIVATION_LINE CHAR(3) CALIGNED,
             12723    1           2 ACTIVATION_COLUMN CHAR(3) CALIGNED,
             12724    1           2 ACTIVATION_FIELD CHAR(30) CALIGNED;
             12725    1     DCL 1 QI$ACTIVATION_STATUS_TEXT REDEF QI$ACTIVATION_STATUS CHAR(40);
             12750        /*
             12751          This structure is used by PERFM and PERFMT routines to refer
             12752          to iteration data.
             12753        */
             12754    1     DCL 1 QI$PERFORM_BLOCK BASED ALIGNED,
             12755    1           2 FROM@P UBIN,
             12756    1           2 RETURN$ PTR,
             12757    1           2 ITERATION UBIN;
             12783    1     DCL 1 QI$INDICATORS BASED ALIGNED,
             12787    1           2 IS_ACTIVE BIT(1) UNAL,
             12788                                           /* Is (or is in) an ACTIVATEd frame */
             12789    1           2 ENABLED_FLAGS,
             12790    1             3 IS_OUTPUT BIT(1) UNAL,
             12791                                           /* ENABLEd for OUTPUT */
             12792    1             3 IS_INPUT BIT(1) UNAL,
             12793                                           /* ENABLEd for INPUT */
             12794    1           2 ENABLED_VALUE REDEF ENABLED_FLAGS UBIN(2) UNAL,
             12795    1           2 STATE_FLAGS,
             12796    1             3 IS_AVAILABLE BIT(1) UNAL,
             12797                                           /* Last operation was a READ or ACCEPT */
             12798    1             3 IS_PRESENTED BIT(1) UNAL,
             12799                                           /* Last operation was a PRESENT */
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:238  
             12800    1           2 STATE_VALUE REDEF STATE_FLAGS UBIN(2) UNAL,
             12801    1           2 OPEN_FLAGS,
             12802    1             3 IS_OUTPUT BIT(1) UNAL,
             12803                                           /* Is (or is in) an FD opened
             12804                                              for INPUT or I-O */
             12805    1             3 IS_INPUT BIT(1) UNAL,
             12806                                           /* Is (or is in) an FD opened
             12807                                              for OUTPUT or I-O */
             12808    1           2 OPEN_VALUE REDEF OPEN_FLAGS UBIN(2) UNAL,
             12809    1           2 * UBIN(5) UNAL,
             12811    1           2 TYPE UBIN(4) UNAL;
             12812                                           /* Type is form, frame, or field */
             12813    1     DCL 1 QI$INDICATORS_A(0:0) REDEF QI$INDICATORS UBIN ALIGNED;
             12843    1     DCL 1 QI$FIELD_STATUS BASED ALIGNED,
             12844    1           2 GZ,
             12845    1             3 FIELD_START_INDEX UBIN,
             12846                                           /* starting index into interface table */
             12847    1             3 FIELD_STOP_INDEX UBIN,
             12848                                           /* ending index into interface table */
             12869    1         2 INDICATORS ALIGNED,
             12871    1           3 IS_ACTIVE BIT(1) UNAL,
             12872                                           /* Is (or is in) an ACTIVATEd frame */
             12873    1           3 ENABLED_FLAGS,
             12874    1             4 IS_OUTPUT BIT(1) UNAL,
             12875                                           /* ENABLEd for OUTPUT */
             12876    1             4 IS_INPUT BIT(1) UNAL,
             12877                                           /* ENABLEd for INPUT */
             12878    1           3 ENABLED_VALUE REDEF ENABLED_FLAGS UBIN(2) UNAL,
             12879    1           3 STATE_FLAGS,
             12880    1             4 IS_AVAILABLE BIT(1) UNAL,
             12881                                           /* Last operation was a READ or ACCEPT */
             12882    1             4 IS_PRESENTED BIT(1) UNAL,
             12883                                           /* Last operation was a PRESENT */
             12884    1           3 STATE_VALUE REDEF STATE_FLAGS UBIN(2) UNAL,
             12885    1           3 OPEN_FLAGS,
             12886    1             4 IS_OUTPUT BIT(1) UNAL,
             12887                                           /* Is (or is in) an FD opened
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:239  
             12888                                              for INPUT or I-O */
             12889    1             4 IS_INPUT BIT(1) UNAL,
             12890                                           /* Is (or is in) an FD opened
             12891                                              for OUTPUT or I-O */
             12892    1           3 OPEN_VALUE REDEF OPEN_FLAGS UBIN(2) UNAL,
             12893    1           3 * UBIN(5) UNAL,
             12899    1           3 TYPE UBIN(4) UNAL,
             12900                                           /* Type is form, frame, or field */
             12901    1         2 INDICATORS_A(0:0) REDEF INDICATORS UBIN ALIGNED ;
             12936    1     DCL 1 QI$MAJOR_STATUS BASED ALIGNED,
             12937    1           2 GZ,
             12938    1             3 FIELD_START_INDEX UBIN,
             12939                                           /* starting index into interface table */
             12940    1             3 FIELD_STOP_INDEX UBIN,
             12941                                           /* ending index into interface table */
             12962    1         2 INDICATORS ALIGNED,
             12964    1           3 IS_ACTIVE BIT(1) UNAL,
             12965                                           /* Is (or is in) an ACTIVATEd frame */
             12966    1           3 ENABLED_FLAGS,
             12967    1             4 IS_OUTPUT BIT(1) UNAL,
             12968                                           /* ENABLEd for OUTPUT */
             12969    1             4 IS_INPUT BIT(1) UNAL,
             12970                                           /* ENABLEd for INPUT */
             12971    1           3 ENABLED_VALUE REDEF ENABLED_FLAGS UBIN(2) UNAL,
             12972    1           3 STATE_FLAGS,
             12973    1             4 IS_AVAILABLE BIT(1) UNAL,
             12974                                           /* Last operation was a READ or ACCEPT */
             12975    1             4 IS_PRESENTED BIT(1) UNAL,
             12976                                           /* Last operation was a PRESENT */
             12977    1           3 STATE_VALUE REDEF STATE_FLAGS UBIN(2) UNAL,
             12978    1           3 OPEN_FLAGS,
             12979    1             4 IS_OUTPUT BIT(1) UNAL,
             12980                                           /* Is (or is in) an FD opened
             12981                                              for INPUT or I-O */
             12982    1             4 IS_INPUT BIT(1) UNAL,
             12983                                           /* Is (or is in) an FD opened
             12984                                              for OUTPUT or I-O */
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:240  
             12985    1           3 OPEN_VALUE REDEF OPEN_FLAGS UBIN(2) UNAL,
             12986    1           3 * UBIN(5) UNAL,
             12992    1           3 TYPE UBIN(4) UNAL,
             12993                                           /* Type is form, frame, or field */
             12994    1         2 INDICATORS_A(0:0) REDEF INDICATORS UBIN ALIGNED ;
             13029    1     DCL 1 QI$MINOR_STATUS BASED ALIGNED,
             13030    1           2 GZ,
             13031    1             3 FIELD_START_INDEX UBIN,
             13032                                           /* starting index into interface table */
             13033    1             3 FIELD_STOP_INDEX UBIN,
             13034                                           /* ending index into interface table */
             13055    1         2 INDICATORS ALIGNED,
             13057    1           3 IS_ACTIVE BIT(1) UNAL,
             13058                                           /* Is (or is in) an ACTIVATEd frame */
             13059    1           3 ENABLED_FLAGS,
             13060    1             4 IS_OUTPUT BIT(1) UNAL,
             13061                                           /* ENABLEd for OUTPUT */
             13062    1             4 IS_INPUT BIT(1) UNAL,
             13063                                           /* ENABLEd for INPUT */
             13064    1           3 ENABLED_VALUE REDEF ENABLED_FLAGS UBIN(2) UNAL,
             13065    1           3 STATE_FLAGS,
             13066    1             4 IS_AVAILABLE BIT(1) UNAL,
             13067                                           /* Last operation was a READ or ACCEPT */
             13068    1             4 IS_PRESENTED BIT(1) UNAL,
             13069                                           /* Last operation was a PRESENT */
             13070    1           3 STATE_VALUE REDEF STATE_FLAGS UBIN(2) UNAL,
             13071    1           3 OPEN_FLAGS,
             13072    1             4 IS_OUTPUT BIT(1) UNAL,
             13073                                           /* Is (or is in) an FD opened
             13074                                              for INPUT or I-O */
             13075    1             4 IS_INPUT BIT(1) UNAL,
             13076                                           /* Is (or is in) an FD opened
             13077                                              for OUTPUT or I-O */
             13078    1           3 OPEN_VALUE REDEF OPEN_FLAGS UBIN(2) UNAL,
             13079    1           3 * UBIN(5) UNAL,
             13085    1           3 TYPE UBIN(4) UNAL,
             13086                                           /* Type is form, frame, or field */
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:241  
             13087    1         2 INDICATORS_A(0:0) REDEF INDICATORS UBIN ALIGNED ;
             13122    1     DCL 1 QI$FILE_STATUS BASED ALIGNED,
             13123    1           2 CURRENT,
             13124    1             3 * BIT(5) UNAL,
             13125    1             3 USAGE,
             13126    1               4 OPENED BIT(1) UNAL,
             13127                          /* Opened is:  0 for never opened
             13128                                         1 for opened at least once. */
             13129    1               4 CLOSED BIT(1) UNAL,
             13130                          /* Closed is:  0 for never closed
             13131                                         1 for closed at least once. */
             13132    1             3 * UBIN(9) UNAL,
             13133    1           2 BACK_LINK@P UBIN,
             13134                          /* Back_link to the file FD
             13135                             (in procedure). */
             13136    1           2 FLINK$ PTR,
             13137                          /* Pointer to next opened FD of this type. */
             13138    1           2 * UBIN,
             13139    1           2 * UBIN,
             13140    1           2 * UBIN,
             13141    1           2 * UBIN,
             13162    1         2 INDICATORS ALIGNED,
             13164    1           3 IS_ACTIVE BIT(1) UNAL,
             13165                                           /* Is (or is in) an ACTIVATEd frame */
             13166    1           3 ENABLED_FLAGS,
             13167    1             4 IS_OUTPUT BIT(1) UNAL,
             13168                                           /* ENABLEd for OUTPUT */
             13169    1             4 IS_INPUT BIT(1) UNAL,
             13170                                           /* ENABLEd for INPUT */
             13171    1           3 ENABLED_VALUE REDEF ENABLED_FLAGS UBIN(2) UNAL,
             13172    1           3 STATE_FLAGS,
             13173    1             4 IS_AVAILABLE BIT(1) UNAL,
             13174                                           /* Last operation was a READ or ACCEPT */
             13175    1             4 IS_PRESENTED BIT(1) UNAL,
             13176                                           /* Last operation was a PRESENT */
             13177    1           3 STATE_VALUE REDEF STATE_FLAGS UBIN(2) UNAL,
             13178    1           3 OPEN_FLAGS,
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:242  
             13179    1             4 IS_OUTPUT BIT(1) UNAL,
             13180                                           /* Is (or is in) an FD opened
             13181                                              for INPUT or I-O */
             13182    1             4 IS_INPUT BIT(1) UNAL,
             13183                                           /* Is (or is in) an FD opened
             13184                                              for OUTPUT or I-O */
             13185    1           3 OPEN_VALUE REDEF OPEN_FLAGS UBIN(2) UNAL,
             13186    1           3 * UBIN(5) UNAL,
             13192    1           3 TYPE UBIN(4) UNAL,
             13193                                           /* Type is form, frame, or field */
             13194    1         2 INDICATORS_A(0:0) REDEF INDICATORS UBIN ALIGNED ;
             13229    1     DCL 1 QI$FORM_STATUS BASED ALIGNED,
             13230    1           2 CURRENT,
             13231    1             3 * BIT(3) UNAL,
             13232    1             3 IS_USE_PROCEDURE_ACTIVE,
             13233    1               4 STANDARD BIT(1) UNAL,
             13234    1               4 VERIFY BIT(1) UNAL,
             13235    1             3 USAGE,
             13236    1               4 OPENED BIT(1) UNAL,
             13237                          /* Opened is:  0 for never opened
             13238                                         1 for opened at least once. */
             13239    1               4 CLOSED BIT(1) UNAL,
             13240                          /* Closed is:  0 for never closed
             13241                                         1 for closed at least once. */
             13242    1             3 IS_MESSAGE_LINE_NON_BLANK BIT(1) UNAL,
             13243                          /* Set if the screen is currently displaying
             13244                             a non-blank MESSAGE LINE. */
             13245    1             3 IS_UPDATED BIT(1) UNAL,
             13246                          /* Set if the screen has been updated with
             13247                             a DISPLAY, WRITE or CLEAR and must be
             13248                             M$DEVICEd before a STOP "literal" or
             13249                             a host read. */
             13250    1             3 * UBIN(7) UNAL,
             13251    1           2 BACK_LINK@P UBIN,
             13252                          /* Back_link to the form FD
             13253                             (in procedure). */
             13254    1           2 FLINK$ PTR,
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:243  
             13255                          /* Pointer to next opened screen FD. */
             13256    1           2 GZ,
             13257    1             3 NEXT_AVAILABLE_FLDID UBIN,
             13258                          /* Next VDH FLDID to use for activating frames
             13259                             within this form. */
             13260    1           2 * UBIN,
             13261    1           2 * UBIN,
             13262    1           2 * UBIN,
             13283    1         2 INDICATORS ALIGNED,
             13285    1           3 IS_ACTIVE BIT(1) UNAL,
             13286                                           /* Is (or is in) an ACTIVATEd frame */
             13287    1           3 ENABLED_FLAGS,
             13288    1             4 IS_OUTPUT BIT(1) UNAL,
             13289                                           /* ENABLEd for OUTPUT */
             13290    1             4 IS_INPUT BIT(1) UNAL,
             13291                                           /* ENABLEd for INPUT */
             13292    1           3 ENABLED_VALUE REDEF ENABLED_FLAGS UBIN(2) UNAL,
             13293    1           3 STATE_FLAGS,
             13294    1             4 IS_AVAILABLE BIT(1) UNAL,
             13295                                           /* Last operation was a READ or ACCEPT */
             13296    1             4 IS_PRESENTED BIT(1) UNAL,
             13297                                           /* Last operation was a PRESENT */
             13298    1           3 STATE_VALUE REDEF STATE_FLAGS UBIN(2) UNAL,
             13299    1           3 OPEN_FLAGS,
             13300    1             4 IS_OUTPUT BIT(1) UNAL,
             13301                                           /* Is (or is in) an FD opened
             13302                                              for INPUT or I-O */
             13303    1             4 IS_INPUT BIT(1) UNAL,
             13304                                           /* Is (or is in) an FD opened
             13305                                              for OUTPUT or I-O */
             13306    1           3 OPEN_VALUE REDEF OPEN_FLAGS UBIN(2) UNAL,
             13307    1           3 * UBIN(5) UNAL,
             13313    1           3 TYPE UBIN(4) UNAL,
             13314                                           /* Type is form, frame, or field */
             13315    1         2 INDICATORS_A(0:0) REDEF INDICATORS UBIN ALIGNED ;
             13350    1     DCL 1 QI$TRAN_STATUS BASED ALIGNED,
             13351    1           2 CURRENT,
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:244  
             13352    1             3 * BIT(3) UNAL,
             13353    1             3 IS_RRR_ID_VALID BIT(1) UNAL,
             13354                          /* If is_rrr_id_valid, rrr_id is real and we
             13355                             should M$REP_OTP_COMP. */
             13356    1             3 * BIT(1) UNAL,
             13357    1             3 USAGE,
             13358    1               4 OPENED BIT(1) UNAL,
             13359                          /* Opened is:  0 for never opened
             13360                                         1 for opened at least once. */
             13361    1               4 CLOSED BIT(1) UNAL,
             13362                          /* Closed is:  0 for never closed
             13363                                         1 for closed at least once. */
             13364    1             3 * UBIN(9) UNAL,
             13365    1           2 BACK_LINK@P UBIN,
             13366                          /* Back_link to the transaction FD
             13367                             (in procedure). */
             13368    1           2 FLINK$ PTR,
             13369                          /* Pointer to next opened transaction FD. */
             13370    1           2 LAST_ID UBIN(32),
             13371                          /* Last transaction id produced by a
             13372                             WRITE to this FD. */
             13373    1           2 RRR_ID UBIN(32),
             13374                          /* RRR id of the last record READ,
             13375                             if it was WRITtEn secure. */
             13396    1         2 INDICATORS ALIGNED,
             13398    1           3 IS_ACTIVE BIT(1) UNAL,
             13399                                           /* Is (or is in) an ACTIVATEd frame */
             13400    1           3 ENABLED_FLAGS,
             13401    1             4 IS_OUTPUT BIT(1) UNAL,
             13402                                           /* ENABLEd for OUTPUT */
             13403    1             4 IS_INPUT BIT(1) UNAL,
             13404                                           /* ENABLEd for INPUT */
             13405    1           3 ENABLED_VALUE REDEF ENABLED_FLAGS UBIN(2) UNAL,
             13406    1           3 STATE_FLAGS,
             13407    1             4 IS_AVAILABLE BIT(1) UNAL,
             13408                                           /* Last operation was a READ or ACCEPT */
             13409    1             4 IS_PRESENTED BIT(1) UNAL,
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:245  
             13410                                           /* Last operation was a PRESENT */
             13411    1           3 STATE_VALUE REDEF STATE_FLAGS UBIN(2) UNAL,
             13412    1           3 OPEN_FLAGS,
             13413    1             4 IS_OUTPUT BIT(1) UNAL,
             13414                                           /* Is (or is in) an FD opened
             13415                                              for INPUT or I-O */
             13416    1             4 IS_INPUT BIT(1) UNAL,
             13417                                           /* Is (or is in) an FD opened
             13418                                              for OUTPUT or I-O */
             13419    1           3 OPEN_VALUE REDEF OPEN_FLAGS UBIN(2) UNAL,
             13420    1           3 * UBIN(5) UNAL,
             13426    1           3 TYPE UBIN(4) UNAL,
             13427                                           /* Type is form, frame, or field */
             13428    1         2 INDICATORS_A(0:0) REDEF INDICATORS UBIN ALIGNED ;
             13463    1     DCL 1 QI$FRAME_STATUS BASED ALIGNED,
             13464    1           2 GZ,
             13465    1             3 FIELD_START_INDEX UBIN,
             13466                                           /* Starting index into interface table. */
             13467    1             3 FIELD_STOP_INDEX UBIN,
             13468                                           /* Ending index into interface table. */
             13469    1             3 FLDID_START UBIN,
             13470                                           /* First VDH FLDID for this frame. */
             13471    1             3 FLDID_STOP UBIN,
             13472                                           /* Last VDH FLDID for this frame. */
             13473    1             3 HEADER$ PTR,
             13474                                           /* Pointer to interface header area */
             13475    1             3 START$ PTR,
             13476                                           /* Pointer to start of interface array */
             13477    1             3 STOP$ PTR,
             13478                                           /* Pointer to end of interface array */
             13479    1           2 CURRENT,
             13480    1             3 * BIT(5) UNAL,
             13481    1             3 USAGE,
             13482    1               4 ACTIVATED BIT(1) UNAL,
             13483                          /* Activated is:  0 for never activated
             13484                                            1 for activated at least once.  */
             13485    1               4 DEACTIVATED BIT(1) UNAL,
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:246  
             13486                          /* Deactivated is:  0 for never deactivated
             13487                                              1 for deactivated at least once.  */
             13488    1             3 * UBIN(9) UNAL,
             13489    1           2 FORM_BACK_LINK@P UBIN,
             13490                                           /* Back_link to the form FD
             13491                                              (in procedure). */
             13512    1         2 INDICATORS ALIGNED,
             13514    1           3 IS_ACTIVE BIT(1) UNAL,
             13515                                           /* Is (or is in) an ACTIVATEd frame */
             13516    1           3 ENABLED_FLAGS,
             13517    1             4 IS_OUTPUT BIT(1) UNAL,
             13518                                           /* ENABLEd for OUTPUT */
             13519    1             4 IS_INPUT BIT(1) UNAL,
             13520                                           /* ENABLEd for INPUT */
             13521    1           3 ENABLED_VALUE REDEF ENABLED_FLAGS UBIN(2) UNAL,
             13522    1           3 STATE_FLAGS,
             13523    1             4 IS_AVAILABLE BIT(1) UNAL,
             13524                                           /* Last operation was a READ or ACCEPT */
             13525    1             4 IS_PRESENTED BIT(1) UNAL,
             13526                                           /* Last operation was a PRESENT */
             13527    1           3 STATE_VALUE REDEF STATE_FLAGS UBIN(2) UNAL,
             13528    1           3 OPEN_FLAGS,
             13529    1             4 IS_OUTPUT BIT(1) UNAL,
             13530                                           /* Is (or is in) an FD opened
             13531                                              for INPUT or I-O */
             13532    1             4 IS_INPUT BIT(1) UNAL,
             13533                                           /* Is (or is in) an FD opened
             13534                                              for OUTPUT or I-O */
             13535    1           3 OPEN_VALUE REDEF OPEN_FLAGS UBIN(2) UNAL,
             13536    1           3 * UBIN(5) UNAL,
             13542    1           3 TYPE UBIN(4) UNAL,
             13543                                           /* Type is form, frame, or field */
             13544    1         2 INDICATORS_A(0:0) REDEF INDICATORS UBIN ALIGNED ;
             13570            %ENDIF;
       81    13573
       82    13574        /*
       83    13575           BASED general-purpose stuff.
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:247  
       84    13576        */
       85    13577          %QI$GENERAL;
             13578            %BEGIN_MACRO ( STCLASS = STCLASS );
             13579            %SET LISTDIR = '0'B;
             13607        /*
             13608            some useful stuff...
             13609        */
             13610    1     DCL QI$PROC_A@P(0:0) UBIN BASED;
             13611    1     DCL QI$DATA_A@D(0:0) UBIN BASED;
             13612    1     DCL QI$AREA_A@(0:0) UBIN BASED;
             13613    1     DCL 1 QI$BITS ALIGNED BASED,
             13614    1           2 BIT_A(0:0) BIT(1) UNAL;
             13615    1     DCL QI$CHAR_A(0:0) CHAR(1) CALIGNED BASED;
             13616    1     DCL QI$UBYTE_A(0:0) UBIN BYTE CALIGNED BASED;
             13617    1     DCL QI$SBYTE_A(0:0) SBIN BYTE CALIGNED BASED;
             13618    1     DCL QI$UWORD_A(0:0) UBIN BASED;
             13619    1     DCL QI$SWORD_A(0:0) SBIN BASED;
             13620    1     DCL QI$DWORD_A(0:0) BIT(32) ALIGNED BASED;
             13621    1     DCL QI$PTR_A$(0:0) PTR BASED;
             13622    1     DCL 1 QI$MESSAGE_TYPE CALIGNED BASED,
             13623    1           2 TEXT CHAR(8) UNAL;
             13624    1     DCL QI$MESSAGE_TYPE_A(0:7) REDEF QI$MESSAGE_TYPE UBIN BYTE CALIGNED;
             13625    1     DCL 1 QI$ERROR_STATUS CALIGNED BASED,
             13626    1           2 TEXT CHAR(8) UNAL;
             13627    1     DCL QI$ERROR_STATUS_A(0:7) REDEF QI$ERROR_STATUS UBIN BYTE CALIGNED;
             13628    1     DCL 1 QI$ERROR_MESSAGE_LINE CALIGNED BASED,
             13629    1           2 TEXT CHAR(72) UNAL;
             13630    1     DCL QI$ERROR_MESSAGE_LINE_A(0:71) REDEF QI$ERROR_MESSAGE_LINE UBIN BYTE CALIGNED;
             13631    1     DCL 1 QI$IDENTIFIER CALIGNED BASED,
             13632    1           2 TEXT CHAR(30) UNAL;
             13633    1     DCL QI$IDENTIFIER_A(0:29) REDEF QI$IDENTIFIER UBIN BYTE CALIGNED;
             13634    1     DCL 1 QI$VARIABLE_IDENTIFIER CALIGNED BASED,
             13635    1           2 LENGTH UBIN BYTE UNAL,
             13636    1           2 TEXT CHAR(QI$VARIABLE_IDENTIFIER.LENGTH) UNAL;
             13637        /*
             13638            note that the following require the QI_CONTEXT macro to be
             13639            invoked along with the QI$GENERAL one.
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:248  
             13640        */
             13641    1     DCL 1 QI$VARIABLE_STRING_SOURCE CALIGNED BASED,
             13642    1           2 TEXT CHAR(QI_1.OP.LEN.S) UNAL;
             13643    1     DCL 1 QI$VARIABLE_STRING_TARGET CALIGNED BASED,
             13644    1           2 TEXT CHAR(QI_1.OP.LEN.T) UNAL;
             13645    1     DCL 1 QI$VARIABLE_STRING_AUX CALIGNED BASED,
             13646    1           2 TEXT CHAR(QI_1.OP.LEN.AUX) UNAL;
             13662            %ENDIF;
       86    13665
       87    13666        /*
       88    13667           CONSTANT QI@CIP_OPERATION and QI_CIP_DESCRIPTOR stuff.
       89    13668        */
       90    13669          %QI_GENERAL_CIPS ( STCLASS = "CONSTANT SYMDEF" );
             13670            %BEGIN_MACRO ( STCLASS = STCLASS );
             13671            %SET LISTDIR = '0'B;
             13684            /* QI@CIP_OPERATION stuff.... */
             13721    1     DCL 1 QI_ALR CONSTANT SYMDEF DALIGNED,
             13725    1           2 CIP,
             13795    1               3 S DALIGNED,           /* CIP descriptor */
             13798    1                 4 CA,                  /* Control bits for ALPHANUMERIC */
             13799    1                   5 OFFSET UBIN(1) UNAL INIT(0)/**/,
             13800    1                   5 FILL UBIN(1) UNAL INIT(1)/**/,
             13801    1                   5 MBZ UBIN(1) UNAL INIT(0)/**/,
             13802    1                 4 CB REDEF CA,         /* Control bits for BINARY */
             13803    1                   5 OFFSET UBIN(1) UNAL,
             13804    1                   5 MBZ UBIN(2) UNAL,  /* not used:  MBZ */
             13805    1                 4 CD REDEF CA,         /* Control bits for DISPLAY */
             13806    1                   5 OFFSET UBIN(1) UNAL,
             13807    1                   5 SIGN UBIN(2) UNAL,
             13808    1                 4 CP REDEF CA,         /* Control bits for PACKED */
             13809    1                   5 OFFSET UBIN(2) UNAL,
             13810    1                   5 SIGN UBIN(1) UNAL,
             13854    1                 4 LEN UBIN(5) UNAL INIT(0)/**/,
             13858    1                 4 T UBIN(1) UNAL INIT(0)/**/,
             13860    1                 4 AS UBIN(7) UNAL INIT(BITBIN('B'X))/**/,
             13865    1                 4 DISP UBIN INIT(6)/**/,
             13866    1               3 S_A (0:1) REDEF S UBIN ,
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:249  
             13943    1               3 T DALIGNED,           /* CIP descriptor */
             13946    1                 4 CA,                  /* Control bits for ALPHANUMERIC */
             13947    1                   5 OFFSET UBIN(1) UNAL INIT(0)/**/,
             13948    1                   5 FILL UBIN(1) UNAL INIT(1)/**/,
             13949    1                   5 MBZ UBIN(1) UNAL INIT(0)/**/,
             13950    1                 4 CB REDEF CA,         /* Control bits for BINARY */
             13951    1                   5 OFFSET UBIN(1) UNAL,
             13952    1                   5 MBZ UBIN(2) UNAL,  /* not used:  MBZ */
             13953    1                 4 CD REDEF CA,         /* Control bits for DISPLAY */
             13954    1                   5 OFFSET UBIN(1) UNAL,
             13955    1                   5 SIGN UBIN(2) UNAL,
             13956    1                 4 CP REDEF CA,         /* Control bits for PACKED */
             13957    1                   5 OFFSET UBIN(2) UNAL,
             13958    1                   5 SIGN UBIN(1) UNAL,
             14002    1                 4 LEN UBIN(5) UNAL INIT(0)/**/,
             14006    1                 4 T UBIN(1) UNAL INIT(0)/**/,
             14008    1                 4 AS UBIN(7) UNAL INIT(BITBIN('B'X))/**/,
             14013    1                 4 DISP UBIN INIT(8)/**/,
             14014    1               3 T_A (0:1) REDEF T UBIN ,
             14091    1               3 AUX DALIGNED,           /* CIP descriptor */
             14094    1                 4 CA,                  /* Control bits for ALPHANUMERIC */
             14095    1                   5 OFFSET UBIN(1) UNAL INIT(0)/**/,
             14096    1                   5 FILL UBIN(1) UNAL INIT(1)/**/,
             14097    1                   5 MBZ UBIN(1) UNAL INIT(0)/**/,
             14098    1                 4 CB REDEF CA,         /* Control bits for BINARY */
             14099    1                   5 OFFSET UBIN(1) UNAL,
             14100    1                   5 MBZ UBIN(2) UNAL,  /* not used:  MBZ */
             14101    1                 4 CD REDEF CA,         /* Control bits for DISPLAY */
             14102    1                   5 OFFSET UBIN(1) UNAL,
             14103    1                   5 SIGN UBIN(2) UNAL,
             14104    1                 4 CP REDEF CA,         /* Control bits for PACKED */
             14105    1                   5 OFFSET UBIN(2) UNAL,
             14106    1                   5 SIGN UBIN(1) UNAL,
             14150    1                 4 LEN UBIN(5) UNAL INIT(0)/**/,
             14154    1                 4 T UBIN(1) UNAL INIT(0)/**/,
             14156    1                 4 AS UBIN(7) UNAL INIT(BITBIN('B'X))/**/,
             14161    1                 4 DISP UBIN INIT(10)/**/,
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:250  
             14162    1               3 AUX_A (0:1) REDEF AUX UBIN ,
             14176    1           2 CIP_A (0:2) REDEF CIP UBIN(32),
             14183    1           2 DATA DALIGNED,
             14184    1             3 S$ PTR INIT(ADDR(NIL))/**/,
             14185    1             3 T$ PTR INIT(ADDR(NIL))/**/,
             14186    1             3 AUX$ PTR INIT(ADDR(NIL))/**/,
             14187    1           2 DATA_A$ (0:2) REDEF DATA PTR,
             14223    1           2 LEN,
             14224    1             3 S UBIN INIT(1)/**/,
             14225    1             3 T UBIN INIT(0)/**/,
             14226    1             3 AUX UBIN INIT(0)/**/,
             14227    1           2 LEN_A (0:2) REDEF LEN UBIN,
             14228    1           2 SRCH_VRFY_ARGS REDEF LEN,
             14229    1             3 LEN UBIN,
             14230    1             3 LIST_LEN UBIN,
             14231    1             3 * UBIN,
             14232    1           2 SRCH_VRFY_ARGS_A (0:2) REDEF LEN UBIN,
             14233    1           2 SHIFT_COUNT REDEF LEN,
             14234    1             3 S UBIN,
             14235    1             3 T UBIN,
             14236    1             3 AUX UBIN,
             14237    1           2 SHIFT_COUNT_A (0:2) REDEF LEN UBIN,
             14240    1           2 INX,
             14241    1             3 S UBIN INIT(0)/**/,
             14242    1             3 T UBIN INIT(0)/**/,
             14243    1             3 AUX UBIN INIT(0)/**/,
             14244    1           2 INX_A (0:2) REDEF INX UBIN,
             14245    1           2 DEC REDEF INX,
             14246    1             3 S SBIN,
             14247    1             3 T SBIN,
             14248    1             3 AUX SBIN,
             14249    1           2 DEC_A (0:2) REDEF INX SBIN,
             14262    1           2 SRCH_VRFY_ELEMS,
             14263    1             3 LEN UBIN INIT(0)/**/,
             14264    1             3 LIST_LEN UBIN INIT(0)/**/,
             14265    1           2 SRCH_VRFY_ELEMS_A (0:1) REDEF SRCH_VRFY_ELEMS UBIN,
             14293    1           2 PICTURE_STRING,
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:251  
             14294    1             3 INTERMEDIATE_RESULT_LEN UBIN INIT(0)/**/,
             14295    1             3 DEC UBIN INIT(0)/**/,
             14296    1           2 PICTURE_STRING_A (0:1) REDEF PICTURE_STRING UBIN,
             14297    1           2 SRCH_RESULT REDEF PICTURE_STRING,
             14298    1             3 ARG_NUMBER UBIN,
             14299    1             3 DISP UBIN,
             14300    1           2 SRCH_RESULT_A (0:1) REDEF PICTURE_STRING UBIN,
             14301    1           2 VRFY_RESULT REDEF PICTURE_STRING,
             14302    1             3 DISP UBIN,
             14303    1             3 * UBIN,
             14304    1           2 VRFY_RESULT_A (0:1) REDEF PICTURE_STRING UBIN,
             14307    1           2 FILL_CHAR,
             14308    1             3 TEXT UBIN BYTE UNAL INIT(32)/**/,
             14309    1             3 * UBIN BYTE UNAL INIT(0)/**/,
             14310    1           2 SIZE_ERROR REDEF FILL_CHAR UBIN,
             14326    1           2 ROUND UBIN INIT(0)/**/,
             14327    1           2 COMP_RESULT REDEF ROUND UBIN,
             14328    1           2 TARGET_SIZE REDEF ROUND UBIN ;
             14386    1     DCL 1 QI_TYPE_DISPLAY_SOURCE CONSTANT SYMDEF DALIGNED,
             14390    1           2 CIP,
             14460    1               3 S DALIGNED,           /* CIP descriptor */
             14505    1                 4 CD,                  /* Control bits for DISPLAY */
             14506    1                   5 OFFSET UBIN(1) UNAL INIT(0)/**/,
             14507    1                   5 SIGN UBIN(2) UNAL INIT(0)/**/,
             14508    1                 4 CA REDEF CD,         /* Control bits for ALPHANUMERIC */
             14509    1                   5 OFFSET UBIN(1) UNAL,
             14510    1                   5 FILL UBIN(1) UNAL,
             14511    1                   5 MBZ UBIN(1) UNAL,  /* not used:  MBZ */
             14512    1                 4 CB REDEF CD,         /* Control bits for BINARY */
             14513    1                   5 OFFSET UBIN(1) UNAL,
             14514    1                   5 MBZ UBIN(2) UNAL,  /* not used:  MBZ */
             14515    1                 4 CP REDEF CD,         /* Control bits for PACKED */
             14516    1                   5 OFFSET UBIN(2) UNAL,
             14517    1                   5 SIGN UBIN(1) UNAL,
             14519    1                 4 LEN UBIN(5) UNAL INIT(15 /* %QI#MAX_DISPLAY */)/**/,
             14523    1                 4 T UBIN(1) UNAL INIT(0)/**/,
             14525    1                 4 AS UBIN(7) UNAL INIT(BITBIN('B'X))/**/,
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:252  
             14530    1                 4 DISP UBIN INIT(6)/**/,
             14531    1               3 S_A (0:1) REDEF S UBIN ,
             14608    1               3 T DALIGNED,           /* CIP descriptor */
             14611    1                 4 CA,                  /* Control bits for ALPHANUMERIC */
             14612    1                   5 OFFSET UBIN(1) UNAL INIT(0)/**/,
             14613    1                   5 FILL UBIN(1) UNAL INIT(1)/**/,
             14614    1                   5 MBZ UBIN(1) UNAL INIT(0)/**/,
             14615    1                 4 CB REDEF CA,         /* Control bits for BINARY */
             14616    1                   5 OFFSET UBIN(1) UNAL,
             14617    1                   5 MBZ UBIN(2) UNAL,  /* not used:  MBZ */
             14618    1                 4 CD REDEF CA,         /* Control bits for DISPLAY */
             14619    1                   5 OFFSET UBIN(1) UNAL,
             14620    1                   5 SIGN UBIN(2) UNAL,
             14621    1                 4 CP REDEF CA,         /* Control bits for PACKED */
             14622    1                   5 OFFSET UBIN(2) UNAL,
             14623    1                   5 SIGN UBIN(1) UNAL,
             14667    1                 4 LEN UBIN(5) UNAL INIT(0)/**/,
             14671    1                 4 T UBIN(1) UNAL INIT(0)/**/,
             14673    1                 4 AS UBIN(7) UNAL INIT(BITBIN('B'X))/**/,
             14678    1                 4 DISP UBIN INIT(8)/**/,
             14679    1               3 T_A (0:1) REDEF T UBIN ,
             14756    1               3 AUX DALIGNED,           /* CIP descriptor */
             14759    1                 4 CA,                  /* Control bits for ALPHANUMERIC */
             14760    1                   5 OFFSET UBIN(1) UNAL INIT(0)/**/,
             14761    1                   5 FILL UBIN(1) UNAL INIT(1)/**/,
             14762    1                   5 MBZ UBIN(1) UNAL INIT(0)/**/,
             14763    1                 4 CB REDEF CA,         /* Control bits for BINARY */
             14764    1                   5 OFFSET UBIN(1) UNAL,
             14765    1                   5 MBZ UBIN(2) UNAL,  /* not used:  MBZ */
             14766    1                 4 CD REDEF CA,         /* Control bits for DISPLAY */
             14767    1                   5 OFFSET UBIN(1) UNAL,
             14768    1                   5 SIGN UBIN(2) UNAL,
             14769    1                 4 CP REDEF CA,         /* Control bits for PACKED */
             14770    1                   5 OFFSET UBIN(2) UNAL,
             14771    1                   5 SIGN UBIN(1) UNAL,
             14815    1                 4 LEN UBIN(5) UNAL INIT(0)/**/,
             14819    1                 4 T UBIN(1) UNAL INIT(0)/**/,
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:253  
             14821    1                 4 AS UBIN(7) UNAL INIT(BITBIN('B'X))/**/,
             14826    1                 4 DISP UBIN INIT(10)/**/,
             14827    1               3 AUX_A (0:1) REDEF AUX UBIN ,
             14841    1           2 CIP_A (0:2) REDEF CIP UBIN(32),
             14848    1           2 DATA DALIGNED,
             14849    1             3 S$ PTR INIT(ADDR(NIL))/**/,
             14850    1             3 T$ PTR INIT(ADDR(NIL))/**/,
             14851    1             3 AUX$ PTR INIT(ADDR(NIL))/**/,
             14852    1           2 DATA_A$ (0:2) REDEF DATA PTR,
             14888    1           2 LEN,
             14889    1             3 S UBIN INIT(0)/**/,
             14890    1             3 T UBIN INIT(0)/**/,
             14891    1             3 AUX UBIN INIT(0)/**/,
             14892    1           2 LEN_A (0:2) REDEF LEN UBIN,
             14893    1           2 SRCH_VRFY_ARGS REDEF LEN,
             14894    1             3 LEN UBIN,
             14895    1             3 LIST_LEN UBIN,
             14896    1             3 * UBIN,
             14897    1           2 SRCH_VRFY_ARGS_A (0:2) REDEF LEN UBIN,
             14898    1           2 SHIFT_COUNT REDEF LEN,
             14899    1             3 S UBIN,
             14900    1             3 T UBIN,
             14901    1             3 AUX UBIN,
             14902    1           2 SHIFT_COUNT_A (0:2) REDEF LEN UBIN,
             14916    1           2 DEC,
             14917    1             3 S SBIN INIT(0)/**/,
             14918    1             3 T SBIN INIT(0)/**/,
             14919    1             3 AUX SBIN INIT(0)/**/,
             14920    1           2 DEC_A (0:2) REDEF DEC SBIN,
             14921    1           2 INX REDEF DEC,
             14922    1             3 S UBIN,
             14923    1             3 T UBIN,
             14924    1             3 AUX UBIN,
             14925    1           2 INX_A (0:2) REDEF DEC UBIN,
             14927    1           2 SRCH_VRFY_ELEMS,
             14928    1             3 LEN UBIN INIT(0)/**/,
             14929    1             3 LIST_LEN UBIN INIT(0)/**/,
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:254  
             14930    1           2 SRCH_VRFY_ELEMS_A (0:1) REDEF SRCH_VRFY_ELEMS UBIN,
             14958    1           2 PICTURE_STRING,
             14959    1             3 INTERMEDIATE_RESULT_LEN UBIN INIT(0)/**/,
             14960    1             3 DEC UBIN INIT(0)/**/,
             14961    1           2 PICTURE_STRING_A (0:1) REDEF PICTURE_STRING UBIN,
             14962    1           2 SRCH_RESULT REDEF PICTURE_STRING,
             14963    1             3 ARG_NUMBER UBIN,
             14964    1             3 DISP UBIN,
             14965    1           2 SRCH_RESULT_A (0:1) REDEF PICTURE_STRING UBIN,
             14966    1           2 VRFY_RESULT REDEF PICTURE_STRING,
             14967    1             3 DISP UBIN,
             14968    1             3 * UBIN,
             14969    1           2 VRFY_RESULT_A (0:1) REDEF PICTURE_STRING UBIN,
             14977    1           2 SIZE_ERROR UBIN INIT(0)/**/,
             14978    1           2 FILL_CHAR REDEF SIZE_ERROR,
             14979    1             3 TEXT UBIN BYTE UNAL,
             14980    1             3 * UBIN BYTE UNAL,
             14991    1           2 ROUND UBIN INIT(0)/**/,
             14992    1           2 COMP_RESULT REDEF ROUND UBIN,
             14993    1           2 TARGET_SIZE REDEF ROUND UBIN ;
             15052    1     DCL 1 QI_TYPE_DISPLAY_TARGET CONSTANT SYMDEF DALIGNED,
             15056    1           2 CIP,
             15126    1               3 S DALIGNED,           /* CIP descriptor */
             15129    1                 4 CA,                  /* Control bits for ALPHANUMERIC */
             15130    1                   5 OFFSET UBIN(1) UNAL INIT(0)/**/,
             15131    1                   5 FILL UBIN(1) UNAL INIT(1)/**/,
             15132    1                   5 MBZ UBIN(1) UNAL INIT(0)/**/,
             15133    1                 4 CB REDEF CA,         /* Control bits for BINARY */
             15134    1                   5 OFFSET UBIN(1) UNAL,
             15135    1                   5 MBZ UBIN(2) UNAL,  /* not used:  MBZ */
             15136    1                 4 CD REDEF CA,         /* Control bits for DISPLAY */
             15137    1                   5 OFFSET UBIN(1) UNAL,
             15138    1                   5 SIGN UBIN(2) UNAL,
             15139    1                 4 CP REDEF CA,         /* Control bits for PACKED */
             15140    1                   5 OFFSET UBIN(2) UNAL,
             15141    1                   5 SIGN UBIN(1) UNAL,
             15185    1                 4 LEN UBIN(5) UNAL INIT(0)/**/,
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:255  
             15189    1                 4 T UBIN(1) UNAL INIT(0)/**/,
             15191    1                 4 AS UBIN(7) UNAL INIT(BITBIN('B'X))/**/,
             15196    1                 4 DISP UBIN INIT(6)/**/,
             15197    1               3 S_A (0:1) REDEF S UBIN ,
             15274    1               3 T DALIGNED,           /* CIP descriptor */
             15319    1                 4 CD,                  /* Control bits for DISPLAY */
             15320    1                   5 OFFSET UBIN(1) UNAL INIT(0)/**/,
             15321    1                   5 SIGN UBIN(2) UNAL INIT(0)/**/,
             15322    1                 4 CA REDEF CD,         /* Control bits for ALPHANUMERIC */
             15323    1                   5 OFFSET UBIN(1) UNAL,
             15324    1                   5 FILL UBIN(1) UNAL,
             15325    1                   5 MBZ UBIN(1) UNAL,  /* not used:  MBZ */
             15326    1                 4 CB REDEF CD,         /* Control bits for BINARY */
             15327    1                   5 OFFSET UBIN(1) UNAL,
             15328    1                   5 MBZ UBIN(2) UNAL,  /* not used:  MBZ */
             15329    1                 4 CP REDEF CD,         /* Control bits for PACKED */
             15330    1                   5 OFFSET UBIN(2) UNAL,
             15331    1                   5 SIGN UBIN(1) UNAL,
             15333    1                 4 LEN UBIN(5) UNAL INIT(15 /* %QI#MAX_DISPLAY */)/**/,
             15337    1                 4 T UBIN(1) UNAL INIT(0)/**/,
             15339    1                 4 AS UBIN(7) UNAL INIT(BITBIN('B'X))/**/,
             15344    1                 4 DISP UBIN INIT(8)/**/,
             15345    1               3 T_A (0:1) REDEF T UBIN ,
             15422    1               3 AUX DALIGNED,           /* CIP descriptor */
             15425    1                 4 CA,                  /* Control bits for ALPHANUMERIC */
             15426    1                   5 OFFSET UBIN(1) UNAL INIT(0)/**/,
             15427    1                   5 FILL UBIN(1) UNAL INIT(1)/**/,
             15428    1                   5 MBZ UBIN(1) UNAL INIT(0)/**/,
             15429    1                 4 CB REDEF CA,         /* Control bits for BINARY */
             15430    1                   5 OFFSET UBIN(1) UNAL,
             15431    1                   5 MBZ UBIN(2) UNAL,  /* not used:  MBZ */
             15432    1                 4 CD REDEF CA,         /* Control bits for DISPLAY */
             15433    1                   5 OFFSET UBIN(1) UNAL,
             15434    1                   5 SIGN UBIN(2) UNAL,
             15435    1                 4 CP REDEF CA,         /* Control bits for PACKED */
             15436    1                   5 OFFSET UBIN(2) UNAL,
             15437    1                   5 SIGN UBIN(1) UNAL,
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:256  
             15481    1                 4 LEN UBIN(5) UNAL INIT(0)/**/,
             15485    1                 4 T UBIN(1) UNAL INIT(0)/**/,
             15487    1                 4 AS UBIN(7) UNAL INIT(BITBIN('B'X))/**/,
             15492    1                 4 DISP UBIN INIT(10)/**/,
             15493    1               3 AUX_A (0:1) REDEF AUX UBIN ,
             15507    1           2 CIP_A (0:2) REDEF CIP UBIN(32),
             15514    1           2 DATA DALIGNED,
             15515    1             3 S$ PTR INIT(ADDR(NIL))/**/,
             15516    1             3 T$ PTR INIT(ADDR(NIL))/**/,
             15517    1             3 AUX$ PTR INIT(ADDR(NIL))/**/,
             15518    1           2 DATA_A$ (0:2) REDEF DATA PTR,
             15554    1           2 LEN,
             15555    1             3 S UBIN INIT(0)/**/,
             15556    1             3 T UBIN INIT(0)/**/,
             15557    1             3 AUX UBIN INIT(0)/**/,
             15558    1           2 LEN_A (0:2) REDEF LEN UBIN,
             15559    1           2 SRCH_VRFY_ARGS REDEF LEN,
             15560    1             3 LEN UBIN,
             15561    1             3 LIST_LEN UBIN,
             15562    1             3 * UBIN,
             15563    1           2 SRCH_VRFY_ARGS_A (0:2) REDEF LEN UBIN,
             15564    1           2 SHIFT_COUNT REDEF LEN,
             15565    1             3 S UBIN,
             15566    1             3 T UBIN,
             15567    1             3 AUX UBIN,
             15568    1           2 SHIFT_COUNT_A (0:2) REDEF LEN UBIN,
             15582    1           2 DEC,
             15583    1             3 S SBIN INIT(0)/**/,
             15584    1             3 T SBIN INIT(0)/**/,
             15585    1             3 AUX SBIN INIT(0)/**/,
             15586    1           2 DEC_A (0:2) REDEF DEC SBIN,
             15587    1           2 INX REDEF DEC,
             15588    1             3 S UBIN,
             15589    1             3 T UBIN,
             15590    1             3 AUX UBIN,
             15591    1           2 INX_A (0:2) REDEF DEC UBIN,
             15593    1           2 SRCH_VRFY_ELEMS,
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:257  
             15594    1             3 LEN UBIN INIT(0)/**/,
             15595    1             3 LIST_LEN UBIN INIT(0)/**/,
             15596    1           2 SRCH_VRFY_ELEMS_A (0:1) REDEF SRCH_VRFY_ELEMS UBIN,
             15624    1           2 PICTURE_STRING,
             15625    1             3 INTERMEDIATE_RESULT_LEN UBIN INIT(0)/**/,
             15626    1             3 DEC UBIN INIT(0)/**/,
             15627    1           2 PICTURE_STRING_A (0:1) REDEF PICTURE_STRING UBIN,
             15628    1           2 SRCH_RESULT REDEF PICTURE_STRING,
             15629    1             3 ARG_NUMBER UBIN,
             15630    1             3 DISP UBIN,
             15631    1           2 SRCH_RESULT_A (0:1) REDEF PICTURE_STRING UBIN,
             15632    1           2 VRFY_RESULT REDEF PICTURE_STRING,
             15633    1             3 DISP UBIN,
             15634    1             3 * UBIN,
             15635    1           2 VRFY_RESULT_A (0:1) REDEF PICTURE_STRING UBIN,
             15643    1           2 SIZE_ERROR UBIN INIT(0)/**/,
             15644    1           2 FILL_CHAR REDEF SIZE_ERROR,
             15645    1             3 TEXT UBIN BYTE UNAL,
             15646    1             3 * UBIN BYTE UNAL,
             15657    1           2 ROUND UBIN INIT(0)/**/,
             15658    1           2 COMP_RESULT REDEF ROUND UBIN,
             15659    1           2 TARGET_SIZE REDEF ROUND UBIN ;
             15718    1     DCL 1 QI_TYPE_BINARY_TARGET CONSTANT SYMDEF DALIGNED,
             15722    1           2 CIP,
             15792    1               3 S DALIGNED,           /* CIP descriptor */
             15795    1                 4 CA,                  /* Control bits for ALPHANUMERIC */
             15796    1                   5 OFFSET UBIN(1) UNAL INIT(0)/**/,
             15797    1                   5 FILL UBIN(1) UNAL INIT(1)/**/,
             15798    1                   5 MBZ UBIN(1) UNAL INIT(0)/**/,
             15799    1                 4 CB REDEF CA,         /* Control bits for BINARY */
             15800    1                   5 OFFSET UBIN(1) UNAL,
             15801    1                   5 MBZ UBIN(2) UNAL,  /* not used:  MBZ */
             15802    1                 4 CD REDEF CA,         /* Control bits for DISPLAY */
             15803    1                   5 OFFSET UBIN(1) UNAL,
             15804    1                   5 SIGN UBIN(2) UNAL,
             15805    1                 4 CP REDEF CA,         /* Control bits for PACKED */
             15806    1                   5 OFFSET UBIN(2) UNAL,
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:258  
             15807    1                   5 SIGN UBIN(1) UNAL,
             15851    1                 4 LEN UBIN(5) UNAL INIT(0)/**/,
             15855    1                 4 T UBIN(1) UNAL INIT(0)/**/,
             15857    1                 4 AS UBIN(7) UNAL INIT(BITBIN('B'X))/**/,
             15862    1                 4 DISP UBIN INIT(6)/**/,
             15863    1               3 S_A (0:1) REDEF S UBIN ,
             15940    1               3 T DALIGNED,           /* CIP descriptor */
             15957    1                 4 CB,                  /* Control bits for BINARY */
             15958    1                   5 OFFSET UBIN(1) UNAL INIT(0)/**/,
             15959    1                   5 MBZ UBIN(2) UNAL INIT(0)/**/,
             15960    1                 4 CA REDEF CB,         /* Control bits for ALPHANUMERIC */
             15961    1                   5 OFFSET UBIN(1) UNAL,
             15962    1                   5 FILL UBIN(1) UNAL,
             15963    1                   5 MBZ UBIN(1) UNAL,  /* not used:  MBZ */
             15964    1                 4 CD REDEF CB,         /* Control bits for DISPLAY */
             15965    1                   5 OFFSET UBIN(1) UNAL,
             15966    1                   5 SIGN UBIN(2) UNAL,
             15967    1                 4 CP REDEF CB,         /* Control bits for PACKED */
             15968    1                   5 OFFSET UBIN(2) UNAL,
             15969    1                   5 SIGN UBIN(1) UNAL,
             15999    1                 4 LEN UBIN(5) UNAL INIT(2 /* %QI#MIN_BINARY_LENGTH */)/**/,
             16003    1                 4 T UBIN(1) UNAL INIT(0)/**/,
             16005    1                 4 AS UBIN(7) UNAL INIT(BITBIN('B'X))/**/,
             16010    1                 4 DISP UBIN INIT(8)/**/,
             16011    1               3 T_A (0:1) REDEF T UBIN ,
             16088    1               3 AUX DALIGNED,           /* CIP descriptor */
             16091    1                 4 CA,                  /* Control bits for ALPHANUMERIC */
             16092    1                   5 OFFSET UBIN(1) UNAL INIT(0)/**/,
             16093    1                   5 FILL UBIN(1) UNAL INIT(1)/**/,
             16094    1                   5 MBZ UBIN(1) UNAL INIT(0)/**/,
             16095    1                 4 CB REDEF CA,         /* Control bits for BINARY */
             16096    1                   5 OFFSET UBIN(1) UNAL,
             16097    1                   5 MBZ UBIN(2) UNAL,  /* not used:  MBZ */
             16098    1                 4 CD REDEF CA,         /* Control bits for DISPLAY */
             16099    1                   5 OFFSET UBIN(1) UNAL,
             16100    1                   5 SIGN UBIN(2) UNAL,
             16101    1                 4 CP REDEF CA,         /* Control bits for PACKED */
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:259  
             16102    1                   5 OFFSET UBIN(2) UNAL,
             16103    1                   5 SIGN UBIN(1) UNAL,
             16147    1                 4 LEN UBIN(5) UNAL INIT(0)/**/,
             16151    1                 4 T UBIN(1) UNAL INIT(0)/**/,
             16153    1                 4 AS UBIN(7) UNAL INIT(BITBIN('B'X))/**/,
             16158    1                 4 DISP UBIN INIT(10)/**/,
             16159    1               3 AUX_A (0:1) REDEF AUX UBIN ,
             16173    1           2 CIP_A (0:2) REDEF CIP UBIN(32),
             16180    1           2 DATA DALIGNED,
             16181    1             3 S$ PTR INIT(ADDR(NIL))/**/,
             16182    1             3 T$ PTR INIT(ADDR(NIL))/**/,
             16183    1             3 AUX$ PTR INIT(ADDR(NIL))/**/,
             16184    1           2 DATA_A$ (0:2) REDEF DATA PTR,
             16220    1           2 LEN,
             16221    1             3 S UBIN INIT(0)/**/,
             16222    1             3 T UBIN INIT(0)/**/,
             16223    1             3 AUX UBIN INIT(0)/**/,
             16224    1           2 LEN_A (0:2) REDEF LEN UBIN,
             16225    1           2 SRCH_VRFY_ARGS REDEF LEN,
             16226    1             3 LEN UBIN,
             16227    1             3 LIST_LEN UBIN,
             16228    1             3 * UBIN,
             16229    1           2 SRCH_VRFY_ARGS_A (0:2) REDEF LEN UBIN,
             16230    1           2 SHIFT_COUNT REDEF LEN,
             16231    1             3 S UBIN,
             16232    1             3 T UBIN,
             16233    1             3 AUX UBIN,
             16234    1           2 SHIFT_COUNT_A (0:2) REDEF LEN UBIN,
             16248    1           2 DEC,
             16249    1             3 S SBIN INIT(0)/**/,
             16250    1             3 T SBIN INIT(0)/**/,
             16251    1             3 AUX SBIN INIT(0)/**/,
             16252    1           2 DEC_A (0:2) REDEF DEC SBIN,
             16253    1           2 INX REDEF DEC,
             16254    1             3 S UBIN,
             16255    1             3 T UBIN,
             16256    1             3 AUX UBIN,
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:260  
             16257    1           2 INX_A (0:2) REDEF DEC UBIN,
             16259    1           2 SRCH_VRFY_ELEMS,
             16260    1             3 LEN UBIN INIT(0)/**/,
             16261    1             3 LIST_LEN UBIN INIT(0)/**/,
             16262    1           2 SRCH_VRFY_ELEMS_A (0:1) REDEF SRCH_VRFY_ELEMS UBIN,
             16290    1           2 PICTURE_STRING,
             16291    1             3 INTERMEDIATE_RESULT_LEN UBIN INIT(0)/**/,
             16292    1             3 DEC UBIN INIT(0)/**/,
             16293    1           2 PICTURE_STRING_A (0:1) REDEF PICTURE_STRING UBIN,
             16294    1           2 SRCH_RESULT REDEF PICTURE_STRING,
             16295    1             3 ARG_NUMBER UBIN,
             16296    1             3 DISP UBIN,
             16297    1           2 SRCH_RESULT_A (0:1) REDEF PICTURE_STRING UBIN,
             16298    1           2 VRFY_RESULT REDEF PICTURE_STRING,
             16299    1             3 DISP UBIN,
             16300    1             3 * UBIN,
             16301    1           2 VRFY_RESULT_A (0:1) REDEF PICTURE_STRING UBIN,
             16309    1           2 SIZE_ERROR UBIN INIT(0)/**/,
             16310    1           2 FILL_CHAR REDEF SIZE_ERROR,
             16311    1             3 TEXT UBIN BYTE UNAL,
             16312    1             3 * UBIN BYTE UNAL,
             16323    1           2 ROUND UBIN INIT(0)/**/,
             16324    1           2 COMP_RESULT REDEF ROUND UBIN,
             16325    1           2 TARGET_SIZE REDEF ROUND UBIN ;
             16391    1     DCL 1 QI_SRCH_VRFY CONSTANT SYMDEF DALIGNED,
             16395    1           2 CIP,
             16465    1               3 S DALIGNED,           /* CIP descriptor */
             16468    1                 4 CA,                  /* Control bits for ALPHANUMERIC */
             16469    1                   5 OFFSET UBIN(1) UNAL INIT(0)/**/,
             16470    1                   5 FILL UBIN(1) UNAL INIT(0)/**/,
             16471    1                   5 MBZ UBIN(1) UNAL INIT(0)/**/,
             16472    1                 4 CB REDEF CA,         /* Control bits for BINARY */
             16473    1                   5 OFFSET UBIN(1) UNAL,
             16474    1                   5 MBZ UBIN(2) UNAL,  /* not used:  MBZ */
             16475    1                 4 CD REDEF CA,         /* Control bits for DISPLAY */
             16476    1                   5 OFFSET UBIN(1) UNAL,
             16477    1                   5 SIGN UBIN(2) UNAL,
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:261  
             16478    1                 4 CP REDEF CA,         /* Control bits for PACKED */
             16479    1                   5 OFFSET UBIN(2) UNAL,
             16480    1                   5 SIGN UBIN(1) UNAL,
             16524    1                 4 LEN UBIN(5) UNAL INIT(0)/**/,
             16528    1                 4 T UBIN(1) UNAL INIT(0)/**/,
             16530    1                 4 AS UBIN(7) UNAL INIT(BITBIN('1B'X))/**/,
             16535    1                 4 DISP UBIN INIT(6)/**/,
             16536    1               3 S_A (0:1) REDEF S UBIN ,
             16613    1               3 T DALIGNED,           /* CIP descriptor */
             16616    1                 4 CA,                  /* Control bits for ALPHANUMERIC */
             16617    1                   5 OFFSET UBIN(1) UNAL INIT(0)/**/,
             16618    1                   5 FILL UBIN(1) UNAL INIT(0)/**/,
             16619    1                   5 MBZ UBIN(1) UNAL INIT(0)/**/,
             16620    1                 4 CB REDEF CA,         /* Control bits for BINARY */
             16621    1                   5 OFFSET UBIN(1) UNAL,
             16622    1                   5 MBZ UBIN(2) UNAL,  /* not used:  MBZ */
             16623    1                 4 CD REDEF CA,         /* Control bits for DISPLAY */
             16624    1                   5 OFFSET UBIN(1) UNAL,
             16625    1                   5 SIGN UBIN(2) UNAL,
             16626    1                 4 CP REDEF CA,         /* Control bits for PACKED */
             16627    1                   5 OFFSET UBIN(2) UNAL,
             16628    1                   5 SIGN UBIN(1) UNAL,
             16672    1                 4 LEN UBIN(5) UNAL INIT(4)/**/,
             16676    1                 4 T UBIN(1) UNAL INIT(0)/**/,
             16678    1                 4 AS UBIN(7) UNAL INIT(BITBIN('B'X))/**/,
             16683    1                 4 DISP UBIN INIT(8)/**/,
             16684    1               3 T_A (0:1) REDEF T UBIN ,
             16761    1               3 AUX DALIGNED,           /* CIP descriptor */
             16764    1                 4 CA,                  /* Control bits for ALPHANUMERIC */
             16765    1                   5 OFFSET UBIN(1) UNAL INIT(0)/**/,
             16766    1                   5 FILL UBIN(1) UNAL INIT(0)/**/,
             16767    1                   5 MBZ UBIN(1) UNAL INIT(0)/**/,
             16768    1                 4 CB REDEF CA,         /* Control bits for BINARY */
             16769    1                   5 OFFSET UBIN(1) UNAL,
             16770    1                   5 MBZ UBIN(2) UNAL,  /* not used:  MBZ */
             16771    1                 4 CD REDEF CA,         /* Control bits for DISPLAY */
             16772    1                   5 OFFSET UBIN(1) UNAL,
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:262  
             16773    1                   5 SIGN UBIN(2) UNAL,
             16774    1                 4 CP REDEF CA,         /* Control bits for PACKED */
             16775    1                   5 OFFSET UBIN(2) UNAL,
             16776    1                   5 SIGN UBIN(1) UNAL,
             16820    1                 4 LEN UBIN(5) UNAL INIT(0)/**/,
             16824    1                 4 T UBIN(1) UNAL INIT(0)/**/,
             16826    1                 4 AS UBIN(7) UNAL INIT(BITBIN('3B'X))/**/,
             16831    1                 4 DISP UBIN INIT(10)/**/,
             16832    1               3 AUX_A (0:1) REDEF AUX UBIN ,
             16846    1           2 CIP_A (0:2) REDEF CIP UBIN(32),
             16853    1           2 DATA DALIGNED,
             16854    1             3 S$ PTR INIT(ADDR(NIL))/**/,
             16855    1             3 T$ PTR INIT(ADDR(NIL))/**/,
             16856    1             3 AUX$ PTR INIT(ADDR(NIL))/**/,
             16857    1           2 DATA_A$ (0:2) REDEF DATA PTR,
             16861    1           2 SRCH_VRFY_ARGS,
             16862    1             3 LEN UBIN INIT(1)/**/,
             16863    1             3 LIST_LEN UBIN INIT(1)/**/,
             16864    1             3 * UBIN,
             16865    1           2 SRCH_VRFY_ARGS_A (0:2) REDEF SRCH_VRFY_ARGS UBIN,
             16866    1           2 SHIFT_COUNT REDEF SRCH_VRFY_ARGS,
             16867    1             3 S UBIN,
             16868    1             3 T UBIN,
             16869    1             3 AUX UBIN,
             16870    1           2 SHIFT_COUNT_A (0:2) REDEF SRCH_VRFY_ARGS UBIN,
             16871    1           2 LEN REDEF SRCH_VRFY_ARGS,
             16872    1             3 S UBIN,
             16873    1             3 T UBIN,
             16874    1             3 AUX UBIN,
             16875    1           2 LEN_A (0:2) REDEF SRCH_VRFY_ARGS UBIN,
             16921    1           2 DEC,
             16922    1             3 S SBIN INIT(0)/**/,
             16923    1             3 T SBIN INIT(0)/**/,
             16924    1             3 AUX SBIN INIT(0)/**/,
             16925    1           2 DEC_A (0:2) REDEF DEC SBIN,
             16926    1           2 INX REDEF DEC,
             16927    1             3 S UBIN,
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:263  
             16928    1             3 T UBIN,
             16929    1             3 AUX UBIN,
             16930    1           2 INX_A (0:2) REDEF DEC UBIN,
             16932    1           2 SRCH_VRFY_ELEMS,
             16933    1             3 LEN UBIN INIT(1)/**/,
             16934    1             3 LIST_LEN UBIN INIT(1)/**/,
             16935    1           2 SRCH_VRFY_ELEMS_A (0:1) REDEF SRCH_VRFY_ELEMS UBIN,
             16937    1           2 SRCH_RESULT,
             16938    1             3 ARG_NUMBER UBIN INIT(0)/**/,
             16939    1             3 DISP UBIN INIT(0)/**/,
             16940    1           2 SRCH_RESULT_A (0:1) REDEF SRCH_RESULT UBIN,
             16941    1           2 VRFY_RESULT REDEF SRCH_RESULT,
             16942    1             3 DISP UBIN,
             16943    1             3 * UBIN,
             16944    1           2 VRFY_RESULT_A (0:1) REDEF SRCH_RESULT UBIN,
             16945    1           2 PICTURE_STRING REDEF SRCH_RESULT,
             16946    1             3 INTERMEDIATE_RESULT_LEN UBIN,
             16947    1             3 DEC UBIN,
             16948    1           2 PICTURE_STRING_A (0:1) REDEF SRCH_RESULT UBIN,
             16977    1           2 FILL_CHAR,
             16978    1             3 TEXT UBIN BYTE UNAL INIT(32)/**/,
             16979    1             3 * UBIN BYTE UNAL INIT(0)/**/,
             16980    1           2 SIZE_ERROR REDEF FILL_CHAR UBIN,
             16996    1           2 ROUND UBIN INIT(0)/**/,
             16997    1           2 COMP_RESULT REDEF ROUND UBIN,
             16998    1           2 TARGET_SIZE REDEF ROUND UBIN ;
             17060    1     DCL 1 QI_MAT CONSTANT SYMDEF DALIGNED,
             17064    1           2 CIP,
             17134    1               3 S DALIGNED,           /* CIP descriptor */
             17137    1                 4 CA,                  /* Control bits for ALPHANUMERIC */
             17138    1                   5 OFFSET UBIN(1) UNAL INIT(0)/**/,
             17139    1                   5 FILL UBIN(1) UNAL INIT(0)/**/,
             17140    1                   5 MBZ UBIN(1) UNAL INIT(0)/**/,
             17141    1                 4 CB REDEF CA,         /* Control bits for BINARY */
             17142    1                   5 OFFSET UBIN(1) UNAL,
             17143    1                   5 MBZ UBIN(2) UNAL,  /* not used:  MBZ */
             17144    1                 4 CD REDEF CA,         /* Control bits for DISPLAY */
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:264  
             17145    1                   5 OFFSET UBIN(1) UNAL,
             17146    1                   5 SIGN UBIN(2) UNAL,
             17147    1                 4 CP REDEF CA,         /* Control bits for PACKED */
             17148    1                   5 OFFSET UBIN(2) UNAL,
             17149    1                   5 SIGN UBIN(1) UNAL,
             17193    1                 4 LEN UBIN(5) UNAL INIT(0)/**/,
             17197    1                 4 T UBIN(1) UNAL INIT(0)/**/,
             17199    1                 4 AS UBIN(7) UNAL INIT(BITBIN('1B'X))/**/,
             17204    1                 4 DISP UBIN INIT(6)/**/,
             17205    1               3 S_A (0:1) REDEF S UBIN ,
             17282    1               3 T DALIGNED,           /* CIP descriptor */
             17285    1                 4 CA,                  /* Control bits for ALPHANUMERIC */
             17286    1                   5 OFFSET UBIN(1) UNAL INIT(0)/**/,
             17287    1                   5 FILL UBIN(1) UNAL INIT(1)/**/,
             17288    1                   5 MBZ UBIN(1) UNAL INIT(0)/**/,
             17289    1                 4 CB REDEF CA,         /* Control bits for BINARY */
             17290    1                   5 OFFSET UBIN(1) UNAL,
             17291    1                   5 MBZ UBIN(2) UNAL,  /* not used:  MBZ */
             17292    1                 4 CD REDEF CA,         /* Control bits for DISPLAY */
             17293    1                   5 OFFSET UBIN(1) UNAL,
             17294    1                   5 SIGN UBIN(2) UNAL,
             17295    1                 4 CP REDEF CA,         /* Control bits for PACKED */
             17296    1                   5 OFFSET UBIN(2) UNAL,
             17297    1                   5 SIGN UBIN(1) UNAL,
             17341    1                 4 LEN UBIN(5) UNAL INIT(0)/**/,
             17345    1                 4 T UBIN(1) UNAL INIT(0)/**/,
             17347    1                 4 AS UBIN(7) UNAL INIT(BITBIN('2B'X))/**/,
             17352    1                 4 DISP UBIN INIT(8)/**/,
             17353    1               3 T_A (0:1) REDEF T UBIN ,
             17430    1               3 AUX DALIGNED,           /* CIP descriptor */
             17433    1                 4 CA,                  /* Control bits for ALPHANUMERIC */
             17434    1                   5 OFFSET UBIN(1) UNAL INIT(0)/**/,
             17435    1                   5 FILL UBIN(1) UNAL INIT(0)/**/,
             17436    1                   5 MBZ UBIN(1) UNAL INIT(0)/**/,
             17437    1                 4 CB REDEF CA,         /* Control bits for BINARY */
             17438    1                   5 OFFSET UBIN(1) UNAL,
             17439    1                   5 MBZ UBIN(2) UNAL,  /* not used:  MBZ */
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:265  
             17440    1                 4 CD REDEF CA,         /* Control bits for DISPLAY */
             17441    1                   5 OFFSET UBIN(1) UNAL,
             17442    1                   5 SIGN UBIN(2) UNAL,
             17443    1                 4 CP REDEF CA,         /* Control bits for PACKED */
             17444    1                   5 OFFSET UBIN(2) UNAL,
             17445    1                   5 SIGN UBIN(1) UNAL,
             17489    1                 4 LEN UBIN(5) UNAL INIT(0)/**/,
             17493    1                 4 T UBIN(1) UNAL INIT(0)/**/,
             17495    1                 4 AS UBIN(7) UNAL INIT(BITBIN('B'X))/**/,
             17500    1                 4 DISP UBIN INIT(10)/**/,
             17501    1               3 AUX_A (0:1) REDEF AUX UBIN ,
             17515    1           2 CIP_A (0:2) REDEF CIP UBIN(32),
             17522    1           2 DATA DALIGNED,
             17523    1             3 S$ PTR INIT(ADDR(NIL))/**/,
             17524    1             3 T$ PTR INIT(ADDR(NIL))/**/,
             17525    1             3 AUX$ PTR INIT(ADDR(NIL))/**/,
             17526    1           2 DATA_A$ (0:2) REDEF DATA PTR,
             17562    1           2 LEN,
             17563    1             3 S UBIN INIT(0)/**/,
             17564    1             3 T UBIN INIT(0)/**/,
             17565    1             3 AUX UBIN INIT(256)/**/,
             17566    1           2 LEN_A (0:2) REDEF LEN UBIN,
             17567    1           2 SRCH_VRFY_ARGS REDEF LEN,
             17568    1             3 LEN UBIN,
             17569    1             3 LIST_LEN UBIN,
             17570    1             3 * UBIN,
             17571    1           2 SRCH_VRFY_ARGS_A (0:2) REDEF LEN UBIN,
             17572    1           2 SHIFT_COUNT REDEF LEN,
             17573    1             3 S UBIN,
             17574    1             3 T UBIN,
             17575    1             3 AUX UBIN,
             17576    1           2 SHIFT_COUNT_A (0:2) REDEF LEN UBIN,
             17590    1           2 DEC,
             17591    1             3 S SBIN INIT(0)/**/,
             17592    1             3 T SBIN INIT(0)/**/,
             17593    1             3 AUX SBIN INIT(0)/**/,
             17594    1           2 DEC_A (0:2) REDEF DEC SBIN,
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:266  
             17595    1           2 INX REDEF DEC,
             17596    1             3 S UBIN,
             17597    1             3 T UBIN,
             17598    1             3 AUX UBIN,
             17599    1           2 INX_A (0:2) REDEF DEC UBIN,
             17601    1           2 SRCH_VRFY_ELEMS,
             17602    1             3 LEN UBIN INIT(0)/**/,
             17603    1             3 LIST_LEN UBIN INIT(0)/**/,
             17604    1           2 SRCH_VRFY_ELEMS_A (0:1) REDEF SRCH_VRFY_ELEMS UBIN,
             17632    1           2 PICTURE_STRING,
             17633    1             3 INTERMEDIATE_RESULT_LEN UBIN INIT(0)/**/,
             17634    1             3 DEC UBIN INIT(0)/**/,
             17635    1           2 PICTURE_STRING_A (0:1) REDEF PICTURE_STRING UBIN,
             17636    1           2 SRCH_RESULT REDEF PICTURE_STRING,
             17637    1             3 ARG_NUMBER UBIN,
             17638    1             3 DISP UBIN,
             17639    1           2 SRCH_RESULT_A (0:1) REDEF PICTURE_STRING UBIN,
             17640    1           2 VRFY_RESULT REDEF PICTURE_STRING,
             17641    1             3 DISP UBIN,
             17642    1             3 * UBIN,
             17643    1           2 VRFY_RESULT_A (0:1) REDEF PICTURE_STRING UBIN,
             17646    1           2 FILL_CHAR,
             17647    1             3 TEXT UBIN BYTE UNAL INIT(01 /* QI_MAT_MATCH */)/**/,
             17648    1             3 * UBIN BYTE UNAL INIT(0)/**/,
             17649    1           2 SIZE_ERROR REDEF FILL_CHAR UBIN,
             17665    1           2 ROUND UBIN INIT(0)/**/,
             17666    1           2 COMP_RESULT REDEF ROUND UBIN,
             17667    1           2 TARGET_SIZE REDEF ROUND UBIN ;
             17688            /* QI_CIP_DESCRIPTOR stuff.... */
             17760    1           DCL 1 QI_4_CHAR_ALPHANUMERIC CONSTANT SYMDEF DALIGNED,  /* CIP descriptor */
             17765    1                 2 CA,                  /* Control bits for ALPHANUMERIC */
             17766    1                   3 OFFSET UBIN(1) UNAL INIT(0)/**/,
             17767    1                   3 FILL UBIN(1) UNAL INIT(1)/**/,
             17768    1                   3 MBZ UBIN(1) UNAL INIT(0)/**/,
             17769    1                 2 CB REDEF CA,         /* Control bits for BINARY */
             17770    1                   3 OFFSET UBIN(1) UNAL,
             17771    1                   3 MBZ UBIN(2) UNAL,  /* not used:  MBZ */
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:267  
             17772    1                 2 CD REDEF CA,         /* Control bits for DISPLAY */
             17773    1                   3 OFFSET UBIN(1) UNAL,
             17774    1                   3 SIGN UBIN(2) UNAL,
             17775    1                 2 CP REDEF CA,         /* Control bits for PACKED */
             17776    1                   3 OFFSET UBIN(2) UNAL,
             17777    1                   3 SIGN UBIN(1) UNAL,
             17821    1                 2 LEN UBIN(5) UNAL INIT(4)/**/,
             17825    1                 2 T UBIN(1) UNAL INIT(0)/**/,
             17827    1                 2 AS UBIN(7) UNAL INIT(BITBIN('B'X))/**/,
             17829    1                 2 DISP UBIN INIT(6)/**/;
             17830    1           DCL 1 QI_4_CHAR_ALPHANUMERIC_A (0:1) REDEF QI_4_CHAR_ALPHANUMERIC UBIN;
             17928    1           DCL 1 QI_31_DIGIT_SLS_DISPLAY CONSTANT SYMDEF DALIGNED, /* CIP descriptor */
             17975    1                 2 CD,                  /* Control bits for DISPLAY */
             17976    1                   3 OFFSET UBIN(1) UNAL INIT(0)/**/,
             17977    1                   3 SIGN UBIN(2) UNAL INIT(2)/**/,
             17978    1                 2 CA REDEF CD,         /* Control bits for ALPHANUMERIC */
             17979    1                   3 OFFSET UBIN(1) UNAL,
             17980    1                   3 FILL UBIN(1) UNAL,
             17981    1                   3 MBZ UBIN(1) UNAL,  /* not used:  MBZ */
             17982    1                 2 CB REDEF CD,         /* Control bits for BINARY */
             17983    1                   3 OFFSET UBIN(1) UNAL,
             17984    1                   3 MBZ UBIN(2) UNAL,  /* not used:  MBZ */
             17985    1                 2 CP REDEF CD,         /* Control bits for PACKED */
             17986    1                   3 OFFSET UBIN(2) UNAL,
             17987    1                   3 SIGN UBIN(1) UNAL,
             17989    1                 2 LEN UBIN(5) UNAL INIT(31)/**/,
             17993    1                 2 T UBIN(1) UNAL INIT(0)/**/,
             17995    1                 2 AS UBIN(7) UNAL INIT(BITBIN('B'X))/**/,
             17997    1                 2 DISP UBIN INIT(6)/**/;
             17998    1           DCL 1 QI_31_DIGIT_SLS_DISPLAY_A (0:1) REDEF QI_31_DIGIT_SLS_DISPLAY UBIN;
             18095    1           DCL 1 QI_16_BIT_BINARY CONSTANT SYMDEF DALIGNED,        /* CIP descriptor */
             18114    1                 2 CB,                  /* Control bits for BINARY */
             18115    1                   3 OFFSET UBIN(1) UNAL INIT(0)/**/,
             18116    1                   3 MBZ UBIN(2) UNAL INIT(0)/**/,
             18117    1                 2 CA REDEF CB,         /* Control bits for ALPHANUMERIC */
             18118    1                   3 OFFSET UBIN(1) UNAL,
             18119    1                   3 FILL UBIN(1) UNAL,
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:268  
             18120    1                   3 MBZ UBIN(1) UNAL,  /* not used:  MBZ */
             18121    1                 2 CD REDEF CB,         /* Control bits for DISPLAY */
             18122    1                   3 OFFSET UBIN(1) UNAL,
             18123    1                   3 SIGN UBIN(2) UNAL,
             18124    1                 2 CP REDEF CB,         /* Control bits for PACKED */
             18125    1                   3 OFFSET UBIN(2) UNAL,
             18126    1                   3 SIGN UBIN(1) UNAL,
             18156    1                 2 LEN UBIN(5) UNAL INIT(2)/**/,
             18160    1                 2 T UBIN(1) UNAL INIT(0)/**/,
             18162    1                 2 AS UBIN(7) UNAL INIT(BITBIN('B'X))/**/,
             18164    1                 2 DISP UBIN INIT(6)/**/;
             18165    1           DCL 1 QI_16_BIT_BINARY_A (0:1) REDEF QI_16_BIT_BINARY UBIN;
             18262    1           DCL 1 QI_32_BIT_BINARY CONSTANT SYMDEF DALIGNED,        /* CIP descriptor */
             18281    1                 2 CB,                  /* Control bits for BINARY */
             18282    1                   3 OFFSET UBIN(1) UNAL INIT(0)/**/,
             18283    1                   3 MBZ UBIN(2) UNAL INIT(0)/**/,
             18284    1                 2 CA REDEF CB,         /* Control bits for ALPHANUMERIC */
             18285    1                   3 OFFSET UBIN(1) UNAL,
             18286    1                   3 FILL UBIN(1) UNAL,
             18287    1                   3 MBZ UBIN(1) UNAL,  /* not used:  MBZ */
             18288    1                 2 CD REDEF CB,         /* Control bits for DISPLAY */
             18289    1                   3 OFFSET UBIN(1) UNAL,
             18290    1                   3 SIGN UBIN(2) UNAL,
             18291    1                 2 CP REDEF CB,         /* Control bits for PACKED */
             18292    1                   3 OFFSET UBIN(2) UNAL,
             18293    1                   3 SIGN UBIN(1) UNAL,
             18323    1                 2 LEN UBIN(5) UNAL INIT(4)/**/,
             18327    1                 2 T UBIN(1) UNAL INIT(0)/**/,
             18329    1                 2 AS UBIN(7) UNAL INIT(BITBIN('B'X))/**/,
             18331    1                 2 DISP UBIN INIT(6)/**/;
             18332    1           DCL 1 QI_32_BIT_BINARY_A (0:1) REDEF QI_32_BIT_BINARY UBIN;
             18430    1           DCL 1 QI_31_DIGIT_ST_PACKED CONSTANT SYMDEF DALIGNED,   /* CIP descriptor */
             18463    1                 2 CP,                  /* Control bits for PACKED */
             18464    1                   3 OFFSET UBIN(2) UNAL INIT(0)/**/,
             18465    1                   3 SIGN UBIN(1) UNAL INIT(1)/**/,
             18466    1                 2 CA REDEF CP,         /* Control bits for ALPHANUMERIC */
             18467    1                   3 OFFSET UBIN(1) UNAL,
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:269  
             18468    1                   3 FILL UBIN(1) UNAL,
             18469    1                   3 MBZ UBIN(1) UNAL,  /* not used:  MBZ */
             18470    1                 2 CB REDEF CP,         /* Control bits for BINARY */
             18471    1                   3 OFFSET UBIN(1) UNAL,
             18472    1                   3 MBZ UBIN(2) UNAL,  /* not used:  MBZ */
             18473    1                 2 CD REDEF CP,         /* Control bits for DISPLAY */
             18474    1                   3 OFFSET UBIN(1) UNAL,
             18475    1                   3 SIGN UBIN(2) UNAL,
             18491    1                 2 LEN UBIN(5) UNAL INIT(31)/**/,
             18493    1                 2 T UBIN(1) UNAL INIT(1)/**/,
             18497    1                 2 AS UBIN(7) UNAL INIT(BITBIN('B'X))/**/,
             18499    1                 2 DISP UBIN INIT(6)/**/;
             18500    1           DCL 1 QI_31_DIGIT_ST_PACKED_A (0:1) REDEF QI_31_DIGIT_ST_PACKED UBIN;
             18598    1           DCL 1 QI_PICTURE_STRING CONSTANT SYMDEF DALIGNED,       /* CIP descriptor */
             18603    1                 2 CA,                  /* Control bits for ALPHANUMERIC */
             18604    1                   3 OFFSET UBIN(1) UNAL INIT(1)/**/,
             18605    1                   3 FILL UBIN(1) UNAL INIT(1)/**/,
             18606    1                   3 MBZ UBIN(1) UNAL INIT(0)/**/,
             18607    1                 2 CB REDEF CA,         /* Control bits for BINARY */
             18608    1                   3 OFFSET UBIN(1) UNAL,
             18609    1                   3 MBZ UBIN(2) UNAL,  /* not used:  MBZ */
             18610    1                 2 CD REDEF CA,         /* Control bits for DISPLAY */
             18611    1                   3 OFFSET UBIN(1) UNAL,
             18612    1                   3 SIGN UBIN(2) UNAL,
             18613    1                 2 CP REDEF CA,         /* Control bits for PACKED */
             18614    1                   3 OFFSET UBIN(2) UNAL,
             18615    1                   3 SIGN UBIN(1) UNAL,
             18659    1                 2 LEN UBIN(5) UNAL INIT(0)/**/,
             18663    1                 2 T UBIN(1) UNAL INIT(0)/**/,
             18665    1                 2 AS UBIN(7) UNAL INIT(BITBIN('B'X))/**/,
             18667    1                 2 DISP UBIN INIT(10)/**/;
             18668    1           DCL 1 QI_PICTURE_STRING_A (0:1) REDEF QI_PICTURE_STRING UBIN;
             18710    1     DCL 1 QI_ACCUMULATOR_DAD CONSTANT SYMDEF ALIGNED,
             18711                          /* CONSTANT "DAD" describing QI_1.ACCUM. */
             18712    1           2 * UBIN(12) UNAL /* Was INIT'ed to:  (0)/**/,
             18713    1           2 TYPE UBIN(4) UNAL /* Was INIT'ed to:  (1)/**/,
             18773    1               2 CIP DALIGNED,           /* CIP descriptor */
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:270  
             18804    1                 3 CP,                  /* Control bits for PACKED */
             18805    1                   4 OFFSET UBIN(2) UNAL INIT(0)/**/,
             18806    1                   4 SIGN UBIN(1) UNAL INIT(1)/**/,
             18807    1                 3 CA REDEF CP,         /* Control bits for ALPHANUMERIC */
             18808    1                   4 OFFSET UBIN(1) UNAL,
             18809    1                   4 FILL UBIN(1) UNAL,
             18810    1                   4 MBZ UBIN(1) UNAL,  /* not used:  MBZ */
             18811    1                 3 CB REDEF CP,         /* Control bits for BINARY */
             18812    1                   4 OFFSET UBIN(1) UNAL,
             18813    1                   4 MBZ UBIN(2) UNAL,  /* not used:  MBZ */
             18814    1                 3 CD REDEF CP,         /* Control bits for DISPLAY */
             18815    1                   4 OFFSET UBIN(1) UNAL,
             18816    1                   4 SIGN UBIN(2) UNAL,
             18832    1                 3 LEN UBIN(5) UNAL INIT(31)/**/,
             18834    1                 3 T UBIN(1) UNAL INIT(1)/**/,
             18838    1                 3 AS UBIN(7) UNAL INIT(BITBIN('B'X))/**/,
             18843    1                 3 DISP UBIN INIT(6)/**/,
             18844    1               2 CIP_A (0:1) REDEF CIP UBIN ;
             18873            %ENDIF;
       91    18876
       92    18877        /*
       93    18878            Dynamic stuff.
       94    18879        */
       95    18880          %QI$DYNAMIC;
             18881            %BEGIN_MACRO ( STCLASS = STCLASS );
             18882            %SET LISTDIR = '0'B;
             18910    1     DCL 1 QI$GZ_HEADER BASED ALIGNED,
             18911    1           2 IS_ACTIVE BIT(1) ALIGNED,
             18912                                           /* "Does this QI$GZ_HEADER represent an
             18913                                              ACTIVE something-or-other?" indicator */
             18914    1           2 BACK_LINK$ PTR,
             18915                                           /* Back_link to last QI$GZ_HEADER */
             18916    1           2 DCB# UBIN,
             18917                                           /* DCB# for this header */
             18918    1           2 FIELD_COUNT UBIN,
             18919                                           /* number of fields following this header */
             18920    1           2 FRAME_DAD$ PTR,
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:271  
             18921                                           /* ptr to frame DAD for this header */
             18922    1           2 OPERATION,
             18923    1             3 START_INDEX UBIN,
             18924                                           /* starting index into the field array
             18925                                              following this header */
             18926    1             3 STOP_INDEX UBIN,
             18927                                           /* stopping index into the field array
             18928                                              following this header */
             18929    1             3 DONE_INDEX UBIN,
             18930                                           /* index into the field array
             18931                                              following this header of
             18932                                              the last field actually operated on */
             18933    1           2 STATUS UBIN;
             18934                                           /* returned status */
             18959    1     DCL 1 QI$GZ_FIELD BASED ALIGNED,
             18960    1           2 INDICATORS$ PTR,
             18961    1           2 DESCRIPTION,
             18962    1             3 IO_FLAGS,
             18963    1               4 IS_OUTPUT BIT(1) UNAL,
             18964                                           /* on if this FIELD is OUTPUT or I-O */
             18965    1               4 IS_INPUT BIT(1) UNAL,
             18966                                           /* on if this FIELD is INPUT or I-O */
             18967    1             3 IO_VALUE REDEF IO_FLAGS UBIN(2) UNAL,
             18968                                           /* all 1's if this field is I-O */
             18969    1             3 IS_ENTRY_REQUIRED BIT(1) UNAL,
             18970                                           /* on if ENTRY-REQUIRED */
             18971    1             3 IS_OUTPUT_CONSTANT BIT(1) UNAL,
             18972                                           /* on if OUTPUT CONSTANT */
             18973    1             3 IS_AOIM BIT(1) UNAL,
             18974                                           /* on if A-O-I-M */
             18975    1             3 * UBIN(3) UNAL,
             18976    1             3 LENGTH UBIN BYTE CALIGNED,
             18977                                           /* field length */
             18978    1             3 POSITION,
             18979    1               4 LINE UBIN BYTE CALIGNED,
             18980                                           /* LINE whatever */
             18981    1               4 COLUMN UBIN BYTE CALIGNED,
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:272  
             18982                                           /* COLUMN whatever */
             18983    1             3 FIELD_DAD$ PTR,
             18984                                           /* ptr back to the original field DAD */
             18985    1           2 STATUS,
             18986    1             3 OFFSET UBIN(1) UNAL,
             18987                                           /* byte offset from DATA$ of the real data */
             18988    1             3 IS_AOIM_MODIFIED BIT(1) UNAL,
             18989                                           /* on if this A-O-I-M field was modified,
             18990                                              off if this A-O-I-M field hasn't changed */
             18991    1             3 IS_VALUE_DEFAULT BIT(1) UNAL,
             18992                                           /* on if data came from a DEFAULT clause,
             18993                                              off if data came from a terminal */
             18994    1             3 WAS_IO_EVER_DONE BIT(1) UNAL,
             18995                                           /* reset by USE prep code */
             18996    1             3 LENGTH UBIN BYTE CALIGNED,
             18997                                           /* length of data returned */
             18998    1             3 VISUAL_ATTRIBUTE UBIN BYTE CALIGNED,
             18999                                           /* ABStractGRPhicRNDition goop */
             19000    1             3 FLDID UBIN,
             19001                                           /* VDH FLDID for this elementary
             19002                                              field */
             19003    1             3 DATA$ PTR,
             19004                                           /* ptr to the real data */
             19005    1           2 OPERATION,
             19006    1             3 IS_OPERATE BIT(1) UNAL,
             19007                                           /* do something */
             19008    1             3 IS_VISUAL_ATTRIBUTE_CHANGE BIT(1) UNAL,
             19009                                           /* change the VISUAL-ATTRIBUTE
             19010                                              while yer at it */
             19011    1             3 IS_DONE BIT(1) UNAL,
             19012                                           /* did something */
             19013    1           2 FPL_ERROR BIT(1) UNAL,
             19014                                           /* internally detected oops */
             19015    1           2 USE_STUFF UBIN(4) UNAL;
             19016                                           /* cleared field for
             19017                                              USE prep code */
             19033            %ENDIF;
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:273  
       96    19036
       97    19037    1   END QI_DATA_D;

PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:274  
--  Include file information  --

   QI_MACROS_M.:E05TOU  is referenced.
   QI_PERR_C.:E05TOU  is referenced.
   QI_EQUATES_E.:E05TOU  is referenced.
   QG_MACRO_M.:E05TOU  is referenced.
   LCP_6.:E05TOU  cannot be made into a system file and is referenced.
   G_LCP6_E.:E05TOU  was found in the system file and is referenced.
   GT_LCP6_M.:E05TOU  was found in the system file and is referenced.
   KI_CP6.:E05TOU  was found in the system file and is referenced.
   GF_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GM_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GU_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GJ_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GH_LCP6_M.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure QI_DATA_D.

   No code generated for procedure QI_DATA_D .
   Procedure QI_DATA_D requires 4 words of local(AUTO) storage.

    No errors detected in file QI_DATA_D.:E05TSI    .

PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:275  

 Object Unit name= QI_DATA_D                                  File name= QI_DATA_D.:E05TOU
 UTS= JUL 30 '97 05:20:22.40 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_LCP6_SYSTEM                               Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size HexSiz  Section name
    0   Data  even  none   221     DD  QI_DATA_D
    1  RoData even  UTS    828    33C  QI_DATA_D
    2   Proc  even  none     0      0  QI_DATA_D

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect HexLoc Primary Altret sequence   type   Parms  Name
     2      0   yes            yes     ~proc       0  QI_DATA_D
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:276  

  ****  Data defs  ****

 Sect HexLoc  Name                           Sect HexLoc  Name
    0      0  QI_1                               0     A2  QI_SWORK
    0     AA  QI_SWORK_2                         1      0  QI_BLANK
    1      1  QI_MAT_MATCH                       1      2  QI_MAT_NONMATCH
    1      3  QI_SLASH                           1      4  QI_ZERO
    1      5  QI_BINARY_ZERO                     1      6  QI_CLASS_ALPHA
    1     86  QI_CLASS_NUMERIC                   1    106  QI_OVERPUNCHED_SIGNS
    1    110  QI_ZERO_ACCUMULATOR                0     B2  QGB_PARAM
    1    118  QI_FPT_CLOSE                       1    128  QI_FPT_DBCONTROL
    1    130  QI_FPT_DCLFLD                      1    13E  QI_VLP_FLDATR
    1    141  QI_FPT_DEVICE                      1    150  QI_FPT_ERASE
    1    159  QI_FPT_ERRMSG                      1    17C  QI_FPT_EXIT
    1    184  QI_FPT_FDS                         1    18C  QI_FPT_FDS_LOAD
    1    194  QI_FPT_GDS                         0     CD  QI_VLP_SEGMENT
    1    19C  QI_FPT_GDS_BUFFER                  0     D0  QI_VLP_SEGMENT_BUFFER
    1    1A4  QI_FPT_GDS_LOAD                    0     D3  QI_VLP_SEGMENT_LOAD
    1    1AC  QI_FPT_GLINEATTR                   1    1B3  QI_FPT_INT
    1    1BB  QI_FPT_LDTRC                       1    1CF  QI_FPT_MDFFLD
    1    1DE  QI_FPT_OPEN                        1    20D  QI_FPT_PROMPT
    1    215  QI_FPT_READ                        1    227  QI_VLP_CG
    1    233  QI_FPT_RLSFLD                      1    23B  QI_FPT_SLCFLD
    1    243  QI_FPT_TIME                        1    253  QI_FPT_TRAP
    1    259  QI_VLP_TRAP_CONDITIONS             1    265  QI_FPT_TRMATTR
    1    26C  QI_FPT_TRMCTL                      1    274  QI_VLP_TRMCTL
    1    27C  QI_FPT_WAIT                        1    286  QI_FPT_WRITE
    1    298  QI_FPT_XBREAK                      0     D6  QI_VLP_XBREAK
    1    29C  QI_ALR                             1    2B4  QI_TYPE_DISPLAY_SOURCE
    1    2CC  QI_TYPE_DISPLAY_TARGET             1    2E4  QI_TYPE_BINARY_TARGET
    1    2FC  QI_SRCH_VRFY                       1    314  QI_MAT
    1    32C  QI_4_CHAR_ALPHANUMERIC             1    32E  QI_31_DIGIT_SLS_DISPLAY
    1    330  QI_16_BIT_BINARY                   1    332  QI_32_BIT_BINARY
    1    334  QI_31_DIGIT_ST_PACKED              1    336  QI_PICTURE_STRING
    1    338  QI_ACCUMULATOR_DAD
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:277  

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
r    G$ROS$
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:278  

        1        1        /*M* QI_DATA_D:  Context for the FPL interpreter.  */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* DMC,PLM=4,IND=0,DCI=4,CSI=2,IAD=2,DTI=2,AND,ECI=0,DIN=2,STI=2 */
        8        8
        9        9        QI_DATA_D: PROC;
       10       10
       11       11          %INCLUDE LCP_6;
       12      202
       13      203          %SET LISTINC = '1'B;
       14      204          %SET LISTMAC = '1'B;
       15      205
       16      206          %INCLUDE QG_MACRO_M;
        1+     207        /*M* QG_MACRO_M:  Macros for VDO-buffering library services.  */
        2+     208        /*T***********************************************************/
        3+     209        /*T*                                                         */
        4+     210        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5+     211        /*T*                                                         */
        6+     212        /*T***********************************************************/
        7+     213        /*F* NAME:  QGB_INCLUDE Files
        8+     214        The include file necessary to make use of the QGB services
        9+     215        is located in the :LIBRARY account.  It is a PL-6 include file
       10+     216        and contains MACRO and ENTRY definitions which are used to interface
       11+     217        to the services.
       12+     218        ..::TB "INCLUDE File for QGB Services\File\#15\Contents"
       13+     219        ..::IT "QG_MACRO_M"
       14+     220        QGB_PARAM macro which defines the parameter block that is passed to
       15+     221        the QGB services.
       16+     222
       17+     223        QGB_ENTRIES macro which defines entry points for QGB services.
       18+     224        ..::TB
       19+     225        */
       20+     226        /*F* NAME:  QGB_Linking Information
       21+     227        The QGB services are FEP-resident routines that are not present
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:279  
       22+     228        in the :SHARED_LCP6_SYSTEM shared library.  They reside in the
       23+     229        QGB$BUFFER_VDO object unit in the :LIBRARY account, and must be
       24+     230        explicitly linked with the user's program with FEPLINK:
       25+     231
       26+     232        }  !FEPLINK my_ou, QGB$BUFFER_VDO.:LIBRARY OVER my_ru (options)
       27+     233        */
       28+     234        /*F* NAME:  QGB_PARAM
       29+     235        The QGB_PARAM macro generates a structure that is passed to the QGB
       30+     236        services.  This structure locates the buffer passed to the QGB$
       31+     237        services and contains context information used by the
       32+     238        library services.  Additional fields described below may be checked
       33+     239        by the caller of the QGB services.  The caller should check these
       34+     240        fields because the QGB services are unable to store this information
       35+     241        in the normal places in the DCB and TCB.
       36+     242        */
       37+     243
       38+     244          %MACRO QGB_PARAM ( NAME = QGB_PARAM,
       39+     245                             STCLASS = STCLASS,
       40+     246                             BBUF = NIL );
       41+     247            %LSET STR=CONCAT(TEXTCHAR(STCLASS),'        ');
       42+     248            %IF (SUBSTR(STR,0,6)='STATIC')
       43+     249             OR (SUBSTR(STR,0,8)='CONSTANT')
       44+     250             OR (SUBSTR(STR,0,3)='EXT');
       45+     251              %LSET INIT=CHARTEXT('INIT');
       46+     252            %ELSE;
       47+     253              %LSET INIT=CHARTEXT('/*');
       48+     254            %ENDIF;
       49+     255
       50+     256          DCL 1 NAME STCLASS ALIGNED,
       51+     257        /*K* BBUF_ - VECTOR.
       52+     258        Contains the size and location of the blocking buffer to be used
       53+     259        by the VDO packing and unpacking routines.  The buffer must be
       54+     260        allocated by the caller, and this field must be initialized, before
       55+     261        any QGB$ routines may be called.  A size of one or two FEP pages
       56+     262        is recommended.  The keyword used to initialize this field is BBUF.
       57+     263        */
       58+     264              2 BBUF_ VECTOR %INIT(VECTOR(BBUF))%CHARTEXT('/**/'),
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:280  
       59+     265              2 BBUF_OFFSET$ CPTR %INIT(ADDR(NIL))%CHARTEXT('/**/'),
       60+     266        /*K* ERR - Contains a VLP_ERRCODE structure.  This portion of the
       61+     267        structure corresponds to G$TCB$ -> G$TCB.ALT$ -> G$EXCFR.TRLR.ERR.
       62+     268        */
       63+     269              %VLP_ERRCODE ( FPTN = ERR,
       64+     270                             STCLASS = STCLASS,
       65+     271                             LVL = 2,
       66+     272                             LAST = "," );
       67+     273              2 MSG$ PTR %INIT(ADDR(NIL))%CHARTEXT('/**/'),
       68+     274              2 MSGC$ REDEF MSG$ CPTR,
       69+     275              2 MSGSZ SBIN WORD %INIT(0)%CHARTEXT('/**/'),
       70+     276              2 DVE CALIGNED,
       71+     277                3 DVBYTE UNAL,
       72+     278                  4 BP BIT(1) %INIT('1'B)%CHARTEXT('/**/'),
       73+     279                  4 VFC BIT(1) %INIT('0'B)%CHARTEXT('/**/'),
       74+     280                  4 REREAD REDEF VFC BIT(1),
       75+     281                  4 BIN BIT(1) %INIT('0'B)%CHARTEXT('/**/'),
       76+     282                  4 TRANS BIT(1) %INIT('0'B)%CHARTEXT('/**/'),
       77+     283                  4 RRR BIT(1) %INIT('0'B)%CHARTEXT('/**/'),
       78+     284                  4 NODAT BIT(1) %INIT('0'B)%CHARTEXT('/**/'),
       79+     285                  4 DCBHDR BIT(1) %INIT('0'B)%CHARTEXT('/**/'),
       80+     286                  4 CONT BIT(1) %INIT('0'B)%CHARTEXT('/**/'),
       81+     287        /*K* DVE.EOMCHAR - VALUE-CHAR(1).
       82+     288        When the VDO returned to the caller corresponds to the field in
       83+     289        which the activation character was typed, EOMCHAR is filled in with
       84+     290        the activation character; otherwise, QGB_PARAM.EOM_EOR is set. */
       85+     291                3 EOMCHAR CHAR(1) CALIGNED %INIT(BITASC('501'O))%CHARTEXT('/**/'),
       86+     292                3 VFC REDEF EOMCHAR CHAR(1) CALIGNED,
       87+     293              2 EOFNONE BIT(1) UNAL %INIT('0'B)%CHARTEXT('/**/'),
       88+     294              2 EOM_EOR BIT(1) %INIT('0'B)%CHARTEXT('/**/'),
       89+     295              2 CURRENTLY_READING BIT(1) %INIT('0'B)%CHARTEXT('/**/'),
       90+     296              2 * BIT(5) UNAL %INIT('0'B)%CHARTEXT('/**/'),
       91+     297              2 IP$ PTR %INIT(ADDR(NIL))%CHARTEXT('/**/'),
       92+     298              2 UHDR$ PTR %INIT(ADDR(NIL))%CHARTEXT('/**/'),
       93+     299              2 UHDRC$ REDEF UHDR$ CPTR,
       94+     300              2 UHDRSZ UBIN %INIT(0)%CHARTEXT('/**/'),
       95+     301              2 MRKTYP UBIN BYTE UNAL %INIT(0)%CHARTEXT('/**/'),
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:281  
       96+     302              2 STR UBIN BYTE UNAL %INIT(1)%CHARTEXT('/**/'),
       97+     303              2 V$ PTR %INIT(ADDR(NIL))%CHARTEXT('/**/'),
       98+     304              2 KEY$ PTR %INIT(ADDR(NIL))%CHARTEXT('/**/'),
       99+     305              2 VSZ UBIN %INIT(0)%CHARTEXT('/**/'),
      100+     306        /*K* FLDID - VALUE-UBIN.
      101+     307        Contains the field ID reported by the most recent operation for an
      102+     308        ORG=FORM DCB.  It is the same as that returned in KEY if KEYTYPE=FLDID,
      103+     309        but is always returned here.  This is particularly useful for operations
      104+     310        like M$DCLFLD that have no provision for returning a key.
      105+     311        */
      106+     312              2 FLDID UBIN %INIT(0)%CHARTEXT('/**/'),
      107+     313        /*K* ACTPOS - VALUE-DEC(0-32767).
      108+     314        Indicates the position in the record at which activation occurred.
      109+     315        The first character of the record is at position one.  A value of
      110+     316        zero means that the activation occurred at the end of the record.
      111+     317        */
      112+     318              2 ACTPOS UBIN %INIT(0)%CHARTEXT('/**/'),
      113+     319        /*K* ARS - VALUE-UBIN.
      114+     320        Contains the actual record size read (in bytes).
      115+     321        */
      116+     322              2 ARS UBIN %INIT(0)%CHARTEXT('/**/'),
      117+     323              2 KEYTYPE UBIN BYTE CALIGNED %INIT(0)%CHARTEXT('/**/'),
      118+     324              2 KEYSZ UBIN BYTE CALIGNED %INIT(0)%CHARTEXT('/**/');
      119+     325
      120+     326          %MEND;
      121+     327
      122+     328          %MACRO QGB_ENTRIES;
      123+     329
      124+     330          DCL QGB$OPEN ENTRY (2) ALTRET;
      125+     331          DCL QGB$CLOSE ENTRY (2) ALTRET;
      126+     332          DCL QGB$DCLFLD ENTRY (2) ALTRET;
      127+     333          DCL QGB$MDFFLD ENTRY (2) ALTRET;
      128+     334          DCL QGB$SLCFLD ENTRY (2) ALTRET;
      129+     335          DCL QGB$RLSFLD ENTRY (2) ALTRET;
      130+     336          DCL QGB$ERASE ENTRY (2) ALTRET;
      131+     337          DCL QGB$WRITE ENTRY (2) ALTRET;
      132+     338          DCL QGB$READ ENTRY (2) ALTRET;
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:282  
      133+     339          DCL QGB$DEVICE ENTRY (2) ALTRET;
      134+     340          DCL QGB$FLUSH ENTRY (2) ALTRET;
      135+     341
      136+     342          %MEND;
       17      343          %INCLUDE QI_EQUATES_E;
        1+     344        /*M* QI_EQUATES_E:  General EQUates for the FPL interpreter.  */
        2+     345        /*T***********************************************************/
        3+     346        /*T*                                                         */
        4+     347        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5+     348        /*T*                                                         */
        6+     349        /*T***********************************************************/
        7+     350
        8+     351        %EQU QI#DATA = 0;
        9+     352        %EQU QI#PROC = 1;
       10+     353        %EQU QI#INTR = 2;
       11+     354
       12+     355        %EQU QI#SOURCE = 0;
       13+     356        %SET QI#DEFAULT_SOURCE = QI#SOURCE;
       14+     357        %EQU QI#TARGET = 1;
       15+     358        %SET QI#DEFAULT_TARGET = QI#TARGET;
       16+     359        %EQU QI#AUX = 2;
       17+     360        %EQU QI#PICTURE_STRING = 2;
       18+     361        %EQU QI#DE_EDIT = 2;
       19+     362        /*
       20+     363                 internal mode control values
       21+     364        */
       22+     365        %SET QI#DEBUG = '1'B;
       23+     366        %SET QI#RETRY_COUNT_IMPLEMENTED = '0'B;
       24+     367        %SET QI#ABORT_DUMP = 1;
       25+     368        %SET QI#HAVE_USE_PROC = 0;
       26+     369        %EQU QI#ERROR_MESSAGE_LINE_SIZE = 72;
       27+     370                          /* Error message line byte size  */
       28+     371        %EQU QI#ERROR_MESSAGE_BLINKING = '1'B;
       29+     372                          /* 1 will give the error message line
       30+     373                             ERROR visual-attribute  */
       31+     374        %EQU QI#ERROR_STATUS_BYTE_SIZE = 8;
       32+     375                          /* ERROR STATUS variable byte size */
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:283  
       33+     376        %EQU QI#ERR_ST_FILL_WORD = BITBIN('3000'X);
       34+     377        %EQU QI#OP_TEXT_BYTE_SIZE = 2;
       35+     378                          /* ERROR STATUS variable statement sub-field
       36+     379                             byte size  */
       37+     380        %EQU QI#HAVE_ARRAY_BOUNDS = '0'B;
       38+     381        /*
       39+     382                 Dimensional EQUates.
       40+     383                 (Values for QI$...DAD.WORD0_FLAGS.DIMENSION_COUNT.)
       41+     384        */
       42+     385        %EQU QI#MAXIMUM_DIMENSION = 3;
       43+     386        %EQU QI#ELEMENTARY_ITEM = 0;
       44+     387        %EQU QI#ONE_DIMENSIONAL_ITEM = 1;
       45+     388        %EQU QI#TWO_DIMENSIONAL_ITEM = 2;
       46+     389        %EQU QI#THREE_DIMENSIONAL_ITEM = 3;
       47+     390        /*
       48+     391                 TYPE declarations
       49+     392        */
       50+     393        %EQU QI#TYPE_DISPLAY = 0;
       51+     394        %EQU QI#TYPE_PACKED = 1;
       52+     395        %EQU QI#TYPE_BINARY = 2;
       53+     396        %EQU QI#TYPE_ALPHANUMERIC = 3;
       54+     397        %EQU QI#TYPE_BIT = 4;
       55+     398        /*
       56+     399                 values 5-7 are reserved for future use
       57+     400        */
       58+     401        %EQU QI#TYPE_MINOR = 8;
       59+     402        %EQU QI#TYPE_MAJOR = 9;
       60+     403        %EQU QI#TYPE_FRAME = 10;
       61+     404        %EQU QI#TYPE_FORM = 11;
       62+     405        %EQU QI#TYPE_TRANSACTION = 12;
       63+     406        /*
       64+     407                 values 13-15 are reserved for future use
       65+     408        */
       66+     409        /*
       67+     410                 IO codes for FIELD variables
       68+     411        */
       69+     412        %EQU QI#IO_VALUE_INPUT = 1;
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:284  
       70+     413        %EQU QI#IO_VALUE_OUTPUT = 2;
       71+     414        %EQU QI#IO_VALUE_IO = 3;
       72+     415        /*
       73+     416                 ENABLEd codes for FIELD variables
       74+     417        */
       75+     418        %EQU QI#DISABLED = 0;
       76+     419        %EQU QI#ENABLED_INPUT = 1;
       77+     420        %EQU QI#ENABLED_OUTPUT = 2;
       78+     421        %EQU QI#ENABLED_IO = 3;
       79+     422        /*
       80+     423                 state codes for FIELD variables
       81+     424        */
       82+     425        %EQU QI#STATE_NULL = 0;   /* NULL STATE */
       83+     426        %EQU QI#STATE_AVAIL_OUTPUT = 1;   /* DATA WAS LAST PRESENTED */
       84+     427        %EQU QI#STATE_AVAIL_VERIFY = 2;   /* DATA WAS LAST READ */
       85+     428        /*
       86+     429                 VISUAL-ATTRIBUTE codes
       87+     430        */
       88+     431        %EQU QI#NO_VISUAL_ATTRIBUTE = 0;
       89+     432        %EQU QI#NULL_VISUAL_ATTRIBUTE = 1;
       90+     433        %EQU QI#HIDDEN_VISUAL_ATTRIBUTE = 2;
       91+     434        %EQU QI#EMPHASIS_VISUAL_ATTRIBUTE = 3;
       92+     435        %EQU QI#INPUT_VISUAL_ATTRIBUTE = 4;
       93+     436        %EQU QI#OUTPUT_VISUAL_ATTRIBUTE = 5;
       94+     437        %EQU QI#ERROR_VISUAL_ATTRIBUTE = 6;
       95+     438        %EQU QI#WARNING_VISUAL_ATTRIBUTE = 7;
       96+     439        %EQU QI#INITIAL_VISUAL_ATTRIBUTE = 8;
       97+     440        /*
       98+     441                 values for string decimal signs
       99+     442        */
      100+     443        %EQU QI#CD_UNSIGNED = 0;
      101+     444        %EQU QI#CD_TRAIL_OVER = 1;
      102+     445        %EQU QI#CD_LEAD_SEP = 2;
      103+     446        %EQU QI#CD_TRAIL_SEP = 3;
      104+     447        %EQU QI#CD_SIGN_TRAILING_OVER = 1;
      105+     448        %EQU QI#CD_SIGN_LEADING_SEPARATE = 2;
      106+     449        %EQU QI#CD_SIGN_TRAILING_SEPARATE = 3;
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:285  
      107+     450        /*
      108+     451                 values for packed decimal signs
      109+     452        */
      110+     453        %EQU QI#CP_UNSIGNED = 0;
      111+     454        %EQU QI#CP_SIGN_TRAILING = 1;
      112+     455        /*
      113+     456                 sign conventions for string decimals
      114+     457        */
      115+     458        %EQU QI#DEC_POS_SEP_SIGN = BITBIN('2B'X);
      116+     459
      117+     460        %EQU QI#DEC_NEG_SEP_SIGN = BITBIN('2D'X);
      118+     461
      119+     462        %EQU QI#DEC_POS_OVER_SIGN = BITBIN('30'X);
      120+     463
      121+     464        %EQU QI#DEC_POS_ZONE = '30'X;
      122+     465        /*
      123+     466                 sign conventions for packed decimals
      124+     467        */
      125+     468        %EQU QI#PACK_POS_SIGN = BITBIN('B'X);
      126+     469        %EQU QI#PACK_NEG_SIGN = BITBIN('D'X);
      127+     470        /*
      128+     471                 characters
      129+     472        */
      130+     473        %EQU QI#BLANK = ASCBIN(' ');
      131+     474        %EQU QI#BLANK_WORD = BITBIN('2020'X);
      132+     475        %EQU QI#BLANK_LEFT_HALF = BITBIN('2000'X);
      133+     476        %EQU QI#CIP_BLANK_FILL = QI#BLANK;
      134+     477        %EQU QI#BLANK_RIGHT_HALF = QI#BLANK;
      135+     478
      136+     479        %EQU QI#SLASH = ASCBIN('/');
      137+     480        %EQU QI#SLASH_WORD = BITBIN('2F2F'X);
      138+     481        %EQU QI#SLASH_LEFT_HALF = BITBIN('2F00'X);
      139+     482        %EQU QI#CIP_SLASH_FILL = QI#SLASH;
      140+     483        %EQU QI#SLASH_RIGHT_HALF = QI#SLASH;
      141+     484
      142+     485        %EQU QI#ZERO = ASCBIN('0');
      143+     486        %EQU QI#ZERO_WORD = BITBIN('3030'X);
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:286  
      144+     487        %EQU QI#ZERO_LEFT_HALF = BITBIN('3000'X);
      145+     488        %EQU QI#CIP_ZERO_FILL = QI#ZERO;
      146+     489        %EQU QI#ZERO_RIGHT_HALF = QI#ZERO;
      147+     490
      148+     491        %EQU QI#PLUS = ASCBIN('+');
      149+     492        %EQU QI#MINUS = ASCBIN('-');
      150+     493        %EQU QI#ASTERISK = ASCBIN('*');
      151+     494        %EQU QI#DOLLAR_SIGN = ASCBIN('$');
      152+     495        %EQU QI#COMMA = ASCBIN(',');
      153+     496        %EQU QI#PERIOD = ASCBIN('.');
      154+     497
      155+     498        %EQU QI#BINARY_ZERO = 0;
      156+     499        %EQU QI#MAT_MATCH = 1;
      157+     500        %EQU QI#MAT_NONMATCH = 0;
      158+     501        /*
      159+     502                 common address syllables
      160+     503        */
      161+     504        %EQU QI#CIP_DEFAULT_AS = BITBIN('B'X);
      162+     505        %EQU QI#CIP_INDEXED_SOURCE_AS = BITBIN('1B'X);
      163+     506        %EQU QI#CIP_INDEXED_TARGET_AS = BITBIN('2B'X);
      164+     507        /*
      165+     508                 lengths of stuff
      166+     509        */
      167+     510        %EQU QI#MAXIMUM_FIELD_LENGTH = 256;
      168+     511        %EQU QI#MAX_CIP_ALPHA_MOVE = 255;
      169+     512        %EQU QI#MAX_CIP_NUMERIC = 31;
      170+     513        %EQU QI#MIN_BINARY_LENGTH = 2;
      171+     514        %EQU QI#MAX_BINARY_LENGTH = 4;
      172+     515        %EQU QI#MIN_BINARY_DIGIT_COUNT = 5;
      173+     516        %EQU QI#MAX_BINARY_DIGIT_COUNT = 10;
      174+     517        %EQU QI#MIN_DISPLAY = 1;
      175+     518        %EQU QI#MIN_DISPLAY_LENGTH = 1;
      176+     519        %EQU QI#MAX_DISPLAY = 15;
      177+     520        %EQU QI#MAX_DISPLAY_LEN = 15;
      178+     521        %EQU QI#MAX_DISPLAY_LENGTH = 15;
      179+     522        /*
      180+     523                 accumulator attributes
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:287  
      181+     524        */
      182+     525        %EQU QI#ACCUMULATOR_DEC = 15;  /* IMPLIED DEC POSITION */
      183+     526        %EQU QI#ACCUMULATOR_LEN = 31;  /* LENGTH OF ACCUMULATOR */
      184+     527        %EQU QI#ACCUMULATOR_OFFSET = 0;   /* IMPLIED OFFSET(ATOM) */
      185+     528        %EQU QI#ACCUMULATOR_TYPE = QI#TYPE_PACKED; /* IMPLIED DATA TYPE OF ACCUMULATOR */
      186+     529        /*
      187+     530                 PICture string stuff
      188+     531        */
      189+     532        %EQU QI#ALPHANUMERIC_PICTURE_STRING = 0;
      190+     533        %EQU QI#NUMERIC_PICTURE_STRING = 1;
      191+     534        %EQU QI#PIC_M_9_A_X = 0;
      192+     535        %EQU QI#PIC_M_B = 1;
      193+     536        %EQU QI#PIC_M_0 = 2;
      194+     537        %EQU QI#PIC_M_SLASH = 3;
      195+     538        /*
      196+     539                 values for operand classes
      197+     540        */
      198+     541        %EQU QI#SOURCE_CLASS_FIRST = 0;
      199+     542        %EQU QI#SOURCE_REG = QI#SOURCE_CLASS_FIRST;
      200+     543        %EQU QI#SOURCE_ALL = 1;
      201+     544        %EQU QI#SOURCE_FIG = 2;
      202+     545        %EQU QI#SOURCE_ERR = 3;
      203+     546        %EQU QI#SOURCE_CLASS_LAST = QI#SOURCE_ERR;
      204+     547        /*
      205+     548                 bit masks
      206+     549        */
      207+     550        %EQU QI#FILL_BIT_MASK = BITBIN('4000'X);
      208+     551        %EQU QI#INDIRECT_BIT_MASK = BITBIN('8000'X);
      209+     552        %EQU QI#IS_ALL_LITERAL_BIT_MASK = BITBIN('0100'X);
      210+     553        %EQU QI#IS_FORM_VARIABLE_BIT_MASK = BITBIN('0080'X);
      211+     554        %EQU QI#IS_TEMP_BIT_MASK = BITBIN('0200'X);
      212+     555        %EQU QI#TEMP_WORD0_MASK = BITBIN('8280'X);
      213+     556        /*
      214+     557           Presence bits for COBOL DADs
      215+     558        */
      216+     559        %EQU QI#P_COBOL_FIRST_INDEX = 1;
      217+     560        %EQU QI#P_COBOL_LAST_INDEX = 3;
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:288  
      218+     561        %EQU QI#P_PICTURE_STRING_INDEX = 1;
      219+     562        %EQU QI#P_LEGAL_INDEX = 2;
      220+     563        %EQU QI#P_ERROR_MESSAGE_INDEX = 3;
      221+     564        /*
      222+     565           Presence bits for FIELD DADs
      223+     566        */
      224+     567        %EQU QI#P_FIELD_FIRST_INDEX = 0;
      225+     568        %EQU QI#P_FIELD_LAST_INDEX = 5;
      226+     569        %EQU QI#P_FILL_SIZE_INDEX = 0;
      227+     570        %EQU QI#P_CLASS_INDEX = 1;
      228+     571        %EQU QI#P_DEFAULT_INDEX = 2;
      229+     572        %EQU QI#P_PROMPT_INDEX = 3;
      230+     573        %EQU QI#P_REPEATS_INDEX = 4;
      231+     574        %EQU QI#P_SEPARATED_INDEX = 5;
      232+     575        /*
      233+     576           conditional result EQUs
      234+     577        */
      235+     578        %EQU QI#IF_GREATER     = 0;   /* '0000'X */
      236+     579        %EQU QI#IF_LESS        = 1;   /* '0001'X */
      237+     580        %EQU QI#IF_EQUAL       = 2;   /* '0002'X */
      238+     581        %EQU QI#IF_NOT_GREATER = 16;  /* '0010'X */
      239+     582        %EQU QI#IF_NOT_LESS    = 17;  /* '0011'X */
      240+     583        %EQU QI#IF_NOT_EQUAL   = 18;  /* '0012'X */
      241+     584        /*
      242+     585           various values within the ATTRIBUTE word of the IF CLASS
      243+     586           op-code sequence.
      244+     587        */
      245+     588        %EQU QI#IF_CLASS_ALPHA = 8;
      246+     589        %EQU QI#IF_CLASS_NUMERIC = 4;
      247+     590        %EQU QI#IF_CLASS_DIGITS = 2;
      248+     591        /*
      249+     592           various values within the ATTRIBUTE word of the IF STATUS (IFINDR)
      250+     593           op-code sequence.
      251+     594        */
      252+     595        %EQU QI#IF_INDICATOR_ACTIVE = 0;
      253+     596        %EQU QI#IF_INDICATOR_ENABLED_INPUT = 1;
      254+     597        %EQU QI#IF_INDICATOR_ENABLED_OUTPUT = 2;
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:289  
      255+     598        %EQU QI#IF_INDICATOR_ENABLED_IO = 3;
      256+     599        %EQU QI#IF_INDICATOR_PRESENTED = 4;
      257+     600        %EQU QI#IF_INDICATOR_AVAILABLE = 5;
      258+     601        /*
      259+     602           values for CLASS_TYPE within QI$FIELD_DAD
      260+     603        */
      261+     604        %EQU QI#ABSOLUTELY_NO_CLASS = 0;
      262+     605        %EQU QI#CLASS_NUMERIC = 1;
      263+     606        %EQU QI#CLASS_ALPHA = 2;
      264+     607        %EQU QI#CLASS_ALPHABET = 3;
      265+     608        /*
      266+     609           various values within the QI$LEGAL_CONDITION_BLOCK structure
      267+     610           referring to different species of LEGAL checking.
      268+     611        */
      269+     612        %EQU QI#LEGAL_LIST = 0;
      270+     613        %EQU QI#LEGAL_ARRAY = 1;
      271+     614        %EQU QI#LEGAL_RANGE = 2;
      272+     615        /*
      273+     616           various values within the TYPE field of the ACCEPT
      274+     617           op-code sequence.
      275+     618        */
      276+     619        %EQU QI#ACCEPT_FIELD = 0;
      277+     620        %EQU QI#ACCEPT_DATE = 1;
      278+     621        %EQU QI#ACCEPT_DAY = 2;
      279+     622        %EQU QI#ACCEPT_TIME = 3;
      280+     623        %EQU QI#ACCEPT_DAY_OF_WEEK = 4;
      281+     624        %EQU QI#ACCEPT_TERMINAL_ATTRIBUTES = 5;
      282+     625        %EQU QI#ACCEPT_LOADER = 6;
      283+     626        /*
      284+     627           various values for QI$TERMINAL_ATTRIBUTES items
      285+     628           for ACCEPT *thing* FROM TERMINAL-ATTRIBUTES.
      286+     629        */
      287+     630        %EQU QI#CAPABLE_OF_NOTHIN = '0';
      288+     631        %EQU QI#CAPABLE_OF_INPUT = '1';
      289+     632        %EQU QI#CAPABLE_OF_OUTPUT = '2';
      290+     633        %EQU QI#CAPABLE_OF_I_O = '3';
      291+     634        %EQU QI#DEVICE_IS_HARDWIRED = '1';
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:290  
      292+     635        %EQU QI#DEVICE_IS_DIALED_UP = '2';
      293+     636        %EQU QI#DEBUGGER_IS_NOT_ASSOCIATED = '0';
      294+     637        %EQU QI#DEBUGGER_IS_ASSOCIATED = '1';
      295+     638        %EQU QI#DEVICE_IS_NOT_HARDCOPY = '0';
      296+     639        %EQU QI#DEVICE_IS_HARDCOPY = '1';
      297+     640        /*
      298+     641           various values within the TYPE field of the DISPLAY
      299+     642           op-code sequence.
      300+     643        */
      301+     644        %EQU QI#DISPLAY_FIELD = 0;
      302+     645        %EQU QI#DISPLAY_ALARM = 1;
      303+     646        /*
      304+     647           various values within the ATTRIBUTE word of the INSPECT
      305+     648           op-code sequence.
      306+     649        */
      307+     650        %EQU QI#INSPECT_NO_INITIAL = 0;
      308+     651        %EQU QI#INSPECT_BEFORE_INITIAL = 1;
      309+     652        %EQU QI#INSPECT_AFTER_INITIAL = 2;
      310+     653        %EQU QI#INSPECT_CHARACTERS = 0;
      311+     654        %EQU QI#INSPECT_ALL = 1;
      312+     655        %EQU QI#INSPECT_LEADING = 2;
      313+     656        %EQU QI#INSPECT_FIRST = 4;
      314+     657        /*
      315+     658           Various EQUates for QCU$USE stuff.
      316+     659        */
      317+     660        %EQU QI#USE_INVALID_RETURN = 0;
      318+     661                          /* INVALID clause is present; return to level 0.  */
      319+     662        %EQU QI#USE_INVALID_RETRY = 1;
      320+     663                          /* Retry current operation/atomic unit.  */
      321+     664        %EQU QI#USE_INVALID_SKIP_TO_NEXT = 2;
      322+     665                          /* Continue at "next" operation/atomic unit.  */
      323+     666        %EQU QI#USE_INVALID_OK = 3;
      324+     667                          /* USE code was never called:  everything's OK.  */
      325+     668
      326+     669        %EQU QI#STANDARD = 0;
      327+     670        %EQU QI#VERIFY = 1;
      328+     671
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:291  
      329+     672                          /*  QI_1.USE_DEFAULT_IO value EQUs.  */
      330+     673        %EQU QI#USE_DEFAULT_NONE = 0;
      331+     674        %EQU QI#USE_DEFAULT_INPUT = 1;
      332+     675        %EQU QI#USE_DEFAULT_OUTPUT = 2;
      333+     676        %EQU QI#USE_DEFAULT_VERIFY = 3;
      334+     677
      335+     678                          /*  Internal USE-type EQUs.  */
      336+     679        %EQU QI#USE_FILE_TYPE = 0;
      337+     680        %EQU QI#USE_DEFAULT_TYPE = 1;
      338+     681
      339+     682        /*
      340+     683           miscellaneous / useful stuff
      341+     684        */
      342+     685        %EQU FOREVER = CHARTEXT('WHILE (''1''B)');
      343+     686        %EQU NEVER   = CHARTEXT('WHILE (''0''B)');
      344+     687        %EQU YES = '1'B;
      345+     688        %EQU NO = '0'B;
      346+     689        %EQU ON = '1'B;
      347+     690        %EQU OFF = '0'B;
      348+     691        %EQU SET = '1'B;
      349+     692        %EQU RESET = '0'B;
      350+     693        %EQU TRUE = '1'B;
      351+     694        %EQU FALSE = '0'B;
      352+     695        %EQU QI#DONT_CHECK_FOR_SIZE_ERROR = 0;
      353+     696        %EQU QI#CHECK_FOR_SIZE_ERROR = 1;
      354+     697        %EQU QI#SOME_HUGE_NUMBER = BITBIN('FFFF'X);
      355+     698        /*
      356+     699           macro depth gauge
      357+     700        */
      358+     701        %SET QI#MACRO_DEPTH = 0;
       18      702          %INCLUDE QI_PERR_C;
        1+     703        /*M* QI_PERR_C:  Error code EQUates for the FPL interpreter.  */
        2+     704        /*T***********************************************************/
        3+     705        /*T*                                                         */
        4+     706        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5+     707        /*T*                                                         */
        6+     708        /*T***********************************************************/
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:292  
        7+     709        /*X* DMC,PLM=4,IND=0,DCI=4,CSI=2,IAD=2,DTI=2,AND,ECI=0,DIN=2,STI=2 */
        8+     710
        9+     711        /*  The following are for QB?, QC?, and QI FCG errcodes.  */
       10+     712        %EQU E$FILE_NOT_OPEN                 = 1;
       11+     713        %EQU E$FILE_ALREADY_OPEN             = 2;
       12+     714        %EQU E$FILE_ALREADY_CLOSED           = 4;
       13+     715        %EQU E$FILE_NOT_OPEN_INPUT           = 5;
       14+     716        %EQU E$FILE_NOT_OPEN_OUTPUT          = 6;
       15+     717        %EQU E$FRAME_NOT_ACTIVE              = 7;
       16+     718        %EQU E$POSTREAD_ILLEGAL_DEFAULT      = 8;
       17+     719        %EQU E$RETRY_COUNT_EXHAUSTED         = 9;
       18+     720        %EQU E$VERIFY_GET_FIELD_DISABLED     = 10;
       19+     721        %EQU E$VERIFY_ILLEGAL_DEFAULT        = 11;
       20+     722        %EQU E$FRAME_ALREADY_ACTIVATED       = 12;
       21+     723        %EQU E$FRAME_ALREADY_DEACTIVATED     = 13;
       22+     724        %EQU E$FIELD_OVERLAPS                = 14;
       23+     725        %EQU E$FIELD_SPACE_CADET             = 15;
       24+     726        %EQU E$FORM_READ_ERROR               = 16;
       25+     727        %EQU E$FORM_WRITE_ERROR              = 17;
       26+     728        %EQU E$DE_EDIT_ILLEGAL_SOURCE        = 18;
       27+     729        %EQU E$CALL_UNSATISFIED_REFERENCE    = 19;
       28+     730        %EQU E$COMMERCIAL_ILLEGAL_CHARACTER  = 20;
       29+     731        %EQU E$COMMERCIAL_DIVIDE_BY_ZERO     = 21;
       30+     732        %EQU E$BINARY_OVERFLOW               = 22;
       31+     733        %EQU E$SUBSCRIPT_OUT_OF_RANGE        = 23;
       32+     734        %EQU E$SUBSCRIPT_OUT_OF_SIGHT        = 24;
       33+     735        %EQU E$SUBSCRIPT_ZERO                = 25;
       34+     736        %EQU E$LOAD_ILLEGAL_FID              = 26;
       35+     737        %EQU E$LOAD_ERROR                    = 27;
       36+     738        %EQU E$NO_LOADER_INFORMATION         = 28;
       37+     739        %EQU E$ABORT_EXECUTED                = 29;
       38+     740        %EQU E$INTERNAL_COMPILER_ERROR       = 50;
       39+     741        %EQU E$INTERNAL_INTERPRETER_ERROR    = 51;
       40+     742        %EQU E$UNEXPECTED_QCC_ALTRET         = 52;
       41+     743        %EQU E$INTERPRETER_TRAP              = 53;
       42+     744        %EQU E$UNEXPECTED_ALTRET             = 54;
       43+     745        %EQU E$INCOMPATIBLE_VERSION          = 55;
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:293  
       44+     746        %EQU E$INSUFFICIENT_MEMORY           = 56;
       45+     747        %EQU E$TRANSACTION_READ_ERROR        = 200;
       46+     748        %EQU E$TPAP_ABORT                    = 201;
       47+     749        %EQU E$TRANSACTION_TYPE_STAR         = 202;
       48+     750        %EQU E$TRANSACTION_TYPE_ILLEGAL      = 203;
       49+     751        %EQU E$TRANSACTION_TYPE_WILD         = 204;
       50+     752        %EQU E$TRANSACTION_WRITE_ERROR       = 205;
       51+     753        %EQU E$TRANSACTION_RRR_ERROR         = 206;
       52+     754        %EQU E$TRANSACTION_LOST_DATA         = 207;
       53+     755        %EQU E$ILLEGAL_VALUE                 = 100;
       54+     756        %EQU E$EMBEDDED_BLANKS               = 101;
       55+     757        %EQU E$SIGN_ONLY                     = 102;
       56+     758        %EQU E$NON_NUMERICAL                 = 103;
       57+     759        %EQU E$ILLEGAL_CHARACTER             = 104;
       58+     760        %EQU E$MINIMUM_SIZE                  = 105;
       59+     761        %EQU E$MAXIMUM_SIZE_LEADING_SIGN     = 106;
       60+     762        %EQU E$MAXIMUM_SIZE_TRAILING_SIGN    = 107;
       61+     763        %EQU E$ILLEGAL_INPUT                 = 108;
       62+     764        %EQU E$ENTRY_REQUIRED                = 109;
       63+     765        %EQU E$FULLA_FILL                    = 110;
       64+     766
       65+     767        /*  The following are op-code equates
       66+     768            (gen'd that way by the compiler),
       67+     769            used for QIO (O for Opcode) FCG errcodes.  */
       68+     770        %EQU QI#OP_FPL_START   =  0;
       69+     771        %EQU QI#OP_ACCEPT      =  0;
       70+     772        %EQU QI#OP_ABORT       =  1;
       71+     773        %EQU QI#OP_BREAK       =  0002; /* BRK instruction */
       72+     774        %EQU QI#OP_ADD         =  3;
       73+     775        %EQU QI#OP_ADDX        =  4;
       74+     776        %EQU QI#OP_CALL        =  5;
       75+     777        %EQU QI#OP_DIV         =  6;
       76+     778        %EQU QI#OP_DIVX        =  7;
       77+     779        %EQU QI#OP_GOTO        =  8;
       78+     780        %EQU QI#OP_GOTODP      =  9;
       79+     781        %EQU QI#OP_IFRELN      =  10;
       80+     782        %EQU QI#OP_IFRELA      =  11;
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:294  
       81+     783        %EQU QI#OP_IFCLS       =  12;
       82+     784        %EQU QI#OP_IFCNDN      =  13;
       83+     785        %EQU QI#OP_IFCNDA      =  14;
       84+     786        %EQU QI#OP_IFIDX       =  15;
       85+     787        %EQU QI#OP_INSPECT     =  16;
       86+     788        %EQU QI#OP_MOVG        =  17;
       87+     789        %EQU QI#OP_MOVA        =  18;
       88+     790        %EQU QI#OP_MOVN        =  19;
       89+     791        %EQU QI#OP_MOVP        =  20;
       90+     792        %EQU QI#OP_MOVB        =  21;
       91+     793        %EQU QI#OP_MOVAJ       =  22;
       92+     794        %EQU QI#OP_MOVAE       =  23;
       93+     795        %EQU QI#OP_MOVNE       =  24;
       94+     796        %EQU QI#OP_MOVDE       =  25;
       95+     797        %EQU QI#OP_PERFM       =  27;
       96+     798        %EQU QI#OP_PERFMT      =  29;
       97+     799        %EQU QI#OP_SET         =  30;
       98+     800        %EQU QI#OP_SETD        =  31;
       99+     801        %EQU QI#OP_SETX        =  32;
      100+     802        %EQU QI#OP_SETXUD      =  33;
      101+     803        %EQU QI#OP_CNVBNX      =  34;
      102+     804        %EQU QI#OP_CNVBPX      =  35;
      103+     805        %EQU QI#OP_CNVBBX      =  36;
      104+     806        %EQU QI#OP_STOP_RUN    =  37;
      105+     807        %EQU QI#OP_STOP_1      =  38;
      106+     808        %EQU QI#OP_SUB         =  39;
      107+     809        %EQU QI#OP_SUBX        =  40;
      108+     810        %EQU QI#OP_ROUND       =  41;
      109+     811        %EQU QI#OP_CLOSE       =  42;
      110+     812        %EQU QI#OP_ACTIVATE    =  43;
      111+     813        %EQU QI#OP_DEACTIVATE  =  44;
      112+     814        %EQU QI#OP_LOAD        =  45;
      113+     815        %EQU QI#OP_ENABLE      =  46;
      114+     816        %EQU QI#OP_DISABLE     =  47;
      115+     817        %EQU QI#OP_OPEN        =  49;
      116+     818        %EQU QI#OP_READ_TRAN   =  53;
      117+     819        %EQU QI#OP_READ_FORM   =  54;
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:295  
      118+     820        %EQU QI#OP_MULT        =  56;
      119+     821        %EQU QI#OP_MULTX       =  57;
      120+     822        %EQU QI#OP_ALL_LITERAL =  58;
      121+     823        %EQU QI#OP_APPLY       =  59;
      122+     824        %EQU QI#OP_IFINDR      =  63;
      123+     825        %EQU QI#OP_WRITE_TRAN  =  64;
      124+     826        %EQU QI#OP_WRITE_FORM  =  65;
      125+     827        %EQU QI#OP_PRESENT     =  66;
      126+     828        %EQU QI#OP_VERIFY      =  67;
      127+     829        %EQU QI#OP_CLEAR       =  68;
      128+     830        %EQU QI#OP_DISPLAY     =  69;
      129+     831        %EQU QI#OP_EXIT        =  70;
      130+     832        %EQU QI#OP_SUBSCR      =  75;
      131+     833        %EQU QI#OP_CNVPN       =  76;
      132+     834        %EQU QI#OP_CNVBN       =  77;
      133+     835        %EQU QI#OP_MOVNA       =  78;
      134+     836        %EQU QI#OP_MOVPA       =  79;
      135+     837        %EQU QI#OP_MOVBA       =  80;
      136+     838        %EQU QI#OP_MOVNEA      =  81;
      137+     839        %EQU QI#OP_CNVNBT      =  82;
      138+     840        %EQU QI#OP_CNVPBT      =  83;
      139+     841        %EQU QI#OP_INIT        =  84;
      140+     842        %EQU QI#OP_IFRELG      =  88;
      141+     843        %EQU QI#OP_JAZ         =  91;
      142+     844        %EQU QI#OP_ZACCEPT     =  92;
      143+     845        %EQU QI#OP_ZDISPLAY    =  93;
      144+     846        %EQU QI#OP_JND         =  94;
      145+     847        %EQU QI#OP_FORM_START  =  102;
      146+     848        %EQU QI#OP_SEARCH      =  103;
      147+     849        %EQU QI#OP_INDEX       =  104;
      148+     850
      149+     851        %EQU QI#OP_ACCEPT_TEXT     = '00';
      150+     852        %EQU QI#OP_ABORT_TEXT      = '01';
      151+     853        %EQU QI#OP_CLOSE_TEXT      = '42';
      152+     854        %EQU QI#OP_ACTIVATE_TEXT   = '43';
      153+     855        %EQU QI#OP_DEACTIVATE_TEXT = '44';
      154+     856        %EQU QI#OP_LOAD_TEXT       = '45';
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:296  
      155+     857        %EQU QI#OP_ENABLE_TEXT     = '46';
      156+     858        %EQU QI#OP_DISABLE_TEXT    = '47';
      157+     859        %EQU QI#OP_OPEN_TEXT       = '49';
      158+     860        %EQU QI#OP_READ_TRAN_TEXT  = '53';
      159+     861        %EQU QI#OP_READ_FORM_TEXT  = '54';
      160+     862        %EQU QI#OP_APPLY_TEXT      = '59';
      161+     863        %EQU QI#OP_IFINDR_TEXT     = '63';
      162+     864        %EQU QI#OP_WRITE_TRAN_TEXT = '64';
      163+     865        %EQU QI#OP_WRITE_FORM_TEXT = '65';
      164+     866        %EQU QI#OP_PRESENT_TEXT    = '66';
      165+     867        %EQU QI#OP_VERIFY_TEXT     = '67';
      166+     868        %EQU QI#OP_CLEAR_TEXT      = '68';
      167+     869        %EQU QI#OP_DISPLAY_TEXT    = '69';
       19      870          %INCLUDE QI_MACROS_M;
        1+     871        /*M* QI_MACROS_M:  MACRO defs / invocs for the FPL interpreter.  */
        2+     872        /*T***********************************************************/
        3+     873        /*T*                                                         */
        4+     874        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5+     875        /*T*                                                         */
        6+     876        /*T***********************************************************/
        7+     877
        8+     878        /*P* NAME:         QI_MACROS_M
        9+     879             PURPOSE:      To provide the MACROs necessary to generate
       10+     880                           descriptors for the CIP hardware, the context
       11+     881                           area for the FPL interpreter, and to frame
       12+     882                           various areas of the FPL program itself.
       13+     883             DESCRIPTION:  QI_MACROS_M contains MACROs which define:
       14+     884                           1)  CIP operations (QI@CIP_OPERATION), which
       15+     885                               are blocks of data passed to the QCC$xxxx
       16+     886                               routines to execute a desired CIP instruction
       17+     887                               (ALR, etc.);
       18+     888                           2)  CIP descriptors (QI_CIP_DESCRIPTOR), which
       19+     889                               define the descriptors used to locate and
       20+     890                               describe data manipulated by the CIP;
       21+     891                           3)  the FPL interpreter context (QI_1), which
       22+     892                               is a STATIC area allocated one-per-FPL-user;
       23+     893                           4)  based structures which define the size and
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:297  
       24+     894                               shape of entities within the user's FPL
       25+     895                               program;
       26+     896                           5)  based structures which define the dynamic
       27+     897                               area allocated to fields when they've been
       28+     898                               M$DCLFLDed;
       29+     899                           6)  CONSTANT FPTs;
       30+     900                           7)  whatever else is in here.
       31+     901        */
       32+     902        %EJECT;
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:298  
       33+     903        /*
       34+     904                                %%%%%     %%%%   %%%%%%
       35+     905                               %%   %%     %%    %%   %%
       36+     906                               %%          %%    %%   %%
       37+     907                               %%          %%    %%%%%%
       38+     908                               %%          %%    %%
       39+     909                               %%   %%     %%    %%
       40+     910                                %%%%%     %%%%   %%
       41+     911                                                   %%%
       42+     912                                                   %%%
       43+     913              %%%%%   %% %%%    %%%%%   %% %%%%     %%     %%%%%%
       44+     914             %%   %%  %%%  %%  %%   %%  %%%%       %%     %%
       45+     915             %%   %%  %%%  %%  %%%%%%%  %%%                %%%%%
       46+     916             %%   %%  %%%  %%  %%       %%                     %%
       47+     917              %%%%%   %% %%%    %%%%%   %%                %%%%%%
       48+     918                      %%
       49+     919                      %%
       50+     920                                                                            */
       51+     921        /*D* NAME:         QI@CIP_OPERATION
       52+     922             PURPOSE:      Used to generate a structure passed to
       53+     923                           QCC$xxxx modules.
       54+     924             DESCRIPTION:  This MACRO generates 3 two-word CIP descriptors,
       55+     925                           PTRs to data which they describe, and a myriad
       56+     926                           of other parameters, all to eventually be passed
       57+     927                           to one or more QCC$xxxx routines.  Not all
       58+     928                           descriptors or parameters generated will be used
       59+     929                           by any one QCC$xxxx module, but the MACRO parameter
       60+     930                           TYPE allows the user to specify which xxxx the
       61+     931                           structure is primarily intended for.  For example,
       62+     932                           the user who wishes to perform an ALR operation
       63+     933                           from a source string to a target string would
       64+     934                           invoke the macro with TYPE=ALR, and would then
       65+     935                           be allowed to specify several initialization
       66+     936                           values for other parameters.  When the structure
       67+     937                           is actually passed to QCC$ALR, only the first
       68+     938                           two CIP descriptors, their data pointers, the
       69+     939                           first two LENs, the first two INXs, and FILL_CHAR
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:299  
       70+     940                           will actually be used.
       71+     941                           Also, a pool of commonly-used QI@CIP_OPERATIONs
       72+     942                           is kept with STCLASS = CONSTANT and
       73+     943                           NAME = QI_name:  see GENERAL_PURPOSE_CIPS.
       74+     944        */
       75+     945
       76+     946          %MACRO QI@CIP_OPERATION
       77+     947                 ( NAME = QI@CIP_OPERATION,
       78+     948                   CIPS_NAME = CIP,
       79+     949                   FIRST_CIP_NAME = S,
       80+     950                   SECOND_CIP_NAME = T,
       81+     951                   THIRD_CIP_NAME = AUX,
       82+     952                   DATAS_NAME = DATA,
       83+     953                   FIRST_DATA_NAME = S$,
       84+     954                   SECOND_DATA_NAME = T$,
       85+     955                   THIRD_DATA_NAME = AUX$,
       86+     956                   LENS_NAME = LEN,
       87+     957                   FIRST_LEN_NAME = S,
       88+     958                   SECOND_LEN_NAME = T,
       89+     959                   THIRD_LEN_NAME = AUX,
       90+     960                   DECS_NAME = DEC,
       91+     961                   FIRST_DEC_NAME = S,
       92+     962                   SECOND_DEC_NAME = T,
       93+     963                   THIRD_DEC_NAME = AUX,
       94+     964                   SRCH_VRFY_ARGS_NAME = SRCH_VRFY_ARGS,
       95+     965                   SRCH_VRFY_ARGS_LEN_NAME = LEN,
       96+     966                   SRCH_VRFY_ARGS_LIST_LEN_NAME = LIST_LEN,
       97+     967                   SHIFT_COUNTS_NAME = SHIFT_COUNT,
       98+     968                   FIRST_SHIFT_COUNT_NAME = S,
       99+     969                   SECOND_SHIFT_COUNT_NAME = T,
      100+     970                   THIRD_SHIFT_COUNT_NAME = AUX,
      101+     971                   SRCH_VRFY_ELEMS_NAME = SRCH_VRFY_ELEMS,
      102+     972                   SRCH_VRFY_ELEMS_LEN_NAME = LEN,
      103+     973                   SRCH_VRFY_ELEMS_LIST_LEN_NAME = LIST_LEN,
      104+     974                   INXS_NAME = INX,
      105+     975                   FIRST_INX_NAME = S,
      106+     976                   SECOND_INX_NAME = T,
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:300  
      107+     977                   THIRD_INX_NAME = AUX,
      108+     978                   FILL_CHAR_NAME = FILL_CHAR,
      109+     979                   FILL_CHAR_TEXT_NAME = TEXT,
      110+     980                   ROUND_NAME = ROUND,
      111+     981                   SRCH_RESULT_NAME = SRCH_RESULT,
      112+     982                   SRCH_RESULT_ARG_NUMBER_NAME = ARG_NUMBER,
      113+     983                   SRCH_RESULT_DISP_NAME = DISP,
      114+     984                   VRFY_RESULT_NAME = VRFY_RESULT,
      115+     985                   VRFY_RESULT_DISP_NAME = DISP,
      116+     986                   PICTURE_STRING_NAME = PICTURE_STRING,
      117+     987                   PICTURE_STRING_INT_LEN_NAME = INTERMEDIATE_RESULT_LEN,
      118+     988                   PICTURE_STRING_DEC_NAME = DEC,
      119+     989                   COMP_RESULT_NAME = COMP_RESULT,
      120+     990                   SIZE_ERROR_NAME = SIZE_ERROR,
      121+     991                   TARGET_SIZE_NAME = TARGET_SIZE,
      122+     992                   STCLASS = "  ",
      123+     993                   LVL = 1,
      124+     994                   TYPE ( ACM = "ACM",
      125+     995                          ALR = "ALR",
      126+     996                          CBD = "CBD",
      127+     997                          CDB = "CDB",
      128+     998                          DAD = "DAD",
      129+     999                          DCM = "DCM",
      130+    1000                          DDV = "DDV",
      131+    1001                          DLS = "DLS",
      132+    1002                          DMC = "DMC",
      133+    1003                          DME = "DME",
      134+    1004                          DML = "DML",
      135+    1005                          DRS = "DRS",
      136+    1006                          DSB = "DSB",
      137+    1007                          MAT = "MAT",
      138+    1008                          SRCH = "SRCH",
      139+    1009                          VRFY = "VRFY",
      140+    1010                          ANY ) = "ALR",
      141+    1011                   FIRST_CIP_TYPE ( DISPLAY = 0,
      142+    1012                                    PACKED = 1,
      143+    1013                                    BINARY = 2,
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:301  
      144+    1014                                    ALPHANUMERIC = 3,
      145+    1015                                    ANY ) = 3,
      146+    1016                   FIRST_CIP_OFFSET = 0,
      147+    1017                   FIRST_CIP_LEN = 0,
      148+    1018                   FIRST_CIP_SIGN ( UNSIGNED = 0,
      149+    1019                                    TRAILING = 1,
      150+    1020                                    LEADING = 2,
      151+    1021                                    OVERPUNCHED = 3,
      152+    1022                                    ANY ) = 0,
      153+    1023                   FIRST_CIP_AS ( DEFAULT = "BITBIN('B'X)",
      154+    1024                                  INDEX = "BITBIN('1B'X)",
      155+    1025                                  ANY ) = "BITBIN('B'X)",
      156+    1026                   FIRST_CIP_FILL ( YES = 1,
      157+    1027                                    NO = 0,
      158+    1028                                    ANY ) = 1,
      159+    1029                   SECOND_CIP_TYPE ( DISPLAY = 0,
      160+    1030                                     PACKED = 1,
      161+    1031                                     BINARY = 2,
      162+    1032                                     ALPHANUMERIC = 3,
      163+    1033                                     ANY ) = 3,
      164+    1034                   SECOND_CIP_OFFSET = 0,
      165+    1035                   SECOND_CIP_LEN = 0,
      166+    1036                   SECOND_CIP_SIGN ( UNSIGNED = 0,
      167+    1037                                     TRAILING = 1,
      168+    1038                                     LEADING = 2,
      169+    1039                                     OVERPUNCHED = 3,
      170+    1040                                     ANY ) = 0,
      171+    1041                   SECOND_CIP_AS ( DEFAULT = "BITBIN('B'X)",
      172+    1042                                   INDEX = "BITBIN('2B'X)",
      173+    1043                                   ANY ) = "BITBIN('B'X)",
      174+    1044                   SECOND_CIP_FILL ( YES = 1,
      175+    1045                                     NO = 0,
      176+    1046                                     ANY ) = 1,
      177+    1047                   THIRD_CIP_TYPE ( DISPLAY = 0,
      178+    1048                                    PACKED = 1,
      179+    1049                                    BINARY = 2,
      180+    1050                                    ALPHANUMERIC = 3,
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:302  
      181+    1051                                    ANY ) = 3,
      182+    1052                   THIRD_CIP_OFFSET = 0,
      183+    1053                   THIRD_CIP_LEN = 0,
      184+    1054                   THIRD_CIP_SIGN ( UNSIGNED = 0,
      185+    1055                                    TRAILING = 1,
      186+    1056                                    LEADING = 2,
      187+    1057                                    OVERPUNCHED = 3,
      188+    1058                                    ANY ) = 0,
      189+    1059                   THIRD_CIP_AS ( DEFAULT = "BITBIN('B'X)",
      190+    1060                                  INDEX = "BITBIN('3B'X)",
      191+    1061                                  ANY ) = "BITBIN('B'X)",
      192+    1062                   THIRD_CIP_FILL ( YES = 1,
      193+    1063                                    NO = 0,
      194+    1064                                    ANY ) = 1,
      195+    1065                   WITH_DATAS ( YES = '1'B,
      196+    1066                                 NO = '0'B,
      197+    1067                                 ANY ) = '1'B,
      198+    1068                   FIRST_DATA = "ADDR(NIL)",
      199+    1069                   SECOND_DATA = "ADDR(NIL)",
      200+    1070                   THIRD_DATA = "ADDR(NIL)",
      201+    1071                   WITH_PARAMS ( YES = '1'B,
      202+    1072                                 NO = '0'B,
      203+    1073                                 ANY ) = '1'B,
      204+    1074                   FIRST_LEN = 0,
      205+    1075                   SECOND_LEN = 0,
      206+    1076                   THIRD_LEN = 0,
      207+    1077                   FIRST_DEC = 0,
      208+    1078                   SECOND_DEC = 0,
      209+    1079                   THIRD_DEC = 0,
      210+    1080                   SRCH_VRFY_ARGS_LEN = 0,
      211+    1081                   SRCH_VRFY_ARGS_LIST_LEN = 0,
      212+    1082                   FIRST_SHIFT_COUNT = 0,
      213+    1083                   SECOND_SHIFT_COUNT = 0,
      214+    1084                   THIRD_SHIFT_COUNT = 0,
      215+    1085                   SRCH_VRFY_ELEMS_LEN = 0,
      216+    1086                   SRCH_VRFY_ELEMS_LIST_LEN = 0,
      217+    1087                   FIRST_INX = 0,
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:303  
      218+    1088                   SECOND_INX = 0,
      219+    1089                   THIRD_INX = 0,
      220+    1090                   FILL_CHAR = %QI#CIP_BLANK_FILL,
      221+    1091                   ROUND = 0,
      222+    1092                   SRCH_RESULT_ARG_NUMBER = 0,
      223+    1093                   SRCH_RESULT_DISP = 0,
      224+    1094                   VRFY_RESULT_DISP = 0,
      225+    1095                   PICTURE_STRING_LEN = 0,
      226+    1096                   PICTURE_STRING_DEC = 0,
      227+    1097                   COMP_RESULT = 0,
      228+    1098                   SIZE_ERROR = 0,
      229+    1099                   TARGET_SIZE = 0,
      230+    1100                   END_STRUCTURE ( YES = ";",
      231+    1101                                   NO = ",",
      232+    1102                                   ANY ) = ";" );
      233+    1103
      234+    1104            %BEGIN_MACRO ( STCLASS = STCLASS );
      235+    1105
      236+    1106            %LSET THE_TYPE = TEXTCHAR (TYPE);
      237+    1107            %IF LVL = 1;
      238+    1108          DCL 1 NAME STCLASS DALIGNED,
      239+    1109            %ELSE;
      240+    1110              %(LVL) NAME DALIGNED,
      241+    1111            %ENDIF;
      242+    1112
      243+    1113                %(LVL+1) CIPS_NAME,
      244+    1114
      245+    1115            %LSET LEVEL = %(LVL+2);
      246+    1116            %IF TEXTCHAR(END_STRUCTURE)=';' AND ( NOT WITH_DATAS ) AND ( NOT WITH_PARAMS );
      247+    1117              %LSET CIPS_END_STRUCTURE = CHARTEXT(';');
      248+    1118            %ELSE;
      249+    1119              %LSET CIPS_END_STRUCTURE = CHARTEXT(',');
      250+    1120            %ENDIF;
      251+    1121            %QI_CIP_DESCRIPTOR ( NAME = FIRST_CIP_NAME,
      252+    1122                                 STCLASS = STCLASS,
      253+    1123                                 LVL = %LEVEL,
      254+    1124                                 TYPE = FIRST_CIP_TYPE,
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:304  
      255+    1125                                 OFFSET = FIRST_CIP_OFFSET,
      256+    1126                                 SIGN = FIRST_CIP_SIGN,
      257+    1127                                 LEN = FIRST_CIP_LEN,
      258+    1128                                 AS = FIRST_CIP_AS,
      259+    1129                                 DISP = SOURCE,
      260+    1130                                 FILL = FIRST_CIP_FILL,
      261+    1131                                 END_STRUCTURE = NO );
      262+    1132            %QI_CIP_DESCRIPTOR ( NAME = SECOND_CIP_NAME,
      263+    1133                                 STCLASS = STCLASS,
      264+    1134                                 LVL = %LEVEL,
      265+    1135                                 TYPE = SECOND_CIP_TYPE,
      266+    1136                                 OFFSET = SECOND_CIP_OFFSET,
      267+    1137                                 SIGN = SECOND_CIP_SIGN,
      268+    1138                                 LEN = SECOND_CIP_LEN,
      269+    1139                                 AS = SECOND_CIP_AS,
      270+    1140                                 DISP = TARGET,
      271+    1141                                 FILL = SECOND_CIP_FILL,
      272+    1142                                 END_STRUCTURE = NO );
      273+    1143            %QI_CIP_DESCRIPTOR ( NAME = THIRD_CIP_NAME,
      274+    1144                                 STCLASS = STCLASS,
      275+    1145                                 LVL = %LEVEL,
      276+    1146                                 TYPE = THIRD_CIP_TYPE,
      277+    1147                                 OFFSET = THIRD_CIP_OFFSET,
      278+    1148                                 SIGN = THIRD_CIP_SIGN,
      279+    1149                                 LEN = THIRD_CIP_LEN,
      280+    1150                                 AS = THIRD_CIP_AS,
      281+    1151                                 DISP = AUX,
      282+    1152                                 FILL = THIRD_CIP_FILL,
      283+    1153                                 END_STRUCTURE = %CIPS_END_STRUCTURE );
      284+    1154
      285+    1155       %(LVL+1) %CHARTEXT(CONCAT(TEXTCHAR(CIPS_NAME),'_A')) (0:2) REDEF CIPS_NAME UBIN(32),
      286+    1156
      287+    1157            %IF WITH_DATAS;
      288+    1158              %IF TEXTCHAR(END_STRUCTURE)=';' AND ( NOT WITH_PARAMS );
      289+    1159                %LSET DATAS_END_STRUCTURE = CHARTEXT(';');
      290+    1160              %ELSE;
      291+    1161                %LSET DATAS_END_STRUCTURE = CHARTEXT(',');
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:305  
      292+    1162              %ENDIF;
      293+    1163                %(LVL+1) DATAS_NAME DALIGNED,
      294+    1164                  %(LVL+2) FIRST_DATA_NAME PTR %INIT(FIRST_DATA)%CHARTEXT('/**/'),
      295+    1165                  %(LVL+2) SECOND_DATA_NAME PTR %INIT(SECOND_DATA)%CHARTEXT('/**/'),
      296+    1166                  %(LVL+2) THIRD_DATA_NAME PTR %INIT(THIRD_DATA)%CHARTEXT('/**/'),
      297+    1167         %(LVL+1) %CHARTEXT(CONCAT(TEXTCHAR(DATAS_NAME),'_A$')) (0:2) REDEF DATAS_NAME PTR,
      298+    1168            %ENDIF;
      299+    1169
      300+    1170            %IF WITH_PARAMS;
      301+    1171              %IF THE_TYPE = 'SRCH' OR THE_TYPE = 'VRFY';
      302+    1172                %(LVL+1) SRCH_VRFY_ARGS_NAME,
      303+    1173          %(LVL+2) SRCH_VRFY_ARGS_LEN_NAME UBIN %INIT(SRCH_VRFY_ARGS_LEN)%CHARTEXT('/**/'),
      304+    1174        %(LVL+2) SRCH_VRFY_ARGS_LIST_LEN_NAME UBIN %INIT(SRCH_VRFY_ARGS_LIST_LEN)%CHARTEXT(
              1174        '/**/'),
      305+    1175                  %(LVL+2) * UBIN,
      306+    1176        %(LVL+1) %CHARTEXT(CONCAT(TEXTCHAR(SRCH_VRFY_ARGS_NAME),'_A')) (0:2) REDEF SRCH_VRF
              1176        Y_ARGS_NAME UBIN,
      307+    1177                %(LVL+1) SHIFT_COUNTS_NAME REDEF SRCH_VRFY_ARGS_NAME,
      308+    1178                  %(LVL+2) FIRST_SHIFT_COUNT_NAME UBIN,
      309+    1179                  %(LVL+2) SECOND_SHIFT_COUNT_NAME UBIN,
      310+    1180                  %(LVL+2) THIRD_SHIFT_COUNT_NAME UBIN,
      311+    1181        %(LVL+1) %CHARTEXT(CONCAT(TEXTCHAR(SHIFT_COUNTS_NAME),'_A')) (0:2) REDEF SRCH_VRFY_
              1181        ARGS_NAME UBIN,
      312+    1182                %(LVL+1) LENS_NAME REDEF SRCH_VRFY_ARGS_NAME,
      313+    1183                  %(LVL+2) FIRST_LEN_NAME UBIN,
      314+    1184                  %(LVL+2) SECOND_LEN_NAME UBIN,
      315+    1185                  %(LVL+2) THIRD_LEN_NAME UBIN,
      316+    1186        %(LVL+1) %CHARTEXT(CONCAT(TEXTCHAR(LENS_NAME),'_A')) (0:2) REDEF SRCH_VRFY_ARGS_NAM
              1186        E UBIN,
      317+    1187              %ELSEIF THE_TYPE = 'DLS' OR THE_TYPE = 'DRS';
      318+    1188                %(LVL+1) SHIFT_COUNTS_NAME,
      319+    1189            %(LVL+2) FIRST_SHIFT_COUNT_NAME UBIN %INIT(FIRST_SHIFT_COUNT)%CHARTEXT('/**/'),
      320+    1190          %(LVL+2) SECOND_SHIFT_COUNT_NAME UBIN %INIT(SECOND_SHIFT_COUNT)%CHARTEXT('/**/'),
      321+    1191            %(LVL+2) THIRD_SHIFT_COUNT_NAME UBIN %INIT(THIRD_SHIFT_COUNT)%CHARTEXT('/**/'),
      322+    1192        %(LVL+1) %CHARTEXT(CONCAT(TEXTCHAR(SHIFT_COUNTS_NAME),'_A')) (0:2) REDEF SHIFT_COUN
              1192        TS_NAME UBIN,
      323+    1193                %(LVL+1) LENS_NAME REDEF SHIFT_COUNTS_NAME,
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:306  
      324+    1194                  %(LVL+2) FIRST_LEN_NAME UBIN,
      325+    1195                  %(LVL+2) SECOND_LEN_NAME UBIN,
      326+    1196                  %(LVL+2) THIRD_LEN_NAME UBIN,
      327+    1197         %(LVL+1) %CHARTEXT(CONCAT(TEXTCHAR(LENS_NAME),'_A')) (0:2) REDEF SHIFT_COUNTS_NAME
              1197        UBIN,
      328+    1198                %(LVL+1) SRCH_VRFY_ARGS_NAME REDEF SHIFT_COUNTS_NAME,
      329+    1199                  %(LVL+2) SRCH_VRFY_ARGS_LEN_NAME UBIN,
      330+    1200                  %(LVL+2) SRCH_VRFY_ARGS_LIST_LEN_NAME UBIN,
      331+    1201                  %(LVL+2) * UBIN,
      332+    1202        %(LVL+1) %CHARTEXT(CONCAT(TEXTCHAR(SRCH_VRFY_ARGS_NAME),'_A')) (0:2) REDEF SHIFT_CO
              1202        UNTS_NAME UBIN,
      333+    1203              %ELSE;
      334+    1204                %(LVL+1) LENS_NAME,
      335+    1205                  %(LVL+2) FIRST_LEN_NAME UBIN %INIT(FIRST_LEN)%CHARTEXT('/**/'),
      336+    1206                  %(LVL+2) SECOND_LEN_NAME UBIN %INIT(SECOND_LEN)%CHARTEXT('/**/'),
      337+    1207                  %(LVL+2) THIRD_LEN_NAME UBIN %INIT(THIRD_LEN)%CHARTEXT('/**/'),
      338+    1208           %(LVL+1) %CHARTEXT(CONCAT(TEXTCHAR(LENS_NAME),'_A')) (0:2) REDEF LENS_NAME UBIN,
      339+    1209                %(LVL+1) SRCH_VRFY_ARGS_NAME REDEF LENS_NAME,
      340+    1210                  %(LVL+2) SRCH_VRFY_ARGS_LEN_NAME UBIN,
      341+    1211                  %(LVL+2) SRCH_VRFY_ARGS_LIST_LEN_NAME UBIN,
      342+    1212                  %(LVL+2) * UBIN,
      343+    1213        %(LVL+1) %CHARTEXT(CONCAT(TEXTCHAR(SRCH_VRFY_ARGS_NAME),'_A')) (0:2) REDEF LENS_NAM
              1213        E UBIN,
      344+    1214                %(LVL+1) SHIFT_COUNTS_NAME REDEF LENS_NAME,
      345+    1215                  %(LVL+2) FIRST_SHIFT_COUNT_NAME UBIN,
      346+    1216                  %(LVL+2) SECOND_SHIFT_COUNT_NAME UBIN,
      347+    1217                  %(LVL+2) THIRD_SHIFT_COUNT_NAME UBIN,
      348+    1218         %(LVL+1) %CHARTEXT(CONCAT(TEXTCHAR(SHIFT_COUNTS_NAME),'_A')) (0:2) REDEF LENS_NAME
              1218        UBIN,
      349+    1219              %ENDIF;
      350+    1220
      351+    1221              %IF THE_TYPE = 'ALR' OR THE_TYPE = 'ACM';
      352+    1222                %(LVL+1) INXS_NAME,
      353+    1223                  %(LVL+2) FIRST_INX_NAME UBIN %INIT(FIRST_INX)%CHARTEXT('/**/'),
      354+    1224                  %(LVL+2) SECOND_INX_NAME UBIN %INIT(SECOND_INX)%CHARTEXT('/**/'),
      355+    1225                  %(LVL+2) THIRD_INX_NAME UBIN %INIT(THIRD_INX)%CHARTEXT('/**/'),
      356+    1226           %(LVL+1) %CHARTEXT(CONCAT(TEXTCHAR(INXS_NAME),'_A')) (0:2) REDEF INXS_NAME UBIN,
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:307  
      357+    1227                %(LVL+1) DECS_NAME REDEF INXS_NAME,
      358+    1228                  %(LVL+2) FIRST_DEC_NAME SBIN,
      359+    1229                  %(LVL+2) SECOND_DEC_NAME SBIN,
      360+    1230                  %(LVL+2) THIRD_DEC_NAME SBIN,
      361+    1231           %(LVL+1) %CHARTEXT(CONCAT(TEXTCHAR(DECS_NAME),'_A')) (0:2) REDEF INXS_NAME SBIN,
      362+    1232              %ELSE;
      363+    1233                %(LVL+1) DECS_NAME,
      364+    1234                  %(LVL+2) FIRST_DEC_NAME SBIN %INIT(FIRST_DEC)%CHARTEXT('/**/'),
      365+    1235                  %(LVL+2) SECOND_DEC_NAME SBIN %INIT(SECOND_DEC)%CHARTEXT('/**/'),
      366+    1236                  %(LVL+2) THIRD_DEC_NAME SBIN %INIT(THIRD_DEC)%CHARTEXT('/**/'),
      367+    1237           %(LVL+1) %CHARTEXT(CONCAT(TEXTCHAR(DECS_NAME),'_A')) (0:2) REDEF DECS_NAME SBIN,
      368+    1238                %(LVL+1) INXS_NAME REDEF DECS_NAME,
      369+    1239                  %(LVL+2) FIRST_INX_NAME UBIN,
      370+    1240                  %(LVL+2) SECOND_INX_NAME UBIN,
      371+    1241                  %(LVL+2) THIRD_INX_NAME UBIN,
      372+    1242           %(LVL+1) %CHARTEXT(CONCAT(TEXTCHAR(INXS_NAME),'_A')) (0:2) REDEF DECS_NAME UBIN,
      373+    1243              %ENDIF;
      374+    1244
      375+    1245                %(LVL+1) SRCH_VRFY_ELEMS_NAME,
      376+    1246        %(LVL+2) SRCH_VRFY_ELEMS_LEN_NAME UBIN %INIT(SRCH_VRFY_ELEMS_LEN)%CHARTEXT('/**/'),
      377+    1247        %(LVL+2) SRCH_VRFY_ELEMS_LIST_LEN_NAME UBIN %INIT(SRCH_VRFY_ELEMS_LIST_LEN)%CHARTEX
              1247        T('/**/'),
      378+    1248        %(LVL+1) %CHARTEXT(CONCAT(TEXTCHAR(SRCH_VRFY_ELEMS_NAME),'_A')) (0:1) REDEF SRCH_VR
              1248        FY_ELEMS_NAME UBIN,
      379+    1249
      380+    1250              %IF THE_TYPE = 'SRCH';
      381+    1251                %(LVL+1) SRCH_RESULT_NAME,
      382+    1252        %(LVL+2) SRCH_RESULT_ARG_NUMBER_NAME UBIN %INIT(SRCH_RESULT_ARG_NUMBER)%CHARTEXT('/
              1252        **/'),
      383+    1253              %(LVL+2) SRCH_RESULT_DISP_NAME UBIN %INIT(SRCH_RESULT_DISP)%CHARTEXT('/**/'),
      384+    1254        %(LVL+1) %CHARTEXT(CONCAT(TEXTCHAR(SRCH_RESULT_NAME),'_A')) (0:1) REDEF SRCH_RESULT
              1254        _NAME UBIN,
      385+    1255                %(LVL+1) VRFY_RESULT_NAME REDEF SRCH_RESULT_NAME,
      386+    1256                  %(LVL+2) VRFY_RESULT_DISP_NAME UBIN,
      387+    1257                  %(LVL+2) * UBIN,
      388+    1258        %(LVL+1) %CHARTEXT(CONCAT(TEXTCHAR(VRFY_RESULT_NAME),'_A')) (0:1) REDEF SRCH_RESULT
              1258        _NAME UBIN,
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:308  
      389+    1259                %(LVL+1) PICTURE_STRING_NAME REDEF SRCH_RESULT_NAME,
      390+    1260                  %(LVL+2) PICTURE_STRING_INT_LEN_NAME UBIN,
      391+    1261                  %(LVL+2) PICTURE_STRING_DEC_NAME UBIN,
      392+    1262        %(LVL+1) %CHARTEXT(CONCAT(TEXTCHAR(PICTURE_STRING_NAME),'_A')) (0:1) REDEF SRCH_RES
              1262        ULT_NAME UBIN,
      393+    1263              %ELSEIF THE_TYPE = 'VRFY';
      394+    1264                %(LVL+1) VRFY_RESULT_NAME,
      395+    1265              %(LVL+2) VRFY_RESULT_DISP_NAME UBIN %INIT(VRFY_RESULT_DISP)%CHARTEXT('/**/'),
      396+    1266                  %(LVL+2) * UBIN,
      397+    1267        %(LVL+1) %CHARTEXT(CONCAT(TEXTCHAR(VRFY_RESULT_NAME),'_A')) (0:1) REDEF VRFY_RESULT
              1267        _NAME UBIN,
      398+    1268                %(LVL+1) PICTURE_STRING_NAME REDEF VRFY_RESULT_NAME,
      399+    1269                  %(LVL+2) PICTURE_STRING_INT_LEN_NAME UBIN,
      400+    1270                  %(LVL+2) PICTURE_STRING_DEC_NAME UBIN,
      401+    1271        %(LVL+1) %CHARTEXT(CONCAT(TEXTCHAR(PICTURE_STRING_NAME),'_A')) (0:1) REDEF VRFY_RES
              1271        ULT_NAME UBIN,
      402+    1272                %(LVL+1) SRCH_RESULT_NAME REDEF VRFY_RESULT_NAME,
      403+    1273                  %(LVL+2) SRCH_RESULT_ARG_NUMBER_NAME UBIN,
      404+    1274                  %(LVL+2) SRCH_RESULT_DISP_NAME UBIN,
      405+    1275        %(LVL+1) %CHARTEXT(CONCAT(TEXTCHAR(SRCH_RESULT_NAME),'_A')) (0:1) REDEF VRFY_RESULT
              1275        _NAME UBIN,
      406+    1276              %ELSE;
      407+    1277                %(LVL+1) PICTURE_STRING_NAME,
      408+    1278        %(LVL+2) PICTURE_STRING_INT_LEN_NAME UBIN %INIT(PICTURE_STRING_LEN)%CHARTEXT('/**/'
              1278        ),
      409+    1279          %(LVL+2) PICTURE_STRING_DEC_NAME UBIN %INIT(PICTURE_STRING_DEC)%CHARTEXT('/**/'),
      410+    1280        %(LVL+1) %CHARTEXT(CONCAT(TEXTCHAR(PICTURE_STRING_NAME),'_A')) (0:1) REDEF PICTURE_
              1280        STRING_NAME UBIN,
      411+    1281                %(LVL+1) SRCH_RESULT_NAME REDEF PICTURE_STRING_NAME,
      412+    1282                  %(LVL+2) SRCH_RESULT_ARG_NUMBER_NAME UBIN,
      413+    1283                  %(LVL+2) SRCH_RESULT_DISP_NAME UBIN,
      414+    1284        %(LVL+1) %CHARTEXT(CONCAT(TEXTCHAR(SRCH_RESULT_NAME),'_A')) (0:1) REDEF PICTURE_STR
              1284        ING_NAME UBIN,
      415+    1285                %(LVL+1) VRFY_RESULT_NAME REDEF PICTURE_STRING_NAME,
      416+    1286                  %(LVL+2) VRFY_RESULT_DISP_NAME UBIN,
      417+    1287                  %(LVL+2) * UBIN,
      418+    1288        %(LVL+1) %CHARTEXT(CONCAT(TEXTCHAR(VRFY_RESULT_NAME),'_A')) (0:1) REDEF PICTURE_STR
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:309  
              1288        ING_NAME UBIN,
      419+    1289              %ENDIF;
      420+    1290
      421+    1291        %IF THE_TYPE = 'ALR' OR THE_TYPE = 'ACM' OR THE_TYPE = 'MAT' OR THE_TYPE = 'SRCH' O
              1291        R THE_TYPE = 'VRFY';
      422+    1292                %(LVL+1) FILL_CHAR_NAME,
      423+    1293             %(LVL+2) FILL_CHAR_TEXT_NAME UBIN BYTE UNAL %INIT(FILL_CHAR)%CHARTEXT('/**/'),
      424+    1294                  %(LVL+2) * UBIN BYTE UNAL %INIT(0)%CHARTEXT('/**/'),
      425+    1295                %(LVL+1) SIZE_ERROR_NAME REDEF FILL_CHAR_NAME UBIN,
      426+    1296              %ELSE;
      427+    1297                %(LVL+1) SIZE_ERROR_NAME UBIN %INIT(SIZE_ERROR)%CHARTEXT('/**/'),
      428+    1298                %(LVL+1) FILL_CHAR_NAME REDEF SIZE_ERROR_NAME,
      429+    1299                  %(LVL+2) FILL_CHAR_TEXT_NAME UBIN BYTE UNAL,
      430+    1300                  %(LVL+2) * UBIN BYTE UNAL,
      431+    1301              %ENDIF;
      432+    1302
      433+    1303              %IF THE_TYPE = 'ACM' OR THE_TYPE = 'DCM';
      434+    1304                %(LVL+1) COMP_RESULT_NAME UBIN %INIT(COMP_RESULT)%CHARTEXT('/**/'),
      435+    1305                %(LVL+1) ROUND REDEF COMP_RESULT_NAME UBIN,
      436+    1306                %(LVL+1) TARGET_SIZE_NAME REDEF COMP_RESULT_NAME UBIN END_STRUCTURE
      437+    1307              %ELSEIF THE_TYPE = 'DAD' OR THE_TYPE = 'DSB' OR THE_TYPE = 'DML';
      438+    1308                %(LVL+1) TARGET_SIZE_NAME UBIN %INIT(TARGET_SIZE)%CHARTEXT('/**/'),
      439+    1309                %(LVL+1) COMP_RESULT_NAME REDEF TARGET_SIZE_NAME UBIN,
      440+    1310                %(LVL+1) ROUND_NAME REDEF TARGET_SIZE_NAME UBIN END_STRUCTURE
      441+    1311              %ELSE;
      442+    1312                %(LVL+1) ROUND_NAME UBIN %INIT(ROUND)%CHARTEXT('/**/'),
      443+    1313                %(LVL+1) COMP_RESULT_NAME REDEF ROUND_NAME UBIN,
      444+    1314                %(LVL+1) TARGET_SIZE_NAME REDEF ROUND_NAME UBIN END_STRUCTURE
      445+    1315              %ENDIF;
      446+    1316
      447+    1317            %ENDIF;
      448+    1318
      449+    1319            %END_MACRO;
      450+    1320
      451+    1321          %MEND;
      452+    1322
      453+    1323        %EJECT;
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:310  
      454+    1324        /*
      455+    1325                                %%%%%     %%%%   %%%%%%
      456+    1326                               %%   %%     %%    %%   %%
      457+    1327                               %%          %%    %%   %%
      458+    1328                               %%          %%    %%%%%%
      459+    1329                               %%          %%    %%
      460+    1330                               %%   %%     %%    %%
      461+    1331                                %%%%%     %%%%   %%
      462+    1332                  %%                               %%%
      463+    1333                  %%                               %%%
      464+    1334              %%% %%   %%%%%    %%%%%%   %%%%%%     %%     %%%%%%
      465+    1335             %%  %%%  %%   %%  %%       %%         %%     %%
      466+    1336             %%  %%%  %%%%%%%   %%%%%   %%                 %%%%%
      467+    1337             %%  %%%  %%            %%  %%                     %%
      468+    1338              %%% %%   %%%%%   %%%%%%    %%%%%%           %%%%%%
      469+    1339                                                                            */
      470+    1340
      471+    1341        /*D* NAME:         QI_CIP_DESCRIPTOR
      472+    1342             PURPOSE:      Used to generate a structure which frames a
      473+    1343                           descriptor used by various CIP instructions.
      474+    1344             DESCRIPTION:  This MACRO is primarily invoked by the MACRO
      475+    1345                           QI@CIP_OPERATION (see its *D*) to generate
      476+    1346                           generate a two word remote CIP descriptor.
      477+    1347                           Several general-purpose CONSTANT CIP descriptors
      478+    1348                           exist...see *D* for GENERAL_PURPOSE_CIPS.
      479+    1349        */
      480+    1350          %MACRO QI_CIP_DESCRIPTOR
      481+    1351                 ( NAME = QI_CIP_DESCRIPTOR,
      482+    1352                   CA_NAME = CA,
      483+    1353                   CB_NAME = CB,
      484+    1354                   CD_NAME = CD,
      485+    1355                   CP_NAME = CP,
      486+    1356                   FILL_NAME = FILL,
      487+    1357                   MBZ_NAME = MBZ,
      488+    1358                   OFFSET_NAME = OFFSET,
      489+    1359                   SIGN_NAME = SIGN,
      490+    1360                   LEN_NAME = LEN,
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:311  
      491+    1361                   T_NAME = T,
      492+    1362                   AS_NAME = AS,
      493+    1363                   DISP_NAME = DISP,
      494+    1364                   STCLASS = " ",
      495+    1365                   LVL = 1,
      496+    1366                   TYPE ( DISPLAY = 0,
      497+    1367                          PACKED = 1,
      498+    1368                          BINARY = 2,
      499+    1369                          ALPHANUMERIC = 3,
      500+    1370                          ANY ) = 3,
      501+    1371                   OFFSET = 0,
      502+    1372                   SIGN ( UNSIGNED = 0,
      503+    1373                          TRAILING = 1,
      504+    1374                          LEADING = 2,
      505+    1375                          OVERPUNCHED = 3,
      506+    1376                          ANY ) = 0,
      507+    1377                   LEN = 0,
      508+    1378                   AS ( DEFAULT = "BITBIN('B'X)",
      509+    1379                        INDEX = "BITBIN('1B'X)",
      510+    1380                        INDEX_SOURCE = "BITBIN('1B'X)",
      511+    1381                        INDEX_TARGET = "BITBIN('2B'X)",
      512+    1382                        INDEX_AUX = "BITBIN('3B'X)",
      513+    1383                        ANY ) = "BITBIN('B'X)",
      514+    1384                   DISP ( SOURCE = 6,
      515+    1385                          TARGET = 8,
      516+    1386                          AUX = 10 ) = 6,
      517+    1387                   FILL ( YES = 1,
      518+    1388                          NO = 0,
      519+    1389                          ANY ) = 1,
      520+    1390                   END_STRUCTURE ( YES = ";",
      521+    1391                                   NO = ",",
      522+    1392                                   ANY ) = ";" );
      523+    1393
      524+    1394            %BEGIN_MACRO ( STCLASS = STCLASS );
      525+    1395
      526+    1396            %LSET NOTHING = TEXTCHAR(SIGN);
      527+    1397            %LSET NOTHING = TEXTCHAR(FILL);
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:312  
      528+    1398            %LSET NOTHING = TEXTCHAR(DATA$);
      529+    1399            %LSET NOTHING = TEXTCHAR(PNAME$);
      530+    1400            %LSET NOTHING = TEXTCHAR(STCLASS);
      531+    1401
      532+    1402            %IF (TYPE >= 0) AND (TYPE <= 3);
      533+    1403              %IF TEXTCHAR(INIT) = 'INIT';
      534+    1404                %LSET STR_LEN=CHARBIN(TEXTCHAR(LEN));
      535+    1405                %LSET STR_OFFSET=CHARBIN(TEXTCHAR(OFFSET));
      536+    1406                %LSET STR_SIGN=CHARBIN(TEXTCHAR(SIGN));
      537+    1407                %IF TYPE=2;
      538+    1408                  %IF (STR_LEN ~= 0) AND (STR_LEN ~= 2) AND (STR_LEN ~= 4);
      539+    1409                    %ERROR (CONCAT('Illegal LEN for ',TEXTCHAR(NAME)),3);
      540+    1410                  %ENDIF;
      541+    1411                %ELSE;
      542+    1412                  %IF (STR_LEN < 0) OR (STR_LEN > 31);
      543+    1413                    %ERROR (CONCAT('Illegal LEN for ',TEXTCHAR(NAME)),3);
      544+    1414                  %ENDIF;
      545+    1415                %ENDIF;
      546+    1416                %IF TYPE=1;        /* PACKED */
      547+    1417                  %IF (STR_OFFSET < 0) OR (STR_OFFSET > 3);
      548+    1418                    %ERROR (CONCAT('Illegal OFFSET for ',TEXTCHAR(NAME)),3);
      549+    1419                  %ENDIF;
      550+    1420                  %IF (STR_SIGN < 0) OR (STR_SIGN > 1);
      551+    1421                    %ERROR (CONCAT('Illegal SIGN for ',TEXTCHAR(NAME)),3);
      552+    1422                  %ENDIF;
      553+    1423                %ELSE;
      554+    1424                  %IF (STR_OFFSET < 0) OR (STR_OFFSET > 1);
      555+    1425                    %ERROR (CONCAT('Illegal OFFSET for ',TEXTCHAR(NAME)),3);
      556+    1426                  %ENDIF;
      557+    1427                  %IF (STR_SIGN < 0) OR (STR_SIGN > 3);
      558+    1428                    %ERROR (CONCAT('Illegal SIGN for ',TEXTCHAR(NAME)),3);
      559+    1429                  %ENDIF;
      560+    1430                %ENDIF;
      561+    1431              %ENDIF;
      562+    1432              %IF LVL=1;
      563+    1433                DCL 1 NAME STCLASS DALIGNED,        /* CIP descriptor */
      564+    1434              %ELSE;
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:313  
      565+    1435                    %(LVL) NAME DALIGNED,           /* CIP descriptor */
      566+    1436              %ENDIF;
      567+    1437              %IF TYPE=3;                         /* ALPHANUMERIC primary descriptor */
      568+    1438                      %(LVL+1) CA,                  /* Control bits for ALPHANUMERIC */
      569+    1439                        %(LVL+2) OFFSET_NAME UBIN(1) UNAL %INIT(OFFSET)%CHARTEXT('/**/'),
      570+    1440                        %(LVL+2) FILL_NAME UBIN(1) UNAL %INIT(FILL)%CHARTEXT('/**/'),
      571+    1441                        %(LVL+2) MBZ_NAME UBIN(1) UNAL %INIT(0)%CHARTEXT('/**/'),
      572+    1442                      %(LVL+1) CB REDEF CA,         /* Control bits for BINARY */
      573+    1443                        %(LVL+2) OFFSET_NAME UBIN(1) UNAL,
      574+    1444                        %(LVL+2) MBZ UBIN(2) UNAL,  /* not used:  MBZ */
      575+    1445                      %(LVL+1) CD REDEF CA,         /* Control bits for DISPLAY */
      576+    1446                        %(LVL+2) OFFSET_NAME UBIN(1) UNAL,
      577+    1447                        %(LVL+2) SIGN_NAME UBIN(2) UNAL,
      578+    1448                      %(LVL+1) CP REDEF CA,         /* Control bits for PACKED */
      579+    1449                        %(LVL+2) OFFSET_NAME UBIN(2) UNAL,
      580+    1450                        %(LVL+2) SIGN_NAME UBIN(1) UNAL,
      581+    1451              %ELSEIF TYPE=2;                     /* BINARY primary descriptor */
      582+    1452                      %(LVL+1) CB,                  /* Control bits for BINARY */
      583+    1453                        %(LVL+2) OFFSET_NAME UBIN(1) UNAL %INIT(OFFSET)%CHARTEXT('/**/'),
      584+    1454                        %(LVL+2) MBZ_NAME UBIN(2) UNAL %INIT(0)%CHARTEXT('/**/'),
      585+    1455                      %(LVL+1) CA REDEF CB,         /* Control bits for ALPHANUMERIC */
      586+    1456                        %(LVL+2) OFFSET_NAME UBIN(1) UNAL,
      587+    1457                        %(LVL+2) FILL_NAME UBIN(1) UNAL,
      588+    1458                        %(LVL+2) MBZ UBIN(1) UNAL,  /* not used:  MBZ */
      589+    1459                      %(LVL+1) CD REDEF CB,         /* Control bits for DISPLAY */
      590+    1460                        %(LVL+2) OFFSET_NAME UBIN(1) UNAL,
      591+    1461                        %(LVL+2) SIGN_NAME UBIN(2) UNAL,
      592+    1462                      %(LVL+1) CP REDEF CB,         /* Control bits for PACKED */
      593+    1463                        %(LVL+2) OFFSET_NAME UBIN(2) UNAL,
      594+    1464                        %(LVL+2) SIGN_NAME UBIN(1) UNAL,
      595+    1465              %ELSEIF TYPE=1;                     /* PACKED primary descriptor */
      596+    1466                      %(LVL+1) CP,                  /* Control bits for PACKED */
      597+    1467                        %(LVL+2) OFFSET_NAME UBIN(2) UNAL %INIT(OFFSET)%CHARTEXT('/**/'),
      598+    1468                        %(LVL+2) SIGN_NAME UBIN(1) UNAL %INIT(SIGN)%CHARTEXT('/**/'),
      599+    1469                      %(LVL+1) CA REDEF CP,         /* Control bits for ALPHANUMERIC */
      600+    1470                        %(LVL+2) OFFSET_NAME UBIN(1) UNAL,
      601+    1471                        %(LVL+2) FILL_NAME UBIN(1) UNAL,
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:314  
      602+    1472                        %(LVL+2) MBZ UBIN(1) UNAL,  /* not used:  MBZ */
      603+    1473                      %(LVL+1) CB REDEF CP,         /* Control bits for BINARY */
      604+    1474                        %(LVL+2) OFFSET_NAME UBIN(1) UNAL,
      605+    1475                        %(LVL+2) MBZ UBIN(2) UNAL,  /* not used:  MBZ */
      606+    1476                      %(LVL+1) CD REDEF CP,         /* Control bits for DISPLAY */
      607+    1477                        %(LVL+2) OFFSET_NAME UBIN(1) UNAL,
      608+    1478                        %(LVL+2) SIGN_NAME UBIN(2) UNAL,
      609+    1479              %ELSE;                              /* DISPLAY primary descriptor */
      610+    1480                      %(LVL+1) CD,                  /* Control bits for DISPLAY */
      611+    1481                        %(LVL+2) OFFSET_NAME UBIN(1) UNAL %INIT(OFFSET)%CHARTEXT('/**/'),
      612+    1482                        %(LVL+2) SIGN_NAME UBIN(2) UNAL %INIT(SIGN)%CHARTEXT('/**/'),
      613+    1483                      %(LVL+1) CA REDEF CD,         /* Control bits for ALPHANUMERIC */
      614+    1484                        %(LVL+2) OFFSET_NAME UBIN(1) UNAL,
      615+    1485                        %(LVL+2) FILL_NAME UBIN(1) UNAL,
      616+    1486                        %(LVL+2) MBZ UBIN(1) UNAL,  /* not used:  MBZ */
      617+    1487                      %(LVL+1) CB REDEF CD,         /* Control bits for BINARY */
      618+    1488                        %(LVL+2) OFFSET_NAME UBIN(1) UNAL,
      619+    1489                        %(LVL+2) MBZ UBIN(2) UNAL,  /* not used:  MBZ */
      620+    1490                      %(LVL+1) CP REDEF CD,         /* Control bits for PACKED */
      621+    1491                        %(LVL+2) OFFSET_NAME UBIN(2) UNAL,
      622+    1492                        %(LVL+2) SIGN_NAME UBIN(1) UNAL,
      623+    1493              %ENDIF;
      624+    1494                      %(LVL+1) LEN_NAME UBIN(5) UNAL %INIT(LEN)%CHARTEXT('/**/'),
      625+    1495              %IF TYPE=1;                         /* PACKED primary descriptor */
      626+    1496                      %(LVL+1) T_NAME UBIN(1) UNAL %INIT(1)%CHARTEXT('/**/'),
      627+    1497              %ELSE;
      628+    1498                      %(LVL+1) T_NAME UBIN(1) UNAL %INIT(0)%CHARTEXT('/**/'),
      629+    1499              %ENDIF;
      630+    1500                      %(LVL+1) AS_NAME UBIN(7) UNAL %INIT(AS)%CHARTEXT('/**/'),
      631+    1501              %IF LVL=1;
      632+    1502                      %(LVL+1) DISP_NAME UBIN %INIT(DISP)%CHARTEXT('/**/');
      633+    1503                DCL 1 %CHARTEXT(CONCAT(TEXTCHAR(NAME),'_A')) (0:1) REDEF NAME UBIN;
      634+    1504              %ELSE;
      635+    1505                      %(LVL+1) DISP_NAME UBIN %INIT(DISP)%CHARTEXT('/**/'),
      636+    1506          %(LVL) %CHARTEXT(CONCAT(TEXTCHAR(NAME),'_A')) (0:1) REDEF NAME UBIN END_STRUCTURE
      637+    1507              %ENDIF;
      638+    1508            %ELSE;
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:315  
      639+    1509              %ERROR ( CONCAT ( 'Illegal TYPE for ', TEXTCHAR (NAME) ), 3 );
      640+    1510            %ENDIF;
      641+    1511
      642+    1512            %END_MACRO;
      643+    1513
      644+    1514          %MEND;
      645+    1515
      646+    1516        %EJECT;
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:316  
      647+    1517        /*
      648+    1518                                 %%       %%
      649+    1519                       %%%%%   %%%%%%   %%%%%%    %%%%%   %% %%%%
      650+    1520                      %%   %%    %%       %%     %%   %%  %%%%
      651+    1521                      %%   %%    %%       %%     %%%%%%%  %%%
      652+    1522                      %%   %%    %%       %%     %%       %%
      653+    1523                       %%%%%      %%%      %%%    %%%%%   %%
      654+    1524
      655+    1525                       %%%%%%  %% %%%    %%% %%   %%%%%%   %%%%%
      656+    1526                      %%       %%%  %%  %%  %%%  %%       %%   %%
      657+    1527                       %%%%%   %%%  %%  %%  %%%  %%       %%%%%%%
      658+    1528                           %%  %%%  %%  %%  %%%  %%       %%
      659+    1529                      %%%%%%   %% %%%    %%% %%   %%%%%%   %%%%%
      660+    1530                               %%
      661+    1531                               %%
      662+    1532                                                                            */
      663+    1533
      664+    1534        /*D* NAME:         QI@OTTER_SPACE
      665+    1535             PURPOSE:      To provide a temporary area in the interpreter's
      666+    1536                           AUTO for conversion of data items, etc.
      667+    1537             DESCRIPTION:  This MACRO simply generates some temporary space
      668+    1538                           in AUTO, referencable as a structure, a character
      669+    1539                           array, or an unsigned byte array.  It's used
      670+    1540                           heavily by some MOVE op-codes which unpack COMP
      671+    1541                           items into a copy of it with STCLASS = otter...
      672+    1542        */
      673+    1543
      674+    1544          %MACRO QI@OTTER_SPACE ( NAME = QI@OTTER_SPACE,
      675+    1545                                  STCLASS = AUTO,
      676+    1546                                  BYTE_SIZE = 16 );
      677+    1547
      678+    1548            %BEGIN_MACRO ( STCLASS = STCLASS );
      679+    1549
      680+    1550            DCL 1 NAME STCLASS ALIGNED,
      681+    1551                  2 *(0:%(BYTE_SIZE-1)) UBIN BYTE UNAL %INIT(0*0)%CHARTEXT('/**/');
      682+    1552
      683+    1553        DCL 1 %CHARTEXT(CONCAT(TEXTCHAR(NAME),'_CA')) (0:%(BYTE_SIZE-1)) REDEF NAME CHAR(1)
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:317  
              1553         UNAL;
      684+    1554
      685+    1555        DCL 1 %CHARTEXT(CONCAT(TEXTCHAR(NAME),'_BA')) (0:%(BYTE_SIZE-1)) REDEF NAME UBIN BY
              1555        TE UNAL;
      686+    1556
      687+    1557            %END_MACRO;
      688+    1558
      689+    1559          %MEND;
      690+    1560
      691+    1561        %EJECT;
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:318  
      692+    1562        /*
      693+    1563                                          %%                         %%
      694+    1564              %%%%%%   %%%%%   %% %%%   %%%%%%    %%%%%   %%   %%  %%%%%%
      695+    1565             %%       %%   %%  %%%  %%    %%     %%   %%   %% %%     %%
      696+    1566             %%       %%   %%  %%   %%    %%     %%%%%%%    %%%      %%
      697+    1567             %%       %%   %%  %%   %%    %%     %%        %% %%     %%
      698+    1568              %%%%%%   %%%%%   %%   %%     %%%    %%%%%   %%   %%     %%%
      699+    1569                                                                            */
      700+    1570
      701+    1571          %MACRO QI_1 ( STCLASS = "SYMREF",
      702+    1572                        NAME = QI_1 );
      703+    1573
      704+    1574            %BEGIN_MACRO ( STCLASS = STCLASS );
      705+    1575
      706+    1576          DCL 1 NAME STCLASS DALIGNED,         /* interpreter data */
      707+    1577                2 BASE DALIGNED,
      708+    1578                  3 DATA$ PTR %INIT(ADDR(NIL))%CHARTEXT('/**/'),
      709+    1579                            /* base pointer for user data */
      710+    1580                  3 PROC$ PTR %INIT(ADDR(NIL))%CHARTEXT('/**/'),
      711+    1581                            /* base pointer for user proc */
      712+    1582                  3 INTR$ PTR %INIT(ADDR(NIL))%CHARTEXT('/**/'),
      713+    1583                            /* base pointer for intr data */
      714+    1584                2 BASE_A$(0:2) REDEF BASE PTR,
      715+    1585
      716+    1586                2 INSTR$ PTR DALIGNED %INIT(ADDR(NIL))%CHARTEXT('/**/'),
      717+    1587                            /* pointer to last/current op-code sequence */
      718+    1588                2 CURR_INSTR$ PTR DALIGNED %INIT(ADDR(NIL))%CHARTEXT('/**/'),
      719+    1589                            /* current instruction */
      720+    1590                2 INITIALIZATION_BLOCK$ PTR DALIGNED %INIT(ADDR(NIL))%CHARTEXT('/**/'),
      721+    1591                            /* from arguments to QAT$TALLYHO */
      722+    1592           2 ARGUMENTS_AND_OR_FREE_AUTO_A$$ PTR DALIGNED %INIT(ADDR(NIL))%CHARTEXT('/**/'),
      723+    1593                            /* from arguments to QAT$TALLYHO */
      724+    1594                2 UNWIND$ REMEMBER DALIGNED /*%INIT(QAU$UNWIND)%CHARTEXT('\**\')*/,
      725+    1595                            /* contains address of somebody in QAT$TALLYHO
      726+    1596                               (somebody using top auto frame) */
      727+    1597                2 VERIFY_BUFFER$ PTR DALIGNED %INIT(ADDR(NIL))%CHARTEXT('/**/'),
      728+    1598                            /* address of working area for VERIFY */
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:319  
      729+    1599                2 VERIFY_BUFFER_SIZE UBIN %INIT(0)%CHARTEXT('/**/'),
      730+    1600                            /* size in bytes of working area for VERIFY */
      731+    1601                2 HOUSEKEEPING ALIGNED,
      732+    1602                  3 IS_DBCONTROL_ESTABLISHED BIT(1) UNAL %INIT('0'B)%CHARTEXT('/**/'),
      733+    1603                            /* set if M$DBCONTROL has been called */
      734+    1604                  3 IS_INT_ESTABLISHED BIT(1) UNAL %INIT('0'B)%CHARTEXT('/**/'),
      735+    1605                            /* set if M$INT has been called */
      736+    1606                  3 IS_TRAP_ESTABLISHED BIT(1) UNAL %INIT('0'B)%CHARTEXT('/**/'),
      737+    1607                            /* set if M$TRAP has been called */
      738+    1608                  3 IS_BUFFER_ALLOCATED BIT(1) UNAL %INIT('0'B)%CHARTEXT('/**/'),
      739+    1609                            /* set if the buffer for X$whatever has been allocated */
      740+    1610                  3 IS_MESSAGE_LINE_CREATED BIT(1) UNAL %INIT('0'B)%CHARTEXT('/**/'),
      741+    1611                            /* set if the MESSAGE LINE has been M$OPENed */
      742+    1612                  3 IS_DEBUGGER_ASSOCIATING BIT(1) UNAL %INIT('0'B)%CHARTEXT('/**/'),
      743+    1613                            /* set if the debugger has post-associated
      744+    1614                               (QCE$ERROR_DBCONTROL was entered) */
      745+    1615                  3 INITIAL_PAGEHALT_SETTING BIT(2) UNAL %INIT('00'B)%CHARTEXT('/**/'),
      746+    1616                            /* value of VLP_TRMCTL.PAGEHALT at invocation */
      747+    1617                2 SCREEN_UPDATE_FLAGS ALIGNED,
      748+    1618                              /* set by screen-updating routines:
      749+    1619                                     APPLY, CLEAR, DEACTIVATE, GET_FIELD, WRITE/DISPLAY
      750+    1620                                 checked/reset by QCU$UPDATE_SCREEN */
      751+    1621                  3 WAS_APPLIED BIT(1) UNAL %INIT('0'B)%CHARTEXT('/**/'),
      752+    1622                              /* an APPLY (M$MDFFLD) was done */
      753+    1623                  3 WAS_CLEARED BIT(1) UNAL %INIT('0'B)%CHARTEXT('/**/'),
      754+    1624                              /* a CLEAR (M$ERASE) was done */
      755+    1625                  3 WAS_DEACTIVATED BIT(1) UNAL %INIT('0'B)%CHARTEXT('/**/'),
      756+    1626                              /* a DEACTIVATE (M$RLSFLD) was done */
      757+    1627                  3 WAS_WRITTEN BIT(1) UNAL %INIT('0'B)%CHARTEXT('/**/'),
      758+    1628                              /* a DISPLAY/WRITE (M$WRITE) was done */
      759+    1629                2 SOURCE$ PTR DALIGNED %INIT(ADDR(NIL))%CHARTEXT('/**/'),
      760+    1630                            /* pointer to DAD for QCS$SETUP */
      761+    1631
      762+    1632                %QI@CIP_OPERATION ( NAME = OP,
      763+    1633                                    STCLASS = STCLASS,
      764+    1634                                    LVL = 2,
      765+    1635                                    FIRST_CIP_TYPE = DISPLAY,
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:320  
      766+    1636                                    SECOND_CIP_TYPE = DISPLAY,
      767+    1637                                    THIRD_CIP_TYPE = DISPLAY,
      768+    1638                                    END_STRUCTURE = NO );
      769+    1639
      770+    1640                2 DAD DALIGNED,
      771+    1641                            /* pointers to DADs */
      772+    1642                  3 S$ PTR %INIT(ADDR(NIL))%CHARTEXT('/**/'),
      773+    1643                  3 T$ PTR %INIT(ADDR(NIL))%CHARTEXT('/**/'),
      774+    1644                  3 AUX$ PTR %INIT(ADDR(NIL))%CHARTEXT('/**/'),
      775+    1645                2 DAD_A$(0:2) REDEF DAD PTR,
      776+    1646                2 IS_ALL_LIT,
      777+    1647                            /* ALL "literal" indicator */
      778+    1648                  3 S BIT(1) ALIGNED %INIT('0'B)%CHARTEXT('/**/'),
      779+    1649                  3 T BIT(1) ALIGNED %INIT('0'B)%CHARTEXT('/**/'),
      780+    1650                  3 AUX BIT(1) ALIGNED %INIT('0'B)%CHARTEXT('/**/'),
      781+    1651                2 IS_ALL_LIT_A(0:2) REDEF IS_ALL_LIT BIT(1) ALIGNED,
      782+    1652                2 IS_FORM_VARIABLE,
      783+    1653                            /* COBOL vs FIELD variable type indicator */
      784+    1654                  3 S BIT(1) ALIGNED %INIT('0'B)%CHARTEXT('/**/'),
      785+    1655                  3 T BIT(1) ALIGNED %INIT('0'B)%CHARTEXT('/**/'),
      786+    1656                  3 AUX BIT(1) ALIGNED %INIT('0'B)%CHARTEXT('/**/'),
      787+    1657                2 IS_FORM_VARIABLE_A(0:2) REDEF IS_FORM_VARIABLE BIT(1) ALIGNED,
      788+    1658                2 IS_TEMP,
      789+    1659                            /* on if this is a temp (must build descriptor) */
      790+    1660                  3 S BIT(1) ALIGNED %INIT('0'B)%CHARTEXT('/**/'),
      791+    1661                  3 T BIT(1) ALIGNED %INIT('0'B)%CHARTEXT('/**/'),
      792+    1662                  3 AUX BIT(1) ALIGNED %INIT('0'B)%CHARTEXT('/**/'),
      793+    1663                2 IS_TEMP_A(0:2) REDEF IS_TEMP BIT(1) ALIGNED,
      794+    1664                2 OFFSET,
      795+    1665                            /* byte offsets */
      796+    1666                  3 S UBIN %INIT(0)%CHARTEXT('/**/'),
      797+    1667                  3 T UBIN %INIT(0)%CHARTEXT('/**/'),
      798+    1668                  3 AUX UBIN %INIT(0)%CHARTEXT('/**/'),
      799+    1669                2 OFFSET_A(0:2) REDEF OFFSET UBIN,
      800+    1670                2 OTTER_SPACE DALIGNED,
      801+    1671                            /* pointers to OTTER space */
      802+    1672                  3 S$ PTR %INIT(ADDR(NIL))%CHARTEXT('/**/'),
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:321  
      803+    1673                  3 T$ PTR %INIT(ADDR(NIL))%CHARTEXT('/**/'),
      804+    1674                  3 AUX$ PTR %INIT(ADDR(NIL))%CHARTEXT('/**/'),
      805+    1675                2 OTTER_SPACE_A$(0:2) REDEF OTTER_SPACE PTR,
      806+    1676                2 PICTURE_STRING DALIGNED,
      807+    1677                            /* pointers to PICture strings */
      808+    1678                  3 S$ PTR %INIT(ADDR(NIL))%CHARTEXT('/**/'),
      809+    1679                  3 T$ PTR %INIT(ADDR(NIL))%CHARTEXT('/**/'),
      810+    1680                  3 AUX$ PTR %INIT(ADDR(NIL))%CHARTEXT('/**/'),
      811+    1681                2 PICTURE_STRING_A$(0:2) REDEF PICTURE_STRING PTR,
      812+    1682                2 TYPE,
      813+    1683                            /* data types of operands */
      814+    1684                  3 S UBIN %INIT(0)%CHARTEXT('/**/'),
      815+    1685                  3 T UBIN %INIT(0)%CHARTEXT('/**/'),
      816+    1686                  3 AUX UBIN %INIT(0)%CHARTEXT('/**/'),
      817+    1687                2 TYPE_A(0:2) REDEF TYPE UBIN,
      818+    1688
      819+    1689                2 OP_CODE UBIN %INIT(0)%CHARTEXT('/**/'),
      820+    1690                            /* current op-code */
      821+    1691                2 A_REG SBIN %INIT(0)%CHARTEXT('/**/'),
      822+    1692                            /* A-register */
      823+    1693                2 SIZE_ERR UBIN %INIT(0)%CHARTEXT('/**/'),
      824+    1694                            /* If 1, a "SIZE ERROR" condition has occured */
      825+    1695                2 AT_END UBIN %INIT(0)%CHARTEXT('/**/'),
      826+    1696                            /* "AT END" flag */
      827+    1697                2 ACCUM(0:7) UBIN %INIT(0*0)%CHARTEXT('/**/'),
      828+    1698                            /* accumulator */
      829+    1699                2 DEC_ACC SBIN %INIT(0)%CHARTEXT('/**/'),
      830+    1700                            /* decimal position of accumulator */
      831+    1701                2 NO_DATA UBIN %INIT(0)%CHARTEXT('/**/'),
      832+    1702                            /* no-data indicator */
      833+    1703
      834+    1704                %QI$DAD ( NAME = MESSAGE_LINE_DAD,
      835+    1705                          STCLASS = STCLASS,
      836+    1706                          LVL = 2,
      837+    1707                          END_STRUCTURE = NO );
      838+    1708
      839+    1709                2 MESSAGE_LINE_GZ DALIGNED,
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:322  
      840+    1710                  3 HEADER$ PTR %INIT(ADDR(NIL))%CHARTEXT('/**/'),
      841+    1711                          /* Pointer to the QI$GZ_HEADER area corresponding to
      842+    1712                             the default MESSAGE LINE. */
      843+    1713                  3 START$ PTR %INIT(ADDR(NIL))%CHARTEXT('/**/'),
      844+    1714                          /* Pointer to the QI$GZ_FIELD area corresponding to
      845+    1715                             the default MESSAGE LINE. */
      846+    1716                  3 STOP$ PTR %INIT(ADDR(NIL))%CHARTEXT('/**/'),
      847+    1717                          /* Pointer to the QI$GZ_FIELD area corresponding to
      848+    1718                             the default MESSAGE LINE.  (Included for consistency.) */
      849+    1719
      850+    1720                2 GZ DALIGNED,
      851+    1721                  3 LAST_HEADER$ PTR %INIT(ADDR(NIL))%CHARTEXT('/**/'),
      852+    1722                            /* Pointer to the most recently allocated QI$GZ_HEADER
      853+    1723                               area (and therefore the "highest" in memory). */
      854+    1724                  3 AVAILABLE$ PTR %INIT(ADDR(NIL))%CHARTEXT('/**/'),
      855+    1725                            /* Pointer to the next available spot at which a
      856+    1726                               QI$GZ_HEADER area may reside. */
      857+    1727                  3 NEXT_AVAILABLE_FLDID UBIN %INIT(0)%CHARTEXT('/**/'),
      858+    1728                            /* Running count of FLDIDs:  they are allocated
      859+    1729                               in FRame-sized chunks by QBA$ACTIVATE, and
      860+    1730                               remain the property of a once-activated FRame,
      861+    1731                               even if/when it's DEACTIVATEd. */
      862+    1732
      863+    1733                2 FILE_HEAD DALIGNED,
      864+    1734                  3 FORM$ PTR %INIT(ADDR(NIL))%CHARTEXT('/**/'),
      865+    1735                            /* Pointer to head of currently opened
      866+    1736                               form FD chain. */
      867+    1737                  3 TRAN$ PTR %INIT(ADDR(NIL))%CHARTEXT('/**/'),
      868+    1738                            /* Pointer to head of currently opened
      869+    1739                               transaction FD chain. */
      870+    1740                2 FILE_HEAD_A$(0:%(QI#TYPE_TRANSACTION-QI#TYPE_FORM)) REDEF FILE_HEAD PTR,
      871+    1741
      872+    1742                2 OPENED_COUNT,
      873+    1743                  3 FORM UBIN %INIT(0)%CHARTEXT('/**/'),
      874+    1744                  3 TRAN UBIN %INIT(0)%CHARTEXT('/**/'),
      875+    1745           2 OPENED_COUNT_A(0:%(QI#TYPE_TRANSACTION-QI#TYPE_FORM)) REDEF OPENED_COUNT UBIN,
      876+    1746
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:323  
      877+    1747                2 CURRENT,
      878+    1748                  3 FILE$ PTR DALIGNED %INIT(ADDR(NIL))%CHARTEXT('/**/'),
      879+    1749                            /* pointer to currently working file */
      880+    1750                  3 FORM$ REDEF FILE$ PTR,
      881+    1751                            /* for when we know it's a form file */
      882+    1752                  3 TRAN$ REDEF FILE$ PTR,
      883+    1753                            /* for when we know it's a transaction file */
      884+    1754                  3 FILE_STATUS$ PTR DALIGNED %INIT(ADDR(NIL))%CHARTEXT('/**/'),
      885+    1755                            /* pointer to currently working file status area */
      886+    1756                  3 FORM_STATUS$ REDEF FILE_STATUS$ PTR,
      887+    1757                            /* for when we know it's a form file */
      888+    1758                  3 TRAN_STATUS$ REDEF FILE_STATUS$ PTR,
      889+    1759                            /* for when we know it's a transaction file */
      890+    1760                  3 FRAME$ PTR DALIGNED %INIT(ADDR(NIL))%CHARTEXT('/**/'),
      891+    1761                            /* pointer to currently working FRAME block */
      892+    1762                  3 FRAME_STATUS$ PTR DALIGNED %INIT(ADDR(NIL))%CHARTEXT('/**/'),
      893+    1763                            /* pointer to currently working FRAME scratch area */
      894+    1764                  3 FRAME_INDEX UBIN %INIT(0)%CHARTEXT('/**/'),
      895+    1765                            /* index into QI$FORM_FILE.FRAME_LIST_A@P
      896+    1766                               of QI_1.CURRENT.FRAME$ */
      897+    1767                  3 NODE$ PTR DALIGNED %INIT(ADDR(NIL))%CHARTEXT('/**/'),
      898+    1768                            /* pointer to currently working node block */
      899+    1769                  3 NODE_STATUS$ PTR DALIGNED %INIT(ADDR(NIL))%CHARTEXT('/**/'),
      900+    1770                            /* pointer to currently working node scratch area */
      901+    1771
      902+    1772                2 SPECIAL_NAMES DALIGNED,
      903+    1773                  3 CURRENT_FORM$ PTR %INIT(ADDR(NIL))%CHARTEXT('/**/'),
      904+    1774                            /* Pointer to data area of CURRENT-FORM variable. */
      905+    1775                  3 CURRENT_FRAME$ PTR %INIT(ADDR(NIL))%CHARTEXT('/**/'),
      906+    1776                            /* Pointer to data area of CURRENT-FRAME variable. */
      907+    1777                  3 CURRENT_FIELD$ PTR %INIT(ADDR(NIL))%CHARTEXT('/**/'),
      908+    1778                            /* Pointer to data area of CURRENT-FIELD variable. */
      909+    1779                  3 RETRY$ PTR DALIGNED %INIT(ADDR(NIL))%CHARTEXT('/**/'),
      910+    1780                            /* Pointer to data area of RETRY variable. */
      911+    1781                2 SPECIAL_NAMES_A$(0:3) REDEF SPECIAL_NAMES PTR,
      912+    1782                            /* For array references. */
      913+    1783
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:324  
      914+    1784                2 ERROR_STATUS UBIN %INIT(0)%CHARTEXT('/**/'),
      915+    1785                            /* binary value of error condition */
      916+    1786                2 USE_DEFAULT_IO UBIN %INIT(0)%CHARTEXT('/**/'),
      917+    1787                            /* for default USE procedures, this cell contains
      918+    1788                               INPUT or OUTPUT */
      919+    1789                2 DEFAULT_USE_PROCEDURE_A@P(0:2) UBIN %INIT(0*0)%CHARTEXT('/**/'),
      920+    1790                            /* default USE procedure address:  "0" means none */
      921+    1791                2 IS_DEFAULT_USE_PROC_ACTIVE_A(0:15) BIT(1) %INIT('0'B*0)%CHARTEXT('/**/'),
      922+    1792                            /* activation bits for corr default USE proc */
      923+    1793                2 USE_PROCEDURE@P UBIN %INIT(0)%CHARTEXT('/**/'),
      924+    1794                            /* displacement value dropped by QCU$USE
      925+    1795                               for QCU$USE_CALL to warp to */
      926+    1796                2 PREVIOUS_INTERFACE_START$ PTR %INIT(ADDR(NIL))%CHARTEXT('/**/'),
      927+    1797                            /* pointer to previous saved state/internal value s
      928+    1798                               for master interface */
      929+    1799                2 PREVIOUS_FIELD_START_INDEX UBIN %INIT(0)%CHARTEXT('/**/'),
      930+    1800                            /* index for previous interface table range */
      931+    1801                2 PREVIOUS_FIELD_STOP_INDEX UBIN %INIT(0)%CHARTEXT('/**/'),
      932+    1802                            /* index for previous interface table range */
      933+    1803                2 EXPAND(0:9) UBIN;
      934+    1804
      935+    1805            %END_MACRO;
      936+    1806
      937+    1807          %MEND;
      938+    1808
      939+    1809        %EJECT;
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:325  
      940+    1810
      941+    1811          %MACRO QI_SWORK ( STCLASS = "SYMREF",
      942+    1812                            NAME = QI_SWORK );
      943+    1813
      944+    1814            %BEGIN_MACRO ( STCLASS = STCLASS );
      945+    1815
      946+    1816          DCL 1 NAME(0:7) UBIN STCLASS %INIT(0*0)%CHARTEXT('/**/');
      947+    1817
      948+    1818            %END_MACRO;
      949+    1819
      950+    1820          %MEND;
      951+    1821
      952+    1822          %MACRO QI_SWORK_2 ( STCLASS = "SYMREF",
      953+    1823                              NAME = QI_SWORK_2 );
      954+    1824
      955+    1825            %BEGIN_MACRO ( STCLASS = STCLASS );
      956+    1826
      957+    1827          DCL 1 NAME(0:7) UBIN STCLASS %INIT(0*0)%CHARTEXT('/**/');
      958+    1828
      959+    1829            %END_MACRO;
      960+    1830
      961+    1831          %MEND;
      962+    1832
      963+    1833        %EJECT;
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:326  
      964+    1834
      965+    1835          %MACRO QI_BLANK ( STCLASS = "SYMREF",
      966+    1836                            NAME = QI_BLANK );
      967+    1837
      968+    1838            %BEGIN_MACRO ( STCLASS = STCLASS );
      969+    1839
      970+    1840          DCL NAME STCLASS UBIN BYTE ALIGNED %INIT(%QI#BLANK)%CHARTEXT('/**/');
      971+    1841
      972+    1842            %END_MACRO;
      973+    1843
      974+    1844          %MEND;
      975+    1845
      976+    1846        %EJECT;
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:327  
      977+    1847
      978+    1848          %MACRO QI_MAT_MATCH ( STCLASS = "SYMREF",
      979+    1849                                NAME = QI_MAT_MATCH );
      980+    1850
      981+    1851            %BEGIN_MACRO ( STCLASS = STCLASS );
      982+    1852
      983+    1853          DCL NAME STCLASS UBIN BYTE ALIGNED %INIT(%QI#MAT_MATCH)%CHARTEXT('/**/');
      984+    1854
      985+    1855            %END_MACRO;
      986+    1856
      987+    1857          %MEND;
      988+    1858
      989+    1859          %MACRO QI_MAT_NONMATCH ( STCLASS = "SYMREF",
      990+    1860                                   NAME = QI_MAT_NONMATCH );
      991+    1861
      992+    1862            %BEGIN_MACRO ( STCLASS = STCLASS );
      993+    1863
      994+    1864          DCL NAME STCLASS UBIN BYTE ALIGNED %INIT(%QI#MAT_NONMATCH)%CHARTEXT('/**/');
      995+    1865
      996+    1866            %END_MACRO;
      997+    1867
      998+    1868          %MEND;
      999+    1869
     1000+    1870        %EJECT;
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:328  
     1001+    1871
     1002+    1872          %MACRO QI_SLASH ( STCLASS = "SYMREF",
     1003+    1873                            NAME = QI_SLASH );
     1004+    1874
     1005+    1875            %BEGIN_MACRO ( STCLASS = STCLASS );
     1006+    1876
     1007+    1877          DCL NAME STCLASS UBIN BYTE ALIGNED %INIT(%QI#SLASH)%CHARTEXT('/**/');
     1008+    1878
     1009+    1879            %END_MACRO;
     1010+    1880
     1011+    1881          %MEND;
     1012+    1882
     1013+    1883        %EJECT;
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:329  
     1014+    1884
     1015+    1885          %MACRO QI_ZERO ( STCLASS = "SYMREF",
     1016+    1886                           NAME = QI_ZERO );
     1017+    1887
     1018+    1888            %BEGIN_MACRO ( STCLASS = STCLASS );
     1019+    1889
     1020+    1890          DCL NAME STCLASS UBIN BYTE ALIGNED %INIT(%QI#ZERO)%CHARTEXT('/**/');
     1021+    1891
     1022+    1892            %END_MACRO;
     1023+    1893
     1024+    1894          %MEND;
     1025+    1895
     1026+    1896          %MACRO QI_BINARY_ZERO ( STCLASS = "SYMREF",
     1027+    1897                                  NAME = QI_BINARY_ZERO );
     1028+    1898
     1029+    1899            %BEGIN_MACRO ( STCLASS = STCLASS );
     1030+    1900
     1031+    1901          DCL NAME STCLASS UBIN BYTE ALIGNED %INIT(%QI#BINARY_ZERO)%CHARTEXT('/**/');
     1032+    1902
     1033+    1903            %END_MACRO;
     1034+    1904
     1035+    1905          %MEND;
     1036+    1906
     1037+    1907        %EJECT;
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:330  
     1038+    1908
     1039+    1909          %MACRO QI_CLASS_ALPHA ( STCLASS = "SYMREF",
     1040+    1910                                  NAME = QI_CLASS_ALPHA );
     1041+    1911
     1042+    1912            %BEGIN_MACRO ( STCLASS = STCLASS );
     1043+    1913
     1044+    1914          DCL NAME(0:255) STCLASS UBIN BYTE UNAL %INIT(
     1045+    1915              0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
     1046+    1916              1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
     1047+    1917              0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,
     1048+    1918              0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
     1049+    1919              0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
     1050+    1920              0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
     1051+    1921              0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
     1052+    1922              0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
     1053+    1923                                                      )%CHARTEXT('/**/');
     1054+    1924
     1055+    1925            %END_MACRO;
     1056+    1926
     1057+    1927          %MEND;
     1058+    1928
     1059+    1929        %EJECT;
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:331  
     1060+    1930
     1061+    1931          %MACRO QI_CLASS_NUMERIC ( STCLASS = "SYMREF",
     1062+    1932                                    NAME = QI_CLASS_NUMERIC );
     1063+    1933
     1064+    1934            %BEGIN_MACRO ( STCLASS = STCLASS );
     1065+    1935
     1066+    1936          DCL NAME(0:255) STCLASS UBIN BYTE UNAL %INIT(
     1067+    1937              0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
     1068+    1938              0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,
     1069+    1939              0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
     1070+    1940              0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
     1071+    1941              0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
     1072+    1942              0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
     1073+    1943              0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
     1074+    1944              0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
     1075+    1945                                                      )%CHARTEXT('/**/');
     1076+    1946
     1077+    1947            %END_MACRO;
     1078+    1948
     1079+    1949          %MEND;
     1080+    1950
     1081+    1951        %EJECT;
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:332  
     1082+    1952
     1083+    1953          %MACRO QI_OVERPUNCHED_SIGNS ( STCLASS = "SYMREF",
     1084+    1954                                        NAME = QI_OVERPUNCHED_SIGNS );
     1085+    1955
     1086+    1956            %BEGIN_MACRO ( STCLASS = STCLASS );
     1087+    1957
     1088+    1958          DCL NAME(0:19) STCLASS UBIN BYTE UNAL %INIT(
     1089+    1959              %ASCBIN('{'),%ASCBIN('A'),%ASCBIN('B'),%ASCBIN('C'),
     1090+    1960              %ASCBIN('D'),%ASCBIN('E'),%ASCBIN('F'),%ASCBIN('G'),
     1091+    1961              %ASCBIN('H'),%ASCBIN('I'),%ASCBIN('}'),%ASCBIN('J'),
     1092+    1962              %ASCBIN('K'),%ASCBIN('L'),%ASCBIN('M'),%ASCBIN('N'),
     1093+    1963              %ASCBIN('O'),%ASCBIN('P'),%ASCBIN('Q'),%ASCBIN('R')
     1094+    1964                                                      )%CHARTEXT('/**/');
     1095+    1965
     1096+    1966            %END_MACRO;
     1097+    1967
     1098+    1968          %MEND;
     1099+    1969
     1100+    1970        %EJECT;
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:333  
     1101+    1971
     1102+    1972          %MACRO QI_ZERO_ACCUMULATOR ( STCLASS = "SYMREF",
     1103+    1973                                       NAME = QI_ZERO_ACCUMULATOR );
     1104+    1974
     1105+    1975            %BEGIN_MACRO ( STCLASS = STCLASS );
     1106+    1976
     1107+    1977          DCL 1 NAME STCLASS,
     1108+    1978                2 *(0:6) UBIN %INIT(0*0)%CHARTEXT('/**/'),
     1109+    1979                2 * BIT(16) %INIT('00B0'X)%CHARTEXT('/**/');
     1110+    1980
     1111+    1981            %END_MACRO;
     1112+    1982
     1113+    1983          %MEND;
     1114+    1984
     1115+    1985        %EJECT;
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:334  
     1116+    1986        /*
     1117+    1987                               %%%%%%%  %%
     1118+    1988                                  %%    %%
     1119+    1989                                  %%    %% %%%    %%%%%
     1120+    1990                                  %%    %%%  %%  %%   %%
     1121+    1991                                  %%    %%   %%  %%%%%%%
     1122+    1992                                  %%    %%   %%  %%
     1123+    1993                                  %%    %%   %%   %%%%%
     1124+    1994
     1125+    1995                               %%%%%%%  %%%%%%   %%
     1126+    1996                               %%       %%   %%  %%
     1127+    1997                               %%       %%   %%  %%
     1128+    1998                               %%%%%    %%%%%%   %%
     1129+    1999                               %%       %%       %%
     1130+    2000                               %%       %%       %%
     1131+    2001                               %%       %%       %%%%%%%
     1132+    2002
     1133+    2003             %% %%%   %% %%%%   %%%%%    %%% %%  %% %%%%   %%% %%  %%% %%
     1134+    2004             %%%  %%  %%%%     %%   %%  %%  %%%  %%%%     %%  %%%  %% % %%
     1135+    2005             %%%  %%  %%%      %%   %%  %%  %%%  %%%      %%  %%%  %% % %%
     1136+    2006             %%%  %%  %%       %%   %%  %%  %%%  %%       %%  %%%  %% % %%
     1137+    2007             %% %%%   %%        %%%%%    %%% %%  %%        %%% %%  %% % %%
     1138+    2008             %%                              %%
     1139+    2009             %%                          %%%%%
     1140+    2010                                                                            */
     1141+    2011        /*D* NAME:         FPL_PROGRAM_STRUCTURE
     1142+    2012             PURPOSE:      To provide the MACROs which frame compiler-
     1143+    2013                           generated structures within the user's FPL
     1144+    2014                           program.
     1145+    2015             DESCRIPTION:  Below are MACROs whose invocation will
     1146+    2016                           cause generation of structures which frame
     1147+    2017                           the FPL program itself:
     1148+    2018                           1)  the opcode-operand sequences for runtime
     1149+    2019                               instructions;
     1150+    2020                           2)  static data (in user procedure) which
     1151+    2021                               define the attributes of FILEs, FRames,
     1152+    2022                               WORKING-STORAGE data, etc.;
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:335  
     1153+    2023                           3)  static data (in user data) which define
     1154+    2024                               the runtime status, or scratch, area,
     1155+    2025                               used to keep track of current operations
     1156+    2026                               on the item addressed (FILE, FRame, etc.).
     1157+    2027        */
     1158+    2028
     1159+    2029        %EJECT;
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:336  
     1160+    2030        /*
     1161+    2031                                                               %%
     1162+    2032                                                               %%
     1163+    2033              %%%%%   %% %%%             %%%%%%   %%%%%    %%% %%   %%%%%
     1164+    2034             %%   %%  %%%  %%  %%%%%%%  %%       %%   %%  %%  %%%  %%   %%
     1165+    2035             %%   %%  %%%  %%           %%       %%   %%  %%  %%%  %%%%%%%
     1166+    2036             %%   %%  %%%  %%           %%       %%   %%  %%  %%%  %%
     1167+    2037              %%%%%   %% %%%             %%%%%%   %%%%%    %%% %%   %%%%%
     1168+    2038                      %%
     1169+    2039                      %%
     1170+    2040                                                   %%%
     1171+    2041                                                   %%%
     1172+    2042                       %%%%%%   %%%%%    %%% %%     %%     %%%%%%
     1173+    2043                      %%       %%   %%  %%  %%%    %%     %%
     1174+    2044                       %%%%%   %%%%%%%  %%  %%%            %%%%%
     1175+    2045                           %%  %%       %%  %%%                %%
     1176+    2046                      %%%%%%    %%%%%    %%% %%           %%%%%%
     1177+    2047                                             %%
     1178+    2048                                             %%
     1179+    2049                                                                            */
     1180+    2050
     1181+    2051        /*
     1182+    2052                 Basic op-code sequence
     1183+    2053        */
     1184+    2054          %MACRO QI$OP_SEQUENCE ( STCLASS = "BASED",
     1185+    2055                           NAME = QI$OP_SEQUENCE );
     1186+    2056
     1187+    2057            %BEGIN_MACRO ( STCLASS = STCLASS );
     1188+    2058
     1189+    2059          DCL 1 NAME STCLASS ALIGNED,
     1190+    2060                2 CODE UBIN,
     1191+    2061                          /* Op-code. */
     1192+    2062                2 OPERAND_A@P(0:0) UBIN;
     1193+    2063                          /* Operands:  generally a list of DADs. */
     1194+    2064
     1195+    2065            %END_MACRO;
     1196+    2066
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:337  
     1197+    2067          %MEND;
     1198+    2068
     1199+    2069        %EJECT;
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:338  
     1200+    2070        /*
     1201+    2071            Op-code sequence for ABORT [ "literal" | dataname ] verb.
     1202+    2072        */
     1203+    2073          %MACRO QI$OP_ABORT ( STCLASS = "BASED",
     1204+    2074                               NAME = QI$OP_ABORT );
     1205+    2075
     1206+    2076            %BEGIN_MACRO ( STCLASS = STCLASS );
     1207+    2077
     1208+    2078          DCL 1 NAME STCLASS ALIGNED,
     1209+    2079                2 CODE UBIN,
     1210+    2080                2 OPERAND@P UBIN,
     1211+    2081                2 NEXT_CODE@P UBIN;
     1212+    2082
     1213+    2083            %END_MACRO;
     1214+    2084
     1215+    2085          %MEND;
     1216+    2086
     1217+    2087        /*
     1218+    2088            Op-code sequence for ACCEPT verb.
     1219+    2089        */
     1220+    2090          %MACRO QI$OP_ACCEPT ( STCLASS = "BASED",
     1221+    2091                                NAME = QI$OP_ACCEPT );
     1222+    2092
     1223+    2093            %BEGIN_MACRO ( STCLASS = STCLASS );
     1224+    2094
     1225+    2095          DCL 1 NAME STCLASS ALIGNED,
     1226+    2096                2 CODE UBIN,
     1227+    2097                2 TYPE UBIN(3) UNAL,
     1228+    2098                2 FIELD_COUNT UBIN(13) UNAL,
     1229+    2099                2 DATANAME@P UBIN,
     1230+    2100                2 FIELD_A@P(0:0) REDEF DATANAME@P UBIN,
     1231+    2101                2 NEXT_CODE@P UBIN;
     1232+    2102
     1233+    2103            %END_MACRO;
     1234+    2104
     1235+    2105          %MEND;
     1236+    2106
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:339  
     1237+    2107        /*
     1238+    2108            Op-code sequence for ACTIVATE verb.
     1239+    2109        */
     1240+    2110          %MACRO QI$OP_ACTIVATE ( STCLASS = "BASED",
     1241+    2111                                  NAME = QI$OP_ACTIVATE );
     1242+    2112
     1243+    2113            %BEGIN_MACRO ( STCLASS = STCLASS );
     1244+    2114
     1245+    2115          DCL 1 NAME STCLASS ALIGNED,
     1246+    2116                2 CODE UBIN,
     1247+    2117                2 OPERAND_COUNT UBIN,
     1248+    2118                2 OPERAND_A@P(0:0) UBIN;
     1249+    2119
     1250+    2120            %END_MACRO;
     1251+    2121
     1252+    2122          %MEND;
     1253+    2123
     1254+    2124        /*
     1255+    2125            Op-code sequence for ADD operation.
     1256+    2126        */
     1257+    2127          %MACRO QI$OP_ADD ( STCLASS = "BASED",
     1258+    2128                             NAME = QI$OP_ADD );
     1259+    2129
     1260+    2130            %BEGIN_MACRO ( STCLASS = STCLASS );
     1261+    2131
     1262+    2132          DCL 1 NAME STCLASS ALIGNED,
     1263+    2133                2 CODE UBIN,
     1264+    2134                2 NUMERIC_SOURCE@P UBIN,
     1265+    2135                2 NUMERIC_TARGET@P UBIN,
     1266+    2136                2 NEXT_CODE@P UBIN;
     1267+    2137
     1268+    2138            %END_MACRO;
     1269+    2139
     1270+    2140          %MEND;
     1271+    2141
     1272+    2142        /*
     1273+    2143            Op-code sequence for ADDing a group of arguments.
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:340  
     1274+    2144        */
     1275+    2145          %MACRO QI$OP_ADDX ( STCLASS = "BASED",
     1276+    2146                              NAME = QI$OP_ADDX );
     1277+    2147
     1278+    2148            %BEGIN_MACRO ( STCLASS = STCLASS );
     1279+    2149
     1280+    2150          DCL 1 NAME STCLASS ALIGNED,
     1281+    2151                2 CODE UBIN,
     1282+    2152                2 ARGUMENT_COUNT UBIN,
     1283+    2153                2 ARGUMENT_A@P(0:0) UBIN;
     1284+    2154
     1285+    2155            %END_MACRO;
     1286+    2156
     1287+    2157          %MEND;
     1288+    2158
     1289+    2159        /*
     1290+    2160            Op-code sequence for ALL "literal" to 'temp' DISPLAY operation.
     1291+    2161        */
     1292+    2162          %MACRO QI$OP_ALL_LITERAL ( STCLASS = "BASED",
     1293+    2163                                     NAME = QI$OP_ALL_LITERAL );
     1294+    2164
     1295+    2165            %BEGIN_MACRO ( STCLASS = STCLASS );
     1296+    2166
     1297+    2167          DCL 1 NAME STCLASS ALIGNED,
     1298+    2168                2 CODE UBIN,
     1299+    2169                2 ALL_LITERAL_SOURCE@P UBIN,
     1300+    2170                2 TEMP_DISPLAY_TARGET@P UBIN,
     1301+    2171                2 NEXT_CODE@P UBIN;
     1302+    2172
     1303+    2173            %END_MACRO;
     1304+    2174
     1305+    2175          %MEND;
     1306+    2176
     1307+    2177        /*
     1308+    2178            Op-code sequence for APPLY verb.
     1309+    2179        */
     1310+    2180          %MACRO QI$OP_APPLY ( STCLASS = "BASED",
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:341  
     1311+    2181                               NAME = QI$OP_APPLY );
     1312+    2182
     1313+    2183            %BEGIN_MACRO ( STCLASS = STCLASS );
     1314+    2184
     1315+    2185          DCL 1 NAME STCLASS ALIGNED,
     1316+    2186                2 CODE UBIN,
     1317+    2187                2 VISUAL_ATTRIBUTE UBIN,
     1318+    2188                2 OPERAND_COUNT UBIN,
     1319+    2189                2 OPERAND_A@P(0:0) UBIN;
     1320+    2190
     1321+    2191            %END_MACRO;
     1322+    2192
     1323+    2193          %MEND;
     1324+    2194
     1325+    2195        /*
     1326+    2196            Op-code sequence for CALL verb.
     1327+    2197        */
     1328+    2198          %MACRO QI$OP_CALL ( STCLASS = "BASED",
     1329+    2199                              NAME = QI$OP_CALL );
     1330+    2200
     1331+    2201            %BEGIN_MACRO ( STCLASS = STCLASS );
     1332+    2202
     1333+    2203          DCL 1 NAME STCLASS ALIGNED,
     1334+    2204                2 CODE UBIN,
     1335+    2205                2 EPTR$ EPTR,
     1336+    2206                2 PTR$ REDEF EPTR$ PTR,
     1337+    2207                2 DESCRIPTOR_LIST,
     1338+    2208                  3 ARGUMENT_COUNT UBIN(8) UNAL,
     1339+    2209                  3 DESCRIPTOR_COUNT UBIN(8) UNAL,
     1340+    2210                2 ARGUMENT_A@P(0:0) UBIN;
     1341+    2211
     1342+    2212            %END_MACRO;
     1343+    2213
     1344+    2214          %MEND;
     1345+    2215
     1346+    2216        /*
     1347+    2217            Op-code sequence for CLEAR verb.
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:342  
     1348+    2218        */
     1349+    2219          %MACRO QI$OP_CLEAR ( STCLASS = "BASED",
     1350+    2220                               NAME = QI$OP_CLEAR );
     1351+    2221
     1352+    2222            %BEGIN_MACRO ( STCLASS = STCLASS );
     1353+    2223
     1354+    2224          DCL 1 NAME STCLASS ALIGNED,
     1355+    2225                2 CODE UBIN,
     1356+    2226                2 IS_CLEAR_ALL BIT(1) UNAL,
     1357+    2227                2 IO_FLAGS,
     1358+    2228                  3 IS_OUTPUT BIT(1) UNAL,
     1359+    2229                  3 IS_INPUT BIT(1) UNAL,
     1360+    2230                2 IO_VALUE REDEF IO_FLAGS UBIN(2) UNAL,
     1361+    2231                2 OPERAND_COUNT UBIN(13) UNAL,
     1362+    2232                2 OPERAND_A@P(0:0) UBIN;
     1363+    2233
     1364+    2234            %END_MACRO;
     1365+    2235
     1366+    2236          %MEND;
     1367+    2237
     1368+    2238        /*
     1369+    2239            Op-code sequence for CLOSE verb.
     1370+    2240        */
     1371+    2241          %MACRO QI$OP_CLOSE ( STCLASS = "BASED",
     1372+    2242                               NAME = QI$OP_CLOSE );
     1373+    2243
     1374+    2244            %BEGIN_MACRO ( STCLASS = STCLASS );
     1375+    2245
     1376+    2246          DCL 1 NAME STCLASS ALIGNED,
     1377+    2247                2 CODE UBIN,
     1378+    2248                2 FILE_COUNT UBIN,
     1379+    2249                2 OPERAND_A(0:0),
     1380+    2250                  3 FUNNY_ZERO_WORD UBIN,
     1381+    2251                  3 FILE@P UBIN;
     1382+    2252
     1383+    2253            %END_MACRO;
     1384+    2254
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:343  
     1385+    2255          %MEND;
     1386+    2256
     1387+    2257        /*
     1388+    2258            Op-code sequence for 'temp' BINARY to BINARY conversion.
     1389+    2259        */
     1390+    2260          %MACRO QI$OP_CNVBBX ( STCLASS = "BASED",
     1391+    2261                                NAME = QI$OP_CNVBBX );
     1392+    2262
     1393+    2263            %BEGIN_MACRO ( STCLASS = STCLASS );
     1394+    2264
     1395+    2265          DCL 1 NAME STCLASS ALIGNED,
     1396+    2266                2 CODE UBIN,
     1397+    2267                2 TEMP_BINARY_SOURCE@P UBIN,
     1398+    2268                2 BINARY_TARGET@P UBIN,
     1399+    2269                2 NEXT_CODE@P UBIN;
     1400+    2270
     1401+    2271            %END_MACRO;
     1402+    2272
     1403+    2273          %MEND;
     1404+    2274
     1405+    2275        /*
     1406+    2276            Op-code sequence for BINARY to 'temp' DISPLAY conversion.
     1407+    2277        */
     1408+    2278          %MACRO QI$OP_CNVBN ( STCLASS = "BASED",
     1409+    2279                               NAME = QI$OP_CNVBN );
     1410+    2280
     1411+    2281            %BEGIN_MACRO ( STCLASS = STCLASS );
     1412+    2282
     1413+    2283          DCL 1 NAME STCLASS ALIGNED,
     1414+    2284                2 CODE UBIN,
     1415+    2285                2 BINARY_SOURCE@P UBIN,
     1416+    2286                2 TEMP_DISPLAY_TARGET@P UBIN,
     1417+    2287                2 NEXT_CODE@P UBIN;
     1418+    2288
     1419+    2289            %END_MACRO;
     1420+    2290
     1421+    2291          %MEND;
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:344  
     1422+    2292
     1423+    2293        /*
     1424+    2294            Op-code sequence for 'temp' BINARY to DISPLAY conversion.
     1425+    2295        */
     1426+    2296          %MACRO QI$OP_CNVBNX ( STCLASS = "BASED",
     1427+    2297                                NAME = QI$OP_CNVBNX );
     1428+    2298
     1429+    2299            %BEGIN_MACRO ( STCLASS = STCLASS );
     1430+    2300
     1431+    2301          DCL 1 NAME STCLASS ALIGNED,
     1432+    2302                2 CODE UBIN,
     1433+    2303                2 TEMP_BINARY_SOURCE@P UBIN,
     1434+    2304                2 DISPLAY_TARGET@P UBIN,
     1435+    2305                2 NEXT_CODE@P UBIN;
     1436+    2306
     1437+    2307            %END_MACRO;
     1438+    2308
     1439+    2309          %MEND;
     1440+    2310
     1441+    2311        /*
     1442+    2312            Op-code sequence for 'temp' BINARY to PACKED conversion.
     1443+    2313        */
     1444+    2314          %MACRO QI$OP_CNVBPX ( STCLASS = "BASED",
     1445+    2315                                NAME = QI$OP_CNVBPX );
     1446+    2316
     1447+    2317            %BEGIN_MACRO ( STCLASS = STCLASS );
     1448+    2318
     1449+    2319          DCL 1 NAME STCLASS ALIGNED,
     1450+    2320                2 CODE UBIN,
     1451+    2321                2 TEMP_BINARY_SOURCE@P UBIN,
     1452+    2322                2 PACKED_TARGET@P UBIN,
     1453+    2323                2 NEXT_CODE@P UBIN;
     1454+    2324
     1455+    2325            %END_MACRO;
     1456+    2326
     1457+    2327          %MEND;
     1458+    2328
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:345  
     1459+    2329        /*
     1460+    2330            Op-code sequence for DISPLAY to 'temp' BINARY conversion.
     1461+    2331        */
     1462+    2332          %MACRO QI$OP_CNVNBT ( STCLASS = "BASED",
     1463+    2333                                NAME = QI$OP_CNVNBT );
     1464+    2334
     1465+    2335            %BEGIN_MACRO ( STCLASS = STCLASS );
     1466+    2336
     1467+    2337          DCL 1 NAME STCLASS ALIGNED,
     1468+    2338                2 CODE UBIN,
     1469+    2339                2 DISPLAY_SOURCE@P UBIN,
     1470+    2340                2 TEMP_BINARY_TARGET@P UBIN,
     1471+    2341                2 NEXT_CODE@P UBIN;
     1472+    2342
     1473+    2343            %END_MACRO;
     1474+    2344
     1475+    2345          %MEND;
     1476+    2346
     1477+    2347        /*
     1478+    2348            Op-code sequence for PACKED to 'temp' BINARY conversion.
     1479+    2349        */
     1480+    2350          %MACRO QI$OP_CNVPBT ( STCLASS = "BASED",
     1481+    2351                                NAME = QI$OP_CNVPBT );
     1482+    2352
     1483+    2353            %BEGIN_MACRO ( STCLASS = STCLASS );
     1484+    2354
     1485+    2355          DCL 1 NAME STCLASS ALIGNED,
     1486+    2356                2 CODE UBIN,
     1487+    2357                2 PACKED_SOURCE@P UBIN,
     1488+    2358                2 TEMP_BINARY_TARGET@P UBIN,
     1489+    2359                2 NEXT_CODE@P UBIN;
     1490+    2360
     1491+    2361            %END_MACRO;
     1492+    2362
     1493+    2363          %MEND;
     1494+    2364
     1495+    2365        /*
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:346  
     1496+    2366            Op-code sequence for PACKED to 'temp' DISPLAY conversion.
     1497+    2367        */
     1498+    2368          %MACRO QI$OP_CNVPN ( STCLASS = "BASED",
     1499+    2369                                NAME = QI$OP_CNVPN );
     1500+    2370
     1501+    2371            %BEGIN_MACRO ( STCLASS = STCLASS );
     1502+    2372
     1503+    2373          DCL 1 NAME STCLASS ALIGNED,
     1504+    2374                2 CODE UBIN,
     1505+    2375                2 PACKED_SOURCE@P UBIN,
     1506+    2376                2 TEMP_DISPLAY_TARGET@P UBIN,
     1507+    2377                2 NEXT_CODE@P UBIN;
     1508+    2378
     1509+    2379            %END_MACRO;
     1510+    2380
     1511+    2381          %MEND;
     1512+    2382
     1513+    2383        /*
     1514+    2384            Op-code sequence for DISPLAY verb.
     1515+    2385        */
     1516+    2386          %MACRO QI$OP_DISPLAY ( STCLASS = "BASED",
     1517+    2387                                 NAME = QI$OP_DISPLAY );
     1518+    2388
     1519+    2389            %BEGIN_MACRO ( STCLASS = STCLASS );
     1520+    2390
     1521+    2391          DCL 1 NAME STCLASS ALIGNED,
     1522+    2392                2 CODE UBIN,
     1523+    2393                2 TYPE UBIN(3) UNAL,
     1524+    2394                2 FIELD_COUNT UBIN(13) UNAL,
     1525+    2395                2 FIELD_A@P(0:0) UBIN,
     1526+    2396                2 NEXT_CODE@P REDEF FIELD_A@P UBIN;
     1527+    2397
     1528+    2398            %END_MACRO;
     1529+    2399
     1530+    2400          %MEND;
     1531+    2401
     1532+    2402        /*
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:347  
     1533+    2403            Op-code sequence for DIVide operation.
     1534+    2404        */
     1535+    2405          %MACRO QI$OP_DIV ( STCLASS = "BASED",
     1536+    2406                             NAME = QI$OP_DIV );
     1537+    2407
     1538+    2408            %BEGIN_MACRO ( STCLASS = STCLASS );
     1539+    2409
     1540+    2410          DCL 1 NAME STCLASS ALIGNED,
     1541+    2411                2 CODE UBIN,
     1542+    2412                2 DIVISOR@P UBIN,
     1543+    2413                2 DIVIDEND_AND_QUOTIENT@P UBIN,
     1544+    2414                2 NEXT_CODE@P UBIN;
     1545+    2415
     1546+    2416            %END_MACRO;
     1547+    2417
     1548+    2418          %MEND;
     1549+    2419
     1550+    2420        /*
     1551+    2421            Op-code sequence for DIViding two arguments and placing the
     1552+    2422            result into the accumulator.
     1553+    2423        */
     1554+    2424          %MACRO QI$OP_DIVX ( STCLASS = "BASED",
     1555+    2425                              NAME = QI$OP_DIVX );
     1556+    2426
     1557+    2427            %BEGIN_MACRO ( STCLASS = STCLASS );
     1558+    2428
     1559+    2429          DCL 1 NAME STCLASS ALIGNED,
     1560+    2430                2 CODE UBIN,
     1561+    2431                2 DIVISOR@P UBIN,
     1562+    2432                2 DIVIDEND@P UBIN,
     1563+    2433                2 NEXT_CODE@P UBIN;
     1564+    2434
     1565+    2435            %END_MACRO;
     1566+    2436
     1567+    2437          %MEND;
     1568+    2438
     1569+    2439        /*
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:348  
     1570+    2440           Op-code sequence for ENABLE verb.
     1571+    2441        */
     1572+    2442          %MACRO QI$OP_ENABLE ( STCLASS = "BASED",
     1573+    2443                                NAME = QI$OP_ENABLE );
     1574+    2444
     1575+    2445            %BEGIN_MACRO ( STCLASS = STCLASS );
     1576+    2446
     1577+    2447          DCL 1 NAME STCLASS ALIGNED,
     1578+    2448                2 CODE UBIN,
     1579+    2449                2 * UBIN(1) UNAL,
     1580+    2450                2 IO_FLAGS,
     1581+    2451                  3 IS_OUTPUT BIT(1) UNAL,
     1582+    2452                  3 IS_INPUT BIT(1) UNAL,
     1583+    2453                2 IO_VALUE REDEF IO_FLAGS UBIN(2) UNAL,
     1584+    2454                2 OPERAND_COUNT UBIN(13) UNAL,
     1585+    2455                2 OPERAND_A@P(0:0) UBIN;
     1586+    2456
     1587+    2457            %END_MACRO;
     1588+    2458
     1589+    2459          %MEND;
     1590+    2460
     1591+    2461        /*
     1592+    2462           Op-code sequence for GO TO transfer of control verb.
     1593+    2463        */
     1594+    2464          %MACRO QI$OP_GOTO ( STCLASS = "BASED",
     1595+    2465                              NAME = QI$OP_GOTO );
     1596+    2466
     1597+    2467            %BEGIN_MACRO ( STCLASS = STCLASS );
     1598+    2468
     1599+    2469          DCL 1 NAME STCLASS ALIGNED,
     1600+    2470                2 CODE UBIN,
     1601+    2471                2 GOTO@P UBIN,
     1602+    2472                2 NEXT_CODE@P UBIN;
     1603+    2473
     1604+    2474            %END_MACRO;
     1605+    2475
     1606+    2476          %MEND;
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:349  
     1607+    2477
     1608+    2478        /*
     1609+    2479            Op-code sequence for GO TO DEPENDING ON transfer of control verb.
     1610+    2480        */
     1611+    2481          %MACRO QI$OP_GOTODP ( STCLASS = "BASED",
     1612+    2482                                NAME = QI$OP_GOTODP );
     1613+    2483
     1614+    2484            %BEGIN_MACRO ( STCLASS = STCLASS );
     1615+    2485
     1616+    2486          DCL 1 NAME STCLASS ALIGNED,
     1617+    2487                2 CODE UBIN,
     1618+    2488                2 GOTO_INDEX@P UBIN,
     1619+    2489                2 PROCEDURE_NAME_COUNT UBIN,
     1620+    2490                2 PROCEDURE_NAME_A@P(0:0) UBIN;
     1621+    2491
     1622+    2492            %END_MACRO;
     1623+    2493
     1624+    2494          %MEND;
     1625+    2495
     1626+    2496        /*
     1627+    2497            Op-code sequence for IF CLASS transfer of control verb.
     1628+    2498        */
     1629+    2499          %MACRO QI$OP_IFCLS ( STCLASS = "BASED",
     1630+    2500                               NAME = QI$OP_IFCLS );
     1631+    2501
     1632+    2502            %BEGIN_MACRO ( STCLASS = STCLASS );
     1633+    2503
     1634+    2504          DCL 1 NAME STCLASS ALIGNED,
     1635+    2505                2 CODE UBIN,
     1636+    2506                2 SOURCE@P UBIN,
     1637+    2507                2 ATTRIBUTE,
     1638+    2508                  3 * UBIN(11) UNAL,
     1639+    2509                  3 IS_NOT BIT(1) UNAL,
     1640+    2510                  3 TYPE,
     1641+    2511                    4 IS_ALPHA BIT(1) UNAL,
     1642+    2512                    4 IS_NUMERIC BIT(1) UNAL,
     1643+    2513                    4 IS_DIGITS BIT(1) UNAL,
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:350  
     1644+    2514                    4 * UBIN(1) UNAL,
     1645+    2515                  3 TYPES REDEF TYPE UBIN(4) UNAL,
     1646+    2516                2 FALSE_CONDITION@P UBIN,
     1647+    2517                2 NEXT_CODE@P UBIN;
     1648+    2518
     1649+    2519            %END_MACRO;
     1650+    2520
     1651+    2521          %MEND;
     1652+    2522
     1653+    2523        /*
     1654+    2524            Op-code sequence for IF CONDITIONAL ALPHA tranfer of control verb.
     1655+    2525        */
     1656+    2526          %MACRO QI$OP_IFCNDA ( STCLASS = "BASED",
     1657+    2527                                NAME = QI$OP_IFCNDA );
     1658+    2528
     1659+    2529            %BEGIN_MACRO ( STCLASS = STCLASS );
     1660+    2530
     1661+    2531          DCL 1 NAME STCLASS ALIGNED,
     1662+    2532                2 CODE UBIN,
     1663+    2533                2 ALPHANUMERIC_SOURCE@P UBIN,
     1664+    2534                2 CONDITION_CONTROL_BLOCK@P UBIN,
     1665+    2535                2 ATTRIBUTE,
     1666+    2536                  3 * UBIN(11) UNAL,
     1667+    2537                  3 IS_NOT BIT(1) UNAL,
     1668+    2538                  3 * UBIN(4) UNAL,
     1669+    2539                2 FALSE_CONDITION@P UBIN,
     1670+    2540                2 NEXT_CODE@P UBIN;
     1671+    2541
     1672+    2542            %END_MACRO;
     1673+    2543
     1674+    2544          %MEND;
     1675+    2545
     1676+    2546        /*
     1677+    2547            Op-code sequence for IF CONDITIONAL NUMERIC transfer of control
     1678+    2548            verb.
     1679+    2549        */
     1680+    2550          %MACRO QI$OP_IFCNDN ( STCLASS = "BASED",
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:351  
     1681+    2551                                NAME = QI$OP_IFCNDN );
     1682+    2552
     1683+    2553            %BEGIN_MACRO ( STCLASS = STCLASS );
     1684+    2554
     1685+    2555          DCL 1 NAME STCLASS ALIGNED,
     1686+    2556                2 CODE UBIN,
     1687+    2557                2 NUMERIC_SOURCE@P UBIN,
     1688+    2558                2 CONDITION_CONTROL_BLOCK@P UBIN,
     1689+    2559                2 ATTRIBUTE,
     1690+    2560                  3 * UBIN(11) UNAL,
     1691+    2561                  3 IS_NOT BIT(1) UNAL,
     1692+    2562                  3 * UBIN(4) UNAL,
     1693+    2563                2 FALSE_CONDITION@P UBIN,
     1694+    2564                2 NEXT_CODE@P UBIN;
     1695+    2565
     1696+    2566            %END_MACRO;
     1697+    2567
     1698+    2568          %MEND;
     1699+    2569
     1700+    2570        /*
     1701+    2571            Op-code sequence for IF frame-or-field-status
     1702+    2572            IF framename ACTIVE
     1703+    2573            IF fieldname ENABLED FOR { INPUT | OUTPUT | I-O }
     1704+    2574            IF fieldname { AVAILABLE | PRESENTED }
     1705+    2575        */
     1706+    2576          %MACRO QI$OP_IFINDR ( STCLASS = "BASED",
     1707+    2577                                NAME = QI$OP_IFINDR );
     1708+    2578
     1709+    2579            %BEGIN_MACRO ( STCLASS = STCLASS );
     1710+    2580
     1711+    2581          DCL 1 NAME STCLASS ALIGNED,
     1712+    2582                2 CODE UBIN,
     1713+    2583                2 FRAME_OR_FIELD@P UBIN,
     1714+    2584                2 ATTRIBUTE,
     1715+    2585                  3 * UBIN(11) UNAL,
     1716+    2586                  3 IS_NOT BIT(1) UNAL,
     1717+    2587                  3 STATUS_TYPE UBIN(4) UNAL,
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:352  
     1718+    2588                2 FALSE_CONDITION@P UBIN,
     1719+    2589                2 NEXT_CODE@P UBIN;
     1720+    2590
     1721+    2591            %END_MACRO;
     1722+    2592
     1723+    2593          %MEND;
     1724+    2594
     1725+    2595        /*
     1726+    2596            Op-code sequence for IF RELATIONAL ALPHABETIC transfer of control
     1727+    2597            verb.
     1728+    2598        */
     1729+    2599          %MACRO QI$OP_IFRELA ( STCLASS = "BASED",
     1730+    2600                                NAME = QI$OP_IFRELA );
     1731+    2601
     1732+    2602            %BEGIN_MACRO ( STCLASS = STCLASS );
     1733+    2603
     1734+    2604          DCL 1 NAME STCLASS ALIGNED,
     1735+    2605                2 CODE UBIN,
     1736+    2606                2 ALPHANUMERIC_SOURCE@P UBIN,
     1737+    2607                2 ALPHANUMERIC_TARGET@P UBIN,
     1738+    2608                2 RELATIONAL_ATTRIBUTE UBIN,
     1739+    2609                2 FALSE_CONDITION@P UBIN,
     1740+    2610                2 NEXT_CODE@P UBIN;
     1741+    2611
     1742+    2612            %END_MACRO;
     1743+    2613
     1744+    2614          %MEND;
     1745+    2615
     1746+    2616        /*
     1747+    2617            Op-code sequence for IF RELATIONAL GROUP transfer of control
     1748+    2618            verb.
     1749+    2619        */
     1750+    2620          %MACRO QI$OP_IFRELG ( STCLASS = "BASED",
     1751+    2621                                NAME = QI$OP_IFRELG );
     1752+    2622
     1753+    2623            %BEGIN_MACRO ( STCLASS = STCLASS );
     1754+    2624
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:353  
     1755+    2625          DCL 1 NAME STCLASS ALIGNED,
     1756+    2626                2 CODE UBIN,
     1757+    2627                2 IS_SOURCE_GROUP BIT(1) UNAL,
     1758+    2628                2 * UBIN(1) UNAL,
     1759+    2629                2 ANTI_GROUP_LENGTH UBIN(14) UNAL,
     1760+    2630                2 SOURCE@P UBIN,
     1761+    2631                2 TARGET@P UBIN,
     1762+    2632                2 RELATIONAL_ATTRIBUTE UBIN,
     1763+    2633                2 FALSE_CONDITION@P UBIN,
     1764+    2634                2 NEXT_CODE@P UBIN;
     1765+    2635
     1766+    2636            %END_MACRO;
     1767+    2637
     1768+    2638          %MEND;
     1769+    2639
     1770+    2640        /*
     1771+    2641            Op-code sequence for IF RELATIONAL NUMERIC transfer of control
     1772+    2642            verb.
     1773+    2643        */
     1774+    2644          %MACRO QI$OP_IFRELN ( STCLASS = "BASED",
     1775+    2645                                NAME = QI$OP_IFRELN );
     1776+    2646
     1777+    2647            %BEGIN_MACRO ( STCLASS = STCLASS );
     1778+    2648
     1779+    2649          DCL 1 NAME STCLASS ALIGNED,
     1780+    2650                2 CODE UBIN,
     1781+    2651                2 NUMERIC_SOURCE@P UBIN,
     1782+    2652                2 NUMERIC_TARGET@P UBIN,
     1783+    2653                2 RELATIONAL_ATTRIBUTE UBIN,
     1784+    2654                2 FALSE_CONDITION@P UBIN,
     1785+    2655                2 NEXT_CODE@P UBIN;
     1786+    2656
     1787+    2657            %END_MACRO;
     1788+    2658
     1789+    2659          %MEND;
     1790+    2660
     1791+    2661
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:354  
     1792+    2662        /*
     1793+    2663            Op-code sequence for INSPECT verb (TALLYING or REPLACING).
     1794+    2664        */
     1795+    2665          %MACRO QI$OP_INSPECT ( STCLASS = "BASED",
     1796+    2666                                 NAME = QI$OP_INSPECT );
     1797+    2667
     1798+    2668            %BEGIN_MACRO ( STCLASS = STCLASS );
     1799+    2669
     1800+    2670          DCL 1 NAME STCLASS ALIGNED,
     1801+    2671                2 CODE UBIN,
     1802+    2672                2 SOURCE@P UBIN,
     1803+    2673                2 TALLYING_ITEM@P UBIN,
     1804+    2674                2 REPLACING_OLD_ITEM@P REDEF TALLYING_ITEM@P UBIN,
     1805+    2675                2 TALLYING_FOR_ITEM@P UBIN,
     1806+    2676                2 REPLACING_NEW_ITEM@P REDEF TALLYING_FOR_ITEM@P UBIN,
     1807+    2677                2 TALLYING_INITIAL_ITEM@P UBIN,
     1808+    2678                2 REPLACING_INITIAL_ITEM@P REDEF TALLYING_INITIAL_ITEM@P UBIN,
     1809+    2679                2 ATTRIBUTE,
     1810+    2680                  3 * UBIN(10) UNAL,
     1811+    2681                  3 IS_REPLACING BIT(1) UNAL,
     1812+    2682                  3 BEFORE_AFTER UBIN(2) UNAL,
     1813+    2683                  3 WHICH_CHARS UBIN(3) UNAL,
     1814+    2684                2 NEXT_CODE@P UBIN;
     1815+    2685
     1816+    2686            %END_MACRO;
     1817+    2687
     1818+    2688          %MEND;
     1819+    2689
     1820+    2690        /*
     1821+    2691            Op-code sequence for ON SIZE ERROR condition.
     1822+    2692        */
     1823+    2693          %MACRO QI$OP_JAZ ( STCLASS = "BASED",
     1824+    2694                             NAME = QI$OP_JAZ );
     1825+    2695
     1826+    2696            %BEGIN_MACRO ( STCLASS = STCLASS );
     1827+    2697
     1828+    2698          DCL 1 NAME STCLASS ALIGNED,
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:355  
     1829+    2699                2 CODE UBIN,
     1830+    2700                2 EVERYTHINGS_PEACHY@P UBIN,
     1831+    2701                2 NEXT_CODE@P UBIN;
     1832+    2702
     1833+    2703            %END_MACRO;
     1834+    2704
     1835+    2705          %MEND;
     1836+    2706
     1837+    2707        /*
     1838+    2708            Op-code sequence for NO DATA condition.
     1839+    2709        */
     1840+    2710          %MACRO QI$OP_JND ( STCLASS = "BASED",
     1841+    2711                             NAME = QI$OP_JND );
     1842+    2712
     1843+    2713            %BEGIN_MACRO ( STCLASS = STCLASS );
     1844+    2714
     1845+    2715          DCL 1 NAME STCLASS ALIGNED,
     1846+    2716                2 CODE UBIN,
     1847+    2717                2 EVERYTHINGS_PEACHY@P UBIN,
     1848+    2718                2 NEXT_CODE@P UBIN;
     1849+    2719
     1850+    2720            %END_MACRO;
     1851+    2721
     1852+    2722          %MEND;
     1853+    2723
     1854+    2724        /*
     1855+    2725            Op-code sequence for LOAD verb.
     1856+    2726        */
     1857+    2727          %MACRO QI$OP_LOAD ( STCLASS = "BASED",
     1858+    2728                              NAME = QI$OP_LOAD );
     1859+    2729
     1860+    2730            %BEGIN_MACRO ( STCLASS = STCLASS );
     1861+    2731
     1862+    2732          DCL 1 NAME STCLASS ALIGNED,
     1863+    2733                2 CODE UBIN,
     1864+    2734                2 IS_ARGUMENT_PASSED BIT(1) UNAL,
     1865+    2735                2 * UBIN(1) UNAL,
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:356  
     1866+    2736                2 IS_BY_NAME BIT(1) UNAL,
     1867+    2737                2 * UBIN(13) UNAL,
     1868+    2738                2 NAME_OR_TYPE@P UBIN,
     1869+    2739                2 ARGUMENT@P UBIN,
     1870+    2740                2 NEXT_CODE@P UBIN;
     1871+    2741
     1872+    2742            %END_MACRO;
     1873+    2743
     1874+    2744          %MEND;
     1875+    2745
     1876+    2746        /*
     1877+    2747            Op-code sequence for anything to ALPHANUMERIC MOVEs.
     1878+    2748            PIC xxx -> PIC X
     1879+    2749        */
     1880+    2750          %MACRO QI$OP_MOVA ( STCLASS = "BASED",
     1881+    2751                              NAME = QI$OP_MOVA );
     1882+    2752
     1883+    2753            %BEGIN_MACRO ( STCLASS = STCLASS );
     1884+    2754
     1885+    2755          DCL 1 NAME STCLASS ALIGNED,
     1886+    2756                2 CODE UBIN,
     1887+    2757                2 SOURCE@P UBIN,
     1888+    2758                2 ALPHANUMERIC_TARGET@P UBIN,
     1889+    2759                2 NEXT_CODE@P UBIN;
     1890+    2760
     1891+    2761            %END_MACRO;
     1892+    2762
     1893+    2763          %MEND;
     1894+    2764
     1895+    2765        /*
     1896+    2766            Op-code sequence for anything to ALPHANUMERIC EDITED MOVEs.
     1897+    2767            PIC xxx -> PIC B0X/
     1898+    2768        */
     1899+    2769          %MACRO QI$OP_MOVAE ( STCLASS = "BASED",
     1900+    2770                               NAME = QI$OP_MOVAE );
     1901+    2771
     1902+    2772            %BEGIN_MACRO ( STCLASS = STCLASS );
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:357  
     1903+    2773
     1904+    2774          DCL 1 NAME STCLASS ALIGNED,
     1905+    2775                2 CODE UBIN,
     1906+    2776                2 SOURCE@P UBIN,
     1907+    2777                2 ALPHANUMERIC_EDITED_TARGET@P UBIN,
     1908+    2778                2 NEXT_CODE@P UBIN;
     1909+    2779
     1910+    2780            %END_MACRO;
     1911+    2781
     1912+    2782          %MEND;
     1913+    2783
     1914+    2784        /*
     1915+    2785            Op-code sequence for anything to ALPHANUMERIC JUSTIFIED RIGHT MOVEs.
     1916+    2786            PIC xxx -> PIC XX JUSTIFIED RIGHT
     1917+    2787        */
     1918+    2788          %MACRO QI$OP_MOVAJ ( STCLASS = "BASED",
     1919+    2789                               NAME = QI$OP_MOVAJ );
     1920+    2790
     1921+    2791            %BEGIN_MACRO ( STCLASS = STCLASS );
     1922+    2792
     1923+    2793          DCL 1 NAME STCLASS ALIGNED,
     1924+    2794                2 CODE UBIN,
     1925+    2795                2 SOURCE@P UBIN,
     1926+    2796                2 RJ_ALPHANUMERIC_TARGET@P UBIN,
     1927+    2797                2 NEXT_CODE@P UBIN;
     1928+    2798
     1929+    2799            %END_MACRO;
     1930+    2800
     1931+    2801          %MEND;
     1932+    2802
     1933+    2803        /*
     1934+    2804            Op-code sequence for anything to BINARY MOVEs.
     1935+    2805            PIC xxx  ->  [ PIC 9( 2 | 4 ) ]  { COMP-1 | COMP-2 }
     1936+    2806        */
     1937+    2807          %MACRO QI$OP_MOVB ( STCLASS = "BASED",
     1938+    2808                              NAME = QI$OP_MOVB );
     1939+    2809
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:358  
     1940+    2810            %BEGIN_MACRO ( STCLASS = STCLASS );
     1941+    2811
     1942+    2812          DCL 1 NAME STCLASS ALIGNED,
     1943+    2813                2 CODE UBIN,
     1944+    2814                2 SOURCE@P UBIN,
     1945+    2815                2 BINARY_TARGET@P UBIN,
     1946+    2816                2 NEXT_CODE@P UBIN;
     1947+    2817
     1948+    2818            %END_MACRO;
     1949+    2819
     1950+    2820          %MEND;
     1951+    2821
     1952+    2822        /*
     1953+    2823            Op-code sequence for 'accumulator' to BINARY MOVEs.
     1954+    2824            QI_1.ACCUM  ->  [ PIC 9( 2 | 4 ) ]  { COMP-1 | COMP-2 }
     1955+    2825        */
     1956+    2826          %MACRO QI$OP_MOVBA ( STCLASS = "BASED",
     1957+    2827                               NAME = QI$OP_MOVBA );
     1958+    2828
     1959+    2829            %BEGIN_MACRO ( STCLASS = STCLASS );
     1960+    2830
     1961+    2831          DCL 1 NAME STCLASS ALIGNED,
     1962+    2832                2 CODE UBIN,
     1963+    2833                2 BINARY_TARGET@P UBIN,
     1964+    2834                2 NEXT_CODE@P UBIN;
     1965+    2835
     1966+    2836            %END_MACRO;
     1967+    2837
     1968+    2838          %MEND;
     1969+    2839
     1970+    2840        /*
     1971+    2841            Op-code sequence for NUMERIC EDITED to NUMERIC MOVEs.
     1972+    2842            PIC $9  ->  PIC 99
     1973+    2843        */
     1974+    2844          %MACRO QI$OP_MOVDE ( STCLASS = "BASED",
     1975+    2845                               NAME = QI$OP_MOVDE );
     1976+    2846
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:359  
     1977+    2847            %BEGIN_MACRO ( STCLASS = STCLASS );
     1978+    2848
     1979+    2849          DCL 1 NAME STCLASS ALIGNED,
     1980+    2850                2 CODE UBIN,
     1981+    2851                2 NUMERIC_EDITED_SOURCE@P UBIN,
     1982+    2852                2 NUMERIC_TARGET@P UBIN,
     1983+    2853                2 NEXT_CODE@P UBIN;
     1984+    2854
     1985+    2855            %END_MACRO;
     1986+    2856
     1987+    2857          %MEND;
     1988+    2858
     1989+    2859        /*
     1990+    2860            Op-code sequence for anything/group to anything/group MOVEs.
     1991+    2861            GROUP  ->  PIC xxx    |    PIC xxx  ->  GROUP
     1992+    2862        */
     1993+    2863          %MACRO QI$OP_MOVG ( STCLASS = "BASED",
     1994+    2864                              NAME = QI$OP_MOVG );
     1995+    2865
     1996+    2866            %BEGIN_MACRO ( STCLASS = STCLASS );
     1997+    2867
     1998+    2868          DCL 1 NAME STCLASS ALIGNED,
     1999+    2869                2 CODE UBIN,
     2000+    2870                2 SOURCE@P UBIN,
     2001+    2871                2 TARGET@P UBIN,
     2002+    2872                2 IS_SOURCE_GROUP BIT(1) UNAL,
     2003+    2873                2 * UBIN(1) UNAL,
     2004+    2874                2 ANTI_GROUP_LENGTH UBIN(14) UNAL,
     2005+    2875                2 NEXT_CODE@P UBIN;
     2006+    2876
     2007+    2877            %END_MACRO;
     2008+    2878
     2009+    2879          %MEND;
     2010+    2880
     2011+    2881        /*
     2012+    2882            Op-code sequence for anything to DISPLAY MOVEs.
     2013+    2883            PIC xxx  ->  PIC 9
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:360  
     2014+    2884        */
     2015+    2885          %MACRO QI$OP_MOVN ( STCLASS = "BASED",
     2016+    2886                              NAME = QI$OP_MOVN );
     2017+    2887
     2018+    2888            %BEGIN_MACRO ( STCLASS = STCLASS );
     2019+    2889
     2020+    2890          DCL 1 NAME STCLASS ALIGNED,
     2021+    2891                2 CODE UBIN,
     2022+    2892                2 SOURCE@P UBIN,
     2023+    2893                2 DISPLAY_TARGET@P UBIN,
     2024+    2894                2 NEXT_CODE@P UBIN;
     2025+    2895
     2026+    2896            %END_MACRO;
     2027+    2897
     2028+    2898          %MEND;
     2029+    2899
     2030+    2900        /*
     2031+    2901            Op-code sequence for 'accumulator' to DISPLAY MOVEs.
     2032+    2902            QI_1.ACCUM  ->  PIC 9
     2033+    2903        */
     2034+    2904          %MACRO QI$OP_MOVNA ( STCLASS = "BASED",
     2035+    2905                               NAME = QI$OP_MOVNA );
     2036+    2906
     2037+    2907            %BEGIN_MACRO ( STCLASS = STCLASS );
     2038+    2908
     2039+    2909          DCL 1 NAME STCLASS ALIGNED,
     2040+    2910                2 CODE UBIN,
     2041+    2911                2 DISPLAY_TARGET@P UBIN,
     2042+    2912                2 NEXT_CODE@P UBIN;
     2043+    2913
     2044+    2914            %END_MACRO;
     2045+    2915
     2046+    2916          %MEND;
     2047+    2917
     2048+    2918        /*
     2049+    2919            Op-code sequence for anything to NUMERIC EDITED MOVEs.
     2050+    2920            PIC xxx  ->  PIC $
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:361  
     2051+    2921        */
     2052+    2922          %MACRO QI$OP_MOVNE ( STCLASS = "BASED",
     2053+    2923                               NAME = QI$OP_MOVNE );
     2054+    2924
     2055+    2925            %BEGIN_MACRO ( STCLASS = STCLASS );
     2056+    2926
     2057+    2927          DCL 1 NAME STCLASS ALIGNED,
     2058+    2928                2 CODE UBIN,
     2059+    2929                2 SOURCE@P UBIN,
     2060+    2930                2 NUMERIC_EDITED_TARGET@P UBIN,
     2061+    2931                2 NEXT_CODE@P UBIN;
     2062+    2932
     2063+    2933            %END_MACRO;
     2064+    2934
     2065+    2935          %MEND;
     2066+    2936
     2067+    2937        /*
     2068+    2938            Op-code sequence for 'accumulator' to NUMERIC EDITED MOVEs.
     2069+    2939            QI_1.ACCUM  ->  PIC $
     2070+    2940        */
     2071+    2941          %MACRO QI$OP_MOVNEA ( STCLASS = "BASED",
     2072+    2942                                NAME = QI$OP_MOVNEA );
     2073+    2943
     2074+    2944            %BEGIN_MACRO ( STCLASS = STCLASS );
     2075+    2945
     2076+    2946          DCL 1 NAME STCLASS ALIGNED,
     2077+    2947                2 CODE UBIN,
     2078+    2948                2 NUMERIC_EDITED_TARGET@P UBIN,
     2079+    2949                2 NEXT_CODE@P UBIN;
     2080+    2950
     2081+    2951            %END_MACRO;
     2082+    2952
     2083+    2953          %MEND;
     2084+    2954
     2085+    2955        /*
     2086+    2956            Op-code sequence for anything to PACKED MOVEs.
     2087+    2957            PIC xxx  ->  PIC 9 COMP
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:362  
     2088+    2958        */
     2089+    2959          %MACRO QI$OP_MOVP ( STCLASS = "BASED",
     2090+    2960                              NAME = QI$OP_MOVP );
     2091+    2961
     2092+    2962            %BEGIN_MACRO ( STCLASS = STCLASS );
     2093+    2963
     2094+    2964          DCL 1 NAME STCLASS ALIGNED,
     2095+    2965                2 CODE UBIN,
     2096+    2966                2 SOURCE@P UBIN,
     2097+    2967                2 PACKED_TARGET@P UBIN,
     2098+    2968                2 NEXT_CODE@P UBIN;
     2099+    2969
     2100+    2970            %END_MACRO;
     2101+    2971
     2102+    2972          %MEND;
     2103+    2973
     2104+    2974        /*
     2105+    2975            Op-code sequence for 'accumulator' to PACKED MOVEs.
     2106+    2976            QI_1.ACCUM  ->  PIC 9 COMP
     2107+    2977        */
     2108+    2978          %MACRO QI$OP_MOVPA ( STCLASS = "BASED",
     2109+    2979                               NAME = QI$OP_MOVPA );
     2110+    2980
     2111+    2981            %BEGIN_MACRO ( STCLASS = STCLASS );
     2112+    2982
     2113+    2983          DCL 1 NAME STCLASS ALIGNED,
     2114+    2984                2 CODE UBIN,
     2115+    2985                2 PACKED_TARGET@P UBIN,
     2116+    2986                2 NEXT_CODE@P UBIN;
     2117+    2987
     2118+    2988            %END_MACRO;
     2119+    2989
     2120+    2990          %MEND;
     2121+    2991
     2122+    2992        /*
     2123+    2993            Op-code sequence for MULTiply operation.
     2124+    2994        */
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:363  
     2125+    2995          %MACRO QI$OP_MULT ( STCLASS = "BASED",
     2126+    2996                              NAME = QI$OP_MULT );
     2127+    2997
     2128+    2998            %BEGIN_MACRO ( STCLASS = STCLASS );
     2129+    2999
     2130+    3000          DCL 1 NAME STCLASS ALIGNED,
     2131+    3001                2 CODE UBIN,
     2132+    3002                2 NUMERIC_SOURCE@P UBIN,
     2133+    3003                2 TARGET_AND_RESULT@P UBIN,
     2134+    3004                2 NEXT_CODE@P UBIN;
     2135+    3005
     2136+    3006            %END_MACRO;
     2137+    3007
     2138+    3008          %MEND;
     2139+    3009
     2140+    3010        /*
     2141+    3011            Op-code sequence for MULTiplying two arguments together and
     2142+    3012            placing the result into the accumulator.
     2143+    3013        */
     2144+    3014          %MACRO QI$OP_MULTX ( STCLASS = "BASED",
     2145+    3015                               NAME = QI$OP_MULTX );
     2146+    3016
     2147+    3017            %BEGIN_MACRO ( STCLASS = STCLASS );
     2148+    3018
     2149+    3019          DCL 1 NAME STCLASS ALIGNED,
     2150+    3020                2 CODE UBIN,
     2151+    3021                2 NUMERIC_SOURCE@P UBIN,
     2152+    3022                2 NUMERIC_TARGET@P UBIN,
     2153+    3023                2 NEXT_CODE@P UBIN;
     2154+    3024
     2155+    3025            %END_MACRO;
     2156+    3026
     2157+    3027          %MEND;
     2158+    3028
     2159+    3029        /*
     2160+    3030            Op-code sequence for OPEN verb.
     2161+    3031        */
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:364  
     2162+    3032          %MACRO QI$OP_OPEN ( STCLASS = "BASED",
     2163+    3033                              NAME = QI$OP_OPEN );
     2164+    3034
     2165+    3035            %BEGIN_MACRO ( STCLASS = STCLASS );
     2166+    3036
     2167+    3037          DCL 1 NAME STCLASS ALIGNED,
     2168+    3038                2 CODE UBIN,
     2169+    3039                2 * BIT(1) UNAL,
     2170+    3040                2 IO_FLAGS,
     2171+    3041                  3 IS_OUTPUT BIT(1) UNAL,
     2172+    3042                  3 IS_INPUT BIT(1) UNAL,
     2173+    3043                2 IO_VALUE REDEF IO_FLAGS UBIN(2) UNAL,
     2174+    3044                2 FILE_COUNT UBIN(13) UNAL,
     2175+    3045                2 FILE_A@P(0:0) UBIN;
     2176+    3046
     2177+    3047            %END_MACRO;
     2178+    3048
     2179+    3049          %MEND;
     2180+    3050
     2181+    3051        /*
     2182+    3052            Op-code sequence for beginning PERFORM transfer of control verb.
     2183+    3053        */
     2184+    3054          %MACRO QI$OP_PERFM ( STCLASS = "BASED",
     2185+    3055                               NAME = QI$OP_PERFM );
     2186+    3056
     2187+    3057            %BEGIN_MACRO ( STCLASS = STCLASS );
     2188+    3058
     2189+    3059          DCL 1 NAME STCLASS ALIGNED,
     2190+    3060                2 CODE UBIN,
     2191+    3061                2 FROM@P UBIN,
     2192+    3062                2 PERFORM_BLOCK@D UBIN,
     2193+    3063                2 ATTRIBUTE,
     2194+    3064                  3 PARAGRAPH_SECTION BIT (1) UNAL,
     2195+    3065                  3 * BIT (11) UNAL,
     2196+    3066                  3 ITERATION_FIELD UBIN (4) UNAL,
     2197+    3067                2 BINARY_ITERATION_COUNT@P UBIN,
     2198+    3068                2 SINGLE_ITERATION_NEXT_CODE@P REDEF BINARY_ITERATION_COUNT@P UBIN,
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:365  
     2199+    3069                2 MULTIPLE_ITERATION_NEXT_CODE@P UBIN;
     2200+    3070
     2201+    3071            %END_MACRO;
     2202+    3072
     2203+    3073          %MEND;
     2204+    3074
     2205+    3075        /*
     2206+    3076            Op-code sequence for ending PERFORM transfer of control verb.
     2207+    3077        */
     2208+    3078          %MACRO QI$OP_PERFMT ( STCLASS = "BASED",
     2209+    3079                                NAME = QI$OP_PERFMT );
     2210+    3080
     2211+    3081            %BEGIN_MACRO ( STCLASS = STCLASS );
     2212+    3082
     2213+    3083          DCL 1 NAME STCLASS ALIGNED,
     2214+    3084                2 CODE UBIN,
     2215+    3085                2 PERFORM_BLOCK@D UBIN,
     2216+    3086                2 NEXT_CODE@P UBIN;
     2217+    3087
     2218+    3088            %END_MACRO;
     2219+    3089
     2220+    3090          %MEND;
     2221+    3091
     2222+    3092        /*
     2223+    3093            Op-code sequence for READ form-file verb.
     2224+    3094        */
     2225+    3095          %MACRO QI$OP_READ_FORM ( STCLASS = "BASED",
     2226+    3096                                   NAME = QI$OP_READ_FORM );
     2227+    3097
     2228+    3098            %BEGIN_MACRO ( STCLASS = STCLASS );
     2229+    3099
     2230+    3100          DCL 1 NAME STCLASS ALIGNED,
     2231+    3101                2 CODE UBIN,
     2232+    3102                2 FORM_FILE@P UBIN,
     2233+    3103                2 IS_POSITIONING_CURSOR BIT(1) UNAL,
     2234+    3104                2 * BIT(15) UNAL,
     2235+    3105                2 CURSOR_FIELD@P UBIN,
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:366  
     2236+    3106                2 NEXT_CODE@P UBIN;
     2237+    3107
     2238+    3108            %END_MACRO;
     2239+    3109
     2240+    3110          %MEND;
     2241+    3111
     2242+    3112        /*
     2243+    3113            Op-code sequence for READ transaction-file verb.
     2244+    3114        */
     2245+    3115          %MACRO QI$OP_READ_TRAN ( STCLASS = "BASED",
     2246+    3116                                   NAME = QI$OP_READ_TRAN );
     2247+    3117
     2248+    3118            %BEGIN_MACRO ( STCLASS = STCLASS );
     2249+    3119
     2250+    3120          DCL 1 NAME STCLASS ALIGNED,
     2251+    3121                2 CODE UBIN,
     2252+    3122                2 TRAN_FILE@P UBIN,
     2253+    3123                2 * UBIN(15) UNAL,
     2254+    3124                2 NO_DATA BIT(1) UNAL,
     2255+    3125                2 NEXT_CODE@P UBIN;
     2256+    3126
     2257+    3127            %END_MACRO;
     2258+    3128
     2259+    3129          %MEND;
     2260+    3130
     2261+    3131        /*
     2262+    3132            Op-code sequence for the ROUND verb.
     2263+    3133        */
     2264+    3134          %MACRO QI$OP_ROUND ( STCLASS = "BASED",
     2265+    3135                               NAME = QI$OP_ROUND );
     2266+    3136
     2267+    3137            %BEGIN_MACRO ( STCLASS = STCLASS );
     2268+    3138
     2269+    3139          DCL 1 NAME STCLASS ALIGNED,
     2270+    3140                2 CODE UBIN,
     2271+    3141                2 DECIMAL_PLACES UBIN,
     2272+    3142                2 NEXT_CODE@P UBIN;
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:367  
     2273+    3143
     2274+    3144            %END_MACRO;
     2275+    3145
     2276+    3146          %MEND;
     2277+    3147
     2278+    3148        /*
     2279+    3149            Op-code sequence for STOP [ PAUSING... | POSTING... ] verb.
     2280+    3150        */
     2281+    3151          %MACRO QI$OP_STOP_PAUSE ( STCLASS = "BASED",
     2282+    3152                                    NAME = QI$OP_STOP_PAUSE );
     2283+    3153
     2284+    3154            %BEGIN_MACRO ( STCLASS = STCLASS );
     2285+    3155
     2286+    3156          DCL 1 NAME STCLASS ALIGNED,
     2287+    3157                2 CODE UBIN,
     2288+    3158                2 * UBIN(13) UNAL,
     2289+    3159                2 IS_IMPLICIT_POSTING BIT(1) UNAL,
     2290+    3160                2 IS_EXPLICIT_POSTING BIT(1) UNAL,
     2291+    3161                2 IS_PAUSING BIT(1) UNAL,
     2292+    3162                2 PAUSING_OPERAND@P UBIN,
     2293+    3163                2 POSTING_OPERAND@P UBIN,
     2294+    3164                2 NEXT_CODE@P UBIN;
     2295+    3165
     2296+    3166            %END_MACRO;
     2297+    3167
     2298+    3168          %MEND;
     2299+    3169
     2300+    3170        /*
     2301+    3171            Op-code sequence for STOP { RUN } verb.
     2302+    3172        */
     2303+    3173          %MACRO QI$OP_STOP_RUN ( STCLASS = "BASED",
     2304+    3174                                  NAME = QI$OP_STOP_RUN );
     2305+    3175
     2306+    3176            %BEGIN_MACRO ( STCLASS = STCLASS );
     2307+    3177
     2308+    3178          DCL 1 NAME STCLASS ALIGNED,
     2309+    3179                2 CODE UBIN,
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:368  
     2310+    3180                2 NEXT_CODE@P UBIN;
     2311+    3181
     2312+    3182            %END_MACRO;
     2313+    3183
     2314+    3184          %MEND;
     2315+    3185
     2316+    3186        /*
     2317+    3187            Op-code sequence for SUBtract operation.
     2318+    3188        */
     2319+    3189          %MACRO QI$OP_SUB ( STCLASS = "BASED",
     2320+    3190                             NAME =  QI$OP_SUB );
     2321+    3191
     2322+    3192            %BEGIN_MACRO ( STCLASS = STCLASS );
     2323+    3193
     2324+    3194          DCL 1 NAME STCLASS ALIGNED,
     2325+    3195                2 CODE UBIN,
     2326+    3196                2 NUMERIC_SOURCE@P UBIN,
     2327+    3197                2 NUMERIC_TARGET@P UBIN,
     2328+    3198                2 NEXT_CODE@P UBIN;
     2329+    3199
     2330+    3200            %END_MACRO;
     2331+    3201
     2332+    3202          %MEND;
     2333+    3203
     2334+    3204        /*
     2335+    3205            Op-code sequence for SUBSCRIPTing operations.
     2336+    3206        */
     2337+    3207          %MACRO QI$OP_SUBSCR ( STCLASS = "BASED",
     2338+    3208                                NAME = QI$OP_SUBSCR );
     2339+    3209
     2340+    3210            %BEGIN_MACRO ( STCLASS = STCLASS );
     2341+    3211
     2342+    3212          DCL 1 NAME STCLASS ALIGNED,
     2343+    3213                2 CODE UBIN,
     2344+    3214                2 ARRAY_SOURCE@P UBIN,
     2345+    3215                2 SUBSCRIPT_A@P(0:0) UBIN,
     2346+    3216                          /* SUBSCRIPT_A@P is one or two entries long
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:369  
     2347+    3217                             depending on the dimension_count of
     2348+    3218                             ARRAY_SOURCE@P.  */
     2349+    3219                2 DUMMY_RESULT@P UBIN,
     2350+    3220                2 NEXT_CODE UBIN;
     2351+    3221
     2352+    3222            %END_MACRO;
     2353+    3223
     2354+    3224          %MEND;
     2355+    3225
     2356+    3226        /*
     2357+    3227            Op-code sequence for SUBtracting several arguments from one
     2358+    3228            argument and placing the result into the accumulator.
     2359+    3229        */
     2360+    3230          %MACRO QI$OP_SUBX ( STCLASS = "BASED",
     2361+    3231                              NAME = QI$OP_SUBX );
     2362+    3232
     2363+    3233            %BEGIN_MACRO ( STCLASS = STCLASS );
     2364+    3234
     2365+    3235          DCL 1 NAME STCLASS ALIGNED,
     2366+    3236                2 CODE UBIN,
     2367+    3237                2 ARGUMENT_COUNT UBIN,
     2368+    3238                2 ARGUMENT_A@P(0:0) UBIN;
     2369+    3239
     2370+    3240            %END_MACRO;
     2371+    3241
     2372+    3242          %MEND;
     2373+    3243
     2374+    3244        /*
     2375+    3245            Op-code sequence for the PRESENT verb.
     2376+    3246        */
     2377+    3247          %MACRO QI$OP_VERI_PRES ( STCLASS = "BASED",
     2378+    3248                                   NAME = QI$OP_VERI_PRES );
     2379+    3249
     2380+    3250            %BEGIN_MACRO ( STCLASS = STCLASS );
     2381+    3251
     2382+    3252          DCL 1 NAME STCLASS ALIGNED,
     2383+    3253                2 CODE UBIN,
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:370  
     2384+    3254                2 DAD_PAIR_COUNT UBIN,
     2385+    3255                2 DAD_PAIR_A(0:0),
     2386+    3256                  3 SOURCE@P UBIN,
     2387+    3257                  3 TARGET@P UBIN;
     2388+    3258
     2389+    3259            %END_MACRO;
     2390+    3260
     2391+    3261          %MEND;
     2392+    3262
     2393+    3263        /*
     2394+    3264            Op-code sequence for WRITE frame-section-record verb.
     2395+    3265        */
     2396+    3266          %MACRO QI$OP_WRITE_FORM ( STCLASS = "BASED",
     2397+    3267                                    NAME = QI$OP_WRITE_FORM );
     2398+    3268
     2399+    3269            %BEGIN_MACRO ( STCLASS = STCLASS );
     2400+    3270
     2401+    3271          DCL 1 NAME STCLASS ALIGNED,
     2402+    3272                2 CODE UBIN,
     2403+    3273                2 IS_WRITE_PAGE BIT(1) UNAL,
     2404+    3274                2 * BIT(15) UNAL,
     2405+    3275                2 FORM_RECORD@P UBIN,
     2406+    3276                2 NEXT_CODE@P UBIN;
     2407+    3277
     2408+    3278            %END_MACRO;
     2409+    3279
     2410+    3280          %MEND;
     2411+    3281
     2412+    3282        /*
     2413+    3283            Op-code sequence for WRITE transaction-record verb.
     2414+    3284        */
     2415+    3285          %MACRO QI$OP_WRITE_TRAN ( STCLASS = "BASED",
     2416+    3286                                    NAME = QI$OP_WRITE_TRAN );
     2417+    3287
     2418+    3288            %BEGIN_MACRO ( STCLASS = STCLASS );
     2419+    3289
     2420+    3290          DCL 1 NAME STCLASS ALIGNED,
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:371  
     2421+    3291                2 CODE UBIN,
     2422+    3292                2 TRAN_RECORD@P UBIN,
     2423+    3293                2 DATA_SIZE UBIN,
     2424+    3294                2 NEXT_CODE@P UBIN;
     2425+    3295
     2426+    3296            %END_MACRO;
     2427+    3297
     2428+    3298          %MEND;
     2429+    3299
     2430+    3300        %EJECT;
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:372  
     2431+    3301        /*
     2432+    3302                               %%%%%%%  %%%%%%   %%
     2433+    3303                               %%       %%   %%  %%
     2434+    3304                               %%       %%   %%  %%
     2435+    3305                               %%%%%    %%%%%%   %%
     2436+    3306                               %%       %%       %%
     2437+    3307                               %%       %%       %%
     2438+    3308                               %%       %%       %%%%%%%
     2439+    3309
     2440+    3310                                                   %%%         %%
     2441+    3311                                                   %%%         %%
     2442+    3312             %% %%%   %% %%%%   %%%%%    %%%%%%     %%     %%% %%  %% %%%%
     2443+    3313             %%%  %%  %%%%     %%   %%  %%         %%     %%  %%%  %%%%
     2444+    3314             %%%  %%  %%%      %%   %%  %%                %%  %%%  %%%
     2445+    3315             %%%  %%  %%       %%   %%  %%                %%  %%%  %%
     2446+    3316             %% %%%   %%        %%%%%    %%%%%%            %%% %%  %%
     2447+    3317             %%
     2448+    3318             %%
     2449+    3319                                                                            */
     2450+    3320
     2451+    3321          %MACRO QI$INITIALIZATION_BLOCK ( STCLASS = "BASED",
     2452+    3322                                           NAME = QI$INITIALIZATION_BLOCK );
     2453+    3323
     2454+    3324            %BEGIN_MACRO ( STCLASS = STCLASS );
     2455+    3325
     2456+    3326        /*
     2457+    3327           This INITIALIZATION_BLOCK is used by QAT$TALLYHO
     2458+    3328           during startup to, well, initialize.
     2459+    3329        */
     2460+    3330          DCL 1 NAME STCLASS ALIGNED,
     2461+    3331                2 DATA_START$ PTR,
     2462+    3332                2 PROC_START$ PTR,
     2463+    3333                2 EXPECTED_ARGUMENT_COUNT UBIN,
     2464+    3334                2 CURRENT_FORM@P UBIN,
     2465+    3335                2 CURRENT_FRAME@P UBIN,
     2466+    3336                2 CURRENT_FIELD@P UBIN,
     2467+    3337                2 RETRY@P UBIN,
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:373  
     2468+    3338                2 VERIFY_BUFFER_1@P UBIN,
     2469+    3339                2 VERIFY_BUFFER_2@P UBIN,
     2470+    3340                2 VERIFY_BUFFER_3@P UBIN,
     2471+    3341                2 VERIFY_BUFFER_4@P UBIN,
     2472+    3342                2 COMPILER_VERSION CHAR(4),
     2473+    3343                2 OUTPUT_OR_IO_USE_PROCEDURE@P UBIN,
     2474+    3344                2 INPUT_OR_IO_USE_PROCEDURE@P UBIN,
     2475+    3345                2 VERIFICATION_USE_PROCEDURE@P UBIN,
     2476+    3346                2 MESSAGE_LINE_DCB# UBIN,
     2477+    3347                2 VANILLA_HOST_DCB# UBIN,
     2478+    3348                2 IS_THIS_A_SUBROUTINE BIT(1) UNAL,
     2479+    3349                2 * UBIN(15) UNAL;
     2480+    3350
     2481+    3351            %END_MACRO;
     2482+    3352
     2483+    3353          %MEND;
     2484+    3354
     2485+    3355        %EJECT;
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:374  
     2486+    3356
     2487+    3357          %MACRO QI$CONDITION_CONTROL_BLOCK ( STCLASS = "BASED",
     2488+    3358                                          NAME = QI$CONDITION_CONTROL_BLOCK );
     2489+    3359
     2490+    3360            %BEGIN_MACRO ( STCLASS = STCLASS );
     2491+    3361
     2492+    3362        /*
     2493+    3363           CONDITION CONTROL BLOCK used to refer to target data on conditional
     2494+    3364           IFs (i.e. IFCNDA, and IFCNDN).
     2495+    3365        */
     2496+    3366          DCL 1 NAME STCLASS ALIGNED,
     2497+    3367                2 WORD0_FLAGS,
     2498+    3368                  3 IS_THROUGH BIT(1) UNAL,
     2499+    3369                  3 * UBIN(15) UNAL,
     2500+    3370                2 LIST_LENGTH REDEF WORD0_FLAGS UBIN,
     2501+    3371                2 LIST_A@P(0:0) UBIN,
     2502+    3372                2 RANGE_A@P(0:0) REDEF LIST_A@P UBIN;
     2503+    3373
     2504+    3374            %END_MACRO;
     2505+    3375
     2506+    3376          %MEND;
     2507+    3377
     2508+    3378        %EJECT;
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:375  
     2509+    3379
     2510+    3380          %MACRO QI$CONDITION_LEGAL_BLOCK ( STCLASS = "BASED",
     2511+    3381                                            NAME = QI$CONDITION_LEGAL_BLOCK );
     2512+    3382
     2513+    3383            %BEGIN_MACRO ( STCLASS = STCLASS );
     2514+    3384
     2515+    3385        /*
     2516+    3386           CONDITION BLOCK used for holding information about the LEGAL
     2517+    3387           list/range/array for a COBOL-like data item.
     2518+    3388        */
     2519+    3389          DCL 1 NAME STCLASS ALIGNED,
     2520+    3390                2 TYPE UBIN(2) UNAL,
     2521+    3391                2 LIST_LENGTH UBIN(14) UNAL,
     2522+    3392                2 ARRAY@P UBIN,
     2523+    3393                2 LIST_A@P(0:0) REDEF ARRAY@P UBIN,
     2524+    3394                2 RANGE_A@P(0:0) REDEF ARRAY@P UBIN;
     2525+    3395
     2526+    3396            %END_MACRO;
     2527+    3397
     2528+    3398          %MEND;
     2529+    3399
     2530+    3400        %EJECT;
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:376  
     2531+    3401
     2532+    3402        /*
     2533+    3403                 Compiler-generated pseudo-CIP descriptor.
     2534+    3404        */
     2535+    3405          %MACRO QI$PSEUDO_CIP
     2536+    3406                 ( NAME = QI$PSEUDO_CIP,
     2537+    3407                   STCLASS = "BASED",
     2538+    3408                   LVL = 1,
     2539+    3409                   END_STRUCTURE ( YES = ";",
     2540+    3410                                   NO = ",",
     2541+    3411                                   ANY ) = ";" );
     2542+    3412
     2543+    3413            %BEGIN_MACRO ( STCLASS = STCLASS );
     2544+    3414
     2545+    3415            %IF LVL = 1;
     2546+    3416          DCL 1 NAME STCLASS ALIGNED,        /* CIP descriptor */
     2547+    3417            %ELSE;
     2548+    3418              %(LVL) NAME ALIGNED,           /* CIP descriptor */
     2549+    3419            %ENDIF;
     2550+    3420
     2551+    3421                %(LVL+1) ALPHANUMERIC,
     2552+    3422                  %(LVL+2) CA,                  /* Control bits for ALPHANUMERIC */
     2553+    3423                    %(LVL+3) OFFSET UBIN(1) UNAL,
     2554+    3424                  %(LVL+2) * UBIN(1) UNAL,
     2555+    3425                  %(LVL+2) LEN UBIN(14) UNAL,
     2556+    3426                %(LVL+1) NUMERIC REDEF ALPHANUMERIC,
     2557+    3427                  %(LVL+2) CB,                  /* Control bits for BINARY */
     2558+    3428                    %(LVL+3) OFFSET UBIN(1) UNAL,
     2559+    3429                    %(LVL+3) MBZ UBIN(2) UNAL,
     2560+    3430                  %(LVL+2) CD REDEF CB,         /* Control bits for DISPLAY */
     2561+    3431                    %(LVL+3) OFFSET UBIN(1) UNAL,
     2562+    3432                    %(LVL+3) SIGN UBIN(2) UNAL,
     2563+    3433                  %(LVL+2) CP REDEF CB,         /* Control bits for PACKED */
     2564+    3434                    %(LVL+3) OFFSET UBIN(2) UNAL,
     2565+    3435                    %(LVL+3) SIGN UBIN(1) UNAL,
     2566+    3436                  %(LVL+2) LEN UBIN(5) UNAL,
     2567+    3437                  %(LVL+2) * UBIN(2) UNAL,
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:377  
     2568+    3438                  %(LVL+2) DEC SBIN(6) UNAL,
     2569+    3439            %IF LVL = 1;
     2570+    3440                %(LVL+1) DATA@ UBIN;
     2571+    3441          DCL 1 %CHARTEXT(CONCAT(TEXTCHAR(NAME),'_A')) (0:1) REDEF NAME UBIN;
     2572+    3442            %ELSE;
     2573+    3443                %(LVL+1) DATA@ UBIN,
     2574+    3444          %(LVL) %CHARTEXT(CONCAT(TEXTCHAR(NAME),'_A')) (0:1) REDEF NAME UBIN END_STRUCTURE
     2575+    3445            %ENDIF;
     2576+    3446
     2577+    3447            %END_MACRO;
     2578+    3448
     2579+    3449          %MEND;
     2580+    3450
     2581+    3451        %EJECT;
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:378  
     2582+    3452
     2583+    3453        /*
     2584+    3454                 Real live CIP descriptor.
     2585+    3455        */
     2586+    3456          %MACRO QI$CIP ( STCLASS = "BASED",
     2587+    3457                          NAME = QI$CIP );
     2588+    3458
     2589+    3459            %BEGIN_MACRO ( STCLASS = STCLASS );
     2590+    3460
     2591+    3461            %QI_CIP_DESCRIPTOR ( NAME = NAME,
     2592+    3462                                 STCLASS = STCLASS );
     2593+    3463
     2594+    3464            %END_MACRO;
     2595+    3465
     2596+    3466          %MEND;
     2597+    3467
     2598+    3468        %EJECT;
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:379  
     2599+    3469
     2600+    3470        /*
     2601+    3471                 Basic DAD
     2602+    3472        */
     2603+    3473          %MACRO QI$DAD
     2604+    3474                 ( NAME = QI$DAD,
     2605+    3475                   STCLASS = "BASED",
     2606+    3476                   LVL = 1,
     2607+    3477                   END_STRUCTURE ( YES = ";",
     2608+    3478                                   NO = ",",
     2609+    3479                                   ANY ) = ";" );
     2610+    3480
     2611+    3481            %BEGIN_MACRO ( STCLASS = STCLASS );
     2612+    3482
     2613+    3483            %IF LVL = 1;
     2614+    3484          DCL 1 NAME STCLASS ALIGNED,
     2615+    3485            %ELSE;
     2616+    3486              %(LVL) NAME ALIGNED,
     2617+    3487            %ENDIF;
     2618+    3488                %(LVL+1) WORD0 SBIN,
     2619+    3489                %(LVL+1) WORD0_FLAGS REDEF WORD0,
     2620+    3490                  %(LVL+2) INDIRECT BIT(1) UNAL,          /* on for indirect reference */
     2621+    3491                  %(LVL+2) * UBIN(4) UNAL,
     2622+    3492                  %(LVL+2) IS_JUSTIFIED_RIGHT BIT(1) UNAL,
     2623+    3493                  %(LVL+2) * UBIN(2) UNAL,
     2624+    3494                  %(LVL+2) IS_FORM_VARIABLE BIT(1) UNAL,  /* on for FORM variable */
     2625+    3495                  %(LVL+2) IS_CONSTANT BIT(1) UNAL,       /* on if CONSTANT */
     2626+    3496                  %(LVL+2) DIMENSION_COUNT UBIN(2) UNAL,  /* # of dimensions */
     2627+    3497                  %(LVL+2) TYPE UBIN(4) UNAL,             /* variable TYPE */
     2628+    3498
     2629+    3499            %LSET NEXT_LEVEL = LVL + 1;
     2630+    3500
     2631+    3501                %QI$PSEUDO_CIP ( NAME = PSEUDO_CIP,
     2632+    3502                                 LVL = %NEXT_LEVEL,
     2633+    3503                                 END_STRUCTURE = END_STRUCTURE );
     2634+    3504
     2635+    3505            %END_MACRO;
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:380  
     2636+    3506
     2637+    3507          %MEND;
     2638+    3508
     2639+    3509        %EJECT;
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:381  
     2640+    3510
     2641+    3511          %MACRO QI$COBOL_DAD ( STCLASS = "BASED",
     2642+    3512                                NAME = QI$COBOL_DAD );
     2643+    3513
     2644+    3514            %BEGIN_MACRO ( STCLASS = STCLASS );
     2645+    3515
     2646+    3516          DCL 1 NAME STCLASS ALIGNED,
     2647+    3517                2 WORD0 SBIN,
     2648+    3518                2 WORD0_FLAGS REDEF WORD0,
     2649+    3519                  3 INDIRECT BIT(1) UNAL,
     2650+    3520                  3 P,
     2651+    3521                    4 PICTURE BIT(1) UNAL,
     2652+    3522                    4 VALID BIT(1) UNAL,
     2653+    3523                    4 ERROR_MESSAGE BIT(1) UNAL,
     2654+    3524                  3 IS_LINKAGE_ARGUMENT BIT(1) UNAL,/* on if in LINKAGE SECTION */
     2655+    3525                  3 IS_JUSTIFIED_RIGHT BIT(1) UNAL,/* on if JUSTIFIED RIGHT */
     2656+    3526                  3 IS_TEMP BIT(1) UNAL,           /* on if this is a temp */
     2657+    3527                  3 IS_ALL_LIT BIT(1) UNAL,        /* on if this is an ALL "literal" */
     2658+    3528                  3 IS_FORM_VARIABLE BIT(1) UNAL,  /* on if a FORM variable */
     2659+    3529                  3 IS_CONSTANT BIT(1) UNAL,       /* on if CONSTANT */
     2660+    3530                  3 DIMENSION_COUNT UBIN(2) UNAL,  /* # of dimensions */
     2661+    3531                  3 TYPE UBIN(4) UNAL,
     2662+    3532                2 P_A(0:15) REDEF WORD0 BIT(1) UNAL,
     2663+    3533                %QI$PSEUDO_CIP ( NAME = PSEUDO_CIP,
     2664+    3534                                 LVL = 2,
     2665+    3535                                 END_STRUCTURE = NO );
     2666+    3536                2 VARIABLE_LENGTH_ITEMS,
     2667+    3537                  3 LEVEL_MULTIPLIERS,
     2668+    3538                    4 ONE_DIMENSIONAL,
     2669+    3539                      5 ELEMENT_COUNT UBIN,
     2670+    3540                      5 ELEMENT_LENGTH UBIN,
     2671+    3541                    4 TWO_DIMENSIONAL,
     2672+    3542                      5 ELEMENT_COUNT UBIN,
     2673+    3543                      5 ELEMENT_LENGTH UBIN,
     2674+    3544                    4 THREE_DIMENSIONAL,
     2675+    3545                      5 ELEMENT_COUNT UBIN,
     2676+    3546                      5 ELEMENT_LENGTH UBIN,
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:382  
     2677+    3547                 3 LEVEL_MULTIPLIER_A(0:%(QI#MAXIMUM_DIMENSION-1)) REDEF LEVEL_MULTIPLIERS,
     2678+    3548                    4 ELEMENT_COUNT UBIN,
     2679+    3549                    4 ELEMENT_LENGTH UBIN,
     2680+    3550                  3 P_ITEM_A(0:%((2*QI#MAXIMUM_DIMENSION)-1)) REDEF LEVEL_MULTIPLIERS UBIN,
     2681+    3551                  3 *(0:%(QI#P_COBOL_LAST_INDEX-QI#P_COBOL_FIRST_INDEX)) UBIN,
     2682+    3552                2 ELEMENTARY_ITEM REDEF VARIABLE_LENGTH_ITEMS,
     2683+    3553                  3 P_ITEM_A(0:%(QI#P_COBOL_LAST_INDEX-QI#P_COBOL_FIRST_INDEX)) UBIN,
     2684+    3554                  3 * UBIN,
     2685+    3555                  3 * UBIN,
     2686+    3556                  3 * UBIN,
     2687+    3557                  3 * UBIN,
     2688+    3558                  3 * UBIN,
     2689+    3559                  3 * UBIN,
     2690+    3560                2 ONE_DIMENSIONAL_ITEM REDEF VARIABLE_LENGTH_ITEMS,
     2691+    3561                  3 * UBIN,
     2692+    3562                  3 * UBIN,
     2693+    3563                  3 P_ITEM_A(0:%(QI#P_COBOL_LAST_INDEX-QI#P_COBOL_FIRST_INDEX)) UBIN,
     2694+    3564                  3 * UBIN,
     2695+    3565                  3 * UBIN,
     2696+    3566                  3 * UBIN,
     2697+    3567                  3 * UBIN,
     2698+    3568                2 TWO_DIMENSIONAL_ITEM REDEF VARIABLE_LENGTH_ITEMS,
     2699+    3569                  3 * UBIN,
     2700+    3570                  3 * UBIN,
     2701+    3571                  3 * UBIN,
     2702+    3572                  3 * UBIN,
     2703+    3573                  3 P_ITEM_A(0:%(QI#P_COBOL_LAST_INDEX-QI#P_COBOL_FIRST_INDEX)) UBIN,
     2704+    3574                  3 * UBIN,
     2705+    3575                  3 * UBIN;
     2706+    3576
     2707+    3577            %END_MACRO;
     2708+    3578
     2709+    3579          %MEND;
     2710+    3580
     2711+    3581        %EJECT;
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:383  
     2712+    3582
     2713+    3583          %MACRO QI$COBOL_DAD_P_BITS ( STCLASS = "BASED",
     2714+    3584                                       NAME = QI$COBOL_DAD_P_BITS );
     2715+    3585
     2716+    3586            %BEGIN_MACRO ( STCLASS = STCLASS );
     2717+    3587
     2718+    3588        /*
     2719+    3589                 Presence bits for COBOL-type DADs.
     2720+    3590        */
     2721+    3591          DCL 1 NAME STCLASS ALIGNED,
     2722+    3592                2 P,
     2723+    3593                  3 * BIT(1) UNAL,
     2724+    3594                  3 PICTURE BIT(1) UNAL,
     2725+    3595                  3 VALID BIT(1) UNAL,
     2726+    3596                  3 ERROR_MESSAGE BIT(1) UNAL,
     2727+    3597                  3 USE_PROCEDURE BIT(1) UNAL,
     2728+    3598                2 P_A(0:4) REDEF P BIT(1) UNAL;
     2729+    3599
     2730+    3600            %END_MACRO;
     2731+    3601
     2732+    3602          %MEND;
     2733+    3603
     2734+    3604        %EJECT;
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:384  
     2735+    3605
     2736+    3606          %MACRO QI$COBOL_DAD_P_ITEMS ( STCLASS = "BASED",
     2737+    3607                                        NAME = QI$COBOL_DAD_P_ITEMS );
     2738+    3608
     2739+    3609            %BEGIN_MACRO ( STCLASS = STCLASS );
     2740+    3610
     2741+    3611        /*
     2742+    3612                 Presence item array for COBOL-type DADs.
     2743+    3613        */
     2744+    3614          DCL 1 NAME STCLASS ALIGNED,
     2745+    3615                2 P_ITEM_A(0:%(QI#P_COBOL_LAST_INDEX-QI#P_COBOL_FIRST_INDEX)) UBIN;
     2746+    3616
     2747+    3617            %END_MACRO;
     2748+    3618
     2749+    3619          %MEND;
     2750+    3620
     2751+    3621        %EJECT;
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:385  
     2752+    3622
     2753+    3623          %MACRO QI$LINKAGE_ARGUMENT_DESCRIPTOR ( STCLASS = "BASED",
     2754+    3624                                                  NAME = QI$LINKAGE_ARGUMENT_DESCRIPTOR );
     2755+    3625
     2756+    3626            %BEGIN_MACRO ( STCLASS = STCLASS );
     2757+    3627
     2758+    3628          DCL 1 NAME STCLASS ALIGNED,
     2759+    3629                2 ARGUMENT_NUMBER UBIN,
     2760+    3630                          /* argument "number" from
     2761+    3631                             PROCEDURE DIVISION USING P1, P2, P3,....
     2762+    3632                             E.g., 0 for P1, 1 for P2, 2 for P3,.... */
     2763+    3633                2 WORD_OFFSET_FROM_01_ITEM UBIN;
     2764+    3634                          /* word offset from the nearest 01-level item
     2765+    3635                             above to the current item. */
     2766+    3636
     2767+    3637            %END_MACRO;
     2768+    3638
     2769+    3639          %MEND;
     2770+    3640
     2771+    3641        %EJECT;
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:386  
     2772+    3642
     2773+    3643          %MACRO QI$FIELD_DAD ( STCLASS = "BASED",
     2774+    3644                                NAME = QI$FIELD_DAD );
     2775+    3645
     2776+    3646            %BEGIN_MACRO ( STCLASS = STCLASS );
     2777+    3647
     2778+    3648          DCL 1 NAME STCLASS ALIGNED,
     2779+    3649                2 WORD0 SBIN,
     2780+    3650                2 WORD0_FLAGS REDEF WORD0,
     2781+    3651                  3 INDIRECT BIT(1) UNAL,
     2782+    3652                                           /* on if an indirect reference */
     2783+    3653                  3 IO_FLAGS,
     2784+    3654                    4 IS_OUTPUT BIT(1) UNAL,
     2785+    3655                                           /* on if this FIELD is OUTPUT or I-O */
     2786+    3656                    4 IS_INPUT BIT(1) UNAL,
     2787+    3657                                           /* on if this FIELD is INPUT or I-O */
     2788+    3658                  3 IO_VALUE REDEF IO_FLAGS UBIN(2) UNAL,
     2789+    3659                                           /* all 1's if this field is I-O */
     2790+    3660                  3 IS_ENTRY_REQUIRED BIT(1) UNAL,
     2791+    3661                                           /* on if INPUT-REQUIRED */
     2792+    3662                  3 IS_OUTPUT_CONSTANT BIT(1) UNAL,
     2793+    3663                                           /* on if CONSTANT OUTPUT */
     2794+    3664                  3 IS_JUSTIFIED_RIGHT BIT(1) UNAL,
     2795+    3665                                           /* on if right justification is in effect */
     2796+    3666                  3 IS_AOIM BIT(1) UNAL,
     2797+    3667                                           /* on if A-O-I-M */
     2798+    3668                  3 * BIT(1) UNAL,
     2799+    3669                  3 IS_FORM_VARIABLE BIT(1) UNAL,
     2800+    3670                                           /* on if a FORM var */
     2801+    3671                  3 IS_CONSTANT BIT(1) UNAL,
     2802+    3672                                           /* on if CONSTANT */
     2803+    3673                  3 DIMENSION_COUNT UBIN(2) UNAL,
     2804+    3674                                           /* # of dimensions */
     2805+    3675                  3 TYPE UBIN(4) UNAL,
     2806+    3676                                           /* TYPE of variable */
     2807+    3677                %QI$PSEUDO_CIP ( NAME = PSEUDO_CIP,
     2808+    3678                                 LVL = 2,
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:387  
     2809+    3679                                 END_STRUCTURE = NO );
     2810+    3680                2 PICTURE_STRING@P UBIN,
     2811+    3681                                           /* ADDR (PROC) disp to PICTURE string */
     2812+    3682                2 BROTHER@P UBIN,
     2813+    3683                                           /* ADDR disp to DAD of brother/sister */
     2814+    3684                2 FATHER@P UBIN,
     2815+    3685                                           /* ADDR disp to DAD of father */
     2816+    3686                2 STATUS_AREA@D UBIN,
     2817+    3687                                           /* ADDR (DATA) disp to scratch area */
     2818+    3688                2 IDENTIFIER@P UBIN,
     2819+    3689                                           /* ADDR (PROC) disp to identifier */
     2820+    3690                2 POSITION,
     2821+    3691                  3 LINE UBIN,
     2822+    3692                                           /* LINE integer or ADDR disp to
     2823+    3693                                              DAD of LINE variable         */
     2824+    3694                  3 COLUMN UBIN,
     2825+    3695                                           /* COLUMN integer or ADDR disp to
     2826+    3696                                              DAD of COLUMN variable         */
     2827+    3697                2 * UBIN BYTE UNAL,
     2828+    3698                2 VISUAL_ATTRIBUTE UBIN BYTE UNAL,
     2829+    3699                                           /* VISUAL-ATTRIBUTE code byte */
     2830+    3700                2 VARIABLE_LENGTH_ITEMS,
     2831+    3701                  3 LEVEL_MULTIPLIERS,
     2832+    3702                    4 ONE_DIMENSIONAL,
     2833+    3703                      5 ELEMENT_COUNT UBIN,
     2834+    3704                      5 ELEMENT_LENGTH UBIN,
     2835+    3705                    4 TWO_DIMENSIONAL,
     2836+    3706                      5 ELEMENT_COUNT UBIN,
     2837+    3707                      5 ELEMENT_LENGTH UBIN,
     2838+    3708                    4 THREE_DIMENSIONAL,
     2839+    3709                      5 ELEMENT_COUNT UBIN,
     2840+    3710                      5 ELEMENT_LENGTH UBIN,
     2841+    3711                 3 LEVEL_MULTIPLIER_A(0:%(QI#MAXIMUM_DIMENSION-1)) REDEF LEVEL_MULTIPLIERS,
     2842+    3712                    4 ELEMENT_COUNT UBIN,
     2843+    3713                    4 ELEMENT_LENGTH UBIN,
     2844+    3714                  3 P_ITEM_A(0:%((2*QI#MAXIMUM_DIMENSION)-1)) REDEF LEVEL_MULTIPLIERS UBIN,
     2845+    3715                  3 *(0:%(QI#P_FIELD_LAST_INDEX-QI#P_FIELD_FIRST_INDEX+1)) UBIN,
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:388  
     2846+    3716                2 ELEMENTARY_ITEM REDEF VARIABLE_LENGTH_ITEMS,
     2847+    3717                  3 P,
     2848+    3718                    4 FILL_CHARACTER_MINIMUM_SIZE BIT(1) UNAL,
     2849+    3719                    4 CLASS_ALPHABET BIT(1) UNAL,
     2850+    3720                    4 DEFAULT BIT(1) UNAL,
     2851+    3721                    4 PROMPT BIT(1) UNAL,
     2852+    3722                    4 REPEATS BIT(1) UNAL,
     2853+    3723                    4 SEPARATED BIT(1) UNAL,
     2854+    3724                  3 P_A(0:5) REDEF P BIT(1) UNAL,
     2855+    3725                  3 * UBIN(7) UNAL,
     2856+    3726                  3 CLASS_TYPE UBIN(3) UNAL,
     2857+    3727                  3 P_ITEM_A(0:%(QI#P_FIELD_LAST_INDEX-QI#P_FIELD_FIRST_INDEX)) UBIN,
     2858+    3728                  3 * UBIN,
     2859+    3729                  3 * UBIN,
     2860+    3730                  3 * UBIN,
     2861+    3731                  3 * UBIN,
     2862+    3732                  3 * UBIN,
     2863+    3733                  3 * UBIN,
     2864+    3734                2 ONE_DIMENSIONAL_ITEM REDEF VARIABLE_LENGTH_ITEMS,
     2865+    3735                  3 * UBIN,
     2866+    3736                  3 * UBIN,
     2867+    3737                  3 P,
     2868+    3738                    4 FILL_CHARACTER_MINIMUM_SIZE BIT(1) UNAL,
     2869+    3739                    4 CLASS_ALPHABET BIT(1) UNAL,
     2870+    3740                    4 DEFAULT BIT(1) UNAL,
     2871+    3741                    4 PROMPT BIT(1) UNAL,
     2872+    3742                    4 REPEATS BIT(1) UNAL,
     2873+    3743                    4 SEPARATED BIT(1) UNAL,
     2874+    3744                  3 P_A(0:5) REDEF P BIT(1) UNAL,
     2875+    3745                  3 * UBIN(7) UNAL,
     2876+    3746                  3 CLASS_TYPE UBIN(3) UNAL,
     2877+    3747                  3 P_ITEM_A(0:%(QI#P_FIELD_LAST_INDEX-QI#P_FIELD_FIRST_INDEX)) UBIN,
     2878+    3748                  3 * UBIN,
     2879+    3749                  3 * UBIN,
     2880+    3750                  3 * UBIN,
     2881+    3751                  3 * UBIN,
     2882+    3752                2 TWO_DIMENSIONAL_ITEM REDEF VARIABLE_LENGTH_ITEMS,
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:389  
     2883+    3753                  3 * UBIN,
     2884+    3754                  3 * UBIN,
     2885+    3755                  3 * UBIN,
     2886+    3756                  3 * UBIN,
     2887+    3757                  3 P,
     2888+    3758                    4 FILL_CHARACTER_MINIMUM_SIZE BIT(1) UNAL,
     2889+    3759                    4 CLASS_ALPHABET BIT(1) UNAL,
     2890+    3760                    4 DEFAULT BIT(1) UNAL,
     2891+    3761                    4 PROMPT BIT(1) UNAL,
     2892+    3762                    4 REPEATS BIT(1) UNAL,
     2893+    3763                    4 SEPARATED BIT(1) UNAL,
     2894+    3764                  3 P_A(0:5) REDEF P BIT(1) UNAL,
     2895+    3765                  3 * UBIN(7) UNAL,
     2896+    3766                  3 CLASS_TYPE UBIN(3) UNAL,
     2897+    3767                  3 P_ITEM_A(0:%(QI#P_FIELD_LAST_INDEX-QI#P_FIELD_FIRST_INDEX)) UBIN,
     2898+    3768                  3 * UBIN,
     2899+    3769                  3 * UBIN;
     2900+    3770
     2901+    3771            %END_MACRO;
     2902+    3772
     2903+    3773          %MEND;
     2904+    3774
     2905+    3775        %EJECT;
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:390  
     2906+    3776
     2907+    3777          %MACRO QI$FIELD_DAD_P ( STCLASS = "BASED",
     2908+    3778                                  NAME = QI$FIELD_DAD_P );
     2909+    3779
     2910+    3780            %BEGIN_MACRO ( STCLASS = STCLASS );
     2911+    3781
     2912+    3782        /*
     2913+    3783            Presence bits for FIELD-type DADs.
     2914+    3784        */
     2915+    3785          DCL 1 NAME STCLASS ALIGNED,
     2916+    3786                2 P,
     2917+    3787                  3 FILL_CHARACTER_MINIMUM_SIZE BIT(1) UNAL,
     2918+    3788                  3 CLASS_ALPHABET BIT(1) UNAL,
     2919+    3789                  3 DEFAULT BIT(1) UNAL,
     2920+    3790                  3 PROMPT BIT(1) UNAL,
     2921+    3791                  3 REPEATS BIT(1) UNAL,
     2922+    3792                  3 SEPARATED BIT(1) UNAL,
     2923+    3793                2 P_A(0:5) REDEF P BIT(1) UNAL,
     2924+    3794                2 * UBIN(7) UNAL,
     2925+    3795                2 CLASS_TYPE UBIN(3) UNAL,
     2926+    3796                2 P_ITEM_A(0:%(QI#P_FIELD_LAST_INDEX-QI#P_FIELD_FIRST_INDEX)) UBIN;
     2927+    3797
     2928+    3798            %END_MACRO;
     2929+    3799
     2930+    3800          %MEND;
     2931+    3801
     2932+    3802        %EJECT;
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:391  
     2933+    3803
     2934+    3804          %MACRO QI$MAJOR_NODE ( STCLASS = "BASED",
     2935+    3805                                 NAME = QI$MAJOR_NODE );
     2936+    3806
     2937+    3807            %BEGIN_MACRO ( STCLASS = STCLASS );
     2938+    3808
     2939+    3809          DCL 1 NAME STCLASS ALIGNED,
     2940+    3810                2 WORD0 SBIN,
     2941+    3811                2 WORD0_FLAGS REDEF WORD0,
     2942+    3812                  3 INDIRECT BIT(1) UNAL,
     2943+    3813                  3 IS_ANY_DESCENDANT_OUTPUT BIT(1) UNAL,
     2944+    3814                  3 IS_ANY_DESCENDANT_INPUT BIT(1) UNAL,
     2945+    3815                  3 * UBIN(5) UNAL,
     2946+    3816                  3 IS_FORM_VARIABLE BIT(1) UNAL,
     2947+    3817                  3 IS_CONSTANT BIT(1) UNAL,
     2948+    3818                  3 * UBIN(2) UNAL,
     2949+    3819                  3 TYPE UBIN(4) UNAL,
     2950+    3820                2 * UBIN,
     2951+    3821                2 * UBIN,
     2952+    3822                2 SON@P UBIN,
     2953+    3823                2 BROTHER@P UBIN,
     2954+    3824                2 FATHER@P UBIN,
     2955+    3825                          /* chauvanists. */
     2956+    3826                2 STATUS_AREA@D UBIN,
     2957+    3827                2 IDENTIFIER@P UBIN;
     2958+    3828
     2959+    3829            %END_MACRO;
     2960+    3830
     2961+    3831          %MEND;
     2962+    3832
     2963+    3833        %EJECT;
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:392  
     2964+    3834
     2965+    3835          %MACRO QI$MINOR_NODE ( STCLASS = "BASED",
     2966+    3836                                 NAME = QI$MINOR_NODE );
     2967+    3837
     2968+    3838            %BEGIN_MACRO ( STCLASS = STCLASS );
     2969+    3839
     2970+    3840          DCL 1 NAME STCLASS ALIGNED,
     2971+    3841                2 WORD0 SBIN,
     2972+    3842                2 WORD0_FLAGS REDEF WORD0,
     2973+    3843                  3 INDIRECT BIT(1) UNAL,
     2974+    3844                  3 IS_ANY_DESCENDANT_OUTPUT BIT(1) UNAL,
     2975+    3845                  3 IS_ANY_DESCENDANT_INPUT BIT(1) UNAL,
     2976+    3846                  3 * UBIN(5) UNAL,
     2977+    3847                  3 IS_FORM_VARIABLE BIT(1) UNAL,
     2978+    3848                  3 IS_CONSTANT BIT(1) UNAL,
     2979+    3849                  3 * UBIN(2) UNAL,
     2980+    3850                  3 TYPE UBIN(4) UNAL,
     2981+    3851                2 REPEATS UBIN,
     2982+    3852                2 SEPARATED UBIN,
     2983+    3853                2 SON@P UBIN,
     2984+    3854                2 BROTHER@P UBIN,
     2985+    3855                2 FATHER@P UBIN,
     2986+    3856                          /* chauvanists. */
     2987+    3857                2 STATUS_AREA@D UBIN,
     2988+    3858                2 IDENTIFIER@P UBIN;
     2989+    3859
     2990+    3860            %END_MACRO;
     2991+    3861
     2992+    3862          %MEND;
     2993+    3863
     2994+    3864        %EJECT;
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:393  
     2995+    3865
     2996+    3866          %MACRO QI$FILE ( STCLASS = "BASED",
     2997+    3867                           NAME = QI$FILE );
     2998+    3868
     2999+    3869            %BEGIN_MACRO ( STCLASS = STCLASS );
     3000+    3870
     3001+    3871          DCL 1 NAME STCLASS ALIGNED,
     3002+    3872                2 WORD0 SBIN,
     3003+    3873                2 WORD0_FLAGS REDEF WORD0,
     3004+    3874                  3 INDIRECT BIT(1) UNAL,
     3005+    3875                          /* If indirect, this is a pointer to the real DAD,
     3006+    3876                             which lives in user data. */
     3007+    3877                  3 IS_ERROR_STATUS_VALID BIT(1) UNAL,
     3008+    3878                          /* If error_status_valid, there is a DAD pointer
     3009+    3879                             to an ERROR STATUS variable below. */
     3010+    3880                  3 * UBIN(10) UNAL,
     3011+    3881                  3 TYPE UBIN(4) UNAL,
     3012+    3882                          /* Type of file:  transaction or form. */
     3013+    3883                2 * UBIN,
     3014+    3884                2 * UBIN,
     3015+    3885                2 ERROR_STATUS@D UBIN,
     3016+    3886                          /* Offset (in data) of the 8-word space reserved
     3017+    3887                             for the ERROR STATUS variable. */
     3018+    3888                2 * UBIN,
     3019+    3889                2 * UBIN,
     3020+    3890                2 STATUS_AREA@D UBIN,
     3021+    3891                          /* Offset (in data) of the QI$FILE_STATUS
     3022+    3892                             status area for this file FD. */
     3023+    3893                2 IDENTIFIER@P UBIN,
     3024+    3894                          /* Offset (in procedure) of the ATEXTC
     3025+    3895                             of the file name. */
     3026+    3896                2 DCB# UBIN,
     3027+    3897                          /* SYMREFed DCBNUM for this file. */
     3028+    3898                2 USE_PROCEDURE@P UBIN,
     3029+    3899                          /* Offset (in procedure) of the USE procedure. */
     3030+    3900                2 * UBIN;
     3031+    3901
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:394  
     3032+    3902            %END_MACRO;
     3033+    3903
     3034+    3904          %MEND;
     3035+    3905
     3036+    3906        %EJECT;
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:395  
     3037+    3907
     3038+    3908          %MACRO QI$FORM_FILE ( STCLASS = "BASED",
     3039+    3909                                NAME = QI$FORM_FILE );
     3040+    3910
     3041+    3911            %BEGIN_MACRO ( STCLASS = STCLASS );
     3042+    3912
     3043+    3913          DCL 1 NAME STCLASS ALIGNED,
     3044+    3914                2 WORD0 SBIN,
     3045+    3915                2 WORD0_FLAGS REDEF WORD0,
     3046+    3916                  3 INDIRECT BIT(1) UNAL,
     3047+    3917                          /* If indirect, this is a pointer to the read DAD,
     3048+    3918                             which lives in user data. */
     3049+    3919                  3 IS_ERROR_STATUS_VALID BIT(1) UNAL,
     3050+    3920                          /* If error_status_valid, there is a DAD pointer
     3051+    3921                             to an ERROR STATUS variable below. */
     3052+    3922                  3 IS_MESSAGE_LINE_VALID BIT(1) UNAL,
     3053+    3923                          /* if message_line_valid, there is a DAD pointer
     3054+    3924                             to a MESSAGE LINE variable below. */
     3055+    3925                  3 IS_ACTIVATION_STATUS_VALID BIT(1) UNAL,
     3056+    3926                          /* if activation_status_valid, there is a DAD pointer
     3057+    3927                             to an ACTIVATION STATUS variable below. */
     3058+    3928                  3 * UBIN(4) UNAL,
     3059+    3929                  3 IS_FORM_VARIABLE BIT(1) UNAL,
     3060+    3930                          /* if form_variable, then this thing was defined
     3061+    3931                             within the FRAME SECTION. */
     3062+    3932                  3 IS_CONSTANT BIT(1) UNAL,
     3063+    3933                          /* If constant, this item is located in user
     3064+    3934                             procedure. */
     3065+    3935                  3 * UBIN(2) UNAL,
     3066+    3936                  3 TYPE UBIN(4) UNAL,
     3067+    3937                          /* For form DADs, type is
     3068+    3938                             always 11 ('B'X). */
     3069+    3939                2 FRAME_COUNT UBIN,
     3070+    3940                          /* Number of elements in FRAME_LIST_A below. */
     3071+    3941                2 ACTIVATION_STATUS@P UBIN,
     3072+    3942                          /* Offset (in procedure) of the user-supplied
     3073+    3943                             ACTIVATION STATUS variable. */
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:396  
     3074+    3944                2 ERROR_STATUS@D UBIN,
     3075+    3945                          /* Offset (in data) of the 8-word space reserved
     3076+    3946                             for the ERROR STATUS variable. */
     3077+    3947                2 MESSAGE_LINE UBIN,
     3078+    3948                          /* Integer value of the ERROR MESSAGE
     3079+    3949                             line number. */
     3080+    3950                2 RETRY_COUNT UBIN,
     3081+    3951                          /* Integer value of the retry count. */
     3082+    3952                2 STATUS_AREA@D UBIN,
     3083+    3953                          /* Offset (in data) of the QI$FORM_STATUS
     3084+    3954                             status area for this form FD. */
     3085+    3955                2 IDENTIFIER@P UBIN,
     3086+    3956                          /* Offset (in procedure) of the ATEXTC
     3087+    3957                             of the file name. */
     3088+    3958                2 DCB# UBIN,
     3089+    3959                          /* SYMREFed DCBNUM for this FORM_FILE. */
     3090+    3960                2 USE_PROCEDURE,
     3091+    3961                  3 STANDARD,
     3092+    3962                    4 WHERE@P UBIN,
     3093+    3963                          /* Offset (in procedure) of the USE procedure. */
     3094+    3964                  3 VERIFY,
     3095+    3965                    4 WHERE@P UBIN,
     3096+    3966                          /* Offset (in procedure) of the USE procedure. */
     3097+    3967                2 USE_PROCEDURE_A@P(0:1) REDEF USE_PROCEDURE UBIN,
     3098+    3968                2 FRAME_LIST_A@P(0:0) UBIN;
     3099+    3969                          /* List of offsets of FRAMES specified in the
     3100+    3970                             FRAMES ARE clause. */
     3101+    3971
     3102+    3972            %END_MACRO;
     3103+    3973
     3104+    3974          %MEND;
     3105+    3975
     3106+    3976        %EJECT;
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:397  
     3107+    3977
     3108+    3978          %MACRO QI$TRAN_FILE ( STCLASS = "BASED",
     3109+    3979                                NAME = QI$TRAN_FILE );
     3110+    3980
     3111+    3981            %BEGIN_MACRO ( STCLASS = STCLASS );
     3112+    3982
     3113+    3983          DCL 1 NAME STCLASS ALIGNED,
     3114+    3984                2 WORD0 SBIN,
     3115+    3985                2 WORD0_FLAGS REDEF WORD0,
     3116+    3986                  3 INDIRECT BIT(1) UNAL,
     3117+    3987                          /* If indirect, this is a pointer to the read DAD,
     3118+    3988                             which lives in user data. */
     3119+    3989                  3 IS_ERROR_STATUS_VALID BIT(1) UNAL,
     3120+    3990                          /* If error_status_valid, there is a DAD pointer
     3121+    3991                             to an ERROR STATUS variable below. */
     3122+    3992                  3 IS_RELATIVE_KEY_VALID BIT(1) UNAL,
     3123+    3993                          /* If relative_key_valid, there is a DAD pointer
     3124+    3994                             to a RELATIVE KEY variable below. */
     3125+    3995                  3 IS_ID_VALID BIT(1) UNAL,
     3126+    3996                          /* If id_valid, there is a DAD pointer to an
     3127+    3997                             ID variable below. */
     3128+    3998                  3 * UBIN(3) UNAL,
     3129+    3999                  3 INPUT_CLASS BIT(1) UNAL,
     3130+    4000                          /* Input_class is:  0 for response
     3131+    4001                                              1 for report. */
     3132+    4002                  3 ACCESS UBIN(2) UNAL,
     3133+    4003                          /* Access is:  0 for sequential
     3134+    4004                                         1 for dynamic
     3135+    4005                                         2 for random.
     3136+    4006                                         (Not currently used.) */
     3137+    4007                  3 * UBIN(2) UNAL,
     3138+    4008                  3 TYPE UBIN(4) UNAL,
     3139+    4009                          /* For transaction DADs, file_type is
     3140+    4010                             always 12 ('C'X). */
     3141+    4011                2 MAX_RECORD_SIZE UBIN,
     3142+    4012                          /* Size of the largest record in this FD (bytes). */
     3143+    4013                2 BUFFER@D UBIN,
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:398  
     3144+    4014                          /* Offset (in data) of the buffer to be written. */
     3145+    4015                2 ERROR_STATUS@D UBIN,
     3146+    4016                          /* Offset (in data) of the 8-word space reserved
     3147+    4017                             for the ERROR STATUS variable. */
     3148+    4018                2 RELATIVE_KEY@ UBIN,
     3149+    4019                          /* Offset of the DAD describing the
     3150+    4020                             RELATIVE KEY variable.  (Unimplemented).  */
     3151+    4021                2 ID@P UBIN,
     3152+    4022                          /* Offset of the DAD describing the
     3153+    4023                             ID variable. */
     3154+    4024                2 STATUS_AREA@D UBIN,
     3155+    4025                          /* Offset (in data) of the QI$TRAN_STATUS
     3156+    4026                             status area for this transaction FD. */
     3157+    4027                2 IDENTIFIER@P UBIN,
     3158+    4028                          /* Offset (in procedure) of the ATEXTC
     3159+    4029                             of the file name. */
     3160+    4030                2 DCB# UBIN,
     3161+    4031                          /* SYMREFed DCBNUM for this TRAN_FILE. */
     3162+    4032                2 USE_PROCEDURE@P UBIN,
     3163+    4033                          /* Offset (in procedure) of the USE procedure. */
     3164+    4034                2 * UBIN,
     3165+    4035                2 TYPE@P UBIN;
     3166+    4036                          /* Offset of the DAD describing the
     3167+    4037                             TYPE variable. */
     3168+    4038
     3169+    4039            %END_MACRO;
     3170+    4040
     3171+    4041          %MEND;
     3172+    4042
     3173+    4043        %EJECT;
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:399  
     3174+    4044
     3175+    4045          %MACRO QI$FRAME ( STCLASS = "BASED",
     3176+    4046                            NAME = QI$FRAME );
     3177+    4047
     3178+    4048            %BEGIN_MACRO ( STCLASS = STCLASS );
     3179+    4049
     3180+    4050          DCL 1 NAME STCLASS ALIGNED,
     3181+    4051                2 WORD0 SBIN,
     3182+    4052                2 WORD0_FLAGS REDEF WORD0,
     3183+    4053                  3 INDIRECT BIT(1) UNAL,
     3184+    4054                  3 * UBIN(5) UNAL,
     3185+    4055                  3 IS_LINE_ORIGIN_VARIABLE BIT(1) UNAL,
     3186+    4056                  3 IS_COLUMN_ORIGIN_VARIABLE BIT(1) UNAL,
     3187+    4057                  3 IS_FORM_VARIABLE BIT(1) UNAL,
     3188+    4058                  3 IS_CONSTANT BIT(1) UNAL,
     3189+    4059                  3 * UBIN(2) UNAL,
     3190+    4060                  3 TYPE UBIN(4) UNAL,
     3191+    4061                2 LINE_ORIGIN UBIN,
     3192+    4062                2 COLUMN_ORIGIN UBIN,
     3193+    4063                2 SON@P UBIN,
     3194+    4064                2 BROTHER@P UBIN,
     3195+    4065                2 FATHER@P UBIN,
     3196+    4066                          /* chauvanists. */
     3197+    4067                2 STATUS_AREA@D UBIN,
     3198+    4068                2 IDENTIFIER@P UBIN;
     3199+    4069
     3200+    4070            %END_MACRO;
     3201+    4071
     3202+    4072          %MEND;
     3203+    4073
     3204+    4074        %EJECT;
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:400  
     3205+    4075
     3206+    4076        /*
     3207+    4077                 PICture string pointer-to-ers...
     3208+    4078        */
     3209+    4079
     3210+    4080          %MACRO QI$PICTURE_STRING ( STCLASS = "BASED",
     3211+    4081                                     NAME = QI$PICTURE_STRING );
     3212+    4082
     3213+    4083            %BEGIN_MACRO ( STCLASS = STCLASS );
     3214+    4084
     3215+    4085          DCL 1 NAME STCLASS ALIGNED,
     3216+    4086                2 TYPE UBIN(3) UNAL,
     3217+    4087                2 * UBIN(13) UNAL,
     3218+    4088                2 OTHER_STUFF_A(0:0) UBIN;
     3219+    4089
     3220+    4090            %END_MACRO;
     3221+    4091
     3222+    4092          %MEND;
     3223+    4093
     3224+    4094          %MACRO QI$NUMERIC_PICTURE_STRING ( STCLASS = "BASED",
     3225+    4095                           NAME = QI$NUMERIC_PICTURE_STRING );
     3226+    4096
     3227+    4097            %BEGIN_MACRO ( STCLASS = STCLASS );
     3228+    4098
     3229+    4099          DCL 1 NAME STCLASS ALIGNED,
     3230+    4100                2 TYPE UBIN(3) UNAL,
     3231+    4101                2 MAX_DIGIT_COUNT UBIN(5) UNAL,
     3232+    4102                2 * UBIN(2) UNAL,
     3233+    4103                2 DECIMAL_SCALING UBIN(6) UNAL,
     3234+    4104                2 MOP_STRING_COUNT UBIN BYTE UNAL,
     3235+    4105                2 MOP_STRING_A(0:0) UBIN BYTE UNAL;
     3236+    4106
     3237+    4107            %END_MACRO;
     3238+    4108
     3239+    4109          %MEND;
     3240+    4110
     3241+    4111          %MACRO QI$ALPHANUMERIC_PICTURE_STRING ( STCLASS = "BASED",
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:401  
     3242+    4112                           NAME = QI$ALPHANUMERIC_PICTURE_STRING );
     3243+    4113
     3244+    4114            %BEGIN_MACRO ( STCLASS = STCLASS );
     3245+    4115
     3246+    4116          DCL 1 NAME STCLASS ALIGNED,
     3247+    4117                2 TYPE UBIN(3) UNAL,
     3248+    4118                2 EDIT_STRING_COUNT UBIN(13) UNAL,
     3249+    4119                2 EDIT_STRING_A(0:0),
     3250+    4120                  3 FUNCTION UBIN(2) UNAL,
     3251+    4121                  3 LENGTH UBIN(14) UNAL;
     3252+    4122
     3253+    4123            %END_MACRO;
     3254+    4124
     3255+    4125          %MEND;
     3256+    4126
     3257+    4127        %EJECT;
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:402  
     3258+    4128        /*
     3259+    4129                               %%%%%%%  %%%%%%   %%
     3260+    4130                               %%       %%   %%  %%
     3261+    4131                               %%       %%   %%  %%
     3262+    4132                               %%%%%    %%%%%%   %%
     3263+    4133                               %%       %%       %%
     3264+    4134                               %%       %%       %%
     3265+    4135                               %%       %%       %%%%%%%
     3266+    4136
     3267+    4137                           %%
     3268+    4138                           %%             %%
     3269+    4139                       %%% %%   %%% %%  %%%%%%    %%% %%
     3270+    4140                      %%  %%%  %%  %%%    %%     %%  %%%
     3271+    4141                      %%  %%%  %%  %%%    %%     %%  %%%
     3272+    4142                      %%  %%%  %%  %%%    %%     %%  %%%
     3273+    4143                       %%% %%   %%% %%     %%%    %%% %%
     3274+    4144                                                                            */
     3275+    4145
     3276+    4146          %MACRO QI$TERMINAL_ATTRIBUTES ( STCLASS = "BASED",
     3277+    4147                                          NAME = QI$TERMINAL_ATTRIBUTES );
     3278+    4148
     3279+    4149            %BEGIN_MACRO ( STCLASS = STCLASS );
     3280+    4150
     3281+    4151        /*    Although the compiler never explicitly generates this,
     3282+    4152              it's implicitly the largest possible *thing* to say
     3283+    4153              ACCEPT *thing* FROM TERMINAL-ATTRIBUTES
     3284+    4154              about.  See the FPL manual under the ACCEPT verb.
     3285+    4155        */
     3286+    4156
     3287+    4157          DCL 1 NAME STCLASS CALIGNED,
     3288+    4158                2 STATION_NAME CHAR(8) CALIGNED,
     3289+    4159                2 CURRENT_DEVICE_PROFILE CHAR(12) CALIGNED,
     3290+    4160                2 NUMBER_OF_LINES CHAR(4) CALIGNED,
     3291+    4161                2 NUMBER_OF_COLUMNS CHAR(4) CALIGNED,
     3292+    4162                2 DEVICE_I_O_CAPABILITY CHAR(1) CALIGNED,
     3293+    4163                2 CONNECTION_TYPE CHAR(1) CALIGNED,
     3294+    4164                2 CP_6_NODE CHAR(4) CALIGNED,
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:403  
     3295+    4165                2 CP_6_PORT CHAR(4) CALIGNED,
     3296+    4166                2 PROGRAM_EXECUTION CHAR(1) CALIGNED,
     3297+    4167                2 DEVICE_TYPE CHAR(1) CALIGNED,
     3298+    4168                2 CP_6_CONTROLLER CHAR(4) CALIGNED,
     3299+    4169                2 CP_6_DEVICE CHAR(4) CALIGNED;
     3300+    4170
     3301+    4171          DCL 1 %CHARTEXT(CONCAT(TEXTCHAR(NAME),'_TEXT')) REDEF NAME CHAR(48);
     3302+    4172
     3303+    4173            %END_MACRO;
     3304+    4174
     3305+    4175          %MEND;
     3306+    4176
     3307+    4177        %EJECT;
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:404  
     3308+    4178          %MACRO QI$ACTIVATION_STATUS ( STCLASS = "BASED",
     3309+    4179                                        NAME = QI$ACTIVATION_STATUS );
     3310+    4180
     3311+    4181            %BEGIN_MACRO ( STCLASS = STCLASS );
     3312+    4182
     3313+    4183        /*    Although the compiler never explicitly generates this,
     3314+    4184              it's implicitly the largest possible *thing* to say
     3315+    4185              ACTIVATION STATUS IS *thing*
     3316+    4186              about.  See the FPL manual under the SELECT clause.
     3317+    4187        */
     3318+    4188
     3319+    4189          DCL 1 NAME STCLASS CALIGNED,
     3320+    4190                2 ACTIVATION_CHARACTER CHAR(1) CALIGNED,
     3321+    4191                2 ACTIVATION_POSITION CHAR(3) CALIGNED,
     3322+    4192                2 ACTIVATION_LINE CHAR(3) CALIGNED,
     3323+    4193                2 ACTIVATION_COLUMN CHAR(3) CALIGNED,
     3324+    4194                2 ACTIVATION_FIELD CHAR(30) CALIGNED;
     3325+    4195
     3326+    4196          DCL 1 %CHARTEXT(CONCAT(TEXTCHAR(NAME),'_TEXT')) REDEF NAME CHAR(40);
     3327+    4197
     3328+    4198            %END_MACRO;
     3329+    4199
     3330+    4200          %MEND;
     3331+    4201
     3332+    4202        %EJECT;
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:405  
     3333+    4203
     3334+    4204          %MACRO QI$PERFORM_BLOCK ( STCLASS = "BASED",
     3335+    4205                                    NAME = QI$PERFORM_BLOCK );
     3336+    4206
     3337+    4207            %BEGIN_MACRO ( STCLASS = STCLASS );
     3338+    4208
     3339+    4209        /*
     3340+    4210          This structure is used by PERFM and PERFMT routines to refer
     3341+    4211          to iteration data.
     3342+    4212        */
     3343+    4213          DCL 1 NAME STCLASS ALIGNED,
     3344+    4214                2 FROM@P UBIN,
     3345+    4215                2 RETURN$ PTR,
     3346+    4216                2 ITERATION UBIN;
     3347+    4217
     3348+    4218            %END_MACRO;
     3349+    4219
     3350+    4220          %MEND;
     3351+    4221
     3352+    4222        %EJECT;
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:406  
     3353+    4223
     3354+    4224          %MACRO QI$INDICATORS
     3355+    4225                 ( NAME = QI$INDICATORS,
     3356+    4226                   STCLASS = "BASED",
     3357+    4227                   LVL = 1,
     3358+    4228                   END_STRUCTURE ( YES = ";",
     3359+    4229                                   NO = ",",
     3360+    4230                                   ANY ) = ";" );
     3361+    4231
     3362+    4232            %BEGIN_MACRO ( STCLASS = STCLASS );
     3363+    4233
     3364+    4234            %IF LVL = 1;
     3365+    4235          DCL 1 NAME STCLASS ALIGNED,
     3366+    4236            %ELSE;
     3367+    4237              %(LVL) NAME ALIGNED,
     3368+    4238            %ENDIF;
     3369+    4239                %(LVL+1) IS_ACTIVE BIT(1) UNAL,
     3370+    4240                                           /* Is (or is in) an ACTIVATEd frame */
     3371+    4241                %(LVL+1) ENABLED_FLAGS,
     3372+    4242                  %(LVL+2) IS_OUTPUT BIT(1) UNAL,
     3373+    4243                                           /* ENABLEd for OUTPUT */
     3374+    4244                  %(LVL+2) IS_INPUT BIT(1) UNAL,
     3375+    4245                                           /* ENABLEd for INPUT */
     3376+    4246                %(LVL+1) ENABLED_VALUE REDEF ENABLED_FLAGS UBIN(2) UNAL,
     3377+    4247                %(LVL+1) STATE_FLAGS,
     3378+    4248                  %(LVL+2) IS_AVAILABLE BIT(1) UNAL,
     3379+    4249                                           /* Last operation was a READ or ACCEPT */
     3380+    4250                  %(LVL+2) IS_PRESENTED BIT(1) UNAL,
     3381+    4251                                           /* Last operation was a PRESENT */
     3382+    4252                %(LVL+1) STATE_VALUE REDEF STATE_FLAGS UBIN(2) UNAL,
     3383+    4253                %(LVL+1) OPEN_FLAGS,
     3384+    4254                  %(LVL+2) IS_OUTPUT BIT(1) UNAL,
     3385+    4255                                           /* Is (or is in) an FD opened
     3386+    4256                                              for INPUT or I-O */
     3387+    4257                  %(LVL+2) IS_INPUT BIT(1) UNAL,
     3388+    4258                                           /* Is (or is in) an FD opened
     3389+    4259                                              for OUTPUT or I-O */
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:407  
     3390+    4260                %(LVL+1) OPEN_VALUE REDEF OPEN_FLAGS UBIN(2) UNAL,
     3391+    4261                %(LVL+1) * UBIN(5) UNAL,
     3392+    4262
     3393+    4263            %IF LVL = 1;
     3394+    4264                %(LVL+1) TYPE UBIN(4) UNAL;
     3395+    4265                                           /* Type is form, frame, or field */
     3396+    4266          DCL 1 %CHARTEXT(CONCAT(TEXTCHAR(NAME),'_A'))(0:0) REDEF NAME UBIN ALIGNED;
     3397+    4267            %ELSE;
     3398+    4268                %(LVL+1) TYPE UBIN(4) UNAL,
     3399+    4269                                           /* Type is form, frame, or field */
     3400+    4270        %(LVL) %CHARTEXT(CONCAT(TEXTCHAR(NAME),'_A'))(0:0) REDEF NAME UBIN ALIGNED END_STRU
              4270        CTURE
     3401+    4271            %ENDIF;
     3402+    4272
     3403+    4273            %END_MACRO;
     3404+    4274
     3405+    4275          %MEND;
     3406+    4276
     3407+    4277        %EJECT;
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:408  
     3408+    4278
     3409+    4279          %MACRO QI$FIELD_STATUS ( STCLASS = "BASED",
     3410+    4280                                   NAME = QI$FIELD_STATUS );
     3411+    4281
     3412+    4282            %BEGIN_MACRO ( STCLASS = STCLASS );
     3413+    4283
     3414+    4284          DCL 1 NAME STCLASS ALIGNED,
     3415+    4285                2 GZ,
     3416+    4286                  3 FIELD_START_INDEX UBIN,
     3417+    4287                                           /* starting index into interface table */
     3418+    4288                  3 FIELD_STOP_INDEX UBIN,
     3419+    4289                                           /* ending index into interface table */
     3420+    4290                %QI$INDICATORS ( NAME = INDICATORS,
     3421+    4291                                 STCLASS = STCLASS,
     3422+    4292                                 LVL = 2 );
     3423+    4293
     3424+    4294            %END_MACRO;
     3425+    4295
     3426+    4296          %MEND;
     3427+    4297
     3428+    4298        %EJECT;
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:409  
     3429+    4299
     3430+    4300          %MACRO QI$MAJOR_STATUS ( STCLASS = "BASED",
     3431+    4301                                   NAME = QI$MAJOR_STATUS );
     3432+    4302
     3433+    4303            %BEGIN_MACRO ( STCLASS = STCLASS );
     3434+    4304
     3435+    4305          DCL 1 NAME STCLASS ALIGNED,
     3436+    4306                2 GZ,
     3437+    4307                  3 FIELD_START_INDEX UBIN,
     3438+    4308                                           /* starting index into interface table */
     3439+    4309                  3 FIELD_STOP_INDEX UBIN,
     3440+    4310                                           /* ending index into interface table */
     3441+    4311                %QI$INDICATORS ( NAME = INDICATORS,
     3442+    4312                                 STCLASS = STCLASS,
     3443+    4313                                 LVL = 2 );
     3444+    4314
     3445+    4315            %END_MACRO;
     3446+    4316
     3447+    4317          %MEND;
     3448+    4318
     3449+    4319        %EJECT;
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:410  
     3450+    4320
     3451+    4321          %MACRO QI$MINOR_STATUS ( STCLASS = "BASED",
     3452+    4322                                   NAME = QI$MINOR_STATUS );
     3453+    4323
     3454+    4324            %BEGIN_MACRO ( STCLASS = STCLASS );
     3455+    4325
     3456+    4326          DCL 1 NAME STCLASS ALIGNED,
     3457+    4327                2 GZ,
     3458+    4328                  3 FIELD_START_INDEX UBIN,
     3459+    4329                                           /* starting index into interface table */
     3460+    4330                  3 FIELD_STOP_INDEX UBIN,
     3461+    4331                                           /* ending index into interface table */
     3462+    4332                %QI$INDICATORS ( NAME = INDICATORS,
     3463+    4333                                 STCLASS = STCLASS,
     3464+    4334                                 LVL = 2 );
     3465+    4335
     3466+    4336            %END_MACRO;
     3467+    4337
     3468+    4338          %MEND;
     3469+    4339
     3470+    4340        %EJECT;
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:411  
     3471+    4341
     3472+    4342          %MACRO QI$FILE_STATUS ( STCLASS = "BASED",
     3473+    4343                                  NAME = QI$FILE_STATUS );
     3474+    4344
     3475+    4345            %BEGIN_MACRO ( STCLASS = STCLASS );
     3476+    4346
     3477+    4347          DCL 1 NAME STCLASS ALIGNED,
     3478+    4348                2 CURRENT,
     3479+    4349                  3 * BIT(5) UNAL,
     3480+    4350                  3 USAGE,
     3481+    4351                    4 OPENED BIT(1) UNAL,
     3482+    4352                          /* Opened is:  0 for never opened
     3483+    4353                                         1 for opened at least once. */
     3484+    4354                    4 CLOSED BIT(1) UNAL,
     3485+    4355                          /* Closed is:  0 for never closed
     3486+    4356                                         1 for closed at least once. */
     3487+    4357                  3 * UBIN(9) UNAL,
     3488+    4358                2 BACK_LINK@P UBIN,
     3489+    4359                          /* Back_link to the file FD
     3490+    4360                             (in procedure). */
     3491+    4361                2 FLINK$ PTR,
     3492+    4362                          /* Pointer to next opened FD of this type. */
     3493+    4363                2 * UBIN,
     3494+    4364                2 * UBIN,
     3495+    4365                2 * UBIN,
     3496+    4366                2 * UBIN,
     3497+    4367                %QI$INDICATORS ( NAME = INDICATORS,
     3498+    4368                                 STCLASS = STCLASS,
     3499+    4369                                 LVL = 2 );
     3500+    4370
     3501+    4371            %END_MACRO;
     3502+    4372
     3503+    4373          %MEND;
     3504+    4374
     3505+    4375        %EJECT;
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:412  
     3506+    4376
     3507+    4377          %MACRO QI$FORM_STATUS ( STCLASS = "BASED",
     3508+    4378                                  NAME = QI$FORM_STATUS );
     3509+    4379
     3510+    4380            %BEGIN_MACRO ( STCLASS = STCLASS );
     3511+    4381
     3512+    4382          DCL 1 NAME STCLASS ALIGNED,
     3513+    4383                2 CURRENT,
     3514+    4384                  3 * BIT(3) UNAL,
     3515+    4385                  3 IS_USE_PROCEDURE_ACTIVE,
     3516+    4386                    4 STANDARD BIT(1) UNAL,
     3517+    4387                    4 VERIFY BIT(1) UNAL,
     3518+    4388                  3 USAGE,
     3519+    4389                    4 OPENED BIT(1) UNAL,
     3520+    4390                          /* Opened is:  0 for never opened
     3521+    4391                                         1 for opened at least once. */
     3522+    4392                    4 CLOSED BIT(1) UNAL,
     3523+    4393                          /* Closed is:  0 for never closed
     3524+    4394                                         1 for closed at least once. */
     3525+    4395                  3 IS_MESSAGE_LINE_NON_BLANK BIT(1) UNAL,
     3526+    4396                          /* Set if the screen is currently displaying
     3527+    4397                             a non-blank MESSAGE LINE. */
     3528+    4398                  3 IS_UPDATED BIT(1) UNAL,
     3529+    4399                          /* Set if the screen has been updated with
     3530+    4400                             a DISPLAY, WRITE or CLEAR and must be
     3531+    4401                             M$DEVICEd before a STOP "literal" or
     3532+    4402                             a host read. */
     3533+    4403                  3 * UBIN(7) UNAL,
     3534+    4404                2 BACK_LINK@P UBIN,
     3535+    4405                          /* Back_link to the form FD
     3536+    4406                             (in procedure). */
     3537+    4407                2 FLINK$ PTR,
     3538+    4408                          /* Pointer to next opened screen FD. */
     3539+    4409                2 GZ,
     3540+    4410                  3 NEXT_AVAILABLE_FLDID UBIN,
     3541+    4411                          /* Next VDH FLDID to use for activating frames
     3542+    4412                             within this form. */
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:413  
     3543+    4413                2 * UBIN,
     3544+    4414                2 * UBIN,
     3545+    4415                2 * UBIN,
     3546+    4416                %QI$INDICATORS ( NAME = INDICATORS,
     3547+    4417                                 STCLASS = STCLASS,
     3548+    4418                                 LVL = 2 );
     3549+    4419
     3550+    4420            %END_MACRO;
     3551+    4421
     3552+    4422          %MEND;
     3553+    4423
     3554+    4424        %EJECT;
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:414  
     3555+    4425
     3556+    4426          %MACRO QI$TRAN_STATUS ( STCLASS = "BASED",
     3557+    4427                                  NAME = QI$TRAN_STATUS );
     3558+    4428
     3559+    4429            %BEGIN_MACRO ( STCLASS = STCLASS );
     3560+    4430
     3561+    4431          DCL 1 NAME STCLASS ALIGNED,
     3562+    4432                2 CURRENT,
     3563+    4433                  3 * BIT(3) UNAL,
     3564+    4434                  3 IS_RRR_ID_VALID BIT(1) UNAL,
     3565+    4435                          /* If is_rrr_id_valid, rrr_id is real and we
     3566+    4436                             should M$REP_OTP_COMP. */
     3567+    4437                  3 * BIT(1) UNAL,
     3568+    4438                  3 USAGE,
     3569+    4439                    4 OPENED BIT(1) UNAL,
     3570+    4440                          /* Opened is:  0 for never opened
     3571+    4441                                         1 for opened at least once. */
     3572+    4442                    4 CLOSED BIT(1) UNAL,
     3573+    4443                          /* Closed is:  0 for never closed
     3574+    4444                                         1 for closed at least once. */
     3575+    4445                  3 * UBIN(9) UNAL,
     3576+    4446                2 BACK_LINK@P UBIN,
     3577+    4447                          /* Back_link to the transaction FD
     3578+    4448                             (in procedure). */
     3579+    4449                2 FLINK$ PTR,
     3580+    4450                          /* Pointer to next opened transaction FD. */
     3581+    4451                2 LAST_ID UBIN(32),
     3582+    4452                          /* Last transaction id produced by a
     3583+    4453                             WRITE to this FD. */
     3584+    4454                2 RRR_ID UBIN(32),
     3585+    4455                          /* RRR id of the last record READ,
     3586+    4456                             if it was WRITtEn secure. */
     3587+    4457                %QI$INDICATORS ( NAME = INDICATORS,
     3588+    4458                                 STCLASS = STCLASS,
     3589+    4459                                 LVL = 2 );
     3590+    4460
     3591+    4461            %END_MACRO;
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:415  
     3592+    4462
     3593+    4463          %MEND;
     3594+    4464
     3595+    4465        %EJECT;
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:416  
     3596+    4466
     3597+    4467          %MACRO QI$FRAME_STATUS ( STCLASS = "BASED",
     3598+    4468                                   NAME = QI$FRAME_STATUS );
     3599+    4469
     3600+    4470            %BEGIN_MACRO ( STCLASS = STCLASS );
     3601+    4471
     3602+    4472          DCL 1 NAME STCLASS ALIGNED,
     3603+    4473                2 GZ,
     3604+    4474                  3 FIELD_START_INDEX UBIN,
     3605+    4475                                           /* Starting index into interface table. */
     3606+    4476                  3 FIELD_STOP_INDEX UBIN,
     3607+    4477                                           /* Ending index into interface table. */
     3608+    4478                  3 FLDID_START UBIN,
     3609+    4479                                           /* First VDH FLDID for this frame. */
     3610+    4480                  3 FLDID_STOP UBIN,
     3611+    4481                                           /* Last VDH FLDID for this frame. */
     3612+    4482                  3 HEADER$ PTR,
     3613+    4483                                           /* Pointer to interface header area */
     3614+    4484                  3 START$ PTR,
     3615+    4485                                           /* Pointer to start of interface array */
     3616+    4486                  3 STOP$ PTR,
     3617+    4487                                           /* Pointer to end of interface array */
     3618+    4488                2 CURRENT,
     3619+    4489                  3 * BIT(5) UNAL,
     3620+    4490                  3 USAGE,
     3621+    4491                    4 ACTIVATED BIT(1) UNAL,
     3622+    4492                          /* Activated is:  0 for never activated
     3623+    4493                                            1 for activated at least once.  */
     3624+    4494                    4 DEACTIVATED BIT(1) UNAL,
     3625+    4495                          /* Deactivated is:  0 for never deactivated
     3626+    4496                                              1 for deactivated at least once.  */
     3627+    4497                  3 * UBIN(9) UNAL,
     3628+    4498                2 FORM_BACK_LINK@P UBIN,
     3629+    4499                                           /* Back_link to the form FD
     3630+    4500                                              (in procedure). */
     3631+    4501                %QI$INDICATORS ( NAME = INDICATORS,
     3632+    4502                                 STCLASS = STCLASS,
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:417  
     3633+    4503                                 LVL = 2 );
     3634+    4504
     3635+    4505            %END_MACRO;
     3636+    4506
     3637+    4507          %MEND;
     3638+    4508
     3639+    4509        %EJECT;
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:418  
     3640+    4510
     3641+    4511        /*
     3642+    4512                               %%%%%%%  %%%%%%   %%
     3643+    4513                               %%       %%   %%  %%
     3644+    4514                               %%       %%   %%  %%
     3645+    4515                               %%%%%    %%%%%%   %%
     3646+    4516                               %%       %%       %%
     3647+    4517                               %%       %%       %%
     3648+    4518                               %%       %%       %%%%%%%
     3649+    4519                                                                     %%%
     3650+    4520                                                                      %%
     3651+    4521              %%% %%   %%%%%   %% %%%    %%%%%   %% %%%%   %%% %%     %%
     3652+    4522             %%  %%%  %%   %%  %%%  %%  %%   %%  %%%%     %%  %%%     %%
     3653+    4523             %%  %%%  %%%%%%%  %%   %%  %%%%%%%  %%%      %%  %%%     %%
     3654+    4524             %%  %%%  %%       %%   %%  %%       %%       %%  %%%     %%
     3655+    4525              %%% %%   %%%%%   %%   %%   %%%%%   %%        %%% %%   %%%%%%
     3656+    4526                  %%
     3657+    4527              %%%%%
     3658+    4528                                                                            */
     3659+    4529
     3660+    4530          %MACRO QI$GENERAL_BASED ( STCLASS = "BASED" );
     3661+    4531
     3662+    4532            %BEGIN_MACRO ( STCLASS = STCLASS );
     3663+    4533
     3664+    4534        /*
     3665+    4535            some useful stuff...
     3666+    4536        */
     3667+    4537          DCL QI$PROC_A@P(0:0) UBIN STCLASS;
     3668+    4538          DCL QI$DATA_A@D(0:0) UBIN STCLASS;
     3669+    4539          DCL QI$AREA_A@(0:0) UBIN STCLASS;
     3670+    4540
     3671+    4541          DCL 1 QI$BITS ALIGNED STCLASS,
     3672+    4542                2 BIT_A(0:0) BIT(1) UNAL;
     3673+    4543          DCL QI$CHAR_A(0:0) CHAR(1) CALIGNED STCLASS;
     3674+    4544          DCL QI$UBYTE_A(0:0) UBIN BYTE CALIGNED STCLASS;
     3675+    4545          DCL QI$SBYTE_A(0:0) SBIN BYTE CALIGNED STCLASS;
     3676+    4546          DCL QI$UWORD_A(0:0) UBIN STCLASS;
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:419  
     3677+    4547          DCL QI$SWORD_A(0:0) SBIN STCLASS;
     3678+    4548          DCL QI$DWORD_A(0:0) BIT(32) ALIGNED STCLASS;
     3679+    4549          DCL QI$PTR_A$(0:0) PTR STCLASS;
     3680+    4550
     3681+    4551          DCL 1 QI$MESSAGE_TYPE CALIGNED STCLASS,
     3682+    4552                2 TEXT CHAR(8) UNAL;
     3683+    4553          DCL QI$MESSAGE_TYPE_A(0:7) REDEF QI$MESSAGE_TYPE UBIN BYTE CALIGNED;
     3684+    4554
     3685+    4555          DCL 1 QI$ERROR_STATUS CALIGNED STCLASS,
     3686+    4556                2 TEXT CHAR(8) UNAL;
     3687+    4557          DCL QI$ERROR_STATUS_A(0:7) REDEF QI$ERROR_STATUS UBIN BYTE CALIGNED;
     3688+    4558
     3689+    4559          DCL 1 QI$ERROR_MESSAGE_LINE CALIGNED STCLASS,
     3690+    4560                2 TEXT CHAR(%QI#ERROR_MESSAGE_LINE_SIZE) UNAL;
     3691+    4561        DCL QI$ERROR_MESSAGE_LINE_A(0:%(QI#ERROR_MESSAGE_LINE_SIZE-1)) REDEF QI$ERROR_MESSA
              4561        GE_LINE UBIN BYTE CALIGNED;
     3692+    4562
     3693+    4563          DCL 1 QI$IDENTIFIER CALIGNED STCLASS,
     3694+    4564                2 TEXT CHAR(30) UNAL;
     3695+    4565          DCL QI$IDENTIFIER_A(0:29) REDEF QI$IDENTIFIER UBIN BYTE CALIGNED;
     3696+    4566
     3697+    4567          DCL 1 QI$VARIABLE_IDENTIFIER CALIGNED STCLASS,
     3698+    4568                2 LENGTH UBIN BYTE UNAL,
     3699+    4569                2 TEXT CHAR(QI$VARIABLE_IDENTIFIER.LENGTH) UNAL;
     3700+    4570
     3701+    4571        /*
     3702+    4572            note that the following require the QI_CONTEXT macro to be
     3703+    4573            invoked along with the QI$GENERAL one.
     3704+    4574        */
     3705+    4575          DCL 1 QI$VARIABLE_STRING_SOURCE CALIGNED STCLASS,
     3706+    4576                2 TEXT CHAR(QI_1.OP.LEN.S) UNAL;
     3707+    4577          DCL 1 QI$VARIABLE_STRING_TARGET CALIGNED STCLASS,
     3708+    4578                2 TEXT CHAR(QI_1.OP.LEN.T) UNAL;
     3709+    4579          DCL 1 QI$VARIABLE_STRING_AUX CALIGNED STCLASS,
     3710+    4580                2 TEXT CHAR(QI_1.OP.LEN.AUX) UNAL;
     3711+    4581
     3712+    4582            %END_MACRO;
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:420  
     3713+    4583
     3714+    4584          %MEND;
     3715+    4585
     3716+    4586        %EJECT;
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:421  
     3717+    4587
     3718+    4588        /*
     3719+    4589                           %%       %%
     3720+    4590                           %%       %%
     3721+    4591              %%% %%   %%% %%   %%% %%  %% %%%%   %%%%%    %%%%%%   %%%%%%
     3722+    4592             %%  %%%  %%  %%%  %%  %%%  %%%%     %%   %%  %%       %%
     3723+    4593             %%  %%%  %%  %%%  %%  %%%  %%%      %%%%%%%   %%%%%    %%%%%
     3724+    4594             %%  %%%  %%  %%%  %%  %%%  %%       %%            %%       %%
     3725+    4595              %%% %%   %%% %%   %%% %%  %%        %%%%%   %%%%%%   %%%%%%
     3726+    4596
     3727+    4597                %%%      %%                  %%
     3728+    4598               %%                            %%
     3729+    4599               %%       %%%    %% %%%    %%% %%   %%%%%   %% %%%%   %%%%%%
     3730+    4600             %%%%%%      %%    %%%  %%  %%  %%%  %%   %%  %%%%     %%
     3731+    4601               %%        %%    %%   %%  %%  %%%  %%%%%%%  %%%       %%%%%
     3732+    4602               %%        %%    %%   %%  %%  %%%  %%       %%            %%
     3733+    4603               %%      %%%%%%  %%   %%   %%% %%   %%%%%   %%       %%%%%%
     3734+    4604                                                                            */
     3735+    4605
     3736+    4606          %MACRO DATA_ADDRESS ( THING@D = WHATS_THIS_NO_THING@D,
     3737+    4607                                CHECK_FOR_INDIRECTION ( YES = '1'B,
     3738+    4608                                                        NO = '0'B ) = NO,
     3739+    4609                                RESULT$ = WHATS_THIS_NO_RESULT$ );
     3740+    4610
     3741+    4611            %BEGIN_MACRO ( STCLASS = STCLASS );
     3742+    4612
     3743+    4613              /* This is the same DAD-tracking-down code
     3744+    4614                 as is used in QCS$SETUP. */
     3745+    4615              DO;
     3746+    4616                RESULT$ = PINCRW ( QI_1.BASE.DATA$, THING@D );
     3747+    4617            %IF CHECK_FOR_INDIRECTION;
     3748+    4618                DO WHILE ( RESULT$ -> QI$DAD.WORD0_FLAGS.INDIRECT );
     3749+    4619                  RESULT$ = PINCRW ( QI_1.BASE_A$ (
     3750+    4620                            BITBIN ( RESULT$ -> QI$DAD.WORD0_FLAGS.IS_CONSTANT )
     3751+    4621                                                  ),
     3752+    4622                                     RESULT$ -> QI$DAD.PSEUDO_CIP.DATA@ );
     3753+    4623                END;
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:422  
     3754+    4624            %ENDIF;
     3755+    4625              END;
     3756+    4626
     3757+    4627            %END_MACRO;
     3758+    4628
     3759+    4629          %MEND;
     3760+    4630
     3761+    4631          %MACRO PROC_ADDRESS ( THING@P = WHATS_THIS_NO_THING@P,
     3762+    4632                                CHECK_FOR_INDIRECTION ( YES = '1'B,
     3763+    4633                                                        NO = '0'B ) = NO,
     3764+    4634                                RESULT$ = WHATS_THIS_NO_RESULT$ );
     3765+    4635
     3766+    4636            %BEGIN_MACRO ( STCLASS = STCLASS );
     3767+    4637
     3768+    4638              /* This is the same DAD-tracking-down code
     3769+    4639                 as is used in QCS$SETUP. */
     3770+    4640              DO;
     3771+    4641                RESULT$ = PINCRW ( QI_1.BASE.PROC$, THING@P );
     3772+    4642            %IF CHECK_FOR_INDIRECTION;
     3773+    4643                DO WHILE ( RESULT$ -> QI$DAD.WORD0_FLAGS.INDIRECT );
     3774+    4644                  RESULT$ = PINCRW ( QI_1.BASE_A$ (
     3775+    4645                            BITBIN ( RESULT$ -> QI$DAD.WORD0_FLAGS.IS_CONSTANT )
     3776+    4646                                                  ),
     3777+    4647                                     RESULT$ -> QI$DAD.PSEUDO_CIP.DATA@ );
     3778+    4648                END;
     3779+    4649            %ENDIF;
     3780+    4650              END;
     3781+    4651
     3782+    4652            %END_MACRO;
     3783+    4653
     3784+    4654          %MEND;
     3785+    4655
     3786+    4656          %MACRO LINKAGE_ARGUMENT_ADDRESS ( THING$ = WHATS_THIS_NO_THING$,
     3787+    4657                                            RESULT$ = WHATS_THIS_NO_RESULT$ );
     3788+    4658
     3789+    4659            %BEGIN_MACRO ( STCLASS = STCLASS );
     3790+    4660
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:423  
     3791+    4661              /* This is the same DATA$-tracking-down code
     3792+    4662                 as is used in QCS$SETUP. */
     3793+    4663              DO;
     3794+    4664                RESULT$ =
     3795+    4665                  PINCRW (
     3796+    4666                  QI_1.ARGUMENTS_AND_OR_FREE_AUTO_A$$ ->
     3797+    4667                  QI$PTR_A$ ( THING$ ->
     3798+    4668                  QI$LINKAGE_ARGUMENT_DESCRIPTOR.ARGUMENT_NUMBER ),
     3799+    4669                  THING$ ->
     3800+    4670                  QI$LINKAGE_ARGUMENT_DESCRIPTOR.WORD_OFFSET_FROM_01_ITEM
     3801+    4671                  );
     3802+    4672              END;
     3803+    4673
     3804+    4674            %END_MACRO;
     3805+    4675
     3806+    4676          %MEND;
     3807+    4677
     3808+    4678          %MACRO PRESENCE_DISPLACEMENT ( PRESENCE_THING$ = WHATS_THIS_NO_PRESENCE_THING$,
     3809+    4679                                         INDEX = WHATS_THIS_NO_INDEX,
     3810+    4680                                         START = 0,
     3811+    4681                                         STOP = 0,
     3812+    4682                                         RESULT = WHATS_THIS_NO_RESULT );
     3813+    4683
     3814+    4684            %BEGIN_MACRO ( STCLASS = STCLASS );
     3815+    4685
     3816+    4686              DO;
     3817+    4687                RESULT = -1;
     3818+    4688                DO INDEX = START TO STOP;
     3819+    4689                  IF PRESENCE_THING$ -> QI$BITS.BIT_A ( INDEX )
     3820+    4690                  THEN
     3821+    4691                    RESULT = RESULT + 1;
     3822+    4692                END;
     3823+    4693              END;
     3824+    4694
     3825+    4695            %END_MACRO;
     3826+    4696
     3827+    4697          %MEND;
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:424  
     3828+    4698
     3829+    4699        %EJECT;
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:425  
     3830+    4700        /*
     3831+    4701                               %%%%%%%  %%
     3832+    4702                                  %%    %%
     3833+    4703                                  %%    %% %%%    %%%%%
     3834+    4704                                  %%    %%%  %%  %%   %%
     3835+    4705                                  %%    %%   %%  %%%%%%%
     3836+    4706                                  %%    %%   %%  %%
     3837+    4707                                  %%    %%   %%   %%%%%
     3838+    4708
     3839+    4709                                                   %%%
     3840+    4710                                                    %%
     3841+    4711                      %% %%%    %%%%%    %%%%%      %%
     3842+    4712                      %%%  %%  %%   %%  %%   %%     %%
     3843+    4713                      %%%  %%  %%   %%  %%   %%     %%
     3844+    4714                      %%%  %%  %%   %%  %%   %%     %%
     3845+    4715                      %% %%%    %%%%%    %%%%%    %%%%%%
     3846+    4716                      %%
     3847+    4717                      %%
     3848+    4718                                                                            */
     3849+    4719
     3850+    4720        /*D* NAME:         GENERAL_PURPOSE_CIPS
     3851+    4721             PURPOSE:      To provide a common pool of CONSTANT CIP
     3852+    4722                           descriptors.
     3853+    4723             DESCRIPTION:  Whenever a CIP operation block (QI@CIP_OPERATION)
     3854+    4724                           or a lone CIP descriptor (QI_CIP_DESCRIPTOR) is
     3855+    4725                           generated in CONSTANT storage, it appears here as
     3856+    4726                           a macro which is invoked with STCLASS = CONSTANT
     3857+    4727                           and NAME = QI_name in QI_DATA_D, with
     3858+    4728                           STCLASS = SYMREF and NAME = QI_name in the
     3859+    4729                           QI_GENERAL_CIPS invocation-macro, and possibly with
     3860+    4730                           STCLASS = AUTO and NAME = QI@name in the refer-
     3861+    4731                           encing module(s).  This will hopefully avoid
     3862+    4732                           duplication of these structures in diverse modules,
     3863+    4733                           i.e., since it's such a pain to generate them, the
     3864+    4734                           temptation will be to look here to see if there's
     3865+    4735                           already one of the desired initialization.
     3866+    4736                           Maybe it's not such a great idea; who asked you
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:426  
     3867+    4737                           anyway?
     3868+    4738        */
     3869+    4739        /*
     3870+    4740                       %%%%%   %% %%%    %%%%%   %% %%%%
     3871+    4741                      %%   %%  %%%  %%  %%   %%  %%%%
     3872+    4742                      %%   %%  %%%  %%  %%%%%%%  %%%
     3873+    4743                      %%   %%  %%%  %%  %%       %%        %%%
     3874+    4744                       %%%%%   %% %%%    %%%%%   %%        %%%
     3875+    4745                               %%
     3876+    4746                               %%
     3877+    4747               %%%
     3878+    4748                %%
     3879+    4749                %%     %%% %%   %%% %%   %%%%%    %%%%%   %% %%%
     3880+    4750                %%    %%  %%%  %%  %%%  %%   %%  %%   %%  %%%  %%
     3881+    4751                %%    %%  %%%  %%  %%%  %%   %%  %%   %%  %%   %%
     3882+    4752                %%    %%  %%%  %%  %%%  %%   %%  %%   %%  %%   %%
     3883+    4753              %%%%%%   %%% %%   %%% %%   %%%%%    %%%%%   %%   %%
     3884+    4754                                    %%
     3885+    4755                                %%%%%
     3886+    4756                                                                            */
     3887+    4757          %MACRO QI@ALR ( STCLASS = "AUTO",
     3888+    4758                          NAME = QI@ALR );
     3889+    4759
     3890+    4760            %BEGIN_MACRO ( STCLASS = STCLASS );
     3891+    4761
     3892+    4762            %QI@CIP_OPERATION ( NAME = NAME,
     3893+    4763                                STCLASS = STCLASS,
     3894+    4764                                TYPE = ALR,
     3895+    4765                                FIRST_LEN = 1 );
     3896+    4766
     3897+    4767            %END_MACRO;
     3898+    4768
     3899+    4769          %MEND;
     3900+    4770
     3901+    4771          %MACRO QI@TYPE_DISPLAY_SOURCE ( STCLASS = "AUTO",
     3902+    4772                                          NAME = QI@TYPE_DISPLAY_SOURCE );
     3903+    4773
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:427  
     3904+    4774            %BEGIN_MACRO ( STCLASS = STCLASS );
     3905+    4775
     3906+    4776            %QI@CIP_OPERATION ( NAME = NAME,
     3907+    4777                                STCLASS = STCLASS,
     3908+    4778                                TYPE = DMC,
     3909+    4779                                FIRST_CIP_TYPE = DISPLAY,
     3910+    4780                                FIRST_CIP_LEN = 15 /* %QI#MAX_DISPLAY */ );
     3911+    4781
     3912+    4782            %END_MACRO;
     3913+    4783
     3914+    4784          %MEND;
     3915+    4785
     3916+    4786          %MACRO QI@TYPE_DISPLAY_TARGET ( STCLASS = "AUTO",
     3917+    4787                                          NAME = QI@TYPE_DISPLAY_TARGET );
     3918+    4788
     3919+    4789            %BEGIN_MACRO ( STCLASS = STCLASS );
     3920+    4790
     3921+    4791            %QI@CIP_OPERATION ( NAME = NAME,
     3922+    4792                                STCLASS = STCLASS,
     3923+    4793                                TYPE = DMC,
     3924+    4794                                SECOND_CIP_TYPE = DISPLAY,
     3925+    4795                                SECOND_CIP_LEN = 15 /* %QI#MAX_DISPLAY */,
     3926+    4796                                SECOND_CIP_FILL = NO );
     3927+    4797
     3928+    4798            %END_MACRO;
     3929+    4799
     3930+    4800          %MEND;
     3931+    4801
     3932+    4802          %MACRO QI@TYPE_BINARY_TARGET ( STCLASS = "AUTO",
     3933+    4803                                         NAME = QI@TYPE_BINARY_TARGET );
     3934+    4804
     3935+    4805            %BEGIN_MACRO ( STCLASS = STCLASS );
     3936+    4806
     3937+    4807            %QI@CIP_OPERATION ( NAME = NAME,
     3938+    4808                                STCLASS = STCLASS,
     3939+    4809                                TYPE = CDB,
     3940+    4810                                SECOND_CIP_TYPE = BINARY,
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:428  
     3941+    4811                                SECOND_CIP_LEN = 2 /* %QI#MIN_BINARY_LENGTH */,
     3942+    4812                                SECOND_CIP_FILL = NO );
     3943+    4813
     3944+    4814            %END_MACRO;
     3945+    4815
     3946+    4816          %MEND;
     3947+    4817
     3948+    4818          %MACRO QI@SRCH_VRFY ( STCLASS = "AUTO",
     3949+    4819                                NAME = QI@SRCH_VRFY );
     3950+    4820
     3951+    4821            %BEGIN_MACRO ( STCLASS = STCLASS );
     3952+    4822
     3953+    4823            %QI@CIP_OPERATION ( NAME = NAME,
     3954+    4824                                STCLASS = STCLASS,
     3955+    4825                                TYPE = SRCH,
     3956+    4826                                FIRST_CIP_FILL = NO,
     3957+    4827                                FIRST_CIP_AS = INDEX,
     3958+    4828                                SRCH_VRFY_ARGS_LEN = 1,
     3959+    4829                                SRCH_VRFY_ARGS_LIST_LEN = 1,
     3960+    4830                                SECOND_CIP_LEN = 4,
     3961+    4831                                SECOND_CIP_FILL = NO,
     3962+    4832                                THIRD_CIP_FILL = NO,
     3963+    4833                                THIRD_CIP_AS = INDEX,
     3964+    4834                                SRCH_VRFY_ELEMS_LEN = 1,
     3965+    4835                                SRCH_VRFY_ELEMS_LIST_LEN = 1 );
     3966+    4836
     3967+    4837            %END_MACRO;
     3968+    4838
     3969+    4839          %MEND;
     3970+    4840
     3971+    4841          %MACRO QI@MAT ( STCLASS = "AUTO",
     3972+    4842                          NAME = QI@MAT );
     3973+    4843
     3974+    4844            %BEGIN_MACRO ( STCLASS = STCLASS );
     3975+    4845
     3976+    4846            %QI@CIP_OPERATION ( NAME = NAME,
     3977+    4847                                STCLASS = STCLASS,
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:429  
     3978+    4848                                TYPE = MAT,
     3979+    4849                                FIRST_CIP_FILL = NO,
     3980+    4850                                FIRST_CIP_AS = INDEX,
     3981+    4851                                SECOND_CIP_AS = INDEX,
     3982+    4852                                THIRD_CIP_FILL = NO,
     3983+    4853                                THIRD_LEN = 256,
     3984+    4854                                FILL_CHAR = 01 /* QI_MAT_MATCH */ );
     3985+    4855
     3986+    4856            %END_MACRO;
     3987+    4857
     3988+    4858          %MEND;
     3989+    4859
     3990+    4860        %EJECT;
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:430  
     3991+    4861
     3992+    4862        /*
     3993+    4863                           %%
     3994+    4864                           %%
     3995+    4865                       %%% %%   %%%%%    %%%%%%   %%%%%%
     3996+    4866                      %%  %%%  %%   %%  %%       %%
     3997+    4867                      %%  %%%  %%%%%%%   %%%%%   %%
     3998+    4868                      %%  %%%  %%            %%  %%        %%%
     3999+    4869                       %%% %%   %%%%%   %%%%%%    %%%%%%   %%%
     4000+    4870
     4001+    4871                       %%%%%%  %  %  %   %%% %%  %%% %%   %% %%%
     4002+    4872                      %%       % %%% %  %%  %%%  %% % %%  %%%  %%
     4003+    4873                       %%%%%   % %%% %  %%  %%%  %% % %%  %%%  %%
     4004+    4874                           %%  %%% %%%  %%  %%%  %% % %%  %%%  %%
     4005+    4875                      %%%%%%   %%   %%   %%% %%  %% % %%  %% %%%
     4006+    4876                                                          %%
     4007+    4877                                                          %%
     4008+    4878                                                                            */
     4009+    4879
     4010+    4880          %MACRO QI@4_CHAR_ALPHANUMERIC ( STCLASS = "AUTO",
     4011+    4881                                          NAME = QI@4_CHAR_ALPHANUMERIC );
     4012+    4882
     4013+    4883            %BEGIN_MACRO ( STCLASS = STCLASS );
     4014+    4884
     4015+    4885            %QI_CIP_DESCRIPTOR ( NAME = NAME,
     4016+    4886                                 STCLASS = STCLASS,
     4017+    4887                                 TYPE = ALPHANUMERIC,
     4018+    4888                                 LEN = 4,
     4019+    4889                                 DISP = SOURCE );
     4020+    4890
     4021+    4891            %END_MACRO;
     4022+    4892
     4023+    4893          %MEND;
     4024+    4894
     4025+    4895          %MACRO QI@31_DIGIT_SLS_DISPLAY ( STCLASS = "AUTO",
     4026+    4896                                           NAME = QI@31_DIGIT_SLS_DISPLAY );
     4027+    4897
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:431  
     4028+    4898            %BEGIN_MACRO;
     4029+    4899
     4030+    4900            %QI_CIP_DESCRIPTOR ( NAME = NAME,
     4031+    4901                                 STCLASS = STCLASS,
     4032+    4902                                 TYPE = DISPLAY,
     4033+    4903                                 SIGN = LEADING,
     4034+    4904                                 LEN = 31,
     4035+    4905                                 DISP = SOURCE );
     4036+    4906
     4037+    4907            %END_MACRO;
     4038+    4908
     4039+    4909          %MEND;
     4040+    4910
     4041+    4911          %MACRO QI@16_BIT_BINARY ( STCLASS = "AUTO",
     4042+    4912                                    NAME = QI@32_BIT_BINARY );
     4043+    4913
     4044+    4914            %BEGIN_MACRO ( STCLASS = STCLASS );
     4045+    4915
     4046+    4916            %QI_CIP_DESCRIPTOR ( NAME = NAME,
     4047+    4917                                 STCLASS = STCLASS,
     4048+    4918                                 TYPE = BINARY,
     4049+    4919                                 LEN = 2,
     4050+    4920                                 DISP = SOURCE );
     4051+    4921
     4052+    4922            %END_MACRO;
     4053+    4923
     4054+    4924          %MEND;
     4055+    4925
     4056+    4926          %MACRO QI@32_BIT_BINARY ( STCLASS = "AUTO",
     4057+    4927                                    NAME = QI@32_BIT_BINARY );
     4058+    4928
     4059+    4929            %BEGIN_MACRO ( STCLASS = STCLASS );
     4060+    4930
     4061+    4931            %QI_CIP_DESCRIPTOR ( NAME = NAME,
     4062+    4932                                 STCLASS = STCLASS,
     4063+    4933                                 TYPE = BINARY,
     4064+    4934                                 LEN = 4,
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:432  
     4065+    4935                                 DISP = SOURCE );
     4066+    4936
     4067+    4937            %END_MACRO;
     4068+    4938
     4069+    4939          %MEND;
     4070+    4940
     4071+    4941          %MACRO QI@31_DIGIT_ST_PACKED ( STCLASS = "AUTO",
     4072+    4942                                         NAME = QI@31_DIGIT_ST_PACKED );
     4073+    4943
     4074+    4944            %BEGIN_MACRO ( STCLASS = STCLASS );
     4075+    4945
     4076+    4946            %QI_CIP_DESCRIPTOR ( NAME = NAME,
     4077+    4947                                 STCLASS = STCLASS,
     4078+    4948                                 TYPE = PACKED,
     4079+    4949                                 LEN = 31,
     4080+    4950                                 SIGN = TRAILING,
     4081+    4951                                 DISP = SOURCE );
     4082+    4952
     4083+    4953            %END_MACRO;
     4084+    4954
     4085+    4955          %MEND;
     4086+    4956
     4087+    4957          %MACRO QI@PICTURE_STRING ( STCLASS = "AUTO",
     4088+    4958                                     NAME = QI@PICTURE_STRING );
     4089+    4959
     4090+    4960            %BEGIN_MACRO;
     4091+    4961
     4092+    4962            %QI_CIP_DESCRIPTOR ( NAME = NAME,
     4093+    4963                                 STCLASS = STCLASS,
     4094+    4964                                 TYPE = ALPHANUMERIC,
     4095+    4965                                 OFFSET = 1,  /* Lookit dat. */
     4096+    4966                                 LEN = 0,
     4097+    4967                                 DISP = AUX );
     4098+    4968
     4099+    4969            %END_MACRO;
     4100+    4970
     4101+    4971          %MEND;
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:433  
     4102+    4972
     4103+    4973          %MACRO QI@ACCUMULATOR_DAD ( STCLASS = "AUTO",
     4104+    4974                                      NAME = QI@ACCUMULATOR_DAD );
     4105+    4975
     4106+    4976            %BEGIN_MACRO;
     4107+    4977
     4108+    4978          DCL 1 NAME STCLASS ALIGNED,
     4109+    4979                          /* CONSTANT "DAD" describing QI_1.ACCUM. */
     4110+    4980                2 * UBIN(12) UNAL %INIT(0)%CHARTEXT('/**/'),
     4111+    4981                2 TYPE UBIN(4) UNAL %INIT(%QI#ACCUMULATOR_TYPE)%CHARTEXT('/**/'),
     4112+    4982                %QI_CIP_DESCRIPTOR ( NAME = CIP,
     4113+    4983                                     STCLASS = STCLASS,
     4114+    4984                                     LVL = 2,
     4115+    4985                                     TYPE = PACKED,
     4116+    4986                                     SIGN = TRAILING,
     4117+    4987                                     LEN = 31,
     4118+    4988                                     DISP = SOURCE );
     4119+    4989
     4120+    4990            %END_MACRO;
     4121+    4991
     4122+    4992          %MEND;
     4123+    4993
     4124+    4994        %EJECT;
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:434  
     4125+    4995
     4126+    4996        /*
     4127+    4997                  %%                                         %%
     4128+    4998                  %%
     4129+    4999              %%% %%  %%   %%  %% %%%    %%% %%  %%% %%     %%%     %%%%%%
     4130+    5000             %%  %%%  %%   %%  %%%  %%  %%  %%%  %% % %%     %%    %%
     4131+    5001             %%  %%%  %%   %%  %%   %%  %%  %%%  %% % %%     %%    %%
     4132+    5002             %%  %%%  %%  %%%  %%   %%  %%  %%%  %% % %%     %%    %%
     4133+    5003              %%% %%   %%% %%  %%   %%   %%% %%  %% % %%   %%%%%%   %%%%%%
     4134+    5004                           %%
     4135+    5005                      %%%%%%
     4136+    5006
     4137+    5007                                                    %%%      %%%
     4138+    5008                                 %%                %%       %%
     4139+    5009                       %%%%%%  %%%%%%   %%   %%    %%       %%
     4140+    5010                      %%         %%     %%   %%  %%%%%%   %%%%%%
     4141+    5011                       %%%%%     %%     %%   %%    %%       %%
     4142+    5012                           %%    %%     %%  %%%    %%       %%
     4143+    5013                      %%%%%%      %%%    %%% %%    %%       %%
     4144+    5014                                                                       */
     4145+    5015          %MACRO QI$GZ_HEADER ( STCLASS = "BASED",
     4146+    5016                                NAME = QI$GZ_HEADER );
     4147+    5017
     4148+    5018            %BEGIN_MACRO ( STCLASS = STCLASS );
     4149+    5019
     4150+    5020          DCL 1 NAME STCLASS ALIGNED,
     4151+    5021                2 IS_ACTIVE BIT(1) ALIGNED,
     4152+    5022                                           /* "Does this QI$GZ_HEADER represent an
     4153+    5023                                              ACTIVE something-or-other?" indicator */
     4154+    5024                2 BACK_LINK$ PTR,
     4155+    5025                                           /* Back_link to last QI$GZ_HEADER */
     4156+    5026                2 DCB# UBIN,
     4157+    5027                                           /* DCB# for this header */
     4158+    5028                2 FIELD_COUNT UBIN,
     4159+    5029                                           /* number of fields following this header */
     4160+    5030                2 FRAME_DAD$ PTR,
     4161+    5031                                           /* ptr to frame DAD for this header */
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:435  
     4162+    5032                2 OPERATION,
     4163+    5033                  3 START_INDEX UBIN,
     4164+    5034                                           /* starting index into the field array
     4165+    5035                                              following this header */
     4166+    5036                  3 STOP_INDEX UBIN,
     4167+    5037                                           /* stopping index into the field array
     4168+    5038                                              following this header */
     4169+    5039                  3 DONE_INDEX UBIN,
     4170+    5040                                           /* index into the field array
     4171+    5041                                              following this header of
     4172+    5042                                              the last field actually operated on */
     4173+    5043                2 STATUS UBIN;
     4174+    5044                                           /* returned status */
     4175+    5045
     4176+    5046            %END_MACRO;
     4177+    5047
     4178+    5048          %MEND;
     4179+    5049
     4180+    5050        %EJECT;
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:436  
     4181+    5051
     4182+    5052          %MACRO QI$GZ_FIELD ( STCLASS = "BASED",
     4183+    5053                               NAME = QI$GZ_FIELD );
     4184+    5054
     4185+    5055            %BEGIN_MACRO ( STCLASS = STCLASS );
     4186+    5056
     4187+    5057          DCL 1 NAME STCLASS ALIGNED,
     4188+    5058                2 INDICATORS$ PTR,
     4189+    5059                2 DESCRIPTION,
     4190+    5060                  3 IO_FLAGS,
     4191+    5061                    4 IS_OUTPUT BIT(1) UNAL,
     4192+    5062                                           /* on if this FIELD is OUTPUT or I-O */
     4193+    5063                    4 IS_INPUT BIT(1) UNAL,
     4194+    5064                                           /* on if this FIELD is INPUT or I-O */
     4195+    5065                  3 IO_VALUE REDEF IO_FLAGS UBIN(2) UNAL,
     4196+    5066                                           /* all 1's if this field is I-O */
     4197+    5067                  3 IS_ENTRY_REQUIRED BIT(1) UNAL,
     4198+    5068                                           /* on if ENTRY-REQUIRED */
     4199+    5069                  3 IS_OUTPUT_CONSTANT BIT(1) UNAL,
     4200+    5070                                           /* on if OUTPUT CONSTANT */
     4201+    5071                  3 IS_AOIM BIT(1) UNAL,
     4202+    5072                                           /* on if A-O-I-M */
     4203+    5073                  3 * UBIN(3) UNAL,
     4204+    5074                  3 LENGTH UBIN BYTE CALIGNED,
     4205+    5075                                           /* field length */
     4206+    5076                  3 POSITION,
     4207+    5077                    4 LINE UBIN BYTE CALIGNED,
     4208+    5078                                           /* LINE whatever */
     4209+    5079                    4 COLUMN UBIN BYTE CALIGNED,
     4210+    5080                                           /* COLUMN whatever */
     4211+    5081                  3 FIELD_DAD$ PTR,
     4212+    5082                                           /* ptr back to the original field DAD */
     4213+    5083                2 STATUS,
     4214+    5084                  3 OFFSET UBIN(1) UNAL,
     4215+    5085                                           /* byte offset from DATA$ of the real data */
     4216+    5086                  3 IS_AOIM_MODIFIED BIT(1) UNAL,
     4217+    5087                                           /* on if this A-O-I-M field was modified,
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:437  
     4218+    5088                                              off if this A-O-I-M field hasn't changed */
     4219+    5089                  3 IS_VALUE_DEFAULT BIT(1) UNAL,
     4220+    5090                                           /* on if data came from a DEFAULT clause,
     4221+    5091                                              off if data came from a terminal */
     4222+    5092                  3 WAS_IO_EVER_DONE BIT(1) UNAL,
     4223+    5093                                           /* reset by USE prep code */
     4224+    5094                  3 LENGTH UBIN BYTE CALIGNED,
     4225+    5095                                           /* length of data returned */
     4226+    5096                  3 VISUAL_ATTRIBUTE UBIN BYTE CALIGNED,
     4227+    5097                                           /* ABStractGRPhicRNDition goop */
     4228+    5098                  3 FLDID UBIN,
     4229+    5099                                           /* VDH FLDID for this elementary
     4230+    5100                                              field */
     4231+    5101                  3 DATA$ PTR,
     4232+    5102                                           /* ptr to the real data */
     4233+    5103                2 OPERATION,
     4234+    5104                  3 IS_OPERATE BIT(1) UNAL,
     4235+    5105                                           /* do something */
     4236+    5106                  3 IS_VISUAL_ATTRIBUTE_CHANGE BIT(1) UNAL,
     4237+    5107                                           /* change the VISUAL-ATTRIBUTE
     4238+    5108                                              while yer at it */
     4239+    5109                  3 IS_DONE BIT(1) UNAL,
     4240+    5110                                           /* did something */
     4241+    5111                2 FPL_ERROR BIT(1) UNAL,
     4242+    5112                                           /* internally detected oops */
     4243+    5113                2 USE_STUFF UBIN(4) UNAL;
     4244+    5114                                           /* cleared field for
     4245+    5115                                              USE prep code */
     4246+    5116
     4247+    5117            %END_MACRO;
     4248+    5118
     4249+    5119          %MEND;
     4250+    5120
     4251+    5121        %EJECT;
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:438  
     4252+    5122        /*
     4253+    5123                       %%%%%%%%% %%%%%%%   %%%%%%%%%
     4254+    5124                       %%%%%%%%% %%%%%%%%  %%%%%%%%%
     4255+    5125                       %%        %%     %%    %%%
     4256+    5126                       %%        %%     %%    %%%
     4257+    5127                       %%%%%     %%%%%%%%     %%%     %%%%%%%%
     4258+    5128                       %%        %%%%%%%      %%%    %%
     4259+    5129                       %%        %%           %%%     %%%%%%%
     4260+    5130                       %%        %%           %%%           %%
     4261+    5131                       %%        %%           %%%    %%%%%%%%
     4262+    5132                                                                            */
     4263+    5133
     4264+    5134        /*D* NAME:         QI_FPTS
     4265+    5135             PURPOSE:      To house STCLASS = CONSTANT copies of monitor
     4266+    5136                           service FPTs.
     4267+    5137             DESCRIPTION:  FPTs with STCLASS = CONSTANT get generated here
     4268+    5138                           with as many options as possible specified at
     4269+    5139                           compile time.  The names of these FPTs are
     4270+    5140                           generally QI_FPT_whatever.  Routines referencing
     4271+    5141                           these FPTs fill in STCLASS = AUTO FPTs with them.
     4272+    5142                           The QI_FPTS macro isn't included in QI$ALL
     4273+    5143                           so that not all modules need %INCLUDE LCP_6;.
     4274+    5144        */
     4275+    5145
     4276+    5146          %MACRO QI_FPT_CLOSE ( STCLASS = "SYMREF",
     4277+    5147                                NAME = QI_FPT_CLOSE );
     4278+    5148
     4279+    5149            %BEGIN_MACRO ( STCLASS = STCLASS );
     4280+    5150
     4281+    5151          %FPT_CLOSE ( FPTN = NAME,
     4282+    5152                       STCLASS = STCLASS,
     4283+    5153                       DCB = NIL,
     4284+    5154                       DISP = KEEP );
     4285+    5155
     4286+    5156            %END_MACRO;
     4287+    5157
     4288+    5158          %MEND;
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:439  
     4289+    5159
     4290+    5160          %MACRO QI_FPT_DBCONTROL ( STCLASS = "SYMREF",
     4291+    5161                                    NAME = QI_FPT_DBCONTROL );
     4292+    5162
     4293+    5163            %BEGIN_MACRO ( STCLASS = STCLASS );
     4294+    5164
     4295+    5165          %FPT_DBCONTROL ( FPTN = NAME,
     4296+    5166                           STCLASS = STCLASS );
     4297+    5167
     4298+    5168            %END_MACRO;
     4299+    5169
     4300+    5170          %MEND;
     4301+    5171
     4302+    5172          %MACRO QI_FPT_DCLFLD ( STCLASS = "SYMREF",
     4303+    5173                                 NAME = QI_FPT_DCLFLD );
     4304+    5174
     4305+    5175            %BEGIN_MACRO ( STCLASS = STCLASS );
     4306+    5176
     4307+    5177          %FPT_DCLFLD ( FPTN = NAME,
     4308+    5178                        STCLASS = STCLASS,
     4309+    5179                        DCB = NIL );
     4310+    5180
     4311+    5181            %END_MACRO;
     4312+    5182
     4313+    5183          %MEND;
     4314+    5184
     4315+    5185          %MACRO QI_VLP_FLDATR ( STCLASS = "SYMREF",
     4316+    5186                                 NAME = QI_VLP_FLDATR );
     4317+    5187
     4318+    5188            %BEGIN_MACRO ( STCLASS = STCLASS );
     4319+    5189
     4320+    5190          %VLP_FLDATR ( FPTN = NAME,
     4321+    5191                        STCLASS = STCLASS,
     4322+    5192                        ABSGRPRND = WARNING );
     4323+    5193
     4324+    5194            %END_MACRO;
     4325+    5195
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:440  
     4326+    5196          %MEND;
     4327+    5197
     4328+    5198          %MACRO QI_FPT_DEVICE ( STCLASS = "SYMREF",
     4329+    5199                                 NAME = QI_FPT_DEVICE );
     4330+    5200
     4331+    5201            %BEGIN_MACRO ( STCLASS = STCLASS );
     4332+    5202
     4333+    5203          %FPT_DEVICE ( FPTN = NAME,
     4334+    5204                        STCLASS = STCLASS,
     4335+    5205                        DCB = NIL );
     4336+    5206
     4337+    5207            %END_MACRO;
     4338+    5208
     4339+    5209          %MEND;
     4340+    5210
     4341+    5211          %MACRO QI_FPT_ERASE ( STCLASS = "SYMREF",
     4342+    5212                                NAME = QI_FPT_ERASE );
     4343+    5213
     4344+    5214            %BEGIN_MACRO ( STCLASS = STCLASS );
     4345+    5215
     4346+    5216          %FPT_ERASE ( FPTN = NAME,
     4347+    5217                       STCLASS = STCLASS,
     4348+    5218                       DCB = NIL,
     4349+    5219                       CNS = YES,
     4350+    5220                       PRT = YES );
     4351+    5221
     4352+    5222            %END_MACRO;
     4353+    5223
     4354+    5224          %MEND;
     4355+    5225
     4356+    5226          %MACRO QI_FPT_ERRMSG ( STCLASS = "SYMREF",
     4357+    5227                                 NAME = QI_FPT_ERRMSG );
     4358+    5228
     4359+    5229            %BEGIN_MACRO ( STCLASS = STCLASS );
     4360+    5230
     4361+    5231          %FPT_ERRMSG ( FPTN = NAME,
     4362+    5232                        STCLASS = STCLASS,
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:441  
     4363+    5233                        INCLCODE = NO );
     4364+    5234
     4365+    5235            %END_MACRO;
     4366+    5236
     4367+    5237          %MEND;
     4368+    5238
     4369+    5239          %MACRO QI_FPT_EXIT ( STCLASS = "SYMREF",
     4370+    5240                               NAME = QI_FPT_EXIT );
     4371+    5241
     4372+    5242            %BEGIN_MACRO ( STCLASS = STCLASS );
     4373+    5243
     4374+    5244          %FPT_EXIT ( FPTN = NAME,
     4375+    5245                      STCLASS = STCLASS,
     4376+    5246                      STEPCC = G_SKIP# );
     4377+    5247
     4378+    5248            %END_MACRO;
     4379+    5249
     4380+    5250          %MEND;
     4381+    5251
     4382+    5252
     4383+    5253          %MACRO QI_FPT_FDS ( STCLASS = "SYMREF",
     4384+    5254                              NAME = QI_FPT_FDS );
     4385+    5255
     4386+    5256            %BEGIN_MACRO ( STCLASS = STCLASS );
     4387+    5257
     4388+    5258          %FPT_FDS ( FPTN = NAME,
     4389+    5259                     STCLASS = STCLASS,
     4390+    5260                     RESULTS = QI_VLP_SEGMENT );
     4391+    5261
     4392+    5262            %END_MACRO;
     4393+    5263
     4394+    5264          %MEND;
     4395+    5265
     4396+    5266          %MACRO QI_FPT_FDS_LOAD ( STCLASS = "SYMREF",
     4397+    5267                                   NAME = QI_FPT_FDS_LOAD );
     4398+    5268
     4399+    5269            %BEGIN_MACRO ( STCLASS = STCLASS );
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:442  
     4400+    5270
     4401+    5271          %FPT_FDS ( FPTN = NAME,
     4402+    5272                     STCLASS = STCLASS,
     4403+    5273                     RESULTS = QI_VLP_SEGMENT_LOAD );
     4404+    5274
     4405+    5275            %END_MACRO;
     4406+    5276
     4407+    5277          %MEND;
     4408+    5278
     4409+    5279          %MACRO QI_FPT_GDS ( STCLASS = "SYMREF",
     4410+    5280                              NAME = QI_FPT_GDS );
     4411+    5281
     4412+    5282            %BEGIN_MACRO ( STCLASS = STCLASS );
     4413+    5283
     4414+    5284          %FPT_GDS ( FPTN = NAME,
     4415+    5285                     STCLASS = STCLASS,
     4416+    5286                     RESULTS = QI_VLP_SEGMENT,
     4417+    5287                     NEXT = BIG,
     4418+    5288                     PAGES = 1 );
     4419+    5289
     4420+    5290            %END_MACRO;
     4421+    5291
     4422+    5292          %MEND;
     4423+    5293
     4424+    5294          %MACRO QI_VLP_SEGMENT ( STCLASS = "SYMREF",
     4425+    5295                                  NAME = QI_VLP_SEGMENT );
     4426+    5296
     4427+    5297            %BEGIN_MACRO ( STCLASS = STCLASS );
     4428+    5298
     4429+    5299          %VLP_SEGMENT ( FPTN = NAME,
     4430+    5300                         STCLASS = STCLASS );
     4431+    5301
     4432+    5302            %END_MACRO;
     4433+    5303
     4434+    5304          %MEND;
     4435+    5305
     4436+    5306          %MACRO QI_FPT_GDS_BUFFER ( STCLASS = "SYMREF",
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:443  
     4437+    5307                                     NAME = QI_FPT_GDS_BUFFER );
     4438+    5308
     4439+    5309            %BEGIN_MACRO ( STCLASS = STCLASS );
     4440+    5310
     4441+    5311          %FPT_GDS ( FPTN = NAME,
     4442+    5312                     STCLASS = STCLASS,
     4443+    5313                     RESULTS = QI_VLP_SEGMENT_BUFFER,
     4444+    5314                     NEXT = LITTLE,
     4445+    5315                     PAGES = 4 );
     4446+    5316
     4447+    5317            %END_MACRO;
     4448+    5318
     4449+    5319          %MEND;
     4450+    5320
     4451+    5321          %MACRO QI_VLP_SEGMENT_BUFFER ( STCLASS = "SYMREF",
     4452+    5322                                         NAME = QI_VLP_SEGMENT_BUFFER );
     4453+    5323
     4454+    5324            %BEGIN_MACRO ( STCLASS = STCLASS );
     4455+    5325
     4456+    5326          %VLP_SEGMENT ( FPTN = NAME,
     4457+    5327                         STCLASS = STCLASS );
     4458+    5328            %END_MACRO;
     4459+    5329
     4460+    5330          %MEND;
     4461+    5331
     4462+    5332          %MACRO QI_FPT_GDS_LOAD ( STCLASS = "SYMREF",
     4463+    5333                                   NAME = QI_FPT_GDS_LOAD );
     4464+    5334
     4465+    5335            %BEGIN_MACRO ( STCLASS = STCLASS );
     4466+    5336
     4467+    5337          %FPT_GDS ( FPTN = NAME,
     4468+    5338                     STCLASS = STCLASS,
     4469+    5339                     RESULTS = QI_VLP_SEGMENT_LOAD,
     4470+    5340                     NEXT = LITTLE,
     4471+    5341                     PAGES = 1 );
     4472+    5342
     4473+    5343            %END_MACRO;
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:444  
     4474+    5344
     4475+    5345          %MEND;
     4476+    5346
     4477+    5347          %MACRO QI_VLP_SEGMENT_LOAD ( STCLASS = "SYMREF",
     4478+    5348                                       NAME = QI_VLP_SEGMENT_LOAD );
     4479+    5349
     4480+    5350            %BEGIN_MACRO ( STCLASS = STCLASS );
     4481+    5351
     4482+    5352          %VLP_SEGMENT ( FPTN = NAME,
     4483+    5353                         STCLASS = STCLASS );
     4484+    5354
     4485+    5355            %END_MACRO;
     4486+    5356
     4487+    5357          %MEND;
     4488+    5358          %MACRO QI_FPT_GLINEATTR ( STCLASS = "SYMREF",
     4489+    5359                                    NAME = QI_FPT_GLINEATTR );
     4490+    5360
     4491+    5361            %BEGIN_MACRO ( STCLASS = STCLASS );
     4492+    5362
     4493+    5363          %FPT_GLINEATTR ( FPTN = NAME,
     4494+    5364                           STCLASS = STCLASS,
     4495+    5365                           DCB = NIL );
     4496+    5366
     4497+    5367            %END_MACRO;
     4498+    5368
     4499+    5369          %MEND;
     4500+    5370
     4501+    5371          %MACRO QI_FPT_INT ( STCLASS = "SYMREF",
     4502+    5372                              NAME = QI_FPT_INT );
     4503+    5373
     4504+    5374            %BEGIN_MACRO ( STCLASS = STCLASS );
     4505+    5375
     4506+    5376          %FPT_INT ( FPTN = NAME,
     4507+    5377                     STCLASS = STCLASS );
     4508+    5378
     4509+    5379            %END_MACRO;
     4510+    5380
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:445  
     4511+    5381          %MEND;
     4512+    5382
     4513+    5383          %MACRO QI_FPT_LDTRC ( STCLASS = "SYMREF",
     4514+    5384                                NAME = QI_FPT_LDTRC );
     4515+    5385
     4516+    5386            %BEGIN_MACRO ( STCLASS = STCLASS );
     4517+    5387
     4518+    5388          %FPT_LDTRC ( FPTN = NAME,
     4519+    5389                       STCLASS = STCLASS,
     4520+    5390                       DISP = KEEP );
     4521+    5391
     4522+    5392            %END_MACRO;
     4523+    5393
     4524+    5394          %MEND;
     4525+    5395
     4526+    5396          %MACRO QI_FPT_MDFFLD ( STCLASS = "SYMREF",
     4527+    5397                                 NAME = QI_FPT_MDFFLD );
     4528+    5398
     4529+    5399            %BEGIN_MACRO ( STCLASS = STCLASS );
     4530+    5400
     4531+    5401          %FPT_MDFFLD ( FPTN = NAME,
     4532+    5402                        STCLASS = STCLASS,
     4533+    5403                        DCB = NIL,
     4534+    5404                        SETGRPRND = YES );
     4535+    5405
     4536+    5406            %END_MACRO;
     4537+    5407
     4538+    5408          %MEND;
     4539+    5409
     4540+    5410          %MACRO QI_FPT_OPEN ( STCLASS = "SYMREF",
     4541+    5411                               NAME = QI_FPT_OPEN );
     4542+    5412
     4543+    5413            %BEGIN_MACRO ( STCLASS = STCLASS );
     4544+    5414
     4545+    5415          %FPT_OPEN ( FPTN = NAME,
     4546+    5416                      STCLASS = STCLASS,
     4547+    5417                      DCB = NIL,
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:446  
     4548+    5418                      DISP = KEEP,
     4549+    5419                      SCRUB = YES );
     4550+    5420
     4551+    5421            %END_MACRO;
     4552+    5422
     4553+    5423          %MEND;
     4554+    5424
     4555+    5425          %MACRO QI_FPT_PROMPT ( STCLASS = "SYMREF",
     4556+    5426                                 NAME = QI_FPT_PROMPT );
     4557+    5427
     4558+    5428            %BEGIN_MACRO ( STCLASS = STCLASS );
     4559+    5429
     4560+    5430          %FPT_PROMPT ( FPTN = NAME,
     4561+    5431                        STCLASS = STCLASS,
     4562+    5432                        DCB = NIL,
     4563+    5433                        VFC = YES );
     4564+    5434
     4565+    5435            %END_MACRO;
     4566+    5436
     4567+    5437          %MEND;
     4568+    5438
     4569+    5439          %MACRO QI_FPT_READ ( STCLASS = "SYMREF",
     4570+    5440                               NAME = QI_FPT_READ );
     4571+    5441
     4572+    5442            %BEGIN_MACRO ( STCLASS = STCLASS );
     4573+    5443
     4574+    5444          %FPT_READ ( FPTN = NAME,
     4575+    5445                      STCLASS = STCLASS,
     4576+    5446                      DCB = NIL );
     4577+    5447
     4578+    5448            %END_MACRO;
     4579+    5449
     4580+    5450          %MEND;
     4581+    5451
     4582+    5452          %MACRO QI_VLP_CG ( STCLASS = "SYMREF",
     4583+    5453                             NAME = QI_VLP_CG );
     4584+    5454
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:447  
     4585+    5455            %BEGIN_MACRO ( STCLASS = STCLASS );
     4586+    5456
     4587+    5457          %VLP_CG ( FPTN = NAME,
     4588+    5458                    STCLASS = STCLASS );
     4589+    5459
     4590+    5460            %END_MACRO;
     4591+    5461
     4592+    5462          %MEND;
     4593+    5463
     4594+    5464          %MACRO QI_FPT_RLSFLD ( STCLASS = "SYMREF",
     4595+    5465                                 NAME = QI_FPT_RLSFLD );
     4596+    5466
     4597+    5467            %BEGIN_MACRO ( STCLASS = STCLASS );
     4598+    5468
     4599+    5469          %FPT_RLSFLD ( FPTN = NAME,
     4600+    5470                        STCLASS = STCLASS,
     4601+    5471                        DCB = NIL );
     4602+    5472
     4603+    5473            %END_MACRO;
     4604+    5474
     4605+    5475          %MEND;
     4606+    5476
     4607+    5477          %MACRO QI_FPT_SLCFLD ( STCLASS = "SYMREF",
     4608+    5478                                 NAME = QI_FPT_SLCFLD );
     4609+    5479
     4610+    5480            %BEGIN_MACRO ( STCLASS = STCLASS );
     4611+    5481
     4612+    5482          %FPT_SLCFLD ( FPTN = NAME,
     4613+    5483                        STCLASS = STCLASS,
     4614+    5484                        DCB = NIL );
     4615+    5485
     4616+    5486            %END_MACRO;
     4617+    5487
     4618+    5488          %MEND;
     4619+    5489
     4620+    5490          %MACRO QI_FPT_TIME ( STCLASS = "SYMREF",
     4621+    5491                               NAME = QI_FPT_TIME );
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:448  
     4622+    5492
     4623+    5493            %BEGIN_MACRO ( STCLASS = STCLASS );
     4624+    5494
     4625+    5495          %FPT_TIME ( FPTN = NAME,
     4626+    5496                      STCLASS = STCLASS,
     4627+    5497                      SOURCE = CLOCK,
     4628+    5498                      DEST = ANS );
     4629+    5499
     4630+    5500            %END_MACRO;
     4631+    5501
     4632+    5502          %MEND;
     4633+    5503
     4634+    5504          %MACRO QI_FPT_TRAP ( STCLASS = "SYMREF",
     4635+    5505                               NAME = QI_FPT_TRAP );
     4636+    5506
     4637+    5507            %BEGIN_MACRO ( STCLASS = STCLASS );
     4638+    5508
     4639+    5509          %FPT_TRAP ( FPTN = NAME,
     4640+    5510                      NTC = QI_VLP_TRAP_CONDITIONS,
     4641+    5511                      STCLASS = STCLASS );
     4642+    5512
     4643+    5513            %END_MACRO;
     4644+    5514
     4645+    5515          %MEND;
     4646+    5516
     4647+    5517          %MACRO QI_VLP_TRAP_CONDITIONS ( STCLASS = "SYMREF",
     4648+    5518                                          NAME = QI_VLP_TRAP_CONDITIONS );
     4649+    5519
     4650+    5520            %BEGIN_MACRO ( STCLASS = STCLASS );
     4651+    5521
     4652+    5522          %VLP_TRAP_CONDITIONS ( FPTN = NAME,
     4653+    5523                                 NO_SIP = G_ENT_TRAP#,
     4654+    5524                                 UNIMPL = G_ENT_TRAP#,
     4655+    5525                                 REMOTE_DESC = G_ENT_TRAP#,
     4656+    5526                                 PRIV = G_ENT_TRAP#,
     4657+    5527                                 MEM_PROT = G_ENT_TRAP#,
     4658+    5528                                 INT_UR = G_ENT_TRAP#,
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:449  
     4659+    5529                                 PROG_ERR = G_ENT_TRAP#,
     4660+    5530                                 EXT_UR = G_ENT_TRAP#,
     4661+    5531                                 C_DBZ = G_ENT_TRAP#,
     4662+    5532                                 C_SPEC = G_ENT_TRAP#,
     4663+    5533                                 C_CHAR = G_ENT_TRAP#,
     4664+    5534                                 STCLASS = STCLASS );
     4665+    5535
     4666+    5536            %END_MACRO;
     4667+    5537
     4668+    5538          %MEND;
     4669+    5539
     4670+    5540          %MACRO QI_FPT_TRMATTR ( STCLASS = "SYMREF",
     4671+    5541                                  NAME = QI_FPT_TRMATTR );
     4672+    5542
     4673+    5543            %BEGIN_MACRO ( STCLASS = STCLASS );
     4674+    5544
     4675+    5545          %FPT_TRMATTR ( FPTN = NAME,
     4676+    5546                         STCLASS = STCLASS,
     4677+    5547                         DCB = NIL );
     4678+    5548
     4679+    5549            %END_MACRO;
     4680+    5550
     4681+    5551          %MEND;
     4682+    5552
     4683+    5553          %MACRO QI_FPT_TRMCTL ( STCLASS = "SYMREF",
     4684+    5554                                 NAME = QI_FPT_TRMCTL );
     4685+    5555
     4686+    5556            %BEGIN_MACRO ( STCLASS = STCLASS );
     4687+    5557
     4688+    5558          %FPT_TRMCTL ( FPTN = NAME,
     4689+    5559                        STCLASS = STCLASS,
     4690+    5560                        DCB = NIL );
     4691+    5561
     4692+    5562            %END_MACRO;
     4693+    5563
     4694+    5564          %MEND;
     4695+    5565
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:450  
     4696+    5566          %MACRO QI_VLP_TRMCTL ( STCLASS = "SYMREF",
     4697+    5567                                 NAME = QI_VLP_TRMCTL );
     4698+    5568
     4699+    5569            %BEGIN_MACRO ( STCLASS = STCLASS );
     4700+    5570
     4701+    5571          %VLP_TRMCTL ( FPTN = NAME,
     4702+    5572                        STCLASS = STCLASS );
     4703+    5573
     4704+    5574            %END_MACRO;
     4705+    5575
     4706+    5576          %MEND;
     4707+    5577
     4708+    5578          %MACRO QI_FPT_WAIT ( STCLASS = "SYMREF",
     4709+    5579                               NAME = QI_FPT_WAIT );
     4710+    5580
     4711+    5581            %BEGIN_MACRO ( STCLASS = STCLASS );
     4712+    5582
     4713+    5583          %FPT_WAIT ( FPTN = NAME,
     4714+    5584                      STCLASS = STCLASS );
     4715+    5585
     4716+    5586            %END_MACRO;
     4717+    5587
     4718+    5588          %MEND;
     4719+    5589
     4720+    5590          %MACRO QI_FPT_WRITE ( STCLASS = "SYMREF",
     4721+    5591                                NAME = QI_FPT_WRITE );
     4722+    5592
     4723+    5593            %BEGIN_MACRO ( STCLASS = STCLASS );
     4724+    5594
     4725+    5595          %FPT_WRITE ( FPTN = NAME,
     4726+    5596                       STCLASS = STCLASS,
     4727+    5597                       DCB = NIL );
     4728+    5598
     4729+    5599            %END_MACRO;
     4730+    5600
     4731+    5601          %MEND;
     4732+    5602
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:451  
     4733+    5603          %MACRO QI_FPT_XBREAK ( STCLASS = "SYMREF",
     4734+    5604                                 NAME = QI_FPT_XBREAK );
     4735+    5605
     4736+    5606            %BEGIN_MACRO ( STCLASS = STCLASS );
     4737+    5607
     4738+    5608          %FPT_XBREAK ( FPTN = NAME,
     4739+    5609                        STCLASS = STCLASS,
     4740+    5610                        VLP_XBREAK = QI_VLP_XBREAK );
     4741+    5611
     4742+    5612            %END_MACRO;
     4743+    5613
     4744+    5614          %MEND;
     4745+    5615
     4746+    5616          %MACRO QI_VLP_XBREAK ( STCLASS = "SYMREF",
     4747+    5617                                 NAME = QI_VLP_XBREAK );
     4748+    5618
     4749+    5619            %BEGIN_MACRO ( STCLASS = STCLASS );
     4750+    5620
     4751+    5621          %VLP_XBREAK ( FPTN = NAME,
     4752+    5622                        STCLASS = STCLASS );
     4753+    5623
     4754+    5624            %END_MACRO;
     4755+    5625
     4756+    5626          %MEND;
     4757+    5627
     4758+    5628        %EJECT;
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:452  
     4759+    5629
     4760+    5630        /*
     4761+    5631                      %%% %%    %%% %%   %%%%%%  %% %%%%   %%%%%
     4762+    5632                      %% % %%  %%  %%%  %%       %%%%     %%   %%
     4763+    5633                      %% % %%  %%  %%%  %%       %%%      %%   %%
     4764+    5634                      %% % %%  %%  %%%  %%       %%       %%   %%
     4765+    5635                      %% % %%   %%% %%   %%%%%%  %%        %%%%%
     4766+    5636
     4767+    5637                %%                                          %%%
     4768+    5638                                                            %%%
     4769+    5639               %%%    %% %%%   %%   %%   %%%%%    %%%%%%     %%     %%%%%%
     4770+    5640                %%    %%%  %%  %%   %%  %%   %%  %%         %%     %%
     4771+    5641                %%    %%   %%   %% %%   %%   %%  %%                 %%%%%
     4772+    5642                %%    %%   %%    %%%    %%   %%  %%                     %%
     4773+    5643              %%%%%%  %%   %%     %      %%%%%    %%%%%%           %%%%%%
     4774+    5644                                                                            */
     4775+    5645
     4776+    5646          %MACRO QI$ALL ( STCLASS = "SYMREF" );
     4777+    5647
     4778+    5648            %BEGIN_MACRO ( STCLASS = STCLASS );
     4779+    5649
     4780+    5650            %QI$FPL;
     4781+    5651            %QI_CONTEXT ( STCLASS = STCLASS );
     4782+    5652            %QI$GENERAL;
     4783+    5653            %QI_GENERAL_CIPS ( STCLASS = STCLASS );
     4784+    5654            %QI$DYNAMIC;
     4785+    5655
     4786+    5656            %END_MACRO;
     4787+    5657
     4788+    5658          %MEND;
     4789+    5659
     4790+    5660          %MACRO QI$FPL;
     4791+    5661
     4792+    5662            %BEGIN_MACRO ( STCLASS = STCLASS );
     4793+    5663
     4794+    5664            %QI$OP_SEQUENCE;
     4795+    5665            %QI$OP_ABORT;
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:453  
     4796+    5666            %QI$OP_ACCEPT;
     4797+    5667            %QI$OP_ACTIVATE;
     4798+    5668            %QI$OP_ADD;
     4799+    5669            %QI$OP_ADDX;
     4800+    5670            %QI$OP_ALL_LITERAL;
     4801+    5671            %QI$OP_APPLY;
     4802+    5672            %QI$OP_CALL;
     4803+    5673            %QI$OP_CLEAR;
     4804+    5674            %QI$OP_CLOSE;
     4805+    5675            %QI$OP_CNVBBX;
     4806+    5676            %QI$OP_CNVBN;
     4807+    5677            %QI$OP_CNVBNX;
     4808+    5678            %QI$OP_CNVBPX;
     4809+    5679            %QI$OP_CNVNBT;
     4810+    5680            %QI$OP_CNVPBT;
     4811+    5681            %QI$OP_CNVPN;
     4812+    5682            %QI$OP_DISPLAY;
     4813+    5683            %QI$OP_DIV;
     4814+    5684            %QI$OP_DIVX;
     4815+    5685            %QI$OP_ENABLE;
     4816+    5686            %QI$OP_GOTO;
     4817+    5687            %QI$OP_GOTODP;
     4818+    5688            %QI$OP_IFCLS;
     4819+    5689            %QI$OP_IFCNDA;
     4820+    5690            %QI$OP_IFCNDN;
     4821+    5691            %QI$OP_IFINDR;
     4822+    5692            %QI$OP_IFRELA;
     4823+    5693            %QI$OP_IFRELG;
     4824+    5694            %QI$OP_IFRELN;
     4825+    5695            %QI$OP_INSPECT;
     4826+    5696            %QI$OP_JAZ;
     4827+    5697            %QI$OP_JND;
     4828+    5698            %QI$OP_LOAD;
     4829+    5699            %QI$OP_MOVA;
     4830+    5700            %QI$OP_MOVAE;
     4831+    5701            %QI$OP_MOVAJ;
     4832+    5702            %QI$OP_MOVB;
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:454  
     4833+    5703            %QI$OP_MOVBA;
     4834+    5704            %QI$OP_MOVDE;
     4835+    5705            %QI$OP_MOVG;
     4836+    5706            %QI$OP_MOVN;
     4837+    5707            %QI$OP_MOVNA;
     4838+    5708            %QI$OP_MOVNE;
     4839+    5709            %QI$OP_MOVNEA;
     4840+    5710            %QI$OP_MOVP;
     4841+    5711            %QI$OP_MOVPA;
     4842+    5712            %QI$OP_MULT;
     4843+    5713            %QI$OP_MULTX;
     4844+    5714            %QI$OP_OPEN;
     4845+    5715            %QI$OP_PERFM;
     4846+    5716            %QI$OP_PERFMT;
     4847+    5717            %QI$OP_READ_FORM;
     4848+    5718            %QI$OP_READ_TRAN;
     4849+    5719            %QI$OP_ROUND;
     4850+    5720            %QI$OP_STOP_PAUSE;
     4851+    5721            %QI$OP_STOP_RUN;
     4852+    5722            %QI$OP_SUB;
     4853+    5723            %QI$OP_SUBSCR;
     4854+    5724            %QI$OP_SUBX;
     4855+    5725            %QI$OP_VERI_PRES;
     4856+    5726            %QI$OP_WRITE_FORM;
     4857+    5727            %QI$OP_WRITE_TRAN;
     4858+    5728
     4859+    5729            %QI$INITIALIZATION_BLOCK;
     4860+    5730            %QI$CONDITION_CONTROL_BLOCK;
     4861+    5731            %QI$CONDITION_LEGAL_BLOCK;
     4862+    5732            %QI$PSEUDO_CIP;
     4863+    5733            %QI$CIP;
     4864+    5734            %QI$DAD;
     4865+    5735            %QI$COBOL_DAD;
     4866+    5736            %QI$COBOL_DAD_P_BITS;
     4867+    5737            %QI$COBOL_DAD_P_ITEMS;
     4868+    5738            %QI$LINKAGE_ARGUMENT_DESCRIPTOR;
     4869+    5739            %QI$FIELD_DAD;
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:455  
     4870+    5740            %QI$FIELD_DAD_P;
     4871+    5741            %QI$MAJOR_NODE;
     4872+    5742            %QI$MINOR_NODE;
     4873+    5743            %QI$FILE;
     4874+    5744            %QI$FORM_FILE;
     4875+    5745            %QI$TRAN_FILE;
     4876+    5746            %QI$FRAME;
     4877+    5747            %QI$PICTURE_STRING;
     4878+    5748            %QI$NUMERIC_PICTURE_STRING;
     4879+    5749            %QI$ALPHANUMERIC_PICTURE_STRING;
     4880+    5750
     4881+    5751            %QI$TERMINAL_ATTRIBUTES;
     4882+    5752            %QI$ACTIVATION_STATUS;
     4883+    5753            %QI$PERFORM_BLOCK;
     4884+    5754            %QI$INDICATORS;
     4885+    5755            %QI$FIELD_STATUS;
     4886+    5756            %QI$MAJOR_STATUS;
     4887+    5757            %QI$MINOR_STATUS;
     4888+    5758            %QI$FILE_STATUS;
     4889+    5759            %QI$FORM_STATUS;
     4890+    5760            %QI$TRAN_STATUS;
     4891+    5761            %QI$FRAME_STATUS;
     4892+    5762
     4893+    5763            %END_MACRO;
     4894+    5764
     4895+    5765          %MEND;
     4896+    5766
     4897+    5767          %MACRO QI_CONTEXT ( STCLASS = "SYMREF" );
     4898+    5768
     4899+    5769            %BEGIN_MACRO ( STCLASS = STCLASS );
     4900+    5770
     4901+    5771            %QI_1 ( STCLASS = STCLASS );
     4902+    5772            %QI_SWORK ( STCLASS = STCLASS );
     4903+    5773            %QI_SWORK_2 ( STCLASS = STCLASS );
     4904+    5774            %QI_BLANK ( STCLASS = STCLASS );
     4905+    5775            %QI_MAT_MATCH ( STCLASS = STCLASS );
     4906+    5776            %QI_MAT_NONMATCH ( STCLASS = STCLASS );
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:456  
     4907+    5777            %QI_SLASH ( STCLASS = STCLASS );
     4908+    5778            %QI_ZERO ( STCLASS = STCLASS );
     4909+    5779            %QI_BINARY_ZERO ( STCLASS = STCLASS );
     4910+    5780            %QI_CLASS_ALPHA ( STCLASS = STCLASS );
     4911+    5781            %QI_CLASS_NUMERIC ( STCLASS = STCLASS );
     4912+    5782            %QI_OVERPUNCHED_SIGNS ( STCLASS = STCLASS );
     4913+    5783            %QI_ZERO_ACCUMULATOR ( STCLASS = STCLASS );
     4914+    5784            %QGB_PARAM ( STCLASS = STCLASS );
     4915+    5785
     4916+    5786            %END_MACRO;
     4917+    5787
     4918+    5788          %MEND;
     4919+    5789
     4920+    5790          %MACRO QI$GENERAL;
     4921+    5791
     4922+    5792            %BEGIN_MACRO ( STCLASS = STCLASS );
     4923+    5793
     4924+    5794            %QI$GENERAL_BASED;
     4925+    5795
     4926+    5796            %END_MACRO;
     4927+    5797
     4928+    5798          %MEND;
     4929+    5799
     4930+    5800          %MACRO QI_GENERAL_CIPS ( STCLASS = "SYMREF" );
     4931+    5801
     4932+    5802            %BEGIN_MACRO ( STCLASS = STCLASS );
     4933+    5803
     4934+    5804            /* QI@CIP_OPERATION stuff.... */
     4935+    5805            %QI@ALR ( STCLASS = STCLASS,
     4936+    5806                      NAME = QI_ALR );
     4937+    5807            %QI@TYPE_DISPLAY_SOURCE ( STCLASS = STCLASS,
     4938+    5808                                      NAME = QI_TYPE_DISPLAY_SOURCE );
     4939+    5809            %QI@TYPE_DISPLAY_TARGET ( STCLASS = STCLASS,
     4940+    5810                                      NAME = QI_TYPE_DISPLAY_TARGET );
     4941+    5811            %QI@TYPE_BINARY_TARGET ( STCLASS = STCLASS,
     4942+    5812                                     NAME = QI_TYPE_BINARY_TARGET );
     4943+    5813            %QI@SRCH_VRFY ( STCLASS = STCLASS,
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:457  
     4944+    5814                            NAME = QI_SRCH_VRFY );
     4945+    5815            %QI@MAT ( STCLASS = STCLASS,
     4946+    5816                      NAME = QI_MAT );
     4947+    5817
     4948+    5818            /* QI_CIP_DESCRIPTOR stuff.... */
     4949+    5819            %QI@4_CHAR_ALPHANUMERIC ( STCLASS = STCLASS,
     4950+    5820                                      NAME = QI_4_CHAR_ALPHANUMERIC );
     4951+    5821            %QI@31_DIGIT_SLS_DISPLAY ( STCLASS = STCLASS,
     4952+    5822                                      NAME = QI_31_DIGIT_SLS_DISPLAY );
     4953+    5823            %QI@16_BIT_BINARY ( STCLASS = STCLASS,
     4954+    5824                                NAME = QI_16_BIT_BINARY );
     4955+    5825            %QI@32_BIT_BINARY ( STCLASS = STCLASS,
     4956+    5826                                NAME = QI_32_BIT_BINARY );
     4957+    5827            %QI@31_DIGIT_ST_PACKED ( STCLASS = STCLASS,
     4958+    5828                                     NAME = QI_31_DIGIT_ST_PACKED );
     4959+    5829            %QI@PICTURE_STRING ( STCLASS = STCLASS,
     4960+    5830                                 NAME = QI_PICTURE_STRING );
     4961+    5831            %QI@ACCUMULATOR_DAD ( STCLASS = STCLASS,
     4962+    5832                                  NAME = QI_ACCUMULATOR_DAD );
     4963+    5833
     4964+    5834            %END_MACRO;
     4965+    5835
     4966+    5836          %MEND;
     4967+    5837
     4968+    5838          %MACRO QI$DYNAMIC ( STCLASS = STCLASS );
     4969+    5839
     4970+    5840            %BEGIN_MACRO ( STCLASS = STCLASS );
     4971+    5841
     4972+    5842            %QI$GZ_HEADER;
     4973+    5843            %QI$GZ_FIELD;
     4974+    5844
     4975+    5845            %END_MACRO;
     4976+    5846
     4977+    5847          %MEND;
     4978+    5848
     4979+    5849          %MACRO QI_FPTS ( STCLASS = "SYMREF" );
     4980+    5850
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:458  
     4981+    5851            %BEGIN_MACRO ( STCLASS = STCLASS );
     4982+    5852
     4983+    5853            %QI_FPT_CLOSE ( STCLASS = STCLASS );
     4984+    5854            %QI_FPT_DBCONTROL ( STCLASS = STCLASS );
     4985+    5855            %QI_FPT_DCLFLD ( STCLASS = STCLASS );
     4986+    5856            %QI_VLP_FLDATR ( STCLASS = STCLASS );
     4987+    5857            %QI_FPT_DEVICE ( STCLASS = STCLASS );
     4988+    5858            %QI_FPT_ERASE ( STCLASS = STCLASS );
     4989+    5859            %QI_FPT_ERRMSG ( STCLASS = STCLASS );
     4990+    5860            %QI_FPT_EXIT ( STCLASS = STCLASS );
     4991+    5861            %QI_FPT_FDS ( STCLASS = STCLASS );
     4992+    5862            %QI_FPT_FDS_LOAD ( STCLASS = STCLASS );
     4993+    5863            %QI_FPT_GDS ( STCLASS = STCLASS );
     4994+    5864            %QI_VLP_SEGMENT ( STCLASS = STCLASS );
     4995+    5865            %QI_FPT_GDS_BUFFER ( STCLASS = STCLASS );
     4996+    5866            %QI_VLP_SEGMENT_BUFFER ( STCLASS = STCLASS );
     4997+    5867            %QI_FPT_GDS_LOAD ( STCLASS = STCLASS );
     4998+    5868            %QI_VLP_SEGMENT_LOAD ( STCLASS = STCLASS );
     4999+    5869            %QI_FPT_GLINEATTR ( STCLASS = STCLASS );
     5000+    5870            %QI_FPT_INT ( STCLASS = STCLASS );
     5001+    5871            %QI_FPT_LDTRC ( STCLASS = STCLASS );
     5002+    5872            %QI_FPT_MDFFLD ( STCLASS = STCLASS );
     5003+    5873            %QI_FPT_OPEN ( STCLASS = STCLASS );
     5004+    5874            %QI_FPT_PROMPT ( STCLASS = STCLASS );
     5005+    5875            %QI_FPT_READ ( STCLASS = STCLASS );
     5006+    5876            %QI_VLP_CG ( STCLASS = STCLASS );
     5007+    5877            %QI_FPT_RLSFLD ( STCLASS = STCLASS );
     5008+    5878            %QI_FPT_SLCFLD ( STCLASS = STCLASS );
     5009+    5879            %QI_FPT_TIME ( STCLASS = STCLASS );
     5010+    5880            %QI_FPT_TRAP ( STCLASS = STCLASS );
     5011+    5881            %QI_VLP_TRAP_CONDITIONS ( STCLASS = STCLASS );
     5012+    5882            %QI_FPT_TRMATTR ( STCLASS = STCLASS );
     5013+    5883            %QI_FPT_TRMCTL ( STCLASS = STCLASS );
     5014+    5884            %QI_VLP_TRMCTL ( STCLASS = STCLASS );
     5015+    5885            %QI_FPT_WAIT ( STCLASS = STCLASS );
     5016+    5886            %QI_FPT_WRITE ( STCLASS = STCLASS );
     5017+    5887            %QI_FPT_XBREAK ( STCLASS = STCLASS );
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:459  
     5018+    5888            %QI_VLP_XBREAK ( STCLASS = STCLASS );
     5019+    5889
     5020+    5890            %END_MACRO;
     5021+    5891
     5022+    5892          %MEND;
     5023+    5893
     5024+    5894        %EJECT;
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:460  
     5025+    5895
     5026+    5896          %MACRO BEGIN_MACRO ( STCLASS = "QI#HUH" );
     5027+    5897
     5028+    5898            %SET LISTDIR = '0'B;
     5029+    5899            %SET LISTEXP = '1'B;
     5030+    5900            %SET LISTSUB = '1'B;
     5031+    5901
     5032+    5902
     5033+    5903            %LSET QI#STCLASS = CONCAT(TEXTCHAR(STCLASS),'        ');
     5034+    5904
     5035+    5905            %IF (SUBSTR(QI#STCLASS,0,6) = 'STATIC')
     5036+    5906             OR (SUBSTR(QI#STCLASS,0,8) = 'CONSTANT')
     5037+    5907             OR (SUBSTR(QI#STCLASS,0,3) = 'EXT');
     5038+    5908              %SET INIT = CHARTEXT('INIT');
     5039+    5909            %ELSE;
     5040+    5910              %SET INIT = CHARTEXT('/* Was INIT''ed to:  ');
     5041+    5911            %ENDIF;
     5042+    5912
     5043+    5913            %SET QI#MACRO_DEPTH = QI#MACRO_DEPTH + 1;
     5044+    5914
     5045+    5915          %MEND;
     5046+    5916
     5047+    5917          %MACRO END_MACRO;
     5048+    5918
     5049+    5919            %SET QI#MACRO_DEPTH = QI#MACRO_DEPTH - 1;
     5050+    5920
     5051+    5921            %IF QI#MACRO_DEPTH = 0;
     5052+    5922              %SET LISTEXP = '0'B;
     5053+    5923              %SET LISTSUB = '0'B;
     5054+    5924              %SET LISTDIR = '1'B;
     5055+    5925            %ENDIF;
     5056+    5926
     5057+    5927          %MEND;
       20     5928
       21     5929        /*
       22     5930           STATIC and CONSTANT context-type stuff.
       23     5931        */
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:461  
       24     5932          %QI_1 ( STCLASS = "STATIC SYMDEF" );
              5933            %BEGIN_MACRO ( STCLASS = STCLASS );
              5934            %SET LISTDIR = '0'B;
              5947    1     DCL 1 QI_1 STATIC SYMDEF DALIGNED,         /* interpreter data */
              5948    1           2 BASE DALIGNED,
              5949    1             3 DATA$ PTR INIT(ADDR(NIL))/**/,
              5950                            /* base pointer for user data */
              5951    1             3 PROC$ PTR INIT(ADDR(NIL))/**/,
              5952                            /* base pointer for user proc */
              5953    1             3 INTR$ PTR INIT(ADDR(NIL))/**/,
              5954                            /* base pointer for intr data */
              5955    1           2 BASE_A$(0:2) REDEF BASE PTR,
              5956    1           2 INSTR$ PTR DALIGNED INIT(ADDR(NIL))/**/,
              5957                            /* pointer to last/current op-code sequence */
              5958    1           2 CURR_INSTR$ PTR DALIGNED INIT(ADDR(NIL))/**/,
              5959                            /* current instruction */
              5960    1           2 INITIALIZATION_BLOCK$ PTR DALIGNED INIT(ADDR(NIL))/**/,
              5961                            /* from arguments to QAT$TALLYHO */
              5962    1           2 ARGUMENTS_AND_OR_FREE_AUTO_A$$ PTR DALIGNED INIT(ADDR(NIL))/**/,
              5963                            /* from arguments to QAT$TALLYHO */
              5964    1           2 UNWIND$ REMEMBER DALIGNED /*%INIT(QAU$UNWIND)%CHARTEXT('\**\')*/,
              5965                            /* contains address of somebody in QAT$TALLYHO
              5966                               (somebody using top auto frame) */
              5967    1           2 VERIFY_BUFFER$ PTR DALIGNED INIT(ADDR(NIL))/**/,
              5968                            /* address of working area for VERIFY */
              5969    1           2 VERIFY_BUFFER_SIZE UBIN INIT(0)/**/,
              5970                            /* size in bytes of working area for VERIFY */
              5971    1           2 HOUSEKEEPING ALIGNED,
              5972    1             3 IS_DBCONTROL_ESTABLISHED BIT(1) UNAL INIT('0'B)/**/,
              5973                            /* set if M$DBCONTROL has been called */
              5974    1             3 IS_INT_ESTABLISHED BIT(1) UNAL INIT('0'B)/**/,
              5975                            /* set if M$INT has been called */
              5976    1             3 IS_TRAP_ESTABLISHED BIT(1) UNAL INIT('0'B)/**/,
              5977                            /* set if M$TRAP has been called */
              5978    1             3 IS_BUFFER_ALLOCATED BIT(1) UNAL INIT('0'B)/**/,
              5979                            /* set if the buffer for X$whatever has been allocated */
              5980    1             3 IS_MESSAGE_LINE_CREATED BIT(1) UNAL INIT('0'B)/**/,
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:462  
              5981                            /* set if the MESSAGE LINE has been M$OPENed */
              5982    1             3 IS_DEBUGGER_ASSOCIATING BIT(1) UNAL INIT('0'B)/**/,
              5983                            /* set if the debugger has post-associated
              5984                               (QCE$ERROR_DBCONTROL was entered) */
              5985    1             3 INITIAL_PAGEHALT_SETTING BIT(2) UNAL INIT('00'B)/**/,
              5986                            /* value of VLP_TRMCTL.PAGEHALT at invocation */
              5987    1           2 SCREEN_UPDATE_FLAGS ALIGNED,
              5988                              /* set by screen-updating routines:
              5989                                     APPLY, CLEAR, DEACTIVATE, GET_FIELD, WRITE/DISPLAY
              5990                                 checked/reset by QCU$UPDATE_SCREEN */
              5991    1             3 WAS_APPLIED BIT(1) UNAL INIT('0'B)/**/,
              5992                              /* an APPLY (M$MDFFLD) was done */
              5993    1             3 WAS_CLEARED BIT(1) UNAL INIT('0'B)/**/,
              5994                              /* a CLEAR (M$ERASE) was done */
              5995    1             3 WAS_DEACTIVATED BIT(1) UNAL INIT('0'B)/**/,
              5996                              /* a DEACTIVATE (M$RLSFLD) was done */
              5997    1             3 WAS_WRITTEN BIT(1) UNAL INIT('0'B)/**/,
              5998                              /* a DISPLAY/WRITE (M$WRITE) was done */
              5999    1           2 SOURCE$ PTR DALIGNED INIT(ADDR(NIL))/**/,
              6000                            /* pointer to DAD for QCS$SETUP */
              6026    1         2 OP DALIGNED,
              6028    1           3 CIP,
              6098    1               4 S DALIGNED,           /* CIP descriptor */
              6143    1                 5 CD,                  /* Control bits for DISPLAY */
              6144    1                   6 OFFSET UBIN(1) UNAL INIT(0)/**/,
              6145    1                   6 SIGN UBIN(2) UNAL INIT(0)/**/,
              6146    1                 5 CA REDEF CD,         /* Control bits for ALPHANUMERIC */
              6147    1                   6 OFFSET UBIN(1) UNAL,
              6148    1                   6 FILL UBIN(1) UNAL,
              6149    1                   6 MBZ UBIN(1) UNAL,  /* not used:  MBZ */
              6150    1                 5 CB REDEF CD,         /* Control bits for BINARY */
              6151    1                   6 OFFSET UBIN(1) UNAL,
              6152    1                   6 MBZ UBIN(2) UNAL,  /* not used:  MBZ */
              6153    1                 5 CP REDEF CD,         /* Control bits for PACKED */
              6154    1                   6 OFFSET UBIN(2) UNAL,
              6155    1                   6 SIGN UBIN(1) UNAL,
              6157    1                 5 LEN UBIN(5) UNAL INIT(0)/**/,
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:463  
              6161    1                 5 T UBIN(1) UNAL INIT(0)/**/,
              6163    1                 5 AS UBIN(7) UNAL INIT(BITBIN('B'X))/**/,
              6168    1                 5 DISP UBIN INIT(6)/**/,
              6169    1               4 S_A (0:1) REDEF S UBIN ,
              6246    1               4 T DALIGNED,           /* CIP descriptor */
              6291    1                 5 CD,                  /* Control bits for DISPLAY */
              6292    1                   6 OFFSET UBIN(1) UNAL INIT(0)/**/,
              6293    1                   6 SIGN UBIN(2) UNAL INIT(0)/**/,
              6294    1                 5 CA REDEF CD,         /* Control bits for ALPHANUMERIC */
              6295    1                   6 OFFSET UBIN(1) UNAL,
              6296    1                   6 FILL UBIN(1) UNAL,
              6297    1                   6 MBZ UBIN(1) UNAL,  /* not used:  MBZ */
              6298    1                 5 CB REDEF CD,         /* Control bits for BINARY */
              6299    1                   6 OFFSET UBIN(1) UNAL,
              6300    1                   6 MBZ UBIN(2) UNAL,  /* not used:  MBZ */
              6301    1                 5 CP REDEF CD,         /* Control bits for PACKED */
              6302    1                   6 OFFSET UBIN(2) UNAL,
              6303    1                   6 SIGN UBIN(1) UNAL,
              6305    1                 5 LEN UBIN(5) UNAL INIT(0)/**/,
              6309    1                 5 T UBIN(1) UNAL INIT(0)/**/,
              6311    1                 5 AS UBIN(7) UNAL INIT(BITBIN('B'X))/**/,
              6316    1                 5 DISP UBIN INIT(8)/**/,
              6317    1               4 T_A (0:1) REDEF T UBIN ,
              6394    1               4 AUX DALIGNED,           /* CIP descriptor */
              6439    1                 5 CD,                  /* Control bits for DISPLAY */
              6440    1                   6 OFFSET UBIN(1) UNAL INIT(0)/**/,
              6441    1                   6 SIGN UBIN(2) UNAL INIT(0)/**/,
              6442    1                 5 CA REDEF CD,         /* Control bits for ALPHANUMERIC */
              6443    1                   6 OFFSET UBIN(1) UNAL,
              6444    1                   6 FILL UBIN(1) UNAL,
              6445    1                   6 MBZ UBIN(1) UNAL,  /* not used:  MBZ */
              6446    1                 5 CB REDEF CD,         /* Control bits for BINARY */
              6447    1                   6 OFFSET UBIN(1) UNAL,
              6448    1                   6 MBZ UBIN(2) UNAL,  /* not used:  MBZ */
              6449    1                 5 CP REDEF CD,         /* Control bits for PACKED */
              6450    1                   6 OFFSET UBIN(2) UNAL,
              6451    1                   6 SIGN UBIN(1) UNAL,
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:464  
              6453    1                 5 LEN UBIN(5) UNAL INIT(0)/**/,
              6457    1                 5 T UBIN(1) UNAL INIT(0)/**/,
              6459    1                 5 AS UBIN(7) UNAL INIT(BITBIN('B'X))/**/,
              6464    1                 5 DISP UBIN INIT(10)/**/,
              6465    1               4 AUX_A (0:1) REDEF AUX UBIN ,
              6479    1           3 CIP_A (0:2) REDEF CIP UBIN(32),
              6486    1           3 DATA DALIGNED,
              6487    1             4 S$ PTR INIT(ADDR(NIL))/**/,
              6488    1             4 T$ PTR INIT(ADDR(NIL))/**/,
              6489    1             4 AUX$ PTR INIT(ADDR(NIL))/**/,
              6490    1           3 DATA_A$ (0:2) REDEF DATA PTR,
              6526    1           3 LEN,
              6527    1             4 S UBIN INIT(0)/**/,
              6528    1             4 T UBIN INIT(0)/**/,
              6529    1             4 AUX UBIN INIT(0)/**/,
              6530    1           3 LEN_A (0:2) REDEF LEN UBIN,
              6531    1           3 SRCH_VRFY_ARGS REDEF LEN,
              6532    1             4 LEN UBIN,
              6533    1             4 LIST_LEN UBIN,
              6534    1             4 * UBIN,
              6535    1           3 SRCH_VRFY_ARGS_A (0:2) REDEF LEN UBIN,
              6536    1           3 SHIFT_COUNT REDEF LEN,
              6537    1             4 S UBIN,
              6538    1             4 T UBIN,
              6539    1             4 AUX UBIN,
              6540    1           3 SHIFT_COUNT_A (0:2) REDEF LEN UBIN,
              6543    1           3 INX,
              6544    1             4 S UBIN INIT(0)/**/,
              6545    1             4 T UBIN INIT(0)/**/,
              6546    1             4 AUX UBIN INIT(0)/**/,
              6547    1           3 INX_A (0:2) REDEF INX UBIN,
              6548    1           3 DEC REDEF INX,
              6549    1             4 S SBIN,
              6550    1             4 T SBIN,
              6551    1             4 AUX SBIN,
              6552    1           3 DEC_A (0:2) REDEF INX SBIN,
              6565    1           3 SRCH_VRFY_ELEMS,
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:465  
              6566    1             4 LEN UBIN INIT(0)/**/,
              6567    1             4 LIST_LEN UBIN INIT(0)/**/,
              6568    1           3 SRCH_VRFY_ELEMS_A (0:1) REDEF SRCH_VRFY_ELEMS UBIN,
              6596    1           3 PICTURE_STRING,
              6597    1             4 INTERMEDIATE_RESULT_LEN UBIN INIT(0)/**/,
              6598    1             4 DEC UBIN INIT(0)/**/,
              6599    1           3 PICTURE_STRING_A (0:1) REDEF PICTURE_STRING UBIN,
              6600    1           3 SRCH_RESULT REDEF PICTURE_STRING,
              6601    1             4 ARG_NUMBER UBIN,
              6602    1             4 DISP UBIN,
              6603    1           3 SRCH_RESULT_A (0:1) REDEF PICTURE_STRING UBIN,
              6604    1           3 VRFY_RESULT REDEF PICTURE_STRING,
              6605    1             4 DISP UBIN,
              6606    1             4 * UBIN,
              6607    1           3 VRFY_RESULT_A (0:1) REDEF PICTURE_STRING UBIN,
              6610    1           3 FILL_CHAR,
              6611    1             4 TEXT UBIN BYTE UNAL INIT(32)/**/,
              6612    1             4 * UBIN BYTE UNAL INIT(0)/**/,
              6613    1           3 SIZE_ERROR REDEF FILL_CHAR UBIN,
              6629    1           3 ROUND UBIN INIT(0)/**/,
              6630    1           3 COMP_RESULT REDEF ROUND UBIN,
              6631    1           3 TARGET_SIZE REDEF ROUND UBIN ,
              6643    1           2 DAD DALIGNED,
              6644                            /* pointers to DADs */
              6645    1             3 S$ PTR INIT(ADDR(NIL))/**/,
              6646    1             3 T$ PTR INIT(ADDR(NIL))/**/,
              6647    1             3 AUX$ PTR INIT(ADDR(NIL))/**/,
              6648    1           2 DAD_A$(0:2) REDEF DAD PTR,
              6649    1           2 IS_ALL_LIT,
              6650                            /* ALL "literal" indicator */
              6651    1             3 S BIT(1) ALIGNED INIT('0'B)/**/,
              6652    1             3 T BIT(1) ALIGNED INIT('0'B)/**/,
              6653    1             3 AUX BIT(1) ALIGNED INIT('0'B)/**/,
              6654    1           2 IS_ALL_LIT_A(0:2) REDEF IS_ALL_LIT BIT(1) ALIGNED,
              6655    1           2 IS_FORM_VARIABLE,
              6656                            /* COBOL vs FIELD variable type indicator */
              6657    1             3 S BIT(1) ALIGNED INIT('0'B)/**/,
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:466  
              6658    1             3 T BIT(1) ALIGNED INIT('0'B)/**/,
              6659    1             3 AUX BIT(1) ALIGNED INIT('0'B)/**/,
              6660    1           2 IS_FORM_VARIABLE_A(0:2) REDEF IS_FORM_VARIABLE BIT(1) ALIGNED,
              6661    1           2 IS_TEMP,
              6662                            /* on if this is a temp (must build descriptor) */
              6663    1             3 S BIT(1) ALIGNED INIT('0'B)/**/,
              6664    1             3 T BIT(1) ALIGNED INIT('0'B)/**/,
              6665    1             3 AUX BIT(1) ALIGNED INIT('0'B)/**/,
              6666    1           2 IS_TEMP_A(0:2) REDEF IS_TEMP BIT(1) ALIGNED,
              6667    1           2 OFFSET,
              6668                            /* byte offsets */
              6669    1             3 S UBIN INIT(0)/**/,
              6670    1             3 T UBIN INIT(0)/**/,
              6671    1             3 AUX UBIN INIT(0)/**/,
              6672    1           2 OFFSET_A(0:2) REDEF OFFSET UBIN,
              6673    1           2 OTTER_SPACE DALIGNED,
              6674                            /* pointers to OTTER space */
              6675    1             3 S$ PTR INIT(ADDR(NIL))/**/,
              6676    1             3 T$ PTR INIT(ADDR(NIL))/**/,
              6677    1             3 AUX$ PTR INIT(ADDR(NIL))/**/,
              6678    1           2 OTTER_SPACE_A$(0:2) REDEF OTTER_SPACE PTR,
              6679    1           2 PICTURE_STRING DALIGNED,
              6680                            /* pointers to PICture strings */
              6681    1             3 S$ PTR INIT(ADDR(NIL))/**/,
              6682    1             3 T$ PTR INIT(ADDR(NIL))/**/,
              6683    1             3 AUX$ PTR INIT(ADDR(NIL))/**/,
              6684    1           2 PICTURE_STRING_A$(0:2) REDEF PICTURE_STRING PTR,
              6685    1           2 TYPE,
              6686                            /* data types of operands */
              6687    1             3 S UBIN INIT(0)/**/,
              6688    1             3 T UBIN INIT(0)/**/,
              6689    1             3 AUX UBIN INIT(0)/**/,
              6690    1           2 TYPE_A(0:2) REDEF TYPE UBIN,
              6691    1           2 OP_CODE UBIN INIT(0)/**/,
              6692                            /* current op-code */
              6693    1           2 A_REG SBIN INIT(0)/**/,
              6694                            /* A-register */
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:467  
              6695    1           2 SIZE_ERR UBIN INIT(0)/**/,
              6696                            /* If 1, a "SIZE ERROR" condition has occured */
              6697    1           2 AT_END UBIN INIT(0)/**/,
              6698                            /* "AT END" flag */
              6699    1           2 ACCUM(0:7) UBIN INIT(0*0)/**/,
              6700                            /* accumulator */
              6701    1           2 DEC_ACC SBIN INIT(0)/**/,
              6702                            /* decimal position of accumulator */
              6703    1           2 NO_DATA UBIN INIT(0)/**/,
              6704                            /* no-data indicator */
              6726    1         2 MESSAGE_LINE_DAD ALIGNED,
              6728    1           3 WORD0 SBIN,
              6729    1           3 WORD0_FLAGS REDEF WORD0,
              6730    1             4 INDIRECT BIT(1) UNAL,          /* on for indirect reference */
              6731    1             4 * UBIN(4) UNAL,
              6732    1             4 IS_JUSTIFIED_RIGHT BIT(1) UNAL,
              6733    1             4 * UBIN(2) UNAL,
              6734    1             4 IS_FORM_VARIABLE BIT(1) UNAL,  /* on for FORM variable */
              6735    1             4 IS_CONSTANT BIT(1) UNAL,       /* on if CONSTANT */
              6736    1             4 DIMENSION_COUNT UBIN(2) UNAL,  /* # of dimensions */
              6737    1             4 TYPE UBIN(4) UNAL,             /* variable TYPE */
              6759    1         3 PSEUDO_CIP ALIGNED,           /* CIP descriptor */
              6761    1           4 ALPHANUMERIC,
              6762    1             5 CA,                  /* Control bits for ALPHANUMERIC */
              6763    1               6 OFFSET UBIN(1) UNAL,
              6764    1             5 * UBIN(1) UNAL,
              6765    1             5 LEN UBIN(14) UNAL,
              6766    1           4 NUMERIC REDEF ALPHANUMERIC,
              6767    1             5 CB,                  /* Control bits for BINARY */
              6768    1               6 OFFSET UBIN(1) UNAL,
              6769    1               6 MBZ UBIN(2) UNAL,
              6770    1             5 CD REDEF CB,         /* Control bits for DISPLAY */
              6771    1               6 OFFSET UBIN(1) UNAL,
              6772    1               6 SIGN UBIN(2) UNAL,
              6773    1             5 CP REDEF CB,         /* Control bits for PACKED */
              6774    1               6 OFFSET UBIN(2) UNAL,
              6775    1               6 SIGN UBIN(1) UNAL,
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:468  
              6776    1             5 LEN UBIN(5) UNAL,
              6777    1             5 * UBIN(2) UNAL,
              6778    1             5 DEC SBIN(6) UNAL,
              6783    1           4 DATA@ UBIN,
              6784    1         3 PSEUDO_CIP_A (0:1) REDEF PSEUDO_CIP UBIN ,
              6804    1           2 MESSAGE_LINE_GZ DALIGNED,
              6805    1             3 HEADER$ PTR /* Was INIT'ed to:  (ADDR(NIL))/**/,
              6806                          /* Pointer to the QI$GZ_HEADER area corresponding to
              6807                             the default MESSAGE LINE. */
              6808    1             3 START$ PTR /* Was INIT'ed to:  (ADDR(NIL))/**/,
              6809                          /* Pointer to the QI$GZ_FIELD area corresponding to
              6810                             the default MESSAGE LINE. */
              6811    1             3 STOP$ PTR /* Was INIT'ed to:  (ADDR(NIL))/**/,
              6812                          /* Pointer to the QI$GZ_FIELD area corresponding to
              6813                             the default MESSAGE LINE.  (Included for consistency.) */
              6814    1           2 GZ DALIGNED,
              6815    1             3 LAST_HEADER$ PTR /* Was INIT'ed to:  (ADDR(NIL))/**/,
              6816                            /* Pointer to the most recently allocated QI$GZ_HEADER
              6817                               area (and therefore the "highest" in memory). */
              6818    1             3 AVAILABLE$ PTR /* Was INIT'ed to:  (ADDR(NIL))/**/,
              6819                            /* Pointer to the next available spot at which a
              6820                               QI$GZ_HEADER area may reside. */
              6821    1             3 NEXT_AVAILABLE_FLDID UBIN /* Was INIT'ed to:  (0)/**/,
              6822                            /* Running count of FLDIDs:  they are allocated
              6823                               in FRame-sized chunks by QBA$ACTIVATE, and
              6824                               remain the property of a once-activated FRame,
              6825                               even if/when it's DEACTIVATEd. */
              6826    1           2 FILE_HEAD DALIGNED,
              6827    1             3 FORM$ PTR /* Was INIT'ed to:  (ADDR(NIL))/**/,
              6828                            /* Pointer to head of currently opened
              6829                               form FD chain. */
              6830    1             3 TRAN$ PTR /* Was INIT'ed to:  (ADDR(NIL))/**/,
              6831                            /* Pointer to head of currently opened
              6832                               transaction FD chain. */
              6833    1           2 FILE_HEAD_A$(0:1) REDEF FILE_HEAD PTR,
              6834    1           2 OPENED_COUNT,
              6835    1             3 FORM UBIN /* Was INIT'ed to:  (0)/**/,
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:469  
              6836    1             3 TRAN UBIN /* Was INIT'ed to:  (0)/**/,
              6837    1           2 OPENED_COUNT_A(0:1) REDEF OPENED_COUNT UBIN,
              6838    1           2 CURRENT,
              6839    1             3 FILE$ PTR DALIGNED /* Was INIT'ed to:  (ADDR(NIL))/**/,
              6840                            /* pointer to currently working file */
              6841    1             3 FORM$ REDEF FILE$ PTR,
              6842                            /* for when we know it's a form file */
              6843    1             3 TRAN$ REDEF FILE$ PTR,
              6844                            /* for when we know it's a transaction file */
              6845    1             3 FILE_STATUS$ PTR DALIGNED /* Was INIT'ed to:  (ADDR(NIL))/**/,
              6846                            /* pointer to currently working file status area */
              6847    1             3 FORM_STATUS$ REDEF FILE_STATUS$ PTR,
              6848                            /* for when we know it's a form file */
              6849    1             3 TRAN_STATUS$ REDEF FILE_STATUS$ PTR,
              6850                            /* for when we know it's a transaction file */
              6851    1             3 FRAME$ PTR DALIGNED /* Was INIT'ed to:  (ADDR(NIL))/**/,
              6852                            /* pointer to currently working FRAME block */
              6853    1             3 FRAME_STATUS$ PTR DALIGNED /* Was INIT'ed to:  (ADDR(NIL))/**/,
              6854                            /* pointer to currently working FRAME scratch area */
              6855    1             3 FRAME_INDEX UBIN /* Was INIT'ed to:  (0)/**/,
              6856                            /* index into QI$FORM_FILE.FRAME_LIST_A@P
              6857                               of QI_1.CURRENT.FRAME$ */
              6858    1             3 NODE$ PTR DALIGNED /* Was INIT'ed to:  (ADDR(NIL))/**/,
              6859                            /* pointer to currently working node block */
              6860    1             3 NODE_STATUS$ PTR DALIGNED /* Was INIT'ed to:  (ADDR(NIL))/**/,
              6861                            /* pointer to currently working node scratch area */
              6862    1           2 SPECIAL_NAMES DALIGNED,
              6863    1             3 CURRENT_FORM$ PTR /* Was INIT'ed to:  (ADDR(NIL))/**/,
              6864                            /* Pointer to data area of CURRENT-FORM variable. */
              6865    1             3 CURRENT_FRAME$ PTR /* Was INIT'ed to:  (ADDR(NIL))/**/,
              6866                            /* Pointer to data area of CURRENT-FRAME variable. */
              6867    1             3 CURRENT_FIELD$ PTR /* Was INIT'ed to:  (ADDR(NIL))/**/,
              6868                            /* Pointer to data area of CURRENT-FIELD variable. */
              6869    1             3 RETRY$ PTR DALIGNED /* Was INIT'ed to:  (ADDR(NIL))/**/,
              6870                            /* Pointer to data area of RETRY variable. */
              6871    1           2 SPECIAL_NAMES_A$(0:3) REDEF SPECIAL_NAMES PTR,
              6872                            /* For array references. */
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:470  
              6873    1           2 ERROR_STATUS UBIN /* Was INIT'ed to:  (0)/**/,
              6874                            /* binary value of error condition */
              6875    1           2 USE_DEFAULT_IO UBIN /* Was INIT'ed to:  (0)/**/,
              6876                            /* for default USE procedures, this cell contains
              6877                               INPUT or OUTPUT */
              6878    1           2 DEFAULT_USE_PROCEDURE_A@P(0:2) UBIN /* Was INIT'ed to:  (0*0)/**/,
              6879                            /* default USE procedure address:  "0" means none */
              6880    1           2 IS_DEFAULT_USE_PROC_ACTIVE_A(0:15) BIT(1) /* Was INIT'ed to: ('0'B*0)/**/
              6880                    ,
              6881                            /* activation bits for corr default USE proc */
              6882    1           2 USE_PROCEDURE@P UBIN /* Was INIT'ed to:  (0)/**/,
              6883                            /* displacement value dropped by QCU$USE
              6884                               for QCU$USE_CALL to warp to */
              6885    1           2 PREVIOUS_INTERFACE_START$ PTR /* Was INIT'ed to:  (ADDR(NIL))/**/,
              6886                            /* pointer to previous saved state/internal value s
              6887                               for master interface */
              6888    1           2 PREVIOUS_FIELD_START_INDEX UBIN /* Was INIT'ed to:  (0)/**/,
              6889                            /* index for previous interface table range */
              6890    1           2 PREVIOUS_FIELD_STOP_INDEX UBIN /* Was INIT'ed to:  (0)/**/,
              6891                            /* index for previous interface table range */
              6892    1           2 EXPAND(0:9) UBIN;
              6899            %ENDIF;
       25     6902          %QI_SWORK ( STCLASS = "STATIC SYMDEF" );
              6903            %BEGIN_MACRO ( STCLASS = STCLASS );
              6904            %SET LISTDIR = '0'B;
              6917    1     DCL 1 QI_SWORK(0:7) UBIN STATIC SYMDEF INIT(0*0)/**/;
              6924            %ENDIF;
       26     6927          %QI_SWORK_2 ( STCLASS = "STATIC SYMDEF" );
              6928            %BEGIN_MACRO ( STCLASS = STCLASS );
              6929            %SET LISTDIR = '0'B;
              6942    1     DCL 1 QI_SWORK_2(0:7) UBIN STATIC SYMDEF INIT(0*0)/**/;
              6949            %ENDIF;
       27     6952          %QI_BLANK ( STCLASS = "CONSTANT SYMDEF" );
              6953            %BEGIN_MACRO ( STCLASS = STCLASS );
              6954            %SET LISTDIR = '0'B;
              6967    1     DCL QI_BLANK CONSTANT SYMDEF UBIN BYTE ALIGNED INIT(32)/**/;
              6974            %ENDIF;
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:471  
       28     6977          %QI_MAT_MATCH ( STCLASS = "CONSTANT SYMDEF" );
              6978            %BEGIN_MACRO ( STCLASS = STCLASS );
              6979            %SET LISTDIR = '0'B;
              6992    1     DCL QI_MAT_MATCH CONSTANT SYMDEF UBIN BYTE ALIGNED INIT(1)/**/;
              6999            %ENDIF;
       29     7002          %QI_MAT_NONMATCH ( STCLASS = "CONSTANT SYMDEF" );
              7003            %BEGIN_MACRO ( STCLASS = STCLASS );
              7004            %SET LISTDIR = '0'B;
              7017    1     DCL QI_MAT_NONMATCH CONSTANT SYMDEF UBIN BYTE ALIGNED INIT(0)/**/;
              7024            %ENDIF;
       30     7027          %QI_SLASH ( STCLASS = "CONSTANT SYMDEF" );
              7028            %BEGIN_MACRO ( STCLASS = STCLASS );
              7029            %SET LISTDIR = '0'B;
              7042    1     DCL QI_SLASH CONSTANT SYMDEF UBIN BYTE ALIGNED INIT(47)/**/;
              7049            %ENDIF;
       31     7052          %QI_ZERO ( STCLASS = "CONSTANT SYMDEF" );
              7053            %BEGIN_MACRO ( STCLASS = STCLASS );
              7054            %SET LISTDIR = '0'B;
              7067    1     DCL QI_ZERO CONSTANT SYMDEF UBIN BYTE ALIGNED INIT(48)/**/;
              7074            %ENDIF;
       32     7077          %QI_BINARY_ZERO ( STCLASS = "CONSTANT SYMDEF" );
              7078            %BEGIN_MACRO ( STCLASS = STCLASS );
              7079            %SET LISTDIR = '0'B;
              7092    1     DCL QI_BINARY_ZERO CONSTANT SYMDEF UBIN BYTE ALIGNED INIT(0)/**/;
              7099            %ENDIF;
       33     7102          %QI_CLASS_ALPHA ( STCLASS = "CONSTANT SYMDEF" );
              7103            %BEGIN_MACRO ( STCLASS = STCLASS );
              7104            %SET LISTDIR = '0'B;
              7117    1     DCL QI_CLASS_ALPHA(0:255) CONSTANT SYMDEF UBIN BYTE UNAL INIT(
              7118    1         0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
              7119    1         1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
              7120    1         0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,
              7121    1         0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
              7122    1         0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
              7123    1         0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
              7124    1         0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
              7125    1         0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:472  
              7126    1                                                 )/**/;
              7133            %ENDIF;
       34     7136          %QI_CLASS_NUMERIC ( STCLASS = "CONSTANT SYMDEF" );
              7137            %BEGIN_MACRO ( STCLASS = STCLASS );
              7138            %SET LISTDIR = '0'B;
              7151    1     DCL QI_CLASS_NUMERIC(0:255) CONSTANT SYMDEF UBIN BYTE UNAL INIT(
              7152    1         0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
              7153    1         0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,
              7154    1         0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
              7155    1         0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
              7156    1         0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
              7157    1         0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
              7158    1         0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
              7159    1         0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
              7160    1                                                 )/**/;
              7167            %ENDIF;
       35     7170          %QI_OVERPUNCHED_SIGNS ( STCLASS = "CONSTANT SYMDEF" );
              7171            %BEGIN_MACRO ( STCLASS = STCLASS );
              7172            %SET LISTDIR = '0'B;
              7185    1     DCL QI_OVERPUNCHED_SIGNS(0:19) CONSTANT SYMDEF UBIN BYTE UNAL INIT(
              7186    1         123,65,66,67,
              7187    1         68,69,70,71,
              7188    1         72,73,125,74,
              7189    1         75,76,77,78,
              7190    1         79,80,81,82
              7191    1                                                 )/**/;
              7198            %ENDIF;
       36     7201          %QI_ZERO_ACCUMULATOR ( STCLASS = "CONSTANT SYMDEF" );
              7202            %BEGIN_MACRO ( STCLASS = STCLASS );
              7203            %SET LISTDIR = '0'B;
              7216    1     DCL 1 QI_ZERO_ACCUMULATOR CONSTANT SYMDEF,
              7217    1           2 *(0:6) UBIN INIT(0*0)/**/,
              7218    1           2 * BIT(16) INIT('00B0'X)/**/;
              7225            %ENDIF;
       37     7228          %QGB_PARAM ( STCLASS = "STATIC SYMDEF" );
              7229            %LSET STR=CONCAT(TEXTCHAR(STCLASS),'        ');
              7230            %IF (SUBSTR(STR,0,6)='STATIC')
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:473  
              7231             OR (SUBSTR(STR,0,8)='CONSTANT')
              7232             OR (SUBSTR(STR,0,3)='EXT');
              7233              %LSET INIT=CHARTEXT('INIT');
              7234            %ELSE;
              7236            %ENDIF;
              7237    1     DCL 1 NAME STCLASS ALIGNED,
              7238        /*K* BBUF_ - VECTOR.
              7239        Contains the size and location of the blocking buffer to be used
              7240        by the VDO packing and unpacking routines.  The buffer must be
              7241        allocated by the caller, and this field must be initialized, before
              7242        any QGB$ routines may be called.  A size of one or two FEP pages
              7243        is recommended.  The keyword used to initialize this field is BBUF.
              7244        */
              7245    1         2 BBUF_ VECTOR %INIT(VECTOR(BBUF))%CHARTEXT('/**/'),
              7246    1         2 BBUF_OFFSET$ CPTR %INIT(ADDR(NIL))%CHARTEXT('/**/'),
              7247        /*K* ERR - Contains a VLP_ERRCODE structure.  This portion of the
              7248        structure corresponds to G$TCB$ -> G$TCB.ALT$ -> G$EXCFR.TRLR.ERR.
              7249        */
              7250              %VLP_ERRCODE ( FPTN = ERR,
              7251                             STCLASS = STCLASS,
              7252                             LVL = 2,
              7253                             LAST = "," );
              7254        %LSET LISTDIR='0'B;
              7269    1   2 ERR WALIGNED,
              7283    1   3 FCG  BIT(10)INIT('0'B),
              7296    1   3 MID  BIT(5)INIT('0'B),3 MON  BIT(1)INIT('0'B),3 ERR#
              7297    1   UBIN(13)INIT(0) UNAL,3 SEV  UBIN(3)INIT(0) UNAL ,
              7299    1         2 MSG$ PTR %INIT(ADDR(NIL))%CHARTEXT('/**/'),
              7300    1         2 MSGC$ REDEF MSG$ CPTR,
              7301    1         2 MSGSZ SBIN WORD %INIT(0)%CHARTEXT('/**/'),
              7302    1         2 DVE CALIGNED,
              7303    1           3 DVBYTE UNAL,
              7304    1             4 BP BIT(1) %INIT('1'B)%CHARTEXT('/**/'),
              7305    1             4 VFC BIT(1) %INIT('0'B)%CHARTEXT('/**/'),
              7306    1             4 REREAD REDEF VFC BIT(1),
              7307    1             4 BIN BIT(1) %INIT('0'B)%CHARTEXT('/**/'),
              7308    1             4 TRANS BIT(1) %INIT('0'B)%CHARTEXT('/**/'),
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:474  
              7309    1             4 RRR BIT(1) %INIT('0'B)%CHARTEXT('/**/'),
              7310    1             4 NODAT BIT(1) %INIT('0'B)%CHARTEXT('/**/'),
              7311    1             4 DCBHDR BIT(1) %INIT('0'B)%CHARTEXT('/**/'),
              7312    1             4 CONT BIT(1) %INIT('0'B)%CHARTEXT('/**/'),
              7313        /*K* DVE.EOMCHAR - VALUE-CHAR(1).
              7314        When the VDO returned to the caller corresponds to the field in
              7315        which the activation character was typed, EOMCHAR is filled in with
              7316        the activation character; otherwise, QGB_PARAM.EOM_EOR is set. */
              7317    1           3 EOMCHAR CHAR(1) CALIGNED %INIT(BITASC('501'O))%CHARTEXT('/**/'),
              7318    1           3 VFC REDEF EOMCHAR CHAR(1) CALIGNED,
              7319    1         2 EOFNONE BIT(1) UNAL %INIT('0'B)%CHARTEXT('/**/'),
              7320    1         2 EOM_EOR BIT(1) %INIT('0'B)%CHARTEXT('/**/'),
              7321    1         2 CURRENTLY_READING BIT(1) %INIT('0'B)%CHARTEXT('/**/'),
              7322    1         2 * BIT(5) UNAL %INIT('0'B)%CHARTEXT('/**/'),
              7323    1         2 IP$ PTR %INIT(ADDR(NIL))%CHARTEXT('/**/'),
              7324    1         2 UHDR$ PTR %INIT(ADDR(NIL))%CHARTEXT('/**/'),
              7325    1         2 UHDRC$ REDEF UHDR$ CPTR,
              7326    1         2 UHDRSZ UBIN %INIT(0)%CHARTEXT('/**/'),
              7327    1         2 MRKTYP UBIN BYTE UNAL %INIT(0)%CHARTEXT('/**/'),
              7328    1         2 STR UBIN BYTE UNAL %INIT(1)%CHARTEXT('/**/'),
              7329    1         2 V$ PTR %INIT(ADDR(NIL))%CHARTEXT('/**/'),
              7330    1         2 KEY$ PTR %INIT(ADDR(NIL))%CHARTEXT('/**/'),
              7331    1         2 VSZ UBIN %INIT(0)%CHARTEXT('/**/'),
              7332        /*K* FLDID - VALUE-UBIN.
              7333        Contains the field ID reported by the most recent operation for an
              7334        ORG=FORM DCB.  It is the same as that returned in KEY if KEYTYPE=FLDID,
              7335        but is always returned here.  This is particularly useful for operations
              7336        like M$DCLFLD that have no provision for returning a key.
              7337        */
              7338    1         2 FLDID UBIN %INIT(0)%CHARTEXT('/**/'),
              7339        /*K* ACTPOS - VALUE-DEC(0-32767).
              7340        Indicates the position in the record at which activation occurred.
              7341        The first character of the record is at position one.  A value of
              7342        zero means that the activation occurred at the end of the record.
              7343        */
              7344    1         2 ACTPOS UBIN %INIT(0)%CHARTEXT('/**/'),
              7345        /*K* ARS - VALUE-UBIN.
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:475  
              7346        Contains the actual record size read (in bytes).
              7347        */
              7348    1         2 ARS UBIN %INIT(0)%CHARTEXT('/**/'),
              7349    1         2 KEYTYPE UBIN BYTE CALIGNED %INIT(0)%CHARTEXT('/**/'),
              7350    1         2 KEYSZ UBIN BYTE CALIGNED %INIT(0)%CHARTEXT('/**/');
       38     7352
       39     7353          %QI_FPT_CLOSE ( STCLASS = "CONSTANT SYMDEF" );
              7354            %BEGIN_MACRO ( STCLASS = STCLASS );
              7355            %SET LISTDIR = '0'B;
              7384    1   DCL 1 QI_FPT_CLOSE CONSTANT SYMDEF WALIGNED,
              7386    1   2 V_ VECTOR INIT(VECTOR(QI_FPT_CLOSE.V)),2 NAME_ VECTOR INIT(VECTOR(NIL)),2 ACCT_
              7386            VECTOR INIT(VECTOR(NIL)),2 SPARE1
              7387    1   VECTOR INIT(VECTOR(NIL)),2 SPARE2 VECTOR INIT(VECTOR(NIL)),
              7389    1   2 V,3 DCB# UBIN BYTE UNAL INIT(DCBNUM(NIL)),3 DISP UBIN BYTE UNAL INIT(2);
              7397            %ENDIF;
       40     7400          %QI_FPT_DBCONTROL ( STCLASS = "CONSTANT SYMDEF" );
              7401            %BEGIN_MACRO ( STCLASS = STCLASS );
              7402            %SET LISTDIR = '0'B;
              7438    1   DCL 1 QI_FPT_DBCONTROL CONSTANT SYMDEF WALIGNED,
              7442    1   2 V_ VECTOR  INIT(VECTOR(QI_FPT_DBCONTROL.V)),2 NDBCONTROL_ REDEF V_ VECTOR,
              7446    1   2 PDBCONTROL_ VECTOR  INIT(VECTOR(NIL)),
              7451    1   2 V,
              7453    1   3 DBCONTROL$ EPTR  INIT(ENTADDR(NIL));
              7462            %ENDIF;
       41     7465          %QI_FPT_DCLFLD ( STCLASS = "CONSTANT SYMDEF" );
              7466            %BEGIN_MACRO ( STCLASS = STCLASS );
              7467            %SET LISTDIR = '0'B;
              7498    1   DCL 1 QI_FPT_DCLFLD CONSTANT SYMDEF ALIGNED,
              7500    1   2 V_ VECTOR INIT(VECTOR(QI_FPT_DCLFLD.V)),
              7504    1   2 BUF_ VECTOR INIT(VECTOR(NIL)),2 FLDATR_ VECTOR INIT(VECTOR(NIL)),
              7506    1   2 V ALIGNED,3 DCB# UBIN(8)UNAL INIT(DCBNUM(NIL)),
              7510    1   3 DVBYTE,
              7514    1   4 BP BIT(1)INIT('0'B),4 VFC BIT(1)INIT('0'B),4 BIN BIT(1)INIT('0'B),4 TRANS BIT(1)
              7514            INIT('0'B),4
              7515    1  RRR BIT(1)INIT('0'B),4 NODAT BIT(1)INIT('0'B),4 * BIT(1)INIT('0'B),4 CONT BIT(1)INIT
              7515            ('0'B),3
              7516    1   LIN UBIN(16)UNAL INIT(0),3 CLM UBIN(16)UNAL INIT(0),3
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:476  
              7517    1   ID UBIN(16)INIT(0) UNAL,3 WDT UBIN(8)UNAL INIT(0),3 * BIT(8
              7518    1   )INIT('0'B);
              7526            %ENDIF;
       42     7529          %QI_VLP_FLDATR ( STCLASS = "CONSTANT SYMDEF" );
              7530            %BEGIN_MACRO ( STCLASS = STCLASS );
              7531            %SET LISTDIR = '0'B;
              7563    1  DCL 1 QI_VLP_FLDATR CONSTANT SYMDEF ALIGNED,2 GRPRND,3 * BIT(1)INIT('0'B),3 HDN BIT(
              7563            1)INIT('0'B),3 INCINT
              7564    1   BIT(1)INIT('0'B),3 DCRINT BIT(1)INIT('0'B),3 UNDSCR BIT(1)INIT('0'B),3
              7565    1   SLWBLN BIT(1)INIT('0'B),3 FSTBLN BIT(1)INIT('0'B),3 RVRVID BIT
              7566    1   (1)INIT('0'B),3 * BIT(8)INIT('0'B),  2 QLF,3 ACPALL BIT(1)INIT('0'B),3
              7567    1   PRTGRD BIT(1)INIT('0'B),3 ACPGRP BIT(1)INIT('0'B),3 ACPNMR BIT(1)INIT
              7568    1   ('0'B),3 ACPALP BIT(1)INIT('0'B),3 PRT BIT(1)INIT('0'B),3
              7569    1   MSTENT BIT(1)INIT('0'B),3 CNS BIT(1)INIT('0'B),3 * BIT(8)INIT('0'B),  2
              7570    1   ABSGRPRND UBIN BYTE UNAL INIT(7),2 * UBIN(8)UNAL INIT(0);
              7578            %ENDIF;
       43     7581          %QI_FPT_DEVICE ( STCLASS = "CONSTANT SYMDEF" );
              7582            %BEGIN_MACRO ( STCLASS = STCLASS );
              7583            %SET LISTDIR = '0'B;
              7615    1   DCL 1 QI_FPT_DEVICE CONSTANT SYMDEF WALIGNED,
              7617    1   2 V_ VECTOR INIT(VECTOR(QI_FPT_DEVICE.V)),2 TAB_ VECTOR INIT(VECTOR(NIL)),2 HDR_
              7617            VECTOR INIT(VECTOR(NIL)),
              7619    1   2 V WALIGNED,3 DCB# UBIN(8)UNAL INIT(DCBNUM(NIL)), 3 SEQ BIT(2)INIT('01'B),3
              7620    1   PAGE BIT(1)INIT('0'B),3 * BIT(5)INIT('0'B),3 SEQCOL UBIN BYTE UNAL
              7621    1   INIT(73),3 SEQID CHAR(4)INIT(' '),3 DVFC CHAR(1)INIT(BINASC(0)
              7622    1   ),3 * UBIN BYTE UNAL INIT(0),3 LINES UBIN(8)UNAL INIT(0),3 * UBIN UNAL
              7623    1   INIT(0);
              7631            %ENDIF;
       44     7634          %QI_FPT_ERASE ( STCLASS = "CONSTANT SYMDEF" );
              7635            %BEGIN_MACRO ( STCLASS = STCLASS );
              7636            %SET LISTDIR = '0'B;
              7669    1   DCL 1 QI_FPT_ERASE CONSTANT SYMDEF ALIGNED,
              7671    1   2 V_ VECTOR INIT(VECTOR(QI_FPT_ERASE.V)),
              7675    1   2 KEY_ VECTOR INIT(VECTOR(NIL)),
              7677    1   2 V ALIGNED,3 DCB# UBIN(8)UNAL INIT(DCBNUM(NIL)),3 DVBYTE,
              7681    1   4 BP BIT(1)INIT('0'B),4 VFC BIT(1)INIT('0'B),4 BIN BIT(1)INIT('0'B),4 TRANS BIT(1)
              7681            INIT('0'B),4
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:477  
              7682    1  RRR BIT(1)INIT('0'B),4 NODAT BIT(1)INIT('0'B),4 * BIT(1)INIT('0'B),4 CONT BIT(1)INIT
              7682            ('0'B),3
              7683    1   KEYTYPE UBIN BYTE CALIGNED INIT(0),3 * BIT(8)INIT('0'B),3 PRT BIT(1
              7684    1   )INIT('1'B),3 CNS BIT(1)INIT('1'B),3 * BIT(14)INIT('0'B);
              7692            %ENDIF;
       45     7695          %QI_FPT_ERRMSG ( STCLASS = "CONSTANT SYMDEF" );
              7696            %BEGIN_MACRO ( STCLASS = STCLASS );
              7697            %SET LISTDIR = '0'B;
              7725    1   DCL 1 QI_FPT_ERRMSG CONSTANT SYMDEF WALIGNED,
              7728    1   2 V_ VECTOR INIT(VECTOR(QI_FPT_ERRMSG.V)),2 CODE_ VECTOR INIT(VECTOR(NIL)),2 BUF_
              7728            VECTOR INIT(VECTOR(NIL)),2 FILENAME_
              7729    1   VECTOR INIT(VECTOR(NIL)),2 FILEACCT_ VECTOR INIT(VECTOR(NIL)),2 FILEPASS_ VECTOR
              7729            INIT(VECTOR(NIL)
              7730    1   ),2 FIELD1_ VECTOR INIT(VECTOR(NIL)),2 FIELD2_ VECTOR INIT(VECTOR(NIL)),2 FIELD3_
              7730            VECTOR INIT(VECTOR
              7731    1   (NIL)),2 RESULTS_ VECTOR INIT(VECTOR(NIL)),2 ALTCODE_ VECTOR INIT(VECTOR(NIL)),2 V,
              7735    1   3 DCB# UBIN(8)UNAL INIT(DCBNUM(NIL)),3 SUBFILE BIT(1)INIT('1'B),3
              7736    1   SUBMESS BIT(1)INIT('1'B),3 SUBLANG BIT(1)INIT('1'B),3 INCLCODE BIT(1)INIT
              7737    1   ('0'B),3 MY_LANG  BIT(1)INIT('1'B),3 SOURCE  UBIN(3)UNAL INIT(0),
              7738    1   3 LANG CHAR(1)INIT(' '),3 FLAGLEV  UBIN BYTE UNAL INIT(0);
              7746            %ENDIF;
       46     7749          %QI_FPT_EXIT ( STCLASS = "CONSTANT SYMDEF" );
              7750            %BEGIN_MACRO ( STCLASS = STCLASS );
              7751            %SET LISTDIR = '0'B;
              7779    1   DCL 1 QI_FPT_EXIT CONSTANT SYMDEF WALIGNED,
              7781    1   2 ERRCODE_ VECTOR  INIT(VECTOR(NIL)),2 V_ VECTOR  INIT(VECTOR(QI_FPT_EXIT.V)),2 V,
              7786    1   3 STEPCC UBIN BYTE UNAL  INIT(2),3 * BIT(24) INIT('0'B);
              7794            %ENDIF;
       47     7797          %QI_FPT_FDS ( STCLASS = "CONSTANT SYMDEF" );
              7798            %BEGIN_MACRO ( STCLASS = STCLASS );
              7799            %SET LISTDIR = '0'B;
              7827    1   DCL 1 QI_FPT_FDS CONSTANT SYMDEF WALIGNED,
              7830    1  2 V_ VECTOR INIT(VECTOR(QI_FPT_FDS.V)),2 RESULTS_ VECTOR INIT(VECTOR(QI_VLP_SEGMENT)
              7830            ),2 V,
              7834    1   3 PAGES UBIN INIT(0),3 * BIT(16)INIT('0'B);
              7842            %ENDIF;
       48     7845          %QI_FPT_FDS_LOAD ( STCLASS = "CONSTANT SYMDEF" );
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:478  
              7846            %BEGIN_MACRO ( STCLASS = STCLASS );
              7847            %SET LISTDIR = '0'B;
              7875    1   DCL 1 QI_FPT_FDS_LOAD CONSTANT SYMDEF WALIGNED,
              7878    1   2 V_ VECTOR INIT(VECTOR(QI_FPT_FDS_LOAD.V)),2 RESULTS_ VECTOR INIT(VECTOR(
              7878            QI_VLP_SEGMENT_LOAD)),2 V,
              7882    1   3 PAGES UBIN INIT(0),3 * BIT(16)INIT('0'B);
              7890            %ENDIF;
       49     7893          %QI_FPT_GDS ( STCLASS = "CONSTANT SYMDEF" );
              7894            %BEGIN_MACRO ( STCLASS = STCLASS );
              7895            %SET LISTDIR = '0'B;
              7925    1   DCL 1 QI_FPT_GDS CONSTANT SYMDEF WALIGNED,
              7928    1  2 V_ VECTOR INIT(VECTOR(QI_FPT_GDS.V)),2 RESULTS_ VECTOR INIT(VECTOR(QI_VLP_SEGMENT)
              7928            ),2 V,
              7932    1   3 PAGES UBIN INIT(1),3 FREE BIT(1)INIT('0'B),3 PARK BIT(1)INIT
              7933    1   ('1'B),3 IOBUF BIT(1)INIT('0'B),3 * BIT(5)INIT('0'B),3 NEXT UBIN BYTE UNAL
              7934    1   INIT(2);
              7942            %ENDIF;
       50     7945          %QI_VLP_SEGMENT ( STCLASS = "STATIC SYMDEF" );
              7946            %BEGIN_MACRO ( STCLASS = STCLASS );
              7947            %SET LISTDIR = '0'B;
              7975    1   DCL 1 QI_VLP_SEGMENT STATIC SYMDEF WALIGNED,
              7979    1   2 BASE UBIN(32)INIT(0),2 BASE$ REDEF BASE PTR,2 PAGES UBIN
              7980    1   INIT(0) ;
              7988            %ENDIF;
       51     7991          %QI_FPT_GDS_BUFFER ( STCLASS = "CONSTANT SYMDEF" );
              7992            %BEGIN_MACRO ( STCLASS = STCLASS );
              7993            %SET LISTDIR = '0'B;
              8023    1   DCL 1 QI_FPT_GDS_BUFFER CONSTANT SYMDEF WALIGNED,
              8026    1   2 V_ VECTOR INIT(VECTOR(QI_FPT_GDS_BUFFER.V)),2 RESULTS_ VECTOR INIT(VECTOR(
              8026            QI_VLP_SEGMENT_BUFFER)),2 V,
              8030    1   3 PAGES UBIN INIT(4),3 FREE BIT(1)INIT('0'B),3 PARK BIT(1)INIT
              8031    1   ('1'B),3 IOBUF BIT(1)INIT('0'B),3 * BIT(5)INIT('0'B),3 NEXT UBIN BYTE UNAL
              8032    1   INIT(1);
              8040            %ENDIF;
       52     8043          %QI_VLP_SEGMENT_BUFFER ( STCLASS = "STATIC SYMDEF" );
              8044            %BEGIN_MACRO ( STCLASS = STCLASS );
              8045            %SET LISTDIR = '0'B;
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:479  
              8073    1   DCL 1 QI_VLP_SEGMENT_BUFFER STATIC SYMDEF WALIGNED,
              8077    1   2 BASE UBIN(32)INIT(0),2 BASE$ REDEF BASE PTR,2 PAGES UBIN
              8078    1   INIT(0) ;
              8086            %ENDIF;
       53     8089          %QI_FPT_GDS_LOAD ( STCLASS = "CONSTANT SYMDEF" );
              8090            %BEGIN_MACRO ( STCLASS = STCLASS );
              8091            %SET LISTDIR = '0'B;
              8121    1   DCL 1 QI_FPT_GDS_LOAD CONSTANT SYMDEF WALIGNED,
              8124    1   2 V_ VECTOR INIT(VECTOR(QI_FPT_GDS_LOAD.V)),2 RESULTS_ VECTOR INIT(VECTOR(
              8124            QI_VLP_SEGMENT_LOAD)),2 V,
              8128    1   3 PAGES UBIN INIT(1),3 FREE BIT(1)INIT('0'B),3 PARK BIT(1)INIT
              8129    1   ('1'B),3 IOBUF BIT(1)INIT('0'B),3 * BIT(5)INIT('0'B),3 NEXT UBIN BYTE UNAL
              8130    1   INIT(1);
              8138            %ENDIF;
       54     8141          %QI_VLP_SEGMENT_LOAD ( STCLASS = "STATIC SYMDEF" );
              8142            %BEGIN_MACRO ( STCLASS = STCLASS );
              8143            %SET LISTDIR = '0'B;
              8171    1   DCL 1 QI_VLP_SEGMENT_LOAD STATIC SYMDEF WALIGNED,
              8175    1   2 BASE UBIN(32)INIT(0),2 BASE$ REDEF BASE PTR,2 PAGES UBIN
              8176    1   INIT(0) ;
              8184            %ENDIF;
       55     8187          %QI_FPT_GLINEATTR ( STCLASS = "CONSTANT SYMDEF" );
              8188            %BEGIN_MACRO ( STCLASS = STCLASS );
              8189            %SET LISTDIR = '0'B;
              8219    1   DCL 1 QI_FPT_GLINEATTR CONSTANT SYMDEF ALIGNED,
              8221    1   2 V_ VECTOR INIT(VECTOR(QI_FPT_GLINEATTR.V)),
              8225    1   2 LINEATTR_ VECTOR INIT(VECTOR(NIL)),
              8227    1   2 V ALIGNED,3 DCB# UBIN(8)UNAL INIT(DCBNUM(NIL)),3 * BIT(8)INIT('0'B);
              8235            %ENDIF;
       56     8238          %QI_FPT_INT ( STCLASS = "CONSTANT SYMDEF" );
              8239            %BEGIN_MACRO ( STCLASS = STCLASS );
              8240            %SET LISTDIR = '0'B;
              8276    1   DCL 1 QI_FPT_INT CONSTANT SYMDEF WALIGNED,
              8280    1   2 V_ VECTOR  INIT(VECTOR(QI_FPT_INT.V)),2 NINT_ REDEF V_ VECTOR,
              8284    1   2 PINT_ VECTOR  INIT(VECTOR(NIL)),
              8289    1   2 V,
              8291    1   3 INT$ EPTR  INIT(ENTADDR(NIL));
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:480  
              8300            %ENDIF;
       57     8303          %QI_FPT_LDTRC ( STCLASS = "CONSTANT SYMDEF" );
              8304            %BEGIN_MACRO ( STCLASS = STCLASS );
              8305            %SET LISTDIR = '0'B;
              8333    1   DCL 1 QI_FPT_LDTRC CONSTANT SYMDEF WALIGNED,
              8335    1   2 NAME_ VECTOR INIT(VECTOR(NIL)),2 ACCT_ VECTOR INIT(VECTOR(NIL)),2 PASS_ VECTOR
              8335            INIT(VECTOR(NIL)),2 PSN_
              8336    1   VECTOR INIT(VECTOR(NIL)),2 CMD_ VECTOR INIT(VECTOR(NIL)),2 V_ VECTOR INIT(VECTOR(
              8336            QI_FPT_LDTRC.V)),2 V,
              8341    1   3 DISP UBIN BYTE UNAL INIT(2),3 * BIT(7)INIT('0'B),3
              8342    1   NO_MICROFPL BIT(1) UNAL INIT('0'B),3 * BIT(16)INIT('0'B);
              8350            %ENDIF;
       58     8353          %QI_FPT_MDFFLD ( STCLASS = "CONSTANT SYMDEF" );
              8354            %BEGIN_MACRO ( STCLASS = STCLASS );
              8355            %SET LISTDIR = '0'B;
              8387    1   DCL 1 QI_FPT_MDFFLD CONSTANT SYMDEF ALIGNED,
              8389    1   2 V_ VECTOR INIT(VECTOR(QI_FPT_MDFFLD.V)),
              8393    1   2 BUF_ VECTOR INIT(VECTOR(NIL)),2 KEY_ VECTOR INIT(VECTOR(NIL)),2 FLDATR_ VECTOR
              8393            INIT(VECTOR(NIL)),
              8395    1   2 V ALIGNED,3 DCB# UBIN(8)UNAL INIT(DCBNUM(NIL)),3 * BIT(8)INIT('0'B),3 DVBYTE,
              8399    1   4 BP BIT(1)INIT('0'B),4 VFC BIT(1)INIT('0'B),4 BIN BIT(1)INIT('0'B),4 TRANS BIT(1)
              8399            INIT('0'B),4
              8400    1  RRR BIT(1)INIT('0'B),4 NODAT BIT(1)INIT('0'B),4 * BIT(1)INIT('0'B),4 CONT BIT(1)INIT
              8400            ('0'B),3
              8401    1   KEYTYPE UBIN BYTE CALIGNED INIT(0),3 SETGRPRND BIT(1)INIT('1'B),3
              8402    1   SETQLF BIT(1)INIT('0'B),3 * UBIN(14)UNAL INIT(0);
              8410            %ENDIF;
       59     8413          %QI_FPT_OPEN ( STCLASS = "CONSTANT SYMDEF" );
              8414            %BEGIN_MACRO ( STCLASS = STCLASS );
              8415            %SET LISTDIR = '0'B;
              8445    1   DCL 1 QI_FPT_OPEN CONSTANT SYMDEF WALIGNED,
              8447    1   2 V_ VECTOR INIT(VECTOR(QI_FPT_OPEN.V)),2 HMI_ VECTOR INIT(VECTOR(NIL)),2 LOGON_
              8447            VECTOR INIT(VECTOR(NIL)),2 WINDOW_
              8448    1  VECTOR INIT(VECTOR(NIL)),2 NAME_ VECTOR INIT(VECTOR(NIL)),2 WSN_ VECTOR INIT(VECTOR(
              8448            NIL)),2 ACCT_ VECTOR
              8449    1  INIT(VECTOR(NIL)),2 ACCESS_ VECTOR INIT(VECTOR(NIL)),2 TAB_ VECTOR INIT(VECTOR(NIL))
              8449            ,2 HDR_ VECTOR INIT
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:481  
              8450    1   (VECTOR(NIL)),2 SPARE2 VECTOR INIT(VECTOR(NIL)),2 SPARE3 VECTOR INIT(VECTOR(NIL)),2
              8450            SPARE4 VECTOR INIT(VECTOR
              8451    1   (NIL)),
              8453    1   2 V,3 DCB# UBIN BYTE UNAL INIT(DCBNUM(NIL)),3 INITZ,4 SCRUB BIT(1)INIT('1'B),4
              8453            REASSIGN BIT
              8454    1   (1)INIT('0'B),3 SETDCB BIT(1)INIT('0'B),3 * BIT(1)INIT('0'B),3 DISP UBIN(4)UNAL
              8455    1   INIT(2),3 ASN UBIN(8)INIT(1) UNAL,3 KEYTYPE UBIN(8)UNAL INIT(0),3
              8456    1   ORG UBIN(8)INIT(0) UNAL,3 DVFC CHAR(1)INIT(BINASC(0)),3 RES CHAR(4)INIT(' '
              8457    1   ),3 LINES UBIN WORD INIT(0),3 RECL UBIN WORD INIT(0) UNAL,3 EVENT
              8458    1   SBIN WORD INIT(0);
              8466            %ENDIF;
       60     8469          %QI_FPT_PROMPT ( STCLASS = "CONSTANT SYMDEF" );
              8470            %BEGIN_MACRO ( STCLASS = STCLASS );
              8471            %SET LISTDIR = '0'B;
              8503    1   DCL 1 QI_FPT_PROMPT CONSTANT SYMDEF ALIGNED,
              8505    1   2 V_ VECTOR INIT(VECTOR(QI_FPT_PROMPT.V)),
              8509    1   2 PROMPT_ VECTOR INIT(VECTOR(NIL)),
              8511    1   2 V ALIGNED,3 DCB# UBIN(8)UNAL INIT(DCBNUM(NIL)),3 * BIT(8)INIT('0'B),3 DVBYTE#,4 *
              8511            BIT(1)INIT
              8512    1   ('0'B),4 VFC BIT(1)INIT('1'B),4 BIN BIT(1)INIT('0'B),4 TRANS
              8513    1   BIT(1)INIT('0'B),4 * BIT(4)INIT('0'B),3 * BIT(8)INIT('0'B);
              8521            %ENDIF;
       61     8524          %QI_FPT_READ ( STCLASS = "CONSTANT SYMDEF" );
              8525            %BEGIN_MACRO ( STCLASS = STCLASS );
              8526            %SET LISTDIR = '0'B;
              8554    1   DCL 1 QI_FPT_READ CONSTANT SYMDEF WALIGNED,
              8556    1   2 V_ VECTOR INIT(VECTOR(QI_FPT_READ.V)),2 KEY_ VECTOR INIT(VECTOR(NIL)),2 BUF_
              8556            VECTOR INIT(VECTOR(NIL)),2 CG_ VECTOR
              8557    1   INIT(VECTOR(NIL)),2 SPARE2 VECTOR INIT(VECTOR(NIL)),
              8559    1   2 V,3 DCB# UBIN(8)UNAL INIT(DCBNUM(NIL)),3 KEYS BIT(1)INIT('0'B),3 KEYR BIT(1)INIT(
              8559            '0'B
              8560    1   ),3 WAIT BIT(1)INIT('1'B),3 BRKABLE BIT(1)INIT('0'B),3 * BIT(1)INIT('0'B),3
              8561    1   READMLT BIT(1)INIT('0'B),3 * BIT(1)INIT('0'B),3 EVENT SBIN INIT(0),3 DVBYTE,4
              8562    1   * BIT(1)INIT('0'B),4 REREAD BIT(1)INIT('0'B),4 BIN BIT(1)INIT('0'B),4
              8563    1   TRANS BIT(1)INIT('0'B),4 RRR BIT(1)INIT('0'B),4 NODAT BIT(1)INIT('0'B),4
              8564    1   PAGHDNTYP UBIN(1)UNAL INIT(0),4 CONT BIT(1)INIT('0'B),3 KEYTYPE UBIN
              8565    1   BYTE UNAL INIT(0);
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:482  
              8573            %ENDIF;
       62     8576          %QI_VLP_CG ( STCLASS = "CONSTANT SYMDEF" );
              8577            %BEGIN_MACRO ( STCLASS = STCLASS );
              8578            %SET LISTDIR = '0'B;
              8604    1   DCL 1 QI_VLP_CG CONSTANT SYMDEF ALIGNED,
              8608    1   2 STATION# CHAR(8)INIT(' ')/**/,2 MSGTYP# CHAR(8)INIT(' ')/**/,2 CTL,
              8609    1   3 * BIT(16)INIT('0'B)/**/,2 MSGID# UBIN(32)INIT(0)/**/,2 * UBIN INIT(0)
              8610    1   /**/ ;
              8618            %ENDIF;
       63     8621          %QI_FPT_RLSFLD ( STCLASS = "CONSTANT SYMDEF" );
              8622            %BEGIN_MACRO ( STCLASS = STCLASS );
              8623            %SET LISTDIR = '0'B;
              8654    1   DCL 1 QI_FPT_RLSFLD CONSTANT SYMDEF ALIGNED,
              8656    1   2 V_ VECTOR INIT(VECTOR(QI_FPT_RLSFLD.V)),
              8660    1   2 KEY_ VECTOR INIT(VECTOR(NIL)),
              8662    1   2 V ALIGNED,3 DCB# UBIN(8)UNAL INIT(DCBNUM(NIL)),3 DVBYTE,
              8666    1   4 BP BIT(1)INIT('0'B),4 VFC BIT(1)INIT('0'B),4 BIN BIT(1)INIT('0'B),4 TRANS BIT(1)
              8666            INIT('0'B),4
              8667    1  RRR BIT(1)INIT('0'B),4 NODAT BIT(1)INIT('0'B),4 * BIT(1)INIT('0'B),4 CONT BIT(1)INIT
              8667            ('0'B),3
              8668    1   KEYTYPE UBIN BYTE CALIGNED INIT(0),3 * BIT(8)INIT('0'B);
              8676            %ENDIF;
       64     8679          %QI_FPT_SLCFLD ( STCLASS = "CONSTANT SYMDEF" );
              8680            %BEGIN_MACRO ( STCLASS = STCLASS );
              8681            %SET LISTDIR = '0'B;
              8712    1   DCL 1 QI_FPT_SLCFLD CONSTANT SYMDEF ALIGNED,
              8714    1   2 V_ VECTOR INIT(VECTOR(QI_FPT_SLCFLD.V)),
              8718    1   2 KEY_ VECTOR INIT(VECTOR(NIL)),
              8720    1   2 V ALIGNED,3 DCB# UBIN(8)UNAL INIT(DCBNUM(NIL)),3 DVBYTE,
              8724    1   4 BP BIT(1)INIT('0'B),4 VFC BIT(1)INIT('0'B),4 BIN BIT(1)INIT('0'B),4 TRANS BIT(1)
              8724            INIT('0'B),4
              8725    1  RRR BIT(1)INIT('0'B),4 NODAT BIT(1)INIT('0'B),4 * BIT(1)INIT('0'B),4 CONT BIT(1)INIT
              8725            ('0'B),3
              8726    1   KEYTYPE UBIN BYTE CALIGNED INIT(0),3 * BIT(8)INIT('0'B);
              8734            %ENDIF;
       65     8737          %QI_FPT_TIME ( STCLASS = "CONSTANT SYMDEF" );
              8738            %BEGIN_MACRO ( STCLASS = STCLASS );
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:483  
              8739            %SET LISTDIR = '0'B;
              8768    1   DCL 1 QI_FPT_TIME CONSTANT SYMDEF WALIGNED,
              8771    1   2 V_ VECTOR INIT(VECTOR(QI_FPT_TIME.V)),2 DATE_ VECTOR INIT(VECTOR(NIL)),2 TIME_
              8771            VECTOR INIT
              8772    1   (VECTOR(NIL)),2 DAY_ VECTOR INIT(VECTOR(NIL)),2 TSTAMP_ VECTOR INIT(VECTOR(NIL)),2
              8773    1   V,
              8777    1   3 SOURCE UBIN(8)UNAL INIT(0),3 DEST UBIN(8)UNAL INIT(2);
              8785            %ENDIF;
       66     8788          %QI_FPT_TRAP ( STCLASS = "CONSTANT SYMDEF" );
              8789            %BEGIN_MACRO ( STCLASS = STCLASS );
              8790            %SET LISTDIR = '0'B;
              8818    1   DCL 1 QI_FPT_TRAP CONSTANT SYMDEF WALIGNED,2 NTC_ VECTOR INIT(VECTOR(
              8818            QI_VLP_TRAP_CONDITIONS)),2 PTC_ VECTOR INIT(VECTOR(NIL));
              8826            %ENDIF;
       67     8829          %QI_VLP_TRAP_CONDITIONS ( STCLASS = "CONSTANT SYMDEF" );
              8830            %BEGIN_MACRO ( STCLASS = STCLASS );
              8831            %SET LISTDIR = '0'B;
              8869    1   DCL 1 QI_VLP_TRAP_CONDITIONS CONSTANT SYMDEF WALIGNED,2 TRAP$ EPTR INIT(ENTADDR(NIL
              8869            )),
              8889    1   2 FLTFLG,
              8891    1   3 IGN_IO  BIT(1)INIT('0'B),3 MCL  BIT(1)INIT('0'B),3
              8892    1   TRACE  BIT(1)INIT('0'B),3 NO_SIP  BIT(1)INIT('1'B),3 TROT BIT(1)INIT('0'B),
              8893    1   3 UNIMPL  BIT(1)INIT('1'B),3 INT_REG_OV  BIT(1)INIT('0'B),3
              8894    1   S_DBZ  BIT(1)INIT('0'B),3 S_EXP_OV  BIT(1)INIT('0'B),3 STK_UF
              8895    1   BIT(1)INIT('0'B),3 STK_OV  BIT(1)INIT('0'B),3 * BIT(1)INIT('0'B),3
              8896    1   REMOTE_DESC  BIT(1)INIT('1'B),3 PRIV  BIT(1)INIT('1'B),3
              8897    1   MEM_PROT  BIT(1)INIT('1'B),3 INT_UR  BIT(1)INIT('1'B),3 PROG_ERR
              8898    1   BIT(1)INIT('1'B),3 INT_MBE  BIT(1)INIT('0'B),3 * BIT(1)INIT('0'B),3
              8899    1   S_EXP_UF  BIT(1)INIT('0'B),3 S_PROG_ERR  BIT(1)INIT('0'B),3
              8900    1   S_SIGNIF  BIT(1)INIT('0'B),3 S_PRECISION  BIT(1)INIT('0'B),3 EXT_UR  BIT
              8901    1   (1)INIT('1'B),3 EXT_MBE  BIT(1)INIT('0'B),3 C_DBZ  BIT(1)INIT('1'B
              8902    1   ),3 C_SPEC  BIT(1)INIT('1'B),3 C_CHAR  BIT(1)INIT('1'B),3
              8903    1   C_TRUNC  BIT(1)INIT('0'B),3 C_OV  BIT(1)INIT('0'B),3 CIP_QLT
              8904    1   BIT(1)INIT('0'B),3 SIP_QLT  BIT(1)INIT('0'B),3 EXT_PROT  BIT(1)INIT
              8905    1   ('0'B),3 S_ARG  BIT(1)INIT('0'B),
              8907    1   3 *(0:13)BIT(1)INIT('0'B*0) ,
              8937    1   2 M1,
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:484  
              8939    1   3 * BIT(8) INIT('0'B),3 J BIT(1)  INIT('0'B),3 R1_OV BIT(1)  INIT('0'B
              8940    1   ),3 R2_OV BIT(1)  INIT('0'B),3 R3_OV BIT(1)  INIT('0'B),3
              8941    1   R4_OV BIT(1)  INIT('0'B),3 R5_OV BIT(1)  INIT('0'B),3
              8942    1   R6_OV BIT(1)  INIT('0'B),3 R7_OV BIT(1)  INIT('0'B) ,
              8944    1   2 M2 BIT(16)INIT('0'B),
              8961    1   2 M3,
              8963    1   3 * BIT(8) INIT('0'B),3 CIP_OV BIT(1)  INIT('0'B),3 CIP_TR BIT(1)  INIT
              8964    1   ('0'B),3 RFU BIT(6) INIT('0'B) ,
              8982    1   2 M4,
              8984    1   3 * BIT(8) INIT('0'B),3 RT BIT(1)  INIT('0'B),3 * BIT(1) INIT('0'B),3
              8985    1   SA1_ML BIT(1)  INIT('0'B),3 SA1_AL BIT(1)  INIT('0'B),3
              8986    1   SA2_ML BIT(1)  INIT('0'B),3 SA2_AL BIT(1)  INIT('0'B),3 SA3_ML BIT(1)
              8987    1    INIT('0'B),3 SA3_AL BIT(1)  INIT('0'B) ,
              9005    1   2 M5,
              9007    1   3 * BIT(8) INIT('0'B),3 EUM BIT(1)  INIT('0'B),3 * BIT(1) INIT('0'B),3
              9008    1   SEM BIT(1)  INIT('0'B),3 PEM BIT(1)  INIT('0'B),3 RFU BIT(4) INIT('0'B) ,
              9010    1   2 M6 BIT(16)INIT('0'B),2 M7 BIT(16)INIT('0'B);
              9018            %ENDIF;
       68     9021          %QI_FPT_TRMATTR ( STCLASS = "CONSTANT SYMDEF" );
              9022            %BEGIN_MACRO ( STCLASS = STCLASS );
              9023            %SET LISTDIR = '0'B;
              9053    1   DCL 1 QI_FPT_TRMATTR CONSTANT SYMDEF ALIGNED,
              9055    1   2 V_ VECTOR INIT(VECTOR(QI_FPT_TRMATTR.V)),
              9059    1   2 TRMATTR_ VECTOR INIT(VECTOR(NIL)),
              9061    1   2 V ALIGNED,3 DCB# UBIN(8)UNAL INIT(DCBNUM(NIL)),3 * BIT(8)INIT('0'B);
              9069            %ENDIF;
       69     9072          %QI_FPT_TRMCTL ( STCLASS = "CONSTANT SYMDEF" );
              9073            %BEGIN_MACRO ( STCLASS = STCLASS );
              9074            %SET LISTDIR = '0'B;
              9105    1   DCL 1 QI_FPT_TRMCTL CONSTANT SYMDEF ALIGNED,
              9107    1   2 V_ VECTOR INIT(VECTOR(QI_FPT_TRMCTL.V)),
              9111    1   2 TRMCTL_ VECTOR INIT(VECTOR(NIL)),
              9113    1   2 V ALIGNED,3 DCB# UBIN(8)UNAL INIT(DCBNUM(NIL)),3 VLPTYPE UBIN(8)UNAL INIT(0
              9114    1   ),3 * UBIN WORD UNAL INIT(0);
              9122            %ENDIF;
       70     9125          %QI_VLP_TRMCTL ( STCLASS = "CONSTANT SYMDEF" );
              9126            %BEGIN_MACRO ( STCLASS = STCLASS );
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:485  
              9127            %SET LISTDIR = '0'B;
              9158    1   DCL 1 QI_VLP_TRMCTL CONSTANT SYMDEF ALIGNED, 2 TABSIM BIT(2)INIT('01'B),2
              9158            TABRELATIVE BIT(2)INIT
              9159    1   ('01'B),2 SPACEINSERT BIT(2)INIT('01'B),2 SENDBKSPACE BIT(2)INIT
              9160    1   ('01'B), 2 DISPINPUT BIT(2)INIT('01'B),2 PARITYCHECK BIT(2)INIT
              9161    1   ('01'B),2 * BIT(2)INIT('01'B),2 OUTPUTDISCARD BIT(2)INIT('01'B), 2
              9162    1   UPPERCASE BIT(2)INIT('01'B),2 LOWERCASE BIT(2)INIT('01'B),2
              9163    1   FULLDUXPAPERTAPE BIT(2)INIT('01'B),2 HALFDUXPAPERTAPE BIT(2)INIT('01'B
              9164    1   ), 2 ACTONTRN BIT(2)INIT('01'B),2 APLLCNRM BIT(2)INIT('01'B),2
              9165    1   RETYPOVR BIT(2)INIT('01'B),2 EDITOVR BIT(2)INIT('01'B), 2
              9166    1   SCROLL BIT(2)INIT('01'B),2 PAGEHALT BIT(2)INIT('01'B),2 PRINTHALT BIT(2
              9167    1   )INIT('01'B),2 RELPAGE BIT(2)INIT('01'B), 2 SIMPERF BIT(2)INIT('01'B
              9168    1   ),2 TRUNCATE BIT(2)INIT('01'B),2 NOOPTMIZ BIT(2)INIT('01'B),2
              9169    1   WRAPPAGE BIT(2)INIT('01'B), 2 SINPUTSZ UBIN(8)UNAL INIT(255), 2
              9170    1   BREAKCOUNT UBIN(8)UNAL INIT(255),2 BREAKCOUNT# REDEF BREAKCOUNT UBIN(8)UNAL, 2
              9171    1   HSCROLL BIT(2)INIT('01'B),2 INSERTMODE BIT(2)INIT('01'B),2 MSGHALT
              9172    1   BIT(2)INIT('01'B),2 ENBENTEXTSRDCHR BIT(2)INIT('01'B), 2 MSGLINE BIT(2
              9173    1   )INIT('01'B),2 C00FPT BIT(1)INIT('1'B),2 TRNUSRINPFNC BIT(2)INIT('01'B),2 * UBIN(3)
              9174    1   UNAL INIT(7),2 WORDWRAPCLM UBIN BYTE UNAL INIT(255),2 AUTOTABCLM UBIN BYTE
              9175    1   UNAL INIT(255),2 HSMARGIN UBIN BYTE UNAL INIT(255),2 HSSHIFT UBIN BYTE
              9176    1   UNAL INIT(255), 2 PARKCURSOR BIT(2)INIT('01'B),2 CURSORREAD BIT(2
              9177    1   )INIT('01'B),2 KEEPTYPAHD BIT(2)INIT('01'B),2 AUTOCURSOR BIT(2)INIT
              9178    1   ('01'B), 2 ADJTOPLFT BIT(2)INIT('01'B),2 * BIT(2)INIT('11'B),2 * BIT(2)INIT
              9179    1   ('11'B),2 * BIT(2)INIT('11'B);
              9187            %ENDIF;
       71     9190          %QI_FPT_WAIT ( STCLASS = "CONSTANT SYMDEF" );
              9191            %BEGIN_MACRO ( STCLASS = STCLASS );
              9192            %SET LISTDIR = '0'B;
              9219    1   DCL 1 QI_FPT_WAIT CONSTANT SYMDEF WALIGNED,
              9222    1   2 V_ VECTOR INIT(VECTOR(QI_FPT_WAIT.V)),2 UNITS  VECTOR INIT(VECTOR(NIL)),2 UETIME
              9222            VECTOR INIT
              9223    1   (VECTOR(NIL)),2 V,
              9227    1   3 MODE  UBIN(2)UNAL INIT(0),3 UTYPE  UBIN(2)UNAL INIT(1),3 * BIT(12)INIT
              9228    1   ('0'B);
              9236            %ENDIF;
       72     9239          %QI_FPT_WRITE ( STCLASS = "CONSTANT SYMDEF" );
              9240            %BEGIN_MACRO ( STCLASS = STCLASS );
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:486  
              9241            %SET LISTDIR = '0'B;
              9269    1   DCL 1 QI_FPT_WRITE CONSTANT SYMDEF WALIGNED,
              9271    1   2 V_ VECTOR INIT(VECTOR(QI_FPT_WRITE.V)),2 KEY_ VECTOR INIT(VECTOR(NIL)),2 BUF_
              9271            VECTOR INIT(VECTOR(NIL)),2 CG_ VECTOR
              9272    1   INIT(VECTOR(NIL)),2 SPARE2 VECTOR INIT(VECTOR(NIL)),
              9274    1   2 V,3 DCB# UBIN(8)UNAL INIT(DCBNUM(NIL)),3 EOM BIT(1)INIT('0'B),3 KEYTYPE UBIN(7)
              9274            UNAL INIT
              9275    1   (0),3 EVENT SBIN INIT(0),3 DVBYTE,4 BP BIT(1)INIT('0'B),4 VFC BIT
              9276    1   (1)INIT('0'B),4 BIN BIT(1)INIT('0'B),4 TRANS BIT(1)INIT('0'B),4 RRR BIT
              9277    1   (1)INIT('0'B),4 NODAT BIT(1)INIT('0'B),4 PAGHDNTYP UBIN(1)UNAL INIT(0),4
              9278    1   CONT BIT(1)INIT('0'B),3 EOMCHAR CHAR(1)INIT(' ');
              9286            %ENDIF;
       73     9289          %QI_FPT_XBREAK ( STCLASS = "CONSTANT SYMDEF" );
              9290            %BEGIN_MACRO ( STCLASS = STCLASS );
              9291            %SET LISTDIR = '0'B;
              9319    1   DCL 1 QI_FPT_XBREAK CONSTANT SYMDEF WALIGNED,2 VLP_XBREAK_ VECTOR INIT(VECTOR(
              9319            QI_VLP_XBREAK));
              9327            %ENDIF;
       74     9330          %QI_VLP_XBREAK ( STCLASS = "STATIC SYMDEF" );
              9331            %BEGIN_MACRO ( STCLASS = STCLASS );
              9332            %SET LISTDIR = '0'B;
              9359    1  DCL 1 QI_VLP_XBREAK STATIC SYMDEF WALIGNED,2 IC SBIN(32)INIT(0),2 IC$ REDEF IC PTR,2
              9359            OLDIC SBIN(32)INIT
              9360    1   (0),2 OLDIC$ REDEF OLDIC PTR,2 REPLACED REDEF OLDIC,3 * BIT(16),3 INSTR UBIN(16),2
              9360            AUTO$ PTR
              9361    1   INIT(ADDR(NIL)),2 TRAP# UBIN(8)UNAL INIT(0),2 TT BIT(1)INIT('0'B),2 GOIC BIT(1
              9362    1   )INIT('0'B),2 GOBREAK BIT(1)INIT('0'B),2 TC BIT(1)INIT('0'B),2 * BIT(4)INIT('0'B
              9363    1   );
              9371            %ENDIF;
       75     9374
       76     9375        /*
       77     9376           BASED FPL-program-templating stuff.
       78     9377           (Put here only so that !DRAW.X QI_DATA_D.xxxOU... will look neat.)
       79     9378        */
       80     9379          %QI$FPL;
              9380            %BEGIN_MACRO ( STCLASS = STCLASS );
              9381            %SET LISTDIR = '0'B;
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:487  
              9409    1     DCL 1 QI$OP_SEQUENCE BASED ALIGNED,
              9410    1           2 CODE UBIN,
              9411                          /* Op-code. */
              9412    1           2 OPERAND_A@P(0:0) UBIN;
              9413                          /* Operands:  generally a list of DADs. */
              9438    1     DCL 1 QI$OP_ABORT BASED ALIGNED,
              9439    1           2 CODE UBIN,
              9440    1           2 OPERAND@P UBIN,
              9441    1           2 NEXT_CODE@P UBIN;
              9466    1     DCL 1 QI$OP_ACCEPT BASED ALIGNED,
              9467    1           2 CODE UBIN,
              9468    1           2 TYPE UBIN(3) UNAL,
              9469    1           2 FIELD_COUNT UBIN(13) UNAL,
              9470    1           2 DATANAME@P UBIN,
              9471    1           2 FIELD_A@P(0:0) REDEF DATANAME@P UBIN,
              9472    1           2 NEXT_CODE@P UBIN;
              9497    1     DCL 1 QI$OP_ACTIVATE BASED ALIGNED,
              9498    1           2 CODE UBIN,
              9499    1           2 OPERAND_COUNT UBIN,
              9500    1           2 OPERAND_A@P(0:0) UBIN;
              9525    1     DCL 1 QI$OP_ADD BASED ALIGNED,
              9526    1           2 CODE UBIN,
              9527    1           2 NUMERIC_SOURCE@P UBIN,
              9528    1           2 NUMERIC_TARGET@P UBIN,
              9529    1           2 NEXT_CODE@P UBIN;
              9554    1     DCL 1 QI$OP_ADDX BASED ALIGNED,
              9555    1           2 CODE UBIN,
              9556    1           2 ARGUMENT_COUNT UBIN,
              9557    1           2 ARGUMENT_A@P(0:0) UBIN;
              9582    1     DCL 1 QI$OP_ALL_LITERAL BASED ALIGNED,
              9583    1           2 CODE UBIN,
              9584    1           2 ALL_LITERAL_SOURCE@P UBIN,
              9585    1           2 TEMP_DISPLAY_TARGET@P UBIN,
              9586    1           2 NEXT_CODE@P UBIN;
              9611    1     DCL 1 QI$OP_APPLY BASED ALIGNED,
              9612    1           2 CODE UBIN,
              9613    1           2 VISUAL_ATTRIBUTE UBIN,
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:488  
              9614    1           2 OPERAND_COUNT UBIN,
              9615    1           2 OPERAND_A@P(0:0) UBIN;
              9640    1     DCL 1 QI$OP_CALL BASED ALIGNED,
              9641    1           2 CODE UBIN,
              9642    1           2 EPTR$ EPTR,
              9643    1           2 PTR$ REDEF EPTR$ PTR,
              9644    1           2 DESCRIPTOR_LIST,
              9645    1             3 ARGUMENT_COUNT UBIN(8) UNAL,
              9646    1             3 DESCRIPTOR_COUNT UBIN(8) UNAL,
              9647    1           2 ARGUMENT_A@P(0:0) UBIN;
              9672    1     DCL 1 QI$OP_CLEAR BASED ALIGNED,
              9673    1           2 CODE UBIN,
              9674    1           2 IS_CLEAR_ALL BIT(1) UNAL,
              9675    1           2 IO_FLAGS,
              9676    1             3 IS_OUTPUT BIT(1) UNAL,
              9677    1             3 IS_INPUT BIT(1) UNAL,
              9678    1           2 IO_VALUE REDEF IO_FLAGS UBIN(2) UNAL,
              9679    1           2 OPERAND_COUNT UBIN(13) UNAL,
              9680    1           2 OPERAND_A@P(0:0) UBIN;
              9705    1     DCL 1 QI$OP_CLOSE BASED ALIGNED,
              9706    1           2 CODE UBIN,
              9707    1           2 FILE_COUNT UBIN,
              9708    1           2 OPERAND_A(0:0),
              9709    1             3 FUNNY_ZERO_WORD UBIN,
              9710    1             3 FILE@P UBIN;
              9735    1     DCL 1 QI$OP_CNVBBX BASED ALIGNED,
              9736    1           2 CODE UBIN,
              9737    1           2 TEMP_BINARY_SOURCE@P UBIN,
              9738    1           2 BINARY_TARGET@P UBIN,
              9739    1           2 NEXT_CODE@P UBIN;
              9764    1     DCL 1 QI$OP_CNVBN BASED ALIGNED,
              9765    1           2 CODE UBIN,
              9766    1           2 BINARY_SOURCE@P UBIN,
              9767    1           2 TEMP_DISPLAY_TARGET@P UBIN,
              9768    1           2 NEXT_CODE@P UBIN;
              9793    1     DCL 1 QI$OP_CNVBNX BASED ALIGNED,
              9794    1           2 CODE UBIN,
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:489  
              9795    1           2 TEMP_BINARY_SOURCE@P UBIN,
              9796    1           2 DISPLAY_TARGET@P UBIN,
              9797    1           2 NEXT_CODE@P UBIN;
              9822    1     DCL 1 QI$OP_CNVBPX BASED ALIGNED,
              9823    1           2 CODE UBIN,
              9824    1           2 TEMP_BINARY_SOURCE@P UBIN,
              9825    1           2 PACKED_TARGET@P UBIN,
              9826    1           2 NEXT_CODE@P UBIN;
              9851    1     DCL 1 QI$OP_CNVNBT BASED ALIGNED,
              9852    1           2 CODE UBIN,
              9853    1           2 DISPLAY_SOURCE@P UBIN,
              9854    1           2 TEMP_BINARY_TARGET@P UBIN,
              9855    1           2 NEXT_CODE@P UBIN;
              9880    1     DCL 1 QI$OP_CNVPBT BASED ALIGNED,
              9881    1           2 CODE UBIN,
              9882    1           2 PACKED_SOURCE@P UBIN,
              9883    1           2 TEMP_BINARY_TARGET@P UBIN,
              9884    1           2 NEXT_CODE@P UBIN;
              9909    1     DCL 1 QI$OP_CNVPN BASED ALIGNED,
              9910    1           2 CODE UBIN,
              9911    1           2 PACKED_SOURCE@P UBIN,
              9912    1           2 TEMP_DISPLAY_TARGET@P UBIN,
              9913    1           2 NEXT_CODE@P UBIN;
              9938    1     DCL 1 QI$OP_DISPLAY BASED ALIGNED,
              9939    1           2 CODE UBIN,
              9940    1           2 TYPE UBIN(3) UNAL,
              9941    1           2 FIELD_COUNT UBIN(13) UNAL,
              9942    1           2 FIELD_A@P(0:0) UBIN,
              9943    1           2 NEXT_CODE@P REDEF FIELD_A@P UBIN;
              9968    1     DCL 1 QI$OP_DIV BASED ALIGNED,
              9969    1           2 CODE UBIN,
              9970    1           2 DIVISOR@P UBIN,
              9971    1           2 DIVIDEND_AND_QUOTIENT@P UBIN,
              9972    1           2 NEXT_CODE@P UBIN;
              9997    1     DCL 1 QI$OP_DIVX BASED ALIGNED,
              9998    1           2 CODE UBIN,
              9999    1           2 DIVISOR@P UBIN,
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:490  
             10000    1           2 DIVIDEND@P UBIN,
             10001    1           2 NEXT_CODE@P UBIN;
             10026    1     DCL 1 QI$OP_ENABLE BASED ALIGNED,
             10027    1           2 CODE UBIN,
             10028    1           2 * UBIN(1) UNAL,
             10029    1           2 IO_FLAGS,
             10030    1             3 IS_OUTPUT BIT(1) UNAL,
             10031    1             3 IS_INPUT BIT(1) UNAL,
             10032    1           2 IO_VALUE REDEF IO_FLAGS UBIN(2) UNAL,
             10033    1           2 OPERAND_COUNT UBIN(13) UNAL,
             10034    1           2 OPERAND_A@P(0:0) UBIN;
             10059    1     DCL 1 QI$OP_GOTO BASED ALIGNED,
             10060    1           2 CODE UBIN,
             10061    1           2 GOTO@P UBIN,
             10062    1           2 NEXT_CODE@P UBIN;
             10087    1     DCL 1 QI$OP_GOTODP BASED ALIGNED,
             10088    1           2 CODE UBIN,
             10089    1           2 GOTO_INDEX@P UBIN,
             10090    1           2 PROCEDURE_NAME_COUNT UBIN,
             10091    1           2 PROCEDURE_NAME_A@P(0:0) UBIN;
             10116    1     DCL 1 QI$OP_IFCLS BASED ALIGNED,
             10117    1           2 CODE UBIN,
             10118    1           2 SOURCE@P UBIN,
             10119    1           2 ATTRIBUTE,
             10120    1             3 * UBIN(11) UNAL,
             10121    1             3 IS_NOT BIT(1) UNAL,
             10122    1             3 TYPE,
             10123    1               4 IS_ALPHA BIT(1) UNAL,
             10124    1               4 IS_NUMERIC BIT(1) UNAL,
             10125    1               4 IS_DIGITS BIT(1) UNAL,
             10126    1               4 * UBIN(1) UNAL,
             10127    1             3 TYPES REDEF TYPE UBIN(4) UNAL,
             10128    1           2 FALSE_CONDITION@P UBIN,
             10129    1           2 NEXT_CODE@P UBIN;
             10154    1     DCL 1 QI$OP_IFCNDA BASED ALIGNED,
             10155    1           2 CODE UBIN,
             10156    1           2 ALPHANUMERIC_SOURCE@P UBIN,
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:491  
             10157    1           2 CONDITION_CONTROL_BLOCK@P UBIN,
             10158    1           2 ATTRIBUTE,
             10159    1             3 * UBIN(11) UNAL,
             10160    1             3 IS_NOT BIT(1) UNAL,
             10161    1             3 * UBIN(4) UNAL,
             10162    1           2 FALSE_CONDITION@P UBIN,
             10163    1           2 NEXT_CODE@P UBIN;
             10188    1     DCL 1 QI$OP_IFCNDN BASED ALIGNED,
             10189    1           2 CODE UBIN,
             10190    1           2 NUMERIC_SOURCE@P UBIN,
             10191    1           2 CONDITION_CONTROL_BLOCK@P UBIN,
             10192    1           2 ATTRIBUTE,
             10193    1             3 * UBIN(11) UNAL,
             10194    1             3 IS_NOT BIT(1) UNAL,
             10195    1             3 * UBIN(4) UNAL,
             10196    1           2 FALSE_CONDITION@P UBIN,
             10197    1           2 NEXT_CODE@P UBIN;
             10222    1     DCL 1 QI$OP_IFINDR BASED ALIGNED,
             10223    1           2 CODE UBIN,
             10224    1           2 FRAME_OR_FIELD@P UBIN,
             10225    1           2 ATTRIBUTE,
             10226    1             3 * UBIN(11) UNAL,
             10227    1             3 IS_NOT BIT(1) UNAL,
             10228    1             3 STATUS_TYPE UBIN(4) UNAL,
             10229    1           2 FALSE_CONDITION@P UBIN,
             10230    1           2 NEXT_CODE@P UBIN;
             10255    1     DCL 1 QI$OP_IFRELA BASED ALIGNED,
             10256    1           2 CODE UBIN,
             10257    1           2 ALPHANUMERIC_SOURCE@P UBIN,
             10258    1           2 ALPHANUMERIC_TARGET@P UBIN,
             10259    1           2 RELATIONAL_ATTRIBUTE UBIN,
             10260    1           2 FALSE_CONDITION@P UBIN,
             10261    1           2 NEXT_CODE@P UBIN;
             10286    1     DCL 1 QI$OP_IFRELG BASED ALIGNED,
             10287    1           2 CODE UBIN,
             10288    1           2 IS_SOURCE_GROUP BIT(1) UNAL,
             10289    1           2 * UBIN(1) UNAL,
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:492  
             10290    1           2 ANTI_GROUP_LENGTH UBIN(14) UNAL,
             10291    1           2 SOURCE@P UBIN,
             10292    1           2 TARGET@P UBIN,
             10293    1           2 RELATIONAL_ATTRIBUTE UBIN,
             10294    1           2 FALSE_CONDITION@P UBIN,
             10295    1           2 NEXT_CODE@P UBIN;
             10320    1     DCL 1 QI$OP_IFRELN BASED ALIGNED,
             10321    1           2 CODE UBIN,
             10322    1           2 NUMERIC_SOURCE@P UBIN,
             10323    1           2 NUMERIC_TARGET@P UBIN,
             10324    1           2 RELATIONAL_ATTRIBUTE UBIN,
             10325    1           2 FALSE_CONDITION@P UBIN,
             10326    1           2 NEXT_CODE@P UBIN;
             10351    1     DCL 1 QI$OP_INSPECT BASED ALIGNED,
             10352    1           2 CODE UBIN,
             10353    1           2 SOURCE@P UBIN,
             10354    1           2 TALLYING_ITEM@P UBIN,
             10355    1           2 REPLACING_OLD_ITEM@P REDEF TALLYING_ITEM@P UBIN,
             10356    1           2 TALLYING_FOR_ITEM@P UBIN,
             10357    1           2 REPLACING_NEW_ITEM@P REDEF TALLYING_FOR_ITEM@P UBIN,
             10358    1           2 TALLYING_INITIAL_ITEM@P UBIN,
             10359    1           2 REPLACING_INITIAL_ITEM@P REDEF TALLYING_INITIAL_ITEM@P UBIN,
             10360    1           2 ATTRIBUTE,
             10361    1             3 * UBIN(10) UNAL,
             10362    1             3 IS_REPLACING BIT(1) UNAL,
             10363    1             3 BEFORE_AFTER UBIN(2) UNAL,
             10364    1             3 WHICH_CHARS UBIN(3) UNAL,
             10365    1           2 NEXT_CODE@P UBIN;
             10390    1     DCL 1 QI$OP_JAZ BASED ALIGNED,
             10391    1           2 CODE UBIN,
             10392    1           2 EVERYTHINGS_PEACHY@P UBIN,
             10393    1           2 NEXT_CODE@P UBIN;
             10418    1     DCL 1 QI$OP_JND BASED ALIGNED,
             10419    1           2 CODE UBIN,
             10420    1           2 EVERYTHINGS_PEACHY@P UBIN,
             10421    1           2 NEXT_CODE@P UBIN;
             10446    1     DCL 1 QI$OP_LOAD BASED ALIGNED,
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:493  
             10447    1           2 CODE UBIN,
             10448    1           2 IS_ARGUMENT_PASSED BIT(1) UNAL,
             10449    1           2 * UBIN(1) UNAL,
             10450    1           2 IS_BY_NAME BIT(1) UNAL,
             10451    1           2 * UBIN(13) UNAL,
             10452    1           2 NAME_OR_TYPE@P UBIN,
             10453    1           2 ARGUMENT@P UBIN,
             10454    1           2 NEXT_CODE@P UBIN;
             10479    1     DCL 1 QI$OP_MOVA BASED ALIGNED,
             10480    1           2 CODE UBIN,
             10481    1           2 SOURCE@P UBIN,
             10482    1           2 ALPHANUMERIC_TARGET@P UBIN,
             10483    1           2 NEXT_CODE@P UBIN;
             10508    1     DCL 1 QI$OP_MOVAE BASED ALIGNED,
             10509    1           2 CODE UBIN,
             10510    1           2 SOURCE@P UBIN,
             10511    1           2 ALPHANUMERIC_EDITED_TARGET@P UBIN,
             10512    1           2 NEXT_CODE@P UBIN;
             10537    1     DCL 1 QI$OP_MOVAJ BASED ALIGNED,
             10538    1           2 CODE UBIN,
             10539    1           2 SOURCE@P UBIN,
             10540    1           2 RJ_ALPHANUMERIC_TARGET@P UBIN,
             10541    1           2 NEXT_CODE@P UBIN;
             10566    1     DCL 1 QI$OP_MOVB BASED ALIGNED,
             10567    1           2 CODE UBIN,
             10568    1           2 SOURCE@P UBIN,
             10569    1           2 BINARY_TARGET@P UBIN,
             10570    1           2 NEXT_CODE@P UBIN;
             10595    1     DCL 1 QI$OP_MOVBA BASED ALIGNED,
             10596    1           2 CODE UBIN,
             10597    1           2 BINARY_TARGET@P UBIN,
             10598    1           2 NEXT_CODE@P UBIN;
             10623    1     DCL 1 QI$OP_MOVDE BASED ALIGNED,
             10624    1           2 CODE UBIN,
             10625    1           2 NUMERIC_EDITED_SOURCE@P UBIN,
             10626    1           2 NUMERIC_TARGET@P UBIN,
             10627    1           2 NEXT_CODE@P UBIN;
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:494  
             10652    1     DCL 1 QI$OP_MOVG BASED ALIGNED,
             10653    1           2 CODE UBIN,
             10654    1           2 SOURCE@P UBIN,
             10655    1           2 TARGET@P UBIN,
             10656    1           2 IS_SOURCE_GROUP BIT(1) UNAL,
             10657    1           2 * UBIN(1) UNAL,
             10658    1           2 ANTI_GROUP_LENGTH UBIN(14) UNAL,
             10659    1           2 NEXT_CODE@P UBIN;
             10684    1     DCL 1 QI$OP_MOVN BASED ALIGNED,
             10685    1           2 CODE UBIN,
             10686    1           2 SOURCE@P UBIN,
             10687    1           2 DISPLAY_TARGET@P UBIN,
             10688    1           2 NEXT_CODE@P UBIN;
             10713    1     DCL 1 QI$OP_MOVNA BASED ALIGNED,
             10714    1           2 CODE UBIN,
             10715    1           2 DISPLAY_TARGET@P UBIN,
             10716    1           2 NEXT_CODE@P UBIN;
             10741    1     DCL 1 QI$OP_MOVNE BASED ALIGNED,
             10742    1           2 CODE UBIN,
             10743    1           2 SOURCE@P UBIN,
             10744    1           2 NUMERIC_EDITED_TARGET@P UBIN,
             10745    1           2 NEXT_CODE@P UBIN;
             10770    1     DCL 1 QI$OP_MOVNEA BASED ALIGNED,
             10771    1           2 CODE UBIN,
             10772    1           2 NUMERIC_EDITED_TARGET@P UBIN,
             10773    1           2 NEXT_CODE@P UBIN;
             10798    1     DCL 1 QI$OP_MOVP BASED ALIGNED,
             10799    1           2 CODE UBIN,
             10800    1           2 SOURCE@P UBIN,
             10801    1           2 PACKED_TARGET@P UBIN,
             10802    1           2 NEXT_CODE@P UBIN;
             10827    1     DCL 1 QI$OP_MOVPA BASED ALIGNED,
             10828    1           2 CODE UBIN,
             10829    1           2 PACKED_TARGET@P UBIN,
             10830    1           2 NEXT_CODE@P UBIN;
             10855    1     DCL 1 QI$OP_MULT BASED ALIGNED,
             10856    1           2 CODE UBIN,
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:495  
             10857    1           2 NUMERIC_SOURCE@P UBIN,
             10858    1           2 TARGET_AND_RESULT@P UBIN,
             10859    1           2 NEXT_CODE@P UBIN;
             10884    1     DCL 1 QI$OP_MULTX BASED ALIGNED,
             10885    1           2 CODE UBIN,
             10886    1           2 NUMERIC_SOURCE@P UBIN,
             10887    1           2 NUMERIC_TARGET@P UBIN,
             10888    1           2 NEXT_CODE@P UBIN;
             10913    1     DCL 1 QI$OP_OPEN BASED ALIGNED,
             10914    1           2 CODE UBIN,
             10915    1           2 * BIT(1) UNAL,
             10916    1           2 IO_FLAGS,
             10917    1             3 IS_OUTPUT BIT(1) UNAL,
             10918    1             3 IS_INPUT BIT(1) UNAL,
             10919    1           2 IO_VALUE REDEF IO_FLAGS UBIN(2) UNAL,
             10920    1           2 FILE_COUNT UBIN(13) UNAL,
             10921    1           2 FILE_A@P(0:0) UBIN;
             10946    1     DCL 1 QI$OP_PERFM BASED ALIGNED,
             10947    1           2 CODE UBIN,
             10948    1           2 FROM@P UBIN,
             10949    1           2 PERFORM_BLOCK@D UBIN,
             10950    1           2 ATTRIBUTE,
             10951    1             3 PARAGRAPH_SECTION BIT (1) UNAL,
             10952    1             3 * BIT (11) UNAL,
             10953    1             3 ITERATION_FIELD UBIN (4) UNAL,
             10954    1           2 BINARY_ITERATION_COUNT@P UBIN,
             10955    1           2 SINGLE_ITERATION_NEXT_CODE@P REDEF BINARY_ITERATION_COUNT@P UBIN,
             10956    1           2 MULTIPLE_ITERATION_NEXT_CODE@P UBIN;
             10981    1     DCL 1 QI$OP_PERFMT BASED ALIGNED,
             10982    1           2 CODE UBIN,
             10983    1           2 PERFORM_BLOCK@D UBIN,
             10984    1           2 NEXT_CODE@P UBIN;
             11009    1     DCL 1 QI$OP_READ_FORM BASED ALIGNED,
             11010    1           2 CODE UBIN,
             11011    1           2 FORM_FILE@P UBIN,
             11012    1           2 IS_POSITIONING_CURSOR BIT(1) UNAL,
             11013    1           2 * BIT(15) UNAL,
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:496  
             11014    1           2 CURSOR_FIELD@P UBIN,
             11015    1           2 NEXT_CODE@P UBIN;
             11040    1     DCL 1 QI$OP_READ_TRAN BASED ALIGNED,
             11041    1           2 CODE UBIN,
             11042    1           2 TRAN_FILE@P UBIN,
             11043    1           2 * UBIN(15) UNAL,
             11044    1           2 NO_DATA BIT(1) UNAL,
             11045    1           2 NEXT_CODE@P UBIN;
             11070    1     DCL 1 QI$OP_ROUND BASED ALIGNED,
             11071    1           2 CODE UBIN,
             11072    1           2 DECIMAL_PLACES UBIN,
             11073    1           2 NEXT_CODE@P UBIN;
             11098    1     DCL 1 QI$OP_STOP_PAUSE BASED ALIGNED,
             11099    1           2 CODE UBIN,
             11100    1           2 * UBIN(13) UNAL,
             11101    1           2 IS_IMPLICIT_POSTING BIT(1) UNAL,
             11102    1           2 IS_EXPLICIT_POSTING BIT(1) UNAL,
             11103    1           2 IS_PAUSING BIT(1) UNAL,
             11104    1           2 PAUSING_OPERAND@P UBIN,
             11105    1           2 POSTING_OPERAND@P UBIN,
             11106    1           2 NEXT_CODE@P UBIN;
             11131    1     DCL 1 QI$OP_STOP_RUN BASED ALIGNED,
             11132    1           2 CODE UBIN,
             11133    1           2 NEXT_CODE@P UBIN;
             11158    1     DCL 1 QI$OP_SUB BASED ALIGNED,
             11159    1           2 CODE UBIN,
             11160    1           2 NUMERIC_SOURCE@P UBIN,
             11161    1           2 NUMERIC_TARGET@P UBIN,
             11162    1           2 NEXT_CODE@P UBIN;
             11187    1     DCL 1 QI$OP_SUBSCR BASED ALIGNED,
             11188    1           2 CODE UBIN,
             11189    1           2 ARRAY_SOURCE@P UBIN,
             11190    1           2 SUBSCRIPT_A@P(0:0) UBIN,
             11191                          /* SUBSCRIPT_A@P is one or two entries long
             11192                             depending on the dimension_count of
             11193                             ARRAY_SOURCE@P.  */
             11194    1           2 DUMMY_RESULT@P UBIN,
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:497  
             11195    1           2 NEXT_CODE UBIN;
             11220    1     DCL 1 QI$OP_SUBX BASED ALIGNED,
             11221    1           2 CODE UBIN,
             11222    1           2 ARGUMENT_COUNT UBIN,
             11223    1           2 ARGUMENT_A@P(0:0) UBIN;
             11248    1     DCL 1 QI$OP_VERI_PRES BASED ALIGNED,
             11249    1           2 CODE UBIN,
             11250    1           2 DAD_PAIR_COUNT UBIN,
             11251    1           2 DAD_PAIR_A(0:0),
             11252    1             3 SOURCE@P UBIN,
             11253    1             3 TARGET@P UBIN;
             11278    1     DCL 1 QI$OP_WRITE_FORM BASED ALIGNED,
             11279    1           2 CODE UBIN,
             11280    1           2 IS_WRITE_PAGE BIT(1) UNAL,
             11281    1           2 * BIT(15) UNAL,
             11282    1           2 FORM_RECORD@P UBIN,
             11283    1           2 NEXT_CODE@P UBIN;
             11308    1     DCL 1 QI$OP_WRITE_TRAN BASED ALIGNED,
             11309    1           2 CODE UBIN,
             11310    1           2 TRAN_RECORD@P UBIN,
             11311    1           2 DATA_SIZE UBIN,
             11312    1           2 NEXT_CODE@P UBIN;
             11337        /*
             11338           This INITIALIZATION_BLOCK is used by QAT$TALLYHO
             11339           during startup to, well, initialize.
             11340        */
             11341    1     DCL 1 QI$INITIALIZATION_BLOCK BASED ALIGNED,
             11342    1           2 DATA_START$ PTR,
             11343    1           2 PROC_START$ PTR,
             11344    1           2 EXPECTED_ARGUMENT_COUNT UBIN,
             11345    1           2 CURRENT_FORM@P UBIN,
             11346    1           2 CURRENT_FRAME@P UBIN,
             11347    1           2 CURRENT_FIELD@P UBIN,
             11348    1           2 RETRY@P UBIN,
             11349    1           2 VERIFY_BUFFER_1@P UBIN,
             11350    1           2 VERIFY_BUFFER_2@P UBIN,
             11351    1           2 VERIFY_BUFFER_3@P UBIN,
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:498  
             11352    1           2 VERIFY_BUFFER_4@P UBIN,
             11353    1           2 COMPILER_VERSION CHAR(4),
             11354    1           2 OUTPUT_OR_IO_USE_PROCEDURE@P UBIN,
             11355    1           2 INPUT_OR_IO_USE_PROCEDURE@P UBIN,
             11356    1           2 VERIFICATION_USE_PROCEDURE@P UBIN,
             11357    1           2 MESSAGE_LINE_DCB# UBIN,
             11358    1           2 VANILLA_HOST_DCB# UBIN,
             11359    1           2 IS_THIS_A_SUBROUTINE BIT(1) UNAL,
             11360    1           2 * UBIN(15) UNAL;
             11385        /*
             11386           CONDITION CONTROL BLOCK used to refer to target data on conditional
             11387           IFs (i.e. IFCNDA, and IFCNDN).
             11388        */
             11389    1     DCL 1 QI$CONDITION_CONTROL_BLOCK BASED ALIGNED,
             11390    1           2 WORD0_FLAGS,
             11391    1             3 IS_THROUGH BIT(1) UNAL,
             11392    1             3 * UBIN(15) UNAL,
             11393    1           2 LIST_LENGTH REDEF WORD0_FLAGS UBIN,
             11394    1           2 LIST_A@P(0:0) UBIN,
             11395    1           2 RANGE_A@P(0:0) REDEF LIST_A@P UBIN;
             11420        /*
             11421           CONDITION BLOCK used for holding information about the LEGAL
             11422           list/range/array for a COBOL-like data item.
             11423        */
             11424    1     DCL 1 QI$CONDITION_LEGAL_BLOCK BASED ALIGNED,
             11425    1           2 TYPE UBIN(2) UNAL,
             11426    1           2 LIST_LENGTH UBIN(14) UNAL,
             11427    1           2 ARRAY@P UBIN,
             11428    1           2 LIST_A@P(0:0) REDEF ARRAY@P UBIN,
             11429    1           2 RANGE_A@P(0:0) REDEF ARRAY@P UBIN;
             11455    1     DCL 1 QI$PSEUDO_CIP BASED ALIGNED,        /* CIP descriptor */
             11459    1           2 ALPHANUMERIC,
             11460    1             3 CA,                  /* Control bits for ALPHANUMERIC */
             11461    1               4 OFFSET UBIN(1) UNAL,
             11462    1             3 * UBIN(1) UNAL,
             11463    1             3 LEN UBIN(14) UNAL,
             11464    1           2 NUMERIC REDEF ALPHANUMERIC,
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:499  
             11465    1             3 CB,                  /* Control bits for BINARY */
             11466    1               4 OFFSET UBIN(1) UNAL,
             11467    1               4 MBZ UBIN(2) UNAL,
             11468    1             3 CD REDEF CB,         /* Control bits for DISPLAY */
             11469    1               4 OFFSET UBIN(1) UNAL,
             11470    1               4 SIGN UBIN(2) UNAL,
             11471    1             3 CP REDEF CB,         /* Control bits for PACKED */
             11472    1               4 OFFSET UBIN(2) UNAL,
             11473    1               4 SIGN UBIN(1) UNAL,
             11474    1             3 LEN UBIN(5) UNAL,
             11475    1             3 * UBIN(2) UNAL,
             11476    1             3 DEC SBIN(6) UNAL,
             11478    1           2 DATA@ UBIN;
             11479    1     DCL 1 QI$PSEUDO_CIP_A (0:1) REDEF QI$PSEUDO_CIP UBIN;
             11560    1           DCL 1 QI$CIP BASED DALIGNED,        /* CIP descriptor */
             11565    1                 2 CA,                  /* Control bits for ALPHANUMERIC */
             11566    1                   3 OFFSET UBIN(1) UNAL /* Was INIT'ed to:  (0)/**/,
             11567    1                   3 FILL UBIN(1) UNAL /* Was INIT'ed to:  (1)/**/,
             11568    1                   3 MBZ UBIN(1) UNAL /* Was INIT'ed to:  (0)/**/,
             11569    1                 2 CB REDEF CA,         /* Control bits for BINARY */
             11570    1                   3 OFFSET UBIN(1) UNAL,
             11571    1                   3 MBZ UBIN(2) UNAL,  /* not used:  MBZ */
             11572    1                 2 CD REDEF CA,         /* Control bits for DISPLAY */
             11573    1                   3 OFFSET UBIN(1) UNAL,
             11574    1                   3 SIGN UBIN(2) UNAL,
             11575    1                 2 CP REDEF CA,         /* Control bits for PACKED */
             11576    1                   3 OFFSET UBIN(2) UNAL,
             11577    1                   3 SIGN UBIN(1) UNAL,
             11621    1                 2 LEN UBIN(5) UNAL /* Was INIT'ed to:  (0)/**/,
             11625    1                 2 T UBIN(1) UNAL /* Was INIT'ed to:  (0)/**/,
             11627    1                 2 AS UBIN(7) UNAL /* Was INIT'ed to:  (BITBIN('B'X))/**/,
             11629    1                 2 DISP UBIN /* Was INIT'ed to:  (6)/**/;
             11630    1           DCL 1 QI$CIP_A (0:1) REDEF QI$CIP UBIN;
             11672    1     DCL 1 QI$DAD BASED ALIGNED,
             11676    1           2 WORD0 SBIN,
             11677    1           2 WORD0_FLAGS REDEF WORD0,
             11678    1             3 INDIRECT BIT(1) UNAL,          /* on for indirect reference */
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:500  
             11679    1             3 * UBIN(4) UNAL,
             11680    1             3 IS_JUSTIFIED_RIGHT BIT(1) UNAL,
             11681    1             3 * UBIN(2) UNAL,
             11682    1             3 IS_FORM_VARIABLE BIT(1) UNAL,  /* on for FORM variable */
             11683    1             3 IS_CONSTANT BIT(1) UNAL,       /* on if CONSTANT */
             11684    1             3 DIMENSION_COUNT UBIN(2) UNAL,  /* # of dimensions */
             11685    1             3 TYPE UBIN(4) UNAL,             /* variable TYPE */
             11707    1         2 PSEUDO_CIP ALIGNED,           /* CIP descriptor */
             11709    1           3 ALPHANUMERIC,
             11710    1             4 CA,                  /* Control bits for ALPHANUMERIC */
             11711    1               5 OFFSET UBIN(1) UNAL,
             11712    1             4 * UBIN(1) UNAL,
             11713    1             4 LEN UBIN(14) UNAL,
             11714    1           3 NUMERIC REDEF ALPHANUMERIC,
             11715    1             4 CB,                  /* Control bits for BINARY */
             11716    1               5 OFFSET UBIN(1) UNAL,
             11717    1               5 MBZ UBIN(2) UNAL,
             11718    1             4 CD REDEF CB,         /* Control bits for DISPLAY */
             11719    1               5 OFFSET UBIN(1) UNAL,
             11720    1               5 SIGN UBIN(2) UNAL,
             11721    1             4 CP REDEF CB,         /* Control bits for PACKED */
             11722    1               5 OFFSET UBIN(2) UNAL,
             11723    1               5 SIGN UBIN(1) UNAL,
             11724    1             4 LEN UBIN(5) UNAL,
             11725    1             4 * UBIN(2) UNAL,
             11726    1             4 DEC SBIN(6) UNAL,
             11731    1           3 DATA@ UBIN,
             11732    1         2 PSEUDO_CIP_A (0:1) REDEF PSEUDO_CIP UBIN ;
             11767    1     DCL 1 QI$COBOL_DAD BASED ALIGNED,
             11768    1           2 WORD0 SBIN,
             11769    1           2 WORD0_FLAGS REDEF WORD0,
             11770    1             3 INDIRECT BIT(1) UNAL,
             11771    1             3 P,
             11772    1               4 PICTURE BIT(1) UNAL,
             11773    1               4 VALID BIT(1) UNAL,
             11774    1               4 ERROR_MESSAGE BIT(1) UNAL,
             11775    1             3 IS_LINKAGE_ARGUMENT BIT(1) UNAL,/* on if in LINKAGE SECTION */
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:501  
             11776    1             3 IS_JUSTIFIED_RIGHT BIT(1) UNAL,/* on if JUSTIFIED RIGHT */
             11777    1             3 IS_TEMP BIT(1) UNAL,           /* on if this is a temp */
             11778    1             3 IS_ALL_LIT BIT(1) UNAL,        /* on if this is an ALL "literal" */
             11779    1             3 IS_FORM_VARIABLE BIT(1) UNAL,  /* on if a FORM variable */
             11780    1             3 IS_CONSTANT BIT(1) UNAL,       /* on if CONSTANT */
             11781    1             3 DIMENSION_COUNT UBIN(2) UNAL,  /* # of dimensions */
             11782    1             3 TYPE UBIN(4) UNAL,
             11783    1           2 P_A(0:15) REDEF WORD0 BIT(1) UNAL,
             11804    1         2 PSEUDO_CIP ALIGNED,           /* CIP descriptor */
             11806    1           3 ALPHANUMERIC,
             11807    1             4 CA,                  /* Control bits for ALPHANUMERIC */
             11808    1               5 OFFSET UBIN(1) UNAL,
             11809    1             4 * UBIN(1) UNAL,
             11810    1             4 LEN UBIN(14) UNAL,
             11811    1           3 NUMERIC REDEF ALPHANUMERIC,
             11812    1             4 CB,                  /* Control bits for BINARY */
             11813    1               5 OFFSET UBIN(1) UNAL,
             11814    1               5 MBZ UBIN(2) UNAL,
             11815    1             4 CD REDEF CB,         /* Control bits for DISPLAY */
             11816    1               5 OFFSET UBIN(1) UNAL,
             11817    1               5 SIGN UBIN(2) UNAL,
             11818    1             4 CP REDEF CB,         /* Control bits for PACKED */
             11819    1               5 OFFSET UBIN(2) UNAL,
             11820    1               5 SIGN UBIN(1) UNAL,
             11821    1             4 LEN UBIN(5) UNAL,
             11822    1             4 * UBIN(2) UNAL,
             11823    1             4 DEC SBIN(6) UNAL,
             11828    1           3 DATA@ UBIN,
             11829    1         2 PSEUDO_CIP_A (0:1) REDEF PSEUDO_CIP UBIN ,
             11840    1           2 VARIABLE_LENGTH_ITEMS,
             11841    1             3 LEVEL_MULTIPLIERS,
             11842    1               4 ONE_DIMENSIONAL,
             11843    1                 5 ELEMENT_COUNT UBIN,
             11844    1                 5 ELEMENT_LENGTH UBIN,
             11845    1               4 TWO_DIMENSIONAL,
             11846    1                 5 ELEMENT_COUNT UBIN,
             11847    1                 5 ELEMENT_LENGTH UBIN,
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:502  
             11848    1               4 THREE_DIMENSIONAL,
             11849    1                 5 ELEMENT_COUNT UBIN,
             11850    1                 5 ELEMENT_LENGTH UBIN,
             11851    1             3 LEVEL_MULTIPLIER_A(0:2) REDEF LEVEL_MULTIPLIERS,
             11852    1               4 ELEMENT_COUNT UBIN,
             11853    1               4 ELEMENT_LENGTH UBIN,
             11854    1             3 P_ITEM_A(0:5) REDEF LEVEL_MULTIPLIERS UBIN,
             11855    1             3 *(0:2) UBIN,
             11856    1           2 ELEMENTARY_ITEM REDEF VARIABLE_LENGTH_ITEMS,
             11857    1             3 P_ITEM_A(0:2) UBIN,
             11858    1             3 * UBIN,
             11859    1             3 * UBIN,
             11860    1             3 * UBIN,
             11861    1             3 * UBIN,
             11862    1             3 * UBIN,
             11863    1             3 * UBIN,
             11864    1           2 ONE_DIMENSIONAL_ITEM REDEF VARIABLE_LENGTH_ITEMS,
             11865    1             3 * UBIN,
             11866    1             3 * UBIN,
             11867    1             3 P_ITEM_A(0:2) UBIN,
             11868    1             3 * UBIN,
             11869    1             3 * UBIN,
             11870    1             3 * UBIN,
             11871    1             3 * UBIN,
             11872    1           2 TWO_DIMENSIONAL_ITEM REDEF VARIABLE_LENGTH_ITEMS,
             11873    1             3 * UBIN,
             11874    1             3 * UBIN,
             11875    1             3 * UBIN,
             11876    1             3 * UBIN,
             11877    1             3 P_ITEM_A(0:2) UBIN,
             11878    1             3 * UBIN,
             11879    1             3 * UBIN;
             11904        /*
             11905                 Presence bits for COBOL-type DADs.
             11906        */
             11907    1     DCL 1 QI$COBOL_DAD_P_BITS BASED ALIGNED,
             11908    1           2 P,
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:503  
             11909    1             3 * BIT(1) UNAL,
             11910    1             3 PICTURE BIT(1) UNAL,
             11911    1             3 VALID BIT(1) UNAL,
             11912    1             3 ERROR_MESSAGE BIT(1) UNAL,
             11913    1             3 USE_PROCEDURE BIT(1) UNAL,
             11914    1           2 P_A(0:4) REDEF P BIT(1) UNAL;
             11939        /*
             11940                 Presence item array for COBOL-type DADs.
             11941        */
             11942    1     DCL 1 QI$COBOL_DAD_P_ITEMS BASED ALIGNED,
             11943    1           2 P_ITEM_A(0:2) UBIN;
             11968    1     DCL 1 QI$LINKAGE_ARGUMENT_DESCRIPTOR BASED ALIGNED,
             11969    1           2 ARGUMENT_NUMBER UBIN,
             11970                          /* argument "number" from
             11971                             PROCEDURE DIVISION USING P1, P2, P3,....
             11972                             E.g., 0 for P1, 1 for P2, 2 for P3,.... */
             11973    1           2 WORD_OFFSET_FROM_01_ITEM UBIN;
             11974                          /* word offset from the nearest 01-level item
             11975                             above to the current item. */
             12000    1     DCL 1 QI$FIELD_DAD BASED ALIGNED,
             12001    1           2 WORD0 SBIN,
             12002    1           2 WORD0_FLAGS REDEF WORD0,
             12003    1             3 INDIRECT BIT(1) UNAL,
             12004                                           /* on if an indirect reference */
             12005    1             3 IO_FLAGS,
             12006    1               4 IS_OUTPUT BIT(1) UNAL,
             12007                                           /* on if this FIELD is OUTPUT or I-O */
             12008    1               4 IS_INPUT BIT(1) UNAL,
             12009                                           /* on if this FIELD is INPUT or I-O */
             12010    1             3 IO_VALUE REDEF IO_FLAGS UBIN(2) UNAL,
             12011                                           /* all 1's if this field is I-O */
             12012    1             3 IS_ENTRY_REQUIRED BIT(1) UNAL,
             12013                                           /* on if INPUT-REQUIRED */
             12014    1             3 IS_OUTPUT_CONSTANT BIT(1) UNAL,
             12015                                           /* on if CONSTANT OUTPUT */
             12016    1             3 IS_JUSTIFIED_RIGHT BIT(1) UNAL,
             12017                                           /* on if right justification is in effect */
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:504  
             12018    1             3 IS_AOIM BIT(1) UNAL,
             12019                                           /* on if A-O-I-M */
             12020    1             3 * BIT(1) UNAL,
             12021    1             3 IS_FORM_VARIABLE BIT(1) UNAL,
             12022                                           /* on if a FORM var */
             12023    1             3 IS_CONSTANT BIT(1) UNAL,
             12024                                           /* on if CONSTANT */
             12025    1             3 DIMENSION_COUNT UBIN(2) UNAL,
             12026                                           /* # of dimensions */
             12027    1             3 TYPE UBIN(4) UNAL,
             12028                                           /* TYPE of variable */
             12049    1         2 PSEUDO_CIP ALIGNED,           /* CIP descriptor */
             12051    1           3 ALPHANUMERIC,
             12052    1             4 CA,                  /* Control bits for ALPHANUMERIC */
             12053    1               5 OFFSET UBIN(1) UNAL,
             12054    1             4 * UBIN(1) UNAL,
             12055    1             4 LEN UBIN(14) UNAL,
             12056    1           3 NUMERIC REDEF ALPHANUMERIC,
             12057    1             4 CB,                  /* Control bits for BINARY */
             12058    1               5 OFFSET UBIN(1) UNAL,
             12059    1               5 MBZ UBIN(2) UNAL,
             12060    1             4 CD REDEF CB,         /* Control bits for DISPLAY */
             12061    1               5 OFFSET UBIN(1) UNAL,
             12062    1               5 SIGN UBIN(2) UNAL,
             12063    1             4 CP REDEF CB,         /* Control bits for PACKED */
             12064    1               5 OFFSET UBIN(2) UNAL,
             12065    1               5 SIGN UBIN(1) UNAL,
             12066    1             4 LEN UBIN(5) UNAL,
             12067    1             4 * UBIN(2) UNAL,
             12068    1             4 DEC SBIN(6) UNAL,
             12073    1           3 DATA@ UBIN,
             12074    1         2 PSEUDO_CIP_A (0:1) REDEF PSEUDO_CIP UBIN ,
             12085    1           2 PICTURE_STRING@P UBIN,
             12086                                           /* ADDR (PROC) disp to PICTURE string */
             12087    1           2 BROTHER@P UBIN,
             12088                                           /* ADDR disp to DAD of brother/sister */
             12089    1           2 FATHER@P UBIN,
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:505  
             12090                                           /* ADDR disp to DAD of father */
             12091    1           2 STATUS_AREA@D UBIN,
             12092                                           /* ADDR (DATA) disp to scratch area */
             12093    1           2 IDENTIFIER@P UBIN,
             12094                                           /* ADDR (PROC) disp to identifier */
             12095    1           2 POSITION,
             12096    1             3 LINE UBIN,
             12097                                           /* LINE integer or ADDR disp to
             12098                                              DAD of LINE variable         */
             12099    1             3 COLUMN UBIN,
             12100                                           /* COLUMN integer or ADDR disp to
             12101                                              DAD of COLUMN variable         */
             12102    1           2 * UBIN BYTE UNAL,
             12103    1           2 VISUAL_ATTRIBUTE UBIN BYTE UNAL,
             12104                                           /* VISUAL-ATTRIBUTE code byte */
             12105    1           2 VARIABLE_LENGTH_ITEMS,
             12106    1             3 LEVEL_MULTIPLIERS,
             12107    1               4 ONE_DIMENSIONAL,
             12108    1                 5 ELEMENT_COUNT UBIN,
             12109    1                 5 ELEMENT_LENGTH UBIN,
             12110    1               4 TWO_DIMENSIONAL,
             12111    1                 5 ELEMENT_COUNT UBIN,
             12112    1                 5 ELEMENT_LENGTH UBIN,
             12113    1               4 THREE_DIMENSIONAL,
             12114    1                 5 ELEMENT_COUNT UBIN,
             12115    1                 5 ELEMENT_LENGTH UBIN,
             12116    1             3 LEVEL_MULTIPLIER_A(0:2) REDEF LEVEL_MULTIPLIERS,
             12117    1               4 ELEMENT_COUNT UBIN,
             12118    1               4 ELEMENT_LENGTH UBIN,
             12119    1             3 P_ITEM_A(0:5) REDEF LEVEL_MULTIPLIERS UBIN,
             12120    1             3 *(0:6) UBIN,
             12121    1           2 ELEMENTARY_ITEM REDEF VARIABLE_LENGTH_ITEMS,
             12122    1             3 P,
             12123    1               4 FILL_CHARACTER_MINIMUM_SIZE BIT(1) UNAL,
             12124    1               4 CLASS_ALPHABET BIT(1) UNAL,
             12125    1               4 DEFAULT BIT(1) UNAL,
             12126    1               4 PROMPT BIT(1) UNAL,
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:506  
             12127    1               4 REPEATS BIT(1) UNAL,
             12128    1               4 SEPARATED BIT(1) UNAL,
             12129    1             3 P_A(0:5) REDEF P BIT(1) UNAL,
             12130    1             3 * UBIN(7) UNAL,
             12131    1             3 CLASS_TYPE UBIN(3) UNAL,
             12132    1             3 P_ITEM_A(0:5) UBIN,
             12133    1             3 * UBIN,
             12134    1             3 * UBIN,
             12135    1             3 * UBIN,
             12136    1             3 * UBIN,
             12137    1             3 * UBIN,
             12138    1             3 * UBIN,
             12139    1           2 ONE_DIMENSIONAL_ITEM REDEF VARIABLE_LENGTH_ITEMS,
             12140    1             3 * UBIN,
             12141    1             3 * UBIN,
             12142    1             3 P,
             12143    1               4 FILL_CHARACTER_MINIMUM_SIZE BIT(1) UNAL,
             12144    1               4 CLASS_ALPHABET BIT(1) UNAL,
             12145    1               4 DEFAULT BIT(1) UNAL,
             12146    1               4 PROMPT BIT(1) UNAL,
             12147    1               4 REPEATS BIT(1) UNAL,
             12148    1               4 SEPARATED BIT(1) UNAL,
             12149    1             3 P_A(0:5) REDEF P BIT(1) UNAL,
             12150    1             3 * UBIN(7) UNAL,
             12151    1             3 CLASS_TYPE UBIN(3) UNAL,
             12152    1             3 P_ITEM_A(0:5) UBIN,
             12153    1             3 * UBIN,
             12154    1             3 * UBIN,
             12155    1             3 * UBIN,
             12156    1             3 * UBIN,
             12157    1           2 TWO_DIMENSIONAL_ITEM REDEF VARIABLE_LENGTH_ITEMS,
             12158    1             3 * UBIN,
             12159    1             3 * UBIN,
             12160    1             3 * UBIN,
             12161    1             3 * UBIN,
             12162    1             3 P,
             12163    1               4 FILL_CHARACTER_MINIMUM_SIZE BIT(1) UNAL,
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:507  
             12164    1               4 CLASS_ALPHABET BIT(1) UNAL,
             12165    1               4 DEFAULT BIT(1) UNAL,
             12166    1               4 PROMPT BIT(1) UNAL,
             12167    1               4 REPEATS BIT(1) UNAL,
             12168    1               4 SEPARATED BIT(1) UNAL,
             12169    1             3 P_A(0:5) REDEF P BIT(1) UNAL,
             12170    1             3 * UBIN(7) UNAL,
             12171    1             3 CLASS_TYPE UBIN(3) UNAL,
             12172    1             3 P_ITEM_A(0:5) UBIN,
             12173    1             3 * UBIN,
             12174    1             3 * UBIN;
             12199        /*
             12200            Presence bits for FIELD-type DADs.
             12201        */
             12202    1     DCL 1 QI$FIELD_DAD_P BASED ALIGNED,
             12203    1           2 P,
             12204    1             3 FILL_CHARACTER_MINIMUM_SIZE BIT(1) UNAL,
             12205    1             3 CLASS_ALPHABET BIT(1) UNAL,
             12206    1             3 DEFAULT BIT(1) UNAL,
             12207    1             3 PROMPT BIT(1) UNAL,
             12208    1             3 REPEATS BIT(1) UNAL,
             12209    1             3 SEPARATED BIT(1) UNAL,
             12210    1           2 P_A(0:5) REDEF P BIT(1) UNAL,
             12211    1           2 * UBIN(7) UNAL,
             12212    1           2 CLASS_TYPE UBIN(3) UNAL,
             12213    1           2 P_ITEM_A(0:5) UBIN;
             12238    1     DCL 1 QI$MAJOR_NODE BASED ALIGNED,
             12239    1           2 WORD0 SBIN,
             12240    1           2 WORD0_FLAGS REDEF WORD0,
             12241    1             3 INDIRECT BIT(1) UNAL,
             12242    1             3 IS_ANY_DESCENDANT_OUTPUT BIT(1) UNAL,
             12243    1             3 IS_ANY_DESCENDANT_INPUT BIT(1) UNAL,
             12244    1             3 * UBIN(5) UNAL,
             12245    1             3 IS_FORM_VARIABLE BIT(1) UNAL,
             12246    1             3 IS_CONSTANT BIT(1) UNAL,
             12247    1             3 * UBIN(2) UNAL,
             12248    1             3 TYPE UBIN(4) UNAL,
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:508  
             12249    1           2 * UBIN,
             12250    1           2 * UBIN,
             12251    1           2 SON@P UBIN,
             12252    1           2 BROTHER@P UBIN,
             12253    1           2 FATHER@P UBIN,
             12254                          /* chauvanists. */
             12255    1           2 STATUS_AREA@D UBIN,
             12256    1           2 IDENTIFIER@P UBIN;
             12281    1     DCL 1 QI$MINOR_NODE BASED ALIGNED,
             12282    1           2 WORD0 SBIN,
             12283    1           2 WORD0_FLAGS REDEF WORD0,
             12284    1             3 INDIRECT BIT(1) UNAL,
             12285    1             3 IS_ANY_DESCENDANT_OUTPUT BIT(1) UNAL,
             12286    1             3 IS_ANY_DESCENDANT_INPUT BIT(1) UNAL,
             12287    1             3 * UBIN(5) UNAL,
             12288    1             3 IS_FORM_VARIABLE BIT(1) UNAL,
             12289    1             3 IS_CONSTANT BIT(1) UNAL,
             12290    1             3 * UBIN(2) UNAL,
             12291    1             3 TYPE UBIN(4) UNAL,
             12292    1           2 REPEATS UBIN,
             12293    1           2 SEPARATED UBIN,
             12294    1           2 SON@P UBIN,
             12295    1           2 BROTHER@P UBIN,
             12296    1           2 FATHER@P UBIN,
             12297                          /* chauvanists. */
             12298    1           2 STATUS_AREA@D UBIN,
             12299    1           2 IDENTIFIER@P UBIN;
             12324    1     DCL 1 QI$FILE BASED ALIGNED,
             12325    1           2 WORD0 SBIN,
             12326    1           2 WORD0_FLAGS REDEF WORD0,
             12327    1             3 INDIRECT BIT(1) UNAL,
             12328                          /* If indirect, this is a pointer to the real DAD,
             12329                             which lives in user data. */
             12330    1             3 IS_ERROR_STATUS_VALID BIT(1) UNAL,
             12331                          /* If error_status_valid, there is a DAD pointer
             12332                             to an ERROR STATUS variable below. */
             12333    1             3 * UBIN(10) UNAL,
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:509  
             12334    1             3 TYPE UBIN(4) UNAL,
             12335                          /* Type of file:  transaction or form. */
             12336    1           2 * UBIN,
             12337    1           2 * UBIN,
             12338    1           2 ERROR_STATUS@D UBIN,
             12339                          /* Offset (in data) of the 8-word space reserved
             12340                             for the ERROR STATUS variable. */
             12341    1           2 * UBIN,
             12342    1           2 * UBIN,
             12343    1           2 STATUS_AREA@D UBIN,
             12344                          /* Offset (in data) of the QI$FILE_STATUS
             12345                             status area for this file FD. */
             12346    1           2 IDENTIFIER@P UBIN,
             12347                          /* Offset (in procedure) of the ATEXTC
             12348                             of the file name. */
             12349    1           2 DCB# UBIN,
             12350                          /* SYMREFed DCBNUM for this file. */
             12351    1           2 USE_PROCEDURE@P UBIN,
             12352                          /* Offset (in procedure) of the USE procedure. */
             12353    1           2 * UBIN;
             12378    1     DCL 1 QI$FORM_FILE BASED ALIGNED,
             12379    1           2 WORD0 SBIN,
             12380    1           2 WORD0_FLAGS REDEF WORD0,
             12381    1             3 INDIRECT BIT(1) UNAL,
             12382                          /* If indirect, this is a pointer to the read DAD,
             12383                             which lives in user data. */
             12384    1             3 IS_ERROR_STATUS_VALID BIT(1) UNAL,
             12385                          /* If error_status_valid, there is a DAD pointer
             12386                             to an ERROR STATUS variable below. */
             12387    1             3 IS_MESSAGE_LINE_VALID BIT(1) UNAL,
             12388                          /* if message_line_valid, there is a DAD pointer
             12389                             to a MESSAGE LINE variable below. */
             12390    1             3 IS_ACTIVATION_STATUS_VALID BIT(1) UNAL,
             12391                          /* if activation_status_valid, there is a DAD pointer
             12392                             to an ACTIVATION STATUS variable below. */
             12393    1             3 * UBIN(4) UNAL,
             12394    1             3 IS_FORM_VARIABLE BIT(1) UNAL,
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:510  
             12395                          /* if form_variable, then this thing was defined
             12396                             within the FRAME SECTION. */
             12397    1             3 IS_CONSTANT BIT(1) UNAL,
             12398                          /* If constant, this item is located in user
             12399                             procedure. */
             12400    1             3 * UBIN(2) UNAL,
             12401    1             3 TYPE UBIN(4) UNAL,
             12402                          /* For form DADs, type is
             12403                             always 11 ('B'X). */
             12404    1           2 FRAME_COUNT UBIN,
             12405                          /* Number of elements in FRAME_LIST_A below. */
             12406    1           2 ACTIVATION_STATUS@P UBIN,
             12407                          /* Offset (in procedure) of the user-supplied
             12408                             ACTIVATION STATUS variable. */
             12409    1           2 ERROR_STATUS@D UBIN,
             12410                          /* Offset (in data) of the 8-word space reserved
             12411                             for the ERROR STATUS variable. */
             12412    1           2 MESSAGE_LINE UBIN,
             12413                          /* Integer value of the ERROR MESSAGE
             12414                             line number. */
             12415    1           2 RETRY_COUNT UBIN,
             12416                          /* Integer value of the retry count. */
             12417    1           2 STATUS_AREA@D UBIN,
             12418                          /* Offset (in data) of the QI$FORM_STATUS
             12419                             status area for this form FD. */
             12420    1           2 IDENTIFIER@P UBIN,
             12421                          /* Offset (in procedure) of the ATEXTC
             12422                             of the file name. */
             12423    1           2 DCB# UBIN,
             12424                          /* SYMREFed DCBNUM for this FORM_FILE. */
             12425    1           2 USE_PROCEDURE,
             12426    1             3 STANDARD,
             12427    1               4 WHERE@P UBIN,
             12428                          /* Offset (in procedure) of the USE procedure. */
             12429    1             3 VERIFY,
             12430    1               4 WHERE@P UBIN,
             12431                          /* Offset (in procedure) of the USE procedure. */
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:511  
             12432    1           2 USE_PROCEDURE_A@P(0:1) REDEF USE_PROCEDURE UBIN,
             12433    1           2 FRAME_LIST_A@P(0:0) UBIN;
             12434                          /* List of offsets of FRAMES specified in the
             12435                             FRAMES ARE clause. */
             12460    1     DCL 1 QI$TRAN_FILE BASED ALIGNED,
             12461    1           2 WORD0 SBIN,
             12462    1           2 WORD0_FLAGS REDEF WORD0,
             12463    1             3 INDIRECT BIT(1) UNAL,
             12464                          /* If indirect, this is a pointer to the read DAD,
             12465                             which lives in user data. */
             12466    1             3 IS_ERROR_STATUS_VALID BIT(1) UNAL,
             12467                          /* If error_status_valid, there is a DAD pointer
             12468                             to an ERROR STATUS variable below. */
             12469    1             3 IS_RELATIVE_KEY_VALID BIT(1) UNAL,
             12470                          /* If relative_key_valid, there is a DAD pointer
             12471                             to a RELATIVE KEY variable below. */
             12472    1             3 IS_ID_VALID BIT(1) UNAL,
             12473                          /* If id_valid, there is a DAD pointer to an
             12474                             ID variable below. */
             12475    1             3 * UBIN(3) UNAL,
             12476    1             3 INPUT_CLASS BIT(1) UNAL,
             12477                          /* Input_class is:  0 for response
             12478                                              1 for report. */
             12479    1             3 ACCESS UBIN(2) UNAL,
             12480                          /* Access is:  0 for sequential
             12481                                         1 for dynamic
             12482                                         2 for random.
             12483                                         (Not currently used.) */
             12484    1             3 * UBIN(2) UNAL,
             12485    1             3 TYPE UBIN(4) UNAL,
             12486                          /* For transaction DADs, file_type is
             12487                             always 12 ('C'X). */
             12488    1           2 MAX_RECORD_SIZE UBIN,
             12489                          /* Size of the largest record in this FD (bytes). */
             12490    1           2 BUFFER@D UBIN,
             12491                          /* Offset (in data) of the buffer to be written. */
             12492    1           2 ERROR_STATUS@D UBIN,
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:512  
             12493                          /* Offset (in data) of the 8-word space reserved
             12494                             for the ERROR STATUS variable. */
             12495    1           2 RELATIVE_KEY@ UBIN,
             12496                          /* Offset of the DAD describing the
             12497                             RELATIVE KEY variable.  (Unimplemented).  */
             12498    1           2 ID@P UBIN,
             12499                          /* Offset of the DAD describing the
             12500                             ID variable. */
             12501    1           2 STATUS_AREA@D UBIN,
             12502                          /* Offset (in data) of the QI$TRAN_STATUS
             12503                             status area for this transaction FD. */
             12504    1           2 IDENTIFIER@P UBIN,
             12505                          /* Offset (in procedure) of the ATEXTC
             12506                             of the file name. */
             12507    1           2 DCB# UBIN,
             12508                          /* SYMREFed DCBNUM for this TRAN_FILE. */
             12509    1           2 USE_PROCEDURE@P UBIN,
             12510                          /* Offset (in procedure) of the USE procedure. */
             12511    1           2 * UBIN,
             12512    1           2 TYPE@P UBIN;
             12513                          /* Offset of the DAD describing the
             12514                             TYPE variable. */
             12539    1     DCL 1 QI$FRAME BASED ALIGNED,
             12540    1           2 WORD0 SBIN,
             12541    1           2 WORD0_FLAGS REDEF WORD0,
             12542    1             3 INDIRECT BIT(1) UNAL,
             12543    1             3 * UBIN(5) UNAL,
             12544    1             3 IS_LINE_ORIGIN_VARIABLE BIT(1) UNAL,
             12545    1             3 IS_COLUMN_ORIGIN_VARIABLE BIT(1) UNAL,
             12546    1             3 IS_FORM_VARIABLE BIT(1) UNAL,
             12547    1             3 IS_CONSTANT BIT(1) UNAL,
             12548    1             3 * UBIN(2) UNAL,
             12549    1             3 TYPE UBIN(4) UNAL,
             12550    1           2 LINE_ORIGIN UBIN,
             12551    1           2 COLUMN_ORIGIN UBIN,
             12552    1           2 SON@P UBIN,
             12553    1           2 BROTHER@P UBIN,
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:513  
             12554    1           2 FATHER@P UBIN,
             12555                          /* chauvanists. */
             12556    1           2 STATUS_AREA@D UBIN,
             12557    1           2 IDENTIFIER@P UBIN;
             12582    1     DCL 1 QI$PICTURE_STRING BASED ALIGNED,
             12583    1           2 TYPE UBIN(3) UNAL,
             12584    1           2 * UBIN(13) UNAL,
             12585    1           2 OTHER_STUFF_A(0:0) UBIN;
             12610    1     DCL 1 QI$NUMERIC_PICTURE_STRING BASED ALIGNED,
             12611    1           2 TYPE UBIN(3) UNAL,
             12612    1           2 MAX_DIGIT_COUNT UBIN(5) UNAL,
             12613    1           2 * UBIN(2) UNAL,
             12614    1           2 DECIMAL_SCALING UBIN(6) UNAL,
             12615    1           2 MOP_STRING_COUNT UBIN BYTE UNAL,
             12616    1           2 MOP_STRING_A(0:0) UBIN BYTE UNAL;
             12641    1     DCL 1 QI$ALPHANUMERIC_PICTURE_STRING BASED ALIGNED,
             12642    1           2 TYPE UBIN(3) UNAL,
             12643    1           2 EDIT_STRING_COUNT UBIN(13) UNAL,
             12644    1           2 EDIT_STRING_A(0:0),
             12645    1             3 FUNCTION UBIN(2) UNAL,
             12646    1             3 LENGTH UBIN(14) UNAL;
             12671        /*    Although the compiler never explicitly generates this,
             12672              it's implicitly the largest possible *thing* to say
             12673              ACCEPT *thing* FROM TERMINAL-ATTRIBUTES
             12674              about.  See the FPL manual under the ACCEPT verb.
             12675        */
             12676    1     DCL 1 QI$TERMINAL_ATTRIBUTES BASED CALIGNED,
             12677    1           2 STATION_NAME CHAR(8) CALIGNED,
             12678    1           2 CURRENT_DEVICE_PROFILE CHAR(12) CALIGNED,
             12679    1           2 NUMBER_OF_LINES CHAR(4) CALIGNED,
             12680    1           2 NUMBER_OF_COLUMNS CHAR(4) CALIGNED,
             12681    1           2 DEVICE_I_O_CAPABILITY CHAR(1) CALIGNED,
             12682    1           2 CONNECTION_TYPE CHAR(1) CALIGNED,
             12683    1           2 CP_6_NODE CHAR(4) CALIGNED,
             12684    1           2 CP_6_PORT CHAR(4) CALIGNED,
             12685    1           2 PROGRAM_EXECUTION CHAR(1) CALIGNED,
             12686    1           2 DEVICE_TYPE CHAR(1) CALIGNED,
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:514  
             12687    1           2 CP_6_CONTROLLER CHAR(4) CALIGNED,
             12688    1           2 CP_6_DEVICE CHAR(4) CALIGNED;
             12689    1     DCL 1 QI$TERMINAL_ATTRIBUTES_TEXT REDEF QI$TERMINAL_ATTRIBUTES CHAR(48);
             12714        /*    Although the compiler never explicitly generates this,
             12715              it's implicitly the largest possible *thing* to say
             12716              ACTIVATION STATUS IS *thing*
             12717              about.  See the FPL manual under the SELECT clause.
             12718        */
             12719    1     DCL 1 QI$ACTIVATION_STATUS BASED CALIGNED,
             12720    1           2 ACTIVATION_CHARACTER CHAR(1) CALIGNED,
             12721    1           2 ACTIVATION_POSITION CHAR(3) CALIGNED,
             12722    1           2 ACTIVATION_LINE CHAR(3) CALIGNED,
             12723    1           2 ACTIVATION_COLUMN CHAR(3) CALIGNED,
             12724    1           2 ACTIVATION_FIELD CHAR(30) CALIGNED;
             12725    1     DCL 1 QI$ACTIVATION_STATUS_TEXT REDEF QI$ACTIVATION_STATUS CHAR(40);
             12750        /*
             12751          This structure is used by PERFM and PERFMT routines to refer
             12752          to iteration data.
             12753        */
             12754    1     DCL 1 QI$PERFORM_BLOCK BASED ALIGNED,
             12755    1           2 FROM@P UBIN,
             12756    1           2 RETURN$ PTR,
             12757    1           2 ITERATION UBIN;
             12783    1     DCL 1 QI$INDICATORS BASED ALIGNED,
             12787    1           2 IS_ACTIVE BIT(1) UNAL,
             12788                                           /* Is (or is in) an ACTIVATEd frame */
             12789    1           2 ENABLED_FLAGS,
             12790    1             3 IS_OUTPUT BIT(1) UNAL,
             12791                                           /* ENABLEd for OUTPUT */
             12792    1             3 IS_INPUT BIT(1) UNAL,
             12793                                           /* ENABLEd for INPUT */
             12794    1           2 ENABLED_VALUE REDEF ENABLED_FLAGS UBIN(2) UNAL,
             12795    1           2 STATE_FLAGS,
             12796    1             3 IS_AVAILABLE BIT(1) UNAL,
             12797                                           /* Last operation was a READ or ACCEPT */
             12798    1             3 IS_PRESENTED BIT(1) UNAL,
             12799                                           /* Last operation was a PRESENT */
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:515  
             12800    1           2 STATE_VALUE REDEF STATE_FLAGS UBIN(2) UNAL,
             12801    1           2 OPEN_FLAGS,
             12802    1             3 IS_OUTPUT BIT(1) UNAL,
             12803                                           /* Is (or is in) an FD opened
             12804                                              for INPUT or I-O */
             12805    1             3 IS_INPUT BIT(1) UNAL,
             12806                                           /* Is (or is in) an FD opened
             12807                                              for OUTPUT or I-O */
             12808    1           2 OPEN_VALUE REDEF OPEN_FLAGS UBIN(2) UNAL,
             12809    1           2 * UBIN(5) UNAL,
             12811    1           2 TYPE UBIN(4) UNAL;
             12812                                           /* Type is form, frame, or field */
             12813    1     DCL 1 QI$INDICATORS_A(0:0) REDEF QI$INDICATORS UBIN ALIGNED;
             12843    1     DCL 1 QI$FIELD_STATUS BASED ALIGNED,
             12844    1           2 GZ,
             12845    1             3 FIELD_START_INDEX UBIN,
             12846                                           /* starting index into interface table */
             12847    1             3 FIELD_STOP_INDEX UBIN,
             12848                                           /* ending index into interface table */
             12869    1         2 INDICATORS ALIGNED,
             12871    1           3 IS_ACTIVE BIT(1) UNAL,
             12872                                           /* Is (or is in) an ACTIVATEd frame */
             12873    1           3 ENABLED_FLAGS,
             12874    1             4 IS_OUTPUT BIT(1) UNAL,
             12875                                           /* ENABLEd for OUTPUT */
             12876    1             4 IS_INPUT BIT(1) UNAL,
             12877                                           /* ENABLEd for INPUT */
             12878    1           3 ENABLED_VALUE REDEF ENABLED_FLAGS UBIN(2) UNAL,
             12879    1           3 STATE_FLAGS,
             12880    1             4 IS_AVAILABLE BIT(1) UNAL,
             12881                                           /* Last operation was a READ or ACCEPT */
             12882    1             4 IS_PRESENTED BIT(1) UNAL,
             12883                                           /* Last operation was a PRESENT */
             12884    1           3 STATE_VALUE REDEF STATE_FLAGS UBIN(2) UNAL,
             12885    1           3 OPEN_FLAGS,
             12886    1             4 IS_OUTPUT BIT(1) UNAL,
             12887                                           /* Is (or is in) an FD opened
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:516  
             12888                                              for INPUT or I-O */
             12889    1             4 IS_INPUT BIT(1) UNAL,
             12890                                           /* Is (or is in) an FD opened
             12891                                              for OUTPUT or I-O */
             12892    1           3 OPEN_VALUE REDEF OPEN_FLAGS UBIN(2) UNAL,
             12893    1           3 * UBIN(5) UNAL,
             12899    1           3 TYPE UBIN(4) UNAL,
             12900                                           /* Type is form, frame, or field */
             12901    1         2 INDICATORS_A(0:0) REDEF INDICATORS UBIN ALIGNED ;
             12936    1     DCL 1 QI$MAJOR_STATUS BASED ALIGNED,
             12937    1           2 GZ,
             12938    1             3 FIELD_START_INDEX UBIN,
             12939                                           /* starting index into interface table */
             12940    1             3 FIELD_STOP_INDEX UBIN,
             12941                                           /* ending index into interface table */
             12962    1         2 INDICATORS ALIGNED,
             12964    1           3 IS_ACTIVE BIT(1) UNAL,
             12965                                           /* Is (or is in) an ACTIVATEd frame */
             12966    1           3 ENABLED_FLAGS,
             12967    1             4 IS_OUTPUT BIT(1) UNAL,
             12968                                           /* ENABLEd for OUTPUT */
             12969    1             4 IS_INPUT BIT(1) UNAL,
             12970                                           /* ENABLEd for INPUT */
             12971    1           3 ENABLED_VALUE REDEF ENABLED_FLAGS UBIN(2) UNAL,
             12972    1           3 STATE_FLAGS,
             12973    1             4 IS_AVAILABLE BIT(1) UNAL,
             12974                                           /* Last operation was a READ or ACCEPT */
             12975    1             4 IS_PRESENTED BIT(1) UNAL,
             12976                                           /* Last operation was a PRESENT */
             12977    1           3 STATE_VALUE REDEF STATE_FLAGS UBIN(2) UNAL,
             12978    1           3 OPEN_FLAGS,
             12979    1             4 IS_OUTPUT BIT(1) UNAL,
             12980                                           /* Is (or is in) an FD opened
             12981                                              for INPUT or I-O */
             12982    1             4 IS_INPUT BIT(1) UNAL,
             12983                                           /* Is (or is in) an FD opened
             12984                                              for OUTPUT or I-O */
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:517  
             12985    1           3 OPEN_VALUE REDEF OPEN_FLAGS UBIN(2) UNAL,
             12986    1           3 * UBIN(5) UNAL,
             12992    1           3 TYPE UBIN(4) UNAL,
             12993                                           /* Type is form, frame, or field */
             12994    1         2 INDICATORS_A(0:0) REDEF INDICATORS UBIN ALIGNED ;
             13029    1     DCL 1 QI$MINOR_STATUS BASED ALIGNED,
             13030    1           2 GZ,
             13031    1             3 FIELD_START_INDEX UBIN,
             13032                                           /* starting index into interface table */
             13033    1             3 FIELD_STOP_INDEX UBIN,
             13034                                           /* ending index into interface table */
             13055    1         2 INDICATORS ALIGNED,
             13057    1           3 IS_ACTIVE BIT(1) UNAL,
             13058                                           /* Is (or is in) an ACTIVATEd frame */
             13059    1           3 ENABLED_FLAGS,
             13060    1             4 IS_OUTPUT BIT(1) UNAL,
             13061                                           /* ENABLEd for OUTPUT */
             13062    1             4 IS_INPUT BIT(1) UNAL,
             13063                                           /* ENABLEd for INPUT */
             13064    1           3 ENABLED_VALUE REDEF ENABLED_FLAGS UBIN(2) UNAL,
             13065    1           3 STATE_FLAGS,
             13066    1             4 IS_AVAILABLE BIT(1) UNAL,
             13067                                           /* Last operation was a READ or ACCEPT */
             13068    1             4 IS_PRESENTED BIT(1) UNAL,
             13069                                           /* Last operation was a PRESENT */
             13070    1           3 STATE_VALUE REDEF STATE_FLAGS UBIN(2) UNAL,
             13071    1           3 OPEN_FLAGS,
             13072    1             4 IS_OUTPUT BIT(1) UNAL,
             13073                                           /* Is (or is in) an FD opened
             13074                                              for INPUT or I-O */
             13075    1             4 IS_INPUT BIT(1) UNAL,
             13076                                           /* Is (or is in) an FD opened
             13077                                              for OUTPUT or I-O */
             13078    1           3 OPEN_VALUE REDEF OPEN_FLAGS UBIN(2) UNAL,
             13079    1           3 * UBIN(5) UNAL,
             13085    1           3 TYPE UBIN(4) UNAL,
             13086                                           /* Type is form, frame, or field */
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:518  
             13087    1         2 INDICATORS_A(0:0) REDEF INDICATORS UBIN ALIGNED ;
             13122    1     DCL 1 QI$FILE_STATUS BASED ALIGNED,
             13123    1           2 CURRENT,
             13124    1             3 * BIT(5) UNAL,
             13125    1             3 USAGE,
             13126    1               4 OPENED BIT(1) UNAL,
             13127                          /* Opened is:  0 for never opened
             13128                                         1 for opened at least once. */
             13129    1               4 CLOSED BIT(1) UNAL,
             13130                          /* Closed is:  0 for never closed
             13131                                         1 for closed at least once. */
             13132    1             3 * UBIN(9) UNAL,
             13133    1           2 BACK_LINK@P UBIN,
             13134                          /* Back_link to the file FD
             13135                             (in procedure). */
             13136    1           2 FLINK$ PTR,
             13137                          /* Pointer to next opened FD of this type. */
             13138    1           2 * UBIN,
             13139    1           2 * UBIN,
             13140    1           2 * UBIN,
             13141    1           2 * UBIN,
             13162    1         2 INDICATORS ALIGNED,
             13164    1           3 IS_ACTIVE BIT(1) UNAL,
             13165                                           /* Is (or is in) an ACTIVATEd frame */
             13166    1           3 ENABLED_FLAGS,
             13167    1             4 IS_OUTPUT BIT(1) UNAL,
             13168                                           /* ENABLEd for OUTPUT */
             13169    1             4 IS_INPUT BIT(1) UNAL,
             13170                                           /* ENABLEd for INPUT */
             13171    1           3 ENABLED_VALUE REDEF ENABLED_FLAGS UBIN(2) UNAL,
             13172    1           3 STATE_FLAGS,
             13173    1             4 IS_AVAILABLE BIT(1) UNAL,
             13174                                           /* Last operation was a READ or ACCEPT */
             13175    1             4 IS_PRESENTED BIT(1) UNAL,
             13176                                           /* Last operation was a PRESENT */
             13177    1           3 STATE_VALUE REDEF STATE_FLAGS UBIN(2) UNAL,
             13178    1           3 OPEN_FLAGS,
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:519  
             13179    1             4 IS_OUTPUT BIT(1) UNAL,
             13180                                           /* Is (or is in) an FD opened
             13181                                              for INPUT or I-O */
             13182    1             4 IS_INPUT BIT(1) UNAL,
             13183                                           /* Is (or is in) an FD opened
             13184                                              for OUTPUT or I-O */
             13185    1           3 OPEN_VALUE REDEF OPEN_FLAGS UBIN(2) UNAL,
             13186    1           3 * UBIN(5) UNAL,
             13192    1           3 TYPE UBIN(4) UNAL,
             13193                                           /* Type is form, frame, or field */
             13194    1         2 INDICATORS_A(0:0) REDEF INDICATORS UBIN ALIGNED ;
             13229    1     DCL 1 QI$FORM_STATUS BASED ALIGNED,
             13230    1           2 CURRENT,
             13231    1             3 * BIT(3) UNAL,
             13232    1             3 IS_USE_PROCEDURE_ACTIVE,
             13233    1               4 STANDARD BIT(1) UNAL,
             13234    1               4 VERIFY BIT(1) UNAL,
             13235    1             3 USAGE,
             13236    1               4 OPENED BIT(1) UNAL,
             13237                          /* Opened is:  0 for never opened
             13238                                         1 for opened at least once. */
             13239    1               4 CLOSED BIT(1) UNAL,
             13240                          /* Closed is:  0 for never closed
             13241                                         1 for closed at least once. */
             13242    1             3 IS_MESSAGE_LINE_NON_BLANK BIT(1) UNAL,
             13243                          /* Set if the screen is currently displaying
             13244                             a non-blank MESSAGE LINE. */
             13245    1             3 IS_UPDATED BIT(1) UNAL,
             13246                          /* Set if the screen has been updated with
             13247                             a DISPLAY, WRITE or CLEAR and must be
             13248                             M$DEVICEd before a STOP "literal" or
             13249                             a host read. */
             13250    1             3 * UBIN(7) UNAL,
             13251    1           2 BACK_LINK@P UBIN,
             13252                          /* Back_link to the form FD
             13253                             (in procedure). */
             13254    1           2 FLINK$ PTR,
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:520  
             13255                          /* Pointer to next opened screen FD. */
             13256    1           2 GZ,
             13257    1             3 NEXT_AVAILABLE_FLDID UBIN,
             13258                          /* Next VDH FLDID to use for activating frames
             13259                             within this form. */
             13260    1           2 * UBIN,
             13261    1           2 * UBIN,
             13262    1           2 * UBIN,
             13283    1         2 INDICATORS ALIGNED,
             13285    1           3 IS_ACTIVE BIT(1) UNAL,
             13286                                           /* Is (or is in) an ACTIVATEd frame */
             13287    1           3 ENABLED_FLAGS,
             13288    1             4 IS_OUTPUT BIT(1) UNAL,
             13289                                           /* ENABLEd for OUTPUT */
             13290    1             4 IS_INPUT BIT(1) UNAL,
             13291                                           /* ENABLEd for INPUT */
             13292    1           3 ENABLED_VALUE REDEF ENABLED_FLAGS UBIN(2) UNAL,
             13293    1           3 STATE_FLAGS,
             13294    1             4 IS_AVAILABLE BIT(1) UNAL,
             13295                                           /* Last operation was a READ or ACCEPT */
             13296    1             4 IS_PRESENTED BIT(1) UNAL,
             13297                                           /* Last operation was a PRESENT */
             13298    1           3 STATE_VALUE REDEF STATE_FLAGS UBIN(2) UNAL,
             13299    1           3 OPEN_FLAGS,
             13300    1             4 IS_OUTPUT BIT(1) UNAL,
             13301                                           /* Is (or is in) an FD opened
             13302                                              for INPUT or I-O */
             13303    1             4 IS_INPUT BIT(1) UNAL,
             13304                                           /* Is (or is in) an FD opened
             13305                                              for OUTPUT or I-O */
             13306    1           3 OPEN_VALUE REDEF OPEN_FLAGS UBIN(2) UNAL,
             13307    1           3 * UBIN(5) UNAL,
             13313    1           3 TYPE UBIN(4) UNAL,
             13314                                           /* Type is form, frame, or field */
             13315    1         2 INDICATORS_A(0:0) REDEF INDICATORS UBIN ALIGNED ;
             13350    1     DCL 1 QI$TRAN_STATUS BASED ALIGNED,
             13351    1           2 CURRENT,
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:521  
             13352    1             3 * BIT(3) UNAL,
             13353    1             3 IS_RRR_ID_VALID BIT(1) UNAL,
             13354                          /* If is_rrr_id_valid, rrr_id is real and we
             13355                             should M$REP_OTP_COMP. */
             13356    1             3 * BIT(1) UNAL,
             13357    1             3 USAGE,
             13358    1               4 OPENED BIT(1) UNAL,
             13359                          /* Opened is:  0 for never opened
             13360                                         1 for opened at least once. */
             13361    1               4 CLOSED BIT(1) UNAL,
             13362                          /* Closed is:  0 for never closed
             13363                                         1 for closed at least once. */
             13364    1             3 * UBIN(9) UNAL,
             13365    1           2 BACK_LINK@P UBIN,
             13366                          /* Back_link to the transaction FD
             13367                             (in procedure). */
             13368    1           2 FLINK$ PTR,
             13369                          /* Pointer to next opened transaction FD. */
             13370    1           2 LAST_ID UBIN(32),
             13371                          /* Last transaction id produced by a
             13372                             WRITE to this FD. */
             13373    1           2 RRR_ID UBIN(32),
             13374                          /* RRR id of the last record READ,
             13375                             if it was WRITtEn secure. */
             13396    1         2 INDICATORS ALIGNED,
             13398    1           3 IS_ACTIVE BIT(1) UNAL,
             13399                                           /* Is (or is in) an ACTIVATEd frame */
             13400    1           3 ENABLED_FLAGS,
             13401    1             4 IS_OUTPUT BIT(1) UNAL,
             13402                                           /* ENABLEd for OUTPUT */
             13403    1             4 IS_INPUT BIT(1) UNAL,
             13404                                           /* ENABLEd for INPUT */
             13405    1           3 ENABLED_VALUE REDEF ENABLED_FLAGS UBIN(2) UNAL,
             13406    1           3 STATE_FLAGS,
             13407    1             4 IS_AVAILABLE BIT(1) UNAL,
             13408                                           /* Last operation was a READ or ACCEPT */
             13409    1             4 IS_PRESENTED BIT(1) UNAL,
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:522  
             13410                                           /* Last operation was a PRESENT */
             13411    1           3 STATE_VALUE REDEF STATE_FLAGS UBIN(2) UNAL,
             13412    1           3 OPEN_FLAGS,
             13413    1             4 IS_OUTPUT BIT(1) UNAL,
             13414                                           /* Is (or is in) an FD opened
             13415                                              for INPUT or I-O */
             13416    1             4 IS_INPUT BIT(1) UNAL,
             13417                                           /* Is (or is in) an FD opened
             13418                                              for OUTPUT or I-O */
             13419    1           3 OPEN_VALUE REDEF OPEN_FLAGS UBIN(2) UNAL,
             13420    1           3 * UBIN(5) UNAL,
             13426    1           3 TYPE UBIN(4) UNAL,
             13427                                           /* Type is form, frame, or field */
             13428    1         2 INDICATORS_A(0:0) REDEF INDICATORS UBIN ALIGNED ;
             13463    1     DCL 1 QI$FRAME_STATUS BASED ALIGNED,
             13464    1           2 GZ,
             13465    1             3 FIELD_START_INDEX UBIN,
             13466                                           /* Starting index into interface table. */
             13467    1             3 FIELD_STOP_INDEX UBIN,
             13468                                           /* Ending index into interface table. */
             13469    1             3 FLDID_START UBIN,
             13470                                           /* First VDH FLDID for this frame. */
             13471    1             3 FLDID_STOP UBIN,
             13472                                           /* Last VDH FLDID for this frame. */
             13473    1             3 HEADER$ PTR,
             13474                                           /* Pointer to interface header area */
             13475    1             3 START$ PTR,
             13476                                           /* Pointer to start of interface array */
             13477    1             3 STOP$ PTR,
             13478                                           /* Pointer to end of interface array */
             13479    1           2 CURRENT,
             13480    1             3 * BIT(5) UNAL,
             13481    1             3 USAGE,
             13482    1               4 ACTIVATED BIT(1) UNAL,
             13483                          /* Activated is:  0 for never activated
             13484                                            1 for activated at least once.  */
             13485    1               4 DEACTIVATED BIT(1) UNAL,
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:523  
             13486                          /* Deactivated is:  0 for never deactivated
             13487                                              1 for deactivated at least once.  */
             13488    1             3 * UBIN(9) UNAL,
             13489    1           2 FORM_BACK_LINK@P UBIN,
             13490                                           /* Back_link to the form FD
             13491                                              (in procedure). */
             13512    1         2 INDICATORS ALIGNED,
             13514    1           3 IS_ACTIVE BIT(1) UNAL,
             13515                                           /* Is (or is in) an ACTIVATEd frame */
             13516    1           3 ENABLED_FLAGS,
             13517    1             4 IS_OUTPUT BIT(1) UNAL,
             13518                                           /* ENABLEd for OUTPUT */
             13519    1             4 IS_INPUT BIT(1) UNAL,
             13520                                           /* ENABLEd for INPUT */
             13521    1           3 ENABLED_VALUE REDEF ENABLED_FLAGS UBIN(2) UNAL,
             13522    1           3 STATE_FLAGS,
             13523    1             4 IS_AVAILABLE BIT(1) UNAL,
             13524                                           /* Last operation was a READ or ACCEPT */
             13525    1             4 IS_PRESENTED BIT(1) UNAL,
             13526                                           /* Last operation was a PRESENT */
             13527    1           3 STATE_VALUE REDEF STATE_FLAGS UBIN(2) UNAL,
             13528    1           3 OPEN_FLAGS,
             13529    1             4 IS_OUTPUT BIT(1) UNAL,
             13530                                           /* Is (or is in) an FD opened
             13531                                              for INPUT or I-O */
             13532    1             4 IS_INPUT BIT(1) UNAL,
             13533                                           /* Is (or is in) an FD opened
             13534                                              for OUTPUT or I-O */
             13535    1           3 OPEN_VALUE REDEF OPEN_FLAGS UBIN(2) UNAL,
             13536    1           3 * UBIN(5) UNAL,
             13542    1           3 TYPE UBIN(4) UNAL,
             13543                                           /* Type is form, frame, or field */
             13544    1         2 INDICATORS_A(0:0) REDEF INDICATORS UBIN ALIGNED ;
             13570            %ENDIF;
       81    13573
       82    13574        /*
       83    13575           BASED general-purpose stuff.
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:524  
       84    13576        */
       85    13577          %QI$GENERAL;
             13578            %BEGIN_MACRO ( STCLASS = STCLASS );
             13579            %SET LISTDIR = '0'B;
             13607        /*
             13608            some useful stuff...
             13609        */
             13610    1     DCL QI$PROC_A@P(0:0) UBIN BASED;
             13611    1     DCL QI$DATA_A@D(0:0) UBIN BASED;
             13612    1     DCL QI$AREA_A@(0:0) UBIN BASED;
             13613    1     DCL 1 QI$BITS ALIGNED BASED,
             13614    1           2 BIT_A(0:0) BIT(1) UNAL;
             13615    1     DCL QI$CHAR_A(0:0) CHAR(1) CALIGNED BASED;
             13616    1     DCL QI$UBYTE_A(0:0) UBIN BYTE CALIGNED BASED;
             13617    1     DCL QI$SBYTE_A(0:0) SBIN BYTE CALIGNED BASED;
             13618    1     DCL QI$UWORD_A(0:0) UBIN BASED;
             13619    1     DCL QI$SWORD_A(0:0) SBIN BASED;
             13620    1     DCL QI$DWORD_A(0:0) BIT(32) ALIGNED BASED;
             13621    1     DCL QI$PTR_A$(0:0) PTR BASED;
             13622    1     DCL 1 QI$MESSAGE_TYPE CALIGNED BASED,
             13623    1           2 TEXT CHAR(8) UNAL;
             13624    1     DCL QI$MESSAGE_TYPE_A(0:7) REDEF QI$MESSAGE_TYPE UBIN BYTE CALIGNED;
             13625    1     DCL 1 QI$ERROR_STATUS CALIGNED BASED,
             13626    1           2 TEXT CHAR(8) UNAL;
             13627    1     DCL QI$ERROR_STATUS_A(0:7) REDEF QI$ERROR_STATUS UBIN BYTE CALIGNED;
             13628    1     DCL 1 QI$ERROR_MESSAGE_LINE CALIGNED BASED,
             13629    1           2 TEXT CHAR(72) UNAL;
             13630    1     DCL QI$ERROR_MESSAGE_LINE_A(0:71) REDEF QI$ERROR_MESSAGE_LINE UBIN BYTE CALIGNED;
             13631    1     DCL 1 QI$IDENTIFIER CALIGNED BASED,
             13632    1           2 TEXT CHAR(30) UNAL;
             13633    1     DCL QI$IDENTIFIER_A(0:29) REDEF QI$IDENTIFIER UBIN BYTE CALIGNED;
             13634    1     DCL 1 QI$VARIABLE_IDENTIFIER CALIGNED BASED,
             13635    1           2 LENGTH UBIN BYTE UNAL,
             13636    1           2 TEXT CHAR(QI$VARIABLE_IDENTIFIER.LENGTH) UNAL;
             13637        /*
             13638            note that the following require the QI_CONTEXT macro to be
             13639            invoked along with the QI$GENERAL one.
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:525  
             13640        */
             13641    1     DCL 1 QI$VARIABLE_STRING_SOURCE CALIGNED BASED,
             13642    1           2 TEXT CHAR(QI_1.OP.LEN.S) UNAL;
             13643    1     DCL 1 QI$VARIABLE_STRING_TARGET CALIGNED BASED,
             13644    1           2 TEXT CHAR(QI_1.OP.LEN.T) UNAL;
             13645    1     DCL 1 QI$VARIABLE_STRING_AUX CALIGNED BASED,
             13646    1           2 TEXT CHAR(QI_1.OP.LEN.AUX) UNAL;
             13662            %ENDIF;
       86    13665
       87    13666        /*
       88    13667           CONSTANT QI@CIP_OPERATION and QI_CIP_DESCRIPTOR stuff.
       89    13668        */
       90    13669          %QI_GENERAL_CIPS ( STCLASS = "CONSTANT SYMDEF" );
             13670            %BEGIN_MACRO ( STCLASS = STCLASS );
             13671            %SET LISTDIR = '0'B;
             13684            /* QI@CIP_OPERATION stuff.... */
             13721    1     DCL 1 QI_ALR CONSTANT SYMDEF DALIGNED,
             13725    1           2 CIP,
             13795    1               3 S DALIGNED,           /* CIP descriptor */
             13798    1                 4 CA,                  /* Control bits for ALPHANUMERIC */
             13799    1                   5 OFFSET UBIN(1) UNAL INIT(0)/**/,
             13800    1                   5 FILL UBIN(1) UNAL INIT(1)/**/,
             13801    1                   5 MBZ UBIN(1) UNAL INIT(0)/**/,
             13802    1                 4 CB REDEF CA,         /* Control bits for BINARY */
             13803    1                   5 OFFSET UBIN(1) UNAL,
             13804    1                   5 MBZ UBIN(2) UNAL,  /* not used:  MBZ */
             13805    1                 4 CD REDEF CA,         /* Control bits for DISPLAY */
             13806    1                   5 OFFSET UBIN(1) UNAL,
             13807    1                   5 SIGN UBIN(2) UNAL,
             13808    1                 4 CP REDEF CA,         /* Control bits for PACKED */
             13809    1                   5 OFFSET UBIN(2) UNAL,
             13810    1                   5 SIGN UBIN(1) UNAL,
             13854    1                 4 LEN UBIN(5) UNAL INIT(0)/**/,
             13858    1                 4 T UBIN(1) UNAL INIT(0)/**/,
             13860    1                 4 AS UBIN(7) UNAL INIT(BITBIN('B'X))/**/,
             13865    1                 4 DISP UBIN INIT(6)/**/,
             13866    1               3 S_A (0:1) REDEF S UBIN ,
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:526  
             13943    1               3 T DALIGNED,           /* CIP descriptor */
             13946    1                 4 CA,                  /* Control bits for ALPHANUMERIC */
             13947    1                   5 OFFSET UBIN(1) UNAL INIT(0)/**/,
             13948    1                   5 FILL UBIN(1) UNAL INIT(1)/**/,
             13949    1                   5 MBZ UBIN(1) UNAL INIT(0)/**/,
             13950    1                 4 CB REDEF CA,         /* Control bits for BINARY */
             13951    1                   5 OFFSET UBIN(1) UNAL,
             13952    1                   5 MBZ UBIN(2) UNAL,  /* not used:  MBZ */
             13953    1                 4 CD REDEF CA,         /* Control bits for DISPLAY */
             13954    1                   5 OFFSET UBIN(1) UNAL,
             13955    1                   5 SIGN UBIN(2) UNAL,
             13956    1                 4 CP REDEF CA,         /* Control bits for PACKED */
             13957    1                   5 OFFSET UBIN(2) UNAL,
             13958    1                   5 SIGN UBIN(1) UNAL,
             14002    1                 4 LEN UBIN(5) UNAL INIT(0)/**/,
             14006    1                 4 T UBIN(1) UNAL INIT(0)/**/,
             14008    1                 4 AS UBIN(7) UNAL INIT(BITBIN('B'X))/**/,
             14013    1                 4 DISP UBIN INIT(8)/**/,
             14014    1               3 T_A (0:1) REDEF T UBIN ,
             14091    1               3 AUX DALIGNED,           /* CIP descriptor */
             14094    1                 4 CA,                  /* Control bits for ALPHANUMERIC */
             14095    1                   5 OFFSET UBIN(1) UNAL INIT(0)/**/,
             14096    1                   5 FILL UBIN(1) UNAL INIT(1)/**/,
             14097    1                   5 MBZ UBIN(1) UNAL INIT(0)/**/,
             14098    1                 4 CB REDEF CA,         /* Control bits for BINARY */
             14099    1                   5 OFFSET UBIN(1) UNAL,
             14100    1                   5 MBZ UBIN(2) UNAL,  /* not used:  MBZ */
             14101    1                 4 CD REDEF CA,         /* Control bits for DISPLAY */
             14102    1                   5 OFFSET UBIN(1) UNAL,
             14103    1                   5 SIGN UBIN(2) UNAL,
             14104    1                 4 CP REDEF CA,         /* Control bits for PACKED */
             14105    1                   5 OFFSET UBIN(2) UNAL,
             14106    1                   5 SIGN UBIN(1) UNAL,
             14150    1                 4 LEN UBIN(5) UNAL INIT(0)/**/,
             14154    1                 4 T UBIN(1) UNAL INIT(0)/**/,
             14156    1                 4 AS UBIN(7) UNAL INIT(BITBIN('B'X))/**/,
             14161    1                 4 DISP UBIN INIT(10)/**/,
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:527  
             14162    1               3 AUX_A (0:1) REDEF AUX UBIN ,
             14176    1           2 CIP_A (0:2) REDEF CIP UBIN(32),
             14183    1           2 DATA DALIGNED,
             14184    1             3 S$ PTR INIT(ADDR(NIL))/**/,
             14185    1             3 T$ PTR INIT(ADDR(NIL))/**/,
             14186    1             3 AUX$ PTR INIT(ADDR(NIL))/**/,
             14187    1           2 DATA_A$ (0:2) REDEF DATA PTR,
             14223    1           2 LEN,
             14224    1             3 S UBIN INIT(1)/**/,
             14225    1             3 T UBIN INIT(0)/**/,
             14226    1             3 AUX UBIN INIT(0)/**/,
             14227    1           2 LEN_A (0:2) REDEF LEN UBIN,
             14228    1           2 SRCH_VRFY_ARGS REDEF LEN,
             14229    1             3 LEN UBIN,
             14230    1             3 LIST_LEN UBIN,
             14231    1             3 * UBIN,
             14232    1           2 SRCH_VRFY_ARGS_A (0:2) REDEF LEN UBIN,
             14233    1           2 SHIFT_COUNT REDEF LEN,
             14234    1             3 S UBIN,
             14235    1             3 T UBIN,
             14236    1             3 AUX UBIN,
             14237    1           2 SHIFT_COUNT_A (0:2) REDEF LEN UBIN,
             14240    1           2 INX,
             14241    1             3 S UBIN INIT(0)/**/,
             14242    1             3 T UBIN INIT(0)/**/,
             14243    1             3 AUX UBIN INIT(0)/**/,
             14244    1           2 INX_A (0:2) REDEF INX UBIN,
             14245    1           2 DEC REDEF INX,
             14246    1             3 S SBIN,
             14247    1             3 T SBIN,
             14248    1             3 AUX SBIN,
             14249    1           2 DEC_A (0:2) REDEF INX SBIN,
             14262    1           2 SRCH_VRFY_ELEMS,
             14263    1             3 LEN UBIN INIT(0)/**/,
             14264    1             3 LIST_LEN UBIN INIT(0)/**/,
             14265    1           2 SRCH_VRFY_ELEMS_A (0:1) REDEF SRCH_VRFY_ELEMS UBIN,
             14293    1           2 PICTURE_STRING,
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:528  
             14294    1             3 INTERMEDIATE_RESULT_LEN UBIN INIT(0)/**/,
             14295    1             3 DEC UBIN INIT(0)/**/,
             14296    1           2 PICTURE_STRING_A (0:1) REDEF PICTURE_STRING UBIN,
             14297    1           2 SRCH_RESULT REDEF PICTURE_STRING,
             14298    1             3 ARG_NUMBER UBIN,
             14299    1             3 DISP UBIN,
             14300    1           2 SRCH_RESULT_A (0:1) REDEF PICTURE_STRING UBIN,
             14301    1           2 VRFY_RESULT REDEF PICTURE_STRING,
             14302    1             3 DISP UBIN,
             14303    1             3 * UBIN,
             14304    1           2 VRFY_RESULT_A (0:1) REDEF PICTURE_STRING UBIN,
             14307    1           2 FILL_CHAR,
             14308    1             3 TEXT UBIN BYTE UNAL INIT(32)/**/,
             14309    1             3 * UBIN BYTE UNAL INIT(0)/**/,
             14310    1           2 SIZE_ERROR REDEF FILL_CHAR UBIN,
             14326    1           2 ROUND UBIN INIT(0)/**/,
             14327    1           2 COMP_RESULT REDEF ROUND UBIN,
             14328    1           2 TARGET_SIZE REDEF ROUND UBIN ;
             14386    1     DCL 1 QI_TYPE_DISPLAY_SOURCE CONSTANT SYMDEF DALIGNED,
             14390    1           2 CIP,
             14460    1               3 S DALIGNED,           /* CIP descriptor */
             14505    1                 4 CD,                  /* Control bits for DISPLAY */
             14506    1                   5 OFFSET UBIN(1) UNAL INIT(0)/**/,
             14507    1                   5 SIGN UBIN(2) UNAL INIT(0)/**/,
             14508    1                 4 CA REDEF CD,         /* Control bits for ALPHANUMERIC */
             14509    1                   5 OFFSET UBIN(1) UNAL,
             14510    1                   5 FILL UBIN(1) UNAL,
             14511    1                   5 MBZ UBIN(1) UNAL,  /* not used:  MBZ */
             14512    1                 4 CB REDEF CD,         /* Control bits for BINARY */
             14513    1                   5 OFFSET UBIN(1) UNAL,
             14514    1                   5 MBZ UBIN(2) UNAL,  /* not used:  MBZ */
             14515    1                 4 CP REDEF CD,         /* Control bits for PACKED */
             14516    1                   5 OFFSET UBIN(2) UNAL,
             14517    1                   5 SIGN UBIN(1) UNAL,
             14519    1                 4 LEN UBIN(5) UNAL INIT(15 /* %QI#MAX_DISPLAY */)/**/,
             14523    1                 4 T UBIN(1) UNAL INIT(0)/**/,
             14525    1                 4 AS UBIN(7) UNAL INIT(BITBIN('B'X))/**/,
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:529  
             14530    1                 4 DISP UBIN INIT(6)/**/,
             14531    1               3 S_A (0:1) REDEF S UBIN ,
             14608    1               3 T DALIGNED,           /* CIP descriptor */
             14611    1                 4 CA,                  /* Control bits for ALPHANUMERIC */
             14612    1                   5 OFFSET UBIN(1) UNAL INIT(0)/**/,
             14613    1                   5 FILL UBIN(1) UNAL INIT(1)/**/,
             14614    1                   5 MBZ UBIN(1) UNAL INIT(0)/**/,
             14615    1                 4 CB REDEF CA,         /* Control bits for BINARY */
             14616    1                   5 OFFSET UBIN(1) UNAL,
             14617    1                   5 MBZ UBIN(2) UNAL,  /* not used:  MBZ */
             14618    1                 4 CD REDEF CA,         /* Control bits for DISPLAY */
             14619    1                   5 OFFSET UBIN(1) UNAL,
             14620    1                   5 SIGN UBIN(2) UNAL,
             14621    1                 4 CP REDEF CA,         /* Control bits for PACKED */
             14622    1                   5 OFFSET UBIN(2) UNAL,
             14623    1                   5 SIGN UBIN(1) UNAL,
             14667    1                 4 LEN UBIN(5) UNAL INIT(0)/**/,
             14671    1                 4 T UBIN(1) UNAL INIT(0)/**/,
             14673    1                 4 AS UBIN(7) UNAL INIT(BITBIN('B'X))/**/,
             14678    1                 4 DISP UBIN INIT(8)/**/,
             14679    1               3 T_A (0:1) REDEF T UBIN ,
             14756    1               3 AUX DALIGNED,           /* CIP descriptor */
             14759    1                 4 CA,                  /* Control bits for ALPHANUMERIC */
             14760    1                   5 OFFSET UBIN(1) UNAL INIT(0)/**/,
             14761    1                   5 FILL UBIN(1) UNAL INIT(1)/**/,
             14762    1                   5 MBZ UBIN(1) UNAL INIT(0)/**/,
             14763    1                 4 CB REDEF CA,         /* Control bits for BINARY */
             14764    1                   5 OFFSET UBIN(1) UNAL,
             14765    1                   5 MBZ UBIN(2) UNAL,  /* not used:  MBZ */
             14766    1                 4 CD REDEF CA,         /* Control bits for DISPLAY */
             14767    1                   5 OFFSET UBIN(1) UNAL,
             14768    1                   5 SIGN UBIN(2) UNAL,
             14769    1                 4 CP REDEF CA,         /* Control bits for PACKED */
             14770    1                   5 OFFSET UBIN(2) UNAL,
             14771    1                   5 SIGN UBIN(1) UNAL,
             14815    1                 4 LEN UBIN(5) UNAL INIT(0)/**/,
             14819    1                 4 T UBIN(1) UNAL INIT(0)/**/,
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:530  
             14821    1                 4 AS UBIN(7) UNAL INIT(BITBIN('B'X))/**/,
             14826    1                 4 DISP UBIN INIT(10)/**/,
             14827    1               3 AUX_A (0:1) REDEF AUX UBIN ,
             14841    1           2 CIP_A (0:2) REDEF CIP UBIN(32),
             14848    1           2 DATA DALIGNED,
             14849    1             3 S$ PTR INIT(ADDR(NIL))/**/,
             14850    1             3 T$ PTR INIT(ADDR(NIL))/**/,
             14851    1             3 AUX$ PTR INIT(ADDR(NIL))/**/,
             14852    1           2 DATA_A$ (0:2) REDEF DATA PTR,
             14888    1           2 LEN,
             14889    1             3 S UBIN INIT(0)/**/,
             14890    1             3 T UBIN INIT(0)/**/,
             14891    1             3 AUX UBIN INIT(0)/**/,
             14892    1           2 LEN_A (0:2) REDEF LEN UBIN,
             14893    1           2 SRCH_VRFY_ARGS REDEF LEN,
             14894    1             3 LEN UBIN,
             14895    1             3 LIST_LEN UBIN,
             14896    1             3 * UBIN,
             14897    1           2 SRCH_VRFY_ARGS_A (0:2) REDEF LEN UBIN,
             14898    1           2 SHIFT_COUNT REDEF LEN,
             14899    1             3 S UBIN,
             14900    1             3 T UBIN,
             14901    1             3 AUX UBIN,
             14902    1           2 SHIFT_COUNT_A (0:2) REDEF LEN UBIN,
             14916    1           2 DEC,
             14917    1             3 S SBIN INIT(0)/**/,
             14918    1             3 T SBIN INIT(0)/**/,
             14919    1             3 AUX SBIN INIT(0)/**/,
             14920    1           2 DEC_A (0:2) REDEF DEC SBIN,
             14921    1           2 INX REDEF DEC,
             14922    1             3 S UBIN,
             14923    1             3 T UBIN,
             14924    1             3 AUX UBIN,
             14925    1           2 INX_A (0:2) REDEF DEC UBIN,
             14927    1           2 SRCH_VRFY_ELEMS,
             14928    1             3 LEN UBIN INIT(0)/**/,
             14929    1             3 LIST_LEN UBIN INIT(0)/**/,
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:531  
             14930    1           2 SRCH_VRFY_ELEMS_A (0:1) REDEF SRCH_VRFY_ELEMS UBIN,
             14958    1           2 PICTURE_STRING,
             14959    1             3 INTERMEDIATE_RESULT_LEN UBIN INIT(0)/**/,
             14960    1             3 DEC UBIN INIT(0)/**/,
             14961    1           2 PICTURE_STRING_A (0:1) REDEF PICTURE_STRING UBIN,
             14962    1           2 SRCH_RESULT REDEF PICTURE_STRING,
             14963    1             3 ARG_NUMBER UBIN,
             14964    1             3 DISP UBIN,
             14965    1           2 SRCH_RESULT_A (0:1) REDEF PICTURE_STRING UBIN,
             14966    1           2 VRFY_RESULT REDEF PICTURE_STRING,
             14967    1             3 DISP UBIN,
             14968    1             3 * UBIN,
             14969    1           2 VRFY_RESULT_A (0:1) REDEF PICTURE_STRING UBIN,
             14977    1           2 SIZE_ERROR UBIN INIT(0)/**/,
             14978    1           2 FILL_CHAR REDEF SIZE_ERROR,
             14979    1             3 TEXT UBIN BYTE UNAL,
             14980    1             3 * UBIN BYTE UNAL,
             14991    1           2 ROUND UBIN INIT(0)/**/,
             14992    1           2 COMP_RESULT REDEF ROUND UBIN,
             14993    1           2 TARGET_SIZE REDEF ROUND UBIN ;
             15052    1     DCL 1 QI_TYPE_DISPLAY_TARGET CONSTANT SYMDEF DALIGNED,
             15056    1           2 CIP,
             15126    1               3 S DALIGNED,           /* CIP descriptor */
             15129    1                 4 CA,                  /* Control bits for ALPHANUMERIC */
             15130    1                   5 OFFSET UBIN(1) UNAL INIT(0)/**/,
             15131    1                   5 FILL UBIN(1) UNAL INIT(1)/**/,
             15132    1                   5 MBZ UBIN(1) UNAL INIT(0)/**/,
             15133    1                 4 CB REDEF CA,         /* Control bits for BINARY */
             15134    1                   5 OFFSET UBIN(1) UNAL,
             15135    1                   5 MBZ UBIN(2) UNAL,  /* not used:  MBZ */
             15136    1                 4 CD REDEF CA,         /* Control bits for DISPLAY */
             15137    1                   5 OFFSET UBIN(1) UNAL,
             15138    1                   5 SIGN UBIN(2) UNAL,
             15139    1                 4 CP REDEF CA,         /* Control bits for PACKED */
             15140    1                   5 OFFSET UBIN(2) UNAL,
             15141    1                   5 SIGN UBIN(1) UNAL,
             15185    1                 4 LEN UBIN(5) UNAL INIT(0)/**/,
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:532  
             15189    1                 4 T UBIN(1) UNAL INIT(0)/**/,
             15191    1                 4 AS UBIN(7) UNAL INIT(BITBIN('B'X))/**/,
             15196    1                 4 DISP UBIN INIT(6)/**/,
             15197    1               3 S_A (0:1) REDEF S UBIN ,
             15274    1               3 T DALIGNED,           /* CIP descriptor */
             15319    1                 4 CD,                  /* Control bits for DISPLAY */
             15320    1                   5 OFFSET UBIN(1) UNAL INIT(0)/**/,
             15321    1                   5 SIGN UBIN(2) UNAL INIT(0)/**/,
             15322    1                 4 CA REDEF CD,         /* Control bits for ALPHANUMERIC */
             15323    1                   5 OFFSET UBIN(1) UNAL,
             15324    1                   5 FILL UBIN(1) UNAL,
             15325    1                   5 MBZ UBIN(1) UNAL,  /* not used:  MBZ */
             15326    1                 4 CB REDEF CD,         /* Control bits for BINARY */
             15327    1                   5 OFFSET UBIN(1) UNAL,
             15328    1                   5 MBZ UBIN(2) UNAL,  /* not used:  MBZ */
             15329    1                 4 CP REDEF CD,         /* Control bits for PACKED */
             15330    1                   5 OFFSET UBIN(2) UNAL,
             15331    1                   5 SIGN UBIN(1) UNAL,
             15333    1                 4 LEN UBIN(5) UNAL INIT(15 /* %QI#MAX_DISPLAY */)/**/,
             15337    1                 4 T UBIN(1) UNAL INIT(0)/**/,
             15339    1                 4 AS UBIN(7) UNAL INIT(BITBIN('B'X))/**/,
             15344    1                 4 DISP UBIN INIT(8)/**/,
             15345    1               3 T_A (0:1) REDEF T UBIN ,
             15422    1               3 AUX DALIGNED,           /* CIP descriptor */
             15425    1                 4 CA,                  /* Control bits for ALPHANUMERIC */
             15426    1                   5 OFFSET UBIN(1) UNAL INIT(0)/**/,
             15427    1                   5 FILL UBIN(1) UNAL INIT(1)/**/,
             15428    1                   5 MBZ UBIN(1) UNAL INIT(0)/**/,
             15429    1                 4 CB REDEF CA,         /* Control bits for BINARY */
             15430    1                   5 OFFSET UBIN(1) UNAL,
             15431    1                   5 MBZ UBIN(2) UNAL,  /* not used:  MBZ */
             15432    1                 4 CD REDEF CA,         /* Control bits for DISPLAY */
             15433    1                   5 OFFSET UBIN(1) UNAL,
             15434    1                   5 SIGN UBIN(2) UNAL,
             15435    1                 4 CP REDEF CA,         /* Control bits for PACKED */
             15436    1                   5 OFFSET UBIN(2) UNAL,
             15437    1                   5 SIGN UBIN(1) UNAL,
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:533  
             15481    1                 4 LEN UBIN(5) UNAL INIT(0)/**/,
             15485    1                 4 T UBIN(1) UNAL INIT(0)/**/,
             15487    1                 4 AS UBIN(7) UNAL INIT(BITBIN('B'X))/**/,
             15492    1                 4 DISP UBIN INIT(10)/**/,
             15493    1               3 AUX_A (0:1) REDEF AUX UBIN ,
             15507    1           2 CIP_A (0:2) REDEF CIP UBIN(32),
             15514    1           2 DATA DALIGNED,
             15515    1             3 S$ PTR INIT(ADDR(NIL))/**/,
             15516    1             3 T$ PTR INIT(ADDR(NIL))/**/,
             15517    1             3 AUX$ PTR INIT(ADDR(NIL))/**/,
             15518    1           2 DATA_A$ (0:2) REDEF DATA PTR,
             15554    1           2 LEN,
             15555    1             3 S UBIN INIT(0)/**/,
             15556    1             3 T UBIN INIT(0)/**/,
             15557    1             3 AUX UBIN INIT(0)/**/,
             15558    1           2 LEN_A (0:2) REDEF LEN UBIN,
             15559    1           2 SRCH_VRFY_ARGS REDEF LEN,
             15560    1             3 LEN UBIN,
             15561    1             3 LIST_LEN UBIN,
             15562    1             3 * UBIN,
             15563    1           2 SRCH_VRFY_ARGS_A (0:2) REDEF LEN UBIN,
             15564    1           2 SHIFT_COUNT REDEF LEN,
             15565    1             3 S UBIN,
             15566    1             3 T UBIN,
             15567    1             3 AUX UBIN,
             15568    1           2 SHIFT_COUNT_A (0:2) REDEF LEN UBIN,
             15582    1           2 DEC,
             15583    1             3 S SBIN INIT(0)/**/,
             15584    1             3 T SBIN INIT(0)/**/,
             15585    1             3 AUX SBIN INIT(0)/**/,
             15586    1           2 DEC_A (0:2) REDEF DEC SBIN,
             15587    1           2 INX REDEF DEC,
             15588    1             3 S UBIN,
             15589    1             3 T UBIN,
             15590    1             3 AUX UBIN,
             15591    1           2 INX_A (0:2) REDEF DEC UBIN,
             15593    1           2 SRCH_VRFY_ELEMS,
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:534  
             15594    1             3 LEN UBIN INIT(0)/**/,
             15595    1             3 LIST_LEN UBIN INIT(0)/**/,
             15596    1           2 SRCH_VRFY_ELEMS_A (0:1) REDEF SRCH_VRFY_ELEMS UBIN,
             15624    1           2 PICTURE_STRING,
             15625    1             3 INTERMEDIATE_RESULT_LEN UBIN INIT(0)/**/,
             15626    1             3 DEC UBIN INIT(0)/**/,
             15627    1           2 PICTURE_STRING_A (0:1) REDEF PICTURE_STRING UBIN,
             15628    1           2 SRCH_RESULT REDEF PICTURE_STRING,
             15629    1             3 ARG_NUMBER UBIN,
             15630    1             3 DISP UBIN,
             15631    1           2 SRCH_RESULT_A (0:1) REDEF PICTURE_STRING UBIN,
             15632    1           2 VRFY_RESULT REDEF PICTURE_STRING,
             15633    1             3 DISP UBIN,
             15634    1             3 * UBIN,
             15635    1           2 VRFY_RESULT_A (0:1) REDEF PICTURE_STRING UBIN,
             15643    1           2 SIZE_ERROR UBIN INIT(0)/**/,
             15644    1           2 FILL_CHAR REDEF SIZE_ERROR,
             15645    1             3 TEXT UBIN BYTE UNAL,
             15646    1             3 * UBIN BYTE UNAL,
             15657    1           2 ROUND UBIN INIT(0)/**/,
             15658    1           2 COMP_RESULT REDEF ROUND UBIN,
             15659    1           2 TARGET_SIZE REDEF ROUND UBIN ;
             15718    1     DCL 1 QI_TYPE_BINARY_TARGET CONSTANT SYMDEF DALIGNED,
             15722    1           2 CIP,
             15792    1               3 S DALIGNED,           /* CIP descriptor */
             15795    1                 4 CA,                  /* Control bits for ALPHANUMERIC */
             15796    1                   5 OFFSET UBIN(1) UNAL INIT(0)/**/,
             15797    1                   5 FILL UBIN(1) UNAL INIT(1)/**/,
             15798    1                   5 MBZ UBIN(1) UNAL INIT(0)/**/,
             15799    1                 4 CB REDEF CA,         /* Control bits for BINARY */
             15800    1                   5 OFFSET UBIN(1) UNAL,
             15801    1                   5 MBZ UBIN(2) UNAL,  /* not used:  MBZ */
             15802    1                 4 CD REDEF CA,         /* Control bits for DISPLAY */
             15803    1                   5 OFFSET UBIN(1) UNAL,
             15804    1                   5 SIGN UBIN(2) UNAL,
             15805    1                 4 CP REDEF CA,         /* Control bits for PACKED */
             15806    1                   5 OFFSET UBIN(2) UNAL,
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:535  
             15807    1                   5 SIGN UBIN(1) UNAL,
             15851    1                 4 LEN UBIN(5) UNAL INIT(0)/**/,
             15855    1                 4 T UBIN(1) UNAL INIT(0)/**/,
             15857    1                 4 AS UBIN(7) UNAL INIT(BITBIN('B'X))/**/,
             15862    1                 4 DISP UBIN INIT(6)/**/,
             15863    1               3 S_A (0:1) REDEF S UBIN ,
             15940    1               3 T DALIGNED,           /* CIP descriptor */
             15957    1                 4 CB,                  /* Control bits for BINARY */
             15958    1                   5 OFFSET UBIN(1) UNAL INIT(0)/**/,
             15959    1                   5 MBZ UBIN(2) UNAL INIT(0)/**/,
             15960    1                 4 CA REDEF CB,         /* Control bits for ALPHANUMERIC */
             15961    1                   5 OFFSET UBIN(1) UNAL,
             15962    1                   5 FILL UBIN(1) UNAL,
             15963    1                   5 MBZ UBIN(1) UNAL,  /* not used:  MBZ */
             15964    1                 4 CD REDEF CB,         /* Control bits for DISPLAY */
             15965    1                   5 OFFSET UBIN(1) UNAL,
             15966    1                   5 SIGN UBIN(2) UNAL,
             15967    1                 4 CP REDEF CB,         /* Control bits for PACKED */
             15968    1                   5 OFFSET UBIN(2) UNAL,
             15969    1                   5 SIGN UBIN(1) UNAL,
             15999    1                 4 LEN UBIN(5) UNAL INIT(2 /* %QI#MIN_BINARY_LENGTH */)/**/,
             16003    1                 4 T UBIN(1) UNAL INIT(0)/**/,
             16005    1                 4 AS UBIN(7) UNAL INIT(BITBIN('B'X))/**/,
             16010    1                 4 DISP UBIN INIT(8)/**/,
             16011    1               3 T_A (0:1) REDEF T UBIN ,
             16088    1               3 AUX DALIGNED,           /* CIP descriptor */
             16091    1                 4 CA,                  /* Control bits for ALPHANUMERIC */
             16092    1                   5 OFFSET UBIN(1) UNAL INIT(0)/**/,
             16093    1                   5 FILL UBIN(1) UNAL INIT(1)/**/,
             16094    1                   5 MBZ UBIN(1) UNAL INIT(0)/**/,
             16095    1                 4 CB REDEF CA,         /* Control bits for BINARY */
             16096    1                   5 OFFSET UBIN(1) UNAL,
             16097    1                   5 MBZ UBIN(2) UNAL,  /* not used:  MBZ */
             16098    1                 4 CD REDEF CA,         /* Control bits for DISPLAY */
             16099    1                   5 OFFSET UBIN(1) UNAL,
             16100    1                   5 SIGN UBIN(2) UNAL,
             16101    1                 4 CP REDEF CA,         /* Control bits for PACKED */
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:536  
             16102    1                   5 OFFSET UBIN(2) UNAL,
             16103    1                   5 SIGN UBIN(1) UNAL,
             16147    1                 4 LEN UBIN(5) UNAL INIT(0)/**/,
             16151    1                 4 T UBIN(1) UNAL INIT(0)/**/,
             16153    1                 4 AS UBIN(7) UNAL INIT(BITBIN('B'X))/**/,
             16158    1                 4 DISP UBIN INIT(10)/**/,
             16159    1               3 AUX_A (0:1) REDEF AUX UBIN ,
             16173    1           2 CIP_A (0:2) REDEF CIP UBIN(32),
             16180    1           2 DATA DALIGNED,
             16181    1             3 S$ PTR INIT(ADDR(NIL))/**/,
             16182    1             3 T$ PTR INIT(ADDR(NIL))/**/,
             16183    1             3 AUX$ PTR INIT(ADDR(NIL))/**/,
             16184    1           2 DATA_A$ (0:2) REDEF DATA PTR,
             16220    1           2 LEN,
             16221    1             3 S UBIN INIT(0)/**/,
             16222    1             3 T UBIN INIT(0)/**/,
             16223    1             3 AUX UBIN INIT(0)/**/,
             16224    1           2 LEN_A (0:2) REDEF LEN UBIN,
             16225    1           2 SRCH_VRFY_ARGS REDEF LEN,
             16226    1             3 LEN UBIN,
             16227    1             3 LIST_LEN UBIN,
             16228    1             3 * UBIN,
             16229    1           2 SRCH_VRFY_ARGS_A (0:2) REDEF LEN UBIN,
             16230    1           2 SHIFT_COUNT REDEF LEN,
             16231    1             3 S UBIN,
             16232    1             3 T UBIN,
             16233    1             3 AUX UBIN,
             16234    1           2 SHIFT_COUNT_A (0:2) REDEF LEN UBIN,
             16248    1           2 DEC,
             16249    1             3 S SBIN INIT(0)/**/,
             16250    1             3 T SBIN INIT(0)/**/,
             16251    1             3 AUX SBIN INIT(0)/**/,
             16252    1           2 DEC_A (0:2) REDEF DEC SBIN,
             16253    1           2 INX REDEF DEC,
             16254    1             3 S UBIN,
             16255    1             3 T UBIN,
             16256    1             3 AUX UBIN,
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:537  
             16257    1           2 INX_A (0:2) REDEF DEC UBIN,
             16259    1           2 SRCH_VRFY_ELEMS,
             16260    1             3 LEN UBIN INIT(0)/**/,
             16261    1             3 LIST_LEN UBIN INIT(0)/**/,
             16262    1           2 SRCH_VRFY_ELEMS_A (0:1) REDEF SRCH_VRFY_ELEMS UBIN,
             16290    1           2 PICTURE_STRING,
             16291    1             3 INTERMEDIATE_RESULT_LEN UBIN INIT(0)/**/,
             16292    1             3 DEC UBIN INIT(0)/**/,
             16293    1           2 PICTURE_STRING_A (0:1) REDEF PICTURE_STRING UBIN,
             16294    1           2 SRCH_RESULT REDEF PICTURE_STRING,
             16295    1             3 ARG_NUMBER UBIN,
             16296    1             3 DISP UBIN,
             16297    1           2 SRCH_RESULT_A (0:1) REDEF PICTURE_STRING UBIN,
             16298    1           2 VRFY_RESULT REDEF PICTURE_STRING,
             16299    1             3 DISP UBIN,
             16300    1             3 * UBIN,
             16301    1           2 VRFY_RESULT_A (0:1) REDEF PICTURE_STRING UBIN,
             16309    1           2 SIZE_ERROR UBIN INIT(0)/**/,
             16310    1           2 FILL_CHAR REDEF SIZE_ERROR,
             16311    1             3 TEXT UBIN BYTE UNAL,
             16312    1             3 * UBIN BYTE UNAL,
             16323    1           2 ROUND UBIN INIT(0)/**/,
             16324    1           2 COMP_RESULT REDEF ROUND UBIN,
             16325    1           2 TARGET_SIZE REDEF ROUND UBIN ;
             16391    1     DCL 1 QI_SRCH_VRFY CONSTANT SYMDEF DALIGNED,
             16395    1           2 CIP,
             16465    1               3 S DALIGNED,           /* CIP descriptor */
             16468    1                 4 CA,                  /* Control bits for ALPHANUMERIC */
             16469    1                   5 OFFSET UBIN(1) UNAL INIT(0)/**/,
             16470    1                   5 FILL UBIN(1) UNAL INIT(0)/**/,
             16471    1                   5 MBZ UBIN(1) UNAL INIT(0)/**/,
             16472    1                 4 CB REDEF CA,         /* Control bits for BINARY */
             16473    1                   5 OFFSET UBIN(1) UNAL,
             16474    1                   5 MBZ UBIN(2) UNAL,  /* not used:  MBZ */
             16475    1                 4 CD REDEF CA,         /* Control bits for DISPLAY */
             16476    1                   5 OFFSET UBIN(1) UNAL,
             16477    1                   5 SIGN UBIN(2) UNAL,
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:538  
             16478    1                 4 CP REDEF CA,         /* Control bits for PACKED */
             16479    1                   5 OFFSET UBIN(2) UNAL,
             16480    1                   5 SIGN UBIN(1) UNAL,
             16524    1                 4 LEN UBIN(5) UNAL INIT(0)/**/,
             16528    1                 4 T UBIN(1) UNAL INIT(0)/**/,
             16530    1                 4 AS UBIN(7) UNAL INIT(BITBIN('1B'X))/**/,
             16535    1                 4 DISP UBIN INIT(6)/**/,
             16536    1               3 S_A (0:1) REDEF S UBIN ,
             16613    1               3 T DALIGNED,           /* CIP descriptor */
             16616    1                 4 CA,                  /* Control bits for ALPHANUMERIC */
             16617    1                   5 OFFSET UBIN(1) UNAL INIT(0)/**/,
             16618    1                   5 FILL UBIN(1) UNAL INIT(0)/**/,
             16619    1                   5 MBZ UBIN(1) UNAL INIT(0)/**/,
             16620    1                 4 CB REDEF CA,         /* Control bits for BINARY */
             16621    1                   5 OFFSET UBIN(1) UNAL,
             16622    1                   5 MBZ UBIN(2) UNAL,  /* not used:  MBZ */
             16623    1                 4 CD REDEF CA,         /* Control bits for DISPLAY */
             16624    1                   5 OFFSET UBIN(1) UNAL,
             16625    1                   5 SIGN UBIN(2) UNAL,
             16626    1                 4 CP REDEF CA,         /* Control bits for PACKED */
             16627    1                   5 OFFSET UBIN(2) UNAL,
             16628    1                   5 SIGN UBIN(1) UNAL,
             16672    1                 4 LEN UBIN(5) UNAL INIT(4)/**/,
             16676    1                 4 T UBIN(1) UNAL INIT(0)/**/,
             16678    1                 4 AS UBIN(7) UNAL INIT(BITBIN('B'X))/**/,
             16683    1                 4 DISP UBIN INIT(8)/**/,
             16684    1               3 T_A (0:1) REDEF T UBIN ,
             16761    1               3 AUX DALIGNED,           /* CIP descriptor */
             16764    1                 4 CA,                  /* Control bits for ALPHANUMERIC */
             16765    1                   5 OFFSET UBIN(1) UNAL INIT(0)/**/,
             16766    1                   5 FILL UBIN(1) UNAL INIT(0)/**/,
             16767    1                   5 MBZ UBIN(1) UNAL INIT(0)/**/,
             16768    1                 4 CB REDEF CA,         /* Control bits for BINARY */
             16769    1                   5 OFFSET UBIN(1) UNAL,
             16770    1                   5 MBZ UBIN(2) UNAL,  /* not used:  MBZ */
             16771    1                 4 CD REDEF CA,         /* Control bits for DISPLAY */
             16772    1                   5 OFFSET UBIN(1) UNAL,
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:539  
             16773    1                   5 SIGN UBIN(2) UNAL,
             16774    1                 4 CP REDEF CA,         /* Control bits for PACKED */
             16775    1                   5 OFFSET UBIN(2) UNAL,
             16776    1                   5 SIGN UBIN(1) UNAL,
             16820    1                 4 LEN UBIN(5) UNAL INIT(0)/**/,
             16824    1                 4 T UBIN(1) UNAL INIT(0)/**/,
             16826    1                 4 AS UBIN(7) UNAL INIT(BITBIN('3B'X))/**/,
             16831    1                 4 DISP UBIN INIT(10)/**/,
             16832    1               3 AUX_A (0:1) REDEF AUX UBIN ,
             16846    1           2 CIP_A (0:2) REDEF CIP UBIN(32),
             16853    1           2 DATA DALIGNED,
             16854    1             3 S$ PTR INIT(ADDR(NIL))/**/,
             16855    1             3 T$ PTR INIT(ADDR(NIL))/**/,
             16856    1             3 AUX$ PTR INIT(ADDR(NIL))/**/,
             16857    1           2 DATA_A$ (0:2) REDEF DATA PTR,
             16861    1           2 SRCH_VRFY_ARGS,
             16862    1             3 LEN UBIN INIT(1)/**/,
             16863    1             3 LIST_LEN UBIN INIT(1)/**/,
             16864    1             3 * UBIN,
             16865    1           2 SRCH_VRFY_ARGS_A (0:2) REDEF SRCH_VRFY_ARGS UBIN,
             16866    1           2 SHIFT_COUNT REDEF SRCH_VRFY_ARGS,
             16867    1             3 S UBIN,
             16868    1             3 T UBIN,
             16869    1             3 AUX UBIN,
             16870    1           2 SHIFT_COUNT_A (0:2) REDEF SRCH_VRFY_ARGS UBIN,
             16871    1           2 LEN REDEF SRCH_VRFY_ARGS,
             16872    1             3 S UBIN,
             16873    1             3 T UBIN,
             16874    1             3 AUX UBIN,
             16875    1           2 LEN_A (0:2) REDEF SRCH_VRFY_ARGS UBIN,
             16921    1           2 DEC,
             16922    1             3 S SBIN INIT(0)/**/,
             16923    1             3 T SBIN INIT(0)/**/,
             16924    1             3 AUX SBIN INIT(0)/**/,
             16925    1           2 DEC_A (0:2) REDEF DEC SBIN,
             16926    1           2 INX REDEF DEC,
             16927    1             3 S UBIN,
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:540  
             16928    1             3 T UBIN,
             16929    1             3 AUX UBIN,
             16930    1           2 INX_A (0:2) REDEF DEC UBIN,
             16932    1           2 SRCH_VRFY_ELEMS,
             16933    1             3 LEN UBIN INIT(1)/**/,
             16934    1             3 LIST_LEN UBIN INIT(1)/**/,
             16935    1           2 SRCH_VRFY_ELEMS_A (0:1) REDEF SRCH_VRFY_ELEMS UBIN,
             16937    1           2 SRCH_RESULT,
             16938    1             3 ARG_NUMBER UBIN INIT(0)/**/,
             16939    1             3 DISP UBIN INIT(0)/**/,
             16940    1           2 SRCH_RESULT_A (0:1) REDEF SRCH_RESULT UBIN,
             16941    1           2 VRFY_RESULT REDEF SRCH_RESULT,
             16942    1             3 DISP UBIN,
             16943    1             3 * UBIN,
             16944    1           2 VRFY_RESULT_A (0:1) REDEF SRCH_RESULT UBIN,
             16945    1           2 PICTURE_STRING REDEF SRCH_RESULT,
             16946    1             3 INTERMEDIATE_RESULT_LEN UBIN,
             16947    1             3 DEC UBIN,
             16948    1           2 PICTURE_STRING_A (0:1) REDEF SRCH_RESULT UBIN,
             16977    1           2 FILL_CHAR,
             16978    1             3 TEXT UBIN BYTE UNAL INIT(32)/**/,
             16979    1             3 * UBIN BYTE UNAL INIT(0)/**/,
             16980    1           2 SIZE_ERROR REDEF FILL_CHAR UBIN,
             16996    1           2 ROUND UBIN INIT(0)/**/,
             16997    1           2 COMP_RESULT REDEF ROUND UBIN,
             16998    1           2 TARGET_SIZE REDEF ROUND UBIN ;
             17060    1     DCL 1 QI_MAT CONSTANT SYMDEF DALIGNED,
             17064    1           2 CIP,
             17134    1               3 S DALIGNED,           /* CIP descriptor */
             17137    1                 4 CA,                  /* Control bits for ALPHANUMERIC */
             17138    1                   5 OFFSET UBIN(1) UNAL INIT(0)/**/,
             17139    1                   5 FILL UBIN(1) UNAL INIT(0)/**/,
             17140    1                   5 MBZ UBIN(1) UNAL INIT(0)/**/,
             17141    1                 4 CB REDEF CA,         /* Control bits for BINARY */
             17142    1                   5 OFFSET UBIN(1) UNAL,
             17143    1                   5 MBZ UBIN(2) UNAL,  /* not used:  MBZ */
             17144    1                 4 CD REDEF CA,         /* Control bits for DISPLAY */
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:541  
             17145    1                   5 OFFSET UBIN(1) UNAL,
             17146    1                   5 SIGN UBIN(2) UNAL,
             17147    1                 4 CP REDEF CA,         /* Control bits for PACKED */
             17148    1                   5 OFFSET UBIN(2) UNAL,
             17149    1                   5 SIGN UBIN(1) UNAL,
             17193    1                 4 LEN UBIN(5) UNAL INIT(0)/**/,
             17197    1                 4 T UBIN(1) UNAL INIT(0)/**/,
             17199    1                 4 AS UBIN(7) UNAL INIT(BITBIN('1B'X))/**/,
             17204    1                 4 DISP UBIN INIT(6)/**/,
             17205    1               3 S_A (0:1) REDEF S UBIN ,
             17282    1               3 T DALIGNED,           /* CIP descriptor */
             17285    1                 4 CA,                  /* Control bits for ALPHANUMERIC */
             17286    1                   5 OFFSET UBIN(1) UNAL INIT(0)/**/,
             17287    1                   5 FILL UBIN(1) UNAL INIT(1)/**/,
             17288    1                   5 MBZ UBIN(1) UNAL INIT(0)/**/,
             17289    1                 4 CB REDEF CA,         /* Control bits for BINARY */
             17290    1                   5 OFFSET UBIN(1) UNAL,
             17291    1                   5 MBZ UBIN(2) UNAL,  /* not used:  MBZ */
             17292    1                 4 CD REDEF CA,         /* Control bits for DISPLAY */
             17293    1                   5 OFFSET UBIN(1) UNAL,
             17294    1                   5 SIGN UBIN(2) UNAL,
             17295    1                 4 CP REDEF CA,         /* Control bits for PACKED */
             17296    1                   5 OFFSET UBIN(2) UNAL,
             17297    1                   5 SIGN UBIN(1) UNAL,
             17341    1                 4 LEN UBIN(5) UNAL INIT(0)/**/,
             17345    1                 4 T UBIN(1) UNAL INIT(0)/**/,
             17347    1                 4 AS UBIN(7) UNAL INIT(BITBIN('2B'X))/**/,
             17352    1                 4 DISP UBIN INIT(8)/**/,
             17353    1               3 T_A (0:1) REDEF T UBIN ,
             17430    1               3 AUX DALIGNED,           /* CIP descriptor */
             17433    1                 4 CA,                  /* Control bits for ALPHANUMERIC */
             17434    1                   5 OFFSET UBIN(1) UNAL INIT(0)/**/,
             17435    1                   5 FILL UBIN(1) UNAL INIT(0)/**/,
             17436    1                   5 MBZ UBIN(1) UNAL INIT(0)/**/,
             17437    1                 4 CB REDEF CA,         /* Control bits for BINARY */
             17438    1                   5 OFFSET UBIN(1) UNAL,
             17439    1                   5 MBZ UBIN(2) UNAL,  /* not used:  MBZ */
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:542  
             17440    1                 4 CD REDEF CA,         /* Control bits for DISPLAY */
             17441    1                   5 OFFSET UBIN(1) UNAL,
             17442    1                   5 SIGN UBIN(2) UNAL,
             17443    1                 4 CP REDEF CA,         /* Control bits for PACKED */
             17444    1                   5 OFFSET UBIN(2) UNAL,
             17445    1                   5 SIGN UBIN(1) UNAL,
             17489    1                 4 LEN UBIN(5) UNAL INIT(0)/**/,
             17493    1                 4 T UBIN(1) UNAL INIT(0)/**/,
             17495    1                 4 AS UBIN(7) UNAL INIT(BITBIN('B'X))/**/,
             17500    1                 4 DISP UBIN INIT(10)/**/,
             17501    1               3 AUX_A (0:1) REDEF AUX UBIN ,
             17515    1           2 CIP_A (0:2) REDEF CIP UBIN(32),
             17522    1           2 DATA DALIGNED,
             17523    1             3 S$ PTR INIT(ADDR(NIL))/**/,
             17524    1             3 T$ PTR INIT(ADDR(NIL))/**/,
             17525    1             3 AUX$ PTR INIT(ADDR(NIL))/**/,
             17526    1           2 DATA_A$ (0:2) REDEF DATA PTR,
             17562    1           2 LEN,
             17563    1             3 S UBIN INIT(0)/**/,
             17564    1             3 T UBIN INIT(0)/**/,
             17565    1             3 AUX UBIN INIT(256)/**/,
             17566    1           2 LEN_A (0:2) REDEF LEN UBIN,
             17567    1           2 SRCH_VRFY_ARGS REDEF LEN,
             17568    1             3 LEN UBIN,
             17569    1             3 LIST_LEN UBIN,
             17570    1             3 * UBIN,
             17571    1           2 SRCH_VRFY_ARGS_A (0:2) REDEF LEN UBIN,
             17572    1           2 SHIFT_COUNT REDEF LEN,
             17573    1             3 S UBIN,
             17574    1             3 T UBIN,
             17575    1             3 AUX UBIN,
             17576    1           2 SHIFT_COUNT_A (0:2) REDEF LEN UBIN,
             17590    1           2 DEC,
             17591    1             3 S SBIN INIT(0)/**/,
             17592    1             3 T SBIN INIT(0)/**/,
             17593    1             3 AUX SBIN INIT(0)/**/,
             17594    1           2 DEC_A (0:2) REDEF DEC SBIN,
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:543  
             17595    1           2 INX REDEF DEC,
             17596    1             3 S UBIN,
             17597    1             3 T UBIN,
             17598    1             3 AUX UBIN,
             17599    1           2 INX_A (0:2) REDEF DEC UBIN,
             17601    1           2 SRCH_VRFY_ELEMS,
             17602    1             3 LEN UBIN INIT(0)/**/,
             17603    1             3 LIST_LEN UBIN INIT(0)/**/,
             17604    1           2 SRCH_VRFY_ELEMS_A (0:1) REDEF SRCH_VRFY_ELEMS UBIN,
             17632    1           2 PICTURE_STRING,
             17633    1             3 INTERMEDIATE_RESULT_LEN UBIN INIT(0)/**/,
             17634    1             3 DEC UBIN INIT(0)/**/,
             17635    1           2 PICTURE_STRING_A (0:1) REDEF PICTURE_STRING UBIN,
             17636    1           2 SRCH_RESULT REDEF PICTURE_STRING,
             17637    1             3 ARG_NUMBER UBIN,
             17638    1             3 DISP UBIN,
             17639    1           2 SRCH_RESULT_A (0:1) REDEF PICTURE_STRING UBIN,
             17640    1           2 VRFY_RESULT REDEF PICTURE_STRING,
             17641    1             3 DISP UBIN,
             17642    1             3 * UBIN,
             17643    1           2 VRFY_RESULT_A (0:1) REDEF PICTURE_STRING UBIN,
             17646    1           2 FILL_CHAR,
             17647    1             3 TEXT UBIN BYTE UNAL INIT(01 /* QI_MAT_MATCH */)/**/,
             17648    1             3 * UBIN BYTE UNAL INIT(0)/**/,
             17649    1           2 SIZE_ERROR REDEF FILL_CHAR UBIN,
             17665    1           2 ROUND UBIN INIT(0)/**/,
             17666    1           2 COMP_RESULT REDEF ROUND UBIN,
             17667    1           2 TARGET_SIZE REDEF ROUND UBIN ;
             17688            /* QI_CIP_DESCRIPTOR stuff.... */
             17760    1           DCL 1 QI_4_CHAR_ALPHANUMERIC CONSTANT SYMDEF DALIGNED, /* CIP descriptor */
             17765    1                 2 CA,                  /* Control bits for ALPHANUMERIC */
             17766    1                   3 OFFSET UBIN(1) UNAL INIT(0)/**/,
             17767    1                   3 FILL UBIN(1) UNAL INIT(1)/**/,
             17768    1                   3 MBZ UBIN(1) UNAL INIT(0)/**/,
             17769    1                 2 CB REDEF CA,         /* Control bits for BINARY */
             17770    1                   3 OFFSET UBIN(1) UNAL,
             17771    1                   3 MBZ UBIN(2) UNAL,  /* not used:  MBZ */
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:544  
             17772    1                 2 CD REDEF CA,         /* Control bits for DISPLAY */
             17773    1                   3 OFFSET UBIN(1) UNAL,
             17774    1                   3 SIGN UBIN(2) UNAL,
             17775    1                 2 CP REDEF CA,         /* Control bits for PACKED */
             17776    1                   3 OFFSET UBIN(2) UNAL,
             17777    1                   3 SIGN UBIN(1) UNAL,
             17821    1                 2 LEN UBIN(5) UNAL INIT(4)/**/,
             17825    1                 2 T UBIN(1) UNAL INIT(0)/**/,
             17827    1                 2 AS UBIN(7) UNAL INIT(BITBIN('B'X))/**/,
             17829    1                 2 DISP UBIN INIT(6)/**/;
             17830    1           DCL 1 QI_4_CHAR_ALPHANUMERIC_A (0:1) REDEF QI_4_CHAR_ALPHANUMERIC UBIN;
             17928    1          DCL 1 QI_31_DIGIT_SLS_DISPLAY CONSTANT SYMDEF DALIGNED, /* CIP descriptor */
             17975    1                 2 CD,                  /* Control bits for DISPLAY */
             17976    1                   3 OFFSET UBIN(1) UNAL INIT(0)/**/,
             17977    1                   3 SIGN UBIN(2) UNAL INIT(2)/**/,
             17978    1                 2 CA REDEF CD,         /* Control bits for ALPHANUMERIC */
             17979    1                   3 OFFSET UBIN(1) UNAL,
             17980    1                   3 FILL UBIN(1) UNAL,
             17981    1                   3 MBZ UBIN(1) UNAL,  /* not used:  MBZ */
             17982    1                 2 CB REDEF CD,         /* Control bits for BINARY */
             17983    1                   3 OFFSET UBIN(1) UNAL,
             17984    1                   3 MBZ UBIN(2) UNAL,  /* not used:  MBZ */
             17985    1                 2 CP REDEF CD,         /* Control bits for PACKED */
             17986    1                   3 OFFSET UBIN(2) UNAL,
             17987    1                   3 SIGN UBIN(1) UNAL,
             17989    1                 2 LEN UBIN(5) UNAL INIT(31)/**/,
             17993    1                 2 T UBIN(1) UNAL INIT(0)/**/,
             17995    1                 2 AS UBIN(7) UNAL INIT(BITBIN('B'X))/**/,
             17997    1                 2 DISP UBIN INIT(6)/**/;
             17998    1           DCL 1 QI_31_DIGIT_SLS_DISPLAY_A (0:1) REDEF QI_31_DIGIT_SLS_DISPLAY UBIN;
             18095    1           DCL 1 QI_16_BIT_BINARY CONSTANT SYMDEF DALIGNED,       /* CIP descriptor */
             18114    1                 2 CB,                  /* Control bits for BINARY */
             18115    1                   3 OFFSET UBIN(1) UNAL INIT(0)/**/,
             18116    1                   3 MBZ UBIN(2) UNAL INIT(0)/**/,
             18117    1                 2 CA REDEF CB,         /* Control bits for ALPHANUMERIC */
             18118    1                   3 OFFSET UBIN(1) UNAL,
             18119    1                   3 FILL UBIN(1) UNAL,
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:545  
             18120    1                   3 MBZ UBIN(1) UNAL,  /* not used:  MBZ */
             18121    1                 2 CD REDEF CB,         /* Control bits for DISPLAY */
             18122    1                   3 OFFSET UBIN(1) UNAL,
             18123    1                   3 SIGN UBIN(2) UNAL,
             18124    1                 2 CP REDEF CB,         /* Control bits for PACKED */
             18125    1                   3 OFFSET UBIN(2) UNAL,
             18126    1                   3 SIGN UBIN(1) UNAL,
             18156    1                 2 LEN UBIN(5) UNAL INIT(2)/**/,
             18160    1                 2 T UBIN(1) UNAL INIT(0)/**/,
             18162    1                 2 AS UBIN(7) UNAL INIT(BITBIN('B'X))/**/,
             18164    1                 2 DISP UBIN INIT(6)/**/;
             18165    1           DCL 1 QI_16_BIT_BINARY_A (0:1) REDEF QI_16_BIT_BINARY UBIN;
             18262    1           DCL 1 QI_32_BIT_BINARY CONSTANT SYMDEF DALIGNED,       /* CIP descriptor */
             18281    1                 2 CB,                  /* Control bits for BINARY */
             18282    1                   3 OFFSET UBIN(1) UNAL INIT(0)/**/,
             18283    1                   3 MBZ UBIN(2) UNAL INIT(0)/**/,
             18284    1                 2 CA REDEF CB,         /* Control bits for ALPHANUMERIC */
             18285    1                   3 OFFSET UBIN(1) UNAL,
             18286    1                   3 FILL UBIN(1) UNAL,
             18287    1                   3 MBZ UBIN(1) UNAL,  /* not used:  MBZ */
             18288    1                 2 CD REDEF CB,         /* Control bits for DISPLAY */
             18289    1                   3 OFFSET UBIN(1) UNAL,
             18290    1                   3 SIGN UBIN(2) UNAL,
             18291    1                 2 CP REDEF CB,         /* Control bits for PACKED */
             18292    1                   3 OFFSET UBIN(2) UNAL,
             18293    1                   3 SIGN UBIN(1) UNAL,
             18323    1                 2 LEN UBIN(5) UNAL INIT(4)/**/,
             18327    1                 2 T UBIN(1) UNAL INIT(0)/**/,
             18329    1                 2 AS UBIN(7) UNAL INIT(BITBIN('B'X))/**/,
             18331    1                 2 DISP UBIN INIT(6)/**/;
             18332    1           DCL 1 QI_32_BIT_BINARY_A (0:1) REDEF QI_32_BIT_BINARY UBIN;
             18430    1           DCL 1 QI_31_DIGIT_ST_PACKED CONSTANT SYMDEF DALIGNED,  /* CIP descriptor */
             18463    1                 2 CP,                  /* Control bits for PACKED */
             18464    1                   3 OFFSET UBIN(2) UNAL INIT(0)/**/,
             18465    1                   3 SIGN UBIN(1) UNAL INIT(1)/**/,
             18466    1                 2 CA REDEF CP,         /* Control bits for ALPHANUMERIC */
             18467    1                   3 OFFSET UBIN(1) UNAL,
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:546  
             18468    1                   3 FILL UBIN(1) UNAL,
             18469    1                   3 MBZ UBIN(1) UNAL,  /* not used:  MBZ */
             18470    1                 2 CB REDEF CP,         /* Control bits for BINARY */
             18471    1                   3 OFFSET UBIN(1) UNAL,
             18472    1                   3 MBZ UBIN(2) UNAL,  /* not used:  MBZ */
             18473    1                 2 CD REDEF CP,         /* Control bits for DISPLAY */
             18474    1                   3 OFFSET UBIN(1) UNAL,
             18475    1                   3 SIGN UBIN(2) UNAL,
             18491    1                 2 LEN UBIN(5) UNAL INIT(31)/**/,
             18493    1                 2 T UBIN(1) UNAL INIT(1)/**/,
             18497    1                 2 AS UBIN(7) UNAL INIT(BITBIN('B'X))/**/,
             18499    1                 2 DISP UBIN INIT(6)/**/;
             18500    1           DCL 1 QI_31_DIGIT_ST_PACKED_A (0:1) REDEF QI_31_DIGIT_ST_PACKED UBIN;
             18598    1           DCL 1 QI_PICTURE_STRING CONSTANT SYMDEF DALIGNED,      /* CIP descriptor */
             18603    1                 2 CA,                  /* Control bits for ALPHANUMERIC */
             18604    1                   3 OFFSET UBIN(1) UNAL INIT(1)/**/,
             18605    1                   3 FILL UBIN(1) UNAL INIT(1)/**/,
             18606    1                   3 MBZ UBIN(1) UNAL INIT(0)/**/,
             18607    1                 2 CB REDEF CA,         /* Control bits for BINARY */
             18608    1                   3 OFFSET UBIN(1) UNAL,
             18609    1                   3 MBZ UBIN(2) UNAL,  /* not used:  MBZ */
             18610    1                 2 CD REDEF CA,         /* Control bits for DISPLAY */
             18611    1                   3 OFFSET UBIN(1) UNAL,
             18612    1                   3 SIGN UBIN(2) UNAL,
             18613    1                 2 CP REDEF CA,         /* Control bits for PACKED */
             18614    1                   3 OFFSET UBIN(2) UNAL,
             18615    1                   3 SIGN UBIN(1) UNAL,
             18659    1                 2 LEN UBIN(5) UNAL INIT(0)/**/,
             18663    1                 2 T UBIN(1) UNAL INIT(0)/**/,
             18665    1                 2 AS UBIN(7) UNAL INIT(BITBIN('B'X))/**/,
             18667    1                 2 DISP UBIN INIT(10)/**/;
             18668    1           DCL 1 QI_PICTURE_STRING_A (0:1) REDEF QI_PICTURE_STRING UBIN;
             18710    1     DCL 1 QI_ACCUMULATOR_DAD CONSTANT SYMDEF ALIGNED,
             18711                          /* CONSTANT "DAD" describing QI_1.ACCUM. */
             18712    1           2 * UBIN(12) UNAL /* Was INIT'ed to:  (0)/**/,
             18713    1           2 TYPE UBIN(4) UNAL /* Was INIT'ed to:  (1)/**/,
             18773    1               2 CIP DALIGNED,           /* CIP descriptor */
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:547  
             18804    1                 3 CP,                  /* Control bits for PACKED */
             18805    1                   4 OFFSET UBIN(2) UNAL INIT(0)/**/,
             18806    1                   4 SIGN UBIN(1) UNAL INIT(1)/**/,
             18807    1                 3 CA REDEF CP,         /* Control bits for ALPHANUMERIC */
             18808    1                   4 OFFSET UBIN(1) UNAL,
             18809    1                   4 FILL UBIN(1) UNAL,
             18810    1                   4 MBZ UBIN(1) UNAL,  /* not used:  MBZ */
             18811    1                 3 CB REDEF CP,         /* Control bits for BINARY */
             18812    1                   4 OFFSET UBIN(1) UNAL,
             18813    1                   4 MBZ UBIN(2) UNAL,  /* not used:  MBZ */
             18814    1                 3 CD REDEF CP,         /* Control bits for DISPLAY */
             18815    1                   4 OFFSET UBIN(1) UNAL,
             18816    1                   4 SIGN UBIN(2) UNAL,
             18832    1                 3 LEN UBIN(5) UNAL INIT(31)/**/,
             18834    1                 3 T UBIN(1) UNAL INIT(1)/**/,
             18838    1                 3 AS UBIN(7) UNAL INIT(BITBIN('B'X))/**/,
             18843    1                 3 DISP UBIN INIT(6)/**/,
             18844    1               2 CIP_A (0:1) REDEF CIP UBIN ;
             18873            %ENDIF;
       91    18876
       92    18877        /*
       93    18878            Dynamic stuff.
       94    18879        */
       95    18880          %QI$DYNAMIC;
             18881            %BEGIN_MACRO ( STCLASS = STCLASS );
             18882            %SET LISTDIR = '0'B;
             18910    1     DCL 1 QI$GZ_HEADER BASED ALIGNED,
             18911    1           2 IS_ACTIVE BIT(1) ALIGNED,
             18912                                           /* "Does this QI$GZ_HEADER represent an
             18913                                              ACTIVE something-or-other?" indicator */
             18914    1           2 BACK_LINK$ PTR,
             18915                                           /* Back_link to last QI$GZ_HEADER */
             18916    1           2 DCB# UBIN,
             18917                                           /* DCB# for this header */
             18918    1           2 FIELD_COUNT UBIN,
             18919                                           /* number of fields following this header */
             18920    1           2 FRAME_DAD$ PTR,
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:548  
             18921                                           /* ptr to frame DAD for this header */
             18922    1           2 OPERATION,
             18923    1             3 START_INDEX UBIN,
             18924                                           /* starting index into the field array
             18925                                              following this header */
             18926    1             3 STOP_INDEX UBIN,
             18927                                           /* stopping index into the field array
             18928                                              following this header */
             18929    1             3 DONE_INDEX UBIN,
             18930                                           /* index into the field array
             18931                                              following this header of
             18932                                              the last field actually operated on */
             18933    1           2 STATUS UBIN;
             18934                                           /* returned status */
             18959    1     DCL 1 QI$GZ_FIELD BASED ALIGNED,
             18960    1           2 INDICATORS$ PTR,
             18961    1           2 DESCRIPTION,
             18962    1             3 IO_FLAGS,
             18963    1               4 IS_OUTPUT BIT(1) UNAL,
             18964                                           /* on if this FIELD is OUTPUT or I-O */
             18965    1               4 IS_INPUT BIT(1) UNAL,
             18966                                           /* on if this FIELD is INPUT or I-O */
             18967    1             3 IO_VALUE REDEF IO_FLAGS UBIN(2) UNAL,
             18968                                           /* all 1's if this field is I-O */
             18969    1             3 IS_ENTRY_REQUIRED BIT(1) UNAL,
             18970                                           /* on if ENTRY-REQUIRED */
             18971    1             3 IS_OUTPUT_CONSTANT BIT(1) UNAL,
             18972                                           /* on if OUTPUT CONSTANT */
             18973    1             3 IS_AOIM BIT(1) UNAL,
             18974                                           /* on if A-O-I-M */
             18975    1             3 * UBIN(3) UNAL,
             18976    1             3 LENGTH UBIN BYTE CALIGNED,
             18977                                           /* field length */
             18978    1             3 POSITION,
             18979    1               4 LINE UBIN BYTE CALIGNED,
             18980                                           /* LINE whatever */
             18981    1               4 COLUMN UBIN BYTE CALIGNED,
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:549  
             18982                                           /* COLUMN whatever */
             18983    1             3 FIELD_DAD$ PTR,
             18984                                           /* ptr back to the original field DAD */
             18985    1           2 STATUS,
             18986    1             3 OFFSET UBIN(1) UNAL,
             18987                                           /* byte offset from DATA$ of the real data */
             18988    1             3 IS_AOIM_MODIFIED BIT(1) UNAL,
             18989                                           /* on if this A-O-I-M field was modified,
             18990                                              off if this A-O-I-M field hasn't changed */
             18991    1             3 IS_VALUE_DEFAULT BIT(1) UNAL,
             18992                                           /* on if data came from a DEFAULT clause,
             18993                                              off if data came from a terminal */
             18994    1             3 WAS_IO_EVER_DONE BIT(1) UNAL,
             18995                                           /* reset by USE prep code */
             18996    1             3 LENGTH UBIN BYTE CALIGNED,
             18997                                           /* length of data returned */
             18998    1             3 VISUAL_ATTRIBUTE UBIN BYTE CALIGNED,
             18999                                           /* ABStractGRPhicRNDition goop */
             19000    1             3 FLDID UBIN,
             19001                                           /* VDH FLDID for this elementary
             19002                                              field */
             19003    1             3 DATA$ PTR,
             19004                                           /* ptr to the real data */
             19005    1           2 OPERATION,
             19006    1             3 IS_OPERATE BIT(1) UNAL,
             19007                                           /* do something */
             19008    1             3 IS_VISUAL_ATTRIBUTE_CHANGE BIT(1) UNAL,
             19009                                           /* change the VISUAL-ATTRIBUTE
             19010                                              while yer at it */
             19011    1             3 IS_DONE BIT(1) UNAL,
             19012                                           /* did something */
             19013    1           2 FPL_ERROR BIT(1) UNAL,
             19014                                           /* internally detected oops */
             19015    1           2 USE_STUFF UBIN(4) UNAL;
             19016                                           /* cleared field for
             19017                                              USE prep code */
             19033            %ENDIF;
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:550  
       96    19036
       97    19037    1   END QI_DATA_D;

PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:551  
--  Include file information  --

   QI_MACROS_M.:E05TOU  is referenced.
   QI_PERR_C.:E05TOU  is referenced.
   QI_EQUATES_E.:E05TOU  is referenced.
   QG_MACRO_M.:E05TOU  is referenced.
   LCP_6.:E05TOU  cannot be made into a system file and is referenced.
   G_LCP6_E.:E05TOU  was found in the system file and is referenced.
   GT_LCP6_M.:E05TOU  was found in the system file and is referenced.
   KI_CP6.:E05TOU  was found in the system file and is referenced.
   GF_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GM_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GU_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GJ_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GH_LCP6_M.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure QI_DATA_D.
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:552  

 **** Variables and constants ****

  ****  Section 000  Data  QI_DATA_D

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d STRC(2576)  r     1 QI_1                      CD-0-0/w STRC(48)    r     1 QI_VLP_SEGMENT
    D0-0-0/w STRC(48)    r     1 QI_VLP_SEGMENT_BUFFER
    D3-0-0/w STRC(48)    r     1 QI_VLP_SEGMENT_LOAD       D6-0-0/w STRC(112)   r     1 QI_VLP_XBREAK

  ****  Section 001 RoData QI_DATA_D

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

   118-0-0/w STRC(256)   r     1 QI_FPT_CLOSE             128-0-0/w STRC(128)   r     1 QI_FPT_DBCONTROL
   130-0-0/w STRC(224)   r     1 QI_FPT_DCLFLD            141-0-0/w STRC(240)   r     1 QI_FPT_DEVICE
   150-0-0/w STRC(144)   r     1 QI_FPT_ERASE             159-0-0/w STRC(560)   r     1 QI_FPT_ERRMSG
   17C-0-0/w STRC(128)   r     1 QI_FPT_EXIT              184-0-0/w STRC(128)   r     1 QI_FPT_FDS
   18C-0-0/w STRC(128)   r     1 QI_FPT_FDS_LOAD          194-0-0/w STRC(128)   r     1 QI_FPT_GDS
   19C-0-0/w STRC(128)   r     1 QI_FPT_GDS_BUFFER        1A4-0-0/w STRC(128)   r     1 QI_FPT_GDS_LOAD
   1AC-0-0/w STRC(112)   r     1 QI_FPT_GLINEATTR         1B3-0-0/w STRC(128)   r     1 QI_FPT_INT
   1BB-0-0/w STRC(320)   r     1 QI_FPT_LDTRC             1CF-0-0/w STRC(240)   r     1 QI_FPT_MDFFLD
   1DE-0-0/w STRC(752)   r     1 QI_FPT_OPEN              20D-0-0/w STRC(128)   r     1 QI_FPT_PROMPT
   215-0-0/w STRC(288)   r     1 QI_FPT_READ              233-0-0/w STRC(128)   r     1 QI_FPT_RLSFLD
   23B-0-0/w STRC(128)   r     1 QI_FPT_SLCFLD            243-0-0/w STRC(256)   r     1 QI_FPT_TIME
   265-0-0/w STRC(112)   r     1 QI_FPT_TRMATTR           26C-0-0/w STRC(128)   r     1 QI_FPT_TRMCTL
   27C-0-0/w STRC(160)   r     1 QI_FPT_WAIT              286-0-0/w STRC(288)   r     1 QI_FPT_WRITE
   259-0-0/w STRC(192)   r     1 QI_VLP_TRAP_CONDITIONS

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c ASTR(8)     r     1 QI$VARIABLE_IDENTIFIER
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:553  


   No code generated for procedure QI_DATA_D .
   Procedure QI_DATA_D requires 4 words of local(AUTO) storage.

    No errors detected in file QI_DATA_D.:E05TSI    .
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:554  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:555  
          MINI XREF LISTING

QGB_PARAM.DVE.DVBYTE.VFC
      7305**DCL      7306--REDEF
QGB_PARAM.DVE.EOMCHAR
      7317**DCL      7318--REDEF
QGB_PARAM.MSG$
      7299**DCL      7300--REDEF
QGB_PARAM.UHDR$
      7324**DCL      7325--REDEF
QI$ACTIVATION_STATUS
     12719**DCL     12725--REDEF
QI$CIP
     11560**DCL     11630--REDEF
QI$CIP.CA
     11565**DCL     11569--REDEF   11572--REDEF   11575--REDEF
QI$COBOL_DAD.PSEUDO_CIP
     11804**DCL     11829--REDEF
QI$COBOL_DAD.PSEUDO_CIP.ALPHANUMERIC
     11806**DCL     11811--REDEF
QI$COBOL_DAD.PSEUDO_CIP.NUMERIC.CB
     11812**DCL     11815--REDEF   11818--REDEF
QI$COBOL_DAD.VARIABLE_LENGTH_ITEMS
     11840**DCL     11856--REDEF   11864--REDEF   11872--REDEF
QI$COBOL_DAD.VARIABLE_LENGTH_ITEMS.LEVEL_MULTIPLIERS
     11841**DCL     11851--REDEF   11854--REDEF
QI$COBOL_DAD.WORD0
     11768**DCL     11769--REDEF   11783--REDEF
QI$COBOL_DAD_P_BITS.P
     11908**DCL     11914--REDEF
QI$CONDITION_CONTROL_BLOCK.LIST_A@P
     11394**DCL     11395--REDEF
QI$CONDITION_CONTROL_BLOCK.WORD0_FLAGS
     11390**DCL     11393--REDEF
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:556  
QI$CONDITION_LEGAL_BLOCK.ARRAY@P
     11427**DCL     11428--REDEF   11429--REDEF
QI$DAD.PSEUDO_CIP
     11707**DCL     11732--REDEF
QI$DAD.PSEUDO_CIP.ALPHANUMERIC
     11709**DCL     11714--REDEF
QI$DAD.PSEUDO_CIP.NUMERIC.CB
     11715**DCL     11718--REDEF   11721--REDEF
QI$DAD.WORD0
     11676**DCL     11677--REDEF
QI$ERROR_MESSAGE_LINE
     13628**DCL     13630--REDEF
QI$ERROR_STATUS
     13625**DCL     13627--REDEF
QI$FIELD_DAD.ELEMENTARY_ITEM.P
     12122**DCL     12129--REDEF
QI$FIELD_DAD.ONE_DIMENSIONAL_ITEM.P
     12142**DCL     12149--REDEF
QI$FIELD_DAD.PSEUDO_CIP
     12049**DCL     12074--REDEF
QI$FIELD_DAD.PSEUDO_CIP.ALPHANUMERIC
     12051**DCL     12056--REDEF
QI$FIELD_DAD.PSEUDO_CIP.NUMERIC.CB
     12057**DCL     12060--REDEF   12063--REDEF
QI$FIELD_DAD.TWO_DIMENSIONAL_ITEM.P
     12162**DCL     12169--REDEF
QI$FIELD_DAD.VARIABLE_LENGTH_ITEMS
     12105**DCL     12121--REDEF   12139--REDEF   12157--REDEF
QI$FIELD_DAD.VARIABLE_LENGTH_ITEMS.LEVEL_MULTIPLIERS
     12106**DCL     12116--REDEF   12119--REDEF
QI$FIELD_DAD.WORD0
     12001**DCL     12002--REDEF
QI$FIELD_DAD.WORD0_FLAGS.IO_FLAGS
     12005**DCL     12010--REDEF
QI$FIELD_DAD_P.P
     12203**DCL     12210--REDEF
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:557  
QI$FIELD_STATUS.INDICATORS
     12869**DCL     12901--REDEF
QI$FIELD_STATUS.INDICATORS.ENABLED_FLAGS
     12873**DCL     12878--REDEF
QI$FIELD_STATUS.INDICATORS.OPEN_FLAGS
     12885**DCL     12892--REDEF
QI$FIELD_STATUS.INDICATORS.STATE_FLAGS
     12879**DCL     12884--REDEF
QI$FILE.WORD0
     12325**DCL     12326--REDEF
QI$FILE_STATUS.INDICATORS
     13162**DCL     13194--REDEF
QI$FILE_STATUS.INDICATORS.ENABLED_FLAGS
     13166**DCL     13171--REDEF
QI$FILE_STATUS.INDICATORS.OPEN_FLAGS
     13178**DCL     13185--REDEF
QI$FILE_STATUS.INDICATORS.STATE_FLAGS
     13172**DCL     13177--REDEF
QI$FORM_FILE.USE_PROCEDURE
     12425**DCL     12432--REDEF
QI$FORM_FILE.WORD0
     12379**DCL     12380--REDEF
QI$FORM_STATUS.INDICATORS
     13283**DCL     13315--REDEF
QI$FORM_STATUS.INDICATORS.ENABLED_FLAGS
     13287**DCL     13292--REDEF
QI$FORM_STATUS.INDICATORS.OPEN_FLAGS
     13299**DCL     13306--REDEF
QI$FORM_STATUS.INDICATORS.STATE_FLAGS
     13293**DCL     13298--REDEF
QI$FRAME.WORD0
     12540**DCL     12541--REDEF
QI$FRAME_STATUS.INDICATORS
     13512**DCL     13544--REDEF
QI$FRAME_STATUS.INDICATORS.ENABLED_FLAGS
     13516**DCL     13521--REDEF
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:558  
QI$FRAME_STATUS.INDICATORS.OPEN_FLAGS
     13528**DCL     13535--REDEF
QI$FRAME_STATUS.INDICATORS.STATE_FLAGS
     13522**DCL     13527--REDEF
QI$GZ_FIELD.DESCRIPTION.IO_FLAGS
     18962**DCL     18967--REDEF
QI$IDENTIFIER
     13631**DCL     13633--REDEF
QI$INDICATORS
     12783**DCL     12813--REDEF
QI$INDICATORS.ENABLED_FLAGS
     12789**DCL     12794--REDEF
QI$INDICATORS.OPEN_FLAGS
     12801**DCL     12808--REDEF
QI$INDICATORS.STATE_FLAGS
     12795**DCL     12800--REDEF
QI$MAJOR_NODE.WORD0
     12239**DCL     12240--REDEF
QI$MAJOR_STATUS.INDICATORS
     12962**DCL     12994--REDEF
QI$MAJOR_STATUS.INDICATORS.ENABLED_FLAGS
     12966**DCL     12971--REDEF
QI$MAJOR_STATUS.INDICATORS.OPEN_FLAGS
     12978**DCL     12985--REDEF
QI$MAJOR_STATUS.INDICATORS.STATE_FLAGS
     12972**DCL     12977--REDEF
QI$MESSAGE_TYPE
     13622**DCL     13624--REDEF
QI$MINOR_NODE.WORD0
     12282**DCL     12283--REDEF
QI$MINOR_STATUS.INDICATORS
     13055**DCL     13087--REDEF
QI$MINOR_STATUS.INDICATORS.ENABLED_FLAGS
     13059**DCL     13064--REDEF
QI$MINOR_STATUS.INDICATORS.OPEN_FLAGS
     13071**DCL     13078--REDEF
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:559  
QI$MINOR_STATUS.INDICATORS.STATE_FLAGS
     13065**DCL     13070--REDEF
QI$OP_ACCEPT.DATANAME@P
      9470**DCL      9471--REDEF
QI$OP_CALL.EPTR$
      9642**DCL      9643--REDEF
QI$OP_CLEAR.IO_FLAGS
      9675**DCL      9678--REDEF
QI$OP_DISPLAY.FIELD_A@P
      9942**DCL      9943--REDEF
QI$OP_ENABLE.IO_FLAGS
     10029**DCL     10032--REDEF
QI$OP_IFCLS.ATTRIBUTE.TYPE
     10122**DCL     10127--REDEF
QI$OP_INSPECT.TALLYING_FOR_ITEM@P
     10356**DCL     10357--REDEF
QI$OP_INSPECT.TALLYING_INITIAL_ITEM@P
     10358**DCL     10359--REDEF
QI$OP_INSPECT.TALLYING_ITEM@P
     10354**DCL     10355--REDEF
QI$OP_OPEN.IO_FLAGS
     10916**DCL     10919--REDEF
QI$OP_PERFM.BINARY_ITERATION_COUNT@P
     10954**DCL     10955--REDEF
QI$PSEUDO_CIP
     11455**DCL     11479--REDEF
QI$PSEUDO_CIP.ALPHANUMERIC
     11459**DCL     11464--REDEF
QI$PSEUDO_CIP.NUMERIC.CB
     11465**DCL     11468--REDEF   11471--REDEF
QI$TERMINAL_ATTRIBUTES
     12676**DCL     12689--REDEF
QI$TRAN_FILE.WORD0
     12461**DCL     12462--REDEF
QI$TRAN_STATUS.INDICATORS
     13396**DCL     13428--REDEF
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:560  
QI$TRAN_STATUS.INDICATORS.ENABLED_FLAGS
     13400**DCL     13405--REDEF
QI$TRAN_STATUS.INDICATORS.OPEN_FLAGS
     13412**DCL     13419--REDEF
QI$TRAN_STATUS.INDICATORS.STATE_FLAGS
     13406**DCL     13411--REDEF
QI$VARIABLE_IDENTIFIER.LENGTH
     13635**DCL     13636--IMP-SIZ
QI_1.BASE
      5948**DCL      5955--REDEF
QI_1.CURRENT.FILE$
      6839**DCL      6841--REDEF    6843--REDEF
QI_1.CURRENT.FILE_STATUS$
      6845**DCL      6847--REDEF    6849--REDEF
QI_1.DAD
      6643**DCL      6648--REDEF
QI_1.FILE_HEAD
      6826**DCL      6833--REDEF
QI_1.IS_ALL_LIT
      6649**DCL      6654--REDEF
QI_1.IS_FORM_VARIABLE
      6655**DCL      6660--REDEF
QI_1.IS_TEMP
      6661**DCL      6666--REDEF
QI_1.MESSAGE_LINE_DAD.PSEUDO_CIP
      6759**DCL      6784--REDEF
QI_1.MESSAGE_LINE_DAD.PSEUDO_CIP.ALPHANUMERIC
      6761**DCL      6766--REDEF
QI_1.MESSAGE_LINE_DAD.PSEUDO_CIP.NUMERIC.CB
      6767**DCL      6770--REDEF    6773--REDEF
QI_1.MESSAGE_LINE_DAD.WORD0
      6728**DCL      6729--REDEF
QI_1.OFFSET
      6667**DCL      6672--REDEF
QI_1.OP.CIP
      6028**DCL      6479--REDEF
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:561  
QI_1.OP.CIP.AUX
      6394**DCL      6465--REDEF
QI_1.OP.CIP.AUX.CD
      6439**DCL      6442--REDEF    6446--REDEF    6449--REDEF
QI_1.OP.CIP.S
      6098**DCL      6169--REDEF
QI_1.OP.CIP.S.CD
      6143**DCL      6146--REDEF    6150--REDEF    6153--REDEF
QI_1.OP.CIP.T
      6246**DCL      6317--REDEF
QI_1.OP.CIP.T.CD
      6291**DCL      6294--REDEF    6298--REDEF    6301--REDEF
QI_1.OP.DATA
      6486**DCL      6490--REDEF
QI_1.OP.FILL_CHAR
      6610**DCL      6613--REDEF
QI_1.OP.INX
      6543**DCL      6547--REDEF    6548--REDEF    6552--REDEF
QI_1.OP.LEN
      6526**DCL      6530--REDEF    6531--REDEF    6535--REDEF    6536--REDEF    6540--REDEF
QI_1.OP.LEN.AUX
      6529**DCL     13646--IMP-SIZ
QI_1.OP.LEN.S
      6527**DCL     13642--IMP-SIZ
QI_1.OP.LEN.T
      6528**DCL     13644--IMP-SIZ
QI_1.OP.PICTURE_STRING
      6596**DCL      6599--REDEF    6600--REDEF    6603--REDEF    6604--REDEF    6607--REDEF
QI_1.OP.ROUND
      6629**DCL      6630--REDEF    6631--REDEF
QI_1.OP.SRCH_VRFY_ELEMS
      6565**DCL      6568--REDEF
QI_1.OPENED_COUNT
      6834**DCL      6837--REDEF
QI_1.OTTER_SPACE
      6673**DCL      6678--REDEF
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:562  
QI_1.PICTURE_STRING
      6679**DCL      6684--REDEF
QI_1.SPECIAL_NAMES
      6862**DCL      6871--REDEF
QI_1.TYPE
      6685**DCL      6690--REDEF
QI_16_BIT_BINARY
     18095**DCL     18165--REDEF
QI_16_BIT_BINARY.CB
     18114**DCL     18117--REDEF   18121--REDEF   18124--REDEF
QI_31_DIGIT_SLS_DISPLAY
     17928**DCL     17998--REDEF
QI_31_DIGIT_SLS_DISPLAY.CD
     17975**DCL     17978--REDEF   17982--REDEF   17985--REDEF
QI_31_DIGIT_ST_PACKED
     18430**DCL     18500--REDEF
QI_31_DIGIT_ST_PACKED.CP
     18463**DCL     18466--REDEF   18470--REDEF   18473--REDEF
QI_32_BIT_BINARY
     18262**DCL     18332--REDEF
QI_32_BIT_BINARY.CB
     18281**DCL     18284--REDEF   18288--REDEF   18291--REDEF
QI_4_CHAR_ALPHANUMERIC
     17760**DCL     17830--REDEF
QI_4_CHAR_ALPHANUMERIC.CA
     17765**DCL     17769--REDEF   17772--REDEF   17775--REDEF
QI_ACCUMULATOR_DAD.CIP
     18773**DCL     18844--REDEF
QI_ACCUMULATOR_DAD.CIP.CP
     18804**DCL     18807--REDEF   18811--REDEF   18814--REDEF
QI_ALR.CIP
     13725**DCL     14176--REDEF
QI_ALR.CIP.AUX
     14091**DCL     14162--REDEF
QI_ALR.CIP.AUX.CA
     14094**DCL     14098--REDEF   14101--REDEF   14104--REDEF
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:563  
QI_ALR.CIP.S
     13795**DCL     13866--REDEF
QI_ALR.CIP.S.CA
     13798**DCL     13802--REDEF   13805--REDEF   13808--REDEF
QI_ALR.CIP.T
     13943**DCL     14014--REDEF
QI_ALR.CIP.T.CA
     13946**DCL     13950--REDEF   13953--REDEF   13956--REDEF
QI_ALR.DATA
     14183**DCL     14187--REDEF
QI_ALR.FILL_CHAR
     14307**DCL     14310--REDEF
QI_ALR.INX
     14240**DCL     14244--REDEF   14245--REDEF   14249--REDEF
QI_ALR.LEN
     14223**DCL     14227--REDEF   14228--REDEF   14232--REDEF   14233--REDEF   14237--REDEF
QI_ALR.PICTURE_STRING
     14293**DCL     14296--REDEF   14297--REDEF   14300--REDEF   14301--REDEF   14304--REDEF
QI_ALR.ROUND
     14326**DCL     14327--REDEF   14328--REDEF
QI_ALR.SRCH_VRFY_ELEMS
     14262**DCL     14265--REDEF
QI_FPT_CLOSE.V
      7389**DCL      7386--DCLINIT
QI_FPT_DBCONTROL.V
      7451**DCL      7442--DCLINIT
QI_FPT_DBCONTROL.V_
      7442**DCL      7442--REDEF
QI_FPT_DCLFLD.V
      7506**DCL      7500--DCLINIT
QI_FPT_DEVICE.V
      7619**DCL      7617--DCLINIT
QI_FPT_ERASE.V
      7677**DCL      7671--DCLINIT
QI_FPT_ERRMSG.V
      7731**DCL      7728--DCLINIT
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:564  
QI_FPT_EXIT.V
      7781**DCL      7781--DCLINIT
QI_FPT_FDS.V
      7830**DCL      7830--DCLINIT
QI_FPT_FDS_LOAD.V
      7878**DCL      7878--DCLINIT
QI_FPT_GDS.V
      7928**DCL      7928--DCLINIT
QI_FPT_GDS_BUFFER.V
      8026**DCL      8026--DCLINIT
QI_FPT_GDS_LOAD.V
      8124**DCL      8124--DCLINIT
QI_FPT_GLINEATTR.V
      8227**DCL      8221--DCLINIT
QI_FPT_INT.V
      8289**DCL      8280--DCLINIT
QI_FPT_INT.V_
      8280**DCL      8280--REDEF
QI_FPT_LDTRC.V
      8336**DCL      8336--DCLINIT
QI_FPT_MDFFLD.V
      8395**DCL      8389--DCLINIT
QI_FPT_OPEN.V
      8453**DCL      8447--DCLINIT
QI_FPT_PROMPT.V
      8511**DCL      8505--DCLINIT
QI_FPT_READ.V
      8559**DCL      8556--DCLINIT
QI_FPT_RLSFLD.V
      8662**DCL      8656--DCLINIT
QI_FPT_SLCFLD.V
      8720**DCL      8714--DCLINIT
QI_FPT_TIME.V
      8772**DCL      8771--DCLINIT
QI_FPT_TRMATTR.V
      9061**DCL      9055--DCLINIT
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:565  
QI_FPT_TRMCTL.V
      9113**DCL      9107--DCLINIT
QI_FPT_WAIT.V
      9223**DCL      9222--DCLINIT
QI_FPT_WRITE.V
      9274**DCL      9271--DCLINIT
QI_MAT.CIP
     17064**DCL     17515--REDEF
QI_MAT.CIP.AUX
     17430**DCL     17501--REDEF
QI_MAT.CIP.AUX.CA
     17433**DCL     17437--REDEF   17440--REDEF   17443--REDEF
QI_MAT.CIP.S
     17134**DCL     17205--REDEF
QI_MAT.CIP.S.CA
     17137**DCL     17141--REDEF   17144--REDEF   17147--REDEF
QI_MAT.CIP.T
     17282**DCL     17353--REDEF
QI_MAT.CIP.T.CA
     17285**DCL     17289--REDEF   17292--REDEF   17295--REDEF
QI_MAT.DATA
     17522**DCL     17526--REDEF
QI_MAT.DEC
     17590**DCL     17594--REDEF   17595--REDEF   17599--REDEF
QI_MAT.FILL_CHAR
     17646**DCL     17649--REDEF
QI_MAT.LEN
     17562**DCL     17566--REDEF   17567--REDEF   17571--REDEF   17572--REDEF   17576--REDEF
QI_MAT.PICTURE_STRING
     17632**DCL     17635--REDEF   17636--REDEF   17639--REDEF   17640--REDEF   17643--REDEF
QI_MAT.ROUND
     17665**DCL     17666--REDEF   17667--REDEF
QI_MAT.SRCH_VRFY_ELEMS
     17601**DCL     17604--REDEF
QI_PICTURE_STRING
     18598**DCL     18668--REDEF
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:566  
QI_PICTURE_STRING.CA
     18603**DCL     18607--REDEF   18610--REDEF   18613--REDEF
QI_SRCH_VRFY.CIP
     16395**DCL     16846--REDEF
QI_SRCH_VRFY.CIP.AUX
     16761**DCL     16832--REDEF
QI_SRCH_VRFY.CIP.AUX.CA
     16764**DCL     16768--REDEF   16771--REDEF   16774--REDEF
QI_SRCH_VRFY.CIP.S
     16465**DCL     16536--REDEF
QI_SRCH_VRFY.CIP.S.CA
     16468**DCL     16472--REDEF   16475--REDEF   16478--REDEF
QI_SRCH_VRFY.CIP.T
     16613**DCL     16684--REDEF
QI_SRCH_VRFY.CIP.T.CA
     16616**DCL     16620--REDEF   16623--REDEF   16626--REDEF
QI_SRCH_VRFY.DATA
     16853**DCL     16857--REDEF
QI_SRCH_VRFY.DEC
     16921**DCL     16925--REDEF   16926--REDEF   16930--REDEF
QI_SRCH_VRFY.FILL_CHAR
     16977**DCL     16980--REDEF
QI_SRCH_VRFY.ROUND
     16996**DCL     16997--REDEF   16998--REDEF
QI_SRCH_VRFY.SRCH_RESULT
     16937**DCL     16940--REDEF   16941--REDEF   16944--REDEF   16945--REDEF   16948--REDEF
QI_SRCH_VRFY.SRCH_VRFY_ARGS
     16861**DCL     16865--REDEF   16866--REDEF   16870--REDEF   16871--REDEF   16875--REDEF
QI_SRCH_VRFY.SRCH_VRFY_ELEMS
     16932**DCL     16935--REDEF
QI_TYPE_BINARY_TARGET.CIP
     15722**DCL     16173--REDEF
QI_TYPE_BINARY_TARGET.CIP.AUX
     16088**DCL     16159--REDEF
QI_TYPE_BINARY_TARGET.CIP.AUX.CA
     16091**DCL     16095--REDEF   16098--REDEF   16101--REDEF
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:567  
QI_TYPE_BINARY_TARGET.CIP.S
     15792**DCL     15863--REDEF
QI_TYPE_BINARY_TARGET.CIP.S.CA
     15795**DCL     15799--REDEF   15802--REDEF   15805--REDEF
QI_TYPE_BINARY_TARGET.CIP.T
     15940**DCL     16011--REDEF
QI_TYPE_BINARY_TARGET.CIP.T.CB
     15957**DCL     15960--REDEF   15964--REDEF   15967--REDEF
QI_TYPE_BINARY_TARGET.DATA
     16180**DCL     16184--REDEF
QI_TYPE_BINARY_TARGET.DEC
     16248**DCL     16252--REDEF   16253--REDEF   16257--REDEF
QI_TYPE_BINARY_TARGET.LEN
     16220**DCL     16224--REDEF   16225--REDEF   16229--REDEF   16230--REDEF   16234--REDEF
QI_TYPE_BINARY_TARGET.PICTURE_STRING
     16290**DCL     16293--REDEF   16294--REDEF   16297--REDEF   16298--REDEF   16301--REDEF
QI_TYPE_BINARY_TARGET.ROUND
     16323**DCL     16324--REDEF   16325--REDEF
QI_TYPE_BINARY_TARGET.SIZE_ERROR
     16309**DCL     16310--REDEF
QI_TYPE_BINARY_TARGET.SRCH_VRFY_ELEMS
     16259**DCL     16262--REDEF
QI_TYPE_DISPLAY_SOURCE.CIP
     14390**DCL     14841--REDEF
QI_TYPE_DISPLAY_SOURCE.CIP.AUX
     14756**DCL     14827--REDEF
QI_TYPE_DISPLAY_SOURCE.CIP.AUX.CA
     14759**DCL     14763--REDEF   14766--REDEF   14769--REDEF
QI_TYPE_DISPLAY_SOURCE.CIP.S
     14460**DCL     14531--REDEF
QI_TYPE_DISPLAY_SOURCE.CIP.S.CD
     14505**DCL     14508--REDEF   14512--REDEF   14515--REDEF
QI_TYPE_DISPLAY_SOURCE.CIP.T
     14608**DCL     14679--REDEF
QI_TYPE_DISPLAY_SOURCE.CIP.T.CA
     14611**DCL     14615--REDEF   14618--REDEF   14621--REDEF
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:568  
QI_TYPE_DISPLAY_SOURCE.DATA
     14848**DCL     14852--REDEF
QI_TYPE_DISPLAY_SOURCE.DEC
     14916**DCL     14920--REDEF   14921--REDEF   14925--REDEF
QI_TYPE_DISPLAY_SOURCE.LEN
     14888**DCL     14892--REDEF   14893--REDEF   14897--REDEF   14898--REDEF   14902--REDEF
QI_TYPE_DISPLAY_SOURCE.PICTURE_STRING
     14958**DCL     14961--REDEF   14962--REDEF   14965--REDEF   14966--REDEF   14969--REDEF
QI_TYPE_DISPLAY_SOURCE.ROUND
     14991**DCL     14992--REDEF   14993--REDEF
QI_TYPE_DISPLAY_SOURCE.SIZE_ERROR
     14977**DCL     14978--REDEF
QI_TYPE_DISPLAY_SOURCE.SRCH_VRFY_ELEMS
     14927**DCL     14930--REDEF
QI_TYPE_DISPLAY_TARGET.CIP
     15056**DCL     15507--REDEF
QI_TYPE_DISPLAY_TARGET.CIP.AUX
     15422**DCL     15493--REDEF
QI_TYPE_DISPLAY_TARGET.CIP.AUX.CA
     15425**DCL     15429--REDEF   15432--REDEF   15435--REDEF
QI_TYPE_DISPLAY_TARGET.CIP.S
     15126**DCL     15197--REDEF
QI_TYPE_DISPLAY_TARGET.CIP.S.CA
     15129**DCL     15133--REDEF   15136--REDEF   15139--REDEF
QI_TYPE_DISPLAY_TARGET.CIP.T
     15274**DCL     15345--REDEF
QI_TYPE_DISPLAY_TARGET.CIP.T.CD
     15319**DCL     15322--REDEF   15326--REDEF   15329--REDEF
QI_TYPE_DISPLAY_TARGET.DATA
     15514**DCL     15518--REDEF
QI_TYPE_DISPLAY_TARGET.DEC
     15582**DCL     15586--REDEF   15587--REDEF   15591--REDEF
QI_TYPE_DISPLAY_TARGET.LEN
     15554**DCL     15558--REDEF   15559--REDEF   15563--REDEF   15564--REDEF   15568--REDEF
QI_TYPE_DISPLAY_TARGET.PICTURE_STRING
     15624**DCL     15627--REDEF   15628--REDEF   15631--REDEF   15632--REDEF   15635--REDEF
PL6.E3A0      #001=QI_DATA_D File=QI_DATA_D.:E05TSI                              WED 07/30/97 05:20 Page:569  
QI_TYPE_DISPLAY_TARGET.ROUND
     15657**DCL     15658--REDEF   15659--REDEF
QI_TYPE_DISPLAY_TARGET.SIZE_ERROR
     15643**DCL     15644--REDEF
QI_TYPE_DISPLAY_TARGET.SRCH_VRFY_ELEMS
     15593**DCL     15596--REDEF
QI_VLP_SEGMENT
      7975**DCL      7830--DCLINIT  7928--DCLINIT
QI_VLP_SEGMENT.BASE
      7979**DCL      7979--REDEF
QI_VLP_SEGMENT_BUFFER
      8073**DCL      8026--DCLINIT
QI_VLP_SEGMENT_BUFFER.BASE
      8077**DCL      8077--REDEF
QI_VLP_SEGMENT_LOAD
      8171**DCL      7878--DCLINIT  8124--DCLINIT
QI_VLP_SEGMENT_LOAD.BASE
      8175**DCL      8175--REDEF
QI_VLP_TRAP_CONDITIONS
      8869**DCL      8818--DCLINIT
QI_VLP_TRMCTL.BREAKCOUNT
      9169**DCL      9170--REDEF
QI_VLP_XBREAK
      9359**DCL      9319--DCLINIT
QI_VLP_XBREAK.IC
      9359**DCL      9359--REDEF
QI_VLP_XBREAK.OLDIC
      9359**DCL      9360--REDEF    9360--REDEF
