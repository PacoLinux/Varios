VERSION E05

PL6.E3A0      #001=KQT$GETSTA File=KQT$TREES.:E05TSI                             WED 07/30/97 01:35 Page:1    
        1        1        /*M* KQT$TREES TREE updating routines for COMGROUP */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* DMC,PLM=6,IND=0,IDT=2,SDI=2,CTI=0,ENU=0,AND,DCI=4,CSU=2,ECU=4,THI=0,DTI=0,STI=1
                 7        ,IAD=0,PRB */
        8        8        /**/
        9        9        /*P* NAME:         KQT$TREES
       10       10             PURPOSE:      To provide tree updating functions for COMGROUP
       11       11             DESCRIPTION:  Contains various routines dealing with the updating
       12       12                           of the trees in a comgroup, and the implications
       13       13                           thereof.
       14       14
       15       15        */
       16       16        /**/
       17       17        KQT$GETSTA: PROC (KQ$CG,PARM$,XKEY) ALTRET;
       18       18        /**/
       19       19
       20       20
       21       21
       22       22        /**/
       23       23        /* INCLUDES */
       24       24        /**/
       25       25        %INCLUDE KQ_SUBS_C;
       26      325        %INCLUDE KQ_MAC_C;
       27     2875        %INCLUDE HF_LOCK_C;
       28     2889        %INCLUDE KQ_DATA_R;
       29     3721        %INCLUDE NK$LDCT;
       30     3823        %INCLUDE N$REQ;
       31     3897        %INCLUDE CP_6_SUBS;
       32     4437        %INCLUDE KC$CP6V_C;
       33     4557        %INCLUDE SS_SCHED_C;
       34     4790        %INCLUDE KC_CP6;
       35     5350
       36     5351
PL6.E3A0      #001=KQT$GETSTA File=KQT$TREES.:E05TSI                             WED 07/30/97 01:35 Page:2    
       37     5352
       38     5353        /**/
       39     5354        /* PARAMETERS */
       40     5355        /**/
       41     5356        %KQ_CG   (FPTN=KQ$CG  ,STCLASS="");
       42     6095    1   DCL PARM$ PTR;
       43     6096    1   DCL XKEY CHAR(8) ALIGNED;
       44     6097
       45     6098
       46     6099
       47     6100        /**/
       48     6101        /* BASED STRUCTURES */
       49     6102        /**/
       50     6103    1   DCL B$$PTR PTR BASED ALIGNED;
       51     6104        %NK$LDCT;
       52     6150        %N$REQ;
       53     6208        %KQ_STA  (FPTN=KQ$STA ,STCLASS="BASED(STA$)");
       54     6547        %KQ_RBLK (FPTN=KQ$RBLK,STCLASS="BASED(RBLK$)");
       55     6733        %KQ_THDR (FPTN=KQ$THDR,STCLASS=BASED);
       56     6771        %KQ_MTYP (FPTN=KQ$MTYP,STCLASS="BASED(MTYP$)");
       57     6845        %KQ_QTN  (FPTN=KQ$QTN ,STCLASS="BASED(QTN$)");
       58     7318        %KQ_MLH  (FPTN=KQ$MLH ,STCLASS="BASED(MLH$)");
       59     7388        %KQ_MBLK (FPTN=KQ$MBLK,STCLASS="BASED(MBLK$)");
       60     7658        %KQ_BTN  (FPTN=KQ$BTN ,STCLASS=BASED);
       61     7690
       62     7691
       63     7692
       64     7693        /**/
       65     7694        /* AUTO */
       66     7695        /**/
       67     7696    1   DCL STA$ PTR;
       68     7697    1   DCL P$ PTR;
       69     7698    1   DCL I SBIN;
       70     7699    1   DCL QTN$ PTR;
       71     7700    1   DCL MTYP$ PTR;
       72     7701    1   DCL DTYP$ REDEF MTYP$ PTR;
       73     7702    1   DCL DSTA$ PTR;
PL6.E3A0      #001=KQT$GETSTA File=KQT$TREES.:E05TSI                             WED 07/30/97 01:35 Page:3    
       74     7703    1   DCL PP$ PTR;
       75     7704    1   DCL ACTCNT UBIN WORD;
       76     7705    1   DCL MLH$ PTR;
       77     7706    1   DCL MBLK$ PTR;
       78     7707    1   DCL RBLK$ PTR;
       79     7708
       80     7709
       81     7710
       82     7711        /**/
       83     7712        /* REFS */
       84     7713        /**/
       85     7714    1   DCL KQB$DELETENL  ENTRY(3) ALTRET;
       86     7715    1   DCL KQB$INSERTNL  ENTRY(3) ALTRET;
       87     7716    1   DCL KQB$SRCH      ENTRY(3) ALTRET;
       88     7717    1   DCL KQL$CHKMLH    ENTRY(1) ALTRET;
       89     7718    1   DCL KQM$GETBD     ENTRY(3) ALTRET;
       90     7719    1   DCL KQM$GETBR     ENTRY(3) ALTRET;
       91     7720    1   DCL KQM$GETMTYP   ENTRY(3) ALTRET;
       92     7721    1   DCL KQM$GETSTA    ENTRY(3) ALTRET;
       93     7722    1   DCL KQM$RELMTYP   ENTRY(2) ALTRET;
       94     7723    1   DCL KQM$RELSTA    ENTRY(2) ALTRET;
       95     7724    1   DCL KQR$VALIDATE  ENTRY(1) ALTRET;
       96     7725    1   DCL SC_CGCRCT     ENTRY    CONV(2,0);
       97     7726    1   DCL SC_BCGXRL     ENTRY    CONV(2,0);
       98     7727        %KQ_CG (FPTN=KQ_ICG,STCLASS=SYMREF);
       99     8466
      100     8467
      101     8468
      102     8469        /**/
      103     8470        /* SUBS */
      104     8471        /**/
      105     8472        %SUB KQ$QTREE="KQ$CG.QUEUE.QTREE$->KQ$THDR";
      106     8473        %SUB KQ$TTREE="KQ$CG.TTREE";
      107     8474        %SUB KQ$STREE="KQ$CG.STREE";
      108     8475        %EJECT;
PL6.E3A0      #001=KQT$GETSTA File=KQT$TREES.:E05TSI                             WED 07/30/97 01:35 Page:4    
      109     8476        /*F* NAME:         KQT$GETSTA
      110     8477             PURPOSE:      To build and insert a station block.
      111     8478             CALL:         KQT$GETSTA (KQ$CG,MYSTA$,KEY)
      112     8479             INPUT:        MYSTA$ points to caller's (DCB) station
      113     8480                           KEY is name of desired new station
      114     8481             OUTPUT:       MYSTA$ points to new station inserted in tree,
      115     8482                                and inserted in queue if QISS.
      116     8483             DESCRIPTION:  XKEY is the desired station name.  The station
      117     8484                           tree must be locked upon entry.  It may be unlocked
      118     8485                           during the process, but is returned locked unless
      119     8486                           the routine ALTRETs in which case
      120     8487                           it is unlocked.
      121     8488
      122     8489                           If the caller is a DCB station, he is REGed
      123     8490                           until memory becomes available.
      124     8491
      125     8492                           For TERMINAL stations, KQM$GETBD is used if
      126     8493                           nescessary.  This scheme requires that TERMs
      127     8494                           only use this routine to get station blocks
      128     8495                           since we must share KQ$STA.MREQ and MREQ$.
      129     8496                           If no memory is immediately available, then
      130     8497                           if another delayed request is in progress we
      131     8498                           ALTRET with MYSTA$ ~= ADDR(NIL), else post
      132     8499                           a delayed request and similarly ALTRET, expecting
      133     8500                           the caller to try later.  When he does, if
      134     8501                           our request is complete, we use the block thus
      135     8502                           acquired.  If the comgroup has run out of memory,
      136     8503                           we ALTRET with MYSTA$ = ADDR(NIL).
      137     8504
      138     8505        KQT$GETSTA: ENTRY (KQ$CG,PARM$,XKEY) ALTRET;
      139     8506        */
      140     8507        /**/
      141     8508    1         STA$=PARM$;
      142     8509    1         IF STA$->KQ$STA.TERM THEN
      143     8510    2           DO INHIBIT;
      144     8511    2           I=STA$->KQ$STA.MREQ;
      145     8512    2           IF I = KQMR_STA# THEN
PL6.E3A0      #001=KQT$GETSTA File=KQT$TREES.:E05TSI                             WED 07/30/97 01:35 Page:5    
      146     8513    3             DO;
      147     8514    3   GSX:      ;
      148     8515                  %UNLOCK (G=KQ$STREE.GATE);
      149     8518    3             ALTRETURN;
      150     8519    3             END;
      151     8520    2           IF I = -KQMR_STA# THEN
      152     8521    3             DO;
      153     8522    3             DSTA$=STA$->KQ$STA.MREQ$;
      154     8523    3             STA$->KQ$STA.MREQ=0;
      155     8524    3             PARM$=DSTA$;
      156     8525    3             IF DSTA$ = ADDR(NIL) THEN GOTO GSX;
      157     8526    3             END;
      158     8527    2           ELSE
      159     8528    3             DO;
      160     8529    3             CALL KQM$GETSTA (KQ$CG,DSTA$,I) ALTRET(GS00);
      161     8530    3             GOTO GS0;
      162     8531    3   GS00:     IF STA$->KQ$STA.MREQ ~= 0 THEN GOTO GSX;
      163     8532                  %UNLOCK (G=KQ$STREE.GATE);
      164     8535    3             DSTA$=STA$;
      165     8536    3             I=KQMR_STA#;
      166     8537    3             CALL KQM$GETBD (KQ$CG,DSTA$,I) ALTRET(ALTRT);
      167     8538                  %LOCK (G=KQ$STREE.GATE);
      168     8541    3             END;
      169     8542    2           END;
      170     8543    1         ELSE
      171     8544    1          CALL KQM$GETSTA (KQ$CG,DSTA$,I) ALTRET(GS3);
      172     8545    1   GS0:  P$=DSTA$;
      173     8546    1         CALL KQB$INSERTNL (KQ$STREE,XKEY,DSTA$) ALTRET(GS1);
      174     8547    1         IF KQ$CG.QISS THEN CALL INSQTN (DSTA$);
      175     8548    2           DO WHILE('0'B);
      176     8549    2   GS1:    CALL KQM$RELSTA (KQ$CG,P$);
      177     8550    2           END;
      178     8551    1         PARM$=DSTA$;
      179     8552    1         RETURN;
      180     8553    1   GS3:  ;
      181     8554              %UNLOCK (G=KQ$STREE.GATE);
      182     8557    1         DSTA$=STA$;
PL6.E3A0      #001=KQT$GETSTA File=KQT$TREES.:E05TSI                             WED 07/30/97 01:35 Page:6    
      183     8558    1         I=KQMR_STA#;
      184     8559    1         CALL KQM$GETBR (KQ$CG,DSTA$,I) ALTRET(ALTRT);
      185     8560              %LOCK (G=KQ$STREE.GATE);
      186     8563    1         GOTO GS0;
      187     8564        /**/
      188     8565        /*F* NAME:         KQT$MAKESTA
      189     8566             PURPOSE:      To build and insert a station block
      190     8567             CALL:         KQT$MAKESTA (KQ$CG,STA$,KEY)
      191     8568             DESCRIPTION:  Like KQT$GETSTA but there is no station on
      192     8569                           whose behalf to post a delayed memory request.
      193     8570                           Thus if no memory is instantly available, we
      194     8571                           ALTRET.
      195     8572        */
      196     8573    1   KQT$MAKESTA: ENTRY (KQ$CG,PARM$,XKEY) ALTRET;
      197     8574        /**/
      198     8575    1         CALL KQM$GETSTA (KQ$CG,DSTA$,I) ALTRET(GSX);
      199     8576    1         GOTO GS0;
      200     8577        /**/
      201     8578        /*F* NAME:         KQT$GETTYP
      202     8579             PURPOSE:      To build and insert a msgtype block.
      203     8580             DESCRIPTION:  Like KQT$GETSTA, but for a message type.
      204     8581        */
      205     8582    1   KQT$GETTYP: ENTRY (KQ$CG,PARM$,XKEY) ALTRET;
      206     8583        /**/
      207     8584    1         STA$=PARM$;
      208     8585    1         IF STA$->KQ$STA.TERM THEN
      209     8586    2           DO INHIBIT;
      210     8587    2           I=STA$->KQ$STA.MREQ;
      211     8588    2           IF I = KQMR_TYP# THEN
      212     8589    3             DO;
      213     8590    3   GTX:      ;
      214     8591                  %UNLOCK (G=KQ$TTREE.GATE);
      215     8594    3             ALTRETURN;
      216     8595    3             END;
      217     8596    2           IF I = -KQMR_TYP# THEN
      218     8597    3             DO;
      219     8598    3             DTYP$=STA$->KQ$STA.MREQ$;
PL6.E3A0      #001=KQT$GETSTA File=KQT$TREES.:E05TSI                             WED 07/30/97 01:35 Page:7    
      220     8599    3             STA$->KQ$STA.MREQ=0;
      221     8600    3             PARM$=DTYP$;
      222     8601    3             IF DTYP$ = ADDR(NIL) THEN GOTO GTX;
      223     8602    3             END;
      224     8603    2           ELSE
      225     8604    3             DO;
      226     8605    3             CALL KQM$GETMTYP (KQ$CG,DTYP$,I) ALTRET(GT00);
      227     8606    3             GOTO GT0;
      228     8607    3   GT00:     IF STA$->KQ$STA.MREQ ~= 0 THEN GOTO GTX;
      229     8608                  %UNLOCK (G=KQ$TTREE.GATE);
      230     8611    3             DTYP$=STA$;
      231     8612    3             I=KQMR_TYP#;
      232     8613    3             CALL KQM$GETBD (KQ$CG,DTYP$,I) ALTRET(ALTRT);
      233     8614                  %LOCK (G=KQ$TTREE.GATE);
      234     8617    3             END;
      235     8618    2           END;
      236     8619    1         ELSE
      237     8620    1          CALL KQM$GETMTYP (KQ$CG,DTYP$,I) ALTRET(GT3);
      238     8621    1   GT0:  P$=DTYP$;
      239     8622    1         CALL KQB$INSERTNL (KQ$TTREE,XKEY,DTYP$) ALTRET(GT1);
      240     8623    1         IF KQ$CG.QISS = '0'B THEN CALL INSQTN (DTYP$);
      241     8624    2           DO WHILE('0'B);
      242     8625    2   GT1:    CALL KQM$RELMTYP (KQ$CG,P$);
      243     8626    2           END;
      244     8627    1         PARM$=DTYP$;
      245     8628    1         RETURN;
      246     8629    1   GT3:  ;
      247     8630    1         IF STA$->KQ$STA.USR# = 0 THEN GOTO GT00;
      248     8631              %UNLOCK (G=KQ$TTREE.GATE);
      249     8634    1         DTYP$=STA$;
      250     8635    1         I=KQMR_TYP#;
      251     8636    1         CALL KQM$GETBR (KQ$CG,DTYP$,I) ALTRET(ALTRT);
      252     8637              %LOCK (G=KQ$TTREE.GATE);
      253     8640    1         GOTO GT0;
      254     8641    1   ALTRT:;
      255     8642    1         ALTRETURN;
      256     8643        /**/
PL6.E3A0      #001=KQT$GETSTA File=KQT$TREES.:E05TSI                             WED 07/30/97 01:35 Page:8    
      257     8644        /*F* NAME:         KQT$DELTYP
      258     8645             PURPOSE:      To delete a message type
      259     8646             DESCRIPTION:  Called to delete a T-tree node.
      260     8647
      261     8648                           If the Q-tree is the T-tree, then KQT$DELMLH
      262     8649                           must already have been called to delete the
      263     8650                           messages hanging off it.  Also, we will at
      264     8651                           this time remove pending Q-reads against this
      265     8652                           node.  Thus when the caller calls KQT$VALREADS,
      266     8653                           all such readers will get errors.
      267     8654
      268     8655                           The T-tree is locked upon entry, and is not
      269     8656                           unlocked.
      270     8657        */
      271     8658    1   KQT$DELTYP: ENTRY (KQ$CG,PARM$) ALTRET; /* !!Doesn't ALTRET!! */
      272     8659        /**/
      273     8660    1         MTYP$=PARM$;
      274     8661    1         CALL DELTYP;
      275     8662    1         RETURN;
      276     8663        /**/
      277     8664        /*F* NAME:         KQT$DELSTA
      278     8665             PURPOSE:      To delete a station
      279     8666             DESCRIPTION:  Called when a station is disconnecting, or from
      280     8667                           KQC$CTL for the M$CGCTL DELETE function.  The
      281     8668                           following must already have been done:
      282     8669
      283     8670                           - messages written to the station deleted if
      284     8671                             desired (not desired if SMD=1, and this is a
      285     8672                             disconnect).
      286     8673                           - the current READ/WRITE/GET/PUT must all have
      287     8674                             been run down.
      288     8675                           - the station must have been removed from
      289     8676                             the DCB chain.
      290     8677
      291     8678                           The station will be left where it is if any of
      292     8679                           the following are true:
      293     8680
PL6.E3A0      #001=KQT$GETSTA File=KQT$TREES.:E05TSI                             WED 07/30/97 01:35 Page:9    
      294     8681                           - KQ$STA.MLH is not empty
      295     8682                           - KQ$QTN.MLH is not empty (if the Q-tree is the
      296     8683                             S-tree).
      297     8684                           - KQ$STA.PERM is set
      298     8685                           - KQ$STA.SPECIAL is set
      299     8686                           - KQ$STA.LOCKCNT ~= 0
      300     8687
      301     8688                           The S-tree must be locked on entry, and is not
      302     8689                           unlocked.
      303     8690        */
      304     8691    1   KQT$DELSTA: ENTRY (KQ$CG,PARM$) ALTRET; /* !!Doesn't ALTRET!! */
      305     8692        /**/
      306     8693    1         STA$=PARM$;
      307     8694    1         CALL DELSTA;
      308     8695    1         RETURN;
      309     8696        /**/
      310     8697        /*F* NAME:         KQT$MOVQTN
      311     8698             PURPOSE:      To place a Q-node in its spot in the prio-ordered
      312     8699                           list.
      313     8700        */
      314     8701    1   KQT$MOVQTN: ENTRY (KQ$CG,PARM$) ALTRET; /* !!Doesn't ALTRET!! */
      315     8702        /**/
      316     8703    1         CALL REMQTN (PARM$);
      317     8704    1         CALL INSQTN (PARM$);
      318     8705    1         RETURN;
      319     8706        %EJECT;
PL6.E3A0      #001=KQT$GETSTA File=KQT$TREES.:E05TSI                             WED 07/30/97 01:35 Page:10   
      320     8707        /**/
      321     8708        /*F* NAME:         KQT$VALREADS
      322     8709             PURPOSE:      To validate all outstanding reads which may no
      323     8710                           longer be valid due to a station's deactivation
      324     8711                           or disconnection, or a msg type being deleted.
      325     8712             DESCRIPTION:  If the comgroup does not allow read from absent
      326     8713                           station, then a reader specifying specific
      327     8714                           station gets an error if the station is not there
      328     8715                           or deactivated.  If we initiate such a read and
      329     8716                           leave it pending, then when a station changes
      330     8717                           state to 'not there', we must check all people
      331     8718                           who are trying to read it.  Currently this can
      332     8719                           only be DCBs.
      333     8720
      334     8721                           Must also do this when the AU deletes a Q-tree
      335     8722                           node (be it station or msg type).
      336     8723        */
      337     8724    1   KQT$VALREADS: ENTRY (KQ$CG) ALTRET; /* !!Doesn't ALTRET!! */
      338     8725        /**/
      339     8726    1         CALL VALREADS;
      340     8727    1         RETURN;
      341     8728        /**/
      342     8729        /*F* NAME:         KQT$LBT
      343     8730             PURPOSE:      To lock the T- and S-trees
      344     8731             DESCRIPTION:  KQR$READ needs to lock the Q-tree, then the
      345     8732                           other tree, in that order.  Hence when anyone
      346     8733                           locks both trees, it must be in that order.
      347     8734                           This routine does that.
      348     8735        */
      349     8736    1   KQT$LBT: ENTRY (KQ$CG) ALTRET; /* !!Doesn't ALTRET!! */
      350     8737        /**/
      351     8738    1         CALL LOCK_BOTH;
      352     8739    1         RETURN;
      353     8740        /*F* NAME:         KQT$UBT
      354     8741             PURPOSE:      To unlock the T- and S-trees
      355     8742        */
      356     8743    1   KQT$UBT: ENTRY (KQ$CG) ALTRET; /* !!Doesn't ALTRET!! */
PL6.E3A0      #001=KQT$GETSTA File=KQT$TREES.:E05TSI                             WED 07/30/97 01:35 Page:11   
      357     8744        /**/
      358     8745    1         CALL UNLOCK_BOTH;
      359     8746    1         RETURN;
      360     8747        /**/
      361     8748        /*F* NAME:         KQT$RECOVER
      362     8749             PURPOSE:      To rebuild the T- and S-trees after a crash
      363     8750             DESCRIPTION:  Called when a comgroup is being opened after
      364     8751                           being closed by RECOVER.  The trees are rebuilt
      365     8752                           because KQB$TREE has large windows in which a
      366     8753                           SCREECH can leave the trees blotto.
      367     8754                           SNAPs and ALTRETs if a tree is blotto.
      368     8755        */
      369     8756    1   KQT$RECOVER: ENTRY (KQ$CG) ALTRET;
      370     8757        /**/
      371     8758    1         CALL TBLD (KQ$CG.STREE,KQ_ICG.STREE) ALTRET(BADTREE);
      372     8759    1         CALL TBLD (KQ$CG.TTREE,KQ_ICG.TTREE) ALTRET(BADTREE);
      373     8760    1         RETURN;
      374     8761    1   BADTREE:;
      375     8762    1         CALL SC_CGCRCT;
      376     8763        /*S* SCREECH_CODE: KQT-S$CGCRCT
      377     8764             TYPE:         SNAP
      378     8765             MESSAGE:      Cannot recover comgroup - bad tree
      379     8766             REMARKS:      This SNAP occurs when a comgroup is being opened
      380     8767                           after having been closed by RECOVER.  One of the
      381     8768                           comgroup's trees has a duplicate key and thus
      382     8769                           cannot be reliably rebuilt.  The snap is for
      383     8770                           information only (to provide a picture of the
      384     8771                           comgroup); the user will get an error and the
      385     8772                           open will not be performed. */
      386     8773    1         ALTRETURN;
      387     8774        %EJECT;
PL6.E3A0      #001=KQT$GETSTA File=KQT$TREES.:E05TSI                             WED 07/30/97 01:35 Page:12   
      388     8775        /**/
      389     8776        /*********************************************************************************
      390     8777        *                                                                                *
      391     8778        *   SSS   U   U  BBBB   RRRR    OOO   U   U  TTTTT   III   N   N  EEEEE   SSS    *
      392     8779        *  S   S  U   U  B   B  R   R  O O O  U   U    T      I    N   N  E      S   S   *
      393     8780        *  S      U   U  B   B  R   R  O O O  U   U    T      I    NN  N  E      S       *
      394     8781        *   SSS   U   U  BBBB   RRRR   O  OO  U   U    T      I    N N N  EEEE    SSS    *
      395     8782        *      S  U   U  B   B  R R    O   O  U   U    T      I    N  NN  E          S   *
      396     8783        *  S   S  U   U  B   B  R  R   O   O  U   U    T      I    N   N  E      S   S   *
      397     8784        *   SSS    UUU   BBBB   R   R   OOO    UUU     T     III   N   N  EEEEE   SSS    *
      398     8785        *                                                                                *
      399     8786        *********************************************************************************/
      400     8787
      401     8788        /****************************************************************
      402     8789        *****************************************************************/
      403     8790        /*D* NAME:         TBLD
      404     8791             PURPOSE:      To re-build a tree
      405     8792             DESCRIPTION:  Passed the old header, and an inited header
      406     8793                           to start it fresh with.
      407     8794                           Depends on LINKS being used in the BTNs, since
      408     8795                           it uses the linear list to rebuild the tree
      409     8796                           structure.
      410     8797                           ALTRETs if the linear list is circular.
      411     8798        */
      412     8799    1   TBLD: PROC (KQ$THDR,KQ_THDR) ALTRET;
      413     8800        /**/
      414     8801        %KQ_THDR (FPTN=KQ$THDR,STCLASS="");
      415     8839        %KQ_THDR (FPTN=KQ_THDR,STCLASS="");
      416     8877    2   DCL NODE$ PTR;
      417     8878    2   DCL KEY CHAR(8);
      418     8879        /**/
      419     8880    2         NODE$=KQ$THDR.HEAD$;
      420     8881    2         KQ$THDR=KQ_THDR;
      421     8882              %LOCK (G=KQ$THDR.GATE);
      422     8885    3           DO WHILE (NODE$ ~= ADDR(NIL));
      423     8886    3           P$=NODE$->KQ$BTN.FLINK$;
      424     8887    3           KEY=NODE$->KQ$BTN.KEY;
PL6.E3A0      #001=KQT$GETSTA File=KQT$TREES.:E05TSI                             WED 07/30/97 01:35 Page:13   
      425     8888    3           CALL KQB$INSERTNL (KQ$THDR,KEY,NODE$) ALTRET(ALTRT);
      426     8889    3           NODE$=P$;
      427     8890    3           END;
      428     8891              %UNLOCK (G=KQ$THDR.GATE);
      429     8894    2         RETURN;
      430     8895    2   ALTRT:;
      431     8896              %UNLOCK (G=KQ$THDR.GATE);
      432     8899    2         ALTRETURN;
      433     8900    2   END TBLD;
      434     8901        /****************************************************************
      435     8902        *****************************************************************/
      436     8903        /*D* NAME:         INSQTN
      437     8904             PURPOSE:      To enter a Q-tree node
      438     8905        */
      439     8906    1   INSQTN: PROC (QTN$);
      440     8907        /**/
      441     8908    2   DCL QTN$ PTR;
      442     8909        /**/
      443     8910    2         P$=ADDR(KQ$CG.QUEUE.PLHD$);
      444     8911    2         PP$=P$->B$$PTR;
      445     8912    3           DO WHILE (PP$ ~= ADDR(NIL));
      446     8913    3           IF QTN$->KQ$QTN.MPRIO > PP$->KQ$QTN.MPRIO THEN
      447     8914    3            GOTO INS0;
      448     8915    3           ELSE IF QTN$->KQ$QTN.MPRIO = PP$->KQ$QTN.MPRIO THEN
      449     8916    3             IF QTN$->KQ$QTN.STA.BTN.KEY < PP$->KQ$QTN.STA.BTN.KEY THEN
      450     8917    3              GOTO INS0;
      451     8918    3           P$=ADDR(PP$->KQ$QTN.PLINK$);
      452     8919    3           PP$=P$->B$$PTR;
      453     8920    3           END;
      454     8921    2   INS0: ;
      455     8922    3           DO INHIBIT;
      456     8923    3           QTN$->KQ$QTN.PLINK$=PP$;
      457     8924    3           P$->B$$PTR=QTN$;
      458     8925    3           END;
      459     8926    2         RETURN;
      460     8927        /**/
      461     8928        /*D* NAME:         REMQTN
PL6.E3A0      #001=KQT$GETSTA File=KQT$TREES.:E05TSI                             WED 07/30/97 01:35 Page:14   
      462     8929             PURPOSE:      To remove a Q-node from the prio-ordered list
      463     8930        */
      464     8931    2   REMQTN: ENTRY (QTN$);
      465     8932        /**/
      466     8933    2         P$=ADDR(KQ$CG.QUEUE.PLHD$);
      467     8934    2         PP$=P$->B$$PTR;
      468     8935    3           DO FOREVER;
      469     8936    3           IF PP$ = QTN$ THEN
      470     8937    4             DO;
      471     8938    4             P$->B$$PTR=QTN$->KQ$QTN.PLINK$;
      472     8939    4             RETURN;
      473     8940    4             END;
      474     8941    3           P$=ADDR(PP$->KQ$QTN.PLINK$);
      475     8942    3           PP$=P$->B$$PTR;
      476     8943    3           END;
      477     8944    2   END INSQTN;
      478     8945        /****************************************************************
      479     8946        *****************************************************************/
      480     8947        /*D* NAME:         LOCK_BOTH
      481     8948             PURPOSE:      To lock the T- and S-trees
      482     8949        */
      483     8950    1   LOCK_BOTH: PROC;
      484     8951    2         IF KQ$CG.QISS THEN
      485     8952    3           DO;
      486     8953                %LOCK (G=KQ$STREE.GATE);
      487     8956                %LOCK (G=KQ$TTREE.GATE);
      488     8959    3           END;
      489     8960    2         ELSE
      490     8961    3           DO;
      491     8962                %LOCK (G=KQ$TTREE.GATE);
      492     8965                %LOCK (G=KQ$STREE.GATE);
      493     8968    3           END;
      494     8969    2         RETURN;
      495     8970    2   END LOCK_BOTH;
      496     8971        /****************************************************************
      497     8972        *****************************************************************/
      498     8973        /*D* NAME:         UNLOCK_BOTH
PL6.E3A0      #001=KQT$GETSTA File=KQT$TREES.:E05TSI                             WED 07/30/97 01:35 Page:15   
      499     8974             PURPOSE:      To unlock the T- and S-trees
      500     8975        */
      501     8976    1   UNLOCK_BOTH: PROC;
      502     8977    2         IF KQ$CG.QISS THEN
      503     8978    3           DO;
      504     8979                %UNLOCK (G=KQ$TTREE.GATE);
      505     8982                %UNLOCK (G=KQ$STREE.GATE);
      506     8985    3           END;
      507     8986    2         ELSE
      508     8987    3           DO;
      509     8988                %UNLOCK (G=KQ$STREE.GATE);
      510     8991                %UNLOCK (G=KQ$TTREE.GATE);
      511     8994    3           END;
      512     8995    2         RETURN;
      513     8996    2   END UNLOCK_BOTH;
      514     8997        /****************************************************************
      515     8998        *****************************************************************/
      516     8999        /*D* NAME:         VALREADS
      517     9000             PURPOSE:      To validate reads in case of deactivate
      518     9001                           or disconnect, or a deleted msg type.
      519     9002             DESCRIPTION:  Calls KQR$VALIDATE for each DCB having a
      520     9003                           read pending.
      521     9004        */
      522     9005    1   VALREADS: PROC;
      523     9006    2   VAL0: ;
      524     9007    2         CALL LOCK_BOTH;
      525     9008    2         STA$=KQ$CG.DCBHD$;
      526     9009    3           DO WHILE (STA$ ~= ADDR(NIL));
      527     9010                %LOCK (G=STA$->KQ$STA.GATE);
      528     9013    3           IF STA$->KQ$STA.RBLK$ ~= ADDR(NIL) THEN
      529     9014    3            IF STA$->KQ$STA.RBLK$->KQ$RBLK.STATE = KQRS_PEND# THEN
      530     9015    3             CALL KQR$VALIDATE (STA$->KQ$STA.LDCT$->NK$LDCT.IOQ$->N$REQ) ALTRET(VAL0);
      531     9016                %UNLOCK (G=STA$->KQ$STA.GATE);
      532     9019    3           STA$=STA$->KQ$STA.DCBLNK$;
      533     9020    3           END;
      534     9021    2         CALL UNLOCK_BOTH;
      535     9022    2         RETURN;
PL6.E3A0      #001=KQT$GETSTA File=KQT$TREES.:E05TSI                             WED 07/30/97 01:35 Page:16   
      536     9023    2   END VALREADS;
      537     9024        /****************************************************************
      538     9025        *****************************************************************/
      539     9026        /*D* NAME:         DELTYP
      540     9027             PURPOSE:      To delete a message type
      541     9028             DESCRIPTION:  The type pointed to by MTYP$ is removed from
      542     9029                           the (already locked) T-tree, and released.
      543     9030        */
      544     9031    1   DELTYP: PROC;
      545     9032    3           DO INHIBIT;
      546     9033    3           CALL KQB$DELETENL (KQ$TTREE,,MTYP$);
      547     9034    3           IF KQ$CG.QISS = '0'B THEN
      548     9035    4             DO;
      549     9036    4             IF MTYP$->KQ$QTN.LOCKCNT ~= 0 THEN
      550     9037    5               DO;
      551     9038    5               CALL SC_BCGXRL;
      552     9039    5               RETURN;
      553     9040    5               END;
      554     9041    4             CALL KQL$CHKMLH (MTYP$->KQ$QTN.MLH) ALTRET(BADREL);
      555     9042    4             CALL DOQTN (MTYP$);
      556     9043    4             END;
      557     9044    3           CALL KQM$RELMTYP (KQ$CG,MTYP$);
      558     9045    3   GETOUT: ;
      559     9046    3           RETURN;
      560     9047    3   BADREL: ;
      561     9048    3           CALL SC_BCGXRL;
      562     9049        /*S* SCREECH_CODE: KQT-S$BCGXRL
      563     9050             TYPE:         SNAP
      564     9051             MESSAGE:      Bad release of comgroup station, msgtype, or MBLK list
      565     9052             REMARKS:      A station or MBLK list or message type node that was still
      566     9053                           active in some way has been released.
      567     9054                           A SNAP dump is taken and the item not released.
      568     9055        */
      569     9056    3           END; /* INHIBIT */
      570     9057    2         RETURN;
      571     9058        /****************************************************************
      572     9059        *****************************************************************/
PL6.E3A0      #001=KQT$GETSTA File=KQT$TREES.:E05TSI                             WED 07/30/97 01:35 Page:17   
      573     9060        /*D* NAME:         DELSTA
      574     9061             PURPOSE:      To delete a station
      575     9062             DESCRIPTION:  Deletes the station from the station tree, and
      576     9063                           releases the station block, if the conditions
      577     9064                           listed in the *F* for KQT$DELSTA are satisfied.
      578     9065        */
      579     9066    2   DELSTA: ENTRY;
      580     9067    3           DO INHIBIT;
      581     9068    3           IF STA$->KQ$STA.MREQ > 0
      582     9069    3           OR STA$->KQ$STA.IDSC
      583     9070    3           OR STA$->KQ$STA.RBLK$ ~= ADDR(NIL)
      584     9071    3           OR STA$->KQ$STA.MBLK$ ~= ADDR(NIL)
      585     9072    3           OR STA$->KQ$STA.LDCT$ ~= ADDR(NIL) THEN
      586     9073    4             DO;
      587     9074    4             CALL SC_BCGXRL;
      588     9075    4             GOTO GETOUT;
      589     9076    4             END;
      590     9077    3           IF  STA$->KQ$STA.LOCKCNT = 0
      591     9078    3           AND (STA$->KQ$STA.PERM | STA$->KQ$STA.SPECIAL) = '0'B THEN
      592     9079    4             DO;
      593     9080    4             CALL KQL$CHKMLH (STA$->KQ$STA.MLH) ALTRET(GETOUT);
      594     9081    4             IF KQ$CG.QISS THEN
      595     9082    5               DO;
      596     9083    5               CALL KQL$CHKMLH (STA$->KQ$QTN.MLH) ALTRET(GETOUT);
      597     9084    5               END;
      598     9085    4             CALL KQB$DELETENL (KQ$STREE,,STA$);
      599     9086    4             IF KQ$CG.QISS THEN
      600     9087    4              CALL DOQTN (STA$);
      601     9088    4             CALL KQM$RELSTA (KQ$CG,STA$);
      602     9089    4             END;
      603     9090    3           GOTO GETOUT;
      604     9091    3           END;
      605     9092    2   DOQTN: PROC (QTN$);
      606     9093        /**/
      607     9094    3   DCL QTN$ PTR;
      608     9095        /**/
      609     9096    4           DO INHIBIT;
PL6.E3A0      #001=KQT$GETSTA File=KQT$TREES.:E05TSI                             WED 07/30/97 01:35 Page:18   
      610     9097    4           CALL REMQTN (QTN$);
      611     9098    4           IF QTN$->KQ$QTN.READS$ ~= ADDR(NIL) THEN
      612     9099    5             DO;
      613     9100    5             RBLK$=QTN$->KQ$QTN.READS$;
      614     9101    6               DO WHILE (RBLK$->KQ$RBLK.QRLNK$ ~= ADDR(NIL));
      615     9102    6               IF RBLK$->KQ$RBLK.QTN$ ~= QTN$ THEN
      616     9103    6                CALL SC_BCGXRL;
      617     9104    6               RBLK$->KQ$RBLK.QTN$=ADDR(NIL);
      618     9105    6               RBLK$=RBLK$->KQ$RBLK.QRLNK$;
      619     9106    6               END;
      620     9107    5             RBLK$->KQ$RBLK.QTN$=ADDR(NIL);
      621     9108    5             RBLK$->KQ$RBLK.QRLNK$=KQ$CG.QUEUE.WCRL$;
      622     9109    5             KQ$CG.QUEUE.WCRL$=QTN$->KQ$QTN.READS$;
      623     9110    5             QTN$->KQ$QTN.READS$=ADDR(NIL);
      624     9111    5             END;
      625     9112    4           END;
      626     9113    3   END DOQTN;
      627     9114    2   END DELTYP;
      628     9115    1   END KQT$GETSTA;

PL6.E3A0      #001=KQT$GETSTA File=KQT$TREES.:E05TSI                             WED 07/30/97 01:35 Page:19   
--  Include file information  --

   KC_CP6.:E05TOU  is referenced.
   SS_SCHED_C.:E05TOU  is referenced.
   KC$CP6V_C.:E05TOU  is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   N$REQ.:E05TOU  is referenced.
   NK$LDCT.:E05TOU  is referenced.
   KQ_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   HF_LOCK_C.:E05TOU  cannot be made into a system file and is referenced.
   KQ_MAC_C.:E05TOU  is referenced.
   KQ_SUBS_C.:E05TOU  is referenced.
      No diagnostics issued in procedure KQT$GETSTA.

   Procedure KQT$GETSTA requires 782 words for executable code.
   Procedure KQT$GETSTA requires 28 words of local(AUTO) storage.

    No errors detected in file KQT$TREES.:E05TSI    .

PL6.E3A0      #001=KQT$GETSTA File=KQT$TREES.:E05TSI                             WED 07/30/97 01:35 Page:20   

 Object Unit name= KQT$GETSTA                                 File name= KQT$TREES.:E05TOU
 UTS= JUL 30 '97 01:35:58.84 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Proc  even  none   782   1416  KQT$GETSTA
    1  RoData even  none     4      4  KQT$GETSTA

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     0      0   yes    yes     yes      Std        3  KQT$GETSTA
     0    227          yes     yes      Std        3  KQT$MAKESTA
     0    244          yes     yes      Std        3  KQT$GETTYP
     0    500          yes     yes      Std        2  KQT$DELTYP
     0    510          yes     yes      Std        2  KQT$DELSTA
     0    520          yes     yes      Std        2  KQT$MOVQTN
     0    533          yes     yes      Std        1  KQT$VALREADS
     0    540          yes     yes      Std        1  KQT$LBT
     0    545          yes     yes      Std        1  KQT$UBT
     0    552          yes     yes      Std        1  KQT$RECOVER
PL6.E3A0      #001=KQT$GETSTA File=KQT$TREES.:E05TSI                             WED 07/30/97 01:35 Page:21   

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       1 HFC$UNLOCK
 yes     yes           Std       3 KQM$GETSTA
 yes     yes           Std       3 KQM$GETBD
         yes           Std       1 HFC$LOCK
 yes     yes           Std       3 KQB$INSERTNL
 yes     yes           Std       2 KQM$RELMTYP
 yes     yes           Std       3 KQM$GETMTYP
 yes     yes           Std       2 KQM$RELSTA
 yes     yes           Std       3 KQM$GETBR
 yes     yes           Std       1 KQR$VALIDATE
 yes     yes           Std       3 KQB$DELETENL
 yes     yes           Std       1 KQL$CHKMLH
                       nStd      0 X66_AUTO_3
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_AALT
                       nStd      0 X66_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     SC_CGCRCT                             SC_BCGXRL                             KQ_ICG
     B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ASLENTSID                             ISSID
PL6.E3A0      #001=KQT$GETSTA File=KQT$TREES.:E05TSI                             WED 07/30/97 01:35 Page:22   


        1        1        /*M* KQT$TREES TREE updating routines for COMGROUP */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7       /*X* DMC,PLM=6,IND=0,IDT=2,SDI=2,CTI=0,ENU=0,AND,DCI=4,CSU=2,ECU=4,THI=0,DTI=0,STI=1
                 7        ,IAD=0,PRB */
        8        8        /**/
        9        9        /*P* NAME:         KQT$TREES
       10       10             PURPOSE:      To provide tree updating functions for COMGROUP
       11       11             DESCRIPTION:  Contains various routines dealing with the updating
       12       12                           of the trees in a comgroup, and the implications
       13       13                           thereof.
       14       14
       15       15        */
       16       16        /**/
       17       17        KQT$GETSTA: PROC (KQ$CG,PARM$,XKEY) ALTRET;

     17  0 000000   000000 700200 xent  KQT$GETSTA   TSX0  ! X66_AUTO_3
         0 000001   000034 000003                    ZERO    28,3

       18       18        /**/
       19       19
       20       20
       21       21
       22       22        /**/
       23       23        /* INCLUDES */
       24       24        /**/
       25       25        %INCLUDE KQ_SUBS_C;
       26      325        %INCLUDE KQ_MAC_C;
       27     2875        %INCLUDE HF_LOCK_C;
       28     2889        %INCLUDE KQ_DATA_R;
       29     3721        %INCLUDE NK$LDCT;
       30     3823        %INCLUDE N$REQ;
       31     3897        %INCLUDE CP_6_SUBS;
PL6.E3A0      #001=KQT$GETSTA File=KQT$TREES.:E05TSI                             WED 07/30/97 01:35 Page:23   
       32     4437        %INCLUDE KC$CP6V_C;
       33     4557        %INCLUDE SS_SCHED_C;
       34     4790        %INCLUDE KC_CP6;
       35     5350
       36     5351
       37     5352
       38     5353        /**/
       39     5354        /* PARAMETERS */
       40     5355        /**/
       41     5356        %KQ_CG   (FPTN=KQ$CG  ,STCLASS="");
       42     6095    1   DCL PARM$ PTR;
       43     6096    1   DCL XKEY CHAR(8) ALIGNED;
       44     6097
       45     6098
       46     6099
       47     6100        /**/
       48     6101        /* BASED STRUCTURES */
       49     6102        /**/
       50     6103    1   DCL B$$PTR PTR BASED ALIGNED;
       51     6104        %NK$LDCT;
       52     6150        %N$REQ;
       53     6208        %KQ_STA  (FPTN=KQ$STA ,STCLASS="BASED(STA$)");
       54     6547        %KQ_RBLK (FPTN=KQ$RBLK,STCLASS="BASED(RBLK$)");
       55     6733        %KQ_THDR (FPTN=KQ$THDR,STCLASS=BASED);
       56     6771        %KQ_MTYP (FPTN=KQ$MTYP,STCLASS="BASED(MTYP$)");
       57     6845        %KQ_QTN  (FPTN=KQ$QTN ,STCLASS="BASED(QTN$)");
       58     7318        %KQ_MLH  (FPTN=KQ$MLH ,STCLASS="BASED(MLH$)");
       59     7388        %KQ_MBLK (FPTN=KQ$MBLK,STCLASS="BASED(MBLK$)");
       60     7658        %KQ_BTN  (FPTN=KQ$BTN ,STCLASS=BASED);
       61     7690
       62     7691
       63     7692
       64     7693        /**/
       65     7694        /* AUTO */
       66     7695        /**/
       67     7696    1   DCL STA$ PTR;
       68     7697    1   DCL P$ PTR;
PL6.E3A0      #001=KQT$GETSTA File=KQT$TREES.:E05TSI                             WED 07/30/97 01:35 Page:24   
       69     7698    1   DCL I SBIN;
       70     7699    1   DCL QTN$ PTR;
       71     7700    1   DCL MTYP$ PTR;
       72     7701    1   DCL DTYP$ REDEF MTYP$ PTR;
       73     7702    1   DCL DSTA$ PTR;
       74     7703    1   DCL PP$ PTR;
       75     7704    1   DCL ACTCNT UBIN WORD;
       76     7705    1   DCL MLH$ PTR;
       77     7706    1   DCL MBLK$ PTR;
       78     7707    1   DCL RBLK$ PTR;
       79     7708
       80     7709
       81     7710
       82     7711        /**/
       83     7712        /* REFS */
       84     7713        /**/
       85     7714    1   DCL KQB$DELETENL  ENTRY(3) ALTRET;
       86     7715    1   DCL KQB$INSERTNL  ENTRY(3) ALTRET;
       87     7716    1   DCL KQB$SRCH      ENTRY(3) ALTRET;
       88     7717    1   DCL KQL$CHKMLH    ENTRY(1) ALTRET;
       89     7718    1   DCL KQM$GETBD     ENTRY(3) ALTRET;
       90     7719    1   DCL KQM$GETBR     ENTRY(3) ALTRET;
       91     7720    1   DCL KQM$GETMTYP   ENTRY(3) ALTRET;
       92     7721    1   DCL KQM$GETSTA    ENTRY(3) ALTRET;
       93     7722    1   DCL KQM$RELMTYP   ENTRY(2) ALTRET;
       94     7723    1   DCL KQM$RELSTA    ENTRY(2) ALTRET;
       95     7724    1   DCL KQR$VALIDATE  ENTRY(1) ALTRET;
       96     7725    1   DCL SC_CGCRCT     ENTRY    CONV(2,0);
       97     7726    1   DCL SC_BCGXRL     ENTRY    CONV(2,0);
       98     7727        %KQ_CG (FPTN=KQ_ICG,STCLASS=SYMREF);
       99     8466
      100     8467
      101     8468
      102     8469        /**/
      103     8470        /* SUBS */
      104     8471        /**/
      105     8472        %SUB KQ$QTREE="KQ$CG.QUEUE.QTREE$->KQ$THDR";
PL6.E3A0      #001=KQT$GETSTA File=KQT$TREES.:E05TSI                             WED 07/30/97 01:35 Page:25   
      106     8473        %SUB KQ$TTREE="KQ$CG.TTREE";
      107     8474        %SUB KQ$STREE="KQ$CG.STREE";
      108     8475        %EJECT;
PL6.E3A0      #001=KQT$GETSTA File=KQT$TREES.:E05TSI                             WED 07/30/97 01:35 Page:26   
      109     8476        /*F* NAME:         KQT$GETSTA
      110     8477             PURPOSE:      To build and insert a station block.
      111     8478             CALL:         KQT$GETSTA (KQ$CG,MYSTA$,KEY)
      112     8479             INPUT:        MYSTA$ points to caller's (DCB) station
      113     8480                           KEY is name of desired new station
      114     8481             OUTPUT:       MYSTA$ points to new station inserted in tree,
      115     8482                                and inserted in queue if QISS.
      116     8483             DESCRIPTION:  XKEY is the desired station name.  The station
      117     8484                           tree must be locked upon entry.  It may be unlocked
      118     8485                           during the process, but is returned locked unless
      119     8486                           the routine ALTRETs in which case
      120     8487                           it is unlocked.
      121     8488
      122     8489                           If the caller is a DCB station, he is REGed
      123     8490                           until memory becomes available.
      124     8491
      125     8492                           For TERMINAL stations, KQM$GETBD is used if
      126     8493                           nescessary.  This scheme requires that TERMs
      127     8494                           only use this routine to get station blocks
      128     8495                           since we must share KQ$STA.MREQ and MREQ$.
      129     8496                           If no memory is immediately available, then
      130     8497                           if another delayed request is in progress we
      131     8498                           ALTRET with MYSTA$ ~= ADDR(NIL), else post
      132     8499                           a delayed request and similarly ALTRET, expecting
      133     8500                           the caller to try later.  When he does, if
      134     8501                           our request is complete, we use the block thus
      135     8502                           acquired.  If the comgroup has run out of memory,
      136     8503                           we ALTRET with MYSTA$ = ADDR(NIL).
      137     8504
      138     8505        KQT$GETSTA: ENTRY (KQ$CG,PARM$,XKEY) ALTRET;
      139     8506        */
      140     8507        /**/
      141     8508    1         STA$=PARM$;

   8508  0 000002   200004 470500                    LDP0    @PARM$,,AUTO
         0 000003   000000 236100                    LDQ     0,,PR0
         0 000004   200006 756100                    STQ     STA$,,AUTO
PL6.E3A0      #001=KQT$GETSTA File=KQT$TREES.:E05TSI                             WED 07/30/97 01:35 Page:27   

      142     8509    1         IF STA$->KQ$STA.TERM THEN

   8509  0 000005   200006 471500                    LDP1    STA$,,AUTO
         0 000006   100020 236100                    LDQ     16,,PR1
         0 000007   040000 316003                    CANQ    16384,DU
         0 000010   000117 600000 0                  TZE     s:8544

      143     8510    2           DO INHIBIT;

      144     8511    2           I=STA$->KQ$STA.MREQ;

   8511  0 000011   100020 236300                    LDQ   ! 16,,PR1
         0 000012   000011 736200                    QLS   ! 9
         0 000013   000033 732200                    QRS   ! 27
         0 000014   200010 756300                    STQ   ! I,,AUTO

      145     8512    2           IF I = KQMR_STA# THEN

   8512  0 000015   000004 116207                    CMPQ  ! 4,DL
         0 000016   000027 601200 0                  TNZ   ! s:8520

      146     8513    3             DO;

      147     8514    3   GSX:      ;

   8514  0 000017                       GSX          null
      148     8515                  %UNLOCK (G=KQ$STREE.GATE);

   8516  0 000017   200003 236300                    LDQ   ! @KQ$CG,,AUTO
         0 000020   000075 036203                    ADLQ  ! 61,DU
         0 000021   200030 756300                    STQ   ! @QTN$+1,,AUTO
         0 000022   200030 630700                    EPPR0 ! @QTN$+1,,AUTO
         0 000023   000017 631600 xsym               EPPR1 ! B_VECTNIL+15
         0 000024   000000 701200 xent               TSX1  ! HFC$UNLOCK
         0 000025   000000 011200                    NOP   ! 0

PL6.E3A0      #001=KQT$GETSTA File=KQT$TREES.:E05TSI                             WED 07/30/97 01:35 Page:28   
      149     8518    3             ALTRETURN;

   8518  0 000026   000000 702200 xent               TSX2  ! X66_AALT

      150     8519    3             END;
      151     8520    2           IF I = -KQMR_STA# THEN

   8520  0 000027   000000 116200 1                  CMPQ  ! 0
         0 000030   000043 601200 0                  TNZ   ! s:8529

      152     8521    3             DO;

      153     8522    3             DSTA$=STA$->KQ$STA.MREQ$;

   8522  0 000031   100024 236300                    LDQ   ! 20,,PR1
         0 000032   200013 756300                    STQ   ! DSTA$,,AUTO

      154     8523    3             STA$->KQ$STA.MREQ=0;

   8523  0 000033   000000 236203                    LDQ   ! 0,DU
         0 000034   100020 552320                    STBQ  ! 16,'20'O,PR1

      155     8524    3             PARM$=DSTA$;

   8524  0 000035   200013 236300                    LDQ   ! DSTA$,,AUTO
         0 000036   000000 756300                    STQ   ! 0,,PR0

      156     8525    3             IF DSTA$ = ADDR(NIL) THEN GOTO GSX;

   8525  0 000037   200013 236300                    LDQ   ! DSTA$,,AUTO
         0 000040   000001 116200 xsym               CMPQ  ! B_VECTNIL+1
         0 000041   000017 600200 0                  TZE   ! GSX

      157     8526    3             END;

   8526  0 000042   000116 710200 0                  TRA   ! s:8542

PL6.E3A0      #001=KQT$GETSTA File=KQT$TREES.:E05TSI                             WED 07/30/97 01:35 Page:29   
      158     8527    2           ELSE
      159     8528    3             DO;

      160     8529    3             CALL KQM$GETSTA (KQ$CG,DSTA$,I) ALTRET(GS00);

   8529  0 000043   200010 633700                    EPPR3 ! I,,AUTO
         0 000044   200032 453700                    STP3  ! @QTN$+3,,AUTO
         0 000045   200013 634700                    EPPR4 ! DSTA$,,AUTO
         0 000046   200031 454700                    STP4  ! @QTN$+2,,AUTO
         0 000047   200003 236300                    LDQ   ! @KQ$CG,,AUTO
         0 000050   200030 756300                    STQ   ! @QTN$+1,,AUTO
         0 000051   200030 630700                    EPPR0 ! @QTN$+1,,AUTO
         0 000052   000021 631600 xsym               EPPR1 ! B_VECTNIL+17
         0 000053   000000 701200 xent               TSX1  ! KQM$GETSTA
         0 000054   000056 702200 0                  TSX2  ! GS00

      161     8530    3             GOTO GS0;

   8530  0 000055   000131 710200 0                  TRA   ! GS0

      162     8531    3   GS00:     IF STA$->KQ$STA.MREQ ~= 0 THEN GOTO GSX;

   8531  0 000056   200006 470700       GS00         LDP0  ! STA$,,AUTO
         0 000057   000020 236300                    LDQ   ! 16,,PR0
         0 000060   000777 316203                    CANQ  ! 511,DU
         0 000061   000017 601200 0                  TNZ   ! GSX

      163     8532                  %UNLOCK (G=KQ$STREE.GATE);

   8533  0 000062   200003 236300                    LDQ   ! @KQ$CG,,AUTO
         0 000063   000075 036203                    ADLQ  ! 61,DU
         0 000064   200030 756300                    STQ   ! @QTN$+1,,AUTO
         0 000065   200030 630700                    EPPR0 ! @QTN$+1,,AUTO
         0 000066   000017 631600 xsym               EPPR1 ! B_VECTNIL+15
         0 000067   000000 701200 xent               TSX1  ! HFC$UNLOCK
         0 000070   000000 011200                    NOP   ! 0

PL6.E3A0      #001=KQT$GETSTA File=KQT$TREES.:E05TSI                             WED 07/30/97 01:35 Page:30   
      164     8535    3             DSTA$=STA$;

   8535  0 000071   200006 236300                    LDQ   ! STA$,,AUTO
         0 000072   200013 756300                    STQ   ! DSTA$,,AUTO

      165     8536    3             I=KQMR_STA#;

   8536  0 000073   000004 235207                    LDA   ! 4,DL
         0 000074   200010 755300                    STA   ! I,,AUTO

      166     8537    3             CALL KQM$GETBD (KQ$CG,DSTA$,I) ALTRET(ALTRT);

   8537  0 000075   200010 630700                    EPPR0 ! I,,AUTO
         0 000076   200032 450700                    STP0  ! @QTN$+3,,AUTO
         0 000077   200013 631700                    EPPR1 ! DSTA$,,AUTO
         0 000100   200031 451700                    STP1  ! @QTN$+2,,AUTO
         0 000101   200003 236300                    LDQ   ! @KQ$CG,,AUTO
         0 000102   200030 756300                    STQ   ! @QTN$+1,,AUTO
         0 000103   200030 630700                    EPPR0 ! @QTN$+1,,AUTO
         0 000104   000021 631600 xsym               EPPR1 ! B_VECTNIL+17
         0 000105   000000 701200 xent               TSX1  ! KQM$GETBD
         0 000106   000477 702200 0                  TSX2  ! ALTRT

      167     8538                  %LOCK (G=KQ$STREE.GATE);

   8539  0 000107   200003 236300                    LDQ   ! @KQ$CG,,AUTO
         0 000110   000075 036203                    ADLQ  ! 61,DU
         0 000111   200030 756300                    STQ   ! @QTN$+1,,AUTO
         0 000112   200030 630700                    EPPR0 ! @QTN$+1,,AUTO
         0 000113   000017 631600 xsym               EPPR1 ! B_VECTNIL+15
         0 000114   000000 701200 xent               TSX1  ! HFC$LOCK
         0 000115   000000 011200                    NOP   ! 0

      168     8541    3             END;

      169     8542    2           END;

PL6.E3A0      #001=KQT$GETSTA File=KQT$TREES.:E05TSI                             WED 07/30/97 01:35 Page:31   
   8542  0 000116   000131 710000 0                  TRA     GS0

      170     8543    1         ELSE
      171     8544    1          CALL KQM$GETSTA (KQ$CG,DSTA$,I) ALTRET(GS3);

   8544  0 000117   200010 633500                    EPPR3   I,,AUTO
         0 000120   200032 453500                    STP3    @QTN$+3,,AUTO
         0 000121   200013 634500                    EPPR4   DSTA$,,AUTO
         0 000122   200031 454500                    STP4    @QTN$+2,,AUTO
         0 000123   200003 236100                    LDQ     @KQ$CG,,AUTO
         0 000124   200030 756100                    STQ     @QTN$+1,,AUTO
         0 000125   200030 630500                    EPPR0   @QTN$+1,,AUTO
         0 000126   000021 631400 xsym               EPPR1   B_VECTNIL+17
         0 000127   000000 701000 xent               TSX1    KQM$GETSTA
         0 000130   000172 702000 0                  TSX2    GS3

      172     8545    1   GS0:  P$=DSTA$;

   8545  0 000131   200013 236100       GS0          LDQ     DSTA$,,AUTO
         0 000132   200007 756100                    STQ     P$,,AUTO

      173     8546    1         CALL KQB$INSERTNL (KQ$STREE,XKEY,DSTA$) ALTRET(GS1);

   8546  0 000133   200013 630500                    EPPR0   DSTA$,,AUTO
         0 000134   200032 450500                    STP0    @QTN$+3,,AUTO
         0 000135   200005 236100                    LDQ     @XKEY,,AUTO
         0 000136   200031 756100                    STQ     @QTN$+2,,AUTO
         0 000137   200003 236100                    LDQ     @KQ$CG,,AUTO
         0 000140   000075 036003                    ADLQ    61,DU
         0 000141   200030 756100                    STQ     @QTN$+1,,AUTO
         0 000142   200030 630500                    EPPR0   @QTN$+1,,AUTO
         0 000143   000021 631400 xsym               EPPR1   B_VECTNIL+17
         0 000144   000000 701000 xent               TSX1    KQB$INSERTNL
         0 000145   000156 702000 0                  TSX2    GS1

      174     8547    1         IF KQ$CG.QISS THEN CALL INSQTN (DSTA$);

PL6.E3A0      #001=KQT$GETSTA File=KQT$TREES.:E05TSI                             WED 07/30/97 01:35 Page:32   
   8547  0 000146   200003 470500                    LDP0    @KQ$CG,,AUTO
         0 000147   000106 235100                    LDA     70,,PR0
         0 000150   000155 600000 0                  TZE     s:8548

   8547  0 000151   200013 631500                    EPPR1   DSTA$,,AUTO
         0 000152   200027 451500                    STP1    KEY+1,,AUTO
         0 000153   000654 701000 0                  TSX1    INSQTN
         0 000154   000000 011000                    NOP     0

      175     8548    2           DO WHILE('0'B);

   8548  0 000155   000166 710000 0                  TRA     s:8551

      176     8549    2   GS1:    CALL KQM$RELSTA (KQ$CG,P$);

   8549  0 000156   200007 630500       GS1          EPPR0   P$,,AUTO
         0 000157   200031 450500                    STP0    @QTN$+2,,AUTO
         0 000160   200003 236100                    LDQ     @KQ$CG,,AUTO
         0 000161   200030 756100                    STQ     @QTN$+1,,AUTO
         0 000162   200030 630500                    EPPR0   @QTN$+1,,AUTO
         0 000163   000020 631400 xsym               EPPR1   B_VECTNIL+16
         0 000164   000000 701000 xent               TSX1    KQM$RELSTA
         0 000165   000000 011000                    NOP     0

      177     8550    2           END;

      178     8551    1         PARM$=DSTA$;

   8551  0 000166   200013 236100                    LDQ     DSTA$,,AUTO
         0 000167   200004 470500                    LDP0    @PARM$,,AUTO
         0 000170   000000 756100                    STQ     0,,PR0

      179     8552    1         RETURN;

   8552  0 000171   000000 702200 xent               TSX2  ! X66_ARET

   8551  0 000172                       GS3          null
PL6.E3A0      #001=KQT$GETSTA File=KQT$TREES.:E05TSI                             WED 07/30/97 01:35 Page:33   
      180     8553    1   GS3:  ;
      181     8554              %UNLOCK (G=KQ$STREE.GATE);

   8555  0 000172   200003 236100                    LDQ     @KQ$CG,,AUTO
         0 000173   000075 036003                    ADLQ    61,DU
         0 000174   200030 756100                    STQ     @QTN$+1,,AUTO
         0 000175   200030 630500                    EPPR0   @QTN$+1,,AUTO
         0 000176   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 000177   000000 701000 xent               TSX1    HFC$UNLOCK
         0 000200   000000 011000                    NOP     0

      182     8557    1         DSTA$=STA$;

   8557  0 000201   200006 236100                    LDQ     STA$,,AUTO
         0 000202   200013 756100                    STQ     DSTA$,,AUTO

      183     8558    1         I=KQMR_STA#;

   8558  0 000203   000004 235007                    LDA     4,DL
         0 000204   200010 755100                    STA     I,,AUTO

      184     8559    1         CALL KQM$GETBR (KQ$CG,DSTA$,I) ALTRET(ALTRT);

   8559  0 000205   200010 630500                    EPPR0   I,,AUTO
         0 000206   200032 450500                    STP0    @QTN$+3,,AUTO
         0 000207   200013 631500                    EPPR1   DSTA$,,AUTO
         0 000210   200031 451500                    STP1    @QTN$+2,,AUTO
         0 000211   200003 236100                    LDQ     @KQ$CG,,AUTO
         0 000212   200030 756100                    STQ     @QTN$+1,,AUTO
         0 000213   200030 630500                    EPPR0   @QTN$+1,,AUTO
         0 000214   000021 631400 xsym               EPPR1   B_VECTNIL+17
         0 000215   000000 701000 xent               TSX1    KQM$GETBR
         0 000216   000477 702000 0                  TSX2    ALTRT

      185     8560              %LOCK (G=KQ$STREE.GATE);

   8561  0 000217   200003 236100                    LDQ     @KQ$CG,,AUTO
PL6.E3A0      #001=KQT$GETSTA File=KQT$TREES.:E05TSI                             WED 07/30/97 01:35 Page:34   
         0 000220   000075 036003                    ADLQ    61,DU
         0 000221   200030 756100                    STQ     @QTN$+1,,AUTO
         0 000222   200030 630500                    EPPR0   @QTN$+1,,AUTO
         0 000223   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 000224   000000 701000 xent               TSX1    HFC$LOCK
         0 000225   000000 011000                    NOP     0

      186     8563    1         GOTO GS0;

   8563  0 000226   000131 710000 0                  TRA     GS0

      187     8564        /**/
      188     8565        /*F* NAME:         KQT$MAKESTA
      189     8566             PURPOSE:      To build and insert a station block
      190     8567             CALL:         KQT$MAKESTA (KQ$CG,STA$,KEY)
      191     8568             DESCRIPTION:  Like KQT$GETSTA but there is no station on
      192     8569                           whose behalf to post a delayed memory request.
      193     8570                           Thus if no memory is instantly available, we
      194     8571                           ALTRET.
      195     8572        */
      196     8573    1   KQT$MAKESTA: ENTRY (KQ$CG,PARM$,XKEY) ALTRET;

   8573  0 000227   000000 700200 xent  KQT$MAKESTA  TSX0  ! X66_AUTO_3
         0 000230   000034 000003                    ZERO    28,3

      197     8574        /**/
      198     8575    1         CALL KQM$GETSTA (KQ$CG,DSTA$,I) ALTRET(GSX);

   8575  0 000231   200010 630500                    EPPR0   I,,AUTO
         0 000232   200032 450500                    STP0    @QTN$+3,,AUTO
         0 000233   200013 631500                    EPPR1   DSTA$,,AUTO
         0 000234   200031 451500                    STP1    @QTN$+2,,AUTO
         0 000235   200003 236100                    LDQ     @KQ$CG,,AUTO
         0 000236   200030 756100                    STQ     @QTN$+1,,AUTO
         0 000237   200030 630500                    EPPR0   @QTN$+1,,AUTO
         0 000240   000021 631400 xsym               EPPR1   B_VECTNIL+17
         0 000241   000000 701000 xent               TSX1    KQM$GETSTA
PL6.E3A0      #001=KQT$GETSTA File=KQT$TREES.:E05TSI                             WED 07/30/97 01:35 Page:35   
         0 000242   000017 702000 0                  TSX2    GSX

      199     8576    1         GOTO GS0;

   8576  0 000243   000131 710000 0                  TRA     GS0

      200     8577        /**/
      201     8578        /*F* NAME:         KQT$GETTYP
      202     8579             PURPOSE:      To build and insert a msgtype block.
      203     8580             DESCRIPTION:  Like KQT$GETSTA, but for a message type.
      204     8581        */
      205     8582    1   KQT$GETTYP: ENTRY (KQ$CG,PARM$,XKEY) ALTRET;

   8582  0 000244   000000 700200 xent  KQT$GETTYP   TSX0  ! X66_AUTO_3
         0 000245   000034 000003                    ZERO    28,3

      206     8583        /**/
      207     8584    1         STA$=PARM$;

   8584  0 000246   200004 470500                    LDP0    @PARM$,,AUTO
         0 000247   000000 236100                    LDQ     0,,PR0
         0 000250   200006 756100                    STQ     STA$,,AUTO

      208     8585    1         IF STA$->KQ$STA.TERM THEN

   8585  0 000251   200006 471500                    LDP1    STA$,,AUTO
         0 000252   100020 236100                    LDQ     16,,PR1
         0 000253   040000 316003                    CANQ    16384,DU
         0 000254   000363 600000 0                  TZE     s:8620

      209     8586    2           DO INHIBIT;

      210     8587    2           I=STA$->KQ$STA.MREQ;

   8587  0 000255   100020 236300                    LDQ   ! 16,,PR1
         0 000256   000011 736200                    QLS   ! 9
         0 000257   000033 732200                    QRS   ! 27
PL6.E3A0      #001=KQT$GETSTA File=KQT$TREES.:E05TSI                             WED 07/30/97 01:35 Page:36   
         0 000260   200010 756300                    STQ   ! I,,AUTO

      211     8588    2           IF I = KQMR_TYP# THEN

   8588  0 000261   000005 116207                    CMPQ  ! 5,DL
         0 000262   000273 601200 0                  TNZ   ! s:8596

      212     8589    3             DO;

   8587  0 000263                       GTX          null
      213     8590    3   GTX:      ;
      214     8591                  %UNLOCK (G=KQ$TTREE.GATE);

   8592  0 000263   200003 236300                    LDQ   ! @KQ$CG,,AUTO
         0 000264   000067 036203                    ADLQ  ! 55,DU
         0 000265   200030 756300                    STQ   ! @QTN$+1,,AUTO
         0 000266   200030 630700                    EPPR0 ! @QTN$+1,,AUTO
         0 000267   000017 631600 xsym               EPPR1 ! B_VECTNIL+15
         0 000270   000000 701200 xent               TSX1  ! HFC$UNLOCK
         0 000271   000000 011200                    NOP   ! 0

      215     8594    3             ALTRETURN;

   8594  0 000272   000000 702200 xent               TSX2  ! X66_AALT

      216     8595    3             END;
      217     8596    2           IF I = -KQMR_TYP# THEN

   8596  0 000273   000001 116200 1                  CMPQ  ! 1
         0 000274   000307 601200 0                  TNZ   ! s:8605

      218     8597    3             DO;

      219     8598    3             DTYP$=STA$->KQ$STA.MREQ$;

   8598  0 000275   100024 236300                    LDQ   ! 20,,PR1
         0 000276   200012 756300                    STQ   ! MTYP$,,AUTO
PL6.E3A0      #001=KQT$GETSTA File=KQT$TREES.:E05TSI                             WED 07/30/97 01:35 Page:37   

      220     8599    3             STA$->KQ$STA.MREQ=0;

   8599  0 000277   000000 236203                    LDQ   ! 0,DU
         0 000300   100020 552320                    STBQ  ! 16,'20'O,PR1

      221     8600    3             PARM$=DTYP$;

   8600  0 000301   200012 236300                    LDQ   ! MTYP$,,AUTO
         0 000302   000000 756300                    STQ   ! 0,,PR0

      222     8601    3             IF DTYP$ = ADDR(NIL) THEN GOTO GTX;

   8601  0 000303   200012 236300                    LDQ   ! MTYP$,,AUTO
         0 000304   000001 116200 xsym               CMPQ  ! B_VECTNIL+1
         0 000305   000263 600200 0                  TZE   ! GTX

      223     8602    3             END;

   8602  0 000306   000362 710200 0                  TRA   ! s:8618

      224     8603    2           ELSE
      225     8604    3             DO;

      226     8605    3             CALL KQM$GETMTYP (KQ$CG,DTYP$,I) ALTRET(GT00);

   8605  0 000307   200010 633700                    EPPR3 ! I,,AUTO
         0 000310   200032 453700                    STP3  ! @QTN$+3,,AUTO
         0 000311   200012 634700                    EPPR4 ! MTYP$,,AUTO
         0 000312   200031 454700                    STP4  ! @QTN$+2,,AUTO
         0 000313   200003 236300                    LDQ   ! @KQ$CG,,AUTO
         0 000314   200030 756300                    STQ   ! @QTN$+1,,AUTO
         0 000315   200030 630700                    EPPR0 ! @QTN$+1,,AUTO
         0 000316   000021 631600 xsym               EPPR1 ! B_VECTNIL+17
         0 000317   000000 701200 xent               TSX1  ! KQM$GETMTYP
         0 000320   000322 702200 0                  TSX2  ! GT00

PL6.E3A0      #001=KQT$GETSTA File=KQT$TREES.:E05TSI                             WED 07/30/97 01:35 Page:38   
      227     8606    3             GOTO GT0;

   8606  0 000321   000375 710200 0                  TRA   ! GT0

      228     8607    3   GT00:     IF STA$->KQ$STA.MREQ ~= 0 THEN GOTO GTX;

   8607  0 000322   200006 470700       GT00         LDP0  ! STA$,,AUTO
         0 000323   000020 236300                    LDQ   ! 16,,PR0
         0 000324   000777 316203                    CANQ  ! 511,DU
         0 000325   000263 601200 0                  TNZ   ! GTX

      229     8608                  %UNLOCK (G=KQ$TTREE.GATE);

   8609  0 000326   200003 236300                    LDQ   ! @KQ$CG,,AUTO
         0 000327   000067 036203                    ADLQ  ! 55,DU
         0 000330   200030 756300                    STQ   ! @QTN$+1,,AUTO
         0 000331   200030 630700                    EPPR0 ! @QTN$+1,,AUTO
         0 000332   000017 631600 xsym               EPPR1 ! B_VECTNIL+15
         0 000333   000000 701200 xent               TSX1  ! HFC$UNLOCK
         0 000334   000000 011200                    NOP   ! 0

      230     8611    3             DTYP$=STA$;

   8611  0 000335   200006 236300                    LDQ   ! STA$,,AUTO
         0 000336   200012 756300                    STQ   ! MTYP$,,AUTO

      231     8612    3             I=KQMR_TYP#;

   8612  0 000337   000005 235207                    LDA   ! 5,DL
         0 000340   200010 755300                    STA   ! I,,AUTO

      232     8613    3             CALL KQM$GETBD (KQ$CG,DTYP$,I) ALTRET(ALTRT);

   8613  0 000341   200010 630700                    EPPR0 ! I,,AUTO
         0 000342   200032 450700                    STP0  ! @QTN$+3,,AUTO
         0 000343   200012 631700                    EPPR1 ! MTYP$,,AUTO
         0 000344   200031 451700                    STP1  ! @QTN$+2,,AUTO
PL6.E3A0      #001=KQT$GETSTA File=KQT$TREES.:E05TSI                             WED 07/30/97 01:35 Page:39   
         0 000345   200003 236300                    LDQ   ! @KQ$CG,,AUTO
         0 000346   200030 756300                    STQ   ! @QTN$+1,,AUTO
         0 000347   200030 630700                    EPPR0 ! @QTN$+1,,AUTO
         0 000350   000021 631600 xsym               EPPR1 ! B_VECTNIL+17
         0 000351   000000 701200 xent               TSX1  ! KQM$GETBD
         0 000352   000477 702200 0                  TSX2  ! ALTRT

      233     8614                  %LOCK (G=KQ$TTREE.GATE);

   8615  0 000353   200003 236300                    LDQ   ! @KQ$CG,,AUTO
         0 000354   000067 036203                    ADLQ  ! 55,DU
         0 000355   200030 756300                    STQ   ! @QTN$+1,,AUTO
         0 000356   200030 630700                    EPPR0 ! @QTN$+1,,AUTO
         0 000357   000017 631600 xsym               EPPR1 ! B_VECTNIL+15
         0 000360   000000 701200 xent               TSX1  ! HFC$LOCK
         0 000361   000000 011200                    NOP   ! 0

      234     8617    3             END;

      235     8618    2           END;

   8618  0 000362   000375 710000 0                  TRA     GT0

      236     8619    1         ELSE
      237     8620    1          CALL KQM$GETMTYP (KQ$CG,DTYP$,I) ALTRET(GT3);

   8620  0 000363   200010 633500                    EPPR3   I,,AUTO
         0 000364   200032 453500                    STP3    @QTN$+3,,AUTO
         0 000365   200012 634500                    EPPR4   MTYP$,,AUTO
         0 000366   200031 454500                    STP4    @QTN$+2,,AUTO
         0 000367   200003 236100                    LDQ     @KQ$CG,,AUTO
         0 000370   200030 756100                    STQ     @QTN$+1,,AUTO
         0 000371   200030 630500                    EPPR0   @QTN$+1,,AUTO
         0 000372   000021 631400 xsym               EPPR1   B_VECTNIL+17
         0 000373   000000 701000 xent               TSX1    KQM$GETMTYP
         0 000374   000436 702000 0                  TSX2    GT3

PL6.E3A0      #001=KQT$GETSTA File=KQT$TREES.:E05TSI                             WED 07/30/97 01:35 Page:40   
      238     8621    1   GT0:  P$=DTYP$;

   8621  0 000375   200012 236100       GT0          LDQ     MTYP$,,AUTO
         0 000376   200007 756100                    STQ     P$,,AUTO

      239     8622    1         CALL KQB$INSERTNL (KQ$TTREE,XKEY,DTYP$) ALTRET(GT1);

   8622  0 000377   200012 630500                    EPPR0   MTYP$,,AUTO
         0 000400   200032 450500                    STP0    @QTN$+3,,AUTO
         0 000401   200005 236100                    LDQ     @XKEY,,AUTO
         0 000402   200031 756100                    STQ     @QTN$+2,,AUTO
         0 000403   200003 236100                    LDQ     @KQ$CG,,AUTO
         0 000404   000067 036003                    ADLQ    55,DU
         0 000405   200030 756100                    STQ     @QTN$+1,,AUTO
         0 000406   200030 630500                    EPPR0   @QTN$+1,,AUTO
         0 000407   000021 631400 xsym               EPPR1   B_VECTNIL+17
         0 000410   000000 701000 xent               TSX1    KQB$INSERTNL
         0 000411   000422 702000 0                  TSX2    GT1

      240     8623    1         IF KQ$CG.QISS = '0'B THEN CALL INSQTN (DTYP$);

   8623  0 000412   200003 470500                    LDP0    @KQ$CG,,AUTO
         0 000413   000106 235100                    LDA     70,,PR0
         0 000414   000421 601000 0                  TNZ     s:8624

   8623  0 000415   200012 631500                    EPPR1   MTYP$,,AUTO
         0 000416   200027 451500                    STP1    KEY+1,,AUTO
         0 000417   000654 701000 0                  TSX1    INSQTN
         0 000420   000000 011000                    NOP     0

      241     8624    2           DO WHILE('0'B);

   8624  0 000421   000432 710000 0                  TRA     s:8627

      242     8625    2   GT1:    CALL KQM$RELMTYP (KQ$CG,P$);

   8625  0 000422   200007 630500       GT1          EPPR0   P$,,AUTO
PL6.E3A0      #001=KQT$GETSTA File=KQT$TREES.:E05TSI                             WED 07/30/97 01:35 Page:41   
         0 000423   200031 450500                    STP0    @QTN$+2,,AUTO
         0 000424   200003 236100                    LDQ     @KQ$CG,,AUTO
         0 000425   200030 756100                    STQ     @QTN$+1,,AUTO
         0 000426   200030 630500                    EPPR0   @QTN$+1,,AUTO
         0 000427   000020 631400 xsym               EPPR1   B_VECTNIL+16
         0 000430   000000 701000 xent               TSX1    KQM$RELMTYP
         0 000431   000000 011000                    NOP     0

      243     8626    2           END;

      244     8627    1         PARM$=DTYP$;

   8627  0 000432   200012 236100                    LDQ     MTYP$,,AUTO
         0 000433   200004 470500                    LDP0    @PARM$,,AUTO
         0 000434   000000 756100                    STQ     0,,PR0

      245     8628    1         RETURN;

   8628  0 000435   000000 702200 xent               TSX2  ! X66_ARET

   8627  0 000436                       GT3          null
      246     8629    1   GT3:  ;
      247     8630    1         IF STA$->KQ$STA.USR# = 0 THEN GOTO GT00;

   8630  0 000436   200006 470500                    LDP0    STA$,,AUTO
         0 000437   000020 236100                    LDQ     16,,PR0
         0 000440   777000 316007                    CANQ    -512,DL
         0 000441   000322 600000 0                  TZE     GT00

      248     8631              %UNLOCK (G=KQ$TTREE.GATE);

   8632  0 000442   200003 236100                    LDQ     @KQ$CG,,AUTO
         0 000443   000067 036003                    ADLQ    55,DU
         0 000444   200030 756100                    STQ     @QTN$+1,,AUTO
         0 000445   200030 630500                    EPPR0   @QTN$+1,,AUTO
         0 000446   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 000447   000000 701000 xent               TSX1    HFC$UNLOCK
PL6.E3A0      #001=KQT$GETSTA File=KQT$TREES.:E05TSI                             WED 07/30/97 01:35 Page:42   
         0 000450   000000 011000                    NOP     0

      249     8634    1         DTYP$=STA$;

   8634  0 000451   200006 236100                    LDQ     STA$,,AUTO
         0 000452   200012 756100                    STQ     MTYP$,,AUTO

      250     8635    1         I=KQMR_TYP#;

   8635  0 000453   000005 235007                    LDA     5,DL
         0 000454   200010 755100                    STA     I,,AUTO

      251     8636    1         CALL KQM$GETBR (KQ$CG,DTYP$,I) ALTRET(ALTRT);

   8636  0 000455   200010 630500                    EPPR0   I,,AUTO
         0 000456   200032 450500                    STP0    @QTN$+3,,AUTO
         0 000457   200012 631500                    EPPR1   MTYP$,,AUTO
         0 000460   200031 451500                    STP1    @QTN$+2,,AUTO
         0 000461   200003 236100                    LDQ     @KQ$CG,,AUTO
         0 000462   200030 756100                    STQ     @QTN$+1,,AUTO
         0 000463   200030 630500                    EPPR0   @QTN$+1,,AUTO
         0 000464   000021 631400 xsym               EPPR1   B_VECTNIL+17
         0 000465   000000 701000 xent               TSX1    KQM$GETBR
         0 000466   000477 702000 0                  TSX2    ALTRT

      252     8637              %LOCK (G=KQ$TTREE.GATE);

   8638  0 000467   200003 236100                    LDQ     @KQ$CG,,AUTO
         0 000470   000067 036003                    ADLQ    55,DU
         0 000471   200030 756100                    STQ     @QTN$+1,,AUTO
         0 000472   200030 630500                    EPPR0   @QTN$+1,,AUTO
         0 000473   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 000474   000000 701000 xent               TSX1    HFC$LOCK
         0 000475   000000 011000                    NOP     0

      253     8640    1         GOTO GT0;

PL6.E3A0      #001=KQT$GETSTA File=KQT$TREES.:E05TSI                             WED 07/30/97 01:35 Page:43   
   8640  0 000476   000375 710000 0                  TRA     GT0

   8635  0 000477                       ALTRT        null
      254     8641    1   ALTRT:;
      255     8642    1         ALTRETURN;

   8642  0 000477   000000 702200 xent               TSX2  ! X66_AALT

      256     8643        /**/
      257     8644        /*F* NAME:         KQT$DELTYP
      258     8645             PURPOSE:      To delete a message type
      259     8646             DESCRIPTION:  Called to delete a T-tree node.
      260     8647
      261     8648                           If the Q-tree is the T-tree, then KQT$DELMLH
      262     8649                           must already have been called to delete the
      263     8650                           messages hanging off it.  Also, we will at
      264     8651                           this time remove pending Q-reads against this
      265     8652                           node.  Thus when the caller calls KQT$VALREADS,
      266     8653                           all such readers will get errors.
      267     8654
      268     8655                           The T-tree is locked upon entry, and is not
      269     8656                           unlocked.
      270     8657        */
      271     8658    1   KQT$DELTYP: ENTRY (KQ$CG,PARM$) ALTRET; /* !!Doesn't ALTRET!! */

   8658  0 000500   000000 700200 xent  KQT$DELTYP   TSX0  ! X66_AUTO_3
         0 000501   000034 000003                    ZERO    28,3

      272     8659        /**/
      273     8660    1         MTYP$=PARM$;

   8660  0 000502   200004 470500                    LDP0    @PARM$,,AUTO
         0 000503   000000 236100                    LDQ     0,,PR0
         0 000504   200012 756100                    STQ     MTYP$,,AUTO

      274     8661    1         CALL DELTYP;

PL6.E3A0      #001=KQT$GETSTA File=KQT$TREES.:E05TSI                             WED 07/30/97 01:35 Page:44   
   8661  0 000505   001144 701000 0                  TSX1    DELTYP
         0 000506   000000 011000                    NOP     0

      275     8662    1         RETURN;

   8662  0 000507   000000 702200 xent               TSX2  ! X66_ARET

      276     8663        /**/
      277     8664        /*F* NAME:         KQT$DELSTA
      278     8665             PURPOSE:      To delete a station
      279     8666             DESCRIPTION:  Called when a station is disconnecting, or from
      280     8667                           KQC$CTL for the M$CGCTL DELETE function.  The
      281     8668                           following must already have been done:
      282     8669
      283     8670                           - messages written to the station deleted if
      284     8671                             desired (not desired if SMD=1, and this is a
      285     8672                             disconnect).
      286     8673                           - the current READ/WRITE/GET/PUT must all have
      287     8674                             been run down.
      288     8675                           - the station must have been removed from
      289     8676                             the DCB chain.
      290     8677
      291     8678                           The station will be left where it is if any of
      292     8679                           the following are true:
      293     8680
      294     8681                           - KQ$STA.MLH is not empty
      295     8682                           - KQ$QTN.MLH is not empty (if the Q-tree is the
      296     8683                             S-tree).
      297     8684                           - KQ$STA.PERM is set
      298     8685                           - KQ$STA.SPECIAL is set
      299     8686                           - KQ$STA.LOCKCNT ~= 0
      300     8687
      301     8688                           The S-tree must be locked on entry, and is not
      302     8689                           unlocked.
      303     8690        */
      304     8691    1   KQT$DELSTA: ENTRY (KQ$CG,PARM$) ALTRET; /* !!Doesn't ALTRET!! */

PL6.E3A0      #001=KQT$GETSTA File=KQT$TREES.:E05TSI                             WED 07/30/97 01:35 Page:45   
   8691  0 000510   000000 700200 xent  KQT$DELSTA   TSX0  ! X66_AUTO_3
         0 000511   000034 000003                    ZERO    28,3

      305     8692        /**/
      306     8693    1         STA$=PARM$;

   8693  0 000512   200004 470500                    LDP0    @PARM$,,AUTO
         0 000513   000000 236100                    LDQ     0,,PR0
         0 000514   200006 756100                    STQ     STA$,,AUTO

      307     8694    1         CALL DELSTA;

   8694  0 000515   001224 701000 0                  TSX1    DELSTA
         0 000516   000000 011000                    NOP     0

      308     8695    1         RETURN;

   8695  0 000517   000000 702200 xent               TSX2  ! X66_ARET

      309     8696        /**/
      310     8697        /*F* NAME:         KQT$MOVQTN
      311     8698             PURPOSE:      To place a Q-node in its spot in the prio-ordered
      312     8699                           list.
      313     8700        */
      314     8701    1   KQT$MOVQTN: ENTRY (KQ$CG,PARM$) ALTRET; /* !!Doesn't ALTRET!! */

   8701  0 000520   000000 700200 xent  KQT$MOVQTN   TSX0  ! X66_AUTO_3
         0 000521   000034 000003                    ZERO    28,3

      315     8702        /**/
      316     8703    1         CALL REMQTN (PARM$);

   8703  0 000522   200004 236100                    LDQ     @PARM$,,AUTO
         0 000523   200027 756100                    STQ     KEY+1,,AUTO
         0 000524   000732 701000 0                  TSX1    REMQTN
         0 000525   000000 011000                    NOP     0

PL6.E3A0      #001=KQT$GETSTA File=KQT$TREES.:E05TSI                             WED 07/30/97 01:35 Page:46   
      317     8704    1         CALL INSQTN (PARM$);

   8704  0 000526   200004 236100                    LDQ     @PARM$,,AUTO
         0 000527   200027 756100                    STQ     KEY+1,,AUTO
         0 000530   000654 701000 0                  TSX1    INSQTN
         0 000531   000000 011000                    NOP     0

      318     8705    1         RETURN;

   8705  0 000532   000000 702200 xent               TSX2  ! X66_ARET

      319     8706        %EJECT;
PL6.E3A0      #001=KQT$GETSTA File=KQT$TREES.:E05TSI                             WED 07/30/97 01:35 Page:47   
      320     8707        /**/
      321     8708        /*F* NAME:         KQT$VALREADS
      322     8709             PURPOSE:      To validate all outstanding reads which may no
      323     8710                           longer be valid due to a station's deactivation
      324     8711                           or disconnection, or a msg type being deleted.
      325     8712             DESCRIPTION:  If the comgroup does not allow read from absent
      326     8713                           station, then a reader specifying specific
      327     8714                           station gets an error if the station is not there
      328     8715                           or deactivated.  If we initiate such a read and
      329     8716                           leave it pending, then when a station changes
      330     8717                           state to 'not there', we must check all people
      331     8718                           who are trying to read it.  Currently this can
      332     8719                           only be DCBs.
      333     8720
      334     8721                           Must also do this when the AU deletes a Q-tree
      335     8722                           node (be it station or msg type).
      336     8723        */
      337     8724    1   KQT$VALREADS: ENTRY (KQ$CG) ALTRET; /* !!Doesn't ALTRET!! */

   8724  0 000533   000000 700200 xent  KQT$VALREADS TSX0  ! X66_AUTO_3
         0 000534   000034 000003                    ZERO    28,3

      338     8725        /**/
      339     8726    1         CALL VALREADS;

   8726  0 000535   001067 701000 0                  TSX1    VALREADS
         0 000536   000000 011000                    NOP     0

      340     8727    1         RETURN;

   8727  0 000537   000000 702200 xent               TSX2  ! X66_ARET

      341     8728        /**/
      342     8729        /*F* NAME:         KQT$LBT
      343     8730             PURPOSE:      To lock the T- and S-trees
      344     8731             DESCRIPTION:  KQR$READ needs to lock the Q-tree, then the
      345     8732                           other tree, in that order.  Hence when anyone
PL6.E3A0      #001=KQT$GETSTA File=KQT$TREES.:E05TSI                             WED 07/30/97 01:35 Page:48   
      346     8733                           locks both trees, it must be in that order.
      347     8734                           This routine does that.
      348     8735        */
      349     8736    1   KQT$LBT: ENTRY (KQ$CG) ALTRET; /* !!Doesn't ALTRET!! */

   8736  0 000540   000000 700200 xent  KQT$LBT      TSX0  ! X66_AUTO_3
         0 000541   000034 000003                    ZERO    28,3

      350     8737        /**/
      351     8738    1         CALL LOCK_BOTH;

   8738  0 000542   000761 701000 0                  TSX1    LOCK_BOTH
         0 000543   000000 011000                    NOP     0

      352     8739    1         RETURN;

   8739  0 000544   000000 702200 xent               TSX2  ! X66_ARET

      353     8740        /*F* NAME:         KQT$UBT
      354     8741             PURPOSE:      To unlock the T- and S-trees
      355     8742        */
      356     8743    1   KQT$UBT: ENTRY (KQ$CG) ALTRET; /* !!Doesn't ALTRET!! */

   8743  0 000545   000000 700200 xent  KQT$UBT      TSX0  ! X66_AUTO_3
         0 000546   000034 000003                    ZERO    28,3

      357     8744        /**/
      358     8745    1         CALL UNLOCK_BOTH;

   8745  0 000547   001024 701000 0                  TSX1    UNLOCK_BOTH
         0 000550   000000 011000                    NOP     0

      359     8746    1         RETURN;

   8746  0 000551   000000 702200 xent               TSX2  ! X66_ARET

      360     8747        /**/
PL6.E3A0      #001=KQT$GETSTA File=KQT$TREES.:E05TSI                             WED 07/30/97 01:35 Page:49   
      361     8748        /*F* NAME:         KQT$RECOVER
      362     8749             PURPOSE:      To rebuild the T- and S-trees after a crash
      363     8750             DESCRIPTION:  Called when a comgroup is being opened after
      364     8751                           being closed by RECOVER.  The trees are rebuilt
      365     8752                           because KQB$TREE has large windows in which a
      366     8753                           SCREECH can leave the trees blotto.
      367     8754                           SNAPs and ALTRETs if a tree is blotto.
      368     8755        */
      369     8756    1   KQT$RECOVER: ENTRY (KQ$CG) ALTRET;

   8756  0 000552   000000 700200 xent  KQT$RECOVER  TSX0  ! X66_AUTO_3
         0 000553   000034 000003                    ZERO    28,3

      370     8757        /**/
      371     8758    1         CALL TBLD (KQ$CG.STREE,KQ_ICG.STREE) ALTRET(BADTREE);

   8758  0 000554   000002 236000 1                  LDQ     2
         0 000555   200024 756100                    STQ     @KQ$THDR+1,,AUTO
         0 000556   200003 236100                    LDQ     @KQ$CG,,AUTO
         0 000557   000075 036003                    ADLQ    61,DU
         0 000560   200023 756100                    STQ     RBLK$+3,,AUTO
         0 000561   000576 701000 0                  TSX1    TBLD
         0 000562   000573 702000 0                  TSX2    BADTREE

      372     8759    1         CALL TBLD (KQ$CG.TTREE,KQ_ICG.TTREE) ALTRET(BADTREE);

   8759  0 000563   000003 236000 1                  LDQ     3
         0 000564   200024 756100                    STQ     @KQ$THDR+1,,AUTO
         0 000565   200003 236100                    LDQ     @KQ$CG,,AUTO
         0 000566   000067 036003                    ADLQ    55,DU
         0 000567   200023 756100                    STQ     RBLK$+3,,AUTO
         0 000570   000576 701000 0                  TSX1    TBLD
         0 000571   000573 702000 0                  TSX2    BADTREE

      373     8760    1         RETURN;

   8760  0 000572   000000 702200 xent               TSX2  ! X66_ARET
PL6.E3A0      #001=KQT$GETSTA File=KQT$TREES.:E05TSI                             WED 07/30/97 01:35 Page:50   

   8759  0 000573                       BADTREE      null
      374     8761    1   BADTREE:;
      375     8762    1         CALL SC_CGCRCT;

   8762  0 000573   000000 713400 xsym               CLIMB   SC_CGCRCT
         0 000574   000000 600000 xsid               climb   nvectors=         0

      376     8763        /*S* SCREECH_CODE: KQT-S$CGCRCT
      377     8764             TYPE:         SNAP
      378     8765             MESSAGE:      Cannot recover comgroup - bad tree
      379     8766             REMARKS:      This SNAP occurs when a comgroup is being opened
      380     8767                           after having been closed by RECOVER.  One of the
      381     8768                           comgroup's trees has a duplicate key and thus
      382     8769                           cannot be reliably rebuilt.  The snap is for
      383     8770                           information only (to provide a picture of the
      384     8771                           comgroup); the user will get an error and the
      385     8772                           open will not be performed. */
      386     8773    1         ALTRETURN;

   8773  0 000575   000000 702200 xent               TSX2  ! X66_AALT

      387     8774        %EJECT;
PL6.E3A0      #001=KQT$GETSTA File=KQT$TREES.:E05TSI                             WED 07/30/97 01:35 Page:51   
      388     8775        /**/
      389     8776        /*********************************************************************************
      390     8777        *                                                                                *
      391     8778        *   SSS   U   U  BBBB   RRRR    OOO   U   U  TTTTT   III   N   N  EEEEE   SSS    *
      392     8779        *  S   S  U   U  B   B  R   R  O O O  U   U    T      I    N   N  E      S   S   *
      393     8780        *  S      U   U  B   B  R   R  O O O  U   U    T      I    NN  N  E      S       *
      394     8781        *   SSS   U   U  BBBB   RRRR   O  OO  U   U    T      I    N N N  EEEE    SSS    *
      395     8782        *      S  U   U  B   B  R R    O   O  U   U    T      I    N  NN  E          S   *
      396     8783        *  S   S  U   U  B   B  R  R   O   O  U   U    T      I    N   N  E      S   S   *
      397     8784        *   SSS    UUU   BBBB   R   R   OOO    UUU     T     III   N   N  EEEEE   SSS    *
      398     8785        *                                                                                *
      399     8786        *********************************************************************************/
      400     8787
      401     8788        /****************************************************************
      402     8789        *****************************************************************/
      403     8790        /*D* NAME:         TBLD
      404     8791             PURPOSE:      To re-build a tree
      405     8792             DESCRIPTION:  Passed the old header, and an inited header
      406     8793                           to start it fresh with.
      407     8794                           Depends on LINKS being used in the BTNs, since
      408     8795                           it uses the linear list to rebuild the tree
      409     8796                           structure.
      410     8797                           ALTRETs if the linear list is circular.
      411     8798        */
      412     8799    1   TBLD: PROC (KQ$THDR,KQ_THDR) ALTRET;

   8799  0 000576   200022 741300       TBLD         STX1  ! RBLK$+2,,AUTO

      413     8800        /**/
      414     8801        %KQ_THDR (FPTN=KQ$THDR,STCLASS="");
      415     8839        %KQ_THDR (FPTN=KQ_THDR,STCLASS="");
      416     8877    2   DCL NODE$ PTR;
      417     8878    2   DCL KEY CHAR(8);
      418     8879        /**/
      419     8880    2         NODE$=KQ$THDR.HEAD$;

   8880  0 000577   200023 470500                    LDP0    @KQ$THDR,,AUTO
PL6.E3A0      #001=KQT$GETSTA File=KQT$TREES.:E05TSI                             WED 07/30/97 01:35 Page:52   
         0 000600   000004 236100                    LDQ     4,,PR0
         0 000601   200025 756100                    STQ     NODE$,,AUTO

      420     8881    2         KQ$THDR=KQ_THDR;

   8881  0 000602   200024 471500                    LDP1    @KQ_THDR,,AUTO
         0 000603   000100 100500                    MLR     fill='000'O
         0 000604   100000 000030                    ADSC9   0,,PR1                   cn=0,n=24
         0 000605   000000 000030                    ADSC9   0,,PR0                   cn=0,n=24

      421     8882              %LOCK (G=KQ$THDR.GATE);

   8883  0 000606   200023 630500                    EPPR0   @KQ$THDR,,AUTO
         0 000607   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 000610   000000 701000 xent               TSX1    HFC$LOCK
         0 000611   000000 011000                    NOP     0

      422     8885    3           DO WHILE (NODE$ ~= ADDR(NIL));

   8885  0 000612   000635 710000 0                  TRA     s:8890

      423     8886    3           P$=NODE$->KQ$BTN.FLINK$;

   8886  0 000613   200025 470500                    LDP0    NODE$,,AUTO
         0 000614   000004 236100                    LDQ     4,,PR0
         0 000615   200007 756100                    STQ     P$,,AUTO

      424     8887    3           KEY=NODE$->KQ$BTN.KEY;

   8887  0 000616   040100 100500                    MLR     fill='040'O
         0 000617   000005 000010                    ADSC9   5,,PR0                   cn=0,n=8
         0 000620   200026 000010                    ADSC9   KEY,,AUTO                cn=0,n=8

      425     8888    3           CALL KQB$INSERTNL (KQ$THDR,KEY,NODE$) ALTRET(ALTRT);

   8888  0 000621   200025 631500                    EPPR1   NODE$,,AUTO
         0 000622   200032 451500                    STP1    @QTN$+3,,AUTO
PL6.E3A0      #001=KQT$GETSTA File=KQT$TREES.:E05TSI                             WED 07/30/97 01:35 Page:53   
         0 000623   200026 633500                    EPPR3   KEY,,AUTO
         0 000624   200031 453500                    STP3    @QTN$+2,,AUTO
         0 000625   200023 236100                    LDQ     @KQ$THDR,,AUTO
         0 000626   200030 756100                    STQ     @QTN$+1,,AUTO
         0 000627   200030 630500                    EPPR0   @QTN$+1,,AUTO
         0 000630   000021 631400 xsym               EPPR1   B_VECTNIL+17
         0 000631   000000 701000 xent               TSX1    KQB$INSERTNL
         0 000632   000646 702000 0                  TSX2    ALTRT

      426     8889    3           NODE$=P$;

   8889  0 000633   200007 236100                    LDQ     P$,,AUTO
         0 000634   200025 756100                    STQ     NODE$,,AUTO

      427     8890    3           END;

   8890  0 000635   200025 236100                    LDQ     NODE$,,AUTO
         0 000636   000001 116000 xsym               CMPQ    B_VECTNIL+1
         0 000637   000613 601000 0                  TNZ     s:8886

      428     8891              %UNLOCK (G=KQ$THDR.GATE);

   8892  0 000640   200023 630500                    EPPR0   @KQ$THDR,,AUTO
         0 000641   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 000642   000000 701000 xent               TSX1    HFC$UNLOCK
         0 000643   000000 011000                    NOP     0

      429     8894    2         RETURN;

   8894  0 000644   200022 221300                    LDX1  ! RBLK$+2,,AUTO
         0 000645   000001 702211                    TSX2  ! 1,X1

   8886  0 000646                       ALTRT        null
      430     8895    2   ALTRT:;
      431     8896              %UNLOCK (G=KQ$THDR.GATE);

   8897  0 000646   200023 630500                    EPPR0   @KQ$THDR,,AUTO
PL6.E3A0      #001=KQT$GETSTA File=KQT$TREES.:E05TSI                             WED 07/30/97 01:35 Page:54   
         0 000647   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 000650   000000 701000 xent               TSX1    HFC$UNLOCK
         0 000651   000000 011000                    NOP     0

      432     8899    2         ALTRETURN;

   8899  0 000652   200022 221300                    LDX1  ! RBLK$+2,,AUTO
         0 000653   000000 702211                    TSX2  ! 0,X1

      433     8900    2   END TBLD;
      434     8901        /****************************************************************
      435     8902        *****************************************************************/
      436     8903        /*D* NAME:         INSQTN
      437     8904             PURPOSE:      To enter a Q-tree node
      438     8905        */
      439     8906    1   INSQTN: PROC (QTN$);

   8906  0 000654   200026 741300       INSQTN       STX1  ! KEY,,AUTO

      440     8907        /**/
      441     8908    2   DCL QTN$ PTR;
      442     8909        /**/
      443     8910    2         P$=ADDR(KQ$CG.QUEUE.PLHD$);

   8910  0 000655   200003 236100                    LDQ     @KQ$CG,,AUTO
         0 000656   000061 036003                    ADLQ    49,DU
         0 000657   200007 756100                    STQ     P$,,AUTO

      444     8911    2         PP$=P$->B$$PTR;

   8911  0 000660   200007 470500                    LDP0    P$,,AUTO
         0 000661   000000 236100                    LDQ     0,,PR0
         0 000662   200014 756100                    STQ     PP$,,AUTO

      445     8912    3           DO WHILE (PP$ ~= ADDR(NIL));

   8912  0 000663   000717 710000 0                  TRA     s:8920
PL6.E3A0      #001=KQT$GETSTA File=KQT$TREES.:E05TSI                             WED 07/30/97 01:35 Page:55   

      446     8913    3           IF QTN$->KQ$QTN.MPRIO > PP$->KQ$QTN.MPRIO THEN

   8913  0 000664   200027 470500                    LDP0    @QTN$,,AUTO
         0 000665   000000 471500                    LDP1    0,,PR0
         0 000666   100050 236100                    LDQ     40,,PR1
         0 000667   000022 772000                    QRL     18
         0 000670   000777 376007                    ANQ     511,DL
         0 000671   200030 756100                    STQ     @QTN$+1,,AUTO
         0 000672   200014 471500                    LDP1    PP$,,AUTO
         0 000673   100050 236100                    LDQ     40,,PR1
         0 000674   000022 772000                    QRL     18
         0 000675   000777 376007                    ANQ     511,DL
         0 000676   200030 116100                    CMPQ    @QTN$+1,,AUTO
         0 000677   000721 604000 0                  TMI     INS0

      447     8914    3            GOTO INS0;
      448     8915    3           ELSE IF QTN$->KQ$QTN.MPRIO = PP$->KQ$QTN.MPRIO THEN

   8915  0 000700   000000 473500                    LDP3    0,,PR0
         0 000701   300050 236100                    LDQ     40,,PR3
         0 000702   100050 676100                    ERQ     40,,PR1
         0 000703   000777 376003                    ANQ     511,DU
         0 000704   000711 601000 0                  TNZ     s:8918

      449     8916    3             IF QTN$->KQ$QTN.STA.BTN.KEY < PP$->KQ$QTN.STA.BTN.KEY THEN

   8916  0 000705   040100 106500                    CMPC    fill='040'O
         0 000706   300005 000010                    ADSC9   5,,PR3                   cn=0,n=8
         0 000707   100005 000010                    ADSC9   5,,PR1                   cn=0,n=8
         0 000710   000721 602000 0                  TNC     INS0

      450     8917    3              GOTO INS0;
      451     8918    3           P$=ADDR(PP$->KQ$QTN.PLINK$);

   8918  0 000711   200014 236100                    LDQ     PP$,,AUTO
         0 000712   000047 036003                    ADLQ    39,DU
PL6.E3A0      #001=KQT$GETSTA File=KQT$TREES.:E05TSI                             WED 07/30/97 01:35 Page:56   
         0 000713   200007 756100                    STQ     P$,,AUTO

      452     8919    3           PP$=P$->B$$PTR;

   8919  0 000714   200007 473500                    LDP3    P$,,AUTO
         0 000715   300000 236100                    LDQ     0,,PR3
         0 000716   200014 756100                    STQ     PP$,,AUTO

      453     8920    3           END;

   8920  0 000717   000001 116000 xsym               CMPQ    B_VECTNIL+1
         0 000720   000664 601000 0                  TNZ     s:8913

   8916  0 000721                       INS0         null
      454     8921    2   INS0: ;
      455     8922    3           DO INHIBIT;

      456     8923    3           QTN$->KQ$QTN.PLINK$=PP$;

   8923  0 000721   200027 470700                    LDP0  ! @QTN$,,AUTO
         0 000722   000000 471700                    LDP1  ! 0,,PR0
         0 000723   200014 236300                    LDQ   ! PP$,,AUTO
         0 000724   100047 756300                    STQ   ! 39,,PR1

      457     8924    3           P$->B$$PTR=QTN$;

   8924  0 000725   000000 236300                    LDQ   ! 0,,PR0
         0 000726   200007 471700                    LDP1  ! P$,,AUTO
         0 000727   100000 756300                    STQ   ! 0,,PR1

      458     8925    3           END;

      459     8926    2         RETURN;

   8926  0 000730   200026 221300                    LDX1  ! KEY,,AUTO
         0 000731   000001 702211                    TSX2  ! 1,X1

PL6.E3A0      #001=KQT$GETSTA File=KQT$TREES.:E05TSI                             WED 07/30/97 01:35 Page:57   
      460     8927        /**/
      461     8928        /*D* NAME:         REMQTN
      462     8929             PURPOSE:      To remove a Q-node from the prio-ordered list
      463     8930        */
      464     8931    2   REMQTN: ENTRY (QTN$);

   8931  0 000732   200026 741300       REMQTN       STX1  ! KEY,,AUTO

      465     8932        /**/
      466     8933    2         P$=ADDR(KQ$CG.QUEUE.PLHD$);

   8933  0 000733   200003 236100                    LDQ     @KQ$CG,,AUTO
         0 000734   000061 036003                    ADLQ    49,DU
         0 000735   200007 756100                    STQ     P$,,AUTO

      467     8934    2         PP$=P$->B$$PTR;

   8934  0 000736   200007 470500                    LDP0    P$,,AUTO
         0 000737   000000 236100                    LDQ     0,,PR0
         0 000740   200014 756100                    STQ     PP$,,AUTO

      468     8935    3           DO FOREVER;

      469     8936    3           IF PP$ = QTN$ THEN

   8936  0 000741   200027 470500                    LDP0    @QTN$,,AUTO
         0 000742   200014 236100                    LDQ     PP$,,AUTO
         0 000743   000000 116100                    CMPQ    0,,PR0
         0 000744   000753 601000 0                  TNZ     s:8941

      470     8937    4             DO;

      471     8938    4             P$->B$$PTR=QTN$->KQ$QTN.PLINK$;

   8938  0 000745   000000 471500                    LDP1    0,,PR0
         0 000746   100047 236100                    LDQ     39,,PR1
         0 000747   200007 473500                    LDP3    P$,,AUTO
PL6.E3A0      #001=KQT$GETSTA File=KQT$TREES.:E05TSI                             WED 07/30/97 01:35 Page:58   
         0 000750   300000 756100                    STQ     0,,PR3

      472     8939    4             RETURN;

   8939  0 000751   200026 221300                    LDX1  ! KEY,,AUTO
         0 000752   000001 702211                    TSX2  ! 1,X1

      473     8940    4             END;
      474     8941    3           P$=ADDR(PP$->KQ$QTN.PLINK$);

   8941  0 000753   000047 036003                    ADLQ    39,DU
         0 000754   200007 756100                    STQ     P$,,AUTO

      475     8942    3           PP$=P$->B$$PTR;

   8942  0 000755   200007 471500                    LDP1    P$,,AUTO
         0 000756   100000 236100                    LDQ     0,,PR1
         0 000757   200014 756100                    STQ     PP$,,AUTO

      476     8943    3           END;

   8943  0 000760   000741 710000 0                  TRA     s:8936

      477     8944    2   END INSQTN;
      478     8945        /****************************************************************
      479     8946        *****************************************************************/
      480     8947        /*D* NAME:         LOCK_BOTH
      481     8948             PURPOSE:      To lock the T- and S-trees
      482     8949        */
      483     8950    1   LOCK_BOTH: PROC;

   8950  0 000761   200024 741300       LOCK_BOTH    STX1  ! @KQ_THDR,,AUTO

      484     8951    2         IF KQ$CG.QISS THEN

   8951  0 000762   200003 470500                    LDP0    @KQ$CG,,AUTO
         0 000763   000106 235100                    LDA     70,,PR0
PL6.E3A0      #001=KQT$GETSTA File=KQT$TREES.:E05TSI                             WED 07/30/97 01:35 Page:59   
         0 000764   001004 600000 0                  TZE     s:8963

      485     8952    3           DO;

      486     8953                %LOCK (G=KQ$STREE.GATE);

   8954  0 000765   200003 236100                    LDQ     @KQ$CG,,AUTO
         0 000766   000075 036003                    ADLQ    61,DU
         0 000767   200030 756100                    STQ     @QTN$+1,,AUTO
         0 000770   200030 630500                    EPPR0   @QTN$+1,,AUTO
         0 000771   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 000772   000000 701000 xent               TSX1    HFC$LOCK
         0 000773   000000 011000                    NOP     0

      487     8956                %LOCK (G=KQ$TTREE.GATE);

   8957  0 000774   200003 236100                    LDQ     @KQ$CG,,AUTO
         0 000775   000067 036003                    ADLQ    55,DU
         0 000776   200030 756100                    STQ     @QTN$+1,,AUTO
         0 000777   200030 630500                    EPPR0   @QTN$+1,,AUTO
         0 001000   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 001001   000000 701000 xent               TSX1    HFC$LOCK
         0 001002   000000 011000                    NOP     0

      488     8959    3           END;

   8959  0 001003   001022 710000 0                  TRA     s:8969

      489     8960    2         ELSE
      490     8961    3           DO;

      491     8962                %LOCK (G=KQ$TTREE.GATE);

   8963  0 001004   200003 236100                    LDQ     @KQ$CG,,AUTO
         0 001005   000067 036003                    ADLQ    55,DU
         0 001006   200030 756100                    STQ     @QTN$+1,,AUTO
         0 001007   200030 630500                    EPPR0   @QTN$+1,,AUTO
PL6.E3A0      #001=KQT$GETSTA File=KQT$TREES.:E05TSI                             WED 07/30/97 01:35 Page:60   
         0 001010   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 001011   000000 701000 xent               TSX1    HFC$LOCK
         0 001012   000000 011000                    NOP     0

      492     8965                %LOCK (G=KQ$STREE.GATE);

   8966  0 001013   200003 236100                    LDQ     @KQ$CG,,AUTO
         0 001014   000075 036003                    ADLQ    61,DU
         0 001015   200030 756100                    STQ     @QTN$+1,,AUTO
         0 001016   200030 630500                    EPPR0   @QTN$+1,,AUTO
         0 001017   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 001020   000000 701000 xent               TSX1    HFC$LOCK
         0 001021   000000 011000                    NOP     0

      493     8968    3           END;

      494     8969    2         RETURN;

   8969  0 001022   200024 221300                    LDX1  ! @KQ_THDR,,AUTO
         0 001023   000001 702211                    TSX2  ! 1,X1

      495     8970    2   END LOCK_BOTH;
      496     8971        /****************************************************************
      497     8972        *****************************************************************/
      498     8973        /*D* NAME:         UNLOCK_BOTH
      499     8974             PURPOSE:      To unlock the T- and S-trees
      500     8975        */
      501     8976    1   UNLOCK_BOTH: PROC;

   8976  0 001024   200024 741300       UNLOCK_BOTH  STX1  ! @KQ_THDR,,AUTO

      502     8977    2         IF KQ$CG.QISS THEN

   8977  0 001025   200003 470500                    LDP0    @KQ$CG,,AUTO
         0 001026   000106 235100                    LDA     70,,PR0
         0 001027   001047 600000 0                  TZE     s:8989

PL6.E3A0      #001=KQT$GETSTA File=KQT$TREES.:E05TSI                             WED 07/30/97 01:35 Page:61   
      503     8978    3           DO;

      504     8979                %UNLOCK (G=KQ$TTREE.GATE);

   8980  0 001030   200003 236100                    LDQ     @KQ$CG,,AUTO
         0 001031   000067 036003                    ADLQ    55,DU
         0 001032   200030 756100                    STQ     @QTN$+1,,AUTO
         0 001033   200030 630500                    EPPR0   @QTN$+1,,AUTO
         0 001034   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 001035   000000 701000 xent               TSX1    HFC$UNLOCK
         0 001036   000000 011000                    NOP     0

      505     8982                %UNLOCK (G=KQ$STREE.GATE);

   8983  0 001037   200003 236100                    LDQ     @KQ$CG,,AUTO
         0 001040   000075 036003                    ADLQ    61,DU
         0 001041   200030 756100                    STQ     @QTN$+1,,AUTO
         0 001042   200030 630500                    EPPR0   @QTN$+1,,AUTO
         0 001043   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 001044   000000 701000 xent               TSX1    HFC$UNLOCK
         0 001045   000000 011000                    NOP     0

      506     8985    3           END;

   8985  0 001046   001065 710000 0                  TRA     s:8995

      507     8986    2         ELSE
      508     8987    3           DO;

      509     8988                %UNLOCK (G=KQ$STREE.GATE);

   8989  0 001047   200003 236100                    LDQ     @KQ$CG,,AUTO
         0 001050   000075 036003                    ADLQ    61,DU
         0 001051   200030 756100                    STQ     @QTN$+1,,AUTO
         0 001052   200030 630500                    EPPR0   @QTN$+1,,AUTO
         0 001053   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 001054   000000 701000 xent               TSX1    HFC$UNLOCK
PL6.E3A0      #001=KQT$GETSTA File=KQT$TREES.:E05TSI                             WED 07/30/97 01:35 Page:62   
         0 001055   000000 011000                    NOP     0

      510     8991                %UNLOCK (G=KQ$TTREE.GATE);

   8992  0 001056   200003 236100                    LDQ     @KQ$CG,,AUTO
         0 001057   000067 036003                    ADLQ    55,DU
         0 001060   200030 756100                    STQ     @QTN$+1,,AUTO
         0 001061   200030 630500                    EPPR0   @QTN$+1,,AUTO
         0 001062   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 001063   000000 701000 xent               TSX1    HFC$UNLOCK
         0 001064   000000 011000                    NOP     0

      511     8994    3           END;

      512     8995    2         RETURN;

   8995  0 001065   200024 221300                    LDX1  ! @KQ_THDR,,AUTO
         0 001066   000001 702211                    TSX2  ! 1,X1

      513     8996    2   END UNLOCK_BOTH;
      514     8997        /****************************************************************
      515     8998        *****************************************************************/
      516     8999        /*D* NAME:         VALREADS
      517     9000             PURPOSE:      To validate reads in case of deactivate
      518     9001                           or disconnect, or a deleted msg type.
      519     9002             DESCRIPTION:  Calls KQR$VALIDATE for each DCB having a
      520     9003                           read pending.
      521     9004        */
      522     9005    1   VALREADS: PROC;

   9005  0 001067   200022 741300       VALREADS     STX1  ! RBLK$+2,,AUTO

   8995  0 001070                       VAL0         null
      523     9006    2   VAL0: ;
      524     9007    2         CALL LOCK_BOTH;

   9007  0 001070   000761 701000 0                  TSX1    LOCK_BOTH
PL6.E3A0      #001=KQT$GETSTA File=KQT$TREES.:E05TSI                             WED 07/30/97 01:35 Page:63   
         0 001071   000000 011000                    NOP     0

      525     9008    2         STA$=KQ$CG.DCBHD$;

   9008  0 001072   200003 470500                    LDP0    @KQ$CG,,AUTO
         0 001073   000103 236100                    LDQ     67,,PR0
         0 001074   200006 756100                    STQ     STA$,,AUTO

      526     9009    3           DO WHILE (STA$ ~= ADDR(NIL));

   9009  0 001075   001136 710000 0                  TRA     s:9020

      527     9010                %LOCK (G=STA$->KQ$STA.GATE);

   9011  0 001076   200006 236100                    LDQ     STA$,,AUTO
         0 001077   000016 036003                    ADLQ    14,DU
         0 001100   200030 756100                    STQ     @QTN$+1,,AUTO
         0 001101   200030 630500                    EPPR0   @QTN$+1,,AUTO
         0 001102   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 001103   000000 701000 xent               TSX1    HFC$LOCK
         0 001104   000000 011000                    NOP     0

      528     9013    3           IF STA$->KQ$STA.RBLK$ ~= ADDR(NIL) THEN

   9013  0 001105   200006 470500                    LDP0    STA$,,AUTO
         0 001106   000011 236100                    LDQ     9,,PR0
         0 001107   000001 116000 xsym               CMPQ    B_VECTNIL+1
         0 001110   001124 600000 0                  TZE     s:9017

      529     9014    3            IF STA$->KQ$STA.RBLK$->KQ$RBLK.STATE = KQRS_PEND# THEN

   9014  0 001111   000011 471500                    LDP1    9,,PR0
         0 001112   100001 220100                    LDX0    1,,PR1
         0 001113   000002 100003                    CMPX0   2,DU
         0 001114   001124 601000 0                  TNZ     s:9017

      530     9015    3             CALL KQR$VALIDATE (STA$->KQ$STA.LDCT$->NK$LDCT.IOQ$->N$REQ) ALTRET(VAL0);
PL6.E3A0      #001=KQT$GETSTA File=KQT$TREES.:E05TSI                             WED 07/30/97 01:35 Page:64   

   9015  0 001115   000010 473500                    LDP3    8,,PR0
         0 001116   300001 474500                    LDP4    1,,PR3
         0 001117   200030 454500                    STP4    @QTN$+1,,AUTO
         0 001120   200030 630500                    EPPR0   @QTN$+1,,AUTO
         0 001121   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 001122   000000 701000 xent               TSX1    KQR$VALIDATE
         0 001123   001070 702000 0                  TSX2    VAL0

      531     9016                %UNLOCK (G=STA$->KQ$STA.GATE);

   9017  0 001124   200006 236100                    LDQ     STA$,,AUTO
         0 001125   000016 036003                    ADLQ    14,DU
         0 001126   200030 756100                    STQ     @QTN$+1,,AUTO
         0 001127   200030 630500                    EPPR0   @QTN$+1,,AUTO
         0 001130   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 001131   000000 701000 xent               TSX1    HFC$UNLOCK
         0 001132   000000 011000                    NOP     0

      532     9019    3           STA$=STA$->KQ$STA.DCBLNK$;

   9019  0 001133   200006 470500                    LDP0    STA$,,AUTO
         0 001134   000014 236100                    LDQ     12,,PR0
         0 001135   200006 756100                    STQ     STA$,,AUTO

      533     9020    3           END;

   9020  0 001136   000001 116000 xsym               CMPQ    B_VECTNIL+1
         0 001137   001076 601000 0                  TNZ     s:9011

      534     9021    2         CALL UNLOCK_BOTH;

   9021  0 001140   001024 701000 0                  TSX1    UNLOCK_BOTH
         0 001141   000000 011000                    NOP     0

      535     9022    2         RETURN;

PL6.E3A0      #001=KQT$GETSTA File=KQT$TREES.:E05TSI                             WED 07/30/97 01:35 Page:65   
   9022  0 001142   200022 221300                    LDX1  ! RBLK$+2,,AUTO
         0 001143   000001 702211                    TSX2  ! 1,X1

      536     9023    2   END VALREADS;
      537     9024        /****************************************************************
      538     9025        *****************************************************************/
      539     9026        /*D* NAME:         DELTYP
      540     9027             PURPOSE:      To delete a message type
      541     9028             DESCRIPTION:  The type pointed to by MTYP$ is removed from
      542     9029                           the (already locked) T-tree, and released.
      543     9030        */
      544     9031    1   DELTYP: PROC;

   9031  0 001144   200022 741300       DELTYP       STX1  ! RBLK$+2,,AUTO

      545     9032    3           DO INHIBIT;

      546     9033    3           CALL KQB$DELETENL (KQ$TTREE,,MTYP$);

   9033  0 001145   200012 630700                    EPPR0 ! MTYP$,,AUTO
         0 001146   200032 450700                    STP0  ! @QTN$+3,,AUTO
         0 001147   000001 236200 xsym               LDQ   ! B_VECTNIL+1
         0 001150   200031 756300                    STQ   ! @QTN$+2,,AUTO
         0 001151   200003 236300                    LDQ   ! @KQ$CG,,AUTO
         0 001152   000067 036203                    ADLQ  ! 55,DU
         0 001153   200030 756300                    STQ   ! @QTN$+1,,AUTO
         0 001154   200030 630700                    EPPR0 ! @QTN$+1,,AUTO
         0 001155   000021 631600 xsym               EPPR1 ! B_VECTNIL+17
         0 001156   000000 701200 xent               TSX1  ! KQB$DELETENL
         0 001157   000000 011200                    NOP   ! 0

      547     9034    3           IF KQ$CG.QISS = '0'B THEN

   9034  0 001160   200003 470700                    LDP0  ! @KQ$CG,,AUTO
         0 001161   000106 235300                    LDA   ! 70,,PR0
         0 001162   001206 601200 0                  TNZ   ! s:9044

PL6.E3A0      #001=KQT$GETSTA File=KQT$TREES.:E05TSI                             WED 07/30/97 01:35 Page:66   
      548     9035    4             DO;

      549     9036    4             IF MTYP$->KQ$QTN.LOCKCNT ~= 0 THEN

   9036  0 001163   200012 471700                    LDP1  ! MTYP$,,AUTO
         0 001164   100050 236300                    LDQ   ! 40,,PR1
         0 001165   177000 316203                    CANQ  ! 65024,DU
         0 001166   001173 600200 0                  TZE   ! s:9041

      550     9037    5               DO;

      551     9038    5               CALL SC_BCGXRL;

   9038  0 001167   000000 713600 xsym               CLIMB ! SC_BCGXRL
         0 001170   000000 600000 xsid               climb   nvectors=         0

      552     9039    5               RETURN;

   9039  0 001171   200022 221300                    LDX1  ! RBLK$+2,,AUTO
         0 001172   000001 702211                    TSX2  ! 1,X1

      553     9040    5               END;
      554     9041    4             CALL KQL$CHKMLH (MTYP$->KQ$QTN.MLH) ALTRET(BADREL);

   9041  0 001173   200012 236300                    LDQ   ! MTYP$,,AUTO
         0 001174   000055 036203                    ADLQ  ! 45,DU
         0 001175   200030 756300                    STQ   ! @QTN$+1,,AUTO
         0 001176   200030 630700                    EPPR0 ! @QTN$+1,,AUTO
         0 001177   000017 631600 xsym               EPPR1 ! B_VECTNIL+15
         0 001200   000000 701200 xent               TSX1  ! KQL$CHKMLH
         0 001201   001220 702200 0                  TSX2  ! BADREL

      555     9042    4             CALL DOQTN (MTYP$);

   9042  0 001202   200012 630700                    EPPR0 ! MTYP$,,AUTO
         0 001203   200025 450700                    STP0  ! NODE$,,AUTO
         0 001204   001342 701200 0                  TSX1  ! DOQTN
PL6.E3A0      #001=KQT$GETSTA File=KQT$TREES.:E05TSI                             WED 07/30/97 01:35 Page:67   
         0 001205   000000 011200                    NOP   ! 0

      556     9043    4             END;

      557     9044    3           CALL KQM$RELMTYP (KQ$CG,MTYP$);

   9044  0 001206   200012 630700                    EPPR0 ! MTYP$,,AUTO
         0 001207   200031 450700                    STP0  ! @QTN$+2,,AUTO
         0 001210   200003 236300                    LDQ   ! @KQ$CG,,AUTO
         0 001211   200030 756300                    STQ   ! @QTN$+1,,AUTO
         0 001212   200030 630700                    EPPR0 ! @QTN$+1,,AUTO
         0 001213   000020 631600 xsym               EPPR1 ! B_VECTNIL+16
         0 001214   000000 701200 xent               TSX1  ! KQM$RELMTYP
         0 001215   000000 011200                    NOP   ! 0

   9044  0 001216                       GETOUT       null
      558     9045    3   GETOUT: ;
      559     9046    3           RETURN;

   9046  0 001216   200022 221300                    LDX1  ! RBLK$+2,,AUTO
         0 001217   000001 702211                    TSX2  ! 1,X1

   9044  0 001220                       BADREL       null
      560     9047    3   BADREL: ;
      561     9048    3           CALL SC_BCGXRL;

   9048  0 001220   000000 713600 xsym               CLIMB ! SC_BCGXRL
         0 001221   000000 600000 xsid               climb   nvectors=         0

      562     9049        /*S* SCREECH_CODE: KQT-S$BCGXRL
      563     9050             TYPE:         SNAP
      564     9051             MESSAGE:      Bad release of comgroup station, msgtype, or MBLK list
      565     9052             REMARKS:      A station or MBLK list or message type node that was still
      566     9053                           active in some way has been released.
      567     9054                           A SNAP dump is taken and the item not released.
      568     9055        */
      569     9056    3           END; /* INHIBIT */
PL6.E3A0      #001=KQT$GETSTA File=KQT$TREES.:E05TSI                             WED 07/30/97 01:35 Page:68   

      570     9057    2         RETURN;

   9057  0 001222   200022 221300                    LDX1  ! RBLK$+2,,AUTO
         0 001223   000001 702211                    TSX2  ! 1,X1

      571     9058        /****************************************************************
      572     9059        *****************************************************************/
      573     9060        /*D* NAME:         DELSTA
      574     9061             PURPOSE:      To delete a station
      575     9062             DESCRIPTION:  Deletes the station from the station tree, and
      576     9063                           releases the station block, if the conditions
      577     9064                           listed in the *F* for KQT$DELSTA are satisfied.
      578     9065        */
      579     9066    2   DELSTA: ENTRY;

   9066  0 001224   200022 741300       DELSTA       STX1  ! RBLK$+2,,AUTO

      580     9067    3           DO INHIBIT;

      581     9068    3           IF STA$->KQ$STA.MREQ > 0

   9068  0 001225   200006 470700                    LDP0  ! STA$,,AUTO
         0 001226   000020 236300                    LDQ   ! 16,,PR0
         0 001227   000011 736200                    QLS   ! 9
         0 001230   000033 732200                    QRS   ! 27
         0 001231   000000 116203                    CMPQ  ! 0,DU
         0 001232   001246 605600 0                  TPNZ  ! s:9074
         0 001233   000020 234300                    SZN   ! 16,,PR0
         0 001234   001246 604200 0                  TMI   ! s:9074
         0 001235   000011 236300                    LDQ   ! 9,,PR0
         0 001236   000001 116200 xsym               CMPQ  ! B_VECTNIL+1
         0 001237   001246 601200 0                  TNZ   ! s:9074
         0 001240   000012 236300                    LDQ   ! 10,,PR0
         0 001241   000001 116200 xsym               CMPQ  ! B_VECTNIL+1
         0 001242   001246 601200 0                  TNZ   ! s:9074
         0 001243   000010 236300                    LDQ   ! 8,,PR0
PL6.E3A0      #001=KQT$GETSTA File=KQT$TREES.:E05TSI                             WED 07/30/97 01:35 Page:69   
         0 001244   000001 116200 xsym               CMPQ  ! B_VECTNIL+1
         0 001245   001251 600200 0                  TZE   ! s:9077

      582     9069    3           OR STA$->KQ$STA.IDSC
      583     9070    3           OR STA$->KQ$STA.RBLK$ ~= ADDR(NIL)
      584     9071    3           OR STA$->KQ$STA.MBLK$ ~= ADDR(NIL)
      585     9072    3           OR STA$->KQ$STA.LDCT$ ~= ADDR(NIL) THEN
      586     9073    4             DO;

      587     9074    4             CALL SC_BCGXRL;

   9074  0 001246   000000 713600 xsym               CLIMB ! SC_BCGXRL
         0 001247   000000 600000 xsid               climb   nvectors=         0

      588     9075    4             GOTO GETOUT;

   9075  0 001250   001216 710200 0                  TRA   ! GETOUT

      589     9076    4             END;
      590     9077    3           IF  STA$->KQ$STA.LOCKCNT = 0

   9077  0 001251   000020 236300                    LDQ   ! 16,,PR0
         0 001252   000777 316207                    CANQ  ! 511,DL
         0 001253   001340 601200 0                  TNZ   ! s:9090
         0 001254   000023 236300                    LDQ   ! 19,,PR0
         0 001255   000023 736200                    QLS   ! 19
         0 001256   400000 376203                    ANQ   ! -131072,DU
         0 001257   200030 756300                    STQ   ! @QTN$+1,,AUTO
         0 001260   000020 236300                    LDQ   ! 16,,PR0
         0 001261   000004 736200                    QLS   ! 4
         0 001262   400000 376203                    ANQ   ! -131072,DU
         0 001263   200030 276300                    ORQ   ! @QTN$+1,,AUTO
         0 001264   001340 601200 0                  TNZ   ! s:9090

      591     9078    3           AND (STA$->KQ$STA.PERM | STA$->KQ$STA.SPECIAL) = '0'B THEN
      592     9079    4             DO;

PL6.E3A0      #001=KQT$GETSTA File=KQT$TREES.:E05TSI                             WED 07/30/97 01:35 Page:70   
      593     9080    4             CALL KQL$CHKMLH (STA$->KQ$STA.MLH) ALTRET(GETOUT);

   9080  0 001265   200006 236300                    LDQ   ! STA$,,AUTO
         0 001266   000034 036203                    ADLQ  ! 28,DU
         0 001267   200030 756300                    STQ   ! @QTN$+1,,AUTO
         0 001270   200030 630700                    EPPR0 ! @QTN$+1,,AUTO
         0 001271   000017 631600 xsym               EPPR1 ! B_VECTNIL+15
         0 001272   000000 701200 xent               TSX1  ! KQL$CHKMLH
         0 001273   001216 702200 0                  TSX2  ! GETOUT

      594     9081    4             IF KQ$CG.QISS THEN

   9081  0 001274   200003 470700                    LDP0  ! @KQ$CG,,AUTO
         0 001275   000106 235300                    LDA   ! 70,,PR0
         0 001276   001306 600200 0                  TZE   ! s:9085

      595     9082    5               DO;

      596     9083    5               CALL KQL$CHKMLH (STA$->KQ$QTN.MLH) ALTRET(GETOUT);

   9083  0 001277   200006 236300                    LDQ   ! STA$,,AUTO
         0 001300   000055 036203                    ADLQ  ! 45,DU
         0 001301   200030 756300                    STQ   ! @QTN$+1,,AUTO
         0 001302   200030 630700                    EPPR0 ! @QTN$+1,,AUTO
         0 001303   000017 631600 xsym               EPPR1 ! B_VECTNIL+15
         0 001304   000000 701200 xent               TSX1  ! KQL$CHKMLH
         0 001305   001216 702200 0                  TSX2  ! GETOUT

      597     9084    5               END;

      598     9085    4             CALL KQB$DELETENL (KQ$STREE,,STA$);

   9085  0 001306   200006 630700                    EPPR0 ! STA$,,AUTO
         0 001307   200032 450700                    STP0  ! @QTN$+3,,AUTO
         0 001310   000001 236200 xsym               LDQ   ! B_VECTNIL+1
         0 001311   200031 756300                    STQ   ! @QTN$+2,,AUTO
         0 001312   200003 236300                    LDQ   ! @KQ$CG,,AUTO
PL6.E3A0      #001=KQT$GETSTA File=KQT$TREES.:E05TSI                             WED 07/30/97 01:35 Page:71   
         0 001313   000075 036203                    ADLQ  ! 61,DU
         0 001314   200030 756300                    STQ   ! @QTN$+1,,AUTO
         0 001315   200030 630700                    EPPR0 ! @QTN$+1,,AUTO
         0 001316   000021 631600 xsym               EPPR1 ! B_VECTNIL+17
         0 001317   000000 701200 xent               TSX1  ! KQB$DELETENL
         0 001320   000000 011200                    NOP   ! 0

      599     9086    4             IF KQ$CG.QISS THEN

   9086  0 001321   200003 470700                    LDP0  ! @KQ$CG,,AUTO
         0 001322   000106 235300                    LDA   ! 70,,PR0
         0 001323   001330 600200 0                  TZE   ! s:9088

      600     9087    4              CALL DOQTN (STA$);

   9087  0 001324   200006 631700                    EPPR1 ! STA$,,AUTO
         0 001325   200025 451700                    STP1  ! NODE$,,AUTO
         0 001326   001342 701200 0                  TSX1  ! DOQTN
         0 001327   000000 011200                    NOP   ! 0

      601     9088    4             CALL KQM$RELSTA (KQ$CG,STA$);

   9088  0 001330   200006 630700                    EPPR0 ! STA$,,AUTO
         0 001331   200031 450700                    STP0  ! @QTN$+2,,AUTO
         0 001332   200003 236300                    LDQ   ! @KQ$CG,,AUTO
         0 001333   200030 756300                    STQ   ! @QTN$+1,,AUTO
         0 001334   200030 630700                    EPPR0 ! @QTN$+1,,AUTO
         0 001335   000020 631600 xsym               EPPR1 ! B_VECTNIL+16
         0 001336   000000 701200 xent               TSX1  ! KQM$RELSTA
         0 001337   000000 011200                    NOP   ! 0

      602     9089    4             END;

      603     9090    3           GOTO GETOUT;

   9090  0 001340   001216 710200 0                  TRA   ! GETOUT

PL6.E3A0      #001=KQT$GETSTA File=KQT$TREES.:E05TSI                             WED 07/30/97 01:35 Page:72   
      604     9091    3           END;

   9091  0 001341   001414 710000 0                  TRA     s:9114

      605     9092    2   DOQTN: PROC (QTN$);

   9092  0 001342   200024 741300       DOQTN        STX1  ! @KQ_THDR,,AUTO

      606     9093        /**/
      607     9094    3   DCL QTN$ PTR;
      608     9095        /**/
      609     9096    4           DO INHIBIT;

      610     9097    4           CALL REMQTN (QTN$);

   9097  0 001343   200025 236300                    LDQ   ! @QTN$,,AUTO
         0 001344   200027 756300                    STQ   ! @QTN$,,AUTO
         0 001345   000732 701200 0                  TSX1  ! REMQTN
         0 001346   000000 011200                    NOP   ! 0

      611     9098    4           IF QTN$->KQ$QTN.READS$ ~= ADDR(NIL) THEN

   9098  0 001347   200025 470700                    LDP0  ! @QTN$,,AUTO
         0 001350   000000 471700                    LDP1  ! 0,,PR0
         0 001351   100046 236300                    LDQ   ! 38,,PR1
         0 001352   000001 116200 xsym               CMPQ  ! B_VECTNIL+1
         0 001353   001412 600200 0                  TZE   ! s:9113

      612     9099    5             DO;

      613     9100    5             RBLK$=QTN$->KQ$QTN.READS$;

   9100  0 001354   200020 756300                    STQ   ! RBLK$,,AUTO

      614     9101    6               DO WHILE (RBLK$->KQ$RBLK.QRLNK$ ~= ADDR(NIL));

   9101  0 001355   001372 710200 0                  TRA   ! s:9106
PL6.E3A0      #001=KQT$GETSTA File=KQT$TREES.:E05TSI                             WED 07/30/97 01:35 Page:73   

      615     9102    6               IF RBLK$->KQ$RBLK.QTN$ ~= QTN$ THEN

   9102  0 001356   200020 470700                    LDP0  ! RBLK$,,AUTO
         0 001357   200025 471700                    LDP1  ! @QTN$,,AUTO
         0 001360   000021 236300                    LDQ   ! 17,,PR0
         0 001361   100000 116300                    CMPQ  ! 0,,PR1
         0 001362   001365 600200 0                  TZE   ! s:9104

      616     9103    6                CALL SC_BCGXRL;

   9103  0 001363   000000 713600 xsym               CLIMB ! SC_BCGXRL
         0 001364   000000 600000 xsid               climb   nvectors=         0

      617     9104    6               RBLK$->KQ$RBLK.QTN$=ADDR(NIL);

   9104  0 001365   000001 236200 xsym               LDQ   ! B_VECTNIL+1
         0 001366   200020 470700                    LDP0  ! RBLK$,,AUTO
         0 001367   000021 756300                    STQ   ! 17,,PR0

      618     9105    6               RBLK$=RBLK$->KQ$RBLK.QRLNK$;

   9105  0 001370   000020 236300                    LDQ   ! 16,,PR0
         0 001371   200020 756300                    STQ   ! RBLK$,,AUTO

      619     9106    6               END;

   9106  0 001372   200020 470700                    LDP0  ! RBLK$,,AUTO
         0 001373   000020 236300                    LDQ   ! 16,,PR0
         0 001374   000001 116200 xsym               CMPQ  ! B_VECTNIL+1
         0 001375   001356 601200 0                  TNZ   ! s:9102

      620     9107    5             RBLK$->KQ$RBLK.QTN$=ADDR(NIL);

   9107  0 001376   000001 236200 xsym               LDQ   ! B_VECTNIL+1
         0 001377   000021 756300                    STQ   ! 17,,PR0

PL6.E3A0      #001=KQT$GETSTA File=KQT$TREES.:E05TSI                             WED 07/30/97 01:35 Page:74   
      621     9108    5             RBLK$->KQ$RBLK.QRLNK$=KQ$CG.QUEUE.WCRL$;

   9108  0 001400   200003 471700                    LDP1  ! @KQ$CG,,AUTO
         0 001401   100060 236300                    LDQ   ! 48,,PR1
         0 001402   000020 756300                    STQ   ! 16,,PR0

      622     9109    5             KQ$CG.QUEUE.WCRL$=QTN$->KQ$QTN.READS$;

   9109  0 001403   200025 473700                    LDP3  ! @QTN$,,AUTO
         0 001404   300000 474700                    LDP4  ! 0,,PR3
         0 001405   400046 236300                    LDQ   ! 38,,PR4
         0 001406   100060 756300                    STQ   ! 48,,PR1

      623     9110    5             QTN$->KQ$QTN.READS$=ADDR(NIL);

   9110  0 001407   300000 474700                    LDP4  ! 0,,PR3
         0 001410   000001 236200 xsym               LDQ   ! B_VECTNIL+1
         0 001411   400046 756300                    STQ   ! 38,,PR4

      624     9111    5             END;

      625     9112    4           END;

      626     9113    3   END DOQTN;

   9113  0 001412   200024 221300                    LDX1  ! @KQ_THDR,,AUTO
         0 001413   000001 702211                    TSX2  ! 1,X1

      627     9114    2   END DELTYP;

   9114  0 001414   200022 221300                    LDX1  ! RBLK$+2,,AUTO
         0 001415   000001 702211                    TSX2  ! 1,X1

(unnamed)
 Sect OctLoc
   1     000   777777 777774   777777 777773   000075 006000   000067 006000    .........=...7..
      628     9115    1   END KQT$GETSTA;
PL6.E3A0      #001=KQT$GETSTA File=KQT$TREES.:E05TSI                             WED 07/30/97 01:35 Page:75   

PL6.E3A0      #001=KQT$GETSTA File=KQT$TREES.:E05TSI                             WED 07/30/97 01:35 Page:76   
--  Include file information  --

   KC_CP6.:E05TOU  is referenced.
   SS_SCHED_C.:E05TOU  is referenced.
   KC$CP6V_C.:E05TOU  is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   N$REQ.:E05TOU  is referenced.
   NK$LDCT.:E05TOU  is referenced.
   KQ_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   HF_LOCK_C.:E05TOU  cannot be made into a system file and is referenced.
   KQ_MAC_C.:E05TOU  is referenced.
   KQ_SUBS_C.:E05TOU  is referenced.
      No diagnostics issued in procedure KQT$GETSTA.
PL6.E3A0      #001=KQT$GETSTA File=KQT$TREES.:E05TSI                             WED 07/30/97 01:35 Page:77   

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @KQ$CG                    23-0-0/w PTR         r     1 @KQ$THDR
    24-0-0/w PTR         r     1 @KQ_THDR                   4-0-0/w PTR         r     1 @PARM$
    27-0-0/w PTR         r     1 @QTN$                     25-0-0/w PTR         r     1 @QTN$
     5-0-0/w PTR         r     1 @XKEY                     13-0-0/w PTR         r     1 DSTA$
    12-0-0/w PTR         r     1 DTYP$                     10-0-0/w SBIN        r     1 I
    26-0-0/c CHAR(8)     r     1 KEY                       *0-0-0/d STRC(6516)  r     1 KQ$CG
    *0-0-0/w STRC(216)   r     1 KQ$THDR                   *0-0-0/w STRC(216)   r     1 KQ_THDR
    17-0-0/w PTR         r     1 MBLK$                     16-0-0/w PTR         r     1 MLH$
    12-0-0/w PTR         r     1 MTYP$                     25-0-0/w PTR         r     1 NODE$
     7-0-0/w PTR         r     1 P$                        *0-0-0/w PTR         r     1 PARM$
    14-0-0/w PTR         r     1 PP$                       11-0-0/w PTR         r     1 QTN$
    *0-0-0/w PTR         r     1 QTN$                      *0-0-0/w PTR         r     1 QTN$
    20-0-0/w PTR         r     1 RBLK$                      6-0-0/w PTR         r     1 STA$
    *0-0-0/w CHAR(8)     r     1 XKEY

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d STRC(6516)  r     1 KQ_ICG

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 B$$PTR                     0-0-0/w STRC(252)   r     1 KQ$BTN
     0-0-0/d STRC(1908)  r     1 KQ$QTN                     0-0-0/d STRC(648)   r     1 KQ$RBLK
     0-0-0/d STRC(1296)  r     1 KQ$STA                     0-0-0/d STRC(1080)  r     1 N$REQ
PL6.E3A0      #001=KQT$GETSTA File=KQT$TREES.:E05TSI                             WED 07/30/97 01:35 Page:78   
     0-0-0/d STRC(864)   r     1 NK$LDCT


   Procedure KQT$GETSTA requires 782 words for executable code.
   Procedure KQT$GETSTA requires 28 words of local(AUTO) storage.

    No errors detected in file KQT$TREES.:E05TSI    .
PL6.E3A0      #001=KQT$GETSTA File=KQT$TREES.:E05TSI                             WED 07/30/97 01:35 Page:79   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=KQT$GETSTA File=KQT$TREES.:E05TSI                             WED 07/30/97 01:35 Page:80   
          MINI XREF LISTING

ALTRT
      8635**LABEL    8537--CALLALT  8559--CALLALT  8613--CALLALT  8636--CALLALT
ALTRT IN PROCEDURE TBLD
      8886**LABEL    8888--CALLALT
B$$PTR
      6103**DCL      8911>>ASSIGN   8919>>ASSIGN   8924<<ASSIGN   8934>>ASSIGN   8938<<ASSIGN   8942>>ASSIGN
BADREL IN PROCEDURE DELTYP
      9044**LABEL    9041--CALLALT
BADTREE
      8759**LABEL    8758--CALLALT  8759--CALLALT
DELSTA IN PROCEDURE DELTYP
      9066**ENTRY    8694--CALL
DELTYP
      9031**PROC     8661--CALL
DOQTN IN PROCEDURE DELTYP
      9092**PROC     9042--CALL     9087--CALL
DSTA$
      7702**DCL      8522<<ASSIGN   8524>>ASSIGN   8525>>IF       8529<>CALL     8535<<ASSIGN   8537<>CALL
      8544<>CALL     8545>>ASSIGN   8546<>CALL     8547<>CALL     8551>>ASSIGN   8557<<ASSIGN   8559<>CALL
      8575<>CALL
DTYP$
      7701**DCL      8598<<ASSIGN   8600>>ASSIGN   8601>>IF       8605<>CALL     8611<<ASSIGN   8613<>CALL
      8620<>CALL     8621>>ASSIGN   8622<>CALL     8623<>CALL     8627>>ASSIGN   8634<<ASSIGN   8636<>CALL
GETOUT IN PROCEDURE DELTYP
      9044**LABEL    9075--GOTO     9080--CALLALT  9083--CALLALT  9090--GOTO
GS0
      8545**LABEL    8530--GOTO     8563--GOTO     8576--GOTO
GS00
      8531**LABEL    8529--CALLALT
GS1
      8549**LABEL    8546--CALLALT
GS3
PL6.E3A0      #001=KQT$GETSTA File=KQT$TREES.:E05TSI                             WED 07/30/97 01:35 Page:81   
      8551**LABEL    8544--CALLALT
GSX
      8514**LABEL    8525--GOTO     8531--GOTO     8575--CALLALT
GT0
      8621**LABEL    8606--GOTO     8640--GOTO
GT00
      8607**LABEL    8605--CALLALT  8630--GOTO
GT1
      8625**LABEL    8622--CALLALT
GT3
      8627**LABEL    8620--CALLALT
GTX
      8587**LABEL    8601--GOTO     8607--GOTO
HFC$LOCK
      2888**DCL-ENT  8539--CALL     8561--CALL     8615--CALL     8638--CALL     8883--CALL     8954--CALL
      8957--CALL     8963--CALL     8966--CALL     9011--CALL
HFC$UNLOCK
      2888**DCL-ENT  8516--CALL     8533--CALL     8555--CALL     8592--CALL     8609--CALL     8632--CALL
      8892--CALL     8897--CALL     8980--CALL     8983--CALL     8989--CALL     8992--CALL     9017--CALL
I
      7698**DCL      8511<<ASSIGN   8512>>IF       8520>>IF       8529<>CALL     8536<<ASSIGN   8537<>CALL
      8544<>CALL     8558<<ASSIGN   8559<>CALL     8575<>CALL     8587<<ASSIGN   8588>>IF       8596>>IF
      8605<>CALL     8612<<ASSIGN   8613<>CALL     8620<>CALL     8635<<ASSIGN   8636<>CALL
INS0 IN PROCEDURE INSQTN
      8916**LABEL    8914--GOTO     8917--GOTO
INSQTN
      8906**PROC     8547--CALL     8623--CALL     8704--CALL
KEY IN PROCEDURE TBLD
      8878**DCL      8887<<ASSIGN   8888<>CALL
KQ$BTN.FLINK$
      7685**DCL      8886>>ASSIGN
KQ$BTN.KEY
      7687**DCL      8887>>ASSIGN
KQ$CG
      5371**DCL        17--PROC     8529<>CALL     8537<>CALL     8544<>CALL     8549<>CALL     8559<>CALL
      8573--ENTRY    8575<>CALL     8582--ENTRY    8605<>CALL     8613<>CALL     8620<>CALL     8625<>CALL
PL6.E3A0      #001=KQT$GETSTA File=KQT$TREES.:E05TSI                             WED 07/30/97 01:35 Page:82   
      8636<>CALL     8658--ENTRY    8691--ENTRY    8701--ENTRY    8724--ENTRY    8736--ENTRY    8743--ENTRY
      8756--ENTRY    9044<>CALL     9088<>CALL
KQ$CG.AUCTL.DVBYTE.REREAD
      5814**DCL      5815--REDEF
KQ$CG.DCBHD$
      5726**DCL      9008>>ASSIGN
KQ$CG.QISS
      5757**DCL      8547>>IF       8623>>IF       8951>>IF       8977>>IF       9034>>IF       9081>>IF
      9086>>IF
KQ$CG.QUEUE.PLHD$
      5604**DCL      8910--ASSIGN   8933--ASSIGN
KQ$CG.QUEUE.WCRL$
      5596**DCL      9108>>ASSIGN   9109<<ASSIGN
KQ$CG.STREE
      5703**DCL      8546<>CALL     8758<>CALL     9085<>CALL
KQ$CG.STREE.GATE
      5705**DCL      8516<>CALL     8533<>CALL     8539<>CALL     8555<>CALL     8561<>CALL     8954<>CALL
      8966<>CALL     8983<>CALL     8989<>CALL
KQ$CG.TTREE
      5664**DCL      8622<>CALL     8759<>CALL     9033<>CALL
KQ$CG.TTREE.GATE
      5666**DCL      8592<>CALL     8609<>CALL     8615<>CALL     8632<>CALL     8638<>CALL     8957<>CALL
      8963<>CALL     8980<>CALL     8992<>CALL
KQ$MBLK.DVE.EOMCHAR
      7503**DCL      7505--REDEF
KQ$MBLK.KEY1
      7429**DCL      7431--REDEF
KQ$MBLK.KEY2
      7438**DCL      7456--REDEF
KQ$MBLK.LNK$
      7403**DCL      7405--REDEF    7411--REDEF    7415--REDEF
KQ$MBLK.TYC
      7552**DCL      7554--REDEF
KQ$MBLK.XSP.MREQ$
      7458**DCL      7462--REDEF
KQ$QTN.LOCKCNT
PL6.E3A0      #001=KQT$GETSTA File=KQT$TREES.:E05TSI                             WED 07/30/97 01:35 Page:83   
      7220**DCL      9036>>IF
KQ$QTN.MLH
      7262**DCL      9041<>CALL     9083<>CALL
KQ$QTN.MPRIO
      7223**DCL      8913>>IF       8913>>IF       8915>>IF       8915>>IF
KQ$QTN.MXACT
      7204**DCL      7206--REDEF
KQ$QTN.PLINK$
      7213**DCL      8918--ASSIGN   8923<<ASSIGN   8938>>ASSIGN   8941--ASSIGN
KQ$QTN.READS$
      7207**DCL      9098>>IF       9100>>ASSIGN   9109>>ASSIGN   9110<<ASSIGN
KQ$QTN.STA.ACTTYC
      6926**DCL      6930--REDEF
KQ$QTN.STA.BTN.KEY
      6910**DCL      8916>>IF       8916>>IF
KQ$QTN.STA.DCBLNK$
      6933**DCL      6936--REDEF    6940--REDEF
KQ$QTN.STA.EVCNT
      7019**DCL      7022--REDEF
KQ$QTN.STA.EVNT
      6985**DCL      6989--REDEF    6992--REDEF
KQ$QTN.STA.OPNBLKED
      7046**DCL      7049--REDEF
KQ$QTN.STA.OPNREJ
      7052**DCL      7054--REDEF
KQ$QTN.STA.SUCCREAD
      6975**DCL      6979--REDEF
KQ$QTN.STA.TCOUNT
      7104**DCL      7110--REDEF
KQ$QTN.STA.VGOT$
      7089**DCL      7093--REDEF    7097--REDEF
KQ$RBLK.BUF$
      6682**DCL      6684--REDEF
KQ$RBLK.CNACTD
      6596**DCL      6605--REDEF
KQ$RBLK.DBLKX
PL6.E3A0      #001=KQT$GETSTA File=KQT$TREES.:E05TSI                             WED 07/30/97 01:35 Page:84   
      6702**DCL      6706--REDEF
KQ$RBLK.EOFNONE
      6574**DCL      6577--REDEF
KQ$RBLK.FROMQ
      6580**DCL      6583--REDEF
KQ$RBLK.KEY1R
      6621**DCL      6622--REDEF
KQ$RBLK.KEY2R
      6626**DCL      6627--REDEF
KQ$RBLK.LATCH
      6569**DCL      6571--REDEF
KQ$RBLK.LWRITES$
      6713**DCL      6717--REDEF
KQ$RBLK.QRLNK$
      6717**DCL      9101>>DOWHILE  9105>>ASSIGN   9108<<ASSIGN
KQ$RBLK.QTN$
      6720**DCL      9102>>IF       9104<<ASSIGN   9107<<ASSIGN
KQ$RBLK.STATE
      6566**DCL      9014>>IF
KQ$STA.ACTTYC
      6274**DCL      6278--REDEF
KQ$STA.DCBLNK$
      6281**DCL      6284--REDEF    6288--REDEF    9019>>ASSIGN
KQ$STA.EVCNT
      6367**DCL      6370--REDEF
KQ$STA.EVNT
      6333**DCL      6337--REDEF    6340--REDEF
KQ$STA.GATE
      6300**DCL      9011<>CALL     9017<>CALL
KQ$STA.IDSC
      6302**DCL      9068>>IF
KQ$STA.LDCT$
      6263**DCL      9015>>CALL     9068>>IF
KQ$STA.LOCKCNT
      6356**DCL      9077>>IF
KQ$STA.MBLK$
PL6.E3A0      #001=KQT$GETSTA File=KQT$TREES.:E05TSI                             WED 07/30/97 01:35 Page:85   
      6267**DCL      9068>>IF
KQ$STA.MLH
      6490**DCL      9080<>CALL
KQ$STA.MREQ
      6347**DCL      8511>>ASSIGN   8523<<ASSIGN   8531>>IF       8587>>ASSIGN   8599<<ASSIGN   8607>>IF
      9068>>IF
KQ$STA.MREQ$
      6432**DCL      8522>>ASSIGN   8598>>ASSIGN
KQ$STA.OPNBLKED
      6394**DCL      6397--REDEF
KQ$STA.OPNREJ
      6400**DCL      6402--REDEF
KQ$STA.PERM
      6320**DCL      9077>>IF
KQ$STA.RBLK$
      6265**DCL      9013>>IF       9014>>IF       9068>>IF
KQ$STA.SPECIAL
      6381**DCL      9077>>IF
KQ$STA.SUCCREAD
      6323**DCL      6327--REDEF
KQ$STA.TCOUNT
      6452**DCL      6458--REDEF
KQ$STA.TERM
      6318**DCL      8509>>IF       8585>>IF
KQ$STA.USR#
      6353**DCL      8630>>IF
KQ$STA.VGOT$
      6437**DCL      6441--REDEF    6445--REDEF
KQ$THDR IN PROCEDURE TBLD
      8815**DCL      8799--PROC     8881<<ASSIGN   8888<>CALL
KQ$THDR.GATE IN PROCEDURE TBLD
      8819**DCL      8883<>CALL     8892<>CALL     8897<>CALL
KQ$THDR.HEAD$ IN PROCEDURE TBLD
      8827**DCL      8880>>ASSIGN
KQB$DELETENL
      7714**DCL-ENT  9033--CALL     9085--CALL
PL6.E3A0      #001=KQT$GETSTA File=KQT$TREES.:E05TSI                             WED 07/30/97 01:35 Page:86   
KQB$INSERTNL
      7715**DCL-ENT  8546--CALL     8622--CALL     8888--CALL
KQL$CHKMLH
      7717**DCL-ENT  9041--CALL     9080--CALL     9083--CALL
KQM$GETBD
      7718**DCL-ENT  8537--CALL     8613--CALL
KQM$GETBR
      7719**DCL-ENT  8559--CALL     8636--CALL
KQM$GETMTYP
      7720**DCL-ENT  8605--CALL     8620--CALL
KQM$GETSTA
      7721**DCL-ENT  8529--CALL     8544--CALL     8575--CALL
KQM$RELMTYP
      7722**DCL-ENT  8625--CALL     9044--CALL
KQM$RELSTA
      7723**DCL-ENT  8549--CALL     9088--CALL
KQR$VALIDATE
      7724**DCL-ENT  9015--CALL
KQ_ICG.AUCTL.DVBYTE.REREAD
      8185**DCL      8186--REDEF
KQ_ICG.STREE
      8074**DCL      8758<>CALL
KQ_ICG.TTREE
      8035**DCL      8759<>CALL
KQ_IMBLK.DVE.EOMCHAR
      3563**DCL      3565--REDEF
KQ_IMBLK.KEY1
      3489**DCL      3491--REDEF
KQ_IMBLK.KEY2
      3498**DCL      3516--REDEF
KQ_IMBLK.LNK$
      3463**DCL      3465--REDEF    3471--REDEF    3475--REDEF
KQ_IMBLK.TYC
      3612**DCL      3614--REDEF
KQ_IMBLK.XSP.MREQ$
      3518**DCL      3522--REDEF
PL6.E3A0      #001=KQT$GETSTA File=KQT$TREES.:E05TSI                             WED 07/30/97 01:35 Page:87   
KQ_IRBLK.BUF$
      3067**DCL      3069--REDEF
KQ_IRBLK.CNACTD
      2981**DCL      2990--REDEF
KQ_IRBLK.DBLKX
      3087**DCL      3091--REDEF
KQ_IRBLK.EOFNONE
      2959**DCL      2962--REDEF
KQ_IRBLK.FROMQ
      2965**DCL      2968--REDEF
KQ_IRBLK.KEY1R
      3006**DCL      3007--REDEF
KQ_IRBLK.KEY2R
      3011**DCL      3012--REDEF
KQ_IRBLK.LATCH
      2954**DCL      2956--REDEF
KQ_IRBLK.LWRITES$
      3098**DCL      3102--REDEF
KQ_IRBLKT.CNACTD
      3167**DCL      3176--REDEF
KQ_IRBLKT.DBLK$
      3230**DCL      3234--REDEF    3237--REDEF
KQ_IRBLKT.EOFNONE
      3145**DCL      3148--REDEF
KQ_IRBLKT.FROMQ
      3151**DCL      3154--REDEF
KQ_IRBLKT.KEY1R
      3192**DCL      3193--REDEF
KQ_IRBLKT.KEY2R
      3197**DCL      3198--REDEF
KQ_IRBLKT.LATCH
      3140**DCL      3142--REDEF
KQ_THDR IN PROCEDURE TBLD
      8853**DCL      8799--PROC     8881>>ASSIGN
LOCK_BOTH
      8950**PROC     8738--CALL     9007--CALL
PL6.E3A0      #001=KQT$GETSTA File=KQT$TREES.:E05TSI                             WED 07/30/97 01:35 Page:88   
MBLK$
      7706**DCL      7401--IMP-PTR
MLH$
      7705**DCL      7332--IMP-PTR
MTYP$
      7700**DCL      6784--IMP-PTR  7701--REDEF    8660<<ASSIGN   9033<>CALL     9036>>IF       9041>>CALL
      9042<>CALL     9044<>CALL
N$REQ
      6159**DCL      9015<>CALL
N$REQ.BUFADDR
      6168**DCL      6169--REDEF    6169--REDEF
N$REQ.DLA.DRELADDR
      6160**DCL      6160--REDEF
N$REQ.DVE.EOMCHAR
      6197**DCL      6198--REDEF
N$REQ.EAINFO
      6191**DCL      6191--REDEF
N$REQ.EAINFOX
      6191**DCL      6192--REDEF
N$REQ.EVNTINFO
      6192**DCL      6192--REDEF
N$REQ.STATUS
      6173**DCL      6179--REDEF
NK$LDCT.DDT$
      6119**DCL      6119--REDEF
NK$LDCT.IOQ$
      6118**DCL      6119--REDEF    9015>>CALL
NK$LDCT.LDCTX
      6120**DCL      6120--REDEF
NK$LDCT.LKFLG.ABORTED
      6132**DCL      6133--REDEF
NK$LDCT.RLCID.LDCTX
      6142**DCL      6142--REDEF
NK$LDCT.STA$
      6138**DCL      6139--REDEF
NK$LDCT.SYMB$
PL6.E3A0      #001=KQT$GETSTA File=KQT$TREES.:E05TSI                             WED 07/30/97 01:35 Page:89   
      6117**DCL      6117--REDEF    6117--REDEF    6118--REDEF
NODE$ IN PROCEDURE TBLD
      8877**DCL      8880<<ASSIGN   8885>>DOWHILE  8886>>ASSIGN   8887>>ASSIGN   8888<>CALL     8889<<ASSIGN
P$
      7697**DCL      8545<<ASSIGN   8549<>CALL     8621<<ASSIGN   8625<>CALL     8886<<ASSIGN   8889>>ASSIGN
      8910<<ASSIGN   8911>>ASSIGN   8918<<ASSIGN   8919>>ASSIGN   8924>>ASSIGN   8933<<ASSIGN   8934>>ASSIGN
      8938>>ASSIGN   8941<<ASSIGN   8942>>ASSIGN
PARM$
      6095**DCL        17--PROC     8508>>ASSIGN   8524<<ASSIGN   8551<<ASSIGN   8573--ENTRY    8582--ENTRY
      8584>>ASSIGN   8600<<ASSIGN   8627<<ASSIGN   8658--ENTRY    8660>>ASSIGN   8691--ENTRY    8693>>ASSIGN
      8701--ENTRY    8703<>CALL     8704<>CALL
PP$
      7703**DCL      8911<<ASSIGN   8912>>DOWHILE  8913>>IF       8915>>IF       8916>>IF       8918>>ASSIGN
      8919<<ASSIGN   8923>>ASSIGN   8934<<ASSIGN   8936>>IF       8941>>ASSIGN   8942<<ASSIGN
QTN$
      7699**DCL      6858--IMP-PTR
QTN$ IN PROCEDURE DOQTN
      9094**DCL      9092--PROC     9097<>CALL     9098>>IF       9100>>ASSIGN   9102>>IF       9109>>ASSIGN
      9110>>ASSIGN
QTN$ IN PROCEDURE INSQTN
      8908**DCL      8906--PROC     8913>>IF       8915>>IF       8916>>IF       8923>>ASSIGN   8924>>ASSIGN
      8931--ENTRY    8936>>IF       8938>>ASSIGN
RBLK$
      7707**DCL      6560--IMP-PTR  9100<<ASSIGN   9101>>DOWHILE  9102>>IF       9104>>ASSIGN   9105<<ASSIGN
      9105>>ASSIGN   9107>>ASSIGN   9108>>ASSIGN
REMQTN IN PROCEDURE INSQTN
      8931**ENTRY    8703--CALL     9097--CALL
SC_BCGXRL
      7726**DCL-ENT  9038--CALL     9048--CALL     9074--CALL     9103--CALL
SC_CGCRCT
      7725**DCL-ENT  8762--CALL
STA$
      7696**DCL      6222--IMP-PTR  8508<<ASSIGN   8509>>IF       8511>>ASSIGN   8522>>ASSIGN   8523>>ASSIGN
      8531>>IF       8535>>ASSIGN   8557>>ASSIGN   8584<<ASSIGN   8585>>IF       8587>>ASSIGN   8598>>ASSIGN
      8599>>ASSIGN   8607>>IF       8611>>ASSIGN   8630>>IF       8634>>ASSIGN   8693<<ASSIGN   9008<<ASSIGN
      9009>>DOWHILE  9011>>CALL     9013>>IF       9014>>IF       9015>>CALL     9017>>CALL     9019<<ASSIGN
PL6.E3A0      #001=KQT$GETSTA File=KQT$TREES.:E05TSI                             WED 07/30/97 01:35 Page:90   
      9019>>ASSIGN   9068>>IF       9068>>IF       9068>>IF       9068>>IF       9068>>IF       9077>>IF
      9077>>IF       9077>>IF       9080>>CALL     9083>>CALL     9085<>CALL     9087<>CALL     9088<>CALL
TBLD
      8799**PROC     8758--CALL     8759--CALL
UNLOCK_BOTH
      8976**PROC     8745--CALL     9021--CALL
VAL0 IN PROCEDURE VALREADS
      8995**LABEL    9015--CALLALT
VALREADS
      9005**PROC     8726--CALL
XKEY
      6096**DCL        17--PROC     8546<>CALL     8573--ENTRY    8582--ENTRY    8622<>CALL
