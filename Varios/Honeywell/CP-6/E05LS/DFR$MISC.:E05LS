VERSION E05

PL6.E3A0      #001=DFR$CONVERT File=DFR$MISC.:E05TSI                             TUE 07/29/97 14:42 Page:1    
        1        1        /*M* DFR$CONVERT .. Input conversion module for FEPANLZ Processor */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* DMR,AND,IND=5 */
        8        8        DFR$CONVERT: PROC(VREF$, ADDRESS) ALTRET ;
        9        9        /*D* NAME: DFR$CONVERT
       10       10             CALL: CALL DFR$CONVERT (VREF$,ADDRESS);
       11       11             DESCRIPTION: This routine will evaluate an input 'expression node'.
       12       12                   VREF$ points to a VREF parse node.
       13       13                   The resulting value is returned in ADDRESS.
       14       14        */
       15       15        %INCLUDE CP_6;
       16       96        %INCLUDE DD_PSUBS_C;
       17      571        %INCLUDE DD_ERR_C;
       18      968        %INCLUDE XUH_MACRO_C;
       19     1052        %INCLUDE DD_SD_M;
       20     2388        %S_D;
       21     3706        /*  Parameters  */
       22     3707    1   DCL VREF$ PTR;
       23     3708    1   DCL ADDRESS SBIN WORD;
       24     3709        /* Local Auto */
       25     3710    1   DCL SEG UBIN;
       26     3711    1   DCL DESC# UBIN;
       27     3712    1   DCL NOT_IS BIT(1) ALIGNED;
       28     3713    1   DCL SAVE_DESC$ PTR;
       29     3714    1   DCL SAVE_DESC UBIN;
       30     3715        /*  Based  */
       31     3716    1   DCL BASED_BIN SBIN BASED ALIGNED;
       32     3717        %INCLUDE DD$DITEM;
       12+    3820             %LIST;
       13+    3821    1        DCL SDD$ PTR;
       14+    3822    1        DCL ZITEM$ PTR;
       15+    3823    1        DCL SDD_L6$ PTR;
       16+    3824    1        DCL ZITEM_L6$ PTR;
PL6.E3A0      #001=DFR$CONVERT File=DFR$MISC.:E05TSI                             TUE 07/29/97 14:42 Page:2    
       33     4398        %ZITEM;
       34     4470        /*  Entry  */
       35     4471    1   DCL DDS$VREFCOM ENTRY(2) ALTRET;
       36     4472    1   DCL DDK$EVAL ENTRY(6) ALTRET;
       37     4473        %EJECT;
PL6.E3A0      #001=DFR$CONVERT File=DFR$MISC.:E05TSI                             TUE 07/29/97 14:42 Page:3    
       38     4474
       39     4475    1           SAVE_DESC$ = S_D.DESC$;
       40     4476    1           SAVE_DESC = S_D.DESC$ -> BASED_BIN;
       41     4477    1           ZITEM$ = S_D.D$;
       42     4478    1           CALL DDS$VREFCOM ( VREF$ ) ALTRET(ARET);
       43     4479    1           IF NOT ZITEM.FLAGS.MDSE.E
       44     4480    2           THEN DO;
       45     4481    2                S_D.ERROR = E@NOEVAL;      /* E@NOEVAL */
       46     4482    2   ARET:        ALTRETURN;
       47     4483    2           END;
       48     4484    1           S_D.DESC$ = ZITEM$;
       49     4485    1           CALL DDK$EVAL ( ADDRESS, SEG, DESC#, NOT_IS ) ALTRET(ARET);
       50     4486    1           IF NOT_IS
       51     4487    2           THEN DO;
       52     4488    2                S_D.ERROR = E@CANTEVAL;    /* E@CANTEVAL */
       53     4489    2                GOTO ARET;
       54     4490    2           END;
       55     4491    1           S_D.DESC$ = SAVE_DESC$;
       56     4492    1           S_D.DESC$ -> BASED_BIN = SAVE_DESC;
       57     4493    1   END DFR$CONVERT   ;
       58     4494        %EOD ;

PL6.E3A0      #001=DFR$CONVERT File=DFR$MISC.:E05TSI                             TUE 07/29/97 14:42 Page:4    
--  Include file information  --

   DD_SRTN_C.:E05TOU  is referenced.
   DD_ACODE_C.:E05TOU  is referenced.
   DD_ICODE_C.:E05TOU  is referenced.
   DD$DITEM.:E05TOU  cannot be made into a system file and is referenced.
   DD_SD_M.:E05TOU  is referenced.
   XUH_MACRO_C.:E05TOU  is referenced.
   DD_ERR_C.:E05TOU  is referenced.
   DD_PSUBS_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure DFR$CONVERT.

   Procedure DFR$CONVERT requires 50 words for executable code.
   Procedure DFR$CONVERT requires 18 words of local(AUTO) storage.

PL6.E3A0      #001=DFR$CONVERT File=DFR$MISC.:E05TSI                             TUE 07/29/97 14:42 Page:5    

 Object Unit name= DFR$CONVERT                                File name= DFR$MISC.:E05TOU
 UTS= JUL 29 '97 14:42:43.32 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1   Proc  even  none    50     62  DFR$CONVERT

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     1      0   yes    yes     yes      Std        2  DFR$CONVERT

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       2 DDS$VREFCOM
 yes     yes           Std       6 DDK$EVAL
                       nStd      0 X66_AUTO_2
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_AALT
                       nStd      0 X66_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                             r    S_D$                                  B_VECTNIL
PL6.E3A0      #001=DFR$CONVERT File=DFR$MISC.:E05TSI                             TUE 07/29/97 14:42 Page:6    


        1        1        /*M* DFR$CONVERT .. Input conversion module for FEPANLZ Processor */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* DMR,AND,IND=5 */
        8        8        DFR$CONVERT: PROC(VREF$, ADDRESS) ALTRET ;

      8  1 000000   000000 700200 xent  DFR$CONVERT  TSX0  ! X66_AUTO_2
         1 000001   000022 000002                    ZERO    18,2

        9        9        /*D* NAME: DFR$CONVERT
       10       10             CALL: CALL DFR$CONVERT (VREF$,ADDRESS);
       11       11             DESCRIPTION: This routine will evaluate an input 'expression node'.
       12       12                   VREF$ points to a VREF parse node.
       13       13                   The resulting value is returned in ADDRESS.
       14       14        */
       15       15        %INCLUDE CP_6;
       16       96        %INCLUDE DD_PSUBS_C;
       17      571        %INCLUDE DD_ERR_C;
       18      968        %INCLUDE XUH_MACRO_C;
       19     1052        %INCLUDE DD_SD_M;
       20     2388        %S_D;
       21     3706        /*  Parameters  */
       22     3707    1   DCL VREF$ PTR;
       23     3708    1   DCL ADDRESS SBIN WORD;
       24     3709        /* Local Auto */
       25     3710    1   DCL SEG UBIN;
       26     3711    1   DCL DESC# UBIN;
       27     3712    1   DCL NOT_IS BIT(1) ALIGNED;
       28     3713    1   DCL SAVE_DESC$ PTR;
       29     3714    1   DCL SAVE_DESC UBIN;
       30     3715        /*  Based  */
       31     3716    1   DCL BASED_BIN SBIN BASED ALIGNED;
       32     3717        %INCLUDE DD$DITEM;
PL6.E3A0      #001=DFR$CONVERT File=DFR$MISC.:E05TSI                             TUE 07/29/97 14:42 Page:7    
       12+    3820             %LIST;
       13+    3821    1        DCL SDD$ PTR;
       14+    3822    1        DCL ZITEM$ PTR;
       15+    3823    1        DCL SDD_L6$ PTR;
       16+    3824    1        DCL ZITEM_L6$ PTR;
       33     4398        %ZITEM;
       34     4470        /*  Entry  */
       35     4471    1   DCL DDS$VREFCOM ENTRY(2) ALTRET;
       36     4472    1   DCL DDK$EVAL ENTRY(6) ALTRET;
       37     4473        %EJECT;
PL6.E3A0      #001=DFR$CONVERT File=DFR$MISC.:E05TSI                             TUE 07/29/97 14:42 Page:8    
       38     4474
       39     4475    1           SAVE_DESC$ = S_D.DESC$;

   4475  1 000002   000000 470400 xsym               LDP0    S_D$
         1 000003   000041 236100                    LDQ     33,,PR0
         1 000004   200010 756100                    STQ     SAVE_DESC$,,AUTO

       40     4476    1           SAVE_DESC = S_D.DESC$ -> BASED_BIN;

   4476  1 000005   000041 471500                    LDP1    33,,PR0
         1 000006   100000 235100                    LDA     0,,PR1
         1 000007   200011 755100                    STA     SAVE_DESC,,AUTO

       41     4477    1           ZITEM$ = S_D.D$;

   4477  1 000010   000044 236100                    LDQ     36,,PR0
         1 000011   200013 756100                    STQ     ZITEM$,,AUTO

       42     4478    1           CALL DDS$VREFCOM ( VREF$ ) ALTRET(ARET);

   4478  1 000012   200003 630500                    EPPR0   @VREF$,,AUTO
         1 000013   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000014   000000 701000 xent               TSX1    DDS$VREFCOM
         1 000015   000025 702000 1                  TSX2    ARET

       43     4479    1           IF NOT ZITEM.FLAGS.MDSE.E

   4479  1 000016   200013 470500                    LDP0    ZITEM$,,AUTO
         1 000017   000001 236100                    LDQ     1,,PR0
         1 000020   040000 316003                    CANQ    16384,DU
         1 000021   000026 601000 1                  TNZ     s:4484

       44     4480    2           THEN DO;

       45     4481    2                S_D.ERROR = E@NOEVAL;      /* E@NOEVAL */

   4481  1 000022   000053 235007                    LDA     43,DL
PL6.E3A0      #001=DFR$CONVERT File=DFR$MISC.:E05TSI                             TUE 07/29/97 14:42 Page:9    
         1 000023   000000 471400 xsym               LDP1    S_D$
         1 000024   100013 755100                    STA     11,,PR1

       46     4482    2   ARET:        ALTRETURN;

   4482  1 000025   000000 702200 xent  ARET         TSX2  ! X66_AALT

       47     4483    2           END;
       48     4484    1           S_D.DESC$ = ZITEM$;

   4484  1 000026   200013 236100                    LDQ     ZITEM$,,AUTO
         1 000027   000000 471400 xsym               LDP1    S_D$
         1 000030   100041 756100                    STQ     33,,PR1

       49     4485    1           CALL DDK$EVAL ( ADDRESS, SEG, DESC#, NOT_IS ) ALTRET(ARET);

   4485  1 000031   200007 633500                    EPPR3   NOT_IS,,AUTO
         1 000032   200021 453500                    STP3    ZITEM$+6,,AUTO
         1 000033   200006 634500                    EPPR4   DESC#,,AUTO
         1 000034   200020 454500                    STP4    ZITEM$+5,,AUTO
         1 000035   200005 635500                    EPPR5   SEG,,AUTO
         1 000036   200017 455500                    STP5    ZITEM$+4,,AUTO
         1 000037   200004 236100                    LDQ     @ADDRESS,,AUTO
         1 000040   200016 756100                    STQ     ZITEM$+3,,AUTO
         1 000041   200016 630500                    EPPR0   ZITEM$+3,,AUTO
         1 000042   000022 631400 xsym               EPPR1   B_VECTNIL+18
         1 000043   000000 701000 xent               TSX1    DDK$EVAL
         1 000044   000025 702000 1                  TSX2    ARET

       50     4486    1           IF NOT_IS

   4486  1 000045   200007 234100                    SZN     NOT_IS,,AUTO
         1 000046   000053 605000 1                  TPL     s:4491

       51     4487    2           THEN DO;

       52     4488    2                S_D.ERROR = E@CANTEVAL;    /* E@CANTEVAL */
PL6.E3A0      #001=DFR$CONVERT File=DFR$MISC.:E05TSI                             TUE 07/29/97 14:42 Page:10   

   4488  1 000047   000072 235007                    LDA     58,DL
         1 000050   000000 470400 xsym               LDP0    S_D$
         1 000051   000013 755100                    STA     11,,PR0

       53     4489    2                GOTO ARET;

   4489  1 000052   000025 710000 1                  TRA     ARET

       54     4490    2           END;
       55     4491    1           S_D.DESC$ = SAVE_DESC$;

   4491  1 000053   200010 236100                    LDQ     SAVE_DESC$,,AUTO
         1 000054   000000 470400 xsym               LDP0    S_D$
         1 000055   000041 756100                    STQ     33,,PR0

       56     4492    1           S_D.DESC$ -> BASED_BIN = SAVE_DESC;

   4492  1 000056   000041 471500                    LDP1    33,,PR0
         1 000057   200011 235100                    LDA     SAVE_DESC,,AUTO
         1 000060   100000 755100                    STA     0,,PR1

       57     4493    1   END DFR$CONVERT   ;

   4493  1 000061   000000 702200 xent               TSX2  ! X66_ARET
       58     4494        %EOD ;

PL6.E3A0      #001=DFR$CONVERT File=DFR$MISC.:E05TSI                             TUE 07/29/97 14:42 Page:11   
--  Include file information  --

   DD_SRTN_C.:E05TOU  is referenced.
   DD_ACODE_C.:E05TOU  is referenced.
   DD_ICODE_C.:E05TOU  is referenced.
   DD$DITEM.:E05TOU  cannot be made into a system file and is referenced.
   DD_SD_M.:E05TOU  is referenced.
   XUH_MACRO_C.:E05TOU  is referenced.
   DD_ERR_C.:E05TOU  is referenced.
   DD_PSUBS_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure DFR$CONVERT.

   Procedure DFR$CONVERT requires 50 words for executable code.
   Procedure DFR$CONVERT requires 18 words of local(AUTO) storage.
PL6.E3A0      #001=DFR$CONVERT File=DFR$MISC.:E05TSI                             TUE 07/29/97 14:42 Page:12   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=DFR$CONVERT File=DFR$MISC.:E05TSI                             TUE 07/29/97 14:42 Page:13   
          MINI XREF LISTING

ADDRESS
      3708**DCL         8--PROC     4485<>CALL
ARET
      4482**LABEL    4478--CALLALT  4485--CALLALT  4489--GOTO
BASED_BIN
      3716**DCL      4476>>ASSIGN   4492<<ASSIGN
DDK$EVAL
      4472**DCL-ENT  4485--CALL
DDS$VREFCOM
      4471**DCL-ENT  4478--CALL
DESC#
      3711**DCL      4485<>CALL
NOT_IS
      3712**DCL      4485<>CALL     4486>>IF
SAVE_DESC
      3714**DCL      4476<<ASSIGN   4492>>ASSIGN
SAVE_DESC$
      3713**DCL      4475<<ASSIGN   4491>>ASSIGN
SEG
      3710**DCL      4485<>CALL
S_D.CURRENT_CHANNEL
      3340**DCL      3342--REDEF
S_D.D$
      2478**DCL      4477>>ASSIGN
S_D.DEBUGA
      2492**DCL      2494--REDEF
S_D.DESC$
      2472**DCL      4475>>ASSIGN   4476>>ASSIGN   4484<<ASSIGN   4491<<ASSIGN   4492>>ASSIGN
S_D.EIS
      3450**DCL      3479--REDEF
S_D.ERROR
      2421**DCL      4481<<ASSIGN   4488<<ASSIGN
PL6.E3A0      #001=DFR$CONVERT File=DFR$MISC.:E05TSI                             TUE 07/29/97 14:42 Page:14   
S_D.HOST_MESSAGE_BUF_REMOTE
      3383**DCL      3384--REDEF    3398--REDEF
S_D.JDE
      2997**DCL      2998--REDEF
S_D.L$.VALUE
      2550**DCL      2556--REDEF    2564--REDEF    2567--REDEF    2570--REDEF    2573--REDEF
S_D.L$.VALUE.L
      2551**DCL      2552--REDEF    2553--REDEF
S_D.L6_MESSAGE_BUF
      3404**DCL      3406--REDEF
S_D.OUTPUT
      3370**DCL      3372--REDEF
S_D.REMOTE_MSG.FNCC
      3389**DCL      3390--REDEF
S_D.REMOTE_MSG.STXC
      3385**DCL      3386--REDEF
S_D.REMOTE_MSG.SUBFNCC
      3393**DCL      3394--REDEF
S_D.SV
      2449**DCL      2470--REDEF
S_D$
      3701**DCL      2397--IMP-PTR  4475>>ASSIGN   4476>>ASSIGN   4477>>ASSIGN   4481>>ASSIGN   4484>>ASSIGN
      4488>>ASSIGN   4491>>ASSIGN   4492>>ASSIGN
VREF$
      3707**DCL         8--PROC     4478<>CALL
ZITEM.ADDRESS
      4433**DCL      4438--REDEF    4439--REDEF    4440--REDEF
ZITEM.FLAGS.MDSE.E
      4410**DCL      4479>>IF
ZITEM.SP.VD
      4441**DCL      4445--REDEF    4448--REDEF
ZITEM$
      3822**DCL      4399--IMP-PTR  4477<<ASSIGN   4479>>IF       4484>>ASSIGN
PL6.E3A0      #001=DFR$CONVERT File=DFR$MISC.:E05TSI                             TUE 07/29/97 14:42 Page:15   
              *** CROSS REFERENCE LISTING ***
    **     DENOTES     IDENTIFIER DEFINITION
    <<                 IDENTIFIER'S VALUE SET
    >>                 IDENTIFIER'S VALUE USED
    <>                 IDENTIFIER SET AND/OR USED
    --                 IDENTIFIER REFERENCED
PL6.E3A0      #001=DFR$CONVERT File=DFR$MISC.:E05TSI                             TUE 07/29/97 14:42 Page:16   
              MINI UREF LISTING

DFR$CONVERT       8**PROC
M$ACCT      41**DCL-ENT
M$ACTIVATE      44**DCL-ENT
M$ALIB      37**DCL-ENT
M$ASUSER      39**DCL-ENT
M$ATTACH      46**DCL-ENT
M$BADPP      64**DCL-ENT
M$CGCTL      45**DCL-ENT
M$CGINFO      45**DCL-ENT
M$CHECK      26**DCL-ENT
M$CHGUNIT      84**DCL-ENT
M$CLOSE      24**DCL-ENT
M$CLRSTK      82**DCL-ENT
M$CMDVAR      93**DCL-ENT
M$CONFIG      54**DCL-ENT
M$CORRES      29**DCL-ENT
M$CPEXIT      38**DCL-ENT
M$CVM      62**DCL-ENT
M$CVOL      27**DCL-ENT
M$DCLFLD      54**DCL-ENT
M$DEACTIVATE      44**DCL-ENT
M$DELREC      26**DCL-ENT
M$DEQ      91**DCL-ENT
M$DETACH      46**DCL-ENT
M$DEVICE      28**DCL-ENT
M$DISPLAY      91**DCL-ENT
M$DISPRES      31**DCL-ENT
M$DLIB      37**DCL-ENT
M$DRIBBLE      54**DCL-ENT
M$DRTN      82**DCL-ENT
M$DSUSER      39**DCL-ENT
M$ENQ      90**DCL-ENT
PL6.E3A0      #001=DFR$CONVERT File=DFR$MISC.:E05TSI                             TUE 07/29/97 14:42 Page:17   
M$EOM      49**DCL-ENT
M$ERASE      55**DCL-ENT
M$ERR      36**DCL-ENT
M$ERRMSG      87**DCL-ENT
M$EVENT      79**DCL-ENT
M$EXHUME      88**DCL-ENT
M$EXIT      36**DCL-ENT
M$EXTEND      28**DCL-ENT
M$FDP      60**DCL-ENT
M$FDS      59**DCL-ENT
M$FEBOOT      52**DCL-ENT
M$FECTL      53**DCL-ENT
M$FEDUMP      52**DCL-ENT
M$FID      87**DCL-ENT
M$FINDPROC      41**DCL-ENT
M$FSUSER      39**DCL-ENT
M$FVP      61**DCL-ENT
M$FWCG      45**DCL-ENT
M$GBPL      65**DCL-ENT
M$GDDL      61**DCL-ENT
M$GDP      60**DCL-ENT
M$GDS      59**DCL-ENT
M$GETDCB      30**DCL-ENT
M$GETMOUSE      70**DCL-ENT
M$GETPM      71**DCL-ENT
M$GJOB      89**DCL-ENT
M$GLINEATTR      49**DCL-ENT
M$GOODPP      64**DCL-ENT
M$GPLATEN      57**DCL-ENT
M$GPROMPT      56**DCL-ENT
M$GTRMATTR      50**DCL-ENT
M$GTRMCTL      48**DCL-ENT
M$GTRMTAB      51**DCL-ENT
M$GVP      60**DCL-ENT
M$HELP      87**DCL-ENT
M$INT      79**DCL-ENT
PL6.E3A0      #001=DFR$CONVERT File=DFR$MISC.:E05TSI                             TUE 07/29/97 14:42 Page:18   
M$INTRTN      40**DCL-ENT
M$IOQ      75**DCL-ENT
M$JOBSTATS      89**DCL-ENT
M$KEYIN      29**DCL-ENT
M$LDEV      24**DCL-ENT
M$LDTRC      37**DCL-ENT
M$LIMIT      30**DCL-ENT
M$LINES      29**DCL-ENT
M$LINK      36**DCL-ENT
M$MADMUCK      32**DCL-ENT
M$MAKUSER      63**DCL-ENT
M$MBS      31**DCL-ENT
M$MDFFLD      55**DCL-ENT
M$MERC      80**DCL-ENT
M$MERCS      81**DCL-ENT
M$MIRROR      75**DCL-ENT
M$MONINFO      92**DCL-ENT
M$MPL      65**DCL-ENT
M$NODEINFO      56**DCL-ENT
M$NXTUSR      90**DCL-ENT
M$OCMSG      88**DCL-ENT
M$OLAY      36**DCL-ENT
M$OPEN      24**DCL-ENT
M$PAS      65**DCL-ENT
M$PATHCON      88**DCL-ENT
M$PDS      59**DCL-ENT
M$PFIL      26**DCL-ENT
M$PLATEN      50**DCL-ENT
M$PRECORD      28**DCL-ENT
M$PROCNAME      41**DCL-ENT
M$PROFILE      52**DCL-ENT
M$PROMPT      48**DCL-ENT
M$RACST      32**DCL-ENT
M$RDSYSLOG      73**DCL-ENT
M$READ      25**DCL-ENT
M$RELDCB      30**DCL-ENT
PL6.E3A0      #001=DFR$CONVERT File=DFR$MISC.:E05TSI                             TUE 07/29/97 14:42 Page:19   
M$RELRES      31**DCL-ENT
M$RELSTARF      33**DCL-ENT
M$REM      33**DCL-ENT
M$RENV      80**DCL-ENT
M$REQUIRE      32**DCL-ENT
M$RETRY      81**DCL-ENT
M$RETRYS      81**DCL-ENT
M$REW      27**DCL-ENT
M$RLSFLD      55**DCL-ENT
M$RPRIV      83**DCL-ENT
M$RSPP      62**DCL-ENT
M$RSWITCH      84**DCL-ENT
M$RUE      90**DCL-ENT
M$SAD      63**DCL-ENT
M$SAVE      39**DCL-ENT
M$SCON      40**DCL-ENT
M$SCREECH      38**DCL-ENT
M$SENV      80**DCL-ENT
M$SETFMA      24**DCL-ENT
M$SETFP      53**DCL-ENT
M$SINPUT      51**DCL-ENT
M$SLCFLD      56**DCL-ENT
M$SMOUSE      70**DCL-ENT
M$SMPRT      62**DCL-ENT
M$SPRIV      83**DCL-ENT
M$SSC      63**DCL-ENT
M$SSWITCH      83**DCL-ENT
M$STATE      92**DCL-ENT
M$STD      64**DCL-ENT
M$STIMER      78**DCL-ENT
M$STLPP      61**DCL-ENT
M$STRAP      78**DCL-ENT
M$STRMATTR      50**DCL-ENT
M$STRMCTL      48**DCL-ENT
M$STRMTAB      51**DCL-ENT
M$SYMBIO      89**DCL-ENT
PL6.E3A0      #001=DFR$CONVERT File=DFR$MISC.:E05TSI                             TUE 07/29/97 14:42 Page:20   
M$SYSCON      75**DCL-ENT
M$SYSID      93**DCL-ENT
M$TDCLOSE      74**DCL-ENT
M$TDIO      74**DCL-ENT
M$TDOPEN      73**DCL-ENT
M$TDREQCPU      74**DCL-ENT
M$TEMPWROC      68**DCL-ENT
M$TIME      91**DCL-ENT
M$TRAP      78**DCL-ENT
M$TRMISC      53**DCL-ENT
M$TRMPRG      49**DCL-ENT
M$TRTN      82**DCL-ENT
M$TRUNC      25**DCL-ENT
M$TTIMER      78**DCL-ENT
M$UC      48**DCL
M$UMPL      65**DCL-ENT
M$UNFID      87**DCL-ENT
M$UNLATCH      44**DCL-ENT
M$UNSHARE      41**DCL-ENT
M$USRFIELD      84**DCL-ENT
M$VIRTUAL      59**DCL-ENT
M$WAIT      82**DCL-ENT
M$WEOF      27**DCL-ENT
M$WRITE      25**DCL-ENT
M$WRSYSLOG      73**DCL-ENT
M$XCON      79**DCL-ENT
M$XCONRTN      40**DCL-ENT
M$XEQTIME      92**DCL-ENT
M$XFLUSH      33**DCL-ENT
M$XMOUSE      70**DCL-ENT
M$XXX      36**DCL-ENT
M$YC      38**DCL-ENT
SDD$    3821**DCL
SDD_L6$    3823**DCL
ZITEM_L6$    3824**DCL

PL6.E3A0      #002=DFR$BINHEX File=DFR$MISC.:E05TSI                              TUE 07/29/97 14:42 Page:21   
       59        1        /*M* DFR$BINHEX .. Conversion from binary to Hex string   */
       60        2        /*T***********************************************************/
       61        3        /*T*                                                         */
       62        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
       63        5        /*T*                                                         */
       64        6        /*T***********************************************************/
       65        7        DFR$BINHEX: PROC (VALUE,STRING,L_ZEROS,SIZE) ;
       66        8        /*
       67        9                DFR$BINHEX accepts a binary value - VALUE and converts
       68       10                that value to a hexidecimal string returned through the
       69       11                character string - STRING.
       70       12
       71       13                INPUT  - VALUE     :UBIN
       72       14
       73       15                OUTPUT - STRING    :CHAR(16)   only the left most 8 characters
       74       16                                               are ever used, leading zeros
       75       17                                               included.
       76       18
       77       19                         L_ZEROS   :UBIN HALF  indicates number of leading zero
       78       20                                               digits.
       79       21
       80       22                         SIZE      :UBIN       indicates number of meaningful
       81       23                                               digits.
       82       24
       83       25                The routine is capible of handling negative numbers also;
       84       26                it simply ignores the left most 4 bits which contains the sign
       85       27                bit.
       86       28                Hex   --- > 8 characters .
       87       29        */
       88       30        /**/
       89       31    1   DCL CHAR_SET(0:15) CHAR(1) CONSTANT INIT (
       90       32    1         '0','1','2','3','4','5','6','7','8','9','A','B','C','D','E','F');
       91       33    1   DCL CNT UBIN(18) ALIGNED ;
       92       34    1   DCL VALUE UBIN WORD ALIGNED;
       93       35    1   DCL NIBBLE(0:8) REDEF VALUE UBIN(4) UNAL ;
       94       36    1   DCL NIBBLET(0:11) REDEF VALUE UBIN(3) UNAL ;
       95       37    1   DCL STRING CHAR(16)  ALIGNED ;
PL6.E3A0      #002=DFR$BINHEX File=DFR$MISC.:E05TSI                              TUE 07/29/97 14:42 Page:22   
       96       38    1   DCL CHAR_ARRAY(0:15) REDEF STRING CHAR(1) ;
       97       39    1   DCL REM   UBIN WORD  ALIGNED ;
       98       40    1   DCL L# BIT(1) ;
       99       41    1   DCL L_ZEROS UBIN HALF ;
      100       42    1   DCL SIZE UBIN WORD;
      101       43        /**/
      102       44    1           L# = '0'B;
      103       45    1           STRING = ' ';
      104       46    1           IF ADDR(L_ZEROS) ~= ADDR(NIL) THEN L_ZEROS = 0;
      105       47        /**/
      106       48    2           DO CNT = 1 TO 8 ;
      107       49    2                CHAR_ARRAY(CNT-1) = CHAR_SET(NIBBLE(CNT)) ;
      108       50    2                IF NIBBLE(CNT) = 0 AND ~L#
      109       51    2                THEN IF ADDR(L_ZEROS) ~= ADDR(NIL)
      110       52    2                     THEN L_ZEROS = L_ZEROS + 1;
      111       53    2                     ELSE ;
      112       54    2                ELSE L# = '1'B;
      113       55    2           END ;
      114       56    1           IF ADDR(SIZE) ~= ADDR(NIL) THEN SIZE = 8 - L_ZEROS;
      115       57    1           RETURN ;
      116       58    1   END DFR$BINHEX ;
      117       59        %EOD;

PL6.E3A0      #002=DFR$BINHEX File=DFR$MISC.:E05TSI                              TUE 07/29/97 14:42 Page:23   
--  Include file information  --

   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure DFR$BINHEX.

   Procedure DFR$BINHEX requires 66 words for executable code.
   Procedure DFR$BINHEX requires 12 words of local(AUTO) storage.

PL6.E3A0      #002=DFR$BINHEX File=DFR$MISC.:E05TSI                              TUE 07/29/97 14:42 Page:24   

 Object Unit name= DFR$BINHEX                                 File name= DFR$MISC.:E05TOU
 UTS= JUL 29 '97 14:42:53.08 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0  RoData even  UTS      4      4  DFR$BINHEX
    1   Proc  even  none    66    102  DFR$BINHEX

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     1      0   yes            yes      Std        4  DFR$BINHEX

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
                       nStd      0 X66_AUTO_4
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     B_VECTNIL
PL6.E3A0      #002=DFR$BINHEX File=DFR$MISC.:E05TSI                              TUE 07/29/97 14:42 Page:25   


       59        1        /*M* DFR$BINHEX .. Conversion from binary to Hex string   */
       60        2        /*T***********************************************************/
       61        3        /*T*                                                         */
       62        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
       63        5        /*T*                                                         */
       64        6        /*T***********************************************************/
       65        7        DFR$BINHEX: PROC (VALUE,STRING,L_ZEROS,SIZE) ;

      7  1 000000   000000 700200 xent  DFR$BINHEX   TSX0  ! X66_AUTO_4
         1 000001   000014 000004                    ZERO    12,4

       66        8        /*
       67        9                DFR$BINHEX accepts a binary value - VALUE and converts
       68       10                that value to a hexidecimal string returned through the
       69       11                character string - STRING.
       70       12
       71       13                INPUT  - VALUE     :UBIN
       72       14
       73       15                OUTPUT - STRING    :CHAR(16)   only the left most 8 characters
       74       16                                               are ever used, leading zeros
       75       17                                               included.
       76       18
       77       19                         L_ZEROS   :UBIN HALF  indicates number of leading zero
       78       20                                               digits.
       79       21
       80       22                         SIZE      :UBIN       indicates number of meaningful
       81       23                                               digits.
       82       24
       83       25                The routine is capible of handling negative numbers also;
       84       26                it simply ignores the left most 4 bits which contains the sign
       85       27                bit.
       86       28                Hex   --- > 8 characters .
       87       29        */
       88       30        /**/
       89       31    1   DCL CHAR_SET(0:15) CHAR(1) CONSTANT INIT (
       90       32    1         '0','1','2','3','4','5','6','7','8','9','A','B','C','D','E','F');
PL6.E3A0      #002=DFR$BINHEX File=DFR$MISC.:E05TSI                              TUE 07/29/97 14:42 Page:26   
       91       33    1   DCL CNT UBIN(18) ALIGNED ;
       92       34    1   DCL VALUE UBIN WORD ALIGNED;
       93       35    1   DCL NIBBLE(0:8) REDEF VALUE UBIN(4) UNAL ;
       94       36    1   DCL NIBBLET(0:11) REDEF VALUE UBIN(3) UNAL ;
       95       37    1   DCL STRING CHAR(16)  ALIGNED ;
       96       38    1   DCL CHAR_ARRAY(0:15) REDEF STRING CHAR(1) ;
       97       39    1   DCL REM   UBIN WORD  ALIGNED ;
       98       40    1   DCL L# BIT(1) ;
       99       41    1   DCL L_ZEROS UBIN HALF ;
      100       42    1   DCL SIZE UBIN WORD;
      101       43        /**/
      102       44    1           L# = '0'B;

     44  1 000002   200011 450100                    STZ     L#,,AUTO

      103       45    1           STRING = ' ';

     45  1 000003   200004 470500                    LDP0    @STRING,,AUTO
         1 000004   040100 100400                    MLR     fill='040'O
         1 000005   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         1 000006   000000 000020                    ADSC9   0,,PR0                   cn=0,n=16

      104       46    1           IF ADDR(L_ZEROS) ~= ADDR(NIL) THEN L_ZEROS = 0;

     46  1 000007   200005 236100                    LDQ     @L_ZEROS,,AUTO
         1 000010   000001 116000 xsym               CMPQ    B_VECTNIL+1
         1 000011   000015 600000 1                  TZE     s:48

     46  1 000012   000000 220003                    LDX0    0,DU
         1 000013   200005 471500                    LDP1    @L_ZEROS,,AUTO
         1 000014   100000 740100                    STX0    0,,PR1

      105       47        /**/
      106       48    2           DO CNT = 1 TO 8 ;

     48  1 000015   000001 220003                    LDX0    1,DU
         1 000016   200007 740100                    STX0    CNT,,AUTO
PL6.E3A0      #002=DFR$BINHEX File=DFR$MISC.:E05TSI                              TUE 07/29/97 14:42 Page:27   

      107       49    2                CHAR_ARRAY(CNT-1) = CHAR_SET(NIBBLE(CNT)) ;

     49  1 000017   200007 235100                    LDA     CNT,,AUTO
         1 000020   777777 375003                    ANA     -1,DU
         1 000021   000020 771000                    ARL     16
         1 000022   200003 470500                    LDP0    @VALUE,,AUTO
         1 000023   003100 061505                    CSR     bolr='003'O
         1 000024   000000 000004                    BDSC    0,A,PR0                  by=0,bit=0,n=4
         1 000025   200012 000044                    BDSC    L#+1,,AUTO               by=0,bit=0,n=36
         1 000026   200012 236100                    LDQ     L#+1,,AUTO
         1 000027   200004 471500                    LDP1    @STRING,,AUTO
         1 000030   200007 235100                    LDA     CNT,,AUTO
         1 000031   000022 771000                    ARL     18
         1 000032   040105 100406                    MLR     fill='040'O
         1 000033   000000 000001 0                  ADSC9   CHAR_SET,Q               cn=0,n=1
         1 000034   177777 600001                    ADSC9   -1,A,PR1                 cn=3,n=1

      108       50    2                IF NIBBLE(CNT) = 0 AND ~L#

     50  1 000035   000002 735000                    ALS     2
         1 000036   003100 061505                    CSR     bolr='003'O
         1 000037   000000 000004                    BDSC    0,A,PR0                  by=0,bit=0,n=4
         1 000040   200012 000044                    BDSC    L#+1,,AUTO               by=0,bit=0,n=36
         1 000041   200012 236100                    LDQ     L#+1,,AUTO
         1 000042   000000 116003                    CMPQ    0,DU
         1 000043   000060 601000 1                  TNZ     s:54
         1 000044   200011 236100                    LDQ     L#,,AUTO
         1 000045   400000 376003                    ANQ     -131072,DU
         1 000046   400000 676003                    ERQ     -131072,DU
         1 000047   000060 600000 1                  TZE     s:54

      109       51    2                THEN IF ADDR(L_ZEROS) ~= ADDR(NIL)

     51  1 000050   200005 236100                    LDQ     @L_ZEROS,,AUTO
         1 000051   000001 116000 xsym               CMPQ    B_VECTNIL+1
         1 000052   000062 600000 1                  TZE     s:55
PL6.E3A0      #002=DFR$BINHEX File=DFR$MISC.:E05TSI                              TUE 07/29/97 14:42 Page:28   

      110       52    2                     THEN L_ZEROS = L_ZEROS + 1;

     52  1 000053   200005 473500                    LDP3    @L_ZEROS,,AUTO
         1 000054   300000 220100                    LDX0    0,,PR3
         1 000055   000001 621010                    EAX1    1,X0
         1 000056   300000 741100                    STX1    0,,PR3
         1 000057   000062 710000 1                  TRA     s:55

      111       53    2                     ELSE ;
      112       54    2                ELSE L# = '1'B;

     54  1 000060   400000 236003                    LDQ     -131072,DU
         1 000061   200011 756100                    STQ     L#,,AUTO

      113       55    2           END ;

     55  1 000062   200007 220100                    LDX0    CNT,,AUTO
         1 000063   000001 621010                    EAX1    1,X0
         1 000064   200007 741100                    STX1    CNT,,AUTO
         1 000065   000011 101003                    CMPX1   9,DU
         1 000066   000017 602000 1                  TNC     s:49

      114       56    1           IF ADDR(SIZE) ~= ADDR(NIL) THEN SIZE = 8 - L_ZEROS;

     56  1 000067   200006 236100                    LDQ     @SIZE,,AUTO
         1 000070   000001 116000 xsym               CMPQ    B_VECTNIL+1
         1 000071   000101 600000 1                  TZE     s:57

     56  1 000072   200005 473500                    LDP3    @L_ZEROS,,AUTO
         1 000073   300000 236100                    LDQ     0,,PR3
         1 000074   000022 772000                    QRL     18
         1 000075   000027 676000 xsym               ERQ     B_VECTNIL+23
         1 000076   000011 036007                    ADLQ    9,DL
         1 000077   200006 474500                    LDP4    @SIZE,,AUTO
         1 000100   400000 756100                    STQ     0,,PR4

PL6.E3A0      #002=DFR$BINHEX File=DFR$MISC.:E05TSI                              TUE 07/29/97 14:42 Page:29   
      115       57    1           RETURN ;

     57  1 000101   000000 702200 xent               TSX2  ! X66_ARET

CHAR_SET
 Sect OctLoc
   0     000   060061 062063   064065 066067   070071 101102   103104 105106    0123456789ABCDEF
      116       58    1   END DFR$BINHEX ;
      117       59        %EOD;

PL6.E3A0      #002=DFR$BINHEX File=DFR$MISC.:E05TSI                              TUE 07/29/97 14:42 Page:30   
--  Include file information  --

   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure DFR$BINHEX.

   Procedure DFR$BINHEX requires 66 words for executable code.
   Procedure DFR$BINHEX requires 12 words of local(AUTO) storage.
PL6.E3A0      #002=DFR$BINHEX File=DFR$MISC.:E05TSI                              TUE 07/29/97 14:42 Page:31   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #002=DFR$BINHEX File=DFR$MISC.:E05TSI                              TUE 07/29/97 14:42 Page:32   
          MINI XREF LISTING

CHAR_ARRAY
        38**DCL        49<<ASSIGN
CHAR_SET
        31**DCL        49>>ASSIGN
CNT
        33**DCL        48<<DOINDEX    49>>ASSIGN     49>>ASSIGN     50>>IF
L#
        40**DCL        44<<ASSIGN     50>>IF         54<<ASSIGN
L_ZEROS
        41**DCL         7--PROC       46--IF         46<<ASSIGN     51--IF         52<<ASSIGN     52>>ASSIGN
        56>>ASSIGN
NIBBLE
        35**DCL        49>>ASSIGN     50>>IF
SIZE
        42**DCL         7--PROC       56--IF         56<<ASSIGN
STRING
        37**DCL         7--PROC       38--REDEF      45<<ASSIGN
VALUE
        34**DCL         7--PROC       35--REDEF      36--REDEF
PL6.E3A0      #002=DFR$BINHEX File=DFR$MISC.:E05TSI                              TUE 07/29/97 14:42 Page:33   
              *** CROSS REFERENCE LISTING ***
    **     DENOTES     IDENTIFIER DEFINITION
    <<                 IDENTIFIER'S VALUE SET
    >>                 IDENTIFIER'S VALUE USED
    <>                 IDENTIFIER SET AND/OR USED
    --                 IDENTIFIER REFERENCED
PL6.E3A0      #002=DFR$BINHEX File=DFR$MISC.:E05TSI                              TUE 07/29/97 14:42 Page:34   
              MINI UREF LISTING

DFR$BINHEX       7**PROC
NIBBLET      36**DCL
REM      39**DCL

PL6.E3A0      #003=DFR$UTSTIME File=DFR$MISC.:E05TSI                             TUE 07/29/97 14:42 Page:35   
      118        1        /*M* DFR$UTSTIME - CONVERTS A FEP UTS INTO A CHARACTER STRING */
      119        2        /*T***********************************************************/
      120        3        /*T*                                                         */
      121        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      122        5        /*T*                                                         */
      123        6        /*T***********************************************************/
      124        7        /*P* NAME: DFR$UTSTIME.
      125        8             DESCRIPTION: CONVERTS A FEP UTS INTO A CHARACTER STRING IN THE
      126        9                   FORMAT "HH:MM:SS.TT DD/MM/YY" VIA M$TIME, XDELTA DOES NOT
      127       10                   HAVE A FEP MODE, SO IT ISN'T NEEDED FOR XDELTA */
      128       11                                                /**/
      129       12        DFR$UTSTIME: PROC (UTIME, UTS) ALTRET;
      130       13                                                /**/
      131       14    1   DCL UTIME UBIN(36);
      132       15    1   DCL 1 UTS CALIGNED,
      133       16    1         2 TIME CHAR(11) CALIGNED,
      134       17    1         2 PAD CHAR(1) CALIGNED,
      135       18    1         2 DATE CHAR(8) CALIGNED;
      136       19        %INCLUDE CP_6;
      137      100        %INCLUDE CP_6_SUBS;
      138      640          %FPT_TIME (FPTN=FPT_TIME_C, STCLASS=CONSTANT, DEST=LOCAL, SOURCE=FUTS);
      139      659          %FPT_TIME (STCLASS=);
      140      678        /**/
      141      679    1           FPT_TIME = FPT_TIME_C;
      142      680    1           FPT_TIME.V_ = VECTOR (FPT_TIME.V);
      143      681    1           FPT_TIME.DATE_ = VECTOR (UTS.DATE);
      144      682    1           FPT_TIME.TIME_ = VECTOR (UTS.TIME);
      145      683    1           FPT_TIME.TSTAMP_ = VECTOR (UTIME);
      146      684    1           UTS.PAD = ' ';
      147      685    1           CALL M$TIME (FPT_TIME) ALTRET (ARET);
      148      686    1           RETURN;
      149      687    1   ARET:
      150      688    1           ALTRETURN;
      151      689    1   END DFR$UTSTIME;

PL6.E3A0      #003=DFR$UTSTIME File=DFR$MISC.:E05TSI                             TUE 07/29/97 14:42 Page:36   
--  Include file information  --

   CP_6_SUBS.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure DFR$UTSTIME.

   Procedure DFR$UTSTIME requires 30 words for executable code.
   Procedure DFR$UTSTIME requires 20 words of local(AUTO) storage.

    No errors detected in file DFR$MISC.:E05TSI    .

PL6.E3A0      #003=DFR$UTSTIME File=DFR$MISC.:E05TSI                             TUE 07/29/97 14:42 Page:37   

 Object Unit name= DFR$UTSTIME                                File name= DFR$MISC.:E05TOU
 UTS= JUL 29 '97 14:42:55.28 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1  RoData even  UTS     12     14  DFR$UTSTIME
    2   Proc  even  none    30     36  DFR$UTSTIME
    3  RoData even  none     2      2  DFR$UTSTIME

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     2      0   yes    yes     yes      Std        2  DFR$UTSTIME

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
                       nStd      0 X66_AUTO_2
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET
                       nStd      0 X66_AALT

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                                  B_VECTNIL
PL6.E3A0      #003=DFR$UTSTIME File=DFR$MISC.:E05TSI                             TUE 07/29/97 14:42 Page:38   

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID                                 NULLSID
PL6.E3A0      #003=DFR$UTSTIME File=DFR$MISC.:E05TSI                             TUE 07/29/97 14:42 Page:39   


      118        1        /*M* DFR$UTSTIME - CONVERTS A FEP UTS INTO A CHARACTER STRING */
      119        2        /*T***********************************************************/
      120        3        /*T*                                                         */
      121        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      122        5        /*T*                                                         */
      123        6        /*T***********************************************************/
      124        7        /*P* NAME: DFR$UTSTIME.
      125        8             DESCRIPTION: CONVERTS A FEP UTS INTO A CHARACTER STRING IN THE
      126        9                   FORMAT "HH:MM:SS.TT DD/MM/YY" VIA M$TIME, XDELTA DOES NOT
      127       10                   HAVE A FEP MODE, SO IT ISN'T NEEDED FOR XDELTA */
      128       11                                                /**/
      129       12        DFR$UTSTIME: PROC (UTIME, UTS) ALTRET;

     12  2 000000   000000 700200 xent  DFR$UTSTIME  TSX0  ! X66_AUTO_2
         2 000001   000024 000002                    ZERO    20,2

      130       13                                                /**/
      131       14    1   DCL UTIME UBIN(36);
      132       15    1   DCL 1 UTS CALIGNED,
      133       16    1         2 TIME CHAR(11) CALIGNED,
      134       17    1         2 PAD CHAR(1) CALIGNED,
      135       18    1         2 DATE CHAR(8) CALIGNED;
      136       19        %INCLUDE CP_6;
      137      100        %INCLUDE CP_6_SUBS;
      138      640          %FPT_TIME (FPTN=FPT_TIME_C, STCLASS=CONSTANT, DEST=LOCAL, SOURCE=FUTS);
      139      659          %FPT_TIME (STCLASS=);
      140      678        /**/
      141      679    1           FPT_TIME = FPT_TIME_C;

    679  2 000002   000100 100400                    MLR     fill='000'O
         2 000003   000000 000060 1                  ADSC9   FPT_TIME_C               cn=0,n=48
         2 000004   200006 000060                    ADSC9   FPT_TIME,,AUTO           cn=0,n=48

      142      680    1           FPT_TIME.V_ = VECTOR (FPT_TIME.V);

    680  2 000005   000000 235000 3                  LDA     0
PL6.E3A0      #003=DFR$UTSTIME File=DFR$MISC.:E05TSI                             TUE 07/29/97 14:42 Page:40   
         2 000006   200022 452500                    STP2    FPT_TIME+12,,AUTO
         2 000007   200022 236100                    LDQ     FPT_TIME+12,,AUTO
         2 000010   000020 036003                    ADLQ    16,DU
         2 000011   200006 757100                    STAQ    FPT_TIME,,AUTO

      143      681    1           FPT_TIME.DATE_ = VECTOR (UTS.DATE);

    681  2 000012   000000 235000 3                  LDA     0
         2 000013   200004 236100                    LDQ     @UTS,,AUTO
         2 000014   000003 036003                    ADLQ    3,DU
         2 000015   200010 757100                    STAQ    FPT_TIME+2,,AUTO

      144      682    1           FPT_TIME.TIME_ = VECTOR (UTS.TIME);

    682  2 000016   000001 235000 3                  LDA     1
         2 000017   200004 236100                    LDQ     @UTS,,AUTO
         2 000020   200012 757100                    STAQ    FPT_TIME+4,,AUTO

      145      683    1           FPT_TIME.TSTAMP_ = VECTOR (UTIME);

    683  2 000021   777640 235007                    LDA     -96,DL
         2 000022   200003 236100                    LDQ     @UTIME,,AUTO
         2 000023   200016 757100                    STAQ    FPT_TIME+8,,AUTO

      146      684    1           UTS.PAD = ' ';

    684  2 000024   200004 470500                    LDP0    @UTS,,AUTO
         2 000025   040100 100400                    MLR     fill='040'O
         2 000026   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         2 000027   000002 600001                    ADSC9   2,,PR0                   cn=3,n=1

      147      685    1           CALL M$TIME (FPT_TIME) ALTRET (ARET);

    685  2 000030   200006 630500                    EPPR0   FPT_TIME,,AUTO
         2 000031   420004 713400                    CLIMB   alt,+8196
         2 000032   402000 401760                    pmme    nvectors=5
         2 000033   000035 702000 2                  TSX2    ARET
PL6.E3A0      #003=DFR$UTSTIME File=DFR$MISC.:E05TSI                             TUE 07/29/97 14:42 Page:41   

      148      686    1           RETURN;

    686  2 000034   000000 702200 xent               TSX2  ! X66_ARET

      149      687    1   ARET:
      150      688    1           ALTRETURN;

    688  2 000035   000000 702200 xent  ARET         TSX2  ! X66_AALT

FPT_TIME_C
 Sect OctLoc
   1     000   000001 777640   000012 006000   000000 177640   000000 006014    ................
   1     004   000000 177640   000000 006014   000000 177640   000000 006014    ................
   1     010   000000 177640   000000 006014   006003 000000   ****** ******    ................

(unnamed)
 Sect OctLoc
   3     000   000001 777640   000002 577640                                    ........
      151      689    1   END DFR$UTSTIME;

PL6.E3A0      #003=DFR$UTSTIME File=DFR$MISC.:E05TSI                             TUE 07/29/97 14:42 Page:42   
--  Include file information  --

   CP_6_SUBS.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure DFR$UTSTIME.

   Procedure DFR$UTSTIME requires 30 words for executable code.
   Procedure DFR$UTSTIME requires 20 words of local(AUTO) storage.

    No errors detected in file DFR$MISC.:E05TSI    .
PL6.E3A0      #003=DFR$UTSTIME File=DFR$MISC.:E05TSI                             TUE 07/29/97 14:42 Page:43   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #003=DFR$UTSTIME File=DFR$MISC.:E05TSI                             TUE 07/29/97 14:42 Page:44   
          MINI XREF LISTING

ARET
       688**LABEL     685--CALLALT
FPT_TIME
       670**DCL       679<<ASSIGN    685<>CALL
FPT_TIME.DATE_
       670**DCL       681<<ASSIGN
FPT_TIME.TIME_
       672**DCL       682<<ASSIGN
FPT_TIME.TSTAMP_
       673**DCL       683<<ASSIGN
FPT_TIME.V
       674**DCL       680--ASSIGN
FPT_TIME.V_
       670**DCL       680<<ASSIGN
FPT_TIME_C
       651**DCL       679>>ASSIGN
FPT_TIME_C.V
       655**DCL       651--DCLINIT
M$TIME
        95**DCL-ENT   685--CALL
UTIME
        14**DCL        12--PROC      683--ASSIGN
UTS
        15**DCL        12--PROC
UTS.DATE
        18**DCL       681--ASSIGN
UTS.PAD
        17**DCL       684<<ASSIGN
UTS.TIME
        16**DCL       682--ASSIGN
PL6.E3A0      #003=DFR$UTSTIME File=DFR$MISC.:E05TSI                             TUE 07/29/97 14:42 Page:45   
              *** CROSS REFERENCE LISTING ***
    **     DENOTES     IDENTIFIER DEFINITION
    <<                 IDENTIFIER'S VALUE SET
    >>                 IDENTIFIER'S VALUE USED
    <>                 IDENTIFIER SET AND/OR USED
    --                 IDENTIFIER REFERENCED
PL6.E3A0      #003=DFR$UTSTIME File=DFR$MISC.:E05TSI                             TUE 07/29/97 14:42 Page:46   
              MINI UREF LISTING

DFR$UTSTIME      12**PROC
M$ACCT      45**DCL-ENT
M$ACTIVATE      48**DCL-ENT
M$ALIB      41**DCL-ENT
M$ASUSER      43**DCL-ENT
M$ATTACH      50**DCL-ENT
M$BADPP      68**DCL-ENT
M$CGCTL      49**DCL-ENT
M$CGINFO      49**DCL-ENT
M$CHECK      30**DCL-ENT
M$CHGUNIT      88**DCL-ENT
M$CLOSE      28**DCL-ENT
M$CLRSTK      86**DCL-ENT
M$CMDVAR      97**DCL-ENT
M$CONFIG      58**DCL-ENT
M$CORRES      33**DCL-ENT
M$CPEXIT      42**DCL-ENT
M$CVM      66**DCL-ENT
M$CVOL      31**DCL-ENT
M$DCLFLD      58**DCL-ENT
M$DEACTIVATE      48**DCL-ENT
M$DELREC      30**DCL-ENT
M$DEQ      95**DCL-ENT
M$DETACH      50**DCL-ENT
M$DEVICE      32**DCL-ENT
M$DISPLAY      95**DCL-ENT
M$DISPRES      35**DCL-ENT
M$DLIB      41**DCL-ENT
M$DRIBBLE      58**DCL-ENT
M$DRTN      86**DCL-ENT
M$DSUSER      43**DCL-ENT
M$ENQ      94**DCL-ENT
PL6.E3A0      #003=DFR$UTSTIME File=DFR$MISC.:E05TSI                             TUE 07/29/97 14:42 Page:47   
M$EOM      53**DCL-ENT
M$ERASE      59**DCL-ENT
M$ERR      40**DCL-ENT
M$ERRMSG      91**DCL-ENT
M$EVENT      83**DCL-ENT
M$EXHUME      92**DCL-ENT
M$EXIT      40**DCL-ENT
M$EXTEND      32**DCL-ENT
M$FDP      64**DCL-ENT
M$FDS      63**DCL-ENT
M$FEBOOT      56**DCL-ENT
M$FECTL      57**DCL-ENT
M$FEDUMP      56**DCL-ENT
M$FID      91**DCL-ENT
M$FINDPROC      45**DCL-ENT
M$FSUSER      43**DCL-ENT
M$FVP      65**DCL-ENT
M$FWCG      49**DCL-ENT
M$GBPL      69**DCL-ENT
M$GDDL      65**DCL-ENT
M$GDP      64**DCL-ENT
M$GDS      63**DCL-ENT
M$GETDCB      34**DCL-ENT
M$GETMOUSE      74**DCL-ENT
M$GETPM      75**DCL-ENT
M$GJOB      93**DCL-ENT
M$GLINEATTR      53**DCL-ENT
M$GOODPP      68**DCL-ENT
M$GPLATEN      61**DCL-ENT
M$GPROMPT      60**DCL-ENT
M$GTRMATTR      54**DCL-ENT
M$GTRMCTL      52**DCL-ENT
M$GTRMTAB      55**DCL-ENT
M$GVP      64**DCL-ENT
M$HELP      91**DCL-ENT
M$INT      83**DCL-ENT
PL6.E3A0      #003=DFR$UTSTIME File=DFR$MISC.:E05TSI                             TUE 07/29/97 14:42 Page:48   
M$INTRTN      44**DCL-ENT
M$IOQ      79**DCL-ENT
M$JOBSTATS      93**DCL-ENT
M$KEYIN      33**DCL-ENT
M$LDEV      28**DCL-ENT
M$LDTRC      41**DCL-ENT
M$LIMIT      34**DCL-ENT
M$LINES      33**DCL-ENT
M$LINK      40**DCL-ENT
M$MADMUCK      36**DCL-ENT
M$MAKUSER      67**DCL-ENT
M$MBS      35**DCL-ENT
M$MDFFLD      59**DCL-ENT
M$MERC      84**DCL-ENT
M$MERCS      85**DCL-ENT
M$MIRROR      79**DCL-ENT
M$MONINFO      96**DCL-ENT
M$MPL      69**DCL-ENT
M$NODEINFO      60**DCL-ENT
M$NXTUSR      94**DCL-ENT
M$OCMSG      92**DCL-ENT
M$OLAY      40**DCL-ENT
M$OPEN      28**DCL-ENT
M$PAS      69**DCL-ENT
M$PATHCON      92**DCL-ENT
M$PDS      63**DCL-ENT
M$PFIL      30**DCL-ENT
M$PLATEN      54**DCL-ENT
M$PRECORD      32**DCL-ENT
M$PROCNAME      45**DCL-ENT
M$PROFILE      56**DCL-ENT
M$PROMPT      52**DCL-ENT
M$RACST      36**DCL-ENT
M$RDSYSLOG      77**DCL-ENT
M$READ      29**DCL-ENT
M$RELDCB      34**DCL-ENT
PL6.E3A0      #003=DFR$UTSTIME File=DFR$MISC.:E05TSI                             TUE 07/29/97 14:42 Page:49   
M$RELRES      35**DCL-ENT
M$RELSTARF      37**DCL-ENT
M$REM      37**DCL-ENT
M$RENV      84**DCL-ENT
M$REQUIRE      36**DCL-ENT
M$RETRY      85**DCL-ENT
M$RETRYS      85**DCL-ENT
M$REW      31**DCL-ENT
M$RLSFLD      59**DCL-ENT
M$RPRIV      87**DCL-ENT
M$RSPP      66**DCL-ENT
M$RSWITCH      88**DCL-ENT
M$RUE      94**DCL-ENT
M$SAD      67**DCL-ENT
M$SAVE      43**DCL-ENT
M$SCON      44**DCL-ENT
M$SCREECH      42**DCL-ENT
M$SENV      84**DCL-ENT
M$SETFMA      28**DCL-ENT
M$SETFP      57**DCL-ENT
M$SINPUT      55**DCL-ENT
M$SLCFLD      60**DCL-ENT
M$SMOUSE      74**DCL-ENT
M$SMPRT      66**DCL-ENT
M$SPRIV      87**DCL-ENT
M$SSC      67**DCL-ENT
M$SSWITCH      87**DCL-ENT
M$STATE      96**DCL-ENT
M$STD      68**DCL-ENT
M$STIMER      82**DCL-ENT
M$STLPP      65**DCL-ENT
M$STRAP      82**DCL-ENT
M$STRMATTR      54**DCL-ENT
M$STRMCTL      52**DCL-ENT
M$STRMTAB      55**DCL-ENT
M$SYMBIO      93**DCL-ENT
PL6.E3A0      #003=DFR$UTSTIME File=DFR$MISC.:E05TSI                             TUE 07/29/97 14:42 Page:50   
M$SYSCON      79**DCL-ENT
M$SYSID      97**DCL-ENT
M$TDCLOSE      78**DCL-ENT
M$TDIO      78**DCL-ENT
M$TDOPEN      77**DCL-ENT
M$TDREQCPU      78**DCL-ENT
M$TEMPWROC      72**DCL-ENT
M$TRAP      82**DCL-ENT
M$TRMISC      57**DCL-ENT
M$TRMPRG      53**DCL-ENT
M$TRTN      86**DCL-ENT
M$TRUNC      29**DCL-ENT
M$TTIMER      82**DCL-ENT
M$UC      52**DCL
M$UMPL      69**DCL-ENT
M$UNFID      91**DCL-ENT
M$UNLATCH      48**DCL-ENT
M$UNSHARE      45**DCL-ENT
M$USRFIELD      88**DCL-ENT
M$VIRTUAL      63**DCL-ENT
M$WAIT      86**DCL-ENT
M$WEOF      31**DCL-ENT
M$WRITE      29**DCL-ENT
M$WRSYSLOG      77**DCL-ENT
M$XCON      83**DCL-ENT
M$XCONRTN      44**DCL-ENT
M$XEQTIME      96**DCL-ENT
M$XFLUSH      37**DCL-ENT
M$XMOUSE      74**DCL-ENT
M$XXX      40**DCL-ENT
M$YC      42**DCL-ENT
