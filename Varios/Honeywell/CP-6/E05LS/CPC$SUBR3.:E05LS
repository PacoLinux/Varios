VERSION E05

PL6.E3A0      #001=CPC$DEQUEUE File=CPC$SUBR3.:E05TSI                            TUE 07/29/97 11:29 Page:1    
        1        1        /*M* CPC$DEQUEUE, CPC$ENQUEUE, CPC$QUIT, CPC$SCREECH */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X*  DMC,DFC   */
        8        8        /**********************************************************************/
        9        9        /*F*   NAME:   CPC$DEQUEUE
       10       10               PURPOSE: Dequeues a specified resource
       11       11               DESCRIPTION: The specified resource is dequeued via an m$deq pmme.
       12       12        */
       13       13        /*D*   NAME:   CPC$DEQUEUE
       14       14               CALL:   CALL CPC$DEQUEUE(DEQ_DCB#,DEQ_RNAME)
       15       15               INTERFACE:
       16       16               INPUT:  DEQ_DCB# - DCB opened to resource
       17       17                       DEQ_RNAME - resource name
       18       18               OUTPUT: B$JIT.USRERR - contains error code if error occurred
       19       19               DESCRIPTION: A dequeue fpt is initialized with the specified
       20       20                       parameters and a dequeue pmme executed.
       21       21        */
       22       22        /**********************************************************************/
       23       23        CPC$DEQUEUE: PROC(DEQ_DCB#,DEQ_RNAME) ALTRET;
       24       24                   %INCLUDE B_MACROS_C;
       25      135                   %INCLUDE B$JIT;
       26      425                   %INCLUDE CP_6;
       27      506                   %INCLUDE CP_6_SUBS;
       28     1046                   %INCLUDE XU_MACRO_C;
       29     4152                   %INCLUDE CP_DATA_R;
       30     6715        /***** parameters *****/
       31     6716    1   DCL DEQ_DCB# UBIN WORD;
       32     6717        %TEXTC(NAME = DEQ_RNAME,STCLASS = " ");
       33     6722        /***** fpts *****/
       34     6723        %FPT_DEQ(FPTN = FPT_DEQ,STCLASS = AUTO);
       35     6740          /***** Based structures *****/
       36     6741        %B$TCB (STCLASS="BASED(B$TCB$)");
       37     6744        %B$ALT;
PL6.E3A0      #001=CPC$DEQUEUE File=CPC$SUBR3.:E05TSI                            TUE 07/29/97 11:29 Page:2    
       38     6752        %EJECT;
PL6.E3A0      #001=CPC$DEQUEUE File=CPC$SUBR3.:E05TSI                            TUE 07/29/97 11:29 Page:3    
       39     6753        /*
       40     6754             ***** Init. Deq fpt
       41     6755        */
       42     6756    1     FPT_DEQ = CFPT_DEQ;
       43     6757    1     FPT_DEQ.V_ = VECTOR(FPT_DEQ.V);
       44     6758    1     FPT_DEQ.V.DCB# = DEQ_DCB#;
       45     6759    1     FPT_DEQ.RNAME_ = VECTOR(DEQ_RNAME);
       46     6760    1     CALL M$DEQ(FPT_DEQ) ALTRET(E_DEQUEUE);
       47     6761    1     RETURN;
       48     6762    1   E_DEQUEUE:
       49     6763    1     B$JIT.USRERR = B$TCB.ALT$ -> B$ALT.ERR;
       50     6764    1     ALTRETURN;
       51     6765    1   END CPC$DEQUEUE;
       52     6766                   %EOD;

PL6.E3A0      #001=CPC$DEQUEUE File=CPC$SUBR3.:E05TSI                            TUE 07/29/97 11:29 Page:4    
--  Include file information  --

   CP_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT.:E05TOU  cannot be made into a system file and is referenced.
   B_MACROS_C.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure CPC$DEQUEUE.

   Procedure CPC$DEQUEUE requires 35 words for executable code.
   Procedure CPC$DEQUEUE requires 16 words of local(AUTO) storage.

PL6.E3A0      #001=CPC$DEQUEUE File=CPC$SUBR3.:E05TSI                            TUE 07/29/97 11:29 Page:5    

 Object Unit name= CPC$DEQUEUE                                File name= CPC$SUBR3.:E05TOU
 UTS= JUL 29 '97 11:29:30.12 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1   Proc  even  none    35     43  CPC$DEQUEUE
    2  RoData even  none     1      1  CPC$DEQUEUE

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     1      0   yes    yes     yes      Std        2  CPC$DEQUEUE

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
                       nStd      0 X66_AUTO_2
                       nStd      0 X66_ARET
                       nStd      0 X66_AALT

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                                  CFPT_DEQ                         r    B$JIT$
r    B$TCB$
PL6.E3A0      #001=CPC$DEQUEUE File=CPC$SUBR3.:E05TSI                            TUE 07/29/97 11:29 Page:6    


        1        1        /*M* CPC$DEQUEUE, CPC$ENQUEUE, CPC$QUIT, CPC$SCREECH */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X*  DMC,DFC   */
        8        8        /**********************************************************************/
        9        9        /*F*   NAME:   CPC$DEQUEUE
       10       10               PURPOSE: Dequeues a specified resource
       11       11               DESCRIPTION: The specified resource is dequeued via an m$deq pmme.
       12       12        */
       13       13        /*D*   NAME:   CPC$DEQUEUE
       14       14               CALL:   CALL CPC$DEQUEUE(DEQ_DCB#,DEQ_RNAME)
       15       15               INTERFACE:
       16       16               INPUT:  DEQ_DCB# - DCB opened to resource
       17       17                       DEQ_RNAME - resource name
       18       18               OUTPUT: B$JIT.USRERR - contains error code if error occurred
       19       19               DESCRIPTION: A dequeue fpt is initialized with the specified
       20       20                       parameters and a dequeue pmme executed.
       21       21        */
       22       22        /**********************************************************************/
       23       23        CPC$DEQUEUE: PROC(DEQ_DCB#,DEQ_RNAME) ALTRET;

     23  1 000000   000000 700200 xent  CPC$DEQUEUE  TSX0  ! X66_AUTO_2
         1 000001   000020 000002                    ZERO    16,2

       24       24                   %INCLUDE B_MACROS_C;
       25      135                   %INCLUDE B$JIT;
       26      425                   %INCLUDE CP_6;
       27      506                   %INCLUDE CP_6_SUBS;
       28     1046                   %INCLUDE XU_MACRO_C;
       29     4152                   %INCLUDE CP_DATA_R;
       30     6715        /***** parameters *****/
       31     6716    1   DCL DEQ_DCB# UBIN WORD;
       32     6717        %TEXTC(NAME = DEQ_RNAME,STCLASS = " ");
PL6.E3A0      #001=CPC$DEQUEUE File=CPC$SUBR3.:E05TSI                            TUE 07/29/97 11:29 Page:7    
       33     6722        /***** fpts *****/
       34     6723        %FPT_DEQ(FPTN = FPT_DEQ,STCLASS = AUTO);
       35     6740          /***** Based structures *****/
       36     6741        %B$TCB (STCLASS="BASED(B$TCB$)");
       37     6744        %B$ALT;
       38     6752        %EJECT;
PL6.E3A0      #001=CPC$DEQUEUE File=CPC$SUBR3.:E05TSI                            TUE 07/29/97 11:29 Page:8    
       39     6753        /*
       40     6754             ***** Init. Deq fpt
       41     6755        */
       42     6756    1     FPT_DEQ = CFPT_DEQ;

   6756  1 000002   000100 100400                    MLR     fill='000'O
         1 000003   000000 000040 xsym               ADSC9   CFPT_DEQ                 cn=0,n=32
         1 000004   200006 000040                    ADSC9   FPT_DEQ,,AUTO            cn=0,n=32

       43     6757    1     FPT_DEQ.V_ = VECTOR(FPT_DEQ.V);

   6757  1 000005   000000 235000 2                  LDA     0
         1 000006   200016 452500                    STP2    FPT_DEQ+8,,AUTO
         1 000007   200016 236100                    LDQ     FPT_DEQ+8,,AUTO
         1 000010   000014 036003                    ADLQ    12,DU
         1 000011   200006 757100                    STAQ    FPT_DEQ,,AUTO

       44     6758    1     FPT_DEQ.V.DCB# = DEQ_DCB#;

   6758  1 000012   200003 470500                    LDP0    @DEQ_DCB#,,AUTO
         1 000013   000000 720100                    LXL0    0,,PR0
         1 000014   200014 740100                    STX0    FPT_DEQ+6,,AUTO

       45     6759    1     FPT_DEQ.RNAME_ = VECTOR(DEQ_RNAME);

   6759  1 000015   200004 471500                    LDP1    @DEQ_RNAME,,AUTO
         1 000016   000100 101500                    MRL     fill='000'O
         1 000017   100000 000001                    ADSC9   0,,PR1                   cn=0,n=1
         1 000020   200016 000002                    ADSC9   FPT_DEQ+8,,AUTO          cn=0,n=2
         1 000021   200016 221100                    LDX1    FPT_DEQ+8,,AUTO
         1 000022   000001 622011                    EAX2    1,X1
         1 000023   000000 635012                    EAA     0,X2
         1 000024   000002 771000                    ARL     2
         1 000025   000140 135007                    SBLA    96,DL
         1 000026   200004 236100                    LDQ     @DEQ_RNAME,,AUTO
         1 000027   200010 757100                    STAQ    FPT_DEQ+2,,AUTO

PL6.E3A0      #001=CPC$DEQUEUE File=CPC$SUBR3.:E05TSI                            TUE 07/29/97 11:29 Page:9    
       46     6760    1     CALL M$DEQ(FPT_DEQ) ALTRET(E_DEQUEUE);

   6760  1 000030   200006 630500                    EPPR0   FPT_DEQ,,AUTO
         1 000031   420003 713400                    CLIMB   alt,+8195
         1 000032   401000 401760                    pmme    nvectors=3
         1 000033   000035 702000 1                  TSX2    E_DEQUEUE

       47     6761    1     RETURN;

   6761  1 000034   000000 702200 xent               TSX2  ! X66_ARET

       48     6762    1   E_DEQUEUE:
       49     6763    1     B$JIT.USRERR = B$TCB.ALT$ -> B$ALT.ERR;

   6763  1 000035   000000 470400 xsym  E_DEQUEUE    LDP0    B$TCB$
         1 000036   000000 471500                    LDP1    0,,PR0
         1 000037   100102 236100                    LDQ     66,,PR1
         1 000040   000000 473400 xsym               LDP3    B$JIT$
         1 000041   300144 756100                    STQ     100,,PR3

       50     6764    1     ALTRETURN;

   6764  1 000042   000000 702200 xent               TSX2  ! X66_AALT
       51     6765    1   END CPC$DEQUEUE;
       52     6766                   %EOD;

PL6.E3A0      #001=CPC$DEQUEUE File=CPC$SUBR3.:E05TSI                            TUE 07/29/97 11:29 Page:10   
--  Include file information  --

   CP_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT.:E05TOU  cannot be made into a system file and is referenced.
   B_MACROS_C.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure CPC$DEQUEUE.
PL6.E3A0      #001=CPC$DEQUEUE File=CPC$SUBR3.:E05TSI                            TUE 07/29/97 11:29 Page:11   

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @DEQ_DCB#                  4-0-0/w PTR         r     1 @DEQ_RNAME
    *0-0-0/w UBIN        r     1 DEQ_DCB#                  *0-0-0/c ASTR(9)     r     1 DEQ_RNAME
     6-0-0/d STRC(288)   r     1 FPT_DEQ

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 B$JIT$                     0-0-0/w PTR         r     1 B$TCB$
     0-0-0/d STRC(288)   r     1 CFPT_DEQ

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(2448)  r     1 B$ALT                      0-0-0/d STRC(8856)  r     1 B$JIT
     0-0-0/w STRC(144)   r     1 B$TCB


   Procedure CPC$DEQUEUE requires 35 words for executable code.
   Procedure CPC$DEQUEUE requires 16 words of local(AUTO) storage.
PL6.E3A0      #001=CPC$DEQUEUE File=CPC$SUBR3.:E05TSI                            TUE 07/29/97 11:29 Page:12   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=CPC$DEQUEUE File=CPC$SUBR3.:E05TSI                            TUE 07/29/97 11:29 Page:13   
          MINI XREF LISTING

B$ALT.CODE
      6746**DCL      6746--REDEF    6747--REDEF    6747--REDEF
B$ALT.ERR
      6747**DCL      6763>>ASSIGN
B$ALT.ERR.ERR#
      6748**DCL      6748--REDEF
B$ALT.EVID
      6747**DCL      6747--REDEF    6747--REDEF
B$JIT.CPFLAGS1.SLEAZE
       243**DCL       243--REDEF
B$JIT.ERR.MID
       150**DCL       150--REDEF
B$JIT.JRESPEAK
       311**DCL       312--REDEF
B$JIT.ORIGINATOR_PORT.FROM_CR
       420**DCL       420--REDEF     421--REDEF
B$JIT.PNR
       324**DCL       324--REDEF
B$JIT.TSLINE
       418**DCL       419--REDEF
B$JIT.USRERR
       285**DCL      6763<<ASSIGN
B$JIT$
      6648**DCL       144--IMP-PTR  6763>>ASSIGN
B$TCB.ALT$
      6742**DCL      6763>>ASSIGN
B$TCB$
      6650**DCL      6742--IMP-PTR  6763>>ASSIGN
CAMR_REC.ACSVEH_
      5687**DCL      5688--REDEF
CAMR_REC.ALTKEYS_
      5693**DCL      5694--REDEF    5694--REDEF
PL6.E3A0      #001=CPC$DEQUEUE File=CPC$SUBR3.:E05TSI                            TUE 07/29/97 11:29 Page:14   
CAMR_REC.HDR_
      5692**DCL      5693--REDEF
CAMR_REC.TAB_
      5691**DCL      5692--REDEF
CAMR_REC.UHL_
      5685**DCL      5686--REDEF    5686--REDEF
CAMR_REC.V.FSN#
      5725**DCL      5725--REDEF    5725--REDEF
CAMR_REC.WSN_
      5691**DCL      5691--REDEF
CFPT_CLOSE.SN_
      4529**DCL      4529--REDEF
CFPT_CLOSE.UTL_
      4530**DCL      4530--REDEF
CFPT_CLOSE.V.EXPIRE#
      4544**DCL      4544--REDEF
CFPT_CLOSE.V.TYPE#
      4542**DCL      4542--REDEF
CFPT_CLOSE.V.XTNSIZE#
      4539**DCL      4539--REDEF    4541--REDEF
CFPT_DEQ
      4774**DCL      6756>>ASSIGN
CFPT_OPEN.ACSVEH_
      4464**DCL      4465--REDEF
CFPT_OPEN.ALTKEYS_
      4470**DCL      4471--REDEF    4471--REDEF
CFPT_OPEN.HDR_
      4469**DCL      4470--REDEF
CFPT_OPEN.TAB_
      4468**DCL      4469--REDEF
CFPT_OPEN.UHL_
      4462**DCL      4463--REDEF    4463--REDEF
CFPT_OPEN.V.FSN#
      4502**DCL      4502--REDEF    4502--REDEF
CFPT_OPEN.WSN_
      4468**DCL      4468--REDEF
PL6.E3A0      #001=CPC$DEQUEUE File=CPC$SUBR3.:E05TSI                            TUE 07/29/97 11:29 Page:15   
CFPT_READ.STATION_
      4568**DCL      4569--REDEF
CFPT_READ.V.DVBYTE.REREAD#
      4580**DCL      4580--REDEF
CFPT_READ.V.INDX#
      4578**DCL      4578--REDEF
CFPT_READUC.STATION_
      4938**DCL      4939--REDEF
CFPT_READUC.V.DVBYTE.REREAD#
      4950**DCL      4950--REDEF
CFPT_READUC.V.INDX#
      4948**DCL      4948--REDEF
CFPT_TRTN.V.IR#
      5174**DCL      5175--REDEF
CFPT_WRITE.STATION_
      4606**DCL      4606--REDEF
CFPT_WRITE.V.DVBYTE.VFC#
      4613**DCL      4613--REDEF
CFPT_WRITEUC.STATION_
      4906**DCL      4906--REDEF
CFPT_WRITEUC.V.DVBYTE.VFC#
      4913**DCL      4913--REDEF
CFPT_XXX.V.STEPCC#
      5886**DCL      5886--REDEF
CGETCMD.OUT$
      5907**DCL      5913--REDEF
CVLP_TRMCTL.BREAKCOUNT
      5498**DCL      5499--REDEF
CVLP_WINDOW.FWINDOW#
      5594**DCL      5594--REDEF    5595--REDEF
DEQ_DCB#
      6716**DCL        23--PROC     6758>>ASSIGN
DEQ_RNAME
      6718**DCL        23--PROC     6759--ASSIGN
DEQ_RNAME.SIZ
      6719**DCL      6720--IMP-SIZ  6759>>ASSIGN
PL6.E3A0      #001=CPC$DEQUEUE File=CPC$SUBR3.:E05TSI                            TUE 07/29/97 11:29 Page:16   
E_DEQUEUE
      6763**LABEL    6760--CALLALT
FPT_DEQ
      6734**DCL      6756<<ASSIGN   6760<>CALL
FPT_DEQ.RNAME_
      6734**DCL      6759<<ASSIGN
FPT_DEQ.V
      6735**DCL      6757--ASSIGN
FPT_DEQ.V.DCB#
      6735**DCL      6758<<ASSIGN
FPT_DEQ.V_
      6734**DCL      6757<<ASSIGN
M$DEQ
       501**DCL-ENT  6760--CALL

PL6.E3A0      #002=CPC$ENQUEUE File=CPC$SUBR3.:E05TSI                            TUE 07/29/97 11:29 Page:17   
       53        1        /*T***********************************************************/
       54        2        /*T*                                                         */
       55        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
       56        4        /*T*                                                         */
       57        5        /*T***********************************************************/
       58        6        /**********************************************************************/
       59        7        /*F*   NAME:   CPC$ENQUEUE
       60        8               PURPOSE: Enqueues a specified resource
       61        9               DESCRIPTION: The specified resource is enqueued via the m$enq
       62       10                       pmme.
       63       11        */
       64       12        /*D*   NAME:   CPC$ENQUEUE
       65       13               CALL:   CALL CPC$ENQUEUE(ENQ_DCB#,ENQ_RNAME)
       66       14               INTERFACE:
       67       15               INPUT:  ENQ_DCB# - DCB opened to resource
       68       16                       ENQ_RNAME - resource name
       69       17               OUTPUT: B$JIT.USRERR - contains error code if error occurred
       70       18               DESCRIPTION: An enqueue fpt is initialized with the specified
       71       19                       parameters and an enqueue pmme executed. The user is
       72       20                       queued as exclusive. The specified dcb is expected to be
       73       21                       open to the specified resource prior to calling the routine.
       74       22        */
       75       23        /**********************************************************************/
       76       24        CPC$ENQUEUE: PROC(ENQ_DCB#,ENQ_RNAME) ALTRET;
       77       25                   %INCLUDE B_MACROS_C;
       78      136                   %INCLUDE B$JIT;
       79      426                   %INCLUDE CP_6;
       80      507                   %INCLUDE CP_6_SUBS;
       81     1047                   %INCLUDE XU_MACRO_C;
       82     4153                   %INCLUDE CP_DATA_R;
       83     6716        /***** parameters *****/
       84     6717    1   DCL ENQ_DCB# UBIN WORD;
       85     6718        %TEXTC(NAME = ENQ_RNAME,STCLASS = " ");
       86     6723        /***** fpts *****/
       87     6724        %FPT_ENQ(FPTN = FPT_ENQ,STCLASS = AUTO);
       88     6742          /***** Based structures *****/
       89     6743        %B$TCB (STCLASS="BASED(B$TCB$)");
PL6.E3A0      #002=CPC$ENQUEUE File=CPC$SUBR3.:E05TSI                            TUE 07/29/97 11:29 Page:18   
       90     6746        %B$ALT;
       91     6754        %EJECT;
PL6.E3A0      #002=CPC$ENQUEUE File=CPC$SUBR3.:E05TSI                            TUE 07/29/97 11:29 Page:19   
       92     6755        /*
       93     6756             ***** Init. Enq fpt
       94     6757        */
       95     6758    1     FPT_ENQ = CFPT_ENQ;
       96     6759    1     FPT_ENQ.V_ = VECTOR(FPT_ENQ.V);
       97     6760    1     FPT_ENQ.V.DCB# = ENQ_DCB#;
       98     6761    1     FPT_ENQ.RNAME_ = VECTOR(ENQ_RNAME);
       99     6762    1     FPT_ENQ.V.SHARE# = %NONE#;
      100     6763    1     CALL M$ENQ(FPT_ENQ) ALTRET(E_ENQUEUE);
      101     6764    1     RETURN;
      102     6765    1   E_ENQUEUE:
      103     6766    1     B$JIT.USRERR = B$TCB.ALT$ -> B$ALT.ERR;
      104     6767    1     ALTRETURN;
      105     6768    1   END CPC$ENQUEUE;
      106     6769        %EOD;

PL6.E3A0      #002=CPC$ENQUEUE File=CPC$SUBR3.:E05TSI                            TUE 07/29/97 11:29 Page:20   
--  Include file information  --

   CP_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT.:E05TOU  cannot be made into a system file and is referenced.
   B_MACROS_C.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure CPC$ENQUEUE.

   Procedure CPC$ENQUEUE requires 37 words for executable code.
   Procedure CPC$ENQUEUE requires 18 words of local(AUTO) storage.

PL6.E3A0      #002=CPC$ENQUEUE File=CPC$SUBR3.:E05TSI                            TUE 07/29/97 11:29 Page:21   

 Object Unit name= CPC$ENQUEUE                                File name= CPC$SUBR3.:E05TOU
 UTS= JUL 29 '97 11:29:50.72 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1   Proc  even  none    37     45  CPC$ENQUEUE
    2  RoData even  none     1      1  CPC$ENQUEUE

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     1      0   yes    yes     yes      Std        2  CPC$ENQUEUE

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
                       nStd      0 X66_AUTO_2
                       nStd      0 X66_ARET
                       nStd      0 X66_AALT

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                                  CFPT_ENQ                         r    B$JIT$
r    B$TCB$
PL6.E3A0      #002=CPC$ENQUEUE File=CPC$SUBR3.:E05TSI                            TUE 07/29/97 11:29 Page:22   


       53        1        /*T***********************************************************/
       54        2        /*T*                                                         */
       55        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
       56        4        /*T*                                                         */
       57        5        /*T***********************************************************/
       58        6        /**********************************************************************/
       59        7        /*F*   NAME:   CPC$ENQUEUE
       60        8               PURPOSE: Enqueues a specified resource
       61        9               DESCRIPTION: The specified resource is enqueued via the m$enq
       62       10                       pmme.
       63       11        */
       64       12        /*D*   NAME:   CPC$ENQUEUE
       65       13               CALL:   CALL CPC$ENQUEUE(ENQ_DCB#,ENQ_RNAME)
       66       14               INTERFACE:
       67       15               INPUT:  ENQ_DCB# - DCB opened to resource
       68       16                       ENQ_RNAME - resource name
       69       17               OUTPUT: B$JIT.USRERR - contains error code if error occurred
       70       18               DESCRIPTION: An enqueue fpt is initialized with the specified
       71       19                       parameters and an enqueue pmme executed. The user is
       72       20                       queued as exclusive. The specified dcb is expected to be
       73       21                       open to the specified resource prior to calling the routine.
       74       22        */
       75       23        /**********************************************************************/
       76       24        CPC$ENQUEUE: PROC(ENQ_DCB#,ENQ_RNAME) ALTRET;

     24  1 000000   000000 700200 xent  CPC$ENQUEUE  TSX0  ! X66_AUTO_2
         1 000001   000022 000002                    ZERO    18,2

       77       25                   %INCLUDE B_MACROS_C;
       78      136                   %INCLUDE B$JIT;
       79      426                   %INCLUDE CP_6;
       80      507                   %INCLUDE CP_6_SUBS;
       81     1047                   %INCLUDE XU_MACRO_C;
       82     4153                   %INCLUDE CP_DATA_R;
       83     6716        /***** parameters *****/
       84     6717    1   DCL ENQ_DCB# UBIN WORD;
PL6.E3A0      #002=CPC$ENQUEUE File=CPC$SUBR3.:E05TSI                            TUE 07/29/97 11:29 Page:23   
       85     6718        %TEXTC(NAME = ENQ_RNAME,STCLASS = " ");
       86     6723        /***** fpts *****/
       87     6724        %FPT_ENQ(FPTN = FPT_ENQ,STCLASS = AUTO);
       88     6742          /***** Based structures *****/
       89     6743        %B$TCB (STCLASS="BASED(B$TCB$)");
       90     6746        %B$ALT;
       91     6754        %EJECT;
PL6.E3A0      #002=CPC$ENQUEUE File=CPC$SUBR3.:E05TSI                            TUE 07/29/97 11:29 Page:24   
       92     6755        /*
       93     6756             ***** Init. Enq fpt
       94     6757        */
       95     6758    1     FPT_ENQ = CFPT_ENQ;

   6758  1 000002   000100 100400                    MLR     fill='000'O
         1 000003   000000 000050 xsym               ADSC9   CFPT_ENQ                 cn=0,n=40
         1 000004   200006 000050                    ADSC9   FPT_ENQ,,AUTO            cn=0,n=40

       96     6759    1     FPT_ENQ.V_ = VECTOR(FPT_ENQ.V);

   6759  1 000005   000000 235000 2                  LDA     0
         1 000006   200020 452500                    STP2    FPT_ENQ+10,,AUTO
         1 000007   200020 236100                    LDQ     FPT_ENQ+10,,AUTO
         1 000010   000014 036003                    ADLQ    12,DU
         1 000011   200006 757100                    STAQ    FPT_ENQ,,AUTO

       97     6760    1     FPT_ENQ.V.DCB# = ENQ_DCB#;

   6760  1 000012   200003 470500                    LDP0    @ENQ_DCB#,,AUTO
         1 000013   000000 720100                    LXL0    0,,PR0
         1 000014   200014 740100                    STX0    FPT_ENQ+6,,AUTO

       98     6761    1     FPT_ENQ.RNAME_ = VECTOR(ENQ_RNAME);

   6761  1 000015   200004 471500                    LDP1    @ENQ_RNAME,,AUTO
         1 000016   000100 101500                    MRL     fill='000'O
         1 000017   100000 000001                    ADSC9   0,,PR1                   cn=0,n=1
         1 000020   200020 000002                    ADSC9   FPT_ENQ+10,,AUTO         cn=0,n=2
         1 000021   200020 221100                    LDX1    FPT_ENQ+10,,AUTO
         1 000022   000001 622011                    EAX2    1,X1
         1 000023   000000 635012                    EAA     0,X2
         1 000024   000002 771000                    ARL     2
         1 000025   000140 135007                    SBLA    96,DL
         1 000026   200004 236100                    LDQ     @ENQ_RNAME,,AUTO
         1 000027   200010 757100                    STAQ    FPT_ENQ+2,,AUTO

PL6.E3A0      #002=CPC$ENQUEUE File=CPC$SUBR3.:E05TSI                            TUE 07/29/97 11:29 Page:25   
       99     6762    1     FPT_ENQ.V.SHARE# = %NONE#;

   6762  1 000030   140000 236007                    LDQ     49152,DL
         1 000031   200014 256100                    ORSQ    FPT_ENQ+6,,AUTO

      100     6763    1     CALL M$ENQ(FPT_ENQ) ALTRET(E_ENQUEUE);

   6763  1 000032   200006 630500                    EPPR0   FPT_ENQ,,AUTO
         1 000033   420002 713400                    CLIMB   alt,+8194
         1 000034   401000 401760                    pmme    nvectors=3
         1 000035   000037 702000 1                  TSX2    E_ENQUEUE

      101     6764    1     RETURN;

   6764  1 000036   000000 702200 xent               TSX2  ! X66_ARET

      102     6765    1   E_ENQUEUE:
      103     6766    1     B$JIT.USRERR = B$TCB.ALT$ -> B$ALT.ERR;

   6766  1 000037   000000 470400 xsym  E_ENQUEUE    LDP0    B$TCB$
         1 000040   000000 471500                    LDP1    0,,PR0
         1 000041   100102 236100                    LDQ     66,,PR1
         1 000042   000000 473400 xsym               LDP3    B$JIT$
         1 000043   300144 756100                    STQ     100,,PR3

      104     6767    1     ALTRETURN;

   6767  1 000044   000000 702200 xent               TSX2  ! X66_AALT
      105     6768    1   END CPC$ENQUEUE;
      106     6769        %EOD;

PL6.E3A0      #002=CPC$ENQUEUE File=CPC$SUBR3.:E05TSI                            TUE 07/29/97 11:29 Page:26   
--  Include file information  --

   CP_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT.:E05TOU  cannot be made into a system file and is referenced.
   B_MACROS_C.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure CPC$ENQUEUE.
PL6.E3A0      #002=CPC$ENQUEUE File=CPC$SUBR3.:E05TSI                            TUE 07/29/97 11:29 Page:27   

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @ENQ_DCB#                  4-0-0/w PTR         r     1 @ENQ_RNAME
    *0-0-0/w UBIN        r     1 ENQ_DCB#                  *0-0-0/c ASTR(9)     r     1 ENQ_RNAME
     6-0-0/d STRC(360)   r     1 FPT_ENQ

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 B$JIT$                     0-0-0/w PTR         r     1 B$TCB$
     0-0-0/d STRC(360)   r     1 CFPT_ENQ

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(2448)  r     1 B$ALT                      0-0-0/d STRC(8856)  r     1 B$JIT
     0-0-0/w STRC(144)   r     1 B$TCB


   Procedure CPC$ENQUEUE requires 37 words for executable code.
   Procedure CPC$ENQUEUE requires 18 words of local(AUTO) storage.
PL6.E3A0      #002=CPC$ENQUEUE File=CPC$SUBR3.:E05TSI                            TUE 07/29/97 11:29 Page:28   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #002=CPC$ENQUEUE File=CPC$SUBR3.:E05TSI                            TUE 07/29/97 11:29 Page:29   
          MINI XREF LISTING

B$ALT.CODE
      6748**DCL      6748--REDEF    6749--REDEF    6749--REDEF
B$ALT.ERR
      6749**DCL      6766>>ASSIGN
B$ALT.ERR.ERR#
      6750**DCL      6750--REDEF
B$ALT.EVID
      6749**DCL      6749--REDEF    6749--REDEF
B$JIT.CPFLAGS1.SLEAZE
       244**DCL       244--REDEF
B$JIT.ERR.MID
       151**DCL       151--REDEF
B$JIT.JRESPEAK
       312**DCL       313--REDEF
B$JIT.ORIGINATOR_PORT.FROM_CR
       421**DCL       421--REDEF     422--REDEF
B$JIT.PNR
       325**DCL       325--REDEF
B$JIT.TSLINE
       419**DCL       420--REDEF
B$JIT.USRERR
       286**DCL      6766<<ASSIGN
B$JIT$
      6649**DCL       145--IMP-PTR  6766>>ASSIGN
B$TCB.ALT$
      6744**DCL      6766>>ASSIGN
B$TCB$
      6651**DCL      6744--IMP-PTR  6766>>ASSIGN
CAMR_REC.ACSVEH_
      5688**DCL      5689--REDEF
CAMR_REC.ALTKEYS_
      5694**DCL      5695--REDEF    5695--REDEF
PL6.E3A0      #002=CPC$ENQUEUE File=CPC$SUBR3.:E05TSI                            TUE 07/29/97 11:29 Page:30   
CAMR_REC.HDR_
      5693**DCL      5694--REDEF
CAMR_REC.TAB_
      5692**DCL      5693--REDEF
CAMR_REC.UHL_
      5686**DCL      5687--REDEF    5687--REDEF
CAMR_REC.V.FSN#
      5726**DCL      5726--REDEF    5726--REDEF
CAMR_REC.WSN_
      5692**DCL      5692--REDEF
CFPT_CLOSE.SN_
      4530**DCL      4530--REDEF
CFPT_CLOSE.UTL_
      4531**DCL      4531--REDEF
CFPT_CLOSE.V.EXPIRE#
      4545**DCL      4545--REDEF
CFPT_CLOSE.V.TYPE#
      4543**DCL      4543--REDEF
CFPT_CLOSE.V.XTNSIZE#
      4540**DCL      4540--REDEF    4542--REDEF
CFPT_ENQ
      4757**DCL      6758>>ASSIGN
CFPT_OPEN.ACSVEH_
      4465**DCL      4466--REDEF
CFPT_OPEN.ALTKEYS_
      4471**DCL      4472--REDEF    4472--REDEF
CFPT_OPEN.HDR_
      4470**DCL      4471--REDEF
CFPT_OPEN.TAB_
      4469**DCL      4470--REDEF
CFPT_OPEN.UHL_
      4463**DCL      4464--REDEF    4464--REDEF
CFPT_OPEN.V.FSN#
      4503**DCL      4503--REDEF    4503--REDEF
CFPT_OPEN.WSN_
      4469**DCL      4469--REDEF
PL6.E3A0      #002=CPC$ENQUEUE File=CPC$SUBR3.:E05TSI                            TUE 07/29/97 11:29 Page:31   
CFPT_READ.STATION_
      4569**DCL      4570--REDEF
CFPT_READ.V.DVBYTE.REREAD#
      4581**DCL      4581--REDEF
CFPT_READ.V.INDX#
      4579**DCL      4579--REDEF
CFPT_READUC.STATION_
      4939**DCL      4940--REDEF
CFPT_READUC.V.DVBYTE.REREAD#
      4951**DCL      4951--REDEF
CFPT_READUC.V.INDX#
      4949**DCL      4949--REDEF
CFPT_TRTN.V.IR#
      5175**DCL      5176--REDEF
CFPT_WRITE.STATION_
      4607**DCL      4607--REDEF
CFPT_WRITE.V.DVBYTE.VFC#
      4614**DCL      4614--REDEF
CFPT_WRITEUC.STATION_
      4907**DCL      4907--REDEF
CFPT_WRITEUC.V.DVBYTE.VFC#
      4914**DCL      4914--REDEF
CFPT_XXX.V.STEPCC#
      5887**DCL      5887--REDEF
CGETCMD.OUT$
      5908**DCL      5914--REDEF
CVLP_TRMCTL.BREAKCOUNT
      5499**DCL      5500--REDEF
CVLP_WINDOW.FWINDOW#
      5595**DCL      5595--REDEF    5596--REDEF
ENQ_DCB#
      6717**DCL        24--PROC     6760>>ASSIGN
ENQ_RNAME
      6719**DCL        24--PROC     6761--ASSIGN
ENQ_RNAME.SIZ
      6720**DCL      6721--IMP-SIZ  6761>>ASSIGN
PL6.E3A0      #002=CPC$ENQUEUE File=CPC$SUBR3.:E05TSI                            TUE 07/29/97 11:29 Page:32   
E_ENQUEUE
      6766**LABEL    6763--CALLALT
FPT_ENQ
      6735**DCL      6758<<ASSIGN   6763<>CALL
FPT_ENQ.RNAME_
      6735**DCL      6761<<ASSIGN
FPT_ENQ.V
      6736**DCL      6759--ASSIGN
FPT_ENQ.V.DCB#
      6736**DCL      6760<<ASSIGN
FPT_ENQ.V.SHARE#
      6737**DCL      6762<<ASSIGN
FPT_ENQ.V_
      6735**DCL      6759<<ASSIGN
M$ENQ
       501**DCL-ENT  6763--CALL

PL6.E3A0      #003=CPC$QUIT File=CPC$SUBR3.:E05TSI                               TUE 07/29/97 11:30 Page:33   
      107        1        /*T***********************************************************/
      108        2        /*T*                                                         */
      109        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      110        4        /*T*                                                         */
      111        5        /*T***********************************************************/
      112        6        /*F*    NAME:    CPC$QUIT
      113        7                PURPOSE:    To cause termination of the previous job step so that
      114        8                         the next one may take place.
      115        9        */
      116       10        CPC$QUIT: PROC  ALTRET;
      117       11        /**/
      118       12                %INCLUDE B$JIT;
      119      302                %INCLUDE CP_6;
      120      383                %INCLUDE CP_MACROS_C;
      121     1135                %INCLUDE XU_MACRO_C;
      122     4241                %INCLUDE CP_DATA_R;
      123     6804          /***** Based structures *****/
      124     6805        %SEG$2;
      125     6865          /***** Fpts *****/
      126     6866        %FPT_CPEXIT (FPTN=FPT$CPEXIT,STCLASS=BASED);
      127     6892          /***** External routines *****/
      128     6893    1   DCL CPC$EXIT ENTRY ALTRET;
      129     6894        %EJECT;
PL6.E3A0      #003=CPC$QUIT File=CPC$SUBR3.:E05TSI                               TUE 07/29/97 11:30 Page:34   
      130     6895        /*
      131     6896        *****   Begin procedure
      132     6897        */
      133     6898    1     SEG$2.FPT_CPEXIT$->FPT$CPEXIT = CFPT_CPEXIT;
      134     6899    1     SEG$2.FPT_CPEXIT$->FPT$CPEXIT.V_ =
      135     6900    1          VECTOR(SEG$2.FPT_CPEXIT$->FPT$CPEXIT.V);
      136     6901    1     SEG$2.FPT_CPEXIT$->FPT$CPEXIT.V.QUIT# = '1'B;
      137     6902    1     CALL CPC$EXIT  ALTRET(E_C$EXIT);
      138     6903        /*
      139     6904        *****   NOTE:    Control passes back to the top of ibex if the M$CPEXIT does not
      140     6905        *****         encounter an error forcing an altreturn.
      141     6906        */
      142     6907    1   E_C$EXIT:
      143     6908    1     ALTRETURN;
      144     6909    1   END     CPC$QUIT;
      145     6910                %EOD;

PL6.E3A0      #003=CPC$QUIT File=CPC$SUBR3.:E05TSI                               TUE 07/29/97 11:30 Page:35   
--  Include file information  --

   CP_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
   CP_MACROS_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure CPC$QUIT.

   Procedure CPC$QUIT requires 20 words for executable code.
   Procedure CPC$QUIT requires 6 words of local(AUTO) storage.

PL6.E3A0      #003=CPC$QUIT File=CPC$SUBR3.:E05TSI                               TUE 07/29/97 11:30 Page:36   

 Object Unit name= CPC$QUIT                                   File name= CPC$SUBR3.:E05TOU
 UTS= JUL 29 '97 11:30:21.04 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1   Proc  even  none    20     24  CPC$QUIT
    2  RoData even  none     1      1  CPC$QUIT

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     1      0   yes    yes     yes      Std        0  CPC$QUIT

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       0 CPC$EXIT
                       nStd      0 X66_AUTO_0
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_AALT

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                                  CFPT_CPEXIT                      r    SEG2$
r    B$JIT$                                B_VECTNIL
PL6.E3A0      #003=CPC$QUIT File=CPC$SUBR3.:E05TSI                               TUE 07/29/97 11:30 Page:37   


      107        1        /*T***********************************************************/
      108        2        /*T*                                                         */
      109        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      110        4        /*T*                                                         */
      111        5        /*T***********************************************************/
      112        6        /*F*    NAME:    CPC$QUIT
      113        7                PURPOSE:    To cause termination of the previous job step so that
      114        8                         the next one may take place.
      115        9        */
      116       10        CPC$QUIT: PROC  ALTRET;

     10  1 000000   000000 700200 xent  CPC$QUIT     TSX0  ! X66_AUTO_0
         1 000001   000006 000000                    ZERO    6,0

      117       11        /**/
      118       12                %INCLUDE B$JIT;
      119      302                %INCLUDE CP_6;
      120      383                %INCLUDE CP_MACROS_C;
      121     1135                %INCLUDE XU_MACRO_C;
      122     4241                %INCLUDE CP_DATA_R;
      123     6804          /***** Based structures *****/
      124     6805        %SEG$2;
      125     6865          /***** Fpts *****/
      126     6866        %FPT_CPEXIT (FPTN=FPT$CPEXIT,STCLASS=BASED);
      127     6892          /***** External routines *****/
      128     6893    1   DCL CPC$EXIT ENTRY ALTRET;
      129     6894        %EJECT;
PL6.E3A0      #003=CPC$QUIT File=CPC$SUBR3.:E05TSI                               TUE 07/29/97 11:30 Page:38   
      130     6895        /*
      131     6896        *****   Begin procedure
      132     6897        */
      133     6898    1     SEG$2.FPT_CPEXIT$->FPT$CPEXIT = CFPT_CPEXIT;

   6898  1 000002   000000 470400 xsym               LDP0    SEG2$
         1 000003   000166 471500                    LDP1    118,,PR0
         1 000004   000100 100400                    MLR     fill='000'O
         1 000005   000000 000070 xsym               ADSC9   CFPT_CPEXIT              cn=0,n=56
         1 000006   100000 000070                    ADSC9   0,,PR1                   cn=0,n=56

      134     6899    1     SEG$2.FPT_CPEXIT$->FPT$CPEXIT.V_ =

   6899  1 000007   000166 471500                    LDP1    118,,PR0
         1 000010   000000 235000 2                  LDA     0
         1 000011   200004 451500                    STP1    4,,AUTO
         1 000012   200004 236100                    LDQ     4,,AUTO
         1 000013   000014 036003                    ADLQ    12,DU
         1 000014   100012 757100                    STAQ    10,,PR1

      135     6900    1          VECTOR(SEG$2.FPT_CPEXIT$->FPT$CPEXIT.V);
      136     6901    1     SEG$2.FPT_CPEXIT$->FPT$CPEXIT.V.QUIT# = '1'B;

   6901  1 000015   000166 471500                    LDP1    118,,PR0
         1 000016   200000 236003                    LDQ     65536,DU
         1 000017   100014 256100                    ORSQ    12,,PR1

      137     6902    1     CALL CPC$EXIT  ALTRET(E_C$EXIT);

   6902  1 000020   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 000021   000000 701000 xent               TSX1    CPC$EXIT
         1 000022   000023 702000 1                  TSX2    E_C$EXIT

      138     6903        /*
      139     6904        *****   NOTE:    Control passes back to the top of ibex if the M$CPEXIT does not
      140     6905        *****         encounter an error forcing an altreturn.
      141     6906        */
PL6.E3A0      #003=CPC$QUIT File=CPC$SUBR3.:E05TSI                               TUE 07/29/97 11:30 Page:39   
      142     6907    1   E_C$EXIT:
      143     6908    1     ALTRETURN;

   6908  1 000023   000000 702200 xent  E_C$EXIT     TSX2  ! X66_AALT
      144     6909    1   END     CPC$QUIT;
      145     6910                %EOD;

PL6.E3A0      #003=CPC$QUIT File=CPC$SUBR3.:E05TSI                               TUE 07/29/97 11:30 Page:40   
--  Include file information  --

   CP_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
   CP_MACROS_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure CPC$QUIT.
PL6.E3A0      #003=CPC$QUIT File=CPC$SUBR3.:E05TSI                               TUE 07/29/97 11:30 Page:41   

 **** Variables and constants ****

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 B$JIT$                     0-0-0/d STRC(504)   r     1 CFPT_CPEXIT
     0-0-0/w PTR         r     1 SEG2$

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d STRC(504)   r     1 FPT$CPEXIT                 0-0-0/w STRC(6264)  r     1 SEG$2


   Procedure CPC$QUIT requires 20 words for executable code.
   Procedure CPC$QUIT requires 6 words of local(AUTO) storage.
PL6.E3A0      #003=CPC$QUIT File=CPC$SUBR3.:E05TSI                               TUE 07/29/97 11:30 Page:42   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #003=CPC$QUIT File=CPC$SUBR3.:E05TSI                               TUE 07/29/97 11:30 Page:43   
          MINI XREF LISTING

B$JIT.CPFLAGS1.SLEAZE
       120**DCL       120--REDEF
B$JIT.ERR.MID
        27**DCL        27--REDEF
B$JIT.JRESPEAK
       188**DCL       189--REDEF
B$JIT.ORIGINATOR_PORT.FROM_CR
       297**DCL       297--REDEF     298--REDEF
B$JIT.PNR
       201**DCL       201--REDEF
B$JIT.TSLINE
       295**DCL       296--REDEF
B$JIT$
      6737**DCL        21--IMP-PTR
CAMR_REC.ACSVEH_
      5776**DCL      5777--REDEF
CAMR_REC.ALTKEYS_
      5782**DCL      5783--REDEF    5783--REDEF
CAMR_REC.HDR_
      5781**DCL      5782--REDEF
CAMR_REC.TAB_
      5780**DCL      5781--REDEF
CAMR_REC.UHL_
      5774**DCL      5775--REDEF    5775--REDEF
CAMR_REC.V.FSN#
      5814**DCL      5814--REDEF    5814--REDEF
CAMR_REC.WSN_
      5780**DCL      5780--REDEF
CFPT_CLOSE.SN_
      4618**DCL      4618--REDEF
CFPT_CLOSE.UTL_
      4619**DCL      4619--REDEF
PL6.E3A0      #003=CPC$QUIT File=CPC$SUBR3.:E05TSI                               TUE 07/29/97 11:30 Page:44   
CFPT_CLOSE.V.EXPIRE#
      4633**DCL      4633--REDEF
CFPT_CLOSE.V.TYPE#
      4631**DCL      4631--REDEF
CFPT_CLOSE.V.XTNSIZE#
      4628**DCL      4628--REDEF    4630--REDEF
CFPT_CPEXIT
      4901**DCL      6898>>ASSIGN
CFPT_OPEN.ACSVEH_
      4553**DCL      4554--REDEF
CFPT_OPEN.ALTKEYS_
      4559**DCL      4560--REDEF    4560--REDEF
CFPT_OPEN.HDR_
      4558**DCL      4559--REDEF
CFPT_OPEN.TAB_
      4557**DCL      4558--REDEF
CFPT_OPEN.UHL_
      4551**DCL      4552--REDEF    4552--REDEF
CFPT_OPEN.V.FSN#
      4591**DCL      4591--REDEF    4591--REDEF
CFPT_OPEN.WSN_
      4557**DCL      4557--REDEF
CFPT_READ.STATION_
      4657**DCL      4658--REDEF
CFPT_READ.V.DVBYTE.REREAD#
      4669**DCL      4669--REDEF
CFPT_READ.V.INDX#
      4667**DCL      4667--REDEF
CFPT_READUC.STATION_
      5027**DCL      5028--REDEF
CFPT_READUC.V.DVBYTE.REREAD#
      5039**DCL      5039--REDEF
CFPT_READUC.V.INDX#
      5037**DCL      5037--REDEF
CFPT_TRTN.V.IR#
      5263**DCL      5264--REDEF
PL6.E3A0      #003=CPC$QUIT File=CPC$SUBR3.:E05TSI                               TUE 07/29/97 11:30 Page:45   
CFPT_WRITE.STATION_
      4695**DCL      4695--REDEF
CFPT_WRITE.V.DVBYTE.VFC#
      4702**DCL      4702--REDEF
CFPT_WRITEUC.STATION_
      4995**DCL      4995--REDEF
CFPT_WRITEUC.V.DVBYTE.VFC#
      5002**DCL      5002--REDEF
CFPT_XXX.V.STEPCC#
      5975**DCL      5975--REDEF
CGETCMD.OUT$
      5996**DCL      6002--REDEF
CPC$EXIT
      6893**DCL-ENT  6902--CALL
CVLP_TRMCTL.BREAKCOUNT
      5587**DCL      5588--REDEF
CVLP_WINDOW.FWINDOW#
      5683**DCL      5683--REDEF    5684--REDEF
E_C$EXIT
      6908**LABEL    6902--CALLALT
FPT$CPEXIT
      6879**DCL      6898<<ASSIGN
FPT$CPEXIT.V
      6882**DCL      6899--ASSIGN
FPT$CPEXIT.V.QUIT#
      6887**DCL      6901<<ASSIGN
FPT$CPEXIT.V_
      6882**DCL      6899<<ASSIGN
SEG$2.FPT_CPEXIT$
      6847**DCL      6898>>ASSIGN   6899>>ASSIGN   6899>>ASSIGN   6901>>ASSIGN
SEG2$
      6730**DCL      6806--IMP-PTR  6898>>ASSIGN   6899>>ASSIGN   6899>>ASSIGN   6901>>ASSIGN

PL6.E3A0      #004=CPC$SCREECH File=CPC$SUBR3.:E05TSI                            TUE 07/29/97 11:31 Page:46   
      146        1        /*T***********************************************************/
      147        2        /*T*                                                         */
      148        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      149        4        /*T*                                                         */
      150        5        /*T***********************************************************/
      151        6        /*F*    NAME:    CPC$SCREECH
      152        7                PURPOSE:    To effect orderly cleanup when an unexpected IBEX condition
      153        8                         occurs.
      154        9        */
      155       10        CPC$SCREECH: PROC(SCREECH,MID);
      156       11        /**/
      157       12                %INCLUDE CP_6;
      158       93                %INCLUDE CP_6_SUBS;
      159      633                %INCLUDE CP_SUBS_C;
      160     1550                %INCLUDE CP_SCODE_C;
      161     1558                %INCLUDE B$JIT;
      162     1848                %INCLUDE XU_MACRO_C;
      163     4954                %INCLUDE CP_MACROS_C;
      164     5706                %INCLUDE NK_VFC_C;
      165     5780                %INCLUDE CP_DATA_R;
      166     8343        /**/
      167     8344    1   DCL     SCREECH  UBIN  WORD;
      168     8345    1   DCL     MID   BIT(36)  ALIGNED;
      169     8346    1   DCL     ERR_BUF CHAR(120);
      170     8347        /**/
      171     8348    1   DCL    CPA$BYE              ENTRY (1) ALTRET;
      172     8349    1   DCL    CPC$QUIT             ENTRY ALTRET;
      173     8350        /**/
      174     8351        %SEG$2;
      175     8411        %B$ALT;
      176     8419        %B$EXCFR;
      177     8437        %B$TCB (STCLASS="BASED(B$TCB$)");
      178     8440        %ERR_CODE (STCLASS=AUTO);
      179     8460        %FPT_ERRMSG (FPTN=FPT_ERRMSG,STCLASS=AUTO);
      180     8487        %VLR_ERRMSG (FPTN=VLR_ERRMSG,STCLASS=AUTO);
      181     8509        %FPT_SCREECH (FPTN=FPT_SCREECH,STCLASS=AUTO);
      182     8523        %VLP_SCODE (FPTN=SC_CPABORT,STCLASS=CONSTANT SYMDEF,FCG=CP,MID=C,MON='0'B,
PL6.E3A0      #004=CPC$SCREECH File=CPC$SUBR3.:E05TSI                            TUE 07/29/97 11:31 Page:47   
      183     8524               CODE=%S$CPABORT,ROSEG='1'B,CPSEG='1'B,CUSR='1'B,
      184     8525               CFUS='1'B,ENQ='1'B,LRM='1'B);
      185     8586        %FPT_CPEXIT (FPTN=FPT_CPEXIT,STCLASS=AUTO);
      186     8612        %EJECT;
PL6.E3A0      #004=CPC$SCREECH File=CPC$SUBR3.:E05TSI                            TUE 07/29/97 11:31 Page:48   
      187     8613    1     IF B$TCB.CURRSZ > 0
      188     8614    1       THEN /* There is a fault frame on the stack, so get the error */
      189     8615    1        B$JIT.USRERR = B$TCB.STK$ -> B$EXCFR.ERR; /* code from there */
      190     8616    1       ELSE
      191     8617    1        IF B$TCB.ALT$ ~= ADDR(NIL)
      192     8618    1           THEN
      193     8619    1              B$JIT.USRERR = B$TCB.ALT$ -> B$ALT.ERR;
      194     8620        /*
      195     8621             ***** Write the screech message...
      196     8622        */
      197     8623    1     ERR_CODE.FCG = IBEXFCG;
      198     8624    1     ERR_CODE.MID = MID;
      199     8625    1     ERR_CODE.CODE = SCREECH;
      200     8626    1     ERR_CODE.MON = '0'B;
      201     8627    1     ERR_CODE.SEV = 7;
      202     8628        /*
      203     8629             ***** Init FPT_ERRMSG
      204     8630        */
      205     8631    1     FPT_ERRMSG = CFPT_ERRMSG;
      206     8632    1     FPT_ERRMSG.V_ = VECTOR(FPT_ERRMSG.V);
      207     8633    1     FPT_ERRMSG.BUF_ = VECTOR(ERR_BUF);
      208     8634    1     FPT_ERRMSG.CODE_ = VECTOR(ERR_CODE);
      209     8635    1     FPT_ERRMSG.RESULTS_ = VECTOR(VLR_ERRMSG);
      210     8636    1     FPT_ERRMSG.V.INCLCODE# = %YES#;
      211     8637    1     FPT_ERRMSG.V.VFC# = %VFC_TRANSITION1;
      212     8638    1     IF B$JIT.MODE = %M_BATCH#
      213     8639
      214     8640    1        THEN
      215     8641    1            FPT_ERRMSG.V.OUTDCB1# = %M$DO#;
      216     8642
      217     8643    1        ELSE
      218     8644    1           FPT_ERRMSG.V.OUTDCB1# = M$UC_NUM;
      219     8645    1     CALL M$ERRMSG (FPT_ERRMSG) ALTRET(IGNORE1);
      220     8646    1   IGNORE1: ; /* ignore the altret */
      221     8647        /*
      222     8648             ***** Write B$JIT.USRERR
      223     8649        */
PL6.E3A0      #004=CPC$SCREECH File=CPC$SUBR3.:E05TSI                            TUE 07/29/97 11:31 Page:49   
      224     8650    1     IF B$JIT.USRERR ~= '0'B
      225     8651
      226     8652    1        THEN
      227     8653    2           DO;
      228     8654    2              FPT_ERRMSG.CODE_ = VECTOR(B$JIT.USRERR);
      229     8655    2              CALL M$ERRMSG (FPT_ERRMSG) ALTRET(IGNORE2);
      230     8656    2           END;
      231     8657    1   IGNORE2: ; /* ignore the altret */
      232     8658        /*
      233     8659             ***** If the user has not screeched before, screech then log
      234     8660                   him off. CPA$BYE used so that 'OFF' is output to the oc
      235     8661                   and an accounting record generated.
      236     8662                   If user has screeched before, just log  him off with
      237     8663                   the assumption that 'OFF' has been printed to the oc and
      238     8664                   an accounting record has been generated.
      239     8665        */
      240     8666    1     IF B$JIT.CPFLAGS1 & %CP_SCREECH#
      241     8667
      242     8668    1        THEN
      243     8669    1           GOTO E_BYE;
      244     8670
      245     8671    1        ELSE
      246     8672    2           DO; /* run down the user */
      247     8673    2              FPT_SCREECH = CFPT_SCREECH;
      248     8674    2              FPT_SCREECH.SCODE_ = VECTOR(SC_CPABORT);
      249     8675    2              FPT_SCREECH.JERR_ = VECTOR(ERR_CODE);
      250     8676    2              CALL M$SCREECH (FPT_SCREECH) ALTRET(E_M$SCREECH);
      251     8677        /*S*    SCREECH_CODE: CPC-S$CPABORT
      252     8678                TYPE: SNAP
      253     8679                MESSAGE: IBEX abort
      254     8680                REMARKS: The reason for this snap is contained in JIT.ERR
      255     8681        */
      256     8682    2   E_M$SCREECH: ;
      257     8683    2              IF B$TCB.CURRSZ > 0
      258     8684    2                THEN
      259     8685    3                 CALL M$CLRSTK WHENALTRETURN DO; END;
      260     8686    2              B$JIT.CPFLAGS1 = B$JIT.CPFLAGS1 | %CP_SCREECH#;
PL6.E3A0      #004=CPC$SCREECH File=CPC$SUBR3.:E05TSI                            TUE 07/29/97 11:31 Page:50   
      261     8687    2              CALL CPA$BYE ALTRET(E_BYE);
      262     8688    2           END;
      263     8689    1   E_BYE:
      264     8690    1     FPT_CPEXIT = CFPT_CPEXIT;
      265     8691    1     FPT_CPEXIT.V_ = VECTOR(FPT_CPEXIT.V);
      266     8692    1     CALL M$CPEXIT (FPT_CPEXIT) ALTRET(E_CPEXIT);
      267     8693    1   E_CPEXIT: ;
      268     8694        /*
      269     8695             ***** Use M$CPEXIT to log the user off if CPA$BYE
      270     8696                   comes back to haunt us. May be necessary to
      271     8697                   do a M$SCREECH to recovery if this pmme fails...
      272     8698        */
      273     8699    1   END     CPC$SCREECH;

PL6.E3A0      #004=CPC$SCREECH File=CPC$SUBR3.:E05TSI                            TUE 07/29/97 11:31 Page:51   
--  Include file information  --

   CP_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   NK_VFC_C.:E05TOU  is referenced.
   CP_MACROS_C.:E05TOU  is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
   B$JIT.:E05TOU  cannot be made into a system file and is referenced.
   CP_SCODE_C.:E05TOU  is referenced.
   CP_SUBS_C.:E05TOU  is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure CPC$SCREECH.

   Procedure CPC$SCREECH requires 130 words for executable code.
   Procedure CPC$SCREECH requires 88 words of local(AUTO) storage.

    No errors detected in file CPC$SUBR3.:E05TSI    .

PL6.E3A0      #004=CPC$SCREECH File=CPC$SUBR3.:E05TSI                            TUE 07/29/97 11:31 Page:52   

 Object Unit name= CPC$SCREECH                                File name= CPC$SUBR3.:E05TOU
 UTS= JUL 29 '97 11:31:05.56 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1  RoData even  UTS      2      2  CPC$SCREECH
    2   Proc  even  none   130    202  CPC$SCREECH
    3  RoData even  none     6      6  CPC$SCREECH

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     2      0   yes            yes      Std        2  CPC$SCREECH

  ****  Data defs  ****

 Sect OctLoc  Name                           Sect OctLoc  Name
    1      0  SC_CPABORT

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       1 CPA$BYE
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_AUTO_2
                       nStd      0 X66_ARET
PL6.E3A0      #004=CPC$SCREECH File=CPC$SUBR3.:E05TSI                            TUE 07/29/97 11:31 Page:53   

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                                  CFPT_ERRMSG                           CFPT_CPEXIT
     CFPT_SCREECH                     r    SEG2$                            r    B$JIT$
r    B$TCB$                                M$UC_NUM                              B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
PL6.E3A0      #004=CPC$SCREECH File=CPC$SUBR3.:E05TSI                            TUE 07/29/97 11:31 Page:54   


      146        1        /*T***********************************************************/
      147        2        /*T*                                                         */
      148        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      149        4        /*T*                                                         */
      150        5        /*T***********************************************************/
      151        6        /*F*    NAME:    CPC$SCREECH
      152        7                PURPOSE:    To effect orderly cleanup when an unexpected IBEX condition
      153        8                         occurs.
      154        9        */
      155       10        CPC$SCREECH: PROC(SCREECH,MID);

     10  2 000000   000000 700200 xent  CPC$SCREECH  TSX0  ! X66_AUTO_2
         2 000001   000130 000002                    ZERO    88,2

      156       11        /**/
      157       12                %INCLUDE CP_6;
      158       93                %INCLUDE CP_6_SUBS;
      159      633                %INCLUDE CP_SUBS_C;
      160     1550                %INCLUDE CP_SCODE_C;
      161     1558                %INCLUDE B$JIT;
      162     1848                %INCLUDE XU_MACRO_C;
      163     4954                %INCLUDE CP_MACROS_C;
      164     5706                %INCLUDE NK_VFC_C;
      165     5780                %INCLUDE CP_DATA_R;
      166     8343        /**/
      167     8344    1   DCL     SCREECH  UBIN  WORD;
      168     8345    1   DCL     MID   BIT(36)  ALIGNED;
      169     8346    1   DCL     ERR_BUF CHAR(120);
      170     8347        /**/
      171     8348    1   DCL    CPA$BYE              ENTRY (1) ALTRET;
      172     8349    1   DCL    CPC$QUIT             ENTRY ALTRET;
      173     8350        /**/
      174     8351        %SEG$2;
      175     8411        %B$ALT;
      176     8419        %B$EXCFR;
      177     8437        %B$TCB (STCLASS="BASED(B$TCB$)");
PL6.E3A0      #004=CPC$SCREECH File=CPC$SUBR3.:E05TSI                            TUE 07/29/97 11:31 Page:55   
      178     8440        %ERR_CODE (STCLASS=AUTO);
      179     8460        %FPT_ERRMSG (FPTN=FPT_ERRMSG,STCLASS=AUTO);
      180     8487        %VLR_ERRMSG (FPTN=VLR_ERRMSG,STCLASS=AUTO);
      181     8509        %FPT_SCREECH (FPTN=FPT_SCREECH,STCLASS=AUTO);
      182     8523        %VLP_SCODE (FPTN=SC_CPABORT,STCLASS=CONSTANT SYMDEF,FCG=CP,MID=C,MON='0'B,
      183     8524               CODE=%S$CPABORT,ROSEG='1'B,CPSEG='1'B,CUSR='1'B,
      184     8525               CFUS='1'B,ENQ='1'B,LRM='1'B);
      185     8586        %FPT_CPEXIT (FPTN=FPT_CPEXIT,STCLASS=AUTO);
      186     8612        %EJECT;
PL6.E3A0      #004=CPC$SCREECH File=CPC$SUBR3.:E05TSI                            TUE 07/29/97 11:31 Page:56   
      187     8613    1     IF B$TCB.CURRSZ > 0

   8613  2 000002   000000 470400 xsym               LDP0    B$TCB$
         2 000003   000002 720100                    LXL0    2,,PR0
         2 000004   000012 600000 2                  TZE     s:8617

      188     8614    1       THEN /* There is a fault frame on the stack, so get the error */
      189     8615    1        B$JIT.USRERR = B$TCB.STK$ -> B$EXCFR.ERR; /* code from there */

   8615  2 000005   000001 471500                    LDP1    1,,PR0
         2 000006   100102 236100                    LDQ     66,,PR1
         2 000007   000000 473400 xsym               LDP3    B$JIT$
         2 000010   300144 756100                    STQ     100,,PR3
         2 000011   000021 710000 2                  TRA     s:8623

      190     8616    1       ELSE
      191     8617    1        IF B$TCB.ALT$ ~= ADDR(NIL)

   8617  2 000012   000000 236100                    LDQ     0,,PR0
         2 000013   000001 116000 xsym               CMPQ    B_VECTNIL+1
         2 000014   000021 600000 2                  TZE     s:8623

      192     8618    1           THEN
      193     8619    1              B$JIT.USRERR = B$TCB.ALT$ -> B$ALT.ERR;

   8619  2 000015   000000 471500                    LDP1    0,,PR0
         2 000016   100102 236100                    LDQ     66,,PR1
         2 000017   000000 473400 xsym               LDP3    B$JIT$
         2 000020   300144 756100                    STQ     100,,PR3

      194     8620        /*
      195     8621             ***** Write the screech message...
      196     8622        */
      197     8623    1     ERR_CODE.FCG = IBEXFCG;

   8623  2 000021   032000 236003                    LDQ     13312,DU
         2 000022   200043 752160                    STCQ    ERR_CODE,'60'O,AUTO
PL6.E3A0      #004=CPC$SCREECH File=CPC$SUBR3.:E05TSI                            TUE 07/29/97 11:31 Page:57   

      198     8624    1     ERR_CODE.MID = MID;

   8624  2 000023   200004 471500                    LDP1    @MID,,AUTO
         2 000024   100000 236100                    LDQ     0,,PR1
         2 000025   000014 772000                    QRL     12
         2 000026   200043 752110                    STCQ    ERR_CODE,'10'O,AUTO

      199     8625    1     ERR_CODE.CODE = SCREECH;

   8625  2 000027   200003 473500                    LDP3    @SCREECH,,AUTO
         2 000030   300000 236100                    LDQ     0,,PR3
         2 000031   000003 736000                    QLS     3
         2 000032   200043 676100                    ERQ     ERR_CODE,,AUTO
         2 000033   377770 376007                    ANQ     131064,DL
         2 000034   200043 656100                    ERSQ    ERR_CODE,,AUTO

      200     8626    1     ERR_CODE.MON = '0'B;

   8626  2 000035   000000 236000 3                  LDQ     0
         2 000036   200043 356100                    ANSQ    ERR_CODE,,AUTO

      201     8627    1     ERR_CODE.SEV = 7;

   8627  2 000037   000007 236007                    LDQ     7,DL
         2 000040   200043 256100                    ORSQ    ERR_CODE,,AUTO

      202     8628        /*
      203     8629             ***** Init FPT_ERRMSG
      204     8630        */
      205     8631    1     FPT_ERRMSG = CFPT_ERRMSG;

   8631  2 000041   000100 100400                    MLR     fill='000'O
         2 000042   000000 000150 xsym               ADSC9   CFPT_ERRMSG              cn=0,n=104
         2 000043   200044 000150                    ADSC9   FPT_ERRMSG,,AUTO         cn=0,n=104

      206     8632    1     FPT_ERRMSG.V_ = VECTOR(FPT_ERRMSG.V);
PL6.E3A0      #004=CPC$SCREECH File=CPC$SUBR3.:E05TSI                            TUE 07/29/97 11:31 Page:58   

   8632  2 000044   000001 235000 3                  LDA     1
         2 000045   200126 452500                    STP2    FPT_CPEXIT+14,,AUTO
         2 000046   200126 236100                    LDQ     FPT_CPEXIT+14,,AUTO
         2 000047   000072 036003                    ADLQ    58,DU
         2 000050   200044 757100                    STAQ    FPT_ERRMSG,,AUTO

      207     8633    1     FPT_ERRMSG.BUF_ = VECTOR(ERR_BUF);

   8633  2 000051   000002 235000 3                  LDA     2
         2 000052   200126 452500                    STP2    FPT_CPEXIT+14,,AUTO
         2 000053   200126 236100                    LDQ     FPT_CPEXIT+14,,AUTO
         2 000054   000005 036003                    ADLQ    5,DU
         2 000055   200050 757100                    STAQ    FPT_ERRMSG+4,,AUTO

      208     8634    1     FPT_ERRMSG.CODE_ = VECTOR(ERR_CODE);

   8634  2 000056   777640 235007                    LDA     -96,DL
         2 000057   200126 452500                    STP2    FPT_CPEXIT+14,,AUTO
         2 000060   200126 236100                    LDQ     FPT_CPEXIT+14,,AUTO
         2 000061   000043 036003                    ADLQ    35,DU
         2 000062   200046 757100                    STAQ    FPT_ERRMSG+2,,AUTO

      209     8635    1     FPT_ERRMSG.RESULTS_ = VECTOR(VLR_ERRMSG);

   8635  2 000063   000001 235000 3                  LDA     1
         2 000064   200126 452500                    STP2    FPT_CPEXIT+14,,AUTO
         2 000065   200126 236100                    LDQ     FPT_CPEXIT+14,,AUTO
         2 000066   000076 036003                    ADLQ    62,DU
         2 000067   200066 757100                    STAQ    FPT_ERRMSG+18,,AUTO

      210     8636    1     FPT_ERRMSG.V.INCLCODE# = %YES#;

   8636  2 000070   004000 236003                    LDQ     2048,DU
         2 000071   200074 256100                    ORSQ    FPT_ERRMSG+24,,AUTO

      211     8637    1     FPT_ERRMSG.V.VFC# = %VFC_TRANSITION1;
PL6.E3A0      #004=CPC$SCREECH File=CPC$SUBR3.:E05TSI                            TUE 07/29/97 11:31 Page:59   

   8637  2 000072   000037 236007                    LDQ     31,DL
         2 000073   200073 552104                    STBQ    FPT_ERRMSG+23,'04'O,AUTO

      212     8638    1     IF B$JIT.MODE = %M_BATCH#

   8638  2 000074   000000 474400 xsym               LDP4    B$JIT$
         2 000075   400000 236100                    LDQ     0,,PR4
         2 000076   740000 376003                    ANQ     -16384,DU
         2 000077   040000 116003                    CMPQ    16384,DU
         2 000100   000104 601000 2                  TNZ     s:8644

      213     8639
      214     8640    1        THEN
      215     8641    1            FPT_ERRMSG.V.OUTDCB1# = %M$DO#;

   8641  2 000101   000004 220003                    LDX0    4,DU
         2 000102   200072 440100                    SXL0    FPT_ERRMSG+22,,AUTO
         2 000103   000106 710000 2                  TRA     s:8645

      216     8642
      217     8643    1        ELSE
      218     8644    1           FPT_ERRMSG.V.OUTDCB1# = M$UC_NUM;

   8644  2 000104   000000 720000 xsym               LXL0    M$UC_NUM
         2 000105   200072 440100                    SXL0    FPT_ERRMSG+22,,AUTO

      219     8645    1     CALL M$ERRMSG (FPT_ERRMSG) ALTRET(IGNORE1);

   8645  2 000106   200044 630500                    EPPR0   FPT_ERRMSG,,AUTO
         2 000107   420000 713400                    CLIMB   alt,+8192
         2 000110   405000 401760                    pmme    nvectors=11
         2 000111   000112 702000 2                  TSX2    IGNORE1

   8638  2 000112                       IGNORE1      null
      220     8646    1   IGNORE1: ; /* ignore the altret */
      221     8647        /*
PL6.E3A0      #004=CPC$SCREECH File=CPC$SUBR3.:E05TSI                            TUE 07/29/97 11:31 Page:60   
      222     8648             ***** Write B$JIT.USRERR
      223     8649        */
      224     8650    1     IF B$JIT.USRERR ~= '0'B

   8650  2 000112   000000 470400 xsym               LDP0    B$JIT$
         2 000113   000144 235100                    LDA     100,,PR0
         2 000114   000125 600000 2                  TZE     IGNORE2

      225     8651
      226     8652    1        THEN
      227     8653    2           DO;

      228     8654    2              FPT_ERRMSG.CODE_ = VECTOR(B$JIT.USRERR);

   8654  2 000115   777640 235007                    LDA     -96,DL
         2 000116   000000 236000 xsym               LDQ     B$JIT$
         2 000117   000144 036003                    ADLQ    100,DU
         2 000120   200046 757100                    STAQ    FPT_ERRMSG+2,,AUTO

      229     8655    2              CALL M$ERRMSG (FPT_ERRMSG) ALTRET(IGNORE2);

   8655  2 000121   200044 630500                    EPPR0   FPT_ERRMSG,,AUTO
         2 000122   420000 713400                    CLIMB   alt,+8192
         2 000123   405000 401760                    pmme    nvectors=11
         2 000124   000125 702000 2                  TSX2    IGNORE2

      230     8656    2           END;

   8650  2 000125                       IGNORE2      null
      231     8657    1   IGNORE2: ; /* ignore the altret */
      232     8658        /*
      233     8659             ***** If the user has not screeched before, screech then log
      234     8660                   him off. CPA$BYE used so that 'OFF' is output to the oc
      235     8661                   and an accounting record generated.
      236     8662                   If user has screeched before, just log  him off with
      237     8663                   the assumption that 'OFF' has been printed to the oc and
      238     8664                   an accounting record has been generated.
PL6.E3A0      #004=CPC$SCREECH File=CPC$SUBR3.:E05TSI                            TUE 07/29/97 11:31 Page:61   
      239     8665        */
      240     8666    1     IF B$JIT.CPFLAGS1 & %CP_SCREECH#

   8666  2 000125   000000 470400 xsym               LDP0    B$JIT$
         2 000126   000143 236100                    LDQ     99,,PR0
         2 000127   000004 376000 xsym               ANQ     B_VECTNIL+4
         2 000130   000165 601000 2                  TNZ     E_BYE

      241     8667
      242     8668    1        THEN
      243     8669    1           GOTO E_BYE;
      244     8670
      245     8671    1        ELSE
      246     8672    2           DO; /* run down the user */

      247     8673    2              FPT_SCREECH = CFPT_SCREECH;

   8673  2 000131   000100 100400                    MLR     fill='000'O
         2 000132   000000 000030 xsym               ADSC9   CFPT_SCREECH             cn=0,n=24
         2 000133   200102 000030                    ADSC9   FPT_SCREECH,,AUTO        cn=0,n=24

      248     8674    2              FPT_SCREECH.SCODE_ = VECTOR(SC_CPABORT);

   8674  2 000134   000004 237000 3                  LDAQ    4
         2 000135   200102 757100                    STAQ    FPT_SCREECH,,AUTO

      249     8675    2              FPT_SCREECH.JERR_ = VECTOR(ERR_CODE);

   8675  2 000136   777640 235007                    LDA     -96,DL
         2 000137   200126 452500                    STP2    FPT_CPEXIT+14,,AUTO
         2 000140   200126 236100                    LDQ     FPT_CPEXIT+14,,AUTO
         2 000141   000043 036003                    ADLQ    35,DU
         2 000142   200104 757100                    STAQ    FPT_SCREECH+2,,AUTO

      250     8676    2              CALL M$SCREECH (FPT_SCREECH) ALTRET(E_M$SCREECH);

   8676  2 000143   200102 630500                    EPPR0   FPT_SCREECH,,AUTO
PL6.E3A0      #004=CPC$SCREECH File=CPC$SUBR3.:E05TSI                            TUE 07/29/97 11:31 Page:62   
         2 000144   400013 713400                    CLIMB   alt,+11
         2 000145   401000 401760                    pmme    nvectors=3
         2 000146   000147 702000 2                  TSX2    E_M$SCREECH

   8675  2 000147                       E_M$SCREECH  null
      251     8677        /*S*    SCREECH_CODE: CPC-S$CPABORT
      252     8678                TYPE: SNAP
      253     8679                MESSAGE: IBEX abort
      254     8680                REMARKS: The reason for this snap is contained in JIT.ERR
      255     8681        */
      256     8682    2   E_M$SCREECH: ;
      257     8683    2              IF B$TCB.CURRSZ > 0

   8683  2 000147   000000 470400 xsym               LDP0    B$TCB$
         2 000150   000002 720100                    LXL0    2,,PR0
         2 000151   000156 600000 2                  TZE     s:8686

      258     8684    2                THEN
      259     8685    3                 CALL M$CLRSTK WHENALTRETURN DO; END;

   8685  2 000152   410013 713400                    CLIMB   alt,+4107
         2 000153   000000 401760                    pmme    nvectors=0
         2 000154   000156 702000 2                  TSX2    s:8686
         2 000155   000156 710000 2                  TRA     s:8686

      260     8686    2              B$JIT.CPFLAGS1 = B$JIT.CPFLAGS1 | %CP_SCREECH#;

   8686  2 000156   000000 470400 xsym               LDP0    B$JIT$
         2 000157   000143 236100                    LDQ     99,,PR0
         2 000160   000004 276000 xsym               ORQ     B_VECTNIL+4
         2 000161   000143 756100                    STQ     99,,PR0

      261     8687    2              CALL CPA$BYE ALTRET(E_BYE);

   8687  2 000162   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 000163   000000 701000 xent               TSX1    CPA$BYE
         2 000164   000165 702000 2                  TSX2    E_BYE
PL6.E3A0      #004=CPC$SCREECH File=CPC$SUBR3.:E05TSI                            TUE 07/29/97 11:31 Page:63   

      262     8688    2           END;

      263     8689    1   E_BYE:
      264     8690    1     FPT_CPEXIT = CFPT_CPEXIT;

   8690  2 000165   000100 100400       E_BYE        MLR     fill='000'O
         2 000166   000000 000070 xsym               ADSC9   CFPT_CPEXIT              cn=0,n=56
         2 000167   200110 000070                    ADSC9   FPT_CPEXIT,,AUTO         cn=0,n=56

      265     8691    1     FPT_CPEXIT.V_ = VECTOR(FPT_CPEXIT.V);

   8691  2 000170   000004 235000 3                  LDA     4
         2 000171   200126 452500                    STP2    FPT_CPEXIT+14,,AUTO
         2 000172   200126 236100                    LDQ     FPT_CPEXIT+14,,AUTO
         2 000173   000124 036003                    ADLQ    84,DU
         2 000174   200122 757100                    STAQ    FPT_CPEXIT+10,,AUTO

      266     8692    1     CALL M$CPEXIT (FPT_CPEXIT) ALTRET(E_CPEXIT);

   8692  2 000175   200110 630500                    EPPR0   FPT_CPEXIT,,AUTO
         2 000176   400012 713400                    CLIMB   alt,+10
         2 000177   402400 401760                    pmme    nvectors=6
         2 000200   000201 702000 2                  TSX2    E_CPEXIT

   8691  2 000201                       E_CPEXIT     null
      267     8693    1   E_CPEXIT: ;
      268     8694        /*
      269     8695             ***** Use M$CPEXIT to log the user off if CPA$BYE
      270     8696                   comes back to haunt us. May be necessary to
      271     8697                   do a M$SCREECH to recovery if this pmme fails...
      272     8698        */
      273     8699    1   END     CPC$SCREECH;

   8699  2 000201   000000 702200 xent               TSX2  ! X66_ARET

PL6.E3A0      #004=CPC$SCREECH File=CPC$SUBR3.:E05TSI                            TUE 07/29/97 11:31 Page:64   
--  Include file information  --

   CP_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   NK_VFC_C.:E05TOU  is referenced.
   CP_MACROS_C.:E05TOU  is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
   B$JIT.:E05TOU  cannot be made into a system file and is referenced.
   CP_SCODE_C.:E05TOU  is referenced.
   CP_SUBS_C.:E05TOU  is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure CPC$SCREECH.
PL6.E3A0      #004=CPC$SCREECH File=CPC$SUBR3.:E05TSI                            TUE 07/29/97 11:31 Page:65   

 **** Variables and constants ****

  ****  Section 001 RoData CPC$SCREECH

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d STRC(72)    r     1 SC_CPABORT

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     4-0-0/w PTR         r     1 @MID                       3-0-0/w PTR         r     1 @SCREECH
     5-0-0/c CHAR(120)   r     1 ERR_BUF                   43-0-0/w STRC        r     1 ERR_CODE
   110-0-0/d STRC(504)   r     1 FPT_CPEXIT                44-0-0/d STRC(936)   r     1 FPT_ERRMSG
   102-0-0/d STRC(216)   r     1 FPT_SCREECH               *0-0-0/w BIT         r     1 MID
    *0-0-0/w UBIN        r     1 SCREECH                   76-0-0/d STRC(144)   r     1 VLR_ERRMSG

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 B$JIT$                     0-0-0/w PTR         r     1 B$TCB$
     0-0-0/d STRC(504)   r     1 CFPT_CPEXIT                0-0-0/d STRC(936)   r     1 CFPT_ERRMSG
     0-0-0/d STRC(216)   r     1 CFPT_SCREECH               0-0-0/w UBIN        r     1 M$UC_NUM
     0-0-0/w PTR         r     1 SEG2$

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(2448)  r     1 B$ALT                      0-0-0/w STRC(2448)  r     1 B$EXCFR
     0-0-0/d STRC(8856)  r     1 B$JIT                      0-0-0/w STRC(144)   r     1 B$TCB
PL6.E3A0      #004=CPC$SCREECH File=CPC$SUBR3.:E05TSI                            TUE 07/29/97 11:31 Page:66   


   Procedure CPC$SCREECH requires 130 words for executable code.
   Procedure CPC$SCREECH requires 88 words of local(AUTO) storage.

    No errors detected in file CPC$SUBR3.:E05TSI    .
PL6.E3A0      #004=CPC$SCREECH File=CPC$SUBR3.:E05TSI                            TUE 07/29/97 11:31 Page:67   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #004=CPC$SCREECH File=CPC$SUBR3.:E05TSI                            TUE 07/29/97 11:31 Page:68   
          MINI XREF LISTING

B$ALT.CODE
      8413**DCL      8413--REDEF    8414--REDEF    8414--REDEF
B$ALT.ERR
      8414**DCL      8619>>ASSIGN
B$ALT.ERR.ERR#
      8415**DCL      8415--REDEF
B$ALT.EVID
      8414**DCL      8414--REDEF    8414--REDEF
B$EXCFR.ASL
      8420**DCL      8420--REDEF
B$EXCFR.ERR
      8434**DCL      8615>>ASSIGN
B$EXCFR.ERR.ERR#
      8434**DCL      8434--REDEF
B$EXCFR.EVID
      8433**DCL      8433--REDEF    8434--REDEF
B$EXCFR.IR
      8421**DCL      8421--REDEF
B$EXCFR.PREVSZ
      8420**DCL      8420--REDEF
B$EXCFR.SUBC
      8432**DCL      8432--REDEF    8433--REDEF    8433--REDEF
B$JIT.CPFLAGS1
      1661**DCL      8666>>IF       8686<<ASSIGN   8686>>ASSIGN
B$JIT.CPFLAGS1.SLEAZE
      1666**DCL      1666--REDEF
B$JIT.ERR.MID
      1573**DCL      1573--REDEF
B$JIT.JRESPEAK
      1734**DCL      1735--REDEF
B$JIT.MODE
      1567**DCL      8638>>IF
PL6.E3A0      #004=CPC$SCREECH File=CPC$SUBR3.:E05TSI                            TUE 07/29/97 11:31 Page:69   
B$JIT.ORIGINATOR_PORT.FROM_CR
      1843**DCL      1843--REDEF    1844--REDEF
B$JIT.PNR
      1747**DCL      1747--REDEF
B$JIT.TSLINE
      1841**DCL      1842--REDEF
B$JIT.USRERR
      1708**DCL      8615<<ASSIGN   8619<<ASSIGN   8650>>IF       8654--ASSIGN
B$JIT$
      8276**DCL      1567--IMP-PTR  8615>>ASSIGN   8619>>ASSIGN   8638>>IF       8650>>IF       8654>>ASSIGN
      8666>>IF       8686>>ASSIGN   8686>>ASSIGN
B$TCB.ALT$
      8438**DCL      8617>>IF       8619>>ASSIGN
B$TCB.CURRSZ
      8438**DCL      8613>>IF       8683>>IF
B$TCB.STK$
      8438**DCL      8615>>ASSIGN
B$TCB$
      8278**DCL      8438--IMP-PTR  8613>>IF       8615>>ASSIGN   8617>>IF       8619>>ASSIGN   8683>>IF
CAMR_REC.ACSVEH_
      7315**DCL      7316--REDEF
CAMR_REC.ALTKEYS_
      7321**DCL      7322--REDEF    7322--REDEF
CAMR_REC.HDR_
      7320**DCL      7321--REDEF
CAMR_REC.TAB_
      7319**DCL      7320--REDEF
CAMR_REC.UHL_
      7313**DCL      7314--REDEF    7314--REDEF
CAMR_REC.V.FSN#
      7353**DCL      7353--REDEF    7353--REDEF
CAMR_REC.WSN_
      7319**DCL      7319--REDEF
CFPT_CLOSE.SN_
      6157**DCL      6157--REDEF
CFPT_CLOSE.UTL_
PL6.E3A0      #004=CPC$SCREECH File=CPC$SUBR3.:E05TSI                            TUE 07/29/97 11:31 Page:70   
      6158**DCL      6158--REDEF
CFPT_CLOSE.V.EXPIRE#
      6172**DCL      6172--REDEF
CFPT_CLOSE.V.TYPE#
      6170**DCL      6170--REDEF
CFPT_CLOSE.V.XTNSIZE#
      6167**DCL      6167--REDEF    6169--REDEF
CFPT_CPEXIT
      6440**DCL      8690>>ASSIGN
CFPT_ERRMSG
      6288**DCL      8631>>ASSIGN
CFPT_OPEN.ACSVEH_
      6092**DCL      6093--REDEF
CFPT_OPEN.ALTKEYS_
      6098**DCL      6099--REDEF    6099--REDEF
CFPT_OPEN.HDR_
      6097**DCL      6098--REDEF
CFPT_OPEN.TAB_
      6096**DCL      6097--REDEF
CFPT_OPEN.UHL_
      6090**DCL      6091--REDEF    6091--REDEF
CFPT_OPEN.V.FSN#
      6130**DCL      6130--REDEF    6130--REDEF
CFPT_OPEN.WSN_
      6096**DCL      6096--REDEF
CFPT_READ.STATION_
      6196**DCL      6197--REDEF
CFPT_READ.V.DVBYTE.REREAD#
      6208**DCL      6208--REDEF
CFPT_READ.V.INDX#
      6206**DCL      6206--REDEF
CFPT_READUC.STATION_
      6566**DCL      6567--REDEF
CFPT_READUC.V.DVBYTE.REREAD#
      6578**DCL      6578--REDEF
CFPT_READUC.V.INDX#
PL6.E3A0      #004=CPC$SCREECH File=CPC$SUBR3.:E05TSI                            TUE 07/29/97 11:31 Page:71   
      6576**DCL      6576--REDEF
CFPT_SCREECH
      7368**DCL      8673>>ASSIGN
CFPT_TRTN.V.IR#
      6802**DCL      6803--REDEF
CFPT_WRITE.STATION_
      6234**DCL      6234--REDEF
CFPT_WRITE.V.DVBYTE.VFC#
      6241**DCL      6241--REDEF
CFPT_WRITEUC.STATION_
      6534**DCL      6534--REDEF
CFPT_WRITEUC.V.DVBYTE.VFC#
      6541**DCL      6541--REDEF
CFPT_XXX.V.STEPCC#
      7514**DCL      7514--REDEF
CGETCMD.OUT$
      7535**DCL      7541--REDEF
CPA$BYE
      8348**DCL-ENT  8687--CALL
CVLP_TRMCTL.BREAKCOUNT
      7126**DCL      7127--REDEF
CVLP_WINDOW.FWINDOW#
      7222**DCL      7222--REDEF    7223--REDEF
ERR_BUF
      8346**DCL      8633--ASSIGN
ERR_CODE
      8453**DCL      8634--ASSIGN   8675--ASSIGN
ERR_CODE.CODE
      8457**DCL      8625<<ASSIGN
ERR_CODE.FCG
      8454**DCL      8623<<ASSIGN
ERR_CODE.MID
      8455**DCL      8624<<ASSIGN
ERR_CODE.MON
      8456**DCL      8626<<ASSIGN
ERR_CODE.SEV
PL6.E3A0      #004=CPC$SCREECH File=CPC$SUBR3.:E05TSI                            TUE 07/29/97 11:31 Page:72   
      8458**DCL      8627<<ASSIGN
E_BYE
      8690**LABEL    8669--GOTO     8687--CALLALT
E_CPEXIT
      8691**LABEL    8692--CALLALT
E_M$SCREECH
      8675**LABEL    8676--CALLALT
FPT_CPEXIT
      8599**DCL      8690<<ASSIGN   8692<>CALL
FPT_CPEXIT.V
      8602**DCL      8691--ASSIGN
FPT_CPEXIT.V_
      8602**DCL      8691<<ASSIGN
FPT_ERRMSG
      8471**DCL      8631<<ASSIGN   8645<>CALL     8655<>CALL
FPT_ERRMSG.BUF_
      8471**DCL      8633<<ASSIGN
FPT_ERRMSG.CODE_
      8471**DCL      8634<<ASSIGN   8654<<ASSIGN
FPT_ERRMSG.RESULTS_
      8474**DCL      8635<<ASSIGN
FPT_ERRMSG.V
      8475**DCL      8632--ASSIGN
FPT_ERRMSG.V.INCLCODE#
      8480**DCL      8636<<ASSIGN
FPT_ERRMSG.V.OUTDCB1#
      8476**DCL      8641<<ASSIGN   8644<<ASSIGN
FPT_ERRMSG.V.VFC#
      8477**DCL      8637<<ASSIGN
FPT_ERRMSG.V_
      8471**DCL      8632<<ASSIGN
FPT_SCREECH
      8520**DCL      8673<<ASSIGN   8676<>CALL
FPT_SCREECH.JERR_
      8520**DCL      8675<<ASSIGN
FPT_SCREECH.SCODE_
PL6.E3A0      #004=CPC$SCREECH File=CPC$SUBR3.:E05TSI                            TUE 07/29/97 11:31 Page:73   
      8520**DCL      8674<<ASSIGN
IGNORE1
      8638**LABEL    8645--CALLALT
IGNORE2
      8650**LABEL    8655--CALLALT
M$CLRSTK
        79**DCL-ENT  8685--CALL
M$CPEXIT
        35**DCL-ENT  8692--CALL
M$ERRMSG
        84**DCL-ENT  8645--CALL     8655--CALL
M$SCREECH
        35**DCL-ENT  8676--CALL
M$UC_NUM
      8279**DCL      8644>>ASSIGN
MID
      8345**DCL        10--PROC     8624>>ASSIGN
SCREECH
      8344**DCL        10--PROC     8625>>ASSIGN
SC_CPABORT
      8540**DCL      8674--ASSIGN
SEG2$
      8269**DCL      8352--IMP-PTR
VLR_ERRMSG
      8498**DCL      8635--ASSIGN
