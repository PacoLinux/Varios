VERSION E05

PL6.E3A0      #001=PAKTST File=FXD$DEBUG.:E05TSI                                 TUE 07/29/97 18:01 Page:1    
        1        1        /*T***********************************************************/
        2        2        /*T*                                                         */
        3        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        4        4        /*T*                                                         */
        5        5        /*T***********************************************************/
        6        6        /* Start of a PL6 comment to house IBEX commands
        7        7        !DEFAULT SRA=:E02OU,PAKTST_END_COMMENT='&&/','&&'='*',DVA=:FMDVOU
        8        8        !DEFAULT OUFID=PAKTST_OU,LOFID=PAKTST_LS
        9        9        !RES TIME=2,MEM=256
       10       10        !SET M$DO *DO
       11       11        !PL6 ME OVER OUFID,LOFID(SR(.SRA),LS)
       12       12        %CHARTEXT('/')*...so it'll work both ways:
       13       13         Either in Host integrations, where this file is simply compiled,
       14       14         or to build PAKTST, where it gets XEQed, possibly with START=LINK.
       15       15         After a Host integration, for example, one might say:
       16       16            XEQ FXD$DEBUG START=LINK,LOFID=NO,SRA=where-host-ou-is,OUFID=FXD$DEBUG
       17       17        */
       18       18
       19       19        PAKTST: PROC MAIN;
       20       20        %INCLUDE CP_6;
       21      101        %INCLUDE DA_CMD_C;
       22      450        %INCLUDE XU_MACRO_C;
       23     3556        %INCLUDE NI$TABLES;
       24     3772        %INCLUDE I_SUBS_C;
       25     3796        %INCLUDE FM$MACROS;
       26     4171        %INCLUDE FR$RAT;
       27     4224        %INCLUDE FR_DATA_R;
       28     4256    1   DCL N$DCT$$ PTR STATIC SYMDEF;
       29     4257    1   DCL S_CUN UBIN STATIC SYMDEF INIT(25);
       30     4258        %FM$CFUX;
       31     4263        %FM$DEV (BASED="BASED(F$CFU$)");
       32     4269        %FM$VOL (BASED="BASED(F$CFU$)");
       33     4275        %NI$DCT;
       34     4323        %NI$DCT (NAME=DCT1, STCLASS=);
       35     4371        %NI$DCT (NAME=DCT2, STCLASS=);
       36     4419        %NI$DCT (NAME=DCT3, STCLASS=);
       37     4467        %NI$DCT (NAME=DCT4, STCLASS=);
PL6.E3A0      #001=PAKTST File=FXD$DEBUG.:E05TSI                                 TUE 07/29/97 18:01 Page:2    
       38     4515        %NI$DCT (NAME=DCT5, STCLASS=);
       39     4563        %NI$DCT (NAME=DCT6, STCLASS=);
       40     4611        %NI$DCT (NAME=DCT7, STCLASS=);
       41     4659        %NI$DCT (NAME=DCT8, STCLASS=);
       42     4707        %NI$DCT (NAME=DCT9, STCLASS=);
       43     4755        %FR$RAT (NAME="FR$RAT(0:8)", STCLASS=);
       44     4795        %NI$DVT;
       45     4802    1   DCL N$DCT$(0:9) PTR;
       46     4803    1   DCL CFUS(0:1023) UBIN;
       47     4804    1   DCL B$DS1$ PTR STATIC SYMDEF;
       48     4805    1   DCL F$CFU$ PTR STATIC SYMDEF;
       49     4806    1   DCL FM$SET$ PTR STATIC SYMDEF;
       50     4807    1   DCL B$JIT$ PTR STATIC SYMDEF;
       51     4808        %F$DCB;
       52     4865    1   DCL M$CAT DCB;
       53     4866        %FPT_OPEN (FPTN=SETCAT, STCLASS=CONSTANT, DCB=M$CAT, ACCT=ERASE, SETDCB=YES);
       54     4975    1   DCL DAD$CFUS ENTRY(1);
       55     4976    1   DCL DAD$DCT ENTRY(1);
       56     4977    1   DCL DAD$RAT ENTRY(1);
       57     4978    1   DCL FMR$M8 ENTRY(2);
       58     4979    1   DCL FXD$PMME ENTRY(1) ALTRET;
       59     4980    1   DCL IGG$GETFILES ENTRY(1);
       60     4981    1   DCL FXP$MAIN ENTRY ALTRET;
       61     4982    1   DCL FM_SRZERO SBIN SYMREF;
       62     4983    1   DCL NI_DPDVT1 UBIN SYMREF;
       63     4984    1   DCL NI_DPDVT2 UBIN SYMREF;
       64     4985    1   DCL FMS$GARBCOL ENTRY ALTRET;
       65     4986    1   DCL M$DP DCB;
       66     4987    1   DCL M$DP$ PTR SYMREF;
       67     4988        %FPT_RELDCB (STCLASS=CONSTANT, DCB="DCBNUM(M$DP)");
       68     5002        %FPT_OPEN (FPTN=AVR,DCB=M$DP,SN=ERASE,STCLASS=CONSTANT,SCRUB=YES,RES='DP');
       69     5111        %FPT_CLOSE (FPTN=AVRC, DCB=M$DP, STCLASS=CONSTANT);
       70     5153        %FPT_READ (FPTN=READSI, DCB=M$SI, BUF=SIBUF, STCLASS=CONSTANT);
       71     5192        %FPT_WRITE (FPTN=FPT_WRITE, DCB=M$LO, BUF=SIBUF, STCLASS=CONSTANT);
       72     5223    1   DCL M$SI DCB;
       73     5224    1   DCL M$LO DCB;
       74     5225    1   DCL BUFS(0:3071) UBIN; /* FM BUFFERS */
PL6.E3A0      #001=PAKTST File=FXD$DEBUG.:E05TSI                                 TUE 07/29/97 18:01 Page:3    
       75     5226    1   DCL FM$BUF$(0:3) PTR STATIC SYMDEF INIT(ADDR(NIL)*0);
       76     5227    1   DCL HEAD_BUF UBIN STATIC SYMDEF INIT(1);
       77     5228        %INCLUDE F$JIT_C;
       78     5345    1   DCL PACKS(0:9) UBIN STATIC SYMDEF INIT(0*0);
       79     5346        %FPT_READ (FPTN=RWPACK, DCB=M$PACKS, BUF=PACKS, KEY=PACKEY, KEYS=YES, INDX=256);
       80     5385    1   DCL M$PACKS DCB;
       81     5386    1   DCL PACKEY CONSTANT BIT(18) INIT('001'O);
       82     5387    1   DCL B$USRT$ PTR STATIC SYMDEF;
       83     5388    1   DCL B$ISB$ UBIN CONSTANT SYMDEF INIT(%BITBIN('6000'O));
       84     5389    1   DCL IS0$ REDEF B$ISB$ PTR;
       85     5390    1   DCL IS0 BIT(36) ALIGNED BASED(IS0$);
       86     5391    1   DCL TRA_1_X1 CONSTANT BIT(36) INIT('000001710011'O);
       87     5392    1   DCL LS1 UBIN CONSTANT INIT(%BITBIN('6001'O));
       88     5393    1   DCL LS1$ REDEF LS1 PTR;
       89     5394        %PARSE$OUT (NSUBLKS="NSUBLKS INIT(1)",NAME=TOPBLK, STCLASS=STATIC);
       90     5439        %PARSE$OUT (NSUBLKS="* INIT(0)",NAME=DEVBLK, STCLASS=STATIC);
       91     5484        %PARSE$OUT (NSUBLKS="* INIT(0)",NAME=SETBLK, STCLASS=STATIC);
       92     5529        %PARSE$OUT (NSUBLKS="* INIT(0)",NAME=RATBLK, STCLASS=STATIC);
       93     5574    1   DCL SIBUF CHAR(80) STATIC;
       94     5575    1   DCL J SBIN;
       95     5576    1   DCL I SBIN;
       96     5577        %EJECT;
PL6.E3A0      #001=PAKTST File=FXD$DEBUG.:E05TSI                                 TUE 07/29/97 18:01 Page:4    
       97     5578    1      IS0=TRA_1_X1; /* Take care of any PREFs that don't matter */
       98     5579    1      B$JIT$=ADDR(CFUS(768)); B$USRT$=B$JIT$;
       99     5580    1      B$DS1$=ADDR(CFUS);
      100     5581    1      F$CFU$=ADDR(CFUS);
      101     5582    1      FM$SET$=ADDR(CFUS);
      102     5583    1      DEVBLK.CODE=%DA_CFUS_DEVICE;
      103     5584    1      SETBLK.CODE=%DA_CFUS_SET;
      104     5585    1      RATBLK.CODE=0;
      105     5586    1      BUFS(0)=2; FM$BUF$(1)=ADDR(BUFS(0));
      106     5587    1      BUFS(1024)=3; FM$BUF$(2)=ADDR(BUFS(1024));
      107     5588    1      BUFS(2048)=0; FM$BUF$(3)=ADDR(BUFS(2048));
      108     5589    1      CALL FMS$GARBCOL;
      109     5590    1      CALL M$RELDCB (FPT_RELDCB);
      110     5591    1      IF DCBADDR(DCBNUM(M$CAT))->F$DCB.ACCT#=':SYS' THEN CALL M$OPEN(SETCAT);
      111     5592    1      N$DCT$(0)=PINCRW(ADDR(DCT1),-SIZEW(NI$DCT));
      112     5593    2      CALL M$READ (RWPACK) WHENALTRETURN DO; END;
      113     5594    2      DO I=1 TO 9;
      114     5595        /* BUILD DCT TABLES */
      115     5596    2         N$DCT$(I)=PINCRW(N$DCT$(I-1),SIZEW(NI$DCT));
      116     5597    2         N$DCT$(I)->NI$DCT='0'B;
      117     5598    2         N$DCT$(I)->NI$DCT.DCTX=I;
      118     5599    2         N$DCT$(I)->NI$DCT.FL$=ADDR(NIL);
      119     5600    2         N$DCT$(I)->NI$DCT.DQH$=ADDR(NIL);
      120     5601    2         IF I<7 THEN N$DCT$(I)->NI$DCT.DVT$=ADDR(NI_DPDVT1);
      121     5602    2         ELSE N$DCT$(I)->NI$DCT.DVT$=ADDR(NI_DPDVT2);
      122     5603    2         N$DCT$(I)->NI$DCT.DEVNM='DP000000';
      123     5604    2         SUBSTR(N$DCT$(I)->NI$DCT.DEVNM,3,1)=BINASC(I+48);
      124     5605    2         N$DCT$(I)->NI$DCT.RAT$=ADDR(FR$RAT(I-1));
      125     5606    2         FR$RAT(I-1)='0'B;
      126     5607    2         FR$RAT.DCTX(I-1)=I;
      127     5608    2         FR$RAT.LNK$(I-1)=ADDR(FR$RAT(I));
      128     5609    2         FR$RAT.M1(I-1)=N$DCT$(I)->NI$DCT.DVT$->NI$DVT.ATTR;
      129     5610    2         FR$RAT.TYP(I-1)='DP';
      130     5611    2         CALL FMR$M8 (ADDR(FM$DEV(I)),ADDR(FM$DEV(I)));
      131     5612    2         FM$DEV.DCTX(I)=I;
      132     5613    2         FM$DEV.NN(I)=I;
      133     5614    2         FM$DEV.NXTSDA(I)=N$DCT$(I)->NI$DCT.DVT$->NI$DVT.PACKSIZE+FM_SRZERO;
PL6.E3A0      #001=PAKTST File=FXD$DEBUG.:E05TSI                                 TUE 07/29/97 18:01 Page:5    
      134     5615    2         FM$DEV.DEVL(I)=I+1;
      135     5616    2         FM$DEV.XCL(I)='1'B;
      136     5617    2         FM$DEV.AVR(I)='1'B;
      137     5618    2         IF PACKS(I)~=0 THEN FM$DEV.SPIN(I)='1'B;
      138     5619    2         END;
      139     5620    1      FM$CFUX.DSETH=1;
      140     5621    1      FM$DEV.DEVL(9)=0;
      141     5622    1      FR$RAT.LNK$(8)=ADDR(NIL);
      142     5623    1      FR$HD$(0)=ADDR(FR$RAT);
      143     5624    1      N$DCT$$=ADDR(N$DCT$);
      144     5625    1      B$JIT.SYSID=7; B$JIT.USER=4; B$JIT.MODE=%M_GHOST#;
      145     5626    1      B$JIT.PRIV.ACTIVE=%PR_FMDIAG#;
      146     5627    1      B$JIT.PRIV.AUTH=%PR_FMDIAG#;
      147     5628    1      B$JIT.PRIV.JOB=%PR_FMDIAG#;
      148     5629    1      CALL DOAVRS;
      149     5630    1      CALL FXP$MAIN;
      150     5631    1   NEXTSI:;
      151     5632    1      SIBUF=' ';
      152     5633    2      CALL M$READ (READSI) WHENALTRETURN DO; RETURN; END;
      153     5634    2      DO SELECT SUBSTR(SIBUF,0,1);
      154     5635    2      SELECT ELSE;
      155     5636    2   HELP: SIBUF='Enter Igg|Ghost1, Pig, Cfus, Rats, Dcts, DPnn vsn|0, or End';
      156     5637    2      SELECT 'E','Q';
      157     5638    2            RETURN;
      158     5639    2      SELECT 'P';
      159     5640    2         CALL DOAVRS;
      160     5641    2         CALL FXP$MAIN;
      161     5642    2      SELECT 'G','I';
      162     5643    3         DO I=1 TO 9;
      163     5644    4            IF FM$DEV.SPIN(I) THEN DO;
      164     5645    4               FM$DEV.SPIN(I)='0'B;
      165     5646    4               FM$DEV.AVR(I)='1'B;
      166     5647    4               CALL DOAVRS; /* DISMOUNT FIRST */
      167     5648    4               FM$DEV.SPIN(I)='1'B;
      168     5649    4               END;
      169     5650    3            END;
      170     5651    3         DO I=1 TO 9;
PL6.E3A0      #001=PAKTST File=FXD$DEBUG.:E05TSI                                 TUE 07/29/97 18:01 Page:6    
      171     5652    3            IF FM$DEV.SPIN(I) THEN FM$DEV.AVR(I)='1'B;
      172     5653    3            END;
      173     5654    2         B$JIT.USER=1;
      174     5655    2         B$JIT.SYSID=1;
      175     5656    2         CALL IGG$GETFILES(I_NEWFILES);
      176     5657    2         B$JIT.SYSID=7;
      177     5658    2         B$JIT.USER=4;
      178     5659    2      SELECT 'C';
      179     5660    2         TOPBLK.SUBLK$(0)=ADDR(DEVBLK);
      180     5661    2         CALL DAD$CFUS(TOPBLK);
      181     5662    2         TOPBLK.SUBLK$(0)=ADDR(SETBLK);
      182     5663    2         CALL DAD$CFUS(TOPBLK);
      183     5664    2      SELECT 'R';
      184     5665    2         TOPBLK.SUBLK$(0)=ADDR(RATBLK);
      185     5666    2         CALL DAD$RAT(TOPBLK);
      186     5667    2      SELECT 'D';
      187     5668    3         IF SUBSTR(SIBUF,1)=' ' THEN DO;
      188     5669    3            TOPBLK.NSUBLKS=0;
      189     5670    3            CALL DAD$DCT(TOPBLK);
      190     5671    3            TOPBLK.NSUBLKS=1;
      191     5672    3            GOTO NEXTSI;
      192     5673    3            END;
      193     5674    2         IF SUBSTR(SIBUF,1,2)~='P0' OR SUBSTR(SIBUF,3,1)>'9'
      194     5675    2           OR SUBSTR(SIBUF,3,1)<'1' OR SUBSTR(SIBUF,4,1)~=' ' THEN GOTO HELP;
      195     5676    2         I=ASCBIN(SUBSTR(SIBUF,3,1))-48;
      196     5677    2         IF SUBSTR(SIBUF,5)='0'
      197     5678    2         THEN IF NOT FM$DEV.SPIN(I) THEN SIBUF='Not now spinning';
      198     5679    3         ELSE DO;
      199     5680    3            FM$DEV.SPIN(I)='0'B;
      200     5681    3            PACKS(I)=0;
      201     5682    3            CALL M$WRITE (RWPACK);
      202     5683    3            END;
      203     5684    2         ELSE IF FM$DEV.SPIN(I) THEN SIBUF='Already spinning';
      204     5685    3         ELSE DO;
      205     5686    3            J=5;
      206     5687    4            DO WHILE SUBSTR(SIBUF,J,1)~=' ';
      207     5688    4               IF SUBSTR(SIBUF,J,1)<'0' OR SUBSTR(SIBUF,J,1)>'9' THEN GOTO HELP;
PL6.E3A0      #001=PAKTST File=FXD$DEBUG.:E05TSI                                 TUE 07/29/97 18:01 Page:7    
      208     5689    4               J=J+1;
      209     5690    4               END;
      210     5691    3            CALL CHARBIN(J,SUBSTR(SIBUF,5,J-5));
      211     5692    3            PACKS(I)=J;
      212     5693    3            FM$DEV.SPIN(I)='1'B;
      213     5694    3            CALL M$WRITE (RWPACK);
      214     5695    3            END;
      215     5696    2         FM$DEV.AVR(I)='1'B;
      216     5697    2         END;
      217     5698    1      IF SUBSTR(SIBUF,15,2)~=' ' THEN CALL M$WRITE(FPT_WRITE);
      218     5699    1      GOTO NEXTSI;
      219     5700    1   DOAVRS: PROC;
      220     5701    3      DO WHILE '1'B;
      221     5702    4         CALL M$OPEN (AVR) WHENALTRETURN DO; CALL FXD$PMME; END;
      222     5703    3         IF NOT M$DP$->F$DCB.FCD# THEN EXIT;
      223     5704    4         CALL M$CLOSE (AVRC) WHENALTRETURN DO; CALL FXD$PMME; END;
      224     5705    3         END;
      225     5706    2   END DOAVRS;
      226     5707    1   END PAKTST;
      227     5708        %EOD;

PL6.E3A0      #001=PAKTST File=FXD$DEBUG.:E05TSI                                 TUE 07/29/97 18:01 Page:8    
--  Include file information  --

   F$JIT_C.:E05TOU  cannot be made into a system file and is referenced.
   FR_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   FR$RAT.:E05TOU  is referenced.
   FM$MACROS.:E05TOU  is referenced.
   I_SUBS_C.:E05TOU  is referenced.
   NI$TABLES.:E05TOU  is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
   DA_CMD_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure PAKTST.

   Procedure PAKTST requires 487 words for executable code.
   Procedure PAKTST requires 4532 words of local(AUTO) storage.

PL6.E3A0      #001=PAKTST File=FXD$DEBUG.:E05TSI                                 TUE 07/29/97 18:01 Page:9    

 Object Unit name= PAKTST                                     File name= FXD$DEBUG.:E05TOU
 UTS= JUL 29 '97 18:01:38.20 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1   Data  even  none    73    111  PAKTST
    2   DCB   even  none     0      0  M$CAT
    3  RoData even  UTS    208    320  PAKTST
    4   DCB   even  none     0      0  M$DP
    5   DCB   even  none     0      0  M$SI
    6   DCB   even  none     0      0  M$LO
    7   DCB   even  none     0      0  M$PACKS
    8   Proc  even  none   487    747  PAKTST
    9  RoData even  none    13     15  PAKTST

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     8      0   yes            yes      Main       0  PAKTST
PL6.E3A0      #001=PAKTST File=FXD$DEBUG.:E05TSI                                 TUE 07/29/97 18:01 Page:10   

  ****  Data defs  ****

 Sect OctLoc  Name                           Sect OctLoc  Name
    1      0  N$DCT$$                            1      1  S_CUN
    1      2  B$DS1$                             1      3  F$CFU$
    1      4  FM$SET$                            1      5  B$JIT$
    1      6  FM$BUF$                            1     12  HEAD_BUF
    1     13  PACKS                              1     44  B$USRT$
    3    261  B$ISB$

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       0 FMS$GARBCOL
         yes           Std       1 DAD$CFUS
         yes           Std       2 FMR$M8
 yes     yes           Std       0 FXP$MAIN
         yes           Std       1 DAD$DCT
         yes           Std       1 IGG$GETFILES
         yes           Std       1 DAD$RAT
 yes     yes           Std       1 FXD$PMME
                       nStd      0 X66_MAUTO
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_MARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                                  FR$HD$                                M$CAT
     FM_SRZERO                             NI_DPDVT1                             NI_DPDVT2
     M$DP                                  M$DP$                                 M$SI
     M$LO                                  M$PACKS                               B_VECTNIL
PL6.E3A0      #001=PAKTST File=FXD$DEBUG.:E05TSI                                 TUE 07/29/97 18:01 Page:11   

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID                                 NULLSID                               ROSID
PL6.E3A0      #001=PAKTST File=FXD$DEBUG.:E05TSI                                 TUE 07/29/97 18:01 Page:12   


        1        1        /*T***********************************************************/
        2        2        /*T*                                                         */
        3        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        4        4        /*T*                                                         */
        5        5        /*T***********************************************************/
        6        6        /* Start of a PL6 comment to house IBEX commands
        7        7        !DEFAULT SRA=:E02OU,PAKTST_END_COMMENT='&&/','&&'='*',DVA=:FMDVOU
        8        8        !DEFAULT OUFID=PAKTST_OU,LOFID=PAKTST_LS
        9        9        !RES TIME=2,MEM=256
       10       10        !SET M$DO *DO
       11       11        !PL6 ME OVER OUFID,LOFID(SR(.SRA),LS)
       12       12        %CHARTEXT('/')*...so it'll work both ways:
       13       13         Either in Host integrations, where this file is simply compiled,
       14       14         or to build PAKTST, where it gets XEQed, possibly with START=LINK.
       15       15         After a Host integration, for example, one might say:
       16       16            XEQ FXD$DEBUG START=LINK,LOFID=NO,SRA=where-host-ou-is,OUFID=FXD$DEBUG
       17       17        */
       18       18
       19       19        PAKTST: PROC MAIN;

     19  8 000000   000000 700200 xent  PAKTST       TSX0  ! X66_MAUTO
         8 000001   010664 000000                    ZERO    4532,0

       20       20        %INCLUDE CP_6;
       21      101        %INCLUDE DA_CMD_C;
       22      450        %INCLUDE XU_MACRO_C;
       23     3556        %INCLUDE NI$TABLES;
       24     3772        %INCLUDE I_SUBS_C;
       25     3796        %INCLUDE FM$MACROS;
       26     4171        %INCLUDE FR$RAT;
       27     4224        %INCLUDE FR_DATA_R;
       28     4256    1   DCL N$DCT$$ PTR STATIC SYMDEF;
       29     4257    1   DCL S_CUN UBIN STATIC SYMDEF INIT(25);
       30     4258        %FM$CFUX;
       31     4263        %FM$DEV (BASED="BASED(F$CFU$)");
       32     4269        %FM$VOL (BASED="BASED(F$CFU$)");
PL6.E3A0      #001=PAKTST File=FXD$DEBUG.:E05TSI                                 TUE 07/29/97 18:01 Page:13   
       33     4275        %NI$DCT;
       34     4323        %NI$DCT (NAME=DCT1, STCLASS=);
       35     4371        %NI$DCT (NAME=DCT2, STCLASS=);
       36     4419        %NI$DCT (NAME=DCT3, STCLASS=);
       37     4467        %NI$DCT (NAME=DCT4, STCLASS=);
       38     4515        %NI$DCT (NAME=DCT5, STCLASS=);
       39     4563        %NI$DCT (NAME=DCT6, STCLASS=);
       40     4611        %NI$DCT (NAME=DCT7, STCLASS=);
       41     4659        %NI$DCT (NAME=DCT8, STCLASS=);
       42     4707        %NI$DCT (NAME=DCT9, STCLASS=);
       43     4755        %FR$RAT (NAME="FR$RAT(0:8)", STCLASS=);
       44     4795        %NI$DVT;
       45     4802    1   DCL N$DCT$(0:9) PTR;
       46     4803    1   DCL CFUS(0:1023) UBIN;
       47     4804    1   DCL B$DS1$ PTR STATIC SYMDEF;
       48     4805    1   DCL F$CFU$ PTR STATIC SYMDEF;
       49     4806    1   DCL FM$SET$ PTR STATIC SYMDEF;
       50     4807    1   DCL B$JIT$ PTR STATIC SYMDEF;
       51     4808        %F$DCB;
       52     4865    1   DCL M$CAT DCB;
       53     4866        %FPT_OPEN (FPTN=SETCAT, STCLASS=CONSTANT, DCB=M$CAT, ACCT=ERASE, SETDCB=YES);
       54     4975    1   DCL DAD$CFUS ENTRY(1);
       55     4976    1   DCL DAD$DCT ENTRY(1);
       56     4977    1   DCL DAD$RAT ENTRY(1);
       57     4978    1   DCL FMR$M8 ENTRY(2);
       58     4979    1   DCL FXD$PMME ENTRY(1) ALTRET;
       59     4980    1   DCL IGG$GETFILES ENTRY(1);
       60     4981    1   DCL FXP$MAIN ENTRY ALTRET;
       61     4982    1   DCL FM_SRZERO SBIN SYMREF;
       62     4983    1   DCL NI_DPDVT1 UBIN SYMREF;
       63     4984    1   DCL NI_DPDVT2 UBIN SYMREF;
       64     4985    1   DCL FMS$GARBCOL ENTRY ALTRET;
       65     4986    1   DCL M$DP DCB;
       66     4987    1   DCL M$DP$ PTR SYMREF;
       67     4988        %FPT_RELDCB (STCLASS=CONSTANT, DCB="DCBNUM(M$DP)");
       68     5002        %FPT_OPEN (FPTN=AVR,DCB=M$DP,SN=ERASE,STCLASS=CONSTANT,SCRUB=YES,RES='DP');
       69     5111        %FPT_CLOSE (FPTN=AVRC, DCB=M$DP, STCLASS=CONSTANT);
PL6.E3A0      #001=PAKTST File=FXD$DEBUG.:E05TSI                                 TUE 07/29/97 18:01 Page:14   
       70     5153        %FPT_READ (FPTN=READSI, DCB=M$SI, BUF=SIBUF, STCLASS=CONSTANT);
       71     5192        %FPT_WRITE (FPTN=FPT_WRITE, DCB=M$LO, BUF=SIBUF, STCLASS=CONSTANT);
       72     5223    1   DCL M$SI DCB;
       73     5224    1   DCL M$LO DCB;
       74     5225    1   DCL BUFS(0:3071) UBIN; /* FM BUFFERS */
       75     5226    1   DCL FM$BUF$(0:3) PTR STATIC SYMDEF INIT(ADDR(NIL)*0);
       76     5227    1   DCL HEAD_BUF UBIN STATIC SYMDEF INIT(1);
       77     5228        %INCLUDE F$JIT_C;
       78     5345    1   DCL PACKS(0:9) UBIN STATIC SYMDEF INIT(0*0);
       79     5346        %FPT_READ (FPTN=RWPACK, DCB=M$PACKS, BUF=PACKS, KEY=PACKEY, KEYS=YES, INDX=256);
       80     5385    1   DCL M$PACKS DCB;
       81     5386    1   DCL PACKEY CONSTANT BIT(18) INIT('001'O);
       82     5387    1   DCL B$USRT$ PTR STATIC SYMDEF;
       83     5388    1   DCL B$ISB$ UBIN CONSTANT SYMDEF INIT(%BITBIN('6000'O));
       84     5389    1   DCL IS0$ REDEF B$ISB$ PTR;
       85     5390    1   DCL IS0 BIT(36) ALIGNED BASED(IS0$);
       86     5391    1   DCL TRA_1_X1 CONSTANT BIT(36) INIT('000001710011'O);
       87     5392    1   DCL LS1 UBIN CONSTANT INIT(%BITBIN('6001'O));
       88     5393    1   DCL LS1$ REDEF LS1 PTR;
       89     5394        %PARSE$OUT (NSUBLKS="NSUBLKS INIT(1)",NAME=TOPBLK, STCLASS=STATIC);
       90     5439        %PARSE$OUT (NSUBLKS="* INIT(0)",NAME=DEVBLK, STCLASS=STATIC);
       91     5484        %PARSE$OUT (NSUBLKS="* INIT(0)",NAME=SETBLK, STCLASS=STATIC);
       92     5529        %PARSE$OUT (NSUBLKS="* INIT(0)",NAME=RATBLK, STCLASS=STATIC);
       93     5574    1   DCL SIBUF CHAR(80) STATIC;
       94     5575    1   DCL J SBIN;
       95     5576    1   DCL I SBIN;
       96     5577        %EJECT;
PL6.E3A0      #001=PAKTST File=FXD$DEBUG.:E05TSI                                 TUE 07/29/97 18:01 Page:15   
       97     5578    1      IS0=TRA_1_X1; /* Take care of any PREFs that don't matter */

   5578  8 000002   000262 236000 3                  LDQ     TRA_1_X1
         8 000003   000261 470400 3                  LDP0    B$ISB$
         8 000004   000000 756100                    STQ     0,,PR0

       98     5579    1      B$JIT$=ADDR(CFUS(768)); B$USRT$=B$JIT$;

   5579  8 000005   202253 631500                    EPPR1   CFUS+768,,AUTO
         8 000006   000005 451400 1                  STP1    B$JIT$

   5579  8 000007   000005 236000 1                  LDQ     B$JIT$
         8 000010   000044 756000 1                  STQ     B$USRT$

       99     5580    1      B$DS1$=ADDR(CFUS);

   5580  8 000011   200653 633500                    EPPR3   CFUS,,AUTO
         8 000012   000002 453400 1                  STP3    B$DS1$

      100     5581    1      F$CFU$=ADDR(CFUS);

   5581  8 000013   200653 634500                    EPPR4   CFUS,,AUTO
         8 000014   000003 454400 1                  STP4    F$CFU$

      101     5582    1      FM$SET$=ADDR(CFUS);

   5582  8 000015   200653 635500                    EPPR5   CFUS,,AUTO
         8 000016   000004 455400 1                  STP5    FM$SET$

      102     5583    1      DEVBLK.CODE=%DA_CFUS_DEVICE;

   5583  8 000017   000001 220003                    LDX0    1,DU
         8 000020   000051 440000 1                  SXL0    DEVBLK

      103     5584    1      SETBLK.CODE=%DA_CFUS_SET;

   5584  8 000021   000002 221003                    LDX1    2,DU
PL6.E3A0      #001=PAKTST File=FXD$DEBUG.:E05TSI                                 TUE 07/29/97 18:01 Page:16   
         8 000022   000055 441000 1                  SXL1    SETBLK

      104     5585    1      RATBLK.CODE=0;

   5585  8 000023   000000 222003                    LDX2    0,DU
         8 000024   000061 442000 1                  SXL2    RATBLK

      105     5586    1      BUFS(0)=2; FM$BUF$(1)=ADDR(BUFS(0));

   5586  8 000025   000002 235007                    LDA     2,DL
         8 000026   202653 755100                    STA     BUFS,,AUTO

   5586  8 000027   202653 636500                    EPPR6   BUFS,,AUTO
         8 000030   000007 456400 1                  STP6    FM$BUF$+1

      106     5587    1      BUFS(1024)=3; FM$BUF$(2)=ADDR(BUFS(1024));

   5587  8 000031   000003 235007                    LDA     3,DL
         8 000032   204653 755100                    STA     BUFS+1024,,AUTO

   5587  8 000033   204653 637500                    EPPR7   BUFS+1024,,AUTO
         8 000034   000010 457400 1                  STP7    FM$BUF$+2

      107     5588    1      BUFS(2048)=0; FM$BUF$(3)=ADDR(BUFS(2048));

   5588  8 000035   206653 450100                    STZ     BUFS+2048,,AUTO

   5588  8 000036   206653 630500                    EPPR0   BUFS+2048,,AUTO
         8 000037   000011 450400 1                  STP0    FM$BUF$+3

      108     5589    1      CALL FMS$GARBCOL;

   5589  8 000040   000002 631400 xsym               EPPR1   B_VECTNIL+2
         8 000041   000000 701000 xent               TSX1    FMS$GARBCOL
         8 000042   000000 011000                    NOP     0

      109     5590    1      CALL M$RELDCB (FPT_RELDCB);
PL6.E3A0      #001=PAKTST File=FXD$DEBUG.:E05TSI                                 TUE 07/29/97 18:01 Page:17   

   5590  8 000043   000072 630400 3                  EPPR0   FPT_RELDCB
         8 000044   060003 713400                    CLIMB   24579
         8 000045   400000 401760                    pmme    nvectors=1

      110     5591    1      IF DCBADDR(DCBNUM(M$CAT))->F$DCB.ACCT#=':SYS' THEN CALL M$OPEN(SETCAT);

   5591  8 000046   000000 236007 xsym               LDQ     M$CAT,DL
         8 000047   000000 470400 9                  LDP0    0
         8 000050   000000 471500                    LDP1    0,,PR0
         8 000051   100000 473506                    LDP3    0,QL,PR1
         8 000052   040000 106500                    CMPC    fill='040'O
         8 000053   300020 000010                    ADSC9   16,,PR3                  cn=0,n=8
         8 000054   000264 000004 3                  ADSC9   TRA_1_X1+2               cn=0,n=4
         8 000055   000061 601000 8                  TNZ     s:5592

   5591  8 000056   000000 630400 3                  EPPR0   SETCAT
         8 000057   050000 713400                    CLIMB   open
         8 000060   410400 401760                    pmme    nvectors=18

      111     5592    1      N$DCT$(0)=PINCRW(ADDR(DCT1),-SIZEW(NI$DCT));

   5592  8 000061   277736 630500                    EPPR0   I-4558,,AUTO
         8 000062   200641 450500                    STP0    N$DCT$,,AUTO

      112     5593    2      CALL M$READ (RWPACK) WHENALTRETURN DO; END;

   5593  8 000063   000026 630400 1                  EPPR0   RWPACK
         8 000064   440000 713400                    CLIMB   alt,read
         8 000065   401400 401760                    pmme    nvectors=4
         8 000066   000070 702000 8                  TSX2    s:5594
         8 000067   000070 710000 8                  TRA     s:5594

      113     5594    2      DO I=1 TO 9;

   5594  8 000070   000001 235007                    LDA     1,DL
         8 000071   210654 755100                    STA     I,,AUTO
PL6.E3A0      #001=PAKTST File=FXD$DEBUG.:E05TSI                                 TUE 07/29/97 18:01 Page:18   

      114     5595        /* BUILD DCT TABLES */
      115     5596    2         N$DCT$(I)=PINCRW(N$DCT$(I-1),SIZEW(NI$DCT));

   5596  8 000072   210654 720100                    LXL0    I,,AUTO
         8 000073   200640 236110                    LDQ     FR$RAT+80,X0,AUTO
         8 000074   000045 036003                    ADLQ    37,DU
         8 000075   200641 756110                    STQ     N$DCT$,X0,AUTO

      116     5597    2         N$DCT$(I)->NI$DCT='0'B;

   5597  8 000076   200641 470510                    LDP0    N$DCT$,X0,AUTO
         8 000077   000100 100400                    MLR     fill='000'O
         8 000100   000002 000001 xsym               ADSC9   B_VECTNIL+2              cn=0,n=1
         8 000101   000000 000224                    ADSC9   0,,PR0                   cn=0,n=148

      117     5598    2         N$DCT$(I)->NI$DCT.DCTX=I;

   5598  8 000102   200641 470510                    LDP0    N$DCT$,X0,AUTO
         8 000103   210654 236100                    LDQ     I,,AUTO
         8 000104   000025 736000                    QLS     21
         8 000105   000006 676100                    ERQ     6,,PR0
         8 000106   777770 376003                    ANQ     -8,DU
         8 000107   000006 656100                    ERSQ    6,,PR0

      118     5599    2         N$DCT$(I)->NI$DCT.FL$=ADDR(NIL);

   5599  8 000110   200641 470510                    LDP0    N$DCT$,X0,AUTO
         8 000111   000001 236000 xsym               LDQ     B_VECTNIL+1
         8 000112   000000 756100                    STQ     0,,PR0

      119     5600    2         N$DCT$(I)->NI$DCT.DQH$=ADDR(NIL);

   5600  8 000113   200641 470510                    LDP0    N$DCT$,X0,AUTO
         8 000114   000001 236000 xsym               LDQ     B_VECTNIL+1
         8 000115   000023 756100                    STQ     19,,PR0

PL6.E3A0      #001=PAKTST File=FXD$DEBUG.:E05TSI                                 TUE 07/29/97 18:01 Page:19   
      120     5601    2         IF I<7 THEN N$DCT$(I)->NI$DCT.DVT$=ADDR(NI_DPDVT1);

   5601  8 000116   210654 235100                    LDA     I,,AUTO
         8 000117   000007 115007                    CMPA    7,DL
         8 000120   000125 605000 8                  TPL     s:5602

   5601  8 000121   200641 470510                    LDP0    N$DCT$,X0,AUTO
         8 000122   000001 236000 9                  LDQ     1
         8 000123   000024 756100                    STQ     20,,PR0
         8 000124   000130 710000 8                  TRA     s:5603

      121     5602    2         ELSE N$DCT$(I)->NI$DCT.DVT$=ADDR(NI_DPDVT2);

   5602  8 000125   200641 470510                    LDP0    N$DCT$,X0,AUTO
         8 000126   000002 236000 9                  LDQ     2
         8 000127   000024 756100                    STQ     20,,PR0

      122     5603    2         N$DCT$(I)->NI$DCT.DEVNM='DP000000';

   5603  8 000130   200641 470510                    LDP0    N$DCT$,X0,AUTO
         8 000131   040100 100400                    MLR     fill='040'O
         8 000132   000265 000010 3                  ADSC9   TRA_1_X1+3               cn=0,n=8
         8 000133   000002 000010                    ADSC9   2,,PR0                   cn=0,n=8

      123     5604    2         SUBSTR(N$DCT$(I)->NI$DCT.DEVNM,3,1)=BINASC(I+48);

   5604  8 000134   200641 470510                    LDP0    N$DCT$,X0,AUTO
         8 000135   210654 236100                    LDQ     I,,AUTO
         8 000136   000060 036007                    ADLQ    48,DL
         8 000137   000033 736000                    QLS     27
         8 000140   000003 276000 9                  ORQ     3
         8 000141   000033 772000                    QRL     27
         8 000142   000002 552104                    STBQ    2,'04'O,PR0

      124     5605    2         N$DCT$(I)->NI$DCT.RAT$=ADDR(FR$RAT(I-1));

   5605  8 000143   200641 470510                    LDP0    N$DCT$,X0,AUTO
PL6.E3A0      #001=PAKTST File=FXD$DEBUG.:E05TSI                                 TUE 07/29/97 18:01 Page:20   
         8 000144   210654 236100                    LDQ     I,,AUTO
         8 000145   000011 402007                    MPY     9,DL
         8 000146   200507 631506                    EPPR1   DCT1+324,QL,AUTO
         8 000147   000005 451500                    STP1    5,,PR0

      125     5606    2         FR$RAT(I-1)='0'B;

   5606  8 000150   210654 236100                    LDQ     I,,AUTO
         8 000151   000044 402007                    MPY     36,DL
         8 000152   000106 100400                    MLR     fill='000'O
         8 000153   000002 000001 xsym               ADSC9   B_VECTNIL+2              cn=0,n=1
         8 000154   200507 000044                    ADSC9   DCT1+324,Q,AUTO          cn=0,n=36

      126     5607    2         FR$RAT.DCTX(I-1)=I;

   5607  8 000155   210654 236100                    LDQ     I,,AUTO
         8 000156   000011 402007                    MPY     9,DL
         8 000157   200512 440106                    SXL0    DCT1+327,QL,AUTO

      127     5608    2         FR$RAT.LNK$(I-1)=ADDR(FR$RAT(I));

   5608  8 000160   200520 630506                    EPPR0   FR$RAT,QL,AUTO
         8 000161   200507 450506                    STP0    DCT1+324,QL,AUTO

      128     5609    2         FR$RAT.M1(I-1)=N$DCT$(I)->NI$DCT.DVT$->NI$DVT.ATTR;

   5609  8 000162   200641 471510                    LDP1    N$DCT$,X0,AUTO
         8 000163   100024 473500                    LDP3    20,,PR1
         8 000164   300056 721100                    LXL1    46,,PR3
         8 000165   200515 741106                    STX1    DCT1+330,QL,AUTO

      129     5610    2         FR$RAT.TYP(I-1)='DP';

   5610  8 000166   000265 222000 3                  LDX2    TRA_1_X1+3
         8 000167   200517 742106                    STX2    DCT1+332,QL,AUTO

      130     5611    2         CALL FMR$M8 (ADDR(FM$DEV(I)),ADDR(FM$DEV(I)));
PL6.E3A0      #001=PAKTST File=FXD$DEBUG.:E05TSI                                 TUE 07/29/97 18:01 Page:21   

   5611  8 000170   210654 236100                    LDQ     I,,AUTO
         8 000171   000025 736000                    QLS     21
         8 000172   000003 036000 1                  ADLQ    F$CFU$
         8 000173   210660 756100                    STQ     I+4,,AUTO
         8 000174   210654 236100                    LDQ     I,,AUTO
         8 000175   000025 736000                    QLS     21
         8 000176   000003 036000 1                  ADLQ    F$CFU$
         8 000177   210661 756100                    STQ     I+5,,AUTO
         8 000200   210661 630500                    EPPR0   I+5,,AUTO
         8 000201   210663 450500                    STP0    I+7,,AUTO
         8 000202   210660 631500                    EPPR1   I+4,,AUTO
         8 000203   210662 451500                    STP1    I+6,,AUTO
         8 000204   210662 630500                    EPPR0   I+6,,AUTO
         8 000205   000020 631400 xsym               EPPR1   B_VECTNIL+16
         8 000206   000000 701000 xent               TSX1    FMR$M8
         8 000207   000000 011000                    NOP     0

      131     5612    2         FM$DEV.DCTX(I)=I;

   5612  8 000210   210654 235100                    LDA     I,,AUTO
         8 000211   000003 735000                    ALS     3
         8 000212   210654 720100                    LXL0    I,,AUTO
         8 000213   000003 470400 1                  LDP0    F$CFU$
         8 000214   000000 740105                    STX0    0,AL,PR0

      132     5613    2         FM$DEV.NN(I)=I;

   5613  8 000215   000003 470400 1                  LDP0    F$CFU$
         8 000216   000000 440105                    SXL0    0,AL,PR0

      133     5614    2         FM$DEV.NXTSDA(I)=N$DCT$(I)->NI$DCT.DVT$->NI$DVT.PACKSIZE+FM_SRZERO;

   5614  8 000217   200641 470510                    LDP0    N$DCT$,X0,AUTO
         8 000220   000024 471500                    LDP1    20,,PR0
         8 000221   100054 236100                    LDQ     44,,PR1
         8 000222   000000 036000 xsym               ADLQ    FM_SRZERO
PL6.E3A0      #001=PAKTST File=FXD$DEBUG.:E05TSI                                 TUE 07/29/97 18:01 Page:22   
         8 000223   000003 473400 1                  LDP3    F$CFU$
         8 000224   300003 676105                    ERQ     3,AL,PR3
         8 000225   000032 376000 xsym               ANQ     B_VECTNIL+26
         8 000226   300003 656105                    ERSQ    3,AL,PR3

      134     5615    2         FM$DEV.DEVL(I)=I+1;

   5615  8 000227   000001 621010                    EAX1    1,X0
         8 000230   000003 470400 1                  LDP0    F$CFU$
         8 000231   000005 741105                    STX1    5,AL,PR0

      135     5616    2         FM$DEV.XCL(I)='1'B;

   5616  8 000232   000003 470400 1                  LDP0    F$CFU$
         8 000233   400000 236003                    LDQ     -131072,DU
         8 000234   000002 256105                    ORSQ    2,AL,PR0

      136     5617    2         FM$DEV.AVR(I)='1'B;

   5617  8 000235   000003 470400 1                  LDP0    F$CFU$
         8 000236   010000 236003                    LDQ     4096,DU
         8 000237   000002 256105                    ORSQ    2,AL,PR0

      137     5618    2         IF PACKS(I)~=0 THEN FM$DEV.SPIN(I)='1'B;

   5618  8 000240   000013 235010 1                  LDA     PACKS,X0
         8 000241   000247 600000 8                  TZE     s:5619

   5618  8 000242   210654 235100                    LDA     I,,AUTO
         8 000243   000003 735000                    ALS     3
         8 000244   000003 470400 1                  LDP0    F$CFU$
         8 000245   004000 236003                    LDQ     2048,DU
         8 000246   000002 256105                    ORSQ    2,AL,PR0

      138     5619    2         END;

   5619  8 000247   210654 054100                    AOS     I,,AUTO
PL6.E3A0      #001=PAKTST File=FXD$DEBUG.:E05TSI                                 TUE 07/29/97 18:01 Page:23   
         8 000250   210654 235100                    LDA     I,,AUTO
         8 000251   000011 115007                    CMPA    9,DL
         8 000252   000072 604400 8                  TMOZ    s:5596

      139     5620    1      FM$CFUX.DSETH=1;

   5620  8 000253   000001 220003                    LDX0    1,DU
         8 000254   000003 470400 1                  LDP0    F$CFU$
         8 000255   000005 440100                    SXL0    5,,PR0

      140     5621    1      FM$DEV.DEVL(9)=0;

   5621  8 000256   000000 221003                    LDX1    0,DU
         8 000257   000115 741100                    STX1    77,,PR0

      141     5622    1      FR$RAT.LNK$(8)=ADDR(NIL);

   5622  8 000260   000001 236000 xsym               LDQ     B_VECTNIL+1
         8 000261   200630 756100                    STQ     FR$RAT+72,,AUTO

      142     5623    1      FR$HD$(0)=ADDR(FR$RAT);

   5623  8 000262   200520 631500                    EPPR1   FR$RAT,,AUTO
         8 000263   000000 451400 xsym               STP1    FR$HD$

      143     5624    1      N$DCT$$=ADDR(N$DCT$);

   5624  8 000264   200641 633500                    EPPR3   N$DCT$,,AUTO
         8 000265   000000 453400 1                  STP3    N$DCT$$

      144     5625    1      B$JIT.SYSID=7; B$JIT.USER=4; B$JIT.MODE=%M_GHOST#;

   5625  8 000266   000007 222003                    LDX2    7,DU
         8 000267   000005 474400 1                  LDP4    B$JIT$
         8 000270   400000 442100                    SXL2    0,,PR4

   5625  8 000271   000005 470400 1                  LDP0    B$JIT$
PL6.E3A0      #001=PAKTST File=FXD$DEBUG.:E05TSI                                 TUE 07/29/97 18:01 Page:24   
         8 000272   000004 236003                    LDQ     4,DU
         8 000273   000000 552120                    STBQ    0,'20'O,PR0

   5625  8 000274   000005 470400 1                  LDP0    B$JIT$
         8 000275   000000 236100                    LDQ     0,,PR0
         8 000276   000004 376000 9                  ANQ     4
         8 000277   100000 276003                    ORQ     32768,DU
         8 000300   000000 756100                    STQ     0,,PR0

      145     5626    1      B$JIT.PRIV.ACTIVE=%PR_FMDIAG#;

   5626  8 000301   000267 236000 3                  LDQ     TRA_1_X1+5
         8 000302   000005 470400 1                  LDP0    B$JIT$
         8 000303   000013 756100                    STQ     11,,PR0

      146     5627    1      B$JIT.PRIV.AUTH=%PR_FMDIAG#;

   5627  8 000304   000014 756100                    STQ     12,,PR0

      147     5628    1      B$JIT.PRIV.JOB=%PR_FMDIAG#;

   5628  8 000305   000015 756100                    STQ     13,,PR0

      148     5629    1      CALL DOAVRS;

   5629  8 000306   000717 701000 8                  TSX1    DOAVRS
         8 000307   000000 011000                    NOP     0

      149     5630    1      CALL FXP$MAIN;

   5630  8 000310   000002 631400 xsym               EPPR1   B_VECTNIL+2
         8 000311   000000 701000 xent               TSX1    FXP$MAIN
         8 000312   000000 011000                    NOP     0

   5628  8 000313                       NEXTSI       null
      150     5631    1   NEXTSI:;
      151     5632    1      SIBUF=' ';
PL6.E3A0      #001=PAKTST File=FXD$DEBUG.:E05TSI                                 TUE 07/29/97 18:01 Page:25   

   5632  8 000313   040000 100400                    MLR     fill='040'O
         8 000314   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         8 000315   000065 000120 1                  ADSC9   SIBUF                    cn=0,n=80

      152     5633    2      CALL M$READ (READSI) WHENALTRETURN DO; RETURN; END;

   5633  8 000316   000226 630400 3                  EPPR0   READSI
         8 000317   440000 713400                    CLIMB   alt,read
         8 000320   401400 401760                    pmme    nvectors=4
         8 000321   000323 702000 8                  TSX2    s:5633+5
         8 000322   000324 710000 8                  TRA     s:5634

   5633  8 000323   000000 702200 xent               TSX2  ! X66_MARET

      153     5634    2      DO SELECT SUBSTR(SIBUF,0,1);

   5634  8 000324   000065 236000 1                  LDQ     SIBUF
         8 000325   777000 376003                    ANQ     -512,DU
         8 000326   107000 116003                    CMPQ    36352,DU
         8 000327   000366 602000 8                  TNC     s:5634+34
         8 000330   000065 236000 1                  LDQ     SIBUF
         8 000331   777000 376003                    ANQ     -512,DU
         8 000332   107000 116003                    CMPQ    36352,DU
         8 000333   000423 600000 8                  TZE     s:5643
         8 000334   000065 236000 1                  LDQ     SIBUF
         8 000335   777000 376003                    ANQ     -512,DU
         8 000336   120000 116003                    CMPQ    40960,DU
         8 000337   000361 602000 8                  TNC     s:5634+29
         8 000340   000065 236000 1                  LDQ     SIBUF
         8 000341   777000 376003                    ANQ     -512,DU
         8 000342   120000 116003                    CMPQ    40960,DU
         8 000343   000415 600000 8                  TZE     s:5640
         8 000344   000065 236000 1                  LDQ     SIBUF
         8 000345   777000 376003                    ANQ     -512,DU
         8 000346   121000 116003                    CMPQ    41472,DU
         8 000347   000410 602000 8                  TNC     HELP
PL6.E3A0      #001=PAKTST File=FXD$DEBUG.:E05TSI                                 TUE 07/29/97 18:01 Page:26   
         8 000350   000065 236000 1                  LDQ     SIBUF
         8 000351   777000 376003                    ANQ     -512,DU
         8 000352   121000 116003                    CMPQ    41472,DU
         8 000353   000414 600000 8                  TZE     s:5638
         8 000354   000065 236000 1                  LDQ     SIBUF
         8 000355   777000 376003                    ANQ     -512,DU
         8 000356   122000 116003                    CMPQ    41984,DU
         8 000357   000410 601000 8                  TNZ     HELP
         8 000360   000527 710000 8                  TRA     s:5665
         8 000361   000065 236000 1                  LDQ     SIBUF
         8 000362   777000 376003                    ANQ     -512,DU
         8 000363   111000 116003                    CMPQ    37376,DU
         8 000364   000410 601000 8                  TNZ     HELP
         8 000365   000423 710000 8                  TRA     s:5643
         8 000366   000065 236000 1                  LDQ     SIBUF
         8 000367   777000 376003                    ANQ     -512,DU
         8 000370   104000 116003                    CMPQ    34816,DU
         8 000371   000403 602000 8                  TNC     s:5634+47
         8 000372   000065 236000 1                  LDQ     SIBUF
         8 000373   777000 376003                    ANQ     -512,DU
         8 000374   104000 116003                    CMPQ    34816,DU
         8 000375   000536 600000 8                  TZE     s:5668
         8 000376   000065 236000 1                  LDQ     SIBUF
         8 000377   777000 376003                    ANQ     -512,DU
         8 000400   105000 116003                    CMPQ    35328,DU
         8 000401   000410 601000 8                  TNZ     HELP
         8 000402   000414 710000 8                  TRA     s:5638
         8 000403   000065 236000 1                  LDQ     SIBUF
         8 000404   777000 376003                    ANQ     -512,DU
         8 000405   103000 116003                    CMPQ    34304,DU
         8 000406   000410 601000 8                  TNZ     HELP
         8 000407   000512 710000 8                  TRA     s:5660

      154     5635    2      SELECT ELSE;

      155     5636    2   HELP: SIBUF='Enter Igg|Ghost1, Pig, Cfus, Rats, Dcts, DPnn vsn|0, or End';

PL6.E3A0      #001=PAKTST File=FXD$DEBUG.:E05TSI                                 TUE 07/29/97 18:01 Page:27   
   5636  8 000410   040000 100400       HELP         MLR     fill='040'O
         8 000411   000270 000073 3                  ADSC9   TRA_1_X1+6               cn=0,n=59
         8 000412   000065 000120 1                  ADSC9   SIBUF                    cn=0,n=80
         8 000413   000707 710000 8                  TRA     s:5698

      156     5637    2      SELECT 'E','Q';

      157     5638    2            RETURN;

   5638  8 000414   000000 702200 xent               TSX2  ! X66_MARET

      158     5639    2      SELECT 'P';

      159     5640    2         CALL DOAVRS;

   5640  8 000415   000717 701000 8                  TSX1    DOAVRS
         8 000416   000000 011000                    NOP     0

      160     5641    2         CALL FXP$MAIN;

   5641  8 000417   000002 631400 xsym               EPPR1   B_VECTNIL+2
         8 000420   000000 701000 xent               TSX1    FXP$MAIN
         8 000421   000000 011000                    NOP     0
         8 000422   000707 710000 8                  TRA     s:5698

      161     5642    2      SELECT 'G','I';

      162     5643    3         DO I=1 TO 9;

   5643  8 000423   000001 235007                    LDA     1,DL
         8 000424   210654 755100                    STA     I,,AUTO

      163     5644    4            IF FM$DEV.SPIN(I) THEN DO;

   5644  8 000425   210654 235100                    LDA     I,,AUTO
         8 000426   000003 735000                    ALS     3
         8 000427   000003 470400 1                  LDP0    F$CFU$
PL6.E3A0      #001=PAKTST File=FXD$DEBUG.:E05TSI                                 TUE 07/29/97 18:01 Page:28   
         8 000430   000002 236105                    LDQ     2,AL,PR0
         8 000431   004000 316003                    CANQ    2048,DU
         8 000432   000447 600000 8                  TZE     s:5650

      164     5645    4               FM$DEV.SPIN(I)='0'B;

   5645  8 000433   000005 236000 9                  LDQ     5
         8 000434   000002 356105                    ANSQ    2,AL,PR0

      165     5646    4               FM$DEV.AVR(I)='1'B;

   5646  8 000435   000003 470400 1                  LDP0    F$CFU$
         8 000436   010000 236003                    LDQ     4096,DU
         8 000437   000002 256105                    ORSQ    2,AL,PR0

      166     5647    4               CALL DOAVRS; /* DISMOUNT FIRST */

   5647  8 000440   000717 701000 8                  TSX1    DOAVRS
         8 000441   000000 011000                    NOP     0

      167     5648    4               FM$DEV.SPIN(I)='1'B;

   5648  8 000442   210654 235100                    LDA     I,,AUTO
         8 000443   000003 735000                    ALS     3
         8 000444   000003 470400 1                  LDP0    F$CFU$
         8 000445   004000 236003                    LDQ     2048,DU
         8 000446   000002 256105                    ORSQ    2,AL,PR0

      168     5649    4               END;

      169     5650    3            END;

   5650  8 000447   210654 054100                    AOS     I,,AUTO
         8 000450   210654 235100                    LDA     I,,AUTO
         8 000451   000011 115007                    CMPA    9,DL
         8 000452   000425 604400 8                  TMOZ    s:5644

PL6.E3A0      #001=PAKTST File=FXD$DEBUG.:E05TSI                                 TUE 07/29/97 18:01 Page:29   
      170     5651    3         DO I=1 TO 9;

   5651  8 000453   000001 236007                    LDQ     1,DL
         8 000454   210654 756100                    STQ     I,,AUTO

      171     5652    3            IF FM$DEV.SPIN(I) THEN FM$DEV.AVR(I)='1'B;

   5652  8 000455   210654 235100                    LDA     I,,AUTO
         8 000456   000003 735000                    ALS     3
         8 000457   000003 470400 1                  LDP0    F$CFU$
         8 000460   000002 236105                    LDQ     2,AL,PR0
         8 000461   004000 316003                    CANQ    2048,DU
         8 000462   000465 600000 8                  TZE     s:5653

   5652  8 000463   010000 236003                    LDQ     4096,DU
         8 000464   000002 256105                    ORSQ    2,AL,PR0

      172     5653    3            END;

   5653  8 000465   210654 054100                    AOS     I,,AUTO
         8 000466   210654 235100                    LDA     I,,AUTO
         8 000467   000011 115007                    CMPA    9,DL
         8 000470   000455 604400 8                  TMOZ    s:5652

      173     5654    2         B$JIT.USER=1;

   5654  8 000471   000005 470400 1                  LDP0    B$JIT$
         8 000472   000001 236003                    LDQ     1,DU
         8 000473   000000 552120                    STBQ    0,'20'O,PR0

      174     5655    2         B$JIT.SYSID=1;

   5655  8 000474   000001 220003                    LDX0    1,DU
         8 000475   000005 470400 1                  LDP0    B$JIT$
         8 000476   000000 440100                    SXL0    0,,PR0

      175     5656    2         CALL IGG$GETFILES(I_NEWFILES);
PL6.E3A0      #001=PAKTST File=FXD$DEBUG.:E05TSI                                 TUE 07/29/97 18:01 Page:30   

   5656  8 000477   000006 630400 9                  EPPR0   6
         8 000500   000017 631400 xsym               EPPR1   B_VECTNIL+15
         8 000501   000000 701000 xent               TSX1    IGG$GETFILES
         8 000502   000000 011000                    NOP     0

      176     5657    2         B$JIT.SYSID=7;

   5657  8 000503   000007 220003                    LDX0    7,DU
         8 000504   000005 470400 1                  LDP0    B$JIT$
         8 000505   000000 440100                    SXL0    0,,PR0

      177     5658    2         B$JIT.USER=4;

   5658  8 000506   000005 470400 1                  LDP0    B$JIT$
         8 000507   000004 236003                    LDQ     4,DU
         8 000510   000000 552120                    STBQ    0,'20'O,PR0
         8 000511   000707 710000 8                  TRA     s:5698

      178     5659    2      SELECT 'C';

      179     5660    2         TOPBLK.SUBLK$(0)=ADDR(DEVBLK);

   5660  8 000512   000007 236000 9                  LDQ     7
         8 000513   000050 756000 1                  STQ     TOPBLK+3

      180     5661    2         CALL DAD$CFUS(TOPBLK);

   5661  8 000514   000010 630400 9                  EPPR0   8
         8 000515   000017 631400 xsym               EPPR1   B_VECTNIL+15
         8 000516   000000 701000 xent               TSX1    DAD$CFUS
         8 000517   000000 011000                    NOP     0

      181     5662    2         TOPBLK.SUBLK$(0)=ADDR(SETBLK);

   5662  8 000520   000011 236000 9                  LDQ     9
         8 000521   000050 756000 1                  STQ     TOPBLK+3
PL6.E3A0      #001=PAKTST File=FXD$DEBUG.:E05TSI                                 TUE 07/29/97 18:01 Page:31   

      182     5663    2         CALL DAD$CFUS(TOPBLK);

   5663  8 000522   000010 630400 9                  EPPR0   8
         8 000523   000017 631400 xsym               EPPR1   B_VECTNIL+15
         8 000524   000000 701000 xent               TSX1    DAD$CFUS
         8 000525   000000 011000                    NOP     0
         8 000526   000707 710000 8                  TRA     s:5698

      183     5664    2      SELECT 'R';

      184     5665    2         TOPBLK.SUBLK$(0)=ADDR(RATBLK);

   5665  8 000527   000012 236000 9                  LDQ     10
         8 000530   000050 756000 1                  STQ     TOPBLK+3

      185     5666    2         CALL DAD$RAT(TOPBLK);

   5666  8 000531   000010 630400 9                  EPPR0   8
         8 000532   000017 631400 xsym               EPPR1   B_VECTNIL+15
         8 000533   000000 701000 xent               TSX1    DAD$RAT
         8 000534   000000 011000                    NOP     0
         8 000535   000707 710000 8                  TRA     s:5698

      186     5667    2      SELECT 'D';

      187     5668    3         IF SUBSTR(SIBUF,1)=' ' THEN DO;

   5668  8 000536   040000 106400                    CMPC    fill='040'O
         8 000537   000065 200117 1                  ADSC9   SIBUF                    cn=1,n=79
         8 000540   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         8 000541   000553 601000 8                  TNZ     s:5674

      188     5669    3            TOPBLK.NSUBLKS=0;

   5669  8 000542   000000 220003                    LDX0    0,DU
         8 000543   000046 740000 1                  STX0    TOPBLK+1
PL6.E3A0      #001=PAKTST File=FXD$DEBUG.:E05TSI                                 TUE 07/29/97 18:01 Page:32   

      189     5670    3            CALL DAD$DCT(TOPBLK);

   5670  8 000544   000010 630400 9                  EPPR0   8
         8 000545   000017 631400 xsym               EPPR1   B_VECTNIL+15
         8 000546   000000 701000 xent               TSX1    DAD$DCT
         8 000547   000000 011000                    NOP     0

      190     5671    3            TOPBLK.NSUBLKS=1;

   5671  8 000550   000001 220003                    LDX0    1,DU
         8 000551   000046 740000 1                  STX0    TOPBLK+1

      191     5672    3            GOTO NEXTSI;

   5672  8 000552   000313 710000 8                  TRA     NEXTSI

      192     5673    3            END;
      193     5674    2         IF SUBSTR(SIBUF,1,2)~='P0' OR SUBSTR(SIBUF,3,1)>'9'

   5674  8 000553   040000 106400                    CMPC    fill='040'O
         8 000554   000065 200002 1                  ADSC9   SIBUF                    cn=1,n=2
         8 000555   000307 000002 3                  ADSC9   TRA_1_X1+21              cn=0,n=2
         8 000556   000410 601000 8                  TNZ     HELP
         8 000557   000065 236000 1                  LDQ     SIBUF
         8 000560   000777 376007                    ANQ     511,DL
         8 000561   000071 116007                    CMPQ    57,DL
         8 000562   000564 600000 8                  TZE     s:5674+9
         8 000563   000410 603000 8                  TRC     HELP
         8 000564   000065 236000 1                  LDQ     SIBUF
         8 000565   000777 376007                    ANQ     511,DL
         8 000566   000061 116007                    CMPQ    49,DL
         8 000567   000410 602000 8                  TNC     HELP
         8 000570   000066 236000 1                  LDQ     SIBUF+1
         8 000571   777000 376003                    ANQ     -512,DU
         8 000572   040000 116003                    CMPQ    16384,DU
         8 000573   000410 601000 8                  TNZ     HELP
PL6.E3A0      #001=PAKTST File=FXD$DEBUG.:E05TSI                                 TUE 07/29/97 18:01 Page:33   

      194     5675    2           OR SUBSTR(SIBUF,3,1)<'1' OR SUBSTR(SIBUF,4,1)~=' ' THEN GOTO HELP;
      195     5676    2         I=ASCBIN(SUBSTR(SIBUF,3,1))-48;

   5676  8 000574   000065 236000 1                  LDQ     SIBUF
         8 000575   000777 376007                    ANQ     511,DL
         8 000576   000060 136007                    SBLQ    48,DL
         8 000577   210654 756100                    STQ     I,,AUTO

      196     5677    2         IF SUBSTR(SIBUF,5)='0'

   5677  8 000600   040000 106400                    CMPC    fill='040'O
         8 000601   000066 200113 1                  ADSC9   SIBUF+1                  cn=1,n=75
         8 000602   000013 000001 9                  ADSC9   11                       cn=0,n=1
         8 000603   000626 601000 8                  TNZ     s:5684

      197     5678    2         THEN IF NOT FM$DEV.SPIN(I) THEN SIBUF='Not now spinning';

   5678  8 000604   210654 235100                    LDA     I,,AUTO
         8 000605   000003 735000                    ALS     3
         8 000606   000003 470400 1                  LDP0    F$CFU$
         8 000607   000002 236105                    LDQ     2,AL,PR0
         8 000610   004000 316003                    CANQ    2048,DU
         8 000611   000616 601000 8                  TNZ     s:5680

   5678  8 000612   040000 100400                    MLR     fill='040'O
         8 000613   000310 000020 3                  ADSC9   TRA_1_X1+22              cn=0,n=16
         8 000614   000065 000120 1                  ADSC9   SIBUF                    cn=0,n=80
         8 000615   000702 710000 8                  TRA     s:5696

      198     5679    3         ELSE DO;

      199     5680    3            FM$DEV.SPIN(I)='0'B;

   5680  8 000616   000005 236000 9                  LDQ     5
         8 000617   000002 356105                    ANSQ    2,AL,PR0

PL6.E3A0      #001=PAKTST File=FXD$DEBUG.:E05TSI                                 TUE 07/29/97 18:01 Page:34   
      200     5681    3            PACKS(I)=0;

   5681  8 000620   210654 720100                    LXL0    I,,AUTO
         8 000621   000013 450010 1                  STZ     PACKS,X0

      201     5682    3            CALL M$WRITE (RWPACK);

   5682  8 000622   000026 630400 1                  EPPR0   RWPACK
         8 000623   040001 713400                    CLIMB   write
         8 000624   401400 401760                    pmme    nvectors=4

      202     5683    3            END;

   5683  8 000625   000702 710000 8                  TRA     s:5696

      203     5684    2         ELSE IF FM$DEV.SPIN(I) THEN SIBUF='Already spinning';

   5684  8 000626   210654 235100                    LDA     I,,AUTO
         8 000627   000003 735000                    ALS     3
         8 000630   000003 470400 1                  LDP0    F$CFU$
         8 000631   000002 236105                    LDQ     2,AL,PR0
         8 000632   004000 316003                    CANQ    2048,DU
         8 000633   000640 600000 8                  TZE     s:5686

   5684  8 000634   040000 100400                    MLR     fill='040'O
         8 000635   000314 000020 3                  ADSC9   TRA_1_X1+26              cn=0,n=16
         8 000636   000065 000120 1                  ADSC9   SIBUF                    cn=0,n=80
         8 000637   000702 710000 8                  TRA     s:5696

      204     5685    3         ELSE DO;

      205     5686    3            J=5;

   5686  8 000640   000005 235007                    LDA     5,DL
         8 000641   210653 755100                    STA     J,,AUTO

      206     5687    4            DO WHILE SUBSTR(SIBUF,J,1)~=' ';
PL6.E3A0      #001=PAKTST File=FXD$DEBUG.:E05TSI                                 TUE 07/29/97 18:01 Page:35   

   5687  8 000642   000655 710000 8                  TRA     s:5690

      207     5688    4               IF SUBSTR(SIBUF,J,1)<'0' OR SUBSTR(SIBUF,J,1)>'9' THEN GOTO HELP;

   5688  8 000643   210653 235100                    LDA     J,,AUTO
         8 000644   040000 106405                    CMPC    fill='040'O
         8 000645   000065 000001 1                  ADSC9   SIBUF,A                  cn=0,n=1
         8 000646   000013 000001 9                  ADSC9   11                       cn=0,n=1
         8 000647   000410 602000 8                  TNC     HELP
         8 000650   040005 106400                    CMPC    fill='040'O
         8 000651   000014 000001 9                  ADSC9   12                       cn=0,n=1
         8 000652   000065 000001 1                  ADSC9   SIBUF,A                  cn=0,n=1
         8 000653   000410 602000 8                  TNC     HELP

      208     5689    4               J=J+1;

   5689  8 000654   210653 054100                    AOS     J,,AUTO

      209     5690    4               END;

   5690  8 000655   210653 235100                    LDA     J,,AUTO
         8 000656   040000 106405                    CMPC    fill='040'O
         8 000657   000065 000001 1                  ADSC9   SIBUF,A                  cn=0,n=1
         8 000660   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         8 000661   000643 601000 8                  TNZ     s:5688

      210     5691    3            CALL CHARBIN(J,SUBSTR(SIBUF,5,J-5));

   5691  8 000662   777773 620005                    EAX0    -5,AL
         8 000663   000100 305440                    DTB
         8 000664   000066 230010 1                  NDSC9   SIBUF+1                  cn=1,s=nosgn,sf=0,n=*X0
         8 000665   210653 000004                    NDSC9   J,,AUTO                  cn=0,s=lsgnf,sf=0,n=4

      211     5692    3            PACKS(I)=J;

   5692  8 000666   210653 235100                    LDA     J,,AUTO
PL6.E3A0      #001=PAKTST File=FXD$DEBUG.:E05TSI                                 TUE 07/29/97 18:01 Page:36   
         8 000667   210654 720100                    LXL0    I,,AUTO
         8 000670   000013 755010 1                  STA     PACKS,X0

      212     5693    3            FM$DEV.SPIN(I)='1'B;

   5693  8 000671   210654 236100                    LDQ     I,,AUTO
         8 000672   000003 736000                    QLS     3
         8 000673   000003 470400 1                  LDP0    F$CFU$
         8 000674   000000 621006                    EAX1    0,QL
         8 000675   004000 236003                    LDQ     2048,DU
         8 000676   000002 256111                    ORSQ    2,X1,PR0

      213     5694    3            CALL M$WRITE (RWPACK);

   5694  8 000677   000026 630400 1                  EPPR0   RWPACK
         8 000700   040001 713400                    CLIMB   write
         8 000701   401400 401760                    pmme    nvectors=4

      214     5695    3            END;

      215     5696    2         FM$DEV.AVR(I)='1'B;

   5696  8 000702   210654 235100                    LDA     I,,AUTO
         8 000703   000003 735000                    ALS     3
         8 000704   000003 470400 1                  LDP0    F$CFU$
         8 000705   010000 236003                    LDQ     4096,DU
         8 000706   000002 256105                    ORSQ    2,AL,PR0

      216     5697    2         END;

      217     5698    1      IF SUBSTR(SIBUF,15,2)~=' ' THEN CALL M$WRITE(FPT_WRITE);

   5698  8 000707   040000 106400                    CMPC    fill='040'O
         8 000710   000070 600002 1                  ADSC9   SIBUF+3                  cn=3,n=2
         8 000711   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         8 000712   000716 600000 8                  TZE     s:5699

PL6.E3A0      #001=PAKTST File=FXD$DEBUG.:E05TSI                                 TUE 07/29/97 18:01 Page:37   
   5698  8 000713   000244 630400 3                  EPPR0   FPT_WRITE
         8 000714   040001 713400                    CLIMB   write
         8 000715   401400 401760                    pmme    nvectors=4

      218     5699    1      GOTO NEXTSI;

   5699  8 000716   000313 710000 8                  TRA     NEXTSI

      219     5700    1   DOAVRS: PROC;

   5700  8 000717   210656 741300       DOAVRS       STX1  ! I+2,,AUTO

      220     5701    3      DO WHILE '1'B;

      221     5702    4         CALL M$OPEN (AVR) WHENALTRETURN DO; CALL FXD$PMME; END;

   5702  8 000720   000076 630400 3                  EPPR0   AVR
         8 000721   450000 713400                    CLIMB   alt,open
         8 000722   410400 401760                    pmme    nvectors=18
         8 000723   000725 702000 8                  TSX2    s:5702+5
         8 000724   000730 710000 8                  TRA     s:5703

   5702  8 000725   000002 631400 xsym               EPPR1   B_VECTNIL+2
         8 000726   000000 701000 xent               TSX1    FXD$PMME
         8 000727   000000 011000                    NOP     0

      222     5703    3         IF NOT M$DP$->F$DCB.FCD# THEN EXIT;

   5703  8 000730   000000 470400 xsym               LDP0    M$DP$
         8 000731   000031 236100                    LDQ     25,,PR0
         8 000732   020000 316007                    CANQ    8192,DL
         8 000733   000745 600000 8                  TZE     s:5706

      223     5704    4         CALL M$CLOSE (AVRC) WHENALTRETURN DO; CALL FXD$PMME; END;

   5704  8 000734   000170 630400 3                  EPPR0   AVRC
         8 000735   450001 713400                    CLIMB   alt,close
PL6.E3A0      #001=PAKTST File=FXD$DEBUG.:E05TSI                                 TUE 07/29/97 18:01 Page:38   
         8 000736   406000 401760                    pmme    nvectors=13
         8 000737   000741 702000 8                  TSX2    s:5704+5
         8 000740   000744 710000 8                  TRA     s:5705

   5704  8 000741   000002 631400 xsym               EPPR1   B_VECTNIL+2
         8 000742   000000 701000 xent               TSX1    FXD$PMME
         8 000743   000000 011000                    NOP     0

      224     5705    3         END;

   5705  8 000744   000720 710000 8                  TRA     s:5702

      225     5706    2   END DOAVRS;

   5706  8 000745   210656 221300                    LDX1  ! I+2,,AUTO
         8 000746   000001 702211                    TSX2  ! 1,X1
      226     5707    1   END PAKTST;
      227     5708        %EOD;

PL6.E3A0      #001=PAKTST File=FXD$DEBUG.:E05TSI                                 TUE 07/29/97 18:01 Page:39   
--  Include file information  --

   F$JIT_C.:E05TOU  cannot be made into a system file and is referenced.
   FR_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   FR$RAT.:E05TOU  is referenced.
   FM$MACROS.:E05TOU  is referenced.
   I_SUBS_C.:E05TOU  is referenced.
   NI$TABLES.:E05TOU  is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
   DA_CMD_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure PAKTST.
PL6.E3A0      #001=PAKTST File=FXD$DEBUG.:E05TSI                                 TUE 07/29/97 18:01 Page:40   

 **** Variables and constants ****

  ****  Section 001  Data  PAKTST

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     2-0-0/w PTR         r     1 B$DS1$                     5-0-0/w PTR         r     1 B$JIT$
    44-0-0/w PTR         r     1 B$USRT$                   51-0-0/w STRC(144)   r     1 DEVBLK
     3-0-0/w PTR         r     1 F$CFU$
     6-0-0/w PTR         r     1 FM$BUF$(0:3)
     4-0-0/w PTR         r     1 FM$SET$                    0-0-0/w PTR         r     1 N$DCT$$
    13-0-0/w UBIN        r     1 PACKS(0:9)                61-0-0/w STRC(144)   r     1 RATBLK
    26-0-0/d STRC(504)   r     1 RWPACK                    55-0-0/w STRC(144)   r     1 SETBLK
    65-0-0/c CHAR(80)    r     1 SIBUF                     45-0-0/w STRC(144)   r     1 TOPBLK

  ****  Section 003 RoData PAKTST

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

    76-0-0/d STRC(2088)  r     1 AVR                      170-0-0/d STRC(1080)  r     1 AVRC
   261-0-0/w UBIN        r     1 B$ISB$                    72-0-0/d STRC(144)   r     1 FPT_RELDCB
   244-0-0/d STRC(432)   r     1 FPT_WRITE                261-0-0/w PTR         r     1 IS0$
   260-0-0/b BIT (18)    r     1 PACKEY                   226-0-0/d STRC(504)   r     1 READSI
     0-0-0/d STRC(2088)  r     1 SETCAT                   262-0-0/b BIT         r     1 TRA_1_X1

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

  2653-0-0/w UBIN        r     1 BUFS(0:3071)             653-0-0/w UBIN        r     1 CFUS(0:1023)
     3-0-0/w STRC(1332)  r     1 DCT1                     520-0-0/w STRC(324)   r     1 FR$RAT(0:8)
 10654-0-0/w SBIN        r     1 I                      10653-0-0/w SBIN        r     1 J
   641-0-0/w PTR         r     1 N$DCT$(0:9)

PL6.E3A0      #001=PAKTST File=FXD$DEBUG.:E05TSI                                 TUE 07/29/97 18:01 Page:41   
  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN        r     1 FM_SRZERO                  0-0-0/w PTR         r     1 FR$HD$(0:3)
     0-0-0/w PTR         r     1 M$DP$                      0-0-0/w UBIN        r     1 NI_DPDVT1
     0-0-0/w UBIN        r     1 NI_DPDVT2

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d STRC(8856)  r     1 B$JIT                      0-0-0/d ASTR(3528)  r     1 F$DCB
     0-0-0/w STRC(288)   r     1 FM$CFUX                    0-0-0/w STRC(288)   r     1 FM$DEV(0:0)
     0-0-0/w BIT         r     1 IS0                        0-0-0N  NULL        r     1 M$CAT
     0-0-0N  NULL        r     1 M$DP                       0-0-0N  NULL        r     1 M$LO
     0-0-0N  NULL        r     1 M$PACKS                    0-0-0N  NULL        r     1 M$SI
     0-0-0/w STRC(1332)  r     1 NI$DCT                     0-0-0/w STRC(2844)  r     1 NI$DVT


   Procedure PAKTST requires 487 words for executable code.
   Procedure PAKTST requires 4532 words of local(AUTO) storage.
PL6.E3A0      #001=PAKTST File=FXD$DEBUG.:E05TSI                                 TUE 07/29/97 18:01 Page:42   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=PAKTST File=FXD$DEBUG.:E05TSI                                 TUE 07/29/97 18:01 Page:43   
          MINI XREF LISTING

AVR
      5067**DCL      5702<>CALL
AVR.ACSVEH_
      5069**DCL      5070--REDEF
AVR.ALTKEYS_
      5075**DCL      5076--REDEF    5076--REDEF
AVR.HDR_
      5074**DCL      5075--REDEF
AVR.TAB_
      5073**DCL      5074--REDEF
AVR.UHL_
      5067**DCL      5068--REDEF    5068--REDEF
AVR.V
      5076**DCL      5067--DCLINIT
AVR.V.FSN#
      5107**DCL      5107--REDEF    5107--REDEF
AVR.WSN_
      5073**DCL      5073--REDEF
AVRC
      5134**DCL      5704<>CALL
AVRC.SN_
      5134**DCL      5134--REDEF
AVRC.UTL_
      5135**DCL      5135--REDEF
AVRC.V
      5139**DCL      5134--DCLINIT
AVRC.V.EXPIRE#
      5149**DCL      5149--REDEF
AVRC.V.TYPE#
      5147**DCL      5147--REDEF
AVRC.V.XTNSIZE#
      5144**DCL      5144--REDEF    5146--REDEF
PL6.E3A0      #001=PAKTST File=FXD$DEBUG.:E05TSI                                 TUE 07/29/97 18:01 Page:44   
B$DS1$
      4804**DCL      5580<<ASSIGN
B$ISB$
      5388**DCL      5389--REDEF
B$JIT.ERR.MID
      5243**DCL      5243--REDEF
B$JIT.MODE
      5237**DCL      5625<<ASSIGN
B$JIT.PRIV.ACTIVE
      5243**DCL      5626<<ASSIGN
B$JIT.PRIV.AUTH
      5283**DCL      5627<<ASSIGN
B$JIT.PRIV.JOB
      5286**DCL      5628<<ASSIGN
B$JIT.SYSID
      5242**DCL      5625<<ASSIGN   5655<<ASSIGN   5657<<ASSIGN
B$JIT.USER
      5242**DCL      5625<<ASSIGN   5654<<ASSIGN   5658<<ASSIGN
B$JIT$
      4807**DCL      5237--IMP-PTR  5579<<ASSIGN   5579>>ASSIGN   5625>>ASSIGN   5625>>ASSIGN   5625>>ASSIGN
      5626>>ASSIGN   5627>>ASSIGN   5628>>ASSIGN   5654>>ASSIGN   5655>>ASSIGN   5657>>ASSIGN   5658>>ASSIGN
B$USRT$
      5387**DCL      5579<<ASSIGN
BUFS
      5225**DCL      5586<<ASSIGN   5586--ASSIGN   5587<<ASSIGN   5587--ASSIGN   5588<<ASSIGN   5588--ASSIGN
CFUS
      4803**DCL      5579--ASSIGN   5580--ASSIGN   5581--ASSIGN   5582--ASSIGN
DAD$CFUS
      4975**DCL-ENT  5661--CALL     5663--CALL
DAD$DCT
      4976**DCL-ENT  5670--CALL
DAD$RAT
      4977**DCL-ENT  5666--CALL
DCT1
      4332**DCL      5592--ASSIGN
DCT1.DP
PL6.E3A0      #001=PAKTST File=FXD$DEBUG.:E05TSI                                 TUE 07/29/97 18:01 Page:45   
      4352**DCL      4359--REDEF    4362--REDEF    4363--REDEF    4365--REDEF    4365--REDEF    4366--REDEF
      4367--REDEF    4367--REDEF
DCT1.MPC.IOCHANX
      4360**DCL      4360--REDEF
DCT2.DP
      4400**DCL      4407--REDEF    4410--REDEF    4411--REDEF    4413--REDEF    4413--REDEF    4414--REDEF
      4415--REDEF    4415--REDEF
DCT2.MPC.IOCHANX
      4408**DCL      4408--REDEF
DCT3.DP
      4448**DCL      4455--REDEF    4458--REDEF    4459--REDEF    4461--REDEF    4461--REDEF    4462--REDEF
      4463--REDEF    4463--REDEF
DCT3.MPC.IOCHANX
      4456**DCL      4456--REDEF
DCT4.DP
      4496**DCL      4503--REDEF    4506--REDEF    4507--REDEF    4509--REDEF    4509--REDEF    4510--REDEF
      4511--REDEF    4511--REDEF
DCT4.MPC.IOCHANX
      4504**DCL      4504--REDEF
DCT5.DP
      4544**DCL      4551--REDEF    4554--REDEF    4555--REDEF    4557--REDEF    4557--REDEF    4558--REDEF
      4559--REDEF    4559--REDEF
DCT5.MPC.IOCHANX
      4552**DCL      4552--REDEF
DCT6.DP
      4592**DCL      4599--REDEF    4602--REDEF    4603--REDEF    4605--REDEF    4605--REDEF    4606--REDEF
      4607--REDEF    4607--REDEF
DCT6.MPC.IOCHANX
      4600**DCL      4600--REDEF
DCT7.DP
      4640**DCL      4647--REDEF    4650--REDEF    4651--REDEF    4653--REDEF    4653--REDEF    4654--REDEF
      4655--REDEF    4655--REDEF
DCT7.MPC.IOCHANX
      4648**DCL      4648--REDEF
DCT8.DP
      4688**DCL      4695--REDEF    4698--REDEF    4699--REDEF    4701--REDEF    4701--REDEF    4702--REDEF
PL6.E3A0      #001=PAKTST File=FXD$DEBUG.:E05TSI                                 TUE 07/29/97 18:01 Page:46   
      4703--REDEF    4703--REDEF
DCT8.MPC.IOCHANX
      4696**DCL      4696--REDEF
DCT9.DP
      4736**DCL      4743--REDEF    4746--REDEF    4747--REDEF    4749--REDEF    4749--REDEF    4750--REDEF
      4751--REDEF    4751--REDEF
DCT9.MPC.IOCHANX
      4744**DCL      4744--REDEF
DEVBLK
      5445**DCL      5660--ASSIGN
DEVBLK.CODE
      5453**DCL      5583<<ASSIGN
DOAVRS
      5700**PROC     5629--CALL     5640--CALL     5647--CALL
F$CFU$
      4805**DCL      4259--IMP-PTR  4264--IMP-PTR  4270--IMP-PTR  5581<<ASSIGN   5611>>CALL     5611>>CALL
      5612>>ASSIGN   5613>>ASSIGN   5614>>ASSIGN   5615>>ASSIGN   5616>>ASSIGN   5617>>ASSIGN   5618>>ASSIGN
      5620>>ASSIGN   5621>>ASSIGN   5644>>IF       5645>>ASSIGN   5646>>ASSIGN   5648>>ASSIGN   5652>>IF
      5652>>ASSIGN   5678>>IF       5680>>ASSIGN   5684>>IF       5693>>ASSIGN   5696>>ASSIGN
F$DCB.ACCT#
      4825**DCL      5591>>IF
F$DCB.ACTPOS
      4841**DCL      4841--REDEF
F$DCB.ARS#
      4815**DCL      4815--REDEF
F$DCB.ATTR
      4834**DCL      4835--REDEF
F$DCB.BORROW
      4849**DCL      4849--REDEF    4849--REDEF    4849--REDEF
F$DCB.DCBNAME.L
      4863**DCL      4863--IMP-SIZ
F$DCB.EOMCHAR#
      4819**DCL      4819--REDEF
F$DCB.FCD#
      4828**DCL      5703>>IF
F$DCB.FLDID
PL6.E3A0      #001=PAKTST File=FXD$DEBUG.:E05TSI                                 TUE 07/29/97 18:01 Page:47   
      4844**DCL      4844--REDEF
F$DCB.FORM$
      4838**DCL      4838--REDEF
F$DCB.FSECT
      4854**DCL      4854--REDEF
F$DCB.FSN#
      4831**DCL      4831--REDEF    4831--REDEF    4832--REDEF
F$DCB.HEADER$
      4837**DCL      4837--REDEF
F$DCB.IXTNSIZE#
      4835**DCL      4835--REDEF
F$DCB.LASTSTA$
      4824**DCL      4824--REDEF
F$DCB.LVL
      4850**DCL      4850--REDEF
F$DCB.NAME#.C
      4825**DCL      4825--REDEF
F$DCB.NOEOF
      4847**DCL      4847--REDEF
F$DCB.NRECS#
      4836**DCL      4836--REDEF
F$DCB.NRECX
      4855**DCL      4855--REDEF
F$DCB.OHDR
      4847**DCL      4847--REDEF
F$DCB.ORG#
      4830**DCL      4830--REDEF
F$DCB.PRECNO
      4853**DCL      4853--REDEF
F$DCB.RCSZ
      4859**DCL      4859--REDEF
F$DCB.RES#
      4826**DCL      4826--REDEF
F$DCB.SETX
      4838**DCL      4838--REDEF
F$DCB.TAB$
PL6.E3A0      #001=PAKTST File=FXD$DEBUG.:E05TSI                                 TUE 07/29/97 18:01 Page:48   
      4838**DCL      4838--REDEF
F$DCB.TDA
      4852**DCL      4853--REDEF
F$DCB.WSN#
      4826**DCL      4826--REDEF
FM$BUF$
      5226**DCL      5586<<ASSIGN   5587<<ASSIGN   5588<<ASSIGN
FM$CFUX.DSETH
      4260**DCL      5620<<ASSIGN
FM$DEV
      4264**DCL      5611--CALL     5611--CALL
FM$DEV.AVR
      4265**DCL      5617<<ASSIGN   5646<<ASSIGN   5652<<ASSIGN   5696<<ASSIGN
FM$DEV.DCTX
      4264**DCL      5612<<ASSIGN
FM$DEV.DEVL
      4266**DCL      5615<<ASSIGN   5621<<ASSIGN
FM$DEV.NN
      4264**DCL      5613<<ASSIGN
FM$DEV.NXTSDA
      4266**DCL      5614<<ASSIGN
FM$DEV.SPIN
      4265**DCL      5618<<ASSIGN   5644>>IF       5645<<ASSIGN   5648<<ASSIGN   5652>>IF       5678>>IF
      5680<<ASSIGN   5684>>IF       5693<<ASSIGN
FM$DEV.USERLIST
      4265**DCL      4266--REDEF
FM$DEV.XCL
      4264**DCL      5616<<ASSIGN
FM$SET$
      4806**DCL      5582<<ASSIGN
FM$VOL.USERLIST
      4271**DCL      4272--REDEF
FMR$M8
      4978**DCL-ENT  5611--CALL
FMS$GARBCOL
      4985**DCL-ENT  5589--CALL
PL6.E3A0      #001=PAKTST File=FXD$DEBUG.:E05TSI                                 TUE 07/29/97 18:01 Page:49   
FM_SRZERO
      4982**DCL      5614>>ASSIGN
FPT_RELDCB
      4999**DCL      5590<>CALL
FPT_RELDCB.V
      4999**DCL      4999--DCLINIT
FPT_WRITE
      5209**DCL      5698<>CALL
FPT_WRITE.STATION_
      5211**DCL      5211--REDEF
FPT_WRITE.V
      5212**DCL      5209--DCLINIT
FPT_WRITE.V.DVBYTE.VFC#
      5218**DCL      5218--REDEF
FR$HD$
      4233**DCL      5623<<ASSIGN
FR$RAT
      4757**DCL      5605--ASSIGN   5606<<ASSIGN   5608--ASSIGN   5623--ASSIGN
FR$RAT.DCTX
      4775**DCL      5607<<ASSIGN
FR$RAT.LNK$
      4758**DCL      5608<<ASSIGN   5622<<ASSIGN
FR$RAT.M1
      4779**DCL      5609<<ASSIGN
FR$RAT.TYP
      4781**DCL      5610<<ASSIGN
FXD$PMME
      4979**DCL-ENT  5702--CALL     5704--CALL
FXP$MAIN
      4981**DCL-ENT  5630--CALL     5641--CALL
HELP
      5636**LABEL    5675--GOTO     5688--GOTO
I
      5576**DCL      5594<<DOINDEX  5596>>ASSIGN   5596>>ASSIGN   5597>>ASSIGN   5598>>ASSIGN   5598>>ASSIGN
      5599>>ASSIGN   5600>>ASSIGN   5601>>IF       5601>>ASSIGN   5602>>ASSIGN   5603>>ASSIGN   5604>>ASSIGN
      5604>>ASSIGN   5605>>ASSIGN   5605>>ASSIGN   5606>>ASSIGN   5607>>ASSIGN   5607>>ASSIGN   5608>>ASSIGN
PL6.E3A0      #001=PAKTST File=FXD$DEBUG.:E05TSI                                 TUE 07/29/97 18:01 Page:50   
      5608>>ASSIGN   5609>>ASSIGN   5609>>ASSIGN   5610>>ASSIGN   5611>>CALL     5611>>CALL     5612>>ASSIGN
      5612>>ASSIGN   5613>>ASSIGN   5613>>ASSIGN   5614>>ASSIGN   5614>>ASSIGN   5615>>ASSIGN   5615>>ASSIGN
      5616>>ASSIGN   5617>>ASSIGN   5618>>IF       5618>>ASSIGN   5643<<DOINDEX  5644>>IF       5645>>ASSIGN
      5646>>ASSIGN   5648>>ASSIGN   5651<<DOINDEX  5652>>IF       5652>>ASSIGN   5676<<ASSIGN   5678>>IF
      5680>>ASSIGN   5681>>ASSIGN   5684>>IF       5692>>ASSIGN   5693>>ASSIGN   5696>>ASSIGN
IGG$GETFILES
      4980**DCL-ENT  5656--CALL
IS0
      5390**DCL      5578<<ASSIGN
IS0$
      5389**DCL      5390--IMP-PTR  5578>>ASSIGN
J
      5575**DCL      5686<<ASSIGN   5687>>DOWHILE  5688>>IF       5688>>IF       5689<<ASSIGN   5689>>ASSIGN
      5691<<CALLBLT  5691>>CALLBLT  5692>>ASSIGN
LS1
      5392**DCL      5393--REDEF
M$CAT
      4865**DCL      5591--IF
M$CLOSE
        29**DCL-ENT  5704--CALL
M$DP$
      4987**DCL      5703>>IF
M$OPEN
        29**DCL-ENT  5591--CALL     5702--CALL
M$READ
        30**DCL-ENT  5593--CALL     5633--CALL
M$RELDCB
        35**DCL-ENT  5590--CALL
M$WRITE
        30**DCL-ENT  5682--CALL     5694--CALL     5698--CALL
N$DCT$
      4802**DCL      5592<<ASSIGN   5596<<ASSIGN   5596>>ASSIGN   5597>>ASSIGN   5598>>ASSIGN   5599>>ASSIGN
      5600>>ASSIGN   5601>>ASSIGN   5602>>ASSIGN   5603>>ASSIGN   5604>>ASSIGN   5605>>ASSIGN   5609>>ASSIGN
      5614>>ASSIGN   5624--ASSIGN
N$DCT$$
      4256**DCL      5624<<ASSIGN
PL6.E3A0      #001=PAKTST File=FXD$DEBUG.:E05TSI                                 TUE 07/29/97 18:01 Page:51   
NEXTSI
      5628**LABEL    5672--GOTO     5699--GOTO
NI$DCT
      4284**DCL      5592--ASSIGN   5596--ASSIGN   5597<<ASSIGN
NI$DCT.DCTX
      4285**DCL      5598<<ASSIGN
NI$DCT.DEVNM
      4284**DCL      5603<<ASSIGN   5604<<ASSIGN
NI$DCT.DP
      4304**DCL      4311--REDEF    4314--REDEF    4315--REDEF    4317--REDEF    4317--REDEF    4318--REDEF
      4319--REDEF    4319--REDEF
NI$DCT.DQH$
      4300**DCL      5600<<ASSIGN
NI$DCT.DVT$
      4300**DCL      5601<<ASSIGN   5602<<ASSIGN   5609>>ASSIGN   5614>>ASSIGN
NI$DCT.FL$
      4284**DCL      5599<<ASSIGN
NI$DCT.MPC.IOCHANX
      4312**DCL      4312--REDEF
NI$DCT.RAT$
      4285**DCL      5605<<ASSIGN
NI$DVT.ATTR
      4798**DCL      5609>>ASSIGN
NI$DVT.MPC
      4798**DCL      4799--REDEF
NI$DVT.PACKSIZE
      4797**DCL      5614>>ASSIGN
NI_DPDVT1
      4983**DCL      5601--ASSIGN
NI_DPDVT2
      4984**DCL      5602--ASSIGN
PACKEY
      5386**DCL      5363--DCLINIT  5364--DCLINIT
PACKS
      5345**DCL      5365--DCLINIT  5366--DCLINIT  5618>>IF       5681<<ASSIGN   5692<<ASSIGN
RATBLK
PL6.E3A0      #001=PAKTST File=FXD$DEBUG.:E05TSI                                 TUE 07/29/97 18:01 Page:52   
      5535**DCL      5665--ASSIGN
RATBLK.CODE
      5543**DCL      5585<<ASSIGN
READSI
      5170**DCL      5633<>CALL
READSI.STATION_
      5173**DCL      5174--REDEF
READSI.V
      5174**DCL      5170--DCLINIT
READSI.V.DVBYTE.REREAD#
      5185**DCL      5185--REDEF
READSI.V.INDX#
      5183**DCL      5183--REDEF
RWPACK
      5363**DCL      5593<>CALL     5682<>CALL     5694<>CALL
RWPACK.STATION_
      5366**DCL      5367--REDEF
RWPACK.V
      5367**DCL      5363--DCLINIT
RWPACK.V.DVBYTE.REREAD#
      5378**DCL      5378--REDEF
RWPACK.V.INDX#
      5376**DCL      5376--REDEF
SETBLK
      5490**DCL      5662--ASSIGN
SETBLK.CODE
      5498**DCL      5584<<ASSIGN
SETCAT
      4931**DCL      5591<>CALL
SETCAT.ACSVEH_
      4933**DCL      4934--REDEF
SETCAT.ALTKEYS_
      4939**DCL      4940--REDEF    4940--REDEF
SETCAT.HDR_
      4938**DCL      4939--REDEF
SETCAT.TAB_
PL6.E3A0      #001=PAKTST File=FXD$DEBUG.:E05TSI                                 TUE 07/29/97 18:01 Page:53   
      4937**DCL      4938--REDEF
SETCAT.UHL_
      4931**DCL      4932--REDEF    4932--REDEF
SETCAT.V
      4940**DCL      4931--DCLINIT
SETCAT.V.FSN#
      4971**DCL      4971--REDEF    4971--REDEF
SETCAT.WSN_
      4937**DCL      4937--REDEF
SIBUF
      5574**DCL      5172--DCLINIT  5173--DCLINIT  5210--DCLINIT  5211--DCLINIT  5632<<ASSIGN   5634>>DOSELCT
      5636<<ASSIGN   5668>>IF       5674>>IF       5674>>IF       5674>>IF       5674>>IF       5676>>ASSIGN
      5677>>IF       5678<<ASSIGN   5684<<ASSIGN   5687>>DOWHILE  5688>>IF       5688>>IF       5691>>CALLBLT
      5698>>IF
TOPBLK
      5400**DCL      5661<>CALL     5663<>CALL     5666<>CALL     5670<>CALL
TOPBLK.NSUBLKS
      5412**DCL      5669<<ASSIGN   5671<<ASSIGN
TOPBLK.SUBLK$
      5433**DCL      5660<<ASSIGN   5662<<ASSIGN   5665<<ASSIGN
TRA_1_X1
      5391**DCL      5578>>ASSIGN

PL6.E3A0      #002=FXD$PMME File=FXD$DEBUG.:E05TSI                               TUE 07/29/97 18:04 Page:54   
      228        1        /*T***********************************************************/
      229        2        /*T*                                                         */
      230        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      231        4        /*T*                                                         */
      232        5        /*T***********************************************************/
      233        6        FXD$PMME: PROC(ERR) ALTRET;
      234        7    1   DCL ERR BIT(36) ALIGNED;
      235        8    1   DCL IC UBIN;
      236        9    1   DCL RETURN_IC UBIN(18) ALIGNED BASED;
      237       10        %INCLUDE CP_6;
      238       91        %B$TCB;
      239       94        %B$EXCFR;
      240      112    1   DCL PN$(0:20) STATIC PTR INIT(ADDR(NIL)*0);
      241      113        %FPT_OPEN (FPTN=OPEN_FPT, STCLASS="BASED(FPT$)");
      242      222        %FPT_CLOSE (FPTN=CLOSE_FPT, STCLASS="BASED(FPT$)");
      243      264        %FPT_WRITE (FPTN=WRITE_FPT, STCLASS="BASED(FPT$)");
      244      295        %FPT_READ (FPTN=READ_FPT, STCLASS="BASED(FPT$)");
      245      334    1   DCL FPT$ PTR;
      246      335    1   DCL B$JIT$ PTR SYMREF;
      247      336        %INCLUDE F$JIT_C;
      248      453        %INCLUDE F_DCB_D;
      249      541        %M$MDCB (DCBN=MYDCB,STCLASS=STATIC SYMDEF DALIGNED);
      250      615        %M$MDCB (DCBN=SCRUB_DCB, STCLASS=CONSTANT);
      251      689        %VLP_SN (STCLASS=BASED);
      252      702    1   DCL B$RT UBIN CONSTANT INIT(BITBIN('6017'O));
      253      703    1   DCL B$RT$ REDEF B$RT PTR;
      254      704    1   DCL FMN$OPNDP ENTRY(1) ALTRET;
      255      705    1   DCL FMN$CLSDP ENTRY(1) ALTRET;
      256      706    1   DCL M$DP DCB;
      257      707    1   DCL VEC VECTOR BASED DALIGNED;
      258      708    1   DCL FC UBIN;
      259      709        %INCLUDE N_FC_C;
      260      746    1   DCL FMB$QUEUE ENTRY(9) ALTRET;
      261      747    1   DCL M$DP$ PTR SYMREF;
      262      748    1   DCL M$SI DCB;
      263      749    1   DCL M$LO DCB;
      264      750    1   DCL WROCBUF CHAR(80) STATIC INIT('@');
PL6.E3A0      #002=FXD$PMME File=FXD$DEBUG.:E05TSI                               TUE 07/29/97 18:04 Page:55   
      265      751        %FPT_TEMPWROC (FPTN=WROC_FPT, STCLASS="BASED(FPT$)");
      266      767        %FPT_READ (FPTN=WROCRD, DCB=M$SI);
      267      806        %FPT_WRITE (FPTN=WROCWRT, DCB=M$LO, TRANS=YES, BP=YES, VFC=YES, BUF=WROCBUF);
      268      837    1   DCL CHARS CHAR(98) BASED;
      269      838    1      IF B$RT$->B$TCB.ALT$->B$EXCFR.DCB#~=DCBNUM(M$DP)
      270      839    2      AND B$RT$->B$TCB.ALT$->B$EXCFR.FPT~='110000'O THEN DO;
      271      840    2         IF ADDR(ERR)~=ADDR(NIL)
      272      841    2         THEN ERR=B$RT$->B$TCB.ALT$->B$EXCFR.ERR;
      273      842    2         ALTRETURN;
      274      843    2         END;
      275      844    1      B$JIT.DCB$=ADDR(MYDCB);
      276      845    1      FPT$=B$RT$->B$TCB.ALT$->B$EXCFR.PRS(0);
      277      846    1      B$JIT.ERR='0'B;
      278      847    1      IC=B$RT$->B$TCB.ALT$->B$EXCFR.IC;
      279      848    2      DO SELECT B$RT$->B$TCB.ALT$->B$EXCFR.FPT;
      280      849    2      SELECT '050000'O; /* OPEN */
      281      850    2         IF MYDCB.FCD# THEN GOTO OPEN_CLOSE_ERR;
      282      851    2         IF OPEN_FPT.V.INITZ.SCRUB# THEN MYDCB=SCRUB_DCB;
      283      852    2         IF OPEN_FPT.SN_=VECTOR(ERASE)
      284      853    2         THEN MYDCB.PSN#=' ';
      285      854    2         ELSE IF OPEN_FPT.SN_~=VECTOR(NIL)
      286      855    2         THEN MYDCB.PSN#=VBASE(ADDR(OPEN_FPT.SN_)->VEC)->VLP_SN.SN#(0);
      287      856    2         IF OPEN_FPT.V.RES#~=BINASC(0)
      288      857    2         THEN MYDCB.RES#=OPEN_FPT.V.RES#;
      289      858    2         IF OPEN_FPT.V.FUN#~=0
      290      859    2         THEN MYDCB.FUN#=OPEN_FPT.V.FUN#;
      291      860    2         IF OPEN_FPT.V.ASN#~=0
      292      861    2         THEN MYDCB.ASN#=OPEN_FPT.V.ASN#;
      293      862    2         IF OPEN_FPT.V.ORG#~=0
      294      863    2         THEN MYDCB.ORG#=OPEN_FPT.V.ORG#;
      295      864    2         PN$(0)=VBASE(ADDR(OPEN_FPT.V_)->VEC);
      296      865    2         M$DP$=ADDR(MYDCB);
      297      866    2         CALL FMN$OPNDP(PN$) ALTRET(REPORT_ERR);
      298      867    2         MYDCB.FCD#='1'B;
      299      868    2      SELECT '050001'O; /* CLOSE */
      300      869    2         IF NOT MYDCB.FCD# THEN GOTO OPEN_CLOSE_ERR;
      301      870    2         PN$(0)=VBASE(ADDR(CLOSE_FPT.V_)->VEC);
PL6.E3A0      #002=FXD$PMME File=FXD$DEBUG.:E05TSI                               TUE 07/29/97 18:04 Page:56   
      302      871    2         CALL FMN$CLSDP (PN$) ALTRET(REPORT_ERR);
      303      872    2         MYDCB.FCD#='0'B;
      304      873    2      SELECT '040000'O; /* READ */
      305      874    2         FC=%N_RDBIN;
      306      875    2         GOTO RDWRT;
      307      876    2      SELECT '040001'O; /* WRITE */
      308      877    2         FC=%N_WRBIN;
      309      878    2   RDWRT:;
      310      879    2         CALL FMB$QUEUE(READ_FPT.BUF_.BUF$,1,4096,
      311      880    2           VBASE(ADDR(READ_FPT.KEY_)->VEC)->VEC,FC,-1,0,0) ALTRET(REPORT_ERR);
      312      881    2      SELECT '110000'O; /* TEMPWROC */
      313      882    3         IF WROC_FPT.BUFW_.BUFW$~=ADDR(NIL) THEN DO;
      314      883    3            SUBSTR(WROCBUF,1)=SUBSTR(WROC_FPT.BUFW_.BUFW$->CHARS,0,
      315      884    3              WROC_FPT.BUFW_.BOUND+1);
      316      885    3            WROCWRT.BUF_.BOUND=WROC_FPT.BUFW_.BOUND+1;
      317      886    3            CALL M$WRITE(WROCWRT);
      318      887    3            END;
      319      888    3         IF WROC_FPT.BUFR_.BUFR$~=ADDR(NIL) THEN DO;
      320      889    3            WROCRD.BUF_=WROC_FPT.BUFR_;
      321      890    3            CALL M$READ (WROCRD);
      322      891    3            WROC_FPT.V.TYC='0'B;
      323      892    3            END;
      324      893    2      END;
      325      894    1      PINCRW(ADDR(IC),-4)->RETURN_IC=IC+2;
      326      895    1      RETURN;
      327      896    1   OPEN_CLOSE_ERR:;
      328      897    1      B$JIT.ERR='061515001442'O;
      329      898    1   REPORT_ERR:;
      330      899    1      B$JIT.ERR.MON='1'B;
      331      900    1      IF ADDR(ERR)~=ADDR(NIL) THEN ERR=B$JIT.ERR;
      332      901    1      ALTRETURN;
      333      902    1   END;
      334      903        %EOD;

PL6.E3A0      #002=FXD$PMME File=FXD$DEBUG.:E05TSI                               TUE 07/29/97 18:04 Page:57   
--  Include file information  --

   N_FC_C.:E05TOU  is referenced.
   F_DCB_D.:E05TOU  is referenced.
   F$JIT_C.:E05TOU  cannot be made into a system file and is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure FXD$PMME.

   Procedure FXD$PMME requires 189 words for executable code.
   Procedure FXD$PMME requires 16 words of local(AUTO) storage.

PL6.E3A0      #002=FXD$PMME File=FXD$DEBUG.:E05TSI                               TUE 07/29/97 18:04 Page:58   

 Object Unit name= FXD$PMME                                   File name= FXD$DEBUG.:E05TOU
 UTS= JUL 29 '97 18:04:18.04 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1   Data  even  none   164    244  FXD$PMME
    2  RoData even  UTS     98    142  FXD$PMME
    3   DCB   even  none     0      0  M$DP
    4   DCB   even  none     0      0  M$SI
    5   DCB   even  none     0      0  M$LO
    6   Proc  even  none   189    275  FXD$PMME
    7  RoData even  none    15     17  FXD$PMME

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     6      0   yes    yes     yes      Std        1  FXD$PMME

  ****  Data defs  ****

 Sect OctLoc  Name                           Sect OctLoc  Name
    1     26  MYDCB
PL6.E3A0      #002=FXD$PMME File=FXD$DEBUG.:E05TSI                               TUE 07/29/97 18:04 Page:59   

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       1 FMN$OPNDP
 yes     yes           Std       1 FMN$CLSDP
 yes     yes           Std       9 FMB$QUEUE
                       nStd      0 X66_AUTO_1
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_AALT
                       nStd      0 X66_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                                  B$JIT$                                M$DP
     M$DP$                                 M$SI                                  M$LO
     B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     NULLSID                               ISSID
PL6.E3A0      #002=FXD$PMME File=FXD$DEBUG.:E05TSI                               TUE 07/29/97 18:04 Page:60   


      228        1        /*T***********************************************************/
      229        2        /*T*                                                         */
      230        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      231        4        /*T*                                                         */
      232        5        /*T***********************************************************/
      233        6        FXD$PMME: PROC(ERR) ALTRET;

      6  6 000000   000000 700200 xent  FXD$PMME     TSX0  ! X66_AUTO_1
         6 000001   000020 000001                    ZERO    16,1

      234        7    1   DCL ERR BIT(36) ALIGNED;
      235        8    1   DCL IC UBIN;
      236        9    1   DCL RETURN_IC UBIN(18) ALIGNED BASED;
      237       10        %INCLUDE CP_6;
      238       91        %B$TCB;
      239       94        %B$EXCFR;
      240      112    1   DCL PN$(0:20) STATIC PTR INIT(ADDR(NIL)*0);
      241      113        %FPT_OPEN (FPTN=OPEN_FPT, STCLASS="BASED(FPT$)");
      242      222        %FPT_CLOSE (FPTN=CLOSE_FPT, STCLASS="BASED(FPT$)");
      243      264        %FPT_WRITE (FPTN=WRITE_FPT, STCLASS="BASED(FPT$)");
      244      295        %FPT_READ (FPTN=READ_FPT, STCLASS="BASED(FPT$)");
      245      334    1   DCL FPT$ PTR;
      246      335    1   DCL B$JIT$ PTR SYMREF;
      247      336        %INCLUDE F$JIT_C;
      248      453        %INCLUDE F_DCB_D;
      249      541        %M$MDCB (DCBN=MYDCB,STCLASS=STATIC SYMDEF DALIGNED);
      250      615        %M$MDCB (DCBN=SCRUB_DCB, STCLASS=CONSTANT);
      251      689        %VLP_SN (STCLASS=BASED);
      252      702    1   DCL B$RT UBIN CONSTANT INIT(BITBIN('6017'O));
      253      703    1   DCL B$RT$ REDEF B$RT PTR;
      254      704    1   DCL FMN$OPNDP ENTRY(1) ALTRET;
      255      705    1   DCL FMN$CLSDP ENTRY(1) ALTRET;
      256      706    1   DCL M$DP DCB;
      257      707    1   DCL VEC VECTOR BASED DALIGNED;
      258      708    1   DCL FC UBIN;
      259      709        %INCLUDE N_FC_C;
PL6.E3A0      #002=FXD$PMME File=FXD$DEBUG.:E05TSI                               TUE 07/29/97 18:04 Page:61   
      260      746    1   DCL FMB$QUEUE ENTRY(9) ALTRET;
      261      747    1   DCL M$DP$ PTR SYMREF;
      262      748    1   DCL M$SI DCB;
      263      749    1   DCL M$LO DCB;
      264      750    1   DCL WROCBUF CHAR(80) STATIC INIT('@');
      265      751        %FPT_TEMPWROC (FPTN=WROC_FPT, STCLASS="BASED(FPT$)");
      266      767        %FPT_READ (FPTN=WROCRD, DCB=M$SI);
      267      806        %FPT_WRITE (FPTN=WROCWRT, DCB=M$LO, TRANS=YES, BP=YES, VFC=YES, BUF=WROCBUF);
      268      837    1   DCL CHARS CHAR(98) BASED;
      269      838    1      IF B$RT$->B$TCB.ALT$->B$EXCFR.DCB#~=DCBNUM(M$DP)

    838  6 000002   000140 470400 2                  LDP0    B$RT
         6 000003   000000 471500                    LDP1    0,,PR0
         6 000004   000000 236007 xsym               LDQ     M$DP,DL
         6 000005   100101 116100                    CMPQ    65,,PR1
         6 000006   000021 600000 6                  TZE     s:844
         6 000007   100100 720100                    LXL0    64,,PR1
         6 000010   110000 100003                    CMPX0   36864,DU
         6 000011   000021 600000 6                  TZE     s:844

      270      839    2      AND B$RT$->B$TCB.ALT$->B$EXCFR.FPT~='110000'O THEN DO;

      271      840    2         IF ADDR(ERR)~=ADDR(NIL)

    840  6 000012   200003 236100                    LDQ     @ERR,,AUTO
         6 000013   000001 116000 xsym               CMPQ    B_VECTNIL+1
         6 000014   000020 600000 6                  TZE     s:842

      272      841    2         THEN ERR=B$RT$->B$TCB.ALT$->B$EXCFR.ERR;

    841  6 000015   100102 236100                    LDQ     66,,PR1
         6 000016   200003 473500                    LDP3    @ERR,,AUTO
         6 000017   300000 756100                    STQ     0,,PR3

      273      842    2         ALTRETURN;

    842  6 000020   000000 702200 xent               TSX2  ! X66_AALT
PL6.E3A0      #002=FXD$PMME File=FXD$DEBUG.:E05TSI                               TUE 07/29/97 18:04 Page:62   

      274      843    2         END;
      275      844    1      B$JIT.DCB$=ADDR(MYDCB);

    844  6 000021   000000 236000 7                  LDQ     0
         6 000022   000000 473400 xsym               LDP3    B$JIT$
         6 000023   300232 756100                    STQ     154,,PR3

      276      845    1      FPT$=B$RT$->B$TCB.ALT$->B$EXCFR.PRS(0);

    845  6 000024   000000 471500                    LDP1    0,,PR0
         6 000025   100020 236100                    LDQ     16,,PR1
         6 000026   200005 756100                    STQ     FPT$,,AUTO

      277      846    1      B$JIT.ERR='0'B;

    846  6 000027   300012 450100                    STZ     10,,PR3

      278      847    1      IC=B$RT$->B$TCB.ALT$->B$EXCFR.IC;

    847  6 000030   000000 471500                    LDP1    0,,PR0
         6 000031   100004 236100                    LDQ     4,,PR1
         6 000032   000022 772000                    QRL     18
         6 000033   200004 756100                    STQ     IC,,AUTO

      279      848    2      DO SELECT B$RT$->B$TCB.ALT$->B$EXCFR.FPT;

    848  6 000034   000000 471500                    LDP1    0,,PR0
         6 000035   100100 720100                    LXL0    64,,PR1
         6 000036   050000 100003                    CMPX0   20480,DU
         6 000037   000051 602000 6                  TNC     s:848+13
         6 000040   050000 100003                    CMPX0   20480,DU
         6 000041   000060 600000 6                  TZE     s:850
         6 000042   050001 100003                    CMPX0   20481,DU
         6 000043   000255 602000 6                  TNC     s:894
         6 000044   050001 100003                    CMPX0   20481,DU
         6 000045   000146 600000 6                  TZE     s:869
PL6.E3A0      #002=FXD$PMME File=FXD$DEBUG.:E05TSI                               TUE 07/29/97 18:04 Page:63   
         6 000046   110000 100003                    CMPX0   36864,DU
         6 000047   000255 601000 6                  TNZ     s:894
         6 000050   000215 710000 6                  TRA     s:882
         6 000051   040000 100003                    CMPX0   16384,DU
         6 000052   000255 602000 6                  TNC     s:894
         6 000053   040000 100003                    CMPX0   16384,DU
         6 000054   000163 600000 6                  TZE     s:874
         6 000055   040001 100003                    CMPX0   16385,DU
         6 000056   000255 601000 6                  TNZ     s:894
         6 000057   000166 710000 6                  TRA     s:877

      280      849    2      SELECT '050000'O; /* OPEN */

      281      850    2         IF MYDCB.FCD# THEN GOTO OPEN_CLOSE_ERR;

    850  6 000060   000057 236000 1                  LDQ     MYDCB+25
         6 000061   020000 316007                    CANQ    8192,DL
         6 000062   000261 601000 6                  TNZ     OPEN_CLOSE_ERR

      282      851    2         IF OPEN_FPT.V.INITZ.SCRUB# THEN MYDCB=SCRUB_DCB;

    851  6 000063   200005 474500                    LDP4    FPT$,,AUTO
         6 000064   400044 236100                    LDQ     36,,PR4
         6 000065   400000 316007                    CANQ    -131072,DL
         6 000066   000072 600000 6                  TZE     s:852

    851  6 000067   000000 100400                    MLR     fill='000'O
         6 000070   000000 000600 2                  ADSC9   SCRUB_DCB                cn=0,n=384
         6 000071   000026 000600 1                  ADSC9   MYDCB                    cn=0,n=384

      283      852    2         IF OPEN_FPT.SN_=VECTOR(ERASE)

    852  6 000072   400002 237100                    LDAQ    2,,PR4
         6 000073   000002 117000 7                  CMPAQ   2
         6 000074   000101 601000 6                  TNZ     s:854

      284      853    2         THEN MYDCB.PSN#=' ';
PL6.E3A0      #002=FXD$PMME File=FXD$DEBUG.:E05TSI                               TUE 07/29/97 18:04 Page:64   

    853  6 000075   040000 100400                    MLR     fill='040'O
         6 000076   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         6 000077   000052 000006 1                  ADSC9   MYDCB+20                 cn=0,n=6
         6 000100   000110 710000 6                  TRA     s:856

      285      854    2         ELSE IF OPEN_FPT.SN_~=VECTOR(NIL)

    854  6 000101   400002 237100                    LDAQ    2,,PR4
         6 000102   000004 117000 7                  CMPAQ   4
         6 000103   000110 600000 6                  TZE     s:856

      286      855    2         THEN MYDCB.PSN#=VBASE(ADDR(OPEN_FPT.SN_)->VEC)->VLP_SN.SN#(0);

    855  6 000104   400003 471500                    LDP1    3,,PR4
         6 000105   040000 100500                    MLR     fill='040'O
         6 000106   100001 000006                    ADSC9   1,,PR1                   cn=0,n=6
         6 000107   000052 000006 1                  ADSC9   MYDCB+20                 cn=0,n=6

      287      856    2         IF OPEN_FPT.V.RES#~=BINASC(0)

    856  6 000110   400050 236100                    LDQ     40,,PR4
         6 000111   000006 116000 7                  CMPQ    6
         6 000112   000114 600000 6                  TZE     s:858

      288      857    2         THEN MYDCB.RES#=OPEN_FPT.V.RES#;

    857  6 000113   000054 756000 1                  STQ     MYDCB+22

      289      858    2         IF OPEN_FPT.V.FUN#~=0

    858  6 000114   400045 236100                    LDQ     37,,PR4
         6 000115   777000 316007                    CANQ    -512,DL
         6 000116   000121 600000 6                  TZE     s:860

      290      859    2         THEN MYDCB.FUN#=OPEN_FPT.V.FUN#;

PL6.E3A0      #002=FXD$PMME File=FXD$DEBUG.:E05TSI                               TUE 07/29/97 18:04 Page:65   
    859  6 000117   000011 736000                    QLS     9
         6 000120   000060 552020 1                  STBQ    MYDCB+26,'20'O

      291      860    2         IF OPEN_FPT.V.ASN#~=0

    860  6 000121   400045 236100                    LDQ     37,,PR4
         6 000122   000777 316007                    CANQ    511,DL
         6 000123   000126 600000 6                  TZE     s:862

      292      861    2         THEN MYDCB.ASN#=OPEN_FPT.V.ASN#;

    861  6 000124   000011 736000                    QLS     9
         6 000125   000060 552010 1                  STBQ    MYDCB+26,'10'O

      293      862    2         IF OPEN_FPT.V.ORG#~=0

    862  6 000126   400046 236100                    LDQ     38,,PR4
         6 000127   777000 316007                    CANQ    -512,DL
         6 000130   000133 600000 6                  TZE     s:864

      294      863    2         THEN MYDCB.ORG#=OPEN_FPT.V.ORG#;

    863  6 000131   000022 736000                    QLS     18
         6 000132   000060 552040 1                  STBQ    MYDCB+26,'40'O

      295      864    2         PN$(0)=VBASE(ADDR(OPEN_FPT.V_)->VEC);

    864  6 000133   400001 236100                    LDQ     1,,PR4
         6 000134   000000 756000 1                  STQ     PN$

      296      865    2         M$DP$=ADDR(MYDCB);

    865  6 000135   000000 236000 7                  LDQ     0
         6 000136   000000 756000 xsym               STQ     M$DP$

      297      866    2         CALL FMN$OPNDP(PN$) ALTRET(REPORT_ERR);

PL6.E3A0      #002=FXD$PMME File=FXD$DEBUG.:E05TSI                               TUE 07/29/97 18:04 Page:66   
    866  6 000137   000007 630400 7                  EPPR0   7
         6 000140   000017 631400 xsym               EPPR1   B_VECTNIL+15
         6 000141   000000 701000 xent               TSX1    FMN$OPNDP
         6 000142   000263 702000 6                  TSX2    REPORT_ERR

      298      867    2         MYDCB.FCD#='1'B;

    867  6 000143   020000 236007                    LDQ     8192,DL
         6 000144   000057 256000 1                  ORSQ    MYDCB+25
         6 000145   000255 710000 6                  TRA     s:894

      299      868    2      SELECT '050001'O; /* CLOSE */

      300      869    2         IF NOT MYDCB.FCD# THEN GOTO OPEN_CLOSE_ERR;

    869  6 000146   000057 236000 1                  LDQ     MYDCB+25
         6 000147   020000 316007                    CANQ    8192,DL
         6 000150   000261 600000 6                  TZE     OPEN_CLOSE_ERR

      301      870    2         PN$(0)=VBASE(ADDR(CLOSE_FPT.V_)->VEC);

    870  6 000151   200005 474500                    LDP4    FPT$,,AUTO
         6 000152   400001 236100                    LDQ     1,,PR4
         6 000153   000000 756000 1                  STQ     PN$

      302      871    2         CALL FMN$CLSDP (PN$) ALTRET(REPORT_ERR);

    871  6 000154   000007 630400 7                  EPPR0   7
         6 000155   000017 631400 xsym               EPPR1   B_VECTNIL+15
         6 000156   000000 701000 xent               TSX1    FMN$CLSDP
         6 000157   000263 702000 6                  TSX2    REPORT_ERR

      303      872    2         MYDCB.FCD#='0'B;

    872  6 000160   000010 236000 7                  LDQ     8
         6 000161   000057 356000 1                  ANSQ    MYDCB+25
         6 000162   000255 710000 6                  TRA     s:894
PL6.E3A0      #002=FXD$PMME File=FXD$DEBUG.:E05TSI                               TUE 07/29/97 18:04 Page:67   

      304      873    2      SELECT '040000'O; /* READ */

      305      874    2         FC=%N_RDBIN;

    874  6 000163   000002 235007                    LDA     2,DL
         6 000164   200006 755100                    STA     FC,,AUTO

      306      875    2         GOTO RDWRT;

    875  6 000165   000170 710000 6                  TRA     RDWRT

      307      876    2      SELECT '040001'O; /* WRITE */

      308      877    2         FC=%N_WRBIN;

    877  6 000166   000003 235007                    LDA     3,DL
         6 000167   200006 755100                    STA     FC,,AUTO

    877  6 000170                       RDWRT        null
      309      878    2   RDWRT:;
      310      879    2         CALL FMB$QUEUE(READ_FPT.BUF_.BUF$,1,4096,

    879  6 000170   200005 471500                    LDP1    FPT$,,AUTO
         6 000171   100003 474500                    LDP4    3,,PR1
         6 000172   000012 237000 7                  LDAQ    10
         6 000173   200016 757100                    STAQ    FC+8,,AUTO
         6 000174   000014 236000 7                  LDQ     12
         6 000175   200015 756100                    STQ     FC+7,,AUTO
         6 000176   200006 635500                    EPPR5   FC,,AUTO
         6 000177   200014 455500                    STP5    FC+6,,AUTO
         6 000200   200013 454500                    STP4    FC+5,,AUTO
         6 000201   000015 236000 7                  LDQ     13
         6 000202   200012 756100                    STQ     FC+4,,AUTO
         6 000203   000016 236000 7                  LDQ     14
         6 000204   200011 756100                    STQ     FC+3,,AUTO
         6 000205   200005 236100                    LDQ     FPT$,,AUTO
PL6.E3A0      #002=FXD$PMME File=FXD$DEBUG.:E05TSI                               TUE 07/29/97 18:04 Page:68   
         6 000206   000005 036003                    ADLQ    5,DU
         6 000207   200010 756100                    STQ     FC+2,,AUTO
         6 000210   200010 630500                    EPPR0   FC+2,,AUTO
         6 000211   000026 631400 xsym               EPPR1   B_VECTNIL+22
         6 000212   000000 701000 xent               TSX1    FMB$QUEUE
         6 000213   000263 702000 6                  TSX2    REPORT_ERR
         6 000214   000255 710000 6                  TRA     s:894

      311      880    2           VBASE(ADDR(READ_FPT.KEY_)->VEC)->VEC,FC,-1,0,0) ALTRET(REPORT_ERR);
      312      881    2      SELECT '110000'O; /* TEMPWROC */

      313      882    3         IF WROC_FPT.BUFW_.BUFW$~=ADDR(NIL) THEN DO;

    882  6 000215   200005 474500                    LDP4    FPT$,,AUTO
         6 000216   400003 236100                    LDQ     3,,PR4
         6 000217   000001 116000 xsym               CMPQ    B_VECTNIL+1
         6 000220   000242 600000 6                  TZE     s:888

      314      883    3            SUBSTR(WROCBUF,1)=SUBSTR(WROC_FPT.BUFW_.BUFW$->CHARS,0,

    883  6 000221   400003 475500                    LDP5    3,,PR4
         6 000222   400002 236100                    LDQ     2,,PR4
         6 000223   000020 772000                    QRL     16
         6 000224   000001 621006                    EAX1    1,QL
         6 000225   040000 100540                    MLR     fill='040'O
         6 000226   500000 000011                    ADSC9   0,,PR5                   cn=0,n=*X1
         6 000227   000166 200117 1                  ADSC9   WROCBUF                  cn=1,n=79

      315      884    3              WROC_FPT.BUFW_.BOUND+1);
      316      885    3            WROCWRT.BUF_.BOUND=WROC_FPT.BUFW_.BOUND+1;

    885  6 000230   400002 236100                    LDQ     2,,PR4
         6 000231   000020 772000                    QRL     16
         6 000232   000001 036007                    ADLQ    1,DL
         6 000233   000020 736000                    QLS     16
         6 000234   000234 676000 1                  ERQ     WROCWRT+4
         6 000235   000034 376000 xsym               ANQ     B_VECTNIL+28
PL6.E3A0      #002=FXD$PMME File=FXD$DEBUG.:E05TSI                               TUE 07/29/97 18:04 Page:69   
         6 000236   000234 656000 1                  ERSQ    WROCWRT+4

      317      886    3            CALL M$WRITE(WROCWRT);

    886  6 000237   000230 630400 1                  EPPR0   WROCWRT
         6 000240   040001 713400                    CLIMB   write
         6 000241   401400 401760                    pmme    nvectors=4

      318      887    3            END;

      319      888    3         IF WROC_FPT.BUFR_.BUFR$~=ADDR(NIL) THEN DO;

    888  6 000242   200005 470500                    LDP0    FPT$,,AUTO
         6 000243   000005 236100                    LDQ     5,,PR0
         6 000244   000001 116000 xsym               CMPQ    B_VECTNIL+1
         6 000245   000255 600000 6                  TZE     s:894

      320      889    3            WROCRD.BUF_=WROC_FPT.BUFR_;

    889  6 000246   000004 237100                    LDAQ    4,,PR0
         6 000247   000216 757000 1                  STAQ    WROCRD+4

      321      890    3            CALL M$READ (WROCRD);

    890  6 000250   000212 630400 1                  EPPR0   WROCRD
         6 000251   040000 713400                    CLIMB   read
         6 000252   401400 401760                    pmme    nvectors=4

      322      891    3            WROC_FPT.V.TYC='0'B;

    891  6 000253   200005 470500                    LDP0    FPT$,,AUTO
         6 000254   000007 450100                    STZ     7,,PR0

      323      892    3            END;

      324      893    2      END;

PL6.E3A0      #002=FXD$PMME File=FXD$DEBUG.:E05TSI                               TUE 07/29/97 18:04 Page:70   
      325      894    1      PINCRW(ADDR(IC),-4)->RETURN_IC=IC+2;

    894  6 000255   200004 720100                    LXL0    IC,,AUTO
         6 000256   000002 621010                    EAX1    2,X0
         6 000257   200000 741100                    STX1    0,,AUTO

      326      895    1      RETURN;

    895  6 000260   000000 702200 xent               TSX2  ! X66_ARET

    894  6 000261                       OPEN_CLOSE_* null
      327      896    1   OPEN_CLOSE_ERR:;
      328      897    1      B$JIT.ERR='061515001442'O;

    897  6 000261   000141 236000 2                  LDQ     B$RT+1
         6 000262   300012 756100                    STQ     10,,PR3

    897  6 000263                       REPORT_ERR   null
      329      898    1   REPORT_ERR:;
      330      899    1      B$JIT.ERR.MON='1'B;

    899  6 000263   000000 470400 xsym               LDP0    B$JIT$
         6 000264   400000 236007                    LDQ     -131072,DL
         6 000265   000012 256100                    ORSQ    10,,PR0

      331      900    1      IF ADDR(ERR)~=ADDR(NIL) THEN ERR=B$JIT.ERR;

    900  6 000266   200003 236100                    LDQ     @ERR,,AUTO
         6 000267   000001 116000 xsym               CMPQ    B_VECTNIL+1
         6 000270   000274 600000 6                  TZE     s:901

    900  6 000271   000012 236100                    LDQ     10,,PR0
         6 000272   200003 471500                    LDP1    @ERR,,AUTO
         6 000273   100000 756100                    STQ     0,,PR1

      332      901    1      ALTRETURN;

PL6.E3A0      #002=FXD$PMME File=FXD$DEBUG.:E05TSI                               TUE 07/29/97 18:04 Page:71   
    901  6 000274   000000 702200 xent               TSX2  ! X66_AALT
      333      902    1   END;
      334      903        %EOD;

PL6.E3A0      #002=FXD$PMME File=FXD$DEBUG.:E05TSI                               TUE 07/29/97 18:04 Page:72   
--  Include file information  --

   N_FC_C.:E05TOU  is referenced.
   F_DCB_D.:E05TOU  is referenced.
   F$JIT_C.:E05TOU  cannot be made into a system file and is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure FXD$PMME.
PL6.E3A0      #002=FXD$PMME File=FXD$DEBUG.:E05TSI                               TUE 07/29/97 18:04 Page:73   

 **** Variables and constants ****

  ****  Section 001  Data  FXD$PMME

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

    26-0-0/d STRC(3456)  r     1 MYDCB                      0-0-0/w PTR         r     1 PN$(0:20)
   166-0-0/c CHAR(80)    r     1 WROCBUF                  212-0-0/d STRC(504)   r     1 WROCRD
   230-0-0/d STRC(432)   r     1 WROCWRT

  ****  Section 002 RoData FXD$PMME

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

   140-0-0/w UBIN        r     1 B$RT                     140-0-0/w PTR         r     1 B$RT$
     0-0-0/w STRC(3456)  r     1 SCRUB_DCB

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @ERR                      *0-0-0/w BIT         r     1 ERR
     6-0-0/w UBIN        r     1 FC                         5-0-0/w PTR         r     1 FPT$
     4-0-0/w UBIN        r     1 IC

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 B$JIT$                     0-0-0/w PTR         r     1 M$DP$

  ****  BASED and DCB variables  ****

PL6.E3A0      #002=FXD$PMME File=FXD$DEBUG.:E05TSI                               TUE 07/29/97 18:04 Page:74   
  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(2448)  r     1 B$EXCFR                    0-0-0/d STRC(8856)  r     1 B$JIT
     0-0-0/w STRC(144)   r     1 B$TCB                      0-0-0/c CHAR(98)    r     1 CHARS
     0-0-0/d STRC(1080)  r     1 CLOSE_FPT                  0-0-0N  NULL        r     1 M$DP
     0-0-0N  NULL        r     1 M$LO                       0-0-0N  NULL        r     1 M$SI
     0-0-0/d STRC(2088)  r     1 OPEN_FPT                   0-0-0/d STRC(504)   r     1 READ_FPT
     0-0-0/w UBIN(18)    r     1 RETURN_IC                  0-0-0/d VECT        r     1 VEC
     0-0-0/d STRC(90)    r     1 VLP_SN                     0-0-0/d STRC(288)   r     1 WROC_FPT


   Procedure FXD$PMME requires 189 words for executable code.
   Procedure FXD$PMME requires 16 words of local(AUTO) storage.
PL6.E3A0      #002=FXD$PMME File=FXD$DEBUG.:E05TSI                               TUE 07/29/97 18:04 Page:75   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #002=FXD$PMME File=FXD$DEBUG.:E05TSI                               TUE 07/29/97 18:04 Page:76   
          MINI XREF LISTING

B$EXCFR.ASL
        95**DCL        95--REDEF
B$EXCFR.DCB#
       108**DCL       838>>IF
B$EXCFR.ERR
       109**DCL       841>>ASSIGN
B$EXCFR.ERR.ERR#
       109**DCL       109--REDEF
B$EXCFR.EVID
       108**DCL       108--REDEF     109--REDEF
B$EXCFR.FPT
       108**DCL       838>>IF        848>>DOSELCT
B$EXCFR.IC
        96**DCL       847>>ASSIGN
B$EXCFR.IR
        96**DCL        96--REDEF
B$EXCFR.PREVSZ
        95**DCL        95--REDEF
B$EXCFR.PRS
       106**DCL       845>>ASSIGN
B$EXCFR.SUBC
       107**DCL       107--REDEF     108--REDEF     108--REDEF
B$JIT.DCB$
       440**DCL       844<<ASSIGN
B$JIT.ERR
       350**DCL       846<<ASSIGN    897<<ASSIGN    900>>ASSIGN
B$JIT.ERR.MID
       351**DCL       351--REDEF
B$JIT.ERR.MON
       351**DCL       899<<ASSIGN
B$JIT$
       335**DCL       345--IMP-PTR   844>>ASSIGN    846>>ASSIGN    897>>ASSIGN    899>>ASSIGN    900>>ASSIGN
PL6.E3A0      #002=FXD$PMME File=FXD$DEBUG.:E05TSI                               TUE 07/29/97 18:04 Page:77   
B$RT
       702**DCL       703--REDEF
B$RT$
       703**DCL       838>>IF        838>>IF        841>>ASSIGN    845>>ASSIGN    847>>ASSIGN    848>>DOSELCT
B$TCB.ALT$
        92**DCL       838>>IF        838>>IF        841>>ASSIGN    845>>ASSIGN    847>>ASSIGN    848>>DOSELCT
CHARS
       837**DCL       883>>ASSIGN
CLOSE_FPT.SN_
       245**DCL       245--REDEF
CLOSE_FPT.UTL_
       246**DCL       246--REDEF
CLOSE_FPT.V.EXPIRE#
       260**DCL       260--REDEF
CLOSE_FPT.V.TYPE#
       258**DCL       258--REDEF
CLOSE_FPT.V.XTNSIZE#
       255**DCL       255--REDEF     257--REDEF
CLOSE_FPT.V_
       245**DCL       870--ASSIGN
ERR
         7**DCL         6--PROC      840--IF        841<<ASSIGN    900--IF        900<<ASSIGN
FC
       708**DCL       874<<ASSIGN    877<<ASSIGN    879<>CALL
FMB$QUEUE
       746**DCL-ENT   879--CALL
FMN$CLSDP
       705**DCL-ENT   871--CALL
FMN$OPNDP
       704**DCL-ENT   866--CALL
FPT$
       334**DCL       178--IMP-PTR   245--IMP-PTR   281--IMP-PTR   312--IMP-PTR   762--IMP-PTR   845<<ASSIGN
       851>>IF        852>>IF        854>>IF        855>>ASSIGN    856>>IF        857>>ASSIGN    858>>IF
       859>>ASSIGN    860>>IF        861>>ASSIGN    862>>IF        863>>ASSIGN    864>>ASSIGN    870>>ASSIGN
       879>>CALL      879>>CALL      882>>IF        883>>ASSIGN    883>>ASSIGN    885>>ASSIGN    888>>IF
       889>>ASSIGN    891>>ASSIGN
PL6.E3A0      #002=FXD$PMME File=FXD$DEBUG.:E05TSI                               TUE 07/29/97 18:04 Page:78   
IC
         8**DCL       847<<ASSIGN    894--ASSIGN    894>>ASSIGN
M$DP
       706**DCL       838>>IF
M$DP$
       747**DCL       865<<ASSIGN
M$READ
        20**DCL-ENT   890--CALL
M$WRITE
        20**DCL-ENT   886--CALL
MYDCB
       542**DCL       844--ASSIGN    851<<ASSIGN    865--ASSIGN
MYDCB.ACTPOS
       583**DCL       583--REDEF
MYDCB.ARS#
       542**DCL       542--REDEF
MYDCB.ASN#
       567**DCL       861<<ASSIGN
MYDCB.ATTR#
       572**DCL       572--REDEF     574--REDEF
MYDCB.BORROW
       594**DCL       594--REDEF     594--REDEF     594--REDEF
MYDCB.EOMCHAR#
       549**DCL       550--REDEF
MYDCB.FCD#
       564**DCL       850>>IF        867<<ASSIGN    869>>IF        872<<ASSIGN
MYDCB.FLDID
       586**DCL       587--REDEF
MYDCB.FORM$
       578**DCL       578--REDEF
MYDCB.FSECT
       601**DCL       601--REDEF
MYDCB.FSN#
       568**DCL       568--REDEF     568--REDEF     569--REDEF
MYDCB.FUN#
       567**DCL       859<<ASSIGN
PL6.E3A0      #002=FXD$PMME File=FXD$DEBUG.:E05TSI                               TUE 07/29/97 18:04 Page:79   
MYDCB.HEADER$
       577**DCL       578--REDEF
MYDCB.IXTNSIZE#
       574**DCL       575--REDEF
MYDCB.LASTSTA$
       558**DCL       558--REDEF
MYDCB.LVL
       595**DCL       595--REDEF
MYDCB.NAME#.C
       558**DCL       559--REDEF
MYDCB.NOEOF
       590**DCL       590--REDEF
MYDCB.NRECS#
       575**DCL       575--REDEF
MYDCB.NRECX
       602**DCL       602--REDEF
MYDCB.OHDR
       591**DCL       591--REDEF
MYDCB.ORG#
       566**DCL       567--REDEF     863<<ASSIGN
MYDCB.PRECNO
       599**DCL       599--REDEF
MYDCB.PSN#
       559**DCL       853<<ASSIGN    855<<ASSIGN
MYDCB.RCSZ
       607**DCL       607--REDEF
MYDCB.RES#
       560**DCL       560--REDEF     857<<ASSIGN
MYDCB.SETX
       579**DCL       579--REDEF
MYDCB.TAB$
       578**DCL       578--REDEF
MYDCB.TDA
       598**DCL       599--REDEF
MYDCB.WSN#
       560**DCL       561--REDEF
PL6.E3A0      #002=FXD$PMME File=FXD$DEBUG.:E05TSI                               TUE 07/29/97 18:04 Page:80   
OPEN_CLOSE_ERR
       894**LABEL     850--GOTO      869--GOTO
OPEN_FPT.ACSVEH_
       180**DCL       181--REDEF
OPEN_FPT.ALTKEYS_
       186**DCL       187--REDEF     187--REDEF
OPEN_FPT.HDR_
       185**DCL       186--REDEF
OPEN_FPT.SN_
       178**DCL       852>>IF        854>>IF        855--ASSIGN
OPEN_FPT.TAB_
       184**DCL       185--REDEF
OPEN_FPT.UHL_
       178**DCL       179--REDEF     179--REDEF
OPEN_FPT.V.ASN#
       197**DCL       860>>IF        861>>ASSIGN
OPEN_FPT.V.FSN#
       218**DCL       218--REDEF     218--REDEF
OPEN_FPT.V.FUN#
       197**DCL       858>>IF        859>>ASSIGN
OPEN_FPT.V.INITZ.SCRUB#
       188**DCL       851>>IF
OPEN_FPT.V.ORG#
       198**DCL       862>>IF        863>>ASSIGN
OPEN_FPT.V.RES#
       202**DCL       856>>IF        857>>ASSIGN
OPEN_FPT.V_
       178**DCL       864--ASSIGN
OPEN_FPT.WSN_
       184**DCL       184--REDEF
PN$
       112**DCL       864<<ASSIGN    866<>CALL      870<<ASSIGN    871<>CALL
RDWRT
       877**LABEL     875--GOTO
READ_FPT.BUF_.BUF$
       315**DCL       879<>CALL
PL6.E3A0      #002=FXD$PMME File=FXD$DEBUG.:E05TSI                               TUE 07/29/97 18:04 Page:81   
READ_FPT.KEY_
       312**DCL       879--CALL
READ_FPT.STATION_
       315**DCL       316--REDEF
READ_FPT.V.DVBYTE.REREAD#
       327**DCL       327--REDEF
READ_FPT.V.INDX#
       325**DCL       325--REDEF
REPORT_ERR
       897**LABEL     866--CALLALT   871--CALLALT   879--CALLALT
RETURN_IC
         9**DCL       894<<ASSIGN
SCRUB_DCB
       616**DCL       851>>ASSIGN
SCRUB_DCB.ACTPOS
       657**DCL       657--REDEF
SCRUB_DCB.ARS#
       616**DCL       616--REDEF
SCRUB_DCB.ATTR#
       646**DCL       646--REDEF     648--REDEF
SCRUB_DCB.BORROW
       668**DCL       668--REDEF     668--REDEF     668--REDEF
SCRUB_DCB.EOMCHAR#
       623**DCL       624--REDEF
SCRUB_DCB.FLDID
       660**DCL       661--REDEF
SCRUB_DCB.FORM$
       652**DCL       652--REDEF
SCRUB_DCB.FSECT
       675**DCL       675--REDEF
SCRUB_DCB.FSN#
       642**DCL       642--REDEF     642--REDEF     643--REDEF
SCRUB_DCB.HEADER$
       651**DCL       652--REDEF
SCRUB_DCB.IXTNSIZE#
       648**DCL       649--REDEF
PL6.E3A0      #002=FXD$PMME File=FXD$DEBUG.:E05TSI                               TUE 07/29/97 18:04 Page:82   
SCRUB_DCB.LASTSTA$
       632**DCL       632--REDEF
SCRUB_DCB.LVL
       669**DCL       669--REDEF
SCRUB_DCB.NAME#.C
       632**DCL       633--REDEF
SCRUB_DCB.NOEOF
       664**DCL       664--REDEF
SCRUB_DCB.NRECS#
       649**DCL       649--REDEF
SCRUB_DCB.NRECX
       676**DCL       676--REDEF
SCRUB_DCB.OHDR
       665**DCL       665--REDEF
SCRUB_DCB.ORG#
       640**DCL       641--REDEF
SCRUB_DCB.PRECNO
       673**DCL       673--REDEF
SCRUB_DCB.RCSZ
       681**DCL       681--REDEF
SCRUB_DCB.RES#
       634**DCL       634--REDEF
SCRUB_DCB.SETX
       653**DCL       653--REDEF
SCRUB_DCB.TAB$
       652**DCL       652--REDEF
SCRUB_DCB.TDA
       672**DCL       673--REDEF
SCRUB_DCB.WSN#
       634**DCL       635--REDEF
VEC
       707**DCL       855>>ASSIGN    864>>ASSIGN    870>>ASSIGN    879>>CALL      879<>CALL
VLP_SN.SN#
       700**DCL       855>>ASSIGN
WRITE_FPT.STATION_
       283**DCL       283--REDEF
PL6.E3A0      #002=FXD$PMME File=FXD$DEBUG.:E05TSI                               TUE 07/29/97 18:04 Page:83   
WRITE_FPT.V.DVBYTE.VFC#
       290**DCL       290--REDEF
WROCBUF
       750**DCL       824--DCLINIT   825--DCLINIT   883<<ASSIGN
WROCRD
       784**DCL       890<>CALL
WROCRD.BUF_
       786**DCL       889<<ASSIGN
WROCRD.STATION_
       787**DCL       788--REDEF
WROCRD.V
       788**DCL       784--DCLINIT
WROCRD.V.DVBYTE.REREAD#
       799**DCL       799--REDEF
WROCRD.V.INDX#
       797**DCL       797--REDEF
WROCWRT
       823**DCL       886<>CALL
WROCWRT.BUF_.BOUND
       823**DCL       885<<ASSIGN
WROCWRT.STATION_
       825**DCL       825--REDEF
WROCWRT.V
       826**DCL       823--DCLINIT
WROCWRT.V.DVBYTE.VFC#
       832**DCL       832--REDEF
WROC_FPT.BUFR_
       763**DCL       889>>ASSIGN
WROC_FPT.BUFR_.BUFR$
       764**DCL       888>>IF
WROC_FPT.BUFW_.BOUND
       762**DCL       883>>ASSIGN    885>>ASSIGN
WROC_FPT.BUFW_.BUFW$
       763**DCL       882>>IF        883>>ASSIGN
WROC_FPT.V.TYC
       765**DCL       891<<ASSIGN

PL6.E3A0      #003=FXD$SBR File=FXD$DEBUG.:E05TSI                                TUE 07/29/97 18:05 Page:84   
      335        1        /*T***********************************************************/
      336        2        /*T*                                                         */
      337        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      338        4        /*T*                                                         */
      339        5        /*T***********************************************************/
      340        6        FXD$SBR: PROC(P1,P2,P3,P4,P5,P6,P7,P8,P9) ALTRET;
      341        7        /* EXTERNAL ENTRIES THAT NEED SIMULATION */
      342        8    1   DCL P1 UBIN;
      343        9    1   DCL P1$ REDEF P1 PTR;
      344       10    1   DCL P2 UBIN;
      345       11    1   DCL P2$ REDEF P2 PTR;
      346       12    1   DCL P3 UBIN;
      347       13    1   DCL P3$ REDEF P3 PTR;
      348       14    1   DCL P4 UBIN;
      349       15    1   DCL P5 UBIN;
      350       16    1   DCL P6 UBIN;
      351       17    1   DCL P7 UBIN;
      352       18    1   DCL P8 UBIN;
      353       19    1   DCL P9 UBIN;
      354       20        %INCLUDE CP_6;
      355      101        %F$DCB (DCBN=MYDCB, STCLASS=SYMREF);
      356      158    1   DCL FM$BUF$(0:0) PTR SYMREF;
      357      159    1   DCL HEAD_BUF UBIN SYMREF;
      358      160    1   DCL NEXT_BUF UBIN BASED ALIGNED;
      359      161    1   DCL GRAN UBIN;
      360      162    1   DCL 1 DDA REDEF GRAN,
      361      163    1         2 DCTX UBIN(15) UNAL,
      362      164    1         2 GRAN UBIN(21) UNAL;
      363      165    1   DCL FM_SRZERO UBIN SYMREF READONLY;
      364      166    1   DCL FAF$SRTODR ENTRY(2) ALTRET;
      365      167    1   DCL XSF$LOCCODE ENTRY(2) ALTRET;
      366      168    1   DCL XSF$LOCCODP ENTRY(2) ALTRET;
      367      169    1   DCL XSF$LOCCODT ENTRY(2) ALTRET;
      368      170    1   DCL 1 KEY STATIC,
      369      171    1         2 L UBIN BYTE CALIGNED INIT(7),
      370      172    1         2 VOL UBIN(27) CALIGNED,
      371      173    1         2 GRAN UBIN;
PL6.E3A0      #003=FXD$SBR File=FXD$DEBUG.:E05TSI                                TUE 07/29/97 18:05 Page:85   
      372      174        %FPT_READ (FPTN=RWDP, DCB=M$PACKS, KEYS=YES, INDX=256, KEY=KEY);
      373      213        %M$DCB (DCBN=M$PACKS, ASN=FILE, NAME=':PACKS', FUN=CREATE, EXIST=OLDFILE,
      374      214                ORG=KEYED, ACS=DIRECT, CTG=YES);
      375      288    1   DCL PACKS(0:9) UBIN SYMREF;
      376      289        %INCLUDE DA_MONSYM_C;
      377      340    1   DCL FR$HD$ PTR SYMREF;
      378      341    1   DCL N$DCT$$ PTR SYMREF;
      379      342    1   DCL MAKEIT9 CONSTANT UBIN INIT(9);
      380      343        %INCLUDE N_FC_C;
      381      380        %INCLUDE F$JIT_C;
      382      497    1   DCL B$JIT$ PTR SYMREF;
      383      498    1   FMD$GETBUF: ENTRY (P1,P2,P3) ALTRET;
      384      499        /* P1=BUFNO, P2=PAGES, P3=PTR */
      385      500    2      IF MYDCB.BFR.BUFX(P1)=0 THEN DO;
      386      501    2         MYDCB.BFR.BUFX(P1)=HEAD_BUF;
      387      502    2         HEAD_BUF=FM$BUF$(HEAD_BUF)->NEXT_BUF;
      388      503    2         END;
      389      504    1      IF ADDR(P3)~=ADDR(NIL)
      390      505    1      THEN P3$=FM$BUF$(MYDCB.BFR.BUFX(P1));
      391      506    1      RETURN;
      392      507        /**/
      393      508    1   FMD$RELBUF: ENTRY (P1) ALTRET;
      394      509        /* P1=BUFNO */
      395      510    2      IF MYDCB.BFR.BUFX(P1)~=0 THEN DO;
      396      511    2         FM$BUF$(MYDCB.BFR.BUFX(P1))->NEXT_BUF=HEAD_BUF;
      397      512    2         HEAD_BUF=MYDCB.BFR.BUFX(P1);
      398      513    2         MYDCB.BFR.BUFX(P1)=0;
      399      514    2         END;
      400      515    1      RETURN;
      401      516        /**/
      402      517    1   FMD$REDBUF: ENTRY(P1,P2,P3,P4,P5,P6) ALTRET; ALTRETURN;
      403      518    1   FMD$FLSHBUF: ENTRY(P1) ALTRET; RETURN;
      404      519    1   FMC$RELSET: ENTRY(P1) ALTRET; RETURN;
      405      520    1   ELA$SYSLOG: ENTRY(P1,P2,P3,P4,P5,P6) ALTRET; RETURN;
      406      521    1   SSS$SYSTIME: ENTRY(P1) ALTRET; RETURN;
      407      522    1   SSS$BLOCK: ENTRY ALTRET; RETURN;
      408      523    1   SSS$BLOCKM: ENTRY ALTRET; RETURN;
PL6.E3A0      #003=FXD$SBR File=FXD$DEBUG.:E05TSI                                TUE 07/29/97 18:05 Page:86   
      409      524    1   SSC$OVRLY: ENTRY ALTRET; RETURN;
      410      525    1   FMI$INIT: ENTRY ALTRET; RETURN;
      411      526    1   FAG$CGRANS: ENTRY ALTRET; RETURN;
      412      527    1   MMH$GDS: ENTRY(P1,P2,P3,P4,P5) ALTRET; RETURN;
      413      528    1   DAM$MAP: ENTRY(P1,P2,P3,P4,P5) ALTRET; P2=P1; RETURN;
      414      529    1   DAS$SDMONPTR: ENTRY(P1,P2) ALTRET;
      415      530    1      IF P1=%M#N$DCT$$ THEN P2$=ADDR(N$DCT$$);
      416      531    1      ELSE IF P1=%M#FR$HD$ THEN P2$=ADDR(FR$HD$);
      417      532    1      ELSE P2$=ADDR(MAKEIT9);
      418      533    1      RETURN;
      419      534    1   KUW$WRITE: ENTRY(P1,P2,P3) ALTRET; RETURN;
      420      535    1   FMO$LOCCODP: ENTRY(P1,P2) ALTRET;
      421      536    1      CALL XSF$LOCCODP(P1,P2) WHENALTRETURN DO; ALTRETURN; END; RETURN;
      422      537    1   FMO$LOCCODE: ENTRY(P1,P2) ALTRET;
      423      538    1      CALL XSF$LOCCODE(P1,P2) WHENALTRETURN DO; ALTRETURN; END; RETURN;
      424      539    1   FMO$LOCCODT: ENTRY(P1,P2) ALTRET;
      425      540    1      CALL XSF$LOCCODT(P1,P2) WHENALTRETURN DO; ALTRETURN; END; RETURN;
      426      541    1   FMB$QUEUE: ENTRY(P1,P2,P3,P4,P5,P6,P7,P8,P9) ALTRET;
      427      542        /* P1=BUF$, P4=GRAN, P5=N_RDBIN or N_WRBIN */
      428      543    1      GRAN=P4;
      429      544    1      IF GRAN<FM_SRZERO THEN GRAN=GRAN+FM_SRZERO;
      430      545    2      CALL FAF$SRTODR (GRAN,MYDCB.SETX) WHENRETURN DO;
      431      546    2         KEY.VOL=PACKS(DDA.DCTX);
      432      547    2         KEY.GRAN=DDA.GRAN;
      433      548    2         RWDP.BUF_.BUF$=P1$;
      434      549    2         RWDP.BUF_.BOUND=4095;
      435      550    2         IF KEY.VOL>0
      436      551    3         THEN IF P5=%N_WRBIN THEN CALL M$WRITE(RWDP) WHENRETURN DO;RETURN;END;
      437      552    3         ELSE CALL M$READ(RWDP) WHENRETURN DO;RETURN;END;
      438      553    3         WHENALTRETURN DO;RETURN;END;
      439      554    2         END;
      440      555    1      B$JIT.ERR='061502000104'O;
      441      556    1      ALTRETURN;
      442      557    1   END;
      443      558        /* half a comment again, for IBEX commands PAKTST_END_COMMENT
      444      559        !EOD
      445      560        !T OUTPUTDISCARD " From here on out we gets lots of errors to ignore.
PL6.E3A0      #003=FXD$SBR File=FXD$DEBUG.:E05TSI                                TUE 07/29/97 18:05 Page:87   
      446      561        !C *DO INTO OUFID(LN(99900))
      447      562        !C FMP$CLSF.:E02OU('"FMP$ULIST','#'-) INTO OUFID
      448      563        !LINK: T OUTPUTDISCARD
      449      564        !R M$DO
      450      565        !DEL *DO
      451      566        !SET M$LO LOFID,EXIST=OLDFILE
      452      567        !LINK OUFID,;
      453      568           FXF$FIX,;
      454      569           FXH$RECON,;
      455      570           FXU$UTIL,;
      456      571           XSF$LOCCODE,;
      457      572           FXN$PNODES,;
      458      573           FX_DATA_D,;
      459      574           FAF$FRDA,;
      460      575           FMN$OPNDP,;
      461      576           FMR$CFUS,;
      462      577           FMS$SCFU,;
      463      578           FRA$OPR,;
      464      579           FRX$OPR,;
      465      580           FRC$AVR,;
      466      581           FRZ$COMSUB,;
      467      582           DAD$CFUS,;
      468      583           DAD$DCT,;
      469      584           DAF$FORMAT,;
      470      585           DA_FORMAT_D,;
      471      586           NI_DVTS_D,;
      472      587           FM_DATA_D,;
      473      588           B_CNTRL_D,;
      474      589           FR_DATA_D,;
      475      590           FXP$PIG,;
      476      591           IGG$GET;
      477      592         OVER PAKTST(SR(.DVA,.,.SRA))
      478      593        !R M$LO
      479      594        !RUM PAKTST
      480      595        M FMS$GARBCOL+.6 $L-.1000000
      481      596        END
      482      597        !CANCEL %$SYSID
PL6.E3A0      #003=FXD$SBR File=FXD$DEBUG.:E05TSI                                TUE 07/29/97 18:05 Page:88   
      483      598        " and the end of the comment */

PL6.E3A0      #003=FXD$SBR File=FXD$DEBUG.:E05TSI                                TUE 07/29/97 18:05 Page:89   
--  Include file information  --

   F$JIT_C.:E05TOU  cannot be made into a system file and is referenced.
   N_FC_C.:E05TOU  is referenced.
   DA_MONSYM_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure FXD$SBR.

   Procedure FXD$SBR requires 197 words for executable code.
   Procedure FXD$SBR requires 16 words of local(AUTO) storage.

    No errors detected in file FXD$DEBUG.:E05TSI    .

PL6.E3A0      #003=FXD$SBR File=FXD$DEBUG.:E05TSI                                TUE 07/29/97 18:05 Page:90   

 Object Unit name= FXD$SBR                                    File name= FXD$DEBUG.:E05TOU
 UTS= JUL 29 '97 18:05:30.76 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1   Data  even  none    16     20  FXD$SBR
    2   DCB   even  none    98    142  M$PACKS
    3  RoData even  UTS      2      2  FXD$SBR
    4   Proc  even  none   197    305  FXD$SBR
    5  RoData even  none     7      7  FXD$SBR

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     4      0   yes    yes     yes      Std        9  FXD$SBR
     4      3          yes     yes      Std        3  FMD$GETBUF
     4     36          yes     yes      Std        1  FMD$RELBUF
     4     64          yes     yes      Std        6  FMD$REDBUF
     4     67          yes     yes      Std        1  FMD$FLSHBUF
     4     72          yes     yes      Std        1  FMC$RELSET
     4     75          yes     yes      Std        6  ELA$SYSLOG
     4    100          yes     yes      Std        1  SSS$SYSTIME
     4    103          yes     yes      Std        0  SSS$BLOCK
     4    106          yes     yes      Std        0  SSS$BLOCKM
     4    111          yes     yes      Std        0  SSC$OVRLY
     4    114          yes     yes      Std        0  FMI$INIT
     4    117          yes     yes      Std        0  FAG$CGRANS
     4    122          yes     yes      Std        5  MMH$GDS
     4    125          yes     yes      Std        5  DAM$MAP
     4    134          yes     yes      Std        2  DAS$SDMONPTR
     4    160          yes     yes      Std        3  KUW$WRITE
PL6.E3A0      #003=FXD$SBR File=FXD$DEBUG.:E05TSI                                TUE 07/29/97 18:05 Page:91   
     4    163          yes     yes      Std        2  FMO$LOCCODP
     4    174          yes     yes      Std        2  FMO$LOCCODE
     4    205          yes     yes      Std        2  FMO$LOCCODT
     4    216          yes     yes      Std        9  FMB$QUEUE

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       2 XSF$LOCCODP
 yes     yes           Std       2 XSF$LOCCODE
 yes     yes           Std       2 XSF$LOCCODT
 yes     yes           Std       2 FAF$SRTODR
                       nStd      0 X66_AUTO_N
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET
                       nStd      0 X66_AALT

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                                  MYDCB                                 FM$BUF$
     HEAD_BUF                         r    FM_SRZERO                             M$PACKS
     PACKS                                 FR$HD$                                N$DCT$$
     B$JIT$                                B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID                                 NULLSID
PL6.E3A0      #003=FXD$SBR File=FXD$DEBUG.:E05TSI                                TUE 07/29/97 18:05 Page:92   


      335        1        /*T***********************************************************/
      336        2        /*T*                                                         */
      337        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      338        4        /*T*                                                         */
      339        5        /*T***********************************************************/
      340        6        FXD$SBR: PROC(P1,P2,P3,P4,P5,P6,P7,P8,P9) ALTRET;

      6  4 000000   000000 700200 xent  FXD$SBR      TSX0  ! X66_AUTO_N
         4 000001   000020 000011                    ZERO    16,9
         4 000002   000005 710000 4                  TRA     s:500

      341        7        /* EXTERNAL ENTRIES THAT NEED SIMULATION */
      342        8    1   DCL P1 UBIN;
      343        9    1   DCL P1$ REDEF P1 PTR;
      344       10    1   DCL P2 UBIN;
      345       11    1   DCL P2$ REDEF P2 PTR;
      346       12    1   DCL P3 UBIN;
      347       13    1   DCL P3$ REDEF P3 PTR;
      348       14    1   DCL P4 UBIN;
      349       15    1   DCL P5 UBIN;
      350       16    1   DCL P6 UBIN;
      351       17    1   DCL P7 UBIN;
      352       18    1   DCL P8 UBIN;
      353       19    1   DCL P9 UBIN;
      354       20        %INCLUDE CP_6;
      355      101        %F$DCB (DCBN=MYDCB, STCLASS=SYMREF);
      356      158    1   DCL FM$BUF$(0:0) PTR SYMREF;
      357      159    1   DCL HEAD_BUF UBIN SYMREF;
      358      160    1   DCL NEXT_BUF UBIN BASED ALIGNED;
      359      161    1   DCL GRAN UBIN;
      360      162    1   DCL 1 DDA REDEF GRAN,
      361      163    1         2 DCTX UBIN(15) UNAL,
      362      164    1         2 GRAN UBIN(21) UNAL;
      363      165    1   DCL FM_SRZERO UBIN SYMREF READONLY;
      364      166    1   DCL FAF$SRTODR ENTRY(2) ALTRET;
      365      167    1   DCL XSF$LOCCODE ENTRY(2) ALTRET;
PL6.E3A0      #003=FXD$SBR File=FXD$DEBUG.:E05TSI                                TUE 07/29/97 18:05 Page:93   
      366      168    1   DCL XSF$LOCCODP ENTRY(2) ALTRET;
      367      169    1   DCL XSF$LOCCODT ENTRY(2) ALTRET;
      368      170    1   DCL 1 KEY STATIC,
      369      171    1         2 L UBIN BYTE CALIGNED INIT(7),
      370      172    1         2 VOL UBIN(27) CALIGNED,
      371      173    1         2 GRAN UBIN;
      372      174        %FPT_READ (FPTN=RWDP, DCB=M$PACKS, KEYS=YES, INDX=256, KEY=KEY);
      373      213        %M$DCB (DCBN=M$PACKS, ASN=FILE, NAME=':PACKS', FUN=CREATE, EXIST=OLDFILE,
      374      214                ORG=KEYED, ACS=DIRECT, CTG=YES);
      375      288    1   DCL PACKS(0:9) UBIN SYMREF;
      376      289        %INCLUDE DA_MONSYM_C;
      377      340    1   DCL FR$HD$ PTR SYMREF;
      378      341    1   DCL N$DCT$$ PTR SYMREF;
      379      342    1   DCL MAKEIT9 CONSTANT UBIN INIT(9);
      380      343        %INCLUDE N_FC_C;
      381      380        %INCLUDE F$JIT_C;
      382      497    1   DCL B$JIT$ PTR SYMREF;
      383      498    1   FMD$GETBUF: ENTRY (P1,P2,P3) ALTRET;

    498  4 000003   000000 700200 xent  FMD$GETBUF   TSX0  ! X66_AUTO_N
         4 000004   000020 000011                    ZERO    16,9

      384      499        /* P1=BUFNO, P2=PAGES, P3=PTR */
      385      500    2      IF MYDCB.BFR.BUFX(P1)=0 THEN DO;

    500  4 000005   200003 470500                    LDP0    @P1,,AUTO
         4 000006   000000 720100                    LXL0    0,,PR0
         4 000007   000115 236010 xsym               LDQ     MYDCB+77,X0
         4 000010   037000 316003                    CANQ    15872,DU
         4 000011   000023 601000 4                  TNZ     s:504

      386      501    2         MYDCB.BFR.BUFX(P1)=HEAD_BUF;

    501  4 000012   000000 236000 xsym               LDQ     HEAD_BUF
         4 000013   000033 736000                    QLS     27
         4 000014   000115 676010 xsym               ERQ     MYDCB+77,X0
         4 000015   037000 376003                    ANQ     15872,DU
PL6.E3A0      #003=FXD$SBR File=FXD$DEBUG.:E05TSI                                TUE 07/29/97 18:05 Page:94   
         4 000016   000115 656010 xsym               ERSQ    MYDCB+77,X0

      387      502    2         HEAD_BUF=FM$BUF$(HEAD_BUF)->NEXT_BUF;

    502  4 000017   000000 720000 xsym               LXL0    HEAD_BUF
         4 000020   000000 471410 xsym               LDP1    FM$BUF$,X0
         4 000021   100000 235100                    LDA     0,,PR1
         4 000022   000000 755000 xsym               STA     HEAD_BUF

      388      503    2         END;

      389      504    1      IF ADDR(P3)~=ADDR(NIL)

    504  4 000023   200005 236100                    LDQ     @P3,,AUTO
         4 000024   000001 116000 xsym               CMPQ    B_VECTNIL+1
         4 000025   000035 600000 4                  TZE     s:506

      390      505    1      THEN P3$=FM$BUF$(MYDCB.BFR.BUFX(P1));

    505  4 000026   000000 720100                    LXL0    0,,PR0
         4 000027   000115 236010 xsym               LDQ     MYDCB+77,X0
         4 000030   000033 772000                    QRL     27
         4 000031   000037 376007                    ANQ     31,DL
         4 000032   000000 236006 xsym               LDQ     FM$BUF$,QL
         4 000033   200005 471500                    LDP1    @P3,,AUTO
         4 000034   100000 756100                    STQ     0,,PR1

      391      506    1      RETURN;

    506  4 000035   000000 702200 xent               TSX2  ! X66_ARET

      392      507        /**/
      393      508    1   FMD$RELBUF: ENTRY (P1) ALTRET;

    508  4 000036   000000 700200 xent  FMD$RELBUF   TSX0  ! X66_AUTO_N
         4 000037   000020 000011                    ZERO    16,9

PL6.E3A0      #003=FXD$SBR File=FXD$DEBUG.:E05TSI                                TUE 07/29/97 18:05 Page:95   
      394      509        /* P1=BUFNO */
      395      510    2      IF MYDCB.BFR.BUFX(P1)~=0 THEN DO;

    510  4 000040   200003 470500                    LDP0    @P1,,AUTO
         4 000041   000000 720100                    LXL0    0,,PR0
         4 000042   000115 236010 xsym               LDQ     MYDCB+77,X0
         4 000043   037000 316003                    CANQ    15872,DU
         4 000044   000063 600000 4                  TZE     s:515

      396      511    2         FM$BUF$(MYDCB.BFR.BUFX(P1))->NEXT_BUF=HEAD_BUF;

    511  4 000045   000115 236010 xsym               LDQ     MYDCB+77,X0
         4 000046   000033 772000                    QRL     27
         4 000047   000037 376007                    ANQ     31,DL
         4 000050   000000 471406 xsym               LDP1    FM$BUF$,QL
         4 000051   000000 235000 xsym               LDA     HEAD_BUF
         4 000052   100000 755100                    STA     0,,PR1

      397      512    2         HEAD_BUF=MYDCB.BFR.BUFX(P1);

    512  4 000053   000000 720100                    LXL0    0,,PR0
         4 000054   000115 236010 xsym               LDQ     MYDCB+77,X0
         4 000055   000033 772000                    QRL     27
         4 000056   000037 376007                    ANQ     31,DL
         4 000057   000000 756000 xsym               STQ     HEAD_BUF

      398      513    2         MYDCB.BFR.BUFX(P1)=0;

    513  4 000060   000000 720100                    LXL0    0,,PR0
         4 000061   000000 236000 5                  LDQ     0
         4 000062   000115 356010 xsym               ANSQ    MYDCB+77,X0

      399      514    2         END;

      400      515    1      RETURN;

    515  4 000063   000000 702200 xent               TSX2  ! X66_ARET
PL6.E3A0      #003=FXD$SBR File=FXD$DEBUG.:E05TSI                                TUE 07/29/97 18:05 Page:96   

      401      516        /**/
      402      517    1   FMD$REDBUF: ENTRY(P1,P2,P3,P4,P5,P6) ALTRET; ALTRETURN;

    517  4 000064   000000 700200 xent  FMD$REDBUF   TSX0  ! X66_AUTO_N
         4 000065   000020 000011                    ZERO    16,9

    517  4 000066   000000 702200 xent               TSX2  ! X66_AALT

      403      518    1   FMD$FLSHBUF: ENTRY(P1) ALTRET; RETURN;

    518  4 000067   000000 700200 xent  FMD$FLSHBUF  TSX0  ! X66_AUTO_N
         4 000070   000020 000011                    ZERO    16,9

    518  4 000071   000000 702200 xent               TSX2  ! X66_ARET

      404      519    1   FMC$RELSET: ENTRY(P1) ALTRET; RETURN;

    519  4 000072   000000 700200 xent  FMC$RELSET   TSX0  ! X66_AUTO_N
         4 000073   000020 000011                    ZERO    16,9

    519  4 000074   000000 702200 xent               TSX2  ! X66_ARET

      405      520    1   ELA$SYSLOG: ENTRY(P1,P2,P3,P4,P5,P6) ALTRET; RETURN;

    520  4 000075   000000 700200 xent  ELA$SYSLOG   TSX0  ! X66_AUTO_N
         4 000076   000020 000011                    ZERO    16,9

    520  4 000077   000000 702200 xent               TSX2  ! X66_ARET

      406      521    1   SSS$SYSTIME: ENTRY(P1) ALTRET; RETURN;

    521  4 000100   000000 700200 xent  SSS$SYSTIME  TSX0  ! X66_AUTO_N
         4 000101   000020 000011                    ZERO    16,9

    521  4 000102   000000 702200 xent               TSX2  ! X66_ARET

PL6.E3A0      #003=FXD$SBR File=FXD$DEBUG.:E05TSI                                TUE 07/29/97 18:05 Page:97   
      407      522    1   SSS$BLOCK: ENTRY ALTRET; RETURN;

    522  4 000103   000000 700200 xent  SSS$BLOCK    TSX0  ! X66_AUTO_N
         4 000104   000020 000011                    ZERO    16,9

    522  4 000105   000000 702200 xent               TSX2  ! X66_ARET

      408      523    1   SSS$BLOCKM: ENTRY ALTRET; RETURN;

    523  4 000106   000000 700200 xent  SSS$BLOCKM   TSX0  ! X66_AUTO_N
         4 000107   000020 000011                    ZERO    16,9

    523  4 000110   000000 702200 xent               TSX2  ! X66_ARET

      409      524    1   SSC$OVRLY: ENTRY ALTRET; RETURN;

    524  4 000111   000000 700200 xent  SSC$OVRLY    TSX0  ! X66_AUTO_N
         4 000112   000020 000011                    ZERO    16,9

    524  4 000113   000000 702200 xent               TSX2  ! X66_ARET

      410      525    1   FMI$INIT: ENTRY ALTRET; RETURN;

    525  4 000114   000000 700200 xent  FMI$INIT     TSX0  ! X66_AUTO_N
         4 000115   000020 000011                    ZERO    16,9

    525  4 000116   000000 702200 xent               TSX2  ! X66_ARET

      411      526    1   FAG$CGRANS: ENTRY ALTRET; RETURN;

    526  4 000117   000000 700200 xent  FAG$CGRANS   TSX0  ! X66_AUTO_N
         4 000120   000020 000011                    ZERO    16,9

    526  4 000121   000000 702200 xent               TSX2  ! X66_ARET

      412      527    1   MMH$GDS: ENTRY(P1,P2,P3,P4,P5) ALTRET; RETURN;

PL6.E3A0      #003=FXD$SBR File=FXD$DEBUG.:E05TSI                                TUE 07/29/97 18:05 Page:98   
    527  4 000122   000000 700200 xent  MMH$GDS      TSX0  ! X66_AUTO_N
         4 000123   000020 000011                    ZERO    16,9

    527  4 000124   000000 702200 xent               TSX2  ! X66_ARET

      413      528    1   DAM$MAP: ENTRY(P1,P2,P3,P4,P5) ALTRET; P2=P1; RETURN;

    528  4 000125   000000 700200 xent  DAM$MAP      TSX0  ! X66_AUTO_N
         4 000126   000020 000011                    ZERO    16,9

    528  4 000127   200003 470500                    LDP0    @P1,,AUTO
         4 000130   200004 471500                    LDP1    @P2,,AUTO
         4 000131   000000 235100                    LDA     0,,PR0
         4 000132   100000 755100                    STA     0,,PR1

    528  4 000133   000000 702200 xent               TSX2  ! X66_ARET

      414      529    1   DAS$SDMONPTR: ENTRY(P1,P2) ALTRET;

    529  4 000134   000000 700200 xent  DAS$SDMONPTR TSX0  ! X66_AUTO_N
         4 000135   000020 000011                    ZERO    16,9

      415      530    1      IF P1=%M#N$DCT$$ THEN P2$=ADDR(N$DCT$$);

    530  4 000136   200003 470500                    LDP0    @P1,,AUTO
         4 000137   000000 235100                    LDA     0,,PR0
         4 000140   000023 115007                    CMPA    19,DL
         4 000141   000146 601000 4                  TNZ     s:531

    530  4 000142   000001 236000 5                  LDQ     1
         4 000143   200004 471500                    LDP1    @P2,,AUTO
         4 000144   100000 756100                    STQ     0,,PR1
         4 000145   000157 710000 4                  TRA     s:533

      416      531    1      ELSE IF P1=%M#FR$HD$ THEN P2$=ADDR(FR$HD$);

    531  4 000146   000030 115007                    CMPA    24,DL
PL6.E3A0      #003=FXD$SBR File=FXD$DEBUG.:E05TSI                                TUE 07/29/97 18:05 Page:99   
         4 000147   000154 601000 4                  TNZ     s:532

    531  4 000150   000002 236000 5                  LDQ     2
         4 000151   200004 471500                    LDP1    @P2,,AUTO
         4 000152   100000 756100                    STQ     0,,PR1
         4 000153   000157 710000 4                  TRA     s:533

      417      532    1      ELSE P2$=ADDR(MAKEIT9);

    532  4 000154   000003 236000 5                  LDQ     3
         4 000155   200004 471500                    LDP1    @P2,,AUTO
         4 000156   100000 756100                    STQ     0,,PR1

      418      533    1      RETURN;

    533  4 000157   000000 702200 xent               TSX2  ! X66_ARET

      419      534    1   KUW$WRITE: ENTRY(P1,P2,P3) ALTRET; RETURN;

    534  4 000160   000000 700200 xent  KUW$WRITE    TSX0  ! X66_AUTO_N
         4 000161   000020 000011                    ZERO    16,9

    534  4 000162   000000 702200 xent               TSX2  ! X66_ARET

      420      535    1   FMO$LOCCODP: ENTRY(P1,P2) ALTRET;

    535  4 000163   000000 700200 xent  FMO$LOCCODP  TSX0  ! X66_AUTO_N
         4 000164   000020 000011                    ZERO    16,9

      421      536    1      CALL XSF$LOCCODP(P1,P2) WHENALTRETURN DO; ALTRETURN; END; RETURN;

    536  4 000165   200003 630500                    EPPR0   @P1,,AUTO
         4 000166   000020 631400 xsym               EPPR1   B_VECTNIL+16
         4 000167   000000 701000 xent               TSX1    XSF$LOCCODP
         4 000170   000172 702000 4                  TSX2    s:536+5
         4 000171   000173 710000 4                  TRA     s:536+6

PL6.E3A0      #003=FXD$SBR File=FXD$DEBUG.:E05TSI                                TUE 07/29/97 18:05 Page:100  
    536  4 000172   000000 702200 xent               TSX2  ! X66_AALT

    536  4 000173   000000 702200 xent               TSX2  ! X66_ARET

      422      537    1   FMO$LOCCODE: ENTRY(P1,P2) ALTRET;

    537  4 000174   000000 700200 xent  FMO$LOCCODE  TSX0  ! X66_AUTO_N
         4 000175   000020 000011                    ZERO    16,9

      423      538    1      CALL XSF$LOCCODE(P1,P2) WHENALTRETURN DO; ALTRETURN; END; RETURN;

    538  4 000176   200003 630500                    EPPR0   @P1,,AUTO
         4 000177   000020 631400 xsym               EPPR1   B_VECTNIL+16
         4 000200   000000 701000 xent               TSX1    XSF$LOCCODE
         4 000201   000203 702000 4                  TSX2    s:538+5
         4 000202   000204 710000 4                  TRA     s:538+6

    538  4 000203   000000 702200 xent               TSX2  ! X66_AALT

    538  4 000204   000000 702200 xent               TSX2  ! X66_ARET

      424      539    1   FMO$LOCCODT: ENTRY(P1,P2) ALTRET;

    539  4 000205   000000 700200 xent  FMO$LOCCODT  TSX0  ! X66_AUTO_N
         4 000206   000020 000011                    ZERO    16,9

      425      540    1      CALL XSF$LOCCODT(P1,P2) WHENALTRETURN DO; ALTRETURN; END; RETURN;

    540  4 000207   200003 630500                    EPPR0   @P1,,AUTO
         4 000210   000020 631400 xsym               EPPR1   B_VECTNIL+16
         4 000211   000000 701000 xent               TSX1    XSF$LOCCODT
         4 000212   000214 702000 4                  TSX2    s:540+5
         4 000213   000215 710000 4                  TRA     s:540+6

    540  4 000214   000000 702200 xent               TSX2  ! X66_AALT

    540  4 000215   000000 702200 xent               TSX2  ! X66_ARET
PL6.E3A0      #003=FXD$SBR File=FXD$DEBUG.:E05TSI                                TUE 07/29/97 18:05 Page:101  

      426      541    1   FMB$QUEUE: ENTRY(P1,P2,P3,P4,P5,P6,P7,P8,P9) ALTRET;

    541  4 000216   000000 700200 xent  FMB$QUEUE    TSX0  ! X66_AUTO_N
         4 000217   000020 000011                    ZERO    16,9

      427      542        /* P1=BUF$, P4=GRAN, P5=N_RDBIN or N_WRBIN */
      428      543    1      GRAN=P4;

    543  4 000220   200006 470500                    LDP0    @P4,,AUTO
         4 000221   000000 235100                    LDA     0,,PR0
         4 000222   200014 755100                    STA     GRAN,,AUTO

      429      544    1      IF GRAN<FM_SRZERO THEN GRAN=GRAN+FM_SRZERO;

    544  4 000223   200014 236100                    LDQ     GRAN,,AUTO
         4 000224   000000 116000 xsym               CMPQ    FM_SRZERO
         4 000225   000230 603000 4                  TRC     s:545

    544  4 000226   000000 036000 xsym               ADLQ    FM_SRZERO
         4 000227   200014 756100                    STQ     GRAN,,AUTO

      430      545    2      CALL FAF$SRTODR (GRAN,MYDCB.SETX) WHENRETURN DO;

    545  4 000230   000004 236000 5                  LDQ     4
         4 000231   200017 756100                    STQ     GRAN+3,,AUTO
         4 000232   200014 631500                    EPPR1   GRAN,,AUTO
         4 000233   200016 451500                    STP1    GRAN+2,,AUTO
         4 000234   200016 630500                    EPPR0   GRAN+2,,AUTO
         4 000235   000020 631400 xsym               EPPR1   B_VECTNIL+16
         4 000236   000000 701000 xent               TSX1    FAF$SRTODR
         4 000237   000301 702000 4                  TSX2    s:555

      431      546    2         KEY.VOL=PACKS(DDA.DCTX);

    546  4 000240   200014 236100                    LDQ     GRAN,,AUTO
         4 000241   000025 772000                    QRL     21
PL6.E3A0      #003=FXD$SBR File=FXD$DEBUG.:E05TSI                                TUE 07/29/97 18:05 Page:102  
         4 000242   000000 236006 xsym               LDQ     PACKS,QL
         4 000243   000000 552034 1                  STBQ    KEY,'34'O

      432      547    2         KEY.GRAN=DDA.GRAN;

    547  4 000244   200014 236100                    LDQ     GRAN,,AUTO
         4 000245   000005 376000 5                  ANQ     5
         4 000246   000001 756000 1                  STQ     KEY+1

      433      548    2         RWDP.BUF_.BUF$=P1$;

    548  4 000247   200003 470500                    LDP0    @P1,,AUTO
         4 000250   000000 236100                    LDQ     0,,PR0
         4 000251   000007 756000 1                  STQ     RWDP+5

      434      549    2         RWDP.BUF_.BOUND=4095;

    549  4 000252   000006 236000 1                  LDQ     RWDP+4
         4 000253   177777 376007                    ANQ     65535,DL
         4 000254   000006 276000 5                  ORQ     6
         4 000255   000006 756000 1                  STQ     RWDP+4

      435      550    2         IF KEY.VOL>0

    550  4 000256   000000 236000 1                  LDQ     KEY
         4 000257   000032 316000 xsym               CANQ    B_VECTNIL+26
         4 000260   000301 600000 4                  TZE     s:555

      436      551    3         THEN IF P5=%N_WRBIN THEN CALL M$WRITE(RWDP) WHENRETURN DO;RETURN;END;

    551  4 000261   200007 471500                    LDP1    @P5,,AUTO
         4 000262   100000 235100                    LDA     0,,PR1
         4 000263   000003 115007                    CMPA    3,DL
         4 000264   000273 601000 4                  TNZ     s:552

    551  4 000265   000002 630400 1                  EPPR0   RWDP
         4 000266   440001 713400                    CLIMB   alt,write
PL6.E3A0      #003=FXD$SBR File=FXD$DEBUG.:E05TSI                                TUE 07/29/97 18:05 Page:103  
         4 000267   401400 401760                    pmme    nvectors=4
         4 000270   000272 702000 4                  TSX2    s:551+9

    551  4 000271   000000 702200 xent               TSX2  ! X66_ARET
         4 000272   000301 710000 4                  TRA     s:555

      437      552    3         ELSE CALL M$READ(RWDP) WHENRETURN DO;RETURN;END;

    552  4 000273   000002 630400 1                  EPPR0   RWDP
         4 000274   440000 713400                    CLIMB   alt,read
         4 000275   401400 401760                    pmme    nvectors=4
         4 000276   000300 702000 4                  TSX2    s:553

    552  4 000277   000000 702200 xent               TSX2  ! X66_ARET

      438      553    3         WHENALTRETURN DO;RETURN;END;

    553  4 000300   000000 702200 xent               TSX2  ! X66_ARET

      439      554    2         END;
      440      555    1      B$JIT.ERR='061502000104'O;

    555  4 000301   000001 236000 3                  LDQ     MAKEIT9+1
         4 000302   000000 470400 xsym               LDP0    B$JIT$
         4 000303   000012 756100                    STQ     10,,PR0

      441      556    1      ALTRETURN;

    556  4 000304   000000 702200 xent               TSX2  ! X66_AALT
      442      557    1   END;
      443      558        /* half a comment again, for IBEX commands PAKTST_END_COMMENT
      444      559        !EOD
      445      560        !T OUTPUTDISCARD " From here on out we gets lots of errors to ignore.
      446      561        !C *DO INTO OUFID(LN(99900))
      447      562        !C FMP$CLSF.:E02OU('"FMP$ULIST','#'-) INTO OUFID
      448      563        !LINK: T OUTPUTDISCARD
      449      564        !R M$DO
PL6.E3A0      #003=FXD$SBR File=FXD$DEBUG.:E05TSI                                TUE 07/29/97 18:05 Page:104  
      450      565        !DEL *DO
      451      566        !SET M$LO LOFID,EXIST=OLDFILE
      452      567        !LINK OUFID,;
      453      568           FXF$FIX,;
      454      569           FXH$RECON,;
      455      570           FXU$UTIL,;
      456      571           XSF$LOCCODE,;
      457      572           FXN$PNODES,;
      458      573           FX_DATA_D,;
      459      574           FAF$FRDA,;
      460      575           FMN$OPNDP,;
      461      576           FMR$CFUS,;
      462      577           FMS$SCFU,;
      463      578           FRA$OPR,;
      464      579           FRX$OPR,;
      465      580           FRC$AVR,;
      466      581           FRZ$COMSUB,;
      467      582           DAD$CFUS,;
      468      583           DAD$DCT,;
      469      584           DAF$FORMAT,;
      470      585           DA_FORMAT_D,;
      471      586           NI_DVTS_D,;
      472      587           FM_DATA_D,;
      473      588           B_CNTRL_D,;
      474      589           FR_DATA_D,;
      475      590           FXP$PIG,;
      476      591           IGG$GET;
      477      592         OVER PAKTST(SR(.DVA,.,.SRA))
      478      593        !R M$LO
      479      594        !RUM PAKTST
      480      595        M FMS$GARBCOL+.6 $L-.1000000
      481      596        END
      482      597        !CANCEL %$SYSID
      483      598        " and the end of the comment */

PL6.E3A0      #003=FXD$SBR File=FXD$DEBUG.:E05TSI                                TUE 07/29/97 18:05 Page:105  
--  Include file information  --

   F$JIT_C.:E05TOU  cannot be made into a system file and is referenced.
   N_FC_C.:E05TOU  is referenced.
   DA_MONSYM_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure FXD$SBR.
PL6.E3A0      #003=FXD$SBR File=FXD$DEBUG.:E05TSI                                TUE 07/29/97 18:05 Page:106  

 **** Variables and constants ****

  ****  Section 001  Data  FXD$SBR

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(72)    r     1 KEY                        2-0-0/d STRC(504)   r     1 RWDP

  ****  Section 003 RoData FXD$SBR

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w UBIN        r     1 MAKEIT9

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @P1                        4-0-0/w PTR         r     1 @P2
     5-0-0/w PTR         r     1 @P3                        6-0-0/w PTR         r     1 @P4
     7-0-0/w PTR         r     1 @P5                       10-0-0/w PTR         r     1 @P6
    11-0-0/w PTR         r     1 @P7                       12-0-0/w PTR         r     1 @P8
    13-0-0/w PTR         r     1 @P9                       14-0-0/w STRC        r     1 DDA
    14-0-0/w UBIN        r     1 GRAN                      *0-0-0/w UBIN        r     1 P1
    *0-0-0/w PTR         r     1 P1$                       *0-0-0/w UBIN        r     1 P2
    *0-0-0/w PTR         r     1 P2$                       *0-0-0/w UBIN        r     1 P3
    *0-0-0/w PTR         r     1 P3$                       *0-0-0/w UBIN        r     1 P4
    *0-0-0/w UBIN        r     1 P5                        *0-0-0/w UBIN        r     1 P6
    *0-0-0/w UBIN        r     1 P7                        *0-0-0/w UBIN        r     1 P8
    *0-0-0/w UBIN        r     1 P9

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
PL6.E3A0      #003=FXD$SBR File=FXD$DEBUG.:E05TSI                                TUE 07/29/97 18:05 Page:107  
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 B$JIT$
     0-0-0/w PTR         r     1 FM$BUF$(0:0)
     0-0-0/w UBIN        r     1 FM_SRZERO                  0-0-0/w PTR         r     1 FR$HD$
     0-0-0/w UBIN        r     1 HEAD_BUF                   0-0-0/d ASTR(3528)  r     1 MYDCB
     0-0-0/w PTR         r     1 N$DCT$$                    0-0-0/w UBIN        r     1 PACKS(0:9)

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d STRC(8856)  r     1 B$JIT                      0-0-0/d ASTR(3528)  r     1 M$PACKS
     0-0-0/w UBIN        r     1 NEXT_BUF


   Procedure FXD$SBR requires 197 words for executable code.
   Procedure FXD$SBR requires 16 words of local(AUTO) storage.

    No errors detected in file FXD$DEBUG.:E05TSI    .
PL6.E3A0      #003=FXD$SBR File=FXD$DEBUG.:E05TSI                                TUE 07/29/97 18:05 Page:108  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #003=FXD$SBR File=FXD$DEBUG.:E05TSI                                TUE 07/29/97 18:05 Page:109  
          MINI XREF LISTING

B$JIT.ERR
       394**DCL       555<<ASSIGN
B$JIT.ERR.MID
       395**DCL       395--REDEF
B$JIT$
       497**DCL       389--IMP-PTR   555>>ASSIGN
DDA.DCTX
       163**DCL       546>>ASSIGN
DDA.GRAN
       164**DCL       547>>ASSIGN
FAF$SRTODR
       166**DCL-ENT   545--CALL
FM$BUF$
       158**DCL       502>>ASSIGN    505>>ASSIGN    511>>ASSIGN
FM_SRZERO
       165**DCL       544>>IF        544>>ASSIGN
FR$HD$
       340**DCL       531--ASSIGN
GRAN
       161**DCL       162--REDEF     543<<ASSIGN    544>>IF        544<<ASSIGN    544>>ASSIGN    545<>CALL
HEAD_BUF
       159**DCL       501>>ASSIGN    502<<ASSIGN    502>>ASSIGN    511>>ASSIGN    512<<ASSIGN
KEY
       170**DCL       191--DCLINIT   192--DCLINIT
KEY.GRAN
       173**DCL       547<<ASSIGN
KEY.VOL
       172**DCL       546<<ASSIGN    550>>IF
M$PACKS.ACTPOS
       256**DCL       256--REDEF
M$PACKS.ARS#
       215**DCL       215--REDEF
PL6.E3A0      #003=FXD$SBR File=FXD$DEBUG.:E05TSI                                TUE 07/29/97 18:05 Page:110  
M$PACKS.ATTR#
       245**DCL       245--REDEF     247--REDEF
M$PACKS.BORROW
       267**DCL       267--REDEF     267--REDEF     267--REDEF
M$PACKS.DCBNAME.L
       286**DCL       286--IMP-SIZ
M$PACKS.EOMCHAR#
       222**DCL       223--REDEF
M$PACKS.FLDID
       259**DCL       260--REDEF
M$PACKS.FORM$
       251**DCL       251--REDEF
M$PACKS.FSECT
       274**DCL       274--REDEF
M$PACKS.FSN#
       241**DCL       241--REDEF     241--REDEF     242--REDEF
M$PACKS.HEADER$
       250**DCL       251--REDEF
M$PACKS.IXTNSIZE#
       247**DCL       248--REDEF
M$PACKS.LASTSTA$
       231**DCL       231--REDEF
M$PACKS.LVL
       268**DCL       268--REDEF
M$PACKS.NAME#.C
       231**DCL       232--REDEF
M$PACKS.NOEOF
       263**DCL       263--REDEF
M$PACKS.NRECS#
       248**DCL       248--REDEF
M$PACKS.NRECX
       275**DCL       275--REDEF
M$PACKS.OHDR
       264**DCL       264--REDEF
M$PACKS.ORG#
       239**DCL       240--REDEF
PL6.E3A0      #003=FXD$SBR File=FXD$DEBUG.:E05TSI                                TUE 07/29/97 18:05 Page:111  
M$PACKS.PRECNO
       272**DCL       272--REDEF
M$PACKS.RCSZ
       280**DCL       280--REDEF
M$PACKS.RES#
       233**DCL       233--REDEF
M$PACKS.SETX
       252**DCL       252--REDEF
M$PACKS.TAB$
       251**DCL       251--REDEF
M$PACKS.TDA
       271**DCL       272--REDEF
M$PACKS.WSN#
       233**DCL       234--REDEF
M$READ
        30**DCL-ENT   552--CALL
M$WRITE
        30**DCL-ENT   551--CALL
MAKEIT9
       342**DCL       532--ASSIGN
MYDCB.ACTPOS
       134**DCL       134--REDEF
MYDCB.ARS#
       108**DCL       108--REDEF
MYDCB.ATTR
       127**DCL       128--REDEF
MYDCB.BFR.BUFX
       154**DCL       500>>IF        501<<ASSIGN    505>>ASSIGN    510>>IF        511>>ASSIGN    512>>ASSIGN
       513<<ASSIGN
MYDCB.BORROW
       142**DCL       142--REDEF     142--REDEF     142--REDEF
MYDCB.DCBNAME.L
       156**DCL       156--IMP-SIZ
MYDCB.EOMCHAR#
       112**DCL       112--REDEF
MYDCB.FLDID
PL6.E3A0      #003=FXD$SBR File=FXD$DEBUG.:E05TSI                                TUE 07/29/97 18:05 Page:112  
       137**DCL       137--REDEF
MYDCB.FORM$
       131**DCL       131--REDEF
MYDCB.FSECT
       147**DCL       147--REDEF
MYDCB.FSN#
       124**DCL       124--REDEF     124--REDEF     125--REDEF
MYDCB.HEADER$
       130**DCL       130--REDEF
MYDCB.IXTNSIZE#
       128**DCL       128--REDEF
MYDCB.LASTSTA$
       117**DCL       117--REDEF
MYDCB.LVL
       143**DCL       143--REDEF
MYDCB.NAME#.C
       118**DCL       118--REDEF
MYDCB.NOEOF
       140**DCL       140--REDEF
MYDCB.NRECS#
       129**DCL       129--REDEF
MYDCB.NRECX
       148**DCL       148--REDEF
MYDCB.OHDR
       140**DCL       140--REDEF
MYDCB.ORG#
       123**DCL       123--REDEF
MYDCB.PRECNO
       146**DCL       146--REDEF
MYDCB.RCSZ
       152**DCL       152--REDEF
MYDCB.RES#
       119**DCL       119--REDEF
MYDCB.SETX
       131**DCL       131--REDEF     545<>CALL
MYDCB.TAB$
PL6.E3A0      #003=FXD$SBR File=FXD$DEBUG.:E05TSI                                TUE 07/29/97 18:05 Page:113  
       131**DCL       131--REDEF
MYDCB.TDA
       145**DCL       146--REDEF
MYDCB.WSN#
       119**DCL       119--REDEF
N$DCT$$
       341**DCL       530--ASSIGN
NEXT_BUF
       160**DCL       502>>ASSIGN    511<<ASSIGN
P1
         8**DCL         6--PROC        9--REDEF     498--ENTRY     500>>IF        501>>ASSIGN    505>>ASSIGN
       508--ENTRY     510>>IF        511>>ASSIGN    512>>ASSIGN    513>>ASSIGN    517--ENTRY     518--ENTRY
       519--ENTRY     520--ENTRY     521--ENTRY     527--ENTRY     528--ENTRY     528>>ASSIGN    529--ENTRY
       530>>IF        531>>IF        534--ENTRY     535--ENTRY     536<>CALL      537--ENTRY     538<>CALL
       539--ENTRY     540<>CALL      541--ENTRY
P1$
         9**DCL       548>>ASSIGN
P2
        10**DCL         6--PROC       11--REDEF     498--ENTRY     517--ENTRY     520--ENTRY     527--ENTRY
       528--ENTRY     528<<ASSIGN    529--ENTRY     534--ENTRY     535--ENTRY     536<>CALL      537--ENTRY
       538<>CALL      539--ENTRY     540<>CALL      541--ENTRY
P2$
        11**DCL       530<<ASSIGN    531<<ASSIGN    532<<ASSIGN
P3
        12**DCL         6--PROC       13--REDEF     498--ENTRY     504--IF        517--ENTRY     520--ENTRY
       527--ENTRY     528--ENTRY     534--ENTRY     541--ENTRY
P3$
        13**DCL       505<<ASSIGN
P4
        14**DCL         6--PROC      517--ENTRY     520--ENTRY     527--ENTRY     528--ENTRY     541--ENTRY
       543>>ASSIGN
P5
        15**DCL         6--PROC      517--ENTRY     520--ENTRY     527--ENTRY     528--ENTRY     541--ENTRY
       551>>IF
P6
        16**DCL         6--PROC      517--ENTRY     520--ENTRY     541--ENTRY
PL6.E3A0      #003=FXD$SBR File=FXD$DEBUG.:E05TSI                                TUE 07/29/97 18:05 Page:114  
P7
        17**DCL         6--PROC      541--ENTRY
P8
        18**DCL         6--PROC      541--ENTRY
P9
        19**DCL         6--PROC      541--ENTRY
PACKS
       288**DCL       546>>ASSIGN
RWDP
       191**DCL       551<>CALL      552<>CALL
RWDP.BUF_.BOUND
       193**DCL       549<<ASSIGN
RWDP.BUF_.BUF$
       194**DCL       548<<ASSIGN
RWDP.STATION_
       194**DCL       195--REDEF
RWDP.V
       195**DCL       191--DCLINIT
RWDP.V.DVBYTE.REREAD#
       206**DCL       206--REDEF
RWDP.V.INDX#
       204**DCL       204--REDEF
XSF$LOCCODE
       167**DCL-ENT   538--CALL
XSF$LOCCODP
       168**DCL-ENT   536--CALL
XSF$LOCCODT
       169**DCL-ENT   540--CALL
