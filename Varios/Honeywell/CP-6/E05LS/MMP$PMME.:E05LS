VERSION E05

PL6.E3A0      #001=MMP$PMME File=MMP$PMME.:E05TSI                                WED 07/30/97 03:23 Page:1    
        1        1        /*M* Interface routines for supporting MM PMME's.                  */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* PLM=8,IND=2,THI=2,ENU=2,CSU=2,DTI=4,DCI=4,ECU=4,AND */
        8        8        MMP$PMME: PROC(X0VAL,EWSQ);
        9        9                                                /**/
       10       10    1   DCL X0VAL SBIN;                    /* The x0 pmme code - minus the fcg part   */
       11       11    1   DCL EWSQ SBIN;                     /* Effective wsq of process issuing pmme   */
       12       12                                                /**/
       13       13    1   DCL   B$LS$ PTR SYMREF;
       14       14    1   DCL B$JIT$ PTR SYMREF READONLY;         /* The canned jit pointer             */
       15       15    1   DCL B$UPT$ PTR SYMREF READONLY;         /* The canned jit pointer             */
       16       16    1   DCL B$USERLS$ PTR SYMREF READONLY;
       17       17    1   DCL B$PPUT$ PTR SYMREF READONLY;
       18       18    1   DCL B$IPHYMAP$ PTR SYMREF READONLY;
       19       19    1   DCL B$PS0$ PTR SYMREF READONLY;
       20       20    1   DCL B$PS1$ PTR SYMREF READONLY;
       21       21    1   DCL B$PS2$ PTR SYMREF READONLY;
       22       22    1   DCL S_CUN SBIN SYMREF;                  /* Current user number                */
       23       23    1   DCL MM_CGQD$ PTR SYMREF READONLY;
       24       24    1   DCL FMC_CACHEPGCNT SBIN SYMREF;
       25       25    1   DCL ELS$ PTR;
       26       26                                                /**/
       27       27    1   DCL MMH$GDS ENTRY(5) ALTRET;
       28       28    1   DCL MMH$FDS ENTRY(4) ALTRET;
       29       29    1   DCL MMH$SMPRT ENTRY(5) ALTRET;
       30       30    1   DCL MMD$STLPP ENTRY(2) ALTRET;          /* Routine to steal physical pages    */
       31       31    1   DCL MMD$RSPP ENTRY(2) ALTRET;           /* Routine to free stolen pages       */
       32       32    1   DCL MMB$GPP ENTRY(2)ALTRET;             /* Routine to get physical pages      */
       33       33    1   DCL MMB$FPP ENTRY(1) ALTRET;            /* Routine to free physical pages     */
       34       34    1   DCL MMG$SGVP ENTRY(5) ALTRET;           /* Get seg-relative V.P.              */
       35       35    1   DCL MMG$SFVP ENTRY(5) ALTRET;           /* Free seg-relative V.P.             */
       36       36    1   DCL MMI$GDP ENTRY(4) ALTRET;            /* Get dynamic pages                  */
       37       37    1   DCL MMI$FDP ENTRY(4) ALTRET;            /* Free dynamic pages                 */
PL6.E3A0      #001=MMP$PMME File=MMP$PMME.:E05TSI                                WED 07/30/97 03:23 Page:2    
       38       38    1   DCL MME$CVM ENTRY(4) ALTRET;            /* Change virtual map routine         */
       39       39    1   DCL MME$SMPRT ENTRY(4) ALTRET;          /* Set memory protection              */
       40       40    1   DCL MMI$GDDL ENTRY(4) ALTRET;           /* Get dynamic data limits            */
       41       41    1   DCL MMK$MAKUSER ENTRY(3) ALTRET;        /* Make new user                      */
       42       42    1   DCL MMM$ACCESS ENTRY(3) ALTRET;         /* Put mon. Descriptor in user ls     */
       43       43    1   DCL MMM$NEW_DR ENTRY(3) ALTRET;
       44       44    1   DCL MMB$BADPP ENTRY(1) ALTRET;
       45       45    1   DCL MMB$GOODPP ENTRY(1) ALTRET;
       46       46    1   DCL MMV$CVM ENTRY(3) ALTRET;
       47       47    1   DCL MMV$GET ENTRY(2) ALTRET;
       48       48    1   DCL MMV$RLS ENTRY(2) ALTRET;
       49       49    1   DCL MMV$VIRTUAL ENTRY;
       50       50    1   DCL JSN$BLNK2 ENTRY(2);
       51       51    1   DCL HFC$ASSOCCLR ENTRY(3);
       52       52    1   DCL HFF$NILERASE ENTRY(1) ALTRET;       /* Test for null or erase descriptor  */
       53       53    1   DCL UDN$MAGIC ENTRY;
       54       54                                                /**/
       55       55        /* Definitions of the memory management pmme CODES... */
       56       56                                                /**/
       57       57        %INCLUDE MM$CP6V_C;                     /* Based defs for mm fpt's            */
       58      125        %INCLUDE B_MACROS_C;                    /* System utility macros              */
       59      236        %INCLUDE B_SEGIDS_C;                    /* Segid definitions                  */
       60      775        %INCLUDE MM_DATA_R;
       61     1295        %INCLUDE M$JIT_C;                       /* Mm jit definitions                 */
       62     1815        %INCLUDE B$MAP;                         /* Based page table definition        */
       63     1914        %INCLUDE B$SS;
       64     2093        %INCLUDE B_MAGIC_C;
       65     2211        %INCLUDE B_LSDATA_C;
       66     5417        %INCLUDE F$DCB;
       67     5466        %B_MPT (FPTN=B_MPT,STCLASS=SYMREF);
       68     5559        %INCLUDE HF_ERRORS_C;
       69     5644        %INCLUDE M_ERRORS_C;
       70     5708        %INCLUDE M_ERRSET_C;
       71     5732        %INCLUDE HF_LOCK_C;
       72     5746        %INCLUDE HF_DATA_R;
       73     5789        %INCLUDE MM_CNTRL_R;
       74     5799        %INCLUDE JG_GHOSTS_C;
PL6.E3A0      #001=MMP$PMME File=MMP$PMME.:E05TSI                                WED 07/30/97 03:23 Page:3    
       75     5889        %INCLUDE UD_EQU_E;
       76     6278        %INCLUDE ES_CNTRL_R;
       77     6290                                                /**/
       78     6291        %MM$CGQD (STCLASS="BASED(MM_CGQD$)");
       79     6350        %MODERR(MODULE='20'O);
       80     6358        %VECTOR(STCLASS="BASED ALIGNED");
       81     6368        %SUB B$JIT = B$JIT$->B$JIT;             /* Ease the typing a bit              */
       82     6369        %SUB MM$PPUT = B$PPUT$->MM$PPUT;
       83     6370        %SUB B$SS=B_MPT.SS$->B$SS;
       84     6371                                                /**/
       85     6372                                                /**/
       86     6373        /* Call the appropriate pmme interface routine based on pmme code */
       87     6374    2           DO CASE(X0VAL);
       88     6375    2             CASE(%C$MAKUSER#);
       89     6376    2               CALL MMP$MAKE;              /* M$MAKUSER                          */
       90     6377    2             CASE(%C$GDS#);
       91     6378    2               CALL MMP$DS;                /* M$GDS                              */
       92     6379    2             CASE(%C$FDS#);
       93     6380    2               CALL MMP$DS;                /* M$FDS                              */
       94     6381    2             CASE(%C$GDP#);
       95     6382    2               CALL MMP$DP;                /* M$GDP                              */
       96     6383    2             CASE(%C$FDP#);
       97     6384    2               CALL MMP$DP;                /* M$FDP                              */
       98     6385    2             CASE(%C$GVP#);
       99     6386    2               CALL MMP$VP;                /* M$GVP                              */
      100     6387    2             CASE(%C$FVP#);
      101     6388    2               CALL MMP$VP;                /* M$FVP                              */
      102     6389    2             CASE(%C$STLPP#);
      103     6390    2               CALL MMP$STLPP;             /* M$STLPP                            */
      104     6391    2             CASE(%C$RSPP#);
      105     6392    2               CALL MMP$RSPP;              /* M$RSPP                             */
      106     6393    2             CASE(%C$CVM#);
      107     6394    2               CALL MMP$CVM;               /* M$CVM                              */
      108     6395    2             CASE(%C$SMPRT#);
      109     6396    2               CALL MMP$SMPRT;             /* M$SMPRT                            */
      110     6397    2             CASE(%C$SSC#);
      111     6398    2               CALL MMP$SSC;               /* M$SSC                              */
PL6.E3A0      #001=MMP$PMME File=MMP$PMME.:E05TSI                                WED 07/30/97 03:23 Page:4    
      112     6399    2             CASE(%C$GDDL#);
      113     6400    2               CALL MMP$GDDL;              /* M$GDDL                             */
      114     6401    2             CASE(%C$SAD#);
      115     6402    2               CALL MMP$SAD;               /* M$SAD                              */
      116     6403    2             CASE(%C$STD#);
      117     6404    2               CALL MMP$STD;               /* M$STD                              */
      118     6405    2             CASE(%C$BADPP#);
      119     6406    2               CALL MMP$TDPP;              /* M$BADPP                            */
      120     6407    2             CASE(%C$GOODPP#);
      121     6408    2               CALL MMP$TDPP;              /* M$GOODPP                           */
      122     6409    2             CASE(%C$GBPL#);
      123     6410    2               CALL MMP$GBPL;              /* M$GBPL                             */
      124     6411    2             CASE(%C$MPL#);
      125     6412    2               CALL MMP$PL;                /* M$MPL                              */
      126     6413    2             CASE(%C$UMPL#);
      127     6414    2               CALL MMP$PL;                /* M$UMPL                             */
      128     6415    2             CASE(%C$PDS#);
      129     6416    2               CALL MMP$PDS;               /* M$PDS                              */
      130     6417    2             CASE(%C$PAS#);
      131     6418    2               CALL MMP$PAS;               /* M$PAS                              */
      132     6419
      133     6420    2             CASE(%C$VIRTUAL#);
      134     6421    2               CALL MMV$VIRTUAL;           /* M$VIRTUAL                          */
      135     6422
      136     6423    2           END;
      137     6424    1           RETURN;
      138     6425                                                /**/
      139     6426                                                /**/
      140     6427        /* Now for the individual pmme interface ROUTINES... */
      141     6428                                                /**/
      142     6429        /**************************************************/
      143     6430        /*     Process M$GDS and M$FDS pmme's             */
      144     6431        /**************************************************/
      145     6432    1   MMP$DS: PROC;
      146     6433    2   DCL WSIZE UBIN;
      147     6434    2   DCL 1 F_WSIZE REDEF WSIZE,
      148     6435    2         2 FREE_FLAG BIT(1) UNAL,
PL6.E3A0      #001=MMP$PMME File=MMP$PMME.:E05TSI                                WED 07/30/97 03:23 Page:5    
      149     6436    2         2 VIRTONLY BIT(1) UNAL,
      150     6437    2         2 * UBIN(34) UNAL;
      151     6438    2   DCL SEGID UBIN;
      152     6439    2   DCL 1 BSEGID REDEF SEGID,
      153     6440    2         2 * UBIN(24) UNAL,
      154     6441    2         2 SEGBITS BIT(12) UNAL;
      155     6442    2   DCL ERR UBIN;
      156     6443    2   DCL PROT UBIN;
      157     6444    2   DCL FLAG BIT(36);
      158     6445    2   DCL START UBIN;
      159     6446                                                /**/
      160     6447        %FPT$GDS_V;
      161     6451                                                /**/
      162     6452    2           WSIZE = B$PS0$->FPT$GDS_V.SEGSIZE; /* Get # of words to get/free      */
      163     6453    2           IF WSIZE > 256*1024 THEN
      164     6454    3               DO;                         /* Illegal size passed                */
      165     6455        /*E*   ERROR: MMP-E$SEGSIZE-0
      166     6456               MESSAGE: Illegal size specified.                            */
      167     6457                      %ERRSETN(CODE=%E$SEGSIZE);
      168     6460    3                 B$PS1$->B$VECTOR = VECTOR(NIL);
      169     6461    3                 RETURN;
      170     6462    3               END;
      171     6463                %FINDLS (P$ = ELS$ , WSQ = EWSQ);
      172     6466    2           IF B$PS0$->FPT$GDS_V.AUTOSEG OR B$PS0$->FPT$GDS_V.COMMON
      173     6467    3             THEN DO;                      /* Do if common or auto was specified */
      174     6468    3                 IF B$PS0$->FPT$GDS_V.AUTOSEG AND B$PS0$->FPT$GDS_V.COMMON THEN
      175     6469    4                     DO;
      176     6470        /*E*   ERROR: MMP-E$CONFUSED-0
      177     6471               MESSAGE: Both COMMON and AUTO were specified.               */
      178     6472                            %ERRSETN(CODE=%E$CONFUSED);
      179     6475    4                       CALL HFF$NILERASE(1) ALTRET(ERR2NR);
      180     6476    4                       B$PS1$->B$VECTOR = VECTOR(NIL);
      181     6477    4   ERR2NR:             RETURN;
      182     6478    4                     END;
      183     6479    3                 IF B$PS0$->FPT$GDS_V.AUTOSEG
      184     6480    4                   THEN DO;
      185     6481    4                       SEGID = BITBIN(%AUTOSID);
PL6.E3A0      #001=MMP$PMME File=MMP$PMME.:E05TSI                                WED 07/30/97 03:23 Page:6    
      186     6482    4                       B$JIT.JUNK2 = B$JIT.JUNK2 | %JJ2_SKIP_QEND#;
      187     6483    4                     END;
      188     6484    3                   ELSE SEGID = BITBIN(%COMMONSID);
      189     6485    3               END;
      190     6486    3             ELSE DO;                      /* Do if auto or common not specified */
      191     6487    3                 SEGID = B$PS1$->B$VECTOR.SEGID;
      192     6488    3                 IF (SEGID = 0) OR (SEGID = BITBIN(%NULLSID)) THEN
      193     6489    4                     DO;                   /* Do if were supposed to pick segid  */
      194     6490    4                       IF X0VAL = %C$FDS# THEN
      195     6491    5                           DO;             /* Can't pick segid on free           */
      196     6492    5   BADSEGID_ERR:             ;
      197     6493        /*E*   ERROR:  MMP-E$BADSEGID-0
      198     6494             MESSAGE: Illegal SEGID.
      199     6495             MESSAGE1: An illegal SEGID was specified on a call to M$FDS or
      200     6496                       M$GDS otherwise no SEGID was specified on M$FDS.  */
      201     6497                                  %ERRSETN(CODE=%E$BADSEGID);
      202     6500    5                             B$PS1$->B$VECTOR = VECTOR(NIL);
      203     6501    5                             RETURN;
      204     6502    5                           END;
      205     6503    4                       IF EWSQ = %USERWSQ
      206     6504    4                         THEN START = BITBIN(%DS3SID);
      207     6505    4                         ELSE START = BITBIN(%DS2SID);
      208     6506    5                       DO SEGID = START TO BITBIN(%DS8SID);
      209     6507    5                         IF
      210     6508                                %NOTNULL (LS$ = ELS$ , SEGID = "BSEGID.SEGBITS");
      211     6511    5                           THEN; ELSE GOTO GOTSEG; /* Found a null one           */
      212     6512    5                       END;
      213     6513        /*E*   ERROR:  MMP-E$ALLUSED-0
      214     6514               MESSAGE: All dynamic data segments have been allocated.     */
      215     6515                            %ERRSETN(CODE=%E$ALLUSED);
      216     6518    4                       CALL HFF$NILERASE(1) ALTRET(ERR4NR);
      217     6519    4                       B$PS1$->B$VECTOR = VECTOR(NIL);
      218     6520    4   ERR4NR:             RETURN;
      219     6521    4   GOTSEG:           END;
      220     6522    3               END;
      221     6523        /* We now have the requested size & the segid.  Only call for      */
      222     6524        /* Getting or freeing space if size>0, otherwise return the current*/
PL6.E3A0      #001=MMP$PMME File=MMP$PMME.:E05TSI                                WED 07/30/97 03:23 Page:7    
      223     6525        /* Segment size.                                                   */
      224     6526    2           IF (SEGID < BITBIN(%DS1SID)) OR (SEGID > BITBIN(%DS8SID))
      225     6527    2             THEN GOTO BADSEGID_ERR;
      226     6528    2           IF WSIZE ~= 0 THEN
      227     6529    3               DO;
      228     6530    3                 IF X0VAL = %C$GDS#
      229     6531    4                   THEN DO;
      230     6532        /* If 'FREE' is specified, then set the top bit of wsize so that   */
      231     6533        /* If we can't get all requested space, we won't get any.          */
      232     6534    4                       IF B$PS0$->FPT$GDS_V.FREE THEN
      233     6535    4                         F_WSIZE.FREE_FLAG = %TRUE;
      234     6536    4                       IF B$PS0$->FPT$GDS_V.VIRTONLY THEN
      235     6537    4                         F_WSIZE.VIRTONLY = %TRUE;
      236     6538        /* Pickup the specified protection for the segment. If its zero,
      237     6539           (compiled pre-B00), then default it to read/write access.       */
      238     6540    4                       PROT = BITBIN(B$PS0$->FPT$GDS_V.PROTECTION);
      239     6541    4                       IF PROT = 0 THEN PROT = BITBIN(%MM_DSWRITE#);
      240     6542    4                       CALL MMH$GDS(EWSQ,SEGID,WSIZE,ERR,PROT) ALTRET(OOPS);
      241     6543    4                     END;
      242     6544    4                   ELSE DO;
      243     6545                            %GETFLG (LS$ = ELS$ , SEGID = "BSEGID.SEGBITS" , FLG = FLAG);
      244     6548    4                       IF (FLAG & %DSSHARED) THEN
      245     6549    5                           DO;
      246     6550        /*E*    ERROR:  MMP-E$ITISSHARED-0
      247     6551                MESSAGE: You may not release a shared data segment with M$FDS.
      248     6552                MESSAGE1: A shared data segment must be released with the
      249     6553                        proper form of M$CLOSE.                            */
      250     6554                                  %ERRSETN(CODE=%E$ITISSHARED);
      251     6557    5                             RETURN;
      252     6558    5                           END;
      253     6559    4                       CALL MMH$FDS(EWSQ,SEGID,WSIZE,ERR) ALTRET(OOPS);
      254     6560    4                     END;
      255     6561    3                 GOTO SET_RSLTS;
      256     6562    3   OOPS:         ;
      257     6563                      %ERRSETN(CODE=ERR);
      258     6566    3                 IF ERR = %E$BADSEGID THEN
      259     6567    4                     DO;                   /* Bad segid - can't have worked      */
PL6.E3A0      #001=MMP$PMME File=MMP$PMME.:E05TSI                                WED 07/30/97 03:23 Page:8    
      260     6568    4                       B$PS1$->B$VECTOR = VECTOR(NIL);
      261     6569    4                       RETURN;
      262     6570    4                     END;
      263     6571    3   SET_RSLTS:
      264     6572    3               END;
      265     6573        /* Now set up the results vector to frame all of the allocated     */
      266     6574        /* Segment. Zap it if the segment is null.                         */
      267     6575        /* Return results only if passed descriptor frames something.      */
      268     6576    2           CALL HFF$NILERASE(1) ALTRET(NORSLTS1);
      269     6577    2           B$PS1$ -> B$VECTOR = VECTOR(NIL);
      270     6578    2           IF
      271     6579                  %NOTNULL (LS$ = ELS$ , SEGID = "BSEGID.SEGBITS");
      272     6582    3             THEN DO;
      273     6583                      %GETDBOUND (LS$ = ELS$ , SEGID = "BSEGID.SEGBITS" , DBOUND = WSIZE);
      274     6586    3                 B$PS1$->B$VECTOR.VSIZE = WSIZE;
      275     6587    3                 B$PS1$->B$VECTOR.SEGID = BITBIN(BSEGID.SEGBITS | '6000'O);
      276     6588    3               END;
      277     6589    2   NORSLTS1:;
      278     6590    2           RETURN;
      279     6591    2   END MMP$DS;
      280     6592                                                /**/
      281     6593                                                /**/
      282     6594        /***********************************************/
      283     6595        /*      Process the M$PDS pmme                 */
      284     6596        /***********************************************/
      285     6597    1   MMP$PDS: PROC;
      286     6598    2   DCL PROT UBIN;
      287     6599    2   DCL SEGID UBIN;
      288     6600    2   DCL ERR UBIN;
      289     6601    2   DCL FLAG BIT(36);
      290     6602        /**/
      291     6603        %FPT$PDS_V;
      292     6606        /**/
      293     6607    2           SEGID = B$PS1$->B$VECTOR.SEGID;
      294     6608    2           PROT = BITBIN(B$PS0$->FPT$PDS_V.PROTECTION);
      295     6609                %FINDLS (WSQ = EWSQ , P$ = ELS$);
      296     6612                %GETFLG (LS$ = ELS$ , SEGID = "BINBIT(SEGID,12)" , FLG = FLAG);
PL6.E3A0      #001=MMP$PMME File=MMP$PMME.:E05TSI                                WED 07/30/97 03:23 Page:9    
      297     6615    2           IF (FLAG & %DSSHARED) THEN
      298     6616    3               DO;
      299     6617        /*E*    ERROR:  MMP-E$SHRPROTECT-0
      300     6618                MESSAGE: You are not allowed to change the protection on
      301     6619                        a shared data segment.                             */
      302     6620                      %ERRSETN(CODE=%E$SHRPROTECT);
      303     6623    3                 RETURN;
      304     6624    3               END;
      305     6625    2           CALL MMH$SMPRT(EWSQ,SEGID,,ERR,PROT) ALTRET(PDS_ERR);
      306     6626    2           RETURN;
      307     6627        /**/
      308     6628    2   PDS_ERR:;
      309     6629                %ERRSETN(CODE=ERR);
      310     6632    2           RETURN;
      311     6633    2   END MMP$PDS;
      312     6634        /**/
      313     6635        /**/
      314     6636        /**************************************************/
      315     6637        /*     Process M$GDP and M$FDP pmme's             */
      316     6638        /**************************************************/
      317     6639    1   MMP$DP: PROC;
      318     6640    2   DCL NPGS UBIN;
      319     6641    2   DCL BSIZE SBIN;
      320     6642    2   DCL START$ PTR;
      321     6643    2   DCL 1 VEC BASED ALIGNED,           /* Struct. Used to treat word 2 as ptr     */
      322     6644    2         2 WORD1 UBIN(36),
      323     6645    2         2 P$ PTR;
      324     6646                                                /**/
      325     6647        %FPT$GDP_V;
      326     6650                                                /**/
      327     6651    2           NPGS  = MINIMUM(B$PS0$->FPT$GDP_V.PAGES,256);
      328     6652    2           IF (NPGS = 0) AND (X0VAL = %C$GDP#)
      329     6653    3             THEN DO;                      /* Return null if getting 0 pgs       */
      330     6654    3                 CALL HFF$NILERASE(1) ALTRET(NONIL);
      331     6655    3                 B$PS1$->B$VECTOR = VECTOR(NIL);
      332     6656    3   NONIL:      END;
      333     6657    3             ELSE DO;
PL6.E3A0      #001=MMP$PMME File=MMP$PMME.:E05TSI                                WED 07/30/97 03:23 Page:10   
      334     6658    3                 IF X0VAL = %C$GDP#
      335     6659    3                   THEN CALL MMI$GDP(EWSQ,NPGS,BSIZE,START$) ALTRET(XX);
      336     6660    3                   ELSE CALL MMI$FDP(EWSQ,NPGS,BSIZE,START$) ALTRET(XX);
      337     6661        /* Any error code will have been placed in JIT.ERR by mmi, so we   */
      338     6662        /* Don't need to do anything special on an altreturn.              */
      339     6663    3   XX:           CALL HFF$NILERASE(1) ALTRET(NORSLTS2);
      340     6664    3                 IF BSIZE < 0
      341     6665    3                   THEN
      342     6666    3                   B$PS1$->B$VECTOR = VECTOR(NIL);
      343     6667    4                   ELSE DO;
      344     6668    4                       B$PS1$->B$VECTOR.VSIZE = BSIZE; /* Set up results VECTOR...*/
      345     6669    4                       B$PS1$->B$VECTOR.FLAGS = '777'O;
              6669                                /* To frame what we have (left) */
      346     6670    4                       B$PS1$->B$VECTOR.V = '01'B;
      347     6671    4                       B$PS1$->VEC.P$ = START$;
      348     6672    4                     END;
      349     6673    3   NORSLTS2:   END;
      350     6674    2           RETURN;
      351     6675    2   END MMP$DP;
      352     6676                                                /**/
      353     6677                                                /**/
      354     6678        /**************************************************/
      355     6679        /*     Process M$GVP and M$FVP pmme's             */
      356     6680        /**************************************************/
      357     6681    1   MMP$VP: PROC;
      358     6682    2   DCL VPNO SBIN(36);
      359     6683    2   DCL ERR SBIN;
      360     6684    2   DCL N SBIN;
      361     6685    2   DCL WSQ SBIN;
      362     6686    2   DCL VCB$ PTR;
      363     6687                                                /**/
      364     6688        %FPT$GVP_V;
      365     6691                                                /**/
      366     6692
      367     6693    2           WSQ = B$PS0$->FPT$GVP_V.WSQ;
      368     6694    2           IF WSQ~=0
      369     6695    3             THEN DO;
PL6.E3A0      #001=MMP$PMME File=MMP$PMME.:E05TSI                                WED 07/30/97 03:23 Page:11   
      370     6696    3                 IF WSQ < %VS1WSQ OR WSQ > %VS3WSQ
      371     6697    4                   THEN DO;
      372     6698    4   BADWSQ:             ;
      373     6699                            %ERRSETN(CODE=%E$BADWSQ);
      374     6702                  /*E* ERROR: MMP-E$BADWSQ-0
      375     6703                  MESSAGE: Illegal WSQ specified.
      376     6704              */
      377     6705    4                       RETURN;
      378     6706    4                     END;
      379     6707    3                 N = B$JIT.VIRTUAL.DCB#(WSQ-%VS1WSQ);
      380     6708    3                 IF N=0 THEN GOTO BADWSQ;
      381     6709    3                 VCB$ = DCBADDR(N)->F$DCB.SETSTA$;
      382     6710    3                 VPNO = B$PS0$->FPT$GVP_V.PNO;
      383     6711    3                 IF VPNO > VCB$->MM$VCB.MAXVP#
      384     6712    4                   THEN DO;
      385     6713    4   BADVP:              ;
      386     6714                            %ERRSETN(CODE=%E$BADVP);
      387     6717        /*E*   ERROR:  MMP-E$BADVP-0
      388     6718               MESSAGE: Page not within available area of virtual memory.  */
      389     6719    4                       RETURN;
      390     6720    4                     END;
      391     6721    3                 IF X0VAL = %C$GVP#
      392     6722    3                   THEN CALL MMV$GET(WSQ,VPNO);
      393     6723    3                   ELSE CALL MMV$RLS(WSQ,VPNO);
      394     6724    3               END;
      395     6725    3             ELSE DO;
      396     6726    3                 VPNO=B$PS0$->FPT$GVP_V.PNO+%ISEGLO;
      397     6727    3                 IF VPNO>B$JIT.EUP OR VPNO<=B$JIT.PUL THEN GOTO BADVP;
      398     6728    3                 N = 1;                    /* 'N' may be set to 0 by sgvp        */
      399     6729    3                 VPNO=VPNO - %ISEGLO;
      400     6730    3                 IF X0VAL = %C$GVP#
      401     6731    3                   THEN CALL MMG$SGVP(EWSQ,BITBIN(%ISSID),VPNO,N,ERR)
      402     6732    4                     WHENRETURN DO;
      403     6733    4                         IF ES_CLEARMEM~=0 THEN CALL JSN$BLNK2(VPNO,N);
      404     6734    4                       END;
      405     6735    4                     WHENALTRETURN DO;
      406     6736    4   ALTRT:                ;
PL6.E3A0      #001=MMP$PMME File=MMP$PMME.:E05TSI                                WED 07/30/97 03:23 Page:12   
      407     6737                              %ERRSETN(CODE=ERR);
      408     6740    4                       END;
      409     6741    3                   ELSE CALL MMG$SFVP(EWSQ,BITBIN(%ISSID),VPNO,N,ERR) ALTRET(ALTRT);
      410     6742    3               END;
      411     6743    2           RETURN;
      412     6744    2   END MMP$VP;
      413     6745                                                /**/
      414     6746                                                /**/
      415     6747        /**************************************************/
      416     6748        /*     Process the M$STLPP pmme                   */
      417     6749        /**************************************************/
      418     6750    1   MMP$STLPP: PROC;
      419     6751    2   DCL PPNO SBIN;
      420     6752    2   DCL S_CUN SBIN SYMREF;
      421     6753    2   DCL 1 RES BASED ALIGNED,
      422     6754    2         2 WRD1 UBIN(36),
      423     6755    2         2 WRD2 UBIN(36);
      424     6756                                                /**/
      425     6757    2           B$PS0$->B$VECTOR = '0'B;        /* Clear out results vector           */
      426     6758    2           IF (B$JIT.PRIV.ACTIVE & %PR_GPP#) AND (EWSQ ~= %MONWSQ)
      427     6759    3             THEN DO;
      428     6760    3                 IF (MM_FPPC + MM_AUTO + FMC_CACHEPGCNT + MM$CGQD.FPPC - MM_HELD - (
              6760                          MM_RSVP-MM_SPPC))
      429     6761    3                   < MM_NOUSTHRESH AND S_CUN = JG_SLUG# THEN
      430     6762    3                   GOTO NO_STEAL;
      431     6763    3                 CALL MMB$GPP(PPNO,EWSQ);  /* Do get physical if ghost1          */
      432     6764    3                 IF PPNO = 0 THEN GOTO NO_STEAL; ELSE;
      433     6765    3               END;
      434     6766    2             ELSE CALL MMD$STLPP(PPNO,EWSQ) ALTRET(NO_STEAL);
      435     6767    2           B$PS0$->RES.WRD2 = PPNO;
      436     6768    2           RETURN;
      437     6769    2   NO_STEAL:
      438     6770    2           B$PS0$->RES.WRD2 = 0;
      439     6771        /*E*   ERROR:  MMP-E$ALLSTOLEN-0
      440     6772               MESSAGE: No stealable physical pages are available.         */
      441     6773                %ERRSETN(CODE=%E$ALLSTOLEN);
      442     6776    2           RETURN;
PL6.E3A0      #001=MMP$PMME File=MMP$PMME.:E05TSI                                WED 07/30/97 03:23 Page:13   
      443     6777    2   END MMP$STLPP;
      444     6778                                                /**/
      445     6779                                                /**/
      446     6780        /**************************************************/
      447     6781        /*     Process the M$RSPP pmme                    */
      448     6782        /**************************************************/
      449     6783    1   MMP$RSPP: PROC;
      450     6784    2   DCL PPNO SBIN;
      451     6785    2   DCL 1 RES BASED ALIGNED,
      452     6786    2         2 WRD1 UBIN(36),
      453     6787    2         2 WRD2 UBIN(36);
      454     6788                                                /**/
      455     6789    2           PPNO = B$PS0$->RES.WRD2;        /* Get stolen page no.                */
      456     6790        /* Ghost1 (host logon processor) gets special TREATMENT:           */
      457     6791        /* The get and free stolen page pmme's actually bypass the         */
      458     6792        /* Stolen page logic, and get and release physical pages.          */
      459     6793    2           IF (B$JIT.PRIV.ACTIVE & %PR_GPP#) AND (EWSQ ~= %MONWSQ)
      460     6794    3             THEN DO;
      461     6795    3                 CALL MMB$FPP(PPNO);
      462     6796    3               END;
      463     6797    2             ELSE CALL MMD$RSPP(PPNO,EWSQ) ALTRET(NOT_STOLEN);
      464     6798    2           RETURN;
      465     6799    2   NOT_STOLEN:
      466     6800        /*E*   ERROR:  MMP-E$NOTSTOLEN-0
      467     6801               MESSAGE: That is not a stolen page.                         */
      468     6802                %ERRSETN(CODE=%E$NOTSTOLEN);
      469     6805    2           RETURN;
      470     6806    2   END MMP$RSPP;
      471     6807                                                /**/
      472     6808                                                /**/
      473     6809        /**************************************************/
      474     6810        /*     Process the M$CVM pmme                     */
      475     6811        /**************************************************/
      476     6812    1   MMP$CVM: PROC;
      477     6813    2   DCL PPNO SBIN;
      478     6814    2   DCL VPNO SBIN(36);
      479     6815    2   DCL PHYSICAL BIT(1) ALIGNED;
PL6.E3A0      #001=MMP$PMME File=MMP$PMME.:E05TSI                                WED 07/30/97 03:23 Page:14   
      480     6816    2   DCL ERR SBIN;
      481     6817    2   DCL WSQ SBIN;
      482     6818    2   DCL DCB# UBIN;
      483     6819    2   DCL VCB$ PTR;
      484     6820                                                /**/
      485     6821        %FPT$CVM_V;
      486     6825    2           PPNO = B$PS0$->FPT$CVM_V.PPNO;
      487     6826    2           WSQ = B$PS0$->FPT$CVM_V.WSQ;
      488     6827    2           PHYSICAL = B$PS0$->FPT$CVM_V.PHYSICAL;
      489     6828    2           IF PHYSICAL AND HW_WSQ0PT THEN
      490     6829    3             IF PPNO ~= -1 THEN DO;
      491     6830    3                   IF PPNO < 0 OR PPNO > B$LS$->B$MLNK.IPHY_MAP.BOUND/4 THEN
      492     6831    3                     GOTO REPORT_ERROR;
      493     6832    3                   IF B$IPHYMAP$->MM$IPHY_MAP(PPNO)~=BITBIN('777777'O) THEN
      494     6833    3                     PPNO = B$IPHYMAP$->MM$IPHY_MAP(PPNO);
      495     6834    4                     ELSE DO;
      496     6835    4   REPORT_ERROR:
      497     6836                              %ERRSETN(CODE=%E$BADPP);
      498     6839    4                         RETURN;
      499     6840    4                       END;
      500     6841    3                 END;
      501     6842    2   PAGE_OK:;
      502     6843    2           IF WSQ ~= 0
      503     6844    3             THEN DO;
      504     6845    3                 IF WSQ < %VS1WSQ OR WSQ > %VS3WSQ
      505     6846    4                   THEN DO;
      506     6847    4   BADWSQ:             ;
      507     6848                            %ERRSETN(CODE=%E$BADWSQ);
      508     6851    4                       RETURN;
      509     6852    4                     END;
      510     6853    3                 DCB# = B$JIT.VIRTUAL.DCB#(WSQ-%VS1WSQ);
      511     6854    3                 IF DCB# = 0 THEN GOTO BADWSQ;
      512     6855    3                 VCB$ = DCBADDR(DCB#)->F$DCB.SETSTA$;
      513     6856    3                 VPNO = B$PS0$->FPT$CVM_V.VPNO;
      514     6857    3                 IF VPNO > VCB$->MM$VCB.MAXVP#
      515     6858    4                   THEN DO;
      516     6859    4   BADVP:              ;
PL6.E3A0      #001=MMP$PMME File=MMP$PMME.:E05TSI                                WED 07/30/97 03:23 Page:15   
      517     6860                            %ERRSETN(CODE=%E$BADVP);
      518     6863    4                       RETURN;
      519     6864    4                     END;
      520     6865    3                 CALL MMV$CVM(WSQ,VPNO,PPNO);
      521     6866    3               END;
      522     6867    3             ELSE DO;
      523     6868    3                 VPNO=B$PS0$->FPT$CVM_V.VPNO+%ISEGLO;
      524     6869    3                 IF VPNO>%USERHIPAGE THEN GOTO BADVP;
      525     6870    4                 CALL MME$CVM(EWSQ,VPNO,PPNO,ERR) WHENALTRETURN DO;
      526     6871                            %ERRSETN(CODE=ERR);
      527     6874    4                     END;
      528     6875    3               END;
      529     6876    2           RETURN;
      530     6877    2   END MMP$CVM;
      531     6878                                                /**/
      532     6879                                                /**/
      533     6880        /*************************************************/
      534     6881        /*     Process the M$SMPRT pmme                  */
      535     6882        /*************************************************/
      536     6883    1   MMP$SMPRT: PROC;
      537     6884    2   DCL VPNO SBIN(36);
      538     6885    2   DCL FLAGS SBIN;
      539     6886    2   DCL LASTPNO SBIN;
      540     6887    2   DCL I SBIN;
      541     6888    2   DCL ERR SBIN;
      542     6889                                                /**/
      543     6890        %FPT$SMPRT_V;
      544     6893    2           VPNO = B$PS0$->FPT$SMPRT_V.VPNO;
      545     6894    2           IF ~ B$PS0$->FPT$SMPRT_V.WSQFLG THEN VPNO = VPNO + %ISEGLO;
      546     6895    2           FLAGS = BITBIN(B$PS0$->FPT$SMPRT_V.FLAGS);
      547     6896    2           LASTPNO = VPNO + B$PS0$->FPT$SMPRT_V.NUMPGS - 1;
      548     6897    2           IF (LASTPNO < VPNO) OR (LASTPNO > %USERHIPAGE) THEN
      549     6898    3               DO;
      550     6899                      %ERRSETN(CODE=%E$BADVP);
      551     6902    3                 RETURN;
      552     6903    3               END;
      553     6904    3           DO I = VPNO TO LASTPNO;
PL6.E3A0      #001=MMP$PMME File=MMP$PMME.:E05TSI                                WED 07/30/97 03:23 Page:16   
      554     6905    3             CALL MME$SMPRT(EWSQ,I,FLAGS,ERR) ALTRET(BADSMPRT);
      555     6906    3           END;
      556     6907    2           RETURN;
      557     6908    2   BADSMPRT:;
      558     6909                %ERRSETN(CODE=ERR);
      559     6912    2           RETURN;
      560     6913    2   END MMP$SMPRT;
      561     6914                                                /**/
      562     6915                                                /**/
      563     6916        /************************************************/
      564     6917        /*     Process the M$SSC pmme                   */
      565     6918        /************************************************/
      566     6919    1   MMP$SSC: PROC;
      567     6920    2   DCL VPNO SBIN(36);
      568     6921    2   DCL FLAGS BIT(10);
      569     6922    2   DCL SCFLAGS BIT(10);
      570     6923    2   DCL LASTPNO SBIN;
      571     6924    2   DCL I SBIN;
      572     6925    2   DCL BASE UBIN;
      573     6926    2   DCL SEGID UBIN;
      574     6927    2   DCL 1 BSEGID REDEF SEGID,
      575     6928    2         2 * UBIN(24) UNAL,
      576     6929    2         2 SEGBITS BIT(12) UNAL;
      577     6930                                                /**/
      578     6931        %FPT$SSC_V;
      579     6935    2           VPNO = B$PS0$->FPT$SSC_V.VPNO;
      580     6936             /* If segflg is set check SEGID to see if it is resonable
      581     6937                  and the segment is not null. Then calculate VPNO realitive
      582     6938                  to the start of that segment.
      583     6939              */
      584     6940    2           IF B$PS0$->FPT$SSC_V.SEGFLG
      585     6941    3             THEN DO;
      586     6942    3                 SEGID = BITBIN(B$PS0$->FPT$SSC_V.SEGID);
      587     6943    3                 IF (SEGID < BITBIN(%DS1SID)) OR (SEGID > BITBIN(%DS8SID))
      588     6944    3                   THEN GOTO BADSEGID_ERR;
      589     6945    3                 IF
      590     6946                        %NOTNULL (LS$ = B$USERLS$, SEGID = "BSEGID.SEGBITS");
PL6.E3A0      #001=MMP$PMME File=MMP$PMME.:E05TSI                                WED 07/30/97 03:23 Page:17   
      591     6949    3                   THEN ; ELSE GOTO BADSEGID_ERR;
      592     6950                      %GETDBASE (LS$ = B$USERLS$,SEGID="BSEGID.SEGBITS",DBASE=BASE);
      593     6953    3                 VPNO = VPNO + BASE / 4096;
      594     6954    3               END;
      595     6955    2             ELSE
      596     6956    2             IF NOT B$PS0$->FPT$SSC_V.WSQFLG THEN VPNO = VPNO + %ISEGLO;
      597     6957        /* Make sure he can't affect bits used by CP-6 */
      598     6958    2           FLAGS = B$PS0$->FPT$SSC_V.FLAGS;
      599     6959    2           IF EWSQ ~= %DBWSQ THEN
      600     6960    2             FLAGS = FLAGS & %SCAVAIL;
      601     6961    2           LASTPNO = VPNO + B$PS0$->FPT$SSC_V.NUMPGS - 1;
      602     6962    2           IF (LASTPNO < VPNO) OR (LASTPNO > %USERHIPAGE) THEN
      603     6963    3               DO;
      604     6964                      %ERRSETN(CODE=%E$BADVP);
      605     6967    3                 RETURN;
      606     6968    3               END;
      607     6969    3           DO I = VPNO TO LASTPNO;
      608     6970    3             IF B$UPT$->B$MAP.RPN(I) = MM_FPMC.RPN THEN
      609     6971    4                 DO;
      610     6972        /*E*   ERROR:  MMP-E$BADAREA-0
      611     6973               MESSAGE: The specified area contains pages not owned by user */
      612     6974                        %ERRSETN(CODE=%E$BADAREA);
      613     6977    4                   RETURN;
      614     6978    4                 END;
      615     6979    3             SCFLAGS = FLAGS | (B$UPT$->B$MAP.SCTRL(I) & ~%SCAVAIL);
      616     6980                  %SSC (P$ = B$UPT$ , VPNO = I , SC = SCFLAGS);
      617     6983    3           END;
      618     6984    2           CALL HFC$ASSOCCLR;
      619     6985    2           RETURN;
      620     6986    2   BADSEGID_ERR: ;
      621     6987                %ERRSETN(CODE=%E$BADSEGID);
      622     6990    2           RETURN;
      623     6991    2   END MMP$SSC;
      624     6992                                                /**/
      625     6993                                                /**/
      626     6994        /************************************************/
      627     6995        /*     Process the M$GDDL pmme                  */
PL6.E3A0      #001=MMP$PMME File=MMP$PMME.:E05TSI                                WED 07/30/97 03:23 Page:18   
      628     6996        /************************************************/
      629     6997    1   MMP$GDDL: PROC;
      630     6998    2   DCL NPGS SBIN;
      631     6999    2   DCL BSIZE SBIN;
      632     7000    2   DCL START$ PTR;
      633     7001    2   DCL 1 RESULTS BASED ALIGNED,
      634     7002    2         2 WORD1 UBIN(36),
      635     7003    2         2 P$ PTR,
      636     7004    2         2 WORD3 UBIN(36);
      637     7005                                                /**/
      638     7006    2           CALL MMI$GDDL(EWSQ,NPGS,BSIZE,START$) ALTRET(BADGDDL);
      639     7007    2           B$PS0$->B$VECTOR.VSIZE = BSIZE;
      640     7008    2           B$PS0$->B$VECTOR.FLAGS = '777'O;
      641     7009    2           B$PS0$->B$VECTOR.V = '01'B;
      642     7010    2           B$PS0$->RESULTS.P$ = START$;
      643     7011    2           B$PS0$->RESULTS.WORD3 = NPGS;
      644     7012    2   BADGDDL:
      645     7013    2           RETURN;
      646     7014    2   END MMP$GDDL;
      647     7015                                                /**/
      648     7016                                                /**/
      649     7017        /***********************************************/
      650     7018        /*     Process the M$MAKUSER pmme              */
      651     7019        /***********************************************/
      652     7020    1   MMP$MAKE: PROC;
      653     7021    2   DCL PPJIT SBIN;
      654     7022    2   DCL PPHJIT SBIN;
      655     7023    2   DCL PPROSEG SBIN;
      656     7024                                                /**/
      657     7025        %FPT$MAKUSER_V;
      658     7028                                                /**/
      659     7029    2           PPJIT = B$PS0$->FPT$MAKUSER_V.JITPP;
      660     7030    2           PPHJIT = B$PS0$->FPT$MAKUSER_V.HJITPP;
      661     7031    2           PPROSEG = B$PS0$->FPT$MAKUSER_V.ROPP;
      662     7032    2           CALL MMK$MAKUSER(PPJIT,PPHJIT,PPROSEG) ALTRET(BADMAKE);
      663     7033    2   BADMAKE:;
      664     7034    2           RETURN;
PL6.E3A0      #001=MMP$PMME File=MMP$PMME.:E05TSI                                WED 07/30/97 03:23 Page:19   
      665     7035    2   END MMP$MAKE;
      666     7036                                                /**/
      667     7037                                                /**/
      668     7038        /********************************************/
      669     7039        /*     Process the M$SAD pmme               */
      670     7040        /********************************************/
      671     7041    1   MMP$SAD: PROC;
      672     7042    2   DCL MSID UBIN(36);
      673     7043    2   DCL USID UBIN(36);
      674     7044                                                /**/
      675     7045        %FPT$SAD_V;
      676     7048                                                /**/
      677     7049    2           MSID = BITBIN(B$PS0$->FPT$SAD_V.MONSID);
      678     7050    2           USID = BITBIN(B$PS0$->FPT$SAD_V.USERSID);
      679     7051    2           CALL MMM$ACCESS(EWSQ,MSID,USID) ALTRET(BADSAD);
      680     7052    2   BADSAD: ;
      681     7053    2           RETURN;
      682     7054    2   END MMP$SAD;
      683     7055                                                /**/
      684     7056                                                /**/
      685     7057        /********************************************/
      686     7058        /*     Process the M$STD pmme               */
      687     7059        /********************************************/
      688     7060    1   MMP$STD: PROC;
      689     7061    2   DCL USID UBIN(36);
      690     7062        /**/
      691     7063        %FPT$STD_V;
      692     7066        /**/
      693     7067    2           USID = BITBIN(B$PS0$->FPT$STD_V.USERSID);
      694     7068    2           CALL MMM$NEW_DR(EWSQ,USID,USID) ALTRET(BAD_SETLS);
      695     7069    2   BAD_SETLS:;
      696     7070    2           RETURN;
      697     7071    2   END MMP$STD;
      698     7072                                                /**/
      699     7073                                                /**/
      700     7074        /*******************************************/
      701     7075        /*     Process M$BADPP & M$GOODPP pmmes    */
PL6.E3A0      #001=MMP$PMME File=MMP$PMME.:E05TSI                                WED 07/30/97 03:23 Page:20   
      702     7076        /*******************************************/
      703     7077    1   MMP$TDPP: PROC;
      704     7078    2   DCL PPNO UBIN;
      705     7079    2   DCL FOUNDFLG SBIN;
      706     7080    2   DCL MM0$FINDPG ENTRY(5);
      707     7081        /**/
      708     7082        %FPT$BADPP_V;
      709     7085    2           PPNO = B$PS0$->FPT$BADPP_V.PPNO;
      710     7086    2           IF (PPNO > MM_PCORE) OR (MM$PPUT.STOLEN(PPNO) AND MM$PPUT.USER#(PPNO)=511)
              7086                    THEN
      711     7087    3               DO;
      712     7088                      %ERRSETN(CODE=%E$BADVP);
      713     7091    3                 RETURN;
      714     7092    3               END;
      715     7093    2           IF X0VAL = %C$GOODPP#
      716     7094    3             THEN DO;
      717     7095                                 /* Make sure that the page is really marked bad...   */
      718     7096                      %LOCK(G=MM_LOCK);
      719     7099    3                 IF PPNO = 0 THEN
      720     7100    3                   FOUNDFLG = -1;
      721     7101    3                   ELSE IF PPNO = MM_BPPH THEN
      722     7102    3                     FOUNDFLG = 0;
      723     7103    3                     ELSE
      724     7104    3                     CALL MM0$FINDPG(PPNO,MM_BPPH,MM_BPPT,MM_BPPC,FOUNDFLG);
      725     7105                      %UNLOCK(G=MM_LOCK);
      726     7108    3                 IF FOUNDFLG < 0 AND (NOT MM$PPUT.SUSPECT(PPNO)) THEN
      727     7109    4                     DO;
      728     7110              /*E*    ERROR:  MMP-E$NOTBADPP-0
      729     7111                     MESSAGE: Attempt to return a page which was never taken out of service.
      730     7112              */
      731     7113                            %ERRSETN(CODE=%E$NOTBADPP);
      732     7116    4                       RETURN;
      733     7117    4                     END;
      734     7118    3                 IF MM$PPUT.IN_TEST(PPNO) THEN
      735     7119        /*E*   ERROR:  MMP-E$TESTERR-0
      736     7120               MESSAGE: Attempt to return page still in test to free page chain.
      737     7121        */
PL6.E3A0      #001=MMP$PMME File=MMP$PMME.:E05TSI                                WED 07/30/97 03:23 Page:21   
      738     7122    4                     DO;
      739     7123                            %ERRSETN(CODE=%E$TESTERR);
      740     7126    4                       RETURN;
      741     7127    4                     END;
      742     7128    3                 IF FOUNDFLG >= 0 THEN CALL MMB$GOODPP(PPNO);
      743     7129    3                   ELSE MM$PPUT.SUSPECT(PPNO) = %FALSE;
      744     7130    3               END;
      745     7131    2             ELSE CALL MMB$BADPP(PPNO);
      746     7132    2           RETURN;
      747     7133    2   END MMP$TDPP;
      748     7134                                                /**/
      749     7135                                                /**/
      750     7136        /****************************************/
      751     7137        /*     Process the M$GBPL pmme          */
      752     7138        /****************************************/
      753     7139    1   MMP$GBPL: PROC;
      754     7140    2   DCL HIGHPP UBIN;
      755     7141    2   DCL LOWPP UBIN;
      756     7142    2   DCL MAXPGS UBIN;
      757     7143    2   DCL FOUNDPGS UBIN;
      758     7144    2   DCL PPNO UBIN;
      759     7145        /**/
      760     7146        %VLP$PGLIST_V;
      761     7149        %FPT$GBPL_V;
      762     7152                %LOCK(G=MM_LOCK);
      763     7155    2           HIGHPP = B$PS0$->FPT$GBPL_V.HIGHPP;
      764     7156    2           LOWPP = B$PS0$->FPT$GBPL_V.LOWPP;
      765     7157    2           MAXPGS = B$PS0$->FPT$GBPL_V.MAXPGS;
      766     7158    2           FOUNDPGS = 0;
      767     7159        /* Return in the structure "VLP$PGLIST" as many physical page      */
      768     7160        /* numbers as possible (up to maxpgs) which are currently on the   */
      769     7161        /* "bad" page list and have page numbers between lowppp and HIGHPP.*/
      770     7162        /* Pages on the "bad" page list are pages which have been taken out*/
      771     7163        /* of service due to suspected errors within them.                 */
      772     7164    2           PPNO = MM_BPPH;                 /* Head of bad page list              */
      773     7165    3           DO WHILE ((PPNO ~= 0) AND (FOUNDPGS < MAXPGS));
      774     7166    3             IF (PPNO >= LOWPP) AND (PPNO <= HIGHPP) THEN
PL6.E3A0      #001=MMP$PMME File=MMP$PMME.:E05TSI                                WED 07/30/97 03:23 Page:22   
      775     7167    4                 DO;
      776     7168    4                   FOUNDPGS = FOUNDPGS + 1;
      777     7169    4                   B$PS1$->VLP$PGLIST_V.PGLIST(FOUNDPGS) = PPNO;
      778     7170    4                 END;
      779     7171    3             PPNO = MM$PPUT.PPNO(PPNO);
      780     7172    3           END;
      781     7173                %UNLOCK(G=MM_LOCK);
      782     7176    2           B$PS1$->VLP$PGLIST_V.NPAGES = FOUNDPGS;
      783     7177    2           RETURN;
      784     7178    2   END MMP$GBPL;
      785     7179                                                /**/
      786     7180                                                /**/
      787     7181        /******************************************/
      788     7182        /*     Process M$MPL and M$UMPL pmmes     */
      789     7183        /******************************************/
      790     7184    1   MMP$PL: PROC;
      791     7185    2   DCL NPAGES UBIN;
      792     7186    2   DCL PPNO UBIN;
      793     7187    2   DCL I SBIN;
      794     7188        /**/
      795     7189        %VLP$PGLIST_V;
      796     7192    2           NPAGES = B$PS0$->VLP$PGLIST_V.NPAGES;
      797     7193                %LOCK(G=MM_LOCK);
      798     7196    3           DO I = 1 TO NPAGES;
      799     7197    3             PPNO = B$PS0$->VLP$PGLIST_V.PGLIST(I);
      800     7198    3             IF (PPNO > MM_PCORE) OR (MM$PPUT.STOLEN(PPNO) AND MM$PPUT.USER#(PPNO)=511)
              7198                      THEN
      801     7199    4                 DO;
      802     7200                        %UNLOCK(G=MM_LOCK);
      803     7203                        %ERRSETN(CODE=%E$BADPP);
      804     7206    4                   RETURN;
      805     7207    4                 END;
      806     7208    3             IF X0VAL = %C$MPL#
      807     7209    4               THEN DO;
      808     7210    4                   MM_IN_TEST = MM_IN_TEST + 1;
      809     7211    4                   MM$PPUT.IN_TEST(PPNO) = %TRUE; /* Mark pg in test             */
      810     7212    4                 END;
PL6.E3A0      #001=MMP$PMME File=MMP$PMME.:E05TSI                                WED 07/30/97 03:23 Page:23   
      811     7213    4               ELSE DO;
      812     7214    4                   MM_IN_TEST = MM_IN_TEST - 1;
      813     7215    4                   MM$PPUT.IN_TEST(PPNO) = %FALSE; /* Mark pg out of test        */
      814     7216    4                 END;
      815     7217    3           END;
      816     7218                %UNLOCK(G=MM_LOCK);
      817     7221    2           RETURN;
      818     7222    2   END MMP$PL;
      819     7223                                                /**/
      820     7224                                                /**/
      821     7225        /***********************************************/
      822     7226        /*      Process the M$PAS pmme                 */
      823     7227        /***********************************************/
      824     7228    1   MMP$PAS: PROC;
      825     7229    2   DCL ASBYTES UBIN;
      826     7230    2   DCL 1 DESC BASED DALIGNED,
      827     7231    2         2 * BIT(32),
      828     7232    2         2 TYPE UBIN(4) UNAL,
      829     7233    2         2 BASE UBIN;
      830     7234    2   DCL B$USERHJIT$ PTR SYMREF READONLY;
      831     7235        /**/
      832     7236        %FPT$PAS_V;
      833     7239        /**/
      834     7240    2           CALL UDN$MAGIC;
      835     7241    2           IF B$SS.ASR.BOUND = 0
      836     7242    3             THEN DO;
      837     7243                      %ERRSETN(CODE=%E$ASE);
      838     7246    3                 RETURN;
      839     7247    3               END;
      840     7248        /*E*   ERROR:   MMP-E$ASE-0
      841     7249               MESSAGE:  Your Argument/Parameter Stack is empty.
      842     7250               MESSAGE1:  A call was made to M$PAS when no descriptors
      843     7251                          are currently on the Argument Stack.
      844     7252        */
      845     7253
      846     7254    2           B$SS.ASR.BOUND = B$SS.ASR.BOUND+1;
      847     7255    2           ASBYTES=8;
PL6.E3A0      #001=MMP$PMME File=MMP$PMME.:E05TSI                                WED 07/30/97 03:23 Page:24   
      848     7256    2           CALL HFF$NILERASE(0) ALTRET(JUST_ONE);
      849     7257    2           ASBYTES=B$PS0$->FPT$PAS_V.DESCRIPTORS *8;
      850     7258    2   JUST_ONE: ;
      851     7259    2           IF B$SS.ASR.BOUND < ASBYTES
      852     7260    2             THEN ASBYTES = B$SS.ASR.BOUND;
      853     7261
      854     7262    2           B$SS.ASR.BOUND = B$SS.ASR.BOUND - ASBYTES;
      855     7263    2           ASBYTES = B$SS.ASR.BOUND + B$SS.ASR.BASE;
              7263                    /* First type 1 base not allowed */
      856     7264    2           IF B$SS.ASR.BOUND ~= 0
      857     7265    2             THEN B$SS.ASR.BOUND = B$SS.ASR.BOUND -1;
      858     7266    2             ELSE B$SS.ASR.FLAGS = B$SS.ASR.FLAGS &~ %DSNULL;
      859     7267
      860     7268    2           CALL CHKAS (B$SS.DR0, B$SS.X0);
      861     7269    2           CALL CHKAS (PINCRC (B$USERHJIT$,AS_BASE%-ULS_BASE%)->DESC,
      862     7270    2             PINCRC (B$USERHJIT$,ASBYTES-ULS_BASE%)->DESC);
      863     7271    2           RETURN;
      864     7272
      865     7273    2   CHKAS:  PROC (S,E);
      866     7274    3   DCL S UBIN;
      867     7275    3   DCL E UBIN;
      868     7276    3   DCL S$ PTR;
      869     7277
      870     7278    3           S$ = ADDR(S);
      871     7279    4           DO WHILE (S$ < ADDR(E));
      872     7280    4             IF S$->DESC.TYPE=1 AND S$->DESC.BASE>=ASBYTES
      873     7281    4               THEN
      874     7282    4               S$ ->DESC = '0'B;
      875     7283    4             S$ = PINCRW (S$,2);
      876     7284    4           END;
      877     7285    3   END CHKAS;
      878     7286    2   END MMP$PAS;
      879     7287
      880     7288                                                /**/
      881     7289                                                /**/
      882     7290    1   END MMP$PMME;

PL6.E3A0      #001=MMP$PMME File=MMP$PMME.:E05TSI                                WED 07/30/97 03:23 Page:25   
--  Include file information  --

   ES_CNTRL_R.:E05TOU  cannot be made into a system file and is referenced.
   UD_EQU_E.:E05TOU  is referenced.
   JG_GHOSTS_C.:E05TOU  is referenced.
   MM_CNTRL_R.:E05TOU  cannot be made into a system file and is referenced.
   HF_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   HF_LOCK_C.:E05TOU  cannot be made into a system file and is referenced.
   M_ERRSET_C.:E05TOU  is referenced.
   M_ERRORS_C.:E05TOU  is referenced.
   HF_ERRORS_C.:E05TOU  is referenced.
   F$DCB.:E05TOU  cannot be made into a system file and is referenced.
   B_MLSMAC_C.:E05TOU  is referenced.
   B_ULSMAC_C.:E05TOU  is referenced.
   B_LSDATA_C.:E05TOU  cannot be made into a system file and is referenced.
   B_MAGIC_C.:E05TOU  is referenced.
   B$SS.:E05TOU  cannot be made into a system file and is referenced.
   B$MAP.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  is referenced.
   M$JIT_C.:E05TOU  cannot be made into a system file and is referenced.
   MM_MACRO_M.:E05TOU  is referenced.
   B_STRINGS_C.:E05TOU  is referenced.
   MM$SYSGEN.:E05TOU  is referenced.
   M_INFO_C.:E05TOU  is referenced.
   MM_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   B_SEGIDS_C.:E05TOU  is referenced.
   B_MACROS_C.:E05TOU  is referenced.
   MM$CP6V_C.:E05TOU  is referenced.
      No diagnostics issued in procedure MMP$PMME.

   Procedure MMP$PMME requires 1414 words for executable code.
   Procedure MMP$PMME requires 20 words of local(AUTO) storage.

    No errors detected in file MMP$PMME.:E05TSI    .
PL6.E3A0      #001=MMP$PMME File=MMP$PMME.:E05TSI                                WED 07/30/97 03:23 Page:26   

PL6.E3A0      #001=MMP$PMME File=MMP$PMME.:E05TSI                                WED 07/30/97 03:23 Page:27   

 Object Unit name= MMP$PMME                                   File name= MMP$PMME.:E05TOU
 UTS= JUL 30 '97 03:23:12.56 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0  RoData even  UTS      2      2  MMP$PMME
    1   Proc  even  none  1414   2606  MMP$PMME
    2  RoData even  none    15     17  MMP$PMME

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     1      0   yes            yes      Std        2  MMP$PMME
PL6.E3A0      #001=MMP$PMME File=MMP$PMME.:E05TSI                                WED 07/30/97 03:23 Page:28   

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       0 MMV$VIRTUAL
 yes     yes           Std       1 HFF$NILERASE
 yes     yes           Std       4 MMH$FDS
 yes     yes           Std       5 MMH$GDS
 yes     yes           Std       5 MMH$SMPRT
 yes     yes           Std       4 MMI$GDP
 yes     yes           Std       4 MMI$FDP
 yes     yes           Std       2 MMV$GET
 yes     yes           Std       2 MMV$RLS
         yes           Std       2 JSN$BLNK2
 yes     yes           Std       5 MMG$SGVP
 yes     yes           Std       5 MMG$SFVP
 yes     yes           Std       2 MMB$GPP
 yes     yes           Std       2 MMD$STLPP
 yes     yes           Std       1 MMB$FPP
 yes     yes           Std       2 MMD$RSPP
 yes     yes           Std       3 MMV$CVM
 yes     yes           Std       4 MME$CVM
 yes     yes           Std       4 MME$SMPRT
         yes           Std       3 HFC$ASSOCCLR
 yes     yes           Std       4 MMI$GDDL
 yes     yes           Std       3 MMK$MAKUSER
 yes     yes           Std       3 MMM$ACCESS
 yes     yes           Std       3 MMM$NEW_DR
         yes           Std       1 HFC$LOCK
         yes           Std       5 MM0$FINDPG
         yes           Std       1 HFC$UNLOCK
 yes     yes           Std       1 MMB$GOODPP
 yes     yes           Std       1 MMB$BADPP
         yes           Std       0 UDN$MAGIC
                       nStd      0 X66_AUTO_2
                       Std       0 B_CONSPOOL_D
PL6.E3A0      #001=MMP$PMME File=MMP$PMME.:E05TSI                                WED 07/30/97 03:23 Page:29   
                       nStd      0 X66_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     B$LS$                            r    B$JIT$                           r    B$UPT$
r    B$USERLS$                        r    B$PPUT$                          r    B$IPHYMAP$
r    B$PS0$                           r    B$PS1$                           r    MM_CGQD$
     FMC_CACHEPGCNT                        MM_LOCK                               MM_FPPC
     MM_SPPC                               MM_BPPH                               MM_BPPT
     MM_BPPC                               MM_IN_TEST                            MM_AUTO
r    MM_BYP$                               MM_PCORE                              MM_RSVP
     MM_HELD                               MM_FPMC                          r    MM_LSPTRS$
     B_MPT                                 HW_WSQ0PT                             MM_NOUSTHRESH
     ES_CLEARMEM                           S_CUN                            r    B$USERHJIT$
     B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     NULLSID                               ROSID                                 ISSID
PL6.E3A0      #001=MMP$PMME File=MMP$PMME.:E05TSI                                WED 07/30/97 03:23 Page:30   


        1        1        /*M* Interface routines for supporting MM PMME's.                  */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* PLM=8,IND=2,THI=2,ENU=2,CSU=2,DTI=4,DCI=4,ECU=4,AND */
        8        8        MMP$PMME: PROC(X0VAL,EWSQ);

      8  1 000000   000000 700200 xent  MMP$PMME     TSX0  ! X66_AUTO_2
         1 000001   000024 000002                    ZERO    20,2

        9        9                                                /**/
       10       10    1   DCL X0VAL SBIN;                    /* The x0 pmme code - minus the fcg part   */
       11       11    1   DCL EWSQ SBIN;                     /* Effective wsq of process issuing pmme   */
       12       12                                                /**/
       13       13    1   DCL   B$LS$ PTR SYMREF;
       14       14    1   DCL B$JIT$ PTR SYMREF READONLY;         /* The canned jit pointer             */
       15       15    1   DCL B$UPT$ PTR SYMREF READONLY;         /* The canned jit pointer             */
       16       16    1   DCL B$USERLS$ PTR SYMREF READONLY;
       17       17    1   DCL B$PPUT$ PTR SYMREF READONLY;
       18       18    1   DCL B$IPHYMAP$ PTR SYMREF READONLY;
       19       19    1   DCL B$PS0$ PTR SYMREF READONLY;
       20       20    1   DCL B$PS1$ PTR SYMREF READONLY;
       21       21    1   DCL B$PS2$ PTR SYMREF READONLY;
       22       22    1   DCL S_CUN SBIN SYMREF;                  /* Current user number                */
       23       23    1   DCL MM_CGQD$ PTR SYMREF READONLY;
       24       24    1   DCL FMC_CACHEPGCNT SBIN SYMREF;
       25       25    1   DCL ELS$ PTR;
       26       26                                                /**/
       27       27    1   DCL MMH$GDS ENTRY(5) ALTRET;
       28       28    1   DCL MMH$FDS ENTRY(4) ALTRET;
       29       29    1   DCL MMH$SMPRT ENTRY(5) ALTRET;
       30       30    1   DCL MMD$STLPP ENTRY(2) ALTRET;          /* Routine to steal physical pages    */
       31       31    1   DCL MMD$RSPP ENTRY(2) ALTRET;           /* Routine to free stolen pages       */
       32       32    1   DCL MMB$GPP ENTRY(2)ALTRET;             /* Routine to get physical pages      */
PL6.E3A0      #001=MMP$PMME File=MMP$PMME.:E05TSI                                WED 07/30/97 03:23 Page:31   
       33       33    1   DCL MMB$FPP ENTRY(1) ALTRET;            /* Routine to free physical pages     */
       34       34    1   DCL MMG$SGVP ENTRY(5) ALTRET;           /* Get seg-relative V.P.              */
       35       35    1   DCL MMG$SFVP ENTRY(5) ALTRET;           /* Free seg-relative V.P.             */
       36       36    1   DCL MMI$GDP ENTRY(4) ALTRET;            /* Get dynamic pages                  */
       37       37    1   DCL MMI$FDP ENTRY(4) ALTRET;            /* Free dynamic pages                 */
       38       38    1   DCL MME$CVM ENTRY(4) ALTRET;            /* Change virtual map routine         */
       39       39    1   DCL MME$SMPRT ENTRY(4) ALTRET;          /* Set memory protection              */
       40       40    1   DCL MMI$GDDL ENTRY(4) ALTRET;           /* Get dynamic data limits            */
       41       41    1   DCL MMK$MAKUSER ENTRY(3) ALTRET;        /* Make new user                      */
       42       42    1   DCL MMM$ACCESS ENTRY(3) ALTRET;         /* Put mon. Descriptor in user ls     */
       43       43    1   DCL MMM$NEW_DR ENTRY(3) ALTRET;
       44       44    1   DCL MMB$BADPP ENTRY(1) ALTRET;
       45       45    1   DCL MMB$GOODPP ENTRY(1) ALTRET;
       46       46    1   DCL MMV$CVM ENTRY(3) ALTRET;
       47       47    1   DCL MMV$GET ENTRY(2) ALTRET;
       48       48    1   DCL MMV$RLS ENTRY(2) ALTRET;
       49       49    1   DCL MMV$VIRTUAL ENTRY;
       50       50    1   DCL JSN$BLNK2 ENTRY(2);
       51       51    1   DCL HFC$ASSOCCLR ENTRY(3);
       52       52    1   DCL HFF$NILERASE ENTRY(1) ALTRET;       /* Test for null or erase descriptor  */
       53       53    1   DCL UDN$MAGIC ENTRY;
       54       54                                                /**/
       55       55        /* Definitions of the memory management pmme CODES... */
       56       56                                                /**/
       57       57        %INCLUDE MM$CP6V_C;                     /* Based defs for mm fpt's            */
       58      125        %INCLUDE B_MACROS_C;                    /* System utility macros              */
       59      236        %INCLUDE B_SEGIDS_C;                    /* Segid definitions                  */
       60      775        %INCLUDE MM_DATA_R;
       61     1295        %INCLUDE M$JIT_C;                       /* Mm jit definitions                 */
       62     1815        %INCLUDE B$MAP;                         /* Based page table definition        */
       63     1914        %INCLUDE B$SS;
       64     2093        %INCLUDE B_MAGIC_C;
       65     2211        %INCLUDE B_LSDATA_C;
       66     5417        %INCLUDE F$DCB;
       67     5466        %B_MPT (FPTN=B_MPT,STCLASS=SYMREF);
       68     5559        %INCLUDE HF_ERRORS_C;
       69     5644        %INCLUDE M_ERRORS_C;
PL6.E3A0      #001=MMP$PMME File=MMP$PMME.:E05TSI                                WED 07/30/97 03:23 Page:32   
       70     5708        %INCLUDE M_ERRSET_C;
       71     5732        %INCLUDE HF_LOCK_C;
       72     5746        %INCLUDE HF_DATA_R;
       73     5789        %INCLUDE MM_CNTRL_R;
       74     5799        %INCLUDE JG_GHOSTS_C;
       75     5889        %INCLUDE UD_EQU_E;
       76     6278        %INCLUDE ES_CNTRL_R;
       77     6290                                                /**/
       78     6291        %MM$CGQD (STCLASS="BASED(MM_CGQD$)");
       79     6350        %MODERR(MODULE='20'O);
       80     6358        %VECTOR(STCLASS="BASED ALIGNED");
       81     6368        %SUB B$JIT = B$JIT$->B$JIT;             /* Ease the typing a bit              */
       82     6369        %SUB MM$PPUT = B$PPUT$->MM$PPUT;
       83     6370        %SUB B$SS=B_MPT.SS$->B$SS;
       84     6371                                                /**/
       85     6372                                                /**/
       86     6373        /* Call the appropriate pmme interface routine based on pmme code */
       87     6374    2           DO CASE(X0VAL);

   6374  1 000002   200003 470500                    LDP0    @X0VAL,,AUTO
         1 000003   000000 235100                    LDA     0,,PR0
         1 000004   000027 115007                    CMPA    23,DL
         1 000005   000007 602005 1                  TNC     s:6374+5,AL
         1 000006   000143 710000 1                  TRA     s:6424
         1 000007   000036 710000 1                  TRA     s:6376
         1 000010   000041 710000 1                  TRA     s:6378
         1 000011   000044 710000 1                  TRA     s:6380
         1 000012   000047 710000 1                  TRA     s:6382
         1 000013   000052 710000 1                  TRA     s:6384
         1 000014   000055 710000 1                  TRA     s:6386
         1 000015   000060 710000 1                  TRA     s:6388
         1 000016   000063 710000 1                  TRA     s:6390
         1 000017   000066 710000 1                  TRA     s:6392
         1 000020   000071 710000 1                  TRA     s:6394
         1 000021   000074 710000 1                  TRA     s:6396
         1 000022   000077 710000 1                  TRA     s:6398
         1 000023   000102 710000 1                  TRA     s:6400
PL6.E3A0      #001=MMP$PMME File=MMP$PMME.:E05TSI                                WED 07/30/97 03:23 Page:33   
         1 000024   000105 710000 1                  TRA     s:6402
         1 000025   000110 710000 1                  TRA     s:6404
         1 000026   000113 710000 1                  TRA     s:6406
         1 000027   000116 710000 1                  TRA     s:6408
         1 000030   000121 710000 1                  TRA     s:6410
         1 000031   000124 710000 1                  TRA     s:6412
         1 000032   000127 710000 1                  TRA     s:6414
         1 000033   000132 710000 1                  TRA     s:6416
         1 000034   000135 710000 1                  TRA     s:6418
         1 000035   000140 710000 1                  TRA     s:6421

       88     6375    2             CASE(%C$MAKUSER#);

       89     6376    2               CALL MMP$MAKE;              /* M$MAKUSER                          */

   6376  1 000036   002005 701000 1                  TSX1    MMP$MAKE
         1 000037   000000 011000                    NOP     0
         1 000040   000143 710000 1                  TRA     s:6424

       90     6377    2             CASE(%C$GDS#);

       91     6378    2               CALL MMP$DS;                /* M$GDS                              */

   6378  1 000041   000144 701000 1                  TSX1    MMP$DS
         1 000042   000000 011000                    NOP     0
         1 000043   000143 710000 1                  TRA     s:6424

       92     6379    2             CASE(%C$FDS#);

       93     6380    2               CALL MMP$DS;                /* M$FDS                              */

   6380  1 000044   000144 701000 1                  TSX1    MMP$DS
         1 000045   000000 011000                    NOP     0
         1 000046   000143 710000 1                  TRA     s:6424

       94     6381    2             CASE(%C$GDP#);

PL6.E3A0      #001=MMP$PMME File=MMP$PMME.:E05TSI                                WED 07/30/97 03:23 Page:34   
       95     6382    2               CALL MMP$DP;                /* M$GDP                              */

   6382  1 000047   000624 701000 1                  TSX1    MMP$DP
         1 000050   000000 011000                    NOP     0
         1 000051   000143 710000 1                  TRA     s:6424

       96     6383    2             CASE(%C$FDP#);

       97     6384    2               CALL MMP$DP;                /* M$FDP                              */

   6384  1 000052   000624 701000 1                  TSX1    MMP$DP
         1 000053   000000 011000                    NOP     0
         1 000054   000143 710000 1                  TRA     s:6424

       98     6385    2             CASE(%C$GVP#);

       99     6386    2               CALL MMP$VP;                /* M$GVP                              */

   6386  1 000055   000743 701000 1                  TSX1    MMP$VP
         1 000056   000000 011000                    NOP     0
         1 000057   000143 710000 1                  TRA     s:6424

      100     6387    2             CASE(%C$FVP#);

      101     6388    2               CALL MMP$VP;                /* M$FVP                              */

   6388  1 000060   000743 701000 1                  TSX1    MMP$VP
         1 000061   000000 011000                    NOP     0
         1 000062   000143 710000 1                  TRA     s:6424

      102     6389    2             CASE(%C$STLPP#);

      103     6390    2               CALL MMP$STLPP;             /* M$STLPP                            */

   6390  1 000063   001144 701000 1                  TSX1    MMP$STLPP
         1 000064   000000 011000                    NOP     0
         1 000065   000143 710000 1                  TRA     s:6424
PL6.E3A0      #001=MMP$PMME File=MMP$PMME.:E05TSI                                WED 07/30/97 03:23 Page:35   

      104     6391    2             CASE(%C$RSPP#);

      105     6392    2               CALL MMP$RSPP;              /* M$RSPP                             */

   6392  1 000066   001243 701000 1                  TSX1    MMP$RSPP
         1 000067   000000 011000                    NOP     0
         1 000070   000143 710000 1                  TRA     s:6424

      106     6393    2             CASE(%C$CVM#);

      107     6394    2               CALL MMP$CVM;               /* M$CVM                              */

   6394  1 000071   001307 701000 1                  TSX1    MMP$CVM
         1 000072   000000 011000                    NOP     0
         1 000073   000143 710000 1                  TRA     s:6424

      108     6395    2             CASE(%C$SMPRT#);

      109     6396    2               CALL MMP$SMPRT;             /* M$SMPRT                            */

   6396  1 000074   001475 701000 1                  TSX1    MMP$SMPRT
         1 000075   000000 011000                    NOP     0
         1 000076   000143 710000 1                  TRA     s:6424

      110     6397    2             CASE(%C$SSC#);

      111     6398    2               CALL MMP$SSC;               /* M$SSC                              */

   6398  1 000077   001566 701000 1                  TSX1    MMP$SSC
         1 000100   000000 011000                    NOP     0
         1 000101   000143 710000 1                  TRA     s:6424

      112     6399    2             CASE(%C$GDDL#);

      113     6400    2               CALL MMP$GDDL;              /* M$GDDL                             */

PL6.E3A0      #001=MMP$PMME File=MMP$PMME.:E05TSI                                WED 07/30/97 03:23 Page:36   
   6400  1 000102   001746 701000 1                  TSX1    MMP$GDDL
         1 000103   000000 011000                    NOP     0
         1 000104   000143 710000 1                  TRA     s:6424

      114     6401    2             CASE(%C$SAD#);

      115     6402    2               CALL MMP$SAD;               /* M$SAD                              */

   6402  1 000105   002031 701000 1                  TSX1    MMP$SAD
         1 000106   000000 011000                    NOP     0
         1 000107   000143 710000 1                  TRA     s:6424

      116     6403    2             CASE(%C$STD#);

      117     6404    2               CALL MMP$STD;               /* M$STD                              */

   6404  1 000110   002056 701000 1                  TSX1    MMP$STD
         1 000111   000000 011000                    NOP     0
         1 000112   000143 710000 1                  TRA     s:6424

      118     6405    2             CASE(%C$BADPP#);

      119     6406    2               CALL MMP$TDPP;              /* M$BADPP                            */

   6406  1 000113   002077 701000 1                  TSX1    MMP$TDPP
         1 000114   000000 011000                    NOP     0
         1 000115   000143 710000 1                  TRA     s:6424

      120     6407    2             CASE(%C$GOODPP#);

      121     6408    2               CALL MMP$TDPP;              /* M$GOODPP                           */

   6408  1 000116   002077 701000 1                  TSX1    MMP$TDPP
         1 000117   000000 011000                    NOP     0
         1 000120   000143 710000 1                  TRA     s:6424

      122     6409    2             CASE(%C$GBPL#);
PL6.E3A0      #001=MMP$PMME File=MMP$PMME.:E05TSI                                WED 07/30/97 03:23 Page:37   

      123     6410    2               CALL MMP$GBPL;              /* M$GBPL                             */

   6410  1 000121   002245 701000 1                  TSX1    MMP$GBPL
         1 000122   000000 011000                    NOP     0
         1 000123   000143 710000 1                  TRA     s:6424

      124     6411    2             CASE(%C$MPL#);

      125     6412    2               CALL MMP$PL;                /* M$MPL                              */

   6412  1 000124   002327 701000 1                  TSX1    MMP$PL
         1 000125   000000 011000                    NOP     0
         1 000126   000143 710000 1                  TRA     s:6424

      126     6413    2             CASE(%C$UMPL#);

      127     6414    2               CALL MMP$PL;                /* M$UMPL                             */

   6414  1 000127   002327 701000 1                  TSX1    MMP$PL
         1 000130   000000 011000                    NOP     0
         1 000131   000143 710000 1                  TRA     s:6424

      128     6415    2             CASE(%C$PDS#);

      129     6416    2               CALL MMP$PDS;               /* M$PDS                              */

   6416  1 000132   000533 701000 1                  TSX1    MMP$PDS
         1 000133   000000 011000                    NOP     0
         1 000134   000143 710000 1                  TRA     s:6424

      130     6417    2             CASE(%C$PAS#);

      131     6418    2               CALL MMP$PAS;               /* M$PAS                              */

   6418  1 000135   002432 701000 1                  TSX1    MMP$PAS
         1 000136   000000 011000                    NOP     0
PL6.E3A0      #001=MMP$PMME File=MMP$PMME.:E05TSI                                WED 07/30/97 03:23 Page:38   
         1 000137   000143 710000 1                  TRA     s:6424

      132     6419
      133     6420    2             CASE(%C$VIRTUAL#);

      134     6421    2               CALL MMV$VIRTUAL;           /* M$VIRTUAL                          */

   6421  1 000140   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 000141   000000 701000 xent               TSX1    MMV$VIRTUAL
         1 000142   000000 011000                    NOP     0

      135     6422
      136     6423    2           END;

      137     6424    1           RETURN;

   6424  1 000143   000000 702200 xent               TSX2  ! X66_ARET

      138     6425                                                /**/
      139     6426                                                /**/
      140     6427        /* Now for the individual pmme interface ROUTINES... */
      141     6428                                                /**/
      142     6429        /**************************************************/
      143     6430        /*     Process M$GDS and M$FDS pmme's             */
      144     6431        /**************************************************/
      145     6432    1   MMP$DS: PROC;

   6432  1 000144   200006 741300       MMP$DS       STX1  ! ELS$+1,,AUTO

      146     6433    2   DCL WSIZE UBIN;
      147     6434    2   DCL 1 F_WSIZE REDEF WSIZE,
      148     6435    2         2 FREE_FLAG BIT(1) UNAL,
      149     6436    2         2 VIRTONLY BIT(1) UNAL,
      150     6437    2         2 * UBIN(34) UNAL;
      151     6438    2   DCL SEGID UBIN;
      152     6439    2   DCL 1 BSEGID REDEF SEGID,
      153     6440    2         2 * UBIN(24) UNAL,
PL6.E3A0      #001=MMP$PMME File=MMP$PMME.:E05TSI                                WED 07/30/97 03:23 Page:39   
      154     6441    2         2 SEGBITS BIT(12) UNAL;
      155     6442    2   DCL ERR UBIN;
      156     6443    2   DCL PROT UBIN;
      157     6444    2   DCL FLAG BIT(36);
      158     6445    2   DCL START UBIN;
      159     6446                                                /**/
      160     6447        %FPT$GDS_V;
      161     6451                                                /**/
      162     6452    2           WSIZE = B$PS0$->FPT$GDS_V.SEGSIZE; /* Get # of words to get/free      */

   6452  1 000145   000000 470400 xsym               LDP0    B$PS0$
         1 000146   000000 236100                    LDQ     0,,PR0
         1 000147   777777 376007                    ANQ     -1,DL
         1 000150   200007 756100                    STQ     WSIZE,,AUTO

      163     6453    2           IF WSIZE > 256*1024 THEN

   6453  1 000151   000000 116000 2                  CMPQ    0
         1 000152   000166 602000 1                  TNC     s:6464

      164     6454    3               DO;                         /* Illegal size passed                */

      165     6455        /*E*   ERROR: MMP-E$SEGSIZE-0
      166     6456               MESSAGE: Illegal size specified.                            */
      167     6457                      %ERRSETN(CODE=%E$SEGSIZE);

   6458  1 000153   001130 236007                    LDQ     600,DL
         1 000154   000003 736000                    QLS     3
         1 000155   000000 276000 0                  ORQ     MMERR
         1 000156   000000 471400 xsym               LDP1    B$JIT$
         1 000157   100012 756100                    STQ     10,,PR1

      168     6460    3                 B$PS1$->B$VECTOR = VECTOR(NIL);

   6460  1 000160   000000 473400 xsym               LDP3    B$PS1$
         1 000161   000002 237000 2                  LDAQ    2
         1 000162   300000 755100                    STA     0,,PR3
PL6.E3A0      #001=MMP$PMME File=MMP$PMME.:E05TSI                                WED 07/30/97 03:23 Page:40   
         1 000163   300001 756100                    STQ     1,,PR3

      169     6461    3                 RETURN;

   6461  1 000164   200006 221300                    LDX1  ! ELS$+1,,AUTO
         1 000165   000001 702211                    TSX2  ! 1,X1

      170     6462    3               END;
      171     6463                %FINDLS (P$ = ELS$ , WSQ = EWSQ);

   6464  1 000166   200004 471500                    LDP1    @EWSQ,,AUTO
         1 000167   100000 720100                    LXL0    0,,PR1
         1 000170   000000 236010 xsym               LDQ     MM_LSPTRS$,X0
         1 000171   200005 756100                    STQ     ELS$,,AUTO

      172     6466    2           IF B$PS0$->FPT$GDS_V.AUTOSEG OR B$PS0$->FPT$GDS_V.COMMON

   6466  1 000172   000000 234100                    SZN     0,,PR0
         1 000173   000177 604000 1                  TMI     s:6468
         1 000174   000000 236100                    LDQ     0,,PR0
         1 000175   200000 316003                    CANQ    65536,DU
         1 000176   000237 600000 1                  TZE     s:6487

      173     6467    3             THEN DO;                      /* Do if common or auto was specified */

      174     6468    3                 IF B$PS0$->FPT$GDS_V.AUTOSEG AND B$PS0$->FPT$GDS_V.COMMON THEN

   6468  1 000177   000000 234100                    SZN     0,,PR0
         1 000200   000223 605000 1                  TPL     s:6479
         1 000201   000000 236100                    LDQ     0,,PR0
         1 000202   200000 316003                    CANQ    65536,DU
         1 000203   000223 600000 1                  TZE     s:6479

      175     6469    4                     DO;

      176     6470        /*E*   ERROR: MMP-E$CONFUSED-0
      177     6471               MESSAGE: Both COMMON and AUTO were specified.               */
PL6.E3A0      #001=MMP$PMME File=MMP$PMME.:E05TSI                                WED 07/30/97 03:23 Page:41   
      178     6472                            %ERRSETN(CODE=%E$CONFUSED);

   6473  1 000204   001131 236007                    LDQ     601,DL
         1 000205   000003 736000                    QLS     3
         1 000206   000000 276000 0                  ORQ     MMERR
         1 000207   000000 473400 xsym               LDP3    B$JIT$
         1 000210   300012 756100                    STQ     10,,PR3

      179     6475    4                       CALL HFF$NILERASE(1) ALTRET(ERR2NR);

   6475  1 000211   000001 630400 2                  EPPR0   1
         1 000212   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000213   000000 701000 xent               TSX1    HFF$NILERASE
         1 000214   000221 702000 1                  TSX2    ERR2NR

      180     6476    4                       B$PS1$->B$VECTOR = VECTOR(NIL);

   6476  1 000215   000000 470400 xsym               LDP0    B$PS1$
         1 000216   000002 237000 2                  LDAQ    2
         1 000217   000000 755100                    STA     0,,PR0
         1 000220   000001 756100                    STQ     1,,PR0

      181     6477    4   ERR2NR:             RETURN;

   6477  1 000221   200006 221300       ERR2NR       LDX1  ! ELS$+1,,AUTO
         1 000222   000001 702211                    TSX2  ! 1,X1

      182     6478    4                     END;
      183     6479    3                 IF B$PS0$->FPT$GDS_V.AUTOSEG

   6479  1 000223   000000 234100                    SZN     0,,PR0
         1 000224   000234 605000 1                  TPL     s:6484

      184     6480    4                   THEN DO;

      185     6481    4                       SEGID = BITBIN(%AUTOSID);

PL6.E3A0      #001=MMP$PMME File=MMP$PMME.:E05TSI                                WED 07/30/97 03:23 Page:42   
   6481  1 000225   006004 235007                    LDA     3076,DL
         1 000226   200010 755100                    STA     SEGID,,AUTO

      186     6482    4                       B$JIT.JUNK2 = B$JIT.JUNK2 | %JJ2_SKIP_QEND#;

   6482  1 000227   000000 473400 xsym               LDP3    B$JIT$
         1 000230   300321 220100                    LDX0    209,,PR3
         1 000231   000200 260003                    ORX0    128,DU
         1 000232   300321 740100                    STX0    209,,PR3

      187     6483    4                     END;

   6483  1 000233   000335 710000 1                  TRA     s:6526

      188     6484    3                   ELSE SEGID = BITBIN(%COMMONSID);

   6484  1 000234   006005 235007                    LDA     3077,DL
         1 000235   200010 755100                    STA     SEGID,,AUTO

      189     6485    3               END;

   6485  1 000236   000335 710000 1                  TRA     s:6526

      190     6486    3             ELSE DO;                      /* Do if auto or common not specified */

      191     6487    3                 SEGID = B$PS1$->B$VECTOR.SEGID;

   6487  1 000237   000000 473400 xsym               LDP3    B$PS1$
         1 000240   300001 236100                    LDQ     1,,PR3
         1 000241   007777 376007                    ANQ     4095,DL
         1 000242   200010 756100                    STQ     SEGID,,AUTO

      192     6488    3                 IF (SEGID = 0) OR (SEGID = BITBIN(%NULLSID)) THEN

   6488  1 000243   000246 600000 1                  TZE     s:6490
         1 000244   006014 116007                    CMPQ    3084,DL
         1 000245   000335 601000 1                  TNZ     s:6526
PL6.E3A0      #001=MMP$PMME File=MMP$PMME.:E05TSI                                WED 07/30/97 03:23 Page:43   

      193     6489    4                     DO;                   /* Do if were supposed to pick segid  */

      194     6490    4                       IF X0VAL = %C$FDS# THEN

   6490  1 000246   200003 474500                    LDP4    @X0VAL,,AUTO
         1 000247   400000 235100                    LDA     0,,PR4
         1 000250   000002 115007                    CMPA    2,DL
         1 000251   000265 601000 1                  TNZ     s:6503

      195     6491    5                           DO;             /* Can't pick segid on free           */

      196     6492    5   BADSEGID_ERR:             ;

   6492  1 000252                       BADSEGID_ERR null
      197     6493        /*E*   ERROR:  MMP-E$BADSEGID-0
      198     6494             MESSAGE: Illegal SEGID.
      199     6495             MESSAGE1: An illegal SEGID was specified on a call to M$FDS or
      200     6496                       M$GDS otherwise no SEGID was specified on M$FDS.  */
      201     6497                                  %ERRSETN(CODE=%E$BADSEGID);

   6498  1 000252   001132 236007                    LDQ     602,DL
         1 000253   000003 736000                    QLS     3
         1 000254   000000 276000 0                  ORQ     MMERR
         1 000255   000000 470400 xsym               LDP0    B$JIT$
         1 000256   000012 756100                    STQ     10,,PR0

      202     6500    5                             B$PS1$->B$VECTOR = VECTOR(NIL);

   6500  1 000257   000000 471400 xsym               LDP1    B$PS1$
         1 000260   000002 237000 2                  LDAQ    2
         1 000261   100000 755100                    STA     0,,PR1
         1 000262   100001 756100                    STQ     1,,PR1

      203     6501    5                             RETURN;

   6501  1 000263   200006 221300                    LDX1  ! ELS$+1,,AUTO
PL6.E3A0      #001=MMP$PMME File=MMP$PMME.:E05TSI                                WED 07/30/97 03:23 Page:44   
         1 000264   000001 702211                    TSX2  ! 1,X1

      204     6502    5                           END;
      205     6503    4                       IF EWSQ = %USERWSQ

   6503  1 000265   100000 235100                    LDA     0,,PR1
         1 000266   000010 115007                    CMPA    8,DL
         1 000267   000273 601000 1                  TNZ     s:6505

      206     6504    4                         THEN START = BITBIN(%DS3SID);

   6504  1 000270   006006 235007                    LDA     3078,DL
         1 000271   200014 755100                    STA     START,,AUTO
         1 000272   000275 710000 1                  TRA     s:6506

      207     6505    4                         ELSE START = BITBIN(%DS2SID);

   6505  1 000273   006005 235007                    LDA     3077,DL
         1 000274   200014 755100                    STA     START,,AUTO

      208     6506    5                       DO SEGID = START TO BITBIN(%DS8SID);

   6506  1 000275   200010 755100                    STA     SEGID,,AUTO
         1 000276   000314 710000 1                  TRA     s:6512+3

      209     6507    5                         IF

   6507  1 000277   200010 236100                    LDQ     SEGID,,AUTO
         1 000300   000030 736000                    QLS     24
         1 000301   177700 376003                    ANQ     65472,DU
         1 000302   000030 772000                    QRL     24
         1 000303   000001 736000                    QLS     1
         1 000304   200005 470500                    LDP0    ELS$,,AUTO
         1 000305   000000 236106                    LDQ     0,QL,PR0
         1 000306   000400 316007                    CANQ    256,DL
         1 000307   000335 600000 1                  TZE     s:6526

PL6.E3A0      #001=MMP$PMME File=MMP$PMME.:E05TSI                                WED 07/30/97 03:23 Page:45   
      210     6508                                %NOTNULL (LS$ = ELS$ , SEGID = "BSEGID.SEGBITS");

   6509  1 000310   000311 710000 1                  TRA     s:6512

      211     6511    5                           THEN; ELSE GOTO GOTSEG; /* Found a null one           */
      212     6512    5                       END;

   6512  1 000311   200010 235100                    LDA     SEGID,,AUTO
         1 000312   000001 035007                    ADLA    1,DL
         1 000313   200010 755100                    STA     SEGID,,AUTO
         1 000314   006014 115007                    CMPA    3084,DL
         1 000315   000277 602000 1                  TNC     s:6507

      213     6513        /*E*   ERROR:  MMP-E$ALLUSED-0
      214     6514               MESSAGE: All dynamic data segments have been allocated.     */
      215     6515                            %ERRSETN(CODE=%E$ALLUSED);

   6516  1 000316   001133 236007                    LDQ     603,DL
         1 000317   000003 736000                    QLS     3
         1 000320   000000 276000 0                  ORQ     MMERR
         1 000321   000000 470400 xsym               LDP0    B$JIT$
         1 000322   000012 756100                    STQ     10,,PR0

      216     6518    4                       CALL HFF$NILERASE(1) ALTRET(ERR4NR);

   6518  1 000323   000001 630400 2                  EPPR0   1
         1 000324   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000325   000000 701000 xent               TSX1    HFF$NILERASE
         1 000326   000333 702000 1                  TSX2    ERR4NR

      217     6519    4                       B$PS1$->B$VECTOR = VECTOR(NIL);

   6519  1 000327   000000 470400 xsym               LDP0    B$PS1$
         1 000330   000002 237000 2                  LDAQ    2
         1 000331   000000 755100                    STA     0,,PR0
         1 000332   000001 756100                    STQ     1,,PR0

PL6.E3A0      #001=MMP$PMME File=MMP$PMME.:E05TSI                                WED 07/30/97 03:23 Page:46   
      218     6520    4   ERR4NR:             RETURN;

   6520  1 000333   200006 221300       ERR4NR       LDX1  ! ELS$+1,,AUTO
         1 000334   000001 702211                    TSX2  ! 1,X1

      219     6521    4   GOTSEG:           END;
      220     6522    3               END;

      221     6523        /* We now have the requested size & the segid.  Only call for      */
      222     6524        /* Getting or freeing space if size>0, otherwise return the current*/
      223     6525        /* Segment size.                                                   */
      224     6526    2           IF (SEGID < BITBIN(%DS1SID)) OR (SEGID > BITBIN(%DS8SID))

   6526  1 000335   200010 235100                    LDA     SEGID,,AUTO
         1 000336   006004 115007                    CMPA    3076,DL
         1 000337   000252 602000 1                  TNC     BADSEGID_ERR
         1 000340   006014 115007                    CMPA    3084,DL
         1 000341   000252 603000 1                  TRC     BADSEGID_ERR

      225     6527    2             THEN GOTO BADSEGID_ERR;
      226     6528    2           IF WSIZE ~= 0 THEN

   6528  1 000342   200007 236100                    LDQ     WSIZE,,AUTO
         1 000343   000467 600000 1                  TZE     SET_RSLTS

      227     6529    3               DO;

      228     6530    3                 IF X0VAL = %C$GDS#

   6530  1 000344   200003 470500                    LDP0    @X0VAL,,AUTO
         1 000345   000000 235100                    LDA     0,,PR0
         1 000346   000001 115007                    CMPA    1,DL
         1 000347   000411 601000 1                  TNZ     s:6546

      229     6531    4                   THEN DO;

      230     6532        /* If 'FREE' is specified, then set the top bit of wsize so that   */
PL6.E3A0      #001=MMP$PMME File=MMP$PMME.:E05TSI                                WED 07/30/97 03:23 Page:47   
      231     6533        /* If we can't get all requested space, we won't get any.          */
      232     6534    4                       IF B$PS0$->FPT$GDS_V.FREE THEN

   6534  1 000350   000000 471400 xsym               LDP1    B$PS0$
         1 000351   100000 236100                    LDQ     0,,PR1
         1 000352   100000 316003                    CANQ    32768,DU
         1 000353   000356 600000 1                  TZE     s:6536

      233     6535    4                         F_WSIZE.FREE_FLAG = %TRUE;

   6535  1 000354   400000 236003                    LDQ     -131072,DU
         1 000355   200007 256100                    ORSQ    WSIZE,,AUTO

      234     6536    4                       IF B$PS0$->FPT$GDS_V.VIRTONLY THEN

   6536  1 000356   100000 236100                    LDQ     0,,PR1
         1 000357   040000 316003                    CANQ    16384,DU
         1 000360   000363 600000 1                  TZE     s:6540

      235     6537    4                         F_WSIZE.VIRTONLY = %TRUE;

   6537  1 000361   200000 236003                    LDQ     65536,DU
         1 000362   200007 256100                    ORSQ    WSIZE,,AUTO

      236     6538        /* Pickup the specified protection for the segment. If its zero,
      237     6539           (compiled pre-B00), then default it to read/write access.       */
      238     6540    4                       PROT = BITBIN(B$PS0$->FPT$GDS_V.PROTECTION);

   6540  1 000363   100000 236100                    LDQ     0,,PR1
         1 000364   000022 772000                    QRL     18
         1 000365   000777 376007                    ANQ     511,DL
         1 000366   200012 756100                    STQ     PROT,,AUTO

      239     6541    4                       IF PROT = 0 THEN PROT = BITBIN(%MM_DSWRITE#);

   6541  1 000367   000372 601000 1                  TNZ     s:6542

PL6.E3A0      #001=MMP$PMME File=MMP$PMME.:E05TSI                                WED 07/30/97 03:23 Page:48   
   6541  1 000370   000600 235007                    LDA     384,DL
         1 000371   200012 755100                    STA     PROT,,AUTO

      240     6542    4                       CALL MMH$GDS(EWSQ,SEGID,WSIZE,ERR,PROT) ALTRET(OOPS);

   6542  1 000372   200012 633500                    EPPR3   PROT,,AUTO
         1 000373   200022 453500                    STP3    SEGID+5,,AUTO
         1 000374   200011 634500                    EPPR4   ERR,,AUTO
         1 000375   200021 454500                    STP4    SEGID+4,,AUTO
         1 000376   200007 635500                    EPPR5   WSIZE,,AUTO
         1 000377   200020 455500                    STP5    SEGID+3,,AUTO
         1 000400   200010 636500                    EPPR6   SEGID,,AUTO
         1 000401   200017 456500                    STP6    SEGID+2,,AUTO
         1 000402   200004 236100                    LDQ     @EWSQ,,AUTO
         1 000403   200016 756100                    STQ     SEGID+1,,AUTO
         1 000404   200016 630500                    EPPR0   SEGID+1,,AUTO
         1 000405   000023 631400 xsym               EPPR1   B_VECTNIL+19
         1 000406   000000 701000 xent               TSX1    MMH$GDS
         1 000407   000451 702000 1                  TSX2    OOPS

      241     6543    4                     END;

   6543  1 000410   000450 710000 1                  TRA     s:6561

      242     6544    4                   ELSE DO;

      243     6545                            %GETFLG (LS$ = ELS$ , SEGID = "BSEGID.SEGBITS" , FLG = FLAG);

   6546  1 000411   200010 236100                    LDQ     SEGID,,AUTO
         1 000412   000030 736000                    QLS     24
         1 000413   177700 376003                    ANQ     65472,DU
         1 000414   000030 772000                    QRL     24
         1 000415   000001 736000                    QLS     1
         1 000416   200005 471500                    LDP1    ELS$,,AUTO
         1 000417   100000 236106                    LDQ     0,QL,PR1
         1 000420   000024 736000                    QLS     20
         1 000421   777000 376003                    ANQ     -512,DU
PL6.E3A0      #001=MMP$PMME File=MMP$PMME.:E05TSI                                WED 07/30/97 03:23 Page:49   
         1 000422   200013 756100                    STQ     FLAG,,AUTO

      244     6548    4                       IF (FLAG & %DSSHARED) THEN

   6548  1 000423   020000 376003                    ANQ     8192,DU
         1 000424   000434 600000 1                  TZE     s:6559

      245     6549    5                           DO;

      246     6550        /*E*    ERROR:  MMP-E$ITISSHARED-0
      247     6551                MESSAGE: You may not release a shared data segment with M$FDS.
      248     6552                MESSAGE1: A shared data segment must be released with the
      249     6553                        proper form of M$CLOSE.                            */
      250     6554                                  %ERRSETN(CODE=%E$ITISSHARED);

   6555  1 000425   001202 236007                    LDQ     642,DL
         1 000426   000003 736000                    QLS     3
         1 000427   000000 276000 0                  ORQ     MMERR
         1 000430   000000 473400 xsym               LDP3    B$JIT$
         1 000431   300012 756100                    STQ     10,,PR3

      251     6557    5                             RETURN;

   6557  1 000432   200006 221300                    LDX1  ! ELS$+1,,AUTO
         1 000433   000001 702211                    TSX2  ! 1,X1

      252     6558    5                           END;
      253     6559    4                       CALL MMH$FDS(EWSQ,SEGID,WSIZE,ERR) ALTRET(OOPS);

   6559  1 000434   200011 633500                    EPPR3   ERR,,AUTO
         1 000435   200021 453500                    STP3    SEGID+4,,AUTO
         1 000436   200007 634500                    EPPR4   WSIZE,,AUTO
         1 000437   200020 454500                    STP4    SEGID+3,,AUTO
         1 000440   200010 635500                    EPPR5   SEGID,,AUTO
         1 000441   200017 455500                    STP5    SEGID+2,,AUTO
         1 000442   200004 236100                    LDQ     @EWSQ,,AUTO
         1 000443   200016 756100                    STQ     SEGID+1,,AUTO
PL6.E3A0      #001=MMP$PMME File=MMP$PMME.:E05TSI                                WED 07/30/97 03:23 Page:50   
         1 000444   200016 630500                    EPPR0   SEGID+1,,AUTO
         1 000445   000022 631400 xsym               EPPR1   B_VECTNIL+18
         1 000446   000000 701000 xent               TSX1    MMH$FDS
         1 000447   000451 702000 1                  TSX2    OOPS

      254     6560    4                     END;

      255     6561    3                 GOTO SET_RSLTS;

   6561  1 000450   000467 710000 1                  TRA     SET_RSLTS

   6549  1 000451                       OOPS         null
      256     6562    3   OOPS:         ;
      257     6563                      %ERRSETN(CODE=ERR);

   6564  1 000451   200011 236100                    LDQ     ERR,,AUTO
         1 000452   000003 736000                    QLS     3
         1 000453   000000 276000 0                  ORQ     MMERR
         1 000454   000000 470400 xsym               LDP0    B$JIT$
         1 000455   000012 756100                    STQ     10,,PR0

      258     6566    3                 IF ERR = %E$BADSEGID THEN

   6566  1 000456   200011 235100                    LDA     ERR,,AUTO
         1 000457   001132 115007                    CMPA    602,DL
         1 000460   000467 601000 1                  TNZ     SET_RSLTS

      259     6567    4                     DO;                   /* Bad segid - can't have worked      */

      260     6568    4                       B$PS1$->B$VECTOR = VECTOR(NIL);

   6568  1 000461   000000 471400 xsym               LDP1    B$PS1$
         1 000462   000002 237000 2                  LDAQ    2
         1 000463   100000 755100                    STA     0,,PR1
         1 000464   100001 756100                    STQ     1,,PR1

      261     6569    4                       RETURN;
PL6.E3A0      #001=MMP$PMME File=MMP$PMME.:E05TSI                                WED 07/30/97 03:23 Page:51   

   6569  1 000465   200006 221300                    LDX1  ! ELS$+1,,AUTO
         1 000466   000001 702211                    TSX2  ! 1,X1

      262     6570    4                     END;
      263     6571    3   SET_RSLTS:
      264     6572    3               END;

   6572  1 000467                       SET_RSLTS    null
      265     6573        /* Now set up the results vector to frame all of the allocated     */
      266     6574        /* Segment. Zap it if the segment is null.                         */
      267     6575        /* Return results only if passed descriptor frames something.      */
      268     6576    2           CALL HFF$NILERASE(1) ALTRET(NORSLTS1);

   6576  1 000467   000001 630400 2                  EPPR0   1
         1 000470   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000471   000000 701000 xent               TSX1    HFF$NILERASE
         1 000472   000531 702000 1                  TSX2    NORSLTS1

      269     6577    2           B$PS1$ -> B$VECTOR = VECTOR(NIL);

   6577  1 000473   000000 470400 xsym               LDP0    B$PS1$
         1 000474   000002 237000 2                  LDAQ    2
         1 000475   000000 755100                    STA     0,,PR0
         1 000476   000001 756100                    STQ     1,,PR0

      270     6578    2           IF

   6578  1 000477   200010 236100                    LDQ     SEGID,,AUTO
         1 000500   000030 736000                    QLS     24
         1 000501   177700 376003                    ANQ     65472,DU
         1 000502   000030 772000                    QRL     24
         1 000503   000001 736000                    QLS     1
         1 000504   200005 471500                    LDP1    ELS$,,AUTO
         1 000505   100000 236106                    LDQ     0,QL,PR1
         1 000506   000400 316007                    CANQ    256,DL
         1 000507   000531 600000 1                  TZE     NORSLTS1
PL6.E3A0      #001=MMP$PMME File=MMP$PMME.:E05TSI                                WED 07/30/97 03:23 Page:52   

      271     6579                  %NOTNULL (LS$ = ELS$ , SEGID = "BSEGID.SEGBITS");
      272     6582    3             THEN DO;

      273     6583                      %GETDBOUND (LS$ = ELS$ , SEGID = "BSEGID.SEGBITS" , DBOUND = WSIZE);

   6584  1 000510   200010 236100                    LDQ     SEGID,,AUTO
         1 000511   000030 736000                    QLS     24
         1 000512   177700 376003                    ANQ     65472,DU
         1 000513   000030 772000                    QRL     24
         1 000514   000001 736000                    QLS     1
         1 000515   100000 236106                    LDQ     0,QL,PR1
         1 000516   000020 772000                    QRL     16
         1 000517   200007 756100                    STQ     WSIZE,,AUTO

      274     6586    3                 B$PS1$->B$VECTOR.VSIZE = WSIZE;

   6586  1 000520   000020 736000                    QLS     16
         1 000521   000000 676100                    ERQ     0,,PR0
         1 000522   000034 376000 xsym               ANQ     B_VECTNIL+28
         1 000523   000000 656100                    ERSQ    0,,PR0

      275     6587    3                 B$PS1$->B$VECTOR.SEGID = BITBIN(BSEGID.SEGBITS | '6000'O);

   6587  1 000524   200010 236100                    LDQ     SEGID,,AUTO
         1 000525   000030 736000                    QLS     24
         1 000526   600000 276003                    ORQ     -65536,DU
         1 000527   000030 772000                    QRL     24
         1 000530   000001 752103                    STCQ    1,'03'O,PR0

      276     6588    3               END;

   6587  1 000531                       NORSLTS1     null
      277     6589    2   NORSLTS1:;
      278     6590    2           RETURN;

   6590  1 000531   200006 221300                    LDX1  ! ELS$+1,,AUTO
PL6.E3A0      #001=MMP$PMME File=MMP$PMME.:E05TSI                                WED 07/30/97 03:23 Page:53   
         1 000532   000001 702211                    TSX2  ! 1,X1

      279     6591    2   END MMP$DS;
      280     6592                                                /**/
      281     6593                                                /**/
      282     6594        /***********************************************/
      283     6595        /*      Process the M$PDS pmme                 */
      284     6596        /***********************************************/
      285     6597    1   MMP$PDS: PROC;

   6597  1 000533   200006 741300       MMP$PDS      STX1  ! ELS$+1,,AUTO

      286     6598    2   DCL PROT UBIN;
      287     6599    2   DCL SEGID UBIN;
      288     6600    2   DCL ERR UBIN;
      289     6601    2   DCL FLAG BIT(36);
      290     6602        /**/
      291     6603        %FPT$PDS_V;
      292     6606        /**/
      293     6607    2           SEGID = B$PS1$->B$VECTOR.SEGID;

   6607  1 000534   000000 470400 xsym               LDP0    B$PS1$
         1 000535   000001 236100                    LDQ     1,,PR0
         1 000536   007777 376007                    ANQ     4095,DL
         1 000537   200010 756100                    STQ     SEGID,,AUTO

      294     6608    2           PROT = BITBIN(B$PS0$->FPT$PDS_V.PROTECTION);

   6608  1 000540   000000 471400 xsym               LDP1    B$PS0$
         1 000541   100000 236100                    LDQ     0,,PR1
         1 000542   000777 376007                    ANQ     511,DL
         1 000543   200007 756100                    STQ     PROT,,AUTO

      295     6609                %FINDLS (WSQ = EWSQ , P$ = ELS$);

   6610  1 000544   200004 473500                    LDP3    @EWSQ,,AUTO
         1 000545   300000 720100                    LXL0    0,,PR3
PL6.E3A0      #001=MMP$PMME File=MMP$PMME.:E05TSI                                WED 07/30/97 03:23 Page:54   
         1 000546   000000 236010 xsym               LDQ     MM_LSPTRS$,X0
         1 000547   200005 756100                    STQ     ELS$,,AUTO

      296     6612                %GETFLG (LS$ = ELS$ , SEGID = "BINBIT(SEGID,12)" , FLG = FLAG);

   6613  1 000550   200010 236100                    LDQ     SEGID,,AUTO
         1 000551   000030 736000                    QLS     24
         1 000552   000022 772000                    QRL     18
         1 000553   000000 620006                    EAX0    0,QL
         1 000554   177700 360003                    ANX0    65472,DU
         1 000555   000000 636010                    EAQ     0,X0
         1 000556   000030 772000                    QRL     24
         1 000557   000001 736000                    QLS     1
         1 000560   200005 474500                    LDP4    ELS$,,AUTO
         1 000561   400000 236106                    LDQ     0,QL,PR4
         1 000562   000024 736000                    QLS     20
         1 000563   777000 376003                    ANQ     -512,DU
         1 000564   200012 756100                    STQ     FLAG,,AUTO

      297     6615    2           IF (FLAG & %DSSHARED) THEN

   6615  1 000565   020000 376003                    ANQ     8192,DU
         1 000566   000575 600000 1                  TZE     s:6625

      298     6616    3               DO;

      299     6617        /*E*    ERROR:  MMP-E$SHRPROTECT-0
      300     6618                MESSAGE: You are not allowed to change the protection on
      301     6619                        a shared data segment.                             */
      302     6620                      %ERRSETN(CODE=%E$SHRPROTECT);

   6621  1 000567   001203 236007                    LDQ     643,DL
         1 000570   000003 736000                    QLS     3
         1 000571   000000 276000 0                  ORQ     MMERR
         1 000572   000000 475400 xsym               LDP5    B$JIT$
         1 000573   500012 756100                    STQ     10,,PR5

PL6.E3A0      #001=MMP$PMME File=MMP$PMME.:E05TSI                                WED 07/30/97 03:23 Page:55   
      303     6623    3                 RETURN;

   6623  1 000574   000001 702211                    TSX2  ! 1,X1

      304     6624    3               END;
      305     6625    2           CALL MMH$SMPRT(EWSQ,SEGID,,ERR,PROT) ALTRET(PDS_ERR);

   6625  1 000575   200007 635500                    EPPR5   PROT,,AUTO
         1 000576   200022 455500                    STP5    SEGID+5,,AUTO
         1 000577   200011 636500                    EPPR6   ERR,,AUTO
         1 000600   200021 456500                    STP6    SEGID+4,,AUTO
         1 000601   000001 236000 xsym               LDQ     B_VECTNIL+1
         1 000602   200020 756100                    STQ     SEGID+3,,AUTO
         1 000603   200010 637500                    EPPR7   SEGID,,AUTO
         1 000604   200017 457500                    STP7    SEGID+2,,AUTO
         1 000605   200004 236100                    LDQ     @EWSQ,,AUTO
         1 000606   200016 756100                    STQ     SEGID+1,,AUTO
         1 000607   200016 630500                    EPPR0   SEGID+1,,AUTO
         1 000610   000023 631400 xsym               EPPR1   B_VECTNIL+19
         1 000611   000000 701000 xent               TSX1    MMH$SMPRT
         1 000612   000615 702000 1                  TSX2    PDS_ERR

      306     6626    2           RETURN;

   6626  1 000613   200006 221300                    LDX1  ! ELS$+1,,AUTO
         1 000614   000001 702211                    TSX2  ! 1,X1

   6615  1 000615                       PDS_ERR      null
      307     6627        /**/
      308     6628    2   PDS_ERR:;
      309     6629                %ERRSETN(CODE=ERR);

   6630  1 000615   200011 236100                    LDQ     ERR,,AUTO
         1 000616   000003 736000                    QLS     3
         1 000617   000000 276000 0                  ORQ     MMERR
         1 000620   000000 470400 xsym               LDP0    B$JIT$
         1 000621   000012 756100                    STQ     10,,PR0
PL6.E3A0      #001=MMP$PMME File=MMP$PMME.:E05TSI                                WED 07/30/97 03:23 Page:56   

      310     6632    2           RETURN;

   6632  1 000622   200006 221300                    LDX1  ! ELS$+1,,AUTO
         1 000623   000001 702211                    TSX2  ! 1,X1

      311     6633    2   END MMP$PDS;
      312     6634        /**/
      313     6635        /**/
      314     6636        /**************************************************/
      315     6637        /*     Process M$GDP and M$FDP pmme's             */
      316     6638        /**************************************************/
      317     6639    1   MMP$DP: PROC;

   6639  1 000624   200006 741300       MMP$DP       STX1  ! ELS$+1,,AUTO

      318     6640    2   DCL NPGS UBIN;
      319     6641    2   DCL BSIZE SBIN;
      320     6642    2   DCL START$ PTR;
      321     6643    2   DCL 1 VEC BASED ALIGNED,           /* Struct. Used to treat word 2 as ptr     */
      322     6644    2         2 WORD1 UBIN(36),
      323     6645    2         2 P$ PTR;
      324     6646                                                /**/
      325     6647        %FPT$GDP_V;
      326     6650                                                /**/
      327     6651    2           NPGS  = MINIMUM(B$PS0$->FPT$GDP_V.PAGES,256);

   6651  1 000625   000400 236007                    LDQ     256,DL
         1 000626   000000 470400 xsym               LDP0    B$PS0$
         1 000627   000000 116100                    CMPQ    0,,PR0
         1 000630   000633 602000 1                  TNC     s:6651+6
         1 000631   000633 600000 1                  TZE     s:6651+6
         1 000632   000000 236100                    LDQ     0,,PR0
         1 000633   200007 756100                    STQ     NPGS,,AUTO

      328     6652    2           IF (NPGS = 0) AND (X0VAL = %C$GDP#)

PL6.E3A0      #001=MMP$PMME File=MMP$PMME.:E05TSI                                WED 07/30/97 03:23 Page:57   
   6652  1 000634   000000 116003                    CMPQ    0,DU
         1 000635   000653 601000 1                  TNZ     s:6658
         1 000636   200003 471500                    LDP1    @X0VAL,,AUTO
         1 000637   100000 235100                    LDA     0,,PR1
         1 000640   000003 115007                    CMPA    3,DL
         1 000641   000653 601000 1                  TNZ     s:6658

      329     6653    3             THEN DO;                      /* Return null if getting 0 pgs       */

      330     6654    3                 CALL HFF$NILERASE(1) ALTRET(NONIL);

   6654  1 000642   000001 630400 2                  EPPR0   1
         1 000643   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000644   000000 701000 xent               TSX1    HFF$NILERASE
         1 000645   000652 702000 1                  TSX2    NONIL

      331     6655    3                 B$PS1$->B$VECTOR = VECTOR(NIL);

   6655  1 000646   000000 470400 xsym               LDP0    B$PS1$
         1 000647   000002 237000 2                  LDAQ    2
         1 000650   000000 755100                    STA     0,,PR0
         1 000651   000001 756100                    STQ     1,,PR0

      332     6656    3   NONIL:      END;

   6656  1 000652   000741 710000 1     NONIL        TRA     NORSLTS2

      333     6657    3             ELSE DO;

      334     6658    3                 IF X0VAL = %C$GDP#

   6658  1 000653   200003 471500                    LDP1    @X0VAL,,AUTO
         1 000654   100000 235100                    LDA     0,,PR1
         1 000655   000003 115007                    CMPA    3,DL
         1 000656   000674 601000 1                  TNZ     s:6660

      335     6659    3                   THEN CALL MMI$GDP(EWSQ,NPGS,BSIZE,START$) ALTRET(XX);
PL6.E3A0      #001=MMP$PMME File=MMP$PMME.:E05TSI                                WED 07/30/97 03:23 Page:58   

   6659  1 000657   200011 633500                    EPPR3   START$,,AUTO
         1 000660   200021 453500                    STP3    SEGID+4,,AUTO
         1 000661   200010 634500                    EPPR4   BSIZE,,AUTO
         1 000662   200020 454500                    STP4    SEGID+3,,AUTO
         1 000663   200007 635500                    EPPR5   NPGS,,AUTO
         1 000664   200017 455500                    STP5    SEGID+2,,AUTO
         1 000665   200004 236100                    LDQ     @EWSQ,,AUTO
         1 000666   200016 756100                    STQ     SEGID+1,,AUTO
         1 000667   200016 630500                    EPPR0   SEGID+1,,AUTO
         1 000670   000022 631400 xsym               EPPR1   B_VECTNIL+18
         1 000671   000000 701000 xent               TSX1    MMI$GDP
         1 000672   000710 702000 1                  TSX2    XX
         1 000673   000710 710000 1                  TRA     XX

      336     6660    3                   ELSE CALL MMI$FDP(EWSQ,NPGS,BSIZE,START$) ALTRET(XX);

   6660  1 000674   200011 633500                    EPPR3   START$,,AUTO
         1 000675   200021 453500                    STP3    SEGID+4,,AUTO
         1 000676   200010 634500                    EPPR4   BSIZE,,AUTO
         1 000677   200020 454500                    STP4    SEGID+3,,AUTO
         1 000700   200007 635500                    EPPR5   NPGS,,AUTO
         1 000701   200017 455500                    STP5    SEGID+2,,AUTO
         1 000702   200004 236100                    LDQ     @EWSQ,,AUTO
         1 000703   200016 756100                    STQ     SEGID+1,,AUTO
         1 000704   200016 630500                    EPPR0   SEGID+1,,AUTO
         1 000705   000022 631400 xsym               EPPR1   B_VECTNIL+18
         1 000706   000000 701000 xent               TSX1    MMI$FDP
         1 000707   000710 702000 1                  TSX2    XX

      337     6661        /* Any error code will have been placed in JIT.ERR by mmi, so we   */
      338     6662        /* Don't need to do anything special on an altreturn.              */
      339     6663    3   XX:           CALL HFF$NILERASE(1) ALTRET(NORSLTS2);

   6663  1 000710   000001 630400 2     XX           EPPR0   1
         1 000711   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000712   000000 701000 xent               TSX1    HFF$NILERASE
PL6.E3A0      #001=MMP$PMME File=MMP$PMME.:E05TSI                                WED 07/30/97 03:23 Page:59   
         1 000713   000741 702000 1                  TSX2    NORSLTS2

      340     6664    3                 IF BSIZE < 0

   6664  1 000714   200010 235100                    LDA     BSIZE,,AUTO
         1 000715   000723 605000 1                  TPL     s:6668

      341     6665    3                   THEN
      342     6666    3                   B$PS1$->B$VECTOR = VECTOR(NIL);

   6666  1 000716   000000 470400 xsym               LDP0    B$PS1$
         1 000717   000002 237000 2                  LDAQ    2
         1 000720   000000 755100                    STA     0,,PR0
         1 000721   000001 756100                    STQ     1,,PR0
         1 000722   000741 710000 1                  TRA     NORSLTS2

      343     6667    4                   ELSE DO;

      344     6668    4                       B$PS1$->B$VECTOR.VSIZE = BSIZE; /* Set up results VECTOR...*/

   6668  1 000723   000000 470400 xsym               LDP0    B$PS1$
         1 000724   200010 236100                    LDQ     BSIZE,,AUTO
         1 000725   000020 736000                    QLS     16
         1 000726   000000 676100                    ERQ     0,,PR0
         1 000727   000034 376000 xsym               ANQ     B_VECTNIL+28
         1 000730   000000 656100                    ERSQ    0,,PR0

      345     6669    4                       B$PS1$->B$VECTOR.FLAGS = '777'O;
              6669                                /* To frame what we have (left) */

   6669  1 000731   177600 236007                    LDQ     65408,DL
         1 000732   000000 256100                    ORSQ    0,,PR0

      346     6670    4                       B$PS1$->B$VECTOR.V = '01'B;

   6670  1 000733   000000 236100                    LDQ     0,,PR0
         1 000734   000004 376000 2                  ANQ     4
PL6.E3A0      #001=MMP$PMME File=MMP$PMME.:E05TSI                                WED 07/30/97 03:23 Page:60   
         1 000735   000040 276007                    ORQ     32,DL
         1 000736   000000 756100                    STQ     0,,PR0

      347     6671    4                       B$PS1$->VEC.P$ = START$;

   6671  1 000737   200011 236100                    LDQ     START$,,AUTO
         1 000740   000001 756100                    STQ     1,,PR0

      348     6672    4                     END;

      349     6673    3   NORSLTS2:   END;

   6673  1 000741                       NORSLTS2     null
      350     6674    2           RETURN;

   6674  1 000741   200006 221300                    LDX1  ! ELS$+1,,AUTO
         1 000742   000001 702211                    TSX2  ! 1,X1

      351     6675    2   END MMP$DP;
      352     6676                                                /**/
      353     6677                                                /**/
      354     6678        /**************************************************/
      355     6679        /*     Process M$GVP and M$FVP pmme's             */
      356     6680        /**************************************************/
      357     6681    1   MMP$VP: PROC;

   6681  1 000743   200006 741300       MMP$VP       STX1  ! ELS$+1,,AUTO

      358     6682    2   DCL VPNO SBIN(36);
      359     6683    2   DCL ERR SBIN;
      360     6684    2   DCL N SBIN;
      361     6685    2   DCL WSQ SBIN;
      362     6686    2   DCL VCB$ PTR;
      363     6687                                                /**/
      364     6688        %FPT$GVP_V;
      365     6691                                                /**/
      366     6692
PL6.E3A0      #001=MMP$PMME File=MMP$PMME.:E05TSI                                WED 07/30/97 03:23 Page:61   
      367     6693    2           WSQ = B$PS0$->FPT$GVP_V.WSQ;

   6693  1 000744   000000 470400 xsym               LDP0    B$PS0$
         1 000745   000000 236100                    LDQ     0,,PR0
         1 000746   000033 772000                    QRL     27
         1 000747   200012 756100                    STQ     WSQ,,AUTO

      368     6694    2           IF WSQ~=0

   6694  1 000750   001042 600000 1                  TZE     s:6726

      369     6695    3             THEN DO;

      370     6696    3                 IF WSQ < %VS1WSQ OR WSQ > %VS3WSQ

   6696  1 000751   000011 116007                    CMPQ    9,DL
         1 000752   000755 604000 1                  TMI     BADWSQ
         1 000753   000013 116007                    CMPQ    11,DL
         1 000754   000764 604400 1                  TMOZ    s:6707

      371     6697    4                   THEN DO;

   6689  1 000755                       BADWSQ       null
      372     6698    4   BADWSQ:             ;
      373     6699                            %ERRSETN(CODE=%E$BADWSQ);

   6700  1 000755   002322 236007                    LDQ     1234,DL
         1 000756   000003 736000                    QLS     3
         1 000757   000000 276000 0                  ORQ     MMERR
         1 000760   000000 470400 xsym               LDP0    B$JIT$
         1 000761   000012 756100                    STQ     10,,PR0

      374     6702                  /*E* ERROR: MMP-E$BADWSQ-0
      375     6703                  MESSAGE: Illegal WSQ specified.
      376     6704              */
      377     6705    4                       RETURN;

PL6.E3A0      #001=MMP$PMME File=MMP$PMME.:E05TSI                                WED 07/30/97 03:23 Page:62   
   6705  1 000762   200006 221300                    LDX1  ! ELS$+1,,AUTO
         1 000763   000001 702211                    TSX2  ! 1,X1

      378     6706    4                     END;
      379     6707    3                 N = B$JIT.VIRTUAL.DCB#(WSQ-%VS1WSQ);

   6707  1 000764   000000 471400 xsym               LDP1    B$JIT$
         1 000765   000100 101506                    MRL     fill='000'O
         1 000766   100214 600001                    ADSC9   140,Q,PR1                cn=3,n=1
         1 000767   200011 000004                    ADSC9   N,,AUTO                  cn=0,n=4

      380     6708    3                 IF N=0 THEN GOTO BADWSQ;

   6708  1 000770   200011 235100                    LDA     N,,AUTO
         1 000771   000755 600000 1                  TZE     BADWSQ

      381     6709    3                 VCB$ = DCBADDR(N)->F$DCB.SETSTA$;

   6709  1 000772   000005 473400 2                  LDP3    5
         1 000773   300000 474500                    LDP4    0,,PR3
         1 000774   400000 475505                    LDP5    0,AL,PR4
         1 000775   500006 236100                    LDQ     6,,PR5
         1 000776   200013 756100                    STQ     VCB$,,AUTO

      382     6710    3                 VPNO = B$PS0$->FPT$GVP_V.PNO;

   6710  1 000777   000000 236100                    LDQ     0,,PR0
         1 001000   777777 376007                    ANQ     -1,DL
         1 001001   200007 756100                    STQ     VPNO,,AUTO

      383     6711    3                 IF VPNO > VCB$->MM$VCB.MAXVP#

   6711  1 001002   200013 475500                    LDP5    VCB$,,AUTO
         1 001003   500002 116100                    CMPQ    2,,PR5
         1 001004   001014 604400 1                  TMOZ    s:6721

      384     6712    4                   THEN DO;
PL6.E3A0      #001=MMP$PMME File=MMP$PMME.:E05TSI                                WED 07/30/97 03:23 Page:63   

   6710  1 001005                       BADVP        null
      385     6713    4   BADVP:              ;
      386     6714                            %ERRSETN(CODE=%E$BADVP);

   6715  1 001005   001142 236007                    LDQ     610,DL
         1 001006   000003 736000                    QLS     3
         1 001007   000000 276000 0                  ORQ     MMERR
         1 001010   000000 470400 xsym               LDP0    B$JIT$
         1 001011   000012 756100                    STQ     10,,PR0

      387     6717        /*E*   ERROR:  MMP-E$BADVP-0
      388     6718               MESSAGE: Page not within available area of virtual memory.  */
      389     6719    4                       RETURN;

   6719  1 001012   200006 221300                    LDX1  ! ELS$+1,,AUTO
         1 001013   000001 702211                    TSX2  ! 1,X1

      390     6720    4                     END;
      391     6721    3                 IF X0VAL = %C$GVP#

   6721  1 001014   200003 476500                    LDP6    @X0VAL,,AUTO
         1 001015   600000 235100                    LDA     0,,PR6
         1 001016   000005 115007                    CMPA    5,DL
         1 001017   001031 601000 1                  TNZ     s:6723

      392     6722    3                   THEN CALL MMV$GET(WSQ,VPNO);

   6722  1 001020   200007 637500                    EPPR7   VPNO,,AUTO
         1 001021   200017 457500                    STP7    SEGID+2,,AUTO
         1 001022   200012 630500                    EPPR0   WSQ,,AUTO
         1 001023   200016 450500                    STP0    SEGID+1,,AUTO
         1 001024   200016 630500                    EPPR0   SEGID+1,,AUTO
         1 001025   000020 631400 xsym               EPPR1   B_VECTNIL+16
         1 001026   000000 701000 xent               TSX1    MMV$GET
         1 001027   000000 011000                    NOP     0
         1 001030   001142 710000 1                  TRA     s:6743
PL6.E3A0      #001=MMP$PMME File=MMP$PMME.:E05TSI                                WED 07/30/97 03:23 Page:64   

      393     6723    3                   ELSE CALL MMV$RLS(WSQ,VPNO);

   6723  1 001031   200007 637500                    EPPR7   VPNO,,AUTO
         1 001032   200017 457500                    STP7    SEGID+2,,AUTO
         1 001033   200012 630500                    EPPR0   WSQ,,AUTO
         1 001034   200016 450500                    STP0    SEGID+1,,AUTO
         1 001035   200016 630500                    EPPR0   SEGID+1,,AUTO
         1 001036   000020 631400 xsym               EPPR1   B_VECTNIL+16
         1 001037   000000 701000 xent               TSX1    MMV$RLS
         1 001040   000000 011000                    NOP     0

      394     6724    3               END;

   6724  1 001041   001142 710000 1                  TRA     s:6743

      395     6725    3             ELSE DO;

      396     6726    3                 VPNO=B$PS0$->FPT$GVP_V.PNO+%ISEGLO;

   6726  1 001042   000000 236100                    LDQ     0,,PR0
         1 001043   777777 376007                    ANQ     -1,DL
         1 001044   000100 036007                    ADLQ    64,DL
         1 001045   200007 756100                    STQ     VPNO,,AUTO

      397     6727    3                 IF VPNO>B$JIT.EUP OR VPNO<=B$JIT.PUL THEN GOTO BADVP;

   6727  1 001046   000000 471400 xsym               LDP1    B$JIT$
         1 001047   100204 236100                    LDQ     132,,PR1
         1 001050   777777 376007                    ANQ     -1,DL
         1 001051   200007 116100                    CMPQ    VPNO,,AUTO
         1 001052   001005 604000 1                  TMI     BADVP
         1 001053   100176 236100                    LDQ     126,,PR1
         1 001054   777777 376007                    ANQ     -1,DL
         1 001055   200007 116100                    CMPQ    VPNO,,AUTO
         1 001056   001005 605000 1                  TPL     BADVP

PL6.E3A0      #001=MMP$PMME File=MMP$PMME.:E05TSI                                WED 07/30/97 03:23 Page:65   
      398     6728    3                 N = 1;                    /* 'N' may be set to 0 by sgvp        */

   6728  1 001057   000001 235007                    LDA     1,DL
         1 001060   200011 755100                    STA     N,,AUTO

      399     6729    3                 VPNO=VPNO - %ISEGLO;

   6729  1 001061   000100 336007                    LCQ     64,DL
         1 001062   200007 056100                    ASQ     VPNO,,AUTO

      400     6730    3                 IF X0VAL = %C$GVP#

   6730  1 001063   200003 473500                    LDP3    @X0VAL,,AUTO
         1 001064   300000 235100                    LDA     0,,PR3
         1 001065   000005 115007                    CMPA    5,DL
         1 001066   001125 601000 1                  TNZ     s:6741

      401     6731    3                   THEN CALL MMG$SGVP(EWSQ,BITBIN(%ISSID),VPNO,N,ERR)

   6731  1 001067   200010 634500                    EPPR4   ERR,,AUTO
         1 001070   200022 454500                    STP4    SEGID+5,,AUTO
         1 001071   200011 635500                    EPPR5   N,,AUTO
         1 001072   200021 455500                    STP5    SEGID+4,,AUTO
         1 001073   200007 636500                    EPPR6   VPNO,,AUTO
         1 001074   200020 456500                    STP6    SEGID+3,,AUTO
         1 001075   000007 236000 2                  LDQ     7
         1 001076   200004 235100                    LDA     @EWSQ,,AUTO
         1 001077   200016 757100                    STAQ    SEGID+1,,AUTO
         1 001100   200016 630500                    EPPR0   SEGID+1,,AUTO
         1 001101   000023 631400 xsym               EPPR1   B_VECTNIL+19
         1 001102   000000 701000 xent               TSX1    MMG$SGVP
         1 001103   001117 702000 1                  TSX2    ALTRT

      402     6732    4                     WHENRETURN DO;

      403     6733    4                         IF ES_CLEARMEM~=0 THEN CALL JSN$BLNK2(VPNO,N);

PL6.E3A0      #001=MMP$PMME File=MMP$PMME.:E05TSI                                WED 07/30/97 03:23 Page:66   
   6733  1 001104   000000 235000 xsym               LDA     ES_CLEARMEM
         1 001105   001116 600000 1                  TZE     s:6734

   6733  1 001106   200011 630500                    EPPR0   N,,AUTO
         1 001107   200017 450500                    STP0    SEGID+2,,AUTO
         1 001110   200007 631500                    EPPR1   VPNO,,AUTO
         1 001111   200016 451500                    STP1    SEGID+1,,AUTO
         1 001112   200016 630500                    EPPR0   SEGID+1,,AUTO
         1 001113   000020 631400 xsym               EPPR1   B_VECTNIL+16
         1 001114   000000 701000 xent               TSX1    JSN$BLNK2
         1 001115   000000 011000                    NOP     0

      404     6734    4                       END;

   6734  1 001116   001124 710000 1                  TRA     s:6740

      405     6735    4                     WHENALTRETURN DO;

   6733  1 001117                       ALTRT        null
      406     6736    4   ALTRT:                ;
      407     6737                              %ERRSETN(CODE=ERR);

   6738  1 001117   200010 236100                    LDQ     ERR,,AUTO
         1 001120   000003 736000                    QLS     3
         1 001121   000000 276000 0                  ORQ     MMERR
         1 001122   000000 470400 xsym               LDP0    B$JIT$
         1 001123   000012 756100                    STQ     10,,PR0

      408     6740    4                       END;

   6740  1 001124   001142 710000 1                  TRA     s:6743

      409     6741    3                   ELSE CALL MMG$SFVP(EWSQ,BITBIN(%ISSID),VPNO,N,ERR) ALTRET(ALTRT);

   6741  1 001125   200010 634500                    EPPR4   ERR,,AUTO
         1 001126   200022 454500                    STP4    SEGID+5,,AUTO
         1 001127   200011 635500                    EPPR5   N,,AUTO
PL6.E3A0      #001=MMP$PMME File=MMP$PMME.:E05TSI                                WED 07/30/97 03:23 Page:67   
         1 001130   200021 455500                    STP5    SEGID+4,,AUTO
         1 001131   200007 636500                    EPPR6   VPNO,,AUTO
         1 001132   200020 456500                    STP6    SEGID+3,,AUTO
         1 001133   000007 236000 2                  LDQ     7
         1 001134   200004 235100                    LDA     @EWSQ,,AUTO
         1 001135   200016 757100                    STAQ    SEGID+1,,AUTO
         1 001136   200016 630500                    EPPR0   SEGID+1,,AUTO
         1 001137   000023 631400 xsym               EPPR1   B_VECTNIL+19
         1 001140   000000 701000 xent               TSX1    MMG$SFVP
         1 001141   001117 702000 1                  TSX2    ALTRT

      410     6742    3               END;

      411     6743    2           RETURN;

   6743  1 001142   200006 221300                    LDX1  ! ELS$+1,,AUTO
         1 001143   000001 702211                    TSX2  ! 1,X1

      412     6744    2   END MMP$VP;
      413     6745                                                /**/
      414     6746                                                /**/
      415     6747        /**************************************************/
      416     6748        /*     Process the M$STLPP pmme                   */
      417     6749        /**************************************************/
      418     6750    1   MMP$STLPP: PROC;

   6750  1 001144   200006 741300       MMP$STLPP    STX1  ! ELS$+1,,AUTO

      419     6751    2   DCL PPNO SBIN;
      420     6752    2   DCL S_CUN SBIN SYMREF;
      421     6753    2   DCL 1 RES BASED ALIGNED,
      422     6754    2         2 WRD1 UBIN(36),
      423     6755    2         2 WRD2 UBIN(36);
      424     6756                                                /**/
      425     6757    2           B$PS0$->B$VECTOR = '0'B;        /* Clear out results vector           */

   6757  1 001145   000000 470400 xsym               LDP0    B$PS0$
PL6.E3A0      #001=MMP$PMME File=MMP$PMME.:E05TSI                                WED 07/30/97 03:23 Page:68   
         1 001146   000000 450100                    STZ     0,,PR0
         1 001147   000001 450100                    STZ     1,,PR0

      426     6758    2           IF (B$JIT.PRIV.ACTIVE & %PR_GPP#) AND (EWSQ ~= %MONWSQ)

   6758  1 001150   000000 471400 xsym               LDP1    B$JIT$
         1 001151   100013 236100                    LDQ     11,,PR1
         1 001152   000001 376000 0                  ANQ     MMERR+1
         1 001153   001215 600000 1                  TZE     s:6766
         1 001154   200004 473500                    LDP3    @EWSQ,,AUTO
         1 001155   300000 235100                    LDA     0,,PR3
         1 001156   000001 115007                    CMPA    1,DL
         1 001157   001215 600000 1                  TZE     s:6766

      427     6759    3             THEN DO;

      428     6760    3                 IF (MM_FPPC + MM_AUTO + FMC_CACHEPGCNT + MM$CGQD.FPPC - MM_HELD - (
              6760                          MM_RSVP-MM_SPPC))

   6760  1 001160   000000 236000 xsym               LDQ     MM_FPPC
         1 001161   000000 036000 xsym               ADLQ    MM_AUTO
         1 001162   000000 036000 xsym               ADLQ    FMC_CACHEPGCNT
         1 001163   000000 474400 xsym               LDP4    MM_CGQD$
         1 001164   400000 036100                    ADLQ    0,,PR4
         1 001165   000000 136000 xsym               SBLQ    MM_HELD
         1 001166   200016 756100                    STQ     SEGID+1,,AUTO
         1 001167   000000 236000 xsym               LDQ     MM_RSVP
         1 001170   000000 136000 xsym               SBLQ    MM_SPPC
         1 001171   200017 756100                    STQ     SEGID+2,,AUTO
         1 001172   200016 236100                    LDQ     SEGID+1,,AUTO
         1 001173   200017 136100                    SBLQ    SEGID+2,,AUTO
         1 001174   001177 604000 1                  TMI     s:6760+15
         1 001175   000000 116000 xsym               CMPQ    MM_NOUSTHRESH
         1 001176   001202 603000 1                  TRC     s:6763
         1 001177   000000 235000 xsym               LDA     S_CUN
         1 001200   000001 115007                    CMPA    1,DL
         1 001201   001232 600000 1                  TZE     NO_STEAL
PL6.E3A0      #001=MMP$PMME File=MMP$PMME.:E05TSI                                WED 07/30/97 03:23 Page:69   

      429     6761    3                   < MM_NOUSTHRESH AND S_CUN = JG_SLUG# THEN
      430     6762    3                   GOTO NO_STEAL;
      431     6763    3                 CALL MMB$GPP(PPNO,EWSQ);  /* Do get physical if ghost1          */

   6763  1 001202   200004 236100                    LDQ     @EWSQ,,AUTO
         1 001203   200017 756100                    STQ     SEGID+2,,AUTO
         1 001204   200007 635500                    EPPR5   PPNO,,AUTO
         1 001205   200016 455500                    STP5    SEGID+1,,AUTO
         1 001206   200016 630500                    EPPR0   SEGID+1,,AUTO
         1 001207   000020 631400 xsym               EPPR1   B_VECTNIL+16
         1 001210   000000 701000 xent               TSX1    MMB$GPP
         1 001211   000000 011000                    NOP     0

      432     6764    3                 IF PPNO = 0 THEN GOTO NO_STEAL; ELSE;

   6764  1 001212   200007 235100                    LDA     PPNO,,AUTO
         1 001213   001232 600000 1                  TZE     NO_STEAL

      433     6765    3               END;

   6765  1 001214   001225 710000 1                  TRA     s:6767

      434     6766    2             ELSE CALL MMD$STLPP(PPNO,EWSQ) ALTRET(NO_STEAL);

   6766  1 001215   200004 236100                    LDQ     @EWSQ,,AUTO
         1 001216   200017 756100                    STQ     SEGID+2,,AUTO
         1 001217   200007 633500                    EPPR3   PPNO,,AUTO
         1 001220   200016 453500                    STP3    SEGID+1,,AUTO
         1 001221   200016 630500                    EPPR0   SEGID+1,,AUTO
         1 001222   000020 631400 xsym               EPPR1   B_VECTNIL+16
         1 001223   000000 701000 xent               TSX1    MMD$STLPP
         1 001224   001232 702000 1                  TSX2    NO_STEAL

      435     6767    2           B$PS0$->RES.WRD2 = PPNO;

   6767  1 001225   200007 235100                    LDA     PPNO,,AUTO
PL6.E3A0      #001=MMP$PMME File=MMP$PMME.:E05TSI                                WED 07/30/97 03:23 Page:70   
         1 001226   000000 470400 xsym               LDP0    B$PS0$
         1 001227   000001 755100                    STA     1,,PR0

      436     6768    2           RETURN;

   6768  1 001230   200006 221300                    LDX1  ! ELS$+1,,AUTO
         1 001231   000001 702211                    TSX2  ! 1,X1

      437     6769    2   NO_STEAL:
      438     6770    2           B$PS0$->RES.WRD2 = 0;

   6770  1 001232   000000 470400 xsym  NO_STEAL     LDP0    B$PS0$
         1 001233   000001 450100                    STZ     1,,PR0

      439     6771        /*E*   ERROR:  MMP-E$ALLSTOLEN-0
      440     6772               MESSAGE: No stealable physical pages are available.         */
      441     6773                %ERRSETN(CODE=%E$ALLSTOLEN);

   6774  1 001234   001145 236007                    LDQ     613,DL
         1 001235   000003 736000                    QLS     3
         1 001236   000000 276000 0                  ORQ     MMERR
         1 001237   000000 471400 xsym               LDP1    B$JIT$
         1 001240   100012 756100                    STQ     10,,PR1

      442     6776    2           RETURN;

   6776  1 001241   200006 221300                    LDX1  ! ELS$+1,,AUTO
         1 001242   000001 702211                    TSX2  ! 1,X1

      443     6777    2   END MMP$STLPP;
      444     6778                                                /**/
      445     6779                                                /**/
      446     6780        /**************************************************/
      447     6781        /*     Process the M$RSPP pmme                    */
      448     6782        /**************************************************/
      449     6783    1   MMP$RSPP: PROC;

PL6.E3A0      #001=MMP$PMME File=MMP$PMME.:E05TSI                                WED 07/30/97 03:23 Page:71   
   6783  1 001243   200006 741300       MMP$RSPP     STX1  ! ELS$+1,,AUTO

      450     6784    2   DCL PPNO SBIN;
      451     6785    2   DCL 1 RES BASED ALIGNED,
      452     6786    2         2 WRD1 UBIN(36),
      453     6787    2         2 WRD2 UBIN(36);
      454     6788                                                /**/
      455     6789    2           PPNO = B$PS0$->RES.WRD2;        /* Get stolen page no.                */

   6789  1 001244   000000 470400 xsym               LDP0    B$PS0$
         1 001245   000001 235100                    LDA     1,,PR0
         1 001246   200007 755100                    STA     PPNO,,AUTO

      456     6790        /* Ghost1 (host logon processor) gets special TREATMENT:           */
      457     6791        /* The get and free stolen page pmme's actually bypass the         */
      458     6792        /* Stolen page logic, and get and release physical pages.          */
      459     6793    2           IF (B$JIT.PRIV.ACTIVE & %PR_GPP#) AND (EWSQ ~= %MONWSQ)

   6793  1 001247   000000 471400 xsym               LDP1    B$JIT$
         1 001250   100013 236100                    LDQ     11,,PR1
         1 001251   000001 376000 0                  ANQ     MMERR+1
         1 001252   001266 600000 1                  TZE     s:6797
         1 001253   200004 473500                    LDP3    @EWSQ,,AUTO
         1 001254   300000 235100                    LDA     0,,PR3
         1 001255   000001 115007                    CMPA    1,DL
         1 001256   001266 600000 1                  TZE     s:6797

      460     6794    3             THEN DO;

      461     6795    3                 CALL MMB$FPP(PPNO);

   6795  1 001257   200007 634500                    EPPR4   PPNO,,AUTO
         1 001260   200016 454500                    STP4    SEGID+1,,AUTO
         1 001261   200016 630500                    EPPR0   SEGID+1,,AUTO
         1 001262   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 001263   000000 701000 xent               TSX1    MMB$FPP
         1 001264   000000 011000                    NOP     0
PL6.E3A0      #001=MMP$PMME File=MMP$PMME.:E05TSI                                WED 07/30/97 03:23 Page:72   

      462     6796    3               END;

   6796  1 001265   001276 710000 1                  TRA     s:6798

      463     6797    2             ELSE CALL MMD$RSPP(PPNO,EWSQ) ALTRET(NOT_STOLEN);

   6797  1 001266   200004 236100                    LDQ     @EWSQ,,AUTO
         1 001267   200017 756100                    STQ     SEGID+2,,AUTO
         1 001270   200007 633500                    EPPR3   PPNO,,AUTO
         1 001271   200016 453500                    STP3    SEGID+1,,AUTO
         1 001272   200016 630500                    EPPR0   SEGID+1,,AUTO
         1 001273   000020 631400 xsym               EPPR1   B_VECTNIL+16
         1 001274   000000 701000 xent               TSX1    MMD$RSPP
         1 001275   001300 702000 1                  TSX2    NOT_STOLEN

      464     6798    2           RETURN;

   6798  1 001276   200006 221300                    LDX1  ! ELS$+1,,AUTO
         1 001277   000001 702211                    TSX2  ! 1,X1

      465     6799    2   NOT_STOLEN:
      466     6800        /*E*   ERROR:  MMP-E$NOTSTOLEN-0
      467     6801               MESSAGE: That is not a stolen page.                         */
      468     6802                %ERRSETN(CODE=%E$NOTSTOLEN);

   6803  1 001300   001146 236007       NOT_STOLEN   LDQ     614,DL
         1 001301   000003 736000                    QLS     3
         1 001302   000000 276000 0                  ORQ     MMERR
         1 001303   000000 470400 xsym               LDP0    B$JIT$
         1 001304   000012 756100                    STQ     10,,PR0

      469     6805    2           RETURN;

   6805  1 001305   200006 221300                    LDX1  ! ELS$+1,,AUTO
         1 001306   000001 702211                    TSX2  ! 1,X1

PL6.E3A0      #001=MMP$PMME File=MMP$PMME.:E05TSI                                WED 07/30/97 03:23 Page:73   
      470     6806    2   END MMP$RSPP;
      471     6807                                                /**/
      472     6808                                                /**/
      473     6809        /**************************************************/
      474     6810        /*     Process the M$CVM pmme                     */
      475     6811        /**************************************************/
      476     6812    1   MMP$CVM: PROC;

   6812  1 001307   200006 741300       MMP$CVM      STX1  ! ELS$+1,,AUTO

      477     6813    2   DCL PPNO SBIN;
      478     6814    2   DCL VPNO SBIN(36);
      479     6815    2   DCL PHYSICAL BIT(1) ALIGNED;
      480     6816    2   DCL ERR SBIN;
      481     6817    2   DCL WSQ SBIN;
      482     6818    2   DCL DCB# UBIN;
      483     6819    2   DCL VCB$ PTR;
      484     6820                                                /**/
      485     6821        %FPT$CVM_V;
      486     6825    2           PPNO = B$PS0$->FPT$CVM_V.PPNO;

   6825  1 001310   000000 470400 xsym               LDP0    B$PS0$
         1 001311   000001 235100                    LDA     1,,PR0
         1 001312   200007 755100                    STA     PPNO,,AUTO

      487     6826    2           WSQ = B$PS0$->FPT$CVM_V.WSQ;

   6826  1 001313   000002 236100                    LDQ     2,,PR0
         1 001314   000033 772000                    QRL     27
         1 001315   200013 756100                    STQ     WSQ,,AUTO

      488     6827    2           PHYSICAL = B$PS0$->FPT$CVM_V.PHYSICAL;

   6827  1 001316   000000 236100                    LDQ     0,,PR0
         1 001317   000001 736000                    QLS     1
         1 001320   400000 376003                    ANQ     -131072,DU
         1 001321   200011 756100                    STQ     PHYSICAL,,AUTO
PL6.E3A0      #001=MMP$PMME File=MMP$PMME.:E05TSI                                WED 07/30/97 03:23 Page:74   

      489     6828    2           IF PHYSICAL AND HW_WSQ0PT THEN

   6828  1 001322   200011 234100                    SZN     PHYSICAL,,AUTO
         1 001323   001363 605000 1                  TPL     PAGE_OK
         1 001324   000000 234000 xsym               SZN     HW_WSQ0PT
         1 001325   001363 605000 1                  TPL     PAGE_OK

      490     6829    3             IF PPNO ~= -1 THEN DO;

   6829  1 001326   000027 115000 xsym               CMPA    B_VECTNIL+23
         1 001327   001363 600000 1                  TZE     PAGE_OK

      491     6830    3                   IF PPNO < 0 OR PPNO > B$LS$->B$MLNK.IPHY_MAP.BOUND/4 THEN

   6830  1 001330   000000 115003                    CMPA    0,DU
         1 001331   001355 604000 1                  TMI     REPORT_ERROR
         1 001332   000000 471400 xsym               LDP1    B$LS$
         1 001333   100374 236100                    LDQ     252,,PR1
         1 001334   000020 772000                    QRL     16
         1 001335   000002 772000                    QRL     2
         1 001336   001341 604000 1                  TMI     s:6832
         1 001337   200007 116100                    CMPQ    PPNO,,AUTO
         1 001340   001355 604000 1                  TMI     REPORT_ERROR

      492     6831    3                     GOTO REPORT_ERROR;
      493     6832    3                   IF B$IPHYMAP$->MM$IPHY_MAP(PPNO)~=BITBIN('777777'O) THEN

   6832  1 001341   000001 735000                    ALS     1
         1 001342   000000 473400 xsym               LDP3    B$IPHYMAP$
         1 001343   000100 101505                    MRL     fill='000'O
         1 001344   300000 000002                    ADSC9   0,A,PR3                  cn=0,n=2
         1 001345   200016 000004                    ADSC9   SEGID+1,,AUTO            cn=0,n=4
         1 001346   200016 236100                    LDQ     SEGID+1,,AUTO
         1 001347   777777 116007                    CMPQ    -1,DL
         1 001350   001355 600000 1                  TZE     REPORT_ERROR

PL6.E3A0      #001=MMP$PMME File=MMP$PMME.:E05TSI                                WED 07/30/97 03:23 Page:75   
      494     6833    3                     PPNO = B$IPHYMAP$->MM$IPHY_MAP(PPNO);

   6833  1 001351   000100 101505                    MRL     fill='000'O
         1 001352   300000 000002                    ADSC9   0,A,PR3                  cn=0,n=2
         1 001353   200007 000004                    ADSC9   PPNO,,AUTO               cn=0,n=4
         1 001354   001363 710000 1                  TRA     PAGE_OK

      495     6834    4                     ELSE DO;

      496     6835    4   REPORT_ERROR:
      497     6836                              %ERRSETN(CODE=%E$BADPP);

   6837  1 001355   001154 236007       REPORT_ERROR LDQ     620,DL
         1 001356   000003 736000                    QLS     3
         1 001357   000000 276000 0                  ORQ     MMERR
         1 001360   000000 471400 xsym               LDP1    B$JIT$
         1 001361   100012 756100                    STQ     10,,PR1

      498     6839    4                         RETURN;

   6839  1 001362   000001 702211                    TSX2  ! 1,X1

   6833  1 001363                       PAGE_OK      null
      499     6840    4                       END;
      500     6841    3                 END;
      501     6842    2   PAGE_OK:;
      502     6843    2           IF WSQ ~= 0

   6843  1 001363   200013 235100                    LDA     WSQ,,AUTO
         1 001364   001443 600000 1                  TZE     s:6868

      503     6844    3             THEN DO;

      504     6845    3                 IF WSQ < %VS1WSQ OR WSQ > %VS3WSQ

   6845  1 001365   000011 115007                    CMPA    9,DL
         1 001366   001371 604000 1                  TMI     BADWSQ
PL6.E3A0      #001=MMP$PMME File=MMP$PMME.:E05TSI                                WED 07/30/97 03:23 Page:76   
         1 001367   000013 115007                    CMPA    11,DL
         1 001370   001400 604400 1                  TMOZ    s:6853

      505     6846    4                   THEN DO;

   6845  1 001371                       BADWSQ       null
      506     6847    4   BADWSQ:             ;
      507     6848                            %ERRSETN(CODE=%E$BADWSQ);

   6849  1 001371   002322 236007                    LDQ     1234,DL
         1 001372   000003 736000                    QLS     3
         1 001373   000000 276000 0                  ORQ     MMERR
         1 001374   000000 470400 xsym               LDP0    B$JIT$
         1 001375   000012 756100                    STQ     10,,PR0

      508     6851    4                       RETURN;

   6851  1 001376   200006 221300                    LDX1  ! ELS$+1,,AUTO
         1 001377   000001 702211                    TSX2  ! 1,X1

      509     6852    4                     END;
      510     6853    3                 DCB# = B$JIT.VIRTUAL.DCB#(WSQ-%VS1WSQ);

   6853  1 001400   000000 471400 xsym               LDP1    B$JIT$
         1 001401   000100 101505                    MRL     fill='000'O
         1 001402   100214 600001                    ADSC9   140,A,PR1                cn=3,n=1
         1 001403   200014 000004                    ADSC9   DCB#,,AUTO               cn=0,n=4

      511     6854    3                 IF DCB# = 0 THEN GOTO BADWSQ;

   6854  1 001404   200014 236100                    LDQ     DCB#,,AUTO
         1 001405   001371 600000 1                  TZE     BADWSQ

      512     6855    3                 VCB$ = DCBADDR(DCB#)->F$DCB.SETSTA$;

   6855  1 001406   000005 473400 2                  LDP3    5
         1 001407   300000 474500                    LDP4    0,,PR3
PL6.E3A0      #001=MMP$PMME File=MMP$PMME.:E05TSI                                WED 07/30/97 03:23 Page:77   
         1 001410   400000 475506                    LDP5    0,QL,PR4
         1 001411   500006 236100                    LDQ     6,,PR5
         1 001412   200015 756100                    STQ     VCB$,,AUTO

      513     6856    3                 VPNO = B$PS0$->FPT$CVM_V.VPNO;

   6856  1 001413   000002 236100                    LDQ     2,,PR0
         1 001414   777777 376007                    ANQ     -1,DL
         1 001415   200010 756100                    STQ     VPNO,,AUTO

      514     6857    3                 IF VPNO > VCB$->MM$VCB.MAXVP#

   6857  1 001416   200015 475500                    LDP5    VCB$,,AUTO
         1 001417   500002 116100                    CMPQ    2,,PR5
         1 001420   001430 604400 1                  TMOZ    s:6865

      515     6858    4                   THEN DO;

   6856  1 001421                       BADVP        null
      516     6859    4   BADVP:              ;
      517     6860                            %ERRSETN(CODE=%E$BADVP);

   6861  1 001421   001142 236007                    LDQ     610,DL
         1 001422   000003 736000                    QLS     3
         1 001423   000000 276000 0                  ORQ     MMERR
         1 001424   000000 470400 xsym               LDP0    B$JIT$
         1 001425   000012 756100                    STQ     10,,PR0

      518     6863    4                       RETURN;

   6863  1 001426   200006 221300                    LDX1  ! ELS$+1,,AUTO
         1 001427   000001 702211                    TSX2  ! 1,X1

      519     6864    4                     END;
      520     6865    3                 CALL MMV$CVM(WSQ,VPNO,PPNO);

   6865  1 001430   200007 636500                    EPPR6   PPNO,,AUTO
PL6.E3A0      #001=MMP$PMME File=MMP$PMME.:E05TSI                                WED 07/30/97 03:23 Page:78   
         1 001431   200020 456500                    STP6    SEGID+3,,AUTO
         1 001432   200010 637500                    EPPR7   VPNO,,AUTO
         1 001433   200017 457500                    STP7    SEGID+2,,AUTO
         1 001434   200013 630500                    EPPR0   WSQ,,AUTO
         1 001435   200016 450500                    STP0    SEGID+1,,AUTO
         1 001436   200016 630500                    EPPR0   SEGID+1,,AUTO
         1 001437   000021 631400 xsym               EPPR1   B_VECTNIL+17
         1 001440   000000 701000 xent               TSX1    MMV$CVM
         1 001441   000000 011000                    NOP     0

      521     6866    3               END;

   6866  1 001442   001473 710000 1                  TRA     s:6876

      522     6867    3             ELSE DO;

      523     6868    3                 VPNO=B$PS0$->FPT$CVM_V.VPNO+%ISEGLO;

   6868  1 001443   000002 236100                    LDQ     2,,PR0
         1 001444   777777 376007                    ANQ     -1,DL
         1 001445   000100 036007                    ADLQ    64,DL
         1 001446   200010 756100                    STQ     VPNO,,AUTO

      524     6869    3                 IF VPNO>%USERHIPAGE THEN GOTO BADVP;

   6869  1 001447   003777 116007                    CMPQ    2047,DL
         1 001450   001421 605400 1                  TPNZ    BADVP

      525     6870    4                 CALL MME$CVM(EWSQ,VPNO,PPNO,ERR) WHENALTRETURN DO;

   6870  1 001451   200012 631500                    EPPR1   ERR,,AUTO
         1 001452   200021 451500                    STP1    SEGID+4,,AUTO
         1 001453   200007 633500                    EPPR3   PPNO,,AUTO
         1 001454   200020 453500                    STP3    SEGID+3,,AUTO
         1 001455   200010 634500                    EPPR4   VPNO,,AUTO
         1 001456   200017 454500                    STP4    SEGID+2,,AUTO
         1 001457   200004 236100                    LDQ     @EWSQ,,AUTO
PL6.E3A0      #001=MMP$PMME File=MMP$PMME.:E05TSI                                WED 07/30/97 03:23 Page:79   
         1 001460   200016 756100                    STQ     SEGID+1,,AUTO
         1 001461   200016 630500                    EPPR0   SEGID+1,,AUTO
         1 001462   000022 631400 xsym               EPPR1   B_VECTNIL+18
         1 001463   000000 701000 xent               TSX1    MME$CVM
         1 001464   001466 702000 1                  TSX2    s:6872
         1 001465   001473 710000 1                  TRA     s:6876

      526     6871                            %ERRSETN(CODE=ERR);

   6872  1 001466   200012 236100                    LDQ     ERR,,AUTO
         1 001467   000003 736000                    QLS     3
         1 001470   000000 276000 0                  ORQ     MMERR
         1 001471   000000 470400 xsym               LDP0    B$JIT$
         1 001472   000012 756100                    STQ     10,,PR0

      527     6874    4                     END;

      528     6875    3               END;

      529     6876    2           RETURN;

   6876  1 001473   200006 221300                    LDX1  ! ELS$+1,,AUTO
         1 001474   000001 702211                    TSX2  ! 1,X1

      530     6877    2   END MMP$CVM;
      531     6878                                                /**/
      532     6879                                                /**/
      533     6880        /*************************************************/
      534     6881        /*     Process the M$SMPRT pmme                  */
      535     6882        /*************************************************/
      536     6883    1   MMP$SMPRT: PROC;

   6883  1 001475   200006 741300       MMP$SMPRT    STX1  ! ELS$+1,,AUTO

      537     6884    2   DCL VPNO SBIN(36);
      538     6885    2   DCL FLAGS SBIN;
      539     6886    2   DCL LASTPNO SBIN;
PL6.E3A0      #001=MMP$PMME File=MMP$PMME.:E05TSI                                WED 07/30/97 03:23 Page:80   
      540     6887    2   DCL I SBIN;
      541     6888    2   DCL ERR SBIN;
      542     6889                                                /**/
      543     6890        %FPT$SMPRT_V;
      544     6893    2           VPNO = B$PS0$->FPT$SMPRT_V.VPNO;

   6893  1 001476   000000 470400 xsym               LDP0    B$PS0$
         1 001477   000001 236100                    LDQ     1,,PR0
         1 001500   777777 376007                    ANQ     -1,DL
         1 001501   200007 756100                    STQ     VPNO,,AUTO

      545     6894    2           IF ~ B$PS0$->FPT$SMPRT_V.WSQFLG THEN VPNO = VPNO + %ISEGLO;

   6894  1 001502   000000 236100                    LDQ     0,,PR0
         1 001503   400000 376003                    ANQ     -131072,DU
         1 001504   400000 676003                    ERQ     -131072,DU
         1 001505   001510 600000 1                  TZE     s:6895

   6894  1 001506   000100 236007                    LDQ     64,DL
         1 001507   200007 056100                    ASQ     VPNO,,AUTO

      546     6895    2           FLAGS = BITBIN(B$PS0$->FPT$SMPRT_V.FLAGS);

   6895  1 001510   000000 236100                    LDQ     0,,PR0
         1 001511   000077 376007                    ANQ     63,DL
         1 001512   200010 756100                    STQ     FLAGS,,AUTO

      547     6896    2           LASTPNO = VPNO + B$PS0$->FPT$SMPRT_V.NUMPGS - 1;

   6896  1 001513   000001 236100                    LDQ     1,,PR0
         1 001514   000022 772000                    QRL     18
         1 001515   200007 036100                    ADLQ    VPNO,,AUTO
         1 001516   000001 136007                    SBLQ    1,DL
         1 001517   200011 756100                    STQ     LASTPNO,,AUTO

      548     6897    2           IF (LASTPNO < VPNO) OR (LASTPNO > %USERHIPAGE) THEN

PL6.E3A0      #001=MMP$PMME File=MMP$PMME.:E05TSI                                WED 07/30/97 03:23 Page:81   
   6897  1 001520   200007 116100                    CMPQ    VPNO,,AUTO
         1 001521   001524 604000 1                  TMI     s:6900
         1 001522   003777 116007                    CMPQ    2047,DL
         1 001523   001532 604400 1                  TMOZ    s:6904

      549     6898    3               DO;

      550     6899                      %ERRSETN(CODE=%E$BADVP);

   6900  1 001524   001142 236007                    LDQ     610,DL
         1 001525   000003 736000                    QLS     3
         1 001526   000000 276000 0                  ORQ     MMERR
         1 001527   000000 471400 xsym               LDP1    B$JIT$
         1 001530   100012 756100                    STQ     10,,PR1

      551     6902    3                 RETURN;

   6902  1 001531   000001 702211                    TSX2  ! 1,X1

      552     6903    3               END;
      553     6904    3           DO I = VPNO TO LASTPNO;

   6904  1 001532   200007 235100                    LDA     VPNO,,AUTO
         1 001533   200012 755100                    STA     I,,AUTO
         1 001534   001552 710000 1                  TRA     s:6906+1

      554     6905    3             CALL MME$SMPRT(EWSQ,I,FLAGS,ERR) ALTRET(BADSMPRT);

   6905  1 001535   200013 630500                    EPPR0   ERR,,AUTO
         1 001536   200021 450500                    STP0    SEGID+4,,AUTO
         1 001537   200010 631500                    EPPR1   FLAGS,,AUTO
         1 001540   200020 451500                    STP1    SEGID+3,,AUTO
         1 001541   200012 633500                    EPPR3   I,,AUTO
         1 001542   200017 453500                    STP3    SEGID+2,,AUTO
         1 001543   200004 236100                    LDQ     @EWSQ,,AUTO
         1 001544   200016 756100                    STQ     SEGID+1,,AUTO
         1 001545   200016 630500                    EPPR0   SEGID+1,,AUTO
PL6.E3A0      #001=MMP$PMME File=MMP$PMME.:E05TSI                                WED 07/30/97 03:23 Page:82   
         1 001546   000022 631400 xsym               EPPR1   B_VECTNIL+18
         1 001547   000000 701000 xent               TSX1    MME$SMPRT
         1 001550   001557 702000 1                  TSX2    BADSMPRT

      555     6906    3           END;

   6906  1 001551   200012 054100                    AOS     I,,AUTO
         1 001552   200012 236100                    LDQ     I,,AUTO
         1 001553   200011 116100                    CMPQ    LASTPNO,,AUTO
         1 001554   001535 604400 1                  TMOZ    s:6905

      556     6907    2           RETURN;

   6907  1 001555   200006 221300                    LDX1  ! ELS$+1,,AUTO
         1 001556   000001 702211                    TSX2  ! 1,X1

   6905  1 001557                       BADSMPRT     null
      557     6908    2   BADSMPRT:;
      558     6909                %ERRSETN(CODE=ERR);

   6910  1 001557   200013 236100                    LDQ     ERR,,AUTO
         1 001560   000003 736000                    QLS     3
         1 001561   000000 276000 0                  ORQ     MMERR
         1 001562   000000 470400 xsym               LDP0    B$JIT$
         1 001563   000012 756100                    STQ     10,,PR0

      559     6912    2           RETURN;

   6912  1 001564   200006 221300                    LDX1  ! ELS$+1,,AUTO
         1 001565   000001 702211                    TSX2  ! 1,X1

      560     6913    2   END MMP$SMPRT;
      561     6914                                                /**/
      562     6915                                                /**/
      563     6916        /************************************************/
      564     6917        /*     Process the M$SSC pmme                   */
      565     6918        /************************************************/
PL6.E3A0      #001=MMP$PMME File=MMP$PMME.:E05TSI                                WED 07/30/97 03:23 Page:83   
      566     6919    1   MMP$SSC: PROC;

   6919  1 001566   200006 741300       MMP$SSC      STX1  ! ELS$+1,,AUTO

      567     6920    2   DCL VPNO SBIN(36);
      568     6921    2   DCL FLAGS BIT(10);
      569     6922    2   DCL SCFLAGS BIT(10);
      570     6923    2   DCL LASTPNO SBIN;
      571     6924    2   DCL I SBIN;
      572     6925    2   DCL BASE UBIN;
      573     6926    2   DCL SEGID UBIN;
      574     6927    2   DCL 1 BSEGID REDEF SEGID,
      575     6928    2         2 * UBIN(24) UNAL,
      576     6929    2         2 SEGBITS BIT(12) UNAL;
      577     6930                                                /**/
      578     6931        %FPT$SSC_V;
      579     6935    2           VPNO = B$PS0$->FPT$SSC_V.VPNO;

   6935  1 001567   000000 470400 xsym               LDP0    B$PS0$
         1 001570   000001 236100                    LDQ     1,,PR0
         1 001571   777777 376007                    ANQ     -1,DL
         1 001572   200007 756100                    STQ     VPNO,,AUTO

      580     6936             /* If segflg is set check SEGID to see if it is resonable
      581     6937                  and the segment is not null. Then calculate VPNO realitive
      582     6938                  to the start of that segment.
      583     6939              */
      584     6940    2           IF B$PS0$->FPT$SSC_V.SEGFLG

   6940  1 001573   000000 236100                    LDQ     0,,PR0
         1 001574   200000 316003                    CANQ    65536,DU
         1 001575   001634 600000 1                  TZE     s:6956

      585     6941    3             THEN DO;

      586     6942    3                 SEGID = BITBIN(B$PS0$->FPT$SSC_V.SEGID);

PL6.E3A0      #001=MMP$PMME File=MMP$PMME.:E05TSI                                WED 07/30/97 03:23 Page:84   
   6942  1 001576   000000 236100                    LDQ     0,,PR0
         1 001577   000012 772000                    QRL     10
         1 001600   007777 376007                    ANQ     4095,DL
         1 001601   200015 756100                    STQ     SEGID,,AUTO

      587     6943    3                 IF (SEGID < BITBIN(%DS1SID)) OR (SEGID > BITBIN(%DS8SID))

   6943  1 001602   006004 116007                    CMPQ    3076,DL
         1 001603   001740 602000 1                  TNC     BADSEGID_ERR
         1 001604   006014 116007                    CMPQ    3084,DL
         1 001605   001740 603000 1                  TRC     BADSEGID_ERR

      588     6944    3                   THEN GOTO BADSEGID_ERR;
      589     6945    3                 IF

   6945  1 001606   200015 236100                    LDQ     SEGID,,AUTO
         1 001607   000030 736000                    QLS     24
         1 001610   177700 376003                    ANQ     65472,DU
         1 001611   000030 772000                    QRL     24
         1 001612   000001 736000                    QLS     1
         1 001613   000000 471400 xsym               LDP1    B$USERLS$
         1 001614   100000 236106                    LDQ     0,QL,PR1
         1 001615   000400 316007                    CANQ    256,DL
         1 001616   001740 600000 1                  TZE     BADSEGID_ERR

      590     6946                        %NOTNULL (LS$ = B$USERLS$, SEGID = "BSEGID.SEGBITS");

   6947  1 001617   001620 710000 1                  TRA     s:6951

      591     6949    3                   THEN ; ELSE GOTO BADSEGID_ERR;
      592     6950                      %GETDBASE (LS$ = B$USERLS$,SEGID="BSEGID.SEGBITS",DBASE=BASE);

   6951  1 001620   200015 236100                    LDQ     SEGID,,AUTO
         1 001621   000030 736000                    QLS     24
         1 001622   177700 376003                    ANQ     65472,DU
         1 001623   000030 772000                    QRL     24
         1 001624   000001 736000                    QLS     1
PL6.E3A0      #001=MMP$PMME File=MMP$PMME.:E05TSI                                WED 07/30/97 03:23 Page:85   
         1 001625   100001 235106                    LDA     1,QL,PR1
         1 001626   200014 755100                    STA     BASE,,AUTO

      593     6953    3                 VPNO = VPNO + BASE / 4096;

   6953  1 001627   200014 236100                    LDQ     BASE,,AUTO
         1 001630   000014 772000                    QRL     12
         1 001631   200007 036100                    ADLQ    VPNO,,AUTO
         1 001632   200007 756100                    STQ     VPNO,,AUTO

      594     6954    3               END;

   6954  1 001633   001640 710000 1                  TRA     s:6958

      595     6955    2             ELSE
      596     6956    2             IF NOT B$PS0$->FPT$SSC_V.WSQFLG THEN VPNO = VPNO + %ISEGLO;

   6956  1 001634   000000 234100                    SZN     0,,PR0
         1 001635   001640 604000 1                  TMI     s:6958

   6956  1 001636   000100 236007                    LDQ     64,DL
         1 001637   200007 056100                    ASQ     VPNO,,AUTO

      597     6957        /* Make sure he can't affect bits used by CP-6 */
      598     6958    2           FLAGS = B$PS0$->FPT$SSC_V.FLAGS;

   6958  1 001640   000000 236100                    LDQ     0,,PR0
         1 001641   000032 736000                    QLS     26
         1 001642   200010 756100                    STQ     FLAGS,,AUTO

      599     6959    2           IF EWSQ ~= %DBWSQ THEN

   6959  1 001643   200004 471500                    LDP1    @EWSQ,,AUTO
         1 001644   100000 235100                    LDA     0,,PR1
         1 001645   000005 115007                    CMPA    5,DL
         1 001646   001653 600000 1                  TZE     s:6961

PL6.E3A0      #001=MMP$PMME File=MMP$PMME.:E05TSI                                WED 07/30/97 03:23 Page:86   
      600     6960    2             FLAGS = FLAGS & %SCAVAIL;

   6960  1 001647   200010 236100                    LDQ     FLAGS,,AUTO
         1 001650   777400 376003                    ANQ     -256,DU
         1 001651   170000 376003                    ANQ     61440,DU
         1 001652   200010 756100                    STQ     FLAGS,,AUTO

      601     6961    2           LASTPNO = VPNO + B$PS0$->FPT$SSC_V.NUMPGS - 1;

   6961  1 001653   000001 236100                    LDQ     1,,PR0
         1 001654   000022 772000                    QRL     18
         1 001655   200007 036100                    ADLQ    VPNO,,AUTO
         1 001656   000001 136007                    SBLQ    1,DL
         1 001657   200012 756100                    STQ     LASTPNO,,AUTO

      602     6962    2           IF (LASTPNO < VPNO) OR (LASTPNO > %USERHIPAGE) THEN

   6962  1 001660   200007 116100                    CMPQ    VPNO,,AUTO
         1 001661   001664 604000 1                  TMI     s:6965
         1 001662   003777 116007                    CMPQ    2047,DL
         1 001663   001672 604400 1                  TMOZ    s:6969

      603     6963    3               DO;

      604     6964                      %ERRSETN(CODE=%E$BADVP);

   6965  1 001664   001142 236007                    LDQ     610,DL
         1 001665   000003 736000                    QLS     3
         1 001666   000000 276000 0                  ORQ     MMERR
         1 001667   000000 473400 xsym               LDP3    B$JIT$
         1 001670   300012 756100                    STQ     10,,PR3

      605     6967    3                 RETURN;

   6967  1 001671   000001 702211                    TSX2  ! 1,X1

      606     6968    3               END;
PL6.E3A0      #001=MMP$PMME File=MMP$PMME.:E05TSI                                WED 07/30/97 03:23 Page:87   
      607     6969    3           DO I = VPNO TO LASTPNO;

   6969  1 001672   200007 235100                    LDA     VPNO,,AUTO
         1 001673   200013 755100                    STA     I,,AUTO
         1 001674   001730 710000 1                  TRA     s:6983+1

      608     6970    3             IF B$UPT$->B$MAP.RPN(I) = MM_FPMC.RPN THEN

   6970  1 001675   000000 470400 xsym               LDP0    B$UPT$
         1 001676   200013 720100                    LXL0    I,,AUTO
         1 001677   000000 221110                    LDX1    0,X0,PR0
         1 001700   000000 101000 xsym               CMPX1   MM_FPMC
         1 001701   001711 601000 1                  TNZ     s:6979

      609     6971    4                 DO;

      610     6972        /*E*   ERROR:  MMP-E$BADAREA-0
      611     6973               MESSAGE: The specified area contains pages not owned by user */
      612     6974                        %ERRSETN(CODE=%E$BADAREA);

   6975  1 001702   001147 236007                    LDQ     615,DL
         1 001703   000003 736000                    QLS     3
         1 001704   000000 276000 0                  ORQ     MMERR
         1 001705   000000 471400 xsym               LDP1    B$JIT$
         1 001706   100012 756100                    STQ     10,,PR1

      613     6977    4                   RETURN;

   6977  1 001707   200006 221300                    LDX1  ! ELS$+1,,AUTO
         1 001710   000001 702211                    TSX2  ! 1,X1

      614     6978    4                 END;
      615     6979    3             SCFLAGS = FLAGS | (B$UPT$->B$MAP.SCTRL(I) & ~%SCAVAIL);

   6979  1 001711   000000 236110                    LDQ     0,X0,PR0
         1 001712   000022 736000                    QLS     18
         1 001713   777400 376003                    ANQ     -256,DU
PL6.E3A0      #001=MMP$PMME File=MMP$PMME.:E05TSI                                WED 07/30/97 03:23 Page:88   
         1 001714   607400 376003                    ANQ     -61696,DU
         1 001715   200016 756100                    STQ     SEGID+1,,AUTO
         1 001716   200010 236100                    LDQ     FLAGS,,AUTO
         1 001717   777400 376003                    ANQ     -256,DU
         1 001720   200016 276100                    ORQ     SEGID+1,,AUTO
         1 001721   200011 756100                    STQ     SCFLAGS,,AUTO

      616     6980                  %SSC (P$ = B$UPT$ , VPNO = I , SC = SCFLAGS);

   6981  1 001722   200011 236100                    LDQ     SCFLAGS,,AUTO
         1 001723   000022 772000                    QRL     18
         1 001724   000000 676110                    ERQ     0,X0,PR0
         1 001725   777400 376007                    ANQ     -256,DL
         1 001726   000000 656110                    ERSQ    0,X0,PR0

      617     6983    3           END;

   6983  1 001727   200013 054100                    AOS     I,,AUTO
         1 001730   200013 236100                    LDQ     I,,AUTO
         1 001731   200012 116100                    CMPQ    LASTPNO,,AUTO
         1 001732   001675 604400 1                  TMOZ    s:6970

      618     6984    2           CALL HFC$ASSOCCLR;

   6984  1 001733   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 001734   000000 701000 xent               TSX1    HFC$ASSOCCLR
         1 001735   000000 011000                    NOP     0

      619     6985    2           RETURN;

   6985  1 001736   200006 221300                    LDX1  ! ELS$+1,,AUTO
         1 001737   000001 702211                    TSX2  ! 1,X1

   6979  1 001740                       BADSEGID_ERR null
      620     6986    2   BADSEGID_ERR: ;
      621     6987                %ERRSETN(CODE=%E$BADSEGID);

PL6.E3A0      #001=MMP$PMME File=MMP$PMME.:E05TSI                                WED 07/30/97 03:23 Page:89   
   6988  1 001740   001132 236007                    LDQ     602,DL
         1 001741   000003 736000                    QLS     3
         1 001742   000000 276000 0                  ORQ     MMERR
         1 001743   000000 471400 xsym               LDP1    B$JIT$
         1 001744   100012 756100                    STQ     10,,PR1

      622     6990    2           RETURN;

   6990  1 001745   000001 702211                    TSX2  ! 1,X1

      623     6991    2   END MMP$SSC;
      624     6992                                                /**/
      625     6993                                                /**/
      626     6994        /************************************************/
      627     6995        /*     Process the M$GDDL pmme                  */
      628     6996        /************************************************/
      629     6997    1   MMP$GDDL: PROC;

   6997  1 001746   200006 741300       MMP$GDDL     STX1  ! ELS$+1,,AUTO

      630     6998    2   DCL NPGS SBIN;
      631     6999    2   DCL BSIZE SBIN;
      632     7000    2   DCL START$ PTR;
      633     7001    2   DCL 1 RESULTS BASED ALIGNED,
      634     7002    2         2 WORD1 UBIN(36),
      635     7003    2         2 P$ PTR,
      636     7004    2         2 WORD3 UBIN(36);
      637     7005                                                /**/
      638     7006    2           CALL MMI$GDDL(EWSQ,NPGS,BSIZE,START$) ALTRET(BADGDDL);

   7006  1 001747   200011 630500                    EPPR0   START$,,AUTO
         1 001750   200021 450500                    STP0    SEGID+4,,AUTO
         1 001751   200010 631500                    EPPR1   BSIZE,,AUTO
         1 001752   200020 451500                    STP1    SEGID+3,,AUTO
         1 001753   200007 633500                    EPPR3   NPGS,,AUTO
         1 001754   200017 453500                    STP3    SEGID+2,,AUTO
         1 001755   200004 236100                    LDQ     @EWSQ,,AUTO
PL6.E3A0      #001=MMP$PMME File=MMP$PMME.:E05TSI                                WED 07/30/97 03:23 Page:90   
         1 001756   200016 756100                    STQ     SEGID+1,,AUTO
         1 001757   200016 630500                    EPPR0   SEGID+1,,AUTO
         1 001760   000022 631400 xsym               EPPR1   B_VECTNIL+18
         1 001761   000000 701000 xent               TSX1    MMI$GDDL
         1 001762   002003 702000 1                  TSX2    BADGDDL

      639     7007    2           B$PS0$->B$VECTOR.VSIZE = BSIZE;

   7007  1 001763   000000 470400 xsym               LDP0    B$PS0$
         1 001764   200010 236100                    LDQ     BSIZE,,AUTO
         1 001765   000020 736000                    QLS     16
         1 001766   000000 676100                    ERQ     0,,PR0
         1 001767   000034 376000 xsym               ANQ     B_VECTNIL+28
         1 001770   000000 656100                    ERSQ    0,,PR0

      640     7008    2           B$PS0$->B$VECTOR.FLAGS = '777'O;

   7008  1 001771   177600 236007                    LDQ     65408,DL
         1 001772   000000 256100                    ORSQ    0,,PR0

      641     7009    2           B$PS0$->B$VECTOR.V = '01'B;

   7009  1 001773   000000 236100                    LDQ     0,,PR0
         1 001774   000004 376000 2                  ANQ     4
         1 001775   000040 276007                    ORQ     32,DL
         1 001776   000000 756100                    STQ     0,,PR0

      642     7010    2           B$PS0$->RESULTS.P$ = START$;

   7010  1 001777   200011 236100                    LDQ     START$,,AUTO
         1 002000   000001 756100                    STQ     1,,PR0

      643     7011    2           B$PS0$->RESULTS.WORD3 = NPGS;

   7011  1 002001   200007 235100                    LDA     NPGS,,AUTO
         1 002002   000002 755100                    STA     2,,PR0

PL6.E3A0      #001=MMP$PMME File=MMP$PMME.:E05TSI                                WED 07/30/97 03:23 Page:91   
      644     7012    2   BADGDDL:
      645     7013    2           RETURN;

   7013  1 002003   200006 221300       BADGDDL      LDX1  ! ELS$+1,,AUTO
         1 002004   000001 702211                    TSX2  ! 1,X1

      646     7014    2   END MMP$GDDL;
      647     7015                                                /**/
      648     7016                                                /**/
      649     7017        /***********************************************/
      650     7018        /*     Process the M$MAKUSER pmme              */
      651     7019        /***********************************************/
      652     7020    1   MMP$MAKE: PROC;

   7020  1 002005   200006 741300       MMP$MAKE     STX1  ! ELS$+1,,AUTO

      653     7021    2   DCL PPJIT SBIN;
      654     7022    2   DCL PPHJIT SBIN;
      655     7023    2   DCL PPROSEG SBIN;
      656     7024                                                /**/
      657     7025        %FPT$MAKUSER_V;
      658     7028                                                /**/
      659     7029    2           PPJIT = B$PS0$->FPT$MAKUSER_V.JITPP;

   7029  1 002006   000000 470400 xsym               LDP0    B$PS0$
         1 002007   000000 235100                    LDA     0,,PR0
         1 002010   200007 755100                    STA     PPJIT,,AUTO

      660     7030    2           PPHJIT = B$PS0$->FPT$MAKUSER_V.HJITPP;

   7030  1 002011   000001 235100                    LDA     1,,PR0
         1 002012   200010 755100                    STA     PPHJIT,,AUTO

      661     7031    2           PPROSEG = B$PS0$->FPT$MAKUSER_V.ROPP;

   7031  1 002013   000002 235100                    LDA     2,,PR0
         1 002014   200011 755100                    STA     PPROSEG,,AUTO
PL6.E3A0      #001=MMP$PMME File=MMP$PMME.:E05TSI                                WED 07/30/97 03:23 Page:92   

      662     7032    2           CALL MMK$MAKUSER(PPJIT,PPHJIT,PPROSEG) ALTRET(BADMAKE);

   7032  1 002015   200011 631500                    EPPR1   PPROSEG,,AUTO
         1 002016   200020 451500                    STP1    SEGID+3,,AUTO
         1 002017   200010 633500                    EPPR3   PPHJIT,,AUTO
         1 002020   200017 453500                    STP3    SEGID+2,,AUTO
         1 002021   200007 634500                    EPPR4   PPJIT,,AUTO
         1 002022   200016 454500                    STP4    SEGID+1,,AUTO
         1 002023   200016 630500                    EPPR0   SEGID+1,,AUTO
         1 002024   000021 631400 xsym               EPPR1   B_VECTNIL+17
         1 002025   000000 701000 xent               TSX1    MMK$MAKUSER
         1 002026   002027 702000 1                  TSX2    BADMAKE

   7031  1 002027                       BADMAKE      null
      663     7033    2   BADMAKE:;
      664     7034    2           RETURN;

   7034  1 002027   200006 221300                    LDX1  ! ELS$+1,,AUTO
         1 002030   000001 702211                    TSX2  ! 1,X1

      665     7035    2   END MMP$MAKE;
      666     7036                                                /**/
      667     7037                                                /**/
      668     7038        /********************************************/
      669     7039        /*     Process the M$SAD pmme               */
      670     7040        /********************************************/
      671     7041    1   MMP$SAD: PROC;

   7041  1 002031   200006 741300       MMP$SAD      STX1  ! ELS$+1,,AUTO

      672     7042    2   DCL MSID UBIN(36);
      673     7043    2   DCL USID UBIN(36);
      674     7044                                                /**/
      675     7045        %FPT$SAD_V;
      676     7048                                                /**/
      677     7049    2           MSID = BITBIN(B$PS0$->FPT$SAD_V.MONSID);
PL6.E3A0      #001=MMP$PMME File=MMP$PMME.:E05TSI                                WED 07/30/97 03:23 Page:93   

   7049  1 002032   000000 470400 xsym               LDP0    B$PS0$
         1 002033   000000 236100                    LDQ     0,,PR0
         1 002034   007777 376007                    ANQ     4095,DL
         1 002035   200007 756100                    STQ     MSID,,AUTO

      678     7050    2           USID = BITBIN(B$PS0$->FPT$SAD_V.USERSID);

   7050  1 002036   000000 236100                    LDQ     0,,PR0
         1 002037   000022 772000                    QRL     18
         1 002040   007777 376007                    ANQ     4095,DL
         1 002041   200010 756100                    STQ     USID,,AUTO

      679     7051    2           CALL MMM$ACCESS(EWSQ,MSID,USID) ALTRET(BADSAD);

   7051  1 002042   200010 631500                    EPPR1   USID,,AUTO
         1 002043   200020 451500                    STP1    SEGID+3,,AUTO
         1 002044   200007 633500                    EPPR3   MSID,,AUTO
         1 002045   200017 453500                    STP3    SEGID+2,,AUTO
         1 002046   200004 236100                    LDQ     @EWSQ,,AUTO
         1 002047   200016 756100                    STQ     SEGID+1,,AUTO
         1 002050   200016 630500                    EPPR0   SEGID+1,,AUTO
         1 002051   000021 631400 xsym               EPPR1   B_VECTNIL+17
         1 002052   000000 701000 xent               TSX1    MMM$ACCESS
         1 002053   002054 702000 1                  TSX2    BADSAD

   7050  1 002054                       BADSAD       null
      680     7052    2   BADSAD: ;
      681     7053    2           RETURN;

   7053  1 002054   200006 221300                    LDX1  ! ELS$+1,,AUTO
         1 002055   000001 702211                    TSX2  ! 1,X1

      682     7054    2   END MMP$SAD;
      683     7055                                                /**/
      684     7056                                                /**/
      685     7057        /********************************************/
PL6.E3A0      #001=MMP$PMME File=MMP$PMME.:E05TSI                                WED 07/30/97 03:23 Page:94   
      686     7058        /*     Process the M$STD pmme               */
      687     7059        /********************************************/
      688     7060    1   MMP$STD: PROC;

   7060  1 002056   200006 741300       MMP$STD      STX1  ! ELS$+1,,AUTO

      689     7061    2   DCL USID UBIN(36);
      690     7062        /**/
      691     7063        %FPT$STD_V;
      692     7066        /**/
      693     7067    2           USID = BITBIN(B$PS0$->FPT$STD_V.USERSID);

   7067  1 002057   000000 470400 xsym               LDP0    B$PS0$
         1 002060   000000 236100                    LDQ     0,,PR0
         1 002061   007777 376007                    ANQ     4095,DL
         1 002062   200007 756100                    STQ     USID,,AUTO

      694     7068    2           CALL MMM$NEW_DR(EWSQ,USID,USID) ALTRET(BAD_SETLS);

   7068  1 002063   200007 631500                    EPPR1   USID,,AUTO
         1 002064   200020 451500                    STP1    SEGID+3,,AUTO
         1 002065   200007 633500                    EPPR3   USID,,AUTO
         1 002066   200017 453500                    STP3    SEGID+2,,AUTO
         1 002067   200004 236100                    LDQ     @EWSQ,,AUTO
         1 002070   200016 756100                    STQ     SEGID+1,,AUTO
         1 002071   200016 630500                    EPPR0   SEGID+1,,AUTO
         1 002072   000021 631400 xsym               EPPR1   B_VECTNIL+17
         1 002073   000000 701000 xent               TSX1    MMM$NEW_DR
         1 002074   002075 702000 1                  TSX2    BAD_SETLS

   7067  1 002075                       BAD_SETLS    null
      695     7069    2   BAD_SETLS:;
      696     7070    2           RETURN;

   7070  1 002075   200006 221300                    LDX1  ! ELS$+1,,AUTO
         1 002076   000001 702211                    TSX2  ! 1,X1

PL6.E3A0      #001=MMP$PMME File=MMP$PMME.:E05TSI                                WED 07/30/97 03:23 Page:95   
      697     7071    2   END MMP$STD;
      698     7072                                                /**/
      699     7073                                                /**/
      700     7074        /*******************************************/
      701     7075        /*     Process M$BADPP & M$GOODPP pmmes    */
      702     7076        /*******************************************/
      703     7077    1   MMP$TDPP: PROC;

   7077  1 002077   200006 741300       MMP$TDPP     STX1  ! ELS$+1,,AUTO

      704     7078    2   DCL PPNO UBIN;
      705     7079    2   DCL FOUNDFLG SBIN;
      706     7080    2   DCL MM0$FINDPG ENTRY(5);
      707     7081        /**/
      708     7082        %FPT$BADPP_V;
      709     7085    2           PPNO = B$PS0$->FPT$BADPP_V.PPNO;

   7085  1 002100   000000 470400 xsym               LDP0    B$PS0$
         1 002101   000000 235100                    LDA     0,,PR0
         1 002102   200007 755100                    STA     PPNO,,AUTO

      710     7086    2           IF (PPNO > MM_PCORE) OR (MM$PPUT.STOLEN(PPNO) AND MM$PPUT.USER#(PPNO)=511)
              7086                    THEN

   7086  1 002103   200007 236100                    LDQ     PPNO,,AUTO
         1 002104   002117 604000 1                  TMI     s:7089
         1 002105   000000 116000 xsym               CMPQ    MM_PCORE
         1 002106   002117 605400 1                  TPNZ    s:7089
         1 002107   000000 471400 xsym               LDP1    B$PPUT$
         1 002110   100000 236106                    LDQ     0,QL,PR1
         1 002111   002000 316003                    CANQ    1024,DU
         1 002112   002125 600000 1                  TZE     s:7093
         1 002113   100000 236105                    LDQ     0,AL,PR1
         1 002114   000777 376003                    ANQ     511,DU
         1 002115   000777 116003                    CMPQ    511,DU
         1 002116   002125 601000 1                  TNZ     s:7093

PL6.E3A0      #001=MMP$PMME File=MMP$PMME.:E05TSI                                WED 07/30/97 03:23 Page:96   
      711     7087    3               DO;

      712     7088                      %ERRSETN(CODE=%E$BADVP);

   7089  1 002117   001142 236007                    LDQ     610,DL
         1 002120   000003 736000                    QLS     3
         1 002121   000000 276000 0                  ORQ     MMERR
         1 002122   000000 471400 xsym               LDP1    B$JIT$
         1 002123   100012 756100                    STQ     10,,PR1

      713     7091    3                 RETURN;

   7091  1 002124   000001 702211                    TSX2  ! 1,X1

      714     7092    3               END;
      715     7093    2           IF X0VAL = %C$GOODPP#

   7093  1 002125   200003 473500                    LDP3    @X0VAL,,AUTO
         1 002126   300000 235100                    LDA     0,,PR3
         1 002127   000020 115007                    CMPA    16,DL
         1 002130   002235 601000 1                  TNZ     s:7131

      716     7094    3             THEN DO;

      717     7095                                 /* Make sure that the page is really marked bad...   */
      718     7096                      %LOCK(G=MM_LOCK);

   7097  1 002131   000010 630400 2                  EPPR0   8
         1 002132   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 002133   000000 701000 xent               TSX1    HFC$LOCK
         1 002134   000000 011000                    NOP     0

      719     7099    3                 IF PPNO = 0 THEN

   7099  1 002135   200007 235100                    LDA     PPNO,,AUTO
         1 002136   002142 601000 1                  TNZ     s:7101

PL6.E3A0      #001=MMP$PMME File=MMP$PMME.:E05TSI                                WED 07/30/97 03:23 Page:97   
      720     7100    3                   FOUNDFLG = -1;

   7100  1 002137   000001 336007                    LCQ     1,DL
         1 002140   200010 756100                    STQ     FOUNDFLG,,AUTO
         1 002141   002164 710000 1                  TRA     s:7106

      721     7101    3                   ELSE IF PPNO = MM_BPPH THEN

   7101  1 002142   200007 236100                    LDQ     PPNO,,AUTO
         1 002143   002150 604000 1                  TMI     s:7104
         1 002144   000000 116000 xsym               CMPQ    MM_BPPH
         1 002145   002150 601000 1                  TNZ     s:7104

      722     7102    3                     FOUNDFLG = 0;

   7102  1 002146   200010 450100                    STZ     FOUNDFLG,,AUTO
         1 002147   002164 710000 1                  TRA     s:7106

      723     7103    3                     ELSE
      724     7104    3                     CALL MM0$FINDPG(PPNO,MM_BPPH,MM_BPPT,MM_BPPC,FOUNDFLG);

   7104  1 002150   200010 630500                    EPPR0   FOUNDFLG,,AUTO
         1 002151   200022 450500                    STP0    SEGID+5,,AUTO
         1 002152   000012 237000 2                  LDAQ    10
         1 002153   200020 757100                    STAQ    SEGID+3,,AUTO
         1 002154   000014 236000 2                  LDQ     12
         1 002155   200017 756100                    STQ     SEGID+2,,AUTO
         1 002156   200007 631500                    EPPR1   PPNO,,AUTO
         1 002157   200016 451500                    STP1    SEGID+1,,AUTO
         1 002160   200016 630500                    EPPR0   SEGID+1,,AUTO
         1 002161   000023 631400 xsym               EPPR1   B_VECTNIL+19
         1 002162   000000 701000 xent               TSX1    MM0$FINDPG
         1 002163   000000 011000                    NOP     0

      725     7105                      %UNLOCK(G=MM_LOCK);

   7106  1 002164   000010 630400 2                  EPPR0   8
PL6.E3A0      #001=MMP$PMME File=MMP$PMME.:E05TSI                                WED 07/30/97 03:23 Page:98   
         1 002165   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 002166   000000 701000 xent               TSX1    HFC$UNLOCK
         1 002167   000000 011000                    NOP     0

      726     7108    3                 IF FOUNDFLG < 0 AND (NOT MM$PPUT.SUSPECT(PPNO)) THEN

   7108  1 002170   200010 235100                    LDA     FOUNDFLG,,AUTO
         1 002171   002205 605000 1                  TPL     s:7118
         1 002172   000000 470400 xsym               LDP0    B$PPUT$
         1 002173   200007 720100                    LXL0    PPNO,,AUTO
         1 002174   000000 234110                    SZN     0,X0,PR0
         1 002175   002205 604000 1                  TMI     s:7118

      727     7109    4                     DO;

      728     7110              /*E*    ERROR:  MMP-E$NOTBADPP-0
      729     7111                    MESSAGE: Attempt to return a page which was never taken out of service.
      730     7112              */
      731     7113                            %ERRSETN(CODE=%E$NOTBADPP);

   7114  1 002176   001200 236007                    LDQ     640,DL
         1 002177   000003 736000                    QLS     3
         1 002200   000000 276000 0                  ORQ     MMERR
         1 002201   000000 471400 xsym               LDP1    B$JIT$
         1 002202   100012 756100                    STQ     10,,PR1

      732     7116    4                       RETURN;

   7116  1 002203   200006 221300                    LDX1  ! ELS$+1,,AUTO
         1 002204   000001 702211                    TSX2  ! 1,X1

      733     7117    4                     END;
      734     7118    3                 IF MM$PPUT.IN_TEST(PPNO) THEN

   7118  1 002205   000000 470400 xsym               LDP0    B$PPUT$
         1 002206   200007 720100                    LXL0    PPNO,,AUTO
         1 002207   000000 236110                    LDQ     0,X0,PR0
PL6.E3A0      #001=MMP$PMME File=MMP$PMME.:E05TSI                                WED 07/30/97 03:23 Page:99   
         1 002210   100000 316003                    CANQ    32768,DU
         1 002211   002221 600000 1                  TZE     s:7128

      735     7119        /*E*   ERROR:  MMP-E$TESTERR-0
      736     7120               MESSAGE: Attempt to return page still in test to free page chain.
      737     7121        */
      738     7122    4                     DO;

      739     7123                            %ERRSETN(CODE=%E$TESTERR);

   7124  1 002212   001163 236007                    LDQ     627,DL
         1 002213   000003 736000                    QLS     3
         1 002214   000000 276000 0                  ORQ     MMERR
         1 002215   000000 471400 xsym               LDP1    B$JIT$
         1 002216   100012 756100                    STQ     10,,PR1

      740     7126    4                       RETURN;

   7126  1 002217   200006 221300                    LDX1  ! ELS$+1,,AUTO
         1 002220   000001 702211                    TSX2  ! 1,X1

      741     7127    4                     END;
      742     7128    3                 IF FOUNDFLG >= 0 THEN CALL MMB$GOODPP(PPNO);

   7128  1 002221   000000 115003                    CMPA    0,DU
         1 002222   002232 604000 1                  TMI     s:7129

   7128  1 002223   200007 631500                    EPPR1   PPNO,,AUTO
         1 002224   200016 451500                    STP1    SEGID+1,,AUTO
         1 002225   200016 630500                    EPPR0   SEGID+1,,AUTO
         1 002226   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 002227   000000 701000 xent               TSX1    MMB$GOODPP
         1 002230   000000 011000                    NOP     0
         1 002231   002243 710000 1                  TRA     s:7132

      743     7129    3                   ELSE MM$PPUT.SUSPECT(PPNO) = %FALSE;

PL6.E3A0      #001=MMP$PMME File=MMP$PMME.:E05TSI                                WED 07/30/97 03:23 Page:100  
   7129  1 002232   000031 236000 xsym               LDQ     B_VECTNIL+25
         1 002233   000000 356110                    ANSQ    0,X0,PR0

      744     7130    3               END;

   7130  1 002234   002243 710000 1                  TRA     s:7132

      745     7131    2             ELSE CALL MMB$BADPP(PPNO);

   7131  1 002235   200007 634500                    EPPR4   PPNO,,AUTO
         1 002236   200016 454500                    STP4    SEGID+1,,AUTO
         1 002237   200016 630500                    EPPR0   SEGID+1,,AUTO
         1 002240   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 002241   000000 701000 xent               TSX1    MMB$BADPP
         1 002242   000000 011000                    NOP     0

      746     7132    2           RETURN;

   7132  1 002243   200006 221300                    LDX1  ! ELS$+1,,AUTO
         1 002244   000001 702211                    TSX2  ! 1,X1

      747     7133    2   END MMP$TDPP;
      748     7134                                                /**/
      749     7135                                                /**/
      750     7136        /****************************************/
      751     7137        /*     Process the M$GBPL pmme          */
      752     7138        /****************************************/
      753     7139    1   MMP$GBPL: PROC;

   7139  1 002245   200006 741300       MMP$GBPL     STX1  ! ELS$+1,,AUTO

      754     7140    2   DCL HIGHPP UBIN;
      755     7141    2   DCL LOWPP UBIN;
      756     7142    2   DCL MAXPGS UBIN;
      757     7143    2   DCL FOUNDPGS UBIN;
      758     7144    2   DCL PPNO UBIN;
      759     7145        /**/
PL6.E3A0      #001=MMP$PMME File=MMP$PMME.:E05TSI                                WED 07/30/97 03:23 Page:101  
      760     7146        %VLP$PGLIST_V;
      761     7149        %FPT$GBPL_V;
      762     7152                %LOCK(G=MM_LOCK);

   7153  1 002246   000010 630400 2                  EPPR0   8
         1 002247   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 002250   000000 701000 xent               TSX1    HFC$LOCK
         1 002251   000000 011000                    NOP     0

      763     7155    2           HIGHPP = B$PS0$->FPT$GBPL_V.HIGHPP;

   7155  1 002252   000000 470400 xsym               LDP0    B$PS0$
         1 002253   000000 236100                    LDQ     0,,PR0
         1 002254   000022 772000                    QRL     18
         1 002255   200007 756100                    STQ     HIGHPP,,AUTO

      764     7156    2           LOWPP = B$PS0$->FPT$GBPL_V.LOWPP;

   7156  1 002256   000000 236100                    LDQ     0,,PR0
         1 002257   777777 376007                    ANQ     -1,DL
         1 002260   200010 756100                    STQ     LOWPP,,AUTO

      765     7157    2           MAXPGS = B$PS0$->FPT$GBPL_V.MAXPGS;

   7157  1 002261   000001 235100                    LDA     1,,PR0
         1 002262   200011 755100                    STA     MAXPGS,,AUTO

      766     7158    2           FOUNDPGS = 0;

   7158  1 002263   200012 450100                    STZ     FOUNDPGS,,AUTO

      767     7159        /* Return in the structure "VLP$PGLIST" as many physical page      */
      768     7160        /* numbers as possible (up to maxpgs) which are currently on the   */
      769     7161        /* "bad" page list and have page numbers between lowppp and HIGHPP.*/
      770     7162        /* Pages on the "bad" page list are pages which have been taken out*/
      771     7163        /* of service due to suspected errors within them.                 */
      772     7164    2           PPNO = MM_BPPH;                 /* Head of bad page list              */
PL6.E3A0      #001=MMP$PMME File=MMP$PMME.:E05TSI                                WED 07/30/97 03:23 Page:102  

   7164  1 002264   000000 235000 xsym               LDA     MM_BPPH
         1 002265   200013 755100                    STA     PPNO,,AUTO

      773     7165    3           DO WHILE ((PPNO ~= 0) AND (FOUNDPGS < MAXPGS));

   7165  1 002266   002311 710000 1                  TRA     s:7172

      774     7166    3             IF (PPNO >= LOWPP) AND (PPNO <= HIGHPP) THEN

   7166  1 002267   200013 236100                    LDQ     PPNO,,AUTO
         1 002270   200010 116100                    CMPQ    LOWPP,,AUTO
         1 002271   002305 602000 1                  TNC     s:7171
         1 002272   200007 116100                    CMPQ    HIGHPP,,AUTO
         1 002273   002275 600000 1                  TZE     s:7168
         1 002274   002305 603000 1                  TRC     s:7171

      775     7167    4                 DO;

      776     7168    4                   FOUNDPGS = FOUNDPGS + 1;

   7168  1 002275   200012 235100                    LDA     FOUNDPGS,,AUTO
         1 002276   000001 035007                    ADLA    1,DL
         1 002277   200012 755100                    STA     FOUNDPGS,,AUTO

      777     7169    4                   B$PS1$->VLP$PGLIST_V.PGLIST(FOUNDPGS) = PPNO;

   7169  1 002300   000001 735000                    ALS     1
         1 002301   000000 470400 xsym               LDP0    B$PS1$
         1 002302   000105 101500                    MRL     fill='000'O
         1 002303   200013 000004                    ADSC9   PPNO,,AUTO               cn=0,n=4
         1 002304   000000 400002                    ADSC9   0,A,PR0                  cn=2,n=2

      778     7170    4                 END;

      779     7171    3             PPNO = MM$PPUT.PPNO(PPNO);

PL6.E3A0      #001=MMP$PMME File=MMP$PMME.:E05TSI                                WED 07/30/97 03:23 Page:103  
   7171  1 002305   000000 470400 xsym               LDP0    B$PPUT$
         1 002306   000000 236106                    LDQ     0,QL,PR0
         1 002307   777777 376007                    ANQ     -1,DL
         1 002310   200013 756100                    STQ     PPNO,,AUTO

      780     7172    3           END;

   7172  1 002311   200013 235100                    LDA     PPNO,,AUTO
         1 002312   002316 600000 1                  TZE     s:7174
         1 002313   200012 236100                    LDQ     FOUNDPGS,,AUTO
         1 002314   200011 116100                    CMPQ    MAXPGS,,AUTO
         1 002315   002267 602000 1                  TNC     s:7166

      781     7173                %UNLOCK(G=MM_LOCK);

   7174  1 002316   000010 630400 2                  EPPR0   8
         1 002317   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 002320   000000 701000 xent               TSX1    HFC$UNLOCK
         1 002321   000000 011000                    NOP     0

      782     7176    2           B$PS1$->VLP$PGLIST_V.NPAGES = FOUNDPGS;

   7176  1 002322   200012 720100                    LXL0    FOUNDPGS,,AUTO
         1 002323   000000 470400 xsym               LDP0    B$PS1$
         1 002324   000000 740100                    STX0    0,,PR0

      783     7177    2           RETURN;

   7177  1 002325   200006 221300                    LDX1  ! ELS$+1,,AUTO
         1 002326   000001 702211                    TSX2  ! 1,X1

      784     7178    2   END MMP$GBPL;
      785     7179                                                /**/
      786     7180                                                /**/
      787     7181        /******************************************/
      788     7182        /*     Process M$MPL and M$UMPL pmmes     */
      789     7183        /******************************************/
PL6.E3A0      #001=MMP$PMME File=MMP$PMME.:E05TSI                                WED 07/30/97 03:23 Page:104  
      790     7184    1   MMP$PL: PROC;

   7184  1 002327   200006 741300       MMP$PL       STX1  ! ELS$+1,,AUTO

      791     7185    2   DCL NPAGES UBIN;
      792     7186    2   DCL PPNO UBIN;
      793     7187    2   DCL I SBIN;
      794     7188        /**/
      795     7189        %VLP$PGLIST_V;
      796     7192    2           NPAGES = B$PS0$->VLP$PGLIST_V.NPAGES;

   7192  1 002330   000000 470400 xsym               LDP0    B$PS0$
         1 002331   000000 236100                    LDQ     0,,PR0
         1 002332   000022 772000                    QRL     18
         1 002333   200007 756100                    STQ     NPAGES,,AUTO

      797     7193                %LOCK(G=MM_LOCK);

   7194  1 002334   000010 630400 2                  EPPR0   8
         1 002335   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 002336   000000 701000 xent               TSX1    HFC$LOCK
         1 002337   000000 011000                    NOP     0

      798     7196    3           DO I = 1 TO NPAGES;

   7196  1 002340   000001 235007                    LDA     1,DL
         1 002341   200011 755100                    STA     I,,AUTO
         1 002342   002420 710000 1                  TRA     s:7217+1

      799     7197    3             PPNO = B$PS0$->VLP$PGLIST_V.PGLIST(I);

   7197  1 002343   200011 235100                    LDA     I,,AUTO
         1 002344   000001 735000                    ALS     1
         1 002345   000000 470400 xsym               LDP0    B$PS0$
         1 002346   000100 101505                    MRL     fill='000'O
         1 002347   000000 400002                    ADSC9   0,A,PR0                  cn=2,n=2
         1 002350   200010 000004                    ADSC9   PPNO,,AUTO               cn=0,n=4
PL6.E3A0      #001=MMP$PMME File=MMP$PMME.:E05TSI                                WED 07/30/97 03:23 Page:105  

      800     7198    3            IF (PPNO > MM_PCORE) OR (MM$PPUT.STOLEN(PPNO) AND MM$PPUT.USER#(PPNO)=511)
              7198                      THEN

   7198  1 002351   200010 236100                    LDQ     PPNO,,AUTO
         1 002352   002366 604000 1                  TMI     s:7201
         1 002353   000000 116000 xsym               CMPQ    MM_PCORE
         1 002354   002366 605400 1                  TPNZ    s:7201
         1 002355   000000 471400 xsym               LDP1    B$PPUT$
         1 002356   100000 236106                    LDQ     0,QL,PR1
         1 002357   002000 316003                    CANQ    1024,DU
         1 002360   002401 600000 1                  TZE     s:7208
         1 002361   200010 720100                    LXL0    PPNO,,AUTO
         1 002362   100000 236110                    LDQ     0,X0,PR1
         1 002363   000777 376003                    ANQ     511,DU
         1 002364   000777 116003                    CMPQ    511,DU
         1 002365   002401 601000 1                  TNZ     s:7208

      801     7199    4                 DO;

      802     7200                        %UNLOCK(G=MM_LOCK);

   7201  1 002366   000010 630400 2                  EPPR0   8
         1 002367   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 002370   000000 701000 xent               TSX1    HFC$UNLOCK
         1 002371   000000 011000                    NOP     0

      803     7203                        %ERRSETN(CODE=%E$BADPP);

   7204  1 002372   001154 236007                    LDQ     620,DL
         1 002373   000003 736000                    QLS     3
         1 002374   000000 276000 0                  ORQ     MMERR
         1 002375   000000 470400 xsym               LDP0    B$JIT$
         1 002376   000012 756100                    STQ     10,,PR0

      804     7206    4                   RETURN;

PL6.E3A0      #001=MMP$PMME File=MMP$PMME.:E05TSI                                WED 07/30/97 03:23 Page:106  
   7206  1 002377   200006 221300                    LDX1  ! ELS$+1,,AUTO
         1 002400   000001 702211                    TSX2  ! 1,X1

      805     7207    4                 END;
      806     7208    3             IF X0VAL = %C$MPL#

   7208  1 002401   200003 473500                    LDP3    @X0VAL,,AUTO
         1 002402   300000 235100                    LDA     0,,PR3
         1 002403   000022 115007                    CMPA    18,DL
         1 002404   002412 601000 1                  TNZ     s:7214

      807     7209    4               THEN DO;

      808     7210    4                   MM_IN_TEST = MM_IN_TEST + 1;

   7210  1 002405   000000 054000 xsym               AOS     MM_IN_TEST

      809     7211    4                   MM$PPUT.IN_TEST(PPNO) = %TRUE; /* Mark pg in test             */

   7211  1 002406   200010 720100                    LXL0    PPNO,,AUTO
         1 002407   100000 236003                    LDQ     32768,DU
         1 002410   100000 256110                    ORSQ    0,X0,PR1

      810     7212    4                 END;

   7212  1 002411   002417 710000 1                  TRA     s:7217

      811     7213    4               ELSE DO;

      812     7214    4                   MM_IN_TEST = MM_IN_TEST - 1;

   7214  1 002412   000001 336007                    LCQ     1,DL
         1 002413   000000 056000 xsym               ASQ     MM_IN_TEST

      813     7215    4                   MM$PPUT.IN_TEST(PPNO) = %FALSE; /* Mark pg out of test        */

   7215  1 002414   200010 720100                    LXL0    PPNO,,AUTO
PL6.E3A0      #001=MMP$PMME File=MMP$PMME.:E05TSI                                WED 07/30/97 03:23 Page:107  
         1 002415   000015 236000 2                  LDQ     13
         1 002416   100000 356110                    ANSQ    0,X0,PR1

      814     7216    4                 END;

      815     7217    3           END;

   7217  1 002417   200011 054100                    AOS     I,,AUTO
         1 002420   200007 236100                    LDQ     NPAGES,,AUTO
         1 002421   002343 604000 1                  TMI     s:7197
         1 002422   200011 116100                    CMPQ    I,,AUTO
         1 002423   002343 605000 1                  TPL     s:7197

      816     7218                %UNLOCK(G=MM_LOCK);

   7219  1 002424   000010 630400 2                  EPPR0   8
         1 002425   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 002426   000000 701000 xent               TSX1    HFC$UNLOCK
         1 002427   000000 011000                    NOP     0

      817     7221    2           RETURN;

   7221  1 002430   200006 221300                    LDX1  ! ELS$+1,,AUTO
         1 002431   000001 702211                    TSX2  ! 1,X1

      818     7222    2   END MMP$PL;
      819     7223                                                /**/
      820     7224                                                /**/
      821     7225        /***********************************************/
      822     7226        /*      Process the M$PAS pmme                 */
      823     7227        /***********************************************/
      824     7228    1   MMP$PAS: PROC;

   7228  1 002432   200006 741300       MMP$PAS      STX1  ! ELS$+1,,AUTO

      825     7229    2   DCL ASBYTES UBIN;
      826     7230    2   DCL 1 DESC BASED DALIGNED,
PL6.E3A0      #001=MMP$PMME File=MMP$PMME.:E05TSI                                WED 07/30/97 03:23 Page:108  
      827     7231    2         2 * BIT(32),
      828     7232    2         2 TYPE UBIN(4) UNAL,
      829     7233    2         2 BASE UBIN;
      830     7234    2   DCL B$USERHJIT$ PTR SYMREF READONLY;
      831     7235        /**/
      832     7236        %FPT$PAS_V;
      833     7239        /**/
      834     7240    2           CALL UDN$MAGIC;

   7240  1 002433   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 002434   000000 701000 xent               TSX1    UDN$MAGIC
         1 002435   000000 011000                    NOP     0

      835     7241    2           IF B$SS.ASR.BOUND = 0

   7241  1 002436   000000 470400 xsym               LDP0    B_MPT
         1 002437   000012 236100                    LDQ     10,,PR0
         1 002440   000034 316000 xsym               CANQ    B_VECTNIL+28
         1 002441   002451 601000 1                  TNZ     s:7254

      836     7242    3             THEN DO;

      837     7243                      %ERRSETN(CODE=%E$ASE);

   7244  1 002442   001014 236007                    LDQ     524,DL
         1 002443   000003 736000                    QLS     3
         1 002444   000000 276000 0                  ORQ     MMERR
         1 002445   000000 471400 xsym               LDP1    B$JIT$
         1 002446   100012 756100                    STQ     10,,PR1

      838     7246    3                 RETURN;

   7246  1 002447   200006 221300                    LDX1  ! ELS$+1,,AUTO
         1 002450   000001 702211                    TSX2  ! 1,X1

      839     7247    3               END;
      840     7248        /*E*   ERROR:   MMP-E$ASE-0
PL6.E3A0      #001=MMP$PMME File=MMP$PMME.:E05TSI                                WED 07/30/97 03:23 Page:109  
      841     7249               MESSAGE:  Your Argument/Parameter Stack is empty.
      842     7250               MESSAGE1:  A call was made to M$PAS when no descriptors
      843     7251                          are currently on the Argument Stack.
      844     7252        */
      845     7253
      846     7254    2           B$SS.ASR.BOUND = B$SS.ASR.BOUND+1;

   7254  1 002451   000012 236100                    LDQ     10,,PR0
         1 002452   000020 772000                    QRL     16
         1 002453   000001 036007                    ADLQ    1,DL
         1 002454   000020 736000                    QLS     16
         1 002455   000012 676100                    ERQ     10,,PR0
         1 002456   000034 376000 xsym               ANQ     B_VECTNIL+28
         1 002457   000012 656100                    ERSQ    10,,PR0

      847     7255    2           ASBYTES=8;

   7255  1 002460   000010 235007                    LDA     8,DL
         1 002461   200007 755100                    STA     ASBYTES,,AUTO

      848     7256    2           CALL HFF$NILERASE(0) ALTRET(JUST_ONE);

   7256  1 002462   000016 630400 2                  EPPR0   14
         1 002463   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 002464   000000 701000 xent               TSX1    HFF$NILERASE
         1 002465   002472 702000 1                  TSX2    JUST_ONE

      849     7257    2           ASBYTES=B$PS0$->FPT$PAS_V.DESCRIPTORS *8;

   7257  1 002466   000000 470400 xsym               LDP0    B$PS0$
         1 002467   000000 235100                    LDA     0,,PR0
         1 002470   000003 735000                    ALS     3
         1 002471   200007 755100                    STA     ASBYTES,,AUTO

   7257  1 002472                       JUST_ONE     null
      850     7258    2   JUST_ONE: ;
      851     7259    2           IF B$SS.ASR.BOUND < ASBYTES
PL6.E3A0      #001=MMP$PMME File=MMP$PMME.:E05TSI                                WED 07/30/97 03:23 Page:110  

   7259  1 002472   000000 470400 xsym               LDP0    B_MPT
         1 002473   000012 236100                    LDQ     10,,PR0
         1 002474   000020 772000                    QRL     16
         1 002475   200007 116100                    CMPQ    ASBYTES,,AUTO
         1 002476   002500 603000 1                  TRC     s:7262

      852     7260    2             THEN ASBYTES = B$SS.ASR.BOUND;

   7260  1 002477   200007 756100                    STQ     ASBYTES,,AUTO

      853     7261
      854     7262    2           B$SS.ASR.BOUND = B$SS.ASR.BOUND - ASBYTES;

   7262  1 002500   200007 136100                    SBLQ    ASBYTES,,AUTO
         1 002501   000020 736000                    QLS     16
         1 002502   000012 676100                    ERQ     10,,PR0
         1 002503   000034 376000 xsym               ANQ     B_VECTNIL+28
         1 002504   000012 656100                    ERSQ    10,,PR0

      855     7263    2           ASBYTES = B$SS.ASR.BOUND + B$SS.ASR.BASE;
              7263                    /* First type 1 base not allowed */

   7263  1 002505   000012 236100                    LDQ     10,,PR0
         1 002506   000020 772000                    QRL     16
         1 002507   000013 036100                    ADLQ    11,,PR0
         1 002510   200007 756100                    STQ     ASBYTES,,AUTO

      856     7264    2           IF B$SS.ASR.BOUND ~= 0

   7264  1 002511   000012 236100                    LDQ     10,,PR0
         1 002512   000034 316000 xsym               CANQ    B_VECTNIL+28
         1 002513   002524 600000 1                  TZE     s:7266

      857     7265    2             THEN B$SS.ASR.BOUND = B$SS.ASR.BOUND -1;

   7265  1 002514   000012 236100                    LDQ     10,,PR0
PL6.E3A0      #001=MMP$PMME File=MMP$PMME.:E05TSI                                WED 07/30/97 03:23 Page:111  
         1 002515   000020 772000                    QRL     16
         1 002516   000001 136007                    SBLQ    1,DL
         1 002517   000020 736000                    QLS     16
         1 002520   000012 676100                    ERQ     10,,PR0
         1 002521   000034 376000 xsym               ANQ     B_VECTNIL+28
         1 002522   000012 656100                    ERSQ    10,,PR0
         1 002523   002534 710000 1                  TRA     s:7268

      858     7266    2             ELSE B$SS.ASR.FLAGS = B$SS.ASR.FLAGS &~ %DSNULL;

   7266  1 002524   000012 236100                    LDQ     10,,PR0
         1 002525   000024 736000                    QLS     20
         1 002526   777000 376003                    ANQ     -512,DU
         1 002527   775000 376003                    ANQ     -1536,DU
         1 002530   000024 772000                    QRL     20
         1 002531   000012 676100                    ERQ     10,,PR0
         1 002532   177600 376007                    ANQ     65408,DL
         1 002533   000012 656100                    ERSQ    10,,PR0

      859     7267
      860     7268    2           CALL CHKAS (B$SS.DR0, B$SS.X0);

   7268  1 002534   000000 236000 xsym               LDQ     B_MPT
         1 002535   000050 036003                    ADLQ    40,DU
         1 002536   200012 756100                    STQ     FOUNDPGS,,AUTO
         1 002537   000000 236000 xsym               LDQ     B_MPT
         1 002540   000030 036003                    ADLQ    24,DU
         1 002541   200011 756100                    STQ     I,,AUTO
         1 002542   002560 701000 1                  TSX1    CHKAS
         1 002543   000000 011000                    NOP     0

      861     7269    2           CALL CHKAS (PINCRC (B$USERHJIT$,AS_BASE%-ULS_BASE%)->DESC,

   7269  1 002544   200007 236100                    LDQ     ASBYTES,,AUTO
         1 002545   000020 736000                    QLS     16
         1 002546   032000 136003                    SBLQ    13312,DU
         1 002547   000000 036000 xsym               ADLQ    B$USERHJIT$
PL6.E3A0      #001=MMP$PMME File=MMP$PMME.:E05TSI                                WED 07/30/97 03:23 Page:112  
         1 002550   200012 756100                    STQ     FOUNDPGS,,AUTO
         1 002551   000000 236000 xsym               LDQ     B$USERHJIT$
         1 002552   001600 036003                    ADLQ    896,DU
         1 002553   200011 756100                    STQ     I,,AUTO
         1 002554   002560 701000 1                  TSX1    CHKAS
         1 002555   000000 011000                    NOP     0

      862     7270    2             PINCRC (B$USERHJIT$,ASBYTES-ULS_BASE%)->DESC);
      863     7271    2           RETURN;

   7271  1 002556   200006 221300                    LDX1  ! ELS$+1,,AUTO
         1 002557   000001 702211                    TSX2  ! 1,X1

      864     7272
      865     7273    2   CHKAS:  PROC (S,E);

   7273  1 002560   200010 741300       CHKAS        STX1  ! PPNO,,AUTO

      866     7274    3   DCL S UBIN;
      867     7275    3   DCL E UBIN;
      868     7276    3   DCL S$ PTR;
      869     7277
      870     7278    3           S$ = ADDR(S);

   7278  1 002561   200011 236100                    LDQ     @S,,AUTO
         1 002562   200013 756100                    STQ     S$,,AUTO

      871     7279    4           DO WHILE (S$ < ADDR(E));

   7279  1 002563   002602 710000 1                  TRA     s:7284

      872     7280    4             IF S$->DESC.TYPE=1 AND S$->DESC.BASE>=ASBYTES

   7280  1 002564   200013 470500                    LDP0    S$,,AUTO
         1 002565   000000 236100                    LDQ     0,,PR0
         1 002566   000017 376007                    ANQ     15,DL
         1 002567   000001 116007                    CMPQ    1,DL
PL6.E3A0      #001=MMP$PMME File=MMP$PMME.:E05TSI                                WED 07/30/97 03:23 Page:113  
         1 002570   002577 601000 1                  TNZ     s:7283
         1 002571   000001 236100                    LDQ     1,,PR0
         1 002572   200007 116100                    CMPQ    ASBYTES,,AUTO
         1 002573   002577 602000 1                  TNC     s:7283

      873     7281    4               THEN
      874     7282    4               S$ ->DESC = '0'B;

   7282  1 002574   000000 235003                    LDA     0,DU
         1 002575   000000 236003                    LDQ     0,DU
         1 002576   000000 757100                    STAQ    0,,PR0

      875     7283    4             S$ = PINCRW (S$,2);

   7283  1 002577   200013 236100                    LDQ     S$,,AUTO
         1 002600   000002 036003                    ADLQ    2,DU
         1 002601   200013 756100                    STQ     S$,,AUTO

      876     7284    4           END;

   7284  1 002602   200012 116100                    CMPQ    @E,,AUTO
         1 002603   002564 602000 1                  TNC     s:7280

      877     7285    3   END CHKAS;

   7285  1 002604   200010 221300                    LDX1  ! PPNO,,AUTO
         1 002605   000001 702211                    TSX2  ! 1,X1

MMERR
 Sect OctLoc
   0     000   151520 400000                                                    i...

(unnamed)
 Sect OctLoc
   0     001   000000 400000                                                    ....

(unnamed)
PL6.E3A0      #001=MMP$PMME File=MMP$PMME.:E05TSI                                WED 07/30/97 03:23 Page:114  
 Sect OctLoc
   2     000   000001 000001   000003 006000   000000 177640   000000 006014    ................
   2     004   777777 777637   000000 006003   000000 006000   000006 006000    ................
   2     010   000000 006000   000000 000000   000000 006000   000000 006000    ................
   2     014   000000 006000   677777 777777   000002 006000                    ............
      878     7286    2   END MMP$PAS;
      879     7287
      880     7288                                                /**/
      881     7289                                                /**/
      882     7290    1   END MMP$PMME;

PL6.E3A0      #001=MMP$PMME File=MMP$PMME.:E05TSI                                WED 07/30/97 03:23 Page:115  
--  Include file information  --

   ES_CNTRL_R.:E05TOU  cannot be made into a system file and is referenced.
   UD_EQU_E.:E05TOU  is referenced.
   JG_GHOSTS_C.:E05TOU  is referenced.
   MM_CNTRL_R.:E05TOU  cannot be made into a system file and is referenced.
   HF_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   HF_LOCK_C.:E05TOU  cannot be made into a system file and is referenced.
   M_ERRSET_C.:E05TOU  is referenced.
   M_ERRORS_C.:E05TOU  is referenced.
   HF_ERRORS_C.:E05TOU  is referenced.
   F$DCB.:E05TOU  cannot be made into a system file and is referenced.
   B_MLSMAC_C.:E05TOU  is referenced.
   B_ULSMAC_C.:E05TOU  is referenced.
   B_LSDATA_C.:E05TOU  cannot be made into a system file and is referenced.
   B_MAGIC_C.:E05TOU  is referenced.
   B$SS.:E05TOU  cannot be made into a system file and is referenced.
   B$MAP.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  is referenced.
   M$JIT_C.:E05TOU  cannot be made into a system file and is referenced.
   MM_MACRO_M.:E05TOU  is referenced.
   B_STRINGS_C.:E05TOU  is referenced.
   MM$SYSGEN.:E05TOU  is referenced.
   M_INFO_C.:E05TOU  is referenced.
   MM_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   B_SEGIDS_C.:E05TOU  is referenced.
   B_MACROS_C.:E05TOU  is referenced.
   MM$CP6V_C.:E05TOU  is referenced.
      No diagnostics issued in procedure MMP$PMME.
PL6.E3A0      #001=MMP$PMME File=MMP$PMME.:E05TSI                                WED 07/30/97 03:23 Page:116  

 **** Variables and constants ****

  ****  Section 000 RoData MMP$PMME

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/b STRC        r     1 MMERR

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

    12-0-0/w PTR         r     1 @E                         4-0-0/w PTR         r     1 @EWSQ
    11-0-0/w PTR         r     1 @S                         3-0-0/w PTR         r     1 @X0VAL
     7-0-0/w UBIN        r     1 ASBYTES                   14-0-0/w UBIN        r     1 BASE
    10-0-0/w STRC        r     1 BSEGID                    15-0-0/w STRC        r     1 BSEGID
    10-0-0/w SBIN        r     1 BSIZE                     10-0-0/w SBIN        r     1 BSIZE
    14-0-0/w UBIN        r     1 DCB#                      *0-0-0/w UBIN        r     1 E
     5-0-0/w PTR         r     1 ELS$                      11-0-0/w UBIN        r     1 ERR
    11-0-0/w UBIN        r     1 ERR                       10-0-0/w SBIN        r     1 ERR
    12-0-0/w SBIN        r     1 ERR                       13-0-0/w SBIN        r     1 ERR
    *0-0-0/w SBIN        r     1 EWSQ                      13-0-0/b BIT         r     1 FLAG
    12-0-0/b BIT         r     1 FLAG                      10-0-0/w SBIN        r     1 FLAGS
    10-0-0/b BIT (10)    r     1 FLAGS                     10-0-0/w SBIN        r     1 FOUNDFLG
    12-0-0/w UBIN        r     1 FOUNDPGS                   7-0-0/w STRC        r     1 F_WSIZE
     7-0-0/w UBIN        r     1 HIGHPP                    12-0-0/w SBIN        r     1 I
    13-0-0/w SBIN        r     1 I                         11-0-0/w SBIN        r     1 I
    11-0-0/w SBIN        r     1 LASTPNO                   12-0-0/w SBIN        r     1 LASTPNO
    10-0-0/w UBIN        r     1 LOWPP                     11-0-0/w UBIN        r     1 MAXPGS
     7-0-0/w UBIN        r     1 MSID                      11-0-0/w SBIN        r     1 N
     7-0-0/w UBIN        r     1 NPAGES                     7-0-0/w UBIN        r     1 NPGS
     7-0-0/w SBIN        r     1 NPGS                      11-0-0/w BIT         r     1 PHYSICAL
    10-0-0/w SBIN        r     1 PPHJIT                     7-0-0/w SBIN        r     1 PPJIT
     7-0-0/w SBIN        r     1 PPNO                       7-0-0/w SBIN        r     1 PPNO
     7-0-0/w SBIN        r     1 PPNO                       7-0-0/w UBIN        r     1 PPNO
PL6.E3A0      #001=MMP$PMME File=MMP$PMME.:E05TSI                                WED 07/30/97 03:23 Page:117  
    13-0-0/w UBIN        r     1 PPNO                      10-0-0/w UBIN        r     1 PPNO
    11-0-0/w SBIN        r     1 PPROSEG                   12-0-0/w UBIN        r     1 PROT
     7-0-0/w UBIN        r     1 PROT                      *0-0-0/w UBIN        r     1 S
    13-0-0/w PTR         r     1 S$                        11-0-0/b BIT (10)    r     1 SCFLAGS
    10-0-0/w UBIN        r     1 SEGID                     10-0-0/w UBIN        r     1 SEGID
    15-0-0/w UBIN        r     1 SEGID                     14-0-0/w UBIN        r     1 START
    11-0-0/w PTR         r     1 START$                    11-0-0/w PTR         r     1 START$
    10-0-0/w UBIN        r     1 USID                       7-0-0/w UBIN        r     1 USID
    13-0-0/w PTR         r     1 VCB$                      15-0-0/w PTR         r     1 VCB$
     7-0-0/w SBIN        r     1 VPNO                      10-0-0/w SBIN        r     1 VPNO
     7-0-0/w SBIN        r     1 VPNO                       7-0-0/w SBIN        r     1 VPNO
     7-0-0/w UBIN        r     1 WSIZE                     12-0-0/w SBIN        r     1 WSQ
    13-0-0/w SBIN        r     1 WSQ                       *0-0-0/w SBIN        r     1 X0VAL

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 B$IPHYMAP$                 0-0-0/w PTR         r     1 B$JIT$
     0-0-0/w PTR         r     1 B$LS$                      0-0-0/w PTR         r     1 B$PPUT$
     0-0-0/w PTR         r     1 B$PS0$                     0-0-0/w PTR         r     1 B$PS1$
     0-0-0/w PTR         r     1 B$UPT$                     0-0-0/w PTR         r     1 B$USERHJIT$
     0-0-0/w PTR         r     1 B$USERLS$                  0-0-0/d STRC(432)   r     1 B_MPT
     0-0-0/w UBIN        r     1 ES_CLEARMEM                0-0-0/w SBIN        r     1 FMC_CACHEPGCNT
     0-0-0/w BIT         r     1 HW_WSQ0PT                  0-0-0/w SBIN        r     1 MM_AUTO
     0-0-0/w SBIN        r     1 MM_BPPC                    0-0-0/w SBIN        r     1 MM_BPPH
     0-0-0/w SBIN        r     1 MM_BPPT                    0-0-0/w PTR         r     1 MM_BYP$
     0-0-0/w PTR         r     1 MM_CGQD$                   0-0-0/b STRC        r     1 MM_FPMC
     0-0-0/w SBIN        r     1 MM_FPPC                    0-0-0/w UBIN        r     1 MM_HELD
     0-0-0/w SBIN        r     1 MM_IN_TEST                 0-0-0/d BIT (72)    r     1 MM_LOCK
     0-0-0/w PTR         r     1 MM_LSPTRS$(0:8)
     0-0-0/w UBIN        r     1 MM_NOUSTHRESH              0-0-0/w SBIN        r     1 MM_PCORE
     0-0-0/w SBIN        r     1 MM_RSVP                    0-0-0/w SBIN        r     1 MM_SPPC
     0-0-0/w SBIN        r     1 S_CUN

  ****  BASED and DCB variables  ****
PL6.E3A0      #001=MMP$PMME File=MMP$PMME.:E05TSI                                WED 07/30/97 03:23 Page:118  

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d STRC(8856)  r     1 B$JIT                      0-0-0/w STRC        r     1 B$MAP(0:1023)
     0-0-0/d STRC(10368) r     1 B$MLNK                     0-0-0/d STRC(2304)  r     1 B$SS
     0-0-0/w STRC(72)    r     1 B$VECTOR                   0-0-0/d STRC(72)    r     1 DESC
     0-0-0/d ASTR(3528)  r     1 F$DCB                      0-0-0/d STRC        r     1 FPT$BADPP_V
     0-0-0/d STRC(108)   r     1 FPT$CVM_V                  0-0-0/d STRC(72)    r     1 FPT$GBPL_V
     0-0-0/d STRC        r     1 FPT$GDP_V                  0-0-0/d STRC        r     1 FPT$GDS_V
     0-0-0/d STRC        r     1 FPT$GVP_V                  0-0-0/d STRC(108)   r     1 FPT$MAKUSER_V
     0-0-0/d STRC(72)    r     1 FPT$PAS_V                  0-0-0/d STRC        r     1 FPT$PDS_V
     0-0-0/d STRC        r     1 FPT$SAD_V                  0-0-0/d STRC(72)    r     1 FPT$SMPRT_V
     0-0-0/d STRC(72)    r     1 FPT$SSC_V                  0-0-0/d STRC        r     1 FPT$STD_V
     0-0-0/w STRC(288)   r     1 MM$CGQD
     0-0-0/d STRC(72)    r     1 MM$DESC(0:0)
     0-0-0/h UBIN(18)    r     1 MM$IPHY_MAP(0:0)
     0-0-0/w STRC        r     1 MM$PPUT(0:0)
     0-0-0/w STRC(432)   r     1 MM$VCB                     0-0-0/w STRC(72)    r     1 RES
     0-0-0/w STRC(72)    r     1 RES                        0-0-0/w STRC(108)   r     1 RESULTS
     0-0-0/w STRC(72)    r     1 VEC                        0-0-0/d STRC        r     1 VLP$PGLIST_V
     0-0-0/d STRC        r     1 VLP$PGLIST_V


   Procedure MMP$PMME requires 1414 words for executable code.
   Procedure MMP$PMME requires 20 words of local(AUTO) storage.

    No errors detected in file MMP$PMME.:E05TSI    .
PL6.E3A0      #001=MMP$PMME File=MMP$PMME.:E05TSI                                WED 07/30/97 03:23 Page:119  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=MMP$PMME File=MMP$PMME.:E05TSI                                WED 07/30/97 03:23 Page:120  
          MINI XREF LISTING

ALTRT IN PROCEDURE MMP$VP
      6733**LABEL    6741--CALLALT
ASBYTES IN PROCEDURE MMP$PAS
      7229**DCL      7255<<ASSIGN   7257<<ASSIGN   7259>>IF       7260<<ASSIGN   7262>>ASSIGN   7263<<ASSIGN
      7269>>CALL     7280>>IF
B$IPHYMAP$
        18**DCL      6832>>IF       6833>>ASSIGN
B$JIT.ERR
      1622**DCL      6458<<ASSIGN   6473<<ASSIGN   6498<<ASSIGN   6516<<ASSIGN   6555<<ASSIGN   6564<<ASSIGN
      6621<<ASSIGN   6630<<ASSIGN   6700<<ASSIGN   6715<<ASSIGN   6738<<ASSIGN   6774<<ASSIGN   6803<<ASSIGN
      6837<<ASSIGN   6849<<ASSIGN   6861<<ASSIGN   6872<<ASSIGN   6900<<ASSIGN   6910<<ASSIGN   6965<<ASSIGN
      6975<<ASSIGN   6988<<ASSIGN   7089<<ASSIGN   7114<<ASSIGN   7124<<ASSIGN   7204<<ASSIGN   7244<<ASSIGN
B$JIT.ERR.MID
      1623**DCL      1623--REDEF
B$JIT.EUP
      1711**DCL      6727>>IF
B$JIT.JRESPEAK
      1713**DCL      1714--REDEF
B$JIT.JUNK2
      1800**DCL      6482<<ASSIGN   6482>>ASSIGN
B$JIT.PRIV.ACTIVE
      1623**DCL      6758>>IF       6793>>IF
B$JIT.PUL
      1709**DCL      6727>>IF
B$JIT.VIRTUAL.DCB#
      1716**DCL      6707>>ASSIGN   6853>>ASSIGN
B$JIT$
        14**DCL      1617--IMP-PTR  6458>>ASSIGN   6473>>ASSIGN   6482>>ASSIGN   6482>>ASSIGN   6498>>ASSIGN
      6516>>ASSIGN   6555>>ASSIGN   6564>>ASSIGN   6621>>ASSIGN   6630>>ASSIGN   6700>>ASSIGN   6707>>ASSIGN
      6715>>ASSIGN   6727>>IF       6727>>IF       6738>>ASSIGN   6758>>IF       6774>>ASSIGN   6793>>IF
      6803>>ASSIGN   6837>>ASSIGN   6849>>ASSIGN   6853>>ASSIGN   6861>>ASSIGN   6872>>ASSIGN   6900>>ASSIGN
      6910>>ASSIGN   6965>>ASSIGN   6975>>ASSIGN   6988>>ASSIGN   7089>>ASSIGN   7114>>ASSIGN   7124>>ASSIGN
PL6.E3A0      #001=MMP$PMME File=MMP$PMME.:E05TSI                                WED 07/30/97 03:23 Page:121  
      7204>>ASSIGN   7244>>ASSIGN
B$LS$
        13**DCL      6830>>IF
B$MAP.RPN
      1857**DCL      6970>>IF
B$MAP.SCTRL
      1858**DCL      1859--REDEF    6979>>ASSIGN   6981<<ASSIGN
B$MLNK.IPHY_MAP.BOUND
      5057**DCL      6830>>IF
B$PPUT$
        17**DCL      7086>>IF       7086>>IF       7108>>IF       7118>>IF       7129>>ASSIGN   7171>>ASSIGN
      7198>>IF       7198>>IF       7211>>ASSIGN   7215>>ASSIGN
B$PS0$
        19**DCL      6452>>ASSIGN   6466>>IF       6466>>IF       6468>>IF       6468>>IF       6479>>IF
      6534>>IF       6536>>IF       6540>>ASSIGN   6608>>ASSIGN   6651>>ASSIGN   6693>>ASSIGN   6710>>ASSIGN
      6726>>ASSIGN   6757>>ASSIGN   6767>>ASSIGN   6770>>ASSIGN   6789>>ASSIGN   6825>>ASSIGN   6826>>ASSIGN
      6827>>ASSIGN   6856>>ASSIGN   6868>>ASSIGN   6893>>ASSIGN   6894>>IF       6895>>ASSIGN   6896>>ASSIGN
      6935>>ASSIGN   6940>>IF       6942>>ASSIGN   6956>>IF       6958>>ASSIGN   6961>>ASSIGN   7007>>ASSIGN
      7008>>ASSIGN   7009>>ASSIGN   7010>>ASSIGN   7011>>ASSIGN   7029>>ASSIGN   7030>>ASSIGN   7031>>ASSIGN
      7049>>ASSIGN   7050>>ASSIGN   7067>>ASSIGN   7085>>ASSIGN   7155>>ASSIGN   7156>>ASSIGN   7157>>ASSIGN
      7192>>ASSIGN   7197>>ASSIGN   7257>>ASSIGN
B$PS1$
        20**DCL      6460>>ASSIGN   6476>>ASSIGN   6487>>ASSIGN   6500>>ASSIGN   6519>>ASSIGN   6568>>ASSIGN
      6577>>ASSIGN   6586>>ASSIGN   6587>>ASSIGN   6607>>ASSIGN   6655>>ASSIGN   6666>>ASSIGN   6668>>ASSIGN
      6669>>ASSIGN   6670>>ASSIGN   6671>>ASSIGN   7169>>ASSIGN   7176>>ASSIGN
B$SS.ASR.BASE
      1979**DCL      7263>>ASSIGN
B$SS.ASR.BOUND
      1975**DCL      7241>>IF       7254<<ASSIGN   7254>>ASSIGN   7259>>IF       7260>>ASSIGN   7262<<ASSIGN
      7262>>ASSIGN   7263>>ASSIGN   7264>>IF       7265<<ASSIGN   7265>>ASSIGN
B$SS.ASR.FLAGS
      1976**DCL      7266<<ASSIGN   7266>>ASSIGN
B$SS.DR0
      2016**DCL      7268<>CALL
B$SS.RVA
      1966**DCL      1967--REDEF
PL6.E3A0      #001=MMP$PMME File=MMP$PMME.:E05TSI                                WED 07/30/97 03:23 Page:122  
B$SS.X0
      2064**DCL      7268<>CALL
B$UPT$
        15**DCL      6970>>IF       6979>>ASSIGN   6981>>ASSIGN
B$USERHJIT$ IN PROCEDURE MMP$PAS
      7234**DCL      7269>>CALL     7269>>CALL
B$USERLS$
        16**DCL      6945>>IF       6951>>ASSIGN
B$VECTOR
      6359**DCL      6460<<ASSIGN   6476<<ASSIGN   6500<<ASSIGN   6519<<ASSIGN   6568<<ASSIGN   6577<<ASSIGN
      6655<<ASSIGN   6666<<ASSIGN   6757<<ASSIGN
B$VECTOR.FLAGS
      6361**DCL      6669<<ASSIGN   7008<<ASSIGN
B$VECTOR.SEGID
      6366**DCL      6487>>ASSIGN   6587<<ASSIGN   6607>>ASSIGN
B$VECTOR.V
      6362**DCL      6670<<ASSIGN   7009<<ASSIGN
B$VECTOR.VSIZE
      6360**DCL      6586<<ASSIGN   6668<<ASSIGN   7007<<ASSIGN
BADGDDL IN PROCEDURE MMP$GDDL
      7013**LABEL    7006--CALLALT
BADMAKE IN PROCEDURE MMP$MAKE
      7031**LABEL    7032--CALLALT
BADSAD IN PROCEDURE MMP$SAD
      7050**LABEL    7051--CALLALT
BADSEGID_ERR IN PROCEDURE MMP$DS
      6492**LABEL    6527--GOTO
BADSEGID_ERR IN PROCEDURE MMP$SSC
      6979**LABEL    6944--GOTO     6949--GOTO
BADSMPRT IN PROCEDURE MMP$SMPRT
      6905**LABEL    6905--CALLALT
BADVP IN PROCEDURE MMP$CVM
      6856**LABEL    6869--GOTO
BADVP IN PROCEDURE MMP$VP
      6710**LABEL    6727--GOTO
BADWSQ IN PROCEDURE MMP$CVM
PL6.E3A0      #001=MMP$PMME File=MMP$PMME.:E05TSI                                WED 07/30/97 03:23 Page:123  
      6845**LABEL    6854--GOTO
BADWSQ IN PROCEDURE MMP$VP
      6689**LABEL    6708--GOTO
BAD_SETLS IN PROCEDURE MMP$STD
      7067**LABEL    7068--CALLALT
BASE IN PROCEDURE MMP$SSC
      6925**DCL      6951<<ASSIGN   6953>>ASSIGN
BSEGID.SEGBITS IN PROCEDURE MMP$DS
      6441**DCL      6507>>IF       6546>>ASSIGN   6578>>IF       6584>>ASSIGN   6587>>ASSIGN
BSEGID.SEGBITS IN PROCEDURE MMP$SSC
      6929**DCL      6945>>IF       6951>>ASSIGN
BSIZE IN PROCEDURE MMP$DP
      6641**DCL      6659<>CALL     6660<>CALL     6664>>IF       6668>>ASSIGN
BSIZE IN PROCEDURE MMP$GDDL
      6999**DCL      7006<>CALL     7007>>ASSIGN
B_MPT.AS
      5502**DCL      5505--REDEF
B_MPT.ASDESC
      5534**DCL      5538--REDEF
B_MPT.ECCB
      5517**DCL      5520--REDEF
B_MPT.ECCBDESC
      5552**DCL      5556--REDEF
B_MPT.LS
      5497**DCL      5500--REDEF
B_MPT.LSDESC
      5528**DCL      5532--REDEF
B_MPT.PS
      5507**DCL      5510--REDEF
B_MPT.PSDESC
      5540**DCL      5544--REDEF
B_MPT.SS
      5492**DCL      5495--REDEF
B_MPT.SS$
      5495**DCL      7241>>IF       7254>>ASSIGN   7254>>ASSIGN   7259>>IF       7260>>ASSIGN   7262>>ASSIGN
      7262>>ASSIGN   7263>>ASSIGN   7263>>ASSIGN   7264>>IF       7265>>ASSIGN   7265>>ASSIGN   7266>>ASSIGN
PL6.E3A0      #001=MMP$PMME File=MMP$PMME.:E05TSI                                WED 07/30/97 03:23 Page:124  
      7266>>ASSIGN   7268>>CALL     7268>>CALL
B_MPT.SSDESC
      5522**DCL      5526--REDEF
B_MPT.TCB
      5512**DCL      5515--REDEF
B_MPT.TCBDESC
      5546**DCL      5550--REDEF
CHKAS IN PROCEDURE MMP$PAS
      7273**PROC     7268--CALL     7269--CALL
DCB# IN PROCEDURE MMP$CVM
      6818**DCL      6853<<ASSIGN   6854>>IF       6855--ASSIGN
DESC IN PROCEDURE MMP$PAS
      7230**DCL      7269<>CALL     7269<>CALL     7282<<ASSIGN
DESC.BASE IN PROCEDURE MMP$PAS
      7233**DCL      7280>>IF
DESC.TYPE IN PROCEDURE MMP$PAS
      7232**DCL      7280>>IF
E IN PROCEDURE CHKAS
      7275**DCL      7273--PROC     7279--DOWHILE
ELS$
        25**DCL      6464<<ASSIGN   6507>>IF       6546>>ASSIGN   6578>>IF       6584>>ASSIGN   6610<<ASSIGN
      6613>>ASSIGN
ERR IN PROCEDURE MMP$CVM
      6816**DCL      6870<>CALL     6872>>ASSIGN
ERR IN PROCEDURE MMP$DS
      6442**DCL      6542<>CALL     6559<>CALL     6564>>ASSIGN   6566>>IF
ERR IN PROCEDURE MMP$PDS
      6600**DCL      6625<>CALL     6630>>ASSIGN
ERR IN PROCEDURE MMP$SMPRT
      6888**DCL      6905<>CALL     6910>>ASSIGN
ERR IN PROCEDURE MMP$VP
      6683**DCL      6731<>CALL     6738>>ASSIGN   6741<>CALL
ERR2NR IN PROCEDURE MMP$DS
      6477**LABEL    6475--CALLALT
ERR4NR IN PROCEDURE MMP$DS
      6520**LABEL    6518--CALLALT
PL6.E3A0      #001=MMP$PMME File=MMP$PMME.:E05TSI                                WED 07/30/97 03:23 Page:125  
ES_CLEARMEM
      6288**DCL      6733>>IF
EWSQ
        11**DCL         8--PROC     6464>>ASSIGN   6503>>IF       6542<>CALL     6559<>CALL     6610>>ASSIGN
      6625<>CALL     6659<>CALL     6660<>CALL     6731<>CALL     6741<>CALL     6758>>IF       6763<>CALL
      6766<>CALL     6793>>IF       6797<>CALL     6870<>CALL     6905<>CALL     6959>>IF       7006<>CALL
      7051<>CALL     7068<>CALL
F$DCB.ACTPOS
      5443**DCL      5443--REDEF
F$DCB.ARS
      5418**DCL      5418--REDEF
F$DCB.ATTR
      5436**DCL      5437--REDEF
F$DCB.BORROW
      5451**DCL      5451--REDEF    5451--REDEF    5451--REDEF
F$DCB.DCBNAME.L
      5465**DCL      5465--IMP-SIZ
F$DCB.EOMCHAR
      5422**DCL      5422--REDEF
F$DCB.FLDID
      5446**DCL      5446--REDEF
F$DCB.FORM$
      5440**DCL      5440--REDEF
F$DCB.FSECT
      5456**DCL      5456--REDEF
F$DCB.FSN
      5433**DCL      5433--REDEF    5433--REDEF    5434--REDEF
F$DCB.HEADER$
      5439**DCL      5439--REDEF
F$DCB.IXTNSIZE
      5437**DCL      5437--REDEF
F$DCB.LASTSTA$
      5427**DCL      5427--REDEF
F$DCB.LVL
      5452**DCL      5452--REDEF
F$DCB.NAME.C
PL6.E3A0      #001=MMP$PMME File=MMP$PMME.:E05TSI                                WED 07/30/97 03:23 Page:126  
      5427**DCL      5427--REDEF
F$DCB.NOEOF
      5448**DCL      5448--REDEF
F$DCB.NRECS
      5438**DCL      5438--REDEF
F$DCB.NRECX
      5457**DCL      5457--REDEF
F$DCB.OHDR
      5449**DCL      5449--REDEF
F$DCB.ORG
      5432**DCL      5432--REDEF
F$DCB.PRECNO
      5455**DCL      5455--REDEF
F$DCB.RCSZ
      5460**DCL      5460--REDEF
F$DCB.RES
      5428**DCL      5428--REDEF
F$DCB.SETSTA$
      5427**DCL      6709>>ASSIGN   6855>>ASSIGN
F$DCB.SETX
      5440**DCL      5440--REDEF
F$DCB.TAB$
      5439**DCL      5440--REDEF
F$DCB.TDA
      5454**DCL      5454--REDEF
F$DCB.WSN
      5429**DCL      5429--REDEF
FLAG IN PROCEDURE MMP$DS
      6444**DCL      6546<<ASSIGN   6548>>IF
FLAG IN PROCEDURE MMP$PDS
      6601**DCL      6613<<ASSIGN   6615>>IF
FLAGS IN PROCEDURE MMP$SMPRT
      6885**DCL      6895<<ASSIGN   6905<>CALL
FLAGS IN PROCEDURE MMP$SSC
      6921**DCL      6958<<ASSIGN   6960<<ASSIGN   6960>>ASSIGN   6979>>ASSIGN
FMC_CACHEPGCNT
PL6.E3A0      #001=MMP$PMME File=MMP$PMME.:E05TSI                                WED 07/30/97 03:23 Page:127  
        24**DCL      6760>>IF
FOUNDFLG IN PROCEDURE MMP$TDPP
      7079**DCL      7100<<ASSIGN   7102<<ASSIGN   7104<>CALL     7108>>IF       7128>>IF
FOUNDPGS IN PROCEDURE MMP$GBPL
      7143**DCL      7158<<ASSIGN   7165>>DOWHILE  7168<<ASSIGN   7168>>ASSIGN   7169>>ASSIGN   7176>>ASSIGN
FPT$BADPP_V.PPNO IN PROCEDURE MMP$TDPP
      7083**DCL      7085>>ASSIGN
FPT$CVM_V.PHYSICAL IN PROCEDURE MMP$CVM
      6822**DCL      6827>>ASSIGN
FPT$CVM_V.PPNO IN PROCEDURE MMP$CVM
      6822**DCL      6825>>ASSIGN
FPT$CVM_V.VPNO IN PROCEDURE MMP$CVM
      6822**DCL      6856>>ASSIGN   6868>>ASSIGN
FPT$CVM_V.WSQ IN PROCEDURE MMP$CVM
      6822**DCL      6826>>ASSIGN
FPT$GBPL_V.HIGHPP IN PROCEDURE MMP$GBPL
      7150**DCL      7155>>ASSIGN
FPT$GBPL_V.LOWPP IN PROCEDURE MMP$GBPL
      7150**DCL      7156>>ASSIGN
FPT$GBPL_V.MAXPGS IN PROCEDURE MMP$GBPL
      7150**DCL      7157>>ASSIGN
FPT$GDP_V.PAGES IN PROCEDURE MMP$DP
      6648**DCL      6651>>ASSIGN
FPT$GDS_V.AUTOSEG IN PROCEDURE MMP$DS
      6448**DCL      6466>>IF       6468>>IF       6479>>IF
FPT$GDS_V.COMMON IN PROCEDURE MMP$DS
      6448**DCL      6466>>IF       6468>>IF
FPT$GDS_V.FREE IN PROCEDURE MMP$DS
      6448**DCL      6534>>IF
FPT$GDS_V.PROTECTION IN PROCEDURE MMP$DS
      6448**DCL      6540>>ASSIGN
FPT$GDS_V.SEGSIZE IN PROCEDURE MMP$DS
      6448**DCL      6452>>ASSIGN
FPT$GDS_V.VIRTONLY IN PROCEDURE MMP$DS
      6448**DCL      6536>>IF
FPT$GVP_V.PNO IN PROCEDURE MMP$VP
PL6.E3A0      #001=MMP$PMME File=MMP$PMME.:E05TSI                                WED 07/30/97 03:23 Page:128  
      6689**DCL      6710>>ASSIGN   6726>>ASSIGN
FPT$GVP_V.WSQ IN PROCEDURE MMP$VP
      6689**DCL      6693>>ASSIGN
FPT$MAKUSER_V.HJITPP IN PROCEDURE MMP$MAKE
      7026**DCL      7030>>ASSIGN
FPT$MAKUSER_V.JITPP IN PROCEDURE MMP$MAKE
      7026**DCL      7029>>ASSIGN
FPT$MAKUSER_V.ROPP IN PROCEDURE MMP$MAKE
      7026**DCL      7031>>ASSIGN
FPT$PAS_V.DESCRIPTORS IN PROCEDURE MMP$PAS
      7237**DCL      7257>>ASSIGN
FPT$PDS_V.PROTECTION IN PROCEDURE MMP$PDS
      6604**DCL      6608>>ASSIGN
FPT$SAD_V.MONSID IN PROCEDURE MMP$SAD
      7046**DCL      7049>>ASSIGN
FPT$SAD_V.USERSID IN PROCEDURE MMP$SAD
      7046**DCL      7050>>ASSIGN
FPT$SMPRT_V.FLAGS IN PROCEDURE MMP$SMPRT
      6891**DCL      6895>>ASSIGN
FPT$SMPRT_V.NUMPGS IN PROCEDURE MMP$SMPRT
      6891**DCL      6896>>ASSIGN
FPT$SMPRT_V.VPNO IN PROCEDURE MMP$SMPRT
      6891**DCL      6893>>ASSIGN
FPT$SMPRT_V.WSQFLG IN PROCEDURE MMP$SMPRT
      6891**DCL      6894>>IF
FPT$SSC_V.FLAGS IN PROCEDURE MMP$SSC
      6932**DCL      6958>>ASSIGN
FPT$SSC_V.NUMPGS IN PROCEDURE MMP$SSC
      6932**DCL      6961>>ASSIGN
FPT$SSC_V.SEGFLG IN PROCEDURE MMP$SSC
      6932**DCL      6940>>IF
FPT$SSC_V.SEGID IN PROCEDURE MMP$SSC
      6932**DCL      6942>>ASSIGN
FPT$SSC_V.VPNO IN PROCEDURE MMP$SSC
      6932**DCL      6935>>ASSIGN
FPT$SSC_V.WSQFLG IN PROCEDURE MMP$SSC
PL6.E3A0      #001=MMP$PMME File=MMP$PMME.:E05TSI                                WED 07/30/97 03:23 Page:129  
      6932**DCL      6956>>IF
FPT$STD_V.USERSID IN PROCEDURE MMP$STD
      7064**DCL      7067>>ASSIGN
F_WSIZE.FREE_FLAG IN PROCEDURE MMP$DS
      6435**DCL      6535<<ASSIGN
F_WSIZE.VIRTONLY IN PROCEDURE MMP$DS
      6436**DCL      6537<<ASSIGN
GOTSEG IN PROCEDURE MMP$DS
      6521**LABEL    6511--GOTO
HFC$ASSOCCLR
        51**DCL-ENT  6984--CALL
HFC$LOCK
      5745**DCL-ENT  7097--CALL     7153--CALL     7194--CALL
HFC$UNLOCK
      5745**DCL-ENT  7106--CALL     7174--CALL     7201--CALL     7219--CALL
HFF$NILERASE
        52**DCL-ENT  6475--CALL     6518--CALL     6576--CALL     6654--CALL     6663--CALL     7256--CALL
HIGHPP IN PROCEDURE MMP$GBPL
      7140**DCL      7155<<ASSIGN   7166>>IF
HW_WSQ0PT
      5784**DCL      6828>>IF
I IN PROCEDURE MMP$PL
      7187**DCL      7196<<DOINDEX  7197>>ASSIGN
I IN PROCEDURE MMP$SMPRT
      6887**DCL      6904<<DOINDEX  6905<>CALL
I IN PROCEDURE MMP$SSC
      6924**DCL      6969<<DOINDEX  6970>>IF       6979>>ASSIGN   6981>>ASSIGN
JSN$BLNK2
        50**DCL-ENT  6733--CALL
JUST_ONE IN PROCEDURE MMP$PAS
      7257**LABEL    7256--CALLALT
LASTPNO IN PROCEDURE MMP$SMPRT
      6886**DCL      6896<<ASSIGN   6897>>IF       6897>>IF       6904>>DOINDEX
LASTPNO IN PROCEDURE MMP$SSC
      6923**DCL      6961<<ASSIGN   6962>>IF       6962>>IF       6969>>DOINDEX
LOWPP IN PROCEDURE MMP$GBPL
PL6.E3A0      #001=MMP$PMME File=MMP$PMME.:E05TSI                                WED 07/30/97 03:23 Page:130  
      7141**DCL      7156<<ASSIGN   7166>>IF
MAXPGS IN PROCEDURE MMP$GBPL
      7142**DCL      7157<<ASSIGN   7165>>DOWHILE
MM$CGQD.FPPC
      6305**DCL      6760>>IF
MM$DESC.BASE
      1248**DCL      6951>>ASSIGN
MM$DESC.BOUND
      1246**DCL      1247--REDEF    6584>>ASSIGN
MM$DESC.FLGS
      1247**DCL      1247--REDEF    6546>>ASSIGN   6613>>ASSIGN
MM$DESC.FLGS1.NOTEMPTY
      1247**DCL      6507>>IF       6578>>IF       6945>>IF
MM$IPHY_MAP
      1912**DCL      6832>>IF       6833>>ASSIGN
MM$PPUT.IN_TEST
      1234**DCL      7118>>IF       7211<<ASSIGN   7215<<ASSIGN
MM$PPUT.PPNO
      1235**DCL      7171>>ASSIGN
MM$PPUT.STOLEN
      1234**DCL      7086>>IF       7198>>IF
MM$PPUT.SUSPECT
      1234**DCL      7108>>IF       7129<<ASSIGN
MM$PPUT.USER#
      1235**DCL      1235--REDEF    7086>>IF       7198>>IF
MM$VCB.MAXVP#
      1239**DCL      6711>>IF       6857>>IF
MM0$FINDPG IN PROCEDURE MMP$TDPP
      7080**DCL-ENT  7104--CALL
MMB$BADPP
        44**DCL-ENT  7131--CALL
MMB$FPP
        33**DCL-ENT  6795--CALL
MMB$GOODPP
        45**DCL-ENT  7128--CALL
MMB$GPP
PL6.E3A0      #001=MMP$PMME File=MMP$PMME.:E05TSI                                WED 07/30/97 03:23 Page:131  
        32**DCL-ENT  6763--CALL
MMD$RSPP
        31**DCL-ENT  6797--CALL
MMD$STLPP
        30**DCL-ENT  6766--CALL
MME$CVM
        38**DCL-ENT  6870--CALL
MME$SMPRT
        39**DCL-ENT  6905--CALL
MMERR
      6351**DCL      6458>>ASSIGN   6473>>ASSIGN   6498>>ASSIGN   6516>>ASSIGN   6555>>ASSIGN   6564>>ASSIGN
      6621>>ASSIGN   6630>>ASSIGN   6700>>ASSIGN   6715>>ASSIGN   6738>>ASSIGN   6774>>ASSIGN   6803>>ASSIGN
      6837>>ASSIGN   6849>>ASSIGN   6861>>ASSIGN   6872>>ASSIGN   6900>>ASSIGN   6910>>ASSIGN   6965>>ASSIGN
      6975>>ASSIGN   6988>>ASSIGN   7089>>ASSIGN   7114>>ASSIGN   7124>>ASSIGN   7204>>ASSIGN   7244>>ASSIGN
MMG$SFVP
        35**DCL-ENT  6741--CALL
MMG$SGVP
        34**DCL-ENT  6731--CALL
MMH$FDS
        28**DCL-ENT  6559--CALL
MMH$GDS
        27**DCL-ENT  6542--CALL
MMH$SMPRT
        29**DCL-ENT  6625--CALL
MMI$FDP
        37**DCL-ENT  6660--CALL
MMI$GDDL
        40**DCL-ENT  7006--CALL
MMI$GDP
        36**DCL-ENT  6659--CALL
MMK$MAKUSER
        41**DCL-ENT  7032--CALL
MMM$ACCESS
        42**DCL-ENT  7051--CALL
MMM$NEW_DR
        43**DCL-ENT  7068--CALL
PL6.E3A0      #001=MMP$PMME File=MMP$PMME.:E05TSI                                WED 07/30/97 03:23 Page:132  
MMP$CVM
      6812**PROC     6394--CALL
MMP$DP
      6639**PROC     6382--CALL     6384--CALL
MMP$DS
      6432**PROC     6378--CALL     6380--CALL
MMP$GBPL
      7139**PROC     6410--CALL
MMP$GDDL
      6997**PROC     6400--CALL
MMP$MAKE
      7020**PROC     6376--CALL
MMP$PAS
      7228**PROC     6418--CALL
MMP$PDS
      6597**PROC     6416--CALL
MMP$PL
      7184**PROC     6412--CALL     6414--CALL
MMP$RSPP
      6783**PROC     6392--CALL
MMP$SAD
      7041**PROC     6402--CALL
MMP$SMPRT
      6883**PROC     6396--CALL
MMP$SSC
      6919**PROC     6398--CALL
MMP$STD
      7060**PROC     6404--CALL
MMP$STLPP
      6750**PROC     6390--CALL
MMP$TDPP
      7077**PROC     6406--CALL     6408--CALL
MMP$VP
      6681**PROC     6386--CALL     6388--CALL
MMV$CVM
        46**DCL-ENT  6865--CALL
PL6.E3A0      #001=MMP$PMME File=MMP$PMME.:E05TSI                                WED 07/30/97 03:23 Page:133  
MMV$GET
        47**DCL-ENT  6722--CALL
MMV$RLS
        48**DCL-ENT  6723--CALL
MMV$VIRTUAL
        49**DCL-ENT  6421--CALL
MM_AUTO
      1165**DCL      6760>>IF
MM_BPPC
      1165**DCL      7104<>CALL
MM_BPPH
      1164**DCL      7101>>IF       7104<>CALL     7164>>ASSIGN
MM_BPPT
      1164**DCL      7104<>CALL
MM_BYP$
      1166**DCL      1166--IMP-PTR
MM_CGQD$
        23**DCL      6304--IMP-PTR  6760>>IF
MM_FPMC.RPN
      1172**DCL      6970>>IF
MM_FPPC
      1163**DCL      6760>>IF
MM_HELD
      1169**DCL      6760>>IF
MM_IN_TEST
      1165**DCL      7210<<ASSIGN   7210>>ASSIGN   7214<<ASSIGN   7214>>ASSIGN
MM_LOCK
      1163**DCL      7097<>CALL     7106<>CALL     7153<>CALL     7174<>CALL     7194<>CALL     7201<>CALL
      7219<>CALL
MM_LSPTRS$
      1246**DCL      6464>>ASSIGN   6610>>ASSIGN
MM_NOUSTHRESH
      5797**DCL      6760>>IF
MM_PCORE
      1168**DCL      7086>>IF       7198>>IF
MM_RSVP
PL6.E3A0      #001=MMP$PMME File=MMP$PMME.:E05TSI                                WED 07/30/97 03:23 Page:134  
      1169**DCL      6760>>IF
MM_SPPC
      1164**DCL      6760>>IF
MSID IN PROCEDURE MMP$SAD
      7042**DCL      7049<<ASSIGN   7051<>CALL
N IN PROCEDURE MMP$VP
      6684**DCL      6707<<ASSIGN   6708>>IF       6709--ASSIGN   6728<<ASSIGN   6731<>CALL     6733<>CALL
      6741<>CALL
NONIL IN PROCEDURE MMP$DP
      6656**LABEL    6654--CALLALT
NORSLTS1 IN PROCEDURE MMP$DS
      6587**LABEL    6576--CALLALT
NORSLTS2 IN PROCEDURE MMP$DP
      6673**LABEL    6663--CALLALT
NOT_STOLEN IN PROCEDURE MMP$RSPP
      6803**LABEL    6797--CALLALT
NO_STEAL IN PROCEDURE MMP$STLPP
      6770**LABEL    6762--GOTO     6764--GOTO     6766--CALLALT
NPAGES IN PROCEDURE MMP$PL
      7185**DCL      7192<<ASSIGN   7196>>DOINDEX
NPGS IN PROCEDURE MMP$DP
      6640**DCL      6651<<ASSIGN   6652>>IF       6659<>CALL     6660<>CALL
NPGS IN PROCEDURE MMP$GDDL
      6998**DCL      7006<>CALL     7011>>ASSIGN
OOPS IN PROCEDURE MMP$DS
      6549**LABEL    6542--CALLALT  6559--CALLALT
PDS_ERR IN PROCEDURE MMP$PDS
      6615**LABEL    6625--CALLALT
PHYSICAL IN PROCEDURE MMP$CVM
      6815**DCL      6827<<ASSIGN   6828>>IF
PPHJIT IN PROCEDURE MMP$MAKE
      7022**DCL      7030<<ASSIGN   7032<>CALL
PPJIT IN PROCEDURE MMP$MAKE
      7021**DCL      7029<<ASSIGN   7032<>CALL
PPNO IN PROCEDURE MMP$CVM
      6813**DCL      6825<<ASSIGN   6829>>IF       6830>>IF       6830>>IF       6832>>IF       6833<<ASSIGN
PL6.E3A0      #001=MMP$PMME File=MMP$PMME.:E05TSI                                WED 07/30/97 03:23 Page:135  
      6833>>ASSIGN   6865<>CALL     6870<>CALL
PPNO IN PROCEDURE MMP$GBPL
      7144**DCL      7164<<ASSIGN   7165>>DOWHILE  7166>>IF       7166>>IF       7169>>ASSIGN   7171<<ASSIGN
      7171>>ASSIGN
PPNO IN PROCEDURE MMP$PL
      7186**DCL      7197<<ASSIGN   7198>>IF       7198>>IF       7198>>IF       7211>>ASSIGN   7215>>ASSIGN
PPNO IN PROCEDURE MMP$RSPP
      6784**DCL      6789<<ASSIGN   6795<>CALL     6797<>CALL
PPNO IN PROCEDURE MMP$STLPP
      6751**DCL      6763<>CALL     6764>>IF       6766<>CALL     6767>>ASSIGN
PPNO IN PROCEDURE MMP$TDPP
      7078**DCL      7085<<ASSIGN   7086>>IF       7086>>IF       7086>>IF       7099>>IF       7101>>IF
      7104<>CALL     7108>>IF       7118>>IF       7128<>CALL     7129>>ASSIGN   7131<>CALL
PPROSEG IN PROCEDURE MMP$MAKE
      7023**DCL      7031<<ASSIGN   7032<>CALL
PROT IN PROCEDURE MMP$DS
      6443**DCL      6540<<ASSIGN   6541>>IF       6541<<ASSIGN   6542<>CALL
PROT IN PROCEDURE MMP$PDS
      6598**DCL      6608<<ASSIGN   6625<>CALL
REPORT_ERROR IN PROCEDURE MMP$CVM
      6837**LABEL    6831--GOTO
RES.WRD2 IN PROCEDURE MMP$RSPP
      6787**DCL      6789>>ASSIGN
RES.WRD2 IN PROCEDURE MMP$STLPP
      6755**DCL      6767<<ASSIGN   6770<<ASSIGN
RESULTS.P$ IN PROCEDURE MMP$GDDL
      7003**DCL      7010<<ASSIGN
RESULTS.WORD3 IN PROCEDURE MMP$GDDL
      7004**DCL      7011<<ASSIGN
S IN PROCEDURE CHKAS
      7274**DCL      7273--PROC     7278--ASSIGN
S$ IN PROCEDURE CHKAS
      7276**DCL      7278<<ASSIGN   7279>>DOWHILE  7280>>IF       7280>>IF       7282>>ASSIGN   7283<<ASSIGN
      7283>>ASSIGN
SCFLAGS IN PROCEDURE MMP$SSC
      6922**DCL      6979<<ASSIGN   6981>>ASSIGN
PL6.E3A0      #001=MMP$PMME File=MMP$PMME.:E05TSI                                WED 07/30/97 03:23 Page:136  
SEGID IN PROCEDURE MMP$DS
      6438**DCL      6439--REDEF    6481<<ASSIGN   6484<<ASSIGN   6487<<ASSIGN   6488>>IF       6488>>IF
      6506<<DOINDEX  6526>>IF       6526>>IF       6542<>CALL     6559<>CALL
SEGID IN PROCEDURE MMP$PDS
      6599**DCL      6607<<ASSIGN   6613>>ASSIGN   6625<>CALL
SEGID IN PROCEDURE MMP$SSC
      6926**DCL      6927--REDEF    6942<<ASSIGN   6943>>IF       6943>>IF
SET_RSLTS IN PROCEDURE MMP$DS
      6572**LABEL    6561--GOTO
START IN PROCEDURE MMP$DS
      6445**DCL      6504<<ASSIGN   6505<<ASSIGN   6506>>DOINDEX
START$ IN PROCEDURE MMP$DP
      6642**DCL      6659<>CALL     6660<>CALL     6671>>ASSIGN
START$ IN PROCEDURE MMP$GDDL
      7000**DCL      7006<>CALL     7010>>ASSIGN
S_CUN IN PROCEDURE MMP$STLPP
      6752**DCL      6760>>IF
UDN$MAGIC
        53**DCL-ENT  7240--CALL
USID IN PROCEDURE MMP$SAD
      7043**DCL      7050<<ASSIGN   7051<>CALL
USID IN PROCEDURE MMP$STD
      7061**DCL      7067<<ASSIGN   7068<>CALL     7068<>CALL
VCB$ IN PROCEDURE MMP$CVM
      6819**DCL      6855<<ASSIGN   6857>>IF
VCB$ IN PROCEDURE MMP$VP
      6686**DCL      6709<<ASSIGN   6711>>IF
VEC.P$ IN PROCEDURE MMP$DP
      6645**DCL      6671<<ASSIGN
VLP$PGLIST_V.NPAGES IN PROCEDURE MMP$GBPL
      7147**DCL      7176<<ASSIGN
VLP$PGLIST_V.PGLIST IN PROCEDURE MMP$GBPL
      7147**DCL      7169<<ASSIGN
VLP$PGLIST_V.NPAGES IN PROCEDURE MMP$PL
      7190**DCL      7192>>ASSIGN
VLP$PGLIST_V.PGLIST IN PROCEDURE MMP$PL
PL6.E3A0      #001=MMP$PMME File=MMP$PMME.:E05TSI                                WED 07/30/97 03:23 Page:137  
      7190**DCL      7197>>ASSIGN
VPNO IN PROCEDURE MMP$CVM
      6814**DCL      6856<<ASSIGN   6857>>IF       6865<>CALL     6868<<ASSIGN   6869>>IF       6870<>CALL
VPNO IN PROCEDURE MMP$SMPRT
      6884**DCL      6893<<ASSIGN   6894<<ASSIGN   6894>>ASSIGN   6896>>ASSIGN   6897>>IF       6904>>DOINDEX
VPNO IN PROCEDURE MMP$SSC
      6920**DCL      6935<<ASSIGN   6953<<ASSIGN   6953>>ASSIGN   6956<<ASSIGN   6956>>ASSIGN   6961>>ASSIGN
      6962>>IF       6969>>DOINDEX
VPNO IN PROCEDURE MMP$VP
      6682**DCL      6710<<ASSIGN   6711>>IF       6722<>CALL     6723<>CALL     6726<<ASSIGN   6727>>IF
      6727>>IF       6729<<ASSIGN   6729>>ASSIGN   6731<>CALL     6733<>CALL     6741<>CALL
WSIZE IN PROCEDURE MMP$DS
      6433**DCL      6434--REDEF    6452<<ASSIGN   6453>>IF       6528>>IF       6542<>CALL     6559<>CALL
      6584<<ASSIGN   6586>>ASSIGN
WSQ IN PROCEDURE MMP$CVM
      6817**DCL      6826<<ASSIGN   6843>>IF       6845>>IF       6845>>IF       6853>>ASSIGN   6865<>CALL
WSQ IN PROCEDURE MMP$VP
      6685**DCL      6693<<ASSIGN   6694>>IF       6696>>IF       6696>>IF       6707>>ASSIGN   6722<>CALL
      6723<>CALL
X0VAL
        10**DCL         8--PROC     6374>>DOCASE   6490>>IF       6530>>IF       6652>>IF       6658>>IF
      6721>>IF       6730>>IF       7093>>IF       7208>>IF
XX IN PROCEDURE MMP$DP
      6663**LABEL    6659--CALLALT  6660--CALLALT
