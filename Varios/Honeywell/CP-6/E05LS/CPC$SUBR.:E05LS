VERSION E05

PL6.E3A0      #001=CPC$UNIMPCMD File=CPC$SUBR.:E05TSI                            TUE 07/29/97 11:24 Page:1    
        1        1        /*T***********************************************************/
        2        2        /*T*                                                         */
        3        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        4        4        /*T*                                                         */
        5        5        /*T***********************************************************/
        6        6        %INCLUDE CP_6_SUBS;
        7      546        /*M* CPC$WRITEMSGE, CPC$OPEN_DO, CPC$OPEN_LL, CPC$UNIMPCMD */
        8      547        /*X*  DMC,DFC   */
        9      548        /*P*   NAME:   CPC$SUBR
       10      549               PURPOSE: Selection of routined called for purposes of performing
       11      550                       a variety of functions.
       12      551               DESCRIPTION: See the function or routine preambles for the individual
       13      552                       subroutines.
       14      553        */
       15      554                   %EJECT;
PL6.E3A0      #001=CPC$UNIMPCMD File=CPC$SUBR.:E05TSI                            TUE 07/29/97 11:24 Page:2    
       16      555        /**********************************************************************/
       17      556        /*F*   NAME:   CPC$UNIMPCMD
       18      557               PURPOSE: To serve as an entry point for the parser when an
       19      558                       unimplemented command is encountered.
       20      559               DESCRIPTION: The 'UNIMPLEMENTED COMMAND' message is output and a
       21      560                       return made to CPA$IBEX to obtain the next
       22      561                       command.
       23      562        */
       24      563        /**********************************************************************/
       25      564        CPC$UNIMPCMD: PROC;
       26      565                   %INCLUDE CP_MACROS_C;
       27     1317                   %INCLUDE CP_SUBS_C;
       28     2234                   %INCLUDE CP_PERR_C;
       29     2572    1   DCL CPC$WRITEMSGE ENTRY(6);
       30     2573        %ERR_CODE (NAME=E_UNIMPC,MID#=CPC$SUBRMID,CODE#=E$UNIMPC,STCLASS=CONSTANT);
       31     2593        /*E*       ERROR: CPC-E$UNIMPC-C
       32     2594                   MESSAGE: Unimplemented command
       33     2595                   MESSAGE1: The specified command does not yet exist.
       34     2596                   MESSAGE2: Reserved for expected future expansion.
       35     2597                   DESCRIPTION: The specified command has not been implemented.
       36     2598        */
       37     2599                                                /*Build error code*/
       38     2600    1     CALL CPC$WRITEMSGE (E_UNIMPC);
       39     2601    1     RETURN;
       40     2602    1   END CPC$UNIMPCMD;
       41     2603                   %EOD;

PL6.E3A0      #001=CPC$UNIMPCMD File=CPC$SUBR.:E05TSI                            TUE 07/29/97 11:24 Page:3    
--  Include file information  --

   CP_PERR_C.:E05TOU  is referenced.
   CP_SUBS_C.:E05TOU  is referenced.
   CP_MACROS_C.:E05TOU  is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure CPC$UNIMPCMD.

   Procedure CPC$UNIMPCMD requires 7 words for executable code.
   Procedure CPC$UNIMPCMD requires 4 words of local(AUTO) storage.

PL6.E3A0      #001=CPC$UNIMPCMD File=CPC$SUBR.:E05TSI                            TUE 07/29/97 11:24 Page:4    

 Object Unit name= CPC$UNIMPCMD                               File name= CPC$SUBR.:E05TOU
 UTS= JUL 29 '97 11:24:00.68 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0  RoData even  UTS      1      1  CPC$UNIMPCMD
    1   Proc  even  none     7      7  CPC$UNIMPCMD
    2  RoData even  none     1      1  CPC$UNIMPCMD

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     1      0   yes            yes      Std        0  CPC$UNIMPCMD

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       6 CPC$WRITEMSGE
                       nStd      0 X66_AUTO_0
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     B_VECTNIL
PL6.E3A0      #001=CPC$UNIMPCMD File=CPC$SUBR.:E05TSI                            TUE 07/29/97 11:24 Page:5    

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
PL6.E3A0      #001=CPC$UNIMPCMD File=CPC$SUBR.:E05TSI                            TUE 07/29/97 11:24 Page:6    


        1        1        /*T***********************************************************/
        2        2        /*T*                                                         */
        3        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        4        4        /*T*                                                         */
        5        5        /*T***********************************************************/
        6        6        %INCLUDE CP_6_SUBS;
        7      546        /*M* CPC$WRITEMSGE, CPC$OPEN_DO, CPC$OPEN_LL, CPC$UNIMPCMD */
        8      547        /*X*  DMC,DFC   */
        9      548        /*P*   NAME:   CPC$SUBR
       10      549               PURPOSE: Selection of routined called for purposes of performing
       11      550                       a variety of functions.
       12      551               DESCRIPTION: See the function or routine preambles for the individual
       13      552                       subroutines.
       14      553        */
       15      554                   %EJECT;
PL6.E3A0      #001=CPC$UNIMPCMD File=CPC$SUBR.:E05TSI                            TUE 07/29/97 11:24 Page:7    
       16      555        /**********************************************************************/
       17      556        /*F*   NAME:   CPC$UNIMPCMD
       18      557               PURPOSE: To serve as an entry point for the parser when an
       19      558                       unimplemented command is encountered.
       20      559               DESCRIPTION: The 'UNIMPLEMENTED COMMAND' message is output and a
       21      560                       return made to CPA$IBEX to obtain the next
       22      561                       command.
       23      562        */
       24      563        /**********************************************************************/
       25      564        CPC$UNIMPCMD: PROC;

    564  1 000000   000000 700200 xent  CPC$UNIMPCMD TSX0  ! X66_AUTO_0
         1 000001   000004 000000                    ZERO    4,0

       26      565                   %INCLUDE CP_MACROS_C;
       27     1317                   %INCLUDE CP_SUBS_C;
       28     2234                   %INCLUDE CP_PERR_C;
       29     2572    1   DCL CPC$WRITEMSGE ENTRY(6);
       30     2573        %ERR_CODE (NAME=E_UNIMPC,MID#=CPC$SUBRMID,CODE#=E$UNIMPC,STCLASS=CONSTANT);
       31     2593        /*E*       ERROR: CPC-E$UNIMPC-C
       32     2594                   MESSAGE: Unimplemented command
       33     2595                   MESSAGE1: The specified command does not yet exist.
       34     2596                   MESSAGE2: Reserved for expected future expansion.
       35     2597                   DESCRIPTION: The specified command has not been implemented.
       36     2598        */
       37     2599                                                /*Build error code*/
       38     2600    1     CALL CPC$WRITEMSGE (E_UNIMPC);

   2600  1 000002   000000 630400 2                  EPPR0   0
         1 000003   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000004   000000 701000 xent               TSX1    CPC$WRITEMSGE
         1 000005   000000 011000                    NOP     0

       39     2601    1     RETURN;

   2601  1 000006   000000 702200 xent               TSX2  ! X66_ARET
       40     2602    1   END CPC$UNIMPCMD;
PL6.E3A0      #001=CPC$UNIMPCMD File=CPC$SUBR.:E05TSI                            TUE 07/29/97 11:24 Page:8    
       41     2603                   %EOD;

PL6.E3A0      #001=CPC$UNIMPCMD File=CPC$SUBR.:E05TSI                            TUE 07/29/97 11:24 Page:9    
--  Include file information  --

   CP_PERR_C.:E05TOU  is referenced.
   CP_SUBS_C.:E05TOU  is referenced.
   CP_MACROS_C.:E05TOU  is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure CPC$UNIMPCMD.
PL6.E3A0      #001=CPC$UNIMPCMD File=CPC$SUBR.:E05TSI                            TUE 07/29/97 11:24 Page:10   

 **** Variables and constants ****

  ****  Section 000 RoData CPC$UNIMPCMD

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC        r     1 E_UNIMPC


   Procedure CPC$UNIMPCMD requires 7 words for executable code.
   Procedure CPC$UNIMPCMD requires 4 words of local(AUTO) storage.
PL6.E3A0      #001=CPC$UNIMPCMD File=CPC$SUBR.:E05TSI                            TUE 07/29/97 11:24 Page:11   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=CPC$UNIMPCMD File=CPC$SUBR.:E05TSI                            TUE 07/29/97 11:24 Page:12   
          MINI XREF LISTING

CPC$WRITEMSGE
      2572**DCL-ENT  2600--CALL
E_UNIMPC
      2586**DCL      2600<>CALL

PL6.E3A0      #002=CPC$WRITEMSGE File=CPC$SUBR.:E05TSI                           TUE 07/29/97 11:24 Page:13   
       42        1        /*T***********************************************************/
       43        2        /*T*                                                         */
       44        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
       45        4        /*T*                                                         */
       46        5        /*T***********************************************************/
       47        6        /**********************************************************************/
       48        7        /*F*   NAME:   CPC$WRITEMSGE
       49        8               PURPOSE: To output a specified message contained in the error
       50        9                       message file.
       51       10               DESCRIPTION: CPC$WRITEMSGE reads the error message file to obtain the
       52       11                       specified message and outputs it to a user.
       53       12        */
       54       13        /*D*   NAME:   CPC$WRITEMSGE
       55       14               CALL:   CALL CPC$WRITEMSGE(code,dcb#,err_fld1,err_fld2,err_fld3)
       56       15               INTERFACE: M$ERRMSG
       57       16               INPUT:  CODE - Code containing MID,MON,ERROR#, and SEV of message
       58       17                       to be output.
       59       18                       ERR_DCB - dcb# of dcb on which error occured and whose
       60       19                       information is to be substituted in the message.
       61       20                       ERR_FLD1 - textc field to be substituted for %U1 in message
       62       21                       ERR_FLD2 - textc field to be substituted for %U2 in message
       63       22                       ERR_FLD3 - textc field to be substituted for %U3 in message
       64       23                       DONT_POST# - don't post error for additional error reporting
       65       24               OUTPUT: Specified message to device assigned to M$DO if in
       66       25                       batch mode. Otherwise, message is output to the the device
       67       26                       assigned to M$UC.
       68       27               DESCRIPTION: The specified message contained in the error message
       69       28                       file is obtained and output to the user via the M$ERRMSG
       70       29                       PMME. If a message is not located, only the code is output
       71       30                       to the user.
       72       31        */
       73       32        /**********************************************************************/
       74       33        CPC$WRITEMSGE: PROC (ERR_CODE,ERR_DCB,ERR_FLD1,ERR_FLD2,ERR_FLD3,DONT_POST#);
       75       34                   %INCLUDE CP_6;
       76      115                   %INCLUDE CP_6_SUBS;
       77      655                   %INCLUDE B$JIT;
       78      945                   %INCLUDE NK_VFC_C;
PL6.E3A0      #002=CPC$WRITEMSGE File=CPC$SUBR.:E05TSI                           TUE 07/29/97 11:24 Page:14   
       79     1019                   %INCLUDE CP_SUBS_C;
       80     1936                   %INCLUDE CP_MACROS_C;
       81     2688                   %INCLUDE B_MACROS_C;
       82     2799                   %INCLUDE XU_MACRO_C;
       83     5905                   %INCLUDE CP_DATA_R;
       84     8468        /***** external procedures *****/
       85     8469    1   DCL CPC$OPEN_DO ENTRY;
       86     8470    1   DCL CPC$OPEN_LL ENTRY;
       87     8471    1   DCL CXP$POSTERR ENTRY(5);
       88     8472        %INCLUDE CXG_ENTRY;
       89     8484        /***** fpts *****/
       90     8485        %SEG$2;
       91     8545        %XUG_GETCMD (NAME=GET$CMD, STCLASS=BASED);
       92     8883        %F$DCB;
       93     8940        /***** parameters *****/
       94     8941        %ERR_CODE(NAME=ERR_CODE,STCLASS=" ");
       95     8961        %ERR_CODE (NAME=ERRCODE,STCLASS=AUTO);
       96     8981        %TEXTC(NAME=ERR_FLD1,STCLASS=" ");
       97     8986        %TEXTC(NAME=ERR_FLD2,STCLASS=" ");
       98     8991        %TEXTC(NAME=ERR_FLD3,STCLASS=" ");
       99     8996    1   DCL ERR_BUFF CHAR(120);
      100     8997    1   DCL ERR_DCB UBIN WORD;
      101     8998    1   DCL DONT_POST# BIT(1) ALIGNED;
      102     8999        /*
      103     9000             ***** Munge ERR_CODE ...
      104     9001        */
      105     9002    1     ERRCODE = ERR_CODE;
      106     9003    1     ERRCODE.SEV = 0;
      107     9004        /*
      108     9005             ***** skip errors
      109     9006        */
      110     9007    1     IF SEG$2.FLAGS.SKIP_ERRS
      111     9008    1        THEN
      112     9009    2           DO;
      113     9010    2              CALL CXP$POSTERR (ADDR(SEG$2.ERRBUF),511,ERRCODE,%NO#,ERR_DCB);
      114     9011    2              RETURN;
      115     9012    2           END;
PL6.E3A0      #002=CPC$WRITEMSGE File=CPC$SUBR.:E05TSI                           TUE 07/29/97 11:24 Page:15   
      116     9013        /*
      117     9014             ***** Setup GET$CMD ...
      118     9015        */
      119     9016    1     SEG$2.GETCMD$->GET$CMD.ERR_CODE = ERRCODE;
      120     9017    1     SEG$2.GETCMD$->GET$CMD.ERRMSG_VFC# = %VFC_TRANSITION1;
      121     9018    1     SEG$2.GETCMD$->GET$CMD.INFOMSG# = %NO#;
      122     9019    1     IF (ADDR(ERR_FLD1)~=ADDR(NIL))
      123     9020    1        THEN
      124     9021    1           SEG$2.GETCMD$->GET$CMD.F1_ = VECTOR(ERR_FLD1);
      125     9022    1     IF (ADDR(ERR_FLD2)~=ADDR(NIL))
      126     9023    1        THEN
      127     9024    1           SEG$2.GETCMD$->GET$CMD.F2_ = VECTOR(ERR_FLD2);
      128     9025    1     IF (ADDR(ERR_FLD3)~=ADDR(NIL))
      129     9026    1        THEN
      130     9027    1           SEG$2.GETCMD$->GET$CMD.F3_ = VECTOR(ERR_FLD3);
      131     9028    1     IF (ADDR(ERR_DCB)~=ADDR(NIL))
      132     9029    1        THEN
      133     9030    1           SEG$2.GETCMD$->GET$CMD.ERRDCB# = ERR_DCB;
      134     9031    1     CALL CPC$OPEN_LL;
      135     9032    1     SEG$2.GETCMD$->GET$CMD.DCB_PARAM# = SEG$2.LLDCB#;
      136     9033        /*
      137     9034             ***** If monitor or IBEX informational message, only use M$LL.
      138     9035                   Else use both M$DO and M$LL ...
      139     9036                   Informational messages = IBEX error code > 1199 or monitor sev. > 0
      140     9037        */
      141     9038    1     IF (ERR_CODE.MON AND ERR_CODE.SEV = 0)
      142     9039    1     OR (ERR_CODE.CODE > 1199 AND ERR_CODE.FCG = IBEXFCG)
      143     9040    1        THEN   /* Use M$LL */
      144     9041    2           DO;
      145     9042    2              SEG$2.GETCMD$->GET$CMD.INFOMSG# = %YES#;
      146     9043    2           END;
      147     9044    1        ELSE
      148     9045    2           DO;   /* Use M$DO and M$LL */
      149     9046    2              CALL CPC$OPEN_DO ;
      150     9047    2              SEG$2.GETCMD$->GET$CMD.DCB2_PARAM# = M$DO_NUM;
      151     9048    2              IF ADDR(DONT_POST#) = ADDR(NIL) OR NOT DONT_POST#
      152     9049    2                 THEN EXIT;
PL6.E3A0      #002=CPC$WRITEMSGE File=CPC$SUBR.:E05TSI                           TUE 07/29/97 11:24 Page:16   
      153     9050    2              SEG$2.FLAGS.ABORT = %YES#;
      154     9051    2              SEG$2.GETCMD$->GET$CMD.INFOMSG# = %YES#;
      155     9052    2           END;
      156     9053    1     CALL CXG$ERRMSG(SEG$2.GETCMD$->GET$CMD);
      157     9054    1     SEG$2.GETCMD$->GET$CMD.INFOMSG# = %NO#;
      158     9055    1     RETURN;
      159     9056
      160     9057    1   END CPC$WRITEMSGE;
      161     9058        %EOD;

PL6.E3A0      #002=CPC$WRITEMSGE File=CPC$SUBR.:E05TSI                           TUE 07/29/97 11:24 Page:17   
--  Include file information  --

   CXG_ENTRY.:E05TOU  cannot be made into a system file and is referenced.
   CP_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
   B_MACROS_C.:E05TOU  is referenced.
   CP_MACROS_C.:E05TOU  is referenced.
   CP_SUBS_C.:E05TOU  is referenced.
   NK_VFC_C.:E05TOU  is referenced.
   B$JIT.:E05TOU  cannot be made into a system file and is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure CPC$WRITEMSGE.

   Procedure CPC$WRITEMSGE requires 144 words for executable code.
   Procedure CPC$WRITEMSGE requires 46 words of local(AUTO) storage.

PL6.E3A0      #002=CPC$WRITEMSGE File=CPC$SUBR.:E05TSI                           TUE 07/29/97 11:24 Page:18   

 Object Unit name= CPC$WRITEMSGE                              File name= CPC$SUBR.:E05TOU
 UTS= JUL 29 '97 11:24:05.08 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1   Proc  even  none   144    220  CPC$WRITEMSGE
    2  RoData even  none     5      5  CPC$WRITEMSGE

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     1      0   yes            yes      Std        6  CPC$WRITEMSGE

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       5 CXP$POSTERR
         yes           Std       0 CPC$OPEN_DO
 yes     yes           Std       1 CXG$ERRMSG
         yes           Std       0 CPC$OPEN_LL
                       nStd      0 X66_AUTO_N
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET
PL6.E3A0      #002=CPC$WRITEMSGE File=CPC$SUBR.:E05TSI                           TUE 07/29/97 11:24 Page:19   

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                             r    SEG2$                            r    B$JIT$
     M$DO_NUM                              B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
PL6.E3A0      #002=CPC$WRITEMSGE File=CPC$SUBR.:E05TSI                           TUE 07/29/97 11:24 Page:20   


       42        1        /*T***********************************************************/
       43        2        /*T*                                                         */
       44        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
       45        4        /*T*                                                         */
       46        5        /*T***********************************************************/
       47        6        /**********************************************************************/
       48        7        /*F*   NAME:   CPC$WRITEMSGE
       49        8               PURPOSE: To output a specified message contained in the error
       50        9                       message file.
       51       10               DESCRIPTION: CPC$WRITEMSGE reads the error message file to obtain the
       52       11                       specified message and outputs it to a user.
       53       12        */
       54       13        /*D*   NAME:   CPC$WRITEMSGE
       55       14               CALL:   CALL CPC$WRITEMSGE(code,dcb#,err_fld1,err_fld2,err_fld3)
       56       15               INTERFACE: M$ERRMSG
       57       16               INPUT:  CODE - Code containing MID,MON,ERROR#, and SEV of message
       58       17                       to be output.
       59       18                       ERR_DCB - dcb# of dcb on which error occured and whose
       60       19                       information is to be substituted in the message.
       61       20                       ERR_FLD1 - textc field to be substituted for %U1 in message
       62       21                       ERR_FLD2 - textc field to be substituted for %U2 in message
       63       22                       ERR_FLD3 - textc field to be substituted for %U3 in message
       64       23                       DONT_POST# - don't post error for additional error reporting
       65       24               OUTPUT: Specified message to device assigned to M$DO if in
       66       25                       batch mode. Otherwise, message is output to the the device
       67       26                       assigned to M$UC.
       68       27               DESCRIPTION: The specified message contained in the error message
       69       28                       file is obtained and output to the user via the M$ERRMSG
       70       29                       PMME. If a message is not located, only the code is output
       71       30                       to the user.
       72       31        */
       73       32        /**********************************************************************/
       74       33        CPC$WRITEMSGE: PROC (ERR_CODE,ERR_DCB,ERR_FLD1,ERR_FLD2,ERR_FLD3,DONT_POST#);

     33  1 000000   000000 700200 xent  CPC$WRITEMS* TSX0  ! X66_AUTO_N
         1 000001   000056 000006                    ZERO    46,6
PL6.E3A0      #002=CPC$WRITEMSGE File=CPC$SUBR.:E05TSI                           TUE 07/29/97 11:24 Page:21   

       75       34                   %INCLUDE CP_6;
       76      115                   %INCLUDE CP_6_SUBS;
       77      655                   %INCLUDE B$JIT;
       78      945                   %INCLUDE NK_VFC_C;
       79     1019                   %INCLUDE CP_SUBS_C;
       80     1936                   %INCLUDE CP_MACROS_C;
       81     2688                   %INCLUDE B_MACROS_C;
       82     2799                   %INCLUDE XU_MACRO_C;
       83     5905                   %INCLUDE CP_DATA_R;
       84     8468        /***** external procedures *****/
       85     8469    1   DCL CPC$OPEN_DO ENTRY;
       86     8470    1   DCL CPC$OPEN_LL ENTRY;
       87     8471    1   DCL CXP$POSTERR ENTRY(5);
       88     8472        %INCLUDE CXG_ENTRY;
       89     8484        /***** fpts *****/
       90     8485        %SEG$2;
       91     8545        %XUG_GETCMD (NAME=GET$CMD, STCLASS=BASED);
       92     8883        %F$DCB;
       93     8940        /***** parameters *****/
       94     8941        %ERR_CODE(NAME=ERR_CODE,STCLASS=" ");
       95     8961        %ERR_CODE (NAME=ERRCODE,STCLASS=AUTO);
       96     8981        %TEXTC(NAME=ERR_FLD1,STCLASS=" ");
       97     8986        %TEXTC(NAME=ERR_FLD2,STCLASS=" ");
       98     8991        %TEXTC(NAME=ERR_FLD3,STCLASS=" ");
       99     8996    1   DCL ERR_BUFF CHAR(120);
      100     8997    1   DCL ERR_DCB UBIN WORD;
      101     8998    1   DCL DONT_POST# BIT(1) ALIGNED;
      102     8999        /*
      103     9000             ***** Munge ERR_CODE ...
      104     9001        */
      105     9002    1     ERRCODE = ERR_CODE;

   9002  1 000002   200003 470500                    LDP0    @ERR_CODE,,AUTO
         1 000003   000000 236100                    LDQ     0,,PR0
         1 000004   200011 756100                    STQ     ERRCODE,,AUTO

PL6.E3A0      #002=CPC$WRITEMSGE File=CPC$SUBR.:E05TSI                           TUE 07/29/97 11:24 Page:22   
      106     9003    1     ERRCODE.SEV = 0;

   9003  1 000005   000000 236000 2                  LDQ     0
         1 000006   200011 356100                    ANSQ    ERRCODE,,AUTO

      107     9004        /*
      108     9005             ***** skip errors
      109     9006        */
      110     9007    1     IF SEG$2.FLAGS.SKIP_ERRS

   9007  1 000007   000000 471400 xsym               LDP1    SEG2$
         1 000010   100000 236100                    LDQ     0,,PR1
         1 000011   004000 316003                    CANQ    2048,DU
         1 000012   000034 600000 1                  TZE     s:9016

      111     9008    1        THEN
      112     9009    2           DO;

      113     9010    2              CALL CXP$POSTERR (ADDR(SEG$2.ERRBUF),511,ERRCODE,%NO#,ERR_DCB);

   9010  1 000013   000000 236000 xsym               LDQ     SEG2$
         1 000014   000003 036003                    ADLQ    3,DU
         1 000015   200050 756100                    STQ     ERRCODE+31,,AUTO
         1 000016   200004 236100                    LDQ     @ERR_DCB,,AUTO
         1 000017   000002 235000 2                  LDA     2
         1 000020   200054 757100                    STAQ    ERRCODE+35,,AUTO
         1 000021   200011 633500                    EPPR3   ERRCODE,,AUTO
         1 000022   200053 453500                    STP3    ERRCODE+34,,AUTO
         1 000023   000003 236000 2                  LDQ     3
         1 000024   200052 756100                    STQ     ERRCODE+33,,AUTO
         1 000025   200050 634500                    EPPR4   ERRCODE+31,,AUTO
         1 000026   200051 454500                    STP4    ERRCODE+32,,AUTO
         1 000027   200051 630500                    EPPR0   ERRCODE+32,,AUTO
         1 000030   000023 631400 xsym               EPPR1   B_VECTNIL+19
         1 000031   000000 701000 xent               TSX1    CXP$POSTERR
         1 000032   000000 011000                    NOP     0

PL6.E3A0      #002=CPC$WRITEMSGE File=CPC$SUBR.:E05TSI                           TUE 07/29/97 11:24 Page:23   
      114     9011    2              RETURN;

   9011  1 000033   000000 702200 xent               TSX2  ! X66_ARET

      115     9012    2           END;
      116     9013        /*
      117     9014             ***** Setup GET$CMD ...
      118     9015        */
      119     9016    1     SEG$2.GETCMD$->GET$CMD.ERR_CODE = ERRCODE;

   9016  1 000034   100173 473500                    LDP3    123,,PR1
         1 000035   200011 236100                    LDQ     ERRCODE,,AUTO
         1 000036   300010 756100                    STQ     8,,PR3

      120     9017    1     SEG$2.GETCMD$->GET$CMD.ERRMSG_VFC# = %VFC_TRANSITION1;

   9017  1 000037   100173 473500                    LDP3    123,,PR1
         1 000040   037000 236003                    LDQ     15872,DU
         1 000041   300007 552140                    STBQ    7,'40'O,PR3

      121     9018    1     SEG$2.GETCMD$->GET$CMD.INFOMSG# = %NO#;

   9018  1 000042   100173 473500                    LDP3    123,,PR1
         1 000043   000004 236000 2                  LDQ     4
         1 000044   300006 356100                    ANSQ    6,,PR3

      122     9019    1     IF (ADDR(ERR_FLD1)~=ADDR(NIL))

   9019  1 000045   200005 236100                    LDQ     @ERR_FLD1,,AUTO
         1 000046   000001 116000 xsym               CMPQ    B_VECTNIL+1
         1 000047   000064 600000 1                  TZE     s:9022

      123     9020    1        THEN
      124     9021    1           SEG$2.GETCMD$->GET$CMD.F1_ = VECTOR(ERR_FLD1);

   9021  1 000050   100173 473500                    LDP3    123,,PR1
         1 000051   200005 474500                    LDP4    @ERR_FLD1,,AUTO
PL6.E3A0      #002=CPC$WRITEMSGE File=CPC$SUBR.:E05TSI                           TUE 07/29/97 11:24 Page:24   
         1 000052   000100 101500                    MRL     fill='000'O
         1 000053   400000 000001                    ADSC9   0,,PR4                   cn=0,n=1
         1 000054   200050 000002                    ADSC9   ERRCODE+31,,AUTO         cn=0,n=2
         1 000055   200050 220100                    LDX0    ERRCODE+31,,AUTO
         1 000056   000001 621010                    EAX1    1,X0
         1 000057   000000 635011                    EAA     0,X1
         1 000060   000002 771000                    ARL     2
         1 000061   000140 135007                    SBLA    96,DL
         1 000062   300017 755100                    STA     15,,PR3
         1 000063   300020 756100                    STQ     16,,PR3

      125     9022    1     IF (ADDR(ERR_FLD2)~=ADDR(NIL))

   9022  1 000064   200006 236100                    LDQ     @ERR_FLD2,,AUTO
         1 000065   000001 116000 xsym               CMPQ    B_VECTNIL+1
         1 000066   000103 600000 1                  TZE     s:9025

      126     9023    1        THEN
      127     9024    1           SEG$2.GETCMD$->GET$CMD.F2_ = VECTOR(ERR_FLD2);

   9024  1 000067   100173 473500                    LDP3    123,,PR1
         1 000070   200006 474500                    LDP4    @ERR_FLD2,,AUTO
         1 000071   000100 101500                    MRL     fill='000'O
         1 000072   400000 000001                    ADSC9   0,,PR4                   cn=0,n=1
         1 000073   200050 000002                    ADSC9   ERRCODE+31,,AUTO         cn=0,n=2
         1 000074   200050 220100                    LDX0    ERRCODE+31,,AUTO
         1 000075   000001 621010                    EAX1    1,X0
         1 000076   000000 635011                    EAA     0,X1
         1 000077   000002 771000                    ARL     2
         1 000100   000140 135007                    SBLA    96,DL
         1 000101   300021 755100                    STA     17,,PR3
         1 000102   300022 756100                    STQ     18,,PR3

      128     9025    1     IF (ADDR(ERR_FLD3)~=ADDR(NIL))

   9025  1 000103   200007 236100                    LDQ     @ERR_FLD3,,AUTO
         1 000104   000001 116000 xsym               CMPQ    B_VECTNIL+1
PL6.E3A0      #002=CPC$WRITEMSGE File=CPC$SUBR.:E05TSI                           TUE 07/29/97 11:24 Page:25   
         1 000105   000122 600000 1                  TZE     s:9028

      129     9026    1        THEN
      130     9027    1           SEG$2.GETCMD$->GET$CMD.F3_ = VECTOR(ERR_FLD3);

   9027  1 000106   100173 473500                    LDP3    123,,PR1
         1 000107   200007 474500                    LDP4    @ERR_FLD3,,AUTO
         1 000110   000100 101500                    MRL     fill='000'O
         1 000111   400000 000001                    ADSC9   0,,PR4                   cn=0,n=1
         1 000112   200050 000002                    ADSC9   ERRCODE+31,,AUTO         cn=0,n=2
         1 000113   200050 220100                    LDX0    ERRCODE+31,,AUTO
         1 000114   000001 621010                    EAX1    1,X0
         1 000115   000000 635011                    EAA     0,X1
         1 000116   000002 771000                    ARL     2
         1 000117   000140 135007                    SBLA    96,DL
         1 000120   300023 755100                    STA     19,,PR3
         1 000121   300024 756100                    STQ     20,,PR3

      131     9028    1     IF (ADDR(ERR_DCB)~=ADDR(NIL))

   9028  1 000122   200004 236100                    LDQ     @ERR_DCB,,AUTO
         1 000123   000001 116000 xsym               CMPQ    B_VECTNIL+1
         1 000124   000131 600000 1                  TZE     s:9031

      132     9029    1        THEN
      133     9030    1           SEG$2.GETCMD$->GET$CMD.ERRDCB# = ERR_DCB;

   9030  1 000125   100173 473500                    LDP3    123,,PR1
         1 000126   200004 474500                    LDP4    @ERR_DCB,,AUTO
         1 000127   400000 235100                    LDA     0,,PR4
         1 000130   300011 755100                    STA     9,,PR3

      134     9031    1     CALL CPC$OPEN_LL;

   9031  1 000131   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 000132   000000 701000 xent               TSX1    CPC$OPEN_LL
         1 000133   000000 011000                    NOP     0
PL6.E3A0      #002=CPC$WRITEMSGE File=CPC$SUBR.:E05TSI                           TUE 07/29/97 11:24 Page:26   

      135     9032    1     SEG$2.GETCMD$->GET$CMD.DCB_PARAM# = SEG$2.LLDCB#;

   9032  1 000134   000000 470400 xsym               LDP0    SEG2$
         1 000135   000173 471500                    LDP1    123,,PR0
         1 000136   000000 236100                    LDQ     0,,PR0
         1 000137   777777 376007                    ANQ     -1,DL
         1 000140   100014 756100                    STQ     12,,PR1

      136     9033        /*
      137     9034             ***** If monitor or IBEX informational message, only use M$LL.
      138     9035                   Else use both M$DO and M$LL ...
      139     9036                   Informational messages = IBEX error code > 1199 or monitor sev. > 0
      140     9037        */
      141     9038    1     IF (ERR_CODE.MON AND ERR_CODE.SEV = 0)

   9038  1 000141   200003 471500                    LDP1    @ERR_CODE,,AUTO
         1 000142   100000 236100                    LDQ     0,,PR1
         1 000143   400000 316007                    CANQ    -131072,DL
         1 000144   000147 600000 1                  TZE     s:9038+6
         1 000145   000007 316007                    CANQ    7,DL
         1 000146   000157 600000 1                  TZE     s:9042
         1 000147   100000 236100                    LDQ     0,,PR1
         1 000150   377770 376007                    ANQ     131064,DL
         1 000151   022600 116007                    CMPQ    9600,DL
         1 000152   000163 602000 1                  TNC     s:9046
         1 000153   100000 236100                    LDQ     0,,PR1
         1 000154   777700 376003                    ANQ     -64,DU
         1 000155   032000 116003                    CMPQ    13312,DU
         1 000156   000163 601000 1                  TNZ     s:9046

      142     9039    1     OR (ERR_CODE.CODE > 1199 AND ERR_CODE.FCG = IBEXFCG)
      143     9040    1        THEN   /* Use M$LL */
      144     9041    2           DO;

      145     9042    2              SEG$2.GETCMD$->GET$CMD.INFOMSG# = %YES#;

PL6.E3A0      #002=CPC$WRITEMSGE File=CPC$SUBR.:E05TSI                           TUE 07/29/97 11:24 Page:27   
   9042  1 000157   000173 473500                    LDP3    123,,PR0
         1 000160   001000 236003                    LDQ     512,DU
         1 000161   300006 256100                    ORSQ    6,,PR3

      146     9043    2           END;

   9043  1 000162   000205 710000 1                  TRA     s:9053

      147     9044    1        ELSE
      148     9045    2           DO;   /* Use M$DO and M$LL */

      149     9046    2              CALL CPC$OPEN_DO ;

   9046  1 000163   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 000164   000000 701000 xent               TSX1    CPC$OPEN_DO
         1 000165   000000 011000                    NOP     0

      150     9047    2              SEG$2.GETCMD$->GET$CMD.DCB2_PARAM# = M$DO_NUM;

   9047  1 000166   000000 470400 xsym               LDP0    SEG2$
         1 000167   000173 471500                    LDP1    123,,PR0
         1 000170   000000 235000 xsym               LDA     M$DO_NUM
         1 000171   100015 755100                    STA     13,,PR1

      151     9048    2              IF ADDR(DONT_POST#) = ADDR(NIL) OR NOT DONT_POST#

   9048  1 000172   200010 236100                    LDQ     @DONT_POST#,,AUTO
         1 000173   000001 116000 xsym               CMPQ    B_VECTNIL+1
         1 000174   000205 600000 1                  TZE     s:9053
         1 000175   200010 471500                    LDP1    @DONT_POST#,,AUTO
         1 000176   100000 234100                    SZN     0,,PR1
         1 000177   000205 605000 1                  TPL     s:9053

      152     9049    2                 THEN EXIT;
      153     9050    2              SEG$2.FLAGS.ABORT = %YES#;

   9050  1 000200   000400 236003                    LDQ     256,DU
PL6.E3A0      #002=CPC$WRITEMSGE File=CPC$SUBR.:E05TSI                           TUE 07/29/97 11:24 Page:28   
         1 000201   000000 256100                    ORSQ    0,,PR0

      154     9051    2              SEG$2.GETCMD$->GET$CMD.INFOMSG# = %YES#;

   9051  1 000202   000173 473500                    LDP3    123,,PR0
         1 000203   001000 236003                    LDQ     512,DU
         1 000204   300006 256100                    ORSQ    6,,PR3

      155     9052    2           END;

      156     9053    1     CALL CXG$ERRMSG(SEG$2.GETCMD$->GET$CMD);

   9053  1 000205   000173 471500                    LDP1    123,,PR0
         1 000206   200050 451500                    STP1    ERRCODE+31,,AUTO
         1 000207   200050 630500                    EPPR0   ERRCODE+31,,AUTO
         1 000210   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000211   000000 701000 xent               TSX1    CXG$ERRMSG
         1 000212   000000 011000                    NOP     0

      157     9054    1     SEG$2.GETCMD$->GET$CMD.INFOMSG# = %NO#;

   9054  1 000213   000000 470400 xsym               LDP0    SEG2$
         1 000214   000173 471500                    LDP1    123,,PR0
         1 000215   000004 236000 2                  LDQ     4
         1 000216   100006 356100                    ANSQ    6,,PR1

      158     9055    1     RETURN;

   9055  1 000217   000000 702200 xent               TSX2  ! X66_ARET
      159     9056
      160     9057    1   END CPC$WRITEMSGE;
      161     9058        %EOD;

PL6.E3A0      #002=CPC$WRITEMSGE File=CPC$SUBR.:E05TSI                           TUE 07/29/97 11:24 Page:29   
--  Include file information  --

   CXG_ENTRY.:E05TOU  cannot be made into a system file and is referenced.
   CP_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
   B_MACROS_C.:E05TOU  is referenced.
   CP_MACROS_C.:E05TOU  is referenced.
   CP_SUBS_C.:E05TOU  is referenced.
   NK_VFC_C.:E05TOU  is referenced.
   B$JIT.:E05TOU  cannot be made into a system file and is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure CPC$WRITEMSGE.
PL6.E3A0      #002=CPC$WRITEMSGE File=CPC$SUBR.:E05TSI                           TUE 07/29/97 11:24 Page:30   

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

    10-0-0/w PTR         r     1 @DONT_POST#                3-0-0/w PTR         r     1 @ERR_CODE
     4-0-0/w PTR         r     1 @ERR_DCB                   5-0-0/w PTR         r     1 @ERR_FLD1
     6-0-0/w PTR         r     1 @ERR_FLD2                  7-0-0/w PTR         r     1 @ERR_FLD3
    *0-0-0/w BIT         r     1 DONT_POST#                11-0-0/w STRC        r     1 ERRCODE
    *0-0-0/w STRC        r     1 ERR_CODE                  *0-0-0/w UBIN        r     1 ERR_DCB
    *0-0-0/c ASTR(9)     r     1 ERR_FLD1                  *0-0-0/c ASTR(9)     r     1 ERR_FLD2
    *0-0-0/c ASTR(9)     r     1 ERR_FLD3

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 B$JIT$                     0-0-0/w UBIN        r     1 M$DO_NUM
     0-0-0/w PTR         r     1 SEG2$

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d ASTR(3528)  r     1 F$DCB                      0-0-0/d STRC(1512)  r     1 GET$CMD
     0-0-0/w STRC(6264)  r     1 SEG$2


   Procedure CPC$WRITEMSGE requires 144 words for executable code.
   Procedure CPC$WRITEMSGE requires 46 words of local(AUTO) storage.
PL6.E3A0      #002=CPC$WRITEMSGE File=CPC$SUBR.:E05TSI                           TUE 07/29/97 11:24 Page:31   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #002=CPC$WRITEMSGE File=CPC$SUBR.:E05TSI                           TUE 07/29/97 11:24 Page:32   
          MINI XREF LISTING

B$JIT.CPFLAGS1.SLEAZE
       763**DCL       763--REDEF
B$JIT.ERR.MID
       670**DCL       670--REDEF
B$JIT.JRESPEAK
       831**DCL       832--REDEF
B$JIT.ORIGINATOR_PORT.FROM_CR
       940**DCL       940--REDEF     941--REDEF
B$JIT.PNR
       844**DCL       844--REDEF
B$JIT.TSLINE
       938**DCL       939--REDEF
B$JIT$
      8401**DCL       664--IMP-PTR
CAMR_REC.ACSVEH_
      7440**DCL      7441--REDEF
CAMR_REC.ALTKEYS_
      7446**DCL      7447--REDEF    7447--REDEF
CAMR_REC.HDR_
      7445**DCL      7446--REDEF
CAMR_REC.TAB_
      7444**DCL      7445--REDEF
CAMR_REC.UHL_
      7438**DCL      7439--REDEF    7439--REDEF
CAMR_REC.V.FSN#
      7478**DCL      7478--REDEF    7478--REDEF
CAMR_REC.WSN_
      7444**DCL      7444--REDEF
CFPT_CLOSE.SN_
      6282**DCL      6282--REDEF
CFPT_CLOSE.UTL_
      6283**DCL      6283--REDEF
PL6.E3A0      #002=CPC$WRITEMSGE File=CPC$SUBR.:E05TSI                           TUE 07/29/97 11:24 Page:33   
CFPT_CLOSE.V.EXPIRE#
      6297**DCL      6297--REDEF
CFPT_CLOSE.V.TYPE#
      6295**DCL      6295--REDEF
CFPT_CLOSE.V.XTNSIZE#
      6292**DCL      6292--REDEF    6294--REDEF
CFPT_OPEN.ACSVEH_
      6217**DCL      6218--REDEF
CFPT_OPEN.ALTKEYS_
      6223**DCL      6224--REDEF    6224--REDEF
CFPT_OPEN.HDR_
      6222**DCL      6223--REDEF
CFPT_OPEN.TAB_
      6221**DCL      6222--REDEF
CFPT_OPEN.UHL_
      6215**DCL      6216--REDEF    6216--REDEF
CFPT_OPEN.V.FSN#
      6255**DCL      6255--REDEF    6255--REDEF
CFPT_OPEN.WSN_
      6221**DCL      6221--REDEF
CFPT_READ.STATION_
      6321**DCL      6322--REDEF
CFPT_READ.V.DVBYTE.REREAD#
      6333**DCL      6333--REDEF
CFPT_READ.V.INDX#
      6331**DCL      6331--REDEF
CFPT_READUC.STATION_
      6691**DCL      6692--REDEF
CFPT_READUC.V.DVBYTE.REREAD#
      6703**DCL      6703--REDEF
CFPT_READUC.V.INDX#
      6701**DCL      6701--REDEF
CFPT_TRTN.V.IR#
      6927**DCL      6928--REDEF
CFPT_WRITE.STATION_
      6359**DCL      6359--REDEF
PL6.E3A0      #002=CPC$WRITEMSGE File=CPC$SUBR.:E05TSI                           TUE 07/29/97 11:24 Page:34   
CFPT_WRITE.V.DVBYTE.VFC#
      6366**DCL      6366--REDEF
CFPT_WRITEUC.STATION_
      6659**DCL      6659--REDEF
CFPT_WRITEUC.V.DVBYTE.VFC#
      6666**DCL      6666--REDEF
CFPT_XXX.V.STEPCC#
      7639**DCL      7639--REDEF
CGETCMD.OUT$
      7660**DCL      7666--REDEF
CPC$OPEN_DO
      8469**DCL-ENT  9046--CALL
CPC$OPEN_LL
      8470**DCL-ENT  9031--CALL
CVLP_TRMCTL.BREAKCOUNT
      7251**DCL      7252--REDEF
CVLP_WINDOW.FWINDOW#
      7347**DCL      7347--REDEF    7348--REDEF
CXG$ERRMSG
      8480**DCL-ENT  9053--CALL
CXP$POSTERR
      8471**DCL-ENT  9010--CALL
DONT_POST#
      8998**DCL        33--PROC     9048--IF       9048>>IF
ERRCODE
      8974**DCL      9002<<ASSIGN   9010<>CALL     9016>>ASSIGN
ERRCODE.SEV
      8979**DCL      9003<<ASSIGN
ERR_CODE
      8954**DCL        33--PROC     9002>>ASSIGN
ERR_CODE.CODE
      8958**DCL      9038>>IF
ERR_CODE.FCG
      8955**DCL      9038>>IF
ERR_CODE.MON
      8957**DCL      9038>>IF
PL6.E3A0      #002=CPC$WRITEMSGE File=CPC$SUBR.:E05TSI                           TUE 07/29/97 11:24 Page:35   
ERR_CODE.SEV
      8959**DCL      9038>>IF
ERR_DCB
      8997**DCL        33--PROC     9010<>CALL     9028--IF       9030>>ASSIGN
ERR_FLD1
      8982**DCL        33--PROC     9019--IF       9021--ASSIGN
ERR_FLD1.SIZ
      8983**DCL      8984--IMP-SIZ  9021>>ASSIGN
ERR_FLD2
      8987**DCL        33--PROC     9022--IF       9024--ASSIGN
ERR_FLD2.SIZ
      8988**DCL      8989--IMP-SIZ  9024>>ASSIGN
ERR_FLD3
      8992**DCL        33--PROC     9025--IF       9027--ASSIGN
ERR_FLD3.SIZ
      8993**DCL      8994--IMP-SIZ  9027>>ASSIGN
F$DCB.ACTPOS
      8916**DCL      8916--REDEF
F$DCB.ARS#
      8890**DCL      8890--REDEF
F$DCB.ATTR
      8909**DCL      8910--REDEF
F$DCB.BORROW
      8924**DCL      8924--REDEF    8924--REDEF    8924--REDEF
F$DCB.DCBNAME.L
      8938**DCL      8938--IMP-SIZ
F$DCB.EOMCHAR#
      8894**DCL      8894--REDEF
F$DCB.FLDID
      8919**DCL      8919--REDEF
F$DCB.FORM$
      8913**DCL      8913--REDEF
F$DCB.FSECT
      8929**DCL      8929--REDEF
F$DCB.FSN#
      8906**DCL      8906--REDEF    8906--REDEF    8907--REDEF
PL6.E3A0      #002=CPC$WRITEMSGE File=CPC$SUBR.:E05TSI                           TUE 07/29/97 11:24 Page:36   
F$DCB.HEADER$
      8912**DCL      8912--REDEF
F$DCB.IXTNSIZE#
      8910**DCL      8910--REDEF
F$DCB.LASTSTA$
      8899**DCL      8899--REDEF
F$DCB.LVL
      8925**DCL      8925--REDEF
F$DCB.NAME#.C
      8900**DCL      8900--REDEF
F$DCB.NOEOF
      8922**DCL      8922--REDEF
F$DCB.NRECS#
      8911**DCL      8911--REDEF
F$DCB.NRECX
      8930**DCL      8930--REDEF
F$DCB.OHDR
      8922**DCL      8922--REDEF
F$DCB.ORG#
      8905**DCL      8905--REDEF
F$DCB.PRECNO
      8928**DCL      8928--REDEF
F$DCB.RCSZ
      8934**DCL      8934--REDEF
F$DCB.RES#
      8901**DCL      8901--REDEF
F$DCB.SETX
      8913**DCL      8913--REDEF
F$DCB.TAB$
      8913**DCL      8913--REDEF
F$DCB.TDA
      8927**DCL      8928--REDEF
F$DCB.WSN#
      8901**DCL      8901--REDEF
GET$CMD
      8558**DCL      9053<>CALL
PL6.E3A0      #002=CPC$WRITEMSGE File=CPC$SUBR.:E05TSI                           TUE 07/29/97 11:24 Page:37   
GET$CMD.DCB2_PARAM#
      8743**DCL      9047<<ASSIGN
GET$CMD.DCB_PARAM#
      8738**DCL      9032<<ASSIGN
GET$CMD.ERRDCB#
      8717**DCL      9030<<ASSIGN
GET$CMD.ERRMSG_VFC#
      8673**DCL      9017<<ASSIGN
GET$CMD.ERR_CODE
      8706**DCL      9016<<ASSIGN
GET$CMD.F1_
      8755**DCL      9021<<ASSIGN
GET$CMD.F2_
      8759**DCL      9024<<ASSIGN
GET$CMD.F3_
      8763**DCL      9027<<ASSIGN
GET$CMD.INFOMSG#
      8654**DCL      9018<<ASSIGN   9042<<ASSIGN   9051<<ASSIGN   9054<<ASSIGN
GET$CMD.OUT$
      8563**DCL      8569--REDEF
M$DO_NUM
      8405**DCL      9047>>ASSIGN
SEG$2.ERRBUF
      8511**DCL      9010--CALL
SEG$2.FLAGS.ABORT
      8497**DCL      9050<<ASSIGN
SEG$2.FLAGS.SKIP_ERRS
      8494**DCL      9007>>IF
SEG$2.GETCMD$
      8532**DCL      9016>>ASSIGN   9017>>ASSIGN   9018>>ASSIGN   9021>>ASSIGN   9024>>ASSIGN   9027>>ASSIGN
      9030>>ASSIGN   9032>>ASSIGN   9042>>ASSIGN   9047>>ASSIGN   9051>>ASSIGN   9053>>CALL     9054>>ASSIGN
SEG$2.LLDCB#
      8506**DCL      9032>>ASSIGN
SEG2$
      8394**DCL      8486--IMP-PTR  9007>>IF       9010>>CALL     9016>>ASSIGN   9017>>ASSIGN   9018>>ASSIGN
      9021>>ASSIGN   9024>>ASSIGN   9027>>ASSIGN   9030>>ASSIGN   9032>>ASSIGN   9032>>ASSIGN   9042>>ASSIGN
PL6.E3A0      #002=CPC$WRITEMSGE File=CPC$SUBR.:E05TSI                           TUE 07/29/97 11:24 Page:38   
      9047>>ASSIGN   9050>>ASSIGN   9051>>ASSIGN   9053>>CALL     9054>>ASSIGN

PL6.E3A0      #003=CPC$OPEN_LL File=CPC$SUBR.:E05TSI                             TUE 07/29/97 11:24 Page:39   
      162        1        /*T***********************************************************/
      163        2        /*T*                                                         */
      164        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      165        4        /*T*                                                         */
      166        5        /*T***********************************************************/
      167        6        /**********************************************************************/
      168        7        /*F*   NAME:     CPC$OPEN_LL
      169        8               PURPOSE:  To GET and OPEN M$LL dcb.
      170        9        */
      171       10        /**********************************************************************/
      172       11        CPC$OPEN_LL: PROC;
      173       12                   %INCLUDE CP_6;
      174       93                   %INCLUDE CP_6_SUBS;
      175      633                   %INCLUDE CP_MACROS_C;
      176     1385                   %INCLUDE CP_PERR_C;
      177     1723                   %INCLUDE CP_SUBS_C;
      178     2640                   %INCLUDE B$JIT;
      179     2930                   %INCLUDE XU_MACRO_C;
      180     6036                   %INCLUDE B_MACROS_C;
      181     6147                   %INCLUDE CP_DATA_R;
      182     8710                   %INCLUDE F_ERRORS_C;
      183     8950                   %INCLUDE NK_VFC_C;
      184     9024        /***** External routines *****/
      185     9025    1     DCL CPC$WRITEMSGE ENTRY(6);
      186     9026    1     DCL CPC$GETDCB ENTRY(2);
      187     9027    1     DCL CPC$OPEN_DO ENTRY;
      188     9028    1     DCL CPC$SCREECH ENTRY(2);
      189     9029        /***** Local variables *****/
      190     9030    1     DCL DCB# UBIN WORD AUTO;
      191     9031        /***** fpts *****/
      192     9032          %FPT_OPEN (FPTN=FPT_OPEN,STCLASS=AUTO);
      193     9141        /***** Based structures *****/
      194     9142          %B$TCB (STCLASS="BASED(B$TCB$)");
      195     9145          %B$EXCFR;
      196     9163          %SEG$2;
      197     9223          %F$DCB;
      198     9280        /***** Error codes *****/
PL6.E3A0      #003=CPC$OPEN_LL File=CPC$SUBR.:E05TSI                             TUE 07/29/97 11:24 Page:40   
      199     9281          %ERR_CODE (NAME=E_GETDCB,MID#=CPC$SUBRMID,CODE#=E$GETDCB,STCLASS=CONSTANT);
      200     9301        /*E*    ERROR: CPC-E$GETDCB-0
      201     9302                MESSAGE: Unable to open M$LL - using LL device instead
      202     9303                DESCRIPTION:   This should never happen.
      203     9304        */
      204     9305        /*
      205     9306             ***** If at Control-Y then use M$UC ...
      206     9307        */
      207     9308    1     IF B$JIT.CPFLAGS1.YC AND NOT B$JIT.CPFLAGS1.YCGET
      208     9309    1        THEN
      209     9310    2           DO;
      210     9311    2              SEG$2.LLDCB# = M$UC_NUM;
      211     9312    2              RETURN;
      212     9313    2           END;
      213     9314        /*
      214     9315             ***** See if IBEX already has M$LL ...
      215     9316        */
      216     9317    1     IF SEG$2.LLDCB# = 0
      217     9318    1        THEN
      218     9319    2           DO;   /* See if the USER has M$LL */
      219     9320    2              CALL CPC$GETDCB (M$LL_NUM, M$LL);
      220     9321    2           END;
      221     9322        /*
      222     9323             ***** If M$LL already open then go back ...
      223     9324        */
      224     9325    1     IF DCBADDR(SEG$2.LLDCB#) -> F$DCB.FCD#
      225     9326    1        THEN
      226     9327    1           RETURN;
      227     9328        /*
      228     9329             ***** Otherwise,
      229     9330                   Open it ...
      230     9331        */
      231     9332    1     FPT_OPEN = CFPT_OPEN;
      232     9333    1     FPT_OPEN.V_ = VECTOR(FPT_OPEN.V);
      233     9334    1     FPT_OPEN.V.DCB# = SEG$2.LLDCB#;
      234     9335    1     FPT_OPEN.V.FUN# = %CREATE#;
      235     9336    1     FPT_OPEN.V.INITZ.REASSIGN# = %YES#;
PL6.E3A0      #003=CPC$OPEN_LL File=CPC$SUBR.:E05TSI                             TUE 07/29/97 11:24 Page:41   
      236     9337    1     FPT_OPEN.V.INITZ.SCRUB# = %YES#;
      237     9338    1     FPT_OPEN.V.DVFC# = %VFC_TRANSITION1;
      238     9339    1     CALL M$OPEN (FPT_OPEN) ALTRET(E_OPEN);
      239     9340    1     RETURN;
      240     9341        /*
      241     9342             TROUBLE!!!
      242     9343        */
      243     9344    1   E_OPEN:
      244     9345    1        IF FPT_OPEN.V.INITZ.REASSIGN#
      245     9346    1           THEN
      246     9347    2              DO;
      247     9348    2                 FPT_OPEN.V.INITZ.REASSIGN# = '0'B;
      248     9349    2                 CALL M$RETRY;
      249     9350    2              END;
      250     9351    1        IF B$JIT.MODE = %M_BATCH# AND SEG$2.LLDCB# ~= %M$DO#
      251     9352    1           THEN
      252     9353    2             DO;
      253     9354    2               CALL CPC$OPEN_DO ;
      254     9355    2               SEG$2.LLDCB# = %M$DO#;
      255     9356    2             END;
      256     9357    1           ELSE
      257     9358    2             DO;
      258     9359    2               SEG$2.LLDCB# = %M$UC#;
      259     9360    2             END;
      260     9361    1         SEG$2.FLAGS.IBEX_OWNS_M$LL = %NO#;
      261     9362    1        CALL CPC$WRITEMSGE (E_GETDCB,,,,,%YES#);
      262     9363    1        RETURN;
      263     9364    1   END CPC$OPEN_LL;
      264     9365        %EOD;

PL6.E3A0      #003=CPC$OPEN_LL File=CPC$SUBR.:E05TSI                             TUE 07/29/97 11:24 Page:42   
--  Include file information  --

   NK_VFC_C.:E05TOU  is referenced.
   F_ERRORS_C.:E05TOU  is referenced.
   CP_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   B_MACROS_C.:E05TOU  is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
   B$JIT.:E05TOU  cannot be made into a system file and is referenced.
   CP_SUBS_C.:E05TOU  is referenced.
   CP_PERR_C.:E05TOU  is referenced.
   CP_MACROS_C.:E05TOU  is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure CPC$OPEN_LL.

   Procedure CPC$OPEN_LL requires 94 words for executable code.
   Procedure CPC$OPEN_LL requires 68 words of local(AUTO) storage.

PL6.E3A0      #003=CPC$OPEN_LL File=CPC$SUBR.:E05TSI                             TUE 07/29/97 11:24 Page:43   

 Object Unit name= CPC$OPEN_LL                                File name= CPC$SUBR.:E05TOU
 UTS= JUL 29 '97 11:24:31.56 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1  RoData even  UTS      1      1  CPC$OPEN_LL
    2   Proc  even  none    94    136  CPC$OPEN_LL
    3  RoData even  none     8     10  CPC$OPEN_LL

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     2      0   yes            yes      Std        0  CPC$OPEN_LL

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       2 CPC$GETDCB
         yes           Std       0 CPC$OPEN_DO
         yes           Std       6 CPC$WRITEMSGE
                       nStd      0 X66_AUTO_0
                       nStd      0 X66_ARET
                       Std       0 B_CONSPOOL_D
PL6.E3A0      #003=CPC$OPEN_LL File=CPC$SUBR.:E05TSI                             TUE 07/29/97 11:24 Page:44   

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                                  CFPT_OPEN                        r    SEG2$
r    B$JIT$                           r    B$TCB$                                M$UC_NUM
     M$LL_NUM                              M$LL                                  B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ROSID                                 ISSID
PL6.E3A0      #003=CPC$OPEN_LL File=CPC$SUBR.:E05TSI                             TUE 07/29/97 11:24 Page:45   


      162        1        /*T***********************************************************/
      163        2        /*T*                                                         */
      164        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      165        4        /*T*                                                         */
      166        5        /*T***********************************************************/
      167        6        /**********************************************************************/
      168        7        /*F*   NAME:     CPC$OPEN_LL
      169        8               PURPOSE:  To GET and OPEN M$LL dcb.
      170        9        */
      171       10        /**********************************************************************/
      172       11        CPC$OPEN_LL: PROC;

     11  2 000000   000000 700200 xent  CPC$OPEN_LL  TSX0  ! X66_AUTO_0
         2 000001   000104 000000                    ZERO    68,0

      173       12                   %INCLUDE CP_6;
      174       93                   %INCLUDE CP_6_SUBS;
      175      633                   %INCLUDE CP_MACROS_C;
      176     1385                   %INCLUDE CP_PERR_C;
      177     1723                   %INCLUDE CP_SUBS_C;
      178     2640                   %INCLUDE B$JIT;
      179     2930                   %INCLUDE XU_MACRO_C;
      180     6036                   %INCLUDE B_MACROS_C;
      181     6147                   %INCLUDE CP_DATA_R;
      182     8710                   %INCLUDE F_ERRORS_C;
      183     8950                   %INCLUDE NK_VFC_C;
      184     9024        /***** External routines *****/
      185     9025    1     DCL CPC$WRITEMSGE ENTRY(6);
      186     9026    1     DCL CPC$GETDCB ENTRY(2);
      187     9027    1     DCL CPC$OPEN_DO ENTRY;
      188     9028    1     DCL CPC$SCREECH ENTRY(2);
      189     9029        /***** Local variables *****/
      190     9030    1     DCL DCB# UBIN WORD AUTO;
      191     9031        /***** fpts *****/
      192     9032          %FPT_OPEN (FPTN=FPT_OPEN,STCLASS=AUTO);
      193     9141        /***** Based structures *****/
PL6.E3A0      #003=CPC$OPEN_LL File=CPC$SUBR.:E05TSI                             TUE 07/29/97 11:24 Page:46   
      194     9142          %B$TCB (STCLASS="BASED(B$TCB$)");
      195     9145          %B$EXCFR;
      196     9163          %SEG$2;
      197     9223          %F$DCB;
      198     9280        /***** Error codes *****/
      199     9281          %ERR_CODE (NAME=E_GETDCB,MID#=CPC$SUBRMID,CODE#=E$GETDCB,STCLASS=CONSTANT);
      200     9301        /*E*    ERROR: CPC-E$GETDCB-0
      201     9302                MESSAGE: Unable to open M$LL - using LL device instead
      202     9303                DESCRIPTION:   This should never happen.
      203     9304        */
      204     9305        /*
      205     9306             ***** If at Control-Y then use M$UC ...
      206     9307        */
      207     9308    1     IF B$JIT.CPFLAGS1.YC AND NOT B$JIT.CPFLAGS1.YCGET

   9308  2 000002   000000 470400 xsym               LDP0    B$JIT$
         2 000003   000143 236100                    LDQ     99,,PR0
         2 000004   040000 316003                    CANQ    16384,DU
         2 000005   000014 600000 2                  TZE     s:9317
         2 000006   000143 430100                    FSZN    99,,PR0
         2 000007   000014 604000 2                  TMI     s:9317

      208     9309    1        THEN
      209     9310    2           DO;

      210     9311    2              SEG$2.LLDCB# = M$UC_NUM;

   9311  2 000010   000000 720000 xsym               LXL0    M$UC_NUM
         2 000011   000000 471400 xsym               LDP1    SEG2$
         2 000012   100000 440100                    SXL0    0,,PR1

      211     9312    2              RETURN;

   9312  2 000013   000000 702200 xent               TSX2  ! X66_ARET

      212     9313    2           END;
      213     9314        /*
PL6.E3A0      #003=CPC$OPEN_LL File=CPC$SUBR.:E05TSI                             TUE 07/29/97 11:24 Page:47   
      214     9315             ***** See if IBEX already has M$LL ...
      215     9316        */
      216     9317    1     IF SEG$2.LLDCB# = 0

   9317  2 000014   000000 471400 xsym               LDP1    SEG2$
         2 000015   100000 720100                    LXL0    0,,PR1
         2 000016   000023 601000 2                  TNZ     s:9325

      217     9318    1        THEN
      218     9319    2           DO;   /* See if the USER has M$LL */

      219     9320    2              CALL CPC$GETDCB (M$LL_NUM, M$LL);

   9320  2 000017   000000 630400 3                  EPPR0   0
         2 000020   000020 631400 xsym               EPPR1   B_VECTNIL+16
         2 000021   000000 701000 xent               TSX1    CPC$GETDCB
         2 000022   000000 011000                    NOP     0

      220     9321    2           END;

      221     9322        /*
      222     9323             ***** If M$LL already open then go back ...
      223     9324        */
      224     9325    1     IF DCBADDR(SEG$2.LLDCB#) -> F$DCB.FCD#

   9325  2 000023   000002 470400 3                  LDP0    2
         2 000024   000000 471500                    LDP1    0,,PR0
         2 000025   000000 473400 xsym               LDP3    SEG2$
         2 000026   300000 720100                    LXL0    0,,PR3
         2 000027   100000 474510                    LDP4    0,X0,PR1
         2 000030   400031 236100                    LDQ     25,,PR4
         2 000031   020000 316007                    CANQ    8192,DL
         2 000032   000034 600000 2                  TZE     s:9332

      225     9326    1        THEN
      226     9327    1           RETURN;

PL6.E3A0      #003=CPC$OPEN_LL File=CPC$SUBR.:E05TSI                             TUE 07/29/97 11:24 Page:48   
   9327  2 000033   000000 702200 xent               TSX2  ! X66_ARET

      227     9328        /*
      228     9329             ***** Otherwise,
      229     9330                   Open it ...
      230     9331        */
      231     9332    1     FPT_OPEN = CFPT_OPEN;

   9332  2 000034   000100 100400                    MLR     fill='000'O
         2 000035   000000 000350 xsym               ADSC9   CFPT_OPEN                cn=0,n=232
         2 000036   200004 000350                    ADSC9   FPT_OPEN,,AUTO           cn=0,n=232

      232     9333    1     FPT_OPEN.V_ = VECTOR(FPT_OPEN.V);

   9333  2 000037   000003 235000 3                  LDA     3
         2 000040   200076 452500                    STP2    FPT_OPEN+58,,AUTO
         2 000041   200076 236100                    LDQ     FPT_OPEN+58,,AUTO
         2 000042   000050 036003                    ADLQ    40,DU
         2 000043   200004 757100                    STAQ    FPT_OPEN,,AUTO

      233     9334    1     FPT_OPEN.V.DCB# = SEG$2.LLDCB#;

   9334  2 000044   300000 720100                    LXL0    0,,PR3
         2 000045   200050 740100                    STX0    FPT_OPEN+36,,AUTO

      234     9335    1     FPT_OPEN.V.FUN# = %CREATE#;

   9335  2 000046   003000 236007                    LDQ     1536,DL
         2 000047   200051 552110                    STBQ    FPT_OPEN+37,'10'O,AUTO

      235     9336    1     FPT_OPEN.V.INITZ.REASSIGN# = %YES#;

   9336  2 000050   200000 236007                    LDQ     65536,DL
         2 000051   200050 256100                    ORSQ    FPT_OPEN+36,,AUTO

      236     9337    1     FPT_OPEN.V.INITZ.SCRUB# = %YES#;

PL6.E3A0      #003=CPC$OPEN_LL File=CPC$SUBR.:E05TSI                             TUE 07/29/97 11:24 Page:49   
   9337  2 000052   400000 236007                    LDQ     -131072,DL
         2 000053   200050 256100                    ORSQ    FPT_OPEN+36,,AUTO

      237     9338    1     FPT_OPEN.V.DVFC# = %VFC_TRANSITION1;

   9338  2 000054   037000 236007                    LDQ     15872,DL
         2 000055   200066 552110                    STBQ    FPT_OPEN+50,'10'O,AUTO

      238     9339    1     CALL M$OPEN (FPT_OPEN) ALTRET(E_OPEN);

   9339  2 000056   200004 630500                    EPPR0   FPT_OPEN,,AUTO
         2 000057   450000 713400                    CLIMB   alt,open
         2 000060   410400 401760                    pmme    nvectors=18
         2 000061   000063 702000 2                  TSX2    E_OPEN

      239     9340    1     RETURN;

   9340  2 000062   000000 702200 xent               TSX2  ! X66_ARET

      240     9341        /*
      241     9342             TROUBLE!!!
      242     9343        */
      243     9344    1   E_OPEN:
      244     9345    1        IF FPT_OPEN.V.INITZ.REASSIGN#

   9345  2 000063   200050 236100       E_OPEN       LDQ     FPT_OPEN+36,,AUTO
         2 000064   200000 316007                    CANQ    65536,DL
         2 000065   000072 600000 2                  TZE     s:9351

      245     9346    1           THEN
      246     9347    2              DO;

      247     9348    2                 FPT_OPEN.V.INITZ.REASSIGN# = '0'B;

   9348  2 000066   000004 236000 3                  LDQ     4
         2 000067   200050 356100                    ANSQ    FPT_OPEN+36,,AUTO

PL6.E3A0      #003=CPC$OPEN_LL File=CPC$SUBR.:E05TSI                             TUE 07/29/97 11:24 Page:50   
      248     9349    2                 CALL M$RETRY;

   9349  2 000070   010010 713400                    CLIMB   4104
         2 000071   000000 401760                    pmme    nvectors=0

      249     9350    2              END;

      250     9351    1        IF B$JIT.MODE = %M_BATCH# AND SEG$2.LLDCB# ~= %M$DO#

   9351  2 000072   000000 470400 xsym               LDP0    B$JIT$
         2 000073   000000 236100                    LDQ     0,,PR0
         2 000074   740000 376003                    ANQ     -16384,DU
         2 000075   040000 116003                    CMPQ    16384,DU
         2 000076   000112 601000 2                  TNZ     s:9359
         2 000077   000000 471400 xsym               LDP1    SEG2$
         2 000100   100000 720100                    LXL0    0,,PR1
         2 000101   000004 100003                    CMPX0   4,DU
         2 000102   000112 600000 2                  TZE     s:9359

      251     9352    1           THEN
      252     9353    2             DO;

      253     9354    2               CALL CPC$OPEN_DO ;

   9354  2 000103   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 000104   000000 701000 xent               TSX1    CPC$OPEN_DO
         2 000105   000000 011000                    NOP     0

      254     9355    2               SEG$2.LLDCB# = %M$DO#;

   9355  2 000106   000004 220003                    LDX0    4,DU
         2 000107   000000 470400 xsym               LDP0    SEG2$
         2 000110   000000 440100                    SXL0    0,,PR0

      255     9356    2             END;

   9356  2 000111   000115 710000 2                  TRA     s:9361
PL6.E3A0      #003=CPC$OPEN_LL File=CPC$SUBR.:E05TSI                             TUE 07/29/97 11:24 Page:51   

      256     9357    1           ELSE
      257     9358    2             DO;

      258     9359    2               SEG$2.LLDCB# = %M$UC#;

   9359  2 000112   000003 220003                    LDX0    3,DU
         2 000113   000000 471400 xsym               LDP1    SEG2$
         2 000114   100000 440100                    SXL0    0,,PR1

      259     9360    2             END;

      260     9361    1         SEG$2.FLAGS.IBEX_OWNS_M$LL = %NO#;

   9361  2 000115   000000 470400 xsym               LDP0    SEG2$
         2 000116   000005 236000 3                  LDQ     5
         2 000117   000000 356100                    ANSQ    0,,PR0

      261     9362    1        CALL CPC$WRITEMSGE (E_GETDCB,,,,,%YES#);

   9362  2 000120   000006 236000 3                  LDQ     6
         2 000121   000001 235000 xsym               LDA     B_VECTNIL+1
         2 000122   200102 757100                    STAQ    FPT_OPEN+62,,AUTO
         2 000123   000001 236000 xsym               LDQ     B_VECTNIL+1
         2 000124   000001 235000 xsym               LDA     B_VECTNIL+1
         2 000125   200100 757100                    STAQ    FPT_OPEN+60,,AUTO
         2 000126   000001 236000 xsym               LDQ     B_VECTNIL+1
         2 000127   000007 235000 3                  LDA     7
         2 000130   200076 757100                    STAQ    FPT_OPEN+58,,AUTO
         2 000131   200076 630500                    EPPR0   FPT_OPEN+58,,AUTO
         2 000132   000024 631400 xsym               EPPR1   B_VECTNIL+20
         2 000133   000000 701000 xent               TSX1    CPC$WRITEMSGE
         2 000134   000000 011000                    NOP     0

      262     9363    1        RETURN;

   9363  2 000135   000000 702200 xent               TSX2  ! X66_ARET
PL6.E3A0      #003=CPC$OPEN_LL File=CPC$SUBR.:E05TSI                             TUE 07/29/97 11:24 Page:52   
      263     9364    1   END CPC$OPEN_LL;
      264     9365        %EOD;

PL6.E3A0      #003=CPC$OPEN_LL File=CPC$SUBR.:E05TSI                             TUE 07/29/97 11:24 Page:53   
--  Include file information  --

   NK_VFC_C.:E05TOU  is referenced.
   F_ERRORS_C.:E05TOU  is referenced.
   CP_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   B_MACROS_C.:E05TOU  is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
   B$JIT.:E05TOU  cannot be made into a system file and is referenced.
   CP_SUBS_C.:E05TOU  is referenced.
   CP_PERR_C.:E05TOU  is referenced.
   CP_MACROS_C.:E05TOU  is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure CPC$OPEN_LL.
PL6.E3A0      #003=CPC$OPEN_LL File=CPC$SUBR.:E05TSI                             TUE 07/29/97 11:24 Page:54   

 **** Variables and constants ****

  ****  Section 001 RoData CPC$OPEN_LL

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC        r     1 E_GETDCB

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     4-0-0/d STRC(2088)  r     1 FPT_OPEN

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 B$JIT$                     0-0-0/w PTR         r     1 B$TCB$
     0-0-0/d STRC(2088)  r     1 CFPT_OPEN                  0-0-0/d STRC(45)    r     1 M$LL
     0-0-0/w UBIN        r     1 M$LL_NUM                   0-0-0/w UBIN        r     1 M$UC_NUM
     0-0-0/w PTR         r     1 SEG2$

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d STRC(8856)  r     1 B$JIT                      0-0-0/d ASTR(3528)  r     1 F$DCB
     0-0-0/w STRC(6264)  r     1 SEG$2


   Procedure CPC$OPEN_LL requires 94 words for executable code.
PL6.E3A0      #003=CPC$OPEN_LL File=CPC$SUBR.:E05TSI                             TUE 07/29/97 11:24 Page:55   
   Procedure CPC$OPEN_LL requires 68 words of local(AUTO) storage.
PL6.E3A0      #003=CPC$OPEN_LL File=CPC$SUBR.:E05TSI                             TUE 07/29/97 11:24 Page:56   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #003=CPC$OPEN_LL File=CPC$SUBR.:E05TSI                             TUE 07/29/97 11:24 Page:57   
          MINI XREF LISTING

B$EXCFR.ASL
      9146**DCL      9146--REDEF
B$EXCFR.ERR.ERR#
      9160**DCL      9160--REDEF
B$EXCFR.EVID
      9159**DCL      9159--REDEF    9160--REDEF
B$EXCFR.IR
      9147**DCL      9147--REDEF
B$EXCFR.PREVSZ
      9146**DCL      9146--REDEF
B$EXCFR.SUBC
      9158**DCL      9158--REDEF    9159--REDEF    9159--REDEF
B$JIT.CPFLAGS1.SLEAZE
      2748**DCL      2748--REDEF
B$JIT.CPFLAGS1.YC
      2743**DCL      9308>>IF
B$JIT.CPFLAGS1.YCGET
      2744**DCL      9308>>IF
B$JIT.ERR.MID
      2655**DCL      2655--REDEF
B$JIT.JRESPEAK
      2816**DCL      2817--REDEF
B$JIT.MODE
      2649**DCL      9351>>IF
B$JIT.ORIGINATOR_PORT.FROM_CR
      2925**DCL      2925--REDEF    2926--REDEF
B$JIT.PNR
      2829**DCL      2829--REDEF
B$JIT.TSLINE
      2923**DCL      2924--REDEF
B$JIT$
      8643**DCL      2649--IMP-PTR  9308>>IF       9308>>IF       9351>>IF
PL6.E3A0      #003=CPC$OPEN_LL File=CPC$SUBR.:E05TSI                             TUE 07/29/97 11:24 Page:58   
B$TCB$
      8645**DCL      9143--IMP-PTR
CAMR_REC.ACSVEH_
      7682**DCL      7683--REDEF
CAMR_REC.ALTKEYS_
      7688**DCL      7689--REDEF    7689--REDEF
CAMR_REC.HDR_
      7687**DCL      7688--REDEF
CAMR_REC.TAB_
      7686**DCL      7687--REDEF
CAMR_REC.UHL_
      7680**DCL      7681--REDEF    7681--REDEF
CAMR_REC.V.FSN#
      7720**DCL      7720--REDEF    7720--REDEF
CAMR_REC.WSN_
      7686**DCL      7686--REDEF
CFPT_CLOSE.SN_
      6524**DCL      6524--REDEF
CFPT_CLOSE.UTL_
      6525**DCL      6525--REDEF
CFPT_CLOSE.V.EXPIRE#
      6539**DCL      6539--REDEF
CFPT_CLOSE.V.TYPE#
      6537**DCL      6537--REDEF
CFPT_CLOSE.V.XTNSIZE#
      6534**DCL      6534--REDEF    6536--REDEF
CFPT_OPEN
      6457**DCL      9332>>ASSIGN
CFPT_OPEN.ACSVEH_
      6459**DCL      6460--REDEF
CFPT_OPEN.ALTKEYS_
      6465**DCL      6466--REDEF    6466--REDEF
CFPT_OPEN.HDR_
      6464**DCL      6465--REDEF
CFPT_OPEN.TAB_
      6463**DCL      6464--REDEF
PL6.E3A0      #003=CPC$OPEN_LL File=CPC$SUBR.:E05TSI                             TUE 07/29/97 11:24 Page:59   
CFPT_OPEN.UHL_
      6457**DCL      6458--REDEF    6458--REDEF
CFPT_OPEN.V.FSN#
      6497**DCL      6497--REDEF    6497--REDEF
CFPT_OPEN.WSN_
      6463**DCL      6463--REDEF
CFPT_READ.STATION_
      6563**DCL      6564--REDEF
CFPT_READ.V.DVBYTE.REREAD#
      6575**DCL      6575--REDEF
CFPT_READ.V.INDX#
      6573**DCL      6573--REDEF
CFPT_READUC.STATION_
      6933**DCL      6934--REDEF
CFPT_READUC.V.DVBYTE.REREAD#
      6945**DCL      6945--REDEF
CFPT_READUC.V.INDX#
      6943**DCL      6943--REDEF
CFPT_TRTN.V.IR#
      7169**DCL      7170--REDEF
CFPT_WRITE.STATION_
      6601**DCL      6601--REDEF
CFPT_WRITE.V.DVBYTE.VFC#
      6608**DCL      6608--REDEF
CFPT_WRITEUC.STATION_
      6901**DCL      6901--REDEF
CFPT_WRITEUC.V.DVBYTE.VFC#
      6908**DCL      6908--REDEF
CFPT_XXX.V.STEPCC#
      7881**DCL      7881--REDEF
CGETCMD.OUT$
      7902**DCL      7908--REDEF
CPC$GETDCB
      9026**DCL-ENT  9320--CALL
CPC$OPEN_DO
      9027**DCL-ENT  9354--CALL
PL6.E3A0      #003=CPC$OPEN_LL File=CPC$SUBR.:E05TSI                             TUE 07/29/97 11:24 Page:60   
CPC$WRITEMSGE
      9025**DCL-ENT  9362--CALL
CVLP_TRMCTL.BREAKCOUNT
      7493**DCL      7494--REDEF
CVLP_WINDOW.FWINDOW#
      7589**DCL      7589--REDEF    7590--REDEF
E_GETDCB
      9294**DCL      9362<>CALL
E_OPEN
      9345**LABEL    9339--CALLALT
F$DCB.ACTPOS
      9256**DCL      9256--REDEF
F$DCB.ARS#
      9230**DCL      9230--REDEF
F$DCB.ATTR
      9249**DCL      9250--REDEF
F$DCB.BORROW
      9264**DCL      9264--REDEF    9264--REDEF    9264--REDEF
F$DCB.DCBNAME.L
      9278**DCL      9278--IMP-SIZ
F$DCB.EOMCHAR#
      9234**DCL      9234--REDEF
F$DCB.FCD#
      9243**DCL      9325>>IF
F$DCB.FLDID
      9259**DCL      9259--REDEF
F$DCB.FORM$
      9253**DCL      9253--REDEF
F$DCB.FSECT
      9269**DCL      9269--REDEF
F$DCB.FSN#
      9246**DCL      9246--REDEF    9246--REDEF    9247--REDEF
F$DCB.HEADER$
      9252**DCL      9252--REDEF
F$DCB.IXTNSIZE#
      9250**DCL      9250--REDEF
PL6.E3A0      #003=CPC$OPEN_LL File=CPC$SUBR.:E05TSI                             TUE 07/29/97 11:24 Page:61   
F$DCB.LASTSTA$
      9239**DCL      9239--REDEF
F$DCB.LVL
      9265**DCL      9265--REDEF
F$DCB.NAME#.C
      9240**DCL      9240--REDEF
F$DCB.NOEOF
      9262**DCL      9262--REDEF
F$DCB.NRECS#
      9251**DCL      9251--REDEF
F$DCB.NRECX
      9270**DCL      9270--REDEF
F$DCB.OHDR
      9262**DCL      9262--REDEF
F$DCB.ORG#
      9245**DCL      9245--REDEF
F$DCB.PRECNO
      9268**DCL      9268--REDEF
F$DCB.RCSZ
      9274**DCL      9274--REDEF
F$DCB.RES#
      9241**DCL      9241--REDEF
F$DCB.SETX
      9253**DCL      9253--REDEF
F$DCB.TAB$
      9253**DCL      9253--REDEF
F$DCB.TDA
      9267**DCL      9268--REDEF
F$DCB.WSN#
      9241**DCL      9241--REDEF
FPT_OPEN
      9097**DCL      9332<<ASSIGN   9339<>CALL
FPT_OPEN.ACSVEH_
      9099**DCL      9100--REDEF
FPT_OPEN.ALTKEYS_
      9105**DCL      9106--REDEF    9106--REDEF
PL6.E3A0      #003=CPC$OPEN_LL File=CPC$SUBR.:E05TSI                             TUE 07/29/97 11:24 Page:62   
FPT_OPEN.HDR_
      9104**DCL      9105--REDEF
FPT_OPEN.TAB_
      9103**DCL      9104--REDEF
FPT_OPEN.UHL_
      9097**DCL      9098--REDEF    9098--REDEF
FPT_OPEN.V
      9106**DCL      9333--ASSIGN
FPT_OPEN.V.DCB#
      9106**DCL      9334<<ASSIGN
FPT_OPEN.V.DVFC#
      9133**DCL      9338<<ASSIGN
FPT_OPEN.V.FSN#
      9137**DCL      9137--REDEF    9137--REDEF
FPT_OPEN.V.FUN#
      9116**DCL      9335<<ASSIGN
FPT_OPEN.V.INITZ.REASSIGN#
      9107**DCL      9336<<ASSIGN   9345>>IF       9348<<ASSIGN
FPT_OPEN.V.INITZ.SCRUB#
      9107**DCL      9337<<ASSIGN
FPT_OPEN.V_
      9097**DCL      9333<<ASSIGN
FPT_OPEN.WSN_
      9103**DCL      9103--REDEF
M$LL
      8701**DCL      9320<>CALL
M$LL_NUM
      8651**DCL      9320<>CALL
M$OPEN
        21**DCL-ENT  9339--CALL
M$RETRY
        78**DCL-ENT  9349--CALL
M$UC_NUM
      8646**DCL      9311>>ASSIGN
SEG$2.FLAGS.IBEX_OWNS_M$LL
      9181**DCL      9361<<ASSIGN
PL6.E3A0      #003=CPC$OPEN_LL File=CPC$SUBR.:E05TSI                             TUE 07/29/97 11:24 Page:63   
SEG$2.LLDCB#
      9184**DCL      9311<<ASSIGN   9317>>IF       9325--IF       9334>>ASSIGN   9351>>IF       9355<<ASSIGN
      9359<<ASSIGN
SEG2$
      8636**DCL      9164--IMP-PTR  9311>>ASSIGN   9317>>IF       9325>>IF       9334>>ASSIGN   9351>>IF
      9355>>ASSIGN   9359>>ASSIGN   9361>>ASSIGN

PL6.E3A0      #004=CPC$OPEN_DO File=CPC$SUBR.:E05TSI                             TUE 07/29/97 11:24 Page:64   
      265        1        /*T***********************************************************/
      266        2        /*T*                                                         */
      267        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      268        4        /*T*                                                         */
      269        5        /*T***********************************************************/
      270        6        /******************************************************************************/
      271        7        /*F*   NAME:     CPC$OPEN_DO
      272        8               PURPOSE:  To OPEN the M$DO dcb.  Use the user's SET information
      273        9                         if possible.
      274       10        */
      275       11        /******************************************************************************/
      276       12        CPC$OPEN_DO: PROC;
      277       13          %INCLUDE CP_6;
      278       94          %INCLUDE CP_6_SUBS;
      279      634          %INCLUDE XU_MACRO_C;
      280     3740          %INCLUDE CP_DATA_R;
      281     6303          %INCLUDE CP_MACROS_C;
      282     7055          %INCLUDE CP_PERR_C;
      283     7393          %INCLUDE CP_SUBS_C;
      284     8310          %INCLUDE NK_VFC_C;
      285     8384        /***** external routines *****/
      286     8385    1     DCL CPC$WRITEMSGE ENTRY(6);
      287     8386    1     DCL CPC$SCREECH ENTRY(2);
      288     8387        /***** variables *****/
      289     8388    1     DCL M$DO DCB;
      290     8389        /***** structures *****/
      291     8390          %FPT_OPEN (FPTN=OPEN_DO_SET, DCB=M$DO, SCRUB=YES, REASSIGN=YES, DVFC=
              8390              %VFC_TRANSITION1, STCLASS=CONSTANT);
      292     8499          %FPT_OPEN (FPTN=OPEN_DO_ME, DCB=M$DO, SCRUB=YES, ASN=DEVICE, RES='ME', DVFC=
              8499              %VFC_TRANSITION1, STCLASS=CONSTANT);
      293     8608          %B$TCB(STCLASS="BASED(B$TCB$)");
      294     8611          %B$ALT;
      295     8619          %F$DCB;
      296     8676        /***** error codes *****/
      297     8677          %ERR_CODE (NAME=E_OPNDO,MID#=CPC$SUBRMID,CODE#=E$OPNDO,STCLASS=CONSTANT);
      298     8697        /*E*    ERROR: CPC-E$GETDO-0
      299     8698                MESSAGE: Unable to open M$DO to SET values, opening to ME instead.
PL6.E3A0      #004=CPC$OPEN_DO File=CPC$SUBR.:E05TSI                             TUE 07/29/97 11:24 Page:65   
      300     8699        */
      301     8700    1     IF DCBADDR(%M$DO#)->F$DCB.FCD# THEN RETURN;
      302     8701
      303     8702    1     CALL M$OPEN (OPEN_DO_SET)
      304     8703    2      WHENALTRETURN DO;
      305     8704    2        CALL M$OPEN (OPEN_DO_ME)
      306     8705    3         WHENRETURN DO;
      307     8706    3           CALL CPC$WRITEMSGE (B$TCB.ALT$->B$ALT.ERR, B$TCB.ALT$->B$ALT.DCB#,,,,%YES#);
      308     8707    3           CALL CPC$WRITEMSGE (E_OPNDO,,,,,%YES#);
      309     8708    3         END;
      310     8709    3         WHENALTRETURN DO;
      311     8710    3           CALL CPC$SCREECH (E$SUAOPNDO,CPC$SUBRMID);
      312     8711        /*E*    ERROR:   CPC-E$SUAOPNDO-A
      313     8712                MESSAGE:  IBEX ABORT:  Unable to open M$DO to either SET values or ME.
      314     8713                DESCRIPTION: Couldn't open M$DO to report an error, probably a bad WSN.
      315     8714        */
      316     8715    3         END;
      317     8716    2      END;
      318     8717    1     RETURN;
      319     8718
      320     8719    1   END CPC$OPEN_DO;

PL6.E3A0      #004=CPC$OPEN_DO File=CPC$SUBR.:E05TSI                             TUE 07/29/97 11:24 Page:66   
--  Include file information  --

   NK_VFC_C.:E05TOU  is referenced.
   CP_SUBS_C.:E05TOU  is referenced.
   CP_PERR_C.:E05TOU  is referenced.
   CP_MACROS_C.:E05TOU  is referenced.
   CP_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure CPC$OPEN_DO.

   Procedure CPC$OPEN_DO requires 53 words for executable code.
   Procedure CPC$OPEN_DO requires 10 words of local(AUTO) storage.

    No errors detected in file CPC$SUBR.:E05TSI    .

PL6.E3A0      #004=CPC$OPEN_DO File=CPC$SUBR.:E05TSI                             TUE 07/29/97 11:24 Page:67   

 Object Unit name= CPC$OPEN_DO                                File name= CPC$SUBR.:E05TOU
 UTS= JUL 29 '97 11:24:59.76 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1   DCB   even  none     0      0  M$DO
    2  RoData even  UTS    117    165  CPC$OPEN_DO
    3   Proc  even  none    53     65  CPC$OPEN_DO
    4  RoData even  none     7      7  CPC$OPEN_DO

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     3      0   yes            yes      Std        0  CPC$OPEN_DO

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       6 CPC$WRITEMSGE
         yes           Std       2 CPC$SCREECH
                       nStd      0 X66_AUTO_0
                       nStd      0 X66_ARET
                       Std       0 B_CONSPOOL_D
PL6.E3A0      #004=CPC$OPEN_DO File=CPC$SUBR.:E05TSI                             TUE 07/29/97 11:24 Page:68   

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                             r    B$TCB$                                M$DO
     B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID                                 NULLSID                               ROSID
PL6.E3A0      #004=CPC$OPEN_DO File=CPC$SUBR.:E05TSI                             TUE 07/29/97 11:24 Page:69   


      265        1        /*T***********************************************************/
      266        2        /*T*                                                         */
      267        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      268        4        /*T*                                                         */
      269        5        /*T***********************************************************/
      270        6        /******************************************************************************/
      271        7        /*F*   NAME:     CPC$OPEN_DO
      272        8               PURPOSE:  To OPEN the M$DO dcb.  Use the user's SET information
      273        9                         if possible.
      274       10        */
      275       11        /******************************************************************************/
      276       12        CPC$OPEN_DO: PROC;

     12  3 000000   000000 700200 xent  CPC$OPEN_DO  TSX0  ! X66_AUTO_0
         3 000001   000012 000000                    ZERO    10,0

      277       13          %INCLUDE CP_6;
      278       94          %INCLUDE CP_6_SUBS;
      279      634          %INCLUDE XU_MACRO_C;
      280     3740          %INCLUDE CP_DATA_R;
      281     6303          %INCLUDE CP_MACROS_C;
      282     7055          %INCLUDE CP_PERR_C;
      283     7393          %INCLUDE CP_SUBS_C;
      284     8310          %INCLUDE NK_VFC_C;
      285     8384        /***** external routines *****/
      286     8385    1     DCL CPC$WRITEMSGE ENTRY(6);
      287     8386    1     DCL CPC$SCREECH ENTRY(2);
      288     8387        /***** variables *****/
      289     8388    1     DCL M$DO DCB;
      290     8389        /***** structures *****/
      291     8390          %FPT_OPEN (FPTN=OPEN_DO_SET, DCB=M$DO, SCRUB=YES, REASSIGN=YES, DVFC=
              8390              %VFC_TRANSITION1, STCLASS=CONSTANT);
      292     8499          %FPT_OPEN (FPTN=OPEN_DO_ME, DCB=M$DO, SCRUB=YES, ASN=DEVICE, RES='ME', DVFC=
              8499              %VFC_TRANSITION1, STCLASS=CONSTANT);
      293     8608          %B$TCB(STCLASS="BASED(B$TCB$)");
      294     8611          %B$ALT;
PL6.E3A0      #004=CPC$OPEN_DO File=CPC$SUBR.:E05TSI                             TUE 07/29/97 11:24 Page:70   
      295     8619          %F$DCB;
      296     8676        /***** error codes *****/
      297     8677          %ERR_CODE (NAME=E_OPNDO,MID#=CPC$SUBRMID,CODE#=E$OPNDO,STCLASS=CONSTANT);
      298     8697        /*E*    ERROR: CPC-E$GETDO-0
      299     8698                MESSAGE: Unable to open M$DO to SET values, opening to ME instead.
      300     8699        */
      301     8700    1     IF DCBADDR(%M$DO#)->F$DCB.FCD# THEN RETURN;

   8700  3 000002   000000 470400 4                  LDP0    0
         3 000003   000000 471500                    LDP1    0,,PR0
         3 000004   100004 473500                    LDP3    4,,PR1
         3 000005   300031 236100                    LDQ     25,,PR3
         3 000006   020000 316007                    CANQ    8192,DL
         3 000007   000011 600000 3                  TZE     s:8702

   8700  3 000010   000000 702200 xent               TSX2  ! X66_ARET

      302     8701
      303     8702    1     CALL M$OPEN (OPEN_DO_SET)

   8702  3 000011   000000 630400 2                  EPPR0   OPEN_DO_SET
         3 000012   450000 713400                    CLIMB   alt,open
         3 000013   410400 401760                    pmme    nvectors=18
         3 000014   000016 702000 3                  TSX2    s:8704
         3 000015   000064 710000 3                  TRA     s:8717

      304     8703    2      WHENALTRETURN DO;

      305     8704    2        CALL M$OPEN (OPEN_DO_ME)

   8704  3 000016   000072 630400 2                  EPPR0   OPEN_DO_ME
         3 000017   450000 713400                    CLIMB   alt,open
         3 000020   410400 401760                    pmme    nvectors=18
         3 000021   000060 702000 3                  TSX2    s:8710

      306     8705    3         WHENRETURN DO;

PL6.E3A0      #004=CPC$OPEN_DO File=CPC$SUBR.:E05TSI                             TUE 07/29/97 11:24 Page:71   
      307     8706    3          CALL CPC$WRITEMSGE (B$TCB.ALT$->B$ALT.ERR, B$TCB.ALT$->B$ALT.DCB#,,,,%YES#);

   8706  3 000022   000000 470400 xsym               LDP0    B$TCB$
         3 000023   000000 471500                    LDP1    0,,PR0
         3 000024   000001 236000 4                  LDQ     1
         3 000025   000001 235000 xsym               LDA     B_VECTNIL+1
         3 000026   200010 757100                    STAQ    8,,AUTO
         3 000027   000001 236000 xsym               LDQ     B_VECTNIL+1
         3 000030   000001 235000 xsym               LDA     B_VECTNIL+1
         3 000031   200006 757100                    STAQ    6,,AUTO
         3 000032   100101 633500                    EPPR3   65,,PR1
         3 000033   200005 453500                    STP3    5,,AUTO
         3 000034   100102 634500                    EPPR4   66,,PR1
         3 000035   200004 454500                    STP4    4,,AUTO
         3 000036   200004 630500                    EPPR0   4,,AUTO
         3 000037   000024 631400 xsym               EPPR1   B_VECTNIL+20
         3 000040   000000 701000 xent               TSX1    CPC$WRITEMSGE
         3 000041   000000 011000                    NOP     0

      308     8707    3           CALL CPC$WRITEMSGE (E_OPNDO,,,,,%YES#);

   8707  3 000042   000001 236000 4                  LDQ     1
         3 000043   000001 235000 xsym               LDA     B_VECTNIL+1
         3 000044   200010 757100                    STAQ    8,,AUTO
         3 000045   000001 236000 xsym               LDQ     B_VECTNIL+1
         3 000046   000001 235000 xsym               LDA     B_VECTNIL+1
         3 000047   200006 757100                    STAQ    6,,AUTO
         3 000050   000001 236000 xsym               LDQ     B_VECTNIL+1
         3 000051   000002 235000 4                  LDA     2
         3 000052   200004 757100                    STAQ    4,,AUTO
         3 000053   200004 630500                    EPPR0   4,,AUTO
         3 000054   000024 631400 xsym               EPPR1   B_VECTNIL+20
         3 000055   000000 701000 xent               TSX1    CPC$WRITEMSGE
         3 000056   000000 011000                    NOP     0

      309     8708    3         END;

PL6.E3A0      #004=CPC$OPEN_DO File=CPC$SUBR.:E05TSI                             TUE 07/29/97 11:24 Page:72   
   8708  3 000057   000064 710000 3                  TRA     s:8717

      310     8709    3         WHENALTRETURN DO;

      311     8710    3           CALL CPC$SCREECH (E$SUAOPNDO,CPC$SUBRMID);

   8710  3 000060   000005 630400 4                  EPPR0   5
         3 000061   000020 631400 xsym               EPPR1   B_VECTNIL+16
         3 000062   000000 701000 xent               TSX1    CPC$SCREECH
         3 000063   000000 011000                    NOP     0

      312     8711        /*E*    ERROR:   CPC-E$SUAOPNDO-A
      313     8712                MESSAGE:  IBEX ABORT:  Unable to open M$DO to either SET values or ME.
      314     8713                DESCRIPTION: Couldn't open M$DO to report an error, probably a bad WSN.
      315     8714        */
      316     8715    3         END;

      317     8716    2      END;

      318     8717    1     RETURN;

   8717  3 000064   000000 702200 xent               TSX2  ! X66_ARET
      319     8718
      320     8719    1   END CPC$OPEN_DO;

PL6.E3A0      #004=CPC$OPEN_DO File=CPC$SUBR.:E05TSI                             TUE 07/29/97 11:24 Page:73   
--  Include file information  --

   NK_VFC_C.:E05TOU  is referenced.
   CP_SUBS_C.:E05TOU  is referenced.
   CP_PERR_C.:E05TOU  is referenced.
   CP_MACROS_C.:E05TOU  is referenced.
   CP_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure CPC$OPEN_DO.
PL6.E3A0      #004=CPC$OPEN_DO File=CPC$SUBR.:E05TSI                             TUE 07/29/97 11:24 Page:74   

 **** Variables and constants ****

  ****  Section 002 RoData CPC$OPEN_DO

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

   164-0-0/w STRC        r     1 E_OPNDO                   72-0-0/d STRC(2088)  r     1 OPEN_DO_ME
     0-0-0/d STRC(2088)  r     1 OPEN_DO_SET

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 B$TCB$

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(2448)  r     1 B$ALT                      0-0-0/w STRC(144)   r     1 B$TCB
     0-0-0/d ASTR(3528)  r     1 F$DCB                      0-0-0N  NULL        r     1 M$DO


   Procedure CPC$OPEN_DO requires 53 words for executable code.
   Procedure CPC$OPEN_DO requires 10 words of local(AUTO) storage.

    No errors detected in file CPC$SUBR.:E05TSI    .
PL6.E3A0      #004=CPC$OPEN_DO File=CPC$SUBR.:E05TSI                             TUE 07/29/97 11:24 Page:75   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #004=CPC$OPEN_DO File=CPC$SUBR.:E05TSI                             TUE 07/29/97 11:24 Page:76   
          MINI XREF LISTING

B$ALT.CODE
      8613**DCL      8613--REDEF    8614--REDEF    8614--REDEF
B$ALT.DCB#
      8614**DCL      8706<>CALL
B$ALT.ERR
      8614**DCL      8706<>CALL
B$ALT.ERR.ERR#
      8615**DCL      8615--REDEF
B$ALT.EVID
      8614**DCL      8614--REDEF    8614--REDEF
B$TCB.ALT$
      8609**DCL      8706>>CALL     8706>>CALL
B$TCB$
      6238**DCL      8609--IMP-PTR  8706>>CALL     8706>>CALL
CAMR_REC.ACSVEH_
      5275**DCL      5276--REDEF
CAMR_REC.ALTKEYS_
      5281**DCL      5282--REDEF    5282--REDEF
CAMR_REC.HDR_
      5280**DCL      5281--REDEF
CAMR_REC.TAB_
      5279**DCL      5280--REDEF
CAMR_REC.UHL_
      5273**DCL      5274--REDEF    5274--REDEF
CAMR_REC.V.FSN#
      5313**DCL      5313--REDEF    5313--REDEF
CAMR_REC.WSN_
      5279**DCL      5279--REDEF
CFPT_CLOSE.SN_
      4117**DCL      4117--REDEF
CFPT_CLOSE.UTL_
      4118**DCL      4118--REDEF
PL6.E3A0      #004=CPC$OPEN_DO File=CPC$SUBR.:E05TSI                             TUE 07/29/97 11:24 Page:77   
CFPT_CLOSE.V.EXPIRE#
      4132**DCL      4132--REDEF
CFPT_CLOSE.V.TYPE#
      4130**DCL      4130--REDEF
CFPT_CLOSE.V.XTNSIZE#
      4127**DCL      4127--REDEF    4129--REDEF
CFPT_OPEN.ACSVEH_
      4052**DCL      4053--REDEF
CFPT_OPEN.ALTKEYS_
      4058**DCL      4059--REDEF    4059--REDEF
CFPT_OPEN.HDR_
      4057**DCL      4058--REDEF
CFPT_OPEN.TAB_
      4056**DCL      4057--REDEF
CFPT_OPEN.UHL_
      4050**DCL      4051--REDEF    4051--REDEF
CFPT_OPEN.V.FSN#
      4090**DCL      4090--REDEF    4090--REDEF
CFPT_OPEN.WSN_
      4056**DCL      4056--REDEF
CFPT_READ.STATION_
      4156**DCL      4157--REDEF
CFPT_READ.V.DVBYTE.REREAD#
      4168**DCL      4168--REDEF
CFPT_READ.V.INDX#
      4166**DCL      4166--REDEF
CFPT_READUC.STATION_
      4526**DCL      4527--REDEF
CFPT_READUC.V.DVBYTE.REREAD#
      4538**DCL      4538--REDEF
CFPT_READUC.V.INDX#
      4536**DCL      4536--REDEF
CFPT_TRTN.V.IR#
      4762**DCL      4763--REDEF
CFPT_WRITE.STATION_
      4194**DCL      4194--REDEF
PL6.E3A0      #004=CPC$OPEN_DO File=CPC$SUBR.:E05TSI                             TUE 07/29/97 11:24 Page:78   
CFPT_WRITE.V.DVBYTE.VFC#
      4201**DCL      4201--REDEF
CFPT_WRITEUC.STATION_
      4494**DCL      4494--REDEF
CFPT_WRITEUC.V.DVBYTE.VFC#
      4501**DCL      4501--REDEF
CFPT_XXX.V.STEPCC#
      5474**DCL      5474--REDEF
CGETCMD.OUT$
      5495**DCL      5501--REDEF
CPC$SCREECH
      8386**DCL-ENT  8710--CALL
CPC$WRITEMSGE
      8385**DCL-ENT  8706--CALL     8707--CALL
CVLP_TRMCTL.BREAKCOUNT
      5086**DCL      5087--REDEF
CVLP_WINDOW.FWINDOW#
      5182**DCL      5182--REDEF    5183--REDEF
E_OPNDO
      8690**DCL      8707<>CALL
F$DCB.ACTPOS
      8652**DCL      8652--REDEF
F$DCB.ARS#
      8626**DCL      8626--REDEF
F$DCB.ATTR
      8645**DCL      8646--REDEF
F$DCB.BORROW
      8660**DCL      8660--REDEF    8660--REDEF    8660--REDEF
F$DCB.DCBNAME.L
      8674**DCL      8674--IMP-SIZ
F$DCB.EOMCHAR#
      8630**DCL      8630--REDEF
F$DCB.FCD#
      8639**DCL      8700>>IF
F$DCB.FLDID
      8655**DCL      8655--REDEF
PL6.E3A0      #004=CPC$OPEN_DO File=CPC$SUBR.:E05TSI                             TUE 07/29/97 11:24 Page:79   
F$DCB.FORM$
      8649**DCL      8649--REDEF
F$DCB.FSECT
      8665**DCL      8665--REDEF
F$DCB.FSN#
      8642**DCL      8642--REDEF    8642--REDEF    8643--REDEF
F$DCB.HEADER$
      8648**DCL      8648--REDEF
F$DCB.IXTNSIZE#
      8646**DCL      8646--REDEF
F$DCB.LASTSTA$
      8635**DCL      8635--REDEF
F$DCB.LVL
      8661**DCL      8661--REDEF
F$DCB.NAME#.C
      8636**DCL      8636--REDEF
F$DCB.NOEOF
      8658**DCL      8658--REDEF
F$DCB.NRECS#
      8647**DCL      8647--REDEF
F$DCB.NRECX
      8666**DCL      8666--REDEF
F$DCB.OHDR
      8658**DCL      8658--REDEF
F$DCB.ORG#
      8641**DCL      8641--REDEF
F$DCB.PRECNO
      8664**DCL      8664--REDEF
F$DCB.RCSZ
      8670**DCL      8670--REDEF
F$DCB.RES#
      8637**DCL      8637--REDEF
F$DCB.SETX
      8649**DCL      8649--REDEF
F$DCB.TAB$
      8649**DCL      8649--REDEF
PL6.E3A0      #004=CPC$OPEN_DO File=CPC$SUBR.:E05TSI                             TUE 07/29/97 11:24 Page:80   
F$DCB.TDA
      8663**DCL      8664--REDEF
F$DCB.WSN#
      8637**DCL      8637--REDEF
M$OPEN
        22**DCL-ENT  8702--CALL     8704--CALL
OPEN_DO_ME
      8564**DCL      8704<>CALL
OPEN_DO_ME.ACSVEH_
      8566**DCL      8567--REDEF
OPEN_DO_ME.ALTKEYS_
      8572**DCL      8573--REDEF    8573--REDEF
OPEN_DO_ME.HDR_
      8571**DCL      8572--REDEF
OPEN_DO_ME.TAB_
      8570**DCL      8571--REDEF
OPEN_DO_ME.UHL_
      8564**DCL      8565--REDEF    8565--REDEF
OPEN_DO_ME.V
      8573**DCL      8564--DCLINIT
OPEN_DO_ME.V.FSN#
      8604**DCL      8604--REDEF    8604--REDEF
OPEN_DO_ME.WSN_
      8570**DCL      8570--REDEF
OPEN_DO_SET
      8455**DCL      8702<>CALL
OPEN_DO_SET.ACSVEH_
      8457**DCL      8458--REDEF
OPEN_DO_SET.ALTKEYS_
      8463**DCL      8464--REDEF    8464--REDEF
OPEN_DO_SET.HDR_
      8462**DCL      8463--REDEF
OPEN_DO_SET.TAB_
      8461**DCL      8462--REDEF
OPEN_DO_SET.UHL_
      8455**DCL      8456--REDEF    8456--REDEF
PL6.E3A0      #004=CPC$OPEN_DO File=CPC$SUBR.:E05TSI                             TUE 07/29/97 11:24 Page:81   
OPEN_DO_SET.V
      8464**DCL      8455--DCLINIT
OPEN_DO_SET.V.FSN#
      8495**DCL      8495--REDEF    8495--REDEF
OPEN_DO_SET.WSN_
      8461**DCL      8461--REDEF
