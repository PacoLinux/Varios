VERSION E05

 17:00 07/29/97  FILE=FMR$CFUS.:E05TSI                                                                   1    BMAP - B00     
                                         1  *M*     FMR$CFUS    GMAP SUBROUTINES TO ACCESS CFU TABLES
                                         2  *T***********************************************************
                                         3  *T*                                                         *
                                         4  *T* Copyright (c) Bull HN Information Systems Inc., 1997    *
                                         5  *T*                                                         *
                                         6  *T***********************************************************
                                         7  *
                                         8  *P*    NAME:   FMR$CFUS
                                         9  *P*    PURPOSE:  TO LOCK THE CFU AREA AND PERFORM BRIEF FUNCTIONS
                                        10  *P*              SUCH AS 'GET A CFU', 'FREE A CFU', ETC.
                                        11  *P*
                                        12         OUNAME 'FMR$CFUS'
                                        13         ENTDEF  FMR$CFUS
                                        14         ENTDEF  FMR$G8          GET AN 8-WORD CFU BLOCK
                                        15         ENTDEF  FMR$F8          FREE AN 8-WORD CFU BLOCK
                                        16         ENTDEF  FMR$FN          UNLINK THE NAMEX OF A CFU
                                        17         ENTDEF  FMR$Z8          ZAP (ZERO) AN 8-WORD CFU BLOCK
                                        18         ENTDEF  FMR$M8          MOVE AN 8-WORD CFU BLOCK FDA
                                        19         ENTDEF  FMR$ZA          ZAP A CFU BLOCK
                                        20         ENTDEF  FMR$L8          LOCK CFU AREA
                                        21         ENTDEF  FMR$U8          UNLOCK CFU AREA
                                        22         ENTDEF  FMR$GA          GET ACCOUNT CFU BLOCK
                                        23         ENTDEF  FMR$SLIDE       MOVE DATA UP OR DOWN OVERLAPPING.
                                        24         ENTDEF  FMR$UPDGAC      CALC STORAGE INTEGRAL
                                        25         ENTDEF  FMR$ADDGAC      ADD TWO STORAGE INTEGRALS
                                        26         ENTDEF  FMR$FNDSTK      Locate TSTACK for FMB$LOGERR
                                        27         ENTDEF  FMR$SETGIP      Set FM_GIP and enable (if necessary).
                                        28  *
                                        29         ENTREF  X66_AUTO_2      Set up auto frame, 2 args
                                        30         ENTREF  X66_AUTO_0      Set up auto frame, no args
                                        31         ENTREF  X66_ARET        Return
                                        32         ENTREF  X66_AALT        Altreturn
                                        33         ENTREF  SSR$REG         REG USER FOR MASTER CPU
                                        34         ENTREF  SSS$SYSTIME     FIND CURRENT TIME
                                        35         ENTREF  FMS$GARBCOL     GARBAGE COLLECT GETS CFU AREA
                                        36         ENTREF  XUD$UTS_DIFF    GET UTS DIFFERENCE in 1/100th of sec
                                        37  *
 17:00 07/29/97  FILE=FMR$CFUS.:E05TSI                                                                   2    BMAP - B00     
                                        38         SYMREF  B$ISB$          BYPASS CACHE I.S. PTR
                                        39         SYMREF  FM_CFUWAIT      WAIT COUNT
                                        40         SYMREF  FM_CFUWGRB      WAIT COUNT GARBCOL ACTIVE
                                        41         SYMREF  F$CFU$          ADDRESS OF SYSTEM CFU SEGMENT
                                        42         SYMREF  F_CWUSER        CURRENT USER OF CFU AREA
                                        43         SYMREF  F_CWLK          CFU AREA WRITE LOCK
                                        44         SYMREF  FM_GIP          GARBAGE COLLECT IN PROGRESS FLAG
                                        45         SYMREF  S_CUN
                                        46         SYMREF  FM_SRMAX        DISK ADDRESS MASK
                                        47         SYMREF  SC_CFULOCK      SCREECH UNLOCK BUT NOT LOCKED
                                        48         SYMREF  SC_CFUSBAD      SCREECH BAD NAME CHAIN
                                        49         SYMREF  S_PNO           CPU#
                                        50         SYMREF  S_NSCPUA        ACTIVE SLAVE CPUS
                                        51         SYMREF  H_DSMASK          DISABLE MASK
                                        52         SYMREF  H_ENMASK          ENABLE MASK
                                        53         SYMREF  NI$DS           DISABLE COUNT
                                        54         SYMREF  H_GATECNT       FULL SCREECH IF DISABLED
                                        55         SEGREF  SCUSID          SCU SEGID
                                        56         SEGREF  ASLENTSID       ENTRY TO SCREECH

 17:00 07/29/97  FILE=FMR$CFUS.:E05TSI                                                                   3    BMAP - B00     
                                        57         EJECT
                                        58  *
                                        59  LDPTR  MACRO
                                        60         LD#1    #2
                                        61         ENDM    LDPTR
                                        62  *
                                        63  STPTR  MACRO
                                        64         ST#1    #2
                                        65         ENDM    STPTR
                                        66  *
             000000000000               67  X0     EQU     0
             000000000001               68  X1     EQU     1
             000000000002               69  X2     EQU     2
             000000000003               70  X3     EQU     3
             000000000004               71  X4     EQU     4
             000000000005               72  X5     EQU     5
             000000000006               73  X6     EQU     6
             000000000007               74  X7     EQU     7
             000000000004               75  DR4    EQU     4               CONTAINS F$CFU$
                                        76  *
             000000000002               77  AUTO   EQU     2
             000000000001               78  PARAM1 EQU     1
             000000000003               79  PARAM2 EQU     3
             000000000004               80  PARAM3 EQU     4
                                        81  *
                                        82  LDPARAM1 OPSYN LDP1
                                        83  STPARAM1 OPSYN STP1
                                        84  LDPARAM2 OPSYN LDP3
                                        85  STPARAM2 OPSYN STP3
                                        86  LDPARAM3 OPSYN LDP4
                                        87  STPARAM3 OPSYN STP4
                                        88  *
             000000006000               89  ISSID  BOOL    6000
                                        90  *
 0 000000                               91         USE     FMR$CFUS,1
   000000                               92  FMR$CFUS NULL
                                        93  *
 17:00 07/29/97  FILE=FMR$CFUS.:E05TSI                                                                   4    BMAP - B00     
                                        94  *

 17:00 07/29/97  FILE=FMR$CFUS.:E05TSI                                                                   5    BMAP - B00     
                                        95         EJECT
                                        96  *
                                        97  *F*   NAME:             FMR$G8
                                        98  *F*   PURPOSE:          TO GET AN 8-WORD CFU BLOCK
                                        99  *F*
                                       100  *D*   NAME:             FMR$G8
                                       101  *D*   CALL:             CALL FMR$G8(CFU$,CFUX) ALTRET(ADDR);
                                       102  *D*
                                       103  *D*                     WHERE   CFU$ IS A POINTER WHICH WILL BE
                                       104  *D*                             SET TO THE OBTAINED CFU ADDRESS.
                                       105  *D*                             CFUX IS AN SBIN WORD WHICH WILL
                                       106  *D*                             SET TO THE 'WORD INDEX' OF THIS
                                       107  *D*                             CFU ENTRY.
                                       108  *D*
                                       109  *D*   ENVIRONMENT:      THE CFU AREA IS UNLOCKED
                                       110  *D*
                                       111  *D*   DESCRIPTION:      A CFU ENTRY IS DECHAINED FROM THE FREE CFU
                                       112  *D*                     CHAIN. IF NONE ARE AVAILABLE, THE ALTRET
                                       113  *D*                     IS TAKEN.  OTHERWISE THE CFU IS SET ACTIVE,
                                       114  *D*                     THE USE COUNT IS SET TO ONE, NECESSARY
                                       115  *D*                     FIELDS ARE ZEROED, THE AREA IS UNLOCKED,
                                       116  *D*                     AND THE PARAMETERS ARE RETURNED TO THE
                                       117  *D*                     CALLING PROGRAM.
                                       118  *D*
                                       119  *
                                       120  *
                                       121  *
                                       122  *
                                       123  *
          (0)000000000000              124  FMR$G8 EQU     *
   000000    0 00000 4715 00           125         LDPTR   PARAM1,(0,,0)   CFU$
   000001    0 00001 4735 00           126         LDPTR   PARAM2,(1,,0)   CFUX
   000002 (0)000065 7070 00            127         TSX7    SET04           LOCK CFU OR ALTRETURN
   000003  X 000000 4744 00            128         LDP4    F$CFU$
   000004    4 00007 7221 00           129         LXL2    7,,DR4          HEAD OF FREE CFUS
   000005 (0)000044 6000 00            130         TZE     GARBCOL             GARBAGE COLLECTION
                                       131  *
 17:00 07/29/97  FILE=FMR$CFUS.:E05TSI                                                                   6    BMAP - B00     
   000006    4 00007 7241 12           132  GOTIT  LXL4    7,X2,DR4        NEW HEAD (MAYBE ZERO)
   000007    4 00007 4441 00           133         SXL4    7,,DR4
   000010    000000 6230 00            134         EAX3    0               ZERO   TO X3
   000011    4 00007 7431 14           135         STX3    7,X4,DR4        ZERO ITS TAIL (MAYBE TAIL OF CHAIN)
   000012    3 00000 4501 00           136         STZ     0,,PARAM2
   000013    3 00000 4421 00           137         SXL2    0,,PARAM2       STORE CFUX
   000014    1 00000 4545 00           138         STP4    0,,PARAM1       STORE AS CFU$
   000015    1 00000 0421 00           139         ASX2    0,,PARAM1       WITH DISPLACEMENT
   000016    4 00000 4501 12           140         STZ     0,X2,DR4        ZAP FDA
   000017    4 00007 4501 12           141         STZ     7,X2,DR4        LINKS
   000020    4 00003 0541 12           142         AOS     3,X2,DR4        SET USECNT=1, OR "IN USE" FLAG
   000021    4 00002 7231 12           143         LXL3    2,X2,DR4        IF THERE IS A NAMEX, UNLINK IT
   000022 (0)000026 6000 00            144         TZE     NONAME
   000023    000000 6200 11            145         EAX0    0,X1
   000024 (0)000320 7010 00            146         TSX1    FREENAME
   000025    000000 6210 10            147         EAX1    0,X0
   000026    000000 1070 03            148  NONAME CMPX7   0,DU            IF GA, JUST RETURN
   000027    000001 6000 11            149         TZE     1,X1
   000030 (0)000444 7100 00            150         TRA     FMR$U8
                                       151  *
   000031  X 000000 6210 00            152  ALTOTO EAX1    X66_AALT
   000032    2 00005 2271 00           153         LDX7    5,,AUTO
   000033    000000 6000 11            154         TZE     0,X1
   000034    000001 1610 03            155  ALTRET SBX1    1,DU
   000035 (0)000444 7100 00            156         TRA     FMR$U8

 17:00 07/29/97  FILE=FMR$CFUS.:E05TSI                                                                   7    BMAP - B00     
                                       157         EJECT
                                       158  *D*   ENTRY:            FMR$GA
                                       159  *D*   CALL:             CALL FMR$GA(CFU$,CFUX) ALTRET(ADDR);
                                       160  *D*
                                       161  *D*                     WHERE   CFU$ IS A POINTER WHICH WILL BE
                                       162  *D*                             SET TO THE OBTAINED CFU ADDRESS.
                                       163  *D*                             CFUX IS AN SBIN WORD WHICH WILL
                                       164  *D*                             SET TO THE 'WORD INDEX' OF THIS
                                       165  *D*                             CFU ENTRY.
                                       166  *D*
                                       167  *D*   ENVIRONMENT:      THE CFU AREA IS LOCKED
                                       168  *D*
                                       169  *D*   NOTE:      FMR$GA IS IDENTICAL TO FMR$G8 EXCEPT THAT
                                       170  *D*              THE CFU AREA IS ASSUMED TO BE LOCKED PRIOR TO
                                       171  *D*              THE CALL.  THE ACCOUNT BLOCK IS OBTAINED LIKE ANY
                                       172  *D*              OTHER CFU BLOCK.  AN ALTERNATE RETURN MEANS THAT
                                       173  *D*              ALL CFUS ARE BUSY, AND SETS B$JIT.ERR ACCORDINGLY.
                                       174  *
                                       175  *
                                       176  *
          (0)000000000036              177  FMR$GA EQU     *               PARAM1=ACCT$, PARAM2=ACCTX
   000036    0 00000 4715 00           178         LDPTR   PARAM1,(0,,0)   ACCT$
   000037    0 00001 4735 00           179         LDPTR   PARAM2,(1,,0)   ACCTX
   000040    000000 6270 00            180         EAX7    0               SET NO UNLOCK FLAG
   000041  X 000000 4744 00            181         LDP4    F$CFU$
   000042    4 00007 7221 00           182         LXL2    7,,DR4          HEAD OF CHAIN
   000043 (0)000006 6010 00            183         TNZ     GOTIT           ONE IS AVAILABLE
                                       184  *      FALL INTO GARBCOL

 17:00 07/29/97  FILE=FMR$CFUS.:E05TSI                                                                   8    BMAP - B00     
                                       185         EJECT
                                       186  *
                                       187  *     GARBCOL IS AN INTERNAL ROUTINE WHICH CALLS THE GARBAGE COLLECTOR
                                       188  *     TO FREE UP SOME SPACE IN THE CFU SEGMENT.
                                       189  *
          (0)000000000044              190  GARBCOL EQU    *
   000044 (0)000131 1010 03            191         CMPX1   AUTOX,DU        IF WE ALREADY HAVE AUTO, JUST REG
   000045 (0)000052 6000 00            192         TZE     *+5
   000046  X 000000 7000 00            193         TSX0    X66_AUTO_0
   000047    000006 000000             194         ZERO    6,0
   000050    2 00003 4515 00           195         STPTR   PARAM1,(3,,AUTO)
   000051    2 00004 4535 00           196         STPTR   PARAM2,(4,,AUTO)
   000052    2 00005 7471 00           197         STX7    5,,AUTO
   000053  X 000000 7010 00            198         TSX1    FMS$GARBCOL
   000054 (0)000031 7100 00            199         TRA     ALTOTO
   000055    2 00003 4715 00           200         LDPTR   PARAM1,(3,,AUTO)
   000056    2 00004 4735 00           201         LDPTR   PARAM2,(4,,AUTO)
   000057    2 00005 2271 00           202         LDX7    5,,AUTO
   000060 (0)000131 6210 00            203         EAX1    AUTOX           SET RETURN TO UNWIND AUTO
   000061  X 000000 4744 00            204         LDP4    F$CFU$
   000062    4 00007 7221 00           205         LXL2    7,,DR4
   000063 (0)000006 6010 00            206         TNZ     GOTIT
   000064 (0)000437 7010 00            207         TSX1    FMRSCR          FMS$GARBCOL SHOULD HAVE ALTRETURNED.
                                       208  *

 17:00 07/29/97  FILE=FMR$CFUS.:E05TSI                                                                   9    BMAP - B00     
                                       209         EJECT
                                       210  *
                                       211  *     SET04 IS AN INTERNAL ROUTINE WHICH LOADS POINTER REGISTERS
                                       212  *     ZERO AND FOUR AND LOCKS THE CFU AREA.  IF THE AREA IS
                                       213  *     ALREADY LOCKED, SET04 SCHEDULES ITSELF FOR THE MASTER CPU
                                       214  *     TO WAIT FOR GARBAGE COLLECTION TO FINISH.
                                       215  *
          (0)000000000065              216  SET04  EQU     *
                                       217         INHIB   ON
   000065  X 000000 0342 00            218         LDAC    F_CWLK          LOCK CHECKSET
   000066 (0)000133 6012 00            219         TNZ     SET04Z          THAT WAS TOO EASY
   000067  X 000000 4706 00            220         LDP0    B$ISB$          MEBBE WEVE BEEN HERE BEFORE
   000070    0 X 00000 2363 00         221         LDQ     F_CWUSER,,0
   000071    000022 7722 00            222         QRL     18
   000072    000777 3762 07            223         ANQ     =O777,DL
   000073  X 000000 1162 00            224         CMPQ    S_CUN
   000074    000000 6002 17            225         TZE     0,X7            YES.
   000075  X 000000 0542 00            226         AOS     FM_CFUWAIT      COUNT IT UP
   000076    0 X 00000 2363 00         227         LDQ     F_CWUSER,,0
          (0)000000000077              228  LOCKER EQU     *
   000077    0 X 00000 2343 00         229         SZN     FM_GIP,,0       IS GARB COL IN PROGRESS?
   000100 (0)000111 6012 00            230         TNZ     GARBWAIT        YES, REG BEHIND
   000101  X 000000 2142 00            231         SZNC    F_CWLK
   000102 (0)000133 6012 00            232         TNZ     SET04Z
                                       233         INHIB   OFF
   000103    0 X 00000 1161 00         234         CMPQ    F_CWUSER,,0
   000104 (0)000065 6010 00            235         TNZ     SET04           GOT BEATEN
   000105    000004 0350 07            236         ADLA    4,DL
   000106    000001 1150 03            237         CMPA    1,DU
   000107 (0)000077 6040 00            238         TMI     LOCKER
   000110 (0)000110 7100 00            239         TRA     *               THIS IS TAKING TOO LONG
          (0)000000000111              240  GARBWAIT EQU   *
   000111  X 000000 0540 00            241         AOS     FM_CFUWGRB      THIS ONE TOO
   000112 (0)000131 1010 03            242         CMPX1   AUTOX,DU        DO WE HAVE AUTO??
   000113 (0)000121 6000 00            243         TZE     NEWREG          YES
                                       244  *
   000114  X 000000 7000 00            245  GOTOM  TSX0    X66_AUTO_0      SET UP SOME AUTOMATIC
 17:00 07/29/97  FILE=FMR$CFUS.:E05TSI                                                                   10   BMAP - B00     
   000115    000006 000000             246         ZERO    6,0
   000116    2 00003 4515 00           247         STPTR   PARAM1,(3,,AUTO)
   000117    2 00004 4535 00           248         STPTR   PARAM2,(4,,AUTO)
   000120    2 00005 7471 00           249         STX7    5,,AUTO         SAVE RETURN ADDRESS
   000121 (0)000156 6304 00            250  NEWREG EPPR0   MP_PTRS
   000122 (1)000000 6314 00            251         EPPR1   =V18/2,18/0
   000123  X 000000 7010 00            252         TSX1    SSR$REG             GOTO MASTER CPU
   000124    000000 0110 00            253         NOP
                                       254  *
   000125    2 00003 4715 00           255         LDPTR   PARAM1,(3,,AUTO)
   000126    2 00004 4735 00           256         LDPTR   PARAM2,(4,,AUTO)
   000127    2 00005 2271 00           257         LDX7    5,,AUTO
                                       258  *
   000130 (0)000065 7010 00            259         TSX1    SET04           TRY ONE MROE TIME
          (0)000000000131              260  AUTOX  EQU     *
                                       261  *                              BUT SET X1 TO COME BACK TO US
                                       262  *                              SO WE CAN UNWIND THE AUTOMATIC
   000131  X 000000 7100 00            263         TRA     X66_AALT
   000132  X 000000 7100 00            264         TRA     X66_ARET
                                       265  *
          (0)000000000133              266  SET04Z EQU     *
                                       267         INHIB   ON
   000133  X 000000 7222 00            268         LXL2    S_CUN
   000134  X 000000 2352 00            269         LDA     S_NSCPUA        DISABLE IF MASTER OF MULTIPROCESSOR
   000135 (0)000146 6002 00            270         TZE     NODIS
   000136  X 000000 2352 00            271         LDA     S_PNO
   000137 (0)000146 6012 00            272         TNZ     NODIS
   000140  X 000000 0542 00            273         AOS     NI$DS
   000141  X 000000 0542 00            274         AOS     H_GATECNT
   000142  X 000000 4706 07            275         LDP0    SCUSID,DL
   000143  X 000000 2372 00            276         LDAQ    H_DSMASK
   000144    0 00000 5533 00           277         SMCM    0,,0
   000145    400000 2622 03            278         ORX2    =O400000,DU
          (0)000000000146              279  NODIS  EQU     *
                                       280         INHIB   OFF
   000146  X 000000 7420 00            281         STX2    F_CWUSER
   000147    000000 6220 11            282         EAX2    0,X1
 17:00 07/29/97  FILE=FMR$CFUS.:E05TSI                                                                   11   BMAP - B00     
   000150 (0)000131 1020 03            283         CMPX2   AUTOX,DU
   000151 (0)000153 6010 00            284         TNZ     *+2
   000152    2 00000 7221 00           285         LXL2    0,,2
   000153  X 000000 4420 00            286         SXL2    F_CWUSER        SAVE RETURN FOR DEBUGGING
   000154    000000 7100 17            287         TRA     0,X7
                                       288  *
   000155    000000 000044             289  SS_MP  ZERO    0,36            QUEUE BEHIND EVENT
   000156 (0)000155 0 00 6000          290  MP_PTRS PTR    ISSID,SS_MP
   000157  X 000000 1 00 6000          291         PTR     ISSID,F_CWUSER,1
                                       292  *

 17:00 07/29/97  FILE=FMR$CFUS.:E05TSI                                                                   12   BMAP - B00     
                                       293         EJECT
                                       294  *
                                       295  *F*    NAME:      FMR$SETGIP
                                       296  *F*    PURPOSE:   To set the FM_GIP flag and enable interrupts, if
                                       297  *F*               disabled.
                                       298  *
                                       299  *
          (0)000000000160              300  FMR$SETGIP EQU *
   000160  X 000000 0540 00            301         AOS     FM_GIP
   000161  X 000000 2350 00            302         LDA     F_CWUSER        IS THE DISABLED FLAG SET
   000162    000000 6050 11            303         TPL     0,X1            NO.
   000163  X 000000 4704 07            304         LDP0    SCUSID,DL
   000164    400000 6750 03            305         ERA     =O400000,DU     REST THE FLAG
   000165  X 000000 7550 00            306         STA     F_CWUSER
   000166    000001 3360 07            307         LCQ     1,DL
   000167  X 000000 0560 00            308         ASQ     H_GATECNT
   000170  X 000000 0560 00            309         ASQ     NI$DS           TIME TO ENABLE YES?
   000171    000000 6010 11            310         TNZ     0,X1
   000172  X 000000 2370 00            311         LDAQ    H_ENMASK
   000173    0 00000 5531 00           312         SMCM    0,,0
   000174    000000 7100 11            313         TRA     0,X1

 17:00 07/29/97  FILE=FMR$CFUS.:E05TSI                                                                   13   BMAP - B00     
                                       314         EJECT
                                       315  *
                                       316  *F*   NAME:             FMR$F8
                                       317  *F*   PURPOSE:          TO FREE A PRIMARY CFU BLOCK
                                       318  *F*
                                       319  *D*   NAME:             FMR$F8
                                       320  *D*   CALL:             CALL FMR$F8(CFU$);
                                       321  *D*                     WHERE   CFU$ IS A POINTER TO THE CFU BLOCK
                                       322  *D*                             TO BE FREED.
                                       323  *D*
                                       324  *D*   ENVIRONMENT:      THE CFU AREA IS UNLOCKED.
                                       325  *D*
                                       326  *D*   DESCRIPTION:      IF THIS IS A PRIMARY CFU BLOCK, THE USE
                                       327  *D*                     COUNT IS DECREMENTED.  IF NOT YET ZERO
                                       328  *D*                     (I.E. STILL OPEN BY OTHER USERS), THE ALTRET
                                       329  *D*                     IS TAKEN.  OTHERWISE THE CFU IS CHAINED TO
                                       330  *D*                     THE TAIL OF THE FREE CFU CHAIN.
                                       331  *D*
                                       332  *
                                       333  *
                                       334  *
          (0)000000000175              335  FMR$F8 EQU     *
   000175    0 00000 4715 00           336         LDPTR   PARAM1,(0,,0)   CFU$
   000176 (0)000065 7070 00            337         TSX7    SET04           LOCK CFU AREA AND SETUP
   000177 (0)000227 7000 00            338         TSX0    CHKCFU          CHECK FOR VALIDITY
   000200 (0)000444 7100 00            339         TRA     FMR$U8          NO GOOD, THROW IT AWAY
   000201    4 00003 7231 12           340         LXL3    3,X2,DR4
   000202    000001 1630 03            341         SBX3    1,DU            DECR USERS
   000203    4 00003 4431 12           342         SXL3    3,X2,DR4
   000204 (0)000034 6054 00            343         TPNZ    ALTRET          ALTRET IF STILL IN USE
   000205    4 00002 7231 12           344         LXL3    2,X2,DR4        CHAIN AT TAIL IF NO NAME
   000206 (0)000254 6000 00            345         TZE     CONTZ1
                                       346  *
   000207    4 00000 2351 12           347         LDA     0,X2,DR4        OR IF NO FDA
   000210  X 000000 3750 00            348         ANA     FM_SRMAX
   000211 (0)000254 6000 00            349         TZE     CONTZ1          BUT CHECK FOR NAMEX TO UNLINK
   000212    4 00000 7551 12           350         STA     0,X2,DR4        CLEAR FUN
 17:00 07/29/97  FILE=FMR$CFUS.:E05TSI                                                                   14   BMAP - B00     
                                       351  *
   000213    4 00001 4501 12           352         STZ     1,X2,DR4
   000214    4 00003 4501 12           353         STZ     3,X2,DR4
   000215    4 00004 4501 12           354         STZ     4,X2,DR4
   000216    4 00005 4501 12           355         STZ     5,X2,DR4
   000217    4 00006 4501 12           356         STZ     6,X2,DR4
   000220    4 00007 2231 00           357         LDX3    7,,DR4          PRESENT TAIL
   000221    4 00007 7421 00           358         STX2    7,,DR4          NEW ONE
   000222    4 00007 4421 13           359         SXL2    7,X3,DR4        WE'RE ITS FLINK
   000223    4 00007 7431 12           360         STX3    7,X2,DR4        IT'S OUR BLINK
   000224    000000 6230 00            361         EAX3    0               OUR FLINK IS ZERO
   000225    4 00007 4431 12           362         SXL3    7,X2,DR4
   000226 (0)000444 7100 00            363         TRA     FMR$U8          RETURN
                                       364  *
   000227    1 00000 2351 00           365  CHKCFU LDA     0,,PARAM1       CHECK FOR ZERO
   000230  X 000000 1350 00            366         SBLA    F$CFU$
   000231    000000 6220 01            367         EAX2    0,AU            PUT OFFSET IN X2
   000232    000017 7350 00            368         ALS     15              CHECK FOR 8-WD BOUND, PROPER SEGID,
   000233 (0)000244 6020 00            369         TNC     CFUSCR          AND ZERO OFFSET.
   000234 (0)000244 6010 00            370         TNZ     CFUSCR
   000235  X 000000 4744 00            371         LDP4    F$CFU$
   000236 (0)000317 1000 03            372         CMPX0   FNCHK,DU        FN IS CALLED WITH FREE CFUS TOO
   000237 (0)000242 6000 00            373         TZE     *+3
   000240    4 00003 2341 12           374         SZN     3,X2,DR4        IS THIS CFU IN USE
   000241 (0)000244 6000 00            375         TZE     CFUSCR          NO. DONT RELEASE IT AGAIN
   000242    4 00002 1021 00           376         CMPX2   2,,DR4          CHECK NOT IN NAMES
   000243    000001 6020 10            377         TNC     1,X0            OR OUT OF SEGMENT
   000244  X 000000 7134 00            378  CFUSCR ENTER   ASLENTSID,0,SC_CFUSBAD
   000245    0 000 000 60 X 0000
   000246    000000 7100 10            379         TRA     0,X0
                                       380  *

 17:00 07/29/97  FILE=FMR$CFUS.:E05TSI                                                                   15   BMAP - B00     
                                       381         EJECT
                                       382  *
                                       383  *F*   NAME:             FMR$Z8
                                       384  *F*   PURPOSE:          TO FREE (ZAP) A NON-PRIMARY CFU BLOCK
                                       385  *F*
                                       386  *F*
                                       387  *D*   NAME:             FMR$Z8
                                       388  *D*   CALL:             CALL FMR$Z8(CFU$);
                                       389  *D*
                                       390  *D*                     WHERE   CFU$ IS A POINTER TO THE CFU BLOCK
                                       391  *D*                             TO BE FREED.
                                       392  *D*
                                       393  *D*   ENVIRONMENT:      THE CFU AREA IS UNLOCKED.
                                       394  *D*
                                       395  *D*   DESCRIPTION:      THE CFU AREA IS LOCKED, THEN THE CFU IS
                                       396  *D*                     ZEROED AND PLACED AT THE HEAD OF THE CFU
                                       397  *D*                     FREE CHAIN.  FMR$Z8 IS USED TO RETURN A
                                       398  *D*                     CFU BLOCK IN WHICH THE NAMEX/ACCTX WORD
                                       399  *D*                     IS NOT MEANINGFUL (I.E. THIS CFU DOES NOT
                                       400  *D*                     CONTAIN THE DEFINITION OF A FILE).
                                       401  *D*
                                       402  *
                                       403  *
                                       404  *
          (0)000000000247              405  FMR$Z8 EQU     *
   000247    0 00000 4715 00           406         LDPTR   PARAM1,(0,,0)   CFU$
   000250 (0)000065 7070 00            407         TSX7    SET04           LOCK CFU AREA AND SETUP
          (0)000000000251              408  CONTZ  EQU     *
   000251 (0)000227 7000 00            409         TSX0    CHKCFU          GET/CHECK CFU ADDRESS
   000252 (0)000271 7100 00            410         TRA     ZEXIT           THROW AWAY IF BAD
   000253    4 00002 4501 12           411         STZ     2,X2,DR4        ZAP THE NAMEX
          (0)000000000254              412  CONTZ1 EQU     *
   000254    4 00000 4501 12           413         STZ     0,X2,DR4        ZAP CFU SPACE
   000255    4 00001 4501 12           414         STZ     1,X2,DR4
   000256    4 00003 4501 12           415         STZ     3,X2,DR4
   000257    4 00004 4501 12           416         STZ     4,X2,DR4
   000260    4 00005 4501 12           417         STZ     5,X2,DR4
 17:00 07/29/97  FILE=FMR$CFUS.:E05TSI                                                                   16   BMAP - B00     
   000261    4 00006 4501 12           418         STZ     6,X2,DR4
   000262    4 00007 7231 00           419         LXL3    7,,DR4          CHAIN AT HEAD
   000263    4 00007 4431 12           420         SXL3    7,X2,DR4        HEAD IS OUR FLINK
   000264    4 00007 4421 00           421         SXL2    7,,DR4          WERE NEW HEAD
   000265    4 00007 7421 13           422         STX2    7,X3,DR4        WERE ITS BLIONK
   000266    000000 6230 00            423         EAX3    0               OUR BLINK IS ZERO
   000267    4 00007 7431 12           424         STX3    7,X2,DR4
   000270    4 00002 7431 12           425         STX3    2,X2,DR4        CLEAR ACCTX
          (0)000000000271              426  ZEXIT  EQU     *
   000271    000000 1070 03            427         CMPX7   0,DU            DO WE UNLOCK
   000272    000001 6000 11            428         TZE     1,X1            NO
   000273 (0)000444 7100 00            429         TRA     FMR$U8          YES
                                       430  *
                                       431  *
                                       432  *D*   ENTRY:            FMR$ZA
                                       433  *D*   CALL:             CALL FMR$ZA(CFU$);
                                       434  *D*
                                       435  *D*                     WHERE   CFU$ IS A POINTER TO THE CFU BLOCK
                                       436  *D*                             TO BE FREED.
                                       437  *D*
                                       438  *D*   ENVIRONMENT:      THE CFU AREA IS LOCKED.
                                       439  *D*
                                       440  *
                                       441  *
                                       442  *
          (0)000000000274              443  FMR$ZA EQU     *
   000274    0 00000 4715 00           444         LDPTR   PARAM1,(0,,0)   CFU$
   000275    000000 6270 00            445         EAX7    0               DONT UNLOCK AFTER RELEASE
   000276 (0)000251 7100 00            446         TRA     CONTZ
                                       447  *

 17:00 07/29/97  FILE=FMR$CFUS.:E05TSI                                                                   17   BMAP - B00     
                                       448         EJECT
                                       449  *
                                       450  *F*   NAME:             FMR$M8
                                       451  *F*    PURPOSE: To reuse an inactive CFU, thus saving a search
                                       452  *F*            of the file directory.
                                       453  *F*
                                       454  *D*   NAME:             FMR$M8
                                       455  *D*   CALL:             CALL FMR$M8(OLD$,NEW$);
                                       456  *D*
                                       457  *D*                     WHERE   OLD$ IS A POINTER TO THE INACTIVE
                                       458  *D*                             CFU BLOCK.
                                       459  *D*                             NEW$ IS A POINTER TO THE ACTIVE
                                       460  *D*                             CFU BLOCK.
                                       461  *D*
                                       462  *D*   ENVIRONMENT:      THE CFU AREA MUST BE LOCKED PRIOR TO CALLING
                                       463  *D*                     FMR$M8.
                                       464  *D*
                                       465  *D*    DESCRIPTION: The information in the new CFU is merged into
                                       466  *D*            the old one (FUN, SHARE, etc.), which is then unchained.
                                       467  *D*
                                       468  *
                                       469  *
                                       470  *
          (0)000000000277              471  FMR$M8 EQU     *
   000277    0 00000 4715 00           472         LDPTR   PARAM1,(0,,0)   SOURCE$
   000300    0 00001 4735 00           473         LDPTR   PARAM2,(1,,0)   DESTINATION$
   000301  X 000000 4744 00            474         LDP4    F$CFU$
   000302    3 00000 2221 00           475         LDX2    0,,PARAM2       NEW CFU (TO BE RELEASED)
   000303  X 000000 1220 00            476         SBLX2   F$CFU$          CONVERT TO OFFSET
   000304    1 00000 4715 00           477         LDPTR   PARAM1,(0,,PARAM1) POINTER TO OLD ONE
   000305    1 00007 2231 00           478         LDX3    7,,PARAM1       DECHAIN THE OLD ONE
   000306    1 00007 7241 00           479         LXL4    7,,PARAM1
   000307    4 00007 7431 14           480         STX3    7,X4,DR4
   000310    4 00007 4441 13           481         SXL4    7,X3,DR4
   000311    4 00000 2351 12           482         LDA     0,X2,DR4        GET FLAGS...
   000312    1 00000 5511 40           483         STBA    0,40,PARAM1     STORE IN OLD CFU
   000313    1 00007 4501 00           484         STZ     7,,PARAM1
 17:00 07/29/97  FILE=FMR$CFUS.:E05TSI                                                                   18   BMAP - B00     
   000314    000001 7100 11            485         TRA     1,X1

 17:00 07/29/97  FILE=FMR$CFUS.:E05TSI                                                                   19   BMAP - B00     
                                       486         EJECT
                                       487  *F*    NAME:   FMR$FN
                                       488  *F*    PURPOSE: To remove a CFU from its name chain.
                                       489  *D*    NAME:   FMR$FN
                                       490  *D*    CALL:   CALL FMR$FN(CFU$);
                                       491  *D*            Where CFU$ points to the CFU to dechain.
                                       492  *D*    DESCRIPTION: The name chain is followed around to the name,
                                       493  *D*            then back to CFU$, which is then linked out. If CFU$ was
                                       494  *D*            the only one in the chain and the name is last in the names,
                                       495  *D*            the name is released by backing up the name pointer.
                                       496  *D*    ENVIRONMENT: The CFU area is locked and remains so.
                                       497  *
          (0)000000000315              498  FMR$FN EQU     *
   000315    0 00000 4715 00           499         LDPTR   PARAM1,(0,,0)
   000316 (0)000227 7000 00            500         TSX0    CHKCFU          IS IT A GOOD ONE
          (0)000000000317              501  FNCHK  EQU     *
   000317    000000 7100 11            502         TRA     0,X1            NO, IGNORE IT
          (0)000000000320              503  FREENAME EQU   *               ENTRY FOR G8/GA
   000320    4 00002 7231 12           504         LXL3    2,X2,DR4        IS THERE A NAMEX
   000321 (0)000373 6000 00            505         TZE     FNRET           NO, JUST ZAP ACCNAM
   000322    000000 6230 12            506         EAX3    0,X2
   000323    4 00002 2351 00           507         LDA     2,,DR4          CFU COUNT
   000324    000007 3030 03            508  FLNK1  CANX3   7,DU
   000325 (0)000437 6010 00            509         TNZ     FMRSCR          BAD CFU
   000326    4 00002 7231 13           510         LXL3    2,X3,DR4        FLINK TO THE NAME POINTER
   000327 (0)000437 6000 00            511         TZE     FMRSCR
   000330    000010 1750 03            512         SBA     8,DU
   000331 (0)000437 6044 00            513         TMOZ    FMRSCR
   000332    4 00002 1031 00           514         CMPX3   2,,DR4          CHECK IF IN CFUS OR NAMES
   000333 (0)000324 6020 00            515         TNC     FLNK1           IN CFUS
   000334    000000 6360 13            516         EAQ     0,X3            SAVE NAME POINTER
   000335    000002 7720 00            517         QRL     2               AS WD DISP
   000336    777777 2760 07            518         ORQ     =O777777,DL     MAKE THE COMPARE RIGHT
   000337    4 00002 1161 00           519         CMPQ    2,,DR4
   000340 (0)000437 6020 00            520         TNC     FMRSCR
   000341    4 00003 1031 00           521         CMPX3   3,,DR4          MAKE SURE ITS IN NAMES TOO
   000342 (0)000437 6030 00            522         TRC     FMRSCR
 17:00 07/29/97  FILE=FMR$CFUS.:E05TSI                                                                   20   BMAP - B00     
   000343    4 00000 2351 02           523         LDA     0,QU,DR4
   000344    4 00001 2361 02           524         LDQ     1,QU,DR4
   000345    000000 6240 13            525         EAX4    0,X3
   000346    000003 3640 03            526         ANX4    3,DU
   000347 (0)000375 7160 14            527         XEC     SHIFT,X4
   000350    777777 3750 07            528         ANA     =O777777,DL     CHAIN HEAD
   000351    000033 7720 00            529         QRL     27              NAME COUNT
   000352    000000 6250 05            530         EAX5    0,AL
   000353    1 00000 1051 00           531         CMPX5   0,,PARAM1       ARE WE THE HEAD
   000354 (0)000401 6000 00            532         TZE     WEHEAD          YES
   000355    4 00002 2351 00           533         LDA     2,,DR4          CFU COUNT
   000356    000000 6240 15            534  FLNK2  EAX4    0,X5
   000357 (0)000437 6044 00            535         TMOZ    FMRSCR
   000360    000007 3040 07            536         CANX4   7,DL
   000361 (0)000437 6010 00            537         TNZ     FMRSCR
   000362    000010 1750 03            538         SBA     8,DU
   000363 (0)000437 6044 00            539         TMOZ    FMRSCR
   000364    4 00002 1041 00           540         CMPX4   2,,DR4          IS IT A CFUX OR NAMEX
   000365 (0)000437 6030 00            541         TRC     FMRSCR
   000366    4 00002 7251 14           542         LXL5    2,X4,DR4
   000367    1 00000 1051 00           543         CMPX5   0,,PARAM1       IS IT US
   000370 (0)000356 6010 00            544         TNZ     FLNK2
   000371    4 00002 7251 12           545         LXL5    2,X2,DR4        OUR FLINK TO IT
   000372    4 00002 4451 14           546         SXL5    2,X4,DR4
   000373    4 00002 4501 12           547  FNRET  STZ     2,X2,DR4        CLEAR OUR NAME
   000374    000000 7100 11            548         TRA     0,X1
   000375    000022 7730 00            549  SHIFT  LRL     18
   000376    000011 7730 00            550         LRL     9
   000377    000000 0110 00            551         NOP     0
   000400    000011 7370 00            552         LLS     9
                                       553  *
          (0)000000000401              554  WEHEAD EQU     *
   000401    4 00002 7251 12           555         LXL5    2,X2,DR4        OUR FLINK
   000402    4 00002 1051 00           556         CMPX5   2,,DR4          IS IT THE TAIL
   000403 (0)000414 6020 00            557         TNC     WEDONE
   000404    000000 5330 00            558         NEGL    0               YES, IS THE NAME LAST (-NAME.L)
   000405    000003 1360 07            559         SBLQ    3,DL            -SIZE OF NAME ENTRY
 17:00 07/29/97  FILE=FMR$CFUS.:E05TSI                                                                   21   BMAP - B00     
   000406    4 00002 0361 00           560         ADLQ    2,,DR4          +NAMEX
   000407    4 00002 6761 12           561         ERQ     2,X2,DR4        IF OUR NAME PTR, CANCEL IT
   000410    777777 3160 07            562         CANQ    =O777777,DL
   000411 (0)000414 6010 00            563         TNZ     WEDONE          NO, JUST PUT OUR FLINK IN NAME
   000412    4 00002 4431 00           564         SXL3    2,,DR4          YES, BACK UP NAMEX TO OURS
   000413 (0)000373 7100 00            565         TRA     FNRET
                                       566  *
          (0)000000000414              567  WEDONE EQU     *
   000414    000000 6360 13            568         EAQ     0,X3
   000415    000002 7720 00            569         QRL     2
   000416    000000 6350 15            570         EAA     0,X5            PREPARE TO STORE 2 CHARS
   000417    4 00000 6305 02           571         EPPR0   0,QU,DR4
   000420 (0)000423 7160 14            572         XEC     SHIFT2,X4       X4 STILL LOADED
   000421 (0)000427 7160 14            573         XEC     STCS,X4
   000422 (0)000373 7100 00            574         TRA     FNRET
                                       575  *
   000423    000000 0110 00            576  SHIFT2 NOP     0
   000424    000011 7710 00            577         ARL     9
   000425    000022 7710 00            578         ARL     18
   000426    000011 7750 00            579         ALR     9
   000427    0 00000 5511 60           580  STCS   STBA    0,60,0
   000430    0 00000 5511 30           581         STBA    0,30,0
   000431    0 00000 5511 14           582         STBA    0,14,0
   000432 (0)000433 7100 00            583         TRA     *+1
   000433    0 00000 5511 04           584         STBA    0,4,0
   000434    0 00001 5075 00           585         AWD     1,,0
   000435    0 00000 5511 40           586         STBA    0,40,0
   000436 (0)000373 7100 00            587         TRA     FNRET
                                       588  *
   000437  X 000000 7134 00            589  FMRSCR ENTER   ASLENTSID,0,SC_CFUSBAD
   000440    0 000 000 60 X 0000
                                       590  *S*    SCREECH_CODE: FMR-S$CFUSBAD
                                       591  *S*    TYPE: SNAP
                                       592  *S*    MESSAGE: There is a bad name chain in the cfus
   000441 (0)000373 7100 00            593         TRA     FNRET           GET OUT
                                       594  *

 17:00 07/29/97  FILE=FMR$CFUS.:E05TSI                                                                   22   BMAP - B00     
                                       595         EJECT
                                       596  *
                                       597  *F*   NAME:             FMR$L8
                                       598  *F*   PURPOSE:          TO LOCK THE CFU AREA
                                       599  *F*
                                       600  *D*   NAME:             FMR$L8
                                       601  *D*   CALL:             CALL FMR$L8;
                                       602  *D*   DESCRIPTION:      THE LOAD AND CLEAR LOCK IS SET ON THE CFU
                                       603  *D*                     AREA.  GARBAGE COLLECT IN PROGRESS IS ALSO
                                       604  *D*                     SET SO THAT CFU ACCESSES WILL BE SEQUENCED
                                       605  *D*                     THROUGH THE MASTER CPU.
                                       606  *D*
                                       607  *
                                       608  *
          (0)000000000442              609  FMR$L8 EQU     *
   000442 (0)000065 7070 00            610         TSX7    SET04           LOCK CFU AREA
   000443    000001 7100 11            611         TRA     1,X1            RETURN
                                       612  *

 17:00 07/29/97  FILE=FMR$CFUS.:E05TSI                                                                   23   BMAP - B00     
                                       613         EJECT
                                       614  *
                                       615  *F*   NAME:             FMR$U8
                                       616  *F*   PURPOSE:          TO UNLOCK THE CFU AREA.
                                       617  *F*
                                       618  *D*   NAME:             FMR$U8
                                       619  *D*   CALL:             CALL FMR$U8;
                                       620  *D*   DESCRIPTION:      THE GARBAGE COLLECT IN PROGRESS FLAG IS RESET,
                                       621  *D*                     AND THE CFU AREA IS UNLOCKED.
                                       622  *D*
                                       623  *
                                       624  *
          (0)000000000444              625  FMR$U8 EQU     *
   000444  X 000000 2360 00            626         LDQ     F_CWUSER        CHECK THAT WE LOCKED THE GATE
   000445    000022 7720 00            627         QRL     18
   000446    000777 3760 07            628         ANQ     511,DL
   000447  X 000000 1160 00            629         CMPQ    S_CUN
   000450 (0)000467 6010 00            630         TNZ     FMRSCR1
   000451  X 000000 2350 00            631         LDA     F_CWLK
   000452 (0)000467 6010 00            632         TNZ     FMRSCR1
   000453  X 000000 0340 00            633         LDAC    FM_GIP          TURN OFF GARBAGE COLLECTION
   000454  X 000000 0340 00            634         LDAC    F_CWUSER
   000455  X 000000 7500 00            635         STC2    F_CWLK          UNLOCK THEM
   000456    000001 6050 11            636         TPL     1,X1            NO ENABLE REQ'D
   000457    000001 3360 07            637         LCQ     1,DL
   000460  X 000000 0560 00            638         ASQ     H_GATECNT
   000461  X 000000 0560 00            639         ASQ     NI$DS
   000462    000001 6010 11            640         TNZ     1,X1
   000463  X 000000 4704 07            641         LDP0    SCUSID,DL
   000464  X 000000 2370 00            642         LDAQ    H_ENMASK
   000465    0 00000 5531 00           643         SMCM    0,,0
   000466    000001 7100 11            644         TRA     1,X1            RETURN
                                       645  *
   000467  X 000000 7134 00            646  FMRSCR1 ENTER  ASLENTSID,0,SC_CFULOCK
   000470    0 000 000 60 X 0000
                                       647  *S*    SCREECH_CODE: FMR-S$CFULOCK
                                       648  *S*    TYPE: SNAP
 17:00 07/29/97  FILE=FMR$CFUS.:E05TSI                                                                   24   BMAP - B00     
                                       649  *S*    MESSAGE: Attempt to unlock CFUS, but not locked by this user
   000471    000001 7100 11            650         TRA     1,X1

 17:00 07/29/97  FILE=FMR$CFUS.:E05TSI                                                                   25   BMAP - B00     
                                       651           EJECT
                                       652  *F*      NAME:    FMR$SLIDE
                                       653  *F*      PURPOSE: Use MLR or MRL instruction to move large pieces
                                       654  *F*               of data to an overlapping position.
                                       655  *D*      NAME:    FMR$SLIDE
                                       656  *D*      CALL:    CALL FMR$SLIDE(DATA$,DISP,SIZE);
                                       657  *D*      DESCRIPTION: DATA$ points to the data as follows:
                                       658  *D*               DISP and SIZE are in words. SIZE words of data are moved
                                       659  *D*               between DATA$ and PINCRW(DATA$,ABS(DISP)). If DISP is
                                       660  *D*               negative, MLR moves it to DATA$. If DISP is positive,
                                       661  *D*               MRL moves it from DATA$.
                                       662  *D*      ENVIRONMENT: The MRL instruction fails under the same conditions
                                       663  *D*               that bit-string instructions fail (non-DALIGNED DR).
                                       664  *D*
   000472                              665  FMR$SLIDE NULL
   000472    0 00000 4715 00           666         LDP1    0,,0            PTR TO DATA
   000473    0 00001 4735 00           667         LDP3    1,,0            DIRECTION/DISP
   000474    0 00002 4745 00           668         LDP4    2,,0            SIZE
                                       669  *
   000475    1 00000 4715 00           670         LDPARAM1 0,,PARAM1      POINT TO THE DATA TO BE MOVED
   000476    4 00000 2361 00           671         LDQ     0,,PARAM3       SIZE (WDS) IN Q
   000477    3 00000 2351 00           672         LDA     0,,PARAM2       DISP (WDS) IN A
   000500    000002 7370 00            673         LLS     2               TO BYTES
   000501 (0)000506 6040 00            674         TMI     SLIDE1          SQUEEZE OPERATION, USE MLR
   000502    000 0 145 1015 40         675         MRL     (1,1,,),(1,1,,AL)
   000503    1 00000 0 0 0 0006        676         ADSC9   ,,QL,PARAM1
   000504    1 00000 0 0 0 0006        677         ADSC9   ,,QL,PARAM1
   000505    000001 7100 11            678         TRA     1,X1
                                       679  *
   000506    000000 5310 00            680  SLIDE1 NEG     0               COMPLEMENT DISPLACEMENT
   000507    000 0 140 1005 45         681         MLR     (1,1,,AL),(1,1,,)
   000510    1 00000 0 0 0 0006        682         ADSC9   ,,QL,PARAM1
   000511    1 00000 0 0 0 0006        683         ADSC9   ,,QL,PARAM1
   000512    000001 7100 11            684         TRA     1,X1

 17:00 07/29/97  FILE=FMR$CFUS.:E05TSI                                                                   26   BMAP - B00     
                                       685         EJECT
                                       686  *F*    NAME:   FMR$UPDGAC
                                       687  *F*    PURPOSE:  Calculate storage integral for GAC
                                       688  *
                                       689  *D*    NAME:   FMR$UPDGAC
                                       690  *,*    CALL:   CALL FMR$UPDGAC(BUCKET,GRANS);
                                       691  *,*    INPUT:  BUCKET - Two word item.  First is current storage
                                       692  *,*                     integral, second is time of last update
                                       693  *,*                     of integral
                                       694  *,*            GRANS - Current size of file
                                       695  *,*    DESCRIPTION:  Performs the operation:
                                       696  *,*            BUCKET(0) = BUCKET(0) +
                                       697  *,*               FLOAT(CURRENT_TIME - BUCKET(1)) * FLOAT(GRANS) )
                                       698  *
                                       699  *
             000000000003              700  BUCKET EQU     3
             000000000004              701  NGRANS EQU     4
             000000000005              702  TMP    EQU     5
             000000000006              703  UTSDIF EQU     6
             000000000007              704  ARGPTR1  EQU     7
             000000000010              705  ARGPTR2  EQU     8
             000000000011              706  ARGPTR3  EQU     9
                                       707  *
   000513                              708  FMR$UPDGAC NULL
   000513  X 000000 7000 00            709         TSX0    X66_AUTO_2
   000514    000012 000002             710         ZERO    10,2
                                       711  *
   000515    2 00005 6305 00           712         EPPR0   TMP,,2
   000516    2 00007 4505 00           713         STP0    ARGPTR1,,2
   000517    2 00007 6305 00           714         EPPR0   ARGPTR1,,2
   000520 (0)000561 6314 00            715         EPPR1   DESCL1
   000521  X 000000 7010 00            716         TSX1    SSS$SYSTIME
   000522    000000 0110 00            717         NOP     0
                                       718  *
   000523    2 00003 4715 00           719         LDP1    BUCKET,,AUTO    GET PTR TO BUCKET
   000524    1 00001 6305 00           720         EPPR0   1,,1            BUCKET(1) passed as 3rd arg
   000525    2 00011 4505 00           721         STP0    ARGPTR3,,AUTO
 17:00 07/29/97  FILE=FMR$CFUS.:E05TSI                                                                   27   BMAP - B00     
   000526    2 00005 6305 00           722         EPPR0   TMP,,AUTO       CURRENT TIME is 2nd arg
   000527    2 00010 4505 00           723         STP0    ARGPTR2,,AUTO
   000530    2 00006 6305 00           724         EPPR0   UTSDIF,,AUTO    RESULTS TO 1st arg, UTSDIF
   000531    2 00007 4505 00           725         STP0    ARGPTR1,,AUTO
   000532    2 00007 6305 00           726         EPPR0   ARGPTR1,,AUTO
   000533 (0)000562 6314 00            727         EPPR1   DESCL3
   000534  X 000000 7010 00            728         TSX1    XUD$UTS_DIFF    CURRENT TIME - BUCKET(1) -> UTSDIF
   000535    000000 0110 00            729         NOP     0
                                       730  *
   000536    2 00005 2361 00           731         LDQ     TMP,,AUTO
   000537    2 00003 4715 00           732         LDP1    BUCKET,,AUTO
   000540    1 00001 7561 00           733         STQ     1,,1            UPDATE BUCKET.TIME
   000541    2 00006 2351 00           734         LDA     UTSDIF,,AUTO    CURRENT TIME - BUCKET(1)
   000542    004010 6340 07            735         LDI     =O4010,DL       SET HEX FLOATING PT.
   000543 (0)000554 7000 00            736         TSX0    FLOAT           CONVERT TO FLOATING-POINT
   000544    2 00005 4701 00           737         FSTR    TMP,,AUTO       SAVE RESULT
                                       738  *
   000545    2 00004 4735 00           739         LDP3    NGRANS,,AUTO
   000546    3 00000 2351 00           740         LDA     0,,3            # GRANULES
   000547 (0)000554 7000 00            741         TSX0    FLOAT           CONVERT
                                       742  *
   000550    2 00005 4611 00           743         FMP     TMP,,AUTO       GRANS * TIME
   000551    1 00000 4751 00           744         FAD     0,,1            + BUCKET(0)
   000552    1 00000 4701 00           745         FSTR    0,,1            STORE RESULT
                                       746  *
   000553  X 000000 7100 00            747         TRA     X66_ARET
                                       748  *
                                       749  *
   000554    000000 2360 07            750  FLOAT  LDQ     0,DL            CONVERT BINARY TO FLOATING POINT
   000555    000001 7330 00            751         LRS     1
   000556    022000 4110 03            752         LDE     9*1024,DU
   000557    400000 4750 03            753         FAD     =O400000,DU
   000560    000000 7100 10            754         TRA     0,X0
                                       755  *
                                       756  *
   000561    000001 000000             757  DESCL1  VFD     18/1,18/0
   000562    000003 000000             758  DESCL3  VFD     18/3,18/0

 17:00 07/29/97  FILE=FMR$CFUS.:E05TSI                                                                   28   BMAP - B00     
                                       759         EJECT
                                       760  *F*    NAME:   FMR$ADDGAC
                                       761  *F*    PURPOSE:  Add two storage integrals together
                                       762  *
                                       763  *D*    NAME:   FMR$ADDGAC
                                       764  *,*    CALL:   CALL FMR$ADDGAC(F1,F2);
                                       765  *,*    INPUT:  F1 and F2 are the two floating-point numbers
                                       766  *,*            to be added together
                                       767  *,*    OUTPUT: F1 is the result
                                       768  *,*    DESCRIPTION:  F1 = F1 + F2
                                       769  *
                                       770  *
   000563                              771  FMR$ADDGAC NULL
   000563    0 00000 4715 00           772         LDPTR   PARAM1,(0,,0)   F1
   000564    0 00001 4735 00           773         LDPTR   PARAM2,(1,,0)   F2
                                       774  *
   000565    004010 6340 07            775         LDI     =O4010,DL
   000566    1 00000 4311 00           776         FLD     0,,1
   000567    3 00000 4751 00           777         FAD     0,,3
   000570    1 00000 4701 00           778         FSTR    0,,1
   000571    000001 7100 11            779         TRA     1,X1

 17:00 07/29/97  FILE=FMR$CFUS.:E05TSI                                                                   29   BMAP - B00     
                                       780           EJECT
                                       781  *F*      NAME:     FMR$FNDSTK
                                       782  *,*      PURPOSE:  To generate pointers to the base and current
                                       783  *,*                frame of TSTACK
                                       784  *
                                       785  *D*      NAME:     FMR$FNDSTK
                                       786  *,*      CALL:     CALL FMR$FNDSTK(BASE$,CUR$);
                                       787  *,*      OUTPUT:   BASE$ - Ptr to base of TSTACK
                                       788  *,*                CUR$ - Ptr to current (caller's) auto frame
                                       789  *
                                       790  *
   000572                              791  FMR$FNDSTK NULL
                                       792  *
   000572    0 00000 4715 00           793           LDPTR     PARAM1,(0,,0)
   000573    0 00001 4735 00           794           LDPTR     PARAM2,(1,,0)
                                       795  *
   000574    2 00000 6345 00           796           EPPR4     0,,2
   000575    3 00000 4545 00           797           STP4      0,,PARAM2
   000576    4 00000 5274 00           798           SWDX      0,,4
   000577    1 00000 4545 00           799           STP4      0,,PARAM1
                                       800  *
   000600    000001 7100 11            801           TRA       1,1
                                       802  *
                                       803         END
 1 000000    000002000000

  CONTROL SECTION TABLE

   0 CODE   EVEN  000601 FMR$CFUS
   1 RODATA EVEN  000001 LITERALS

 17:00 07/29/97  FILE=FMR$CFUS.:E05TSI        SYMBOL TABLE                                               30   BMAP - B00     
 01101000 000000000031 ALTOTO        *152       199
 01101000 000000000034 ALTRET        *155       343
 41000000 000000000007 ARGPTR1       *704       713       714       725       726
 41000000 000000000010 ARGPTR2       *705       723
 41000000 000000000011 ARGPTR3       *706       721
 03601001 000000000000 ASLENTSID      *56       378       589       646
 41000000 000000000002 AUTO           *77       153       195       196       197       200       201
                                      202       247       248       249       255       256       257
                                      719       721       722       723       724       725       726
                                      731       732       734       737       739       743
 41101000 000000000131 AUTOX          191       203       242      *260       283
 03301000 000000000000 B$ISB$         *38       220
 41000000 000000000003 BUCKET        *700       719       732
 01101000 000000000244 CFUSCR         369       370       375      *378
 01101000 000000000227 CHKCFU         338      *365       409       500
 41101000 000000000251 CONTZ         *408       446
 41101000 000000000254 CONTZ1         345       349      *412
 01101000 000000000561 DESCL1         715      *757
 01101000 000000000562 DESCL3         727      *758
 41000000 000000000004 DR4            *75       129       132       133       135       140       141
                                      142       143       182       205       340       342       344
                                      347       350       352       353       354       355       356
                                      357       358       359       360       362       374       376
                                      411       413       414       415       416       417       418
                                      419       420       421       422       424       425       480
                                      481       482       504       507       510       514       519
                                      521       523       524       533       540       542       545
                                      546       547       555       556       560       561       564
                                      571
 03301003 000000000000 F$CFU$         *41       128       181       204       366       371       474
                                      476
 01101000 000000000324 FLNK1         *508       515
 01101000 000000000356 FLNK2         *534       544
 01101000 000000000554 FLOAT          736       741      *750
 12101000 000000000563 FMR$ADDGAC      25      *771
 12101000 000000000000 FMR$CFUS        13       *92
 52101000 000000000175 FMR$F8          15      *335
 17:00 07/29/97  FILE=FMR$CFUS.:E05TSI        SYMBOL TABLE                                               31   BMAP - B00     
 52101000 000000000315 FMR$FN          16      *498
 12101000 000000000572 FMR$FNDSTK      26      *791
 52101000 000000000000 FMR$G8          14      *124
 52101000 000000000036 FMR$GA          22      *177
 52101000 000000000442 FMR$L8          20      *609
 52101000 000000000277 FMR$M8          18      *471
 52101000 000000000160 FMR$SETGIP      27      *300
 12101000 000000000472 FMR$SLIDE       23      *665
 53101000 000000000444 FMR$U8          21       150       156       339       363       429      *625
 12101000 000000000513 FMR$UPDGAC      24      *708
 52101000 000000000247 FMR$Z8          17      *405
 52101000 000000000274 FMR$ZA          19      *443
 01101000 000000000437 FMRSCR         207       509       511       513       520       522       535
                                      537       539       541      *589
 01101000 000000000467 FMRSCR1        630       632      *646
 03201006 000000000000 FMS$GARBCOL    *35       198
 03301001 000000000000 FM_CFUWAIT     *39       226
 03301002 000000000000 FM_CFUWGRB     *40       241
 03301006 000000000000 FM_GIP         *44       229       301       633
 03301008 000000000000 FM_SRMAX       *46       348
 41101000 000000000317 FNCHK          372      *501
 01101000 000000000373 FNRET          505      *547       565       574       587       593
 41101000 000000000320 FREENAME       146      *503
 03301005 000000000000 F_CWLK         *43       218       231       631       635
 03301004 000000000000 F_CWUSER       *42       221       227       234       281       286       291
                                      302       306       626       634
 41101000 000000000044 GARBCOL        130      *190
 41101000 000000000111 GARBWAIT       230      *240
 01101000 000000000006 GOTIT         *132       183       206
 00101000 000000000114 GOTOM         *245
 03301013 000000000000 H_DSMASK       *51       276
 03301014 000000000000 H_ENMASK       *52       311       642
 03301016 000000000000 H_GATECNT      *54       274       308       638
 41000000 000000006000 ISSID          *89       290       291
 41101000 000000000077 LOCKER        *228       238
 01101000 000000000156 MP_PTRS        250      *290
 01101000 000000000121 NEWREG         243      *250
 17:00 07/29/97  FILE=FMR$CFUS.:E05TSI        SYMBOL TABLE                                               32   BMAP - B00     
 41000000 000000000004 NGRANS        *701       739
 03301015 000000000000 NI$DS          *53       273       309       639
 41101000 000000000146 NODIS          270       272      *279
 01101000 000000000026 NONAME         144      *148
 41000000 000000000001 PARAM1         *78       138       139       365       477       478       479
                                      483       484       531       543       670       676       677
                                      682       683       799
 41000000 000000000003 PARAM2         *79       136       137       475       672       797
 41000000 000000000004 PARAM3         *80       671
 03601000 000000000000 SCUSID         *55       275       304       641
 03301009 000000000000 SC_CFULOCK     *47       646
 03301010 000000000000 SC_CFUSBAD     *48       378       589
 41101000 000000000065 SET04          127      *216       235       259       337       407       610
 41101000 000000000133 SET04Z         219       232      *266
 01101000 000000000375 SHIFT          527      *549
 01101000 000000000423 SHIFT2         572      *576
 01101000 000000000506 SLIDE1         674      *680
 03201004 000000000000 SSR$REG        *33       252
 03201005 000000000000 SSS$SYSTIME    *34       716
 01101000 000000000155 SS_MP         *289       290
 01101000 000000000427 STCS           573      *580
 03301007 000000000000 S_CUN          *45       224       268       629
 03301012 000000000000 S_NSCPUA       *50       269
 03301011 000000000000 S_PNO          *49       271
 41000000 000000000005 TMP           *702       712       722       731       737       743
 41000000 000000000006 UTSDIF        *703       724       734
 41101000 000000000414 WEDONE         557       563      *567
 41101000 000000000401 WEHEAD         532      *554
 40000000 000000000000 X0             *67
 40000000 000000000001 X1             *68
 40000000 000000000002 X2             *69
 40000000 000000000003 X3             *70
 40000000 000000000004 X4             *71
 40000000 000000000005 X5             *72
 40000000 000000000006 X6             *73
 03201003 000000000000 X66_AALT       *32       152       263
 03201002 000000000000 X66_ARET       *31       264       747
 17:00 07/29/97  FILE=FMR$CFUS.:E05TSI        SYMBOL TABLE                                               33   BMAP - B00     
 03201001 000000000000 X66_AUTO_0     *30       193       245
 03201000 000000000000 X66_AUTO_2     *29       709
 40000000 000000000007 X7             *74
 03201007 000000000000 XUD$UTS_DIFF   *36       728
 41101000 000000000271 ZEXIT          410      *426

      99 SYMBOLS

 17:00 07/29/97  FILE=FMR$CFUS.:E05TSI        MACRO TABLE                                                34   BMAP - B00     
 LDPTR          125       126       178       179       200       201       255       256       336
                406       444       472       473       477       499       772       773       793
                794
 STPTR          195       196       247       248

       2 MACROS

    SYMBOL SPACE USED  1562 WORDS
     MACRO SPACE USED    31 WORDS
   INPUT RECORDS READ  1606
 STATEMENTS PROCESSED   607
         ELAPSED TIME  0:19.80
             CPU TIME     5.23 SEC.
        ASSEMBLY RATE  6964 STATEMENTS/CPU MIN.

      NO ERRORS

