VERSION E05

PL6.E3A0      #001=VXP$TREE File=VXP$TREE.:E05TSI                                WED 07/30/97 08:33 Page:1    
        1        1        /*M* VXP$TREE - builds the node tree.    */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* DMR,PLM=6,IND=4,CSU=2,EXM=0,ECU=2,MOC,DCI=4,CRT=4,CTI=8,CCC   */
        8        8        VXP$TREE:
        9        9              PROC( HEAD$, TAIL$, TYPE, SUB_TYPE, NODE$, FILE$, LEVEL1_P$ );
       10       10        %INCLUDE VX_INC_C;
       11    10726        %INCLUDE VX_PSUBS_C;
       12    10904        %PARSE$OUT( NAME=O$B, STCLASS="BASED");
       13    10949        %VX$NODE;

             10961    1   /*******************************************************************************
             10962    1   *                                                                              *
             10963    1   *                          VX$NODE                                                 *
             10964    1   *                                                                              *
             10965    1   *******************************************************************************/

             10981    1   DCL 1 VX$NODE      ALIGNED    BASED,
             10982    1         2 SON$ PTR /*(ADDR(NIL))*/, /* Son pointer                      */
             10983    1         2 BROTHER$ PTR /*(ADDR(NIL))*/, /* Brother pointer              */
             10984    1         2 FATHER$ PTR /*(ADDR(NIL))*/, /* Father pointer                */
             10985    1         2 PATH$ PTR /*(ADDR(NIL))*/, /* Path   pointer                  */
             10986    1         2 HEAD$       PTR /*(ADDR(NIL))*/, /* Head pointer to
             10987                              to list of file nodes for this node            */
             10988    1         2 TAIL$ PTR /*(ADDR(NIL))*/, /* Tail pointer to list            */
             10989    1         2 SHARED_LIB_HEAD$ PTR /*(ADDR(NIL))*/,
             10989                  /* Head pointer to shared library list */
             10990    1         2 LIB_HEAD$         PTR /*(ADDR(NIL))*/,
             10990                  /* Head pointer to list of shared libraries
             10991                                          which have been mapped to included libraries */
             10992    1         2 NUM          UBIN(36)  UNAL,    /* Node number                        */
             10993    1         2 DEPTH          UBIN(36)  UNAL,  /* Depth; ROOT=0*/
             10994    1         2 ADDR_START_A(0:2/*@ROS*/) SBIN WORD /*(0*3)*/, /* Array            */
             10995    1         2 ADDR_START REDEF  ADDR_START_A,
PL6.E3A0      #001=VXP$TREE File=VXP$TREE.:E05TSI                                WED 07/30/97 08:33 Page:2    
             10996    1           3 RDATA       SBIN WORD,   /* First address for this node in data     */
             10997    1           3 RPROC       SBIN WORD,   /* First address for this node in proc     */
             10998    1           3 ROS       SBIN WORD,          /* Last address for program in ros    */
             10999    1         2 ADDR_STOP_A(0:2/*@ROS*/) SBIN WORD /*(-1*3)*/, /* Array            */
             11000    1         2 ADDR_STOP  REDEF  ADDR_STOP_A,
             11001    1           3 RDATA       SBIN WORD,        /* Last address for this node in data */
             11002    1           3 RPROC       SBIN WORD,        /* Last address for this node in proc */
             11003    1           3 ROS       SBIN WORD,          /* Last address for program in ros    */
             11004    1         2 START_PAGE#_A(0:2/*@ROS*/) SBIN WORD /*(0*3)*/, /* Array           */
             11005    1         2 START_PAGE# REDEF START_PAGE#_A,
             11006    1           3 RDATA       SBIN WORD,   /* First page    for this node in data     */
             11007    1           3 RPROC       SBIN WORD,   /* First page    for this node in proc     */
             11008    1           3 ROS       SBIN WORD,          /* First page   for program in ros    */
             11009    1         2 STOP_PAGE#_A(0:2/*@ROS*/) SBIN WORD /*(-1*3)*/, /* Array*/
             11010    1         2 STOP_PAGE#  REDEF STOP_PAGE#_A,
             11011    1           3 RDATA       SBIN WORD,   /* Last  page    for this node in data     */
             11012    1           3 RPROC       SBIN WORD,   /* Last  page    for this node in proc     */
             11013    1           3 ROS       SBIN WORD,          /* Last  page   for program in ros    */
             11014    1         2 START_SC_ALL$ PTR /*(ADDR(NIL))*/,
             11014                  /* Starting pointer for common sections for this node */
             11015    1         2 STOP_SC_ALL$ PTR /*(ADDR(NIL))*/,
             11015                  /* Stopping pointer for common sections for this node */
             11016    1         2 L_START,
             11017    1           3 SN$ PTR /*(ADDR(NIL))*/, /* Segment definition names        */
             11018    1           3 DN$ PTR /*(ADDR(NIL))*/, /* Def names                       */
             11019    1           3 RN$ PTR /*(ADDR(NIL))*/, /* Ref names                       */
             11020    1           3 SC$ PTR /*(ADDR(NIL))*/, /* Sections                        */
             11021    1           3 ED$ PTR /*(ADDR(NIL))*/, /* Entry defs*/
             11022    1           3 ER$ PTR /*(ADDR(NIL))*/, /* Entry refs*/
             11023    1           3 DD$ PTR /*(ADDR(NIL))*/, /* Data defs                       */
             11024    1           3 DR$ PTR /*(ADDR(NIL))*/, /* Data refs                       */
             11025    1           3 SD$ PTR /*(ADDR(NIL))*/, /* Seg defs                        */
             11026    1           3 SR$ PTR /*(ADDR(NIL))*/, /* Seg refs                        */
             11027    1         2 L_START_A$(0:9)     REDEF L_START PTR,
             11028    1         2 L_STOP,
             11029    1           3 SN$ PTR /*(ADDR(NIL))*/, /* Segment definition names        */
             11030    1           3 DN$ PTR /*(ADDR(NIL))*/, /* Def names                       */
PL6.E3A0      #001=VXP$TREE File=VXP$TREE.:E05TSI                                WED 07/30/97 08:33 Page:3    
             11031    1           3 RN$ PTR /*(ADDR(NIL))*/, /* Ref names                       */
             11032    1           3 SC$ PTR /*(ADDR(NIL))*/, /* Sections                        */
             11033    1           3 ED$ PTR /*(ADDR(NIL))*/, /* Entry defs*/
             11034    1           3 ER$ PTR /*(ADDR(NIL))*/, /* Entry refs*/
             11035    1           3 DD$ PTR /*(ADDR(NIL))*/, /* Data defs                       */
             11036    1           3 DR$ PTR /*(ADDR(NIL))*/, /* Data refs                       */
             11037    1           3 SD$ PTR /*(ADDR(NIL))*/, /* Seg defs                        */
             11038    1           3 SR$ PTR /*(ADDR(NIL))*/, /* Seg refs                        */
             11039    1         2 L_STOP_A$(0:9) REDEF   L_STOP    PTR,
             11040    1         2 L_SIZE,
             11041    1           3 SN      UBIN /*(0)*/, /* Segment definition names           */
             11042    1           3 DN      UBIN /*(0)*/, /* Def names                          */
             11043    1           3 RN      UBIN /*(0)*/, /* Ref names                          */
             11044    1           3 SC      UBIN /*(0)*/, /* Sections                           */
             11045    1           3 ED      UBIN /*(0)*/, /* Entry defs*/
             11046    1           3 ER      UBIN /*(0)*/, /* Entry refs*/
             11047    1           3 DD      UBIN /*(0)*/, /* Data defs                          */
             11048    1           3 DR      UBIN /*(0)*/, /* Data refs                          */
             11049    1           3 SD      UBIN /*(0)*/, /* Seg defs                           */
             11050    1           3 SR      UBIN /*(0)*/, /* Seg refs                           */
             11051    1         2 L_SIZE_A(0:9)  REDEF   L_SIZE    UBIN,
             11052    1         2 L_PREV_SIZE,
             11053    1           3 SN      UBIN /*(0)*/, /* Segment definition names           */
             11054    1           3 DN      UBIN /*(0)*/, /* Def names                          */
             11055    1           3 RN      UBIN /*(0)*/, /* Ref names                          */
             11056    1           3 SC      UBIN /*(0)*/, /* Sections                           */
             11057    1           3 ED      UBIN /*(0)*/, /* Entry defs*/
             11058    1           3 ER      UBIN /*(0)*/, /* Entry refs*/
             11059    1           3 DD      UBIN /*(0)*/, /* Data defs                          */
             11060    1           3 DR      UBIN /*(0)*/, /* Data refs                          */
             11061    1           3 SD      UBIN /*(0)*/, /* Seg defs                           */
             11062    1           3 SR      UBIN /*(0)*/, /* Seg refs                           */
             11063    1         2 L_PREV_SIZE_A(0:9)  REDEF   L_PREV_SIZE    UBIN,
             11064    1         2 BIT_MAP                ALIGNED,
             11065    1           3 DATA                  ALIGNED,
             11066    1             4 BITS(0:255)          BIT(1)    UNAL /*('0'B*256)*/,
             11067    1           3 RPROC                 ALIGNED,
PL6.E3A0      #001=VXP$TREE File=VXP$TREE.:E05TSI                                WED 07/30/97 08:33 Page:4    
             11068    1             4 BITS(0:255)          BIT(1)    UNAL /*('0'B*256)*/,
             11069    1           3 ROS                   ALIGNED,
             11070    1             4 BITS(0:255)          BIT(1)    UNAL /*('0'B*256)*/,
             11071    1         2 L_SC_START,
             11072    1           3 SC_BLK_COM$ PTR /*(ADDR(NIL))*/, /* Blank common            */
             11073    1           3 SC_ROOT_LBL_COM$ PTR /*(ADDR(NIL))*/, /* Root labelled common */
             11074    1           3 SC_LBL_COM$ PTR /*(ADDR(NIL))*/, /* Labelled common         */
             11075    1           3 SC_DCB$ PTR /*(ADDR(NIL))*/, /* Dcbs                        */
             11076    1         2 L_SC_START_A$(0:3)  REDEF L_SC_START PTR,
             11077    1         2 L_SC_STOP,
             11078    1           3 SC_BLK_COM$ PTR /*(ADDR(NIL))*/, /* Blank common            */
             11079    1           3 SC_ROOT_LBL_COM$ PTR /*(ADDR(NIL))*/, /* Root labelled common */
             11080    1           3 SC_LBL_COM$ PTR /*(ADDR(NIL))*/, /* Labelled common         */
             11081    1           3 SC_DCB$ PTR /*(ADDR(NIL))*/, /* Dcbs                        */
             11082    1         2 L_SC_STOP_A$(0:3)   REDEF L_SC_STOP  PTR,
             11083    1         2 PROMOTE_HEAD,
             11084    1           3 BLK_COM$              PTR /*(ADDR(NIL))*/,
             11085    1           3 LBL_COM$              PTR /*(ADDR(NIL))*/,
             11086    1         2 PROMOTE_HEAD_A$(0:1) REDEF PROMOTE_HEAD     PTR,
             11087    1         2 PROMOTE_TAIL,
             11088    1           3 BLK_COM$              PTR /*(ADDR(NIL))*/,
             11089    1           3 LBL_COM$              PTR /*(ADDR(NIL))*/,
             11090    1         2 PROMOTE_TAIL_A$(0:1) REDEF PROMOTE_TAIL     PTR,
             11091    1         2 HAVE_ASL          BIT(1)    UNAL /*('0'B)*/,
             11092    1         2 ALL_BLK_COM          BIT(1)    UNAL /*('0'B)*/,
             11093    1         2 USE_NODE          BIT(1)    UNAL /*('0'B)*/,
             11094    1         2 *                 BIT(33)   UNAL /*('0'B)*/,
             11095    1         2 BLANK_COMMON$     PTR       ALIGNED /*(ADDR(NIL))*/;

       14    11099        %SET LISTMAC='1'B;
       15    11100        %SET LISTSUB='1'B;
       16    11101        %SET LISTEXP='1'B;
       17    11102        %SET LISTDIR='0'B;

             11111    1   /*******************************************************************************
             11112    1   *                                                                              *
             11113    1   *                          PARAMETERS                                              *
PL6.E3A0      #001=VXP$TREE File=VXP$TREE.:E05TSI                                WED 07/30/97 08:33 Page:5    
             11114    1   *                                                                              *
             11115    1   *******************************************************************************/

       19    11119    1   DCL HEAD$           PTR;            /* Head pointer of major list to return */
       20    11120    1   DCL TAIL$           PTR;            /* Tail pointer of major list to return */
       21    11121    1   DCL TYPE            UBIN(36) ALIGNED;   /* Major type of list element */
       22    11122    1   DCL SUB_TYPE        UBIN(36) ALIGNED;   /* Minor type of list sub-element */
       23    11123    1   DCL NODE$           PTR ALIGNED;    /* Direct ancestor for this SUB_STRUCTURE */
       24    11124    1   DCL FILE$          PTR ALIGNED; /* Addr(nil) or direct ancestor/cobol in file */
       25    11125    1   DCL LEVEL1_P$       PTR;

             11134    1   /*******************************************************************************
             11135    1   *                                                                              *
             11136    1   *                          PTR                                                 *
             11137    1   *                                                                              *
             11138    1   *******************************************************************************/

       27    11142    1   DCL CURR$           PTR  ALIGNED   AUTO;
       28    11143    1   DCL LEVEL1$         PTR;
       29    11144    1   DCL LEVEL2$         PTR  ALIGNED   AUTO;
       30    11145    1   DCL NEXT$           PTR ALIGNED    AUTO;

             11154    1   /*******************************************************************************
             11155    1   *                                                                              *
             11156    1   *                          UBIN                                                 *
             11157    1   *                                                                              *
             11158    1   *******************************************************************************/

             11163    1   DCL I          UBIN(36) ALIGNED AUTO;
             11164    1   DCL SI REDEF I SBIN WORD ALIGNED;
             11165    1   DCL J          UBIN(36) ALIGNED AUTO;
             11166    1   DCL SJ REDEF J SBIN WORD ALIGNED;
             11167    1   DCL K          UBIN(36) ALIGNED AUTO;
             11168    1   DCL SK REDEF K SBIN WORD ALIGNED;
             11169    1   DCL L          UBIN(36) ALIGNED AUTO;
             11170    1   DCL SL REDEF L    SBIN WORD ALIGNED;
       33    11172    1   DCL KON_STOP        UBIN(36) ALIGNED    AUTO;
PL6.E3A0      #001=VXP$TREE File=VXP$TREE.:E05TSI                                WED 07/30/97 08:33 Page:6    
       34    11173    1   DCL CTEMP           UBIN(36) ALIGNED    AUTO;
       35    11174    1   DCL OPT_CODE        UBIN(36) ALIGNED    AUTO;
       36    11175    1   DCL OPTION_LIST_INCLUDED     UBIN       SYMREF;

             11184    1   /*******************************************************************************
             11185    1   *                                                                              *
             11186    1   *                          ENTRY                                                 *
             11187    1   *                                                                              *
             11188    1   *******************************************************************************/

       38    11192    1   DCL VXD$FLST        ENTRY(6);
       39    11193    1   DCL VXA$ND          ENTRY(2);

PL6.E3A0      #001=VXP$TREE File=VXP$TREE.:E05TSI                                WED 07/30/97 08:33 Page:7    
       42    11196    1         CURR$ = NODE$;
       43    11197    1         LEVEL1$ = LEVEL1_P$;              /* Move parms into locals */
       44    11198    1         CALL VXD$FLST( HEAD$,
       45    11199    1                 TAIL$,
       46    11200    1                 LEVEL1$ -> O$B.SUBLK$(0) ,
       47    11201    1                 TYPE,
       48    11202    1                 SUB_TYPE,
       49    11203    1                 FILE$ );                  /* Do the root */
       50    11204    1         IF VX_OVERLAY_START$ = VX_ROOT$ THEN
       51    11205    1             VX_OVERLAY_START$ = HEAD$;
       52    11206    2         IF LEVEL1$ -> O$B.NSUBLKS > 1 THEN DO;
       53    11207    2             IF NOT VX_IN_OVERLAY THEN VX_OVERLAY_START$ = CURR$;
       54    11208    2             VX_IN_OVERLAY = '1'B;
       55    11209    2             KON_STOP = LEVEL1$ -> O$B.NSUBLKS - 1;
       56    11210    2             OPT_CODE = LEVEL1$ -> O$B.SUBLK$ (KON_STOP) -> O$B.CODE;
       57    11211    3             IF (OPT_CODE = 5) THEN DO;
       58    11212    3                 KON_STOP = KON_STOP - 1;
       59    11213    3                 OPTION_LIST_INCLUDED = 1/*@YES*/;
       60    11214    3                END;
       61    11215    3             DO L = 1 TO KON_STOP;
       62    11216    3                 LEVEL2$ = LEVEL1$ -> O$B.SUBLK$(L);
       63    11217    4                 IF CURR$ -> VX$NODE.SON$ = ADDR(NIL) THEN DO;
       64    11218    4                     CALL VXA$ND( NEXT$, CURR$ );
       65    11219    4                     CURR$ -> VX$NODE.SON$ = NEXT$; /* Set up links */
       66    11220    4                    END;
       67    11221    4                 ELSE DO;                  /* Already there */
       68    11222    4                     CALL VXA$ND( NEXT$->VX$NODE.BROTHER$, CURR$ );
       69    11223    4                     NEXT$ = NEXT$ -> VX$NODE.BROTHER$;
       70    11224    4                    END;
       71    11225    3                 CALL VXP$TREE( NEXT$ -> VX$NODE.HEAD$,
       72    11226    3                         NEXT$ -> VX$NODE.TAIL$,
       73    11227    3                         TYPE ,
       74    11228    3                         SUB_TYPE ,
       75    11229    3                         NEXT$ ,
       76    11230    3                         FILE$ ,
       77    11231    3                         LEVEL2$ );
       78    11232    3                END;
PL6.E3A0      #001=VXP$TREE File=VXP$TREE.:E05TSI                                WED 07/30/97 08:33 Page:8    
       79    11233    2            END;
       80    11234    1   END VXP$TREE;

PL6.E3A0      #001=VXP$TREE File=VXP$TREE.:E05TSI                                WED 07/30/97 08:33 Page:9    
--  Include file information  --

   VX_PSUBS_C.:E05TOU  is referenced.
   F_DCB_D.:E05TOU  is referenced.
   VX_DCB_R.:E05TOU  cannot be made into a system file and is referenced.
   VX_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   VX_FIXED_R.:E05TOU  cannot be made into a system file and is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   VX_MACRO_C.:E05TOU  is referenced.
   VX_PERR_C.:E05TOU  is referenced.
   VX_SUBS_C.:E05TOU  is referenced.
   VX_SWITCH_C.:E05TOU  is referenced.
   B$OBJECT_C.:E05TOU  is referenced.
   VX_INC_C.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure VXP$TREE.

   Procedure VXP$TREE requires 115 words for executable code.
   Procedure VXP$TREE requires 30 words of local(AUTO) storage.

    No errors detected in file VXP$TREE.:E05TSI    .

PL6.E3A0      #001=VXP$TREE File=VXP$TREE.:E05TSI                                WED 07/30/97 08:33 Page:10   

 Object Unit name= VXP$TREE                                   File name= VXP$TREE.:E05TOU
 UTS= JUL 30 '97 08:33:36.00 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1  LblCom even  none    96    140  VX_CONST_DCB
    2   Proc  even  none   115    163  VXP$TREE

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     2      0   yes            yes      Std        7  VXP$TREE

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       6 VXD$FLST
         yes           Std       2 VXA$ND
                       nStd      0 X66_AUTO_N
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET
PL6.E3A0      #001=VXP$TREE File=VXP$TREE.:E05TSI                                WED 07/30/97 08:33 Page:11   

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                                  VX_OU_HEAD                            VX_OVERLAY_START$
     VX_IN_OVERLAY                         VX_ROOT$                              VX_ERRORS
     OPTION_LIST_INCLUDED                  B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     NULLSID
PL6.E3A0      #001=VXP$TREE File=VXP$TREE.:E05TSI                                WED 07/30/97 08:33 Page:12   


        1        1        /*M* VXP$TREE - builds the node tree.    */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* DMR,PLM=6,IND=4,CSU=2,EXM=0,ECU=2,MOC,DCI=4,CRT=4,CTI=8,CCC   */
        8        8        VXP$TREE:
        9        9              PROC( HEAD$, TAIL$, TYPE, SUB_TYPE, NODE$, FILE$, LEVEL1_P$ );

      9  2 000000   000000 700200 xent  VXP$TREE     TSX0  ! X66_AUTO_N
         2 000001   000036 000007                    ZERO    30,7

       10       10        %INCLUDE VX_INC_C;
       11    10726        %INCLUDE VX_PSUBS_C;
       12    10904        %PARSE$OUT( NAME=O$B, STCLASS="BASED");
       13    10949        %VX$NODE;

             10961    1   /*******************************************************************************
             10962    1   *                                                                              *
             10963    1   *                          VX$NODE                                                *
             10964    1   *                                                                              *
             10965    1   *******************************************************************************/

             10981    1   DCL 1 VX$NODE      ALIGNED    BASED,
             10982    1         2 SON$ PTR /*(ADDR(NIL))*/, /* Son pointer                      */
             10983    1         2 BROTHER$ PTR /*(ADDR(NIL))*/, /* Brother pointer              */
             10984    1         2 FATHER$ PTR /*(ADDR(NIL))*/, /* Father pointer                */
             10985    1         2 PATH$ PTR /*(ADDR(NIL))*/, /* Path   pointer                  */
             10986    1         2 HEAD$       PTR /*(ADDR(NIL))*/, /* Head pointer to
             10987                              to list of file nodes for this node            */
             10988    1         2 TAIL$ PTR /*(ADDR(NIL))*/, /* Tail pointer to list            */
             10989    1         2 SHARED_LIB_HEAD$ PTR /*(ADDR(NIL))*/,
             10989                  /* Head pointer to shared library list */
             10990    1         2 LIB_HEAD$         PTR /*(ADDR(NIL))*/,
             10990                  /* Head pointer to list of shared libraries
PL6.E3A0      #001=VXP$TREE File=VXP$TREE.:E05TSI                                WED 07/30/97 08:33 Page:13   
             10991                                          which have been mapped to included libraries */
             10992    1         2 NUM          UBIN(36)  UNAL,    /* Node number                        */
             10993    1         2 DEPTH          UBIN(36)  UNAL,  /* Depth; ROOT=0*/
             10994    1         2 ADDR_START_A(0:2/*@ROS*/) SBIN WORD /*(0*3)*/, /* Array            */
             10995    1         2 ADDR_START REDEF  ADDR_START_A,
             10996    1           3 RDATA       SBIN WORD,   /* First address for this node in data     */
             10997    1           3 RPROC       SBIN WORD,   /* First address for this node in proc     */
             10998    1           3 ROS       SBIN WORD,          /* Last address for program in ros    */
             10999    1         2 ADDR_STOP_A(0:2/*@ROS*/) SBIN WORD /*(-1*3)*/, /* Array            */
             11000    1         2 ADDR_STOP  REDEF  ADDR_STOP_A,
             11001    1           3 RDATA       SBIN WORD,        /* Last address for this node in data */
             11002    1           3 RPROC       SBIN WORD,        /* Last address for this node in proc */
             11003    1           3 ROS       SBIN WORD,          /* Last address for program in ros    */
             11004    1         2 START_PAGE#_A(0:2/*@ROS*/) SBIN WORD /*(0*3)*/, /* Array           */
             11005    1         2 START_PAGE# REDEF START_PAGE#_A,
             11006    1           3 RDATA       SBIN WORD,   /* First page    for this node in data     */
             11007    1           3 RPROC       SBIN WORD,   /* First page    for this node in proc     */
             11008    1           3 ROS       SBIN WORD,          /* First page   for program in ros    */
             11009    1         2 STOP_PAGE#_A(0:2/*@ROS*/) SBIN WORD /*(-1*3)*/, /* Array*/
             11010    1         2 STOP_PAGE#  REDEF STOP_PAGE#_A,
             11011    1           3 RDATA       SBIN WORD,   /* Last  page    for this node in data     */
             11012    1           3 RPROC       SBIN WORD,   /* Last  page    for this node in proc     */
             11013    1           3 ROS       SBIN WORD,          /* Last  page   for program in ros    */
             11014    1         2 START_SC_ALL$ PTR /*(ADDR(NIL))*/,
             11014                  /* Starting pointer for common sections for this node */
             11015    1         2 STOP_SC_ALL$ PTR /*(ADDR(NIL))*/,
             11015                  /* Stopping pointer for common sections for this node */
             11016    1         2 L_START,
             11017    1           3 SN$ PTR /*(ADDR(NIL))*/, /* Segment definition names        */
             11018    1           3 DN$ PTR /*(ADDR(NIL))*/, /* Def names                       */
             11019    1           3 RN$ PTR /*(ADDR(NIL))*/, /* Ref names                       */
             11020    1           3 SC$ PTR /*(ADDR(NIL))*/, /* Sections                        */
             11021    1           3 ED$ PTR /*(ADDR(NIL))*/, /* Entry defs*/
             11022    1           3 ER$ PTR /*(ADDR(NIL))*/, /* Entry refs*/
             11023    1           3 DD$ PTR /*(ADDR(NIL))*/, /* Data defs                       */
             11024    1           3 DR$ PTR /*(ADDR(NIL))*/, /* Data refs                       */
             11025    1           3 SD$ PTR /*(ADDR(NIL))*/, /* Seg defs                        */
PL6.E3A0      #001=VXP$TREE File=VXP$TREE.:E05TSI                                WED 07/30/97 08:33 Page:14   
             11026    1           3 SR$ PTR /*(ADDR(NIL))*/, /* Seg refs                        */
             11027    1         2 L_START_A$(0:9)     REDEF L_START PTR,
             11028    1         2 L_STOP,
             11029    1           3 SN$ PTR /*(ADDR(NIL))*/, /* Segment definition names        */
             11030    1           3 DN$ PTR /*(ADDR(NIL))*/, /* Def names                       */
             11031    1           3 RN$ PTR /*(ADDR(NIL))*/, /* Ref names                       */
             11032    1           3 SC$ PTR /*(ADDR(NIL))*/, /* Sections                        */
             11033    1           3 ED$ PTR /*(ADDR(NIL))*/, /* Entry defs*/
             11034    1           3 ER$ PTR /*(ADDR(NIL))*/, /* Entry refs*/
             11035    1           3 DD$ PTR /*(ADDR(NIL))*/, /* Data defs                       */
             11036    1           3 DR$ PTR /*(ADDR(NIL))*/, /* Data refs                       */
             11037    1           3 SD$ PTR /*(ADDR(NIL))*/, /* Seg defs                        */
             11038    1           3 SR$ PTR /*(ADDR(NIL))*/, /* Seg refs                        */
             11039    1         2 L_STOP_A$(0:9) REDEF   L_STOP    PTR,
             11040    1         2 L_SIZE,
             11041    1           3 SN      UBIN /*(0)*/, /* Segment definition names           */
             11042    1           3 DN      UBIN /*(0)*/, /* Def names                          */
             11043    1           3 RN      UBIN /*(0)*/, /* Ref names                          */
             11044    1           3 SC      UBIN /*(0)*/, /* Sections                           */
             11045    1           3 ED      UBIN /*(0)*/, /* Entry defs*/
             11046    1           3 ER      UBIN /*(0)*/, /* Entry refs*/
             11047    1           3 DD      UBIN /*(0)*/, /* Data defs                          */
             11048    1           3 DR      UBIN /*(0)*/, /* Data refs                          */
             11049    1           3 SD      UBIN /*(0)*/, /* Seg defs                           */
             11050    1           3 SR      UBIN /*(0)*/, /* Seg refs                           */
             11051    1         2 L_SIZE_A(0:9)  REDEF   L_SIZE    UBIN,
             11052    1         2 L_PREV_SIZE,
             11053    1           3 SN      UBIN /*(0)*/, /* Segment definition names           */
             11054    1           3 DN      UBIN /*(0)*/, /* Def names                          */
             11055    1           3 RN      UBIN /*(0)*/, /* Ref names                          */
             11056    1           3 SC      UBIN /*(0)*/, /* Sections                           */
             11057    1           3 ED      UBIN /*(0)*/, /* Entry defs*/
             11058    1           3 ER      UBIN /*(0)*/, /* Entry refs*/
             11059    1           3 DD      UBIN /*(0)*/, /* Data defs                          */
             11060    1           3 DR      UBIN /*(0)*/, /* Data refs                          */
             11061    1           3 SD      UBIN /*(0)*/, /* Seg defs                           */
             11062    1           3 SR      UBIN /*(0)*/, /* Seg refs                           */
PL6.E3A0      #001=VXP$TREE File=VXP$TREE.:E05TSI                                WED 07/30/97 08:33 Page:15   
             11063    1         2 L_PREV_SIZE_A(0:9)  REDEF   L_PREV_SIZE    UBIN,
             11064    1         2 BIT_MAP                ALIGNED,
             11065    1           3 DATA                  ALIGNED,
             11066    1             4 BITS(0:255)          BIT(1)    UNAL /*('0'B*256)*/,
             11067    1           3 RPROC                 ALIGNED,
             11068    1             4 BITS(0:255)          BIT(1)    UNAL /*('0'B*256)*/,
             11069    1           3 ROS                   ALIGNED,
             11070    1             4 BITS(0:255)          BIT(1)    UNAL /*('0'B*256)*/,
             11071    1         2 L_SC_START,
             11072    1           3 SC_BLK_COM$ PTR /*(ADDR(NIL))*/, /* Blank common            */
             11073    1           3 SC_ROOT_LBL_COM$ PTR /*(ADDR(NIL))*/, /* Root labelled common */
             11074    1           3 SC_LBL_COM$ PTR /*(ADDR(NIL))*/, /* Labelled common         */
             11075    1           3 SC_DCB$ PTR /*(ADDR(NIL))*/, /* Dcbs                        */
             11076    1         2 L_SC_START_A$(0:3)  REDEF L_SC_START PTR,
             11077    1         2 L_SC_STOP,
             11078    1           3 SC_BLK_COM$ PTR /*(ADDR(NIL))*/, /* Blank common            */
             11079    1           3 SC_ROOT_LBL_COM$ PTR /*(ADDR(NIL))*/, /* Root labelled common */
             11080    1           3 SC_LBL_COM$ PTR /*(ADDR(NIL))*/, /* Labelled common         */
             11081    1           3 SC_DCB$ PTR /*(ADDR(NIL))*/, /* Dcbs                        */
             11082    1         2 L_SC_STOP_A$(0:3)   REDEF L_SC_STOP  PTR,
             11083    1         2 PROMOTE_HEAD,
             11084    1           3 BLK_COM$              PTR /*(ADDR(NIL))*/,
             11085    1           3 LBL_COM$              PTR /*(ADDR(NIL))*/,
             11086    1         2 PROMOTE_HEAD_A$(0:1) REDEF PROMOTE_HEAD     PTR,
             11087    1         2 PROMOTE_TAIL,
             11088    1           3 BLK_COM$              PTR /*(ADDR(NIL))*/,
             11089    1           3 LBL_COM$              PTR /*(ADDR(NIL))*/,
             11090    1         2 PROMOTE_TAIL_A$(0:1) REDEF PROMOTE_TAIL     PTR,
             11091    1         2 HAVE_ASL          BIT(1)    UNAL /*('0'B)*/,
             11092    1         2 ALL_BLK_COM          BIT(1)    UNAL /*('0'B)*/,
             11093    1         2 USE_NODE          BIT(1)    UNAL /*('0'B)*/,
             11094    1         2 *                 BIT(33)   UNAL /*('0'B)*/,
             11095    1         2 BLANK_COMMON$     PTR       ALIGNED /*(ADDR(NIL))*/;

       14    11099        %SET LISTMAC='1'B;
       15    11100        %SET LISTSUB='1'B;
       16    11101        %SET LISTEXP='1'B;
PL6.E3A0      #001=VXP$TREE File=VXP$TREE.:E05TSI                                WED 07/30/97 08:33 Page:16   
       17    11102        %SET LISTDIR='0'B;

             11111    1   /*******************************************************************************
             11112    1   *                                                                              *
             11113    1   *                          PARAMETERS                                             *
             11114    1   *                                                                              *
             11115    1   *******************************************************************************/

       19    11119    1   DCL HEAD$           PTR;            /* Head pointer of major list to return */
       20    11120    1   DCL TAIL$           PTR;            /* Tail pointer of major list to return */
       21    11121    1   DCL TYPE            UBIN(36) ALIGNED;   /* Major type of list element */
       22    11122    1   DCL SUB_TYPE        UBIN(36) ALIGNED;   /* Minor type of list sub-element */
       23    11123    1   DCL NODE$           PTR ALIGNED;    /* Direct ancestor for this SUB_STRUCTURE */
       24    11124    1   DCL FILE$          PTR ALIGNED; /* Addr(nil) or direct ancestor/cobol in file */
       25    11125    1   DCL LEVEL1_P$       PTR;

             11134    1   /*******************************************************************************
             11135    1   *                                                                              *
             11136    1   *                          PTR                                                 *
             11137    1   *                                                                              *
             11138    1   *******************************************************************************/

       27    11142    1   DCL CURR$           PTR  ALIGNED   AUTO;
       28    11143    1   DCL LEVEL1$         PTR;
       29    11144    1   DCL LEVEL2$         PTR  ALIGNED   AUTO;
       30    11145    1   DCL NEXT$           PTR ALIGNED    AUTO;

             11154    1   /*******************************************************************************
             11155    1   *                                                                              *
             11156    1   *                          UBIN                                                 *
             11157    1   *                                                                              *
             11158    1   *******************************************************************************/

             11163    1   DCL I          UBIN(36) ALIGNED AUTO;
             11164    1   DCL SI REDEF I SBIN WORD ALIGNED;
             11165    1   DCL J          UBIN(36) ALIGNED AUTO;
             11166    1   DCL SJ REDEF J SBIN WORD ALIGNED;
PL6.E3A0      #001=VXP$TREE File=VXP$TREE.:E05TSI                                WED 07/30/97 08:33 Page:17   
             11167    1   DCL K          UBIN(36) ALIGNED AUTO;
             11168    1   DCL SK REDEF K SBIN WORD ALIGNED;
             11169    1   DCL L          UBIN(36) ALIGNED AUTO;
             11170    1   DCL SL REDEF L    SBIN WORD ALIGNED;
       33    11172    1   DCL KON_STOP        UBIN(36) ALIGNED    AUTO;
       34    11173    1   DCL CTEMP           UBIN(36) ALIGNED    AUTO;
       35    11174    1   DCL OPT_CODE        UBIN(36) ALIGNED    AUTO;
       36    11175    1   DCL OPTION_LIST_INCLUDED     UBIN       SYMREF;

             11184    1   /*******************************************************************************
             11185    1   *                                                                              *
             11186    1   *                          ENTRY                                                 *
             11187    1   *                                                                              *
             11188    1   *******************************************************************************/

       38    11192    1   DCL VXD$FLST        ENTRY(6);
       39    11193    1   DCL VXA$ND          ENTRY(2);

PL6.E3A0      #001=VXP$TREE File=VXP$TREE.:E05TSI                                WED 07/30/97 08:33 Page:18   
       42    11196    1         CURR$ = NODE$;

  11196  2 000002   200007 470500                    LDP0    @NODE$,,AUTO
         2 000003   000000 236100                    LDQ     0,,PR0
         2 000004   200012 756100                    STQ     CURR$,,AUTO

       43    11197    1         LEVEL1$ = LEVEL1_P$;              /* Move parms into locals */

  11197  2 000005   200011 471500                    LDP1    @LEVEL1_P$,,AUTO
         2 000006   100000 236100                    LDQ     0,,PR1
         2 000007   200013 756100                    STQ     LEVEL1$,,AUTO

       44    11198    1         CALL VXD$FLST( HEAD$,

  11198  2 000010   200010 236100                    LDQ     @FILE$,,AUTO
         2 000011   200006 235100                    LDA     @SUB_TYPE,,AUTO
         2 000012   200032 757100                    STAQ    OPT_CODE+6,,AUTO
         2 000013   200005 236100                    LDQ     @TYPE,,AUTO
         2 000014   200031 756100                    STQ     OPT_CODE+5,,AUTO
         2 000015   200013 236100                    LDQ     LEVEL1$,,AUTO
         2 000016   000003 036003                    ADLQ    3,DU
         2 000017   200030 756100                    STQ     OPT_CODE+4,,AUTO
         2 000020   200004 236100                    LDQ     @TAIL$,,AUTO
         2 000021   200003 235100                    LDA     @HEAD$,,AUTO
         2 000022   200026 757100                    STAQ    OPT_CODE+2,,AUTO
         2 000023   200026 630500                    EPPR0   OPT_CODE+2,,AUTO
         2 000024   000024 631400 xsym               EPPR1   B_VECTNIL+20
         2 000025   000000 701000 xent               TSX1    VXD$FLST
         2 000026   000000 011000                    NOP     0

       45    11199    1                 TAIL$,
       46    11200    1                 LEVEL1$ -> O$B.SUBLK$(0) ,
       47    11201    1                 TYPE,
       48    11202    1                 SUB_TYPE,
       49    11203    1                 FILE$ );                  /* Do the root */
       50    11204    1         IF VX_OVERLAY_START$ = VX_ROOT$ THEN

PL6.E3A0      #001=VXP$TREE File=VXP$TREE.:E05TSI                                WED 07/30/97 08:33 Page:19   
  11204  2 000027   000000 236000 xsym               LDQ     VX_OVERLAY_START$
         2 000030   000000 116000 xsym               CMPQ    VX_ROOT$
         2 000031   000035 601000 2                  TNZ     s:11206

       51    11205    1             VX_OVERLAY_START$ = HEAD$;

  11205  2 000032   200003 470500                    LDP0    @HEAD$,,AUTO
         2 000033   000000 236100                    LDQ     0,,PR0
         2 000034   000000 756000 xsym               STQ     VX_OVERLAY_START$

       52    11206    2         IF LEVEL1$ -> O$B.NSUBLKS > 1 THEN DO;

  11206  2 000035   200013 470500                    LDP0    LEVEL1$,,AUTO
         2 000036   000001 220100                    LDX0    1,,PR0
         2 000037   000002 100003                    CMPX0   2,DU
         2 000040   000162 602000 2                  TNC     s:11234

       53    11207    2             IF NOT VX_IN_OVERLAY THEN VX_OVERLAY_START$ = CURR$;

  11207  2 000041   000000 234000 xsym               SZN     VX_IN_OVERLAY
         2 000042   000045 604000 2                  TMI     s:11208

  11207  2 000043   200012 236100                    LDQ     CURR$,,AUTO
         2 000044   000000 756000 xsym               STQ     VX_OVERLAY_START$

       54    11208    2             VX_IN_OVERLAY = '1'B;

  11208  2 000045   400000 236003                    LDQ     -131072,DU
         2 000046   000000 756000 xsym               STQ     VX_IN_OVERLAY

       55    11209    2             KON_STOP = LEVEL1$ -> O$B.NSUBLKS - 1;

  11209  2 000047   000001 236100                    LDQ     1,,PR0
         2 000050   000022 772000                    QRL     18
         2 000051   000001 136007                    SBLQ    1,DL
         2 000052   200022 756100                    STQ     KON_STOP,,AUTO

PL6.E3A0      #001=VXP$TREE File=VXP$TREE.:E05TSI                                WED 07/30/97 08:33 Page:20   
       56    11210    2             OPT_CODE = LEVEL1$ -> O$B.SUBLK$ (KON_STOP) -> O$B.CODE;

  11210  2 000053   000003 471506                    LDP1    3,QL,PR0
         2 000054   100000 236100                    LDQ     0,,PR1
         2 000055   777777 376007                    ANQ     -1,DL
         2 000056   200024 756100                    STQ     OPT_CODE,,AUTO

       57    11211    3             IF (OPT_CODE = 5) THEN DO;

  11211  2 000057   000005 116007                    CMPQ    5,DL
         2 000060   000066 601000 2                  TNZ     s:11215

       58    11212    3                 KON_STOP = KON_STOP - 1;

  11212  2 000061   200022 235100                    LDA     KON_STOP,,AUTO
         2 000062   000001 135007                    SBLA    1,DL
         2 000063   200022 755100                    STA     KON_STOP,,AUTO

       59    11213    3                 OPTION_LIST_INCLUDED = 1/*@YES*/;

  11213  2 000064   000001 235007                    LDA     1,DL
         2 000065   000000 755000 xsym               STA     OPTION_LIST_INCLUDED

       60    11214    3                END;

       61    11215    3             DO L = 1 TO KON_STOP;

  11215  2 000066   000001 235007                    LDA     1,DL
         2 000067   200021 755100                    STA     L,,AUTO
         2 000070   000157 710000 2                  TRA     s:11232+3

       62    11216    3                 LEVEL2$ = LEVEL1$ -> O$B.SUBLK$(L);

  11216  2 000071   200013 470500                    LDP0    LEVEL1$,,AUTO
         2 000072   200021 720100                    LXL0    L,,AUTO
         2 000073   000003 236110                    LDQ     3,X0,PR0
         2 000074   200014 756100                    STQ     LEVEL2$,,AUTO
PL6.E3A0      #001=VXP$TREE File=VXP$TREE.:E05TSI                                WED 07/30/97 08:33 Page:21   

       63    11217    4                 IF CURR$ -> VX$NODE.SON$ = ADDR(NIL) THEN DO;

  11217  2 000075   200012 471500                    LDP1    CURR$,,AUTO
         2 000076   100000 236100                    LDQ     0,,PR1
         2 000077   000001 116000 xsym               CMPQ    B_VECTNIL+1
         2 000100   000115 601000 2                  TNZ     s:11222

       64    11218    4                     CALL VXA$ND( NEXT$, CURR$ );

  11218  2 000101   200012 633500                    EPPR3   CURR$,,AUTO
         2 000102   200027 453500                    STP3    OPT_CODE+3,,AUTO
         2 000103   200015 634500                    EPPR4   NEXT$,,AUTO
         2 000104   200026 454500                    STP4    OPT_CODE+2,,AUTO
         2 000105   200026 630500                    EPPR0   OPT_CODE+2,,AUTO
         2 000106   000020 631400 xsym               EPPR1   B_VECTNIL+16
         2 000107   000000 701000 xent               TSX1    VXA$ND
         2 000110   000000 011000                    NOP     0

       65    11219    4                     CURR$ -> VX$NODE.SON$ = NEXT$; /* Set up links */

  11219  2 000111   200015 236100                    LDQ     NEXT$,,AUTO
         2 000112   200012 470500                    LDP0    CURR$,,AUTO
         2 000113   000000 756100                    STQ     0,,PR0

       66    11220    4                    END;

  11220  2 000114   000131 710000 2                  TRA     s:11225

       67    11221    4                 ELSE DO;                  /* Already there */

       68    11222    4                     CALL VXA$ND( NEXT$->VX$NODE.BROTHER$, CURR$ );

  11222  2 000115   200012 633500                    EPPR3   CURR$,,AUTO
         2 000116   200027 453500                    STP3    OPT_CODE+3,,AUTO
         2 000117   200015 236100                    LDQ     NEXT$,,AUTO
         2 000120   000001 036003                    ADLQ    1,DU
PL6.E3A0      #001=VXP$TREE File=VXP$TREE.:E05TSI                                WED 07/30/97 08:33 Page:22   
         2 000121   200026 756100                    STQ     OPT_CODE+2,,AUTO
         2 000122   200026 630500                    EPPR0   OPT_CODE+2,,AUTO
         2 000123   000020 631400 xsym               EPPR1   B_VECTNIL+16
         2 000124   000000 701000 xent               TSX1    VXA$ND
         2 000125   000000 011000                    NOP     0

       69    11223    4                     NEXT$ = NEXT$ -> VX$NODE.BROTHER$;

  11223  2 000126   200015 470500                    LDP0    NEXT$,,AUTO
         2 000127   000001 236100                    LDQ     1,,PR0
         2 000130   200015 756100                    STQ     NEXT$,,AUTO

       70    11224    4                    END;

       71    11225    3                 CALL VXP$TREE( NEXT$ -> VX$NODE.HEAD$,

  11225  2 000131   200014 630500                    EPPR0   LEVEL2$,,AUTO
         2 000132   200034 450500                    STP0    OPT_CODE+8,,AUTO
         2 000133   200010 236100                    LDQ     @FILE$,,AUTO
         2 000134   200033 756100                    STQ     OPT_CODE+7,,AUTO
         2 000135   200015 631500                    EPPR1   NEXT$,,AUTO
         2 000136   200032 451500                    STP1    OPT_CODE+6,,AUTO
         2 000137   200006 236100                    LDQ     @SUB_TYPE,,AUTO
         2 000140   200005 235100                    LDA     @TYPE,,AUTO
         2 000141   200030 757100                    STAQ    OPT_CODE+4,,AUTO
         2 000142   200015 236100                    LDQ     NEXT$,,AUTO
         2 000143   000005 036003                    ADLQ    5,DU
         2 000144   200027 756100                    STQ     OPT_CODE+3,,AUTO
         2 000145   200015 236100                    LDQ     NEXT$,,AUTO
         2 000146   000004 036003                    ADLQ    4,DU
         2 000147   200026 756100                    STQ     OPT_CODE+2,,AUTO
         2 000150   200026 630500                    EPPR0   OPT_CODE+2,,AUTO
         2 000151   000025 631400 xsym               EPPR1   B_VECTNIL+21
         2 000152   000000 701000 2                  TSX1    s:9
         2 000153   000000 011000                    NOP     0

       72    11226    3                         NEXT$ -> VX$NODE.TAIL$,
PL6.E3A0      #001=VXP$TREE File=VXP$TREE.:E05TSI                                WED 07/30/97 08:33 Page:23   
       73    11227    3                         TYPE ,
       74    11228    3                         SUB_TYPE ,
       75    11229    3                         NEXT$ ,
       76    11230    3                         FILE$ ,
       77    11231    3                         LEVEL2$ );
       78    11232    3                END;

  11232  2 000154   200021 235100                    LDA     L,,AUTO
         2 000155   000001 035007                    ADLA    1,DL
         2 000156   200021 755100                    STA     L,,AUTO
         2 000157   200022 236100                    LDQ     KON_STOP,,AUTO
         2 000160   200021 116100                    CMPQ    L,,AUTO
         2 000161   000071 603000 2                  TRC     s:11216

       79    11233    2            END;

       80    11234    1   END VXP$TREE;

  11234  2 000162   000000 702200 xent               TSX2  ! X66_ARET

PL6.E3A0      #001=VXP$TREE File=VXP$TREE.:E05TSI                                WED 07/30/97 08:33 Page:24   
--  Include file information  --

   VX_PSUBS_C.:E05TOU  is referenced.
   F_DCB_D.:E05TOU  is referenced.
   VX_DCB_R.:E05TOU  cannot be made into a system file and is referenced.
   VX_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   VX_FIXED_R.:E05TOU  cannot be made into a system file and is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   VX_MACRO_C.:E05TOU  is referenced.
   VX_PERR_C.:E05TOU  is referenced.
   VX_SUBS_C.:E05TOU  is referenced.
   VX_SWITCH_C.:E05TOU  is referenced.
   B$OBJECT_C.:E05TOU  is referenced.
   VX_INC_C.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure VXP$TREE.
PL6.E3A0      #001=VXP$TREE File=VXP$TREE.:E05TSI                                WED 07/30/97 08:33 Page:25   

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

    10-0-0/w PTR         r     1 @FILE$                     3-0-0/w PTR         r     1 @HEAD$
    11-0-0/w PTR         r     1 @LEVEL1_P$                 7-0-0/w PTR         r     1 @NODE$
     6-0-0/w PTR         r     1 @SUB_TYPE                  4-0-0/w PTR         r     1 @TAIL$
     5-0-0/w PTR         r     1 @TYPE                     12-0-0/w PTR         r     1 CURR$
    *0-0-0/w PTR         r     1 FILE$                     *0-0-0/w PTR         r     1 HEAD$
    22-0-0/w UBIN        r     1 KON_STOP                  21-0-0/w UBIN        r     1 L
    13-0-0/w PTR         r     1 LEVEL1$                   *0-0-0/w PTR         r     1 LEVEL1_P$
    14-0-0/w PTR         r     1 LEVEL2$                   15-0-0/w PTR         r     1 NEXT$
    *0-0-0/w PTR         r     1 NODE$                     24-0-0/w UBIN        r     1 OPT_CODE
    *0-0-0/w UBIN        r     1 SUB_TYPE                  *0-0-0/w PTR         r     1 TAIL$
    *0-0-0/w UBIN        r     1 TYPE

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w UBIN        r     1 OPTION_LIST_INCLUDED       0-0-0/b BIT         r     1 VX_IN_OVERLAY
     0-0-0/w PTR         r     1 VX_OVERLAY_START$          0-0-0/w PTR         r     1 VX_ROOT$

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(144)   r     1 O$B                        0-0-0/w STRC(3672)  r     1 VX$NODE


   Procedure VXP$TREE requires 115 words for executable code.
PL6.E3A0      #001=VXP$TREE File=VXP$TREE.:E05TSI                                WED 07/30/97 08:33 Page:26   
   Procedure VXP$TREE requires 30 words of local(AUTO) storage.

    No errors detected in file VXP$TREE.:E05TSI    .
PL6.E3A0      #001=VXP$TREE File=VXP$TREE.:E05TSI                                WED 07/30/97 08:33 Page:27   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=VXP$TREE File=VXP$TREE.:E05TSI                                WED 07/30/97 08:33 Page:28   
          MINI XREF LISTING

CURR$
     11142**DCL     11196<<ASSIGN  11207>>ASSIGN  11217>>IF      11218<>CALL    11219>>ASSIGN  11222<>CALL
FILE$
     11124**DCL         8--PROC    11198<>CALL    11225<>CALL
HEAD$
     11119**DCL         8--PROC    11198<>CALL    11205>>ASSIGN
I
     11163**DCL     11164--REDEF
J
     11165**DCL     11166--REDEF
K
     11167**DCL     11168--REDEF
KON_STOP
     11172**DCL     11209<<ASSIGN  11210>>ASSIGN  11212<<ASSIGN  11212>>ASSIGN  11215>>DOINDEX
L
     11169**DCL     11170--REDEF   11215<<DOINDEX 11216>>ASSIGN
LEVEL1$
     11143**DCL     11197<<ASSIGN  11198>>CALL    11206>>IF      11209>>ASSIGN  11210>>ASSIGN  11216>>ASSIGN
LEVEL1_P$
     11125**DCL         8--PROC    11197>>ASSIGN
LEVEL2$
     11144**DCL     11216<<ASSIGN  11225<>CALL
NEXT$
     11145**DCL     11218<>CALL    11219>>ASSIGN  11222>>CALL    11223<<ASSIGN  11223>>ASSIGN  11225>>CALL
     11225>>CALL    11225<>CALL
NODE$
     11123**DCL         8--PROC    11196>>ASSIGN
O$B.CODE
     10918**DCL     11210>>ASSIGN
O$B.NSUBLKS
     10922**DCL     11206>>IF      11209>>ASSIGN
O$B.SUBLK$
PL6.E3A0      #001=VXP$TREE File=VXP$TREE.:E05TSI                                WED 07/30/97 08:33 Page:29   
     10943**DCL     11198<>CALL    11210>>ASSIGN  11216>>ASSIGN
OPTION_LIST_INCLUDED
     11175**DCL     11213<<ASSIGN
OPT_CODE
     11174**DCL     11210<<ASSIGN  11211>>IF
SUB_TYPE
     11122**DCL         8--PROC    11198<>CALL    11225<>CALL
TAIL$
     11120**DCL         8--PROC    11198<>CALL
TYPE
     11121**DCL         8--PROC    11198<>CALL    11225<>CALL
VX$NODE.ADDR_START_A
     10994**DCL     10995--REDEF
VX$NODE.ADDR_STOP_A
     10999**DCL     11000--REDEF
VX$NODE.BROTHER$
     10983**DCL     11222<>CALL    11223>>ASSIGN
VX$NODE.HEAD$
     10986**DCL     11225<>CALL
VX$NODE.L_PREV_SIZE
     11052**DCL     11063--REDEF
VX$NODE.L_SC_START
     11071**DCL     11076--REDEF
VX$NODE.L_SC_STOP
     11077**DCL     11082--REDEF
VX$NODE.L_SIZE
     11040**DCL     11051--REDEF
VX$NODE.L_START
     11016**DCL     11027--REDEF
VX$NODE.L_STOP
     11028**DCL     11039--REDEF
VX$NODE.PROMOTE_HEAD
     11083**DCL     11086--REDEF
VX$NODE.PROMOTE_TAIL
     11087**DCL     11090--REDEF
VX$NODE.SON$
PL6.E3A0      #001=VXP$TREE File=VXP$TREE.:E05TSI                                WED 07/30/97 08:33 Page:30   
     10982**DCL     11217>>IF      11219<<ASSIGN
VX$NODE.START_PAGE#_A
     11004**DCL     11005--REDEF
VX$NODE.STOP_PAGE#_A
     11009**DCL     11010--REDEF
VX$NODE.TAIL$
     10988**DCL     11225<>CALL
VXA$ND
     11193**DCL-ENT 11218--CALL    11222--CALL
VXD$FLST
     11192**DCL-ENT 11198--CALL
VXP$TREE
         8**PROC    11225--CALL
VX_BIAS.A
      9576**DCL      9577--REDEF
VX_CBUF.CHARS_A
      9510**DCL      9511--REDEF
VX_CONST_DCB.ACTPOS
     10692**DCL     10692--REDEF
VX_CONST_DCB.ARS#
     10651**DCL     10651--REDEF
VX_CONST_DCB.ATTR#
     10681**DCL     10681--REDEF   10683--REDEF
VX_CONST_DCB.BORROW
     10703**DCL     10703--REDEF   10703--REDEF   10703--REDEF
VX_CONST_DCB.EOMCHAR#
     10658**DCL     10659--REDEF
VX_CONST_DCB.FLDID
     10695**DCL     10696--REDEF
VX_CONST_DCB.FORM$
     10687**DCL     10687--REDEF
VX_CONST_DCB.FSECT
     10710**DCL     10710--REDEF
VX_CONST_DCB.FSN#
     10677**DCL     10677--REDEF   10677--REDEF   10678--REDEF
VX_CONST_DCB.HEADER$
PL6.E3A0      #001=VXP$TREE File=VXP$TREE.:E05TSI                                WED 07/30/97 08:33 Page:31   
     10686**DCL     10687--REDEF
VX_CONST_DCB.IXTNSIZE#
     10683**DCL     10684--REDEF
VX_CONST_DCB.LASTSTA$
     10667**DCL     10667--REDEF
VX_CONST_DCB.LVL
     10704**DCL     10704--REDEF
VX_CONST_DCB.NAME#.C
     10667**DCL     10668--REDEF
VX_CONST_DCB.NOEOF
     10699**DCL     10699--REDEF
VX_CONST_DCB.NRECS#
     10684**DCL     10684--REDEF
VX_CONST_DCB.NRECX
     10711**DCL     10711--REDEF
VX_CONST_DCB.OHDR
     10700**DCL     10700--REDEF
VX_CONST_DCB.ORG#
     10675**DCL     10676--REDEF
VX_CONST_DCB.PRECNO
     10708**DCL     10708--REDEF
VX_CONST_DCB.RCSZ
     10716**DCL     10716--REDEF
VX_CONST_DCB.RES#
     10669**DCL     10669--REDEF
VX_CONST_DCB.SETX
     10688**DCL     10688--REDEF
VX_CONST_DCB.TAB$
     10687**DCL     10687--REDEF
VX_CONST_DCB.TDA
     10707**DCL     10708--REDEF
VX_CONST_DCB.WSN#
     10669**DCL     10670--REDEF
VX_EBUF.CHARS_A
     10099**DCL     10100--REDEF
VX_EFIELD1.CHARS
PL6.E3A0      #001=VXP$TREE File=VXP$TREE.:E05TSI                                WED 07/30/97 08:33 Page:32   
     10108**DCL     10109--REDEF
VX_EFIELD2.CHARS
     10112**DCL     10113--REDEF
VX_EFIELD3.CHARS
     10116**DCL     10117--REDEF
VX_EI_KEY_BUF.KEY
     10492**DCL     10493--REDEF
VX_ERRORS
      9553**DCL      9564--REDEF
VX_ERRORS.CONFLICT_A
      9559**DCL      9560--REDEF
VX_ERRORS.UNSAT_A
      9555**DCL      9556--REDEF
VX_IMAGE_DATA.CPAGE#_A
      8690**DCL      8691--REDEF
VX_IMAGE_DATA.NODE_A$
      8702**DCL      8703--REDEF
VX_IMAGE_DATA.START_A$
      8694**DCL      8695--REDEF
VX_IMAGE_DATA.STOP_A$
      8698**DCL      8699--REDEF
VX_IMAGE_DS3.CPAGE#_A
      8759**DCL      8760--REDEF
VX_IMAGE_DS3.NODE_A$
      8771**DCL      8772--REDEF
VX_IMAGE_DS3.START_A$
      8763**DCL      8764--REDEF
VX_IMAGE_DS3.STOP_A$
      8767**DCL      8768--REDEF
VX_IMAGE_DS4.CPAGE#_A
      8782**DCL      8783--REDEF
VX_IMAGE_DS4.NODE_A$
      8794**DCL      8795--REDEF
VX_IMAGE_DS4.START_A$
      8786**DCL      8787--REDEF
VX_IMAGE_DS4.STOP_A$
PL6.E3A0      #001=VXP$TREE File=VXP$TREE.:E05TSI                                WED 07/30/97 08:33 Page:33   
      8790**DCL      8791--REDEF
VX_IMAGE_DS5.CPAGE#_A
      8805**DCL      8806--REDEF
VX_IMAGE_DS5.NODE_A$
      8817**DCL      8818--REDEF
VX_IMAGE_DS5.START_A$
      8809**DCL      8810--REDEF
VX_IMAGE_DS5.STOP_A$
      8813**DCL      8814--REDEF
VX_IMAGE_DS6.CPAGE#_A
      8828**DCL      8829--REDEF
VX_IMAGE_DS6.NODE_A$
      8840**DCL      8841--REDEF
VX_IMAGE_DS6.START_A$
      8832**DCL      8833--REDEF
VX_IMAGE_DS6.STOP_A$
      8836**DCL      8837--REDEF
VX_IMAGE_DS7.CPAGE#_A
      8851**DCL      8852--REDEF
VX_IMAGE_DS7.NODE_A$
      8863**DCL      8864--REDEF
VX_IMAGE_DS7.START_A$
      8855**DCL      8856--REDEF
VX_IMAGE_DS7.STOP_A$
      8859**DCL      8860--REDEF
VX_IMAGE_DS8.CPAGE#_A
      8874**DCL      8875--REDEF
VX_IMAGE_DS8.NODE_A$
      8886**DCL      8887--REDEF
VX_IMAGE_DS8.START_A$
      8878**DCL      8879--REDEF
VX_IMAGE_DS8.STOP_A$
      8882**DCL      8883--REDEF
VX_IMAGE_PROC.CPAGE#_A
      8713**DCL      8714--REDEF
VX_IMAGE_PROC.NODE_A$
PL6.E3A0      #001=VXP$TREE File=VXP$TREE.:E05TSI                                WED 07/30/97 08:33 Page:34   
      8725**DCL      8726--REDEF
VX_IMAGE_PROC.START_A$
      8717**DCL      8718--REDEF
VX_IMAGE_PROC.STOP_A$
      8721**DCL      8722--REDEF
VX_IMAGE_ROS.CPAGE#_A
      8736**DCL      8737--REDEF
VX_IMAGE_ROS.NODE_A$
      8748**DCL      8749--REDEF
VX_IMAGE_ROS.START_A$
      8740**DCL      8741--REDEF
VX_IMAGE_ROS.STOP_A$
      8744**DCL      8745--REDEF
VX_IN_OVERLAY
      9538**DCL     11207>>IF      11208<<ASSIGN
VX_M_VECTOR.F
      8541**DCL      8545--REDEF
VX_M_VECTOR_DP.F
      8576**DCL      8580--REDEF
VX_O.ACCTN_A$
      9705**DCL      9706--REDEF
VX_O.DCB_MATCH_A$
      9714**DCL      9715--REDEF
VX_O.DCB_MATCH_HIT_A
      9720**DCL      9721--REDEF
VX_O.FIDN_A$
      9699**DCL      9700--REDEF
VX_O.FID_A$
      9691**DCL      9692--REDEF
VX_O.INCLUDE_A$
      9711**DCL      9712--REDEF
VX_O.MAP_A
      9685**DCL      9686--REDEF
VX_O.NODCB_A
      9742**DCL      9743--REDEF
VX_O.NUM_A
PL6.E3A0      #001=VXP$TREE File=VXP$TREE.:E05TSI                                WED 07/30/97 08:33 Page:35   
      9630**DCL      9632--REDEF
VX_O.OPT_A
      9730**DCL      9731--REDEF
VX_O.PRIV_A
      9646**DCL      9648--REDEF
VX_O.SIN_A
      9599**DCL      9600--REDEF
VX_O.TCB_A
      9726**DCL      9727--REDEF
VX_OD.ACCTN_A$
      9903**DCL      9904--REDEF
VX_OD.DCB_MATCH_A$
      9912**DCL      9913--REDEF
VX_OD.FIDN_A$
      9897**DCL      9898--REDEF
VX_OD.FID_A$
      9889**DCL      9890--REDEF
VX_OD.INCLUDE_A$
      9909**DCL      9910--REDEF
VX_OD.MAP_A
      9883**DCL      9884--REDEF
VX_OD.NODCB_A
      9927**DCL      9928--REDEF
VX_OD.NUM_A
      9830**DCL      9831--REDEF
VX_OD.PRIV_A
      9845**DCL      9846--REDEF
VX_OD.SIN_A
      9799**DCL      9800--REDEF
VX_OD.VECTOR_A$
      9918**DCL      9919--REDEF
VX_OL.MAX_A
      9774**DCL      9776--REDEF
VX_OL.MIN_A
      9759**DCL      9760--REDEF
VX_ON.ACCTN_A$
PL6.E3A0      #001=VXP$TREE File=VXP$TREE.:E05TSI                                WED 07/30/97 08:33 Page:36   
     10048**DCL     10050--REDEF
VX_ON.DCB_MATCH_A$
     10059**DCL     10061--REDEF
VX_ON.FIDN_A$
     10041**DCL     10043--REDEF
VX_ON.FID_A$
     10032**DCL     10034--REDEF
VX_ON.INCLUDE_A$
     10055**DCL     10057--REDEF
VX_ON.MAP_A
     10025**DCL     10027--REDEF
VX_ON.NODCB_A$
     10075**DCL     10076--REDEF
VX_ON.NUM_A
      9970**DCL      9972--REDEF
VX_ON.PRIV_A
      9986**DCL      9988--REDEF
VX_ON.SIN_A
      9938**DCL      9940--REDEF
VX_ON.VECTOR_A$
     10066**DCL     10067--REDEF
VX_OUHEAD.VERSION
      9385**DCL      9387--REDEF
VX_OU_HEAD
      9328**DCL      9367--REDEF
VX_OU_HEAD.REC_A
      9340**DCL      9343--REDEF
VX_OVERLAY_START$
      9484**DCL     11204>>IF      11205<<ASSIGN  11207<<ASSIGN
VX_O_KEY_BUF.FORM0
      8589**DCL      8592--REDEF    8599--REDEF
VX_O_KEY_BUF_L.FORM0
      8612**DCL      8615--REDEF    8622--REDEF
VX_PASS2_REF.OU.L_START
     10278**DCL     10283--REDEF
VX_PASS2_REF.OU.L_STOP
PL6.E3A0      #001=VXP$TREE File=VXP$TREE.:E05TSI                                WED 07/30/97 08:33 Page:37   
     10284**DCL     10289--REDEF
VX_PASS2_REF.OU.MAX
     10272**DCL     10277--REDEF
VX_PASS2_REF.OU.SIZE
     10290**DCL     10295--REDEF
VX_PASS2_REF.SAT.COUNT
     10317**DCL     10323--REDEF
VX_PASS2_REF.SAT.ENT_SIZE
     10324**DCL     10330--REDEF
VX_PASS2_REF.SAT.L_START
     10303**DCL     10309--REDEF
VX_PASS2_REF.SAT.L_STOP
     10310**DCL     10316--REDEF
VX_PASS2_REF.SAT.MAX
     10297**DCL     10302--REDEF
VX_PASS2_REF.UNSAT.L_START
     10365**DCL     10370--REDEF
VX_PASS2_REF.UNSAT.L_STOP
     10371**DCL     10376--REDEF
VX_PASS2_REF.UNSAT.L_WHERE
     10377**DCL     10382--REDEF
VX_PASS2_REF.UNSAT.MAX
     10359**DCL     10364--REDEF
VX_PASS2_REF.UNSAT.PAGE#
     10389**DCL     10394--REDEF
VX_PASS2_REF.UNSAT.SIZE
     10383**DCL     10388--REDEF
VX_PHRASE.PHRASE
      9791**DCL      9793--REDEF
VX_PROGRAM_BIAS.A
      9569**DCL      9570--REDEF
VX_ROOT$
      9542**DCL     11204>>IF
VX_R_KEY_BUF.FORM0
      8638**DCL      8642--REDEF    8648--REDEF
VX_SD.A
PL6.E3A0      #001=VXP$TREE File=VXP$TREE.:E05TSI                                WED 07/30/97 08:33 Page:38   
      8266**DCL      8267--REDEF
VX_SPC.B$.MINE
     10460**DCL     10466--REDEF
VX_SPC.B$.NAME
     10439**DCL     10445--REDEF
VX_SPC.B$.SKIP
     10453**DCL     10459--REDEF
VX_SPC.B$.VALUE
     10446**DCL     10452--REDEF
VX_SPC.SEG.NAME
     10408**DCL     10414--REDEF
VX_SPC.SEG.VALUE
     10415**DCL     10421--REDEF
VX_TSX0_OVERLAY.H
     10183**DCL     10186--REDEF
