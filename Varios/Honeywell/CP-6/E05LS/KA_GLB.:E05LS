

14:44 JUL 28 '97 KA_GLB.:E05SI                                             1    
    1      /*M* KA_GLB Async handler global static data */
    2      /*T***********************************************************/
    3      /*T*                                                         */
    4      /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
    5      /*T*                                                         */
    6      /*T***********************************************************/
    7      /*
    8      Miscellaneous async static data.
    9      */
   10      %MACRO KA_MSC(STCLASS = SYMREF);
   11      %LSET LISTDIR = '0'B;
   12      %LSET LISTEXP = '1'B;
   13      %LSET LISTCOM = '0'B;
   14      %LSET LISTSUB = '1'B;
   15      %LSET STR = SUBSTR(CONCAT(TEXTCHAR(STCLASS), '   '), 0, 3);
   16      %IF (STR = 'STA') OR (STR = 'CON') OR (STR = 'EXT');
   17      %LSET INIT = CHARTEXT(' INIT');
   18      %LSET ENIT = CHARTEXT('');
   19      %ELSE;
   20      %LSET INIT = CHARTEXT('/*');
   21      %LSET ENIT = CHARTEXT('*/');
   22      %ENDIF;
   23
   24      /* Output buffer byte size for big output buffers. */
   25
   26      DCL KA_OTPBFRBYTSIZ_BIG UBIN WORD %INIT(256)%ENIT STCLASS;
   27
   28      /* Output buffer byte size for big output buffers, expressed */
   29      /* as a base-2 log. */
   30
   31      DCL KA_OTPBFRBYTSIZ_BIGLOG2 UBIN WORD %INIT(8)%ENIT STCLASS;
   32
   33      /* Output buffer byte size for small output buffers. */
   34
   35      DCL KA_OTPBFRBYTSIZ_SML UBIN WORD %INIT(32)%ENIT STCLASS;
   36
   37      /* Output buffer byte size for small output buffers, expressed */
14:44 JUL 28 '97 KA_GLB.:E05SI                                             2    
   38      /* as a base-2 log. */
   39
   40      DCL KA_OTPBFRBYTSIZ_SMLLOG2 UBIN WORD %INIT(5)%ENIT STCLASS;
   41
   42      /* ARRAY, INDEXED BY KA$CTX:LINSPD, THAT YIELDS THE NUMBER */
   43      /* OF BYTES TO OUTPUT-UN-BLOCK AT.  THIS FIGURE IS USED TO DECIDE WHEN */
   44      /* TO SEND THROTTLING PARAMETERS BACK TO THE OTHER END. */
   45
   46      DCL KA_OTPUN_BLKLMT(0:15) UBIN WORD STCLASS %INIT(
   47                                     200,     /*  50 Bauds                          */
   48                                     200,     /*  75 Bauds                          */
   49                                     200,     /*  110 Bauds                         */
   50                                     200,     /*  134 Bauds                         */
   51                                     200,     /*  150 Bauds                         */
   52                                     200,     /*  200 Bauds                         */
   53                                     200,     /*  300 Bauds                         */
   54                                     200,     /*  600 Bauds                         */
   55                                     200,     /*  1050 Bauds                        */
   56                                     200,     /*  1200 Bauds                        */
   57                                     200,     /*  1800 Bauds                        */
   58                                     200,     /*  2000 Bauds                        */
   59                                     200,     /*  2400 Bauds                        */
   60                                     500,     /*  4800 Bauds                        */
   61                                     500,     /*  9600 Bauds                        */
   62                                   500)%ENIT; /* 19200 Bauds                        */
   63
   64      /* ARRAY, INDEXED BY KA$CTX:LINSPD, THAT YIELDS THE NUMBER */
   65      /* OF BYTES TO OUTPUT-BLOCK AT.  THIS FIGURE IS PASSED TO THE OTHER */
   66      /* END (AS GG$MSG:MAXTHRVAL) WHEN SETTING UP THE THROTTLING PARAMETERS. */
   67
   68      DCL KA_OTPBLKLMT(0:15) UBIN WORD STCLASS %INIT(
   69                                     500,     /*  50 Bauds                          */
   70                                     500,     /*  75 Bauds                          */
   71                                     500,     /*  110 Bauds                         */
   72                                     500,     /*  134 Bauds                         */
   73                                     500,     /*  150 Bauds                         */
   74                                     500,     /*  200 Bauds                         */
14:44 JUL 28 '97 KA_GLB.:E05SI                                             3    
   75                                     500,     /*  300 Bauds                         */
   76                                     500,     /*  600 Bauds                         */
   77                                     630,     /*  1050 Bauds                        */
   78                                     720,     /*  1200 Bauds                        */
   79                                     1080,    /*  1800 Bauds                        */
   80                                     1200,    /*  2000 Bauds                        */
   81                                     1440,    /*  2400 Bauds                        */
   82                                     2000,    /*  4800 Bauds                        */
   83                                     2000,    /*  9600 Bauds                        */
   84                                  2000)%ENIT; /* 19200 Bauds                        */
   85
   86      /* ARRAY, INDEXED BY KA$CTX:LINSPD, THAT YIELDS THE MINIMUM */
   87      /* NUMBER OF SPACES FOR VDH TO BE BUFFERING BEFORE IT SHOULD CALL */
   88      /* ASYNC WITH KV$USR_PST.  ALSO CONTROLS OUTPUT OPTIMIZATION (KAW$GNRPST). */
   89
   90      DCL KA_MINSP_FORPST(0:15) UBIN WORD STCLASS %INIT(
   91                                     2,       /*    50 Bauds                        */
   92                                     2,       /*    75 Bauds                        */
   93                                     2,       /*   110 Bauds                        */
   94                                     2,       /*   134 Bauds                        */
   95                                     2,       /*   150 Bauds                        */
   96                                     2,       /*   200 Bauds                        */
   97                                     2,       /*   300 Bauds                        */
   98                                     2,       /*   600 Bauds                        */
   99                                     2,       /*  1050 Bauds                        */
  100                                     2,       /*  1200 Bauds                        */
  101                                     4,       /*  1800 Bauds                        */
  102                                     4,       /*  2000 Bauds                        */
  103                                     4,       /*  2400 Bauds                        */
  104                                     8,       /*  4800 Bauds                        */
  105                                    15,       /*  9600 Bauds                        */
  106                                    15)%ENIT; /* 19200 Bauds                        */
  107
  108      /* ASYNC HANDLER INPUT INTERRUPT LEVEL. */
  109
  110      DCL KA_INPLVL UBIN WORD %INIT(0)%ENIT STCLASS;
  111
14:44 JUL 28 '97 KA_GLB.:E05SI                                             4    
  112      /* ASYNC HANDLER OUTPUT INTERRUPT LEVEL. */
  113
  114      DCL KA_OTPLVL UBIN WORD %INIT(0)%ENIT STCLASS;
  115
  116      /* VDH trace buffer byte size. */
  117
  118      DCL KA_VDHTRCBFRBYTSIZ UBIN WORD %INIT(0)%ENIT STCLASS;
  119
  120      /* LIST OF CHARACTERS, INDEXED BY DEVICE FLOW CONTROL ALGORITHM, THAT */
  121      /* ARE SENT TO THE DEVICE SYNCHRONOUSLY TO MONITOR THE PROGRESS */
  122      /* OF CHARACTERS THRU THE DEVICE'S OUTPUT BUFFER. */
  123
  124      DCL KA_DVCFLWCTRCHR(0:3) UBIN BYTE
  125                                     %INIT(0, %BITBIN(ASCIIENQ), %BITBIN(ASCIIETX), 0)%ENIT STCLASS;
  126      /*
  127       Line error disconnect limit.  Maximum number of framing and
  128       parity errors, or CLA over-runs, to permit in approximately
  129       1 minute.
  130
  131       If this limit is exceeded,
  132
  133       * The line will be disconnected.
  134
  135       * An error log entry will be made (KAV-E$ASN_LINERRDSC).
  136
  137       * If the line is direct-connect (hard-wired), not auto-bauded,
  138         and has a logon string associated with it, it will be disabled.
  139         An FEPCON ENABLE will be required before it is usable again.
  140
  141       A value of X'FF' says don't disconnect on errors.
  142      */
  143      DCL KA_LINERRDSCLMT UBIN WORD %INIT(255)%ENIT STCLASS;
  144
  145      /* Line error log limit.  Number of framing and parity errors, */
  146      /* or CLA over-runs, to permit before logging (via ERRLOG/WRSYSLOG) */
  147      /* the errors. */
  148      /* The ERRLOG code is KAV-E$ASN_LINERRLOG. */
14:44 JUL 28 '97 KA_GLB.:E05SI                                             5    
  149      /* A value of X'FF' says don't log errors. */
  150
  151      DCL KA_LINERRLOGLMT UBIN WORD %INIT(255)%ENIT STCLASS;
  152      %MEND;
  153      %EJECT;

14:44 JUL 28 '97 KA_GLB.:E05SI                                             6    
  154
  155      /* Async statistical data.  This structure is sent to the host */
  156      /* for analysis by the host 'stats' program. */
  157
  158      %MACRO KA_STT(NAME = KA_STT, LVL = 1, LAST = ";", STCLASS = SYMREF);
  159      %LSET LISTDIR = '0'B;
  160      %LSET LISTEXP = '1'B;
  161      %LSET LISTCOM = '0'B;
  162      %LSET LISTSUB = '1'B;
  163      %LSET LVL1 = LVL + 1;
  164      %LSET STR = SUBSTR(CONCAT(TEXTCHAR(STCLASS), '   '), 0, 3);
  165      %IF (STR = 'STA') OR (STR = 'CON') OR (STR = 'EXT');
  166      %LSET INIT = CHARTEXT(' INIT');
  167      %LSET ENIT = CHARTEXT('');
  168      %ELSE;
  169      %LSET INIT = CHARTEXT('/*');
  170      %LSET ENIT = CHARTEXT('*/');
  171      %ENDIF;
  172      %IF LVL = 1;
  173      DCL 1 NAME WALIGNED STCLASS,
  174      %ELSE;
  175      %(LVL) NAME,
  176      %ENDIF;
  177      %KL_REQSTATS(NAME = REQSTATS, LVL = LVL1, STCLASS = STCLASS, LAST = ",",
  178      ASYNC = DISP, VDH = SLCT); /* Select Async/VDH, display async */
  179
  180      %KH$STT (NAME = KHSTT, LVL = LVL1, LAST = ",", STCLASS = STCLASS);
  181
  182      /* Device definition byte utilization. */
  183      /* This is the number of bytes utilized for KA$DVC structures. */
  184
  185            %(LVL+1) DVCDFNBYTUTL UBIN(%(36-4*BITBIN(MODE_FEP))) %INIT(0)%ENIT,
  186
  187      /* Line speed distribution.  Indexed by the line speed */
  188      /* indicator (KA$CTX:LINSPD), yields the number of lines currently */
  189      /* connected (i.e., have a session in progress). */
  190
14:44 JUL 28 '97 KA_GLB.:E05SI                                             7    
  191            %(LVL+1) LINSPDDST(0:15) UBIN(%(36-4*BITBIN(MODE_FEP))) %INIT(0*0)%ENIT,
  192
  193      /* Output buffer get count, for small async output buffers. */
  194
  195            %(LVL+1) OTPBFRGETCNT_SML UBIN(%(36-4*BITBIN(MODE_FEP))) %INIT(0)%ENIT,
  196
  197      /* Output buffer get count, for big async output buffers. */
  198
  199            %(LVL+1) OTPBFRGETCNT_BIG UBIN(%(36-4*BITBIN(MODE_FEP))) %INIT(0)%ENIT,
  200
  201      /* Output buffer full count, for small async output buffers. */
  202
  203            %(LVL+1) OTPBFRFULCNT_SML UBIN(%(36-4*BITBIN(MODE_FEP))) %INIT(0)%ENIT,
  204
  205      /* Output buffer full count, for big async output buffers. */
  206
  207            %(LVL+1) OTPBFRFULCNT_BIG UBIN(%(36-4*BITBIN(MODE_FEP))) %INIT(0)%ENIT,
  208      %KV$BPC (NAME=BPSTT, LVL=LVL1, LAST=LAST, STATS=YES);
  209      %MEND;
  210      %EJECT;

14:44 JUL 28 '97 KA_GLB.:E05SI                                             8    
  211      /*
  212      Miscellaneous async translate table items.
  213      */
  214      %MACRO KA_TRNTBL_MSC(STCLASS = SYMREF READONLY);
  215      %LSET LISTDIR = '0'B;
  216      %LSET LISTEXP = '1'B;
  217      %LSET LISTCOM = '0'B;
  218      %LSET LISTSUB = '1'B;
  219      %LSET STR = SUBSTR(CONCAT(TEXTCHAR(STCLASS), '   '), 0, 3);
  220      %IF (STR = 'STA') OR (STR = 'CON') OR (STR = 'EXT');
  221      %LSET INIT = CHARTEXT(' INIT');
  222      %LSET ENIT = CHARTEXT('');
  223      %ELSE;
  224      %LSET INIT = CHARTEXT('/*');
  225      %LSET ENIT = CHARTEXT('*/');
  226      %ENDIF;
  227
  228      /* Character array that yields the translated values for '$' in */
  229      /* other character sets when translated with an ASC */
  230      /* translation table.  Indexed by new font class. */
  231
  232      DCL KA_TRNTBLCHNCHR_ASC(0:%KV_FNTCLS_HI) UBIN BYTE
  233        %INIT(%BITBIN(ASCIIDLR), %BITBIN('7C'X), %BITBIN('7E'X), 0)%ENIT STCLASS UNAL;
  234
  235      /* Character array that yields the translated values for '$' in */
  236      /* other character sets when translated with an APLB */
  237      /* translation table.  Indexed by new font class. */
  238
  239      DCL KA_TRNTBLCHNCHR_APLB(0:%KV_FNTCLS_HI) UBIN BYTE
  240        %INIT(%BITBIN('CF'X), %BITBIN('C6'X), %BITBIN(ASCIIDLR), 0)%ENIT STCLASS UNAL;
  241
  242      /* Character array that yields the translated values for '$' in */
  243      /* other character sets when translated with an APLT */
  244      /* translation table.  Indexed by new font class. */
  245
  246      DCL KA_TRNTBLCHNCHR_APLT(0:%KV_FNTCLS_HI) UBIN BYTE
  247        %INIT(%BITBIN('CF'X), %BITBIN(ASCIIDLR), %BITBIN('D4'X), 0)%ENIT STCLASS UNAL;
14:44 JUL 28 '97 KA_GLB.:E05SI                                             9    
  248
  249      /* Array of pointers to translate change character arrays. Indexed by */
  250      /* current font class. */
  251
  252      DCL KA_TRNTBLCHNCHR$(0:%KV_FNTCLS_HI) PTR
  253        %INIT(ADDR(KA_TRNTBLCHNCHR_ASC),
  254        ADDR(KA_TRNTBLCHNCHR_APLB),
  255        ADDR(KA_TRNTBLCHNCHR_APLT), ADDR(NIL))%ENIT STCLASS UNAL;
  256
  257      /* Array of pointers to translate tables. Indexed by */
  258      /* font class.  The translations pointed to are full APL (if APL). */
  259
  260      DCL KA_TRNTBL_FUL$(0:%KV_FNTCLS_HI) PTR
  261        %INIT(ADDR(KA_ASC95),
  262        ADDR(KA_APLBF),
  263        ADDR(KA_APLTF), ADDR(NIL))%ENIT STCLASS UNAL;
  264
  265      /* Array of pointers to translate tables. Indexed by */
  266      /* font class.  The translations pointed to are partial APL (if APL). */
  267
  268      DCL KA_TRNTBL_PRT$(0:%KV_FNTCLS_HI) PTR
  269        %INIT(ADDR(KA_ASC95),
  270        ADDR(KA_APLBP),
  271        ADDR(KA_APLTP), ADDR(NIL))%ENIT STCLASS UNAL;
  272
  273      /* Character array that yields the translated values for '$' in */
  274      /* other character sets when translated by the corresponding */
  275      /* translation table.  Indexed by new font class. */
  276
  277      DCL KA$TRNTBLCHNCHR(0:%KV_FNTCLS_HI) UBIN BYTE BASED CALIGNED;
  278
  279      %MEND;

