

15:11 JUL 28 '97 PS_SUBS_C.:E05SI                                          1    
    1      /*M*  PS_SUBS_C   %SUBs for STATS                                             */
    2      /*T***********************************************************/
    3      /*T*                                                         */
    4      /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
    5      /*T*                                                         */
    6      /*T***********************************************************/
    7      /*
    8                  %SUBs for repeat-type DOs
    9      */
   10      %SUB FOREVER="/* forever */ WHILE ('1'B)";
   11      %SUB NEVER="/* never */ WHILE ('0'B)";
   12      /*
   13                  Miscellaneous useful %SUBs
   14      */
   15      %SUB LOGICAL="/* logical */ BIT(1) UNAL";
   16      /*
   17                  %SUBs for M$ERRMSG flag-level parameter
   18      */
   19      %SUB INFORMATION#=1 /* information */;
   20      %SUB WARNING#=2 /* warning */;
   21      %SUB SERIOUS#=3 /* serious */;
   22      %SUB FATAL#=4 /* fatal */;
   23      /*
   24                  %SUBs for RPN OPCODE fields
   25      */
   26      %SUB PUSH_SYMBOL#=0 /* push_symbol# */;
   27      %SUB PUSH_DECIMAL#=1 /* push_decimal# */;
   28      %SUB UNARY_OPERATOR#=2 /* unary_operator# */;
   29      %SUB BINARY_OPERATOR#=3 /* binary_operator# */;
   30      /*
   31                  %SUBs for SCALE field in V_TABLE
   32      */
   33      %SUB LINEAR#=0 /* linear# */;
   34      %SUB LOG#=1 /* log# */;
   35      /*
   36                  %SUBs for defining size of plot-values vector
   37      */
15:11 JUL 28 '97 PS_SUBS_C.:E05SI                                          2    
   38      %SUB MAX_PLOT_VALUES#=40 /* max_plot_values */;
   39      %SUB X_AXIS_POINTS#=40 /* X_axis_points# */;
   40      %SUB Y_AXIS_POINTS#=24 /* Y_axis_points# */;
   41      /*
   42                  %SUBs for printout mode
   43      */
   44      %SUB ABS#=/* abs# */ 0;
   45      %SUB DIFF#=/* diff# */ 1;
   46      %SUB RATE#=/* rate# */ 2;
   47      %SUB PERCENT#=/* percent# */ 3;
   48      /*
   49                  %SUB defining number of "items" known to STATS
   50      */
   51      %SUB ITEMS#=27;
   52      /*
   53                %EQU for number of FEP's to stat  (ie. dim of PS_FEP_?
   54                                                                          */
   55      %EQU PS_MAXFE# = 99 ;
   56      /*
   57                %EQUs for values of PS_FEP_STATUS(fepno)
   58                                                                          */
   59      %EQU FEP_NONE#= 0;       /* This fep not being processed            */
   60                               /* ie. nothing is pending for it           */
   61      %EQU FEP_ABSENT#= 2;     /* FROG says FEP not connected to FECG     */
   62      %EQU FEP_KICKED#= 4;     /* Stats request has been sent, no answer  */
   63      %EQU FEP_INCOMPLETE#= 6; /* Some but not all stats received         */
   64      %EQU FEP_UPDATED#= 8;    /* FEP is finished sending its stats       */
   65      %EQU FEP_LOGGED#= 10;    /* LOG record and individual display done  */
   66      /*
   67                  %SUBs for PS_MODE
   68      */
   69      %SUB DISPLAY_MODE#=0 /* display_mode# */;
   70      %SUB REPLAY_MODE#=1 /* replay_mode# */;
   71      %SUB GLOM_MODE#=2 /* glom_mode# */;
   72      %SUB STATISTICS_MODE#=3 /* statistics_mode# */;
   73      %SUB ANALYZE_MODE#=4 /* analyze_mode# */;
   74      %SUB BARGRAPH_MODE#=5 /* bargraph_mode# */;
15:11 JUL 28 '97 PS_SUBS_C.:E05SI                                          3    
   75      %SUB PLOT_MODE#=6 /* plot_mode# */;
   76      /* Please note that for DISPLAY_MODE# we are fetching live data,
   77         and possibly logging it.  For all other _MODE#'s we are reading
   78         the log file.                                                    */
   79      /*
   80                  Useful macros for STATS' time representations
   81      */
   82      %MACRO EXT_TIME (NAME=*, STCLASS=STATIC);
   83      DCL 1 NAME STCLASS,
   84            2 DAY@ CHAR (3),
   85            2 SEP1 CHAR (2),
   86            2 DATE@ CHAR (10),
   87            2 SEP2 CHAR (4),
   88            2 TIME@ CHAR (11);
   89      %MEND;
   90      /*
   91                  Macros for defining and referencing RPN structures
   92      */
   93      %MACRO DEF_RPN (NAME=RPN, STCLASS="STATIC SYMDEF", SIZE=1);
   94      DCL 1 NAME STCLASS ALIGNED,
   95            2 SIZE# UBIN BYTE UNAL INIT (SIZE),
   96            2 INFO,
   97               3 USED# UBIN BYTE UNAL INIT (0),
   98               3 SYMBOL_FOUND# LOGICAL,
   99               3 SYMBOL_ID# UBIN (17) UNAL,
  100            2 ITEM (0:SIZE),
  101               3 OPCODE# UBIN BYTE UNAL,
  102               3 ARG# UBIN (27) UNAL;
  103      %MEND;
  104      %MACRO REF_RPN (NAME=RPN, STCLASS=" ");
  105      DCL 1 NAME STCLASS ALIGNED,
  106            2 SIZE# UBIN BYTE UNAL,
  107            2 INFO,
  108               3 USED# UBIN BYTE UNAL,
  109               3 SYMBOL_FOUND# LOGICAL,
  110               3 SYMBOL_ID# UBIN (17) UNAL,
  111            2 ITEM (0:0),
15:11 JUL 28 '97 PS_SUBS_C.:E05SI                                          4    
  112               3 OPCODE# UBIN BYTE UNAL,
  113               3 ARG# UBIN (27) UNAL;
  114      %MEND;
  115      /*
  116                  Macro for defining symbolic stuff
  117      */
  118      %MACRO DEF_SYMBOL (VAR=NIL, INDEX=0, OFFSET=0, TITLE=' ',
  119                MODE(ABS=0, DIFF=1, RATE=2, PERCENT=3)=0,
  120                SCALE(LINEAR=0, LOG=1)=0,
  121                LAST(NO=",", YES=";")=",",
  122                LOW=0, HIGH=0);
  123            2 *,
  124               3 * PTR INIT (ADDR(VAR)),
  125               3 * UBIN (2) UNAL INIT (SCALE),
  126               3 * UBIN (17) UNAL INIT (LOW),
  127               3 * UBIN (17) UNAL INIT (HIGH),
  128               3 * UBIN BYTE UNAL INIT (INDEX),
  129               3 * UBIN BYTE UNAL INIT (OFFSET),
  130               3 * UBIN BYTE UNAL INIT (MODE),
  131               3 * UBIN BYTE UNAL INIT (LENGTHC(TITLE)),
  132               3 * CHAR (8) INIT (TITLE) LAST
  133      %MEND;
  134      /*
  135                  %SUBs for stuff in M$GETPM buffer - see P_PMDAT_D module.
  136      */
  137      %SUB P_SPARE#=0 /* P_SPARE# */;
  138      %SUB CHT#=/* CHT# */ 1;
  139      %SUB DCT#=/* DCT# */ 2;
  140      %SUB DVT#=/* DVT# */ 3;
  141      %SUB P_RUE#=/* P_RUE# */ 4;
  142      %SUB P_SCHD#=/* P_SCHD# */ 5;
  143      %SUB P_ETMF#=/* P_ETMF# */ 6;
  144      %SUB P_NINTS#=/* P_NINTS# */ 7;
  145      %SUB P_RT90#=/* P_RT90# */ 8;
  146      %SUB P_RT#=/* P_RT# */ 9;
  147      %SUB P_STARTUP#=/* P_STARTUP# */ 10;
  148      %SUB S_CTUIS#=/* S_CTUIS# */ 11;
15:11 JUL 28 '97 PS_SUBS_C.:E05SI                                          5    
  149      %SUB S_NSCPU#=/* S_NSCPU# */ 12;
  150      %SUB SL_QUAN#=/* SL_QUAN# */ 13;
  151      %SUB SL_QMIN#=/* SL_QMIN# */ 14;
  152      %SUB S_CUIS#=/* S_CUIS# */ 15;
  153      %SUB S_MUIS#=/* S_MUIS# */ 16;
  154      %SUB S_PCU#=/* S_PCU# */ 17;
  155      %SUB S_PORTNR#=/* S_PORTNR# */ 18;
  156      %SUB S_STOP#=/* S_STOP# */ 19;
  157      %SUB S_UXEQTIME#=/* S_UXEQTIME# */ 20;
  158      %SUB S_USRVTIME#=/* S_USRVTIME# */ 21;
  159      %SUB S_MXEQTIME#=/* S_MXEQTIME# */ 22;
  160      %SUB S_MIDLTIME#=/* S_MIDLTIME# */ 23;
  161      %SUB S_MIDLWIO#=/* S_MIDLWIO# */ 24;
  162      %SUB P_UXEQTIME#=/* P_UXEQTIME# */ 25;
  163      %SUB P_USRVTIME#=/* P_USRVTIME# */ 26;
  164      %SUB P_RESOURCE#=/* P_RESOURCE# */ 27;
  165      %SUB P_PMME_TIME#=/* P_PMME_TIME# */ 28;
  166      %SUB P_IOS#=/* P_IOS# */ 29;
  167      %SUB P_INTCOMP#=/* P_INTCOMP# */ 30;
  168      %SUB H_FLTCNT#=/* H_FLTCNT# */ 31;
  169      %SUB P_CALCNT#=/* P_CALCNT# */ 32;
  170      %SUB P_CALCOMP#=/* P_CALCOMP# */ 33;
  171      %SUB P_UPTIME#=/* P_UPTIME# */ 34;
  172      %SUB P_AVGETMF#=/* P_AVGETMF# */ 35;
  173      %SUB P_AVGRT90#=/* P_AVGRT90# */ 36;
  174      %SUB MM_BPPC#=/* MM_BPPC# */ 37;
  175      %SUB MM_SUSPECTS#=/* MM_SUSPECTS# */ 38;
  176      %SUB MM_IN_TEST#=/* MM_IN_TEST# */ 39;
  177      /* SUB 40 is available */
  178      %SUB P_IOLOAD#=/* P_IOLOAD# */ 41;
  179      %SUB P_AVGIOL#=/* P_AVGIOL# */ 42;
  180      %SUB P_AUIS#=/* P_AUIS# */ 43;
  181      %SUB P_STOPTIME#=/* P_STOPTIME# */ 44;
  182      %SUB P_NOW#=/* P_NOW# */ 45;
  183      %SUB S_MIDLWRES#=/* S_MIDLWRES# */ 46;
  184      %SUB S_MIDLWRESIO#=/* S_MIDLWRESIO# */ 47;
  185      %SUB P_USERSIZE#=/* P_USERSIZE# */ 48;
15:11 JUL 28 '97 PS_SUBS_C.:E05SI                                          6    
  186      %SUB B$P#=/* B$P# */ 49;
  187      %SUB NI_IOMS#=/* NI_IOMS# */ 50;
  188      %SUB P_NSCPU#=/* P_NSCPU# */ 51;
  189      %SUB FMC_STATS#=52 /* FMC_STATS# */;
  190      %SUB P_AVAIL_MEM#=53 /* MM_FPPC + MM_AUTO +MM_CGQFREEPGS */;
  191      %SUB P_AVGAVAIL_MEM#=54 /* P_AVGAVAIL_MEM# */;
  192      %SUB MM_SPTRNC#=55 /* MM_SPTRNC# */;
  193      %SUB MM_IOTRNC#=56 /* MM_IOTRNC# */;

