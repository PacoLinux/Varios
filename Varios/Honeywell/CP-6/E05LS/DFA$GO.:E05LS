VERSION E05

PL6.E3A0      #001=DFA$GO File=DFA$GO.:E05TSI                                    TUE 07/29/97 14:33 Page:1    
        1        1        /*M* DFA$GO - GO to an FPRG in the FEP.  */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* DMR,PLM=5,IND=5,CSU=3,EXM=0,ECU=3,MOC,DCI=5,CRT=5 */
        8        8        /**/
        9        9        /*P* NAME:  DFA$GO
       10       10             PURPOSE:
       11       11                    Do GO to an FPRG    */
       12       12        /*D* NAME:  DFA$GO
       13       13             PURPOSE:
       14       14                    Do a GO to an FPRG
       15       15             CALL:  DFA$GO ALTRET(NOGO)
       16       16                    Alternate return if something goes wrong writing a
       17       17                    message to FD.
       18       18             INPUT: S_D.CURRENT_FPRG_CONTEXT$ points to the context for the
       19       19                    FPRG to GO.
       20       20             DESCRIPTION:
       21       21                    Builds a GO message in S_D.L6_MESSAGE_BUF and calls
       22       22                    DFQ$WRITE_FD to write the message to FD.              */
       23       23        /**/
       24       24        DFA$GO: PROC(DO_CALLED) ALTRET;
       25       25        /* Parameters */
       26       26    1   DCL DO_CALLED BIT(1) ALIGNED;
       27       27        /* Local Auto */
       28       28    1   DCL FPRG$ PTR;
       29       29    1   DCL STEP_SIZE UBIN;
       30       30    1   DCL IC UBIN;
       31       31        /* Includes and based structures */
       32       32        %INCLUDE CP_6;
       33      113        %FPT_WAIT(FPTN=FPT_WAIT,STCLASS=SYMREF);
       34      127        %FPT_WAIT(FPTN=FPTWAIT,STCLASS=);
       35      141        %INCLUDE DD_ERR_C;
       36      538        %INCLUDE XUH_MACRO_C;
       37      622        %INCLUDE DD_SD_M;
PL6.E3A0      #001=DFA$GO File=DFA$GO.:E05TSI                                    TUE 07/29/97 14:33 Page:2    
       38     1958        %S_D;
       39     3276        %S_D_PTRS;
       40     3313        %INCLUDE GD$MSG_M;
       41     3477        %GD$MSG(FPTN=GD$MSG,STCLASS="BASED(S_D_L6_MESSAGE$)",L6=YES,L6PTR="UBIN(32) UNAL");
       42     3633        %INCLUDE DD$BASED;
       43     4936        %FPRG$CONTEXT;
       44     4999        %GO(NAME=GO$CMD);
       45     5019        %INCLUDE GD_EQUS_E;
       46     5180        %INCLUDE DD_PSUBS_C;
       47     5655        /* Entry DCLs */
       48     5656    1   DCL DDE$ERROR ENTRY;
       49     5657    1   DCL DFA$KILL_FPRG ENTRY(1);
       50     5658    1   DCL DFA$STEP_SIZE ENTRY(2) ALTRET;
       51     5659    1   DCL DFQ$WRITE_FD ENTRY(1) ALTRET;
       52     5660    1   DCL DFQ$READ_FD ENTRY(2) ALTRET;
       53     5661    1   DCL DUE$ERRMSG   ENTRY;
       54     5662        /**/
       55     5663                                           /* Build a GO message to send to the FD */
       56     5664    1        IF DO_CALLED AND S_D.DO$ -> GO$CMD.STEP
       57     5665    2        THEN DO;
       58     5666    2             IF S_D.DO$ -> GO$CMD.GOPOS
       59     5667    3             THEN DO;
       60     5668    3                  IC = S_D.DO$ -> GO$CMD.POSITION;
       61     5669    3                  CALL DFA$STEP_SIZE(STEP_SIZE, IC) ALTRET(ARET);
       62     5670    3                END;
       63     5671    2             ELSE CALL DFA$STEP_SIZE(STEP_SIZE) ALTRET(ARET);
       64     5672    2           END;
       65     5673    1        GD$MSG = '0'B;
       66     5674    1        GD$MSG.FNC = %GD#RQSGO;
       67     5675    1        IF DO_CALLED
       68     5676    2        THEN DO;
       69     5677    2             IF S_D.DO$ -> GO$CMD.STEP
       70     5678    3             THEN DO;
       71     5679    3                  GD$MSG.SUBFB.STEP = '1'B;
       72     5680    3                  S_D.STEP_L6 = '1'B;
       73     5681    3                  GD$MSG.GORQS.SIZE = STEP_SIZE;
       74     5682    3                END;
PL6.E3A0      #001=DFA$GO File=DFA$GO.:E05TSI                                    TUE 07/29/97 14:33 Page:3    
       75     5683    2             IF S_D.DO$ -> GO$CMD.TRAP
       76     5684    2             THEN GD$MSG.SUBFB.GOTRAP = '1'B;
       77     5685    2             IF S_D.DO$ -> GO$CMD.GOPOS
       78     5686    3             THEN DO;
       79     5687    3                  GD$MSG.SUBFB.ADR = '1'B;
       80     5688    3                  GD$MSG.GORQS.ADR$ = S_D.DO$ -> GO$CMD.POSITION;
       81     5689    3                END;
       82     5690    2           END;
       83     5691    1        FPRG$ = S_D.CURRENT_FPRG_CONTEXT$;
       84     5692    1        CALL DFQ$WRITE_FD (FPRG$) ALTRET(ERR);
       85     5693    1        FPRG$ -> FPRG$CONTEXT.STATE = %RUNNING;
       86     5694    1        IF FPRG$ -> FPRG$CONTEXT.INTERPRETIVE
       87     5695    1        THEN FPRG$ -> FPRG$CONTEXT.STEP_MODE = C@STATEMENTS; /* C@STATEMENTS */
       88     5696    1        IF S_D.DO$ -> GO$CMD.TRAP
       89     5697    2        THEN DO;
       90     5698    2             FPTWAIT = FPT_WAIT;
       91     5699    2             FPTWAIT.V_ = VECTOR(FPTWAIT.V);
       92     5700    2             CALL M$WAIT(FPTWAIT);
       93     5701    2             IF NOT S_D.DEBUG_CMD THEN CALL DFA$KILL_FPRG;
       94     5702    2             CALL DFQ$READ_FD (FPRG$, '1'B)
       95     5703    3             WHENALTRETURN DO;
       96     5704    3                  RETURN;
       97     5705    3                END;
       98     5706    2             FPRG$ -> FPRG$CONTEXT.STATE = %STOPPED;
       99     5707    2             IF GD$MSG.FNC = %GD#RSPNOTRAPHAND
      100     5708    3             THEN DO;
      101     5709    3                  S_D.ERROR = E@NO_CONTROL; /* E@NO_CONTROL */
      102     5710    3                  GOTO ARET;
      103     5711    3                END;
      104     5712    2             IF GD$MSG.FNC = %GD#RSPNOTUSERTRAP
      105     5713    3             THEN DO;
      106     5714    3                  S_D.ERROR = E@NO_TRAP;   /* E@NO_TRAP */
      107     5715    3                  GOTO ARET;
      108     5716    3                END;
      109     5717    2             S_D.CURRENT_FPRG_CONTEXT$ = FPRG$;
      110     5718    2             UNWIND TO S_D.DO_MESSAGE;
      111     5719    2           END;
PL6.E3A0      #001=DFA$GO File=DFA$GO.:E05TSI                                    TUE 07/29/97 14:33 Page:4    
      112     5720    1        RETURN;
      113     5721    1   ERR: ;
      114     5722    1        CALL DUE$ERRMSG;
      115     5723    1        ALTRETURN;
      116     5724    1   ARET:
      117     5725    1        CALL DDE$ERROR;
      118     5726    1        ALTRETURN;
      119     5727    1   END DFA$GO;

PL6.E3A0      #001=DFA$GO File=DFA$GO.:E05TSI                                    TUE 07/29/97 14:33 Page:5    
--  Include file information  --

   DD_PSUBS_C.:E05TOU  is referenced.
   GD_EQUS_E.:E05TOU  is referenced.
   DD$BASED.:E05TOU  is referenced.
   GD$MSG_M.:E05TOU  is referenced.
   DD_SD_M.:E05TOU  is referenced.
   XUH_MACRO_C.:E05TOU  is referenced.
   DD_ERR_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure DFA$GO.

   Procedure DFA$GO requires 153 words for executable code.
   Procedure DFA$GO requires 16 words of local(AUTO) storage.

    No errors detected in file DFA$GO.:E05TSI    .

PL6.E3A0      #001=DFA$GO File=DFA$GO.:E05TSI                                    TUE 07/29/97 14:33 Page:6    

 Object Unit name= DFA$GO                                     File name= DFA$GO.:E05TOU
 UTS= JUL 29 '97 14:33:18.68 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1   Proc  even  none   153    231  DFA$GO
    2  RoData even  none     4      4  DFA$GO

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     1      0   yes    yes     yes      Std        1  DFA$GO

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       2 DFA$STEP_SIZE
 yes     yes           Std       2 DFQ$READ_FD
 yes     yes           Std       1 DFQ$WRITE_FD
         yes           Std       0 DUE$ERRMSG
         yes           Std       1 DFA$KILL_FPRG
         yes           Std       0 DDE$ERROR
                       nStd      0 X66_AUTO_1
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET
                       nStd      0 X66_AUNWIND
                       nStd      0 X66_AALT
PL6.E3A0      #001=DFA$GO File=DFA$GO.:E05TSI                                    TUE 07/29/97 14:33 Page:7    

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                                  FPT_WAIT                         r    S_D$
r    S_D_L6_MESSAGE$                       B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
PL6.E3A0      #001=DFA$GO File=DFA$GO.:E05TSI                                    TUE 07/29/97 14:33 Page:8    


        1        1        /*M* DFA$GO - GO to an FPRG in the FEP.  */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* DMR,PLM=5,IND=5,CSU=3,EXM=0,ECU=3,MOC,DCI=5,CRT=5 */
        8        8        /**/
        9        9        /*P* NAME:  DFA$GO
       10       10             PURPOSE:
       11       11                    Do GO to an FPRG    */
       12       12        /*D* NAME:  DFA$GO
       13       13             PURPOSE:
       14       14                    Do a GO to an FPRG
       15       15             CALL:  DFA$GO ALTRET(NOGO)
       16       16                    Alternate return if something goes wrong writing a
       17       17                    message to FD.
       18       18             INPUT: S_D.CURRENT_FPRG_CONTEXT$ points to the context for the
       19       19                    FPRG to GO.
       20       20             DESCRIPTION:
       21       21                    Builds a GO message in S_D.L6_MESSAGE_BUF and calls
       22       22                    DFQ$WRITE_FD to write the message to FD.              */
       23       23        /**/
       24       24        DFA$GO: PROC(DO_CALLED) ALTRET;

     24  1 000000   000000 700200 xent  DFA$GO       TSX0  ! X66_AUTO_1
         1 000001   000020 000001                    ZERO    16,1

       25       25        /* Parameters */
       26       26    1   DCL DO_CALLED BIT(1) ALIGNED;
       27       27        /* Local Auto */
       28       28    1   DCL FPRG$ PTR;
       29       29    1   DCL STEP_SIZE UBIN;
       30       30    1   DCL IC UBIN;
       31       31        /* Includes and based structures */
       32       32        %INCLUDE CP_6;
PL6.E3A0      #001=DFA$GO File=DFA$GO.:E05TSI                                    TUE 07/29/97 14:33 Page:9    
       33      113        %FPT_WAIT(FPTN=FPT_WAIT,STCLASS=SYMREF);
       34      127        %FPT_WAIT(FPTN=FPTWAIT,STCLASS=);
       35      141        %INCLUDE DD_ERR_C;
       36      538        %INCLUDE XUH_MACRO_C;
       37      622        %INCLUDE DD_SD_M;
       38     1958        %S_D;
       39     3276        %S_D_PTRS;
       40     3313        %INCLUDE GD$MSG_M;
       41     3477        %GD$MSG(FPTN=GD$MSG,STCLASS="BASED(S_D_L6_MESSAGE$)",L6=YES,L6PTR="UBIN(32) UNAL");
       42     3633        %INCLUDE DD$BASED;
       43     4936        %FPRG$CONTEXT;
       44     4999        %GO(NAME=GO$CMD);
       45     5019        %INCLUDE GD_EQUS_E;
       46     5180        %INCLUDE DD_PSUBS_C;
       47     5655        /* Entry DCLs */
       48     5656    1   DCL DDE$ERROR ENTRY;
       49     5657    1   DCL DFA$KILL_FPRG ENTRY(1);
       50     5658    1   DCL DFA$STEP_SIZE ENTRY(2) ALTRET;
       51     5659    1   DCL DFQ$WRITE_FD ENTRY(1) ALTRET;
       52     5660    1   DCL DFQ$READ_FD ENTRY(2) ALTRET;
       53     5661    1   DCL DUE$ERRMSG   ENTRY;
       54     5662        /**/
       55     5663                                           /* Build a GO message to send to the FD */
       56     5664    1        IF DO_CALLED AND S_D.DO$ -> GO$CMD.STEP

   5664  1 000002   200003 470500                    LDP0    @DO_CALLED,,AUTO
         1 000003   000000 234100                    SZN     0,,PR0
         1 000004   000035 605000 1                  TPL     s:5673
         1 000005   000000 471400 xsym               LDP1    S_D$
         1 000006   100031 473500                    LDP3    25,,PR1
         1 000007   300001 236100                    LDQ     1,,PR3
         1 000010   200000 316007                    CANQ    65536,DL
         1 000011   000035 600000 1                  TZE     s:5673

       57     5665    2        THEN DO;

       58     5666    2             IF S_D.DO$ -> GO$CMD.GOPOS
PL6.E3A0      #001=DFA$GO File=DFA$GO.:E05TSI                                    TUE 07/29/97 14:33 Page:10   

   5666  1 000012   400000 316007                    CANQ    -131072,DL
         1 000013   000027 600000 1                  TZE     s:5671

       59     5667    3             THEN DO;

       60     5668    3                  IC = S_D.DO$ -> GO$CMD.POSITION;

   5668  1 000014   300002 235100                    LDA     2,,PR3
         1 000015   200006 755100                    STA     IC,,AUTO

       61     5669    3                  CALL DFA$STEP_SIZE(STEP_SIZE, IC) ALTRET(ARET);

   5669  1 000016   200006 634500                    EPPR4   IC,,AUTO
         1 000017   200017 454500                    STP4    FPTWAIT+7,,AUTO
         1 000020   200005 635500                    EPPR5   STEP_SIZE,,AUTO
         1 000021   200016 455500                    STP5    FPTWAIT+6,,AUTO
         1 000022   200016 630500                    EPPR0   FPTWAIT+6,,AUTO
         1 000023   000020 631400 xsym               EPPR1   B_VECTNIL+16
         1 000024   000000 701000 xent               TSX1    DFA$STEP_SIZE
         1 000025   000225 702000 1                  TSX2    ARET

       62     5670    3                END;

   5670  1 000026   000035 710000 1                  TRA     s:5673

       63     5671    2             ELSE CALL DFA$STEP_SIZE(STEP_SIZE) ALTRET(ARET);

   5671  1 000027   200005 634500                    EPPR4   STEP_SIZE,,AUTO
         1 000030   200016 454500                    STP4    FPTWAIT+6,,AUTO
         1 000031   200016 630500                    EPPR0   FPTWAIT+6,,AUTO
         1 000032   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000033   000000 701000 xent               TSX1    DFA$STEP_SIZE
         1 000034   000225 702000 1                  TSX2    ARET

       64     5672    2           END;

PL6.E3A0      #001=DFA$GO File=DFA$GO.:E05TSI                                    TUE 07/29/97 14:33 Page:11   
       65     5673    1        GD$MSG = '0'B;

   5673  1 000035   000000 470400 xsym               LDP0    S_D_L6_MESSAGE$
         1 000036   003100 060400                    CSL     bolr='003'O
         1 000037   000002 000001 xsym               BDSC    B_VECTNIL+2              by=0,bit=0,n=1
         1 000040   000000 004720                    BDSC    0,,PR0                   by=0,bit=0,n=2512

       66     5674    1        GD$MSG.FNC = %GD#RQSGO;

   5674  1 000041   000000 236100                    LDQ     0,,PR0
         1 000042   000000 376000 2                  ANQ     0
         1 000043   010000 276003                    ORQ     4096,DU
         1 000044   000000 756100                    STQ     0,,PR0

       67     5675    1        IF DO_CALLED

   5675  1 000045   200003 471500                    LDP1    @DO_CALLED,,AUTO
         1 000046   100000 234100                    SZN     0,,PR1
         1 000047   000106 605000 1                  TPL     s:5691

       68     5676    2        THEN DO;

       69     5677    2             IF S_D.DO$ -> GO$CMD.STEP

   5677  1 000050   000000 473400 xsym               LDP3    S_D$
         1 000051   300031 474500                    LDP4    25,,PR3
         1 000052   400001 236100                    LDQ     1,,PR4
         1 000053   200000 316007                    CANQ    65536,DL
         1 000054   000066 600000 1                  TZE     s:5683

       70     5678    3             THEN DO;

       71     5679    3                  GD$MSG.SUBFB.STEP = '1'B;

   5679  1 000055   000100 236003                    LDQ     64,DU
         1 000056   000000 256100                    ORSQ    0,,PR0

PL6.E3A0      #001=DFA$GO File=DFA$GO.:E05TSI                                    TUE 07/29/97 14:33 Page:12   
       72     5680    3                  S_D.STEP_L6 = '1'B;

   5680  1 000057   400000 236003                    LDQ     -131072,DU
         1 000060   305274 756100                    STQ     2748,,PR3

       73     5681    3                  GD$MSG.GORQS.SIZE = STEP_SIZE;

   5681  1 000061   200005 236100                    LDQ     STEP_SIZE,,AUTO
         1 000062   000014 736000                    QLS     12
         1 000063   000002 676100                    ERQ     2,,PR0
         1 000064   000001 376000 2                  ANQ     1
         1 000065   000002 656100                    ERSQ    2,,PR0

       74     5682    3                END;

       75     5683    2             IF S_D.DO$ -> GO$CMD.TRAP

   5683  1 000066   300031 474500                    LDP4    25,,PR3
         1 000067   400001 236100                    LDQ     1,,PR4
         1 000070   100000 316007                    CANQ    32768,DL
         1 000071   000074 600000 1                  TZE     s:5685

       76     5684    2             THEN GD$MSG.SUBFB.GOTRAP = '1'B;

   5684  1 000072   000040 236003                    LDQ     32,DU
         1 000073   000000 256100                    ORSQ    0,,PR0

       77     5685    2             IF S_D.DO$ -> GO$CMD.GOPOS

   5685  1 000074   300031 474500                    LDP4    25,,PR3
         1 000075   400001 236100                    LDQ     1,,PR4
         1 000076   400000 316007                    CANQ    -131072,DL
         1 000077   000106 600000 1                  TZE     s:5691

       78     5686    3             THEN DO;

       79     5687    3                  GD$MSG.SUBFB.ADR = '1'B;
PL6.E3A0      #001=DFA$GO File=DFA$GO.:E05TSI                                    TUE 07/29/97 14:33 Page:13   

   5687  1 000100   000200 236003                    LDQ     128,DU
         1 000101   000000 256100                    ORSQ    0,,PR0

       80     5688    3                  GD$MSG.GORQS.ADR$ = S_D.DO$ -> GO$CMD.POSITION;

   5688  1 000102   300031 474500                    LDP4    25,,PR3
         1 000103   003100 061500                    CSR     bolr='003'O
         1 000104   400002 000044                    BDSC    2,,PR4                   by=0,bit=0,n=36
         1 000105   000000 270040                    BDSC    0,,PR0                   by=1,bit=7,n=32

       81     5689    3                END;

       82     5690    2           END;

       83     5691    1        FPRG$ = S_D.CURRENT_FPRG_CONTEXT$;

   5691  1 000106   000000 473400 xsym               LDP3    S_D$
         1 000107   300102 236100                    LDQ     66,,PR3
         1 000110   200004 756100                    STQ     FPRG$,,AUTO

       84     5692    1        CALL DFQ$WRITE_FD (FPRG$) ALTRET(ERR);

   5692  1 000111   200004 634500                    EPPR4   FPRG$,,AUTO
         1 000112   200016 454500                    STP4    FPTWAIT+6,,AUTO
         1 000113   200016 630500                    EPPR0   FPTWAIT+6,,AUTO
         1 000114   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000115   000000 701000 xent               TSX1    DFQ$WRITE_FD
         1 000116   000221 702000 1                  TSX2    ERR

       85     5693    1        FPRG$ -> FPRG$CONTEXT.STATE = %RUNNING;

   5693  1 000117   200004 470500                    LDP0    FPRG$,,AUTO
         1 000120   000001 236003                    LDQ     1,DU
         1 000121   000001 552120                    STBQ    1,'20'O,PR0

       86     5694    1        IF FPRG$ -> FPRG$CONTEXT.INTERPRETIVE
PL6.E3A0      #001=DFA$GO File=DFA$GO.:E05TSI                                    TUE 07/29/97 14:33 Page:14   

   5694  1 000122   200004 470500                    LDP0    FPRG$,,AUTO
         1 000123   000001 236100                    LDQ     1,,PR0
         1 000124   200000 316003                    CANQ    65536,DU
         1 000125   000130 600000 1                  TZE     s:5696

       87     5695    1        THEN FPRG$ -> FPRG$CONTEXT.STEP_MODE = C@STATEMENTS; /* C@STATEMENTS */

   5695  1 000126   001107 220003                    LDX0    583,DU
         1 000127   000033 440100                    SXL0    27,,PR0

       88     5696    1        IF S_D.DO$ -> GO$CMD.TRAP

   5696  1 000130   000000 471400 xsym               LDP1    S_D$
         1 000131   100031 473500                    LDP3    25,,PR1
         1 000132   300001 236100                    LDQ     1,,PR3
         1 000133   100000 316007                    CANQ    32768,DL
         1 000134   000220 600000 1                  TZE     s:5720

       89     5697    2        THEN DO;

       90     5698    2             FPTWAIT = FPT_WAIT;

   5698  1 000135   000100 100400                    MLR     fill='000'O
         1 000136   000000 000030 xsym               ADSC9   FPT_WAIT                 cn=0,n=24
         1 000137   200010 000030                    ADSC9   FPTWAIT,,AUTO            cn=0,n=24

       91     5699    2             FPTWAIT.V_ = VECTOR(FPTWAIT.V);

   5699  1 000140   000002 235000 2                  LDA     2
         1 000141   200016 452500                    STP2    FPTWAIT+6,,AUTO
         1 000142   200016 236100                    LDQ     FPTWAIT+6,,AUTO
         1 000143   000014 036003                    ADLQ    12,DU
         1 000144   200010 757100                    STAQ    FPTWAIT,,AUTO

       92     5700    2             CALL M$WAIT(FPTWAIT);

PL6.E3A0      #001=DFA$GO File=DFA$GO.:E05TSI                                    TUE 07/29/97 14:33 Page:15   
   5700  1 000145   200010 630500                    EPPR0   FPTWAIT,,AUTO
         1 000146   020006 713400                    CLIMB   8198
         1 000147   400400 401760                    pmme    nvectors=2

       93     5701    2             IF NOT S_D.DEBUG_CMD THEN CALL DFA$KILL_FPRG;

   5701  1 000150   000000 470400 xsym               LDP0    S_D$
         1 000151   004665 234100                    SZN     2485,,PR0
         1 000152   000156 604000 1                  TMI     s:5702

   5701  1 000153   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 000154   000000 701000 xent               TSX1    DFA$KILL_FPRG
         1 000155   000000 011000                    NOP     0

       94     5702    2             CALL DFQ$READ_FD (FPRG$, '1'B)

   5702  1 000156   000003 236000 2                  LDQ     3
         1 000157   200017 756100                    STQ     FPTWAIT+7,,AUTO
         1 000160   200004 630500                    EPPR0   FPRG$,,AUTO
         1 000161   200016 450500                    STP0    FPTWAIT+6,,AUTO
         1 000162   200016 630500                    EPPR0   FPTWAIT+6,,AUTO
         1 000163   000020 631400 xsym               EPPR1   B_VECTNIL+16
         1 000164   000000 701000 xent               TSX1    DFQ$READ_FD
         1 000165   000167 702000 1                  TSX2    s:5704
         1 000166   000170 710000 1                  TRA     s:5706

       95     5703    3             WHENALTRETURN DO;

       96     5704    3                  RETURN;

   5704  1 000167   000000 702200 xent               TSX2  ! X66_ARET

       97     5705    3                END;
       98     5706    2             FPRG$ -> FPRG$CONTEXT.STATE = %STOPPED;

   5706  1 000170   200004 470500                    LDP0    FPRG$,,AUTO
         1 000171   000002 236003                    LDQ     2,DU
PL6.E3A0      #001=DFA$GO File=DFA$GO.:E05TSI                                    TUE 07/29/97 14:33 Page:16   
         1 000172   000001 552120                    STBQ    1,'20'O,PR0

       99     5707    2             IF GD$MSG.FNC = %GD#RSPNOTRAPHAND

   5707  1 000173   000000 470400 xsym               LDP0    S_D_L6_MESSAGE$
         1 000174   000000 236100                    LDQ     0,,PR0
         1 000175   776000 376003                    ANQ     -1024,DU
         1 000176   142000 116003                    CMPQ    50176,DU
         1 000177   000204 601000 1                  TNZ     s:5712

      100     5708    3             THEN DO;

      101     5709    3                  S_D.ERROR = E@NO_CONTROL; /* E@NO_CONTROL */

   5709  1 000200   000134 235007                    LDA     92,DL
         1 000201   000000 471400 xsym               LDP1    S_D$
         1 000202   100013 755100                    STA     11,,PR1

      102     5710    3                  GOTO ARET;

   5710  1 000203   000225 710000 1                  TRA     ARET

      103     5711    3                END;
      104     5712    2             IF GD$MSG.FNC = %GD#RSPNOTUSERTRAP

   5712  1 000204   176000 116003                    CMPQ    64512,DU
         1 000205   000212 601000 1                  TNZ     s:5717

      105     5713    3             THEN DO;

      106     5714    3                  S_D.ERROR = E@NO_TRAP;   /* E@NO_TRAP */

   5714  1 000206   000144 235007                    LDA     100,DL
         1 000207   000000 471400 xsym               LDP1    S_D$
         1 000210   100013 755100                    STA     11,,PR1

      107     5715    3                  GOTO ARET;
PL6.E3A0      #001=DFA$GO File=DFA$GO.:E05TSI                                    TUE 07/29/97 14:33 Page:17   

   5715  1 000211   000225 710000 1                  TRA     ARET

      108     5716    3                END;
      109     5717    2             S_D.CURRENT_FPRG_CONTEXT$ = FPRG$;

   5717  1 000212   200004 236100                    LDQ     FPRG$,,AUTO
         1 000213   000000 471400 xsym               LDP1    S_D$
         1 000214   100102 756100                    STQ     66,,PR1

      110     5718    2             UNWIND TO S_D.DO_MESSAGE;

   5718  1 000215   106770 237300                    LDAQ  ! 3576,,PR1
         1 000216   000000 700200 xent               TSX0  ! X66_AUNWIND
         1 000217   000000 000200                    ZERO    0,128

      111     5719    2           END;
      112     5720    1        RETURN;

   5720  1 000220   000000 702200 xent               TSX2  ! X66_ARET

   5717  1 000221                       ERR          null
      113     5721    1   ERR: ;
      114     5722    1        CALL DUE$ERRMSG;

   5722  1 000221   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 000222   000000 701000 xent               TSX1    DUE$ERRMSG
         1 000223   000000 011000                    NOP     0

      115     5723    1        ALTRETURN;

   5723  1 000224   000000 702200 xent               TSX2  ! X66_AALT

      116     5724    1   ARET:
      117     5725    1        CALL DDE$ERROR;

   5725  1 000225   000002 631400 xsym  ARET         EPPR1   B_VECTNIL+2
PL6.E3A0      #001=DFA$GO File=DFA$GO.:E05TSI                                    TUE 07/29/97 14:33 Page:18   
         1 000226   000000 701000 xent               TSX1    DDE$ERROR
         1 000227   000000 011000                    NOP     0

      118     5726    1        ALTRETURN;

   5726  1 000230   000000 702200 xent               TSX2  ! X66_AALT

(unnamed)
 Sect OctLoc
   2     000   001777 777777   001777 770000   000001 777640   000030 006000    ................
      119     5727    1   END DFA$GO;

PL6.E3A0      #001=DFA$GO File=DFA$GO.:E05TSI                                    TUE 07/29/97 14:33 Page:19   
--  Include file information  --

   DD_PSUBS_C.:E05TOU  is referenced.
   GD_EQUS_E.:E05TOU  is referenced.
   DD$BASED.:E05TOU  is referenced.
   GD$MSG_M.:E05TOU  is referenced.
   DD_SD_M.:E05TOU  is referenced.
   XUH_MACRO_C.:E05TOU  is referenced.
   DD_ERR_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure DFA$GO.

   Procedure DFA$GO requires 153 words for executable code.
   Procedure DFA$GO requires 16 words of local(AUTO) storage.

    No errors detected in file DFA$GO.:E05TSI    .
PL6.E3A0      #001=DFA$GO File=DFA$GO.:E05TSI                                    TUE 07/29/97 14:33 Page:20   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=DFA$GO File=DFA$GO.:E05TSI                                    TUE 07/29/97 14:33 Page:21   
          MINI XREF LISTING

ARET
      5725**LABEL    5669--CALLALT  5671--CALLALT  5710--GOTO     5715--GOTO
DDE$ERROR
      5656**DCL-ENT  5725--CALL
DFA$KILL_FPRG
      5657**DCL-ENT  5701--CALL
DFA$STEP_SIZE
      5658**DCL-ENT  5669--CALL     5671--CALL
DFQ$READ_FD
      5660**DCL-ENT  5702--CALL
DFQ$WRITE_FD
      5659**DCL-ENT  5692--CALL
DO_CALLED
        26**DCL        24--PROC     5664>>IF       5675>>IF
DUE$ERRMSG
      5661**DCL-ENT  5722--CALL
ERR
      5717**LABEL    5692--CALLALT
FPRG$
        28**DCL      5691<<ASSIGN   5692<>CALL     5693>>ASSIGN   5694>>IF       5695>>ASSIGN   5702<>CALL
      5706>>ASSIGN   5717>>ASSIGN
FPRG$CONTEXT.INTERPRETIVE
      4942**DCL      5694>>IF
FPRG$CONTEXT.STATE
      4952**DCL      5693<<ASSIGN   5706<<ASSIGN
FPRG$CONTEXT.STEP_MODE
      4976**DCL      5695<<ASSIGN
FPTWAIT
       138**DCL      5698<<ASSIGN   5700<>CALL
FPTWAIT.V
       139**DCL      5699--ASSIGN
FPTWAIT.V_
PL6.E3A0      #001=DFA$GO File=DFA$GO.:E05TSI                                    TUE 07/29/97 14:33 Page:22   
       138**DCL      5699<<ASSIGN
FPT_WAIT
       124**DCL      5698>>ASSIGN
GD$MSG
      3494**DCL      5673<<ASSIGN
GD$MSG.BRKRQS.IF$CONST.SIZE
      3545**DCL      3545--REDEF
GD$MSG.BRKRQS.IF$CONST.TEXT
      3545**DCL      3546--REDEF    3546--REDEF    3547--REDEF    3548--REDEF
GD$MSG.BRKRSP.BRK#
      3559**DCL      3559--REDEF
GD$MSG.BRKRSP.USER#
      3559**DCL      3559--REDEF
GD$MSG.FNC
      3494**DCL      5674<<ASSIGN   5707>>IF       5712>>IF
GD$MSG.GORQS.ADR$
      3553**DCL      5688<<ASSIGN
GD$MSG.GORQS.SIZE
      3553**DCL      5681<<ASSIGN
GD$MSG.LETMEM_D.VALUE.SIZE
      3517**DCL      3517--REDEF
GD$MSG.LETMEM_D.VALUE.TEXT
      3518**DCL      3518--REDEF    3518--REDEF    3519--REDEF    3520--REDEF
GD$MSG.MESSAGE
      3499**DCL      3499--REDEF    3500--REDEF    3500--REDEF    3501--REDEF    3512--REDEF    3525--REDEF
      3530--REDEF    3537--REDEF    3553--REDEF    3558--REDEF    3564--REDEF    3565--REDEF    3594--REDEF
      3596--REDEF    3607--REDEF    3614--REDEF    3626--REDEF
GD$MSG.SUBFB.ADR
      3498**DCL      5687<<ASSIGN
GD$MSG.SUBFB.GOTRAP
      3498**DCL      5684<<ASSIGN
GD$MSG.SUBFB.STEP
      3498**DCL      5679<<ASSIGN
GD$MSG.SUBFNC
      3494**DCL      3494--REDEF    3498--REDEF
GD$MSG.TSA.I
PL6.E3A0      #001=DFA$GO File=DFA$GO.:E05TSI                                    TUE 07/29/97 14:33 Page:23   
      3566**DCL      3566--REDEF
GD$MSG.TSA.S
      3568**DCL      3568--REDEF
GD$MSG.USERQS.ASDT$
      3594**DCL      3594--REDEF    3595--REDEF
GO$CMD.GOPOS
      5005**DCL      5666>>IF       5685>>IF
GO$CMD.POSITION
      5015**DCL      5668>>ASSIGN   5688>>ASSIGN
GO$CMD.STEP
      5006**DCL      5664>>IF       5677>>IF
GO$CMD.TRAP
      5007**DCL      5683>>IF       5696>>IF
IC
        30**DCL      5668<<ASSIGN   5669<>CALL
M$WAIT
        99**DCL-ENT  5700--CALL
STEP_SIZE
        29**DCL      5669<>CALL     5671<>CALL     5681>>ASSIGN
S_D.CURRENT_CHANNEL
      2910**DCL      2912--REDEF
S_D.CURRENT_FPRG_CONTEXT$
      2110**DCL      5691>>ASSIGN   5717<<ASSIGN
S_D.DEBUGA
      2062**DCL      2064--REDEF
S_D.DEBUG_CMD
      2482**DCL      5701>>IF
S_D.DO$
      2013**DCL      5664>>IF       5666>>IF       5668>>ASSIGN   5677>>IF       5683>>IF       5685>>IF
      5688>>ASSIGN   5696>>IF
S_D.DO_MESSAGE
      3079**DCL      5718>>UNWIND
S_D.EIS
      3020**DCL      3049--REDEF
S_D.ERROR
      1991**DCL      5709<<ASSIGN   5714<<ASSIGN
PL6.E3A0      #001=DFA$GO File=DFA$GO.:E05TSI                                    TUE 07/29/97 14:33 Page:24   
S_D.HOST_MESSAGE_BUF_REMOTE
      2953**DCL      2954--REDEF    2968--REDEF
S_D.JDE
      2567**DCL      2568--REDEF
S_D.L$.VALUE
      2120**DCL      2126--REDEF    2134--REDEF    2137--REDEF    2140--REDEF    2143--REDEF
S_D.L$.VALUE.L
      2121**DCL      2122--REDEF    2123--REDEF
S_D.L6_MESSAGE_BUF
      2974**DCL      2976--REDEF
S_D.OUTPUT
      2940**DCL      2942--REDEF
S_D.REMOTE_MSG.FNCC
      2959**DCL      2960--REDEF
S_D.REMOTE_MSG.STXC
      2955**DCL      2956--REDEF
S_D.REMOTE_MSG.SUBFNCC
      2963**DCL      2964--REDEF
S_D.STEP_L6
      2856**DCL      5680<<ASSIGN
S_D.SV
      2019**DCL      2040--REDEF
S_D$
      3271**DCL      1967--IMP-PTR  5664>>IF       5666>>IF       5668>>ASSIGN   5677>>IF       5680>>ASSIGN
      5683>>IF       5685>>IF       5688>>ASSIGN   5691>>ASSIGN   5696>>IF       5701>>IF       5709>>ASSIGN
      5714>>ASSIGN   5717>>ASSIGN   5718>>UNWIND
S_D_L6_MESSAGE$
      3308**DCL      3494--IMP-PTR  5673>>ASSIGN   5674>>ASSIGN   5679>>ASSIGN   5681>>ASSIGN   5684>>ASSIGN
      5687>>ASSIGN   5688>>ASSIGN   5707>>IF       5712>>IF
PL6.E3A0      #001=DFA$GO File=DFA$GO.:E05TSI                                    TUE 07/29/97 14:33 Page:25   
              *** CROSS REFERENCE LISTING ***
    **     DENOTES     IDENTIFIER DEFINITION
    <<                 IDENTIFIER'S VALUE SET
    >>                 IDENTIFIER'S VALUE USED
    <>                 IDENTIFIER SET AND/OR USED
    --                 IDENTIFIER REFERENCED
PL6.E3A0      #001=DFA$GO File=DFA$GO.:E05TSI                                    TUE 07/29/97 14:33 Page:26   
              MINI UREF LISTING

DFA$GO      24**PROC
M$ACCT      58**DCL-ENT
M$ACTIVATE      61**DCL-ENT
M$ALIB      54**DCL-ENT
M$ASUSER      56**DCL-ENT
M$ATTACH      63**DCL-ENT
M$BADPP      81**DCL-ENT
M$CGCTL      62**DCL-ENT
M$CGINFO      62**DCL-ENT
M$CHECK      43**DCL-ENT
M$CHGUNIT     101**DCL-ENT
M$CLOSE      41**DCL-ENT
M$CLRSTK      99**DCL-ENT
M$CMDVAR     110**DCL-ENT
M$CONFIG      71**DCL-ENT
M$CORRES      46**DCL-ENT
M$CPEXIT      55**DCL-ENT
M$CVM      79**DCL-ENT
M$CVOL      44**DCL-ENT
M$DCLFLD      71**DCL-ENT
M$DEACTIVATE      61**DCL-ENT
M$DELREC      43**DCL-ENT
M$DEQ     108**DCL-ENT
M$DETACH      63**DCL-ENT
M$DEVICE      45**DCL-ENT
M$DISPLAY     108**DCL-ENT
M$DISPRES      48**DCL-ENT
M$DLIB      54**DCL-ENT
M$DRIBBLE      71**DCL-ENT
M$DRTN      99**DCL-ENT
M$DSUSER      56**DCL-ENT
M$ENQ     107**DCL-ENT
PL6.E3A0      #001=DFA$GO File=DFA$GO.:E05TSI                                    TUE 07/29/97 14:33 Page:27   
M$EOM      66**DCL-ENT
M$ERASE      72**DCL-ENT
M$ERR      53**DCL-ENT
M$ERRMSG     104**DCL-ENT
M$EVENT      96**DCL-ENT
M$EXHUME     105**DCL-ENT
M$EXIT      53**DCL-ENT
M$EXTEND      45**DCL-ENT
M$FDP      77**DCL-ENT
M$FDS      76**DCL-ENT
M$FEBOOT      69**DCL-ENT
M$FECTL      70**DCL-ENT
M$FEDUMP      69**DCL-ENT
M$FID     104**DCL-ENT
M$FINDPROC      58**DCL-ENT
M$FSUSER      56**DCL-ENT
M$FVP      78**DCL-ENT
M$FWCG      62**DCL-ENT
M$GBPL      82**DCL-ENT
M$GDDL      78**DCL-ENT
M$GDP      77**DCL-ENT
M$GDS      76**DCL-ENT
M$GETDCB      47**DCL-ENT
M$GETMOUSE      87**DCL-ENT
M$GETPM      88**DCL-ENT
M$GJOB     106**DCL-ENT
M$GLINEATTR      66**DCL-ENT
M$GOODPP      81**DCL-ENT
M$GPLATEN      74**DCL-ENT
M$GPROMPT      73**DCL-ENT
M$GTRMATTR      67**DCL-ENT
M$GTRMCTL      65**DCL-ENT
M$GTRMTAB      68**DCL-ENT
M$GVP      77**DCL-ENT
M$HELP     104**DCL-ENT
M$INT      96**DCL-ENT
PL6.E3A0      #001=DFA$GO File=DFA$GO.:E05TSI                                    TUE 07/29/97 14:33 Page:28   
M$INTRTN      57**DCL-ENT
M$IOQ      92**DCL-ENT
M$JOBSTATS     106**DCL-ENT
M$KEYIN      46**DCL-ENT
M$LDEV      41**DCL-ENT
M$LDTRC      54**DCL-ENT
M$LIMIT      47**DCL-ENT
M$LINES      46**DCL-ENT
M$LINK      53**DCL-ENT
M$MADMUCK      49**DCL-ENT
M$MAKUSER      80**DCL-ENT
M$MBS      48**DCL-ENT
M$MDFFLD      72**DCL-ENT
M$MERC      97**DCL-ENT
M$MERCS      98**DCL-ENT
M$MIRROR      92**DCL-ENT
M$MONINFO     109**DCL-ENT
M$MPL      82**DCL-ENT
M$NODEINFO      73**DCL-ENT
M$NXTUSR     107**DCL-ENT
M$OCMSG     105**DCL-ENT
M$OLAY      53**DCL-ENT
M$OPEN      41**DCL-ENT
M$PAS      82**DCL-ENT
M$PATHCON     105**DCL-ENT
M$PDS      76**DCL-ENT
M$PFIL      43**DCL-ENT
M$PLATEN      67**DCL-ENT
M$PRECORD      45**DCL-ENT
M$PROCNAME      58**DCL-ENT
M$PROFILE      69**DCL-ENT
M$PROMPT      65**DCL-ENT
M$RACST      49**DCL-ENT
M$RDSYSLOG      90**DCL-ENT
M$READ      42**DCL-ENT
M$RELDCB      47**DCL-ENT
PL6.E3A0      #001=DFA$GO File=DFA$GO.:E05TSI                                    TUE 07/29/97 14:33 Page:29   
M$RELRES      48**DCL-ENT
M$RELSTARF      50**DCL-ENT
M$REM      50**DCL-ENT
M$RENV      97**DCL-ENT
M$REQUIRE      49**DCL-ENT
M$RETRY      98**DCL-ENT
M$RETRYS      98**DCL-ENT
M$REW      44**DCL-ENT
M$RLSFLD      72**DCL-ENT
M$RPRIV     100**DCL-ENT
M$RSPP      79**DCL-ENT
M$RSWITCH     101**DCL-ENT
M$RUE     107**DCL-ENT
M$SAD      80**DCL-ENT
M$SAVE      56**DCL-ENT
M$SCON      57**DCL-ENT
M$SCREECH      55**DCL-ENT
M$SENV      97**DCL-ENT
M$SETFMA      41**DCL-ENT
M$SETFP      70**DCL-ENT
M$SINPUT      68**DCL-ENT
M$SLCFLD      73**DCL-ENT
M$SMOUSE      87**DCL-ENT
M$SMPRT      79**DCL-ENT
M$SPRIV     100**DCL-ENT
M$SSC      80**DCL-ENT
M$SSWITCH     100**DCL-ENT
M$STATE     109**DCL-ENT
M$STD      81**DCL-ENT
M$STIMER      95**DCL-ENT
M$STLPP      78**DCL-ENT
M$STRAP      95**DCL-ENT
M$STRMATTR      67**DCL-ENT
M$STRMCTL      65**DCL-ENT
M$STRMTAB      68**DCL-ENT
M$SYMBIO     106**DCL-ENT
PL6.E3A0      #001=DFA$GO File=DFA$GO.:E05TSI                                    TUE 07/29/97 14:33 Page:30   
M$SYSCON      92**DCL-ENT
M$SYSID     110**DCL-ENT
M$TDCLOSE      91**DCL-ENT
M$TDIO      91**DCL-ENT
M$TDOPEN      90**DCL-ENT
M$TDREQCPU      91**DCL-ENT
M$TEMPWROC      85**DCL-ENT
M$TIME     108**DCL-ENT
M$TRAP      95**DCL-ENT
M$TRMISC      70**DCL-ENT
M$TRMPRG      66**DCL-ENT
M$TRTN      99**DCL-ENT
M$TRUNC      42**DCL-ENT
M$TTIMER      95**DCL-ENT
M$UC      65**DCL
M$UMPL      82**DCL-ENT
M$UNFID     104**DCL-ENT
M$UNLATCH      61**DCL-ENT
M$UNSHARE      58**DCL-ENT
M$USRFIELD     101**DCL-ENT
M$VIRTUAL      76**DCL-ENT
M$WEOF      44**DCL-ENT
M$WRITE      42**DCL-ENT
M$WRSYSLOG      90**DCL-ENT
M$XCON      96**DCL-ENT
M$XCONRTN      57**DCL-ENT
M$XEQTIME     109**DCL-ENT
M$XFLUSH      50**DCL-ENT
M$XMOUSE      87**DCL-ENT
M$XXX      53**DCL-ENT
M$YC      55**DCL-ENT
S_D_ACCESS$    3286**DCL
S_D_ANLZ$    3288**DCL
S_D_ASTACKOFF$    3287**DCL
S_D_BREAK$    3289**DCL
S_D_DO_SCAN$    3290**DCL
PL6.E3A0      #001=DFA$GO File=DFA$GO.:E05TSI                                    TUE 07/29/97 14:33 Page:31   
S_D_ERROR$    3291**DCL
S_D_FAULTCMD$$    3292**DCL
S_D_FAULTINS$$    3293**DCL
S_D_GOIC$    3294**DCL
S_D_GO_MODE$    3295**DCL
S_D_HOST_MESSAGE$    3307**DCL
S_D_HW_PTB_UNITS$    3311**DCL
S_D_HW_RES_MEM$    3309**DCL
S_D_HW_WSQ0PT$    3310**DCL
S_D_IPRFLT$    3297**DCL
S_D_IXFIX$    3296**DCL
S_D_REM_ACCESS$    3298**DCL
S_D_REM_DISKBOOT$    3300**DCL
S_D_REM_DO_SCAN$    3299**DCL
S_D_RETURNN$    3301**DCL
S_D_SAD$    3302**DCL
S_D_SAVEIC$    3303**DCL
S_D_SEG$    3285**DCL
S_D_TCB$$    3304**DCL
S_D_UREG$$    3305**DCL
S_D_USS$$    3306**DCL
