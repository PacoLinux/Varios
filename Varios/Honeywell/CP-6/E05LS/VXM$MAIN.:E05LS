VERSION E05

PL6.E3A0      #001=VXM$MAIN File=VXM$MAIN.:E05TSI                                WED 07/30/97 08:18 Page:1    
        1        1        /*M* VXM$MAIN - MAIN FUNCTION DRIVER; GLOBAL CONTROLLER         */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* DMR,PLM=5,IND=5,CSU=3,EXM=0,ECU=3,MOC,DCI=5,CRT=5,CTI=8     */
        8        8        /*F* NAME:        VXM$MAIN
        9        9             PURPOSE:     Main function driver; global controller.
       10       10             DESCRIPTION:
       11       11             LINK is entered at VXM$MAIN. VXM$MAIN proceeds to perform initialization
       12       12         and parsing of the command stream. VXM$MAIN then routes control based upon the
       13       13         command encountered (link or map). If a linking command was encountered then
       14       14         control proceeds to VXO$PASS1, VXO$PASS2 and VXM$MAP. If the command was a map
       15       15         then control proceeds to VXM$MAP. Exit from the main driver is typically a
       16       16        normal exit, however, a run option/command will do a M$LDTRC to the image formed
       17       17                                                                        */
       18       18        VXM$MAIN: PROC MAIN;
       19       19
       20       20        %INCLUDE VX_INC_C;
       21    10736        %INCLUDE VX_PSUBS_C;
       22    10914        %INCLUDE B_ERRORS_C;
       23    12041        %INCLUDE CP_6_SUBS;
       24    12581        %B$TCB;
       25    12584        %B$ALT;
       26    12592        %VX$NODE;

             12604    1   /*******************************************************************************
             12605    1   *                                                                              *
             12606    1   *                          VX$NODE                                                 *
             12607    1   *                                                                              *
             12608    1   *******************************************************************************/

             12624    1   DCL 1 VX$NODE      ALIGNED    BASED,
             12625    1         2 SON$ PTR /*(ADDR(NIL))*/, /* Son pointer                      */
             12626    1         2 BROTHER$ PTR /*(ADDR(NIL))*/, /* Brother pointer              */
             12627    1         2 FATHER$ PTR /*(ADDR(NIL))*/, /* Father pointer                */
PL6.E3A0      #001=VXM$MAIN File=VXM$MAIN.:E05TSI                                WED 07/30/97 08:18 Page:2    
             12628    1         2 PATH$ PTR /*(ADDR(NIL))*/, /* Path   pointer                  */
             12629    1         2 HEAD$       PTR /*(ADDR(NIL))*/, /* Head pointer to
             12630                              to list of file nodes for this node            */
             12631    1         2 TAIL$ PTR /*(ADDR(NIL))*/, /* Tail pointer to list            */
             12632    1         2 SHARED_LIB_HEAD$ PTR /*(ADDR(NIL))*/,
             12632                  /* Head pointer to shared library list */
             12633    1         2 LIB_HEAD$         PTR /*(ADDR(NIL))*/,
             12633                  /* Head pointer to list of shared libraries
             12634                                          which have been mapped to included libraries */
             12635    1         2 NUM          UBIN(36)  UNAL,    /* Node number                        */
             12636    1         2 DEPTH          UBIN(36)  UNAL,  /* Depth; ROOT=0*/
             12637    1         2 ADDR_START_A(0:2/*@ROS*/) SBIN WORD /*(0*3)*/, /* Array            */
             12638    1         2 ADDR_START REDEF  ADDR_START_A,
             12639    1           3 RDATA       SBIN WORD,   /* First address for this node in data     */
             12640    1           3 RPROC       SBIN WORD,   /* First address for this node in proc     */
             12641    1           3 ROS       SBIN WORD,          /* Last address for program in ros    */
             12642    1         2 ADDR_STOP_A(0:2/*@ROS*/) SBIN WORD /*(-1*3)*/, /* Array            */
             12643    1         2 ADDR_STOP  REDEF  ADDR_STOP_A,
             12644    1           3 RDATA       SBIN WORD,        /* Last address for this node in data */
             12645    1           3 RPROC       SBIN WORD,        /* Last address for this node in proc */
             12646    1           3 ROS       SBIN WORD,          /* Last address for program in ros    */
             12647    1         2 START_PAGE#_A(0:2/*@ROS*/) SBIN WORD /*(0*3)*/, /* Array           */
             12648    1         2 START_PAGE# REDEF START_PAGE#_A,
             12649    1           3 RDATA       SBIN WORD,   /* First page    for this node in data     */
             12650    1           3 RPROC       SBIN WORD,   /* First page    for this node in proc     */
             12651    1           3 ROS       SBIN WORD,          /* First page   for program in ros    */
             12652    1         2 STOP_PAGE#_A(0:2/*@ROS*/) SBIN WORD /*(-1*3)*/, /* Array*/
             12653    1         2 STOP_PAGE#  REDEF STOP_PAGE#_A,
             12654    1           3 RDATA       SBIN WORD,   /* Last  page    for this node in data     */
             12655    1           3 RPROC       SBIN WORD,   /* Last  page    for this node in proc     */
             12656    1           3 ROS       SBIN WORD,          /* Last  page   for program in ros    */
             12657    1         2 START_SC_ALL$ PTR /*(ADDR(NIL))*/,
             12657                  /* Starting pointer for common sections for this node */
             12658    1         2 STOP_SC_ALL$ PTR /*(ADDR(NIL))*/,
             12658                  /* Stopping pointer for common sections for this node */
             12659    1         2 L_START,
             12660    1           3 SN$ PTR /*(ADDR(NIL))*/, /* Segment definition names        */
PL6.E3A0      #001=VXM$MAIN File=VXM$MAIN.:E05TSI                                WED 07/30/97 08:18 Page:3    
             12661    1           3 DN$ PTR /*(ADDR(NIL))*/, /* Def names                       */
             12662    1           3 RN$ PTR /*(ADDR(NIL))*/, /* Ref names                       */
             12663    1           3 SC$ PTR /*(ADDR(NIL))*/, /* Sections                        */
             12664    1           3 ED$ PTR /*(ADDR(NIL))*/, /* Entry defs*/
             12665    1           3 ER$ PTR /*(ADDR(NIL))*/, /* Entry refs*/
             12666    1           3 DD$ PTR /*(ADDR(NIL))*/, /* Data defs                       */
             12667    1           3 DR$ PTR /*(ADDR(NIL))*/, /* Data refs                       */
             12668    1           3 SD$ PTR /*(ADDR(NIL))*/, /* Seg defs                        */
             12669    1           3 SR$ PTR /*(ADDR(NIL))*/, /* Seg refs                        */
             12670    1         2 L_START_A$(0:9)     REDEF L_START PTR,
             12671    1         2 L_STOP,
             12672    1           3 SN$ PTR /*(ADDR(NIL))*/, /* Segment definition names        */
             12673    1           3 DN$ PTR /*(ADDR(NIL))*/, /* Def names                       */
             12674    1           3 RN$ PTR /*(ADDR(NIL))*/, /* Ref names                       */
             12675    1           3 SC$ PTR /*(ADDR(NIL))*/, /* Sections                        */
             12676    1           3 ED$ PTR /*(ADDR(NIL))*/, /* Entry defs*/
             12677    1           3 ER$ PTR /*(ADDR(NIL))*/, /* Entry refs*/
             12678    1           3 DD$ PTR /*(ADDR(NIL))*/, /* Data defs                       */
             12679    1           3 DR$ PTR /*(ADDR(NIL))*/, /* Data refs                       */
             12680    1           3 SD$ PTR /*(ADDR(NIL))*/, /* Seg defs                        */
             12681    1           3 SR$ PTR /*(ADDR(NIL))*/, /* Seg refs                        */
             12682    1         2 L_STOP_A$(0:9) REDEF   L_STOP    PTR,
             12683    1         2 L_SIZE,
             12684    1           3 SN      UBIN /*(0)*/, /* Segment definition names           */
             12685    1           3 DN      UBIN /*(0)*/, /* Def names                          */
             12686    1           3 RN      UBIN /*(0)*/, /* Ref names                          */
             12687    1           3 SC      UBIN /*(0)*/, /* Sections                           */
             12688    1           3 ED      UBIN /*(0)*/, /* Entry defs*/
             12689    1           3 ER      UBIN /*(0)*/, /* Entry refs*/
             12690    1           3 DD      UBIN /*(0)*/, /* Data defs                          */
             12691    1           3 DR      UBIN /*(0)*/, /* Data refs                          */
             12692    1           3 SD      UBIN /*(0)*/, /* Seg defs                           */
             12693    1           3 SR      UBIN /*(0)*/, /* Seg refs                           */
             12694    1         2 L_SIZE_A(0:9)  REDEF   L_SIZE    UBIN,
             12695    1         2 L_PREV_SIZE,
             12696    1           3 SN      UBIN /*(0)*/, /* Segment definition names           */
             12697    1           3 DN      UBIN /*(0)*/, /* Def names                          */
PL6.E3A0      #001=VXM$MAIN File=VXM$MAIN.:E05TSI                                WED 07/30/97 08:18 Page:4    
             12698    1           3 RN      UBIN /*(0)*/, /* Ref names                          */
             12699    1           3 SC      UBIN /*(0)*/, /* Sections                           */
             12700    1           3 ED      UBIN /*(0)*/, /* Entry defs*/
             12701    1           3 ER      UBIN /*(0)*/, /* Entry refs*/
             12702    1           3 DD      UBIN /*(0)*/, /* Data defs                          */
             12703    1           3 DR      UBIN /*(0)*/, /* Data refs                          */
             12704    1           3 SD      UBIN /*(0)*/, /* Seg defs                           */
             12705    1           3 SR      UBIN /*(0)*/, /* Seg refs                           */
             12706    1         2 L_PREV_SIZE_A(0:9)  REDEF   L_PREV_SIZE    UBIN,
             12707    1         2 BIT_MAP                ALIGNED,
             12708    1           3 DATA                  ALIGNED,
             12709    1             4 BITS(0:255)          BIT(1)    UNAL /*('0'B*256)*/,
             12710    1           3 RPROC                 ALIGNED,
             12711    1             4 BITS(0:255)          BIT(1)    UNAL /*('0'B*256)*/,
             12712    1           3 ROS                   ALIGNED,
             12713    1             4 BITS(0:255)          BIT(1)    UNAL /*('0'B*256)*/,
             12714    1         2 L_SC_START,
             12715    1           3 SC_BLK_COM$ PTR /*(ADDR(NIL))*/, /* Blank common            */
             12716    1           3 SC_ROOT_LBL_COM$ PTR /*(ADDR(NIL))*/, /* Root labelled common */
             12717    1           3 SC_LBL_COM$ PTR /*(ADDR(NIL))*/, /* Labelled common         */
             12718    1           3 SC_DCB$ PTR /*(ADDR(NIL))*/, /* Dcbs                        */
             12719    1         2 L_SC_START_A$(0:3)  REDEF L_SC_START PTR,
             12720    1         2 L_SC_STOP,
             12721    1           3 SC_BLK_COM$ PTR /*(ADDR(NIL))*/, /* Blank common            */
             12722    1           3 SC_ROOT_LBL_COM$ PTR /*(ADDR(NIL))*/, /* Root labelled common */
             12723    1           3 SC_LBL_COM$ PTR /*(ADDR(NIL))*/, /* Labelled common         */
             12724    1           3 SC_DCB$ PTR /*(ADDR(NIL))*/, /* Dcbs                        */
             12725    1         2 L_SC_STOP_A$(0:3)   REDEF L_SC_STOP  PTR,
             12726    1         2 PROMOTE_HEAD,
             12727    1           3 BLK_COM$              PTR /*(ADDR(NIL))*/,
             12728    1           3 LBL_COM$              PTR /*(ADDR(NIL))*/,
             12729    1         2 PROMOTE_HEAD_A$(0:1) REDEF PROMOTE_HEAD     PTR,
             12730    1         2 PROMOTE_TAIL,
             12731    1           3 BLK_COM$              PTR /*(ADDR(NIL))*/,
             12732    1           3 LBL_COM$              PTR /*(ADDR(NIL))*/,
             12733    1         2 PROMOTE_TAIL_A$(0:1) REDEF PROMOTE_TAIL     PTR,
             12734    1         2 HAVE_ASL          BIT(1)    UNAL /*('0'B)*/,
PL6.E3A0      #001=VXM$MAIN File=VXM$MAIN.:E05TSI                                WED 07/30/97 08:18 Page:5    
             12735    1         2 ALL_BLK_COM          BIT(1)    UNAL /*('0'B)*/,
             12736    1         2 USE_NODE          BIT(1)    UNAL /*('0'B)*/,
             12737    1         2 *                 BIT(33)   UNAL /*('0'B)*/,
             12738    1         2 BLANK_COMMON$     PTR       ALIGNED /*(ADDR(NIL))*/;

       27    12742        %VX$LST;

             12755    1   /*******************************************************************************
             12756    1   *                                                                              *
             12757    1   *                          VX$LST                                                 *
             12758    1   *                                                                              *
             12759    1   *******************************************************************************/

             12764    1   DCL 1 VX$LST                          ALIGNED BASED,
             12765    1         2 LINK$        PTR,               /* Link to next item                  */
             12766    1         2 TYPE         UBIN( 18) UNAL,    /* Type                               */
             12767    1         2 SUB_TYPE     UBIN( 18) UNAL,    /* Sub-type                           */
             12768    1         2 OBJECT_NAME$ PTR,               /* Pointer to object unit name        */
             12769    1         2 PRIOR$ REDEF OBJECT_NAME$ PTR,  /* Pointer to prior element in list   */
             12770    1         2 SC_HEAD$     PTR,               /* Head pointer to section link list  */
             12771    1         2 LIBSRCH$ REDEF SC_HEAD$ PTR,    /* Pointer to account list for library*/
             12772    1         2 SC_TAIL$     PTR,               /* Tail pointer to section link list  */
             12773    1         2 LIB REDEF SC_TAIL$,             /* Used only by UNSAT library files   */
             12774    1           3 USED UBIN HALF UNAL,          /* 1 => library file used, 0=>not used*/
             12775    1           3 NEEDED UBIN HALF UNAL,   /* 1 => library file needed, 0=>not needed*/
             12776    1         2 P,
             12777    1           3 NAME_       ALIGNED,
             12778    1             4 BOUND      UBIN(20)  UNAL,
             12779    1             4 FLAGSV     UBIN(11)  UNAL,
             12780    1             4 *          BIT(5)    UNAL,
             12781    1             4 NAME$      PTR,
             12782    1           3 ACCT_       ALIGNED,
             12783    1             4 BOUND      UBIN(20)  UNAL,
             12784    1             4 FLAGSV     UBIN(11)  UNAL,
             12785    1             4 *          BIT(5)    UNAL,
             12786    1             4 ACCT$      PTR,
             12787    1           3 PASS_       ALIGNED,
PL6.E3A0      #001=VXM$MAIN File=VXM$MAIN.:E05TSI                                WED 07/30/97 08:18 Page:6    
             12788    1             4 BOUND      UBIN(20)  UNAL,
             12789    1             4 FLAGSV     UBIN(11)  UNAL,
             12790    1             4 *          BIT(5)    UNAL,
             12791    1             4 PASS$      PTR,
             12792    1           3 SN_         ALIGNED,
             12793    1             4 BOUND      UBIN(20)  UNAL,
             12794    1             4 FLAGSV     UBIN(11)  UNAL,
             12795    1             4 *          BIT(5)    UNAL,
             12796    1             4 SN$        PTR,
             12797    1           3 WSN_        ALIGNED,
             12798    1             4 BOUND      UBIN(20)  UNAL,
             12799    1             4 FLAGSV     UBIN(11)  UNAL,
             12800    1             4 *          BIT(5)    UNAL,
             12801    1             4 WSN$       PTR,
             12802    1           3 B           ALIGNED,
             12803    1             4 RES        BIT(1)    UNAL,
             12804    1             4 ASN        BIT(1)    UNAL,
             12805    1             4 ACCT       BIT(1)    UNAL,
             12806    1             4 *          BIT(33)   UNAL,
             12807    1           3 RES         CHAR(4)   ALIGNED,
             12808    1           3 ASN         UBIN(36)  ALIGNED;
       28    12811        %T$C;

             12823    1   /*******************************************************************************
             12824    1   *                                                                              *
             12825    1   *                          T$C                                                 *
             12826    1   *                                                                              *
             12827    1   *******************************************************************************/

             12832    1   DCL 1 T$C           BASED     ALIGNED,  /* Text count                         */
             12833    1         2 COUNT        UBIN( 9) UNAL,
             12834    1         2 CHARS        CHAR( T$C.COUNT )   UNAL;
             12835    1   DCL 1 T$C_UNAL      BASED     UNAL,     /* Text count                         */
             12836    1         2 COUNT        UBIN( 9) UNAL,
             12837    1         2 CHARS        CHAR( T$C_UNAL.COUNT ) UNAL;
       29    12840        %SET LISTMAC='1'B;
       30    12841        %SET LISTSUB='1'B;
PL6.E3A0      #001=VXM$MAIN File=VXM$MAIN.:E05TSI                                WED 07/30/97 08:18 Page:7    
       31    12842        %BANNER(ARG=SUBS);
             12843        %LSET LISTDIR='0'B;

             12850    1   /*******************************************************************************
             12851    1   *                                                                              *
             12852    1   *                          SUBS                                                 *
             12853    1   *                                                                              *
             12854    1   *******************************************************************************/

       32    12858        %B$RECORDSUBS;
             12859        %EQU TYPHEAD=0 ;
             12860        %EQU TYPDNAM=1 ;
             12861        %EQU TYPRNAM=2 ;
             12862        %EQU TYPSECT=3 ;
             12863        %EQU TYPEDEF=4 ;
             12864        %EQU TYPEREF=5 ;
             12865        %EQU TYPSDEF=6 ;
             12866        %EQU TYPSREF=7 ;
             12867        %EQU TYPSEGDEF=8 ;
             12868        %EQU TYPSEGREF=9 ;
             12869        %EQU TYPPROG=10 ;
             12870        %EQU SUBTYPPROG=0 ;
             12871        %EQU SUBTYPREL=1 ;
             12872        %EQU TYPLOGBLK=11 ;
             12873        %EQU TYPINTNTRY=12 ;
             12874        %EQU TYPEXST=13 ;
             12875        %EQU TYPVREBL=14 ;
             12876        %EQU TYPDBGNAM=15 ;
             12877        %EQU TYPLV1LB=16 ;
             12878        %EQU TYPLV1=17 ;
             12879        %EQU TYPDATASEG=18 ;
             12880        %EQU TYPRUM=20 ;
             12881        %EQU TYPBIRTH=21 ;
             12882        %EQU TYPPLOVER=22 ;
             12883        %EQU TYPCOMPID=23 ;
             12884        %EQU TYPROS=30 ;
       33    12886        %C;
PL6.E3A0      #001=VXM$MAIN File=VXM$MAIN.:E05TSI                                WED 07/30/97 08:18 Page:8    
             12887        %LSET LISTDIR='0'B;

             12894    1   /*******************************************************************************
             12895    1   *                                                                              *
             12896    1   *                          CHAR                                                 *
             12897    1   *                                                                              *
             12898    1   *******************************************************************************/

       34    12902    1   DCL CH         CHAR(1)  ALIGNED   AUTO;
       35    12903        %U;
             12904        %LSET LISTDIR='0'B;

             12911    1   /*******************************************************************************
             12912    1   *                                                                              *
             12913    1   *                          UBIN                                                 *
             12914    1   *                                                                              *
             12915    1   *******************************************************************************/

       36    12919        %INDEX;
             12920    1   DCL I          UBIN(36) ALIGNED AUTO;
             12921    1   DCL SI REDEF I SBIN WORD ALIGNED;
             12922    1   DCL J          UBIN(36) ALIGNED AUTO;
             12923    1   DCL SJ REDEF J SBIN WORD ALIGNED;
             12924    1   DCL K          UBIN(36) ALIGNED AUTO;
             12925    1   DCL SK REDEF K SBIN WORD ALIGNED;
             12926    1   DCL L          UBIN(36) ALIGNED AUTO;
             12927    1   DCL SL REDEF L    SBIN WORD ALIGNED;
       37    12929    1   DCL ERR             UBIN(36)  ALIGNED   AUTO;
       38    12930        %E;
             12931        %LSET LISTDIR='0'B;

             12938    1   /*******************************************************************************
             12939    1   *                                                                              *
             12940    1   *                          ENTRY                                                 *
             12941    1   *                                                                              *
             12942    1   *******************************************************************************/

PL6.E3A0      #001=VXM$MAIN File=VXM$MAIN.:E05TSI                                WED 07/30/97 08:18 Page:9    
       39    12946        %ENTRIES;
             12947    1   DCL VXE$ERROR       ENTRY(4);
             12948    1   DCL VXE$ERR         ENTRY(3);
             12949    1   DCL VXE$MERC        ENTRY;
             12950    1   DCL VXE$ERRMSG      ENTRY(3);
             12951    1   DCL VXR$READ        ENTRY( 3 );
             12952    1   DCL VXW$WRITE       ENTRY( 3 );
             12953    1   DCL VXW$WRITE_DO    ENTRY( 2 );
             12954    1   DCL VXD$B2C         ENTRY( 5 );
             12955    1   DCL VXD$C2B         ENTRY( 3 );
             12956    1   DCL VXA$GET         ENTRY( 3 );
             12957    1   DCL VXF$FREE        ENTRY( 3 );
             12958    1   DCL VXQ$SORT        ENTRY( 7 );
             12959    1   DCL VXY$YESNO       ENTRY( 1 );
       40    12961        %ENTRIES_IO;
             12962    1   DCL VXF$OPEN        ENTRY(3) ALTRET;
             12963    1   DCL VXF$CLOSE       ENTRY(3);
             12964    1   DCL VXU$PREAD       ENTRY(12);
             12965    1   DCL VXK$KEY         ENTRY(4);
             12966    1   DCL VXI$READ        ENTRY(4)  ALTRET;
             12967    1   DCL VXI$WRITE       ENTRY(4)  ALTRET;
       41    12969    1   DCL VXI$INIT        ENTRY;
       42    12970    1   DCL VXP$PARSE       ENTRY(2);
       43    12971    1   DCL VXO$PASS1       ENTRY;
       44    12972    1   DCL VXO$LLMU        ENTRY;
       45    12973    1   DCL VXO$IMPL        ENTRY;
       46    12974    1   DCL VXT$ALL         ENTRY;
       47    12975    1   DCL VXT$PRE         ENTRY;
       48    12976    1   DCL VXT$PASS2       ENTRY;
       49    12977    1   DCL VXT$POST        ENTRY;
       50    12978    1   DCL VXM$MAP         ENTRY;
       51    12979    1   DCL VXS$LST        ENTRY(6) ALTRET;
       52    12980    1   DCL VXU$FINISH_VECTOR  ENTRY;
       53    12981    1   DCL VXU$RUM ENTRY ALTRET ;
       54    12982        %PTR;
             12983        %LSET LISTDIR='0'B;

PL6.E3A0      #001=VXM$MAIN File=VXM$MAIN.:E05TSI                                WED 07/30/97 08:18 Page:10   
             12990    1   /*******************************************************************************
             12991    1   *                                                                              *
             12992    1   *                          PTR                                                 *
             12993    1   *                                                                              *
             12994    1   *******************************************************************************/

       55    12998    1   DCL PTR$            PTR  ALIGNED   AUTO;
       56    12999    1   DCL DCB$            PTR  ALIGNED   AUTO;
       57    13000        %PLIST;
       58    13001        %F$DCB;
       59    13058        %FPT_REW(FPTN=FPT_REW, STCLASS=CONSTANT, DCB=M$EI );
       60    13073    1   DCL M$EI            DCB;
       61    13074        %FPT_READ(FPTN=VX_EI_FPT_READ, STCLASS=SYMREF );
       62    13113        %FPT_XCON;
       63    13127        %FPT_LDTRC(
       64    13128                   FPTN=FPT_LDTRC,
       65    13129                   NAME=LDTRC_NAME,
       66    13130                   ACCT=LDTRC_ACCT,
       67    13131                   PASS=LDTRC_PASS,
       68    13132                   PSID="LDTRC_SN.SN#(0)",
       69    13133                   STCLASS=STATIC);
       70    13151        %VLP_NAME(
       71    13152                   FPTN=LDTRC_NAME,
       72    13153                   STCLASS=STATIC);
       73    13180        %VLP_ACCT(
       74    13181                   FPTN=LDTRC_ACCT,
       75    13182                   STCLASS=STATIC);
       76    13195        %VLP_PASS(
       77    13196                   FPTN=LDTRC_PASS,
       78    13197                   STCLASS=STATIC);
       79    13210        %VLP_SN(
       80    13211                   FPTN=LDTRC_SN,
       81    13212                   STCLASS=STATIC);
       82    13225        %FPT_EXIT( FPTN=SET_STEPCC , STEPCC=ERROR );
       83    13240        %FILE;
       84    13249    1   DCL F$SN_      CHAR(6)   ALIGNED   BASED;
       85    13250    1   DCL 1 STAR_L         ALIGNED   CONSTANT,
PL6.E3A0      #001=VXM$MAIN File=VXM$MAIN.:E05TSI                                WED 07/30/97 08:18 Page:11   
       86    13251    1         2 COUNT        UBIN(9)   UNAL INIT(2),
       87    13252    1         2 CHARS        CHAR(2)   UNAL INIT('*L');
       88    13253    1   DCL VX_N_START_SYMBOL1    UBIN    SYMREF;
       89    13254    1   DCL VX_N_START_SYMBOL2    UBIN    SYMREF;
       90    13255        %EJECT;
PL6.E3A0      #001=VXM$MAIN File=VXM$MAIN.:E05TSI                                WED 07/30/97 08:18 Page:12   
       91    13256        /* Do initialization */
       92    13257    1        CALL VXI$INIT;
       93    13258        /* Now parse */
       94    13259    1        CALL VXP$PARSE( ADDR(VX_N_START_SYMBOL1), 0 );
       95    13260        /* Is it link or map */
       96    13261    2        DO CASE( VX_COMMAND );
       97    13262    2          CASE(0);
       98    13263    2   MAP_COMMAND:
       99    13264    2             CALL VXO$IMPL;
      100    13265    2             CALL VXF$OPEN( VX_RUF$, 1/*@RF*/, %IN# );
      101    13266    2             CALL VXM$MAP;
      102    13267    2             CALL VXF$CLOSE( VX_RUF$, 1/*@RF*/, 2/*@SAVE*/ ); /* Close ru file */
      103    13268    2             CALL VXF$CLOSE( VX_LOF$, 4/*@LO*/, 2/*@SAVE*/ ); /* Close lo file */
      104    13269    2          CASE( 1,
      105    13270    2                     2,
      106    13271    2                     3,
      107    13272    2                     4 );
      108    13273        /* It's a link */
      109    13274        /* Check if indirections for command */
      110    13275    2             IF VX_FID_COUNT = 1
      111    13276    3             THEN DO;
      112    13277    3                  PTR$ = VX_ROOT$ -> VX$NODE.HEAD$;
      113    13278    3                  CALL VXF$OPEN( PTR$, 3/*@SF*/ );
      114    13279        /* Now check if indirect command stream */
      115    13280    3                  CH = SUBSTR( M$EI$ -> F$DCB.TYPE#, 0, 1 );
      116    13281    4                  IF CH ~= 'O' AND CH ~= 'R' AND M$EI$->F$DCB.TYPE# ~= 'LE' THEN DO;
      117    13282    4                       IF CH = 'D' OR CH ='S' THEN GOTO DO_IT;
      118    13283    5                       IF M$EI$ -> F$DCB.ORG# = 2/*@KEYED*/ THEN DO;
      119    13284    5                            VX_O_KEY_BUF_L.FORM0.COUNT = LENGTHC( VX_O_KEY_HEAD );
      120    13285    5                            VX_O_KEY_BUF_L.FORM0.CHARS = VX_O_KEY_HEAD;
      121    13286    5                            VX_EI_FPT_READ.BUF_ = VECTOR( VX_OU_HEAD );
      122    13287    5                            VX_EI_FPT_READ.KEY_ = VECTOR( VX_O_KEY_BUF_L );
      123    13288    5                            VX_EI_FPT_READ.V.KEYS# = '1'B/*@TRUE_B*/;
      124    13289    5                            CALL M$READ( VX_EI_FPT_READ )      ALTRET( NEXT );
      125    13290    5   NEXT:
      126    13291    5                            VX_O_KEY_BUF_L = '0'B;
      127    13292    5                            VX_EI_FPT_READ.V.KEYS# = '0'B/*@FALSE_B*/;
PL6.E3A0      #001=VXM$MAIN File=VXM$MAIN.:E05TSI                                WED 07/30/97 08:18 Page:13   
      128    13293    5                            CALL M$READ( VX_EI_FPT_READ )      ALTRET( NOT_OBJECT );
      129    13294    5   NEXT_AGAIN:
      130    13295    5                            VX_EI_FPT_READ.KEY_ = VECTOR( VX_EI_KEY_BUF );
      131    13296    5                            IF SUBSTR( VX_O_KEY_BUF_L.FORM0.CHARS, 0, 1 )
      132    13297    5                                    =
      133    13298    6                                    VX_O_KEY_HEAD THEN DO;
      134    13299    6                                 CALL VXK$KEY( 0/*@OF*/, %TYPSECT, 0, 0 );
      135    13300    6                                 VX_O_KEY_BUF_L = VX_O_KEY_BUF;
      136    13301    6                                 VX_EI_FPT_READ.KEY_ = VECTOR( VX_O_KEY_BUF );
      137    13302    6                                 VX_EI_FPT_READ.V.KEYS# = '1'B/*@TRUE_B*/;
      138    13303    6                                 CALL M$READ( VX_EI_FPT_READ )                ALTRET(
             13303                                          NEXT_AGAIN1 );
      139    13304    6   IS_OBJECT:
      140    13305    6                                 VX_EI_FPT_READ.V.KEYS# = '0'B/*@FALSE_B*/;
      141    13306    6                                 VX_EI_FPT_READ.KEY_ = VECTOR( VX_EI_KEY_BUF );
      142    13307    6                                 VX_O_KEY_BUF = '0'B;
      143    13308    6                                 VX_O_KEY_BUF_L = '0'B;
      144    13309    6                                 GOTO JUMP_OUT;
      145    13310    6   NEXT_AGAIN1:
      146    13311    6                                 ERR = B$TCB$ -> B$TCB.ALT$ -> B$ALT.ERR.ERR#;
      147    13312    6                                 IF ERR ~= %E$NOKEY THEN GOTO IS_OBJECT;
      148    13313    6                                 VX_EI_FPT_READ.V.KEYS# = '0'B/*@FALSE_B*/;
      149    13314    6                                 VX_O_KEY_BUF = '0'B;
      150    13315    6                                 VX_O_KEY_BUF_L = '0'B;
      151    13316    6   NOT_OBJECT:
      152    13317    6                                 VX_EI_FPT_READ.KEY_ = VECTOR( VX_EI_KEY_BUF );
      153    13318    6                                 CALL M$REW( FPT_REW );
      154    13319    6                               END;        /* If ... */
      155    13320    5                            CALL M$REW( FPT_REW );
      156    13321    5                          END;   /* If M$EI$ -> F$DCB.ORG# = @KEYED then do; */
      157    13322    4   DO_IT:
      158    13323    4                       VX_FID_COUNT = 0;
      159    13324    4                       VX_NODE_NUMBER = VX_NODE_NUMBER - 1;
      160    13325    4                       CALL VXP$PARSE( ADDR(VX_N_START_SYMBOL2), 1 );
      161    13326    4                       IF VX_COMMAND = 0 THEN GOTO MAP_COMMAND;
      162    13327    4                     END;                  /* If ch ~= 'O' then do; */
      163    13328    3   JUMP_OUT:
PL6.E3A0      #001=VXM$MAIN File=VXM$MAIN.:E05TSI                                WED 07/30/97 08:18 Page:14   
      164    13329        /* Now close */
      165    13330    3                  CALL VXF$CLOSE( PTR$, 3/*@SF*/, 2/*@SAVE*/ );
      166    13331    3                END;
      167    13332    3             IF VX_RUF$ = ADDR(NIL) THEN DO;
      168    13333        /**/
      169    13334    3                  VX_ON_OVER_RUF = 1;
      170    13335    3                  CALL VXS$LST( VX_RUF$, ADDR( STAR_L ), 1/*@RF*/, 0, ADDR(NIL), 0 );
      171    13336    3                END;
      172    13337    2             CALL VXO$IMPL;
      173    13338        /* Open run file */
      174    13339    2             CALL VXF$OPEN( VX_RUF$, 1/*@RF*/, %CREATE# );
      175    13340    2             CALL VXO$PASS1;               /* Do pass 1 */
      176    13341    2             VX_OD.SIN.LSAU = '0'B;
      177    13342    2             CALL VXO$LLMU;
      178    13343    2             IF VX_DO_PASS1 = 1 THEN
      179    13344    3             DO;
      180    13345    3                  CALL VXT$ALL;            /* Do allocation   */
      181    13346    3                  CALL VXT$PRE;
      182    13347    3                  CALL VXT$PASS2;          /* And pass 2 */
      183    13348    3                  CALL VXT$POST;
      184    13349    3                END;
      185    13350    3             ELSE DO;
      186    13351                       %ERROR_IT;
      187    13354    3                END;
      188    13355        /* Now do any mapping */
      189    13356    2             CALL VXM$MAP;
      190    13357        /* And any post processing */
      191    13358    2             CALL M$XCON(FPT_XCON);        /* Reset XCON */
      192    13359                                           /* Finish building the transfer vector */
      193    13360    2             IF VX_OD.VECTOR_ THEN CALL VXU$FINISH_VECTOR;
      194    13361    3             IF VX_ERR_SEV > VX_O.NUM.SEVERITY THEN DO;
      195    13362        /*E*  ERROR: VXM-E$MAX_SEV_EXCEEDED_VX-0
      196    13363              MESSAGE: Maximum severity level exceeded.  Maximum = %U1.
      197    13364              DESCRIPTION: Self-explanatory.
      198    13365        */
      199    13366                       %NUMBER( NUM1="VX_O.NUM.SEVERITY", BASE1=10 );
      200    13383                       %SCREAM( ERR#=E$MAX_SEV_EXCEEDED_VX, MID="'M'", LEVEL=@E$F_D_VX );
PL6.E3A0      #001=VXM$MAIN File=VXM$MAIN.:E05TSI                                WED 07/30/97 08:18 Page:15   
      201    13386    3                  CALL VXF$CLOSE( VX_LOF$, 4/*@LO*/, 2/*@SAVE*/ ); /* Close lo file */
      202    13387    3                  CALL M$EXIT(SET_STEPCC);
      203    13388    3                END;
      204    13389    2             CALL VXF$CLOSE( VX_LOF$, 4/*@LO*/, 2/*@SAVE*/ ); /* Close lo file */
      205    13390    2             CALL VXF$CLOSE( VX_RUF$, 1/*@RF*/, 2/*@SAVE*/ ); /* Close ru file */
      206    13391    2             IF NOT VX_OD.SIN.NPLOVER THEN CALL VXU$RUM /* Apply rums to ru */
      207    13392    3                  WHENALTRETURN DO ;
      208    13393    3                       CALL VXF$OPEN ( VX_RUF$, 1/*@RF*/, 1/*@UPDATE*/ ) ;
      209    13394    3                       VX_ERR_SEV = MAXIMUM ( VX_ERR_SEV, 11 ) ;
      210    13395    3                       VX_RU_HEAD.SEV = VX_ERR_SEV ;
      211    13396    3                       CALL VXI$WRITE ( 1/*@RF*/,
      212    13397    3                               ADDR(VX_RU_HEAD),
      213    13398    3                               SIZEW(VX_RU_HEAD),
      214    13399    3                               1/*@RF*/ ) ;
      215    13400    3                       CALL VXF$CLOSE ( VX_RUF$, 1/*@RF*/, 2/*@SAVE*/ ) ;
      216    13401    3                       CALL VXE$ERRMSG ( , 4 ) ;
      217    13402    3                     END ;
      218    13403    2          END;
      219    13404        /* Now check if run was specified */
      220    13405    1        IF (VX_COMMAND > 0  AND  VX_O.SIN.RUN ~= 0)  OR  (VX_COMMAND = 4)
      221    13406    2        THEN DO;
      222    13407        /* Give back memory*/
      223    13408    2             LDTRC_NAME.L# = VX_RUF$ -> VX$LST.P.NAME_.NAME$ -> T$C.COUNT;
      224    13409    2             LDTRC_NAME.NAME# = VX_RUF$ -> VX$LST.P.NAME_.NAME$ -> T$C.CHARS;
      225    13410    2             IF VX_RUF$ -> VX$LST.P.ACCT_ ~= VECTOR(NIL) THEN
      226    13411    2                  LDTRC_ACCT.ACCT# = VX_RUF$ -> VX$LST.P.ACCT_.ACCT$ -> F$ACCT_;
      227    13412    2             ELSE FPT_LDTRC.ACCT_ = VECTOR(NIL);
      228    13413    2             IF VX_RUF$ -> VX$LST.P.PASS_ ~= VECTOR(NIL) THEN
      229    13414    2                  LDTRC_PASS.PASS# = VX_RUF$ -> VX$LST.P.PASS_.PASS$ -> F$PASS_;
      230    13415    2             ELSE FPT_LDTRC.PASS_ = VECTOR(NIL);
      231    13416    2             IF VX_M_ALL(1) > 0 THEN CALL VXF$FREE( 1, VX_M_ALL(1), 1);
      232    13417    2             IF VX_RUF$ -> VX$LST.P.SN_ ~= VECTOR(NIL) THEN
      233    13418    2                  LDTRC_SN.SN#(0) = VX_RUF$ -> VX$LST.P.SN_.SN$ -> F$SN_;
      234    13419    2             ELSE FPT_LDTRC.PSID_ = VECTOR(NIL);
      235    13420        /**/
      236    13421    2             IF VX_M_ALL(1) > 0 THEN CALL VXF$FREE( 1, VX_M_ALL(1), 1 );
      237    13422        /**/
PL6.E3A0      #001=VXM$MAIN File=VXM$MAIN.:E05TSI                                WED 07/30/97 08:18 Page:16   
      238    13423    2             CALL M$LDTRC( FPT_LDTRC )          ALTRET( ERROR );
      239    13424        /**/
      240    13425    2   ERROR:
      241    13426        /*E*  ERROR: VXM-E$LDTRC_FAIL_VX-0
      242    13427              MESSAGE: M$LDTRC failed by LINK.
      243    13428              DESCRIPTION: Self-explanatory.
      244    13429        */
      245    13430                  %SCREAM( ERR#=E$LDTRC_FAIL_VX, LEVEL=@E$F_VX, MID="'M'" );
      246    13433    2           END;
      247    13434    2        IF VX_RU_HEAD.SEV > 0 THEN DO;
      248    13435    2             SET_STEPCC.V.STEPCC# = VX_RU_HEAD.SEV;
      249    13436    2             CALL M$EXIT (SET_STEPCC);
      250    13437    2           END;
      251    13438
      252    13439    1   END VXM$MAIN;

PL6.E3A0      #001=VXM$MAIN File=VXM$MAIN.:E05TSI                                WED 07/30/97 08:18 Page:17   
--  Include file information  --

   CP_6_SUBS.:E05TOU  is referenced.
   B_ERRORS_C.:E05TOU  is referenced.
   VX_PSUBS_C.:E05TOU  is referenced.
   F_DCB_D.:E05TOU  is referenced.
   VX_DCB_R.:E05TOU  cannot be made into a system file and is referenced.
   VX_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   VX_FIXED_R.:E05TOU  cannot be made into a system file and is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   VX_MACRO_C.:E05TOU  is referenced.
   VX_PERR_C.:E05TOU  is referenced.
   VX_SUBS_C.:E05TOU  is referenced.
   VX_SWITCH_C.:E05TOU  is referenced.
   B$OBJECT_C.:E05TOU  is referenced.
   VX_INC_C.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure VXM$MAIN.

   Procedure VXM$MAIN requires 406 words for executable code.
   Procedure VXM$MAIN requires 20 words of local(AUTO) storage.

    No errors detected in file VXM$MAIN.:E05TSI    .

PL6.E3A0      #001=VXM$MAIN File=VXM$MAIN.:E05TSI                                WED 07/30/97 08:18 Page:18   

 Object Unit name= VXM$MAIN                                   File name= VXM$MAIN.:E05TOU
 UTS= JUL 30 '97 08:18:14.12 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1  LblCom even  none    96    140  VX_CONST_DCB
    2  RoData even  UTS      8     10  VXM$MAIN
    3   DCB   even  none     0      0  M$EI
    4   Data  even  none    44     54  VXM$MAIN
    5   Proc  even  none   406    626  VXM$MAIN
    6  RoData even  none    61     75  VXM$MAIN

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     5      0   yes            yes      Main       0  VXM$MAIN
PL6.E3A0      #001=VXM$MAIN File=VXM$MAIN.:E05TSI                                WED 07/30/97 08:18 Page:19   

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       0 VXI$INIT
         yes           Std       0 VXO$IMPL
 yes     yes           Std       3 VXF$OPEN
         yes           Std       0 VXT$PRE
         yes           Std       0 VXT$POST
         yes           Std       0 VXM$MAP
         yes           Std       4 VXE$ERROR
         yes           Std       3 VXF$CLOSE
         yes           Std       4 VXK$KEY
         yes           Std       3 VXF$FREE
         yes           Std       0 VXU$FINISH_VECTOR
         yes           Std       3 VXE$ERRMSG
 yes     yes           Std       6 VXS$LST
         yes           Std       5 VXD$B2C
         yes           Std       0 VXT$ALL
         yes           Std       2 VXP$PARSE
         yes           Std       0 VXO$PASS1
         yes           Std       0 VXO$LLMU
 yes     yes           Std       4 VXI$WRITE
         yes           Std       0 VXT$PASS2
 yes     yes           Std       0 VXU$RUM
                       nStd      0 X66_MAUTO
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_MARET
PL6.E3A0      #001=VXM$MAIN File=VXM$MAIN.:E05TSI                                WED 07/30/97 08:18 Page:20   

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                                  VX_O_KEY_BUF                          VX_O_KEY_BUF_L
     B$TCB$                                VX_RU_HEAD                            VX_OU_HEAD
     VX_COMMAND                            VX_ON_OVER_RUF                        VX_DO_PASS1
     VX_FID_COUNT                          VX_NODE_NUMBER                        VX_ROOT$
     VX_RUF$                               VX_LOF$                               VX_ERRORS
     VX_ERR_SEV                            VX_M_ALL                              VX_O
     VX_OD                                 VX_EFIELD1                            VX_O_KEY_HEAD
     VX_EI_KEY_BUF                         M$EI$                                 M$EI
     VX_EI_FPT_READ                        VX_N_START_SYMBOL1                    VX_N_START_SYMBOL2
     B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     NULLSID                               ISSID
PL6.E3A0      #001=VXM$MAIN File=VXM$MAIN.:E05TSI                                WED 07/30/97 08:18 Page:21   


        1        1        /*M* VXM$MAIN - MAIN FUNCTION DRIVER; GLOBAL CONTROLLER         */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* DMR,PLM=5,IND=5,CSU=3,EXM=0,ECU=3,MOC,DCI=5,CRT=5,CTI=8     */
        8        8        /*F* NAME:        VXM$MAIN
        9        9             PURPOSE:     Main function driver; global controller.
       10       10             DESCRIPTION:
       11       11             LINK is entered at VXM$MAIN. VXM$MAIN proceeds to perform initialization
       12       12         and parsing of the command stream. VXM$MAIN then routes control based upon the
       13       13         command encountered (link or map). If a linking command was encountered then
       14       14         control proceeds to VXO$PASS1, VXO$PASS2 and VXM$MAP. If the command was a map
       15       15         then control proceeds to VXM$MAP. Exit from the main driver is typically a
       16       16        normal exit, however, a run option/command will do a M$LDTRC to the image formed
       17       17                                                                        */
       18       18        VXM$MAIN: PROC MAIN;

     18  5 000000   000000 700200 xent  VXM$MAIN     TSX0  ! X66_MAUTO
         5 000001   000024 000000                    ZERO    20,0

       19       19
       20       20        %INCLUDE VX_INC_C;
       21    10736        %INCLUDE VX_PSUBS_C;
       22    10914        %INCLUDE B_ERRORS_C;
       23    12041        %INCLUDE CP_6_SUBS;
       24    12581        %B$TCB;
       25    12584        %B$ALT;
       26    12592        %VX$NODE;

             12604    1   /*******************************************************************************
             12605    1   *                                                                              *
             12606    1   *                          VX$NODE                                                *
             12607    1   *                                                                              *
             12608    1   *******************************************************************************/
PL6.E3A0      #001=VXM$MAIN File=VXM$MAIN.:E05TSI                                WED 07/30/97 08:18 Page:22   

             12624    1   DCL 1 VX$NODE      ALIGNED    BASED,
             12625    1         2 SON$ PTR /*(ADDR(NIL))*/, /* Son pointer                      */
             12626    1         2 BROTHER$ PTR /*(ADDR(NIL))*/, /* Brother pointer              */
             12627    1         2 FATHER$ PTR /*(ADDR(NIL))*/, /* Father pointer                */
             12628    1         2 PATH$ PTR /*(ADDR(NIL))*/, /* Path   pointer                  */
             12629    1         2 HEAD$       PTR /*(ADDR(NIL))*/, /* Head pointer to
             12630                              to list of file nodes for this node            */
             12631    1         2 TAIL$ PTR /*(ADDR(NIL))*/, /* Tail pointer to list            */
             12632    1         2 SHARED_LIB_HEAD$ PTR /*(ADDR(NIL))*/,
             12632                  /* Head pointer to shared library list */
             12633    1         2 LIB_HEAD$         PTR /*(ADDR(NIL))*/,
             12633                  /* Head pointer to list of shared libraries
             12634                                          which have been mapped to included libraries */
             12635    1         2 NUM          UBIN(36)  UNAL,    /* Node number                        */
             12636    1         2 DEPTH          UBIN(36)  UNAL,  /* Depth; ROOT=0*/
             12637    1         2 ADDR_START_A(0:2/*@ROS*/) SBIN WORD /*(0*3)*/, /* Array            */
             12638    1         2 ADDR_START REDEF  ADDR_START_A,
             12639    1           3 RDATA       SBIN WORD,   /* First address for this node in data     */
             12640    1           3 RPROC       SBIN WORD,   /* First address for this node in proc     */
             12641    1           3 ROS       SBIN WORD,          /* Last address for program in ros    */
             12642    1         2 ADDR_STOP_A(0:2/*@ROS*/) SBIN WORD /*(-1*3)*/, /* Array            */
             12643    1         2 ADDR_STOP  REDEF  ADDR_STOP_A,
             12644    1           3 RDATA       SBIN WORD,        /* Last address for this node in data */
             12645    1           3 RPROC       SBIN WORD,        /* Last address for this node in proc */
             12646    1           3 ROS       SBIN WORD,          /* Last address for program in ros    */
             12647    1         2 START_PAGE#_A(0:2/*@ROS*/) SBIN WORD /*(0*3)*/, /* Array           */
             12648    1         2 START_PAGE# REDEF START_PAGE#_A,
             12649    1           3 RDATA       SBIN WORD,   /* First page    for this node in data     */
             12650    1           3 RPROC       SBIN WORD,   /* First page    for this node in proc     */
             12651    1           3 ROS       SBIN WORD,          /* First page   for program in ros    */
             12652    1         2 STOP_PAGE#_A(0:2/*@ROS*/) SBIN WORD /*(-1*3)*/, /* Array*/
             12653    1         2 STOP_PAGE#  REDEF STOP_PAGE#_A,
             12654    1           3 RDATA       SBIN WORD,   /* Last  page    for this node in data     */
             12655    1           3 RPROC       SBIN WORD,   /* Last  page    for this node in proc     */
             12656    1           3 ROS       SBIN WORD,          /* Last  page   for program in ros    */
             12657    1         2 START_SC_ALL$ PTR /*(ADDR(NIL))*/,
PL6.E3A0      #001=VXM$MAIN File=VXM$MAIN.:E05TSI                                WED 07/30/97 08:18 Page:23   
             12657                  /* Starting pointer for common sections for this node */
             12658    1         2 STOP_SC_ALL$ PTR /*(ADDR(NIL))*/,
             12658                  /* Stopping pointer for common sections for this node */
             12659    1         2 L_START,
             12660    1           3 SN$ PTR /*(ADDR(NIL))*/, /* Segment definition names        */
             12661    1           3 DN$ PTR /*(ADDR(NIL))*/, /* Def names                       */
             12662    1           3 RN$ PTR /*(ADDR(NIL))*/, /* Ref names                       */
             12663    1           3 SC$ PTR /*(ADDR(NIL))*/, /* Sections                        */
             12664    1           3 ED$ PTR /*(ADDR(NIL))*/, /* Entry defs*/
             12665    1           3 ER$ PTR /*(ADDR(NIL))*/, /* Entry refs*/
             12666    1           3 DD$ PTR /*(ADDR(NIL))*/, /* Data defs                       */
             12667    1           3 DR$ PTR /*(ADDR(NIL))*/, /* Data refs                       */
             12668    1           3 SD$ PTR /*(ADDR(NIL))*/, /* Seg defs                        */
             12669    1           3 SR$ PTR /*(ADDR(NIL))*/, /* Seg refs                        */
             12670    1         2 L_START_A$(0:9)     REDEF L_START PTR,
             12671    1         2 L_STOP,
             12672    1           3 SN$ PTR /*(ADDR(NIL))*/, /* Segment definition names        */
             12673    1           3 DN$ PTR /*(ADDR(NIL))*/, /* Def names                       */
             12674    1           3 RN$ PTR /*(ADDR(NIL))*/, /* Ref names                       */
             12675    1           3 SC$ PTR /*(ADDR(NIL))*/, /* Sections                        */
             12676    1           3 ED$ PTR /*(ADDR(NIL))*/, /* Entry defs*/
             12677    1           3 ER$ PTR /*(ADDR(NIL))*/, /* Entry refs*/
             12678    1           3 DD$ PTR /*(ADDR(NIL))*/, /* Data defs                       */
             12679    1           3 DR$ PTR /*(ADDR(NIL))*/, /* Data refs                       */
             12680    1           3 SD$ PTR /*(ADDR(NIL))*/, /* Seg defs                        */
             12681    1           3 SR$ PTR /*(ADDR(NIL))*/, /* Seg refs                        */
             12682    1         2 L_STOP_A$(0:9) REDEF   L_STOP    PTR,
             12683    1         2 L_SIZE,
             12684    1           3 SN      UBIN /*(0)*/, /* Segment definition names           */
             12685    1           3 DN      UBIN /*(0)*/, /* Def names                          */
             12686    1           3 RN      UBIN /*(0)*/, /* Ref names                          */
             12687    1           3 SC      UBIN /*(0)*/, /* Sections                           */
             12688    1           3 ED      UBIN /*(0)*/, /* Entry defs*/
             12689    1           3 ER      UBIN /*(0)*/, /* Entry refs*/
             12690    1           3 DD      UBIN /*(0)*/, /* Data defs                          */
             12691    1           3 DR      UBIN /*(0)*/, /* Data refs                          */
             12692    1           3 SD      UBIN /*(0)*/, /* Seg defs                           */
PL6.E3A0      #001=VXM$MAIN File=VXM$MAIN.:E05TSI                                WED 07/30/97 08:18 Page:24   
             12693    1           3 SR      UBIN /*(0)*/, /* Seg refs                           */
             12694    1         2 L_SIZE_A(0:9)  REDEF   L_SIZE    UBIN,
             12695    1         2 L_PREV_SIZE,
             12696    1           3 SN      UBIN /*(0)*/, /* Segment definition names           */
             12697    1           3 DN      UBIN /*(0)*/, /* Def names                          */
             12698    1           3 RN      UBIN /*(0)*/, /* Ref names                          */
             12699    1           3 SC      UBIN /*(0)*/, /* Sections                           */
             12700    1           3 ED      UBIN /*(0)*/, /* Entry defs*/
             12701    1           3 ER      UBIN /*(0)*/, /* Entry refs*/
             12702    1           3 DD      UBIN /*(0)*/, /* Data defs                          */
             12703    1           3 DR      UBIN /*(0)*/, /* Data refs                          */
             12704    1           3 SD      UBIN /*(0)*/, /* Seg defs                           */
             12705    1           3 SR      UBIN /*(0)*/, /* Seg refs                           */
             12706    1         2 L_PREV_SIZE_A(0:9)  REDEF   L_PREV_SIZE    UBIN,
             12707    1         2 BIT_MAP                ALIGNED,
             12708    1           3 DATA                  ALIGNED,
             12709    1             4 BITS(0:255)          BIT(1)    UNAL /*('0'B*256)*/,
             12710    1           3 RPROC                 ALIGNED,
             12711    1             4 BITS(0:255)          BIT(1)    UNAL /*('0'B*256)*/,
             12712    1           3 ROS                   ALIGNED,
             12713    1             4 BITS(0:255)          BIT(1)    UNAL /*('0'B*256)*/,
             12714    1         2 L_SC_START,
             12715    1           3 SC_BLK_COM$ PTR /*(ADDR(NIL))*/, /* Blank common            */
             12716    1           3 SC_ROOT_LBL_COM$ PTR /*(ADDR(NIL))*/, /* Root labelled common */
             12717    1           3 SC_LBL_COM$ PTR /*(ADDR(NIL))*/, /* Labelled common         */
             12718    1           3 SC_DCB$ PTR /*(ADDR(NIL))*/, /* Dcbs                        */
             12719    1         2 L_SC_START_A$(0:3)  REDEF L_SC_START PTR,
             12720    1         2 L_SC_STOP,
             12721    1           3 SC_BLK_COM$ PTR /*(ADDR(NIL))*/, /* Blank common            */
             12722    1           3 SC_ROOT_LBL_COM$ PTR /*(ADDR(NIL))*/, /* Root labelled common */
             12723    1           3 SC_LBL_COM$ PTR /*(ADDR(NIL))*/, /* Labelled common         */
             12724    1           3 SC_DCB$ PTR /*(ADDR(NIL))*/, /* Dcbs                        */
             12725    1         2 L_SC_STOP_A$(0:3)   REDEF L_SC_STOP  PTR,
             12726    1         2 PROMOTE_HEAD,
             12727    1           3 BLK_COM$              PTR /*(ADDR(NIL))*/,
             12728    1           3 LBL_COM$              PTR /*(ADDR(NIL))*/,
             12729    1         2 PROMOTE_HEAD_A$(0:1) REDEF PROMOTE_HEAD     PTR,
PL6.E3A0      #001=VXM$MAIN File=VXM$MAIN.:E05TSI                                WED 07/30/97 08:18 Page:25   
             12730    1         2 PROMOTE_TAIL,
             12731    1           3 BLK_COM$              PTR /*(ADDR(NIL))*/,
             12732    1           3 LBL_COM$              PTR /*(ADDR(NIL))*/,
             12733    1         2 PROMOTE_TAIL_A$(0:1) REDEF PROMOTE_TAIL     PTR,
             12734    1         2 HAVE_ASL          BIT(1)    UNAL /*('0'B)*/,
             12735    1         2 ALL_BLK_COM          BIT(1)    UNAL /*('0'B)*/,
             12736    1         2 USE_NODE          BIT(1)    UNAL /*('0'B)*/,
             12737    1         2 *                 BIT(33)   UNAL /*('0'B)*/,
             12738    1         2 BLANK_COMMON$     PTR       ALIGNED /*(ADDR(NIL))*/;

       27    12742        %VX$LST;

             12755    1   /*******************************************************************************
             12756    1   *                                                                              *
             12757    1   *                          VX$LST                                                 *
             12758    1   *                                                                              *
             12759    1   *******************************************************************************/

             12764    1   DCL 1 VX$LST                          ALIGNED BASED,
             12765    1         2 LINK$        PTR,               /* Link to next item                  */
             12766    1         2 TYPE         UBIN( 18) UNAL,    /* Type                               */
             12767    1         2 SUB_TYPE     UBIN( 18) UNAL,    /* Sub-type                           */
             12768    1         2 OBJECT_NAME$ PTR,               /* Pointer to object unit name        */
             12769    1         2 PRIOR$ REDEF OBJECT_NAME$ PTR,  /* Pointer to prior element in list   */
             12770    1         2 SC_HEAD$     PTR,               /* Head pointer to section link list  */
             12771    1         2 LIBSRCH$ REDEF SC_HEAD$ PTR,    /* Pointer to account list for library*/
             12772    1         2 SC_TAIL$     PTR,               /* Tail pointer to section link list  */
             12773    1         2 LIB REDEF SC_TAIL$,             /* Used only by UNSAT library files   */
             12774    1           3 USED UBIN HALF UNAL,          /* 1 => library file used, 0=>not used*/
             12775    1           3 NEEDED UBIN HALF UNAL,   /* 1 => library file needed, 0=>not needed*/
             12776    1         2 P,
             12777    1           3 NAME_       ALIGNED,
             12778    1             4 BOUND      UBIN(20)  UNAL,
             12779    1             4 FLAGSV     UBIN(11)  UNAL,
             12780    1             4 *          BIT(5)    UNAL,
             12781    1             4 NAME$      PTR,
             12782    1           3 ACCT_       ALIGNED,
PL6.E3A0      #001=VXM$MAIN File=VXM$MAIN.:E05TSI                                WED 07/30/97 08:18 Page:26   
             12783    1             4 BOUND      UBIN(20)  UNAL,
             12784    1             4 FLAGSV     UBIN(11)  UNAL,
             12785    1             4 *          BIT(5)    UNAL,
             12786    1             4 ACCT$      PTR,
             12787    1           3 PASS_       ALIGNED,
             12788    1             4 BOUND      UBIN(20)  UNAL,
             12789    1             4 FLAGSV     UBIN(11)  UNAL,
             12790    1             4 *          BIT(5)    UNAL,
             12791    1             4 PASS$      PTR,
             12792    1           3 SN_         ALIGNED,
             12793    1             4 BOUND      UBIN(20)  UNAL,
             12794    1             4 FLAGSV     UBIN(11)  UNAL,
             12795    1             4 *          BIT(5)    UNAL,
             12796    1             4 SN$        PTR,
             12797    1           3 WSN_        ALIGNED,
             12798    1             4 BOUND      UBIN(20)  UNAL,
             12799    1             4 FLAGSV     UBIN(11)  UNAL,
             12800    1             4 *          BIT(5)    UNAL,
             12801    1             4 WSN$       PTR,
             12802    1           3 B           ALIGNED,
             12803    1             4 RES        BIT(1)    UNAL,
             12804    1             4 ASN        BIT(1)    UNAL,
             12805    1             4 ACCT       BIT(1)    UNAL,
             12806    1             4 *          BIT(33)   UNAL,
             12807    1           3 RES         CHAR(4)   ALIGNED,
             12808    1           3 ASN         UBIN(36)  ALIGNED;
       28    12811        %T$C;

             12823    1   /*******************************************************************************
             12824    1   *                                                                              *
             12825    1   *                          T$C                                                 *
             12826    1   *                                                                              *
             12827    1   *******************************************************************************/

             12832    1   DCL 1 T$C           BASED     ALIGNED,  /* Text count                         */
             12833    1         2 COUNT        UBIN( 9) UNAL,
             12834    1         2 CHARS        CHAR( T$C.COUNT )   UNAL;
PL6.E3A0      #001=VXM$MAIN File=VXM$MAIN.:E05TSI                                WED 07/30/97 08:18 Page:27   
             12835    1   DCL 1 T$C_UNAL      BASED     UNAL,     /* Text count                         */
             12836    1         2 COUNT        UBIN( 9) UNAL,
             12837    1         2 CHARS        CHAR( T$C_UNAL.COUNT ) UNAL;
       29    12840        %SET LISTMAC='1'B;
       30    12841        %SET LISTSUB='1'B;
       31    12842        %BANNER(ARG=SUBS);
             12843        %LSET LISTDIR='0'B;

             12850    1   /*******************************************************************************
             12851    1   *                                                                              *
             12852    1   *                          SUBS                                                 *
             12853    1   *                                                                              *
             12854    1   *******************************************************************************/

       32    12858        %B$RECORDSUBS;
             12859        %EQU TYPHEAD=0 ;
             12860        %EQU TYPDNAM=1 ;
             12861        %EQU TYPRNAM=2 ;
             12862        %EQU TYPSECT=3 ;
             12863        %EQU TYPEDEF=4 ;
             12864        %EQU TYPEREF=5 ;
             12865        %EQU TYPSDEF=6 ;
             12866        %EQU TYPSREF=7 ;
             12867        %EQU TYPSEGDEF=8 ;
             12868        %EQU TYPSEGREF=9 ;
             12869        %EQU TYPPROG=10 ;
             12870        %EQU SUBTYPPROG=0 ;
             12871        %EQU SUBTYPREL=1 ;
             12872        %EQU TYPLOGBLK=11 ;
             12873        %EQU TYPINTNTRY=12 ;
             12874        %EQU TYPEXST=13 ;
             12875        %EQU TYPVREBL=14 ;
             12876        %EQU TYPDBGNAM=15 ;
             12877        %EQU TYPLV1LB=16 ;
             12878        %EQU TYPLV1=17 ;
             12879        %EQU TYPDATASEG=18 ;
             12880        %EQU TYPRUM=20 ;
PL6.E3A0      #001=VXM$MAIN File=VXM$MAIN.:E05TSI                                WED 07/30/97 08:18 Page:28   
             12881        %EQU TYPBIRTH=21 ;
             12882        %EQU TYPPLOVER=22 ;
             12883        %EQU TYPCOMPID=23 ;
             12884        %EQU TYPROS=30 ;
       33    12886        %C;
             12887        %LSET LISTDIR='0'B;

             12894    1   /*******************************************************************************
             12895    1   *                                                                              *
             12896    1   *                          CHAR                                                 *
             12897    1   *                                                                              *
             12898    1   *******************************************************************************/

       34    12902    1   DCL CH         CHAR(1)  ALIGNED   AUTO;
       35    12903        %U;
             12904        %LSET LISTDIR='0'B;

             12911    1   /*******************************************************************************
             12912    1   *                                                                              *
             12913    1   *                          UBIN                                                 *
             12914    1   *                                                                              *
             12915    1   *******************************************************************************/

       36    12919        %INDEX;
             12920    1   DCL I          UBIN(36) ALIGNED AUTO;
             12921    1   DCL SI REDEF I SBIN WORD ALIGNED;
             12922    1   DCL J          UBIN(36) ALIGNED AUTO;
             12923    1   DCL SJ REDEF J SBIN WORD ALIGNED;
             12924    1   DCL K          UBIN(36) ALIGNED AUTO;
             12925    1   DCL SK REDEF K SBIN WORD ALIGNED;
             12926    1   DCL L          UBIN(36) ALIGNED AUTO;
             12927    1   DCL SL REDEF L    SBIN WORD ALIGNED;
       37    12929    1   DCL ERR             UBIN(36)  ALIGNED   AUTO;
       38    12930        %E;
             12931        %LSET LISTDIR='0'B;

             12938    1   /*******************************************************************************
PL6.E3A0      #001=VXM$MAIN File=VXM$MAIN.:E05TSI                                WED 07/30/97 08:18 Page:29   
             12939    1   *                                                                              *
             12940    1   *                          ENTRY                                                 *
             12941    1   *                                                                              *
             12942    1   *******************************************************************************/

       39    12946        %ENTRIES;
             12947    1   DCL VXE$ERROR       ENTRY(4);
             12948    1   DCL VXE$ERR         ENTRY(3);
             12949    1   DCL VXE$MERC        ENTRY;
             12950    1   DCL VXE$ERRMSG      ENTRY(3);
             12951    1   DCL VXR$READ        ENTRY( 3 );
             12952    1   DCL VXW$WRITE       ENTRY( 3 );
             12953    1   DCL VXW$WRITE_DO    ENTRY( 2 );
             12954    1   DCL VXD$B2C         ENTRY( 5 );
             12955    1   DCL VXD$C2B         ENTRY( 3 );
             12956    1   DCL VXA$GET         ENTRY( 3 );
             12957    1   DCL VXF$FREE        ENTRY( 3 );
             12958    1   DCL VXQ$SORT        ENTRY( 7 );
             12959    1   DCL VXY$YESNO       ENTRY( 1 );
       40    12961        %ENTRIES_IO;
             12962    1   DCL VXF$OPEN        ENTRY(3) ALTRET;
             12963    1   DCL VXF$CLOSE       ENTRY(3);
             12964    1   DCL VXU$PREAD       ENTRY(12);
             12965    1   DCL VXK$KEY         ENTRY(4);
             12966    1   DCL VXI$READ        ENTRY(4)  ALTRET;
             12967    1   DCL VXI$WRITE       ENTRY(4)  ALTRET;
       41    12969    1   DCL VXI$INIT        ENTRY;
       42    12970    1   DCL VXP$PARSE       ENTRY(2);
       43    12971    1   DCL VXO$PASS1       ENTRY;
       44    12972    1   DCL VXO$LLMU        ENTRY;
       45    12973    1   DCL VXO$IMPL        ENTRY;
       46    12974    1   DCL VXT$ALL         ENTRY;
       47    12975    1   DCL VXT$PRE         ENTRY;
       48    12976    1   DCL VXT$PASS2       ENTRY;
       49    12977    1   DCL VXT$POST        ENTRY;
       50    12978    1   DCL VXM$MAP         ENTRY;
       51    12979    1   DCL VXS$LST        ENTRY(6) ALTRET;
PL6.E3A0      #001=VXM$MAIN File=VXM$MAIN.:E05TSI                                WED 07/30/97 08:18 Page:30   
       52    12980    1   DCL VXU$FINISH_VECTOR  ENTRY;
       53    12981    1   DCL VXU$RUM ENTRY ALTRET ;
       54    12982        %PTR;
             12983        %LSET LISTDIR='0'B;

             12990    1   /*******************************************************************************
             12991    1   *                                                                              *
             12992    1   *                          PTR                                                 *
             12993    1   *                                                                              *
             12994    1   *******************************************************************************/

       55    12998    1   DCL PTR$            PTR  ALIGNED   AUTO;
       56    12999    1   DCL DCB$            PTR  ALIGNED   AUTO;
       57    13000        %PLIST;
       58    13001        %F$DCB;
       59    13058        %FPT_REW(FPTN=FPT_REW, STCLASS=CONSTANT, DCB=M$EI );
       60    13073    1   DCL M$EI            DCB;
       61    13074        %FPT_READ(FPTN=VX_EI_FPT_READ, STCLASS=SYMREF );
       62    13113        %FPT_XCON;
       63    13127        %FPT_LDTRC(
       64    13128                   FPTN=FPT_LDTRC,
       65    13129                   NAME=LDTRC_NAME,
       66    13130                   ACCT=LDTRC_ACCT,
       67    13131                   PASS=LDTRC_PASS,
       68    13132                   PSID="LDTRC_SN.SN#(0)",
       69    13133                   STCLASS=STATIC);
       70    13151        %VLP_NAME(
       71    13152                   FPTN=LDTRC_NAME,
       72    13153                   STCLASS=STATIC);
       73    13180        %VLP_ACCT(
       74    13181                   FPTN=LDTRC_ACCT,
       75    13182                   STCLASS=STATIC);
       76    13195        %VLP_PASS(
       77    13196                   FPTN=LDTRC_PASS,
       78    13197                   STCLASS=STATIC);
       79    13210        %VLP_SN(
       80    13211                   FPTN=LDTRC_SN,
PL6.E3A0      #001=VXM$MAIN File=VXM$MAIN.:E05TSI                                WED 07/30/97 08:18 Page:31   
       81    13212                   STCLASS=STATIC);
       82    13225        %FPT_EXIT( FPTN=SET_STEPCC , STEPCC=ERROR );
       83    13240        %FILE;
       84    13249    1   DCL F$SN_      CHAR(6)   ALIGNED   BASED;
       85    13250    1   DCL 1 STAR_L         ALIGNED   CONSTANT,
       86    13251    1         2 COUNT        UBIN(9)   UNAL INIT(2),
       87    13252    1         2 CHARS        CHAR(2)   UNAL INIT('*L');
       88    13253    1   DCL VX_N_START_SYMBOL1    UBIN    SYMREF;
       89    13254    1   DCL VX_N_START_SYMBOL2    UBIN    SYMREF;
       90    13255        %EJECT;
PL6.E3A0      #001=VXM$MAIN File=VXM$MAIN.:E05TSI                                WED 07/30/97 08:18 Page:32   
       91    13256        /* Do initialization */
       92    13257    1        CALL VXI$INIT;

  13257  5 000002   000002 631400 xsym               EPPR1   B_VECTNIL+2
         5 000003   000000 701000 xent               TSX1    VXI$INIT
         5 000004   000000 011000                    NOP     0

       93    13258        /* Now parse */
       94    13259    1        CALL VXP$PARSE( ADDR(VX_N_START_SYMBOL1), 0 );

  13259  5 000005   000000 236000 6                  LDQ     0
         5 000006   200014 756100                    STQ     PTR$+3,,AUTO
         5 000007   000001 236000 6                  LDQ     1
         5 000010   200017 756100                    STQ     PTR$+6,,AUTO
         5 000011   200014 630500                    EPPR0   PTR$+3,,AUTO
         5 000012   200016 450500                    STP0    PTR$+5,,AUTO
         5 000013   200016 630500                    EPPR0   PTR$+5,,AUTO
         5 000014   000020 631400 xsym               EPPR1   B_VECTNIL+16
         5 000015   000000 701000 xent               TSX1    VXP$PARSE
         5 000016   000000 011000                    NOP     0

       95    13260        /* Is it link or map */
       96    13261    2        DO CASE( VX_COMMAND );

  13261  5 000017   000000 235000 xsym               LDA     VX_COMMAND
         5 000020   000005 115007                    CMPA    5,DL
         5 000021   000023 602005 5                  TNC     s:13261+4,AL
         5 000022   000507 710000 5                  TRA     s:13405
         5 000023   000030 710000 5                  TRA     MAP_COMMAND
         5 000024   000053 710000 5                  TRA     s:13275
         5 000025   000053 710000 5                  TRA     s:13275
         5 000026   000053 710000 5                  TRA     s:13275
         5 000027   000053 710000 5                  TRA     s:13275

       97    13262    2          CASE(0);

       98    13263    2   MAP_COMMAND:
PL6.E3A0      #001=VXM$MAIN File=VXM$MAIN.:E05TSI                                WED 07/30/97 08:18 Page:33   
       99    13264    2             CALL VXO$IMPL;

  13264  5 000030   000002 631400 xsym  MAP_COMMAND  EPPR1   B_VECTNIL+2
         5 000031   000000 701000 xent               TSX1    VXO$IMPL
         5 000032   000000 011000                    NOP     0

      100    13265    2             CALL VXF$OPEN( VX_RUF$, 1/*@RF*/, %IN# );

  13265  5 000033   000002 630400 6                  EPPR0   2
         5 000034   000021 631400 xsym               EPPR1   B_VECTNIL+17
         5 000035   000000 701000 xent               TSX1    VXF$OPEN
         5 000036   000000 011000                    NOP     0

      101    13266    2             CALL VXM$MAP;

  13266  5 000037   000002 631400 xsym               EPPR1   B_VECTNIL+2
         5 000040   000000 701000 xent               TSX1    VXM$MAP
         5 000041   000000 011000                    NOP     0

      102    13267    2             CALL VXF$CLOSE( VX_RUF$, 1/*@RF*/, 2/*@SAVE*/ ); /* Close ru file */

  13267  5 000042   000002 630400 6                  EPPR0   2
         5 000043   000021 631400 xsym               EPPR1   B_VECTNIL+17
         5 000044   000000 701000 xent               TSX1    VXF$CLOSE
         5 000045   000000 011000                    NOP     0

      103    13268    2             CALL VXF$CLOSE( VX_LOF$, 4/*@LO*/, 2/*@SAVE*/ ); /* Close lo file */

  13268  5 000046   000005 630400 6                  EPPR0   5
         5 000047   000021 631400 xsym               EPPR1   B_VECTNIL+17
         5 000050   000000 701000 xent               TSX1    VXF$CLOSE
         5 000051   000000 011000                    NOP     0
         5 000052   000507 710000 5                  TRA     s:13405

      104    13269    2          CASE( 1,

      105    13270    2                     2,
PL6.E3A0      #001=VXM$MAIN File=VXM$MAIN.:E05TSI                                WED 07/30/97 08:18 Page:34   
      106    13271    2                     3,
      107    13272    2                     4 );
      108    13273        /* It's a link */
      109    13274        /* Check if indirections for command */
      110    13275    2             IF VX_FID_COUNT = 1

  13275  5 000053   000000 236000 xsym               LDQ     VX_FID_COUNT
         5 000054   000001 116007                    CMPQ    1,DL
         5 000055   000277 601000 5                  TNZ     s:13332

      111    13276    3             THEN DO;

      112    13277    3                  PTR$ = VX_ROOT$ -> VX$NODE.HEAD$;

  13277  5 000056   000000 470400 xsym               LDP0    VX_ROOT$
         5 000057   000004 236100                    LDQ     4,,PR0
         5 000060   200011 756100                    STQ     PTR$,,AUTO

      113    13278    3                  CALL VXF$OPEN( PTR$, 3/*@SF*/ );

  13278  5 000061   000010 236000 6                  LDQ     8
         5 000062   200015 756100                    STQ     PTR$+4,,AUTO
         5 000063   200011 631500                    EPPR1   PTR$,,AUTO
         5 000064   200014 451500                    STP1    PTR$+3,,AUTO
         5 000065   200014 630500                    EPPR0   PTR$+3,,AUTO
         5 000066   000020 631400 xsym               EPPR1   B_VECTNIL+16
         5 000067   000000 701000 xent               TSX1    VXF$OPEN
         5 000070   000000 011000                    NOP     0

      114    13279        /* Now check if indirect command stream */
      115    13280    3                  CH = SUBSTR( M$EI$ -> F$DCB.TYPE#, 0, 1 );

  13280  5 000071   000000 470400 xsym               LDP0    M$EI$
         5 000072   000025 236100                    LDQ     21,,PR0
         5 000073   000022 736000                    QLS     18
         5 000074   777000 376003                    ANQ     -512,DU
         5 000075   000011 276000 6                  ORQ     9
PL6.E3A0      #001=VXM$MAIN File=VXM$MAIN.:E05TSI                                WED 07/30/97 08:18 Page:35   
         5 000076   200003 756100                    STQ     CH,,AUTO

      116    13281    4                  IF CH ~= 'O' AND CH ~= 'R' AND M$EI$->F$DCB.TYPE# ~= 'LE' THEN DO;

  13281  5 000077   200003 236100                    LDQ     CH,,AUTO
         5 000100   777000 376003                    ANQ     -512,DU
         5 000101   117000 116003                    CMPQ    40448,DU
         5 000102   000265 600000 5                  TZE     JUMP_OUT
         5 000103   200003 236100                    LDQ     CH,,AUTO
         5 000104   777000 376003                    ANQ     -512,DU
         5 000105   122000 116003                    CMPQ    41984,DU
         5 000106   000265 600000 5                  TZE     JUMP_OUT
         5 000107   000025 720100                    LXL0    21,,PR0
         5 000110   000007 100000 2                  CMPX0   STAR_L+1
         5 000111   000265 600000 5                  TZE     JUMP_OUT

      117    13282    4                       IF CH = 'D' OR CH ='S' THEN GOTO DO_IT;

  13282  5 000112   200003 236100                    LDQ     CH,,AUTO
         5 000113   777000 376003                    ANQ     -512,DU
         5 000114   104000 116003                    CMPQ    34816,DU
         5 000115   000246 600000 5                  TZE     DO_IT
         5 000116   200003 236100                    LDQ     CH,,AUTO
         5 000117   777000 376003                    ANQ     -512,DU
         5 000120   123000 116003                    CMPQ    42496,DU
         5 000121   000246 600000 5                  TZE     DO_IT

      118    13283    5                       IF M$EI$ -> F$DCB.ORG# = 2/*@KEYED*/ THEN DO;

  13283  5 000122   000032 236100                    LDQ     26,,PR0
         5 000123   777000 376003                    ANQ     -512,DU
         5 000124   002000 116003                    CMPQ    1024,DU
         5 000125   000246 601000 5                  TNZ     DO_IT

      119    13284    5                            VX_O_KEY_BUF_L.FORM0.COUNT = LENGTHC( VX_O_KEY_HEAD );

  13284  5 000126   001000 236003                    LDQ     512,DU
PL6.E3A0      #001=VXM$MAIN File=VXM$MAIN.:E05TSI                                WED 07/30/97 08:18 Page:36   
         5 000127   000000 552040 xsym               STBQ    VX_O_KEY_BUF_L,'40'O

      120    13285    5                            VX_O_KEY_BUF_L.FORM0.CHARS = VX_O_KEY_HEAD;

  13285  5 000130   040000 100400                    MLR     fill='040'O
         5 000131   000000 000001 xsym               ADSC9   VX_O_KEY_HEAD            cn=0,n=1
         5 000132   000000 201000 xsym               ADSC9   VX_O_KEY_BUF_L           cn=1,n=512

      121    13286    5                            VX_EI_FPT_READ.BUF_ = VECTOR( VX_OU_HEAD );

  13286  5 000133   000012 237000 6                  LDAQ    10
         5 000134   000004 757000 xsym               STAQ    VX_EI_FPT_READ+4

      122    13287    5                            VX_EI_FPT_READ.KEY_ = VECTOR( VX_O_KEY_BUF_L );

  13287  5 000135   000014 237000 6                  LDAQ    12
         5 000136   000002 757000 xsym               STAQ    VX_EI_FPT_READ+2

      123    13288    5                            VX_EI_FPT_READ.V.KEYS# = '1'B/*@TRUE_B*/;

  13288  5 000137   200000 236007                    LDQ     65536,DL
         5 000140   000010 256000 xsym               ORSQ    VX_EI_FPT_READ+8

      124    13289    5                            CALL M$READ( VX_EI_FPT_READ )      ALTRET( NEXT );

  13289  5 000141   000000 630400 xsym               EPPR0   VX_EI_FPT_READ
         5 000142   440000 713400                    CLIMB   alt,read
         5 000143   401400 401760                    pmme    nvectors=4
         5 000144   000145 702000 5                  TSX2    NEXT

      125    13290    5   NEXT:
      126    13291    5                            VX_O_KEY_BUF_L = '0'B;

  13291  5 000145   000000 100400       NEXT         MLR     fill='000'O
         5 000146   000002 000001 xsym               ADSC9   B_VECTNIL+2              cn=0,n=1
         5 000147   000000 001001 xsym               ADSC9   VX_O_KEY_BUF_L           cn=0,n=513

PL6.E3A0      #001=VXM$MAIN File=VXM$MAIN.:E05TSI                                WED 07/30/97 08:18 Page:37   
      127    13292    5                            VX_EI_FPT_READ.V.KEYS# = '0'B/*@FALSE_B*/;

  13292  5 000150   000016 236000 6                  LDQ     14
         5 000151   000010 356000 xsym               ANSQ    VX_EI_FPT_READ+8

      128    13293    5                            CALL M$READ( VX_EI_FPT_READ )      ALTRET( NOT_OBJECT );

  13293  5 000152   000000 630400 xsym               EPPR0   VX_EI_FPT_READ
         5 000153   440000 713400                    CLIMB   alt,read
         5 000154   401400 401760                    pmme    nvectors=4
         5 000155   000236 702000 5                  TSX2    NOT_OBJECT

      129    13294    5   NEXT_AGAIN:
      130    13295    5                            VX_EI_FPT_READ.KEY_ = VECTOR( VX_EI_KEY_BUF );

  13295  5 000156   000020 237000 6     NEXT_AGAIN   LDAQ    16
         5 000157   000002 757000 xsym               STAQ    VX_EI_FPT_READ+2

      131    13296    5                            IF SUBSTR( VX_O_KEY_BUF_L.FORM0.CHARS, 0, 1 )

  13296  5 000160   040000 106400                    CMPC    fill='040'O
         5 000161   000000 200001 xsym               ADSC9   VX_O_KEY_BUF_L           cn=1,n=1
         5 000162   000000 000001 xsym               ADSC9   VX_O_KEY_HEAD            cn=0,n=1
         5 000163   000243 601000 5                  TNZ     s:13320

      132    13297    5                                    =
      133    13298    6                                    VX_O_KEY_HEAD THEN DO;

      134    13299    6                                 CALL VXK$KEY( 0/*@OF*/, %TYPSECT, 0, 0 );

  13299  5 000164   000022 630400 6                  EPPR0   18
         5 000165   000022 631400 xsym               EPPR1   B_VECTNIL+18
         5 000166   000000 701000 xent               TSX1    VXK$KEY
         5 000167   000000 011000                    NOP     0

      135    13300    6                                 VX_O_KEY_BUF_L = VX_O_KEY_BUF;

PL6.E3A0      #001=VXM$MAIN File=VXM$MAIN.:E05TSI                                WED 07/30/97 08:18 Page:38   
  13300  5 000170   000000 100400                    MLR     fill='000'O
         5 000171   000000 001001 xsym               ADSC9   VX_O_KEY_BUF             cn=0,n=513
         5 000172   000000 001001 xsym               ADSC9   VX_O_KEY_BUF_L           cn=0,n=513

      136    13301    6                                 VX_EI_FPT_READ.KEY_ = VECTOR( VX_O_KEY_BUF );

  13301  5 000173   000026 237000 6                  LDAQ    22
         5 000174   000002 757000 xsym               STAQ    VX_EI_FPT_READ+2

      137    13302    6                                 VX_EI_FPT_READ.V.KEYS# = '1'B/*@TRUE_B*/;

  13302  5 000175   200000 236007                    LDQ     65536,DL
         5 000176   000010 256000 xsym               ORSQ    VX_EI_FPT_READ+8

      138    13303    6                                 CALL M$READ( VX_EI_FPT_READ )                ALTRET(
             13303                                          NEXT_AGAIN1 );

  13303  5 000177   000000 630400 xsym               EPPR0   VX_EI_FPT_READ
         5 000200   440000 713400                    CLIMB   alt,read
         5 000201   401400 401760                    pmme    nvectors=4
         5 000202   000216 702000 5                  TSX2    NEXT_AGAIN1

      139    13304    6   IS_OBJECT:
      140    13305    6                                 VX_EI_FPT_READ.V.KEYS# = '0'B/*@FALSE_B*/;

  13305  5 000203   000016 236000 6     IS_OBJECT    LDQ     14
         5 000204   000010 356000 xsym               ANSQ    VX_EI_FPT_READ+8

      141    13306    6                                 VX_EI_FPT_READ.KEY_ = VECTOR( VX_EI_KEY_BUF );

  13306  5 000205   000020 237000 6                  LDAQ    16
         5 000206   000002 757000 xsym               STAQ    VX_EI_FPT_READ+2

      142    13307    6                                 VX_O_KEY_BUF = '0'B;

  13307  5 000207   000000 100400                    MLR     fill='000'O
         5 000210   000002 000001 xsym               ADSC9   B_VECTNIL+2              cn=0,n=1
PL6.E3A0      #001=VXM$MAIN File=VXM$MAIN.:E05TSI                                WED 07/30/97 08:18 Page:39   
         5 000211   000000 001001 xsym               ADSC9   VX_O_KEY_BUF             cn=0,n=513

      143    13308    6                                 VX_O_KEY_BUF_L = '0'B;

  13308  5 000212   000000 100400                    MLR     fill='000'O
         5 000213   000002 000001 xsym               ADSC9   B_VECTNIL+2              cn=0,n=1
         5 000214   000000 001001 xsym               ADSC9   VX_O_KEY_BUF_L           cn=0,n=513

      144    13309    6                                 GOTO JUMP_OUT;

  13309  5 000215   000265 710000 5                  TRA     JUMP_OUT

      145    13310    6   NEXT_AGAIN1:
      146    13311    6                                 ERR = B$TCB$ -> B$TCB.ALT$ -> B$ALT.ERR.ERR#;

  13311  5 000216   000000 470400 xsym  NEXT_AGAIN1  LDP0    B$TCB$
         5 000217   000000 471500                    LDP1    0,,PR0
         5 000220   100102 236100                    LDQ     66,,PR1
         5 000221   000003 772000                    QRL     3
         5 000222   037777 376007                    ANQ     16383,DL
         5 000223   200010 756100                    STQ     ERR,,AUTO

      147    13312    6                                 IF ERR ~= %E$NOKEY THEN GOTO IS_OBJECT;

  13312  5 000224   000102 116007                    CMPQ    66,DL
         5 000225   000203 601000 5                  TNZ     IS_OBJECT

      148    13313    6                                 VX_EI_FPT_READ.V.KEYS# = '0'B/*@FALSE_B*/;

  13313  5 000226   000016 236000 6                  LDQ     14
         5 000227   000010 356000 xsym               ANSQ    VX_EI_FPT_READ+8

      149    13314    6                                 VX_O_KEY_BUF = '0'B;

  13314  5 000230   000000 100400                    MLR     fill='000'O
         5 000231   000002 000001 xsym               ADSC9   B_VECTNIL+2              cn=0,n=1
         5 000232   000000 001001 xsym               ADSC9   VX_O_KEY_BUF             cn=0,n=513
PL6.E3A0      #001=VXM$MAIN File=VXM$MAIN.:E05TSI                                WED 07/30/97 08:18 Page:40   

      150    13315    6                                 VX_O_KEY_BUF_L = '0'B;

  13315  5 000233   000000 100400                    MLR     fill='000'O
         5 000234   000002 000001 xsym               ADSC9   B_VECTNIL+2              cn=0,n=1
         5 000235   000000 001001 xsym               ADSC9   VX_O_KEY_BUF_L           cn=0,n=513

      151    13316    6   NOT_OBJECT:
      152    13317    6                                 VX_EI_FPT_READ.KEY_ = VECTOR( VX_EI_KEY_BUF );

  13317  5 000236   000020 237000 6     NOT_OBJECT   LDAQ    16
         5 000237   000002 757000 xsym               STAQ    VX_EI_FPT_READ+2

      153    13318    6                                 CALL M$REW( FPT_REW );

  13318  5 000240   000000 630400 2                  EPPR0   FPT_REW
         5 000241   040006 713400                    CLIMB   16390
         5 000242   400000 401760                    pmme    nvectors=1

      154    13319    6                               END;        /* If ... */

      155    13320    5                            CALL M$REW( FPT_REW );

  13320  5 000243   000000 630400 2                  EPPR0   FPT_REW
         5 000244   040006 713400                    CLIMB   16390
         5 000245   400000 401760                    pmme    nvectors=1

      156    13321    5                          END;   /* If M$EI$ -> F$DCB.ORG# = @KEYED then do; */

      157    13322    4   DO_IT:
      158    13323    4                       VX_FID_COUNT = 0;

  13323  5 000246   000000 450000 xsym  DO_IT        STZ     VX_FID_COUNT

      159    13324    4                       VX_NODE_NUMBER = VX_NODE_NUMBER - 1;

  13324  5 000247   000001 336007                    LCQ     1,DL
PL6.E3A0      #001=VXM$MAIN File=VXM$MAIN.:E05TSI                                WED 07/30/97 08:18 Page:41   
         5 000250   000000 056000 xsym               ASQ     VX_NODE_NUMBER

      160    13325    4                       CALL VXP$PARSE( ADDR(VX_N_START_SYMBOL2), 1 );

  13325  5 000251   000017 236000 6                  LDQ     15
         5 000252   200014 756100                    STQ     PTR$+3,,AUTO
         5 000253   000003 236000 6                  LDQ     3
         5 000254   200017 756100                    STQ     PTR$+6,,AUTO
         5 000255   200014 630500                    EPPR0   PTR$+3,,AUTO
         5 000256   200016 450500                    STP0    PTR$+5,,AUTO
         5 000257   200016 630500                    EPPR0   PTR$+5,,AUTO
         5 000260   000020 631400 xsym               EPPR1   B_VECTNIL+16
         5 000261   000000 701000 xent               TSX1    VXP$PARSE
         5 000262   000000 011000                    NOP     0

      161    13326    4                       IF VX_COMMAND = 0 THEN GOTO MAP_COMMAND;

  13326  5 000263   000000 235000 xsym               LDA     VX_COMMAND
         5 000264   000030 600000 5                  TZE     MAP_COMMAND

      162    13327    4                     END;                  /* If ch ~= 'O' then do; */

      163    13328    3   JUMP_OUT:
      164    13329        /* Now close */
      165    13330    3                  CALL VXF$CLOSE( PTR$, 3/*@SF*/, 2/*@SAVE*/ );

  13330  5 000265   000004 236000 6     JUMP_OUT     LDQ     4
         5 000266   200016 756100                    STQ     PTR$+5,,AUTO
         5 000267   000010 236000 6                  LDQ     8
         5 000270   200015 756100                    STQ     PTR$+4,,AUTO
         5 000271   200011 630500                    EPPR0   PTR$,,AUTO
         5 000272   200014 450500                    STP0    PTR$+3,,AUTO
         5 000273   200014 630500                    EPPR0   PTR$+3,,AUTO
         5 000274   000021 631400 xsym               EPPR1   B_VECTNIL+17
         5 000275   000000 701000 xent               TSX1    VXF$CLOSE
         5 000276   000000 011000                    NOP     0

PL6.E3A0      #001=VXM$MAIN File=VXM$MAIN.:E05TSI                                WED 07/30/97 08:18 Page:42   
      166    13331    3                END;

      167    13332    3             IF VX_RUF$ = ADDR(NIL) THEN DO;

  13332  5 000277   000000 236000 xsym               LDQ     VX_RUF$
         5 000300   000001 116000 xsym               CMPQ    B_VECTNIL+1
         5 000301   000326 601000 5                  TNZ     s:13337

      168    13333        /**/
      169    13334    3                  VX_ON_OVER_RUF = 1;

  13334  5 000302   000001 235007                    LDA     1,DL
         5 000303   000000 755000 xsym               STA     VX_ON_OVER_RUF

      170    13335    3                  CALL VXS$LST( VX_RUF$, ADDR( STAR_L ), 1/*@RF*/, 0, ADDR(NIL), 0 );

  13335  5 000304   000030 236000 6                  LDQ     24
         5 000305   200014 756100                    STQ     PTR$+3,,AUTO
         5 000306   000001 236000 xsym               LDQ     B_VECTNIL+1
         5 000307   200015 756100                    STQ     PTR$+4,,AUTO
         5 000310   000001 236000 6                  LDQ     1
         5 000311   200023 756100                    STQ     PTR$+10,,AUTO
         5 000312   200015 630500                    EPPR0   PTR$+4,,AUTO
         5 000313   200022 450500                    STP0    PTR$+9,,AUTO
         5 000314   000032 237000 6                  LDAQ    26
         5 000315   200020 757100                    STAQ    PTR$+7,,AUTO
         5 000316   200014 631500                    EPPR1   PTR$+3,,AUTO
         5 000317   200017 451500                    STP1    PTR$+6,,AUTO
         5 000320   000002 236000 6                  LDQ     2
         5 000321   200016 756100                    STQ     PTR$+5,,AUTO
         5 000322   200016 630500                    EPPR0   PTR$+5,,AUTO
         5 000323   000024 631400 xsym               EPPR1   B_VECTNIL+20
         5 000324   000000 701000 xent               TSX1    VXS$LST
         5 000325   000000 011000                    NOP     0

      171    13336    3                END;

PL6.E3A0      #001=VXM$MAIN File=VXM$MAIN.:E05TSI                                WED 07/30/97 08:18 Page:43   
      172    13337    2             CALL VXO$IMPL;

  13337  5 000326   000002 631400 xsym               EPPR1   B_VECTNIL+2
         5 000327   000000 701000 xent               TSX1    VXO$IMPL
         5 000330   000000 011000                    NOP     0

      173    13338        /* Open run file */
      174    13339    2             CALL VXF$OPEN( VX_RUF$, 1/*@RF*/, %CREATE# );

  13339  5 000331   000034 630400 6                  EPPR0   28
         5 000332   000021 631400 xsym               EPPR1   B_VECTNIL+17
         5 000333   000000 701000 xent               TSX1    VXF$OPEN
         5 000334   000000 011000                    NOP     0

      175    13340    2             CALL VXO$PASS1;               /* Do pass 1 */

  13340  5 000335   000002 631400 xsym               EPPR1   B_VECTNIL+2
         5 000336   000000 701000 xent               TSX1    VXO$PASS1
         5 000337   000000 011000                    NOP     0

      176    13341    2             VX_OD.SIN.LSAU = '0'B;

  13341  5 000340   000037 236000 6                  LDQ     31
         5 000341   000000 356000 xsym               ANSQ    VX_OD

      177    13342    2             CALL VXO$LLMU;

  13342  5 000342   000002 631400 xsym               EPPR1   B_VECTNIL+2
         5 000343   000000 701000 xent               TSX1    VXO$LLMU
         5 000344   000000 011000                    NOP     0

      178    13343    2             IF VX_DO_PASS1 = 1 THEN

  13343  5 000345   000000 235000 xsym               LDA     VX_DO_PASS1
         5 000346   000001 115007                    CMPA    1,DL
         5 000347   000365 601000 5                  TNZ     s:13352

PL6.E3A0      #001=VXM$MAIN File=VXM$MAIN.:E05TSI                                WED 07/30/97 08:18 Page:44   
      179    13344    3             DO;

      180    13345    3                  CALL VXT$ALL;            /* Do allocation   */

  13345  5 000350   000002 631400 xsym               EPPR1   B_VECTNIL+2
         5 000351   000000 701000 xent               TSX1    VXT$ALL
         5 000352   000000 011000                    NOP     0

      181    13346    3                  CALL VXT$PRE;

  13346  5 000353   000002 631400 xsym               EPPR1   B_VECTNIL+2
         5 000354   000000 701000 xent               TSX1    VXT$PRE
         5 000355   000000 011000                    NOP     0

      182    13347    3                  CALL VXT$PASS2;          /* And pass 2 */

  13347  5 000356   000002 631400 xsym               EPPR1   B_VECTNIL+2
         5 000357   000000 701000 xent               TSX1    VXT$PASS2
         5 000360   000000 011000                    NOP     0

      183    13348    3                  CALL VXT$POST;

  13348  5 000361   000002 631400 xsym               EPPR1   B_VECTNIL+2
         5 000362   000000 701000 xent               TSX1    VXT$POST
         5 000363   000000 011000                    NOP     0

      184    13349    3                END;

  13349  5 000364   000367 710000 5                  TRA     s:13356

      185    13350    3             ELSE DO;

      186    13351                       %ERROR_IT;

  13352  5 000365   000002 713400                    CLIMB   err
         5 000366   000000 401760                    pmme    nvectors=0

PL6.E3A0      #001=VXM$MAIN File=VXM$MAIN.:E05TSI                                WED 07/30/97 08:18 Page:45   
      187    13354    3                END;

      188    13355        /* Now do any mapping */
      189    13356    2             CALL VXM$MAP;

  13356  5 000367   000002 631400 xsym               EPPR1   B_VECTNIL+2
         5 000370   000000 701000 xent               TSX1    VXM$MAP
         5 000371   000000 011000                    NOP     0

      190    13357        /* And any post processing */
      191    13358    2             CALL M$XCON(FPT_XCON);        /* Reset XCON */

  13358  5 000372   000000 630400 4                  EPPR0   FPT_XCON
         5 000373   010003 713400                    CLIMB   4099
         5 000374   400400 401760                    pmme    nvectors=2

      192    13359                                           /* Finish building the transfer vector */
      193    13360    2             IF VX_OD.VECTOR_ THEN CALL VXU$FINISH_VECTOR;

  13360  5 000375   000002 236000 xsym               LDQ     VX_OD+2
         5 000376   000177 316007                    CANQ    127,DL
         5 000377   000403 600000 5                  TZE     s:13361

  13360  5 000400   000002 631400 xsym               EPPR1   B_VECTNIL+2
         5 000401   000000 701000 xent               TSX1    VXU$FINISH_VECTOR
         5 000402   000000 011000                    NOP     0

      194    13361    3             IF VX_ERR_SEV > VX_O.NUM.SEVERITY THEN DO;

  13361  5 000403   000000 236000 xsym               LDQ     VX_ERR_SEV
         5 000404   000407 604000 5                  TMI     s:13372
         5 000405   000041 116000 xsym               CMPQ    VX_O+33
         5 000406   000426 604400 5                  TMOZ    s:13389

      195    13362        /*E*  ERROR: VXM-E$MAX_SEV_EXCEEDED_VX-0
      196    13363              MESSAGE: Maximum severity level exceeded.  Maximum = %U1.
      197    13364              DESCRIPTION: Self-explanatory.
PL6.E3A0      #001=VXM$MAIN File=VXM$MAIN.:E05TSI                                WED 07/30/97 08:18 Page:46   
      198    13365        */
      199    13366                       %NUMBER( NUM1="VX_O.NUM.SEVERITY", BASE1=10 );

  13372  5 000407   000040 630400 6                  EPPR0   32
         5 000410   000023 631400 xsym               EPPR1   B_VECTNIL+19
         5 000411   000000 701000 xent               TSX1    VXD$B2C
         5 000412   000000 011000                    NOP     0

      200    13383                       %SCREAM( ERR#=E$MAX_SEV_EXCEEDED_VX, MID="'M'", LEVEL=@E$F_D_VX );

  13384  5 000413   000050 630400 6                  EPPR0   40
         5 000414   000022 631400 xsym               EPPR1   B_VECTNIL+18
         5 000415   000000 701000 xent               TSX1    VXE$ERROR
         5 000416   000000 011000                    NOP     0

      201    13386    3                  CALL VXF$CLOSE( VX_LOF$, 4/*@LO*/, 2/*@SAVE*/ ); /* Close lo file */

  13386  5 000417   000005 630400 6                  EPPR0   5
         5 000420   000021 631400 xsym               EPPR1   B_VECTNIL+17
         5 000421   000000 701000 xent               TSX1    VXF$CLOSE
         5 000422   000000 011000                    NOP     0

      202    13387    3                  CALL M$EXIT(SET_STEPCC);

  13387  5 000423   000046 630400 4                  EPPR0   SET_STEPCC
         5 000424   000001 713400                    CLIMB   exit
         5 000425   400400 401760                    pmme    nvectors=2

      203    13388    3                END;

      204    13389    2             CALL VXF$CLOSE( VX_LOF$, 4/*@LO*/, 2/*@SAVE*/ ); /* Close lo file */

  13389  5 000426   000005 630400 6                  EPPR0   5
         5 000427   000021 631400 xsym               EPPR1   B_VECTNIL+17
         5 000430   000000 701000 xent               TSX1    VXF$CLOSE
         5 000431   000000 011000                    NOP     0

PL6.E3A0      #001=VXM$MAIN File=VXM$MAIN.:E05TSI                                WED 07/30/97 08:18 Page:47   
      205    13390    2             CALL VXF$CLOSE( VX_RUF$, 1/*@RF*/, 2/*@SAVE*/ ); /* Close ru file */

  13390  5 000432   000002 630400 6                  EPPR0   2
         5 000433   000021 631400 xsym               EPPR1   B_VECTNIL+17
         5 000434   000000 701000 xent               TSX1    VXF$CLOSE
         5 000435   000000 011000                    NOP     0

      206    13391    2             IF NOT VX_OD.SIN.NPLOVER THEN CALL VXU$RUM /* Apply rums to ru */

  13391  5 000436   000000 236000 xsym               LDQ     VX_OD
         5 000437   000200 316007                    CANQ    128,DL
         5 000440   000507 601000 5                  TNZ     s:13405

  13391  5 000441   000002 631400 xsym               EPPR1   B_VECTNIL+2
         5 000442   000000 701000 xent               TSX1    VXU$RUM
         5 000443   000445 702000 5                  TSX2    s:13393
         5 000444   000507 710000 5                  TRA     s:13405

      207    13392    3                  WHENALTRETURN DO ;

      208    13393    3                       CALL VXF$OPEN ( VX_RUF$, 1/*@RF*/, 1/*@UPDATE*/ ) ;

  13393  5 000445   000054 630400 6                  EPPR0   44
         5 000446   000021 631400 xsym               EPPR1   B_VECTNIL+17
         5 000447   000000 701000 xent               TSX1    VXF$OPEN
         5 000450   000000 011000                    NOP     0

      209    13394    3                       VX_ERR_SEV = MAXIMUM ( VX_ERR_SEV, 11 ) ;

  13394  5 000451   000013 236007                    LDQ     11,DL
         5 000452   000000 116000 xsym               CMPQ    VX_ERR_SEV
         5 000453   000455 603000 5                  TRC     s:13394+4
         5 000454   000000 236000 xsym               LDQ     VX_ERR_SEV
         5 000455   000000 756000 xsym               STQ     VX_ERR_SEV

      210    13395    3                       VX_RU_HEAD.SEV = VX_ERR_SEV ;

PL6.E3A0      #001=VXM$MAIN File=VXM$MAIN.:E05TSI                                WED 07/30/97 08:18 Page:48   
  13395  5 000456   000033 736000                    QLS     27
         5 000457   000003 552040 xsym               STBQ    VX_RU_HEAD+3,'40'O

      211    13396    3                       CALL VXI$WRITE ( 1/*@RF*/,

  13396  5 000460   000057 236000 6                  LDQ     47
         5 000461   200014 756100                    STQ     PTR$+3,,AUTO
         5 000462   000062 237000 6                  LDAQ    50
         5 000463   200020 757100                    STAQ    PTR$+7,,AUTO
         5 000464   200014 630500                    EPPR0   PTR$+3,,AUTO
         5 000465   200017 450500                    STP0    PTR$+6,,AUTO
         5 000466   000003 236000 6                  LDQ     3
         5 000467   200016 756100                    STQ     PTR$+5,,AUTO
         5 000470   200016 630500                    EPPR0   PTR$+5,,AUTO
         5 000471   000022 631400 xsym               EPPR1   B_VECTNIL+18
         5 000472   000000 701000 xent               TSX1    VXI$WRITE
         5 000473   000000 011000                    NOP     0

      212    13397    3                               ADDR(VX_RU_HEAD),
      213    13398    3                               SIZEW(VX_RU_HEAD),
      214    13399    3                               1/*@RF*/ ) ;
      215    13400    3                       CALL VXF$CLOSE ( VX_RUF$, 1/*@RF*/, 2/*@SAVE*/ ) ;

  13400  5 000474   000002 630400 6                  EPPR0   2
         5 000475   000021 631400 xsym               EPPR1   B_VECTNIL+17
         5 000476   000000 701000 xent               TSX1    VXF$CLOSE
         5 000477   000000 011000                    NOP     0

      216    13401    3                       CALL VXE$ERRMSG ( , 4 ) ;

  13401  5 000500   000006 236000 6                  LDQ     6
         5 000501   000001 235000 xsym               LDA     B_VECTNIL+1
         5 000502   200014 757100                    STAQ    PTR$+3,,AUTO
         5 000503   200014 630500                    EPPR0   PTR$+3,,AUTO
         5 000504   000020 631400 xsym               EPPR1   B_VECTNIL+16
         5 000505   000000 701000 xent               TSX1    VXE$ERRMSG
         5 000506   000000 011000                    NOP     0
PL6.E3A0      #001=VXM$MAIN File=VXM$MAIN.:E05TSI                                WED 07/30/97 08:18 Page:49   

      217    13402    3                     END ;

      218    13403    2          END;

      219    13404        /* Now check if run was specified */
      220    13405    1        IF (VX_COMMAND > 0  AND  VX_O.SIN.RUN ~= 0)  OR  (VX_COMMAND = 4)

  13405  5 000507   000000 235000 xsym               LDA     VX_COMMAND
         5 000510   000513 600000 5                  TZE     s:13405+4
         5 000511   000011 236000 xsym               LDQ     VX_O+9
         5 000512   000515 601000 5                  TNZ     s:13408
         5 000513   000004 115007                    CMPA    4,DL
         5 000514   000616 601000 5                  TNZ     s:13434

      221    13406    2        THEN DO;

      222    13407        /* Give back memory*/
      223    13408    2             LDTRC_NAME.L# = VX_RUF$ -> VX$LST.P.NAME_.NAME$ -> T$C.COUNT;

  13408  5 000515   000000 470400 xsym               LDP0    VX_RUF$
         5 000516   000006 471500                    LDP1    6,,PR0
         5 000517   100000 236100                    LDQ     0,,PR1
         5 000520   000026 552040 4                  STBQ    LDTRC_NAME,'40'O

      224    13409    2             LDTRC_NAME.NAME# = VX_RUF$ -> VX$LST.P.NAME_.NAME$ -> T$C.CHARS;

  13409  5 000521   000006 471500                    LDP1    6,,PR0
         5 000522   100000 236100                    LDQ     0,,PR1
         5 000523   000033 772000                    QRL     27
         5 000524   000000 620006                    EAX0    0,QL
         5 000525   040000 100540                    MLR     fill='040'O
         5 000526   100000 200010                    ADSC9   0,,PR1                   cn=1,n=*X0
         5 000527   000026 200037 4                  ADSC9   LDTRC_NAME               cn=1,n=31

      225    13410    2             IF VX_RUF$ -> VX$LST.P.ACCT_ ~= VECTOR(NIL) THEN

PL6.E3A0      #001=VXM$MAIN File=VXM$MAIN.:E05TSI                                WED 07/30/97 08:18 Page:50   
  13410  5 000530   000000 106500                    CMPC    fill='000'O
         5 000531   000007 000010                    ADSC9   7,,PR0                   cn=0,n=8
         5 000532   000064 000010 6                  ADSC9   52                       cn=0,n=8
         5 000533   000541 600000 5                  TZE     s:13412

      226    13411    2                  LDTRC_ACCT.ACCT# = VX_RUF$ -> VX$LST.P.ACCT_.ACCT$ -> F$ACCT_;

  13411  5 000534   000010 471500                    LDP1    8,,PR0
         5 000535   040000 100500                    MLR     fill='040'O
         5 000536   100000 000010                    ADSC9   0,,PR1                   cn=0,n=8
         5 000537   000036 000010 4                  ADSC9   LDTRC_ACCT               cn=0,n=8
         5 000540   000543 710000 5                  TRA     s:13413

      227    13412    2             ELSE FPT_LDTRC.ACCT_ = VECTOR(NIL);

  13412  5 000541   000064 237000 6                  LDAQ    52
         5 000542   000010 757000 4                  STAQ    FPT_LDTRC+2

      228    13413    2             IF VX_RUF$ -> VX$LST.P.PASS_ ~= VECTOR(NIL) THEN

  13413  5 000543   000000 106500                    CMPC    fill='000'O
         5 000544   000011 000010                    ADSC9   9,,PR0                   cn=0,n=8
         5 000545   000064 000010 6                  ADSC9   52                       cn=0,n=8
         5 000546   000554 600000 5                  TZE     s:13415

      229    13414    2                  LDTRC_PASS.PASS# = VX_RUF$ -> VX$LST.P.PASS_.PASS$ -> F$PASS_;

  13414  5 000547   000012 471500                    LDP1    10,,PR0
         5 000550   040000 100500                    MLR     fill='040'O
         5 000551   100000 000010                    ADSC9   0,,PR1                   cn=0,n=8
         5 000552   000040 000010 4                  ADSC9   LDTRC_PASS               cn=0,n=8
         5 000553   000556 710000 5                  TRA     s:13416

      230    13415    2             ELSE FPT_LDTRC.PASS_ = VECTOR(NIL);

  13415  5 000554   000064 237000 6                  LDAQ    52
         5 000555   000012 757000 4                  STAQ    FPT_LDTRC+4
PL6.E3A0      #001=VXM$MAIN File=VXM$MAIN.:E05TSI                                WED 07/30/97 08:18 Page:51   

      231    13416    2             IF VX_M_ALL(1) > 0 THEN CALL VXF$FREE( 1, VX_M_ALL(1), 1);

  13416  5 000556   000001 235000 xsym               LDA     VX_M_ALL+1
         5 000557   000564 604400 5                  TMOZ    s:13417

  13416  5 000560   000066 630400 6                  EPPR0   54
         5 000561   000021 631400 xsym               EPPR1   B_VECTNIL+17
         5 000562   000000 701000 xent               TSX1    VXF$FREE
         5 000563   000000 011000                    NOP     0

      232    13417    2             IF VX_RUF$ -> VX$LST.P.SN_ ~= VECTOR(NIL) THEN

  13417  5 000564   000000 470400 xsym               LDP0    VX_RUF$
         5 000565   000000 106500                    CMPC    fill='000'O
         5 000566   000013 000010                    ADSC9   11,,PR0                  cn=0,n=8
         5 000567   000064 000010 6                  ADSC9   52                       cn=0,n=8
         5 000570   000576 600000 5                  TZE     s:13419

      233    13418    2                  LDTRC_SN.SN#(0) = VX_RUF$ -> VX$LST.P.SN_.SN$ -> F$SN_;

  13418  5 000571   000014 471500                    LDP1    12,,PR0
         5 000572   040000 100500                    MLR     fill='040'O
         5 000573   100000 000006                    ADSC9   0,,PR1                   cn=0,n=6
         5 000574   000043 000006 4                  ADSC9   LDTRC_SN+1               cn=0,n=6
         5 000575   000600 710000 5                  TRA     s:13421

      234    13419    2             ELSE FPT_LDTRC.PSID_ = VECTOR(NIL);

  13419  5 000576   000064 237000 6                  LDAQ    52
         5 000577   000014 757000 4                  STAQ    FPT_LDTRC+6

      235    13420        /**/
      236    13421    2             IF VX_M_ALL(1) > 0 THEN CALL VXF$FREE( 1, VX_M_ALL(1), 1 );

  13421  5 000600   000001 235000 xsym               LDA     VX_M_ALL+1
         5 000601   000606 604400 5                  TMOZ    s:13423
PL6.E3A0      #001=VXM$MAIN File=VXM$MAIN.:E05TSI                                WED 07/30/97 08:18 Page:52   

  13421  5 000602   000066 630400 6                  EPPR0   54
         5 000603   000021 631400 xsym               EPPR1   B_VECTNIL+17
         5 000604   000000 701000 xent               TSX1    VXF$FREE
         5 000605   000000 011000                    NOP     0

      237    13422        /**/
      238    13423    2             CALL M$LDTRC( FPT_LDTRC )          ALTRET( ERROR );

  13423  5 000606   000006 630400 4                  EPPR0   FPT_LDTRC
         5 000607   400006 713400                    CLIMB   alt,+6
         5 000610   403000 401760                    pmme    nvectors=7
         5 000611   000612 702000 5                  TSX2    ERROR

      239    13424        /**/
      240    13425    2   ERROR:
      241    13426        /*E*  ERROR: VXM-E$LDTRC_FAIL_VX-0
      242    13427              MESSAGE: M$LDTRC failed by LINK.
      243    13428              DESCRIPTION: Self-explanatory.
      244    13429        */
      245    13430                  %SCREAM( ERR#=E$LDTRC_FAIL_VX, LEVEL=@E$F_VX, MID="'M'" );

  13431  5 000612   000071 630400 6     ERROR        EPPR0   57
         5 000613   000022 631400 xsym               EPPR1   B_VECTNIL+18
         5 000614   000000 701000 xent               TSX1    VXE$ERROR
         5 000615   000000 011000                    NOP     0

      246    13433    2           END;

      247    13434    2        IF VX_RU_HEAD.SEV > 0 THEN DO;

  13434  5 000616   000003 236000 xsym               LDQ     VX_RU_HEAD+3
         5 000617   777000 316003                    CANQ    -512,DU
         5 000620   000625 600000 5                  TZE     s:13439

      248    13435    2             SET_STEPCC.V.STEPCC# = VX_RU_HEAD.SEV;

PL6.E3A0      #001=VXM$MAIN File=VXM$MAIN.:E05TSI                                WED 07/30/97 08:18 Page:53   
  13435  5 000621   000052 552040 4                  STBQ    SET_STEPCC+4,'40'O

      249    13436    2             CALL M$EXIT (SET_STEPCC);

  13436  5 000622   000046 630400 4                  EPPR0   SET_STEPCC
         5 000623   000001 713400                    CLIMB   exit
         5 000624   400400 401760                    pmme    nvectors=2

      250    13437    2           END;

      251    13438
      252    13439    1   END VXM$MAIN;

  13439  5 000625   000000 702200 xent               TSX2  ! X66_MARET

PL6.E3A0      #001=VXM$MAIN File=VXM$MAIN.:E05TSI                                WED 07/30/97 08:18 Page:54   
--  Include file information  --

   CP_6_SUBS.:E05TOU  is referenced.
   B_ERRORS_C.:E05TOU  is referenced.
   VX_PSUBS_C.:E05TOU  is referenced.
   F_DCB_D.:E05TOU  is referenced.
   VX_DCB_R.:E05TOU  cannot be made into a system file and is referenced.
   VX_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   VX_FIXED_R.:E05TOU  cannot be made into a system file and is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   VX_MACRO_C.:E05TOU  is referenced.
   VX_PERR_C.:E05TOU  is referenced.
   VX_SUBS_C.:E05TOU  is referenced.
   VX_SWITCH_C.:E05TOU  is referenced.
   B$OBJECT_C.:E05TOU  is referenced.
   VX_INC_C.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure VXM$MAIN.
PL6.E3A0      #001=VXM$MAIN File=VXM$MAIN.:E05TSI                                WED 07/30/97 08:18 Page:55   

 **** Variables and constants ****

  ****  Section 002 RoData VXM$MAIN

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d STRC(216)   r     1 FPT_REW                    6-0-0/w STRC(27)    r     1 STAR_L

  ****  Section 004  Data  VXM$MAIN

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     6-0-0/d STRC(576)   r     1 FPT_LDTRC                  0-0-0/d STRC(216)   r     1 FPT_XCON
    36-0-0/c STRC(72)    r     1 LDTRC_ACCT                26-0-0/c STRC(288)   r     1 LDTRC_NAME
    40-0-0/c STRC(72)    r     1 LDTRC_PASS                42-0-0/d STRC(90)    r     1 LDTRC_SN
    46-0-0/d STRC(216)   r     1 SET_STEPCC

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w CHAR        r     1 CH                        10-0-0/w UBIN        r     1 ERR
    11-0-0/w PTR         r     1 PTR$

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 B$TCB$                     0-0-0/w PTR         r     1 M$EI$
     0-0-0/w UBIN        r     1 VX_COMMAND                 0-0-0/w UBIN        r     1 VX_DO_PASS1
     0-0-0/w STRC(720)   r     1 VX_EFIELD1                 0-0-0/d STRC(504)   r     1 VX_EI_FPT_READ
     0-0-0/w STRC(2304)  r     1 VX_EI_KEY_BUF              0-0-0/w UBIN        r     1 VX_ERR_SEV
     0-0-0/w UBIN        r     1 VX_FID_COUNT               0-0-0/w PTR         r     1 VX_LOF$
PL6.E3A0      #001=VXM$MAIN File=VXM$MAIN.:E05TSI                                WED 07/30/97 08:18 Page:56   
     0-0-0/w SBIN        r     1 VX_M_ALL(0:8)
     0-0-0/w SBIN        r     1 VX_NODE_NUMBER             0-0-0/w UBIN        r     1 VX_N_START_SYMBOL1
     0-0-0/w UBIN        r     1 VX_N_START_SYMBOL2         0-0-0/w STRC(4572)  r     1 VX_O
     0-0-0/b STRC(116)   r     1 VX_OD                      0-0-0/w UBIN        r     1 VX_ON_OVER_RUF
     0-0-0/w STRC(1044)  r     1 VX_OU_HEAD                 0-0-0/w STRC(4617)  r     1 VX_O_KEY_BUF
     0-0-0/w STRC(4617)  r     1 VX_O_KEY_BUF_L             0-0-0/c CHAR        r     1 VX_O_KEY_HEAD
     0-0-0/w PTR         r     1 VX_ROOT$                   0-0-0/w PTR         r     1 VX_RUF$
     0-0-0/w STRC(1440)  r     1 VX_RU_HEAD

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(2448)  r     1 B$ALT                      0-0-0/w STRC(144)   r     1 B$TCB
     0-0-0/c CHAR(8)     r     1 F$ACCT_                    0-0-0/d ASTR(3528)  r     1 F$DCB
     0-0-0/c ASTR(9)     r     1 F$NAME_                    0-0-0/c CHAR(8)     r     1 F$PASS_
     0-0-0/w CHAR(6)     r     1 F$SN_                      0-0-0N  NULL        r     1 M$EI
     0-0-0/w ASTR(9)     r     1 T$C                        0-0-0/c ASTR(9)     r     1 T$C_UNAL
     0-0-0/w STRC(648)   r     1 VX$LST                     0-0-0/w STRC(3672)  r     1 VX$NODE


   Procedure VXM$MAIN requires 406 words for executable code.
   Procedure VXM$MAIN requires 20 words of local(AUTO) storage.

    No errors detected in file VXM$MAIN.:E05TSI    .
PL6.E3A0      #001=VXM$MAIN File=VXM$MAIN.:E05TSI                                WED 07/30/97 08:18 Page:57   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=VXM$MAIN File=VXM$MAIN.:E05TSI                                WED 07/30/97 08:18 Page:58   
          MINI XREF LISTING

B$ALT.CODE
     12586**DCL     12586--REDEF   12587--REDEF   12587--REDEF
B$ALT.ERR.ERR#
     12588**DCL     12588--REDEF   13311>>ASSIGN
B$ALT.EVID
     12587**DCL     12587--REDEF   12587--REDEF
B$TCB.ALT$
     12582**DCL     13311>>ASSIGN
B$TCB$
      8921**DCL     13311>>ASSIGN
CH
     12902**DCL     13280<<ASSIGN  13281>>IF      13281>>IF      13282>>IF      13282>>IF
DO_IT
     13323**LABEL   13282--GOTO
ERR
     12929**DCL     13311<<ASSIGN  13312>>IF
ERROR
     13431**LABEL   13423--CALLALT
F$ACCT_
     13244**DCL     13411>>ASSIGN
F$DCB.ACTPOS
     13034**DCL     13034--REDEF
F$DCB.ARS#
     13008**DCL     13008--REDEF
F$DCB.ATTR
     13027**DCL     13028--REDEF
F$DCB.BORROW
     13042**DCL     13042--REDEF   13042--REDEF   13042--REDEF
F$DCB.DCBNAME.L
     13056**DCL     13056--IMP-SIZ
F$DCB.EOMCHAR#
     13012**DCL     13012--REDEF
PL6.E3A0      #001=VXM$MAIN File=VXM$MAIN.:E05TSI                                WED 07/30/97 08:18 Page:59   
F$DCB.FLDID
     13037**DCL     13037--REDEF
F$DCB.FORM$
     13031**DCL     13031--REDEF
F$DCB.FSECT
     13047**DCL     13047--REDEF
F$DCB.FSN#
     13024**DCL     13024--REDEF   13024--REDEF   13025--REDEF
F$DCB.HEADER$
     13030**DCL     13030--REDEF
F$DCB.IXTNSIZE#
     13028**DCL     13028--REDEF
F$DCB.LASTSTA$
     13017**DCL     13017--REDEF
F$DCB.LVL
     13043**DCL     13043--REDEF
F$DCB.NAME#.C
     13018**DCL     13018--REDEF
F$DCB.NOEOF
     13040**DCL     13040--REDEF
F$DCB.NRECS#
     13029**DCL     13029--REDEF
F$DCB.NRECX
     13048**DCL     13048--REDEF
F$DCB.OHDR
     13040**DCL     13040--REDEF
F$DCB.ORG#
     13023**DCL     13023--REDEF   13283>>IF
F$DCB.PRECNO
     13046**DCL     13046--REDEF
F$DCB.RCSZ
     13052**DCL     13052--REDEF
F$DCB.RES#
     13019**DCL     13019--REDEF
F$DCB.SETX
     13031**DCL     13031--REDEF
PL6.E3A0      #001=VXM$MAIN File=VXM$MAIN.:E05TSI                                WED 07/30/97 08:18 Page:60   
F$DCB.TAB$
     13031**DCL     13031--REDEF
F$DCB.TDA
     13045**DCL     13046--REDEF
F$DCB.TYPE#
     13019**DCL     13280>>ASSIGN  13281>>IF
F$DCB.WSN#
     13019**DCL     13019--REDEF
F$NAME_.COUNT
     13242**DCL     13243--IMP-SIZ
F$PASS_
     13246**DCL     13414>>ASSIGN
F$SN_
     13249**DCL     13418>>ASSIGN
FPT_LDTRC
     13146**DCL     13423<>CALL
FPT_LDTRC.ACCT_
     13146**DCL     13412<<ASSIGN
FPT_LDTRC.PASS_
     13146**DCL     13415<<ASSIGN
FPT_LDTRC.PSID_
     13147**DCL     13419<<ASSIGN
FPT_LDTRC.V
     13148**DCL     13148--DCLINIT
FPT_REW
     13069**DCL     13318<>CALL    13320<>CALL
FPT_REW.V
     13069**DCL     13069--DCLINIT
FPT_XCON
     13124**DCL     13358<>CALL
FPT_XCON.V
     13125**DCL     13124--DCLINIT
I
     12920**DCL     12921--REDEF
IS_OBJECT
     13305**LABEL   13312--GOTO
PL6.E3A0      #001=VXM$MAIN File=VXM$MAIN.:E05TSI                                WED 07/30/97 08:18 Page:61   
J
     12922**DCL     12923--REDEF
JUMP_OUT
     13330**LABEL   13309--GOTO
K
     12924**DCL     12925--REDEF
L
     12926**DCL     12927--REDEF
LDTRC_ACCT
     13193**DCL     13146--DCLINIT
LDTRC_ACCT.ACCT#
     13193**DCL     13411<<ASSIGN
LDTRC_NAME
     13178**DCL     13146--DCLINIT
LDTRC_NAME.L#
     13178**DCL     13408<<ASSIGN
LDTRC_NAME.NAME#
     13178**DCL     13409<<ASSIGN
LDTRC_PASS
     13208**DCL     13147--DCLINIT
LDTRC_PASS.PASS#
     13208**DCL     13414<<ASSIGN
LDTRC_SN.SN#
     13223**DCL     13147--DCLINIT 13418<<ASSIGN
M$EI$
     10653**DCL     13280>>ASSIGN  13281>>IF      13283>>IF
M$ERR
      5095**DCL-ENT 13352--CALL
M$EXIT
      5095**DCL-ENT 13387--CALL    13436--CALL
M$LDTRC
      5096**DCL-ENT 13423--CALL
M$READ
      5084**DCL-ENT 13289--CALL    13293--CALL    13303--CALL
M$REW
      5086**DCL-ENT 13318--CALL    13320--CALL
PL6.E3A0      #001=VXM$MAIN File=VXM$MAIN.:E05TSI                                WED 07/30/97 08:18 Page:62   
M$XCON
      5138**DCL-ENT 13358--CALL
MAP_COMMAND
     13264**LABEL   13326--GOTO
NEXT
     13291**LABEL   13289--CALLALT
NEXT_AGAIN1
     13311**LABEL   13303--CALLALT
NOT_OBJECT
     13317**LABEL   13293--CALLALT
PTR$
     12998**DCL     13277<<ASSIGN  13278<>CALL    13330<>CALL
SET_STEPCC
     13236**DCL     13387<>CALL    13436<>CALL
SET_STEPCC.V
     13236**DCL     13236--DCLINIT
SET_STEPCC.V.STEPCC#
     13237**DCL     13237--REDEF   13435<<ASSIGN
STAR_L
     13250**DCL     13335--CALL
T$C.CHARS
     12834**DCL     13409>>ASSIGN
T$C.COUNT
     12833**DCL     12834--IMP-SIZ 13408>>ASSIGN  13409>>ASSIGN
T$C_UNAL.COUNT
     12836**DCL     12837--IMP-SIZ
VX$LST.OBJECT_NAME$
     12768**DCL     12769--REDEF
VX$LST.P.ACCT_
     12782**DCL     13410>>IF
VX$LST.P.ACCT_.ACCT$
     12786**DCL     13411>>ASSIGN
VX$LST.P.NAME_.NAME$
     12781**DCL     13408>>ASSIGN  13409>>ASSIGN  13409>>ASSIGN
VX$LST.P.PASS_
     12787**DCL     13413>>IF
PL6.E3A0      #001=VXM$MAIN File=VXM$MAIN.:E05TSI                                WED 07/30/97 08:18 Page:63   
VX$LST.P.PASS_.PASS$
     12791**DCL     13414>>ASSIGN
VX$LST.P.SN_
     12792**DCL     13417>>IF
VX$LST.P.SN_.SN$
     12796**DCL     13418>>ASSIGN
VX$LST.SC_HEAD$
     12770**DCL     12771--REDEF
VX$LST.SC_TAIL$
     12772**DCL     12773--REDEF
VX$NODE.ADDR_START_A
     12637**DCL     12638--REDEF
VX$NODE.ADDR_STOP_A
     12642**DCL     12643--REDEF
VX$NODE.HEAD$
     12629**DCL     13277>>ASSIGN
VX$NODE.L_PREV_SIZE
     12695**DCL     12706--REDEF
VX$NODE.L_SC_START
     12714**DCL     12719--REDEF
VX$NODE.L_SC_STOP
     12720**DCL     12725--REDEF
VX$NODE.L_SIZE
     12683**DCL     12694--REDEF
VX$NODE.L_START
     12659**DCL     12670--REDEF
VX$NODE.L_STOP
     12671**DCL     12682--REDEF
VX$NODE.PROMOTE_HEAD
     12726**DCL     12729--REDEF
VX$NODE.PROMOTE_TAIL
     12730**DCL     12733--REDEF
VX$NODE.START_PAGE#_A
     12647**DCL     12648--REDEF
VX$NODE.STOP_PAGE#_A
     12652**DCL     12653--REDEF
PL6.E3A0      #001=VXM$MAIN File=VXM$MAIN.:E05TSI                                WED 07/30/97 08:18 Page:64   
VXD$B2C
     12954**DCL-ENT 13372--CALL
VXE$ERRMSG
     12950**DCL-ENT 13401--CALL
VXE$ERROR
     12947**DCL-ENT 13384--CALL    13431--CALL
VXF$CLOSE
     12963**DCL-ENT 13267--CALL    13268--CALL    13330--CALL    13386--CALL    13389--CALL    13390--CALL
     13400--CALL
VXF$FREE
     12957**DCL-ENT 13416--CALL    13421--CALL
VXF$OPEN
     12962**DCL-ENT 13265--CALL    13278--CALL    13339--CALL    13393--CALL
VXI$INIT
     12969**DCL-ENT 13257--CALL
VXI$WRITE
     12967**DCL-ENT 13396--CALL
VXK$KEY
     12965**DCL-ENT 13299--CALL
VXM$MAP
     12978**DCL-ENT 13266--CALL    13356--CALL
VXO$IMPL
     12973**DCL-ENT 13264--CALL    13337--CALL
VXO$LLMU
     12972**DCL-ENT 13342--CALL
VXO$PASS1
     12971**DCL-ENT 13340--CALL
VXP$PARSE
     12970**DCL-ENT 13259--CALL    13325--CALL
VXS$LST
     12979**DCL-ENT 13335--CALL
VXT$ALL
     12974**DCL-ENT 13345--CALL
VXT$PASS2
     12976**DCL-ENT 13347--CALL
VXT$POST
PL6.E3A0      #001=VXM$MAIN File=VXM$MAIN.:E05TSI                                WED 07/30/97 08:18 Page:65   
     12977**DCL-ENT 13348--CALL
VXT$PRE
     12975**DCL-ENT 13346--CALL
VXU$FINISH_VECTOR
     12980**DCL-ENT 13360--CALL
VXU$RUM
     12981**DCL-ENT 13391--CALL
VX_BIAS.A
      9586**DCL      9587--REDEF
VX_CBUF.CHARS_A
      9520**DCL      9521--REDEF
VX_COMMAND
      9529**DCL     13261>>DOCASE  13326>>IF      13405>>IF      13405>>IF
VX_CONST_DCB.ACTPOS
     10702**DCL     10702--REDEF
VX_CONST_DCB.ARS#
     10661**DCL     10661--REDEF
VX_CONST_DCB.ATTR#
     10691**DCL     10691--REDEF   10693--REDEF
VX_CONST_DCB.BORROW
     10713**DCL     10713--REDEF   10713--REDEF   10713--REDEF
VX_CONST_DCB.EOMCHAR#
     10668**DCL     10669--REDEF
VX_CONST_DCB.FLDID
     10705**DCL     10706--REDEF
VX_CONST_DCB.FORM$
     10697**DCL     10697--REDEF
VX_CONST_DCB.FSECT
     10720**DCL     10720--REDEF
VX_CONST_DCB.FSN#
     10687**DCL     10687--REDEF   10687--REDEF   10688--REDEF
VX_CONST_DCB.HEADER$
     10696**DCL     10697--REDEF
VX_CONST_DCB.IXTNSIZE#
     10693**DCL     10694--REDEF
VX_CONST_DCB.LASTSTA$
PL6.E3A0      #001=VXM$MAIN File=VXM$MAIN.:E05TSI                                WED 07/30/97 08:18 Page:66   
     10677**DCL     10677--REDEF
VX_CONST_DCB.LVL
     10714**DCL     10714--REDEF
VX_CONST_DCB.NAME#.C
     10677**DCL     10678--REDEF
VX_CONST_DCB.NOEOF
     10709**DCL     10709--REDEF
VX_CONST_DCB.NRECS#
     10694**DCL     10694--REDEF
VX_CONST_DCB.NRECX
     10721**DCL     10721--REDEF
VX_CONST_DCB.OHDR
     10710**DCL     10710--REDEF
VX_CONST_DCB.ORG#
     10685**DCL     10686--REDEF
VX_CONST_DCB.PRECNO
     10718**DCL     10718--REDEF
VX_CONST_DCB.RCSZ
     10726**DCL     10726--REDEF
VX_CONST_DCB.RES#
     10679**DCL     10679--REDEF
VX_CONST_DCB.SETX
     10698**DCL     10698--REDEF
VX_CONST_DCB.TAB$
     10697**DCL     10697--REDEF
VX_CONST_DCB.TDA
     10717**DCL     10718--REDEF
VX_CONST_DCB.WSN#
     10679**DCL     10680--REDEF
VX_DO_PASS1
      9537**DCL     13343>>IF
VX_EBUF.CHARS_A
     10109**DCL     10110--REDEF
VX_EFIELD1.CHARS
     10118**DCL     10119--REDEF
VX_EFIELD1.CHARS_A
PL6.E3A0      #001=VXM$MAIN File=VXM$MAIN.:E05TSI                                WED 07/30/97 08:18 Page:67   
     10119**DCL     13372<>CALL
VX_EFIELD2.CHARS
     10122**DCL     10123--REDEF
VX_EFIELD3.CHARS
     10126**DCL     10127--REDEF
VX_EI_FPT_READ
     13091**DCL     13289<>CALL    13293<>CALL    13303<>CALL
VX_EI_FPT_READ.BUF_
     13093**DCL     13286<<ASSIGN
VX_EI_FPT_READ.KEY_
     13091**DCL     13287<<ASSIGN  13295<<ASSIGN  13301<<ASSIGN  13306<<ASSIGN  13317<<ASSIGN
VX_EI_FPT_READ.STATION_
     13094**DCL     13095--REDEF
VX_EI_FPT_READ.V.DVBYTE.REREAD#
     13106**DCL     13106--REDEF
VX_EI_FPT_READ.V.INDX#
     13104**DCL     13104--REDEF
VX_EI_FPT_READ.V.KEYS#
     13096**DCL     13288<<ASSIGN  13292<<ASSIGN  13302<<ASSIGN  13305<<ASSIGN  13313<<ASSIGN
VX_EI_KEY_BUF
     10500**DCL     13295--ASSIGN  13306--ASSIGN  13317--ASSIGN
VX_EI_KEY_BUF.KEY
     10502**DCL     10503--REDEF
VX_ERRORS
      9563**DCL      9574--REDEF
VX_ERRORS.CONFLICT_A
      9569**DCL      9570--REDEF
VX_ERRORS.UNSAT_A
      9565**DCL      9566--REDEF
VX_ERR_SEV
      9576**DCL     13361>>IF      13394<<ASSIGN  13394>>ASSIGN  13395>>ASSIGN
VX_FID_COUNT
      9540**DCL     13275>>IF      13323<<ASSIGN
VX_IMAGE_DATA.CPAGE#_A
      8700**DCL      8701--REDEF
VX_IMAGE_DATA.NODE_A$
PL6.E3A0      #001=VXM$MAIN File=VXM$MAIN.:E05TSI                                WED 07/30/97 08:18 Page:68   
      8712**DCL      8713--REDEF
VX_IMAGE_DATA.START_A$
      8704**DCL      8705--REDEF
VX_IMAGE_DATA.STOP_A$
      8708**DCL      8709--REDEF
VX_IMAGE_DS3.CPAGE#_A
      8769**DCL      8770--REDEF
VX_IMAGE_DS3.NODE_A$
      8781**DCL      8782--REDEF
VX_IMAGE_DS3.START_A$
      8773**DCL      8774--REDEF
VX_IMAGE_DS3.STOP_A$
      8777**DCL      8778--REDEF
VX_IMAGE_DS4.CPAGE#_A
      8792**DCL      8793--REDEF
VX_IMAGE_DS4.NODE_A$
      8804**DCL      8805--REDEF
VX_IMAGE_DS4.START_A$
      8796**DCL      8797--REDEF
VX_IMAGE_DS4.STOP_A$
      8800**DCL      8801--REDEF
VX_IMAGE_DS5.CPAGE#_A
      8815**DCL      8816--REDEF
VX_IMAGE_DS5.NODE_A$
      8827**DCL      8828--REDEF
VX_IMAGE_DS5.START_A$
      8819**DCL      8820--REDEF
VX_IMAGE_DS5.STOP_A$
      8823**DCL      8824--REDEF
VX_IMAGE_DS6.CPAGE#_A
      8838**DCL      8839--REDEF
VX_IMAGE_DS6.NODE_A$
      8850**DCL      8851--REDEF
VX_IMAGE_DS6.START_A$
      8842**DCL      8843--REDEF
VX_IMAGE_DS6.STOP_A$
PL6.E3A0      #001=VXM$MAIN File=VXM$MAIN.:E05TSI                                WED 07/30/97 08:18 Page:69   
      8846**DCL      8847--REDEF
VX_IMAGE_DS7.CPAGE#_A
      8861**DCL      8862--REDEF
VX_IMAGE_DS7.NODE_A$
      8873**DCL      8874--REDEF
VX_IMAGE_DS7.START_A$
      8865**DCL      8866--REDEF
VX_IMAGE_DS7.STOP_A$
      8869**DCL      8870--REDEF
VX_IMAGE_DS8.CPAGE#_A
      8884**DCL      8885--REDEF
VX_IMAGE_DS8.NODE_A$
      8896**DCL      8897--REDEF
VX_IMAGE_DS8.START_A$
      8888**DCL      8889--REDEF
VX_IMAGE_DS8.STOP_A$
      8892**DCL      8893--REDEF
VX_IMAGE_PROC.CPAGE#_A
      8723**DCL      8724--REDEF
VX_IMAGE_PROC.NODE_A$
      8735**DCL      8736--REDEF
VX_IMAGE_PROC.START_A$
      8727**DCL      8728--REDEF
VX_IMAGE_PROC.STOP_A$
      8731**DCL      8732--REDEF
VX_IMAGE_ROS.CPAGE#_A
      8746**DCL      8747--REDEF
VX_IMAGE_ROS.NODE_A$
      8758**DCL      8759--REDEF
VX_IMAGE_ROS.START_A$
      8750**DCL      8751--REDEF
VX_IMAGE_ROS.STOP_A$
      8754**DCL      8755--REDEF
VX_LOF$
      9554**DCL     13268<>CALL    13386<>CALL    13389<>CALL
VX_M_ALL
PL6.E3A0      #001=VXM$MAIN File=VXM$MAIN.:E05TSI                                WED 07/30/97 08:18 Page:70   
      9597**DCL     13416>>IF      13416<>CALL    13421>>IF      13421<>CALL
VX_M_VECTOR.F
      8551**DCL      8555--REDEF
VX_M_VECTOR_DP.F
      8586**DCL      8590--REDEF
VX_NODE_NUMBER
      9546**DCL     13324<<ASSIGN  13324>>ASSIGN
VX_N_START_SYMBOL1
     13253**DCL     13259--CALL
VX_N_START_SYMBOL2
     13254**DCL     13325--CALL
VX_O.ACCTN_A$
      9715**DCL      9716--REDEF
VX_O.DCB_MATCH_A$
      9724**DCL      9725--REDEF
VX_O.DCB_MATCH_HIT_A
      9730**DCL      9731--REDEF
VX_O.FIDN_A$
      9709**DCL      9710--REDEF
VX_O.FID_A$
      9701**DCL      9702--REDEF
VX_O.INCLUDE_A$
      9721**DCL      9722--REDEF
VX_O.MAP_A
      9695**DCL      9696--REDEF
VX_O.NODCB_A
      9752**DCL      9753--REDEF
VX_O.NUM.SEVERITY
      9647**DCL     13361>>IF      13372<>CALL
VX_O.NUM_A
      9640**DCL      9642--REDEF
VX_O.OPT_A
      9740**DCL      9741--REDEF
VX_O.PRIV_A
      9656**DCL      9658--REDEF
VX_O.SIN.RUN
PL6.E3A0      #001=VXM$MAIN File=VXM$MAIN.:E05TSI                                WED 07/30/97 08:18 Page:71   
      9620**DCL     13405>>IF
VX_O.SIN_A
      9609**DCL      9610--REDEF
VX_O.TCB_A
      9736**DCL      9737--REDEF
VX_OD.ACCTN_A$
      9913**DCL      9914--REDEF
VX_OD.DCB_MATCH_A$
      9922**DCL      9923--REDEF
VX_OD.FIDN_A$
      9907**DCL      9908--REDEF
VX_OD.FID_A$
      9899**DCL      9900--REDEF
VX_OD.INCLUDE_A$
      9919**DCL      9920--REDEF
VX_OD.MAP_A
      9893**DCL      9894--REDEF
VX_OD.NODCB_A
      9937**DCL      9938--REDEF
VX_OD.NUM_A
      9840**DCL      9841--REDEF
VX_OD.PRIV_A
      9855**DCL      9856--REDEF
VX_OD.SIN.LSAU
      9836**DCL     13341<<ASSIGN
VX_OD.SIN.NPLOVER
      9839**DCL     13391>>IF
VX_OD.SIN_A
      9809**DCL      9810--REDEF
VX_OD.VECTOR_
      9929**DCL     13360>>IF
VX_OD.VECTOR_A$
      9928**DCL      9929--REDEF
VX_OL.MAX_A
      9784**DCL      9786--REDEF
VX_OL.MIN_A
PL6.E3A0      #001=VXM$MAIN File=VXM$MAIN.:E05TSI                                WED 07/30/97 08:18 Page:72   
      9769**DCL      9770--REDEF
VX_ON.ACCTN_A$
     10058**DCL     10060--REDEF
VX_ON.DCB_MATCH_A$
     10069**DCL     10071--REDEF
VX_ON.FIDN_A$
     10051**DCL     10053--REDEF
VX_ON.FID_A$
     10042**DCL     10044--REDEF
VX_ON.INCLUDE_A$
     10065**DCL     10067--REDEF
VX_ON.MAP_A
     10035**DCL     10037--REDEF
VX_ON.NODCB_A$
     10085**DCL     10086--REDEF
VX_ON.NUM_A
      9980**DCL      9982--REDEF
VX_ON.PRIV_A
      9996**DCL      9998--REDEF
VX_ON.SIN_A
      9948**DCL      9950--REDEF
VX_ON.VECTOR_A$
     10076**DCL     10077--REDEF
VX_ON_OVER_RUF
      9531**DCL     13334<<ASSIGN
VX_OUHEAD.VERSION
      9395**DCL      9397--REDEF
VX_OU_HEAD
      9338**DCL      9377--REDEF   13286--ASSIGN
VX_OU_HEAD.REC_A
      9350**DCL      9353--REDEF
VX_O_KEY_BUF
      8598**DCL     13300>>ASSIGN  13301--ASSIGN  13307<<ASSIGN  13314<<ASSIGN
VX_O_KEY_BUF.FORM0
      8599**DCL      8602--REDEF    8609--REDEF
VX_O_KEY_BUF_L
PL6.E3A0      #001=VXM$MAIN File=VXM$MAIN.:E05TSI                                WED 07/30/97 08:18 Page:73   
      8621**DCL     13287--ASSIGN  13291<<ASSIGN  13300<<ASSIGN  13308<<ASSIGN  13315<<ASSIGN
VX_O_KEY_BUF_L.FORM0
      8622**DCL      8625--REDEF    8632--REDEF
VX_O_KEY_BUF_L.FORM0.CHARS
      8624**DCL     13285<<ASSIGN  13296>>IF
VX_O_KEY_BUF_L.FORM0.COUNT
      8623**DCL     13284<<ASSIGN
VX_O_KEY_HEAD
     10157**DCL     13284--ASSIGN  13285>>ASSIGN  13296>>IF
VX_PASS2_REF.OU.L_START
     10288**DCL     10293--REDEF
VX_PASS2_REF.OU.L_STOP
     10294**DCL     10299--REDEF
VX_PASS2_REF.OU.MAX
     10282**DCL     10287--REDEF
VX_PASS2_REF.OU.SIZE
     10300**DCL     10305--REDEF
VX_PASS2_REF.SAT.COUNT
     10327**DCL     10333--REDEF
VX_PASS2_REF.SAT.ENT_SIZE
     10334**DCL     10340--REDEF
VX_PASS2_REF.SAT.L_START
     10313**DCL     10319--REDEF
VX_PASS2_REF.SAT.L_STOP
     10320**DCL     10326--REDEF
VX_PASS2_REF.SAT.MAX
     10307**DCL     10312--REDEF
VX_PASS2_REF.UNSAT.L_START
     10375**DCL     10380--REDEF
VX_PASS2_REF.UNSAT.L_STOP
     10381**DCL     10386--REDEF
VX_PASS2_REF.UNSAT.L_WHERE
     10387**DCL     10392--REDEF
VX_PASS2_REF.UNSAT.MAX
     10369**DCL     10374--REDEF
VX_PASS2_REF.UNSAT.PAGE#
PL6.E3A0      #001=VXM$MAIN File=VXM$MAIN.:E05TSI                                WED 07/30/97 08:18 Page:74   
     10399**DCL     10404--REDEF
VX_PASS2_REF.UNSAT.SIZE
     10393**DCL     10398--REDEF
VX_PHRASE.PHRASE
      9801**DCL      9803--REDEF
VX_PROGRAM_BIAS.A
      9579**DCL      9580--REDEF
VX_ROOT$
      9552**DCL     13277>>ASSIGN
VX_RUF$
      9553**DCL     13265<>CALL    13267<>CALL    13332>>IF      13335<>CALL    13339<>CALL    13390<>CALL
     13393<>CALL    13400<>CALL    13408>>ASSIGN  13409>>ASSIGN  13409>>ASSIGN  13410>>IF      13411>>ASSIGN
     13413>>IF      13414>>ASSIGN  13417>>IF      13418>>ASSIGN
VX_RU_HEAD
      8930**DCL     13396--CALL    13396--CALL
VX_RU_HEAD.SEV
      8970**DCL     13395<<ASSIGN  13434>>IF      13435>>ASSIGN
VX_R_KEY_BUF.FORM0
      8648**DCL      8652--REDEF    8658--REDEF
VX_SD.A
      8276**DCL      8277--REDEF
VX_SPC.B$.MINE
     10470**DCL     10476--REDEF
VX_SPC.B$.NAME
     10449**DCL     10455--REDEF
VX_SPC.B$.SKIP
     10463**DCL     10469--REDEF
VX_SPC.B$.VALUE
     10456**DCL     10462--REDEF
VX_SPC.SEG.NAME
     10418**DCL     10424--REDEF
VX_SPC.SEG.VALUE
     10425**DCL     10431--REDEF
VX_TSX0_OVERLAY.H
     10193**DCL     10196--REDEF
