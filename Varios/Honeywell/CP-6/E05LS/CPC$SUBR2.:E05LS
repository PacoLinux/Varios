VERSION E05

PL6.E3A0      #001=CPC$RDUSERS File=CPC$SUBR2.:E05TSI                            TUE 07/29/97 11:28 Page:1    
        1        1        /*M* CPC$RDUSERS, CPC$RDHLP, CPC$WRUSERS, CPC$WRHLP                          */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /**********************************************************************/
        8        8        /*F*   NAME:   CPC$RDUSERS
        9        9               PURPOSE: Read the :HLP or :USERS record for the current user
       10       10                DESCRIPTION: The users' name and account specified in the JIT
       11       11                       are used as a key to read the specified record into a
       12       12                       specified buffer.
       13       13        */
       14       14        /*D*   NAME:   CPC$RDUSERS
       15       15               CALL:   CALL CPC$RDUSERS(RD_DCB#,RD_MODE,)
       16       16               INTERFACE: CPC$WRITEMSGE,CPC$ENQUEUE,CPC$DEQUEUE
       17       17               INPUT:  B$JIT.ACCN - users account
       18       18                       B$JIT.UNAME - users name
       19       19                       RD_DCB# - dcb utilized for reading
       20       20                       BUF_ - vector framing input buffer
       21       21                       RD_MODE - mode to be used for reading :USERS
       22       22               OUTPUT: specified :USERS record in SEG$2.USERS$ -> AS$USERS
       23       23                DESCRIPTION: The key to read the :USERS record is created from the
       24       24                       users' name and account in the JIT and is of the form
       25       25                       count-account-name. The file is opened
       26       26                       in the mode specified and the record is read into the
       27       27                       specified input buffer. Enqueueing is performed on the
       28       28                       record if UPDATE is specified for RD_MODE. If a read error
       29       29                       occurs, dequeueing is performed.
       30       30        */
       31       31        /**********************************************************************/
       32       32        CPC$RDUSERS: PROC(RD_DCB#,RD_MODE) ALTRET;
       33       33                   %INCLUDE CP_6;
       34      114                   %INCLUDE CP_6_SUBS;
       35      654                   %INCLUDE AS_SUPER_C;
       36     1089                   %INCLUDE B$JIT;
       37     1379                   %INCLUDE B_MACROS_C;
PL6.E3A0      #001=CPC$RDUSERS File=CPC$SUBR2.:E05TSI                            TUE 07/29/97 11:28 Page:2    
       38     1490                   %INCLUDE CP_MACROS_C;
       39     2242                   %INCLUDE CP_SUBS_C;
       40     3159                   %INCLUDE CP_PERR_C;
       41     3497                   %INCLUDE KL_SUPER_C;
       42     6399                   %INCLUDE XU_MACRO_C;
       43     9505                   %INCLUDE F$DCB ;
       44     9554                   %INCLUDE CP_DATA_R;
       45    12117    1   DCL UNAME_SIZE UBIN(36) ALIGNED;
       46    12118    1   DCL 1 USERS_KEY ALIGNED,
       47    12119    1          2 CNT UBIN(9) UNAL,
       48    12120    1          2 TXT CHAR(20);
       49    12121        /***** parameters *****/
       50    12122    1   DCL RD_DCB# UBIN WORD;
       51    12123    1   DCL RD_MODE UBIN WORD;
       52    12124        /***** external routines *****/
       53    12125    1   DCL CPC$WRITEMSGE ENTRY(6);
       54    12126    1   DCL CPC$ENQUEUE ENTRY(2) ALTRET;
       55    12127    1   DCL CPC$DEQUEUE ENTRY(2) ALTRET;
       56    12128        /***** fpts *****/
       57    12129        %FPT_OPEN(FPTN=FPT_OPEN,STCLASS=AUTO);
       58    12238        %FPT_CLOSE(FPTN=FPT_CLOSE,STCLASS=AUTO);
       59    12280        %FPT_READ(FPTN=FPT_READ,STCLASS=AUTO);
       60    12319        /***** Based structures *****/
       61    12320        %B$TCB (STCLASS="BASED(B$TCB$)");
       62    12323        %B$ALT;
       63    12331        %SEG$2(NAME=SEG$2);
       64    12391        %AS_USERS(STR_NAME=AS$USERS,STCLASS=BASED);
       65    12569        %KL_DREC(NAME=KL$DREC,STCLASS=BASED,LAST=",");
       66    12682        %KL_FEBLK(NAME=KL$FEBLK,RCNT=31,LVL=2) ;
       67    12731        /***** error codes *****/
       68    12732        %ERR_CODE (NAME=E_FLEBUSY,MID#=CPC$SUBRMID,CODE#=E$FLEBUSY,STCLASS=CONSTANT);
       69    12752        %ERR_CODE (NAME=E_CANTRD,MID#=CPC$SUBRMID,CODE#=E$CANTRD,STCLASS=CONSTANT);
       70    12772        /**/
       71    12773    1     IF SEG$2.FLAGS.USERS
       72    12774
       73    12775    1        THEN
       74    12776    1           RETURN; /* already have the :USERS record */
PL6.E3A0      #001=CPC$RDUSERS File=CPC$SUBR2.:E05TSI                            TUE 07/29/97 11:28 Page:3    
       75    12777        /*
       76    12778             ***** Call READ_FILE to read :USERS record...
       77    12779        */
       78    12780    1     CALL READ_FILE (VECTOR(COLONUSERS),VECTOR(SEG$2.USERS$->AS$USERS),'1'B)
       79    12781    1                                               ALTRET(E_READ_FILE);
       80    12782    1     SEG$2.FLAGS.USERS = %YES#;
       81    12783    1     RETURN;
       82    12784        %EJECT;
PL6.E3A0      #001=CPC$RDUSERS File=CPC$SUBR2.:E05TSI                            TUE 07/29/97 11:28 Page:4    
       83    12785        /**********************************************************************/
       84    12786        /*F*   NAME:   CPC$RDHLP
       85    12787               PURPOSE: Read the :HLP or :HLP record for the current user
       86    12788                DESCRIPTION: The users' name and account specified in the JIT
       87    12789                       are used as a key to read the specified record into a
       88    12790                       specified buffer.
       89    12791        */
       90    12792        /*D*   NAME:   CPC$RDHLP
       91    12793               CALL:   CALL CPC$RDHLP(RD_DCB#,RD_MODE)
       92    12794               INTERFACE: CPC$WRITEMSGE,CPC$ENQUEUE,CPC$DEQUEUE
       93    12795               INPUT:  B$JIT.ACCN - users account
       94    12796                       B$JIT.UNAME - users name
       95    12797                       RD_DCB# - dcb utilized for reading
       96    12798                       BUF_ - vector framing input buffer
       97    12799                       RD_MODE - mode to be used for reading :HLP
       98    12800               OUTPUT: specified :HLP record in SEG$2.HLP$ -> KL$DREC
       99    12801                DESCRIPTION: The key to read the :HLP record is created from the
      100    12802                       users' name and account in the JIT and is of the form
      101    12803                       count-account-name. The file is opened
      102    12804                       in the mode specified and the record is read into the
      103    12805                       specified input buffer. Enqueueing is performed on the
      104    12806                       record if UPDATE is specified for RD_MODE. If a read error
      105    12807                       occurs, dequeueing is performed.
      106    12808        */
      107    12809        /**********************************************************************/
      108    12810    1   CPC$RDHLP: ENTRY(RD_DCB#,RD_MODE) ALTRET;
      109    12811        /*
      110    12812             ***** Call READ_FILE to read :HLP record...
      111    12813        */
      112    12814    1     CALL READ_FILE (VECTOR(COLONHLP),VECTOR(SEG$2.HLP$->KL$DREC),'0'B)
      113    12815    1                                               ALTRET(E_READ_FILE);
      114    12816    1     SEG$2.FLAGS.HLP = %YES#;
      115    12817    1     RETURN;
      116    12818    1   E_READ_FILE:
      117    12819    1     ALTRETURN;
      118    12820        %EJECT;
PL6.E3A0      #001=CPC$RDUSERS File=CPC$SUBR2.:E05TSI                            TUE 07/29/97 11:28 Page:5    
      119    12821    1   READ_FILE: PROC (FILE_,BUF_,USERS_FLG) ALTRET;
      120    12822        /**/
      121    12823    2   DCL FILE_ BIT(72) DALIGNED;
      122    12824    2   DCL BUF_ BIT(72) DALIGNED;
      123    12825    2   DCL USERS_FLG BIT(1)  ALIGNED;
      124    12826        /*
      125    12827             ***** Create key for reading record
      126    12828        */
      127    12829        /*   ***** Determine no. Of chars */
      128    12830    2     CALL INDEX(UNAME_SIZE,' ',B$JIT.UNAME); /*Get uname size*/
      129    12831        /*   ***** Store size,accn,uname */
      130    12832    2     USERS_KEY.CNT=(SIZEC(B$JIT.ACCN)+UNAME_SIZE);
      131    12833    2     CALL INSERT(USERS_KEY.TXT,0,USERS_KEY.CNT,B$JIT.ACCN,B$JIT.UNAME);
      132    12834        /*
      133    12835             ***** Intiialize open fpt
      134    12836        */
      135    12837    2     FPT_OPEN=CFPT_OPEN;
      136    12838    2     FPT_OPEN.V_=VECTOR(FPT_OPEN.V);
      137    12839    2     FPT_OPEN.NAME_=FILE_;
      138    12840    2     FPT_OPEN.ACCT_=VECTOR(COLONSYS);
      139    12841    2     FPT_OPEN.V.DCB#=RD_DCB#;
      140    12842    2     FPT_OPEN.V.ASN#=%FILE#;
      141    12843    2     FPT_OPEN.V.FUN#=RD_MODE;
      142    12844    2     FPT_OPEN.V.SHARE#=%ALL#;
      143    12845    2     FPT_OPEN.V.ACS#=%DIRECT#;
      144    12846        /*
      145    12847             ***** Open file
      146    12848        */
      147    12849    2     CALL M$OPEN(FPT_OPEN) ALTRET(E_OPEN);
      148    12850        /*
      149    12851             ***** Enqueue record if fun is update
      150    12852        */
      151    12853    2     IF RD_MODE=%UPDATE#
      152    12854    2        THEN
      153    12855    2           CALL CPC$ENQUEUE(RD_DCB#,USERS_KEY) ALTRET(E_ENQUEUE);
      154    12856        /*
      155    12857             ***** Initialize read fpt
PL6.E3A0      #001=CPC$RDUSERS File=CPC$SUBR2.:E05TSI                            TUE 07/29/97 11:28 Page:6    
      156    12858        */
      157    12859    2     FPT_READ=CFPT_READ;
      158    12860    2     FPT_READ.V_=VECTOR(FPT_READ.V);
      159    12861    2     FPT_READ.V.DCB#=RD_DCB#;
      160    12862    2     FPT_READ.BUF_=BUF_;
      161    12863    2     FPT_READ.KEY_=VECTOR(USERS_KEY);
      162    12864    2     FPT_READ.V.KEYS#=%YES#;
      163    12865        /*
      164    12866             ***** Read in :USERS record
      165    12867        */
      166    12868    2     CALL M$READ(FPT_READ) ALTRET(E_READ);
      167    12869    2     IF USERS_FLG
      168    12870    2         THEN
      169    12871    2             SEG$2.USERS_SZ = DCBADDR(RD_DCB#) -> F$DCB.ARS ;
      170    12872    2         ELSE
      171    12873    2             SEG$2.HLP_SZ = DCBADDR(RD_DCB#) -> F$DCB.ARS ;
      172    12874        /*
      173    12875             ***** If update not specified, then close dcb...
      174    12876        */
      175    12877    2     IF RD_MODE ~= %UPDATE#
      176    12878
      177    12879    2        THEN
      178    12880    3           DO;
      179    12881    3              FPT_CLOSE = CFPT_CLOSE;
      180    12882    3              FPT_CLOSE.V_ = VECTOR(FPT_CLOSE.V);
      181    12883    3              FPT_CLOSE.V.DCB#=RD_DCB#;
      182    12884    3              FPT_CLOSE.V.DISP#=%SAVE#;
      183    12885    3              CALL M$CLOSE (FPT_CLOSE) ALTRET(E_CLOSE);
      184    12886    3           END;
      185    12887    2     RETURN;
      186    12888    2   E_OPEN:
      187    12889        /*E*    ERROR: CPC-E$FLEBUSY-E
      188    12890                MESSAGE: %FN file busy, try again later
      189    12891                DESCRIPTION: IBEX was unable to open the specified file
      190    12892                                due to file being in use.
      191    12893                                Execution of the command should be feasable later.
      192    12894        */
PL6.E3A0      #001=CPC$RDUSERS File=CPC$SUBR2.:E05TSI                            TUE 07/29/97 11:28 Page:7    
      193    12895        /*E*    ERROR: CPC-E$CANTOPN-E
      194    12896                MESSAGE: Unable to open %FN file
      195    12897                DESCRIPTION: IBEX was unable to open the specified file.
      196    12898        */
      197    12899    2     IF B$TCB.ALT$ -> B$ALT.ERR.CODE = E$FLEBUSY
      198    12900
      199    12901    2        THEN
      200    12902    2           CALL CPC$WRITEMSGE(E_FLEBUSY,RD_DCB#,,,,%YES#);
      201    12903
      202    12904    2        ELSE
      203    12905    2              CALL CPC$WRITEMSGE (B$TCB.ALT$ -> B$ALT.ERR,RD_DCB#,,,,%YES#);
      204    12906    2     ALTRETURN;
      205    12907    2   E_READ:
      206    12908        /*E*    ERROR: CPC-E$CANTRD-E
      207    12909                MESSAGE: Error reading %FN file
      208    12910                DESCRIPTION: IBEX  was unable to read the specified file.
      209    12911        */
      210    12912    2     CALL CPC$WRITEMSGE(E_CANTRD,RD_DCB#,,,,%YES#);
      211    12913        /*
      212    12914             *****     Dequeue only if queued(when update)
      213    12915        */
      214    12916    2     IF RD_MODE = %UPDATE#
      215    12917
      216    12918    2        THEN
      217    12919    2           CALL CPC$DEQUEUE (RD_DCB#,USERS_KEY) ALTRET(E_ENQUEUE);
      218    12920    2   E_ENQUEUE:
      219    12921        /*
      220    12922             ***** Close file before returning
      221    12923        */
      222    12924    2     FPT_CLOSE = CFPT_CLOSE;
      223    12925    2     FPT_CLOSE.V_=VECTOR(FPT_CLOSE.V);
      224    12926    2     FPT_CLOSE.V.DCB#=RD_DCB#;
      225    12927    2     FPT_CLOSE.V.DISP#=%SAVE#;
      226    12928    2     CALL M$CLOSE (FPT_CLOSE) ALTRET(E_CLOSE);
      227    12929    2     ALTRETURN;
      228    12930        /**/
      229    12931    2   E_CLOSE:
PL6.E3A0      #001=CPC$RDUSERS File=CPC$SUBR2.:E05TSI                            TUE 07/29/97 11:28 Page:8    
      230    12932    2     CALL CPC$WRITEMSGE (B$TCB.ALT$->B$ALT.ERR,RD_DCB#,,,,%YES#);
      231    12933    2   END READ_FILE;
      232    12934    1   END CPC$RDUSERS;
      233    12935                   %EOD;

PL6.E3A0      #001=CPC$RDUSERS File=CPC$SUBR2.:E05TSI                            TUE 07/29/97 11:28 Page:9    
--  Include file information  --

   CP_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   F$DCB.:E05TOU  cannot be made into a system file and is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
   KL_SUPER_C.:E05TOU  is referenced.
   CP_PERR_C.:E05TOU  is referenced.
   CP_SUBS_C.:E05TOU  is referenced.
   CP_MACROS_C.:E05TOU  is referenced.
   B_MACROS_C.:E05TOU  is referenced.
   B$JIT.:E05TOU  cannot be made into a system file and is referenced.
   AS_SUPER_C.:E05TOU  is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure CPC$RDUSERS.

   Procedure CPC$RDUSERS requires 275 words for executable code.
   Procedure CPC$RDUSERS requires 128 words of local(AUTO) storage.

PL6.E3A0      #001=CPC$RDUSERS File=CPC$SUBR2.:E05TSI                            TUE 07/29/97 11:28 Page:10   

 Object Unit name= CPC$RDUSERS                                File name= CPC$SUBR2.:E05TOU
 UTS= JUL 29 '97 11:28:14.64 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1  RoData even  UTS      2      2  CPC$RDUSERS
    2   Proc  even  none   275    423  CPC$RDUSERS
    3  RoData even  none    20     24  CPC$RDUSERS

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     2      0   yes    yes     yes      Std        2  CPC$RDUSERS
     2     27          yes     yes      Std        2  CPC$RDHLP

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       2 CPC$ENQUEUE
         yes           Std       6 CPC$WRITEMSGE
 yes     yes           Std       2 CPC$DEQUEUE
                       nStd      0 X66_AUTO_2
                       nStd      0 X66_ARET
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_AALT
PL6.E3A0      #001=CPC$RDUSERS File=CPC$SUBR2.:E05TSI                            TUE 07/29/97 11:28 Page:11   

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                                  CFPT_OPEN                             CFPT_CLOSE
     CFPT_READ                             COLONHLP                              COLONUSERS
     COLONSYS                         r    SEG2$                            r    B$JIT$
r    B$TCB$                                B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ROSID                                 ISSID
PL6.E3A0      #001=CPC$RDUSERS File=CPC$SUBR2.:E05TSI                            TUE 07/29/97 11:28 Page:12   


        1        1        /*M* CPC$RDUSERS, CPC$RDHLP, CPC$WRUSERS, CPC$WRHLP                          */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /**********************************************************************/
        8        8        /*F*   NAME:   CPC$RDUSERS
        9        9               PURPOSE: Read the :HLP or :USERS record for the current user
       10       10                DESCRIPTION: The users' name and account specified in the JIT
       11       11                       are used as a key to read the specified record into a
       12       12                       specified buffer.
       13       13        */
       14       14        /*D*   NAME:   CPC$RDUSERS
       15       15               CALL:   CALL CPC$RDUSERS(RD_DCB#,RD_MODE,)
       16       16               INTERFACE: CPC$WRITEMSGE,CPC$ENQUEUE,CPC$DEQUEUE
       17       17               INPUT:  B$JIT.ACCN - users account
       18       18                       B$JIT.UNAME - users name
       19       19                       RD_DCB# - dcb utilized for reading
       20       20                       BUF_ - vector framing input buffer
       21       21                       RD_MODE - mode to be used for reading :USERS
       22       22               OUTPUT: specified :USERS record in SEG$2.USERS$ -> AS$USERS
       23       23                DESCRIPTION: The key to read the :USERS record is created from the
       24       24                       users' name and account in the JIT and is of the form
       25       25                       count-account-name. The file is opened
       26       26                       in the mode specified and the record is read into the
       27       27                       specified input buffer. Enqueueing is performed on the
       28       28                       record if UPDATE is specified for RD_MODE. If a read error
       29       29                       occurs, dequeueing is performed.
       30       30        */
       31       31        /**********************************************************************/
       32       32        CPC$RDUSERS: PROC(RD_DCB#,RD_MODE) ALTRET;

     32  2 000000   000000 700200 xent  CPC$RDUSERS  TSX0  ! X66_AUTO_2
         2 000001   000200 000002                    ZERO    128,2

PL6.E3A0      #001=CPC$RDUSERS File=CPC$SUBR2.:E05TSI                            TUE 07/29/97 11:28 Page:13   
       33       33                   %INCLUDE CP_6;
       34      114                   %INCLUDE CP_6_SUBS;
       35      654                   %INCLUDE AS_SUPER_C;
       36     1089                   %INCLUDE B$JIT;
       37     1379                   %INCLUDE B_MACROS_C;
       38     1490                   %INCLUDE CP_MACROS_C;
       39     2242                   %INCLUDE CP_SUBS_C;
       40     3159                   %INCLUDE CP_PERR_C;
       41     3497                   %INCLUDE KL_SUPER_C;
       42     6399                   %INCLUDE XU_MACRO_C;
       43     9505                   %INCLUDE F$DCB ;
       44     9554                   %INCLUDE CP_DATA_R;
       45    12117    1   DCL UNAME_SIZE UBIN(36) ALIGNED;
       46    12118    1   DCL 1 USERS_KEY ALIGNED,
       47    12119    1          2 CNT UBIN(9) UNAL,
       48    12120    1          2 TXT CHAR(20);
       49    12121        /***** parameters *****/
       50    12122    1   DCL RD_DCB# UBIN WORD;
       51    12123    1   DCL RD_MODE UBIN WORD;
       52    12124        /***** external routines *****/
       53    12125    1   DCL CPC$WRITEMSGE ENTRY(6);
       54    12126    1   DCL CPC$ENQUEUE ENTRY(2) ALTRET;
       55    12127    1   DCL CPC$DEQUEUE ENTRY(2) ALTRET;
       56    12128        /***** fpts *****/
       57    12129        %FPT_OPEN(FPTN=FPT_OPEN,STCLASS=AUTO);
       58    12238        %FPT_CLOSE(FPTN=FPT_CLOSE,STCLASS=AUTO);
       59    12280        %FPT_READ(FPTN=FPT_READ,STCLASS=AUTO);
       60    12319        /***** Based structures *****/
       61    12320        %B$TCB (STCLASS="BASED(B$TCB$)");
       62    12323        %B$ALT;
       63    12331        %SEG$2(NAME=SEG$2);
       64    12391        %AS_USERS(STR_NAME=AS$USERS,STCLASS=BASED);
       65    12569        %KL_DREC(NAME=KL$DREC,STCLASS=BASED,LAST=",");
       66    12682        %KL_FEBLK(NAME=KL$FEBLK,RCNT=31,LVL=2) ;
       67    12731        /***** error codes *****/
       68    12732        %ERR_CODE (NAME=E_FLEBUSY,MID#=CPC$SUBRMID,CODE#=E$FLEBUSY,STCLASS=CONSTANT);
       69    12752        %ERR_CODE (NAME=E_CANTRD,MID#=CPC$SUBRMID,CODE#=E$CANTRD,STCLASS=CONSTANT);
PL6.E3A0      #001=CPC$RDUSERS File=CPC$SUBR2.:E05TSI                            TUE 07/29/97 11:28 Page:14   
       70    12772        /**/
       71    12773    1     IF SEG$2.FLAGS.USERS

  12773  2 000002   000000 470400 xsym               LDP0    SEG2$
         2 000003   000000 234100                    SZN     0,,PR0
         2 000004   000006 605000 2                  TPL     s:12780

       72    12774
       73    12775    1        THEN
       74    12776    1           RETURN; /* already have the :USERS record */

  12776  2 000005   000000 702200 xent               TSX2  ! X66_ARET

       75    12777        /*
       76    12778             ***** Call READ_FILE to read :USERS record...
       77    12779        */
       78    12780    1     CALL READ_FILE (VECTOR(COLONUSERS),VECTOR(SEG$2.USERS$->AS$USERS),'1'B)

  12780  2 000006   000152 471500                    LDP1    106,,PR0
         2 000007   000002 235000 3                  LDA     2
         2 000010   200166 451500                    STP1    @USERS_FLG+1,,AUTO
         2 000011   200166 236100                    LDQ     @USERS_FLG+1,,AUTO
         2 000012   200174 757100                    STAQ    @USERS_FLG+7,,AUTO
         2 000013   000003 236000 3                  LDQ     3
         2 000014   200165 756100                    STQ     @BUF_+1,,AUTO
         2 000015   200174 633500                    EPPR3   @USERS_FLG+7,,AUTO
         2 000016   200164 453500                    STP3    @FILE_+1,,AUTO
         2 000017   000004 236000 3                  LDQ     4
         2 000020   200163 756100                    STQ     FPT_READ+15,,AUTO
         2 000021   000054 701000 2                  TSX1    READ_FILE
         2 000022   000053 702000 2                  TSX2    E_READ_FILE

       79    12781    1                                               ALTRET(E_READ_FILE);
       80    12782    1     SEG$2.FLAGS.USERS = %YES#;

  12782  2 000023   000000 470400 xsym               LDP0    SEG2$
         2 000024   400000 236003                    LDQ     -131072,DU
PL6.E3A0      #001=CPC$RDUSERS File=CPC$SUBR2.:E05TSI                            TUE 07/29/97 11:28 Page:15   
         2 000025   000000 256100                    ORSQ    0,,PR0

       81    12783    1     RETURN;

  12783  2 000026   000000 702200 xent               TSX2  ! X66_ARET

       82    12784        %EJECT;
PL6.E3A0      #001=CPC$RDUSERS File=CPC$SUBR2.:E05TSI                            TUE 07/29/97 11:28 Page:16   
       83    12785        /**********************************************************************/
       84    12786        /*F*   NAME:   CPC$RDHLP
       85    12787               PURPOSE: Read the :HLP or :HLP record for the current user
       86    12788                DESCRIPTION: The users' name and account specified in the JIT
       87    12789                       are used as a key to read the specified record into a
       88    12790                       specified buffer.
       89    12791        */
       90    12792        /*D*   NAME:   CPC$RDHLP
       91    12793               CALL:   CALL CPC$RDHLP(RD_DCB#,RD_MODE)
       92    12794               INTERFACE: CPC$WRITEMSGE,CPC$ENQUEUE,CPC$DEQUEUE
       93    12795               INPUT:  B$JIT.ACCN - users account
       94    12796                       B$JIT.UNAME - users name
       95    12797                       RD_DCB# - dcb utilized for reading
       96    12798                       BUF_ - vector framing input buffer
       97    12799                       RD_MODE - mode to be used for reading :HLP
       98    12800               OUTPUT: specified :HLP record in SEG$2.HLP$ -> KL$DREC
       99    12801                DESCRIPTION: The key to read the :HLP record is created from the
      100    12802                       users' name and account in the JIT and is of the form
      101    12803                       count-account-name. The file is opened
      102    12804                       in the mode specified and the record is read into the
      103    12805                       specified input buffer. Enqueueing is performed on the
      104    12806                       record if UPDATE is specified for RD_MODE. If a read error
      105    12807                       occurs, dequeueing is performed.
      106    12808        */
      107    12809        /**********************************************************************/
      108    12810    1   CPC$RDHLP: ENTRY(RD_DCB#,RD_MODE) ALTRET;

  12810  2 000027   000000 700200 xent  CPC$RDHLP    TSX0  ! X66_AUTO_2
         2 000030   000200 000002                    ZERO    128,2

      109    12811        /*
      110    12812             ***** Call READ_FILE to read :HLP record...
      111    12813        */
      112    12814    1     CALL READ_FILE (VECTOR(COLONHLP),VECTOR(SEG$2.HLP$->KL$DREC),'0'B)

  12814  2 000031   000000 470400 xsym               LDP0    SEG2$
         2 000032   000153 471500                    LDP1    107,,PR0
PL6.E3A0      #001=CPC$RDUSERS File=CPC$SUBR2.:E05TSI                            TUE 07/29/97 11:28 Page:17   
         2 000033   000010 235000 3                  LDA     8
         2 000034   200166 451500                    STP1    @USERS_FLG+1,,AUTO
         2 000035   200166 236100                    LDQ     @USERS_FLG+1,,AUTO
         2 000036   200176 757100                    STAQ    @USERS_FLG+9,,AUTO
         2 000037   000011 236000 3                  LDQ     9
         2 000040   200165 756100                    STQ     @BUF_+1,,AUTO
         2 000041   200176 633500                    EPPR3   @USERS_FLG+9,,AUTO
         2 000042   200164 453500                    STP3    @FILE_+1,,AUTO
         2 000043   000012 236000 3                  LDQ     10
         2 000044   200163 756100                    STQ     FPT_READ+15,,AUTO
         2 000045   000054 701000 2                  TSX1    READ_FILE
         2 000046   000053 702000 2                  TSX2    E_READ_FILE

      113    12815    1                                               ALTRET(E_READ_FILE);
      114    12816    1     SEG$2.FLAGS.HLP = %YES#;

  12816  2 000047   000000 470400 xsym               LDP0    SEG2$
         2 000050   200000 236003                    LDQ     65536,DU
         2 000051   000000 256100                    ORSQ    0,,PR0

      115    12817    1     RETURN;

  12817  2 000052   000000 702200 xent               TSX2  ! X66_ARET

      116    12818    1   E_READ_FILE:
      117    12819    1     ALTRETURN;

  12819  2 000053   000000 702200 xent  E_READ_FILE  TSX2  ! X66_AALT

      118    12820        %EJECT;
PL6.E3A0      #001=CPC$RDUSERS File=CPC$SUBR2.:E05TSI                            TUE 07/29/97 11:28 Page:18   
      119    12821    1   READ_FILE: PROC (FILE_,BUF_,USERS_FLG) ALTRET;

  12821  2 000054   200162 741300       READ_FILE    STX1  ! FPT_READ+14,,AUTO

      120    12822        /**/
      121    12823    2   DCL FILE_ BIT(72) DALIGNED;
      122    12824    2   DCL BUF_ BIT(72) DALIGNED;
      123    12825    2   DCL USERS_FLG BIT(1)  ALIGNED;
      124    12826        /*
      125    12827             ***** Create key for reading record
      126    12828        */
      127    12829        /*   ***** Determine no. Of chars */
      128    12830    2     CALL INDEX(UNAME_SIZE,' ',B$JIT.UNAME); /*Get uname size*/

  12830  2 000055   000000 470400 xsym               LDP0    B$JIT$
         2 000056   000000 124500                    SCM     mask='000'O
         2 000057   000003 000014                    ADSC9   3,,PR0                   cn=0,n=12
         2 000060   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         2 000061   200005 000100                    ARG     UNAME_SIZE,,AUTO

      129    12831        /*   ***** Store size,accn,uname */
      130    12832    2     USERS_KEY.CNT=(SIZEC(B$JIT.ACCN)+UNAME_SIZE);

  12832  2 000062   200005 236100                    LDQ     UNAME_SIZE,,AUTO
         2 000063   000010 036007                    ADLQ    8,DL
         2 000064   000033 736000                    QLS     27
         2 000065   200006 552140                    STBQ    USERS_KEY,'40'O,AUTO

      131    12833    2     CALL INSERT(USERS_KEY.TXT,0,USERS_KEY.CNT,B$JIT.ACCN,B$JIT.UNAME);

  12833  2 000066   200006 236100                    LDQ     USERS_KEY,,AUTO
         2 000067   000033 772000                    QRL     27
         2 000070   000000 620006                    EAX0    0,QL
         2 000071   040140 100500                    MLR     fill='040'O
         2 000072   000001 000010                    ADSC9   1,,PR0                   cn=0,n=8
         2 000073   200006 200010                    ADSC9   USERS_KEY,,AUTO          cn=1,n=*X0
         2 000074   000011 116007                    CMPQ    9,DL
PL6.E3A0      #001=CPC$RDUSERS File=CPC$SUBR2.:E05TSI                            TUE 07/29/97 11:28 Page:19   
         2 000075   000102 602000 2                  TNC     s:12837
         2 000076   777770 620006                    EAX0    -8,QL
         2 000077   040140 100500                    MLR     fill='040'O
         2 000100   000003 000014                    ADSC9   3,,PR0                   cn=0,n=12
         2 000101   200010 200010                    ADSC9   USERS_KEY+2,,AUTO        cn=1,n=*X0

      132    12834        /*
      133    12835             ***** Intiialize open fpt
      134    12836        */
      135    12837    2     FPT_OPEN=CFPT_OPEN;

  12837  2 000102   000100 100400                    MLR     fill='000'O
         2 000103   000000 000350 xsym               ADSC9   CFPT_OPEN                cn=0,n=232
         2 000104   200014 000350                    ADSC9   FPT_OPEN,,AUTO           cn=0,n=232

      136    12838    2     FPT_OPEN.V_=VECTOR(FPT_OPEN.V);

  12838  2 000105   000013 235000 3                  LDA     11
         2 000106   200166 452500                    STP2    @USERS_FLG+1,,AUTO
         2 000107   200166 236100                    LDQ     @USERS_FLG+1,,AUTO
         2 000110   000060 036003                    ADLQ    48,DU
         2 000111   200014 757100                    STAQ    FPT_OPEN,,AUTO

      137    12839    2     FPT_OPEN.NAME_=FILE_;

  12839  2 000112   200163 471500                    LDP1    @FILE_,,AUTO
         2 000113   100000 237100                    LDAQ    0,,PR1
         2 000114   200022 757100                    STAQ    FPT_OPEN+6,,AUTO

      138    12840    2     FPT_OPEN.ACCT_=VECTOR(COLONSYS);

  12840  2 000115   000014 237000 3                  LDAQ    12
         2 000116   200040 757100                    STAQ    FPT_OPEN+20,,AUTO

      139    12841    2     FPT_OPEN.V.DCB#=RD_DCB#;

  12841  2 000117   200003 473500                    LDP3    @RD_DCB#,,AUTO
PL6.E3A0      #001=CPC$RDUSERS File=CPC$SUBR2.:E05TSI                            TUE 07/29/97 11:28 Page:20   
         2 000120   300000 720100                    LXL0    0,,PR3
         2 000121   200060 740100                    STX0    FPT_OPEN+36,,AUTO

      140    12842    2     FPT_OPEN.V.ASN#=%FILE#;

  12842  2 000122   000001 236007                    LDQ     1,DL
         2 000123   200061 552104                    STBQ    FPT_OPEN+37,'04'O,AUTO

      141    12843    2     FPT_OPEN.V.FUN#=RD_MODE;

  12843  2 000124   200004 474500                    LDP4    @RD_MODE,,AUTO
         2 000125   400000 236100                    LDQ     0,,PR4
         2 000126   000011 736000                    QLS     9
         2 000127   200061 552110                    STBQ    FPT_OPEN+37,'10'O,AUTO

      142    12844    2     FPT_OPEN.V.SHARE#=%ALL#;

  12844  2 000130   200060 236100                    LDQ     FPT_OPEN+36,,AUTO
         2 000131   000016 376000 3                  ANQ     14
         2 000132   000010 276007                    ORQ     8,DL
         2 000133   200060 756100                    STQ     FPT_OPEN+36,,AUTO

      143    12845    2     FPT_OPEN.V.ACS#=%DIRECT#;

  12845  2 000134   000002 236007                    LDQ     2,DL
         2 000135   200062 552104                    STBQ    FPT_OPEN+38,'04'O,AUTO

      144    12846        /*
      145    12847             ***** Open file
      146    12848        */
      147    12849    2     CALL M$OPEN(FPT_OPEN) ALTRET(E_OPEN);

  12849  2 000136   200014 630500                    EPPR0   FPT_OPEN,,AUTO
         2 000137   450000 713400                    CLIMB   alt,open
         2 000140   410400 401760                    pmme    nvectors=18
         2 000141   000261 702000 2                  TSX2    E_OPEN

PL6.E3A0      #001=CPC$RDUSERS File=CPC$SUBR2.:E05TSI                            TUE 07/29/97 11:28 Page:21   
      148    12850        /*
      149    12851             ***** Enqueue record if fun is update
      150    12852        */
      151    12853    2     IF RD_MODE=%UPDATE#

  12853  2 000142   200004 470500                    LDP0    @RD_MODE,,AUTO
         2 000143   000000 235100                    LDA     0,,PR0
         2 000144   000001 115007                    CMPA    1,DL
         2 000145   000156 601000 2                  TNZ     s:12859

      152    12854    2        THEN
      153    12855    2           CALL CPC$ENQUEUE(RD_DCB#,USERS_KEY) ALTRET(E_ENQUEUE);

  12855  2 000146   200006 631500                    EPPR1   USERS_KEY,,AUTO
         2 000147   200167 451500                    STP1    @USERS_FLG+2,,AUTO
         2 000150   200003 236100                    LDQ     @RD_DCB#,,AUTO
         2 000151   200166 756100                    STQ     @USERS_FLG+1,,AUTO
         2 000152   200166 630500                    EPPR0   @USERS_FLG+1,,AUTO
         2 000153   000020 631400 xsym               EPPR1   B_VECTNIL+16
         2 000154   000000 701000 xent               TSX1    CPC$ENQUEUE
         2 000155   000356 702000 2                  TSX2    E_ENQUEUE

      154    12856        /*
      155    12857             ***** Initialize read fpt
      156    12858        */
      157    12859    2     FPT_READ=CFPT_READ;

  12859  2 000156   000100 100400                    MLR     fill='000'O
         2 000157   000000 000070 xsym               ADSC9   CFPT_READ                cn=0,n=56
         2 000160   200144 000070                    ADSC9   FPT_READ,,AUTO           cn=0,n=56

      158    12860    2     FPT_READ.V_=VECTOR(FPT_READ.V);

  12860  2 000161   000017 235000 3                  LDA     15
         2 000162   200166 452500                    STP2    @USERS_FLG+1,,AUTO
         2 000163   200166 236100                    LDQ     @USERS_FLG+1,,AUTO
         2 000164   000154 036003                    ADLQ    108,DU
PL6.E3A0      #001=CPC$RDUSERS File=CPC$SUBR2.:E05TSI                            TUE 07/29/97 11:28 Page:22   
         2 000165   200144 757100                    STAQ    FPT_READ,,AUTO

      159    12861    2     FPT_READ.V.DCB#=RD_DCB#;

  12861  2 000166   200003 470500                    LDP0    @RD_DCB#,,AUTO
         2 000167   000000 720100                    LXL0    0,,PR0
         2 000170   200154 740100                    STX0    FPT_READ+8,,AUTO

      160    12862    2     FPT_READ.BUF_=BUF_;

  12862  2 000171   200164 471500                    LDP1    @BUF_,,AUTO
         2 000172   100000 237100                    LDAQ    0,,PR1
         2 000173   200150 757100                    STAQ    FPT_READ+4,,AUTO

      161    12863    2     FPT_READ.KEY_=VECTOR(USERS_KEY);

  12863  2 000174   000017 235000 3                  LDA     15
         2 000175   200166 452500                    STP2    @USERS_FLG+1,,AUTO
         2 000176   200166 236100                    LDQ     @USERS_FLG+1,,AUTO
         2 000177   000006 036003                    ADLQ    6,DU
         2 000200   200146 757100                    STAQ    FPT_READ+2,,AUTO

      162    12864    2     FPT_READ.V.KEYS#=%YES#;

  12864  2 000201   200000 236007                    LDQ     65536,DL
         2 000202   200154 256100                    ORSQ    FPT_READ+8,,AUTO

      163    12865        /*
      164    12866             ***** Read in :USERS record
      165    12867        */
      166    12868    2     CALL M$READ(FPT_READ) ALTRET(E_READ);

  12868  2 000203   200144 630500                    EPPR0   FPT_READ,,AUTO
         2 000204   440000 713400                    CLIMB   alt,read
         2 000205   401400 401760                    pmme    nvectors=4
         2 000206   000325 702000 2                  TSX2    E_READ

PL6.E3A0      #001=CPC$RDUSERS File=CPC$SUBR2.:E05TSI                            TUE 07/29/97 11:28 Page:23   
      167    12869    2     IF USERS_FLG

  12869  2 000207   200165 470500                    LDP0    @USERS_FLG,,AUTO
         2 000210   000000 234100                    SZN     0,,PR0
         2 000211   000223 605000 2                  TPL     s:12873

      168    12870    2         THEN
      169    12871    2             SEG$2.USERS_SZ = DCBADDR(RD_DCB#) -> F$DCB.ARS ;

  12871  2 000212   000020 471400 3                  LDP1    16
         2 000213   100000 473500                    LDP3    0,,PR1
         2 000214   200003 474500                    LDP4    @RD_DCB#,,AUTO
         2 000215   400000 720100                    LXL0    0,,PR4
         2 000216   300000 475510                    LDP5    0,X0,PR3
         2 000217   500000 721100                    LXL1    0,,PR5
         2 000220   000000 476400 xsym               LDP6    SEG2$
         2 000221   600001 441100                    SXL1    1,,PR6
         2 000222   000233 710000 2                  TRA     s:12877

      170    12872    2         ELSE
      171    12873    2             SEG$2.HLP_SZ = DCBADDR(RD_DCB#) -> F$DCB.ARS ;

  12873  2 000223   000020 471400 3                  LDP1    16
         2 000224   100000 473500                    LDP3    0,,PR1
         2 000225   200003 474500                    LDP4    @RD_DCB#,,AUTO
         2 000226   400000 720100                    LXL0    0,,PR4
         2 000227   300000 475510                    LDP5    0,X0,PR3
         2 000230   500000 721100                    LXL1    0,,PR5
         2 000231   000000 476400 xsym               LDP6    SEG2$
         2 000232   600002 741100                    STX1    2,,PR6

      172    12874        /*
      173    12875             ***** If update not specified, then close dcb...
      174    12876        */
      175    12877    2     IF RD_MODE ~= %UPDATE#

  12877  2 000233   200004 475500                    LDP5    @RD_MODE,,AUTO
PL6.E3A0      #001=CPC$RDUSERS File=CPC$SUBR2.:E05TSI                            TUE 07/29/97 11:28 Page:24   
         2 000234   500000 235100                    LDA     0,,PR5
         2 000235   000001 115007                    CMPA    1,DL
         2 000236   000257 600000 2                  TZE     s:12887

      176    12878
      177    12879    2        THEN
      178    12880    3           DO;

      179    12881    3              FPT_CLOSE = CFPT_CLOSE;

  12881  2 000237   000100 100400                    MLR     fill='000'O
         2 000240   000000 000170 xsym               ADSC9   CFPT_CLOSE               cn=0,n=120
         2 000241   200106 000170                    ADSC9   FPT_CLOSE,,AUTO          cn=0,n=120

      180    12882    3              FPT_CLOSE.V_ = VECTOR(FPT_CLOSE.V);

  12882  2 000242   000021 235000 3                  LDA     17
         2 000243   200166 452500                    STP2    @USERS_FLG+1,,AUTO
         2 000244   200166 236100                    LDQ     @USERS_FLG+1,,AUTO
         2 000245   000140 036003                    ADLQ    96,DU
         2 000246   200106 757100                    STAQ    FPT_CLOSE,,AUTO

      181    12883    3              FPT_CLOSE.V.DCB#=RD_DCB#;

  12883  2 000247   400000 720100                    LXL0    0,,PR4
         2 000250   200140 740100                    STX0    FPT_CLOSE+26,,AUTO

      182    12884    3              FPT_CLOSE.V.DISP#=%SAVE#;

  12884  2 000251   000002 236007                    LDQ     2,DL
         2 000252   200140 552104                    STBQ    FPT_CLOSE+26,'04'O,AUTO

      183    12885    3              CALL M$CLOSE (FPT_CLOSE) ALTRET(E_CLOSE);

  12885  2 000253   200106 630500                    EPPR0   FPT_CLOSE,,AUTO
         2 000254   450001 713400                    CLIMB   alt,close
         2 000255   406000 401760                    pmme    nvectors=13
PL6.E3A0      #001=CPC$RDUSERS File=CPC$SUBR2.:E05TSI                            TUE 07/29/97 11:28 Page:25   
         2 000256   000401 702000 2                  TSX2    E_CLOSE

      184    12886    3           END;

      185    12887    2     RETURN;

  12887  2 000257   200162 221300                    LDX1  ! FPT_READ+14,,AUTO
         2 000260   000001 702211                    TSX2  ! 1,X1

      186    12888    2   E_OPEN:
      187    12889        /*E*    ERROR: CPC-E$FLEBUSY-E
      188    12890                MESSAGE: %FN file busy, try again later
      189    12891                DESCRIPTION: IBEX was unable to open the specified file
      190    12892                                due to file being in use.
      191    12893                                Execution of the command should be feasable later.
      192    12894        */
      193    12895        /*E*    ERROR: CPC-E$CANTOPN-E
      194    12896                MESSAGE: Unable to open %FN file
      195    12897                DESCRIPTION: IBEX was unable to open the specified file.
      196    12898        */
      197    12899    2     IF B$TCB.ALT$ -> B$ALT.ERR.CODE = E$FLEBUSY

  12899  2 000261   000000 470400 xsym  E_OPEN       LDP0    B$TCB$
         2 000262   000000 471500                    LDP1    0,,PR0
         2 000263   100102 236100                    LDQ     66,,PR1
         2 000264   377770 376007                    ANQ     131064,DL
         2 000265   003600 116007                    CMPQ    1920,DL
         2 000266   000305 601000 2                  TNZ     s:12905

      198    12900
      199    12901    2        THEN
      200    12902    2           CALL CPC$WRITEMSGE(E_FLEBUSY,RD_DCB#,,,,%YES#);

  12902  2 000267   000003 236000 3                  LDQ     3
         2 000270   000001 235000 xsym               LDA     B_VECTNIL+1
         2 000271   200172 757100                    STAQ    @USERS_FLG+5,,AUTO
         2 000272   000001 236000 xsym               LDQ     B_VECTNIL+1
PL6.E3A0      #001=CPC$RDUSERS File=CPC$SUBR2.:E05TSI                            TUE 07/29/97 11:28 Page:26   
         2 000273   000001 235000 xsym               LDA     B_VECTNIL+1
         2 000274   200170 757100                    STAQ    @USERS_FLG+3,,AUTO
         2 000275   200003 236100                    LDQ     @RD_DCB#,,AUTO
         2 000276   000022 235000 3                  LDA     18
         2 000277   200166 757100                    STAQ    @USERS_FLG+1,,AUTO
         2 000300   200166 630500                    EPPR0   @USERS_FLG+1,,AUTO
         2 000301   000024 631400 xsym               EPPR1   B_VECTNIL+20
         2 000302   000000 701000 xent               TSX1    CPC$WRITEMSGE
         2 000303   000000 011000                    NOP     0
         2 000304   000323 710000 2                  TRA     s:12906

      201    12903
      202    12904    2        ELSE
      203    12905    2              CALL CPC$WRITEMSGE (B$TCB.ALT$ -> B$ALT.ERR,RD_DCB#,,,,%YES#);

  12905  2 000305   000003 236000 3                  LDQ     3
         2 000306   000001 235000 xsym               LDA     B_VECTNIL+1
         2 000307   200172 757100                    STAQ    @USERS_FLG+5,,AUTO
         2 000310   000001 236000 xsym               LDQ     B_VECTNIL+1
         2 000311   000001 235000 xsym               LDA     B_VECTNIL+1
         2 000312   200170 757100                    STAQ    @USERS_FLG+3,,AUTO
         2 000313   200003 236100                    LDQ     @RD_DCB#,,AUTO
         2 000314   200167 756100                    STQ     @USERS_FLG+2,,AUTO
         2 000315   100102 633500                    EPPR3   66,,PR1
         2 000316   200166 453500                    STP3    @USERS_FLG+1,,AUTO
         2 000317   200166 630500                    EPPR0   @USERS_FLG+1,,AUTO
         2 000320   000024 631400 xsym               EPPR1   B_VECTNIL+20
         2 000321   000000 701000 xent               TSX1    CPC$WRITEMSGE
         2 000322   000000 011000                    NOP     0

      204    12906    2     ALTRETURN;

  12906  2 000323   200162 221300                    LDX1  ! FPT_READ+14,,AUTO
         2 000324   000000 702211                    TSX2  ! 0,X1

      205    12907    2   E_READ:
      206    12908        /*E*    ERROR: CPC-E$CANTRD-E
PL6.E3A0      #001=CPC$RDUSERS File=CPC$SUBR2.:E05TSI                            TUE 07/29/97 11:28 Page:27   
      207    12909                MESSAGE: Error reading %FN file
      208    12910                DESCRIPTION: IBEX  was unable to read the specified file.
      209    12911        */
      210    12912    2     CALL CPC$WRITEMSGE(E_CANTRD,RD_DCB#,,,,%YES#);

  12912  2 000325   000003 236000 3     E_READ       LDQ     3
         2 000326   000001 235000 xsym               LDA     B_VECTNIL+1
         2 000327   200172 757100                    STAQ    @USERS_FLG+5,,AUTO
         2 000330   000001 236000 xsym               LDQ     B_VECTNIL+1
         2 000331   000001 235000 xsym               LDA     B_VECTNIL+1
         2 000332   200170 757100                    STAQ    @USERS_FLG+3,,AUTO
         2 000333   200003 236100                    LDQ     @RD_DCB#,,AUTO
         2 000334   000023 235000 3                  LDA     19
         2 000335   200166 757100                    STAQ    @USERS_FLG+1,,AUTO
         2 000336   200166 630500                    EPPR0   @USERS_FLG+1,,AUTO
         2 000337   000024 631400 xsym               EPPR1   B_VECTNIL+20
         2 000340   000000 701000 xent               TSX1    CPC$WRITEMSGE
         2 000341   000000 011000                    NOP     0

      211    12913        /*
      212    12914             *****     Dequeue only if queued(when update)
      213    12915        */
      214    12916    2     IF RD_MODE = %UPDATE#

  12916  2 000342   200004 470500                    LDP0    @RD_MODE,,AUTO
         2 000343   000000 235100                    LDA     0,,PR0
         2 000344   000001 115007                    CMPA    1,DL
         2 000345   000356 601000 2                  TNZ     E_ENQUEUE

      215    12917
      216    12918    2        THEN
      217    12919    2           CALL CPC$DEQUEUE (RD_DCB#,USERS_KEY) ALTRET(E_ENQUEUE);

  12919  2 000346   200006 631500                    EPPR1   USERS_KEY,,AUTO
         2 000347   200167 451500                    STP1    @USERS_FLG+2,,AUTO
         2 000350   200003 236100                    LDQ     @RD_DCB#,,AUTO
         2 000351   200166 756100                    STQ     @USERS_FLG+1,,AUTO
PL6.E3A0      #001=CPC$RDUSERS File=CPC$SUBR2.:E05TSI                            TUE 07/29/97 11:28 Page:28   
         2 000352   200166 630500                    EPPR0   @USERS_FLG+1,,AUTO
         2 000353   000020 631400 xsym               EPPR1   B_VECTNIL+16
         2 000354   000000 701000 xent               TSX1    CPC$DEQUEUE
         2 000355   000356 702000 2                  TSX2    E_ENQUEUE

      218    12920    2   E_ENQUEUE:
      219    12921        /*
      220    12922             ***** Close file before returning
      221    12923        */
      222    12924    2     FPT_CLOSE = CFPT_CLOSE;

  12924  2 000356   000100 100400       E_ENQUEUE    MLR     fill='000'O
         2 000357   000000 000170 xsym               ADSC9   CFPT_CLOSE               cn=0,n=120
         2 000360   200106 000170                    ADSC9   FPT_CLOSE,,AUTO          cn=0,n=120

      223    12925    2     FPT_CLOSE.V_=VECTOR(FPT_CLOSE.V);

  12925  2 000361   000021 235000 3                  LDA     17
         2 000362   200166 452500                    STP2    @USERS_FLG+1,,AUTO
         2 000363   200166 236100                    LDQ     @USERS_FLG+1,,AUTO
         2 000364   000140 036003                    ADLQ    96,DU
         2 000365   200106 757100                    STAQ    FPT_CLOSE,,AUTO

      224    12926    2     FPT_CLOSE.V.DCB#=RD_DCB#;

  12926  2 000366   200003 470500                    LDP0    @RD_DCB#,,AUTO
         2 000367   000000 720100                    LXL0    0,,PR0
         2 000370   200140 740100                    STX0    FPT_CLOSE+26,,AUTO

      225    12927    2     FPT_CLOSE.V.DISP#=%SAVE#;

  12927  2 000371   000002 236007                    LDQ     2,DL
         2 000372   200140 552104                    STBQ    FPT_CLOSE+26,'04'O,AUTO

      226    12928    2     CALL M$CLOSE (FPT_CLOSE) ALTRET(E_CLOSE);

  12928  2 000373   200106 630500                    EPPR0   FPT_CLOSE,,AUTO
PL6.E3A0      #001=CPC$RDUSERS File=CPC$SUBR2.:E05TSI                            TUE 07/29/97 11:28 Page:29   
         2 000374   450001 713400                    CLIMB   alt,close
         2 000375   406000 401760                    pmme    nvectors=13
         2 000376   000401 702000 2                  TSX2    E_CLOSE

      227    12929    2     ALTRETURN;

  12929  2 000377   200162 221300                    LDX1  ! FPT_READ+14,,AUTO
         2 000400   000000 702211                    TSX2  ! 0,X1

      228    12930        /**/
      229    12931    2   E_CLOSE:
      230    12932    2     CALL CPC$WRITEMSGE (B$TCB.ALT$->B$ALT.ERR,RD_DCB#,,,,%YES#);

  12932  2 000401   000000 470400 xsym  E_CLOSE      LDP0    B$TCB$
         2 000402   000000 471500                    LDP1    0,,PR0
         2 000403   000003 236000 3                  LDQ     3
         2 000404   000001 235000 xsym               LDA     B_VECTNIL+1
         2 000405   200172 757100                    STAQ    @USERS_FLG+5,,AUTO
         2 000406   000001 236000 xsym               LDQ     B_VECTNIL+1
         2 000407   000001 235000 xsym               LDA     B_VECTNIL+1
         2 000410   200170 757100                    STAQ    @USERS_FLG+3,,AUTO
         2 000411   200003 236100                    LDQ     @RD_DCB#,,AUTO
         2 000412   200167 756100                    STQ     @USERS_FLG+2,,AUTO
         2 000413   100102 633500                    EPPR3   66,,PR1
         2 000414   200166 453500                    STP3    @USERS_FLG+1,,AUTO
         2 000415   200166 630500                    EPPR0   @USERS_FLG+1,,AUTO
         2 000416   000024 631400 xsym               EPPR1   B_VECTNIL+20
         2 000417   000000 701000 xent               TSX1    CPC$WRITEMSGE
         2 000420   000000 011000                    NOP     0

      231    12933    2   END READ_FILE;

  12933  2 000421   200162 221300                    LDX1  ! FPT_READ+14,,AUTO
         2 000422   000001 702211                    TSX2  ! 1,X1
      232    12934    1   END CPC$RDUSERS;
      233    12935                   %EOD;

PL6.E3A0      #001=CPC$RDUSERS File=CPC$SUBR2.:E05TSI                            TUE 07/29/97 11:28 Page:30   
--  Include file information  --

   CP_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   F$DCB.:E05TOU  cannot be made into a system file and is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
   KL_SUPER_C.:E05TOU  is referenced.
   CP_PERR_C.:E05TOU  is referenced.
   CP_SUBS_C.:E05TOU  is referenced.
   CP_MACROS_C.:E05TOU  is referenced.
   B_MACROS_C.:E05TOU  is referenced.
   B$JIT.:E05TOU  cannot be made into a system file and is referenced.
   AS_SUPER_C.:E05TOU  is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure CPC$RDUSERS.
PL6.E3A0      #001=CPC$RDUSERS File=CPC$SUBR2.:E05TSI                            TUE 07/29/97 11:28 Page:31   

 **** Variables and constants ****

  ****  Section 001 RoData CPC$RDUSERS

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     1-0-0/w STRC        r     1 E_CANTRD                   0-0-0/w STRC        r     1 E_FLEBUSY

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

   164-0-0/w PTR         r     1 @BUF_                    163-0-0/w PTR         r     1 @FILE_
     3-0-0/w PTR         r     1 @RD_DCB#                   4-0-0/w PTR         r     1 @RD_MODE
   165-0-0/w PTR         r     1 @USERS_FLG                *0-0-0/d BIT (72)    r     1 BUF_
    *0-0-0/d BIT (72)    r     1 FILE_                    106-0-0/d STRC(1080)  r     1 FPT_CLOSE
    14-0-0/d STRC(2088)  r     1 FPT_OPEN                 144-0-0/d STRC(504)   r     1 FPT_READ
    *0-0-0/w UBIN        r     1 RD_DCB#                   *0-0-0/w UBIN        r     1 RD_MODE
     5-0-0/w UBIN        r     1 UNAME_SIZE                *0-0-0/w BIT         r     1 USERS_FLG
     6-0-0/w STRC(189)   r     1 USERS_KEY

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 B$JIT$                     0-0-0/w PTR         r     1 B$TCB$
     0-0-0/d STRC(1080)  r     1 CFPT_CLOSE                 0-0-0/d STRC(2088)  r     1 CFPT_OPEN
     0-0-0/d STRC(504)   r     1 CFPT_READ                  0-0-0/c STRC(45)    r     1 COLONHLP
     0-0-0/c STRC(72)    r     1 COLONSYS                   0-0-0/c STRC(63)    r     1 COLONUSERS
     0-0-0/w PTR         r     1 SEG2$

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
PL6.E3A0      #001=CPC$RDUSERS File=CPC$SUBR2.:E05TSI                            TUE 07/29/97 11:28 Page:32   
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(18576) r     1 AS$USERS                   0-0-0/w STRC(2448)  r     1 B$ALT
     0-0-0/d STRC(8856)  r     1 B$JIT                      0-0-0/w STRC(144)   r     1 B$TCB
     0-0-0/d ASTR(3528)  r     1 F$DCB                      0-0-0/w STRC(6084)  r     1 KL$DREC
     0-0-0/w STRC(6264)  r     1 SEG$2


   Procedure CPC$RDUSERS requires 275 words for executable code.
   Procedure CPC$RDUSERS requires 128 words of local(AUTO) storage.
PL6.E3A0      #001=CPC$RDUSERS File=CPC$SUBR2.:E05TSI                            TUE 07/29/97 11:28 Page:33   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=CPC$RDUSERS File=CPC$SUBR2.:E05TSI                            TUE 07/29/97 11:28 Page:34   
          MINI XREF LISTING

AS$USERS
     12404**DCL     12780--CALL
AS$USERS.BANNER_PERM
     12519**DCL     12520--REDEF
AS$USERS.BUDGET.MACCT
     12424**DCL     12428--REDEF
AS$USERS.BUDGET.MAX_PROJECTS
     12437**DCL     12440--REDEF
AS$USERS.BUDGET.PACCUM
     12420**DCL     12422--REDEF
AS$USERS.BUDGET.PMAXC
     12415**DCL     12417--REDEF
AS$USERS.SETUP_CHRA.TXT
     12535**DCL     12536--REDEF   12537--REDEF
B$ALT.CODE
     12325**DCL     12325--REDEF   12326--REDEF   12326--REDEF
B$ALT.ERR
     12326**DCL     12905<>CALL    12932<>CALL
B$ALT.ERR.CODE
     12327**DCL     12899>>IF
B$ALT.ERR.ERR#
     12327**DCL     12327--REDEF
B$ALT.EVID
     12326**DCL     12326--REDEF   12326--REDEF
B$JIT.ACCN
      1103**DCL     12832--ASSIGN  12833>>CALLBLT
B$JIT.CPFLAGS1.SLEAZE
      1197**DCL      1197--REDEF
B$JIT.ERR.MID
      1104**DCL      1104--REDEF
B$JIT.JRESPEAK
      1265**DCL      1266--REDEF
PL6.E3A0      #001=CPC$RDUSERS File=CPC$SUBR2.:E05TSI                            TUE 07/29/97 11:28 Page:35   
B$JIT.ORIGINATOR_PORT.FROM_CR
      1374**DCL      1374--REDEF    1375--REDEF
B$JIT.PNR
      1278**DCL      1278--REDEF
B$JIT.TSLINE
      1372**DCL      1373--REDEF
B$JIT.UNAME
      1103**DCL     12830>>CALLBLT 12833>>CALLBLT
B$JIT$
     12050**DCL      1098--IMP-PTR 12830>>CALLBLT 12833>>CALLBLT 12833>>CALLBLT
B$TCB.ALT$
     12321**DCL     12899>>IF      12905>>CALL    12932>>CALL
B$TCB$
     12052**DCL     12321--IMP-PTR 12899>>IF      12905>>CALL    12932>>CALL
BUF_ IN PROCEDURE READ_FILE
     12824**DCL     12821--PROC    12862>>ASSIGN
CAMR_REC.ACSVEH_
     11089**DCL     11090--REDEF
CAMR_REC.ALTKEYS_
     11095**DCL     11096--REDEF   11096--REDEF
CAMR_REC.HDR_
     11094**DCL     11095--REDEF
CAMR_REC.TAB_
     11093**DCL     11094--REDEF
CAMR_REC.UHL_
     11087**DCL     11088--REDEF   11088--REDEF
CAMR_REC.V.FSN#
     11127**DCL     11127--REDEF   11127--REDEF
CAMR_REC.WSN_
     11093**DCL     11093--REDEF
CFPT_CLOSE
      9931**DCL     12881>>ASSIGN  12924>>ASSIGN
CFPT_CLOSE.SN_
      9931**DCL      9931--REDEF
CFPT_CLOSE.UTL_
      9932**DCL      9932--REDEF
PL6.E3A0      #001=CPC$RDUSERS File=CPC$SUBR2.:E05TSI                            TUE 07/29/97 11:28 Page:36   
CFPT_CLOSE.V.EXPIRE#
      9946**DCL      9946--REDEF
CFPT_CLOSE.V.TYPE#
      9944**DCL      9944--REDEF
CFPT_CLOSE.V.XTNSIZE#
      9941**DCL      9941--REDEF    9943--REDEF
CFPT_OPEN
      9864**DCL     12837>>ASSIGN
CFPT_OPEN.ACSVEH_
      9866**DCL      9867--REDEF
CFPT_OPEN.ALTKEYS_
      9872**DCL      9873--REDEF    9873--REDEF
CFPT_OPEN.HDR_
      9871**DCL      9872--REDEF
CFPT_OPEN.TAB_
      9870**DCL      9871--REDEF
CFPT_OPEN.UHL_
      9864**DCL      9865--REDEF    9865--REDEF
CFPT_OPEN.V.FSN#
      9904**DCL      9904--REDEF    9904--REDEF
CFPT_OPEN.WSN_
      9870**DCL      9870--REDEF
CFPT_READ
      9967**DCL     12859>>ASSIGN
CFPT_READ.STATION_
      9970**DCL      9971--REDEF
CFPT_READ.V.DVBYTE.REREAD#
      9982**DCL      9982--REDEF
CFPT_READ.V.INDX#
      9980**DCL      9980--REDEF
CFPT_READUC.STATION_
     10340**DCL     10341--REDEF
CFPT_READUC.V.DVBYTE.REREAD#
     10352**DCL     10352--REDEF
CFPT_READUC.V.INDX#
     10350**DCL     10350--REDEF
PL6.E3A0      #001=CPC$RDUSERS File=CPC$SUBR2.:E05TSI                            TUE 07/29/97 11:28 Page:37   
CFPT_TRTN.V.IR#
     10576**DCL     10577--REDEF
CFPT_WRITE.STATION_
     10008**DCL     10008--REDEF
CFPT_WRITE.V.DVBYTE.VFC#
     10015**DCL     10015--REDEF
CFPT_WRITEUC.STATION_
     10308**DCL     10308--REDEF
CFPT_WRITEUC.V.DVBYTE.VFC#
     10315**DCL     10315--REDEF
CFPT_XXX.V.STEPCC#
     11288**DCL     11288--REDEF
CGETCMD.OUT$
     11309**DCL     11315--REDEF
COLONHLP
     10664**DCL     12814--CALL
COLONSYS
     10704**DCL     12840--ASSIGN
COLONUSERS
     10691**DCL     12780--CALL
CPC$DEQUEUE
     12127**DCL-ENT 12919--CALL
CPC$ENQUEUE
     12126**DCL-ENT 12855--CALL
CPC$WRITEMSGE
     12125**DCL-ENT 12902--CALL    12905--CALL    12912--CALL    12932--CALL
CVLP_TRMCTL.BREAKCOUNT
     10900**DCL     10901--REDEF
CVLP_WINDOW.FWINDOW#
     10996**DCL     10996--REDEF   10997--REDEF
E_CANTRD
     12765**DCL     12912<>CALL
E_CLOSE IN PROCEDURE READ_FILE
     12932**LABEL   12885--CALLALT 12928--CALLALT
E_ENQUEUE IN PROCEDURE READ_FILE
     12924**LABEL   12855--CALLALT 12919--CALLALT
PL6.E3A0      #001=CPC$RDUSERS File=CPC$SUBR2.:E05TSI                            TUE 07/29/97 11:28 Page:38   
E_FLEBUSY
     12745**DCL     12902<>CALL
E_OPEN IN PROCEDURE READ_FILE
     12899**LABEL   12849--CALLALT
E_READ IN PROCEDURE READ_FILE
     12912**LABEL   12868--CALLALT
E_READ_FILE
     12819**LABEL   12780--CALLALT 12814--CALLALT
F$DCB.ACTPOS
      9531**DCL      9531--REDEF
F$DCB.ARS
      9506**DCL      9506--REDEF   12871>>ASSIGN  12873>>ASSIGN
F$DCB.ATTR
      9524**DCL      9525--REDEF
F$DCB.BORROW
      9539**DCL      9539--REDEF    9539--REDEF    9539--REDEF
F$DCB.DCBNAME.L
      9553**DCL      9553--IMP-SIZ
F$DCB.EOMCHAR
      9510**DCL      9510--REDEF
F$DCB.FLDID
      9534**DCL      9534--REDEF
F$DCB.FORM$
      9528**DCL      9528--REDEF
F$DCB.FSECT
      9544**DCL      9544--REDEF
F$DCB.FSN
      9521**DCL      9521--REDEF    9521--REDEF    9522--REDEF
F$DCB.HEADER$
      9527**DCL      9527--REDEF
F$DCB.IXTNSIZE
      9525**DCL      9525--REDEF
F$DCB.LASTSTA$
      9515**DCL      9515--REDEF
F$DCB.LVL
      9540**DCL      9540--REDEF
PL6.E3A0      #001=CPC$RDUSERS File=CPC$SUBR2.:E05TSI                            TUE 07/29/97 11:28 Page:39   
F$DCB.NAME.C
      9515**DCL      9515--REDEF
F$DCB.NOEOF
      9536**DCL      9536--REDEF
F$DCB.NRECS
      9526**DCL      9526--REDEF
F$DCB.NRECX
      9545**DCL      9545--REDEF
F$DCB.OHDR
      9537**DCL      9537--REDEF
F$DCB.ORG
      9520**DCL      9520--REDEF
F$DCB.PRECNO
      9543**DCL      9543--REDEF
F$DCB.RCSZ
      9548**DCL      9548--REDEF
F$DCB.RES
      9516**DCL      9516--REDEF
F$DCB.SETX
      9528**DCL      9528--REDEF
F$DCB.TAB$
      9527**DCL      9528--REDEF
F$DCB.TDA
      9542**DCL      9542--REDEF
F$DCB.WSN
      9517**DCL      9517--REDEF
FILE_ IN PROCEDURE READ_FILE
     12823**DCL     12821--PROC    12839>>ASSIGN
FPT_CLOSE
     12261**DCL     12881<<ASSIGN  12885<>CALL    12924<<ASSIGN  12928<>CALL
FPT_CLOSE.SN_
     12261**DCL     12261--REDEF
FPT_CLOSE.UTL_
     12262**DCL     12262--REDEF
FPT_CLOSE.V
     12266**DCL     12882--ASSIGN  12925--ASSIGN
PL6.E3A0      #001=CPC$RDUSERS File=CPC$SUBR2.:E05TSI                            TUE 07/29/97 11:28 Page:40   
FPT_CLOSE.V.DCB#
     12267**DCL     12883<<ASSIGN  12926<<ASSIGN
FPT_CLOSE.V.DISP#
     12270**DCL     12884<<ASSIGN  12927<<ASSIGN
FPT_CLOSE.V.EXPIRE#
     12276**DCL     12276--REDEF
FPT_CLOSE.V.TYPE#
     12274**DCL     12274--REDEF
FPT_CLOSE.V.XTNSIZE#
     12271**DCL     12271--REDEF   12273--REDEF
FPT_CLOSE.V_
     12261**DCL     12882<<ASSIGN  12925<<ASSIGN
FPT_OPEN
     12194**DCL     12837<<ASSIGN  12849<>CALL
FPT_OPEN.ACCT_
     12198**DCL     12840<<ASSIGN
FPT_OPEN.ACSVEH_
     12196**DCL     12197--REDEF
FPT_OPEN.ALTKEYS_
     12202**DCL     12203--REDEF   12203--REDEF
FPT_OPEN.HDR_
     12201**DCL     12202--REDEF
FPT_OPEN.NAME_
     12195**DCL     12839<<ASSIGN
FPT_OPEN.TAB_
     12200**DCL     12201--REDEF
FPT_OPEN.UHL_
     12194**DCL     12195--REDEF   12195--REDEF
FPT_OPEN.V
     12203**DCL     12838--ASSIGN
FPT_OPEN.V.ACS#
     12214**DCL     12845<<ASSIGN
FPT_OPEN.V.ASN#
     12213**DCL     12842<<ASSIGN
FPT_OPEN.V.DCB#
     12203**DCL     12841<<ASSIGN
PL6.E3A0      #001=CPC$RDUSERS File=CPC$SUBR2.:E05TSI                            TUE 07/29/97 11:28 Page:41   
FPT_OPEN.V.FSN#
     12234**DCL     12234--REDEF   12234--REDEF
FPT_OPEN.V.FUN#
     12213**DCL     12843<<ASSIGN
FPT_OPEN.V.SHARE#
     12208**DCL     12844<<ASSIGN
FPT_OPEN.V_
     12194**DCL     12838<<ASSIGN
FPT_OPEN.WSN_
     12200**DCL     12200--REDEF
FPT_READ
     12297**DCL     12859<<ASSIGN  12868<>CALL
FPT_READ.BUF_
     12299**DCL     12862<<ASSIGN
FPT_READ.KEY_
     12297**DCL     12863<<ASSIGN
FPT_READ.STATION_
     12300**DCL     12301--REDEF
FPT_READ.V
     12301**DCL     12860--ASSIGN
FPT_READ.V.DCB#
     12301**DCL     12861<<ASSIGN
FPT_READ.V.DVBYTE.REREAD#
     12312**DCL     12312--REDEF
FPT_READ.V.INDX#
     12310**DCL     12310--REDEF
FPT_READ.V.KEYS#
     12302**DCL     12864<<ASSIGN
FPT_READ.V_
     12297**DCL     12860<<ASSIGN
KL$DREC
     12582**DCL     12814--CALL
KL$DREC.PASSWORD
     12640**DCL     12644--REDEF
KL$DREC.RENAME
     12663**DCL     12664--REDEF
PL6.E3A0      #001=CPC$RDUSERS File=CPC$SUBR2.:E05TSI                            TUE 07/29/97 11:28 Page:42   
M$CLOSE
        42**DCL-ENT 12885--CALL    12928--CALL
M$OPEN
        42**DCL-ENT 12849--CALL
M$READ
        43**DCL-ENT 12868--CALL
RD_DCB#
     12122**DCL        32--PROC    12810--ENTRY   12841>>ASSIGN  12855<>CALL    12861>>ASSIGN  12871--ASSIGN
     12873--ASSIGN  12883>>ASSIGN  12902<>CALL    12905<>CALL    12912<>CALL    12919<>CALL    12926>>ASSIGN
     12932<>CALL
RD_MODE
     12123**DCL        32--PROC    12810--ENTRY   12843>>ASSIGN  12853>>IF      12877>>IF      12916>>IF
READ_FILE
     12821**PROC    12780--CALL    12814--CALL
SEG$2.FLAGS.HLP
     12335**DCL     12816<<ASSIGN
SEG$2.FLAGS.USERS
     12334**DCL     12773>>IF      12782<<ASSIGN
SEG$2.HLP$
     12362**DCL     12814>>CALL
SEG$2.HLP_SZ
     12355**DCL     12873<<ASSIGN
SEG$2.USERS$
     12361**DCL     12780>>CALL
SEG$2.USERS_SZ
     12354**DCL     12871<<ASSIGN
SEG2$
     12043**DCL     12332--IMP-PTR 12773>>IF      12780>>CALL    12782>>ASSIGN  12814>>CALL    12816>>ASSIGN
     12871>>ASSIGN  12873>>ASSIGN
UNAME_SIZE
     12117**DCL     12830<<CALLBLT 12832>>ASSIGN
USERS_FLG IN PROCEDURE READ_FILE
     12825**DCL     12821--PROC    12869>>IF
USERS_KEY
     12118**DCL     12855<>CALL    12863--ASSIGN  12919<>CALL
USERS_KEY.CNT
PL6.E3A0      #001=CPC$RDUSERS File=CPC$SUBR2.:E05TSI                            TUE 07/29/97 11:28 Page:43   
     12119**DCL     12832<<ASSIGN  12833>>CALLBLT
USERS_KEY.TXT
     12120**DCL     12833<<CALLBLT

PL6.E3A0      #002=CPC$WRUSERS File=CPC$SUBR2.:E05TSI                            TUE 07/29/97 11:28 Page:44   
      234        1        /*T***********************************************************/
      235        2        /*T*                                                         */
      236        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      237        4        /*T*                                                         */
      238        5        /*T***********************************************************/
      239        6        /**********************************************************************/
      240        7        /*F*   NAME:   CPC$WRUSERS
      241        8               PURPOSE: Write the :USERS record for the current user
      242        9               DESCRIPTION: The users' name and account specified in the JIT
      243       10                       is used as a key to write out the specified record from
      244       11                       a specified buffer.
      245       12        */
      246       13        /*D*   NAME:   CPC$WRUSERS
      247       14               CALL:   CALL CPC$WRUSERS(WR_DCB#)
      248       15               INTERFACE: CPC$WRITEMSGE,CPC$DEQUEUE
      249       16               INPUT:  B$JIT.ACCN - users account
      250       17                       B$JIT.UNAME - users name
      251       18               WR_DCB# - dcb to utilize for writing
      252       19               OUTPUT: updated :USERS record
      253       20               DESCRIPTION: The key to write the record is created  from
      254       21                       the users' name and account in the JIT and is of the form
      255       22                       count-account-name. The dcb through which the write
      256       23                       is to occur is expected to be open. The record
      257       24                       is written from the specified output buffer. It is
      258       25                       assumed the record is queued and dequeueing
      259       26                       is performed.
      260       27        */
      261       28        /***********************************************************************/
      262       29        CPC$WRUSERS: PROC(WR_DCB#) ALTRET;
      263       30                   %INCLUDE B$JIT;
      264      320                   %INCLUDE CP_6;
      265      401                   %INCLUDE CP_MACROS_C;
      266     1153                   %INCLUDE XU_MACRO_C;
      267     4259                   %INCLUDE CP_DATA_R;
      268     6822                   %INCLUDE B_MACROS_C;
      269     6933                   %INCLUDE CP_SUBS_C;
      270     7850                   %INCLUDE CP_PERR_C;
PL6.E3A0      #002=CPC$WRUSERS File=CPC$SUBR2.:E05TSI                            TUE 07/29/97 11:28 Page:45   
      271     8188                   %INCLUDE CP_6_SUBS;
      272     8728                   %INCLUDE AS_SUPER_C;
      273     9163                   %INCLUDE KL_SUPER_C;
      274    12065    1   DCL UNAME_SIZE UBIN(36) ALIGNED;        /*#CHARS in name*/
      275    12066    1   DCL 1 USERS_KEY ALIGNED,                /*Key for reading :USERS*/
      276    12067    1          2 CNT UBIN(9) UNAL,
      277    12068    1          2 TXT CHAR(20);
      278    12069        /***** parameters *****/
      279    12070    1   DCL WR_DCB# UBIN WORD;
      280    12071        /***** external routines *****/
      281    12072    1   DCL CPC$WRITEMSGE ENTRY(6);
      282    12073    1   DCL CPC$DEQUEUE ENTRY(2) ALTRET;        /*Dequeue :USERS*/
      283    12074        /***** fpts *****/
      284    12075        %SEG$2(NAME=SEG$2);
      285    12135        %FPT_CLOSE(FPTN=FPT_CLOSE,STCLASS=AUTO);
      286    12177        %FPT_WRITE(FPTN=FPT_WRITE,STCLASS=AUTO);
      287    12208        %AS_USERS(STR_NAME=AS$USERS,STCLASS=BASED);
      288    12386        %KL_DREC(NAME=KL$DREC,STCLASS=BASED,LAST=",");
      289    12499        %KL_FEBLK(NAME=KL$FEBLK,RCNT=31,LVL=2) ;
      290    12548        /***** error codes *****/
      291    12549        %ERR_CODE (NAME=E_CANTWR,MID#=CPC$SUBRMID,CODE#=E$CANTWR,STCLASS=CONSTANT);
      292    12569    1     CALL WRITE_FILE (VECTOR(SEG$2.USERS$->AS$USERS),'1'B) ALTRET(E_WRITE_FILE);
      293    12570    1     RETURN;
      294    12571        %EJECT;
PL6.E3A0      #002=CPC$WRUSERS File=CPC$SUBR2.:E05TSI                            TUE 07/29/97 11:28 Page:46   
      295    12572        /**********************************************************************/
      296    12573        /*F*   NAME:   CPC$WRHLP
      297    12574               PURPOSE: Write the :HLP record for the current user
      298    12575               DESCRIPTION: The users' name and account specified in the JIT
      299    12576                       is used as a key to write out the specified record from
      300    12577                       a specified buffer.
      301    12578        */
      302    12579        /*D*   NAME:   CPC$WRHLP
      303    12580               CALL:   CALL CPC$WRHLP(WR_DCB#)
      304    12581               INTERFACE: CPC$WRITEMSGE,CPC$DEQUEUE
      305    12582               INPUT:  B$JIT.ACCN - users account
      306    12583                       B$JIT.UNAME - users name
      307    12584               WR_DCB# - dcb to utilize for writing
      308    12585               OUTPUT: updated :HLP record
      309    12586               DESCRIPTION: The key to write the record is created  from
      310    12587                       the users' name and account in the JIT and is of the form
      311    12588                       count-account-name. The dcb through which the write
      312    12589                       is to occur is expected to be open. The record
      313    12590                       is written from the specified output buffer. It is
      314    12591                       assumed the record is queued and dequeueing
      315    12592                       is performed.
      316    12593        */
      317    12594        /***********************************************************************/
      318    12595    1   CPC$WRHLP: ENTRY(WR_DCB#) ALTRET;
      319    12596    1     CALL WRITE_FILE (VECTOR(SEG$2.HLP$->KL$DREC),'0'B) ALTRET(E_WRITE_FILE);
      320    12597    1     RETURN;
      321    12598    1   E_WRITE_FILE:
      322    12599    1     ALTRETURN;
      323    12600        %EJECT;
PL6.E3A0      #002=CPC$WRUSERS File=CPC$SUBR2.:E05TSI                            TUE 07/29/97 11:28 Page:47   
      324    12601    1   WRITE_FILE: PROC (BUF_, USERS_FLG) ALTRET;
      325    12602        /**/
      326    12603    2   DCL BUF_ BIT(72) DALIGNED;
      327    12604    2   DCL USERS_FLG BIT(1)  ALIGNED;
      328    12605        /*
      329    12606             ***** Create key for writing record
      330    12607        */
      331    12608    2     CALL INDEX(UNAME_SIZE,' ',B$JIT.UNAME);
      332    12609        /*
      333    12610             ***** Store size,accn,uname into key
      334    12611        */
      335    12612    2     USERS_KEY.CNT=(SIZEC(B$JIT.ACCN)+UNAME_SIZE);
      336    12613    2     CALL INSERT(USERS_KEY.TXT,0,USERS_KEY.CNT,B$JIT.ACCN,B$JIT.UNAME);
      337    12614        /*
      338    12615             ***** Init. Write fpt
      339    12616        */
      340    12617    2     FPT_WRITE=CFPT_WRITE;
      341    12618    2     FPT_WRITE.V_=VECTOR(FPT_WRITE.V);
      342    12619    2     FPT_WRITE.V.DCB#=WR_DCB#;
      343    12620    2     FPT_WRITE.BUF_=BUF_;
      344    12621    2     IF USERS_FLG
      345    12622    2       THEN
      346    12623    2         FPT_WRITE.BUF_.BOUND = SEG$2.USERS_SZ - 1 ;
      347    12624    2       ELSE
      348    12625    2         FPT_WRITE.BUF_.BOUND = SEG$2.HLP_SZ - 1 ;
      349    12626    2     FPT_WRITE.KEY_=VECTOR(USERS_KEY);
      350    12627        /*
      351    12628             ***** Write out record
      352    12629        */
      353    12630    2     CALL M$WRITE(FPT_WRITE) ALTRET(E_WRITE);
      354    12631        /*
      355    12632             ***** Dequeue record
      356    12633        */
      357    12634    2     CALL CPC$DEQUEUE(WR_DCB#,USERS_KEY) ALTRET(E_DEQUEUE);
      358    12635    2     RETURN;
      359    12636    2   E_WRITE:
      360    12637        /*E*       ERROR: CPC-E$CANTWR-E
PL6.E3A0      #002=CPC$WRUSERS File=CPC$SUBR2.:E05TSI                            TUE 07/29/97 11:28 Page:48   
      361    12638                   MESSAGE: Error writing %FN record
      362    12639                   DESCRIPTION: IBEX was unable to create the specified record
      363    12640                          due to a write error.
      364    12641        */
      365    12642    2     CALL CPC$WRITEMSGE(E_CANTWR,WR_DCB#,,,,%YES#);
      366    12643    2   E_DEQUEUE:
      367    12644    2     FPT_CLOSE = CFPT_CLOSE;
      368    12645    2     FPT_CLOSE.V_ = VECTOR(FPT_CLOSE.V);
      369    12646    2     FPT_CLOSE.V.DCB#=WR_DCB#;
      370    12647    2     FPT_CLOSE.V.DISP#=%SAVE#;
      371    12648    2     CALL M$CLOSE(FPT_CLOSE);
      372    12649    2     ALTRETURN;
      373    12650    2   END WRITE_FILE;
      374    12651    1   END CPC$WRUSERS;

PL6.E3A0      #002=CPC$WRUSERS File=CPC$SUBR2.:E05TSI                            TUE 07/29/97 11:28 Page:49   
--  Include file information  --

   KL_SUPER_C.:E05TOU  is referenced.
   AS_SUPER_C.:E05TOU  is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   CP_PERR_C.:E05TOU  is referenced.
   CP_SUBS_C.:E05TOU  is referenced.
   B_MACROS_C.:E05TOU  is referenced.
   CP_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
   CP_MACROS_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure CPC$WRUSERS.

   Procedure CPC$WRUSERS requires 137 words for executable code.
   Procedure CPC$WRUSERS requires 68 words of local(AUTO) storage.

    No errors detected in file CPC$SUBR2.:E05TSI    .

PL6.E3A0      #002=CPC$WRUSERS File=CPC$SUBR2.:E05TSI                            TUE 07/29/97 11:28 Page:50   

 Object Unit name= CPC$WRUSERS                                File name= CPC$SUBR2.:E05TOU
 UTS= JUL 29 '97 11:28:51.24 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1  RoData even  UTS      1      1  CPC$WRUSERS
    2   Proc  even  none   137    211  CPC$WRUSERS
    3  RoData even  none     7      7  CPC$WRUSERS

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     2      0   yes    yes     yes      Std        1  CPC$WRUSERS
     2     17          yes     yes      Std        1  CPC$WRHLP

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       2 CPC$DEQUEUE
         yes           Std       6 CPC$WRITEMSGE
                       nStd      0 X66_AUTO_1
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET
                       nStd      0 X66_AALT
PL6.E3A0      #002=CPC$WRUSERS File=CPC$SUBR2.:E05TSI                            TUE 07/29/97 11:28 Page:51   

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                                  CFPT_CLOSE                            CFPT_WRITE
r    SEG2$                            r    B$JIT$                                B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
PL6.E3A0      #002=CPC$WRUSERS File=CPC$SUBR2.:E05TSI                            TUE 07/29/97 11:28 Page:52   


      234        1        /*T***********************************************************/
      235        2        /*T*                                                         */
      236        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      237        4        /*T*                                                         */
      238        5        /*T***********************************************************/
      239        6        /**********************************************************************/
      240        7        /*F*   NAME:   CPC$WRUSERS
      241        8               PURPOSE: Write the :USERS record for the current user
      242        9               DESCRIPTION: The users' name and account specified in the JIT
      243       10                       is used as a key to write out the specified record from
      244       11                       a specified buffer.
      245       12        */
      246       13        /*D*   NAME:   CPC$WRUSERS
      247       14               CALL:   CALL CPC$WRUSERS(WR_DCB#)
      248       15               INTERFACE: CPC$WRITEMSGE,CPC$DEQUEUE
      249       16               INPUT:  B$JIT.ACCN - users account
      250       17                       B$JIT.UNAME - users name
      251       18               WR_DCB# - dcb to utilize for writing
      252       19               OUTPUT: updated :USERS record
      253       20               DESCRIPTION: The key to write the record is created  from
      254       21                       the users' name and account in the JIT and is of the form
      255       22                       count-account-name. The dcb through which the write
      256       23                       is to occur is expected to be open. The record
      257       24                       is written from the specified output buffer. It is
      258       25                       assumed the record is queued and dequeueing
      259       26                       is performed.
      260       27        */
      261       28        /***********************************************************************/
      262       29        CPC$WRUSERS: PROC(WR_DCB#) ALTRET;

     29  2 000000   000000 700200 xent  CPC$WRUSERS  TSX0  ! X66_AUTO_1
         2 000001   000104 000001                    ZERO    68,1

      263       30                   %INCLUDE B$JIT;
      264      320                   %INCLUDE CP_6;
      265      401                   %INCLUDE CP_MACROS_C;
PL6.E3A0      #002=CPC$WRUSERS File=CPC$SUBR2.:E05TSI                            TUE 07/29/97 11:28 Page:53   
      266     1153                   %INCLUDE XU_MACRO_C;
      267     4259                   %INCLUDE CP_DATA_R;
      268     6822                   %INCLUDE B_MACROS_C;
      269     6933                   %INCLUDE CP_SUBS_C;
      270     7850                   %INCLUDE CP_PERR_C;
      271     8188                   %INCLUDE CP_6_SUBS;
      272     8728                   %INCLUDE AS_SUPER_C;
      273     9163                   %INCLUDE KL_SUPER_C;
      274    12065    1   DCL UNAME_SIZE UBIN(36) ALIGNED;        /*#CHARS in name*/
      275    12066    1   DCL 1 USERS_KEY ALIGNED,                /*Key for reading :USERS*/
      276    12067    1          2 CNT UBIN(9) UNAL,
      277    12068    1          2 TXT CHAR(20);
      278    12069        /***** parameters *****/
      279    12070    1   DCL WR_DCB# UBIN WORD;
      280    12071        /***** external routines *****/
      281    12072    1   DCL CPC$WRITEMSGE ENTRY(6);
      282    12073    1   DCL CPC$DEQUEUE ENTRY(2) ALTRET;        /*Dequeue :USERS*/
      283    12074        /***** fpts *****/
      284    12075        %SEG$2(NAME=SEG$2);
      285    12135        %FPT_CLOSE(FPTN=FPT_CLOSE,STCLASS=AUTO);
      286    12177        %FPT_WRITE(FPTN=FPT_WRITE,STCLASS=AUTO);
      287    12208        %AS_USERS(STR_NAME=AS$USERS,STCLASS=BASED);
      288    12386        %KL_DREC(NAME=KL$DREC,STCLASS=BASED,LAST=",");
      289    12499        %KL_FEBLK(NAME=KL$FEBLK,RCNT=31,LVL=2) ;
      290    12548        /***** error codes *****/
      291    12549        %ERR_CODE (NAME=E_CANTWR,MID#=CPC$SUBRMID,CODE#=E$CANTWR,STCLASS=CONSTANT);
      292    12569    1     CALL WRITE_FILE (VECTOR(SEG$2.USERS$->AS$USERS),'1'B) ALTRET(E_WRITE_FILE);

  12569  2 000002   000000 470400 xsym               LDP0    SEG2$
         2 000003   000152 471500                    LDP1    106,,PR0
         2 000004   000000 235000 3                  LDA     0
         2 000005   200072 451500                    STP1    @USERS_FLG+2,,AUTO
         2 000006   200072 236100                    LDQ     @USERS_FLG+2,,AUTO
         2 000007   200100 757100                    STAQ    @USERS_FLG+8,,AUTO
         2 000010   000001 236000 3                  LDQ     1
         2 000011   200070 756100                    STQ     @BUF_+1,,AUTO
         2 000012   200100 633500                    EPPR3   @USERS_FLG+8,,AUTO
PL6.E3A0      #002=CPC$WRUSERS File=CPC$SUBR2.:E05TSI                            TUE 07/29/97 11:28 Page:54   
         2 000013   200067 453500                    STP3    FPT_WRITE+13,,AUTO
         2 000014   000037 701000 2                  TSX1    WRITE_FILE
         2 000015   000036 702000 2                  TSX2    E_WRITE_FILE

      293    12570    1     RETURN;

  12570  2 000016   000000 702200 xent               TSX2  ! X66_ARET

      294    12571        %EJECT;
PL6.E3A0      #002=CPC$WRUSERS File=CPC$SUBR2.:E05TSI                            TUE 07/29/97 11:28 Page:55   
      295    12572        /**********************************************************************/
      296    12573        /*F*   NAME:   CPC$WRHLP
      297    12574               PURPOSE: Write the :HLP record for the current user
      298    12575               DESCRIPTION: The users' name and account specified in the JIT
      299    12576                       is used as a key to write out the specified record from
      300    12577                       a specified buffer.
      301    12578        */
      302    12579        /*D*   NAME:   CPC$WRHLP
      303    12580               CALL:   CALL CPC$WRHLP(WR_DCB#)
      304    12581               INTERFACE: CPC$WRITEMSGE,CPC$DEQUEUE
      305    12582               INPUT:  B$JIT.ACCN - users account
      306    12583                       B$JIT.UNAME - users name
      307    12584               WR_DCB# - dcb to utilize for writing
      308    12585               OUTPUT: updated :HLP record
      309    12586               DESCRIPTION: The key to write the record is created  from
      310    12587                       the users' name and account in the JIT and is of the form
      311    12588                       count-account-name. The dcb through which the write
      312    12589                       is to occur is expected to be open. The record
      313    12590                       is written from the specified output buffer. It is
      314    12591                       assumed the record is queued and dequeueing
      315    12592                       is performed.
      316    12593        */
      317    12594        /***********************************************************************/
      318    12595    1   CPC$WRHLP: ENTRY(WR_DCB#) ALTRET;

  12595  2 000017   000000 700200 xent  CPC$WRHLP    TSX0  ! X66_AUTO_1
         2 000020   000104 000001                    ZERO    68,1

      319    12596    1     CALL WRITE_FILE (VECTOR(SEG$2.HLP$->KL$DREC),'0'B) ALTRET(E_WRITE_FILE);

  12596  2 000021   000000 470400 xsym               LDP0    SEG2$
         2 000022   000153 471500                    LDP1    107,,PR0
         2 000023   000002 235000 3                  LDA     2
         2 000024   200072 451500                    STP1    @USERS_FLG+2,,AUTO
         2 000025   200072 236100                    LDQ     @USERS_FLG+2,,AUTO
         2 000026   200102 757100                    STAQ    @USERS_FLG+10,,AUTO
         2 000027   000003 236000 3                  LDQ     3
PL6.E3A0      #002=CPC$WRUSERS File=CPC$SUBR2.:E05TSI                            TUE 07/29/97 11:28 Page:56   
         2 000030   200070 756100                    STQ     @BUF_+1,,AUTO
         2 000031   200102 633500                    EPPR3   @USERS_FLG+10,,AUTO
         2 000032   200067 453500                    STP3    FPT_WRITE+13,,AUTO
         2 000033   000037 701000 2                  TSX1    WRITE_FILE
         2 000034   000036 702000 2                  TSX2    E_WRITE_FILE

      320    12597    1     RETURN;

  12597  2 000035   000000 702200 xent               TSX2  ! X66_ARET

      321    12598    1   E_WRITE_FILE:
      322    12599    1     ALTRETURN;

  12599  2 000036   000000 702200 xent  E_WRITE_FILE TSX2  ! X66_AALT

      323    12600        %EJECT;
PL6.E3A0      #002=CPC$WRUSERS File=CPC$SUBR2.:E05TSI                            TUE 07/29/97 11:28 Page:57   
      324    12601    1   WRITE_FILE: PROC (BUF_, USERS_FLG) ALTRET;

  12601  2 000037   200066 741300       WRITE_FILE   STX1  ! FPT_WRITE+12,,AUTO

      325    12602        /**/
      326    12603    2   DCL BUF_ BIT(72) DALIGNED;
      327    12604    2   DCL USERS_FLG BIT(1)  ALIGNED;
      328    12605        /*
      329    12606             ***** Create key for writing record
      330    12607        */
      331    12608    2     CALL INDEX(UNAME_SIZE,' ',B$JIT.UNAME);

  12608  2 000040   000000 470400 xsym               LDP0    B$JIT$
         2 000041   000000 124500                    SCM     mask='000'O
         2 000042   000003 000014                    ADSC9   3,,PR0                   cn=0,n=12
         2 000043   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         2 000044   200004 000100                    ARG     UNAME_SIZE,,AUTO

      332    12609        /*
      333    12610             ***** Store size,accn,uname into key
      334    12611        */
      335    12612    2     USERS_KEY.CNT=(SIZEC(B$JIT.ACCN)+UNAME_SIZE);

  12612  2 000045   200004 236100                    LDQ     UNAME_SIZE,,AUTO
         2 000046   000010 036007                    ADLQ    8,DL
         2 000047   000033 736000                    QLS     27
         2 000050   200005 552140                    STBQ    USERS_KEY,'40'O,AUTO

      336    12613    2     CALL INSERT(USERS_KEY.TXT,0,USERS_KEY.CNT,B$JIT.ACCN,B$JIT.UNAME);

  12613  2 000051   200005 236100                    LDQ     USERS_KEY,,AUTO
         2 000052   000033 772000                    QRL     27
         2 000053   000000 620006                    EAX0    0,QL
         2 000054   040140 100500                    MLR     fill='040'O
         2 000055   000001 000010                    ADSC9   1,,PR0                   cn=0,n=8
         2 000056   200005 200010                    ADSC9   USERS_KEY,,AUTO          cn=1,n=*X0
         2 000057   000011 116007                    CMPQ    9,DL
PL6.E3A0      #002=CPC$WRUSERS File=CPC$SUBR2.:E05TSI                            TUE 07/29/97 11:28 Page:58   
         2 000060   000065 602000 2                  TNC     s:12617
         2 000061   777770 620006                    EAX0    -8,QL
         2 000062   040140 100500                    MLR     fill='040'O
         2 000063   000003 000014                    ADSC9   3,,PR0                   cn=0,n=12
         2 000064   200007 200010                    ADSC9   USERS_KEY+2,,AUTO        cn=1,n=*X0

      337    12614        /*
      338    12615             ***** Init. Write fpt
      339    12616        */
      340    12617    2     FPT_WRITE=CFPT_WRITE;

  12617  2 000065   000100 100400                    MLR     fill='000'O
         2 000066   000000 000060 xsym               ADSC9   CFPT_WRITE               cn=0,n=48
         2 000067   200052 000060                    ADSC9   FPT_WRITE,,AUTO          cn=0,n=48

      341    12618    2     FPT_WRITE.V_=VECTOR(FPT_WRITE.V);

  12618  2 000070   000004 235000 3                  LDA     4
         2 000071   200072 452500                    STP2    @USERS_FLG+2,,AUTO
         2 000072   200072 236100                    LDQ     @USERS_FLG+2,,AUTO
         2 000073   000062 036003                    ADLQ    50,DU
         2 000074   200052 757100                    STAQ    FPT_WRITE,,AUTO

      342    12619    2     FPT_WRITE.V.DCB#=WR_DCB#;

  12619  2 000075   200003 471500                    LDP1    @WR_DCB#,,AUTO
         2 000076   100000 720100                    LXL0    0,,PR1
         2 000077   200062 740100                    STX0    FPT_WRITE+8,,AUTO

      343    12620    2     FPT_WRITE.BUF_=BUF_;

  12620  2 000100   200067 473500                    LDP3    @BUF_,,AUTO
         2 000101   300000 237100                    LDAQ    0,,PR3
         2 000102   200056 757100                    STAQ    FPT_WRITE+4,,AUTO

      344    12621    2     IF USERS_FLG

PL6.E3A0      #002=CPC$WRUSERS File=CPC$SUBR2.:E05TSI                            TUE 07/29/97 11:28 Page:59   
  12621  2 000103   200070 474500                    LDP4    @USERS_FLG,,AUTO
         2 000104   400000 234100                    SZN     0,,PR4
         2 000105   000117 605000 2                  TPL     s:12625

      345    12622    2       THEN
      346    12623    2         FPT_WRITE.BUF_.BOUND = SEG$2.USERS_SZ - 1 ;

  12623  2 000106   000000 475400 xsym               LDP5    SEG2$
         2 000107   500001 236100                    LDQ     1,,PR5
         2 000110   777777 376007                    ANQ     -1,DL
         2 000111   000001 136007                    SBLQ    1,DL
         2 000112   000020 736000                    QLS     16
         2 000113   200056 676100                    ERQ     FPT_WRITE+4,,AUTO
         2 000114   000034 376000 xsym               ANQ     B_VECTNIL+28
         2 000115   200056 656100                    ERSQ    FPT_WRITE+4,,AUTO
         2 000116   000127 710000 2                  TRA     s:12626

      347    12624    2       ELSE
      348    12625    2         FPT_WRITE.BUF_.BOUND = SEG$2.HLP_SZ - 1 ;

  12625  2 000117   000000 475400 xsym               LDP5    SEG2$
         2 000120   500002 236100                    LDQ     2,,PR5
         2 000121   000022 772000                    QRL     18
         2 000122   000001 136007                    SBLQ    1,DL
         2 000123   000020 736000                    QLS     16
         2 000124   200056 676100                    ERQ     FPT_WRITE+4,,AUTO
         2 000125   000034 376000 xsym               ANQ     B_VECTNIL+28
         2 000126   200056 656100                    ERSQ    FPT_WRITE+4,,AUTO

      349    12626    2     FPT_WRITE.KEY_=VECTOR(USERS_KEY);

  12626  2 000127   000005 235000 3                  LDA     5
         2 000130   200072 452500                    STP2    @USERS_FLG+2,,AUTO
         2 000131   200072 236100                    LDQ     @USERS_FLG+2,,AUTO
         2 000132   000005 036003                    ADLQ    5,DU
         2 000133   200054 757100                    STAQ    FPT_WRITE+2,,AUTO

PL6.E3A0      #002=CPC$WRUSERS File=CPC$SUBR2.:E05TSI                            TUE 07/29/97 11:28 Page:60   
      350    12627        /*
      351    12628             ***** Write out record
      352    12629        */
      353    12630    2     CALL M$WRITE(FPT_WRITE) ALTRET(E_WRITE);

  12630  2 000134   200052 630500                    EPPR0   FPT_WRITE,,AUTO
         2 000135   440001 713400                    CLIMB   alt,write
         2 000136   401400 401760                    pmme    nvectors=4
         2 000137   000152 702000 2                  TSX2    E_WRITE

      354    12631        /*
      355    12632             ***** Dequeue record
      356    12633        */
      357    12634    2     CALL CPC$DEQUEUE(WR_DCB#,USERS_KEY) ALTRET(E_DEQUEUE);

  12634  2 000140   200005 630500                    EPPR0   USERS_KEY,,AUTO
         2 000141   200073 450500                    STP0    @USERS_FLG+3,,AUTO
         2 000142   200003 236100                    LDQ     @WR_DCB#,,AUTO
         2 000143   200072 756100                    STQ     @USERS_FLG+2,,AUTO
         2 000144   200072 630500                    EPPR0   @USERS_FLG+2,,AUTO
         2 000145   000020 631400 xsym               EPPR1   B_VECTNIL+16
         2 000146   000000 701000 xent               TSX1    CPC$DEQUEUE
         2 000147   000167 702000 2                  TSX2    E_DEQUEUE

      358    12635    2     RETURN;

  12635  2 000150   200066 221300                    LDX1  ! FPT_WRITE+12,,AUTO
         2 000151   000001 702211                    TSX2  ! 1,X1

      359    12636    2   E_WRITE:
      360    12637        /*E*       ERROR: CPC-E$CANTWR-E
      361    12638                   MESSAGE: Error writing %FN record
      362    12639                   DESCRIPTION: IBEX was unable to create the specified record
      363    12640                          due to a write error.
      364    12641        */
      365    12642    2     CALL CPC$WRITEMSGE(E_CANTWR,WR_DCB#,,,,%YES#);

PL6.E3A0      #002=CPC$WRUSERS File=CPC$SUBR2.:E05TSI                            TUE 07/29/97 11:28 Page:61   
  12642  2 000152   000001 236000 3     E_WRITE      LDQ     1
         2 000153   000001 235000 xsym               LDA     B_VECTNIL+1
         2 000154   200076 757100                    STAQ    @USERS_FLG+6,,AUTO
         2 000155   000001 236000 xsym               LDQ     B_VECTNIL+1
         2 000156   000001 235000 xsym               LDA     B_VECTNIL+1
         2 000157   200074 757100                    STAQ    @USERS_FLG+4,,AUTO
         2 000160   200003 236100                    LDQ     @WR_DCB#,,AUTO
         2 000161   000006 235000 3                  LDA     6
         2 000162   200072 757100                    STAQ    @USERS_FLG+2,,AUTO
         2 000163   200072 630500                    EPPR0   @USERS_FLG+2,,AUTO
         2 000164   000024 631400 xsym               EPPR1   B_VECTNIL+20
         2 000165   000000 701000 xent               TSX1    CPC$WRITEMSGE
         2 000166   000000 011000                    NOP     0

      366    12643    2   E_DEQUEUE:
      367    12644    2     FPT_CLOSE = CFPT_CLOSE;

  12644  2 000167   000100 100400       E_DEQUEUE    MLR     fill='000'O
         2 000170   000000 000170 xsym               ADSC9   CFPT_CLOSE               cn=0,n=120
         2 000171   200014 000170                    ADSC9   FPT_CLOSE,,AUTO          cn=0,n=120

      368    12645    2     FPT_CLOSE.V_ = VECTOR(FPT_CLOSE.V);

  12645  2 000172   000004 235000 3                  LDA     4
         2 000173   200072 452500                    STP2    @USERS_FLG+2,,AUTO
         2 000174   200072 236100                    LDQ     @USERS_FLG+2,,AUTO
         2 000175   000046 036003                    ADLQ    38,DU
         2 000176   200014 757100                    STAQ    FPT_CLOSE,,AUTO

      369    12646    2     FPT_CLOSE.V.DCB#=WR_DCB#;

  12646  2 000177   200003 470500                    LDP0    @WR_DCB#,,AUTO
         2 000200   000000 720100                    LXL0    0,,PR0
         2 000201   200046 740100                    STX0    FPT_CLOSE+26,,AUTO

      370    12647    2     FPT_CLOSE.V.DISP#=%SAVE#;

PL6.E3A0      #002=CPC$WRUSERS File=CPC$SUBR2.:E05TSI                            TUE 07/29/97 11:28 Page:62   
  12647  2 000202   000002 236007                    LDQ     2,DL
         2 000203   200046 552104                    STBQ    FPT_CLOSE+26,'04'O,AUTO

      371    12648    2     CALL M$CLOSE(FPT_CLOSE);

  12648  2 000204   200014 630500                    EPPR0   FPT_CLOSE,,AUTO
         2 000205   050001 713400                    CLIMB   close
         2 000206   406000 401760                    pmme    nvectors=13

      372    12649    2     ALTRETURN;

  12649  2 000207   200066 221300                    LDX1  ! FPT_WRITE+12,,AUTO
         2 000210   000000 702211                    TSX2  ! 0,X1
      373    12650    2   END WRITE_FILE;
      374    12651    1   END CPC$WRUSERS;

PL6.E3A0      #002=CPC$WRUSERS File=CPC$SUBR2.:E05TSI                            TUE 07/29/97 11:28 Page:63   
--  Include file information  --

   KL_SUPER_C.:E05TOU  is referenced.
   AS_SUPER_C.:E05TOU  is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   CP_PERR_C.:E05TOU  is referenced.
   CP_SUBS_C.:E05TOU  is referenced.
   B_MACROS_C.:E05TOU  is referenced.
   CP_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
   CP_MACROS_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure CPC$WRUSERS.
PL6.E3A0      #002=CPC$WRUSERS File=CPC$SUBR2.:E05TSI                            TUE 07/29/97 11:28 Page:64   

 **** Variables and constants ****

  ****  Section 001 RoData CPC$WRUSERS

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC        r     1 E_CANTWR

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

    67-0-0/w PTR         r     1 @BUF_                     70-0-0/w PTR         r     1 @USERS_FLG
     3-0-0/w PTR         r     1 @WR_DCB#                  *0-0-0/d BIT (72)    r     1 BUF_
    14-0-0/d STRC(1080)  r     1 FPT_CLOSE                 52-0-0/d STRC(432)   r     1 FPT_WRITE
     4-0-0/w UBIN        r     1 UNAME_SIZE                *0-0-0/w BIT         r     1 USERS_FLG
     5-0-0/w STRC(189)   r     1 USERS_KEY                 *0-0-0/w UBIN        r     1 WR_DCB#

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 B$JIT$                     0-0-0/d STRC(1080)  r     1 CFPT_CLOSE
     0-0-0/d STRC(432)   r     1 CFPT_WRITE                 0-0-0/w PTR         r     1 SEG2$

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(18576) r     1 AS$USERS                   0-0-0/d STRC(8856)  r     1 B$JIT
     0-0-0/w STRC(6084)  r     1 KL$DREC                    0-0-0/w STRC(6264)  r     1 SEG$2

PL6.E3A0      #002=CPC$WRUSERS File=CPC$SUBR2.:E05TSI                            TUE 07/29/97 11:28 Page:65   

   Procedure CPC$WRUSERS requires 137 words for executable code.
   Procedure CPC$WRUSERS requires 68 words of local(AUTO) storage.

    No errors detected in file CPC$SUBR2.:E05TSI    .
PL6.E3A0      #002=CPC$WRUSERS File=CPC$SUBR2.:E05TSI                            TUE 07/29/97 11:28 Page:66   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #002=CPC$WRUSERS File=CPC$SUBR2.:E05TSI                            TUE 07/29/97 11:28 Page:67   
          MINI XREF LISTING

AS$USERS
     12221**DCL     12569--CALL
AS$USERS.BANNER_PERM
     12336**DCL     12337--REDEF
AS$USERS.BUDGET.MACCT
     12241**DCL     12245--REDEF
AS$USERS.BUDGET.MAX_PROJECTS
     12254**DCL     12257--REDEF
AS$USERS.BUDGET.PACCUM
     12237**DCL     12239--REDEF
AS$USERS.BUDGET.PMAXC
     12232**DCL     12234--REDEF
AS$USERS.SETUP_CHRA.TXT
     12352**DCL     12353--REDEF   12354--REDEF
B$JIT.ACCN
        44**DCL     12612--ASSIGN  12613>>CALLBLT
B$JIT.CPFLAGS1.SLEAZE
       138**DCL       138--REDEF
B$JIT.ERR.MID
        45**DCL        45--REDEF
B$JIT.JRESPEAK
       206**DCL       207--REDEF
B$JIT.ORIGINATOR_PORT.FROM_CR
       315**DCL       315--REDEF     316--REDEF
B$JIT.PNR
       219**DCL       219--REDEF
B$JIT.TSLINE
       313**DCL       314--REDEF
B$JIT.UNAME
        44**DCL     12608>>CALLBLT 12613>>CALLBLT
B$JIT$
      6755**DCL        39--IMP-PTR 12608>>CALLBLT 12613>>CALLBLT 12613>>CALLBLT
PL6.E3A0      #002=CPC$WRUSERS File=CPC$SUBR2.:E05TSI                            TUE 07/29/97 11:28 Page:68   
BUF_ IN PROCEDURE WRITE_FILE
     12603**DCL     12601--PROC    12620>>ASSIGN
CAMR_REC.ACSVEH_
      5794**DCL      5795--REDEF
CAMR_REC.ALTKEYS_
      5800**DCL      5801--REDEF    5801--REDEF
CAMR_REC.HDR_
      5799**DCL      5800--REDEF
CAMR_REC.TAB_
      5798**DCL      5799--REDEF
CAMR_REC.UHL_
      5792**DCL      5793--REDEF    5793--REDEF
CAMR_REC.V.FSN#
      5832**DCL      5832--REDEF    5832--REDEF
CAMR_REC.WSN_
      5798**DCL      5798--REDEF
CFPT_CLOSE
      4636**DCL     12644>>ASSIGN
CFPT_CLOSE.SN_
      4636**DCL      4636--REDEF
CFPT_CLOSE.UTL_
      4637**DCL      4637--REDEF
CFPT_CLOSE.V.EXPIRE#
      4651**DCL      4651--REDEF
CFPT_CLOSE.V.TYPE#
      4649**DCL      4649--REDEF
CFPT_CLOSE.V.XTNSIZE#
      4646**DCL      4646--REDEF    4648--REDEF
CFPT_OPEN.ACSVEH_
      4571**DCL      4572--REDEF
CFPT_OPEN.ALTKEYS_
      4577**DCL      4578--REDEF    4578--REDEF
CFPT_OPEN.HDR_
      4576**DCL      4577--REDEF
CFPT_OPEN.TAB_
      4575**DCL      4576--REDEF
PL6.E3A0      #002=CPC$WRUSERS File=CPC$SUBR2.:E05TSI                            TUE 07/29/97 11:28 Page:69   
CFPT_OPEN.UHL_
      4569**DCL      4570--REDEF    4570--REDEF
CFPT_OPEN.V.FSN#
      4609**DCL      4609--REDEF    4609--REDEF
CFPT_OPEN.WSN_
      4575**DCL      4575--REDEF
CFPT_READ.STATION_
      4675**DCL      4676--REDEF
CFPT_READ.V.DVBYTE.REREAD#
      4687**DCL      4687--REDEF
CFPT_READ.V.INDX#
      4685**DCL      4685--REDEF
CFPT_READUC.STATION_
      5045**DCL      5046--REDEF
CFPT_READUC.V.DVBYTE.REREAD#
      5057**DCL      5057--REDEF
CFPT_READUC.V.INDX#
      5055**DCL      5055--REDEF
CFPT_TRTN.V.IR#
      5281**DCL      5282--REDEF
CFPT_WRITE
      4711**DCL     12617>>ASSIGN
CFPT_WRITE.STATION_
      4713**DCL      4713--REDEF
CFPT_WRITE.V.DVBYTE.VFC#
      4720**DCL      4720--REDEF
CFPT_WRITEUC.STATION_
      5013**DCL      5013--REDEF
CFPT_WRITEUC.V.DVBYTE.VFC#
      5020**DCL      5020--REDEF
CFPT_XXX.V.STEPCC#
      5993**DCL      5993--REDEF
CGETCMD.OUT$
      6014**DCL      6020--REDEF
CPC$DEQUEUE
     12073**DCL-ENT 12634--CALL
PL6.E3A0      #002=CPC$WRUSERS File=CPC$SUBR2.:E05TSI                            TUE 07/29/97 11:28 Page:70   
CPC$WRITEMSGE
     12072**DCL-ENT 12642--CALL
CVLP_TRMCTL.BREAKCOUNT
      5605**DCL      5606--REDEF
CVLP_WINDOW.FWINDOW#
      5701**DCL      5701--REDEF    5702--REDEF
E_CANTWR
     12562**DCL     12642<>CALL
E_DEQUEUE IN PROCEDURE WRITE_FILE
     12644**LABEL   12634--CALLALT
E_WRITE IN PROCEDURE WRITE_FILE
     12642**LABEL   12630--CALLALT
E_WRITE_FILE
     12599**LABEL   12569--CALLALT 12596--CALLALT
FPT_CLOSE
     12158**DCL     12644<<ASSIGN  12648<>CALL
FPT_CLOSE.SN_
     12158**DCL     12158--REDEF
FPT_CLOSE.UTL_
     12159**DCL     12159--REDEF
FPT_CLOSE.V
     12163**DCL     12645--ASSIGN
FPT_CLOSE.V.DCB#
     12164**DCL     12646<<ASSIGN
FPT_CLOSE.V.DISP#
     12167**DCL     12647<<ASSIGN
FPT_CLOSE.V.EXPIRE#
     12173**DCL     12173--REDEF
FPT_CLOSE.V.TYPE#
     12171**DCL     12171--REDEF
FPT_CLOSE.V.XTNSIZE#
     12168**DCL     12168--REDEF   12170--REDEF
FPT_CLOSE.V_
     12158**DCL     12645<<ASSIGN
FPT_WRITE
     12194**DCL     12617<<ASSIGN  12630<>CALL
PL6.E3A0      #002=CPC$WRUSERS File=CPC$SUBR2.:E05TSI                            TUE 07/29/97 11:28 Page:71   
FPT_WRITE.BUF_
     12194**DCL     12620<<ASSIGN
FPT_WRITE.BUF_.BOUND
     12194**DCL     12623<<ASSIGN  12625<<ASSIGN
FPT_WRITE.KEY_
     12194**DCL     12626<<ASSIGN
FPT_WRITE.STATION_
     12196**DCL     12196--REDEF
FPT_WRITE.V
     12197**DCL     12618--ASSIGN
FPT_WRITE.V.DCB#
     12197**DCL     12619<<ASSIGN
FPT_WRITE.V.DVBYTE.VFC#
     12203**DCL     12203--REDEF
FPT_WRITE.V_
     12194**DCL     12618<<ASSIGN
KL$DREC
     12399**DCL     12596--CALL
KL$DREC.PASSWORD
     12457**DCL     12461--REDEF
KL$DREC.RENAME
     12480**DCL     12481--REDEF
M$CLOSE
       329**DCL-ENT 12648--CALL
M$WRITE
       330**DCL-ENT 12630--CALL
SEG$2.HLP$
     12106**DCL     12596>>CALL
SEG$2.HLP_SZ
     12099**DCL     12625>>ASSIGN
SEG$2.USERS$
     12105**DCL     12569>>CALL
SEG$2.USERS_SZ
     12098**DCL     12623>>ASSIGN
SEG2$
      6748**DCL     12076--IMP-PTR 12569>>CALL    12596>>CALL    12623>>ASSIGN  12625>>ASSIGN
PL6.E3A0      #002=CPC$WRUSERS File=CPC$SUBR2.:E05TSI                            TUE 07/29/97 11:28 Page:72   
UNAME_SIZE
     12065**DCL     12608<<CALLBLT 12612>>ASSIGN
USERS_FLG IN PROCEDURE WRITE_FILE
     12604**DCL     12601--PROC    12621>>IF
USERS_KEY
     12066**DCL     12626--ASSIGN  12634<>CALL
USERS_KEY.CNT
     12067**DCL     12612<<ASSIGN  12613>>CALLBLT
USERS_KEY.TXT
     12068**DCL     12613<<CALLBLT
WRITE_FILE
     12601**PROC    12569--CALL    12596--CALL
WR_DCB#
     12070**DCL        29--PROC    12595--ENTRY   12619>>ASSIGN  12634<>CALL    12642<>CALL    12646>>ASSIGN
