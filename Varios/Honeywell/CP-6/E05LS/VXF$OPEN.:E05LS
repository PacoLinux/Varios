VERSION E05

PL6.E3A0      #001=VXF$OPEN File=VXF$OPEN.:E05TSI                                WED 07/30/97 08:09 Page:1    
        1        1        /*M* VXF$OPEN - opens files.    */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* AIC,DMR,PLM=6,IND=4,CSU=2,EXM=0,ECU=2,MOC,DCI=4,CRT=4,CTI=8     */
        8        8        VXF$OPEN:
        9        9              PROC( CURR_P$, TYPE, MODE )     ALTRET;
       10       10        %INCLUDE VX_INC_C;
       11    10726        %INCLUDE VX_PSUBS_C;
       12    10904        %INCLUDE XU_FORMAT_C;
       13    11066        %INCLUDE XUF_ENTRY;
       14    11074        %INCLUDE B_ERRORS_C;
       15    12201        %INCLUDE CP_6_SUBS;
       16    12741        %INCLUDE B$JIT;
       17    13031        %F$DCB;
       18    13088        %LIST;
       19    13089        %SET LISTSUB='1'B;
       20    13090        %PARSE$OUT( NAME=O$B, STCLASS="BASED");
             13091        /*F*  NAME:     PARSE$OUT
             13092              FUNCTION: a structure built by X$PARSE which corresponds to a "list",
             13093                  "alternative", "reducing alternative", or "koncat" node in
             13094                  the user's parse tree.
             13095        */
             13096    1   DCL 1 O$B BASED ALIGNED,
             13097    1         2 TEMP BIT(1) UNAL,
             13098    1         2 * BIT (11) UNAL,
             13099    1         2 NDTYPE UBIN (6) UNAL,
             13100        /*K* NDTYPE - specifies the type of parse node to which this PARSE$OUT
             13101                  block corresponds.  See the XU_SUBS_C file for the
             13102                  %EQU symbols whose values may appear in this field.
             13103        */
             13104    1         2 CODE UBIN HALF HALIGNED,
             13105        /*K* CODE - Contains the numeric "node code" specified by the user when
             13106                  the corresponding parse-node was defined.
             13107        */
PL6.E3A0      #001=VXF$OPEN File=VXF$OPEN.:E05TSI                                WED 07/30/97 08:09 Page:2    
             13108    1         2 NSUBLKS UBIN HALF HALIGNED,
             13109        /*K* NSUBLKS - "number of sub-blocks".  This field contains the count of
             13110                  pointers actually available in the PARSE$OUT.SUBLK$ array.
             13111        */
             13112    1         2 SCRITCH UBIN HALF HALIGNED,
             13113        /*K* SCRITCH - an 18-bit scratch field reserved for the user.  X$PARSE
             13114                  initializes this field to zero when the PARSE$OUT structure
             13115                  is allocated, and never sets or examines it thereafter.
             13116                  The name of this field may be changed when the PARSE$OUT macro
             13117                  is invoked by the user (say "SCRITCH=yourname"), and its data
             13118                  type may also be changed (say "SCRMODE=pl6datatype" and
             13119                  "SCRALGN=alignment").  BEWARE: this field MUST be 18-bits long,
             13120                  and be UNALIGNED, CALIGNED, or HALIGNED.
             13121        */
             13122    1         2 CPOS UBIN WORD,
             13123        /*K* CPOS - "character position" of this block.  This field will contain
             13124                  a character index (starting at 0) into the original parse
             13125                  string;  the index identifies the first character of the
             13126                  string which was accepted by this node (or by any of its
             13127                  sub-nodes).
             13128        */
             13129    1         2 SUBLK$(0:0) PTR UNAL;
             13130        /*K* SUBLK$ - an array of PL-6 PTRs.  The number of elements in this array
             13131                  is found in OUT$BLK.NSUBLKS;  each PTR will point to another
             13132                  OUT$BLK structure, or to an OUT$SYM structure.
             13133        */
       21    13135        %F_FDS( NAME=F_FDS, STCLASS=STATIC, DCB=M$LO, BUF=OUT_BUF, TRUNC=NO, WRAPTAB=4);
             13136        %LSET LISTDIR='0'B;
             13149    1   DCL 1 F_FDS STATIC,
             13153    1         2 FMT_,
             13154    1           3 BOUND UBIN(20) UNAL INIT(SIZEV(NIL))/**/,
             13155    1           3 * BIT(16) UNAL INIT('77720'O)/**/,
             13156    1           3 FMT$ PTR INIT(ADDR(NIL))/**/,
             13160    1         2 FMTX SBIN INIT(0) /**/,
             13162    1         2 FMTXMAX SBIN INIT(0) /**/,
             13164    1         2 FMTSIZE SBIN INIT(0) /**/,
             13166    1         2 BUF_,
PL6.E3A0      #001=VXF$OPEN File=VXF$OPEN.:E05TSI                                WED 07/30/97 08:09 Page:3    
             13167    1           3 BOUND UBIN(20) UNAL INIT(SIZEV(OUT_BUF))/**/,
             13168    1           3 * BIT(16) UNAL INIT('77720'O)/**/,
             13169    1           3 BUF$ PTR INIT(ADDR(OUT_BUF))/**/,
             13173    1         2 BUFX SBIN INIT(1) /**/,
             13175    1         2 BUFSIZE SBIN INIT(0) /**/,
             13177    1         2 NVECS# SBIN INIT(0)/**/,
             13179    1         2 VECTR$ PTR INIT(ADDR(NIL))/**/,
             13182    1         2 DCB# SBIN HALF UNAL INIT(DCBNUM(M$LO))/**/,
             13185    1         2 DVFC# CHAR(1) INIT('A')/**/,
             13189    1         2 TRUNC# BIT(1) INIT('0'B)/**/,
             13194    1         2 DEBUG BIT(1) INIT('0'B) /**/,
             13196    1         2 BLNKBUF BIT(1) INIT('1'B) /**/,
             13198    1         2 DONT_PRINT BIT(1) INIT('0'B) /**/,
             13200    1         2 WRAP BIT(1) INIT('0'B) /**/,
             13202    1         2 *(0:3) BIT(1) INIT('0'B*0) /**/,
             13203    1         2 OUTPUT# EPTR INIT(ENTADDR(NIL))/**/,
             13208    1         2 EDIT# EPTR INIT(ENTADDR(NIL))/**/,
             13212    1         2 WRAPTAB# SBIN INIT(4)/**/,
             13215    1         2 TABDFLT# SBIN INIT(10)/**/,
             13219    1         2 RESCAN SBIN INIT(0) /**/,
             13221    1         2 BAILOUT REMEMBER ALIGNED,
             13223    1         2 FIELDX SBIN INIT(0) /**/,
             13225    1         2 FWID SBIN INIT(0) /**/,
             13227    1         2 MEMSZ SBIN INIT(0) /**/,
             13229    1         2 MEMX SBIN INIT(0) /**/,
             13231    1         2 CUR$ PTR INIT(ADDR(NIL)) /**/,
             13233    1         2 DEVICEFPT$ PTR INIT(ADDR(NIL)) /**/,
             13235    1         2 WRITEFPT$ PTR INIT(ADDR(NIL)) /**/,
             13237    1         2 GLOBAL$ PTR INIT(ADDR(NIL)) /**/,
             13244    1         2 USERDAT1# SBIN INIT(0) /**/,
             13245    1         2 USERDAT2# SBIN INIT(0) /**/,
             13246    1         2 USERDAT3# SBIN INIT(0) /**/;
       22    13248        %B$TCB;
             13249    1   DCL 1 B$TCB BASED ALIGNED,2 ALT$ PTR,2 STK$ PTR,2 TCBAVSZ UBIN(18)UNAL,2 CURRSZ UBIN
             13249            (18)UNAL,2 * BIT(36);
       23    13251        %B$ALT;
             13252        %B$FIXED(NAME=NAME,STCLASS=STCLASS);
PL6.E3A0      #001=VXF$OPEN File=VXF$OPEN.:E05TSI                                WED 07/30/97 08:09 Page:4    
             13253    1   DCL 1 B$ALT BASED ALIGNED,2 SSFRAME(0:63)UBIN,2 * UBIN(18)UNAL,2 CODE UBIN(18)UNAL,2
             13253            FPT REDEF CODE,3 FCG UBIN(6)UNAL,3 PMME UBIN
             13254    1   (12)UNAL,2 EVSC REDEF CODE UBIN(18)UNAL,2 SUBC REDEF CODE UBIN(18)UNAL,2 EVID UBIN,2
             13254            DCB# REDEF EVID UBIN,2 BRKCNT REDEF EVID UBIN,2
             13255    1   ERR,3 FCG BIT(12),3 MID BIT(6),3 MON BIT(1),3 ERR# UBIN(14)UNAL,3 CODE REDEF ERR#
             13255            UBIN(14)UNAL,3 SEV UBIN(3)UNAL ,
             13257    1   2 P# UBIN;
       24    13259        %VX$LST;
             13260        %LSET LISTDIR='0'B;

             13272    1   /*******************************************************************************
             13273    1   *                                                                              *
             13274    1   *                          VX$LST                                                 *
             13275    1   *                                                                              *
             13276    1   *******************************************************************************/

             13281    1   DCL 1 VX$LST                          ALIGNED BASED,
             13282    1         2 LINK$        PTR,               /* Link to next item                  */
             13283    1         2 TYPE         UBIN( 18) UNAL,    /* Type                               */
             13284    1         2 SUB_TYPE     UBIN( 18) UNAL,    /* Sub-type                           */
             13285    1         2 OBJECT_NAME$ PTR,               /* Pointer to object unit name        */
             13286    1         2 PRIOR$ REDEF OBJECT_NAME$ PTR,  /* Pointer to prior element in list   */
             13287    1         2 SC_HEAD$     PTR,               /* Head pointer to section link list  */
             13288    1         2 LIBSRCH$ REDEF SC_HEAD$ PTR,    /* Pointer to account list for library*/
             13289    1         2 SC_TAIL$     PTR,               /* Tail pointer to section link list  */
             13290    1         2 LIB REDEF SC_TAIL$,             /* Used only by UNSAT library files   */
             13291    1           3 USED UBIN HALF UNAL,          /* 1 => library file used, 0=>not used*/
             13292    1           3 NEEDED UBIN HALF UNAL,   /* 1 => library file needed, 0=>not needed*/
             13293    1         2 P,
             13294    1           3 NAME_       ALIGNED,
             13295    1             4 BOUND      UBIN(20)  UNAL,
             13296    1             4 FLAGSV     UBIN(11)  UNAL,
             13297    1             4 *          BIT(5)    UNAL,
             13298    1             4 NAME$      PTR,
             13299    1           3 ACCT_       ALIGNED,
             13300    1             4 BOUND      UBIN(20)  UNAL,
             13301    1             4 FLAGSV     UBIN(11)  UNAL,
PL6.E3A0      #001=VXF$OPEN File=VXF$OPEN.:E05TSI                                WED 07/30/97 08:09 Page:5    
             13302    1             4 *          BIT(5)    UNAL,
             13303    1             4 ACCT$      PTR,
             13304    1           3 PASS_       ALIGNED,
             13305    1             4 BOUND      UBIN(20)  UNAL,
             13306    1             4 FLAGSV     UBIN(11)  UNAL,
             13307    1             4 *          BIT(5)    UNAL,
             13308    1             4 PASS$      PTR,
             13309    1           3 SN_         ALIGNED,
             13310    1             4 BOUND      UBIN(20)  UNAL,
             13311    1             4 FLAGSV     UBIN(11)  UNAL,
             13312    1             4 *          BIT(5)    UNAL,
             13313    1             4 SN$        PTR,
             13314    1           3 WSN_        ALIGNED,
             13315    1             4 BOUND      UBIN(20)  UNAL,
             13316    1             4 FLAGSV     UBIN(11)  UNAL,
             13317    1             4 *          BIT(5)    UNAL,
             13318    1             4 WSN$       PTR,
             13319    1           3 B           ALIGNED,
             13320    1             4 RES        BIT(1)    UNAL,
             13321    1             4 ASN        BIT(1)    UNAL,
             13322    1             4 ACCT       BIT(1)    UNAL,
             13323    1             4 *          BIT(33)   UNAL,
             13324    1           3 RES         CHAR(4)   ALIGNED,
             13325    1           3 ASN         UBIN(36)  ALIGNED;
       25    13328        %VX$ACCT;
             13329        %LSET LISTDIR='0'B;

             13341    1   /*******************************************************************************
             13342    1   *                                                                              *
             13343    1   *                          VX$ACCT                                                 *
             13344    1   *                                                                              *
             13345    1   *******************************************************************************/

             13350    1   DCL 1 VX$ACCT ALIGNED BASED,
             13351    1         2 LINK$ PTR,
             13352    1         2 ACCT_,
             13353    1           3 * UBIN WORD,
PL6.E3A0      #001=VXF$OPEN File=VXF$OPEN.:E05TSI                                WED 07/30/97 08:09 Page:6    
             13354    1           3 ACCT$ PTR,
             13355    1         2 SN_,
             13356    1           3 * UBIN WORD,
             13357    1           3 SN$ PTR;
       26    13360        %T$C;
             13361        %LSET LISTDIR='0'B;

             13372    1   /*******************************************************************************
             13373    1   *                                                                              *
             13374    1   *                          T$C                                                 *
             13375    1   *                                                                              *
             13376    1   *******************************************************************************/

             13381    1   DCL 1 T$C           BASED     ALIGNED,  /* Text count                         */
             13382    1         2 COUNT        UBIN( 9) UNAL,
             13383    1         2 CHARS        CHAR( T$C.COUNT )   UNAL;
             13384    1   DCL 1 T$C_UNAL      BASED     UNAL,     /* Text count                         */
             13385    1         2 COUNT        UBIN( 9) UNAL,
             13386    1         2 CHARS        CHAR( T$C_UNAL.COUNT ) UNAL;
       27    13389        %VECTOR( NAME=ACCT_VECTOR, STCLASS=STATIC );
             13390        %LSET LISTDIR='0'B;

             13402    1   /*******************************************************************************
             13403    1   *                                                                              *
             13404    1   *                          TEMPLATE FOR 2-WORD NSA VECTOR                          *
             13405    1   *                                                                              *
             13406    1   *******************************************************************************/

             13411    1   DCL 1 ACCT_VECTOR STATIC ALIGNED,
             13412    1         2 VSIZE UBIN(20) UNAL,      /* Size field of vector               */
             13413    1         2 FLAGS BIT(9) UNAL,        /* FLAGS...                           */
             13414    1         2 V BIT(2) UNAL,            /* Vector type field                  */
             13415    1         2 Z5 BIT(5) UNAL,           /* Unused                             */
             13416    1         2 F,
             13417    1           3 BASE UBIN(20) UNAL,     /* Base for vector                    */
             13418    1           3 Z4 BIT(4) UNAL,         /* Unused                             */
             13419    1           3 SEGID UBIN(12) UNAL,    /* Segid                              */
PL6.E3A0      #001=VXF$OPEN File=VXF$OPEN.:E05TSI                                WED 07/30/97 08:09 Page:7    
             13420    1         2 P       REDEF     F,            /* To extract the pointer             */
             13421    1           3 POINTER          PTR UNAL;
       28    13424        %LIST;
       29    13425        %FILE;
             13426    1   DCL 1 F$NAME_                 BASED,
             13427    1         2 COUNT             UBIN( 9) UNAL,
             13428    1         2 CHARS             CHAR( F$NAME_.COUNT ) UNAL;
             13429    1   DCL F$ACCT_         CHAR(8/*@F_ACCT_SIZEC*/) BASED;
             13430    1   DCL F$ACCT_A(0:7/*@F_ACCT_SIZEC1*/)     CHAR(1)   BASED;
             13431    1   DCL F$PASS_         CHAR(8/*@F_PASS_SIZEC*/) BASED;
             13432    1   DCL F$PASS_A(0:7/*@F_PASS_SIZEC1*/)     CHAR(1)   BASED;
       30    13434        %BANNER(ARG=DCBS);
             13435        %LSET LISTDIR='0'B;

             13442    1   /*******************************************************************************
             13443    1   *                                                                              *
             13444    1   *                          DCBS                                                 *
             13445    1   *                                                                              *
             13446    1   *******************************************************************************/

       31    13450    1   DCL M$OF             DCB;
       32    13451    1   DCL M$RF             DCB;
       33    13452    1   DCL M$SI             DCB;
       34    13453    1   DCL M$LO             DCB;
       35    13454    1   DCL M$DO             DCB;
       36    13455    1   DCL M$EI             DCB;
       37    13456        %BANNER(ARG=FPTS);
             13457        %LSET LISTDIR='0'B;

             13464    1   /*******************************************************************************
             13465    1   *                                                                              *
             13466    1   *                          FPTS                                                 *
             13467    1   *                                                                              *
             13468    1   *******************************************************************************/

       38    13472        %FPT_OPEN( FPTN=VX_LO_FPT_OPEN,
       39    13473                   DCB=M$LO,
PL6.E3A0      #001=VXF$OPEN File=VXF$OPEN.:E05TSI                                WED 07/30/97 08:09 Page:8    
       40    13474                   DISP=NAMED,
       41    13475                   FUN=CREATE,
       42    13476                   ORG=UR,
       43    13477                   ACS=SEQUEN,
       44    13478                   SCRUB = YES,
       45    13479                   REASSIGN = YES,
       46    13480                   STCLASS="STATIC SYMDEF");
             13481        %LSET LISTDIR='0'B;
             13545    1   DCL 1 VX_LO_FPT_OPEN STATIC SYMDEF,2 V_ BIT(72) INIT(VECTOR(VX_LO_FPT_OPEN.V))/**/,2
             13545            SN_ BIT(72) INIT(VECTOR(NIL))/**/,2 UHL_ BIT(72) INIT
             13546    1   (VECTOR(NIL))/**/,2 SETSTA_ REDEF UHL_ BIT(72),2 VIRTUAL_ REDEF UHL_ BIT(72),2 NAME_
             13546            BIT(72) INIT(VECTOR(NIL)
             13547    1   )/**/,2 PASS_ BIT(72) INIT(VECTOR(NIL))/**/,2 ACCESS_ BIT(72) INIT(VECTOR(NIL))/**/,
             13547            2 ACSVEH_
             13548    1   BIT(72) INIT(VECTOR(NIL))/**/,2 WINDOW_ REDEF ACSVEH_ BIT(72),2 UATTR_ BIT(72) INIT(
             13548            VECTOR(NIL))
             13549    1   /**/,2 INSTATTR_ BIT(72) INIT(VECTOR(NIL))/**/,2 PROCATTR_ BIT(72) INIT(VECTOR(NIL))
             13549            /**/,2 ACCT_
             13550    1   BIT(72) INIT(VECTOR(NIL))/**/,2 IFPARAM_ BIT(72) INIT(VECTOR(NIL))/**/,2 FPARAM_ BIT
             13550            (72) INIT(VECTOR
             13551    1   (NIL))/**/,2 WSN_ BIT(72) INIT(VECTOR(NIL))/**/,2 NODENAME_ REDEF WSN_ BIT(72),2
             13551            TAB_ BIT(72)
             13552    1   INIT(VECTOR(NIL))/**/,2 RECFIELD_ REDEF TAB_ BIT(72),2 HDR_ BIT(72) INIT(VECTOR(NIL)
             13553    1   )/**/,2 IRREC_ REDEF HDR_ BIT(72),2 FORM_ BIT(72) INIT(VECTOR(NIL))/**/,2 ALTKEYS_
             13553            BIT(72) INIT(VECTOR(
             13554    1   NIL))/**/,2 FPRG_ REDEF ALTKEYS_ BIT(72),2 IRKEYS_ REDEF ALTKEYS_ BIT(72),2 V
             13554            DALIGNED,3 DCB# UBIN(18)UNAL INIT(DCBNUM
             13555    1   (M$LO))/**/,3 INITZ,4 SCRUB# BIT(1)INIT('1'B)/**/ ,4 REASSIGN# BIT(1)INIT('1'B)/**/
             13555            ,3
             13556    1   SETDCB# BIT(1)INIT('0'B)/**/ ,3 DELETE# BIT(1)INIT('0'B)/**/ ,3 OPER,4 TEST# BIT(1)
             13556            INIT('0'B
             13557    1   )/**/ ,4 NXTA# BIT(1)INIT('0'B)/**/ ,4 NXTF# BIT(1)INIT('0'B)/**/ ,4 THISF# BIT(1)
             13557            INIT
             13558    1   ('0'B)/**/ ,4 MNTONLY# BIT(1)INIT('0'B)/**/ ,3 EXIST# UBIN(2)INIT(0)/**/ UNAL,3
             13559    1   CTG# BIT(2)INIT('01'B)/**/ ,3 SHARE# UBIN(2)INIT(0)/**/ UNAL,3 CVOL# BIT(2)INIT(
             13559            '01'B)
             13560    1   /**/ ,3 FINDPOS# BIT(1)INIT('0'B)/**/,3 SRCHCOND,4 DELF# BIT(1)INIT('0'B)/**/,4
PL6.E3A0      #001=VXF$OPEN File=VXF$OPEN.:E05TSI                                WED 07/30/97 08:09 Page:9    
             13560            NOLIST# BIT(1
             13561    1   )INIT('0'B)/**/,4 BUF# BIT(1)INIT('0'B)/**/,4 * BIT(1)INIT('0'B)/**/,4 BAD# BIT(1)
             13561            INIT
             13562    1   ('0'B)/**/,4 QS# BIT(1)INIT('0'B)/**/,4 * BIT(2)INIT('0'B)/**/,4 ARCHIVE# BIT(1)INIT
             13562            ('0'B
             13563    1   )/**/,4 ANYF# BIT(1)INIT('0'B)/**/,4 * BIT(7)INIT('0'B)/**/,4 REV# BIT(1)INIT('0'B
             13564    1   )/**/,3 FUN# UBIN(9)INIT(3)/**/ UNAL,3 ASN# UBIN(9)INIT(0)/**/ UNAL,3 UOPT#(0:8)BIT(
             13564            2
             13565    1   )INIT('01'B,'01'B,'01'B,'01'B,'01'B,'01'B,'01'B,'01'B,'01'B)/**/,3 ORG# UBIN(9)INIT(
             13565            4)/**/ UNAL,3 ACS#
             13566    1   UBIN(9)INIT(1)/**/ UNAL,3 TYPE# CHAR(2)INIT(BINASC(0))/**/ ,3 COMP# BIT(2)INIT('01'B
             13566            )/**/,3
             13567    1   BLOCKED# BIT(2)INIT('01'B)/**/,3 SPANNED# BIT(2)INIT('01'B)/**/,3 BUPM# BIT(2)INIT(
             13567            '01'B)
             13568    1   /**/,3 LOAD# BIT(2)INIT('01'B)/**/,3 LSTAOR# BIT(2)INIT('01'B)/**/,3 JRNLBYPASS# BIT
             13568            (2)INIT
             13569    1   ('01'B)/**/,3 GHSTACS# UBIN(4)INIT(0)/**/ UNAL,3 RES# CHAR(4)INIT(BINASC(0))/**/ ,3
             13570    1   KEYX# UBIN(18)INIT(0)/**/ UNAL,3 KEYL# UBIN(9)INIT(0)/**/ UNAL,3 DISP# UBIN(9)INIT(2
             13570            )
             13571    1   /**/ UNAL,3 BLKL# UBIN(18)INIT(0)/**/ UNAL,3 RECL# UBIN(18)INIT(262143)/**/ UNAL,3
             13571            LSLIDE# UBIN(18
             13572    1   )INIT(0)/**/ UNAL,3 LRDL0# UBIN(18)INIT(0)/**/ UNAL,3 SPARE# UBIN(18)INIT(0)
             13573    1   /**/ UNAL,3 XTNSIZE# UBIN(18)INIT(0)/**/ UNAL,3 IXTNSIZE# SBIN INIT(0)/**/,3 NRECS#
             13574    1   SBIN INIT(0)/**/,3 EXPIRE# SBIN INIT(0)/**/,3 EBCDIC# BIT(2)INIT('01'B)/**/ ,3
             13575    1   CNVRT# BIT(2)INIT('01'B)/**/ ,3 XTEND# BIT(2)INIT('01'B)/**/ ,3 XONLY# BIT(1)INIT(
             13575            '0'B)
             13576    1   /**/,3 IOERROK# BIT(2)INIT('01'B)/**/,3 * UBIN(9)UNAL INIT(0)/**/,3 DCBCONLGL# BIT(1
             13576            )INIT
             13577    1   ('1'B)/**/,3 TERMCONLGL# BIT(1)INIT('1'B)/**/,3 OVERFDE# BIT(1)INIT('0'B)
             13578    1   /**/,3 IGNOREFSN# BIT(2)INIT('01'B)/**/,3 SEEDSPECIFIED# BIT(1)INIT('0'B)/**/,3
             13579    1   ANSISPANSEQ# BIT(2)INIT('01'B)/**/,3 * UBIN(10)UNAL INIT(0)/**/,3 VOL# UBIN(9)INIT(0
             13579            )
             13580    1   /**/ UNAL,3 MAXVOL# UBIN(9)INIT(0)/**/ UNAL,3 CHAIN# UBIN(9)INIT(0)/**/ UNAL,3
             13580            KEYTYPE#
             13581    1   UBIN(9)UNAL INIT(0)/**/,3 ATTR# BIT(18)INIT('0'B)/**/,3 DVFC# CHAR(1)INIT(BINASC(0))
             13581            /**/,
             13582    1   3 * UBIN(9)UNAL INIT(0)/**/,3 SEQCOL# UBIN(9)UNAL INIT(73)/**/,3 SEQ# BIT(2)INIT(
PL6.E3A0      #001=VXF$OPEN File=VXF$OPEN.:E05TSI                                WED 07/30/97 08:09 Page:10   
             13582            '01'B)
             13583    1   /**/,3 AU# BIT(2)INIT('01'B)/**/,3 QISS# BIT(2)INIT('01'B)/**/,3 VOLACCESS# UBIN(3)
             13583            UNAL INIT(0
             13584    1   )/**/,3 LINES# UBIN(18)UNAL INIT(0)/**/,3 SEQID# CHAR(4)INIT(' ')/**/,3 EVENT# SBIN
             13585    1   UNAL INIT(0)/**/,3 FSN# UBIN(18)UNAL INIT(0)/**/,3 DBGDCBNO# REDEF FSN# UBIN(18)UNAL
             13585            ,3 DBGSYSID#
             13586    1   REDEF FSN# UBIN(18)UNAL,3 COPIES# UBIN(9)UNAL INIT(0)/**/,3 DENSITY# UBIN(9)UNAL
             13586            INIT(0)/**/,
             13587    1   3 SEED# BIT(36)INIT('0'B)/**/,3 * BIT(36)INIT('0'B)/**/;
       47    13589        %PLIST;
       48    13590        %FPT_OPEN( FPTN=VX_DO_FPT_OPEN,
       49    13591                   DCB=M$DO,
       50    13592                   FUN=CREATE,
       51    13593                   ORG=UR,
       52    13594                   STCLASS="STATIC SYMDEF");
       53    13703        %FPT_OPEN( FPTN=VX_EI_FPT_OPEN,
       54    13704                   DCB=M$EI,
       55    13705                   ASN=FILE,
       56    13706                   ORG=KEYED,
       57    13707                   ACS=SEQUEN,
       58    13708                   FUN=IN,
       59    13709                   SCRUB=YES,
       60    13710                   STCLASS="CONSTANT SYMDEF");
       61    13819        %FPT_OPEN( FPTN=VX_OF_FPT_OPEN,
       62    13820                   DCB=M$OF,
       63    13821                   ASN=FILE,
       64    13822                   ORG=KEYED,
       65    13823                   ACS=DIRECT,
       66    13824                   FUN=IN,
       67    13825                   SCRUB=YES,
       68    13826                   STCLASS="CONSTANT SYMDEF");
       69    13935        %FPT_OPEN( FPTN=VX_RF_FPT_OPEN,
       70    13936                   DCB=M$RF,
       71    13937                   ASN=FILE,
       72    13938                   ORG=KEYED,
       73    13939                   ACS=DIRECT,
       74    13940                   FUN=CREATE,
PL6.E3A0      #001=VXF$OPEN File=VXF$OPEN.:E05TSI                                WED 07/30/97 08:09 Page:11   
       75    13941                   DISP=NAMED,
       76    13942                   IXTNSIZE=10,
       77    13943                   XTNSIZE=10,
       78    13944                   SPARE=50,
       79    13945                   STCLASS="CONSTANT SYMDEF");
       80    14054        %FPT_OPEN( FPTN=F_O, STCLASS=STATIC );
       81    14163        %FPT_PRECORD( DCB=M$OF, KEY=LEMUR_KEY, KEYS=YES );
       82    14184        %FPT_CORRES( FPTN=FPT_CORRES,  DCB1=M$LO,  DCB2=M$DO );
       83    14198        %FPT_ERRMSG( FPTN=VX_FPT_ERRMSG_AUX, STCLASS="SYMREF");
       84    14225        %FPT_WAIT(
       85    14226                   FPTN=FPT_WAIT,
       86    14227                   STCLASS=CONSTANT,
       87    14228                   UNITS=60);
       88    14242        %FPT_UNFID( FPTN=UNFID_DCB,
       89    14243                    LEN=FILE_NAME_SIZE,
       90    14244                    TEXTFID=FILE_NAME );
       91    14262        %FPT_SINPUT( FPTN=SINPUT_BADFID,
       92    14263                     BUF=FILE_NAME,
       93    14264                     DCB=M$UC,
       94    14265                     POSITION=NO );
       95    14302        %E;

             14310    1   /*******************************************************************************
             14311    1   *                                                                              *
             14312    1   *                          ENTRY                                                 *
             14313    1   *                                                                              *
             14314    1   *******************************************************************************/

       96    14318        %LIST;
       97    14319        %ENTRIES;
             14320    1   DCL VXE$ERROR       ENTRY(4);
             14321    1   DCL VXE$ERR         ENTRY(3);
             14322    1   DCL VXE$MERC        ENTRY;
             14323    1   DCL VXE$ERRMSG      ENTRY(3);
             14324    1   DCL VXR$READ        ENTRY( 3 );
             14325    1   DCL VXW$WRITE       ENTRY( 3 );
             14326    1   DCL VXW$WRITE_DO    ENTRY( 2 );
PL6.E3A0      #001=VXF$OPEN File=VXF$OPEN.:E05TSI                                WED 07/30/97 08:09 Page:12   
             14327    1   DCL VXD$B2C         ENTRY( 5 );
             14328    1   DCL VXD$C2B         ENTRY( 3 );
             14329    1   DCL VXA$GET         ENTRY( 3 );
             14330    1   DCL VXF$FREE        ENTRY( 3 );
             14331    1   DCL VXQ$SORT        ENTRY( 7 );
             14332    1   DCL VXY$YESNO       ENTRY( 1 );
       98    14334    1   DCL VXF$CLOSE       ENTRY(3);
       99    14335    1   DCL VXP$PAR              ENTRY(5)  ALTRET;
      100    14336    1   DCL VXS$LST              ENTRY(6)  ALTRET;
      101    14337        %U;
             14338        %LSET LISTDIR='0'B;

             14345    1   /*******************************************************************************
             14346    1   *                                                                              *
             14347    1   *                          UBIN                                                 *
             14348    1   *                                                                              *
             14349    1   *******************************************************************************/

      102    14353        %INDEX;
             14354    1   DCL I          UBIN(36) ALIGNED AUTO;
             14355    1   DCL SI REDEF I SBIN WORD ALIGNED;
             14356    1   DCL J          UBIN(36) ALIGNED AUTO;
             14357    1   DCL SJ REDEF J SBIN WORD ALIGNED;
             14358    1   DCL K          UBIN(36) ALIGNED AUTO;
             14359    1   DCL SK REDEF K SBIN WORD ALIGNED;
             14360    1   DCL L          UBIN(36) ALIGNED AUTO;
             14361    1   DCL SL REDEF L    SBIN WORD ALIGNED;
      103    14363    1   DCL ANSWER               UBIN(36)  ALIGNED   AUTO;
      104    14364    1   DCL ERR             UBIN(36)  ALIGNED   AUTO;
      105    14365    1   DCL NCHARS          UBIN(36)  ALIGNED   AUTO;
      106    14366    1   DCL WKSZ            UBIN(36)  ALIGNED   AUTO;
      107    14367    1   DCL FILE_NAME_SIZE  UBIN(36)  ALIGNED   STATIC;
      108    14368        %P;
             14369        %LSET LISTDIR='0'B;

             14376    1   /*******************************************************************************
             14377    1   *                                                                              *
PL6.E3A0      #001=VXF$OPEN File=VXF$OPEN.:E05TSI                                WED 07/30/97 08:09 Page:13   
             14378    1   *                          PARAMETERS                                              *
             14379    1   *                                                                              *
             14380    1   *******************************************************************************/

      109    14384    1   DCL CURR_P$         PTR;
      110    14385    1   DCL TYPE            UBIN(36);
      111    14386    1   DCL MODE            UBIN(36);
      112    14387        %PTR;
             14388        %LSET LISTDIR='0'B;

             14395    1   /*******************************************************************************
             14396    1   *                                                                              *
             14397    1   *                          PTR                                                 *
             14398    1   *                                                                              *
             14399    1   *******************************************************************************/

      113    14403    1   DCL TEXT$           PTR  ALIGNED   AUTO;
      114    14404    1   DCL WORK$           PTR  ALIGNED   AUTO;
      115    14405    1   DCL WHERE$          PTR  ALIGNED   AUTO;
      116    14406    1   DCL ECURR$          PTR  ALIGNED   AUTO;
      117    14407    1   DCL SRCH$           PTR  ALIGNED   AUTO;
      118    14408    1   DCL NAME$           PTR  ALIGNED   AUTO;
      119    14409    1   DCL CURR$           PTR       ALIGNED   AUTO;
      120    14410    1   DCL DCB$            PTR  ALIGNED   AUTO;
      121    14411    1   DCL ALL$            PTR       ALIGNED   AUTO;
      122    14412        %C;
             14413        %LSET LISTDIR='0'B;

             14420    1   /*******************************************************************************
             14421    1   *                                                                              *
             14422    1   *                          CHAR                                                 *
             14423    1   *                                                                              *
             14424    1   *******************************************************************************/

      123    14428    1   DCL ENTER_FILE_NAME CHAR(0) CONSTANT INIT(
             14428            'Enter correct file name.  ESC-D recalls bad file name.');
      124    14429    1   DCL FILE_NAME CHAR(40) STATIC;
PL6.E3A0      #001=VXF$OPEN File=VXF$OPEN.:E05TSI                                WED 07/30/97 08:09 Page:14   
      125    14430    1   DCL OUT_BUF CHAR (80) STATIC INIT (' ');
      126    14431    1   DCL LIST_SRCH_ACCTS CHAR (0) CONSTANT INIT ('*  Object unit file %>A.%>A used.');
      127    14432    1   DCL SHARED CHAR (7) CONSTANT INIT (':SHARED');
      128    14433    1   DCL SYS    CHAR (4) CONSTANT INIT (':SYS');
      129    14434    1   DCL B_PATCH CHAR (27) CONSTANT INIT ('********************B_PATCH');
      130    14435    1   DCL 1 LEMUR_KEY CONSTANT,
      131    14436    1         2 COUNT UBIN BYTE UNAL INIT(2),
      132    14437    1         2 TEXT CHAR(2) INIT('!"');
      133    14438        /**/
      134    14439        /**/
      135    14440        /**/
      136    14441        /**/
      137    14442    1   DCL VX_N_START_FID       UBIN(36)  ALIGNED   SYMREF;
      138    14443        %SET LISTEXP='0'B;
      139    14444        %SET LISTSUB='0'B;
      140    14445        %SET LISTMAC='0'B;
      141    14446        %EJECT;
PL6.E3A0      #001=VXF$OPEN File=VXF$OPEN.:E05TSI                                WED 07/30/97 08:09 Page:15   
      142    14447        %BANNER(ARG=VXF$OPEN entry);

             14455    1   /*******************************************************************************
             14456    1   *                                                                              *
             14457    1   *                          VXF$OPEN entry                                          *
             14458    1   *                                                                              *
             14459    1   *******************************************************************************/

      143    14463    1         CURR$ = CURR_P$;
      144    14464    1         SRCH$ = ADDR(NIL);
      145    14465    1         VX_LIBSRCH$ = ADDR(NIL);
      146    14466    2         DO CASE(TYPE);
      147    14467    2           CASE( @OF );
      148    14468    2             F_O.V = VX_OF_FPT_OPEN.V;
      149    14469    2             IF NOT CURR$ -> VX$LST.P.B.ACCT THEN SRCH$ = VX_O.ACCTN$.SRCH$;
      150    14470    2           CASE(  @RF );
      151    14471    2             F_O.V = VX_RF_FPT_OPEN.V;
      152    14472    2             F_O.V.FUN# = MODE;
      153    14473    2             IF VX_OD.NUM_A (10 /* IXTNSIZE */ ) THEN
      154    14474    2                 F_O.V.IXTNSIZE# = VX_O.NUM.IXTNSIZE;
      155    14475    2             IF VX_OD.NUM_A (11 /* XTNSIZE  */ ) THEN
      156    14476    2                 F_O.V.XTNSIZE# = VX_O.NUM.XTNSIZE;
      157    14477    2           CASE( @LF );
      158    14478    2             F_O.V = VX_OF_FPT_OPEN.V;
      159    14479    2             VX_LIBSRCH$ = CURR$ -> VX$LST.LIBSRCH$;
      160    14480    2           CASE( @SF );
      161    14481    2             F_O.V = VX_EI_FPT_OPEN.V;
      162    14482    2             IF NOT CURR$ -> VX$LST.P.B.ACCT THEN SRCH$ = VX_O.ACCTN$.SRCH$;
      163    14483    2           CASE(ELSE);
      164    14484        /*E*  ERROR: VXF-E$INTERNAL_OPEN_TYPE_VX-0
      165    14485              MESSAGE: Internal LINK error. Bad type passed to VXF$OPEN: Type = %U1.
      166    14486              DESCRIPTION: Self-explanatory.
      167    14487        */
      168    14488                  %NUMBER( NUM1=TYPE, BASE1=10, SIZE1=12 );
      169    14505                  %SCREAM( ERR#=E$INTERNAL_OPEN_TYPE_VX, LEVEL=@E$F_VX, MID="'F'" );
      170    14508    2           END;
      171    14509
PL6.E3A0      #001=VXF$OPEN File=VXF$OPEN.:E05TSI                                WED 07/30/97 08:09 Page:16   
      172    14510
      173    14511    1   AGAIN:
      174    14512
      175    14513    1         F_O.NAME_           =    CURR$ -> VX$LST.P.NAME_;
      176    14514    1         F_O.PASS_           =    CURR$ -> VX$LST.P.PASS_;
      177    14515    1         F_O.WSN_            =    CURR$ -> VX$LST.P.WSN_;
      178    14516    1         IF CURR$ -> VX$LST.P.B.ASN THEN F_O.V.ASN# = CURR$ -> VX$LST.P.ASN;
      179    14517    1         ELSE F_O.V.ASN# = 0;
      180    14518    1         IF CURR$ -> VX$LST.P.B.RES THEN F_O.V.RES# = CURR$ -> VX$LST.P.RES;
      181    14519    1         ELSE F_O.V.RES# = BINASC(0);
      182    14520
      183    14521
      184    14522    1   TRY_AGAIN:
      185    14523
      186    14524    2         IF SRCH$ ~= ADDR(NIL) THEN DO;
      187    14525    2             F_O.ACCT_ = SRCH$ -> VX$ACCT.ACCT_;
      188    14526    2             F_O.SN_   = SRCH$ -> VX$ACCT.SN_;
      189    14527    2            END;
      190    14528    1         ELSE
      191    14529    2             IF VX_LIBSRCH$ ~= ADDR(NIL) THEN DO;
      192    14530    2                 F_O.ACCT_ = VX_LIBSRCH$ -> VX$ACCT.ACCT_;
      193    14531    2                 F_O.SN_ = VX_LIBSRCH$ -> VX$ACCT.SN_;
      194    14532    2                END;
      195    14533    2             ELSE DO;
      196    14534    2                 F_O.ACCT_ = CURR$ -> VX$LST.P.ACCT_;
      197    14535    2                 F_O.SN_ = CURR$ -> VX$LST.P.SN_;
      198    14536    2                END;
      199    14537
      200    14538
      201    14539    1   OPEN_FILE:
      202    14540
      203    14541    1         CALL M$OPEN( F_O )   ALTRET(ERROR);
      204    14542        %EJECT;
PL6.E3A0      #001=VXF$OPEN File=VXF$OPEN.:E05TSI                                WED 07/30/97 08:09 Page:17   
      205    14543        /* Do some checks */
      206    14544    2         DO CASE( TYPE );
      207    14545    2           CASE(@OF);
      208    14546    2             NAME$ = CURR$->VX$LST.P.NAME_.NAME$;
      209    14547    2             IF VX_OD.SIN.LSAU AND SRCH$ ~= ADDR(NIL) AND
      210    14548    2                     SUBSTR(NAME$->T$C.CHARS,0,7) ~= SHARED AND
      211    14549    2                     SUBSTR(NAME$->T$C.CHARS,0,4) ~= SYS AND
      212    14550    2                     SUBSTR(NAME$->T$C.CHARS,0,27) ~= B_PATCH THEN
      213    14551    2                 CALL X$WRITE (F_FDS, VECTOR(LIST_SRCH_ACCTS), F_O.NAME_, F_O.ACCT_);
      214    14552    3             IF M$OF$ -> F$DCB.ORG# ~= @KEYED THEN DO;
      215    14553        /*E*  ERROR: VXF-E$NOTKEYED_VX-0
      216    14554              MESSAGE: %FN is not a keyed file.
      217    14555              DESCRIPTION: Self-explanatory.
      218    14556        */
      219    14557    3                 VX_FPT_ERRMSG.V.DCB# = DCBNUM( M$OF );
      220    14558                      %SCREAM( ERR#=E$NOTKEYED_VX, MID="'F'" );
      221    14561    3                 CALL VXF$CLOSE( CURR$, @OF );
      222    14562    3                 GOTO TELL;
      223    14563    3                END;                       /* If DCB.ORG */
      224    14564    3             IF SRCH$ ~= ADDR(NIL) THEN DO;
      225    14565    3                 CURR$ -> VX$LST.P.ACCT_ = SRCH$ -> VX$ACCT.ACCT_;
      226    14566    3                 CURR$ -> VX$LST.P.SN_ = SRCH$ -> VX$ACCT.SN_;
      227    14567    3                 CURR$ -> VX$LST.P.B.ACCT = @TRUE_B;
      228    14568    3                END;
      229    14569
      230    14570    2           CASE(@LF);
      231    14571    2             IF M$OF$->F$DCB.ORG# = @KEYED
      232    14572    2             THEN
      233    14573    3             DO;
      234    14574    3                 IF M$OF$->F$DCB.TYPE# ~= 'LE'
      235    14575    3                 THEN GOTO NOT_LEMUR_FILE;
      236    14576    3                END;
      237    14577    3             ELSE DO;
      238    14578        /*E*  ERROR: VXF-E$NOTLIBFILE_VX-0
      239    14579              MESSAGE: %FN is not a library file.
      240    14580              DESCRIPTION: Self-explanatory.
      241    14581        */
PL6.E3A0      #001=VXF$OPEN File=VXF$OPEN.:E05TSI                                WED 07/30/97 08:09 Page:18   
      242    14582    3   NOT_LEMUR_FILE:
      243    14583    3                 IF VX_LIBSRCH$ ~= ADDR(NIL) THEN GOTO LIB_ERR;
      244    14584    3                 VX_FPT_ERRMSG.V.DCB# = DCBNUM( M$OF );
      245    14585                      %SCREAM( ERR#=E$NOTLIBFILE_VX, LEVEL=@E$W_VX, MID="'F'" );
      246    14588    3                 CALL VXF$CLOSE( CURR$, @LF );
      247    14589    3                 GOTO TELL;
      248    14590    3                END;
      249    14591    2             CURR$ -> VX$LST.LIB.USED = @YES;
      250    14592    3             IF VX_LIBSRCH$ ~= ADDR(NIL) THEN DO;
             14592                      /* Found library by searching LIBSRCH accounts */
      251    14593    4                 IF VX_LIBSRCH$ -> VX$ACCT.LINK$ ~= ADDR(NIL) THEN DO;
             14593                          /* Not last account in list */
      252    14594                                            /* Build an entry for the library file */
      253    14595                          %ALLOCATE( PTR$=ALL$, TYPE=@GDP, SIZE="SIZEW(VX$LST)" );
      254    14602    4                     ALL$ -> VX$LST = CURR$ -> VX$LST;
      255    14603    4                     ALL$ -> VX$LST.LIBSRCH$ = VX_LIBSRCH$ -> VX$ACCT.LINK$;
      256    14604    4                     ALL$ -> VX$LST.PRIOR$ = CURR$;
      257    14605    4                     IF CURR$ -> VX$LST.LINK$ ~= ADDR(NIL) THEN
      258    14606    4                         CURR$ -> VX$LST.LINK$ -> VX$LST.PRIOR$ = ALL$;
      259    14607    4                     CURR$ -> VX$LST.LINK$ = ALL$;
      260    14608    4                    END;
      261    14609    3                 ELSE                      /* Last account in list */
      262    14610    3                     CURR$ -> VX$LST.LIBSRCH$ = ADDR(NIL);
      263    14611    3                 CURR$ -> VX$LST.P.ACCT_ = VX_LIBSRCH$ -> VX$ACCT.ACCT_;
      264    14612    3                 CURR$ -> VX$LST.P.SN_ = VX_LIBSRCH$ -> VX$ACCT.SN_;
      265    14613    3                 CURR$ -> VX$LST.P.B.ACCT = @TRUE_B;
      266    14614    3                END;                   /* If VX_LIBSRCH$ ~= addr(nil) then do; */
      267    14615    2           END;                            /* Case */
      268    14616        %EJECT;
PL6.E3A0      #001=VXF$OPEN File=VXF$OPEN.:E05TSI                                WED 07/30/97 08:09 Page:19   
      269    14617    1         ACCT_VECTOR = F_O.ACCT_;
      270    14618    1         WORK$ = ACCT_VECTOR.P.POINTER;
      271    14619    1         WHERE$ = CURR$ -> VX$LST.P.NAME_.NAME$;
      272    14620    1         NCHARS = WHERE$ -> T$C.COUNT;
      273    14621    1         FILE_NAME = WHERE$ -> T$C.CHARS;
      274    14622    2         IF WORK$ ~= ADDR(NIL) THEN DO;
      275    14623    2             CALL INSERT( FILE_NAME, NCHARS, , '.', WORK$ -> F$ACCT_ );
      276    14624    2             CALL INDEX(NCHARS,' ',FILE_NAME);
      277    14625    2            END;
      278    14626    2         DO CASE( TYPE );
      279    14627    2           CASE( @OF, @LF, @SF );
      280    14628    2             VX_OK.FILE.OFNAME.COUNT = NCHARS;
      281    14629    2             VX_OK.FILE.OFNAME.CHARS = FILE_NAME;
      282    14630    2           CASE( @RF );
      283    14631    2             VX_OK.FILE.RFNAME.COUNT = NCHARS;
      284    14632    2             VX_OK.FILE.RFNAME.CHARS = FILE_NAME;
      285    14633    2           END;
      286    14634    1         RETURN;
      287    14635        %EJECT;
PL6.E3A0      #001=VXF$OPEN File=VXF$OPEN.:E05TSI                                WED 07/30/97 08:09 Page:20   
      288    14636    1   ERROR:;
      289    14637    2         IF VX_PASS > 1 THEN DO;
      290    14638    2             CALL M$MERC              ALTRET(MERC_ERROR);
      291    14639                  %ERROR_IT;
      292    14642    2            END;
      293    14643    1         ERR = @ALT_ERROR;
      294    14644    1         IF ERR = %E$DCBOPEN THEN RETURN;
      295    14645    2         IF ERR = %E$FILEBUSY THEN DO;
      296    14646    2             VX_FPT_ERRMSG.V.DCB# = F_O.V.DCB# ;
      297    14647    3             IF VX_ONLINE = @YES THEN DO;  /*Online*/
      298    14648        /*E*  ERROR: VXF-E$FILEBUSY_VX-0
      299    14649              MESSAGE: %FN is busy. Do you wish to wait?
      300    14650              DESCRIPTION: Self-explanatory.
      301    14651        */
      302    14652                      %SCREAM( ERR#=E$FILEBUSY_VX, MID="'F'" );
      303    14655    3                 CALL VXY$YESNO( ANSWER );
      304    14656    4                 IF ANSWER = @YES THEN DO;
      305    14657    4                     CALL M$WAIT( FPT_WAIT );
      306    14658    4                     GOTO OPEN_FILE;
      307    14659    4                    END;                   /* If/answer */
      308    14660    3                END;                       /* E$FILEBUSY - if/do */
      309    14661    3             ELSE DO;                      /*Batch - E$FILEBUSY/VX_ONLINE */
      310    14662        /*E*  ERROR: VXF-E$FILEBUSY_BATCH_VX-0
      311    14663              MESSAGE: %FN is busy.
      312    14664              DESCRIPTION: Self-explanatory.
      313    14665        */
      314    14666                      %SCREAM( ERR#=E$FILEBUSY_BATCH_VX, MID="'F'" );
      315    14669    3                 GOTO CHECK_MES;
      316    14670    3                END;                       /* Else - batch */
      317    14671    2            END;
      318    14672        /* Here for file does not exist checking */
      319    14673    2         IF ERR ~= %E$NOFILE THEN DO;
      320    14674    2             CALL M$MERC     ALTRET(MERC_ERROR);
      321    14675    2             RETURN;
      322    14676    2            END;
      323    14677        /* Here => file does not exist */
      324    14678    2         DO CASE( TYPE );
PL6.E3A0      #001=VXF$OPEN File=VXF$OPEN.:E05TSI                                WED 07/30/97 08:09 Page:21   
      325    14679    2           CASE( @OF, @SF, @RF );
      326    14680    3             IF SRCH$ ~= ADDR(NIL) THEN DO;
             14680                      /* Searching SRCH account list for the file */
      327    14681    3                 SRCH$ = SRCH$ -> VX$ACCT.LINK$;
      328    14682    3                 IF SRCH$ ~= ADDR(NIL) THEN GOTO TRY_AGAIN; /* Try next account */
      329    14683        /*E*  ERROR: VXF-E$NOFILE1_VX-0
      330    14684              MESSAGE: The file %U1 does not exist in any of the
      331    14685                       specified SRCH accounts.
      332    14686              DESCRIPTION: Self-explanatory.
      333    14687        */
      334    14688    3                 VX_EFIELD1.COUNT = CURR$ -> VX$LST.P.NAME_.NAME$ -> T$C.COUNT;
      335    14689    3                 VX_EFIELD1.CHARS = CURR$ -> VX$LST.P.NAME_.NAME$ -> T$C.CHARS;
      336    14690                      %SCREAM( ERR#=E$NOFILE1_VX, LEVEL=@E$S_VX, MID="'F'" );
      337    14693
      338    14694    3                END;
      339    14695    3             ELSE DO;                      /* File does not exist */
      340    14696    3                 VX_FPT_ERRMSG.V.DCB# = F_O.V.DCB#;
      341    14697        /*E*  ERROR: VXF-E$NOFILE2_VX-0
      342    14698              MESSAGE: The file %FN does not exist in DP#%SN.%AC.
      343    14699              DESCRIPTION: Self-explanatory.
      344    14700        */
      345    14701                      %SCREAM( ERR#=E$NOFILE2_VX, LEVEL=@E$S_VX, MID="'F'" );
      346    14704    3                END;
      347    14705    2           CASE( @LF );
      348    14706    3             IF VX_LIBSRCH$ ~= ADDR(NIL) THEN DO;
             14706                      /* Searching accounts for library file */
      349    14707    3   LIB_ERR:      VX_LIBSRCH$ = VX_LIBSRCH$ -> VX$ACCT.LINK$; /* Try next account */
      350    14708    3                 IF VX_LIBSRCH$ ~= ADDR(NIL) THEN GOTO TRY_AGAIN;
      351    14709    4                 IF CURR$ -> VX$LST.LIB.USED = @YES THEN DO;
      352    14710    4                     CURR$ -> VX$LST.PRIOR$ -> VX$LST.LINK$
      353    14711    4                             = CURR$ -> VX$LST.LINK$; /* Delete from library list */
      354    14712    4                     CURR_P$ = CURR$ -> VX$LST.LINK$; /* Step to next library file */
      355    14713    4                     ALTRETURN;
      356    14714    4                    END;
      357    14715    4                 ELSE DO;
      358    14716        /*E*  ERROR: VXF-E$NOLIBFILE1_VX-0
      359    14717              MESSAGE: A library file named %U1 does not exist in any of the
PL6.E3A0      #001=VXF$OPEN File=VXF$OPEN.:E05TSI                                WED 07/30/97 08:09 Page:22   
      360    14718                       specified LIBSRCH accounts.
      361    14719              DESCRIPTION: Self-explanatory.
      362    14720        */
      363    14721    4                     VX_EFIELD1.COUNT = CURR$ -> VX$LST.P.NAME_.NAME$ -> T$C.COUNT;
      364    14722    4                     VX_EFIELD1.CHARS = CURR$ -> VX$LST.P.NAME_.NAME$ -> T$C.CHARS;
      365    14723                          %SCREAM( ERR#=E$NOLIBFILE1_VX, MID="'F'",
      366    14724                          LEVEL=@E$W_VX );
      367    14727    4                    END;
      368    14728    3                END;
      369    14729    3             ELSE DO;
      370    14730        /*E*  ERROR: VXF-E$NOLIBFILE2_VX-0
      371    14731              MESSAGE: The library file %FN does not exist.
      372    14732              DESCRIPTION: Self-explanatory.
      373    14733        */
      374    14734    3                 VX_FPT_ERRMSG.V.DCB# = DCBNUM( M$OF );
      375    14735                      %SCREAM( ERR#=E$NOLIBFILE2_VX, LEVEL=@E$W_VX, MID="'F'" );
      376    14738    3                END;
      377    14739
      378    14740    2           END;                            /* DO CASE */
      379    14741        %EJECT;
PL6.E3A0      #001=VXF$OPEN File=VXF$OPEN.:E05TSI                                WED 07/30/97 08:09 Page:23   
      380    14742    2   TELL: IF VX_ONLINE ~= 0 THEN DO;
      381    14743    2   TELL_AGAIN:
      382    14744    2             UNFID_DCB.V.DCB# = F_O.V.DCB#;
      383    14745    2             CALL M$UNFID( UNFID_DCB );
      384    14746    2             SINPUT_BADFID.BUF_.BOUND = FILE_NAME_SIZE - 1;
      385    14747    2             CALL M$SINPUT( SINPUT_BADFID );
      386    14748    2             CALL VXW$WRITE( ENTER_FILE_NAME, LENGTHC(ENTER_FILE_NAME), 1);
      387    14749        /* Set up for X$PARSE                                        */
      388    14750    2             WKSZ = 256/4;
      389    14751    2             CALL VXP$PAR( 2, ADDR(VX_N_START_FID), TEXT$, NCHARS, WKSZ )  ALTRET(
             14751                      RELEASE);
      390    14752    2             I = CURR$ -> VX$LST.TYPE;
      391    14753    2             J = CURR$ -> VX$LST.SUB_TYPE;
      392    14754    2             CALL VXS$LST( CURR$, VX_P_PCB_MAIN.OUT$ -> O$B.SUBLK$(0) ->
      393    14755    2                     O$B.SUBLK$(0) -> O$B.SUBLK$(0), I, J, ADDR(NIL), -8 );
      394    14756        /*
      395    14757                                          Setup pointers to search accounts */
      396    14758    3             IF TYPE = @LF THEN DO;
      397    14759    3                 CURR$ -> VX$LST.LIB = '0'B;
      398    14760    3                 IF CURR$ -> VX$LST.P.B.ACCT
      399    14761    3                 THEN CURR$ -> VX$LST.LIBSRCH$ = ADDR(NIL);
      400    14762    3                 ELSE CURR$ -> VX$LST.LIBSRCH$ = VX_O.ACCTN$.LIBSRCH$;
      401    14763    3                 VX_LIBSRCH$ = CURR$ ->VX$LST.LIBSRCH$;
      402    14764    3                 SRCH$ = ADDR(NIL);
      403    14765    3                END;
      404    14766    3             ELSE DO;                      /* TYPE = @OF OR @SF */
      405    14767    3                 VX_LIBSRCH$ = ADDR(NIL);
      406    14768    3                 IF  NOT CURR$ -> VX$LST.P.B.ACCT
      407    14769    3                 THEN SRCH$ = VX_O.ACCTN$.SRCH$;
      408    14770    3                 ELSE SRCH$ = ADDR(NIL);
      409    14771    3                END;
      410    14772    2             CALL VXF$FREE( @DS3, WKSZ, 1 );
      411    14773    2             GOTO AGAIN;
      412    14774    2   RELEASE:
      413    14775    2             CALL VXF$FREE( @DS3, WKSZ, 1 );
      414    14776    2             GOTO TELL_AGAIN;
      415    14777    2            END;                           /* if VX_ONLINE ~= 0  then do; */
PL6.E3A0      #001=VXF$OPEN File=VXF$OPEN.:E05TSI                                WED 07/30/97 08:09 Page:24   
      416    14778    2         ELSE DO;
      417    14779    2   CHECK_MES:
      418    14780    3             IF VX_DO_PASS1 = @YES THEN DO;
      419    14781    3                 VX_DO_PASS1 = @NO;
      420    14782        /*E*  ERROR: VXF-E$JUSTFILE_VX-0
      421    14783              MESSAGE: Processing continues only for file existence checking.
      422    14784                       Only current node will be further processed.
      423    14785              DESCRIPTION: Self-explanatory.
      424    14786        */
      425    14787                      %SCREAM( ERR#=E$JUSTFILE_VX, LEVEL=@E$I_VX, MID="'F'" );
      426    14790    3                END;
      427    14791    2            END;
      428    14792    1         RETURN;
      429    14793    1   MERC_ERROR:
      430    14794    1         CALL VXE$MERC;
      431    14795              %BANNER(ARG=END VXF$OPEN);

             14803    1   /*******************************************************************************
             14804    1   *                                                                              *
             14805    1   *                          END VXF$OPEN                                            *
             14806    1   *                                                                              *
             14807    1   *******************************************************************************/

      432    14811        %EJECT;
PL6.E3A0      #001=VXF$OPEN File=VXF$OPEN.:E05TSI                                WED 07/30/97 08:09 Page:25   
      433    14812              %BANNER(ARG=VXF$OPEN_LO entry);

             14820    1   /*******************************************************************************
             14821    1   *                                                                              *
             14822    1   *                          VXF$OPEN_LO entry                                       *
             14823    1   *                                                                              *
             14824    1   *******************************************************************************/

      434    14828    1   VXF$OPEN_LO: ENTRY  ALTRET;
      435    14829
      436    14830
      437    14831        /*                            Assume M$LO and M$DO are the  same  */
      438    14832    1         VX_LO_DO_DIFFER = @FALSE_B;
      439    14833    1         VX_FPT_ERRMSG.V.OUTDCB2# = DCBNUM( NIL );
      440    14834    1         VX_FPT_ERRMSG_AUX.V.OUTDCB2# = DCBNUM( NIL );
      441    14835
      442    14836    2         IF VX_LOF$ ~= ADDR(NIL) THEN DO;
      443    14837    2             VX_LO_FPT_OPEN.NAME_      = VX_LOF$ -> VX$LST.P.NAME_;
      444    14838    2             VX_LO_FPT_OPEN.ACCT_      = VX_LOF$ -> VX$LST.P.ACCT_;
      445    14839    2             VX_LO_FPT_OPEN.PASS_      = VX_LOF$ -> VX$LST.P.PASS_;
      446    14840    2             VX_LO_FPT_OPEN.SN_        = VX_LOF$ -> VX$LST.P.SN_;
      447    14841    2             VX_LO_FPT_OPEN.WSN_       = VX_LOF$ -> VX$LST.P.WSN_;
      448    14842    2             IF VX_LOF$ -> VX$LST.P.B.ASN THEN
      449    14843    2                 VX_LO_FPT_OPEN.V.ASN# = VX_LOF$ -> VX$LST.P.ASN;
      450    14844    2             ELSE
      451    14845    2                 VX_LO_FPT_OPEN.V.ASN# = 0;
      452    14846    2             IF VX_LOF$ -> VX$LST.P.B.RES THEN
      453    14847    2                 VX_LO_FPT_OPEN.V.RES# = VX_LOF$ -> VX$LST.P.RES;
      454    14848    2             ELSE
      455    14849    2                 VX_LO_FPT_OPEN.V.RES# = BINASC(0);
      456    14850    2             VX_FPT_ERRMSG.V.DCB# = DCBNUM(M$LO);
      457    14851
      458    14852    3             DO CASE( VX_ON_OVER );
      459    14853    3               CASE( @C_OVER_KEY_WORD );
      460    14854    3                 VX_LO_FPT_OPEN.V.EXIST# = %NEWFILE#;
      461    14855
      462    14856    3               CASE( @C_ON_KEY_WORD );
PL6.E3A0      #001=VXF$OPEN File=VXF$OPEN.:E05TSI                                WED 07/30/97 08:09 Page:26   
      463    14857    3                 VX_LO_FPT_OPEN.V.EXIST# = %ERROR#;
      464    14858
      465    14859    3               CASE( @C_INTO_KEY_WORD);
      466    14860    3                 VX_LO_FPT_OPEN.V.EXIST# = %OLDFILE#;
      467    14861
      468    14862    3               END;                        /* END DO CASE(VX_ON_OVER */
      469    14863
      470    14864    2            END;                           /* IF VX_LOF$ ~= ADDR(NIL) THEN */
      471    14865
      472    14866    1         CALL M$OPEN (VX_LO_FPT_OPEN) ALTRET ( LO_OPEN_ERROR );
      473    14867        /*                             Check correspondence          */
      474    14868    1         CALL M$CORRES( FPT_CORRES )  ALTRET( SAME );
      475    14869        /* Here=>different */
      476    14870    1         VX_LO_DO_DIFFER = @TRUE_B;
      477    14871    1         VX_FPT_ERRMSG.V.OUTDCB2# = DCBNUM( M$DO );
      478    14872    1         VX_FPT_ERRMSG_AUX.V.OUTDCB2# = DCBNUM( M$DO );
      479    14873    1         CALL M$OPEN ( VX_DO_FPT_OPEN) ALTRET( SAME ) ;
      480    14874    1   SAME:
      481    14875
      482    14876
      483    14877    1         VX_ECHO = ~ ( M$SI$ -> F$DCB.DDEV.IC#  &  M$LO$ -> F$DCB.DDEV.IC# );
      484    14878    1         VX_DO_ECHO = VX_LO_DO_DIFFER & ~(M$SI$->F$DCB.DDEV.IC# & M$DO$->F$DCB.DDEV.IC#
             14878                  );
      485    14879    1         RETURN ;
      486    14880
      487    14881    1   LO_OPEN_ERROR:;
      488    14882        /*E*  ERROR:      VXF-E$OPEN_LO_VX-0
      489    14883              MESSAGE: Unable to open listing output file: %FN
      490    14884        */
      491    14885    1         VX_FPT_ERRMSG.V.OUTDCB1# = DCBNUM (M$DO);
      492    14886    1         CALL VXE$ERRMSG( , @E$F_D_VX );
      493    14887              %ERRMSG( ERR#=E$OPEN_LO_VX, MID="'F'", LEVEL=@E$F_VX, DCB#=M$LO );
      494    14896
      495    14897              %BANNER(ARG=END VXF$OPEN_LO);

             14905    1   /*******************************************************************************
             14906    1   *                                                                              *
PL6.E3A0      #001=VXF$OPEN File=VXF$OPEN.:E05TSI                                WED 07/30/97 08:09 Page:27   
             14907    1   *                          END VXF$OPEN_LO                                         *
             14908    1   *                                                                              *
             14909    1   *******************************************************************************/

      496    14913
      497    14914    1   END VXF$OPEN;
      498    14915        %EOD;

PL6.E3A0      #001=VXF$OPEN File=VXF$OPEN.:E05TSI                                WED 07/30/97 08:09 Page:28   
--  Include file information  --

   B$JIT.:E05TOU  cannot be made into a system file and is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   B_ERRORS_C.:E05TOU  is referenced.
   XUF_ENTRY.:E05TOU  cannot be made into a system file and is referenced.
   XU_FORMAT_C.:E05TOU  is referenced.
   VX_PSUBS_C.:E05TOU  is referenced.
   F_DCB_D.:E05TOU  is referenced.
   VX_DCB_R.:E05TOU  cannot be made into a system file and is referenced.
   VX_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   VX_FIXED_R.:E05TOU  cannot be made into a system file and is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   VX_MACRO_C.:E05TOU  is referenced.
   VX_PERR_C.:E05TOU  is referenced.
   VX_SUBS_C.:E05TOU  is referenced.
   VX_SWITCH_C.:E05TOU  is referenced.
   B$OBJECT_C.:E05TOU  is referenced.
   VX_INC_C.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure VXF$OPEN.

   Procedure VXF$OPEN requires 769 words for executable code.
   Procedure VXF$OPEN requires 32 words of local(AUTO) storage.

PL6.E3A0      #001=VXF$OPEN File=VXF$OPEN.:E05TSI                                WED 07/30/97 08:09 Page:29   

 Object Unit name= VXF$OPEN                                   File name= VXF$OPEN.:E05TOU
 UTS= JUL 30 '97 08:09:39.08 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1  LblCom even  none    96    140  VX_CONST_DCB
    2   Data  even  none   281    431  VXF$OPEN
    3   DCB   even  none     0      0  M$OF
    4   DCB   even  none     0      0  M$RF
    5   DCB   even  none     0      0  M$SI
    6   DCB   even  none     0      0  M$LO
    7   DCB   even  none     0      0  M$DO
    8   DCB   even  none     0      0  M$EI
    9  RoData even  UTS    216    330  VXF$OPEN
   10   Proc  even  none   769   1401  VXF$OPEN
   11  RoData even  none    77    115  VXF$OPEN

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
    10      0   yes    yes     yes      Std        3  VXF$OPEN
    10   1171          yes     yes      Std        0  VXF$OPEN_LO

  ****  Data defs  ****

 Sect OctLoc  Name                           Sect OctLoc  Name
    2     40  VX_LO_FPT_OPEN                     2    132  VX_DO_FPT_OPEN
    9      0  VX_EI_FPT_OPEN                     9     72  VX_OF_FPT_OPEN
    9    164  VX_RF_FPT_OPEN
PL6.E3A0      #001=VXF$OPEN File=VXF$OPEN.:E05TSI                                WED 07/30/97 08:09 Page:30   

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       5 VXD$B2C
         yes           Std       4 VXE$ERROR
         yes           Std       3 VXA$GET
         yes           Std       3 VXW$WRITE
         yes           Std       1 VXY$YESNO
         yes           Std      22 X$WRITE
         yes           Std       3 VXF$CLOSE
         yes           Std       3 VXF$FREE
         yes           Std       3 VXE$ERRMSG
         yes           Std       0 VXE$MERC
 yes     yes           Std       5 VXP$PAR
 yes     yes           Std       6 VXS$LST
                       nStd      0 X66_AUTO_3
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET
                       nStd      0 X66_AALT
PL6.E3A0      #001=VXF$OPEN File=VXF$OPEN.:E05TSI                                WED 07/30/97 08:09 Page:31   

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                                  VX_P_PCB_MAIN                         VX_FPT_ERRMSG
     VX_OK                                 B$JIT$                                B$TCB$
     VX_OU_HEAD                            VX_ON_OVER                            VX_LO_DO_DIFFER
     VX_PASS                               VX_DO_PASS1                           VX_LOF$
     VX_ERRORS                             VX_M_FREE                             VX_M_ALL
     VX_M_BASE_PTR                         VX_ONLINE                             VX_O
     VX_OD                                 VX_EFIELD1                            VX_ECHO
     VX_DO_ECHO                            VX_LIBSRCH$                           M$SI$
     M$DO$                                 M$LO$                                 M$OF$
     M$OF                                  M$RF                                  M$SI
     M$LO                                  M$DO                                  M$EI
     VX_FPT_ERRMSG_AUX                     VX_N_START_FID                        B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     NULLSID                               ISSID
PL6.E3A0      #001=VXF$OPEN File=VXF$OPEN.:E05TSI                                WED 07/30/97 08:09 Page:32   


        1        1        /*M* VXF$OPEN - opens files.    */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* AIC,DMR,PLM=6,IND=4,CSU=2,EXM=0,ECU=2,MOC,DCI=4,CRT=4,CTI=8     */
        8        8        VXF$OPEN:
        9        9              PROC( CURR_P$, TYPE, MODE )     ALTRET;

      9 10 000000   000000 700200 xent  VXF$OPEN     TSX0  ! X66_AUTO_3
        10 000001   000040 000003                    ZERO    32,3

       10       10        %INCLUDE VX_INC_C;
       11    10726        %INCLUDE VX_PSUBS_C;
       12    10904        %INCLUDE XU_FORMAT_C;
       13    11066        %INCLUDE XUF_ENTRY;
       14    11074        %INCLUDE B_ERRORS_C;
       15    12201        %INCLUDE CP_6_SUBS;
       16    12741        %INCLUDE B$JIT;
       17    13031        %F$DCB;
       18    13088        %LIST;
       19    13089        %SET LISTSUB='1'B;
       20    13090        %PARSE$OUT( NAME=O$B, STCLASS="BASED");
             13091        /*F*  NAME:     PARSE$OUT
             13092              FUNCTION: a structure built by X$PARSE which corresponds to a "list",
             13093                  "alternative", "reducing alternative", or "koncat" node in
             13094                  the user's parse tree.
             13095        */
             13096    1   DCL 1 O$B BASED ALIGNED,
             13097    1         2 TEMP BIT(1) UNAL,
             13098    1         2 * BIT (11) UNAL,
             13099    1         2 NDTYPE UBIN (6) UNAL,
             13100        /*K* NDTYPE - specifies the type of parse node to which this PARSE$OUT
             13101                  block corresponds.  See the XU_SUBS_C file for the
             13102                  %EQU symbols whose values may appear in this field.
PL6.E3A0      #001=VXF$OPEN File=VXF$OPEN.:E05TSI                                WED 07/30/97 08:09 Page:33   
             13103        */
             13104    1         2 CODE UBIN HALF HALIGNED,
             13105        /*K* CODE - Contains the numeric "node code" specified by the user when
             13106                  the corresponding parse-node was defined.
             13107        */
             13108    1         2 NSUBLKS UBIN HALF HALIGNED,
             13109        /*K* NSUBLKS - "number of sub-blocks".  This field contains the count of
             13110                  pointers actually available in the PARSE$OUT.SUBLK$ array.
             13111        */
             13112    1         2 SCRITCH UBIN HALF HALIGNED,
             13113        /*K* SCRITCH - an 18-bit scratch field reserved for the user.  X$PARSE
             13114                  initializes this field to zero when the PARSE$OUT structure
             13115                  is allocated, and never sets or examines it thereafter.
             13116                  The name of this field may be changed when the PARSE$OUT macro
             13117                  is invoked by the user (say "SCRITCH=yourname"), and its data
             13118                  type may also be changed (say "SCRMODE=pl6datatype" and
             13119                  "SCRALGN=alignment").  BEWARE: this field MUST be 18-bits long,
             13120                  and be UNALIGNED, CALIGNED, or HALIGNED.
             13121        */
             13122    1         2 CPOS UBIN WORD,
             13123        /*K* CPOS - "character position" of this block.  This field will contain
             13124                  a character index (starting at 0) into the original parse
             13125                  string;  the index identifies the first character of the
             13126                  string which was accepted by this node (or by any of its
             13127                  sub-nodes).
             13128        */
             13129    1         2 SUBLK$(0:0) PTR UNAL;
             13130        /*K* SUBLK$ - an array of PL-6 PTRs.  The number of elements in this array
             13131                  is found in OUT$BLK.NSUBLKS;  each PTR will point to another
             13132                  OUT$BLK structure, or to an OUT$SYM structure.
             13133        */
       21    13135        %F_FDS( NAME=F_FDS, STCLASS=STATIC, DCB=M$LO, BUF=OUT_BUF, TRUNC=NO, WRAPTAB=4);
             13136        %LSET LISTDIR='0'B;
             13149    1   DCL 1 F_FDS STATIC,
             13153    1         2 FMT_,
             13154    1           3 BOUND UBIN(20) UNAL INIT(SIZEV(NIL))/**/,
             13155    1           3 * BIT(16) UNAL INIT('77720'O)/**/,
PL6.E3A0      #001=VXF$OPEN File=VXF$OPEN.:E05TSI                                WED 07/30/97 08:09 Page:34   
             13156    1           3 FMT$ PTR INIT(ADDR(NIL))/**/,
             13160    1         2 FMTX SBIN INIT(0) /**/,
             13162    1         2 FMTXMAX SBIN INIT(0) /**/,
             13164    1         2 FMTSIZE SBIN INIT(0) /**/,
             13166    1         2 BUF_,
             13167    1           3 BOUND UBIN(20) UNAL INIT(SIZEV(OUT_BUF))/**/,
             13168    1           3 * BIT(16) UNAL INIT('77720'O)/**/,
             13169    1           3 BUF$ PTR INIT(ADDR(OUT_BUF))/**/,
             13173    1         2 BUFX SBIN INIT(1) /**/,
             13175    1         2 BUFSIZE SBIN INIT(0) /**/,
             13177    1         2 NVECS# SBIN INIT(0)/**/,
             13179    1         2 VECTR$ PTR INIT(ADDR(NIL))/**/,
             13182    1         2 DCB# SBIN HALF UNAL INIT(DCBNUM(M$LO))/**/,
             13185    1         2 DVFC# CHAR(1) INIT('A')/**/,
             13189    1         2 TRUNC# BIT(1) INIT('0'B)/**/,
             13194    1         2 DEBUG BIT(1) INIT('0'B) /**/,
             13196    1         2 BLNKBUF BIT(1) INIT('1'B) /**/,
             13198    1         2 DONT_PRINT BIT(1) INIT('0'B) /**/,
             13200    1         2 WRAP BIT(1) INIT('0'B) /**/,
             13202    1         2 *(0:3) BIT(1) INIT('0'B*0) /**/,
             13203    1         2 OUTPUT# EPTR INIT(ENTADDR(NIL))/**/,
             13208    1         2 EDIT# EPTR INIT(ENTADDR(NIL))/**/,
             13212    1         2 WRAPTAB# SBIN INIT(4)/**/,
             13215    1         2 TABDFLT# SBIN INIT(10)/**/,
             13219    1         2 RESCAN SBIN INIT(0) /**/,
             13221    1         2 BAILOUT REMEMBER ALIGNED,
             13223    1         2 FIELDX SBIN INIT(0) /**/,
             13225    1         2 FWID SBIN INIT(0) /**/,
             13227    1         2 MEMSZ SBIN INIT(0) /**/,
             13229    1         2 MEMX SBIN INIT(0) /**/,
             13231    1         2 CUR$ PTR INIT(ADDR(NIL)) /**/,
             13233    1         2 DEVICEFPT$ PTR INIT(ADDR(NIL)) /**/,
             13235    1         2 WRITEFPT$ PTR INIT(ADDR(NIL)) /**/,
             13237    1         2 GLOBAL$ PTR INIT(ADDR(NIL)) /**/,
             13244    1         2 USERDAT1# SBIN INIT(0) /**/,
             13245    1         2 USERDAT2# SBIN INIT(0) /**/,
             13246    1         2 USERDAT3# SBIN INIT(0) /**/;
PL6.E3A0      #001=VXF$OPEN File=VXF$OPEN.:E05TSI                                WED 07/30/97 08:09 Page:35   
       22    13248        %B$TCB;
             13249    1  DCL 1 B$TCB BASED ALIGNED,2 ALT$ PTR,2 STK$ PTR,2 TCBAVSZ UBIN(18)UNAL,2 CURRSZ UBIN
             13249            (18)UNAL,2 * BIT(36);
       23    13251        %B$ALT;
             13252        %B$FIXED(NAME=NAME,STCLASS=STCLASS);
             13253    1  DCL 1 B$ALT BASED ALIGNED,2 SSFRAME(0:63)UBIN,2 * UBIN(18)UNAL,2 CODE UBIN(18)UNAL,2
             13253            FPT REDEF CODE,3 FCG UBIN(6)UNAL,3 PMME UBIN
             13254    1  (12)UNAL,2 EVSC REDEF CODE UBIN(18)UNAL,2 SUBC REDEF CODE UBIN(18)UNAL,2 EVID UBIN,2
             13254            DCB# REDEF EVID UBIN,2 BRKCNT REDEF EVID UBIN,2
             13255    1   ERR,3 FCG BIT(12),3 MID BIT(6),3 MON BIT(1),3 ERR# UBIN(14)UNAL,3 CODE REDEF ERR#
             13255            UBIN(14)UNAL,3 SEV UBIN(3)UNAL ,
             13257    1   2 P# UBIN;
       24    13259        %VX$LST;
             13260        %LSET LISTDIR='0'B;

             13272    1   /*******************************************************************************
             13273    1   *                                                                              *
             13274    1   *                          VX$LST                                                 *
             13275    1   *                                                                              *
             13276    1   *******************************************************************************/

             13281    1   DCL 1 VX$LST                          ALIGNED BASED,
             13282    1         2 LINK$        PTR,               /* Link to next item                  */
             13283    1         2 TYPE         UBIN( 18) UNAL,    /* Type                               */
             13284    1         2 SUB_TYPE     UBIN( 18) UNAL,    /* Sub-type                           */
             13285    1         2 OBJECT_NAME$ PTR,               /* Pointer to object unit name        */
             13286    1         2 PRIOR$ REDEF OBJECT_NAME$ PTR,  /* Pointer to prior element in list   */
             13287    1         2 SC_HEAD$     PTR,               /* Head pointer to section link list  */
             13288    1         2 LIBSRCH$ REDEF SC_HEAD$ PTR,    /* Pointer to account list for library*/
             13289    1         2 SC_TAIL$     PTR,               /* Tail pointer to section link list  */
             13290    1         2 LIB REDEF SC_TAIL$,             /* Used only by UNSAT library files   */
             13291    1           3 USED UBIN HALF UNAL,          /* 1 => library file used, 0=>not used*/
             13292    1           3 NEEDED UBIN HALF UNAL,   /* 1 => library file needed, 0=>not needed*/
             13293    1         2 P,
             13294    1           3 NAME_       ALIGNED,
             13295    1             4 BOUND      UBIN(20)  UNAL,
             13296    1             4 FLAGSV     UBIN(11)  UNAL,
PL6.E3A0      #001=VXF$OPEN File=VXF$OPEN.:E05TSI                                WED 07/30/97 08:09 Page:36   
             13297    1             4 *          BIT(5)    UNAL,
             13298    1             4 NAME$      PTR,
             13299    1           3 ACCT_       ALIGNED,
             13300    1             4 BOUND      UBIN(20)  UNAL,
             13301    1             4 FLAGSV     UBIN(11)  UNAL,
             13302    1             4 *          BIT(5)    UNAL,
             13303    1             4 ACCT$      PTR,
             13304    1           3 PASS_       ALIGNED,
             13305    1             4 BOUND      UBIN(20)  UNAL,
             13306    1             4 FLAGSV     UBIN(11)  UNAL,
             13307    1             4 *          BIT(5)    UNAL,
             13308    1             4 PASS$      PTR,
             13309    1           3 SN_         ALIGNED,
             13310    1             4 BOUND      UBIN(20)  UNAL,
             13311    1             4 FLAGSV     UBIN(11)  UNAL,
             13312    1             4 *          BIT(5)    UNAL,
             13313    1             4 SN$        PTR,
             13314    1           3 WSN_        ALIGNED,
             13315    1             4 BOUND      UBIN(20)  UNAL,
             13316    1             4 FLAGSV     UBIN(11)  UNAL,
             13317    1             4 *          BIT(5)    UNAL,
             13318    1             4 WSN$       PTR,
             13319    1           3 B           ALIGNED,
             13320    1             4 RES        BIT(1)    UNAL,
             13321    1             4 ASN        BIT(1)    UNAL,
             13322    1             4 ACCT       BIT(1)    UNAL,
             13323    1             4 *          BIT(33)   UNAL,
             13324    1           3 RES         CHAR(4)   ALIGNED,
             13325    1           3 ASN         UBIN(36)  ALIGNED;
       25    13328        %VX$ACCT;
             13329        %LSET LISTDIR='0'B;

             13341    1   /*******************************************************************************
             13342    1   *                                                                              *
             13343    1   *                          VX$ACCT                                                *
             13344    1   *                                                                              *
             13345    1   *******************************************************************************/
PL6.E3A0      #001=VXF$OPEN File=VXF$OPEN.:E05TSI                                WED 07/30/97 08:09 Page:37   

             13350    1   DCL 1 VX$ACCT ALIGNED BASED,
             13351    1         2 LINK$ PTR,
             13352    1         2 ACCT_,
             13353    1           3 * UBIN WORD,
             13354    1           3 ACCT$ PTR,
             13355    1         2 SN_,
             13356    1           3 * UBIN WORD,
             13357    1           3 SN$ PTR;
       26    13360        %T$C;
             13361        %LSET LISTDIR='0'B;

             13372    1   /*******************************************************************************
             13373    1   *                                                                              *
             13374    1   *                          T$C                                                 *
             13375    1   *                                                                              *
             13376    1   *******************************************************************************/

             13381    1   DCL 1 T$C           BASED     ALIGNED,  /* Text count                         */
             13382    1         2 COUNT        UBIN( 9) UNAL,
             13383    1         2 CHARS        CHAR( T$C.COUNT )   UNAL;
             13384    1   DCL 1 T$C_UNAL      BASED     UNAL,     /* Text count                         */
             13385    1         2 COUNT        UBIN( 9) UNAL,
             13386    1         2 CHARS        CHAR( T$C_UNAL.COUNT ) UNAL;
       27    13389        %VECTOR( NAME=ACCT_VECTOR, STCLASS=STATIC );
             13390        %LSET LISTDIR='0'B;

             13402    1   /*******************************************************************************
             13403    1   *                                                                              *
             13404    1   *                          TEMPLATE FOR 2-WORD NSA VECTOR                         *
             13405    1   *                                                                              *
             13406    1   *******************************************************************************/

             13411    1   DCL 1 ACCT_VECTOR STATIC ALIGNED,
             13412    1         2 VSIZE UBIN(20) UNAL,      /* Size field of vector               */
             13413    1         2 FLAGS BIT(9) UNAL,        /* FLAGS...                           */
             13414    1         2 V BIT(2) UNAL,            /* Vector type field                  */
PL6.E3A0      #001=VXF$OPEN File=VXF$OPEN.:E05TSI                                WED 07/30/97 08:09 Page:38   
             13415    1         2 Z5 BIT(5) UNAL,           /* Unused                             */
             13416    1         2 F,
             13417    1           3 BASE UBIN(20) UNAL,     /* Base for vector                    */
             13418    1           3 Z4 BIT(4) UNAL,         /* Unused                             */
             13419    1           3 SEGID UBIN(12) UNAL,    /* Segid                              */
             13420    1         2 P       REDEF     F,            /* To extract the pointer             */
             13421    1           3 POINTER          PTR UNAL;
       28    13424        %LIST;
       29    13425        %FILE;
             13426    1   DCL 1 F$NAME_                 BASED,
             13427    1         2 COUNT             UBIN( 9) UNAL,
             13428    1         2 CHARS             CHAR( F$NAME_.COUNT ) UNAL;
             13429    1   DCL F$ACCT_         CHAR(8/*@F_ACCT_SIZEC*/) BASED;
             13430    1   DCL F$ACCT_A(0:7/*@F_ACCT_SIZEC1*/)     CHAR(1)   BASED;
             13431    1   DCL F$PASS_         CHAR(8/*@F_PASS_SIZEC*/) BASED;
             13432    1   DCL F$PASS_A(0:7/*@F_PASS_SIZEC1*/)     CHAR(1)   BASED;
       30    13434        %BANNER(ARG=DCBS);
             13435        %LSET LISTDIR='0'B;

             13442    1   /*******************************************************************************
             13443    1   *                                                                              *
             13444    1   *                          DCBS                                                 *
             13445    1   *                                                                              *
             13446    1   *******************************************************************************/

       31    13450    1   DCL M$OF             DCB;
       32    13451    1   DCL M$RF             DCB;
       33    13452    1   DCL M$SI             DCB;
       34    13453    1   DCL M$LO             DCB;
       35    13454    1   DCL M$DO             DCB;
       36    13455    1   DCL M$EI             DCB;
       37    13456        %BANNER(ARG=FPTS);
             13457        %LSET LISTDIR='0'B;

             13464    1   /*******************************************************************************
             13465    1   *                                                                              *
             13466    1   *                          FPTS                                                 *
PL6.E3A0      #001=VXF$OPEN File=VXF$OPEN.:E05TSI                                WED 07/30/97 08:09 Page:39   
             13467    1   *                                                                              *
             13468    1   *******************************************************************************/

       38    13472        %FPT_OPEN( FPTN=VX_LO_FPT_OPEN,
       39    13473                   DCB=M$LO,
       40    13474                   DISP=NAMED,
       41    13475                   FUN=CREATE,
       42    13476                   ORG=UR,
       43    13477                   ACS=SEQUEN,
       44    13478                   SCRUB = YES,
       45    13479                   REASSIGN = YES,
       46    13480                   STCLASS="STATIC SYMDEF");
             13481        %LSET LISTDIR='0'B;
             13545    1  DCL 1 VX_LO_FPT_OPEN STATIC SYMDEF,2 V_ BIT(72) INIT(VECTOR(VX_LO_FPT_OPEN.V))/**/,2
             13545            SN_ BIT(72) INIT(VECTOR(NIL))/**/,2 UHL_ BIT(72) INIT
             13546    1  (VECTOR(NIL))/**/,2 SETSTA_ REDEF UHL_ BIT(72),2 VIRTUAL_ REDEF UHL_ BIT(72),2 NAME_
             13546            BIT(72) INIT(VECTOR(NIL)
             13547    1  )/**/,2 PASS_ BIT(72) INIT(VECTOR(NIL))/**/,2 ACCESS_ BIT(72) INIT(VECTOR(NIL))/**/,
             13547            2 ACSVEH_
             13548    1  BIT(72) INIT(VECTOR(NIL))/**/,2 WINDOW_ REDEF ACSVEH_ BIT(72),2 UATTR_ BIT(72) INIT(
             13548            VECTOR(NIL))
             13549    1  /**/,2 INSTATTR_ BIT(72) INIT(VECTOR(NIL))/**/,2 PROCATTR_ BIT(72) INIT(VECTOR(NIL))
             13549            /**/,2 ACCT_
             13550    1  BIT(72) INIT(VECTOR(NIL))/**/,2 IFPARAM_ BIT(72) INIT(VECTOR(NIL))/**/,2 FPARAM_ BIT
             13550            (72) INIT(VECTOR
             13551    1   (NIL))/**/,2 WSN_ BIT(72) INIT(VECTOR(NIL))/**/,2 NODENAME_ REDEF WSN_ BIT(72),2
             13551            TAB_ BIT(72)
             13552    1  INIT(VECTOR(NIL))/**/,2 RECFIELD_ REDEF TAB_ BIT(72),2 HDR_ BIT(72) INIT(VECTOR(NIL)
             13553    1   )/**/,2 IRREC_ REDEF HDR_ BIT(72),2 FORM_ BIT(72) INIT(VECTOR(NIL))/**/,2 ALTKEYS_
             13553            BIT(72) INIT(VECTOR(
             13554    1   NIL))/**/,2 FPRG_ REDEF ALTKEYS_ BIT(72),2 IRKEYS_ REDEF ALTKEYS_ BIT(72),2 V
             13554            DALIGNED,3 DCB# UBIN(18)UNAL INIT(DCBNUM
             13555    1   (M$LO))/**/,3 INITZ,4 SCRUB# BIT(1)INIT('1'B)/**/ ,4 REASSIGN# BIT(1)INIT('1'B)/**/
             13555            ,3
             13556    1   SETDCB# BIT(1)INIT('0'B)/**/ ,3 DELETE# BIT(1)INIT('0'B)/**/ ,3 OPER,4 TEST# BIT(1)
             13556            INIT('0'B
             13557    1   )/**/ ,4 NXTA# BIT(1)INIT('0'B)/**/ ,4 NXTF# BIT(1)INIT('0'B)/**/ ,4 THISF# BIT(1)
PL6.E3A0      #001=VXF$OPEN File=VXF$OPEN.:E05TSI                                WED 07/30/97 08:09 Page:40   
             13557            INIT
             13558    1   ('0'B)/**/ ,4 MNTONLY# BIT(1)INIT('0'B)/**/ ,3 EXIST# UBIN(2)INIT(0)/**/ UNAL,3
             13559    1   CTG# BIT(2)INIT('01'B)/**/ ,3 SHARE# UBIN(2)INIT(0)/**/ UNAL,3 CVOL# BIT(2)INIT(
             13559            '01'B)
             13560    1   /**/ ,3 FINDPOS# BIT(1)INIT('0'B)/**/,3 SRCHCOND,4 DELF# BIT(1)INIT('0'B)/**/,4
             13560            NOLIST# BIT(1
             13561    1   )INIT('0'B)/**/,4 BUF# BIT(1)INIT('0'B)/**/,4 * BIT(1)INIT('0'B)/**/,4 BAD# BIT(1)
             13561            INIT
             13562    1  ('0'B)/**/,4 QS# BIT(1)INIT('0'B)/**/,4 * BIT(2)INIT('0'B)/**/,4 ARCHIVE# BIT(1)INIT
             13562            ('0'B
             13563    1   )/**/,4 ANYF# BIT(1)INIT('0'B)/**/,4 * BIT(7)INIT('0'B)/**/,4 REV# BIT(1)INIT('0'B
             13564    1  )/**/,3 FUN# UBIN(9)INIT(3)/**/ UNAL,3 ASN# UBIN(9)INIT(0)/**/ UNAL,3 UOPT#(0:8)BIT(
             13564            2
             13565    1  )INIT('01'B,'01'B,'01'B,'01'B,'01'B,'01'B,'01'B,'01'B,'01'B)/**/,3 ORG# UBIN(9)INIT(
             13565            4)/**/ UNAL,3 ACS#
             13566    1  UBIN(9)INIT(1)/**/ UNAL,3 TYPE# CHAR(2)INIT(BINASC(0))/**/ ,3 COMP# BIT(2)INIT('01'B
             13566            )/**/,3
             13567    1   BLOCKED# BIT(2)INIT('01'B)/**/,3 SPANNED# BIT(2)INIT('01'B)/**/,3 BUPM# BIT(2)INIT(
             13567            '01'B)
             13568    1  /**/,3 LOAD# BIT(2)INIT('01'B)/**/,3 LSTAOR# BIT(2)INIT('01'B)/**/,3 JRNLBYPASS# BIT
             13568            (2)INIT
             13569    1   ('01'B)/**/,3 GHSTACS# UBIN(4)INIT(0)/**/ UNAL,3 RES# CHAR(4)INIT(BINASC(0))/**/ ,3
             13570    1  KEYX# UBIN(18)INIT(0)/**/ UNAL,3 KEYL# UBIN(9)INIT(0)/**/ UNAL,3 DISP# UBIN(9)INIT(2
             13570            )
             13571    1   /**/ UNAL,3 BLKL# UBIN(18)INIT(0)/**/ UNAL,3 RECL# UBIN(18)INIT(262143)/**/ UNAL,3
             13571            LSLIDE# UBIN(18
             13572    1   )INIT(0)/**/ UNAL,3 LRDL0# UBIN(18)INIT(0)/**/ UNAL,3 SPARE# UBIN(18)INIT(0)
             13573    1   /**/ UNAL,3 XTNSIZE# UBIN(18)INIT(0)/**/ UNAL,3 IXTNSIZE# SBIN INIT(0)/**/,3 NRECS#
             13574    1   SBIN INIT(0)/**/,3 EXPIRE# SBIN INIT(0)/**/,3 EBCDIC# BIT(2)INIT('01'B)/**/ ,3
             13575    1   CNVRT# BIT(2)INIT('01'B)/**/ ,3 XTEND# BIT(2)INIT('01'B)/**/ ,3 XONLY# BIT(1)INIT(
             13575            '0'B)
             13576    1  /**/,3 IOERROK# BIT(2)INIT('01'B)/**/,3 * UBIN(9)UNAL INIT(0)/**/,3 DCBCONLGL# BIT(1
             13576            )INIT
             13577    1   ('1'B)/**/,3 TERMCONLGL# BIT(1)INIT('1'B)/**/,3 OVERFDE# BIT(1)INIT('0'B)
             13578    1   /**/,3 IGNOREFSN# BIT(2)INIT('01'B)/**/,3 SEEDSPECIFIED# BIT(1)INIT('0'B)/**/,3
             13579    1  ANSISPANSEQ# BIT(2)INIT('01'B)/**/,3 * UBIN(10)UNAL INIT(0)/**/,3 VOL# UBIN(9)INIT(0
             13579            )
PL6.E3A0      #001=VXF$OPEN File=VXF$OPEN.:E05TSI                                WED 07/30/97 08:09 Page:41   
             13580    1   /**/ UNAL,3 MAXVOL# UBIN(9)INIT(0)/**/ UNAL,3 CHAIN# UBIN(9)INIT(0)/**/ UNAL,3
             13580            KEYTYPE#
             13581    1  UBIN(9)UNAL INIT(0)/**/,3 ATTR# BIT(18)INIT('0'B)/**/,3 DVFC# CHAR(1)INIT(BINASC(0))
             13581            /**/,
             13582    1   3 * UBIN(9)UNAL INIT(0)/**/,3 SEQCOL# UBIN(9)UNAL INIT(73)/**/,3 SEQ# BIT(2)INIT(
             13582            '01'B)
             13583    1   /**/,3 AU# BIT(2)INIT('01'B)/**/,3 QISS# BIT(2)INIT('01'B)/**/,3 VOLACCESS# UBIN(3)
             13583            UNAL INIT(0
             13584    1   )/**/,3 LINES# UBIN(18)UNAL INIT(0)/**/,3 SEQID# CHAR(4)INIT(' ')/**/,3 EVENT# SBIN
             13585    1  UNAL INIT(0)/**/,3 FSN# UBIN(18)UNAL INIT(0)/**/,3 DBGDCBNO# REDEF FSN# UBIN(18)UNAL
             13585            ,3 DBGSYSID#
             13586    1   REDEF FSN# UBIN(18)UNAL,3 COPIES# UBIN(9)UNAL INIT(0)/**/,3 DENSITY# UBIN(9)UNAL
             13586            INIT(0)/**/,
             13587    1   3 SEED# BIT(36)INIT('0'B)/**/,3 * BIT(36)INIT('0'B)/**/;
       47    13589        %PLIST;
       48    13590        %FPT_OPEN( FPTN=VX_DO_FPT_OPEN,
       49    13591                   DCB=M$DO,
       50    13592                   FUN=CREATE,
       51    13593                   ORG=UR,
       52    13594                   STCLASS="STATIC SYMDEF");
       53    13703        %FPT_OPEN( FPTN=VX_EI_FPT_OPEN,
       54    13704                   DCB=M$EI,
       55    13705                   ASN=FILE,
       56    13706                   ORG=KEYED,
       57    13707                   ACS=SEQUEN,
       58    13708                   FUN=IN,
       59    13709                   SCRUB=YES,
       60    13710                   STCLASS="CONSTANT SYMDEF");
       61    13819        %FPT_OPEN( FPTN=VX_OF_FPT_OPEN,
       62    13820                   DCB=M$OF,
       63    13821                   ASN=FILE,
       64    13822                   ORG=KEYED,
       65    13823                   ACS=DIRECT,
       66    13824                   FUN=IN,
       67    13825                   SCRUB=YES,
       68    13826                   STCLASS="CONSTANT SYMDEF");
       69    13935        %FPT_OPEN( FPTN=VX_RF_FPT_OPEN,
PL6.E3A0      #001=VXF$OPEN File=VXF$OPEN.:E05TSI                                WED 07/30/97 08:09 Page:42   
       70    13936                   DCB=M$RF,
       71    13937                   ASN=FILE,
       72    13938                   ORG=KEYED,
       73    13939                   ACS=DIRECT,
       74    13940                   FUN=CREATE,
       75    13941                   DISP=NAMED,
       76    13942                   IXTNSIZE=10,
       77    13943                   XTNSIZE=10,
       78    13944                   SPARE=50,
       79    13945                   STCLASS="CONSTANT SYMDEF");
       80    14054        %FPT_OPEN( FPTN=F_O, STCLASS=STATIC );
       81    14163        %FPT_PRECORD( DCB=M$OF, KEY=LEMUR_KEY, KEYS=YES );
       82    14184        %FPT_CORRES( FPTN=FPT_CORRES,  DCB1=M$LO,  DCB2=M$DO );
       83    14198        %FPT_ERRMSG( FPTN=VX_FPT_ERRMSG_AUX, STCLASS="SYMREF");
       84    14225        %FPT_WAIT(
       85    14226                   FPTN=FPT_WAIT,
       86    14227                   STCLASS=CONSTANT,
       87    14228                   UNITS=60);
       88    14242        %FPT_UNFID( FPTN=UNFID_DCB,
       89    14243                    LEN=FILE_NAME_SIZE,
       90    14244                    TEXTFID=FILE_NAME );
       91    14262        %FPT_SINPUT( FPTN=SINPUT_BADFID,
       92    14263                     BUF=FILE_NAME,
       93    14264                     DCB=M$UC,
       94    14265                     POSITION=NO );
       95    14302        %E;

             14310    1   /*******************************************************************************
             14311    1   *                                                                              *
             14312    1   *                          ENTRY                                                 *
             14313    1   *                                                                              *
             14314    1   *******************************************************************************/

       96    14318        %LIST;
       97    14319        %ENTRIES;
             14320    1   DCL VXE$ERROR       ENTRY(4);
             14321    1   DCL VXE$ERR         ENTRY(3);
PL6.E3A0      #001=VXF$OPEN File=VXF$OPEN.:E05TSI                                WED 07/30/97 08:09 Page:43   
             14322    1   DCL VXE$MERC        ENTRY;
             14323    1   DCL VXE$ERRMSG      ENTRY(3);
             14324    1   DCL VXR$READ        ENTRY( 3 );
             14325    1   DCL VXW$WRITE       ENTRY( 3 );
             14326    1   DCL VXW$WRITE_DO    ENTRY( 2 );
             14327    1   DCL VXD$B2C         ENTRY( 5 );
             14328    1   DCL VXD$C2B         ENTRY( 3 );
             14329    1   DCL VXA$GET         ENTRY( 3 );
             14330    1   DCL VXF$FREE        ENTRY( 3 );
             14331    1   DCL VXQ$SORT        ENTRY( 7 );
             14332    1   DCL VXY$YESNO       ENTRY( 1 );
       98    14334    1   DCL VXF$CLOSE       ENTRY(3);
       99    14335    1   DCL VXP$PAR              ENTRY(5)  ALTRET;
      100    14336    1   DCL VXS$LST              ENTRY(6)  ALTRET;
      101    14337        %U;
             14338        %LSET LISTDIR='0'B;

             14345    1   /*******************************************************************************
             14346    1   *                                                                              *
             14347    1   *                          UBIN                                                 *
             14348    1   *                                                                              *
             14349    1   *******************************************************************************/

      102    14353        %INDEX;
             14354    1   DCL I          UBIN(36) ALIGNED AUTO;
             14355    1   DCL SI REDEF I SBIN WORD ALIGNED;
             14356    1   DCL J          UBIN(36) ALIGNED AUTO;
             14357    1   DCL SJ REDEF J SBIN WORD ALIGNED;
             14358    1   DCL K          UBIN(36) ALIGNED AUTO;
             14359    1   DCL SK REDEF K SBIN WORD ALIGNED;
             14360    1   DCL L          UBIN(36) ALIGNED AUTO;
             14361    1   DCL SL REDEF L    SBIN WORD ALIGNED;
      103    14363    1   DCL ANSWER               UBIN(36)  ALIGNED   AUTO;
      104    14364    1   DCL ERR             UBIN(36)  ALIGNED   AUTO;
      105    14365    1   DCL NCHARS          UBIN(36)  ALIGNED   AUTO;
      106    14366    1   DCL WKSZ            UBIN(36)  ALIGNED   AUTO;
      107    14367    1   DCL FILE_NAME_SIZE  UBIN(36)  ALIGNED   STATIC;
PL6.E3A0      #001=VXF$OPEN File=VXF$OPEN.:E05TSI                                WED 07/30/97 08:09 Page:44   
      108    14368        %P;
             14369        %LSET LISTDIR='0'B;

             14376    1   /*******************************************************************************
             14377    1   *                                                                              *
             14378    1   *                          PARAMETERS                                             *
             14379    1   *                                                                              *
             14380    1   *******************************************************************************/

      109    14384    1   DCL CURR_P$         PTR;
      110    14385    1   DCL TYPE            UBIN(36);
      111    14386    1   DCL MODE            UBIN(36);
      112    14387        %PTR;
             14388        %LSET LISTDIR='0'B;

             14395    1   /*******************************************************************************
             14396    1   *                                                                              *
             14397    1   *                          PTR                                                 *
             14398    1   *                                                                              *
             14399    1   *******************************************************************************/

      113    14403    1   DCL TEXT$           PTR  ALIGNED   AUTO;
      114    14404    1   DCL WORK$           PTR  ALIGNED   AUTO;
      115    14405    1   DCL WHERE$          PTR  ALIGNED   AUTO;
      116    14406    1   DCL ECURR$          PTR  ALIGNED   AUTO;
      117    14407    1   DCL SRCH$           PTR  ALIGNED   AUTO;
      118    14408    1   DCL NAME$           PTR  ALIGNED   AUTO;
      119    14409    1   DCL CURR$           PTR       ALIGNED   AUTO;
      120    14410    1   DCL DCB$            PTR  ALIGNED   AUTO;
      121    14411    1   DCL ALL$            PTR       ALIGNED   AUTO;
      122    14412        %C;
             14413        %LSET LISTDIR='0'B;

             14420    1   /*******************************************************************************
             14421    1   *                                                                              *
             14422    1   *                          CHAR                                                 *
             14423    1   *                                                                              *
PL6.E3A0      #001=VXF$OPEN File=VXF$OPEN.:E05TSI                                WED 07/30/97 08:09 Page:45   
             14424    1   *******************************************************************************/

      123    14428    1   DCL ENTER_FILE_NAME CHAR(0) CONSTANT INIT(
             14428            'Enter correct file name.  ESC-D recalls bad file name.');
      124    14429    1   DCL FILE_NAME CHAR(40) STATIC;
      125    14430    1   DCL OUT_BUF CHAR (80) STATIC INIT (' ');
      126    14431    1   DCL LIST_SRCH_ACCTS CHAR (0) CONSTANT INIT ('*  Object unit file %>A.%>A used.');
      127    14432    1   DCL SHARED CHAR (7) CONSTANT INIT (':SHARED');
      128    14433    1   DCL SYS    CHAR (4) CONSTANT INIT (':SYS');
      129    14434    1   DCL B_PATCH CHAR (27) CONSTANT INIT ('********************B_PATCH');
      130    14435    1   DCL 1 LEMUR_KEY CONSTANT,
      131    14436    1         2 COUNT UBIN BYTE UNAL INIT(2),
      132    14437    1         2 TEXT CHAR(2) INIT('!"');
      133    14438        /**/
      134    14439        /**/
      135    14440        /**/
      136    14441        /**/
      137    14442    1   DCL VX_N_START_FID       UBIN(36)  ALIGNED   SYMREF;
      138    14443        %SET LISTEXP='0'B;
      139    14444        %SET LISTSUB='0'B;
      140    14445        %SET LISTMAC='0'B;
      141    14446        %EJECT;
PL6.E3A0      #001=VXF$OPEN File=VXF$OPEN.:E05TSI                                WED 07/30/97 08:09 Page:46   
      142    14447        %BANNER(ARG=VXF$OPEN entry);

             14455    1   /*******************************************************************************
             14456    1   *                                                                              *
             14457    1   *                          VXF$OPEN entry                                         *
             14458    1   *                                                                              *
             14459    1   *******************************************************************************/

      143    14463    1         CURR$ = CURR_P$;

  14463 10 000002   200003 470500                    LDP0    @CURR_P$,,AUTO
        10 000003   000000 236100                    LDQ     0,,PR0
        10 000004   200024 756100                    STQ     CURR$,,AUTO

      144    14464    1         SRCH$ = ADDR(NIL);

  14464 10 000005   000001 236000 xsym               LDQ     B_VECTNIL+1
        10 000006   200022 756100                    STQ     SRCH$,,AUTO

      145    14465    1         VX_LIBSRCH$ = ADDR(NIL);

  14465 10 000007   000000 756000 xsym               STQ     VX_LIBSRCH$

      146    14466    2         DO CASE(TYPE);

  14466 10 000010   200004 471500                    LDP1    @TYPE,,AUTO
        10 000011   100000 235100                    LDA     0,,PR1
        10 000012   000004 115007                    CMPA    4,DL
        10 000013   000015 602005 10                 TNC     s:14466+5,AL
        10 000014   000075 710000 10                 TRA     s:14494
        10 000015   000021 710000 10                 TRA     s:14468
        10 000016   000033 710000 10                 TRA     s:14471
        10 000017   000054 710000 10                 TRA     s:14478
        10 000020   000063 710000 10                 TRA     s:14481

      147    14467    2           CASE( @OF );

PL6.E3A0      #001=VXF$OPEN File=VXF$OPEN.:E05TSI                                WED 07/30/97 08:09 Page:47   
      148    14468    2             F_O.V = VX_OF_FPT_OPEN.V;

  14468 10 000021   000000 100400                    MLR     fill='000'O
        10 000022   000136 000124 9                  ADSC9   VX_OF_FPT_OPEN+36        cn=0,n=84
        10 000023   000270 000124 2                  ADSC9   F_O+36                   cn=0,n=84

      149    14469    2             IF NOT CURR$ -> VX$LST.P.B.ACCT THEN SRCH$ = VX_O.ACCTN$.SRCH$;

  14469 10 000024   200024 473500                    LDP3    CURR$,,AUTO
        10 000025   300017 236100                    LDQ     15,,PR3
        10 000026   100000 316003                    CANQ    32768,DU
        10 000027   000114 601000 10                 TNZ     AGAIN

  14469 10 000030   000135 236000 xsym               LDQ     VX_O+93
        10 000031   200022 756100                    STQ     SRCH$,,AUTO
        10 000032   000114 710000 10                 TRA     AGAIN

      150    14470    2           CASE(  @RF );

      151    14471    2             F_O.V = VX_RF_FPT_OPEN.V;

  14471 10 000033   000000 100400                    MLR     fill='000'O
        10 000034   000230 000124 9                  ADSC9   VX_RF_FPT_OPEN+36        cn=0,n=84
        10 000035   000270 000124 2                  ADSC9   F_O+36                   cn=0,n=84

      152    14472    2             F_O.V.FUN# = MODE;

  14472 10 000036   200005 473500                    LDP3    @MODE,,AUTO
        10 000037   300000 236100                    LDQ     0,,PR3
        10 000040   000011 736000                    QLS     9
        10 000041   000271 552010 2                  STBQ    F_O+37,'10'O

      153    14473    2             IF VX_OD.NUM_A (10 /* IXTNSIZE */ ) THEN

  14473 10 000042   000001 236000 xsym               LDQ     VX_OD+1
        10 000043   040000 316003                    CANQ    16384,DU
        10 000044   000047 600000 10                 TZE     s:14475
PL6.E3A0      #001=VXF$OPEN File=VXF$OPEN.:E05TSI                                WED 07/30/97 08:09 Page:48   

      154    14474    2                 F_O.V.IXTNSIZE# = VX_O.NUM.IXTNSIZE;

  14474 10 000045   000047 235000 xsym               LDA     VX_O+39
        10 000046   000301 755000 2                  STA     F_O+45

      155    14475    2             IF VX_OD.NUM_A (11 /* XTNSIZE  */ ) THEN

  14475 10 000047   020000 316003                    CANQ    8192,DU
        10 000050   000114 600000 10                 TZE     AGAIN

      156    14476    2                 F_O.V.XTNSIZE# = VX_O.NUM.XTNSIZE;

  14476 10 000051   000050 720000 xsym               LXL0    VX_O+40
        10 000052   000300 440000 2                  SXL0    F_O+44
        10 000053   000114 710000 10                 TRA     AGAIN

      157    14477    2           CASE( @LF );

      158    14478    2             F_O.V = VX_OF_FPT_OPEN.V;

  14478 10 000054   000000 100400                    MLR     fill='000'O
        10 000055   000136 000124 9                  ADSC9   VX_OF_FPT_OPEN+36        cn=0,n=84
        10 000056   000270 000124 2                  ADSC9   F_O+36                   cn=0,n=84

      159    14479    2             VX_LIBSRCH$ = CURR$ -> VX$LST.LIBSRCH$;

  14479 10 000057   200024 473500                    LDP3    CURR$,,AUTO
        10 000060   300003 236100                    LDQ     3,,PR3
        10 000061   000000 756000 xsym               STQ     VX_LIBSRCH$
        10 000062   000114 710000 10                 TRA     AGAIN

      160    14480    2           CASE( @SF );

      161    14481    2             F_O.V = VX_EI_FPT_OPEN.V;

  14481 10 000063   000000 100400                    MLR     fill='000'O
PL6.E3A0      #001=VXF$OPEN File=VXF$OPEN.:E05TSI                                WED 07/30/97 08:09 Page:49   
        10 000064   000044 000124 9                  ADSC9   VX_EI_FPT_OPEN+36        cn=0,n=84
        10 000065   000270 000124 2                  ADSC9   F_O+36                   cn=0,n=84

      162    14482    2             IF NOT CURR$ -> VX$LST.P.B.ACCT THEN SRCH$ = VX_O.ACCTN$.SRCH$;

  14482 10 000066   200024 473500                    LDP3    CURR$,,AUTO
        10 000067   300017 236100                    LDQ     15,,PR3
        10 000070   100000 316003                    CANQ    32768,DU
        10 000071   000114 601000 10                 TNZ     AGAIN

  14482 10 000072   000135 236000 xsym               LDQ     VX_O+93
        10 000073   200022 756100                    STQ     SRCH$,,AUTO
        10 000074   000114 710000 10                 TRA     AGAIN

      163    14483    2           CASE(ELSE);

      164    14484        /*E*  ERROR: VXF-E$INTERNAL_OPEN_TYPE_VX-0
      165    14485              MESSAGE: Internal LINK error. Bad type passed to VXF$OPEN: Type = %U1.
      166    14486              DESCRIPTION: Self-explanatory.
      167    14487        */
      168    14488                  %NUMBER( NUM1=TYPE, BASE1=10, SIZE1=12 );

  14494 10 000075   000000 236000 11                 LDQ     0
        10 000076   200034 756100                    STQ     ALL$+6,,AUTO
        10 000077   200004 236100                    LDQ     @TYPE,,AUTO
        10 000100   000001 235000 11                 LDA     1
        10 000101   200032 757100                    STAQ    ALL$+4,,AUTO
        10 000102   000002 237000 11                 LDAQ    2
        10 000103   200030 757100                    STAQ    ALL$+2,,AUTO
        10 000104   200030 630500                    EPPR0   ALL$+2,,AUTO
        10 000105   000023 631400 xsym               EPPR1   B_VECTNIL+19
        10 000106   000000 701000 xent               TSX1    VXD$B2C
        10 000107   000000 011000                    NOP     0

      169    14505                  %SCREAM( ERR#=E$INTERNAL_OPEN_TYPE_VX, LEVEL=@E$F_VX, MID="'F'" );

  14506 10 000110   000006 630400 11                 EPPR0   6
PL6.E3A0      #001=VXF$OPEN File=VXF$OPEN.:E05TSI                                WED 07/30/97 08:09 Page:50   
        10 000111   000022 631400 xsym               EPPR1   B_VECTNIL+18
        10 000112   000000 701000 xent               TSX1    VXE$ERROR
        10 000113   000000 011000                    NOP     0

      170    14508    2           END;

      171    14509
      172    14510
      173    14511    1   AGAIN:
      174    14512
      175    14513    1         F_O.NAME_           =    CURR$ -> VX$LST.P.NAME_;

  14513 10 000114   200024 470500       AGAIN        LDP0    CURR$,,AUTO
        10 000115   000000 100500                    MLR     fill='000'O
        10 000116   000005 000010                    ADSC9   5,,PR0                   cn=0,n=8
        10 000117   000232 000010 2                  ADSC9   F_O+6                    cn=0,n=8

      176    14514    1         F_O.PASS_           =    CURR$ -> VX$LST.P.PASS_;

  14514 10 000120   000000 100500                    MLR     fill='000'O
        10 000121   000011 000010                    ADSC9   9,,PR0                   cn=0,n=8
        10 000122   000234 000010 2                  ADSC9   F_O+8                    cn=0,n=8

      177    14515    1         F_O.WSN_            =    CURR$ -> VX$LST.P.WSN_;

  14515 10 000123   000000 100500                    MLR     fill='000'O
        10 000124   000015 000010                    ADSC9   13,,PR0                  cn=0,n=8
        10 000125   000256 000010 2                  ADSC9   F_O+26                   cn=0,n=8

      178    14516    1         IF CURR$ -> VX$LST.P.B.ASN THEN F_O.V.ASN# = CURR$ -> VX$LST.P.ASN;

  14516 10 000126   000017 236100                    LDQ     15,,PR0
        10 000127   200000 316003                    CANQ    65536,DU
        10 000130   000134 600000 10                 TZE     s:14517

  14516 10 000131   000021 236100                    LDQ     17,,PR0
        10 000132   000271 552004 2                  STBQ    F_O+37,'04'O
PL6.E3A0      #001=VXF$OPEN File=VXF$OPEN.:E05TSI                                WED 07/30/97 08:09 Page:51   
        10 000133   000136 710000 10                 TRA     s:14518

      179    14517    1         ELSE F_O.V.ASN# = 0;

  14517 10 000134   000000 236003                    LDQ     0,DU
        10 000135   000271 552004 2                  STBQ    F_O+37,'04'O

      180    14518    1         IF CURR$ -> VX$LST.P.B.RES THEN F_O.V.RES# = CURR$ -> VX$LST.P.RES;

  14518 10 000136   000017 234100                    SZN     15,,PR0
        10 000137   000143 605000 10                 TPL     s:14519

  14518 10 000140   000020 236100                    LDQ     16,,PR0
        10 000141   000274 756000 2                  STQ     F_O+40
        10 000142   000145 710000 10                 TRA     TRY_AGAIN

      181    14519    1         ELSE F_O.V.RES# = BINASC(0);

  14519 10 000143   000012 236000 11                 LDQ     10
        10 000144   000274 756000 2                  STQ     F_O+40

      182    14520
      183    14521
      184    14522    1   TRY_AGAIN:
      185    14523
      186    14524    2         IF SRCH$ ~= ADDR(NIL) THEN DO;

  14524 10 000145   200022 236100       TRY_AGAIN    LDQ     SRCH$,,AUTO
        10 000146   000001 116000 xsym               CMPQ    B_VECTNIL+1
        10 000147   000160 600000 10                 TZE     s:14529

      187    14525    2             F_O.ACCT_ = SRCH$ -> VX$ACCT.ACCT_;

  14525 10 000150   200022 470500                    LDP0    SRCH$,,AUTO
        10 000151   000000 100500                    MLR     fill='000'O
        10 000152   000001 000010                    ADSC9   1,,PR0                   cn=0,n=8
        10 000153   000250 000010 2                  ADSC9   F_O+20                   cn=0,n=8
PL6.E3A0      #001=VXF$OPEN File=VXF$OPEN.:E05TSI                                WED 07/30/97 08:09 Page:52   

      188    14526    2             F_O.SN_   = SRCH$ -> VX$ACCT.SN_;

  14526 10 000154   000000 100500                    MLR     fill='000'O
        10 000155   000003 000010                    ADSC9   3,,PR0                   cn=0,n=8
        10 000156   000226 000010 2                  ADSC9   F_O+2                    cn=0,n=8

      189    14527    2            END;

  14527 10 000157   000202 710000 10                 TRA     OPEN_FILE

      190    14528    1         ELSE
      191    14529    2             IF VX_LIBSRCH$ ~= ADDR(NIL) THEN DO;

  14529 10 000160   000000 236000 xsym               LDQ     VX_LIBSRCH$
        10 000161   000001 116000 xsym               CMPQ    B_VECTNIL+1
        10 000162   000173 600000 10                 TZE     s:14534

      192    14530    2                 F_O.ACCT_ = VX_LIBSRCH$ -> VX$ACCT.ACCT_;

  14530 10 000163   000000 470400 xsym               LDP0    VX_LIBSRCH$
        10 000164   000000 100500                    MLR     fill='000'O
        10 000165   000001 000010                    ADSC9   1,,PR0                   cn=0,n=8
        10 000166   000250 000010 2                  ADSC9   F_O+20                   cn=0,n=8

      193    14531    2                 F_O.SN_ = VX_LIBSRCH$ -> VX$ACCT.SN_;

  14531 10 000167   000000 100500                    MLR     fill='000'O
        10 000170   000003 000010                    ADSC9   3,,PR0                   cn=0,n=8
        10 000171   000226 000010 2                  ADSC9   F_O+2                    cn=0,n=8

      194    14532    2                END;

  14532 10 000172   000202 710000 10                 TRA     OPEN_FILE

      195    14533    2             ELSE DO;

PL6.E3A0      #001=VXF$OPEN File=VXF$OPEN.:E05TSI                                WED 07/30/97 08:09 Page:53   
      196    14534    2                 F_O.ACCT_ = CURR$ -> VX$LST.P.ACCT_;

  14534 10 000173   200024 470500                    LDP0    CURR$,,AUTO
        10 000174   000000 100500                    MLR     fill='000'O
        10 000175   000007 000010                    ADSC9   7,,PR0                   cn=0,n=8
        10 000176   000250 000010 2                  ADSC9   F_O+20                   cn=0,n=8

      197    14535    2                 F_O.SN_ = CURR$ -> VX$LST.P.SN_;

  14535 10 000177   000000 100500                    MLR     fill='000'O
        10 000200   000013 000010                    ADSC9   11,,PR0                  cn=0,n=8
        10 000201   000226 000010 2                  ADSC9   F_O+2                    cn=0,n=8

      198    14536    2                END;

      199    14537
      200    14538
      201    14539    1   OPEN_FILE:
      202    14540
      203    14541    1         CALL M$OPEN( F_O )   ALTRET(ERROR);

  14541 10 000202   000224 630400 2     OPEN_FILE    EPPR0   F_O
        10 000203   450000 713400                    CLIMB   alt,open
        10 000204   410400 401760                    pmme    nvectors=18
        10 000205   000557 702000 10                 TSX2    ERROR

      204    14542        %EJECT;
PL6.E3A0      #001=VXF$OPEN File=VXF$OPEN.:E05TSI                                WED 07/30/97 08:09 Page:54   
      205    14543        /* Do some checks */
      206    14544    2         DO CASE( TYPE );

  14544 10 000206   200004 470500                    LDP0    @TYPE,,AUTO
        10 000207   000000 235100                    LDA     0,,PR0
        10 000210   000003 115007                    CMPA    3,DL
        10 000211   000213 602005 10                 TNC     s:14544+5,AL
        10 000212   000460 710000 10                 TRA     s:14617
        10 000213   000216 710000 10                 TRA     s:14546
        10 000214   000460 710000 10                 TRA     s:14617
        10 000215   000317 710000 10                 TRA     s:14571

      207    14545    2           CASE(@OF);

      208    14546    2             NAME$ = CURR$->VX$LST.P.NAME_.NAME$;

  14546 10 000216   200024 471500                    LDP1    CURR$,,AUTO
        10 000217   100006 236100                    LDQ     6,,PR1
        10 000220   200023 756100                    STQ     NAME$,,AUTO

      209    14547    2             IF VX_OD.SIN.LSAU AND SRCH$ ~= ADDR(NIL) AND

  14547 10 000221   000000 236000 xsym               LDQ     VX_OD
        10 000222   002000 316007                    CANQ    1024,DL
        10 000223   000252 600000 10                 TZE     s:14552
        10 000224   200022 236100                    LDQ     SRCH$,,AUTO
        10 000225   000001 116000 xsym               CMPQ    B_VECTNIL+1
        10 000226   000252 600000 10                 TZE     s:14552
        10 000227   200023 473500                    LDP3    NAME$,,AUTO
        10 000230   300000 236100                    LDQ     0,,PR3
        10 000231   000033 772000                    QRL     27
        10 000232   040000 106500                    CMPC    fill='040'O
        10 000233   300000 200007                    ADSC9   0,,PR3                   cn=1,n=7
        10 000234   000313 000007 9                  ADSC9   SHARED                   cn=0,n=7
        10 000235   000252 600000 10                 TZE     s:14552
        10 000236   040000 106500                    CMPC    fill='040'O
        10 000237   300000 200004                    ADSC9   0,,PR3                   cn=1,n=4
PL6.E3A0      #001=VXF$OPEN File=VXF$OPEN.:E05TSI                                WED 07/30/97 08:09 Page:55   
        10 000240   000315 000004 9                  ADSC9   SYS                      cn=0,n=4
        10 000241   000252 600000 10                 TZE     s:14552
        10 000242   040000 106500                    CMPC    fill='040'O
        10 000243   300000 200033                    ADSC9   0,,PR3                   cn=1,n=27
        10 000244   000316 000033 9                  ADSC9   B_PATCH                  cn=0,n=27
        10 000245   000252 600000 10                 TZE     s:14552

      210    14548    2                     SUBSTR(NAME$->T$C.CHARS,0,7) ~= SHARED AND
      211    14549    2                     SUBSTR(NAME$->T$C.CHARS,0,4) ~= SYS AND
      212    14550    2                     SUBSTR(NAME$->T$C.CHARS,0,27) ~= B_PATCH THEN
      213    14551    2                 CALL X$WRITE (F_FDS, VECTOR(LIST_SRCH_ACCTS), F_O.NAME_, F_O.ACCT_);

  14551 10 000246   000016 630400 11                 EPPR0   14
        10 000247   000022 631400 xsym               EPPR1   B_VECTNIL+18
        10 000250   000000 701000 xent               TSX1    X$WRITE
        10 000251   000000 011000                    NOP     0

      214    14552    3             IF M$OF$ -> F$DCB.ORG# ~= @KEYED THEN DO;

  14552 10 000252   000000 470400 xsym               LDP0    M$OF$
        10 000253   000032 236100                    LDQ     26,,PR0
        10 000254   777000 376003                    ANQ     -512,DU
        10 000255   002000 116003                    CMPQ    1024,DU
        10 000256   000277 600000 10                 TZE     s:14564

      215    14553        /*E*  ERROR: VXF-E$NOTKEYED_VX-0
      216    14554              MESSAGE: %FN is not a keyed file.
      217    14555              DESCRIPTION: Self-explanatory.
      218    14556        */
      219    14557    3                 VX_FPT_ERRMSG.V.DCB# = DCBNUM( M$OF );

  14557 10 000257   000000 236007 xsym               LDQ     M$OF,DL
        10 000260   000000 620006                    EAX0    0,QL
        10 000261   000026 740000 xsym               STX0    VX_FPT_ERRMSG+22

      220    14558                      %SCREAM( ERR#=E$NOTKEYED_VX, MID="'F'" );

PL6.E3A0      #001=VXF$OPEN File=VXF$OPEN.:E05TSI                                WED 07/30/97 08:09 Page:56   
  14559 10 000262   000022 630400 11                 EPPR0   18
        10 000263   000022 631400 xsym               EPPR1   B_VECTNIL+18
        10 000264   000000 701000 xent               TSX1    VXE$ERROR
        10 000265   000000 011000                    NOP     0

      221    14561    3                 CALL VXF$CLOSE( CURR$, @OF );

  14561 10 000266   000003 236000 11                 LDQ     3
        10 000267   200031 756100                    STQ     ALL$+3,,AUTO
        10 000270   200024 630500                    EPPR0   CURR$,,AUTO
        10 000271   200030 450500                    STP0    ALL$+2,,AUTO
        10 000272   200030 630500                    EPPR0   ALL$+2,,AUTO
        10 000273   000020 631400 xsym               EPPR1   B_VECTNIL+16
        10 000274   000000 701000 xent               TSX1    VXF$CLOSE
        10 000275   000000 011000                    NOP     0

      222    14562    3                 GOTO TELL;

  14562 10 000276   000764 710000 10                 TRA     TELL

      223    14563    3                END;                       /* If DCB.ORG */
      224    14564    3             IF SRCH$ ~= ADDR(NIL) THEN DO;

  14564 10 000277   200022 236100                    LDQ     SRCH$,,AUTO
        10 000300   000001 116000 xsym               CMPQ    B_VECTNIL+1
        10 000301   000460 600000 10                 TZE     s:14617

      225    14565    3                 CURR$ -> VX$LST.P.ACCT_ = SRCH$ -> VX$ACCT.ACCT_;

  14565 10 000302   200022 471500                    LDP1    SRCH$,,AUTO
        10 000303   200024 473500                    LDP3    CURR$,,AUTO
        10 000304   000100 100500                    MLR     fill='000'O
        10 000305   100001 000010                    ADSC9   1,,PR1                   cn=0,n=8
        10 000306   300007 000010                    ADSC9   7,,PR3                   cn=0,n=8

      226    14566    3                 CURR$ -> VX$LST.P.SN_ = SRCH$ -> VX$ACCT.SN_;

PL6.E3A0      #001=VXF$OPEN File=VXF$OPEN.:E05TSI                                WED 07/30/97 08:09 Page:57   
  14566 10 000307   200024 473500                    LDP3    CURR$,,AUTO
        10 000310   000100 100500                    MLR     fill='000'O
        10 000311   100003 000010                    ADSC9   3,,PR1                   cn=0,n=8
        10 000312   300013 000010                    ADSC9   11,,PR3                  cn=0,n=8

      227    14567    3                 CURR$ -> VX$LST.P.B.ACCT = @TRUE_B;

  14567 10 000313   200024 473500                    LDP3    CURR$,,AUTO
        10 000314   100000 236003                    LDQ     32768,DU
        10 000315   300017 256100                    ORSQ    15,,PR3

      228    14568    3                END;

  14568 10 000316   000460 710000 10                 TRA     s:14617

      229    14569
      230    14570    2           CASE(@LF);

      231    14571    2             IF M$OF$->F$DCB.ORG# = @KEYED

  14571 10 000317   000000 471400 xsym               LDP1    M$OF$
        10 000320   100032 236100                    LDQ     26,,PR1
        10 000321   777000 376003                    ANQ     -512,DU
        10 000322   002000 116003                    CMPQ    1024,DU
        10 000323   000330 601000 10                 TNZ     NOT_LEMUR_FILE

      232    14572    2             THEN
      233    14573    3             DO;

      234    14574    3                 IF M$OF$->F$DCB.TYPE# ~= 'LE'

  14574 10 000324   100025 720100                    LXL0    21,,PR1
        10 000325   000326 100000 9                  CMPX0   LEMUR_KEY+1
        10 000326   000330 601000 10                 TNZ     NOT_LEMUR_FILE

      235    14575    3                 THEN GOTO NOT_LEMUR_FILE;
      236    14576    3                END;
PL6.E3A0      #001=VXF$OPEN File=VXF$OPEN.:E05TSI                                WED 07/30/97 08:09 Page:58   

  14576 10 000327   000353 710000 10                 TRA     s:14591

      237    14577    3             ELSE DO;

      238    14578        /*E*  ERROR: VXF-E$NOTLIBFILE_VX-0
      239    14579              MESSAGE: %FN is not a library file.
      240    14580              DESCRIPTION: Self-explanatory.
      241    14581        */
      242    14582    3   NOT_LEMUR_FILE:
      243    14583    3                 IF VX_LIBSRCH$ ~= ADDR(NIL) THEN GOTO LIB_ERR;

  14583 10 000330   000000 236000 xsym  NOT_LEMUR_F* LDQ     VX_LIBSRCH$
        10 000331   000001 116000 xsym               CMPQ    B_VECTNIL+1
        10 000332   000716 601000 10                 TNZ     LIB_ERR

      244    14584    3                 VX_FPT_ERRMSG.V.DCB# = DCBNUM( M$OF );

  14584 10 000333   000000 236007 xsym               LDQ     M$OF,DL
        10 000334   000000 620006                    EAX0    0,QL
        10 000335   000026 740000 xsym               STX0    VX_FPT_ERRMSG+22

      245    14585                      %SCREAM( ERR#=E$NOTLIBFILE_VX, LEVEL=@E$W_VX, MID="'F'" );

  14586 10 000336   000027 630400 11                 EPPR0   23
        10 000337   000022 631400 xsym               EPPR1   B_VECTNIL+18
        10 000340   000000 701000 xent               TSX1    VXE$ERROR
        10 000341   000000 011000                    NOP     0

      246    14588    3                 CALL VXF$CLOSE( CURR$, @LF );

  14588 10 000342   000030 236000 11                 LDQ     24
        10 000343   200031 756100                    STQ     ALL$+3,,AUTO
        10 000344   200024 630500                    EPPR0   CURR$,,AUTO
        10 000345   200030 450500                    STP0    ALL$+2,,AUTO
        10 000346   200030 630500                    EPPR0   ALL$+2,,AUTO
        10 000347   000020 631400 xsym               EPPR1   B_VECTNIL+16
PL6.E3A0      #001=VXF$OPEN File=VXF$OPEN.:E05TSI                                WED 07/30/97 08:09 Page:59   
        10 000350   000000 701000 xent               TSX1    VXF$CLOSE
        10 000351   000000 011000                    NOP     0

      247    14589    3                 GOTO TELL;

  14589 10 000352   000764 710000 10                 TRA     TELL

      248    14590    3                END;
      249    14591    2             CURR$ -> VX$LST.LIB.USED = @YES;

  14591 10 000353   000001 221003                    LDX1    1,DU
        10 000354   200024 473500                    LDP3    CURR$,,AUTO
        10 000355   300004 741100                    STX1    4,,PR3

      250    14592    3             IF VX_LIBSRCH$ ~= ADDR(NIL) THEN DO;
             14592                      /* Found library by searching LIBSRCH accounts */

  14592 10 000356   000000 236000 xsym               LDQ     VX_LIBSRCH$
        10 000357   000001 116000 xsym               CMPQ    B_VECTNIL+1
        10 000360   000460 600000 10                 TZE     s:14617

      251    14593    4                 IF VX_LIBSRCH$ -> VX$ACCT.LINK$ ~= ADDR(NIL) THEN DO;
             14593                          /* Not last account in list */

  14593 10 000361   000000 473400 xsym               LDP3    VX_LIBSRCH$
        10 000362   300000 236100                    LDQ     0,,PR3
        10 000363   000001 116000 xsym               CMPQ    B_VECTNIL+1
        10 000364   000441 600000 10                 TZE     s:14610

      252    14594                                            /* Build an entry for the library file */
      253    14595                          %ALLOCATE( PTR$=ALL$, TYPE=@GDP, SIZE="SIZEW(VX$LST)" );

  14596 10 000365   000010 236000 xsym               LDQ     VX_M_ALL+8
        10 000366   000010 136000 xsym               SBLQ    VX_M_FREE+8
        10 000367   000022 116007                    CMPQ    18,DL
        10 000370   000400 604000 10                 TMI     s:14600

PL6.E3A0      #001=VXF$OPEN File=VXF$OPEN.:E05TSI                                WED 07/30/97 08:09 Page:60   
  14597 10 000371   000010 236000 xsym               LDQ     VX_M_FREE+8
        10 000372   000022 736000                    QLS     18
        10 000373   000010 036000 xsym               ADLQ    VX_M_BASE_PTR+8
        10 000374   200026 756100                    STQ     ALL$,,AUTO

  14598 10 000375   000022 236007                    LDQ     18,DL
        10 000376   000010 056000 xsym               ASQ     VX_M_FREE+8

  14599 10 000377   000412 710000 10                 TRA     s:14602

  14600 10 000400   000034 236000 11                 LDQ     28
        10 000401   200032 756100                    STQ     ALL$+4,,AUTO
        10 000402   000035 236000 11                 LDQ     29
        10 000403   200031 756100                    STQ     ALL$+3,,AUTO
        10 000404   200026 634500                    EPPR4   ALL$,,AUTO
        10 000405   200030 454500                    STP4    ALL$+2,,AUTO
        10 000406   200030 630500                    EPPR0   ALL$+2,,AUTO
        10 000407   000021 631400 xsym               EPPR1   B_VECTNIL+17
        10 000410   000000 701000 xent               TSX1    VXA$GET
        10 000411   000000 011000                    NOP     0

      254    14602    4                     ALL$ -> VX$LST = CURR$ -> VX$LST;

  14602 10 000412   200024 470500                    LDP0    CURR$,,AUTO
        10 000413   200026 471500                    LDP1    ALL$,,AUTO
        10 000414   000100 100500                    MLR     fill='000'O
        10 000415   000000 000110                    ADSC9   0,,PR0                   cn=0,n=72
        10 000416   100000 000110                    ADSC9   0,,PR1                   cn=0,n=72

      255    14603    4                     ALL$ -> VX$LST.LIBSRCH$ = VX_LIBSRCH$ -> VX$ACCT.LINK$;

  14603 10 000417   000000 470400 xsym               LDP0    VX_LIBSRCH$
        10 000420   000000 236100                    LDQ     0,,PR0
        10 000421   200026 471500                    LDP1    ALL$,,AUTO
        10 000422   100003 756100                    STQ     3,,PR1

      256    14604    4                     ALL$ -> VX$LST.PRIOR$ = CURR$;
PL6.E3A0      #001=VXF$OPEN File=VXF$OPEN.:E05TSI                                WED 07/30/97 08:09 Page:61   

  14604 10 000423   200024 236100                    LDQ     CURR$,,AUTO
        10 000424   200026 471500                    LDP1    ALL$,,AUTO
        10 000425   100002 756100                    STQ     2,,PR1

      257    14605    4                     IF CURR$ -> VX$LST.LINK$ ~= ADDR(NIL) THEN

  14605 10 000426   200024 471500                    LDP1    CURR$,,AUTO
        10 000427   100000 236100                    LDQ     0,,PR1
        10 000430   000001 116000 xsym               CMPQ    B_VECTNIL+1
        10 000431   000435 600000 10                 TZE     s:14607

      258    14606    4                         CURR$ -> VX$LST.LINK$ -> VX$LST.PRIOR$ = ALL$;

  14606 10 000432   100000 473500                    LDP3    0,,PR1
        10 000433   200026 236100                    LDQ     ALL$,,AUTO
        10 000434   300002 756100                    STQ     2,,PR3

      259    14607    4                     CURR$ -> VX$LST.LINK$ = ALL$;

  14607 10 000435   200026 236100                    LDQ     ALL$,,AUTO
        10 000436   200024 471500                    LDP1    CURR$,,AUTO
        10 000437   100000 756100                    STQ     0,,PR1

      260    14608    4                    END;

  14608 10 000440   000444 710000 10                 TRA     s:14611

      261    14609    3                 ELSE                      /* Last account in list */
      262    14610    3                     CURR$ -> VX$LST.LIBSRCH$ = ADDR(NIL);

  14610 10 000441   000001 236000 xsym               LDQ     B_VECTNIL+1
        10 000442   200024 474500                    LDP4    CURR$,,AUTO
        10 000443   400003 756100                    STQ     3,,PR4

      263    14611    3                 CURR$ -> VX$LST.P.ACCT_ = VX_LIBSRCH$ -> VX$ACCT.ACCT_;

PL6.E3A0      #001=VXF$OPEN File=VXF$OPEN.:E05TSI                                WED 07/30/97 08:09 Page:62   
  14611 10 000444   000000 470400 xsym               LDP0    VX_LIBSRCH$
        10 000445   200024 471500                    LDP1    CURR$,,AUTO
        10 000446   000100 100500                    MLR     fill='000'O
        10 000447   000001 000010                    ADSC9   1,,PR0                   cn=0,n=8
        10 000450   100007 000010                    ADSC9   7,,PR1                   cn=0,n=8

      264    14612    3                 CURR$ -> VX$LST.P.SN_ = VX_LIBSRCH$ -> VX$ACCT.SN_;

  14612 10 000451   200024 471500                    LDP1    CURR$,,AUTO
        10 000452   000100 100500                    MLR     fill='000'O
        10 000453   000003 000010                    ADSC9   3,,PR0                   cn=0,n=8
        10 000454   100013 000010                    ADSC9   11,,PR1                  cn=0,n=8

      265    14613    3                 CURR$ -> VX$LST.P.B.ACCT = @TRUE_B;

  14613 10 000455   200024 471500                    LDP1    CURR$,,AUTO
        10 000456   100000 236003                    LDQ     32768,DU
        10 000457   100017 256100                    ORSQ    15,,PR1

      266    14614    3                END;                   /* If VX_LIBSRCH$ ~= addr(nil) then do; */

      267    14615    2           END;                            /* Case */

      268    14616        %EJECT;
PL6.E3A0      #001=VXF$OPEN File=VXF$OPEN.:E05TSI                                WED 07/30/97 08:09 Page:63   
      269    14617    1         ACCT_VECTOR = F_O.ACCT_;

  14617 10 000460   000250 237000 2                  LDAQ    F_O+20
        10 000461   000036 757000 2                  STAQ    ACCT_VECTOR

      270    14618    1         WORK$ = ACCT_VECTOR.P.POINTER;

  14618 10 000462   000037 236000 2                  LDQ     ACCT_VECTOR+1
        10 000463   200017 756100                    STQ     WORK$,,AUTO

      271    14619    1         WHERE$ = CURR$ -> VX$LST.P.NAME_.NAME$;

  14619 10 000464   200024 470500                    LDP0    CURR$,,AUTO
        10 000465   000006 236100                    LDQ     6,,PR0
        10 000466   200020 756100                    STQ     WHERE$,,AUTO

      272    14620    1         NCHARS = WHERE$ -> T$C.COUNT;

  14620 10 000467   200020 471500                    LDP1    WHERE$,,AUTO
        10 000470   100000 236100                    LDQ     0,,PR1
        10 000471   000033 772000                    QRL     27
        10 000472   200014 756100                    STQ     NCHARS,,AUTO

      273    14621    1         FILE_NAME = WHERE$ -> T$C.CHARS;

  14621 10 000473   100000 236100                    LDQ     0,,PR1
        10 000474   000033 772000                    QRL     27
        10 000475   000000 620006                    EAX0    0,QL
        10 000476   040000 100540                    MLR     fill='040'O
        10 000477   100000 200010                    ADSC9   0,,PR1                   cn=1,n=*X0
        10 000500   000373 000050 2                  ADSC9   FILE_NAME                cn=0,n=40

      274    14622    2         IF WORK$ ~= ADDR(NIL) THEN DO;

  14622 10 000501   200017 236100                    LDQ     WORK$,,AUTO
        10 000502   000001 116000 xsym               CMPQ    B_VECTNIL+1
        10 000503   000530 600000 10                 TZE     s:14626
PL6.E3A0      #001=VXF$OPEN File=VXF$OPEN.:E05TSI                                WED 07/30/97 08:09 Page:64   

      275    14623    2             CALL INSERT( FILE_NAME, NCHARS, , '.', WORK$ -> F$ACCT_ );

  14623 10 000504   200014 720100                    LXL0    NCHARS,,AUTO
        10 000505   777727 620010                    EAX0    -41,X0
        10 000506   777777 660003                    ERX0    -1,DU
        10 000507   200014 235100                    LDA     NCHARS,,AUTO
        10 000510   040045 100400                    MLR     fill='040'O
        10 000511   000036 000001 11                 ADSC9   30                       cn=0,n=1
        10 000512   000373 000010 2                  ADSC9   FILE_NAME,A              cn=0,n=*X0
        10 000513   200014 236100                    LDQ     NCHARS,,AUTO
        10 000514   000047 116007                    CMPQ    39,DL
        10 000515   000524 603000 10                 TRC     s:14624
        10 000516   777730 621006                    EAX1    -40,QL
        10 000517   777777 661003                    ERX1    -1,DU
        10 000520   200017 473500                    LDP3    WORK$,,AUTO
        10 000521   040046 100500                    MLR     fill='040'O
        10 000522   300000 000010                    ADSC9   0,,PR3                   cn=0,n=8
        10 000523   000373 200011 2                  ADSC9   FILE_NAME,Q              cn=1,n=*X1

      276    14624    2             CALL INDEX(NCHARS,' ',FILE_NAME);

  14624 10 000524   000000 124400                    SCM     mask='000'O
        10 000525   000373 000050 2                  ADSC9   FILE_NAME                cn=0,n=40
        10 000526   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
        10 000527   200014 000100                    ARG     NCHARS,,AUTO

      277    14625    2            END;

      278    14626    2         DO CASE( TYPE );

  14626 10 000530   200004 473500                    LDP3    @TYPE,,AUTO
        10 000531   300000 235100                    LDA     0,,PR3
        10 000532   000004 115007                    CMPA    4,DL
        10 000533   000535 602005 10                 TNC     s:14626+5,AL
        10 000534   000556 710000 10                 TRA     s:14634
        10 000535   000541 710000 10                 TRA     s:14628
PL6.E3A0      #001=VXF$OPEN File=VXF$OPEN.:E05TSI                                WED 07/30/97 08:09 Page:65   
        10 000536   000550 710000 10                 TRA     s:14631
        10 000537   000541 710000 10                 TRA     s:14628
        10 000540   000541 710000 10                 TRA     s:14628

      279    14627    2           CASE( @OF, @LF, @SF );

      280    14628    2             VX_OK.FILE.OFNAME.COUNT = NCHARS;

  14628 10 000541   200014 236100                    LDQ     NCHARS,,AUTO
        10 000542   000033 736000                    QLS     27
        10 000543   000023 552040 xsym               STBQ    VX_OK+19,'40'O

      281    14629    2             VX_OK.FILE.OFNAME.CHARS = FILE_NAME;

  14629 10 000544   040000 100400                    MLR     fill='040'O
        10 000545   000373 000050 2                  ADSC9   FILE_NAME                cn=0,n=40
        10 000546   000023 200050 xsym               ADSC9   VX_OK+19                 cn=1,n=40
        10 000547   000556 710000 10                 TRA     s:14634

      282    14630    2           CASE( @RF );

      283    14631    2             VX_OK.FILE.RFNAME.COUNT = NCHARS;

  14631 10 000550   200014 236100                    LDQ     NCHARS,,AUTO
        10 000551   000033 736000                    QLS     27
        10 000552   000036 552040 xsym               STBQ    VX_OK+30,'40'O

      284    14632    2             VX_OK.FILE.RFNAME.CHARS = FILE_NAME;

  14632 10 000553   040000 100400                    MLR     fill='040'O
        10 000554   000373 000050 2                  ADSC9   FILE_NAME                cn=0,n=40
        10 000555   000036 200050 xsym               ADSC9   VX_OK+30                 cn=1,n=40

      285    14633    2           END;

      286    14634    1         RETURN;

PL6.E3A0      #001=VXF$OPEN File=VXF$OPEN.:E05TSI                                WED 07/30/97 08:09 Page:66   
  14634 10 000556   000000 702200 xent               TSX2  ! X66_ARET

  14632 10 000557                       ERROR        null
      287    14635        %EJECT;
PL6.E3A0      #001=VXF$OPEN File=VXF$OPEN.:E05TSI                                WED 07/30/97 08:09 Page:67   
      288    14636    1   ERROR:;
      289    14637    2         IF VX_PASS > 1 THEN DO;

  14637 10 000557   000000 235000 xsym               LDA     VX_PASS
        10 000560   000002 115007                    CMPA    2,DL
        10 000561   000567 602000 10                 TNC     s:14643

      290    14638    2             CALL M$MERC              ALTRET(MERC_ERROR);

  14638 10 000562   410007 713400                    CLIMB   alt,+4103
        10 000563   000000 401760                    pmme    nvectors=0
        10 000564   001165 702000 10                 TSX2    MERC_ERROR

      291    14639                  %ERROR_IT;

  14640 10 000565   000002 713400                    CLIMB   err
        10 000566   000000 401760                    pmme    nvectors=0

      292    14642    2            END;

      293    14643    1         ERR = @ALT_ERROR;

  14643 10 000567   000000 470400 xsym               LDP0    B$TCB$
        10 000570   000000 471500                    LDP1    0,,PR0
        10 000571   100102 236100                    LDQ     66,,PR1
        10 000572   000003 772000                    QRL     3
        10 000573   037777 376007                    ANQ     16383,DL
        10 000574   200013 756100                    STQ     ERR,,AUTO

      294    14644    1         IF ERR = %E$DCBOPEN THEN RETURN;

  14644 10 000575   000144 116007                    CMPQ    100,DL
        10 000576   000600 601000 10                 TNZ     s:14645

  14644 10 000577   000000 702200 xent               TSX2  ! X66_ARET

      295    14645    2         IF ERR = %E$FILEBUSY THEN DO;
PL6.E3A0      #001=VXF$OPEN File=VXF$OPEN.:E05TSI                                WED 07/30/97 08:09 Page:68   

  14645 10 000600   000155 116007                    CMPQ    109,DL
        10 000601   000635 601000 10                 TNZ     s:14673

      296    14646    2             VX_FPT_ERRMSG.V.DCB# = F_O.V.DCB# ;

  14646 10 000602   000270 220000 2                  LDX0    F_O+36
        10 000603   000026 740000 xsym               STX0    VX_FPT_ERRMSG+22

      297    14647    3             IF VX_ONLINE = @YES THEN DO;  /*Online*/

  14647 10 000604   000000 235000 xsym               LDA     VX_ONLINE
        10 000605   000001 115007                    CMPA    1,DL
        10 000606   000630 601000 10                 TNZ     s:14667

      298    14648        /*E*  ERROR: VXF-E$FILEBUSY_VX-0
      299    14649              MESSAGE: %FN is busy. Do you wish to wait?
      300    14650              DESCRIPTION: Self-explanatory.
      301    14651        */
      302    14652                      %SCREAM( ERR#=E$FILEBUSY_VX, MID="'F'" );

  14653 10 000607   000040 630400 11                 EPPR0   32
        10 000610   000022 631400 xsym               EPPR1   B_VECTNIL+18
        10 000611   000000 701000 xent               TSX1    VXE$ERROR
        10 000612   000000 011000                    NOP     0

      303    14655    3                 CALL VXY$YESNO( ANSWER );

  14655 10 000613   200012 630500                    EPPR0   ANSWER,,AUTO
        10 000614   200030 450500                    STP0    ALL$+2,,AUTO
        10 000615   200030 630500                    EPPR0   ALL$+2,,AUTO
        10 000616   000017 631400 xsym               EPPR1   B_VECTNIL+15
        10 000617   000000 701000 xent               TSX1    VXY$YESNO
        10 000620   000000 011000                    NOP     0

      304    14656    4                 IF ANSWER = @YES THEN DO;

PL6.E3A0      #001=VXF$OPEN File=VXF$OPEN.:E05TSI                                WED 07/30/97 08:09 Page:69   
  14656 10 000621   200012 235100                    LDA     ANSWER,,AUTO
        10 000622   000001 115007                    CMPA    1,DL
        10 000623   000635 601000 10                 TNZ     s:14673

      305    14657    4                     CALL M$WAIT( FPT_WAIT );

  14657 10 000624   000256 630400 9                  EPPR0   FPT_WAIT
        10 000625   020006 713400                    CLIMB   8198
        10 000626   400400 401760                    pmme    nvectors=2

      306    14658    4                     GOTO OPEN_FILE;

  14658 10 000627   000202 710000 10                 TRA     OPEN_FILE

      307    14659    4                    END;                   /* If/answer */
      308    14660    3                END;                       /* E$FILEBUSY - if/do */
      309    14661    3             ELSE DO;                      /*Batch - E$FILEBUSY/VX_ONLINE */

      310    14662        /*E*  ERROR: VXF-E$FILEBUSY_BATCH_VX-0
      311    14663              MESSAGE: %FN is busy.
      312    14664              DESCRIPTION: Self-explanatory.
      313    14665        */
      314    14666                      %SCREAM( ERR#=E$FILEBUSY_BATCH_VX, MID="'F'" );

  14667 10 000630   000045 630400 11                 EPPR0   37
        10 000631   000022 631400 xsym               EPPR1   B_VECTNIL+18
        10 000632   000000 701000 xent               TSX1    VXE$ERROR
        10 000633   000000 011000                    NOP     0

      315    14669    3                 GOTO CHECK_MES;

  14669 10 000634   001154 710000 10                 TRA     CHECK_MES

      316    14670    3                END;                       /* Else - batch */
      317    14671    2            END;
      318    14672        /* Here for file does not exist checking */
      319    14673    2         IF ERR ~= %E$NOFILE THEN DO;
PL6.E3A0      #001=VXF$OPEN File=VXF$OPEN.:E05TSI                                WED 07/30/97 08:09 Page:70   

  14673 10 000635   200013 235100                    LDA     ERR,,AUTO
        10 000636   000161 115007                    CMPA    113,DL
        10 000637   000644 600000 10                 TZE     s:14678

      320    14674    2             CALL M$MERC     ALTRET(MERC_ERROR);

  14674 10 000640   410007 713400                    CLIMB   alt,+4103
        10 000641   000000 401760                    pmme    nvectors=0
        10 000642   001165 702000 10                 TSX2    MERC_ERROR

      321    14675    2             RETURN;

  14675 10 000643   000000 702200 xent               TSX2  ! X66_ARET

      322    14676    2            END;
      323    14677        /* Here => file does not exist */
      324    14678    2         DO CASE( TYPE );

  14678 10 000644   200004 470500                    LDP0    @TYPE,,AUTO
        10 000645   000000 235100                    LDA     0,,PR0
        10 000646   000004 115007                    CMPA    4,DL
        10 000647   000651 602005 10                 TNC     s:14678+5,AL
        10 000650   000764 710000 10                 TRA     TELL
        10 000651   000655 710000 10                 TRA     s:14680
        10 000652   000655 710000 10                 TRA     s:14680
        10 000653   000713 710000 10                 TRA     s:14706
        10 000654   000655 710000 10                 TRA     s:14680

      325    14679    2           CASE( @OF, @SF, @RF );

      326    14680    3             IF SRCH$ ~= ADDR(NIL) THEN DO;
             14680                      /* Searching SRCH account list for the file */

  14680 10 000655   200022 236100                    LDQ     SRCH$,,AUTO
        10 000656   000001 116000 xsym               CMPQ    B_VECTNIL+1
        10 000657   000704 600000 10                 TZE     s:14696
PL6.E3A0      #001=VXF$OPEN File=VXF$OPEN.:E05TSI                                WED 07/30/97 08:09 Page:71   

      327    14681    3                 SRCH$ = SRCH$ -> VX$ACCT.LINK$;

  14681 10 000660   200022 471500                    LDP1    SRCH$,,AUTO
        10 000661   100000 236100                    LDQ     0,,PR1
        10 000662   200022 756100                    STQ     SRCH$,,AUTO

      328    14682    3                 IF SRCH$ ~= ADDR(NIL) THEN GOTO TRY_AGAIN; /* Try next account */

  14682 10 000663   000001 116000 xsym               CMPQ    B_VECTNIL+1
        10 000664   000145 601000 10                 TNZ     TRY_AGAIN

      329    14683        /*E*  ERROR: VXF-E$NOFILE1_VX-0
      330    14684              MESSAGE: The file %U1 does not exist in any of the
      331    14685                       specified SRCH accounts.
      332    14686              DESCRIPTION: Self-explanatory.
      333    14687        */
      334    14688    3                 VX_EFIELD1.COUNT = CURR$ -> VX$LST.P.NAME_.NAME$ -> T$C.COUNT;

  14688 10 000665   200024 471500                    LDP1    CURR$,,AUTO
        10 000666   100006 473500                    LDP3    6,,PR1
        10 000667   300000 236100                    LDQ     0,,PR3
        10 000670   000000 552040 xsym               STBQ    VX_EFIELD1,'40'O

      335    14689    3                 VX_EFIELD1.CHARS = CURR$ -> VX$LST.P.NAME_.NAME$ -> T$C.CHARS;

  14689 10 000671   300000 236100                    LDQ     0,,PR3
        10 000672   000033 772000                    QRL     27
        10 000673   000000 620006                    EAX0    0,QL
        10 000674   040000 100540                    MLR     fill='040'O
        10 000675   300000 200010                    ADSC9   0,,PR3                   cn=1,n=*X0
        10 000676   000000 200117 xsym               ADSC9   VX_EFIELD1               cn=1,n=79

      336    14690                      %SCREAM( ERR#=E$NOFILE1_VX, LEVEL=@E$S_VX, MID="'F'" );

  14691 10 000677   000052 630400 11                 EPPR0   42
        10 000700   000022 631400 xsym               EPPR1   B_VECTNIL+18
PL6.E3A0      #001=VXF$OPEN File=VXF$OPEN.:E05TSI                                WED 07/30/97 08:09 Page:72   
        10 000701   000000 701000 xent               TSX1    VXE$ERROR
        10 000702   000000 011000                    NOP     0

      337    14693
      338    14694    3                END;

  14694 10 000703   000764 710000 10                 TRA     TELL

      339    14695    3             ELSE DO;                      /* File does not exist */

      340    14696    3                 VX_FPT_ERRMSG.V.DCB# = F_O.V.DCB#;

  14696 10 000704   000270 220000 2                  LDX0    F_O+36
        10 000705   000026 740000 xsym               STX0    VX_FPT_ERRMSG+22

      341    14697        /*E*  ERROR: VXF-E$NOFILE2_VX-0
      342    14698              MESSAGE: The file %FN does not exist in DP#%SN.%AC.
      343    14699              DESCRIPTION: Self-explanatory.
      344    14700        */
      345    14701                      %SCREAM( ERR#=E$NOFILE2_VX, LEVEL=@E$S_VX, MID="'F'" );

  14702 10 000706   000057 630400 11                 EPPR0   47
        10 000707   000022 631400 xsym               EPPR1   B_VECTNIL+18
        10 000710   000000 701000 xent               TSX1    VXE$ERROR
        10 000711   000000 011000                    NOP     0

      346    14704    3                END;

  14704 10 000712   000764 710000 10                 TRA     TELL

      347    14705    2           CASE( @LF );

      348    14706    3             IF VX_LIBSRCH$ ~= ADDR(NIL) THEN DO;
             14706                      /* Searching accounts for library file */

  14706 10 000713   000000 236000 xsym               LDQ     VX_LIBSRCH$
        10 000714   000001 116000 xsym               CMPQ    B_VECTNIL+1
PL6.E3A0      #001=VXF$OPEN File=VXF$OPEN.:E05TSI                                WED 07/30/97 08:09 Page:73   
        10 000715   000755 600000 10                 TZE     s:14734

      349    14707    3   LIB_ERR:      VX_LIBSRCH$ = VX_LIBSRCH$ -> VX$ACCT.LINK$; /* Try next account */

  14707 10 000716   000000 471400 xsym  LIB_ERR      LDP1    VX_LIBSRCH$
        10 000717   100000 236100                    LDQ     0,,PR1
        10 000720   000000 756000 xsym               STQ     VX_LIBSRCH$

      350    14708    3                 IF VX_LIBSRCH$ ~= ADDR(NIL) THEN GOTO TRY_AGAIN;

  14708 10 000721   000001 116000 xsym               CMPQ    B_VECTNIL+1
        10 000722   000145 601000 10                 TNZ     TRY_AGAIN

      351    14709    4                 IF CURR$ -> VX$LST.LIB.USED = @YES THEN DO;

  14709 10 000723   200024 471500                    LDP1    CURR$,,AUTO
        10 000724   100004 220100                    LDX0    4,,PR1
        10 000725   000001 100003                    CMPX0   1,DU
        10 000726   000737 601000 10                 TNZ     s:14721

      352    14710    4                     CURR$ -> VX$LST.PRIOR$ -> VX$LST.LINK$

  14710 10 000727   100002 473500                    LDP3    2,,PR1
        10 000730   100000 236100                    LDQ     0,,PR1
        10 000731   300000 756100                    STQ     0,,PR3

      353    14711    4                             = CURR$ -> VX$LST.LINK$; /* Delete from library list */
      354    14712    4                     CURR_P$ = CURR$ -> VX$LST.LINK$; /* Step to next library file */

  14712 10 000732   200024 471500                    LDP1    CURR$,,AUTO
        10 000733   100000 236100                    LDQ     0,,PR1
        10 000734   200003 473500                    LDP3    @CURR_P$,,AUTO
        10 000735   300000 756100                    STQ     0,,PR3

      355    14713    4                     ALTRETURN;

  14713 10 000736   000000 702200 xent               TSX2  ! X66_AALT
PL6.E3A0      #001=VXF$OPEN File=VXF$OPEN.:E05TSI                                WED 07/30/97 08:09 Page:74   

      356    14714    4                    END;
      357    14715    4                 ELSE DO;

      358    14716        /*E*  ERROR: VXF-E$NOLIBFILE1_VX-0
      359    14717              MESSAGE: A library file named %U1 does not exist in any of the
      360    14718                       specified LIBSRCH accounts.
      361    14719              DESCRIPTION: Self-explanatory.
      362    14720        */
      363    14721    4                     VX_EFIELD1.COUNT = CURR$ -> VX$LST.P.NAME_.NAME$ -> T$C.COUNT;

  14721 10 000737   100006 473500                    LDP3    6,,PR1
        10 000740   300000 236100                    LDQ     0,,PR3
        10 000741   000000 552040 xsym               STBQ    VX_EFIELD1,'40'O

      364    14722    4                     VX_EFIELD1.CHARS = CURR$ -> VX$LST.P.NAME_.NAME$ -> T$C.CHARS;

  14722 10 000742   300000 236100                    LDQ     0,,PR3
        10 000743   000033 772000                    QRL     27
        10 000744   000000 621006                    EAX1    0,QL
        10 000745   040000 100540                    MLR     fill='040'O
        10 000746   300000 200011                    ADSC9   0,,PR3                   cn=1,n=*X1
        10 000747   000000 200117 xsym               ADSC9   VX_EFIELD1               cn=1,n=79

      365    14723                          %SCREAM( ERR#=E$NOLIBFILE1_VX, MID="'F'",
      366    14724                          LEVEL=@E$W_VX );

  14725 10 000750   000064 630400 11                 EPPR0   52
        10 000751   000022 631400 xsym               EPPR1   B_VECTNIL+18
        10 000752   000000 701000 xent               TSX1    VXE$ERROR
        10 000753   000000 011000                    NOP     0

      367    14727    4                    END;

      368    14728    3                END;

  14728 10 000754   000764 710000 10                 TRA     TELL
PL6.E3A0      #001=VXF$OPEN File=VXF$OPEN.:E05TSI                                WED 07/30/97 08:09 Page:75   

      369    14729    3             ELSE DO;

      370    14730        /*E*  ERROR: VXF-E$NOLIBFILE2_VX-0
      371    14731              MESSAGE: The library file %FN does not exist.
      372    14732              DESCRIPTION: Self-explanatory.
      373    14733        */
      374    14734    3                 VX_FPT_ERRMSG.V.DCB# = DCBNUM( M$OF );

  14734 10 000755   000000 236007 xsym               LDQ     M$OF,DL
        10 000756   000000 620006                    EAX0    0,QL
        10 000757   000026 740000 xsym               STX0    VX_FPT_ERRMSG+22

      375    14735                      %SCREAM( ERR#=E$NOLIBFILE2_VX, LEVEL=@E$W_VX, MID="'F'" );

  14736 10 000760   000071 630400 11                 EPPR0   57
        10 000761   000022 631400 xsym               EPPR1   B_VECTNIL+18
        10 000762   000000 701000 xent               TSX1    VXE$ERROR
        10 000763   000000 011000                    NOP     0

      376    14738    3                END;

      377    14739
      378    14740    2           END;                            /* DO CASE */

      379    14741        %EJECT;
PL6.E3A0      #001=VXF$OPEN File=VXF$OPEN.:E05TSI                                WED 07/30/97 08:09 Page:76   
      380    14742    2   TELL: IF VX_ONLINE ~= 0 THEN DO;

  14742 10 000764   000000 235000 xsym  TELL         LDA     VX_ONLINE
        10 000765   001154 600000 10                 TZE     CHECK_MES

      381    14743    2   TELL_AGAIN:
      382    14744    2             UNFID_DCB.V.DCB# = F_O.V.DCB#;

  14744 10 000766   000270 220000 2     TELL_AGAIN   LDX0    F_O+36
        10 000767   000360 740000 2                  STX0    UNFID_DCB+20

      383    14745    2             CALL M$UNFID( UNFID_DCB );

  14745 10 000770   000334 630400 2                  EPPR0   UNFID_DCB
        10 000771   020021 713400                    CLIMB   8209
        10 000772   404400 401760                    pmme    nvectors=10

      384    14746    2             SINPUT_BADFID.BUF_.BOUND = FILE_NAME_SIZE - 1;

  14746 10 000773   000372 236000 2                  LDQ     FILE_NAME_SIZE
        10 000774   000001 136007                    SBLQ    1,DL
        10 000775   000020 736000                    QLS     16
        10 000776   000366 676000 2                  ERQ     SINPUT_BADFID+4
        10 000777   000034 376000 xsym               ANQ     B_VECTNIL+28
        10 001000   000366 656000 2                  ERSQ    SINPUT_BADFID+4

      385    14747    2             CALL M$SINPUT( SINPUT_BADFID );

  14747 10 001001   000362 630400 2                  EPPR0   SINPUT_BADFID
        10 001002   160013 713400                    CLIMB   57355
        10 001003   401000 401760                    pmme    nvectors=3

      386    14748    2             CALL VXW$WRITE( ENTER_FILE_NAME, LENGTHC(ENTER_FILE_NAME), 1);

  14748 10 001004   000076 630400 11                 EPPR0   62
        10 001005   000021 631400 xsym               EPPR1   B_VECTNIL+17
        10 001006   000000 701000 xent               TSX1    VXW$WRITE
PL6.E3A0      #001=VXF$OPEN File=VXF$OPEN.:E05TSI                                WED 07/30/97 08:09 Page:77   
        10 001007   000000 011000                    NOP     0

      387    14749        /* Set up for X$PARSE                                        */
      388    14750    2             WKSZ = 256/4;

  14750 10 001010   000100 235007                    LDA     64,DL
        10 001011   200015 755100                    STA     WKSZ,,AUTO

      389    14751    2             CALL VXP$PAR( 2, ADDR(VX_N_START_FID), TEXT$, NCHARS, WKSZ )  ALTRET(
             14751                      RELEASE);

  14751 10 001012   000101 236000 11                 LDQ     65
        10 001013   200030 756100                    STQ     ALL$+2,,AUTO
        10 001014   200015 630500                    EPPR0   WKSZ,,AUTO
        10 001015   200035 450500                    STP0    ALL$+7,,AUTO
        10 001016   200014 631500                    EPPR1   NCHARS,,AUTO
        10 001017   200034 451500                    STP1    ALL$+6,,AUTO
        10 001020   200016 633500                    EPPR3   TEXT$,,AUTO
        10 001021   200033 453500                    STP3    ALL$+5,,AUTO
        10 001022   200030 634500                    EPPR4   ALL$+2,,AUTO
        10 001023   200032 454500                    STP4    ALL$+4,,AUTO
        10 001024   000030 236000 11                 LDQ     24
        10 001025   200031 756100                    STQ     ALL$+3,,AUTO
        10 001026   200031 630500                    EPPR0   ALL$+3,,AUTO
        10 001027   000023 631400 xsym               EPPR1   B_VECTNIL+19
        10 001030   000000 701000 xent               TSX1    VXP$PAR
        10 001031   001141 702000 10                 TSX2    RELEASE

      390    14752    2             I = CURR$ -> VX$LST.TYPE;

  14752 10 001032   200024 470500                    LDP0    CURR$,,AUTO
        10 001033   000001 236100                    LDQ     1,,PR0
        10 001034   000022 772000                    QRL     18
        10 001035   200006 756100                    STQ     I,,AUTO

      391    14753    2             J = CURR$ -> VX$LST.SUB_TYPE;

PL6.E3A0      #001=VXF$OPEN File=VXF$OPEN.:E05TSI                                WED 07/30/97 08:09 Page:78   
  14753 10 001036   000001 236100                    LDQ     1,,PR0
        10 001037   777777 376007                    ANQ     -1,DL
        10 001040   200007 756100                    STQ     J,,AUTO

      392    14754    2             CALL VXS$LST( CURR$, VX_P_PCB_MAIN.OUT$ -> O$B.SUBLK$(0) ->

  14754 10 001041   000003 471400 xsym               LDP1    VX_P_PCB_MAIN+3
        10 001042   100003 473500                    LDP3    3,,PR1
        10 001043   300003 474500                    LDP4    3,,PR3
        10 001044   000001 236000 xsym               LDQ     B_VECTNIL+1
        10 001045   200030 756100                    STQ     ALL$+2,,AUTO
        10 001046   000103 236000 11                 LDQ     67
        10 001047   200037 756100                    STQ     ALL$+9,,AUTO
        10 001050   200030 633500                    EPPR3   ALL$+2,,AUTO
        10 001051   200036 453500                    STP3    ALL$+8,,AUTO
        10 001052   200007 635500                    EPPR5   J,,AUTO
        10 001053   200035 455500                    STP5    ALL$+7,,AUTO
        10 001054   200006 636500                    EPPR6   I,,AUTO
        10 001055   200034 456500                    STP6    ALL$+6,,AUTO
        10 001056   400003 637500                    EPPR7   3,,PR4
        10 001057   200033 457500                    STP7    ALL$+5,,AUTO
        10 001060   200024 634500                    EPPR4   CURR$,,AUTO
        10 001061   200032 454500                    STP4    ALL$+4,,AUTO
        10 001062   200032 630500                    EPPR0   ALL$+4,,AUTO
        10 001063   000024 631400 xsym               EPPR1   B_VECTNIL+20
        10 001064   000000 701000 xent               TSX1    VXS$LST
        10 001065   000000 011000                    NOP     0

      393    14755    2                     O$B.SUBLK$(0) -> O$B.SUBLK$(0), I, J, ADDR(NIL), -8 );
      394    14756        /*
      395    14757                                          Setup pointers to search accounts */
      396    14758    3             IF TYPE = @LF THEN DO;

  14758 10 001066   200004 470500                    LDP0    @TYPE,,AUTO
        10 001067   000000 235100                    LDA     0,,PR0
        10 001070   000002 115007                    CMPA    2,DL
        10 001071   001113 601000 10                 TNZ     s:14767
PL6.E3A0      #001=VXF$OPEN File=VXF$OPEN.:E05TSI                                WED 07/30/97 08:09 Page:79   

      397    14759    3                 CURR$ -> VX$LST.LIB = '0'B;

  14759 10 001072   200024 471500                    LDP1    CURR$,,AUTO
        10 001073   100004 450100                    STZ     4,,PR1

      398    14760    3                 IF CURR$ -> VX$LST.P.B.ACCT

  14760 10 001074   200024 471500                    LDP1    CURR$,,AUTO
        10 001075   100017 236100                    LDQ     15,,PR1
        10 001076   100000 316003                    CANQ    32768,DU
        10 001077   001103 600000 10                 TZE     s:14762

      399    14761    3                 THEN CURR$ -> VX$LST.LIBSRCH$ = ADDR(NIL);

  14761 10 001100   000001 236000 xsym               LDQ     B_VECTNIL+1
        10 001101   100003 756100                    STQ     3,,PR1
        10 001102   001105 710000 10                 TRA     s:14763

      400    14762    3                 ELSE CURR$ -> VX$LST.LIBSRCH$ = VX_O.ACCTN$.LIBSRCH$;

  14762 10 001103   000134 236000 xsym               LDQ     VX_O+92
        10 001104   100003 756100                    STQ     3,,PR1

      401    14763    3                 VX_LIBSRCH$ = CURR$ ->VX$LST.LIBSRCH$;

  14763 10 001105   200024 471500                    LDP1    CURR$,,AUTO
        10 001106   100003 236100                    LDQ     3,,PR1
        10 001107   000000 756000 xsym               STQ     VX_LIBSRCH$

      402    14764    3                 SRCH$ = ADDR(NIL);

  14764 10 001110   000001 236000 xsym               LDQ     B_VECTNIL+1
        10 001111   200022 756100                    STQ     SRCH$,,AUTO

      403    14765    3                END;

PL6.E3A0      #001=VXF$OPEN File=VXF$OPEN.:E05TSI                                WED 07/30/97 08:09 Page:80   
  14765 10 001112   001126 710000 10                 TRA     s:14772

      404    14766    3             ELSE DO;                      /* TYPE = @OF OR @SF */

      405    14767    3                 VX_LIBSRCH$ = ADDR(NIL);

  14767 10 001113   000001 236000 xsym               LDQ     B_VECTNIL+1
        10 001114   000000 756000 xsym               STQ     VX_LIBSRCH$

      406    14768    3                 IF  NOT CURR$ -> VX$LST.P.B.ACCT

  14768 10 001115   200024 471500                    LDP1    CURR$,,AUTO
        10 001116   100017 236100                    LDQ     15,,PR1
        10 001117   100000 316003                    CANQ    32768,DU
        10 001120   001124 601000 10                 TNZ     s:14770

      407    14769    3                 THEN SRCH$ = VX_O.ACCTN$.SRCH$;

  14769 10 001121   000135 236000 xsym               LDQ     VX_O+93
        10 001122   200022 756100                    STQ     SRCH$,,AUTO
        10 001123   001126 710000 10                 TRA     s:14772

      408    14770    3                 ELSE SRCH$ = ADDR(NIL);

  14770 10 001124   000001 236000 xsym               LDQ     B_VECTNIL+1
        10 001125   200022 756100                    STQ     SRCH$,,AUTO

      409    14771    3                END;

      410    14772    2             CALL VXF$FREE( @DS3, WKSZ, 1 );

  14772 10 001126   000100 236000 11                 LDQ     64
        10 001127   200032 756100                    STQ     ALL$+4,,AUTO
        10 001130   200015 633500                    EPPR3   WKSZ,,AUTO
        10 001131   200031 453500                    STP3    ALL$+3,,AUTO
        10 001132   000023 236000 11                 LDQ     19
        10 001133   200030 756100                    STQ     ALL$+2,,AUTO
PL6.E3A0      #001=VXF$OPEN File=VXF$OPEN.:E05TSI                                WED 07/30/97 08:09 Page:81   
        10 001134   200030 630500                    EPPR0   ALL$+2,,AUTO
        10 001135   000021 631400 xsym               EPPR1   B_VECTNIL+17
        10 001136   000000 701000 xent               TSX1    VXF$FREE
        10 001137   000000 011000                    NOP     0

      411    14773    2             GOTO AGAIN;

  14773 10 001140   000114 710000 10                 TRA     AGAIN

      412    14774    2   RELEASE:
      413    14775    2             CALL VXF$FREE( @DS3, WKSZ, 1 );

  14775 10 001141   000100 236000 11    RELEASE      LDQ     64
        10 001142   200032 756100                    STQ     ALL$+4,,AUTO
        10 001143   200015 630500                    EPPR0   WKSZ,,AUTO
        10 001144   200031 450500                    STP0    ALL$+3,,AUTO
        10 001145   000023 236000 11                 LDQ     19
        10 001146   200030 756100                    STQ     ALL$+2,,AUTO
        10 001147   200030 630500                    EPPR0   ALL$+2,,AUTO
        10 001150   000021 631400 xsym               EPPR1   B_VECTNIL+17
        10 001151   000000 701000 xent               TSX1    VXF$FREE
        10 001152   000000 011000                    NOP     0

      414    14776    2             GOTO TELL_AGAIN;

  14776 10 001153   000766 710000 10                 TRA     TELL_AGAIN

      415    14777    2            END;                           /* if VX_ONLINE ~= 0  then do; */
      416    14778    2         ELSE DO;

      417    14779    2   CHECK_MES:
      418    14780    3             IF VX_DO_PASS1 = @YES THEN DO;

  14780 10 001154   000000 235000 xsym  CHECK_MES    LDA     VX_DO_PASS1
        10 001155   000001 115007                    CMPA    1,DL
        10 001156   001164 601000 10                 TNZ     s:14792

PL6.E3A0      #001=VXF$OPEN File=VXF$OPEN.:E05TSI                                WED 07/30/97 08:09 Page:82   
      419    14781    3                 VX_DO_PASS1 = @NO;

  14781 10 001157   000000 450000 xsym               STZ     VX_DO_PASS1

      420    14782        /*E*  ERROR: VXF-E$JUSTFILE_VX-0
      421    14783              MESSAGE: Processing continues only for file existence checking.
      422    14784                       Only current node will be further processed.
      423    14785              DESCRIPTION: Self-explanatory.
      424    14786        */
      425    14787                      %SCREAM( ERR#=E$JUSTFILE_VX, LEVEL=@E$I_VX, MID="'F'" );

  14788 10 001160   000105 630400 11                 EPPR0   69
        10 001161   000022 631400 xsym               EPPR1   B_VECTNIL+18
        10 001162   000000 701000 xent               TSX1    VXE$ERROR
        10 001163   000000 011000                    NOP     0

      426    14790    3                END;

      427    14791    2            END;

      428    14792    1         RETURN;

  14792 10 001164   000000 702200 xent               TSX2  ! X66_ARET

      429    14793    1   MERC_ERROR:
      430    14794    1         CALL VXE$MERC;

  14794 10 001165   000002 631400 xsym  MERC_ERROR   EPPR1   B_VECTNIL+2
        10 001166   000000 701000 xent               TSX1    VXE$MERC
        10 001167   000000 011000                    NOP     0
        10 001170   001173 710000 10                 TRA     s:14832

      431    14795              %BANNER(ARG=END VXF$OPEN);

             14803    1   /*******************************************************************************
             14804    1   *                                                                              *
             14805    1   *                          END VXF$OPEN                                           *
PL6.E3A0      #001=VXF$OPEN File=VXF$OPEN.:E05TSI                                WED 07/30/97 08:09 Page:83   
             14806    1   *                                                                              *
             14807    1   *******************************************************************************/

      432    14811        %EJECT;
PL6.E3A0      #001=VXF$OPEN File=VXF$OPEN.:E05TSI                                WED 07/30/97 08:09 Page:84   
      433    14812              %BANNER(ARG=VXF$OPEN_LO entry);

             14820    1   /*******************************************************************************
             14821    1   *                                                                              *
             14822    1   *                          VXF$OPEN_LO entry                                      *
             14823    1   *                                                                              *
             14824    1   *******************************************************************************/

      434    14828    1   VXF$OPEN_LO: ENTRY  ALTRET;

  14828 10 001171   000000 700200 xent  VXF$OPEN_LO  TSX0  ! X66_AUTO_3
        10 001172   000040 000003                    ZERO    32,3

      435    14829
      436    14830
      437    14831        /*                            Assume M$LO and M$DO are the  same  */
      438    14832    1         VX_LO_DO_DIFFER = @FALSE_B;

  14832 10 001173   000000 450000 xsym               STZ     VX_LO_DO_DIFFER

      439    14833    1         VX_FPT_ERRMSG.V.OUTDCB2# = DCBNUM( NIL );

  14833 10 001174   000000 220003                    LDX0    0,DU
        10 001175   000027 740000 xsym               STX0    VX_FPT_ERRMSG+23

      440    14834    1         VX_FPT_ERRMSG_AUX.V.OUTDCB2# = DCBNUM( NIL );

  14834 10 001176   000027 740000 xsym               STX0    VX_FPT_ERRMSG_AUX+23

      441    14835
      442    14836    2         IF VX_LOF$ ~= ADDR(NIL) THEN DO;

  14836 10 001177   000000 236000 xsym               LDQ     VX_LOF$
        10 001200   000001 116000 xsym               CMPQ    B_VECTNIL+1
        10 001201   001270 600000 10                 TZE     s:14866

      443    14837    2             VX_LO_FPT_OPEN.NAME_      = VX_LOF$ -> VX$LST.P.NAME_;
PL6.E3A0      #001=VXF$OPEN File=VXF$OPEN.:E05TSI                                WED 07/30/97 08:09 Page:85   

  14837 10 001202   000000 470400 xsym               LDP0    VX_LOF$
        10 001203   000000 100500                    MLR     fill='000'O
        10 001204   000005 000010                    ADSC9   5,,PR0                   cn=0,n=8
        10 001205   000046 000010 2                  ADSC9   VX_LO_FPT_OPEN+6         cn=0,n=8

      444    14838    2             VX_LO_FPT_OPEN.ACCT_      = VX_LOF$ -> VX$LST.P.ACCT_;

  14838 10 001206   000000 100500                    MLR     fill='000'O
        10 001207   000007 000010                    ADSC9   7,,PR0                   cn=0,n=8
        10 001210   000064 000010 2                  ADSC9   VX_LO_FPT_OPEN+20        cn=0,n=8

      445    14839    2             VX_LO_FPT_OPEN.PASS_      = VX_LOF$ -> VX$LST.P.PASS_;

  14839 10 001211   000000 100500                    MLR     fill='000'O
        10 001212   000011 000010                    ADSC9   9,,PR0                   cn=0,n=8
        10 001213   000050 000010 2                  ADSC9   VX_LO_FPT_OPEN+8         cn=0,n=8

      446    14840    2             VX_LO_FPT_OPEN.SN_        = VX_LOF$ -> VX$LST.P.SN_;

  14840 10 001214   000000 100500                    MLR     fill='000'O
        10 001215   000013 000010                    ADSC9   11,,PR0                  cn=0,n=8
        10 001216   000042 000010 2                  ADSC9   VX_LO_FPT_OPEN+2         cn=0,n=8

      447    14841    2             VX_LO_FPT_OPEN.WSN_       = VX_LOF$ -> VX$LST.P.WSN_;

  14841 10 001217   000000 100500                    MLR     fill='000'O
        10 001220   000015 000010                    ADSC9   13,,PR0                  cn=0,n=8
        10 001221   000072 000010 2                  ADSC9   VX_LO_FPT_OPEN+26        cn=0,n=8

      448    14842    2             IF VX_LOF$ -> VX$LST.P.B.ASN THEN

  14842 10 001222   000017 236100                    LDQ     15,,PR0
        10 001223   200000 316003                    CANQ    65536,DU
        10 001224   001230 600000 10                 TZE     s:14845

      449    14843    2                 VX_LO_FPT_OPEN.V.ASN# = VX_LOF$ -> VX$LST.P.ASN;
PL6.E3A0      #001=VXF$OPEN File=VXF$OPEN.:E05TSI                                WED 07/30/97 08:09 Page:86   

  14843 10 001225   000021 236100                    LDQ     17,,PR0
        10 001226   000105 552004 2                  STBQ    VX_LO_FPT_OPEN+37,'04'O
        10 001227   001232 710000 10                 TRA     s:14846

      450    14844    2             ELSE
      451    14845    2                 VX_LO_FPT_OPEN.V.ASN# = 0;

  14845 10 001230   000000 236003                    LDQ     0,DU
        10 001231   000105 552004 2                  STBQ    VX_LO_FPT_OPEN+37,'04'O

      452    14846    2             IF VX_LOF$ -> VX$LST.P.B.RES THEN

  14846 10 001232   000017 234100                    SZN     15,,PR0
        10 001233   001237 605000 10                 TPL     s:14849

      453    14847    2                 VX_LO_FPT_OPEN.V.RES# = VX_LOF$ -> VX$LST.P.RES;

  14847 10 001234   000020 236100                    LDQ     16,,PR0
        10 001235   000110 756000 2                  STQ     VX_LO_FPT_OPEN+40
        10 001236   001241 710000 10                 TRA     s:14850

      454    14848    2             ELSE
      455    14849    2                 VX_LO_FPT_OPEN.V.RES# = BINASC(0);

  14849 10 001237   000012 236000 11                 LDQ     10
        10 001240   000110 756000 2                  STQ     VX_LO_FPT_OPEN+40

      456    14850    2             VX_FPT_ERRMSG.V.DCB# = DCBNUM(M$LO);

  14850 10 001241   000000 236007 xsym               LDQ     M$LO,DL
        10 001242   000000 621006                    EAX1    0,QL
        10 001243   000026 741000 xsym               STX1    VX_FPT_ERRMSG+22

      457    14851
      458    14852    3             DO CASE( VX_ON_OVER );

PL6.E3A0      #001=VXF$OPEN File=VXF$OPEN.:E05TSI                                WED 07/30/97 08:09 Page:87   
  14852 10 001244   000000 235000 xsym               LDA     VX_ON_OVER
        10 001245   000004 115007                    CMPA    4,DL
        10 001246   001250 602005 10                 TNC     s:14852+4,AL
        10 001247   001270 710000 10                 TRA     s:14866
        10 001250   001270 710000 10                 TRA     s:14866
        10 001251   001254 710000 10                 TRA     s:14854
        10 001252   001257 710000 10                 TRA     s:14857
        10 001253   001264 710000 10                 TRA     s:14860

      459    14853    3               CASE( @C_OVER_KEY_WORD );

      460    14854    3                 VX_LO_FPT_OPEN.V.EXIST# = %NEWFILE#;

  14854 10 001254   000600 236007                    LDQ     384,DL
        10 001255   000104 256000 2                  ORSQ    VX_LO_FPT_OPEN+36
        10 001256   001270 710000 10                 TRA     s:14866

      461    14855
      462    14856    3               CASE( @C_ON_KEY_WORD );

      463    14857    3                 VX_LO_FPT_OPEN.V.EXIST# = %ERROR#;

  14857 10 001257   000104 236000 2                  LDQ     VX_LO_FPT_OPEN+36
        10 001260   000111 376000 11                 ANQ     73
        10 001261   000200 276007                    ORQ     128,DL
        10 001262   000104 756000 2                  STQ     VX_LO_FPT_OPEN+36
        10 001263   001270 710000 10                 TRA     s:14866

      464    14858
      465    14859    3               CASE( @C_INTO_KEY_WORD);

      466    14860    3                 VX_LO_FPT_OPEN.V.EXIST# = %OLDFILE#;

  14860 10 001264   000104 236000 2                  LDQ     VX_LO_FPT_OPEN+36
        10 001265   000111 376000 11                 ANQ     73
        10 001266   000400 276007                    ORQ     256,DL
        10 001267   000104 756000 2                  STQ     VX_LO_FPT_OPEN+36
PL6.E3A0      #001=VXF$OPEN File=VXF$OPEN.:E05TSI                                WED 07/30/97 08:09 Page:88   

      467    14861
      468    14862    3               END;                        /* END DO CASE(VX_ON_OVER */

      469    14863
      470    14864    2            END;                           /* IF VX_LOF$ ~= ADDR(NIL) THEN */

      471    14865
      472    14866    1         CALL M$OPEN (VX_LO_FPT_OPEN) ALTRET ( LO_OPEN_ERROR );

  14866 10 001270   000040 630400 2                  EPPR0   VX_LO_FPT_OPEN
        10 001271   450000 713400                    CLIMB   alt,open
        10 001272   410400 401760                    pmme    nvectors=18
        10 001273   001352 702000 10                 TSX2    LO_OPEN_ERROR

      473    14867        /*                             Check correspondence          */
      474    14868    1         CALL M$CORRES( FPT_CORRES )  ALTRET( SAME );

  14868 10 001274   000330 630400 2                  EPPR0   FPT_CORRES
        10 001275   460000 713400                    CLIMB   alt,+24576
        10 001276   400000 401760                    pmme    nvectors=1
        10 001277   001314 702000 10                 TSX2    SAME

      475    14869        /* Here=>different */
      476    14870    1         VX_LO_DO_DIFFER = @TRUE_B;

  14870 10 001300   400000 236003                    LDQ     -131072,DU
        10 001301   000000 756000 xsym               STQ     VX_LO_DO_DIFFER

      477    14871    1         VX_FPT_ERRMSG.V.OUTDCB2# = DCBNUM( M$DO );

  14871 10 001302   000000 236007 xsym               LDQ     M$DO,DL
        10 001303   000000 620006                    EAX0    0,QL
        10 001304   000027 740000 xsym               STX0    VX_FPT_ERRMSG+23

      478    14872    1         VX_FPT_ERRMSG_AUX.V.OUTDCB2# = DCBNUM( M$DO );

PL6.E3A0      #001=VXF$OPEN File=VXF$OPEN.:E05TSI                                WED 07/30/97 08:09 Page:89   
  14872 10 001305   000000 236007 xsym               LDQ     M$DO,DL
        10 001306   000000 621006                    EAX1    0,QL
        10 001307   000027 741000 xsym               STX1    VX_FPT_ERRMSG_AUX+23

      479    14873    1         CALL M$OPEN ( VX_DO_FPT_OPEN) ALTRET( SAME ) ;

  14873 10 001310   000132 630400 2                  EPPR0   VX_DO_FPT_OPEN
        10 001311   450000 713400                    CLIMB   alt,open
        10 001312   410400 401760                    pmme    nvectors=18
        10 001313   001314 702000 10                 TSX2    SAME

      480    14874    1   SAME:
      481    14875
      482    14876
      483    14877    1         VX_ECHO = ~ ( M$SI$ -> F$DCB.DDEV.IC#  &  M$LO$ -> F$DCB.DDEV.IC# );

  14877 10 001314   000000 470400 xsym  SAME         LDP0    M$LO$
        10 001315   000004 236100                    LDQ     4,,PR0
        10 001316   000024 736000                    QLS     20
        10 001317   400000 376003                    ANQ     -131072,DU
        10 001320   200030 756100                    STQ     ALL$+2,,AUTO
        10 001321   000000 471400 xsym               LDP1    M$SI$
        10 001322   100004 236100                    LDQ     4,,PR1
        10 001323   000024 736000                    QLS     20
        10 001324   400000 376003                    ANQ     -131072,DU
        10 001325   200030 376100                    ANQ     ALL$+2,,AUTO
        10 001326   400000 676003                    ERQ     -131072,DU
        10 001327   000000 756000 xsym               STQ     VX_ECHO

      484    14878    1        VX_DO_ECHO = VX_LO_DO_DIFFER & ~(M$SI$->F$DCB.DDEV.IC# & M$DO$->F$DCB.DDEV.IC#
             14878                  );

  14878 10 001330   000000 473400 xsym               LDP3    M$DO$
        10 001331   300004 236100                    LDQ     4,,PR3
        10 001332   000024 736000                    QLS     20
        10 001333   400000 376003                    ANQ     -131072,DU
        10 001334   200030 756100                    STQ     ALL$+2,,AUTO
PL6.E3A0      #001=VXF$OPEN File=VXF$OPEN.:E05TSI                                WED 07/30/97 08:09 Page:90   
        10 001335   100004 236100                    LDQ     4,,PR1
        10 001336   000024 736000                    QLS     20
        10 001337   400000 376003                    ANQ     -131072,DU
        10 001340   200030 376100                    ANQ     ALL$+2,,AUTO
        10 001341   400000 676003                    ERQ     -131072,DU
        10 001342   200031 756100                    STQ     ALL$+3,,AUTO
        10 001343   000000 236000 xsym               LDQ     VX_LO_DO_DIFFER
        10 001344   400000 376003                    ANQ     -131072,DU
        10 001345   200032 756100                    STQ     ALL$+4,,AUTO
        10 001346   200031 236100                    LDQ     ALL$+3,,AUTO
        10 001347   200032 376100                    ANQ     ALL$+4,,AUTO
        10 001350   000000 756000 xsym               STQ     VX_DO_ECHO

      485    14879    1         RETURN ;

  14879 10 001351   000000 702200 xent               TSX2  ! X66_ARET

  14878 10 001352                       LO_OPEN_ERR* null
      486    14880
      487    14881    1   LO_OPEN_ERROR:;
      488    14882        /*E*  ERROR:      VXF-E$OPEN_LO_VX-0
      489    14883              MESSAGE: Unable to open listing output file: %FN
      490    14884        */
      491    14885    1         VX_FPT_ERRMSG.V.OUTDCB1# = DCBNUM (M$DO);

  14885 10 001352   000000 236007 xsym               LDQ     M$DO,DL
        10 001353   000000 620006                    EAX0    0,QL
        10 001354   000026 440000 xsym               SXL0    VX_FPT_ERRMSG+22

      492    14886    1         CALL VXE$ERRMSG( , @E$F_D_VX );

  14886 10 001355   000113 236000 11                 LDQ     75
        10 001356   000001 235000 xsym               LDA     B_VECTNIL+1
        10 001357   200030 757100                    STAQ    ALL$+2,,AUTO
        10 001360   200030 630500                    EPPR0   ALL$+2,,AUTO
        10 001361   000020 631400 xsym               EPPR1   B_VECTNIL+16
        10 001362   000000 701000 xent               TSX1    VXE$ERRMSG
PL6.E3A0      #001=VXF$OPEN File=VXF$OPEN.:E05TSI                                WED 07/30/97 08:09 Page:91   
        10 001363   000000 011000                    NOP     0

      493    14887              %ERRMSG( ERR#=E$OPEN_LO_VX, MID="'F'", LEVEL=@E$F_VX, DCB#=M$LO );

  14894 10 001364   000000 236007 xsym               LDQ     M$LO,DL
        10 001365   200030 756100                    STQ     ALL$+2,,AUTO
        10 001366   200030 630500                    EPPR0   ALL$+2,,AUTO
        10 001367   200033 450500                    STP0    ALL$+5,,AUTO
        10 001370   000007 236000 11                 LDQ     7
        10 001371   200032 756100                    STQ     ALL$+4,,AUTO
        10 001372   000114 236000 11                 LDQ     76
        10 001373   200031 756100                    STQ     ALL$+3,,AUTO
        10 001374   200031 630500                    EPPR0   ALL$+3,,AUTO
        10 001375   000021 631400 xsym               EPPR1   B_VECTNIL+17
        10 001376   000000 701000 xent               TSX1    VXE$ERRMSG
        10 001377   000000 011000                    NOP     0

      494    14896
      495    14897              %BANNER(ARG=END VXF$OPEN_LO);

             14905    1   /*******************************************************************************
             14906    1   *                                                                              *
             14907    1   *                          END VXF$OPEN_LO                                        *
             14908    1   *                                                                              *
             14909    1   *******************************************************************************/

      496    14913
      497    14914    1   END VXF$OPEN;

  14914 10 001400   000000 702200 xent               TSX2  ! X66_ARET
      498    14915        %EOD;

PL6.E3A0      #001=VXF$OPEN File=VXF$OPEN.:E05TSI                                WED 07/30/97 08:09 Page:92   
--  Include file information  --

   B$JIT.:E05TOU  cannot be made into a system file and is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   B_ERRORS_C.:E05TOU  is referenced.
   XUF_ENTRY.:E05TOU  cannot be made into a system file and is referenced.
   XU_FORMAT_C.:E05TOU  is referenced.
   VX_PSUBS_C.:E05TOU  is referenced.
   F_DCB_D.:E05TOU  is referenced.
   VX_DCB_R.:E05TOU  cannot be made into a system file and is referenced.
   VX_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   VX_FIXED_R.:E05TOU  cannot be made into a system file and is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   VX_MACRO_C.:E05TOU  is referenced.
   VX_PERR_C.:E05TOU  is referenced.
   VX_SUBS_C.:E05TOU  is referenced.
   VX_SWITCH_C.:E05TOU  is referenced.
   B$OBJECT_C.:E05TOU  is referenced.
   VX_INC_C.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure VXF$OPEN.
PL6.E3A0      #001=VXF$OPEN File=VXF$OPEN.:E05TSI                                WED 07/30/97 08:09 Page:93   

 **** Variables and constants ****

  ****  Section 002  Data  VXF$OPEN

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

    36-0-0/w STRC(72)    r     1 ACCT_VECTOR              373-0-0/c CHAR(40)    r     1 FILE_NAME
   372-0-0/w UBIN        r     1 FILE_NAME_SIZE           330-0-0/d STRC(144)   r     1 FPT_CORRES
   316-0-0/d STRC(360)   r     1 FPT_PRECORD                0-0-0/w STRC(1080)  r     1 F_FDS
   224-0-0/d STRC(2088)  r     1 F_O                      405-0-0/c CHAR(80)    r     1 OUT_BUF
   362-0-0/d STRC(288)   r     1 SINPUT_BADFID            334-0-0/d STRC(792)   r     1 UNFID_DCB
   132-0-0/d STRC(2088)  r     1 VX_DO_FPT_OPEN            40-0-0/d STRC(2088)  r     1 VX_LO_FPT_OPEN

  ****  Section 009 RoData VXF$OPEN

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

   316-0-0/c CHAR(27)    r     1 B_PATCH                  264-0-0/c CHAR(54)    r     1 ENTER_FILE_NAME
   256-0-0/d STRC(216)   r     1 FPT_WAIT                 325-0-0/c STRC(27)    r     1 LEMUR_KEY
   302-0-0/c CHAR(33)    r     1 LIST_SRCH_ACCTS          313-0-0/c CHAR(7)     r     1 SHARED
   315-0-0/c CHAR(4)     r     1 SYS                        0-0-0/d STRC(2088)  r     1 VX_EI_FPT_OPEN
    72-0-0/d STRC(2088)  r     1 VX_OF_FPT_OPEN           164-0-0/d STRC(2088)  r     1 VX_RF_FPT_OPEN

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @CURR_P$                   5-0-0/w PTR         r     1 @MODE
     4-0-0/w PTR         r     1 @TYPE                     26-0-0/w PTR         r     1 ALL$
    12-0-0/w UBIN        r     1 ANSWER                    24-0-0/w PTR         r     1 CURR$
    *0-0-0/w PTR         r     1 CURR_P$                   13-0-0/w UBIN        r     1 ERR
     6-0-0/w UBIN        r     1 I                          7-0-0/w UBIN        r     1 J
    *0-0-0/w UBIN        r     1 MODE                      23-0-0/w PTR         r     1 NAME$
    14-0-0/w UBIN        r     1 NCHARS                    22-0-0/w PTR         r     1 SRCH$
PL6.E3A0      #001=VXF$OPEN File=VXF$OPEN.:E05TSI                                WED 07/30/97 08:09 Page:94   
    16-0-0/w PTR         r     1 TEXT$                     *0-0-0/w UBIN        r     1 TYPE
    20-0-0/w PTR         r     1 WHERE$                    15-0-0/w UBIN        r     1 WKSZ
    17-0-0/w PTR         r     1 WORK$

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 B$JIT$                     0-0-0/w PTR         r     1 B$TCB$
     0-0-0/w PTR         r     1 M$DO$                      0-0-0/w PTR         r     1 M$LO$
     0-0-0/w PTR         r     1 M$OF$                      0-0-0/w PTR         r     1 M$SI$
     0-0-0/w BIT         r     1 VX_DO_ECHO                 0-0-0/w UBIN        r     1 VX_DO_PASS1
     0-0-0/w BIT         r     1 VX_ECHO                    0-0-0/w STRC(720)   r     1 VX_EFIELD1
     0-0-0/d STRC(936)   r     1 VX_FPT_ERRMSG              0-0-0/d STRC(936)   r     1 VX_FPT_ERRMSG_AUX
     0-0-0/w PTR         r     1 VX_LIBSRCH$                0-0-0/w PTR         r     1 VX_LOF$
     0-0-0/w BIT         r     1 VX_LO_DO_DIFFER
     0-0-0/w SBIN        r     1 VX_M_ALL(0:8)
     0-0-0/w PTR         r     1 VX_M_BASE_PTR(0:8)
     0-0-0/w SBIN        r     1 VX_M_FREE(0:8)
     0-0-0/w UBIN        r     1 VX_N_START_FID             0-0-0/w STRC(4572)  r     1 VX_O
     0-0-0/b STRC(116)   r     1 VX_OD                      0-0-0/w STRC(1476)  r     1 VX_OK
     0-0-0/w UBIN        r     1 VX_ONLINE                  0-0-0/w UBIN        r     1 VX_ON_OVER
     0-0-0/w UBIN        r     1 VX_PASS                    0-0-0/w STRC(504)   r     1 VX_P_PCB_MAIN

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(2448)  r     1 B$ALT                      0-0-0/w STRC(144)   r     1 B$TCB
     0-0-0/c CHAR(8)     r     1 F$ACCT_                    0-0-0/d ASTR(3528)  r     1 F$DCB
     0-0-0/c ASTR(9)     r     1 F$NAME_                    0-0-0N  NULL        r     1 M$DO
     0-0-0N  NULL        r     1 M$EI                       0-0-0N  NULL        r     1 M$LO
     0-0-0N  NULL        r     1 M$OF                       0-0-0N  NULL        r     1 M$RF
     0-0-0N  NULL        r     1 M$UC                       0-0-0/w STRC(144)   r     1 O$B
     0-0-0/w ASTR(9)     r     1 T$C                        0-0-0/c ASTR(9)     r     1 T$C_UNAL
PL6.E3A0      #001=VXF$OPEN File=VXF$OPEN.:E05TSI                                WED 07/30/97 08:09 Page:95   
     0-0-0/w STRC(180)   r     1 VX$ACCT                    0-0-0/w STRC(648)   r     1 VX$LST


   Procedure VXF$OPEN requires 769 words for executable code.
   Procedure VXF$OPEN requires 32 words of local(AUTO) storage.
PL6.E3A0      #001=VXF$OPEN File=VXF$OPEN.:E05TSI                                WED 07/30/97 08:09 Page:96   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=VXF$OPEN File=VXF$OPEN.:E05TSI                                WED 07/30/97 08:09 Page:97   
          MINI XREF LISTING

ACCT_VECTOR
     13411**DCL     14617<<ASSIGN
ACCT_VECTOR.F
     13416**DCL     13420--REDEF
ACCT_VECTOR.P.POINTER
     13421**DCL     14618>>ASSIGN
AGAIN
     14513**LABEL   14773--GOTO
ALL$
     14411**DCL     14597<<ASSIGN  14600<>CALL    14602>>ASSIGN  14603>>ASSIGN  14604>>ASSIGN  14606>>ASSIGN
     14607>>ASSIGN
ANSWER
     14363**DCL     14655<>CALL    14656>>IF
B$ALT.CODE
     13253**DCL     13253--REDEF   13254--REDEF   13254--REDEF
B$ALT.ERR.ERR#
     13255**DCL     13255--REDEF   14643>>ASSIGN
B$ALT.EVID
     13254**DCL     13254--REDEF   13254--REDEF
B$JIT.CPFLAGS1.SLEAZE
     12849**DCL     12849--REDEF
B$JIT.ERR.MID
     12756**DCL     12756--REDEF
B$JIT.JRESPEAK
     12917**DCL     12918--REDEF
B$JIT.ORIGINATOR_PORT.FROM_CR
     13026**DCL     13026--REDEF   13027--REDEF
B$JIT.PNR
     12930**DCL     12930--REDEF
B$JIT.TSLINE
     13024**DCL     13025--REDEF
B$JIT$
PL6.E3A0      #001=VXF$OPEN File=VXF$OPEN.:E05TSI                                WED 07/30/97 08:09 Page:98   
      8910**DCL     12750--IMP-PTR
B$TCB.ALT$
     13249**DCL     14643>>ASSIGN
B$TCB$
      8911**DCL     14643>>ASSIGN
B_PATCH
     14434**DCL     14547>>IF
CHECK_MES
     14780**LABEL   14669--GOTO
CURR$
     14409**DCL     14463<<ASSIGN  14469>>IF      14479>>ASSIGN  14482>>IF      14513>>ASSIGN  14514>>ASSIGN
     14515>>ASSIGN  14516>>IF      14516>>ASSIGN  14518>>IF      14518>>ASSIGN  14534>>ASSIGN  14535>>ASSIGN
     14546>>ASSIGN  14561<>CALL    14565>>ASSIGN  14566>>ASSIGN  14567>>ASSIGN  14588<>CALL    14591>>ASSIGN
     14602>>ASSIGN  14604>>ASSIGN  14605>>IF      14606>>ASSIGN  14607>>ASSIGN  14610>>ASSIGN  14611>>ASSIGN
     14612>>ASSIGN  14613>>ASSIGN  14619>>ASSIGN  14688>>ASSIGN  14689>>ASSIGN  14689>>ASSIGN  14709>>IF
     14710>>ASSIGN  14710>>ASSIGN  14712>>ASSIGN  14721>>ASSIGN  14722>>ASSIGN  14722>>ASSIGN  14752>>ASSIGN
     14753>>ASSIGN  14754<>CALL    14759>>ASSIGN  14760>>IF      14761>>ASSIGN  14762>>ASSIGN  14763>>ASSIGN
     14768>>IF
CURR_P$
     14384**DCL         8--PROC    14463>>ASSIGN  14712<<ASSIGN
ENTER_FILE_NAME
     14428**DCL     14748<>CALL    14748--CALL
ERR
     14364**DCL     14643<<ASSIGN  14644>>IF      14645>>IF      14673>>IF
ERROR
     14632**LABEL   14541--CALLALT
F$ACCT_
     13429**DCL     14623>>CALLBLT
F$DCB.ACTPOS
     13064**DCL     13064--REDEF
F$DCB.ARS#
     13038**DCL     13038--REDEF
F$DCB.ATTR
     13057**DCL     13058--REDEF
F$DCB.BORROW
     13072**DCL     13072--REDEF   13072--REDEF   13072--REDEF
PL6.E3A0      #001=VXF$OPEN File=VXF$OPEN.:E05TSI                                WED 07/30/97 08:09 Page:99   
F$DCB.DCBNAME.L
     13086**DCL     13086--IMP-SIZ
F$DCB.DDEV.IC#
     13044**DCL     14877>>ASSIGN  14877>>ASSIGN  14878>>ASSIGN  14878>>ASSIGN
F$DCB.EOMCHAR#
     13042**DCL     13042--REDEF
F$DCB.FLDID
     13067**DCL     13067--REDEF
F$DCB.FORM$
     13061**DCL     13061--REDEF
F$DCB.FSECT
     13077**DCL     13077--REDEF
F$DCB.FSN#
     13054**DCL     13054--REDEF   13054--REDEF   13055--REDEF
F$DCB.HEADER$
     13060**DCL     13060--REDEF
F$DCB.IXTNSIZE#
     13058**DCL     13058--REDEF
F$DCB.LASTSTA$
     13047**DCL     13047--REDEF
F$DCB.LVL
     13073**DCL     13073--REDEF
F$DCB.NAME#.C
     13048**DCL     13048--REDEF
F$DCB.NOEOF
     13070**DCL     13070--REDEF
F$DCB.NRECS#
     13059**DCL     13059--REDEF
F$DCB.NRECX
     13078**DCL     13078--REDEF
F$DCB.OHDR
     13070**DCL     13070--REDEF
F$DCB.ORG#
     13053**DCL     13053--REDEF   14552>>IF      14571>>IF
F$DCB.PRECNO
     13076**DCL     13076--REDEF
PL6.E3A0      #001=VXF$OPEN File=VXF$OPEN.:E05TSI                                WED 07/30/97 08:09 Page:100  
F$DCB.RCSZ
     13082**DCL     13082--REDEF
F$DCB.RES#
     13049**DCL     13049--REDEF
F$DCB.SETX
     13061**DCL     13061--REDEF
F$DCB.TAB$
     13061**DCL     13061--REDEF
F$DCB.TDA
     13075**DCL     13076--REDEF
F$DCB.TYPE#
     13049**DCL     14574>>IF
F$DCB.WSN#
     13049**DCL     13049--REDEF
F$NAME_.COUNT
     13427**DCL     13428--IMP-SIZ
FILE_NAME
     14429**DCL     14255--DCLINIT 14288--DCLINIT 14288--DCLINIT 14621<<ASSIGN  14623<<CALLBLT 14624>>CALLBLT
     14629>>ASSIGN  14632>>ASSIGN
FILE_NAME_SIZE
     14367**DCL     14259--DCLINIT 14746>>ASSIGN
FPT_CORRES
     14195**DCL     14868<>CALL
FPT_CORRES.V
     14195**DCL     14195--DCLINIT
FPT_PRECORD.V
     14176**DCL     14174--DCLINIT
FPT_WAIT
     14239**DCL     14657<>CALL
FPT_WAIT.V
     14240**DCL     14239--DCLINIT
F_FDS
     13149**DCL     14551<>CALL
F_O
     14119**DCL     14541<>CALL
F_O.ACCT_
PL6.E3A0      #001=VXF$OPEN File=VXF$OPEN.:E05TSI                                WED 07/30/97 08:09 Page:101  
     14123**DCL     14525<<ASSIGN  14530<<ASSIGN  14534<<ASSIGN  14551<>CALL    14617>>ASSIGN
F_O.ACSVEH_
     14121**DCL     14122--REDEF
F_O.ALTKEYS_
     14127**DCL     14128--REDEF   14128--REDEF
F_O.HDR_
     14126**DCL     14127--REDEF
F_O.NAME_
     14120**DCL     14513<<ASSIGN  14551<>CALL
F_O.PASS_
     14121**DCL     14514<<ASSIGN
F_O.SN_
     14119**DCL     14526<<ASSIGN  14531<<ASSIGN  14535<<ASSIGN
F_O.TAB_
     14125**DCL     14126--REDEF
F_O.UHL_
     14119**DCL     14120--REDEF   14120--REDEF
F_O.V
     14128**DCL     14119--DCLINIT 14468<<ASSIGN  14471<<ASSIGN  14478<<ASSIGN  14481<<ASSIGN
F_O.V.ASN#
     14138**DCL     14516<<ASSIGN  14517<<ASSIGN
F_O.V.DCB#
     14128**DCL     14646>>ASSIGN  14696>>ASSIGN  14744>>ASSIGN
F_O.V.FSN#
     14159**DCL     14159--REDEF   14159--REDEF
F_O.V.FUN#
     14138**DCL     14472<<ASSIGN
F_O.V.IXTNSIZE#
     14147**DCL     14474<<ASSIGN
F_O.V.RES#
     14143**DCL     14518<<ASSIGN  14519<<ASSIGN
F_O.V.XTNSIZE#
     14147**DCL     14476<<ASSIGN
F_O.WSN_
     14125**DCL     14125--REDEF   14515<<ASSIGN
I
PL6.E3A0      #001=VXF$OPEN File=VXF$OPEN.:E05TSI                                WED 07/30/97 08:09 Page:102  
     14354**DCL     14355--REDEF   14752<<ASSIGN  14754<>CALL
J
     14356**DCL     14357--REDEF   14753<<ASSIGN  14754<>CALL
K
     14358**DCL     14359--REDEF
L
     14360**DCL     14361--REDEF
LEMUR_KEY
     14435**DCL     14174--DCLINIT 14175--DCLINIT
LIB_ERR
     14707**LABEL   14583--GOTO
LIST_SRCH_ACCTS
     14431**DCL     14551--CALL
LO_OPEN_ERROR
     14878**LABEL   14866--CALLALT
M$CORRES
      5078**DCL-ENT 14868--CALL
M$DO
     13454**DCL     14871>>ASSIGN  14872>>ASSIGN  14885>>ASSIGN
M$DO$
     10644**DCL     14878>>ASSIGN
M$ERR
      5085**DCL-ENT 14640--CALL
M$LO
     13453**DCL     14850>>ASSIGN  14894<>CALL
M$LO$
     10645**DCL     14877>>ASSIGN
M$MERC
      5129**DCL-ENT 14638--CALL    14674--CALL
M$OF
     13450**DCL     14557>>ASSIGN  14584>>ASSIGN  14734>>ASSIGN
M$OF$
     10646**DCL     14552>>IF      14571>>IF      14574>>IF
M$OPEN
      5073**DCL-ENT 14541--CALL    14866--CALL    14873--CALL
M$SI$
PL6.E3A0      #001=VXF$OPEN File=VXF$OPEN.:E05TSI                                WED 07/30/97 08:09 Page:103  
     10642**DCL     14877>>ASSIGN  14878>>ASSIGN
M$SINPUT
      5100**DCL-ENT 14747--CALL
M$UNFID
      5136**DCL-ENT 14745--CALL
M$WAIT
      5131**DCL-ENT 14657--CALL
MERC_ERROR
     14794**LABEL   14638--CALLALT 14674--CALLALT
MODE
     14386**DCL         8--PROC    14472>>ASSIGN
NAME$
     14408**DCL     14546<<ASSIGN  14547>>IF      14547>>IF      14547>>IF      14547>>IF      14547>>IF
     14547>>IF
NCHARS
     14365**DCL     14620<<ASSIGN  14623>>CALLBLT 14624<<CALLBLT 14628>>ASSIGN  14631>>ASSIGN  14751<>CALL
NOT_LEMUR_FILE
     14583**LABEL   14575--GOTO
O$B.SUBLK$
     13129**DCL     14754>>CALL    14754>>CALL    14754<>CALL
OPEN_FILE
     14541**LABEL   14658--GOTO
OUT_BUF
     14430**DCL     13167--DCLINIT 13169--DCLINIT
RELEASE
     14775**LABEL   14751--CALLALT
SAME
     14877**LABEL   14868--CALLALT 14873--CALLALT
SHARED
     14432**DCL     14547>>IF
SINPUT_BADFID
     14281**DCL     14747<>CALL
SINPUT_BADFID.BUF_.BOUND
     14288**DCL     14746<<ASSIGN
SINPUT_BADFID.V
     14293**DCL     14283--DCLINIT
PL6.E3A0      #001=VXF$OPEN File=VXF$OPEN.:E05TSI                                WED 07/30/97 08:09 Page:104  
SRCH$
     14407**DCL     14464<<ASSIGN  14469<<ASSIGN  14482<<ASSIGN  14524>>IF      14525>>ASSIGN  14526>>ASSIGN
     14547>>IF      14564>>IF      14565>>ASSIGN  14566>>ASSIGN  14680>>IF      14681<<ASSIGN  14681>>ASSIGN
     14682>>IF      14764<<ASSIGN  14769<<ASSIGN  14770<<ASSIGN
SYS
     14433**DCL     14547>>IF
T$C.CHARS
     13383**DCL     14547>>IF      14547>>IF      14547>>IF      14621>>ASSIGN  14689>>ASSIGN  14722>>ASSIGN
T$C.COUNT
     13382**DCL     13383--IMP-SIZ 14547>>IF      14547>>IF      14547>>IF      14620>>ASSIGN  14621>>ASSIGN
     14688>>ASSIGN  14689>>ASSIGN  14721>>ASSIGN  14722>>ASSIGN
T$C_UNAL.COUNT
     13385**DCL     13386--IMP-SIZ
TELL
     14742**LABEL   14562--GOTO    14589--GOTO
TELL_AGAIN
     14744**LABEL   14776--GOTO
TEXT$
     14403**DCL     14751<>CALL
TRY_AGAIN
     14524**LABEL   14682--GOTO    14708--GOTO
TYPE
     14385**DCL         8--PROC    14466>>DOCASE  14494<>CALL    14544>>DOCASE  14626>>DOCASE  14678>>DOCASE
     14758>>IF
UNFID_DCB
     14255**DCL     14745<>CALL
UNFID_DCB.V
     14259**DCL     14255--DCLINIT
UNFID_DCB.V.DCB#
     14259**DCL     14744<<ASSIGN
VX$ACCT.ACCT_
     13352**DCL     14525>>ASSIGN  14530>>ASSIGN  14565>>ASSIGN  14611>>ASSIGN
VX$ACCT.LINK$
     13351**DCL     14593>>IF      14603>>ASSIGN  14681>>ASSIGN  14707>>ASSIGN
VX$ACCT.SN_
     13355**DCL     14526>>ASSIGN  14531>>ASSIGN  14566>>ASSIGN  14612>>ASSIGN
PL6.E3A0      #001=VXF$OPEN File=VXF$OPEN.:E05TSI                                WED 07/30/97 08:09 Page:105  
VX$LST
     13281**DCL     14596--IF      14598--ASSIGN  14600--CALL    14602<<ASSIGN  14602>>ASSIGN
VX$LST.LIB
     13290**DCL     14759<<ASSIGN
VX$LST.LIB.USED
     13291**DCL     14591<<ASSIGN  14709>>IF
VX$LST.LIBSRCH$
     13288**DCL     14479>>ASSIGN  14603<<ASSIGN  14610<<ASSIGN  14761<<ASSIGN  14762<<ASSIGN  14763>>ASSIGN
VX$LST.LINK$
     13282**DCL     14605>>IF      14606>>ASSIGN  14607<<ASSIGN  14710<<ASSIGN  14710>>ASSIGN  14712>>ASSIGN
VX$LST.OBJECT_NAME$
     13285**DCL     13286--REDEF
VX$LST.P.ACCT_
     13299**DCL     14534>>ASSIGN  14565<<ASSIGN  14611<<ASSIGN  14838>>ASSIGN
VX$LST.P.ASN
     13325**DCL     14516>>ASSIGN  14843>>ASSIGN
VX$LST.P.B.ACCT
     13322**DCL     14469>>IF      14482>>IF      14567<<ASSIGN  14613<<ASSIGN  14760>>IF      14768>>IF
VX$LST.P.B.ASN
     13321**DCL     14516>>IF      14842>>IF
VX$LST.P.B.RES
     13320**DCL     14518>>IF      14846>>IF
VX$LST.P.NAME_
     13294**DCL     14513>>ASSIGN  14837>>ASSIGN
VX$LST.P.NAME_.NAME$
     13298**DCL     14546>>ASSIGN  14619>>ASSIGN  14688>>ASSIGN  14689>>ASSIGN  14689>>ASSIGN  14721>>ASSIGN
     14722>>ASSIGN  14722>>ASSIGN
VX$LST.P.PASS_
     13304**DCL     14514>>ASSIGN  14839>>ASSIGN
VX$LST.P.RES
     13324**DCL     14518>>ASSIGN  14847>>ASSIGN
VX$LST.P.SN_
     13309**DCL     14535>>ASSIGN  14566<<ASSIGN  14612<<ASSIGN  14840>>ASSIGN
VX$LST.P.WSN_
     13314**DCL     14515>>ASSIGN  14841>>ASSIGN
VX$LST.PRIOR$
PL6.E3A0      #001=VXF$OPEN File=VXF$OPEN.:E05TSI                                WED 07/30/97 08:09 Page:106  
     13286**DCL     14604<<ASSIGN  14606<<ASSIGN  14710>>ASSIGN
VX$LST.SC_HEAD$
     13287**DCL     13288--REDEF
VX$LST.SC_TAIL$
     13289**DCL     13290--REDEF
VX$LST.SUB_TYPE
     13284**DCL     14753>>ASSIGN
VX$LST.TYPE
     13283**DCL     14752>>ASSIGN
VXA$GET
     14329**DCL-ENT 14600--CALL
VXD$B2C
     14327**DCL-ENT 14494--CALL
VXE$ERRMSG
     14323**DCL-ENT 14886--CALL    14894--CALL
VXE$ERROR
     14320**DCL-ENT 14506--CALL    14559--CALL    14586--CALL    14653--CALL    14667--CALL    14691--CALL
     14702--CALL    14725--CALL    14736--CALL    14788--CALL
VXE$MERC
     14322**DCL-ENT 14794--CALL
VXF$CLOSE
     14334**DCL-ENT 14561--CALL    14588--CALL
VXF$FREE
     14330**DCL-ENT 14772--CALL    14775--CALL
VXP$PAR
     14335**DCL-ENT 14751--CALL
VXS$LST
     14336**DCL-ENT 14754--CALL
VXW$WRITE
     14325**DCL-ENT 14748--CALL
VXY$YESNO
     14332**DCL-ENT 14655--CALL
VX_BIAS.A
      9576**DCL      9577--REDEF
VX_CBUF.CHARS_A
      9510**DCL      9511--REDEF
PL6.E3A0      #001=VXF$OPEN File=VXF$OPEN.:E05TSI                                WED 07/30/97 08:09 Page:107  
VX_CONST_DCB.ACTPOS
     10692**DCL     10692--REDEF
VX_CONST_DCB.ARS#
     10651**DCL     10651--REDEF
VX_CONST_DCB.ATTR#
     10681**DCL     10681--REDEF   10683--REDEF
VX_CONST_DCB.BORROW
     10703**DCL     10703--REDEF   10703--REDEF   10703--REDEF
VX_CONST_DCB.EOMCHAR#
     10658**DCL     10659--REDEF
VX_CONST_DCB.FLDID
     10695**DCL     10696--REDEF
VX_CONST_DCB.FORM$
     10687**DCL     10687--REDEF
VX_CONST_DCB.FSECT
     10710**DCL     10710--REDEF
VX_CONST_DCB.FSN#
     10677**DCL     10677--REDEF   10677--REDEF   10678--REDEF
VX_CONST_DCB.HEADER$
     10686**DCL     10687--REDEF
VX_CONST_DCB.IXTNSIZE#
     10683**DCL     10684--REDEF
VX_CONST_DCB.LASTSTA$
     10667**DCL     10667--REDEF
VX_CONST_DCB.LVL
     10704**DCL     10704--REDEF
VX_CONST_DCB.NAME#.C
     10667**DCL     10668--REDEF
VX_CONST_DCB.NOEOF
     10699**DCL     10699--REDEF
VX_CONST_DCB.NRECS#
     10684**DCL     10684--REDEF
VX_CONST_DCB.NRECX
     10711**DCL     10711--REDEF
VX_CONST_DCB.OHDR
     10700**DCL     10700--REDEF
PL6.E3A0      #001=VXF$OPEN File=VXF$OPEN.:E05TSI                                WED 07/30/97 08:09 Page:108  
VX_CONST_DCB.ORG#
     10675**DCL     10676--REDEF
VX_CONST_DCB.PRECNO
     10708**DCL     10708--REDEF
VX_CONST_DCB.RCSZ
     10716**DCL     10716--REDEF
VX_CONST_DCB.RES#
     10669**DCL     10669--REDEF
VX_CONST_DCB.SETX
     10688**DCL     10688--REDEF
VX_CONST_DCB.TAB$
     10687**DCL     10687--REDEF
VX_CONST_DCB.TDA
     10707**DCL     10708--REDEF
VX_CONST_DCB.WSN#
     10669**DCL     10670--REDEF
VX_DO_ECHO
     10489**DCL     14878<<ASSIGN
VX_DO_FPT_OPEN
     13659**DCL     14873<>CALL
VX_DO_FPT_OPEN.ACSVEH_
     13661**DCL     13662--REDEF
VX_DO_FPT_OPEN.ALTKEYS_
     13667**DCL     13668--REDEF   13668--REDEF
VX_DO_FPT_OPEN.HDR_
     13666**DCL     13667--REDEF
VX_DO_FPT_OPEN.TAB_
     13665**DCL     13666--REDEF
VX_DO_FPT_OPEN.UHL_
     13659**DCL     13660--REDEF   13660--REDEF
VX_DO_FPT_OPEN.V
     13668**DCL     13659--DCLINIT
VX_DO_FPT_OPEN.V.FSN#
     13699**DCL     13699--REDEF   13699--REDEF
VX_DO_FPT_OPEN.WSN_
     13665**DCL     13665--REDEF
PL6.E3A0      #001=VXF$OPEN File=VXF$OPEN.:E05TSI                                WED 07/30/97 08:09 Page:109  
VX_DO_PASS1
      9527**DCL     14780>>IF      14781<<ASSIGN
VX_EBUF.CHARS_A
     10099**DCL     10100--REDEF
VX_ECHO
     10488**DCL     14877<<ASSIGN
VX_EFIELD1.CHARS
     10108**DCL     10109--REDEF   14689<<ASSIGN  14722<<ASSIGN
VX_EFIELD1.CHARS_A
     10109**DCL     14494<>CALL
VX_EFIELD1.COUNT
     10107**DCL     14688<<ASSIGN  14721<<ASSIGN
VX_EFIELD2.CHARS
     10112**DCL     10113--REDEF
VX_EFIELD3.CHARS
     10116**DCL     10117--REDEF
VX_EI_FPT_OPEN.ACSVEH_
     13777**DCL     13778--REDEF
VX_EI_FPT_OPEN.ALTKEYS_
     13783**DCL     13784--REDEF   13784--REDEF
VX_EI_FPT_OPEN.HDR_
     13782**DCL     13783--REDEF
VX_EI_FPT_OPEN.TAB_
     13781**DCL     13782--REDEF
VX_EI_FPT_OPEN.UHL_
     13775**DCL     13776--REDEF   13776--REDEF
VX_EI_FPT_OPEN.V
     13784**DCL     13775--DCLINIT 14481>>ASSIGN
VX_EI_FPT_OPEN.V.FSN#
     13815**DCL     13815--REDEF   13815--REDEF
VX_EI_FPT_OPEN.WSN_
     13781**DCL     13781--REDEF
VX_EI_KEY_BUF.KEY
     10492**DCL     10493--REDEF
VX_ERRORS
      9553**DCL      9564--REDEF
PL6.E3A0      #001=VXF$OPEN File=VXF$OPEN.:E05TSI                                WED 07/30/97 08:09 Page:110  
VX_ERRORS.CONFLICT_A
      9559**DCL      9560--REDEF
VX_ERRORS.UNSAT_A
      9555**DCL      9556--REDEF
VX_FPT_ERRMSG.V.DCB#
      8501**DCL     14557<<ASSIGN  14584<<ASSIGN  14646<<ASSIGN  14696<<ASSIGN  14734<<ASSIGN  14850<<ASSIGN
VX_FPT_ERRMSG.V.OUTDCB1#
      8502**DCL     14885<<ASSIGN
VX_FPT_ERRMSG.V.OUTDCB2#
      8502**DCL     14833<<ASSIGN  14871<<ASSIGN
VX_FPT_ERRMSG_AUX.V.OUTDCB2#
     14214**DCL     14834<<ASSIGN  14872<<ASSIGN
VX_IMAGE_DATA.CPAGE#_A
      8690**DCL      8691--REDEF
VX_IMAGE_DATA.NODE_A$
      8702**DCL      8703--REDEF
VX_IMAGE_DATA.START_A$
      8694**DCL      8695--REDEF
VX_IMAGE_DATA.STOP_A$
      8698**DCL      8699--REDEF
VX_IMAGE_DS3.CPAGE#_A
      8759**DCL      8760--REDEF
VX_IMAGE_DS3.NODE_A$
      8771**DCL      8772--REDEF
VX_IMAGE_DS3.START_A$
      8763**DCL      8764--REDEF
VX_IMAGE_DS3.STOP_A$
      8767**DCL      8768--REDEF
VX_IMAGE_DS4.CPAGE#_A
      8782**DCL      8783--REDEF
VX_IMAGE_DS4.NODE_A$
      8794**DCL      8795--REDEF
VX_IMAGE_DS4.START_A$
      8786**DCL      8787--REDEF
VX_IMAGE_DS4.STOP_A$
      8790**DCL      8791--REDEF
PL6.E3A0      #001=VXF$OPEN File=VXF$OPEN.:E05TSI                                WED 07/30/97 08:09 Page:111  
VX_IMAGE_DS5.CPAGE#_A
      8805**DCL      8806--REDEF
VX_IMAGE_DS5.NODE_A$
      8817**DCL      8818--REDEF
VX_IMAGE_DS5.START_A$
      8809**DCL      8810--REDEF
VX_IMAGE_DS5.STOP_A$
      8813**DCL      8814--REDEF
VX_IMAGE_DS6.CPAGE#_A
      8828**DCL      8829--REDEF
VX_IMAGE_DS6.NODE_A$
      8840**DCL      8841--REDEF
VX_IMAGE_DS6.START_A$
      8832**DCL      8833--REDEF
VX_IMAGE_DS6.STOP_A$
      8836**DCL      8837--REDEF
VX_IMAGE_DS7.CPAGE#_A
      8851**DCL      8852--REDEF
VX_IMAGE_DS7.NODE_A$
      8863**DCL      8864--REDEF
VX_IMAGE_DS7.START_A$
      8855**DCL      8856--REDEF
VX_IMAGE_DS7.STOP_A$
      8859**DCL      8860--REDEF
VX_IMAGE_DS8.CPAGE#_A
      8874**DCL      8875--REDEF
VX_IMAGE_DS8.NODE_A$
      8886**DCL      8887--REDEF
VX_IMAGE_DS8.START_A$
      8878**DCL      8879--REDEF
VX_IMAGE_DS8.STOP_A$
      8882**DCL      8883--REDEF
VX_IMAGE_PROC.CPAGE#_A
      8713**DCL      8714--REDEF
VX_IMAGE_PROC.NODE_A$
      8725**DCL      8726--REDEF
PL6.E3A0      #001=VXF$OPEN File=VXF$OPEN.:E05TSI                                WED 07/30/97 08:09 Page:112  
VX_IMAGE_PROC.START_A$
      8717**DCL      8718--REDEF
VX_IMAGE_PROC.STOP_A$
      8721**DCL      8722--REDEF
VX_IMAGE_ROS.CPAGE#_A
      8736**DCL      8737--REDEF
VX_IMAGE_ROS.NODE_A$
      8748**DCL      8749--REDEF
VX_IMAGE_ROS.START_A$
      8740**DCL      8741--REDEF
VX_IMAGE_ROS.STOP_A$
      8744**DCL      8745--REDEF
VX_LIBSRCH$
     10508**DCL     14465<<ASSIGN  14479<<ASSIGN  14529>>IF      14530>>ASSIGN  14531>>ASSIGN  14583>>IF
     14592>>IF      14593>>IF      14603>>ASSIGN  14611>>ASSIGN  14612>>ASSIGN  14706>>IF      14707<<ASSIGN
     14707>>ASSIGN  14708>>IF      14763<<ASSIGN  14767<<ASSIGN
VX_LOF$
      9544**DCL     14836>>IF      14837>>ASSIGN  14838>>ASSIGN  14839>>ASSIGN  14840>>ASSIGN  14841>>ASSIGN
     14842>>IF      14843>>ASSIGN  14846>>IF      14847>>ASSIGN
VX_LO_DO_DIFFER
      9524**DCL     14832<<ASSIGN  14870<<ASSIGN  14878>>ASSIGN
VX_LO_FPT_OPEN
     13545**DCL     14866<>CALL
VX_LO_FPT_OPEN.ACCT_
     13549**DCL     14838<<ASSIGN
VX_LO_FPT_OPEN.ACSVEH_
     13547**DCL     13548--REDEF
VX_LO_FPT_OPEN.ALTKEYS_
     13553**DCL     13554--REDEF   13554--REDEF
VX_LO_FPT_OPEN.HDR_
     13552**DCL     13553--REDEF
VX_LO_FPT_OPEN.NAME_
     13546**DCL     14837<<ASSIGN
VX_LO_FPT_OPEN.PASS_
     13547**DCL     14839<<ASSIGN
VX_LO_FPT_OPEN.SN_
PL6.E3A0      #001=VXF$OPEN File=VXF$OPEN.:E05TSI                                WED 07/30/97 08:09 Page:113  
     13545**DCL     14840<<ASSIGN
VX_LO_FPT_OPEN.TAB_
     13551**DCL     13552--REDEF
VX_LO_FPT_OPEN.UHL_
     13545**DCL     13546--REDEF   13546--REDEF
VX_LO_FPT_OPEN.V
     13554**DCL     13545--DCLINIT
VX_LO_FPT_OPEN.V.ASN#
     13564**DCL     14843<<ASSIGN  14845<<ASSIGN
VX_LO_FPT_OPEN.V.EXIST#
     13558**DCL     14854<<ASSIGN  14857<<ASSIGN  14860<<ASSIGN
VX_LO_FPT_OPEN.V.FSN#
     13585**DCL     13585--REDEF   13585--REDEF
VX_LO_FPT_OPEN.V.RES#
     13569**DCL     14847<<ASSIGN  14849<<ASSIGN
VX_LO_FPT_OPEN.WSN_
     13551**DCL     13551--REDEF   14841<<ASSIGN
VX_M_ALL
      9587**DCL     14596>>IF
VX_M_BASE_PTR
      9589**DCL     14597>>ASSIGN
VX_M_FREE
      9585**DCL     14596>>IF      14597>>ASSIGN  14598<<ASSIGN  14598>>ASSIGN
VX_M_VECTOR.F
      8541**DCL      8545--REDEF
VX_M_VECTOR_DP.F
      8576**DCL      8580--REDEF
VX_N_START_FID
     14442**DCL     14751--CALL
VX_O.ACCTN$.LIBSRCH$
      9707**DCL     14762>>ASSIGN
VX_O.ACCTN$.SRCH$
      9708**DCL     14469>>ASSIGN  14482>>ASSIGN  14769>>ASSIGN
VX_O.ACCTN_A$
      9705**DCL      9706--REDEF
VX_O.DCB_MATCH_A$
PL6.E3A0      #001=VXF$OPEN File=VXF$OPEN.:E05TSI                                WED 07/30/97 08:09 Page:114  
      9714**DCL      9715--REDEF
VX_O.DCB_MATCH_HIT_A
      9720**DCL      9721--REDEF
VX_O.FIDN_A$
      9699**DCL      9700--REDEF
VX_O.FID_A$
      9691**DCL      9692--REDEF
VX_O.INCLUDE_A$
      9711**DCL      9712--REDEF
VX_O.MAP_A
      9685**DCL      9686--REDEF
VX_O.NODCB_A
      9742**DCL      9743--REDEF
VX_O.NUM.IXTNSIZE
      9643**DCL     14474>>ASSIGN
VX_O.NUM.XTNSIZE
      9644**DCL     14476>>ASSIGN
VX_O.NUM_A
      9630**DCL      9632--REDEF
VX_O.OPT_A
      9730**DCL      9731--REDEF
VX_O.PRIV_A
      9646**DCL      9648--REDEF
VX_O.SIN_A
      9599**DCL      9600--REDEF
VX_O.TCB_A
      9726**DCL      9727--REDEF
VX_OD.ACCTN_A$
      9903**DCL      9904--REDEF
VX_OD.DCB_MATCH_A$
      9912**DCL      9913--REDEF
VX_OD.FIDN_A$
      9897**DCL      9898--REDEF
VX_OD.FID_A$
      9889**DCL      9890--REDEF
VX_OD.INCLUDE_A$
PL6.E3A0      #001=VXF$OPEN File=VXF$OPEN.:E05TSI                                WED 07/30/97 08:09 Page:115  
      9909**DCL      9910--REDEF
VX_OD.MAP_A
      9883**DCL      9884--REDEF
VX_OD.NODCB_A
      9927**DCL      9928--REDEF
VX_OD.NUM_A
      9830**DCL      9831--REDEF   14473>>IF      14475>>IF
VX_OD.PRIV_A
      9845**DCL      9846--REDEF
VX_OD.SIN.LSAU
      9826**DCL     14547>>IF
VX_OD.SIN_A
      9799**DCL      9800--REDEF
VX_OD.VECTOR_A$
      9918**DCL      9919--REDEF
VX_OF_FPT_OPEN.ACSVEH_
     13893**DCL     13894--REDEF
VX_OF_FPT_OPEN.ALTKEYS_
     13899**DCL     13900--REDEF   13900--REDEF
VX_OF_FPT_OPEN.HDR_
     13898**DCL     13899--REDEF
VX_OF_FPT_OPEN.TAB_
     13897**DCL     13898--REDEF
VX_OF_FPT_OPEN.UHL_
     13891**DCL     13892--REDEF   13892--REDEF
VX_OF_FPT_OPEN.V
     13900**DCL     13891--DCLINIT 14468>>ASSIGN  14478>>ASSIGN
VX_OF_FPT_OPEN.V.FSN#
     13931**DCL     13931--REDEF   13931--REDEF
VX_OF_FPT_OPEN.WSN_
     13897**DCL     13897--REDEF
VX_OK.FILE.OFNAME.CHARS
      8676**DCL     14629<<ASSIGN
VX_OK.FILE.OFNAME.COUNT
      8675**DCL     14628<<ASSIGN
VX_OK.FILE.RFNAME.CHARS
PL6.E3A0      #001=VXF$OPEN File=VXF$OPEN.:E05TSI                                WED 07/30/97 08:09 Page:116  
      8679**DCL     14632<<ASSIGN
VX_OK.FILE.RFNAME.COUNT
      8678**DCL     14631<<ASSIGN
VX_OL.MAX_A
      9774**DCL      9776--REDEF
VX_OL.MIN_A
      9759**DCL      9760--REDEF
VX_ON.ACCTN_A$
     10048**DCL     10050--REDEF
VX_ON.DCB_MATCH_A$
     10059**DCL     10061--REDEF
VX_ON.FIDN_A$
     10041**DCL     10043--REDEF
VX_ON.FID_A$
     10032**DCL     10034--REDEF
VX_ON.INCLUDE_A$
     10055**DCL     10057--REDEF
VX_ON.MAP_A
     10025**DCL     10027--REDEF
VX_ON.NODCB_A$
     10075**DCL     10076--REDEF
VX_ON.NUM_A
      9970**DCL      9972--REDEF
VX_ON.PRIV_A
      9986**DCL      9988--REDEF
VX_ON.SIN_A
      9938**DCL      9940--REDEF
VX_ON.VECTOR_A$
     10066**DCL     10067--REDEF
VX_ONLINE
      9596**DCL     14647>>IF      14742>>IF
VX_ON_OVER
      9520**DCL     14852>>DOCASE
VX_OUHEAD.VERSION
      9385**DCL      9387--REDEF
VX_OU_HEAD
PL6.E3A0      #001=VXF$OPEN File=VXF$OPEN.:E05TSI                                WED 07/30/97 08:09 Page:117  
      9328**DCL      9367--REDEF
VX_OU_HEAD.REC_A
      9340**DCL      9343--REDEF
VX_O_KEY_BUF.FORM0
      8589**DCL      8592--REDEF    8599--REDEF
VX_O_KEY_BUF_L.FORM0
      8612**DCL      8615--REDEF    8622--REDEF
VX_PASS
      9526**DCL     14637>>IF
VX_PASS2_REF.OU.L_START
     10278**DCL     10283--REDEF
VX_PASS2_REF.OU.L_STOP
     10284**DCL     10289--REDEF
VX_PASS2_REF.OU.MAX
     10272**DCL     10277--REDEF
VX_PASS2_REF.OU.SIZE
     10290**DCL     10295--REDEF
VX_PASS2_REF.SAT.COUNT
     10317**DCL     10323--REDEF
VX_PASS2_REF.SAT.ENT_SIZE
     10324**DCL     10330--REDEF
VX_PASS2_REF.SAT.L_START
     10303**DCL     10309--REDEF
VX_PASS2_REF.SAT.L_STOP
     10310**DCL     10316--REDEF
VX_PASS2_REF.SAT.MAX
     10297**DCL     10302--REDEF
VX_PASS2_REF.UNSAT.L_START
     10365**DCL     10370--REDEF
VX_PASS2_REF.UNSAT.L_STOP
     10371**DCL     10376--REDEF
VX_PASS2_REF.UNSAT.L_WHERE
     10377**DCL     10382--REDEF
VX_PASS2_REF.UNSAT.MAX
     10359**DCL     10364--REDEF
VX_PASS2_REF.UNSAT.PAGE#
PL6.E3A0      #001=VXF$OPEN File=VXF$OPEN.:E05TSI                                WED 07/30/97 08:09 Page:118  
     10389**DCL     10394--REDEF
VX_PASS2_REF.UNSAT.SIZE
     10383**DCL     10388--REDEF
VX_PHRASE.PHRASE
      9791**DCL      9793--REDEF
VX_PROGRAM_BIAS.A
      9569**DCL      9570--REDEF
VX_P_PCB_MAIN.OUT$
      8316**DCL     14754>>CALL
VX_RF_FPT_OPEN.ACSVEH_
     14012**DCL     14013--REDEF
VX_RF_FPT_OPEN.ALTKEYS_
     14018**DCL     14019--REDEF   14019--REDEF
VX_RF_FPT_OPEN.HDR_
     14017**DCL     14018--REDEF
VX_RF_FPT_OPEN.TAB_
     14016**DCL     14017--REDEF
VX_RF_FPT_OPEN.UHL_
     14010**DCL     14011--REDEF   14011--REDEF
VX_RF_FPT_OPEN.V
     14019**DCL     14010--DCLINIT 14471>>ASSIGN
VX_RF_FPT_OPEN.V.FSN#
     14050**DCL     14050--REDEF   14050--REDEF
VX_RF_FPT_OPEN.WSN_
     14016**DCL     14016--REDEF
VX_R_KEY_BUF.FORM0
      8638**DCL      8642--REDEF    8648--REDEF
VX_SD.A
      8266**DCL      8267--REDEF
VX_SPC.B$.MINE
     10460**DCL     10466--REDEF
VX_SPC.B$.NAME
     10439**DCL     10445--REDEF
VX_SPC.B$.SKIP
     10453**DCL     10459--REDEF
VX_SPC.B$.VALUE
PL6.E3A0      #001=VXF$OPEN File=VXF$OPEN.:E05TSI                                WED 07/30/97 08:09 Page:119  
     10446**DCL     10452--REDEF
VX_SPC.SEG.NAME
     10408**DCL     10414--REDEF
VX_SPC.SEG.VALUE
     10415**DCL     10421--REDEF
VX_TSX0_OVERLAY.H
     10183**DCL     10186--REDEF
WHERE$
     14405**DCL     14619<<ASSIGN  14620>>ASSIGN  14621>>ASSIGN  14621>>ASSIGN
WKSZ
     14366**DCL     14750<<ASSIGN  14751<>CALL    14772<>CALL    14775<>CALL
WORK$
     14404**DCL     14618<<ASSIGN  14622>>IF      14623>>CALLBLT
X$WRITE
     11072**DCL-ENT 14551--CALL

PL6.E3A0      #002=VXF$CLOSE File=VXF$OPEN.:E05TSI                               WED 07/30/97 08:11 Page:120  
      499        1        /*T***********************************************************/
      500        2        /*T*                                                         */
      501        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      502        4        /*T*                                                         */
      503        5        /*T***********************************************************/
      504        6        VXF$CLOSE:
      505        7              PROC( CURR_P$, TYPE, MODE );
      506        8        %INCLUDE VX_INC_C;
      507    10724        %PLIST;
      508    10725        %B$TCB;
      509    10728        %B$ALT;
      510    10736        %PLIST;
      511    10737        %INCLUDE B_ERRORS_C;
      512    11864        %LIST;
      513    11865        %EJECT;
PL6.E3A0      #002=VXF$CLOSE File=VXF$OPEN.:E05TSI                               WED 07/30/97 08:11 Page:121  
      514    11866        %FPT_CLOSE( FPTN=VX_OF_FPT_CLOSE,
      515    11867                   DCB=M$OF,
      516    11868                   DISP=SAVE,
      517    11869                   STCLASS="CONSTANT SYMDEF");
             11870        %LSET LISTDIR='0'B;
             11892    1   DCL 1 VX_OF_FPT_CLOSE CONSTANT SYMDEF,2 V_ BIT(72) INIT(VECTOR(VX_OF_FPT_CLOSE.V))
             11892            /**/,2 SN_ BIT(72) INIT(VECTOR(NIL))/**/,2
             11893    1   IRREC_ REDEF SN_ BIT(72),2 UTL_ BIT(72) INIT(VECTOR(NIL))/**/,2 RECFIELD_ REDEF UTL_
             11893            BIT(72),2 NAME_ BIT(72)
             11894    1   INIT(VECTOR(NIL))/**/,2 PASS_ BIT(72) INIT(VECTOR(NIL))/**/,2 ACCESS_ BIT(72) INIT(
             11894            VECTOR(NIL))
             11895    1   /**/,2 ACSVEH_ BIT(72) INIT(VECTOR(NIL))/**/,2 UATTR_ BIT(72) INIT(VECTOR(NIL))/**/,
             11895            2 INSTATTR_ BIT(72)
             11896    1   INIT(VECTOR(NIL))/**/,2 PROCATTR_ BIT(72) INIT(VECTOR(NIL))/**/,2 ACCT_ BIT(72) INIT
             11896            (VECTOR(NIL)
             11897    1   )/**/,2 IFPARAM_ BIT(72) INIT(VECTOR(NIL))/**/,2 ALTKEYS_ BIT(72) INIT(VECTOR(NIL))
             11897            /**/,2
             11898    1   V DALIGNED,3 DCB# UBIN(18)UNAL INIT(DCBNUM(M$OF))/**/,3 OPER,4 CHGATT# BIT(1)INIT(
             11898            '0'B)/**/ ,4 RELG#
             11899    1   BIT(1)INIT('0'B)/**/ ,4 REBLD# BIT(1)INIT('0'B)/**/ ,3 EFTOPER,4 BACKUP# BIT(1)INIT(
             11899            '0'B)
             11900    1   /**/ ,4 ASTOW# BIT(1)INIT('0'B)/**/ ,4 ISTOW# BIT(1)INIT('0'B)/**/ ,4 UPDDESC# BIT(1
             11900            )INIT
             11901    1   ('0'B)/**/ ,4 DELFDE# BIT(1)INIT('0'B)/**/ ,3 TRUNCATE# BIT(1)INIT('0'B)/**/ ,3
             11902    1   DISP# UBIN(9)INIT(2)/**/ UNAL,3 XTNSIZE# UBIN(18)UNAL INIT(0)/**/,3 DESC REDEF
             11902            XTNSIZE# UNAL,4
             11903    1   DELF# BIT(1),4 NOLIST# BIT(1),4 BUF# BIT(1),4 ODSTOW# BIT(1),4 BAD# BIT(1),4 QS# BIT
             11903            (1),4 * BIT(2),4 ARCHIVE# BIT(1),4 BUPM# BIT(1),
             11904    1   4 NBUF# BIT(1),4 ACTIVE# BIT(1),4 TPB# BIT(1),4 TERMINATE# BIT(1),4 FETCH# BIT(1),4
             11904            * BIT(3),3 CLSYSID# REDEF XTNSIZE# UBIN(18)UNAL,
             11905    1   3 TYPE# CHAR(2)INIT(BINASC(0))/**/,3 CLDCB# REDEF TYPE# UBIN(18)UNAL,3 POS# UBIN(9)
             11905            INIT(0)/**/ UNAL,3 BUPM#
             11906    1   BIT(2)INIT('01'B)/**/,3 NOMARKS# BIT(1)INIT('0'B)/**/,3 ALTBLD# BIT(2)INIT('01'B)
             11906            /**/,3
             11907    1   GHSTACS# UBIN(4)INIT(0)/**/UNAL,3 EXPIRE# SBIN(18)UNAL INIT(0)/**/,3 CLINFO# REDEF
             11907            EXPIRE#
             11908    1   UBIN(18)UNAL,3 LSLIDE# UBIN(9)UNAL INIT(0)/**/,3 LRDL0# UBIN(9)UNAL INIT(0)/**/,3
PL6.E3A0      #002=VXF$CLOSE File=VXF$OPEN.:E05TSI                               WED 07/30/97 08:11 Page:122  
             11908            SPARE# UBIN
             11909    1   (9)UNAL INIT(0)/**/,3 * BIT(9)INIT('0'B)/**/;
      518    11911        %PLIST;
      519    11912        %FPT_CLOSE(  FPTN=VX_RF_FPT_CLOSE,
      520    11913                   DCB=M$RF,
      521    11914                   DISP=SAVE,
      522    11915                   CHGATT=YES,
      523    11916                   TYPE="'R '",
      524    11917                   RELG=YES,
      525    11918                   STCLASS="CONSTANT SYMDEF");
      526    11960        %FPT_CLOSE( FPTN=VX_LO_FPT_CLOSE,
      527    11961                   DCB=M$LO,
      528    11962                   DISP=SAVE,
      529    11963                   STCLASS="CONSTANT SYMDEF");
      530    12005        %FPT_CLOSE( FPTN=VX_EI_FPT_CLOSE,
      531    12006                   DCB=M$EI,
      532    12007                   DISP=SAVE,
      533    12008                   STCLASS="CONSTANT SYMDEF");
      534    12050        /**/
      535    12051        /**/
      536    12052        /**/
      537    12053    1   DCL M$OF            DCB;
      538    12054    1   DCL M$RF            DCB;
      539    12055    1   DCL M$EI            DCB;
      540    12056    1   DCL M$LO            DCB;
      541    12057        /**/
      542    12058        /**/
      543    12059        %E;

             12067    1   /*******************************************************************************
             12068    1   *                                                                              *
             12069    1   *                          ENTRY                                                 *
             12070    1   *                                                                              *
             12071    1   *******************************************************************************/

      544    12075        %ENTRIES;
      545    12090        %U;
PL6.E3A0      #002=VXF$CLOSE File=VXF$OPEN.:E05TSI                               WED 07/30/97 08:11 Page:123  

             12098    1   /*******************************************************************************
             12099    1   *                                                                              *
             12100    1   *                          UBIN                                                 *
             12101    1   *                                                                              *
             12102    1   *******************************************************************************/

      546    12106    1   DCL ERR             UBIN(36)  ALIGNED   AUTO;
      547    12107        %P;

             12115    1   /*******************************************************************************
             12116    1   *                                                                              *
             12117    1   *                          PARAMETERS                                              *
             12118    1   *                                                                              *
             12119    1   *******************************************************************************/

      548    12123    1   DCL CURR_P$         PTR;
      549    12124    1   DCL TYPE            UBIN(36);
      550    12125    1   DCL MODE            UBIN(36);
      551    12126        %PTR;

             12134    1   /*******************************************************************************
             12135    1   *                                                                              *
             12136    1   *                          PTR                                                 *
             12137    1   *                                                                              *
             12138    1   *******************************************************************************/

      552    12142    1   DCL CURR$           PTR       ALIGNED   AUTO;
      553    12143        %EJECT;
PL6.E3A0      #002=VXF$CLOSE File=VXF$OPEN.:E05TSI                               WED 07/30/97 08:11 Page:124  
      554    12144    2         DO CASE(TYPE);
      555    12145    2           CASE( @OF );
      556    12146    2             CALL M$CLOSE( VX_OF_FPT_CLOSE ) ALTRET( ERROR );
      557    12147    2           CASE(  @RF );
      558    12148    2             CALL M$CLOSE( VX_RF_FPT_CLOSE ) ALTRET( ERROR );
      559    12149    2           CASE( @LF );
      560    12150    2             CALL M$CLOSE( VX_OF_FPT_CLOSE ) ALTRET( ERROR );
      561    12151    2           CASE( @SF );
      562    12152    2             CALL M$CLOSE( VX_EI_FPT_CLOSE ) ALTRET( ERROR );
      563    12153    2           CASE( @LO );
      564    12154    2             CALL M$CLOSE( VX_LO_FPT_CLOSE ) ALTRET( ERROR );
      565    12155    2           CASE(ELSE);
      566    12156        /*E*  ERROR: VXF-E$INTERNAL_CLOSE_TYPE_VX-0
      567    12157              MESSAGE: Internal LINK error. Bad type passed to VXF$CLOSE: Type = %U1.
      568    12158              DESCRIPTION: Self-explanatory.
      569    12159        */
      570    12160                  %NUMBER( NUM1=TYPE, BASE1=10, SIZE1=12 );
      571    12177                  %SCREAM( ERR#=E$INTERNAL_CLOSE_TYPE_VX, LEVEL=@E$F_VX, MID="'F'" );
      572    12180    2           END;
      573    12181    1         RETURN;
      574    12182    1   ERROR:;
      575    12183    1         ERR = @ALT_ERROR;
      576    12184    1         IF ERR = %E$DCBCLOSED THEN RETURN;
      577    12185    1         CALL M$MERC                   ALTRET( MERC_ERROR );
      578    12186    1         RETURN;
      579    12187    1   MERC_ERROR:
      580    12188    1         CALL VXE$MERC;
      581    12189    1   END VXF$CLOSE;

PL6.E3A0      #002=VXF$CLOSE File=VXF$OPEN.:E05TSI                               WED 07/30/97 08:11 Page:125  
--  Include file information  --

   B_ERRORS_C.:E05TOU  is referenced.
   F_DCB_D.:E05TOU  is referenced.
   VX_DCB_R.:E05TOU  cannot be made into a system file and is referenced.
   VX_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   VX_FIXED_R.:E05TOU  cannot be made into a system file and is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   VX_MACRO_C.:E05TOU  is referenced.
   VX_PERR_C.:E05TOU  is referenced.
   VX_SUBS_C.:E05TOU  is referenced.
   VX_SWITCH_C.:E05TOU  is referenced.
   B$OBJECT_C.:E05TOU  is referenced.
   VX_INC_C.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure VXF$CLOSE.

   Procedure VXF$CLOSE requires 70 words for executable code.
   Procedure VXF$CLOSE requires 14 words of local(AUTO) storage.

    No errors detected in file VXF$OPEN.:E05TSI    .

PL6.E3A0      #002=VXF$CLOSE File=VXF$OPEN.:E05TSI                               WED 07/30/97 08:11 Page:126  

 Object Unit name= VXF$CLOSE                                  File name= VXF$OPEN.:E05TOU
 UTS= JUL 30 '97 08:11:12.12 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1  LblCom even  none    96    140  VX_CONST_DCB
    2  RoData even  UTS    120    170  VXF$CLOSE
    3   DCB   even  none     0      0  M$OF
    4   DCB   even  none     0      0  M$RF
    5   DCB   even  none     0      0  M$EI
    6   DCB   even  none     0      0  M$LO
    7   Proc  even  none    70    106  VXF$CLOSE
    8  RoData even  none    10     12  VXF$CLOSE

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     7      0   yes            yes      Std        3  VXF$CLOSE

  ****  Data defs  ****

 Sect OctLoc  Name                           Sect OctLoc  Name
    2      0  VX_OF_FPT_CLOSE                    2     36  VX_RF_FPT_CLOSE
    2     74  VX_LO_FPT_CLOSE                    2    132  VX_EI_FPT_CLOSE
PL6.E3A0      #002=VXF$CLOSE File=VXF$OPEN.:E05TSI                               WED 07/30/97 08:11 Page:127  

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       4 VXE$ERROR
         yes           Std       5 VXD$B2C
         yes           Std       0 VXE$MERC
                       nStd      0 X66_AUTO_3
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                                  B$TCB$                                VX_OU_HEAD
     VX_ERRORS                             VX_EFIELD1                            M$OF
     M$RF                                  M$EI                                  M$LO
     B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     NULLSID                               ISSID
PL6.E3A0      #002=VXF$CLOSE File=VXF$OPEN.:E05TSI                               WED 07/30/97 08:11 Page:128  


      499        1        /*T***********************************************************/
      500        2        /*T*                                                         */
      501        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      502        4        /*T*                                                         */
      503        5        /*T***********************************************************/
      504        6        VXF$CLOSE:
      505        7              PROC( CURR_P$, TYPE, MODE );

      7  7 000000   000000 700200 xent  VXF$CLOSE    TSX0  ! X66_AUTO_3
         7 000001   000016 000003                    ZERO    14,3

      506        8        %INCLUDE VX_INC_C;
      507    10724        %PLIST;
      508    10725        %B$TCB;
      509    10728        %B$ALT;
      510    10736        %PLIST;
      511    10737        %INCLUDE B_ERRORS_C;
      512    11864        %LIST;
      513    11865        %EJECT;
PL6.E3A0      #002=VXF$CLOSE File=VXF$OPEN.:E05TSI                               WED 07/30/97 08:11 Page:129  
      514    11866        %FPT_CLOSE( FPTN=VX_OF_FPT_CLOSE,
      515    11867                   DCB=M$OF,
      516    11868                   DISP=SAVE,
      517    11869                   STCLASS="CONSTANT SYMDEF");
             11870        %LSET LISTDIR='0'B;
             11892    1   DCL 1 VX_OF_FPT_CLOSE CONSTANT SYMDEF,2 V_ BIT(72) INIT(VECTOR(VX_OF_FPT_CLOSE.V))
             11892            /**/,2 SN_ BIT(72) INIT(VECTOR(NIL))/**/,2
             11893    1  IRREC_ REDEF SN_ BIT(72),2 UTL_ BIT(72) INIT(VECTOR(NIL))/**/,2 RECFIELD_ REDEF UTL_
             11893            BIT(72),2 NAME_ BIT(72)
             11894    1   INIT(VECTOR(NIL))/**/,2 PASS_ BIT(72) INIT(VECTOR(NIL))/**/,2 ACCESS_ BIT(72) INIT(
             11894            VECTOR(NIL))
             11895    1  /**/,2 ACSVEH_ BIT(72) INIT(VECTOR(NIL))/**/,2 UATTR_ BIT(72) INIT(VECTOR(NIL))/**/,
             11895            2 INSTATTR_ BIT(72)
             11896    1  INIT(VECTOR(NIL))/**/,2 PROCATTR_ BIT(72) INIT(VECTOR(NIL))/**/,2 ACCT_ BIT(72) INIT
             11896            (VECTOR(NIL)
             11897    1   )/**/,2 IFPARAM_ BIT(72) INIT(VECTOR(NIL))/**/,2 ALTKEYS_ BIT(72) INIT(VECTOR(NIL))
             11897            /**/,2
             11898    1   V DALIGNED,3 DCB# UBIN(18)UNAL INIT(DCBNUM(M$OF))/**/,3 OPER,4 CHGATT# BIT(1)INIT(
             11898            '0'B)/**/ ,4 RELG#
             11899    1  BIT(1)INIT('0'B)/**/ ,4 REBLD# BIT(1)INIT('0'B)/**/ ,3 EFTOPER,4 BACKUP# BIT(1)INIT(
             11899            '0'B)
             11900    1  /**/ ,4 ASTOW# BIT(1)INIT('0'B)/**/ ,4 ISTOW# BIT(1)INIT('0'B)/**/ ,4 UPDDESC# BIT(1
             11900            )INIT
             11901    1   ('0'B)/**/ ,4 DELFDE# BIT(1)INIT('0'B)/**/ ,3 TRUNCATE# BIT(1)INIT('0'B)/**/ ,3
             11902    1   DISP# UBIN(9)INIT(2)/**/ UNAL,3 XTNSIZE# UBIN(18)UNAL INIT(0)/**/,3 DESC REDEF
             11902            XTNSIZE# UNAL,4
             11903    1  DELF# BIT(1),4 NOLIST# BIT(1),4 BUF# BIT(1),4 ODSTOW# BIT(1),4 BAD# BIT(1),4 QS# BIT
             11903            (1),4 * BIT(2),4 ARCHIVE# BIT(1),4 BUPM# BIT(1),
             11904    1   4 NBUF# BIT(1),4 ACTIVE# BIT(1),4 TPB# BIT(1),4 TERMINATE# BIT(1),4 FETCH# BIT(1),4
             11904            * BIT(3),3 CLSYSID# REDEF XTNSIZE# UBIN(18)UNAL,
             11905    1   3 TYPE# CHAR(2)INIT(BINASC(0))/**/,3 CLDCB# REDEF TYPE# UBIN(18)UNAL,3 POS# UBIN(9)
             11905            INIT(0)/**/ UNAL,3 BUPM#
             11906    1   BIT(2)INIT('01'B)/**/,3 NOMARKS# BIT(1)INIT('0'B)/**/,3 ALTBLD# BIT(2)INIT('01'B)
             11906            /**/,3
             11907    1   GHSTACS# UBIN(4)INIT(0)/**/UNAL,3 EXPIRE# SBIN(18)UNAL INIT(0)/**/,3 CLINFO# REDEF
             11907            EXPIRE#
             11908    1   UBIN(18)UNAL,3 LSLIDE# UBIN(9)UNAL INIT(0)/**/,3 LRDL0# UBIN(9)UNAL INIT(0)/**/,3
PL6.E3A0      #002=VXF$CLOSE File=VXF$OPEN.:E05TSI                               WED 07/30/97 08:11 Page:130  
             11908            SPARE# UBIN
             11909    1   (9)UNAL INIT(0)/**/,3 * BIT(9)INIT('0'B)/**/;
      518    11911        %PLIST;
      519    11912        %FPT_CLOSE(  FPTN=VX_RF_FPT_CLOSE,
      520    11913                   DCB=M$RF,
      521    11914                   DISP=SAVE,
      522    11915                   CHGATT=YES,
      523    11916                   TYPE="'R '",
      524    11917                   RELG=YES,
      525    11918                   STCLASS="CONSTANT SYMDEF");
      526    11960        %FPT_CLOSE( FPTN=VX_LO_FPT_CLOSE,
      527    11961                   DCB=M$LO,
      528    11962                   DISP=SAVE,
      529    11963                   STCLASS="CONSTANT SYMDEF");
      530    12005        %FPT_CLOSE( FPTN=VX_EI_FPT_CLOSE,
      531    12006                   DCB=M$EI,
      532    12007                   DISP=SAVE,
      533    12008                   STCLASS="CONSTANT SYMDEF");
      534    12050        /**/
      535    12051        /**/
      536    12052        /**/
      537    12053    1   DCL M$OF            DCB;
      538    12054    1   DCL M$RF            DCB;
      539    12055    1   DCL M$EI            DCB;
      540    12056    1   DCL M$LO            DCB;
      541    12057        /**/
      542    12058        /**/
      543    12059        %E;

             12067    1   /*******************************************************************************
             12068    1   *                                                                              *
             12069    1   *                          ENTRY                                                 *
             12070    1   *                                                                              *
             12071    1   *******************************************************************************/

      544    12075        %ENTRIES;
      545    12090        %U;
PL6.E3A0      #002=VXF$CLOSE File=VXF$OPEN.:E05TSI                               WED 07/30/97 08:11 Page:131  

             12098    1   /*******************************************************************************
             12099    1   *                                                                              *
             12100    1   *                          UBIN                                                 *
             12101    1   *                                                                              *
             12102    1   *******************************************************************************/

      546    12106    1   DCL ERR             UBIN(36)  ALIGNED   AUTO;
      547    12107        %P;

             12115    1   /*******************************************************************************
             12116    1   *                                                                              *
             12117    1   *                          PARAMETERS                                             *
             12118    1   *                                                                              *
             12119    1   *******************************************************************************/

      548    12123    1   DCL CURR_P$         PTR;
      549    12124    1   DCL TYPE            UBIN(36);
      550    12125    1   DCL MODE            UBIN(36);
      551    12126        %PTR;

             12134    1   /*******************************************************************************
             12135    1   *                                                                              *
             12136    1   *                          PTR                                                 *
             12137    1   *                                                                              *
             12138    1   *******************************************************************************/

      552    12142    1   DCL CURR$           PTR       ALIGNED   AUTO;
      553    12143        %EJECT;
PL6.E3A0      #002=VXF$CLOSE File=VXF$OPEN.:E05TSI                               WED 07/30/97 08:11 Page:132  
      554    12144    2         DO CASE(TYPE);

  12144  7 000002   200004 470500                    LDP0    @TYPE,,AUTO
         7 000003   000000 235100                    LDA     0,,PR0
         7 000004   000005 115007                    CMPA    5,DL
         7 000005   000007 602005 7                  TNC     s:12144+5,AL
         7 000006   000045 710000 7                  TRA     s:12166
         7 000007   000014 710000 7                  TRA     s:12146
         7 000010   000021 710000 7                  TRA     s:12148
         7 000011   000026 710000 7                  TRA     s:12150
         7 000012   000033 710000 7                  TRA     s:12152
         7 000013   000040 710000 7                  TRA     s:12154

      555    12145    2           CASE( @OF );

      556    12146    2             CALL M$CLOSE( VX_OF_FPT_CLOSE ) ALTRET( ERROR );

  12146  7 000014   000000 630400 2                  EPPR0   VX_OF_FPT_CLOSE
         7 000015   450001 713400                    CLIMB   alt,close
         7 000016   406000 401760                    pmme    nvectors=13
         7 000017   000065 702000 7                  TSX2    ERROR
         7 000020   000064 710000 7                  TRA     s:12181

      557    12147    2           CASE(  @RF );

      558    12148    2             CALL M$CLOSE( VX_RF_FPT_CLOSE ) ALTRET( ERROR );

  12148  7 000021   000036 630400 2                  EPPR0   VX_RF_FPT_CLOSE
         7 000022   450001 713400                    CLIMB   alt,close
         7 000023   406000 401760                    pmme    nvectors=13
         7 000024   000065 702000 7                  TSX2    ERROR
         7 000025   000064 710000 7                  TRA     s:12181

      559    12149    2           CASE( @LF );

      560    12150    2             CALL M$CLOSE( VX_OF_FPT_CLOSE ) ALTRET( ERROR );

PL6.E3A0      #002=VXF$CLOSE File=VXF$OPEN.:E05TSI                               WED 07/30/97 08:11 Page:133  
  12150  7 000026   000000 630400 2                  EPPR0   VX_OF_FPT_CLOSE
         7 000027   450001 713400                    CLIMB   alt,close
         7 000030   406000 401760                    pmme    nvectors=13
         7 000031   000065 702000 7                  TSX2    ERROR
         7 000032   000064 710000 7                  TRA     s:12181

      561    12151    2           CASE( @SF );

      562    12152    2             CALL M$CLOSE( VX_EI_FPT_CLOSE ) ALTRET( ERROR );

  12152  7 000033   000132 630400 2                  EPPR0   VX_EI_FPT_CLOSE
         7 000034   450001 713400                    CLIMB   alt,close
         7 000035   406000 401760                    pmme    nvectors=13
         7 000036   000065 702000 7                  TSX2    ERROR
         7 000037   000064 710000 7                  TRA     s:12181

      563    12153    2           CASE( @LO );

      564    12154    2             CALL M$CLOSE( VX_LO_FPT_CLOSE ) ALTRET( ERROR );

  12154  7 000040   000074 630400 2                  EPPR0   VX_LO_FPT_CLOSE
         7 000041   450001 713400                    CLIMB   alt,close
         7 000042   406000 401760                    pmme    nvectors=13
         7 000043   000065 702000 7                  TSX2    ERROR
         7 000044   000064 710000 7                  TRA     s:12181

      565    12155    2           CASE(ELSE);

      566    12156        /*E*  ERROR: VXF-E$INTERNAL_CLOSE_TYPE_VX-0
      567    12157              MESSAGE: Internal LINK error. Bad type passed to VXF$CLOSE: Type = %U1.
      568    12158              DESCRIPTION: Self-explanatory.
      569    12159        */
      570    12160                  %NUMBER( NUM1=TYPE, BASE1=10, SIZE1=12 );

  12166  7 000045   000000 236000 8                  LDQ     0
         7 000046   200014 756100                    STQ     ERR+6,,AUTO
         7 000047   200004 236100                    LDQ     @TYPE,,AUTO
PL6.E3A0      #002=VXF$CLOSE File=VXF$OPEN.:E05TSI                               WED 07/30/97 08:11 Page:134  
         7 000050   000001 235000 8                  LDA     1
         7 000051   200012 757100                    STAQ    ERR+4,,AUTO
         7 000052   000002 237000 8                  LDAQ    2
         7 000053   200010 757100                    STAQ    ERR+2,,AUTO
         7 000054   200010 630500                    EPPR0   ERR+2,,AUTO
         7 000055   000023 631400 xsym               EPPR1   B_VECTNIL+19
         7 000056   000000 701000 xent               TSX1    VXD$B2C
         7 000057   000000 011000                    NOP     0

      571    12177                  %SCREAM( ERR#=E$INTERNAL_CLOSE_TYPE_VX, LEVEL=@E$F_VX, MID="'F'" );

  12178  7 000060   000006 630400 8                  EPPR0   6
         7 000061   000022 631400 xsym               EPPR1   B_VECTNIL+18
         7 000062   000000 701000 xent               TSX1    VXE$ERROR
         7 000063   000000 011000                    NOP     0

      572    12180    2           END;

      573    12181    1         RETURN;

  12181  7 000064   000000 702200 xent               TSX2  ! X66_ARET

  12178  7 000065                       ERROR        null
      574    12182    1   ERROR:;
      575    12183    1         ERR = @ALT_ERROR;

  12183  7 000065   000000 470400 xsym               LDP0    B$TCB$
         7 000066   000000 471500                    LDP1    0,,PR0
         7 000067   100102 236100                    LDQ     66,,PR1
         7 000070   000003 772000                    QRL     3
         7 000071   037777 376007                    ANQ     16383,DL
         7 000072   200006 756100                    STQ     ERR,,AUTO

      576    12184    1         IF ERR = %E$DCBCLOSED THEN RETURN;

  12184  7 000073   000226 116007                    CMPQ    150,DL
         7 000074   000076 601000 7                  TNZ     s:12185
PL6.E3A0      #002=VXF$CLOSE File=VXF$OPEN.:E05TSI                               WED 07/30/97 08:11 Page:135  

  12184  7 000075   000000 702200 xent               TSX2  ! X66_ARET

      577    12185    1         CALL M$MERC                   ALTRET( MERC_ERROR );

  12185  7 000076   410007 713400                    CLIMB   alt,+4103
         7 000077   000000 401760                    pmme    nvectors=0
         7 000100   000102 702000 7                  TSX2    MERC_ERROR

      578    12186    1         RETURN;

  12186  7 000101   000000 702200 xent               TSX2  ! X66_ARET

      579    12187    1   MERC_ERROR:
      580    12188    1         CALL VXE$MERC;

  12188  7 000102   000002 631400 xsym  MERC_ERROR   EPPR1   B_VECTNIL+2
         7 000103   000000 701000 xent               TSX1    VXE$MERC
         7 000104   000000 011000                    NOP     0

      581    12189    1   END VXF$CLOSE;

  12189  7 000105   000000 702200 xent               TSX2  ! X66_ARET

PL6.E3A0      #002=VXF$CLOSE File=VXF$OPEN.:E05TSI                               WED 07/30/97 08:11 Page:136  
--  Include file information  --

   B_ERRORS_C.:E05TOU  is referenced.
   F_DCB_D.:E05TOU  is referenced.
   VX_DCB_R.:E05TOU  cannot be made into a system file and is referenced.
   VX_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   VX_FIXED_R.:E05TOU  cannot be made into a system file and is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   VX_MACRO_C.:E05TOU  is referenced.
   VX_PERR_C.:E05TOU  is referenced.
   VX_SUBS_C.:E05TOU  is referenced.
   VX_SWITCH_C.:E05TOU  is referenced.
   B$OBJECT_C.:E05TOU  is referenced.
   VX_INC_C.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure VXF$CLOSE.
PL6.E3A0      #002=VXF$CLOSE File=VXF$OPEN.:E05TSI                               WED 07/30/97 08:11 Page:137  

 **** Variables and constants ****

  ****  Section 002 RoData VXF$CLOSE

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

   132-0-0/d STRC(1080)  r     1 VX_EI_FPT_CLOSE           74-0-0/d STRC(1080)  r     1 VX_LO_FPT_CLOSE
     0-0-0/d STRC(1080)  r     1 VX_OF_FPT_CLOSE           36-0-0/d STRC(1080)  r     1 VX_RF_FPT_CLOSE

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @CURR_P$                   5-0-0/w PTR         r     1 @MODE
     4-0-0/w PTR         r     1 @TYPE                     *0-0-0/w PTR         r     1 CURR_P$
     6-0-0/w UBIN        r     1 ERR                       *0-0-0/w UBIN        r     1 MODE
    *0-0-0/w UBIN        r     1 TYPE

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 B$TCB$                     0-0-0/w STRC(720)   r     1 VX_EFIELD1

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(2448)  r     1 B$ALT                      0-0-0/w STRC(144)   r     1 B$TCB
     0-0-0N  NULL        r     1 M$EI                       0-0-0N  NULL        r     1 M$LO
     0-0-0N  NULL        r     1 M$OF                       0-0-0N  NULL        r     1 M$RF

PL6.E3A0      #002=VXF$CLOSE File=VXF$OPEN.:E05TSI                               WED 07/30/97 08:11 Page:138  

   Procedure VXF$CLOSE requires 70 words for executable code.
   Procedure VXF$CLOSE requires 14 words of local(AUTO) storage.

    No errors detected in file VXF$OPEN.:E05TSI    .
PL6.E3A0      #002=VXF$CLOSE File=VXF$OPEN.:E05TSI                               WED 07/30/97 08:11 Page:139  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #002=VXF$CLOSE File=VXF$OPEN.:E05TSI                               WED 07/30/97 08:11 Page:140  
          MINI XREF LISTING

B$ALT.CODE
     10730**DCL     10730--REDEF   10731--REDEF   10731--REDEF
B$ALT.ERR.ERR#
     10732**DCL     10732--REDEF   12183>>ASSIGN
B$ALT.EVID
     10731**DCL     10731--REDEF   10731--REDEF
B$TCB.ALT$
     10726**DCL     12183>>ASSIGN
B$TCB$
      8909**DCL     12183>>ASSIGN
CURR_P$
     12123**DCL         6--PROC
ERR
     12106**DCL     12183<<ASSIGN  12184>>IF
ERROR
     12178**LABEL   12146--CALLALT 12148--CALLALT 12150--CALLALT 12152--CALLALT 12154--CALLALT
M$CLOSE
      5071**DCL-ENT 12146--CALL    12148--CALL    12150--CALL    12152--CALL    12154--CALL
M$MERC
      5127**DCL-ENT 12185--CALL
MERC_ERROR
     12188**LABEL   12185--CALLALT
MODE
     12125**DCL         6--PROC
TYPE
     12124**DCL         6--PROC    12144>>DOCASE  12166<>CALL
VXD$B2C
     12083**DCL-ENT 12166--CALL
VXE$ERROR
     12076**DCL-ENT 12178--CALL
VXE$MERC
     12078**DCL-ENT 12188--CALL
PL6.E3A0      #002=VXF$CLOSE File=VXF$OPEN.:E05TSI                               WED 07/30/97 08:11 Page:141  
VX_BIAS.A
      9574**DCL      9575--REDEF
VX_CBUF.CHARS_A
      9508**DCL      9509--REDEF
VX_CONST_DCB.ACTPOS
     10690**DCL     10690--REDEF
VX_CONST_DCB.ARS#
     10649**DCL     10649--REDEF
VX_CONST_DCB.ATTR#
     10679**DCL     10679--REDEF   10681--REDEF
VX_CONST_DCB.BORROW
     10701**DCL     10701--REDEF   10701--REDEF   10701--REDEF
VX_CONST_DCB.EOMCHAR#
     10656**DCL     10657--REDEF
VX_CONST_DCB.FLDID
     10693**DCL     10694--REDEF
VX_CONST_DCB.FORM$
     10685**DCL     10685--REDEF
VX_CONST_DCB.FSECT
     10708**DCL     10708--REDEF
VX_CONST_DCB.FSN#
     10675**DCL     10675--REDEF   10675--REDEF   10676--REDEF
VX_CONST_DCB.HEADER$
     10684**DCL     10685--REDEF
VX_CONST_DCB.IXTNSIZE#
     10681**DCL     10682--REDEF
VX_CONST_DCB.LASTSTA$
     10665**DCL     10665--REDEF
VX_CONST_DCB.LVL
     10702**DCL     10702--REDEF
VX_CONST_DCB.NAME#.C
     10665**DCL     10666--REDEF
VX_CONST_DCB.NOEOF
     10697**DCL     10697--REDEF
VX_CONST_DCB.NRECS#
     10682**DCL     10682--REDEF
PL6.E3A0      #002=VXF$CLOSE File=VXF$OPEN.:E05TSI                               WED 07/30/97 08:11 Page:142  
VX_CONST_DCB.NRECX
     10709**DCL     10709--REDEF
VX_CONST_DCB.OHDR
     10698**DCL     10698--REDEF
VX_CONST_DCB.ORG#
     10673**DCL     10674--REDEF
VX_CONST_DCB.PRECNO
     10706**DCL     10706--REDEF
VX_CONST_DCB.RCSZ
     10714**DCL     10714--REDEF
VX_CONST_DCB.RES#
     10667**DCL     10667--REDEF
VX_CONST_DCB.SETX
     10686**DCL     10686--REDEF
VX_CONST_DCB.TAB$
     10685**DCL     10685--REDEF
VX_CONST_DCB.TDA
     10705**DCL     10706--REDEF
VX_CONST_DCB.WSN#
     10667**DCL     10668--REDEF
VX_EBUF.CHARS_A
     10097**DCL     10098--REDEF
VX_EFIELD1.CHARS
     10106**DCL     10107--REDEF
VX_EFIELD1.CHARS_A
     10107**DCL     12166<>CALL
VX_EFIELD2.CHARS
     10110**DCL     10111--REDEF
VX_EFIELD3.CHARS
     10114**DCL     10115--REDEF
VX_EI_FPT_CLOSE
     12031**DCL     12152<>CALL
VX_EI_FPT_CLOSE.SN_
     12031**DCL     12031--REDEF
VX_EI_FPT_CLOSE.UTL_
     12032**DCL     12032--REDEF
PL6.E3A0      #002=VXF$CLOSE File=VXF$OPEN.:E05TSI                               WED 07/30/97 08:11 Page:143  
VX_EI_FPT_CLOSE.V
     12036**DCL     12031--DCLINIT
VX_EI_FPT_CLOSE.V.EXPIRE#
     12046**DCL     12046--REDEF
VX_EI_FPT_CLOSE.V.TYPE#
     12044**DCL     12044--REDEF
VX_EI_FPT_CLOSE.V.XTNSIZE#
     12041**DCL     12041--REDEF   12043--REDEF
VX_EI_KEY_BUF.KEY
     10490**DCL     10491--REDEF
VX_ERRORS
      9551**DCL      9562--REDEF
VX_ERRORS.CONFLICT_A
      9557**DCL      9558--REDEF
VX_ERRORS.UNSAT_A
      9553**DCL      9554--REDEF
VX_IMAGE_DATA.CPAGE#_A
      8688**DCL      8689--REDEF
VX_IMAGE_DATA.NODE_A$
      8700**DCL      8701--REDEF
VX_IMAGE_DATA.START_A$
      8692**DCL      8693--REDEF
VX_IMAGE_DATA.STOP_A$
      8696**DCL      8697--REDEF
VX_IMAGE_DS3.CPAGE#_A
      8757**DCL      8758--REDEF
VX_IMAGE_DS3.NODE_A$
      8769**DCL      8770--REDEF
VX_IMAGE_DS3.START_A$
      8761**DCL      8762--REDEF
VX_IMAGE_DS3.STOP_A$
      8765**DCL      8766--REDEF
VX_IMAGE_DS4.CPAGE#_A
      8780**DCL      8781--REDEF
VX_IMAGE_DS4.NODE_A$
      8792**DCL      8793--REDEF
PL6.E3A0      #002=VXF$CLOSE File=VXF$OPEN.:E05TSI                               WED 07/30/97 08:11 Page:144  
VX_IMAGE_DS4.START_A$
      8784**DCL      8785--REDEF
VX_IMAGE_DS4.STOP_A$
      8788**DCL      8789--REDEF
VX_IMAGE_DS5.CPAGE#_A
      8803**DCL      8804--REDEF
VX_IMAGE_DS5.NODE_A$
      8815**DCL      8816--REDEF
VX_IMAGE_DS5.START_A$
      8807**DCL      8808--REDEF
VX_IMAGE_DS5.STOP_A$
      8811**DCL      8812--REDEF
VX_IMAGE_DS6.CPAGE#_A
      8826**DCL      8827--REDEF
VX_IMAGE_DS6.NODE_A$
      8838**DCL      8839--REDEF
VX_IMAGE_DS6.START_A$
      8830**DCL      8831--REDEF
VX_IMAGE_DS6.STOP_A$
      8834**DCL      8835--REDEF
VX_IMAGE_DS7.CPAGE#_A
      8849**DCL      8850--REDEF
VX_IMAGE_DS7.NODE_A$
      8861**DCL      8862--REDEF
VX_IMAGE_DS7.START_A$
      8853**DCL      8854--REDEF
VX_IMAGE_DS7.STOP_A$
      8857**DCL      8858--REDEF
VX_IMAGE_DS8.CPAGE#_A
      8872**DCL      8873--REDEF
VX_IMAGE_DS8.NODE_A$
      8884**DCL      8885--REDEF
VX_IMAGE_DS8.START_A$
      8876**DCL      8877--REDEF
VX_IMAGE_DS8.STOP_A$
      8880**DCL      8881--REDEF
PL6.E3A0      #002=VXF$CLOSE File=VXF$OPEN.:E05TSI                               WED 07/30/97 08:11 Page:145  
VX_IMAGE_PROC.CPAGE#_A
      8711**DCL      8712--REDEF
VX_IMAGE_PROC.NODE_A$
      8723**DCL      8724--REDEF
VX_IMAGE_PROC.START_A$
      8715**DCL      8716--REDEF
VX_IMAGE_PROC.STOP_A$
      8719**DCL      8720--REDEF
VX_IMAGE_ROS.CPAGE#_A
      8734**DCL      8735--REDEF
VX_IMAGE_ROS.NODE_A$
      8746**DCL      8747--REDEF
VX_IMAGE_ROS.START_A$
      8738**DCL      8739--REDEF
VX_IMAGE_ROS.STOP_A$
      8742**DCL      8743--REDEF
VX_LO_FPT_CLOSE
     11986**DCL     12154<>CALL
VX_LO_FPT_CLOSE.SN_
     11986**DCL     11986--REDEF
VX_LO_FPT_CLOSE.UTL_
     11987**DCL     11987--REDEF
VX_LO_FPT_CLOSE.V
     11991**DCL     11986--DCLINIT
VX_LO_FPT_CLOSE.V.EXPIRE#
     12001**DCL     12001--REDEF
VX_LO_FPT_CLOSE.V.TYPE#
     11999**DCL     11999--REDEF
VX_LO_FPT_CLOSE.V.XTNSIZE#
     11996**DCL     11996--REDEF   11998--REDEF
VX_M_VECTOR.F
      8539**DCL      8543--REDEF
VX_M_VECTOR_DP.F
      8574**DCL      8578--REDEF
VX_O.ACCTN_A$
      9703**DCL      9704--REDEF
PL6.E3A0      #002=VXF$CLOSE File=VXF$OPEN.:E05TSI                               WED 07/30/97 08:11 Page:146  
VX_O.DCB_MATCH_A$
      9712**DCL      9713--REDEF
VX_O.DCB_MATCH_HIT_A
      9718**DCL      9719--REDEF
VX_O.FIDN_A$
      9697**DCL      9698--REDEF
VX_O.FID_A$
      9689**DCL      9690--REDEF
VX_O.INCLUDE_A$
      9709**DCL      9710--REDEF
VX_O.MAP_A
      9683**DCL      9684--REDEF
VX_O.NODCB_A
      9740**DCL      9741--REDEF
VX_O.NUM_A
      9628**DCL      9630--REDEF
VX_O.OPT_A
      9728**DCL      9729--REDEF
VX_O.PRIV_A
      9644**DCL      9646--REDEF
VX_O.SIN_A
      9597**DCL      9598--REDEF
VX_O.TCB_A
      9724**DCL      9725--REDEF
VX_OD.ACCTN_A$
      9901**DCL      9902--REDEF
VX_OD.DCB_MATCH_A$
      9910**DCL      9911--REDEF
VX_OD.FIDN_A$
      9895**DCL      9896--REDEF
VX_OD.FID_A$
      9887**DCL      9888--REDEF
VX_OD.INCLUDE_A$
      9907**DCL      9908--REDEF
VX_OD.MAP_A
      9881**DCL      9882--REDEF
PL6.E3A0      #002=VXF$CLOSE File=VXF$OPEN.:E05TSI                               WED 07/30/97 08:11 Page:147  
VX_OD.NODCB_A
      9925**DCL      9926--REDEF
VX_OD.NUM_A
      9828**DCL      9829--REDEF
VX_OD.PRIV_A
      9843**DCL      9844--REDEF
VX_OD.SIN_A
      9797**DCL      9798--REDEF
VX_OD.VECTOR_A$
      9916**DCL      9917--REDEF
VX_OF_FPT_CLOSE
     11892**DCL     12146<>CALL    12150<>CALL
VX_OF_FPT_CLOSE.SN_
     11892**DCL     11892--REDEF
VX_OF_FPT_CLOSE.UTL_
     11893**DCL     11893--REDEF
VX_OF_FPT_CLOSE.V
     11897**DCL     11892--DCLINIT
VX_OF_FPT_CLOSE.V.EXPIRE#
     11907**DCL     11907--REDEF
VX_OF_FPT_CLOSE.V.TYPE#
     11905**DCL     11905--REDEF
VX_OF_FPT_CLOSE.V.XTNSIZE#
     11902**DCL     11902--REDEF   11904--REDEF
VX_OL.MAX_A
      9772**DCL      9774--REDEF
VX_OL.MIN_A
      9757**DCL      9758--REDEF
VX_ON.ACCTN_A$
     10046**DCL     10048--REDEF
VX_ON.DCB_MATCH_A$
     10057**DCL     10059--REDEF
VX_ON.FIDN_A$
     10039**DCL     10041--REDEF
VX_ON.FID_A$
     10030**DCL     10032--REDEF
PL6.E3A0      #002=VXF$CLOSE File=VXF$OPEN.:E05TSI                               WED 07/30/97 08:11 Page:148  
VX_ON.INCLUDE_A$
     10053**DCL     10055--REDEF
VX_ON.MAP_A
     10023**DCL     10025--REDEF
VX_ON.NODCB_A$
     10073**DCL     10074--REDEF
VX_ON.NUM_A
      9968**DCL      9970--REDEF
VX_ON.PRIV_A
      9984**DCL      9986--REDEF
VX_ON.SIN_A
      9936**DCL      9938--REDEF
VX_ON.VECTOR_A$
     10064**DCL     10065--REDEF
VX_OUHEAD.VERSION
      9383**DCL      9385--REDEF
VX_OU_HEAD
      9326**DCL      9365--REDEF
VX_OU_HEAD.REC_A
      9338**DCL      9341--REDEF
VX_O_KEY_BUF.FORM0
      8587**DCL      8590--REDEF    8597--REDEF
VX_O_KEY_BUF_L.FORM0
      8610**DCL      8613--REDEF    8620--REDEF
VX_PASS2_REF.OU.L_START
     10276**DCL     10281--REDEF
VX_PASS2_REF.OU.L_STOP
     10282**DCL     10287--REDEF
VX_PASS2_REF.OU.MAX
     10270**DCL     10275--REDEF
VX_PASS2_REF.OU.SIZE
     10288**DCL     10293--REDEF
VX_PASS2_REF.SAT.COUNT
     10315**DCL     10321--REDEF
VX_PASS2_REF.SAT.ENT_SIZE
     10322**DCL     10328--REDEF
PL6.E3A0      #002=VXF$CLOSE File=VXF$OPEN.:E05TSI                               WED 07/30/97 08:11 Page:149  
VX_PASS2_REF.SAT.L_START
     10301**DCL     10307--REDEF
VX_PASS2_REF.SAT.L_STOP
     10308**DCL     10314--REDEF
VX_PASS2_REF.SAT.MAX
     10295**DCL     10300--REDEF
VX_PASS2_REF.UNSAT.L_START
     10363**DCL     10368--REDEF
VX_PASS2_REF.UNSAT.L_STOP
     10369**DCL     10374--REDEF
VX_PASS2_REF.UNSAT.L_WHERE
     10375**DCL     10380--REDEF
VX_PASS2_REF.UNSAT.MAX
     10357**DCL     10362--REDEF
VX_PASS2_REF.UNSAT.PAGE#
     10387**DCL     10392--REDEF
VX_PASS2_REF.UNSAT.SIZE
     10381**DCL     10386--REDEF
VX_PHRASE.PHRASE
      9789**DCL      9791--REDEF
VX_PROGRAM_BIAS.A
      9567**DCL      9568--REDEF
VX_RF_FPT_CLOSE
     11941**DCL     12148<>CALL
VX_RF_FPT_CLOSE.SN_
     11941**DCL     11941--REDEF
VX_RF_FPT_CLOSE.UTL_
     11942**DCL     11942--REDEF
VX_RF_FPT_CLOSE.V
     11946**DCL     11941--DCLINIT
VX_RF_FPT_CLOSE.V.EXPIRE#
     11956**DCL     11956--REDEF
VX_RF_FPT_CLOSE.V.TYPE#
     11954**DCL     11954--REDEF
VX_RF_FPT_CLOSE.V.XTNSIZE#
     11951**DCL     11951--REDEF   11953--REDEF
PL6.E3A0      #002=VXF$CLOSE File=VXF$OPEN.:E05TSI                               WED 07/30/97 08:11 Page:150  
VX_R_KEY_BUF.FORM0
      8636**DCL      8640--REDEF    8646--REDEF
VX_SD.A
      8264**DCL      8265--REDEF
VX_SPC.B$.MINE
     10458**DCL     10464--REDEF
VX_SPC.B$.NAME
     10437**DCL     10443--REDEF
VX_SPC.B$.SKIP
     10451**DCL     10457--REDEF
VX_SPC.B$.VALUE
     10444**DCL     10450--REDEF
VX_SPC.SEG.NAME
     10406**DCL     10412--REDEF
VX_SPC.SEG.VALUE
     10413**DCL     10419--REDEF
VX_TSX0_OVERLAY.H
     10181**DCL     10184--REDEF
