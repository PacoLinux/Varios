VERSION E05

PL6.E3A0      #001=FPM$MNTOD File=FPM$MNTOD.:E05TSI                              TUE 07/29/97 17:18 Page:1    
        1        1        /*T***********************************************************/
        2        2        /*T*                                                         */
        3        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        4        4        /*T*                                                         */
        5        5        /*T***********************************************************/
        6        6        /*F*  NAME: FPM$MNTOD
        7        7              PURPOSE: Provide cartridge mount interface to OD controller
        8        8              DESCRIPTION: Builds a mount message and sends it to each controller
        9        9              in turn until the required cartridge is mounted, or all controllers
       10       10              have been tried.  ALTRETURNs if break is hit, but only after mount
       11       11              ack has come back from the controller.
       12       12        */
       13       13
       14       14        FPM$MNTOD: PROC (DCTX,SN) ALTRET;
       15       15
       16       16        %INCLUDE B$JIT_C;
       17      330           %B$JIT0;
       18      419           %U$JIT1X;
       19      422           %M$JIT2X;
       20      425           %F$JIT3;
       21      430           %S$JIT4X;
       22      433           %J$JIT5X;
       23      436           %A$JIT6;
       24      446        %INCLUDE CP_6_SUBS;
       25      986        %INCLUDE F$DCB;
       26     1035        %INCLUDE K_SUBS_C;
       27     1068        %INCLUDE K$RWPARM;
       28     1454        %INCLUDE KI$MHDR;
       29     1595        %INCLUDE NI$TABLES;
       30     1811        %INCLUDE NK$LDCT;
       31     1913        %INCLUDE NK_LDCT_R;
       32     1922        %INCLUDE B$USER;
       33     2138        %B$USERREFS;
       34     2142        %INCLUDE SS_SCHED_C;
       35     2375        %INCLUDE FR_SUBS;
       36     2443        %INCLUDE FR$RAT;
       37     2496        %INCLUDE FT$DDT;
PL6.E3A0      #001=FPM$MNTOD File=FPM$MNTOD.:E05TSI                              TUE 07/29/97 17:18 Page:2    
       38     2557        %INCLUDE FT_SUBS;
       39     2637        %INCLUDE FP_MACRO_C;
       40     2909        %INCLUDE HF_LOCK_C;
       41     2923
       42     2924
       43     2925        /*    Parameters    */
       44     2926    1   DCL DCTX UBIN;                     /* Soliciting device DCT index */
       45     2927    1   DCL 1 CDCT REDEF DCTX,
       46     2928    1         2 * BIT(20),
       47     2929    1         2 HI UBIN(8) UNAL,
       48     2930    1         2 LO UBIN(8) UNAL;
       49     2931    1   DCL SN CHAR(6);                   /* serial number                */
       50     2932
       51     2933        /*    Auto           */
       52     2934
       53     2935        %K$RWPARM (NAME=K$RWPARM, STCLASS="");
       54     3251
       55     3252    1   DCL D$ PTR;
       56     3253    1   DCL O$ PTR;
       57     3254    1   DCL M$ PTR;
       58     3255    1   DCL LDCT$ PTR;
       59     3256    1   DCL RAT$ PTR;
       60     3257    1   DCL I UBIN;
       61     3258    1   DCL F UBIN;
       62     3259    1   DCL STT UBIN;                      /* message write status         */
       63     3260    1   DCL DEV UBIN;
       64     3261    1   DCL MSG CHAR(180);
       65     3262
       66     3263        /*    Based          */
       67     3264
       68     3265        %NI$DCT;
       69     3313        %NI$DQH;
       70     3336        %FR$RAT;
       71     3376        %K$RWPARM (NAME=KI$RWPARM,STCLASS=BASED);
       72     3692        %NK$LDCT;
       73     3738        %KI$QMHDR;
       74     3787        %FPP$MNTREQ (NAME=MNTREQ,STCLASS="BASED(M$)");
PL6.E3A0      #001=FPM$MNTOD File=FPM$MNTOD.:E05TSI                              TUE 07/29/97 17:18 Page:3    
       75     3805        %FPP$DSMNTREQ (NAME=DSMNTREQ,STCLASS="BASED(M$)");
       76     3822        %FPP$MNTACK (NAME=MNTACK,STCLASS="BASED(K$RWPARM.MSG$)");
       77     3841        %FPP$DSMNTACK (NAME=DSMNTACK,STCLASS="BASED(K$RWPARM.MSG$)");
       78     3857        %FP$OPCI (STCLASS=BASED);
       79     3867
       80     3868
       81     3869        /*    Constant                       */
       82     3870
       83     3871
       84     3872        /*    External                      */
       85     3873
       86     3874        %K$RWPARM (NAME=K_RWPARM_CON,STCLASS=SYMREF);
       87     4190
       88     4191    1   DCL FP_OPCI$$ PTR SYMREF;
       89     4192    1   DCL FR$HD$(0:0) PTR SYMREF;
       90     4193    1   DCL N$DCT$(0:0) PTR BASED(N$DCT$$);
       91     4194    1   DCL B$JIT$ PTR SYMREF;
       92     4195    1   DCL S_CUN UBIN WORD SYMREF;
       93     4196
       94     4197    1   DCL KIA$WRITE_USER ENTRY(2) ALTRET;
       95     4198    1   DCL KIA$MSG ENTRY(1) ALTRET;
       96     4199    1   DCL KIA$OQFL ENTRY(1) ALTRET;
       97     4200    1   DCL KIS$SEND ENTRY(1) ALTRET;
       98     4201    1   DCL KIQ$MAPFEP ENTRY(1);
       99     4202    1   DCL SSR$REG ENTRY(3) ALTRET;
      100     4203
      101     4204        /*    Constants                    */
      102     4205    1   DCL PART(0:4) UBIN BYTE CONSTANT INIT(0,1,2,4,8);
      103     4206
      104     4207    1         IF (B$JIT$->B$JIT.DCB$->F$DCB.ASN = %DEVICE# ) THEN
      105     4208    1            F = %FP_FNC_MOUNTDEV;
      106     4209    1         ELSE
      107     4210    1            F = %FP_FNC_MOUNT;
      108     4211    1         N$DCT$(DCTX)->NI$DCT.OD.USER# = S_CUN;
      109     4212    1         M$ = ADDR(MSG);
      110     4213    1         MNTREQ.SER = SN;       /* Build mount request message */
      111     4214    1         O$ = FP_OPCI$$;
PL6.E3A0      #001=FPM$MNTOD File=FPM$MNTOD.:E05TSI                              TUE 07/29/97 17:18 Page:4    
      112     4215    2         DO WHILE (O$ ~= ADDR(NIL));  /* Try mount in each controller */
      113     4216    2            LDCT$ = NK$LDCT$(O$->FP$OPCI.LDCTX);
      114     4217    2            MNTREQ.SYSCON = 0; /* assume none down on this fep */
      115     4218    2            RAT$ = FR$HD$(%FR_NPOOL);
      116     4219    3            DO WHILE (RAT$ ~= ADDR(NIL));
      117     4220    3               D$ = N$DCT$(RAT$->FR$RAT.DCTX);
      118     4221    3               IF (RAT$->FR$RAT.TYP = 'OD' AND
      119     4222    3                  D$->NI$DCT.OD.LDCT$ = LDCT$ AND
      120     4223    3                  D$->NI$DCT.STATUS.DOWN AND
      121     4224    3                  D$->NI$DCT.DVN <= 4) THEN
      122     4225    3                  MNTREQ.SYSCON = MNTREQ.SYSCON + PART(D$->NI$DCT.DVN);
      123     4226    3               RAT$ = RAT$->FR$RAT.LNK$;
      124     4227    3               END;
      125     4228    2            CALL WR_OSAR_MSG (F,0,SIZEC(MNTREQ)) ALTRET(BRK);
      126     4229    2            CALL RD_OSAR_MSG ALTRET(BRKOUT);
      127     4230                 /* Save status from message, then release it.             */
      128     4231    2            STT = MNTACK.STT;
      129     4232    2            K$RWPARM.LDCT$ = LDCT$;
      130     4233    2            K$RWPARM.FUNCTION = %K_READDONE;
      131     4234    2            CALL KIS$SEND (K$RWPARM);
      132     4235                 %UNLOCK (G=LDCT$->NK$LDCT.LOCK);
      133     4238    3            IF (STT = 0 OR STT = 2) THEN DO;
      134     4239    3               N$DCT$(DCTX)->NI$DCT.RAT$->FR$RAT.SOLU = 0;
      135     4240    3               RETURN;                /* volume mounted               */
      136     4241    3               END;
      137     4242    3            DO WHILE ('0'B);
      138     4243                    /* ALTRET if break, otherwise must be FEDN             */
      139     4244    3   BRK:        IF S$CU$->B$U.ASYNCH & ~%U_RESET THEN
      140     4245    3                  ALTRETURN;
      141     4246    3               END;
      142     4247    2            O$ = O$->FP$OPCI.LNK$;    /* look in next controller     */
      143     4248    2            END;
      144     4249              /* We ran out of controllers to look in for the requested
      145     4250                 platter.  Set the can't mount bit.                       */
      146     4251    1         RAT$ = N$DCT$(DCTX)->NI$DCT.RAT$;
      147     4252    1         RAT$->FR$RAT.RES.RFLG.CANT = '1'B;
      148     4253    1         RAT$->FR$RAT.REEL.ASID = 0;
PL6.E3A0      #001=FPM$MNTOD File=FPM$MNTOD.:E05TSI                              TUE 07/29/97 17:18 Page:5    
      149     4254    1         RAT$->FR$RAT.SOLU = 0;
      150     4255    1         RETURN;
      151     4256
      152     4257        /*    User hit break during mount.               */
      153     4258
      154     4259    1   BRKOUT: ;
      155     4260    1         CALL WR_OSAR_MSG (%FP_FNC_MOUNTBRK,0,SIZEC(DSMNTREQ)) ALTRET(BRKALT);
      156     4261              %UNLOCK (G=LDCT$->NK$LDCT.LOCK);
      157     4264    1   BRKALT: ;
      158     4265    1         ALTRETURN;
      159     4266        %EJECT;
PL6.E3A0      #001=FPM$MNTOD File=FPM$MNTOD.:E05TSI                              TUE 07/29/97 17:18 Page:6    
      160     4267
      161     4268        /*F*  NAME: FPM$DSMTOD
      162     4269              PURPOSE: Provide cartridge dismount interface to Optical Disk
      163     4270              controller.
      164     4271              DESCRIPTION:  Send the dismount message to the controller and wait for
      165     4272              a reply after the cartridge has been put back in its slot.
      166     4273        */
      167     4274
      168     4275    1   FPM$DSMTOD: ENTRY (DCTX) ALTRET;
      169     4276
      170     4277
      171     4278    1         M$ = ADDR(MSG);
      172     4279    1         DSMNTREQ.DSMNTDEV = N$DCT$(DCTX)->NI$DCT.DVN;
      173     4280    1         DEV = N$DCT$(DCTX)->NI$DCT.DVN;
      174     4281    1         LDCT$ = N$DCT$(DCTX)->NI$DCT.OD.LDCT$;
      175     4282              /* If disk errored its already dismounted                 */
      176     4283    1         D$ = N$DCT$(DCTX)->NI$DCT.DDT$;
      177     4284    1         IF D$->FT$DDT.POSLOST = %YES# THEN
      178     4285    1            RETURN;
      179     4286              /* Ignore errors on dismount since OD was disconnected   */
      180     4287    1         CALL WR_OSAR_MSG (%FP_FNC_DISMOUNT,DEV,SIZEC(DSMNTREQ)) ALTRET(XIT);
      181     4288    1         CALL RD_OSAR_MSG ALTRET(BRK);
      182     4289    1         STT = DSMNTACK.STT;
      183     4290    1         K$RWPARM.LDCT$ = LDCT$;
      184     4291    1         K$RWPARM.FUNCTION = %K_READDONE;
      185     4292    1         CALL KIS$SEND (K$RWPARM);
      186     4293              %UNLOCK (G=LDCT$->NK$LDCT.LOCK);
      187     4296    1   XIT:  RETURN;
      188     4297
      189     4298    1   WR_OSAR_MSG: PROC (FNC,DEV,MSZ) ALTRET;
      190     4299
      191     4300    2   DCL FNC UBIN;                      /* function code to send */
      192     4301    2   DCL DEV UBIN;                      /* destination device number */
      193     4302    2   DCL MSZ UBIN;                      /* message size             */
      194     4303        %FPP$MHDR (NAME=MSG,STCLASS="BASED(M$)",LAST=";");
      195     4317
      196     4318
PL6.E3A0      #001=FPM$MNTOD File=FPM$MNTOD.:E05TSI                              TUE 07/29/97 17:18 Page:7    
      197     4319    2         MSG.FNC = FNC;
      198     4320    2         MSG.DCTX.HI = CDCT.HI;       /* soliciting resource dct index */
      199     4321    2         MSG.DCTX.LO = CDCT.LO;
      200     4322    2         MSG.DEV# = DEV;
      201     4323    2         K$RWPARM = K_RWPARM_CON;
      202     4324    2         K$RWPARM.MSG$ = M$;
      203     4325    2         K$RWPARM.MSGSZ = MSZ;
      204     4326              %LOCK (G=LDCT$->NK$LDCT.LOCK);
      205     4329    2   WRT:  CALL KIA$WRITE_USER (LDCT$->NK$LDCT,K$RWPARM) ALTRET(QFULL);
      206     4330    2         RETURN;
      207     4331
      208     4332    2   QFULL: IF (S$CU$->B$U.ASYNCH & ~%U_RESET) OR LDCT$->NK$LDCT.DFLG.FEDN THEN
      209     4333    2            GOTO BRKOUT;
      210     4334    3         IF K$RWPARM.ERR = %K$NO_THROT THEN DO;
      211     4335    3            N$DCT$(DCTX)->NI$DCT.OD.THRTLD = 1;
      212     4336    3            CALL SSR$REG (%SS_CBL,LDCT$);
      213     4337                %LOCK (G=LDCT$->NK$LDCT.LOCK);
      214     4340    3            GOTO WRT;
      215     4341    3            END;
      216     4342    3         IF K$RWPARM.ERR = %K$QFULL THEN DO;
      217     4343    3            CALL KIA$OQFL (LDCT$->NK$LDCT) ALTRET(BRKOUT) ;
      218     4344    3            GOTO WRT;
      219     4345    3            END;
      220     4346    2   BRKOUT: ;
      221     4347              %UNLOCK (G=LDCT$->NK$LDCT.LOCK);
      222     4350    2         ALTRETURN;
      223     4351    2   END;
      224     4352
      225     4353    1   RD_OSAR_MSG: PROC ALTRET;
      226     4354
      227     4355    2         CALL SSR$REG (%SS_CW,LDCT$) ALTRET(BRKOUT);
      228     4356              %LOCK (G=LDCT$->NK$LDCT.LOCK);
      229     4359    2   RD:
      230     4360    2         K$RWPARM.IP$ = LDCT$->NK$LDCT.IP$;
      231     4361    2         LDCT$->NK$LDCT.IP$ = ADDR(NIL);
      232     4362    3         IF K$RWPARM.IP$ ~= ADDR(NIL) THEN DO;
      233     4363    3            CALL KIQ$MAPFEP (LDCT$->NK$LDCT.IPFEI#);
PL6.E3A0      #001=FPM$MNTOD File=FPM$MNTOD.:E05TSI                              TUE 07/29/97 17:18 Page:8    
      234     4364    3            K$RWPARM.UHDR$ = PINCRC(K$RWPARM.IP$,K$RWPARM.IP$->KI$QMHDR.OFFSET);
      235     4365    3            K$RWPARM.UHDRSZ = K$RWPARM.IP$->KI$QMHDR.SIZE;
      236     4366    3            K$RWPARM.TYC = '0'B;
      237     4367    3            CALL KIA$MSG (K$RWPARM);
      238     4368    3            END;
      239     4369    2         RETURN;
      240     4370
      241     4371
      242     4372    2   BRKOUT:
      243     4373              %LOCK(G=LDCT$->NK$LDCT.LOCK);
      244     4376    2         IF LDCT$->NK$LDCT.IP$ ~= ADDR(NIL) THEN
      245     4377    2            GOTO RD;
      246     4378              %UNLOCK (G=LDCT$->NK$LDCT.LOCK);
      247     4381    2         ALTRETURN;
      248     4382    2   END;
      249     4383
      250     4384    1   END;

PL6.E3A0      #001=FPM$MNTOD File=FPM$MNTOD.:E05TSI                              TUE 07/29/97 17:18 Page:9    
--  Include file information  --

   HF_LOCK_C.:E05TOU  cannot be made into a system file and is referenced.
   FP_MACRO_C.:E05TOU  is referenced.
   FT_SUBS.:E05TOU  is referenced.
   FT$DDT.:E05TOU  cannot be made into a system file and is referenced.
   FR$RAT.:E05TOU  is referenced.
   FR_SUBS.:E05TOU  is referenced.
   SS_SCHED_C.:E05TOU  is referenced.
   B$USER.:E05TOU  cannot be made into a system file and is referenced.
   NK_LDCT_R.:E05TOU  cannot be made into a system file and is referenced.
   NK$LDCT.:E05TOU  is referenced.
   NI$TABLES.:E05TOU  is referenced.
   KI$MHDR.:E05TOU  is referenced.
   K$RWPARM.:E05TOU  is referenced.
   K_SUBS_C.:E05TOU  is referenced.
   F$DCB.:E05TOU  cannot be made into a system file and is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  is referenced.
      No diagnostics issued in procedure FPM$MNTOD.

   Procedure FPM$MNTOD requires 383 words for executable code.
   Procedure FPM$MNTOD requires 108 words of local(AUTO) storage.

    No errors detected in file FPM$MNTOD.:E05TSI    .

PL6.E3A0      #001=FPM$MNTOD File=FPM$MNTOD.:E05TSI                              TUE 07/29/97 17:18 Page:10   

 Object Unit name= FPM$MNTOD                                  File name= FPM$MNTOD.:E05TOU
 UTS= JUL 29 '97 17:18:30.84 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0  RoData even  UTS      6      6  FPM$MNTOD
    1   Proc  even  none   383    577  FPM$MNTOD
    2  RoData even  none    11     13  FPM$MNTOD

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     1      0   yes    yes     yes      Std        2  FPM$MNTOD
     1    240          yes     yes      Std        1  FPM$DSMTOD

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       1 KIS$SEND
         yes           Std       1 HFC$UNLOCK
         yes           Std       1 HFC$LOCK
 yes     yes           Std       2 KIA$WRITE_USER
 yes     yes           Std       3 SSR$REG
 yes     yes           Std       1 KIA$OQFL
         yes           Std       1 KIQ$MAPFEP
 yes     yes           Std       1 KIA$MSG
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_AUTO_2
                       nStd      0 X66_ARET
                       nStd      0 X66_AALT
PL6.E3A0      #001=FPM$MNTOD File=FPM$MNTOD.:E05TSI                              TUE 07/29/97 17:18 Page:11   

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     N$DCT$$                               S$CU$                                 K_RWPARM_CON
     FP_OPCI$$                             FR$HD$                                B$JIT$
     S_CUN                                 B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
PL6.E3A0      #001=FPM$MNTOD File=FPM$MNTOD.:E05TSI                              TUE 07/29/97 17:18 Page:12   


        1        1        /*T***********************************************************/
        2        2        /*T*                                                         */
        3        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        4        4        /*T*                                                         */
        5        5        /*T***********************************************************/
        6        6        /*F*  NAME: FPM$MNTOD
        7        7              PURPOSE: Provide cartridge mount interface to OD controller
        8        8              DESCRIPTION: Builds a mount message and sends it to each controller
        9        9              in turn until the required cartridge is mounted, or all controllers
       10       10              have been tried.  ALTRETURNs if break is hit, but only after mount
       11       11              ack has come back from the controller.
       12       12        */
       13       13
       14       14        FPM$MNTOD: PROC (DCTX,SN) ALTRET;

     14  1 000000   000000 700200 xent  FPM$MNTOD    TSX0  ! X66_AUTO_2
         1 000001   000154 000002                    ZERO    108,2

       15       15
       16       16        %INCLUDE B$JIT_C;
       17      330           %B$JIT0;
       18      419           %U$JIT1X;
       19      422           %M$JIT2X;
       20      425           %F$JIT3;
       21      430           %S$JIT4X;
       22      433           %J$JIT5X;
       23      436           %A$JIT6;
       24      446        %INCLUDE CP_6_SUBS;
       25      986        %INCLUDE F$DCB;
       26     1035        %INCLUDE K_SUBS_C;
       27     1068        %INCLUDE K$RWPARM;
       28     1454        %INCLUDE KI$MHDR;
       29     1595        %INCLUDE NI$TABLES;
       30     1811        %INCLUDE NK$LDCT;
       31     1913        %INCLUDE NK_LDCT_R;
       32     1922        %INCLUDE B$USER;
PL6.E3A0      #001=FPM$MNTOD File=FPM$MNTOD.:E05TSI                              TUE 07/29/97 17:18 Page:13   
       33     2138        %B$USERREFS;
       34     2142        %INCLUDE SS_SCHED_C;
       35     2375        %INCLUDE FR_SUBS;
       36     2443        %INCLUDE FR$RAT;
       37     2496        %INCLUDE FT$DDT;
       38     2557        %INCLUDE FT_SUBS;
       39     2637        %INCLUDE FP_MACRO_C;
       40     2909        %INCLUDE HF_LOCK_C;
       41     2923
       42     2924
       43     2925        /*    Parameters    */
       44     2926    1   DCL DCTX UBIN;                     /* Soliciting device DCT index */
       45     2927    1   DCL 1 CDCT REDEF DCTX,
       46     2928    1         2 * BIT(20),
       47     2929    1         2 HI UBIN(8) UNAL,
       48     2930    1         2 LO UBIN(8) UNAL;
       49     2931    1   DCL SN CHAR(6);                   /* serial number                */
       50     2932
       51     2933        /*    Auto           */
       52     2934
       53     2935        %K$RWPARM (NAME=K$RWPARM, STCLASS="");
       54     3251
       55     3252    1   DCL D$ PTR;
       56     3253    1   DCL O$ PTR;
       57     3254    1   DCL M$ PTR;
       58     3255    1   DCL LDCT$ PTR;
       59     3256    1   DCL RAT$ PTR;
       60     3257    1   DCL I UBIN;
       61     3258    1   DCL F UBIN;
       62     3259    1   DCL STT UBIN;                      /* message write status         */
       63     3260    1   DCL DEV UBIN;
       64     3261    1   DCL MSG CHAR(180);
       65     3262
       66     3263        /*    Based          */
       67     3264
       68     3265        %NI$DCT;
       69     3313        %NI$DQH;
PL6.E3A0      #001=FPM$MNTOD File=FPM$MNTOD.:E05TSI                              TUE 07/29/97 17:18 Page:14   
       70     3336        %FR$RAT;
       71     3376        %K$RWPARM (NAME=KI$RWPARM,STCLASS=BASED);
       72     3692        %NK$LDCT;
       73     3738        %KI$QMHDR;
       74     3787        %FPP$MNTREQ (NAME=MNTREQ,STCLASS="BASED(M$)");
       75     3805        %FPP$DSMNTREQ (NAME=DSMNTREQ,STCLASS="BASED(M$)");
       76     3822        %FPP$MNTACK (NAME=MNTACK,STCLASS="BASED(K$RWPARM.MSG$)");
       77     3841        %FPP$DSMNTACK (NAME=DSMNTACK,STCLASS="BASED(K$RWPARM.MSG$)");
       78     3857        %FP$OPCI (STCLASS=BASED);
       79     3867
       80     3868
       81     3869        /*    Constant                       */
       82     3870
       83     3871
       84     3872        /*    External                      */
       85     3873
       86     3874        %K$RWPARM (NAME=K_RWPARM_CON,STCLASS=SYMREF);
       87     4190
       88     4191    1   DCL FP_OPCI$$ PTR SYMREF;
       89     4192    1   DCL FR$HD$(0:0) PTR SYMREF;
       90     4193    1   DCL N$DCT$(0:0) PTR BASED(N$DCT$$);
       91     4194    1   DCL B$JIT$ PTR SYMREF;
       92     4195    1   DCL S_CUN UBIN WORD SYMREF;
       93     4196
       94     4197    1   DCL KIA$WRITE_USER ENTRY(2) ALTRET;
       95     4198    1   DCL KIA$MSG ENTRY(1) ALTRET;
       96     4199    1   DCL KIA$OQFL ENTRY(1) ALTRET;
       97     4200    1   DCL KIS$SEND ENTRY(1) ALTRET;
       98     4201    1   DCL KIQ$MAPFEP ENTRY(1);
       99     4202    1   DCL SSR$REG ENTRY(3) ALTRET;
      100     4203
      101     4204        /*    Constants                    */
      102     4205    1   DCL PART(0:4) UBIN BYTE CONSTANT INIT(0,1,2,4,8);
      103     4206
      104     4207    1         IF (B$JIT$->B$JIT.DCB$->F$DCB.ASN = %DEVICE# ) THEN

   4207  1 000002   000000 470400 xsym               LDP0    B$JIT$
PL6.E3A0      #001=FPM$MNTOD File=FPM$MNTOD.:E05TSI                              TUE 07/29/97 17:18 Page:15   
         1 000003   000232 471500                    LDP1    154,,PR0
         1 000004   100032 236100                    LDQ     26,,PR1
         1 000005   777000 376007                    ANQ     -512,DL
         1 000006   003000 116007                    CMPQ    1536,DL
         1 000007   000013 601000 1                  TNZ     s:4210

      105     4208    1            F = %FP_FNC_MOUNTDEV;

   4208  1 000010   000023 235007                    LDA     19,DL
         1 000011   200064 755100                    STA     F,,AUTO
         1 000012   000015 710000 1                  TRA     s:4211

      106     4209    1         ELSE
      107     4210    1            F = %FP_FNC_MOUNT;

   4210  1 000013   000001 235007                    LDA     1,DL
         1 000014   200064 755100                    STA     F,,AUTO

      108     4211    1         N$DCT$(DCTX)->NI$DCT.OD.USER# = S_CUN;

   4211  1 000015   200003 473500                    LDP3    @DCTX,,AUTO
         1 000016   300000 720100                    LXL0    0,,PR3
         1 000017   000000 474400 xsym               LDP4    N$DCT$$
         1 000020   400000 475510                    LDP5    0,X0,PR4
         1 000021   000000 236000 xsym               LDQ     S_CUN
         1 000022   000033 736000                    QLS     27
         1 000023   500033 552140                    STBQ    27,'40'O,PR5

      109     4212    1         M$ = ADDR(MSG);

   4212  1 000024   200067 631500                    EPPR1   MSG,,AUTO
         1 000025   200060 451500                    STP1    M$,,AUTO

      110     4213    1         MNTREQ.SER = SN;       /* Build mount request message */

   4213  1 000026   200004 475500                    LDP5    @SN,,AUTO
         1 000027   040100 100500                    MLR     fill='040'O
PL6.E3A0      #001=FPM$MNTOD File=FPM$MNTOD.:E05TSI                              TUE 07/29/97 17:18 Page:16   
         1 000030   500000 000006                    ADSC9   0,,PR5                   cn=0,n=6
         1 000031   100001 400006                    ADSC9   1,,PR1                   cn=2,n=6

      111     4214    1         O$ = FP_OPCI$$;

   4214  1 000032   000000 236000 xsym               LDQ     FP_OPCI$$
         1 000033   200057 756100                    STQ     O$,,AUTO

      112     4215    2         DO WHILE (O$ ~= ADDR(NIL));  /* Try mount in each controller */

   4215  1 000034   000202 710000 1                  TRA     s:4248

      113     4216    2            LDCT$ = NK$LDCT$(O$->FP$OPCI.LDCTX);

   4216  1 000035   200057 470500                    LDP0    O$,,AUTO
         1 000036   000002 720100                    LXL0    2,,PR0
         1 000037   000000 471400 xsym               LDP1    N$DCT$$
         1 000040   100000 236110                    LDQ     0,X0,PR1
         1 000041   200061 756100                    STQ     LDCT$,,AUTO

      114     4217    2            MNTREQ.SYSCON = 0; /* assume none down on this fep */

   4217  1 000042   200060 473500                    LDP3    M$,,AUTO
         1 000043   000100 101400                    MRL     fill='000'O
         1 000044   000002 000004 xsym               ADSC9   B_VECTNIL+2              cn=0,n=4
         1 000045   300003 000001                    ADSC9   3,,PR3                   cn=0,n=1

      115     4218    2            RAT$ = FR$HD$(%FR_NPOOL);

   4218  1 000046   000002 236000 xsym               LDQ     FR$HD$+2
         1 000047   200062 756100                    STQ     RAT$,,AUTO

      116     4219    3            DO WHILE (RAT$ ~= ADDR(NIL));

   4219  1 000050   000115 710000 1                  TRA     s:4227

      117     4220    3               D$ = N$DCT$(RAT$->FR$RAT.DCTX);
PL6.E3A0      #001=FPM$MNTOD File=FPM$MNTOD.:E05TSI                              TUE 07/29/97 17:18 Page:17   

   4220  1 000051   200062 470500                    LDP0    RAT$,,AUTO
         1 000052   000003 720100                    LXL0    3,,PR0
         1 000053   000000 471400 xsym               LDP1    N$DCT$$
         1 000054   100000 236110                    LDQ     0,X0,PR1
         1 000055   200056 756100                    STQ     D$,,AUTO

      118     4221    3               IF (RAT$->FR$RAT.TYP = 'OD' AND

   4221  1 000056   000010 221100                    LDX1    8,,PR0
         1 000057   000005 101000 0                  CMPX1   PART+5
         1 000060   000113 601000 1                  TNZ     s:4226
         1 000061   200056 473500                    LDP3    D$,,AUTO
         1 000062   300030 236100                    LDQ     24,,PR3
         1 000063   200061 116100                    CMPQ    LDCT$,,AUTO
         1 000064   000113 601000 1                  TNZ     s:4226
         1 000065   300027 234100                    SZN     23,,PR3
         1 000066   000113 605000 1                  TPL     s:4226
         1 000067   300007 236100                    LDQ     7,,PR3
         1 000070   007700 376003                    ANQ     4032,DU
         1 000071   000500 116003                    CMPQ    320,DU
         1 000072   000113 603000 1                  TRC     s:4226

      119     4222    3                  D$->NI$DCT.OD.LDCT$ = LDCT$ AND
      120     4223    3                  D$->NI$DCT.STATUS.DOWN AND
      121     4224    3                  D$->NI$DCT.DVN <= 4) THEN
      122     4225    3                  MNTREQ.SYSCON = MNTREQ.SYSCON + PART(D$->NI$DCT.DVN);

   4225  1 000073   300007 236100                    LDQ     7,,PR3
         1 000074   000030 772000                    QRL     24
         1 000075   000077 376007                    ANQ     63,DL
         1 000076   000000 236006 0                  LDQ     PART,QL
         1 000077   000033 772000                    QRL     27
         1 000100   200150 756100                    STQ     @MSZ+1,,AUTO
         1 000101   200060 474500                    LDP4    M$,,AUTO
         1 000102   000100 101500                    MRL     fill='000'O
         1 000103   400003 000001                    ADSC9   3,,PR4                   cn=0,n=1
PL6.E3A0      #001=FPM$MNTOD File=FPM$MNTOD.:E05TSI                              TUE 07/29/97 17:18 Page:18   
         1 000104   200151 000004                    ADSC9   @MSZ+2,,AUTO             cn=0,n=4
         1 000105   200151 236100                    LDQ     @MSZ+2,,AUTO
         1 000106   200150 036100                    ADLQ    @MSZ+1,,AUTO
         1 000107   200152 756100                    STQ     @MSZ+3,,AUTO
         1 000110   000100 101500                    MRL     fill='000'O
         1 000111   200152 000004                    ADSC9   @MSZ+3,,AUTO             cn=0,n=4
         1 000112   400003 000001                    ADSC9   3,,PR4                   cn=0,n=1

      123     4226    3               RAT$ = RAT$->FR$RAT.LNK$;

   4226  1 000113   000000 236100                    LDQ     0,,PR0
         1 000114   200062 756100                    STQ     RAT$,,AUTO

      124     4227    3               END;

   4227  1 000115   000001 116000 xsym               CMPQ    B_VECTNIL+1
         1 000116   000051 601000 1                  TNZ     s:4220

      125     4228    2            CALL WR_OSAR_MSG (F,0,SIZEC(MNTREQ)) ALTRET(BRK);

   4228  1 000117   000002 237000 2                  LDAQ    2
         1 000120   200146 757100                    STAQ    @FNC+1,,AUTO
         1 000121   200064 630500                    EPPR0   F,,AUTO
         1 000122   200145 450500                    STP0    MSG+46,,AUTO
         1 000123   000336 701000 1                  TSX1    WR_OSAR_MSG
         1 000124   000171 702000 1                  TSX2    BRK

      126     4229    2            CALL RD_OSAR_MSG ALTRET(BRKOUT);

   4229  1 000125   000472 701000 1                  TSX1    RD_OSAR_MSG
         1 000126   000222 702000 1                  TSX2    BRKOUT

      127     4230                 /* Save status from message, then release it.             */
      128     4231    2            STT = MNTACK.STT;

   4231  1 000127   200006 470500                    LDP0    K$RWPARM,,AUTO
         1 000130   000100 101500                    MRL     fill='000'O
PL6.E3A0      #001=FPM$MNTOD File=FPM$MNTOD.:E05TSI                              TUE 07/29/97 17:18 Page:19   
         1 000131   000000 200001                    ADSC9   0,,PR0                   cn=1,n=1
         1 000132   200065 000004                    ADSC9   STT,,AUTO                cn=0,n=4

      129     4232    2            K$RWPARM.LDCT$ = LDCT$;

   4232  1 000133   200061 236100                    LDQ     LDCT$,,AUTO
         1 000134   200024 756100                    STQ     K$RWPARM+14,,AUTO

      130     4233    2            K$RWPARM.FUNCTION = %K_READDONE;

   4233  1 000135   000011 235007                    LDA     9,DL
         1 000136   200026 755100                    STA     K$RWPARM+16,,AUTO

      131     4234    2            CALL KIS$SEND (K$RWPARM);

   4234  1 000137   200006 631500                    EPPR1   K$RWPARM,,AUTO
         1 000140   200150 451500                    STP1    @MSZ+1,,AUTO
         1 000141   200150 630500                    EPPR0   @MSZ+1,,AUTO
         1 000142   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000143   000000 701000 xent               TSX1    KIS$SEND
         1 000144   000000 011000                    NOP     0

      132     4235                 %UNLOCK (G=LDCT$->NK$LDCT.LOCK);

   4236  1 000145   200061 236100                    LDQ     LDCT$,,AUTO
         1 000146   000020 036003                    ADLQ    16,DU
         1 000147   200150 756100                    STQ     @MSZ+1,,AUTO
         1 000150   200150 630500                    EPPR0   @MSZ+1,,AUTO
         1 000151   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000152   000000 701000 xent               TSX1    HFC$UNLOCK
         1 000153   000000 011000                    NOP     0

      133     4238    3            IF (STT = 0 OR STT = 2) THEN DO;

   4238  1 000154   200065 235100                    LDA     STT,,AUTO
         1 000155   000160 600000 1                  TZE     s:4239
         1 000156   000002 115007                    CMPA    2,DL
PL6.E3A0      #001=FPM$MNTOD File=FPM$MNTOD.:E05TSI                              TUE 07/29/97 17:18 Page:20   
         1 000157   000170 601000 1                  TNZ     s:4242

      134     4239    3               N$DCT$(DCTX)->NI$DCT.RAT$->FR$RAT.SOLU = 0;

   4239  1 000160   200003 470500                    LDP0    @DCTX,,AUTO
         1 000161   000000 720100                    LXL0    0,,PR0
         1 000162   000000 471400 xsym               LDP1    N$DCT$$
         1 000163   100000 473510                    LDP3    0,X0,PR1
         1 000164   300005 474500                    LDP4    5,,PR3
         1 000165   000000 236003                    LDQ     0,DU
         1 000166   400010 552110                    STBQ    8,'10'O,PR4

      135     4240    3               RETURN;                /* volume mounted               */

   4240  1 000167   000000 702200 xent               TSX2  ! X66_ARET

      136     4241    3               END;
      137     4242    3            DO WHILE ('0'B);

   4242  1 000170   000177 710000 1                  TRA     s:4247

      138     4243                    /* ALTRET if break, otherwise must be FEDN             */
      139     4244    3   BRK:        IF S$CU$->B$U.ASYNCH & ~%U_RESET THEN

   4244  1 000171   000003 236000 xsym  BRK          LDQ     B_VECTNIL+3
         1 000172   000027 676000 xsym               ERQ     B_VECTNIL+23
         1 000173   000000 470400 xsym               LDP0    S$CU$
         1 000174   000001 376100                    ANQ     1,,PR0
         1 000175   000177 600000 1                  TZE     s:4247

      140     4245    3                  ALTRETURN;

   4245  1 000176   000000 702200 xent               TSX2  ! X66_AALT

      141     4246    3               END;

      142     4247    2            O$ = O$->FP$OPCI.LNK$;    /* look in next controller     */
PL6.E3A0      #001=FPM$MNTOD File=FPM$MNTOD.:E05TSI                              TUE 07/29/97 17:18 Page:21   

   4247  1 000177   200057 470500                    LDP0    O$,,AUTO
         1 000200   000000 236100                    LDQ     0,,PR0
         1 000201   200057 756100                    STQ     O$,,AUTO

      143     4248    2            END;

   4248  1 000202   000001 116000 xsym               CMPQ    B_VECTNIL+1
         1 000203   000035 601000 1                  TNZ     s:4216

      144     4249              /* We ran out of controllers to look in for the requested
      145     4250                 platter.  Set the can't mount bit.                       */
      146     4251    1         RAT$ = N$DCT$(DCTX)->NI$DCT.RAT$;

   4251  1 000204   200003 470500                    LDP0    @DCTX,,AUTO
         1 000205   000000 720100                    LXL0    0,,PR0
         1 000206   000000 471400 xsym               LDP1    N$DCT$$
         1 000207   100000 473510                    LDP3    0,X0,PR1
         1 000210   300005 236100                    LDQ     5,,PR3
         1 000211   200062 756100                    STQ     RAT$,,AUTO

      147     4252    1         RAT$->FR$RAT.RES.RFLG.CANT = '1'B;

   4252  1 000212   200062 474500                    LDP4    RAT$,,AUTO
         1 000213   004000 236003                    LDQ     2048,DU
         1 000214   400003 256100                    ORSQ    3,,PR4

      148     4253    1         RAT$->FR$RAT.REEL.ASID = 0;

   4253  1 000215   000000 220003                    LDX0    0,DU
         1 000216   400004 740100                    STX0    4,,PR4

      149     4254    1         RAT$->FR$RAT.SOLU = 0;

   4254  1 000217   000000 236003                    LDQ     0,DU
         1 000220   400010 552110                    STBQ    8,'10'O,PR4

PL6.E3A0      #001=FPM$MNTOD File=FPM$MNTOD.:E05TSI                              TUE 07/29/97 17:18 Page:22   
      150     4255    1         RETURN;

   4255  1 000221   000000 702200 xent               TSX2  ! X66_ARET

   4254  1 000222                       BRKOUT       null
      151     4256
      152     4257        /*    User hit break during mount.               */
      153     4258
      154     4259    1   BRKOUT: ;
      155     4260    1         CALL WR_OSAR_MSG (%FP_FNC_MOUNTBRK,0,SIZEC(DSMNTREQ)) ALTRET(BRKALT);

   4260  1 000222   000004 237000 2                  LDAQ    4
         1 000223   200146 757100                    STAQ    @FNC+1,,AUTO
         1 000224   000006 236000 2                  LDQ     6
         1 000225   200145 756100                    STQ     MSG+46,,AUTO
         1 000226   000336 701000 1                  TSX1    WR_OSAR_MSG
         1 000227   000237 702000 1                  TSX2    BRKALT

      156     4261              %UNLOCK (G=LDCT$->NK$LDCT.LOCK);

   4262  1 000230   200061 236100                    LDQ     LDCT$,,AUTO
         1 000231   000020 036003                    ADLQ    16,DU
         1 000232   200150 756100                    STQ     @MSZ+1,,AUTO
         1 000233   200150 630500                    EPPR0   @MSZ+1,,AUTO
         1 000234   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000235   000000 701000 xent               TSX1    HFC$UNLOCK
         1 000236   000000 011000                    NOP     0

   4254  1 000237                       BRKALT       null
      157     4264    1   BRKALT: ;
      158     4265    1         ALTRETURN;

   4265  1 000237   000000 702200 xent               TSX2  ! X66_AALT

      159     4266        %EJECT;
PL6.E3A0      #001=FPM$MNTOD File=FPM$MNTOD.:E05TSI                              TUE 07/29/97 17:18 Page:23   
      160     4267
      161     4268        /*F*  NAME: FPM$DSMTOD
      162     4269              PURPOSE: Provide cartridge dismount interface to Optical Disk
      163     4270              controller.
      164     4271              DESCRIPTION:  Send the dismount message to the controller and wait for
      165     4272              a reply after the cartridge has been put back in its slot.
      166     4273        */
      167     4274
      168     4275    1   FPM$DSMTOD: ENTRY (DCTX) ALTRET;

   4275  1 000240   000000 700200 xent  FPM$DSMTOD   TSX0  ! X66_AUTO_2
         1 000241   000154 000002                    ZERO    108,2

      169     4276
      170     4277
      171     4278    1         M$ = ADDR(MSG);

   4278  1 000242   200067 630500                    EPPR0   MSG,,AUTO
         1 000243   200060 450500                    STP0    M$,,AUTO

      172     4279    1         DSMNTREQ.DSMNTDEV = N$DCT$(DCTX)->NI$DCT.DVN;

   4279  1 000244   200003 471500                    LDP1    @DCTX,,AUTO
         1 000245   100000 720100                    LXL0    0,,PR1
         1 000246   000000 473400 xsym               LDP3    N$DCT$$
         1 000247   300000 474510                    LDP4    0,X0,PR3
         1 000250   003100 061500                    CSR     bolr='003'O
         1 000251   400007 060006                    BDSC    7,,PR4                   by=0,bit=6,n=6
         1 000252   000001 400011                    BDSC    1,,PR0                   by=2,bit=0,n=9

      173     4280    1         DEV = N$DCT$(DCTX)->NI$DCT.DVN;

   4280  1 000253   100000 720100                    LXL0    0,,PR1
         1 000254   300000 474510                    LDP4    0,X0,PR3
         1 000255   400007 236100                    LDQ     7,,PR4
         1 000256   000030 772000                    QRL     24
         1 000257   000077 376007                    ANQ     63,DL
PL6.E3A0      #001=FPM$MNTOD File=FPM$MNTOD.:E05TSI                              TUE 07/29/97 17:18 Page:24   
         1 000260   200066 756100                    STQ     DEV,,AUTO

      174     4281    1         LDCT$ = N$DCT$(DCTX)->NI$DCT.OD.LDCT$;

   4281  1 000261   100000 720100                    LXL0    0,,PR1
         1 000262   300000 474510                    LDP4    0,X0,PR3
         1 000263   400030 236100                    LDQ     24,,PR4
         1 000264   200061 756100                    STQ     LDCT$,,AUTO

      175     4282              /* If disk errored its already dismounted                 */
      176     4283    1         D$ = N$DCT$(DCTX)->NI$DCT.DDT$;

   4283  1 000265   100000 720100                    LXL0    0,,PR1
         1 000266   300000 474510                    LDP4    0,X0,PR3
         1 000267   400004 236100                    LDQ     4,,PR4
         1 000270   200056 756100                    STQ     D$,,AUTO

      177     4284    1         IF D$->FT$DDT.POSLOST = %YES# THEN

   4284  1 000271   200056 475500                    LDP5    D$,,AUTO
         1 000272   500006 236100                    LDQ     6,,PR5
         1 000273   004000 316007                    CANQ    2048,DL
         1 000274   000276 600000 1                  TZE     s:4287

      178     4285    1            RETURN;

   4285  1 000275   000000 702200 xent               TSX2  ! X66_ARET

      179     4286              /* Ignore errors on dismount since OD was disconnected   */
      180     4287    1         CALL WR_OSAR_MSG (%FP_FNC_DISMOUNT,DEV,SIZEC(DSMNTREQ)) ALTRET(XIT);

   4287  1 000276   000005 236000 2                  LDQ     5
         1 000277   200147 756100                    STQ     @DEV+1,,AUTO
         1 000300   200066 634500                    EPPR4   DEV,,AUTO
         1 000301   200146 454500                    STP4    @FNC+1,,AUTO
         1 000302   000007 236000 2                  LDQ     7
         1 000303   200145 756100                    STQ     MSG+46,,AUTO
PL6.E3A0      #001=FPM$MNTOD File=FPM$MNTOD.:E05TSI                              TUE 07/29/97 17:18 Page:25   
         1 000304   000336 701000 1                  TSX1    WR_OSAR_MSG
         1 000305   000335 702000 1                  TSX2    XIT

      181     4288    1         CALL RD_OSAR_MSG ALTRET(BRK);

   4288  1 000306   000472 701000 1                  TSX1    RD_OSAR_MSG
         1 000307   000171 702000 1                  TSX2    BRK

      182     4289    1         STT = DSMNTACK.STT;

   4289  1 000310   200006 470500                    LDP0    K$RWPARM,,AUTO
         1 000311   003100 061500                    CSR     bolr='003'O
         1 000312   000000 200011                    BDSC    0,,PR0                   by=1,bit=0,n=9
         1 000313   200065 000044                    BDSC    STT,,AUTO                by=0,bit=0,n=36

      183     4290    1         K$RWPARM.LDCT$ = LDCT$;

   4290  1 000314   200061 236100                    LDQ     LDCT$,,AUTO
         1 000315   200024 756100                    STQ     K$RWPARM+14,,AUTO

      184     4291    1         K$RWPARM.FUNCTION = %K_READDONE;

   4291  1 000316   000011 235007                    LDA     9,DL
         1 000317   200026 755100                    STA     K$RWPARM+16,,AUTO

      185     4292    1         CALL KIS$SEND (K$RWPARM);

   4292  1 000320   200006 631500                    EPPR1   K$RWPARM,,AUTO
         1 000321   200150 451500                    STP1    @MSZ+1,,AUTO
         1 000322   200150 630500                    EPPR0   @MSZ+1,,AUTO
         1 000323   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000324   000000 701000 xent               TSX1    KIS$SEND
         1 000325   000000 011000                    NOP     0

      186     4293              %UNLOCK (G=LDCT$->NK$LDCT.LOCK);

   4294  1 000326   200061 236100                    LDQ     LDCT$,,AUTO
PL6.E3A0      #001=FPM$MNTOD File=FPM$MNTOD.:E05TSI                              TUE 07/29/97 17:18 Page:26   
         1 000327   000020 036003                    ADLQ    16,DU
         1 000330   200150 756100                    STQ     @MSZ+1,,AUTO
         1 000331   200150 630500                    EPPR0   @MSZ+1,,AUTO
         1 000332   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000333   000000 701000 xent               TSX1    HFC$UNLOCK
         1 000334   000000 011000                    NOP     0

      187     4296    1   XIT:  RETURN;

   4296  1 000335   000000 702200 xent  XIT          TSX2  ! X66_ARET

      188     4297
      189     4298    1   WR_OSAR_MSG: PROC (FNC,DEV,MSZ) ALTRET;

   4298  1 000336   200144 741300       WR_OSAR_MSG  STX1  ! MSG+45,,AUTO

      190     4299
      191     4300    2   DCL FNC UBIN;                      /* function code to send */
      192     4301    2   DCL DEV UBIN;                      /* destination device number */
      193     4302    2   DCL MSZ UBIN;                      /* message size             */
      194     4303        %FPP$MHDR (NAME=MSG,STCLASS="BASED(M$)",LAST=";");
      195     4317
      196     4318
      197     4319    2         MSG.FNC = FNC;

   4319  1 000337   200145 470500                    LDP0    @FNC,,AUTO
         1 000340   200060 471500                    LDP1    M$,,AUTO
         1 000341   003100 061500                    CSR     bolr='003'O
         1 000342   000000 000044                    BDSC    0,,PR0                   by=0,bit=0,n=36
         1 000343   100000 000011                    BDSC    0,,PR1                   by=0,bit=0,n=9

      198     4320    2         MSG.DCTX.HI = CDCT.HI;       /* soliciting resource dct index */

   4320  1 000344   200003 473500                    LDP3    @DCTX,,AUTO
         1 000345   003100 061500                    CSR     bolr='003'O
         1 000346   300000 420010                    BDSC    0,,PR3                   by=2,bit=2,n=8
         1 000347   100001 000011                    BDSC    1,,PR1                   by=0,bit=0,n=9
PL6.E3A0      #001=FPM$MNTOD File=FPM$MNTOD.:E05TSI                              TUE 07/29/97 17:18 Page:27   

      199     4321    2         MSG.DCTX.LO = CDCT.LO;

   4321  1 000350   003100 061500                    CSR     bolr='003'O
         1 000351   300000 610010                    BDSC    0,,PR3                   by=3,bit=1,n=8
         1 000352   100001 200011                    BDSC    1,,PR1                   by=1,bit=0,n=9

      200     4322    2         MSG.DEV# = DEV;

   4322  1 000353   200146 474500                    LDP4    @DEV,,AUTO
         1 000354   003100 061500                    CSR     bolr='003'O
         1 000355   400000 000044                    BDSC    0,,PR4                   by=0,bit=0,n=36
         1 000356   100000 400011                    BDSC    0,,PR1                   by=2,bit=0,n=9

      201     4323    2         K$RWPARM = K_RWPARM_CON;

   4323  1 000357   000100 100400                    MLR     fill='000'O
         1 000360   000000 000234 xsym               ADSC9   K_RWPARM_CON             cn=0,n=156
         1 000361   200006 000234                    ADSC9   K$RWPARM,,AUTO           cn=0,n=156

      202     4324    2         K$RWPARM.MSG$ = M$;

   4324  1 000362   200060 236100                    LDQ     M$,,AUTO
         1 000363   200006 756100                    STQ     K$RWPARM,,AUTO

      203     4325    2         K$RWPARM.MSGSZ = MSZ;

   4325  1 000364   200147 475500                    LDP5    @MSZ,,AUTO
         1 000365   500000 235100                    LDA     0,,PR5
         1 000366   200007 755100                    STA     K$RWPARM+1,,AUTO

      204     4326              %LOCK (G=LDCT$->NK$LDCT.LOCK);

   4327  1 000367   200061 236100                    LDQ     LDCT$,,AUTO
         1 000370   000020 036003                    ADLQ    16,DU
         1 000371   200150 756100                    STQ     @MSZ+1,,AUTO
         1 000372   200150 630500                    EPPR0   @MSZ+1,,AUTO
PL6.E3A0      #001=FPM$MNTOD File=FPM$MNTOD.:E05TSI                              TUE 07/29/97 17:18 Page:28   
         1 000373   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000374   000000 701000 xent               TSX1    HFC$LOCK
         1 000375   000000 011000                    NOP     0

      205     4329    2   WRT:  CALL KIA$WRITE_USER (LDCT$->NK$LDCT,K$RWPARM) ALTRET(QFULL);

   4329  1 000376   200006 630500       WRT          EPPR0   K$RWPARM,,AUTO
         1 000377   200151 450500                    STP0    @MSZ+2,,AUTO
         1 000400   200061 236100                    LDQ     LDCT$,,AUTO
         1 000401   200150 756100                    STQ     @MSZ+1,,AUTO
         1 000402   200150 630500                    EPPR0   @MSZ+1,,AUTO
         1 000403   000020 631400 xsym               EPPR1   B_VECTNIL+16
         1 000404   000000 701000 xent               TSX1    KIA$WRITE_USER
         1 000405   000410 702000 1                  TSX2    QFULL

      206     4330    2         RETURN;

   4330  1 000406   200144 221300                    LDX1  ! MSG+45,,AUTO
         1 000407   000001 702211                    TSX2  ! 1,X1

      207     4331
      208     4332    2   QFULL: IF (S$CU$->B$U.ASYNCH & ~%U_RESET) OR LDCT$->NK$LDCT.DFLG.FEDN THEN

   4332  1 000410   000003 236000 xsym  QFULL        LDQ     B_VECTNIL+3
         1 000411   000027 676000 xsym               ERQ     B_VECTNIL+23
         1 000412   000000 470400 xsym               LDP0    S$CU$
         1 000413   000001 376100                    ANQ     1,,PR0
         1 000414   000461 601000 1                  TNZ     BRKOUT
         1 000415   200061 471500                    LDP1    LDCT$,,AUTO
         1 000416   100006 236100                    LDQ     6,,PR1
         1 000417   000020 316007                    CANQ    16,DL
         1 000420   000461 601000 1                  TNZ     BRKOUT

      209     4333    2            GOTO BRKOUT;
      210     4334    3         IF K$RWPARM.ERR = %K$NO_THROT THEN DO;

   4334  1 000421   200021 235100                    LDA     K$RWPARM+11,,AUTO
PL6.E3A0      #001=FPM$MNTOD File=FPM$MNTOD.:E05TSI                              TUE 07/29/97 17:18 Page:29   
         1 000422   000004 115007                    CMPA    4,DL
         1 000423   000452 601000 1                  TNZ     s:4342

      211     4335    3            N$DCT$(DCTX)->NI$DCT.OD.THRTLD = 1;

   4335  1 000424   200003 473500                    LDP3    @DCTX,,AUTO
         1 000425   300000 720100                    LXL0    0,,PR3
         1 000426   000000 474400 xsym               LDP4    N$DCT$$
         1 000427   400000 475510                    LDP5    0,X0,PR4
         1 000430   000001 236003                    LDQ     1,DU
         1 000431   500033 552120                    STBQ    27,'20'O,PR5

      212     4336    3            CALL SSR$REG (%SS_CBL,LDCT$);

   4336  1 000432   200061 631500                    EPPR1   LDCT$,,AUTO
         1 000433   200151 451500                    STP1    @MSZ+2,,AUTO
         1 000434   000005 236000 2                  LDQ     5
         1 000435   200150 756100                    STQ     @MSZ+1,,AUTO
         1 000436   200150 630500                    EPPR0   @MSZ+1,,AUTO
         1 000437   000020 631400 xsym               EPPR1   B_VECTNIL+16
         1 000440   000000 701000 xent               TSX1    SSR$REG
         1 000441   000000 011000                    NOP     0

      213     4337                %LOCK (G=LDCT$->NK$LDCT.LOCK);

   4338  1 000442   200061 236100                    LDQ     LDCT$,,AUTO
         1 000443   000020 036003                    ADLQ    16,DU
         1 000444   200150 756100                    STQ     @MSZ+1,,AUTO
         1 000445   200150 630500                    EPPR0   @MSZ+1,,AUTO
         1 000446   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000447   000000 701000 xent               TSX1    HFC$LOCK
         1 000450   000000 011000                    NOP     0

      214     4340    3            GOTO WRT;

   4340  1 000451   000376 710000 1                  TRA     WRT

PL6.E3A0      #001=FPM$MNTOD File=FPM$MNTOD.:E05TSI                              TUE 07/29/97 17:18 Page:30   
      215     4341    3            END;
      216     4342    3         IF K$RWPARM.ERR = %K$QFULL THEN DO;

   4342  1 000452   000001 115007                    CMPA    1,DL
         1 000453   000461 601000 1                  TNZ     BRKOUT

      217     4343    3            CALL KIA$OQFL (LDCT$->NK$LDCT) ALTRET(BRKOUT) ;

   4343  1 000454   200061 630500                    EPPR0   LDCT$,,AUTO
         1 000455   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000456   000000 701000 xent               TSX1    KIA$OQFL
         1 000457   000461 702000 1                  TSX2    BRKOUT

      218     4344    3            GOTO WRT;

   4344  1 000460   000376 710000 1                  TRA     WRT

   4342  1 000461                       BRKOUT       null
      219     4345    3            END;
      220     4346    2   BRKOUT: ;
      221     4347              %UNLOCK (G=LDCT$->NK$LDCT.LOCK);

   4348  1 000461   200061 236100                    LDQ     LDCT$,,AUTO
         1 000462   000020 036003                    ADLQ    16,DU
         1 000463   200150 756100                    STQ     @MSZ+1,,AUTO
         1 000464   200150 630500                    EPPR0   @MSZ+1,,AUTO
         1 000465   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000466   000000 701000 xent               TSX1    HFC$UNLOCK
         1 000467   000000 011000                    NOP     0

      222     4350    2         ALTRETURN;

   4350  1 000470   200144 221300                    LDX1  ! MSG+45,,AUTO
         1 000471   000000 702211                    TSX2  ! 0,X1

      223     4351    2   END;
      224     4352
PL6.E3A0      #001=FPM$MNTOD File=FPM$MNTOD.:E05TSI                              TUE 07/29/97 17:18 Page:31   
      225     4353    1   RD_OSAR_MSG: PROC ALTRET;

   4353  1 000472   200144 741300       RD_OSAR_MSG  STX1  ! MSG+45,,AUTO

      226     4354
      227     4355    2         CALL SSR$REG (%SS_CW,LDCT$) ALTRET(BRKOUT);

   4355  1 000473   200061 630500                    EPPR0   LDCT$,,AUTO
         1 000474   200151 450500                    STP0    @MSZ+2,,AUTO
         1 000475   000011 236000 2                  LDQ     9
         1 000476   200150 756100                    STQ     @MSZ+1,,AUTO
         1 000477   200150 630500                    EPPR0   @MSZ+1,,AUTO
         1 000500   000020 631400 xsym               EPPR1   B_VECTNIL+16
         1 000501   000000 701000 xent               TSX1    SSR$REG
         1 000502   000553 702000 1                  TSX2    BRKOUT

      228     4356              %LOCK (G=LDCT$->NK$LDCT.LOCK);

   4357  1 000503   200061 236100                    LDQ     LDCT$,,AUTO
         1 000504   000020 036003                    ADLQ    16,DU
         1 000505   200150 756100                    STQ     @MSZ+1,,AUTO
         1 000506   200150 630500                    EPPR0   @MSZ+1,,AUTO
         1 000507   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000510   000000 701000 xent               TSX1    HFC$LOCK
         1 000511   000000 011000                    NOP     0

      229     4359    2   RD:
      230     4360    2         K$RWPARM.IP$ = LDCT$->NK$LDCT.IP$;

   4360  1 000512   200061 470500       RD           LDP0    LDCT$,,AUTO
         1 000513   000013 236100                    LDQ     11,,PR0
         1 000514   200020 756100                    STQ     K$RWPARM+10,,AUTO

      231     4361    2         LDCT$->NK$LDCT.IP$ = ADDR(NIL);

   4361  1 000515   000001 236000 xsym               LDQ     B_VECTNIL+1
         1 000516   000013 756100                    STQ     11,,PR0
PL6.E3A0      #001=FPM$MNTOD File=FPM$MNTOD.:E05TSI                              TUE 07/29/97 17:18 Page:32   

      232     4362    3         IF K$RWPARM.IP$ ~= ADDR(NIL) THEN DO;

   4362  1 000517   200020 236100                    LDQ     K$RWPARM+10,,AUTO
         1 000520   000001 116000 xsym               CMPQ    B_VECTNIL+1
         1 000521   000551 600000 1                  TZE     s:4369

      233     4363    3            CALL KIQ$MAPFEP (LDCT$->NK$LDCT.IPFEI#);

   4363  1 000522   200061 236100                    LDQ     LDCT$,,AUTO
         1 000523   000012 036000 2                  ADLQ    10
         1 000524   200150 756100                    STQ     @MSZ+1,,AUTO
         1 000525   200150 630500                    EPPR0   @MSZ+1,,AUTO
         1 000526   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000527   000000 701000 xent               TSX1    KIQ$MAPFEP
         1 000530   000000 011000                    NOP     0

      234     4364    3            K$RWPARM.UHDR$ = PINCRC(K$RWPARM.IP$,K$RWPARM.IP$->KI$QMHDR.OFFSET);

   4364  1 000531   200020 470500                    LDP0    K$RWPARM+10,,AUTO
         1 000532   000001 236100                    LDQ     1,,PR0
         1 000533   000022 772000                    QRL     18
         1 000534   000020 736000                    QLS     16
         1 000535   200020 036100                    ADLQ    K$RWPARM+10,,AUTO
         1 000536   200022 756100                    STQ     K$RWPARM+12,,AUTO

      235     4365    3            K$RWPARM.UHDRSZ = K$RWPARM.IP$->KI$QMHDR.SIZE;

   4365  1 000537   000001 236100                    LDQ     1,,PR0
         1 000540   777777 376007                    ANQ     -1,DL
         1 000541   200023 756100                    STQ     K$RWPARM+13,,AUTO

      236     4366    3            K$RWPARM.TYC = '0'B;

   4366  1 000542   200014 450100                    STZ     K$RWPARM+6,,AUTO

      237     4367    3            CALL KIA$MSG (K$RWPARM);
PL6.E3A0      #001=FPM$MNTOD File=FPM$MNTOD.:E05TSI                              TUE 07/29/97 17:18 Page:33   

   4367  1 000543   200006 631500                    EPPR1   K$RWPARM,,AUTO
         1 000544   200150 451500                    STP1    @MSZ+1,,AUTO
         1 000545   200150 630500                    EPPR0   @MSZ+1,,AUTO
         1 000546   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000547   000000 701000 xent               TSX1    KIA$MSG
         1 000550   000000 011000                    NOP     0

      238     4368    3            END;

      239     4369    2         RETURN;

   4369  1 000551   200144 221300                    LDX1  ! MSG+45,,AUTO
         1 000552   000001 702211                    TSX2  ! 1,X1

      240     4370
      241     4371
      242     4372    2   BRKOUT:
      243     4373              %LOCK(G=LDCT$->NK$LDCT.LOCK);

   4374  1 000553   200061 236100       BRKOUT       LDQ     LDCT$,,AUTO
         1 000554   000020 036003                    ADLQ    16,DU
         1 000555   200150 756100                    STQ     @MSZ+1,,AUTO
         1 000556   200150 630500                    EPPR0   @MSZ+1,,AUTO
         1 000557   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000560   000000 701000 xent               TSX1    HFC$LOCK
         1 000561   000000 011000                    NOP     0

      244     4376    2         IF LDCT$->NK$LDCT.IP$ ~= ADDR(NIL) THEN

   4376  1 000562   200061 470500                    LDP0    LDCT$,,AUTO
         1 000563   000013 236100                    LDQ     11,,PR0
         1 000564   000001 116000 xsym               CMPQ    B_VECTNIL+1
         1 000565   000512 601000 1                  TNZ     RD

      245     4377    2            GOTO RD;
      246     4378              %UNLOCK (G=LDCT$->NK$LDCT.LOCK);
PL6.E3A0      #001=FPM$MNTOD File=FPM$MNTOD.:E05TSI                              TUE 07/29/97 17:18 Page:34   

   4379  1 000566   200061 236100                    LDQ     LDCT$,,AUTO
         1 000567   000020 036003                    ADLQ    16,DU
         1 000570   200150 756100                    STQ     @MSZ+1,,AUTO
         1 000571   200150 630500                    EPPR0   @MSZ+1,,AUTO
         1 000572   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000573   000000 701000 xent               TSX1    HFC$UNLOCK
         1 000574   000000 011000                    NOP     0

      247     4381    2         ALTRETURN;

   4381  1 000575   200144 221300                    LDX1  ! MSG+45,,AUTO
         1 000576   000000 702211                    TSX2  ! 0,X1

PART
 Sect OctLoc
   0     000   000*** ******   001*** ******   002*** ******   004*** ******    ................
   0     004   010*** ******                                                    ....

(unnamed)
 Sect OctLoc
   0     005   117104 040040                                                    OD

(unnamed)
 Sect OctLoc
   2     000   000000 000015   000000 000024   000002 006000   000000 006000    ................
   2     004   000002 006000   000011 006000   000001 006000   000005 006000    ................
   2     010   000000 000047   000010 006000   000014 400000                    ...'........
      248     4382    2   END;
      249     4383
      250     4384    1   END;

PL6.E3A0      #001=FPM$MNTOD File=FPM$MNTOD.:E05TSI                              TUE 07/29/97 17:18 Page:35   
--  Include file information  --

   HF_LOCK_C.:E05TOU  cannot be made into a system file and is referenced.
   FP_MACRO_C.:E05TOU  is referenced.
   FT_SUBS.:E05TOU  is referenced.
   FT$DDT.:E05TOU  cannot be made into a system file and is referenced.
   FR$RAT.:E05TOU  is referenced.
   FR_SUBS.:E05TOU  is referenced.
   SS_SCHED_C.:E05TOU  is referenced.
   B$USER.:E05TOU  cannot be made into a system file and is referenced.
   NK_LDCT_R.:E05TOU  cannot be made into a system file and is referenced.
   NK$LDCT.:E05TOU  is referenced.
   NI$TABLES.:E05TOU  is referenced.
   KI$MHDR.:E05TOU  is referenced.
   K$RWPARM.:E05TOU  is referenced.
   K_SUBS_C.:E05TOU  is referenced.
   F$DCB.:E05TOU  cannot be made into a system file and is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  is referenced.
      No diagnostics issued in procedure FPM$MNTOD.
PL6.E3A0      #001=FPM$MNTOD File=FPM$MNTOD.:E05TSI                              TUE 07/29/97 17:18 Page:36   

 **** Variables and constants ****

  ****  Section 000 RoData FPM$MNTOD

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w UBIN(9)     r     1 PART(0:4)

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @DCTX                    146-0-0/w PTR         r     1 @DEV
   145-0-0/w PTR         r     1 @FNC                     147-0-0/w PTR         r     1 @MSZ
     4-0-0/w PTR         r     1 @SN                       *0-0-0/w STRC        r     1 CDCT
    56-0-0/w PTR         r     1 D$                        *0-0-0/w UBIN        r     1 DCTX
    66-0-0/w UBIN        r     1 DEV                       *0-0-0/w UBIN        r     1 DEV
    64-0-0/w UBIN        r     1 F                         *0-0-0/w UBIN        r     1 FNC
     6-0-0/d STRC(1404)  r     1 K$RWPARM                  61-0-0/w PTR         r     1 LDCT$
    60-0-0/w PTR         r     1 M$                        67-0-0/c CHAR(180)   r     1 MSG
    *0-0-0/w UBIN        r     1 MSZ                       57-0-0/w PTR         r     1 O$
    62-0-0/w PTR         r     1 RAT$                      *0-0-0/c CHAR(6)     r     1 SN
    65-0-0/w UBIN        r     1 STT

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 B$JIT$                     0-0-0/w PTR         r     1 FP_OPCI$$
     0-0-0/w PTR         r     1 FR$HD$(0:0)                0-0-0/d STRC(1404)  r     1 K_RWPARM_CON
     0-0-0/w PTR         r     1 N$DCT$$                    0-0-0/w PTR         r     1 S$CU$
     0-0-0/w UBIN        r     1 S_CUN

  ****  BASED and DCB variables  ****
PL6.E3A0      #001=FPM$MNTOD File=FPM$MNTOD.:E05TSI                              TUE 07/29/97 17:18 Page:37   

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d STRC(8856)  r     1 B$JIT                      0-0-0/d STRC(576)   r     1 B$U
     0-0-0/b STRC(54)    r     1 DSMNTACK                   0-0-0/b STRC(63)    r     1 DSMNTREQ
     0-0-0/d ASTR(3528)  r     1 F$DCB                      0-0-0/w STRC(108)   r     1 FP$OPCI
     0-0-0/w STRC(324)   r     1 FR$RAT                     0-0-0/w STRC(288)   r     1 FT$DDT
     0-0-0/w STRC(144)   r     1 KI$QMHDR                   0-0-0/c STRC(882)   r     1 MNTACK
     0-0-0/c STRC(117)   r     1 MNTREQ                     0-0-0/b STRC(54)    r     1 MSG
     0-0-0/w PTR         r     1 N$DCT$(0:0)                0-0-0/w STRC(1332)  r     1 NI$DCT
     0-0-0/d STRC(864)   r     1 NK$LDCT
     0-0-0/w PTR         r     1 NK$LDCT$(0:0)


   Procedure FPM$MNTOD requires 383 words for executable code.
   Procedure FPM$MNTOD requires 108 words of local(AUTO) storage.

    No errors detected in file FPM$MNTOD.:E05TSI    .
PL6.E3A0      #001=FPM$MNTOD File=FPM$MNTOD.:E05TSI                              TUE 07/29/97 17:18 Page:38   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=FPM$MNTOD File=FPM$MNTOD.:E05TSI                              TUE 07/29/97 17:18 Page:39   
          MINI XREF LISTING

B$DO.ECCINFO
      2073**DCL      2074--REDEF
B$JIT.DCB$
       426**DCL      4207>>IF
B$JIT.ERR.MID
       337**DCL       337--REDEF
B$JIT.ORIGINATOR_PORT.FROM_CR
       441**DCL       441--REDEF     442--REDEF
B$JIT.TSLINE
       439**DCL       440--REDEF
B$JIT$
      4194**DCL       331--IMP-PTR  4207>>IF
B$U.ASYNCH
      2010**DCL      4244>>IF       4332>>IF
B$U.MISC
      2052**DCL      2053--REDEF
B$USER.MISC
      2128**DCL      2129--REDEF
BRK
      4244**LABEL    4228--CALLALT  4288--CALLALT
BRKALT
      4254**LABEL    4260--CALLALT
BRKOUT
      4254**LABEL    4229--CALLALT
BRKOUT IN PROCEDURE RD_OSAR_MSG
      4374**LABEL    4355--CALLALT
BRKOUT IN PROCEDURE WR_OSAR_MSG
      4342**LABEL    4333--GOTO     4343--CALLALT
CDCT.HI
      2929**DCL      4320>>ASSIGN
CDCT.LO
      2930**DCL      4321>>ASSIGN
PL6.E3A0      #001=FPM$MNTOD File=FPM$MNTOD.:E05TSI                              TUE 07/29/97 17:18 Page:40   
D$
      3252**DCL      4220<<ASSIGN   4221>>IF       4221>>IF       4221>>IF       4225>>ASSIGN   4283<<ASSIGN
      4284>>IF
DCTX
      2926**DCL        14--PROC     2927--REDEF    4211>>ASSIGN   4239>>ASSIGN   4251>>ASSIGN   4275--ENTRY
      4279>>ASSIGN   4280>>ASSIGN   4281>>ASSIGN   4283>>ASSIGN   4335>>ASSIGN
DEV
      3260**DCL      4280<<ASSIGN   4287<>CALL
DEV IN PROCEDURE WR_OSAR_MSG
      4301**DCL      4298--PROC     4322>>ASSIGN
DSMNTACK.STT
      3849**DCL      4289>>ASSIGN
DSMNTREQ
      3811**DCL      4260--CALL     4287--CALL
DSMNTREQ.DSMNTDEV
      3820**DCL      4279<<ASSIGN
F
      3258**DCL      4208<<ASSIGN   4210<<ASSIGN   4228<>CALL
F$DCB.ACTPOS
      1012**DCL      1012--REDEF
F$DCB.ARS
       987**DCL       987--REDEF
F$DCB.ASN
      1002**DCL      4207>>IF
F$DCB.ATTR
      1005**DCL      1006--REDEF
F$DCB.BORROW
      1020**DCL      1020--REDEF    1020--REDEF    1020--REDEF
F$DCB.DCBNAME.L
      1034**DCL      1034--IMP-SIZ
F$DCB.EOMCHAR
       991**DCL       991--REDEF
F$DCB.FLDID
      1015**DCL      1015--REDEF
F$DCB.FORM$
      1009**DCL      1009--REDEF
PL6.E3A0      #001=FPM$MNTOD File=FPM$MNTOD.:E05TSI                              TUE 07/29/97 17:18 Page:41   
F$DCB.FSECT
      1025**DCL      1025--REDEF
F$DCB.FSN
      1002**DCL      1002--REDEF    1002--REDEF    1003--REDEF
F$DCB.HEADER$
      1008**DCL      1008--REDEF
F$DCB.IXTNSIZE
      1006**DCL      1006--REDEF
F$DCB.LASTSTA$
       996**DCL       996--REDEF
F$DCB.LVL
      1021**DCL      1021--REDEF
F$DCB.NAME.C
       996**DCL       996--REDEF
F$DCB.NOEOF
      1017**DCL      1017--REDEF
F$DCB.NRECS
      1007**DCL      1007--REDEF
F$DCB.NRECX
      1026**DCL      1026--REDEF
F$DCB.OHDR
      1018**DCL      1018--REDEF
F$DCB.ORG
      1001**DCL      1001--REDEF
F$DCB.PRECNO
      1024**DCL      1024--REDEF
F$DCB.RCSZ
      1029**DCL      1029--REDEF
F$DCB.RES
       997**DCL       997--REDEF
F$DCB.SETX
      1009**DCL      1009--REDEF
F$DCB.TAB$
      1008**DCL      1009--REDEF
F$DCB.TDA
      1023**DCL      1023--REDEF
PL6.E3A0      #001=FPM$MNTOD File=FPM$MNTOD.:E05TSI                              TUE 07/29/97 17:18 Page:42   
F$DCB.WSN
       998**DCL       998--REDEF
FNC IN PROCEDURE WR_OSAR_MSG
      4300**DCL      4298--PROC     4319>>ASSIGN
FP$OPCI.LDCTX
      3865**DCL      4216>>ASSIGN
FP$OPCI.LNK$
      3863**DCL      4247>>ASSIGN
FP_OPCI$$
      4191**DCL      4214>>ASSIGN
FR$HD$
      4192**DCL      4218>>ASSIGN
FR$RAT.DCTX
      3356**DCL      4220>>ASSIGN
FR$RAT.LNK$
      3339**DCL      4226>>ASSIGN
FR$RAT.REEL.ASID
      3358**DCL      4253<<ASSIGN
FR$RAT.RES.RFLG.CANT
      3349**DCL      4252<<ASSIGN
FR$RAT.SOLU
      3363**DCL      4239<<ASSIGN   4254<<ASSIGN
FR$RAT.TYP
      3362**DCL      4221>>IF
FT$DDT.POSLOST
      2531**DCL      4284>>IF
HFC$LOCK
      2922**DCL-ENT  4327--CALL     4338--CALL     4357--CALL     4374--CALL
HFC$UNLOCK
      2922**DCL-ENT  4236--CALL     4262--CALL     4294--CALL     4348--CALL     4379--CALL
K$RWPARM
      2956**DCL      4234<>CALL     4292<>CALL     4323<<ASSIGN   4329<>CALL     4367<>CALL
K$RWPARM.BLKREC
      2982**DCL      3007--REDEF
K$RWPARM.BLKREC.BLKU#
      2983**DCL      2985--REDEF
PL6.E3A0      #001=FPM$MNTOD File=FPM$MNTOD.:E05TSI                              TUE 07/29/97 17:18 Page:43   
K$RWPARM.BLKREC.RECU#
      2995**DCL      2997--REDEF
K$RWPARM.DVE.DVBYTE.VFC
      3022**DCL      3023--REDEF
K$RWPARM.DVE.EOMCHAR
      3030**DCL      3034--REDEF
K$RWPARM.ERR
      3094**DCL      3099--REDEF    4334>>IF       4342>>IF
K$RWPARM.FC
      3058**DCL      3059--REDEF
K$RWPARM.FLDID
      3240**DCL      3241--REDEF
K$RWPARM.FPT$
      3121**DCL      3128--REDEF
K$RWPARM.FUNCTION
      3135**DCL      4233<<ASSIGN   4291<<ASSIGN
K$RWPARM.IP$
      3086**DCL      4360<<ASSIGN   4362>>IF       4364>>ASSIGN   4364>>ASSIGN   4365>>ASSIGN
K$RWPARM.KEYTYPE
      3247**DCL      3248--REDEF
K$RWPARM.LDCT$
      3117**DCL      4232<<ASSIGN   4290<<ASSIGN
K$RWPARM.MSG$
      2957**DCL      2963--REDEF    3828--IMP-PTR  3847--IMP-PTR  4231>>ASSIGN   4289>>ASSIGN   4324<<ASSIGN
K$RWPARM.MSGID
      3069**DCL      3074--REDEF
K$RWPARM.MSGIDXT
      3082**DCL      3086--REDEF
K$RWPARM.MSGSZ
      2964**DCL      4325<<ASSIGN
K$RWPARM.ORG
      3218**DCL      3219--REDEF
K$RWPARM.THDRSZ
      3162**DCL      3166--REDEF
K$RWPARM.TYC
      2978**DCL      4366<<ASSIGN
PL6.E3A0      #001=FPM$MNTOD File=FPM$MNTOD.:E05TSI                              TUE 07/29/97 17:18 Page:44   
K$RWPARM.UHDR$
      3107**DCL      4364<<ASSIGN
K$RWPARM.UHDRSZ
      3112**DCL      4365<<ASSIGN
K$RWPARM.VDOFLGS
      3220**DCL      3231--REDEF
KI$QMHDR.FPTSZ
      3774**DCL      3775--REDEF
KI$QMHDR.MSGSZ
      3780**DCL      3781--REDEF
KI$QMHDR.OFFSET
      3768**DCL      4364>>ASSIGN
KI$QMHDR.SIZE
      3769**DCL      4365>>ASSIGN
KI$QMHDR.UID
      3770**DCL      3771--REDEF
KI$RWPARM.BLKREC
      3423**DCL      3448--REDEF
KI$RWPARM.BLKREC.BLKU#
      3424**DCL      3426--REDEF
KI$RWPARM.BLKREC.RECU#
      3436**DCL      3438--REDEF
KI$RWPARM.DVE.DVBYTE.VFC
      3463**DCL      3464--REDEF
KI$RWPARM.DVE.EOMCHAR
      3471**DCL      3475--REDEF
KI$RWPARM.ERR
      3535**DCL      3540--REDEF
KI$RWPARM.FC
      3499**DCL      3500--REDEF
KI$RWPARM.FLDID
      3681**DCL      3682--REDEF
KI$RWPARM.FPT$
      3562**DCL      3569--REDEF
KI$RWPARM.KEYTYPE
      3688**DCL      3689--REDEF
PL6.E3A0      #001=FPM$MNTOD File=FPM$MNTOD.:E05TSI                              TUE 07/29/97 17:18 Page:45   
KI$RWPARM.MSG$
      3398**DCL      3404--REDEF
KI$RWPARM.MSGID
      3510**DCL      3515--REDEF
KI$RWPARM.MSGIDXT
      3523**DCL      3527--REDEF
KI$RWPARM.ORG
      3659**DCL      3660--REDEF
KI$RWPARM.THDRSZ
      3603**DCL      3607--REDEF
KI$RWPARM.VDOFLGS
      3661**DCL      3672--REDEF
KIA$MSG
      4198**DCL-ENT  4367--CALL
KIA$OQFL
      4199**DCL-ENT  4343--CALL
KIA$WRITE_USER
      4197**DCL-ENT  4329--CALL
KIQ$MAPFEP
      4201**DCL-ENT  4363--CALL
KIS$SEND
      4200**DCL-ENT  4234--CALL     4292--CALL
K_RWPARM_CON
      3895**DCL      4323>>ASSIGN
K_RWPARM_CON.BLKREC
      3921**DCL      3946--REDEF
K_RWPARM_CON.BLKREC.BLKU#
      3922**DCL      3924--REDEF
K_RWPARM_CON.BLKREC.RECU#
      3934**DCL      3936--REDEF
K_RWPARM_CON.DVE.DVBYTE.VFC
      3961**DCL      3962--REDEF
K_RWPARM_CON.DVE.EOMCHAR
      3969**DCL      3973--REDEF
K_RWPARM_CON.ERR
      4033**DCL      4038--REDEF
PL6.E3A0      #001=FPM$MNTOD File=FPM$MNTOD.:E05TSI                              TUE 07/29/97 17:18 Page:46   
K_RWPARM_CON.FC
      3997**DCL      3998--REDEF
K_RWPARM_CON.FLDID
      4179**DCL      4180--REDEF
K_RWPARM_CON.FPT$
      4060**DCL      4067--REDEF
K_RWPARM_CON.KEYTYPE
      4186**DCL      4187--REDEF
K_RWPARM_CON.MSG$
      3896**DCL      3902--REDEF
K_RWPARM_CON.MSGID
      4008**DCL      4013--REDEF
K_RWPARM_CON.MSGIDXT
      4021**DCL      4025--REDEF
K_RWPARM_CON.ORG
      4157**DCL      4158--REDEF
K_RWPARM_CON.THDRSZ
      4101**DCL      4105--REDEF
K_RWPARM_CON.VDOFLGS
      4159**DCL      4170--REDEF
LDCT$
      3255**DCL      4216<<ASSIGN   4221>>IF       4232>>ASSIGN   4236>>CALL     4262>>CALL     4281<<ASSIGN
      4290>>ASSIGN   4294>>CALL     4327>>CALL     4329>>CALL     4332>>IF       4336<>CALL     4338>>CALL
      4343>>CALL     4348>>CALL     4355<>CALL     4357>>CALL     4360>>ASSIGN   4361>>ASSIGN   4363>>CALL
      4374>>CALL     4376>>IF       4379>>CALL
M$
      3254**DCL      3793--IMP-PTR  3811--IMP-PTR  4212<<ASSIGN   4213>>ASSIGN   4217>>ASSIGN   4225>>ASSIGN
      4225>>ASSIGN   4278<<ASSIGN   4279>>ASSIGN   4308--IMP-PTR  4319>>ASSIGN   4320>>ASSIGN   4321>>ASSIGN
      4322>>ASSIGN   4324>>ASSIGN
MNTACK.STT
      3830**DCL      4231>>ASSIGN
MNTREQ
      3793**DCL      4228--CALL
MNTREQ.SER
      3802**DCL      4213<<ASSIGN
MNTREQ.SYSCON
PL6.E3A0      #001=FPM$MNTOD File=FPM$MNTOD.:E05TSI                              TUE 07/29/97 17:18 Page:47   
      3803**DCL      4217<<ASSIGN   4225<<ASSIGN   4225>>ASSIGN
MSG
      3261**DCL      4212--ASSIGN   4278--ASSIGN
MSG.DCTX.HI IN PROCEDURE WR_OSAR_MSG
      4314**DCL      4320<<ASSIGN
MSG.DCTX.LO IN PROCEDURE WR_OSAR_MSG
      4315**DCL      4321<<ASSIGN
MSG.DEV# IN PROCEDURE WR_OSAR_MSG
      4311**DCL      4322<<ASSIGN
MSG.FNC IN PROCEDURE WR_OSAR_MSG
      4309**DCL      4319<<ASSIGN
MSZ IN PROCEDURE WR_OSAR_MSG
      4302**DCL      4298--PROC     4325>>ASSIGN
N$DCT$
      4193**DCL      4211>>ASSIGN   4220>>ASSIGN   4239>>ASSIGN   4251>>ASSIGN   4279>>ASSIGN   4280>>ASSIGN
      4281>>ASSIGN   4283>>ASSIGN   4335>>ASSIGN
N$DCT$$
      1920**DCL      1920--IMP-PTR  4193--IMP-PTR  4211>>ASSIGN   4216>>ASSIGN   4220>>ASSIGN   4239>>ASSIGN
      4251>>ASSIGN   4279>>ASSIGN   4280>>ASSIGN   4281>>ASSIGN   4283>>ASSIGN   4335>>ASSIGN
NI$DCT.DDT$
      3275**DCL      4283>>ASSIGN
NI$DCT.DP
      3294**DCL      3301--REDEF    3304--REDEF    3305--REDEF    3307--REDEF    3307--REDEF    3308--REDEF
      3309--REDEF    3309--REDEF
NI$DCT.DVN
      3283**DCL      4221>>IF       4225>>ASSIGN   4279>>ASSIGN   4280>>ASSIGN
NI$DCT.MPC.IOCHANX
      3302**DCL      3302--REDEF
NI$DCT.OD.LDCT$
      3309**DCL      4221>>IF       4281>>ASSIGN
NI$DCT.OD.THRTLD
      3310**DCL      4335<<ASSIGN
NI$DCT.OD.USER#
      3310**DCL      4211<<ASSIGN
NI$DCT.RAT$
      3275**DCL      4239>>ASSIGN   4251>>ASSIGN
PL6.E3A0      #001=FPM$MNTOD File=FPM$MNTOD.:E05TSI                              TUE 07/29/97 17:18 Page:48   
NI$DCT.STATUS.DOWN
      3291**DCL      4221>>IF
NI$DQH.IOCHANX
      3324**DCL      3325--REDEF
NI$DQH.MBX$
      3333**DCL      3334--REDEF
NK$LDCT
      3705**DCL      4329<>CALL     4343<>CALL
NK$LDCT.DDT$
      3707**DCL      3707--REDEF
NK$LDCT.DFLG.FEDN
      3713**DCL      4332>>IF
NK$LDCT.IOQ$
      3706**DCL      3707--REDEF
NK$LDCT.IP$
      3727**DCL      4360>>ASSIGN   4361<<ASSIGN   4376>>IF
NK$LDCT.IPFEI#
      3728**DCL      4363<>CALL
NK$LDCT.LDCTX
      3708**DCL      3708--REDEF
NK$LDCT.LKFLG.ABORTED
      3720**DCL      3721--REDEF
NK$LDCT.LOCK
      3733**DCL      4236<>CALL     4262<>CALL     4294<>CALL     4327<>CALL     4338<>CALL     4348<>CALL
      4357<>CALL     4374<>CALL     4379<>CALL
NK$LDCT.RLCID.LDCTX
      3730**DCL      3730--REDEF
NK$LDCT.STA$
      3726**DCL      3727--REDEF
NK$LDCT.SYMB$
      3705**DCL      3705--REDEF    3705--REDEF    3706--REDEF
NK$LDCT$
      1920**DCL      4216>>ASSIGN
O$
      3253**DCL      4214<<ASSIGN   4215>>DOWHILE  4216>>ASSIGN   4247<<ASSIGN   4247>>ASSIGN
PART
PL6.E3A0      #001=FPM$MNTOD File=FPM$MNTOD.:E05TSI                              TUE 07/29/97 17:18 Page:49   
      4205**DCL      4225>>ASSIGN
QFULL IN PROCEDURE WR_OSAR_MSG
      4332**LABEL    4329--CALLALT
RAT$
      3256**DCL      4218<<ASSIGN   4219>>DOWHILE  4220>>ASSIGN   4221>>IF       4226<<ASSIGN   4226>>ASSIGN
      4251<<ASSIGN   4252>>ASSIGN   4253>>ASSIGN   4254>>ASSIGN
RD IN PROCEDURE RD_OSAR_MSG
      4360**LABEL    4377--GOTO
RD_OSAR_MSG
      4353**PROC     4229--CALL     4288--CALL
S$CU$
      2139**DCL      4244>>IF       4332>>IF
SN
      2931**DCL        14--PROC     4213>>ASSIGN
SSR$REG
      4202**DCL-ENT  4336--CALL     4355--CALL
STT
      3259**DCL      4231<<ASSIGN   4238>>IF       4238>>IF       4289<<ASSIGN
S_CUN
      4195**DCL      4211>>ASSIGN
WRT IN PROCEDURE WR_OSAR_MSG
      4329**LABEL    4340--GOTO     4344--GOTO
WR_OSAR_MSG
      4298**PROC     4228--CALL     4260--CALL     4287--CALL
XIT
      4296**LABEL    4287--CALLALT
