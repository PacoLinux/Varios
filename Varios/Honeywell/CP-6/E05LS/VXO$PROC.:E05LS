VERSION E05

PL6.E3A0      #001=VXO$PROC File=VXO$PROC.:E05TSI                                WED 07/30/97 08:29 Page:1    
        1        1        /*M* VXO$PROC - Traverses a node's file list. Called once/node during pass 1 */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* DMR,PLM=6,IND=4,CSU=2,EXM=0,ECU=2,MOC,DCI=4,CRT=4 DCI=4,CTI=8     */
        8        8        VXO$PROC: PROC;
        9        9        %INCLUDE VX_INC_C;
       10    10725        %VX$NODE;

             10737    1   /*******************************************************************************
             10738    1   *                                                                              *
             10739    1   *                          VX$NODE                                                 *
             10740    1   *                                                                              *
             10741    1   *******************************************************************************/

             10757    1   DCL 1 VX$NODE      ALIGNED    BASED,
             10758    1         2 SON$ PTR /*(ADDR(NIL))*/, /* Son pointer                      */
             10759    1         2 BROTHER$ PTR /*(ADDR(NIL))*/, /* Brother pointer              */
             10760    1         2 FATHER$ PTR /*(ADDR(NIL))*/, /* Father pointer                */
             10761    1         2 PATH$ PTR /*(ADDR(NIL))*/, /* Path   pointer                  */
             10762    1         2 HEAD$       PTR /*(ADDR(NIL))*/, /* Head pointer to
             10763                              to list of file nodes for this node            */
             10764    1         2 TAIL$ PTR /*(ADDR(NIL))*/, /* Tail pointer to list            */
             10765    1         2 SHARED_LIB_HEAD$ PTR /*(ADDR(NIL))*/,
             10765                  /* Head pointer to shared library list */
             10766    1         2 LIB_HEAD$         PTR /*(ADDR(NIL))*/,
             10766                  /* Head pointer to list of shared libraries
             10767                                          which have been mapped to included libraries */
             10768    1         2 NUM          UBIN(36)  UNAL,    /* Node number                        */
             10769    1         2 DEPTH          UBIN(36)  UNAL,  /* Depth; ROOT=0*/
             10770    1         2 ADDR_START_A(0:2/*@ROS*/) SBIN WORD /*(0*3)*/, /* Array            */
             10771    1         2 ADDR_START REDEF  ADDR_START_A,
             10772    1           3 RDATA       SBIN WORD,   /* First address for this node in data     */
             10773    1           3 RPROC       SBIN WORD,   /* First address for this node in proc     */
             10774    1           3 ROS       SBIN WORD,          /* Last address for program in ros    */
PL6.E3A0      #001=VXO$PROC File=VXO$PROC.:E05TSI                                WED 07/30/97 08:29 Page:2    
             10775    1         2 ADDR_STOP_A(0:2/*@ROS*/) SBIN WORD /*(-1*3)*/, /* Array            */
             10776    1         2 ADDR_STOP  REDEF  ADDR_STOP_A,
             10777    1           3 RDATA       SBIN WORD,        /* Last address for this node in data */
             10778    1           3 RPROC       SBIN WORD,        /* Last address for this node in proc */
             10779    1           3 ROS       SBIN WORD,          /* Last address for program in ros    */
             10780    1         2 START_PAGE#_A(0:2/*@ROS*/) SBIN WORD /*(0*3)*/, /* Array           */
             10781    1         2 START_PAGE# REDEF START_PAGE#_A,
             10782    1           3 RDATA       SBIN WORD,   /* First page    for this node in data     */
             10783    1           3 RPROC       SBIN WORD,   /* First page    for this node in proc     */
             10784    1           3 ROS       SBIN WORD,          /* First page   for program in ros    */
             10785    1         2 STOP_PAGE#_A(0:2/*@ROS*/) SBIN WORD /*(-1*3)*/, /* Array*/
             10786    1         2 STOP_PAGE#  REDEF STOP_PAGE#_A,
             10787    1           3 RDATA       SBIN WORD,   /* Last  page    for this node in data     */
             10788    1           3 RPROC       SBIN WORD,   /* Last  page    for this node in proc     */
             10789    1           3 ROS       SBIN WORD,          /* Last  page   for program in ros    */
             10790    1         2 START_SC_ALL$ PTR /*(ADDR(NIL))*/,
             10790                  /* Starting pointer for common sections for this node */
             10791    1         2 STOP_SC_ALL$ PTR /*(ADDR(NIL))*/,
             10791                  /* Stopping pointer for common sections for this node */
             10792    1         2 L_START,
             10793    1           3 SN$ PTR /*(ADDR(NIL))*/, /* Segment definition names        */
             10794    1           3 DN$ PTR /*(ADDR(NIL))*/, /* Def names                       */
             10795    1           3 RN$ PTR /*(ADDR(NIL))*/, /* Ref names                       */
             10796    1           3 SC$ PTR /*(ADDR(NIL))*/, /* Sections                        */
             10797    1           3 ED$ PTR /*(ADDR(NIL))*/, /* Entry defs*/
             10798    1           3 ER$ PTR /*(ADDR(NIL))*/, /* Entry refs*/
             10799    1           3 DD$ PTR /*(ADDR(NIL))*/, /* Data defs                       */
             10800    1           3 DR$ PTR /*(ADDR(NIL))*/, /* Data refs                       */
             10801    1           3 SD$ PTR /*(ADDR(NIL))*/, /* Seg defs                        */
             10802    1           3 SR$ PTR /*(ADDR(NIL))*/, /* Seg refs                        */
             10803    1         2 L_START_A$(0:9)     REDEF L_START PTR,
             10804    1         2 L_STOP,
             10805    1           3 SN$ PTR /*(ADDR(NIL))*/, /* Segment definition names        */
             10806    1           3 DN$ PTR /*(ADDR(NIL))*/, /* Def names                       */
             10807    1           3 RN$ PTR /*(ADDR(NIL))*/, /* Ref names                       */
             10808    1           3 SC$ PTR /*(ADDR(NIL))*/, /* Sections                        */
             10809    1           3 ED$ PTR /*(ADDR(NIL))*/, /* Entry defs*/
PL6.E3A0      #001=VXO$PROC File=VXO$PROC.:E05TSI                                WED 07/30/97 08:29 Page:3    
             10810    1           3 ER$ PTR /*(ADDR(NIL))*/, /* Entry refs*/
             10811    1           3 DD$ PTR /*(ADDR(NIL))*/, /* Data defs                       */
             10812    1           3 DR$ PTR /*(ADDR(NIL))*/, /* Data refs                       */
             10813    1           3 SD$ PTR /*(ADDR(NIL))*/, /* Seg defs                        */
             10814    1           3 SR$ PTR /*(ADDR(NIL))*/, /* Seg refs                        */
             10815    1         2 L_STOP_A$(0:9) REDEF   L_STOP    PTR,
             10816    1         2 L_SIZE,
             10817    1           3 SN      UBIN /*(0)*/, /* Segment definition names           */
             10818    1           3 DN      UBIN /*(0)*/, /* Def names                          */
             10819    1           3 RN      UBIN /*(0)*/, /* Ref names                          */
             10820    1           3 SC      UBIN /*(0)*/, /* Sections                           */
             10821    1           3 ED      UBIN /*(0)*/, /* Entry defs*/
             10822    1           3 ER      UBIN /*(0)*/, /* Entry refs*/
             10823    1           3 DD      UBIN /*(0)*/, /* Data defs                          */
             10824    1           3 DR      UBIN /*(0)*/, /* Data refs                          */
             10825    1           3 SD      UBIN /*(0)*/, /* Seg defs                           */
             10826    1           3 SR      UBIN /*(0)*/, /* Seg refs                           */
             10827    1         2 L_SIZE_A(0:9)  REDEF   L_SIZE    UBIN,
             10828    1         2 L_PREV_SIZE,
             10829    1           3 SN      UBIN /*(0)*/, /* Segment definition names           */
             10830    1           3 DN      UBIN /*(0)*/, /* Def names                          */
             10831    1           3 RN      UBIN /*(0)*/, /* Ref names                          */
             10832    1           3 SC      UBIN /*(0)*/, /* Sections                           */
             10833    1           3 ED      UBIN /*(0)*/, /* Entry defs*/
             10834    1           3 ER      UBIN /*(0)*/, /* Entry refs*/
             10835    1           3 DD      UBIN /*(0)*/, /* Data defs                          */
             10836    1           3 DR      UBIN /*(0)*/, /* Data refs                          */
             10837    1           3 SD      UBIN /*(0)*/, /* Seg defs                           */
             10838    1           3 SR      UBIN /*(0)*/, /* Seg refs                           */
             10839    1         2 L_PREV_SIZE_A(0:9)  REDEF   L_PREV_SIZE    UBIN,
             10840    1         2 BIT_MAP                ALIGNED,
             10841    1           3 DATA                  ALIGNED,
             10842    1             4 BITS(0:255)          BIT(1)    UNAL /*('0'B*256)*/,
             10843    1           3 RPROC                 ALIGNED,
             10844    1             4 BITS(0:255)          BIT(1)    UNAL /*('0'B*256)*/,
             10845    1           3 ROS                   ALIGNED,
             10846    1             4 BITS(0:255)          BIT(1)    UNAL /*('0'B*256)*/,
PL6.E3A0      #001=VXO$PROC File=VXO$PROC.:E05TSI                                WED 07/30/97 08:29 Page:4    
             10847    1         2 L_SC_START,
             10848    1           3 SC_BLK_COM$ PTR /*(ADDR(NIL))*/, /* Blank common            */
             10849    1           3 SC_ROOT_LBL_COM$ PTR /*(ADDR(NIL))*/, /* Root labelled common */
             10850    1           3 SC_LBL_COM$ PTR /*(ADDR(NIL))*/, /* Labelled common         */
             10851    1           3 SC_DCB$ PTR /*(ADDR(NIL))*/, /* Dcbs                        */
             10852    1         2 L_SC_START_A$(0:3)  REDEF L_SC_START PTR,
             10853    1         2 L_SC_STOP,
             10854    1           3 SC_BLK_COM$ PTR /*(ADDR(NIL))*/, /* Blank common            */
             10855    1           3 SC_ROOT_LBL_COM$ PTR /*(ADDR(NIL))*/, /* Root labelled common */
             10856    1           3 SC_LBL_COM$ PTR /*(ADDR(NIL))*/, /* Labelled common         */
             10857    1           3 SC_DCB$ PTR /*(ADDR(NIL))*/, /* Dcbs                        */
             10858    1         2 L_SC_STOP_A$(0:3)   REDEF L_SC_STOP  PTR,
             10859    1         2 PROMOTE_HEAD,
             10860    1           3 BLK_COM$              PTR /*(ADDR(NIL))*/,
             10861    1           3 LBL_COM$              PTR /*(ADDR(NIL))*/,
             10862    1         2 PROMOTE_HEAD_A$(0:1) REDEF PROMOTE_HEAD     PTR,
             10863    1         2 PROMOTE_TAIL,
             10864    1           3 BLK_COM$              PTR /*(ADDR(NIL))*/,
             10865    1           3 LBL_COM$              PTR /*(ADDR(NIL))*/,
             10866    1         2 PROMOTE_TAIL_A$(0:1) REDEF PROMOTE_TAIL     PTR,
             10867    1         2 HAVE_ASL          BIT(1)    UNAL /*('0'B)*/,
             10868    1         2 ALL_BLK_COM          BIT(1)    UNAL /*('0'B)*/,
             10869    1         2 USE_NODE          BIT(1)    UNAL /*('0'B)*/,
             10870    1         2 *                 BIT(33)   UNAL /*('0'B)*/,
             10871    1         2 BLANK_COMMON$     PTR       ALIGNED /*(ADDR(NIL))*/;

       11    10875        %VX$LST;

             10888    1   /*******************************************************************************
             10889    1   *                                                                              *
             10890    1   *                          VX$LST                                                 *
             10891    1   *                                                                              *
             10892    1   *******************************************************************************/

             10897    1   DCL 1 VX$LST                          ALIGNED BASED,
             10898    1         2 LINK$        PTR,               /* Link to next item                  */
             10899    1         2 TYPE         UBIN( 18) UNAL,    /* Type                               */
PL6.E3A0      #001=VXO$PROC File=VXO$PROC.:E05TSI                                WED 07/30/97 08:29 Page:5    
             10900    1         2 SUB_TYPE     UBIN( 18) UNAL,    /* Sub-type                           */
             10901    1         2 OBJECT_NAME$ PTR,               /* Pointer to object unit name        */
             10902    1         2 PRIOR$ REDEF OBJECT_NAME$ PTR,  /* Pointer to prior element in list   */
             10903    1         2 SC_HEAD$     PTR,               /* Head pointer to section link list  */
             10904    1         2 LIBSRCH$ REDEF SC_HEAD$ PTR,    /* Pointer to account list for library*/
             10905    1         2 SC_TAIL$     PTR,               /* Tail pointer to section link list  */
             10906    1         2 LIB REDEF SC_TAIL$,             /* Used only by UNSAT library files   */
             10907    1           3 USED UBIN HALF UNAL,          /* 1 => library file used, 0=>not used*/
             10908    1           3 NEEDED UBIN HALF UNAL,   /* 1 => library file needed, 0=>not needed*/
             10909    1         2 P,
             10910    1           3 NAME_       ALIGNED,
             10911    1             4 BOUND      UBIN(20)  UNAL,
             10912    1             4 FLAGSV     UBIN(11)  UNAL,
             10913    1             4 *          BIT(5)    UNAL,
             10914    1             4 NAME$      PTR,
             10915    1           3 ACCT_       ALIGNED,
             10916    1             4 BOUND      UBIN(20)  UNAL,
             10917    1             4 FLAGSV     UBIN(11)  UNAL,
             10918    1             4 *          BIT(5)    UNAL,
             10919    1             4 ACCT$      PTR,
             10920    1           3 PASS_       ALIGNED,
             10921    1             4 BOUND      UBIN(20)  UNAL,
             10922    1             4 FLAGSV     UBIN(11)  UNAL,
             10923    1             4 *          BIT(5)    UNAL,
             10924    1             4 PASS$      PTR,
             10925    1           3 SN_         ALIGNED,
             10926    1             4 BOUND      UBIN(20)  UNAL,
             10927    1             4 FLAGSV     UBIN(11)  UNAL,
             10928    1             4 *          BIT(5)    UNAL,
             10929    1             4 SN$        PTR,
             10930    1           3 WSN_        ALIGNED,
             10931    1             4 BOUND      UBIN(20)  UNAL,
             10932    1             4 FLAGSV     UBIN(11)  UNAL,
             10933    1             4 *          BIT(5)    UNAL,
             10934    1             4 WSN$       PTR,
             10935    1           3 B           ALIGNED,
             10936    1             4 RES        BIT(1)    UNAL,
PL6.E3A0      #001=VXO$PROC File=VXO$PROC.:E05TSI                                WED 07/30/97 08:29 Page:6    
             10937    1             4 ASN        BIT(1)    UNAL,
             10938    1             4 ACCT       BIT(1)    UNAL,
             10939    1             4 *          BIT(33)   UNAL,
             10940    1           3 RES         CHAR(4)   ALIGNED,
             10941    1           3 ASN         UBIN(36)  ALIGNED;
       12    10944        %T$C;

             10956    1   /*******************************************************************************
             10957    1   *                                                                              *
             10958    1   *                          T$C                                                 *
             10959    1   *                                                                              *
             10960    1   *******************************************************************************/

             10965    1   DCL 1 T$C           BASED     ALIGNED,  /* Text count                         */
             10966    1         2 COUNT        UBIN( 9) UNAL,
             10967    1         2 CHARS        CHAR( T$C.COUNT )   UNAL;
             10968    1   DCL 1 T$C_UNAL      BASED     UNAL,     /* Text count                         */
             10969    1         2 COUNT        UBIN( 9) UNAL,
             10970    1         2 CHARS        CHAR( T$C_UNAL.COUNT ) UNAL;
       13    10973        %SET LISTMAC='1'B;
       14    10974        %SET LISTSUB='1'B;
       15    10975        %BANNER(ARG=SUBS);
             10976        %LSET LISTDIR='0'B;

             10983    1   /*******************************************************************************
             10984    1   *                                                                              *
             10985    1   *                          SUBS                                                 *
             10986    1   *                                                                              *
             10987    1   *******************************************************************************/

       16    10991        %SUB_LINKFLAGS;
             10992        %EQU SOURCE_OBJECT#=0 ;
             10993        %EQU SOURCE_SLIB#=1 ;
             10994        %EQU SOURCE_ALIB#=2 ;
             10995        %EQU SOURCE_ULIB#=3 ;
             10996        %EQU SOURCE_RLIB#=4 ;
             10997        %EQU SOURCE_REMOVED#=5 ;
PL6.E3A0      #001=VXO$PROC File=VXO$PROC.:E05TSI                                WED 07/30/97 08:29 Page:7    
             10998        %EQU SOURCE_LINKER#=6 ;
       17    11000        %B;
             11001        %LSET LISTDIR='0'B;

             11008    1   /*******************************************************************************
             11009    1   *                                                                              *
             11010    1   *                          BIT                                                 *
             11011    1   *                                                                              *
             11012    1   *******************************************************************************/

       18    11016    1   DCL INCLUDED        BIT(1)    ALIGNED   STATIC    INIT('0'B/*@FALSE_B*/);
       19    11017        %E;
             11018        %LSET LISTDIR='0'B;

             11025    1   /*******************************************************************************
             11026    1   *                                                                              *
             11027    1   *                          ENTRY                                                 *
             11028    1   *                                                                              *
             11029    1   *******************************************************************************/

       20    11033    1   DCL VXO$OBJECT           ENTRY(3);
       21    11034    1   DCL VXO$RUN              ENTRY(3);
       22    11035    1   DCL VXP$PAR         ENTRY(5)  ALTRET;
       23    11036    1   DCL VXP$TREE             ENTRY(7);
       24    11037        %ENTRIES;
             11038    1   DCL VXE$ERROR       ENTRY(4);
             11039    1   DCL VXE$ERR         ENTRY(3);
             11040    1   DCL VXE$MERC        ENTRY;
             11041    1   DCL VXE$ERRMSG      ENTRY(3);
             11042    1   DCL VXR$READ        ENTRY( 3 );
             11043    1   DCL VXW$WRITE       ENTRY( 3 );
             11044    1   DCL VXW$WRITE_DO    ENTRY( 2 );
             11045    1   DCL VXD$B2C         ENTRY( 5 );
             11046    1   DCL VXD$C2B         ENTRY( 3 );
             11047    1   DCL VXA$GET         ENTRY( 3 );
             11048    1   DCL VXF$FREE        ENTRY( 3 );
             11049    1   DCL VXQ$SORT        ENTRY( 7 );
PL6.E3A0      #001=VXO$PROC File=VXO$PROC.:E05TSI                                WED 07/30/97 08:29 Page:8    
             11050    1   DCL VXY$YESNO       ENTRY( 1 );
       25    11052        %ENTRIES_IO;
             11053    1   DCL VXF$OPEN        ENTRY(3) ALTRET;
             11054    1   DCL VXF$CLOSE       ENTRY(3);
             11055    1   DCL VXU$PREAD       ENTRY(12);
             11056    1   DCL VXK$KEY         ENTRY(4);
             11057    1   DCL VXI$READ        ENTRY(4)  ALTRET;
             11058    1   DCL VXI$WRITE       ENTRY(4)  ALTRET;
       26    11060    1   DCL VXS$LST         ENTRY(6)  ALTRET;
       27    11061        %PTR;
             11062        %LSET LISTDIR='0'B;

             11069    1   /*******************************************************************************
             11070    1   *                                                                              *
             11071    1   *                          PTR                                                 *
             11072    1   *                                                                              *
             11073    1   *******************************************************************************/

       28    11077    1   DCL START$          PTR  ALIGNED   AUTO;
       29    11078    1   DCL PWORK$          PTR  ALIGNED   AUTO;
       30    11079    1   DCL HEAD$           PTR  ALIGNED   AUTO;
       31    11080    1   DCL TAIL$           PTR  ALIGNED   AUTO;
       32    11081    1   DCL WHERE$          PTR  ALIGNED   AUTO;
       33    11082    1   DCL NAME$           PTR  ALIGNED   AUTO;
       34    11083    1   DCL DUMMY$ PTR ;
       35    11084        %U;
             11085        %LSET LISTDIR='0'B;

             11092    1   /*******************************************************************************
             11093    1   *                                                                              *
             11094    1   *                          UBIN                                                 *
             11095    1   *                                                                              *
             11096    1   *******************************************************************************/

       36    11100        %INDEX;
             11101    1   DCL I          UBIN(36) ALIGNED AUTO;
             11102    1   DCL SI REDEF I SBIN WORD ALIGNED;
PL6.E3A0      #001=VXO$PROC File=VXO$PROC.:E05TSI                                WED 07/30/97 08:29 Page:9    
             11103    1   DCL J          UBIN(36) ALIGNED AUTO;
             11104    1   DCL SJ REDEF J SBIN WORD ALIGNED;
             11105    1   DCL K          UBIN(36) ALIGNED AUTO;
             11106    1   DCL SK REDEF K SBIN WORD ALIGNED;
             11107    1   DCL L          UBIN(36) ALIGNED AUTO;
             11108    1   DCL SL REDEF L    SBIN WORD ALIGNED;
       37    11110    1   DCL FIRST           UBIN(36) ALIGNED AUTO;
       38    11111    1   DCL TSIZE           UBIN(36)  ALIGNED AUTO;
       39    11112    1   DCL SIZE            UBIN(36)  ALIGNED AUTO;
       40    11113    1   DCL NCHARS          UBIN(36)  ALIGNED AUTO;
       41    11114    1   DCL PWORK_SIZE      UBIN(36)  ALIGNED AUTO;
       42    11115        /**/
       43    11116        /**/
       44    11117        /**/
       45    11118    1   DCL VX_N_START_TREE UBIN(36)  ALIGNED   SYMREF;
       46    11119    1   DCL M$OF            DCB;
       47    11120        /**/
       48    11121        /**/
       49    11122        /**/
       50    11123    1   DCL 1 SYSLIB_TEXTC ALIGNED CONSTANT SYMDEF,
       51    11124    1         2 COUNT UBIN(9) UNAL INIT(16),    /* MAKE THE ACCOUNT PATCHABLE */
       52    11125    1         2 CHARS CHAR(16) UNAL INIT(':SYSLIB.:SYS');
       53    11126        /**/
       54    11127        %PLIST;
       55    11128        %PARSE$OUT( NAME=O$B, STCLASS="BASED");
       56    11173              % FPT_OPEN (FPTN=OPEN_LOOU,       /* Open List Overlaid Object Units */
       57    11174                      DCB = M$LOOU,
       58    11175                      DISP=SCRATCH,
       59    11176                      ORG=INDEXED,KEYX=40,KEYL=31,
       60    11177                      ACS=DIRECT,
       61    11178                      ASN = FILE,
       62    11179                      FUN = CREATE);
       63    11288              % FPT_WRITE (FPTN = WR_LOOU,BUF=LOOU_BUF,DCB=M$LOOU,KEY=LOOU_KEY);
       64    11319    1   DCL M$LOOU DCB;
       65    11320    1   DCL LOOU_BUF CHAR (71) STATIC INIT (' ');
       66    11321    1   DCL 1 LOOU_BUF_A REDEF LOOU_BUF,
       67    11322    1         2 OBJECT_FILE CHAR (40),
PL6.E3A0      #001=VXO$PROC File=VXO$PROC.:E05TSI                                WED 07/30/97 08:29 Page:10   
       68    11323    1         2 OU_NAME CHAR (31);
       69    11324    1   DCL LOOU_KEY CHAR(31) STATIC INIT(' ');
       70    11325    1   DCL OPEN_LOOU_FLAG BIT (1) STATIC INIT ('0'B);
       71    11326    1   DCL LOOU_COUNTER UBIN STATIC INIT (0);
       72    11327    1   DCL OU_ACCT CHAR (8);
       73    11328    1   DCL OU_ACCT_B CHAR (8) BASED;
       74    11329    1   DCL DOT_BLK CHAR (1);
       75    11330        %EJECT;
PL6.E3A0      #001=VXO$PROC File=VXO$PROC.:E05TSI                                WED 07/30/97 08:29 Page:11   
       76    11331    1         VX_FCURR$ = VX_CURR$ -> VX$NODE.HEAD$;
       77    11332    2         DO WHILE ( VX_FCURR$ ~= ADDR(NIL) );
       78    11333    2             CALL VXF$OPEN( VX_FCURR$, 0/*@OF*/ );
       79    11334    2             IF VX_DO_PASS1 = 0/*@NO*/ THEN GOTO CLOSE_FILE;
       80    11335    3             DO CASE( VX_FCURR$ -> VX$LST.TYPE );
       81    11336    3               CASE( 0/*@OF*/ );                /* Object file */
       82    11337    4                 DO CASE( VX_FCURR$ -> VX$LST.SUB_TYPE );
       83    11338    4                   CASE( 0/*@OF_ALL*/ );        /* All object units */
       84    11339    4                     IF VX_CURR$ -> VX$NODE.SON$ ~= ADDR(NIL) THEN GOTO RESUME;
       85    11340        /* Now check if a tree record exists */
       86    11341    4                     VX_O_KEY_BUF.FORM0.COUNT = LENGTHC( VX_O_KEY_TREE );
       87    11342    4                     VX_O_KEY_BUF.FORM0.CHARS = VX_O_KEY_TREE;
       88    11343    4                     TSIZE = 0;            /* Init space request */
       89    11344    4                     SIZE = 40;            /* Initial space request is 40 words */
       90    11345                          %ALLOCATE( PTR$=START$, TYPE=@DS3, SIZE=SIZE ) ;
       91    11352    4   TREE_AGAIN:
       92    11353    4                     TSIZE = TSIZE + SIZE; /* Accumulate total space */
       93    11354    4                     VX_IO_SAVEPREV = 1;   /* For VXI$READ error processing */
       94    11355    4                     CALL VXI$READ( 0/*@OF*/, START$, TSIZE, 0/*@OF*/                )
             11355                              ALTRET(TREE_ERR);
       95    11356        /* Here => tree record was read */
       96    11357    4                     NCHARS = VX_IO_SIZEC; /* Set size in characters */
       97    11358    4                     CALL VXP$PAR( -1, ADDR(VX_N_START_TREE), START$, NCHARS,
             11358                              PWORK_SIZE );
       98    11359    4                     CALL VXP$TREE( HEAD$,
       99    11360    4                             TAIL$,
      100    11361    4                             0/*@OF*/,
      101    11362    4                             1/*@OF_LIST*/,
      102    11363    4                             VX_CURR$,
      103    11364    4                             VX_FCURR$,
      104    11365    4                             VX_P_PCB_MAIN.OUT$ -> O$B.SUBLK$(0));
      105    11366                                            /* Go do semantics and build structures */
      106    11367    4                     TAIL$ -> VX$LST.LINK$ = VX_FCURR$ -> VX$LST.LINK$;
             11367                              /* Chain tail(root) to next */
      107    11368    4                     VX_FCURR$ -> VX$LST.OBJECT_NAME$ = HEAD$ -> VX$LST.OBJECT_NAME$;
      108    11369                                    /* Get first key pointer and pipe it up to major */
      109    11370    4                     VX_FCURR$ -> VX$LST.LINK$ = HEAD$ -> VX$LST.LINK$;
PL6.E3A0      #001=VXO$PROC File=VXO$PROC.:E05TSI                                WED 07/30/97 08:29 Page:12   
      110    11371                                /* And chain current to second; discarding the first */
      111    11372    4                     VX_FCURR$ -> VX$LST.SUB_TYPE = 1/*@OF_LIST*/;
             11372                              /* And set SUB_TYPE of major */
      112    11373    4                     TSIZE = TSIZE + PWORK_SIZE;
      113    11374    4                     CALL VXF$FREE( 3/*@DS3*/, TSIZE, 1 );
      114    11375    4                     GOTO LIST_UNITS;
      115    11376    4   TREE_ERR:
      116    11377    5                     IF VX_IO_STATUS = 2/*@IO_LD*/ THEN DO; /* Insufficient space */
      117    11378    5                         SIZE = SIZE + SIZE; /* Double and get */
      118    11379                              %ALLOCATE( PTR$=DUMMY$, TYPE=@DS3, SIZE=SIZE ) ;
      119    11386    5                         GOTO TREE_AGAIN;
      120    11387    5                        END;
      121    11388    4                     ELSE CALL VXF$FREE( 3/*@DS3*/, TSIZE, 1 );
      122    11389        %EJECT;
PL6.E3A0      #001=VXO$PROC File=VXO$PROC.:E05TSI                                WED 07/30/97 08:29 Page:13   
      123    11390    4   RESUME:
      124    11391    4                     FIRST = 0;
      125    11392    4                     VX_O_KEY_BUF_L.FORM0.COUNT = LENGTHC( VX_O_KEY_HEAD);
             11392                              /* Set positioning key */
      126    11393    4                     VX_O_KEY_BUF_L.FORM0.CHARS = VX_O_KEY_HEAD;
      127    11394    4   NEXT_UNIT:
      128    11395    4                     VX_IO_USEPREV = 1/*@YES*/; /* Set previous key to use */
      129    11396    4                     VX_IO_SAVEPREV = 1/*@YES*/;
             11396                              /* Request previous key to be saved and do a keyed read */
      130    11397    4                     CALL VXI$READ( 0/*@OF*/, ADDR(VX_OU_HEAD), SIZEW( VX_OU_HEAD),
      131    11398    4                             0/*@OF*/                  ) ALTRET(NEXT_READ);
      132    11399    4   NEXT_READ:
      133    11400        /* Here after positioning read */
      134    11401    4                     VX_IO_USEPREV = 1/*@YES*/; /* Use previous key */
      135    11402    4                     VX_IO_SAVEPREV = 2;
             11402                              /* Request to save as previous and do a sequential read */
      136    11403    4                     VX_OU_HEAD = '0'B;
      137    11404    4                     CALL VXI$READ( 0/*@OF*/, ADDR(VX_OU_HEAD), SIZEW(VX_OU_HEAD),
      138    11405    4                             0/*@OF*/       )         ALTRET(TRY_RUN_FILE);
      139    11406        /* Verify we have a head record */
      140    11407    4                     IF VX_OK.KTYPE ~= -1 THEN GOTO TRY_RUN_FILE;
      141    11408        /* An honest to god object file */
      142    11409    4                     FIRST = FIRST + 1;
      143    11410    4                     CALL VXO$OBJECT( VX_FCURR$, %SOURCE_OBJECT#, ADDR(
             11410                              VX_PASS1_ALL_TYPE));
      144    11411    5                     IF VX_FCURR$ >= VX_OVERLAY_START$ THEN DO;
      145    11412    5                         IF NOT OPEN_LOOU_FLAG THEN CALL M$OPEN (OPEN_LOOU);
      146    11413    5                         OPEN_LOOU_FLAG = '1'B;
      147    11414    6                         IF VX_FCURR$->VX$LST.P.ACCT_.ACCT$ ~= ADDR (NIL) THEN DO;
      148    11415    6                             OU_ACCT = VX_FCURR$->VX$LST.P.ACCT_.ACCT$->OU_ACCT_B;
      149    11416    6                             DOT_BLK = '.';
      150    11417    6                            END;
      151    11418    6                         ELSE DO;
      152    11419    6                             OU_ACCT = ' ';
      153    11420    6                             DOT_BLK = ' ';
      154    11421    6                            END;
      155    11422    5                         LOOU_KEY=SUBSTR(VX_O_KEY_BUF_L.FORM0.CHARS,1,VX_O_KEY_BUF_L.
PL6.E3A0      #001=VXO$PROC File=VXO$PROC.:E05TSI                                WED 07/30/97 08:29 Page:14   
             11422                                  FORM0.COUNT-1);
      156    11423    5                         CALL CONCAT (LOOU_BUF_A.OBJECT_FILE,
      157    11424    5                                 PINCRW (VX_FCURR$,18)->T$C.CHARS,DOT_BLK,OU_ACCT);
      158    11425    5                         LOOU_BUF_A.OU_NAME=LOOU_KEY;
      159    11426    5                         CALL M$WRITE (WR_LOOU);
      160    11427    5                         LOOU_BUF = ' ';
      161    11428    5                         LOOU_COUNTER = LOOU_COUNTER + 1;
      162    11429    5                        END;
      163    11430    4                     GOTO NEXT_UNIT;
      164    11431    4   TRY_RUN_FILE:
      165    11432        /* Not an object check if run file */
      166    11433    4                     IF FIRST > 0 THEN GOTO CLOSE_FILE;
      167    11434    4                     VX_IO_USEPREV = 0/*@NO*/;
      168    11435    4                     VX_IO_SAVEPREV = 0/*@NO*/;
      169    11436    4                     VX_R_KEY_BUF.FORM0.COUNT = LENGTHC(VX_R_KEY_HEAD);
      170    11437    4                     VX_R_KEY_BUF.FORM0.CHARS = VX_R_KEY_HEAD;
      171    11438    4                     CALL VXI$READ( 0/*@OF*/, ADDR(VX_RU_HEAD_BUF),
      172    11439    4                             SIZEW(VX_RU_HEAD_BUF), 1/*@RF*/                )
      173    11440    4                             ALTRET( NEITHER );
      174    11441        /* Here => file is a run file */
      175    11442    4                     VX_FCURR$ -> VX$LST.TYPE = 1/*@RF*/; /* Set type appropriately */
      176    11443        /*E*  ERROR: VXO-E$FILEISRUN_VX-0
      177    11444              MESSAGE: %FN is a run file(not object); Definitions only will be input.
      178    11445              DESCRIPTION: See message.
      179    11446        */
      180    11447    4                     VX_FPT_ERRMSG.V.DCB# = DCBNUM( M$OF ); /* Set parm */
      181    11448                          %SCREAM( ERR#=E$FILEISRUN_VX, MID="'O'", LEVEL=@E$I_VX );
      182    11451        /* Now process */
      183    11452    4                     CALL VXO$RUN( 3/*@LF_RUN*/, %SOURCE_RLIB#, VX_PASS1_ALL_TYPE );
      184    11453    4                     GOTO CLOSE_FILE;
      185    11454    4   NEITHER:
      186    11455        /* Not an object file or a run file */
      187    11456        /*E*  ERROR: VXO-E$FILEISNEITHER_VX-0
      188    11457              MESSAGE: Head record for file %FN does not exist.
      189    11458              DESCRIPTION: See message.
      190    11459        */
      191    11460                          %ERRMSG( ERR#=E$FILEISNEITHER_VX, LEVEL=@E$F_VX, MID='O', DCB#=
PL6.E3A0      #001=VXO$PROC File=VXO$PROC.:E05TSI                                WED 07/30/97 08:29 Page:15   
             11460                              M$OF );
      192    11469        %EJECT;
PL6.E3A0      #001=VXO$PROC File=VXO$PROC.:E05TSI                                WED 07/30/97 08:29 Page:16   
      193    11470    4                   CASE( 1/*@OF_LIST*/ );       /* List of object units */
      194    11471    4   LIST_UNITS:
      195    11472    4                     START$ = VX_FCURR$ -> VX$LST.OBJECT_NAME$;
      196    11473    4                     VX_O_KEY_BUF.FORM0.COUNT = START$ -> T$C.COUNT;
             11473                              /* Set up the key */
      197    11474    4                     VX_O_KEY_BUF.FORM0.CHARS = START$ -> T$C.CHARS;
      198    11475    4                     VX_OU_HEAD = '0'B;
      199    11476    4                     CALL VXI$READ( 0/*@OF*/,
      200    11477    4                             ADDR(VX_OU_HEAD),
      201    11478    4                             SIZEW(VX_OU_HEAD),
      202    11479    4                             0/*@OF*/                ) ALTRET(OBJECT_ERROR);
      203    11480    4                     CALL VXO$OBJECT( VX_FCURR$, %SOURCE_OBJECT#, ADDR(
             11480                              VX_PASS1_ALL_TYPE));
      204    11481    4                     GOTO CLOSE_FILE;
      205    11482    4   OBJECT_ERROR:
      206    11483        /*E*  ERROR: VXO-E$CANTFINDOU_VX-0
      207    11484              MESSAGE: Cannot find object unit: %U1.
      208    11485              DESCRIPTION: Object unit specified in the tree record does not exist.
      209    11486        */
      210    11487    4                     VX_EFIELD1.COUNT = START$ -> T$C.COUNT - 1;
      211    11488    4                     VX_EFIELD1.CHARS = PINCRC( START$, 1 ) -> T$C.CHARS;
      212    11489    4                     VX_FPT_ERRMSG.FIELD1_   = VECTOR(VX_EFIELD1);
      213    11490                          %SCREAM( ERR#=E$CANTFINDOU_VX, MID="'O'", LEVEL=@E$F_VX, AUX=
             11490                              @E$OF_VX );
      214    11493    4                   END;
      215    11494        %EJECT;
PL6.E3A0      #001=VXO$PROC File=VXO$PROC.:E05TSI                                WED 07/30/97 08:29 Page:17   
      216    11495    3               CASE( 2/*@LF*/ );                /* Library file */
      217    11496    4                 DO CASE( VX_FCURR$ -> VX$LST.SUB_TYPE );
      218    11497    4                   CASE( 1/*@LF_ALIB*/ );
      219    11498    4                     CALL VXO$RUN( 1/*@LF_ALIB*/, %SOURCE_ALIB#, VX_PASS1_ALL_TYPE );
      220    11499    4                   CASE( 2/*@LF_SLIB*/ );
      221    11500    4                     CALL VXO$RUN( 2/*@LF_SLIB*/, %SOURCE_SLIB#, VX_PASS1_ALL_TYPE );
      222    11501        /**/
      223    11502    4                   END;
      224    11503    3               END;
      225    11504    2   CLOSE_FILE:
      226    11505    2             CALL VXF$CLOSE( VX_FCURR$, 0/*@OF*/, 2/*@SAVE*/ );
      227    11506    3             IF VX_FCURR$ -> VX$LST.LINK$ = ADDR(NIL) THEN DO;
      228    11507    3                 IF VX_CURR$ = VX_ROOT$
      229    11508    3                         AND
      230    11509    3                         VX_NODE_NUMBER > 0
      231    11510    3                         AND
      232    11511    3                         VX_O.NUM.BREF > 0
      233    11512    3                         AND
      234    11513    4                         NOT INCLUDED THEN DO;
      235    11514    4                     IF VX_OD.NUM.BREF AND VX_OD.SIN.SYSTEM
      236    11515    4                     THEN /* not INCLUDE :SYSLIB.:SYS */;
      237    11516    4                     ELSE
      238    11517    5                     DO;
      239    11518    5                         INCLUDED = '1'B/*@TRUE_B*/;
      240    11519    5                         CALL VXS$LST( WHERE$,
      241    11520    5                                 ADDR(SYSLIB_TEXTC),
      242    11521    5                                 0/*@OF*/,
      243    11522    5                                 0/*@OF_ALL*/,
      244    11523    5                                 ADDR(NIL),
      245    11524    5                                 0 );
      246    11525    5                         VX_FCURR$ -> VX$LST.LINK$ = WHERE$;
      247    11526    5                         VX_ROOT$ -> VX$NODE.TAIL$ = WHERE$;
      248    11527    5                         WHERE$ -> VX$LST.SUB_TYPE = 1/*@OF_LIST*/;
      249    11528    5                         L = ( LENGTHC(VX_XSO$BREF.CHARS)
      250    11529    5                                 +
      251    11530    5                                 LENGTHC(VX_O_KEY_HEAD)
      252    11531    5                                 +
PL6.E3A0      #001=VXO$PROC File=VXO$PROC.:E05TSI                                WED 07/30/97 08:29 Page:18   
      253    11532    5                                 4/*@CHAR_WORD*/) / 4/*@CHAR_WORD*/;
      254    11533                              %ALLOCATE( PTR$=NAME$, TYPE=@GDP, SIZE=L );
      255    11540    5                         NAME$ -> T$C.COUNT = LENGTHC( VX_XSO$BREF.CHARS )
      256    11541    5                                 +
      257    11542    5                                 LENGTHC( VX_O_KEY_HEAD );
      258    11543    5                         CALL CONCAT( NAME$ -> T$C.CHARS,
      259    11544    5                                 VX_O_KEY_HEAD,
      260    11545    5                                 VX_XSO$BREF.CHARS );
      261    11546    5                         WHERE$ -> VX$LST.OBJECT_NAME$ = NAME$;
      262    11547    5                        END;
      263    11548    4                    END;
             11548                  /* If VX_CURR$ = VX_ROOT$ and VX_NODE_NUMBER > 0 and ~included then do; */
      264    11549    3                END;       /* If VX_FCURR$ -> VX$LST.LINK$ = addr(nil) then do; */
      265    11550    2             VX_FCURR$ = VX_FCURR$ -> VX$LST.LINK$; /* Step to next */
      266    11551    2            END;
      267    11552    1         IF VX_BREF_DEFAULT_SET AND LOOU_COUNTER > 0 AND
      268    11553    1                 LOOU_COUNTER > VX_NUM_UNIQUE_BREFS THEN
      269    11554    1             VX_O.NUM.BREF = LOOU_COUNTER; /* Adjust BREF default */
      270    11555    1   END VXO$PROC;

PL6.E3A0      #001=VXO$PROC File=VXO$PROC.:E05TSI                                WED 07/30/97 08:29 Page:19   
--  Include file information  --

   F_DCB_D.:E05TOU  is referenced.
   VX_DCB_R.:E05TOU  cannot be made into a system file and is referenced.
   VX_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   VX_FIXED_R.:E05TOU  cannot be made into a system file and is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   VX_MACRO_C.:E05TOU  is referenced.
   VX_PERR_C.:E05TOU  is referenced.
   VX_SUBS_C.:E05TOU  is referenced.
   VX_SWITCH_C.:E05TOU  is referenced.
   B$OBJECT_C.:E05TOU  is referenced.
   VX_INC_C.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure VXO$PROC.

   Procedure VXO$PROC requires 535 words for executable code.
   Procedure VXO$PROC requires 30 words of local(AUTO) storage.

    No errors detected in file VXO$PROC.:E05TSI    .

PL6.E3A0      #001=VXO$PROC File=VXO$PROC.:E05TSI                                WED 07/30/97 08:29 Page:20   

 Object Unit name= VXO$PROC                                   File name= VXO$PROC.:E05TOU
 UTS= JUL 30 '97 08:29:02.48 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1  LblCom even  none    96    140  VX_CONST_DCB
    2   Data  even  none   100    144  VXO$PROC
    3   DCB   even  none     0      0  M$OF
    4  RoData even  UTS      6      6  VXO$PROC
    5   DCB   even  none     0      0  M$LOOU
    6   Proc  even  none   535   1027  VXO$PROC
    7  RoData even  none    51     63  VXO$PROC

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     6      0   yes            yes      Std        0  VXO$PROC

  ****  Data defs  ****

 Sect OctLoc  Name                           Sect OctLoc  Name
    4      0  SYSLIB_TEXTC
PL6.E3A0      #001=VXO$PROC File=VXO$PROC.:E05TSI                                WED 07/30/97 08:29 Page:21   

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       3 VXF$OPEN
         yes           Std       7 VXP$TREE
         yes           Std       3 VXA$GET
 yes     yes           Std       4 VXI$READ
 yes     yes           Std       5 VXP$PAR
         yes           Std       3 VXF$FREE
         yes           Std       4 VXE$ERROR
         yes           Std       3 VXO$RUN
         yes           Std       3 VXO$OBJECT
         yes           Std       3 VXE$ERRMSG
         yes           Std       3 VXF$CLOSE
 yes     yes           Std       6 VXS$LST
                       nStd      0 X66_AUTO_0
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET
PL6.E3A0      #001=VXO$PROC File=VXO$PROC.:E05TSI                                WED 07/30/97 08:29 Page:22   

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                                  VX_P_PCB_MAIN                         VX_FPT_ERRMSG
     VX_O_KEY_BUF                          VX_O_KEY_BUF_L                        VX_R_KEY_BUF
     VX_OK                                 VX_RU_HEAD_BUF                        VX_OU_HEAD
     VX_OVERLAY_START$                     VX_DO_PASS1                           VX_NODE_NUMBER
     VX_NUM_UNIQUE_BREFS                   VX_BREF_DEFAULT_SET                   VX_ROOT$
     VX_CURR$                              VX_FCURR$                             VX_ERRORS
     VX_M_FREE                             VX_M_ALL                              VX_M_BASE_PTR
     VX_O                                  VX_OD                                 VX_EFIELD1
     VX_IO_STATUS                          VX_IO_SIZEC                           VX_IO_USEPREV
     VX_IO_SAVEPREV                        VX_O_KEY_HEAD                         VX_O_KEY_TREE
     VX_R_KEY_HEAD                         VX_XSO$BREF                           VX_PASS1_ALL_TYPE
     VX_N_START_TREE                       M$OF                                  M$LOOU
     B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     NULLSID                               ISSID
PL6.E3A0      #001=VXO$PROC File=VXO$PROC.:E05TSI                                WED 07/30/97 08:29 Page:23   


        1        1        /*M* VXO$PROC - Traverses a node's file list. Called once/node during pass 1 */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* DMR,PLM=6,IND=4,CSU=2,EXM=0,ECU=2,MOC,DCI=4,CRT=4 DCI=4,CTI=8     */
        8        8        VXO$PROC: PROC;

      8  6 000000   000000 700200 xent  VXO$PROC     TSX0  ! X66_AUTO_0
         6 000001   000036 000000                    ZERO    30,0

        9        9        %INCLUDE VX_INC_C;
       10    10725        %VX$NODE;

             10737    1   /*******************************************************************************
             10738    1   *                                                                              *
             10739    1   *                          VX$NODE                                                *
             10740    1   *                                                                              *
             10741    1   *******************************************************************************/

             10757    1   DCL 1 VX$NODE      ALIGNED    BASED,
             10758    1         2 SON$ PTR /*(ADDR(NIL))*/, /* Son pointer                      */
             10759    1         2 BROTHER$ PTR /*(ADDR(NIL))*/, /* Brother pointer              */
             10760    1         2 FATHER$ PTR /*(ADDR(NIL))*/, /* Father pointer                */
             10761    1         2 PATH$ PTR /*(ADDR(NIL))*/, /* Path   pointer                  */
             10762    1         2 HEAD$       PTR /*(ADDR(NIL))*/, /* Head pointer to
             10763                              to list of file nodes for this node            */
             10764    1         2 TAIL$ PTR /*(ADDR(NIL))*/, /* Tail pointer to list            */
             10765    1         2 SHARED_LIB_HEAD$ PTR /*(ADDR(NIL))*/,
             10765                  /* Head pointer to shared library list */
             10766    1         2 LIB_HEAD$         PTR /*(ADDR(NIL))*/,
             10766                  /* Head pointer to list of shared libraries
             10767                                          which have been mapped to included libraries */
             10768    1         2 NUM          UBIN(36)  UNAL,    /* Node number                        */
             10769    1         2 DEPTH          UBIN(36)  UNAL,  /* Depth; ROOT=0*/
PL6.E3A0      #001=VXO$PROC File=VXO$PROC.:E05TSI                                WED 07/30/97 08:29 Page:24   
             10770    1         2 ADDR_START_A(0:2/*@ROS*/) SBIN WORD /*(0*3)*/, /* Array            */
             10771    1         2 ADDR_START REDEF  ADDR_START_A,
             10772    1           3 RDATA       SBIN WORD,   /* First address for this node in data     */
             10773    1           3 RPROC       SBIN WORD,   /* First address for this node in proc     */
             10774    1           3 ROS       SBIN WORD,          /* Last address for program in ros    */
             10775    1         2 ADDR_STOP_A(0:2/*@ROS*/) SBIN WORD /*(-1*3)*/, /* Array            */
             10776    1         2 ADDR_STOP  REDEF  ADDR_STOP_A,
             10777    1           3 RDATA       SBIN WORD,        /* Last address for this node in data */
             10778    1           3 RPROC       SBIN WORD,        /* Last address for this node in proc */
             10779    1           3 ROS       SBIN WORD,          /* Last address for program in ros    */
             10780    1         2 START_PAGE#_A(0:2/*@ROS*/) SBIN WORD /*(0*3)*/, /* Array           */
             10781    1         2 START_PAGE# REDEF START_PAGE#_A,
             10782    1           3 RDATA       SBIN WORD,   /* First page    for this node in data     */
             10783    1           3 RPROC       SBIN WORD,   /* First page    for this node in proc     */
             10784    1           3 ROS       SBIN WORD,          /* First page   for program in ros    */
             10785    1         2 STOP_PAGE#_A(0:2/*@ROS*/) SBIN WORD /*(-1*3)*/, /* Array*/
             10786    1         2 STOP_PAGE#  REDEF STOP_PAGE#_A,
             10787    1           3 RDATA       SBIN WORD,   /* Last  page    for this node in data     */
             10788    1           3 RPROC       SBIN WORD,   /* Last  page    for this node in proc     */
             10789    1           3 ROS       SBIN WORD,          /* Last  page   for program in ros    */
             10790    1         2 START_SC_ALL$ PTR /*(ADDR(NIL))*/,
             10790                  /* Starting pointer for common sections for this node */
             10791    1         2 STOP_SC_ALL$ PTR /*(ADDR(NIL))*/,
             10791                  /* Stopping pointer for common sections for this node */
             10792    1         2 L_START,
             10793    1           3 SN$ PTR /*(ADDR(NIL))*/, /* Segment definition names        */
             10794    1           3 DN$ PTR /*(ADDR(NIL))*/, /* Def names                       */
             10795    1           3 RN$ PTR /*(ADDR(NIL))*/, /* Ref names                       */
             10796    1           3 SC$ PTR /*(ADDR(NIL))*/, /* Sections                        */
             10797    1           3 ED$ PTR /*(ADDR(NIL))*/, /* Entry defs*/
             10798    1           3 ER$ PTR /*(ADDR(NIL))*/, /* Entry refs*/
             10799    1           3 DD$ PTR /*(ADDR(NIL))*/, /* Data defs                       */
             10800    1           3 DR$ PTR /*(ADDR(NIL))*/, /* Data refs                       */
             10801    1           3 SD$ PTR /*(ADDR(NIL))*/, /* Seg defs                        */
             10802    1           3 SR$ PTR /*(ADDR(NIL))*/, /* Seg refs                        */
             10803    1         2 L_START_A$(0:9)     REDEF L_START PTR,
             10804    1         2 L_STOP,
PL6.E3A0      #001=VXO$PROC File=VXO$PROC.:E05TSI                                WED 07/30/97 08:29 Page:25   
             10805    1           3 SN$ PTR /*(ADDR(NIL))*/, /* Segment definition names        */
             10806    1           3 DN$ PTR /*(ADDR(NIL))*/, /* Def names                       */
             10807    1           3 RN$ PTR /*(ADDR(NIL))*/, /* Ref names                       */
             10808    1           3 SC$ PTR /*(ADDR(NIL))*/, /* Sections                        */
             10809    1           3 ED$ PTR /*(ADDR(NIL))*/, /* Entry defs*/
             10810    1           3 ER$ PTR /*(ADDR(NIL))*/, /* Entry refs*/
             10811    1           3 DD$ PTR /*(ADDR(NIL))*/, /* Data defs                       */
             10812    1           3 DR$ PTR /*(ADDR(NIL))*/, /* Data refs                       */
             10813    1           3 SD$ PTR /*(ADDR(NIL))*/, /* Seg defs                        */
             10814    1           3 SR$ PTR /*(ADDR(NIL))*/, /* Seg refs                        */
             10815    1         2 L_STOP_A$(0:9) REDEF   L_STOP    PTR,
             10816    1         2 L_SIZE,
             10817    1           3 SN      UBIN /*(0)*/, /* Segment definition names           */
             10818    1           3 DN      UBIN /*(0)*/, /* Def names                          */
             10819    1           3 RN      UBIN /*(0)*/, /* Ref names                          */
             10820    1           3 SC      UBIN /*(0)*/, /* Sections                           */
             10821    1           3 ED      UBIN /*(0)*/, /* Entry defs*/
             10822    1           3 ER      UBIN /*(0)*/, /* Entry refs*/
             10823    1           3 DD      UBIN /*(0)*/, /* Data defs                          */
             10824    1           3 DR      UBIN /*(0)*/, /* Data refs                          */
             10825    1           3 SD      UBIN /*(0)*/, /* Seg defs                           */
             10826    1           3 SR      UBIN /*(0)*/, /* Seg refs                           */
             10827    1         2 L_SIZE_A(0:9)  REDEF   L_SIZE    UBIN,
             10828    1         2 L_PREV_SIZE,
             10829    1           3 SN      UBIN /*(0)*/, /* Segment definition names           */
             10830    1           3 DN      UBIN /*(0)*/, /* Def names                          */
             10831    1           3 RN      UBIN /*(0)*/, /* Ref names                          */
             10832    1           3 SC      UBIN /*(0)*/, /* Sections                           */
             10833    1           3 ED      UBIN /*(0)*/, /* Entry defs*/
             10834    1           3 ER      UBIN /*(0)*/, /* Entry refs*/
             10835    1           3 DD      UBIN /*(0)*/, /* Data defs                          */
             10836    1           3 DR      UBIN /*(0)*/, /* Data refs                          */
             10837    1           3 SD      UBIN /*(0)*/, /* Seg defs                           */
             10838    1           3 SR      UBIN /*(0)*/, /* Seg refs                           */
             10839    1         2 L_PREV_SIZE_A(0:9)  REDEF   L_PREV_SIZE    UBIN,
             10840    1         2 BIT_MAP                ALIGNED,
             10841    1           3 DATA                  ALIGNED,
PL6.E3A0      #001=VXO$PROC File=VXO$PROC.:E05TSI                                WED 07/30/97 08:29 Page:26   
             10842    1             4 BITS(0:255)          BIT(1)    UNAL /*('0'B*256)*/,
             10843    1           3 RPROC                 ALIGNED,
             10844    1             4 BITS(0:255)          BIT(1)    UNAL /*('0'B*256)*/,
             10845    1           3 ROS                   ALIGNED,
             10846    1             4 BITS(0:255)          BIT(1)    UNAL /*('0'B*256)*/,
             10847    1         2 L_SC_START,
             10848    1           3 SC_BLK_COM$ PTR /*(ADDR(NIL))*/, /* Blank common            */
             10849    1           3 SC_ROOT_LBL_COM$ PTR /*(ADDR(NIL))*/, /* Root labelled common */
             10850    1           3 SC_LBL_COM$ PTR /*(ADDR(NIL))*/, /* Labelled common         */
             10851    1           3 SC_DCB$ PTR /*(ADDR(NIL))*/, /* Dcbs                        */
             10852    1         2 L_SC_START_A$(0:3)  REDEF L_SC_START PTR,
             10853    1         2 L_SC_STOP,
             10854    1           3 SC_BLK_COM$ PTR /*(ADDR(NIL))*/, /* Blank common            */
             10855    1           3 SC_ROOT_LBL_COM$ PTR /*(ADDR(NIL))*/, /* Root labelled common */
             10856    1           3 SC_LBL_COM$ PTR /*(ADDR(NIL))*/, /* Labelled common         */
             10857    1           3 SC_DCB$ PTR /*(ADDR(NIL))*/, /* Dcbs                        */
             10858    1         2 L_SC_STOP_A$(0:3)   REDEF L_SC_STOP  PTR,
             10859    1         2 PROMOTE_HEAD,
             10860    1           3 BLK_COM$              PTR /*(ADDR(NIL))*/,
             10861    1           3 LBL_COM$              PTR /*(ADDR(NIL))*/,
             10862    1         2 PROMOTE_HEAD_A$(0:1) REDEF PROMOTE_HEAD     PTR,
             10863    1         2 PROMOTE_TAIL,
             10864    1           3 BLK_COM$              PTR /*(ADDR(NIL))*/,
             10865    1           3 LBL_COM$              PTR /*(ADDR(NIL))*/,
             10866    1         2 PROMOTE_TAIL_A$(0:1) REDEF PROMOTE_TAIL     PTR,
             10867    1         2 HAVE_ASL          BIT(1)    UNAL /*('0'B)*/,
             10868    1         2 ALL_BLK_COM          BIT(1)    UNAL /*('0'B)*/,
             10869    1         2 USE_NODE          BIT(1)    UNAL /*('0'B)*/,
             10870    1         2 *                 BIT(33)   UNAL /*('0'B)*/,
             10871    1         2 BLANK_COMMON$     PTR       ALIGNED /*(ADDR(NIL))*/;

       11    10875        %VX$LST;

             10888    1   /*******************************************************************************
             10889    1   *                                                                              *
             10890    1   *                          VX$LST                                                 *
             10891    1   *                                                                              *
PL6.E3A0      #001=VXO$PROC File=VXO$PROC.:E05TSI                                WED 07/30/97 08:29 Page:27   
             10892    1   *******************************************************************************/

             10897    1   DCL 1 VX$LST                          ALIGNED BASED,
             10898    1         2 LINK$        PTR,               /* Link to next item                  */
             10899    1         2 TYPE         UBIN( 18) UNAL,    /* Type                               */
             10900    1         2 SUB_TYPE     UBIN( 18) UNAL,    /* Sub-type                           */
             10901    1         2 OBJECT_NAME$ PTR,               /* Pointer to object unit name        */
             10902    1         2 PRIOR$ REDEF OBJECT_NAME$ PTR,  /* Pointer to prior element in list   */
             10903    1         2 SC_HEAD$     PTR,               /* Head pointer to section link list  */
             10904    1         2 LIBSRCH$ REDEF SC_HEAD$ PTR,    /* Pointer to account list for library*/
             10905    1         2 SC_TAIL$     PTR,               /* Tail pointer to section link list  */
             10906    1         2 LIB REDEF SC_TAIL$,             /* Used only by UNSAT library files   */
             10907    1           3 USED UBIN HALF UNAL,          /* 1 => library file used, 0=>not used*/
             10908    1           3 NEEDED UBIN HALF UNAL,   /* 1 => library file needed, 0=>not needed*/
             10909    1         2 P,
             10910    1           3 NAME_       ALIGNED,
             10911    1             4 BOUND      UBIN(20)  UNAL,
             10912    1             4 FLAGSV     UBIN(11)  UNAL,
             10913    1             4 *          BIT(5)    UNAL,
             10914    1             4 NAME$      PTR,
             10915    1           3 ACCT_       ALIGNED,
             10916    1             4 BOUND      UBIN(20)  UNAL,
             10917    1             4 FLAGSV     UBIN(11)  UNAL,
             10918    1             4 *          BIT(5)    UNAL,
             10919    1             4 ACCT$      PTR,
             10920    1           3 PASS_       ALIGNED,
             10921    1             4 BOUND      UBIN(20)  UNAL,
             10922    1             4 FLAGSV     UBIN(11)  UNAL,
             10923    1             4 *          BIT(5)    UNAL,
             10924    1             4 PASS$      PTR,
             10925    1           3 SN_         ALIGNED,
             10926    1             4 BOUND      UBIN(20)  UNAL,
             10927    1             4 FLAGSV     UBIN(11)  UNAL,
             10928    1             4 *          BIT(5)    UNAL,
             10929    1             4 SN$        PTR,
             10930    1           3 WSN_        ALIGNED,
             10931    1             4 BOUND      UBIN(20)  UNAL,
PL6.E3A0      #001=VXO$PROC File=VXO$PROC.:E05TSI                                WED 07/30/97 08:29 Page:28   
             10932    1             4 FLAGSV     UBIN(11)  UNAL,
             10933    1             4 *          BIT(5)    UNAL,
             10934    1             4 WSN$       PTR,
             10935    1           3 B           ALIGNED,
             10936    1             4 RES        BIT(1)    UNAL,
             10937    1             4 ASN        BIT(1)    UNAL,
             10938    1             4 ACCT       BIT(1)    UNAL,
             10939    1             4 *          BIT(33)   UNAL,
             10940    1           3 RES         CHAR(4)   ALIGNED,
             10941    1           3 ASN         UBIN(36)  ALIGNED;
       12    10944        %T$C;

             10956    1   /*******************************************************************************
             10957    1   *                                                                              *
             10958    1   *                          T$C                                                 *
             10959    1   *                                                                              *
             10960    1   *******************************************************************************/

             10965    1   DCL 1 T$C           BASED     ALIGNED,  /* Text count                         */
             10966    1         2 COUNT        UBIN( 9) UNAL,
             10967    1         2 CHARS        CHAR( T$C.COUNT )   UNAL;
             10968    1   DCL 1 T$C_UNAL      BASED     UNAL,     /* Text count                         */
             10969    1         2 COUNT        UBIN( 9) UNAL,
             10970    1         2 CHARS        CHAR( T$C_UNAL.COUNT ) UNAL;
       13    10973        %SET LISTMAC='1'B;
       14    10974        %SET LISTSUB='1'B;
       15    10975        %BANNER(ARG=SUBS);
             10976        %LSET LISTDIR='0'B;

             10983    1   /*******************************************************************************
             10984    1   *                                                                              *
             10985    1   *                          SUBS                                                 *
             10986    1   *                                                                              *
             10987    1   *******************************************************************************/

       16    10991        %SUB_LINKFLAGS;
             10992        %EQU SOURCE_OBJECT#=0 ;
PL6.E3A0      #001=VXO$PROC File=VXO$PROC.:E05TSI                                WED 07/30/97 08:29 Page:29   
             10993        %EQU SOURCE_SLIB#=1 ;
             10994        %EQU SOURCE_ALIB#=2 ;
             10995        %EQU SOURCE_ULIB#=3 ;
             10996        %EQU SOURCE_RLIB#=4 ;
             10997        %EQU SOURCE_REMOVED#=5 ;
             10998        %EQU SOURCE_LINKER#=6 ;
       17    11000        %B;
             11001        %LSET LISTDIR='0'B;

             11008    1   /*******************************************************************************
             11009    1   *                                                                              *
             11010    1   *                          BIT                                                 *
             11011    1   *                                                                              *
             11012    1   *******************************************************************************/

       18    11016    1   DCL INCLUDED        BIT(1)    ALIGNED   STATIC    INIT('0'B/*@FALSE_B*/);
       19    11017        %E;
             11018        %LSET LISTDIR='0'B;

             11025    1   /*******************************************************************************
             11026    1   *                                                                              *
             11027    1   *                          ENTRY                                                 *
             11028    1   *                                                                              *
             11029    1   *******************************************************************************/

       20    11033    1   DCL VXO$OBJECT           ENTRY(3);
       21    11034    1   DCL VXO$RUN              ENTRY(3);
       22    11035    1   DCL VXP$PAR         ENTRY(5)  ALTRET;
       23    11036    1   DCL VXP$TREE             ENTRY(7);
       24    11037        %ENTRIES;
             11038    1   DCL VXE$ERROR       ENTRY(4);
             11039    1   DCL VXE$ERR         ENTRY(3);
             11040    1   DCL VXE$MERC        ENTRY;
             11041    1   DCL VXE$ERRMSG      ENTRY(3);
             11042    1   DCL VXR$READ        ENTRY( 3 );
             11043    1   DCL VXW$WRITE       ENTRY( 3 );
             11044    1   DCL VXW$WRITE_DO    ENTRY( 2 );
PL6.E3A0      #001=VXO$PROC File=VXO$PROC.:E05TSI                                WED 07/30/97 08:29 Page:30   
             11045    1   DCL VXD$B2C         ENTRY( 5 );
             11046    1   DCL VXD$C2B         ENTRY( 3 );
             11047    1   DCL VXA$GET         ENTRY( 3 );
             11048    1   DCL VXF$FREE        ENTRY( 3 );
             11049    1   DCL VXQ$SORT        ENTRY( 7 );
             11050    1   DCL VXY$YESNO       ENTRY( 1 );
       25    11052        %ENTRIES_IO;
             11053    1   DCL VXF$OPEN        ENTRY(3) ALTRET;
             11054    1   DCL VXF$CLOSE       ENTRY(3);
             11055    1   DCL VXU$PREAD       ENTRY(12);
             11056    1   DCL VXK$KEY         ENTRY(4);
             11057    1   DCL VXI$READ        ENTRY(4)  ALTRET;
             11058    1   DCL VXI$WRITE       ENTRY(4)  ALTRET;
       26    11060    1   DCL VXS$LST         ENTRY(6)  ALTRET;
       27    11061        %PTR;
             11062        %LSET LISTDIR='0'B;

             11069    1   /*******************************************************************************
             11070    1   *                                                                              *
             11071    1   *                          PTR                                                 *
             11072    1   *                                                                              *
             11073    1   *******************************************************************************/

       28    11077    1   DCL START$          PTR  ALIGNED   AUTO;
       29    11078    1   DCL PWORK$          PTR  ALIGNED   AUTO;
       30    11079    1   DCL HEAD$           PTR  ALIGNED   AUTO;
       31    11080    1   DCL TAIL$           PTR  ALIGNED   AUTO;
       32    11081    1   DCL WHERE$          PTR  ALIGNED   AUTO;
       33    11082    1   DCL NAME$           PTR  ALIGNED   AUTO;
       34    11083    1   DCL DUMMY$ PTR ;
       35    11084        %U;
             11085        %LSET LISTDIR='0'B;

             11092    1   /*******************************************************************************
             11093    1   *                                                                              *
             11094    1   *                          UBIN                                                 *
             11095    1   *                                                                              *
PL6.E3A0      #001=VXO$PROC File=VXO$PROC.:E05TSI                                WED 07/30/97 08:29 Page:31   
             11096    1   *******************************************************************************/

       36    11100        %INDEX;
             11101    1   DCL I          UBIN(36) ALIGNED AUTO;
             11102    1   DCL SI REDEF I SBIN WORD ALIGNED;
             11103    1   DCL J          UBIN(36) ALIGNED AUTO;
             11104    1   DCL SJ REDEF J SBIN WORD ALIGNED;
             11105    1   DCL K          UBIN(36) ALIGNED AUTO;
             11106    1   DCL SK REDEF K SBIN WORD ALIGNED;
             11107    1   DCL L          UBIN(36) ALIGNED AUTO;
             11108    1   DCL SL REDEF L    SBIN WORD ALIGNED;
       37    11110    1   DCL FIRST           UBIN(36) ALIGNED AUTO;
       38    11111    1   DCL TSIZE           UBIN(36)  ALIGNED AUTO;
       39    11112    1   DCL SIZE            UBIN(36)  ALIGNED AUTO;
       40    11113    1   DCL NCHARS          UBIN(36)  ALIGNED AUTO;
       41    11114    1   DCL PWORK_SIZE      UBIN(36)  ALIGNED AUTO;
       42    11115        /**/
       43    11116        /**/
       44    11117        /**/
       45    11118    1   DCL VX_N_START_TREE UBIN(36)  ALIGNED   SYMREF;
       46    11119    1   DCL M$OF            DCB;
       47    11120        /**/
       48    11121        /**/
       49    11122        /**/
       50    11123    1   DCL 1 SYSLIB_TEXTC ALIGNED CONSTANT SYMDEF,
       51    11124    1         2 COUNT UBIN(9) UNAL INIT(16),    /* MAKE THE ACCOUNT PATCHABLE */
       52    11125    1         2 CHARS CHAR(16) UNAL INIT(':SYSLIB.:SYS');
       53    11126        /**/
       54    11127        %PLIST;
       55    11128        %PARSE$OUT( NAME=O$B, STCLASS="BASED");
       56    11173              % FPT_OPEN (FPTN=OPEN_LOOU,       /* Open List Overlaid Object Units */
       57    11174                      DCB = M$LOOU,
       58    11175                      DISP=SCRATCH,
       59    11176                      ORG=INDEXED,KEYX=40,KEYL=31,
       60    11177                      ACS=DIRECT,
       61    11178                      ASN = FILE,
       62    11179                      FUN = CREATE);
PL6.E3A0      #001=VXO$PROC File=VXO$PROC.:E05TSI                                WED 07/30/97 08:29 Page:32   
       63    11288              % FPT_WRITE (FPTN = WR_LOOU,BUF=LOOU_BUF,DCB=M$LOOU,KEY=LOOU_KEY);
       64    11319    1   DCL M$LOOU DCB;
       65    11320    1   DCL LOOU_BUF CHAR (71) STATIC INIT (' ');
       66    11321    1   DCL 1 LOOU_BUF_A REDEF LOOU_BUF,
       67    11322    1         2 OBJECT_FILE CHAR (40),
       68    11323    1         2 OU_NAME CHAR (31);
       69    11324    1   DCL LOOU_KEY CHAR(31) STATIC INIT(' ');
       70    11325    1   DCL OPEN_LOOU_FLAG BIT (1) STATIC INIT ('0'B);
       71    11326    1   DCL LOOU_COUNTER UBIN STATIC INIT (0);
       72    11327    1   DCL OU_ACCT CHAR (8);
       73    11328    1   DCL OU_ACCT_B CHAR (8) BASED;
       74    11329    1   DCL DOT_BLK CHAR (1);
       75    11330        %EJECT;
PL6.E3A0      #001=VXO$PROC File=VXO$PROC.:E05TSI                                WED 07/30/97 08:29 Page:33   
       76    11331    1         VX_FCURR$ = VX_CURR$ -> VX$NODE.HEAD$;

  11331  6 000002   000000 470400 xsym               LDP0    VX_CURR$
         6 000003   000004 236100                    LDQ     4,,PR0
         6 000004   000000 756000 xsym               STQ     VX_FCURR$

       77    11332    2         DO WHILE ( VX_FCURR$ ~= ADDR(NIL) );

  11332  6 000005   001014 710000 6                  TRA     s:11551

       78    11333    2             CALL VXF$OPEN( VX_FCURR$, 0/*@OF*/ );

  11333  6 000006   000000 630400 7                  EPPR0   0
         6 000007   000020 631400 xsym               EPPR1   B_VECTNIL+16
         6 000010   000000 701000 xent               TSX1    VXF$OPEN
         6 000011   000000 011000                    NOP     0

       79    11334    2             IF VX_DO_PASS1 = 0/*@NO*/ THEN GOTO CLOSE_FILE;

  11334  6 000012   000000 235000 xsym               LDA     VX_DO_PASS1
         6 000013   000651 600000 6                  TZE     CLOSE_FILE

       80    11335    3             DO CASE( VX_FCURR$ -> VX$LST.TYPE );

  11335  6 000014   000000 470400 xsym               LDP0    VX_FCURR$
         6 000015   000001 220100                    LDX0    1,,PR0
         6 000016   000003 100003                    CMPX0   3,DU
         6 000017   000021 602010 6                  TNC     s:11335+5,X0
         6 000020   000651 710000 6                  TRA     CLOSE_FILE
         6 000021   000024 710000 6                  TRA     s:11337
         6 000022   000651 710000 6                  TRA     CLOSE_FILE
         6 000023   000631 710000 6                  TRA     s:11496

       81    11336    3               CASE( 0/*@OF*/ );                /* Object file */

       82    11337    4                 DO CASE( VX_FCURR$ -> VX$LST.SUB_TYPE );

PL6.E3A0      #001=VXO$PROC File=VXO$PROC.:E05TSI                                WED 07/30/97 08:29 Page:34   
  11337  6 000024   000001 721100                    LXL1    1,,PR0
         6 000025   000002 101003                    CMPX1   2,DU
         6 000026   000030 602011 6                  TNC     s:11337+4,X1
         6 000027   000651 710000 6                  TRA     CLOSE_FILE
         6 000030   000032 710000 6                  TRA     s:11339
         6 000031   000537 710000 6                  TRA     LIST_UNITS

       83    11338    4                   CASE( 0/*@OF_ALL*/ );        /* All object units */

       84    11339    4                     IF VX_CURR$ -> VX$NODE.SON$ ~= ADDR(NIL) THEN GOTO RESUME;

  11339  6 000032   000000 471400 xsym               LDP1    VX_CURR$
         6 000033   100000 236100                    LDQ     0,,PR1
         6 000034   000001 116000 xsym               CMPQ    B_VECTNIL+1
         6 000035   000262 601000 6                  TNZ     RESUME

       85    11340        /* Now check if a tree record exists */
       86    11341    4                     VX_O_KEY_BUF.FORM0.COUNT = LENGTHC( VX_O_KEY_TREE );

  11341  6 000036   006000 236003                    LDQ     3072,DU
         6 000037   000000 552040 xsym               STBQ    VX_O_KEY_BUF,'40'O

       87    11342    4                     VX_O_KEY_BUF.FORM0.CHARS = VX_O_KEY_TREE;

  11342  6 000040   040000 100400                    MLR     fill='040'O
         6 000041   000000 000006 xsym               ADSC9   VX_O_KEY_TREE            cn=0,n=6
         6 000042   000000 201000 xsym               ADSC9   VX_O_KEY_BUF             cn=1,n=512

       88    11343    4                     TSIZE = 0;            /* Init space request */

  11343  6 000043   200017 450100                    STZ     TSIZE,,AUTO

       89    11344    4                     SIZE = 40;            /* Initial space request is 40 words */

  11344  6 000044   000050 235007                    LDA     40,DL
         6 000045   200020 755100                    STA     SIZE,,AUTO

PL6.E3A0      #001=VXO$PROC File=VXO$PROC.:E05TSI                                WED 07/30/97 08:29 Page:35   
       90    11345                          %ALLOCATE( PTR$=START$, TYPE=@DS3, SIZE=SIZE ) ;

  11346  6 000046   000003 236000 xsym               LDQ     VX_M_ALL+3
         6 000047   000003 136000 xsym               SBLQ    VX_M_FREE+3
         6 000050   000063 604000 6                  TMI     s:11350
         6 000051   200020 116100                    CMPQ    SIZE,,AUTO
         6 000052   000063 602000 6                  TNC     s:11350

  11347  6 000053   000003 236000 xsym               LDQ     VX_M_FREE+3
         6 000054   000022 736000                    QLS     18
         6 000055   000003 036000 xsym               ADLQ    VX_M_BASE_PTR+3
         6 000056   200003 756100                    STQ     START$,,AUTO

  11348  6 000057   000003 236000 xsym               LDQ     VX_M_FREE+3
         6 000060   200020 036100                    ADLQ    SIZE,,AUTO
         6 000061   000003 756000 xsym               STQ     VX_M_FREE+3

  11349  6 000062   000075 710000 6                  TRA     TREE_AGAIN

  11350  6 000063   200020 633500                    EPPR3   SIZE,,AUTO
         6 000064   200030 453500                    STP3    DOT_BLK+3,,AUTO
         6 000065   000002 236000 7                  LDQ     2
         6 000066   200027 756100                    STQ     DOT_BLK+2,,AUTO
         6 000067   200003 634500                    EPPR4   START$,,AUTO
         6 000070   200026 454500                    STP4    DOT_BLK+1,,AUTO
         6 000071   200026 630500                    EPPR0   DOT_BLK+1,,AUTO
         6 000072   000021 631400 xsym               EPPR1   B_VECTNIL+17
         6 000073   000000 701000 xent               TSX1    VXA$GET
         6 000074   000000 011000                    NOP     0

       91    11352    4   TREE_AGAIN:
       92    11353    4                     TSIZE = TSIZE + SIZE; /* Accumulate total space */

  11353  6 000075   200017 236100       TREE_AGAIN   LDQ     TSIZE,,AUTO
         6 000076   200020 036100                    ADLQ    SIZE,,AUTO
         6 000077   200017 756100                    STQ     TSIZE,,AUTO

PL6.E3A0      #001=VXO$PROC File=VXO$PROC.:E05TSI                                WED 07/30/97 08:29 Page:36   
       93    11354    4                     VX_IO_SAVEPREV = 1;   /* For VXI$READ error processing */

  11354  6 000100   000001 235007                    LDA     1,DL
         6 000101   000000 755000 xsym               STA     VX_IO_SAVEPREV

       94    11355    4                     CALL VXI$READ( 0/*@OF*/, START$, TSIZE, 0/*@OF*/                )
             11355                              ALTRET(TREE_ERR);

  11355  6 000102   000001 236000 7                  LDQ     1
         6 000103   200031 756100                    STQ     DOT_BLK+4,,AUTO
         6 000104   200017 630500                    EPPR0   TSIZE,,AUTO
         6 000105   200030 450500                    STP0    DOT_BLK+3,,AUTO
         6 000106   200003 631500                    EPPR1   START$,,AUTO
         6 000107   200027 451500                    STP1    DOT_BLK+2,,AUTO
         6 000110   200026 756100                    STQ     DOT_BLK+1,,AUTO
         6 000111   200026 630500                    EPPR0   DOT_BLK+1,,AUTO
         6 000112   000022 631400 xsym               EPPR1   B_VECTNIL+18
         6 000113   000000 701000 xent               TSX1    VXI$READ
         6 000114   000212 702000 6                  TSX2    TREE_ERR

       95    11356        /* Here => tree record was read */
       96    11357    4                     NCHARS = VX_IO_SIZEC; /* Set size in characters */

  11357  6 000115   000000 235000 xsym               LDA     VX_IO_SIZEC
         6 000116   200021 755100                    STA     NCHARS,,AUTO

       97    11358    4                     CALL VXP$PAR( -1, ADDR(VX_N_START_TREE), START$, NCHARS,
             11358                              PWORK_SIZE );

  11358  6 000117   000003 236000 7                  LDQ     3
         6 000120   200026 756100                    STQ     DOT_BLK+1,,AUTO
         6 000121   200022 630500                    EPPR0   PWORK_SIZE,,AUTO
         6 000122   200033 450500                    STP0    DOT_BLK+6,,AUTO
         6 000123   200021 631500                    EPPR1   NCHARS,,AUTO
         6 000124   200032 451500                    STP1    DOT_BLK+5,,AUTO
         6 000125   200003 633500                    EPPR3   START$,,AUTO
         6 000126   200031 453500                    STP3    DOT_BLK+4,,AUTO
PL6.E3A0      #001=VXO$PROC File=VXO$PROC.:E05TSI                                WED 07/30/97 08:29 Page:37   
         6 000127   200026 634500                    EPPR4   DOT_BLK+1,,AUTO
         6 000130   200030 454500                    STP4    DOT_BLK+3,,AUTO
         6 000131   000004 236000 7                  LDQ     4
         6 000132   200027 756100                    STQ     DOT_BLK+2,,AUTO
         6 000133   200027 630500                    EPPR0   DOT_BLK+2,,AUTO
         6 000134   000023 631400 xsym               EPPR1   B_VECTNIL+19
         6 000135   000000 701000 xent               TSX1    VXP$PAR
         6 000136   000000 011000                    NOP     0

       98    11359    4                     CALL VXP$TREE( HEAD$,

  11359  6 000137   000003 236000 xsym               LDQ     VX_P_PCB_MAIN+3
         6 000140   000003 036003                    ADLQ    3,DU
         6 000141   200034 756100                    STQ     DOT_BLK+7,,AUTO
         6 000142   000006 237000 7                  LDAQ    6
         6 000143   200032 757100                    STAQ    DOT_BLK+5,,AUTO
         6 000144   000010 237000 7                  LDAQ    8
         6 000145   200030 757100                    STAQ    DOT_BLK+3,,AUTO
         6 000146   200006 630500                    EPPR0   TAIL$,,AUTO
         6 000147   200027 450500                    STP0    DOT_BLK+2,,AUTO
         6 000150   200005 631500                    EPPR1   HEAD$,,AUTO
         6 000151   200026 451500                    STP1    DOT_BLK+1,,AUTO
         6 000152   200026 630500                    EPPR0   DOT_BLK+1,,AUTO
         6 000153   000025 631400 xsym               EPPR1   B_VECTNIL+21
         6 000154   000000 701000 xent               TSX1    VXP$TREE
         6 000155   000000 011000                    NOP     0

       99    11360    4                             TAIL$,
      100    11361    4                             0/*@OF*/,
      101    11362    4                             1/*@OF_LIST*/,
      102    11363    4                             VX_CURR$,
      103    11364    4                             VX_FCURR$,
      104    11365    4                             VX_P_PCB_MAIN.OUT$ -> O$B.SUBLK$(0));
      105    11366                                            /* Go do semantics and build structures */
      106    11367    4                     TAIL$ -> VX$LST.LINK$ = VX_FCURR$ -> VX$LST.LINK$;
             11367                              /* Chain tail(root) to next */

PL6.E3A0      #001=VXO$PROC File=VXO$PROC.:E05TSI                                WED 07/30/97 08:29 Page:38   
  11367  6 000156   000000 470400 xsym               LDP0    VX_FCURR$
         6 000157   000000 236100                    LDQ     0,,PR0
         6 000160   200006 471500                    LDP1    TAIL$,,AUTO
         6 000161   100000 756100                    STQ     0,,PR1

      107    11368    4                     VX_FCURR$ -> VX$LST.OBJECT_NAME$ = HEAD$ -> VX$LST.OBJECT_NAME$;

  11368  6 000162   200005 470500                    LDP0    HEAD$,,AUTO
         6 000163   000002 236100                    LDQ     2,,PR0
         6 000164   000000 471400 xsym               LDP1    VX_FCURR$
         6 000165   100002 756100                    STQ     2,,PR1

      108    11369                                    /* Get first key pointer and pipe it up to major */
      109    11370    4                     VX_FCURR$ -> VX$LST.LINK$ = HEAD$ -> VX$LST.LINK$;

  11370  6 000166   200005 470500                    LDP0    HEAD$,,AUTO
         6 000167   000000 236100                    LDQ     0,,PR0
         6 000170   100000 756100                    STQ     0,,PR1

      110    11371                                /* And chain current to second; discarding the first */
      111    11372    4                     VX_FCURR$ -> VX$LST.SUB_TYPE = 1/*@OF_LIST*/;
             11372                              /* And set SUB_TYPE of major */

  11372  6 000171   000001 220003                    LDX0    1,DU
         6 000172   000000 470400 xsym               LDP0    VX_FCURR$
         6 000173   000001 440100                    SXL0    1,,PR0

      112    11373    4                     TSIZE = TSIZE + PWORK_SIZE;

  11373  6 000174   200017 236100                    LDQ     TSIZE,,AUTO
         6 000175   200022 036100                    ADLQ    PWORK_SIZE,,AUTO
         6 000176   200017 756100                    STQ     TSIZE,,AUTO

      113    11374    4                     CALL VXF$FREE( 3/*@DS3*/, TSIZE, 1 );

  11374  6 000177   000011 236000 7                  LDQ     9
         6 000200   200030 756100                    STQ     DOT_BLK+3,,AUTO
PL6.E3A0      #001=VXO$PROC File=VXO$PROC.:E05TSI                                WED 07/30/97 08:29 Page:39   
         6 000201   200017 631500                    EPPR1   TSIZE,,AUTO
         6 000202   200027 451500                    STP1    DOT_BLK+2,,AUTO
         6 000203   000002 236000 7                  LDQ     2
         6 000204   200026 756100                    STQ     DOT_BLK+1,,AUTO
         6 000205   200026 630500                    EPPR0   DOT_BLK+1,,AUTO
         6 000206   000021 631400 xsym               EPPR1   B_VECTNIL+17
         6 000207   000000 701000 xent               TSX1    VXF$FREE
         6 000210   000000 011000                    NOP     0

      114    11375    4                     GOTO LIST_UNITS;

  11375  6 000211   000537 710000 6                  TRA     LIST_UNITS

      115    11376    4   TREE_ERR:
      116    11377    5                     IF VX_IO_STATUS = 2/*@IO_LD*/ THEN DO; /* Insufficient space */

  11377  6 000212   000000 235000 xsym  TREE_ERR     LDA     VX_IO_STATUS
         6 000213   000002 115007                    CMPA    2,DL
         6 000214   000250 601000 6                  TNZ     s:11388

      117    11378    5                         SIZE = SIZE + SIZE; /* Double and get */

  11378  6 000215   200020 236100                    LDQ     SIZE,,AUTO
         6 000216   200020 036100                    ADLQ    SIZE,,AUTO
         6 000217   200020 756100                    STQ     SIZE,,AUTO

      118    11379                              %ALLOCATE( PTR$=DUMMY$, TYPE=@DS3, SIZE=SIZE ) ;

  11380  6 000220   000003 236000 xsym               LDQ     VX_M_ALL+3
         6 000221   000003 136000 xsym               SBLQ    VX_M_FREE+3
         6 000222   000235 604000 6                  TMI     s:11384
         6 000223   200020 116100                    CMPQ    SIZE,,AUTO
         6 000224   000235 602000 6                  TNC     s:11384

  11381  6 000225   000003 236000 xsym               LDQ     VX_M_FREE+3
         6 000226   000022 736000                    QLS     18
         6 000227   000003 036000 xsym               ADLQ    VX_M_BASE_PTR+3
PL6.E3A0      #001=VXO$PROC File=VXO$PROC.:E05TSI                                WED 07/30/97 08:29 Page:40   
         6 000230   200011 756100                    STQ     DUMMY$,,AUTO

  11382  6 000231   000003 236000 xsym               LDQ     VX_M_FREE+3
         6 000232   200020 036100                    ADLQ    SIZE,,AUTO
         6 000233   000003 756000 xsym               STQ     VX_M_FREE+3

  11383  6 000234   000247 710000 6                  TRA     s:11386

  11384  6 000235   200020 630500                    EPPR0   SIZE,,AUTO
         6 000236   200030 450500                    STP0    DOT_BLK+3,,AUTO
         6 000237   000002 236000 7                  LDQ     2
         6 000240   200027 756100                    STQ     DOT_BLK+2,,AUTO
         6 000241   200011 631500                    EPPR1   DUMMY$,,AUTO
         6 000242   200026 451500                    STP1    DOT_BLK+1,,AUTO
         6 000243   200026 630500                    EPPR0   DOT_BLK+1,,AUTO
         6 000244   000021 631400 xsym               EPPR1   B_VECTNIL+17
         6 000245   000000 701000 xent               TSX1    VXA$GET
         6 000246   000000 011000                    NOP     0

      119    11386    5                         GOTO TREE_AGAIN;

  11386  6 000247   000075 710000 6                  TRA     TREE_AGAIN

      120    11387    5                        END;
      121    11388    4                     ELSE CALL VXF$FREE( 3/*@DS3*/, TSIZE, 1 );

  11388  6 000250   000011 236000 7                  LDQ     9
         6 000251   200030 756100                    STQ     DOT_BLK+3,,AUTO
         6 000252   200017 630500                    EPPR0   TSIZE,,AUTO
         6 000253   200027 450500                    STP0    DOT_BLK+2,,AUTO
         6 000254   000002 236000 7                  LDQ     2
         6 000255   200026 756100                    STQ     DOT_BLK+1,,AUTO
         6 000256   200026 630500                    EPPR0   DOT_BLK+1,,AUTO
         6 000257   000021 631400 xsym               EPPR1   B_VECTNIL+17
         6 000260   000000 701000 xent               TSX1    VXF$FREE
         6 000261   000000 011000                    NOP     0

PL6.E3A0      #001=VXO$PROC File=VXO$PROC.:E05TSI                                WED 07/30/97 08:29 Page:41   
      122    11389        %EJECT;
PL6.E3A0      #001=VXO$PROC File=VXO$PROC.:E05TSI                                WED 07/30/97 08:29 Page:42   
      123    11390    4   RESUME:
      124    11391    4                     FIRST = 0;

  11391  6 000262   200016 450100       RESUME       STZ     FIRST,,AUTO

      125    11392    4                     VX_O_KEY_BUF_L.FORM0.COUNT = LENGTHC( VX_O_KEY_HEAD);
             11392                              /* Set positioning key */

  11392  6 000263   001000 236003                    LDQ     512,DU
         6 000264   000000 552040 xsym               STBQ    VX_O_KEY_BUF_L,'40'O

      126    11393    4                     VX_O_KEY_BUF_L.FORM0.CHARS = VX_O_KEY_HEAD;

  11393  6 000265   040000 100400                    MLR     fill='040'O
         6 000266   000000 000001 xsym               ADSC9   VX_O_KEY_HEAD            cn=0,n=1
         6 000267   000000 201000 xsym               ADSC9   VX_O_KEY_BUF_L           cn=1,n=512

      127    11394    4   NEXT_UNIT:
      128    11395    4                     VX_IO_USEPREV = 1/*@YES*/; /* Set previous key to use */

  11395  6 000270   000001 235007       NEXT_UNIT    LDA     1,DL
         6 000271   000000 755000 xsym               STA     VX_IO_USEPREV

      129    11396    4                     VX_IO_SAVEPREV = 1/*@YES*/;
             11396                              /* Request previous key to be saved and do a keyed read */

  11396  6 000272   000000 755000 xsym               STA     VX_IO_SAVEPREV

      130    11397    4                     CALL VXI$READ( 0/*@OF*/, ADDR(VX_OU_HEAD), SIZEW( VX_OU_HEAD),

  11397  6 000273   000012 236000 7                  LDQ     10
         6 000274   200026 756100                    STQ     DOT_BLK+1,,AUTO
         6 000275   000014 237000 7                  LDAQ    12
         6 000276   200032 757100                    STAQ    DOT_BLK+5,,AUTO
         6 000277   200026 630500                    EPPR0   DOT_BLK+1,,AUTO
         6 000300   200031 450500                    STP0    DOT_BLK+4,,AUTO
         6 000301   000001 236000 7                  LDQ     1
PL6.E3A0      #001=VXO$PROC File=VXO$PROC.:E05TSI                                WED 07/30/97 08:29 Page:43   
         6 000302   200030 756100                    STQ     DOT_BLK+3,,AUTO
         6 000303   200030 630500                    EPPR0   DOT_BLK+3,,AUTO
         6 000304   000022 631400 xsym               EPPR1   B_VECTNIL+18
         6 000305   000000 701000 xent               TSX1    VXI$READ
         6 000306   000307 702000 6                  TSX2    NEXT_READ

      131    11398    4                             0/*@OF*/                  ) ALTRET(NEXT_READ);
      132    11399    4   NEXT_READ:
      133    11400        /* Here after positioning read */
      134    11401    4                     VX_IO_USEPREV = 1/*@YES*/; /* Use previous key */

  11401  6 000307   000001 235007       NEXT_READ    LDA     1,DL
         6 000310   000000 755000 xsym               STA     VX_IO_USEPREV

      135    11402    4                     VX_IO_SAVEPREV = 2;
             11402                              /* Request to save as previous and do a sequential read */

  11402  6 000311   000002 236007                    LDQ     2,DL
         6 000312   000000 756000 xsym               STQ     VX_IO_SAVEPREV

      136    11403    4                     VX_OU_HEAD = '0'B;

  11403  6 000313   000000 100400                    MLR     fill='000'O
         6 000314   000002 000001 xsym               ADSC9   B_VECTNIL+2              cn=0,n=1
         6 000315   000000 000164 xsym               ADSC9   VX_OU_HEAD               cn=0,n=116

      137    11404    4                     CALL VXI$READ( 0/*@OF*/, ADDR(VX_OU_HEAD), SIZEW(VX_OU_HEAD),

  11404  6 000316   000012 236000 7                  LDQ     10
         6 000317   200026 756100                    STQ     DOT_BLK+1,,AUTO
         6 000320   000014 237000 7                  LDAQ    12
         6 000321   200032 757100                    STAQ    DOT_BLK+5,,AUTO
         6 000322   200026 630500                    EPPR0   DOT_BLK+1,,AUTO
         6 000323   200031 450500                    STP0    DOT_BLK+4,,AUTO
         6 000324   000001 236000 7                  LDQ     1
         6 000325   200030 756100                    STQ     DOT_BLK+3,,AUTO
         6 000326   200030 630500                    EPPR0   DOT_BLK+3,,AUTO
PL6.E3A0      #001=VXO$PROC File=VXO$PROC.:E05TSI                                WED 07/30/97 08:29 Page:44   
         6 000327   000022 631400 xsym               EPPR1   B_VECTNIL+18
         6 000330   000000 701000 xent               TSX1    VXI$READ
         6 000331   000456 702000 6                  TSX2    TRY_RUN_FILE

      138    11405    4                             0/*@OF*/       )         ALTRET(TRY_RUN_FILE);
      139    11406        /* Verify we have a head record */
      140    11407    4                     IF VX_OK.KTYPE ~= -1 THEN GOTO TRY_RUN_FILE;

  11407  6 000332   000001 235000 xsym               LDA     VX_OK+1
         6 000333   000027 115000 xsym               CMPA    B_VECTNIL+23
         6 000334   000456 601000 6                  TNZ     TRY_RUN_FILE

      141    11408        /* An honest to god object file */
      142    11409    4                     FIRST = FIRST + 1;

  11409  6 000335   200016 236100                    LDQ     FIRST,,AUTO
         6 000336   000001 036007                    ADLQ    1,DL
         6 000337   200016 756100                    STQ     FIRST,,AUTO

      143    11410    4                     CALL VXO$OBJECT( VX_FCURR$, %SOURCE_OBJECT#, ADDR(
             11410                              VX_PASS1_ALL_TYPE));

  11410  6 000340   000016 236000 7                  LDQ     14
         6 000341   200026 756100                    STQ     DOT_BLK+1,,AUTO
         6 000342   200026 630500                    EPPR0   DOT_BLK+1,,AUTO
         6 000343   200031 450500                    STP0    DOT_BLK+4,,AUTO
         6 000344   000001 236000 7                  LDQ     1
         6 000345   200030 756100                    STQ     DOT_BLK+3,,AUTO
         6 000346   000000 236000 7                  LDQ     0
         6 000347   200027 756100                    STQ     DOT_BLK+2,,AUTO
         6 000350   200027 630500                    EPPR0   DOT_BLK+2,,AUTO
         6 000351   000021 631400 xsym               EPPR1   B_VECTNIL+17
         6 000352   000000 701000 xent               TSX1    VXO$OBJECT
         6 000353   000000 011000                    NOP     0

      144    11411    5                     IF VX_FCURR$ >= VX_OVERLAY_START$ THEN DO;

PL6.E3A0      #001=VXO$PROC File=VXO$PROC.:E05TSI                                WED 07/30/97 08:29 Page:45   
  11411  6 000354   000000 236000 xsym               LDQ     VX_FCURR$
         6 000355   000000 116000 xsym               CMPQ    VX_OVERLAY_START$
         6 000356   000455 602000 6                  TNC     s:11430

      145    11412    5                         IF NOT OPEN_LOOU_FLAG THEN CALL M$OPEN (OPEN_LOOU);

  11412  6 000357   000142 234000 2                  SZN     OPEN_LOOU_FLAG
         6 000360   000364 604000 6                  TMI     s:11413

  11412  6 000361   000002 630400 2                  EPPR0   OPEN_LOOU
         6 000362   050000 713400                    CLIMB   open
         6 000363   410400 401760                    pmme    nvectors=18

      146    11413    5                         OPEN_LOOU_FLAG = '1'B;

  11413  6 000364   400000 236003                    LDQ     -131072,DU
         6 000365   000142 756000 2                  STQ     OPEN_LOOU_FLAG

      147    11414    6                         IF VX_FCURR$->VX$LST.P.ACCT_.ACCT$ ~= ADDR (NIL) THEN DO;

  11414  6 000366   000000 470400 xsym               LDP0    VX_FCURR$
         6 000367   000010 236100                    LDQ     8,,PR0
         6 000370   000001 116000 xsym               CMPQ    B_VECTNIL+1
         6 000371   000401 600000 6                  TZE     s:11419

      148    11415    6                             OU_ACCT = VX_FCURR$->VX$LST.P.ACCT_.ACCT$->OU_ACCT_B;

  11415  6 000372   000010 471500                    LDP1    8,,PR0
         6 000373   040100 100500                    MLR     fill='040'O
         6 000374   100000 000010                    ADSC9   0,,PR1                   cn=0,n=8
         6 000375   200023 000010                    ADSC9   OU_ACCT,,AUTO            cn=0,n=8

      149    11416    6                             DOT_BLK = '.';

  11416  6 000376   056000 236003                    LDQ     23552,DU
         6 000377   200025 756100                    STQ     DOT_BLK,,AUTO

PL6.E3A0      #001=VXO$PROC File=VXO$PROC.:E05TSI                                WED 07/30/97 08:29 Page:46   
      150    11417    6                            END;

  11417  6 000400   000407 710000 6                  TRA     s:11422

      151    11418    6                         ELSE DO;

      152    11419    6                             OU_ACCT = ' ';

  11419  6 000401   000035 235000 xsym               LDA     B_VECTNIL+29
         6 000402   000035 236000 xsym               LDQ     B_VECTNIL+29
         6 000403   200023 755100                    STA     OU_ACCT,,AUTO
         6 000404   200024 756100                    STQ     OU_ACCT+1,,AUTO

      153    11420    6                             DOT_BLK = ' ';

  11420  6 000405   040000 236003                    LDQ     16384,DU
         6 000406   200025 756100                    STQ     DOT_BLK,,AUTO

      154    11421    6                            END;

      155    11422    5                         LOOU_KEY=SUBSTR(VX_O_KEY_BUF_L.FORM0.CHARS,1,VX_O_KEY_BUF_L.
             11422                                  FORM0.COUNT-1);

  11422  6 000407   000000 236000 xsym               LDQ     VX_O_KEY_BUF_L
         6 000410   000033 772000                    QRL     27
         6 000411   777777 620006                    EAX0    -1,QL
         6 000412   040000 100440                    MLR     fill='040'O
         6 000413   000000 400010 xsym               ADSC9   VX_O_KEY_BUF_L           cn=2,n=*X0
         6 000414   000132 000037 2                  ADSC9   LOOU_KEY                 cn=0,n=31

      156    11423    5                         CALL CONCAT (LOOU_BUF_A.OBJECT_FILE,

  11423  6 000415   000022 236100                    LDQ     18,,PR0
         6 000416   000033 772000                    QRL     27
         6 000417   000000 620006                    EAX0    0,QL
         6 000420   040000 100540                    MLR     fill='040'O
         6 000421   000022 200010                    ADSC9   18,,PR0                  cn=1,n=*X0
PL6.E3A0      #001=VXO$PROC File=VXO$PROC.:E05TSI                                WED 07/30/97 08:29 Page:47   
         6 000422   000110 000050 2                  ADSC9   LOOU_BUF                 cn=0,n=40
         6 000423   000050 116007                    CMPQ    40,DL
         6 000424   000441 603000 6                  TRC     s:11425
         6 000425   777727 620006                    EAX0    -41,QL
         6 000426   777777 660003                    ERX0    -1,DU
         6 000427   040046 100500                    MLR     fill='040'O
         6 000430   200025 000001                    ADSC9   DOT_BLK,,AUTO            cn=0,n=1
         6 000431   000110 000010 2                  ADSC9   LOOU_BUF,Q               cn=0,n=*X0
         6 000432   000047 116007                    CMPQ    39,DL
         6 000433   000441 603000 6                  TRC     s:11425
         6 000434   777730 620006                    EAX0    -40,QL
         6 000435   777777 660003                    ERX0    -1,DU
         6 000436   040046 100500                    MLR     fill='040'O
         6 000437   200023 000010                    ADSC9   OU_ACCT,,AUTO            cn=0,n=8
         6 000440   000110 200010 2                  ADSC9   LOOU_BUF,Q               cn=1,n=*X0

      157    11424    5                                 PINCRW (VX_FCURR$,18)->T$C.CHARS,DOT_BLK,OU_ACCT);
      158    11425    5                         LOOU_BUF_A.OU_NAME=LOOU_KEY;

  11425  6 000441   040000 100400                    MLR     fill='040'O
         6 000442   000132 000037 2                  ADSC9   LOOU_KEY                 cn=0,n=31
         6 000443   000122 000037 2                  ADSC9   LOOU_BUF+10              cn=0,n=31

      159    11426    5                         CALL M$WRITE (WR_LOOU);

  11426  6 000444   000074 630400 2                  EPPR0   WR_LOOU
         6 000445   040001 713400                    CLIMB   write
         6 000446   401400 401760                    pmme    nvectors=4

      160    11427    5                         LOOU_BUF = ' ';

  11427  6 000447   040000 100400                    MLR     fill='040'O
         6 000450   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         6 000451   000110 000107 2                  ADSC9   LOOU_BUF                 cn=0,n=71

      161    11428    5                         LOOU_COUNTER = LOOU_COUNTER + 1;

PL6.E3A0      #001=VXO$PROC File=VXO$PROC.:E05TSI                                WED 07/30/97 08:29 Page:48   
  11428  6 000452   000143 235000 2                  LDA     LOOU_COUNTER
         6 000453   000001 035007                    ADLA    1,DL
         6 000454   000143 755000 2                  STA     LOOU_COUNTER

      162    11429    5                        END;

      163    11430    4                     GOTO NEXT_UNIT;

  11430  6 000455   000270 710000 6                  TRA     NEXT_UNIT

      164    11431    4   TRY_RUN_FILE:
      165    11432        /* Not an object check if run file */
      166    11433    4                     IF FIRST > 0 THEN GOTO CLOSE_FILE;

  11433  6 000456   200016 235100       TRY_RUN_FILE LDA     FIRST,,AUTO
         6 000457   000651 601000 6                  TNZ     CLOSE_FILE

      167    11434    4                     VX_IO_USEPREV = 0/*@NO*/;

  11434  6 000460   000000 450000 xsym               STZ     VX_IO_USEPREV

      168    11435    4                     VX_IO_SAVEPREV = 0/*@NO*/;

  11435  6 000461   000000 450000 xsym               STZ     VX_IO_SAVEPREV

      169    11436    4                     VX_R_KEY_BUF.FORM0.COUNT = LENGTHC(VX_R_KEY_HEAD);

  11436  6 000462   004000 236003                    LDQ     2048,DU
         6 000463   000000 552040 xsym               STBQ    VX_R_KEY_BUF,'40'O

      170    11437    4                     VX_R_KEY_BUF.FORM0.CHARS = VX_R_KEY_HEAD;

  11437  6 000464   040000 100400                    MLR     fill='040'O
         6 000465   000000 000004 xsym               ADSC9   VX_R_KEY_HEAD            cn=0,n=4
         6 000466   000000 200005 xsym               ADSC9   VX_R_KEY_BUF             cn=1,n=5

      171    11438    4                     CALL VXI$READ( 0/*@OF*/, ADDR(VX_RU_HEAD_BUF),
PL6.E3A0      #001=VXO$PROC File=VXO$PROC.:E05TSI                                WED 07/30/97 08:29 Page:49   

  11438  6 000467   000017 236000 7                  LDQ     15
         6 000470   200026 756100                    STQ     DOT_BLK+1,,AUTO
         6 000471   000022 237000 7                  LDAQ    18
         6 000472   200032 757100                    STAQ    DOT_BLK+5,,AUTO
         6 000473   200026 630500                    EPPR0   DOT_BLK+1,,AUTO
         6 000474   200031 450500                    STP0    DOT_BLK+4,,AUTO
         6 000475   000001 236000 7                  LDQ     1
         6 000476   200030 756100                    STQ     DOT_BLK+3,,AUTO
         6 000477   200030 630500                    EPPR0   DOT_BLK+3,,AUTO
         6 000500   000022 631400 xsym               EPPR1   B_VECTNIL+18
         6 000501   000000 701000 xent               TSX1    VXI$READ
         6 000502   000522 702000 6                  TSX2    NEITHER

      172    11439    4                             SIZEW(VX_RU_HEAD_BUF), 1/*@RF*/                )
      173    11440    4                             ALTRET( NEITHER );
      174    11441        /* Here => file is a run file */
      175    11442    4                     VX_FCURR$ -> VX$LST.TYPE = 1/*@RF*/; /* Set type appropriately */

  11442  6 000503   000001 220003                    LDX0    1,DU
         6 000504   000000 470400 xsym               LDP0    VX_FCURR$
         6 000505   000001 740100                    STX0    1,,PR0

      176    11443        /*E*  ERROR: VXO-E$FILEISRUN_VX-0
      177    11444              MESSAGE: %FN is a run file(not object); Definitions only will be input.
      178    11445              DESCRIPTION: See message.
      179    11446        */
      180    11447    4                     VX_FPT_ERRMSG.V.DCB# = DCBNUM( M$OF ); /* Set parm */

  11447  6 000506   000000 236007 xsym               LDQ     M$OF,DL
         6 000507   000000 621006                    EAX1    0,QL
         6 000510   000026 741000 xsym               STX1    VX_FPT_ERRMSG+22

      181    11448                          %SCREAM( ERR#=E$FILEISRUN_VX, MID="'O'", LEVEL=@E$I_VX );

  11449  6 000511   000025 630400 7                  EPPR0   21
         6 000512   000022 631400 xsym               EPPR1   B_VECTNIL+18
PL6.E3A0      #001=VXO$PROC File=VXO$PROC.:E05TSI                                WED 07/30/97 08:29 Page:50   
         6 000513   000000 701000 xent               TSX1    VXE$ERROR
         6 000514   000000 011000                    NOP     0

      182    11451        /* Now process */
      183    11452    4                     CALL VXO$RUN( 3/*@LF_RUN*/, %SOURCE_RLIB#, VX_PASS1_ALL_TYPE );

  11452  6 000515   000031 630400 7                  EPPR0   25
         6 000516   000021 631400 xsym               EPPR1   B_VECTNIL+17
         6 000517   000000 701000 xent               TSX1    VXO$RUN
         6 000520   000000 011000                    NOP     0

      184    11453    4                     GOTO CLOSE_FILE;

  11453  6 000521   000651 710000 6                  TRA     CLOSE_FILE

      185    11454    4   NEITHER:
      186    11455        /* Not an object file or a run file */
      187    11456        /*E*  ERROR: VXO-E$FILEISNEITHER_VX-0
      188    11457              MESSAGE: Head record for file %FN does not exist.
      189    11458              DESCRIPTION: See message.
      190    11459        */
      191    11460                          %ERRMSG( ERR#=E$FILEISNEITHER_VX, LEVEL=@E$F_VX, MID='O', DCB#=
             11460                              M$OF );

  11467  6 000522   000000 236007 xsym  NEITHER      LDQ     M$OF,DL
         6 000523   200026 756100                    STQ     DOT_BLK+1,,AUTO
         6 000524   200026 630500                    EPPR0   DOT_BLK+1,,AUTO
         6 000525   200031 450500                    STP0    DOT_BLK+4,,AUTO
         6 000526   000032 236000 7                  LDQ     26
         6 000527   200030 756100                    STQ     DOT_BLK+3,,AUTO
         6 000530   000034 236000 7                  LDQ     28
         6 000531   200027 756100                    STQ     DOT_BLK+2,,AUTO
         6 000532   200027 630500                    EPPR0   DOT_BLK+2,,AUTO
         6 000533   000021 631400 xsym               EPPR1   B_VECTNIL+17
         6 000534   000000 701000 xent               TSX1    VXE$ERRMSG
         6 000535   000000 011000                    NOP     0
         6 000536   000651 710000 6                  TRA     CLOSE_FILE
PL6.E3A0      #001=VXO$PROC File=VXO$PROC.:E05TSI                                WED 07/30/97 08:29 Page:51   

      192    11469        %EJECT;
PL6.E3A0      #001=VXO$PROC File=VXO$PROC.:E05TSI                                WED 07/30/97 08:29 Page:52   
      193    11470    4                   CASE( 1/*@OF_LIST*/ );       /* List of object units */

      194    11471    4   LIST_UNITS:
      195    11472    4                     START$ = VX_FCURR$ -> VX$LST.OBJECT_NAME$;

  11472  6 000537   000000 470400 xsym  LIST_UNITS   LDP0    VX_FCURR$
         6 000540   000002 236100                    LDQ     2,,PR0
         6 000541   200003 756100                    STQ     START$,,AUTO

      196    11473    4                     VX_O_KEY_BUF.FORM0.COUNT = START$ -> T$C.COUNT;
             11473                              /* Set up the key */

  11473  6 000542   200003 471500                    LDP1    START$,,AUTO
         6 000543   100000 236100                    LDQ     0,,PR1
         6 000544   000000 552040 xsym               STBQ    VX_O_KEY_BUF,'40'O

      197    11474    4                     VX_O_KEY_BUF.FORM0.CHARS = START$ -> T$C.CHARS;

  11474  6 000545   100000 236100                    LDQ     0,,PR1
         6 000546   000033 772000                    QRL     27
         6 000547   000000 620006                    EAX0    0,QL
         6 000550   040000 100540                    MLR     fill='040'O
         6 000551   100000 200010                    ADSC9   0,,PR1                   cn=1,n=*X0
         6 000552   000000 201000 xsym               ADSC9   VX_O_KEY_BUF             cn=1,n=512

      198    11475    4                     VX_OU_HEAD = '0'B;

  11475  6 000553   000000 100400                    MLR     fill='000'O
         6 000554   000002 000001 xsym               ADSC9   B_VECTNIL+2              cn=0,n=1
         6 000555   000000 000164 xsym               ADSC9   VX_OU_HEAD               cn=0,n=116

      199    11476    4                     CALL VXI$READ( 0/*@OF*/,

  11476  6 000556   000012 236000 7                  LDQ     10
         6 000557   200026 756100                    STQ     DOT_BLK+1,,AUTO
         6 000560   000014 237000 7                  LDAQ    12
         6 000561   200032 757100                    STAQ    DOT_BLK+5,,AUTO
PL6.E3A0      #001=VXO$PROC File=VXO$PROC.:E05TSI                                WED 07/30/97 08:29 Page:53   
         6 000562   200026 633500                    EPPR3   DOT_BLK+1,,AUTO
         6 000563   200031 453500                    STP3    DOT_BLK+4,,AUTO
         6 000564   000001 236000 7                  LDQ     1
         6 000565   200030 756100                    STQ     DOT_BLK+3,,AUTO
         6 000566   200030 630500                    EPPR0   DOT_BLK+3,,AUTO
         6 000567   000022 631400 xsym               EPPR1   B_VECTNIL+18
         6 000570   000000 701000 xent               TSX1    VXI$READ
         6 000571   000607 702000 6                  TSX2    OBJECT_ERROR

      200    11477    4                             ADDR(VX_OU_HEAD),
      201    11478    4                             SIZEW(VX_OU_HEAD),
      202    11479    4                             0/*@OF*/                ) ALTRET(OBJECT_ERROR);
      203    11480    4                     CALL VXO$OBJECT( VX_FCURR$, %SOURCE_OBJECT#, ADDR(
             11480                              VX_PASS1_ALL_TYPE));

  11480  6 000572   000016 236000 7                  LDQ     14
         6 000573   200026 756100                    STQ     DOT_BLK+1,,AUTO
         6 000574   200026 630500                    EPPR0   DOT_BLK+1,,AUTO
         6 000575   200031 450500                    STP0    DOT_BLK+4,,AUTO
         6 000576   000001 236000 7                  LDQ     1
         6 000577   200030 756100                    STQ     DOT_BLK+3,,AUTO
         6 000600   000000 236000 7                  LDQ     0
         6 000601   200027 756100                    STQ     DOT_BLK+2,,AUTO
         6 000602   200027 630500                    EPPR0   DOT_BLK+2,,AUTO
         6 000603   000021 631400 xsym               EPPR1   B_VECTNIL+17
         6 000604   000000 701000 xent               TSX1    VXO$OBJECT
         6 000605   000000 011000                    NOP     0

      204    11481    4                     GOTO CLOSE_FILE;

  11481  6 000606   000651 710000 6                  TRA     CLOSE_FILE

      205    11482    4   OBJECT_ERROR:
      206    11483        /*E*  ERROR: VXO-E$CANTFINDOU_VX-0
      207    11484              MESSAGE: Cannot find object unit: %U1.
      208    11485              DESCRIPTION: Object unit specified in the tree record does not exist.
      209    11486        */
PL6.E3A0      #001=VXO$PROC File=VXO$PROC.:E05TSI                                WED 07/30/97 08:29 Page:54   
      210    11487    4                     VX_EFIELD1.COUNT = START$ -> T$C.COUNT - 1;

  11487  6 000607   200003 470500       OBJECT_ERROR LDP0    START$,,AUTO
         6 000610   000000 236100                    LDQ     0,,PR0
         6 000611   000033 772000                    QRL     27
         6 000612   000001 136007                    SBLQ    1,DL
         6 000613   000033 736000                    QLS     27
         6 000614   000000 552040 xsym               STBQ    VX_EFIELD1,'40'O

      211    11488    4                     VX_EFIELD1.CHARS = PINCRC( START$, 1 ) -> T$C.CHARS;

  11488  6 000615   000000 220100                    LDX0    0,,PR0
         6 000616   000777 360003                    ANX0    511,DU
         6 000617   040000 100540                    MLR     fill='040'O
         6 000620   000000 400010                    ADSC9   0,,PR0                   cn=2,n=*X0
         6 000621   000000 200117 xsym               ADSC9   VX_EFIELD1               cn=1,n=79

      212    11489    4                     VX_FPT_ERRMSG.FIELD1_   = VECTOR(VX_EFIELD1);

  11489  6 000622   000036 237000 7                  LDAQ    30
         6 000623   000014 757000 xsym               STAQ    VX_FPT_ERRMSG+12

      213    11490                          %SCREAM( ERR#=E$CANTFINDOU_VX, MID="'O'", LEVEL=@E$F_VX, AUX=
             11490                              @E$OF_VX );

  11491  6 000624   000041 630400 7                  EPPR0   33
         6 000625   000022 631400 xsym               EPPR1   B_VECTNIL+18
         6 000626   000000 701000 xent               TSX1    VXE$ERROR
         6 000627   000000 011000                    NOP     0

      214    11493    4                   END;

  11493  6 000630   000651 710000 6                  TRA     CLOSE_FILE

      215    11494        %EJECT;
PL6.E3A0      #001=VXO$PROC File=VXO$PROC.:E05TSI                                WED 07/30/97 08:29 Page:55   
      216    11495    3               CASE( 2/*@LF*/ );                /* Library file */

      217    11496    4                 DO CASE( VX_FCURR$ -> VX$LST.SUB_TYPE );

  11496  6 000631   000001 721100                    LXL1    1,,PR0
         6 000632   000003 101003                    CMPX1   3,DU
         6 000633   000635 602011 6                  TNC     s:11496+4,X1
         6 000634   000651 710000 6                  TRA     CLOSE_FILE
         6 000635   000651 710000 6                  TRA     CLOSE_FILE
         6 000636   000640 710000 6                  TRA     s:11498
         6 000637   000645 710000 6                  TRA     s:11500

      218    11497    4                   CASE( 1/*@LF_ALIB*/ );

      219    11498    4                     CALL VXO$RUN( 1/*@LF_ALIB*/, %SOURCE_ALIB#, VX_PASS1_ALL_TYPE );

  11498  6 000640   000045 630400 7                  EPPR0   37
         6 000641   000021 631400 xsym               EPPR1   B_VECTNIL+17
         6 000642   000000 701000 xent               TSX1    VXO$RUN
         6 000643   000000 011000                    NOP     0
         6 000644   000651 710000 6                  TRA     CLOSE_FILE

      220    11499    4                   CASE( 2/*@LF_SLIB*/ );

      221    11500    4                     CALL VXO$RUN( 2/*@LF_SLIB*/, %SOURCE_SLIB#, VX_PASS1_ALL_TYPE );

  11500  6 000645   000050 630400 7                  EPPR0   40
         6 000646   000021 631400 xsym               EPPR1   B_VECTNIL+17
         6 000647   000000 701000 xent               TSX1    VXO$RUN
         6 000650   000000 011000                    NOP     0

      222    11501        /**/
      223    11502    4                   END;

      224    11503    3               END;

      225    11504    2   CLOSE_FILE:
PL6.E3A0      #001=VXO$PROC File=VXO$PROC.:E05TSI                                WED 07/30/97 08:29 Page:56   
      226    11505    2             CALL VXF$CLOSE( VX_FCURR$, 0/*@OF*/, 2/*@SAVE*/ );

  11505  6 000651   000053 630400 7     CLOSE_FILE   EPPR0   43
         6 000652   000021 631400 xsym               EPPR1   B_VECTNIL+17
         6 000653   000000 701000 xent               TSX1    VXF$CLOSE
         6 000654   000000 011000                    NOP     0

      227    11506    3             IF VX_FCURR$ -> VX$LST.LINK$ = ADDR(NIL) THEN DO;

  11506  6 000655   000000 470400 xsym               LDP0    VX_FCURR$
         6 000656   000000 236100                    LDQ     0,,PR0
         6 000657   000001 116000 xsym               CMPQ    B_VECTNIL+1
         6 000660   001011 601000 6                  TNZ     s:11550

      228    11507    3                 IF VX_CURR$ = VX_ROOT$

  11507  6 000661   000000 236000 xsym               LDQ     VX_CURR$
         6 000662   000000 116000 xsym               CMPQ    VX_ROOT$
         6 000663   001011 601000 6                  TNZ     s:11550
         6 000664   000000 235000 xsym               LDA     VX_NODE_NUMBER
         6 000665   001011 604400 6                  TMOZ    s:11550
         6 000666   000035 235000 xsym               LDA     VX_O+29
         6 000667   001011 604400 6                  TMOZ    s:11550
         6 000670   000000 234000 2                  SZN     INCLUDED
         6 000671   001011 604000 6                  TMI     s:11550

      229    11508    3                         AND
      230    11509    3                         VX_NODE_NUMBER > 0
      231    11510    3                         AND
      232    11511    3                         VX_O.NUM.BREF > 0
      233    11512    3                         AND
      234    11513    4                         NOT INCLUDED THEN DO;

      235    11514    4                     IF VX_OD.NUM.BREF AND VX_OD.SIN.SYSTEM

  11514  6 000672   000000 236000 xsym               LDQ     VX_OD
         6 000673   000100 316007                    CANQ    64,DL
PL6.E3A0      #001=VXO$PROC File=VXO$PROC.:E05TSI                                WED 07/30/97 08:29 Page:57   
         6 000674   000677 600000 6                  TZE     s:11518
         6 000675   000200 316003                    CANQ    128,DU
         6 000676   001011 601000 6                  TNZ     s:11550

      236    11515    4                     THEN /* not INCLUDE :SYSLIB.:SYS */;
      237    11516    4                     ELSE
      238    11517    5                     DO;

      239    11518    5                         INCLUDED = '1'B/*@TRUE_B*/;

  11518  6 000677   400000 236003                    LDQ     -131072,DU
         6 000700   000000 756000 2                  STQ     INCLUDED

      240    11519    5                         CALL VXS$LST( WHERE$,

  11519  6 000701   000056 236000 7                  LDQ     46
         6 000702   200026 756100                    STQ     DOT_BLK+1,,AUTO
         6 000703   000001 236000 xsym               LDQ     B_VECTNIL+1
         6 000704   200027 756100                    STQ     DOT_BLK+2,,AUTO
         6 000705   000001 236000 7                  LDQ     1
         6 000706   200035 756100                    STQ     DOT_BLK+8,,AUTO
         6 000707   200027 631500                    EPPR1   DOT_BLK+2,,AUTO
         6 000710   200034 451500                    STP1    DOT_BLK+7,,AUTO
         6 000711   000060 237000 7                  LDAQ    48
         6 000712   200032 757100                    STAQ    DOT_BLK+5,,AUTO
         6 000713   200026 633500                    EPPR3   DOT_BLK+1,,AUTO
         6 000714   200031 453500                    STP3    DOT_BLK+4,,AUTO
         6 000715   200007 634500                    EPPR4   WHERE$,,AUTO
         6 000716   200030 454500                    STP4    DOT_BLK+3,,AUTO
         6 000717   200030 630500                    EPPR0   DOT_BLK+3,,AUTO
         6 000720   000024 631400 xsym               EPPR1   B_VECTNIL+20
         6 000721   000000 701000 xent               TSX1    VXS$LST
         6 000722   000000 011000                    NOP     0

      241    11520    5                                 ADDR(SYSLIB_TEXTC),
      242    11521    5                                 0/*@OF*/,
      243    11522    5                                 0/*@OF_ALL*/,
PL6.E3A0      #001=VXO$PROC File=VXO$PROC.:E05TSI                                WED 07/30/97 08:29 Page:58   
      244    11523    5                                 ADDR(NIL),
      245    11524    5                                 0 );
      246    11525    5                         VX_FCURR$ -> VX$LST.LINK$ = WHERE$;

  11525  6 000723   200007 236100                    LDQ     WHERE$,,AUTO
         6 000724   000000 470400 xsym               LDP0    VX_FCURR$
         6 000725   000000 756100                    STQ     0,,PR0

      247    11526    5                         VX_ROOT$ -> VX$NODE.TAIL$ = WHERE$;

  11526  6 000726   200007 236100                    LDQ     WHERE$,,AUTO
         6 000727   000000 470400 xsym               LDP0    VX_ROOT$
         6 000730   000005 756100                    STQ     5,,PR0

      248    11527    5                         WHERE$ -> VX$LST.SUB_TYPE = 1/*@OF_LIST*/;

  11527  6 000731   000001 220003                    LDX0    1,DU
         6 000732   200007 471500                    LDP1    WHERE$,,AUTO
         6 000733   100001 440100                    SXL0    1,,PR1

      249    11528    5                         L = ( LENGTHC(VX_XSO$BREF.CHARS)

  11528  6 000734   000010 235007                    LDA     8,DL
         6 000735   200015 755100                    STA     L,,AUTO

      250    11529    5                                 +
      251    11530    5                                 LENGTHC(VX_O_KEY_HEAD)
      252    11531    5                                 +
      253    11532    5                                 4/*@CHAR_WORD*/) / 4/*@CHAR_WORD*/;
      254    11533                              %ALLOCATE( PTR$=NAME$, TYPE=@GDP, SIZE=L );

  11534  6 000736   000010 236000 xsym               LDQ     VX_M_ALL+8
         6 000737   000010 136000 xsym               SBLQ    VX_M_FREE+8
         6 000740   000753 604000 6                  TMI     s:11538
         6 000741   200015 116100                    CMPQ    L,,AUTO
         6 000742   000753 602000 6                  TNC     s:11538

PL6.E3A0      #001=VXO$PROC File=VXO$PROC.:E05TSI                                WED 07/30/97 08:29 Page:59   
  11535  6 000743   000010 236000 xsym               LDQ     VX_M_FREE+8
         6 000744   000022 736000                    QLS     18
         6 000745   000010 036000 xsym               ADLQ    VX_M_BASE_PTR+8
         6 000746   200010 756100                    STQ     NAME$,,AUTO

  11536  6 000747   000010 236000 xsym               LDQ     VX_M_FREE+8
         6 000750   200015 036100                    ADLQ    L,,AUTO
         6 000751   000010 756000 xsym               STQ     VX_M_FREE+8

  11537  6 000752   000765 710000 6                  TRA     s:11540

  11538  6 000753   200015 631500                    EPPR1   L,,AUTO
         6 000754   200030 451500                    STP1    DOT_BLK+3,,AUTO
         6 000755   000062 236000 7                  LDQ     50
         6 000756   200027 756100                    STQ     DOT_BLK+2,,AUTO
         6 000757   200010 633500                    EPPR3   NAME$,,AUTO
         6 000760   200026 453500                    STP3    DOT_BLK+1,,AUTO
         6 000761   200026 630500                    EPPR0   DOT_BLK+1,,AUTO
         6 000762   000021 631400 xsym               EPPR1   B_VECTNIL+17
         6 000763   000000 701000 xent               TSX1    VXA$GET
         6 000764   000000 011000                    NOP     0

      255    11540    5                         NAME$ -> T$C.COUNT = LENGTHC( VX_XSO$BREF.CHARS )

  11540  6 000765   200010 470500                    LDP0    NAME$,,AUTO
         6 000766   037000 236003                    LDQ     15872,DU
         6 000767   000000 552140                    STBQ    0,'40'O,PR0

      256    11541    5                                 +
      257    11542    5                                 LENGTHC( VX_O_KEY_HEAD );
      258    11543    5                         CALL CONCAT( NAME$ -> T$C.CHARS,

  11543  6 000770   200010 470500                    LDP0    NAME$,,AUTO
         6 000771   000000 236100                    LDQ     0,,PR0
         6 000772   000033 772000                    QRL     27
         6 000773   000000 620006                    EAX0    0,QL
         6 000774   040140 100400                    MLR     fill='040'O
PL6.E3A0      #001=VXO$PROC File=VXO$PROC.:E05TSI                                WED 07/30/97 08:29 Page:60   
         6 000775   000000 000001 xsym               ADSC9   VX_O_KEY_HEAD            cn=0,n=1
         6 000776   000000 200010                    ADSC9   0,,PR0                   cn=1,n=*X0
         6 000777   000002 116007                    CMPQ    2,DL
         6 001000   001006 602000 6                  TNC     s:11546
         6 001001   777777 620006                    EAX0    -1,QL
         6 001002   200010 470500                    LDP0    NAME$,,AUTO
         6 001003   040140 100400                    MLR     fill='040'O
         6 001004   000000 400036 xsym               ADSC9   VX_XSO$BREF              cn=2,n=30
         6 001005   000000 400010                    ADSC9   0,,PR0                   cn=2,n=*X0

      259    11544    5                                 VX_O_KEY_HEAD,
      260    11545    5                                 VX_XSO$BREF.CHARS );
      261    11546    5                         WHERE$ -> VX$LST.OBJECT_NAME$ = NAME$;

  11546  6 001006   200010 236100                    LDQ     NAME$,,AUTO
         6 001007   200007 470500                    LDP0    WHERE$,,AUTO
         6 001010   000002 756100                    STQ     2,,PR0

      262    11547    5                        END;

      263    11548    4                    END;
             11548                 /* If VX_CURR$ = VX_ROOT$ and VX_NODE_NUMBER > 0 and ~included then do; */

      264    11549    3                END;       /* If VX_FCURR$ -> VX$LST.LINK$ = addr(nil) then do; */

      265    11550    2             VX_FCURR$ = VX_FCURR$ -> VX$LST.LINK$; /* Step to next */

  11550  6 001011   000000 470400 xsym               LDP0    VX_FCURR$
         6 001012   000000 236100                    LDQ     0,,PR0
         6 001013   000000 756000 xsym               STQ     VX_FCURR$

      266    11551    2            END;

  11551  6 001014   000001 116000 xsym               CMPQ    B_VECTNIL+1
         6 001015   000006 601000 6                  TNZ     s:11333

      267    11552    1         IF VX_BREF_DEFAULT_SET AND LOOU_COUNTER > 0 AND
PL6.E3A0      #001=VXO$PROC File=VXO$PROC.:E05TSI                                WED 07/30/97 08:29 Page:61   

  11552  6 001016   000000 234000 xsym               SZN     VX_BREF_DEFAULT_SET
         6 001017   001026 605000 6                  TPL     s:11555
         6 001020   000143 235000 2                  LDA     LOOU_COUNTER
         6 001021   001026 600000 6                  TZE     s:11555
         6 001022   000000 236000 xsym               LDQ     VX_NUM_UNIQUE_BREFS
         6 001023   000143 116000 2                  CMPQ    LOOU_COUNTER
         6 001024   001026 603000 6                  TRC     s:11555

      268    11553    1                 LOOU_COUNTER > VX_NUM_UNIQUE_BREFS THEN
      269    11554    1             VX_O.NUM.BREF = LOOU_COUNTER; /* Adjust BREF default */

  11554  6 001025   000035 755000 xsym               STA     VX_O+29

      270    11555    1   END VXO$PROC;

  11555  6 001026   000000 702200 xent               TSX2  ! X66_ARET

PL6.E3A0      #001=VXO$PROC File=VXO$PROC.:E05TSI                                WED 07/30/97 08:29 Page:62   
--  Include file information  --

   F_DCB_D.:E05TOU  is referenced.
   VX_DCB_R.:E05TOU  cannot be made into a system file and is referenced.
   VX_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   VX_FIXED_R.:E05TOU  cannot be made into a system file and is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   VX_MACRO_C.:E05TOU  is referenced.
   VX_PERR_C.:E05TOU  is referenced.
   VX_SUBS_C.:E05TOU  is referenced.
   VX_SWITCH_C.:E05TOU  is referenced.
   B$OBJECT_C.:E05TOU  is referenced.
   VX_INC_C.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure VXO$PROC.
PL6.E3A0      #001=VXO$PROC File=VXO$PROC.:E05TSI                                WED 07/30/97 08:29 Page:63   

 **** Variables and constants ****

  ****  Section 002  Data  VXO$PROC

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w BIT         r     1 INCLUDED                 110-0-0/c CHAR(71)    r     1 LOOU_BUF
   110-0-0/c STRC(639)   r     1 LOOU_BUF_A               143-0-0/w UBIN        r     1 LOOU_COUNTER
   132-0-0/c CHAR(31)    r     1 LOOU_KEY                   2-0-0/d STRC(2088)  r     1 OPEN_LOOU
   142-0-0/b BIT         r     1 OPEN_LOOU_FLAG            74-0-0/d STRC(432)   r     1 WR_LOOU

  ****  Section 004 RoData VXO$PROC

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(153)   r     1 SYSLIB_TEXTC

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

    25-0-0/c CHAR        r     1 DOT_BLK                   11-0-0/w PTR         r     1 DUMMY$
    16-0-0/w UBIN        r     1 FIRST                      5-0-0/w PTR         r     1 HEAD$
    15-0-0/w UBIN        r     1 L                         10-0-0/w PTR         r     1 NAME$
    21-0-0/w UBIN        r     1 NCHARS                    23-0-0/c CHAR(8)     r     1 OU_ACCT
    22-0-0/w UBIN        r     1 PWORK_SIZE                20-0-0/w UBIN        r     1 SIZE
     3-0-0/w PTR         r     1 START$                     6-0-0/w PTR         r     1 TAIL$
    17-0-0/w UBIN        r     1 TSIZE                      7-0-0/w PTR         r     1 WHERE$

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

PL6.E3A0      #001=VXO$PROC File=VXO$PROC.:E05TSI                                WED 07/30/97 08:29 Page:64   
     0-0-0/b BIT         r     1 VX_BREF_DEFAULT_SET        0-0-0/w PTR         r     1 VX_CURR$
     0-0-0/w UBIN        r     1 VX_DO_PASS1                0-0-0/w STRC(720)   r     1 VX_EFIELD1
     0-0-0/w PTR         r     1 VX_FCURR$                  0-0-0/d STRC(936)   r     1 VX_FPT_ERRMSG
     0-0-0/w SBIN        r     1 VX_IO_SAVEPREV             0-0-0/w SBIN        r     1 VX_IO_SIZEC
     0-0-0/w SBIN        r     1 VX_IO_STATUS               0-0-0/w SBIN        r     1 VX_IO_USEPREV
     0-0-0/w SBIN        r     1 VX_M_ALL(0:8)
     0-0-0/w PTR         r     1 VX_M_BASE_PTR(0:8)
     0-0-0/w SBIN        r     1 VX_M_FREE(0:8)
     0-0-0/w SBIN        r     1 VX_NODE_NUMBER             0-0-0/w UBIN        r     1 VX_NUM_UNIQUE_BREFS
     0-0-0/w UBIN        r     1 VX_N_START_TREE            0-0-0/w STRC(4572)  r     1 VX_O
     0-0-0/b STRC(116)   r     1 VX_OD                      0-0-0/w STRC(1476)  r     1 VX_OK
     0-0-0/w STRC(1044)  r     1 VX_OU_HEAD                 0-0-0/w PTR         r     1 VX_OVERLAY_START$
     0-0-0/w STRC(4617)  r     1 VX_O_KEY_BUF               0-0-0/w STRC(4617)  r     1 VX_O_KEY_BUF_L
     0-0-0/c CHAR        r     1 VX_O_KEY_HEAD              0-0-0/c CHAR(6)     r     1 VX_O_KEY_TREE
     0-0-0/w SBIN        r     1 VX_PASS1_ALL_TYPE(0:9)
     0-0-0/w STRC(504)   r     1 VX_P_PCB_MAIN              0-0-0/w PTR         r     1 VX_ROOT$
     0-0-0/w STRC(1440)  r     1 VX_RU_HEAD_BUF             0-0-0/w STRC(108)   r     1 VX_R_KEY_BUF
     0-0-0/c CHAR(4)     r     1 VX_R_KEY_HEAD              0-0-0/w STRC(288)   r     1 VX_XSO$BREF

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0N  NULL        r     1 M$LOOU                     0-0-0N  NULL        r     1 M$OF
     0-0-0/w STRC(144)   r     1 O$B                        0-0-0/c CHAR(8)     r     1 OU_ACCT_B
     0-0-0/w ASTR(9)     r     1 T$C                        0-0-0/c ASTR(9)     r     1 T$C_UNAL
     0-0-0/w STRC(648)   r     1 VX$LST                     0-0-0/w STRC(3672)  r     1 VX$NODE


   Procedure VXO$PROC requires 535 words for executable code.
   Procedure VXO$PROC requires 30 words of local(AUTO) storage.

    No errors detected in file VXO$PROC.:E05TSI    .
PL6.E3A0      #001=VXO$PROC File=VXO$PROC.:E05TSI                                WED 07/30/97 08:29 Page:65   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=VXO$PROC File=VXO$PROC.:E05TSI                                WED 07/30/97 08:29 Page:66   
          MINI XREF LISTING

CLOSE_FILE
     11505**LABEL   11334--GOTO    11433--GOTO    11453--GOTO    11481--GOTO
DOT_BLK
     11329**DCL     11416<<ASSIGN  11420<<ASSIGN  11423>>CALLBLT
DUMMY$
     11083**DCL     11381<<ASSIGN  11384<>CALL
FIRST
     11110**DCL     11391<<ASSIGN  11409<<ASSIGN  11409>>ASSIGN  11433>>IF
HEAD$
     11079**DCL     11359<>CALL    11368>>ASSIGN  11370>>ASSIGN
I
     11101**DCL     11102--REDEF
INCLUDED
     11016**DCL     11507>>IF      11518<<ASSIGN
J
     11103**DCL     11104--REDEF
K
     11105**DCL     11106--REDEF
L
     11107**DCL     11108--REDEF   11528<<ASSIGN  11534>>IF      11536>>ASSIGN  11538<>CALL
LIST_UNITS
     11472**LABEL   11375--GOTO
LOOU_BUF
     11320**DCL     11306--DCLINIT 11307--DCLINIT 11321--REDEF   11427<<ASSIGN
LOOU_BUF_A.OBJECT_FILE
     11322**DCL     11423<<CALLBLT
LOOU_BUF_A.OU_NAME
     11323**DCL     11425<<ASSIGN
LOOU_COUNTER
     11326**DCL     11428<<ASSIGN  11428>>ASSIGN  11552>>IF      11552>>IF      11554>>ASSIGN
LOOU_KEY
     11324**DCL     11305--DCLINIT 11422<<ASSIGN  11425>>ASSIGN
PL6.E3A0      #001=VXO$PROC File=VXO$PROC.:E05TSI                                WED 07/30/97 08:29 Page:67   
M$OF
     11119**DCL     11447>>ASSIGN  11467<>CALL
M$OPEN
      5072**DCL-ENT 11412--CALL
M$WRITE
      5073**DCL-ENT 11426--CALL
NAME$
     11082**DCL     11535<<ASSIGN  11538<>CALL    11540>>ASSIGN  11543>>CALLBLT 11543>>CALLBLT 11546>>ASSIGN
NCHARS
     11113**DCL     11357<<ASSIGN  11358<>CALL
NEITHER
     11467**LABEL   11438--CALLALT
NEXT_READ
     11401**LABEL   11397--CALLALT
NEXT_UNIT
     11395**LABEL   11430--GOTO
O$B.SUBLK$
     11167**DCL     11359<>CALL
OBJECT_ERROR
     11487**LABEL   11476--CALLALT
OPEN_LOOU
     11244**DCL     11412<>CALL
OPEN_LOOU.ACSVEH_
     11246**DCL     11247--REDEF
OPEN_LOOU.ALTKEYS_
     11252**DCL     11253--REDEF   11253--REDEF
OPEN_LOOU.HDR_
     11251**DCL     11252--REDEF
OPEN_LOOU.TAB_
     11250**DCL     11251--REDEF
OPEN_LOOU.UHL_
     11244**DCL     11245--REDEF   11245--REDEF
OPEN_LOOU.V
     11253**DCL     11244--DCLINIT
OPEN_LOOU.V.FSN#
     11284**DCL     11284--REDEF   11284--REDEF
PL6.E3A0      #001=VXO$PROC File=VXO$PROC.:E05TSI                                WED 07/30/97 08:29 Page:68   
OPEN_LOOU.WSN_
     11250**DCL     11250--REDEF
OPEN_LOOU_FLAG
     11325**DCL     11412>>IF      11413<<ASSIGN
OU_ACCT
     11327**DCL     11415<<ASSIGN  11419<<ASSIGN  11423>>CALLBLT
OU_ACCT_B
     11328**DCL     11415>>ASSIGN
PWORK_SIZE
     11114**DCL     11358<>CALL    11373>>ASSIGN
RESUME
     11391**LABEL   11339--GOTO
SIZE
     11112**DCL     11344<<ASSIGN  11346>>IF      11348>>ASSIGN  11350<>CALL    11353>>ASSIGN  11378<<ASSIGN
     11378>>ASSIGN  11378>>ASSIGN  11380>>IF      11382>>ASSIGN  11384<>CALL
START$
     11077**DCL     11347<<ASSIGN  11350<>CALL    11355<>CALL    11358<>CALL    11472<<ASSIGN  11473>>ASSIGN
     11474>>ASSIGN  11474>>ASSIGN  11487>>ASSIGN  11488>>ASSIGN  11488>>ASSIGN
SYSLIB_TEXTC
     11123**DCL     11519--CALL
T$C.CHARS
     10967**DCL     11423>>CALLBLT 11474>>ASSIGN  11488>>ASSIGN  11543<<CALLBLT
T$C.COUNT
     10966**DCL     10967--IMP-SIZ 11423>>CALLBLT 11473>>ASSIGN  11474>>ASSIGN  11487>>ASSIGN  11488>>ASSIGN
     11540<<ASSIGN  11543>>CALLBLT
T$C_UNAL.COUNT
     10969**DCL     10970--IMP-SIZ
TAIL$
     11080**DCL     11359<>CALL    11367>>ASSIGN
TREE_AGAIN
     11353**LABEL   11386--GOTO
TREE_ERR
     11377**LABEL   11355--CALLALT
TRY_RUN_FILE
     11433**LABEL   11404--CALLALT 11407--GOTO
TSIZE
PL6.E3A0      #001=VXO$PROC File=VXO$PROC.:E05TSI                                WED 07/30/97 08:29 Page:69   
     11111**DCL     11343<<ASSIGN  11353<<ASSIGN  11353>>ASSIGN  11355<>CALL    11373<<ASSIGN  11373>>ASSIGN
     11374<>CALL    11388<>CALL
VX$LST.LINK$
     10898**DCL     11367<<ASSIGN  11367>>ASSIGN  11370<<ASSIGN  11370>>ASSIGN  11506>>IF      11525<<ASSIGN
     11550>>ASSIGN
VX$LST.OBJECT_NAME$
     10901**DCL     10902--REDEF   11368<<ASSIGN  11368>>ASSIGN  11472>>ASSIGN  11546<<ASSIGN
VX$LST.P.ACCT_.ACCT$
     10919**DCL     11414>>IF      11415>>ASSIGN
VX$LST.SC_HEAD$
     10903**DCL     10904--REDEF
VX$LST.SC_TAIL$
     10905**DCL     10906--REDEF
VX$LST.SUB_TYPE
     10900**DCL     11337>>DOCASE  11372<<ASSIGN  11496>>DOCASE  11527<<ASSIGN
VX$LST.TYPE
     10899**DCL     11335>>DOCASE  11442<<ASSIGN
VX$NODE.ADDR_START_A
     10770**DCL     10771--REDEF
VX$NODE.ADDR_STOP_A
     10775**DCL     10776--REDEF
VX$NODE.HEAD$
     10762**DCL     11331>>ASSIGN
VX$NODE.L_PREV_SIZE
     10828**DCL     10839--REDEF
VX$NODE.L_SC_START
     10847**DCL     10852--REDEF
VX$NODE.L_SC_STOP
     10853**DCL     10858--REDEF
VX$NODE.L_SIZE
     10816**DCL     10827--REDEF
VX$NODE.L_START
     10792**DCL     10803--REDEF
VX$NODE.L_STOP
     10804**DCL     10815--REDEF
VX$NODE.PROMOTE_HEAD
PL6.E3A0      #001=VXO$PROC File=VXO$PROC.:E05TSI                                WED 07/30/97 08:29 Page:70   
     10859**DCL     10862--REDEF
VX$NODE.PROMOTE_TAIL
     10863**DCL     10866--REDEF
VX$NODE.SON$
     10758**DCL     11339>>IF
VX$NODE.START_PAGE#_A
     10780**DCL     10781--REDEF
VX$NODE.STOP_PAGE#_A
     10785**DCL     10786--REDEF
VX$NODE.TAIL$
     10764**DCL     11526<<ASSIGN
VXA$GET
     11047**DCL-ENT 11350--CALL    11384--CALL    11538--CALL
VXE$ERRMSG
     11041**DCL-ENT 11467--CALL
VXE$ERROR
     11038**DCL-ENT 11449--CALL    11491--CALL
VXF$CLOSE
     11054**DCL-ENT 11505--CALL
VXF$FREE
     11048**DCL-ENT 11374--CALL    11388--CALL
VXF$OPEN
     11053**DCL-ENT 11333--CALL
VXI$READ
     11057**DCL-ENT 11355--CALL    11397--CALL    11404--CALL    11438--CALL    11476--CALL
VXO$OBJECT
     11033**DCL-ENT 11410--CALL    11480--CALL
VXO$RUN
     11034**DCL-ENT 11452--CALL    11498--CALL    11500--CALL
VXP$PAR
     11035**DCL-ENT 11358--CALL
VXP$TREE
     11036**DCL-ENT 11359--CALL
VXS$LST
     11060**DCL-ENT 11519--CALL
VX_BIAS.A
PL6.E3A0      #001=VXO$PROC File=VXO$PROC.:E05TSI                                WED 07/30/97 08:29 Page:71   
      9575**DCL      9576--REDEF
VX_BREF_DEFAULT_SET
      9538**DCL     11552>>IF
VX_CBUF.CHARS_A
      9509**DCL      9510--REDEF
VX_CONST_DCB.ACTPOS
     10691**DCL     10691--REDEF
VX_CONST_DCB.ARS#
     10650**DCL     10650--REDEF
VX_CONST_DCB.ATTR#
     10680**DCL     10680--REDEF   10682--REDEF
VX_CONST_DCB.BORROW
     10702**DCL     10702--REDEF   10702--REDEF   10702--REDEF
VX_CONST_DCB.EOMCHAR#
     10657**DCL     10658--REDEF
VX_CONST_DCB.FLDID
     10694**DCL     10695--REDEF
VX_CONST_DCB.FORM$
     10686**DCL     10686--REDEF
VX_CONST_DCB.FSECT
     10709**DCL     10709--REDEF
VX_CONST_DCB.FSN#
     10676**DCL     10676--REDEF   10676--REDEF   10677--REDEF
VX_CONST_DCB.HEADER$
     10685**DCL     10686--REDEF
VX_CONST_DCB.IXTNSIZE#
     10682**DCL     10683--REDEF
VX_CONST_DCB.LASTSTA$
     10666**DCL     10666--REDEF
VX_CONST_DCB.LVL
     10703**DCL     10703--REDEF
VX_CONST_DCB.NAME#.C
     10666**DCL     10667--REDEF
VX_CONST_DCB.NOEOF
     10698**DCL     10698--REDEF
VX_CONST_DCB.NRECS#
PL6.E3A0      #001=VXO$PROC File=VXO$PROC.:E05TSI                                WED 07/30/97 08:29 Page:72   
     10683**DCL     10683--REDEF
VX_CONST_DCB.NRECX
     10710**DCL     10710--REDEF
VX_CONST_DCB.OHDR
     10699**DCL     10699--REDEF
VX_CONST_DCB.ORG#
     10674**DCL     10675--REDEF
VX_CONST_DCB.PRECNO
     10707**DCL     10707--REDEF
VX_CONST_DCB.RCSZ
     10715**DCL     10715--REDEF
VX_CONST_DCB.RES#
     10668**DCL     10668--REDEF
VX_CONST_DCB.SETX
     10687**DCL     10687--REDEF
VX_CONST_DCB.TAB$
     10686**DCL     10686--REDEF
VX_CONST_DCB.TDA
     10706**DCL     10707--REDEF
VX_CONST_DCB.WSN#
     10668**DCL     10669--REDEF
VX_CURR$
      9544**DCL     11331>>ASSIGN  11339>>IF      11359<>CALL    11507>>IF
VX_DO_PASS1
      9526**DCL     11334>>IF
VX_EBUF.CHARS_A
     10098**DCL     10099--REDEF
VX_EFIELD1
     10105**DCL     11489--ASSIGN
VX_EFIELD1.CHARS
     10107**DCL     10108--REDEF   11488<<ASSIGN
VX_EFIELD1.COUNT
     10106**DCL     11487<<ASSIGN
VX_EFIELD2.CHARS
     10111**DCL     10112--REDEF
VX_EFIELD3.CHARS
PL6.E3A0      #001=VXO$PROC File=VXO$PROC.:E05TSI                                WED 07/30/97 08:29 Page:73   
     10115**DCL     10116--REDEF
VX_EI_KEY_BUF.KEY
     10491**DCL     10492--REDEF
VX_ERRORS
      9552**DCL      9563--REDEF
VX_ERRORS.CONFLICT_A
      9558**DCL      9559--REDEF
VX_ERRORS.UNSAT_A
      9554**DCL      9555--REDEF
VX_FCURR$
      9545**DCL     11331<<ASSIGN  11332>>DOWHILE 11333<>CALL    11335>>DOCASE  11337>>DOCASE  11359<>CALL
     11367>>ASSIGN  11368>>ASSIGN  11370>>ASSIGN  11372>>ASSIGN  11410<>CALL    11411>>IF      11414>>IF
     11415>>ASSIGN  11423>>CALLBLT 11423>>CALLBLT 11442>>ASSIGN  11472>>ASSIGN  11480<>CALL    11496>>DOCASE
     11505<>CALL    11506>>IF      11525>>ASSIGN  11550<<ASSIGN  11550>>ASSIGN
VX_FPT_ERRMSG.FIELD1_
      8498**DCL     11489<<ASSIGN
VX_FPT_ERRMSG.V.DCB#
      8500**DCL     11447<<ASSIGN
VX_IMAGE_DATA.CPAGE#_A
      8689**DCL      8690--REDEF
VX_IMAGE_DATA.NODE_A$
      8701**DCL      8702--REDEF
VX_IMAGE_DATA.START_A$
      8693**DCL      8694--REDEF
VX_IMAGE_DATA.STOP_A$
      8697**DCL      8698--REDEF
VX_IMAGE_DS3.CPAGE#_A
      8758**DCL      8759--REDEF
VX_IMAGE_DS3.NODE_A$
      8770**DCL      8771--REDEF
VX_IMAGE_DS3.START_A$
      8762**DCL      8763--REDEF
VX_IMAGE_DS3.STOP_A$
      8766**DCL      8767--REDEF
VX_IMAGE_DS4.CPAGE#_A
      8781**DCL      8782--REDEF
PL6.E3A0      #001=VXO$PROC File=VXO$PROC.:E05TSI                                WED 07/30/97 08:29 Page:74   
VX_IMAGE_DS4.NODE_A$
      8793**DCL      8794--REDEF
VX_IMAGE_DS4.START_A$
      8785**DCL      8786--REDEF
VX_IMAGE_DS4.STOP_A$
      8789**DCL      8790--REDEF
VX_IMAGE_DS5.CPAGE#_A
      8804**DCL      8805--REDEF
VX_IMAGE_DS5.NODE_A$
      8816**DCL      8817--REDEF
VX_IMAGE_DS5.START_A$
      8808**DCL      8809--REDEF
VX_IMAGE_DS5.STOP_A$
      8812**DCL      8813--REDEF
VX_IMAGE_DS6.CPAGE#_A
      8827**DCL      8828--REDEF
VX_IMAGE_DS6.NODE_A$
      8839**DCL      8840--REDEF
VX_IMAGE_DS6.START_A$
      8831**DCL      8832--REDEF
VX_IMAGE_DS6.STOP_A$
      8835**DCL      8836--REDEF
VX_IMAGE_DS7.CPAGE#_A
      8850**DCL      8851--REDEF
VX_IMAGE_DS7.NODE_A$
      8862**DCL      8863--REDEF
VX_IMAGE_DS7.START_A$
      8854**DCL      8855--REDEF
VX_IMAGE_DS7.STOP_A$
      8858**DCL      8859--REDEF
VX_IMAGE_DS8.CPAGE#_A
      8873**DCL      8874--REDEF
VX_IMAGE_DS8.NODE_A$
      8885**DCL      8886--REDEF
VX_IMAGE_DS8.START_A$
      8877**DCL      8878--REDEF
PL6.E3A0      #001=VXO$PROC File=VXO$PROC.:E05TSI                                WED 07/30/97 08:29 Page:75   
VX_IMAGE_DS8.STOP_A$
      8881**DCL      8882--REDEF
VX_IMAGE_PROC.CPAGE#_A
      8712**DCL      8713--REDEF
VX_IMAGE_PROC.NODE_A$
      8724**DCL      8725--REDEF
VX_IMAGE_PROC.START_A$
      8716**DCL      8717--REDEF
VX_IMAGE_PROC.STOP_A$
      8720**DCL      8721--REDEF
VX_IMAGE_ROS.CPAGE#_A
      8735**DCL      8736--REDEF
VX_IMAGE_ROS.NODE_A$
      8747**DCL      8748--REDEF
VX_IMAGE_ROS.START_A$
      8739**DCL      8740--REDEF
VX_IMAGE_ROS.STOP_A$
      8743**DCL      8744--REDEF
VX_IO_SAVEPREV
     10132**DCL     11354<<ASSIGN  11396<<ASSIGN  11402<<ASSIGN  11435<<ASSIGN
VX_IO_SIZEC
     10130**DCL     11357>>ASSIGN
VX_IO_STATUS
     10128**DCL     11377>>IF
VX_IO_USEPREV
     10131**DCL     11395<<ASSIGN  11401<<ASSIGN  11434<<ASSIGN
VX_M_ALL
      9586**DCL     11346>>IF      11380>>IF      11534>>IF
VX_M_BASE_PTR
      9588**DCL     11347>>ASSIGN  11381>>ASSIGN  11535>>ASSIGN
VX_M_FREE
      9584**DCL     11346>>IF      11347>>ASSIGN  11348<<ASSIGN  11348>>ASSIGN  11380>>IF      11381>>ASSIGN
     11382<<ASSIGN  11382>>ASSIGN  11534>>IF      11535>>ASSIGN  11536<<ASSIGN  11536>>ASSIGN
VX_M_VECTOR.F
      8540**DCL      8544--REDEF
VX_M_VECTOR_DP.F
PL6.E3A0      #001=VXO$PROC File=VXO$PROC.:E05TSI                                WED 07/30/97 08:29 Page:76   
      8575**DCL      8579--REDEF
VX_NODE_NUMBER
      9535**DCL     11507>>IF
VX_NUM_UNIQUE_BREFS
      9536**DCL     11552>>IF
VX_N_START_TREE
     11118**DCL     11358--CALL
VX_O.ACCTN_A$
      9704**DCL      9705--REDEF
VX_O.DCB_MATCH_A$
      9713**DCL      9714--REDEF
VX_O.DCB_MATCH_HIT_A
      9719**DCL      9720--REDEF
VX_O.FIDN_A$
      9698**DCL      9699--REDEF
VX_O.FID_A$
      9690**DCL      9691--REDEF
VX_O.INCLUDE_A$
      9710**DCL      9711--REDEF
VX_O.MAP_A
      9684**DCL      9685--REDEF
VX_O.NODCB_A
      9741**DCL      9742--REDEF
VX_O.NUM.BREF
      9632**DCL     11507>>IF      11554<<ASSIGN
VX_O.NUM_A
      9629**DCL      9631--REDEF
VX_O.OPT_A
      9729**DCL      9730--REDEF
VX_O.PRIV_A
      9645**DCL      9647--REDEF
VX_O.SIN_A
      9598**DCL      9599--REDEF
VX_O.TCB_A
      9725**DCL      9726--REDEF
VX_OD.ACCTN_A$
PL6.E3A0      #001=VXO$PROC File=VXO$PROC.:E05TSI                                WED 07/30/97 08:29 Page:77   
      9902**DCL      9903--REDEF
VX_OD.DCB_MATCH_A$
      9911**DCL      9912--REDEF
VX_OD.FIDN_A$
      9896**DCL      9897--REDEF
VX_OD.FID_A$
      9888**DCL      9889--REDEF
VX_OD.INCLUDE_A$
      9908**DCL      9909--REDEF
VX_OD.MAP_A
      9882**DCL      9883--REDEF
VX_OD.NODCB_A
      9926**DCL      9927--REDEF
VX_OD.NUM.BREF
      9831**DCL     11514>>IF
VX_OD.NUM_A
      9829**DCL      9830--REDEF
VX_OD.PRIV_A
      9844**DCL      9845--REDEF
VX_OD.SIN.SYSTEM
      9810**DCL     11514>>IF
VX_OD.SIN_A
      9798**DCL      9799--REDEF
VX_OD.VECTOR_A$
      9917**DCL      9918--REDEF
VX_OK.KTYPE
      8659**DCL     11407>>IF
VX_OL.MAX_A
      9773**DCL      9775--REDEF
VX_OL.MIN_A
      9758**DCL      9759--REDEF
VX_ON.ACCTN_A$
     10047**DCL     10049--REDEF
VX_ON.DCB_MATCH_A$
     10058**DCL     10060--REDEF
VX_ON.FIDN_A$
PL6.E3A0      #001=VXO$PROC File=VXO$PROC.:E05TSI                                WED 07/30/97 08:29 Page:78   
     10040**DCL     10042--REDEF
VX_ON.FID_A$
     10031**DCL     10033--REDEF
VX_ON.INCLUDE_A$
     10054**DCL     10056--REDEF
VX_ON.MAP_A
     10024**DCL     10026--REDEF
VX_ON.NODCB_A$
     10074**DCL     10075--REDEF
VX_ON.NUM_A
      9969**DCL      9971--REDEF
VX_ON.PRIV_A
      9985**DCL      9987--REDEF
VX_ON.SIN_A
      9937**DCL      9939--REDEF
VX_ON.VECTOR_A$
     10065**DCL     10066--REDEF
VX_OUHEAD.VERSION
      9384**DCL      9386--REDEF
VX_OU_HEAD
      9327**DCL      9366--REDEF   11397--CALL    11397--CALL    11403<<ASSIGN  11404--CALL    11404--CALL
     11475<<ASSIGN  11476--CALL    11476--CALL
VX_OU_HEAD.REC_A
      9339**DCL      9342--REDEF
VX_OVERLAY_START$
      9483**DCL     11411>>IF
VX_O_KEY_BUF.FORM0
      8588**DCL      8591--REDEF    8598--REDEF
VX_O_KEY_BUF.FORM0.CHARS
      8590**DCL     11342<<ASSIGN  11474<<ASSIGN
VX_O_KEY_BUF.FORM0.COUNT
      8589**DCL     11341<<ASSIGN  11473<<ASSIGN
VX_O_KEY_BUF_L.FORM0
      8611**DCL      8614--REDEF    8621--REDEF
VX_O_KEY_BUF_L.FORM0.CHARS
      8613**DCL     11393<<ASSIGN  11422>>ASSIGN
PL6.E3A0      #001=VXO$PROC File=VXO$PROC.:E05TSI                                WED 07/30/97 08:29 Page:79   
VX_O_KEY_BUF_L.FORM0.COUNT
      8612**DCL     11392<<ASSIGN  11422>>ASSIGN
VX_O_KEY_HEAD
     10146**DCL     11392--ASSIGN  11393>>ASSIGN  11528--ASSIGN  11540--ASSIGN  11543>>CALLBLT
VX_O_KEY_TREE
     10148**DCL     11341--ASSIGN  11342>>ASSIGN
VX_PASS1_ALL_TYPE
     10212**DCL     11410--CALL    11452<>CALL    11480--CALL    11498<>CALL    11500<>CALL
VX_PASS2_REF.OU.L_START
     10277**DCL     10282--REDEF
VX_PASS2_REF.OU.L_STOP
     10283**DCL     10288--REDEF
VX_PASS2_REF.OU.MAX
     10271**DCL     10276--REDEF
VX_PASS2_REF.OU.SIZE
     10289**DCL     10294--REDEF
VX_PASS2_REF.SAT.COUNT
     10316**DCL     10322--REDEF
VX_PASS2_REF.SAT.ENT_SIZE
     10323**DCL     10329--REDEF
VX_PASS2_REF.SAT.L_START
     10302**DCL     10308--REDEF
VX_PASS2_REF.SAT.L_STOP
     10309**DCL     10315--REDEF
VX_PASS2_REF.SAT.MAX
     10296**DCL     10301--REDEF
VX_PASS2_REF.UNSAT.L_START
     10364**DCL     10369--REDEF
VX_PASS2_REF.UNSAT.L_STOP
     10370**DCL     10375--REDEF
VX_PASS2_REF.UNSAT.L_WHERE
     10376**DCL     10381--REDEF
VX_PASS2_REF.UNSAT.MAX
     10358**DCL     10363--REDEF
VX_PASS2_REF.UNSAT.PAGE#
     10388**DCL     10393--REDEF
PL6.E3A0      #001=VXO$PROC File=VXO$PROC.:E05TSI                                WED 07/30/97 08:29 Page:80   
VX_PASS2_REF.UNSAT.SIZE
     10382**DCL     10387--REDEF
VX_PHRASE.PHRASE
      9790**DCL      9792--REDEF
VX_PROGRAM_BIAS.A
      9568**DCL      9569--REDEF
VX_P_PCB_MAIN.OUT$
      8315**DCL     11359>>CALL
VX_ROOT$
      9541**DCL     11507>>IF      11526>>ASSIGN
VX_RU_HEAD_BUF
      9119**DCL     11438--CALL    11438--CALL
VX_R_KEY_BUF.FORM0
      8637**DCL      8641--REDEF    8647--REDEF
VX_R_KEY_BUF.FORM0.CHARS
      8639**DCL     11437<<ASSIGN
VX_R_KEY_BUF.FORM0.COUNT
      8638**DCL     11436<<ASSIGN
VX_R_KEY_HEAD
     10149**DCL     11436--ASSIGN  11437>>ASSIGN
VX_SD.A
      8265**DCL      8266--REDEF
VX_SPC.B$.MINE
     10459**DCL     10465--REDEF
VX_SPC.B$.NAME
     10438**DCL     10444--REDEF
VX_SPC.B$.SKIP
     10452**DCL     10458--REDEF
VX_SPC.B$.VALUE
     10445**DCL     10451--REDEF
VX_SPC.SEG.NAME
     10407**DCL     10413--REDEF
VX_SPC.SEG.VALUE
     10414**DCL     10420--REDEF
VX_TSX0_OVERLAY.H
     10182**DCL     10185--REDEF
PL6.E3A0      #001=VXO$PROC File=VXO$PROC.:E05TSI                                WED 07/30/97 08:29 Page:81   
VX_XSO$BREF.CHARS
     10179**DCL     11528--ASSIGN  11540--ASSIGN  11543>>CALLBLT
WHERE$
     11081**DCL     11519<>CALL    11525>>ASSIGN  11526>>ASSIGN  11527>>ASSIGN  11546>>ASSIGN
WR_LOOU
     11305**DCL     11426<>CALL
WR_LOOU.STATION_
     11307**DCL     11307--REDEF
WR_LOOU.V
     11308**DCL     11305--DCLINIT
WR_LOOU.V.DVBYTE.VFC#
     11314**DCL     11314--REDEF
