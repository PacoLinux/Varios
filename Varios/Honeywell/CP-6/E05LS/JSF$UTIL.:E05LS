VERSION E05

PL6.E3A0      #001=JSF$OPENLM File=JSF$UTIL.:E05TSI                              TUE 07/29/97 23:45 Page:1    
        1        1        /*M*  JSF$UTIL   UTILITY ROUTINES USED MOSTLY BY FETCH */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* PLM=8,IND=5,ENU=0,ECU=0    */
        8        8        /*F*   NAME:   JSF$OPENLM                                          */
        9        9        /*F*   PURPOSE: To perform a default open of the M$LM dcb.         */
       10       10        JSF$OPENLM: PROC(ERR) ALTRET;
       11       11    1   DCL ERR SBIN;                      /* ERROR CODE RETURNED FROM FM, IF ANY     */
       12       12    1   DCL M$LM DCB;
       13       13    1   DCL B$JIT$ PTR SYMREF READONLY;
       14       14    1   DCL B$M$LM$ PTR SYMREF READONLY;
       15       15    1   DCL FMM$DFLOPN ENTRY;                   /* DEFAULT OPEN                       */
       16       16                                                /**/
       17       17        %INCLUDE F$JIT_C;
       18      447        %INCLUDE B$ROSEG;
       19      510                                                /**/
       20      511    1           B$JIT$->B$JIT.DCB$ = B$M$LM$;
       21      512    1           B$JIT$->B$JIT.DCBNO = DCBNUM(M$LM);
       22      513    1           CALL FMM$DFLOPN;
       23      514    1           ERR = B$JIT$->B$JIT.ERR.CODE;
       24      515    1           IF ERR ~= 0
       25      516    2           THEN DO;
       26      517    2                ALTRETURN;
       27      518    2                END;
       28      519    1           ELSE RETURN;
       29      520    1   END JSF$OPENLM;
       30      521
       31      522        %EOD;

PL6.E3A0      #001=JSF$OPENLM File=JSF$UTIL.:E05TSI                              TUE 07/29/97 23:45 Page:2    
--  Include file information  --

   B$ROSEG.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  is referenced.
   F$JIT_C.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure JSF$OPENLM.

   Procedure JSF$OPENLM requires 19 words for executable code.
   Procedure JSF$OPENLM requires 4 words of local(AUTO) storage.

PL6.E3A0      #001=JSF$OPENLM File=JSF$UTIL.:E05TSI                              TUE 07/29/97 23:45 Page:3    

 Object Unit name= JSF$OPENLM                                 File name= JSF$UTIL.:E05TOU
 UTS= JUL 29 '97 23:45:37.28 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$LM
    1   Proc  even  none    19     23  JSF$OPENLM

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     1      0   yes    yes     yes      Std        1  JSF$OPENLM

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       0 FMM$DFLOPN
                       nStd      0 X66_AUTO_1
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_AALT
                       nStd      0 X66_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$LM                             r    B$JIT$                           r    B$M$LM$
     B_VECTNIL
PL6.E3A0      #001=JSF$OPENLM File=JSF$UTIL.:E05TSI                              TUE 07/29/97 23:45 Page:4    


        1        1        /*M*  JSF$UTIL   UTILITY ROUTINES USED MOSTLY BY FETCH */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* PLM=8,IND=5,ENU=0,ECU=0    */
        8        8        /*F*   NAME:   JSF$OPENLM                                          */
        9        9        /*F*   PURPOSE: To perform a default open of the M$LM dcb.         */
       10       10        JSF$OPENLM: PROC(ERR) ALTRET;

     10  1 000000   000000 700200 xent  JSF$OPENLM   TSX0  ! X66_AUTO_1
         1 000001   000004 000001                    ZERO    4,1

       11       11    1   DCL ERR SBIN;                      /* ERROR CODE RETURNED FROM FM, IF ANY     */
       12       12    1   DCL M$LM DCB;
       13       13    1   DCL B$JIT$ PTR SYMREF READONLY;
       14       14    1   DCL B$M$LM$ PTR SYMREF READONLY;
       15       15    1   DCL FMM$DFLOPN ENTRY;                   /* DEFAULT OPEN                       */
       16       16                                                /**/
       17       17        %INCLUDE F$JIT_C;
       18      447        %INCLUDE B$ROSEG;
       19      510                                                /**/
       20      511    1           B$JIT$->B$JIT.DCB$ = B$M$LM$;

    511  1 000002   000000 236000 xsym               LDQ     B$M$LM$
         1 000003   000000 470400 xsym               LDP0    B$JIT$
         1 000004   000232 756100                    STQ     154,,PR0

       21      512    1           B$JIT$->B$JIT.DCBNO = DCBNUM(M$LM);

    512  1 000005   000000 236007 xsym               LDQ     M$LM,DL
         1 000006   000022 552104                    STBQ    18,'04'O,PR0

       22      513    1           CALL FMM$DFLOPN;

PL6.E3A0      #001=JSF$OPENLM File=JSF$UTIL.:E05TSI                              TUE 07/29/97 23:45 Page:5    
    513  1 000007   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 000010   000000 701000 xent               TSX1    FMM$DFLOPN
         1 000011   000000 011000                    NOP     0

       23      514    1           ERR = B$JIT$->B$JIT.ERR.CODE;

    514  1 000012   000000 470400 xsym               LDP0    B$JIT$
         1 000013   000012 236100                    LDQ     10,,PR0
         1 000014   000003 772000                    QRL     3
         1 000015   037777 376007                    ANQ     16383,DL
         1 000016   200003 471500                    LDP1    @ERR,,AUTO
         1 000017   100000 756100                    STQ     0,,PR1

       24      515    1           IF ERR ~= 0

    515  1 000020   000022 600000 1                  TZE     s:519

       25      516    2           THEN DO;

       26      517    2                ALTRETURN;

    517  1 000021   000000 702200 xent               TSX2  ! X66_AALT

       27      518    2                END;
       28      519    1           ELSE RETURN;

    519  1 000022   000000 702200 xent               TSX2  ! X66_ARET
       29      520    1   END JSF$OPENLM;
       30      521
       31      522        %EOD;

PL6.E3A0      #001=JSF$OPENLM File=JSF$UTIL.:E05TSI                              TUE 07/29/97 23:45 Page:6    
--  Include file information  --

   B$ROSEG.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  is referenced.
   F$JIT_C.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure JSF$OPENLM.
PL6.E3A0      #001=JSF$OPENLM File=JSF$UTIL.:E05TSI                              TUE 07/29/97 23:45 Page:7    

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @ERR                      *0-0-0/w SBIN        r     1 ERR

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 B$JIT$                     0-0-0/w PTR         r     1 B$M$LM$

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d STRC(8856)  r     1 B$JIT                      0-0-0N  NULL        r     1 M$LM


   Procedure JSF$OPENLM requires 19 words for executable code.
   Procedure JSF$OPENLM requires 4 words of local(AUTO) storage.
PL6.E3A0      #001=JSF$OPENLM File=JSF$UTIL.:E05TSI                              TUE 07/29/97 23:45 Page:8    
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=JSF$OPENLM File=JSF$UTIL.:E05TSI                              TUE 07/29/97 23:45 Page:9    
          MINI XREF LISTING

B$JIT.DCB$
       434**DCL       511<<ASSIGN
B$JIT.DCBNO
       425**DCL       512<<ASSIGN
B$JIT.ERR.CODE
       345**DCL       514>>ASSIGN
B$JIT.ERR.MID
       345**DCL       345--REDEF
B$JIT$
        13**DCL       339--IMP-PTR   511>>ASSIGN    512>>ASSIGN    514>>ASSIGN
B$M$LM$
        14**DCL       511>>ASSIGN
ERR
        11**DCL        10--PROC      514<<ASSIGN    515>>IF
FMM$DFLOPN
        15**DCL-ENT   513--CALL
M$LM
        12**DCL       512>>ASSIGN

PL6.E3A0      #002=JSF$CLSDCBS File=JSF$UTIL.:E05TSI                             TUE 07/29/97 23:45 Page:10   
       32        1        /*T***********************************************************/
       33        2        /*T*                                                         */
       34        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
       35        4        /*T*                                                         */
       36        5        /*T***********************************************************/
       37        6
       38        7        /*F*   NAME:   JSF$CLSDCBS                                         */
       39        8        /*F*   PURPOSE: To close all DCB's except M$LM.                    */
       40        9        JSF$CLSDCBS: PROC;
       41       10    1   DCL I SBIN;
       42       11    1   DCL DCB$ PTR;
       43       12    1   DCL DCBPTR$(0:0) PTR BASED;
       44       13    1   DCL M$DO DCB;
       45       14    1   DCL M$LM DCB;
       46       15    1   DCL B$ROSEG$ PTR SYMREF READONLY;
       47       16    1   DCL B$JIT$ PTR SYMREF READONLY;
       48       17    1   DCL S$CU$ PTR SYMREF;
       49       18    1   DCL SSR$REG ENTRY (3) ALTRET;
       50       19    1   DCL FMP$CLSJ ENTRY;
       51       20    1   DCL FMM$SCRUB ENTRY(1);
       52       21    1   DCL UMD$CLSDRIB ENTRY ALTRET;
       53       22                                                /**/
       54       23        %INCLUDE B$JIT_C;
       55      337        %B$JIT0;
       56      426        %U$JIT1;
       57      500        %M$JIT2X;
       58      503        %F$JIT3;
       59      508        %S$JIT4X;
       60      511        %J$JIT5X;
       61      514        %A$JIT6X;
       62      517        %INCLUDE F_ERRORS_C;
       63      757        %INCLUDE B$ROSEG;
       64      820        %INCLUDE CP_6_SUBS;
       65     1360        %INCLUDE F$DCB;
       66     1409        %INCLUDE B$USER;
       67     1625        %INCLUDE SS_SCHED_C;
       68     1858                                                /**/
PL6.E3A0      #002=JSF$CLSDCBS File=JSF$UTIL.:E05TSI                             TUE 07/29/97 23:45 Page:11   
       69     1859        /* FIRST, CLOSE M$* AND M$DO, IF THEY'RE OPEN... */
       70     1860    1           I = %M$STAR#;
       71     1861    1           CALL CLS;
       72     1862    1           I = DCBNUM(M$DO);
       73     1863    1           CALL CLS;
       74     1864    1           CALL FMM$SCRUB(DCB$);
       75     1865    1   JSF$CLSUSRDCBS: ENTRY;                  /* CLOSE ONLY USER'S DCBS             */
       76     1866        /* NOW, LOOP THROUGH THE DEFINED USER DCB'S, CLOSING OPEN ONES. */
       77     1867    2           DO I=5 TO B$ROSEG$->B$ROSEG.NUMDCBS;
       78     1868    2                CALL CLS;
       79     1869    2                END;
       80     1870    1           IF B$JIT$->B$JIT.ERR.CODE=%E$DCBCLOSED
       81     1871    1           THEN B$JIT$->B$JIT.ERR = '0'B;
       82     1872        /*      Close DRIBBLE file if dribbling                               */
       83     1873    1           CALL UMD$CLSDRIB;
       84     1874    2   MFWAIT: IF S$CU$ -> B$U.MF > S$CU$ -> B$U.CMF THEN DO;
       85     1875    2                CALL SSR$REG (%SS_QMF);
       86     1876    2                GOTO MFWAIT;
       87     1877    2                END;
       88     1878    1           RETURN;
       89     1879        %EJECT;
PL6.E3A0      #002=JSF$CLSDCBS File=JSF$UTIL.:E05TSI                             TUE 07/29/97 23:45 Page:12   
       90     1880    1   JSF$CLSLM: ENTRY;
       91     1881    1           I = DCBNUM (M$LM);
       92     1882    1           CALL CLS;
       93     1883    1           RETURN;
       94     1884
       95     1885
       96     1886    1   CLS:    PROC;
       97     1887
       98     1888    2           DCB$ = DCBADDR(I);
       99     1889    3           IF DCB$ ~= ADDR(NIL) THEN DO;
      100     1890    3                B$JIT$->B$JIT.DCB$ = DCB$;
      101     1891    3                IF DCB$->F$DCB.FCD ='1'B THEN CALL FMP$CLSJ;
      102     1892
      103     1893        /* Prevent havoc if someone tries to use an ALTkey or IREL file
      104     1894           as an RU. The space of these in the ROSEG will be giving back
      105     1895           anyway, so only need to zero them here */
      106     1896
      107     1897    3                DCB$ -> F$DCB.ALTKEYX = 0;
      108     1898    3                DCB$ -> F$DCB.KFIELDX = 0;
      109     1899    3                DCB$ -> F$DCB.FIELDX = 0;
      110     1900    3                DCB$ -> F$DCB.IRRECX = 0;
      111     1901    3                DCB$ -> F$DCB.STARTX = 0;
      112     1902    3                DCB$ -> F$DCB.FPRGX = 0;
      113     1903
      114     1904    3                IF I >= 5 THEN
      115     1905    3                     B$ROSEG$->B$ROSEG.DCBPTR$->DCBPTR$(I)=ADDR(NIL);
      116     1906    3                END;
      117     1907    2           RETURN;
      118     1908    2   END CLS;
      119     1909    1   END JSF$CLSDCBS;
      120     1910
      121     1911        %EOD;

PL6.E3A0      #002=JSF$CLSDCBS File=JSF$UTIL.:E05TSI                             TUE 07/29/97 23:45 Page:13   
--  Include file information  --

   SS_SCHED_C.:E05TOU  is referenced.
   B$USER.:E05TOU  cannot be made into a system file and is referenced.
   F$DCB.:E05TOU  cannot be made into a system file and is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   B$ROSEG.:E05TOU  cannot be made into a system file and is referenced.
   F_ERRORS_C.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  is referenced.
      No diagnostics issued in procedure JSF$CLSDCBS.

   Procedure JSF$CLSDCBS requires 94 words for executable code.
   Procedure JSF$CLSDCBS requires 10 words of local(AUTO) storage.

PL6.E3A0      #002=JSF$CLSDCBS File=JSF$UTIL.:E05TSI                             TUE 07/29/97 23:45 Page:14   

 Object Unit name= JSF$CLSDCBS                                File name= JSF$UTIL.:E05TOU
 UTS= JUL 29 '97 23:45:42.68 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$DO
    1   DCB   even  none     0      0  M$LM
    2   Proc  even  none    94    136  JSF$CLSDCBS
    3  RoData even  none     2      2  JSF$CLSDCBS

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     2      0   yes            yes      Std        0  JSF$CLSDCBS
     2     21                  yes      Std        0  JSF$CLSUSRDCBS
     2     65                  yes      Std        0  JSF$CLSLM

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       1 FMM$SCRUB
 yes     yes           Std       3 SSR$REG
 yes     yes           Std       0 UMD$CLSDRIB
         yes           Std       0 FMP$CLSJ
                       nStd      0 X66_AUTO_0
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET
PL6.E3A0      #002=JSF$CLSDCBS File=JSF$UTIL.:E05TSI                             TUE 07/29/97 23:45 Page:15   

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$DO                                  M$LM                             r    B$ROSEG$
r    B$JIT$                                S$CU$                                 B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ROSID                                 ISSID
PL6.E3A0      #002=JSF$CLSDCBS File=JSF$UTIL.:E05TSI                             TUE 07/29/97 23:45 Page:16   


       32        1        /*T***********************************************************/
       33        2        /*T*                                                         */
       34        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
       35        4        /*T*                                                         */
       36        5        /*T***********************************************************/
       37        6
       38        7        /*F*   NAME:   JSF$CLSDCBS                                         */
       39        8        /*F*   PURPOSE: To close all DCB's except M$LM.                    */
       40        9        JSF$CLSDCBS: PROC;

      9  2 000000   000000 700200 xent  JSF$CLSDCBS  TSX0  ! X66_AUTO_0
         2 000001   000012 000000                    ZERO    10,0

       41       10    1   DCL I SBIN;
       42       11    1   DCL DCB$ PTR;
       43       12    1   DCL DCBPTR$(0:0) PTR BASED;
       44       13    1   DCL M$DO DCB;
       45       14    1   DCL M$LM DCB;
       46       15    1   DCL B$ROSEG$ PTR SYMREF READONLY;
       47       16    1   DCL B$JIT$ PTR SYMREF READONLY;
       48       17    1   DCL S$CU$ PTR SYMREF;
       49       18    1   DCL SSR$REG ENTRY (3) ALTRET;
       50       19    1   DCL FMP$CLSJ ENTRY;
       51       20    1   DCL FMM$SCRUB ENTRY(1);
       52       21    1   DCL UMD$CLSDRIB ENTRY ALTRET;
       53       22                                                /**/
       54       23        %INCLUDE B$JIT_C;
       55      337        %B$JIT0;
       56      426        %U$JIT1;
       57      500        %M$JIT2X;
       58      503        %F$JIT3;
       59      508        %S$JIT4X;
       60      511        %J$JIT5X;
       61      514        %A$JIT6X;
       62      517        %INCLUDE F_ERRORS_C;
       63      757        %INCLUDE B$ROSEG;
PL6.E3A0      #002=JSF$CLSDCBS File=JSF$UTIL.:E05TSI                             TUE 07/29/97 23:45 Page:17   
       64      820        %INCLUDE CP_6_SUBS;
       65     1360        %INCLUDE F$DCB;
       66     1409        %INCLUDE B$USER;
       67     1625        %INCLUDE SS_SCHED_C;
       68     1858                                                /**/
       69     1859        /* FIRST, CLOSE M$* AND M$DO, IF THEY'RE OPEN... */
       70     1860    1           I = %M$STAR#;

   1860  2 000002   000001 235007                    LDA     1,DL
         2 000003   200003 755100                    STA     I,,AUTO

       71     1861    1           CALL CLS;

   1861  2 000004   000074 701000 2                  TSX1    CLS
         2 000005   000000 011000                    NOP     0

       72     1862    1           I = DCBNUM(M$DO);

   1862  2 000006   000000 236007 xsym               LDQ     M$DO,DL
         2 000007   200003 756100                    STQ     I,,AUTO

       73     1863    1           CALL CLS;

   1863  2 000010   000074 701000 2                  TSX1    CLS
         2 000011   000000 011000                    NOP     0

       74     1864    1           CALL FMM$SCRUB(DCB$);

   1864  2 000012   200004 630500                    EPPR0   DCB$,,AUTO
         2 000013   200010 450500                    STP0    DCB$+4,,AUTO
         2 000014   200010 630500                    EPPR0   DCB$+4,,AUTO
         2 000015   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 000016   000000 701000 xent               TSX1    FMM$SCRUB
         2 000017   000000 011000                    NOP     0
         2 000020   000023 710000 2                  TRA     s:1867

       75     1865    1   JSF$CLSUSRDCBS: ENTRY;                  /* CLOSE ONLY USER'S DCBS             */
PL6.E3A0      #002=JSF$CLSDCBS File=JSF$UTIL.:E05TSI                             TUE 07/29/97 23:45 Page:18   

   1865  2 000021   000000 700200 xent  JSF$CLSUSRD* TSX0  ! X66_AUTO_0
         2 000022   000012 000000                    ZERO    10,0

       76     1866        /* NOW, LOOP THROUGH THE DEFINED USER DCB'S, CLOSING OPEN ONES. */
       77     1867    2           DO I=5 TO B$ROSEG$->B$ROSEG.NUMDCBS;

   1867  2 000023   000005 235007                    LDA     5,DL
         2 000024   200003 755100                    STA     I,,AUTO
         2 000025   000031 710000 2                  TRA     s:1869+1

       78     1868    2                CALL CLS;

   1868  2 000026   000074 701000 2                  TSX1    CLS
         2 000027   000000 011000                    NOP     0

       79     1869    2                END;

   1869  2 000030   200003 054100                    AOS     I,,AUTO
         2 000031   000000 470400 xsym               LDP0    B$ROSEG$
         2 000032   000002 236100                    LDQ     2,,PR0
         2 000033   000022 772000                    QRL     18
         2 000034   200003 116100                    CMPQ    I,,AUTO
         2 000035   000026 605000 2                  TPL     s:1868

       80     1870    1           IF B$JIT$->B$JIT.ERR.CODE=%E$DCBCLOSED

   1870  2 000036   000000 471400 xsym               LDP1    B$JIT$
         2 000037   100012 236100                    LDQ     10,,PR1
         2 000040   377770 376007                    ANQ     131064,DL
         2 000041   002260 116007                    CMPQ    1200,DL
         2 000042   000044 601000 2                  TNZ     s:1873

       81     1871    1           THEN B$JIT$->B$JIT.ERR = '0'B;

   1871  2 000043   100012 450100                    STZ     10,,PR1

PL6.E3A0      #002=JSF$CLSDCBS File=JSF$UTIL.:E05TSI                             TUE 07/29/97 23:45 Page:19   
       82     1872        /*      Close DRIBBLE file if dribbling                               */
       83     1873    1           CALL UMD$CLSDRIB;

   1873  2 000044   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 000045   000000 701000 xent               TSX1    UMD$CLSDRIB
         2 000046   000000 011000                    NOP     0

       84     1874    2   MFWAIT: IF S$CU$ -> B$U.MF > S$CU$ -> B$U.CMF THEN DO;

   1874  2 000047   000000 470400 xsym  MFWAIT       LDP0    S$CU$
         2 000050   000006 236100                    LDQ     6,,PR0
         2 000051   000033 772000                    QRL     27
         2 000052   200010 756100                    STQ     DCB$+4,,AUTO
         2 000053   000007 236100                    LDQ     7,,PR0
         2 000054   000077 376007                    ANQ     63,DL
         2 000055   200010 116100                    CMPQ    DCB$+4,,AUTO
         2 000056   000064 605000 2                  TPL     s:1878

       85     1875    2                CALL SSR$REG (%SS_QMF);

   1875  2 000057   000000 630400 3                  EPPR0   0
         2 000060   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 000061   000000 701000 xent               TSX1    SSR$REG
         2 000062   000000 011000                    NOP     0

       86     1876    2                GOTO MFWAIT;

   1876  2 000063   000047 710000 2                  TRA     MFWAIT

       87     1877    2                END;
       88     1878    1           RETURN;

   1878  2 000064   000000 702200 xent               TSX2  ! X66_ARET

       89     1879        %EJECT;
PL6.E3A0      #002=JSF$CLSDCBS File=JSF$UTIL.:E05TSI                             TUE 07/29/97 23:45 Page:20   
       90     1880    1   JSF$CLSLM: ENTRY;

   1880  2 000065   000000 700200 xent  JSF$CLSLM    TSX0  ! X66_AUTO_0
         2 000066   000012 000000                    ZERO    10,0

       91     1881    1           I = DCBNUM (M$LM);

   1881  2 000067   000000 236007 xsym               LDQ     M$LM,DL
         2 000070   200003 756100                    STQ     I,,AUTO

       92     1882    1           CALL CLS;

   1882  2 000071   000074 701000 2                  TSX1    CLS
         2 000072   000000 011000                    NOP     0

       93     1883    1           RETURN;

   1883  2 000073   000000 702200 xent               TSX2  ! X66_ARET

       94     1884
       95     1885
       96     1886    1   CLS:    PROC;

   1886  2 000074   200006 741300       CLS          STX1  ! DCB$+2,,AUTO

       97     1887
       98     1888    2           DCB$ = DCBADDR(I);

   1888  2 000075   000001 470400 3                  LDP0    1
         2 000076   000000 471500                    LDP1    0,,PR0
         2 000077   200003 720100                    LXL0    I,,AUTO
         2 000100   100000 236110                    LDQ     0,X0,PR1
         2 000101   200004 756100                    STQ     DCB$,,AUTO

       99     1889    3           IF DCB$ ~= ADDR(NIL) THEN DO;

   1889  2 000102   000001 116000 xsym               CMPQ    B_VECTNIL+1
PL6.E3A0      #002=JSF$CLSDCBS File=JSF$UTIL.:E05TSI                             TUE 07/29/97 23:45 Page:21   
         2 000103   000134 600000 2                  TZE     s:1907

      100     1890    3                B$JIT$->B$JIT.DCB$ = DCB$;

   1890  2 000104   000000 473400 xsym               LDP3    B$JIT$
         2 000105   300232 756100                    STQ     154,,PR3

      101     1891    3                IF DCB$->F$DCB.FCD ='1'B THEN CALL FMP$CLSJ;

   1891  2 000106   200004 474500                    LDP4    DCB$,,AUTO
         2 000107   400031 236100                    LDQ     25,,PR4
         2 000110   020000 316007                    CANQ    8192,DL
         2 000111   000115 600000 2                  TZE     s:1897

   1891  2 000112   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 000113   000000 701000 xent               TSX1    FMP$CLSJ
         2 000114   000000 011000                    NOP     0

      102     1892
      103     1893        /* Prevent havoc if someone tries to use an ALTkey or IREL file
      104     1894           as an RU. The space of these in the ROSEG will be giving back
      105     1895           anyway, so only need to zero them here */
      106     1896
      107     1897    3                DCB$ -> F$DCB.ALTKEYX = 0;

   1897  2 000115   000000 220003                    LDX0    0,DU
         2 000116   200004 470500                    LDP0    DCB$,,AUTO
         2 000117   000052 440100                    SXL0    42,,PR0

      108     1898    3                DCB$ -> F$DCB.KFIELDX = 0;

   1898  2 000120   000056 440100                    SXL0    46,,PR0

      109     1899    3                DCB$ -> F$DCB.FIELDX = 0;

   1899  2 000121   000054 440100                    SXL0    44,,PR0

PL6.E3A0      #002=JSF$CLSDCBS File=JSF$UTIL.:E05TSI                             TUE 07/29/97 23:45 Page:22   
      110     1900    3                DCB$ -> F$DCB.IRRECX = 0;

   1900  2 000122   000061 740100                    STX0    49,,PR0

      111     1901    3                DCB$ -> F$DCB.STARTX = 0;

   1901  2 000123   000057 740100                    STX0    47,,PR0

      112     1902    3                DCB$ -> F$DCB.FPRGX = 0;

   1902  2 000124   000054 740100                    STX0    44,,PR0

      113     1903
      114     1904    3                IF I >= 5 THEN

   1904  2 000125   200003 235100                    LDA     I,,AUTO
         2 000126   000005 115007                    CMPA    5,DL
         2 000127   000134 604000 2                  TMI     s:1907

      115     1905    3                     B$ROSEG$->B$ROSEG.DCBPTR$->DCBPTR$(I)=ADDR(NIL);

   1905  2 000130   000000 471400 xsym               LDP1    B$ROSEG$
         2 000131   100000 473500                    LDP3    0,,PR1
         2 000132   000001 236000 xsym               LDQ     B_VECTNIL+1
         2 000133   300000 756105                    STQ     0,AL,PR3

      116     1906    3                END;

      117     1907    2           RETURN;

   1907  2 000134   200006 221300                    LDX1  ! DCB$+2,,AUTO
         2 000135   000001 702211                    TSX2  ! 1,X1

(unnamed)
 Sect OctLoc
   3     000   000005 006000   000000 006003                                    ........
      118     1908    2   END CLS;
PL6.E3A0      #002=JSF$CLSDCBS File=JSF$UTIL.:E05TSI                             TUE 07/29/97 23:45 Page:23   
      119     1909    1   END JSF$CLSDCBS;
      120     1910
      121     1911        %EOD;

PL6.E3A0      #002=JSF$CLSDCBS File=JSF$UTIL.:E05TSI                             TUE 07/29/97 23:45 Page:24   
--  Include file information  --

   SS_SCHED_C.:E05TOU  is referenced.
   B$USER.:E05TOU  cannot be made into a system file and is referenced.
   F$DCB.:E05TOU  cannot be made into a system file and is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   B$ROSEG.:E05TOU  cannot be made into a system file and is referenced.
   F_ERRORS_C.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  is referenced.
      No diagnostics issued in procedure JSF$CLSDCBS.
PL6.E3A0      #002=JSF$CLSDCBS File=JSF$UTIL.:E05TSI                             TUE 07/29/97 23:45 Page:25   

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     4-0-0/w PTR         r     1 DCB$                       3-0-0/w SBIN        r     1 I

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 B$JIT$                     0-0-0/w PTR         r     1 B$ROSEG$
     0-0-0/w PTR         r     1 S$CU$

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d STRC(8856)  r     1 B$JIT                      0-0-0/d STRC(3024)  r     1 B$ROSEG
     0-0-0/d STRC(576)   r     1 B$U
     0-0-0/w PTR         r     1 DCBPTR$(0:0)
     0-0-0/d ASTR(3528)  r     1 F$DCB                      0-0-0N  NULL        r     1 M$DO
     0-0-0N  NULL        r     1 M$LM


   Procedure JSF$CLSDCBS requires 94 words for executable code.
   Procedure JSF$CLSDCBS requires 10 words of local(AUTO) storage.
PL6.E3A0      #002=JSF$CLSDCBS File=JSF$UTIL.:E05TSI                             TUE 07/29/97 23:45 Page:26   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #002=JSF$CLSDCBS File=JSF$UTIL.:E05TSI                             TUE 07/29/97 23:45 Page:27   
          MINI XREF LISTING

B$DO.ECCINFO
      1560**DCL      1561--REDEF
B$JIT.CPFLAGS1.SLEAZE
       437**DCL       437--REDEF
B$JIT.DCB$
       504**DCL      1890<<ASSIGN
B$JIT.ERR
       343**DCL      1871<<ASSIGN
B$JIT.ERR.CODE
       344**DCL      1870>>IF
B$JIT.ERR.MID
       344**DCL       344--REDEF
B$JIT$
        16**DCL       338--IMP-PTR  1870>>IF       1871>>ASSIGN   1890>>ASSIGN
B$ROSEG.DCBPTR$
       768**DCL      1905>>ASSIGN
B$ROSEG.NUMDCBS
       770**DCL      1867>>DOINDEX
B$ROSEG$
        15**DCL      1867>>DOINDEX  1905>>ASSIGN
B$U.CMF
      1522**DCL      1874>>IF
B$U.MF
      1515**DCL      1874>>IF
B$U.MISC
      1539**DCL      1540--REDEF
B$USER.MISC
      1615**DCL      1616--REDEF
CLS
      1886**PROC     1861--CALL     1863--CALL     1868--CALL     1882--CALL
DCB$
        11**DCL      1864<>CALL     1888<<ASSIGN   1889>>IF       1890>>ASSIGN   1891>>IF       1897>>ASSIGN
PL6.E3A0      #002=JSF$CLSDCBS File=JSF$UTIL.:E05TSI                             TUE 07/29/97 23:45 Page:28   
      1898>>ASSIGN   1899>>ASSIGN   1900>>ASSIGN   1901>>ASSIGN   1902>>ASSIGN
DCBPTR$
        12**DCL      1905<<ASSIGN
F$DCB.ACTPOS
      1386**DCL      1386--REDEF
F$DCB.ALTKEYX
      1384**DCL      1897<<ASSIGN
F$DCB.ARS
      1361**DCL      1361--REDEF
F$DCB.ATTR
      1379**DCL      1380--REDEF
F$DCB.BORROW
      1394**DCL      1394--REDEF    1394--REDEF    1394--REDEF
F$DCB.DCBNAME.L
      1408**DCL      1408--IMP-SIZ
F$DCB.EOMCHAR
      1365**DCL      1365--REDEF
F$DCB.FCD
      1374**DCL      1891>>IF
F$DCB.FIELDX
      1385**DCL      1899<<ASSIGN
F$DCB.FLDID
      1389**DCL      1389--REDEF
F$DCB.FORM$
      1383**DCL      1383--REDEF
F$DCB.FPRGX
      1385**DCL      1902<<ASSIGN
F$DCB.FSECT
      1399**DCL      1399--REDEF
F$DCB.FSN
      1376**DCL      1376--REDEF    1376--REDEF    1377--REDEF
F$DCB.HEADER$
      1382**DCL      1382--REDEF
F$DCB.IRRECX
      1389**DCL      1900<<ASSIGN
F$DCB.IXTNSIZE
PL6.E3A0      #002=JSF$CLSDCBS File=JSF$UTIL.:E05TSI                             TUE 07/29/97 23:45 Page:29   
      1380**DCL      1380--REDEF
F$DCB.KFIELDX
      1386**DCL      1898<<ASSIGN
F$DCB.LASTSTA$
      1370**DCL      1370--REDEF
F$DCB.LVL
      1395**DCL      1395--REDEF
F$DCB.NAME.C
      1370**DCL      1370--REDEF
F$DCB.NOEOF
      1391**DCL      1391--REDEF
F$DCB.NRECS
      1381**DCL      1381--REDEF
F$DCB.NRECX
      1400**DCL      1400--REDEF
F$DCB.OHDR
      1392**DCL      1392--REDEF
F$DCB.ORG
      1375**DCL      1375--REDEF
F$DCB.PRECNO
      1398**DCL      1398--REDEF
F$DCB.RCSZ
      1403**DCL      1403--REDEF
F$DCB.RES
      1371**DCL      1371--REDEF
F$DCB.SETX
      1383**DCL      1383--REDEF
F$DCB.STARTX
      1386**DCL      1901<<ASSIGN
F$DCB.TAB$
      1382**DCL      1383--REDEF
F$DCB.TDA
      1397**DCL      1397--REDEF
F$DCB.WSN
      1372**DCL      1372--REDEF
FMM$SCRUB
PL6.E3A0      #002=JSF$CLSDCBS File=JSF$UTIL.:E05TSI                             TUE 07/29/97 23:45 Page:30   
        20**DCL-ENT  1864--CALL
FMP$CLSJ
        19**DCL-ENT  1891--CALL
I
        10**DCL      1860<<ASSIGN   1862<<ASSIGN   1867<<DOINDEX  1881<<ASSIGN   1888--ASSIGN   1904>>IF
      1905>>ASSIGN
M$DO
        13**DCL      1862>>ASSIGN
M$LM
        14**DCL      1881>>ASSIGN
MFWAIT
      1874**LABEL    1876--GOTO
S$CU$
        17**DCL      1874>>IF       1874>>IF
SSR$REG
        18**DCL-ENT  1875--CALL
UMD$CLSDRIB
        21**DCL-ENT  1873--CALL

PL6.E3A0      #003=JSF$READ_DS File=JSF$UTIL.:E05TSI                             TUE 07/29/97 23:46 Page:31   
      122        1        /*T***********************************************************/
      123        2        /*T*                                                         */
      124        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      125        4        /*T*                                                         */
      126        5        /*T***********************************************************/
      127        6        /*F*   NAME:   JSF$READ                                            */
      128        7        /*F*   PURPOSE: To read all of an indicated record type from the   */
      129        8        /*,*           run unit assigned to M$LM into an indicated buffer. */
      130        9        JSF$READ_DS: PROC(TYPE,RECSIZE,TOTSIZE,LOC$,NODE,ERR) ALTRET;
      131       10                                                /**/
      132       11    1   DCL TYPE SBIN;                          /* RECORD TYPE CODE                   */
      133       12    1   DCL RECSIZE SBIN;                  /* MAX RECORD SIZE FOR THE RECORD TYPE     */
      134       13    1   DCL TOTSIZE SBIN;                  /* TOTAL SIZE OF ALL RECORDS OF A TYPE     */
      135       14    1   DCL LOC$ PTR;                           /* POINTER TO THE BUFFER TO BE USED   */
      136       15    1   DCL LOC REDEF LOC$ UBIN HALF;
      137       16    1   DCL NODE UBIN;                /* Node # for overlays, SEGID for data segs     */
      138       17    1   DCL ERR SBIN;                           /* ERROR CODE TO BE RETURNED          */
      139       18                                                /**/
      140       19    1   DCL AUTO_TOTSIZE SBIN;
      141       20    1   DCL M$LM DCB;
      142       21    1   DCL INCR SBIN;
      143       22    1   DCL 1 KEY DALIGNED,
      144       23    1         2 SIZ UBIN(9) UNAL,
      145       24    1         2 TYP UBIN(9) UNAL,
      146       25    1         2 NODE UBIN(18) UNAL,
      147       26    1         2 ADR UBIN(18) UNAL;
      148       27    1   DCL READ_DS BIT(72) DALIGNED;
      149       28    1   DCL IS_DS BIT(1);
      150       29
      151       30    1   DCL 1 HKEY DALIGNED CONSTANT,
      152       31    1         2 SIZ UBIN(9) UNAL INIT(4),
      153       32    1         2 TXT CHAR(4) UNAL INIT('HEAD');
      154       33    1   DCL M$MREAD ENTRY(1) ALTRET;
      155       34    1   DCL JSN$BLNK ENTRY(1);
      156       35        /**/
      157       36                                                /**/
      158       37        %INCLUDE U$JIT_C;                       /* JIT DEFINITIONS USED BY JSF$READ   */
PL6.E3A0      #003=JSF$READ_DS File=JSF$UTIL.:E05TSI                             TUE 07/29/97 23:46 Page:32   
      159      536        %INCLUDE B_ERRORS_C;                    /* ERROR CODES                        */
      160     1663        %INCLUDE CP_6;                          /* STATIC FPT-GENERATING MACROS       */
      161     7222
      162     7223        %INCLUDE B$OBJECT_C;
      163    10653        %LIST;
      164    10654          %B$RECORDSUBS;
             10655        %EQU TYPHEAD=0 ;
             10656        %EQU TYPDNAM=1 ;
             10657        %EQU TYPRNAM=2 ;
             10658        %EQU TYPSECT=3 ;
             10659        %EQU TYPEDEF=4 ;
             10660        %EQU TYPEREF=5 ;
             10661        %EQU TYPSDEF=6 ;
             10662        %EQU TYPSREF=7 ;
             10663        %EQU TYPSEGDEF=8 ;
             10664        %EQU TYPSEGREF=9 ;
             10665        %EQU TYPPROG=10 ;
             10666        %EQU SUBTYPPROG=0 ;
             10667        %EQU SUBTYPREL=1 ;
             10668        %EQU TYPLOGBLK=11 ;
             10669        %EQU TYPINTNTRY=12 ;
             10670        %EQU TYPEXST=13 ;
             10671        %EQU TYPVREBL=14 ;
             10672        %EQU TYPDBGNAM=15 ;
             10673        %EQU TYPLV1LB=16 ;
             10674        %EQU TYPLV1=17 ;
             10675        %EQU TYPDATASEG=18 ;
             10676        %EQU TYPRUM=20 ;
             10677        %EQU TYPBIRTH=21 ;
             10678        %EQU TYPPLOVER=22 ;
             10679        %EQU TYPCOMPID=23 ;
             10680        %EQU TYPROS=30 ;
      165    10682        %PLIST;
      166    10683
      167    10684        %INCLUDE B_MLSMAC_C;
      168    11626        %B_MLS(FPTN=B$MLS,STCLASS=BASED);
      169    12441
PL6.E3A0      #003=JSF$READ_DS File=JSF$UTIL.:E05TSI                             TUE 07/29/97 23:46 Page:33   
      170    12442    1   DCL B$LS$ PTR SYMREF READONLY;
      171    12443    1   DCL B$JIT$ PTR SYMREF READONLY;
      172    12444
      173    12445        %FPT_READ(FPTN=FPT$READ,STCLASS=AUTO);
      174    12484        %FPT_READ(STCLASS=CONSTANT,DCB=M$LM,KEYS=YES);
      175    12523
      176    12524        %EJECT;
PL6.E3A0      #003=JSF$READ_DS File=JSF$UTIL.:E05TSI                             TUE 07/29/97 23:46 Page:34   
      177    12525
      178    12526                                 /* This entry for reading initialized data segments  */
      179    12527    1           READ_DS = B$LS$->B$MLS.MISC2;
      180    12528    1           IS_DS = '1'B;
      181    12529    1           GOTO COMMON;
      182    12530
      183    12531    1   JSF$READ: ENTRY(TYPE,RECSIZE,TOTSIZE,LOC$,NODE,ERR) ALTRET;
      184    12532    1           IS_DS = '0'B;
      185    12533    1   COMMON:
      186    12534    1           IF TOTSIZE = 0 THEN RETURN;     /* DEGENERATE CASE                    */
      187    12535    1           AUTO_TOTSIZE = TOTSIZE;
      188    12536    1           FPT$READ = FPT_READ;
      189    12537        /* SELECT OR BUILD THE NECESSARY KEY... */
      190    12538    1           IF TYPE = %TYPHEAD
      191    12539    1           THEN FPT$READ.KEY_ = VECTOR(HKEY);
      192    12540    1           ELSE FPT$READ.KEY_ = VECTOR(KEY);
      193    12541    1           FPT$READ.BUF_.BUF$ = LOC$;      /* COPY BUFFER POINTER                */
      194    12542    1           KEY.SIZ = 5;                    /* BUILD PROGRAM OR ROSEG RECORD KEY  */
      195    12543    1           KEY.TYP = TYPE;
      196    12544    1           KEY.NODE = NODE;                /* Set ovly node or segid             */
      197    12545    1           IF TYPE = %TYPPROG
      198    12546    2           THEN DO;
      199    12547    2                KEY.ADR = LOC;
      200    12548    2                INCR = RECSIZE - MOD(KEY.ADR,RECSIZE);
      201    12549    2                END;
      202    12550    2           ELSE DO;
      203    12551    2                KEY.ADR = 0;
      204    12552    2                INCR = RECSIZE;
      205    12553    2                END;
      206    12554    2           DO UNTIL (AUTO_TOTSIZE <= 0);
      207    12555        /* HERE ISSUE AN M$READ WITH SIZE = RECSIZE*4, BUF = BUF$, KEY = KEY$ */
      208    12556        /* IF WE GET AN ALTERNATE RETURN, GO TO BAD_READ.                     */
      209    12557    2                FPT$READ.BUF_.BOUND = MINIMUM( AUTO_TOTSIZE ,
      210    12558    2                  INCR) * 4 - 1;
      211    12559    2                B$LS$->B$MLS.MISC2 = READ_DS;
      212    12560    2                CALL M$MREAD(FPT$READ)
      213    12561    3                WHENALTRETURN DO;
PL6.E3A0      #003=JSF$READ_DS File=JSF$UTIL.:E05TSI                             TUE 07/29/97 23:46 Page:35   
      214    12562    3                     ERR = B$JIT$->B$JIT.ERR.CODE; /* PASS BACK ERROR CODE       */
      215    12563    3                     IF ERR ~= %E$NOKEY OR TYPE = %TYPHEAD
      216    12564    3                       OR TYPE = %TYPROS
      217    12565    3                     THEN
      218    12566    3                          ALTRETURN;
      219    12567    4                     ELSE DO;
      220    12568    4                          B$JIT.ERR = '0'B;
      221    12569    4                          ERR=0;
      222    12570    4                          B$LS$->B$MLS.MISC2 = READ_DS;
      223    12571    4                          IF NOT IS_DS THEN
      224    12572    4                               CALL JSN$BLNK (FPT$READ.BUF_);
      225    12573    4                          END;
      226    12574    3                     END;
      227    12575    2                FPT$READ.BUF_.BUF$ = PINCRW(FPT$READ.BUF_.BUF$,INCR);
      228    12576    2                KEY.ADR = KEY.ADR + INCR;
      229    12577    2                AUTO_TOTSIZE=AUTO_TOTSIZE-INCR;
      230    12578    2                INCR = RECSIZE;
      231    12579    2                END;
      232    12580    1           RETURN;
      233    12581        /**/
      234    12582    1   END JSF$READ_DS;
      235    12583
      236    12584        %EOD;

PL6.E3A0      #003=JSF$READ_DS File=JSF$UTIL.:E05TSI                             TUE 07/29/97 23:46 Page:36   
--  Include file information  --

   B_MLSMAC_C.:E05TOU  is referenced.
   B$OBJECT_C.:E05TOU  is referenced.
   CP_6_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B_ERRORS_C.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  is referenced.
   U$JIT_C.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure JSF$READ_DS.

   Procedure JSF$READ_DS requires 125 words for executable code.
   Procedure JSF$READ_DS requires 34 words of local(AUTO) storage.

PL6.E3A0      #003=JSF$READ_DS File=JSF$UTIL.:E05TSI                             TUE 07/29/97 23:46 Page:37   

 Object Unit name= JSF$READ_DS                                File name= JSF$UTIL.:E05TOU
 UTS= JUL 29 '97 23:46:00.16 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$LM
    1  RoData even  UTS     16     20  JSF$READ_DS
    2   DCB   even  none     0      0  M$UC
    3   Proc  even  none   125    175  JSF$READ_DS
    4  RoData even  none     2      2  JSF$READ_DS

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     3      0   yes    yes     yes      Std        6  JSF$READ_DS
     3     10          yes     yes      Std        6  JSF$READ

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       1 M$MREAD
         yes           Std       1 JSN$BLNK
                       nStd      0 X66_AUTO_N
                       nStd      0 X66_ARET
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_AALT
PL6.E3A0      #003=JSF$READ_DS File=JSF$UTIL.:E05TSI                             TUE 07/29/97 23:46 Page:38   

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$LM                                  M$UC                             r    B$LS$
r    B$JIT$                                B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID                                 NULLSID
PL6.E3A0      #003=JSF$READ_DS File=JSF$UTIL.:E05TSI                             TUE 07/29/97 23:46 Page:39   


      122        1        /*T***********************************************************/
      123        2        /*T*                                                         */
      124        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      125        4        /*T*                                                         */
      126        5        /*T***********************************************************/
      127        6        /*F*   NAME:   JSF$READ                                            */
      128        7        /*F*   PURPOSE: To read all of an indicated record type from the   */
      129        8        /*,*           run unit assigned to M$LM into an indicated buffer. */
      130        9        JSF$READ_DS: PROC(TYPE,RECSIZE,TOTSIZE,LOC$,NODE,ERR) ALTRET;

      9  3 000000   000000 700200 xent  JSF$READ_DS  TSX0  ! X66_AUTO_N
         3 000001   000042 000006                    ZERO    34,6

      131       10                                                /**/
      132       11    1   DCL TYPE SBIN;                          /* RECORD TYPE CODE                   */
      133       12    1   DCL RECSIZE SBIN;                  /* MAX RECORD SIZE FOR THE RECORD TYPE     */
      134       13    1   DCL TOTSIZE SBIN;                  /* TOTAL SIZE OF ALL RECORDS OF A TYPE     */
      135       14    1   DCL LOC$ PTR;                           /* POINTER TO THE BUFFER TO BE USED   */
      136       15    1   DCL LOC REDEF LOC$ UBIN HALF;
      137       16    1   DCL NODE UBIN;                /* Node # for overlays, SEGID for data segs     */
      138       17    1   DCL ERR SBIN;                           /* ERROR CODE TO BE RETURNED          */
      139       18                                                /**/
      140       19    1   DCL AUTO_TOTSIZE SBIN;
      141       20    1   DCL M$LM DCB;
      142       21    1   DCL INCR SBIN;
      143       22    1   DCL 1 KEY DALIGNED,
      144       23    1         2 SIZ UBIN(9) UNAL,
      145       24    1         2 TYP UBIN(9) UNAL,
      146       25    1         2 NODE UBIN(18) UNAL,
      147       26    1         2 ADR UBIN(18) UNAL;
      148       27    1   DCL READ_DS BIT(72) DALIGNED;
      149       28    1   DCL IS_DS BIT(1);
      150       29
      151       30    1   DCL 1 HKEY DALIGNED CONSTANT,
      152       31    1         2 SIZ UBIN(9) UNAL INIT(4),
      153       32    1         2 TXT CHAR(4) UNAL INIT('HEAD');
PL6.E3A0      #003=JSF$READ_DS File=JSF$UTIL.:E05TSI                             TUE 07/29/97 23:46 Page:40   
      154       33    1   DCL M$MREAD ENTRY(1) ALTRET;
      155       34    1   DCL JSN$BLNK ENTRY(1);
      156       35        /**/
      157       36                                                /**/
      158       37        %INCLUDE U$JIT_C;                       /* JIT DEFINITIONS USED BY JSF$READ   */
      159      536        %INCLUDE B_ERRORS_C;                    /* ERROR CODES                        */
      160     1663        %INCLUDE CP_6;                          /* STATIC FPT-GENERATING MACROS       */
      161     7222
      162     7223        %INCLUDE B$OBJECT_C;
      163    10653        %LIST;
      164    10654          %B$RECORDSUBS;
             10655        %EQU TYPHEAD=0 ;
             10656        %EQU TYPDNAM=1 ;
             10657        %EQU TYPRNAM=2 ;
             10658        %EQU TYPSECT=3 ;
             10659        %EQU TYPEDEF=4 ;
             10660        %EQU TYPEREF=5 ;
             10661        %EQU TYPSDEF=6 ;
             10662        %EQU TYPSREF=7 ;
             10663        %EQU TYPSEGDEF=8 ;
             10664        %EQU TYPSEGREF=9 ;
             10665        %EQU TYPPROG=10 ;
             10666        %EQU SUBTYPPROG=0 ;
             10667        %EQU SUBTYPREL=1 ;
             10668        %EQU TYPLOGBLK=11 ;
             10669        %EQU TYPINTNTRY=12 ;
             10670        %EQU TYPEXST=13 ;
             10671        %EQU TYPVREBL=14 ;
             10672        %EQU TYPDBGNAM=15 ;
             10673        %EQU TYPLV1LB=16 ;
             10674        %EQU TYPLV1=17 ;
             10675        %EQU TYPDATASEG=18 ;
             10676        %EQU TYPRUM=20 ;
             10677        %EQU TYPBIRTH=21 ;
             10678        %EQU TYPPLOVER=22 ;
             10679        %EQU TYPCOMPID=23 ;
             10680        %EQU TYPROS=30 ;
PL6.E3A0      #003=JSF$READ_DS File=JSF$UTIL.:E05TSI                             TUE 07/29/97 23:46 Page:41   
      165    10682        %PLIST;
      166    10683
      167    10684        %INCLUDE B_MLSMAC_C;
      168    11626        %B_MLS(FPTN=B$MLS,STCLASS=BASED);
      169    12441
      170    12442    1   DCL B$LS$ PTR SYMREF READONLY;
      171    12443    1   DCL B$JIT$ PTR SYMREF READONLY;
      172    12444
      173    12445        %FPT_READ(FPTN=FPT$READ,STCLASS=AUTO);
      174    12484        %FPT_READ(STCLASS=CONSTANT,DCB=M$LM,KEYS=YES);
      175    12523
      176    12524        %EJECT;
PL6.E3A0      #003=JSF$READ_DS File=JSF$UTIL.:E05TSI                             TUE 07/29/97 23:46 Page:42   
      177    12525
      178    12526                                 /* This entry for reading initialized data segments  */
      179    12527    1           READ_DS = B$LS$->B$MLS.MISC2;

  12527  3 000002   000000 470400 xsym               LDP0    B$LS$
         3 000003   000260 237100                    LDAQ    176,,PR0
         3 000004   200016 757100                    STAQ    READ_DS,,AUTO

      180    12528    1           IS_DS = '1'B;

  12528  3 000005   400000 236003                    LDQ     -131072,DU
         3 000006   200020 756100                    STQ     IS_DS,,AUTO

      181    12529    1           GOTO COMMON;

  12529  3 000007   000013 710000 3                  TRA     COMMON

      182    12530
      183    12531    1   JSF$READ: ENTRY(TYPE,RECSIZE,TOTSIZE,LOC$,NODE,ERR) ALTRET;

  12531  3 000010   000000 700200 xent  JSF$READ     TSX0  ! X66_AUTO_N
         3 000011   000042 000006                    ZERO    34,6

      184    12532    1           IS_DS = '0'B;

  12532  3 000012   200020 450100                    STZ     IS_DS,,AUTO

      185    12533    1   COMMON:
      186    12534    1           IF TOTSIZE = 0 THEN RETURN;     /* DEGENERATE CASE                    */

  12534  3 000013   200005 470500       COMMON       LDP0    @TOTSIZE,,AUTO
         3 000014   000000 235100                    LDA     0,,PR0
         3 000015   000017 601000 3                  TNZ     s:12535

  12534  3 000016   000000 702200 xent               TSX2  ! X66_ARET

      187    12535    1           AUTO_TOTSIZE = TOTSIZE;
PL6.E3A0      #003=JSF$READ_DS File=JSF$UTIL.:E05TSI                             TUE 07/29/97 23:46 Page:43   

  12535  3 000017   200011 755100                    STA     AUTO_TOTSIZE,,AUTO

      188    12536    1           FPT$READ = FPT_READ;

  12536  3 000020   000100 100400                    MLR     fill='000'O
         3 000021   000002 000070 1                  ADSC9   FPT_READ                 cn=0,n=56
         3 000022   200022 000070                    ADSC9   FPT$READ,,AUTO           cn=0,n=56

      189    12537        /* SELECT OR BUILD THE NECESSARY KEY... */
      190    12538    1           IF TYPE = %TYPHEAD

  12538  3 000023   200003 471500                    LDP1    @TYPE,,AUTO
         3 000024   100000 235100                    LDA     0,,PR1
         3 000025   000031 601000 3                  TNZ     s:12540

      191    12539    1           THEN FPT$READ.KEY_ = VECTOR(HKEY);

  12539  3 000026   000000 237000 4                  LDAQ    0
         3 000027   200024 757100                    STAQ    FPT$READ+2,,AUTO
         3 000030   000036 710000 3                  TRA     s:12541

      192    12540    1           ELSE FPT$READ.KEY_ = VECTOR(KEY);

  12540  3 000031   000000 235000 4                  LDA     0
         3 000032   200040 452500                    STP2    FPT$READ+14,,AUTO
         3 000033   200040 236100                    LDQ     FPT$READ+14,,AUTO
         3 000034   000014 036003                    ADLQ    12,DU
         3 000035   200024 757100                    STAQ    FPT$READ+2,,AUTO

      193    12541    1           FPT$READ.BUF_.BUF$ = LOC$;      /* COPY BUFFER POINTER                */

  12541  3 000036   200006 473500                    LDP3    @LOC$,,AUTO
         3 000037   300000 236100                    LDQ     0,,PR3
         3 000040   200027 756100                    STQ     FPT$READ+5,,AUTO

      194    12542    1           KEY.SIZ = 5;                    /* BUILD PROGRAM OR ROSEG RECORD KEY  */
PL6.E3A0      #003=JSF$READ_DS File=JSF$UTIL.:E05TSI                             TUE 07/29/97 23:46 Page:44   

  12542  3 000041   005000 236003                    LDQ     2560,DU
         3 000042   200014 552140                    STBQ    KEY,'40'O,AUTO

      195    12543    1           KEY.TYP = TYPE;

  12543  3 000043   100000 236100                    LDQ     0,,PR1
         3 000044   000022 736000                    QLS     18
         3 000045   200014 552120                    STBQ    KEY,'20'O,AUTO

      196    12544    1           KEY.NODE = NODE;                /* Set ovly node or segid             */

  12544  3 000046   200007 474500                    LDP4    @NODE,,AUTO
         3 000047   400000 720100                    LXL0    0,,PR4
         3 000050   200014 440100                    SXL0    KEY,,AUTO

      197    12545    1           IF TYPE = %TYPPROG

  12545  3 000051   100000 235100                    LDA     0,,PR1
         3 000052   000012 115007                    CMPA    10,DL
         3 000053   000067 601000 3                  TNZ     s:12551

      198    12546    2           THEN DO;

      199    12547    2                KEY.ADR = LOC;

  12547  3 000054   300000 221100                    LDX1    0,,PR3
         3 000055   200015 741100                    STX1    KEY+1,,AUTO

      200    12548    2                INCR = RECSIZE - MOD(KEY.ADR,RECSIZE);

  12548  3 000056   200004 475500                    LDP5    @RECSIZE,,AUTO
         3 000057   200015 236100                    LDQ     KEY+1,,AUTO
         3 000060   000022 772000                    QRL     18
         3 000061   500000 506100                    DIV     0,,PR5
         3 000062   200040 755100                    STA     FPT$READ+14,,AUTO
         3 000063   500000 236100                    LDQ     0,,PR5
PL6.E3A0      #003=JSF$READ_DS File=JSF$UTIL.:E05TSI                             TUE 07/29/97 23:46 Page:45   
         3 000064   200040 136100                    SBLQ    FPT$READ+14,,AUTO
         3 000065   200012 756100                    STQ     INCR,,AUTO

      201    12549    2                END;

  12549  3 000066   000074 710000 3                  TRA     s:12557

      202    12550    2           ELSE DO;

      203    12551    2                KEY.ADR = 0;

  12551  3 000067   000000 221003                    LDX1    0,DU
         3 000070   200015 741100                    STX1    KEY+1,,AUTO

      204    12552    2                INCR = RECSIZE;

  12552  3 000071   200004 475500                    LDP5    @RECSIZE,,AUTO
         3 000072   500000 235100                    LDA     0,,PR5
         3 000073   200012 755100                    STA     INCR,,AUTO

      205    12553    2                END;

      206    12554    2           DO UNTIL (AUTO_TOTSIZE <= 0);

      207    12555        /* HERE ISSUE AN M$READ WITH SIZE = RECSIZE*4, BUF = BUF$, KEY = KEY$ */
      208    12556        /* IF WE GET AN ALTERNATE RETURN, GO TO BAD_READ.                     */
      209    12557    2                FPT$READ.BUF_.BOUND = MINIMUM( AUTO_TOTSIZE ,

  12557  3 000074   200012 236100                    LDQ     INCR,,AUTO
         3 000075   200011 116100                    CMPQ    AUTO_TOTSIZE,,AUTO
         3 000076   000100 604400 3                  TMOZ    s:12557+4
         3 000077   200011 236100                    LDQ     AUTO_TOTSIZE,,AUTO
         3 000100   000002 736000                    QLS     2
         3 000101   000001 136007                    SBLQ    1,DL
         3 000102   000020 736000                    QLS     16
         3 000103   200026 676100                    ERQ     FPT$READ+4,,AUTO
         3 000104   000034 376000 xsym               ANQ     B_VECTNIL+28
PL6.E3A0      #003=JSF$READ_DS File=JSF$UTIL.:E05TSI                             TUE 07/29/97 23:46 Page:46   
         3 000105   200026 656100                    ERSQ    FPT$READ+4,,AUTO

      210    12558    2                  INCR) * 4 - 1;
      211    12559    2                B$LS$->B$MLS.MISC2 = READ_DS;

  12559  3 000106   200016 237100                    LDAQ    READ_DS,,AUTO
         3 000107   000000 470400 xsym               LDP0    B$LS$
         3 000110   000260 757100                    STAQ    176,,PR0

      212    12560    2                CALL M$MREAD(FPT$READ)

  12560  3 000111   200022 631500                    EPPR1   FPT$READ,,AUTO
         3 000112   200040 451500                    STP1    FPT$READ+14,,AUTO
         3 000113   200040 630500                    EPPR0   FPT$READ+14,,AUTO
         3 000114   000017 631400 xsym               EPPR1   B_VECTNIL+15
         3 000115   000000 701000 xent               TSX1    M$MREAD
         3 000116   000120 702000 3                  TSX2    s:12562
         3 000117   000153 710000 3                  TRA     s:12575

      213    12561    3                WHENALTRETURN DO;

      214    12562    3                     ERR = B$JIT$->B$JIT.ERR.CODE; /* PASS BACK ERROR CODE       */

  12562  3 000120   000000 470400 xsym               LDP0    B$JIT$
         3 000121   000012 236100                    LDQ     10,,PR0
         3 000122   000003 772000                    QRL     3
         3 000123   037777 376007                    ANQ     16383,DL
         3 000124   200010 471500                    LDP1    @ERR,,AUTO
         3 000125   100000 756100                    STQ     0,,PR1

      215    12563    3                     IF ERR ~= %E$NOKEY OR TYPE = %TYPHEAD

  12563  3 000126   000102 116007                    CMPQ    66,DL
         3 000127   000135 601000 3                  TNZ     s:12566
         3 000130   200003 473500                    LDP3    @TYPE,,AUTO
         3 000131   300000 235100                    LDA     0,,PR3
         3 000132   000135 600000 3                  TZE     s:12566
PL6.E3A0      #003=JSF$READ_DS File=JSF$UTIL.:E05TSI                             TUE 07/29/97 23:46 Page:47   
         3 000133   000036 115007                    CMPA    30,DL
         3 000134   000136 601000 3                  TNZ     s:12568

      216    12564    3                       OR TYPE = %TYPROS
      217    12565    3                     THEN
      218    12566    3                          ALTRETURN;

  12566  3 000135   000000 702200 xent               TSX2  ! X66_AALT

      219    12567    4                     ELSE DO;

      220    12568    4                          B$JIT.ERR = '0'B;

  12568  3 000136   000012 450100                    STZ     10,,PR0

      221    12569    4                          ERR=0;

  12569  3 000137   100000 450100                    STZ     0,,PR1

      222    12570    4                          B$LS$->B$MLS.MISC2 = READ_DS;

  12570  3 000140   200016 237100                    LDAQ    READ_DS,,AUTO
         3 000141   000000 474400 xsym               LDP4    B$LS$
         3 000142   400260 757100                    STAQ    176,,PR4

      223    12571    4                          IF NOT IS_DS THEN

  12571  3 000143   200020 234100                    SZN     IS_DS,,AUTO
         3 000144   000153 604000 3                  TMI     s:12575

      224    12572    4                               CALL JSN$BLNK (FPT$READ.BUF_);

  12572  3 000145   200026 635500                    EPPR5   FPT$READ+4,,AUTO
         3 000146   200040 455500                    STP5    FPT$READ+14,,AUTO
         3 000147   200040 630500                    EPPR0   FPT$READ+14,,AUTO
         3 000150   000017 631400 xsym               EPPR1   B_VECTNIL+15
         3 000151   000000 701000 xent               TSX1    JSN$BLNK
PL6.E3A0      #003=JSF$READ_DS File=JSF$UTIL.:E05TSI                             TUE 07/29/97 23:46 Page:48   
         3 000152   000000 011000                    NOP     0

      225    12573    4                          END;

      226    12574    3                     END;

      227    12575    2                FPT$READ.BUF_.BUF$ = PINCRW(FPT$READ.BUF_.BUF$,INCR);

  12575  3 000153   200012 236100                    LDQ     INCR,,AUTO
         3 000154   000022 736000                    QLS     18
         3 000155   200027 036100                    ADLQ    FPT$READ+5,,AUTO
         3 000156   200027 756100                    STQ     FPT$READ+5,,AUTO

      228    12576    2                KEY.ADR = KEY.ADR + INCR;

  12576  3 000157   200015 236100                    LDQ     KEY+1,,AUTO
         3 000160   000022 772000                    QRL     18
         3 000161   200012 036100                    ADLQ    INCR,,AUTO
         3 000162   000000 620006                    EAX0    0,QL
         3 000163   200015 740100                    STX0    KEY+1,,AUTO

      229    12577    2                AUTO_TOTSIZE=AUTO_TOTSIZE-INCR;

  12577  3 000164   200011 236100                    LDQ     AUTO_TOTSIZE,,AUTO
         3 000165   200012 136100                    SBLQ    INCR,,AUTO
         3 000166   200011 756100                    STQ     AUTO_TOTSIZE,,AUTO

      230    12578    2                INCR = RECSIZE;

  12578  3 000167   200004 470500                    LDP0    @RECSIZE,,AUTO
         3 000170   000000 235100                    LDA     0,,PR0
         3 000171   200012 755100                    STA     INCR,,AUTO

      231    12579    2                END;

  12579  3 000172   000000 116003                    CMPQ    0,DU
         3 000173   000074 605400 3                  TPNZ    s:12557
PL6.E3A0      #003=JSF$READ_DS File=JSF$UTIL.:E05TSI                             TUE 07/29/97 23:46 Page:49   

      232    12580    1           RETURN;

  12580  3 000174   000000 702200 xent               TSX2  ! X66_ARET

HKEY
 Sect OctLoc
   1     000   004110 105101   104*** ******                                    .HEAD...

FPT_READ
 Sect OctLoc
   1     002   000005 777640   000012 006000   000000 177640   000000 006014    ................
   1     006   000000 177640   000000 006014   000000 177640   000000 006014    ................
   1     012   000000 600000   000000 000000   000000 000000   000000 000000    ................
   1     016   000000 000000   000000 000000                                    ........

(unnamed)
 Sect OctLoc
   4     000   000001 777640   000000 006000                                    ........
      233    12581        /**/
      234    12582    1   END JSF$READ_DS;
      235    12583
      236    12584        %EOD;

PL6.E3A0      #003=JSF$READ_DS File=JSF$UTIL.:E05TSI                             TUE 07/29/97 23:46 Page:50   
--  Include file information  --

   B_MLSMAC_C.:E05TOU  is referenced.
   B$OBJECT_C.:E05TOU  is referenced.
   CP_6_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B_ERRORS_C.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  is referenced.
   U$JIT_C.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure JSF$READ_DS.
PL6.E3A0      #003=JSF$READ_DS File=JSF$UTIL.:E05TSI                             TUE 07/29/97 23:46 Page:51   

 **** Variables and constants ****

  ****  Section 001 RoData JSF$READ_DS

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     2-0-0/d STRC(504)   r     1 FPT_READ                   0-0-0/d STRC(45)    r     1 HKEY

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

    10-0-0/w PTR         r     1 @ERR                       6-0-0/w PTR         r     1 @LOC$
     7-0-0/w PTR         r     1 @NODE                      4-0-0/w PTR         r     1 @RECSIZE
     5-0-0/w PTR         r     1 @TOTSIZE                   3-0-0/w PTR         r     1 @TYPE
    11-0-0/w SBIN        r     1 AUTO_TOTSIZE              *0-0-0/w SBIN        r     1 ERR
    22-0-0/d STRC(504)   r     1 FPT$READ                  12-0-0/w SBIN        r     1 INCR
    20-0-0/b BIT         r     1 IS_DS                     14-0-0/d STRC(54)    r     1 KEY
    *0-0-0/w UBIN(18)    r     1 LOC                       *0-0-0/w PTR         r     1 LOC$
    *0-0-0/w UBIN        r     1 NODE                      16-0-0/d BIT (72)    r     1 READ_DS
    *0-0-0/w SBIN        r     1 RECSIZE                   *0-0-0/w SBIN        r     1 TOTSIZE
    *0-0-0/w SBIN        r     1 TYPE

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 B$JIT$                     0-0-0/w PTR         r     1 B$LS$

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

PL6.E3A0      #003=JSF$READ_DS File=JSF$UTIL.:E05TSI                             TUE 07/29/97 23:46 Page:52   
     0-0-0/d STRC(8856)  r     1 B$JIT                      0-0-0/d STRC(10368) r     1 B$MLS
     0-0-0N  NULL        r     1 M$LM


   Procedure JSF$READ_DS requires 125 words for executable code.
   Procedure JSF$READ_DS requires 34 words of local(AUTO) storage.
PL6.E3A0      #003=JSF$READ_DS File=JSF$UTIL.:E05TSI                             TUE 07/29/97 23:46 Page:53   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #003=JSF$READ_DS File=JSF$UTIL.:E05TSI                             TUE 07/29/97 23:46 Page:54   
          MINI XREF LISTING

AUTO_TOTSIZE
        19**DCL     12535<<ASSIGN  12554>>DOUNTIL 12557>>ASSIGN  12577<<ASSIGN  12577>>ASSIGN
B$JIT.CPFLAGS1.SLEAZE
       458**DCL       458--REDEF
B$JIT.ERR
       364**DCL     12568<<ASSIGN
B$JIT.ERR.CODE
       365**DCL     12562>>ASSIGN
B$JIT.ERR.MID
       365**DCL       365--REDEF
B$JIT$
     12443**DCL       359--IMP-PTR 12562>>ASSIGN  12568>>ASSIGN
B$LS$
     12442**DCL     12527>>ASSIGN  12559>>ASSIGN  12570>>ASSIGN
B$MLS.MISC2
     12206**DCL     12527>>ASSIGN  12559<<ASSIGN  12570<<ASSIGN
COMMON
     12534**LABEL   12529--GOTO
ERR
        17**DCL         9--PROC    12531--ENTRY   12562<<ASSIGN  12563>>IF      12569<<ASSIGN
FPT$READ
     12462**DCL     12536<<ASSIGN  12560<>CALL
FPT$READ.BUF_
     12464**DCL     12572<>CALL
FPT$READ.BUF_.BOUND
     12464**DCL     12557<<ASSIGN
FPT$READ.BUF_.BUF$
     12465**DCL     12541<<ASSIGN  12575<<ASSIGN  12575>>ASSIGN
FPT$READ.KEY_
     12462**DCL     12539<<ASSIGN  12540<<ASSIGN
FPT$READ.STATION_
     12465**DCL     12466--REDEF
PL6.E3A0      #003=JSF$READ_DS File=JSF$UTIL.:E05TSI                             TUE 07/29/97 23:46 Page:55   
FPT$READ.V.DVBYTE.REREAD#
     12477**DCL     12477--REDEF
FPT$READ.V.INDX#
     12475**DCL     12475--REDEF
FPT_READ
     12501**DCL     12536>>ASSIGN
FPT_READ.STATION_
     12504**DCL     12505--REDEF
FPT_READ.V
     12505**DCL     12501--DCLINIT
FPT_READ.V.DVBYTE.REREAD#
     12516**DCL     12516--REDEF
FPT_READ.V.INDX#
     12514**DCL     12514--REDEF
HKEY
        30**DCL     12539--ASSIGN
INCR
        21**DCL     12548<<ASSIGN  12552<<ASSIGN  12557>>ASSIGN  12575>>ASSIGN  12576>>ASSIGN  12577>>ASSIGN
     12578<<ASSIGN
IS_DS
        28**DCL     12528<<ASSIGN  12532<<ASSIGN  12571>>IF
JSN$BLNK
        34**DCL-ENT 12572--CALL
KEY
        22**DCL     12540--ASSIGN
KEY.ADR
        26**DCL     12547<<ASSIGN  12548>>ASSIGN  12551<<ASSIGN  12576<<ASSIGN  12576>>ASSIGN
KEY.NODE
        25**DCL     12544<<ASSIGN
KEY.SIZ
        23**DCL     12542<<ASSIGN
KEY.TYP
        24**DCL     12543<<ASSIGN
LOC
        15**DCL     12547>>ASSIGN
LOC$
PL6.E3A0      #003=JSF$READ_DS File=JSF$UTIL.:E05TSI                             TUE 07/29/97 23:46 Page:56   
        14**DCL         9--PROC       15--REDEF   12531--ENTRY   12541>>ASSIGN
M$MREAD
        33**DCL-ENT 12560--CALL
NODE
        16**DCL         9--PROC    12531--ENTRY   12544>>ASSIGN
READ_DS
        27**DCL     12527<<ASSIGN  12559>>ASSIGN  12570>>ASSIGN
RECSIZE
        12**DCL         9--PROC    12531--ENTRY   12548>>ASSIGN  12548>>ASSIGN  12552>>ASSIGN  12578>>ASSIGN
TOTSIZE
        13**DCL         9--PROC    12531--ENTRY   12534>>IF      12535>>ASSIGN
TYPE
        11**DCL         9--PROC    12531--ENTRY   12538>>IF      12543>>ASSIGN  12545>>IF      12563>>IF
     12563>>IF

PL6.E3A0      #004=JSF$DCBCHK File=JSF$UTIL.:E05TSI                              TUE 07/29/97 23:46 Page:57   
      237        1        /*T***********************************************************/
      238        2        /*T*                                                         */
      239        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      240        4        /*T*                                                         */
      241        5        /*T***********************************************************/
      242        6
      243        7        /*F*   NAME:   JSF$DCBCHK                                          */
      244        8        /*F*   PURPOSE: To validate the user dcb's for ASP and FETCH.      */
      245        9
      246       10        JSF$DCBCHK: PROC(ROEND$) ALTRET;
      247       11        /**/
      248       12    1   DCL ROEND$ PTR;                    /* POINTER TO END OF RUN UNIT ROSEG INFO   */
      249       13        /**/
      250       14    1   DCL I$ PTR;
      251       15    1   DCL K$ PTR;
      252       16    1   DCL 1 K REDEF K$,
      253       17    1         2 * BIT(17),
      254       18    1         2 ODD BIT(7),
      255       19    1         2 SID BIT(12);
      256       20    1   DCL PTREND$ PTR;
      257       21    1   DCL DCB$(0:0) PTR BASED;
      258       22        /**/
      259       23    1   DCL B$ROSEG$ PTR SYMREF READONLY;
      260       24        %INCLUDE B$ROSEG;                       /* READ-ONLY SEGMENT BASED DEFINITION */
      261       87        %INCLUDE F$DCB;                         /* BASED DCB DEFINITION               */
      262      136        %INCLUDE CP_6_SUBS;
      263      676        %INCLUDE B_SEGIDS_C;
      264     1215        /**/
      265     1216        %SUB B$ROSEG = B$ROSEG$->B$ROSEG;
      266     1217        /**/
      267     1218        /**/
      268     1219    1           I$ = PINCRW (B$ROSEG.DCBPTR$ , %M$1STDCB#);
      269     1220    1           PTREND$ = PINCRW (B$ROSEG.DCBPTR$ , B$ROSEG.NUMDCBS+1);
      270     1221    1           IF PTREND$ > ROEND$ THEN ALTRETURN; /* NUMDCBS IS TOO BIG             */
      271     1222        /**/
      272     1223    2           DO WHILE (I$ < PTREND$);
      273     1224    2                K$ = I$ -> DCB$ (0);
PL6.E3A0      #004=JSF$DCBCHK File=JSF$UTIL.:E05TSI                              TUE 07/29/97 23:46 Page:58   
      274     1225    2                IF K$ ~= ADDR(NIL)
      275     1226    3                THEN DO;
      276     1227    3                     IF K.SID ~= %ROSID
      277     1228    3                       OR K.ODD            /* DCB NOT DBLWD BOUND                */
      278     1229    3                       OR K$ < PTREND$     /* DCB IN ILLEGAL PLACE               */
      279     1230    3                       OR ADDR(K$->F$DCB.DCBNAME) >= ROEND$ THEN ALTRETURN;
      280     1231    3                     END;
      281     1232    2                I$ = PINCRW (I$,1);
      282     1233    2                END;
      283     1234    1           RETURN;
      284     1235    1   END JSF$DCBCHK;

PL6.E3A0      #004=JSF$DCBCHK File=JSF$UTIL.:E05TSI                              TUE 07/29/97 23:46 Page:59   
--  Include file information  --

   B_SEGIDS_C.:E05TOU  is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   F$DCB.:E05TOU  cannot be made into a system file and is referenced.
   B$ROSEG.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure JSF$DCBCHK.

   Procedure JSF$DCBCHK requires 44 words for executable code.
   Procedure JSF$DCBCHK requires 8 words of local(AUTO) storage.

    No errors detected in file JSF$UTIL.:E05TSI    .

PL6.E3A0      #004=JSF$DCBCHK File=JSF$UTIL.:E05TSI                              TUE 07/29/97 23:46 Page:60   

 Object Unit name= JSF$DCBCHK                                 File name= JSF$UTIL.:E05TOU
 UTS= JUL 29 '97 23:46:53.00 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Proc  even  none    44     54  JSF$DCBCHK
    1  RoData even  none     1      1  JSF$DCBCHK

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     0      0   yes    yes     yes      Std        1  JSF$DCBCHK

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
                       nStd      0 X66_AUTO_1
                       nStd      0 X66_AALT
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
r    B$ROSEG$                              B_VECTNIL
PL6.E3A0      #004=JSF$DCBCHK File=JSF$UTIL.:E05TSI                              TUE 07/29/97 23:46 Page:61   


      237        1        /*T***********************************************************/
      238        2        /*T*                                                         */
      239        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      240        4        /*T*                                                         */
      241        5        /*T***********************************************************/
      242        6
      243        7        /*F*   NAME:   JSF$DCBCHK                                          */
      244        8        /*F*   PURPOSE: To validate the user dcb's for ASP and FETCH.      */
      245        9
      246       10        JSF$DCBCHK: PROC(ROEND$) ALTRET;

     10  0 000000   000000 700200 xent  JSF$DCBCHK   TSX0  ! X66_AUTO_1
         0 000001   000010 000001                    ZERO    8,1

      247       11        /**/
      248       12    1   DCL ROEND$ PTR;                    /* POINTER TO END OF RUN UNIT ROSEG INFO   */
      249       13        /**/
      250       14    1   DCL I$ PTR;
      251       15    1   DCL K$ PTR;
      252       16    1   DCL 1 K REDEF K$,
      253       17    1         2 * BIT(17),
      254       18    1         2 ODD BIT(7),
      255       19    1         2 SID BIT(12);
      256       20    1   DCL PTREND$ PTR;
      257       21    1   DCL DCB$(0:0) PTR BASED;
      258       22        /**/
      259       23    1   DCL B$ROSEG$ PTR SYMREF READONLY;
      260       24        %INCLUDE B$ROSEG;                       /* READ-ONLY SEGMENT BASED DEFINITION */
      261       87        %INCLUDE F$DCB;                         /* BASED DCB DEFINITION               */
      262      136        %INCLUDE CP_6_SUBS;
      263      676        %INCLUDE B_SEGIDS_C;
      264     1215        /**/
      265     1216        %SUB B$ROSEG = B$ROSEG$->B$ROSEG;
      266     1217        /**/
      267     1218        /**/
      268     1219    1           I$ = PINCRW (B$ROSEG.DCBPTR$ , %M$1STDCB#);
PL6.E3A0      #004=JSF$DCBCHK File=JSF$UTIL.:E05TSI                              TUE 07/29/97 23:46 Page:62   

   1219  0 000002   000000 470400 xsym               LDP0    B$ROSEG$
         0 000003   000000 236100                    LDQ     0,,PR0
         0 000004   000012 036003                    ADLQ    10,DU
         0 000005   200004 756100                    STQ     I$,,AUTO

      269     1220    1           PTREND$ = PINCRW (B$ROSEG.DCBPTR$ , B$ROSEG.NUMDCBS+1);

   1220  0 000006   000002 220100                    LDX0    2,,PR0
         0 000007   000000 471500                    LDP1    0,,PR0
         0 000010   100001 633510                    EPPR3   1,X0,PR1
         0 000011   200006 453500                    STP3    PTREND$,,AUTO

      270     1221    1           IF PTREND$ > ROEND$ THEN ALTRETURN; /* NUMDCBS IS TOO BIG             */

   1221  0 000012   200003 474500                    LDP4    @ROEND$,,AUTO
         0 000013   400000 236100                    LDQ     0,,PR4
         0 000014   200006 116100                    CMPQ    PTREND$,,AUTO
         0 000015   000017 603000 0                  TRC     s:1223

   1221  0 000016   000000 702200 xent               TSX2  ! X66_AALT

      271     1222        /**/
      272     1223    2           DO WHILE (I$ < PTREND$);

   1223  0 000017   200004 236100                    LDQ     I$,,AUTO
         0 000020   200006 116100                    CMPQ    PTREND$,,AUTO
         0 000021   000053 603000 0                  TRC     s:1234

      273     1224    2                K$ = I$ -> DCB$ (0);

   1224  0 000022   200004 470500                    LDP0    I$,,AUTO
         0 000023   000000 236100                    LDQ     0,,PR0
         0 000024   200005 756100                    STQ     K$,,AUTO

      274     1225    2                IF K$ ~= ADDR(NIL)

PL6.E3A0      #004=JSF$DCBCHK File=JSF$UTIL.:E05TSI                              TUE 07/29/97 23:46 Page:63   
   1225  0 000025   000001 116000 xsym               CMPQ    B_VECTNIL+1
         0 000026   000046 600000 0                  TZE     s:1232

      275     1226    3                THEN DO;

      276     1227    3                     IF K.SID ~= %ROSID

   1227  0 000027   200005 236100                    LDQ     K$,,AUTO
         0 000030   007777 376007                    ANQ     4095,DL
         0 000031   006003 116007                    CMPQ    3075,DL
         0 000032   000045 601000 0                  TNZ     s:1230
         0 000033   200005 236100                    LDQ     K$,,AUTO
         0 000034   000000 316000 1                  CANQ    0
         0 000035   000045 601000 0                  TNZ     s:1230
         0 000036   200005 236100                    LDQ     K$,,AUTO
         0 000037   200006 116100                    CMPQ    PTREND$,,AUTO
         0 000040   000045 602000 0                  TNC     s:1230
         0 000041   200003 471500                    LDP1    @ROEND$,,AUTO
         0 000042   000140 036003                    ADLQ    96,DU
         0 000043   100000 116100                    CMPQ    0,,PR1
         0 000044   000046 602000 0                  TNC     s:1232

      277     1228    3                       OR K.ODD            /* DCB NOT DBLWD BOUND                */
      278     1229    3                       OR K$ < PTREND$     /* DCB IN ILLEGAL PLACE               */
      279     1230    3                       OR ADDR(K$->F$DCB.DCBNAME) >= ROEND$ THEN ALTRETURN;

   1230  0 000045   000000 702200 xent               TSX2  ! X66_AALT

      280     1231    3                     END;
      281     1232    2                I$ = PINCRW (I$,1);

   1232  0 000046   200004 236100                    LDQ     I$,,AUTO
         0 000047   000001 036003                    ADLQ    1,DU
         0 000050   200004 756100                    STQ     I$,,AUTO

      282     1233    2                END;

PL6.E3A0      #004=JSF$DCBCHK File=JSF$UTIL.:E05TSI                              TUE 07/29/97 23:46 Page:64   
   1233  0 000051   200006 116100                    CMPQ    PTREND$,,AUTO
         0 000052   000022 602000 0                  TNC     s:1224

      283     1234    1           RETURN;

   1234  0 000053   000000 702200 xent               TSX2  ! X66_ARET

(unnamed)
 Sect OctLoc
   1     000   000001 770000                                                    ....
      284     1235    1   END JSF$DCBCHK;

PL6.E3A0      #004=JSF$DCBCHK File=JSF$UTIL.:E05TSI                              TUE 07/29/97 23:46 Page:65   
--  Include file information  --

   B_SEGIDS_C.:E05TOU  is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   F$DCB.:E05TOU  cannot be made into a system file and is referenced.
   B$ROSEG.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure JSF$DCBCHK.
PL6.E3A0      #004=JSF$DCBCHK File=JSF$UTIL.:E05TSI                              TUE 07/29/97 23:46 Page:66   

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @ROEND$                    4-0-0/w PTR         r     1 I$
     5-0-0/w STRC        r     1 K                          5-0-0/w PTR         r     1 K$
     6-0-0/w PTR         r     1 PTREND$                   *0-0-0/w PTR         r     1 ROEND$

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 B$ROSEG$

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d STRC(3024)  r     1 B$ROSEG                    0-0-0/w PTR         r     1 DCB$(0:0)
     0-0-0/d ASTR(3528)  r     1 F$DCB


   Procedure JSF$DCBCHK requires 44 words for executable code.
   Procedure JSF$DCBCHK requires 8 words of local(AUTO) storage.

    No errors detected in file JSF$UTIL.:E05TSI    .
PL6.E3A0      #004=JSF$DCBCHK File=JSF$UTIL.:E05TSI                              TUE 07/29/97 23:46 Page:67   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #004=JSF$DCBCHK File=JSF$UTIL.:E05TSI                              TUE 07/29/97 23:46 Page:68   
          MINI XREF LISTING

B$ROSEG.DCBPTR$
        35**DCL      1219>>ASSIGN   1220>>ASSIGN
B$ROSEG.NUMDCBS
        37**DCL      1220>>ASSIGN
B$ROSEG$
        23**DCL      1219>>ASSIGN   1220>>ASSIGN   1220>>ASSIGN
DCB$
        21**DCL      1224>>ASSIGN
F$DCB.ACTPOS
       113**DCL       113--REDEF
F$DCB.ARS
        88**DCL        88--REDEF
F$DCB.ATTR
       106**DCL       107--REDEF
F$DCB.BORROW
       121**DCL       121--REDEF     121--REDEF     121--REDEF
F$DCB.DCBNAME
       134**DCL      1227--IF
F$DCB.DCBNAME.L
       135**DCL       135--IMP-SIZ
F$DCB.EOMCHAR
        92**DCL        92--REDEF
F$DCB.FLDID
       116**DCL       116--REDEF
F$DCB.FORM$
       110**DCL       110--REDEF
F$DCB.FSECT
       126**DCL       126--REDEF
F$DCB.FSN
       103**DCL       103--REDEF     103--REDEF     104--REDEF
F$DCB.HEADER$
       109**DCL       109--REDEF
PL6.E3A0      #004=JSF$DCBCHK File=JSF$UTIL.:E05TSI                              TUE 07/29/97 23:46 Page:69   
F$DCB.IXTNSIZE
       107**DCL       107--REDEF
F$DCB.LASTSTA$
        97**DCL        97--REDEF
F$DCB.LVL
       122**DCL       122--REDEF
F$DCB.NAME.C
        97**DCL        97--REDEF
F$DCB.NOEOF
       118**DCL       118--REDEF
F$DCB.NRECS
       108**DCL       108--REDEF
F$DCB.NRECX
       127**DCL       127--REDEF
F$DCB.OHDR
       119**DCL       119--REDEF
F$DCB.ORG
       102**DCL       102--REDEF
F$DCB.PRECNO
       125**DCL       125--REDEF
F$DCB.RCSZ
       130**DCL       130--REDEF
F$DCB.RES
        98**DCL        98--REDEF
F$DCB.SETX
       110**DCL       110--REDEF
F$DCB.TAB$
       109**DCL       110--REDEF
F$DCB.TDA
       124**DCL       124--REDEF
F$DCB.WSN
        99**DCL        99--REDEF
I$
        14**DCL      1219<<ASSIGN   1223>>DOWHILE  1224>>ASSIGN   1232<<ASSIGN   1232>>ASSIGN
K.ODD
        18**DCL      1227>>IF
PL6.E3A0      #004=JSF$DCBCHK File=JSF$UTIL.:E05TSI                              TUE 07/29/97 23:46 Page:70   
K.SID
        19**DCL      1227>>IF
K$
        15**DCL        16--REDEF    1224<<ASSIGN   1225>>IF       1227>>IF       1227>>IF
PTREND$
        20**DCL      1220<<ASSIGN   1221>>IF       1223>>DOWHILE  1227>>IF
ROEND$
        12**DCL        10--PROC     1221>>IF       1227>>IF
