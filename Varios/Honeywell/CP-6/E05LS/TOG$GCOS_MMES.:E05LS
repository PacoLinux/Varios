VERSION E05

PL6.E3A0      #001=TOG$GCOS_MMES File=TOG$GCOS_MMES.:E05TSI                      WED 07/30/97 06:24 Page:1    
        1        1        /*M* TOG$GCOS_MMES     TOLTS GCOS MME Service Routines */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7
        8        8        /*X* PLM=3,DCI=6,SQB=N,PRB=N,DTI=5,ENI=0,AND=Y,ECI=0,CSU=3,DIN=3,
        9        9             CTI=8,CRM=109,CRT=1,NLB=N,NTB=Y,MCL=110 */
       10       10
       11       11        /*P* NAME:         TOG$GCOS_MMES
       12       12             PURPOSE:      MME Service Routines for GCOS MMES.
       13       13             DESCRIPTION:  GCOS MMES
       14       14             REFERENCE:    CP-6 Release C0K0
       15       15        */
       16       16
       17       17        /*F* NAME:         TOG$GCOS_MMES
       18       18             PURPOSE:      MME Service Routines for GCOS MMES.
       19       19             DESCRIPTION:  MME Service Routines for the following MMES:
       20       20                             GEENDC
       21       21                             GEINOS
       22       22                             GELBAR
       23       23                             CLEARQ  (a TOLTS MME)
       24       24             LAST UPDATE:  07/28/83
       25       25             REFERENCE:    CP-6 Release C0K0
       26       26                           Carl Eichert / Scott Sheppard
       27       27        */
       28       28        %EJECT ;
PL6.E3A0      #001=TOG$GCOS_MMES File=TOG$GCOS_MMES.:E05TSI                      WED 07/30/97 06:24 Page:2    
       29       29        TOG$GCOS_MMES: PROC(MME,MREG,MME_INSTR$,RETURN_DELTA);
       30       30
       31       31        /* Include Files */
       32       32
       33       33           %INCLUDE B$JIT;
       34      636           %INCLUDE CP_6;
       35     6195           %INCLUDE CP_6_SUBS;
       36     6735           %INCLUDE TOT_TOLTS_M;
       37     7853           %INCLUDE TOT_RQSTS_E ;
       38     7895           %INCLUDE TO_PERR_C ;
       39     8480
       40     8481        /* Parameters */
       41     8482
       42     8483           %MME ;
       43     8504           %MREG ;
       44     8526           %MME_INSTR$ ;
       45     8529           %RETURN_DELTA ;
       46     8532
       47     8533        /* Fault Frame Declarations */
       48     8534
       49     8535           %B$EXCFR;
       50     8553           %B$TCB;
       51     8556           %B$ALT;
       52     8564
       53     8565        /* Function Parameter Tables */
       54     8566
       55     8567           %FPT_STIMER (FPTN = STIMER_FPT,
       56     8568                        UENTRY = TOF$FAULTS,
       57     8569                        UTYPE = TUN);
       58     8584
       59     8585           %FPT_WRITE (FPTN = CONSOLE_FPT,
       60     8586                       STCLASS = SYMREF);
       61     8617           %EJECT;
PL6.E3A0      #001=TOG$GCOS_MMES File=TOG$GCOS_MMES.:E05TSI                      WED 07/30/97 06:24 Page:3    
       62     8618        /* Variables */
       63     8619
       64     8620           %IS$ (STCLASS = CONSTANT) ;
       65     8634    1      DCL 1 ISC_GEINOS_DATA STATIC,
       66     8635    1            2 OP_CODE UBIN (36) UNAL,
       67     8636    1            2 FILE_ADR UBIN (18) UNAL,
       68     8637    1            2 DCW_ADR UBIN (18) UNAL,
       69     8638    1            2 STATUS_ADR UBIN (18) UNAL,
       70     8639    1            2 CC_ADR UBIN (18) UNAL;
       71     8640    1      DCL ISC_WRITE_DATA (0:2) UBIN (36) STATIC;
       72     8641    1      DCL 1 ISR_V DALIGNED STATIC,
       73     8642    1            2 SIZE UBIN (20) UNAL,
       74     8643    1            2 FLAGS BIT (9) UNAL INIT ('777'O),
       75     8644    1            2 V BIT (2) UNAL INIT ('01'B),
       76     8645    1            2 * UBIN (5) UNAL,
       77     8646    1            2 BASE UBIN (20) UNAL,
       78     8647    1            2 * UBIN (4) UNAL INIT (0),
       79     8648    1            2 SEGID UBIN (12) UNAL INIT (%IS_SEGID),
       80     8649    1            2 * BIT (72) UNAL;
       81     8650    1      DCL 1 LOC1 BASED ALIGNED,
       82     8651    1            2 BAR,
       83     8652    1              3 BASE UBIN (9) UNAL,
       84     8653    1              3 BOUNDS UBIN (9) UNAL,
       85     8654    1            2 LOC2$ UBIN (18) UNAL,
       86     8655    1            2 IC UBIN (18) UNAL,
       87     8656    1            2 I UBIN (18) UNAL;
       88     8657           %VLP_ERRCODE (FPTN = TOG_ERROR_CODE,
       89     8658                         FCG  = 'TO',
       90     8659                         MID  = 'G',
       91     8660                         SEV  = 0) ;
       92     8705           %EJECT ;
PL6.E3A0      #001=TOG$GCOS_MMES File=TOG$GCOS_MMES.:E05TSI                      WED 07/30/97 06:24 Page:4    
       93     8706        /* External Variables */
       94     8707
       95     8708    1      DCL B$TCB$                  PTR SYMREF;
       96     8709    1      DCL B$JIT$                  PTR SYMREF;
       97     8710    1      DCL TOD$SPA$                PTR SYMREF;
       98     8711           %TOF$BAR (STCLASS = SYMREF) ;
       99     8734    1      DCL TOF$GELBAR_ADDRESS_REGS (0:7) PTR SYMREF;
      100     8735    1      DCL TOF$GELBAR_EIS_REGS     (0:7) UBIN(36) SYMREF;
      101     8736    1      DCL TOF$GELBAR_REGISTERS    (0:7) UBIN(36) SYMREF;
      102     8737    1      DCL 1 TOF$GELBAR_INDICATORS SYMREF,
      103     8738    1            2 *    UBIN (18) UNAL,
      104     8739    1            2 I    UBIN (18) UNAL;
      105     8740    1      DCL 1 TOF$GELBAR_IC SYMREF,
      106     8741    1            2 IC   UBIN (18) UNAL,
      107     8742    1            2 *    UBIN (6) UNAL,
      108     8743    1            2 *    UBIN (12) UNAL;
      109     8744    1      DCL TOF$ISR_VECTOR          BIT(72) SYMREF;
      110     8745    1      DCL TOF$SISR_RV             REMEMBER SYMREF;
      111     8746    1      DCL TOK$CC_RETURN           REMEMBER SYMREF;
      112     8747           %TOQ$DCP (STCLASS = SYMREF) ;
      113     8779           %TOT$ECP (STCLASS = SYMREF) ;
      114     8828
      115     8829        /* Data Control Blocks */
      116     8830
      117     8831           %M$DCB (DCBN = M$EISPACT,
      118     8832                   ASN = FILE,
      119     8833                   FUN = CREATE,
      120     8834                   NAME = 'EISPACT_SV',
      121     8835                   ORG = KEYED,
      122     8836                   ACS = DIRECT,
      123     8837                   DISP = SCRATCH);
      124     8911           %EJECT ;
PL6.E3A0      #001=TOG$GCOS_MMES File=TOG$GCOS_MMES.:E05TSI                      WED 07/30/97 06:24 Page:5    
      125     8912        /* External Entries */
      126     8913
      127     8914    1      DCL TOF$FAULTS                ENTRY ASYNC;
      128     8915    1      DCL TOD$DISPATCHER            ENTRY(3);
      129     8916    1      DCL TOK$COURTESY_CALL         ENTRY(1);
      130     8917    1      DCL TOT$BCD_ASCII             ENTRY (3);
      131     8918    1      DCL TOT$CONSOLE_OUT           ENTRY;
      132     8919    1      DCL TOQ$DEBUG                 ENTRY;
      133     8920    1      DCL TOX$ERROR                 ENTRY (1) ;
      134     8921           %EJECT;
PL6.E3A0      #001=TOG$GCOS_MMES File=TOG$GCOS_MMES.:E05TSI                      WED 07/30/97 06:24 Page:6    
      135     8922        /*D* NAME:         TOG$GCOS_MMES
      136     8923             INTERFACE:    TOG$MME_GEENDC
      137     8924                           TOG$MME_GEINOS
      138     8925                           TOG$MME_GELBAR
      139     8926                           TOG$MME_GCLEARQ
      140     8927             INPUT:        MME contains the MME instruction and the next
      141     8928                             6 words from the subexec's memory.
      142     8929                           MREG contains the standard instruction set registers
      143     8930                             at the time of the MME.
      144     8931                           MME_INSTR$ is a pointer to the MME instruction.
      145     8932             OUTPUT:       RETURN_DELTA is the number of instructions to
      146     8933                             return past the MME instruction on return to the
      147     8934                             subexec.
      148     8935             DESCRIPTION:  Merely decodes the MME number (bits 0-17 of the
      149     8936                           MME instruction) and calls the appropriate MME
      150     8937                           Service Routine.  All return here for return to the
      151     8938                           subexec except MME GELBAR and GEENDC which
      152     8939                           use the UNWIND statement to return to the subexec
      153     8940                           directly or TOK$COURTEST_CALL, respectively.
      154     8941
      155     8942                           See the docementation for the respective MME
      156     8943                           Service Routines for further detail.
      157     8944        */
      158     8945        %EJECT;
PL6.E3A0      #001=TOG$GCOS_MMES File=TOG$GCOS_MMES.:E05TSI                      WED 07/30/97 06:24 Page:7    
      159     8946        /* Main Code */
      160     8947
      161     8948    1      IF MME.INST.NO > 0
      162     8949    2      THEN DO CASE (MME.INST.NO);
      163     8950    2              CASE (%GEENDC);
      164     8951    2                 CALL TOG$MME_GEENDC(RETURN_DELTA);
      165     8952    2              CASE (%GEINOS);
      166     8953    2                 CALL TOG$MME_GEINOS(MME.WD_1,MME.WD_2,MME.WD_3,MME.WD_4,
      167     8954    2                         MME.WD_5,RETURN_DELTA);
      168     8955    2              CASE (%GELBAR);
      169     8956    2                 CALL TOG$MME_GELBAR(MREG.A,MREG.Q,RETURN_DELTA);
      170     8957    2           END /* THEN */ ;
      171     8958    1      ELSE CALL TOG$MME_CLEARQ(RETURN_DELTA);
      172     8959    1      RETURN;
      173     8960
      174     8961        /* END TOG$GCOS_MMES */
      175     8962        %EJECT;
PL6.E3A0      #001=TOG$GCOS_MMES File=TOG$GCOS_MMES.:E05TSI                      WED 07/30/97 06:24 Page:8    
      176     8963        /*I* NAME:         TOG$MME_CLEARQ
      177     8964             INTERFACE:    STORE_CLEARQ_ISC_STATUS
      178     8965                           PAY_CLEARQ_ISC_CC
      179     8966             INPUT:        None.
      180     8967             OUTPUT:       RETURN_DELTA = 1
      181     8968             DESCRIPTION:  Checks TOT$ECP.ISC.READ_OUT flag to see if a subexec
      182     8969                           has an Interslave Read outstanding.  If there is,
      183     8970                           it is canceled and status returned and a Courtesy
      184     8971        */
      185     8972
      186     8973    1   TOG$MME_CLEARQ: PROC(RETURN_DELTA);
      187     8974
      188     8975    2      DCL RETURN_DELTA SBIN HALF;
      189     8976
      190     8977        /* Code */
      191     8978
      192     8979    2      IF TOT$ECP.ISC.READ_OUT
      193     8980    3      THEN DO;
      194     8981    3              CALL STORE_CLEARQ_ISC_STATUS;
      195     8982    3              CALL PAY_CLEARQ_ISC_CC;
      196     8983    3              TOT$ECP.ISC.READ_OUT = %FALSE ;
      197     8984    3              ISC_GEINOS_DATA = '0'B;
      198     8985    3           END;
      199     8986    2      ELSE /* Do Nothing */ ;
      200     8987    2      RETURN_DELTA = 1;
      201     8988    2      RETURN;
      202     8989
      203     8990        /*END TOG$MME_CLEARQ*/
      204     8991        %EJECT;
PL6.E3A0      #001=TOG$GCOS_MMES File=TOG$GCOS_MMES.:E05TSI                      WED 07/30/97 06:24 Page:9    
      205     8992    2   STORE_CLEARQ_ISC_STATUS: PROC;
      206     8993
      207     8994    3      DCL 1 STATUS BASED ALIGNED,
      208     8995    3            2 W1 BIT (36) UNAL,
      209     8996    3            2 W2,
      210     8997    3              3 LAST_LOC UBIN (18) UNAL,
      211     8998    3              3 * UBIN (6) UNAL,
      212     8999    3              3 DCW_RESIDUE UBIN (12) UNAL;
      213     9000    3      DCL STATUS$ PTR;
      214     9001
      215     9002        /* Code */
      216     9003
      217     9004    3      IF ISC_GEINOS_DATA.STATUS_ADR = 0
      218     9005    3      THEN /* Don't return Status if zero */ ;
      219     9006    4      ELSE DO;
      220     9007    4              STATUS$ = PINCRW (IS$, ISC_GEINOS_DATA.STATUS_ADR) ;
      221     9008    4              STATUS$ -> STATUS.W1 = '400006000000'O;
      222     9009    4              STATUS$ -> STATUS.W2.DCW_RESIDUE = 0;
      223     9010    4           END;
      224     9011    3      RETURN;
      225     9012
      226     9013    3   END STORE_CLEARQ_ISC_STATUS;
      227     9014        %EJECT;
PL6.E3A0      #001=TOG$GCOS_MMES File=TOG$GCOS_MMES.:E05TSI                      WED 07/30/97 06:24 Page:10   
      228     9015    2   PAY_CLEARQ_ISC_CC: PROC;
      229     9016
      230     9017    3      DCL CC$ PTR;
      231     9018
      232     9019        /* Code */
      233     9020
      234     9021    3      IF ISC_GEINOS_DATA.CC_ADR = 0
      235     9022    3      THEN /* No Courtesy Call Required */ ;
      236     9023    4      ELSE DO;
      237     9024    4              CC$ = PINCRW (IS$, ISC_GEINOS_DATA.CC_ADR) ;
      238     9025    4              CALL TOK$COURTESY_CALL(CC$);
      239     9026    4           END;
      240     9027    3      RETURN;
      241     9028
      242     9029    3   END PAY_CLEARQ_ISC_CC;
      243     9030    2   END TOG$MME_CLEARQ;
      244     9031        %EJECT;
PL6.E3A0      #001=TOG$GCOS_MMES File=TOG$GCOS_MMES.:E05TSI                      WED 07/30/97 06:24 Page:11   
      245     9032        /*I* NAME:         TOG$MME_GEENDC
      246     9033             INTERFACE:    UNWIND TO TOK$CC_RETURN
      247     9034             DESCRIPTION:  Calls M$CLRSTK to pop the top frame off the
      248     9035                           TCB stack.  The UNWIND TO TOK$CC_RETURN pops all
      249     9036                           the intervening auto frames between here and
      250     9037                           TOK$COURTESY_CALL, and returns control there.
      251     9038                           The auto frames that are popped belong to
      252     9039                           TOF$FAULTS and TOG$GCOS_MMES.
      253     9040        */
      254     9041
      255     9042    1   TOG$MME_GEENDC: PROC (RETURN_DELTA);
      256     9043
      257     9044    2      DCL RETURN_DELTA SBIN HALF;
      258     9045
      259     9046        /* Code */
      260     9047
      261     9048    2      CALL M$CLRSTK ;
      262     9049    2      UNWIND TO TOK$CC_RETURN;
      263     9050
      264     9051    2   END TOG$MME_GEENDC;
      265     9052        %EJECT;
PL6.E3A0      #001=TOG$GCOS_MMES File=TOG$GCOS_MMES.:E05TSI                      WED 07/30/97 06:24 Page:12   
      266     9053        /*I* NAME:         TOG$MME_GEINOS
      267     9054                             MMEWD5,RETURN_DELTA);
      268     9055             INTERFACE:    DO_ISC_READ
      269     9056                           DO_SPECIAL_ISC_READ
      270     9057                           DO_ISC_WRITE
      271     9058                           DO_CONSOLE_WRITE
      272     9059             INPUT:        MMEWD1(0-5) contains the GEINOS op code.
      273     9060                           MMEWD2(18-35) contains the address of the DCW list.
      274     9061                           MMEWD3(0-17) contains the address of the status words.
      275     9062                           MMEWD3(18-35) contains the address of the Courtesy
      276     9063                             Call routine.
      277     9064                           MMEWD4 and MMEWD5 are not presently used.
      278     9065             OUTPUT:
      279     9066             DESCRIPTION:  Based on the command passed in the first 6 bits of
      280     9067                           the first word, one of 4 routines are called
      281     9068                           to simulate in a limited way the GCOS functions(the
      282     9069                           reader is advised to reference the GCOS Manual,
      283     9070                           DD19 and the I/O Programming Manual,FDB82
      284     9071                           for further detail).
      285     9072
      286     9073                           The following are the currently legal commands:
      287     9074
      288     9075                             '01'O--Interslave read
      289     9076                             '11'O--Interslave write
      290     9077                             '13'O--Console write
      291     9078                             '02'O--Special Interslave read (immediate return)
      292     9079
      293     9080                           The above MME GEINOS commands are further
      294     9081                           restricted to the following subset:
      295     9082
      296     9083                           a.  Only a subexec can do an Interslave Read.
      297     9084                           b.  Only TOLTS can do an Interslave Write.
      298     9085        */
      299     9086        %EJECT;
PL6.E3A0      #001=TOG$GCOS_MMES File=TOG$GCOS_MMES.:E05TSI                      WED 07/30/97 06:24 Page:13   
      300     9087    1   TOG$MME_GEINOS: PROC (P_MMEWD1,P_MMEWD2,P_MMEWD3,P_MMEWD4,P_MMEWD5,
      301     9088    1              RETURN_DELTA);
      302     9089
      303     9090    2      DCL P_MMEWD1 UBIN (36);
      304     9091    2      DCL 1 MME_W1 REDEF P_MMEWD1,
      305     9092    2            2 DV_CMD UBIN (6) UNAL,
      306     9093    2            2 * UBIN (30) UNAL;
      307     9094    2      DCL P_MMEWD2 UBIN (36);
      308     9095    2      DCL 1 MME_W2 REDEF P_MMEWD2,
      309     9096    2            2 FILE_ADR UBIN (18) UNAL,
      310     9097    2            2 DCW_ADR UBIN (18) UNAL;
      311     9098    2      DCL 1 SDIA_MME_W2 REDEF P_MMEWD2,
      312     9099    2            2 FILE_ADDR UBIN (18) UNAL,
      313     9100    2            2 KEY_DCW_ADDR UBIN (18) UNAL;
      314     9101    2      DCL P_MMEWD3 UBIN (36);
      315     9102    2      DCL 1 MME_W3 REDEF P_MMEWD3,
      316     9103    2            2 STATUS_ADR UBIN (18) UNAL,
      317     9104    2            2 CC_ADR UBIN (18) UNAL;
      318     9105    2      DCL 1 SDIA_MME_W3 REDEF P_MMEWD3,
      319     9106    2            2 DV_CMD UBIN (6) UNAL,
      320     9107    2            2 * UBIN (30) UNAL;
      321     9108    2      DCL P_MMEWD4 UBIN (36);
      322     9109    2      DCL 1 SDIA_MME_W4 REDEF P_MMEWD4,
      323     9110    2            2 * UBIN (18) UNAL,
      324     9111    2            2 DATA_DCW_ADDR UBIN (18) UNAL;
      325     9112    2      DCL P_MMEWD5 UBIN (36);
      326     9113    2      DCL 1 SDIA_MME_W5 REDEF P_MMEWD5,
      327     9114    2            2 STATUS_ADDR UBIN (18) UNAL,
      328     9115    2            2 * UBIN (18) UNAL;
      329     9116    2      DCL RETURN_DELTA SBIN HALF;
      330     9117           %EJECT;
PL6.E3A0      #001=TOG$GCOS_MMES File=TOG$GCOS_MMES.:E05TSI                      WED 07/30/97 06:24 Page:14   
      331     9118
      332     9119        /* Code */
      333     9120
      334     9121    3      DO CASE (MME_W1.DV_CMD);
      335     9122    3         CASE (1);
      336     9123    3            CALL DO_ISC_READ;
      337     9124    3         CASE (2);
      338     9125    3            CALL DO_SPECIAL_ISC_READ;
      339     9126    3         CASE (9);
      340     9127    3            CALL DO_ISC_WRITE;
      341     9128    3         CASE (11);
      342     9129    3            CALL DO_CONSOLE_WRITE;
      343     9130    3         CASE (28);
      344     9131    3            CALL READ_WRITE_8K;
      345     9132    3         CASE (ELSE);
      346     9133    3            TOG_ERROR_CODE.ERR# = %E$BADGEINOS ;
      347     9134    3            CALL TOX$ERROR (TOG_ERROR_CODE) ;
      348     9135    3      END;
      349     9136    2      RETURN;
      350     9137
      351     9138        /*END TOG$MME_GEINOS*/
      352     9139        %EJECT;
PL6.E3A0      #001=TOG$GCOS_MMES File=TOG$GCOS_MMES.:E05TSI                      WED 07/30/97 06:24 Page:15   
      353     9140        /*I* NAME:         DO_ISC_READ
      354     9141             INTERFACE:    SAVE_GEINOS_DATA
      355     9142                           MOVE_TO_POLTS
      356     9143                           STORE_ISC_STATUS
      357     9144                           PAY_ISC_CC
      358     9145             INPUT:        None.
      359     9146             OUTPUT:       The MME GEINOS data is stored away, and either
      360     9147                           the read operation completed or TOT$ECP.ISC.READ_OUT flag is
      361     9148                           set for future use.
      362     9149             DESCRIPTION:  First 2 housekeeping tasks are attended to.
      363     9150                           The flag TOT$ECP.ISC.READ_OUT is checked;  if it is set,
      364     9151                           TOLTS is aborted because the present design
      365     9152                           does not allowed for this condition, which indicates
      366     9153                           that a software error exists somewhere.  Otherwise,
      367     9154                           the count of outstanding I/O, TOT$IO_COUNT, is
      368     9155                           incremented.
      369     9156
      370     9157                           The 3 word MME GEINOS call sequence is then
      371     9158                           saved for future use.  The flag ISC_WRITE_OUT is
      372     9159                           then checked; if it is set, TOLTS has already done
      373     9160                           an Interslave Write which is still outstanding,
      374     9161                           and the data is ready for the subexec.  If the flag
      375     9162                           is not set, there is no outstanding write data,
      376     9163                           and instead the TOT$ECP.ISC.READ_OUT flag is set to indicate
      377     9164                           that the subexec has an Interslave Read outstanding.
      378     9165
      379     9166                           If ISC_WRITE_OUT is set, the read operation for the
      380     9167                           subexec can take place immediately, and status
      381     9168                           returned, and a Courtesy Call paid.  This
      382     9169                           sequence of events is accomplished by calling
      383     9170                           the following subroutines:
      384     9171
      385     9172                           a.  MOVE_TO_POLTS(moves data to subexec)
      386     9173                           b.  STORE_ISC_STATUS(returns status)
      387     9174                           c.  PAY_ISC_CC(pays Courtesy Call)
      388     9175
      389     9176                           Finally, the outstanding I/O count is decremented.
PL6.E3A0      #001=TOG$GCOS_MMES File=TOG$GCOS_MMES.:E05TSI                      WED 07/30/97 06:24 Page:16   
      390     9177
      391     9178                           RETURN_DELTA is set to a 4.
      392     9179        */
      393     9180
      394     9181    2   DO_ISC_READ: PROC;
      395     9182
      396     9183        /* Code */
      397     9184
      398     9185    3      IF TOT$ECP.ISC.READ_OUT
      399     9186    4      THEN DO ;
      400     9187    4              TOG_ERROR_CODE.ERR# = %E$MULTGENRD ;
      401     9188    4              CALL TOX$ERROR (TOG_ERROR_CODE) ;
      402     9189    4           END /* THEN */ ;
      403     9190    4      ELSE DO ;
      404     9191    4              CALL SAVE_GEINOS_DATA;
      405     9192    4              IF TOT$ECP.ISC.WRITE_OUT
      406     9193    5              THEN DO;
      407     9194    5                      TOT$ECP.ISC.WRITE_OUT = %FALSE ;
      408     9195    5                      CALL MOVE_TO_POLTS;
      409     9196    5                      CALL STORE_ISC_STATUS;
      410     9197    5                      CALL PAY_ISC_CC;
      411     9198    5                   END;
      412     9199    4              ELSE TOT$ECP.ISC.READ_OUT = %TRUE ;
      413     9200    4              RETURN_DELTA = 4;
      414     9201    4              RETURN;
      415     9202    4           END /* ELSE */ ;
      416     9203
      417     9204    3   END DO_ISC_READ;
      418     9205        %EJECT;
PL6.E3A0      #001=TOG$GCOS_MMES File=TOG$GCOS_MMES.:E05TSI                      WED 07/30/97 06:24 Page:17   
      419     9206        /*I* NAME:         DO_SPECIAL_ISC_READ
      420     9207             INTERFACE:    SAVE_GEINOS_DATA
      421     9208                           MOVE_TO_POLTS
      422     9209                           STORE_ISC_STATUS
      423     9210                           PAY_ISC_CC
      424     9211             INPUT:        None.
      425     9212             OUTPUT:
      426     9213             DESCRIPTION:  This is a special case of an Interslave Read in
      427     9214                           which the read is immediately completed or a
      428     9215                           return is made immediately to the caller.  No
      429     9216                           Interslave Read request is left outstanding as a
      430     9217                           result of this form of the MME GEINOS.
      431     9218
      432     9219                           The read outstanding flag is checked to make sure
      433     9220                           there are 2 reads outstanding(TOT$ECP.ISC.READ_OUT); if
      434     9221                           there are, TOLTS aborts.
      435     9222
      436     9223                           In this case since there will be immediate return
      437     9224                           to the subexec regardless of the outcome of the
      438     9225                           Interslave operation, the count of outstanding I/O
      439     9226                           is not altered.
      440     9227
      441     9228                           If there is an Interslave Write outstanding, the
      442     9229                           read operation to the subexec is completed.
      443     9230                           Otherwise, status is returned immediately to the
      444     9231                           subexec indicating unsuccessful I/O.
      445     9232
      446     9233                           If a Read operation is to be completed, it is done
      447     9234                           in the same manner that it is done in DO_ISC_READ.
      448     9235                           The following subroutines are called:
      449     9236
      450     9237                           a.  MOVE_TO_POLTS(moves data to subexec)
      451     9238                           b.  STORE_ISC_STATUS(returns status)
      452     9239                           c.  PAY_ISC_CC(pays Courtesy Call)
      453     9240
      454     9241                           If the Read operation is not to be completed,
      455     9242                           status is returned to the subexec to indicate so.
PL6.E3A0      #001=TOG$GCOS_MMES File=TOG$GCOS_MMES.:E05TSI                      WED 07/30/97 06:24 Page:18   
      456     9243                           Word 1 of the status is set to '430100000000'O to
      457     9244                           indicate "I/O not successful", and the DCW residue
      458     9245                           in Word 2 is set to zero.
      459     9246
      460     9247                           RETURN_DELTA is set to 4.
      461     9248        */
      462     9249
      463     9250    2   DO_SPECIAL_ISC_READ: PROC;
      464     9251
      465     9252    3      DCL 1 STATUS BASED ALIGNED,
      466     9253    3            2 W1 BIT (36),
      467     9254    3            2 W2,
      468     9255    3              3 * UBIN (24) UNAL,
      469     9256    3              3 DCW_RESIDUE UBIN (12) UNAL;
      470     9257    3      DCL STATUS$ PTR;
      471     9258           %EJECT ;
PL6.E3A0      #001=TOG$GCOS_MMES File=TOG$GCOS_MMES.:E05TSI                      WED 07/30/97 06:24 Page:19   
      472     9259        /* Code */
      473     9260
      474     9261    3      IF TOT$ECP.ISC.READ_OUT
      475     9262    4      THEN DO ;
      476     9263    4              TOG_ERROR_CODE.ERR# = %E$MULTGENRD ;
      477     9264    4              CALL TOX$ERROR (TOG_ERROR_CODE) ;
      478     9265    4           END /* THEN */ ;
      479     9266    4      ELSE DO ;
      480     9267    4              CALL SAVE_GEINOS_DATA;
      481     9268    4              IF TOT$ECP.ISC.WRITE_OUT
      482     9269    5              THEN DO;
      483     9270    5                      TOT$ECP.ISC.WRITE_OUT = %FALSE ;
      484     9271    5                      CALL MOVE_TO_POLTS;
      485     9272    5                      CALL STORE_ISC_STATUS;
      486     9273    5                      CALL PAY_ISC_CC;
      487     9274    5                   END;
      488     9275    4              ELSE IF ISC_GEINOS_DATA.STATUS_ADR = 0
      489     9276    4                 THEN /* Don't return status */ ;
      490     9277    5                 ELSE DO;
      491     9278    5                         STATUS$ = PINCRW (IS$, ISC_GEINOS_DATA.STATUS_ADR) ;
      492     9279    5                         STATUS$ -> STATUS.W1 = '430100000000'O;
      493     9280    5                         STATUS$ -> STATUS.W2.DCW_RESIDUE = 0;
      494     9281    5                      END;
      495     9282    4              RETURN_DELTA = 4;
      496     9283    4              RETURN;
      497     9284    4           END /* ELSE */ ;
      498     9285
      499     9286    3   END DO_SPECIAL_ISC_READ;
      500     9287        %EJECT;
PL6.E3A0      #001=TOG$GCOS_MMES File=TOG$GCOS_MMES.:E05TSI                      WED 07/30/97 06:24 Page:20   
      501     9288        /*I* NAME:         DO_ISC_WRITE
      502     9289             INTERFACE:    MOVE_FROM_TOLTS
      503     9290                           MOVE_TO_POLTS
      504     9291                           STORE_ISC_STATUS
      505     9292                           PAY_ISC_CC
      506     9293                           TOD$DISPATCHER
      507     9294             INPUT:        None.
      508     9295             OUTPUT:       The MME GEINOS data is stored away, and either the
      509     9296                           write operation completed or ISC_WRITE_OUT flag is
      510     9297                           set.
      511     9298             DESCRIPTION:  First a housekeeping task is attended to.
      512     9299                           The write outstanding flag, ISC_WRITE_OUT is checked
      513     9300                           to make sure another interslave write request
      514     9301                           is not outstanding.  If there is one, REQUEUE_WRITE
      515     9302                           is called to put the Interslave Write request
      516     9303                           back into the dispatcher queue for a later try.
      517     9304
      518     9305                           Note that the count of outstanding I/O is not
      519     9306                           incremented here because TOT$IO_COUNT is
      520     9307                           supposed to be only a count of I/O outstanding from
      521     9308                           the subexecs.
      522     9309
      523     9310                           The subroutine MOVE_FROM_TOLTS is called to move
      524     9311                           the Interslave Write data from TOLTS into an
      525     9312                           internal buffer here.  Then if there is an
      526     9313                           outstanding Interslave Read request from a
      527     9314                           subexec, the write operation is completed
      528     9315                           immediately.  Otherwise, the write outstanding flag
      529     9316                           ISC_WRITE_OUT is set.
      530     9317
      531     9318                           The write operation is completed by calling the
      532     9319                           following sequence of subroutines:
      533     9320
      534     9321                           a.  MOVE_TO_POLTS(move data to subexec)
      535     9322                           b.  STORE_ISC_STATUS(return status to subexec)
      536     9323                           c.  PAY_ISC_CC(pay Courtesy Call)
      537     9324
PL6.E3A0      #001=TOG$GCOS_MMES File=TOG$GCOS_MMES.:E05TSI                      WED 07/30/97 06:24 Page:21   
      538     9325                           Finally, the count of outstanding I/O is decremented.
      539     9326
      540     9327                           RETURN_DELTA is set to 4.
      541     9328        */
      542     9329
      543     9330    2   DO_ISC_WRITE: PROC;
      544     9331
      545     9332        /* Code */
      546     9333
      547     9334    3      IF TOT$ECP.ISC.WRITE_OUT
      548     9335    3      THEN CALL REQUEUE_WRITE;
      549     9336    4      ELSE DO;
      550     9337    4              CALL MOVE_FROM_TOLTS;
      551     9338    4              IF TOT$ECP.ISC.READ_OUT
      552     9339    5              THEN DO;
      553     9340    5                      TOT$ECP.ISC.READ_OUT = %FALSE ;
      554     9341    5                      CALL MOVE_TO_POLTS;
      555     9342    5                      CALL STORE_ISC_STATUS;
      556     9343    5                      CALL PAY_ISC_CC;
      557     9344    5                   END;
      558     9345    4              ELSE TOT$ECP.ISC.WRITE_OUT = %TRUE ;
      559     9346    4           END;
      560     9347    3      RETURN_DELTA = 4;
      561     9348    3      RETURN;
      562     9349
      563     9350    3   END DO_ISC_WRITE;
      564     9351        %EJECT;
PL6.E3A0      #001=TOG$GCOS_MMES File=TOG$GCOS_MMES.:E05TSI                      WED 07/30/97 06:24 Page:22   
      565     9352        /*I* NAME:         REQUEUE_WRITE
      566     9353             DESCRIPTION:  Fetches the interslave write data from TOLTS and
      567     9354                           stores it in QUEUE_ENTRY, and calls the TOLTS
      568     9355                           dispatcher (TOD$DISPATCHER) to put the Interslave
      569     9356                           write request back into the queue.
      570     9357        */
      571     9358
      572     9359    2   REQUEUE_WRITE: PROC;
      573     9360
      574     9361    3      DCL DATA (0:2) UBIN (36) BASED ALIGNED;
      575     9362    3      DCL DATA$ PTR;
      576     9363    3      DCL 1 DCW BASED ALIGNED,
      577     9364    3            2 ADR UBIN (18) UNAL,
      578     9365    3            2 * UBIN (18) UNAL;
      579     9366    3      DCL  DCW$ PTR;
      580     9367    3      DCL QUEUE_ENTRY (0:2) UBIN(36);
      581     9368    3      DCL REQUEST_TYPE UBIN(36);
      582     9369    3      DCL SERVICE_CODE UBIN(18);
      583     9370
      584     9371        /* Code */
      585     9372
      586     9373    3      DCW$ = PINCRW (IS$, MME_W2.DCW_ADR) ;
      587     9374    3      DATA$ = PINCRW (IS$, DCW$ -> DCW.ADR) ;
      588     9375    3      QUEUE_ENTRY = DATA$ -> DATA;
      589     9376    3      REQUEST_TYPE = %DRT_BUILD;
      590     9377    3      SERVICE_CODE = %DSC_ISC;
      591     9378    3      CALL TOD$DISPATCHER(REQUEST_TYPE,SERVICE_CODE,QUEUE_ENTRY);
      592     9379    3      RETURN;
      593     9380
      594     9381    3   END REQUEUE_WRITE;
      595     9382        %EJECT;
PL6.E3A0      #001=TOG$GCOS_MMES File=TOG$GCOS_MMES.:E05TSI                      WED 07/30/97 06:24 Page:23   
      596     9383        /*I* NAME:         SAVE_GEINOS_DATA
      597     9384             DESCRIPTION:  Saves the 3 word MME GEINOS calling sequence
      598     9385                           (which immediately follows the MME GEINOS instruction)
      599     9386                           in the structure ISC_GEINOS_DATA.
      600     9387
      601     9388                           The information of interest is:
      602     9389
      603     9390                           a.  Op code
      604     9391                           b.  Address of DCW list
      605     9392                           c.  Address of status return words
      606     9393                           d.  Address of Courtesy Call routine
      607     9394        */
      608     9395
      609     9396    2   SAVE_GEINOS_DATA: PROC;
      610     9397
      611     9398        /* Code */
      612     9399
      613     9400    3      ISC_GEINOS_DATA.OP_CODE = P_MMEWD1;
      614     9401    3      ISC_GEINOS_DATA.FILE_ADR = MME_W2.FILE_ADR;
      615     9402    3      ISC_GEINOS_DATA.DCW_ADR = MME_W2.DCW_ADR;
      616     9403    3      ISC_GEINOS_DATA.STATUS_ADR = MME_W3.STATUS_ADR;
      617     9404    3      ISC_GEINOS_DATA.CC_ADR = MME_W3.CC_ADR;
      618     9405    3      RETURN;
      619     9406
      620     9407    3   END SAVE_GEINOS_DATA;
      621     9408        %EJECT;
PL6.E3A0      #001=TOG$GCOS_MMES File=TOG$GCOS_MMES.:E05TSI                      WED 07/30/97 06:24 Page:24   
      622     9409        /*I* NAME:         MOVE_FROM_TOLTS
      623     9410             DESCRIPTION:  Uses the DCW list in the MME GEINOS calling
      624     9411                           sequence to move 3 words of Interslave write data
      625     9412                           from TOLTS to the arrary ISC_WRITE_DATA.
      626     9413
      627     9414                           This asssumes the DCW list consists of only 1 DCW
      628     9415                           word, which is a reasonable assumption since TOLTS
      629     9416                           build the list.
      630     9417        */
      631     9418
      632     9419    2   MOVE_FROM_TOLTS: PROC;
      633     9420
      634     9421    3      DCL DATA (0:2) UBIN (36) BASED ALIGNED;
      635     9422    3      DCL DATA$ PTR;
      636     9423    3      DCL 1 DCW BASED ALIGNED,
      637     9424    3            2 ADR UBIN (18) UNAL,
      638     9425    3            2 * UBIN (18) UNAL;
      639     9426    3      DCL  DCW$ PTR;
      640     9427
      641     9428        /* Code */
      642     9429
      643     9430    3      DCW$ = PINCRW (IS$, MME_W2.DCW_ADR) ;
      644     9431    3      DATA$ = PINCRW (IS$, DCW$ -> DCW.ADR) ;
      645     9432    3      ISC_WRITE_DATA = DATA$ -> DATA;
      646     9433    3      RETURN;
      647     9434
      648     9435    3   END MOVE_FROM_TOLTS;
      649     9436        %EJECT;
PL6.E3A0      #001=TOG$GCOS_MMES File=TOG$GCOS_MMES.:E05TSI                      WED 07/30/97 06:24 Page:25   
      650     9437        /*I* NAME:         MOVE_TO_POLTS
      651     9438             DESCRIPTION:  Uses the DCW list address stored in ISC_GEINOS_DATA
      652     9439                            to move the Interslave data from ISC_WRITE_DATA
      653     9440                           to the subexec.  This move involves 3 words of data.
      654     9441
      655     9442                           This routine assumes there is only one DCW in
      656     9443                           the list.
      657     9444        */
      658     9445
      659     9446    2   MOVE_TO_POLTS: PROC;
      660     9447
      661     9448    3      DCL DATA (0:2) UBIN (36) BASED ALIGNED;
      662     9449    3      DCL DATA$ PTR;
      663     9450    3      DCL 1 DCW BASED ALIGNED,
      664     9451    3            2 ADR UBIN (18) UNAL,
      665     9452    3            2 * UBIN (18) UNAL;
      666     9453    3      DCL DCW$  PTR;
      667     9454
      668     9455        /* Code */
      669     9456
      670     9457    3      DCW$ = PINCRW (IS$, ISC_GEINOS_DATA.DCW_ADR) ;
      671     9458    3      DATA$ = PINCRW (IS$, DCW$ -> DCW.ADR) ;
      672     9459    3      DATA$ -> DATA = ISC_WRITE_DATA;
      673     9460    3      RETURN;
      674     9461
      675     9462    3   END MOVE_TO_POLTS;
      676     9463        %EJECT;
PL6.E3A0      #001=TOG$GCOS_MMES File=TOG$GCOS_MMES.:E05TSI                      WED 07/30/97 06:24 Page:26   
      677     9464        /*I* NAME:         STORE_ISC_STATUS
      678     9465             DESCRIPTION:  On completion of an Interslave operation, returns
      679     9466                           status to the subexec only.  No status is returned
      680     9467                           to TOLTS.  The address of the status words is
      681     9468                           contained in ISC_GEINOS_DATA.  If it is 0, no status
      682     9469                           is returned to the subexec.
      683     9470
      684     9471                           If it isn't, ready status('400000000000'O) is
      685     9472                           returned in Word 1, and the DCW residue field in
      686     9473                           Word 2 is set to 0.
      687     9474        */
      688     9475
      689     9476    2   STORE_ISC_STATUS: PROC;
      690     9477
      691     9478    3      DCL 1 STATUS BASED ALIGNED,
      692     9479    3            2 W1 BIT (36),
      693     9480    3            2 W2,
      694     9481    3              3 LAST_LOC UBIN (18) UNAL,
      695     9482    3              3 * UBIN (6) UNAL,
      696     9483    3              3 DCW_RESIDUE UBIN (12) UNAL;
      697     9484    3      DCL STATUS$ PTR;
      698     9485
      699     9486        /* Code */
      700     9487
      701     9488    3      IF ISC_GEINOS_DATA.STATUS_ADR = 0
      702     9489    3      THEN /* Don't return STATUS */ ;
      703     9490    4      ELSE DO;
      704     9491    4              STATUS$ = PINCRW (IS$, ISC_GEINOS_DATA.STATUS_ADR) ;
      705     9492    4              STATUS$ -> STATUS.W1 = '400000000000'O;
      706     9493    4              STATUS$ -> STATUS.W2.DCW_RESIDUE = 0;
      707     9494    4           END;
      708     9495    3      RETURN;
      709     9496
      710     9497    3   END STORE_ISC_STATUS;
      711     9498        %EJECT;
PL6.E3A0      #001=TOG$GCOS_MMES File=TOG$GCOS_MMES.:E05TSI                      WED 07/30/97 06:24 Page:27   
      712     9499        /*I* NAME:         PAY_ISC_CC
      713     9500             INTERFACE:    TOK$COURTESY_CALL
      714     9501             DESCRIPTION:  The address of the Courtesy Call routine is stored
      715     9502                           in ISC_GEINOS_DATA.  If it is zero, no Courtesy
      716     9503                           Call is required.  If one is necessary, an entry
      717     9504                           pointer (CC$) is built to point to the Courtesy
      718     9505                           Call routine.  This is passed to TOK$COURTESY_CALL
      719     9506                           which pays the Courtesy Call to the subexec
      720     9507                           and returns here.
      721     9508        */
      722     9509
      723     9510    2   PAY_ISC_CC: PROC;
      724     9511
      725     9512    3      DCL CC$ PTR;
      726     9513
      727     9514        /* Code */
      728     9515
      729     9516    3      IF ISC_GEINOS_DATA.CC_ADR = 0
      730     9517    3      THEN /* No Courtesy Call Required */ ;
      731     9518    4      ELSE DO;
      732     9519    4              CC$ = PINCRW (IS$, ISC_GEINOS_DATA.CC_ADR) ;
      733     9520    4              CALL TOK$COURTESY_CALL(CC$);
      734     9521    4           END;
      735     9522    3      RETURN;
      736     9523
      737     9524    3   END PAY_ISC_CC;
      738     9525        %EJECT;
PL6.E3A0      #001=TOG$GCOS_MMES File=TOG$GCOS_MMES.:E05TSI                      WED 07/30/97 06:24 Page:28   
      739     9526        /*I* NAME:         DO_CONSOLE_WRITE
      740     9527             INTERFACE:    TOT$BCD_ASCII
      741     9528                           TOT$CONSOLE_OUT
      742     9529             INPUT:        None.
      743     9530             OUTPUT:
      744     9531             DESCRIPTION:  The output message specified by the DCW list
      745     9532                           passed in the MME GEINOS calling sequence is output
      746     9533                           to the terminal.  IThe address of the DCW
      747     9534                           list is passed in the second word of the calling
      748     9535                           sequence.  It is used to access and thread through
      749     9536                           the DCW list.  The output message is reassembled
      750     9537                           in DATA.  When the DCW list has been
      751     9538                           processed (found an IOTD type DCW), the BCD
      752     9539                           message is converted from BCD to ASCII.
      753     9540                           Finally a vector framing the message is stored into
      754     9541                           CONSOLE_FPT.BUF_ and TOT$CONSOLE_OUT called to
      755     9542                           output the message to the  terminal.
      756     9543
      757     9544                           RETURN_DELTA is set to 4.
      758     9545        */
      759     9546        %EJECT;
PL6.E3A0      #001=TOG$GCOS_MMES File=TOG$GCOS_MMES.:E05TSI                      WED 07/30/97 06:24 Page:29   
      760     9547    2   DO_CONSOLE_WRITE: PROC;
      761     9548
      762     9549    3      DCL DATA_ASCII_FMT CHAR (510) CALIGNED ;
      763     9550    3      DCL CHAR_COUNT SBIN ALIGNED ;
      764     9551    3      DCL CONTINUE   UBIN (1) ;
      765     9552    3      DCL DATA (0:84) UBIN (36);
      766     9553
      767     9554    3      DCL DATA_BCD_FMT (0:509) REDEF DATA UBIN (6) UNAL;
      768     9555    3      DCL DATA$ PTR;
      769     9556    3      DCL DATA_TALLY UBIN (12) ALIGNED ;
      770     9557    3      DCL DATA_WORD UBIN (36) BASED ALIGNED ;
      771     9558    3      DCL 1 DCW       BASED ALIGNED,
      772     9559    3            2 ADR     UBIN (18) UNAL,
      773     9560    3            2 *       UBIN (4) UNAL,
      774     9561    3            2 TYPE    UBIN (2) UNAL,
      775     9562    3            2 WORD_COUNT UBIN (12) UNAL;
      776     9563    3      DCL DCWLIST$ PTR;
      777     9564    3      DCL M UBIN (36);
      778     9565    3      DCL MESSAGE_SIZE UBIN (36);
      779     9566    3      DCL N UBIN (36);
      780     9567           %EJECT;
PL6.E3A0      #001=TOG$GCOS_MMES File=TOG$GCOS_MMES.:E05TSI                      WED 07/30/97 06:24 Page:30   
      781     9568        /* Code */
      782     9569
      783     9570    3      MESSAGE_SIZE = 0;
      784     9571    3      DCWLIST$ = PINCRW (IS$, MME_W2.DCW_ADR) ;
      785     9572    4      DO N = 0 TO 84;
      786     9573    4         DATA(N) = 0;
      787     9574    4      END;
      788     9575    3      CONTINUE = 1;
      789     9576    3      N = 0;
      790     9577    4      DO WHILE (CONTINUE = 1);
      791     9578    4         DATA$ = PINCRW (IS$, DCWLIST$ -> DCW.ADR) ;
      792     9579    4         DATA_TALLY = DCWLIST$ -> DCW.WORD_COUNT;
      793     9580    4         MESSAGE_SIZE = MESSAGE_SIZE + DATA_TALLY;
      794     9581    5         DO M = 0 TO DATA_TALLY - 1;
      795     9582    5            DATA(N) = DATA$ -> DATA_WORD;
      796     9583    5            DATA$ = PINCRW(DATA$,1);
      797     9584    5            N = N + 1;
      798     9585    5         END;
      799     9586    4         IF DCWLIST$ -> DCW.TYPE = 0
      800     9587    4         THEN CONTINUE = 0;
      801     9588    4         ELSE DCWLIST$ = PINCRW(DCWLIST$,1);
      802     9589    4      END;
      803     9590    3      CHAR_COUNT = MESSAGE_SIZE * 6 - 1;
      804     9591    3      CALL TOT$BCD_ASCII(DATA_BCD_FMT,DATA_ASCII_FMT,CHAR_COUNT);
      805     9592    3      CALL BREAK_MESSAGE ;
      806     9593    3      RETURN_DELTA = 4;
      807     9594    3      RETURN;
      808     9595
      809     9596        /* END DO_CONSOLE_WRITE */
      810     9597        %EJECT ;
PL6.E3A0      #001=TOG$GCOS_MMES File=TOG$GCOS_MMES.:E05TSI                      WED 07/30/97 06:24 Page:31   
      811     9598    3   BREAK_MESSAGE: PROC ;
      812     9599
      813     9600    4      DCL 1 CRLF_ CONSTANT CALIGNED,
      814     9601    4            2 CR CHAR(1) UNAL INIT (BITASC('015'O)),
      815     9602    4            2 LF CHAR(1) UNAL INIT (BITASC('012'O));
      816     9603    4      DCL CRLF REDEF CRLF_ CHAR(2) CALIGNED ;
      817     9604    4      DCL CRLFX            UBIN (36) ALIGNED ;
      818     9605    4      DCL MSG_START        UBIN (36) ALIGNED ;
      819     9606    4      DCL MSG_LGTH         UBIN (36) ALIGNED ;
      820     9607
      821     9608        /* Code */
      822     9609
      823     9610           /* Get first non CRLF character to print */
      824     9611    4      MSG_START = 0 ;
      825     9612    4      CALL INDEX (CRLFX, CRLF, DATA_ASCII_FMT, MSG_START) ;
      826     9613    5      DO WHILE (MSG_START = CRLFX) ;
      827     9614    5         MSG_START = MSG_START + 2 ;
      828     9615    5         CALL INDEX (CRLFX, CRLF, DATA_ASCII_FMT, MSG_START) ;
      829     9616    5      END /* WHILE */ ;
      830     9617           %EJECT ;
PL6.E3A0      #001=TOG$GCOS_MMES File=TOG$GCOS_MMES.:E05TSI                      WED 07/30/97 06:24 Page:32   
      831     9618           /* Loop through and print all parts of the message */
      832     9619    5      DO WHILE (MSG_START < CHAR_COUNT) ;
      833     9620              /* Set up message part length */
      834     9621    5         IF CRLFX < CHAR_COUNT
      835     9622    5         THEN MSG_LGTH = CRLFX - MSG_START ;
      836     9623    5         ELSE MSG_LGTH = CHAR_COUNT - MSG_START ;
      837     9624
      838     9625    5         CONSOLE_FPT.BUF_ = VECTOR (SUBSTR (DATA_ASCII_FMT,MSG_START,MSG_LGTH)) ;
      839     9626    5         CALL TOT$CONSOLE_OUT ;
      840     9627
      841     9628              /* Get next non CRLF character to print */
      842     9629    5         MSG_START = MSG_START + MSG_LGTH ;
      843     9630    5         CALL INDEX (CRLFX, CRLF, DATA_ASCII_FMT, MSG_START) ;
      844     9631    6         DO WHILE (MSG_START = CRLFX) ;
      845     9632    6            MSG_START = MSG_START + 2 ;
      846     9633    6            CALL INDEX (CRLFX, CRLF, DATA_ASCII_FMT, MSG_START) ;
      847     9634    6         END /* WHILE */ ;
      848     9635    5      END /* WHILE */ ;
      849     9636    4      RETURN ;
      850     9637
      851     9638    4   END BREAK_MESSAGE ;
      852     9639    3   END DO_CONSOLE_WRITE ;
      853     9640        %EJECT;
PL6.E3A0      #001=TOG$GCOS_MMES File=TOG$GCOS_MMES.:E05TSI                      WED 07/30/97 06:24 Page:33   
      854     9641    2   READ_WRITE_8K: PROC;
      855     9642
      856     9643           %FPT_READ (FPTN = READ_8K,
      857     9644                      DCB = M$EISPACT,
      858     9645                      KEY = EISPACT_SV_KEY,
      859     9646                      KEYS = YES);
      860     9685           %FPT_WRITE (FPTN = WRITE_8K,
      861     9686                       DCB = M$EISPACT,
      862     9687                       KEY = EISPACT_SV_KEY,
      863     9688                       ONEWKEY = YES,
      864     9689                       NEWKEY = YES);
      865     9720           %FPT_DELREC (FPTN = DEL_8K,
      866     9721                        DCB = M$EISPACT,
      867     9722                        KEY = EISPACT_SV_KEY);
      868     9741    3      DCL 1 EISPACT_SV_KEY STATIC ALIGNED,
      869     9742    3            2 * UBIN (9) UNAL INIT (4),
      870     9743    3            2 KEY UBIN (36) UNAL INIT (0);
      871     9744    3      DCL IO_BUF$ PTR ALIGNED;
      872     9745    3      DCL DATA_DCW$ PTR ALIGNED;
      873     9746    3      DCL 1 DATA_DCWS BASED ALIGNED,
      874     9747    3            2 DCW1,
      875     9748    3              3 ADDRESS UBIN (18) UNAL,
      876     9749    3              3 *    UBIN (18) UNAL,
      877     9750    3            2 DCW2,
      878     9751    3              3 ADDRESS UBIN (18) UNAL,
      879     9752    3              3 *    UBIN (18) UNAL;
      880     9753    3      DCL KEY_DCW$ PTR ALIGNED ;
      881     9754    3      DCL 1 KEY_DCW BASED ALIGNED,
      882     9755    3            2 ADDRESS   UBIN (18) UNAL,
      883     9756    3            2 *         UBIN (18) UNAL;
      884     9757    3      DCL KEY$ PTR ALIGNED;
      885     9758    3      DCL KEY UBIN (36) BASED ALIGNED;
      886     9759    3      DCL STATUS$ PTR ALIGNED;
      887     9760    3      DCL 1 STATUS BASED ALIGNED,
      888     9761    3            2 W1 BIT (36) ALIGNED,
      889     9762    3            2 W2 BIT (36) ALIGNED;
      890     9763           %EJECT;
PL6.E3A0      #001=TOG$GCOS_MMES File=TOG$GCOS_MMES.:E05TSI                      WED 07/30/97 06:24 Page:34   
      891     9764        /* Code */
      892     9765
      893     9766    3      KEY_DCW$ = PINCRW (IS$, SDIA_MME_W2.KEY_DCW_ADDR) ;
      894     9767    3      KEY$ = PINCRW (IS$, KEY_DCW$->KEY_DCW.ADDRESS) ;
      895     9768    3      EISPACT_SV_KEY.KEY = KEY$->KEY;
      896     9769    3      DATA_DCW$ = PINCRW (IS$, SDIA_MME_W4.DATA_DCW_ADDR) ;
      897     9770    3      IO_BUF$ = PINCRW (IS$, DATA_DCW$->DATA_DCWS.DCW1.ADDRESS) ;
      898     9771    3      IF SDIA_MME_W3.DV_CMD = 21
      899     9772    4      THEN DO;
      900     9773    4              READ_8K.BUF_.BOUND = 32767;
      901     9774    4              READ_8K.BUF_.BUF$ = IO_BUF$;
      902     9775    4              CALL M$READ (READ_8K) ALTRET (NO_READ);
      903     9776    4           END;
      904     9777    3      ELSE IF SDIA_MME_W3.DV_CMD = 25
      905     9778    4         THEN DO;
      906     9779    4                 WRITE_8K.BUF_.BOUND = 32767;
      907     9780    4                 WRITE_8K.BUF_.BUF$ = IO_BUF$;
      908     9781    4                 CALL M$WRITE (WRITE_8K) ;
      909     9782    4              END;
      910     9783    4         ELSE DO ;
      911     9784    4                 TOG_ERROR_CODE.ERR# = %E$BADGEINOS ;
      912     9785    4                 CALL TOX$ERROR (TOG_ERROR_CODE) ;
      913     9786    4              END /* ELSE */ ;
      914     9787    3      STATUS$ = PINCRW (IS$, SDIA_MME_W5.STATUS_ADDR) ;
      915     9788    3      STATUS$->STATUS.W1 = '400000'O;
      916     9789    3      STATUS$->STATUS.W2 = '0'O;
      917     9790    3      RETURN_DELTA = 6;
      918     9791    3      RETURN;
      919     9792
      920     9793    3   NO_READ:
      921     9794    3      CALL TOX$ERROR (B$TCB$->B$TCB.ALT$->B$ALT.ERR);
      922     9795    3      RETURN;
      923     9796    3   END READ_WRITE_8K ;
      924     9797    2   END TOG$MME_GEINOS;
      925     9798        %EJECT;
PL6.E3A0      #001=TOG$GCOS_MMES File=TOG$GCOS_MMES.:E05TSI                      WED 07/30/97 06:24 Page:35   
      926     9799        /*I* NAME:         TOG$MME_GELBAR
      927     9800             INTERFACE:    SET_GELBR_REGS
      928     9801                           SET_GELBAR_TIMER
      929     9802                           FIX_GELBAR_SPA
      930     9803                           BUILD_GELBAR_ISR
      931     9804                           M$STIMER
      932     9805                           M$CLRSTK
      933     9806                           UNWIND TO TOF$SISR_RV
      934     9807             INPUT:        AREG is A Register at time of MME
      935     9808                             Bits (0-17) is address of LOC1
      936     9809                             Bits (18-35) not used.
      937     9810
      938     9811                               LOC1 bits (0-17) is new BAR.
      939     9812                               LOC1 bits (18-35) is address of LOC2.
      940     9813                               LOC1+1 bits (0-17) is new IC under GELBAR.
      941     9814                               LOC1+1 bits(18-35) is new Indicator Register.
      942     9815                               LOC2 contains the register state to be restored.
      943     9816
      944     9817             OUTPUT:
      945     9818             DESCRIPTION:   This routine simulates the MME GELBAR function
      946     9819                           in the CP6 environment for Slave Mode subexecs.
      947     9820                           The interested reader should refer to the GCOS
      948     9821                           Manual DD19 for all the details of MME GELBAR.
      949     9822                           MME GELBAR involves the following functions:
      950     9823
      951     9824                           a.  Reloading the Base Address Register(BAR).
      952     9825                           b.  Reloading a user specified register state.
      953     9826                           c.  Transferring to an IC relative to the new BAR.
      954     9827                           d.  Setting up a timer for execution under GELBAR.
      955     9828                           e.  Trapping all faults that occur under GELBAR and
      956     9829                               returning control to a user fault handler,
      957     9830                               specified in word 19 of the Slave Prefix Area
      958     9831                               (SPA).
      959     9832                           f.  Maintaining words 17,18 and 25 in the SPA.
      960     9833
      961     9834                           The flag TOG$GELBAR_MODE is first set so that the
      962     9835                           Fault Handler (TOF$FAULTS) will know that the
PL6.E3A0      #001=TOG$GCOS_MMES File=TOG$GCOS_MMES.:E05TSI                      WED 07/30/97 06:24 Page:36   
      963     9836                           next fault occurred under GELBAR and should be handled
      964     9837                           by a subexec's fault handler.
      965     9838
      966     9839                           After all the housekeeping tasks are done, the
      967     9840                           subroutine RESTRICT_CPU is called which checks
      968     9841                           to see if SOLTS is in execution, and if it desires
      969     9842                           to execute its test page under GELBAR on a specific
      970     9843                           CPU.  Once everything is set up, M$CLRSTK is called
      971     9844                           to pop the top frame off the TCB, M$STIMER is called
      972     9845                           to initiate a timer on the test page's execution
      973     9846                           and an UNWIND TO TOF$SISR_RV is done to transfer
      974     9847                           into the test page.
      975     9848
      976     9849                           It is at this point that we get into the middle of
      977     9850                           the CP6 fault mechanism and back to NSA GMAP type
      978     9851                           operations, which makes things quite complicated.
      979     9852
      980     9853                           First, the UNWIND statement uses a REMEMBER
      981     9854                           variable built at TOLTS initialization time.
      982     9855                           The UNWIND in effect (1) pops all the auto frames off
      983     9856                           the stack and (2) transfers us to a BMAP routine
      984     9857                           called TOF$SHRINK_ISR which restores the registers
      985     9858                           and shrinks the ISR.  The UNWIND statement pops
      986     9859                           the auto frames for TOF$FAULTS and TOG$GCOS_MMES
      987     9860                           off the auto stack so they won't be lying around.
      988     9861                           The present implementation of GELBAR does not return
      989     9862                           back to the Fault Handler to pop those off automatically.
      990     9863                           A simple CALL TOF$SHRINK_ISR would have left those
      991     9864                           frames on the auto stack.
      992     9865
      993     9866                           The BMAP routine TOF$SHRINK_ISR restores all
      994     9867                           the necessary registers and does a CLIMB to shrink the ISR around
      995     9868                           the test page and transfer into it.
      996     9869
      997     9870                           The next fault(which will hopefully occur in the
      998     9871                           test page under GELBAR) will cause the ISR to
      999     9872                           be re-expanded to what it is normally, and transfer
PL6.E3A0      #001=TOG$GCOS_MMES File=TOG$GCOS_MMES.:E05TSI                      WED 07/30/97 06:24 Page:37   
     1000     9873                           control into the Fault Handler, TOF$FAULTS.
     1001     9874
     1002     9875                           RETURN_DELTA is set to 1 in case there is an error
     1003     9876                           return for SOLTS.
     1004     9877        */
     1005     9878
     1006     9879    1   TOG$MME_GELBAR: PROC(P_AREG,P_QREG,RETURN_DELTA);
     1007     9880
     1008     9881    2      DCL NO_CPU_ASSIGNED UBIN (1);
     1009     9882    2      DCL P_AREG  UBIN (36);
     1010     9883    2      DCL 1 MREGA REDEF P_AREG,
     1011     9884    2            2 LOC1_ADR UBIN (18) UNAL,
     1012     9885    2            2 RESTRICT_CPU_FLAG UBIN (1) UNAL,
     1013     9886    2            2 DISABLE_CACHE_FLAG UBIN (1) UNAL,
     1014     9887    2            2 * UBIN (10) UNAL,
     1015     9888    2            2 CPU# UBIN (6) UNAL;
     1016     9889    2      DCL P_QREG  UBIN (36);
     1017     9890    2      DCL RETURN_DELTA SBIN HALF;
     1018     9891    2      DCL GELBAR_LOC1$ PTR ALIGNED ;
     1019     9892    2      DCL GELBAR_TIMEOUT UBIN (36);
     1020     9893    2      DCL 1 GLB_TO REDEF GELBAR_TIMEOUT,
     1021     9894    2            2 * UBIN (18) UNAL,
     1022     9895    2            2 VALUE UBIN (18) UNAL;
     1023     9896           %EJECT;
PL6.E3A0      #001=TOG$GCOS_MMES File=TOG$GCOS_MMES.:E05TSI                      WED 07/30/97 06:24 Page:38   
     1024     9897        /* Code */
     1025     9898
     1026     9899    2      TOF$BAR.GELBAR_MODE = %TRUE ;
     1027     9900    2      CALL SET_GELBAR_REGS;
     1028     9901    2      CALL SET_GELBAR_TIMER;
     1029     9902    2      CALL FIX_GELBAR_SPA;
     1030     9903    2      CALL BUILD_GELBAR_ISR;
     1031     9904    2      CALL CHECK_GELBAR_DEBUG ;
     1032     9905    2      IF TOT$ECP.SUBEXEC.CURRENT = %SOLTS OR TOT$ECP.SUBEXEC.CURRENT = %PACT
     1033     9906    2      THEN /* No need to set the Timer */ ;
     1034     9907    2      ELSE CALL M$STIMER(STIMER_FPT) ;
     1035     9908    2      CALL M$CLRSTK;
     1036     9909    2      UNWIND TO TOF$SISR_RV;
     1037     9910
     1038     9911        /*END TOG$MME_GELBAR;*/
     1039     9912        %EJECT;
PL6.E3A0      #001=TOG$GCOS_MMES File=TOG$GCOS_MMES.:E05TSI                      WED 07/30/97 06:24 Page:39   
     1040     9913        /*I* NAME:         SET_GELBAR_REGS
     1041     9914             DESCRIPTION:  The following registers, specified by the user on
     1042     9915                           the MME GELBAR, are fetched from LOC1 and LOC2
     1043     9916                           and stored for later use by TOF$SHRINK_ISR:
     1044     9917
     1045     9918                             TOF$GELBAR_REGISTERS(A,Q and Index)
     1046     9919                             TOF$GELBAR_INDICATORS
     1047     9920                             TOF$GELBAR_IC
     1048     9921
     1049     9922                           The following registers are fetched from the current
     1050     9923                           TCB frame and stored for later use(these are not
     1051     9924                           specified by the user, but are used by SOLTS and
     1052     9925                           therefore must be preserved, and restored later):
     1053     9926
     1054     9927                             TOF$GELBAR_ADDRESS_REGS(address registers)
     1055     9928                             TOF$GELBAR_EIS_REGS(EIS pointer and lengths registers)
     1056     9929
     1057     9930                           Finally, TOF$BAR.CURRENT is updated to reflect
     1058     9931                           what the BAR will be once GELBAR is invoked, using
     1059     9932                           information in LOC1.
     1060     9933
     1061     9934                           All the register states will be restored by
     1062     9935                           TOF$SHRINK_ISR.
     1063     9936        */
     1064     9937        %EJECT;
PL6.E3A0      #001=TOG$GCOS_MMES File=TOG$GCOS_MMES.:E05TSI                      WED 07/30/97 06:24 Page:40   
     1065     9938    2   SET_GELBAR_REGS: PROC;
     1066     9939
     1067     9940    3      DCL REGS$ PTR;
     1068     9941    3      DCL REGS(0:7) UBIN (36) BASED ALIGNED;
     1069     9942
     1070     9943        /* Code */
     1071     9944
     1072     9945    3      GELBAR_LOC1$ = PINCRW (IS$, MREGA.LOC1_ADR) ;
     1073     9946    3      REGS$ = PINCRW (IS$, GELBAR_LOC1$ -> LOC1.LOC2$) ;
     1074     9947    3      TOF$GELBAR_REGISTERS = REGS$->REGS;
     1075     9948    3      TOF$GELBAR_ADDRESS_REGS = B$TCB$->B$TCB.STK$->B$EXCFR.PRS;
     1076     9949    3      TOF$GELBAR_EIS_REGS = B$TCB$->B$TCB.STK$->B$EXCFR.EIS;
     1077     9950    3      TOF$GELBAR_INDICATORS.I = GELBAR_LOC1$ -> LOC1.I;
     1078     9951    3      TOF$GELBAR_IC.IC = GELBAR_LOC1$->LOC1.IC;
     1079     9952    3      TOF$BAR.CURRENT.BASE = GELBAR_LOC1$->LOC1.BAR.BASE;
     1080     9953    3      TOF$BAR.CURRENT.SIZE = GELBAR_LOC1$->LOC1.BAR.BOUNDS;
     1081     9954    3      RETURN;
     1082     9955
     1083     9956    3   END SET_GELBAR_REGS;
     1084     9957        %EJECT;
PL6.E3A0      #001=TOG$GCOS_MMES File=TOG$GCOS_MMES.:E05TSI                      WED 07/30/97 06:24 Page:41   
     1085     9958        /*I* NAME:         SET_GELBAR_TIMER
     1086     9959             DESCRIPTION:  The Q Register at the time of the MME GELBAR
     1087     9960                           contains the timeout interval in 1/64 millisecond
     1088     9961                           increments.  This is converted to millisecond
     1089     9962                           increments and stored into the FPT,
     1090     9963                           STIMER_FPT.V.UNITS#.  M$STIMER is called at a later
     1091     9964                           time to invoke a timer.
     1092     9965        */
     1093     9966
     1094     9967    2   SET_GELBAR_TIMER: PROC;
     1095     9968
     1096     9969    3      GELBAR_TIMEOUT = P_QREG;
     1097     9970    3      GELBAR_TIMEOUT = GELBAR_TIMEOUT / 64 + 1;
     1098     9971           /* Add 30 ms to time due to CP6 TOLTS overhead. */
     1099     9972    3      STIMER_FPT.V.UNITS# = GLB_TO.VALUE + 30;
     1100     9973    3      GELBAR_TIMEOUT = GELBAR_TIMEOUT * 64;
     1101     9974    3      RETURN;
     1102     9975
     1103     9976    3   END SET_GELBAR_TIMER;
     1104     9977        %EJECT;
PL6.E3A0      #001=TOG$GCOS_MMES File=TOG$GCOS_MMES.:E05TSI                      WED 07/30/97 06:24 Page:42   
     1105     9978        /*I* NAME:         FIX_GELBAR_SPA
     1106     9979             DESCRIPTION:  Initializes the subexec's SPA in accordance with
     1107     9980                           the standard GCOS definition (see DD19, GCOS Manual).
     1108     9981
     1109     9982                           a.  The Q Register at the time of the MME GELBAR is
     1110     9983                               stored in word 17.
     1111     9984                           b.  The Q Register is also stored in word 18.
     1112     9985                           c.  The new BAR is stored in bits 0-17 of word 25.
     1113     9986                           d.  The "fault bit" in word 25 (bit 19) is reset.
     1114     9987                           e.  The fault type field in bits 30-35 of word 25
     1115     9988                               is reset.
     1116     9989        */
     1117     9990
     1118     9991    2   FIX_GELBAR_SPA: PROC;
     1119     9992
     1120     9993           %TOD$SPA (STCLASS = "BASED (TOD$SPA$)") ;
     1121    10045
     1122    10046        /* Code */
     1123    10047
     1124    10048    3      TOD$SPA.WD17 = P_QREG;
     1125    10049    3      TOD$SPA.WD18_ = GELBAR_TIMEOUT;
     1126    10050    3      TOD$SPA.WD25.BAR.BASE = GELBAR_LOC1$ -> LOC1.BAR.BASE;
     1127    10051    3      TOD$SPA.WD25.BAR.BOUNDS = GELBAR_LOC1$ -> LOC1.BAR.BOUNDS;
     1128    10052    3      TOD$SPA.WD25.FAULT = '0'B;
     1129    10053    3      TOD$SPA.WD25.FAULT_TYPE = 0;
     1130    10054    3      RETURN;
     1131    10055
     1132    10056    3   END FIX_GELBAR_SPA;
     1133    10057        %EJECT;
PL6.E3A0      #001=TOG$GCOS_MMES File=TOG$GCOS_MMES.:E05TSI                      WED 07/30/97 06:24 Page:43   
     1134    10058        /*I* NAME:         BUILD_GELBAR_ISR
     1135    10059             DESCRIPTION:  A NSA vector is built which will be used to shrink
     1136    10060                           the current ISR so that it will frame a test page.
     1137    10061                           The PL6 variable ISR_V is initialized with all the
     1138    10062                           fields except for BASE and SIZE.  These 2 fields
     1139    10063                           are computed here, and stored into ISR_V, which is
     1140    10064                           then stored into the SYMREFed variable
     1141    10065                           TOF$ISR_VECTOR.
     1142    10066
     1143    10067                           The BASE field is picked up from a parameter passed
     1144    10068                           from the subexec, and is converted from 512 word
     1145    10069                           blocks to a byte address.
     1146    10070
     1147    10071                           The SIZE field is likewise picked up from a parameter
     1148    10072                           passed from the subexec, and is converted from 512
     1149    10073                           word blocks to a byte bound.  However, there is
     1150    10074                           an exception case.  If the BOUNDS field passed
     1151    10075                           as a parameter is 0, it means the caller wishes to
     1152    10076                           have as the ISR bounds, all the memory left in the
     1153    10077                           ISR after the shrink.  This is an undocumented
     1154    10078                           feature of GCOS, which for some reason must be
     1155    10079                           supported here.
     1156    10080
     1157    10081                           B$JIT$->B$JIT.TDP is the page number of the nexty
     1158    10082                           page available to the program, relative to the
     1159    10083                           beginning of the Working Space.  Since the Instruction
     1160    10084                           Segment starts at page 64 in the Working Space, we
     1161    10085                           subtract 64 from TDP to yield the next page
     1162    10086                           number relative to the start of the Instruction
     1163    10087                           Segment.  This is used to compute how much memory
     1164    10088                           will be left once the base of the ISR is shrunk,
     1165    10089                           and stored in ISR_V.
     1166    10090        */
     1167    10091        %EJECT ;
PL6.E3A0      #001=TOG$GCOS_MMES File=TOG$GCOS_MMES.:E05TSI                      WED 07/30/97 06:24 Page:44   
     1168    10092    2   BUILD_GELBAR_ISR: PROC;
     1169    10093
     1170    10094    3      DCL BOUNDS_ADR SBIN HALF;
     1171    10095
     1172    10096        /* Code */
     1173    10097
     1174    10098    3      IF GELBAR_LOC1$ -> LOC1.BAR.BOUNDS = 0
     1175    10099    4      THEN DO;
     1176    10100    4              BOUNDS_ADR = B$JIT$ -> B$JIT.TDP;
     1177    10101    4              BOUNDS_ADR = BOUNDS_ADR - 64;
     1178    10102    4              BOUNDS_ADR = BOUNDS_ADR * 1024/512;
     1179    10103    4              ISR_V.SIZE = BOUNDS_ADR - GELBAR_LOC1$ -> LOC1.BAR.BASE;
     1180    10104    4              ISR_V.SIZE = ISR_V.SIZE * 512 * 4;
     1181    10105    4           END;
     1182    10106    3      ELSE ISR_V.SIZE = (GELBAR_LOC1$ -> LOC1.BAR.BOUNDS * 512 * 4) -1;
     1183    10107    3      ISR_V.BASE = GELBAR_LOC1$ -> LOC1.BAR.BASE * 512 * 4;
     1184    10108    3      TOF$ISR_VECTOR = ISR_V;
     1185    10109    3      RETURN;
     1186    10110
     1187    10111    3   END BUILD_GELBAR_ISR;
     1188    10112        %EJECT;
PL6.E3A0      #001=TOG$GCOS_MMES File=TOG$GCOS_MMES.:E05TSI                      WED 07/30/97 06:24 Page:45   
     1189    10113        /*I* NAME:         CHECK_GELBAR_DEBUG
     1190    10114             AUTHOR:       Scott S. Sheppard
     1191    10115             PURPOSE:      Invokes the DEBUG capability
     1192    10116             DESCRIPTION:  This procedure calls the debugger for GELBAR mode
     1193    10117                           invocations on ???DEBUG [TEST] <request> tests.
     1194    10118        */
     1195    10119
     1196    10120    2   CHECK_GELBAR_DEBUG: PROC ;
     1197    10121
     1198    10122    3      DCL BASE$   PTR CONSTANT ALIGNED INIT (ADDR(TOF$ISR_VECTOR)) ;
     1199    10123    3      DCL 1 BASE ALIGNED BASED (BASE$),
     1200    10124    3            2 *   BIT (36) UNAL,
     1201    10125    3            2 VAL UBIN (18) UNAL,
     1202    10126    3            2 *   BIT (18) UNAL ;
     1203    10127
     1204    10128        /* Code */
     1205    10129
     1206    10130    3      IF TOQ$DCP.PF.ENABLED
     1207    10131    4      THEN DO ;
     1208    10132    4              TOQ$DCP.PF.REASON = %GELBAR ;
     1209    10133    4              TOQ$DCP.BR.ADDRESS = BASE.VAL ;
     1210    10134    4              TOQ$DCP.BR.IC = TOF$GELBAR_IC.IC ;
     1211    10135    4              CALL TOQ$DEBUG ;
     1212    10136    4           END /* ELSE */ ;
     1213    10137    3      ELSE /* No DEBUG action necessary. */ ;
     1214    10138    3      RETURN ;
     1215    10139
     1216    10140    3   END CHECK_GELBAR_DEBUG ;
     1217    10141    2   END TOG$MME_GELBAR;
     1218    10142
     1219    10143    1   END TOG$GCOS_MMES;

PL6.E3A0      #001=TOG$GCOS_MMES File=TOG$GCOS_MMES.:E05TSI                      WED 07/30/97 06:24 Page:46   
--  Include file information  --

   TO_PERR_C.:E05TOU  is referenced.
   TOT_RQSTS_E.:E05TOU  is referenced.
   TOT_TOLTS_M.:E05TOU  is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   CP_6_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  is referenced.
   B$JIT.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure TOG$GCOS_MMES.

   Procedure TOG$GCOS_MMES requires 841 words for executable code.
   Procedure TOG$GCOS_MMES requires 246 words of local(AUTO) storage.

    No errors detected in file TOG$GCOS_MMES.:E05TSI    .

PL6.E3A0      #001=TOG$GCOS_MMES File=TOG$GCOS_MMES.:E05TSI                      WED 07/30/97 06:24 Page:47   

 Object Unit name= TOG$GCOS_MMES                              File name= TOG$GCOS_MMES.:E05TOU
 UTS= JUL 30 '97 06:24:10.52 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1   Data  even  none    54     66  TOG$GCOS_MMES
    2  RoData even  UTS      5      5  TOG$GCOS_MMES
    3   DCB   even  none    98    142  M$EISPACT
    4   Proc  even  none   841   1511  TOG$GCOS_MMES
    5  RoData even  none     8     10  TOG$GCOS_MMES

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     4      0   yes            yes      Std        4  TOG$GCOS_MMES
PL6.E3A0      #001=TOG$GCOS_MMES File=TOG$GCOS_MMES.:E05TSI                      WED 07/30/97 06:24 Page:48   

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes          Async      0 TOF$FAULTS
         yes           Std       1 TOK$COURTESY_CALL
         yes           Std       1 TOX$ERROR
         yes           Std       3 TOD$DISPATCHER
         yes           Std       3 TOT$BCD_ASCII
         yes           Std       0 TOT$CONSOLE_OUT
         yes           Std       0 TOQ$DEBUG
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_AUTO_4
                       nStd      0 X66_ARET
                       nStd      0 X66_AUNWIND

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                                  CONSOLE_FPT                           B$TCB$
     B$JIT$                                TOD$SPA$                              TOF$BAR
     TOF$GELBAR_ADDRESS_REGS               TOF$GELBAR_EIS_REGS                   TOF$GELBAR_REGISTERS
     TOF$GELBAR_INDICATORS                 TOF$GELBAR_IC                         TOF$ISR_VECTOR
     TOF$SISR_RV                           TOK$CC_RETURN                         TOQ$DCP
     TOT$ECP                               M$EISPACT                             B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID                                 NULLSID
PL6.E3A0      #001=TOG$GCOS_MMES File=TOG$GCOS_MMES.:E05TSI                      WED 07/30/97 06:24 Page:49   


        1        1        /*M* TOG$GCOS_MMES     TOLTS GCOS MME Service Routines */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7
        8        8        /*X* PLM=3,DCI=6,SQB=N,PRB=N,DTI=5,ENI=0,AND=Y,ECI=0,CSU=3,DIN=3,
        9        9             CTI=8,CRM=109,CRT=1,NLB=N,NTB=Y,MCL=110 */
       10       10
       11       11        /*P* NAME:         TOG$GCOS_MMES
       12       12             PURPOSE:      MME Service Routines for GCOS MMES.
       13       13             DESCRIPTION:  GCOS MMES
       14       14             REFERENCE:    CP-6 Release C0K0
       15       15        */
       16       16
       17       17        /*F* NAME:         TOG$GCOS_MMES
       18       18             PURPOSE:      MME Service Routines for GCOS MMES.
       19       19             DESCRIPTION:  MME Service Routines for the following MMES:
       20       20                             GEENDC
       21       21                             GEINOS
       22       22                             GELBAR
       23       23                             CLEARQ  (a TOLTS MME)
       24       24             LAST UPDATE:  07/28/83
       25       25             REFERENCE:    CP-6 Release C0K0
       26       26                           Carl Eichert / Scott Sheppard
       27       27        */
       28       28        %EJECT ;
PL6.E3A0      #001=TOG$GCOS_MMES File=TOG$GCOS_MMES.:E05TSI                      WED 07/30/97 06:24 Page:50   
       29       29        TOG$GCOS_MMES: PROC(MME,MREG,MME_INSTR$,RETURN_DELTA);

     29  4 000000   000000 700200 xent  TOG$GCOS_MM* TSX0  ! X66_AUTO_4
         4 000001   000366 000004                    ZERO    246,4

       30       30
       31       31        /* Include Files */
       32       32
       33       33           %INCLUDE B$JIT;
       34      636           %INCLUDE CP_6;
       35     6195           %INCLUDE CP_6_SUBS;
       36     6735           %INCLUDE TOT_TOLTS_M;
       37     7853           %INCLUDE TOT_RQSTS_E ;
       38     7895           %INCLUDE TO_PERR_C ;
       39     8480
       40     8481        /* Parameters */
       41     8482
       42     8483           %MME ;
       43     8504           %MREG ;
       44     8526           %MME_INSTR$ ;
       45     8529           %RETURN_DELTA ;
       46     8532
       47     8533        /* Fault Frame Declarations */
       48     8534
       49     8535           %B$EXCFR;
       50     8553           %B$TCB;
       51     8556           %B$ALT;
       52     8564
       53     8565        /* Function Parameter Tables */
       54     8566
       55     8567           %FPT_STIMER (FPTN = STIMER_FPT,
       56     8568                        UENTRY = TOF$FAULTS,
       57     8569                        UTYPE = TUN);
       58     8584
       59     8585           %FPT_WRITE (FPTN = CONSOLE_FPT,
       60     8586                       STCLASS = SYMREF);
       61     8617           %EJECT;
PL6.E3A0      #001=TOG$GCOS_MMES File=TOG$GCOS_MMES.:E05TSI                      WED 07/30/97 06:24 Page:51   
       62     8618        /* Variables */
       63     8619
       64     8620           %IS$ (STCLASS = CONSTANT) ;
       65     8634    1      DCL 1 ISC_GEINOS_DATA STATIC,
       66     8635    1            2 OP_CODE UBIN (36) UNAL,
       67     8636    1            2 FILE_ADR UBIN (18) UNAL,
       68     8637    1            2 DCW_ADR UBIN (18) UNAL,
       69     8638    1            2 STATUS_ADR UBIN (18) UNAL,
       70     8639    1            2 CC_ADR UBIN (18) UNAL;
       71     8640    1      DCL ISC_WRITE_DATA (0:2) UBIN (36) STATIC;
       72     8641    1      DCL 1 ISR_V DALIGNED STATIC,
       73     8642    1            2 SIZE UBIN (20) UNAL,
       74     8643    1            2 FLAGS BIT (9) UNAL INIT ('777'O),
       75     8644    1            2 V BIT (2) UNAL INIT ('01'B),
       76     8645    1            2 * UBIN (5) UNAL,
       77     8646    1            2 BASE UBIN (20) UNAL,
       78     8647    1            2 * UBIN (4) UNAL INIT (0),
       79     8648    1            2 SEGID UBIN (12) UNAL INIT (%IS_SEGID),
       80     8649    1            2 * BIT (72) UNAL;
       81     8650    1      DCL 1 LOC1 BASED ALIGNED,
       82     8651    1            2 BAR,
       83     8652    1              3 BASE UBIN (9) UNAL,
       84     8653    1              3 BOUNDS UBIN (9) UNAL,
       85     8654    1            2 LOC2$ UBIN (18) UNAL,
       86     8655    1            2 IC UBIN (18) UNAL,
       87     8656    1            2 I UBIN (18) UNAL;
       88     8657           %VLP_ERRCODE (FPTN = TOG_ERROR_CODE,
       89     8658                         FCG  = 'TO',
       90     8659                         MID  = 'G',
       91     8660                         SEV  = 0) ;
       92     8705           %EJECT ;
PL6.E3A0      #001=TOG$GCOS_MMES File=TOG$GCOS_MMES.:E05TSI                      WED 07/30/97 06:24 Page:52   
       93     8706        /* External Variables */
       94     8707
       95     8708    1      DCL B$TCB$                  PTR SYMREF;
       96     8709    1      DCL B$JIT$                  PTR SYMREF;
       97     8710    1      DCL TOD$SPA$                PTR SYMREF;
       98     8711           %TOF$BAR (STCLASS = SYMREF) ;
       99     8734    1      DCL TOF$GELBAR_ADDRESS_REGS (0:7) PTR SYMREF;
      100     8735    1      DCL TOF$GELBAR_EIS_REGS     (0:7) UBIN(36) SYMREF;
      101     8736    1      DCL TOF$GELBAR_REGISTERS    (0:7) UBIN(36) SYMREF;
      102     8737    1      DCL 1 TOF$GELBAR_INDICATORS SYMREF,
      103     8738    1            2 *    UBIN (18) UNAL,
      104     8739    1            2 I    UBIN (18) UNAL;
      105     8740    1      DCL 1 TOF$GELBAR_IC SYMREF,
      106     8741    1            2 IC   UBIN (18) UNAL,
      107     8742    1            2 *    UBIN (6) UNAL,
      108     8743    1            2 *    UBIN (12) UNAL;
      109     8744    1      DCL TOF$ISR_VECTOR          BIT(72) SYMREF;
      110     8745    1      DCL TOF$SISR_RV             REMEMBER SYMREF;
      111     8746    1      DCL TOK$CC_RETURN           REMEMBER SYMREF;
      112     8747           %TOQ$DCP (STCLASS = SYMREF) ;
      113     8779           %TOT$ECP (STCLASS = SYMREF) ;
      114     8828
      115     8829        /* Data Control Blocks */
      116     8830
      117     8831           %M$DCB (DCBN = M$EISPACT,
      118     8832                   ASN = FILE,
      119     8833                   FUN = CREATE,
      120     8834                   NAME = 'EISPACT_SV',
      121     8835                   ORG = KEYED,
      122     8836                   ACS = DIRECT,
      123     8837                   DISP = SCRATCH);
      124     8911           %EJECT ;
PL6.E3A0      #001=TOG$GCOS_MMES File=TOG$GCOS_MMES.:E05TSI                      WED 07/30/97 06:24 Page:53   
      125     8912        /* External Entries */
      126     8913
      127     8914    1      DCL TOF$FAULTS                ENTRY ASYNC;
      128     8915    1      DCL TOD$DISPATCHER            ENTRY(3);
      129     8916    1      DCL TOK$COURTESY_CALL         ENTRY(1);
      130     8917    1      DCL TOT$BCD_ASCII             ENTRY (3);
      131     8918    1      DCL TOT$CONSOLE_OUT           ENTRY;
      132     8919    1      DCL TOQ$DEBUG                 ENTRY;
      133     8920    1      DCL TOX$ERROR                 ENTRY (1) ;
      134     8921           %EJECT;
PL6.E3A0      #001=TOG$GCOS_MMES File=TOG$GCOS_MMES.:E05TSI                      WED 07/30/97 06:24 Page:54   
      135     8922        /*D* NAME:         TOG$GCOS_MMES
      136     8923             INTERFACE:    TOG$MME_GEENDC
      137     8924                           TOG$MME_GEINOS
      138     8925                           TOG$MME_GELBAR
      139     8926                           TOG$MME_GCLEARQ
      140     8927             INPUT:        MME contains the MME instruction and the next
      141     8928                             6 words from the subexec's memory.
      142     8929                           MREG contains the standard instruction set registers
      143     8930                             at the time of the MME.
      144     8931                           MME_INSTR$ is a pointer to the MME instruction.
      145     8932             OUTPUT:       RETURN_DELTA is the number of instructions to
      146     8933                             return past the MME instruction on return to the
      147     8934                             subexec.
      148     8935             DESCRIPTION:  Merely decodes the MME number (bits 0-17 of the
      149     8936                           MME instruction) and calls the appropriate MME
      150     8937                           Service Routine.  All return here for return to the
      151     8938                           subexec except MME GELBAR and GEENDC which
      152     8939                           use the UNWIND statement to return to the subexec
      153     8940                           directly or TOK$COURTEST_CALL, respectively.
      154     8941
      155     8942                           See the docementation for the respective MME
      156     8943                           Service Routines for further detail.
      157     8944        */
      158     8945        %EJECT;
PL6.E3A0      #001=TOG$GCOS_MMES File=TOG$GCOS_MMES.:E05TSI                      WED 07/30/97 06:24 Page:55   
      159     8946        /* Main Code */
      160     8947
      161     8948    1      IF MME.INST.NO > 0

   8948  4 000002   200003 470500                    LDP0    @MME,,AUTO
         4 000003   000000 220100                    LDX0    0,,PR0
         4 000004   000114 604400 4                  TMOZ    s:8958

      162     8949    2      THEN DO CASE (MME.INST.NO);

   8949  4 000005   000040 100003                    CMPX0   32,DU
         4 000006   000010 602010 4                  TNC     s:8949+3,X0
         4 000007   000120 710000 4                  TRA     s:8959
         4 000010   000113 710000 4                  TRA     s:8957
         4 000011   000055 710000 4                  TRA     s:8953
         4 000012   000113 710000 4                  TRA     s:8957
         4 000013   000113 710000 4                  TRA     s:8957
         4 000014   000113 710000 4                  TRA     s:8957
         4 000015   000113 710000 4                  TRA     s:8957
         4 000016   000113 710000 4                  TRA     s:8957
         4 000017   000113 710000 4                  TRA     s:8957
         4 000020   000113 710000 4                  TRA     s:8957
         4 000021   000113 710000 4                  TRA     s:8957
         4 000022   000113 710000 4                  TRA     s:8957
         4 000023   000113 710000 4                  TRA     s:8957
         4 000024   000113 710000 4                  TRA     s:8957
         4 000025   000113 710000 4                  TRA     s:8957
         4 000026   000050 710000 4                  TRA     s:8951
         4 000027   000113 710000 4                  TRA     s:8957
         4 000030   000113 710000 4                  TRA     s:8957
         4 000031   000113 710000 4                  TRA     s:8957
         4 000032   000113 710000 4                  TRA     s:8957
         4 000033   000113 710000 4                  TRA     s:8957
         4 000034   000113 710000 4                  TRA     s:8957
         4 000035   000113 710000 4                  TRA     s:8957
         4 000036   000113 710000 4                  TRA     s:8957
         4 000037   000113 710000 4                  TRA     s:8957
PL6.E3A0      #001=TOG$GCOS_MMES File=TOG$GCOS_MMES.:E05TSI                      WED 07/30/97 06:24 Page:56   
         4 000040   000113 710000 4                  TRA     s:8957
         4 000041   000113 710000 4                  TRA     s:8957
         4 000042   000113 710000 4                  TRA     s:8957
         4 000043   000113 710000 4                  TRA     s:8957
         4 000044   000113 710000 4                  TRA     s:8957
         4 000045   000113 710000 4                  TRA     s:8957
         4 000046   000113 710000 4                  TRA     s:8957
         4 000047   000101 710000 4                  TRA     s:8956

      163     8950    2              CASE (%GEENDC);

      164     8951    2                 CALL TOG$MME_GEENDC(RETURN_DELTA);

   8951  4 000050   200006 236100                    LDQ     @RETURN_DELTA,,AUTO
         4 000051   200011 756100                    STQ     @RETURN_DELTA+3,,AUTO
         4 000052   000176 701000 4                  TSX1    TOG$MME_GEENDC
         4 000053   000000 011000                    NOP     0
         4 000054   000120 710000 4                  TRA     s:8959

      165     8952    2              CASE (%GEINOS);

      166     8953    2                 CALL TOG$MME_GEINOS(MME.WD_1,MME.WD_2,MME.WD_3,MME.WD_4,

   8953  4 000055   200006 236100                    LDQ     @RETURN_DELTA,,AUTO
         4 000056   200016 756100                    STQ     GELBAR_LOC1$+1,,AUTO
         4 000057   200003 236100                    LDQ     @MME,,AUTO
         4 000060   000005 036003                    ADLQ    5,DU
         4 000061   200015 756100                    STQ     @P_MMEWD4+1,,AUTO
         4 000062   200003 236100                    LDQ     @MME,,AUTO
         4 000063   000004 036003                    ADLQ    4,DU
         4 000064   200014 756100                    STQ     @RETURN_DELTA+1,,AUTO
         4 000065   200003 236100                    LDQ     @MME,,AUTO
         4 000066   000003 036003                    ADLQ    3,DU
         4 000067   200013 756100                    STQ     @P_QREG+1,,AUTO
         4 000070   200003 236100                    LDQ     @MME,,AUTO
         4 000071   000002 036003                    ADLQ    2,DU
         4 000072   200012 756100                    STQ     @P_AREG+1,,AUTO
PL6.E3A0      #001=TOG$GCOS_MMES File=TOG$GCOS_MMES.:E05TSI                      WED 07/30/97 06:24 Page:57   
         4 000073   200003 236100                    LDQ     @MME,,AUTO
         4 000074   000001 036003                    ADLQ    1,DU
         4 000075   200011 756100                    STQ     @RETURN_DELTA+3,,AUTO
         4 000076   000204 701000 4                  TSX1    TOG$MME_GEINOS
         4 000077   000000 011000                    NOP     0
         4 000100   000120 710000 4                  TRA     s:8959

      167     8954    2                         MME.WD_5,RETURN_DELTA);
      168     8955    2              CASE (%GELBAR);

      169     8956    2                 CALL TOG$MME_GELBAR(MREG.A,MREG.Q,RETURN_DELTA);

   8956  4 000101   200006 236100                    LDQ     @RETURN_DELTA,,AUTO
         4 000102   200013 756100                    STQ     @P_QREG+1,,AUTO
         4 000103   200004 236100                    LDQ     @MREG,,AUTO
         4 000104   000005 036003                    ADLQ    5,DU
         4 000105   200012 756100                    STQ     @P_AREG+1,,AUTO
         4 000106   200004 236100                    LDQ     @MREG,,AUTO
         4 000107   000004 036003                    ADLQ    4,DU
         4 000110   200011 756100                    STQ     @RETURN_DELTA+3,,AUTO
         4 000111   001250 701000 4                  TSX1    TOG$MME_GELBAR
         4 000112   000000 011000                    NOP     0

      170     8957    2           END /* THEN */ ;

   8957  4 000113   000120 710000 4                  TRA     s:8959

      171     8958    1      ELSE CALL TOG$MME_CLEARQ(RETURN_DELTA);

   8958  4 000114   200006 236100                    LDQ     @RETURN_DELTA,,AUTO
         4 000115   200011 756100                    STQ     @RETURN_DELTA+3,,AUTO
         4 000116   000121 701000 4                  TSX1    TOG$MME_CLEARQ
         4 000117   000000 011000                    NOP     0

      172     8959    1      RETURN;

   8959  4 000120   000000 702200 xent               TSX2  ! X66_ARET
PL6.E3A0      #001=TOG$GCOS_MMES File=TOG$GCOS_MMES.:E05TSI                      WED 07/30/97 06:24 Page:58   

      173     8960
      174     8961        /* END TOG$GCOS_MMES */
      175     8962        %EJECT;
PL6.E3A0      #001=TOG$GCOS_MMES File=TOG$GCOS_MMES.:E05TSI                      WED 07/30/97 06:24 Page:59   
      176     8963        /*I* NAME:         TOG$MME_CLEARQ
      177     8964             INTERFACE:    STORE_CLEARQ_ISC_STATUS
      178     8965                           PAY_CLEARQ_ISC_CC
      179     8966             INPUT:        None.
      180     8967             OUTPUT:       RETURN_DELTA = 1
      181     8968             DESCRIPTION:  Checks TOT$ECP.ISC.READ_OUT flag to see if a subexec
      182     8969                           has an Interslave Read outstanding.  If there is,
      183     8970                           it is canceled and status returned and a Courtesy
      184     8971        */
      185     8972
      186     8973    1   TOG$MME_CLEARQ: PROC(RETURN_DELTA);

   8973  4 000121   200010 741300       TOG$MME_CLE* STX1  ! @RETURN_DELTA+2,,AUTO

      187     8974
      188     8975    2      DCL RETURN_DELTA SBIN HALF;
      189     8976
      190     8977        /* Code */
      191     8978
      192     8979    2      IF TOT$ECP.ISC.READ_OUT

   8979  4 000122   000005 234000 xsym               SZN     TOT$ECP+5
         4 000123   000135 605000 4                  TPL     s:8987

      193     8980    3      THEN DO;

      194     8981    3              CALL STORE_CLEARQ_ISC_STATUS;

   8981  4 000124   000142 701000 4                  TSX1    STORE_CLEARQ_ISC_STATUS
         4 000125   000000 011000                    NOP     0

      195     8982    3              CALL PAY_CLEARQ_ISC_CC;

   8982  4 000126   000160 701000 4                  TSX1    PAY_CLEARQ_ISC_CC
         4 000127   000000 011000                    NOP     0

      196     8983    3              TOT$ECP.ISC.READ_OUT = %FALSE ;
PL6.E3A0      #001=TOG$GCOS_MMES File=TOG$GCOS_MMES.:E05TSI                      WED 07/30/97 06:24 Page:60   

   8983  4 000130   000031 236000 xsym               LDQ     B_VECTNIL+25
         4 000131   000005 356000 xsym               ANSQ    TOT$ECP+5

      197     8984    3              ISC_GEINOS_DATA = '0'B;

   8984  4 000132   000000 100400                    MLR     fill='000'O
         4 000133   000002 000001 xsym               ADSC9   B_VECTNIL+2              cn=0,n=1
         4 000134   000004 000014 1                  ADSC9   ISC_GEINOS_DATA          cn=0,n=12

      198     8985    3           END;

      199     8986    2      ELSE /* Do Nothing */ ;
      200     8987    2      RETURN_DELTA = 1;

   8987  4 000135   000001 220003                    LDX0    1,DU
         4 000136   200011 470500                    LDP0    @RETURN_DELTA,,AUTO
         4 000137   000000 740100                    STX0    0,,PR0

      201     8988    2      RETURN;

   8988  4 000140   200010 221300                    LDX1  ! @RETURN_DELTA+2,,AUTO
         4 000141   000001 702211                    TSX2  ! 1,X1

      202     8989
      203     8990        /*END TOG$MME_CLEARQ*/
      204     8991        %EJECT;
PL6.E3A0      #001=TOG$GCOS_MMES File=TOG$GCOS_MMES.:E05TSI                      WED 07/30/97 06:24 Page:61   
      205     8992    2   STORE_CLEARQ_ISC_STATUS: PROC;

   8992  4 000142   200012 741300       STORE_CLEAR* STX1  ! @P_AREG+1,,AUTO

      206     8993
      207     8994    3      DCL 1 STATUS BASED ALIGNED,
      208     8995    3            2 W1 BIT (36) UNAL,
      209     8996    3            2 W2,
      210     8997    3              3 LAST_LOC UBIN (18) UNAL,
      211     8998    3              3 * UBIN (6) UNAL,
      212     8999    3              3 DCW_RESIDUE UBIN (12) UNAL;
      213     9000    3      DCL STATUS$ PTR;
      214     9001
      215     9002        /* Code */
      216     9003
      217     9004    3      IF ISC_GEINOS_DATA.STATUS_ADR = 0

   9004  4 000143   000006 220000 1                  LDX0    ISC_GEINOS_DATA+2
         4 000144   000156 600000 4                  TZE     s:9011

      218     9005    3      THEN /* Don't return Status if zero */ ;
      219     9006    4      ELSE DO;

      220     9007    4              STATUS$ = PINCRW (IS$, ISC_GEINOS_DATA.STATUS_ADR) ;

   9007  4 000145   000006 236000 1                  LDQ     ISC_GEINOS_DATA+2
         4 000146   777777 376003                    ANQ     -1,DU
         4 000147   000000 036000 2                  ADLQ    FPTN_
         4 000150   200013 756100                    STQ     STATUS$,,AUTO

      221     9008    4              STATUS$ -> STATUS.W1 = '400006000000'O;

   9008  4 000151   000003 236000 2                  LDQ     BASE$+1
         4 000152   200013 470500                    LDP0    STATUS$,,AUTO
         4 000153   000000 756100                    STQ     0,,PR0

      222     9009    4              STATUS$ -> STATUS.W2.DCW_RESIDUE = 0;
PL6.E3A0      #001=TOG$GCOS_MMES File=TOG$GCOS_MMES.:E05TSI                      WED 07/30/97 06:24 Page:62   

   9009  4 000154   000000 236003                    LDQ     0,DU
         4 000155   000001 752103                    STCQ    1,'03'O,PR0

      223     9010    4           END;

      224     9011    3      RETURN;

   9011  4 000156   200012 221300                    LDX1  ! @P_AREG+1,,AUTO
         4 000157   000001 702211                    TSX2  ! 1,X1

      225     9012
      226     9013    3   END STORE_CLEARQ_ISC_STATUS;
      227     9014        %EJECT;
PL6.E3A0      #001=TOG$GCOS_MMES File=TOG$GCOS_MMES.:E05TSI                      WED 07/30/97 06:24 Page:63   
      228     9015    2   PAY_CLEARQ_ISC_CC: PROC;

   9015  4 000160   200012 741300       PAY_CLEARQ_* STX1  ! @P_AREG+1,,AUTO

      229     9016
      230     9017    3      DCL CC$ PTR;
      231     9018
      232     9019        /* Code */
      233     9020
      234     9021    3      IF ISC_GEINOS_DATA.CC_ADR = 0

   9021  4 000161   000006 720000 1                  LXL0    ISC_GEINOS_DATA+2
         4 000162   000174 600000 4                  TZE     s:9027

      235     9022    3      THEN /* No Courtesy Call Required */ ;
      236     9023    4      ELSE DO;

      237     9024    4              CC$ = PINCRW (IS$, ISC_GEINOS_DATA.CC_ADR) ;

   9024  4 000163   000000 636010                    EAQ     0,X0
         4 000164   000000 036000 2                  ADLQ    FPTN_
         4 000165   200013 756100                    STQ     CC$,,AUTO

      238     9025    4              CALL TOK$COURTESY_CALL(CC$);

   9025  4 000166   200013 630500                    EPPR0   CC$,,AUTO
         4 000167   200362 450500                    STP0    MSG_LGTH+1,,AUTO
         4 000170   200362 630500                    EPPR0   MSG_LGTH+1,,AUTO
         4 000171   000017 631400 xsym               EPPR1   B_VECTNIL+15
         4 000172   000000 701000 xent               TSX1    TOK$COURTESY_CALL
         4 000173   000000 011000                    NOP     0

      239     9026    4           END;

      240     9027    3      RETURN;

   9027  4 000174   200012 221300                    LDX1  ! @P_AREG+1,,AUTO
PL6.E3A0      #001=TOG$GCOS_MMES File=TOG$GCOS_MMES.:E05TSI                      WED 07/30/97 06:24 Page:64   
         4 000175   000001 702211                    TSX2  ! 1,X1

      241     9028
      242     9029    3   END PAY_CLEARQ_ISC_CC;
      243     9030    2   END TOG$MME_CLEARQ;
      244     9031        %EJECT;
PL6.E3A0      #001=TOG$GCOS_MMES File=TOG$GCOS_MMES.:E05TSI                      WED 07/30/97 06:24 Page:65   
      245     9032        /*I* NAME:         TOG$MME_GEENDC
      246     9033             INTERFACE:    UNWIND TO TOK$CC_RETURN
      247     9034             DESCRIPTION:  Calls M$CLRSTK to pop the top frame off the
      248     9035                           TCB stack.  The UNWIND TO TOK$CC_RETURN pops all
      249     9036                           the intervening auto frames between here and
      250     9037                           TOK$COURTESY_CALL, and returns control there.
      251     9038                           The auto frames that are popped belong to
      252     9039                           TOF$FAULTS and TOG$GCOS_MMES.
      253     9040        */
      254     9041
      255     9042    1   TOG$MME_GEENDC: PROC (RETURN_DELTA);

   9042  4 000176   200010 741300       TOG$MME_GEE* STX1  ! @RETURN_DELTA+2,,AUTO

      256     9043
      257     9044    2      DCL RETURN_DELTA SBIN HALF;
      258     9045
      259     9046        /* Code */
      260     9047
      261     9048    2      CALL M$CLRSTK ;

   9048  4 000177   010013 713400                    CLIMB   4107
         4 000200   000000 401760                    pmme    nvectors=0

      262     9049    2      UNWIND TO TOK$CC_RETURN;

   9049  4 000201   000000 237200 xsym               LDAQ  ! TOK$CC_RETURN
         4 000202   000000 700200 xent               TSX0  ! X66_AUNWIND
         4 000203   000000 000200                    ZERO    0,128

      263     9050
      264     9051    2   END TOG$MME_GEENDC;
      265     9052        %EJECT;
PL6.E3A0      #001=TOG$GCOS_MMES File=TOG$GCOS_MMES.:E05TSI                      WED 07/30/97 06:24 Page:66   
      266     9053        /*I* NAME:         TOG$MME_GEINOS
      267     9054                             MMEWD5,RETURN_DELTA);
      268     9055             INTERFACE:    DO_ISC_READ
      269     9056                           DO_SPECIAL_ISC_READ
      270     9057                           DO_ISC_WRITE
      271     9058                           DO_CONSOLE_WRITE
      272     9059             INPUT:        MMEWD1(0-5) contains the GEINOS op code.
      273     9060                           MMEWD2(18-35) contains the address of the DCW list.
      274     9061                           MMEWD3(0-17) contains the address of the status words.
      275     9062                           MMEWD3(18-35) contains the address of the Courtesy
      276     9063                             Call routine.
      277     9064                           MMEWD4 and MMEWD5 are not presently used.
      278     9065             OUTPUT:
      279     9066             DESCRIPTION:  Based on the command passed in the first 6 bits of
      280     9067                           the first word, one of 4 routines are called
      281     9068                           to simulate in a limited way the GCOS functions(the
      282     9069                           reader is advised to reference the GCOS Manual,
      283     9070                           DD19 and the I/O Programming Manual,FDB82
      284     9071                           for further detail).
      285     9072
      286     9073                           The following are the currently legal commands:
      287     9074
      288     9075                             '01'O--Interslave read
      289     9076                             '11'O--Interslave write
      290     9077                             '13'O--Console write
      291     9078                             '02'O--Special Interslave read (immediate return)
      292     9079
      293     9080                           The above MME GEINOS commands are further
      294     9081                           restricted to the following subset:
      295     9082
      296     9083                           a.  Only a subexec can do an Interslave Read.
      297     9084                           b.  Only TOLTS can do an Interslave Write.
      298     9085        */
      299     9086        %EJECT;
PL6.E3A0      #001=TOG$GCOS_MMES File=TOG$GCOS_MMES.:E05TSI                      WED 07/30/97 06:24 Page:67   
      300     9087    1   TOG$MME_GEINOS: PROC (P_MMEWD1,P_MMEWD2,P_MMEWD3,P_MMEWD4,P_MMEWD5,

   9087  4 000204   200010 741300       TOG$MME_GEI* STX1  ! @RETURN_DELTA+2,,AUTO

      301     9088    1              RETURN_DELTA);
      302     9089
      303     9090    2      DCL P_MMEWD1 UBIN (36);
      304     9091    2      DCL 1 MME_W1 REDEF P_MMEWD1,
      305     9092    2            2 DV_CMD UBIN (6) UNAL,
      306     9093    2            2 * UBIN (30) UNAL;
      307     9094    2      DCL P_MMEWD2 UBIN (36);
      308     9095    2      DCL 1 MME_W2 REDEF P_MMEWD2,
      309     9096    2            2 FILE_ADR UBIN (18) UNAL,
      310     9097    2            2 DCW_ADR UBIN (18) UNAL;
      311     9098    2      DCL 1 SDIA_MME_W2 REDEF P_MMEWD2,
      312     9099    2            2 FILE_ADDR UBIN (18) UNAL,
      313     9100    2            2 KEY_DCW_ADDR UBIN (18) UNAL;
      314     9101    2      DCL P_MMEWD3 UBIN (36);
      315     9102    2      DCL 1 MME_W3 REDEF P_MMEWD3,
      316     9103    2            2 STATUS_ADR UBIN (18) UNAL,
      317     9104    2            2 CC_ADR UBIN (18) UNAL;
      318     9105    2      DCL 1 SDIA_MME_W3 REDEF P_MMEWD3,
      319     9106    2            2 DV_CMD UBIN (6) UNAL,
      320     9107    2            2 * UBIN (30) UNAL;
      321     9108    2      DCL P_MMEWD4 UBIN (36);
      322     9109    2      DCL 1 SDIA_MME_W4 REDEF P_MMEWD4,
      323     9110    2            2 * UBIN (18) UNAL,
      324     9111    2            2 DATA_DCW_ADDR UBIN (18) UNAL;
      325     9112    2      DCL P_MMEWD5 UBIN (36);
      326     9113    2      DCL 1 SDIA_MME_W5 REDEF P_MMEWD5,
      327     9114    2            2 STATUS_ADDR UBIN (18) UNAL,
      328     9115    2            2 * UBIN (18) UNAL;
      329     9116    2      DCL RETURN_DELTA SBIN HALF;
      330     9117           %EJECT;
PL6.E3A0      #001=TOG$GCOS_MMES File=TOG$GCOS_MMES.:E05TSI                      WED 07/30/97 06:24 Page:68   
      331     9118
      332     9119        /* Code */
      333     9120
      334     9121    3      DO CASE (MME_W1.DV_CMD);

   9121  4 000205   200011 470500                    LDP0    @P_MMEWD1,,AUTO
         4 000206   000000 236100                    LDQ     0,,PR0
         4 000207   000036 772000                    QRL     30
         4 000210   000035 116007                    CMPQ    29,DL
         4 000211   000213 602006 4                  TNC     s:9121+6,QL
         4 000212   000267 710000 4                  TRA     s:9133
         4 000213   000267 710000 4                  TRA     s:9133
         4 000214   000250 710000 4                  TRA     s:9123
         4 000215   000253 710000 4                  TRA     s:9125
         4 000216   000267 710000 4                  TRA     s:9133
         4 000217   000267 710000 4                  TRA     s:9133
         4 000220   000267 710000 4                  TRA     s:9133
         4 000221   000267 710000 4                  TRA     s:9133
         4 000222   000267 710000 4                  TRA     s:9133
         4 000223   000267 710000 4                  TRA     s:9133
         4 000224   000256 710000 4                  TRA     s:9127
         4 000225   000267 710000 4                  TRA     s:9133
         4 000226   000261 710000 4                  TRA     s:9129
         4 000227   000267 710000 4                  TRA     s:9133
         4 000230   000267 710000 4                  TRA     s:9133
         4 000231   000267 710000 4                  TRA     s:9133
         4 000232   000267 710000 4                  TRA     s:9133
         4 000233   000267 710000 4                  TRA     s:9133
         4 000234   000267 710000 4                  TRA     s:9133
         4 000235   000267 710000 4                  TRA     s:9133
         4 000236   000267 710000 4                  TRA     s:9133
         4 000237   000267 710000 4                  TRA     s:9133
         4 000240   000267 710000 4                  TRA     s:9133
         4 000241   000267 710000 4                  TRA     s:9133
         4 000242   000267 710000 4                  TRA     s:9133
         4 000243   000267 710000 4                  TRA     s:9133
         4 000244   000267 710000 4                  TRA     s:9133
PL6.E3A0      #001=TOG$GCOS_MMES File=TOG$GCOS_MMES.:E05TSI                      WED 07/30/97 06:24 Page:69   
         4 000245   000267 710000 4                  TRA     s:9133
         4 000246   000267 710000 4                  TRA     s:9133
         4 000247   000264 710000 4                  TRA     s:9131

      335     9122    3         CASE (1);

      336     9123    3            CALL DO_ISC_READ;

   9123  4 000250   000301 701000 4                  TSX1    DO_ISC_READ
         4 000251   000000 011000                    NOP     0
         4 000252   000277 710000 4                  TRA     s:9136

      337     9124    3         CASE (2);

      338     9125    3            CALL DO_SPECIAL_ISC_READ;

   9125  4 000253   000344 701000 4                  TSX1    DO_SPECIAL_ISC_READ
         4 000254   000000 011000                    NOP     0
         4 000255   000277 710000 4                  TRA     s:9136

      339     9126    3         CASE (9);

      340     9127    3            CALL DO_ISC_WRITE;

   9127  4 000256   000420 701000 4                  TSX1    DO_ISC_WRITE
         4 000257   000000 011000                    NOP     0
         4 000260   000277 710000 4                  TRA     s:9136

      341     9128    3         CASE (11);

      342     9129    3            CALL DO_CONSOLE_WRITE;

   9129  4 000261   000625 701000 4                  TSX1    DO_CONSOLE_WRITE
         4 000262   000000 011000                    NOP     0
         4 000263   000277 710000 4                  TRA     s:9136

      343     9130    3         CASE (28);
PL6.E3A0      #001=TOG$GCOS_MMES File=TOG$GCOS_MMES.:E05TSI                      WED 07/30/97 06:24 Page:70   

      344     9131    3            CALL READ_WRITE_8K;

   9131  4 000264   001123 701000 4                  TSX1    READ_WRITE_8K
         4 000265   000000 011000                    NOP     0
         4 000266   000277 710000 4                  TRA     s:9136

      345     9132    3         CASE (ELSE);

      346     9133    3            TOG_ERROR_CODE.ERR# = %E$BADGEINOS ;

   9133  4 000267   000016 236000 1                  LDQ     TOG_ERROR_CODE
         4 000270   000000 376000 5                  ANQ     0
         4 000271   001520 276007                    ORQ     848,DL
         4 000272   000016 756000 1                  STQ     TOG_ERROR_CODE

      347     9134    3            CALL TOX$ERROR (TOG_ERROR_CODE) ;

   9134  4 000273   000001 630400 5                  EPPR0   1
         4 000274   000017 631400 xsym               EPPR1   B_VECTNIL+15
         4 000275   000000 701000 xent               TSX1    TOX$ERROR
         4 000276   000000 011000                    NOP     0

      348     9135    3      END;

      349     9136    2      RETURN;

   9136  4 000277   200010 221300                    LDX1  ! @RETURN_DELTA+2,,AUTO
         4 000300   000001 702211                    TSX2  ! 1,X1

      350     9137
      351     9138        /*END TOG$MME_GEINOS*/
      352     9139        %EJECT;
PL6.E3A0      #001=TOG$GCOS_MMES File=TOG$GCOS_MMES.:E05TSI                      WED 07/30/97 06:24 Page:71   
      353     9140        /*I* NAME:         DO_ISC_READ
      354     9141             INTERFACE:    SAVE_GEINOS_DATA
      355     9142                           MOVE_TO_POLTS
      356     9143                           STORE_ISC_STATUS
      357     9144                           PAY_ISC_CC
      358     9145             INPUT:        None.
      359     9146             OUTPUT:       The MME GEINOS data is stored away, and either
      360     9147                           the read operation completed or TOT$ECP.ISC.READ_OUT flag is
      361     9148                           set for future use.
      362     9149             DESCRIPTION:  First 2 housekeeping tasks are attended to.
      363     9150                           The flag TOT$ECP.ISC.READ_OUT is checked;  if it is set,
      364     9151                           TOLTS is aborted because the present design
      365     9152                           does not allowed for this condition, which indicates
      366     9153                           that a software error exists somewhere.  Otherwise,
      367     9154                           the count of outstanding I/O, TOT$IO_COUNT, is
      368     9155                           incremented.
      369     9156
      370     9157                           The 3 word MME GEINOS call sequence is then
      371     9158                           saved for future use.  The flag ISC_WRITE_OUT is
      372     9159                           then checked; if it is set, TOLTS has already done
      373     9160                           an Interslave Write which is still outstanding,
      374     9161                           and the data is ready for the subexec.  If the flag
      375     9162                           is not set, there is no outstanding write data,
      376     9163                           and instead the TOT$ECP.ISC.READ_OUT flag is set to indicate
      377     9164                           that the subexec has an Interslave Read outstanding.
      378     9165
      379     9166                           If ISC_WRITE_OUT is set, the read operation for the
      380     9167                           subexec can take place immediately, and status
      381     9168                           returned, and a Courtesy Call paid.  This
      382     9169                           sequence of events is accomplished by calling
      383     9170                           the following subroutines:
      384     9171
      385     9172                           a.  MOVE_TO_POLTS(moves data to subexec)
      386     9173                           b.  STORE_ISC_STATUS(returns status)
      387     9174                           c.  PAY_ISC_CC(pays Courtesy Call)
      388     9175
      389     9176                           Finally, the outstanding I/O count is decremented.
PL6.E3A0      #001=TOG$GCOS_MMES File=TOG$GCOS_MMES.:E05TSI                      WED 07/30/97 06:24 Page:72   
      390     9177
      391     9178                           RETURN_DELTA is set to a 4.
      392     9179        */
      393     9180
      394     9181    2   DO_ISC_READ: PROC;

   9181  4 000301   200020 741300       DO_ISC_READ  STX1  ! GELBAR_TIMEOUT+2,,AUTO

      395     9182
      396     9183        /* Code */
      397     9184
      398     9185    3      IF TOT$ECP.ISC.READ_OUT

   9185  4 000302   000005 234000 xsym               SZN     TOT$ECP+5
         4 000303   000315 605000 4                  TPL     s:9191

      399     9186    4      THEN DO ;

      400     9187    4              TOG_ERROR_CODE.ERR# = %E$MULTGENRD ;

   9187  4 000304   000016 236000 1                  LDQ     TOG_ERROR_CODE
         4 000305   000000 376000 5                  ANQ     0
         4 000306   001540 276007                    ORQ     864,DL
         4 000307   000016 756000 1                  STQ     TOG_ERROR_CODE

      401     9188    4              CALL TOX$ERROR (TOG_ERROR_CODE) ;

   9188  4 000310   000001 630400 5                  EPPR0   1
         4 000311   000017 631400 xsym               EPPR1   B_VECTNIL+15
         4 000312   000000 701000 xent               TSX1    TOX$ERROR
         4 000313   000000 011000                    NOP     0

      402     9189    4           END /* THEN */ ;

   9189  4 000314   000342 710000 4                  TRA     s:9204

      403     9190    4      ELSE DO ;
PL6.E3A0      #001=TOG$GCOS_MMES File=TOG$GCOS_MMES.:E05TSI                      WED 07/30/97 06:24 Page:73   

      404     9191    4              CALL SAVE_GEINOS_DATA;

   9191  4 000315   000512 701000 4                  TSX1    SAVE_GEINOS_DATA
         4 000316   000000 011000                    NOP     0

      405     9192    4              IF TOT$ECP.ISC.WRITE_OUT

   9192  4 000317   000005 236000 xsym               LDQ     TOT$ECP+5
         4 000320   200000 316003                    CANQ    65536,DU
         4 000321   000333 600000 4                  TZE     s:9199

      406     9193    5              THEN DO;

      407     9194    5                      TOT$ECP.ISC.WRITE_OUT = %FALSE ;

   9194  4 000322   000002 236000 5                  LDQ     2
         4 000323   000005 356000 xsym               ANSQ    TOT$ECP+5

      408     9195    5                      CALL MOVE_TO_POLTS;

   9195  4 000324   000551 701000 4                  TSX1    MOVE_TO_POLTS
         4 000325   000000 011000                    NOP     0

      409     9196    5                      CALL STORE_ISC_STATUS;

   9196  4 000326   000571 701000 4                  TSX1    STORE_ISC_STATUS
         4 000327   000000 011000                    NOP     0

      410     9197    5                      CALL PAY_ISC_CC;

   9197  4 000330   000607 701000 4                  TSX1    PAY_ISC_CC
         4 000331   000000 011000                    NOP     0

      411     9198    5                   END;

   9198  4 000332   000335 710000 4                  TRA     s:9200
PL6.E3A0      #001=TOG$GCOS_MMES File=TOG$GCOS_MMES.:E05TSI                      WED 07/30/97 06:24 Page:74   

      412     9199    4              ELSE TOT$ECP.ISC.READ_OUT = %TRUE ;

   9199  4 000333   400000 236003                    LDQ     -131072,DU
         4 000334   000005 256000 xsym               ORSQ    TOT$ECP+5

      413     9200    4              RETURN_DELTA = 4;

   9200  4 000335   000004 220003                    LDX0    4,DU
         4 000336   200016 470500                    LDP0    @RETURN_DELTA,,AUTO
         4 000337   000000 740100                    STX0    0,,PR0

      414     9201    4              RETURN;

   9201  4 000340   200020 221300                    LDX1  ! GELBAR_TIMEOUT+2,,AUTO
         4 000341   000001 702211                    TSX2  ! 1,X1

      415     9202    4           END /* ELSE */ ;
      416     9203
      417     9204    3   END DO_ISC_READ;

   9204  4 000342   200020 221300                    LDX1  ! GELBAR_TIMEOUT+2,,AUTO
         4 000343   000001 702211                    TSX2  ! 1,X1

      418     9205        %EJECT;
PL6.E3A0      #001=TOG$GCOS_MMES File=TOG$GCOS_MMES.:E05TSI                      WED 07/30/97 06:24 Page:75   
      419     9206        /*I* NAME:         DO_SPECIAL_ISC_READ
      420     9207             INTERFACE:    SAVE_GEINOS_DATA
      421     9208                           MOVE_TO_POLTS
      422     9209                           STORE_ISC_STATUS
      423     9210                           PAY_ISC_CC
      424     9211             INPUT:        None.
      425     9212             OUTPUT:
      426     9213             DESCRIPTION:  This is a special case of an Interslave Read in
      427     9214                           which the read is immediately completed or a
      428     9215                           return is made immediately to the caller.  No
      429     9216                           Interslave Read request is left outstanding as a
      430     9217                           result of this form of the MME GEINOS.
      431     9218
      432     9219                           The read outstanding flag is checked to make sure
      433     9220                           there are 2 reads outstanding(TOT$ECP.ISC.READ_OUT); if
      434     9221                           there are, TOLTS aborts.
      435     9222
      436     9223                           In this case since there will be immediate return
      437     9224                           to the subexec regardless of the outcome of the
      438     9225                           Interslave operation, the count of outstanding I/O
      439     9226                           is not altered.
      440     9227
      441     9228                           If there is an Interslave Write outstanding, the
      442     9229                           read operation to the subexec is completed.
      443     9230                           Otherwise, status is returned immediately to the
      444     9231                           subexec indicating unsuccessful I/O.
      445     9232
      446     9233                           If a Read operation is to be completed, it is done
      447     9234                           in the same manner that it is done in DO_ISC_READ.
      448     9235                           The following subroutines are called:
      449     9236
      450     9237                           a.  MOVE_TO_POLTS(moves data to subexec)
      451     9238                           b.  STORE_ISC_STATUS(returns status)
      452     9239                           c.  PAY_ISC_CC(pays Courtesy Call)
      453     9240
      454     9241                           If the Read operation is not to be completed,
      455     9242                           status is returned to the subexec to indicate so.
PL6.E3A0      #001=TOG$GCOS_MMES File=TOG$GCOS_MMES.:E05TSI                      WED 07/30/97 06:24 Page:76   
      456     9243                           Word 1 of the status is set to '430100000000'O to
      457     9244                           indicate "I/O not successful", and the DCW residue
      458     9245                           in Word 2 is set to zero.
      459     9246
      460     9247                           RETURN_DELTA is set to 4.
      461     9248        */
      462     9249
      463     9250    2   DO_SPECIAL_ISC_READ: PROC;

   9250  4 000344   200020 741300       DO_SPECIAL_* STX1  ! GELBAR_TIMEOUT+2,,AUTO

      464     9251
      465     9252    3      DCL 1 STATUS BASED ALIGNED,
      466     9253    3            2 W1 BIT (36),
      467     9254    3            2 W2,
      468     9255    3              3 * UBIN (24) UNAL,
      469     9256    3              3 DCW_RESIDUE UBIN (12) UNAL;
      470     9257    3      DCL STATUS$ PTR;
      471     9258           %EJECT ;
PL6.E3A0      #001=TOG$GCOS_MMES File=TOG$GCOS_MMES.:E05TSI                      WED 07/30/97 06:24 Page:77   
      472     9259        /* Code */
      473     9260
      474     9261    3      IF TOT$ECP.ISC.READ_OUT

   9261  4 000345   000005 234000 xsym               SZN     TOT$ECP+5
         4 000346   000360 605000 4                  TPL     s:9267

      475     9262    4      THEN DO ;

      476     9263    4              TOG_ERROR_CODE.ERR# = %E$MULTGENRD ;

   9263  4 000347   000016 236000 1                  LDQ     TOG_ERROR_CODE
         4 000350   000000 376000 5                  ANQ     0
         4 000351   001540 276007                    ORQ     864,DL
         4 000352   000016 756000 1                  STQ     TOG_ERROR_CODE

      477     9264    4              CALL TOX$ERROR (TOG_ERROR_CODE) ;

   9264  4 000353   000001 630400 5                  EPPR0   1
         4 000354   000017 631400 xsym               EPPR1   B_VECTNIL+15
         4 000355   000000 701000 xent               TSX1    TOX$ERROR
         4 000356   000000 011000                    NOP     0

      478     9265    4           END /* THEN */ ;

   9265  4 000357   000416 710000 4                  TRA     s:9286

      479     9266    4      ELSE DO ;

      480     9267    4              CALL SAVE_GEINOS_DATA;

   9267  4 000360   000512 701000 4                  TSX1    SAVE_GEINOS_DATA
         4 000361   000000 011000                    NOP     0

      481     9268    4              IF TOT$ECP.ISC.WRITE_OUT

   9268  4 000362   000005 236000 xsym               LDQ     TOT$ECP+5
PL6.E3A0      #001=TOG$GCOS_MMES File=TOG$GCOS_MMES.:E05TSI                      WED 07/30/97 06:24 Page:78   
         4 000363   200000 316003                    CANQ    65536,DU
         4 000364   000376 600000 4                  TZE     s:9275

      482     9269    5              THEN DO;

      483     9270    5                      TOT$ECP.ISC.WRITE_OUT = %FALSE ;

   9270  4 000365   000002 236000 5                  LDQ     2
         4 000366   000005 356000 xsym               ANSQ    TOT$ECP+5

      484     9271    5                      CALL MOVE_TO_POLTS;

   9271  4 000367   000551 701000 4                  TSX1    MOVE_TO_POLTS
         4 000370   000000 011000                    NOP     0

      485     9272    5                      CALL STORE_ISC_STATUS;

   9272  4 000371   000571 701000 4                  TSX1    STORE_ISC_STATUS
         4 000372   000000 011000                    NOP     0

      486     9273    5                      CALL PAY_ISC_CC;

   9273  4 000373   000607 701000 4                  TSX1    PAY_ISC_CC
         4 000374   000000 011000                    NOP     0

      487     9274    5                   END;

   9274  4 000375   000411 710000 4                  TRA     s:9282

      488     9275    4              ELSE IF ISC_GEINOS_DATA.STATUS_ADR = 0

   9275  4 000376   000006 220000 1                  LDX0    ISC_GEINOS_DATA+2
         4 000377   000411 600000 4                  TZE     s:9282

      489     9276    4                 THEN /* Don't return status */ ;
      490     9277    5                 ELSE DO;

PL6.E3A0      #001=TOG$GCOS_MMES File=TOG$GCOS_MMES.:E05TSI                      WED 07/30/97 06:24 Page:79   
      491     9278    5                         STATUS$ = PINCRW (IS$, ISC_GEINOS_DATA.STATUS_ADR) ;

   9278  4 000400   000006 236000 1                  LDQ     ISC_GEINOS_DATA+2
         4 000401   777777 376003                    ANQ     -1,DU
         4 000402   000000 036000 2                  ADLQ    FPTN_
         4 000403   200021 756100                    STQ     STATUS$,,AUTO

      492     9279    5                         STATUS$ -> STATUS.W1 = '430100000000'O;

   9279  4 000404   000004 236000 2                  LDQ     BASE$+2
         4 000405   200021 470500                    LDP0    STATUS$,,AUTO
         4 000406   000000 756100                    STQ     0,,PR0

      493     9280    5                         STATUS$ -> STATUS.W2.DCW_RESIDUE = 0;

   9280  4 000407   000000 236003                    LDQ     0,DU
         4 000410   000001 752103                    STCQ    1,'03'O,PR0

      494     9281    5                      END;

      495     9282    4              RETURN_DELTA = 4;

   9282  4 000411   000004 220003                    LDX0    4,DU
         4 000412   200016 470500                    LDP0    @RETURN_DELTA,,AUTO
         4 000413   000000 740100                    STX0    0,,PR0

      496     9283    4              RETURN;

   9283  4 000414   200020 221300                    LDX1  ! GELBAR_TIMEOUT+2,,AUTO
         4 000415   000001 702211                    TSX2  ! 1,X1

      497     9284    4           END /* ELSE */ ;
      498     9285
      499     9286    3   END DO_SPECIAL_ISC_READ;

   9286  4 000416   200020 221300                    LDX1  ! GELBAR_TIMEOUT+2,,AUTO
         4 000417   000001 702211                    TSX2  ! 1,X1
PL6.E3A0      #001=TOG$GCOS_MMES File=TOG$GCOS_MMES.:E05TSI                      WED 07/30/97 06:24 Page:80   

      500     9287        %EJECT;
PL6.E3A0      #001=TOG$GCOS_MMES File=TOG$GCOS_MMES.:E05TSI                      WED 07/30/97 06:24 Page:81   
      501     9288        /*I* NAME:         DO_ISC_WRITE
      502     9289             INTERFACE:    MOVE_FROM_TOLTS
      503     9290                           MOVE_TO_POLTS
      504     9291                           STORE_ISC_STATUS
      505     9292                           PAY_ISC_CC
      506     9293                           TOD$DISPATCHER
      507     9294             INPUT:        None.
      508     9295             OUTPUT:       The MME GEINOS data is stored away, and either the
      509     9296                           write operation completed or ISC_WRITE_OUT flag is
      510     9297                           set.
      511     9298             DESCRIPTION:  First a housekeeping task is attended to.
      512     9299                           The write outstanding flag, ISC_WRITE_OUT is checked
      513     9300                           to make sure another interslave write request
      514     9301                           is not outstanding.  If there is one, REQUEUE_WRITE
      515     9302                           is called to put the Interslave Write request
      516     9303                           back into the dispatcher queue for a later try.
      517     9304
      518     9305                           Note that the count of outstanding I/O is not
      519     9306                           incremented here because TOT$IO_COUNT is
      520     9307                           supposed to be only a count of I/O outstanding from
      521     9308                           the subexecs.
      522     9309
      523     9310                           The subroutine MOVE_FROM_TOLTS is called to move
      524     9311                           the Interslave Write data from TOLTS into an
      525     9312                           internal buffer here.  Then if there is an
      526     9313                           outstanding Interslave Read request from a
      527     9314                           subexec, the write operation is completed
      528     9315                           immediately.  Otherwise, the write outstanding flag
      529     9316                           ISC_WRITE_OUT is set.
      530     9317
      531     9318                           The write operation is completed by calling the
      532     9319                           following sequence of subroutines:
      533     9320
      534     9321                           a.  MOVE_TO_POLTS(move data to subexec)
      535     9322                           b.  STORE_ISC_STATUS(return status to subexec)
      536     9323                           c.  PAY_ISC_CC(pay Courtesy Call)
      537     9324
PL6.E3A0      #001=TOG$GCOS_MMES File=TOG$GCOS_MMES.:E05TSI                      WED 07/30/97 06:24 Page:82   
      538     9325                           Finally, the count of outstanding I/O is decremented.
      539     9326
      540     9327                           RETURN_DELTA is set to 4.
      541     9328        */
      542     9329
      543     9330    2   DO_ISC_WRITE: PROC;

   9330  4 000420   200020 741300       DO_ISC_WRITE STX1  ! GELBAR_TIMEOUT+2,,AUTO

      544     9331
      545     9332        /* Code */
      546     9333
      547     9334    3      IF TOT$ECP.ISC.WRITE_OUT

   9334  4 000421   000005 236000 xsym               LDQ     TOT$ECP+5
         4 000422   200000 316003                    CANQ    65536,DU
         4 000423   000427 600000 4                  TZE     s:9337

      548     9335    3      THEN CALL REQUEUE_WRITE;

   9335  4 000424   000453 701000 4                  TSX1    REQUEUE_WRITE
         4 000425   000000 011000                    NOP     0
         4 000426   000446 710000 4                  TRA     s:9347

      549     9336    4      ELSE DO;

      550     9337    4              CALL MOVE_FROM_TOLTS;

   9337  4 000427   000531 701000 4                  TSX1    MOVE_FROM_TOLTS
         4 000430   000000 011000                    NOP     0

      551     9338    4              IF TOT$ECP.ISC.READ_OUT

   9338  4 000431   000005 234000 xsym               SZN     TOT$ECP+5
         4 000432   000444 605000 4                  TPL     s:9345

      552     9339    5              THEN DO;
PL6.E3A0      #001=TOG$GCOS_MMES File=TOG$GCOS_MMES.:E05TSI                      WED 07/30/97 06:24 Page:83   

      553     9340    5                      TOT$ECP.ISC.READ_OUT = %FALSE ;

   9340  4 000433   000031 236000 xsym               LDQ     B_VECTNIL+25
         4 000434   000005 356000 xsym               ANSQ    TOT$ECP+5

      554     9341    5                      CALL MOVE_TO_POLTS;

   9341  4 000435   000551 701000 4                  TSX1    MOVE_TO_POLTS
         4 000436   000000 011000                    NOP     0

      555     9342    5                      CALL STORE_ISC_STATUS;

   9342  4 000437   000571 701000 4                  TSX1    STORE_ISC_STATUS
         4 000440   000000 011000                    NOP     0

      556     9343    5                      CALL PAY_ISC_CC;

   9343  4 000441   000607 701000 4                  TSX1    PAY_ISC_CC
         4 000442   000000 011000                    NOP     0

      557     9344    5                   END;

   9344  4 000443   000446 710000 4                  TRA     s:9347

      558     9345    4              ELSE TOT$ECP.ISC.WRITE_OUT = %TRUE ;

   9345  4 000444   200000 236003                    LDQ     65536,DU
         4 000445   000005 256000 xsym               ORSQ    TOT$ECP+5

      559     9346    4           END;

      560     9347    3      RETURN_DELTA = 4;

   9347  4 000446   000004 220003                    LDX0    4,DU
         4 000447   200016 470500                    LDP0    @RETURN_DELTA,,AUTO
         4 000450   000000 740100                    STX0    0,,PR0
PL6.E3A0      #001=TOG$GCOS_MMES File=TOG$GCOS_MMES.:E05TSI                      WED 07/30/97 06:24 Page:84   

      561     9348    3      RETURN;

   9348  4 000451   200020 221300                    LDX1  ! GELBAR_TIMEOUT+2,,AUTO
         4 000452   000001 702211                    TSX2  ! 1,X1

      562     9349
      563     9350    3   END DO_ISC_WRITE;
      564     9351        %EJECT;
PL6.E3A0      #001=TOG$GCOS_MMES File=TOG$GCOS_MMES.:E05TSI                      WED 07/30/97 06:24 Page:85   
      565     9352        /*I* NAME:         REQUEUE_WRITE
      566     9353             DESCRIPTION:  Fetches the interslave write data from TOLTS and
      567     9354                           stores it in QUEUE_ENTRY, and calls the TOLTS
      568     9355                           dispatcher (TOD$DISPATCHER) to put the Interslave
      569     9356                           write request back into the queue.
      570     9357        */
      571     9358
      572     9359    2   REQUEUE_WRITE: PROC;

   9359  4 000453   200022 741300       REQUEUE_WRI* STX1  ! BOUNDS_ADR+1,,AUTO

      573     9360
      574     9361    3      DCL DATA (0:2) UBIN (36) BASED ALIGNED;
      575     9362    3      DCL DATA$ PTR;
      576     9363    3      DCL 1 DCW BASED ALIGNED,
      577     9364    3            2 ADR UBIN (18) UNAL,
      578     9365    3            2 * UBIN (18) UNAL;
      579     9366    3      DCL  DCW$ PTR;
      580     9367    3      DCL QUEUE_ENTRY (0:2) UBIN(36);
      581     9368    3      DCL REQUEST_TYPE UBIN(36);
      582     9369    3      DCL SERVICE_CODE UBIN(18);
      583     9370
      584     9371        /* Code */
      585     9372
      586     9373    3      DCW$ = PINCRW (IS$, MME_W2.DCW_ADR) ;

   9373  4 000454   200012 470500                    LDP0    @P_MMEWD2,,AUTO
         4 000455   000000 720100                    LXL0    0,,PR0
         4 000456   000000 636010                    EAQ     0,X0
         4 000457   000000 036000 2                  ADLQ    FPTN_
         4 000460   200024 756100                    STQ     DCW$,,AUTO

      587     9374    3      DATA$ = PINCRW (IS$, DCW$ -> DCW.ADR) ;

   9374  4 000461   200024 471500                    LDP1    DCW$,,AUTO
         4 000462   100000 222100                    LDX2    0,,PR1
         4 000463   000000 636012                    EAQ     0,X2
PL6.E3A0      #001=TOG$GCOS_MMES File=TOG$GCOS_MMES.:E05TSI                      WED 07/30/97 06:24 Page:86   
         4 000464   000000 036000 2                  ADLQ    FPTN_
         4 000465   200023 756100                    STQ     DATA$,,AUTO

      588     9375    3      QUEUE_ENTRY = DATA$ -> DATA;

   9375  4 000466   200023 473500                    LDP3    DATA$,,AUTO
         4 000467   000100 100500                    MLR     fill='000'O
         4 000470   300000 000014                    ADSC9   0,,PR3                   cn=0,n=12
         4 000471   200025 000014                    ADSC9   QUEUE_ENTRY,,AUTO        cn=0,n=12

      589     9376    3      REQUEST_TYPE = %DRT_BUILD;

   9376  4 000472   000001 235007                    LDA     1,DL
         4 000473   200030 755100                    STA     REQUEST_TYPE,,AUTO

      590     9377    3      SERVICE_CODE = %DSC_ISC;

   9377  4 000474   000002 220003                    LDX0    2,DU
         4 000475   200031 740100                    STX0    SERVICE_CODE,,AUTO

      591     9378    3      CALL TOD$DISPATCHER(REQUEST_TYPE,SERVICE_CODE,QUEUE_ENTRY);

   9378  4 000476   200025 634500                    EPPR4   QUEUE_ENTRY,,AUTO
         4 000477   200364 454500                    STP4    MSG_LGTH+3,,AUTO
         4 000500   200031 635500                    EPPR5   SERVICE_CODE,,AUTO
         4 000501   200363 455500                    STP5    MSG_LGTH+2,,AUTO
         4 000502   200030 636500                    EPPR6   REQUEST_TYPE,,AUTO
         4 000503   200362 456500                    STP6    MSG_LGTH+1,,AUTO
         4 000504   200362 630500                    EPPR0   MSG_LGTH+1,,AUTO
         4 000505   000021 631400 xsym               EPPR1   B_VECTNIL+17
         4 000506   000000 701000 xent               TSX1    TOD$DISPATCHER
         4 000507   000000 011000                    NOP     0

      592     9379    3      RETURN;

   9379  4 000510   200022 221300                    LDX1  ! BOUNDS_ADR+1,,AUTO
         4 000511   000001 702211                    TSX2  ! 1,X1
PL6.E3A0      #001=TOG$GCOS_MMES File=TOG$GCOS_MMES.:E05TSI                      WED 07/30/97 06:24 Page:87   

      593     9380
      594     9381    3   END REQUEUE_WRITE;
      595     9382        %EJECT;
PL6.E3A0      #001=TOG$GCOS_MMES File=TOG$GCOS_MMES.:E05TSI                      WED 07/30/97 06:24 Page:88   
      596     9383        /*I* NAME:         SAVE_GEINOS_DATA
      597     9384             DESCRIPTION:  Saves the 3 word MME GEINOS calling sequence
      598     9385                           (which immediately follows the MME GEINOS instruction)
      599     9386                           in the structure ISC_GEINOS_DATA.
      600     9387
      601     9388                           The information of interest is:
      602     9389
      603     9390                           a.  Op code
      604     9391                           b.  Address of DCW list
      605     9392                           c.  Address of status return words
      606     9393                           d.  Address of Courtesy Call routine
      607     9394        */
      608     9395
      609     9396    2   SAVE_GEINOS_DATA: PROC;

   9396  4 000512   200022 741300       SAVE_GEINOS* STX1  ! BOUNDS_ADR+1,,AUTO

      610     9397
      611     9398        /* Code */
      612     9399
      613     9400    3      ISC_GEINOS_DATA.OP_CODE = P_MMEWD1;

   9400  4 000513   200011 470500                    LDP0    @P_MMEWD1,,AUTO
         4 000514   000000 235100                    LDA     0,,PR0
         4 000515   000004 755000 1                  STA     ISC_GEINOS_DATA

      614     9401    3      ISC_GEINOS_DATA.FILE_ADR = MME_W2.FILE_ADR;

   9401  4 000516   200012 471500                    LDP1    @P_MMEWD2,,AUTO
         4 000517   100000 220100                    LDX0    0,,PR1
         4 000520   000005 740000 1                  STX0    ISC_GEINOS_DATA+1

      615     9402    3      ISC_GEINOS_DATA.DCW_ADR = MME_W2.DCW_ADR;

   9402  4 000521   100000 722100                    LXL2    0,,PR1
         4 000522   000005 442000 1                  SXL2    ISC_GEINOS_DATA+1

PL6.E3A0      #001=TOG$GCOS_MMES File=TOG$GCOS_MMES.:E05TSI                      WED 07/30/97 06:24 Page:89   
      616     9403    3      ISC_GEINOS_DATA.STATUS_ADR = MME_W3.STATUS_ADR;

   9403  4 000523   200013 473500                    LDP3    @P_MMEWD3,,AUTO
         4 000524   300000 223100                    LDX3    0,,PR3
         4 000525   000006 743000 1                  STX3    ISC_GEINOS_DATA+2

      617     9404    3      ISC_GEINOS_DATA.CC_ADR = MME_W3.CC_ADR;

   9404  4 000526   300000 724100                    LXL4    0,,PR3
         4 000527   000006 444000 1                  SXL4    ISC_GEINOS_DATA+2

      618     9405    3      RETURN;

   9405  4 000530   000001 702211                    TSX2  ! 1,X1

      619     9406
      620     9407    3   END SAVE_GEINOS_DATA;
      621     9408        %EJECT;
PL6.E3A0      #001=TOG$GCOS_MMES File=TOG$GCOS_MMES.:E05TSI                      WED 07/30/97 06:24 Page:90   
      622     9409        /*I* NAME:         MOVE_FROM_TOLTS
      623     9410             DESCRIPTION:  Uses the DCW list in the MME GEINOS calling
      624     9411                           sequence to move 3 words of Interslave write data
      625     9412                           from TOLTS to the arrary ISC_WRITE_DATA.
      626     9413
      627     9414                           This asssumes the DCW list consists of only 1 DCW
      628     9415                           word, which is a reasonable assumption since TOLTS
      629     9416                           build the list.
      630     9417        */
      631     9418
      632     9419    2   MOVE_FROM_TOLTS: PROC;

   9419  4 000531   200022 741300       MOVE_FROM_T* STX1  ! BOUNDS_ADR+1,,AUTO

      633     9420
      634     9421    3      DCL DATA (0:2) UBIN (36) BASED ALIGNED;
      635     9422    3      DCL DATA$ PTR;
      636     9423    3      DCL 1 DCW BASED ALIGNED,
      637     9424    3            2 ADR UBIN (18) UNAL,
      638     9425    3            2 * UBIN (18) UNAL;
      639     9426    3      DCL  DCW$ PTR;
      640     9427
      641     9428        /* Code */
      642     9429
      643     9430    3      DCW$ = PINCRW (IS$, MME_W2.DCW_ADR) ;

   9430  4 000532   200012 470500                    LDP0    @P_MMEWD2,,AUTO
         4 000533   000000 720100                    LXL0    0,,PR0
         4 000534   000000 636010                    EAQ     0,X0
         4 000535   000000 036000 2                  ADLQ    FPTN_
         4 000536   200024 756100                    STQ     DCW$,,AUTO

      644     9431    3      DATA$ = PINCRW (IS$, DCW$ -> DCW.ADR) ;

   9431  4 000537   200024 471500                    LDP1    DCW$,,AUTO
         4 000540   100000 222100                    LDX2    0,,PR1
         4 000541   000000 636012                    EAQ     0,X2
PL6.E3A0      #001=TOG$GCOS_MMES File=TOG$GCOS_MMES.:E05TSI                      WED 07/30/97 06:24 Page:91   
         4 000542   000000 036000 2                  ADLQ    FPTN_
         4 000543   200023 756100                    STQ     DATA$,,AUTO

      645     9432    3      ISC_WRITE_DATA = DATA$ -> DATA;

   9432  4 000544   200023 473500                    LDP3    DATA$,,AUTO
         4 000545   000000 100500                    MLR     fill='000'O
         4 000546   300000 000014                    ADSC9   0,,PR3                   cn=0,n=12
         4 000547   000007 000014 1                  ADSC9   ISC_WRITE_DATA           cn=0,n=12

      646     9433    3      RETURN;

   9433  4 000550   000001 702211                    TSX2  ! 1,X1

      647     9434
      648     9435    3   END MOVE_FROM_TOLTS;
      649     9436        %EJECT;
PL6.E3A0      #001=TOG$GCOS_MMES File=TOG$GCOS_MMES.:E05TSI                      WED 07/30/97 06:24 Page:92   
      650     9437        /*I* NAME:         MOVE_TO_POLTS
      651     9438             DESCRIPTION:  Uses the DCW list address stored in ISC_GEINOS_DATA
      652     9439                            to move the Interslave data from ISC_WRITE_DATA
      653     9440                           to the subexec.  This move involves 3 words of data.
      654     9441
      655     9442                           This routine assumes there is only one DCW in
      656     9443                           the list.
      657     9444        */
      658     9445
      659     9446    2   MOVE_TO_POLTS: PROC;

   9446  4 000551   200022 741300       MOVE_TO_POL* STX1  ! BOUNDS_ADR+1,,AUTO

      660     9447
      661     9448    3      DCL DATA (0:2) UBIN (36) BASED ALIGNED;
      662     9449    3      DCL DATA$ PTR;
      663     9450    3      DCL 1 DCW BASED ALIGNED,
      664     9451    3            2 ADR UBIN (18) UNAL,
      665     9452    3            2 * UBIN (18) UNAL;
      666     9453    3      DCL DCW$  PTR;
      667     9454
      668     9455        /* Code */
      669     9456
      670     9457    3      DCW$ = PINCRW (IS$, ISC_GEINOS_DATA.DCW_ADR) ;

   9457  4 000552   000005 720000 1                  LXL0    ISC_GEINOS_DATA+1
         4 000553   000000 636010                    EAQ     0,X0
         4 000554   000000 036000 2                  ADLQ    FPTN_
         4 000555   200024 756100                    STQ     DCW$,,AUTO

      671     9458    3      DATA$ = PINCRW (IS$, DCW$ -> DCW.ADR) ;

   9458  4 000556   200024 470500                    LDP0    DCW$,,AUTO
         4 000557   000000 222100                    LDX2    0,,PR0
         4 000560   000000 636012                    EAQ     0,X2
         4 000561   000000 036000 2                  ADLQ    FPTN_
         4 000562   200023 756100                    STQ     DATA$,,AUTO
PL6.E3A0      #001=TOG$GCOS_MMES File=TOG$GCOS_MMES.:E05TSI                      WED 07/30/97 06:24 Page:93   

      672     9459    3      DATA$ -> DATA = ISC_WRITE_DATA;

   9459  4 000563   200023 471500                    LDP1    DATA$,,AUTO
         4 000564   000100 100400                    MLR     fill='000'O
         4 000565   000007 000014 1                  ADSC9   ISC_WRITE_DATA           cn=0,n=12
         4 000566   100000 000014                    ADSC9   0,,PR1                   cn=0,n=12

      673     9460    3      RETURN;

   9460  4 000567   200022 221300                    LDX1  ! BOUNDS_ADR+1,,AUTO
         4 000570   000001 702211                    TSX2  ! 1,X1

      674     9461
      675     9462    3   END MOVE_TO_POLTS;
      676     9463        %EJECT;
PL6.E3A0      #001=TOG$GCOS_MMES File=TOG$GCOS_MMES.:E05TSI                      WED 07/30/97 06:24 Page:94   
      677     9464        /*I* NAME:         STORE_ISC_STATUS
      678     9465             DESCRIPTION:  On completion of an Interslave operation, returns
      679     9466                           status to the subexec only.  No status is returned
      680     9467                           to TOLTS.  The address of the status words is
      681     9468                           contained in ISC_GEINOS_DATA.  If it is 0, no status
      682     9469                           is returned to the subexec.
      683     9470
      684     9471                           If it isn't, ready status('400000000000'O) is
      685     9472                           returned in Word 1, and the DCW residue field in
      686     9473                           Word 2 is set to 0.
      687     9474        */
      688     9475
      689     9476    2   STORE_ISC_STATUS: PROC;

   9476  4 000571   200022 741300       STORE_ISC_S* STX1  ! BOUNDS_ADR+1,,AUTO

      690     9477
      691     9478    3      DCL 1 STATUS BASED ALIGNED,
      692     9479    3            2 W1 BIT (36),
      693     9480    3            2 W2,
      694     9481    3              3 LAST_LOC UBIN (18) UNAL,
      695     9482    3              3 * UBIN (6) UNAL,
      696     9483    3              3 DCW_RESIDUE UBIN (12) UNAL;
      697     9484    3      DCL STATUS$ PTR;
      698     9485
      699     9486        /* Code */
      700     9487
      701     9488    3      IF ISC_GEINOS_DATA.STATUS_ADR = 0

   9488  4 000572   000006 220000 1                  LDX0    ISC_GEINOS_DATA+2
         4 000573   000605 600000 4                  TZE     s:9495

      702     9489    3      THEN /* Don't return STATUS */ ;
      703     9490    4      ELSE DO;

      704     9491    4              STATUS$ = PINCRW (IS$, ISC_GEINOS_DATA.STATUS_ADR) ;

PL6.E3A0      #001=TOG$GCOS_MMES File=TOG$GCOS_MMES.:E05TSI                      WED 07/30/97 06:24 Page:95   
   9491  4 000574   000006 236000 1                  LDQ     ISC_GEINOS_DATA+2
         4 000575   777777 376003                    ANQ     -1,DU
         4 000576   000000 036000 2                  ADLQ    FPTN_
         4 000577   200023 756100                    STQ     STATUS$,,AUTO

      705     9492    4              STATUS$ -> STATUS.W1 = '400000000000'O;

   9492  4 000600   000030 236000 xsym               LDQ     B_VECTNIL+24
         4 000601   200023 470500                    LDP0    STATUS$,,AUTO
         4 000602   000000 756100                    STQ     0,,PR0

      706     9493    4              STATUS$ -> STATUS.W2.DCW_RESIDUE = 0;

   9493  4 000603   000000 236003                    LDQ     0,DU
         4 000604   000001 752103                    STCQ    1,'03'O,PR0

      707     9494    4           END;

      708     9495    3      RETURN;

   9495  4 000605   200022 221300                    LDX1  ! BOUNDS_ADR+1,,AUTO
         4 000606   000001 702211                    TSX2  ! 1,X1

      709     9496
      710     9497    3   END STORE_ISC_STATUS;
      711     9498        %EJECT;
PL6.E3A0      #001=TOG$GCOS_MMES File=TOG$GCOS_MMES.:E05TSI                      WED 07/30/97 06:24 Page:96   
      712     9499        /*I* NAME:         PAY_ISC_CC
      713     9500             INTERFACE:    TOK$COURTESY_CALL
      714     9501             DESCRIPTION:  The address of the Courtesy Call routine is stored
      715     9502                           in ISC_GEINOS_DATA.  If it is zero, no Courtesy
      716     9503                           Call is required.  If one is necessary, an entry
      717     9504                           pointer (CC$) is built to point to the Courtesy
      718     9505                           Call routine.  This is passed to TOK$COURTESY_CALL
      719     9506                           which pays the Courtesy Call to the subexec
      720     9507                           and returns here.
      721     9508        */
      722     9509
      723     9510    2   PAY_ISC_CC: PROC;

   9510  4 000607   200022 741300       PAY_ISC_CC   STX1  ! BOUNDS_ADR+1,,AUTO

      724     9511
      725     9512    3      DCL CC$ PTR;
      726     9513
      727     9514        /* Code */
      728     9515
      729     9516    3      IF ISC_GEINOS_DATA.CC_ADR = 0

   9516  4 000610   000006 720000 1                  LXL0    ISC_GEINOS_DATA+2
         4 000611   000623 600000 4                  TZE     s:9522

      730     9517    3      THEN /* No Courtesy Call Required */ ;
      731     9518    4      ELSE DO;

      732     9519    4              CC$ = PINCRW (IS$, ISC_GEINOS_DATA.CC_ADR) ;

   9519  4 000612   000000 636010                    EAQ     0,X0
         4 000613   000000 036000 2                  ADLQ    FPTN_
         4 000614   200023 756100                    STQ     CC$,,AUTO

      733     9520    4              CALL TOK$COURTESY_CALL(CC$);

   9520  4 000615   200023 630500                    EPPR0   CC$,,AUTO
PL6.E3A0      #001=TOG$GCOS_MMES File=TOG$GCOS_MMES.:E05TSI                      WED 07/30/97 06:24 Page:97   
         4 000616   200362 450500                    STP0    MSG_LGTH+1,,AUTO
         4 000617   200362 630500                    EPPR0   MSG_LGTH+1,,AUTO
         4 000620   000017 631400 xsym               EPPR1   B_VECTNIL+15
         4 000621   000000 701000 xent               TSX1    TOK$COURTESY_CALL
         4 000622   000000 011000                    NOP     0

      734     9521    4           END;

      735     9522    3      RETURN;

   9522  4 000623   200022 221300                    LDX1  ! BOUNDS_ADR+1,,AUTO
         4 000624   000001 702211                    TSX2  ! 1,X1

      736     9523
      737     9524    3   END PAY_ISC_CC;
      738     9525        %EJECT;
PL6.E3A0      #001=TOG$GCOS_MMES File=TOG$GCOS_MMES.:E05TSI                      WED 07/30/97 06:24 Page:98   
      739     9526        /*I* NAME:         DO_CONSOLE_WRITE
      740     9527             INTERFACE:    TOT$BCD_ASCII
      741     9528                           TOT$CONSOLE_OUT
      742     9529             INPUT:        None.
      743     9530             OUTPUT:
      744     9531             DESCRIPTION:  The output message specified by the DCW list
      745     9532                           passed in the MME GEINOS calling sequence is output
      746     9533                           to the terminal.  IThe address of the DCW
      747     9534                           list is passed in the second word of the calling
      748     9535                           sequence.  It is used to access and thread through
      749     9536                           the DCW list.  The output message is reassembled
      750     9537                           in DATA.  When the DCW list has been
      751     9538                           processed (found an IOTD type DCW), the BCD
      752     9539                           message is converted from BCD to ASCII.
      753     9540                           Finally a vector framing the message is stored into
      754     9541                           CONSOLE_FPT.BUF_ and TOT$CONSOLE_OUT called to
      755     9542                           output the message to the  terminal.
      756     9543
      757     9544                           RETURN_DELTA is set to 4.
      758     9545        */
      759     9546        %EJECT;
PL6.E3A0      #001=TOG$GCOS_MMES File=TOG$GCOS_MMES.:E05TSI                      WED 07/30/97 06:24 Page:99   
      760     9547    2   DO_CONSOLE_WRITE: PROC;

   9547  4 000625   200020 741300       DO_CONSOLE_* STX1  ! GELBAR_TIMEOUT+2,,AUTO

      761     9548
      762     9549    3      DCL DATA_ASCII_FMT CHAR (510) CALIGNED ;
      763     9550    3      DCL CHAR_COUNT SBIN ALIGNED ;
      764     9551    3      DCL CONTINUE   UBIN (1) ;
      765     9552    3      DCL DATA (0:84) UBIN (36);
      766     9553
      767     9554    3      DCL DATA_BCD_FMT (0:509) REDEF DATA UBIN (6) UNAL;
      768     9555    3      DCL DATA$ PTR;
      769     9556    3      DCL DATA_TALLY UBIN (12) ALIGNED ;
      770     9557    3      DCL DATA_WORD UBIN (36) BASED ALIGNED ;
      771     9558    3      DCL 1 DCW       BASED ALIGNED,
      772     9559    3            2 ADR     UBIN (18) UNAL,
      773     9560    3            2 *       UBIN (4) UNAL,
      774     9561    3            2 TYPE    UBIN (2) UNAL,
      775     9562    3            2 WORD_COUNT UBIN (12) UNAL;
      776     9563    3      DCL DCWLIST$ PTR;
      777     9564    3      DCL M UBIN (36);
      778     9565    3      DCL MESSAGE_SIZE UBIN (36);
      779     9566    3      DCL N UBIN (36);
      780     9567           %EJECT;
PL6.E3A0      #001=TOG$GCOS_MMES File=TOG$GCOS_MMES.:E05TSI                      WED 07/30/97 06:24 Page:100  
      781     9568        /* Code */
      782     9569
      783     9570    3      MESSAGE_SIZE = 0;

   9570  4 000626   200354 450100                    STZ     MESSAGE_SIZE,,AUTO

      784     9571    3      DCWLIST$ = PINCRW (IS$, MME_W2.DCW_ADR) ;

   9571  4 000627   200012 470500                    LDP0    @P_MMEWD2,,AUTO
         4 000630   000000 720100                    LXL0    0,,PR0
         4 000631   000000 636010                    EAQ     0,X0
         4 000632   000000 036000 2                  ADLQ    FPTN_
         4 000633   200352 756100                    STQ     DCWLIST$,,AUTO

      785     9572    4      DO N = 0 TO 84;

   9572  4 000634   200355 450100                    STZ     N,,AUTO

      786     9573    4         DATA(N) = 0;

   9573  4 000635   200355 720100                    LXL0    N,,AUTO
         4 000636   200223 450110                    STZ     DATA,X0,AUTO

      787     9574    4      END;

   9574  4 000637   200355 235100                    LDA     N,,AUTO
         4 000640   000001 035007                    ADLA    1,DL
         4 000641   200355 755100                    STA     N,,AUTO
         4 000642   000125 115007                    CMPA    85,DL
         4 000643   000635 602000 4                  TNC     s:9573

      788     9575    3      CONTINUE = 1;

   9575  4 000644   400000 236003                    LDQ     -131072,DU
         4 000645   200222 756100                    STQ     CONTINUE,,AUTO

      789     9576    3      N = 0;
PL6.E3A0      #001=TOG$GCOS_MMES File=TOG$GCOS_MMES.:E05TSI                      WED 07/30/97 06:24 Page:101  

   9576  4 000646   200355 450100                    STZ     N,,AUTO

      790     9577    4      DO WHILE (CONTINUE = 1);

   9577  4 000647   200222 236100                    LDQ     CONTINUE,,AUTO
         4 000650   400000 376003                    ANQ     -131072,DU
         4 000651   000027 676000 xsym               ERQ     B_VECTNIL+23
         4 000652   000001 036007                    ADLQ    1,DL
         4 000653   400000 116003                    CMPQ    -131072,DU
         4 000654   000735 601000 4                  TNZ     s:9590

      791     9578    4         DATA$ = PINCRW (IS$, DCWLIST$ -> DCW.ADR) ;

   9578  4 000655   200352 470500                    LDP0    DCWLIST$,,AUTO
         4 000656   000000 220100                    LDX0    0,,PR0
         4 000657   000000 636010                    EAQ     0,X0
         4 000660   000000 036000 2                  ADLQ    FPTN_
         4 000661   200350 756100                    STQ     DATA$,,AUTO

      792     9579    4         DATA_TALLY = DCWLIST$ -> DCW.WORD_COUNT;

   9579  4 000662   000000 236100                    LDQ     0,,PR0
         4 000663   007777 376007                    ANQ     4095,DL
         4 000664   000030 736000                    QLS     24
         4 000665   200351 756100                    STQ     DATA_TALLY,,AUTO

      793     9580    4         MESSAGE_SIZE = MESSAGE_SIZE + DATA_TALLY;

   9580  4 000666   200351 236100                    LDQ     DATA_TALLY,,AUTO
         4 000667   000030 772000                    QRL     24
         4 000670   200354 036100                    ADLQ    MESSAGE_SIZE,,AUTO
         4 000671   200354 756100                    STQ     MESSAGE_SIZE,,AUTO

      794     9581    5         DO M = 0 TO DATA_TALLY - 1;

   9581  4 000672   200353 450100                    STZ     M,,AUTO
PL6.E3A0      #001=TOG$GCOS_MMES File=TOG$GCOS_MMES.:E05TSI                      WED 07/30/97 06:24 Page:102  
         4 000673   000711 710000 4                  TRA     s:9585+3

      795     9582    5            DATA(N) = DATA$ -> DATA_WORD;

   9582  4 000674   200350 470500                    LDP0    DATA$,,AUTO
         4 000675   200355 720100                    LXL0    N,,AUTO
         4 000676   000000 235100                    LDA     0,,PR0
         4 000677   200223 755110                    STA     DATA,X0,AUTO

      796     9583    5            DATA$ = PINCRW(DATA$,1);

   9583  4 000700   200350 236100                    LDQ     DATA$,,AUTO
         4 000701   000001 036003                    ADLQ    1,DU
         4 000702   200350 756100                    STQ     DATA$,,AUTO

      797     9584    5            N = N + 1;

   9584  4 000703   200355 235100                    LDA     N,,AUTO
         4 000704   000001 035007                    ADLA    1,DL
         4 000705   200355 755100                    STA     N,,AUTO

      798     9585    5         END;

   9585  4 000706   200353 235100                    LDA     M,,AUTO
         4 000707   000001 035007                    ADLA    1,DL
         4 000710   200353 755100                    STA     M,,AUTO
         4 000711   200351 236100                    LDQ     DATA_TALLY,,AUTO
         4 000712   000030 772000                    QRL     24
         4 000713   200353 116100                    CMPQ    M,,AUTO
         4 000714   000716 600000 4                  TZE     s:9586
         4 000715   000674 603000 4                  TRC     s:9582

      799     9586    4         IF DCWLIST$ -> DCW.TYPE = 0

   9586  4 000716   200352 470500                    LDP0    DCWLIST$,,AUTO
         4 000717   000000 236100                    LDQ     0,,PR0
         4 000720   030000 316007                    CANQ    12288,DL
PL6.E3A0      #001=TOG$GCOS_MMES File=TOG$GCOS_MMES.:E05TSI                      WED 07/30/97 06:24 Page:103  
         4 000721   000724 601000 4                  TNZ     s:9588

      800     9587    4         THEN CONTINUE = 0;

   9587  4 000722   200222 450100                    STZ     CONTINUE,,AUTO
         4 000723   000727 710000 4                  TRA     s:9589

      801     9588    4         ELSE DCWLIST$ = PINCRW(DCWLIST$,1);

   9588  4 000724   200352 236100                    LDQ     DCWLIST$,,AUTO
         4 000725   000001 036003                    ADLQ    1,DU
         4 000726   200352 756100                    STQ     DCWLIST$,,AUTO

      802     9589    4      END;

   9589  4 000727   200222 236100                    LDQ     CONTINUE,,AUTO
         4 000730   400000 376003                    ANQ     -131072,DU
         4 000731   000027 676000 xsym               ERQ     B_VECTNIL+23
         4 000732   000001 036007                    ADLQ    1,DL
         4 000733   400000 116003                    CMPQ    -131072,DU
         4 000734   000655 600000 4                  TZE     s:9578

      803     9590    3      CHAR_COUNT = MESSAGE_SIZE * 6 - 1;

   9590  4 000735   200354 236100                    LDQ     MESSAGE_SIZE,,AUTO
         4 000736   000006 402007                    MPY     6,DL
         4 000737   000001 136007                    SBLQ    1,DL
         4 000740   200221 756100                    STQ     CHAR_COUNT,,AUTO

      804     9591    3      CALL TOT$BCD_ASCII(DATA_BCD_FMT,DATA_ASCII_FMT,CHAR_COUNT);

   9591  4 000741   200221 630500                    EPPR0   CHAR_COUNT,,AUTO
         4 000742   200364 450500                    STP0    MSG_LGTH+3,,AUTO
         4 000743   200021 631500                    EPPR1   DATA_ASCII_FMT,,AUTO
         4 000744   200363 451500                    STP1    MSG_LGTH+2,,AUTO
         4 000745   200223 633500                    EPPR3   DATA,,AUTO
         4 000746   200362 453500                    STP3    MSG_LGTH+1,,AUTO
PL6.E3A0      #001=TOG$GCOS_MMES File=TOG$GCOS_MMES.:E05TSI                      WED 07/30/97 06:24 Page:104  
         4 000747   200362 630500                    EPPR0   MSG_LGTH+1,,AUTO
         4 000750   000021 631400 xsym               EPPR1   B_VECTNIL+17
         4 000751   000000 701000 xent               TSX1    TOT$BCD_ASCII
         4 000752   000000 011000                    NOP     0

      805     9592    3      CALL BREAK_MESSAGE ;

   9592  4 000753   000762 701000 4                  TSX1    BREAK_MESSAGE
         4 000754   000000 011000                    NOP     0

      806     9593    3      RETURN_DELTA = 4;

   9593  4 000755   000004 220003                    LDX0    4,DU
         4 000756   200016 470500                    LDP0    @RETURN_DELTA,,AUTO
         4 000757   000000 740100                    STX0    0,,PR0

      807     9594    3      RETURN;

   9594  4 000760   200020 221300                    LDX1  ! GELBAR_TIMEOUT+2,,AUTO
         4 000761   000001 702211                    TSX2  ! 1,X1

      808     9595
      809     9596        /* END DO_CONSOLE_WRITE */
      810     9597        %EJECT ;
PL6.E3A0      #001=TOG$GCOS_MMES File=TOG$GCOS_MMES.:E05TSI                      WED 07/30/97 06:24 Page:105  
      811     9598    3   BREAK_MESSAGE: PROC ;

   9598  4 000762   200356 741300       BREAK_MESSA* STX1  ! N+1,,AUTO

      812     9599
      813     9600    4      DCL 1 CRLF_ CONSTANT CALIGNED,
      814     9601    4            2 CR CHAR(1) UNAL INIT (BITASC('015'O)),
      815     9602    4            2 LF CHAR(1) UNAL INIT (BITASC('012'O));
      816     9603    4      DCL CRLF REDEF CRLF_ CHAR(2) CALIGNED ;
      817     9604    4      DCL CRLFX            UBIN (36) ALIGNED ;
      818     9605    4      DCL MSG_START        UBIN (36) ALIGNED ;
      819     9606    4      DCL MSG_LGTH         UBIN (36) ALIGNED ;
      820     9607
      821     9608        /* Code */
      822     9609
      823     9610           /* Get first non CRLF character to print */
      824     9611    4      MSG_START = 0 ;

   9611  4 000763   200360 450100                    STZ     MSG_START,,AUTO

      825     9612    4      CALL INDEX (CRLFX, CRLF, DATA_ASCII_FMT, MSG_START) ;

   9612  4 000764   200360 720100                    LXL0    MSG_START,,AUTO
         4 000765   777001 620010                    EAX0    -511,X0
         4 000766   777777 660003                    ERX0    -1,DU
         4 000767   200360 236100                    LDQ     MSG_START,,AUTO
         4 000770   200360 235100                    LDA     MSG_START,,AUTO
         4 000771   000000 120545                    SCD
         4 000772   200021 000010                    ADSC9   DATA_ASCII_FMT,A,AUTO    cn=0,n=*X0
         4 000773   000001 000002 2                  ADSC9   CRLF_                    cn=0,n=2
         4 000774   200357 000100                    ARG     CRLFX,,AUTO
         4 000775   200357 056100                    ASQ     CRLFX,,AUTO
         4 000776   001000 607000 4                  TTF     s:9613
         4 000777   200357 054100                    AOS     CRLFX,,AUTO

      826     9613    5      DO WHILE (MSG_START = CRLFX) ;

PL6.E3A0      #001=TOG$GCOS_MMES File=TOG$GCOS_MMES.:E05TSI                      WED 07/30/97 06:24 Page:106  
   9613  4 001000   200360 236100                    LDQ     MSG_START,,AUTO
         4 001001   200357 116100                    CMPQ    CRLFX,,AUTO
         4 001002   001023 601000 4                  TNZ     s:9619

      827     9614    5         MSG_START = MSG_START + 2 ;

   9614  4 001003   200360 235100                    LDA     MSG_START,,AUTO
         4 001004   000002 035007                    ADLA    2,DL
         4 001005   200360 755100                    STA     MSG_START,,AUTO

      828     9615    5         CALL INDEX (CRLFX, CRLF, DATA_ASCII_FMT, MSG_START) ;

   9615  4 001006   777001 620005                    EAX0    -511,AL
         4 001007   777777 660003                    ERX0    -1,DU
         4 001010   200360 236100                    LDQ     MSG_START,,AUTO
         4 001011   000000 120545                    SCD
         4 001012   200021 000010                    ADSC9   DATA_ASCII_FMT,A,AUTO    cn=0,n=*X0
         4 001013   000001 000002 2                  ADSC9   CRLF_                    cn=0,n=2
         4 001014   200357 000100                    ARG     CRLFX,,AUTO
         4 001015   200357 056100                    ASQ     CRLFX,,AUTO
         4 001016   001020 607000 4                  TTF     s:9616
         4 001017   200357 054100                    AOS     CRLFX,,AUTO

      829     9616    5      END /* WHILE */ ;

   9616  4 001020   200360 236100                    LDQ     MSG_START,,AUTO
         4 001021   200357 116100                    CMPQ    CRLFX,,AUTO
         4 001022   001003 600000 4                  TZE     s:9614

      830     9617           %EJECT ;
PL6.E3A0      #001=TOG$GCOS_MMES File=TOG$GCOS_MMES.:E05TSI                      WED 07/30/97 06:24 Page:107  
      831     9618           /* Loop through and print all parts of the message */
      832     9619    5      DO WHILE (MSG_START < CHAR_COUNT) ;

   9619  4 001023   000000 116003                    CMPQ    0,DU
         4 001024   001121 604000 4                  TMI     s:9636
         4 001025   200221 116100                    CMPQ    CHAR_COUNT,,AUTO
         4 001026   001121 605000 4                  TPL     s:9636

      833     9620              /* Set up message part length */
      834     9621    5         IF CRLFX < CHAR_COUNT

   9621  4 001027   200357 236100                    LDQ     CRLFX,,AUTO
         4 001030   001036 604000 4                  TMI     s:9623
         4 001031   200221 116100                    CMPQ    CHAR_COUNT,,AUTO
         4 001032   001036 605000 4                  TPL     s:9623

      835     9622    5         THEN MSG_LGTH = CRLFX - MSG_START ;

   9622  4 001033   200360 136100                    SBLQ    MSG_START,,AUTO
         4 001034   200361 756100                    STQ     MSG_LGTH,,AUTO
         4 001035   001041 710000 4                  TRA     s:9625

      836     9623    5         ELSE MSG_LGTH = CHAR_COUNT - MSG_START ;

   9623  4 001036   200221 236100                    LDQ     CHAR_COUNT,,AUTO
         4 001037   200360 136100                    SBLQ    MSG_START,,AUTO
         4 001040   200361 756100                    STQ     MSG_LGTH,,AUTO

      837     9624
      838     9625    5         CONSOLE_FPT.BUF_ = VECTOR (SUBSTR (DATA_ASCII_FMT,MSG_START,MSG_LGTH)) ;

   9625  4 001041   200361 235100                    LDA     MSG_LGTH,,AUTO
         4 001042   000020 735000                    ALS     16
         4 001043   000140 135007                    SBLA    96,DL
         4 001044   200362 452500                    STP2    MSG_LGTH+1,,AUTO
         4 001045   200360 236100                    LDQ     MSG_START,,AUTO
         4 001046   000020 736000                    QLS     16
PL6.E3A0      #001=TOG$GCOS_MMES File=TOG$GCOS_MMES.:E05TSI                      WED 07/30/97 06:24 Page:108  
         4 001047   000021 036003                    ADLQ    17,DU
         4 001050   200362 036100                    ADLQ    MSG_LGTH+1,,AUTO
         4 001051   000004 757000 xsym               STAQ    CONSOLE_FPT+4

      839     9626    5         CALL TOT$CONSOLE_OUT ;

   9626  4 001052   000002 631400 xsym               EPPR1   B_VECTNIL+2
         4 001053   000000 701000 xent               TSX1    TOT$CONSOLE_OUT
         4 001054   000000 011000                    NOP     0

      840     9627
      841     9628              /* Get next non CRLF character to print */
      842     9629    5         MSG_START = MSG_START + MSG_LGTH ;

   9629  4 001055   200360 236100                    LDQ     MSG_START,,AUTO
         4 001056   200361 036100                    ADLQ    MSG_LGTH,,AUTO
         4 001057   200360 756100                    STQ     MSG_START,,AUTO

      843     9630    5         CALL INDEX (CRLFX, CRLF, DATA_ASCII_FMT, MSG_START) ;

   9630  4 001060   777001 620006                    EAX0    -511,QL
         4 001061   777777 660003                    ERX0    -1,DU
         4 001062   200360 235100                    LDA     MSG_START,,AUTO
         4 001063   000000 120545                    SCD
         4 001064   200021 000010                    ADSC9   DATA_ASCII_FMT,A,AUTO    cn=0,n=*X0
         4 001065   000001 000002 2                  ADSC9   CRLF_                    cn=0,n=2
         4 001066   200357 000100                    ARG     CRLFX,,AUTO
         4 001067   200357 056100                    ASQ     CRLFX,,AUTO
         4 001070   001072 607000 4                  TTF     s:9631
         4 001071   200357 054100                    AOS     CRLFX,,AUTO

      844     9631    6         DO WHILE (MSG_START = CRLFX) ;

   9631  4 001072   200360 236100                    LDQ     MSG_START,,AUTO
         4 001073   200357 116100                    CMPQ    CRLFX,,AUTO
         4 001074   001115 601000 4                  TNZ     s:9635

PL6.E3A0      #001=TOG$GCOS_MMES File=TOG$GCOS_MMES.:E05TSI                      WED 07/30/97 06:24 Page:109  
      845     9632    6            MSG_START = MSG_START + 2 ;

   9632  4 001075   200360 235100                    LDA     MSG_START,,AUTO
         4 001076   000002 035007                    ADLA    2,DL
         4 001077   200360 755100                    STA     MSG_START,,AUTO

      846     9633    6            CALL INDEX (CRLFX, CRLF, DATA_ASCII_FMT, MSG_START) ;

   9633  4 001100   777001 620005                    EAX0    -511,AL
         4 001101   777777 660003                    ERX0    -1,DU
         4 001102   200360 236100                    LDQ     MSG_START,,AUTO
         4 001103   000000 120545                    SCD
         4 001104   200021 000010                    ADSC9   DATA_ASCII_FMT,A,AUTO    cn=0,n=*X0
         4 001105   000001 000002 2                  ADSC9   CRLF_                    cn=0,n=2
         4 001106   200357 000100                    ARG     CRLFX,,AUTO
         4 001107   200357 056100                    ASQ     CRLFX,,AUTO
         4 001110   001112 607000 4                  TTF     s:9634
         4 001111   200357 054100                    AOS     CRLFX,,AUTO

      847     9634    6         END /* WHILE */ ;

   9634  4 001112   200360 236100                    LDQ     MSG_START,,AUTO
         4 001113   200357 116100                    CMPQ    CRLFX,,AUTO
         4 001114   001075 600000 4                  TZE     s:9632

      848     9635    5      END /* WHILE */ ;

   9635  4 001115   000000 116003                    CMPQ    0,DU
         4 001116   001121 604000 4                  TMI     s:9636
         4 001117   200221 116100                    CMPQ    CHAR_COUNT,,AUTO
         4 001120   001027 604000 4                  TMI     s:9621

      849     9636    4      RETURN ;

   9636  4 001121   200356 221300                    LDX1  ! N+1,,AUTO
         4 001122   000001 702211                    TSX2  ! 1,X1

PL6.E3A0      #001=TOG$GCOS_MMES File=TOG$GCOS_MMES.:E05TSI                      WED 07/30/97 06:24 Page:110  
      850     9637
      851     9638    4   END BREAK_MESSAGE ;
      852     9639    3   END DO_CONSOLE_WRITE ;
      853     9640        %EJECT;
PL6.E3A0      #001=TOG$GCOS_MMES File=TOG$GCOS_MMES.:E05TSI                      WED 07/30/97 06:24 Page:111  
      854     9641    2   READ_WRITE_8K: PROC;

   9641  4 001123   200020 741300       READ_WRITE_* STX1  ! GELBAR_TIMEOUT+2,,AUTO

      855     9642
      856     9643           %FPT_READ (FPTN = READ_8K,
      857     9644                      DCB = M$EISPACT,
      858     9645                      KEY = EISPACT_SV_KEY,
      859     9646                      KEYS = YES);
      860     9685           %FPT_WRITE (FPTN = WRITE_8K,
      861     9686                       DCB = M$EISPACT,
      862     9687                       KEY = EISPACT_SV_KEY,
      863     9688                       ONEWKEY = YES,
      864     9689                       NEWKEY = YES);
      865     9720           %FPT_DELREC (FPTN = DEL_8K,
      866     9721                        DCB = M$EISPACT,
      867     9722                        KEY = EISPACT_SV_KEY);
      868     9741    3      DCL 1 EISPACT_SV_KEY STATIC ALIGNED,
      869     9742    3            2 * UBIN (9) UNAL INIT (4),
      870     9743    3            2 KEY UBIN (36) UNAL INIT (0);
      871     9744    3      DCL IO_BUF$ PTR ALIGNED;
      872     9745    3      DCL DATA_DCW$ PTR ALIGNED;
      873     9746    3      DCL 1 DATA_DCWS BASED ALIGNED,
      874     9747    3            2 DCW1,
      875     9748    3              3 ADDRESS UBIN (18) UNAL,
      876     9749    3              3 *    UBIN (18) UNAL,
      877     9750    3            2 DCW2,
      878     9751    3              3 ADDRESS UBIN (18) UNAL,
      879     9752    3              3 *    UBIN (18) UNAL;
      880     9753    3      DCL KEY_DCW$ PTR ALIGNED ;
      881     9754    3      DCL 1 KEY_DCW BASED ALIGNED,
      882     9755    3            2 ADDRESS   UBIN (18) UNAL,
      883     9756    3            2 *         UBIN (18) UNAL;
      884     9757    3      DCL KEY$ PTR ALIGNED;
      885     9758    3      DCL KEY UBIN (36) BASED ALIGNED;
      886     9759    3      DCL STATUS$ PTR ALIGNED;
      887     9760    3      DCL 1 STATUS BASED ALIGNED,
PL6.E3A0      #001=TOG$GCOS_MMES File=TOG$GCOS_MMES.:E05TSI                      WED 07/30/97 06:24 Page:112  
      888     9761    3            2 W1 BIT (36) ALIGNED,
      889     9762    3            2 W2 BIT (36) ALIGNED;
      890     9763           %EJECT;
PL6.E3A0      #001=TOG$GCOS_MMES File=TOG$GCOS_MMES.:E05TSI                      WED 07/30/97 06:24 Page:113  
      891     9764        /* Code */
      892     9765
      893     9766    3      KEY_DCW$ = PINCRW (IS$, SDIA_MME_W2.KEY_DCW_ADDR) ;

   9766  4 001124   200012 470500                    LDP0    @P_MMEWD2,,AUTO
         4 001125   000000 720100                    LXL0    0,,PR0
         4 001126   000000 636010                    EAQ     0,X0
         4 001127   000000 036000 2                  ADLQ    FPTN_
         4 001130   200023 756100                    STQ     KEY_DCW$,,AUTO

      894     9767    3      KEY$ = PINCRW (IS$, KEY_DCW$->KEY_DCW.ADDRESS) ;

   9767  4 001131   200023 471500                    LDP1    KEY_DCW$,,AUTO
         4 001132   100000 222100                    LDX2    0,,PR1
         4 001133   000000 636012                    EAQ     0,X2
         4 001134   000000 036000 2                  ADLQ    FPTN_
         4 001135   200024 756100                    STQ     KEY$,,AUTO

      895     9768    3      EISPACT_SV_KEY.KEY = KEY$->KEY;

   9768  4 001136   200024 473500                    LDP3    KEY$,,AUTO
         4 001137   000000 100500                    MLR     fill='000'O
         4 001140   300000 000004                    ADSC9   0,,PR3                   cn=0,n=4
         4 001141   000064 200004 1                  ADSC9   EISPACT_SV_KEY           cn=1,n=4

      896     9769    3      DATA_DCW$ = PINCRW (IS$, SDIA_MME_W4.DATA_DCW_ADDR) ;

   9769  4 001142   200014 474500                    LDP4    @P_MMEWD4,,AUTO
         4 001143   400000 720100                    LXL0    0,,PR4
         4 001144   000000 636010                    EAQ     0,X0
         4 001145   000000 036000 2                  ADLQ    FPTN_
         4 001146   200022 756100                    STQ     DATA_DCW$,,AUTO

      897     9770    3      IO_BUF$ = PINCRW (IS$, DATA_DCW$->DATA_DCWS.DCW1.ADDRESS) ;

   9770  4 001147   200022 475500                    LDP5    DATA_DCW$,,AUTO
         4 001150   500000 222100                    LDX2    0,,PR5
PL6.E3A0      #001=TOG$GCOS_MMES File=TOG$GCOS_MMES.:E05TSI                      WED 07/30/97 06:24 Page:114  
         4 001151   000000 636012                    EAQ     0,X2
         4 001152   000000 036000 2                  ADLQ    FPTN_
         4 001153   200021 756100                    STQ     IO_BUF$,,AUTO

      898     9771    3      IF SDIA_MME_W3.DV_CMD = 21

   9771  4 001154   200013 476500                    LDP6    @P_MMEWD3,,AUTO
         4 001155   600000 236100                    LDQ     0,,PR6
         4 001156   770000 376003                    ANQ     -4096,DU
         4 001157   250000 116003                    CMPQ    86016,DU
         4 001160   001174 601000 4                  TNZ     s:9777

      899     9772    4      THEN DO;

      900     9773    4              READ_8K.BUF_.BOUND = 32767;

   9773  4 001161   000024 236000 1                  LDQ     READ_8K+4
         4 001162   177777 376007                    ANQ     65535,DL
         4 001163   000003 276000 5                  ORQ     3
         4 001164   000024 756000 1                  STQ     READ_8K+4

      901     9774    4              READ_8K.BUF_.BUF$ = IO_BUF$;

   9774  4 001165   200021 236100                    LDQ     IO_BUF$,,AUTO
         4 001166   000025 756000 1                  STQ     READ_8K+5

      902     9775    4              CALL M$READ (READ_8K) ALTRET (NO_READ);

   9775  4 001167   000020 630400 1                  EPPR0   READ_8K
         4 001170   440000 713400                    CLIMB   alt,read
         4 001171   401400 401760                    pmme    nvectors=4
         4 001172   001236 702000 4                  TSX2    NO_READ

      903     9776    4           END;

   9776  4 001173   001220 710000 4                  TRA     s:9787

PL6.E3A0      #001=TOG$GCOS_MMES File=TOG$GCOS_MMES.:E05TSI                      WED 07/30/97 06:24 Page:115  
      904     9777    3      ELSE IF SDIA_MME_W3.DV_CMD = 25

   9777  4 001174   310000 116003                    CMPQ    102400,DU
         4 001175   001210 601000 4                  TNZ     s:9784

      905     9778    4         THEN DO;

      906     9779    4                 WRITE_8K.BUF_.BOUND = 32767;

   9779  4 001176   000042 236000 1                  LDQ     WRITE_8K+4
         4 001177   177777 376007                    ANQ     65535,DL
         4 001200   000003 276000 5                  ORQ     3
         4 001201   000042 756000 1                  STQ     WRITE_8K+4

      907     9780    4                 WRITE_8K.BUF_.BUF$ = IO_BUF$;

   9780  4 001202   200021 236100                    LDQ     IO_BUF$,,AUTO
         4 001203   000043 756000 1                  STQ     WRITE_8K+5

      908     9781    4                 CALL M$WRITE (WRITE_8K) ;

   9781  4 001204   000036 630400 1                  EPPR0   WRITE_8K
         4 001205   040001 713400                    CLIMB   write
         4 001206   401400 401760                    pmme    nvectors=4

      909     9782    4              END;

   9782  4 001207   001220 710000 4                  TRA     s:9787

      910     9783    4         ELSE DO ;

      911     9784    4                 TOG_ERROR_CODE.ERR# = %E$BADGEINOS ;

   9784  4 001210   000016 236000 1                  LDQ     TOG_ERROR_CODE
         4 001211   000000 376000 5                  ANQ     0
         4 001212   001520 276007                    ORQ     848,DL
         4 001213   000016 756000 1                  STQ     TOG_ERROR_CODE
PL6.E3A0      #001=TOG$GCOS_MMES File=TOG$GCOS_MMES.:E05TSI                      WED 07/30/97 06:24 Page:116  

      912     9785    4                 CALL TOX$ERROR (TOG_ERROR_CODE) ;

   9785  4 001214   000001 630400 5                  EPPR0   1
         4 001215   000017 631400 xsym               EPPR1   B_VECTNIL+15
         4 001216   000000 701000 xent               TSX1    TOX$ERROR
         4 001217   000000 011000                    NOP     0

      913     9786    4              END /* ELSE */ ;

      914     9787    3      STATUS$ = PINCRW (IS$, SDIA_MME_W5.STATUS_ADDR) ;

   9787  4 001220   200015 470500                    LDP0    @P_MMEWD5,,AUTO
         4 001221   000000 220100                    LDX0    0,,PR0
         4 001222   000000 636010                    EAQ     0,X0
         4 001223   000000 036000 2                  ADLQ    FPTN_
         4 001224   200025 756100                    STQ     STATUS$,,AUTO

      915     9788    3      STATUS$->STATUS.W1 = '400000'O;

   9788  4 001225   400000 236003                    LDQ     -131072,DU
         4 001226   200025 471500                    LDP1    STATUS$,,AUTO
         4 001227   100000 756100                    STQ     0,,PR1

      916     9789    3      STATUS$->STATUS.W2 = '0'O;

   9789  4 001230   100001 450100                    STZ     1,,PR1

      917     9790    3      RETURN_DELTA = 6;

   9790  4 001231   000006 220003                    LDX0    6,DU
         4 001232   200016 473500                    LDP3    @RETURN_DELTA,,AUTO
         4 001233   300000 740100                    STX0    0,,PR3

      918     9791    3      RETURN;

   9791  4 001234   200020 221300                    LDX1  ! GELBAR_TIMEOUT+2,,AUTO
PL6.E3A0      #001=TOG$GCOS_MMES File=TOG$GCOS_MMES.:E05TSI                      WED 07/30/97 06:24 Page:117  
         4 001235   000001 702211                    TSX2  ! 1,X1

      919     9792
      920     9793    3   NO_READ:
      921     9794    3      CALL TOX$ERROR (B$TCB$->B$TCB.ALT$->B$ALT.ERR);

   9794  4 001236   000000 470400 xsym  NO_READ      LDP0    B$TCB$
         4 001237   000000 471500                    LDP1    0,,PR0
         4 001240   100102 633500                    EPPR3   66,,PR1
         4 001241   200362 453500                    STP3    MSG_LGTH+1,,AUTO
         4 001242   200362 630500                    EPPR0   MSG_LGTH+1,,AUTO
         4 001243   000017 631400 xsym               EPPR1   B_VECTNIL+15
         4 001244   000000 701000 xent               TSX1    TOX$ERROR
         4 001245   000000 011000                    NOP     0

      922     9795    3      RETURN;

   9795  4 001246   200020 221300                    LDX1  ! GELBAR_TIMEOUT+2,,AUTO
         4 001247   000001 702211                    TSX2  ! 1,X1

      923     9796    3   END READ_WRITE_8K ;
      924     9797    2   END TOG$MME_GEINOS;
      925     9798        %EJECT;
PL6.E3A0      #001=TOG$GCOS_MMES File=TOG$GCOS_MMES.:E05TSI                      WED 07/30/97 06:24 Page:118  
      926     9799        /*I* NAME:         TOG$MME_GELBAR
      927     9800             INTERFACE:    SET_GELBR_REGS
      928     9801                           SET_GELBAR_TIMER
      929     9802                           FIX_GELBAR_SPA
      930     9803                           BUILD_GELBAR_ISR
      931     9804                           M$STIMER
      932     9805                           M$CLRSTK
      933     9806                           UNWIND TO TOF$SISR_RV
      934     9807             INPUT:        AREG is A Register at time of MME
      935     9808                             Bits (0-17) is address of LOC1
      936     9809                             Bits (18-35) not used.
      937     9810
      938     9811                               LOC1 bits (0-17) is new BAR.
      939     9812                               LOC1 bits (18-35) is address of LOC2.
      940     9813                               LOC1+1 bits (0-17) is new IC under GELBAR.
      941     9814                               LOC1+1 bits(18-35) is new Indicator Register.
      942     9815                               LOC2 contains the register state to be restored.
      943     9816
      944     9817             OUTPUT:
      945     9818             DESCRIPTION:   This routine simulates the MME GELBAR function
      946     9819                           in the CP6 environment for Slave Mode subexecs.
      947     9820                           The interested reader should refer to the GCOS
      948     9821                           Manual DD19 for all the details of MME GELBAR.
      949     9822                           MME GELBAR involves the following functions:
      950     9823
      951     9824                           a.  Reloading the Base Address Register(BAR).
      952     9825                           b.  Reloading a user specified register state.
      953     9826                           c.  Transferring to an IC relative to the new BAR.
      954     9827                           d.  Setting up a timer for execution under GELBAR.
      955     9828                           e.  Trapping all faults that occur under GELBAR and
      956     9829                               returning control to a user fault handler,
      957     9830                               specified in word 19 of the Slave Prefix Area
      958     9831                               (SPA).
      959     9832                           f.  Maintaining words 17,18 and 25 in the SPA.
      960     9833
      961     9834                           The flag TOG$GELBAR_MODE is first set so that the
      962     9835                           Fault Handler (TOF$FAULTS) will know that the
PL6.E3A0      #001=TOG$GCOS_MMES File=TOG$GCOS_MMES.:E05TSI                      WED 07/30/97 06:24 Page:119  
      963     9836                           next fault occurred under GELBAR and should be handled
      964     9837                           by a subexec's fault handler.
      965     9838
      966     9839                           After all the housekeeping tasks are done, the
      967     9840                           subroutine RESTRICT_CPU is called which checks
      968     9841                           to see if SOLTS is in execution, and if it desires
      969     9842                           to execute its test page under GELBAR on a specific
      970     9843                           CPU.  Once everything is set up, M$CLRSTK is called
      971     9844                           to pop the top frame off the TCB, M$STIMER is called
      972     9845                           to initiate a timer on the test page's execution
      973     9846                           and an UNWIND TO TOF$SISR_RV is done to transfer
      974     9847                           into the test page.
      975     9848
      976     9849                           It is at this point that we get into the middle of
      977     9850                           the CP6 fault mechanism and back to NSA GMAP type
      978     9851                           operations, which makes things quite complicated.
      979     9852
      980     9853                           First, the UNWIND statement uses a REMEMBER
      981     9854                           variable built at TOLTS initialization time.
      982     9855                           The UNWIND in effect (1) pops all the auto frames off
      983     9856                           the stack and (2) transfers us to a BMAP routine
      984     9857                           called TOF$SHRINK_ISR which restores the registers
      985     9858                           and shrinks the ISR.  The UNWIND statement pops
      986     9859                           the auto frames for TOF$FAULTS and TOG$GCOS_MMES
      987     9860                           off the auto stack so they won't be lying around.
      988     9861                           The present implementation of GELBAR does not return
      989     9862                           back to the Fault Handler to pop those off automatically.
      990     9863                           A simple CALL TOF$SHRINK_ISR would have left those
      991     9864                           frames on the auto stack.
      992     9865
      993     9866                           The BMAP routine TOF$SHRINK_ISR restores all
      994     9867                          the necessary registers and does a CLIMB to shrink the ISR around
      995     9868                           the test page and transfer into it.
      996     9869
      997     9870                           The next fault(which will hopefully occur in the
      998     9871                           test page under GELBAR) will cause the ISR to
      999     9872                           be re-expanded to what it is normally, and transfer
PL6.E3A0      #001=TOG$GCOS_MMES File=TOG$GCOS_MMES.:E05TSI                      WED 07/30/97 06:24 Page:120  
     1000     9873                           control into the Fault Handler, TOF$FAULTS.
     1001     9874
     1002     9875                           RETURN_DELTA is set to 1 in case there is an error
     1003     9876                           return for SOLTS.
     1004     9877        */
     1005     9878
     1006     9879    1   TOG$MME_GELBAR: PROC(P_AREG,P_QREG,RETURN_DELTA);

   9879  4 001250   200010 741300       TOG$MME_GEL* STX1  ! @RETURN_DELTA+2,,AUTO

     1007     9880
     1008     9881    2      DCL NO_CPU_ASSIGNED UBIN (1);
     1009     9882    2      DCL P_AREG  UBIN (36);
     1010     9883    2      DCL 1 MREGA REDEF P_AREG,
     1011     9884    2            2 LOC1_ADR UBIN (18) UNAL,
     1012     9885    2            2 RESTRICT_CPU_FLAG UBIN (1) UNAL,
     1013     9886    2            2 DISABLE_CACHE_FLAG UBIN (1) UNAL,
     1014     9887    2            2 * UBIN (10) UNAL,
     1015     9888    2            2 CPU# UBIN (6) UNAL;
     1016     9889    2      DCL P_QREG  UBIN (36);
     1017     9890    2      DCL RETURN_DELTA SBIN HALF;
     1018     9891    2      DCL GELBAR_LOC1$ PTR ALIGNED ;
     1019     9892    2      DCL GELBAR_TIMEOUT UBIN (36);
     1020     9893    2      DCL 1 GLB_TO REDEF GELBAR_TIMEOUT,
     1021     9894    2            2 * UBIN (18) UNAL,
     1022     9895    2            2 VALUE UBIN (18) UNAL;
     1023     9896           %EJECT;
PL6.E3A0      #001=TOG$GCOS_MMES File=TOG$GCOS_MMES.:E05TSI                      WED 07/30/97 06:24 Page:121  
     1024     9897        /* Code */
     1025     9898
     1026     9899    2      TOF$BAR.GELBAR_MODE = %TRUE ;

   9899  4 001251   400000 236003                    LDQ     -131072,DU
         4 001252   000001 256000 xsym               ORSQ    TOF$BAR+1

     1027     9900    2      CALL SET_GELBAR_REGS;

   9900  4 001253   001302 701000 4                  TSX1    SET_GELBAR_REGS
         4 001254   000000 011000                    NOP     0

     1028     9901    2      CALL SET_GELBAR_TIMER;

   9901  4 001255   001343 701000 4                  TSX1    SET_GELBAR_TIMER
         4 001256   000000 011000                    NOP     0

     1029     9902    2      CALL FIX_GELBAR_SPA;

   9902  4 001257   001365 701000 4                  TSX1    FIX_GELBAR_SPA
         4 001260   000000 011000                    NOP     0

     1030     9903    2      CALL BUILD_GELBAR_ISR;

   9903  4 001261   001406 701000 4                  TSX1    BUILD_GELBAR_ISR
         4 001262   000000 011000                    NOP     0

     1031     9904    2      CALL CHECK_GELBAR_DEBUG ;

   9904  4 001263   001470 701000 4                  TSX1    CHECK_GELBAR_DEBUG
         4 001264   000000 011000                    NOP     0

     1032     9905    2      IF TOT$ECP.SUBEXEC.CURRENT = %SOLTS OR TOT$ECP.SUBEXEC.CURRENT = %PACT

   9905  4 001265   000007 235000 xsym               LDA     TOT$ECP+7
         4 001266   000013 115007                    CMPA    11,DL
         4 001267   001275 600000 4                  TZE     s:9908
PL6.E3A0      #001=TOG$GCOS_MMES File=TOG$GCOS_MMES.:E05TSI                      WED 07/30/97 06:24 Page:122  
         4 001270   000014 115007                    CMPA    12,DL
         4 001271   001275 600000 4                  TZE     s:9908

     1033     9906    2      THEN /* No need to set the Timer */ ;
     1034     9907    2      ELSE CALL M$STIMER(STIMER_FPT) ;

   9907  4 001272   000000 630400 1                  EPPR0   STIMER_FPT
         4 001273   010000 713400                    CLIMB   4096
         4 001274   400000 401760                    pmme    nvectors=1

     1035     9908    2      CALL M$CLRSTK;

   9908  4 001275   010013 713400                    CLIMB   4107
         4 001276   000000 401760                    pmme    nvectors=0

     1036     9909    2      UNWIND TO TOF$SISR_RV;

   9909  4 001277   000000 237200 xsym               LDAQ  ! TOF$SISR_RV
         4 001300   000000 700200 xent               TSX0  ! X66_AUNWIND
         4 001301   000000 000200                    ZERO    0,128

     1037     9910
     1038     9911        /*END TOG$MME_GELBAR;*/
     1039     9912        %EJECT;
PL6.E3A0      #001=TOG$GCOS_MMES File=TOG$GCOS_MMES.:E05TSI                      WED 07/30/97 06:24 Page:123  
     1040     9913        /*I* NAME:         SET_GELBAR_REGS
     1041     9914             DESCRIPTION:  The following registers, specified by the user on
     1042     9915                           the MME GELBAR, are fetched from LOC1 and LOC2
     1043     9916                           and stored for later use by TOF$SHRINK_ISR:
     1044     9917
     1045     9918                             TOF$GELBAR_REGISTERS(A,Q and Index)
     1046     9919                             TOF$GELBAR_INDICATORS
     1047     9920                             TOF$GELBAR_IC
     1048     9921
     1049     9922                           The following registers are fetched from the current
     1050     9923                           TCB frame and stored for later use(these are not
     1051     9924                           specified by the user, but are used by SOLTS and
     1052     9925                           therefore must be preserved, and restored later):
     1053     9926
     1054     9927                             TOF$GELBAR_ADDRESS_REGS(address registers)
     1055     9928                             TOF$GELBAR_EIS_REGS(EIS pointer and lengths registers)
     1056     9929
     1057     9930                           Finally, TOF$BAR.CURRENT is updated to reflect
     1058     9931                           what the BAR will be once GELBAR is invoked, using
     1059     9932                           information in LOC1.
     1060     9933
     1061     9934                           All the register states will be restored by
     1062     9935                           TOF$SHRINK_ISR.
     1063     9936        */
     1064     9937        %EJECT;
PL6.E3A0      #001=TOG$GCOS_MMES File=TOG$GCOS_MMES.:E05TSI                      WED 07/30/97 06:24 Page:124  
     1065     9938    2   SET_GELBAR_REGS: PROC;

   9938  4 001302   200020 741300       SET_GELBAR_* STX1  ! GELBAR_TIMEOUT+2,,AUTO

     1066     9939
     1067     9940    3      DCL REGS$ PTR;
     1068     9941    3      DCL REGS(0:7) UBIN (36) BASED ALIGNED;
     1069     9942
     1070     9943        /* Code */
     1071     9944
     1072     9945    3      GELBAR_LOC1$ = PINCRW (IS$, MREGA.LOC1_ADR) ;

   9945  4 001303   200011 470500                    LDP0    @P_AREG,,AUTO
         4 001304   000000 220100                    LDX0    0,,PR0
         4 001305   000000 636010                    EAQ     0,X0
         4 001306   000000 036000 2                  ADLQ    FPTN_
         4 001307   200015 756100                    STQ     GELBAR_LOC1$,,AUTO

     1073     9946    3      REGS$ = PINCRW (IS$, GELBAR_LOC1$ -> LOC1.LOC2$) ;

   9946  4 001310   200015 471500                    LDP1    GELBAR_LOC1$,,AUTO
         4 001311   100000 722100                    LXL2    0,,PR1
         4 001312   000000 636012                    EAQ     0,X2
         4 001313   000000 036000 2                  ADLQ    FPTN_
         4 001314   200021 756100                    STQ     REGS$,,AUTO

     1074     9947    3      TOF$GELBAR_REGISTERS = REGS$->REGS;

   9947  4 001315   200021 473500                    LDP3    REGS$,,AUTO
         4 001316   000000 100500                    MLR     fill='000'O
         4 001317   300000 000040                    ADSC9   0,,PR3                   cn=0,n=32
         4 001320   000000 000040 xsym               ADSC9   TOF$GELBAR_REGISTERS     cn=0,n=32

     1075     9948    3      TOF$GELBAR_ADDRESS_REGS = B$TCB$->B$TCB.STK$->B$EXCFR.PRS;

   9948  4 001321   000000 474400 xsym               LDP4    B$TCB$
         4 001322   400001 475500                    LDP5    1,,PR4
PL6.E3A0      #001=TOG$GCOS_MMES File=TOG$GCOS_MMES.:E05TSI                      WED 07/30/97 06:24 Page:125  
         4 001323   000000 100500                    MLR     fill='000'O
         4 001324   500020 000040                    ADSC9   16,,PR5                  cn=0,n=32
         4 001325   000000 000040 xsym               ADSC9   TOF$GELBAR_ADDRESS_REGS  cn=0,n=32

     1076     9949    3      TOF$GELBAR_EIS_REGS = B$TCB$->B$TCB.STK$->B$EXCFR.EIS;

   9949  4 001326   400001 475500                    LDP5    1,,PR4
         4 001327   000000 100500                    MLR     fill='000'O
         4 001330   500060 000040                    ADSC9   48,,PR5                  cn=0,n=32
         4 001331   000000 000040 xsym               ADSC9   TOF$GELBAR_EIS_REGS      cn=0,n=32

     1077     9950    3      TOF$GELBAR_INDICATORS.I = GELBAR_LOC1$ -> LOC1.I;

   9950  4 001332   100001 720100                    LXL0    1,,PR1
         4 001333   000000 440000 xsym               SXL0    TOF$GELBAR_INDICATORS

     1078     9951    3      TOF$GELBAR_IC.IC = GELBAR_LOC1$->LOC1.IC;

   9951  4 001334   100001 222100                    LDX2    1,,PR1
         4 001335   000000 742000 xsym               STX2    TOF$GELBAR_IC

     1079     9952    3      TOF$BAR.CURRENT.BASE = GELBAR_LOC1$->LOC1.BAR.BASE;

   9952  4 001336   100000 236100                    LDQ     0,,PR1
         4 001337   000000 552040 xsym               STBQ    TOF$BAR,'40'O

     1080     9953    3      TOF$BAR.CURRENT.SIZE = GELBAR_LOC1$->LOC1.BAR.BOUNDS;

   9953  4 001340   100000 236100                    LDQ     0,,PR1
         4 001341   000000 552020 xsym               STBQ    TOF$BAR,'20'O

     1081     9954    3      RETURN;

   9954  4 001342   000001 702211                    TSX2  ! 1,X1

     1082     9955
     1083     9956    3   END SET_GELBAR_REGS;
PL6.E3A0      #001=TOG$GCOS_MMES File=TOG$GCOS_MMES.:E05TSI                      WED 07/30/97 06:24 Page:126  
     1084     9957        %EJECT;
PL6.E3A0      #001=TOG$GCOS_MMES File=TOG$GCOS_MMES.:E05TSI                      WED 07/30/97 06:24 Page:127  
     1085     9958        /*I* NAME:         SET_GELBAR_TIMER
     1086     9959             DESCRIPTION:  The Q Register at the time of the MME GELBAR
     1087     9960                           contains the timeout interval in 1/64 millisecond
     1088     9961                           increments.  This is converted to millisecond
     1089     9962                           increments and stored into the FPT,
     1090     9963                           STIMER_FPT.V.UNITS#.  M$STIMER is called at a later
     1091     9964                           time to invoke a timer.
     1092     9965        */
     1093     9966
     1094     9967    2   SET_GELBAR_TIMER: PROC;

   9967  4 001343   200020 741300       SET_GELBAR_* STX1  ! GELBAR_TIMEOUT+2,,AUTO

     1095     9968
     1096     9969    3      GELBAR_TIMEOUT = P_QREG;

   9969  4 001344   200012 470500                    LDP0    @P_QREG,,AUTO
         4 001345   000000 235100                    LDA     0,,PR0
         4 001346   200016 755100                    STA     GELBAR_TIMEOUT,,AUTO

     1097     9970    3      GELBAR_TIMEOUT = GELBAR_TIMEOUT / 64 + 1;

   9970  4 001347   200016 236100                    LDQ     GELBAR_TIMEOUT,,AUTO
         4 001350   000006 772000                    QRL     6
         4 001351   000001 036007                    ADLQ    1,DL
         4 001352   200016 756100                    STQ     GELBAR_TIMEOUT,,AUTO

     1098     9971           /* Add 30 ms to time due to CP6 TOLTS overhead. */
     1099     9972    3      STIMER_FPT.V.UNITS# = GLB_TO.VALUE + 30;

   9972  4 001353   200016 236100                    LDQ     GELBAR_TIMEOUT,,AUTO
         4 001354   777777 376007                    ANQ     -1,DL
         4 001355   000036 036007                    ADLQ    30,DL
         4 001356   000003 676000 1                  ERQ     STIMER_FPT+3
         4 001357   000004 376000 5                  ANQ     4
         4 001360   000003 656000 1                  ERSQ    STIMER_FPT+3

PL6.E3A0      #001=TOG$GCOS_MMES File=TOG$GCOS_MMES.:E05TSI                      WED 07/30/97 06:24 Page:128  
     1100     9973    3      GELBAR_TIMEOUT = GELBAR_TIMEOUT * 64;

   9973  4 001361   200016 235100                    LDA     GELBAR_TIMEOUT,,AUTO
         4 001362   000006 735000                    ALS     6
         4 001363   200016 755100                    STA     GELBAR_TIMEOUT,,AUTO

     1101     9974    3      RETURN;

   9974  4 001364   000001 702211                    TSX2  ! 1,X1

     1102     9975
     1103     9976    3   END SET_GELBAR_TIMER;
     1104     9977        %EJECT;
PL6.E3A0      #001=TOG$GCOS_MMES File=TOG$GCOS_MMES.:E05TSI                      WED 07/30/97 06:24 Page:129  
     1105     9978        /*I* NAME:         FIX_GELBAR_SPA
     1106     9979             DESCRIPTION:  Initializes the subexec's SPA in accordance with
     1107     9980                           the standard GCOS definition (see DD19, GCOS Manual).
     1108     9981
     1109     9982                           a.  The Q Register at the time of the MME GELBAR is
     1110     9983                               stored in word 17.
     1111     9984                           b.  The Q Register is also stored in word 18.
     1112     9985                           c.  The new BAR is stored in bits 0-17 of word 25.
     1113     9986                           d.  The "fault bit" in word 25 (bit 19) is reset.
     1114     9987                           e.  The fault type field in bits 30-35 of word 25
     1115     9988                               is reset.
     1116     9989        */
     1117     9990
     1118     9991    2   FIX_GELBAR_SPA: PROC;

   9991  4 001365   200020 741300       FIX_GELBAR_* STX1  ! GELBAR_TIMEOUT+2,,AUTO

     1119     9992
     1120     9993           %TOD$SPA (STCLASS = "BASED (TOD$SPA$)") ;
     1121    10045
     1122    10046        /* Code */
     1123    10047
     1124    10048    3      TOD$SPA.WD17 = P_QREG;

  10048  4 001366   200012 470500                    LDP0    @P_QREG,,AUTO
         4 001367   000000 471400 xsym               LDP1    TOD$SPA$
         4 001370   000000 235100                    LDA     0,,PR0
         4 001371   100021 755100                    STA     17,,PR1

     1125    10049    3      TOD$SPA.WD18_ = GELBAR_TIMEOUT;

  10049  4 001372   200016 236100                    LDQ     GELBAR_TIMEOUT,,AUTO
         4 001373   100022 756100                    STQ     18,,PR1

     1126    10050    3      TOD$SPA.WD25.BAR.BASE = GELBAR_LOC1$ -> LOC1.BAR.BASE;

  10050  4 001374   200015 473500                    LDP3    GELBAR_LOC1$,,AUTO
PL6.E3A0      #001=TOG$GCOS_MMES File=TOG$GCOS_MMES.:E05TSI                      WED 07/30/97 06:24 Page:130  
         4 001375   300000 236100                    LDQ     0,,PR3
         4 001376   100031 552140                    STBQ    25,'40'O,PR1

     1127    10051    3      TOD$SPA.WD25.BAR.BOUNDS = GELBAR_LOC1$ -> LOC1.BAR.BOUNDS;

  10051  4 001377   300000 236100                    LDQ     0,,PR3
         4 001400   100031 552120                    STBQ    25,'20'O,PR1

     1128    10052    3      TOD$SPA.WD25.FAULT = '0'B;

  10052  4 001401   000005 236000 5                  LDQ     5
         4 001402   100031 356100                    ANSQ    25,,PR1

     1129    10053    3      TOD$SPA.WD25.FAULT_TYPE = 0;

  10053  4 001403   000000 236003                    LDQ     0,DU
         4 001404   100031 752101                    STCQ    25,'01'O,PR1

     1130    10054    3      RETURN;

  10054  4 001405   000001 702211                    TSX2  ! 1,X1

     1131    10055
     1132    10056    3   END FIX_GELBAR_SPA;
     1133    10057        %EJECT;
PL6.E3A0      #001=TOG$GCOS_MMES File=TOG$GCOS_MMES.:E05TSI                      WED 07/30/97 06:24 Page:131  
     1134    10058        /*I* NAME:         BUILD_GELBAR_ISR
     1135    10059             DESCRIPTION:  A NSA vector is built which will be used to shrink
     1136    10060                           the current ISR so that it will frame a test page.
     1137    10061                           The PL6 variable ISR_V is initialized with all the
     1138    10062                           fields except for BASE and SIZE.  These 2 fields
     1139    10063                           are computed here, and stored into ISR_V, which is
     1140    10064                           then stored into the SYMREFed variable
     1141    10065                           TOF$ISR_VECTOR.
     1142    10066
     1143    10067                           The BASE field is picked up from a parameter passed
     1144    10068                           from the subexec, and is converted from 512 word
     1145    10069                           blocks to a byte address.
     1146    10070
     1147    10071                           The SIZE field is likewise picked up from a parameter
     1148    10072                           passed from the subexec, and is converted from 512
     1149    10073                           word blocks to a byte bound.  However, there is
     1150    10074                           an exception case.  If the BOUNDS field passed
     1151    10075                           as a parameter is 0, it means the caller wishes to
     1152    10076                           have as the ISR bounds, all the memory left in the
     1153    10077                           ISR after the shrink.  This is an undocumented
     1154    10078                           feature of GCOS, which for some reason must be
     1155    10079                           supported here.
     1156    10080
     1157    10081                           B$JIT$->B$JIT.TDP is the page number of the nexty
     1158    10082                           page available to the program, relative to the
     1159    10083                           beginning of the Working Space.  Since the Instruction
     1160    10084                           Segment starts at page 64 in the Working Space, we
     1161    10085                           subtract 64 from TDP to yield the next page
     1162    10086                           number relative to the start of the Instruction
     1163    10087                           Segment.  This is used to compute how much memory
     1164    10088                           will be left once the base of the ISR is shrunk,
     1165    10089                           and stored in ISR_V.
     1166    10090        */
     1167    10091        %EJECT ;
PL6.E3A0      #001=TOG$GCOS_MMES File=TOG$GCOS_MMES.:E05TSI                      WED 07/30/97 06:24 Page:132  
     1168    10092    2   BUILD_GELBAR_ISR: PROC;

  10092  4 001406   200020 741300       BUILD_GELBA* STX1  ! GELBAR_TIMEOUT+2,,AUTO

     1169    10093
     1170    10094    3      DCL BOUNDS_ADR SBIN HALF;
     1171    10095
     1172    10096        /* Code */
     1173    10097
     1174    10098    3      IF GELBAR_LOC1$ -> LOC1.BAR.BOUNDS = 0

  10098  4 001407   200015 470500                    LDP0    GELBAR_LOC1$,,AUTO
         4 001410   000000 236100                    LDQ     0,,PR0
         4 001411   000777 316003                    CANQ    511,DU
         4 001412   001445 601000 4                  TNZ     s:10106

     1175    10099    4      THEN DO;

     1176    10100    4              BOUNDS_ADR = B$JIT$ -> B$JIT.TDP;

  10100  4 001413   000000 471400 xsym               LDP1    B$JIT$
         4 001414   100204 220100                    LDX0    132,,PR1
         4 001415   200021 740100                    STX0    BOUNDS_ADR,,AUTO

     1177    10101    4              BOUNDS_ADR = BOUNDS_ADR - 64;

  10101  4 001416   777700 622010                    EAX2    -64,X0
         4 001417   200021 742100                    STX2    BOUNDS_ADR,,AUTO

     1178    10102    4              BOUNDS_ADR = BOUNDS_ADR * 1024/512;

  10102  4 001420   200021 223100                    LDX3    BOUNDS_ADR,,AUTO
         4 001421   200021 023100                    ADLX3   BOUNDS_ADR,,AUTO
         4 001422   200021 743100                    STX3    BOUNDS_ADR,,AUTO

     1179    10103    4              ISR_V.SIZE = BOUNDS_ADR - GELBAR_LOC1$ -> LOC1.BAR.BASE;

PL6.E3A0      #001=TOG$GCOS_MMES File=TOG$GCOS_MMES.:E05TSI                      WED 07/30/97 06:24 Page:133  
  10103  4 001423   000000 236100                    LDQ     0,,PR0
         4 001424   000033 772000                    QRL     27
         4 001425   200362 756100                    STQ     MSG_LGTH+1,,AUTO
         4 001426   200021 236100                    LDQ     BOUNDS_ADR,,AUTO
         4 001427   000022 732000                    QRS     18
         4 001430   200362 136100                    SBLQ    MSG_LGTH+1,,AUTO
         4 001431   000020 736000                    QLS     16
         4 001432   000012 676000 1                  ERQ     ISR_V
         4 001433   000034 376000 xsym               ANQ     B_VECTNIL+28
         4 001434   000012 656000 1                  ERSQ    ISR_V

     1180    10104    4              ISR_V.SIZE = ISR_V.SIZE * 512 * 4;

  10104  4 001435   000012 236000 1                  LDQ     ISR_V
         4 001436   000005 772000                    QRL     5
         4 001437   000006 376000 5                  ANQ     6
         4 001440   000020 736000                    QLS     16
         4 001441   000012 676000 1                  ERQ     ISR_V
         4 001442   000034 376000 xsym               ANQ     B_VECTNIL+28
         4 001443   000012 656000 1                  ERSQ    ISR_V

     1181    10105    4           END;

  10105  4 001444   001455 710000 4                  TRA     s:10107

     1182    10106    3      ELSE ISR_V.SIZE = (GELBAR_LOC1$ -> LOC1.BAR.BOUNDS * 512 * 4) -1;

  10106  4 001445   000000 236100                    LDQ     0,,PR0
         4 001446   000007 772000                    QRL     7
         4 001447   000007 376000 5                  ANQ     7
         4 001450   000001 136007                    SBLQ    1,DL
         4 001451   000020 736000                    QLS     16
         4 001452   000012 676000 1                  ERQ     ISR_V
         4 001453   000034 376000 xsym               ANQ     B_VECTNIL+28
         4 001454   000012 656000 1                  ERSQ    ISR_V

     1183    10107    3      ISR_V.BASE = GELBAR_LOC1$ -> LOC1.BAR.BASE * 512 * 4;
PL6.E3A0      #001=TOG$GCOS_MMES File=TOG$GCOS_MMES.:E05TSI                      WED 07/30/97 06:24 Page:134  

  10107  4 001455   000000 236100                    LDQ     0,,PR0
         4 001456   000020 772000                    QRL     16
         4 001457   000007 376000 5                  ANQ     7
         4 001460   000020 736000                    QLS     16
         4 001461   000013 676000 1                  ERQ     ISR_V+1
         4 001462   000034 376000 xsym               ANQ     B_VECTNIL+28
         4 001463   000013 656000 1                  ERSQ    ISR_V+1

     1184    10108    3      TOF$ISR_VECTOR = ISR_V;

  10108  4 001464   000012 237000 1                  LDAQ    ISR_V
         4 001465   000000 755000 xsym               STA     TOF$ISR_VECTOR
         4 001466   000001 756000 xsym               STQ     TOF$ISR_VECTOR+1

     1185    10109    3      RETURN;

  10109  4 001467   000001 702211                    TSX2  ! 1,X1

     1186    10110
     1187    10111    3   END BUILD_GELBAR_ISR;
     1188    10112        %EJECT;
PL6.E3A0      #001=TOG$GCOS_MMES File=TOG$GCOS_MMES.:E05TSI                      WED 07/30/97 06:24 Page:135  
     1189    10113        /*I* NAME:         CHECK_GELBAR_DEBUG
     1190    10114             AUTHOR:       Scott S. Sheppard
     1191    10115             PURPOSE:      Invokes the DEBUG capability
     1192    10116             DESCRIPTION:  This procedure calls the debugger for GELBAR mode
     1193    10117                           invocations on ???DEBUG [TEST] <request> tests.
     1194    10118        */
     1195    10119
     1196    10120    2   CHECK_GELBAR_DEBUG: PROC ;

  10120  4 001470   200020 741300       CHECK_GELBA* STX1  ! GELBAR_TIMEOUT+2,,AUTO

     1197    10121
     1198    10122    3      DCL BASE$   PTR CONSTANT ALIGNED INIT (ADDR(TOF$ISR_VECTOR)) ;
     1199    10123    3      DCL 1 BASE ALIGNED BASED (BASE$),
     1200    10124    3            2 *   BIT (36) UNAL,
     1201    10125    3            2 VAL UBIN (18) UNAL,
     1202    10126    3            2 *   BIT (18) UNAL ;
     1203    10127
     1204    10128        /* Code */
     1205    10129
     1206    10130    3      IF TOQ$DCP.PF.ENABLED

  10130  4 001471   000000 234000 xsym               SZN     TOQ$DCP
         4 001472   001507 605000 4                  TPL     s:10138

     1207    10131    4      THEN DO ;

     1208    10132    4              TOQ$DCP.PF.REASON = %GELBAR ;

  10132  4 001473   000037 236003                    LDQ     31,DU
         4 001474   000000 552020 xsym               STBQ    TOQ$DCP,'20'O

     1209    10133    4              TOQ$DCP.BR.ADDRESS = BASE.VAL ;

  10133  4 001475   000002 470400 2                  LDP0    BASE$
         4 001476   000001 236100                    LDQ     1,,PR0
         4 001477   000022 772000                    QRL     18
PL6.E3A0      #001=TOG$GCOS_MMES File=TOG$GCOS_MMES.:E05TSI                      WED 07/30/97 06:24 Page:136  
         4 001500   000010 756000 xsym               STQ     TOQ$DCP+8

     1210    10134    4              TOQ$DCP.BR.IC = TOF$GELBAR_IC.IC ;

  10134  4 001501   000000 235000 xsym               LDA     TOF$GELBAR_IC
         4 001502   000022 771000                    ARL     18
         4 001503   000011 755000 xsym               STA     TOQ$DCP+9

     1211    10135    4              CALL TOQ$DEBUG ;

  10135  4 001504   000002 631400 xsym               EPPR1   B_VECTNIL+2
         4 001505   000000 701000 xent               TSX1    TOQ$DEBUG
         4 001506   000000 011000                    NOP     0

     1212    10136    4           END /* ELSE */ ;

     1213    10137    3      ELSE /* No DEBUG action necessary. */ ;
     1214    10138    3      RETURN ;

  10138  4 001507   200020 221300                    LDX1  ! GELBAR_TIMEOUT+2,,AUTO
         4 001510   000001 702211                    TSX2  ! 1,X1

STIMER_FPT
 Sect OctLoc
   1     000   000001 777640   000002 006000   000000 000000   000000 000000    ................

ISC_GEINOS_DATA
 Sect OctLoc
   1     004   0***** ******   ****** ******   ****** ******                    ............

ISR_V
 Sect OctLoc
   1     012   ****** *7764*   ****** *06000   ****** ******   ****** ******    ................

TOG_ERROR_CODE
 Sect OctLoc
   1     016   241707 000000                                                    ....
PL6.E3A0      #001=TOG$GCOS_MMES File=TOG$GCOS_MMES.:E05TSI                      WED 07/30/97 06:24 Page:137  

READ_8K
 Sect OctLoc
   1     020   000005 777640   000030 006000   000001 777640   000064 006000    .............4..
   1     024   000000 177640   000000 006014   000000 177640   000000 006014    ................
   1     030   000000 600000   000000 000000   000000 000000   000000 000000    ................
   1     034   000000 000000   000000 000000                                    ........

WRITE_8K
 Sect OctLoc
   1     036   000003 777640   000046 006000   000001 777640   000064 006000    .....&.......4..
   1     042   000000 177640   000000 006014   000000 177640   000000 006014    ................
   1     046   000000 400600   000000 000000   000000 000000   000000 000000    ................

DEL_8K
 Sect OctLoc
   1     052   000001 777640   000062 006000   000001 777640   000064 006000    .....2.......4..
   1     056   000000 177640   000000 006014   000000 177640   000000 006014    ................
   1     062   000000 000000   000000 000000                                    ........

EISPACT_SV_KEY
 Sect OctLoc
   1     064   004000 000000   000*** ******                                    ........

FPTN_
 Sect OctLoc
   2     000   000000 006000                                                    ....

CRLF_
 Sect OctLoc
   2     001   015012 ******                                                    ....

BASE$
 Sect OctLoc
   2     002   000000 006000                                                    ....

(unnamed)
PL6.E3A0      #001=TOG$GCOS_MMES File=TOG$GCOS_MMES.:E05TSI                      WED 07/30/97 06:24 Page:138  
 Sect OctLoc
   2     003   400006 000000   430100 000000                                    .....@..

(unnamed)
 Sect OctLoc
   3     000   000000 000000   000000 000000   000000 000000   000000 000501    ................
   3     004   000000 000000   000000 000000   000000 006014   000000 006014    ................
   3     010   012105 111123   120101 103124   137123 126040   040040 040040    .EISPACT_SV
   3     014   040040 040040   040040 040040   040040 040040   040040 040040
   3     024*  040040 040040   040040 040040   115105 040040   040040 040040            ME
   3     030   040040 040040   000000 203015   002003 001001   000000 000000        ............
   3     034   000000 000000   000000 000000   000000 000002   000002 776003    ................
   3     040   001000 000000   000000 000002   000000 000000   000000 000000    ................
   3     044   000000 000111   040040 040040   000000 006014   000000 006014    ...I    ........
   3     050   000000 006014   000000 000000   000000 000000   000000 006014    ................
   3     054   000000 000000   000000 000000   000000 000000   000000 000000    ................
   3     060   000000 010000   000000 000000   000000 000000   000000 000000    ................
   3     064   000000 000020   000000 000000   000000 006014   000000 000000    ................
   3     070   000000 000000   000000 000000   000000 000000   000000 000000    ................
   3     074   000000 000000   000000 006014   000000 000000   000000 000000    ................
   3     100   000000 000000   000000 000000   000000 000000   000000 000000    ................
   3     104   ****** ******   ****** ******   000000 000000   ****** ******    ................
   3     110   000000 000000   000000 000000   000000 000000   000000 000000    ................
   3     124*  000000 000000   000000 000000   000000 000000   ****** ******    ................
   3     134*  ****** ******   ****** ******   ****** ******   000000 070707    ..............8.
   3     140   ****** ******   ****** ******                                    ........

(unnamed)
 Sect OctLoc
   5     000   777777 400007   000016 006000   577777 777777   017777 600000    ................
   5     004   000377 777777   777777 577777   017777 774000   000003 774000    ................
     1215    10139
     1216    10140    3   END CHECK_GELBAR_DEBUG ;
     1217    10141    2   END TOG$MME_GELBAR;
     1218    10142
     1219    10143    1   END TOG$GCOS_MMES;

PL6.E3A0      #001=TOG$GCOS_MMES File=TOG$GCOS_MMES.:E05TSI                      WED 07/30/97 06:24 Page:139  
--  Include file information  --

   TO_PERR_C.:E05TOU  is referenced.
   TOT_RQSTS_E.:E05TOU  is referenced.
   TOT_TOLTS_M.:E05TOU  is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   CP_6_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  is referenced.
   B$JIT.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure TOG$GCOS_MMES.
PL6.E3A0      #001=TOG$GCOS_MMES File=TOG$GCOS_MMES.:E05TSI                      WED 07/30/97 06:24 Page:140  

 **** Procedure blocks ****

LB#    Line#s    #stmts #vars Sect# OctLoc  P A C   NP Lvl/name
  0    29- 10143    290    87     4      0  y   y    4   1 TOG$GCOS_MMES
  1  8973-  9030     25     2     4    121  y   y    1     2 TOG$MME_CLEARQ
  2  8992-  9013      8     5     4    142  y   y    0      3 STORE_CLEARQ_ISC_STATUS
  3  9015-  9029      7     1     4    160  y   y    0      3 PAY_CLEARQ_ISC_CC
  4  9042-  9051      3     2     4    176  y   y    1     2 TOG$MME_GEENDC
  5  9087-  9797    192    28     4    204  y   y    6     2 TOG$MME_GEINOS
  6  9181-  9204     19     0     4    301  y   y    0      3 DO_ISC_READ
  7  9250-  9286     24     5     4    344  y   y    0      3 DO_SPECIAL_ISC_READ
  8  9330-  9350     16     0     4    420  y   y    0      3 DO_ISC_WRITE
  9  9359-  9381      8     8     4    453  y   y    0      3 REQUEUE_WRITE
 10  9396-  9407      7     0     4    512  y   y    0      3 SAVE_GEINOS_DATA
 11  9419-  9435      5     5     4    531  y   y    0      3 MOVE_FROM_TOLTS
 12  9446-  9462      5     5     4    551  y   y    0      3 MOVE_TO_POLTS
 13  9476-  9497      8     5     4    571  y   y    0      3 STORE_ISC_STATUS
 14  9510-  9524      7     1     4    607  y   y    0      3 PAY_ISC_CC
 15  9547-  9639     47    16     4    625  y   y    0      3 DO_CONSOLE_WRITE
 16  9598-  9638     21     5     4    762  y   y    0       4 BREAK_MESSAGE
 17  9641-  9796     29    28     4   1123  y   y    0      3 READ_WRITE_8K
 18  9879- 10141     58    12     4   1250  y   y    3     2 TOG$MME_GELBAR
 19  9938-  9956     11     2     4   1302  y   y    0      3 SET_GELBAR_REGS
 20  9967-  9976      6     0     4   1343  y   y    0      3 SET_GELBAR_TIMER
 21  9991- 10056      8     9     4   1365  y   y    0      3 FIX_GELBAR_SPA
 22 10092- 10111     13     1     4   1406  y   y    0      3 BUILD_GELBAR_ISR
 23 10120- 10140      9     3     4   1470  y   y    0      3 CHECK_GELBAR_DEBUG
PL6.E3A0      #001=TOG$GCOS_MMES File=TOG$GCOS_MMES.:E05TSI                      WED 07/30/97 06:24 Page:141  

    **** Executable statements  ****

  Exec cost Stmt Sec OctLoc Type   LB Label              Exec cost Stmt Sec OctLoc Type   LB Label

              29   4      0 Proc    0                              8948   4      2 If      0
$$$$$$$$$$  8949   4      5 DoCase  0                              8950   4     50 Case    0
            8951   4     50 Call    0                              8952   4     55 Case    0
    $$$$$$  8953   4     55 Call    0                              8955   4    101 Case    0
        $$  8956   4    101 Call    0                              8957   4    113 EndCse  0
            8958   4    114 Call    0                              8959   4    120 Return  0
            8973   4    121 Proc    1                              8979   4    122 If      1
            8980   4    124 Do      1                              8981   4    124 Call    1
            8982   4    126 Call    1                              8983   4    130 Assign  1
            8984   4    132 Assign  1                              8985   4    135 EndDo   1
            8987   4    135 Assign  1                              8988   4    140 Return  1
            8992   4    142 Proc    2                              9004   4    143 If      2
            9006   4    145 Do      2                              9007   4    145 Assign  2
            9008   4    151 Assign  2                              9009   4    154 Assign  2
            9010   4    156 EndDo   2                              9011   4    156 Return  2
            9015   4    160 Proc    3                              9021   4    161 If      3
            9023   4    163 Do      3                              9024   4    163 Assign  3
         $  9025   4    166 Call    3                              9026   4    174 EndDo   3
            9027   4    174 Return  3                              9042   4    176 Proc    4
    $$$$$$  9048   4    177 MonCal  4                              9049   4    201 Unwind  4
            9087   4    204 Proc    5                  $$$$$$$$$$  9121   4    205 DoCase  5
            9122   4    250 Case    5                              9123   4    250 Call    5
            9124   4    253 Case    5                              9125   4    253 Call    5
            9126   4    256 Case    5                              9127   4    256 Call    5
            9128   4    261 Case    5                              9129   4    261 Call    5
            9130   4    264 Case    5                              9131   4    264 Call    5
            9132   4    267 Case    5                              9133   4    267 Assign  5
            9134   4    273 Call    5                              9135   4    277 EndCse  5
            9136   4    277 Return  5                              9181   4    301 Proc    6
            9185   4    302 If      6                              9186   4    304 Do      6
            9187   4    304 Assign  6                              9188   4    310 Call    6
            9189   4    314 EndDo   6                              9190   4    315 Do      6
            9191   4    315 Call    6                              9192   4    317 If      6
PL6.E3A0      #001=TOG$GCOS_MMES File=TOG$GCOS_MMES.:E05TSI                      WED 07/30/97 06:24 Page:142  
            9193   4    322 Do      6                              9194   4    322 Assign  6
            9195   4    324 Call    6                              9196   4    326 Call    6
            9197   4    330 Call    6                              9198   4    332 EndDo   6
            9199   4    333 Assign  6                              9200   4    335 Assign  6
            9201   4    340 Return  6                              9204   4    342 EndPrc  6
            9250   4    344 Proc    7                              9261   4    345 If      7
            9262   4    347 Do      7                              9263   4    347 Assign  7
            9264   4    353 Call    7                              9265   4    357 EndDo   7
            9266   4    360 Do      7                              9267   4    360 Call    7
            9268   4    362 If      7                              9269   4    365 Do      7
            9270   4    365 Assign  7                              9271   4    367 Call    7
            9272   4    371 Call    7                              9273   4    373 Call    7
            9274   4    375 EndDo   7                              9275   4    376 If      7
            9277   4    400 Do      7                              9278   4    400 Assign  7
            9279   4    404 Assign  7                              9280   4    407 Assign  7
            9281   4    411 EndDo   7                              9282   4    411 Assign  7
            9283   4    414 Return  7                              9286   4    416 EndPrc  7
            9330   4    420 Proc    8                              9334   4    421 If      8
            9335   4    424 Call    8                              9336   4    427 Do      8
            9337   4    427 Call    8                              9338   4    431 If      8
            9339   4    433 Do      8                              9340   4    433 Assign  8
            9341   4    435 Call    8                              9342   4    437 Call    8
            9343   4    441 Call    8                              9344   4    443 EndDo   8
            9345   4    444 Assign  8                              9346   4    446 EndDo   8
            9347   4    446 Assign  8                              9348   4    451 Return  8
            9359   4    453 Proc    9                           $  9373   4    454 Assign  9
         $  9374   4    461 Assign  9                           $  9375   4    466 Assign  9
            9376   4    472 Assign  9                              9377   4    474 Assign  9
       $$$  9378   4    476 Call    9                              9379   4    510 Return  9
            9396   4    512 Proc   10                              9400   4    513 Assign 10
            9401   4    516 Assign 10                              9402   4    521 Assign 10
            9403   4    523 Assign 10                              9404   4    526 Assign 10
            9405   4    530 Return 10                              9419   4    531 Proc   11
         $  9430   4    532 Assign 11                           $  9431   4    537 Assign 11
         $  9432   4    544 Assign 11                              9433   4    550 Return 11
            9446   4    551 Proc   12                              9457   4    552 Assign 12
         $  9458   4    556 Assign 12                           $  9459   4    563 Assign 12
PL6.E3A0      #001=TOG$GCOS_MMES File=TOG$GCOS_MMES.:E05TSI                      WED 07/30/97 06:24 Page:143  
            9460   4    567 Return 12                              9476   4    571 Proc   13
            9488   4    572 If     13                              9490   4    574 Do     13
            9491   4    574 Assign 13                              9492   4    600 Assign 13
            9493   4    603 Assign 13                              9494   4    605 EndDo  13
            9495   4    605 Return 13                              9510   4    607 Proc   14
            9516   4    610 If     14                              9518   4    612 Do     14
            9519   4    612 Assign 14                           $  9520   4    615 Call   14
            9521   4    623 EndDo  14                              9522   4    623 Return 14
            9547   4    625 Proc   15                              9570   4    626 Assign 15
         $  9571   4    627 Assign 15                              9572   4    634 DoIndx 15
            9573   4    635 Assign 15                              9574   4    637 EndInd 15
            9575   4    644 Assign 15                              9576   4    646 Assign 15
            9577   4    647 DoWhil 15                           $  9578   4    655 Assign 15
            9579   4    662 Assign 15                              9580   4    666 Assign 15
            9581   4    672 DoIndx 15                           $  9582   4    674 Assign 15
            9583   4    700 Assign 15                              9584   4    703 Assign 15
         $  9585   4    706 EndInd 15                           $  9586   4    716 If     15
            9587   4    722 Assign 15                              9588   4    724 Assign 15
            9589   4    727 EndWhi 15                           $  9590   4    735 Assign 15
       $$$  9591   4    741 Call   15                              9592   4    753 Call   15
            9593   4    755 Assign 15                              9594   4    760 Return 15
            9598   4    762 Proc   16                              9611   4    763 Assign 16
     $$$$$  9612   4    764 IntCal 16                              9613   4   1000 DoWhil 16
            9614   4   1003 Assign 16                        $$$$  9615   4   1006 IntCal 16
            9616   4   1020 EndWhi 16                              9619   4   1023 DoWhil 16
            9621   4   1027 If     16                              9622   4   1033 Assign 16
            9623   4   1036 Assign 16                          $$  9625   4   1041 Assign 16
            9626   4   1052 Call   16                              9629   4   1055 Assign 16
      $$$$  9630   4   1060 IntCal 16                              9631   4   1072 DoWhil 16
            9632   4   1075 Assign 16                        $$$$  9633   4   1100 IntCal 16
            9634   4   1112 EndWhi 16                              9635   4   1115 EndWhi 16
            9636   4   1121 Return 16                              9641   4   1123 Proc   17
         $  9766   4   1124 Assign 17                           $  9767   4   1131 Assign 17
         $  9768   4   1136 Assign 17                           $  9769   4   1142 Assign 17
         $  9770   4   1147 Assign 17                           $  9771   4   1154 If     17
            9772   4   1161 Do     17                              9773   4   1161 Assign 17
            9774   4   1165 Assign 17                  $$$$$$$$$$  9775   4   1167 MonCal 17
PL6.E3A0      #001=TOG$GCOS_MMES File=TOG$GCOS_MMES.:E05TSI                      WED 07/30/97 06:24 Page:144  
            9776   4   1173 EndDo  17                              9777   4   1174 If     17
            9778   4   1176 Do     17                              9779   4   1176 Assign 17
            9780   4   1202 Assign 17                  $$$$$$$$$$  9781   4   1204 MonCal 17
            9782   4   1207 EndDo  17                              9783   4   1210 Do     17
            9784   4   1210 Assign 17                              9785   4   1214 Call   17
            9786   4   1220 EndDo  17                           $  9787   4   1220 Assign 17
            9788   4   1225 Assign 17                              9789   4   1230 Assign 17
            9790   4   1231 Assign 17                              9791   4   1234 Return 17
       $$$  9794   4   1236 Call   17 NO_READ                      9795   4   1246 Return 17
            9879   4   1250 Proc   18                              9899   4   1251 Assign 18
            9900   4   1253 Call   18                              9901   4   1255 Call   18
            9902   4   1257 Call   18                              9903   4   1261 Call   18
            9904   4   1263 Call   18                              9905   4   1265 If     18
  $$$$$$$$  9907   4   1272 MonCal 18                      $$$$$$  9908   4   1275 MonCal 18
            9909   4   1277 Unwind 18                              9938   4   1302 Proc   19
         $  9945   4   1303 Assign 19                           $  9946   4   1310 Assign 19
         $  9947   4   1315 Assign 19                          $$  9948   4   1321 Assign 19
         $  9949   4   1326 Assign 19                              9950   4   1332 Assign 19
            9951   4   1334 Assign 19                              9952   4   1336 Assign 19
            9953   4   1340 Assign 19                              9954   4   1342 Return 19
            9967   4   1343 Proc   20                              9969   4   1344 Assign 20
            9970   4   1347 Assign 20                           $  9972   4   1353 Assign 20
            9973   4   1361 Assign 20                              9974   4   1364 Return 20
            9991   4   1365 Proc   21                          $$ 10048   4   1366 Assign 21
           10049   4   1372 Assign 21                             10050   4   1374 Assign 21
           10051   4   1377 Assign 21                             10052   4   1401 Assign 21
           10053   4   1403 Assign 21                             10054   4   1405 Return 21
           10092   4   1406 Proc   22                           $ 10098   4   1407 If     22
           10099   4   1413 Do     22                             10100   4   1413 Assign 22
           10101   4   1416 Assign 22                             10102   4   1420 Assign 22
        $$ 10103   4   1423 Assign 22                           $ 10104   4   1435 Assign 22
           10105   4   1444 EndDo  22                           $ 10106   4   1445 Assign 22
         $ 10107   4   1455 Assign 22                             10108   4   1464 Assign 22
           10109   4   1467 Return 22                             10120   4   1470 Proc   23
           10130   4   1471 If     23                             10131   4   1473 Do     23
           10132   4   1473 Assign 23                           $ 10133   4   1475 Assign 23
           10134   4   1501 Assign 23                             10135   4   1504 Call   23
PL6.E3A0      #001=TOG$GCOS_MMES File=TOG$GCOS_MMES.:E05TSI                      WED 07/30/97 06:24 Page:145  
           10136   4   1507 EndDo  23                             10138   4   1507 Return 23


  **** Statement type totals  ****

   108 Assign    41 Call       5 MonCal    20 If         9 Case      23 Return
     2 Unwind     4 IntCal     2 DoIndx     4 DoWhil     2 DoCase    19 Do
     2 EndInd     4 EndWhi     2 EndCse    17 EndDo     24 Proc       2 EndPrc
     1 Labels

 # major stmts=  211 Code/major= 3.98 # stmts=  290 Code/stmt= 2.90  Point total=104.8
 Cost/major stmt=  3.8 Cost/stmt=  2.8 Total cost=    822.5

   0-4  $$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
   4-6  $$$$$$$$$$$$$
   6-8  $
  8-10  $
 10-12  $
 12-14
 14-16  $
 16-18
 18-20
 20-22
 22-??  $
PL6.E3A0      #001=TOG$GCOS_MMES File=TOG$GCOS_MMES.:E05TSI                      WED 07/30/97 06:24 Page:146  

 **** Variables and constants ****

  ****  Section 001  Data  TOG$GCOS_MMES

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     7-0-0/w UBIN        r     1 ISC_WRITE_DATA(0:2)

  ****  Structures  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name

    52-0-0/d STRC(360)   r     1 DEL_8K
    62-0-0/d STRC(72)    r         2 V

    64-0-0/w STRC(45)    r     1 EISPACT_SV_KEY
    64-1-0/b UBIN        r         2 KEY

     4-0-0/b STRC(108)   r     1 ISC_GEINOS_DATA
     4-0-0/b UBIN        r         2 OP_CODE
     5-0-0/b UBIN(18)    r         2 FILE_ADR
     5-2-0/b UBIN(18)    r         2 DCW_ADR
     6-0-0/b UBIN(18)    r         2 STATUS_ADR
     6-2-0/b UBIN(18)    r         2 CC_ADR

    12-0-0/d STRC(144)   r     1 ISR_V
    12-0-0/b UBIN(20)    r         2 SIZE
    13-0-0/b UBIN(20)    r         2 BASE

    20-0-0/d STRC(504)   r     1 READ_8K
    24-0-0/w STRC(72)    r         2 BUF_
    24-0-0/b UBIN(20)    r          3 BOUND
    25-0-0/w PTR         r          3 BUF$
    30-0-0/d STRC(216)   r         2 V

     0-0-0/d STRC(144)   r     1 STIMER_FPT
     2-0-0/d STRC(72)    r         2 V
PL6.E3A0      #001=TOG$GCOS_MMES File=TOG$GCOS_MMES.:E05TSI                      WED 07/30/97 06:24 Page:147  
     3-1-1/b UBIN(26)    r          3 UNITS#

    16-0-0/w STRC        r     1 TOG_ERROR_CODE
    16-2-1/b UBIN(14)    r         2 ERR#

    36-0-0/d STRC(432)   r     1 WRITE_8K
    42-0-0/w STRC(72)    r         2 BUF_
    42-0-0/b UBIN(20)    r          3 BOUND
    43-0-0/w PTR         r          3 BUF$
    46-0-0/d STRC(144)   r         2 V


  ****  Section 002 RoData TOG$GCOS_MMES

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     2-0-0/w PTR         r     1 BASE$                      1-0-0/c CHAR(2)     r     1 CRLF
     1-0-0/c STRC(18)    r     1 CRLF_                      0-0-0/w STRC        r     1 FPTN_
     0-0-0/w PTR         r     1 IS$

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @MME                       5-0-0/w PTR         r     1 @MME_INSTR$
     4-0-0/w PTR         r     1 @MREG                     11-0-0/w PTR         r     1 @P_AREG
    11-0-0/w PTR         r     1 @P_MMEWD1                 12-0-0/w PTR         r     1 @P_MMEWD2
    13-0-0/w PTR         r     1 @P_MMEWD3                 14-0-0/w PTR         r     1 @P_MMEWD4
    15-0-0/w PTR         r     1 @P_MMEWD5                 12-0-0/w PTR         r     1 @P_QREG
     6-0-0/w PTR         r     1 @RETURN_DELTA             11-0-0/w PTR         r     1 @RETURN_DELTA
    11-0-0/w PTR         r     1 @RETURN_DELTA             16-0-0/w PTR         r     1 @RETURN_DELTA
    13-0-0/w PTR         r     1 @RETURN_DELTA             21-0-0/w SBIN(18)    r     1 BOUNDS_ADR
    13-0-0/w PTR         r     1 CC$                       23-0-0/w PTR         r     1 CC$
   221-0-0/w SBIN        r     1 CHAR_COUNT               222-0-0/w UBIN        r     1 CONTINUE
   357-0-0/w UBIN        r     1 CRLFX                    223-0-0/w UBIN        r     1 DATA(0:84)
PL6.E3A0      #001=TOG$GCOS_MMES File=TOG$GCOS_MMES.:E05TSI                      WED 07/30/97 06:24 Page:148  
    23-0-0/w PTR         r     1 DATA$                     23-0-0/w PTR         r     1 DATA$
    23-0-0/w PTR         r     1 DATA$                    350-0-0/w PTR         r     1 DATA$
    21-0-0/c CHAR(510)   r     1 DATA_ASCII_FMT
   223-0-0/w UBIN(6)     r     1 DATA_BCD_FMT(0:509)
    22-0-0/w PTR         r     1 DATA_DCW$                351-0-0/w UBIN(12)    r     1 DATA_TALLY
    24-0-0/w PTR         r     1 DCW$                      24-0-0/w PTR         r     1 DCW$
    24-0-0/w PTR         r     1 DCW$                     352-0-0/w PTR         r     1 DCWLIST$
    15-0-0/w PTR         r     1 GELBAR_LOC1$              16-0-0/w UBIN        r     1 GELBAR_TIMEOUT
    21-0-0/w PTR         r     1 IO_BUF$                   24-0-0/w PTR         r     1 KEY$
    23-0-0/w PTR         r     1 KEY_DCW$                 353-0-0/w UBIN        r     1 M
   354-0-0/w UBIN        r     1 MESSAGE_SIZE              *0-0-0/w PTR         r     1 MME_INSTR$
   361-0-0/w UBIN        r     1 MSG_LGTH                 360-0-0/w UBIN        r     1 MSG_START
   355-0-0/w UBIN        r     1 N                         *0-0-0/w UBIN        r     1 P_AREG
    *0-0-0/w UBIN        r     1 P_MMEWD1                  *0-0-0/w UBIN        r     1 P_MMEWD2
    *0-0-0/w UBIN        r     1 P_MMEWD3                  *0-0-0/w UBIN        r     1 P_MMEWD4
    *0-0-0/w UBIN        r     1 P_MMEWD5                  *0-0-0/w UBIN        r     1 P_QREG
    25-0-0/w UBIN        r     1 QUEUE_ENTRY(0:2)
    21-0-0/w PTR         r     1 REGS$                     30-0-0/w UBIN        r     1 REQUEST_TYPE
    *0-0-0/w SBIN(18)    r     1 RETURN_DELTA              *0-0-0/w SBIN(18)    r     1 RETURN_DELTA
    *0-0-0/w SBIN(18)    r     1 RETURN_DELTA              *0-0-0/w SBIN(18)    r     1 RETURN_DELTA
    *0-0-0/w SBIN(18)    r     1 RETURN_DELTA              31-0-0/w UBIN(18)    r     1 SERVICE_CODE
    13-0-0/w PTR         r     1 STATUS$                   21-0-0/w PTR         r     1 STATUS$
    23-0-0/w PTR         r     1 STATUS$                   25-0-0/w PTR         r     1 STATUS$

  ****  Structures  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name

    16-0-0/w STRC        r     1 GLB_TO
    16-2-0/b UBIN(18)    r         2 VALUE

    *0-0-0/w STRC(252)   r     1 MME
     0-0-0/b STRC        r         2 INST
     0-0-0/b SBIN(18)    r          3 NO
     1-0-0/w UBIN        r         2 WD_1
     2-0-0/w UBIN        r         2 WD_2
     3-0-0/w UBIN        r         2 WD_3
     4-0-0/w UBIN        r         2 WD_4
PL6.E3A0      #001=TOG$GCOS_MMES File=TOG$GCOS_MMES.:E05TSI                      WED 07/30/97 06:24 Page:149  
     5-0-0/w UBIN        r         2 WD_5

    *0-0-0/w STRC        r     1 MME_W1
     0-0-0/b UBIN(6)     r         2 DV_CMD

    *0-0-0/w STRC        r     1 MME_W2
     0-0-0/b UBIN(18)    r         2 FILE_ADR
     0-2-0/b UBIN(18)    r         2 DCW_ADR

    *0-0-0/w STRC        r     1 MME_W3
     0-0-0/b UBIN(18)    r         2 STATUS_ADR
     0-2-0/b UBIN(18)    r         2 CC_ADR

    *0-0-0/d STRC(252)   r     1 MREG
     4-0-0/b UBIN        r         2 A
     5-0-0/b UBIN        r         2 Q

    *0-0-0/w STRC        r     1 MREGA
     0-0-0/b UBIN(18)    r         2 LOC1_ADR

    *0-0-0/w STRC        r     1 SDIA_MME_W2
     0-2-0/b UBIN(18)    r         2 KEY_DCW_ADDR

    *0-0-0/w STRC        r     1 SDIA_MME_W3
     0-0-0/b UBIN(6)     r         2 DV_CMD

    *0-0-0/w STRC        r     1 SDIA_MME_W4
     0-2-0/b UBIN(18)    r         2 DATA_DCW_ADDR

    *0-0-0/w STRC        r     1 SDIA_MME_W5
     0-0-0/b UBIN(18)    r         2 STATUS_ADDR


  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name
PL6.E3A0      #001=TOG$GCOS_MMES File=TOG$GCOS_MMES.:E05TSI                      WED 07/30/97 06:24 Page:150  

     0-0-0/w PTR         r     1 B$JIT$                     0-0-0/w PTR         r     1 B$TCB$
     0-0-0/w PTR         r     1 TOD$SPA$
     0-0-0/w PTR         r     1 TOF$GELBAR_ADDRESS_REGS(0:7)
     0-0-0/w UBIN        r     1 TOF$GELBAR_EIS_REGS(0:7)
     0-0-0/w UBIN        r     1 TOF$GELBAR_REGISTERS(0:7)
     0-0-0/b BIT (72)    r     1 TOF$ISR_VECTOR             0-0-0/d REMB        r     1 TOF$SISR_RV
     0-0-0/d REMB        r     1 TOK$CC_RETURN

  ****  Structures  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d STRC(432)   r     1 CONSOLE_FPT
     4-0-0/w STRC(72)    r         2 BUF_

     0-0-0/h STRC(45)    r     1 TOF$BAR
     0-0-0/h STRC(18)    r         2 CURRENT
     0-0-0/b UBIN(9)     r          3 BASE
     0-1-0/b UBIN(9)     r          3 SIZE
     1-0-0/c BIT         r         2 GELBAR_MODE

     0-0-0/b STRC        r     1 TOF$GELBAR_IC
     0-0-0/b UBIN(18)    r         2 IC

     0-0-0/b STRC        r     1 TOF$GELBAR_INDICATORS
     0-2-0/b UBIN(18)    r         2 I

     0-0-0/w STRC(396)   r     1 TOQ$DCP
     0-0-0/c STRC(18)    r         2 PF
     0-0-0/b BIT         r          3 ENABLED
     0-1-0/c UBIN(9)     r          3 REASON
    10-0-0/w STRC(72)    r         2 BR
    10-0-0/w UBIN        r          3 ADDRESS
    11-0-0/w UBIN        r          3 IC

     0-0-0/w STRC(495)   r     1 TOT$ECP
     5-0-0/c STRC(4)     r         2 ISC
PL6.E3A0      #001=TOG$GCOS_MMES File=TOG$GCOS_MMES.:E05TSI                      WED 07/30/97 06:24 Page:151  
     5-0-0/b BIT         r          3 READ_OUT
     5-0-1/b BIT         r          3 WRITE_OUT
     7-0-0/w STRC(216)   r         2 SUBEXEC
     7-0-0/w UBIN        r          3 CURRENT


  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w UBIN        r     1 DATA(0:2)                  0-0-0/w UBIN        r     1 DATA(0:2)
     0-0-0/w UBIN        r     1 DATA(0:2)                  0-0-0/w UBIN        r     1 DATA_WORD
     0-0-0/w UBIN        r     1 KEY                        0-0-0/w UBIN        r     1 REGS(0:7)

  ****  Structures  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(2448)  r     1 B$ALT
   102-0-0/b STRC        r         2 ERR

     0-0-0/w STRC(2448)  r     1 B$EXCFR
    20-0-0/w PTR         r         2 PRS(0:7)
    60-0-0/b UBIN        r         2 EIS(0:7)

     0-0-0/d STRC(8856)  r     1 B$JIT
   204-0-0/h UBIN(18)    r         2 TDP

     0-0-0/w STRC(144)   r     1 B$TCB
     0-0-0/w PTR         r         2 ALT$
     1-0-0/w PTR         r         2 STK$

     0-0-0/w STRC(72)    r     1 BASE
     1-0-0/b UBIN(18)    r         2 VAL

     0-0-0/w STRC(72)    r     1 DATA_DCWS
     0-0-0/b STRC        r         2 DCW1
PL6.E3A0      #001=TOG$GCOS_MMES File=TOG$GCOS_MMES.:E05TSI                      WED 07/30/97 06:24 Page:152  
     0-0-0/b UBIN(18)    r          3 ADDRESS

     0-0-0/w STRC        r     1 DCW
     0-0-0/b UBIN(18)    r         2 ADR

     0-0-0/w STRC        r     1 DCW
     0-0-0/b UBIN(18)    r         2 ADR

     0-0-0/w STRC        r     1 DCW
     0-0-0/b UBIN(18)    r         2 ADR

     0-0-0/w STRC        r     1 DCW
     0-0-0/b UBIN(18)    r         2 ADR
     0-2-4/b UBIN(2)     r         2 TYPE
     0-2-6/b UBIN(12)    r         2 WORD_COUNT

     0-0-0/w STRC        r     1 KEY_DCW
     0-0-0/b UBIN(18)    r         2 ADDRESS

     0-0-0/w STRC(72)    r     1 LOC1
     0-0-0/b STRC(18)    r         2 BAR
     0-0-0/b UBIN(9)     r          3 BASE
     0-1-0/b UBIN(9)     r          3 BOUNDS
     0-2-0/b UBIN(18)    r         2 LOC2$
     1-0-0/b UBIN(18)    r         2 IC
     1-2-0/b UBIN(18)    r         2 I

     0-0-0/d ASTR(3528)  r     1 M$EISPACT
   140-0-0/d ASTR(9)     r         2 DCBNAME
   140-0-4/b UBIN(5)     r          3 L

     0-0-0/w STRC(72)    r     1 STATUS
     0-0-0/b BIT         r         2 W1
     1-0-0/b STRC        r         2 W2
     1-2-6/b UBIN(12)    r          3 DCW_RESIDUE

     0-0-0/w STRC(72)    r     1 STATUS
PL6.E3A0      #001=TOG$GCOS_MMES File=TOG$GCOS_MMES.:E05TSI                      WED 07/30/97 06:24 Page:153  
     0-0-0/b BIT         r         2 W1
     1-0-0/b STRC        r         2 W2
     1-2-6/b UBIN(12)    r          3 DCW_RESIDUE

     0-0-0/w STRC(72)    r     1 STATUS
     0-0-0/b BIT         r         2 W1
     1-0-0/b STRC        r         2 W2
     1-2-6/b UBIN(12)    r          3 DCW_RESIDUE

     0-0-0/w STRC(72)    r     1 STATUS
     0-0-0/w BIT         r         2 W1
     1-0-0/w BIT         r         2 W2

     0-0-0/w STRC(2592)  r     1 TOD$SPA
    21-0-0/w UBIN        r         2 WD17
    22-0-0/w UBIN        r         2 WD18_
    31-0-0/w STRC        r         2 WD25
    31-0-0/b STRC(18)    r          3 BAR
    31-0-0/b UBIN(9)     r           4 BASE
    31-1-0/b UBIN(9)     r           4 BOUNDS
    31-2-1/b BIT         r          3 FAULT
    31-3-3/b UBIN(6)     r          3 FAULT_TYPE



   Procedure TOG$GCOS_MMES requires 841 words for executable code.
   Procedure TOG$GCOS_MMES requires 246 words of local(AUTO) storage.

    No errors detected in file TOG$GCOS_MMES.:E05TSI    .
PL6.E3A0      #001=TOG$GCOS_MMES File=TOG$GCOS_MMES.:E05TSI                      WED 07/30/97 06:24 Page:154  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=TOG$GCOS_MMES File=TOG$GCOS_MMES.:E05TSI                      WED 07/30/97 06:24 Page:155  
          MINI XREF LISTING

B$ALT.CODE
      8558**DCL      8558--REDEF    8559--REDEF    8559--REDEF
B$ALT.ERR
      8559**DCL      9794<>CALL
B$ALT.ERR.ERR#
      8560**DCL      8560--REDEF
B$ALT.EVID
      8559**DCL      8559--REDEF    8559--REDEF
B$EXCFR.ASL
      8536**DCL      8536--REDEF
B$EXCFR.EIS
      8548**DCL      9949>>ASSIGN
B$EXCFR.ERR.ERR#
      8550**DCL      8550--REDEF
B$EXCFR.EVID
      8549**DCL      8549--REDEF    8550--REDEF
B$EXCFR.IR
      8537**DCL      8537--REDEF
B$EXCFR.PREVSZ
      8536**DCL      8536--REDEF
B$EXCFR.PRS
      8547**DCL      9948>>ASSIGN
B$EXCFR.SUBC
      8548**DCL      8548--REDEF    8549--REDEF    8549--REDEF
B$JIT.CPFLAGS1.SLEAZE
       454**DCL       454--REDEF
B$JIT.ERR.MID
       361**DCL       361--REDEF
B$JIT.JRESPEAK
       522**DCL       523--REDEF
B$JIT.ORIGINATOR_PORT.FROM_CR
       631**DCL       631--REDEF     632--REDEF
PL6.E3A0      #001=TOG$GCOS_MMES File=TOG$GCOS_MMES.:E05TSI                      WED 07/30/97 06:24 Page:156  
B$JIT.PNR
       535**DCL       535--REDEF
B$JIT.TDP
       520**DCL     10100>>ASSIGN
B$JIT.TSLINE
       629**DCL       630--REDEF
B$JIT$
      8709**DCL       355--IMP-PTR 10100>>ASSIGN
B$TCB.ALT$
      8554**DCL      9794>>CALL
B$TCB.STK$
      8554**DCL      9948>>ASSIGN   9949>>ASSIGN
B$TCB$
      8708**DCL      9794>>CALL     9948>>ASSIGN   9949>>ASSIGN
BASE.VAL IN PROCEDURE CHECK_GELBAR_DEBUG
     10125**DCL     10133>>ASSIGN
BASE$ IN PROCEDURE CHECK_GELBAR_DEBUG
     10122**DCL     10123--IMP-PTR 10133>>ASSIGN
BOUNDS_ADR IN PROCEDURE BUILD_GELBAR_ISR
     10094**DCL     10100<<ASSIGN  10101<<ASSIGN  10101>>ASSIGN  10102<<ASSIGN  10102>>ASSIGN  10103>>ASSIGN
BREAK_MESSAGE IN PROCEDURE DO_CONSOLE_WRITE
      9598**PROC     9592--CALL
BUILD_GELBAR_ISR IN PROCEDURE TOG$MME_GELBAR
     10092**PROC     9903--CALL
CC$ IN PROCEDURE PAY_CLEARQ_ISC_CC
      9017**DCL      9024<<ASSIGN   9025<>CALL
CC$ IN PROCEDURE PAY_ISC_CC
      9512**DCL      9519<<ASSIGN   9520<>CALL
CHAR_COUNT IN PROCEDURE DO_CONSOLE_WRITE
      9550**DCL      9590<<ASSIGN   9591<>CALL     9619>>DOWHILE  9621>>IF       9623>>ASSIGN
CHECK_GELBAR_DEBUG IN PROCEDURE TOG$MME_GELBAR
     10120**PROC     9904--CALL
CONSOLE_FPT.BUF_
      8603**DCL      9625<<ASSIGN
CONSOLE_FPT.STATION_
      8605**DCL      8605--REDEF
PL6.E3A0      #001=TOG$GCOS_MMES File=TOG$GCOS_MMES.:E05TSI                      WED 07/30/97 06:24 Page:157  
CONSOLE_FPT.V.DVBYTE.VFC#
      8612**DCL      8612--REDEF
CONTINUE IN PROCEDURE DO_CONSOLE_WRITE
      9551**DCL      9575<<ASSIGN   9577>>DOWHILE  9587<<ASSIGN
CRLF IN PROCEDURE BREAK_MESSAGE
      9603**DCL      9612>>CALLBLT  9615>>CALLBLT  9630>>CALLBLT  9633>>CALLBLT
CRLFX IN PROCEDURE BREAK_MESSAGE
      9604**DCL      9612<<CALLBLT  9613>>DOWHILE  9615<<CALLBLT  9621>>IF       9622>>ASSIGN   9630<<CALLBLT
      9631>>DOWHILE  9633<<CALLBLT
CRLF_ IN PROCEDURE BREAK_MESSAGE
      9600**DCL      9603--REDEF
DATA IN PROCEDURE DO_CONSOLE_WRITE
      9552**DCL      9554--REDEF    9573<<ASSIGN   9582<<ASSIGN
DATA IN PROCEDURE MOVE_FROM_TOLTS
      9421**DCL      9432>>ASSIGN
DATA IN PROCEDURE MOVE_TO_POLTS
      9448**DCL      9459<<ASSIGN
DATA IN PROCEDURE REQUEUE_WRITE
      9361**DCL      9375>>ASSIGN
DATA$ IN PROCEDURE DO_CONSOLE_WRITE
      9555**DCL      9578<<ASSIGN   9582>>ASSIGN   9583<<ASSIGN   9583>>ASSIGN
DATA$ IN PROCEDURE MOVE_FROM_TOLTS
      9422**DCL      9431<<ASSIGN   9432>>ASSIGN
DATA$ IN PROCEDURE MOVE_TO_POLTS
      9449**DCL      9458<<ASSIGN   9459>>ASSIGN
DATA$ IN PROCEDURE REQUEUE_WRITE
      9362**DCL      9374<<ASSIGN   9375>>ASSIGN
DATA_ASCII_FMT IN PROCEDURE DO_CONSOLE_WRITE
      9549**DCL      9591<>CALL     9612>>CALLBLT  9615>>CALLBLT  9625--ASSIGN   9630>>CALLBLT  9633>>CALLBLT
DATA_BCD_FMT IN PROCEDURE DO_CONSOLE_WRITE
      9554**DCL      9591<>CALL
DATA_DCW$ IN PROCEDURE READ_WRITE_8K
      9745**DCL      9769<<ASSIGN   9770>>ASSIGN
DATA_DCWS.DCW1.ADDRESS IN PROCEDURE READ_WRITE_8K
      9748**DCL      9770>>ASSIGN
DATA_TALLY IN PROCEDURE DO_CONSOLE_WRITE
PL6.E3A0      #001=TOG$GCOS_MMES File=TOG$GCOS_MMES.:E05TSI                      WED 07/30/97 06:24 Page:158  
      9556**DCL      9579<<ASSIGN   9580>>ASSIGN   9581>>DOINDEX
DATA_WORD IN PROCEDURE DO_CONSOLE_WRITE
      9557**DCL      9582>>ASSIGN
DCW.ADR IN PROCEDURE DO_CONSOLE_WRITE
      9559**DCL      9578>>ASSIGN
DCW.TYPE IN PROCEDURE DO_CONSOLE_WRITE
      9561**DCL      9586>>IF
DCW.WORD_COUNT IN PROCEDURE DO_CONSOLE_WRITE
      9562**DCL      9579>>ASSIGN
DCW.ADR IN PROCEDURE MOVE_FROM_TOLTS
      9424**DCL      9431>>ASSIGN
DCW.ADR IN PROCEDURE MOVE_TO_POLTS
      9451**DCL      9458>>ASSIGN
DCW.ADR IN PROCEDURE REQUEUE_WRITE
      9364**DCL      9374>>ASSIGN
DCW$ IN PROCEDURE MOVE_FROM_TOLTS
      9426**DCL      9430<<ASSIGN   9431>>ASSIGN
DCW$ IN PROCEDURE MOVE_TO_POLTS
      9453**DCL      9457<<ASSIGN   9458>>ASSIGN
DCW$ IN PROCEDURE REQUEUE_WRITE
      9366**DCL      9373<<ASSIGN   9374>>ASSIGN
DCWLIST$ IN PROCEDURE DO_CONSOLE_WRITE
      9563**DCL      9571<<ASSIGN   9578>>ASSIGN   9579>>ASSIGN   9586>>IF       9588<<ASSIGN   9588>>ASSIGN
DEL_8K.V IN PROCEDURE READ_WRITE_8K
      9736**DCL      9733--DCLINIT
DO_CONSOLE_WRITE IN PROCEDURE TOG$MME_GEINOS
      9547**PROC     9129--CALL
DO_ISC_READ IN PROCEDURE TOG$MME_GEINOS
      9181**PROC     9123--CALL
DO_ISC_WRITE IN PROCEDURE TOG$MME_GEINOS
      9330**PROC     9127--CALL
DO_SPECIAL_ISC_READ IN PROCEDURE TOG$MME_GEINOS
      9250**PROC     9125--CALL
EISPACT_SV_KEY IN PROCEDURE READ_WRITE_8K
      9741**DCL      9663--DCLINIT  9664--DCLINIT  9706--DCLINIT  9733--DCLINIT  9734--DCLINIT
EISPACT_SV_KEY.KEY IN PROCEDURE READ_WRITE_8K
PL6.E3A0      #001=TOG$GCOS_MMES File=TOG$GCOS_MMES.:E05TSI                      WED 07/30/97 06:24 Page:159  
      9743**DCL      9768<<ASSIGN
FIX_GELBAR_SPA IN PROCEDURE TOG$MME_GELBAR
      9991**PROC     9902--CALL
FPTN_
      8629**DCL      8632--REDEF
GELBAR_LOC1$ IN PROCEDURE TOG$MME_GELBAR
      9891**DCL      9945<<ASSIGN   9946>>ASSIGN   9950>>ASSIGN   9951>>ASSIGN   9952>>ASSIGN   9953>>ASSIGN
     10050>>ASSIGN  10051>>ASSIGN  10098>>IF      10103>>ASSIGN  10106>>ASSIGN  10107>>ASSIGN
GELBAR_TIMEOUT IN PROCEDURE TOG$MME_GELBAR
      9892**DCL      9893--REDEF    9969<<ASSIGN   9970<<ASSIGN   9970>>ASSIGN   9973<<ASSIGN   9973>>ASSIGN
     10049>>ASSIGN
GLB_TO.VALUE IN PROCEDURE TOG$MME_GELBAR
      9895**DCL      9972>>ASSIGN
IO_BUF$ IN PROCEDURE READ_WRITE_8K
      9744**DCL      9770<<ASSIGN   9774>>ASSIGN   9780>>ASSIGN
IS$
      8632**DCL      9007>>ASSIGN   9024>>ASSIGN   9278>>ASSIGN   9373>>ASSIGN   9374>>ASSIGN   9430>>ASSIGN
      9431>>ASSIGN   9457>>ASSIGN   9458>>ASSIGN   9491>>ASSIGN   9519>>ASSIGN   9571>>ASSIGN   9578>>ASSIGN
      9766>>ASSIGN   9767>>ASSIGN   9769>>ASSIGN   9770>>ASSIGN   9787>>ASSIGN   9945>>ASSIGN   9946>>ASSIGN
ISC_GEINOS_DATA
      8634**DCL      8984<<ASSIGN
ISC_GEINOS_DATA.CC_ADR
      8639**DCL      9021>>IF       9024>>ASSIGN   9404<<ASSIGN   9516>>IF       9519>>ASSIGN
ISC_GEINOS_DATA.DCW_ADR
      8637**DCL      9402<<ASSIGN   9457>>ASSIGN
ISC_GEINOS_DATA.FILE_ADR
      8636**DCL      9401<<ASSIGN
ISC_GEINOS_DATA.OP_CODE
      8635**DCL      9400<<ASSIGN
ISC_GEINOS_DATA.STATUS_ADR
      8638**DCL      9004>>IF       9007>>ASSIGN   9275>>IF       9278>>ASSIGN   9403<<ASSIGN   9488>>IF
      9491>>ASSIGN
ISC_WRITE_DATA
      8640**DCL      9432<<ASSIGN   9459>>ASSIGN
ISR_V
      8641**DCL     10108>>ASSIGN
PL6.E3A0      #001=TOG$GCOS_MMES File=TOG$GCOS_MMES.:E05TSI                      WED 07/30/97 06:24 Page:160  
ISR_V.BASE
      8646**DCL     10107<<ASSIGN
ISR_V.SIZE
      8642**DCL     10103<<ASSIGN  10104<<ASSIGN  10104>>ASSIGN  10106<<ASSIGN
KEY IN PROCEDURE READ_WRITE_8K
      9758**DCL      9768>>ASSIGN
KEY$ IN PROCEDURE READ_WRITE_8K
      9757**DCL      9767<<ASSIGN   9768>>ASSIGN
KEY_DCW.ADDRESS IN PROCEDURE READ_WRITE_8K
      9755**DCL      9767>>ASSIGN
KEY_DCW$ IN PROCEDURE READ_WRITE_8K
      9753**DCL      9766<<ASSIGN   9767>>ASSIGN
LOC1.BAR.BASE
      8652**DCL      9952>>ASSIGN  10050>>ASSIGN  10103>>ASSIGN  10107>>ASSIGN
LOC1.BAR.BOUNDS
      8653**DCL      9953>>ASSIGN  10051>>ASSIGN  10098>>IF      10106>>ASSIGN
LOC1.I
      8656**DCL      9950>>ASSIGN
LOC1.IC
      8655**DCL      9951>>ASSIGN
LOC1.LOC2$
      8654**DCL      9946>>ASSIGN
M IN PROCEDURE DO_CONSOLE_WRITE
      9564**DCL      9581<<DOINDEX
M$CLRSTK
      6181**DCL-ENT  9048--CALL     9908--CALL
M$EISPACT.ACTPOS
      8879**DCL      8879--REDEF
M$EISPACT.ARS#
      8838**DCL      8838--REDEF
M$EISPACT.ATTR#
      8868**DCL      8868--REDEF    8870--REDEF
M$EISPACT.BORROW
      8890**DCL      8890--REDEF    8890--REDEF    8890--REDEF
M$EISPACT.DCBNAME.L
      8909**DCL      8909--IMP-SIZ
PL6.E3A0      #001=TOG$GCOS_MMES File=TOG$GCOS_MMES.:E05TSI                      WED 07/30/97 06:24 Page:161  
M$EISPACT.EOMCHAR#
      8845**DCL      8846--REDEF
M$EISPACT.FLDID
      8882**DCL      8883--REDEF
M$EISPACT.FORM$
      8874**DCL      8874--REDEF
M$EISPACT.FSECT
      8897**DCL      8897--REDEF
M$EISPACT.FSN#
      8864**DCL      8864--REDEF    8864--REDEF    8865--REDEF
M$EISPACT.HEADER$
      8873**DCL      8874--REDEF
M$EISPACT.IXTNSIZE#
      8870**DCL      8871--REDEF
M$EISPACT.LASTSTA$
      8854**DCL      8854--REDEF
M$EISPACT.LVL
      8891**DCL      8891--REDEF
M$EISPACT.NAME#.C
      8854**DCL      8855--REDEF
M$EISPACT.NOEOF
      8886**DCL      8886--REDEF
M$EISPACT.NRECS#
      8871**DCL      8871--REDEF
M$EISPACT.NRECX
      8898**DCL      8898--REDEF
M$EISPACT.OHDR
      8887**DCL      8887--REDEF
M$EISPACT.ORG#
      8862**DCL      8863--REDEF
M$EISPACT.PRECNO
      8895**DCL      8895--REDEF
M$EISPACT.RCSZ
      8903**DCL      8903--REDEF
M$EISPACT.RES#
      8856**DCL      8856--REDEF
PL6.E3A0      #001=TOG$GCOS_MMES File=TOG$GCOS_MMES.:E05TSI                      WED 07/30/97 06:24 Page:162  
M$EISPACT.SETX
      8875**DCL      8875--REDEF
M$EISPACT.TAB$
      8874**DCL      8874--REDEF
M$EISPACT.TDA
      8894**DCL      8895--REDEF
M$EISPACT.WSN#
      8856**DCL      8857--REDEF
M$READ
      6124**DCL-ENT  9775--CALL
M$STIMER
      6177**DCL-ENT  9907--CALL
M$WRITE
      6124**DCL-ENT  9781--CALL
MESSAGE_SIZE IN PROCEDURE DO_CONSOLE_WRITE
      9565**DCL      9570<<ASSIGN   9580<<ASSIGN   9580>>ASSIGN   9590>>ASSIGN
MME
      8492**DCL        29--PROC
MME.INST.NO
      8495**DCL      8948>>IF       8949>>DOCASE
MME.INSTR
      8493**DCL      8494--REDEF
MME.WD_1
      8497**DCL      8953<>CALL
MME.WD_2
      8498**DCL      8953<>CALL
MME.WD_3
      8499**DCL      8953<>CALL
MME.WD_4
      8500**DCL      8953<>CALL
MME.WD_5
      8501**DCL      8953<>CALL
MME_INSTR$
      8527**DCL        29--PROC
MME_W1.DV_CMD IN PROCEDURE TOG$MME_GEINOS
      9092**DCL      9121>>DOCASE
PL6.E3A0      #001=TOG$GCOS_MMES File=TOG$GCOS_MMES.:E05TSI                      WED 07/30/97 06:24 Page:163  
MME_W2.DCW_ADR IN PROCEDURE TOG$MME_GEINOS
      9097**DCL      9373>>ASSIGN   9402>>ASSIGN   9430>>ASSIGN   9571>>ASSIGN
MME_W2.FILE_ADR IN PROCEDURE TOG$MME_GEINOS
      9096**DCL      9401>>ASSIGN
MME_W3.CC_ADR IN PROCEDURE TOG$MME_GEINOS
      9104**DCL      9404>>ASSIGN
MME_W3.STATUS_ADR IN PROCEDURE TOG$MME_GEINOS
      9103**DCL      9403>>ASSIGN
MOVE_FROM_TOLTS IN PROCEDURE TOG$MME_GEINOS
      9419**PROC     9337--CALL
MOVE_TO_POLTS IN PROCEDURE TOG$MME_GEINOS
      9446**PROC     9195--CALL     9271--CALL     9341--CALL
MREG
      8513**DCL        29--PROC
MREG.A
      8522**DCL      8956<>CALL
MREG.Q
      8523**DCL      8956<>CALL
MREGA.LOC1_ADR IN PROCEDURE TOG$MME_GELBAR
      9884**DCL      9945>>ASSIGN
MSG_LGTH IN PROCEDURE BREAK_MESSAGE
      9606**DCL      9622<<ASSIGN   9623<<ASSIGN   9625>>ASSIGN   9629>>ASSIGN
MSG_START IN PROCEDURE BREAK_MESSAGE
      9605**DCL      9611<<ASSIGN   9612>>CALLBLT  9613>>DOWHILE  9614<<ASSIGN   9614>>ASSIGN   9615>>CALLBLT
      9619>>DOWHILE  9622>>ASSIGN   9623>>ASSIGN   9625>>ASSIGN   9629<<ASSIGN   9629>>ASSIGN   9630>>CALLBLT
      9631>>DOWHILE  9632<<ASSIGN   9632>>ASSIGN   9633>>CALLBLT
N IN PROCEDURE DO_CONSOLE_WRITE
      9566**DCL      9572<<DOINDEX  9573>>ASSIGN   9576<<ASSIGN   9582>>ASSIGN   9584<<ASSIGN   9584>>ASSIGN
NO_READ IN PROCEDURE READ_WRITE_8K
      9794**LABEL    9775--CALLALT
PAY_CLEARQ_ISC_CC IN PROCEDURE TOG$MME_CLEARQ
      9015**PROC     8982--CALL
PAY_ISC_CC IN PROCEDURE TOG$MME_GEINOS
      9510**PROC     9197--CALL     9273--CALL     9343--CALL
P_AREG IN PROCEDURE TOG$MME_GELBAR
      9882**DCL      9879--PROC     9883--REDEF
PL6.E3A0      #001=TOG$GCOS_MMES File=TOG$GCOS_MMES.:E05TSI                      WED 07/30/97 06:24 Page:164  
P_MMEWD1 IN PROCEDURE TOG$MME_GEINOS
      9090**DCL      9087--PROC     9091--REDEF    9400>>ASSIGN
P_MMEWD2 IN PROCEDURE TOG$MME_GEINOS
      9094**DCL      9087--PROC     9095--REDEF    9098--REDEF
P_MMEWD3 IN PROCEDURE TOG$MME_GEINOS
      9101**DCL      9087--PROC     9102--REDEF    9105--REDEF
P_MMEWD4 IN PROCEDURE TOG$MME_GEINOS
      9108**DCL      9087--PROC     9109--REDEF
P_MMEWD5 IN PROCEDURE TOG$MME_GEINOS
      9112**DCL      9087--PROC     9113--REDEF
P_QREG IN PROCEDURE TOG$MME_GELBAR
      9889**DCL      9879--PROC     9969>>ASSIGN  10048>>ASSIGN
QUEUE_ENTRY IN PROCEDURE REQUEUE_WRITE
      9367**DCL      9375<<ASSIGN   9378<>CALL
READ_8K IN PROCEDURE READ_WRITE_8K
      9663**DCL      9775<>CALL
READ_8K.BUF_.BOUND IN PROCEDURE READ_WRITE_8K
      9665**DCL      9773<<ASSIGN
READ_8K.BUF_.BUF$ IN PROCEDURE READ_WRITE_8K
      9666**DCL      9774<<ASSIGN
READ_8K.STATION_ IN PROCEDURE READ_WRITE_8K
      9666**DCL      9667--REDEF
READ_8K.V IN PROCEDURE READ_WRITE_8K
      9667**DCL      9663--DCLINIT
READ_8K.V.DVBYTE.REREAD# IN PROCEDURE READ_WRITE_8K
      9678**DCL      9678--REDEF
READ_8K.V.INDX# IN PROCEDURE READ_WRITE_8K
      9676**DCL      9676--REDEF
READ_WRITE_8K IN PROCEDURE TOG$MME_GEINOS
      9641**PROC     9131--CALL
REGS IN PROCEDURE SET_GELBAR_REGS
      9941**DCL      9947>>ASSIGN
REGS$ IN PROCEDURE SET_GELBAR_REGS
      9940**DCL      9946<<ASSIGN   9947>>ASSIGN
REQUEST_TYPE IN PROCEDURE REQUEUE_WRITE
      9368**DCL      9376<<ASSIGN   9378<>CALL
PL6.E3A0      #001=TOG$GCOS_MMES File=TOG$GCOS_MMES.:E05TSI                      WED 07/30/97 06:24 Page:165  
REQUEUE_WRITE IN PROCEDURE TOG$MME_GEINOS
      9359**PROC     9335--CALL
RETURN_DELTA
      8530**DCL        29--PROC     8951<>CALL     8953<>CALL     8956<>CALL     8958<>CALL
RETURN_DELTA IN PROCEDURE TOG$MME_CLEARQ
      8975**DCL      8973--PROC     8987<<ASSIGN
RETURN_DELTA IN PROCEDURE TOG$MME_GEENDC
      9044**DCL      9042--PROC
RETURN_DELTA IN PROCEDURE TOG$MME_GEINOS
      9116**DCL      9087--PROC     9200<<ASSIGN   9282<<ASSIGN   9347<<ASSIGN   9593<<ASSIGN   9790<<ASSIGN
RETURN_DELTA IN PROCEDURE TOG$MME_GELBAR
      9890**DCL      9879--PROC
SAVE_GEINOS_DATA IN PROCEDURE TOG$MME_GEINOS
      9396**PROC     9191--CALL     9267--CALL
SDIA_MME_W2.KEY_DCW_ADDR IN PROCEDURE TOG$MME_GEINOS
      9100**DCL      9766>>ASSIGN
SDIA_MME_W3.DV_CMD IN PROCEDURE TOG$MME_GEINOS
      9106**DCL      9771>>IF       9777>>IF
SDIA_MME_W4.DATA_DCW_ADDR IN PROCEDURE TOG$MME_GEINOS
      9111**DCL      9769>>ASSIGN
SDIA_MME_W5.STATUS_ADDR IN PROCEDURE TOG$MME_GEINOS
      9114**DCL      9787>>ASSIGN
SERVICE_CODE IN PROCEDURE REQUEUE_WRITE
      9369**DCL      9377<<ASSIGN   9378<>CALL
SET_GELBAR_REGS IN PROCEDURE TOG$MME_GELBAR
      9938**PROC     9900--CALL
SET_GELBAR_TIMER IN PROCEDURE TOG$MME_GELBAR
      9967**PROC     9901--CALL
STATUS.W1 IN PROCEDURE DO_SPECIAL_ISC_READ
      9253**DCL      9279<<ASSIGN
STATUS.W2.DCW_RESIDUE IN PROCEDURE DO_SPECIAL_ISC_READ
      9256**DCL      9280<<ASSIGN
STATUS.W1 IN PROCEDURE READ_WRITE_8K
      9761**DCL      9788<<ASSIGN
STATUS.W2 IN PROCEDURE READ_WRITE_8K
      9762**DCL      9789<<ASSIGN
PL6.E3A0      #001=TOG$GCOS_MMES File=TOG$GCOS_MMES.:E05TSI                      WED 07/30/97 06:24 Page:166  
STATUS.W1 IN PROCEDURE STORE_CLEARQ_ISC_STATUS
      8995**DCL      9008<<ASSIGN
STATUS.W2.DCW_RESIDUE IN PROCEDURE STORE_CLEARQ_ISC_STATUS
      8999**DCL      9009<<ASSIGN
STATUS.W1 IN PROCEDURE STORE_ISC_STATUS
      9479**DCL      9492<<ASSIGN
STATUS.W2.DCW_RESIDUE IN PROCEDURE STORE_ISC_STATUS
      9483**DCL      9493<<ASSIGN
STATUS$ IN PROCEDURE DO_SPECIAL_ISC_READ
      9257**DCL      9278<<ASSIGN   9279>>ASSIGN   9280>>ASSIGN
STATUS$ IN PROCEDURE READ_WRITE_8K
      9759**DCL      9787<<ASSIGN   9788>>ASSIGN   9789>>ASSIGN
STATUS$ IN PROCEDURE STORE_CLEARQ_ISC_STATUS
      9000**DCL      9007<<ASSIGN   9008>>ASSIGN   9009>>ASSIGN
STATUS$ IN PROCEDURE STORE_ISC_STATUS
      9484**DCL      9491<<ASSIGN   9492>>ASSIGN   9493>>ASSIGN
STIMER_FPT
      8580**DCL      9907<>CALL
STIMER_FPT.V
      8580**DCL      8580--DCLINIT
STIMER_FPT.V.UNITS#
      8581**DCL      9972<<ASSIGN
STORE_CLEARQ_ISC_STATUS IN PROCEDURE TOG$MME_CLEARQ
      8992**PROC     8981--CALL
STORE_ISC_STATUS IN PROCEDURE TOG$MME_GEINOS
      9476**PROC     9196--CALL     9272--CALL     9342--CALL
TOD$DISPATCHER
      8915**DCL-ENT  9378--CALL
TOD$SPA.WD11 IN PROCEDURE FIX_GELBAR_SPA
     10004**DCL     10007--REDEF
TOD$SPA.WD17 IN PROCEDURE FIX_GELBAR_SPA
     10013**DCL     10048<<ASSIGN
TOD$SPA.WD18 IN PROCEDURE FIX_GELBAR_SPA
     10014**DCL     10017--REDEF
TOD$SPA.WD18_ IN PROCEDURE FIX_GELBAR_SPA
     10017**DCL     10049<<ASSIGN
PL6.E3A0      #001=TOG$GCOS_MMES File=TOG$GCOS_MMES.:E05TSI                      WED 07/30/97 06:24 Page:167  
TOD$SPA.WD22.HREG_BUF_ IN PROCEDURE FIX_GELBAR_SPA
     10022**DCL     10023--REDEF
TOD$SPA.WD25.BAR.BASE IN PROCEDURE FIX_GELBAR_SPA
     10031**DCL     10050<<ASSIGN
TOD$SPA.WD25.BAR.BOUNDS IN PROCEDURE FIX_GELBAR_SPA
     10032**DCL     10051<<ASSIGN
TOD$SPA.WD25.FAULT IN PROCEDURE FIX_GELBAR_SPA
     10034**DCL     10052<<ASSIGN
TOD$SPA.WD25.FAULT_TYPE IN PROCEDURE FIX_GELBAR_SPA
     10042**DCL     10053<<ASSIGN
TOD$SPA$
      8710**DCL     10002--IMP-PTR 10048>>ASSIGN  10049>>ASSIGN  10050>>ASSIGN  10051>>ASSIGN  10052>>ASSIGN
     10053>>ASSIGN
TOF$BAR.CURRENT.BASE
      8722**DCL      9952<<ASSIGN
TOF$BAR.CURRENT.SIZE
      8724**DCL      9953<<ASSIGN
TOF$BAR.GELBAR_MODE
      8731**DCL      9899<<ASSIGN
TOF$FAULTS
      8914**DCL-ENT  8580--DCLINIT
TOF$GELBAR_ADDRESS_REGS
      8734**DCL      9948<<ASSIGN
TOF$GELBAR_EIS_REGS
      8735**DCL      9949<<ASSIGN
TOF$GELBAR_IC.IC
      8741**DCL      9951<<ASSIGN  10134>>ASSIGN
TOF$GELBAR_INDICATORS.I
      8739**DCL      9950<<ASSIGN
TOF$GELBAR_REGISTERS
      8736**DCL      9947<<ASSIGN
TOF$ISR_VECTOR
      8744**DCL     10108<<ASSIGN  10122--DCLINIT
TOF$SISR_RV
      8745**DCL      9909>>UNWIND
TOG$MME_CLEARQ
PL6.E3A0      #001=TOG$GCOS_MMES File=TOG$GCOS_MMES.:E05TSI                      WED 07/30/97 06:24 Page:168  
      8973**PROC     8958--CALL
TOG$MME_GEENDC
      9042**PROC     8951--CALL
TOG$MME_GEINOS
      9087**PROC     8953--CALL
TOG$MME_GELBAR
      9879**PROC     8956--CALL
TOG_ERROR_CODE
      8672**DCL      9134<>CALL     9188<>CALL     9264<>CALL     9785<>CALL
TOG_ERROR_CODE.ERR#
      8702**DCL      9133<<ASSIGN   9187<<ASSIGN   9263<<ASSIGN   9784<<ASSIGN
TOK$CC_RETURN
      8746**DCL      9049>>UNWIND
TOK$COURTESY_CALL
      8916**DCL-ENT  9025--CALL     9520--CALL
TOQ$DCP.BR.ADDRESS
      8775**DCL     10133<<ASSIGN
TOQ$DCP.BR.IC
      8776**DCL     10134<<ASSIGN
TOQ$DCP.PF.ENABLED
      8758**DCL     10130>>IF
TOQ$DCP.PF.REASON
      8765**DCL     10132<<ASSIGN
TOQ$DEBUG
      8919**DCL-ENT 10135--CALL
TOT$BCD_ASCII
      8917**DCL-ENT  9591--CALL
TOT$CONSOLE_OUT
      8918**DCL-ENT  9626--CALL
TOT$ECP.ISC.READ_OUT
      8798**DCL      8979>>IF       8983<<ASSIGN   9185>>IF       9199<<ASSIGN   9261>>IF       9338>>IF
      9340<<ASSIGN
TOT$ECP.ISC.WRITE_OUT
      8800**DCL      9192>>IF       9194<<ASSIGN   9268>>IF       9270<<ASSIGN   9334>>IF       9345<<ASSIGN
TOT$ECP.SUBEXEC.CURRENT
      8809**DCL      9905>>IF       9905>>IF
PL6.E3A0      #001=TOG$GCOS_MMES File=TOG$GCOS_MMES.:E05TSI                      WED 07/30/97 06:24 Page:169  
TOT$ECP.TEST_REQ
      8789**DCL      8791--REDEF
TOX$ERROR
      8920**DCL-ENT  9134--CALL     9188--CALL     9264--CALL     9785--CALL     9794--CALL
WRITE_8K IN PROCEDURE READ_WRITE_8K
      9706**DCL      9781<>CALL
WRITE_8K.BUF_.BOUND IN PROCEDURE READ_WRITE_8K
      9706**DCL      9779<<ASSIGN
WRITE_8K.BUF_.BUF$ IN PROCEDURE READ_WRITE_8K
      9708**DCL      9780<<ASSIGN
WRITE_8K.STATION_ IN PROCEDURE READ_WRITE_8K
      9708**DCL      9708--REDEF
WRITE_8K.V IN PROCEDURE READ_WRITE_8K
      9709**DCL      9706--DCLINIT
WRITE_8K.V.DVBYTE.VFC# IN PROCEDURE READ_WRITE_8K
      9715**DCL      9715--REDEF
PL6.E3A0      #001=TOG$GCOS_MMES File=TOG$GCOS_MMES.:E05TSI                      WED 07/30/97 06:24 Page:170  
              *** CROSS REFERENCE LISTING ***
    **     DENOTES     IDENTIFIER DEFINITION
    <<                 IDENTIFIER'S VALUE SET
    >>                 IDENTIFIER'S VALUE USED
    <>                 IDENTIFIER SET AND/OR USED
    --                 IDENTIFIER REFERENCED
PL6.E3A0      #001=TOG$GCOS_MMES File=TOG$GCOS_MMES.:E05TSI                      WED 07/30/97 06:24 Page:171  
              FULL UREF LISTING

B$ALT
      8558**DCL
B$ALT.BRKCNT
      8559**DCL
B$ALT.DCB#
      8559**DCL
B$ALT.ERR.CODE
      8560**DCL
B$ALT.ERR.FCG
      8560**DCL
B$ALT.ERR.MID
      8560**DCL
B$ALT.ERR.MON
      8560**DCL
B$ALT.ERR.SEV
      8560**DCL
B$ALT.EVSC
      8559**DCL
B$ALT.FPT
      8558**DCL
B$ALT.FPT.FCG
      8558**DCL
B$ALT.FPT.PMME
      8558**DCL
B$ALT.P#
      8562**DCL
B$ALT.SSFRAME
      8558**DCL
B$ALT.SUBC
      8559**DCL
B$EXCFR
      8536**DCL
PL6.E3A0      #001=TOG$GCOS_MMES File=TOG$GCOS_MMES.:E05TSI                      WED 07/30/97 06:24 Page:172  
B$EXCFR.ALTEMPTY
      8536**DCL
B$EXCFR.ASLIC
      8536**DCL
B$EXCFR.ASR
      8542**DCL
B$EXCFR.ASR.BASE
      8543**DCL
B$EXCFR.ASR.BOUND
      8542**DCL
B$EXCFR.ASR.FLAGS
      8542**DCL
B$EXCFR.ASR.FLAGS.BOUND
      8543**DCL
B$EXCFR.ASR.FLAGS.CACHE
      8543**DCL
B$EXCFR.ASR.FLAGS.EXU
      8543**DCL
B$EXCFR.ASR.FLAGS.MON
      8543**DCL
B$EXCFR.ASR.FLAGS.PRIV
      8543**DCL
B$EXCFR.ASR.FLAGS.READ
      8542**DCL
B$EXCFR.ASR.FLAGS.SAVE
      8542**DCL
B$EXCFR.ASR.FLAGS.SEGMENT
      8543**DCL
B$EXCFR.ASR.FLAGS.WRITE
      8542**DCL
B$EXCFR.ASR.TYPE
      8543**DCL
B$EXCFR.ASR.WSR
      8543**DCL
B$EXCFR.BRKCNT
      8550**DCL
PL6.E3A0      #001=TOG$GCOS_MMES File=TOG$GCOS_MMES.:E05TSI                      WED 07/30/97 06:24 Page:173  
B$EXCFR.CODE
      8549**DCL
B$EXCFR.CP#
      8539**DCL
B$EXCFR.DCB#
      8549**DCL
B$EXCFR.DRS
      8547**DCL
B$EXCFR.DSAR
      8540**DCL
B$EXCFR.ECC
      8536**DCL
B$EXCFR.ERR
      8550**DCL
B$EXCFR.ERR.CODE
      8550**DCL
B$EXCFR.ERR.FCG
      8550**DCL
B$EXCFR.ERR.MID
      8550**DCL
B$EXCFR.ERR.MON
      8550**DCL
B$EXCFR.ERR.SEV
      8551**DCL
B$EXCFR.EVSC
      8548**DCL
B$EXCFR.EWSQ#
      8540**DCL
B$EXCFR.FCODE
      8539**DCL
B$EXCFR.FI
      8539**DCL
B$EXCFR.FPT
      8549**DCL
B$EXCFR.FPT.FCG
      8549**DCL
PL6.E3A0      #001=TOG$GCOS_MMES File=TOG$GCOS_MMES.:E05TSI                      WED 07/30/97 06:24 Page:174  
B$EXCFR.FPT.PMME
      8549**DCL
B$EXCFR.IC
      8537**DCL
B$EXCFR.INST
      8537**DCL
B$EXCFR.INST.EVEN
      8537**DCL
B$EXCFR.INST.ODD
      8537**DCL
B$EXCFR.IRBIT
      8537**DCL
B$EXCFR.IRBIT.CARRY
      8538**DCL
B$EXCFR.IRBIT.EXOF
      8538**DCL
B$EXCFR.IRBIT.EXUF
      8538**DCL
B$EXCFR.IRBIT.EXUFM
      8539**DCL
B$EXCFR.IRBIT.HEX
      8539**DCL
B$EXCFR.IRBIT.MIR
      8538**DCL
B$EXCFR.IRBIT.MM
      8538**DCL
B$EXCFR.IRBIT.NEG
      8537**DCL
B$EXCFR.IRBIT.OF
      8538**DCL
B$EXCFR.IRBIT.OFM
      8538**DCL
B$EXCFR.IRBIT.PE
      8538**DCL
B$EXCFR.IRBIT.PM
      8538**DCL
PL6.E3A0      #001=TOG$GCOS_MMES File=TOG$GCOS_MMES.:E05TSI                      WED 07/30/97 06:24 Page:175  
B$EXCFR.IRBIT.TR
      8538**DCL
B$EXCFR.IRBIT.TRC
      8538**DCL
B$EXCFR.IRBIT.ZERO
      8537**DCL
B$EXCFR.ISR
      8540**DCL
B$EXCFR.ISR.BASE
      8542**DCL
B$EXCFR.ISR.BOUND
      8540**DCL
B$EXCFR.ISR.FLAGS
      8540**DCL
B$EXCFR.ISR.FLAGS.BOUND
      8541**DCL
B$EXCFR.ISR.FLAGS.CACHE
      8541**DCL
B$EXCFR.ISR.FLAGS.EXU
      8541**DCL
B$EXCFR.ISR.FLAGS.MON
      8541**DCL
B$EXCFR.ISR.FLAGS.PRIV
      8541**DCL
B$EXCFR.ISR.FLAGS.READ
      8541**DCL
B$EXCFR.ISR.FLAGS.SAVE
      8541**DCL
B$EXCFR.ISR.FLAGS.SEGMENT
      8541**DCL
B$EXCFR.ISR.FLAGS.WRITE
      8541**DCL
B$EXCFR.ISR.TYPE
      8542**DCL
B$EXCFR.ISR.WSR
      8542**DCL
PL6.E3A0      #001=TOG$GCOS_MMES File=TOG$GCOS_MMES.:E05TSI                      WED 07/30/97 06:24 Page:176  
B$EXCFR.IS_SEGID
      8540**DCL
B$EXCFR.LSR
      8544**DCL
B$EXCFR.LSR.BASE
      8545**DCL
B$EXCFR.LSR.BOUND
      8544**DCL
B$EXCFR.LSR.FLAGS
      8544**DCL
B$EXCFR.LSR.FLAGS.BOUND
      8545**DCL
B$EXCFR.LSR.FLAGS.CACHE
      8544**DCL
B$EXCFR.LSR.FLAGS.EXU
      8544**DCL
B$EXCFR.LSR.FLAGS.MON
      8544**DCL
B$EXCFR.LSR.FLAGS.PRIV
      8544**DCL
B$EXCFR.LSR.FLAGS.READ
      8544**DCL
B$EXCFR.LSR.FLAGS.SAVE
      8544**DCL
B$EXCFR.LSR.FLAGS.SEGMENT
      8545**DCL
B$EXCFR.LSR.FLAGS.WRITE
      8544**DCL
B$EXCFR.LSR.TYPE
      8545**DCL
B$EXCFR.LSR.WSR
      8545**DCL
B$EXCFR.P#
      8551**DCL
B$EXCFR.PSR
      8545**DCL
PL6.E3A0      #001=TOG$GCOS_MMES File=TOG$GCOS_MMES.:E05TSI                      WED 07/30/97 06:24 Page:177  
B$EXCFR.PSR.BASE
      8547**DCL
B$EXCFR.PSR.BOUND
      8545**DCL
B$EXCFR.PSR.FLAGS
      8545**DCL
B$EXCFR.PSR.FLAGS.BOUND
      8546**DCL
B$EXCFR.PSR.FLAGS.CACHE
      8546**DCL
B$EXCFR.PSR.FLAGS.EXU
      8546**DCL
B$EXCFR.PSR.FLAGS.MON
      8546**DCL
B$EXCFR.PSR.FLAGS.PRIV
      8546**DCL
B$EXCFR.PSR.FLAGS.READ
      8545**DCL
B$EXCFR.PSR.FLAGS.SAVE
      8546**DCL
B$EXCFR.PSR.FLAGS.SEGMENT
      8546**DCL
B$EXCFR.PSR.FLAGS.WRITE
      8546**DCL
B$EXCFR.PSR.TYPE
      8547**DCL
B$EXCFR.PSR.WSR
      8546**DCL
B$EXCFR.REGS
      8547**DCL
B$EXCFR.REGS.A
      8547**DCL
B$EXCFR.REGS.E
      8548**DCL
B$EXCFR.REGS.Q
      8547**DCL
PL6.E3A0      #001=TOG$GCOS_MMES File=TOG$GCOS_MMES.:E05TSI                      WED 07/30/97 06:24 Page:178  
B$EXCFR.REGS.XREG
      8547**DCL
B$EXCFR.RVA
      8540**DCL
B$EXCFR.SCR
      8540**DCL
B$EXCFR.SSF
      8539**DCL
B$EXCFR.U1
      8548**DCL
B$JIT
       355**DCL
B$JIT.ACCEPT_FLAGS
       508**DCL
B$JIT.ACCEPT_FLAGS.ANNOUNCE
       508**DCL
B$JIT.ACCEPT_FLAGS.BROADCAST
       508**DCL
B$JIT.ACCEPT_FLAGS.SEND
       508**DCL
B$JIT.ACCESS
       628**DCL
B$JIT.ACCESS.FORMS
       628**DCL
B$JIT.ACCESS.PACKS
       628**DCL
B$JIT.ACCESS.TAPES
       628**DCL
B$JIT.ACCN
       360**DCL
B$JIT.APATTR
       633**DCL
B$JIT.ARECX
       628**DCL
B$JIT.BILL
       508**DCL
PL6.E3A0      #001=TOG$GCOS_MMES File=TOG$GCOS_MMES.:E05TSI                      WED 07/30/97 06:24 Page:179  
B$JIT.BLINDACCTNG
       508**DCL
B$JIT.BUDLIM
       497**DCL
B$JIT.CALCNT
       534**DCL
B$JIT.CCARS
       448**DCL
B$JIT.CCBUF
       448**DCL
B$JIT.CCDISP
       448**DCL
B$JIT.CHECK_CFU
       530**DCL
B$JIT.CLRES
       627**DCL
B$JIT.CPFLAGS1
       449**DCL
B$JIT.CPFLAGS1.BRK
       453**DCL
B$JIT.CPFLAGS1.BUFFULL
       453**DCL
B$JIT.CPFLAGS1.CFREAD
       453**DCL
B$JIT.CPFLAGS1.DELTA
       454**DCL
B$JIT.CPFLAGS1.DONTRFEXT3
       450**DCL
B$JIT.CPFLAGS1.DRIBBLE
       452**DCL
B$JIT.CPFLAGS1.ECHO
       453**DCL
B$JIT.CPFLAGS1.ECHO_LINK
       450**DCL
B$JIT.CPFLAGS1.EXIT#
       452**DCL
PL6.E3A0      #001=TOG$GCOS_MMES File=TOG$GCOS_MMES.:E05TSI                      WED 07/30/97 06:24 Page:180  
B$JIT.CPFLAGS1.FIRSTCP
       451**DCL
B$JIT.CPFLAGS1.INITIALIZE
       452**DCL
B$JIT.CPFLAGS1.JSTEP
       449**DCL
B$JIT.CPFLAGS1.KEEPDS
       452**DCL
B$JIT.CPFLAGS1.LASTCP
       451**DCL
B$JIT.CPFLAGS1.LASTCPEXISTS
       451**DCL
B$JIT.CPFLAGS1.LNKPMME
       450**DCL
B$JIT.CPFLAGS1.LOGOFF
       449**DCL
B$JIT.CPFLAGS1.NOTIFY
       452**DCL
B$JIT.CPFLAGS1.PROCACCT
       452**DCL
B$JIT.CPFLAGS1.PROTECT
       453**DCL
B$JIT.CPFLAGS1.RUND
       449**DCL
B$JIT.CPFLAGS1.SCREECH
       453**DCL
B$JIT.CPFLAGS1.SKIPABORT
       452**DCL
B$JIT.CPFLAGS1.SOMENOTIFY
       451**DCL
B$JIT.CPFLAGS1.SSTART
       450**DCL
B$JIT.CPFLAGS1.STARPROC
       451**DCL
B$JIT.CPFLAGS1.STARSACC
       451**DCL
PL6.E3A0      #001=TOG$GCOS_MMES File=TOG$GCOS_MMES.:E05TSI                      WED 07/30/97 06:24 Page:181  
B$JIT.CPFLAGS1.STEPACCT
       453**DCL
B$JIT.CPFLAGS1.STEPLMT
       453**DCL
B$JIT.CPFLAGS1.TESTMODE
       451**DCL
B$JIT.CPFLAGS1.TRMNATE
       452**DCL
B$JIT.CPFLAGS1.WHEN_INPUT
       450**DCL
B$JIT.CPFLAGS1.YC
       449**DCL
B$JIT.CPFLAGS1.YCGET
       450**DCL
B$JIT.CPFLAGS1.YCPMME
       450**DCL
B$JIT.CSLEV
       515**DCL
B$JIT.CTIME
       533**DCL
B$JIT.CURPNUM
       614**DCL
B$JIT.CURRCORE
       522**DCL
B$JIT.CURSUDO
       629**DCL
B$JIT.CURTMPDP
       529**DCL
B$JIT.DCB$
       528**DCL
B$JIT.DCBNO
       441**DCL
B$JIT.DDLL
       518**DCL
B$JIT.DDUL
       518**DCL
PL6.E3A0      #001=TOG$GCOS_MMES File=TOG$GCOS_MMES.:E05TSI                      WED 07/30/97 06:24 Page:182  
B$JIT.DEFEXP
       528**DCL
B$JIT.DEFPRI
       508**DCL
B$JIT.DLL
       518**DCL
B$JIT.DO$
       528**DCL
B$JIT.DUL
       518**DCL
B$JIT.ENQS
       633**DCL
B$JIT.ERR
       360**DCL
B$JIT.ERR.CODE
       361**DCL
B$JIT.ERR.FCG
       360**DCL
B$JIT.ERR.MON
       361**DCL
B$JIT.ERR.SEV
       361**DCL
B$JIT.ERR.UMID
       361**DCL
B$JIT.EUP
       520**DCL
B$JIT.EXTUS
       536**DCL
B$JIT.FACCN
       360**DCL
B$JIT.FACNACS
       528**DCL
B$JIT.FACNCM
       530**DCL
B$JIT.FBUC
       520**DCL
PL6.E3A0      #001=TOG$GCOS_MMES File=TOG$GCOS_MMES.:E05TSI                      WED 07/30/97 06:24 Page:183  
B$JIT.FBUL
       520**DCL
B$JIT.FEXT
       528**DCL
B$JIT.FPSN
       441**DCL
B$JIT.FRS
       556**DCL
B$JIT.GAC
       529**DCL
B$JIT.HIGHPNUM
       614**DCL
B$JIT.HPSN
       528**DCL
B$JIT.IDELTAT
       534**DCL
B$JIT.INSTWORD
       448**DCL
B$JIT.INTER
       627**DCL
B$JIT.INTTIME
       533**DCL
B$JIT.JOBNAME
       509**DCL
B$JIT.JOBUNIT
       449**DCL
B$JIT.JORG
       496**DCL
B$JIT.JPEAK
       522**DCL
B$JIT.JSLEV
       497**DCL
B$JIT.JTMPDPPK
       529**DCL
B$JIT.JUNK
       560**DCL
PL6.E3A0      #001=TOG$GCOS_MMES File=TOG$GCOS_MMES.:E05TSI                      WED 07/30/97 06:24 Page:184  
B$JIT.JUNK2
       614**DCL
B$JIT.LANG
       496**DCL
B$JIT.LBJID
       536**DCL
B$JIT.LLL
       524**DCL
B$JIT.LNKCNT
       560**DCL
B$JIT.LOCK
       509**DCL
B$JIT.LOGONTIME
       497**DCL
B$JIT.LUL
       524**DCL
B$JIT.MAXCORE
       521**DCL
B$JIT.MAXENQ
       633**DCL
B$JIT.MAXEXP
       528**DCL
B$JIT.MAXPRI
       508**DCL
B$JIT.MAXTMPDP
       529**DCL
B$JIT.MMFLGS
       521**DCL
B$JIT.MMFLGS.FREE_PPGS
       521**DCL
B$JIT.MODE
       355**DCL
B$JIT.MOUNTS
       628**DCL
B$JIT.MRT
       534**DCL
PL6.E3A0      #001=TOG$GCOS_MMES File=TOG$GCOS_MMES.:E05TSI                      WED 07/30/97 06:24 Page:185  
B$JIT.MSGID
       509**DCL
B$JIT.MSGID.PRIMARY
       509**DCL
B$JIT.MSGID.XT
       510**DCL
B$JIT.NEXTCC
       502**DCL
B$JIT.NODOEVER
       627**DCL
B$JIT.NOLOEVER
       627**DCL
B$JIT.NOPOEVER
       627**DCL
B$JIT.NUTS
       535**DCL
B$JIT.OLTA
       628**DCL
B$JIT.ORIGINATOR_MODE
       627**DCL
B$JIT.ORIGINATOR_PORT
       630**DCL
B$JIT.ORIGINATOR_PORT.FROM_CR.DEVICE
       631**DCL
B$JIT.ORIGINATOR_PORT.FROM_CR.TNAME
       631**DCL
B$JIT.ORIGINATOR_PORT.FROM_GHOST
       631**DCL
B$JIT.ORIGINATOR_PORT.FROM_GHOST.SYSID
       631**DCL
B$JIT.ORIGINATOR_PORT.FROM_INT
       632**DCL
B$JIT.ORIGINATOR_PORT.FROM_INT.SYSID
       632**DCL
B$JIT.ORIGINATOR_PORT.FROM_INT.TSLINE
       632**DCL
PL6.E3A0      #001=TOG$GCOS_MMES File=TOG$GCOS_MMES.:E05TSI                      WED 07/30/97 06:24 Page:186  
B$JIT.OUTPRIO
       441**DCL
B$JIT.PCADS
       524**DCL
B$JIT.PCC
       519**DCL
B$JIT.PCD
       519**DCL
B$JIT.PCDD
       520**DCL
B$JIT.PCDDS
       523**DCL
B$JIT.PCDS
       519**DCL
B$JIT.PCL
       524**DCL
B$JIT.PCP
       519**DCL
B$JIT.PCROS
       519**DCL
B$JIT.PCV
       524**DCL
B$JIT.PLL
       518**DCL
B$JIT.PMEMTIM
       534**DCL
B$JIT.PMME_COUNT
       632**DCL
B$JIT.PMME_DATA
       632**DCL
B$JIT.PMME_DATA.CPU
       632**DCL
B$JIT.PMME_DATA.I_O
       632**DCL
B$JIT.PMME_DATA.MISC1
       632**DCL
PL6.E3A0      #001=TOG$GCOS_MMES File=TOG$GCOS_MMES.:E05TSI                      WED 07/30/97 06:24 Page:187  
B$JIT.PMME_DATA.MISC2
       633**DCL
B$JIT.PPC
       521**DCL
B$JIT.PPRIV
       416**DCL
B$JIT.PPRIV.CNTRLC
       416**DCL
B$JIT.PPRIV.CNTRLD
       416**DCL
B$JIT.PPRIV.EFT
       416**DCL
B$JIT.PPRIV.EL
       416**DCL
B$JIT.PPRIV.LABEL
       417**DCL
B$JIT.PPRIV.NETCON
       417**DCL
B$JIT.PPRIV.PADMIN
       418**DCL
B$JIT.PPRIV.PIGC
       417**DCL
B$JIT.PPRIV.PIGD
       417**DCL
B$JIT.PPRIV.PIGETTE
       419**DCL
B$JIT.PPRIV.RATES
       418**DCL
B$JIT.PPRIV.REPLAY
       418**DCL
B$JIT.PPRIV.SPIDERC
       417**DCL
B$JIT.PPRIV.SPIDERD
       417**DCL
B$JIT.PPRIV.SUPER
       417**DCL
PL6.E3A0      #001=TOG$GCOS_MMES File=TOG$GCOS_MMES.:E05TSI                      WED 07/30/97 06:24 Page:188  
B$JIT.PPRIV.SUPERAUTH
       417**DCL
B$JIT.PPRIV.SUPERD
       418**DCL
B$JIT.PPRIV.SUPERFORM
       418**DCL
B$JIT.PPRIV.SUPERWSN
       418**DCL
B$JIT.PPRIV.SYSCON
       418**DCL
B$JIT.PPRIV.VOLINIT
       418**DCL
B$JIT.PRDPRM
       529**DCL
B$JIT.PRFLAGS
       444**DCL
B$JIT.PRFLAGS.COMMENT
       444**DCL
B$JIT.PRFLAGS.CONTINUED
       444**DCL
B$JIT.PRFLAGS.CORRECT
       445**DCL
B$JIT.PRFLAGS.EXPOUND
       445**DCL
B$JIT.PRFLAGS.LIST
       444**DCL
B$JIT.PRFLAGS.LS
       444**DCL
B$JIT.PRFLAGS.NOSCAN
       445**DCL
B$JIT.PRFLAGS.NSSYNTAX
       444**DCL
B$JIT.PRFLAGS.OU
       444**DCL
B$JIT.PRFLAGS.OUTPUT
       444**DCL
PL6.E3A0      #001=TOG$GCOS_MMES File=TOG$GCOS_MMES.:E05TSI                      WED 07/30/97 06:24 Page:189  
B$JIT.PRFLAGS.POINT
       445**DCL
B$JIT.PRFLAGS.POSITION
       445**DCL
B$JIT.PRFLAGS.SI
       444**DCL
B$JIT.PRFLAGS.UI
       444**DCL
B$JIT.PRFLAGS.WHEN
       445**DCL
B$JIT.PRIINC
       535**DCL
B$JIT.PRIOB
       533**DCL
B$JIT.PRIOCORE
       521**DCL
B$JIT.PRIOR_CP
       624**DCL
B$JIT.PRIV
       361**DCL
B$JIT.PRIV.ACTIVE
       361**DCL
B$JIT.PRIV.ACTIVE.ASAVE
       363**DCL
B$JIT.PRIV.ACTIVE.CFEP
       364**DCL
B$JIT.PRIV.ACTIVE.CQ
       364**DCL
B$JIT.PRIV.ACTIVE.DISPJOB
       363**DCL
B$JIT.PRIV.ACTIVE.DOMANE
       362**DCL
B$JIT.PRIV.ACTIVE.EXMM
       365**DCL
B$JIT.PRIV.ACTIVE.EXPM
       364**DCL
PL6.E3A0      #001=TOG$GCOS_MMES File=TOG$GCOS_MMES.:E05TSI                      WED 07/30/97 06:24 Page:190  
B$JIT.PRIV.ACTIVE.FMBLK
       361**DCL
B$JIT.PRIV.ACTIVE.FMDIAG
       362**DCL
B$JIT.PRIV.ACTIVE.FMEFT
       361**DCL
B$JIT.PRIV.ACTIVE.FMREAD
       362**DCL
B$JIT.PRIV.ACTIVE.FMSEC
       362**DCL
B$JIT.PRIV.ACTIVE.GPP
       363**DCL
B$JIT.PRIV.ACTIVE.INTCON
       364**DCL
B$JIT.PRIV.ACTIVE.IOQ
       364**DCL
B$JIT.PRIV.ACTIVE.IOQW
       364**DCL
B$JIT.PRIV.ACTIVE.JIT
       365**DCL
B$JIT.PRIV.ACTIVE.MAXMEM
       365**DCL
B$JIT.PRIV.ACTIVE.MFEP
       364**DCL
B$JIT.PRIV.ACTIVE.MODE
       362**DCL
B$JIT.PRIV.ACTIVE.MSYS
       365**DCL
B$JIT.PRIV.ACTIVE.PM
       364**DCL
B$JIT.PRIV.ACTIVE.SCREECH
       363**DCL
B$JIT.PRIV.ACTIVE.SNAP
       363**DCL
B$JIT.PRIV.ACTIVE.SPCLMM
       365**DCL
PL6.E3A0      #001=TOG$GCOS_MMES File=TOG$GCOS_MMES.:E05TSI                      WED 07/30/97 06:24 Page:191  
B$JIT.PRIV.ACTIVE.SYSACCT
       362**DCL
B$JIT.PRIV.ACTIVE.SYSCON
       363**DCL
B$JIT.PRIV.ACTIVE.SYSLOG
       364**DCL
B$JIT.PRIV.ACTIVE.TND
       364**DCL
B$JIT.PRIV.AUTH
       401**DCL
B$JIT.PRIV.AUTH.ASAVE
       402**DCL
B$JIT.PRIV.AUTH.CFEP
       403**DCL
B$JIT.PRIV.AUTH.CQ
       403**DCL
B$JIT.PRIV.AUTH.DISPJOB
       402**DCL
B$JIT.PRIV.AUTH.DOMANE
       401**DCL
B$JIT.PRIV.AUTH.EXMM
       404**DCL
B$JIT.PRIV.AUTH.EXPM
       403**DCL
B$JIT.PRIV.AUTH.FMBLK
       401**DCL
B$JIT.PRIV.AUTH.FMDIAG
       401**DCL
B$JIT.PRIV.AUTH.FMEFT
       401**DCL
B$JIT.PRIV.AUTH.FMREAD
       401**DCL
B$JIT.PRIV.AUTH.FMSEC
       401**DCL
B$JIT.PRIV.AUTH.GPP
       403**DCL
PL6.E3A0      #001=TOG$GCOS_MMES File=TOG$GCOS_MMES.:E05TSI                      WED 07/30/97 06:24 Page:192  
B$JIT.PRIV.AUTH.INTCON
       403**DCL
B$JIT.PRIV.AUTH.IOQ
       403**DCL
B$JIT.PRIV.AUTH.IOQW
       403**DCL
B$JIT.PRIV.AUTH.JIT
       404**DCL
B$JIT.PRIV.AUTH.MAXMEM
       404**DCL
B$JIT.PRIV.AUTH.MFEP
       403**DCL
B$JIT.PRIV.AUTH.MODE
       401**DCL
B$JIT.PRIV.AUTH.MSYS
       404**DCL
B$JIT.PRIV.AUTH.PM
       404**DCL
B$JIT.PRIV.AUTH.SCREECH
       402**DCL
B$JIT.PRIV.AUTH.SNAP
       402**DCL
B$JIT.PRIV.AUTH.SPCLMM
       404**DCL
B$JIT.PRIV.AUTH.SYSACCT
       401**DCL
B$JIT.PRIV.AUTH.SYSCON
       402**DCL
B$JIT.PRIV.AUTH.SYSLOG
       403**DCL
B$JIT.PRIV.AUTH.TND
       404**DCL
B$JIT.PRIV.JOB
       404**DCL
B$JIT.PRIV.JOB.ASAVE
       406**DCL
PL6.E3A0      #001=TOG$GCOS_MMES File=TOG$GCOS_MMES.:E05TSI                      WED 07/30/97 06:24 Page:193  
B$JIT.PRIV.JOB.CFEP
       407**DCL
B$JIT.PRIV.JOB.CQ
       407**DCL
B$JIT.PRIV.JOB.DISPJOB
       406**DCL
B$JIT.PRIV.JOB.DOMANE
       405**DCL
B$JIT.PRIV.JOB.EXMM
       408**DCL
B$JIT.PRIV.JOB.EXPM
       407**DCL
B$JIT.PRIV.JOB.FMBLK
       405**DCL
B$JIT.PRIV.JOB.FMDIAG
       405**DCL
B$JIT.PRIV.JOB.FMEFT
       404**DCL
B$JIT.PRIV.JOB.FMREAD
       405**DCL
B$JIT.PRIV.JOB.FMSEC
       405**DCL
B$JIT.PRIV.JOB.GPP
       406**DCL
B$JIT.PRIV.JOB.INTCON
       407**DCL
B$JIT.PRIV.JOB.IOQ
       407**DCL
B$JIT.PRIV.JOB.IOQW
       407**DCL
B$JIT.PRIV.JOB.JIT
       408**DCL
B$JIT.PRIV.JOB.MAXMEM
       408**DCL
B$JIT.PRIV.JOB.MFEP
       407**DCL
PL6.E3A0      #001=TOG$GCOS_MMES File=TOG$GCOS_MMES.:E05TSI                      WED 07/30/97 06:24 Page:194  
B$JIT.PRIV.JOB.MODE
       405**DCL
B$JIT.PRIV.JOB.MSYS
       408**DCL
B$JIT.PRIV.JOB.PM
       407**DCL
B$JIT.PRIV.JOB.SCREECH
       406**DCL
B$JIT.PRIV.JOB.SNAP
       406**DCL
B$JIT.PRIV.JOB.SPCLMM
       408**DCL
B$JIT.PRIV.JOB.SYSACCT
       405**DCL
B$JIT.PRIV.JOB.SYSCON
       406**DCL
B$JIT.PRIV.JOB.SYSLOG
       407**DCL
B$JIT.PRIV.JOB.TND
       408**DCL
B$JIT.PRIV.PRC
       408**DCL
B$JIT.PRIV.PRC.ASAVE
       410**DCL
B$JIT.PRIV.PRC.CFEP
       411**DCL
B$JIT.PRIV.PRC.CQ
       411**DCL
B$JIT.PRIV.PRC.DISPJOB
       410**DCL
B$JIT.PRIV.PRC.DOMANE
       409**DCL
B$JIT.PRIV.PRC.EXMM
       412**DCL
B$JIT.PRIV.PRC.EXPM
       411**DCL
PL6.E3A0      #001=TOG$GCOS_MMES File=TOG$GCOS_MMES.:E05TSI                      WED 07/30/97 06:24 Page:195  
B$JIT.PRIV.PRC.FMBLK
       408**DCL
B$JIT.PRIV.PRC.FMDIAG
       409**DCL
B$JIT.PRIV.PRC.FMEFT
       408**DCL
B$JIT.PRIV.PRC.FMREAD
       409**DCL
B$JIT.PRIV.PRC.FMSEC
       409**DCL
B$JIT.PRIV.PRC.GPP
       410**DCL
B$JIT.PRIV.PRC.INTCON
       411**DCL
B$JIT.PRIV.PRC.IOQ
       411**DCL
B$JIT.PRIV.PRC.IOQW
       411**DCL
B$JIT.PRIV.PRC.JIT
       412**DCL
B$JIT.PRIV.PRC.MAXMEM
       412**DCL
B$JIT.PRIV.PRC.MFEP
       411**DCL
B$JIT.PRIV.PRC.MODE
       409**DCL
B$JIT.PRIV.PRC.MSYS
       412**DCL
B$JIT.PRIV.PRC.PM
       411**DCL
B$JIT.PRIV.PRC.SCREECH
       410**DCL
B$JIT.PRIV.PRC.SNAP
       410**DCL
B$JIT.PRIV.PRC.SPCLMM
       412**DCL
PL6.E3A0      #001=TOG$GCOS_MMES File=TOG$GCOS_MMES.:E05TSI                      WED 07/30/97 06:24 Page:196  
B$JIT.PRIV.PRC.SYSACCT
       409**DCL
B$JIT.PRIV.PRC.SYSCON
       410**DCL
B$JIT.PRIV.PRC.SYSLOG
       410**DCL
B$JIT.PRIV.PRC.TND
       411**DCL
B$JIT.PRIV.SAVED
       412**DCL
B$JIT.PRIV.SAVED.ASAVE
       414**DCL
B$JIT.PRIV.SAVED.CFEP
       415**DCL
B$JIT.PRIV.SAVED.CQ
       415**DCL
B$JIT.PRIV.SAVED.DISPJOB
       414**DCL
B$JIT.PRIV.SAVED.DOMANE
       413**DCL
B$JIT.PRIV.SAVED.EXMM
       416**DCL
B$JIT.PRIV.SAVED.EXPM
       415**DCL
B$JIT.PRIV.SAVED.FMBLK
       412**DCL
B$JIT.PRIV.SAVED.FMDIAG
       413**DCL
B$JIT.PRIV.SAVED.FMEFT
       412**DCL
B$JIT.PRIV.SAVED.FMREAD
       413**DCL
B$JIT.PRIV.SAVED.FMSEC
       412**DCL
B$JIT.PRIV.SAVED.GPP
       414**DCL
PL6.E3A0      #001=TOG$GCOS_MMES File=TOG$GCOS_MMES.:E05TSI                      WED 07/30/97 06:24 Page:197  
B$JIT.PRIV.SAVED.INTCON
       415**DCL
B$JIT.PRIV.SAVED.IOQ
       415**DCL
B$JIT.PRIV.SAVED.IOQW
       415**DCL
B$JIT.PRIV.SAVED.JIT
       415**DCL
B$JIT.PRIV.SAVED.MAXMEM
       416**DCL
B$JIT.PRIV.SAVED.MFEP
       415**DCL
B$JIT.PRIV.SAVED.MODE
       413**DCL
B$JIT.PRIV.SAVED.MSYS
       416**DCL
B$JIT.PRIV.SAVED.PM
       415**DCL
B$JIT.PRIV.SAVED.SCREECH
       414**DCL
B$JIT.PRIV.SAVED.SNAP
       414**DCL
B$JIT.PRIV.SAVED.SPCLMM
       416**DCL
B$JIT.PRIV.SAVED.SYSACCT
       413**DCL
B$JIT.PRIV.SAVED.SYSCON
       414**DCL
B$JIT.PRIV.SAVED.SYSLOG
       414**DCL
B$JIT.PRIV.SAVED.TND
       415**DCL
B$JIT.PROG_ENTRY
       510**DCL
B$JIT.PROMPTS
       509**DCL
PL6.E3A0      #001=TOG$GCOS_MMES File=TOG$GCOS_MMES.:E05TSI                      WED 07/30/97 06:24 Page:198  
B$JIT.PSEUDOPGS
       523**DCL
B$JIT.PSEUDO_COUNT
       624**DCL
B$JIT.PSEUDO_TEXT
       624**DCL
B$JIT.PSLEV
       497**DCL
B$JIT.PTSIZ
       524**DCL
B$JIT.PUL
       518**DCL
B$JIT.QUAN
       533**DCL
B$JIT.REMCPO
       633**DCL
B$JIT.REMDO
       633**DCL
B$JIT.REMLO
       633**DCL
B$JIT.RERUN
       535**DCL
B$JIT.RESCORE
       629**DCL
B$JIT.RESPEAK
       523**DCL
B$JIT.RNST
       539**DCL
B$JIT.RUNFLAGS
       556**DCL
B$JIT.SAVEDCB$
       530**DCL
B$JIT.SCHTIME
       533**DCL
B$JIT.SINPUTSZ
       509**DCL
PL6.E3A0      #001=TOG$GCOS_MMES File=TOG$GCOS_MMES.:E05TSI                      WED 07/30/97 06:24 Page:199  
B$JIT.SPEAK
       522**DCL
B$JIT.SRESPEAK
       523**DCL
B$JIT.SSLEV
       497**DCL
B$JIT.STAR
       528**DCL
B$JIT.STAR.DA
       528**DCL
B$JIT.STDLOPGS
       628**DCL
B$JIT.STEPCC
       587**DCL
B$JIT.STEPS
       581**DCL
B$JIT.STEPUNIT
       449**DCL
B$JIT.STIME
       533**DCL
B$JIT.STMPDPPK
       529**DCL
B$JIT.SVLDTF
       601**DCL
B$JIT.SVTUS
       536**DCL
B$JIT.SWITCH
       448**DCL
B$JIT.SYSID
       360**DCL
B$JIT.TMPGAC
       529**DCL
B$JIT.TMPGAC.N
       529**DCL
B$JIT.TMPGAC.TIME
       529**DCL
PL6.E3A0      #001=TOG$GCOS_MMES File=TOG$GCOS_MMES.:E05TSI                      WED 07/30/97 06:24 Page:200  
B$JIT.TPEXT
       534**DCL
B$JIT.TPSVT
       534**DCL
B$JIT.TSLINE.FEX
       629**DCL
B$JIT.TSLINE.LEV
       630**DCL
B$JIT.TSLINE.PORT
       629**DCL
B$JIT.TSLINE.SPEED
       629**DCL
B$JIT.TSLINE.SUBDEVICE
       630**DCL
B$JIT.TSLINE.SUBSUBDEVICE
       630**DCL
B$JIT.TSLINE.TTYP
       630**DCL
B$JIT.TUEXT
       534**DCL
B$JIT.TUSVT
       534**DCL
B$JIT.UMEMTIM
       534**DCL
B$JIT.UNAME
       360**DCL
B$JIT.USER
       360**DCL
B$JIT.USERWORD
       448**DCL
B$JIT.USRDCB
       509**DCL
B$JIT.USRERR
       496**DCL
B$JIT.USRERR.CODE
       496**DCL
PL6.E3A0      #001=TOG$GCOS_MMES File=TOG$GCOS_MMES.:E05TSI                      WED 07/30/97 06:24 Page:201  
B$JIT.USRERR.FCG
       496**DCL
B$JIT.USRERR.MID
       496**DCL
B$JIT.USRERR.MON
       496**DCL
B$JIT.USRERR.SEV
       496**DCL
B$JIT.USRIC
       497**DCL
B$JIT.USRRNST
       496**DCL
B$JIT.UTIMER
       535**DCL
B$JIT.VIRTUAL
       525**DCL
B$JIT.VIRTUAL.DCB#
       525**DCL
B$JIT.WOO
       360**DCL
B$JIT.XCONF
       581**DCL
B$JIT.XLIMFLG
       591**DCL
B$JIT.XTIME
       533**DCL
B$JIT.YC0SZ
       497**DCL
B$JIT.YC2SZ
       515**DCL
B$TCB
      8554**DCL
B$TCB.CURRSZ
      8554**DCL
B$TCB.TCBAVSZ
      8554**DCL
PL6.E3A0      #001=TOG$GCOS_MMES File=TOG$GCOS_MMES.:E05TSI                      WED 07/30/97 06:24 Page:202  
BASE IN PROCEDURE CHECK_GELBAR_DEBUG
     10123**DCL
CONSOLE_FPT
      8603**DCL
CONSOLE_FPT.BUF_.BOUND
      8603**DCL
CONSOLE_FPT.BUF_.BUF$
      8605**DCL
CONSOLE_FPT.IDBUF_
      8605**DCL
CONSOLE_FPT.KEY_
      8603**DCL
CONSOLE_FPT.V
      8606**DCL
CONSOLE_FPT.V.DCB#
      8606**DCL
CONSOLE_FPT.V.DVBYTE
      8611**DCL
CONSOLE_FPT.V.DVBYTE.BIN#
      8612**DCL
CONSOLE_FPT.V.DVBYTE.BP#
      8612**DCL
CONSOLE_FPT.V.DVBYTE.CONT#
      8614**DCL
CONSOLE_FPT.V.DVBYTE.NODAT#
      8613**DCL
CONSOLE_FPT.V.DVBYTE.REREAD#
      8612**DCL
CONSOLE_FPT.V.DVBYTE.RRR#
      8613**DCL
CONSOLE_FPT.V.DVBYTE.TOP#
      8611**DCL
CONSOLE_FPT.V.DVBYTE.TRANS#
      8613**DCL
CONSOLE_FPT.V.EVENT#
      8611**DCL
PL6.E3A0      #001=TOG$GCOS_MMES File=TOG$GCOS_MMES.:E05TSI                      WED 07/30/97 06:24 Page:203  
CONSOLE_FPT.V.FULL#
      8608**DCL
CONSOLE_FPT.V.ID#
      8607**DCL
CONSOLE_FPT.V.IOERROK#
      8610**DCL
CONSOLE_FPT.V.KEYTYPE#
      8610**DCL
CONSOLE_FPT.V.NEWKEY#
      8609**DCL
CONSOLE_FPT.V.NOTIME#
      8609**DCL
CONSOLE_FPT.V.ODFNC#
      8615**DCL
CONSOLE_FPT.V.ONEWKEY#
      8608**DCL
CONSOLE_FPT.V.REWRITE#
      8609**DCL
CONSOLE_FPT.V.SEED#
      8611**DCL
CONSOLE_FPT.V.WAIT#
      8606**DCL
CONSOLE_FPT.V_
      8603**DCL
CRLF_.CR IN PROCEDURE BREAK_MESSAGE
      9601**DCL
CRLF_.LF IN PROCEDURE BREAK_MESSAGE
      9602**DCL
DATA_DCWS IN PROCEDURE READ_WRITE_8K
      9746**DCL
DATA_DCWS.DCW1 IN PROCEDURE READ_WRITE_8K
      9747**DCL
DATA_DCWS.DCW2 IN PROCEDURE READ_WRITE_8K
      9750**DCL
DATA_DCWS.DCW2.ADDRESS IN PROCEDURE READ_WRITE_8K
      9751**DCL
PL6.E3A0      #001=TOG$GCOS_MMES File=TOG$GCOS_MMES.:E05TSI                      WED 07/30/97 06:24 Page:204  
DCW IN PROCEDURE DO_CONSOLE_WRITE
      9558**DCL
DCW IN PROCEDURE MOVE_FROM_TOLTS
      9423**DCL
DCW IN PROCEDURE MOVE_TO_POLTS
      9450**DCL
DCW IN PROCEDURE REQUEUE_WRITE
      9363**DCL
DEL_8K IN PROCEDURE READ_WRITE_8K
      9733**DCL
DEL_8K.IDBUF_ IN PROCEDURE READ_WRITE_8K
      9736**DCL
DEL_8K.KEY_ IN PROCEDURE READ_WRITE_8K
      9733**DCL
DEL_8K.KEY_.BOUND IN PROCEDURE READ_WRITE_8K
      9733**DCL
DEL_8K.KEY_.KEY$ IN PROCEDURE READ_WRITE_8K
      9734**DCL
DEL_8K.LKEY_ IN PROCEDURE READ_WRITE_8K
      9735**DCL
DEL_8K.LKEY_.BOUND IN PROCEDURE READ_WRITE_8K
      9735**DCL
DEL_8K.LKEY_.LKEY$ IN PROCEDURE READ_WRITE_8K
      9736**DCL
DEL_8K.V.ALLDUPS# IN PROCEDURE READ_WRITE_8K
      9738**DCL
DEL_8K.V.BRK# IN PROCEDURE READ_WRITE_8K
      9738**DCL
DEL_8K.V.DCB# IN PROCEDURE READ_WRITE_8K
      9737**DCL
DEL_8K.V.DELALL# IN PROCEDURE READ_WRITE_8K
      9739**DCL
DEL_8K.V.INDX# IN PROCEDURE READ_WRITE_8K
      9737**DCL
DEL_8K.V.RECNUM# IN PROCEDURE READ_WRITE_8K
      9738**DCL
PL6.E3A0      #001=TOG$GCOS_MMES File=TOG$GCOS_MMES.:E05TSI                      WED 07/30/97 06:24 Page:205  
DEL_8K.V_ IN PROCEDURE READ_WRITE_8K
      9733**DCL
GLB_TO IN PROCEDURE TOG$MME_GELBAR
      9893**DCL
ISR_V.FLAGS
      8643**DCL
ISR_V.SEGID
      8648**DCL
ISR_V.V
      8644**DCL
KEY_DCW IN PROCEDURE READ_WRITE_8K
      9754**DCL
LOC1
      8650**DCL
LOC1.BAR
      8651**DCL
M$ACCT
      6140**DCL-ENT
M$ACTIVATE
      6143**DCL-ENT
M$ALIB
      6136**DCL-ENT
M$ASUSER
      6138**DCL-ENT
M$ATTACH
      6145**DCL-ENT
M$BADPP
      6163**DCL-ENT
M$CGCTL
      6144**DCL-ENT
M$CGINFO
      6144**DCL-ENT
M$CHECK
      6125**DCL-ENT
M$CHGUNIT
      6183**DCL-ENT
PL6.E3A0      #001=TOG$GCOS_MMES File=TOG$GCOS_MMES.:E05TSI                      WED 07/30/97 06:24 Page:206  
M$CLOSE
      6123**DCL-ENT
M$CMDVAR
      6192**DCL-ENT
M$CONFIG
      6153**DCL-ENT
M$CORRES
      6128**DCL-ENT
M$CPEXIT
      6137**DCL-ENT
M$CVM
      6161**DCL-ENT
M$CVOL
      6126**DCL-ENT
M$DCLFLD
      6153**DCL-ENT
M$DEACTIVATE
      6143**DCL-ENT
M$DELREC
      6125**DCL-ENT
M$DEQ
      6190**DCL-ENT
M$DETACH
      6145**DCL-ENT
M$DEVICE
      6127**DCL-ENT
M$DISPLAY
      6190**DCL-ENT
M$DISPRES
      6130**DCL-ENT
M$DLIB
      6136**DCL-ENT
M$DRIBBLE
      6153**DCL-ENT
M$DRTN
      6181**DCL-ENT
PL6.E3A0      #001=TOG$GCOS_MMES File=TOG$GCOS_MMES.:E05TSI                      WED 07/30/97 06:24 Page:207  
M$DSUSER
      6138**DCL-ENT
M$EISPACT
      8838**DCL
M$EISPACT.ACCT#
      8855**DCL
M$EISPACT.ACS#
      8866**DCL
M$EISPACT.AFTRBLK
      8889**DCL
M$EISPACT.AGE
      8905**DCL
M$EISPACT.ALTKEYX
      8877**DCL
M$EISPACT.AMFLG
      8884**DCL
M$EISPACT.AMFLG.ACCF
      8884**DCL
M$EISPACT.AMFLG.ACSF
      8885**DCL
M$EISPACT.AMFLG.INSF
      8885**DCL
M$EISPACT.AMFLG.PROF
      8885**DCL
M$EISPACT.AMFLG.SNLF
      8885**DCL
M$EISPACT.AMFLG.USRF
      8885**DCL
M$EISPACT.AMR#
      8860**DCL
M$EISPACT.AMRSETSTA
      8858**DCL
M$EISPACT.ANSISPANSEQ#
      8881**DCL
M$EISPACT.ASN#
      8863**DCL
PL6.E3A0      #001=TOG$GCOS_MMES File=TOG$GCOS_MMES.:E05TSI                      WED 07/30/97 06:24 Page:208  
M$EISPACT.ATTR
      8868**DCL
M$EISPACT.ATTR.APL#
      8869**DCL
M$EISPACT.ATTR.BIN#
      8869**DCL
M$EISPACT.ATTR.DENS#
      8868**DCL
M$EISPACT.ATTR.GRLGL#
      8868**DCL
M$EISPACT.ATTR.LOWERCASE#
      8870**DCL
M$EISPACT.ATTR.NATL#
      8869**DCL
M$EISPACT.ATTR.NOXLATE#
      8869**DCL
M$EISPACT.ATTR.TRANSLGL#
      8869**DCL
M$EISPACT.ATTR.TRUOVRPRT#
      8869**DCL
M$EISPACT.ATTR.UPPERCASE#
      8869**DCL
M$EISPACT.AU#
      8857**DCL
M$EISPACT.AUTHFFLG
      8879**DCL
M$EISPACT.AUTHFFLG.AU#
      8880**DCL
M$EISPACT.AUTHFFLG.AURD#
      8881**DCL
M$EISPACT.AUTHFFLG.CREATE#
      8880**DCL
M$EISPACT.AUTHFFLG.DELF#
      8880**DCL
M$EISPACT.AUTHFFLG.DELR#
      8880**DCL
PL6.E3A0      #001=TOG$GCOS_MMES File=TOG$GCOS_MMES.:E05TSI                      WED 07/30/97 06:24 Page:209  
M$EISPACT.AUTHFFLG.EXEC#
      8880**DCL
M$EISPACT.AUTHFFLG.NOLIST#
      8880**DCL
M$EISPACT.AUTHFFLG.READ#
      8879**DCL
M$EISPACT.AUTHFFLG.REATTR#
      8880**DCL
M$EISPACT.AUTHFFLG.TCTL#
      8881**DCL
M$EISPACT.AUTHFFLG.UPD#
      8880**DCL
M$EISPACT.AUTHFFLG.WNEW#
      8880**DCL
M$EISPACT.BADARS#
      8883**DCL
M$EISPACT.BFR
      8906**DCL
M$EISPACT.BFR.BUFUP
      8906**DCL
M$EISPACT.BFR.BUFX
      8906**DCL
M$EISPACT.BFR.CHNG
      8906**DCL
M$EISPACT.BFR.CVM
      8906**DCL
M$EISPACT.BFR.DA
      8907**DCL
M$EISPACT.BFR.SCRUB
      8906**DCL
M$EISPACT.BFR1
      8907**DCL
M$EISPACT.BFR1.CX
      8908**DCL
M$EISPACT.BFR1.FLAGS
      8907**DCL
PL6.E3A0      #001=TOG$GCOS_MMES File=TOG$GCOS_MMES.:E05TSI                      WED 07/30/97 06:24 Page:210  
M$EISPACT.BFR1.FLAGS.ONE_WORD_HEADER
      8907**DCL
M$EISPACT.BFR1.SIZ
      8908**DCL
M$EISPACT.BLKL#
      8863**DCL
M$EISPACT.BLKLEN
      8896**DCL
M$EISPACT.BLOCKED#
      8862**DCL
M$EISPACT.BOL#
      8865**DCL
M$EISPACT.BUPF
      8845**DCL
M$EISPACT.BUPM#
      8862**DCL
M$EISPACT.BYTESLEFT
      8895**DCL
M$EISPACT.CACHE
      8888**DCL
M$EISPACT.CBUFNUM
      8894**DCL
M$EISPACT.CFU$
      8891**DCL
M$EISPACT.CHAIN#
      8872**DCL
M$EISPACT.CHANTIME#
      8871**DCL
M$EISPACT.CNVRT#
      8859**DCL
M$EISPACT.CODE16$
      8877**DCL
M$EISPACT.COMP#
      8861**DCL
M$EISPACT.CONNCT#
      8871**DCL
PL6.E3A0      #001=TOG$GCOS_MMES File=TOG$GCOS_MMES.:E05TSI                      WED 07/30/97 06:24 Page:211  
M$EISPACT.CONT
      8889**DCL
M$EISPACT.CRECNO
      8895**DCL
M$EISPACT.CRECX
      8894**DCL
M$EISPACT.CSEED
      8895**DCL
M$EISPACT.CTG#
      8860**DCL
M$EISPACT.CTLCMDIN
      8901**DCL
M$EISPACT.CVOL#
      8861**DCL
M$EISPACT.CWORD
      8903**DCL
M$EISPACT.CX
      8903**DCL
M$EISPACT.DBGDCBNO#
      8864**DCL
M$EISPACT.DBGSYSID#
      8864**DCL
M$EISPACT.DCB#
      8881**DCL
M$EISPACT.DCBNAME
      8909**DCL
M$EISPACT.DCBNAME.N
      8909**DCL
M$EISPACT.DCBNAME.S
      8909**DCL
M$EISPACT.DCBNAME.X
      8909**DCL
M$EISPACT.DCT$
      8874**DCL
M$EISPACT.DDEV
      8849**DCL
PL6.E3A0      #001=TOG$GCOS_MMES File=TOG$GCOS_MMES.:E05TSI                      WED 07/30/97 06:24 Page:212  
M$EISPACT.DDEV.CP#
      8849**DCL
M$EISPACT.DDEV.GR#
      8850**DCL
M$EISPACT.DDEV.IC#
      8849**DCL
M$EISPACT.DDEV.LP#
      8849**DCL
M$EISPACT.DDEV.UCOUT#
      8849**DCL
M$EISPACT.DDEV.XEQ#
      8849**DCL
M$EISPACT.DECRYPT
      8900**DCL
M$EISPACT.DENSITY#
      8872**DCL
M$EISPACT.DESC
      8850**DCL
M$EISPACT.DESC.ACTIVE#
      8852**DCL
M$EISPACT.DESC.ARCHIVE#
      8852**DCL
M$EISPACT.DESC.BAD#
      8851**DCL
M$EISPACT.DESC.BUF#
      8851**DCL
M$EISPACT.DESC.BUPM#
      8852**DCL
M$EISPACT.DESC.DELF#
      8851**DCL
M$EISPACT.DESC.FETCH#
      8853**DCL
M$EISPACT.DESC.NBUF#
      8852**DCL
M$EISPACT.DESC.NOLIST#
      8851**DCL
PL6.E3A0      #001=TOG$GCOS_MMES File=TOG$GCOS_MMES.:E05TSI                      WED 07/30/97 06:24 Page:213  
M$EISPACT.DESC.ODSTOW#
      8851**DCL
M$EISPACT.DESC.QS#
      8852**DCL
M$EISPACT.DESC.TERMINATE#
      8853**DCL
M$EISPACT.DESC.TPB#
      8853**DCL
M$EISPACT.DEVADR
      8875**DCL
M$EISPACT.DEVADR.CHAN#
      8875**DCL
M$EISPACT.DEVADR.DVN#
      8875**DCL
M$EISPACT.DEVADR.IOM#
      8875**DCL
M$EISPACT.DISP#
      8863**DCL
M$EISPACT.DQH$
      8874**DCL
M$EISPACT.DVBYTE
      8844**DCL
M$EISPACT.DVBYTE.BIN#
      8844**DCL
M$EISPACT.DVBYTE.TOP#
      8844**DCL
M$EISPACT.DVBYTE.TRANS#
      8844**DCL
M$EISPACT.DVBYTE.VFC#
      8844**DCL
M$EISPACT.DVFC#
      8873**DCL
M$EISPACT.DVTYPE#
      8863**DCL
M$EISPACT.EBCDIC#
      8860**DCL
PL6.E3A0      #001=TOG$GCOS_MMES File=TOG$GCOS_MMES.:E05TSI                      WED 07/30/97 06:24 Page:214  
M$EISPACT.ENQF
      8888**DCL
M$EISPACT.EOMVAL#
      8846**DCL
M$EISPACT.EOMVAL#.VALUE#
      8846**DCL
M$EISPACT.EOMVAL#.VFLG#
      8846**DCL
M$EISPACT.EOP
      8884**DCL
M$EISPACT.EVENT
      8878**DCL
M$EISPACT.EXIST#
      8861**DCL
M$EISPACT.EXPIRE#
      8865**DCL
M$EISPACT.FCD#
      8860**DCL
M$EISPACT.FCI#
      8860**DCL
M$EISPACT.FCN
      8896**DCL
M$EISPACT.FCN.CNT
      8896**DCL
M$EISPACT.FCN.F
      8896**DCL
M$EISPACT.FDCM
      8896**DCL
M$EISPACT.FEPIO
      8904**DCL
M$EISPACT.FEPIO.BPP
      8905**DCL
M$EISPACT.FEPIO.BUFX
      8905**DCL
M$EISPACT.FEPIO.EVENT
      8904**DCL
PL6.E3A0      #001=TOG$GCOS_MMES File=TOG$GCOS_MMES.:E05TSI                      WED 07/30/97 06:24 Page:215  
M$EISPACT.FEPIO.KEYX
      8904**DCL
M$EISPACT.FEPIO.KPP
      8905**DCL
M$EISPACT.FEPIO2
      8908**DCL
M$EISPACT.FEPIO3
      8908**DCL
M$EISPACT.FEPSIZ
      8903**DCL
M$EISPACT.FEPSIZ.BUF
      8903**DCL
M$EISPACT.FEPSIZ.KEY
      8903**DCL
M$EISPACT.FEXT
      8883**DCL
M$EISPACT.FEXTX
      8865**DCL
M$EISPACT.FFLG
      8846**DCL
M$EISPACT.FFLG.AU#
      8848**DCL
M$EISPACT.FFLG.AURD#
      8848**DCL
M$EISPACT.FFLG.CREATE#
      8848**DCL
M$EISPACT.FFLG.DELF#
      8847**DCL
M$EISPACT.FFLG.DELR#
      8846**DCL
M$EISPACT.FFLG.EXEC#
      8848**DCL
M$EISPACT.FFLG.NOLIST#
      8847**DCL
M$EISPACT.FFLG.READ#
      8846**DCL
PL6.E3A0      #001=TOG$GCOS_MMES File=TOG$GCOS_MMES.:E05TSI                      WED 07/30/97 06:24 Page:216  
M$EISPACT.FFLG.REATTR#
      8847**DCL
M$EISPACT.FFLG.TCTL#
      8848**DCL
M$EISPACT.FFLG.UPD#
      8847**DCL
M$EISPACT.FFLG.WNEW#
      8847**DCL
M$EISPACT.FIELDX
      8877**DCL
M$EISPACT.FLPW#
      8838**DCL
M$EISPACT.FMOD
      8884**DCL
M$EISPACT.FPRGX
      8877**DCL
M$EISPACT.FPSTR
      8897**DCL
M$EISPACT.FTAM
      8890**DCL
M$EISPACT.FTAM.CTX
      8890**DCL
M$EISPACT.FTAM.PMME
      8891**DCL
M$EISPACT.FTAM.USR
      8890**DCL
M$EISPACT.FUN#
      8863**DCL
M$EISPACT.GDISP
      8899**DCL
M$EISPACT.GHSTACS#
      8876**DCL
M$EISPACT.GRPOS
      8888**DCL
M$EISPACT.GTYP
      8884**DCL
PL6.E3A0      #001=TOG$GCOS_MMES File=TOG$GCOS_MMES.:E05TSI                      WED 07/30/97 06:24 Page:217  
M$EISPACT.HASH
      8895**DCL
M$EISPACT.IASN
      8902**DCL
M$EISPACT.ID
      8904**DCL
M$EISPACT.ID.DA
      8904**DCL
M$EISPACT.ID.GX
      8904**DCL
M$EISPACT.IFMT
      8900**DCL
M$EISPACT.IGNOREFSN#
      8857**DCL
M$EISPACT.INDX
      8897**DCL
M$EISPACT.IOERROK#
      8858**DCL
M$EISPACT.IORG
      8894**DCL
M$EISPACT.IRRECX
      8882**DCL
M$EISPACT.IWL
      8901**DCL
M$EISPACT.IWL.HDRIWL
      8901**DCL
M$EISPACT.IWL.SEQIWL
      8901**DCL
M$EISPACT.IWL.TABIWL
      8901**DCL
M$EISPACT.JRNLBYPASS#
      8876**DCL
M$EISPACT.KEYL#
      8866**DCL
M$EISPACT.KEYTYPE#
      8878**DCL
PL6.E3A0      #001=TOG$GCOS_MMES File=TOG$GCOS_MMES.:E05TSI                      WED 07/30/97 06:24 Page:218  
M$EISPACT.KEYX#
      8866**DCL
M$EISPACT.KFIELDX
      8878**DCL
M$EISPACT.LASTKEY
      8890**DCL
M$EISPACT.LASTKEY$
      8890**DCL
M$EISPACT.LDCTX
      8875**DCL
M$EISPACT.LDFLG
      8887**DCL
M$EISPACT.LINES#
      8872**DCL
M$EISPACT.LOAD#
      8857**DCL
M$EISPACT.LOGSEC
      8899**DCL
M$EISPACT.LPOOL
      8891**DCL
M$EISPACT.LRDL0#
      8867**DCL
M$EISPACT.LSLIDE#
      8867**DCL
M$EISPACT.LSTAOR#
      8858**DCL
M$EISPACT.LSTBLK
      8889**DCL
M$EISPACT.MAXVOL#
      8871**DCL
M$EISPACT.MEDIA
      8900**DCL
M$EISPACT.MODCNT
      8898**DCL
M$EISPACT.MOUNT
      8886**DCL
PL6.E3A0      #001=TOG$GCOS_MMES File=TOG$GCOS_MMES.:E05TSI                      WED 07/30/97 06:24 Page:219  
M$EISPACT.MOVED
      8902**DCL
M$EISPACT.MPC$
      8874**DCL
M$EISPACT.MUST_CVOL
      8886**DCL
M$EISPACT.NAME#
      8854**DCL
M$EISPACT.NAME#.C17
      8855**DCL
M$EISPACT.NAME#.C17.CC
      8855**DCL
M$EISPACT.NAME#.L
      8854**DCL
M$EISPACT.NEW_FSECT
      8886**DCL
M$EISPACT.OLDIOERR
      8899**DCL
M$EISPACT.OWNER
      8887**DCL
M$EISPACT.PASS#
      8855**DCL
M$EISPACT.PASSF#
      8859**DCL
M$EISPACT.PATH
      8882**DCL
M$EISPACT.PATH.CHAN#
      8882**DCL
M$EISPACT.PATH.IOM#
      8882**DCL
M$EISPACT.PGINGRAN
      8900**DCL
M$EISPACT.PRIVOPN
      8899**DCL
M$EISPACT.PSN#
      8855**DCL
PL6.E3A0      #001=TOG$GCOS_MMES File=TOG$GCOS_MMES.:E05TSI                      WED 07/30/97 06:24 Page:220  
M$EISPACT.QISS#
      8857**DCL
M$EISPACT.RA
      8887**DCL
M$EISPACT.RDL0#
      8845**DCL
M$EISPACT.REALSPAN
      8900**DCL
M$EISPACT.RECL#
      8864**DCL
M$EISPACT.RESNT
      8856**DCL
M$EISPACT.RESNT.NUM
      8856**DCL
M$EISPACT.RESNT.TYP
      8856**DCL
M$EISPACT.RETRYCNT#
      8850**DCL
M$EISPACT.RPOS
      8888**DCL
M$EISPACT.SEED#
      8883**DCL
M$EISPACT.SEGX
      8898**DCL
M$EISPACT.SEQ#
      8873**DCL
M$EISPACT.SEQCOL#
      8873**DCL
M$EISPACT.SEQID#
      8873**DCL
M$EISPACT.SETSTA$
      8853**DCL
M$EISPACT.SEZ_OK
      8886**DCL
M$EISPACT.SHARE#
      8861**DCL
PL6.E3A0      #001=TOG$GCOS_MMES File=TOG$GCOS_MMES.:E05TSI                      WED 07/30/97 06:24 Page:221  
M$EISPACT.SHARED
      8884**DCL
M$EISPACT.SLIDE#
      8845**DCL
M$EISPACT.SPAN
      8887**DCL
M$EISPACT.SPANNED#
      8862**DCL
M$EISPACT.SPARE#
      8867**DCL
M$EISPACT.STARF
      8883**DCL
M$EISPACT.STARTX
      8879**DCL
M$EISPACT.STARX
      8888**DCL
M$EISPACT.STR#
      8898**DCL
M$EISPACT.SYSID#
      8865**DCL
M$EISPACT.TAPTYP
      8892**DCL
M$EISPACT.TAPTYP.CP6F
      8892**DCL
M$EISPACT.TAPTYP.HAVLASTKEY
      8893**DCL
M$EISPACT.TAPTYP.MANAGED
      8893**DCL
M$EISPACT.TAPTYP.NOCVOL
      8893**DCL
M$EISPACT.TAPTYP.PASTFM
      8893**DCL
M$EISPACT.TAPTYP.RWASC
      8892**DCL
M$EISPACT.TAPTYP.USRBUF
      8893**DCL
PL6.E3A0      #001=TOG$GCOS_MMES File=TOG$GCOS_MMES.:E05TSI                      WED 07/30/97 06:24 Page:222  
M$EISPACT.TDALVL
      8891**DCL
M$EISPACT.TDEXTST$
      8854**DCL
M$EISPACT.TDFLG
      8870**DCL
M$EISPACT.TDFLG.SDSK#
      8870**DCL
M$EISPACT.TDSTAT#
      8857**DCL
M$EISPACT.TRNC
      8889**DCL
M$EISPACT.TYC
      8838**DCL
M$EISPACT.TYC.BLNKTP#
      8839**DCL
M$EISPACT.TYC.BOF#
      8839**DCL
M$EISPACT.TYC.BOT#
      8839**DCL
M$EISPACT.TYC.CDALRT#
      8842**DCL
M$EISPACT.TYC.CGCRCW
      8843**DCL
M$EISPACT.TYC.CGCWRV
      8843**DCL
M$EISPACT.TYC.CGFULL
      8843**DCL
M$EISPACT.TYC.CGKEYV
      8842**DCL
M$EISPACT.TYC.CGLWRV
      8842**DCL
M$EISPACT.TYC.DACT#
      8841**DCL
M$EISPACT.TYC.DI#
      8840**DCL
PL6.E3A0      #001=TOG$GCOS_MMES File=TOG$GCOS_MMES.:E05TSI                      WED 07/30/97 06:24 Page:223  
M$EISPACT.TYC.EGV#
      8838**DCL
M$EISPACT.TYC.EOD#
      8840**DCL
M$EISPACT.TYC.EOF#
      8839**DCL
M$EISPACT.TYC.EOT#
      8839**DCL
M$EISPACT.TYC.FRAW#
      8841**DCL
M$EISPACT.TYC.IOERR#
      8840**DCL
M$EISPACT.TYC.LAST#
      8842**DCL
M$EISPACT.TYC.LD#
      8840**DCL
M$EISPACT.TYC.LDISC#
      8841**DCL
M$EISPACT.TYC.MTRAP#
      8840**DCL
M$EISPACT.TYC.OPER#
      8838**DCL
M$EISPACT.TYC.PROT#
      8841**DCL
M$EISPACT.TYC.TIMO#
      8841**DCL
M$EISPACT.TYC.XTRARD
      8842**DCL
M$EISPACT.TYPE#
      8856**DCL
M$EISPACT.UB$
      8897**DCL
M$EISPACT.UBYTES
      8897**DCL
M$EISPACT.UCOUT
      8892**DCL
PL6.E3A0      #001=TOG$GCOS_MMES File=TOG$GCOS_MMES.:E05TSI                      WED 07/30/97 06:24 Page:224  
M$EISPACT.UNIQUEBLD
      8902**DCL
M$EISPACT.UOPT#
      8859**DCL
M$EISPACT.UPDCNT
      8902**DCL
M$EISPACT.VFCCHAR#
      8878**DCL
M$EISPACT.VOL#
      8871**DCL
M$EISPACT.VOLACCESS#
      8858**DCL
M$EISPACT.WAIT
      8889**DCL
M$EISPACT.WCDATA
      8892**DCL
M$EISPACT.WIDTH#
      8850**DCL
M$EISPACT.WRCMP
      8892**DCL
M$EISPACT.WSR#
      8867**DCL
M$EISPACT.XTEND#
      8861**DCL
M$EISPACT.XTNSIZE#
      8866**DCL
M$ENQ
      6189**DCL-ENT
M$EOM
      6148**DCL-ENT
M$ERASE
      6154**DCL-ENT
M$ERR
      6135**DCL-ENT
M$ERRMSG
      6186**DCL-ENT
PL6.E3A0      #001=TOG$GCOS_MMES File=TOG$GCOS_MMES.:E05TSI                      WED 07/30/97 06:24 Page:225  
M$EVENT
      6178**DCL-ENT
M$EXHUME
      6187**DCL-ENT
M$EXIT
      6135**DCL-ENT
M$EXTEND
      6127**DCL-ENT
M$FDP
      6159**DCL-ENT
M$FDS
      6158**DCL-ENT
M$FEBOOT
      6151**DCL-ENT
M$FECTL
      6152**DCL-ENT
M$FEDUMP
      6151**DCL-ENT
M$FID
      6186**DCL-ENT
M$FINDPROC
      6140**DCL-ENT
M$FSUSER
      6138**DCL-ENT
M$FVP
      6160**DCL-ENT
M$FWCG
      6144**DCL-ENT
M$GBPL
      6164**DCL-ENT
M$GDDL
      6160**DCL-ENT
M$GDP
      6159**DCL-ENT
M$GDS
      6158**DCL-ENT
PL6.E3A0      #001=TOG$GCOS_MMES File=TOG$GCOS_MMES.:E05TSI                      WED 07/30/97 06:24 Page:226  
M$GETDCB
      6129**DCL-ENT
M$GETMOUSE
      6169**DCL-ENT
M$GETPM
      6170**DCL-ENT
M$GJOB
      6188**DCL-ENT
M$GLINEATTR
      6148**DCL-ENT
M$GOODPP
      6163**DCL-ENT
M$GPLATEN
      6156**DCL-ENT
M$GPROMPT
      6155**DCL-ENT
M$GTRMATTR
      6149**DCL-ENT
M$GTRMCTL
      6147**DCL-ENT
M$GTRMTAB
      6150**DCL-ENT
M$GVP
      6159**DCL-ENT
M$HELP
      6186**DCL-ENT
M$INT
      6178**DCL-ENT
M$INTRTN
      6139**DCL-ENT
M$IOQ
      6174**DCL-ENT
M$JOBSTATS
      6188**DCL-ENT
M$KEYIN
      6128**DCL-ENT
PL6.E3A0      #001=TOG$GCOS_MMES File=TOG$GCOS_MMES.:E05TSI                      WED 07/30/97 06:24 Page:227  
M$LDEV
      6123**DCL-ENT
M$LDTRC
      6136**DCL-ENT
M$LIMIT
      6129**DCL-ENT
M$LINES
      6128**DCL-ENT
M$LINK
      6135**DCL-ENT
M$MADMUCK
      6131**DCL-ENT
M$MAKUSER
      6162**DCL-ENT
M$MBS
      6130**DCL-ENT
M$MDFFLD
      6154**DCL-ENT
M$MERC
      6179**DCL-ENT
M$MERCS
      6180**DCL-ENT
M$MIRROR
      6174**DCL-ENT
M$MONINFO
      6191**DCL-ENT
M$MPL
      6164**DCL-ENT
M$NODEINFO
      6155**DCL-ENT
M$NXTUSR
      6189**DCL-ENT
M$OCMSG
      6187**DCL-ENT
M$OLAY
      6135**DCL-ENT
PL6.E3A0      #001=TOG$GCOS_MMES File=TOG$GCOS_MMES.:E05TSI                      WED 07/30/97 06:24 Page:228  
M$OPEN
      6123**DCL-ENT
M$PAS
      6164**DCL-ENT
M$PATHCON
      6187**DCL-ENT
M$PDS
      6158**DCL-ENT
M$PFIL
      6125**DCL-ENT
M$PLATEN
      6149**DCL-ENT
M$PRECORD
      6127**DCL-ENT
M$PROCNAME
      6140**DCL-ENT
M$PROFILE
      6151**DCL-ENT
M$PROMPT
      6147**DCL-ENT
M$RACST
      6131**DCL-ENT
M$RDSYSLOG
      6172**DCL-ENT
M$RELDCB
      6129**DCL-ENT
M$RELRES
      6130**DCL-ENT
M$RELSTARF
      6132**DCL-ENT
M$REM
      6132**DCL-ENT
M$RENV
      6179**DCL-ENT
M$REQUIRE
      6131**DCL-ENT
PL6.E3A0      #001=TOG$GCOS_MMES File=TOG$GCOS_MMES.:E05TSI                      WED 07/30/97 06:24 Page:229  
M$RETRY
      6180**DCL-ENT
M$RETRYS
      6180**DCL-ENT
M$REW
      6126**DCL-ENT
M$RLSFLD
      6154**DCL-ENT
M$RPRIV
      6182**DCL-ENT
M$RSPP
      6161**DCL-ENT
M$RSWITCH
      6183**DCL-ENT
M$RUE
      6189**DCL-ENT
M$SAD
      6162**DCL-ENT
M$SAVE
      6138**DCL-ENT
M$SCON
      6139**DCL-ENT
M$SCREECH
      6137**DCL-ENT
M$SENV
      6179**DCL-ENT
M$SETFMA
      6123**DCL-ENT
M$SETFP
      6152**DCL-ENT
M$SINPUT
      6150**DCL-ENT
M$SLCFLD
      6155**DCL-ENT
M$SMOUSE
      6169**DCL-ENT
PL6.E3A0      #001=TOG$GCOS_MMES File=TOG$GCOS_MMES.:E05TSI                      WED 07/30/97 06:24 Page:230  
M$SMPRT
      6161**DCL-ENT
M$SPRIV
      6182**DCL-ENT
M$SSC
      6162**DCL-ENT
M$SSWITCH
      6182**DCL-ENT
M$STATE
      6191**DCL-ENT
M$STD
      6163**DCL-ENT
M$STLPP
      6160**DCL-ENT
M$STRAP
      6177**DCL-ENT
M$STRMATTR
      6149**DCL-ENT
M$STRMCTL
      6147**DCL-ENT
M$STRMTAB
      6150**DCL-ENT
M$SYMBIO
      6188**DCL-ENT
M$SYSCON
      6174**DCL-ENT
M$SYSID
      6192**DCL-ENT
M$TDCLOSE
      6173**DCL-ENT
M$TDIO
      6173**DCL-ENT
M$TDOPEN
      6172**DCL-ENT
M$TDREQCPU
      6173**DCL-ENT
PL6.E3A0      #001=TOG$GCOS_MMES File=TOG$GCOS_MMES.:E05TSI                      WED 07/30/97 06:24 Page:231  
M$TEMPWROC
      6167**DCL-ENT
M$TIME
      6190**DCL-ENT
M$TRAP
      6177**DCL-ENT
M$TRMISC
      6152**DCL-ENT
M$TRMPRG
      6148**DCL-ENT
M$TRTN
      6181**DCL-ENT
M$TRUNC
      6124**DCL-ENT
M$TTIMER
      6177**DCL-ENT
M$UC
      6147**DCL
M$UMPL
      6164**DCL-ENT
M$UNFID
      6186**DCL-ENT
M$UNLATCH
      6143**DCL-ENT
M$UNSHARE
      6140**DCL-ENT
M$USRFIELD
      6183**DCL-ENT
M$VIRTUAL
      6158**DCL-ENT
M$WAIT
      6181**DCL-ENT
M$WEOF
      6126**DCL-ENT
M$WRSYSLOG
      6172**DCL-ENT
PL6.E3A0      #001=TOG$GCOS_MMES File=TOG$GCOS_MMES.:E05TSI                      WED 07/30/97 06:24 Page:232  
M$XCON
      6178**DCL-ENT
M$XCONRTN
      6139**DCL-ENT
M$XEQTIME
      6191**DCL-ENT
M$XFLUSH
      6132**DCL-ENT
M$XMOUSE
      6169**DCL-ENT
M$XXX
      6135**DCL-ENT
M$YC
      6137**DCL-ENT
MME.INST
      8494**DCL
MME.INST.OP
      8496**DCL
MME.WD_6
      8502**DCL
MME_W1 IN PROCEDURE TOG$MME_GEINOS
      9091**DCL
MME_W2 IN PROCEDURE TOG$MME_GEINOS
      9095**DCL
MME_W3 IN PROCEDURE TOG$MME_GEINOS
      9102**DCL
MREG.E
      8524**DCL
MREG.X0
      8514**DCL
MREG.X1
      8515**DCL
MREG.X2
      8516**DCL
MREG.X3
      8517**DCL
PL6.E3A0      #001=TOG$GCOS_MMES File=TOG$GCOS_MMES.:E05TSI                      WED 07/30/97 06:24 Page:233  
MREG.X4
      8518**DCL
MREG.X5
      8519**DCL
MREG.X6
      8520**DCL
MREG.X7
      8521**DCL
MREGA IN PROCEDURE TOG$MME_GELBAR
      9883**DCL
MREGA.CPU# IN PROCEDURE TOG$MME_GELBAR
      9888**DCL
MREGA.DISABLE_CACHE_FLAG IN PROCEDURE TOG$MME_GELBAR
      9886**DCL
MREGA.RESTRICT_CPU_FLAG IN PROCEDURE TOG$MME_GELBAR
      9885**DCL
NO_CPU_ASSIGNED IN PROCEDURE TOG$MME_GELBAR
      9881**DCL
READ_8K.BUF_ IN PROCEDURE READ_WRITE_8K
      9665**DCL
READ_8K.IDBUF_ IN PROCEDURE READ_WRITE_8K
      9667**DCL
READ_8K.KEY_ IN PROCEDURE READ_WRITE_8K
      9663**DCL
READ_8K.KEY_.BOUND IN PROCEDURE READ_WRITE_8K
      9663**DCL
READ_8K.KEY_.KEY$ IN PROCEDURE READ_WRITE_8K
      9664**DCL
READ_8K.V.DCB# IN PROCEDURE READ_WRITE_8K
      9667**DCL
READ_8K.V.DVBYTE IN PROCEDURE READ_WRITE_8K
      9677**DCL
READ_8K.V.DVBYTE.BIN# IN PROCEDURE READ_WRITE_8K
      9678**DCL
READ_8K.V.DVBYTE.BP# IN PROCEDURE READ_WRITE_8K
      9677**DCL
PL6.E3A0      #001=TOG$GCOS_MMES File=TOG$GCOS_MMES.:E05TSI                      WED 07/30/97 06:24 Page:234  
READ_8K.V.DVBYTE.CONT# IN PROCEDURE READ_WRITE_8K
      9680**DCL
READ_8K.V.DVBYTE.NODAT# IN PROCEDURE READ_WRITE_8K
      9679**DCL
READ_8K.V.DVBYTE.TOP# IN PROCEDURE READ_WRITE_8K
      9677**DCL
READ_8K.V.DVBYTE.TRANS# IN PROCEDURE READ_WRITE_8K
      9679**DCL
READ_8K.V.DVBYTE.VFC# IN PROCEDURE READ_WRITE_8K
      9678**DCL
READ_8K.V.EVENT# IN PROCEDURE READ_WRITE_8K
      9676**DCL
READ_8K.V.FULL# IN PROCEDURE READ_WRITE_8K
      9669**DCL
READ_8K.V.ID# IN PROCEDURE READ_WRITE_8K
      9668**DCL
READ_8K.V.IDS# IN PROCEDURE READ_WRITE_8K
      9669**DCL
READ_8K.V.IOERROK# IN PROCEDURE READ_WRITE_8K
      9670**DCL
READ_8K.V.KEYCHNG# IN PROCEDURE READ_WRITE_8K
      9669**DCL
READ_8K.V.KEYR# IN PROCEDURE READ_WRITE_8K
      9668**DCL
READ_8K.V.KEYS# IN PROCEDURE READ_WRITE_8K
      9668**DCL
READ_8K.V.KEYTYPE# IN PROCEDURE READ_WRITE_8K
      9676**DCL
READ_8K.V.ODFNC# IN PROCEDURE READ_WRITE_8K
      9681**DCL
READ_8K.V.RECNUM# IN PROCEDURE READ_WRITE_8K
      9681**DCL
READ_8K.V.REREADPOS# IN PROCEDURE READ_WRITE_8K
      9682**DCL
READ_8K.V.SEED# IN PROCEDURE READ_WRITE_8K
      9677**DCL
PL6.E3A0      #001=TOG$GCOS_MMES File=TOG$GCOS_MMES.:E05TSI                      WED 07/30/97 06:24 Page:235  
READ_8K.V.SINPUTSIZE# IN PROCEDURE READ_WRITE_8K
      9681**DCL
READ_8K.V.STRPVFC# IN PROCEDURE READ_WRITE_8K
      9680**DCL
READ_8K.V.WAIT# IN PROCEDURE READ_WRITE_8K
      9667**DCL
READ_8K.V_ IN PROCEDURE READ_WRITE_8K
      9663**DCL
SDIA_MME_W2 IN PROCEDURE TOG$MME_GEINOS
      9098**DCL
SDIA_MME_W2.FILE_ADDR IN PROCEDURE TOG$MME_GEINOS
      9099**DCL
SDIA_MME_W3 IN PROCEDURE TOG$MME_GEINOS
      9105**DCL
SDIA_MME_W4 IN PROCEDURE TOG$MME_GEINOS
      9109**DCL
SDIA_MME_W5 IN PROCEDURE TOG$MME_GEINOS
      9113**DCL
STATUS IN PROCEDURE DO_SPECIAL_ISC_READ
      9252**DCL
STATUS.W2 IN PROCEDURE DO_SPECIAL_ISC_READ
      9254**DCL
STATUS IN PROCEDURE READ_WRITE_8K
      9760**DCL
STATUS IN PROCEDURE STORE_CLEARQ_ISC_STATUS
      8994**DCL
STATUS.W2 IN PROCEDURE STORE_CLEARQ_ISC_STATUS
      8996**DCL
STATUS.W2.LAST_LOC IN PROCEDURE STORE_CLEARQ_ISC_STATUS
      8997**DCL
STATUS IN PROCEDURE STORE_ISC_STATUS
      9478**DCL
STATUS.W2 IN PROCEDURE STORE_ISC_STATUS
      9480**DCL
STATUS.W2.LAST_LOC IN PROCEDURE STORE_ISC_STATUS
      9481**DCL
PL6.E3A0      #001=TOG$GCOS_MMES File=TOG$GCOS_MMES.:E05TSI                      WED 07/30/97 06:24 Page:236  
STIMER_FPT.V.UENTRY#
      8580**DCL
STIMER_FPT.V.UTYPE#
      8581**DCL
STIMER_FPT.V_
      8580**DCL
TOD$SPA IN PROCEDURE FIX_GELBAR_SPA
     10002**DCL
TOD$SPA.WD0_10 IN PROCEDURE FIX_GELBAR_SPA
     10003**DCL
TOD$SPA.WD11.IC IN PROCEDURE FIX_GELBAR_SPA
     10005**DCL
TOD$SPA.WD11.RC IN PROCEDURE FIX_GELBAR_SPA
     10006**DCL
TOD$SPA.WD11_ IN PROCEDURE FIX_GELBAR_SPA
     10007**DCL
TOD$SPA.WD12 IN PROCEDURE FIX_GELBAR_SPA
     10008**DCL
TOD$SPA.WD13 IN PROCEDURE FIX_GELBAR_SPA
     10009**DCL
TOD$SPA.WD14 IN PROCEDURE FIX_GELBAR_SPA
     10010**DCL
TOD$SPA.WD15 IN PROCEDURE FIX_GELBAR_SPA
     10011**DCL
TOD$SPA.WD16 IN PROCEDURE FIX_GELBAR_SPA
     10012**DCL
TOD$SPA.WD18.IC IN PROCEDURE FIX_GELBAR_SPA
     10015**DCL
TOD$SPA.WD18.IR IN PROCEDURE FIX_GELBAR_SPA
     10016**DCL
TOD$SPA.WD19 IN PROCEDURE FIX_GELBAR_SPA
     10018**DCL
TOD$SPA.WD20 IN PROCEDURE FIX_GELBAR_SPA
     10019**DCL
TOD$SPA.WD21 IN PROCEDURE FIX_GELBAR_SPA
     10020**DCL
PL6.E3A0      #001=TOG$GCOS_MMES File=TOG$GCOS_MMES.:E05TSI                      WED 07/30/97 06:24 Page:237  
TOD$SPA.WD22 IN PROCEDURE FIX_GELBAR_SPA
     10021**DCL
TOD$SPA.WD22.HREG_BUF IN PROCEDURE FIX_GELBAR_SPA
     10023**DCL
TOD$SPA.WD22.HREG_BUF.ADDR# IN PROCEDURE FIX_GELBAR_SPA
     10024**DCL
TOD$SPA.WD22.HREG_BUF.RETRY_FLAG IN PROCEDURE FIX_GELBAR_SPA
     10025**DCL
TOD$SPA.WD22.HREG_BUF_SIZE IN PROCEDURE FIX_GELBAR_SPA
     10026**DCL
TOD$SPA.WD23 IN PROCEDURE FIX_GELBAR_SPA
     10027**DCL
TOD$SPA.WD24 IN PROCEDURE FIX_GELBAR_SPA
     10028**DCL
TOD$SPA.WD25 IN PROCEDURE FIX_GELBAR_SPA
     10029**DCL
TOD$SPA.WD25.BAR IN PROCEDURE FIX_GELBAR_SPA
     10030**DCL
TOD$SPA.WD25.DIVIDE IN PROCEDURE FIX_GELBAR_SPA
     10041**DCL
TOD$SPA.WD25.EXP_OVERFLOW IN PROCEDURE FIX_GELBAR_SPA
     10037**DCL
TOD$SPA.WD25.EXP_UNDERFLOW IN PROCEDURE FIX_GELBAR_SPA
     10038**DCL
TOD$SPA.WD25.IPR IN PROCEDURE FIX_GELBAR_SPA
     10039**DCL
TOD$SPA.WD25.OVERFLOW IN PROCEDURE FIX_GELBAR_SPA
     10036**DCL
TOD$SPA.WD26_71 IN PROCEDURE FIX_GELBAR_SPA
     10043**DCL
TOF$BAR
      8720**DCL
TOF$BAR.CURRENT
      8721**DCL
TOF$BAR.FULL
      8726**DCL
PL6.E3A0      #001=TOG$GCOS_MMES File=TOG$GCOS_MMES.:E05TSI                      WED 07/30/97 06:24 Page:238  
TOF$BAR.FULL.BASE
      8727**DCL
TOF$BAR.FULL.SIZE
      8729**DCL
TOF$GELBAR_IC
      8740**DCL
TOF$GELBAR_INDICATORS
      8737**DCL
TOG$GCOS_MMES
        29**PROC
TOG_ERROR_CODE.FCG
      8688**DCL
TOG_ERROR_CODE.MID
      8701**DCL
TOG_ERROR_CODE.MON
      8701**DCL
TOG_ERROR_CODE.SEV
      8702**DCL
TOQ$DCP
      8756**DCL
TOQ$DCP.BR
      8774**DCL
TOQ$DCP.MME
      8777**DCL
TOQ$DCP.PF
      8757**DCL
TOQ$DCP.PF.DEBUG_TOLTS
      8760**DCL
TOQ$DCP.PF.DISP_MMES
      8764**DCL
TOQ$DCP.PF.GELBARRED
      8759**DCL
TOQ$DCP.PF.STOP_AT_SE
      8763**DCL
TOQ$DCP.PF.STOP_ON_GELBARS
      8761**DCL
PL6.E3A0      #001=TOG$GCOS_MMES File=TOG$GCOS_MMES.:E05TSI                      WED 07/30/97 06:24 Page:239  
TOQ$DCP.PF.STOP_ON_IO
      8762**DCL
TOQ$DCP.SE
      8766**DCL
TOQ$DCP.SE.ADDRESS
      8769**DCL
TOQ$DCP.SE.CATALOG
      8768**DCL
TOQ$DCP.SE.EDIT_NAME
      8767**DCL
TOQ$DCP.TP
      8770**DCL
TOQ$DCP.TP.ADDRESS
      8773**DCL
TOQ$DCP.TP.EDIT_NAME
      8772**DCL
TOQ$DCP.TP.GECALL_NAME
      8771**DCL
TOT$ECP
      8788**DCL
TOT$ECP.BOOT_CPU_TYPE
      8825**DCL
TOT$ECP.BREAK_ALLOWED
      8821**DCL
TOT$ECP.BREAK_RECEIVED
      8823**DCL
TOT$ECP.DYNAMIC_PAGE_COUNT
      8806**DCL
TOT$ECP.IO
      8792**DCL
TOT$ECP.IO.COUNT
      8795**DCL
TOT$ECP.IO.TYPE
      8793**DCL
TOT$ECP.ISC
      8797**DCL
PL6.E3A0      #001=TOG$GCOS_MMES File=TOG$GCOS_MMES.:E05TSI                      WED 07/30/97 06:24 Page:240  
TOT$ECP.ISC.GERELC_WAIT
      8802**DCL
TOT$ECP.ISC.READ_PENDING
      8804**DCL
TOT$ECP.SUBEXEC
      8808**DCL
TOT$ECP.SUBEXEC.ADDRESS
      8811**DCL
TOT$ECP.SUBEXEC.EDIT_NAME
      8813**DCL
TOT$ECP.SUBEXEC.TEST_PAGE_COUNT
      8819**DCL
TOT$ECP.SUBEXEC.WRAPUP$
      8817**DCL
TOT$ECP.SUBEXEC.WRAPUP_TRIED
      8815**DCL
TOT$ECP.TEST_REQ_
      8791**DCL
WRITE_8K.BUF_ IN PROCEDURE READ_WRITE_8K
      9706**DCL
WRITE_8K.IDBUF_ IN PROCEDURE READ_WRITE_8K
      9708**DCL
WRITE_8K.KEY_ IN PROCEDURE READ_WRITE_8K
      9706**DCL
WRITE_8K.V.DCB# IN PROCEDURE READ_WRITE_8K
      9709**DCL
WRITE_8K.V.DVBYTE IN PROCEDURE READ_WRITE_8K
      9714**DCL
WRITE_8K.V.DVBYTE.BIN# IN PROCEDURE READ_WRITE_8K
      9715**DCL
WRITE_8K.V.DVBYTE.BP# IN PROCEDURE READ_WRITE_8K
      9715**DCL
WRITE_8K.V.DVBYTE.CONT# IN PROCEDURE READ_WRITE_8K
      9717**DCL
WRITE_8K.V.DVBYTE.NODAT# IN PROCEDURE READ_WRITE_8K
      9716**DCL
PL6.E3A0      #001=TOG$GCOS_MMES File=TOG$GCOS_MMES.:E05TSI                      WED 07/30/97 06:24 Page:241  
WRITE_8K.V.DVBYTE.REREAD# IN PROCEDURE READ_WRITE_8K
      9715**DCL
WRITE_8K.V.DVBYTE.RRR# IN PROCEDURE READ_WRITE_8K
      9716**DCL
WRITE_8K.V.DVBYTE.TOP# IN PROCEDURE READ_WRITE_8K
      9714**DCL
WRITE_8K.V.DVBYTE.TRANS# IN PROCEDURE READ_WRITE_8K
      9716**DCL
WRITE_8K.V.EVENT# IN PROCEDURE READ_WRITE_8K
      9714**DCL
WRITE_8K.V.FULL# IN PROCEDURE READ_WRITE_8K
      9711**DCL
WRITE_8K.V.ID# IN PROCEDURE READ_WRITE_8K
      9710**DCL
WRITE_8K.V.IOERROK# IN PROCEDURE READ_WRITE_8K
      9713**DCL
WRITE_8K.V.KEYTYPE# IN PROCEDURE READ_WRITE_8K
      9713**DCL
WRITE_8K.V.NEWKEY# IN PROCEDURE READ_WRITE_8K
      9712**DCL
WRITE_8K.V.NOTIME# IN PROCEDURE READ_WRITE_8K
      9712**DCL
WRITE_8K.V.ODFNC# IN PROCEDURE READ_WRITE_8K
      9718**DCL
WRITE_8K.V.ONEWKEY# IN PROCEDURE READ_WRITE_8K
      9711**DCL
WRITE_8K.V.REWRITE# IN PROCEDURE READ_WRITE_8K
      9712**DCL
WRITE_8K.V.SEED# IN PROCEDURE READ_WRITE_8K
      9714**DCL
WRITE_8K.V.WAIT# IN PROCEDURE READ_WRITE_8K
      9709**DCL
WRITE_8K.V_ IN PROCEDURE READ_WRITE_8K
      9706**DCL
