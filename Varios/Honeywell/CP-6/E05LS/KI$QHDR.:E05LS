

14:48 JUL 28 '97 KI$QHDR.:E05SI                                            1    
    1      /*M* KI$QHDR Based structure for FEI circular queue headers*/
    2      /*T***********************************************************/
    3      /*T*                                                         */
    4      /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
    5      /*T*                                                         */
    6      /*T***********************************************************/
    7      /*X* MEC,MOC,EXM=20,CLM=20,CRM=80  */
    8
    9                          /*F* NAME: KI$QHDR - Host Circular Queue Header
   10
   11                          Both the input and output circular queue for a
   12                          fep are contained within one of the Communication
   13                          Working Space Quarters.
   14                          The KI$QHDR structure defines the Host circular
   15                          queue headers.  The structure for
   16                          KI$QHDR is (un-macroized) in the file KI$QHDR.
   17
   18                          The header for the input CQ may be located via the
   19                          pointer in the FEI context for a given fep:
   20
   21                          }   KI_FEI$$ -> KI$FEI$(fei#) -> KI$FEI.ICQ$.
   22
   23                          The header for the output CQ is located via:
   24
   25                          }   KI_FEI$$ -> KI$FEI$(fei#) -> KI$FEI.OCQ$.
   26
   27                          The KI$QHDR structure contains the following:
   28                          */
   29      DCL 1 KI$QHDR BASED DALIGNED,
   30            2 CCMD BIT(36),
   31            2 BDCTL,
   32              3 * BIT(1) UNAL,
   33              3 MLCPDUMP BIT(1) UNAL,
   34              3 * BIT(7) UNAL,
   35              3 * BIT(1) UNAL,
   36              3 BTPG# UBIN(8) UNAL,
   37              3 * BIT(1) UNAL,
14:48 JUL 28 '97 KI$QHDR.:E05SI                                            2    
   38              3 MDBFK UBIN(8) UNAL,
   39              3 * BIT(1) UNAL,
   40              3 MLCPZ UBIN(8) UNAL,
   41            2 L6_FLAGS,
   42              3 IOIP BIT(1) UNAL, /* IO in progress                                 */
   43              3 * BIT(35) UNAL,
   44            2 HOST_NODE# UBIN BYTE UNAL,
   45            2 FEP_NODE# UBIN BYTE UNAL,
   46            2 QOS UBIN BYTE UNAL,
   47            2 * UBIN BYTE UNAL,
   48            2 INTLOCK UBIN WORD,
   49            2 QSIZE UBIN(32) UNAL,
   50            2 * BIT(4) UNAL,
   51            2 GATE BIT(72),
   52            2 MYIPTR UBIN WORD,
   53            2 RPTR UBIN(32) UNAL,
   54            2 * BIT(4) UNAL,
   55            2 IPTR UBIN(32) UNAL,
   56            2 * BIT(4) UNAL,
   57            2 FLG UNAL,
   58              3 * BIT(1) UNAL,
   59              3 FERSVD BIT(7) UNAL,
   60              3 FULL BIT(1) UNAL,
   61              3 * BIT(1) UNAL,
   62              3 MYRSVD BIT(2) UNAL,
   63            2 MAXQ UBIN(24) UNAL,
   64            2 TOTMES UBIN(32) UNAL,
   65            2 * BIT(4) UNAL,
   66            2 LAST_PTR UBIN(32) UNAL,
   67            2 * UBIN(4) UNAL,
   68            2 *(0:1) UBIN UNAL;
   69
   70      /*F* NAME: KI$CCMD
   71
   72      KI$CCMD is the PCW for the COUPLER - it is set up in the
   73      first word of KI$QHDR for a particular FEP.  After a connect
   74      is issued to the direct channel (NIS$DCCON), the COUPLER
14:48 JUL 28 '97 KI$QHDR.:E05SI                                            3    
   75      reads the PCW (KI$CCMD) from where PTP on connect points to.
   76      */
   77      %MACRO KI$CCMD (NAME=KI$CCMD,STCLASS=BASED);
   78      DCL 1 NAME STCLASS ALIGNED,
   79            2 ADB18 UBIN(18) UNAL,
   80            2 I UBIN(1) UNAL,
   81            2 MBZ UBIN(2) UNAL,
   82            2 RFU UBIN(2) UNAL,
   83            2 Z UBIN(1) UNAL,
   84            2 L6INT UBIN(3) UNAL,
   85                          /* L6INT and L66INT - see KJ_FNCS_C - %KJ_PARM?           */
   86            2 ADT3 REDEF L6INT UBIN(3) UNAL,
   87            2 L66INT UBIN(3) UNAL,
   88            2 L6PARM REDEF L66INT UBIN(3) UNAL,
   89            2 ADM3 REDEF L66INT UBIN(3) UNAL,
   90            2 OPCD BIT(6) UNAL;
   91      %MEND;
   92
   93
   94      /*F* NAME: KI_CCMD
   95      */
   96      %MACRO KI_CCMD (NAME=KI_CCMD,STCLASS=CONSTANT,ADB=0,L6I=0,L66I=0,CMD='0'B);
   97         %LSET STR = CONCAT(TEXTCHAR(STCLASS),'        ');
   98         %IF (SUBSTR(STR,0,6) = 'STATIC') OR
   99             (SUBSTR(STR,0,8) = 'CONSTANT') OR
  100             (SUBSTR(STR,0,3) = 'EXT');
  101             %LSET INIT = CHARTEXT('INIT');
  102         %ELSE;
  103             %LSET INIT = CHARTEXT('/*');
  104         %ENDIF;
  105      DCL 1 NAME STCLASS ALIGNED,
  106            2 ADB18 UBIN(18) UNAL %INIT(ADB)%CHARTEXT('/**/'),
  107            2 I UBIN(1) UNAL %INIT(0)%CHARTEXT('/**/'),
  108            2 MBZ UBIN(2) UNAL %INIT(0)%CHARTEXT('/**/'),
  109            2 RFU UBIN(2) UNAL %INIT(0)%CHARTEXT('/**/'),
  110            2 Z UBIN(1) UNAL %INIT(0)%CHARTEXT('/**/'),
  111            2 L6INT UBIN(3) UNAL %INIT(L6I)%CHARTEXT('/**/'),
14:48 JUL 28 '97 KI$QHDR.:E05SI                                            4    
  112            2 ADT3 REDEF L6INT UBIN(3) UNAL,
  113            2 L66INT UBIN(3) UNAL %INIT(L66I)%CHARTEXT('/**/'),
  114            2 L6PARM REDEF L66INT UBIN(3) UNAL,
  115                          /*K* L6PARM - UBIN(3).
  116
  117                          See the %SUBs for KJ_IPARM_xxx in file KJ_FCNS_C.
  118                          */
  119            2 ADM3 REDEF L66INT UBIN(3) UNAL,
  120            2 OPCD BIT(6) UNAL %INIT(CMD)%CHARTEXT('/**/');
  121                          /*K* OPCD - BIT(6).
  122                          See %SUB for KIOP_xxx in file KI_SUBS_C.
  123                          */
  124      %MEND;
  125
  126
  127      /*F* NAME: KI$CTCW
  128      */
  129      %MACRO KI$CTCW (NAME=KI$CTCW,STCLASS=BASED);
  130      DCL 1 NAME STCLASS ALIGNED,
  131            2 TYP UBIN(3) UNAL,
  132            2 L6ADD UBIN(15) UNAL,
  133            2 P UBIN(1) UNAL,
  134            2 MBZ UBIN(5) UNAL,
  135            2 TALLY UBIN(12) UNAL;
  136      %MEND;
  137
  138
  139      /*F* NAME: KI_CTCW
  140      */
  141      %MACRO KI_CTCW (NAME=KI_CTCW,STCLASS=CONSTANT,L6AD=0,CNT=0,TB(B=0,T=1)=1);
  142      DCL 1 NAME STCLASS ALIGNED,
  143            2 TYP UBIN(3) UNAL INIT(1),
  144            2 L6ADD UBIN(15) UNAL INIT(L6AD),
  145            2 P UBIN(1) UNAL INIT(TB),
  146            2 MBZ UBIN(5) UNAL INIT(0),
  147            2 TALLY UBIN(12) UNAL INIT(CNT);
  148      %SUB KI_TSHFT=128/*TSHFT*/; /* DIVIDE BY THIS IF TB=T USING L66 WORDS         */
14:48 JUL 28 '97 KI$QHDR.:E05SI                                            5    
  149      %MEND;
  150      /**/
  151      /**/

