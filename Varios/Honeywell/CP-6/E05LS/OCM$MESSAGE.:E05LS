VERSION E05

PL6.E3A0      #001=OCM$TEMPLATE File=OCM$MESSAGE.:E05TSI                         WED 07/30/97 04:00 Page:1    
        1        1        /*M* OCM$MESSAGE  routines to format console messages */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* DMR,PLM=5,IND=5,CTI=5,SDI=5,MCL=10,CSI=0,ECI=0 */
        8        8        %SET LISTSUB='1'B;
        9        9        /*
       10       10         ###    ###   #   #   #   #   #  #####   ###    ###    ###    ###   #####
       11       11        #   #  #   #  ## ##  ###  ## ##  #      #   #  #   #  #   #  #   #  #
       12       12        #   #  #      # # # # #   # # #  #      #      #      #   #  #      #
       13       13        #   #  #      #   #  ###  #   #  ####    ###    ###   #####  #      ####
       14       14        #   #  #      #   #   # # #   #  #          #      #  #   #  #  ##  #
       15       15        #   #  #   #  #   #  ###  #   #  #      #   #  #   #  #   #  #   #  #
       16       16         ###    ###   #   #   #   #   #  #####   ###    ###   #   #   ###   #####
       17       17                                                                   */
       18       18                                                /**/
       19       19                                                /**/
       20       20        /*P* NAME: OCM$MESSAGE
       21       21             PURPOSE: To decode passed parameters and format them
       22       22                      into a message. */
       23       23                                                /**/
       24       24        %EJECT;
PL6.E3A0      #001=OCM$TEMPLATE File=OCM$MESSAGE.:E05TSI                         WED 07/30/97 04:00 Page:2    
       25       25                                                /**/
       26       26        /*M* OCM$TEMPLATE  procedure to format a template */
       27       27        /*
       28       28         ###    ###   #   #   #   #####  #####  #   #  ####   #       ###   #####  #####
       29       29        #   #  #   #  ## ##  ###    #    #      ## ##  #   #  #      #   #    #    #
       30       30        #   #  #      # # # # #     #    #      # # #  #   #  #      #   #    #    #
       31       31        #   #  #      #   #  ###    #    ####   #   #  ####   #      #####    #    ####
       32       32        #   #  #      #   #   # #   #    #      #   #  #      #      #   #    #    #
       33       33        #   #  #   #  #   #  ###    #    #      #   #  #      #      #   #    #    #
       34       34         ###    ###   #   #   #     #    #####  #   #  #      #####  #   #    #    #####
       35       35                                                                   */
       36       36        /*F* NAME: OCM$TEMPLATE
       37       37             PURPOSE:  To format a message template.
       38       38             DESCRIPTION:  Obtains the next token and calls the
       39       39                           appropriate formatting routine.
       40       40                                                                           */
       41       41        /*D* NAME: OCM$TEMPLATE
       42       42             CALL:  CALL OCM$TEMPLATE
       43       43             INTERFACE:  OCM$DONE, OCM$TEMPLATE (recursively)
       44       44             DESCRIPTION:  OCM$TEMPLATE obtains the next token from the
       45       45                           message template and calls the appropriate
       46       46                           routine based upon that token.  If the token
       47       47                           is neither TYP_STRING#, TYP_PARAM#, nor TYP_SAME#,
       48       48                           OCM$DONE is called to perform error termination.
       49       49             ASSUMPTIONS:   The template position pointer, OCM_TPOSN, is
       50       50                            positioned past the TYP_TEMPLATE# token in the
       51       51                            message template upon entry.
       52       52                                                                           */
       53       53                                                /**/
       54       54                                                /**/
       55       55        OCM$TEMPLATE: PROC;
       56       56                                                /**/
       57       57                                                /**/
       58       58                                                /**/
       59       59    1   DCL OCM$DONE ENTRY;
       60       60    1   DCL LIMIT UBIN WORD;
       61       61    1   DCL EDIT_LENGTH SBIN WORD;
PL6.E3A0      #001=OCM$TEMPLATE File=OCM$MESSAGE.:E05TSI                         WED 07/30/97 04:00 Page:3    
       62       62    1   DCL OPOSN UBIN WORD;
       63       63    1   DCL TOKEN UBIN WORD;
       64       64    1   DCL VALUE UBIN WORD;
       65       65    1   DCL 1 NUMBER,
       66       66    1            2 B BIT(36) UNAL,
       67       67    1            2 U REDEF B UBIN WORD,
       68       68    1            2 C REDEF B CHAR(4) UNAL;
       69       69    1   DCL 1 JERR REDEF NUMBER,
       70       70    1            2 FCG(0:2) UBIN(6) UNAL,
       71       71    1            2 MON BIT(1) UNAL,
       72       72    1            2 ERR UBIN(14) UNAL,
       73       73    1            2 SEV UBIN(3) UNAL;
       74       74    1   DCL PIC_U UBIN WORD;
       75       75    1   DCL 1 PIC REDEF PIC_U,
       76       76    1            2 * BIT(27) UNAL,
       77       77    1            2 B BIT(9) UNAL;
       78       78    1   DCL 1 PICU REDEF PIC_U,
       79       79    1            2 * BIT(27) UNAL,
       80       80    1            2 * BIT(3) UNAL,
       81       81    1            2 TYPE UBIN(6) UNAL;
       82       82    1   DCL HEX_DIGITS CHAR(16) CONSTANT INIT('0123456789ABCDEF');
       83       83    1   DCL 1 TEMP,
       84       84    1            2 B BIT(36) UNAL,
       85       85    1            2 U REDEF B UBIN WORD,
       86       86    1            2 S REDEF B SBIN WORD;
       87       87    1   DCL EDIT CHAR(256) UNAL;
       88       88    1   DCL MATCH BIT(1) UNAL;
       89       89    1   DCL RIGHT BIT(1) UNAL;
       90       90    1   DCL TEXTUAL BIT(1) UNAL;
       91       91                                                /**/
       92       92        %INCLUDE CP_6;
       93      173                                                /**/
       94      174             %FPT_TIME      (FPTN=GET_TIME1,
       95      175                                 TSTAMP = OCM_TSTAMP,
       96      176                                 SOURCE = UTS,
       97      177                                 DEST=LOCAL,
       98      178                                 DATE=TIME_STAMPL.LOCAL_DATE,
PL6.E3A0      #001=OCM$TEMPLATE File=OCM$MESSAGE.:E05TSI                         WED 07/30/97 04:00 Page:4    
       99      179                                 TIME=TIME_STAMPL.LOCAL_TIME,
      100      180                                 DAY=TIME_STAMPL.LOCAL_DAY);
      101      199                                                /**/
      102      200                                                /**/
      103      201             %FPT_TIME      (FPTN=GET_TIME2,
      104      202                                 TSTAMP = OCM_TSTAMP,
      105      203                                 SOURCE=UTS,
      106      204                                 DEST=LOCAL,
      107      205                                 TIME=TIME_STAMPS.LOCAL_TIME);
      108      224                                                /**/
      109      225             %FPT_TIME      (FPTN=GET_TIME3,
      110      226                                 TSTAMP = OCM_TSTAMP,
      111      227                                 SOURCE=UTS,
      112      228                                 DEST=ANS,
      113      229                                 DAY=TIME_STAMPA.LOCAL_DAY);
      114      248                                                /**/
      115      249             %FPT_TIME      (FPTN=GET_TSTAMP,
      116      250                                 SOURCE = CLOCK,
      117      251                                 TSTAMP = OCM_TSTAMP,
      118      252                                 DEST=UTS);
      119      271    1   DCL 1 TIME_STAMPL STATIC,
      120      272    1            2 LOCAL_TIME CHAR(5) UNAL,
      121      273    1            2 * CHAR(1) UNAL,
      122      274    1            2 LOCAL_DATE CHAR(8) UNAL,
      123      275    1            2 * CHAR(1) UNAL,
      124      276    1            2 LOCAL_DAY CHAR(3) UNAL;
      125      277    1   DCL 1 TIME_STAMPS REDEF TIME_STAMPL,
      126      278    1            2 LOCAL_TIME CHAR(8) UNAL,
      127      279    1            2 * CHAR(10) UNAL;
      128      280    1   DCL 1 TIME_STAMPA REDEF TIME_STAMPL,
      129      281    1            2 * CHAR(6) UNAL,
      130      282    1            2 LOCAL_DAY CHAR(5) UNAL,
      131      283    1            2 * CHAR(7) UNAL;
      132      284    1   DCL TIME_STRING REDEF TIME_STAMPL CHAR(18) UNAL;
      133      285                                           /* This array defines the size of
      134      286                                                each $MINUTES type primitive */
      135      287    1   DCL TIME_SIZE(0:5) SBIN BYTE CONSTANT UNAL
PL6.E3A0      #001=OCM$TEMPLATE File=OCM$MESSAGE.:E05TSI                         WED 07/30/97 04:00 Page:5    
      136      288    1        INIT (0, 5, 8, 14, 11, 5);
      137      289                                                /**/
      138      290                                                /**/
      139      291        %INCLUDE OCI_SUBS_C;
      140      389        %INCLUDE OC_DAT_R;
      141      550        %INCLUDE OUT_SUBS_C;
      142      673        %INCLUDE OCM_DATA_R;
      143      686        /**/
      144      687        %EJECT;
PL6.E3A0      #001=OCM$TEMPLATE File=OCM$MESSAGE.:E05TSI                         WED 07/30/97 04:00 Page:6    
      145      688        /*
      146      689             G E T _ B Y T E
      147      690                                                                           */
      148      691        /*I* NAME: GET_BYTE
      149      692             PURPOSE:  To obtain the next byte from the message template.
      150      693             CALL:  CALL GET_BYTE (BYTE_);
      151      694             DESCRIPTION:  If there is no next byte, OCM$DONE is called.
      152      695                           Otherwise, the next byte is obtained from
      153      696                           OCM_TEMPLATE and the position pointer OCM_TPOSN
      154      697                           is incremented.
      155      698                                                                           */
      156      699    1   GET_BYTE: PROC(BYTE_);
      157      700    2   DCL BYTE_ UBIN WORD;
      158      701    2        IF (OCM_TPOSN = OCM_TSIZE)
      159      702    2        THEN
      160      703    2             CALL OCM$DONE;
      161      704    2        ELSE
      162      705    3        DO;
      163      706    3             BYTE_ = ASCBIN(SUBSTR(OCM_TEMPLATE, OCM_TPOSN, 1));
      164      707    3             OCM_TPOSN = OCM_TPOSN + 1;
      165      708    3           END;
      166      709    2        RETURN;
      167      710    2   END GET_BYTE;
      168      711        /**/
      169      712        /**/
      170      713        %EJECT;
PL6.E3A0      #001=OCM$TEMPLATE File=OCM$MESSAGE.:E05TSI                         WED 07/30/97 04:00 Page:7    
      171      714        /*
      172      715             G E T _ H A L F
      173      716                                                                           */
      174      717        /* GET_HALF is the halfword equivalent of GET_BYTE, used in
      175      718                  cases where the count may exceed 1 byte.  These cases
      176      719                  are: new_template to process, or choice list to process */
      177      720                                                /**/
      178      721    1   GET_HALF: PROC (HALF_);
      179      722    2   DCL HALF_ UBIN WORD;
      180      723    2   DCL BYTES_ REDEF HALF_ CHAR(4);
      181      724                                                /**/
      182      725    2        IF OCM_TPOSN = OCM_TSIZE
      183      726    2        THEN
      184      727    2             CALL OCM$DONE;
      185      728    2        ELSE
      186      729    3        DO;
      187      730    3             HALF_ = 0;
      188      731    3             CALL INSERT (BYTES_, 2, 2,
      189      732    3                  SUBSTR(OCM_TEMPLATE, OCM_TPOSN, 2));
      190      733    3             OCM_TPOSN = OCM_TPOSN + 2;
      191      734    3           END;                            /* DO if sizes okay */
      192      735    2        RETURN;
      193      736    2   END GET_HALF;
      194      737        /**/
      195      738        %EJECT;
PL6.E3A0      #001=OCM$TEMPLATE File=OCM$MESSAGE.:E05TSI                         WED 07/30/97 04:00 Page:8    
      196      739        /*
      197      740             A D D
      198      741                                                                           */
      199      742        /*I* NAME: ADD
      200      743             CALL:  CALL ADD (LENGTH_, STRING_);
      201      744             DESCRIPTION:  As much of STRING_ as possible is added to
      202      745                           OCM_BUFFER and OCM_BPOSN is incremented
      203      746                           accordingly.
      204      747                                                                           */
      205      748    1   ADD: PROC(LENGTH_, STRING_);
      206      749    2   DCL LENGTH_ UBIN WORD;
      207      750    2   DCL STRING_ CHAR(LENGTH_);
      208      751    2   DCL SIZE UBIN WORD;
      209      752    2        IF ((OCM_BPOSN = 256) | (LENGTH_ = 0))
      210      753    2        THEN                               /* impossible to or nothing to add */
      211      754    2             RETURN;
      212      755    2        IF ((OCM_BPOSN + LENGTH_) > 256)
      213      756    2        THEN
      214      757    2             SIZE = 256 - OCM_BPOSN;
      215      758    2        ELSE
      216      759    2             SIZE = LENGTH_;
      217      760    2        CALL INSERT(OCM_BUFFER, OCM_BPOSN, SIZE, STRING_);
      218      761    2        OCM_BPOSN = OCM_BPOSN + SIZE;
      219      762    2        RETURN;
      220      763    2   END ADD;
      221      764        /**/
      222      765        %EJECT;
PL6.E3A0      #001=OCM$TEMPLATE File=OCM$MESSAGE.:E05TSI                         WED 07/30/97 04:00 Page:9    
      223      766        /*
      224      767             G E T _ P A R A M
      225      768                                                                           */
      226      769        /*I* NAME: GET_PARAM
      227      770             CALL:  CALL GET_PARAM (LENGTH_);
      228      771             DESCRIPTION:  If OCM_PARAM# indicates a special parameter
      229      772                           (e.g., device name), it is placed in OCM_PARAM and
      230      773                           LENGTH_ is set appropriately.  If OCM_PARAM# is
      231      774                           greater than the number of message parameters,
      232      775                           LENGTH_ is set to zero to indicate a null parameter.
      233      776                           Otherwise, the correct parameter is obtained and
      234      777                           placed in OCM_PARAM and LENGTH_ is set to indicate
      235      778                           this parameter's length.
      236      779                                                                           */
      237      780    1   GET_PARAM: PROC(LENGTH_);
      238      781    2   DCL LENGTH_ UBIN WORD;
      239      782    2   DCL OFFSET SBIN WORD;
      240      783    2   DCL I SBIN WORD;
      241      784    2   DCL STRING CHAR(LENGTH_) BASED;
      242      785        %EJECT;
PL6.E3A0      #001=OCM$TEMPLATE File=OCM$MESSAGE.:E05TSI                         WED 07/30/97 04:00 Page:10   
      243      786    2        IF OCM_PARAM# >= %450 /* DEVICE# */
      244      787    2        THEN
      245      788    3        DO;
      246      789    3             IF OCM_PARAM# < (%450 /* DEVICE# */ + 3 /* $MINUTES */ - 0 /* $DEVICE */)
      247      790    3             THEN
      248      791    4             DO CASE (OCM_PARAM# - %450 /* DEVICE# */ + 0 /* $DEVICE */);
      249      792                                                /**/
      250      793    4             CASE (0 /* $DEVICE */);
      251      794    4                LENGTH_ = 4;
      252      795    4                OCM_PARAM = OC_MESSBUF.DEVNM;
      253      796                                                /**/
      254      797    4             CASE (1 /* $SYSID */);
      255      798    4                LENGTH_ = 2;
      256      799    4                OCM_PARAM = ADDR(OC_MESSBUF.SYSID) -> STRING;
      257      800                                                /**/
      258      801    4             CASE (2 /* $PROMPT */);               /* TEMPCODE */
      259      802    4                IF OCM_KEY_FLAG            /* GET INFORMATION */
      260      803    4                THEN
      261      804    5                DO;
      262      805    5                     IF OC_MESSBUF.CADDR & '400000'O /* direct? */
      263      806    5                     THEN
      264      807    6                     DO;
      265      808    6                          LENGTH_ = BITBIN(OC_MESSBUF.CADDR & '377777'O);
      266      809    7                          DO I = 1 TO OC_MAXCONSOLE /* MAX_CONSOLES# */;
      267      810    7                               IF OC_CONSOLE.CID(I) = LENGTH_
      268      811    7                               THEN
      269      812    8                               DO;
      270      813    8                                    OFFSET = OC_MESSBUF.PFB;
      271      814    8                                    IF OFFSET = 0 THEN OFFSET = 1;
      272      815    8                                    IF OFFSET > 3 THEN OFFSET = 2;
      273      816    8                                    OFFSET = OFFSET - 1;
      274      817    8                                    LENGTH_ = ADDR(OC_CONSOLE.PROMPTS(I))
      275      818    8                                         -> PROMPT_TABLE.COUNT_(OFFSET);
      276      819    8                                    OCM_PARAM = ADDR(OC_CONSOLE.PROMPTS(I))
      277      820    8                                         -> PROMPT_TABLE.PROMPT(OFFSET);
      278      821    8                                    OCM_PROMPT.SIZE = LENGTH_; /* SAVE LENGTH */
      279      822    8                                    OCM_PROMPT.TEXT = OCM_PARAM; /* SAVE PROMPT */
PL6.E3A0      #001=OCM$TEMPLATE File=OCM$MESSAGE.:E05TSI                         WED 07/30/97 04:00 Page:11   
      280      823    8                                    I = OC_MAXCONSOLE + 1 /* NUM_CONSOLES# */;
               823                                             /* to exit quick */
      281      824    8                                  END;     /* DO IF found */
      282      825    7                             END;          /* DO I = 0 TO MAX */
      283      826    6                        END;               /* DO IF DIRECT */
      284      827    5                     ELSE
      285      828    6                     DO;
      286      829    6                          LENGTH_ = 6;
      287      830    6                          OCM_PARAM = '$$$$$$';
      288      831    6                        END;               /* DO IF INDIRECT (???) */
      289      832    5                   END;                    /* END IF USE CONSOLE */
      290      833    4                ELSE
      291      834    5                DO;                        /* USE INFO STORED IN OCM_ */
      292      835    5                     OCM_PARAM = OCM_PROMPT.TEXT;
      293      836    5                     LENGTH_ = OCM_PROMPT.SIZE;
      294      837    5                   END;
      295      838                                                /**/
      296      839    4             END;                          /* CASE (PARAM-DEVICE#+$DEVICE) */
      297      840        %EJECT;
PL6.E3A0      #001=OCM$TEMPLATE File=OCM$MESSAGE.:E05TSI                         WED 07/30/97 04:00 Page:12   
      298      841    3             ELSE
      299      842    4             DO;                           /* Process $MINUTES/$CLASS */
      300      843    4                  IF OCM_PARAM# < (%450 /* DEVICE# */ + 10 /* $CLASS */ - 0
               843                           /* $DEVICE */)
      301      844    4                  THEN
      302      845    5                  DO;
      303      846                                           /* Process the minutes token here
      304      847                                                note that $MINUTES is the
      305      848                                                zero for the subtraction....
      306      849                                                and is illegal as an option */
      307      850                                                /**/
      308      851    5                       I = OCM_PARAM# - %450 /* DEVICE# */ - 3 /* $MINUTES */ + 0
               851                                /* $DEVICE */;
      309      852                                                /**/
      310      853                                           /* The TIME_SIZE array is INITed to
      311      854                                                the amount of the time buffer
      312      855                                                to move, depending on which
      313      856                                                option was selected by the
      314      857                                                template */
      315      858    5                       LENGTH_ = TIME_SIZE(I);
      316      859    5                       TIME_STRING = ' ';
      317      860                                                /**/
      318      861    5                       IF OCM_KEY_FLAG     /* GET TIME  */
      319      862    5                       THEN
      320      863    5                            CALL M$TIME(GET_TSTAMP);
      321      864    6                       DO CASE(I);         /* TYPE of M$TIME to use */
      322      865                                                /**/
      323      866    6                       CASE(1,3,5);        /* HH:MM MM/DD/YY */
      324      867                                                /**/
      325      868    6                          CALL M$TIME (GET_TIME1);
      326      869                                                /**/
      327      870    6                       CASE(2);            /* HH:MM:SS */
      328      871                                                /**/
      329      872    6                          CALL M$TIME (GET_TIME2);
      330      873                                                /**/
      331      874                                                /* (JULIAN style) */
      332      875    6                       CASE(4);            /* HH:MM YYDDD */
PL6.E3A0      #001=OCM$TEMPLATE File=OCM$MESSAGE.:E05TSI                         WED 07/30/97 04:00 Page:13   
      333      876                                                /**/
      334      877    6                          CALL M$TIME (GET_TIME1);
      335      878    6                          CALL M$TIME (GET_TIME3);
      336      879                                                /**/
      337      880    6                       END;                /* DO CASE (TYPE OF $MIN); */
      338      881                                                /**/
      339      882    5                       OCM_PARAM = SUBSTR(TIME_STRING, 0, LENGTH_);
      340      883                                                /**/
      341      884    5                     END;                  /* DO IF $MINUTES */
      342      885        %EJECT;
PL6.E3A0      #001=OCM$TEMPLATE File=OCM$MESSAGE.:E05TSI                         WED 07/30/97 04:00 Page:14   
      343      886    4                  ELSE
      344      887    5                  DO;
      345      888                                                /* Process the message class
      346      889                                                     token here. The output
      347      890                                                     buffer is stuffed with
      348      891                                                     certain characters
      349      892                                                     contained in the OCM_CLASS
      350      893                                                     array                */
      351      894    5                       I = OCM_PARAM# - %450 /* DEVICE# */ - 10 /* $CLASS */ + 0
               894                                /* $DEVICE */;
      352      895    5                       LENGTH_ = OCM_CLASSES.COUNT_(I);
      353      896    5                       OCM_PARAM = ADDR(OCM_CLASSES.TEXT_(I))->STRING;
      354      897    5                     END;                  /* DO IF $CLASS */
      355      898    4                END;                       /* DO IF $MINUTES OR $CLASS */
      356      899    3           END;                            /* DO IF PARAM# > DEVICE# */
      357      900        %EJECT;
PL6.E3A0      #001=OCM$TEMPLATE File=OCM$MESSAGE.:E05TSI                         WED 07/30/97 04:00 Page:15   
      358      901    2        ELSE
      359      902    2             IF (OCM_PARAM# > OC_MESSBUF.NPARAMS)
      360      903    2             THEN
      361      904    2                  LENGTH_ = 0;             /* Indicate null entry */
      362      905    2             ELSE
      363      906    3             DO;
      364      907    3                  LENGTH_ = OC_MESSBUF.LEN (OCM_PARAM# - 1);
      365      908    3                  IF (LENGTH_ ~= 0)
      366      909    3                  THEN
      367      910    4                  DO;
      368      911    4                       IF (LENGTH_ > 256)
      369      912    4                       THEN
      370      913    4                            LENGTH_ = 256;
      371      914    4                       OFFSET = 0;
      372      915    5                       DO I = 0 TO (OCM_PARAM# - 2);
      373      916    5                            OFFSET = OFFSET + OC_MESSBUF.LEN(I);
      374      917    5                          END;
      375      918    4                       OCM_PARAM = PINCRC (OCM_PARAM$, OFFSET) -> STRING;
      376      919    4                     END;
      377      920    3                END;
      378      921    2        RETURN;
      379      922    2   END GET_PARAM;
      380      923        /**/
      381      924        %EJECT;
PL6.E3A0      #001=OCM$TEMPLATE File=OCM$MESSAGE.:E05TSI                         WED 07/30/97 04:00 Page:16   
      382      925        /*
      383      926             S K I P _ T O
      384      927                                                                           */
      385      928        /*I* NAME:  SKIP_TO
      386      929             PURPOSE:  To adjust the message template position pointer.
      387      930             CALL:  CALL SKIP_TO (POSN);
      388      931             DESCRIPTION:  OCM_TPOSN is set to POSN.  If OCM_TPOSN is
      389      932                           greater than the template size (OCM_TSIZE),
      390      933                           OCM$DONE is called to perform error termination.
      391      934                                                                           */
      392      935    1   SKIP_TO: PROC(POSN);
      393      936    2   DCL POSN UBIN WORD;
      394      937    2        OCM_TPOSN = POSN;
      395      938    2        IF (OCM_TPOSN > OCM_TSIZE)
      396      939    2        THEN
      397      940    2             CALL OCM$DONE;
      398      941    2        RETURN;
      399      942    2   END SKIP_TO;
      400      943        /**/
      401      944        %EJECT;
PL6.E3A0      #001=OCM$TEMPLATE File=OCM$MESSAGE.:E05TSI                         WED 07/30/97 04:00 Page:17   
      402      945        /*
      403      946             S T R I N G
      404      947                                                                           */
      405      948        /*I* NAME:  STRING
      406      949             PURPOSE:  To insert a text string from a message template
      407      950                       into OCM_BUFFER.
      408      951             CALL:  CALL STRING;
      409      952             DESCRIPTION:  The length of the string to be inserted is
      410      953                           obtained from the template, ADD is called to
      411      954                           add the string to OCM_BUFFER, and SKIP_TO is
      412      955                           called to position past the string.
      413      956                                                                           */
      414      957    1   STRING: PROC;
      415      958    2   DCL LIMIT UBIN WORD;
      416      959    2        CALL GET_HALF(LIMIT);
      417      960    2        CALL ADD(LIMIT, SUBSTR(OCM_TEMPLATE, OCM_TPOSN));
      418      961    2        CALL SKIP_TO(OCM_TPOSN + LIMIT);
      419      962    2        RETURN;
      420      963    2   END STRING;
      421      964        /**/
      422      965        %EJECT;
PL6.E3A0      #001=OCM$TEMPLATE File=OCM$MESSAGE.:E05TSI                         WED 07/30/97 04:00 Page:18   
      423      966        /*
      424      967             P A R A M E T E R
      425      968                                                                           */
      426      969        /*I* NAME:  PARAMETER
      427      970             PURPOSE:  To format a parameter and insert it into OCM_BUFFER.
      428      971             CALL:  CALL PARAMETER
      429      972             DESCRIPTION:  The parameter number is obtained via GET_BYTE
      430      973                           and GET_PARAM is called to return the specified
      431      974                           parameter in OCM_PARAM.  If the parameter is
      432      975                           non_null, it is formatted according to its
      433      976                           data picture and field picture and placed in
      434      977                           EDIT with EDIT_LENGTH indicating its length.
      435      978                           If this is an indirect parameter, PTR_LIST is
      436      979                           called to process the indirection.
      437      980             ASSUMPTIONS:  Upon entry, OCM_TPOSN points past the TYP_PARAM# token.
      438      981                                                                           */
      439      982    1   PARAMETER: PROC;
      440      983          %SUB ZERO=48;
      441      984    2   DCL SIZE SBIN WORD;
      442      985    2   DCL I SBIN WORD;
      443      986    2   DCL CALL_PTRLIST BIT(1) UNAL;
      444      987        /**/
      445      988    2        CALL GET_BYTE(OCM_PARAM#);
      446      989    2        CALL GET_PARAM(EDIT_LENGTH);
      447      990    2        IF (EDIT_LENGTH = 0)               /* null parameter */
      448      991    2        THEN
      449      992    2             CALL SKIP_TO (OCM_TPOSN + 3);
      450      993    2        ELSE                               /* non_null parameter */
      451      994    3        DO;
      452      995    3             CALL GET_BYTE(PIC_U);
      453      996    3             IF (PIC.B & '400'O /* IMG_TEXT# */)        /* text */
      454      997    3             THEN
      455      998    4             DO;
      456      999    4                  TEXTUAL = '1'B /*TRUE#*/;
      457     1000    4                  IF (PIC.B & '200'O /* IMG_LDGB# */)   /* keep leading blanks? */
      458     1001    4                  THEN
      459     1002    4                       TEMP.U = 0;
PL6.E3A0      #001=OCM$TEMPLATE File=OCM$MESSAGE.:E05TSI                         WED 07/30/97 04:00 Page:19   
      460     1003    4                  ELSE                     /* strip leading blanks */
      461     1004    5                  DO;
      462     1005    5                       TEMP.U = EDIT_LENGTH;
      463     1006    6                       DO I = 0 TO (EDIT_LENGTH - 1);
      464     1007    6                            IF (SUBSTR(OCM_PARAM, I, 1) ~= ' ')
      465     1008    6                            THEN
      466     1009    7                            DO;
      467     1010    7                                 TEMP.U = I;
      468     1011    7                                 I = EDIT_LENGTH;
      469     1012    7                               END;        /* DO IF char ~= ' ' */
      470     1013    6                          END;             /* DO I = 0 TO EDIT_LENGTH-1 */
      471     1014    5                     END;                  /* DO IF strip_leading blnks */
      472     1015    4                  IF (PIC.B & '100'O /* IMG_TRLB# */)
      473     1016    4                  THEN
      474     1017    4                       SIZE = EDIT_LENGTH - TEMP.S;
      475     1018    4                  ELSE                     /* strip trailing blanks    */
      476     1019    5                  DO;
      477     1020    5                       SIZE = 0;
      478     1021    6                       DO I = (1 - EDIT_LENGTH) TO -TEMP.U;
      479     1022    6                            IF (SUBSTR(OCM_PARAM, -I, 1) ~= ' ')
      480     1023    6                            THEN
      481     1024    7                            DO;
      482     1025    7                                 SIZE = 1 - I - TEMP.U;
      483     1026    7                                 I = 0;
      484     1027    7                               END;        /* DO IF char ~= ' ' */
      485     1028    6                          END;             /* DO string_start > end */
      486     1029    5                     END;                  /* DO IF trailing blanks */
      487     1030    4                  CALL GET_BYTE (PIC_U);
      488     1031    4                END;                       /* DO if text bit set */
      489     1032    3             ELSE                          /* number     */
      490     1033    4             DO;
      491     1034    4                  TEXTUAL = '0'B /*FALSE#*/;
      492     1035    4                  NUMBER.U = 0;
      493     1036    4                  IF (EDIT_LENGTH > 4)
      494     1037    4                  THEN
      495     1038    4                       TEMP.U = 4;
      496     1039    4                  ELSE
PL6.E3A0      #001=OCM$TEMPLATE File=OCM$MESSAGE.:E05TSI                         WED 07/30/97 04:00 Page:20   
      497     1040    4                       TEMP.U = EDIT_LENGTH;
      498     1041    4                  CALL INSERT(NUMBER.C, 4 - TEMP.S, TEMP.S,
      499     1042    4                       SUBSTR(OCM_PARAM, EDIT_LENGTH - TEMP.U));
      500     1043    4                  VALUE = NUMBER.U;        /* Save value in case of ptrlist */
      501     1044                                                /**/
      502     1045    5                  DO CASE(PICU.TYPE);
      503     1046                                                /**/
      504     1047    5                  CASE (32);               /*  decimal conversion */
      505     1048                                                /**/
      506     1049    5                     CALL BINCHAR(SUBSTR(OCM_PARAM,244),VALUE);
      507     1050                                                /**/
      508     1051                                                /**/
      509     1052    5                  CASE (8);                /*  hexadecimal conversion */
      510     1053                                                /**/
      511     1054    6                     DO I = -255 TO -244;
      512     1055    6                          TEMP.B = NUMBER.B & '000000000017'O;
      513     1056    6                          NUMBER.U = NUMBER.U / 16;
      514     1057    6                          CALL INSERT(OCM_PARAM,-I,1,
      515     1058    6                               SUBSTR(HEX_DIGITS,TEMP.U,1));
      516     1059    6                        END;               /* DO I = -255 TO -244 */
      517     1060    5                  CASE (16);               /*  octal conversion */
      518     1061                                                /**/
      519     1062    6                     DO I = -255 TO -244;
      520     1063    6                          TEMP.B = NUMBER.B & '000000000007'O;
      521     1064    6                          NUMBER.U = NUMBER.U / 8;
      522     1065    6                          CALL INSERT (OCM_PARAM, -I, 1,
      523     1066    6                               BINASC(TEMP.U + ASCBIN('0')));
      524     1067    6                        END;               /* DO I = -255 TO -244 */
      525     1068                                                /**/
      526     1069    5                  CASE (4);                /* TWSN/TERMNAME conversion */
      527     1070                                                /**/
      528     1071    5                     IF OCM_KEY_FLAG       /* NEED TO CONVERT */
      529     1072    5                     THEN
      530     1073    6                     DO;
      531     1074    6                          CALL INSERT (OCM_PARAM,248,8,'########');
      532     1075                                                /**/
      533     1076    6                          CALL INSERT (OCM_PARAM,0,8,SUBSTR(OCM_PARAM,248,8));
PL6.E3A0      #001=OCM$TEMPLATE File=OCM$MESSAGE.:E05TSI                         WED 07/30/97 04:00 Page:21   
      534     1077    6                        END;
      535     1078                                                /**/
      536     1079    5                     TEXTUAL = '1'B /*TRUE#*/;
      537     1080    5                     EDIT_LENGTH = 8;
      538     1081    5                     SIZE = 8;
      539     1082    6                     DO WHILE (SUBSTR(OCM_PARAM,SIZE-1,1) = ' ');
      540     1083    6                          SIZE = SIZE - 1;
      541     1084    6                        END;               /* Do while trailing blanks */
      542     1085    5                     TEMP.U = 0;
      543     1086                                                /**/
      544     1087    5                  CASE (2);                /*  JIT.ERROR conversion */
      545     1088                                                /**/
      546     1089                                           /* convert NUMBER to look like
      547     1090                                              the standard error code, e.g.;
      548     1091                                              xxx-Mnnnnn-s                */
      549     1092    6                     DO I = 0 TO 2;
      550     1093    6                          CALL INSERT (OCM_PARAM, I, 1,
      551     1094    6                               BINASC(JERR.FCG(I)+ASCBIN('@')));
      552     1095    6                        END;               /* DO I */
      553     1096                                                /**/
      554     1097    5                     IF JERR.MON
      555     1098    5                     THEN
      556     1099    5                          CALL INSERT (OCM_PARAM,3,2,'-M');
      557     1100    5                     ELSE
      558     1101    5                          CALL INSERT (OCM_PARAM,3,2,'-0');
      559     1102                                                /**/
      560     1103    5                     CALL BINCHAR (SUBSTR(OCM_PARAM,244), JERR.ERR);
      561     1104                                                /**/
      562     1105    5                     CALL INSERT (OCM_PARAM, 5, 5,
      563     1106    5                          SUBSTR(OCM_PARAM,251,5));
      564     1107                                                /**/
      565     1108    5                     CALL INSERT (OCM_PARAM, 10, 1, '-');
      566     1109                                                /**/
      567     1110    5                     CALL BINCHAR(SUBSTR(OCM_PARAM,244), JERR.SEV);
      568     1111                                                /**/
      569     1112    5                     CALL INSERT (OCM_PARAM, 11, 1,
      570     1113    5                          SUBSTR(OCM_PARAM,255,1));
PL6.E3A0      #001=OCM$TEMPLATE File=OCM$MESSAGE.:E05TSI                         WED 07/30/97 04:00 Page:22   
      571     1114
      572     1115                                                /**/
      573     1116    5                     TEXTUAL = '1'B /*TRUE#*/;
      574     1117    5                     EDIT_LENGTH = 12;
      575     1118    5                     SIZE = 12;
      576     1119    5                     TEMP.U = 0;
      577     1120                                                /**/
      578     1121    5                  END;                     /* DO CASE(TYPE OF CONVERSION) */
      579     1122                                                /**/
      580     1123    4                  IF ~TEXTUAL
      581     1124    4                  THEN
      582     1125    5                  DO;                      /* Process the numeric results */
      583     1126    5                       CALL GET_BYTE (PIC_U);
      584     1127    5                       PIC.B = (PIC.B & '077'O);
      585     1128    5                       IF PIC.B            /* width specified */
      586     1129    5                       THEN
      587     1130    6                       DO;
      588     1131    6                            IF (PIC_U > 12)
      589     1132    6                            THEN
      590     1133    7                            DO I = (256 - PIC_U) TO 243;
      591     1134    7                                 CALL INSERT(OCM_PARAM, I, 1, '0');
      592     1135    7                               END;        /* DO I=(256-PIC_U) TO 243 */
      593     1136    6                            TEMP.U = 256 - PIC_U;
      594     1137    6                            SIZE = PIC_U;
      595     1138    6                          END;             /* DO IF width passed */
      596     1139    5                       ELSE                /* widthless  */
      597     1140    6                       DO;
      598     1141    6                            SIZE = 1;
      599     1142    6                            TEMP.U = 255;  /* Initialize */
      600     1143    7                            DO I = 244 TO 254;
      601     1144    7                                 IF (SUBSTR(OCM_PARAM, I, 1) ~= '0')
      602     1145    7                                 THEN
      603     1146    8                                 DO;
      604     1147    8                                      TEMP.U = I;
      605     1148    8                                      SIZE = 256 - I;
      606     1149    8                                      I = 254;
      607     1150    8                                    END;   /* DO IF char ~='0' */
PL6.E3A0      #001=OCM$TEMPLATE File=OCM$MESSAGE.:E05TSI                         WED 07/30/97 04:00 Page:23   
      608     1151    7                               END;        /* DO I = 244 TO 254 */
      609     1152    6                          END;             /* DO IF WIDTHLESS */
      610     1153    5                     END;                  /* DO if ~TEXTUAL */
      611     1154    4                  ELSE
      612     1155    5                  DO;
      613     1156    5                       CALL GET_BYTE (PIC_U); /* Pick up the image
      614     1157                                                          byte for the textual
      615     1158                                                          case to position
      616     1159                                                          template right */
      617     1160    5                     END;                  /* DO IF TEXTUAL & FMT SPEC */
      618     1161    4                END;                       /* DO if ~text_bit */
      619     1162        /*
      620     1163           parameter according to data picture is now in SUBSTR(OCM_PARAM, TEMP.U, SIZE)
      621     1164                                                                           */
      622     1165    3             CALL GET_BYTE(PIC_U);         /* get field picture        */
      623     1166    3             RIGHT = PIC.B & '400'O;
      624     1167    3             PIC.B = (PIC.B & '077'O);
      625     1168    3             IF PIC.B                      /* width specified  */
      626     1169    3             THEN
      627     1170    4             DO;
      628     1171    4                  EDIT_LENGTH = PIC_U;
      629     1172    4                  IF RIGHT                 /* right justification */
      630     1173    4                  THEN
      631     1174    5                  DO;
      632     1175    5                       CALL INSERT(EDIT, 0, EDIT_LENGTH,
      633     1176    5                            SUBSTR(OCM_PARAM, TEMP.U + SIZE - EDIT_LENGTH));
      634     1177    5                       IF (EDIT_LENGTH > SIZE)
      635     1178    5                       THEN
      636     1179    5                            CALL INSERT(EDIT, 0, EDIT_LENGTH - SIZE, ' ');
      637     1180    5                     END;                  /* DO if right_justified */
      638     1181    4                  ELSE                     /* left justification       */
      639     1182    4                       CALL INSERT(EDIT, 0, EDIT_LENGTH,
      640     1183    4                            SUBSTR(OCM_PARAM, TEMP.U, SIZE));
      641     1184    4                END;                       /* DO IF width specified */
      642     1185    3             ELSE                          /* widthless field */
      643     1186    4             DO;
      644     1187    4                  EDIT_LENGTH = SIZE;
PL6.E3A0      #001=OCM$TEMPLATE File=OCM$MESSAGE.:E05TSI                         WED 07/30/97 04:00 Page:24   
      645     1188    4                  CALL INSERT(EDIT, 0, EDIT_LENGTH, SUBSTR(OCM_PARAM, TEMP.U));
      646     1189    4                END;                       /* DO IF widthless */
      647     1190    3           END;                            /* DO IF non_null parameter */
      648     1191        /*
      649     1192           at this point, the edited parameter is in SUBSTR(EDIT, 0, EDIT_LENGTH)
      650     1193                                                                           */
      651     1194        /**/
      652     1195        %EJECT;
PL6.E3A0      #001=OCM$TEMPLATE File=OCM$MESSAGE.:E05TSI                         WED 07/30/97 04:00 Page:25   
      653     1196        /*
      654     1197             S A M E
      655     1198                                                                           */
      656     1199        /*I* NAME: SAME -- secondary ENTRY point to PARAMETER
      657     1200             PURPOSE:  To process this parameter as if it were the
      658     1201                       same as the last parameter encountered.
      659     1202             CALL:  CALL SAME
      660     1203             DESCRIPTION:  If this is an indirect parameter, PTR_LIST is
      661     1204                           called to process the indirection.
      662     1205             ASSUMPTIONS:  EDIT and EDIT_LENGTH are set to correctly
      663     1206                           reflect the last parameter.  OCM_TPOSN points
      664     1207                           past the TYP_SAME# token upon entry.
      665     1208                                                                           */
      666     1209    2   SAME: ENTRY;                            /* secondary entry point    */
      667     1210    2        CALL_PTRLIST = '0'B /*FALSE#*/;
      668     1211    2        IF (OCM_TPOSN < OCM_TSIZE)
      669     1212    2        THEN
      670     1213    3        DO;
      671     1214    3             CALL GET_BYTE (TEMP.U);
      672     1215    3             IF (TEMP.U = 4 /* TYP_PTRLIST# */)
      673     1216    3             THEN
      674     1217    3                  CALL_PTRLIST = '1'B /*TRUE#*/;
      675     1218    3             ELSE
      676     1219    3                  OCM_TPOSN = OCM_TPOSN - 1;
      677     1220    3           END;
      678     1221    2        IF CALL_PTRLIST
      679     1222    2        THEN
      680     1223    2             CALL PTRLIST;
      681     1224    2        ELSE
      682     1225    2             CALL ADD (EDIT_LENGTH, EDIT);
      683     1226    2        RETURN;
      684     1227    2   END PARAMETER;
      685     1228        /**/
      686     1229        %EJECT;
PL6.E3A0      #001=OCM$TEMPLATE File=OCM$MESSAGE.:E05TSI                         WED 07/30/97 04:00 Page:26   
      687     1230        /*
      688     1231             P T R _ L I S T
      689     1232                                                                           */
      690     1233        /*I* NAME:  PTR_LIST
      691     1234             PURPOSE:  To process an indirect parameter.
      692     1235             CALL:  CALL PTR_LIST
      693     1236             DESCRIPTION:  CHOICE_LIST is called repeatedly until
      694     1237                           a parameter which matches the indirect
      695     1238                           parameter is found, or there are no more
      696     1239                           choice lists.
      697     1240                           If there was a match, SKIP_TO is called to
      698     1241                           position past the pointer (indirect) list.
      699     1242                           If, however, no match was found but X was
      700     1243                           specified in a choice list, the template
      701     1244                           associated with that choice is positioned to
      702     1245                           and OCM$TEMPLATE is called to process the
      703     1246                           template.  The pointer list is then skipped
      704     1247                           over via SKIP_TO.
      705     1248                           If there was no match and X was not specified,
      706     1249                           nothing happens (this is equivalent to null
      707     1250                           parameter insertion).
      708     1251             ASSUMPTIONS:  OCM_TPOSN points past the TYP_PTRLIST# token
      709     1252                           upon entry.
      710     1253                                                                           */
      711     1254    1   PTRLIST: PROC;
      712     1255    2   DCL LIMIT UBIN WORD;
      713     1256    2        MATCH = '0'B /*FALSE#*/;
      714     1257    2        OPOSN = 0;
      715     1258    2        CALL GET_HALF(LIMIT);
      716     1259    2        LIMIT = LIMIT + OCM_TPOSN;
      717     1260    3        DO WHILE (OCM_TPOSN < LIMIT);
      718     1261    3             CALL GET_BYTE(TOKEN);
      719     1262    3             IF (TOKEN = 5 /* TYP_CHLIST# */)
      720     1263    3             THEN
      721     1264    3                  CALL CHOICELIST;
      722     1265    3             ELSE
      723     1266    3                  CALL OCM$DONE;
PL6.E3A0      #001=OCM$TEMPLATE File=OCM$MESSAGE.:E05TSI                         WED 07/30/97 04:00 Page:27   
      724     1267    3             IF MATCH
      725     1268    3             THEN
      726     1269    3                  CALL SKIP_TO(LIMIT);
      727     1270    3           END;
      728     1271    2        IF (LIMIT ~= OCM_TPOSN)
      729     1272    2        THEN
      730     1273    2             CALL OCM$DONE;
      731     1274    2        IF ~MATCH
      732     1275    2        THEN
      733     1276    2             IF (OPOSN ~= 0)               /* otherwise specified */
      734     1277    2             THEN
      735     1278    3             DO;
      736     1279    3                  CALL SKIP_TO(OPOSN);
      737     1280    3                  CALL GET_BYTE(TOKEN);
      738     1281    3                  IF(TOKEN = 0 /* TYP_TEMPLATE# */)
      739     1282    3                  THEN
      740     1283    4                  DO;
      741     1284    4                       CALL OCM$TEMPLATE;
      742     1285    4                       CALL SKIP_TO(LIMIT);
      743     1286    4                     END;
      744     1287    3                  ELSE
      745     1288    3                       CALL OCM$DONE;
      746     1289    3                END;
      747     1290    2        RETURN;
      748     1291    2   END PTRLIST;
      749     1292        /**/
      750     1293        %EJECT;
PL6.E3A0      #001=OCM$TEMPLATE File=OCM$MESSAGE.:E05TSI                         WED 07/30/97 04:00 Page:28   
      751     1294        /*
      752     1295             C H O I C E _ L I S T
      753     1296                                                                           */
      754     1297        /*I* NAME:  CHOICE_LIST
      755     1298             PURPOSE:  To determine whether the current choice list
      756     1299                       contains a match to the indirect parameter.
      757     1300             CALL:  CALL CHOICE_LIST;
      758     1301             DESCRIPTION:  Choices in the current choice list are
      759     1302                           compared sequentially with the indirect
      760     1303                           parameter;  if a match is found, the associated
      761     1304                           template is processed.  OCM_TPOSN is set to
      762     1305                           point past this choice list and match is set
      763     1306                           to indicate the result of the search.  If X was
      764     1307                           one of the choices scanned, OPOSN is set to
      765     1308                           indicate the position of its template.
      766     1309             ASSUMPTIONS:  EDIT and EDIT_LENGTH contain the indirect
      767     1310                           parameter and its length.  OCM_TPOSN points
      768     1311                           past the TYP_CHLIST# token upon entry.
      769     1312                                                                           */
      770     1313    1   CHOICELIST: PROC;
      771     1314    2   DCL LIMIT UBIN WORD;
      772     1315    2   DCL SIZE UBIN WORD;
      773     1316    2        CALL GET_HALF(LIMIT);
      774     1317    2        LIMIT = LIMIT + OCM_TPOSN;         /* point to template        */
      775     1318    3        DO WHILE (OCM_TPOSN < LIMIT);
      776     1319    3             CALL GET_BYTE(TOKEN);
      777     1320    4             DO CASE (TOKEN);
      778     1321    4             CASE (8 /* TYP_OTHERWISE# */);
      779     1322    4                OPOSN = LIMIT;             /* save pointer to template */
      780     1323    4                SIZE = 0;
      781     1324                                                /**/
      782     1325    4             CASE (7 /* TYP_NULL# */);
      783     1326    4                IF EDIT_LENGTH = 0
      784     1327    4                THEN
      785     1328    4                     MATCH = '1'B /*TRUE#*/;
      786     1329    4                ELSE
      787     1330    4                     SIZE = 0;
PL6.E3A0      #001=OCM$TEMPLATE File=OCM$MESSAGE.:E05TSI                         WED 07/30/97 04:00 Page:29   
      788     1331                                                /**/
      789     1332    4             CASE (6 /* TYP_CHOICE# */);
      790     1333    4                CALL GET_HALF(SIZE);
      791     1334    4                IF TEXTUAL
      792     1335    4                THEN
      793     1336    4                     IF (SIZE = EDIT_LENGTH)
      794     1337    4                     THEN
      795     1338    4                          IF (SUBSTR(EDIT, 0, SIZE) =
      796     1339    4                               SUBSTR(OCM_TEMPLATE, OCM_TPOSN, SIZE))
      797     1340    4                          THEN
      798     1341    4                               MATCH = '1'B /*TRUE#*/;
      799     1342    4                          ELSE ;
      800     1343    4                     ELSE ;
      801     1344    4                ELSE                       /* numeric        */
      802     1345    5                DO;
      803     1346    5                     IF (SIZE > 4)
      804     1347    5                     THEN
      805     1348    5                          TEMP.U = 4;
      806     1349    5                     ELSE
      807     1350    5                          TEMP.U = SIZE;
      808     1351    5                     NUMBER.U = 0;
      809     1352    5                     CALL INSERT(NUMBER.C, 4 - TEMP.S, TEMP.S,
      810     1353    5                          SUBSTR(OCM_TEMPLATE, OCM_TPOSN + SIZE - TEMP.S));
      811     1354    5                     IF (NUMBER.U = VALUE)
      812     1355    5                     THEN
      813     1356    5                          MATCH = '1'B /*TRUE#*/;
      814     1357    5                   END;
      815     1358                                                /**/
      816     1359    4             CASE (ELSE);
      817     1360    4                CALL OCM$DONE;
      818     1361                                                /**/
      819     1362    4             END;
      820     1363    3             IF MATCH                      /* advance OCM_TPOSN to template */
      821     1364    3             THEN
      822     1365    3                  CALL SKIP_TO(LIMIT);
      823     1366    3             ELSE
      824     1367    3                  CALL SKIP_TO (OCM_TPOSN + SIZE); /* no match yet   */
PL6.E3A0      #001=OCM$TEMPLATE File=OCM$MESSAGE.:E05TSI                         WED 07/30/97 04:00 Page:30   
      825     1368    3           END;
      826     1369    2        IF (LIMIT = OCM_TPOSN)
      827     1370    2        THEN
      828     1371    3        DO;
      829     1372    3             CALL GET_BYTE (TOKEN);
      830     1373    3             IF (TOKEN ~= 0 /* TYP_TEMPLATE# */)
      831     1374    3             THEN
      832     1375    3                  CALL OCM$DONE;
      833     1376    3             ELSE
      834     1377    3                  IF MATCH                 /* process this match */
      835     1378    3                  THEN
      836     1379    3                       CALL OCM$TEMPLATE;
      837     1380    4                  ELSE DO;
      838     1381    4                       CALL GET_HALF(LIMIT);
      839     1382    4                       CALL SKIP_TO (OCM_TPOSN + LIMIT);
      840     1383    4                     END;
      841     1384    3           END;
      842     1385    2        ELSE
      843     1386    2             CALL OCM$DONE;
      844     1387    2        RETURN;
      845     1388    2   END CHOICELIST;
      846     1389        /**/
      847     1390        %EJECT;
PL6.E3A0      #001=OCM$TEMPLATE File=OCM$MESSAGE.:E05TSI                         WED 07/30/97 04:00 Page:31   
      848     1391        /*
      849     1392                  Begin main routine
      850     1393                                                                           */
      851     1394    1        OCM_PROMPT.SIZE = 0;
      852     1395
      853     1396    1        CALL GET_HALF (LIMIT);
      854     1397    1        LIMIT = LIMIT + OCM_TPOSN;
      855     1398    2        DO WHILE (OCM_TPOSN < LIMIT);
      856     1399    2             CALL GET_BYTE(TOKEN);
      857     1400    3             DO CASE (TOKEN);
      858     1401    3             CASE (1 /* TYP_STRING# */);
      859     1402    3                CALL STRING;
      860     1403                                                /**/
      861     1404    3             CASE (2 /* TYP_PARAM# */);
      862     1405    3                CALL PARAMETER;
      863     1406                                                /**/
      864     1407    3             CASE (3 /* TYP_SAME# */);
      865     1408    3                CALL SAME;
      866     1409                                                /**/
      867     1410    3             CASE (ELSE);
      868     1411    3                CALL OCM$DONE;
      869     1412                                                /**/
      870     1413    3             END;
      871     1414    2           END;
      872     1415    1        IF (LIMIT ~= OCM_TPOSN)
      873     1416    1        THEN
      874     1417    1             CALL OCM$DONE;
      875     1418    1        ELSE
      876     1419    1             RETURN;
      877     1420    1   END OCM$TEMPLATE;
      878     1421        %EOD;

PL6.E3A0      #001=OCM$TEMPLATE File=OCM$MESSAGE.:E05TSI                         WED 07/30/97 04:00 Page:32   
--  Include file information  --

   OCM_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   OUT_SUBS_C.:E05TOU  is referenced.
   OC$MESSHD_C.:E05TOU  is referenced.
   OC_DAT_R.:E05TOU  cannot be made into a system file and is referenced.
   OCI_SUBS_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure OCM$TEMPLATE.

   Procedure OCM$TEMPLATE requires 1012 words for executable code.
   Procedure OCM$TEMPLATE requires 96 words of local(AUTO) storage.

PL6.E3A0      #001=OCM$TEMPLATE File=OCM$MESSAGE.:E05TSI                         WED 07/30/97 04:00 Page:33   

 Object Unit name= OCM$TEMPLATE                               File name= OCM$MESSAGE.:E05TOU
 UTS= JUL 30 '97 04:00:10.28 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0  RoData even  UTS     13     15  OCM$TEMPLATE
    1   DCB   even  none     0      0  M$UC
    2   Data  even  none    53     65  OCM$TEMPLATE
    3   Proc  even  none  1012   1764  OCM$TEMPLATE
    4  RoData even  none     5      5  OCM$TEMPLATE

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     3      0   yes            yes      Std        0  OCM$TEMPLATE

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       0 OCM$DONE
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_AUTO_0
                       nStd      0 X66_ARET
PL6.E3A0      #001=OCM$TEMPLATE File=OCM$MESSAGE.:E05TSI                         WED 07/30/97 04:00 Page:34   

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                                  OC_INTMSG                             OC_MESSBUF
     OC_MSGBUFFER                          OC_PARAM                              OC_CONSOLE$
     OC_MAXCONSOLE                         OC_DIR                                OC_INTBIT
     OC_MASK                               OCM_BPOSN                             OCM_TPOSN
     OCM_TSIZE                             OCM_PARAM#                            OCM_PARAM$
     OCM_BUFFER                            OCM_PARAM                             OCM_TEMPLATE
     OCM_PROMPT                            OCM_TSTAMP                            OCM_KEY_FLAG
     OCM_CLASSES                           B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID                                 NULLSID
PL6.E3A0      #001=OCM$TEMPLATE File=OCM$MESSAGE.:E05TSI                         WED 07/30/97 04:00 Page:35   


        1        1        /*M* OCM$MESSAGE  routines to format console messages */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* DMR,PLM=5,IND=5,CTI=5,SDI=5,MCL=10,CSI=0,ECI=0 */
        8        8        %SET LISTSUB='1'B;
        9        9        /*
       10       10         ###    ###   #   #   #   #   #  #####   ###    ###    ###    ###   #####
       11       11        #   #  #   #  ## ##  ###  ## ##  #      #   #  #   #  #   #  #   #  #
       12       12        #   #  #      # # # # #   # # #  #      #      #      #   #  #      #
       13       13        #   #  #      #   #  ###  #   #  ####    ###    ###   #####  #      ####
       14       14        #   #  #      #   #   # # #   #  #          #      #  #   #  #  ##  #
       15       15        #   #  #   #  #   #  ###  #   #  #      #   #  #   #  #   #  #   #  #
       16       16         ###    ###   #   #   #   #   #  #####   ###    ###   #   #   ###   #####
       17       17                                                                   */
       18       18                                                /**/
       19       19                                                /**/
       20       20        /*P* NAME: OCM$MESSAGE
       21       21             PURPOSE: To decode passed parameters and format them
       22       22                      into a message. */
       23       23                                                /**/
       24       24        %EJECT;
PL6.E3A0      #001=OCM$TEMPLATE File=OCM$MESSAGE.:E05TSI                         WED 07/30/97 04:00 Page:36   
       25       25                                                /**/
       26       26        /*M* OCM$TEMPLATE  procedure to format a template */
       27       27        /*
       28       28         ###    ###   #   #   #   #####  #####  #   #  ####   #       ###   #####  #####
       29       29        #   #  #   #  ## ##  ###    #    #      ## ##  #   #  #      #   #    #    #
       30       30        #   #  #      # # # # #     #    #      # # #  #   #  #      #   #    #    #
       31       31        #   #  #      #   #  ###    #    ####   #   #  ####   #      #####    #    ####
       32       32        #   #  #      #   #   # #   #    #      #   #  #      #      #   #    #    #
       33       33        #   #  #   #  #   #  ###    #    #      #   #  #      #      #   #    #    #
       34       34         ###    ###   #   #   #     #    #####  #   #  #      #####  #   #    #    #####
       35       35                                                                   */
       36       36        /*F* NAME: OCM$TEMPLATE
       37       37             PURPOSE:  To format a message template.
       38       38             DESCRIPTION:  Obtains the next token and calls the
       39       39                           appropriate formatting routine.
       40       40                                                                           */
       41       41        /*D* NAME: OCM$TEMPLATE
       42       42             CALL:  CALL OCM$TEMPLATE
       43       43             INTERFACE:  OCM$DONE, OCM$TEMPLATE (recursively)
       44       44             DESCRIPTION:  OCM$TEMPLATE obtains the next token from the
       45       45                           message template and calls the appropriate
       46       46                           routine based upon that token.  If the token
       47       47                           is neither TYP_STRING#, TYP_PARAM#, nor TYP_SAME#,
       48       48                           OCM$DONE is called to perform error termination.
       49       49             ASSUMPTIONS:   The template position pointer, OCM_TPOSN, is
       50       50                            positioned past the TYP_TEMPLATE# token in the
       51       51                            message template upon entry.
       52       52                                                                           */
       53       53                                                /**/
       54       54                                                /**/
       55       55        OCM$TEMPLATE: PROC;

     55  3 000000   000000 700200 xent  OCM$TEMPLATE TSX0  ! X66_AUTO_0
         3 000001   000140 000000                    ZERO    96,0
         3 000002   001702 710000 3                  TRA     s:1394

       56       56                                                /**/
PL6.E3A0      #001=OCM$TEMPLATE File=OCM$MESSAGE.:E05TSI                         WED 07/30/97 04:00 Page:37   
       57       57                                                /**/
       58       58                                                /**/
       59       59    1   DCL OCM$DONE ENTRY;
       60       60    1   DCL LIMIT UBIN WORD;
       61       61    1   DCL EDIT_LENGTH SBIN WORD;
       62       62    1   DCL OPOSN UBIN WORD;
       63       63    1   DCL TOKEN UBIN WORD;
       64       64    1   DCL VALUE UBIN WORD;
       65       65    1   DCL 1 NUMBER,
       66       66    1            2 B BIT(36) UNAL,
       67       67    1            2 U REDEF B UBIN WORD,
       68       68    1            2 C REDEF B CHAR(4) UNAL;
       69       69    1   DCL 1 JERR REDEF NUMBER,
       70       70    1            2 FCG(0:2) UBIN(6) UNAL,
       71       71    1            2 MON BIT(1) UNAL,
       72       72    1            2 ERR UBIN(14) UNAL,
       73       73    1            2 SEV UBIN(3) UNAL;
       74       74    1   DCL PIC_U UBIN WORD;
       75       75    1   DCL 1 PIC REDEF PIC_U,
       76       76    1            2 * BIT(27) UNAL,
       77       77    1            2 B BIT(9) UNAL;
       78       78    1   DCL 1 PICU REDEF PIC_U,
       79       79    1            2 * BIT(27) UNAL,
       80       80    1            2 * BIT(3) UNAL,
       81       81    1            2 TYPE UBIN(6) UNAL;
       82       82    1   DCL HEX_DIGITS CHAR(16) CONSTANT INIT('0123456789ABCDEF');
       83       83    1   DCL 1 TEMP,
       84       84    1            2 B BIT(36) UNAL,
       85       85    1            2 U REDEF B UBIN WORD,
       86       86    1            2 S REDEF B SBIN WORD;
       87       87    1   DCL EDIT CHAR(256) UNAL;
       88       88    1   DCL MATCH BIT(1) UNAL;
       89       89    1   DCL RIGHT BIT(1) UNAL;
       90       90    1   DCL TEXTUAL BIT(1) UNAL;
       91       91                                                /**/
       92       92        %INCLUDE CP_6;
       93      173                                                /**/
PL6.E3A0      #001=OCM$TEMPLATE File=OCM$MESSAGE.:E05TSI                         WED 07/30/97 04:00 Page:38   
       94      174             %FPT_TIME      (FPTN=GET_TIME1,
       95      175                                 TSTAMP = OCM_TSTAMP,
       96      176                                 SOURCE = UTS,
       97      177                                 DEST=LOCAL,
       98      178                                 DATE=TIME_STAMPL.LOCAL_DATE,
       99      179                                 TIME=TIME_STAMPL.LOCAL_TIME,
      100      180                                 DAY=TIME_STAMPL.LOCAL_DAY);
      101      199                                                /**/
      102      200                                                /**/
      103      201             %FPT_TIME      (FPTN=GET_TIME2,
      104      202                                 TSTAMP = OCM_TSTAMP,
      105      203                                 SOURCE=UTS,
      106      204                                 DEST=LOCAL,
      107      205                                 TIME=TIME_STAMPS.LOCAL_TIME);
      108      224                                                /**/
      109      225             %FPT_TIME      (FPTN=GET_TIME3,
      110      226                                 TSTAMP = OCM_TSTAMP,
      111      227                                 SOURCE=UTS,
      112      228                                 DEST=ANS,
      113      229                                 DAY=TIME_STAMPA.LOCAL_DAY);
      114      248                                                /**/
      115      249             %FPT_TIME      (FPTN=GET_TSTAMP,
      116      250                                 SOURCE = CLOCK,
      117      251                                 TSTAMP = OCM_TSTAMP,
      118      252                                 DEST=UTS);
      119      271    1   DCL 1 TIME_STAMPL STATIC,
      120      272    1            2 LOCAL_TIME CHAR(5) UNAL,
      121      273    1            2 * CHAR(1) UNAL,
      122      274    1            2 LOCAL_DATE CHAR(8) UNAL,
      123      275    1            2 * CHAR(1) UNAL,
      124      276    1            2 LOCAL_DAY CHAR(3) UNAL;
      125      277    1   DCL 1 TIME_STAMPS REDEF TIME_STAMPL,
      126      278    1            2 LOCAL_TIME CHAR(8) UNAL,
      127      279    1            2 * CHAR(10) UNAL;
      128      280    1   DCL 1 TIME_STAMPA REDEF TIME_STAMPL,
      129      281    1            2 * CHAR(6) UNAL,
      130      282    1            2 LOCAL_DAY CHAR(5) UNAL,
PL6.E3A0      #001=OCM$TEMPLATE File=OCM$MESSAGE.:E05TSI                         WED 07/30/97 04:00 Page:39   
      131      283    1            2 * CHAR(7) UNAL;
      132      284    1   DCL TIME_STRING REDEF TIME_STAMPL CHAR(18) UNAL;
      133      285                                           /* This array defines the size of
      134      286                                                each $MINUTES type primitive */
      135      287    1   DCL TIME_SIZE(0:5) SBIN BYTE CONSTANT UNAL
      136      288    1        INIT (0, 5, 8, 14, 11, 5);
      137      289                                                /**/
      138      290                                                /**/
      139      291        %INCLUDE OCI_SUBS_C;
      140      389        %INCLUDE OC_DAT_R;
      141      550        %INCLUDE OUT_SUBS_C;
      142      673        %INCLUDE OCM_DATA_R;
      143      686        /**/
      144      687        %EJECT;
PL6.E3A0      #001=OCM$TEMPLATE File=OCM$MESSAGE.:E05TSI                         WED 07/30/97 04:00 Page:40   
      145      688        /*
      146      689             G E T _ B Y T E
      147      690                                                                           */
      148      691        /*I* NAME: GET_BYTE
      149      692             PURPOSE:  To obtain the next byte from the message template.
      150      693             CALL:  CALL GET_BYTE (BYTE_);
      151      694             DESCRIPTION:  If there is no next byte, OCM$DONE is called.
      152      695                           Otherwise, the next byte is obtained from
      153      696                           OCM_TEMPLATE and the position pointer OCM_TPOSN
      154      697                           is incremented.
      155      698                                                                           */
      156      699    1   GET_BYTE: PROC(BYTE_);

    699  3 000003   200130 741300       GET_BYTE     STX1  ! SIZE+2,,AUTO

      157      700    2   DCL BYTE_ UBIN WORD;
      158      701    2        IF (OCM_TPOSN = OCM_TSIZE)

    701  3 000004   000000 236000 xsym               LDQ     OCM_TPOSN
         3 000005   000014 604000 3                  TMI     s:706
         3 000006   000000 116000 xsym               CMPQ    OCM_TSIZE
         3 000007   000014 601000 3                  TNZ     s:706

      159      702    2        THEN
      160      703    2             CALL OCM$DONE;

    703  3 000010   000002 631400 xsym               EPPR1   B_VECTNIL+2
         3 000011   000000 701000 xent               TSX1    OCM$DONE
         3 000012   000000 011000                    NOP     0
         3 000013   000023 710000 3                  TRA     s:709

      161      704    2        ELSE
      162      705    3        DO;

      163      706    3             BYTE_ = ASCBIN(SUBSTR(OCM_TEMPLATE, OCM_TPOSN, 1));

    706  3 000014   000100 101406                    MRL     fill='000'O
PL6.E3A0      #001=OCM$TEMPLATE File=OCM$MESSAGE.:E05TSI                         WED 07/30/97 04:00 Page:41   
         3 000015   000000 000001 xsym               ADSC9   OCM_TEMPLATE,Q           cn=0,n=1
         3 000016   200132 000004                    ADSC9   @POSN+1,,AUTO            cn=0,n=4
         3 000017   200132 236100                    LDQ     @POSN+1,,AUTO
         3 000020   200131 470500                    LDP0    @BYTE_,,AUTO
         3 000021   000000 756100                    STQ     0,,PR0

      164      707    3             OCM_TPOSN = OCM_TPOSN + 1;

    707  3 000022   000000 054000 xsym               AOS     OCM_TPOSN

      165      708    3           END;

      166      709    2        RETURN;

    709  3 000023   200130 221300                    LDX1  ! SIZE+2,,AUTO
         3 000024   000001 702211                    TSX2  ! 1,X1

      167      710    2   END GET_BYTE;
      168      711        /**/
      169      712        /**/
      170      713        %EJECT;
PL6.E3A0      #001=OCM$TEMPLATE File=OCM$MESSAGE.:E05TSI                         WED 07/30/97 04:00 Page:42   
      171      714        /*
      172      715             G E T _ H A L F
      173      716                                                                           */
      174      717        /* GET_HALF is the halfword equivalent of GET_BYTE, used in
      175      718                  cases where the count may exceed 1 byte.  These cases
      176      719                  are: new_template to process, or choice list to process */
      177      720                                                /**/
      178      721    1   GET_HALF: PROC (HALF_);

    721  3 000025   200130 741300       GET_HALF     STX1  ! SIZE+2,,AUTO

      179      722    2   DCL HALF_ UBIN WORD;
      180      723    2   DCL BYTES_ REDEF HALF_ CHAR(4);
      181      724                                                /**/
      182      725    2        IF OCM_TPOSN = OCM_TSIZE

    725  3 000026   000000 236000 xsym               LDQ     OCM_TPOSN
         3 000027   000036 604000 3                  TMI     s:730
         3 000030   000000 116000 xsym               CMPQ    OCM_TSIZE
         3 000031   000036 601000 3                  TNZ     s:730

      183      726    2        THEN
      184      727    2             CALL OCM$DONE;

    727  3 000032   000002 631400 xsym               EPPR1   B_VECTNIL+2
         3 000033   000000 701000 xent               TSX1    OCM$DONE
         3 000034   000000 011000                    NOP     0
         3 000035   000046 710000 3                  TRA     s:735

      185      728    2        ELSE
      186      729    3        DO;

      187      730    3             HALF_ = 0;

    730  3 000036   200131 470500                    LDP0    @HALF_,,AUTO
         3 000037   000000 450100                    STZ     0,,PR0

PL6.E3A0      #001=OCM$TEMPLATE File=OCM$MESSAGE.:E05TSI                         WED 07/30/97 04:00 Page:43   
      188      731    3             CALL INSERT (BYTES_, 2, 2,

    731  3 000040   000000 235000 xsym               LDA     OCM_TPOSN
         3 000041   040100 100405                    MLR     fill='040'O
         3 000042   000000 000002 xsym               ADSC9   OCM_TEMPLATE,A           cn=0,n=2
         3 000043   000000 400002                    ADSC9   0,,PR0                   cn=2,n=2

      189      732    3                  SUBSTR(OCM_TEMPLATE, OCM_TPOSN, 2));
      190      733    3             OCM_TPOSN = OCM_TPOSN + 2;

    733  3 000044   000002 236007                    LDQ     2,DL
         3 000045   000000 056000 xsym               ASQ     OCM_TPOSN

      191      734    3           END;                            /* DO if sizes okay */

      192      735    2        RETURN;

    735  3 000046   200130 221300                    LDX1  ! SIZE+2,,AUTO
         3 000047   000001 702211                    TSX2  ! 1,X1

      193      736    2   END GET_HALF;
      194      737        /**/
      195      738        %EJECT;
PL6.E3A0      #001=OCM$TEMPLATE File=OCM$MESSAGE.:E05TSI                         WED 07/30/97 04:00 Page:44   
      196      739        /*
      197      740             A D D
      198      741                                                                           */
      199      742        /*I* NAME: ADD
      200      743             CALL:  CALL ADD (LENGTH_, STRING_);
      201      744             DESCRIPTION:  As much of STRING_ as possible is added to
      202      745                           OCM_BUFFER and OCM_BPOSN is incremented
      203      746                           accordingly.
      204      747                                                                           */
      205      748    1   ADD: PROC(LENGTH_, STRING_);

    748  3 000050   200122 741300       ADD          STX1  ! CALL_PTRLIST+1,,AUTO

      206      749    2   DCL LENGTH_ UBIN WORD;
      207      750    2   DCL STRING_ CHAR(LENGTH_);
      208      751    2   DCL SIZE UBIN WORD;
      209      752    2        IF ((OCM_BPOSN = 256) | (LENGTH_ = 0))

    752  3 000051   400000 220003                    LDX0    -131072,DU
         3 000052   000000 235000 xsym               LDA     OCM_BPOSN
         3 000053   000400 115007                    CMPA    256,DL
         3 000054   000056 600000 3                  TZE     s:752+5
         3 000055   000000 220003                    LDX0    0,DU
         3 000056   400000 222003                    LDX2    -131072,DU
         3 000057   200123 470500                    LDP0    @LENGTH_,,AUTO
         3 000060   000000 235100                    LDA     0,,PR0
         3 000061   000063 600000 3                  TZE     s:752+10
         3 000062   000000 222003                    LDX2    0,DU
         3 000063   000000 636012                    EAQ     0,X2
         3 000064   200132 756100                    STQ     @POSN+1,,AUTO
         3 000065   000000 636010                    EAQ     0,X0
         3 000066   200132 276100                    ORQ     @POSN+1,,AUTO
         3 000067   000071 600000 3                  TZE     s:755

      210      753    2        THEN                               /* impossible to or nothing to add */
      211      754    2             RETURN;

PL6.E3A0      #001=OCM$TEMPLATE File=OCM$MESSAGE.:E05TSI                         WED 07/30/97 04:00 Page:45   
    754  3 000070   000001 702211                    TSX2  ! 1,X1

      212      755    2        IF ((OCM_BPOSN + LENGTH_) > 256)

    755  3 000071   000000 236000 xsym               LDQ     OCM_BPOSN
         3 000072   000000 036100                    ADLQ    0,,PR0
         3 000073   000400 116007                    CMPQ    256,DL
         3 000074   000101 604400 3                  TMOZ    s:759

      213      756    2        THEN
      214      757    2             SIZE = 256 - OCM_BPOSN;

    757  3 000075   000400 235007                    LDA     256,DL
         3 000076   000000 135000 xsym               SBLA    OCM_BPOSN
         3 000077   200125 755100                    STA     SIZE,,AUTO
         3 000100   000103 710000 3                  TRA     s:760

      215      758    2        ELSE
      216      759    2             SIZE = LENGTH_;

    759  3 000101   000000 235100                    LDA     0,,PR0
         3 000102   200125 755100                    STA     SIZE,,AUTO

      217      760    2        CALL INSERT(OCM_BUFFER, OCM_BPOSN, SIZE, STRING_);

    760  3 000103   000000 720100                    LXL0    0,,PR0
         3 000104   200124 471500                    LDP1    @STRING_,,AUTO
         3 000105   000000 622005                    EAX2    0,AL
         3 000106   000000 235000 xsym               LDA     OCM_BPOSN
         3 000107   040045 100540                    MLR     fill='040'O
         3 000110   100000 000010                    ADSC9   0,,PR1                   cn=0,n=*X0
         3 000111   000000 000012 xsym               ADSC9   OCM_BUFFER,A             cn=0,n=*X2

      218      761    2        OCM_BPOSN = OCM_BPOSN + SIZE;

    761  3 000112   000000 236000 xsym               LDQ     OCM_BPOSN
         3 000113   200125 036100                    ADLQ    SIZE,,AUTO
PL6.E3A0      #001=OCM$TEMPLATE File=OCM$MESSAGE.:E05TSI                         WED 07/30/97 04:00 Page:46   
         3 000114   000000 756000 xsym               STQ     OCM_BPOSN

      219      762    2        RETURN;

    762  3 000115   000001 702211                    TSX2  ! 1,X1

      220      763    2   END ADD;
      221      764        /**/
      222      765        %EJECT;
PL6.E3A0      #001=OCM$TEMPLATE File=OCM$MESSAGE.:E05TSI                         WED 07/30/97 04:00 Page:47   
      223      766        /*
      224      767             G E T _ P A R A M
      225      768                                                                           */
      226      769        /*I* NAME: GET_PARAM
      227      770             CALL:  CALL GET_PARAM (LENGTH_);
      228      771             DESCRIPTION:  If OCM_PARAM# indicates a special parameter
      229      772                           (e.g., device name), it is placed in OCM_PARAM and
      230      773                           LENGTH_ is set appropriately.  If OCM_PARAM# is
      231      774                           greater than the number of message parameters,
      232      775                           LENGTH_ is set to zero to indicate a null parameter.
      233      776                           Otherwise, the correct parameter is obtained and
      234      777                           placed in OCM_PARAM and LENGTH_ is set to indicate
      235      778                           this parameter's length.
      236      779                                                                           */
      237      780    1   GET_PARAM: PROC(LENGTH_);

    780  3 000116   200122 741300       GET_PARAM    STX1  ! CALL_PTRLIST+1,,AUTO

      238      781    2   DCL LENGTH_ UBIN WORD;
      239      782    2   DCL OFFSET SBIN WORD;
      240      783    2   DCL I SBIN WORD;
      241      784    2   DCL STRING CHAR(LENGTH_) BASED;
      242      785        %EJECT;
PL6.E3A0      #001=OCM$TEMPLATE File=OCM$MESSAGE.:E05TSI                         WED 07/30/97 04:00 Page:48   
      243      786    2        IF OCM_PARAM# >= %450 /* DEVICE# */

    786  3 000117   000000 235000 xsym               LDA     OCM_PARAM#
         3 000120   000702 115007                    CMPA    450,DL
         3 000121   000401 604000 3                  TMI     s:902

      244      787    2        THEN
      245      788    3        DO;

      246      789    3             IF OCM_PARAM# < (%450 /* DEVICE# */ + 3 /* $MINUTES */ - 0 /* $DEVICE */)

    789  3 000122   000705 115007                    CMPA    453,DL
         3 000123   000303 605000 3                  TPL     s:843

      247      790    3             THEN
      248      791    4             DO CASE (OCM_PARAM# - %450 /* DEVICE# */ + 0 /* $DEVICE */);

    791  3 000124   000702 135007                    SBLA    450,DL
         3 000125   000003 115007                    CMPA    3,DL
         3 000126   000130 602005 3                  TNC     s:791+4,AL
         3 000127   000451 710000 3                  TRA     s:921
         3 000130   000133 710000 3                  TRA     s:794
         3 000131   000142 710000 3                  TRA     s:798
         3 000132   000152 710000 3                  TRA     s:802

      249      792                                                /**/
      250      793    4             CASE (0 /* $DEVICE */);

      251      794    4                LENGTH_ = 4;

    794  3 000133   000004 236007                    LDQ     4,DL
         3 000134   200123 470500                    LDP0    @LENGTH_,,AUTO
         3 000135   000000 756100                    STQ     0,,PR0

      252      795    4                OCM_PARAM = OC_MESSBUF.DEVNM;

    795  3 000136   040000 100400                    MLR     fill='040'O
PL6.E3A0      #001=OCM$TEMPLATE File=OCM$MESSAGE.:E05TSI                         WED 07/30/97 04:00 Page:49   
         3 000137   000003 000010 xsym               ADSC9   OC_MESSBUF+3             cn=0,n=8
         3 000140   000000 000400 xsym               ADSC9   OCM_PARAM                cn=0,n=256
         3 000141   000451 710000 3                  TRA     s:921

      253      796                                                /**/
      254      797    4             CASE (1 /* $SYSID */);

      255      798    4                LENGTH_ = 2;

    798  3 000142   000002 236007                    LDQ     2,DL
         3 000143   200123 470500                    LDP0    @LENGTH_,,AUTO
         3 000144   000000 756100                    STQ     0,,PR0

      256      799    4                OCM_PARAM = ADDR(OC_MESSBUF.SYSID) -> STRING;

    799  3 000145   000000 720100                    LXL0    0,,PR0
         3 000146   040000 100440                    MLR     fill='040'O
         3 000147   000001 000010 xsym               ADSC9   OC_MESSBUF+1             cn=0,n=*X0
         3 000150   000000 000400 xsym               ADSC9   OCM_PARAM                cn=0,n=256
         3 000151   000451 710000 3                  TRA     s:921

      257      800                                                /**/
      258      801    4             CASE (2 /* $PROMPT */);               /* TEMPCODE */

      259      802    4                IF OCM_KEY_FLAG            /* GET INFORMATION */

    802  3 000152   000000 234000 xsym               SZN     OCM_KEY_FLAG
         3 000153   000273 605000 3                  TPL     s:835

      260      803    4                THEN
      261      804    5                DO;

      262      805    5                     IF OC_MESSBUF.CADDR & '400000'O /* direct? */

    805  3 000154   000000 220000 xsym               LDX0    OC_MESSBUF
         3 000155   400000 360003                    ANX0    -131072,DU
         3 000156   000264 600000 3                  TZE     s:829
PL6.E3A0      #001=OCM$TEMPLATE File=OCM$MESSAGE.:E05TSI                         WED 07/30/97 04:00 Page:50   

      263      806    5                     THEN
      264      807    6                     DO;

      265      808    6                          LENGTH_ = BITBIN(OC_MESSBUF.CADDR & '377777'O);

    808  3 000157   000000 220000 xsym               LDX0    OC_MESSBUF
         3 000160   377777 360003                    ANX0    131071,DU
         3 000161   000000 636010                    EAQ     0,X0
         3 000162   000022 772000                    QRL     18
         3 000163   200123 470500                    LDP0    @LENGTH_,,AUTO
         3 000164   000000 756100                    STQ     0,,PR0

      266      809    7                          DO I = 1 TO OC_MAXCONSOLE /* MAX_CONSOLES# */;

    809  3 000165   000001 235007                    LDA     1,DL
         3 000166   200125 755100                    STA     I,,AUTO
         3 000167   000257 710000 3                  TRA     s:825+1

      267      810    7                               IF OC_CONSOLE.CID(I) = LENGTH_

    810  3 000170   200123 470500                    LDP0    @LENGTH_,,AUTO
         3 000171   200125 236100                    LDQ     I,,AUTO
         3 000172   000076 402007                    MPY     62,DL
         3 000173   000000 471400 xsym               LDP1    OC_CONSOLE$
         3 000174   100012 236106                    LDQ     10,QL,PR1
         3 000175   000022 772000                    QRL     18
         3 000176   000000 116100                    CMPQ    0,,PR0
         3 000177   000256 601000 3                  TNZ     s:825

      268      811    7                               THEN
      269      812    8                               DO;

      270      813    8                                    OFFSET = OC_MESSBUF.PFB;

    813  3 000200   000002 236000 xsym               LDQ     OC_MESSBUF+2
         3 000201   000033 772000                    QRL     27
PL6.E3A0      #001=OCM$TEMPLATE File=OCM$MESSAGE.:E05TSI                         WED 07/30/97 04:00 Page:51   
         3 000202   200124 756100                    STQ     OFFSET,,AUTO

      271      814    8                                    IF OFFSET = 0 THEN OFFSET = 1;

    814  3 000203   000206 601000 3                  TNZ     s:815

    814  3 000204   000001 235007                    LDA     1,DL
         3 000205   200124 755100                    STA     OFFSET,,AUTO

      272      815    8                                    IF OFFSET > 3 THEN OFFSET = 2;

    815  3 000206   200124 235100                    LDA     OFFSET,,AUTO
         3 000207   000003 115007                    CMPA    3,DL
         3 000210   000213 604400 3                  TMOZ    s:816

    815  3 000211   000002 235007                    LDA     2,DL
         3 000212   200124 755100                    STA     OFFSET,,AUTO

      273      816    8                                    OFFSET = OFFSET - 1;

    816  3 000213   000001 336007                    LCQ     1,DL
         3 000214   200124 056100                    ASQ     OFFSET,,AUTO

      274      817    8                                    LENGTH_ = ADDR(OC_CONSOLE.PROMPTS(I))

    817  3 000215   200124 236100                    LDQ     OFFSET,,AUTO
         3 000216   000042 402007                    MPY     34,DL
         3 000217   200132 756100                    STQ     @POSN+1,,AUTO
         3 000220   200125 236100                    LDQ     I,,AUTO
         3 000221   000370 402007                    MPY     248,DL
         3 000222   200132 036100                    ADLQ    @POSN+1,,AUTO
         3 000223   000011 402007                    MPY     9,DL
         3 000224   000000 116003                    CMPQ    0,DU
         3 000225   000227 605000 3                  TPL     s:817+10
         3 000226   000044 036003                    ADLQ    36,DU
         3 000227   003100 061506                    CSR     bolr='003'O
         3 000230   100022 010010                    BDSC    18,Q,PR1                 by=0,bit=1,n=8
PL6.E3A0      #001=OCM$TEMPLATE File=OCM$MESSAGE.:E05TSI                         WED 07/30/97 04:00 Page:52   
         3 000231   000000 000044                    BDSC    0,,PR0                   by=0,bit=0,n=36

      275      818    8                                         -> PROMPT_TABLE.COUNT_(OFFSET);
      276      819    8                                    OCM_PARAM = ADDR(OC_CONSOLE.PROMPTS(I))

    819  3 000232   200124 236100                    LDQ     OFFSET,,AUTO
         3 000233   000042 402007                    MPY     34,DL
         3 000234   200132 756100                    STQ     @POSN+1,,AUTO
         3 000235   200125 236100                    LDQ     I,,AUTO
         3 000236   000370 402007                    MPY     248,DL
         3 000237   200132 036100                    ADLQ    @POSN+1,,AUTO
         3 000240   000000 471400 xsym               LDP1    OC_CONSOLE$
         3 000241   040000 100506                    MLR     fill='040'O
         3 000242   100022 200037                    ADSC9   18,Q,PR1                 cn=1,n=31
         3 000243   000000 000400 xsym               ADSC9   OCM_PARAM                cn=0,n=256

      277      820    8                                         -> PROMPT_TABLE.PROMPT(OFFSET);
      278      821    8                                    OCM_PROMPT.SIZE = LENGTH_; /* SAVE LENGTH */

    821  3 000244   000000 236100                    LDQ     0,,PR0
         3 000245   000033 736000                    QLS     27
         3 000246   000000 552040 xsym               STBQ    OCM_PROMPT,'40'O

      279      822    8                                    OCM_PROMPT.TEXT = OCM_PARAM; /* SAVE PROMPT */

    822  3 000247   040000 100400                    MLR     fill='040'O
         3 000250   000000 000037 xsym               ADSC9   OCM_PARAM                cn=0,n=31
         3 000251   000000 200037 xsym               ADSC9   OCM_PROMPT               cn=1,n=31

      280      823    8                                    I = OC_MAXCONSOLE + 1 /* NUM_CONSOLES# */;
               823                                             /* to exit quick */

    823  3 000252   000000 235000 xsym               LDA     OC_MAXCONSOLE
         3 000253   000022 771000                    ARL     18
         3 000254   000001 035007                    ADLA    1,DL
         3 000255   200125 755100                    STA     I,,AUTO

PL6.E3A0      #001=OCM$TEMPLATE File=OCM$MESSAGE.:E05TSI                         WED 07/30/97 04:00 Page:53   
      281      824    8                                  END;     /* DO IF found */

      282      825    7                             END;          /* DO I = 0 TO MAX */

    825  3 000256   200125 054100                    AOS     I,,AUTO
         3 000257   000000 236000 xsym               LDQ     OC_MAXCONSOLE
         3 000260   000022 772000                    QRL     18
         3 000261   200125 116100                    CMPQ    I,,AUTO
         3 000262   000170 605000 3                  TPL     s:810

      283      826    6                        END;               /* DO IF DIRECT */

    826  3 000263   000451 710000 3                  TRA     s:921

      284      827    5                     ELSE
      285      828    6                     DO;

      286      829    6                          LENGTH_ = 6;

    829  3 000264   000006 236007                    LDQ     6,DL
         3 000265   200123 470500                    LDP0    @LENGTH_,,AUTO
         3 000266   000000 756100                    STQ     0,,PR0

      287      830    6                          OCM_PARAM = '$$$$$$';

    830  3 000267   040000 100400                    MLR     fill='040'O
         3 000270   000006 000006 0                  ADSC9   TIME_SIZE+2              cn=0,n=6
         3 000271   000000 000400 xsym               ADSC9   OCM_PARAM                cn=0,n=256

      288      831    6                        END;               /* DO IF INDIRECT (???) */

      289      832    5                   END;                    /* END IF USE CONSOLE */

    832  3 000272   000451 710000 3                  TRA     s:921

      290      833    4                ELSE
      291      834    5                DO;                        /* USE INFO STORED IN OCM_ */
PL6.E3A0      #001=OCM$TEMPLATE File=OCM$MESSAGE.:E05TSI                         WED 07/30/97 04:00 Page:54   

      292      835    5                     OCM_PARAM = OCM_PROMPT.TEXT;

    835  3 000273   040000 100400                    MLR     fill='040'O
         3 000274   000000 200037 xsym               ADSC9   OCM_PROMPT               cn=1,n=31
         3 000275   000000 000400 xsym               ADSC9   OCM_PARAM                cn=0,n=256

      293      836    5                     LENGTH_ = OCM_PROMPT.SIZE;

    836  3 000276   200123 470500                    LDP0    @LENGTH_,,AUTO
         3 000277   000000 236000 xsym               LDQ     OCM_PROMPT
         3 000300   000033 772000                    QRL     27
         3 000301   000000 756100                    STQ     0,,PR0

      294      837    5                   END;

      295      838                                                /**/
      296      839    4             END;                          /* CASE (PARAM-DEVICE#+$DEVICE) */

    839  3 000302   000451 710000 3                  TRA     s:921

      297      840        %EJECT;
PL6.E3A0      #001=OCM$TEMPLATE File=OCM$MESSAGE.:E05TSI                         WED 07/30/97 04:00 Page:55   
      298      841    3             ELSE
      299      842    4             DO;                           /* Process $MINUTES/$CLASS */

      300      843    4                  IF OCM_PARAM# < (%450 /* DEVICE# */ + 10 /* $CLASS */ - 0
               843                           /* $DEVICE */)

    843  3 000303   000714 115007                    CMPA    460,DL
         3 000304   000364 605000 3                  TPL     s:894

      301      844    4                  THEN
      302      845    5                  DO;

      303      846                                           /* Process the minutes token here
      304      847                                                note that $MINUTES is the
      305      848                                                zero for the subtraction....
      306      849                                                and is illegal as an option */
      307      850                                                /**/
      308      851    5                       I = OCM_PARAM# - %450 /* DEVICE# */ - 3 /* $MINUTES */ + 0
               851                                /* $DEVICE */;

    851  3 000305   000705 135007                    SBLA    453,DL
         3 000306   200125 755100                    STA     I,,AUTO

      309      852                                                /**/
      310      853                                           /* The TIME_SIZE array is INITed to
      311      854                                                the amount of the time buffer
      312      855                                                to move, depending on which
      313      856                                                option was selected by the
      314      857                                                template */
      315      858    5                       LENGTH_ = TIME_SIZE(I);

    858  3 000307   000100 100405                    MLR     fill='000'O
         3 000310   000004 000001 0                  ADSC9   TIME_SIZE,A              cn=0,n=1
         3 000311   200132 000004                    ADSC9   @POSN+1,,AUTO            cn=0,n=4
         3 000312   200132 236100                    LDQ     @POSN+1,,AUTO
         3 000313   000033 732000                    QRS     27
         3 000314   200123 470500                    LDP0    @LENGTH_,,AUTO
PL6.E3A0      #001=OCM$TEMPLATE File=OCM$MESSAGE.:E05TSI                         WED 07/30/97 04:00 Page:56   
         3 000315   000000 756100                    STQ     0,,PR0

      316      859    5                       TIME_STRING = ' ';

    859  3 000316   040000 100400                    MLR     fill='040'O
         3 000317   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         3 000320   000060 000022 2                  ADSC9   TIME_STAMPL              cn=0,n=18

      317      860                                                /**/
      318      861    5                       IF OCM_KEY_FLAG     /* GET TIME  */

    861  3 000321   000000 234000 xsym               SZN     OCM_KEY_FLAG
         3 000322   000326 605000 3                  TPL     s:864

      319      862    5                       THEN
      320      863    5                            CALL M$TIME(GET_TSTAMP);

    863  3 000323   000044 630400 2                  EPPR0   GET_TSTAMP
         3 000324   020004 713400                    CLIMB   8196
         3 000325   402000 401760                    pmme    nvectors=5

      321      864    6                       DO CASE(I);         /* TYPE of M$TIME to use */

    864  3 000326   200125 235100                    LDA     I,,AUTO
         3 000327   000006 115007                    CMPA    6,DL
         3 000330   000332 602005 3                  TNC     s:864+4,AL
         3 000331   000356 710000 3                  TRA     s:882
         3 000332   000356 710000 3                  TRA     s:882
         3 000333   000340 710000 3                  TRA     s:868
         3 000334   000344 710000 3                  TRA     s:872
         3 000335   000340 710000 3                  TRA     s:868
         3 000336   000350 710000 3                  TRA     s:877
         3 000337   000340 710000 3                  TRA     s:868

      322      865                                                /**/
      323      866    6                       CASE(1,3,5);        /* HH:MM MM/DD/YY */

PL6.E3A0      #001=OCM$TEMPLATE File=OCM$MESSAGE.:E05TSI                         WED 07/30/97 04:00 Page:57   
      324      867                                                /**/
      325      868    6                          CALL M$TIME (GET_TIME1);

    868  3 000340   000000 630400 2                  EPPR0   GET_TIME1
         3 000341   020004 713400                    CLIMB   8196
         3 000342   402000 401760                    pmme    nvectors=5
         3 000343   000356 710000 3                  TRA     s:882

      326      869                                                /**/
      327      870    6                       CASE(2);            /* HH:MM:SS */

      328      871                                                /**/
      329      872    6                          CALL M$TIME (GET_TIME2);

    872  3 000344   000014 630400 2                  EPPR0   GET_TIME2
         3 000345   020004 713400                    CLIMB   8196
         3 000346   402000 401760                    pmme    nvectors=5
         3 000347   000356 710000 3                  TRA     s:882

      330      873                                                /**/
      331      874                                                /* (JULIAN style) */
      332      875    6                       CASE(4);            /* HH:MM YYDDD */

      333      876                                                /**/
      334      877    6                          CALL M$TIME (GET_TIME1);

    877  3 000350   000000 630400 2                  EPPR0   GET_TIME1
         3 000351   020004 713400                    CLIMB   8196
         3 000352   402000 401760                    pmme    nvectors=5

      335      878    6                          CALL M$TIME (GET_TIME3);

    878  3 000353   000030 630400 2                  EPPR0   GET_TIME3
         3 000354   020004 713400                    CLIMB   8196
         3 000355   402000 401760                    pmme    nvectors=5

      336      879                                                /**/
PL6.E3A0      #001=OCM$TEMPLATE File=OCM$MESSAGE.:E05TSI                         WED 07/30/97 04:00 Page:58   
      337      880    6                       END;                /* DO CASE (TYPE OF $MIN); */

      338      881                                                /**/
      339      882    5                       OCM_PARAM = SUBSTR(TIME_STRING, 0, LENGTH_);

    882  3 000356   200123 470500                    LDP0    @LENGTH_,,AUTO
         3 000357   000000 720100                    LXL0    0,,PR0
         3 000360   040000 100440                    MLR     fill='040'O
         3 000361   000060 000010 2                  ADSC9   TIME_STAMPL              cn=0,n=*X0
         3 000362   000000 000400 xsym               ADSC9   OCM_PARAM                cn=0,n=256

      340      883                                                /**/
      341      884    5                     END;                  /* DO IF $MINUTES */

    884  3 000363   000451 710000 3                  TRA     s:921

      342      885        %EJECT;
PL6.E3A0      #001=OCM$TEMPLATE File=OCM$MESSAGE.:E05TSI                         WED 07/30/97 04:00 Page:59   
      343      886    4                  ELSE
      344      887    5                  DO;

      345      888                                                /* Process the message class
      346      889                                                     token here. The output
      347      890                                                     buffer is stuffed with
      348      891                                                     certain characters
      349      892                                                     contained in the OCM_CLASS
      350      893                                                     array                */
      351      894    5                       I = OCM_PARAM# - %450 /* DEVICE# */ - 10 /* $CLASS */ + 0
               894                                /* $DEVICE */;

    894  3 000364   000714 135007                    SBLA    460,DL
         3 000365   200125 755100                    STA     I,,AUTO

      352      895    5                       LENGTH_ = OCM_CLASSES.COUNT_(I);

    895  3 000366   200125 236100                    LDQ     I,,AUTO
         3 000367   000075 402007                    MPY     61,DL
         3 000370   200123 470500                    LDP0    @LENGTH_,,AUTO
         3 000371   000100 101406                    MRL     fill='000'O
         3 000372   000000 000001 xsym               ADSC9   OCM_CLASSES,Q            cn=0,n=1
         3 000373   000000 000004                    ADSC9   0,,PR0                   cn=0,n=4

      353      896    5                       OCM_PARAM = ADDR(OCM_CLASSES.TEXT_(I))->STRING;

    896  3 000374   000000 720100                    LXL0    0,,PR0
         3 000375   040000 100446                    MLR     fill='040'O
         3 000376   000000 200010 xsym               ADSC9   OCM_CLASSES,Q            cn=1,n=*X0
         3 000377   000000 000400 xsym               ADSC9   OCM_PARAM                cn=0,n=256

      354      897    5                     END;                  /* DO IF $CLASS */

      355      898    4                END;                       /* DO IF $MINUTES OR $CLASS */

      356      899    3           END;                            /* DO IF PARAM# > DEVICE# */

PL6.E3A0      #001=OCM$TEMPLATE File=OCM$MESSAGE.:E05TSI                         WED 07/30/97 04:00 Page:60   
    899  3 000400   000451 710000 3                  TRA     s:921

      357      900        %EJECT;
PL6.E3A0      #001=OCM$TEMPLATE File=OCM$MESSAGE.:E05TSI                         WED 07/30/97 04:00 Page:61   
      358      901    2        ELSE
      359      902    2             IF (OCM_PARAM# > OC_MESSBUF.NPARAMS)

    902  3 000401   000001 236000 xsym               LDQ     OC_MESSBUF+1
         3 000402   000011 772000                    QRL     9
         3 000403   000777 376007                    ANQ     511,DL
         3 000404   000000 116000 xsym               CMPQ    OCM_PARAM#
         3 000405   000411 605000 3                  TPL     s:907

      360      903    2             THEN
      361      904    2                  LENGTH_ = 0;             /* Indicate null entry */

    904  3 000406   200123 470500                    LDP0    @LENGTH_,,AUTO
         3 000407   000000 450100                    STZ     0,,PR0
         3 000410   000451 710000 3                  TRA     s:921

      362      905    2             ELSE
      363      906    3             DO;

      364      907    3                  LENGTH_ = OC_MESSBUF.LEN (OCM_PARAM# - 1);

    907  3 000411   200123 470500                    LDP0    @LENGTH_,,AUTO
         3 000412   000100 101405                    MRL     fill='000'O
         3 000413   000004 600001 xsym               ADSC9   OC_MESSBUF+4,A           cn=3,n=1
         3 000414   000000 000004                    ADSC9   0,,PR0                   cn=0,n=4

      365      908    3                  IF (LENGTH_ ~= 0)

    908  3 000415   000000 235100                    LDA     0,,PR0
         3 000416   000451 600000 3                  TZE     s:921

      366      909    3                  THEN
      367      910    4                  DO;

      368      911    4                       IF (LENGTH_ > 256)

    911  3 000417   000401 115007                    CMPA    257,DL
PL6.E3A0      #001=OCM$TEMPLATE File=OCM$MESSAGE.:E05TSI                         WED 07/30/97 04:00 Page:62   
         3 000420   000423 602000 3                  TNC     s:914

      369      912    4                       THEN
      370      913    4                            LENGTH_ = 256;

    913  3 000421   000400 236007                    LDQ     256,DL
         3 000422   000000 756100                    STQ     0,,PR0

      371      914    4                       OFFSET = 0;

    914  3 000423   200124 450100                    STZ     OFFSET,,AUTO

      372      915    5                       DO I = 0 TO (OCM_PARAM# - 2);

    915  3 000424   200125 450100                    STZ     I,,AUTO
         3 000425   000436 710000 3                  TRA     s:917+1

      373      916    5                            OFFSET = OFFSET + OC_MESSBUF.LEN(I);

    916  3 000426   200125 235100                    LDA     I,,AUTO
         3 000427   000100 101405                    MRL     fill='000'O
         3 000430   000005 000001 xsym               ADSC9   OC_MESSBUF+5,A           cn=0,n=1
         3 000431   200132 000004                    ADSC9   @POSN+1,,AUTO            cn=0,n=4
         3 000432   200132 236100                    LDQ     @POSN+1,,AUTO
         3 000433   200124 036100                    ADLQ    OFFSET,,AUTO
         3 000434   200124 756100                    STQ     OFFSET,,AUTO

      374      917    5                          END;

    917  3 000435   200125 054100                    AOS     I,,AUTO
         3 000436   000000 236000 xsym               LDQ     OCM_PARAM#
         3 000437   000002 136007                    SBLQ    2,DL
         3 000440   200125 116100                    CMPQ    I,,AUTO
         3 000441   000426 605000 3                  TPL     s:916

      375      918    4                       OCM_PARAM = PINCRC (OCM_PARAM$, OFFSET) -> STRING;

PL6.E3A0      #001=OCM$TEMPLATE File=OCM$MESSAGE.:E05TSI                         WED 07/30/97 04:00 Page:63   
    918  3 000442   200123 470500                    LDP0    @LENGTH_,,AUTO
         3 000443   000000 720100                    LXL0    0,,PR0
         3 000444   000000 471400 xsym               LDP1    OCM_PARAM$
         3 000445   200124 235100                    LDA     OFFSET,,AUTO
         3 000446   040000 100545                    MLR     fill='040'O
         3 000447   100000 000010                    ADSC9   0,A,PR1                  cn=0,n=*X0
         3 000450   000000 000400 xsym               ADSC9   OCM_PARAM                cn=0,n=256

      376      919    4                     END;

      377      920    3                END;

      378      921    2        RETURN;

    921  3 000451   200122 221300                    LDX1  ! CALL_PTRLIST+1,,AUTO
         3 000452   000001 702211                    TSX2  ! 1,X1

      379      922    2   END GET_PARAM;
      380      923        /**/
      381      924        %EJECT;
PL6.E3A0      #001=OCM$TEMPLATE File=OCM$MESSAGE.:E05TSI                         WED 07/30/97 04:00 Page:64   
      382      925        /*
      383      926             S K I P _ T O
      384      927                                                                           */
      385      928        /*I* NAME:  SKIP_TO
      386      929             PURPOSE:  To adjust the message template position pointer.
      387      930             CALL:  CALL SKIP_TO (POSN);
      388      931             DESCRIPTION:  OCM_TPOSN is set to POSN.  If OCM_TPOSN is
      389      932                           greater than the template size (OCM_TSIZE),
      390      933                           OCM$DONE is called to perform error termination.
      391      934                                                                           */
      392      935    1   SKIP_TO: PROC(POSN);

    935  3 000453   200130 741300       SKIP_TO      STX1  ! SIZE+2,,AUTO

      393      936    2   DCL POSN UBIN WORD;
      394      937    2        OCM_TPOSN = POSN;

    937  3 000454   200131 470500                    LDP0    @POSN,,AUTO
         3 000455   000000 235100                    LDA     0,,PR0
         3 000456   000000 755000 xsym               STA     OCM_TPOSN

      395      938    2        IF (OCM_TPOSN > OCM_TSIZE)

    938  3 000457   000000 236000 xsym               LDQ     OCM_TSIZE
         3 000460   000466 604000 3                  TMI     s:941
         3 000461   000000 116000 xsym               CMPQ    OCM_TPOSN
         3 000462   000466 605000 3                  TPL     s:941

      396      939    2        THEN
      397      940    2             CALL OCM$DONE;

    940  3 000463   000002 631400 xsym               EPPR1   B_VECTNIL+2
         3 000464   000000 701000 xent               TSX1    OCM$DONE
         3 000465   000000 011000                    NOP     0

      398      941    2        RETURN;

PL6.E3A0      #001=OCM$TEMPLATE File=OCM$MESSAGE.:E05TSI                         WED 07/30/97 04:00 Page:65   
    941  3 000466   200130 221300                    LDX1  ! SIZE+2,,AUTO
         3 000467   000001 702211                    TSX2  ! 1,X1

      399      942    2   END SKIP_TO;
      400      943        /**/
      401      944        %EJECT;
PL6.E3A0      #001=OCM$TEMPLATE File=OCM$MESSAGE.:E05TSI                         WED 07/30/97 04:00 Page:66   
      402      945        /*
      403      946             S T R I N G
      404      947                                                                           */
      405      948        /*I* NAME:  STRING
      406      949             PURPOSE:  To insert a text string from a message template
      407      950                       into OCM_BUFFER.
      408      951             CALL:  CALL STRING;
      409      952             DESCRIPTION:  The length of the string to be inserted is
      410      953                           obtained from the template, ADD is called to
      411      954                           add the string to OCM_BUFFER, and SKIP_TO is
      412      955                           called to position past the string.
      413      956                                                                           */
      414      957    1   STRING: PROC;

    957  3 000470   200116 741300       STRING       STX1  ! TEXTUAL+1,,AUTO

      415      958    2   DCL LIMIT UBIN WORD;
      416      959    2        CALL GET_HALF(LIMIT);

    959  3 000471   200117 630500                    EPPR0   LIMIT,,AUTO
         3 000472   200131 450500                    STP0    @POSN,,AUTO
         3 000473   000025 701000 3                  TSX1    GET_HALF
         3 000474   000000 011000                    NOP     0

      417      960    2        CALL ADD(LIMIT, SUBSTR(OCM_TEMPLATE, OCM_TPOSN));

    960  3 000475   000000 236000 xsym               LDQ     OCM_TPOSN
         3 000476   000020 736000                    QLS     16
         3 000477   000000 036000 4                  ADLQ    0
         3 000500   200124 756100                    STQ     OFFSET,,AUTO
         3 000501   200117 630500                    EPPR0   LIMIT,,AUTO
         3 000502   200123 450500                    STP0    @LENGTH_,,AUTO
         3 000503   000050 701000 3                  TSX1    ADD
         3 000504   000000 011000                    NOP     0

      418      961    2        CALL SKIP_TO(OCM_TPOSN + LIMIT);

PL6.E3A0      #001=OCM$TEMPLATE File=OCM$MESSAGE.:E05TSI                         WED 07/30/97 04:00 Page:67   
    961  3 000505   000000 236000 xsym               LDQ     OCM_TPOSN
         3 000506   200117 036100                    ADLQ    LIMIT,,AUTO
         3 000507   200134 756100                    STQ     @POSN+3,,AUTO
         3 000510   200134 630500                    EPPR0   @POSN+3,,AUTO
         3 000511   200131 450500                    STP0    @POSN,,AUTO
         3 000512   000453 701000 3                  TSX1    SKIP_TO
         3 000513   000000 011000                    NOP     0

      419      962    2        RETURN;

    962  3 000514   200116 221300                    LDX1  ! TEXTUAL+1,,AUTO
         3 000515   000001 702211                    TSX2  ! 1,X1

      420      963    2   END STRING;
      421      964        /**/
      422      965        %EJECT;
PL6.E3A0      #001=OCM$TEMPLATE File=OCM$MESSAGE.:E05TSI                         WED 07/30/97 04:00 Page:68   
      423      966        /*
      424      967             P A R A M E T E R
      425      968                                                                           */
      426      969        /*I* NAME:  PARAMETER
      427      970             PURPOSE:  To format a parameter and insert it into OCM_BUFFER.
      428      971             CALL:  CALL PARAMETER
      429      972             DESCRIPTION:  The parameter number is obtained via GET_BYTE
      430      973                           and GET_PARAM is called to return the specified
      431      974                           parameter in OCM_PARAM.  If the parameter is
      432      975                           non_null, it is formatted according to its
      433      976                           data picture and field picture and placed in
      434      977                           EDIT with EDIT_LENGTH indicating its length.
      435      978                           If this is an indirect parameter, PTR_LIST is
      436      979                           called to process the indirection.
      437      980             ASSUMPTIONS:  Upon entry, OCM_TPOSN points past the TYP_PARAM# token.
      438      981                                                                           */
      439      982    1   PARAMETER: PROC;

    982  3 000516   200116 741300       PARAMETER    STX1  ! TEXTUAL+1,,AUTO

      440      983          %SUB ZERO=48;
      441      984    2   DCL SIZE SBIN WORD;
      442      985    2   DCL I SBIN WORD;
      443      986    2   DCL CALL_PTRLIST BIT(1) UNAL;
      444      987        /**/
      445      988    2        CALL GET_BYTE(OCM_PARAM#);

    988  3 000517   000001 236000 4                  LDQ     1
         3 000520   200131 756100                    STQ     @POSN,,AUTO
         3 000521   000003 701000 3                  TSX1    GET_BYTE
         3 000522   000000 011000                    NOP     0

      446      989    2        CALL GET_PARAM(EDIT_LENGTH);

    989  3 000523   200004 630500                    EPPR0   EDIT_LENGTH,,AUTO
         3 000524   200123 450500                    STP0    @LENGTH_,,AUTO
         3 000525   000116 701000 3                  TSX1    GET_PARAM
PL6.E3A0      #001=OCM$TEMPLATE File=OCM$MESSAGE.:E05TSI                         WED 07/30/97 04:00 Page:69   
         3 000526   000000 011000                    NOP     0

      447      990    2        IF (EDIT_LENGTH = 0)               /* null parameter */

    990  3 000527   200004 235100                    LDA     EDIT_LENGTH,,AUTO
         3 000530   000541 601000 3                  TNZ     s:995

      448      991    2        THEN
      449      992    2             CALL SKIP_TO (OCM_TPOSN + 3);

    992  3 000531   000000 236000 xsym               LDQ     OCM_TPOSN
         3 000532   000003 036007                    ADLQ    3,DL
         3 000533   200135 756100                    STQ     @POSN+4,,AUTO
         3 000534   200135 630500                    EPPR0   @POSN+4,,AUTO
         3 000535   200131 450500                    STP0    @POSN,,AUTO
         3 000536   000453 701000 3                  TSX1    SKIP_TO
         3 000537   000000 011000                    NOP     0
         3 000540   001322 710000 3                  TRA     s:1190

      450      993    2        ELSE                               /* non_null parameter */
      451      994    3        DO;

      452      995    3             CALL GET_BYTE(PIC_U);

    995  3 000541   200011 630500                    EPPR0   PIC_U,,AUTO
         3 000542   200131 450500                    STP0    @POSN,,AUTO
         3 000543   000003 701000 3                  TSX1    GET_BYTE
         3 000544   000000 011000                    NOP     0

      453      996    3             IF (PIC.B & '400'O /* IMG_TEXT# */)        /* text */

    996  3 000545   200011 236100                    LDQ     PIC_U,,AUTO
         3 000546   000033 736000                    QLS     27
         3 000547   400000 376003                    ANQ     -131072,DU
         3 000550   000643 600000 3                  TZE     s:1034

      454      997    3             THEN
PL6.E3A0      #001=OCM$TEMPLATE File=OCM$MESSAGE.:E05TSI                         WED 07/30/97 04:00 Page:70   
      455      998    4             DO;

      456      999    4                  TEXTUAL = '1'B /*TRUE#*/;

    999  3 000551   400000 236003                    LDQ     -131072,DU
         3 000552   200115 756100                    STQ     TEXTUAL,,AUTO

      457     1000    4                  IF (PIC.B & '200'O /* IMG_LDGB# */)   /* keep leading blanks? */

   1000  3 000553   200011 236100                    LDQ     PIC_U,,AUTO
         3 000554   000033 736000                    QLS     27
         3 000555   200000 376003                    ANQ     65536,DU
         3 000556   000561 600000 3                  TZE     s:1005

      458     1001    4                  THEN
      459     1002    4                       TEMP.U = 0;

   1002  3 000557   200012 450100                    STZ     TEMP,,AUTO
         3 000560   000601 710000 3                  TRA     s:1015

      460     1003    4                  ELSE                     /* strip leading blanks */
      461     1004    5                  DO;

      462     1005    5                       TEMP.U = EDIT_LENGTH;

   1005  3 000561   200004 235100                    LDA     EDIT_LENGTH,,AUTO
         3 000562   200012 755100                    STA     TEMP,,AUTO

      463     1006    6                       DO I = 0 TO (EDIT_LENGTH - 1);

   1006  3 000563   200120 450100                    STZ     I,,AUTO
         3 000564   000576 710000 3                  TRA     s:1013+1

      464     1007    6                            IF (SUBSTR(OCM_PARAM, I, 1) ~= ' ')

   1007  3 000565   200120 235100                    LDA     I,,AUTO
         3 000566   040000 106405                    CMPC    fill='040'O
PL6.E3A0      #001=OCM$TEMPLATE File=OCM$MESSAGE.:E05TSI                         WED 07/30/97 04:00 Page:71   
         3 000567   000000 000001 xsym               ADSC9   OCM_PARAM,A              cn=0,n=1
         3 000570   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         3 000571   000575 600000 3                  TZE     s:1013

      465     1008    6                            THEN
      466     1009    7                            DO;

      467     1010    7                                 TEMP.U = I;

   1010  3 000572   200012 755100                    STA     TEMP,,AUTO

      468     1011    7                                 I = EDIT_LENGTH;

   1011  3 000573   200004 236100                    LDQ     EDIT_LENGTH,,AUTO
         3 000574   200120 756100                    STQ     I,,AUTO

      469     1012    7                               END;        /* DO IF char ~= ' ' */

      470     1013    6                          END;             /* DO I = 0 TO EDIT_LENGTH-1 */

   1013  3 000575   200120 054100                    AOS     I,,AUTO
         3 000576   200120 236100                    LDQ     I,,AUTO
         3 000577   200004 116100                    CMPQ    EDIT_LENGTH,,AUTO
         3 000600   000565 604000 3                  TMI     s:1007

      471     1014    5                     END;                  /* DO IF strip_leading blnks */

      472     1015    4                  IF (PIC.B & '100'O /* IMG_TRLB# */)

   1015  3 000601   200011 236100                    LDQ     PIC_U,,AUTO
         3 000602   000033 736000                    QLS     27
         3 000603   100000 376003                    ANQ     32768,DU
         3 000604   000611 600000 3                  TZE     s:1020

      473     1016    4                  THEN
      474     1017    4                       SIZE = EDIT_LENGTH - TEMP.S;

PL6.E3A0      #001=OCM$TEMPLATE File=OCM$MESSAGE.:E05TSI                         WED 07/30/97 04:00 Page:72   
   1017  3 000605   200004 236100                    LDQ     EDIT_LENGTH,,AUTO
         3 000606   200012 136100                    SBLQ    TEMP,,AUTO
         3 000607   200117 756100                    STQ     SIZE,,AUTO
         3 000610   000636 710000 3                  TRA     s:1030

      475     1018    4                  ELSE                     /* strip trailing blanks    */
      476     1019    5                  DO;

      477     1020    5                       SIZE = 0;

   1020  3 000611   200117 450100                    STZ     SIZE,,AUTO

      478     1021    6                       DO I = (1 - EDIT_LENGTH) TO -TEMP.U;

   1021  3 000612   000001 235007                    LDA     1,DL
         3 000613   200004 135100                    SBLA    EDIT_LENGTH,,AUTO
         3 000614   200120 755100                    STA     I,,AUTO
         3 000615   000632 710000 3                  TRA     s:1028+1

      479     1022    6                            IF (SUBSTR(OCM_PARAM, -I, 1) ~= ' ')

   1022  3 000616   200120 335100                    LCA     I,,AUTO
         3 000617   040000 106405                    CMPC    fill='040'O
         3 000620   000000 000001 xsym               ADSC9   OCM_PARAM,A              cn=0,n=1
         3 000621   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         3 000622   000631 600000 3                  TZE     s:1028

      480     1023    6                            THEN
      481     1024    7                            DO;

      482     1025    7                                 SIZE = 1 - I - TEMP.U;

   1025  3 000623   200120 236100                    LDQ     I,,AUTO
         3 000624   200012 036100                    ADLQ    TEMP,,AUTO
         3 000625   000027 676000 xsym               ERQ     B_VECTNIL+23
         3 000626   000002 036007                    ADLQ    2,DL
         3 000627   200117 756100                    STQ     SIZE,,AUTO
PL6.E3A0      #001=OCM$TEMPLATE File=OCM$MESSAGE.:E05TSI                         WED 07/30/97 04:00 Page:73   

      483     1026    7                                 I = 0;

   1026  3 000630   200120 450100                    STZ     I,,AUTO

      484     1027    7                               END;        /* DO IF char ~= ' ' */

      485     1028    6                          END;             /* DO string_start > end */

   1028  3 000631   200120 054100                    AOS     I,,AUTO
         3 000632   000000 236003                    LDQ     0,DU
         3 000633   200012 136100                    SBLQ    TEMP,,AUTO
         3 000634   200120 116100                    CMPQ    I,,AUTO
         3 000635   000616 605000 3                  TPL     s:1022

      486     1029    5                     END;                  /* DO IF trailing blanks */

      487     1030    4                  CALL GET_BYTE (PIC_U);

   1030  3 000636   200011 630500                    EPPR0   PIC_U,,AUTO
         3 000637   200131 450500                    STP0    @POSN,,AUTO
         3 000640   000003 701000 3                  TSX1    GET_BYTE
         3 000641   000000 011000                    NOP     0

      488     1031    4                END;                       /* DO if text bit set */

   1031  3 000642   001233 710000 3                  TRA     s:1165

      489     1032    3             ELSE                          /* number     */
      490     1033    4             DO;

      491     1034    4                  TEXTUAL = '0'B /*FALSE#*/;

   1034  3 000643   200115 450100                    STZ     TEXTUAL,,AUTO

      492     1035    4                  NUMBER.U = 0;

PL6.E3A0      #001=OCM$TEMPLATE File=OCM$MESSAGE.:E05TSI                         WED 07/30/97 04:00 Page:74   
   1035  3 000644   200010 450100                    STZ     NUMBER,,AUTO

      493     1036    4                  IF (EDIT_LENGTH > 4)

   1036  3 000645   200004 235100                    LDA     EDIT_LENGTH,,AUTO
         3 000646   000004 115007                    CMPA    4,DL
         3 000647   000653 604400 3                  TMOZ    s:1040

      494     1037    4                  THEN
      495     1038    4                       TEMP.U = 4;

   1038  3 000650   000004 236007                    LDQ     4,DL
         3 000651   200012 756100                    STQ     TEMP,,AUTO
         3 000652   000654 710000 3                  TRA     s:1041

      496     1039    4                  ELSE
      497     1040    4                       TEMP.U = EDIT_LENGTH;

   1040  3 000653   200012 755100                    STA     TEMP,,AUTO

      498     1041    4                  CALL INSERT(NUMBER.C, 4 - TEMP.S, TEMP.S,

   1041  3 000654   200004 236100                    LDQ     EDIT_LENGTH,,AUTO
         3 000655   200012 136100                    SBLQ    TEMP,,AUTO
         3 000656   777377 620006                    EAX0    -257,QL
         3 000657   777777 660003                    ERX0    -1,DU
         3 000660   200012 335100                    LCA     TEMP,,AUTO
         3 000661   200012 721100                    LXL1    TEMP,,AUTO
         3 000662   040145 100446                    MLR     fill='040'O
         3 000663   000000 000010 xsym               ADSC9   OCM_PARAM,Q              cn=0,n=*X0
         3 000664   200011 000011                    ADSC9   PIC_U,A,AUTO             cn=0,n=*X1

      499     1042    4                       SUBSTR(OCM_PARAM, EDIT_LENGTH - TEMP.U));
      500     1043    4                  VALUE = NUMBER.U;        /* Save value in case of ptrlist */

   1043  3 000665   200010 236100                    LDQ     NUMBER,,AUTO
         3 000666   200007 756100                    STQ     VALUE,,AUTO
PL6.E3A0      #001=OCM$TEMPLATE File=OCM$MESSAGE.:E05TSI                         WED 07/30/97 04:00 Page:75   

      501     1044                                                /**/
      502     1045    5                  DO CASE(PICU.TYPE);

   1045  3 000667   200011 720100                    LXL0    PIC_U,,AUTO
         3 000670   000077 360003                    ANX0    63,DU
         3 000671   000041 100003                    CMPX0   33,DU
         3 000672   000674 602010 3                  TNC     s:1045+5,X0
         3 000673   001134 710000 3                  TRA     s:1123
         3 000674   001134 710000 3                  TRA     s:1123
         3 000675   001134 710000 3                  TRA     s:1123
         3 000676   001042 710000 3                  TRA     s:1092
         3 000677   001134 710000 3                  TRA     s:1123
         3 000700   001013 710000 3                  TRA     s:1071
         3 000701   001134 710000 3                  TRA     s:1123
         3 000702   001134 710000 3                  TRA     s:1123
         3 000703   001134 710000 3                  TRA     s:1123
         3 000704   000743 710000 3                  TRA     s:1054
         3 000705   001134 710000 3                  TRA     s:1123
         3 000706   001134 710000 3                  TRA     s:1123
         3 000707   001134 710000 3                  TRA     s:1123
         3 000710   001134 710000 3                  TRA     s:1123
         3 000711   001134 710000 3                  TRA     s:1123
         3 000712   001134 710000 3                  TRA     s:1123
         3 000713   001134 710000 3                  TRA     s:1123
         3 000714   000765 710000 3                  TRA     s:1062
         3 000715   001134 710000 3                  TRA     s:1123
         3 000716   001134 710000 3                  TRA     s:1123
         3 000717   001134 710000 3                  TRA     s:1123
         3 000720   001134 710000 3                  TRA     s:1123
         3 000721   001134 710000 3                  TRA     s:1123
         3 000722   001134 710000 3                  TRA     s:1123
         3 000723   001134 710000 3                  TRA     s:1123
         3 000724   001134 710000 3                  TRA     s:1123
         3 000725   001134 710000 3                  TRA     s:1123
         3 000726   001134 710000 3                  TRA     s:1123
         3 000727   001134 710000 3                  TRA     s:1123
PL6.E3A0      #001=OCM$TEMPLATE File=OCM$MESSAGE.:E05TSI                         WED 07/30/97 04:00 Page:76   
         3 000730   001134 710000 3                  TRA     s:1123
         3 000731   001134 710000 3                  TRA     s:1123
         3 000732   001134 710000 3                  TRA     s:1123
         3 000733   001134 710000 3                  TRA     s:1123
         3 000734   000735 710000 3                  TRA     s:1049

      503     1046                                                /**/
      504     1047    5                  CASE (32);               /*  decimal conversion */

      505     1048                                                /**/
      506     1049    5                     CALL BINCHAR(SUBSTR(OCM_PARAM,244),VALUE);

   1049  3 000735   000000 235003                    LDA     0,DU
         3 000736   200132 757100                    STAQ    @POSN+1,,AUTO
         3 000737   000000 301500                    BTD
         3 000740   200132 000010                    NDSC9   @POSN+1,,AUTO            cn=0,s=lsgnf,sf=0,n=8
         3 000741   000075 030014 xsym               NDSC9   OCM_PARAM+61             cn=0,s=nosgn,sf=0,n=12
         3 000742   001134 710000 3                  TRA     s:1123

      507     1050                                                /**/
      508     1051                                                /**/
      509     1052    5                  CASE (8);                /*  hexadecimal conversion */

      510     1053                                                /**/
      511     1054    6                     DO I = -255 TO -244;

   1054  3 000743   000377 335007                    LCA     255,DL
         3 000744   200120 755100                    STA     I,,AUTO

      512     1055    6                          TEMP.B = NUMBER.B & '000000000017'O;

   1055  3 000745   200010 236100                    LDQ     NUMBER,,AUTO
         3 000746   000010 376000 0                  ANQ     TIME_SIZE+4
         3 000747   200012 756100                    STQ     TEMP,,AUTO

      513     1056    6                          NUMBER.U = NUMBER.U / 16;

PL6.E3A0      #001=OCM$TEMPLATE File=OCM$MESSAGE.:E05TSI                         WED 07/30/97 04:00 Page:77   
   1056  3 000750   200010 236100                    LDQ     NUMBER,,AUTO
         3 000751   000004 772000                    QRL     4
         3 000752   200010 756100                    STQ     NUMBER,,AUTO

      514     1057    6                          CALL INSERT(OCM_PARAM,-I,1,

   1057  3 000753   200120 335100                    LCA     I,,AUTO
         3 000754   200012 236100                    LDQ     TEMP,,AUTO
         3 000755   040005 100406                    MLR     fill='040'O
         3 000756   000000 000001 0                  ADSC9   HEX_DIGITS,Q             cn=0,n=1
         3 000757   000000 000001 xsym               ADSC9   OCM_PARAM,A              cn=0,n=1

      515     1058    6                               SUBSTR(HEX_DIGITS,TEMP.U,1));
      516     1059    6                        END;               /* DO I = -255 TO -244 */

   1059  3 000760   200120 054100                    AOS     I,,AUTO
         3 000761   200120 235100                    LDA     I,,AUTO
         3 000762   000002 115000 4                  CMPA    2
         3 000763   000745 604400 3                  TMOZ    s:1055
         3 000764   001134 710000 3                  TRA     s:1123

      517     1060    5                  CASE (16);               /*  octal conversion */

      518     1061                                                /**/
      519     1062    6                     DO I = -255 TO -244;

   1062  3 000765   000377 335007                    LCA     255,DL
         3 000766   200120 755100                    STA     I,,AUTO

      520     1063    6                          TEMP.B = NUMBER.B & '000000000007'O;

   1063  3 000767   200010 236100                    LDQ     NUMBER,,AUTO
         3 000770   000011 376000 xsym               ANQ     B_VECTNIL+9
         3 000771   200012 756100                    STQ     TEMP,,AUTO

      521     1064    6                          NUMBER.U = NUMBER.U / 8;

PL6.E3A0      #001=OCM$TEMPLATE File=OCM$MESSAGE.:E05TSI                         WED 07/30/97 04:00 Page:78   
   1064  3 000772   200010 236100                    LDQ     NUMBER,,AUTO
         3 000773   000003 772000                    QRL     3
         3 000774   200010 756100                    STQ     NUMBER,,AUTO

      522     1065    6                          CALL INSERT (OCM_PARAM, -I, 1,

   1065  3 000775   200012 236100                    LDQ     TEMP,,AUTO
         3 000776   000060 036007                    ADLQ    48,DL
         3 000777   000033 736000                    QLS     27
         3 001000   000003 276000 4                  ORQ     3
         3 001001   200132 756100                    STQ     @POSN+1,,AUTO
         3 001002   200120 335100                    LCA     I,,AUTO
         3 001003   040005 100500                    MLR     fill='040'O
         3 001004   200132 000004                    ADSC9   @POSN+1,,AUTO            cn=0,n=4
         3 001005   000000 000001 xsym               ADSC9   OCM_PARAM,A              cn=0,n=1

      523     1066    6                               BINASC(TEMP.U + ASCBIN('0')));
      524     1067    6                        END;               /* DO I = -255 TO -244 */

   1067  3 001006   200120 054100                    AOS     I,,AUTO
         3 001007   200120 235100                    LDA     I,,AUTO
         3 001010   000002 115000 4                  CMPA    2
         3 001011   000767 604400 3                  TMOZ    s:1063
         3 001012   001134 710000 3                  TRA     s:1123

      525     1068                                                /**/
      526     1069    5                  CASE (4);                /* TWSN/TERMNAME conversion */

      527     1070                                                /**/
      528     1071    5                     IF OCM_KEY_FLAG       /* NEED TO CONVERT */

   1071  3 001013   000000 234000 xsym               SZN     OCM_KEY_FLAG
         3 001014   001023 605000 3                  TPL     s:1079

      529     1072    5                     THEN
      530     1073    6                     DO;

PL6.E3A0      #001=OCM$TEMPLATE File=OCM$MESSAGE.:E05TSI                         WED 07/30/97 04:00 Page:79   
      531     1074    6                          CALL INSERT (OCM_PARAM,248,8,'########');

   1074  3 001015   040000 100400                    MLR     fill='040'O
         3 001016   000011 000010 0                  ADSC9   TIME_SIZE+5              cn=0,n=8
         3 001017   000076 000010 xsym               ADSC9   OCM_PARAM+62             cn=0,n=8

      532     1075                                                /**/
      533     1076    6                          CALL INSERT (OCM_PARAM,0,8,SUBSTR(OCM_PARAM,248,8));

   1076  3 001020   040000 100400                    MLR     fill='040'O
         3 001021   000076 000010 xsym               ADSC9   OCM_PARAM+62             cn=0,n=8
         3 001022   000000 000010 xsym               ADSC9   OCM_PARAM                cn=0,n=8

      534     1077    6                        END;

      535     1078                                                /**/
      536     1079    5                     TEXTUAL = '1'B /*TRUE#*/;

   1079  3 001023   400000 236003                    LDQ     -131072,DU
         3 001024   200115 756100                    STQ     TEXTUAL,,AUTO

      537     1080    5                     EDIT_LENGTH = 8;

   1080  3 001025   000010 235007                    LDA     8,DL
         3 001026   200004 755100                    STA     EDIT_LENGTH,,AUTO

      538     1081    5                     SIZE = 8;

   1081  3 001027   200117 755100                    STA     SIZE,,AUTO

      539     1082    6                     DO WHILE (SUBSTR(OCM_PARAM,SIZE-1,1) = ' ');

   1082  3 001030   001033 710000 3                  TRA     s:1084

      540     1083    6                          SIZE = SIZE - 1;

   1083  3 001031   000001 336007                    LCQ     1,DL
PL6.E3A0      #001=OCM$TEMPLATE File=OCM$MESSAGE.:E05TSI                         WED 07/30/97 04:00 Page:80   
         3 001032   200117 056100                    ASQ     SIZE,,AUTO

      541     1084    6                        END;               /* Do while trailing blanks */

   1084  3 001033   200117 235100                    LDA     SIZE,,AUTO
         3 001034   040000 106405                    CMPC    fill='040'O
         3 001035   777777 600001 xsym               ADSC9   OCM_PARAM-1,A            cn=3,n=1
         3 001036   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         3 001037   001031 600000 3                  TZE     s:1083

      542     1085    5                     TEMP.U = 0;

   1085  3 001040   200012 450100                    STZ     TEMP,,AUTO
         3 001041   001134 710000 3                  TRA     s:1123

      543     1086                                                /**/
      544     1087    5                  CASE (2);                /*  JIT.ERROR conversion */

      545     1088                                                /**/
      546     1089                                           /* convert NUMBER to look like
      547     1090                                              the standard error code, e.g.;
      548     1091                                              xxx-Mnnnnn-s                */
      549     1092    6                     DO I = 0 TO 2;

   1092  3 001042   200120 450100                    STZ     I,,AUTO

      550     1093    6                          CALL INSERT (OCM_PARAM, I, 1,

   1093  3 001043   200120 235100                    LDA     I,,AUTO
         3 001044   001046 605000 3                  TPL     s:1093+3
         3 001045   000006 035003                    ADLA    6,DU
         3 001046   000100 101505                    MRL     fill='000'O
         3 001047   200010 020001                    ADSC6   NUMBER,A,AUTO            cn=0,n=1
         3 001050   200132 020006                    ADSC6   @POSN+1,,AUTO            cn=0,n=6
         3 001051   200132 236100                    LDQ     @POSN+1,,AUTO
         3 001052   000100 036007                    ADLQ    64,DL
         3 001053   000033 736000                    QLS     27
PL6.E3A0      #001=OCM$TEMPLATE File=OCM$MESSAGE.:E05TSI                         WED 07/30/97 04:00 Page:81   
         3 001054   000003 276000 4                  ORQ     3
         3 001055   200133 756100                    STQ     @POSN+2,,AUTO
         3 001056   200120 235100                    LDA     I,,AUTO
         3 001057   040005 100500                    MLR     fill='040'O
         3 001060   200133 000004                    ADSC9   @POSN+2,,AUTO            cn=0,n=4
         3 001061   000000 000001 xsym               ADSC9   OCM_PARAM,A              cn=0,n=1

      551     1094    6                               BINASC(JERR.FCG(I)+ASCBIN('@')));
      552     1095    6                        END;               /* DO I */

   1095  3 001062   200120 054100                    AOS     I,,AUTO
         3 001063   200120 235100                    LDA     I,,AUTO
         3 001064   000002 115007                    CMPA    2,DL
         3 001065   001043 604400 3                  TMOZ    s:1093

      553     1096                                                /**/
      554     1097    5                     IF JERR.MON

   1097  3 001066   200010 236100                    LDQ     NUMBER,,AUTO
         3 001067   400000 316007                    CANQ    -131072,DL
         3 001070   001075 600000 3                  TZE     s:1101

      555     1098    5                     THEN
      556     1099    5                          CALL INSERT (OCM_PARAM,3,2,'-M');

   1099  3 001071   040000 100400                    MLR     fill='040'O
         3 001072   000013 000002 0                  ADSC9   TIME_SIZE+7              cn=0,n=2
         3 001073   000000 600002 xsym               ADSC9   OCM_PARAM                cn=3,n=2
         3 001074   001100 710000 3                  TRA     s:1103

      557     1100    5                     ELSE
      558     1101    5                          CALL INSERT (OCM_PARAM,3,2,'-0');

   1101  3 001075   040000 100400                    MLR     fill='040'O
         3 001076   000014 000002 0                  ADSC9   TIME_SIZE+8              cn=0,n=2
         3 001077   000000 600002 xsym               ADSC9   OCM_PARAM                cn=3,n=2

PL6.E3A0      #001=OCM$TEMPLATE File=OCM$MESSAGE.:E05TSI                         WED 07/30/97 04:00 Page:82   
      559     1102                                                /**/
      560     1103    5                     CALL BINCHAR (SUBSTR(OCM_PARAM,244), JERR.ERR);

   1103  3 001100   200010 236100                    LDQ     NUMBER,,AUTO
         3 001101   000003 772000                    QRL     3
         3 001102   037777 376007                    ANQ     16383,DL
         3 001103   000000 235003                    LDA     0,DU
         3 001104   200132 757100                    STAQ    @POSN+1,,AUTO
         3 001105   000000 301500                    BTD
         3 001106   200132 000010                    NDSC9   @POSN+1,,AUTO            cn=0,s=lsgnf,sf=0,n=8
         3 001107   000075 030014 xsym               NDSC9   OCM_PARAM+61             cn=0,s=nosgn,sf=0,n=12

      561     1104                                                /**/
      562     1105    5                     CALL INSERT (OCM_PARAM, 5, 5,

   1105  3 001110   040000 100400                    MLR     fill='040'O
         3 001111   000076 600005 xsym               ADSC9   OCM_PARAM+62             cn=3,n=5
         3 001112   000001 200005 xsym               ADSC9   OCM_PARAM+1              cn=1,n=5

      563     1106    5                          SUBSTR(OCM_PARAM,251,5));
      564     1107                                                /**/
      565     1108    5                     CALL INSERT (OCM_PARAM, 10, 1, '-');

   1108  3 001113   055000 236007                    LDQ     23040,DL
         3 001114   000002 552010 xsym               STBQ    OCM_PARAM+2,'10'O

      566     1109                                                /**/
      567     1110    5                     CALL BINCHAR(SUBSTR(OCM_PARAM,244), JERR.SEV);

   1110  3 001115   200010 236100                    LDQ     NUMBER,,AUTO
         3 001116   000007 376007                    ANQ     7,DL
         3 001117   000000 235003                    LDA     0,DU
         3 001120   200132 757100                    STAQ    @POSN+1,,AUTO
         3 001121   000000 301500                    BTD
         3 001122   200132 000010                    NDSC9   @POSN+1,,AUTO            cn=0,s=lsgnf,sf=0,n=8
         3 001123   000075 030014 xsym               NDSC9   OCM_PARAM+61             cn=0,s=nosgn,sf=0,n=12

PL6.E3A0      #001=OCM$TEMPLATE File=OCM$MESSAGE.:E05TSI                         WED 07/30/97 04:00 Page:83   
      568     1111                                                /**/
      569     1112    5                     CALL INSERT (OCM_PARAM, 11, 1,

   1112  3 001124   000077 236000 xsym               LDQ     OCM_PARAM+63
         3 001125   000002 552004 xsym               STBQ    OCM_PARAM+2,'04'O

      570     1113    5                          SUBSTR(OCM_PARAM,255,1));
      571     1114
      572     1115                                                /**/
      573     1116    5                     TEXTUAL = '1'B /*TRUE#*/;

   1116  3 001126   400000 236003                    LDQ     -131072,DU
         3 001127   200115 756100                    STQ     TEXTUAL,,AUTO

      574     1117    5                     EDIT_LENGTH = 12;

   1117  3 001130   000014 235007                    LDA     12,DL
         3 001131   200004 755100                    STA     EDIT_LENGTH,,AUTO

      575     1118    5                     SIZE = 12;

   1118  3 001132   200117 755100                    STA     SIZE,,AUTO

      576     1119    5                     TEMP.U = 0;

   1119  3 001133   200012 450100                    STZ     TEMP,,AUTO

      577     1120                                                /**/
      578     1121    5                  END;                     /* DO CASE(TYPE OF CONVERSION) */

      579     1122                                                /**/
      580     1123    4                  IF ~TEXTUAL

   1123  3 001134   200115 236100                    LDQ     TEXTUAL,,AUTO
         3 001135   400000 376003                    ANQ     -131072,DU
         3 001136   400000 676003                    ERQ     -131072,DU
         3 001137   001227 600000 3                  TZE     s:1156
PL6.E3A0      #001=OCM$TEMPLATE File=OCM$MESSAGE.:E05TSI                         WED 07/30/97 04:00 Page:84   

      581     1124    4                  THEN
      582     1125    5                  DO;                      /* Process the numeric results */

      583     1126    5                       CALL GET_BYTE (PIC_U);

   1126  3 001140   200011 630500                    EPPR0   PIC_U,,AUTO
         3 001141   200131 450500                    STP0    @POSN,,AUTO
         3 001142   000003 701000 3                  TSX1    GET_BYTE
         3 001143   000000 011000                    NOP     0

      584     1127    5                       PIC.B = (PIC.B & '077'O);

   1127  3 001144   200011 236100                    LDQ     PIC_U,,AUTO
         3 001145   000033 736000                    QLS     27
         3 001146   077000 376003                    ANQ     32256,DU
         3 001147   000033 772000                    QRL     27
         3 001150   200011 552104                    STBQ    PIC_U,'04'O,AUTO

      585     1128    5                       IF PIC.B            /* width specified */

   1128  3 001151   200011 236100                    LDQ     PIC_U,,AUTO
         3 001152   000777 316007                    CANQ    511,DL
         3 001153   001201 600000 3                  TZE     s:1141

      586     1129    5                       THEN
      587     1130    6                       DO;

      588     1131    6                            IF (PIC_U > 12)

   1131  3 001154   200011 235100                    LDA     PIC_U,,AUTO
         3 001155   000015 115007                    CMPA    13,DL
         3 001156   001173 602000 3                  TNC     s:1136

      589     1132    6                            THEN
      590     1133    7                            DO I = (256 - PIC_U) TO 243;

PL6.E3A0      #001=OCM$TEMPLATE File=OCM$MESSAGE.:E05TSI                         WED 07/30/97 04:00 Page:85   
   1133  3 001157   000027 675000 xsym               ERA     B_VECTNIL+23
         3 001160   000401 035007                    ADLA    257,DL
         3 001161   200120 755100                    STA     I,,AUTO
         3 001162   001170 710000 3                  TRA     s:1135+1

      591     1134    7                                 CALL INSERT(OCM_PARAM, I, 1, '0');

   1134  3 001163   200120 235100                    LDA     I,,AUTO
         3 001164   040005 100400                    MLR     fill='040'O
         3 001165   000004 000001 4                  ADSC9   4                        cn=0,n=1
         3 001166   000000 000001 xsym               ADSC9   OCM_PARAM,A              cn=0,n=1

      592     1135    7                               END;        /* DO I=(256-PIC_U) TO 243 */

   1135  3 001167   200120 054100                    AOS     I,,AUTO
         3 001170   200120 235100                    LDA     I,,AUTO
         3 001171   000363 115007                    CMPA    243,DL
         3 001172   001163 604400 3                  TMOZ    s:1134

      593     1136    6                            TEMP.U = 256 - PIC_U;

   1136  3 001173   000400 235007                    LDA     256,DL
         3 001174   200011 135100                    SBLA    PIC_U,,AUTO
         3 001175   200012 755100                    STA     TEMP,,AUTO

      594     1137    6                            SIZE = PIC_U;

   1137  3 001176   200011 236100                    LDQ     PIC_U,,AUTO
         3 001177   200117 756100                    STQ     SIZE,,AUTO

      595     1138    6                          END;             /* DO IF width passed */

   1138  3 001200   001233 710000 3                  TRA     s:1165

      596     1139    5                       ELSE                /* widthless  */
      597     1140    6                       DO;

PL6.E3A0      #001=OCM$TEMPLATE File=OCM$MESSAGE.:E05TSI                         WED 07/30/97 04:00 Page:86   
      598     1141    6                            SIZE = 1;

   1141  3 001201   000001 235007                    LDA     1,DL
         3 001202   200117 755100                    STA     SIZE,,AUTO

      599     1142    6                            TEMP.U = 255;  /* Initialize */

   1142  3 001203   000377 235007                    LDA     255,DL
         3 001204   200012 755100                    STA     TEMP,,AUTO

      600     1143    7                            DO I = 244 TO 254;

   1143  3 001205   000364 235007                    LDA     244,DL
         3 001206   200120 755100                    STA     I,,AUTO

      601     1144    7                                 IF (SUBSTR(OCM_PARAM, I, 1) ~= '0')

   1144  3 001207   200120 235100                    LDA     I,,AUTO
         3 001210   040000 106405                    CMPC    fill='040'O
         3 001211   000000 000001 xsym               ADSC9   OCM_PARAM,A              cn=0,n=1
         3 001212   000004 000001 4                  ADSC9   4                        cn=0,n=1
         3 001213   001222 600000 3                  TZE     s:1151

      602     1145    7                                 THEN
      603     1146    8                                 DO;

      604     1147    8                                      TEMP.U = I;

   1147  3 001214   200012 755100                    STA     TEMP,,AUTO

      605     1148    8                                      SIZE = 256 - I;

   1148  3 001215   000027 675000 xsym               ERA     B_VECTNIL+23
         3 001216   000401 035007                    ADLA    257,DL
         3 001217   200117 755100                    STA     SIZE,,AUTO

      606     1149    8                                      I = 254;
PL6.E3A0      #001=OCM$TEMPLATE File=OCM$MESSAGE.:E05TSI                         WED 07/30/97 04:00 Page:87   

   1149  3 001220   000376 236007                    LDQ     254,DL
         3 001221   200120 756100                    STQ     I,,AUTO

      607     1150    8                                    END;   /* DO IF char ~='0' */

      608     1151    7                               END;        /* DO I = 244 TO 254 */

   1151  3 001222   200120 054100                    AOS     I,,AUTO
         3 001223   200120 235100                    LDA     I,,AUTO
         3 001224   000376 115007                    CMPA    254,DL
         3 001225   001207 604400 3                  TMOZ    s:1144

      609     1152    6                          END;             /* DO IF WIDTHLESS */

      610     1153    5                     END;                  /* DO if ~TEXTUAL */

   1153  3 001226   001233 710000 3                  TRA     s:1165

      611     1154    4                  ELSE
      612     1155    5                  DO;

      613     1156    5                       CALL GET_BYTE (PIC_U); /* Pick up the image

   1156  3 001227   200011 630500                    EPPR0   PIC_U,,AUTO
         3 001230   200131 450500                    STP0    @POSN,,AUTO
         3 001231   000003 701000 3                  TSX1    GET_BYTE
         3 001232   000000 011000                    NOP     0

      614     1157                                                          byte for the textual
      615     1158                                                          case to position
      616     1159                                                          template right */
      617     1160    5                     END;                  /* DO IF TEXTUAL & FMT SPEC */

      618     1161    4                END;                       /* DO if ~text_bit */

      619     1162        /*
PL6.E3A0      #001=OCM$TEMPLATE File=OCM$MESSAGE.:E05TSI                         WED 07/30/97 04:00 Page:88   
      620     1163           parameter according to data picture is now in SUBSTR(OCM_PARAM, TEMP.U, SIZE)
      621     1164                                                                           */
      622     1165    3             CALL GET_BYTE(PIC_U);         /* get field picture        */

   1165  3 001233   200011 630500                    EPPR0   PIC_U,,AUTO
         3 001234   200131 450500                    STP0    @POSN,,AUTO
         3 001235   000003 701000 3                  TSX1    GET_BYTE
         3 001236   000000 011000                    NOP     0

      623     1166    3             RIGHT = PIC.B & '400'O;

   1166  3 001237   200011 236100                    LDQ     PIC_U,,AUTO
         3 001240   000033 736000                    QLS     27
         3 001241   400000 376003                    ANQ     -131072,DU
         3 001242   200114 756100                    STQ     RIGHT,,AUTO

      624     1167    3             PIC.B = (PIC.B & '077'O);

   1167  3 001243   200011 236100                    LDQ     PIC_U,,AUTO
         3 001244   000033 736000                    QLS     27
         3 001245   077000 376003                    ANQ     32256,DU
         3 001246   000033 772000                    QRL     27
         3 001247   200011 552104                    STBQ    PIC_U,'04'O,AUTO

      625     1168    3             IF PIC.B                      /* width specified  */

   1168  3 001250   200011 236100                    LDQ     PIC_U,,AUTO
         3 001251   000777 316007                    CANQ    511,DL
         3 001252   001310 600000 3                  TZE     s:1187

      626     1169    3             THEN
      627     1170    4             DO;

      628     1171    4                  EDIT_LENGTH = PIC_U;

   1171  3 001253   200011 235100                    LDA     PIC_U,,AUTO
         3 001254   200004 755100                    STA     EDIT_LENGTH,,AUTO
PL6.E3A0      #001=OCM$TEMPLATE File=OCM$MESSAGE.:E05TSI                         WED 07/30/97 04:00 Page:89   

      629     1172    4                  IF RIGHT                 /* right justification */

   1172  3 001255   200114 234100                    SZN     RIGHT,,AUTO
         3 001256   001301 605000 3                  TPL     s:1182

      630     1173    4                  THEN
      631     1174    5                  DO;

      632     1175    5                       CALL INSERT(EDIT, 0, EDIT_LENGTH,

   1175  3 001257   200012 236100                    LDQ     TEMP,,AUTO
         3 001260   200117 036100                    ADLQ    SIZE,,AUTO
         3 001261   200004 136100                    SBLQ    EDIT_LENGTH,,AUTO
         3 001262   777377 620006                    EAX0    -257,QL
         3 001263   777777 660003                    ERX0    -1,DU
         3 001264   000000 621005                    EAX1    0,AL
         3 001265   040140 100446                    MLR     fill='040'O
         3 001266   000000 000010 xsym               ADSC9   OCM_PARAM,Q              cn=0,n=*X0
         3 001267   200013 000011                    ADSC9   EDIT,,AUTO               cn=0,n=*X1

      633     1176    5                            SUBSTR(OCM_PARAM, TEMP.U + SIZE - EDIT_LENGTH));
      634     1177    5                       IF (EDIT_LENGTH > SIZE)

   1177  3 001270   200004 236100                    LDQ     EDIT_LENGTH,,AUTO
         3 001271   200117 116100                    CMPQ    SIZE,,AUTO
         3 001272   001322 604400 3                  TMOZ    s:1190

      635     1178    5                       THEN
      636     1179    5                            CALL INSERT(EDIT, 0, EDIT_LENGTH - SIZE, ' ');

   1179  3 001273   200117 136100                    SBLQ    SIZE,,AUTO
         3 001274   000000 620006                    EAX0    0,QL
         3 001275   040140 100400                    MLR     fill='040'O
         3 001276   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         3 001277   200013 000010                    ADSC9   EDIT,,AUTO               cn=0,n=*X0

PL6.E3A0      #001=OCM$TEMPLATE File=OCM$MESSAGE.:E05TSI                         WED 07/30/97 04:00 Page:90   
      637     1180    5                     END;                  /* DO if right_justified */

   1180  3 001300   001322 710000 3                  TRA     s:1190

      638     1181    4                  ELSE                     /* left justification       */
      639     1182    4                       CALL INSERT(EDIT, 0, EDIT_LENGTH,

   1182  3 001301   200117 720100                    LXL0    SIZE,,AUTO
         3 001302   200012 235100                    LDA     TEMP,,AUTO
         3 001303   200004 721100                    LXL1    EDIT_LENGTH,,AUTO
         3 001304   040140 100445                    MLR     fill='040'O
         3 001305   000000 000010 xsym               ADSC9   OCM_PARAM,A              cn=0,n=*X0
         3 001306   200013 000011                    ADSC9   EDIT,,AUTO               cn=0,n=*X1

      640     1183    4                            SUBSTR(OCM_PARAM, TEMP.U, SIZE));
      641     1184    4                END;                       /* DO IF width specified */

   1184  3 001307   001322 710000 3                  TRA     s:1190

      642     1185    3             ELSE                          /* widthless field */
      643     1186    4             DO;

      644     1187    4                  EDIT_LENGTH = SIZE;

   1187  3 001310   200117 235100                    LDA     SIZE,,AUTO
         3 001311   200004 755100                    STA     EDIT_LENGTH,,AUTO

      645     1188    4                  CALL INSERT(EDIT, 0, EDIT_LENGTH, SUBSTR(OCM_PARAM, TEMP.U));

   1188  3 001312   200012 720100                    LXL0    TEMP,,AUTO
         3 001313   777377 620010                    EAX0    -257,X0
         3 001314   777777 660003                    ERX0    -1,DU
         3 001315   200012 235100                    LDA     TEMP,,AUTO
         3 001316   200004 721100                    LXL1    EDIT_LENGTH,,AUTO
         3 001317   040140 100445                    MLR     fill='040'O
         3 001320   000000 000010 xsym               ADSC9   OCM_PARAM,A              cn=0,n=*X0
         3 001321   200013 000011                    ADSC9   EDIT,,AUTO               cn=0,n=*X1
PL6.E3A0      #001=OCM$TEMPLATE File=OCM$MESSAGE.:E05TSI                         WED 07/30/97 04:00 Page:91   

      646     1189    4                END;                       /* DO IF widthless */

      647     1190    3           END;                            /* DO IF non_null parameter */

   1190  3 001322   001324 710000 3                  TRA     s:1210

      648     1191        /*
      649     1192           at this point, the edited parameter is in SUBSTR(EDIT, 0, EDIT_LENGTH)
      650     1193                                                                           */
      651     1194        /**/
      652     1195        %EJECT;
PL6.E3A0      #001=OCM$TEMPLATE File=OCM$MESSAGE.:E05TSI                         WED 07/30/97 04:00 Page:92   
      653     1196        /*
      654     1197             S A M E
      655     1198                                                                           */
      656     1199        /*I* NAME: SAME -- secondary ENTRY point to PARAMETER
      657     1200             PURPOSE:  To process this parameter as if it were the
      658     1201                       same as the last parameter encountered.
      659     1202             CALL:  CALL SAME
      660     1203             DESCRIPTION:  If this is an indirect parameter, PTR_LIST is
      661     1204                           called to process the indirection.
      662     1205             ASSUMPTIONS:  EDIT and EDIT_LENGTH are set to correctly
      663     1206                           reflect the last parameter.  OCM_TPOSN points
      664     1207                           past the TYP_SAME# token upon entry.
      665     1208                                                                           */
      666     1209    2   SAME: ENTRY;                            /* secondary entry point    */

   1209  3 001323   200116 741300       SAME         STX1  ! TEXTUAL+1,,AUTO

      667     1210    2        CALL_PTRLIST = '0'B /*FALSE#*/;

   1210  3 001324   200121 450100                    STZ     CALL_PTRLIST,,AUTO

      668     1211    2        IF (OCM_TPOSN < OCM_TSIZE)

   1211  3 001325   000000 236000 xsym               LDQ     OCM_TPOSN
         3 001326   001331 604000 3                  TMI     s:1214
         3 001327   000000 116000 xsym               CMPQ    OCM_TSIZE
         3 001330   001345 603000 3                  TRC     s:1221

      669     1212    2        THEN
      670     1213    3        DO;

      671     1214    3             CALL GET_BYTE (TEMP.U);

   1214  3 001331   200012 630500                    EPPR0   TEMP,,AUTO
         3 001332   200131 450500                    STP0    @POSN,,AUTO
         3 001333   000003 701000 3                  TSX1    GET_BYTE
         3 001334   000000 011000                    NOP     0
PL6.E3A0      #001=OCM$TEMPLATE File=OCM$MESSAGE.:E05TSI                         WED 07/30/97 04:00 Page:93   

      672     1215    3             IF (TEMP.U = 4 /* TYP_PTRLIST# */)

   1215  3 001335   200012 235100                    LDA     TEMP,,AUTO
         3 001336   000004 115007                    CMPA    4,DL
         3 001337   001343 601000 3                  TNZ     s:1219

      673     1216    3             THEN
      674     1217    3                  CALL_PTRLIST = '1'B /*TRUE#*/;

   1217  3 001340   400000 236003                    LDQ     -131072,DU
         3 001341   200121 756100                    STQ     CALL_PTRLIST,,AUTO
         3 001342   001345 710000 3                  TRA     s:1221

      675     1218    3             ELSE
      676     1219    3                  OCM_TPOSN = OCM_TPOSN - 1;

   1219  3 001343   000001 336007                    LCQ     1,DL
         3 001344   000000 056000 xsym               ASQ     OCM_TPOSN

      677     1220    3           END;

      678     1221    2        IF CALL_PTRLIST

   1221  3 001345   200121 234100                    SZN     CALL_PTRLIST,,AUTO
         3 001346   001352 605000 3                  TPL     s:1225

      679     1222    2        THEN
      680     1223    2             CALL PTRLIST;

   1223  3 001347   001362 701000 3                  TSX1    PTRLIST
         3 001350   000000 011000                    NOP     0
         3 001351   001360 710000 3                  TRA     s:1226

      681     1224    2        ELSE
      682     1225    2             CALL ADD (EDIT_LENGTH, EDIT);

PL6.E3A0      #001=OCM$TEMPLATE File=OCM$MESSAGE.:E05TSI                         WED 07/30/97 04:00 Page:94   
   1225  3 001352   200013 630500                    EPPR0   EDIT,,AUTO
         3 001353   200124 450500                    STP0    OFFSET,,AUTO
         3 001354   200004 631500                    EPPR1   EDIT_LENGTH,,AUTO
         3 001355   200123 451500                    STP1    @LENGTH_,,AUTO
         3 001356   000050 701000 3                  TSX1    ADD
         3 001357   000000 011000                    NOP     0

      683     1226    2        RETURN;

   1226  3 001360   200116 221300                    LDX1  ! TEXTUAL+1,,AUTO
         3 001361   000001 702211                    TSX2  ! 1,X1

      684     1227    2   END PARAMETER;
      685     1228        /**/
      686     1229        %EJECT;
PL6.E3A0      #001=OCM$TEMPLATE File=OCM$MESSAGE.:E05TSI                         WED 07/30/97 04:00 Page:95   
      687     1230        /*
      688     1231             P T R _ L I S T
      689     1232                                                                           */
      690     1233        /*I* NAME:  PTR_LIST
      691     1234             PURPOSE:  To process an indirect parameter.
      692     1235             CALL:  CALL PTR_LIST
      693     1236             DESCRIPTION:  CHOICE_LIST is called repeatedly until
      694     1237                           a parameter which matches the indirect
      695     1238                           parameter is found, or there are no more
      696     1239                           choice lists.
      697     1240                           If there was a match, SKIP_TO is called to
      698     1241                           position past the pointer (indirect) list.
      699     1242                           If, however, no match was found but X was
      700     1243                           specified in a choice list, the template
      701     1244                           associated with that choice is positioned to
      702     1245                           and OCM$TEMPLATE is called to process the
      703     1246                           template.  The pointer list is then skipped
      704     1247                           over via SKIP_TO.
      705     1248                           If there was no match and X was not specified,
      706     1249                           nothing happens (this is equivalent to null
      707     1250                           parameter insertion).
      708     1251             ASSUMPTIONS:  OCM_TPOSN points past the TYP_PTRLIST# token
      709     1252                           upon entry.
      710     1253                                                                           */
      711     1254    1   PTRLIST: PROC;

   1254  3 001362   200122 741300       PTRLIST      STX1  ! CALL_PTRLIST+1,,AUTO

      712     1255    2   DCL LIMIT UBIN WORD;
      713     1256    2        MATCH = '0'B /*FALSE#*/;

   1256  3 001363   200113 450100                    STZ     MATCH,,AUTO

      714     1257    2        OPOSN = 0;

   1257  3 001364   200005 450100                    STZ     OPOSN,,AUTO

PL6.E3A0      #001=OCM$TEMPLATE File=OCM$MESSAGE.:E05TSI                         WED 07/30/97 04:00 Page:96   
      715     1258    2        CALL GET_HALF(LIMIT);

   1258  3 001365   200123 630500                    EPPR0   LIMIT,,AUTO
         3 001366   200131 450500                    STP0    @POSN,,AUTO
         3 001367   000025 701000 3                  TSX1    GET_HALF
         3 001370   000000 011000                    NOP     0

      716     1259    2        LIMIT = LIMIT + OCM_TPOSN;

   1259  3 001371   200123 236100                    LDQ     LIMIT,,AUTO
         3 001372   000000 036000 xsym               ADLQ    OCM_TPOSN
         3 001373   200123 756100                    STQ     LIMIT,,AUTO

      717     1260    3        DO WHILE (OCM_TPOSN < LIMIT);

   1260  3 001374   001377 604000 3                  TMI     s:1261
         3 001375   000000 116000 xsym               CMPQ    OCM_TPOSN
         3 001376   001426 604400 3                  TMOZ    s:1271

      718     1261    3             CALL GET_BYTE(TOKEN);

   1261  3 001377   200006 630500                    EPPR0   TOKEN,,AUTO
         3 001400   200131 450500                    STP0    @POSN,,AUTO
         3 001401   000003 701000 3                  TSX1    GET_BYTE
         3 001402   000000 011000                    NOP     0

      719     1262    3             IF (TOKEN = 5 /* TYP_CHLIST# */)

   1262  3 001403   200006 235100                    LDA     TOKEN,,AUTO
         3 001404   000005 115007                    CMPA    5,DL
         3 001405   001411 601000 3                  TNZ     s:1266

      720     1263    3             THEN
      721     1264    3                  CALL CHOICELIST;

   1264  3 001406   001472 701000 3                  TSX1    CHOICELIST
         3 001407   000000 011000                    NOP     0
PL6.E3A0      #001=OCM$TEMPLATE File=OCM$MESSAGE.:E05TSI                         WED 07/30/97 04:00 Page:97   
         3 001410   001414 710000 3                  TRA     s:1267

      722     1265    3             ELSE
      723     1266    3                  CALL OCM$DONE;

   1266  3 001411   000002 631400 xsym               EPPR1   B_VECTNIL+2
         3 001412   000000 701000 xent               TSX1    OCM$DONE
         3 001413   000000 011000                    NOP     0

      724     1267    3             IF MATCH

   1267  3 001414   200113 234100                    SZN     MATCH,,AUTO
         3 001415   001422 605000 3                  TPL     s:1270

      725     1268    3             THEN
      726     1269    3                  CALL SKIP_TO(LIMIT);

   1269  3 001416   200123 630500                    EPPR0   LIMIT,,AUTO
         3 001417   200131 450500                    STP0    @POSN,,AUTO
         3 001420   000453 701000 3                  TSX1    SKIP_TO
         3 001421   000000 011000                    NOP     0

      727     1270    3           END;

   1270  3 001422   000000 236000 xsym               LDQ     OCM_TPOSN
         3 001423   001377 604000 3                  TMI     s:1261
         3 001424   200123 116100                    CMPQ    LIMIT,,AUTO
         3 001425   001377 602000 3                  TNC     s:1261

      728     1271    2        IF (LIMIT ~= OCM_TPOSN)

   1271  3 001426   200123 236100                    LDQ     LIMIT,,AUTO
         3 001427   001432 604000 3                  TMI     s:1273
         3 001430   000000 116000 xsym               CMPQ    OCM_TPOSN
         3 001431   001435 600000 3                  TZE     s:1274

      729     1272    2        THEN
PL6.E3A0      #001=OCM$TEMPLATE File=OCM$MESSAGE.:E05TSI                         WED 07/30/97 04:00 Page:98   
      730     1273    2             CALL OCM$DONE;

   1273  3 001432   000002 631400 xsym               EPPR1   B_VECTNIL+2
         3 001433   000000 701000 xent               TSX1    OCM$DONE
         3 001434   000000 011000                    NOP     0

      731     1274    2        IF ~MATCH

   1274  3 001435   200113 236100                    LDQ     MATCH,,AUTO
         3 001436   400000 376003                    ANQ     -131072,DU
         3 001437   400000 676003                    ERQ     -131072,DU
         3 001440   001470 600000 3                  TZE     s:1290

      732     1275    2        THEN
      733     1276    2             IF (OPOSN ~= 0)               /* otherwise specified */

   1276  3 001441   200005 235100                    LDA     OPOSN,,AUTO
         3 001442   001470 600000 3                  TZE     s:1290

      734     1277    2             THEN
      735     1278    3             DO;

      736     1279    3                  CALL SKIP_TO(OPOSN);

   1279  3 001443   200005 630500                    EPPR0   OPOSN,,AUTO
         3 001444   200131 450500                    STP0    @POSN,,AUTO
         3 001445   000453 701000 3                  TSX1    SKIP_TO
         3 001446   000000 011000                    NOP     0

      737     1280    3                  CALL GET_BYTE(TOKEN);

   1280  3 001447   200006 630500                    EPPR0   TOKEN,,AUTO
         3 001450   200131 450500                    STP0    @POSN,,AUTO
         3 001451   000003 701000 3                  TSX1    GET_BYTE
         3 001452   000000 011000                    NOP     0

      738     1281    3                  IF(TOKEN = 0 /* TYP_TEMPLATE# */)
PL6.E3A0      #001=OCM$TEMPLATE File=OCM$MESSAGE.:E05TSI                         WED 07/30/97 04:00 Page:99   

   1281  3 001453   200006 235100                    LDA     TOKEN,,AUTO
         3 001454   001465 601000 3                  TNZ     s:1288

      739     1282    3                  THEN
      740     1283    4                  DO;

      741     1284    4                       CALL OCM$TEMPLATE;

   1284  3 001455   000002 631400 xsym               EPPR1   B_VECTNIL+2
         3 001456   000000 701000 3                  TSX1    s:55
         3 001457   000000 011000                    NOP     0

      742     1285    4                       CALL SKIP_TO(LIMIT);

   1285  3 001460   200123 630500                    EPPR0   LIMIT,,AUTO
         3 001461   200131 450500                    STP0    @POSN,,AUTO
         3 001462   000453 701000 3                  TSX1    SKIP_TO
         3 001463   000000 011000                    NOP     0

      743     1286    4                     END;

   1286  3 001464   001470 710000 3                  TRA     s:1290

      744     1287    3                  ELSE
      745     1288    3                       CALL OCM$DONE;

   1288  3 001465   000002 631400 xsym               EPPR1   B_VECTNIL+2
         3 001466   000000 701000 xent               TSX1    OCM$DONE
         3 001467   000000 011000                    NOP     0

      746     1289    3                END;

      747     1290    2        RETURN;

   1290  3 001470   200122 221300                    LDX1  ! CALL_PTRLIST+1,,AUTO
         3 001471   000001 702211                    TSX2  ! 1,X1
PL6.E3A0      #001=OCM$TEMPLATE File=OCM$MESSAGE.:E05TSI                         WED 07/30/97 04:00 Page:100  

      748     1291    2   END PTRLIST;
      749     1292        /**/
      750     1293        %EJECT;
PL6.E3A0      #001=OCM$TEMPLATE File=OCM$MESSAGE.:E05TSI                         WED 07/30/97 04:00 Page:101  
      751     1294        /*
      752     1295             C H O I C E _ L I S T
      753     1296                                                                           */
      754     1297        /*I* NAME:  CHOICE_LIST
      755     1298             PURPOSE:  To determine whether the current choice list
      756     1299                       contains a match to the indirect parameter.
      757     1300             CALL:  CALL CHOICE_LIST;
      758     1301             DESCRIPTION:  Choices in the current choice list are
      759     1302                           compared sequentially with the indirect
      760     1303                           parameter;  if a match is found, the associated
      761     1304                           template is processed.  OCM_TPOSN is set to
      762     1305                           point past this choice list and match is set
      763     1306                           to indicate the result of the search.  If X was
      764     1307                           one of the choices scanned, OPOSN is set to
      765     1308                           indicate the position of its template.
      766     1309             ASSUMPTIONS:  EDIT and EDIT_LENGTH contain the indirect
      767     1310                           parameter and its length.  OCM_TPOSN points
      768     1311                           past the TYP_CHLIST# token upon entry.
      769     1312                                                                           */
      770     1313    1   CHOICELIST: PROC;

   1313  3 001472   200124 741300       CHOICELIST   STX1  ! OFFSET,,AUTO

      771     1314    2   DCL LIMIT UBIN WORD;
      772     1315    2   DCL SIZE UBIN WORD;
      773     1316    2        CALL GET_HALF(LIMIT);

   1316  3 001473   200125 630500                    EPPR0   LIMIT,,AUTO
         3 001474   200131 450500                    STP0    @POSN,,AUTO
         3 001475   000025 701000 3                  TSX1    GET_HALF
         3 001476   000000 011000                    NOP     0

      774     1317    2        LIMIT = LIMIT + OCM_TPOSN;         /* point to template        */

   1317  3 001477   200125 236100                    LDQ     LIMIT,,AUTO
         3 001500   000000 036000 xsym               ADLQ    OCM_TPOSN
         3 001501   200125 756100                    STQ     LIMIT,,AUTO
PL6.E3A0      #001=OCM$TEMPLATE File=OCM$MESSAGE.:E05TSI                         WED 07/30/97 04:00 Page:102  

      775     1318    3        DO WHILE (OCM_TPOSN < LIMIT);

   1318  3 001502   001505 604000 3                  TMI     s:1319
         3 001503   000000 116000 xsym               CMPQ    OCM_TPOSN
         3 001504   001635 604400 3                  TMOZ    s:1369

      776     1319    3             CALL GET_BYTE(TOKEN);

   1319  3 001505   200006 630500                    EPPR0   TOKEN,,AUTO
         3 001506   200131 450500                    STP0    @POSN,,AUTO
         3 001507   000003 701000 3                  TSX1    GET_BYTE
         3 001510   000000 011000                    NOP     0

      777     1320    4             DO CASE (TOKEN);

   1320  3 001511   200006 235100                    LDA     TOKEN,,AUTO
         3 001512   000006 135007                    SBLA    6,DL
         3 001513   000003 115007                    CMPA    3,DL
         3 001514   001516 602005 3                  TNC     s:1320+5,AL
         3 001515   001610 710000 3                  TRA     s:1360
         3 001516   001534 710000 3                  TRA     s:1333
         3 001517   001525 710000 3                  TRA     s:1326
         3 001520   001521 710000 3                  TRA     s:1322

      778     1321    4             CASE (8 /* TYP_OTHERWISE# */);

      779     1322    4                OPOSN = LIMIT;             /* save pointer to template */

   1322  3 001521   200125 236100                    LDQ     LIMIT,,AUTO
         3 001522   200005 756100                    STQ     OPOSN,,AUTO

      780     1323    4                SIZE = 0;

   1323  3 001523   200126 450100                    STZ     SIZE,,AUTO
         3 001524   001613 710000 3                  TRA     s:1363

PL6.E3A0      #001=OCM$TEMPLATE File=OCM$MESSAGE.:E05TSI                         WED 07/30/97 04:00 Page:103  
      781     1324                                                /**/
      782     1325    4             CASE (7 /* TYP_NULL# */);

      783     1326    4                IF EDIT_LENGTH = 0

   1326  3 001525   200004 236100                    LDQ     EDIT_LENGTH,,AUTO
         3 001526   001532 601000 3                  TNZ     s:1330

      784     1327    4                THEN
      785     1328    4                     MATCH = '1'B /*TRUE#*/;

   1328  3 001527   400000 236003                    LDQ     -131072,DU
         3 001530   200113 756100                    STQ     MATCH,,AUTO
         3 001531   001613 710000 3                  TRA     s:1363

      786     1329    4                ELSE
      787     1330    4                     SIZE = 0;

   1330  3 001532   200126 450100                    STZ     SIZE,,AUTO
         3 001533   001613 710000 3                  TRA     s:1363

      788     1331                                                /**/
      789     1332    4             CASE (6 /* TYP_CHOICE# */);

      790     1333    4                CALL GET_HALF(SIZE);

   1333  3 001534   200126 630500                    EPPR0   SIZE,,AUTO
         3 001535   200131 450500                    STP0    @POSN,,AUTO
         3 001536   000025 701000 3                  TSX1    GET_HALF
         3 001537   000000 011000                    NOP     0

      791     1334    4                IF TEXTUAL

   1334  3 001540   200115 234100                    SZN     TEXTUAL,,AUTO
         3 001541   001560 605000 3                  TPL     s:1346

      792     1335    4                THEN
PL6.E3A0      #001=OCM$TEMPLATE File=OCM$MESSAGE.:E05TSI                         WED 07/30/97 04:00 Page:104  
      793     1336    4                     IF (SIZE = EDIT_LENGTH)

   1336  3 001542   200126 236100                    LDQ     SIZE,,AUTO
         3 001543   001613 604000 3                  TMI     s:1363
         3 001544   200004 116100                    CMPQ    EDIT_LENGTH,,AUTO
         3 001545   001613 601000 3                  TNZ     s:1363

      794     1337    4                     THEN
      795     1338    4                          IF (SUBSTR(EDIT, 0, SIZE) =

   1338  3 001546   000000 620006                    EAX0    0,QL
         3 001547   200126 721100                    LXL1    SIZE,,AUTO
         3 001550   000000 235000 xsym               LDA     OCM_TPOSN
         3 001551   040045 106540                    CMPC    fill='040'O
         3 001552   200013 000010                    ADSC9   EDIT,,AUTO               cn=0,n=*X0
         3 001553   000000 000011 xsym               ADSC9   OCM_TEMPLATE,A           cn=0,n=*X1
         3 001554   001613 601000 3                  TNZ     s:1363

      796     1339    4                               SUBSTR(OCM_TEMPLATE, OCM_TPOSN, SIZE))
      797     1340    4                          THEN
      798     1341    4                               MATCH = '1'B /*TRUE#*/;

   1341  3 001555   400000 236003                    LDQ     -131072,DU
         3 001556   200113 756100                    STQ     MATCH,,AUTO
         3 001557   001613 710000 3                  TRA     s:1363

      799     1342    4                          ELSE ;
      800     1343    4                     ELSE ;
      801     1344    4                ELSE                       /* numeric        */
      802     1345    5                DO;

      803     1346    5                     IF (SIZE > 4)

   1346  3 001560   200126 235100                    LDA     SIZE,,AUTO
         3 001561   000005 115007                    CMPA    5,DL
         3 001562   001566 602000 3                  TNC     s:1350

PL6.E3A0      #001=OCM$TEMPLATE File=OCM$MESSAGE.:E05TSI                         WED 07/30/97 04:00 Page:105  
      804     1347    5                     THEN
      805     1348    5                          TEMP.U = 4;

   1348  3 001563   000004 236007                    LDQ     4,DL
         3 001564   200012 756100                    STQ     TEMP,,AUTO
         3 001565   001567 710000 3                  TRA     s:1351

      806     1349    5                     ELSE
      807     1350    5                          TEMP.U = SIZE;

   1350  3 001566   200012 755100                    STA     TEMP,,AUTO

      808     1351    5                     NUMBER.U = 0;

   1351  3 001567   200010 450100                    STZ     NUMBER,,AUTO

      809     1352    5                     CALL INSERT(NUMBER.C, 4 - TEMP.S, TEMP.S,

   1352  3 001570   000000 236000 xsym               LDQ     OCM_TPOSN
         3 001571   200126 036100                    ADLQ    SIZE,,AUTO
         3 001572   200012 136100                    SBLQ    TEMP,,AUTO
         3 001573   767777 620006                    EAX0    -4097,QL
         3 001574   777777 660003                    ERX0    -1,DU
         3 001575   200012 335100                    LCA     TEMP,,AUTO
         3 001576   200012 721100                    LXL1    TEMP,,AUTO
         3 001577   040145 100446                    MLR     fill='040'O
         3 001600   000000 000010 xsym               ADSC9   OCM_TEMPLATE,Q           cn=0,n=*X0
         3 001601   200011 000011                    ADSC9   PIC_U,A,AUTO             cn=0,n=*X1

      810     1353    5                          SUBSTR(OCM_TEMPLATE, OCM_TPOSN + SIZE - TEMP.S));
      811     1354    5                     IF (NUMBER.U = VALUE)

   1354  3 001602   200010 236100                    LDQ     NUMBER,,AUTO
         3 001603   200007 116100                    CMPQ    VALUE,,AUTO
         3 001604   001613 601000 3                  TNZ     s:1363

      812     1355    5                     THEN
PL6.E3A0      #001=OCM$TEMPLATE File=OCM$MESSAGE.:E05TSI                         WED 07/30/97 04:00 Page:106  
      813     1356    5                          MATCH = '1'B /*TRUE#*/;

   1356  3 001605   400000 236003                    LDQ     -131072,DU
         3 001606   200113 756100                    STQ     MATCH,,AUTO

      814     1357    5                   END;

   1357  3 001607   001613 710000 3                  TRA     s:1363

      815     1358                                                /**/
      816     1359    4             CASE (ELSE);

      817     1360    4                CALL OCM$DONE;

   1360  3 001610   000002 631400 xsym               EPPR1   B_VECTNIL+2
         3 001611   000000 701000 xent               TSX1    OCM$DONE
         3 001612   000000 011000                    NOP     0

      818     1361                                                /**/
      819     1362    4             END;

      820     1363    3             IF MATCH                      /* advance OCM_TPOSN to template */

   1363  3 001613   200113 234100                    SZN     MATCH,,AUTO
         3 001614   001622 605000 3                  TPL     s:1367

      821     1364    3             THEN
      822     1365    3                  CALL SKIP_TO(LIMIT);

   1365  3 001615   200125 630500                    EPPR0   LIMIT,,AUTO
         3 001616   200131 450500                    STP0    @POSN,,AUTO
         3 001617   000453 701000 3                  TSX1    SKIP_TO
         3 001620   000000 011000                    NOP     0
         3 001621   001631 710000 3                  TRA     s:1368

      823     1366    3             ELSE
      824     1367    3                  CALL SKIP_TO (OCM_TPOSN + SIZE); /* no match yet   */
PL6.E3A0      #001=OCM$TEMPLATE File=OCM$MESSAGE.:E05TSI                         WED 07/30/97 04:00 Page:107  

   1367  3 001622   000000 236000 xsym               LDQ     OCM_TPOSN
         3 001623   200126 036100                    ADLQ    SIZE,,AUTO
         3 001624   200136 756100                    STQ     @POSN+5,,AUTO
         3 001625   200136 630500                    EPPR0   @POSN+5,,AUTO
         3 001626   200131 450500                    STP0    @POSN,,AUTO
         3 001627   000453 701000 3                  TSX1    SKIP_TO
         3 001630   000000 011000                    NOP     0

      825     1368    3           END;

   1368  3 001631   000000 236000 xsym               LDQ     OCM_TPOSN
         3 001632   001505 604000 3                  TMI     s:1319
         3 001633   200125 116100                    CMPQ    LIMIT,,AUTO
         3 001634   001505 602000 3                  TNC     s:1319

      826     1369    2        IF (LIMIT = OCM_TPOSN)

   1369  3 001635   200125 236100                    LDQ     LIMIT,,AUTO
         3 001636   001675 604000 3                  TMI     s:1386
         3 001637   000000 116000 xsym               CMPQ    OCM_TPOSN
         3 001640   001675 601000 3                  TNZ     s:1386

      827     1370    2        THEN
      828     1371    3        DO;

      829     1372    3             CALL GET_BYTE (TOKEN);

   1372  3 001641   200006 630500                    EPPR0   TOKEN,,AUTO
         3 001642   200131 450500                    STP0    @POSN,,AUTO
         3 001643   000003 701000 3                  TSX1    GET_BYTE
         3 001644   000000 011000                    NOP     0

      830     1373    3             IF (TOKEN ~= 0 /* TYP_TEMPLATE# */)

   1373  3 001645   200006 235100                    LDA     TOKEN,,AUTO
         3 001646   001653 600000 3                  TZE     s:1377
PL6.E3A0      #001=OCM$TEMPLATE File=OCM$MESSAGE.:E05TSI                         WED 07/30/97 04:00 Page:108  

      831     1374    3             THEN
      832     1375    3                  CALL OCM$DONE;

   1375  3 001647   000002 631400 xsym               EPPR1   B_VECTNIL+2
         3 001650   000000 701000 xent               TSX1    OCM$DONE
         3 001651   000000 011000                    NOP     0
         3 001652   001700 710000 3                  TRA     s:1387

      833     1376    3             ELSE
      834     1377    3                  IF MATCH                 /* process this match */

   1377  3 001653   200113 234100                    SZN     MATCH,,AUTO
         3 001654   001661 605000 3                  TPL     s:1381

      835     1378    3                  THEN
      836     1379    3                       CALL OCM$TEMPLATE;

   1379  3 001655   000002 631400 xsym               EPPR1   B_VECTNIL+2
         3 001656   000000 701000 3                  TSX1    s:55
         3 001657   000000 011000                    NOP     0
         3 001660   001700 710000 3                  TRA     s:1387

      837     1380    4                  ELSE DO;

      838     1381    4                       CALL GET_HALF(LIMIT);

   1381  3 001661   200125 630500                    EPPR0   LIMIT,,AUTO
         3 001662   200131 450500                    STP0    @POSN,,AUTO
         3 001663   000025 701000 3                  TSX1    GET_HALF
         3 001664   000000 011000                    NOP     0

      839     1382    4                       CALL SKIP_TO (OCM_TPOSN + LIMIT);

   1382  3 001665   000000 236000 xsym               LDQ     OCM_TPOSN
         3 001666   200125 036100                    ADLQ    LIMIT,,AUTO
         3 001667   200137 756100                    STQ     @POSN+6,,AUTO
PL6.E3A0      #001=OCM$TEMPLATE File=OCM$MESSAGE.:E05TSI                         WED 07/30/97 04:00 Page:109  
         3 001670   200137 630500                    EPPR0   @POSN+6,,AUTO
         3 001671   200131 450500                    STP0    @POSN,,AUTO
         3 001672   000453 701000 3                  TSX1    SKIP_TO
         3 001673   000000 011000                    NOP     0

      840     1383    4                     END;

      841     1384    3           END;

   1384  3 001674   001700 710000 3                  TRA     s:1387

      842     1385    2        ELSE
      843     1386    2             CALL OCM$DONE;

   1386  3 001675   000002 631400 xsym               EPPR1   B_VECTNIL+2
         3 001676   000000 701000 xent               TSX1    OCM$DONE
         3 001677   000000 011000                    NOP     0

      844     1387    2        RETURN;

   1387  3 001700   200124 221300                    LDX1  ! OFFSET,,AUTO
         3 001701   000001 702211                    TSX2  ! 1,X1

      845     1388    2   END CHOICELIST;
      846     1389        /**/
      847     1390        %EJECT;
PL6.E3A0      #001=OCM$TEMPLATE File=OCM$MESSAGE.:E05TSI                         WED 07/30/97 04:00 Page:110  
      848     1391        /*
      849     1392                  Begin main routine
      850     1393                                                                           */
      851     1394    1        OCM_PROMPT.SIZE = 0;

   1394  3 001702   000000 236003                    LDQ     0,DU
         3 001703   000000 552040 xsym               STBQ    OCM_PROMPT,'40'O

      852     1395
      853     1396    1        CALL GET_HALF (LIMIT);

   1396  3 001704   200003 630500                    EPPR0   LIMIT,,AUTO
         3 001705   200131 450500                    STP0    SIZE+3,,AUTO
         3 001706   000025 701000 3                  TSX1    GET_HALF
         3 001707   000000 011000                    NOP     0

      854     1397    1        LIMIT = LIMIT + OCM_TPOSN;

   1397  3 001710   200003 236100                    LDQ     LIMIT,,AUTO
         3 001711   000000 036000 xsym               ADLQ    OCM_TPOSN
         3 001712   200003 756100                    STQ     LIMIT,,AUTO

      855     1398    2        DO WHILE (OCM_TPOSN < LIMIT);

   1398  3 001713   001716 604000 3                  TMI     s:1399
         3 001714   000000 116000 xsym               CMPQ    OCM_TPOSN
         3 001715   001752 604400 3                  TMOZ    s:1415

      856     1399    2             CALL GET_BYTE(TOKEN);

   1399  3 001716   200006 630500                    EPPR0   TOKEN,,AUTO
         3 001717   200131 450500                    STP0    SIZE+3,,AUTO
         3 001720   000003 701000 3                  TSX1    GET_BYTE
         3 001721   000000 011000                    NOP     0

      857     1400    3             DO CASE (TOKEN);

PL6.E3A0      #001=OCM$TEMPLATE File=OCM$MESSAGE.:E05TSI                         WED 07/30/97 04:00 Page:111  
   1400  3 001722   200006 235100                    LDA     TOKEN,,AUTO
         3 001723   000004 115007                    CMPA    4,DL
         3 001724   001726 602005 3                  TNC     s:1400+4,AL
         3 001725   001743 710000 3                  TRA     s:1411
         3 001726   001743 710000 3                  TRA     s:1411
         3 001727   001732 710000 3                  TRA     s:1402
         3 001730   001735 710000 3                  TRA     s:1405
         3 001731   001740 710000 3                  TRA     s:1408

      858     1401    3             CASE (1 /* TYP_STRING# */);

      859     1402    3                CALL STRING;

   1402  3 001732   000470 701000 3                  TSX1    STRING
         3 001733   000000 011000                    NOP     0
         3 001734   001746 710000 3                  TRA     s:1414

      860     1403                                                /**/
      861     1404    3             CASE (2 /* TYP_PARAM# */);

      862     1405    3                CALL PARAMETER;

   1405  3 001735   000516 701000 3                  TSX1    PARAMETER
         3 001736   000000 011000                    NOP     0
         3 001737   001746 710000 3                  TRA     s:1414

      863     1406                                                /**/
      864     1407    3             CASE (3 /* TYP_SAME# */);

      865     1408    3                CALL SAME;

   1408  3 001740   001323 701000 3                  TSX1    SAME
         3 001741   000000 011000                    NOP     0
         3 001742   001746 710000 3                  TRA     s:1414

      866     1409                                                /**/
      867     1410    3             CASE (ELSE);
PL6.E3A0      #001=OCM$TEMPLATE File=OCM$MESSAGE.:E05TSI                         WED 07/30/97 04:00 Page:112  

      868     1411    3                CALL OCM$DONE;

   1411  3 001743   000002 631400 xsym               EPPR1   B_VECTNIL+2
         3 001744   000000 701000 xent               TSX1    OCM$DONE
         3 001745   000000 011000                    NOP     0

      869     1412                                                /**/
      870     1413    3             END;

      871     1414    2           END;

   1414  3 001746   000000 236000 xsym               LDQ     OCM_TPOSN
         3 001747   001716 604000 3                  TMI     s:1399
         3 001750   200003 116100                    CMPQ    LIMIT,,AUTO
         3 001751   001716 602000 3                  TNC     s:1399

      872     1415    1        IF (LIMIT ~= OCM_TPOSN)

   1415  3 001752   200003 236100                    LDQ     LIMIT,,AUTO
         3 001753   001756 604000 3                  TMI     s:1417
         3 001754   000000 116000 xsym               CMPQ    OCM_TPOSN
         3 001755   001762 600000 3                  TZE     s:1419

      873     1416    1        THEN
      874     1417    1             CALL OCM$DONE;

   1417  3 001756   000002 631400 xsym               EPPR1   B_VECTNIL+2
         3 001757   000000 701000 xent               TSX1    OCM$DONE
         3 001760   000000 011000                    NOP     0
         3 001761   001763 710000 3                  TRA     s:1420

      875     1418    1        ELSE
      876     1419    1             RETURN;

   1419  3 001762   000000 702200 xent               TSX2  ! X66_ARET

PL6.E3A0      #001=OCM$TEMPLATE File=OCM$MESSAGE.:E05TSI                         WED 07/30/97 04:00 Page:113  
      877     1420    1   END OCM$TEMPLATE;

   1420  3 001763   000000 702200 xent               TSX2  ! X66_ARET
      878     1421        %EOD;

PL6.E3A0      #001=OCM$TEMPLATE File=OCM$MESSAGE.:E05TSI                         WED 07/30/97 04:00 Page:114  
--  Include file information  --

   OCM_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   OUT_SUBS_C.:E05TOU  is referenced.
   OC$MESSHD_C.:E05TOU  is referenced.
   OC_DAT_R.:E05TOU  cannot be made into a system file and is referenced.
   OCI_SUBS_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure OCM$TEMPLATE.
PL6.E3A0      #001=OCM$TEMPLATE File=OCM$MESSAGE.:E05TSI                         WED 07/30/97 04:00 Page:115  

 **** Variables and constants ****

  ****  Section 000 RoData OCM$TEMPLATE

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR(16)    r     1 HEX_DIGITS
     4-0-0/b SBIN(9)     r     1 TIME_SIZE(0:5)

  ****  Section 002  Data  OCM$TEMPLATE

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d STRC(432)   r     1 GET_TIME1                 14-0-0/d STRC(432)   r     1 GET_TIME2
    30-0-0/d STRC(432)   r     1 GET_TIME3                 44-0-0/d STRC(432)   r     1 GET_TSTAMP
    60-0-0/c STRC(162)   r     1 TIME_STAMPA               60-0-0/c STRC(162)   r     1 TIME_STAMPL
    60-0-0/c STRC(162)   r     1 TIME_STAMPS               60-0-0/c CHAR(18)    r     1 TIME_STRING

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

   131-0-0/w PTR         r     1 @BYTE_                   131-0-0/w PTR         r     1 @HALF_
   123-0-0/w PTR         r     1 @LENGTH_                 123-0-0/w PTR         r     1 @LENGTH_
   131-0-0/w PTR         r     1 @POSN                    124-0-0/w PTR         r     1 @STRING_
    *0-0-0/w CHAR(4)     r     1 BYTES_                    *0-0-0/w UBIN        r     1 BYTE_
   121-0-0/b BIT         r     1 CALL_PTRLIST              13-0-0/c CHAR(256)   r     1 EDIT
     4-0-0/w SBIN        r     1 EDIT_LENGTH               *0-0-0/w UBIN        r     1 HALF_
   125-0-0/w SBIN        r     1 I                        120-0-0/w SBIN        r     1 I
    10-0-0/w STRC        r     1 JERR                      *0-0-0/w UBIN        r     1 LENGTH_
    *0-0-0/w UBIN        r     1 LENGTH_                    3-0-0/w UBIN        r     1 LIMIT
   117-0-0/w UBIN        r     1 LIMIT                    123-0-0/w UBIN        r     1 LIMIT
   125-0-0/w UBIN        r     1 LIMIT                    113-0-0/b BIT         r     1 MATCH
    10-0-0/w STRC        r     1 NUMBER                   124-0-0/w SBIN        r     1 OFFSET
PL6.E3A0      #001=OCM$TEMPLATE File=OCM$MESSAGE.:E05TSI                         WED 07/30/97 04:00 Page:116  
     5-0-0/w UBIN        r     1 OPOSN                     11-0-0/w STRC        r     1 PIC
    11-0-0/w STRC        r     1 PICU                      11-0-0/w UBIN        r     1 PIC_U
    *0-0-0/w UBIN        r     1 POSN                     114-0-0/b BIT         r     1 RIGHT
   125-0-0/w UBIN        r     1 SIZE                     117-0-0/w SBIN        r     1 SIZE
   126-0-0/w UBIN        r     1 SIZE                      *0-0-0/c ACHR        r     1 STRING_
    12-0-0/w STRC        r     1 TEMP                     115-0-0/b BIT         r     1 TEXTUAL
     6-0-0/w UBIN        r     1 TOKEN                      7-0-0/w UBIN        r     1 VALUE

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN        r     1 OCM_BPOSN                  0-0-0/c CHAR(256)   r     1 OCM_BUFFER
     0-0-0/c STRC(549)   r     1 OCM_CLASSES(0:8191)
     0-0-0/b BIT         r     1 OCM_KEY_FLAG               0-0-0/c CHAR(256)   r     1 OCM_PARAM
     0-0-0/w SBIN        r     1 OCM_PARAM#                 0-0-0/w PTR         r     1 OCM_PARAM$
     0-0-0/c STRC(288)   r     1 OCM_PROMPT                 0-0-0/c CHAR(4096)  r     1 OCM_TEMPLATE
     0-0-0/w SBIN        r     1 OCM_TPOSN                  0-0-0/w UBIN        r     1 OCM_TSIZE
     0-0-0/w UBIN        r     1 OCM_TSTAMP                 0-0-0/w PTR         r     1 OC_CONSOLE$
     0-0-0/w UBIN(18)    r     1 OC_MAXCONSOLE              0-0-0/c STRC(1800)  r     1 OC_MESSBUF

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(2205)  r     1 OC_CONSOLE(0:0)
     0-0-0/c STRC(306)   r     1 PROMPT_TABLE(0:2)
     0-0-0/c ACHR        r     1 STRING


   Procedure OCM$TEMPLATE requires 1012 words for executable code.
   Procedure OCM$TEMPLATE requires 96 words of local(AUTO) storage.
PL6.E3A0      #001=OCM$TEMPLATE File=OCM$MESSAGE.:E05TSI                         WED 07/30/97 04:00 Page:117  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=OCM$TEMPLATE File=OCM$MESSAGE.:E05TSI                         WED 07/30/97 04:00 Page:118  
          MINI XREF LISTING

ADD
       748**PROC      960--CALL     1225--CALL
BYTES_ IN PROCEDURE GET_HALF
       723**DCL       731<<CALLBLT
BYTE_ IN PROCEDURE GET_BYTE
       700**DCL       699--PROC      706<<ASSIGN
CALL_PTRLIST IN PROCEDURE PARAMETER
       986**DCL      1210<<ASSIGN   1217<<ASSIGN   1221>>IF
CHOICELIST
      1313**PROC     1264--CALL
EDIT
        87**DCL      1175<<CALLBLT  1179<<CALLBLT  1182<<CALLBLT  1188<<CALLBLT  1225<>CALL     1338>>IF
EDIT_LENGTH
        61**DCL       989<>CALL      990>>IF       1005>>ASSIGN   1006>>DOINDEX  1011>>ASSIGN   1017>>ASSIGN
      1021>>DOINDEX  1036>>IF       1040>>ASSIGN   1041>>CALLBLT  1080<<ASSIGN   1117<<ASSIGN   1171<<ASSIGN
      1175>>CALLBLT  1175>>CALLBLT  1177>>IF       1179>>CALLBLT  1182>>CALLBLT  1187<<ASSIGN   1188>>CALLBLT
      1225<>CALL     1326>>IF       1336>>IF
GET_BYTE
       699**PROC      988--CALL      995--CALL     1030--CALL     1126--CALL     1156--CALL     1165--CALL
      1214--CALL     1261--CALL     1280--CALL     1319--CALL     1372--CALL     1399--CALL
GET_HALF
       721**PROC      959--CALL     1258--CALL     1316--CALL     1333--CALL     1381--CALL     1396--CALL
GET_PARAM
       780**PROC      989--CALL
GET_TIME1
       191**DCL       868<>CALL      877<>CALL
GET_TIME1.V
       195**DCL       191--DCLINIT
GET_TIME2
       216**DCL       872<>CALL
GET_TIME2.V
       220**DCL       216--DCLINIT
PL6.E3A0      #001=OCM$TEMPLATE File=OCM$MESSAGE.:E05TSI                         WED 07/30/97 04:00 Page:119  
GET_TIME3
       240**DCL       878<>CALL
GET_TIME3.V
       244**DCL       240--DCLINIT
GET_TSTAMP
       263**DCL       863<>CALL
GET_TSTAMP.V
       267**DCL       263--DCLINIT
HALF_ IN PROCEDURE GET_HALF
       722**DCL       721--PROC      723--REDEF     730<<ASSIGN
HEX_DIGITS
        82**DCL      1057>>CALLBLT
I IN PROCEDURE GET_PARAM
       783**DCL       809<<DOINDEX   810>>IF        817>>ASSIGN    819>>ASSIGN    823<<ASSIGN    851<<ASSIGN
       858>>ASSIGN    864>>DOCASE    894<<ASSIGN    895>>ASSIGN    896>>ASSIGN    915<<DOINDEX   916>>ASSIGN
I IN PROCEDURE PARAMETER
       985**DCL      1006<<DOINDEX  1007>>IF       1010>>ASSIGN   1011<<ASSIGN   1021<<DOINDEX  1022>>IF
      1025>>ASSIGN   1026<<ASSIGN   1054<<DOINDEX  1057>>CALLBLT  1062<<DOINDEX  1065>>CALLBLT  1092<<DOINDEX
      1093>>CALLBLT  1093>>CALLBLT  1133<<DOINDEX  1134>>CALLBLT  1143<<DOINDEX  1144>>IF       1147>>ASSIGN
      1148>>ASSIGN   1149<<ASSIGN
JERR.ERR
        72**DCL      1103>>CALLBLT
JERR.FCG
        70**DCL      1093>>CALLBLT
JERR.MON
        71**DCL      1097>>IF
JERR.SEV
        73**DCL      1110>>CALLBLT
LENGTH_ IN PROCEDURE ADD
       749**DCL       748--PROC      750--IMP-SIZ   752>>IF        755>>IF        759>>ASSIGN    760>>CALLBLT
LENGTH_ IN PROCEDURE GET_PARAM
       781**DCL       780--PROC      784--IMP-SIZ   794<<ASSIGN    798<<ASSIGN    799>>ASSIGN    808<<ASSIGN
       810>>IF        817<<ASSIGN    821>>ASSIGN    829<<ASSIGN    836<<ASSIGN    858<<ASSIGN    882>>ASSIGN
       895<<ASSIGN    896>>ASSIGN    904<<ASSIGN    907<<ASSIGN    908>>IF        911>>IF        913<<ASSIGN
       918>>ASSIGN
LIMIT
PL6.E3A0      #001=OCM$TEMPLATE File=OCM$MESSAGE.:E05TSI                         WED 07/30/97 04:00 Page:120  
        60**DCL      1396<>CALL     1397<<ASSIGN   1397>>ASSIGN   1398>>DOWHILE  1415>>IF
LIMIT IN PROCEDURE CHOICELIST
      1314**DCL      1316<>CALL     1317<<ASSIGN   1317>>ASSIGN   1318>>DOWHILE  1322>>ASSIGN   1365<>CALL
      1369>>IF       1381<>CALL     1382>>CALL
LIMIT IN PROCEDURE PTRLIST
      1255**DCL      1258<>CALL     1259<<ASSIGN   1259>>ASSIGN   1260>>DOWHILE  1269<>CALL     1271>>IF
      1285<>CALL
LIMIT IN PROCEDURE STRING
       958**DCL       959<>CALL      960<>CALL      961>>CALL
M$TIME
       168**DCL-ENT   863--CALL      868--CALL      872--CALL      877--CALL      878--CALL
MATCH
        88**DCL      1256<<ASSIGN   1267>>IF       1274>>IF       1328<<ASSIGN   1341<<ASSIGN   1356<<ASSIGN
      1363>>IF       1377>>IF
NUMBER
        65**DCL        69--REDEF
NUMBER.B
        66**DCL        67--REDEF      68--REDEF    1055>>ASSIGN   1063>>ASSIGN
NUMBER.C
        68**DCL      1041<<CALLBLT  1352<<CALLBLT
NUMBER.U
        67**DCL      1035<<ASSIGN   1043>>ASSIGN   1056<<ASSIGN   1056>>ASSIGN   1064<<ASSIGN   1064>>ASSIGN
      1351<<ASSIGN   1354>>IF
OCM$DONE
        59**DCL-ENT   703--CALL      727--CALL      940--CALL     1266--CALL     1273--CALL     1288--CALL
      1360--CALL     1375--CALL     1386--CALL     1411--CALL     1417--CALL
OCM$TEMPLATE
        55**PROC     1284--CALL     1379--CALL
OCM_BPOSN
       682**DCL       752>>IF        755>>IF        757>>ASSIGN    760>>CALLBLT   761<<ASSIGN    761>>ASSIGN
OCM_BUFFER
       683**DCL       760<<CALLBLT
OCM_CLASSES.COUNT_
       685**DCL       895>>ASSIGN
OCM_CLASSES.TEXT_
       685**DCL       896--ASSIGN
PL6.E3A0      #001=OCM$TEMPLATE File=OCM$MESSAGE.:E05TSI                         WED 07/30/97 04:00 Page:121  
OCM_KEY_FLAG
       685**DCL       802>>IF        861>>IF       1071>>IF
OCM_PARAM
       683**DCL       795<<ASSIGN    799<<ASSIGN    819<<ASSIGN    822>>ASSIGN    830<<ASSIGN    835<<ASSIGN
       882<<ASSIGN    896<<ASSIGN    918<<ASSIGN   1007>>IF       1022>>IF       1041>>CALLBLT  1049<<CALLBLT
      1057<<CALLBLT  1065<<CALLBLT  1074<<CALLBLT  1076<<CALLBLT  1076>>CALLBLT  1082>>DOWHILE  1093<<CALLBLT
      1099<<CALLBLT  1101<<CALLBLT  1103<<CALLBLT  1105<<CALLBLT  1105>>CALLBLT  1108<<CALLBLT  1110<<CALLBLT
      1112<<CALLBLT  1112>>CALLBLT  1134<<CALLBLT  1144>>IF       1175>>CALLBLT  1182>>CALLBLT  1188>>CALLBLT
OCM_PARAM#
       682**DCL       786>>IF        789>>IF        791>>DOCASE    843>>IF        851>>ASSIGN    894>>ASSIGN
       902>>IF        907>>ASSIGN    915>>DOINDEX   988<>CALL
OCM_PARAM$
       683**DCL       918>>ASSIGN
OCM_PROMPT.SIZE
       684**DCL       821<<ASSIGN    836>>ASSIGN   1394<<ASSIGN
OCM_PROMPT.TEXT
       684**DCL       822<<ASSIGN    835>>ASSIGN
OCM_TEMPLATE
       683**DCL       706>>ASSIGN    731>>CALLBLT   960<>CALL     1338>>IF       1352>>CALLBLT
OCM_TPOSN
       682**DCL       701>>IF        706>>ASSIGN    707<<ASSIGN    707>>ASSIGN    725>>IF        731>>CALLBLT
       733<<ASSIGN    733>>ASSIGN    937<<ASSIGN    938>>IF        960>>CALL      961>>CALL      992>>CALL
      1211>>IF       1219<<ASSIGN   1219>>ASSIGN   1259>>ASSIGN   1260>>DOWHILE  1271>>IF       1317>>ASSIGN
      1318>>DOWHILE  1338>>IF       1352>>CALLBLT  1367>>CALL     1369>>IF       1382>>CALL     1397>>ASSIGN
      1398>>DOWHILE  1415>>IF
OCM_TSIZE
       682**DCL       701>>IF        725>>IF        938>>IF       1211>>IF
OCM_TSTAMP
       684**DCL       195--DCLINIT   220--DCLINIT   244--DCLINIT   267--DCLINIT
OC_CONSOLE.ATTR
       503**DCL       503--REDEF
OC_CONSOLE.ATTRO
       504**DCL       504--REDEF
OC_CONSOLE.CID
       502**DCL       503--REDEF     810>>IF
OC_CONSOLE.PROMPTS
PL6.E3A0      #001=OCM$TEMPLATE File=OCM$MESSAGE.:E05TSI                         WED 07/30/97 04:00 Page:122  
       507**DCL       817--ASSIGN    819--ASSIGN
OC_CONSOLE.STATION
       501**DCL       501--REDEF
OC_CONSOLE$
       500**DCL       501--IMP-PTR   810>>IF        817>>ASSIGN    819>>ASSIGN
OC_DIR
       543**DCL       543--REDEF
OC_INTBIT
       543**DCL       544--REDEF
OC_INTMSG
       420**DCL       433--REDEF
OC_INTMSG.FLAGS
       427**DCL       428--REDEF
OC_INTMSG.MESS
       433**DCL       433--REDEF
OC_INTMSG.MSGID
       423**DCL       424--REDEF
OC_INTMSG.WSN
       430**DCL       431--REDEF
OC_MASK
       544**DCL       544--REDEF
OC_MAXCONSOLE
       500**DCL       809>>DOINDEX   823>>ASSIGN
OC_MESSBUF
       435**DCL       450--REDEF     464--REDEF
OC_MESSBUF.CADDR
       436**DCL       805>>IF        808>>ASSIGN
OC_MESSBUF.DEVNM
       446**DCL       795>>ASSIGN
OC_MESSBUF.FLAGS
       442**DCL       443--REDEF
OC_MESSBUF.LEN
       448**DCL       907>>ASSIGN    916>>ASSIGN
OC_MESSBUF.MESS
       448**DCL       448--REDEF
OC_MESSBUF.MSGID
PL6.E3A0      #001=OCM$TEMPLATE File=OCM$MESSAGE.:E05TSI                         WED 07/30/97 04:00 Page:123  
       438**DCL       439--REDEF
OC_MESSBUF.NPARAMS
       440**DCL       902>>IF
OC_MESSBUF.PFB
       443**DCL       813>>ASSIGN
OC_MESSBUF.SYSID
       439**DCL       799--ASSIGN
OC_MESSBUF.WSN
       445**DCL       446--REDEF
OC_MESSBUF1.FLAGS
       457**DCL       458--REDEF
OC_MESSBUF1.LEN
       463**DCL       463--REDEF
OC_MESSBUF1.MSGID
       453**DCL       454--REDEF
OC_MESSBUF1.WSN
       460**DCL       461--REDEF
OC_MSGBUFFER
       466**DCL       481--REDEF
OC_MSGBUFFER.FLAGS
       473**DCL       474--REDEF
OC_MSGBUFFER.MESS
       479**DCL       479--REDEF
OC_MSGBUFFER.MSGID
       469**DCL       470--REDEF
OC_MSGBUFFER.WSN
       476**DCL       477--REDEF
OC_MSGBUFFER2.FLAGS
       488**DCL       489--REDEF
OC_MSGBUFFER2.MSGID
       484**DCL       485--REDEF
OC_MSGBUFFER2.WSN
       491**DCL       492--REDEF
OC_PARAM
       499**DCL       499--REDEF
OC_QUEUE.PARMC
PL6.E3A0      #001=OCM$TEMPLATE File=OCM$MESSAGE.:E05TSI                         WED 07/30/97 04:00 Page:124  
       498**DCL       498--REDEF
OFFSET IN PROCEDURE GET_PARAM
       782**DCL       813<<ASSIGN    814>>IF        814<<ASSIGN    815>>IF        815<<ASSIGN    816<<ASSIGN
       816>>ASSIGN    817>>ASSIGN    819>>ASSIGN    914<<ASSIGN    916<<ASSIGN    916>>ASSIGN    918>>ASSIGN
OPOSN
        62**DCL      1257<<ASSIGN   1276>>IF       1279<>CALL     1322<<ASSIGN
PARAMETER
       982**PROC     1405--CALL
PIC.B
        77**DCL       996>>IF       1000>>IF       1015>>IF       1127<<ASSIGN   1127>>ASSIGN   1128>>IF
      1166>>ASSIGN   1167<<ASSIGN   1167>>ASSIGN   1168>>IF
PICU.TYPE
        81**DCL      1045>>DOCASE
PIC_U
        74**DCL        75--REDEF      78--REDEF     995<>CALL     1030<>CALL     1126<>CALL     1131>>IF
      1133>>DOINDEX  1136>>ASSIGN   1137>>ASSIGN   1156<>CALL     1165<>CALL     1171>>ASSIGN
POSN IN PROCEDURE SKIP_TO
       936**DCL       935--PROC      937>>ASSIGN
PROMPT_TABLE.COUNT_
       541**DCL       817>>ASSIGN
PROMPT_TABLE.PROMPT
       541**DCL       819>>ASSIGN
PTRLIST
      1254**PROC     1223--CALL
RIGHT
        89**DCL      1166<<ASSIGN   1172>>IF
SAME IN PROCEDURE PARAMETER
      1209**ENTRY    1408--CALL
SIZE IN PROCEDURE ADD
       751**DCL       757<<ASSIGN    759<<ASSIGN    760>>CALLBLT   761>>ASSIGN
SIZE IN PROCEDURE CHOICELIST
      1315**DCL      1323<<ASSIGN   1330<<ASSIGN   1333<>CALL     1336>>IF       1338>>IF       1338>>IF
      1346>>IF       1350>>ASSIGN   1352>>CALLBLT  1367>>CALL
SIZE IN PROCEDURE PARAMETER
       984**DCL      1017<<ASSIGN   1020<<ASSIGN   1025<<ASSIGN   1081<<ASSIGN   1082>>DOWHILE  1083<<ASSIGN
      1083>>ASSIGN   1118<<ASSIGN   1137<<ASSIGN   1141<<ASSIGN   1148<<ASSIGN   1175>>CALLBLT  1177>>IF
PL6.E3A0      #001=OCM$TEMPLATE File=OCM$MESSAGE.:E05TSI                         WED 07/30/97 04:00 Page:125  
      1179>>CALLBLT  1182>>CALLBLT  1187>>ASSIGN
SKIP_TO
       935**PROC      961--CALL      992--CALL     1269--CALL     1279--CALL     1285--CALL     1365--CALL
      1367--CALL     1382--CALL
STRING
       957**PROC     1402--CALL
STRING IN PROCEDURE GET_PARAM
       784**DCL       799>>ASSIGN    896>>ASSIGN    918>>ASSIGN
STRING_ IN PROCEDURE ADD
       750**DCL       748--PROC      760>>CALLBLT
TEMP.B
        84**DCL        85--REDEF      86--REDEF    1055<<ASSIGN   1063<<ASSIGN
TEMP.S
        86**DCL      1017>>ASSIGN   1041>>CALLBLT  1041>>CALLBLT  1352>>CALLBLT  1352>>CALLBLT  1352>>CALLBLT
TEMP.U
        85**DCL      1002<<ASSIGN   1005<<ASSIGN   1010<<ASSIGN   1021>>DOINDEX  1025>>ASSIGN   1038<<ASSIGN
      1040<<ASSIGN   1041>>CALLBLT  1057>>CALLBLT  1065>>CALLBLT  1085<<ASSIGN   1119<<ASSIGN   1136<<ASSIGN
      1142<<ASSIGN   1147<<ASSIGN   1175>>CALLBLT  1182>>CALLBLT  1188>>CALLBLT  1214<>CALL     1215>>IF
      1348<<ASSIGN   1350<<ASSIGN
TEXTUAL
        90**DCL       999<<ASSIGN   1034<<ASSIGN   1079<<ASSIGN   1116<<ASSIGN   1123>>IF       1334>>IF
TIME_SIZE
       287**DCL       858>>ASSIGN
TIME_STAMPA.LOCAL_DAY
       282**DCL       243--DCLINIT
TIME_STAMPL
       271**DCL       277--REDEF     280--REDEF     284--REDEF
TIME_STAMPL.LOCAL_DATE
       274**DCL       191--DCLINIT   192--DCLINIT
TIME_STAMPL.LOCAL_DAY
       276**DCL       194--DCLINIT
TIME_STAMPL.LOCAL_TIME
       272**DCL       193--DCLINIT   194--DCLINIT
TIME_STAMPS.LOCAL_TIME
       278**DCL       218--DCLINIT   219--DCLINIT
TIME_STRING
PL6.E3A0      #001=OCM$TEMPLATE File=OCM$MESSAGE.:E05TSI                         WED 07/30/97 04:00 Page:126  
       284**DCL       859<<ASSIGN    882>>ASSIGN
TOKEN
        63**DCL      1261<>CALL     1262>>IF       1280<>CALL     1281>>IF       1319<>CALL     1320>>DOCASE
      1372<>CALL     1373>>IF       1399<>CALL     1400>>DOCASE
VALUE
        64**DCL      1043<<ASSIGN   1049>>CALLBLT  1354>>IF

PL6.E3A0      #002=OCM$DONE File=OCM$MESSAGE.:E05TSI                             WED 07/30/97 04:01 Page:127  
      879        1        /*M* OCM$DONE  handle errors in message templates */
      880        2        /*T***********************************************************/
      881        3        /*T*                                                         */
      882        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      883        5        /*T*                                                         */
      884        6        /*T***********************************************************/
      885        7        /*
      886        8         ###    ###   #   #   #   ####    ###   #   #  #####
      887        9        #   #  #   #  ## ##  ###  #   #  #   #  #   #  #
      888       10        #   #  #      # # # # #   #   #  #   #  ##  #  #
      889       11        #   #  #      #   #  ###  #   #  #   #  # # #  ####
      890       12        #   #  #      #   #   # # #   #  #   #  #  ##  #
      891       13        #   #  #   #  #   #  ###  #   #  #   #  #   #  #
      892       14         ###    ###   #   #   #   ####    ###   #   #  #####
      893       15                                                                   */
      894       16        /*F* NAME:  OCM$DONE
      895       17             PURPOSE:  To handle errors incurred while processing
      896       18                       a message template.
      897       19             DESCRIPTION:  UNWINDs to OCM_ERRTN, in which is remembered
      898       20                           the label BAD_TEMPLATE in OCP$MESSAGE.
      899       21                                                                           */
      900       22        /*D* NAME: OCM$DONE
      901       23             CALL:  CALL OCM$DONE
      902       24             DESCRIPTION:  Performs UNWIND TO OCM_ERRTN.  OCM_ERRTN
      903       25                           contains the remembered label BAD_TEMPLATE,
      904       26                           which is located in the OCP$MESSAGE procedure.
      905       27                                                                           */
      906       28                                                /**/
      907       29                                                /**/
      908       30                                                /**/
      909       31        OCM$DONE: PROC;
      910       32                                                /**/
      911       33                                                /**/
      912       34                                                /**/
      913       35        %INCLUDE OUT_SUBS_C;
      914      158        %INCLUDE OCM_DATA_R;
      915      171    1        UNWIND TO OCM_ERRTRN;
PL6.E3A0      #002=OCM$DONE File=OCM$MESSAGE.:E05TSI                             WED 07/30/97 04:01 Page:128  
      916      172    1   END OCM$DONE;
      917      173        %EOD;

PL6.E3A0      #002=OCM$DONE File=OCM$MESSAGE.:E05TSI                             WED 07/30/97 04:01 Page:129  
--  Include file information  --

   OCM_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   OUT_SUBS_C.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure OCM$DONE.

   Procedure OCM$DONE requires 5 words for executable code.
   Procedure OCM$DONE requires 4 words of local(AUTO) storage.

PL6.E3A0      #002=OCM$DONE File=OCM$MESSAGE.:E05TSI                             WED 07/30/97 04:01 Page:130  

 Object Unit name= OCM$DONE                                   File name= OCM$MESSAGE.:E05TOU
 UTS= JUL 30 '97 04:01:42.40 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Proc  even  none     5      5  OCM$DONE

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     0      0   yes            yes      Std        0  OCM$DONE

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
                       nStd      0 X66_AUTO_0
                       nStd      0 X66_AUNWIND

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     OCM_ERRTRN
PL6.E3A0      #002=OCM$DONE File=OCM$MESSAGE.:E05TSI                             WED 07/30/97 04:01 Page:131  


      879        1        /*M* OCM$DONE  handle errors in message templates */
      880        2        /*T***********************************************************/
      881        3        /*T*                                                         */
      882        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      883        5        /*T*                                                         */
      884        6        /*T***********************************************************/
      885        7        /*
      886        8         ###    ###   #   #   #   ####    ###   #   #  #####
      887        9        #   #  #   #  ## ##  ###  #   #  #   #  #   #  #
      888       10        #   #  #      # # # # #   #   #  #   #  ##  #  #
      889       11        #   #  #      #   #  ###  #   #  #   #  # # #  ####
      890       12        #   #  #      #   #   # # #   #  #   #  #  ##  #
      891       13        #   #  #   #  #   #  ###  #   #  #   #  #   #  #
      892       14         ###    ###   #   #   #   ####    ###   #   #  #####
      893       15                                                                   */
      894       16        /*F* NAME:  OCM$DONE
      895       17             PURPOSE:  To handle errors incurred while processing
      896       18                       a message template.
      897       19             DESCRIPTION:  UNWINDs to OCM_ERRTN, in which is remembered
      898       20                           the label BAD_TEMPLATE in OCP$MESSAGE.
      899       21                                                                           */
      900       22        /*D* NAME: OCM$DONE
      901       23             CALL:  CALL OCM$DONE
      902       24             DESCRIPTION:  Performs UNWIND TO OCM_ERRTN.  OCM_ERRTN
      903       25                           contains the remembered label BAD_TEMPLATE,
      904       26                           which is located in the OCP$MESSAGE procedure.
      905       27                                                                           */
      906       28                                                /**/
      907       29                                                /**/
      908       30                                                /**/
      909       31        OCM$DONE: PROC;

     31  0 000000   000000 700200 xent  OCM$DONE     TSX0  ! X66_AUTO_0
         0 000001   000004 000000                    ZERO    4,0

      910       32                                                /**/
PL6.E3A0      #002=OCM$DONE File=OCM$MESSAGE.:E05TSI                             WED 07/30/97 04:01 Page:132  
      911       33                                                /**/
      912       34                                                /**/
      913       35        %INCLUDE OUT_SUBS_C;
      914      158        %INCLUDE OCM_DATA_R;
      915      171    1        UNWIND TO OCM_ERRTRN;

    171  0 000002   000000 237200 xsym               LDAQ  ! OCM_ERRTRN
         0 000003   000000 700200 xent               TSX0  ! X66_AUNWIND
         0 000004   000000 000200                    ZERO    0,128
      916      172    1   END OCM$DONE;
      917      173        %EOD;

PL6.E3A0      #002=OCM$DONE File=OCM$MESSAGE.:E05TSI                             WED 07/30/97 04:01 Page:133  
--  Include file information  --

   OCM_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   OUT_SUBS_C.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure OCM$DONE.
PL6.E3A0      #002=OCM$DONE File=OCM$MESSAGE.:E05TSI                             WED 07/30/97 04:01 Page:134  

 **** Variables and constants ****

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d REMB        r     1 OCM_ERRTRN


   Procedure OCM$DONE requires 5 words for executable code.
   Procedure OCM$DONE requires 4 words of local(AUTO) storage.
PL6.E3A0      #002=OCM$DONE File=OCM$MESSAGE.:E05TSI                             WED 07/30/97 04:01 Page:135  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #002=OCM$DONE File=OCM$MESSAGE.:E05TSI                             WED 07/30/97 04:01 Page:136  
          MINI XREF LISTING

OCM_ERRTRN
       167**DCL       171>>UNWIND

PL6.E3A0      #003=OCM$TPSET File=OCM$MESSAGE.:E05TSI                            WED 07/30/97 04:01 Page:137  
      918        1        /*M* OCM$TPSET KEYINs routine to read template file then template
      919        2                                           the message */
      920        3        /*T***********************************************************/
      921        4        /*T*                                                         */
      922        5        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      923        6        /*T*                                                         */
      924        7        /*T***********************************************************/
      925        8        %SET LISTSUB='1'B;
      926        9
      927       10        /*
      928       11          ###   ###  #   #   #   ##### ####   ###  ##### #####
      929       12         # # # #   # ## ##  ###    #   #   # #   # #       #
      930       13         # # # #     # # # # #     #   #   # #     #       #
      931       14         #  ## #     #   #  ###    #   ####   ###  ####    #
      932       15         #   # #     #   #   # #   #   #         # #       #
      933       16         #   # #   # #   #  ###    #   #     #   # #       #
      934       17          ###   ###  #   #   #     #   #      ###  #####   #
      935       18                                                                          */
      936       19
      937       20        OCM$TPSET: PROC(LANGUAGE,MESSAGE_BUFFER) ALTRET;
      938       21                                                /**/
      939       22    1   DCL F$TEMPLATE DCB;
      940       23    1   DCL M$LO DCB;
      941       24                                                /**/
      942       25                                                /**/
      943       26    1   DCL OCM$TEMPLATE ENTRY;
      944       27    1   DCL OCW$WRITE ENTRY(5);
      945       28                                                /**/
      946       29                                                /**/
      947       30    1   DCL LANGUAGE CHAR(1) UNAL;              /* PASSED AS ARGUMENT */
      948       31    1   DCL MESSAGE_BUFFER CHAR(140) UNAL;      /* PASSED AS ARGUMENT */
      949       32                                                /**/
      950       33                                                /**/
      951       34    1   DCL 1 ERRCODE STATIC,
      952       35    1            2 B BIT(36) UNAL,
      953       36    1            2 U REDEF B UBIN WORD UNAL;
      954       37    1   DCL 1 MKEY STATIC ALIGNED,
PL6.E3A0      #003=OCM$TPSET File=OCM$MESSAGE.:E05TSI                            WED 07/30/97 04:01 Page:138  
      955       38    1            2 * UBIN(9) INIT(3) UNAL,
      956       39    1            2 LANG_BYTE CHAR(1) UNAL INIT(' '),
      957       40    1            2 KEY UBIN HALF UNAL INIT(BITBIN('377777'O));
      958       41    1   DCL NOGO CHAR(0) STATIC INIT
      959       42    1        ('KEYIN cant find template #000000');
      960       43                                                /**/
      961       44                                                /**/
      962       45                                                /**/
      963       46                                                /**/
      964       47                                                /**/
      965       48    1   DCL I SBIN WORD STATIC ALIGNED;
      966       49    1   DCL J SBIN WORD STATIC ALIGNED;
      967       50    1   DCL FCN UBIN BYTE UNAL STATIC;
      968       51                                                /**/
      969       52                                                /**/
      970       53    1   DCL B$TCB$ PTR SYMREF;
      971       54        %INCLUDE B$TABLES_C;
      972      162             %B$XL_ASC_DUMP;
      973      166        %INCLUDE F$DCB;
      974      215        %INCLUDE OC$PEND;
      975      260             %OC$PEND_NOMSG;
      976      276        %INCLUDE OCI_SUBS_C;
      977      374                                                /**/
      978      375        %INCLUDE OCP_DATA_R;
      979      392        %INCLUDE OC_SUBS_C;
      980     1123        %INCLUDE OCM_SUBS_C;
      981     1140        %INCLUDE OUT_SUBS_C;
      982     1263        %INCLUDE OCM_DATA_R;
      983     1276        %INCLUDE CP_6_SUBS;
      984     1816        %INCLUDE CP_6;
      985     1897        %INCLUDE OC_DAT_R;
      986     2058                                                /**/
      987     2059              %B$TCB;
      988     2062             %B$ALT;
      989     2070                                                /**/
      990     2071        %SUB B$ALT=B$TCB$->B$TCB.ALT$->B$ALT;
      991     2072                                                /**/
PL6.E3A0      #003=OCM$TPSET File=OCM$MESSAGE.:E05TSI                            WED 07/30/97 04:01 Page:139  
      992     2073             %FPT_READ      (FPTN=TEMP_READ,
      993     2074                                 DCB=F$TEMPLATE,
      994     2075                                 BUF=OCM_TEMPLATE,
      995     2076                                 KEY=MKEY,
      996     2077                                 KEYS=YES);
      997     2116                                                /**/
      998     2117             %FPT_ERRMSG    (BUF=OCM_BUFFER,
      999     2118                                 CODE=ERRCODE.U,
     1000     2119                                 DCB=F$TEMPLATE,
     1001     2120                                 OUTDCB1=M$LO,
     1002     2121                                 INCLCODE=NO);
     1003     2148                                                /**/
     1004     2149                                                /**/
     1005     2150        %EJECT;
PL6.E3A0      #003=OCM$TPSET File=OCM$MESSAGE.:E05TSI                            WED 07/30/97 04:01 Page:140  
     1006     2151    1        OC_MESSBUF2 = MESSAGE_BUFFER;
     1007     2152    1        OCM_PARAM$ = PINCRC ( ADDR (OC_MESSBUF),
     1008     2153    1             OC_MESSBUF.NPARAMS + 20 /* SIZEC_OC_MESSHD# */);
     1009     2154    1        REMEMBER BAD_TEMPLATE IN OCM_ERRTRN;
     1010     2155    1        OCM_TPOSN = 1;
     1011     2156    1        OCM_BPOSN = 0;
     1012     2157                                                /**/
     1013     2158    1        IF MKEY.KEY = OC_MESSBUF.MSG# AND MKEY.LANG_BYTE = LANGUAGE
     1014     2159    1        THEN
     1015     2160    1             GOTO GOT_TEMPLATE;
     1016     2161                                                /**/
     1017     2162                                                /* In case of zero-length read */
     1018     2163    1        CALL INSERT (OCM_TEMPLATE, 0, 1, BINASC (1 /* T_STRING */));
     1019     2164    1        MKEY.KEY = OC_MESSBUF.MSG#;
     1020     2165    1        MKEY.LANG_BYTE = LANGUAGE;
     1021     2166                                                /**/
     1022     2167    1        IF ~OC_MSG_GOOD
     1023     2168    1        THEN
     1024     2169    1             GOTO NEXT;
     1025     2170                                                /**/
     1026     2171                                                /* Read the message template */
     1027     2172    1        CALL M$READ(TEMP_READ) ALTRET(TRYAGAIN);
     1028     2173    1        GOTO FOUND_TEMP;
     1029     2174    1   TRYAGAIN: MKEY.LANG_BYTE = ' ';
     1030     2175    1        CALL M$READ (TEMP_READ) ALTRET (BAD_READ);
     1031     2176    1   FOUND_TEMP: ;
     1032     2177    1        OCM_TSIZE = DCBADDR (DCBNUM (F$TEMPLATE)) -> F$DCB.ARS;
     1033     2178                                                /**/
     1034     2179    1   GOT_TEMPLATE: ;
     1035     2180                                                /**/
     1036     2181    1        IF SUBSTR(OCM_TEMPLATE,0,1) = BINASC(0 /* T_TEMPLATE */)
     1037     2182    1        THEN
     1038     2183    1             CALL OCM$TEMPLATE;
     1039     2184    1        ELSE
     1040     2185    1             GOTO BAD_TEMPLATE;
     1041     2186    1        IF OC_MESSBUF.MSG# = 502 /* OGWR_MSG# */ OR
     1042     2187    1             OC_MESSBUF.MSG# = 389 /* FROMMSTR_MSG# */ THEN
PL6.E3A0      #003=OCM$TPSET File=OCM$MESSAGE.:E05TSI                            WED 07/30/97 04:01 Page:141  
     1043     2188    1             CALL XLATE (OCM_BUFFER, B$XL_ASC_DUMP, OCM_BUFFER);
     1044     2189    1        RETURN;
     1045     2190    1   BAD_TEMPLATE: ;
     1046     2191    1        CALL DUMP;               /*  dump bad template to lineprinter in octal   */
     1047     2192    1        CALL OCW$WRITE (OCM_BUFFER, OCM_BPOSN, /* output whatever is */
     1048     2193    1             OC_MESSBUF.CADDR, OC_MESSBUF.WSN); /* in the buffer */
     1049     2194    1        ALTRETURN;
     1050     2195                                                /**/
     1051     2196    1   BAD_READ: ;                   /* come here if problem reading template file   */
     1052     2197    1        MKEY.KEY = BITBIN('377777'O);
     1053     2198    1        ERRCODE.B = B$TCB$->B$TCB.ALT$->B$ALT.ERR;
     1054     2199    1        CALL M$ERRMSG(FPT_ERRMSG) ALTRET (NEXT);
     1055     2200    1   NEXT: ;
     1056     2201    1        CALL BINCHAR(SUBSTR(NOGO,26,6),OC_MESSBUF.MSG#);
     1057     2202    1        CALL OCW$WRITE (NOGO, LENGTHC (NOGO), '200000'O /* M_SYS  */,
     1058     2203    1             OCP_NON_STA);
     1059     2204    1        ALTRETURN;
     1060     2205        /**/
     1061     2206        %EJECT;
PL6.E3A0      #003=OCM$TPSET File=OCM$MESSAGE.:E05TSI                            WED 07/30/97 04:01 Page:142  
     1062     2207    1   DUMP: PROC;                   /*  procedure to dump tempbuf to lineprinter    */
     1063     2208    2   DCL BOUND SBIN WORD;
     1064     2209    2   DCL DPOSN SBIN WORD;
     1065     2210    2   DCL 1 TEMP,
     1066     2211    2            2 C CHAR(4) UNAL,
     1067     2212    2            2 B REDEF C BIT(36) UNAL,
     1068     2213    2            2 U REDEF C UBIN WORD;
     1069     2214    2   DCL DUMPBUF CHAR(104) STATIC UNAL;
     1070     2215    2   DCL BAD_TEMP_MESS CHAR(0) STATIC INIT(
     1071     2216    2           ' Dump of template #') UNAL;
     1072     2217    2   DCL BAD_MESSG CHAR(0) STATIC INIT
     1073     2218    2        (' Dump of Bad message buffer ---');
     1074     2219    2   DCL OCM_TPOSN_TEXT CHAR(0) STATIC INIT
     1075     2220    2        ('OCM_TPOSN');
     1076     2221    2   DCL OCM_BPOSN_TEXT CHAR(0) STATIC INIT
     1077     2222    2        ('OCM_BPOSN');
     1078     2223    2   DCL LP_DUMP BIT(1) ALIGNED CONSTANT SYMDEF INIT ('1'B /*TRUE#*/);
     1079     2224    2   DCL OC_DUMP BIT(1) ALIGNED CONSTANT SYMDEF INIT ('1'B /*TRUE#*/);
     1080     2225    2   DCL ITPOSN UBIN WORD STATIC;
     1081     2226        %SUB DSIZE=DUMP_OUT.BUF_.BOUND;
     1082     2227             %FPT_OPEN      (FPTN=DUMP_OPEN,
     1083     2228                                 DCB=M$LO,
     1084     2229                                 ASN=DEVICE,
     1085     2230                                 RES="'LP'",
     1086     2231                                 FUN=CREATE);
     1087     2340                                                /**/
     1088     2341             %FPT_CLOSE     (FPTN=DUMP_CLOSE,
     1089     2342                                 DCB=M$LO);
     1090     2384                                                /**/
     1091     2385             %FPT_WRITE     (FPTN=DUMP_OUT,
     1092     2386                                 DCB=M$LO,
     1093     2387                                 BUF=DUMPBUF);
     1094     2418                                                /**/
     1095     2419                                                /**/
     1096     2420                                                /**/
     1097     2421    2   DUMP_IT: PROC;
     1098     2422    3        DUMP_OUT.BUF_.BOUND = DPOSN - 1;
PL6.E3A0      #003=OCM$TPSET File=OCM$MESSAGE.:E05TSI                            WED 07/30/97 04:01 Page:143  
     1099     2423    3        IF OC_DUMP
     1100     2424    3        THEN
     1101     2425    3             CALL OCW$WRITE (DUMPBUF, DUMP_OUT.BUF_.BOUND, '200000'O /* M_SYS  */,
              2425                      OCP_NON_STA);
     1102     2426    3        IF LP_DUMP
     1103     2427    3        THEN
     1104     2428    3             CALL M$WRITE (DUMP_OUT);
     1105     2429    3        RETURN;
     1106     2430    3   END DUMP_IT;
     1107     2431                                                /**/
     1108     2432                                                /**/
     1109     2433    2   DUMP_LINE:PROC(NCHARS,SOURCE_BUF);
     1110     2434    3   DCL NCHARS UBIN WORD;
     1111     2435    3   DCL SOURCE_BUF CHAR(1) UNAL;
     1112     2436
     1113     2437    3        CALL INSERT (DUMPBUF,DPOSN,1,' ');
     1114     2438    3        DPOSN = DPOSN + 1;
     1115     2439    3        CALL XLATE (SUBSTR(DUMPBUF,DPOSN,NCHARS),
     1116     2440    3             B$XL_ASC_DUMP,
     1117     2441    3             SUBSTR(SOURCE_BUF,ITPOSN,NCHARS));
     1118     2442    3        DPOSN = DPOSN + NCHARS;
     1119     2443    3        CALL DUMP_IT;
     1120     2444    3        DPOSN = 0;
     1121     2445    3        ITPOSN = I * 4;
     1122     2446    3        RETURN;
     1123     2447    3   END DUMP_LINE;
     1124     2448                                                /**/
     1125     2449                                                /**/
     1126     2450    2   CONV_OCT: PROC;
     1127     2451    3        CALL INSERT (DUMPBUF,DPOSN,1,' ');
     1128     2452    3        DPOSN = DPOSN + 12;
     1129     2453    4        DO J = 0 TO 11;
     1130     2454    4             CALL INSERT (DUMPBUF, DPOSN-J, 1,
     1131     2455    4                  BINASC(BITBIN(TEMP.B & '000000000007'O) + 48));
     1132     2456    4             TEMP.U = TEMP.U / 8;
     1133     2457    4           END;
     1134     2458    3        DPOSN = DPOSN + 1;
PL6.E3A0      #003=OCM$TPSET File=OCM$MESSAGE.:E05TSI                            WED 07/30/97 04:01 Page:144  
     1135     2459    3        RETURN;
     1136     2460    3   END CONV_OCT;
     1137     2461                                                /**/
     1138     2462                                                /**/
     1139     2463    2        DUMPBUF = BAD_TEMP_MESS;
     1140     2464    2        CALL BINCHAR(SUBSTR(DUMPBUF,SIZEC(BAD_TEMP_MESS),4), MKEY.KEY);
     1141     2465    2        DPOSN = SIZEC(BAD_TEMP_MESS) + 4;
     1142     2466    2        IF LP_DUMP
     1143     2467    2        THEN
     1144     2468    2             CALL M$OPEN (DUMP_OPEN);
     1145     2469                                                /**/
     1146     2470    2        CALL DUMP_IT;
     1147     2471                                                /**/
     1148     2472    2        DPOSN = 0;
     1149     2473    2        ITPOSN = 0;
     1150     2474                                                /**/
     1151     2475    2        BOUND = (OCM_TSIZE + 3) / 4;
     1152     2476                                                /**/
     1153     2477    3        DO I = 0 TO BOUND;
     1154     2478    3             IF DPOSN > 51
     1155     2479    3             THEN
     1156     2480    3                  CALL DUMP_LINE(16, OCM_TEMPLATE);
     1157     2481                                                /**/
     1158     2482    3             CALL INSERT (TEMP.C, 0, 4, SUBSTR(OCM_TEMPLATE,I*4,4));
     1159     2483    3             CALL CONV_OCT;
     1160     2484    3           END;                            /* DO I = 0 TO BOUND */
     1161     2485                                                /**/
     1162     2486    2        IF DPOSN ~= 0
     1163     2487    2        THEN
     1164     2488    2             CALL DUMP_LINE ( ((I*4) - 1) - ITPOSN, OCM_TEMPLATE);
     1165     2489                                                /**/
     1166     2490    2        DUMPBUF = ' ';
     1167     2491    2        DPOSN = 1;
     1168     2492                                                /**/
     1169     2493    2        CALL DUMP_IT;
     1170     2494                                                /**/
     1171     2495    2        DUMPBUF = BAD_MESSG;
PL6.E3A0      #003=OCM$TPSET File=OCM$MESSAGE.:E05TSI                            WED 07/30/97 04:01 Page:145  
     1172     2496                                                /**/
     1173     2497    2        DPOSN = SIZEC(BAD_MESSG);
     1174     2498    2        CALL DUMP_IT;
     1175     2499                                                /**/
     1176     2500    2        DPOSN = 0;
     1177     2501    2        ITPOSN = 0;
     1178     2502                                                /**/
     1179     2503    3        DO I = 0 TO 29;
     1180     2504    3             IF DPOSN > 51
     1181     2505    3             THEN
     1182     2506    3                  CALL DUMP_LINE (16,OC_MESSBUF2);
     1183     2507    3             CALL INSERT (TEMP.C, 0 ,4, SUBSTR(OC_MESSBUF2,I*4,4));
     1184     2508    3             CALL CONV_OCT;
     1185     2509    3           END;                            /* DO I = 0 TO 29 */
     1186     2510    2        IF DPOSN ~= 0
     1187     2511    2        THEN
     1188     2512    2             CALL DUMP_LINE((((I*4) -1) -ITPOSN), OC_MESSBUF2);
     1189     2513    2        CALL BINCHAR(SUBSTR(DUMPBUF,0,4),OCM_TPOSN);
     1190     2514    2        CALL INSERT (DUMPBUF,4,1,'/');
     1191     2515    2        CALL BINCHAR(SUBSTR(DUMPBUF,5,4),OCM_BPOSN);
     1192     2516    2        CALL INSERT (DUMPBUF,9,1,' ');
     1193     2517    2        CALL INSERT (DUMPBUF,10,SIZEC(OCM_TPOSN_TEXT),OCM_TPOSN_TEXT);
     1194     2518    2        CALL INSERT (DUMPBUF,10+SIZEC(OCM_TPOSN_TEXT),1,'/');
     1195     2519    2        CALL INSERT (DUMPBUF,11+SIZEC(OCM_TPOSN_TEXT),
     1196     2520    2             SIZEC(OCM_BPOSN_TEXT), OCM_BPOSN_TEXT);
     1197     2521    2        DPOSN = 11 + SIZEC(OCM_BPOSN_TEXT) + SIZEC(OCM_TPOSN_TEXT);
     1198     2522    2        CALL DUMP_IT;
     1199     2523    2        IF LP_DUMP
     1200     2524    2        THEN
     1201     2525    2             CALL M$CLOSE (DUMP_CLOSE);
     1202     2526    2        RETURN;
     1203     2527    2   END DUMP;
     1204     2528                                                /**/
     1205     2529        %EJECT;
PL6.E3A0      #003=OCM$TPSET File=OCM$MESSAGE.:E05TSI                            WED 07/30/97 04:01 Page:146  
     1206     2530    1   END;

PL6.E3A0      #003=OCM$TPSET File=OCM$MESSAGE.:E05TSI                            WED 07/30/97 04:01 Page:147  
--  Include file information  --

   OC$MESSHD_C.:E05TOU  is referenced.
   OC_DAT_R.:E05TOU  cannot be made into a system file and is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   OCM_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   OUT_SUBS_C.:E05TOU  is referenced.
   OCM_SUBS_C.:E05TOU  is referenced.
   OC_SUBS_C.:E05TOU  is referenced.
   OCP_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   OCI_SUBS_C.:E05TOU  is referenced.
   OC$PEND.:E05TOU  cannot be made into a system file and is referenced.
   F$DCB.:E05TOU  cannot be made into a system file and is referenced.
   B$TABLES_C.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure OCM$TPSET.

   Procedure OCM$TPSET requires 320 words for executable code.
   Procedure OCM$TPSET requires 20 words of local(AUTO) storage.

    No errors detected in file OCM$MESSAGE.:E05TSI    .

PL6.E3A0      #003=OCM$TPSET File=OCM$MESSAGE.:E05TSI                            WED 07/30/97 04:01 Page:148  

 Object Unit name= OCM$TPSET                                  File name= OCM$MESSAGE.:E05TOU
 UTS= JUL 30 '97 04:01:48.96 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  F$TEMPLATE
    1   DCB   even  none     0      0  M$LO
    2   Data  even  none   210    322  OCM$TPSET
    3   DCB   even  none     0      0  M$UC
    4  RoData even  UTS      2      2  OCM$TPSET
    5   Proc  even  none   320    500  OCM$TPSET
    6  RoData even  none    20     24  OCM$TPSET

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     5      0   yes    yes     yes      Std        2  OCM$TPSET

  ****  Data defs  ****

 Sect OctLoc  Name                           Sect OctLoc  Name
    4      0  LP_DUMP                            4      1  OC_DUMP
PL6.E3A0      #003=OCM$TPSET File=OCM$MESSAGE.:E05TSI                            WED 07/30/97 04:01 Page:149  

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes          ~proc      0 B_POINTER
         yes           Std       0 OCM$TEMPLATE
         yes           Std       5 OCW$WRITE
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_AUTO_2
                       nStd      0 X66_ARET
                       nStd      0 X66_AALT

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     F$TEMPLATE                            M$LO                                  B$TCB$
r    B$XL_ASC_DUMP$                        OCP_FREE_HEAD                         OCP_USED_HEAD
     OCP_USED_TAIL                         OCP_NON_STA                           OCM_BPOSN
     OCM_TPOSN                             OCM_TSIZE                             OCM_ERRTRN
     OCM_PARAM$                            OCM_BUFFER                            OCM_TEMPLATE
     M$UC                                  OC_INTMSG                             OC_MESSBUF
     OC_MSGBUFFER                          OC_PARAM                              OC_CONSOLE$
     OC_DIR                                OC_INTBIT                             OC_MASK
     OC_MSG_GOOD                           B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID                                 NULLSID                               ROSID
PL6.E3A0      #003=OCM$TPSET File=OCM$MESSAGE.:E05TSI                            WED 07/30/97 04:01 Page:150  


      918        1        /*M* OCM$TPSET KEYINs routine to read template file then template
      919        2                                           the message */
      920        3        /*T***********************************************************/
      921        4        /*T*                                                         */
      922        5        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      923        6        /*T*                                                         */
      924        7        /*T***********************************************************/
      925        8        %SET LISTSUB='1'B;
      926        9
      927       10        /*
      928       11          ###   ###  #   #   #   ##### ####   ###  ##### #####
      929       12         # # # #   # ## ##  ###    #   #   # #   # #       #
      930       13         # # # #     # # # # #     #   #   # #     #       #
      931       14         #  ## #     #   #  ###    #   ####   ###  ####    #
      932       15         #   # #     #   #   # #   #   #         # #       #
      933       16         #   # #   # #   #  ###    #   #     #   # #       #
      934       17          ###   ###  #   #   #     #   #      ###  #####   #
      935       18                                                                          */
      936       19
      937       20        OCM$TPSET: PROC(LANGUAGE,MESSAGE_BUFFER) ALTRET;

     20  5 000000   000000 700200 xent  OCM$TPSET    TSX0  ! X66_AUTO_2
         5 000001   000024 000002                    ZERO    20,2

      938       21                                                /**/
      939       22    1   DCL F$TEMPLATE DCB;
      940       23    1   DCL M$LO DCB;
      941       24                                                /**/
      942       25                                                /**/
      943       26    1   DCL OCM$TEMPLATE ENTRY;
      944       27    1   DCL OCW$WRITE ENTRY(5);
      945       28                                                /**/
      946       29                                                /**/
      947       30    1   DCL LANGUAGE CHAR(1) UNAL;              /* PASSED AS ARGUMENT */
      948       31    1   DCL MESSAGE_BUFFER CHAR(140) UNAL;      /* PASSED AS ARGUMENT */
      949       32                                                /**/
PL6.E3A0      #003=OCM$TPSET File=OCM$MESSAGE.:E05TSI                            WED 07/30/97 04:01 Page:151  
      950       33                                                /**/
      951       34    1   DCL 1 ERRCODE STATIC,
      952       35    1            2 B BIT(36) UNAL,
      953       36    1            2 U REDEF B UBIN WORD UNAL;
      954       37    1   DCL 1 MKEY STATIC ALIGNED,
      955       38    1            2 * UBIN(9) INIT(3) UNAL,
      956       39    1            2 LANG_BYTE CHAR(1) UNAL INIT(' '),
      957       40    1            2 KEY UBIN HALF UNAL INIT(BITBIN('377777'O));
      958       41    1   DCL NOGO CHAR(0) STATIC INIT
      959       42    1        ('KEYIN cant find template #000000');
      960       43                                                /**/
      961       44                                                /**/
      962       45                                                /**/
      963       46                                                /**/
      964       47                                                /**/
      965       48    1   DCL I SBIN WORD STATIC ALIGNED;
      966       49    1   DCL J SBIN WORD STATIC ALIGNED;
      967       50    1   DCL FCN UBIN BYTE UNAL STATIC;
      968       51                                                /**/
      969       52                                                /**/
      970       53    1   DCL B$TCB$ PTR SYMREF;
      971       54        %INCLUDE B$TABLES_C;
      972      162             %B$XL_ASC_DUMP;
      973      166        %INCLUDE F$DCB;
      974      215        %INCLUDE OC$PEND;
      975      260             %OC$PEND_NOMSG;
      976      276        %INCLUDE OCI_SUBS_C;
      977      374                                                /**/
      978      375        %INCLUDE OCP_DATA_R;
      979      392        %INCLUDE OC_SUBS_C;
      980     1123        %INCLUDE OCM_SUBS_C;
      981     1140        %INCLUDE OUT_SUBS_C;
      982     1263        %INCLUDE OCM_DATA_R;
      983     1276        %INCLUDE CP_6_SUBS;
      984     1816        %INCLUDE CP_6;
      985     1897        %INCLUDE OC_DAT_R;
      986     2058                                                /**/
PL6.E3A0      #003=OCM$TPSET File=OCM$MESSAGE.:E05TSI                            WED 07/30/97 04:01 Page:152  
      987     2059              %B$TCB;
      988     2062             %B$ALT;
      989     2070                                                /**/
      990     2071        %SUB B$ALT=B$TCB$->B$TCB.ALT$->B$ALT;
      991     2072                                                /**/
      992     2073             %FPT_READ      (FPTN=TEMP_READ,
      993     2074                                 DCB=F$TEMPLATE,
      994     2075                                 BUF=OCM_TEMPLATE,
      995     2076                                 KEY=MKEY,
      996     2077                                 KEYS=YES);
      997     2116                                                /**/
      998     2117             %FPT_ERRMSG    (BUF=OCM_BUFFER,
      999     2118                                 CODE=ERRCODE.U,
     1000     2119                                 DCB=F$TEMPLATE,
     1001     2120                                 OUTDCB1=M$LO,
     1002     2121                                 INCLCODE=NO);
     1003     2148                                                /**/
     1004     2149                                                /**/
     1005     2150        %EJECT;
PL6.E3A0      #003=OCM$TPSET File=OCM$MESSAGE.:E05TSI                            WED 07/30/97 04:01 Page:153  
     1006     2151    1        OC_MESSBUF2 = MESSAGE_BUFFER;

   2151  5 000002   200004 470500                    LDP0    @MESSAGE_BUFFER,,AUTO
         5 000003   040000 100500                    MLR     fill='040'O
         5 000004   000000 000214                    ADSC9   0,,PR0                   cn=0,n=140
         5 000005   000000 000310 xsym               ADSC9   OC_MESSBUF               cn=0,n=200

     1007     2152    1        OCM_PARAM$ = PINCRC ( ADDR (OC_MESSBUF),

   2152  5 000006   000001 236000 xsym               LDQ     OC_MESSBUF+1
         5 000007   000011 772000                    QRL     9
         5 000010   000777 376007                    ANQ     511,DL
         5 000011   000020 736000                    QLS     16
         5 000012   000000 036000 6                  ADLQ    0
         5 000013   000000 756000 xsym               STQ     OCM_PARAM$

     1008     2153    1             OC_MESSBUF.NPARAMS + 20 /* SIZEC_OC_MESSHD# */);
     1009     2154    1        REMEMBER BAD_TEMPLATE IN OCM_ERRTRN;

   2154  5 000014   000113 635000 5                  EAA     BAD_TEMPLATE
         5 000015   000000 452400 xsym               STP2    OCM_ERRTRN
         5 000016   000001 755000 xsym               STA     OCM_ERRTRN+1

     1010     2155    1        OCM_TPOSN = 1;

   2155  5 000017   000001 235007                    LDA     1,DL
         5 000020   000000 755000 xsym               STA     OCM_TPOSN

     1011     2156    1        OCM_BPOSN = 0;

   2156  5 000021   000000 450000 xsym               STZ     OCM_BPOSN

     1012     2157                                                /**/
     1013     2158    1        IF MKEY.KEY = OC_MESSBUF.MSG# AND MKEY.LANG_BYTE = LANGUAGE

   2158  5 000022   000001 236000 2                  LDQ     MKEY
         5 000023   000000 676000 xsym               ERQ     OC_MESSBUF
PL6.E3A0      #003=OCM$TPSET File=OCM$MESSAGE.:E05TSI                            WED 07/30/97 04:01 Page:154  
         5 000024   777777 376007                    ANQ     -1,DL
         5 000025   000033 601000 5                  TNZ     s:2163
         5 000026   200003 471500                    LDP1    @LANGUAGE,,AUTO
         5 000027   040100 106400                    CMPC    fill='040'O
         5 000030   000001 200001 2                  ADSC9   MKEY                     cn=1,n=1
         5 000031   100000 000001                    ADSC9   0,,PR1                   cn=0,n=1
         5 000032   000070 600000 5                  TZE     GOT_TEMPLATE

     1014     2159    1        THEN
     1015     2160    1             GOTO GOT_TEMPLATE;
     1016     2161                                                /**/
     1017     2162                                                /* In case of zero-length read */
     1018     2163    1        CALL INSERT (OCM_TEMPLATE, 0, 1, BINASC (1 /* T_STRING */));

   2163  5 000033   001000 236003                    LDQ     512,DU
         5 000034   000000 552040 xsym               STBQ    OCM_TEMPLATE,'40'O

     1019     2164    1        MKEY.KEY = OC_MESSBUF.MSG#;

   2164  5 000035   000000 720000 xsym               LXL0    OC_MESSBUF
         5 000036   000001 440000 2                  SXL0    MKEY

     1020     2165    1        MKEY.LANG_BYTE = LANGUAGE;

   2165  5 000037   200003 471500                    LDP1    @LANGUAGE,,AUTO
         5 000040   040000 100500                    MLR     fill='040'O
         5 000041   100000 000001                    ADSC9   0,,PR1                   cn=0,n=1
         5 000042   000001 200001 2                  ADSC9   MKEY                     cn=1,n=1

     1021     2166                                                /**/
     1022     2167    1        IF ~OC_MSG_GOOD

   2167  5 000043   000000 236000 xsym               LDQ     OC_MSG_GOOD
         5 000044   400000 376003                    ANQ     -131072,DU
         5 000045   400000 676003                    ERQ     -131072,DU
         5 000046   000134 601000 5                  TNZ     NEXT

PL6.E3A0      #003=OCM$TPSET File=OCM$MESSAGE.:E05TSI                            WED 07/30/97 04:01 Page:155  
     1023     2168    1        THEN
     1024     2169    1             GOTO NEXT;
     1025     2170                                                /**/
     1026     2171                                                /* Read the message template */
     1027     2172    1        CALL M$READ(TEMP_READ) ALTRET(TRYAGAIN);

   2172  5 000047   000030 630400 2                  EPPR0   TEMP_READ
         5 000050   440000 713400                    CLIMB   alt,read
         5 000051   401400 401760                    pmme    nvectors=4
         5 000052   000054 702000 5                  TSX2    TRYAGAIN

     1028     2173    1        GOTO FOUND_TEMP;

   2173  5 000053   000062 710000 5                  TRA     FOUND_TEMP

     1029     2174    1   TRYAGAIN: MKEY.LANG_BYTE = ' ';

   2174  5 000054   000040 236003       TRYAGAIN     LDQ     32,DU
         5 000055   000001 552020 2                  STBQ    MKEY,'20'O

     1030     2175    1        CALL M$READ (TEMP_READ) ALTRET (BAD_READ);

   2175  5 000056   000030 630400 2                  EPPR0   TEMP_READ
         5 000057   440000 713400                    CLIMB   alt,read
         5 000060   401400 401760                    pmme    nvectors=4
         5 000061   000122 702000 5                  TSX2    BAD_READ

   2167  5 000062                       FOUND_TEMP   null
     1031     2176    1   FOUND_TEMP: ;
     1032     2177    1        OCM_TSIZE = DCBADDR (DCBNUM (F$TEMPLATE)) -> F$DCB.ARS;

   2177  5 000062   000000 236007 xsym               LDQ     F$TEMPLATE,DL
         5 000063   000001 470400 6                  LDP0    1
         5 000064   000000 471500                    LDP1    0,,PR0
         5 000065   100000 473506                    LDP3    0,QL,PR1
         5 000066   300000 235100                    LDA     0,,PR3
         5 000067   000000 755000 xsym               STA     OCM_TSIZE
PL6.E3A0      #003=OCM$TPSET File=OCM$MESSAGE.:E05TSI                            WED 07/30/97 04:01 Page:156  

   2177  5 000070                       GOT_TEMPLATE null
     1033     2178                                                /**/
     1034     2179    1   GOT_TEMPLATE: ;
     1035     2180                                                /**/
     1036     2181    1        IF SUBSTR(OCM_TEMPLATE,0,1) = BINASC(0 /* T_TEMPLATE */)

   2181  5 000070   000000 236000 xsym               LDQ     OCM_TEMPLATE
         5 000071   777000 376003                    ANQ     -512,DU
         5 000072   000000 116003                    CMPQ    0,DU
         5 000073   000113 601000 5                  TNZ     BAD_TEMPLATE

     1037     2182    1        THEN
     1038     2183    1             CALL OCM$TEMPLATE;

   2183  5 000074   000002 631400 xsym               EPPR1   B_VECTNIL+2
         5 000075   000000 701000 xent               TSX1    OCM$TEMPLATE
         5 000076   000000 011000                    NOP     0
         5 000077   000100 710000 5                  TRA     s:2186

     1039     2184    1        ELSE
     1040     2185    1             GOTO BAD_TEMPLATE;
     1041     2186    1        IF OC_MESSBUF.MSG# = 502 /* OGWR_MSG# */ OR

   2186  5 000100   000000 720000 xsym               LXL0    OC_MESSBUF
         5 000101   000766 100003                    CMPX0   502,DU
         5 000102   000105 600000 5                  TZE     s:2188
         5 000103   000605 100003                    CMPX0   389,DU
         5 000104   000112 601000 5                  TNZ     s:2189

     1042     2187    1             OC_MESSBUF.MSG# = 389 /* FROMMSTR_MSG# */ THEN
     1043     2188    1             CALL XLATE (OCM_BUFFER, B$XL_ASC_DUMP, OCM_BUFFER);

   2188  5 000105   000000 470400 xsym               LDP0    B$XL_ASC_DUMP$
         5 000106   040000 160400                    MVT     fill='040'O
         5 000107   000000 000400 xsym               ADSC9   OCM_BUFFER               cn=0,n=256
         5 000110   000000 000400 xsym               ADSC9   OCM_BUFFER               cn=0,n=256
PL6.E3A0      #003=OCM$TPSET File=OCM$MESSAGE.:E05TSI                            WED 07/30/97 04:01 Page:157  
         5 000111   000000 000100                    ARG     0,,PR0

     1044     2189    1        RETURN;

   2189  5 000112   000000 702200 xent               TSX2  ! X66_ARET

   2186  5 000113                       BAD_TEMPLATE null
     1045     2190    1   BAD_TEMPLATE: ;
     1046     2191    1        CALL DUMP;               /*  dump bad template to lineprinter in octal   */

   2191  5 000113   000150 701000 5                  TSX1    DUMP
         5 000114   000000 011000                    NOP     0

     1047     2192    1        CALL OCW$WRITE (OCM_BUFFER, OCM_BPOSN, /* output whatever is */

   2192  5 000115   000002 630400 6                  EPPR0   2
         5 000116   000022 631400 xsym               EPPR1   B_VECTNIL+18
         5 000117   000000 701000 xent               TSX1    OCW$WRITE
         5 000120   000000 011000                    NOP     0

     1048     2193    1             OC_MESSBUF.CADDR, OC_MESSBUF.WSN); /* in the buffer */
     1049     2194    1        ALTRETURN;

   2194  5 000121   000000 702200 xent               TSX2  ! X66_AALT

   2186  5 000122                       BAD_READ     null
     1050     2195                                                /**/
     1051     2196    1   BAD_READ: ;                   /* come here if problem reading template file   */
     1052     2197    1        MKEY.KEY = BITBIN('377777'O);

   2197  5 000122   377777 220003                    LDX0    131071,DU
         5 000123   000001 440000 2                  SXL0    MKEY

     1053     2198    1        ERRCODE.B = B$TCB$->B$TCB.ALT$->B$ALT.ERR;

   2198  5 000124   000000 470400 xsym               LDP0    B$TCB$
         5 000125   000000 471500                    LDP1    0,,PR0
PL6.E3A0      #003=OCM$TPSET File=OCM$MESSAGE.:E05TSI                            WED 07/30/97 04:01 Page:158  
         5 000126   100102 236100                    LDQ     66,,PR1
         5 000127   000000 756000 2                  STQ     ERRCODE

     1054     2199    1        CALL M$ERRMSG(FPT_ERRMSG) ALTRET (NEXT);

   2199  5 000130   000046 630400 2                  EPPR0   FPT_ERRMSG
         5 000131   420000 713400                    CLIMB   alt,+8192
         5 000132   405000 401760                    pmme    nvectors=11
         5 000133   000134 702000 5                  TSX2    NEXT

   2198  5 000134                       NEXT         null
     1055     2200    1   NEXT: ;
     1056     2201    1        CALL BINCHAR(SUBSTR(NOGO,26,6),OC_MESSBUF.MSG#);

   2201  5 000134   000000 236000 xsym               LDQ     OC_MESSBUF
         5 000135   777777 376007                    ANQ     -1,DL
         5 000136   000000 235003                    LDA     0,DU
         5 000137   200020 757100                    STAQ    @SOURCE_BUF+4,,AUTO
         5 000140   000000 301500                    BTD
         5 000141   200020 000010                    NDSC9   @SOURCE_BUF+4,,AUTO      cn=0,s=lsgnf,sf=0,n=8
         5 000142   000010 430006 2                  NDSC9   NOGO+6                   cn=2,s=nosgn,sf=0,n=6

     1057     2202    1        CALL OCW$WRITE (NOGO, LENGTHC (NOGO), '200000'O /* M_SYS  */,

   2202  5 000143   000010 630400 6                  EPPR0   8
         5 000144   000022 631400 xsym               EPPR1   B_VECTNIL+18
         5 000145   000000 701000 xent               TSX1    OCW$WRITE
         5 000146   000000 011000                    NOP     0

     1058     2203    1             OCP_NON_STA);
     1059     2204    1        ALTRETURN;

   2204  5 000147   000000 702200 xent               TSX2  ! X66_AALT

     1060     2205        /**/
     1061     2206        %EJECT;
PL6.E3A0      #003=OCM$TPSET File=OCM$MESSAGE.:E05TSI                            WED 07/30/97 04:01 Page:159  
     1062     2207    1   DUMP: PROC;                   /*  procedure to dump tempbuf to lineprinter    */

   2207  5 000150   200006 741300       DUMP         STX1  ! @MESSAGE_BUFFER+2,,AUTO
         5 000151   000270 710000 5                  TRA     s:2463

     1063     2208    2   DCL BOUND SBIN WORD;
     1064     2209    2   DCL DPOSN SBIN WORD;
     1065     2210    2   DCL 1 TEMP,
     1066     2211    2            2 C CHAR(4) UNAL,
     1067     2212    2            2 B REDEF C BIT(36) UNAL,
     1068     2213    2            2 U REDEF C UBIN WORD;
     1069     2214    2   DCL DUMPBUF CHAR(104) STATIC UNAL;
     1070     2215    2   DCL BAD_TEMP_MESS CHAR(0) STATIC INIT(
     1071     2216    2           ' Dump of template #') UNAL;
     1072     2217    2   DCL BAD_MESSG CHAR(0) STATIC INIT
     1073     2218    2        (' Dump of Bad message buffer ---');
     1074     2219    2   DCL OCM_TPOSN_TEXT CHAR(0) STATIC INIT
     1075     2220    2        ('OCM_TPOSN');
     1076     2221    2   DCL OCM_BPOSN_TEXT CHAR(0) STATIC INIT
     1077     2222    2        ('OCM_BPOSN');
     1078     2223    2   DCL LP_DUMP BIT(1) ALIGNED CONSTANT SYMDEF INIT ('1'B /*TRUE#*/);
     1079     2224    2   DCL OC_DUMP BIT(1) ALIGNED CONSTANT SYMDEF INIT ('1'B /*TRUE#*/);
     1080     2225    2   DCL ITPOSN UBIN WORD STATIC;
     1081     2226        %SUB DSIZE=DUMP_OUT.BUF_.BOUND;
     1082     2227             %FPT_OPEN      (FPTN=DUMP_OPEN,
     1083     2228                                 DCB=M$LO,
     1084     2229                                 ASN=DEVICE,
     1085     2230                                 RES="'LP'",
     1086     2231                                 FUN=CREATE);
     1087     2340                                                /**/
     1088     2341             %FPT_CLOSE     (FPTN=DUMP_CLOSE,
     1089     2342                                 DCB=M$LO);
     1090     2384                                                /**/
     1091     2385             %FPT_WRITE     (FPTN=DUMP_OUT,
     1092     2386                                 DCB=M$LO,
     1093     2387                                 BUF=DUMPBUF);
     1094     2418                                                /**/
PL6.E3A0      #003=OCM$TPSET File=OCM$MESSAGE.:E05TSI                            WED 07/30/97 04:01 Page:160  
     1095     2419                                                /**/
     1096     2420                                                /**/
     1097     2421    2   DUMP_IT: PROC;

   2421  5 000152   200016 741300       DUMP_IT      STX1  ! @SOURCE_BUF+2,,AUTO

     1098     2422    3        DUMP_OUT.BUF_.BOUND = DPOSN - 1;

   2422  5 000153   200010 236100                    LDQ     DPOSN,,AUTO
         5 000154   000001 136007                    SBLQ    1,DL
         5 000155   000020 736000                    QLS     16
         5 000156   000312 676000 2                  ERQ     DUMP_OUT+4
         5 000157   000034 376000 xsym               ANQ     B_VECTNIL+28
         5 000160   000312 656000 2                  ERSQ    DUMP_OUT+4

     1099     2423    3        IF OC_DUMP

   2423  5 000161   000001 234000 4                  SZN     OC_DUMP
         5 000162   000167 605000 5                  TPL     s:2426

     1100     2424    3        THEN
     1101     2425    3             CALL OCW$WRITE (DUMPBUF, DUMP_OUT.BUF_.BOUND, '200000'O /* M_SYS  */,
              2425                      OCP_NON_STA);

   2425  5 000163   000014 630400 6                  EPPR0   12
         5 000164   000022 631400 xsym               EPPR1   B_VECTNIL+18
         5 000165   000000 701000 xent               TSX1    OCW$WRITE
         5 000166   000000 011000                    NOP     0

     1102     2426    3        IF LP_DUMP

   2426  5 000167   000000 234000 4                  SZN     LP_DUMP
         5 000170   000174 605000 5                  TPL     s:2429

     1103     2427    3        THEN
     1104     2428    3             CALL M$WRITE (DUMP_OUT);

PL6.E3A0      #003=OCM$TPSET File=OCM$MESSAGE.:E05TSI                            WED 07/30/97 04:01 Page:161  
   2428  5 000171   000306 630400 2                  EPPR0   DUMP_OUT
         5 000172   040001 713400                    CLIMB   write
         5 000173   401400 401760                    pmme    nvectors=4

     1105     2429    3        RETURN;

   2429  5 000174   200016 221300                    LDX1  ! @SOURCE_BUF+2,,AUTO
         5 000175   000001 702211                    TSX2  ! 1,X1

     1106     2430    3   END DUMP_IT;
     1107     2431                                                /**/
     1108     2432                                                /**/
     1109     2433    2   DUMP_LINE:PROC(NCHARS,SOURCE_BUF);

   2433  5 000176   200012 741300       DUMP_LINE    STX1  ! TEMP+1,,AUTO

     1110     2434    3   DCL NCHARS UBIN WORD;
     1111     2435    3   DCL SOURCE_BUF CHAR(1) UNAL;
     1112     2436
     1113     2437    3        CALL INSERT (DUMPBUF,DPOSN,1,' ');

   2437  5 000177   200010 235100                    LDA     DPOSN,,AUTO
         5 000200   040005 100400                    MLR     fill='040'O
         5 000201   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         5 000202   000100 000001 2                  ADSC9   DUMPBUF,A                cn=0,n=1

     1114     2438    3        DPOSN = DPOSN + 1;

   2438  5 000203   200010 054100                    AOS     DPOSN,,AUTO

     1115     2439    3        CALL XLATE (SUBSTR(DUMPBUF,DPOSN,NCHARS),

   2439  5 000204   200013 470500                    LDP0    @NCHARS,,AUTO
         5 000205   000000 720100                    LXL0    0,,PR0
         5 000206   000000 722100                    LXL2    0,,PR0
         5 000207   200014 471500                    LDP1    @SOURCE_BUF,,AUTO
         5 000210   000155 235000 2                  LDA     ITPOSN
PL6.E3A0      #003=OCM$TPSET File=OCM$MESSAGE.:E05TSI                            WED 07/30/97 04:01 Page:162  
         5 000211   000000 473400 xsym               LDP3    B$XL_ASC_DUMP$
         5 000212   200010 236100                    LDQ     DPOSN,,AUTO
         5 000213   040046 160545                    MVT     fill='040'O
         5 000214   100000 000012                    ADSC9   0,A,PR1                  cn=0,n=*X2
         5 000215   000100 000010 2                  ADSC9   DUMPBUF,Q                cn=0,n=*X0
         5 000216   300000 000100                    ARG     0,,PR3

     1116     2440    3             B$XL_ASC_DUMP,
     1117     2441    3             SUBSTR(SOURCE_BUF,ITPOSN,NCHARS));
     1118     2442    3        DPOSN = DPOSN + NCHARS;

   2442  5 000217   000000 036100                    ADLQ    0,,PR0
         5 000220   200010 756100                    STQ     DPOSN,,AUTO

     1119     2443    3        CALL DUMP_IT;

   2443  5 000221   000152 701000 5                  TSX1    DUMP_IT
         5 000222   000000 011000                    NOP     0

     1120     2444    3        DPOSN = 0;

   2444  5 000223   200010 450100                    STZ     DPOSN,,AUTO

     1121     2445    3        ITPOSN = I * 4;

   2445  5 000224   000012 235000 2                  LDA     I
         5 000225   000002 735000                    ALS     2
         5 000226   000155 755000 2                  STA     ITPOSN

     1122     2446    3        RETURN;

   2446  5 000227   200012 221300                    LDX1  ! TEMP+1,,AUTO
         5 000230   000001 702211                    TSX2  ! 1,X1

     1123     2447    3   END DUMP_LINE;
     1124     2448                                                /**/
     1125     2449                                                /**/
PL6.E3A0      #003=OCM$TPSET File=OCM$MESSAGE.:E05TSI                            WED 07/30/97 04:01 Page:163  
     1126     2450    2   CONV_OCT: PROC;

   2450  5 000231   200012 741300       CONV_OCT     STX1  ! TEMP+1,,AUTO

     1127     2451    3        CALL INSERT (DUMPBUF,DPOSN,1,' ');

   2451  5 000232   200010 235100                    LDA     DPOSN,,AUTO
         5 000233   040005 100400                    MLR     fill='040'O
         5 000234   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         5 000235   000100 000001 2                  ADSC9   DUMPBUF,A                cn=0,n=1

     1128     2452    3        DPOSN = DPOSN + 12;

   2452  5 000236   000014 236007                    LDQ     12,DL
         5 000237   200010 056100                    ASQ     DPOSN,,AUTO

     1129     2453    4        DO J = 0 TO 11;

   2453  5 000240   000013 450000 2                  STZ     J

     1130     2454    4             CALL INSERT (DUMPBUF, DPOSN-J, 1,

   2454  5 000241   200010 236100                    LDQ     DPOSN,,AUTO
         5 000242   000013 136000 2                  SBLQ    J
         5 000243   200020 756100                    STQ     @SOURCE_BUF+4,,AUTO
         5 000244   200011 236100                    LDQ     TEMP,,AUTO
         5 000245   000011 376000 xsym               ANQ     B_VECTNIL+9
         5 000246   000060 036007                    ADLQ    48,DL
         5 000247   000033 736000                    QLS     27
         5 000250   000020 276000 6                  ORQ     16
         5 000251   200021 756100                    STQ     @SOURCE_BUF+5,,AUTO
         5 000252   200020 235100                    LDA     @SOURCE_BUF+4,,AUTO
         5 000253   040005 100500                    MLR     fill='040'O
         5 000254   200021 000004                    ADSC9   @SOURCE_BUF+5,,AUTO      cn=0,n=4
         5 000255   000100 000001 2                  ADSC9   DUMPBUF,A                cn=0,n=1

     1131     2455    4                  BINASC(BITBIN(TEMP.B & '000000000007'O) + 48));
PL6.E3A0      #003=OCM$TPSET File=OCM$MESSAGE.:E05TSI                            WED 07/30/97 04:01 Page:164  
     1132     2456    4             TEMP.U = TEMP.U / 8;

   2456  5 000256   200011 236100                    LDQ     TEMP,,AUTO
         5 000257   000003 772000                    QRL     3
         5 000260   200011 756100                    STQ     TEMP,,AUTO

     1133     2457    4           END;

   2457  5 000261   000013 054000 2                  AOS     J
         5 000262   000013 235000 2                  LDA     J
         5 000263   000013 115007                    CMPA    11,DL
         5 000264   000241 604400 5                  TMOZ    s:2454

     1134     2458    3        DPOSN = DPOSN + 1;

   2458  5 000265   200010 054100                    AOS     DPOSN,,AUTO

     1135     2459    3        RETURN;

   2459  5 000266   200012 221300                    LDX1  ! TEMP+1,,AUTO
         5 000267   000001 702211                    TSX2  ! 1,X1

     1136     2460    3   END CONV_OCT;
     1137     2461                                                /**/
     1138     2462                                                /**/
     1139     2463    2        DUMPBUF = BAD_TEMP_MESS;

   2463  5 000270   040000 100400                    MLR     fill='040'O
         5 000271   000132 000023 2                  ADSC9   BAD_TEMP_MESS            cn=0,n=19
         5 000272   000100 000150 2                  ADSC9   DUMPBUF                  cn=0,n=104

     1140     2464    2        CALL BINCHAR(SUBSTR(DUMPBUF,SIZEC(BAD_TEMP_MESS),4), MKEY.KEY);

   2464  5 000273   000001 236000 2                  LDQ     MKEY
         5 000274   777777 376007                    ANQ     -1,DL
         5 000275   000000 235003                    LDA     0,DU
         5 000276   200020 757100                    STAQ    @SOURCE_BUF+4,,AUTO
PL6.E3A0      #003=OCM$TPSET File=OCM$MESSAGE.:E05TSI                            WED 07/30/97 04:01 Page:165  
         5 000277   000000 301500                    BTD
         5 000300   200020 000010                    NDSC9   @SOURCE_BUF+4,,AUTO      cn=0,s=lsgnf,sf=0,n=8
         5 000301   000104 630004 2                  NDSC9   DUMPBUF+4                cn=3,s=nosgn,sf=0,n=4

     1141     2465    2        DPOSN = SIZEC(BAD_TEMP_MESS) + 4;

   2465  5 000302   000027 236007                    LDQ     23,DL
         5 000303   200010 756100                    STQ     DPOSN,,AUTO

     1142     2466    2        IF LP_DUMP

   2466  5 000304   000000 234000 4                  SZN     LP_DUMP
         5 000305   000311 605000 5                  TPL     s:2470

     1143     2467    2        THEN
     1144     2468    2             CALL M$OPEN (DUMP_OPEN);

   2468  5 000306   000156 630400 2                  EPPR0   DUMP_OPEN
         5 000307   050000 713400                    CLIMB   open
         5 000310   410400 401760                    pmme    nvectors=18

     1145     2469                                                /**/
     1146     2470    2        CALL DUMP_IT;

   2470  5 000311   000152 701000 5                  TSX1    DUMP_IT
         5 000312   000000 011000                    NOP     0

     1147     2471                                                /**/
     1148     2472    2        DPOSN = 0;

   2472  5 000313   200010 450100                    STZ     DPOSN,,AUTO

     1149     2473    2        ITPOSN = 0;

   2473  5 000314   000155 450000 2                  STZ     ITPOSN

     1150     2474                                                /**/
PL6.E3A0      #003=OCM$TPSET File=OCM$MESSAGE.:E05TSI                            WED 07/30/97 04:01 Page:166  
     1151     2475    2        BOUND = (OCM_TSIZE + 3) / 4;

   2475  5 000315   000000 236000 xsym               LDQ     OCM_TSIZE
         5 000316   000003 036007                    ADLQ    3,DL
         5 000317   000002 772000                    QRL     2
         5 000320   200007 756100                    STQ     BOUND,,AUTO

     1152     2476                                                /**/
     1153     2477    3        DO I = 0 TO BOUND;

   2477  5 000321   000012 450000 2                  STZ     I
         5 000322   000342 710000 5                  TRA     s:2484+1

     1154     2478    3             IF DPOSN > 51

   2478  5 000323   200010 235100                    LDA     DPOSN,,AUTO
         5 000324   000063 115007                    CMPA    51,DL
         5 000325   000334 604400 5                  TMOZ    s:2482

     1155     2479    3             THEN
     1156     2480    3                  CALL DUMP_LINE(16, OCM_TEMPLATE);

   2480  5 000326   000022 236000 6                  LDQ     18
         5 000327   200014 756100                    STQ     @NCHARS+1,,AUTO
         5 000330   000023 236000 6                  LDQ     19
         5 000331   200013 756100                    STQ     TEMP+2,,AUTO
         5 000332   000176 701000 5                  TSX1    DUMP_LINE
         5 000333   000000 011000                    NOP     0

     1157     2481                                                /**/
     1158     2482    3             CALL INSERT (TEMP.C, 0, 4, SUBSTR(OCM_TEMPLATE,I*4,4));

   2482  5 000334   000012 720000 2                  LXL0    I
         5 000335   000000 236010 xsym               LDQ     OCM_TEMPLATE,X0
         5 000336   200011 756100                    STQ     TEMP,,AUTO

     1159     2483    3             CALL CONV_OCT;
PL6.E3A0      #003=OCM$TPSET File=OCM$MESSAGE.:E05TSI                            WED 07/30/97 04:01 Page:167  

   2483  5 000337   000231 701000 5                  TSX1    CONV_OCT
         5 000340   000000 011000                    NOP     0

     1160     2484    3           END;                            /* DO I = 0 TO BOUND */

   2484  5 000341   000012 054000 2                  AOS     I
         5 000342   000012 236000 2                  LDQ     I
         5 000343   200007 116100                    CMPQ    BOUND,,AUTO
         5 000344   000323 604400 5                  TMOZ    s:2478

     1161     2485                                                /**/
     1162     2486    2        IF DPOSN ~= 0

   2486  5 000345   200010 235100                    LDA     DPOSN,,AUTO
         5 000346   000363 600000 5                  TZE     s:2490

     1163     2487    2        THEN
     1164     2488    2             CALL DUMP_LINE ( ((I*4) - 1) - ITPOSN, OCM_TEMPLATE);

   2488  5 000347   000002 736000                    QLS     2
         5 000350   000027 676000 xsym               ERQ     B_VECTNIL+23
         5 000351   000001 036007                    ADLQ    1,DL
         5 000352   000155 036000 2                  ADLQ    ITPOSN
         5 000353   000027 676000 xsym               ERQ     B_VECTNIL+23
         5 000354   200022 756100                    STQ     @SOURCE_BUF+6,,AUTO
         5 000355   000022 236000 6                  LDQ     18
         5 000356   200014 756100                    STQ     @NCHARS+1,,AUTO
         5 000357   200022 630500                    EPPR0   @SOURCE_BUF+6,,AUTO
         5 000360   200013 450500                    STP0    TEMP+2,,AUTO
         5 000361   000176 701000 5                  TSX1    DUMP_LINE
         5 000362   000000 011000                    NOP     0

     1165     2489                                                /**/
     1166     2490    2        DUMPBUF = ' ';

   2490  5 000363   040000 100400                    MLR     fill='040'O
PL6.E3A0      #003=OCM$TPSET File=OCM$MESSAGE.:E05TSI                            WED 07/30/97 04:01 Page:168  
         5 000364   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         5 000365   000100 000150 2                  ADSC9   DUMPBUF                  cn=0,n=104

     1167     2491    2        DPOSN = 1;

   2491  5 000366   000001 235007                    LDA     1,DL
         5 000367   200010 755100                    STA     DPOSN,,AUTO

     1168     2492                                                /**/
     1169     2493    2        CALL DUMP_IT;

   2493  5 000370   000152 701000 5                  TSX1    DUMP_IT
         5 000371   000000 011000                    NOP     0

     1170     2494                                                /**/
     1171     2495    2        DUMPBUF = BAD_MESSG;

   2495  5 000372   040000 100400                    MLR     fill='040'O
         5 000373   000137 000037 2                  ADSC9   BAD_MESSG                cn=0,n=31
         5 000374   000100 000150 2                  ADSC9   DUMPBUF                  cn=0,n=104

     1172     2496                                                /**/
     1173     2497    2        DPOSN = SIZEC(BAD_MESSG);

   2497  5 000375   000037 235007                    LDA     31,DL
         5 000376   200010 755100                    STA     DPOSN,,AUTO

     1174     2498    2        CALL DUMP_IT;

   2498  5 000377   000152 701000 5                  TSX1    DUMP_IT
         5 000400   000000 011000                    NOP     0

     1175     2499                                                /**/
     1176     2500    2        DPOSN = 0;

   2500  5 000401   200010 450100                    STZ     DPOSN,,AUTO

PL6.E3A0      #003=OCM$TPSET File=OCM$MESSAGE.:E05TSI                            WED 07/30/97 04:01 Page:169  
     1177     2501    2        ITPOSN = 0;

   2501  5 000402   000155 450000 2                  STZ     ITPOSN

     1178     2502                                                /**/
     1179     2503    3        DO I = 0 TO 29;

   2503  5 000403   000012 450000 2                  STZ     I

     1180     2504    3             IF DPOSN > 51

   2504  5 000404   200010 235100                    LDA     DPOSN,,AUTO
         5 000405   000063 115007                    CMPA    51,DL
         5 000406   000415 604400 5                  TMOZ    s:2507

     1181     2505    3             THEN
     1182     2506    3                  CALL DUMP_LINE (16,OC_MESSBUF2);

   2506  5 000407   000004 236000 6                  LDQ     4
         5 000410   200014 756100                    STQ     @NCHARS+1,,AUTO
         5 000411   000023 236000 6                  LDQ     19
         5 000412   200013 756100                    STQ     TEMP+2,,AUTO
         5 000413   000176 701000 5                  TSX1    DUMP_LINE
         5 000414   000000 011000                    NOP     0

     1183     2507    3             CALL INSERT (TEMP.C, 0 ,4, SUBSTR(OC_MESSBUF2,I*4,4));

   2507  5 000415   000012 720000 2                  LXL0    I
         5 000416   000000 236010 xsym               LDQ     OC_MESSBUF,X0
         5 000417   200011 756100                    STQ     TEMP,,AUTO

     1184     2508    3             CALL CONV_OCT;

   2508  5 000420   000231 701000 5                  TSX1    CONV_OCT
         5 000421   000000 011000                    NOP     0

     1185     2509    3           END;                            /* DO I = 0 TO 29 */
PL6.E3A0      #003=OCM$TPSET File=OCM$MESSAGE.:E05TSI                            WED 07/30/97 04:01 Page:170  

   2509  5 000422   000012 054000 2                  AOS     I
         5 000423   000012 235000 2                  LDA     I
         5 000424   000035 115007                    CMPA    29,DL
         5 000425   000404 604400 5                  TMOZ    s:2504

     1186     2510    2        IF DPOSN ~= 0

   2510  5 000426   200010 236100                    LDQ     DPOSN,,AUTO
         5 000427   000443 600000 5                  TZE     s:2513

     1187     2511    2        THEN
     1188     2512    2             CALL DUMP_LINE((((I*4) -1) -ITPOSN), OC_MESSBUF2);

   2512  5 000430   000012 336000 2                  LCQ     I
         5 000431   000002 736000                    QLS     2
         5 000432   000155 036000 2                  ADLQ    ITPOSN
         5 000433   000027 676000 xsym               ERQ     B_VECTNIL+23
         5 000434   200023 756100                    STQ     @SOURCE_BUF+7,,AUTO
         5 000435   000004 236000 6                  LDQ     4
         5 000436   200014 756100                    STQ     @NCHARS+1,,AUTO
         5 000437   200023 630500                    EPPR0   @SOURCE_BUF+7,,AUTO
         5 000440   200013 450500                    STP0    TEMP+2,,AUTO
         5 000441   000176 701000 5                  TSX1    DUMP_LINE
         5 000442   000000 011000                    NOP     0

     1189     2513    2        CALL BINCHAR(SUBSTR(DUMPBUF,0,4),OCM_TPOSN);

   2513  5 000443   000000 301400                    BTD
         5 000444   000000 000004 xsym               NDSC9   OCM_TPOSN                cn=0,s=lsgnf,sf=0,n=4
         5 000445   000100 030004 2                  NDSC9   DUMPBUF                  cn=0,s=nosgn,sf=0,n=4

     1190     2514    2        CALL INSERT (DUMPBUF,4,1,'/');

   2514  5 000446   057000 236003                    LDQ     24064,DU
         5 000447   000101 552040 2                  STBQ    DUMPBUF+1,'40'O

PL6.E3A0      #003=OCM$TPSET File=OCM$MESSAGE.:E05TSI                            WED 07/30/97 04:01 Page:171  
     1191     2515    2        CALL BINCHAR(SUBSTR(DUMPBUF,5,4),OCM_BPOSN);

   2515  5 000450   000000 301400                    BTD
         5 000451   000000 000004 xsym               NDSC9   OCM_BPOSN                cn=0,s=lsgnf,sf=0,n=4
         5 000452   000101 230004 2                  NDSC9   DUMPBUF+1                cn=1,s=nosgn,sf=0,n=4

     1192     2516    2        CALL INSERT (DUMPBUF,9,1,' ');

   2516  5 000453   000040 236003                    LDQ     32,DU
         5 000454   000102 552020 2                  STBQ    DUMPBUF+2,'20'O

     1193     2517    2        CALL INSERT (DUMPBUF,10,SIZEC(OCM_TPOSN_TEXT),OCM_TPOSN_TEXT);

   2517  5 000455   040000 100400                    MLR     fill='040'O
         5 000456   000147 000011 2                  ADSC9   OCM_TPOSN_TEXT           cn=0,n=9
         5 000457   000102 400011 2                  ADSC9   DUMPBUF+2                cn=2,n=9

     1194     2518    2        CALL INSERT (DUMPBUF,10+SIZEC(OCM_TPOSN_TEXT),1,'/');

   2518  5 000460   000057 236007                    LDQ     47,DL
         5 000461   000104 552004 2                  STBQ    DUMPBUF+4,'04'O

     1195     2519    2        CALL INSERT (DUMPBUF,11+SIZEC(OCM_TPOSN_TEXT),

   2519  5 000462   040000 100400                    MLR     fill='040'O
         5 000463   000152 000011 2                  ADSC9   OCM_BPOSN_TEXT           cn=0,n=9
         5 000464   000105 000011 2                  ADSC9   DUMPBUF+5                cn=0,n=9

     1196     2520    2             SIZEC(OCM_BPOSN_TEXT), OCM_BPOSN_TEXT);
     1197     2521    2        DPOSN = 11 + SIZEC(OCM_BPOSN_TEXT) + SIZEC(OCM_TPOSN_TEXT);

   2521  5 000465   000035 235007                    LDA     29,DL
         5 000466   200010 755100                    STA     DPOSN,,AUTO

     1198     2522    2        CALL DUMP_IT;

   2522  5 000467   000152 701000 5                  TSX1    DUMP_IT
PL6.E3A0      #003=OCM$TPSET File=OCM$MESSAGE.:E05TSI                            WED 07/30/97 04:01 Page:172  
         5 000470   000000 011000                    NOP     0

     1199     2523    2        IF LP_DUMP

   2523  5 000471   000000 234000 4                  SZN     LP_DUMP
         5 000472   000476 605000 5                  TPL     s:2526

     1200     2524    2        THEN
     1201     2525    2             CALL M$CLOSE (DUMP_CLOSE);

   2525  5 000473   000250 630400 2                  EPPR0   DUMP_CLOSE
         5 000474   050001 713400                    CLIMB   close
         5 000475   406000 401760                    pmme    nvectors=13

     1202     2526    2        RETURN;

   2526  5 000476   200006 221300                    LDX1  ! @MESSAGE_BUFFER+2,,AUTO
         5 000477   000001 702211                    TSX2  ! 1,X1
     1203     2527    2   END DUMP;
     1204     2528                                                /**/
     1205     2529        %EJECT;
PL6.E3A0      #003=OCM$TPSET File=OCM$MESSAGE.:E05TSI                            WED 07/30/97 04:01 Page:173  
     1206     2530    1   END;

PL6.E3A0      #003=OCM$TPSET File=OCM$MESSAGE.:E05TSI                            WED 07/30/97 04:01 Page:174  
--  Include file information  --

   OC$MESSHD_C.:E05TOU  is referenced.
   OC_DAT_R.:E05TOU  cannot be made into a system file and is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   OCM_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   OUT_SUBS_C.:E05TOU  is referenced.
   OCM_SUBS_C.:E05TOU  is referenced.
   OC_SUBS_C.:E05TOU  is referenced.
   OCP_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   OCI_SUBS_C.:E05TOU  is referenced.
   OC$PEND.:E05TOU  cannot be made into a system file and is referenced.
   F$DCB.:E05TOU  cannot be made into a system file and is referenced.
   B$TABLES_C.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure OCM$TPSET.
PL6.E3A0      #003=OCM$TPSET File=OCM$MESSAGE.:E05TSI                            WED 07/30/97 04:01 Page:175  

 **** Variables and constants ****

  ****  Section 002  Data  OCM$TPSET

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

   137-0-0/c CHAR(31)    r     1 BAD_MESSG                132-0-0/c CHAR(19)    r     1 BAD_TEMP_MESS
   100-0-0/c CHAR(104)   r     1 DUMPBUF                  250-0-0/d STRC(1080)  r     1 DUMP_CLOSE
   156-0-0/d STRC(2088)  r     1 DUMP_OPEN                306-0-0/d STRC(432)   r     1 DUMP_OUT
     0-0-0/b STRC        r     1 ERRCODE                   46-0-0/d STRC(936)   r     1 FPT_ERRMSG
    12-0-0/w SBIN        r     1 I                        155-0-0/w UBIN        r     1 ITPOSN
    13-0-0/w SBIN        r     1 J                          1-0-0/w STRC        r     1 MKEY
     2-0-0/c CHAR(32)    r     1 NOGO                     152-0-0/c CHAR(9)     r     1 OCM_BPOSN_TEXT
   147-0-0/c CHAR(9)     r     1 OCM_TPOSN_TEXT            30-0-0/d STRC(504)   r     1 TEMP_READ

  ****  Section 004 RoData OCM$TPSET

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w BIT         r     1 LP_DUMP                    1-0-0/w BIT         r     1 OC_DUMP

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @LANGUAGE                  4-0-0/w PTR         r     1 @MESSAGE_BUFFER
    13-0-0/w PTR         r     1 @NCHARS                   14-0-0/w PTR         r     1 @SOURCE_BUF
     7-0-0/w SBIN        r     1 BOUND                     10-0-0/w SBIN        r     1 DPOSN
    *0-0-0/c CHAR        r     1 LANGUAGE                  *0-0-0/c CHAR(140)   r     1 MESSAGE_BUFFER
    *0-0-0/w UBIN        r     1 NCHARS                    *0-0-0/c CHAR        r     1 SOURCE_BUF
    11-0-0/w STRC        r     1 TEMP

  ****  SYMREF variables  ****

PL6.E3A0      #003=OCM$TPSET File=OCM$MESSAGE.:E05TSI                            WED 07/30/97 04:01 Page:176  
  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 B$TCB$                     0-0-0/w PTR         r     1 B$XL_ASC_DUMP$
     0-0-0/w SBIN        r     1 OCM_BPOSN                  0-0-0/c CHAR(256)   r     1 OCM_BUFFER
     0-0-0/d REMB        r     1 OCM_ERRTRN                 0-0-0/w PTR         r     1 OCM_PARAM$
     0-0-0/c CHAR(4096)  r     1 OCM_TEMPLATE               0-0-0/w SBIN        r     1 OCM_TPOSN
     0-0-0/w UBIN        r     1 OCM_TSIZE                  0-0-0/c CHAR(8)     r     1 OCP_NON_STA
     0-0-0/w PTR         r     1 OC_CONSOLE$                0-0-0/c STRC(1800)  r     1 OC_MESSBUF
     0-0-0/c CHAR(200)   r     1 OC_MESSBUF2                0-0-0/w BIT         r     1 OC_MSG_GOOD

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(2448)  r     1 B$ALT                      0-0-0/w STRC(144)   r     1 B$TCB
     0-0-0/d STRC(4608)  r     1 B$XL_ASC_DUMP              0-0-0/d ASTR(3528)  r     1 F$DCB
     0-0-0N  NULL        r     1 F$TEMPLATE                 0-0-0N  NULL        r     1 M$LO
     0-0-0/w ASTR(360)   r     1 OC$PEND


   Procedure OCM$TPSET requires 320 words for executable code.
   Procedure OCM$TPSET requires 20 words of local(AUTO) storage.

    No errors detected in file OCM$MESSAGE.:E05TSI    .
PL6.E3A0      #003=OCM$TPSET File=OCM$MESSAGE.:E05TSI                            WED 07/30/97 04:01 Page:177  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #003=OCM$TPSET File=OCM$MESSAGE.:E05TSI                            WED 07/30/97 04:01 Page:178  
          MINI XREF LISTING

B$ALT.CODE
      2064**DCL      2064--REDEF    2065--REDEF    2065--REDEF
B$ALT.ERR
      2065**DCL      2198>>ASSIGN
B$ALT.ERR.ERR#
      2066**DCL      2066--REDEF
B$ALT.EVID
      2065**DCL      2065--REDEF    2065--REDEF
B$TCB.ALT$
      2060**DCL      2198>>ASSIGN
B$TCB$
        53**DCL      2198>>ASSIGN
B$XL_ASC_DUMP
       164**DCL      2188>>CALLBLT  2439>>CALLBLT
B$XL_ASC_DUMP$
       163**DCL       164--IMP-PTR  2188>>CALLBLT  2439>>CALLBLT
BAD_MESSG IN PROCEDURE DUMP
      2217**DCL      2495>>ASSIGN   2497--ASSIGN
BAD_READ
      2186**LABEL    2175--CALLALT
BAD_TEMPLATE
      2186**LABEL    2154--REMEMBR  2185--GOTO
BAD_TEMP_MESS IN PROCEDURE DUMP
      2215**DCL      2463>>ASSIGN   2464--CALLBLT  2465--ASSIGN
BOUND IN PROCEDURE DUMP
      2208**DCL      2475<<ASSIGN   2477>>DOINDEX
CONV_OCT IN PROCEDURE DUMP
      2450**PROC     2483--CALL     2508--CALL
DPOSN IN PROCEDURE DUMP
      2209**DCL      2422>>ASSIGN   2437>>CALLBLT  2438<<ASSIGN   2438>>ASSIGN   2439>>CALLBLT  2442<<ASSIGN
      2442>>ASSIGN   2444<<ASSIGN   2451>>CALLBLT  2452<<ASSIGN   2452>>ASSIGN   2454>>CALLBLT  2458<<ASSIGN
      2458>>ASSIGN   2465<<ASSIGN   2472<<ASSIGN   2478>>IF       2486>>IF       2491<<ASSIGN   2497<<ASSIGN
PL6.E3A0      #003=OCM$TPSET File=OCM$MESSAGE.:E05TSI                            WED 07/30/97 04:01 Page:179  
      2500<<ASSIGN   2504>>IF       2510>>IF       2521<<ASSIGN
DUMP
      2207**PROC     2191--CALL
DUMPBUF IN PROCEDURE DUMP
      2214**DCL      2405--DCLINIT  2406--DCLINIT  2425<>CALL     2437<<CALLBLT  2439<<CALLBLT  2451<<CALLBLT
      2454<<CALLBLT  2463<<ASSIGN   2464<<CALLBLT  2490<<ASSIGN   2495<<ASSIGN   2513<<CALLBLT  2514<<CALLBLT
      2515<<CALLBLT  2516<<CALLBLT  2517<<CALLBLT  2518<<CALLBLT  2519<<CALLBLT
DUMP_CLOSE IN PROCEDURE DUMP
      2365**DCL      2525<>CALL
DUMP_CLOSE.SN_ IN PROCEDURE DUMP
      2365**DCL      2365--REDEF
DUMP_CLOSE.UTL_ IN PROCEDURE DUMP
      2366**DCL      2366--REDEF
DUMP_CLOSE.V IN PROCEDURE DUMP
      2370**DCL      2365--DCLINIT
DUMP_CLOSE.V.EXPIRE# IN PROCEDURE DUMP
      2380**DCL      2380--REDEF
DUMP_CLOSE.V.TYPE# IN PROCEDURE DUMP
      2378**DCL      2378--REDEF
DUMP_CLOSE.V.XTNSIZE# IN PROCEDURE DUMP
      2375**DCL      2375--REDEF    2377--REDEF
DUMP_IT IN PROCEDURE DUMP
      2421**PROC     2443--CALL     2470--CALL     2493--CALL     2498--CALL     2522--CALL
DUMP_LINE IN PROCEDURE DUMP
      2433**PROC     2480--CALL     2488--CALL     2506--CALL     2512--CALL
DUMP_OPEN IN PROCEDURE DUMP
      2296**DCL      2468<>CALL
DUMP_OPEN.ACSVEH_ IN PROCEDURE DUMP
      2298**DCL      2299--REDEF
DUMP_OPEN.ALTKEYS_ IN PROCEDURE DUMP
      2304**DCL      2305--REDEF    2305--REDEF
DUMP_OPEN.HDR_ IN PROCEDURE DUMP
      2303**DCL      2304--REDEF
DUMP_OPEN.TAB_ IN PROCEDURE DUMP
      2302**DCL      2303--REDEF
DUMP_OPEN.UHL_ IN PROCEDURE DUMP
PL6.E3A0      #003=OCM$TPSET File=OCM$MESSAGE.:E05TSI                            WED 07/30/97 04:01 Page:180  
      2296**DCL      2297--REDEF    2297--REDEF
DUMP_OPEN.V IN PROCEDURE DUMP
      2305**DCL      2296--DCLINIT
DUMP_OPEN.V.FSN# IN PROCEDURE DUMP
      2336**DCL      2336--REDEF    2336--REDEF
DUMP_OPEN.WSN_ IN PROCEDURE DUMP
      2302**DCL      2302--REDEF
DUMP_OUT IN PROCEDURE DUMP
      2404**DCL      2428<>CALL
DUMP_OUT.BUF_.BOUND IN PROCEDURE DUMP
      2404**DCL      2422<<ASSIGN   2425<>CALL
DUMP_OUT.STATION_ IN PROCEDURE DUMP
      2406**DCL      2406--REDEF
DUMP_OUT.V IN PROCEDURE DUMP
      2407**DCL      2404--DCLINIT
DUMP_OUT.V.DVBYTE.VFC# IN PROCEDURE DUMP
      2413**DCL      2413--REDEF
ERRCODE.B
        35**DCL        36--REDEF    2198<<ASSIGN
ERRCODE.U
        36**DCL      2132--DCLINIT
F$DCB.ACTPOS
       192**DCL       192--REDEF
F$DCB.ARS
       167**DCL       167--REDEF    2177>>ASSIGN
F$DCB.ATTR
       185**DCL       186--REDEF
F$DCB.BORROW
       200**DCL       200--REDEF     200--REDEF     200--REDEF
F$DCB.DCBNAME.L
       214**DCL       214--IMP-SIZ
F$DCB.EOMCHAR
       171**DCL       171--REDEF
F$DCB.FLDID
       195**DCL       195--REDEF
F$DCB.FORM$
PL6.E3A0      #003=OCM$TPSET File=OCM$MESSAGE.:E05TSI                            WED 07/30/97 04:01 Page:181  
       189**DCL       189--REDEF
F$DCB.FSECT
       205**DCL       205--REDEF
F$DCB.FSN
       182**DCL       182--REDEF     182--REDEF     183--REDEF
F$DCB.HEADER$
       188**DCL       188--REDEF
F$DCB.IXTNSIZE
       186**DCL       186--REDEF
F$DCB.LASTSTA$
       176**DCL       176--REDEF
F$DCB.LVL
       201**DCL       201--REDEF
F$DCB.NAME.C
       176**DCL       176--REDEF
F$DCB.NOEOF
       197**DCL       197--REDEF
F$DCB.NRECS
       187**DCL       187--REDEF
F$DCB.NRECX
       206**DCL       206--REDEF
F$DCB.OHDR
       198**DCL       198--REDEF
F$DCB.ORG
       181**DCL       181--REDEF
F$DCB.PRECNO
       204**DCL       204--REDEF
F$DCB.RCSZ
       209**DCL       209--REDEF
F$DCB.RES
       177**DCL       177--REDEF
F$DCB.SETX
       189**DCL       189--REDEF
F$DCB.TAB$
       188**DCL       189--REDEF
F$DCB.TDA
PL6.E3A0      #003=OCM$TPSET File=OCM$MESSAGE.:E05TSI                            WED 07/30/97 04:01 Page:182  
       203**DCL       203--REDEF
F$DCB.WSN
       178**DCL       178--REDEF
F$TEMPLATE
        22**DCL      2177--ASSIGN
FOUND_TEMP
      2167**LABEL    2173--GOTO
FPT_ERRMSG
      2132**DCL      2199<>CALL
FPT_ERRMSG.V
      2136**DCL      2132--DCLINIT
GOT_TEMPLATE
      2177**LABEL    2160--GOTO
I
        48**DCL      2445>>ASSIGN   2477<<DOINDEX  2482>>CALLBLT  2488>>CALL     2503<<DOINDEX  2507>>CALLBLT
      2512>>CALL
ITPOSN IN PROCEDURE DUMP
      2225**DCL      2439>>CALLBLT  2445<<ASSIGN   2473<<ASSIGN   2488>>CALL     2501<<ASSIGN   2512>>CALL
J
        49**DCL      2453<<DOINDEX  2454>>CALLBLT
LANGUAGE
        30**DCL        20--PROC     2158>>IF       2165>>ASSIGN
LP_DUMP IN PROCEDURE DUMP
      2223**DCL      2426>>IF       2466>>IF       2523>>IF
M$CLOSE
      1825**DCL-ENT  2525--CALL
M$ERRMSG
      1888**DCL-ENT  2199--CALL
M$OPEN
      1825**DCL-ENT  2468--CALL
M$READ
      1826**DCL-ENT  2172--CALL     2175--CALL
M$WRITE
      1826**DCL-ENT  2428--CALL
MESSAGE_BUFFER
        31**DCL        20--PROC     2151>>ASSIGN
PL6.E3A0      #003=OCM$TPSET File=OCM$MESSAGE.:E05TSI                            WED 07/30/97 04:01 Page:183  
MKEY
        37**DCL      2094--DCLINIT  2095--DCLINIT
MKEY.KEY
        40**DCL      2158>>IF       2164<<ASSIGN   2197<<ASSIGN   2464>>CALLBLT
MKEY.LANG_BYTE
        39**DCL      2158>>IF       2165<<ASSIGN   2174<<ASSIGN
NCHARS IN PROCEDURE DUMP_LINE
      2434**DCL      2433--PROC     2439>>CALLBLT  2439>>CALLBLT  2442>>ASSIGN
NEXT
      2198**LABEL    2169--GOTO     2199--CALLALT
NOGO
        41**DCL      2201<<CALLBLT  2202<>CALL     2202--CALL
OC$PEND.SIZEB_MSG
       226**DCL       237--IMP-SIZ
OC$PEND.WSN
       232**DCL       233--REDEF
OC$PEND_NOMSG.WSN
       270**DCL       271--REDEF
OCM$TEMPLATE
        26**DCL-ENT  2183--CALL
OCM_BPOSN
      1272**DCL      2156<<ASSIGN   2192<>CALL     2515>>CALLBLT
OCM_BPOSN_TEXT IN PROCEDURE DUMP
      2221**DCL      2519--CALLBLT  2519>>CALLBLT  2521--ASSIGN
OCM_BUFFER
      1273**DCL      2133--DCLINIT  2188<<CALLBLT  2188>>CALLBLT  2192<>CALL
OCM_ERRTRN
      1272**DCL      2154<<REMEMBR
OCM_PARAM$
      1273**DCL      2152<<ASSIGN
OCM_TEMPLATE
      1273**DCL      2096--DCLINIT  2097--DCLINIT  2163<<CALLBLT  2181>>IF       2480<>CALL     2482>>CALLBLT
      2488<>CALL
OCM_TPOSN
      1272**DCL      2155<<ASSIGN   2513>>CALLBLT
OCM_TPOSN_TEXT IN PROCEDURE DUMP
PL6.E3A0      #003=OCM$TPSET File=OCM$MESSAGE.:E05TSI                            WED 07/30/97 04:01 Page:184  
      2219**DCL      2517--CALLBLT  2517>>CALLBLT  2518--CALLBLT  2519--CALLBLT  2521--ASSIGN
OCM_TSIZE
      1272**DCL      2177<<ASSIGN   2475>>ASSIGN
OCP_FREE_HEAD
       384**DCL       385--REDEF
OCP_MSGBUF_FREE.B
       388**DCL       388--REDEF
OCP_NON_STA
       390**DCL      2202<>CALL     2425<>CALL
OCP_USED_HEAD
       385**DCL       386--REDEF
OCP_USED_TAIL
       386**DCL       386--REDEF
OCW$WRITE
        27**DCL-ENT  2192--CALL     2202--CALL     2425--CALL
OC_CONSOLE.ATTR
      2011**DCL      2011--REDEF
OC_CONSOLE.ATTRO
      2012**DCL      2012--REDEF
OC_CONSOLE.CID
      2010**DCL      2011--REDEF
OC_CONSOLE.STATION
      2009**DCL      2009--REDEF
OC_CONSOLE$
      2008**DCL      2009--IMP-PTR
OC_DIR
      2051**DCL      2051--REDEF
OC_DUMP IN PROCEDURE DUMP
      2224**DCL      2423>>IF
OC_INTBIT
      2051**DCL      2052--REDEF
OC_INTMSG
      1928**DCL      1941--REDEF
OC_INTMSG.FLAGS
      1935**DCL      1936--REDEF
OC_INTMSG.MESS
PL6.E3A0      #003=OCM$TPSET File=OCM$MESSAGE.:E05TSI                            WED 07/30/97 04:01 Page:185  
      1941**DCL      1941--REDEF
OC_INTMSG.MSGID
      1931**DCL      1932--REDEF
OC_INTMSG.WSN
      1938**DCL      1939--REDEF
OC_MASK
      2052**DCL      2052--REDEF
OC_MESSBUF
      1943**DCL      1958--REDEF    1972--REDEF    2152--ASSIGN
OC_MESSBUF.CADDR
      1944**DCL      2192<>CALL
OC_MESSBUF.FLAGS
      1950**DCL      1951--REDEF
OC_MESSBUF.MESS
      1956**DCL      1956--REDEF
OC_MESSBUF.MSG#
      1945**DCL      2158>>IF       2164>>ASSIGN   2186>>IF       2186>>IF       2201>>CALLBLT
OC_MESSBUF.MSGID
      1946**DCL      1947--REDEF
OC_MESSBUF.NPARAMS
      1948**DCL      2152>>ASSIGN
OC_MESSBUF.WSN
      1953**DCL      1954--REDEF    2192<>CALL
OC_MESSBUF1.FLAGS
      1965**DCL      1966--REDEF
OC_MESSBUF1.LEN
      1971**DCL      1971--REDEF
OC_MESSBUF1.MSGID
      1961**DCL      1962--REDEF
OC_MESSBUF1.WSN
      1968**DCL      1969--REDEF
OC_MESSBUF2
      1972**DCL      2151<<ASSIGN   2506<>CALL     2507>>CALLBLT  2512<>CALL
OC_MSGBUFFER
      1974**DCL      1989--REDEF
OC_MSGBUFFER.FLAGS
PL6.E3A0      #003=OCM$TPSET File=OCM$MESSAGE.:E05TSI                            WED 07/30/97 04:01 Page:186  
      1981**DCL      1982--REDEF
OC_MSGBUFFER.MESS
      1987**DCL      1987--REDEF
OC_MSGBUFFER.MSGID
      1977**DCL      1978--REDEF
OC_MSGBUFFER.WSN
      1984**DCL      1985--REDEF
OC_MSGBUFFER2.FLAGS
      1996**DCL      1997--REDEF
OC_MSGBUFFER2.MSGID
      1992**DCL      1993--REDEF
OC_MSGBUFFER2.WSN
      1999**DCL      2000--REDEF
OC_MSG_GOOD
      2052**DCL      2167>>IF
OC_PARAM
      2007**DCL      2007--REDEF
OC_QUEUE.PARMC
      2006**DCL      2006--REDEF
SOURCE_BUF IN PROCEDURE DUMP_LINE
      2435**DCL      2433--PROC     2439>>CALLBLT
TEMP.B IN PROCEDURE DUMP
      2212**DCL      2454>>CALLBLT
TEMP.C IN PROCEDURE DUMP
      2211**DCL      2212--REDEF    2213--REDEF    2482<<CALLBLT  2507<<CALLBLT
TEMP.U IN PROCEDURE DUMP
      2213**DCL      2456<<ASSIGN   2456>>ASSIGN
TEMP_READ
      2094**DCL      2172<>CALL     2175<>CALL
TEMP_READ.STATION_
      2097**DCL      2098--REDEF
TEMP_READ.V
      2098**DCL      2094--DCLINIT
TEMP_READ.V.DVBYTE.REREAD#
      2109**DCL      2109--REDEF
TEMP_READ.V.INDX#
PL6.E3A0      #003=OCM$TPSET File=OCM$MESSAGE.:E05TSI                            WED 07/30/97 04:01 Page:187  
      2107**DCL      2107--REDEF
TRYAGAIN
      2174**LABEL    2172--CALLALT
