VERSION E05

PL6.E3A0      #001=HFB$CONNECT File=HFB$FPR.:E05TSI                              TUE 07/29/97 22:22 Page:1    
        1        1        /*M* HFB$FPR - PL6 portion of monitor fault handler                           */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X*   PLM=3,IND=5,ENU=0,ECU=0   */
        8        8        /*P* NAME:        HFB$FPR
        9        9             PURPOSE:     PL6 subroutines used for fault processing,
       10       10                          processing memory EDAC errors, processing the
       11       11                          extended fault registers, and the
       12       12                          management of the port access mask registers in
       13       13                          the memory system control units (SCU).  */
       14       14        HFB$CONNECT:PROC(FINFO,ACTION,SCODE,MAGICS) /*PRESERVE(PR6)*/;
       15       15        %INCLUDE B$MAP;
       16      114    1   DCL B$WSQ0PT$ PTR SYMREF;
       17      115        %INCLUDE B$SS;
       18      294        %INCLUDE B$USER;
       19      510        %B$USERREFS;
       20      514        %INCLUDE MM_DATA_R;
       21     1034        %INCLUDE B_LSDATA_C;
       22     4240        %INCLUDE B$JIT_C;
       23     4554        %B$JIT0;
       24     4643        %U$JIT1X;
       25     4646        %M$JIT2;
       26     4656        %F$JIT3X;
       27     4659        %S$JIT4X;
       28     4662        %J$JIT5;
       29     4750        %A$JIT6X;
       30     4753        %INCLUDE UE_CP6;
       31     5444        %B$FLT;
       32     5496        %B$ECCB;
       33     5504        %B$ECCBI;
       34     5507        %INCLUDE HF_DATA_R;
       35     5550        %INCLUDE S_WSPTD_R;
       36     5566        %INCLUDE HF_ERRORS_C;
       37     5651        %INCLUDE HF_LOCK_C;
PL6.E3A0      #001=HFB$CONNECT File=HFB$FPR.:E05TSI                              TUE 07/29/97 22:22 Page:2    
       38     5665        %INCLUDE EL_SUBS_C;
       39     5749        %INCLUDE EL$TABLES;
       40     6072        %EL$PROCERR (STCLASS=AUTO,SHORT=YES);
       41     6082        %INCLUDE B_MACROS_C;
       42     6193        %T01DESCR (NAME=B$$DESCR);
       43     6201        %EJECT;
PL6.E3A0      #001=HFB$CONNECT File=HFB$FPR.:E05TSI                              TUE 07/29/97 22:22 Page:3    
       44     6202    1   DCL MAGICS(0:5) SBIN WORD;         /* PREVIOUS MAGIC FRAME SAVED IN TSACK     */
       45     6203    1   DCL 1 SCODE ALIGNED,
       46     6204    1         2 FCG BIT(12) UNAL,
       47     6205    1         2 MID BIT(6) UNAL,
       48     6206    1         2 CODE UBIN(15) UNAL,
       49     6207    1         2 SEV UBIN(3) UNAL;
       50     6208    1   DCL ACTION SBIN WORD;
       51     6209    1   DCL 1 FINFO,
       52     6210    1         2 PORT# UBIN(9) UNAL,
       53     6211    1         2 * BIT(4) UNAL,
       54     6212    1         2 BRANCH_MODE BIT(1) UNAL,
       55     6213    1         2 PROCTYPE UBIN(4) UNAL,
       56     6214    1         2 SUBCODE UBIN(18) UNAL,
       57     6215    1         2 FLTREG,                         /* FAULT REGISTER                     */
       58     6216    1           3 IPR_OPC BIT(1),               /* IPR: ILLEGAL OP CODE               */
       59     6217    1           3 IPR_ADDR BIT(1),              /* IPR: ILLEGAL ADDR OR MODIFIER      */
       60     6218    1           3 CMD_SLAVE BIT(1),             /* CMD: ILLEGAL SLAVE PROCEDURE       */
       61     6219    1           3 IPR_OTHER BIT(1),             /* IPR: ALL OTHERS                    */
       62     6220    1           3 STR_NEA BIT(1),               /* STR: NON-EXISTANT ADDRESS          */
       63     6221    1           3 STR_BND BIT(1),               /* STR: OUT OF BOUNDS                 */
       64     6222    1           3 IPR_EIS BIT(1),               /* IPR: ILLEGAL DATA (EIS)            */
       65     6223    1           3 PROC_PAR,
       66     6224    1             4 UPPER BIT(1),
       67     6225    1             4 LOWER BIT(1),
       68     6226    1           3 CONNECT_PORT_A BIT(1),
       69     6227    1           3 CONNECT_PORT_B BIT(1),
       70     6228    1           3 CONNECT_PORT_C BIT(1),
       71     6229    1           3 CONNECT_PORT_D BIT(1),
       72     6230    1           3 SCU_PROC_ERR1 BIT(1),
       73     6231    1           3 SCU_PROC_ERR2 BIT(1),
       74     6232    1           3 * BIT(1),
       75     6233    1           3 MEM_ILL_ACT,
       76     6234    1             4 PORT_A UBIN(4) UNAL,
       77     6235    1             4 PORT_B UBIN(4) UNAL,
       78     6236    1             4 PORT_C UBIN(4) UNAL,
       79     6237    1             4 PORT_D UBIN(4) UNAL,
       80     6238    1           3 MEM_ILL_ACT_ELS REDEF MEM_ILL_ACT,
PL6.E3A0      #001=HFB$CONNECT File=HFB$FPR.:E05TSI                              TUE 07/29/97 22:22 Page:4    
       81     6239    1             4 PORT_AB BIT(8) UNAL,
       82     6240    1             4 * BIT(8) UNAL,
       83     6241    1           3 CACHE_ERR,
       84     6242    1             4 DIR_PAR BIT(1),
       85     6243    1             4 STORE_PAR BIT(1),
       86     6244    1             4 ILL_ACT_ON_STORE BIT(1),
       87     6245    1             4 PAR_ON_BLOCKLOAD BIT(1),
       88     6246    1         2 JERR,
       89     6247    1           3 FCG BIT(12) UNAL,
       90     6248    1           3 MID BIT(6) UNAL,
       91     6249    1           3 CODE UBIN(15) UNAL,
       92     6250    1           3 SEV UBIN(3) UNAL,
       93     6251    1         2 P# SBIN WORD;
       94     6252    1   DCL 1 ECC SBIN WORD;
       95     6253    1   DCL 1 WS_REGS DALIGNED,
       96     6254    1         2 WSRS(0:7) UBIN(9) UNAL;
       97     6255    1   DCL CP SBIN WORD;
       98     6256    1   DCL ERROR UBIN(36);
       99     6257    1   DCL 1 CNCTEV DALIGNED,
      100     6258    1         2 WORD1,
      101     6259    1           3 IC UBIN(18) UNAL,
      102     6260    1           3 WSR UBIN(3) UNAL,
      103     6261    1           3 PORT UBIN(3) UNAL,
      104     6262    1           3 CNNCT BIT(12) UNAL,
      105     6263    1         2 TIME UBIN WORD;
      106     6264    1   DCL 1 EASF CONSTANT,
      107     6265    1         2 FCG BIT(12) UNAL INIT('1006'O),
      108     6266    1         2 MID BIT(6) UNAL INIT('02'O),
      109     6267    1         2 MON BIT(1) UNAL INIT('1'B),
      110     6268    1         2 CODE UBIN(14) UNAL INIT(%E$ASF),
      111     6269    1         2 SEV UBIN(3) UNAL INIT(6);
      112     6270    1   DCL 1 SUACODE CONSTANT,
      113     6271    1         2 FCG BIT(12) UNAL INIT('1006'O),
      114     6272    1         2 MID BIT(6) UNAL INIT('02'O),
      115     6273    1         2 CODE UBIN(15) UNAL INIT(0),
      116     6274    1         2 SEV UBIN(3) UNAL INIT(6);
      117     6275    1   DCL 1 SCRCODE CONSTANT,
PL6.E3A0      #001=HFB$CONNECT File=HFB$FPR.:E05TSI                              TUE 07/29/97 22:22 Page:5    
      118     6276    1         2 FCG BIT(12) UNAL INIT('1006'O),
      119     6277    1         2 MID BIT(6) UNAL INIT('02'O),
      120     6278    1         2 CODE UBIN(15) UNAL INIT(0),
      121     6279    1         2 SEV UBIN(3) UNAL INIT(7);
      122     6280    1   DCL 1 HRDCODE CONSTANT,
      123     6281    1         2 FCG BIT(12) UNAL INIT('1006'O),
      124     6282    1         2 MID BIT(6) UNAL INIT('01'O),
      125     6283    1         2 CODE UBIN(15) UNAL INIT(%E$HARDWARE),
      126     6284    1         2 SEV UBIN(3) UNAL INIT(6);
      127     6285    1   DCL ECCB_FINDEX (0:21) UBIN CONSTANT INIT(
      128     6286    1       63,27,20,22,63,28,21,29,63,34,30,34,63,18,19,63,26,63,31,63,32,33
      129     6287    1                                                    );
      130     6288    1   DCL ECCB_FTYPE  (0:21) UBIN CONSTANT INIT(
      131     6289    1       15,07,06,06,15,07,06,07,15,07,07,07,15,05,05,15,7,15,07,15,07,07
      132     6290    1                                                    );
      133     6291    1   DCL ECCB_SUBC (0:21) UBIN CONSTANT INIT(
      134     6292    1       15,0,0,2,15,1,1,2,15,7,3,8,15,0,1,15,9,10,4,11,5,6
      135     6293    1                                                    );
      136     6294    1   DCL IC UBIN(36);
      137     6295    1   DCL STIMR REDEF IC UBIN;
      138     6296    1   DCL P# SBIN WORD;
      139     6297    1   DCL WSQ SBIN WORD;
      140     6298    1   DCL WSR SBIN WORD;
      141     6299    1   DCL BASE SBIN WORD;
      142     6300    1   DCL BOUND SBIN WORD;
      143     6301    1   DCL S_TIMR_SAV UBIN WORD;
      144     6302    1   DCL I SBIN;
      145     6303    1   DCL 1 INST,
      146     6304    1         2 * BIT(18) UNAL,
      147     6305    1         2 OP_CODE BIT(10) UNAL,
      148     6306    1         2 * BIT(8) UNAL;
      149     6307    1   DCL FOUND BIT(1);
      150     6308    1   DCL P$ PTR;
      151     6309    1   DCL MISCDESC BIT(72) DALIGNED;
      152     6310    1   DCL 1 MISCDESC_R REDEF MISCDESC,
      153     6311    1         2 BOUND UBIN(20) UNAL ,
      154     6312    1         2 FLGS BIT(9) UNAL,
PL6.E3A0      #001=HFB$CONNECT File=HFB$FPR.:E05TSI                              TUE 07/29/97 22:22 Page:6    
      155     6313    1         2 WSR UBIN(3) UNAL,
      156     6314    1         2 TYP UBIN(4) UNAL ,
      157     6315    1         2 BASE UBIN(36) UNAL;
      158     6316    1   DCL DUMGATE REDEF MISCDESC BIT(72);
      159     6317    1   DCL ELA$SYSLOG ENTRY(6) ALTRET;
      160     6318    1   DCL HFC$CACHECLR ENTRY(0);
      161     6319    1   DCL HFC$ASSOCCLR ENTRY(0);
      162     6320    1   DCL HFC$DIS ENTRY(0);
      163     6321    1   DCL HFC$MAKECPU ENTRY(1);
      164     6322    1   DCL   HFC$RCW ENTRY;
      165     6323    1   DCL HFC$RELIEF ENTRY;
      166     6324    1   DCL SSC$SASYNC ENTRY(0);
      167     6325    1   DCL SSC$STIMR ENTRY(1);
      168     6326    1   DCL   SSS$CACHEBP ENTRY;
      169     6327    1   DCL   SSS$CACHE ENTRY;
      170     6328    1   DCL SSS$STOP    ENTRY;
      171     6329    1   DCL SSS$UPDITIME ENTRY;
      172     6330    1   DCL IRM$REBOOT ENTRY;
      173     6331    1   DCL SSC$STOPPED ENTRY;
      174     6332    1   DCL SST$SSFTCB ENTRY(6) ALTRET;
      175     6333    1   DCL SSS$EOMTIME ENTRY(1);
      176     6334    1   DCL JSS$FIXLASR ENTRY;
      177     6335    1   DCL MMB$GPP ENTRY(2) ALTRET;
      178     6336    1   DCL UDN$MGRES ENTRY(1);
      179     6337    1   DCL UDE$FPTCHK ENTRY(1);
      180     6338    1   DCL SC_HFERR  ENTRY CONV(2,0);
      181     6339
      182     6340    1   DCL B$JIT$ PTR SYMREF;
      183     6341    1   DCL S_PNO UBIN SYMREF;
      184     6342    1   DCL S_CUN UBIN SYMREF;
      185     6343    1   DCL S_TIMR UBIN SYMREF;
      186     6344    1   DCL S_PCU(0:7) UBIN SYMREF;
      187     6345    1   DCL S_MPSTATE(0:7) UBIN SYMREF;
      188     6346    1   DCL S_PORTNR(0:7) UBIN SYMREF;
      189     6347    1   DCL S_PTYPE(0:7) SBIN SYMREF;
      190     6348    1   DCL B$MISC$ PTR SYMREF;
      191     6349    1   DCL B$PPUT$ PTR SYMREF;
PL6.E3A0      #001=HFB$CONNECT File=HFB$FPR.:E05TSI                              TUE 07/29/97 22:22 Page:7    
      192     6350    1   DCL B$LS$ PTR SYMREF;
      193     6351    1   DCL B$UPT$ PTR SYMREF;
      194     6352    1   DCL B$USERLS$ PTR SYMREF;
      195     6353    1   DCL FAULTING_INST UBIN WORD ALIGNED BASED;
      196     6354        %INCLUDE B_MAGIC_C;
      197     6472        %B_MPT (FPTN=B_MPT,STCLASS=SYMREF);
      198     6565        %B_MLS (FPTN=B$MLS,STCLASS=BASED);
      199     7380    1   DCL 1 HFB$SS DALIGNED BASED,
      200     7381    1         2 * (0:15) UBIN,
      201     7382    1         2 PRN (0:7),
      202     7383    1           3 AR UBIN(24) UNAL,
      203     7384    1           3 S BIT(2),
      204     7385    1           3 D UBIN(10) UNAL,
      205     7386    1         2 DRN (0:7),
      206     7387    1           3 BOUND UBIN(20) UNAL,
      207     7388    1           3 FLAGS BIT(9),
      208     7389    1           3 WSR UBIN(3) UNAL,
      209     7390    1           3 TYPE UBIN(4) UNAL,
      210     7391    1           3 BASE SBIN,
      211     7392    1           3 BASE_R REDEF BASE,
      212     7393    1             4 BIT2 BIT(2) UNAL,
      213     7394    1             4 BIT_REST BIT(34) UNAL;
      214     7395    1   DCL DESCR (0:511) BIT(72) DALIGNED BASED;
      215     7396        %EJECT;
PL6.E3A0      #001=HFB$CONNECT File=HFB$FPR.:E05TSI                              TUE 07/29/97 22:22 Page:8    
      216     7397        /* The SUBs for ACTION follow.
      217     7398           If they ever change, change the ones in HFA$FAULT and HFE$PMME also.
      218     7399        */
      219     7400        %SUB SCREECH=7/*SCREECH*/;
      220     7401        %SUB DELTAGO=6/*DELTAGO*/;
      221     7402        %SUB ABORTM=5/*ABORTM*/;
      222     7403        %SUB SPARE_FLT=4/*SPARE*/;
      223     7404        %SUB PGEFLT=4/*PGEFLT*/;
      224     7405        %SUB SEXIT=3/*SEXIT*/;
      225     7406        %SUB RLIEF=2 /*RELIEF*/;
      226     7407        %SUB CNCFLT=1/*CNCFLT*/;
      227     7408        /*                                                */
      228     7409        %SUB SS$=B_MPT.SS$;
      229     7410        %SUB TCB$=B_MPT.TCB$;
      230     7411        %SUB ECCB$=B_MPT.ECCB$;
      231     7412        %EQU MAXHJIT=(%HJITPG+1)*4096;
      232     7413        %EQU MAXJIT=(%JITPG+1)*4096;
      233     7414        %EJECT;
PL6.E3A0      #001=HFB$CONNECT File=HFB$FPR.:E05TSI                              TUE 07/29/97 22:22 Page:9    
      234     7415        /*F* NAME:        HFB$CONNECT
      235     7416             PURPOSE:     Process connect faults.  */
      236     7417        /*D* NAME:        HFB$CONNECT
      237     7418             DESCRIPTION: All connect faults are recorded in a circular
      238     7419                          connect event buffer, H_CNCTEVBF.  The action
      239     7420                          taken then depends on the contents of the connect
      240     7421                          mailbox, H_CNNCTBLBX, indexed by the processor
      241     7422                          number, S_PNO.   */
      242     7423    2      DO INHIBIT;
      243     7424    2           DUMGATE='1'B;
      244     7425    2           STIMR=S_TIMR;                   /* SAVE PREVIOUS TIMER  MODE          */
      245     7426    2           CALL SSC$SASYNC;
      246     7427                %LOCK (G#=H_CNCTEVGATE);
      247     7430    2           CALL SSS$EOMTIME(CNCTEV.TIME);
      248     7431    2           CALL SSS$CACHEBP;
      249     7432    2           CNCTEV.WORD1 = H_CNNCTMLBX(S_PNO);
      250     7433    2           CNCTEV.WORD1.IC = SS$->B$SS.IC;
      251     7434    2           CNCTEV.WORD1.WSR = SS$->B$SS.ISR.WSR;
      252     7435    2           CNCTEV.WORD1.PORT = S_PORTNR(S_PNO);
      253     7436    2           H_CNCTEVBF(H_CNCTEVX) = CNCTEV;
      254     7437    2           H_CNCTEVX = H_CNCTEVX + 1;
      255     7438    2           IF H_CNCTEVX >= 16 THEN H_CNCTEVX = 0;
      256     7439    2           CALL HFC$RCW;
      257     7440                %UNLOCK (G#=H_CNCTEVGATE);
      258     7443    2           CALL SSC$STOPPED;
      259     7444    2           CALL SSS$CACHEBP;               /* BYPASS CACHE TO CHECK MAILBOX      */
      260     7445    2           IF H_CNNCTMLBX.MAKE(S_PNO) THEN
      261     7446    3           DO;
      262     7447    3                CALL HFC$MAKECPU(0);       /* METAMORPHOSIS                      */
      263     7448    3                CALL HFC$DIS;
      264     7449    3                END;
      265     7450    2           IF H_CNNCTMLBX.RELIEF(S_PNO) THEN
      266     7451    3           DO;
      267     7452    3                H_CNNCTMLBX(S_PNO) = '0'B;
      268     7453    3                ACTION = RLIEF;
      269     7454    3                CALL SSS$CACHE;
      270     7455    3                CALL SSC$SASYNC;
PL6.E3A0      #001=HFB$CONNECT File=HFB$FPR.:E05TSI                              TUE 07/29/97 22:22 Page:10   
      271     7456    3                RETURN;
      272     7457    3                END;
      273     7458                %LOCK (G#=DUMGATE);             /* LOCK GATE IN AUTO TO DISABLE       */
      274     7461    2           END;                            /* END INHIBIT                        */
      275     7462    1      IF H_CNNCTMLBX.TIME(S_PNO) THEN
      276     7463    2      DO;
      277     7464    2           CALL HFC$DIS;                   /* WAIT FOR HIM TO SET CLOCK          */
      278     7465    2           CALL SSS$UPDITIME;              /* UPDATE OUR INTERVAL BEGIN TIME     */
      279     7466    2           END;
      280     7467    1      IF H_CNNCTMLBX.SCR(S_PNO) THEN
      281     7468    2      DO;
      282     7469    2           S_MPSTATE(S_PNO)=2;             /* SHOW PROCESSOR RUNNING             */
      283     7470    2           IF S_PNO = 0 THEN
      284     7471    2                CALL IRM$REBOOT;           /* GO TO AARDVARK IF MASTER           */
      285     7472    2           ELSE
      286     7473    2                CALL SSS$STOP;             /* STOP IF SLAVE                      */
      287     7474    2           END;
      288     7475    1      IF H_CNNCTMLBX.CLEAR(S_PNO)
      289     7476    2      THEN DO;
      290     7477    2           CALL HFC$CACHECLR;
      291     7478    2           CALL HFC$ASSOCCLR;
      292     7479    2           H_CNNCTMLBX(S_PNO) = '0'B;
      293     7480    2           END;
      294     7481    1      IF H_CNNCTMLBX.PAUSE(S_PNO) THEN
      295     7482    2      DO;
      296     7483    2           CALL HFC$DIS;                   /* WAIT FOR NEXT CONNECT FAULT        */
      297     7484    2           END;
      298     7485    1      IF STIMR >= 2 THEN
      299     7486    1           ACTION=CNCFLT;                  /* RETURN TO MON EXECUTION            */
      300     7487    1      ELSE
      301     7488    1           ACTION=SEXIT;                   /* RETURN TO USER OR SERVICE          */
      302     7489    1      CALL SSS$CACHE;
      303     7490           %UNLOCK (G#=DUMGATE);                /* UNLOCK (ENABLE)                    */
      304     7493    1      CALL SSC$SASYNC;
      305     7494    1      RETURN;
      306     7495        %EJECT;
PL6.E3A0      #001=HFB$CONNECT File=HFB$FPR.:E05TSI                              TUE 07/29/97 22:22 Page:11   
      307     7496        /*F* NAME:        HFB$VISIBLE
      308     7497             PURPOSE:     Process faults that are always user visible (e.g.
      309     7498                          illegal procedure faults).   */
      310     7499    1   HFB$VISIBLE:ENTRY(FINFO,ACTION,SCODE,MAGICS);
      311     7500    1      CALL VISIBLE_;
      312     7501    1      RETURN;
      313     7502        %EJECT;
PL6.E3A0      #001=HFB$CONNECT File=HFB$FPR.:E05TSI                              TUE 07/29/97 22:22 Page:12   
      314     7503        /*F* NAME:        HFB$MSF
      315     7504             PURPOSE:     Process missing segment faults.  */
      316     7505        /*D* NAME:        HFB$MSF
      317     7506             DESCRIPTION: For missing segment faults that occur on
      318     7507                          instructions in the monitor with comgroup ASR
      319     7508                          provided that the effective WSQ# for the fault
      320     7509                          indicates %CGWSQ, refresh any descriptor registers
      321     7510                          that are ASR relative by bypassing cache
      322     7511                          Otherwise, process as a user visible fault.     */
      323     7512    1   HFB$MSF:ENTRY(FINFO,ACTION,SCODE,MAGICS);
      324     7513    1      IF SS$->B$SS.ASR.WSR = %CGWSR
      325     7514    1        AND SS$->B$SS.ISR.WSR = %MONWSR
      326     7515    1        AND SS$->B$SS.EWSQ# = %CGWSQ
      327     7516    1        AND SS$->B$SS.ASR.FLAGS & %DSNULL
      328     7517    1        AND SS$->B$SS.ASR.FLAGS & %DSPRESNT
      329     7518    2      THEN DO;
      330     7519    2           MISCDESC = SS$->B$SS.ASR;
      331     7520    2           P$ = ADDR(MISCDESC);
      332     7521    2           P$->B$$DESCR.TYP = 0;
      333     7522    2           P$->B$$DESCR.FLGS = P$->B$$DESCR.FLGS & ~%DSCACHE;
      334     7523    2           B$LS$->B$MLS.MAGICAS = MISCDESC;
      335     7524    2           FOUND = '0'B;
      336     7525    3           DO I = 0 TO 7;
      337     7526    3                IF SS$->HFB$SS.PRN.S(I) = '10'B
      338     7527    3                  AND NOT SS$->HFB$SS.DRN.FLAGS(I) & %DSPRESNT
      339     7528    3                  AND SS$->B$SS.ASR.BOUND+1 >= (SS$->HFB$SS.PRN.D(I)+1)*8
      340     7529    4                THEN DO;
      341     7530    4                     SS$->HFB$SS.DRN(I) = B_MPT.AS$->DESCR(SS$->HFB$SS.PRN.D(I));
      342     7531    4                     IF SS$->HFB$SS.DRN.FLAGS(I) & %DSPRESNT
      343     7532    4                     THEN FOUND = '1'B;
      344     7533    4                     END;
      345     7534    3                END;                       /* DO I = 0 TO 7                      */
      346     7535    2           IF FOUND
      347     7536    3           THEN DO;
      348     7537    3                CALL ICFIX;
      349     7538    3                SS$->B$SS.IR.MIR = '0'B;
      350     7539    3                ACTION = CNCFLT;
PL6.E3A0      #001=HFB$CONNECT File=HFB$FPR.:E05TSI                              TUE 07/29/97 22:22 Page:13   
      351     7540    3                CALL HFC$CACHECLR;
      352     7541    3                RETURN;
      353     7542    3                END;
      354     7543    2           END;
      355     7544    1      CALL VISIBLE_;
      356     7545    1      RETURN;
      357     7546        %EJECT;
PL6.E3A0      #001=HFB$CONNECT File=HFB$FPR.:E05TSI                              TUE 07/29/97 22:22 Page:14   
      358     7547        /*F* NAME:        HFB$STR
      359     7548             PURPOSE:     Process STR (Memory) faults.  */
      360     7549        /*D* NAME:        HFB$STR
      361     7550             DESCRIPTION: The STR fault is considered a hardware error if the
      362     7551                          non-existent address bit in the fault register is
      363     7552                          set or if any of the system control unit port
      364     7553                          illegal action codes are non-zero.  Otherwise the
      365     7554                          STR fault is processed as a user visible fault.  */
      366     7555    1   HFB$STR:ENTRY(FINFO,ACTION,SCODE,MAGICS);
      367     7556    2      IF S_PTYPE(S_PNO) = %DPS8000 THEN DO;
      368     7557    2           IF (FINFO.FLTREG.MEM_ILL_ACT.PORT_A ~=0 AND
      369     7558    2             FINFO.FLTREG.MEM_ILL_ACT.PORT_A ~=2)
      370     7559    2             OR (FINFO.FLTREG.MEM_ILL_ACT.PORT_B ~=0 AND
      371     7560    2             FINFO.FLTREG.MEM_ILL_ACT.PORT_B ~=2)
      372     7561    2           THEN CALL SYSERR ;
      373     7562    2           ELSE CALL VISIBLE;
      374     7563    2           END;
      375     7564    2      ELSE DO;
      376     7565    2           IF (FINFO.FLTREG.STR_NEA='1'B AND S_PTYPE(S_PNO)~=%ELS1)
      377     7566    2             OR FINFO.FLTREG.MEM_ILL_ACT.PORT_A~=0
      378     7567    2             OR FINFO.FLTREG.MEM_ILL_ACT.PORT_B~=0
      379     7568    2             OR (FINFO.FLTREG.MEM_ILL_ACT.PORT_C~=0 AND S_PTYPE(S_PNO)~=%ELS1)
      380     7569    2             OR (FINFO.FLTREG.MEM_ILL_ACT.PORT_D~=0 AND S_PTYPE(S_PNO)~=%ELS1)
      381     7570    2           THEN CALL SYSERR;
      382     7571    2           ELSE CALL VISIBLE;
      383     7572    2           END;
      384     7573    1      RETURN;
      385     7574        %EJECT;
PL6.E3A0      #001=HFB$CONNECT File=HFB$FPR.:E05TSI                              TUE 07/29/97 22:22 Page:15   
      386     7575        /*F* NAME:        HFB$CMD
      387     7576             PURPOSE:     Process command faults.  */
      388     7577        /*D* NAME:        HFB$CMD
      389     7578             DESCRIPTION: A command fault is processed as a user visible fault
      390     7579                          if the illegal slave procedure bit in the fault
      391     7580                          register is set (%L66 and %DPSE) or if all system
      392     7581                          controller unit port illegal action codes are
      393     7582                          zero (ELS) or if any system control unit port
      394     7583                          illegal action code is '1010'B (illegal system
      395     7584                          control command received).  This last case can be
      396     7585                          caused by a user executing an RSCR instruction in
      397     7586                          slave mode to read the real-time clock directed to
      398     7587                          the upper store unit on a system controller.
      399     7588                          Otherwise the command fault is processed as a
      400     7589                          hardware error.   */
      401     7590    1   HFB$CMD:ENTRY(FINFO,ACTION,SCODE,MAGICS);
      402     7591    1      IF (S_PTYPE(S_PNO) = %DPS8000) THEN
      403     7592    1           CALL SYSERR;
      404     7593    2      ELSE DO;
      405     7594    2           IF (FINFO.FLTREG.CMD_SLAVE AND S_PTYPE(S_PNO)~=%ELS1)
      406     7595    2             OR (FINFO.FLTREG.MEM_ILL_ACT='0'B AND S_PTYPE(S_PNO)~=%ELS1)
      407     7596    2             OR (FINFO.FLTREG.MEM_ILL_ACT_ELS.PORT_AB='0'B AND S_PTYPE(S_PNO)=%ELS1)
      408     7597    2             OR FINFO.FLTREG.MEM_ILL_ACT.PORT_A=10
      409     7598    2             OR FINFO.FLTREG.MEM_ILL_ACT.PORT_B=10
      410     7599    2             OR (FINFO.FLTREG.MEM_ILL_ACT.PORT_C=10 AND S_PTYPE(S_PNO)~=%ELS1)
      411     7600    2             OR (FINFO.FLTREG.MEM_ILL_ACT.PORT_D=10 AND S_PTYPE(S_PNO)~=%ELS1)
      412     7601    2           THEN CALL VISIBLE;
      413     7602    2           ELSE CALL SYSERR;
      414     7603    2           END;
      415     7604    1      RETURN;
      416     7605        %EJECT;
PL6.E3A0      #001=HFB$CONNECT File=HFB$FPR.:E05TSI                              TUE 07/29/97 22:22 Page:16   
      417     7606        /*F* NAME:        HFB$MPF
      418     7607             PURPOSE:     Process missing page faults.  */
      419     7608        /*D* NAME:        HFB$MPF
      420     7609             DESCRIPTION: If the relative virtual address in the safe-store
      421     7610                          frame is pointing at the top of the users HJIT, then
      422     7611                          the user is aborted due to the overflow of the
      423     7612                          argument/parameter stack.  If the fault is in the
      424     7613                          user ISR and is one of the working space quarters
      425     7614                          used for large virtual arrays, control is returned
      426     7615                          to memory management to get the requested page.
      427     7616                          Otherwise the missing page fault is processed
      428     7617                          as a user visible fault.                        */
      429     7618    1   HFB$MPF:ENTRY(FINFO,ACTION,SCODE,MAGICS);
      430     7619    2      DO INHIBIT;
      431     7620    2           IF (SS$->B$SS.EWSQ# >= %VS1WSQ
      432     7621    2             AND SS$->B$SS.EWSQ# <= %VS3WSQ)
      433     7622    3           THEN DO;
      434     7623    3   PGEFLTACT:   CALL ICFIX;
      435     7624    3                ACTION = PGEFLT;
      436     7625    3                RETURN;
      437     7626    3                END;
      438     7627
      439     7628    2           IF SS$->B$SS.RVA >= %MAXJIT AND SS$->B$SS.RVA < %MAXJIT + 4096
      440     7629    3           THEN DO;                        /* TSTACK overflow, get another page. */
      441     7630    3                S_TIMR_SAV = S_TIMR;       /* save previous S_TIMR value         */
      442     7631    3                CALL SSC$SASYNC;           /* first, get into monitor mode       */
      443     7632    4                DO UNINHIBIT; /* now we can be interrupted since we're monitor   */
      444     7633    4                     CALL MMB$GPP (ACTION , %MONWSQ);
      445     7634    4                     IF ACTION ~= 0
      446     7635    5                     THEN DO;
      447     7636    5                          B$PPUT$ -> MM$PPUT(ACTION) = '0'B;
      448     7637    5                          B$PPUT$ -> MM$PPUT.USER(ACTION) = '1'B;
      449     7638    5                          B$PPUT$ -> MM$PPUT.USER#(ACTION) = S_CUN;
      450     7639    5                          B$JIT.PCC = B$JIT.PCC + 1;
      451     7640    5                          B$JIT.PPC = B$JIT.PPC + 1;
      452     7641    5                          S$CU$ -> B$U.PCT = B$JIT.PPC;
      453     7642    5                          B$UPT$ -> B$MAP (%AJITPG) = B$UPT$ -> B$MAP (%JITPG);
PL6.E3A0      #001=HFB$CONNECT File=HFB$FPR.:E05TSI                              TUE 07/29/97 22:22 Page:17   
      454     7643                               %MAP (P$ = B$UPT$ , VPNO = "%AJITPG" , PPNO = ACTION);
      455     7646    5                          CALL ICFIX;
      456     7647    5                          ACTION = CNCFLT;
      457     7648    5                          SS$->B$SS.IR.MIR = '0'B;
      458     7649    5                          END;
      459     7650    4                     END;
      460     7651    3                CALL SSC$STIMR( S_TIMR_SAV); /* return back to previous state    */
      461     7652    3                IF ACTION ~= 0 THEN RETURN;
      462     7653    3                END;
      463     7654    2           END;
      464     7655
      465     7656    2      IF (SS$->B$SS.EWSQ#=%USERWSQ AND SS$->B$SS.RVA >= DS_BASE %) THEN DO;
      466     7657    2           IF NOT (H_S1000_FLG | H_RPM_FLG) THEN GOTO PGEFLTACT;
      467     7658    3           DO I = 7 DOWNTO 0;
      468     7659    3                P$=PINCRW(ADDR(B$USERLS$->B$ULNK.DS1), I*2);
      469     7660    4                IF P$->B$$DESCR.FLGS & %DSNULL THEN DO;
      470     7661    4                     IF (P$->B$$DESCR.BASE+P$->B$$DESCR.BOUND)/4096 >= SS$->B$SS.RVA/
              7661                              4096 THEN
      471     7662    4                          GOTO PGEFLTACT;
      472     7663    4                     ELSE
      473     7664    4                          GOTO MPFVIS;
      474     7665    4                     END;
      475     7666    3                END;
      476     7667    2           GOTO MPFVIS;
      477     7668    2           END;
      478     7669    1      IF SS$->B$SS.RVA = %MAXHJIT
      479     7670    2      THEN DO;
      480     7671    2           CALL ICFIX;
      481     7672    2           B$JIT.ERR = EASF;
      482     7673    2           IF SS$->B$SS.ISR.WSR ~= %MONWSR THEN
      483     7674
      484     7675    2                ACTION=ABORTM;
      485     7676    3           ELSE DO;
      486     7677    3                IF B_MPT.SSDESC$->B$$DESCR.WSR = %MONWSR OR S_TIMR>=2 THEN
      487     7678    3                     SCODE.SEV=7;
      488     7679    3                ELSE
      489     7680    3                     SCODE.SEV=6;
PL6.E3A0      #001=HFB$CONNECT File=HFB$FPR.:E05TSI                              TUE 07/29/97 22:22 Page:18   
      490     7681    3                ACTION = SCREECH;
      491     7682    3                END;
      492     7683    2           CALL JSS$FIXLASR;
      493     7684    2           RETURN;
      494     7685    2           END;
      495     7686    1   MPFVIS:
      496     7687    1      CALL VISIBLE;
      497     7688    1      RETURN;
      498     7689        /*E*  ERROR:  -E$ASF-A
      499     7690              MESSAGE: Your Argument/Parameter Stack is full.
      500     7691        */
      501     7692        /*E*  ERROR: HFB-E$ASF-A
      502     7693              MESSAGE: Your Argument/Parameter Stack is full.
      503     7694              MESSAGE1: A Missing Page fault occurred while
      504     7695                        accessing the Argument/Parameter Stack.
      505     7696        */
      506     7697        %EJECT;
PL6.E3A0      #001=HFB$CONNECT File=HFB$FPR.:E05TSI                              TUE 07/29/97 22:22 Page:19   
      507     7698        /*F* NAME:        HFB$HDWR
      508     7699             PURPOSE:     Process faults that are always hardware errors (e.g.
      509     7700                          operation-not-complete faults).   */
      510     7701    1   HFB$HDWR:ENTRY(FINFO,ACTION,SCODE,MAGICS);
      511     7702    1      CALL SYSERR;
      512     7703    1      IF SS$->B$FLT.SSFRAME.FCODE = %FLT_PRTY#
      513     7704    1        AND SS$->B$SS.ISR.WSR = %MONWSR
      514     7705    1        AND S_PTYPE(S_PNO) = %L66
      515     7706    1        AND S_RETRY >= 0
      516     7707    1        AND S_RETRY < 5
      517     7708    1        AND (FINFO.FLTREG.MEM_ILL_ACT.PORT_A = 13
      518     7709    1        OR FINFO.FLTREG.MEM_ILL_ACT.PORT_B = 13
      519     7710    1        OR FINFO.FLTREG.MEM_ILL_ACT.PORT_C = 13
      520     7711    1        OR FINFO.FLTREG.MEM_ILL_ACT.PORT_D = 13)
      521     7712    2      THEN DO INHIBIT;
      522     7713    2           MISCDESC = B$LS$->B$MLS.MISC;
      523     7714    2           B$LS$->B$MLS.MISC = SS$->B$SS.ISR;
      524     7715    3           DO I = 0 TO 3;
      525     7716    3                INST = BINBIT(PINCRW(B$MISC$,SS$->B$SS.IC-I)->FAULTING_INST,36);
      526     7717    3                IF INST.OP_CODE = '4520'O  /* SCPR                               */
      527     7718    4                THEN DO;
      528     7719    4                     S_RETRY = S_RETRY+1;
      529     7720    4                     ACTION = CNCFLT;
      530     7721    4                     GOTO PRTY_EXIT;
      531     7722    4                     END;
      532     7723    3                END;
      533     7724    2   PRTY_EXIT:
      534     7725    2           B$LS$->B$MLS.MISC = MISCDESC;
      535     7726    2           END;                            /* INHIBIT                            */
      536     7727    1      RETURN;
      537     7728        %EJECT;
PL6.E3A0      #001=HFB$CONNECT File=HFB$FPR.:E05TSI                              TUE 07/29/97 22:22 Page:20   
      538     7729        /*F* NAME:        HFB$ERRORLOG
      539     7730             PURPOSE:     Create a processor error log entry to record events
      540     7731                          other than hardware faults.   */
      541     7732    1   HFB$ERRORLOG:ENTRY;
      542     7733    1      CALL HDWRLOG;
      543     7734    1      RETURN;
      544     7735        %EJECT;
PL6.E3A0      #001=HFB$CONNECT File=HFB$FPR.:E05TSI                              TUE 07/29/97 22:22 Page:21   
      545     7736        /*D* NAME:        HFB$FPR
      546     7737             DESCRIPTION: The following is an overview of user visible fault
      547     7738                          processing:
      548     7739
      549     7740                          If the fault occurred in a user program and the user
      550     7741                          was running under user DELTA, we return to HFA$FAULT
      551     7742                          with action set to DELTAGO.
      552     7743
      553     7744                          If the fault occurred in the monitor while processing
      554     7745                          a user PMME (using user safe-store) and the fault
      555     7746                          type was STR, IPR, MISSING SEGMENT, MISSING PAGE, or
      556     7747                          SECURITY CLASS 2; we call UDE$FPTCHK to determine if
      557     7748                          the fault was caused by a bad PMME parameter.  If the
      558     7749                          fault was caused by a bad PMME parameter, UDE$FPTCHK
      559     7750                          ALTRETs back to the user.  If the fault was not
      560     7751                          caused by a bad PMME parameter, UDE$FPTCHK causes a
      561     7752                          SUA level SCREECH.  If the fault occurred while
      562     7753                          processing a user PMME and the fault type was other
      563     7754                          than those listed above, we return to HFA$FAULT with
      564     7755                          action set to SCREECH and the severity level set
      565     7756                          to 6 (SUA).  If the fault occurred in the monitor
      566     7757                          while running for the monitor (using monitor
      567     7758                          safe-store), we return to HFA$FAULT with action set
      568     7759                          to SCREECH and the severity level set to 7 (full
      569     7760                          SCREECH).
      570     7761
      571     7762                          If the fault occurred in a user program and the user
      572     7763                          has requested trap control for this fault, the
      573     7764                          safe-store frame and the history registers (if
      574     7765                          requested) are transferred to the users TCB by
      575     7766                          SST$SSFTCB, and we return to HFA$FAULT with action
      576     7767                          set to SEXIT.  If the fault occurred in a user
      577     7768                          program and the user has not requested trap control
      578     7769                          for this fault, we return to HFA$FAULT with action
      579     7770                          set to ABORTM.   */
      580     7771    1   VISIBLE_:PROC;
      581     7772    2   DCL FINDEX SBIN WORD;
PL6.E3A0      #001=HFB$CONNECT File=HFB$FPR.:E05TSI                              TUE 07/29/97 22:22 Page:22   
      582     7773    2   DCL FTYPE UBIN(36);
      583     7774    2   DCL FCODE SBIN WORD;
      584     7775    2      GOTO CHECKED;
      585     7776    2   VISIBLE:ENTRY;
      586     7777    2      IF ACTION < SCREECH
      587     7778    3      THEN DO;
      588     7779    3   CHECKED: ;
      589     7780    3           CALL ICFIX;
      590     7781    3           FCODE = SS$->B$SS.FC;
      591     7782    3           FINDEX = ECCB_FINDEX(FCODE);
      592     7783    3           FTYPE = ECCB_FTYPE(FCODE);
      593     7784    3           FINFO.SUBCODE=ECCB_SUBC(FCODE);
      594     7785    3           P# = FINFO.P#;
      595     7786    3           IF H_S1000_FLG THEN
      596     7787    4                IF FCODE = 21 THEN DO;
      597     7788    4                     MISCDESC = B$LS$->B$MLS.MAGICSS;
      598     7789    5                     IF MISCDESC_R.BASE = %SSS_BASE% THEN DO;
      599     7790    5                          PINCRW(SS$,20)->B$SS = SS$->B$SS;
      600     7791    5                          MISCDESC_R.BASE = MISCDESC_R.BASE + 64;
      601     7792    5                          MISCDESC_R.BOUND = MISCDESC_R.BOUND - 16;
      602     7793    5                          B$LS$->B$MLS.MAGICSS = MISCDESC;
      603     7794    5                          END;
      604     7795    4                     END;
      605     7796    4           IF FCODE = 10 THEN DO;
      606     7797    5                DO I = 0 TO 7;
      607     7798    5                     IF SS$->HFB$SS.DRN.TYPE(I) = 4
      608     7799    5                       AND (SS$->HFB$SS.DRN.BASE_R.BIT2(I) & '11'B) ~= '0'B
      609     7800    6                     THEN DO;
      610     7801    6                          SS$->HFB$SS.DRN.FLAGS(I) = SS$->HFB$SS.DRN.FLAGS(I) & '774'O;
      611     7802    6                          SS$->HFB$SS.DRN.BASE(I) = 0;
      612     7803    6                          END;
      613     7804    5                     END;                  /* DO I = 0 TO 7                      */
      614     7805    4                END;
      615     7806    3           IF (FINDEX = 63) OR (FTYPE = 15)
      616     7807    4           THEN DO;
      617     7808    4                CALL SC_HFERR;
      618     7809        /*S*   SCREECH_CODE:   HFB-S$HFERROR
PL6.E3A0      #001=HFB$CONNECT File=HFB$FPR.:E05TSI                              TUE 07/29/97 22:22 Page:23   
      619     7810               TYPE:  SCREECH
      620     7811               MESSAGE:   Internal Fault Handler error
      621     7812        */
      622     7813    4                END;
      623     7814    3           IF B_MPT.ECCBDESC$->B$$DESCR.FLGS & %DSXXX
      624     7815                                                /* If a user running under DELTA      */
      625     7816    3             OR (    (SS$->B$SS.ISR.WSR = %ASLWSR)
      626     7817    3             AND (B$JIT.JUNK2 & %JJ2_DBRK#)
      627     7818    3             AND (   SS$->B$FLT.SSFRAME.FCODE = %FLT_MEMORY#
      628     7819    3             OR SS$->B$FLT.SSFRAME.FCODE = %FLT_MPAGE#
      629     7820    3             OR SS$->B$FLT.SSFRAME.FCODE = %FLT_SEC2#)   )
      630     7821                            /* or possibly IDS stepping on a data breakpoint page     */
      631     7822    4           THEN DO;
      632     7823    4                B$JIT$->B$JIT.ERR = FINFO.JERR;
      633     7824    4                IF NOT ECCB$->B$ECCB.FLTFLG.HREG
      634     7825    4                THEN FINFO.P#=0;
      635     7826    4                ACTION = DELTAGO;
      636     7827    4                SCODE=BINBIT(FTYPE,36);
      637     7828    4                RETURN;
      638     7829    4                END;
      639     7830    3           ELSE IF ECCB$->B$ECCBI.FLAGS(FINDEX)
      640     7831    3                  AND ECCB$->B$ECCBI.FLAGS(FTYPE)
      641     7832    4                THEN DO;
      642     7833    4                     IF (SS$->B$SS.ISR.WSR ~= %MONWSR) THEN
      643     7834    4                          GOTO MON_NOT_RUNNING;
      644     7835    4                     IF (B_MPT.SSDESC$->B$$DESCR.WSR = %MONWSR) THEN GOTO TCB_FULL;
      645     7836    5                     ELSE DO;
      646     7837    5                          SCODE.SEV=6;
      647     7838    5                          CALL UDN$MGRES(MAGICS);
      648     7839    5                          CALL UDE$FPTCHK(SCODE);
      649     7840                                                /* WILL NOT RETURN                    */
      650     7841    5                          END;
      651     7842    4   MON_NOT_RUNNING:
      652     7843    4                     B$JIT$->B$JIT.ERR = FINFO.JERR;
      653     7844    4                     IF NOT ECCB$->B$ECCB.FLTFLG.HREG
      654     7845    4                     THEN FINFO.P# = 0;
      655     7846    4                     IC = ECCB$->B$ECCBI.ECIC(FTYPE);
PL6.E3A0      #001=HFB$CONNECT File=HFB$FPR.:E05TSI                              TUE 07/29/97 22:22 Page:24   
      656     7847    4                     ECC=FTYPE;
      657     7848    4                     CALL SST$SSFTCB(IC,ECC,FINFO,SS$,TCB$) ALTRET(TCB_FULL);
      658     7849    4                     ACTION = SEXIT;
      659     7850    4                     RETURN;
      660     7851    4                     END;
      661     7852        /* FAULTING DOMAIN NOT TO GET CONTROL */
      662     7853    3   TCB_FULL: ;
      663     7854    3           B$JIT$->B$JIT.ERR = FINFO.JERR;
      664     7855    3           FINFO.P# = P#;
      665     7856    3           IF SS$->B$SS.ISR.WSR ~= %MONWSR
      666     7857    3           THEN ACTION = ABORTM;
      667     7858    4           ELSE DO;
      668     7859    4                IF B_MPT.SSDESC$->B$$DESCR.WSR = %MONWSR OR S_TIMR >= 2
      669     7860    4                THEN SCODE.SEV=7;
      670     7861    4                ELSE SCODE.SEV=6;
      671     7862    4                ACTION = SCREECH;
      672     7863    4                END;
      673     7864    3           END;
      674     7865    2   END VISIBLE_;
      675     7866        %EJECT;
PL6.E3A0      #001=HFB$CONNECT File=HFB$FPR.:E05TSI                              TUE 07/29/97 22:22 Page:25   
      676     7867        /*D* NAME:        HFB$FPR
      677     7868             DESCRIPTION: The following is an overview of processing for
      678     7869                          faults which are treated as hardware errors:
      679     7870
      680     7871                          A processor error (PROCERR) error log entry is
      681     7872                          created for all faults which are treated as hardware
      682     7873                          errors.
      683     7874
      684     7875                          If the fault occurred in a user program and the user
      685     7876                          has requested trap control for this fault (available
      686     7877                          only to users with T&D privilege), the safe-store
      687     7878                          frame and the history registers (if requested) are
      688     7879                          transferred to the users TCB by SST$SSFTCB, and we
      689     7880                          return to HFA$FAULT with action set to SEXIT.  If
      690     7881                          the fault occurred in a user program and the user
      691     7882                          has not requested trap control for this fault, we
      692     7883                          return to HFA$FAULT with action set to ABORTM.
      693     7884
      694     7885                          If the fault occurred in the monitor while processing
      695     7886                          a user PMME (using user safe-store), we return to
      696     7887                          HFA$FAULT with action set to SCREECH and severity
      697     7888                          level set to 6 (SUA).  If the fault occurred in the
      698     7889                          monitor while running for the monitor (using monitor
      699     7890                          safe-store), we return to HFA$FAULT with action set
      700     7891                          to SCREECH and severity level set to 7 (full
      701     7892                          SCREECH).  */
      702     7893    1   SYSERR: PROC;
      703     7894    2      P# = FINFO.P#;
      704     7895    2      CALL ICFIX;
      705     7896    2      CALL HDWRLOG;                        /* LOG THE ERROR                      */
      706     7897    2      IF ECCB$->B$ECCB.FLTFLG.HDWR
      707     7898    2        AND ECCB$->B$ECCB.FLAGS.ERRSET
      708     7899    3      THEN DO;                        /* T&D USER HAS REQUESTED TRAP CONTROL     */
      709     7900    3           ACTION = SEXIT;
      710     7901    3           IF NOT ECCB$->B$ECCB.FLTFLG.HREG
      711     7902    3           THEN FINFO.P#=0;
      712     7903    3           IC = ECCB$->B$ECCB.ERR;
PL6.E3A0      #001=HFB$CONNECT File=HFB$FPR.:E05TSI                              TUE 07/29/97 22:22 Page:26   
      713     7904    3           ECC=7;
      714     7905    3           FINFO.SUBCODE=ECCB_SUBC(SS$->B$SS.FC);
      715     7906    3           CALL SST$SSFTCB(IC,ECC,FINFO,SS$,TCB$) ALTRET(TCBFULL);
      716     7907    3           B$JIT$->B$JIT.ERR = FINFO.JERR;
      717     7908    3           RETURN;
      718     7909    3           END;
      719     7910    2   TCBFULL: ;
      720     7911    2      FINFO.P# = P#;
      721     7912    2      IF SS$->B$SS.ISR.WSR ~= %MONWSR
      722     7913    3      THEN DO;                             /* ABORT USER IF NOT IN MONITOR       */
      723     7914    3           ACTION = ABORTM;
      724     7915    3           B$JIT$->B$JIT.ERR= HRDCODE;
      725     7916    3           END;
      726     7917    3      ELSE DO;                             /* SCREECH IF IN MONITOR              */
      727     7918    3           ACTION = SCREECH;
      728     7919    3           SCODE=HRDCODE;
      729     7920    3           B$JIT$->B$JIT.ERR = FINFO.JERR;
      730     7921    3           B$JIT$->B$JIT.ERR.SEV = FINFO.PORT#; /* SEVERITY CODE IS PORT NUMBER  */
      731     7922    3           IF B_MPT.SSDESC$->B$$DESCR.WSR = %MONWSR OR S_TIMR >= 2
      732     7923    3           THEN SCODE.SEV=7;
      733     7924    3           ELSE SCODE.SEV=6;
      734     7925    3           END;
      735     7926    2      RETURN;
      736     7927    2   END SYSERR;
      737     7928        %EJECT;
PL6.E3A0      #001=HFB$CONNECT File=HFB$FPR.:E05TSI                              TUE 07/29/97 22:22 Page:27   
      738     7929    1   HDWRLOG: PROC;
      739     7930        /*      BUILD ERRORLOG ENTRY                                          */
      740     7931    2      EL$PROCERR = '0'B;
      741     7932    2      EL$PROCERR.SYSID=B$USRT$->B$USER.SYSID(S_PCU(S_PNO));
      742     7933    3      DO INHIBIT;
      743     7934    3           MISCDESC = B$LS$->B$MLS.MISC;
      744     7935    3           B$LS$->B$MLS.MISC = SS$->B$SS.ISR;
      745     7936    3           EL$PROCERR.INST = PINCRW(B$MISC$,SS$->B$SS.IC)->FAULTING_INST;
      746     7937    3           B$LS$->B$MLS.MISC = MISCDESC;
      747     7938    3           END;                            /* INHIBIT                            */
      748     7939    2      EL$PROCERR.IR=SS$->B$SS.IR;
      749     7940    2      EL$PROCERR.IC=SS$->B$SS.IC;
      750     7941    2      EL$PROCERR.ISR=SS$->B$SS.ISR;
      751     7942    2      EL$PROCERR.PROCTYPE = S_PTYPE(S_PNO);
      752     7943    2      EL$PROCERR.RSW2 = H_RSW2(S_PNO);
      753     7944    2      EL$PROCERR.FC = SS$->B$SS.FC;
      754     7945    2      EL$PROCERR.SSSIZE = 64;
      755     7946    2      IF ADDR(FINFO) ~= ADDR(NIL)
      756     7947    3      THEN DO;
      757     7948    3           EL$PROCERR.FLTREG = FINFO.FLTREG;
      758     7949    3           EL$PROCERR.PORT# = FINFO.PORT#;
      759     7950    3           EL$PROCERR.HRSIZE = FINFO.P#;
      760     7951    3           FINFO.P# = FINFO.P# + SIZEW(EL$PROCERR) + 64;
      761     7952    3           CALL ELA$SYSLOG(EL_PROCERR,EL$PROCERR,FINFO.P#,'0'B,1,ERROR);
      762     7953    3           FINFO.P# = P#;
      763     7954    3           END;
      764     7955    2      ELSE CALL ELA$SYSLOG(EL_PROCERR,EL$PROCERR,SIZEW(EL$PROCERR)+64,'0'B,1,ERROR);
      765     7956    2      RETURN;
      766     7957    2   END;
      767     7958        %EJECT;
PL6.E3A0      #001=HFB$CONNECT File=HFB$FPR.:E05TSI                              TUE 07/29/97 22:22 Page:28   
      768     7959    1   ICFIX: PROC;
      769     7960    3      DO INHIBIT;
      770     7961    3           IF NOT(HW_FLTIC_OK OR SS$->B$SS.IR.MIR)
      771     7962    3           THEN
      772     7963    3                SS$->B$SS.IC = SS$->B$SS.IC - 1;
      773     7964    3           IF NOT B$JIT.PRIV.ACTIVE & %PR_TND#
      774     7965    3           THEN
      775     7966    3                SS$->B$SS.IR.MIR ='0'B;
      776     7967    3           END;
      777     7968    2   END ICFIX;
      778     7969        %EJECT;
PL6.E3A0      #001=HFB$CONNECT File=HFB$FPR.:E05TSI                              TUE 07/29/97 22:22 Page:29   
      779     7970        /*  THESE CODES ARE IN PL6 MODULE SO EXPL6 WILL GET THEM IN ERRFILE */
      780     7971        /*S*   SCREECH_CODE:  HFA-S$SDOWN
      781     7972               MESSAGE:  Shutdown fault
      782     7973        */
      783     7974        /*S*   SCREECH_CODE:  HFA-S$MEMORY
      784     7975               MESSAGE:  Memory fault
      785     7976        */
      786     7977        /*S*   SCREECH_CODE:  HFA-S$MME
      787     7978               MESSAGE:  MME fault
      788     7979        */
      789     7980        /*S*   SCREECH_CODE:  HFA-S$FLTAG
      790     7981               MESSAGE:  Fault Tag fault
      791     7982        */
      792     7983        /*S*   SCREECH_CODE:  HFA-S$TIMER
      793     7984               MESSAGE:  Timer runout fault (Fault Handler Error)
      794     7985        */
      795     7986        /*S*   SCREECH_CODE:  HFA-S$CMMD
      796     7987               MESSAGE:  Command fault
      797     7988        */
      798     7989        /*S*   SCREECH_CODE:  HFA-S$DERAIL
      799     7990               MESSAGE:  Derail fault
      800     7991        */
      801     7992        /*S*   SCREECH_CODE:  HFA-S$LOCKUP
      802     7993               MESSAGE:  Lockup fault
      803     7994        */
      804     7995        /*S*   SCREECH_CODE:  HFA-S$CONCT
      805     7996               MESSAGE:   Connect Fault (Fault Handler Error)
      806     7997        */
      807     7998        /*S*   SCREECH_CODE:  HFA-S$PRTY
      808     7999               MESSAGE:   Parity Error Fault
      809     8000        */
      810     8001        /*S*   SCREECH_CODE:  HFA-S$IPR
      811     8002               MESSAGE:  Illegal Procedure fault
      812     8003        */
      813     8004        /*S*   SCREECH_CODE:  HFA-S$OPNC
      814     8005               MESSAGE:   OP Not Complete Fault
      815     8006        */
PL6.E3A0      #001=HFB$CONNECT File=HFB$FPR.:E05TSI                              TUE 07/29/97 22:22 Page:30   
      816     8007        /*S*   SCREECH_CODE:  HFA-S$STUP
      817     8008               MESSAGE:   Startup fault
      818     8009        */
      819     8010        /*S*   SCREECH_CODE:  HFA-S$OVRF
      820     8011               MESSAGE:  Overflow fault
      821     8012        */
      822     8013        /*S*   SCREECH_CODE:  HFA-S$DVCHK
      823     8014               MESSAGE:  Divide Check fault
      824     8015        */
      825     8016        /*S*   SCREECH_CODE:  HFA-S$EXU
      826     8017               MESSAGE:   Execute fault
      827     8018        */
      828     8019        /*S*   SCREECH_CODE:  HFA-S$SCL1
      829     8020               MESSAGE:  Security 1 fault
      830     8021        */
      831     8022        /*S*   SCREECH_CODE:  HFA-S$DLNK
      832     8023               MESSAGE:   Dynamic Link fault
      833     8024        */
      834     8025        /*S*   SCREECH_CODE:  HFA-S$MSEG
      835     8026               MESSAGE:  Missing Segment fault
      836     8027        */
      837     8028        /*S*   SCREECH_CODE:  HFA-S$MWSP
      838     8029               MESSAGE:  Missing Work Space fault
      839     8030        */
      840     8031        /*S*   SCREECH_CODE:  HFA-S$MPAGE
      841     8032               MESSAGE:  Missing Page fault
      842     8033        */
      843     8034        /*S*   SCREECH_CODE:  HFA-S$SCL2
      844     8035               MESSAGE:  Security 2 fault
      845     8036        */
      846     8037        /*S*   SCREECH_CODE:  HFA-S$SSFULL
      847     8038               MESSAGE:  The Monitors Safe Store Stack is full
      848     8039        */
      849     8040        /*S*   SCREECH_CODE:  HFA-S$MTSTK
      850     8041               MESSAGE:  The Monitors Tstack is full
      851     8042        */
      852     8043        /*S*   SCREECH_CODE:   HFA-S$UTSTK
PL6.E3A0      #001=HFB$CONNECT File=HFB$FPR.:E05TSI                              TUE 07/29/97 22:22 Page:31   
      853     8044               MESSAGE:  The Users Tstack is full
      854     8045        */
      855     8046        /*S*   SCREECH_CODE:  HFA-S$HFERROR
      856     8047               MESSAGE:  Internal Fault Handler Error
      857     8048        */
      858     8049        /*S*   SCREECH_CODE:  HFA-S$CNCTERR
      859     8050               MESSAGE:  Connect Fault Error
      860     8051        */
      861     8052        /*S*   SCREECH_CODE:   HFA-S$QXDELTA
      862     8053               MESSAGE:   Quit to XDELTA
      863     8054        */
      864     8055        /*S*   SCREECH_CODE:   ISI-S$QAARDVRK
      865     8056               TYPE:      SCREECH
      866     8057               MESSAGE:   Operator Recovery Via Aardvark
      867     8058        */
      868     8059        /*S*   SCREECH_CODE:   HFA-S$HARDWARE
      869     8060               TYPE:     SCREECH
      870     8061               MESSAGE:  Hardware Error
      871     8062               REMARKS:  This screech indicates that a hardware fault has
      872     8063                         occurred which probably was not caused by software.
      873     8064                         The following faults are included in this category:
      874     8065
      875     8066                           1)  Any PARITY FAULT, OP NOT COMPLETE FAULT,
      876     8067                               DYNAMIC LINKING FAULT, OR MISSING WORKING
      877     8068                               SPACE FAULT.
      878     8069
      879     8070                           2)  A MEMORY FAULT (STR FAULT) due to either a
      880     8071                               non-existent address (fault register bit 4)
      881     8072                               or a non-zero illegal action code (fault
      882     8073                               register bits 16-31) received from the system
      883     8074                               controller.
      884     8075
      885     8076                           3)  A COMMAND FAULT that was not caused by an
      886     8077                               illegal slave procedure (fault register bit 2)
      887     8078                               and was not caused by an illegal system
      888     8079                               controller command (illegal action code of
      889     8080                               12 octal) received from the system controller.
PL6.E3A0      #001=HFB$CONNECT File=HFB$FPR.:E05TSI                              TUE 07/29/97 22:22 Page:32   
      890     8081
      891     8082                         A procerror error log entry is created for each
      892     8083                         hardware error.  The specific fault type causing
      893     8084                         the hardware error can be determined by looking
      894     8085                         at the procerror errors entries (ERROR PROCERR) in
      895     8086                         the error log (ELAN processor).  The fault code that
      896     8087                         caused the hardware error can also be determined by
      897     8088                         examining word 5 of the safe store frame that was
      898     8089                         created by the fault.
      899     8090        */
      900     8091        /*S*   SCREECH_CODE:   HFA-S$DIAGSNAP
      901     8092               TYPE:     SNAP
      902     8093               MESSAGE:  Diagnostic Snap From Fault Handler
      903     8094        */
      904     8095        /*S*   SCREECH_CODE:   HFA-S$SLAVE
      905     8096               TYPE:     SCREECH
      906     8097               MESSAGE:  CPU Won't Respond To Connect
      907     8098               REMARKS:  This SCREECH occurs because a CPU did not respond
      908     8099                         to a connect from another CPU requesting that the
      909     8100                         first CPU go from the pause state to run or from
      910     8101                         the run state to pause.  The CPU that did not
      911     8102                         respond is set to the stopped state and therefore,
      912     8103                         if it was a slave CPU, no attempt will be made
      913     8104                         by the master CPU to restart the slave CPU after
      914     8105                         the SCREECH.  After corrective action, the slave
      915     8106                         CPU can be restarted by depressing the INITIALIZE
      916     8107                         & CLEAR pushbutton on the CPU configuration panel
      917     8108                         and then issuing a START CPU keyin.  If the CPU
      918     8109                         that did not respond is a master CPU, the system
      919     8110                         will probably not recover automatically and a
      920     8111                         manually initiated disk boot will be required.
      921     8112        */
      922     8113        /*S*   SCREECH_CODE:   HFC-S$TOOLONG
      923     8114               TYPE:     SCREECH
      924     8115               MESSAGE:  Processor Waited Too Long For Gate To Be Unlocked
      925     8116               REMARKS:  This screech indicates that the screeching processor
      926     8117                         had to wait too long for a locked gate to be unlocked.
PL6.E3A0      #001=HFB$CONNECT File=HFB$FPR.:E05TSI                              TUE 07/29/97 22:22 Page:33   
      927     8118                         Since the screeching processor has waited about one
      928     8119                         second, the gate was probably left locked due to a
      929     8120                         software bug or, in a multiprocessing system, one of
      930     8121                         the other processors may have hung up with this gate
      931     8122                         locked.  $PR1 points at the offending gate.
      932     8123        */
      933     8124        /*S*   SCREECH_CODE:   HFC-S$NEGDIS
      934     8125               TYPE:     SCREECH
      935     8126               MESSAGE:  Interrupt Disable Count Is Negative
      936     8127               REMARKS:  This screech indicates that the interrupt disable
      937     8128                         count, NI$DS, is negative.  The only valid values for
      938     8129                         this count are zero or positive numbers.
      939     8130        */
      940     8131        /*S*   SCREECH_CODE:   HFC-S$NOTLOCKED
      941     8132               TYPE:     SCREECH
      942     8133               MESSAGE:  Attempt To Unlock a Gate That Is Not Locked
      943     8134               REMARKS:  This screech indicates that the screeching processor
      944     8135                         attempted to unlock a gate that was not locked.
      945     8136                         $PR1 points at the offending gate.
      946     8137        */
      947     8138        /*S*   SCREECH_CODE:   HFC-S$WRONGUSER
      948     8139               TYPE:     SCREECH
      949     8140               MESSAGE:  Attempt To Unlock a Gate Not Locked By This User
      950     8141               REMARKS:  This screech indicates that the screeching processor
      951     8142                         attempted to unlock a gate that was either locked by
      952     8143                         a different user or locked on a different processor.
      953     8144                         $PR1 points at the offending gate.
      954     8145        */
      955     8146        /*S*   SCREECH_CODE:   HFC-S$NEGGATECNT
      956     8147               TYPE:     SCREECH
      957     8148               MESSAGE:  Count Of Locked Gates On This Processor Is Negative
      958     8149               REMARKS:  This screech indicates that the locked gate count for
      959     8150                         this processor, H_GATECNT, became negative during the
      960     8151                         process of unlocking a gate.  The only valid values
      961     8152                         for this count are zero or positive numbers.  $PR1
      962     8153                         points at the gate that was being unlocked.
      963     8154        */
PL6.E3A0      #001=HFB$CONNECT File=HFB$FPR.:E05TSI                              TUE 07/29/97 22:22 Page:34   
      964     8155        /*S*   SCREECH_CODE:   HFC-S$BADSTIMR
      965     8156               TYPE:     SCREECH
      966     8157               MESSAGE:  Invalid Timer Mode While Unlocking Gate
      967     8158               REMARKS:  This screech indicates that the timer mode flag
      968     8159                         for this processor, S_TIMR, was set to an invalid
      969     8160                         state.  This condition was detected during the
      970     8161                         unlocking of the gate pointed at by $PR1.  The
      971     8162                         only valid states of the timer mode at this time
      972     8163                         are monitor service and monitor execution.
      973     8164        */
      974     8165        /*E*   ERROR:  HFA-E$MEMORY-E
      975     8166               MESSAGE:  Memory fault
      976     8167        */
      977     8168        /*E*   ERROR:  HFA-E$MME-E
      978     8169               MESSAGE:  MME fault
      979     8170        */
      980     8171        /*E*   ERROR:  HFA-E$FAULT_TAG-E
      981     8172               MESSAGE:  Fault Tag fault
      982     8173        */
      983     8174        /*E*   ERROR:  HFA-E$COMMAND-E
      984     8175               MESSAGE:  Command fault
      985     8176        */
      986     8177        /*E*   ERROR:  HFA-E$DERAIL-E
      987     8178               MESSAGE:  Derail fault
      988     8179        */
      989     8180        /*E*   ERROR:  HFA-E$LOCKUP-E
      990     8181               MESSAGE:  Lockup fault
      991     8182        */
      992     8183        /*E*   ERROR:  HFA-E$PRTY-E
      993     8184               MESSAGE:  Parity Error fault
      994     8185        */
      995     8186        /*E*   ERROR:  HFA-E$IPR-E
      996     8187               MESSAGE:  Illegal Procedure fault
      997     8188        */
      998     8189        /*E*   ERROR:  HFA-E$OPNC-E
      999     8190               MESSAGE:  OP Not Complete fault
     1000     8191        */
PL6.E3A0      #001=HFB$CONNECT File=HFB$FPR.:E05TSI                              TUE 07/29/97 22:22 Page:35   
     1001     8192        /*E*   ERROR:  HFA-E$OVERFLOW-E
     1002     8193               MESSAGE:  Overflow fault
     1003     8194        */
     1004     8195        /*E*   ERROR:  HFA-E$DIVIDE_CHECK-E
     1005     8196               MESSAGE:  Divide Check fault
     1006     8197        */
     1007     8198        /*E*   ERROR:  HFA-E$SECURITY_1-E
     1008     8199               MESSAGE:  Security 1 fault
     1009     8200        */
     1010     8201        /*E*   ERROR:  HFA-E$DLNK-E
     1011     8202               MESSAGE:  Dynamic Link fault
     1012     8203        */
     1013     8204        /*E*   ERROR:  HFA-E$MISSING_SEGMENT-E
     1014     8205               MESSAGE:  Missing Segment fault
     1015     8206        */
     1016     8207        /*E*   ERROR: HFA-E$MWSP-E
     1017     8208               MESSAGE:  Missing Work Space fault
     1018     8209        */
     1019     8210        /*E*   ERROR:  HFA-E$MISSING_PAGE-E
     1020     8211               MESSAGE:  Missing Page fault
     1021     8212        */
     1022     8213        /*E*   ERROR:  HFA-E$SECURITY_2-E
     1023     8214               MESSAGE:  Security 2 fault
     1024     8215        */
     1025     8216        /*E*   ERROR:  HFA-E$HARDWARE-E
     1026     8217               MESSAGE:  Hardware Error
     1027     8218               MESSAGE1: This error indicates that a hardware error (e.g.
     1028     8219                         parity fault) has occurred which probably was not
     1029     8220                         caused by software.
     1030     8221               MESSAGE2: The following faults are included in this category:
     1031     8222
     1032     8223                           1)  Any PARITY FAULT, OP NOT COMPLETE FAULT,
     1033     8224                               DYNAMIC LINKING FAULT, OR MISSING WORKING
     1034     8225                               SPACE FAULT.
     1035     8226
     1036     8227                           2)  A MEMORY FAULT (STR FAULT) due to either a
     1037     8228                               non-existent address (fault register bit 4)
PL6.E3A0      #001=HFB$CONNECT File=HFB$FPR.:E05TSI                              TUE 07/29/97 22:22 Page:36   
     1038     8229                               or a non-zero illegal action code (fault
     1039     8230                               register bits 16-31) received from the system
     1040     8231                               controller.
     1041     8232
     1042     8233                           3)  A COMMAND FAULT that was not caused by an
     1043     8234                               illegal slave procedure (fault register bit 2)
     1044     8235                               and was not caused by an illegal system
     1045     8236                               controller command (illegal action code of
     1046     8237                               12 octal) received from the system controller.
     1047     8238
     1048     8239                         A procerror error log entry is created for each
     1049     8240                         hardware error.  The specific fault type causing
     1050     8241                         the hardware error can be determined by looking
     1051     8242                         at the procerror errors entries (ERROR PROCERR) in
     1052     8243                         the error log (ELAN processor).  The fault code that
     1053     8244                         caused the hardware error can also be determined by
     1054     8245                         examining word 5 of the safe store frame that was
     1055     8246                         created by the fault.
     1056     8247
     1057     8248                         Since some hardware errors are intermittent, a user
     1058     8249                         whose job or program was aborted by a hardware error
     1059     8250                         might try resubmitting the job or rerunning the
     1060     8251                         program.
     1061     8252        */
     1062     8253    1   END HFB$CONNECT;
     1063     8254        %EOD;

PL6.E3A0      #001=HFB$CONNECT File=HFB$FPR.:E05TSI                              TUE 07/29/97 22:22 Page:37   
--  Include file information  --

   B_MAGIC_C.:E05TOU  is referenced.
   B_MACROS_C.:E05TOU  is referenced.
   EL$TABLES.:E05TOU  is referenced.
   EL_SUBS_C.:E05TOU  is referenced.
   HF_LOCK_C.:E05TOU  cannot be made into a system file and is referenced.
   HF_ERRORS_C.:E05TOU  is referenced.
   S_WSPTD_R.:E05TOU  cannot be made into a system file and is referenced.
   HF_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   UE_CP6.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  is referenced.
   B_MLSMAC_C.:E05TOU  is referenced.
   B_ULSMAC_C.:E05TOU  is referenced.
   B_LSDATA_C.:E05TOU  cannot be made into a system file and is referenced.
   MM_MACRO_M.:E05TOU  is referenced.
   B_STRINGS_C.:E05TOU  is referenced.
   MM$SYSGEN.:E05TOU  is referenced.
   M_INFO_C.:E05TOU  is referenced.
   MM_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   B$USER.:E05TOU  cannot be made into a system file and is referenced.
   B$SS.:E05TOU  cannot be made into a system file and is referenced.
   B$MAP.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure HFB$CONNECT.

   Procedure HFB$CONNECT requires 1058 words for executable code.
   Procedure HFB$CONNECT requires 50 words of local(AUTO) storage.

PL6.E3A0      #001=HFB$CONNECT File=HFB$FPR.:E05TSI                              TUE 07/29/97 22:22 Page:38   

 Object Unit name= HFB$CONNECT                                File name= HFB$FPR.:E05TOU
 UTS= JUL 29 '97 22:22:39.28 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0  RoData even  UTS     71    107  HFB$CONNECT
    1   Proc  even  none  1058   2042  HFB$CONNECT
    2  RoData even  none    20     24  HFB$CONNECT

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     1      0   yes            yes      Std        4  HFB$CONNECT
     1    240                  yes      Std        4  HFB$VISIBLE
     1    245                  yes      Std        4  HFB$MSF
     1    413                  yes      Std        4  HFB$STR
     1    476                  yes      Std        4  HFB$CMD
     1    557                  yes      Std        4  HFB$MPF
     1   1035                  yes      Std        4  HFB$HDWR
     1   1136                  yes      Std        0  HFB$ERRORLOG
PL6.E3A0      #001=HFB$CONNECT File=HFB$FPR.:E05TSI                              TUE 07/29/97 22:22 Page:39   

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       0 SSC$SASYNC
         yes           Std       1 HFC$LOCK
         yes           Std       0 SSS$CACHEBP
         yes           Std       1 HFC$UNLOCK
         yes           Std       0 HFC$RCW
         yes           Std       0 SSC$STOPPED
         yes           Std       1 HFC$MAKECPU
         yes           Std       0 SSS$CACHE
         yes           Std       0 HFC$ASSOCCLR
 yes     yes           Std       2 MMB$GPP
         yes           Std       0 IRM$REBOOT
         yes           Std       0 SSS$STOP
         yes           Std       0 JSS$FIXLASR
         yes           Std       1 SSS$EOMTIME
         yes           Std       0 HFC$DIS
         yes           Std       0 HFC$CACHECLR
         yes           Std       1 SSC$STIMR
         yes           Std       0 SSS$UPDITIME
         yes           Std       1 UDE$FPTCHK
         yes           Std       1 UDN$MGRES
 yes     yes           Std       6 SST$SSFTCB
 yes     yes           Std       6 ELA$SYSLOG
                       nStd      0 X66_AUTO_4
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET
PL6.E3A0      #001=HFB$CONNECT File=HFB$FPR.:E05TSI                              TUE 07/29/97 22:22 Page:40   

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     SC_HFERR                              B$WSQ0PT$                             S$CU$
     B$USRT$                          r    MM_BYP$                               H_CNNCTMLBX
     H_S1000_FLG                           H_RPM_FLG                             H_RSW2
     H_CNCTEVX                             H_CNCTEVBF                            H_CNCTEVGATE
     HW_WSQ0PT                             HW_FLTIC_OK                           S_RETRY
     B$JIT$                                S_PNO                                 S_CUN
     S_TIMR                                S_PCU                                 S_MPSTATE
     S_PORTNR                              S_PTYPE                               B$MISC$
     B$PPUT$                               B$LS$                                 B$UPT$
     B$USERLS$                             B_MPT                                 B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ASLENTSID                             ISSID
PL6.E3A0      #001=HFB$CONNECT File=HFB$FPR.:E05TSI                              TUE 07/29/97 22:22 Page:41   


        1        1        /*M* HFB$FPR - PL6 portion of monitor fault handler                           */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X*   PLM=3,IND=5,ENU=0,ECU=0   */
        8        8        /*P* NAME:        HFB$FPR
        9        9             PURPOSE:     PL6 subroutines used for fault processing,
       10       10                          processing memory EDAC errors, processing the
       11       11                          extended fault registers, and the
       12       12                          management of the port access mask registers in
       13       13                          the memory system control units (SCU).  */
       14       14        HFB$CONNECT:PROC(FINFO,ACTION,SCODE,MAGICS) /*PRESERVE(PR6)*/;

     14  1 000000   000000 700200 xent  HFB$CONNECT  TSX0  ! X66_AUTO_4
         1 000001   000062 000004                    ZERO    50,4

       15       15        %INCLUDE B$MAP;
       16      114    1   DCL B$WSQ0PT$ PTR SYMREF;
       17      115        %INCLUDE B$SS;
       18      294        %INCLUDE B$USER;
       19      510        %B$USERREFS;
       20      514        %INCLUDE MM_DATA_R;
       21     1034        %INCLUDE B_LSDATA_C;
       22     4240        %INCLUDE B$JIT_C;
       23     4554        %B$JIT0;
       24     4643        %U$JIT1X;
       25     4646        %M$JIT2;
       26     4656        %F$JIT3X;
       27     4659        %S$JIT4X;
       28     4662        %J$JIT5;
       29     4750        %A$JIT6X;
       30     4753        %INCLUDE UE_CP6;
       31     5444        %B$FLT;
       32     5496        %B$ECCB;
PL6.E3A0      #001=HFB$CONNECT File=HFB$FPR.:E05TSI                              TUE 07/29/97 22:22 Page:42   
       33     5504        %B$ECCBI;
       34     5507        %INCLUDE HF_DATA_R;
       35     5550        %INCLUDE S_WSPTD_R;
       36     5566        %INCLUDE HF_ERRORS_C;
       37     5651        %INCLUDE HF_LOCK_C;
       38     5665        %INCLUDE EL_SUBS_C;
       39     5749        %INCLUDE EL$TABLES;
       40     6072        %EL$PROCERR (STCLASS=AUTO,SHORT=YES);
       41     6082        %INCLUDE B_MACROS_C;
       42     6193        %T01DESCR (NAME=B$$DESCR);
       43     6201        %EJECT;
PL6.E3A0      #001=HFB$CONNECT File=HFB$FPR.:E05TSI                              TUE 07/29/97 22:22 Page:43   
       44     6202    1   DCL MAGICS(0:5) SBIN WORD;         /* PREVIOUS MAGIC FRAME SAVED IN TSACK     */
       45     6203    1   DCL 1 SCODE ALIGNED,
       46     6204    1         2 FCG BIT(12) UNAL,
       47     6205    1         2 MID BIT(6) UNAL,
       48     6206    1         2 CODE UBIN(15) UNAL,
       49     6207    1         2 SEV UBIN(3) UNAL;
       50     6208    1   DCL ACTION SBIN WORD;
       51     6209    1   DCL 1 FINFO,
       52     6210    1         2 PORT# UBIN(9) UNAL,
       53     6211    1         2 * BIT(4) UNAL,
       54     6212    1         2 BRANCH_MODE BIT(1) UNAL,
       55     6213    1         2 PROCTYPE UBIN(4) UNAL,
       56     6214    1         2 SUBCODE UBIN(18) UNAL,
       57     6215    1         2 FLTREG,                         /* FAULT REGISTER                     */
       58     6216    1           3 IPR_OPC BIT(1),               /* IPR: ILLEGAL OP CODE               */
       59     6217    1           3 IPR_ADDR BIT(1),              /* IPR: ILLEGAL ADDR OR MODIFIER      */
       60     6218    1           3 CMD_SLAVE BIT(1),             /* CMD: ILLEGAL SLAVE PROCEDURE       */
       61     6219    1           3 IPR_OTHER BIT(1),             /* IPR: ALL OTHERS                    */
       62     6220    1           3 STR_NEA BIT(1),               /* STR: NON-EXISTANT ADDRESS          */
       63     6221    1           3 STR_BND BIT(1),               /* STR: OUT OF BOUNDS                 */
       64     6222    1           3 IPR_EIS BIT(1),               /* IPR: ILLEGAL DATA (EIS)            */
       65     6223    1           3 PROC_PAR,
       66     6224    1             4 UPPER BIT(1),
       67     6225    1             4 LOWER BIT(1),
       68     6226    1           3 CONNECT_PORT_A BIT(1),
       69     6227    1           3 CONNECT_PORT_B BIT(1),
       70     6228    1           3 CONNECT_PORT_C BIT(1),
       71     6229    1           3 CONNECT_PORT_D BIT(1),
       72     6230    1           3 SCU_PROC_ERR1 BIT(1),
       73     6231    1           3 SCU_PROC_ERR2 BIT(1),
       74     6232    1           3 * BIT(1),
       75     6233    1           3 MEM_ILL_ACT,
       76     6234    1             4 PORT_A UBIN(4) UNAL,
       77     6235    1             4 PORT_B UBIN(4) UNAL,
       78     6236    1             4 PORT_C UBIN(4) UNAL,
       79     6237    1             4 PORT_D UBIN(4) UNAL,
       80     6238    1           3 MEM_ILL_ACT_ELS REDEF MEM_ILL_ACT,
PL6.E3A0      #001=HFB$CONNECT File=HFB$FPR.:E05TSI                              TUE 07/29/97 22:22 Page:44   
       81     6239    1             4 PORT_AB BIT(8) UNAL,
       82     6240    1             4 * BIT(8) UNAL,
       83     6241    1           3 CACHE_ERR,
       84     6242    1             4 DIR_PAR BIT(1),
       85     6243    1             4 STORE_PAR BIT(1),
       86     6244    1             4 ILL_ACT_ON_STORE BIT(1),
       87     6245    1             4 PAR_ON_BLOCKLOAD BIT(1),
       88     6246    1         2 JERR,
       89     6247    1           3 FCG BIT(12) UNAL,
       90     6248    1           3 MID BIT(6) UNAL,
       91     6249    1           3 CODE UBIN(15) UNAL,
       92     6250    1           3 SEV UBIN(3) UNAL,
       93     6251    1         2 P# SBIN WORD;
       94     6252    1   DCL 1 ECC SBIN WORD;
       95     6253    1   DCL 1 WS_REGS DALIGNED,
       96     6254    1         2 WSRS(0:7) UBIN(9) UNAL;
       97     6255    1   DCL CP SBIN WORD;
       98     6256    1   DCL ERROR UBIN(36);
       99     6257    1   DCL 1 CNCTEV DALIGNED,
      100     6258    1         2 WORD1,
      101     6259    1           3 IC UBIN(18) UNAL,
      102     6260    1           3 WSR UBIN(3) UNAL,
      103     6261    1           3 PORT UBIN(3) UNAL,
      104     6262    1           3 CNNCT BIT(12) UNAL,
      105     6263    1         2 TIME UBIN WORD;
      106     6264    1   DCL 1 EASF CONSTANT,
      107     6265    1         2 FCG BIT(12) UNAL INIT('1006'O),
      108     6266    1         2 MID BIT(6) UNAL INIT('02'O),
      109     6267    1         2 MON BIT(1) UNAL INIT('1'B),
      110     6268    1         2 CODE UBIN(14) UNAL INIT(%E$ASF),
      111     6269    1         2 SEV UBIN(3) UNAL INIT(6);
      112     6270    1   DCL 1 SUACODE CONSTANT,
      113     6271    1         2 FCG BIT(12) UNAL INIT('1006'O),
      114     6272    1         2 MID BIT(6) UNAL INIT('02'O),
      115     6273    1         2 CODE UBIN(15) UNAL INIT(0),
      116     6274    1         2 SEV UBIN(3) UNAL INIT(6);
      117     6275    1   DCL 1 SCRCODE CONSTANT,
PL6.E3A0      #001=HFB$CONNECT File=HFB$FPR.:E05TSI                              TUE 07/29/97 22:22 Page:45   
      118     6276    1         2 FCG BIT(12) UNAL INIT('1006'O),
      119     6277    1         2 MID BIT(6) UNAL INIT('02'O),
      120     6278    1         2 CODE UBIN(15) UNAL INIT(0),
      121     6279    1         2 SEV UBIN(3) UNAL INIT(7);
      122     6280    1   DCL 1 HRDCODE CONSTANT,
      123     6281    1         2 FCG BIT(12) UNAL INIT('1006'O),
      124     6282    1         2 MID BIT(6) UNAL INIT('01'O),
      125     6283    1         2 CODE UBIN(15) UNAL INIT(%E$HARDWARE),
      126     6284    1         2 SEV UBIN(3) UNAL INIT(6);
      127     6285    1   DCL ECCB_FINDEX (0:21) UBIN CONSTANT INIT(
      128     6286    1       63,27,20,22,63,28,21,29,63,34,30,34,63,18,19,63,26,63,31,63,32,33
      129     6287    1                                                    );
      130     6288    1   DCL ECCB_FTYPE  (0:21) UBIN CONSTANT INIT(
      131     6289    1       15,07,06,06,15,07,06,07,15,07,07,07,15,05,05,15,7,15,07,15,07,07
      132     6290    1                                                    );
      133     6291    1   DCL ECCB_SUBC (0:21) UBIN CONSTANT INIT(
      134     6292    1       15,0,0,2,15,1,1,2,15,7,3,8,15,0,1,15,9,10,4,11,5,6
      135     6293    1                                                    );
      136     6294    1   DCL IC UBIN(36);
      137     6295    1   DCL STIMR REDEF IC UBIN;
      138     6296    1   DCL P# SBIN WORD;
      139     6297    1   DCL WSQ SBIN WORD;
      140     6298    1   DCL WSR SBIN WORD;
      141     6299    1   DCL BASE SBIN WORD;
      142     6300    1   DCL BOUND SBIN WORD;
      143     6301    1   DCL S_TIMR_SAV UBIN WORD;
      144     6302    1   DCL I SBIN;
      145     6303    1   DCL 1 INST,
      146     6304    1         2 * BIT(18) UNAL,
      147     6305    1         2 OP_CODE BIT(10) UNAL,
      148     6306    1         2 * BIT(8) UNAL;
      149     6307    1   DCL FOUND BIT(1);
      150     6308    1   DCL P$ PTR;
      151     6309    1   DCL MISCDESC BIT(72) DALIGNED;
      152     6310    1   DCL 1 MISCDESC_R REDEF MISCDESC,
      153     6311    1         2 BOUND UBIN(20) UNAL ,
      154     6312    1         2 FLGS BIT(9) UNAL,
PL6.E3A0      #001=HFB$CONNECT File=HFB$FPR.:E05TSI                              TUE 07/29/97 22:22 Page:46   
      155     6313    1         2 WSR UBIN(3) UNAL,
      156     6314    1         2 TYP UBIN(4) UNAL ,
      157     6315    1         2 BASE UBIN(36) UNAL;
      158     6316    1   DCL DUMGATE REDEF MISCDESC BIT(72);
      159     6317    1   DCL ELA$SYSLOG ENTRY(6) ALTRET;
      160     6318    1   DCL HFC$CACHECLR ENTRY(0);
      161     6319    1   DCL HFC$ASSOCCLR ENTRY(0);
      162     6320    1   DCL HFC$DIS ENTRY(0);
      163     6321    1   DCL HFC$MAKECPU ENTRY(1);
      164     6322    1   DCL   HFC$RCW ENTRY;
      165     6323    1   DCL HFC$RELIEF ENTRY;
      166     6324    1   DCL SSC$SASYNC ENTRY(0);
      167     6325    1   DCL SSC$STIMR ENTRY(1);
      168     6326    1   DCL   SSS$CACHEBP ENTRY;
      169     6327    1   DCL   SSS$CACHE ENTRY;
      170     6328    1   DCL SSS$STOP    ENTRY;
      171     6329    1   DCL SSS$UPDITIME ENTRY;
      172     6330    1   DCL IRM$REBOOT ENTRY;
      173     6331    1   DCL SSC$STOPPED ENTRY;
      174     6332    1   DCL SST$SSFTCB ENTRY(6) ALTRET;
      175     6333    1   DCL SSS$EOMTIME ENTRY(1);
      176     6334    1   DCL JSS$FIXLASR ENTRY;
      177     6335    1   DCL MMB$GPP ENTRY(2) ALTRET;
      178     6336    1   DCL UDN$MGRES ENTRY(1);
      179     6337    1   DCL UDE$FPTCHK ENTRY(1);
      180     6338    1   DCL SC_HFERR  ENTRY CONV(2,0);
      181     6339
      182     6340    1   DCL B$JIT$ PTR SYMREF;
      183     6341    1   DCL S_PNO UBIN SYMREF;
      184     6342    1   DCL S_CUN UBIN SYMREF;
      185     6343    1   DCL S_TIMR UBIN SYMREF;
      186     6344    1   DCL S_PCU(0:7) UBIN SYMREF;
      187     6345    1   DCL S_MPSTATE(0:7) UBIN SYMREF;
      188     6346    1   DCL S_PORTNR(0:7) UBIN SYMREF;
      189     6347    1   DCL S_PTYPE(0:7) SBIN SYMREF;
      190     6348    1   DCL B$MISC$ PTR SYMREF;
      191     6349    1   DCL B$PPUT$ PTR SYMREF;
PL6.E3A0      #001=HFB$CONNECT File=HFB$FPR.:E05TSI                              TUE 07/29/97 22:22 Page:47   
      192     6350    1   DCL B$LS$ PTR SYMREF;
      193     6351    1   DCL B$UPT$ PTR SYMREF;
      194     6352    1   DCL B$USERLS$ PTR SYMREF;
      195     6353    1   DCL FAULTING_INST UBIN WORD ALIGNED BASED;
      196     6354        %INCLUDE B_MAGIC_C;
      197     6472        %B_MPT (FPTN=B_MPT,STCLASS=SYMREF);
      198     6565        %B_MLS (FPTN=B$MLS,STCLASS=BASED);
      199     7380    1   DCL 1 HFB$SS DALIGNED BASED,
      200     7381    1         2 * (0:15) UBIN,
      201     7382    1         2 PRN (0:7),
      202     7383    1           3 AR UBIN(24) UNAL,
      203     7384    1           3 S BIT(2),
      204     7385    1           3 D UBIN(10) UNAL,
      205     7386    1         2 DRN (0:7),
      206     7387    1           3 BOUND UBIN(20) UNAL,
      207     7388    1           3 FLAGS BIT(9),
      208     7389    1           3 WSR UBIN(3) UNAL,
      209     7390    1           3 TYPE UBIN(4) UNAL,
      210     7391    1           3 BASE SBIN,
      211     7392    1           3 BASE_R REDEF BASE,
      212     7393    1             4 BIT2 BIT(2) UNAL,
      213     7394    1             4 BIT_REST BIT(34) UNAL;
      214     7395    1   DCL DESCR (0:511) BIT(72) DALIGNED BASED;
      215     7396        %EJECT;
PL6.E3A0      #001=HFB$CONNECT File=HFB$FPR.:E05TSI                              TUE 07/29/97 22:22 Page:48   
      216     7397        /* The SUBs for ACTION follow.
      217     7398           If they ever change, change the ones in HFA$FAULT and HFE$PMME also.
      218     7399        */
      219     7400        %SUB SCREECH=7/*SCREECH*/;
      220     7401        %SUB DELTAGO=6/*DELTAGO*/;
      221     7402        %SUB ABORTM=5/*ABORTM*/;
      222     7403        %SUB SPARE_FLT=4/*SPARE*/;
      223     7404        %SUB PGEFLT=4/*PGEFLT*/;
      224     7405        %SUB SEXIT=3/*SEXIT*/;
      225     7406        %SUB RLIEF=2 /*RELIEF*/;
      226     7407        %SUB CNCFLT=1/*CNCFLT*/;
      227     7408        /*                                                */
      228     7409        %SUB SS$=B_MPT.SS$;
      229     7410        %SUB TCB$=B_MPT.TCB$;
      230     7411        %SUB ECCB$=B_MPT.ECCB$;
      231     7412        %EQU MAXHJIT=(%HJITPG+1)*4096;
      232     7413        %EQU MAXJIT=(%JITPG+1)*4096;
      233     7414        %EJECT;
PL6.E3A0      #001=HFB$CONNECT File=HFB$FPR.:E05TSI                              TUE 07/29/97 22:22 Page:49   
      234     7415        /*F* NAME:        HFB$CONNECT
      235     7416             PURPOSE:     Process connect faults.  */
      236     7417        /*D* NAME:        HFB$CONNECT
      237     7418             DESCRIPTION: All connect faults are recorded in a circular
      238     7419                          connect event buffer, H_CNCTEVBF.  The action
      239     7420                          taken then depends on the contents of the connect
      240     7421                          mailbox, H_CNNCTBLBX, indexed by the processor
      241     7422                          number, S_PNO.   */
      242     7423    2      DO INHIBIT;

      243     7424    2           DUMGATE='1'B;

   7424  1 000002   400000 235203                    LDA   ! -131072,DU
         1 000003   000000 236203                    LDQ   ! 0,DU
         1 000004   200044 757300                    STAQ  ! MISCDESC,,AUTO

      244     7425    2           STIMR=S_TIMR;                   /* SAVE PREVIOUS TIMER  MODE          */

   7425  1 000005   000000 235200 xsym               LDA   ! S_TIMR
         1 000006   200030 755300                    STA   ! IC,,AUTO

      245     7426    2           CALL SSC$SASYNC;

   7426  1 000007   000002 631600 xsym               EPPR1 ! B_VECTNIL+2
         1 000010   000000 701200 xent               TSX1  ! SSC$SASYNC
         1 000011   000000 011200                    NOP   ! 0

      246     7427                %LOCK (G#=H_CNCTEVGATE);

   7428  1 000012   000000 630600 2                  EPPR0 ! 0
         1 000013   000017 631600 xsym               EPPR1 ! B_VECTNIL+15
         1 000014   000000 701200 xent               TSX1  ! HFC$LOCK
         1 000015   000000 011200                    NOP   ! 0

      247     7430    2           CALL SSS$EOMTIME(CNCTEV.TIME);

   7430  1 000016   200027 630700                    EPPR0 ! CNCTEV+1,,AUTO
PL6.E3A0      #001=HFB$CONNECT File=HFB$FPR.:E05TSI                              TUE 07/29/97 22:22 Page:50   
         1 000017   200054 450700                    STP0  ! FCODE+3,,AUTO
         1 000020   200054 630700                    EPPR0 ! FCODE+3,,AUTO
         1 000021   000017 631600 xsym               EPPR1 ! B_VECTNIL+15
         1 000022   000000 701200 xent               TSX1  ! SSS$EOMTIME
         1 000023   000000 011200                    NOP   ! 0

      248     7431    2           CALL SSS$CACHEBP;

   7431  1 000024   000002 631600 xsym               EPPR1 ! B_VECTNIL+2
         1 000025   000000 701200 xent               TSX1  ! SSS$CACHEBP
         1 000026   000000 011200                    NOP   ! 0

      249     7432    2           CNCTEV.WORD1 = H_CNNCTMLBX(S_PNO);

   7432  1 000027   000000 720200 xsym               LXL0  ! S_PNO
         1 000030   000000 236210 xsym               LDQ   ! H_CNNCTMLBX,X0
         1 000031   200026 756300                    STQ   ! CNCTEV,,AUTO

      250     7433    2           CNCTEV.WORD1.IC = SS$->B$SS.IC;

   7433  1 000032   000000 470600 xsym               LDP0  ! B_MPT
         1 000033   000004 221300                    LDX1  ! 4,,PR0
         1 000034   200026 741300                    STX1  ! CNCTEV,,AUTO

      251     7434    2           CNCTEV.WORD1.WSR = SS$->B$SS.ISR.WSR;

   7434  1 000035   000010 236300                    LDQ   ! 8,,PR0
         1 000036   000013 736200                    QLS   ! 11
         1 000037   200026 676300                    ERQ   ! CNCTEV,,AUTO
         1 000040   700000 376207                    ANQ   ! -32768,DL
         1 000041   200026 656300                    ERSQ  ! CNCTEV,,AUTO

      252     7435    2           CNCTEV.WORD1.PORT = S_PORTNR(S_PNO);

   7435  1 000042   000000 236210 xsym               LDQ   ! S_PORTNR,X0
         1 000043   000014 736200                    QLS   ! 12
         1 000044   200026 676300                    ERQ   ! CNCTEV,,AUTO
PL6.E3A0      #001=HFB$CONNECT File=HFB$FPR.:E05TSI                              TUE 07/29/97 22:22 Page:51   
         1 000045   070000 376207                    ANQ   ! 28672,DL
         1 000046   200026 656300                    ERSQ  ! CNCTEV,,AUTO

      253     7436    2           H_CNCTEVBF(H_CNCTEVX) = CNCTEV;

   7436  1 000047   000000 235200 xsym               LDA   ! H_CNCTEVX
         1 000050   000001 735200                    ALS   ! 1
         1 000051   000000 622205                    EAX2  ! 0,AL
         1 000052   200026 237300                    LDAQ  ! CNCTEV,,AUTO
         1 000053   000000 757212 xsym               STAQ  ! H_CNCTEVBF,X2

      254     7437    2           H_CNCTEVX = H_CNCTEVX + 1;

   7437  1 000054   000000 054200 xsym               AOS   ! H_CNCTEVX

      255     7438    2           IF H_CNCTEVX >= 16 THEN H_CNCTEVX = 0;

   7438  1 000055   000000 235200 xsym               LDA   ! H_CNCTEVX
         1 000056   000020 115207                    CMPA  ! 16,DL
         1 000057   000061 604200 1                  TMI   ! s:7439

   7438  1 000060   000000 450200 xsym               STZ   ! H_CNCTEVX

      256     7439    2           CALL HFC$RCW;

   7439  1 000061   000002 631600 xsym               EPPR1 ! B_VECTNIL+2
         1 000062   000000 701200 xent               TSX1  ! HFC$RCW
         1 000063   000000 011200                    NOP   ! 0

      257     7440                %UNLOCK (G#=H_CNCTEVGATE);

   7441  1 000064   000000 630600 2                  EPPR0 ! 0
         1 000065   000017 631600 xsym               EPPR1 ! B_VECTNIL+15
         1 000066   000000 701200 xent               TSX1  ! HFC$UNLOCK
         1 000067   000000 011200                    NOP   ! 0

      258     7443    2           CALL SSC$STOPPED;
PL6.E3A0      #001=HFB$CONNECT File=HFB$FPR.:E05TSI                              TUE 07/29/97 22:22 Page:52   

   7443  1 000070   000002 631600 xsym               EPPR1 ! B_VECTNIL+2
         1 000071   000000 701200 xent               TSX1  ! SSC$STOPPED
         1 000072   000000 011200                    NOP   ! 0

      259     7444    2           CALL SSS$CACHEBP;               /* BYPASS CACHE TO CHECK MAILBOX      */

   7444  1 000073   000002 631600 xsym               EPPR1 ! B_VECTNIL+2
         1 000074   000000 701200 xent               TSX1  ! SSS$CACHEBP
         1 000075   000000 011200                    NOP   ! 0

      260     7445    2           IF H_CNNCTMLBX.MAKE(S_PNO) THEN

   7445  1 000076   000000 720200 xsym               LXL0  ! S_PNO
         1 000077   000000 236210 xsym               LDQ   ! H_CNNCTMLBX,X0
         1 000100   000010 316207                    CANQ  ! 8,DL
         1 000101   000111 600200 1                  TZE   ! s:7450

      261     7446    3           DO;

      262     7447    3                CALL HFC$MAKECPU(0);       /* METAMORPHOSIS                      */

   7447  1 000102   000001 630600 2                  EPPR0 ! 1
         1 000103   000017 631600 xsym               EPPR1 ! B_VECTNIL+15
         1 000104   000000 701200 xent               TSX1  ! HFC$MAKECPU
         1 000105   000000 011200                    NOP   ! 0

      263     7448    3                CALL HFC$DIS;

   7448  1 000106   000002 631600 xsym               EPPR1 ! B_VECTNIL+2
         1 000107   000000 701200 xent               TSX1  ! HFC$DIS
         1 000110   000000 011200                    NOP   ! 0

      264     7449    3                END;

      265     7450    2           IF H_CNNCTMLBX.RELIEF(S_PNO) THEN

PL6.E3A0      #001=HFB$CONNECT File=HFB$FPR.:E05TSI                              TUE 07/29/97 22:22 Page:53   
   7450  1 000111   000000 720200 xsym               LXL0  ! S_PNO
         1 000112   000000 236210 xsym               LDQ   ! H_CNNCTMLBX,X0
         1 000113   000040 316207                    CANQ  ! 32,DL
         1 000114   000130 600200 1                  TZE   ! s:7459

      266     7451    3           DO;

      267     7452    3                H_CNNCTMLBX(S_PNO) = '0'B;

   7452  1 000115   000000 450210 xsym               STZ   ! H_CNNCTMLBX,X0

      268     7453    3                ACTION = RLIEF;

   7453  1 000116   000002 235207                    LDA   ! 2,DL
         1 000117   200004 470700                    LDP0  ! @ACTION,,AUTO
         1 000120   000000 755300                    STA   ! 0,,PR0

      269     7454    3                CALL SSS$CACHE;

   7454  1 000121   000002 631600 xsym               EPPR1 ! B_VECTNIL+2
         1 000122   000000 701200 xent               TSX1  ! SSS$CACHE
         1 000123   000000 011200                    NOP   ! 0

      270     7455    3                CALL SSC$SASYNC;

   7455  1 000124   000002 631600 xsym               EPPR1 ! B_VECTNIL+2
         1 000125   000000 701200 xent               TSX1  ! SSC$SASYNC
         1 000126   000000 011200                    NOP   ! 0

      271     7456    3                RETURN;

   7456  1 000127   000000 702200 xent               TSX2  ! X66_ARET

      272     7457    3                END;
      273     7458                %LOCK (G#=DUMGATE);             /* LOCK GATE IN AUTO TO DISABLE       */

   7459  1 000130   200044 630700                    EPPR0 ! MISCDESC,,AUTO
PL6.E3A0      #001=HFB$CONNECT File=HFB$FPR.:E05TSI                              TUE 07/29/97 22:22 Page:54   
         1 000131   200054 450700                    STP0  ! FCODE+3,,AUTO
         1 000132   200054 630700                    EPPR0 ! FCODE+3,,AUTO
         1 000133   000017 631600 xsym               EPPR1 ! B_VECTNIL+15
         1 000134   000000 701200 xent               TSX1  ! HFC$LOCK
         1 000135   000000 011200                    NOP   ! 0

      274     7461    2           END;                            /* END INHIBIT                        */

      275     7462    1      IF H_CNNCTMLBX.TIME(S_PNO) THEN

   7462  1 000136   000000 720000 xsym               LXL0    S_PNO
         1 000137   000000 236010 xsym               LDQ     H_CNNCTMLBX,X0
         1 000140   000004 316007                    CANQ    4,DL
         1 000141   000150 600000 1                  TZE     s:7467

      276     7463    2      DO;

      277     7464    2           CALL HFC$DIS;                   /* WAIT FOR HIM TO SET CLOCK          */

   7464  1 000142   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 000143   000000 701000 xent               TSX1    HFC$DIS
         1 000144   000000 011000                    NOP     0

      278     7465    2           CALL SSS$UPDITIME;              /* UPDATE OUR INTERVAL BEGIN TIME     */

   7465  1 000145   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 000146   000000 701000 xent               TSX1    SSS$UPDITIME
         1 000147   000000 011000                    NOP     0

      279     7466    2           END;

      280     7467    1      IF H_CNNCTMLBX.SCR(S_PNO) THEN

   7467  1 000150   000000 720000 xsym               LXL0    S_PNO
         1 000151   000000 236010 xsym               LDQ     H_CNNCTMLBX,X0
         1 000152   000002 316007                    CANQ    2,DL
         1 000153   000167 600000 1                  TZE     s:7475
PL6.E3A0      #001=HFB$CONNECT File=HFB$FPR.:E05TSI                              TUE 07/29/97 22:22 Page:55   

      281     7468    2      DO;

      282     7469    2           S_MPSTATE(S_PNO)=2;             /* SHOW PROCESSOR RUNNING             */

   7469  1 000154   000002 235007                    LDA     2,DL
         1 000155   000000 755010 xsym               STA     S_MPSTATE,X0

      283     7470    2           IF S_PNO = 0 THEN

   7470  1 000156   000000 235000 xsym               LDA     S_PNO
         1 000157   000164 601000 1                  TNZ     s:7473

      284     7471    2                CALL IRM$REBOOT;           /* GO TO AARDVARK IF MASTER           */

   7471  1 000160   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 000161   000000 701000 xent               TSX1    IRM$REBOOT
         1 000162   000000 011000                    NOP     0
         1 000163   000167 710000 1                  TRA     s:7475

      285     7472    2           ELSE
      286     7473    2                CALL SSS$STOP;             /* STOP IF SLAVE                      */

   7473  1 000164   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 000165   000000 701000 xent               TSX1    SSS$STOP
         1 000166   000000 011000                    NOP     0

      287     7474    2           END;

      288     7475    1      IF H_CNNCTMLBX.CLEAR(S_PNO)

   7475  1 000167   000000 720000 xsym               LXL0    S_PNO
         1 000170   000000 236010 xsym               LDQ     H_CNNCTMLBX,X0
         1 000171   000020 316007                    CANQ    16,DL
         1 000172   000203 600000 1                  TZE     s:7481

      289     7476    2      THEN DO;
PL6.E3A0      #001=HFB$CONNECT File=HFB$FPR.:E05TSI                              TUE 07/29/97 22:22 Page:56   

      290     7477    2           CALL HFC$CACHECLR;

   7477  1 000173   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 000174   000000 701000 xent               TSX1    HFC$CACHECLR
         1 000175   000000 011000                    NOP     0

      291     7478    2           CALL HFC$ASSOCCLR;

   7478  1 000176   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 000177   000000 701000 xent               TSX1    HFC$ASSOCCLR
         1 000200   000000 011000                    NOP     0

      292     7479    2           H_CNNCTMLBX(S_PNO) = '0'B;

   7479  1 000201   000000 720000 xsym               LXL0    S_PNO
         1 000202   000000 450010 xsym               STZ     H_CNNCTMLBX,X0

      293     7480    2           END;

      294     7481    1      IF H_CNNCTMLBX.PAUSE(S_PNO) THEN

   7481  1 000203   000000 236010 xsym               LDQ     H_CNNCTMLBX,X0
         1 000204   000001 316007                    CANQ    1,DL
         1 000205   000211 600000 1                  TZE     s:7485

      295     7482    2      DO;

      296     7483    2           CALL HFC$DIS;                   /* WAIT FOR NEXT CONNECT FAULT        */

   7483  1 000206   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 000207   000000 701000 xent               TSX1    HFC$DIS
         1 000210   000000 011000                    NOP     0

      297     7484    2           END;

      298     7485    1      IF STIMR >= 2 THEN
PL6.E3A0      #001=HFB$CONNECT File=HFB$FPR.:E05TSI                              TUE 07/29/97 22:22 Page:57   

   7485  1 000211   200030 235100                    LDA     IC,,AUTO
         1 000212   000002 115007                    CMPA    2,DL
         1 000213   000220 602000 1                  TNC     s:7488

      299     7486    1           ACTION=CNCFLT;                  /* RETURN TO MON EXECUTION            */

   7486  1 000214   000001 236007                    LDQ     1,DL
         1 000215   200004 470500                    LDP0    @ACTION,,AUTO
         1 000216   000000 756100                    STQ     0,,PR0
         1 000217   000223 710000 1                  TRA     s:7489

      300     7487    1      ELSE
      301     7488    1           ACTION=SEXIT;                   /* RETURN TO USER OR SERVICE          */

   7488  1 000220   000003 236007                    LDQ     3,DL
         1 000221   200004 470500                    LDP0    @ACTION,,AUTO
         1 000222   000000 756100                    STQ     0,,PR0

      302     7489    1      CALL SSS$CACHE;

   7489  1 000223   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 000224   000000 701000 xent               TSX1    SSS$CACHE
         1 000225   000000 011000                    NOP     0

      303     7490           %UNLOCK (G#=DUMGATE);                /* UNLOCK (ENABLE)                    */

   7491  1 000226   200044 630500                    EPPR0   MISCDESC,,AUTO
         1 000227   200054 450500                    STP0    FCODE+3,,AUTO
         1 000230   200054 630500                    EPPR0   FCODE+3,,AUTO
         1 000231   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000232   000000 701000 xent               TSX1    HFC$UNLOCK
         1 000233   000000 011000                    NOP     0

      304     7493    1      CALL SSC$SASYNC;

   7493  1 000234   000002 631400 xsym               EPPR1   B_VECTNIL+2
PL6.E3A0      #001=HFB$CONNECT File=HFB$FPR.:E05TSI                              TUE 07/29/97 22:22 Page:58   
         1 000235   000000 701000 xent               TSX1    SSC$SASYNC
         1 000236   000000 011000                    NOP     0

      305     7494    1      RETURN;

   7494  1 000237   000000 702200 xent               TSX2  ! X66_ARET

      306     7495        %EJECT;
PL6.E3A0      #001=HFB$CONNECT File=HFB$FPR.:E05TSI                              TUE 07/29/97 22:22 Page:59   
      307     7496        /*F* NAME:        HFB$VISIBLE
      308     7497             PURPOSE:     Process faults that are always user visible (e.g.
      309     7498                          illegal procedure faults).   */
      310     7499    1   HFB$VISIBLE:ENTRY(FINFO,ACTION,SCODE,MAGICS);

   7499  1 000240   000000 700200 xent  HFB$VISIBLE  TSX0  ! X66_AUTO_4
         1 000241   000062 000004                    ZERO    50,4

      311     7500    1      CALL VISIBLE_;

   7500  1 000242   001143 701000 1                  TSX1    VISIBLE_
         1 000243   000000 011000                    NOP     0

      312     7501    1      RETURN;

   7501  1 000244   000000 702200 xent               TSX2  ! X66_ARET

      313     7502        %EJECT;
PL6.E3A0      #001=HFB$CONNECT File=HFB$FPR.:E05TSI                              TUE 07/29/97 22:22 Page:60   
      314     7503        /*F* NAME:        HFB$MSF
      315     7504             PURPOSE:     Process missing segment faults.  */
      316     7505        /*D* NAME:        HFB$MSF
      317     7506             DESCRIPTION: For missing segment faults that occur on
      318     7507                          instructions in the monitor with comgroup ASR
      319     7508                          provided that the effective WSQ# for the fault
      320     7509                          indicates %CGWSQ, refresh any descriptor registers
      321     7510                          that are ASR relative by bypassing cache
      322     7511                          Otherwise, process as a user visible fault.     */
      323     7512    1   HFB$MSF:ENTRY(FINFO,ACTION,SCODE,MAGICS);

   7512  1 000245   000000 700200 xent  HFB$MSF      TSX0  ! X66_AUTO_4
         1 000246   000062 000004                    ZERO    50,4

      324     7513    1      IF SS$->B$SS.ASR.WSR = %CGWSR

   7513  1 000247   000000 470400 xsym               LDP0    B_MPT
         1 000250   000012 236100                    LDQ     10,,PR0
         1 000251   000160 376007                    ANQ     112,DL
         1 000252   000060 116007                    CMPQ    48,DL
         1 000253   000410 601000 1                  TNZ     s:7544
         1 000254   000010 236100                    LDQ     8,,PR0
         1 000255   000160 316007                    CANQ    112,DL
         1 000256   000410 601000 1                  TNZ     s:7544
         1 000257   000006 236100                    LDQ     6,,PR0
         1 000260   000777 376007                    ANQ     511,DL
         1 000261   000014 116007                    CMPQ    12,DL
         1 000262   000410 601000 1                  TNZ     s:7544
         1 000263   000012 236100                    LDQ     10,,PR0
         1 000264   000024 736000                    QLS     20
         1 000265   777000 376003                    ANQ     -512,DU
         1 000266   002000 376003                    ANQ     1024,DU
         1 000267   000410 600000 1                  TZE     s:7544
         1 000270   000012 236100                    LDQ     10,,PR0
         1 000271   000024 736000                    QLS     20
         1 000272   777000 376003                    ANQ     -512,DU
         1 000273   001000 376003                    ANQ     512,DU
PL6.E3A0      #001=HFB$CONNECT File=HFB$FPR.:E05TSI                              TUE 07/29/97 22:22 Page:61   
         1 000274   000410 600000 1                  TZE     s:7544

      325     7514    1        AND SS$->B$SS.ISR.WSR = %MONWSR
      326     7515    1        AND SS$->B$SS.EWSQ# = %CGWSQ
      327     7516    1        AND SS$->B$SS.ASR.FLAGS & %DSNULL
      328     7517    1        AND SS$->B$SS.ASR.FLAGS & %DSPRESNT
      329     7518    2      THEN DO;

      330     7519    2           MISCDESC = SS$->B$SS.ASR;

   7519  1 000275   000012 237100                    LDAQ    10,,PR0
         1 000276   200044 757100                    STAQ    MISCDESC,,AUTO

      331     7520    2           P$ = ADDR(MISCDESC);

   7520  1 000277   200044 631500                    EPPR1   MISCDESC,,AUTO
         1 000300   200042 451500                    STP1    P$,,AUTO

      332     7521    2           P$->B$$DESCR.TYP = 0;

   7521  1 000301   000002 236000 2                  LDQ     2
         1 000302   100000 356100                    ANSQ    0,,PR1

      333     7522    2           P$->B$$DESCR.FLGS = P$->B$$DESCR.FLGS & ~%DSCACHE;

   7522  1 000303   100000 236100                    LDQ     0,,PR1
         1 000304   000024 736000                    QLS     20
         1 000305   777000 376003                    ANQ     -512,DU
         1 000306   737000 376003                    ANQ     -16896,DU
         1 000307   000024 772000                    QRL     20
         1 000310   100000 676100                    ERQ     0,,PR1
         1 000311   177600 376007                    ANQ     65408,DL
         1 000312   100000 656100                    ERSQ    0,,PR1

      334     7523    2           B$LS$->B$MLS.MAGICAS = MISCDESC;

   7523  1 000313   200044 237100                    LDAQ    MISCDESC,,AUTO
PL6.E3A0      #001=HFB$CONNECT File=HFB$FPR.:E05TSI                              TUE 07/29/97 22:22 Page:62   
         1 000314   000000 470400 xsym               LDP0    B$LS$
         1 000315   000356 757100                    STAQ    238,,PR0

      335     7524    2           FOUND = '0'B;

   7524  1 000316   200041 450100                    STZ     FOUND,,AUTO

      336     7525    3           DO I = 0 TO 7;

   7525  1 000317   200037 450100                    STZ     I,,AUTO

      337     7526    3                IF SS$->HFB$SS.PRN.S(I) = '10'B

   7526  1 000320   000000 470400 xsym               LDP0    B_MPT
         1 000321   200037 720100                    LXL0    I,,AUTO
         1 000322   000020 236110                    LDQ     16,X0,PR0
         1 000323   006000 376007                    ANQ     3072,DL
         1 000324   004000 116007                    CMPQ    2048,DL
         1 000325   000366 601000 1                  TNZ     s:7534
         1 000326   200037 235100                    LDA     I,,AUTO
         1 000327   000001 735000                    ALS     1
         1 000330   000030 236105                    LDQ     24,AL,PR0
         1 000331   000024 736000                    QLS     20
         1 000332   777000 376003                    ANQ     -512,DU
         1 000333   001000 376003                    ANQ     512,DU
         1 000334   000366 601000 1                  TNZ     s:7534
         1 000335   000020 236110                    LDQ     16,X0,PR0
         1 000336   000003 736000                    QLS     3
         1 000337   017770 376007                    ANQ     8184,DL
         1 000340   000007 036007                    ADLQ    7,DL
         1 000341   200054 756100                    STQ     FCODE+3,,AUTO
         1 000342   000012 236100                    LDQ     10,,PR0
         1 000343   000020 772000                    QRL     16
         1 000344   200054 116100                    CMPQ    FCODE+3,,AUTO
         1 000345   000366 604000 1                  TMI     s:7534

      338     7527    3                  AND NOT SS$->HFB$SS.DRN.FLAGS(I) & %DSPRESNT
PL6.E3A0      #001=HFB$CONNECT File=HFB$FPR.:E05TSI                              TUE 07/29/97 22:22 Page:63   
      339     7528    3                  AND SS$->B$SS.ASR.BOUND+1 >= (SS$->HFB$SS.PRN.D(I)+1)*8
      340     7529    4                THEN DO;

      341     7530    4                     SS$->HFB$SS.DRN(I) = B_MPT.AS$->DESCR(SS$->HFB$SS.PRN.D(I));

   7530  1 000346   000020 721110                    LXL1    16,X0,PR0
         1 000347   001777 361003                    ANX1    1023,DU
         1 000350   000000 636011                    EAQ     0,X1
         1 000351   000021 772000                    QRL     17
         1 000352   000002 471400 xsym               LDP1    B_MPT+2
         1 000353   000000 622005                    EAX2    0,AL
         1 000354   100000 237106                    LDAQ    0,QL,PR1
         1 000355   000030 757112                    STAQ    24,X2,PR0

      342     7531    4                     IF SS$->HFB$SS.DRN.FLAGS(I) & %DSPRESNT

   7531  1 000356   000000 470400 xsym               LDP0    B_MPT
         1 000357   000030 236112                    LDQ     24,X2,PR0
         1 000360   000024 736000                    QLS     20
         1 000361   777000 376003                    ANQ     -512,DU
         1 000362   001000 376003                    ANQ     512,DU
         1 000363   000366 600000 1                  TZE     s:7534

      343     7532    4                     THEN FOUND = '1'B;

   7532  1 000364   400000 236003                    LDQ     -131072,DU
         1 000365   200041 756100                    STQ     FOUND,,AUTO

      344     7533    4                     END;

      345     7534    3                END;                       /* DO I = 0 TO 7                      */

   7534  1 000366   200037 054100                    AOS     I,,AUTO
         1 000367   200037 235100                    LDA     I,,AUTO
         1 000370   000007 115007                    CMPA    7,DL
         1 000371   000320 604400 1                  TMOZ    s:7526

PL6.E3A0      #001=HFB$CONNECT File=HFB$FPR.:E05TSI                              TUE 07/29/97 22:22 Page:64   
      346     7535    2           IF FOUND

   7535  1 000372   200041 234100                    SZN     FOUND,,AUTO
         1 000373   000410 605000 1                  TPL     s:7544

      347     7536    3           THEN DO;

      348     7537    3                CALL ICFIX;

   7537  1 000374   002017 701000 1                  TSX1    ICFIX
         1 000375   000000 011000                    NOP     0

      349     7538    3                SS$->B$SS.IR.MIR = '0'B;

   7538  1 000376   000000 470400 xsym               LDP0    B_MPT
         1 000377   000003 236000 2                  LDQ     3
         1 000400   000004 356100                    ANSQ    4,,PR0

      350     7539    3                ACTION = CNCFLT;

   7539  1 000401   000001 235007                    LDA     1,DL
         1 000402   200004 471500                    LDP1    @ACTION,,AUTO
         1 000403   100000 755100                    STA     0,,PR1

      351     7540    3                CALL HFC$CACHECLR;

   7540  1 000404   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 000405   000000 701000 xent               TSX1    HFC$CACHECLR
         1 000406   000000 011000                    NOP     0

      352     7541    3                RETURN;

   7541  1 000407   000000 702200 xent               TSX2  ! X66_ARET

      353     7542    3                END;
      354     7543    2           END;
      355     7544    1      CALL VISIBLE_;
PL6.E3A0      #001=HFB$CONNECT File=HFB$FPR.:E05TSI                              TUE 07/29/97 22:22 Page:65   

   7544  1 000410   001143 701000 1                  TSX1    VISIBLE_
         1 000411   000000 011000                    NOP     0

      356     7545    1      RETURN;

   7545  1 000412   000000 702200 xent               TSX2  ! X66_ARET

      357     7546        %EJECT;
PL6.E3A0      #001=HFB$CONNECT File=HFB$FPR.:E05TSI                              TUE 07/29/97 22:22 Page:66   
      358     7547        /*F* NAME:        HFB$STR
      359     7548             PURPOSE:     Process STR (Memory) faults.  */
      360     7549        /*D* NAME:        HFB$STR
      361     7550             DESCRIPTION: The STR fault is considered a hardware error if the
      362     7551                          non-existent address bit in the fault register is
      363     7552                          set or if any of the system control unit port
      364     7553                          illegal action codes are non-zero.  Otherwise the
      365     7554                          STR fault is processed as a user visible fault.  */
      366     7555    1   HFB$STR:ENTRY(FINFO,ACTION,SCODE,MAGICS);

   7555  1 000413   000000 700200 xent  HFB$STR      TSX0  ! X66_AUTO_4
         1 000414   000062 000004                    ZERO    50,4

      367     7556    2      IF S_PTYPE(S_PNO) = %DPS8000 THEN DO;

   7556  1 000415   000000 720000 xsym               LXL0    S_PNO
         1 000416   000000 235010 xsym               LDA     S_PTYPE,X0
         1 000417   000006 115007                    CMPA    6,DL
         1 000420   000446 601000 1                  TNZ     s:7565

      368     7557    2           IF (FINFO.FLTREG.MEM_ILL_ACT.PORT_A ~=0 AND

   7557  1 000421   200003 470500                    LDP0    @FINFO,,AUTO
         1 000422   000001 236100                    LDQ     1,,PR0
         1 000423   000004 316000 2                  CANQ    4
         1 000424   000431 600000 1                  TZE     s:7557+8
         1 000425   000001 236100                    LDQ     1,,PR0
         1 000426   000004 376000 2                  ANQ     4
         1 000427   400000 116007                    CMPQ    -131072,DL
         1 000430   000440 601000 1                  TNZ     s:7561
         1 000431   000001 236100                    LDQ     1,,PR0
         1 000432   170000 316007                    CANQ    61440,DL
         1 000433   000443 600000 1                  TZE     s:7562
         1 000434   000001 236100                    LDQ     1,,PR0
         1 000435   170000 376007                    ANQ     61440,DL
         1 000436   020000 116007                    CMPQ    8192,DL
         1 000437   000443 600000 1                  TZE     s:7562
PL6.E3A0      #001=HFB$CONNECT File=HFB$FPR.:E05TSI                              TUE 07/29/97 22:22 Page:67   

      369     7558    2             FINFO.FLTREG.MEM_ILL_ACT.PORT_A ~=2)
      370     7559    2             OR (FINFO.FLTREG.MEM_ILL_ACT.PORT_B ~=0 AND
      371     7560    2             FINFO.FLTREG.MEM_ILL_ACT.PORT_B ~=2)
      372     7561    2           THEN CALL SYSERR ;

   7561  1 000440   001516 701000 1                  TSX1    SYSERR
         1 000441   000000 011000                    NOP     0
         1 000442   000475 710000 1                  TRA     s:7573

      373     7562    2           ELSE CALL VISIBLE;

   7562  1 000443   001145 701000 1                  TSX1    VISIBLE
         1 000444   000000 011000                    NOP     0

      374     7563    2           END;

   7563  1 000445   000475 710000 1                  TRA     s:7573

      375     7564    2      ELSE DO;

      376     7565    2           IF (FINFO.FLTREG.STR_NEA='1'B AND S_PTYPE(S_PNO)~=%ELS1)

   7565  1 000446   200003 470500                    LDP0    @FINFO,,AUTO
         1 000447   000001 236100                    LDQ     1,,PR0
         1 000450   020000 316003                    CANQ    8192,DU
         1 000451   000454 600000 1                  TZE     s:7565+6
         1 000452   000002 115007                    CMPA    2,DL
         1 000453   000470 601000 1                  TNZ     s:7570
         1 000454   000004 316000 2                  CANQ    4
         1 000455   000470 601000 1                  TNZ     s:7570
         1 000456   170000 316007                    CANQ    61440,DL
         1 000457   000470 601000 1                  TNZ     s:7570
         1 000460   007400 316007                    CANQ    3840,DL
         1 000461   000464 600000 1                  TZE     s:7565+14
         1 000462   000002 115007                    CMPA    2,DL
         1 000463   000470 601000 1                  TNZ     s:7570
PL6.E3A0      #001=HFB$CONNECT File=HFB$FPR.:E05TSI                              TUE 07/29/97 22:22 Page:68   
         1 000464   000360 316007                    CANQ    240,DL
         1 000465   000473 600000 1                  TZE     s:7571
         1 000466   000002 115007                    CMPA    2,DL
         1 000467   000473 600000 1                  TZE     s:7571

      377     7566    2             OR FINFO.FLTREG.MEM_ILL_ACT.PORT_A~=0
      378     7567    2             OR FINFO.FLTREG.MEM_ILL_ACT.PORT_B~=0
      379     7568    2             OR (FINFO.FLTREG.MEM_ILL_ACT.PORT_C~=0 AND S_PTYPE(S_PNO)~=%ELS1)
      380     7569    2             OR (FINFO.FLTREG.MEM_ILL_ACT.PORT_D~=0 AND S_PTYPE(S_PNO)~=%ELS1)
      381     7570    2           THEN CALL SYSERR;

   7570  1 000470   001516 701000 1                  TSX1    SYSERR
         1 000471   000000 011000                    NOP     0
         1 000472   000475 710000 1                  TRA     s:7573

      382     7571    2           ELSE CALL VISIBLE;

   7571  1 000473   001145 701000 1                  TSX1    VISIBLE
         1 000474   000000 011000                    NOP     0

      383     7572    2           END;

      384     7573    1      RETURN;

   7573  1 000475   000000 702200 xent               TSX2  ! X66_ARET

      385     7574        %EJECT;
PL6.E3A0      #001=HFB$CONNECT File=HFB$FPR.:E05TSI                              TUE 07/29/97 22:22 Page:69   
      386     7575        /*F* NAME:        HFB$CMD
      387     7576             PURPOSE:     Process command faults.  */
      388     7577        /*D* NAME:        HFB$CMD
      389     7578             DESCRIPTION: A command fault is processed as a user visible fault
      390     7579                          if the illegal slave procedure bit in the fault
      391     7580                          register is set (%L66 and %DPSE) or if all system
      392     7581                          controller unit port illegal action codes are
      393     7582                          zero (ELS) or if any system control unit port
      394     7583                          illegal action code is '1010'B (illegal system
      395     7584                          control command received).  This last case can be
      396     7585                          caused by a user executing an RSCR instruction in
      397     7586                          slave mode to read the real-time clock directed to
      398     7587                          the upper store unit on a system controller.
      399     7588                          Otherwise the command fault is processed as a
      400     7589                          hardware error.   */
      401     7590    1   HFB$CMD:ENTRY(FINFO,ACTION,SCODE,MAGICS);

   7590  1 000476   000000 700200 xent  HFB$CMD      TSX0  ! X66_AUTO_4
         1 000477   000062 000004                    ZERO    50,4

      402     7591    1      IF (S_PTYPE(S_PNO) = %DPS8000) THEN

   7591  1 000500   000000 720000 xsym               LXL0    S_PNO
         1 000501   000000 235010 xsym               LDA     S_PTYPE,X0
         1 000502   000006 115007                    CMPA    6,DL
         1 000503   000507 601000 1                  TNZ     s:7594

      403     7592    1           CALL SYSERR;

   7592  1 000504   001516 701000 1                  TSX1    SYSERR
         1 000505   000000 011000                    NOP     0
         1 000506   000556 710000 1                  TRA     s:7604

      404     7593    2      ELSE DO;

      405     7594    2           IF (FINFO.FLTREG.CMD_SLAVE AND S_PTYPE(S_PNO)~=%ELS1)

PL6.E3A0      #001=HFB$CONNECT File=HFB$FPR.:E05TSI                              TUE 07/29/97 22:22 Page:70   
   7594  1 000507   200003 470500                    LDP0    @FINFO,,AUTO
         1 000510   000001 236100                    LDQ     1,,PR0
         1 000511   100000 316003                    CANQ    32768,DU
         1 000512   000515 600000 1                  TZE     s:7594+6
         1 000513   000002 115007                    CMPA    2,DL
         1 000514   000551 601000 1                  TNZ     s:7601
         1 000515   000005 316000 2                  CANQ    5
         1 000516   000521 601000 1                  TNZ     s:7594+10
         1 000517   000002 115007                    CMPA    2,DL
         1 000520   000551 601000 1                  TNZ     s:7601
         1 000521   000006 316000 2                  CANQ    6
         1 000522   000525 601000 1                  TNZ     s:7594+14
         1 000523   000002 115007                    CMPA    2,DL
         1 000524   000551 600000 1                  TZE     s:7601
         1 000525   000001 236100                    LDQ     1,,PR0
         1 000526   000004 376000 2                  ANQ     4
         1 000527   000007 116000 2                  CMPQ    7
         1 000530   000551 600000 1                  TZE     s:7601
         1 000531   000001 236100                    LDQ     1,,PR0
         1 000532   170000 376007                    ANQ     61440,DL
         1 000533   120000 116007                    CMPQ    40960,DL
         1 000534   000551 600000 1                  TZE     s:7601
         1 000535   000001 236100                    LDQ     1,,PR0
         1 000536   007400 376007                    ANQ     3840,DL
         1 000537   005000 116007                    CMPQ    2560,DL
         1 000540   000543 601000 1                  TNZ     s:7594+28
         1 000541   000002 115007                    CMPA    2,DL
         1 000542   000551 601000 1                  TNZ     s:7601
         1 000543   000001 236100                    LDQ     1,,PR0
         1 000544   000360 376007                    ANQ     240,DL
         1 000545   000240 116007                    CMPQ    160,DL
         1 000546   000554 601000 1                  TNZ     s:7602
         1 000547   000002 115007                    CMPA    2,DL
         1 000550   000554 600000 1                  TZE     s:7602

      406     7595    2             OR (FINFO.FLTREG.MEM_ILL_ACT='0'B AND S_PTYPE(S_PNO)~=%ELS1)
      407     7596    2             OR (FINFO.FLTREG.MEM_ILL_ACT_ELS.PORT_AB='0'B AND S_PTYPE(S_PNO)=%ELS1)
PL6.E3A0      #001=HFB$CONNECT File=HFB$FPR.:E05TSI                              TUE 07/29/97 22:22 Page:71   
      408     7597    2             OR FINFO.FLTREG.MEM_ILL_ACT.PORT_A=10
      409     7598    2             OR FINFO.FLTREG.MEM_ILL_ACT.PORT_B=10
      410     7599    2             OR (FINFO.FLTREG.MEM_ILL_ACT.PORT_C=10 AND S_PTYPE(S_PNO)~=%ELS1)
      411     7600    2             OR (FINFO.FLTREG.MEM_ILL_ACT.PORT_D=10 AND S_PTYPE(S_PNO)~=%ELS1)
      412     7601    2           THEN CALL VISIBLE;

   7601  1 000551   001145 701000 1                  TSX1    VISIBLE
         1 000552   000000 011000                    NOP     0
         1 000553   000556 710000 1                  TRA     s:7604

      413     7602    2           ELSE CALL SYSERR;

   7602  1 000554   001516 701000 1                  TSX1    SYSERR
         1 000555   000000 011000                    NOP     0

      414     7603    2           END;

      415     7604    1      RETURN;

   7604  1 000556   000000 702200 xent               TSX2  ! X66_ARET

      416     7605        %EJECT;
PL6.E3A0      #001=HFB$CONNECT File=HFB$FPR.:E05TSI                              TUE 07/29/97 22:22 Page:72   
      417     7606        /*F* NAME:        HFB$MPF
      418     7607             PURPOSE:     Process missing page faults.  */
      419     7608        /*D* NAME:        HFB$MPF
      420     7609             DESCRIPTION: If the relative virtual address in the safe-store
      421     7610                          frame is pointing at the top of the users HJIT, then
      422     7611                          the user is aborted due to the overflow of the
      423     7612                          argument/parameter stack.  If the fault is in the
      424     7613                          user ISR and is one of the working space quarters
      425     7614                          used for large virtual arrays, control is returned
      426     7615                          to memory management to get the requested page.
      427     7616                          Otherwise the missing page fault is processed
      428     7617                          as a user visible fault.                        */
      429     7618    1   HFB$MPF:ENTRY(FINFO,ACTION,SCODE,MAGICS);

   7618  1 000557   000000 700200 xent  HFB$MPF      TSX0  ! X66_AUTO_4
         1 000560   000062 000004                    ZERO    50,4

      430     7619    2      DO INHIBIT;

      431     7620    2           IF (SS$->B$SS.EWSQ# >= %VS1WSQ

   7620  1 000561   000000 470600 xsym               LDP0  ! B_MPT
         1 000562   000006 236300                    LDQ   ! 6,,PR0
         1 000563   000777 376207                    ANQ   ! 511,DL
         1 000564   000011 116207                    CMPQ  ! 9,DL
         1 000565   000576 602200 1                  TNC   ! s:7628
         1 000566   000014 116207                    CMPQ  ! 12,DL
         1 000567   000576 603200 1                  TRC   ! s:7628

      432     7621    2             AND SS$->B$SS.EWSQ# <= %VS3WSQ)
      433     7622    3           THEN DO;

      434     7623    3   PGEFLTACT:   CALL ICFIX;

   7623  1 000570   002017 701200 1     PGEFLTACT    TSX1  ! ICFIX
         1 000571   000000 011200                    NOP   ! 0

PL6.E3A0      #001=HFB$CONNECT File=HFB$FPR.:E05TSI                              TUE 07/29/97 22:22 Page:73   
      435     7624    3                ACTION = PGEFLT;

   7624  1 000572   000004 235207                    LDA   ! 4,DL
         1 000573   200004 470700                    LDP0  ! @ACTION,,AUTO
         1 000574   000000 755300                    STA   ! 0,,PR0

      436     7625    3                RETURN;

   7625  1 000575   000000 702200 xent               TSX2  ! X66_ARET

      437     7626    3                END;
      438     7627
      439     7628    2           IF SS$->B$SS.RVA >= %MAXJIT AND SS$->B$SS.RVA < %MAXJIT + 4096

   7628  1 000576   000007 235300                    LDA   ! 7,,PR0
         1 000577   140000 115207                    CMPA  ! 49152,DL
         1 000600   000707 602200 1                  TNC   ! s:7656
         1 000601   150000 115207                    CMPA  ! 53248,DL
         1 000602   000707 603200 1                  TRC   ! s:7656

      440     7629    3           THEN DO;                        /* TSTACK overflow, get another page. */

      441     7630    3                S_TIMR_SAV = S_TIMR;       /* save previous S_TIMR value         */

   7630  1 000603   000000 235200 xsym               LDA   ! S_TIMR
         1 000604   200036 755300                    STA   ! S_TIMR_SAV,,AUTO

      442     7631    3                CALL SSC$SASYNC;           /* first, get into monitor mode       */

   7631  1 000605   000002 631600 xsym               EPPR1 ! B_VECTNIL+2
         1 000606   000000 701200 xent               TSX1  ! SSC$SASYNC
         1 000607   000000 011200                    NOP   ! 0

      443     7632    4                DO UNINHIBIT; /* now we can be interrupted since we're monitor   */

      444     7633    4                     CALL MMB$GPP (ACTION , %MONWSQ);

PL6.E3A0      #001=HFB$CONNECT File=HFB$FPR.:E05TSI                              TUE 07/29/97 22:22 Page:74   
   7633  1 000610   000010 236000 2                  LDQ     8
         1 000611   200004 235100                    LDA     @ACTION,,AUTO
         1 000612   200054 757100                    STAQ    FCODE+3,,AUTO
         1 000613   200054 630500                    EPPR0   FCODE+3,,AUTO
         1 000614   000020 631400 xsym               EPPR1   B_VECTNIL+16
         1 000615   000000 701000 xent               TSX1    MMB$GPP
         1 000616   000000 011000                    NOP     0

      445     7634    4                     IF ACTION ~= 0

   7634  1 000617   200004 470500                    LDP0    @ACTION,,AUTO
         1 000620   000000 235100                    LDA     0,,PR0
         1 000621   000675 600000 1                  TZE     s:7651

      446     7635    5                     THEN DO;

      447     7636    5                          B$PPUT$ -> MM$PPUT(ACTION) = '0'B;

   7636  1 000622   000000 720100                    LXL0    0,,PR0
         1 000623   000000 471400 xsym               LDP1    B$PPUT$
         1 000624   100000 450110                    STZ     0,X0,PR1

      448     7637    5                          B$PPUT$ -> MM$PPUT.USER(ACTION) = '1'B;

   7637  1 000625   000000 235100                    LDA     0,,PR0
         1 000626   000000 471400 xsym               LDP1    B$PPUT$
         1 000627   020000 236003                    LDQ     8192,DU
         1 000630   100000 256105                    ORSQ    0,AL,PR1

      449     7638    5                          B$PPUT$ -> MM$PPUT.USER#(ACTION) = S_CUN;

   7638  1 000631   000000 235100                    LDA     0,,PR0
         1 000632   000000 471400 xsym               LDP1    B$PPUT$
         1 000633   000000 236000 xsym               LDQ     S_CUN
         1 000634   000022 736000                    QLS     18
         1 000635   100000 676105                    ERQ     0,AL,PR1
         1 000636   000777 376003                    ANQ     511,DU
PL6.E3A0      #001=HFB$CONNECT File=HFB$FPR.:E05TSI                              TUE 07/29/97 22:22 Page:75   
         1 000637   100000 656105                    ERSQ    0,AL,PR1

      450     7639    5                          B$JIT.PCC = B$JIT.PCC + 1;

   7639  1 000640   000000 471400 xsym               LDP1    B$JIT$
         1 000641   100202 720100                    LXL0    130,,PR1
         1 000642   000001 621010                    EAX1    1,X0
         1 000643   100202 441100                    SXL1    130,,PR1

      451     7640    5                          B$JIT.PPC = B$JIT.PPC + 1;

   7640  1 000644   100207 720100                    LXL0    135,,PR1
         1 000645   000001 622010                    EAX2    1,X0
         1 000646   100207 442100                    SXL2    135,,PR1

      452     7641    5                          S$CU$ -> B$U.PCT = B$JIT.PPC;

   7641  1 000647   000000 473400 xsym               LDP3    S$CU$
         1 000650   300010 742100                    STX2    8,,PR3

      453     7642    5                          B$UPT$ -> B$MAP (%AJITPG) = B$UPT$ -> B$MAP (%JITPG);

   7642  1 000651   000000 474400 xsym               LDP4    B$UPT$
         1 000652   400013 236100                    LDQ     11,,PR4
         1 000653   400014 756100                    STQ     12,,PR4

      454     7643                               %MAP (P$ = B$UPT$ , VPNO = "%AJITPG" , PPNO = ACTION);

   7644  1 000654   000000 234000 xsym               SZN     HW_WSQ0PT
         1 000655   000663 605000 1                  TPL     s:7644+7

   7644  1 000656   000000 720100                    LXL0    0,,PR0
         1 000657   000000 475400 xsym               LDP5    B$WSQ0PT$
         1 000660   500000 221110                    LDX1    0,X0,PR5
         1 000661   400014 741100                    STX1    12,,PR4
         1 000662   000665 710000 1                  TRA     s:7646

PL6.E3A0      #001=HFB$CONNECT File=HFB$FPR.:E05TSI                              TUE 07/29/97 22:22 Page:76   
   7644  1 000663   000000 720100                    LXL0    0,,PR0
         1 000664   400014 740100                    STX0    12,,PR4

      455     7646    5                          CALL ICFIX;

   7646  1 000665   002017 701000 1                  TSX1    ICFIX
         1 000666   000000 011000                    NOP     0

      456     7647    5                          ACTION = CNCFLT;

   7647  1 000667   000001 235007                    LDA     1,DL
         1 000670   200004 470500                    LDP0    @ACTION,,AUTO
         1 000671   000000 755100                    STA     0,,PR0

      457     7648    5                          SS$->B$SS.IR.MIR = '0'B;

   7648  1 000672   000000 471400 xsym               LDP1    B_MPT
         1 000673   000003 236000 2                  LDQ     3
         1 000674   100004 356100                    ANSQ    4,,PR1

      458     7649    5                          END;

      459     7650    4                     END;

      460     7651    3                CALL SSC$STIMR( S_TIMR_SAV); /* return back to previous state    */

   7651  1 000675   200036 631700                    EPPR1 ! S_TIMR_SAV,,AUTO
         1 000676   200054 451700                    STP1  ! FCODE+3,,AUTO
         1 000677   200054 630700                    EPPR0 ! FCODE+3,,AUTO
         1 000700   000017 631600 xsym               EPPR1 ! B_VECTNIL+15
         1 000701   000000 701200 xent               TSX1  ! SSC$STIMR
         1 000702   000000 011200                    NOP   ! 0

      461     7652    3                IF ACTION ~= 0 THEN RETURN;

   7652  1 000703   200004 470700                    LDP0  ! @ACTION,,AUTO
         1 000704   000000 235300                    LDA   ! 0,,PR0
PL6.E3A0      #001=HFB$CONNECT File=HFB$FPR.:E05TSI                              TUE 07/29/97 22:22 Page:77   
         1 000705   000707 600200 1                  TZE   ! s:7656

   7652  1 000706   000000 702200 xent               TSX2  ! X66_ARET

      462     7653    3                END;
      463     7654    2           END;

      464     7655
      465     7656    2      IF (SS$->B$SS.EWSQ#=%USERWSQ AND SS$->B$SS.RVA >= DS_BASE %) THEN DO;

   7656  1 000707   000000 470400 xsym               LDP0    B_MPT
         1 000710   000006 236100                    LDQ     6,,PR0
         1 000711   000777 376007                    ANQ     511,DL
         1 000712   000010 116007                    CMPQ    8,DL
         1 000713   000763 601000 1                  TNZ     s:7669
         1 000714   000007 235100                    LDA     7,,PR0
         1 000715   000011 115000 2                  CMPA    9
         1 000716   000763 602000 1                  TNC     s:7669

      466     7657    2           IF NOT (H_S1000_FLG | H_RPM_FLG) THEN GOTO PGEFLTACT;

   7657  1 000717   000000 236000 xsym               LDQ     H_RPM_FLG
         1 000720   400000 376003                    ANQ     -131072,DU
         1 000721   200054 756100                    STQ     FCODE+3,,AUTO
         1 000722   000000 236000 xsym               LDQ     H_S1000_FLG
         1 000723   400000 376003                    ANQ     -131072,DU
         1 000724   200054 276100                    ORQ     FCODE+3,,AUTO
         1 000725   000570 600000 1                  TZE     PGEFLTACT

      467     7658    3           DO I = 7 DOWNTO 0;

   7658  1 000726   000007 235007                    LDA     7,DL
         1 000727   200037 755100                    STA     I,,AUTO

      468     7659    3                P$=PINCRW(ADDR(B$USERLS$->B$ULNK.DS1), I*2);

   7659  1 000730   200037 236100                    LDQ     I,,AUTO
PL6.E3A0      #001=HFB$CONNECT File=HFB$FPR.:E05TSI                              TUE 07/29/97 22:22 Page:78   
         1 000731   000023 736000                    QLS     19
         1 000732   000010 036003                    ADLQ    8,DU
         1 000733   000000 036000 xsym               ADLQ    B$USERLS$
         1 000734   200042 756100                    STQ     P$,,AUTO

      469     7660    4                IF P$->B$$DESCR.FLGS & %DSNULL THEN DO;

   7660  1 000735   200042 470500                    LDP0    P$,,AUTO
         1 000736   000000 236100                    LDQ     0,,PR0
         1 000737   000024 736000                    QLS     20
         1 000740   777000 376003                    ANQ     -512,DU
         1 000741   002000 376003                    ANQ     1024,DU
         1 000742   000757 600000 1                  TZE     s:7666

      470     7661    4                     IF (P$->B$$DESCR.BASE+P$->B$$DESCR.BOUND)/4096 >= SS$->B$SS.RVA/
              7661                              4096 THEN

   7661  1 000743   000000 236100                    LDQ     0,,PR0
         1 000744   000020 772000                    QRL     16
         1 000745   000001 036100                    ADLQ    1,,PR0
         1 000746   010000 506007                    DIV     4096,DL
         1 000747   000000 471400 xsym               LDP1    B_MPT
         1 000750   200054 756100                    STQ     FCODE+3,,AUTO
         1 000751   100007 236100                    LDQ     7,,PR1
         1 000752   000014 772000                    QRL     12
         1 000753   000756 604000 1                  TMI     s:7664
         1 000754   200054 116100                    CMPQ    FCODE+3,,AUTO
         1 000755   000570 604400 1                  TMOZ    PGEFLTACT

      471     7662    4                          GOTO PGEFLTACT;
      472     7663    4                     ELSE
      473     7664    4                          GOTO MPFVIS;

   7664  1 000756   001032 710000 1                  TRA     MPFVIS

      474     7665    4                     END;
      475     7666    3                END;
PL6.E3A0      #001=HFB$CONNECT File=HFB$FPR.:E05TSI                              TUE 07/29/97 22:22 Page:79   

   7666  1 000757   000001 336007                    LCQ     1,DL
         1 000760   200037 056100                    ASQ     I,,AUTO
         1 000761   000730 605000 1                  TPL     s:7659

      476     7667    2           GOTO MPFVIS;

   7667  1 000762   001032 710000 1                  TRA     MPFVIS

      477     7668    2           END;
      478     7669    1      IF SS$->B$SS.RVA = %MAXHJIT

   7669  1 000763   000007 235100                    LDA     7,,PR0
         1 000764   160000 115007                    CMPA    57344,DL
         1 000765   001032 601000 1                  TNZ     MPFVIS

      479     7670    2      THEN DO;

      480     7671    2           CALL ICFIX;

   7671  1 000766   002017 701000 1                  TSX1    ICFIX
         1 000767   000000 011000                    NOP     0

      481     7672    2           B$JIT.ERR = EASF;

   7672  1 000770   000000 236000 0                  LDQ     EASF
         1 000771   000000 470400 xsym               LDP0    B$JIT$
         1 000772   000012 756100                    STQ     10,,PR0

      482     7673    2           IF SS$->B$SS.ISR.WSR ~= %MONWSR THEN

   7673  1 000773   000000 471400 xsym               LDP1    B_MPT
         1 000774   100010 236100                    LDQ     8,,PR1
         1 000775   000160 316007                    CANQ    112,DL
         1 000776   001003 600000 1                  TZE     s:7677

      483     7674
PL6.E3A0      #001=HFB$CONNECT File=HFB$FPR.:E05TSI                              TUE 07/29/97 22:22 Page:80   
      484     7675    2                ACTION=ABORTM;

   7675  1 000777   000005 235007                    LDA     5,DL
         1 001000   200004 473500                    LDP3    @ACTION,,AUTO
         1 001001   300000 755100                    STA     0,,PR3
         1 001002   001026 710000 1                  TRA     s:7683

      485     7676    3           ELSE DO;

      486     7677    3                IF B_MPT.SSDESC$->B$$DESCR.WSR = %MONWSR OR S_TIMR>=2 THEN

   7677  1 001003   000006 473400 xsym               LDP3    B_MPT+6
         1 001004   300000 236100                    LDQ     0,,PR3
         1 001005   000160 316007                    CANQ    112,DL
         1 001006   001012 600000 1                  TZE     s:7678
         1 001007   000000 235000 xsym               LDA     S_TIMR
         1 001010   000002 115007                    CMPA    2,DL
         1 001011   001016 602000 1                  TNC     s:7680

      487     7678    3                     SCODE.SEV=7;

   7678  1 001012   200005 474500                    LDP4    @SCODE,,AUTO
         1 001013   000007 236007                    LDQ     7,DL
         1 001014   400000 256100                    ORSQ    0,,PR4
         1 001015   001023 710000 1                  TRA     s:7681

      488     7679    3                ELSE
      489     7680    3                     SCODE.SEV=6;

   7680  1 001016   200005 474500                    LDP4    @SCODE,,AUTO
         1 001017   400000 236100                    LDQ     0,,PR4
         1 001020   000012 376000 2                  ANQ     10
         1 001021   000006 276007                    ORQ     6,DL
         1 001022   400000 756100                    STQ     0,,PR4

      490     7681    3                ACTION = SCREECH;

PL6.E3A0      #001=HFB$CONNECT File=HFB$FPR.:E05TSI                              TUE 07/29/97 22:22 Page:81   
   7681  1 001023   000007 235007                    LDA     7,DL
         1 001024   200004 470500                    LDP0    @ACTION,,AUTO
         1 001025   000000 755100                    STA     0,,PR0

      491     7682    3                END;

      492     7683    2           CALL JSS$FIXLASR;

   7683  1 001026   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 001027   000000 701000 xent               TSX1    JSS$FIXLASR
         1 001030   000000 011000                    NOP     0

      493     7684    2           RETURN;

   7684  1 001031   000000 702200 xent               TSX2  ! X66_ARET

      494     7685    2           END;
      495     7686    1   MPFVIS:
      496     7687    1      CALL VISIBLE;

   7687  1 001032   001145 701000 1     MPFVIS       TSX1    VISIBLE
         1 001033   000000 011000                    NOP     0

      497     7688    1      RETURN;

   7688  1 001034   000000 702200 xent               TSX2  ! X66_ARET

      498     7689        /*E*  ERROR:  -E$ASF-A
      499     7690              MESSAGE: Your Argument/Parameter Stack is full.
      500     7691        */
      501     7692        /*E*  ERROR: HFB-E$ASF-A
      502     7693              MESSAGE: Your Argument/Parameter Stack is full.
      503     7694              MESSAGE1: A Missing Page fault occurred while
      504     7695                        accessing the Argument/Parameter Stack.
      505     7696        */
      506     7697        %EJECT;
PL6.E3A0      #001=HFB$CONNECT File=HFB$FPR.:E05TSI                              TUE 07/29/97 22:22 Page:82   
      507     7698        /*F* NAME:        HFB$HDWR
      508     7699             PURPOSE:     Process faults that are always hardware errors (e.g.
      509     7700                          operation-not-complete faults).   */
      510     7701    1   HFB$HDWR:ENTRY(FINFO,ACTION,SCODE,MAGICS);

   7701  1 001035   000000 700200 xent  HFB$HDWR     TSX0  ! X66_AUTO_4
         1 001036   000062 000004                    ZERO    50,4

      511     7702    1      CALL SYSERR;

   7702  1 001037   001516 701000 1                  TSX1    SYSERR
         1 001040   000000 011000                    NOP     0

      512     7703    1      IF SS$->B$FLT.SSFRAME.FCODE = %FLT_PRTY#

   7703  1 001041   000000 470400 xsym               LDP0    B_MPT
         1 001042   000005 236100                    LDQ     5,,PR0
         1 001043   000076 376003                    ANQ     62,DU
         1 001044   000022 116003                    CMPQ    18,DU
         1 001045   001135 601000 1                  TNZ     s:7727
         1 001046   000010 236100                    LDQ     8,,PR0
         1 001047   000160 316007                    CANQ    112,DL
         1 001050   001135 601000 1                  TNZ     s:7727
         1 001051   000000 720000 xsym               LXL0    S_PNO
         1 001052   000000 235010 xsym               LDA     S_PTYPE,X0
         1 001053   001135 601000 1                  TNZ     s:7727
         1 001054   000000 235000 xsym               LDA     S_RETRY
         1 001055   001135 604000 1                  TMI     s:7727
         1 001056   000005 115007                    CMPA    5,DL
         1 001057   001135 605000 1                  TPL     s:7727
         1 001060   200003 471500                    LDP1    @FINFO,,AUTO
         1 001061   100001 236100                    LDQ     1,,PR1
         1 001062   000004 376000 2                  ANQ     4
         1 001063   000013 116000 2                  CMPQ    11
         1 001064   001101 600000 1                  TZE     s:7713
         1 001065   100001 236100                    LDQ     1,,PR1
         1 001066   170000 376007                    ANQ     61440,DL
PL6.E3A0      #001=HFB$CONNECT File=HFB$FPR.:E05TSI                              TUE 07/29/97 22:22 Page:83   
         1 001067   150000 116007                    CMPQ    53248,DL
         1 001070   001101 600000 1                  TZE     s:7713
         1 001071   100001 236100                    LDQ     1,,PR1
         1 001072   007400 376007                    ANQ     3840,DL
         1 001073   006400 116007                    CMPQ    3328,DL
         1 001074   001101 600000 1                  TZE     s:7713
         1 001075   100001 236100                    LDQ     1,,PR1
         1 001076   000360 376007                    ANQ     240,DL
         1 001077   000320 116007                    CMPQ    208,DL
         1 001100   001135 601000 1                  TNZ     s:7727

      513     7704    1        AND SS$->B$SS.ISR.WSR = %MONWSR
      514     7705    1        AND S_PTYPE(S_PNO) = %L66
      515     7706    1        AND S_RETRY >= 0
      516     7707    1        AND S_RETRY < 5
      517     7708    1        AND (FINFO.FLTREG.MEM_ILL_ACT.PORT_A = 13
      518     7709    1        OR FINFO.FLTREG.MEM_ILL_ACT.PORT_B = 13
      519     7710    1        OR FINFO.FLTREG.MEM_ILL_ACT.PORT_C = 13
      520     7711    1        OR FINFO.FLTREG.MEM_ILL_ACT.PORT_D = 13)
      521     7712    2      THEN DO INHIBIT;

      522     7713    2           MISCDESC = B$LS$->B$MLS.MISC;

   7713  1 001101   000000 473600 xsym               LDP3  ! B$LS$
         1 001102   300130 237300                    LDAQ  ! 88,,PR3
         1 001103   200044 757300                    STAQ  ! MISCDESC,,AUTO

      523     7714    2           B$LS$->B$MLS.MISC = SS$->B$SS.ISR;

   7714  1 001104   000010 237300                    LDAQ  ! 8,,PR0
         1 001105   300130 757300                    STAQ  ! 88,,PR3

      524     7715    3           DO I = 0 TO 3;

   7715  1 001106   200037 450300                    STZ   ! I,,AUTO

      525     7716    3                INST = BINBIT(PINCRW(B$MISC$,SS$->B$SS.IC-I)->FAULTING_INST,36);
PL6.E3A0      #001=HFB$CONNECT File=HFB$FPR.:E05TSI                              TUE 07/29/97 22:22 Page:84   

   7716  1 001107   000000 470600 xsym               LDP0  ! B_MPT
         1 001110   000004 236300                    LDQ   ! 4,,PR0
         1 001111   000022 772200                    QRL   ! 18
         1 001112   200037 136300                    SBLQ  ! I,,AUTO
         1 001113   000000 471600 xsym               LDP1  ! B$MISC$
         1 001114   100000 236306                    LDQ   ! 0,QL,PR1
         1 001115   200040 756300                    STQ   ! INST,,AUTO

      526     7717    3                IF INST.OP_CODE = '4520'O  /* SCPR                               */

   7717  1 001116   777400 376207                    ANQ   ! -256,DL
         1 001117   452000 116207                    CMPQ  ! -109568,DL
         1 001120   001126 601200 1                  TNZ   ! s:7723

      527     7718    4                THEN DO;

      528     7719    4                     S_RETRY = S_RETRY+1;

   7719  1 001121   000000 054200 xsym               AOS   ! S_RETRY

      529     7720    4                     ACTION = CNCFLT;

   7720  1 001122   000001 235207                    LDA   ! 1,DL
         1 001123   200004 473700                    LDP3  ! @ACTION,,AUTO
         1 001124   300000 755300                    STA   ! 0,,PR3

      530     7721    4                     GOTO PRTY_EXIT;

   7721  1 001125   001132 710200 1                  TRA   ! PRTY_EXIT

      531     7722    4                     END;
      532     7723    3                END;

   7723  1 001126   200037 054300                    AOS   ! I,,AUTO
         1 001127   200037 235300                    LDA   ! I,,AUTO
         1 001130   000003 115207                    CMPA  ! 3,DL
PL6.E3A0      #001=HFB$CONNECT File=HFB$FPR.:E05TSI                              TUE 07/29/97 22:22 Page:85   
         1 001131   001107 604600 1                  TMOZ  ! s:7716

      533     7724    2   PRTY_EXIT:
      534     7725    2           B$LS$->B$MLS.MISC = MISCDESC;

   7725  1 001132   200044 237300       PRTY_EXIT    LDAQ  ! MISCDESC,,AUTO
         1 001133   000000 470600 xsym               LDP0  ! B$LS$
         1 001134   000130 757300                    STAQ  ! 88,,PR0

      535     7726    2           END;                            /* INHIBIT                            */

      536     7727    1      RETURN;

   7727  1 001135   000000 702200 xent               TSX2  ! X66_ARET

      537     7728        %EJECT;
PL6.E3A0      #001=HFB$CONNECT File=HFB$FPR.:E05TSI                              TUE 07/29/97 22:22 Page:86   
      538     7729        /*F* NAME:        HFB$ERRORLOG
      539     7730             PURPOSE:     Create a processor error log entry to record events
      540     7731                          other than hardware faults.   */
      541     7732    1   HFB$ERRORLOG:ENTRY;

   7732  1 001136   000000 700200 xent  HFB$ERRORLOG TSX0  ! X66_AUTO_4
         1 001137   000062 000004                    ZERO    50,4

      542     7733    1      CALL HDWRLOG;

   7733  1 001140   001661 701000 1                  TSX1    HDWRLOG
         1 001141   000000 011000                    NOP     0

      543     7734    1      RETURN;

   7734  1 001142   000000 702200 xent               TSX2  ! X66_ARET

      544     7735        %EJECT;
PL6.E3A0      #001=HFB$CONNECT File=HFB$FPR.:E05TSI                              TUE 07/29/97 22:22 Page:87   
      545     7736        /*D* NAME:        HFB$FPR
      546     7737             DESCRIPTION: The following is an overview of user visible fault
      547     7738                          processing:
      548     7739
      549     7740                          If the fault occurred in a user program and the user
      550     7741                          was running under user DELTA, we return to HFA$FAULT
      551     7742                          with action set to DELTAGO.
      552     7743
      553     7744                          If the fault occurred in the monitor while processing
      554     7745                          a user PMME (using user safe-store) and the fault
      555     7746                          type was STR, IPR, MISSING SEGMENT, MISSING PAGE, or
      556     7747                          SECURITY CLASS 2; we call UDE$FPTCHK to determine if
      557     7748                          the fault was caused by a bad PMME parameter.  If the
      558     7749                          fault was caused by a bad PMME parameter, UDE$FPTCHK
      559     7750                          ALTRETs back to the user.  If the fault was not
      560     7751                          caused by a bad PMME parameter, UDE$FPTCHK causes a
      561     7752                          SUA level SCREECH.  If the fault occurred while
      562     7753                          processing a user PMME and the fault type was other
      563     7754                          than those listed above, we return to HFA$FAULT with
      564     7755                          action set to SCREECH and the severity level set
      565     7756                          to 6 (SUA).  If the fault occurred in the monitor
      566     7757                          while running for the monitor (using monitor
      567     7758                          safe-store), we return to HFA$FAULT with action set
      568     7759                          to SCREECH and the severity level set to 7 (full
      569     7760                          SCREECH).
      570     7761
      571     7762                          If the fault occurred in a user program and the user
      572     7763                          has requested trap control for this fault, the
      573     7764                          safe-store frame and the history registers (if
      574     7765                          requested) are transferred to the users TCB by
      575     7766                          SST$SSFTCB, and we return to HFA$FAULT with action
      576     7767                          set to SEXIT.  If the fault occurred in a user
      577     7768                          program and the user has not requested trap control
      578     7769                          for this fault, we return to HFA$FAULT with action
      579     7770                          set to ABORTM.   */
      580     7771    1   VISIBLE_:PROC;

PL6.E3A0      #001=HFB$CONNECT File=HFB$FPR.:E05TSI                              TUE 07/29/97 22:22 Page:88   
   7771  1 001143   200046 741300       VISIBLE_     STX1  ! MISCDESC+2,,AUTO

      581     7772    2   DCL FINDEX SBIN WORD;
      582     7773    2   DCL FTYPE UBIN(36);
      583     7774    2   DCL FCODE SBIN WORD;
      584     7775    2      GOTO CHECKED;

   7775  1 001144   001152 710000 1                  TRA     CHECKED

      585     7776    2   VISIBLE:ENTRY;

   7776  1 001145   200046 741300       VISIBLE      STX1  ! MISCDESC+2,,AUTO

      586     7777    2      IF ACTION < SCREECH

   7777  1 001146   200004 470500                    LDP0    @ACTION,,AUTO
         1 001147   000000 235100                    LDA     0,,PR0
         1 001150   000007 115007                    CMPA    7,DL
         1 001151   001514 605000 1                  TPL     s:7865

      587     7778    3      THEN DO;

   7778  1 001152                       CHECKED      null
      588     7779    3   CHECKED: ;
      589     7780    3           CALL ICFIX;

   7780  1 001152   002017 701000 1                  TSX1    ICFIX
         1 001153   000000 011000                    NOP     0

      590     7781    3           FCODE = SS$->B$SS.FC;

   7781  1 001154   000000 470400 xsym               LDP0    B_MPT
         1 001155   000005 236100                    LDQ     5,,PR0
         1 001156   000023 772000                    QRL     19
         1 001157   000037 376007                    ANQ     31,DL
         1 001160   200051 756100                    STQ     FCODE,,AUTO

PL6.E3A0      #001=HFB$CONNECT File=HFB$FPR.:E05TSI                              TUE 07/29/97 22:22 Page:89   
      591     7782    3           FINDEX = ECCB_FINDEX(FCODE);

   7782  1 001161   000004 235006 0                  LDA     ECCB_FINDEX,QL
         1 001162   200047 755100                    STA     FINDEX,,AUTO

      592     7783    3           FTYPE = ECCB_FTYPE(FCODE);

   7783  1 001163   200051 720100                    LXL0    FCODE,,AUTO
         1 001164   000032 235010 0                  LDA     ECCB_FTYPE,X0
         1 001165   200050 755100                    STA     FTYPE,,AUTO

      593     7784    3           FINFO.SUBCODE=ECCB_SUBC(FCODE);

   7784  1 001166   000060 721010 0                  LXL1    ECCB_SUBC,X0
         1 001167   200003 471500                    LDP1    @FINFO,,AUTO
         1 001170   100000 441100                    SXL1    0,,PR1

      594     7785    3           P# = FINFO.P#;

   7785  1 001171   100003 235100                    LDA     3,,PR1
         1 001172   200031 755100                    STA     P#,,AUTO

      595     7786    3           IF H_S1000_FLG THEN

   7786  1 001173   000000 234000 xsym               SZN     H_S1000_FLG
         1 001174   001226 605000 1                  TPL     s:7796

      596     7787    4                IF FCODE = 21 THEN DO;

   7787  1 001175   200051 236100                    LDQ     FCODE,,AUTO
         1 001176   000025 116007                    CMPQ    21,DL
         1 001177   001226 601000 1                  TNZ     s:7796

      597     7788    4                     MISCDESC = B$LS$->B$MLS.MAGICSS;

   7788  1 001200   000000 470400 xsym               LDP0    B$LS$
         1 001201   000352 237100                    LDAQ    234,,PR0
PL6.E3A0      #001=HFB$CONNECT File=HFB$FPR.:E05TSI                              TUE 07/29/97 22:22 Page:90   
         1 001202   200044 757100                    STAQ    MISCDESC,,AUTO

      598     7789    5                     IF MISCDESC_R.BASE = %SSS_BASE% THEN DO;

   7789  1 001203   200045 235100                    LDA     MISCDESC+1,,AUTO
         1 001204   152300 115007                    CMPA    54464,DL
         1 001205   001226 601000 1                  TNZ     s:7796

      599     7790    5                          PINCRW(SS$,20)->B$SS = SS$->B$SS;

   7790  1 001206   000000 473400 xsym               LDP3    B_MPT
         1 001207   000100 100500                    MLR     fill='000'O
         1 001210   300000 000400                    ADSC9   0,,PR3                   cn=0,n=256
         1 001211   300024 000400                    ADSC9   20,,PR3                  cn=0,n=256

      600     7791    5                          MISCDESC_R.BASE = MISCDESC_R.BASE + 64;

   7791  1 001212   200045 235100                    LDA     MISCDESC+1,,AUTO
         1 001213   000100 035007                    ADLA    64,DL
         1 001214   200045 755100                    STA     MISCDESC+1,,AUTO

      601     7792    5                          MISCDESC_R.BOUND = MISCDESC_R.BOUND - 16;

   7792  1 001215   200044 236100                    LDQ     MISCDESC,,AUTO
         1 001216   000020 772000                    QRL     16
         1 001217   000020 136007                    SBLQ    16,DL
         1 001220   000020 736000                    QLS     16
         1 001221   200044 676100                    ERQ     MISCDESC,,AUTO
         1 001222   000034 376000 xsym               ANQ     B_VECTNIL+28
         1 001223   200044 656100                    ERSQ    MISCDESC,,AUTO

      602     7793    5                          B$LS$->B$MLS.MAGICSS = MISCDESC;

   7793  1 001224   200044 237100                    LDAQ    MISCDESC,,AUTO
         1 001225   000352 757100                    STAQ    234,,PR0

      603     7794    5                          END;
PL6.E3A0      #001=HFB$CONNECT File=HFB$FPR.:E05TSI                              TUE 07/29/97 22:22 Page:91   

      604     7795    4                     END;

      605     7796    4           IF FCODE = 10 THEN DO;

   7796  1 001226   200051 235100                    LDA     FCODE,,AUTO
         1 001227   000012 115007                    CMPA    10,DL
         1 001230   001263 601000 1                  TNZ     s:7806

      606     7797    5                DO I = 0 TO 7;

   7797  1 001231   200037 450100                    STZ     I,,AUTO

      607     7798    5                     IF SS$->HFB$SS.DRN.TYPE(I) = 4

   7798  1 001232   200037 235100                    LDA     I,,AUTO
         1 001233   000001 735000                    ALS     1
         1 001234   000000 470400 xsym               LDP0    B_MPT
         1 001235   000030 236105                    LDQ     24,AL,PR0
         1 001236   000017 376007                    ANQ     15,DL
         1 001237   000004 116007                    CMPQ    4,DL
         1 001240   001257 601000 1                  TNZ     s:7804
         1 001241   000031 236105                    LDQ     25,AL,PR0
         1 001242   600000 376003                    ANQ     -65536,DU
         1 001243   600000 376003                    ANQ     -65536,DU
         1 001244   001257 600000 1                  TZE     s:7804

      608     7799    5                       AND (SS$->HFB$SS.DRN.BASE_R.BIT2(I) & '11'B) ~= '0'B
      609     7800    6                     THEN DO;

      610     7801    6                         SS$->HFB$SS.DRN.FLAGS(I) = SS$->HFB$SS.DRN.FLAGS(I) & '774'O;

   7801  1 001245   000030 236105                    LDQ     24,AL,PR0
         1 001246   000024 736000                    QLS     20
         1 001247   777000 376003                    ANQ     -512,DU
         1 001250   774000 376003                    ANQ     -2048,DU
         1 001251   000024 772000                    QRL     20
PL6.E3A0      #001=HFB$CONNECT File=HFB$FPR.:E05TSI                              TUE 07/29/97 22:22 Page:92   
         1 001252   000030 676105                    ERQ     24,AL,PR0
         1 001253   177600 376007                    ANQ     65408,DL
         1 001254   000030 656105                    ERSQ    24,AL,PR0

      611     7802    6                          SS$->HFB$SS.DRN.BASE(I) = 0;

   7802  1 001255   000000 470400 xsym               LDP0    B_MPT
         1 001256   000031 450105                    STZ     25,AL,PR0

      612     7803    6                          END;

      613     7804    5                     END;                  /* DO I = 0 TO 7                      */

   7804  1 001257   200037 054100                    AOS     I,,AUTO
         1 001260   200037 235100                    LDA     I,,AUTO
         1 001261   000007 115007                    CMPA    7,DL
         1 001262   001232 604400 1                  TMOZ    s:7798

      614     7805    4                END;

      615     7806    3           IF (FINDEX = 63) OR (FTYPE = 15)

   7806  1 001263   200047 235100                    LDA     FINDEX,,AUTO
         1 001264   000077 115007                    CMPA    63,DL
         1 001265   001271 600000 1                  TZE     s:7808
         1 001266   200050 236100                    LDQ     FTYPE,,AUTO
         1 001267   000017 116007                    CMPQ    15,DL
         1 001270   001273 601000 1                  TNZ     s:7814

      616     7807    4           THEN DO;

      617     7808    4                CALL SC_HFERR;

   7808  1 001271   000000 713400 xsym               CLIMB   SC_HFERR
         1 001272   000000 600000 xsid               climb   nvectors=         0

      618     7809        /*S*   SCREECH_CODE:   HFB-S$HFERROR
PL6.E3A0      #001=HFB$CONNECT File=HFB$FPR.:E05TSI                              TUE 07/29/97 22:22 Page:93   
      619     7810               TYPE:  SCREECH
      620     7811               MESSAGE:   Internal Fault Handler error
      621     7812        */
      622     7813    4                END;

      623     7814    3           IF B_MPT.ECCBDESC$->B$$DESCR.FLGS & %DSXXX

   7814  1 001273   000013 470400 xsym               LDP0    B_MPT+11
         1 001274   000000 236100                    LDQ     0,,PR0
         1 001275   000024 736000                    QLS     20
         1 001276   777000 376003                    ANQ     -512,DU
         1 001277   020000 376003                    ANQ     8192,DU
         1 001300   001326 601000 1                  TNZ     s:7823
         1 001301   000000 471400 xsym               LDP1    B_MPT
         1 001302   100010 236100                    LDQ     8,,PR1
         1 001303   000160 376007                    ANQ     112,DL
         1 001304   000140 116007                    CMPQ    96,DL
         1 001305   001347 601000 1                  TNZ     s:7830
         1 001306   000000 473400 xsym               LDP3    B$JIT$
         1 001307   300321 220100                    LDX0    209,,PR3
         1 001310   000001 360003                    ANX0    1,DU
         1 001311   001347 600000 1                  TZE     s:7830
         1 001312   100005 236100                    LDQ     5,,PR1
         1 001313   000076 376003                    ANQ     62,DU
         1 001314   000002 116003                    CMPQ    2,DU
         1 001315   001326 600000 1                  TZE     s:7823
         1 001316   100005 236100                    LDQ     5,,PR1
         1 001317   000076 376003                    ANQ     62,DU
         1 001320   000050 116003                    CMPQ    40,DU
         1 001321   001326 600000 1                  TZE     s:7823
         1 001322   100005 236100                    LDQ     5,,PR1
         1 001323   000076 376003                    ANQ     62,DU
         1 001324   000052 116003                    CMPQ    42,DU
         1 001325   001347 601000 1                  TNZ     s:7830

      624     7815                                                /* If a user running under DELTA      */
      625     7816    3             OR (    (SS$->B$SS.ISR.WSR = %ASLWSR)
PL6.E3A0      #001=HFB$CONNECT File=HFB$FPR.:E05TSI                              TUE 07/29/97 22:22 Page:94   
      626     7817    3             AND (B$JIT.JUNK2 & %JJ2_DBRK#)
      627     7818    3             AND (   SS$->B$FLT.SSFRAME.FCODE = %FLT_MEMORY#
      628     7819    3             OR SS$->B$FLT.SSFRAME.FCODE = %FLT_MPAGE#
      629     7820    3             OR SS$->B$FLT.SSFRAME.FCODE = %FLT_SEC2#)   )
      630     7821                            /* or possibly IDS stepping on a data breakpoint page     */
      631     7822    4           THEN DO;

      632     7823    4                B$JIT$->B$JIT.ERR = FINFO.JERR;

   7823  1 001326   200003 471500                    LDP1    @FINFO,,AUTO
         1 001327   100002 236100                    LDQ     2,,PR1
         1 001330   000000 473400 xsym               LDP3    B$JIT$
         1 001331   300012 756100                    STQ     10,,PR3

      633     7824    4                IF NOT ECCB$->B$ECCB.FLTFLG.HREG

   7824  1 001332   000005 470400 xsym               LDP0    B_MPT+5
         1 001333   000004 236100                    LDQ     4,,PR0
         1 001334   000001 316007                    CANQ    1,DL
         1 001335   001337 601000 1                  TNZ     s:7826

      634     7825    4                THEN FINFO.P#=0;

   7825  1 001336   100003 450100                    STZ     3,,PR1

      635     7826    4                ACTION = DELTAGO;

   7826  1 001337   000006 235007                    LDA     6,DL
         1 001340   200004 470500                    LDP0    @ACTION,,AUTO
         1 001341   000000 755100                    STA     0,,PR0

      636     7827    4                SCODE=BINBIT(FTYPE,36);

   7827  1 001342   200050 236100                    LDQ     FTYPE,,AUTO
         1 001343   200005 473500                    LDP3    @SCODE,,AUTO
         1 001344   300000 756100                    STQ     0,,PR3

PL6.E3A0      #001=HFB$CONNECT File=HFB$FPR.:E05TSI                              TUE 07/29/97 22:22 Page:95   
      637     7828    4                RETURN;

   7828  1 001345   200046 221300                    LDX1  ! MISCDESC+2,,AUTO
         1 001346   000001 702211                    TSX2  ! 1,X1

      638     7829    4                END;
      639     7830    3           ELSE IF ECCB$->B$ECCBI.FLAGS(FINDEX)

   7830  1 001347   200047 235100                    LDA     FINDEX,,AUTO
         1 001350   001352 605000 1                  TPL     s:7830+3
         1 001351   000044 035003                    ADLA    36,DU
         1 001352   000005 473400 xsym               LDP3    B_MPT+5
         1 001353   000000 066505                    CMPB    filb='0'B
         1 001354   300004 000001                    BDSC    4,A,PR3                  by=0,bit=0,n=1
         1 001355   000002 000022 xsym               BDSC    B_VECTNIL+2              by=0,bit=0,n=18
         1 001356   001453 600000 1                  TZE     TCB_FULL
         1 001357   200050 235100                    LDA     FTYPE,,AUTO
         1 001360   000000 066505                    CMPB    filb='0'B
         1 001361   300004 000001                    BDSC    4,A,PR3                  by=0,bit=0,n=1
         1 001362   000002 000022 xsym               BDSC    B_VECTNIL+2              by=0,bit=0,n=18
         1 001363   001453 600000 1                  TZE     TCB_FULL

      640     7831    3                  AND ECCB$->B$ECCBI.FLAGS(FTYPE)
      641     7832    4                THEN DO;

      642     7833    4                     IF (SS$->B$SS.ISR.WSR ~= %MONWSR) THEN

   7833  1 001364   100010 236100                    LDQ     8,,PR1
         1 001365   000160 316007                    CANQ    112,DL
         1 001366   001410 601000 1                  TNZ     MON_NOT_RUNNING

      643     7834    4                          GOTO MON_NOT_RUNNING;
      644     7835    4                     IF (B_MPT.SSDESC$->B$$DESCR.WSR = %MONWSR) THEN GOTO TCB_FULL;

   7835  1 001367   000006 474400 xsym               LDP4    B_MPT+6
         1 001370   400000 236100                    LDQ     0,,PR4
         1 001371   000160 316007                    CANQ    112,DL
PL6.E3A0      #001=HFB$CONNECT File=HFB$FPR.:E05TSI                              TUE 07/29/97 22:22 Page:96   
         1 001372   001453 600000 1                  TZE     TCB_FULL

      645     7836    5                     ELSE DO;

      646     7837    5                          SCODE.SEV=6;

   7837  1 001373   200005 475500                    LDP5    @SCODE,,AUTO
         1 001374   500000 236100                    LDQ     0,,PR5
         1 001375   000012 376000 2                  ANQ     10
         1 001376   000006 276007                    ORQ     6,DL
         1 001377   500000 756100                    STQ     0,,PR5

      647     7838    5                          CALL UDN$MGRES(MAGICS);

   7838  1 001400   200006 630500                    EPPR0   @MAGICS,,AUTO
         1 001401   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 001402   000000 701000 xent               TSX1    UDN$MGRES
         1 001403   000000 011000                    NOP     0

      648     7839    5                          CALL UDE$FPTCHK(SCODE);

   7839  1 001404   200005 630500                    EPPR0   @SCODE,,AUTO
         1 001405   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 001406   000000 701000 xent               TSX1    UDE$FPTCHK
         1 001407   000000 011000                    NOP     0

      649     7840                                                /* WILL NOT RETURN                    */
      650     7841    5                          END;

      651     7842    4   MON_NOT_RUNNING:
      652     7843    4                     B$JIT$->B$JIT.ERR = FINFO.JERR;

   7843  1 001410   200003 470500       MON_NOT_RUN* LDP0    @FINFO,,AUTO
         1 001411   000002 236100                    LDQ     2,,PR0
         1 001412   000000 471400 xsym               LDP1    B$JIT$
         1 001413   100012 756100                    STQ     10,,PR1

PL6.E3A0      #001=HFB$CONNECT File=HFB$FPR.:E05TSI                              TUE 07/29/97 22:22 Page:97   
      653     7844    4                     IF NOT ECCB$->B$ECCB.FLTFLG.HREG

   7844  1 001414   000005 473400 xsym               LDP3    B_MPT+5
         1 001415   300004 236100                    LDQ     4,,PR3
         1 001416   000001 316007                    CANQ    1,DL
         1 001417   001421 601000 1                  TNZ     s:7846

      654     7845    4                     THEN FINFO.P# = 0;

   7845  1 001420   000003 450100                    STZ     3,,PR0

      655     7846    4                     IC = ECCB$->B$ECCBI.ECIC(FTYPE);

   7846  1 001421   200050 235100                    LDA     FTYPE,,AUTO
         1 001422   000001 735000                    ALS     1
         1 001423   000005 473400 xsym               LDP3    B_MPT+5
         1 001424   000100 101505                    MRL     fill='000'O
         1 001425   300000 000002                    ADSC9   0,A,PR3                  cn=0,n=2
         1 001426   200030 000004                    ADSC9   IC,,AUTO                 cn=0,n=4

      656     7847    4                     ECC=FTYPE;

   7847  1 001427   200050 236100                    LDQ     FTYPE,,AUTO
         1 001430   200021 756100                    STQ     ECC,,AUTO

      657     7848    4                     CALL SST$SSFTCB(IC,ECC,FINFO,SS$,TCB$) ALTRET(TCB_FULL);

   7848  1 001431   000014 236000 2                  LDQ     12
         1 001432   200060 756100                    STQ     FCODE+7,,AUTO
         1 001433   000015 236000 2                  LDQ     13
         1 001434   200003 235100                    LDA     @FINFO,,AUTO
         1 001435   200056 757100                    STAQ    FCODE+5,,AUTO
         1 001436   200021 634500                    EPPR4   ECC,,AUTO
         1 001437   200055 454500                    STP4    FCODE+4,,AUTO
         1 001440   200030 635500                    EPPR5   IC,,AUTO
         1 001441   200054 455500                    STP5    FCODE+3,,AUTO
         1 001442   200054 630500                    EPPR0   FCODE+3,,AUTO
PL6.E3A0      #001=HFB$CONNECT File=HFB$FPR.:E05TSI                              TUE 07/29/97 22:22 Page:98   
         1 001443   000023 631400 xsym               EPPR1   B_VECTNIL+19
         1 001444   000000 701000 xent               TSX1    SST$SSFTCB
         1 001445   001453 702000 1                  TSX2    TCB_FULL

      658     7849    4                     ACTION = SEXIT;

   7849  1 001446   000003 235007                    LDA     3,DL
         1 001447   200004 470500                    LDP0    @ACTION,,AUTO
         1 001450   000000 755100                    STA     0,,PR0

      659     7850    4                     RETURN;

   7850  1 001451   200046 221300                    LDX1  ! MISCDESC+2,,AUTO
         1 001452   000001 702211                    TSX2  ! 1,X1

   7848  1 001453                       TCB_FULL     null
      660     7851    4                     END;
      661     7852        /* FAULTING DOMAIN NOT TO GET CONTROL */
      662     7853    3   TCB_FULL: ;
      663     7854    3           B$JIT$->B$JIT.ERR = FINFO.JERR;

   7854  1 001453   200003 470500                    LDP0    @FINFO,,AUTO
         1 001454   000002 236100                    LDQ     2,,PR0
         1 001455   000000 471400 xsym               LDP1    B$JIT$
         1 001456   100012 756100                    STQ     10,,PR1

      664     7855    3           FINFO.P# = P#;

   7855  1 001457   200031 235100                    LDA     P#,,AUTO
         1 001460   000003 755100                    STA     3,,PR0

      665     7856    3           IF SS$->B$SS.ISR.WSR ~= %MONWSR

   7856  1 001461   000000 473400 xsym               LDP3    B_MPT
         1 001462   300010 236100                    LDQ     8,,PR3
         1 001463   000160 316007                    CANQ    112,DL
         1 001464   001471 600000 1                  TZE     s:7859
PL6.E3A0      #001=HFB$CONNECT File=HFB$FPR.:E05TSI                              TUE 07/29/97 22:22 Page:99   

      666     7857    3           THEN ACTION = ABORTM;

   7857  1 001465   000005 235007                    LDA     5,DL
         1 001466   200004 474500                    LDP4    @ACTION,,AUTO
         1 001467   400000 755100                    STA     0,,PR4
         1 001470   001514 710000 1                  TRA     s:7865

      667     7858    4           ELSE DO;

      668     7859    4                IF B_MPT.SSDESC$->B$$DESCR.WSR = %MONWSR OR S_TIMR >= 2

   7859  1 001471   000006 474400 xsym               LDP4    B_MPT+6
         1 001472   400000 236100                    LDQ     0,,PR4
         1 001473   000160 316007                    CANQ    112,DL
         1 001474   001500 600000 1                  TZE     s:7860
         1 001475   000000 235000 xsym               LDA     S_TIMR
         1 001476   000002 115007                    CMPA    2,DL
         1 001477   001504 602000 1                  TNC     s:7861

      669     7860    4                THEN SCODE.SEV=7;

   7860  1 001500   200005 475500                    LDP5    @SCODE,,AUTO
         1 001501   000007 236007                    LDQ     7,DL
         1 001502   500000 256100                    ORSQ    0,,PR5
         1 001503   001511 710000 1                  TRA     s:7862

      670     7861    4                ELSE SCODE.SEV=6;

   7861  1 001504   200005 475500                    LDP5    @SCODE,,AUTO
         1 001505   500000 236100                    LDQ     0,,PR5
         1 001506   000012 376000 2                  ANQ     10
         1 001507   000006 276007                    ORQ     6,DL
         1 001510   500000 756100                    STQ     0,,PR5

      671     7862    4                ACTION = SCREECH;

PL6.E3A0      #001=HFB$CONNECT File=HFB$FPR.:E05TSI                              TUE 07/29/97 22:22 Page:100  
   7862  1 001511   000007 235007                    LDA     7,DL
         1 001512   200004 471500                    LDP1    @ACTION,,AUTO
         1 001513   100000 755100                    STA     0,,PR1

      672     7863    4                END;

      673     7864    3           END;

      674     7865    2   END VISIBLE_;

   7865  1 001514   200046 221300                    LDX1  ! MISCDESC+2,,AUTO
         1 001515   000001 702211                    TSX2  ! 1,X1

      675     7866        %EJECT;
PL6.E3A0      #001=HFB$CONNECT File=HFB$FPR.:E05TSI                              TUE 07/29/97 22:22 Page:101  
      676     7867        /*D* NAME:        HFB$FPR
      677     7868             DESCRIPTION: The following is an overview of processing for
      678     7869                          faults which are treated as hardware errors:
      679     7870
      680     7871                          A processor error (PROCERR) error log entry is
      681     7872                          created for all faults which are treated as hardware
      682     7873                          errors.
      683     7874
      684     7875                          If the fault occurred in a user program and the user
      685     7876                          has requested trap control for this fault (available
      686     7877                          only to users with T&D privilege), the safe-store
      687     7878                          frame and the history registers (if requested) are
      688     7879                          transferred to the users TCB by SST$SSFTCB, and we
      689     7880                          return to HFA$FAULT with action set to SEXIT.  If
      690     7881                          the fault occurred in a user program and the user
      691     7882                          has not requested trap control for this fault, we
      692     7883                          return to HFA$FAULT with action set to ABORTM.
      693     7884
      694     7885                          If the fault occurred in the monitor while processing
      695     7886                          a user PMME (using user safe-store), we return to
      696     7887                          HFA$FAULT with action set to SCREECH and severity
      697     7888                          level set to 6 (SUA).  If the fault occurred in the
      698     7889                          monitor while running for the monitor (using monitor
      699     7890                          safe-store), we return to HFA$FAULT with action set
      700     7891                          to SCREECH and severity level set to 7 (full
      701     7892                          SCREECH).  */
      702     7893    1   SYSERR: PROC;

   7893  1 001516   200046 741300       SYSERR       STX1  ! MISCDESC+2,,AUTO

      703     7894    2      P# = FINFO.P#;

   7894  1 001517   200003 470500                    LDP0    @FINFO,,AUTO
         1 001520   000003 235100                    LDA     3,,PR0
         1 001521   200031 755100                    STA     P#,,AUTO

      704     7895    2      CALL ICFIX;
PL6.E3A0      #001=HFB$CONNECT File=HFB$FPR.:E05TSI                              TUE 07/29/97 22:22 Page:102  

   7895  1 001522   002017 701000 1                  TSX1    ICFIX
         1 001523   000000 011000                    NOP     0

      705     7896    2      CALL HDWRLOG;                        /* LOG THE ERROR                      */

   7896  1 001524   001661 701000 1                  TSX1    HDWRLOG
         1 001525   000000 011000                    NOP     0

      706     7897    2      IF ECCB$->B$ECCB.FLTFLG.HDWR

   7897  1 001526   000005 470400 xsym               LDP0    B_MPT+5
         1 001527   000004 236100                    LDQ     4,,PR0
         1 001530   000002 316007                    CANQ    2,DL
         1 001531   001605 600000 1                  TZE     TCBFULL
         1 001532   002000 316003                    CANQ    1024,DU
         1 001533   001605 600000 1                  TZE     TCBFULL

      707     7898    2        AND ECCB$->B$ECCB.FLAGS.ERRSET
      708     7899    3      THEN DO;                        /* T&D USER HAS REQUESTED TRAP CONTROL     */

      709     7900    3           ACTION = SEXIT;

   7900  1 001534   000003 235007                    LDA     3,DL
         1 001535   200004 471500                    LDP1    @ACTION,,AUTO
         1 001536   100000 755100                    STA     0,,PR1

      710     7901    3           IF NOT ECCB$->B$ECCB.FLTFLG.HREG

   7901  1 001537   000005 470400 xsym               LDP0    B_MPT+5
         1 001540   000004 236100                    LDQ     4,,PR0
         1 001541   000001 316007                    CANQ    1,DL
         1 001542   001545 601000 1                  TNZ     s:7903

      711     7902    3           THEN FINFO.P#=0;

   7902  1 001543   200003 473500                    LDP3    @FINFO,,AUTO
PL6.E3A0      #001=HFB$CONNECT File=HFB$FPR.:E05TSI                              TUE 07/29/97 22:22 Page:103  
         1 001544   300003 450100                    STZ     3,,PR3

      712     7903    3           IC = ECCB$->B$ECCB.ERR;

   7903  1 001545   000005 470400 xsym               LDP0    B_MPT+5
         1 001546   000003 236100                    LDQ     3,,PR0
         1 001547   777777 376007                    ANQ     -1,DL
         1 001550   200030 756100                    STQ     IC,,AUTO

      713     7904    3           ECC=7;

   7904  1 001551   000007 235007                    LDA     7,DL
         1 001552   200021 755100                    STA     ECC,,AUTO

      714     7905    3           FINFO.SUBCODE=ECCB_SUBC(SS$->B$SS.FC);

   7905  1 001553   000000 473400 xsym               LDP3    B_MPT
         1 001554   300005 236100                    LDQ     5,,PR3
         1 001555   000023 772000                    QRL     19
         1 001556   000037 376007                    ANQ     31,DL
         1 001557   000060 720006 0                  LXL0    ECCB_SUBC,QL
         1 001560   200003 474500                    LDP4    @FINFO,,AUTO
         1 001561   400000 440100                    SXL0    0,,PR4

      715     7906    3           CALL SST$SSFTCB(IC,ECC,FINFO,SS$,TCB$) ALTRET(TCBFULL);

   7906  1 001562   000014 236000 2                  LDQ     12
         1 001563   200060 756100                    STQ     FCODE+7,,AUTO
         1 001564   000015 236000 2                  LDQ     13
         1 001565   200003 235100                    LDA     @FINFO,,AUTO
         1 001566   200056 757100                    STAQ    FCODE+5,,AUTO
         1 001567   200021 630500                    EPPR0   ECC,,AUTO
         1 001570   200055 450500                    STP0    FCODE+4,,AUTO
         1 001571   200030 633500                    EPPR3   IC,,AUTO
         1 001572   200054 453500                    STP3    FCODE+3,,AUTO
         1 001573   200054 630500                    EPPR0   FCODE+3,,AUTO
         1 001574   000023 631400 xsym               EPPR1   B_VECTNIL+19
PL6.E3A0      #001=HFB$CONNECT File=HFB$FPR.:E05TSI                              TUE 07/29/97 22:22 Page:104  
         1 001575   000000 701000 xent               TSX1    SST$SSFTCB
         1 001576   001605 702000 1                  TSX2    TCBFULL

      716     7907    3           B$JIT$->B$JIT.ERR = FINFO.JERR;

   7907  1 001577   200003 470500                    LDP0    @FINFO,,AUTO
         1 001600   000002 236100                    LDQ     2,,PR0
         1 001601   000000 471400 xsym               LDP1    B$JIT$
         1 001602   100012 756100                    STQ     10,,PR1

      717     7908    3           RETURN;

   7908  1 001603   200046 221300                    LDX1  ! MISCDESC+2,,AUTO
         1 001604   000001 702211                    TSX2  ! 1,X1

   7907  1 001605                       TCBFULL      null
      718     7909    3           END;
      719     7910    2   TCBFULL: ;
      720     7911    2      FINFO.P# = P#;

   7911  1 001605   200003 470500                    LDP0    @FINFO,,AUTO
         1 001606   200031 235100                    LDA     P#,,AUTO
         1 001607   000003 755100                    STA     3,,PR0

      721     7912    2      IF SS$->B$SS.ISR.WSR ~= %MONWSR

   7912  1 001610   000000 471400 xsym               LDP1    B_MPT
         1 001611   100010 236100                    LDQ     8,,PR1
         1 001612   000160 316007                    CANQ    112,DL
         1 001613   001623 600000 1                  TZE     s:7918

      722     7913    3      THEN DO;                             /* ABORT USER IF NOT IN MONITOR       */

      723     7914    3           ACTION = ABORTM;

   7914  1 001614   000005 235007                    LDA     5,DL
         1 001615   200004 473500                    LDP3    @ACTION,,AUTO
PL6.E3A0      #001=HFB$CONNECT File=HFB$FPR.:E05TSI                              TUE 07/29/97 22:22 Page:105  
         1 001616   300000 755100                    STA     0,,PR3

      724     7915    3           B$JIT$->B$JIT.ERR= HRDCODE;

   7915  1 001617   000003 236000 0                  LDQ     HRDCODE
         1 001620   000000 471400 xsym               LDP1    B$JIT$
         1 001621   100012 756100                    STQ     10,,PR1

      725     7916    3           END;

   7916  1 001622   001657 710000 1                  TRA     s:7926

      726     7917    3      ELSE DO;                             /* SCREECH IF IN MONITOR              */

      727     7918    3           ACTION = SCREECH;

   7918  1 001623   000007 235007                    LDA     7,DL
         1 001624   200004 473500                    LDP3    @ACTION,,AUTO
         1 001625   300000 755100                    STA     0,,PR3

      728     7919    3           SCODE=HRDCODE;

   7919  1 001626   000003 236000 0                  LDQ     HRDCODE
         1 001627   200005 471500                    LDP1    @SCODE,,AUTO
         1 001630   100000 756100                    STQ     0,,PR1

      729     7920    3           B$JIT$->B$JIT.ERR = FINFO.JERR;

   7920  1 001631   000002 236100                    LDQ     2,,PR0
         1 001632   000000 474400 xsym               LDP4    B$JIT$
         1 001633   400012 756100                    STQ     10,,PR4

      730     7921    3           B$JIT$->B$JIT.ERR.SEV = FINFO.PORT#; /* SEVERITY CODE IS PORT NUMBER  */

   7921  1 001634   000000 236100                    LDQ     0,,PR0
         1 001635   000033 772000                    QRL     27
         1 001636   400012 676100                    ERQ     10,,PR4
PL6.E3A0      #001=HFB$CONNECT File=HFB$FPR.:E05TSI                              TUE 07/29/97 22:22 Page:106  
         1 001637   000007 376007                    ANQ     7,DL
         1 001640   400012 656100                    ERSQ    10,,PR4

      731     7922    3           IF B_MPT.SSDESC$->B$$DESCR.WSR = %MONWSR OR S_TIMR >= 2

   7922  1 001641   000006 475400 xsym               LDP5    B_MPT+6
         1 001642   500000 236100                    LDQ     0,,PR5
         1 001643   000160 316007                    CANQ    112,DL
         1 001644   001650 600000 1                  TZE     s:7923
         1 001645   000000 235000 xsym               LDA     S_TIMR
         1 001646   000002 115007                    CMPA    2,DL
         1 001647   001653 602000 1                  TNC     s:7924

      732     7923    3           THEN SCODE.SEV=7;

   7923  1 001650   000007 236007                    LDQ     7,DL
         1 001651   100000 256100                    ORSQ    0,,PR1
         1 001652   001657 710000 1                  TRA     s:7926

      733     7924    3           ELSE SCODE.SEV=6;

   7924  1 001653   100000 236100                    LDQ     0,,PR1
         1 001654   000012 376000 2                  ANQ     10
         1 001655   000006 276007                    ORQ     6,DL
         1 001656   100000 756100                    STQ     0,,PR1

      734     7925    3           END;

      735     7926    2      RETURN;

   7926  1 001657   200046 221300                    LDX1  ! MISCDESC+2,,AUTO
         1 001660   000001 702211                    TSX2  ! 1,X1

      736     7927    2   END SYSERR;
      737     7928        %EJECT;
PL6.E3A0      #001=HFB$CONNECT File=HFB$FPR.:E05TSI                              TUE 07/29/97 22:22 Page:107  
      738     7929    1   HDWRLOG: PROC;

   7929  1 001661   200050 741300       HDWRLOG      STX1  ! FTYPE,,AUTO

      739     7930        /*      BUILD ERRORLOG ENTRY                                          */
      740     7931    2      EL$PROCERR = '0'B;

   7931  1 001662   000100 100400                    MLR     fill='000'O
         1 001663   000002 000001 xsym               ADSC9   B_VECTNIL+2              cn=0,n=1
         1 001664   200007 000050                    ADSC9   EL$PROCERR,,AUTO         cn=0,n=40

      741     7932    2      EL$PROCERR.SYSID=B$USRT$->B$USER.SYSID(S_PCU(S_PNO));

   7932  1 001665   000000 720000 xsym               LXL0    S_PNO
         1 001666   000000 235010 xsym               LDA     S_PCU,X0
         1 001667   000004 735000                    ALS     4
         1 001670   000000 470400 xsym               LDP0    B$USRT$
         1 001671   000014 722105                    LXL2    12,AL,PR0
         1 001672   200014 742100                    STX2    EL$PROCERR+5,,AUTO

      742     7933    3      DO INHIBIT;

      743     7934    3           MISCDESC = B$LS$->B$MLS.MISC;

   7934  1 001673   000000 471600 xsym               LDP1  ! B$LS$
         1 001674   100130 237300                    LDAQ  ! 88,,PR1
         1 001675   200044 757300                    STAQ  ! MISCDESC,,AUTO

      744     7935    3           B$LS$->B$MLS.MISC = SS$->B$SS.ISR;

   7935  1 001676   000000 473600 xsym               LDP3  ! B_MPT
         1 001677   300010 237300                    LDAQ  ! 8,,PR3
         1 001700   100130 757300                    STAQ  ! 88,,PR1

      745     7936    3           EL$PROCERR.INST = PINCRW(B$MISC$,SS$->B$SS.IC)->FAULTING_INST;

   7936  1 001701   300004 223300                    LDX3  ! 4,,PR3
PL6.E3A0      #001=HFB$CONNECT File=HFB$FPR.:E05TSI                              TUE 07/29/97 22:22 Page:108  
         1 001702   000000 474600 xsym               LDP4  ! B$MISC$
         1 001703   400000 235313                    LDA   ! 0,X3,PR4
         1 001704   200015 755300                    STA   ! EL$PROCERR+6,,AUTO

      746     7937    3           B$LS$->B$MLS.MISC = MISCDESC;

   7937  1 001705   200044 237300                    LDAQ  ! MISCDESC,,AUTO
         1 001706   100130 757300                    STAQ  ! 88,,PR1

      747     7938    3           END;                            /* INHIBIT                            */

      748     7939    2      EL$PROCERR.IR=SS$->B$SS.IR;

   7939  1 001707   300004 723100                    LXL3    4,,PR3
         1 001710   200013 443100                    SXL3    EL$PROCERR+4,,AUTO

      749     7940    2      EL$PROCERR.IC=SS$->B$SS.IC;

   7940  1 001711   300004 224100                    LDX4    4,,PR3
         1 001712   200013 744100                    STX4    EL$PROCERR+4,,AUTO

      750     7941    2      EL$PROCERR.ISR=SS$->B$SS.ISR;

   7941  1 001713   300010 237100                    LDAQ    8,,PR3
         1 001714   200007 755100                    STA     EL$PROCERR,,AUTO
         1 001715   200010 756100                    STQ     EL$PROCERR+1,,AUTO

      751     7942    2      EL$PROCERR.PROCTYPE = S_PTYPE(S_PNO);

   7942  1 001716   000000 236010 xsym               LDQ     S_PTYPE,X0
         1 001717   000005 736000                    QLS     5
         1 001720   200014 676100                    ERQ     EL$PROCERR+5,,AUTO
         1 001721   000740 376007                    ANQ     480,DL
         1 001722   200014 656100                    ERSQ    EL$PROCERR+5,,AUTO

      752     7943    2      EL$PROCERR.RSW2 = H_RSW2(S_PNO);

PL6.E3A0      #001=HFB$CONNECT File=HFB$FPR.:E05TSI                              TUE 07/29/97 22:22 Page:109  
   7943  1 001723   000000 236010 xsym               LDQ     H_RSW2,X0
         1 001724   200016 756100                    STQ     EL$PROCERR+7,,AUTO

      753     7944    2      EL$PROCERR.FC = SS$->B$SS.FC;

   7944  1 001725   300005 236100                    LDQ     5,,PR3
         1 001726   000023 772000                    QRL     19
         1 001727   200014 676100                    ERQ     EL$PROCERR+5,,AUTO
         1 001730   000037 376007                    ANQ     31,DL
         1 001731   200014 656100                    ERSQ    EL$PROCERR+5,,AUTO

      754     7945    2      EL$PROCERR.SSSIZE = 64;

   7945  1 001732   000100 225003                    LDX5    64,DU
         1 001733   200020 745100                    STX5    EL$PROCERR+9,,AUTO

      755     7946    2      IF ADDR(FINFO) ~= ADDR(NIL)

   7946  1 001734   200003 236100                    LDQ     @FINFO,,AUTO
         1 001735   000001 116000 xsym               CMPQ    B_VECTNIL+1
         1 001736   001777 600000 1                  TZE     s:7955

      756     7947    3      THEN DO;

      757     7948    3           EL$PROCERR.FLTREG = FINFO.FLTREG;

   7948  1 001737   200003 475500                    LDP5    @FINFO,,AUTO
         1 001740   000100 100500                    MLR     fill='000'O
         1 001741   500001 000004                    ADSC9   1,,PR5                   cn=0,n=4
         1 001742   200011 000010                    ADSC9   EL$PROCERR+2,,AUTO       cn=0,n=8

      758     7949    3           EL$PROCERR.PORT# = FINFO.PORT#;

   7949  1 001743   500000 236100                    LDQ     0,,PR5
         1 001744   000022 772000                    QRL     18
         1 001745   200014 552110                    STBQ    EL$PROCERR+5,'10'O,AUTO

PL6.E3A0      #001=HFB$CONNECT File=HFB$FPR.:E05TSI                              TUE 07/29/97 22:22 Page:110  
      759     7950    3           EL$PROCERR.HRSIZE = FINFO.P#;

   7950  1 001746   500003 722100                    LXL2    3,,PR5
         1 001747   200020 442100                    SXL2    EL$PROCERR+9,,AUTO

      760     7951    3           FINFO.P# = FINFO.P# + SIZEW(EL$PROCERR) + 64;

   7951  1 001750   000112 236007                    LDQ     74,DL
         1 001751   500003 056100                    ASQ     3,,PR5

      761     7952    3           CALL ELA$SYSLOG(EL_PROCERR,EL$PROCERR,FINFO.P#,'0'B,1,ERROR);

   7952  1 001752   200025 636500                    EPPR6   ERROR,,AUTO
         1 001753   200061 456500                    STP6    FCODE+8,,AUTO
         1 001754   000010 236000 2                  LDQ     8
         1 001755   200060 756100                    STQ     FCODE+7,,AUTO
         1 001756   000001 236000 2                  LDQ     1
         1 001757   200057 756100                    STQ     FCODE+6,,AUTO
         1 001760   200003 236100                    LDQ     @FINFO,,AUTO
         1 001761   000003 036003                    ADLQ    3,DU
         1 001762   200056 756100                    STQ     FCODE+5,,AUTO
         1 001763   200007 637500                    EPPR7   EL$PROCERR,,AUTO
         1 001764   200055 457500                    STP7    FCODE+4,,AUTO
         1 001765   000017 236000 2                  LDQ     15
         1 001766   200054 756100                    STQ     FCODE+3,,AUTO
         1 001767   200054 630500                    EPPR0   FCODE+3,,AUTO
         1 001770   000024 631400 xsym               EPPR1   B_VECTNIL+20
         1 001771   000000 701000 xent               TSX1    ELA$SYSLOG
         1 001772   000000 011000                    NOP     0

      762     7953    3           FINFO.P# = P#;

   7953  1 001773   200003 470500                    LDP0    @FINFO,,AUTO
         1 001774   200031 235100                    LDA     P#,,AUTO
         1 001775   000003 755100                    STA     3,,PR0

      763     7954    3           END;
PL6.E3A0      #001=HFB$CONNECT File=HFB$FPR.:E05TSI                              TUE 07/29/97 22:22 Page:111  

   7954  1 001776   002015 710000 1                  TRA     s:7956

      764     7955    2      ELSE CALL ELA$SYSLOG(EL_PROCERR,EL$PROCERR,SIZEW(EL$PROCERR)+64,'0'B,1,ERROR);

   7955  1 001777   200025 635500                    EPPR5   ERROR,,AUTO
         1 002000   200061 455500                    STP5    FCODE+8,,AUTO
         1 002001   000010 236000 2                  LDQ     8
         1 002002   200060 756100                    STQ     FCODE+7,,AUTO
         1 002003   000022 237000 2                  LDAQ    18
         1 002004   200056 757100                    STAQ    FCODE+5,,AUTO
         1 002005   200007 636500                    EPPR6   EL$PROCERR,,AUTO
         1 002006   200055 456500                    STP6    FCODE+4,,AUTO
         1 002007   000017 236000 2                  LDQ     15
         1 002010   200054 756100                    STQ     FCODE+3,,AUTO
         1 002011   200054 630500                    EPPR0   FCODE+3,,AUTO
         1 002012   000024 631400 xsym               EPPR1   B_VECTNIL+20
         1 002013   000000 701000 xent               TSX1    ELA$SYSLOG
         1 002014   000000 011000                    NOP     0

      765     7956    2      RETURN;

   7956  1 002015   200050 221300                    LDX1  ! FTYPE,,AUTO
         1 002016   000001 702211                    TSX2  ! 1,X1

      766     7957    2   END;
      767     7958        %EJECT;
PL6.E3A0      #001=HFB$CONNECT File=HFB$FPR.:E05TSI                              TUE 07/29/97 22:22 Page:112  
      768     7959    1   ICFIX: PROC;

   7959  1 002017   200052 741300       ICFIX        STX1  ! FCODE+1,,AUTO

      769     7960    3      DO INHIBIT;

      770     7961    3           IF NOT(HW_FLTIC_OK OR SS$->B$SS.IR.MIR)

   7961  1 002020   000000 234200 xsym               SZN   ! HW_FLTIC_OK
         1 002021   002031 604200 1                  TMI   ! s:7964
         1 002022   000000 470600 xsym               LDP0  ! B_MPT
         1 002023   000004 236300                    LDQ   ! 4,,PR0
         1 002024   000040 316207                    CANQ  ! 32,DL
         1 002025   002031 601200 1                  TNZ   ! s:7964

      771     7962    3           THEN
      772     7963    3                SS$->B$SS.IC = SS$->B$SS.IC - 1;

   7963  1 002026   000004 220300                    LDX0  ! 4,,PR0
         1 002027   777777 622210                    EAX2  ! -1,X0
         1 002030   000004 742300                    STX2  ! 4,,PR0

      773     7964    3           IF NOT B$JIT.PRIV.ACTIVE & %PR_TND#

   7964  1 002031   000000 470600 xsym               LDP0  ! B$JIT$
         1 002032   000013 236300                    LDQ   ! 11,,PR0
         1 002033   000106 376200 0                  ANQ   ! ECCB_SUBC+22
         1 002034   002040 601200 1                  TNZ   ! s:7968

      774     7965    3           THEN
      775     7966    3                SS$->B$SS.IR.MIR ='0'B;

   7966  1 002035   000000 471600 xsym               LDP1  ! B_MPT
         1 002036   000003 236200 2                  LDQ   ! 3
         1 002037   100004 356300                    ANSQ  ! 4,,PR1

      776     7967    3           END;
PL6.E3A0      #001=HFB$CONNECT File=HFB$FPR.:E05TSI                              TUE 07/29/97 22:22 Page:113  

      777     7968    2   END ICFIX;

   7968  1 002040   200052 221300                    LDX1  ! FCODE+1,,AUTO
         1 002041   000001 702211                    TSX2  ! 1,X1

EASF
 Sect OctLoc
   0     000   100602 410126                                                    @..V

(unnamed)
 Sect OctLoc
   0     001   100602 000006   100602 000007                                    @...@...

HRDCODE
 Sect OctLoc
   0     003   100601 010456                                                    @...

ECCB_FINDEX
 Sect OctLoc
   0     004   000000 000077   000000 000033   000000 000024   000000 000026    ...?............
   0     010   000000 000077   000000 000034   000000 000025   000000 000035    ...?............
   0     014   000000 000077   000000 000042   000000 000036   000000 000042    ...?..."......."
   0     020   000000 000077   000000 000022   000000 000023   000000 000077    ...?...........?
   0     024   000000 000032   000000 000077   000000 000037   000000 000077    .......?.......?
   0     030   000000 000040   000000 000041                                    ... ...!

ECCB_FTYPE
 Sect OctLoc
   0     032   000000 000017   000000 000007   000000 000006   000000 000006    ................
   0     036   000000 000017   000000 000007   000000 000006   000000 000007    ................
   0     042   000000 000017   000000 000007   000000 000007   000000 000007    ................
   0     046   000000 000017   000000 000005   000000 000005   000000 000017    ................
   0     052   000000 000007   000000 000017   000000 000007   000000 000017    ................
   0     056   000000 000007   000000 000007                                    ........

ECCB_SUBC
PL6.E3A0      #001=HFB$CONNECT File=HFB$FPR.:E05TSI                              TUE 07/29/97 22:22 Page:114  
 Sect OctLoc
   0     060   000000 000017   000000 000000   000000 000000   000000 000002    ................
   0     064   000000 000017   000000 000001   000000 000001   000000 000002    ................
   0     070   000000 000017   000000 000007   000000 000003   000000 000010    ................
   0     074   000000 000017   000000 000000   000000 000001   000000 000017    ................
   0     100   000000 000011   000000 000012   000000 000004   000000 000013    ................
   0     104   000000 000005   000000 000006                                    ........

(unnamed)
 Sect OctLoc
   0     106   000000 000100                                                    ...@

(unnamed)
 Sect OctLoc
   2     000   000000 006000   000002 006000   777777 777760   777777 777737    ................
   2     004   000003 600000   000003 777760   000003 770000   000002 400000    ................
   2     010   000003 006000   000011 300000   777777 777770   000003 200000    ................
   2     014   000004 006000   000000 006000   000000 000314   000016 006000    ................
   2     020   000000 000112   000000 000000   000020 006000   000002 006000    ...J............
      778     7969        %EJECT;
PL6.E3A0      #001=HFB$CONNECT File=HFB$FPR.:E05TSI                              TUE 07/29/97 22:22 Page:115  
      779     7970        /*  THESE CODES ARE IN PL6 MODULE SO EXPL6 WILL GET THEM IN ERRFILE */
      780     7971        /*S*   SCREECH_CODE:  HFA-S$SDOWN
      781     7972               MESSAGE:  Shutdown fault
      782     7973        */
      783     7974        /*S*   SCREECH_CODE:  HFA-S$MEMORY
      784     7975               MESSAGE:  Memory fault
      785     7976        */
      786     7977        /*S*   SCREECH_CODE:  HFA-S$MME
      787     7978               MESSAGE:  MME fault
      788     7979        */
      789     7980        /*S*   SCREECH_CODE:  HFA-S$FLTAG
      790     7981               MESSAGE:  Fault Tag fault
      791     7982        */
      792     7983        /*S*   SCREECH_CODE:  HFA-S$TIMER
      793     7984               MESSAGE:  Timer runout fault (Fault Handler Error)
      794     7985        */
      795     7986        /*S*   SCREECH_CODE:  HFA-S$CMMD
      796     7987               MESSAGE:  Command fault
      797     7988        */
      798     7989        /*S*   SCREECH_CODE:  HFA-S$DERAIL
      799     7990               MESSAGE:  Derail fault
      800     7991        */
      801     7992        /*S*   SCREECH_CODE:  HFA-S$LOCKUP
      802     7993               MESSAGE:  Lockup fault
      803     7994        */
      804     7995        /*S*   SCREECH_CODE:  HFA-S$CONCT
      805     7996               MESSAGE:   Connect Fault (Fault Handler Error)
      806     7997        */
      807     7998        /*S*   SCREECH_CODE:  HFA-S$PRTY
      808     7999               MESSAGE:   Parity Error Fault
      809     8000        */
      810     8001        /*S*   SCREECH_CODE:  HFA-S$IPR
      811     8002               MESSAGE:  Illegal Procedure fault
      812     8003        */
      813     8004        /*S*   SCREECH_CODE:  HFA-S$OPNC
      814     8005               MESSAGE:   OP Not Complete Fault
      815     8006        */
PL6.E3A0      #001=HFB$CONNECT File=HFB$FPR.:E05TSI                              TUE 07/29/97 22:22 Page:116  
      816     8007        /*S*   SCREECH_CODE:  HFA-S$STUP
      817     8008               MESSAGE:   Startup fault
      818     8009        */
      819     8010        /*S*   SCREECH_CODE:  HFA-S$OVRF
      820     8011               MESSAGE:  Overflow fault
      821     8012        */
      822     8013        /*S*   SCREECH_CODE:  HFA-S$DVCHK
      823     8014               MESSAGE:  Divide Check fault
      824     8015        */
      825     8016        /*S*   SCREECH_CODE:  HFA-S$EXU
      826     8017               MESSAGE:   Execute fault
      827     8018        */
      828     8019        /*S*   SCREECH_CODE:  HFA-S$SCL1
      829     8020               MESSAGE:  Security 1 fault
      830     8021        */
      831     8022        /*S*   SCREECH_CODE:  HFA-S$DLNK
      832     8023               MESSAGE:   Dynamic Link fault
      833     8024        */
      834     8025        /*S*   SCREECH_CODE:  HFA-S$MSEG
      835     8026               MESSAGE:  Missing Segment fault
      836     8027        */
      837     8028        /*S*   SCREECH_CODE:  HFA-S$MWSP
      838     8029               MESSAGE:  Missing Work Space fault
      839     8030        */
      840     8031        /*S*   SCREECH_CODE:  HFA-S$MPAGE
      841     8032               MESSAGE:  Missing Page fault
      842     8033        */
      843     8034        /*S*   SCREECH_CODE:  HFA-S$SCL2
      844     8035               MESSAGE:  Security 2 fault
      845     8036        */
      846     8037        /*S*   SCREECH_CODE:  HFA-S$SSFULL
      847     8038               MESSAGE:  The Monitors Safe Store Stack is full
      848     8039        */
      849     8040        /*S*   SCREECH_CODE:  HFA-S$MTSTK
      850     8041               MESSAGE:  The Monitors Tstack is full
      851     8042        */
      852     8043        /*S*   SCREECH_CODE:   HFA-S$UTSTK
PL6.E3A0      #001=HFB$CONNECT File=HFB$FPR.:E05TSI                              TUE 07/29/97 22:22 Page:117  
      853     8044               MESSAGE:  The Users Tstack is full
      854     8045        */
      855     8046        /*S*   SCREECH_CODE:  HFA-S$HFERROR
      856     8047               MESSAGE:  Internal Fault Handler Error
      857     8048        */
      858     8049        /*S*   SCREECH_CODE:  HFA-S$CNCTERR
      859     8050               MESSAGE:  Connect Fault Error
      860     8051        */
      861     8052        /*S*   SCREECH_CODE:   HFA-S$QXDELTA
      862     8053               MESSAGE:   Quit to XDELTA
      863     8054        */
      864     8055        /*S*   SCREECH_CODE:   ISI-S$QAARDVRK
      865     8056               TYPE:      SCREECH
      866     8057               MESSAGE:   Operator Recovery Via Aardvark
      867     8058        */
      868     8059        /*S*   SCREECH_CODE:   HFA-S$HARDWARE
      869     8060               TYPE:     SCREECH
      870     8061               MESSAGE:  Hardware Error
      871     8062               REMARKS:  This screech indicates that a hardware fault has
      872     8063                         occurred which probably was not caused by software.
      873     8064                         The following faults are included in this category:
      874     8065
      875     8066                           1)  Any PARITY FAULT, OP NOT COMPLETE FAULT,
      876     8067                               DYNAMIC LINKING FAULT, OR MISSING WORKING
      877     8068                               SPACE FAULT.
      878     8069
      879     8070                           2)  A MEMORY FAULT (STR FAULT) due to either a
      880     8071                               non-existent address (fault register bit 4)
      881     8072                               or a non-zero illegal action code (fault
      882     8073                               register bits 16-31) received from the system
      883     8074                               controller.
      884     8075
      885     8076                           3)  A COMMAND FAULT that was not caused by an
      886     8077                               illegal slave procedure (fault register bit 2)
      887     8078                               and was not caused by an illegal system
      888     8079                               controller command (illegal action code of
      889     8080                               12 octal) received from the system controller.
PL6.E3A0      #001=HFB$CONNECT File=HFB$FPR.:E05TSI                              TUE 07/29/97 22:22 Page:118  
      890     8081
      891     8082                         A procerror error log entry is created for each
      892     8083                         hardware error.  The specific fault type causing
      893     8084                         the hardware error can be determined by looking
      894     8085                         at the procerror errors entries (ERROR PROCERR) in
      895     8086                         the error log (ELAN processor).  The fault code that
      896     8087                         caused the hardware error can also be determined by
      897     8088                         examining word 5 of the safe store frame that was
      898     8089                         created by the fault.
      899     8090        */
      900     8091        /*S*   SCREECH_CODE:   HFA-S$DIAGSNAP
      901     8092               TYPE:     SNAP
      902     8093               MESSAGE:  Diagnostic Snap From Fault Handler
      903     8094        */
      904     8095        /*S*   SCREECH_CODE:   HFA-S$SLAVE
      905     8096               TYPE:     SCREECH
      906     8097               MESSAGE:  CPU Won't Respond To Connect
      907     8098               REMARKS:  This SCREECH occurs because a CPU did not respond
      908     8099                         to a connect from another CPU requesting that the
      909     8100                         first CPU go from the pause state to run or from
      910     8101                         the run state to pause.  The CPU that did not
      911     8102                         respond is set to the stopped state and therefore,
      912     8103                         if it was a slave CPU, no attempt will be made
      913     8104                         by the master CPU to restart the slave CPU after
      914     8105                         the SCREECH.  After corrective action, the slave
      915     8106                         CPU can be restarted by depressing the INITIALIZE
      916     8107                         & CLEAR pushbutton on the CPU configuration panel
      917     8108                         and then issuing a START CPU keyin.  If the CPU
      918     8109                         that did not respond is a master CPU, the system
      919     8110                         will probably not recover automatically and a
      920     8111                         manually initiated disk boot will be required.
      921     8112        */
      922     8113        /*S*   SCREECH_CODE:   HFC-S$TOOLONG
      923     8114               TYPE:     SCREECH
      924     8115               MESSAGE:  Processor Waited Too Long For Gate To Be Unlocked
      925     8116               REMARKS:  This screech indicates that the screeching processor
      926     8117                         had to wait too long for a locked gate to be unlocked.
PL6.E3A0      #001=HFB$CONNECT File=HFB$FPR.:E05TSI                              TUE 07/29/97 22:22 Page:119  
      927     8118                         Since the screeching processor has waited about one
      928     8119                         second, the gate was probably left locked due to a
      929     8120                         software bug or, in a multiprocessing system, one of
      930     8121                         the other processors may have hung up with this gate
      931     8122                         locked.  $PR1 points at the offending gate.
      932     8123        */
      933     8124        /*S*   SCREECH_CODE:   HFC-S$NEGDIS
      934     8125               TYPE:     SCREECH
      935     8126               MESSAGE:  Interrupt Disable Count Is Negative
      936     8127               REMARKS:  This screech indicates that the interrupt disable
      937     8128                         count, NI$DS, is negative.  The only valid values for
      938     8129                         this count are zero or positive numbers.
      939     8130        */
      940     8131        /*S*   SCREECH_CODE:   HFC-S$NOTLOCKED
      941     8132               TYPE:     SCREECH
      942     8133               MESSAGE:  Attempt To Unlock a Gate That Is Not Locked
      943     8134               REMARKS:  This screech indicates that the screeching processor
      944     8135                         attempted to unlock a gate that was not locked.
      945     8136                         $PR1 points at the offending gate.
      946     8137        */
      947     8138        /*S*   SCREECH_CODE:   HFC-S$WRONGUSER
      948     8139               TYPE:     SCREECH
      949     8140               MESSAGE:  Attempt To Unlock a Gate Not Locked By This User
      950     8141               REMARKS:  This screech indicates that the screeching processor
      951     8142                         attempted to unlock a gate that was either locked by
      952     8143                         a different user or locked on a different processor.
      953     8144                         $PR1 points at the offending gate.
      954     8145        */
      955     8146        /*S*   SCREECH_CODE:   HFC-S$NEGGATECNT
      956     8147               TYPE:     SCREECH
      957     8148               MESSAGE:  Count Of Locked Gates On This Processor Is Negative
      958     8149               REMARKS:  This screech indicates that the locked gate count for
      959     8150                         this processor, H_GATECNT, became negative during the
      960     8151                         process of unlocking a gate.  The only valid values
      961     8152                         for this count are zero or positive numbers.  $PR1
      962     8153                         points at the gate that was being unlocked.
      963     8154        */
PL6.E3A0      #001=HFB$CONNECT File=HFB$FPR.:E05TSI                              TUE 07/29/97 22:22 Page:120  
      964     8155        /*S*   SCREECH_CODE:   HFC-S$BADSTIMR
      965     8156               TYPE:     SCREECH
      966     8157               MESSAGE:  Invalid Timer Mode While Unlocking Gate
      967     8158               REMARKS:  This screech indicates that the timer mode flag
      968     8159                         for this processor, S_TIMR, was set to an invalid
      969     8160                         state.  This condition was detected during the
      970     8161                         unlocking of the gate pointed at by $PR1.  The
      971     8162                         only valid states of the timer mode at this time
      972     8163                         are monitor service and monitor execution.
      973     8164        */
      974     8165        /*E*   ERROR:  HFA-E$MEMORY-E
      975     8166               MESSAGE:  Memory fault
      976     8167        */
      977     8168        /*E*   ERROR:  HFA-E$MME-E
      978     8169               MESSAGE:  MME fault
      979     8170        */
      980     8171        /*E*   ERROR:  HFA-E$FAULT_TAG-E
      981     8172               MESSAGE:  Fault Tag fault
      982     8173        */
      983     8174        /*E*   ERROR:  HFA-E$COMMAND-E
      984     8175               MESSAGE:  Command fault
      985     8176        */
      986     8177        /*E*   ERROR:  HFA-E$DERAIL-E
      987     8178               MESSAGE:  Derail fault
      988     8179        */
      989     8180        /*E*   ERROR:  HFA-E$LOCKUP-E
      990     8181               MESSAGE:  Lockup fault
      991     8182        */
      992     8183        /*E*   ERROR:  HFA-E$PRTY-E
      993     8184               MESSAGE:  Parity Error fault
      994     8185        */
      995     8186        /*E*   ERROR:  HFA-E$IPR-E
      996     8187               MESSAGE:  Illegal Procedure fault
      997     8188        */
      998     8189        /*E*   ERROR:  HFA-E$OPNC-E
      999     8190               MESSAGE:  OP Not Complete fault
     1000     8191        */
PL6.E3A0      #001=HFB$CONNECT File=HFB$FPR.:E05TSI                              TUE 07/29/97 22:22 Page:121  
     1001     8192        /*E*   ERROR:  HFA-E$OVERFLOW-E
     1002     8193               MESSAGE:  Overflow fault
     1003     8194        */
     1004     8195        /*E*   ERROR:  HFA-E$DIVIDE_CHECK-E
     1005     8196               MESSAGE:  Divide Check fault
     1006     8197        */
     1007     8198        /*E*   ERROR:  HFA-E$SECURITY_1-E
     1008     8199               MESSAGE:  Security 1 fault
     1009     8200        */
     1010     8201        /*E*   ERROR:  HFA-E$DLNK-E
     1011     8202               MESSAGE:  Dynamic Link fault
     1012     8203        */
     1013     8204        /*E*   ERROR:  HFA-E$MISSING_SEGMENT-E
     1014     8205               MESSAGE:  Missing Segment fault
     1015     8206        */
     1016     8207        /*E*   ERROR: HFA-E$MWSP-E
     1017     8208               MESSAGE:  Missing Work Space fault
     1018     8209        */
     1019     8210        /*E*   ERROR:  HFA-E$MISSING_PAGE-E
     1020     8211               MESSAGE:  Missing Page fault
     1021     8212        */
     1022     8213        /*E*   ERROR:  HFA-E$SECURITY_2-E
     1023     8214               MESSAGE:  Security 2 fault
     1024     8215        */
     1025     8216        /*E*   ERROR:  HFA-E$HARDWARE-E
     1026     8217               MESSAGE:  Hardware Error
     1027     8218               MESSAGE1: This error indicates that a hardware error (e.g.
     1028     8219                         parity fault) has occurred which probably was not
     1029     8220                         caused by software.
     1030     8221               MESSAGE2: The following faults are included in this category:
     1031     8222
     1032     8223                           1)  Any PARITY FAULT, OP NOT COMPLETE FAULT,
     1033     8224                               DYNAMIC LINKING FAULT, OR MISSING WORKING
     1034     8225                               SPACE FAULT.
     1035     8226
     1036     8227                           2)  A MEMORY FAULT (STR FAULT) due to either a
     1037     8228                               non-existent address (fault register bit 4)
PL6.E3A0      #001=HFB$CONNECT File=HFB$FPR.:E05TSI                              TUE 07/29/97 22:22 Page:122  
     1038     8229                               or a non-zero illegal action code (fault
     1039     8230                               register bits 16-31) received from the system
     1040     8231                               controller.
     1041     8232
     1042     8233                           3)  A COMMAND FAULT that was not caused by an
     1043     8234                               illegal slave procedure (fault register bit 2)
     1044     8235                               and was not caused by an illegal system
     1045     8236                               controller command (illegal action code of
     1046     8237                               12 octal) received from the system controller.
     1047     8238
     1048     8239                         A procerror error log entry is created for each
     1049     8240                         hardware error.  The specific fault type causing
     1050     8241                         the hardware error can be determined by looking
     1051     8242                         at the procerror errors entries (ERROR PROCERR) in
     1052     8243                         the error log (ELAN processor).  The fault code that
     1053     8244                         caused the hardware error can also be determined by
     1054     8245                         examining word 5 of the safe store frame that was
     1055     8246                         created by the fault.
     1056     8247
     1057     8248                         Since some hardware errors are intermittent, a user
     1058     8249                         whose job or program was aborted by a hardware error
     1059     8250                         might try resubmitting the job or rerunning the
     1060     8251                         program.
     1061     8252        */
     1062     8253    1   END HFB$CONNECT;
     1063     8254        %EOD;

PL6.E3A0      #001=HFB$CONNECT File=HFB$FPR.:E05TSI                              TUE 07/29/97 22:22 Page:123  
--  Include file information  --

   B_MAGIC_C.:E05TOU  is referenced.
   B_MACROS_C.:E05TOU  is referenced.
   EL$TABLES.:E05TOU  is referenced.
   EL_SUBS_C.:E05TOU  is referenced.
   HF_LOCK_C.:E05TOU  cannot be made into a system file and is referenced.
   HF_ERRORS_C.:E05TOU  is referenced.
   S_WSPTD_R.:E05TOU  cannot be made into a system file and is referenced.
   HF_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   UE_CP6.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  is referenced.
   B_MLSMAC_C.:E05TOU  is referenced.
   B_ULSMAC_C.:E05TOU  is referenced.
   B_LSDATA_C.:E05TOU  cannot be made into a system file and is referenced.
   MM_MACRO_M.:E05TOU  is referenced.
   B_STRINGS_C.:E05TOU  is referenced.
   MM$SYSGEN.:E05TOU  is referenced.
   M_INFO_C.:E05TOU  is referenced.
   MM_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   B$USER.:E05TOU  cannot be made into a system file and is referenced.
   B$SS.:E05TOU  cannot be made into a system file and is referenced.
   B$MAP.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure HFB$CONNECT.
PL6.E3A0      #001=HFB$CONNECT File=HFB$FPR.:E05TSI                              TUE 07/29/97 22:22 Page:124  

 **** Variables and constants ****

  ****  Section 000 RoData HFB$CONNECT

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/b STRC        r     1 EASF
     4-0-0/w UBIN        r     1 ECCB_FINDEX(0:21)
    32-0-0/w UBIN        r     1 ECCB_FTYPE(0:21)
    60-0-0/w UBIN        r     1 ECCB_SUBC(0:21)
     3-0-0/b STRC        r     1 HRDCODE

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     4-0-0/w PTR         r     1 @ACTION                    3-0-0/w PTR         r     1 @FINFO
     6-0-0/w PTR         r     1 @MAGICS                    5-0-0/w PTR         r     1 @SCODE
    *0-0-0/w SBIN        r     1 ACTION                    26-0-0/d STRC(72)    r     1 CNCTEV
    44-0-0/d BIT (72)    r     1 DUMGATE                   21-0-0/w SBIN        r     1 ECC
     7-0-0/w STRC(360)   r     1 EL$PROCERR                25-0-0/w UBIN        r     1 ERROR
    51-0-0/w SBIN        r     1 FCODE                     47-0-0/w SBIN        r     1 FINDEX
    *0-0-0/w STRC(144)   r     1 FINFO                     41-0-0/b BIT         r     1 FOUND
    50-0-0/w UBIN        r     1 FTYPE                     37-0-0/w SBIN        r     1 I
    30-0-0/w UBIN        r     1 IC                        40-0-0/b STRC        r     1 INST
    *0-0-0/w SBIN        r     1 MAGICS(0:5)               44-0-0/d BIT (72)    r     1 MISCDESC
    44-0-0/d STRC(72)    r     1 MISCDESC_R                31-0-0/w SBIN        r     1 P#
    42-0-0/w PTR         r     1 P$                        *0-0-0/w STRC        r     1 SCODE
    30-0-0/w UBIN        r     1 STIMR                     36-0-0/w UBIN        r     1 S_TIMR_SAV

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

PL6.E3A0      #001=HFB$CONNECT File=HFB$FPR.:E05TSI                              TUE 07/29/97 22:22 Page:125  
     0-0-0/w PTR         r     1 B$JIT$                     0-0-0/w PTR         r     1 B$LS$
     0-0-0/w PTR         r     1 B$MISC$                    0-0-0/w PTR         r     1 B$PPUT$
     0-0-0/w PTR         r     1 B$UPT$                     0-0-0/w PTR         r     1 B$USERLS$
     0-0-0/w PTR         r     1 B$USRT$                    0-0-0/w PTR         r     1 B$WSQ0PT$
     0-0-0/d STRC(432)   r     1 B_MPT                      0-0-0/w BIT         r     1 HW_FLTIC_OK
     0-0-0/w BIT         r     1 HW_WSQ0PT
     0-0-0/d BIT (72)    r     1 H_CNCTEVBF(0:15)
     0-0-0/d BIT (72)    r     1 H_CNCTEVGATE               0-0-0/w SBIN        r     1 H_CNCTEVX
     0-0-0/b STRC        r     1 H_CNNCTMLBX(0:7)
     0-0-0/w BIT         r     1 H_RPM_FLG                  0-0-0/w BIT         r     1 H_RSW2(0:7)
     0-0-0/w BIT         r     1 H_S1000_FLG                0-0-0/w PTR         r     1 MM_BYP$
     0-0-0/w PTR         r     1 S$CU$                      0-0-0/w UBIN        r     1 S_CUN
     0-0-0/w UBIN        r     1 S_MPSTATE(0:7)
     0-0-0/w UBIN        r     1 S_PCU(0:7)                 0-0-0/w UBIN        r     1 S_PNO
     0-0-0/w UBIN        r     1 S_PORTNR(0:7)
     0-0-0/w SBIN        r     1 S_PTYPE(0:7)
     0-0-0/w SBIN        r     1 S_RETRY                    0-0-0/w UBIN        r     1 S_TIMR

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(72)    r     1 B$$DESCR                   0-0-0/w STRC(180)   r     1 B$ECCB
     0-0-0/w STRC(180)   r     1 B$ECCBI                    0-0-0/w STRC(7056)  r     1 B$FLT
     0-0-0/d STRC(8856)  r     1 B$JIT                      0-0-0/w STRC        r     1 B$MAP(0:1023)
     0-0-0/d STRC(10368) r     1 B$MLS                      0-0-0/d STRC(2304)  r     1 B$SS
     0-0-0/d STRC(576)   r     1 B$U                        0-0-0/d STRC(2592)  r     1 B$ULNK
     0-0-0/w STRC(576)   r     1 B$USER(0:0)                0-0-0/d BIT (72)    r     1 DESCR(0:511)
     0-0-0/w UBIN        r     1 FAULTING_INST              0-0-0/d STRC(1440)  r     1 HFB$SS
     0-0-0/w STRC        r     1 MM$PPUT(0:0)


   Procedure HFB$CONNECT requires 1058 words for executable code.
   Procedure HFB$CONNECT requires 50 words of local(AUTO) storage.
PL6.E3A0      #001=HFB$CONNECT File=HFB$FPR.:E05TSI                              TUE 07/29/97 22:22 Page:126  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=HFB$CONNECT File=HFB$FPR.:E05TSI                              TUE 07/29/97 22:22 Page:127  
          MINI XREF LISTING

ACTION
      6208**DCL        14--PROC     7453<<ASSIGN   7486<<ASSIGN   7488<<ASSIGN   7499--ENTRY    7512--ENTRY
      7539<<ASSIGN   7555--ENTRY    7590--ENTRY    7618--ENTRY    7624<<ASSIGN   7633<>CALL     7634>>IF
      7636>>ASSIGN   7637>>ASSIGN   7638>>ASSIGN   7644>>ASSIGN   7644>>ASSIGN   7647<<ASSIGN   7652>>IF
      7675<<ASSIGN   7681<<ASSIGN   7701--ENTRY    7720<<ASSIGN   7777>>IF       7826<<ASSIGN   7849<<ASSIGN
      7857<<ASSIGN   7862<<ASSIGN   7900<<ASSIGN   7914<<ASSIGN   7918<<ASSIGN
B$$DESCR.BASE
      6199**DCL      7661>>IF
B$$DESCR.BOUND
      6195**DCL      7661>>IF
B$$DESCR.FLGS
      6196**DCL      7522<<ASSIGN   7522>>ASSIGN   7660>>IF       7814>>IF
B$$DESCR.TYP
      6198**DCL      7521<<ASSIGN
B$$DESCR.WSR
      6197**DCL      7677>>IF       7835>>IF       7859>>IF       7922>>IF
B$DO.ECCINFO
       445**DCL       446--REDEF
B$ECCB.ERR
      5498**DCL      7903>>ASSIGN
B$ECCB.FLAGS.ERRSET
      5499**DCL      7897>>IF
B$ECCB.FLTFLG.HDWR
      5502**DCL      7897>>IF
B$ECCB.FLTFLG.HREG
      5502**DCL      7824>>IF       7844>>IF       7901>>IF
B$ECCBI.ECIC
      5505**DCL      7846>>ASSIGN
B$ECCBI.FLAGS
      5505**DCL      7830>>IF       7830>>IF
B$FLT.ERR.ERR#
      5454**DCL      5455--REDEF
PL6.E3A0      #001=HFB$CONNECT File=HFB$FPR.:E05TSI                              TUE 07/29/97 22:22 Page:128  
B$FLT.SSFRAME.FCODE
      5447**DCL      7703>>IF       7814>>IF       7814>>IF       7814>>IF
B$JIT.ERR
      4560**DCL      7672<<ASSIGN   7823<<ASSIGN   7843<<ASSIGN   7854<<ASSIGN   7907<<ASSIGN   7915<<ASSIGN
      7920<<ASSIGN
B$JIT.ERR.MID
      4561**DCL      4561--REDEF
B$JIT.ERR.SEV
      4561**DCL      7921<<ASSIGN
B$JIT.JRESPEAK
      4651**DCL      4652--REDEF
B$JIT.JUNK2
      4738**DCL      7814>>IF
B$JIT.PCC
      4648**DCL      7639<<ASSIGN   7639>>ASSIGN
B$JIT.PPC
      4650**DCL      7640<<ASSIGN   7640>>ASSIGN   7641>>ASSIGN
B$JIT.PRIV.ACTIVE
      4561**DCL      7964>>IF
B$JIT$
      6340**DCL      4555--IMP-PTR  7639>>ASSIGN   7639>>ASSIGN   7640>>ASSIGN   7640>>ASSIGN   7641>>ASSIGN
      7672>>ASSIGN   7814>>IF       7823>>ASSIGN   7843>>ASSIGN   7854>>ASSIGN   7907>>ASSIGN   7915>>ASSIGN
      7920>>ASSIGN   7921>>ASSIGN   7964>>IF
B$LS$
      6350**DCL      7523>>ASSIGN   7713>>ASSIGN   7714>>ASSIGN   7725>>ASSIGN   7788>>ASSIGN   7793>>ASSIGN
      7934>>ASSIGN   7935>>ASSIGN   7937>>ASSIGN
B$MAP
        56**DCL      7642<<ASSIGN   7642>>ASSIGN
B$MAP.RPN
        57**DCL      7644<<ASSIGN   7644>>ASSIGN   7644<<ASSIGN
B$MAP.SCTRL
        58**DCL        59--REDEF
B$MISC$
      6348**DCL      7716>>ASSIGN   7936>>ASSIGN
B$MLS.MAGICAS
      7326**DCL      7523<<ASSIGN
PL6.E3A0      #001=HFB$CONNECT File=HFB$FPR.:E05TSI                              TUE 07/29/97 22:22 Page:129  
B$MLS.MAGICSS
      7324**DCL      7788>>ASSIGN   7793<<ASSIGN
B$MLS.MISC
      6877**DCL      7713>>ASSIGN   7714<<ASSIGN   7725<<ASSIGN   7934>>ASSIGN   7935<<ASSIGN   7937<<ASSIGN
B$PPUT$
      6349**DCL      7636>>ASSIGN   7637>>ASSIGN   7638>>ASSIGN
B$SS
       123**DCL      7790<<ASSIGN   7790>>ASSIGN
B$SS.ASR
       175**DCL      7519>>ASSIGN
B$SS.ASR.BOUND
       176**DCL      7526>>IF
B$SS.ASR.FLAGS
       177**DCL      7513>>IF       7513>>IF
B$SS.ASR.WSR
       178**DCL      7513>>IF
B$SS.EWSQ#
       166**DCL      7513>>IF       7620>>IF       7620>>IF       7656>>IF
B$SS.FC
       156**DCL      7781>>ASSIGN   7905>>ASSIGN   7944>>ASSIGN
B$SS.IC
       134**DCL      7433>>ASSIGN   7716>>ASSIGN   7936>>ASSIGN   7940>>ASSIGN   7963<<ASSIGN   7963>>ASSIGN
B$SS.IR
       135**DCL      7939>>ASSIGN
B$SS.IR.MIR
       148**DCL      7538<<ASSIGN   7648<<ASSIGN   7961>>IF       7966<<ASSIGN
B$SS.ISR
       169**DCL      7714>>ASSIGN   7935>>ASSIGN   7941>>ASSIGN
B$SS.ISR.WSR
       172**DCL      7434>>ASSIGN   7513>>IF       7673>>IF       7703>>IF       7814>>IF       7833>>IF
      7856>>IF       7912>>IF
B$SS.RVA
       167**DCL       168--REDEF    7628>>IF       7628>>IF       7656>>IF       7661>>IF       7669>>IF
B$U.MISC
       424**DCL       425--REDEF
B$U.PCT
PL6.E3A0      #001=HFB$CONNECT File=HFB$FPR.:E05TSI                              TUE 07/29/97 22:22 Page:130  
       408**DCL      7641<<ASSIGN
B$ULNK.DS1
      3953**DCL      7659--ASSIGN
B$UPT$
      6351**DCL      7642>>ASSIGN   7642>>ASSIGN   7644>>ASSIGN   7644>>ASSIGN
B$USER.MISC
       500**DCL       501--REDEF
B$USER.SYSID
       495**DCL      7932>>ASSIGN
B$USERLS$
      6352**DCL      7659>>ASSIGN
B$USRT$
       512**DCL      7932>>ASSIGN
B$WSQ0PT$
       114**DCL      7644>>ASSIGN
B_MPT.AS
      6508**DCL      6511--REDEF
B_MPT.AS$
      6511**DCL      7530>>ASSIGN
B_MPT.ASDESC
      6540**DCL      6544--REDEF
B_MPT.ECCB
      6523**DCL      6526--REDEF
B_MPT.ECCB$
      6526**DCL      7824>>IF       7830>>IF       7830>>IF       7844>>IF       7846>>ASSIGN   7897>>IF
      7897>>IF       7901>>IF       7903>>ASSIGN
B_MPT.ECCBDESC
      6558**DCL      6562--REDEF
B_MPT.ECCBDESC$
      6562**DCL      7814>>IF
B_MPT.LS
      6503**DCL      6506--REDEF
B_MPT.LSDESC
      6534**DCL      6538--REDEF
B_MPT.PS
      6513**DCL      6516--REDEF
PL6.E3A0      #001=HFB$CONNECT File=HFB$FPR.:E05TSI                              TUE 07/29/97 22:22 Page:131  
B_MPT.PSDESC
      6546**DCL      6550--REDEF
B_MPT.SS
      6498**DCL      6501--REDEF
B_MPT.SS$
      6501**DCL      7433>>ASSIGN   7434>>ASSIGN   7513>>IF       7513>>IF       7513>>IF       7513>>IF
      7513>>IF       7519>>ASSIGN   7526>>IF       7526>>IF       7526>>IF       7526>>IF       7530>>ASSIGN
      7530>>ASSIGN   7531>>IF       7538>>ASSIGN   7620>>IF       7620>>IF       7628>>IF       7628>>IF
      7648>>ASSIGN   7656>>IF       7656>>IF       7661>>IF       7669>>IF       7673>>IF       7703>>IF
      7703>>IF       7714>>ASSIGN   7716>>ASSIGN   7781>>ASSIGN   7790>>ASSIGN   7790>>ASSIGN   7798>>IF
      7798>>IF       7801>>ASSIGN   7801>>ASSIGN   7802>>ASSIGN   7814>>IF       7814>>IF       7814>>IF
      7814>>IF       7833>>IF       7848<>CALL     7856>>IF       7905>>ASSIGN   7906<>CALL     7912>>IF
      7935>>ASSIGN   7936>>ASSIGN   7939>>ASSIGN   7940>>ASSIGN   7941>>ASSIGN   7944>>ASSIGN   7961>>IF
      7963>>ASSIGN   7963>>ASSIGN   7966>>ASSIGN
B_MPT.SSDESC
      6528**DCL      6532--REDEF
B_MPT.SSDESC$
      6532**DCL      7677>>IF       7835>>IF       7859>>IF       7922>>IF
B_MPT.TCB
      6518**DCL      6521--REDEF
B_MPT.TCB$
      6521**DCL      7848<>CALL     7906<>CALL
B_MPT.TCBDESC
      6552**DCL      6556--REDEF
CHECKED IN PROCEDURE VISIBLE_
      7778**LABEL    7775--GOTO
CNCTEV
      6257**DCL      7436>>ASSIGN
CNCTEV.TIME
      6263**DCL      7430<>CALL
CNCTEV.WORD1
      6258**DCL      7432<<ASSIGN
CNCTEV.WORD1.IC
      6259**DCL      7433<<ASSIGN
CNCTEV.WORD1.PORT
      6261**DCL      7435<<ASSIGN
PL6.E3A0      #001=HFB$CONNECT File=HFB$FPR.:E05TSI                              TUE 07/29/97 22:22 Page:132  
CNCTEV.WORD1.WSR
      6260**DCL      7434<<ASSIGN
DESCR
      7395**DCL      7530>>ASSIGN
DUMGATE
      6316**DCL      7424<<ASSIGN   7459<>CALL     7491<>CALL
EASF
      6264**DCL      7672>>ASSIGN
ECC
      6252**DCL      7847<<ASSIGN   7848<>CALL     7904<<ASSIGN   7906<>CALL
ECCB_FINDEX
      6285**DCL      7782>>ASSIGN
ECCB_FTYPE
      6288**DCL      7783>>ASSIGN
ECCB_SUBC
      6291**DCL      7784>>ASSIGN   7905>>ASSIGN
EL$PROCERR
      6073**DCL      7931<<ASSIGN   7951--ASSIGN   7952<>CALL     7955<>CALL     7955--CALL
EL$PROCERR.FC
      6074**DCL      7944<<ASSIGN
EL$PROCERR.FLTREG
      6073**DCL      7948<<ASSIGN
EL$PROCERR.HRSIZE
      6079**DCL      7950<<ASSIGN
EL$PROCERR.IC
      6073**DCL      7940<<ASSIGN
EL$PROCERR.INST
      6074**DCL      7936<<ASSIGN
EL$PROCERR.IR
      6073**DCL      7939<<ASSIGN
EL$PROCERR.ISR
      6073**DCL      7941<<ASSIGN
EL$PROCERR.PORT#
      6073**DCL      7949<<ASSIGN
EL$PROCERR.PROCTYPE
      6073**DCL      7942<<ASSIGN
PL6.E3A0      #001=HFB$CONNECT File=HFB$FPR.:E05TSI                              TUE 07/29/97 22:22 Page:133  
EL$PROCERR.RSW2
      6074**DCL      7943<<ASSIGN
EL$PROCERR.SSSIZE
      6074**DCL      7945<<ASSIGN
EL$PROCERR.SYSID
      6073**DCL      7932<<ASSIGN
ELA$SYSLOG
      6317**DCL-ENT  7952--CALL     7955--CALL
ERROR
      6256**DCL      7952<>CALL     7955<>CALL
FAULTING_INST
      6353**DCL      7716>>ASSIGN   7936>>ASSIGN
FCODE IN PROCEDURE VISIBLE_
      7774**DCL      7781<<ASSIGN   7782>>ASSIGN   7783>>ASSIGN   7784>>ASSIGN   7787>>IF       7796>>IF
FINDEX IN PROCEDURE VISIBLE_
      7772**DCL      7782<<ASSIGN   7806>>IF       7830>>IF
FINFO
      6209**DCL        14--PROC     7499--ENTRY    7512--ENTRY    7555--ENTRY    7590--ENTRY    7618--ENTRY
      7701--ENTRY    7848<>CALL     7906<>CALL     7946--IF
FINFO.FLTREG
      6215**DCL      7948>>ASSIGN
FINFO.FLTREG.CMD_SLAVE
      6218**DCL      7594>>IF
FINFO.FLTREG.MEM_ILL_ACT
      6233**DCL      6238--REDEF    7594>>IF
FINFO.FLTREG.MEM_ILL_ACT.PORT_A
      6234**DCL      7557>>IF       7557>>IF       7565>>IF       7594>>IF       7703>>IF
FINFO.FLTREG.MEM_ILL_ACT.PORT_B
      6235**DCL      7557>>IF       7557>>IF       7565>>IF       7594>>IF       7703>>IF
FINFO.FLTREG.MEM_ILL_ACT.PORT_C
      6236**DCL      7565>>IF       7594>>IF       7703>>IF
FINFO.FLTREG.MEM_ILL_ACT.PORT_D
      6237**DCL      7565>>IF       7594>>IF       7703>>IF
FINFO.FLTREG.MEM_ILL_ACT_ELS.PORT_AB
      6239**DCL      7594>>IF
FINFO.FLTREG.STR_NEA
PL6.E3A0      #001=HFB$CONNECT File=HFB$FPR.:E05TSI                              TUE 07/29/97 22:22 Page:134  
      6220**DCL      7565>>IF
FINFO.JERR
      6246**DCL      7823>>ASSIGN   7843>>ASSIGN   7854>>ASSIGN   7907>>ASSIGN   7920>>ASSIGN
FINFO.P#
      6251**DCL      7785>>ASSIGN   7825<<ASSIGN   7845<<ASSIGN   7855<<ASSIGN   7894>>ASSIGN   7902<<ASSIGN
      7911<<ASSIGN   7950>>ASSIGN   7951<<ASSIGN   7951>>ASSIGN   7952<>CALL     7953<<ASSIGN
FINFO.PORT#
      6210**DCL      7921>>ASSIGN   7949>>ASSIGN
FINFO.SUBCODE
      6214**DCL      7784<<ASSIGN   7905<<ASSIGN
FOUND
      6307**DCL      7524<<ASSIGN   7532<<ASSIGN   7535>>IF
FTYPE IN PROCEDURE VISIBLE_
      7773**DCL      7783<<ASSIGN   7806>>IF       7827>>ASSIGN   7830>>IF       7846>>ASSIGN   7847>>ASSIGN
HDWRLOG
      7929**PROC     7733--CALL     7896--CALL
HFB$SS.DRN
      7386**DCL      7530<<ASSIGN
HFB$SS.DRN.BASE
      7391**DCL      7392--REDEF    7802<<ASSIGN
HFB$SS.DRN.BASE_R.BIT2
      7393**DCL      7798>>IF
HFB$SS.DRN.FLAGS
      7388**DCL      7526>>IF       7531>>IF       7801<<ASSIGN   7801>>ASSIGN
HFB$SS.DRN.TYPE
      7390**DCL      7798>>IF
HFB$SS.PRN.D
      7385**DCL      7526>>IF       7530>>ASSIGN
HFB$SS.PRN.S
      7384**DCL      7526>>IF
HFC$ASSOCCLR
      6319**DCL-ENT  7478--CALL
HFC$CACHECLR
      6318**DCL-ENT  7477--CALL     7540--CALL
HFC$DIS
      6320**DCL-ENT  7448--CALL     7464--CALL     7483--CALL
PL6.E3A0      #001=HFB$CONNECT File=HFB$FPR.:E05TSI                              TUE 07/29/97 22:22 Page:135  
HFC$LOCK
      5664**DCL-ENT  7428--CALL     7459--CALL
HFC$MAKECPU
      6321**DCL-ENT  7447--CALL
HFC$RCW
      6322**DCL-ENT  7439--CALL
HFC$UNLOCK
      5664**DCL-ENT  7441--CALL     7491--CALL
HRDCODE
      6280**DCL      7915>>ASSIGN   7919>>ASSIGN
HW_FLTIC_OK
      5548**DCL      7961>>IF
HW_WSQ0PT
      5545**DCL      7644>>IF
H_CNCTEVBF
      5533**DCL      7436<<ASSIGN
H_CNCTEVGATE
      5533**DCL      7428<>CALL     7441<>CALL
H_CNCTEVX
      5533**DCL      7436>>ASSIGN   7437<<ASSIGN   7437>>ASSIGN   7438>>IF       7438<<ASSIGN
H_CNNCTMLBX
      5515**DCL      7432>>ASSIGN   7452<<ASSIGN   7479<<ASSIGN
H_CNNCTMLBX.CLEAR
      5515**DCL      7475>>IF
H_CNNCTMLBX.MAKE
      5516**DCL      7445>>IF
H_CNNCTMLBX.PAUSE
      5516**DCL      7481>>IF
H_CNNCTMLBX.RELIEF
      5515**DCL      7450>>IF
H_CNNCTMLBX.SCR
      5516**DCL      7467>>IF
H_CNNCTMLBX.TIME
      5516**DCL      7462>>IF
H_RPM_FLG
      5519**DCL      7657>>IF
PL6.E3A0      #001=HFB$CONNECT File=HFB$FPR.:E05TSI                              TUE 07/29/97 22:22 Page:136  
H_RSW2
      5530**DCL      7943>>ASSIGN
H_S1000_FLG
      5519**DCL      7657>>IF       7786>>IF
I
      6302**DCL      7525<<DOINDEX  7526>>IF       7526>>IF       7526>>IF       7530>>ASSIGN   7530>>ASSIGN
      7531>>IF       7658<<DOINDEX  7659>>ASSIGN   7715<<DOINDEX  7716>>ASSIGN   7797<<DOINDEX  7798>>IF
      7798>>IF       7801>>ASSIGN   7801>>ASSIGN   7802>>ASSIGN
IC
      6294**DCL      6295--REDEF    7846<<ASSIGN   7848<>CALL     7903<<ASSIGN   7906<>CALL
ICFIX
      7959**PROC     7537--CALL     7623--CALL     7646--CALL     7671--CALL     7780--CALL     7895--CALL
INST
      6303**DCL      7716<<ASSIGN
INST.OP_CODE
      6305**DCL      7717>>IF
IRM$REBOOT
      6330**DCL-ENT  7471--CALL
JSS$FIXLASR
      6334**DCL-ENT  7683--CALL
MAGICS
      6202**DCL        14--PROC     7499--ENTRY    7512--ENTRY    7555--ENTRY    7590--ENTRY    7618--ENTRY
      7701--ENTRY    7838<>CALL
MISCDESC
      6309**DCL      6310--REDEF    6316--REDEF    7519<<ASSIGN   7520--ASSIGN   7523>>ASSIGN   7713<<ASSIGN
      7725>>ASSIGN   7788<<ASSIGN   7793>>ASSIGN   7934<<ASSIGN   7937>>ASSIGN
MISCDESC_R.BASE
      6315**DCL      7789>>IF       7791<<ASSIGN   7791>>ASSIGN
MISCDESC_R.BOUND
      6311**DCL      7792<<ASSIGN   7792>>ASSIGN
MM$DESC.BOUND
       985**DCL       986--REDEF
MM$DESC.FLGS
       986**DCL       986--REDEF
MM$PPUT
       972**DCL      7636<<ASSIGN
PL6.E3A0      #001=HFB$CONNECT File=HFB$FPR.:E05TSI                              TUE 07/29/97 22:22 Page:137  
MM$PPUT.USER
       973**DCL      7637<<ASSIGN
MM$PPUT.USER#
       974**DCL       974--REDEF    7638<<ASSIGN
MMB$GPP
      6335**DCL-ENT  7633--CALL
MM_BYP$
       905**DCL       905--IMP-PTR
MON_NOT_RUNNING IN PROCEDURE VISIBLE_
      7843**LABEL    7834--GOTO
MPFVIS
      7687**LABEL    7664--GOTO     7667--GOTO
P#
      6296**DCL      7785<<ASSIGN   7855>>ASSIGN   7894<<ASSIGN   7911>>ASSIGN   7953>>ASSIGN
P$
      6308**DCL      7520<<ASSIGN   7521>>ASSIGN   7522>>ASSIGN   7522>>ASSIGN   7659<<ASSIGN   7660>>IF
      7661>>IF       7661>>IF
PGEFLTACT
      7623**LABEL    7657--GOTO     7662--GOTO
PRTY_EXIT
      7725**LABEL    7721--GOTO
S$CU$
       511**DCL      7641>>ASSIGN
SCODE
      6203**DCL        14--PROC     7499--ENTRY    7512--ENTRY    7555--ENTRY    7590--ENTRY    7618--ENTRY
      7701--ENTRY    7827<<ASSIGN   7839<>CALL     7919<<ASSIGN
SCODE.SEV
      6207**DCL      7678<<ASSIGN   7680<<ASSIGN   7837<<ASSIGN   7860<<ASSIGN   7861<<ASSIGN   7923<<ASSIGN
      7924<<ASSIGN
SC_HFERR
      6338**DCL-ENT  7808--CALL
SSC$SASYNC
      6324**DCL-ENT  7426--CALL     7455--CALL     7493--CALL     7631--CALL
SSC$STIMR
      6325**DCL-ENT  7651--CALL
SSC$STOPPED
PL6.E3A0      #001=HFB$CONNECT File=HFB$FPR.:E05TSI                              TUE 07/29/97 22:22 Page:138  
      6331**DCL-ENT  7443--CALL
SSS$CACHE
      6327**DCL-ENT  7454--CALL     7489--CALL
SSS$CACHEBP
      6326**DCL-ENT  7431--CALL     7444--CALL
SSS$EOMTIME
      6333**DCL-ENT  7430--CALL
SSS$STOP
      6328**DCL-ENT  7473--CALL
SSS$UPDITIME
      6329**DCL-ENT  7465--CALL
SST$SSFTCB
      6332**DCL-ENT  7848--CALL     7906--CALL
STIMR
      6295**DCL      7425<<ASSIGN   7485>>IF
SYSERR
      7893**PROC     7561--CALL     7570--CALL     7592--CALL     7602--CALL     7702--CALL
S_CUN
      6342**DCL      7638>>ASSIGN
S_MPSTATE
      6345**DCL      7469<<ASSIGN
S_PCU
      6344**DCL      7932>>ASSIGN
S_PNO
      6341**DCL      7432>>ASSIGN   7435>>ASSIGN   7445>>IF       7450>>IF       7452>>ASSIGN   7462>>IF
      7467>>IF       7469>>ASSIGN   7470>>IF       7475>>IF       7479>>ASSIGN   7481>>IF       7556>>IF
      7565>>IF       7565>>IF       7565>>IF       7591>>IF       7594>>IF       7594>>IF       7594>>IF
      7594>>IF       7594>>IF       7703>>IF       7932>>ASSIGN   7942>>ASSIGN   7943>>ASSIGN
S_PORTNR
      6346**DCL      7435>>ASSIGN
S_PTYPE
      6347**DCL      7556>>IF       7565>>IF       7565>>IF       7565>>IF       7591>>IF       7594>>IF
      7594>>IF       7594>>IF       7594>>IF       7594>>IF       7703>>IF       7942>>ASSIGN
S_RETRY
      5560**DCL      7703>>IF       7703>>IF       7719<<ASSIGN   7719>>ASSIGN
S_TIMR
PL6.E3A0      #001=HFB$CONNECT File=HFB$FPR.:E05TSI                              TUE 07/29/97 22:22 Page:139  
      6343**DCL      7425>>ASSIGN   7630>>ASSIGN   7677>>IF       7859>>IF       7922>>IF
S_TIMR_SAV
      6301**DCL      7630<<ASSIGN   7651<>CALL
TCBFULL IN PROCEDURE SYSERR
      7907**LABEL    7906--CALLALT
TCB_FULL IN PROCEDURE VISIBLE_
      7848**LABEL    7835--GOTO     7848--CALLALT
UDE$FPTCHK
      6337**DCL-ENT  7839--CALL
UDN$MGRES
      6336**DCL-ENT  7838--CALL
VISIBLE IN PROCEDURE VISIBLE_
      7776**ENTRY    7562--CALL     7571--CALL     7601--CALL     7687--CALL
VISIBLE_
      7771**PROC     7500--CALL     7544--CALL

PL6.E3A0      #002=HFB$EDAC File=HFB$FPR.:E05TSI                                 TUE 07/29/97 22:25 Page:140  
     1064        1        /*T***********************************************************/
     1065        2        /*T*                                                         */
     1066        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
     1067        4        /*T*                                                         */
     1068        5        /*T***********************************************************/
     1069        6        /*F* NAME:        HFB$EDAC
     1070        7             PURPOSE:     Process memory EDAC errors.   */
     1071        8        /*D* NAME:        HFB$EDAC
     1072        9             DESCRIPTION: This subroutine is entered once per minute on the
     1073       10                          master CPU only.  The EDAC syndrome register in each
     1074       11                          memory store unit is read.  If the syndrome register
     1075       12                          is non-zero, a table of previous EDAC errors is
     1076       13                          checked to see if this is the first error with this
     1077       14                          syndrome since the last disk boot.  If this is the
     1078       15                          first error of this type, we go to HFB$WASH to wash
     1079       16                          the memory chip.  The EDAC error is then logged in
     1080       17                          the error log.    */
     1081       18        HFB$EDAC: PROC;
     1082       19        /*                                                                    */
     1083       20        %INCLUDE M_INFO_C;
     1084      160        %INCLUDE B_STRINGS_C;
     1085      289        %INCLUDE EL_SUBS_C;
     1086      373        %INCLUDE EL$TABLES;
     1087      696        %INCLUDE SS_SCHED_R;
     1088      739        %INCLUDE HF_DATA_R;
     1089      782        /*                                                                    */
     1090      783    1   DCL PG# UBIN;
     1091      784    1   DCL I UBIN;
     1092      785    1   DCL J UBIN;
     1093      786    1   DCL ERRCDE UBIN;
     1094      787    1   DCL UTS UBIN;
     1095      788    1   DCL IX UBIN;
     1096      789    1   DCL 1 SYND,
     1097      790    1         2 * BIT(36) UNAL,
     1098      791    1         2 S,
     1099      792    1           3 * BIT(14) UNAL,
     1100      793    1           3 PRT# UBIN(2) UNAL,
PL6.E3A0      #002=HFB$EDAC File=HFB$FPR.:E05TSI                                 TUE 07/29/97 22:25 Page:141  
     1101      794    1           3 STR# UBIN(2) UNAL,
     1102      795    1         2 *  BIT(18) UNAL;
     1103      796    1   DCL MM_PCORE UBIN SYMREF;
     1104      797    1   DCL B$WINDOW$ PTR SYMREF;
     1105      798    1   DCL S_PNO UBIN SYMREF;
     1106      799        /*                                                                    */
     1107      800    1   DCL HFC$RSCR ENTRY(3);
     1108      801    1   DCL MME$CVM ENTRY(4) ALTRET;
     1109      802    1   DCL ELA$SYSLOG ENTRY(6) ALTRET;
     1110      803    1   DCL SSC$MONTIMR ENTRY(3);
     1111      804    1   DCL SSS$CURTIME ENTRY(1);
     1112      805    1   DCL HFB$WASH ENTRY(3);
     1113      806        /*                                                                    */
     1114      807        %EL$EDAC (STCLASS=AUTO);
     1115      816        /*                                                                    */
     1116      817        /*                                                                    */
     1117      818        /*                                                                    */
     1118      819    1      CALL SSS$CURTIME(UTS);
     1119      820    2      DO I = 0 TO H_MAXSU#;
     1120      821    2           CALL MME$CVM(%MONWSQ,%WINDOWLO,H_STOREUNIT.FIRST_ADDR(I)/1024,ERRCDE);
     1121      822    2           CALL HFC$RSCR(B$WINDOW$,48+MOD(H_STOREUNIT.FIRST_ADDR(I),8),
     1122      823    2             EL$EDAC.STORE_MODE);
     1123      824    2           IF EL$EDAC.STORE_MODE.SYNDROME THEN
     1124      825    3           DO;
     1125      826    3                IX=0;
     1126      827    3                SYND=EL$EDAC.STORE_MODE;
     1127      828    3                SYND.S.PRT#=H_STOREUNIT.PORT#(I);
     1128      829    3                SYND.S.STR#=H_STOREUNIT.STORE_UNIT#(I);
     1129      830    4                DO J = 0 TO 63;
     1130      831    4                     IF SYND.S=H_EDACHIST.SYND(J) THEN
     1131      832    5                     DO;
     1132      833    5                          H_EDACHIST.CT(J)=H_EDACHIST.CT(J)+1;
     1133      834    5                          IF H_EDACHIST.CT(J)=0
     1134      835    5                          THEN H_EDACHIST.CT(J)=262143;
     1135      836    5                          H_EDACUTS(J)=UTS;
     1136      837    5                          EL$EDAC.WASHED='0'B;
     1137      838    5                          EL$EDAC.WASHED_STORE_MODE='0'B;
PL6.E3A0      #002=HFB$EDAC File=HFB$FPR.:E05TSI                                 TUE 07/29/97 22:25 Page:142  
     1138      839    5                          GOTO LOGEDAC;
     1139      840    5                          END;
     1140      841    4                     ELSE
     1141      842    4                          IF (H_EDACHIST.CT(J) < H_EDACHIST.CT(IX)) OR
     1142      843    4                            (H_EDACHIST.CT(J) = H_EDACHIST.CT(IX) AND
     1143      844    4                            H_EDACUTS(J) < H_EDACUTS(IX)) THEN
     1144      845    4                               IX=J;
     1145      846    4                     END;
     1146      847    3                J=IX;
     1147      848    3                H_EDACUTS(J)=UTS;
     1148      849    3                H_EDACHIST.CT(J)=1;
     1149      850    3                H_EDACHIST.SYND(J)=SYND.S;
     1150      851    3                EL$EDAC.WASHED='1'B;
     1151      852    3                CALL HFB$WASH(EL$EDAC.STORE_MODE,I,EL$EDAC.WASHED_STORE_MODE);
     1152      853    3   LOGEDAC:     CALL MME$CVM(%MONWSQ,%WINDOWLO,
     1153      854    3                  H_PORT_FIRST_ADDR(H_STOREUNIT.PORT#(I))/1024,ERRCDE);
     1154      855    3                CALL HFC$RSCR(B$WINDOW$,
     1155      856    3                  MOD(H_PORT_FIRST_ADDR(H_STOREUNIT.PORT#(I)),8),
     1156      857    3                  EL$EDAC.SCU_MODE);
     1157      858    3                CALL HFC$RSCR(B$WINDOW$,
     1158      859    3                  8+MOD(H_PORT_FIRST_ADDR(H_STOREUNIT.PORT#(I)),8),
     1159      860    3                  EL$EDAC.SCU_CONFIG);
     1160      861    3                EL$EDAC.CPU_CONFIG=H_CPU_CONFIG;
     1161      862    3                EL$EDAC.ADDRESS=H_STOREUNIT.FIRST_ADDR(I);
     1162      863    3                EL$EDAC.PORT#=H_STOREUNIT.PORT#(I);
     1163      864    3                EL$EDAC.STORE_UNIT=H_STOREUNIT.STORE_UNIT#(I);
     1164      865    3                EL$EDAC.SCU_PORT#=S_PORTNR(S_PNO);
     1165      866    3                EL$EDAC.ERR_COUNT=H_EDACHIST.CT(J);
     1166      867    3                CALL ELA$SYSLOG(EL_EDAC,EL$EDAC,SIZEW(EL$EDAC),'0'B,1,ERRCDE);
     1167      868    3                END;
     1168      869    2           END;
     1169      870    1   EDAC1: CALL SSC$MONTIMR(6000,ENTADDR(HFB$EDAC),0);
     1170      871    1      RETURN;
     1171      872    1   END;
     1172      873        %EOD;

PL6.E3A0      #002=HFB$EDAC File=HFB$FPR.:E05TSI                                 TUE 07/29/97 22:25 Page:143  
--  Include file information  --

   HF_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   SS_CNTRLD_R.:E05TOU  cannot be made into a system file and is referenced.
   SS_CNTRL_R.:E05TOU  cannot be made into a system file and is referenced.
   SS_SCHED_R.:E05TOU  cannot be made into a system file and is referenced.
   EL$TABLES.:E05TOU  is referenced.
   EL_SUBS_C.:E05TOU  is referenced.
   B_STRINGS_C.:E05TOU  is referenced.
   M_INFO_C.:E05TOU  is referenced.
      No diagnostics issued in procedure HFB$EDAC.

   Procedure HFB$EDAC requires 225 words for executable code.
   Procedure HFB$EDAC requires 28 words of local(AUTO) storage.

PL6.E3A0      #002=HFB$EDAC File=HFB$FPR.:E05TSI                                 TUE 07/29/97 22:25 Page:144  

 Object Unit name= HFB$EDAC                                   File name= HFB$FPR.:E05TOU
 UTS= JUL 29 '97 22:25:22.12 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Proc  even  none   225    341  HFB$EDAC
    1  RoData even  none    12     14  HFB$EDAC

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     0      0   yes            yes      Std        0  HFB$EDAC

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       1 SSS$CURTIME
 yes     yes           Std       4 MME$CVM
         yes           Std       3 SSC$MONTIMR
         yes           Std       3 HFC$RSCR
         yes           Std       3 HFB$WASH
 yes     yes           Std       6 ELA$SYSLOG
         yes           Std       0 HFB$EDAC
                       nStd      0 X66_AUTO_0
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET
PL6.E3A0      #002=HFB$EDAC File=HFB$FPR.:E05TSI                                 TUE 07/29/97 22:25 Page:145  

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     S_PORTNR                              H_STOREUNIT                           H_MAXSU#
     H_CPU_CONFIG                          H_PORT_FIRST_ADDR                     H_EDACHIST
     H_EDACUTS                             B$WINDOW$                             S_PNO
     B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
PL6.E3A0      #002=HFB$EDAC File=HFB$FPR.:E05TSI                                 TUE 07/29/97 22:25 Page:146  


     1064        1        /*T***********************************************************/
     1065        2        /*T*                                                         */
     1066        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
     1067        4        /*T*                                                         */
     1068        5        /*T***********************************************************/
     1069        6        /*F* NAME:        HFB$EDAC
     1070        7             PURPOSE:     Process memory EDAC errors.   */
     1071        8        /*D* NAME:        HFB$EDAC
     1072        9             DESCRIPTION: This subroutine is entered once per minute on the
     1073       10                          master CPU only.  The EDAC syndrome register in each
     1074       11                          memory store unit is read.  If the syndrome register
     1075       12                          is non-zero, a table of previous EDAC errors is
     1076       13                          checked to see if this is the first error with this
     1077       14                          syndrome since the last disk boot.  If this is the
     1078       15                          first error of this type, we go to HFB$WASH to wash
     1079       16                          the memory chip.  The EDAC error is then logged in
     1080       17                          the error log.    */
     1081       18        HFB$EDAC: PROC;

     18  0 000000   000000 700200 xent  HFB$EDAC     TSX0  ! X66_AUTO_0
         0 000001   000034 000000                    ZERO    28,0

     1082       19        /*                                                                    */
     1083       20        %INCLUDE M_INFO_C;
     1084      160        %INCLUDE B_STRINGS_C;
     1085      289        %INCLUDE EL_SUBS_C;
     1086      373        %INCLUDE EL$TABLES;
     1087      696        %INCLUDE SS_SCHED_R;
     1088      739        %INCLUDE HF_DATA_R;
     1089      782        /*                                                                    */
     1090      783    1   DCL PG# UBIN;
     1091      784    1   DCL I UBIN;
     1092      785    1   DCL J UBIN;
     1093      786    1   DCL ERRCDE UBIN;
     1094      787    1   DCL UTS UBIN;
     1095      788    1   DCL IX UBIN;
PL6.E3A0      #002=HFB$EDAC File=HFB$FPR.:E05TSI                                 TUE 07/29/97 22:25 Page:147  
     1096      789    1   DCL 1 SYND,
     1097      790    1         2 * BIT(36) UNAL,
     1098      791    1         2 S,
     1099      792    1           3 * BIT(14) UNAL,
     1100      793    1           3 PRT# UBIN(2) UNAL,
     1101      794    1           3 STR# UBIN(2) UNAL,
     1102      795    1         2 *  BIT(18) UNAL;
     1103      796    1   DCL MM_PCORE UBIN SYMREF;
     1104      797    1   DCL B$WINDOW$ PTR SYMREF;
     1105      798    1   DCL S_PNO UBIN SYMREF;
     1106      799        /*                                                                    */
     1107      800    1   DCL HFC$RSCR ENTRY(3);
     1108      801    1   DCL MME$CVM ENTRY(4) ALTRET;
     1109      802    1   DCL ELA$SYSLOG ENTRY(6) ALTRET;
     1110      803    1   DCL SSC$MONTIMR ENTRY(3);
     1111      804    1   DCL SSS$CURTIME ENTRY(1);
     1112      805    1   DCL HFB$WASH ENTRY(3);
     1113      806        /*                                                                    */
     1114      807        %EL$EDAC (STCLASS=AUTO);
     1115      816        /*                                                                    */
     1116      817        /*                                                                    */
     1117      818        /*                                                                    */
     1118      819    1      CALL SSS$CURTIME(UTS);

    819  0 000002   200007 630500                    EPPR0   UTS,,AUTO
         0 000003   200026 450500                    STP0    EL$EDAC+11,,AUTO
         0 000004   200026 630500                    EPPR0   EL$EDAC+11,,AUTO
         0 000005   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 000006   000000 701000 xent               TSX1    SSS$CURTIME
         0 000007   000000 011000                    NOP     0

     1119      820    2      DO I = 0 TO H_MAXSU#;

    820  0 000010   200004 450100                    STZ     I,,AUTO
         0 000011   000321 710000 0                  TRA     s:869+3

     1120      821    2           CALL MME$CVM(%MONWSQ,%WINDOWLO,H_STOREUNIT.FIRST_ADDR(I)/1024,ERRCDE);
PL6.E3A0      #002=HFB$EDAC File=HFB$FPR.:E05TSI                                 TUE 07/29/97 22:25 Page:148  

    821  0 000012   200004 720100                    LXL0    I,,AUTO
         0 000013   000000 236010 xsym               LDQ     H_STOREUNIT,X0
         0 000014   000000 376000 1                  ANQ     0
         0 000015   000012 772000                    QRL     10
         0 000016   200026 756100                    STQ     EL$EDAC+11,,AUTO
         0 000017   200006 630500                    EPPR0   ERRCDE,,AUTO
         0 000020   200033 450500                    STP0    EL$EDAC+16,,AUTO
         0 000021   200026 631500                    EPPR1   EL$EDAC+11,,AUTO
         0 000022   200032 451500                    STP1    EL$EDAC+15,,AUTO
         0 000023   000002 237000 1                  LDAQ    2
         0 000024   200030 757100                    STAQ    EL$EDAC+13,,AUTO
         0 000025   200030 630500                    EPPR0   EL$EDAC+13,,AUTO
         0 000026   000022 631400 xsym               EPPR1   B_VECTNIL+18
         0 000027   000000 701000 xent               TSX1    MME$CVM
         0 000030   000000 011000                    NOP     0

     1121      822    2           CALL HFC$RSCR(B$WINDOW$,48+MOD(H_STOREUNIT.FIRST_ADDR(I),8),

    822  0 000031   200004 720100                    LXL0    I,,AUTO
         0 000032   000000 236010 xsym               LDQ     H_STOREUNIT,X0
         0 000033   000000 376000 1                  ANQ     0
         0 000034   000007 376007                    ANQ     7,DL
         0 000035   000060 036007                    ADLQ    48,DL
         0 000036   200026 756100                    STQ     EL$EDAC+11,,AUTO
         0 000037   200016 630500                    EPPR0   EL$EDAC+3,,AUTO
         0 000040   200031 450500                    STP0    EL$EDAC+14,,AUTO
         0 000041   200026 631500                    EPPR1   EL$EDAC+11,,AUTO
         0 000042   200030 451500                    STP1    EL$EDAC+13,,AUTO
         0 000043   000004 236000 1                  LDQ     4
         0 000044   200027 756100                    STQ     EL$EDAC+12,,AUTO
         0 000045   200027 630500                    EPPR0   EL$EDAC+12,,AUTO
         0 000046   000021 631400 xsym               EPPR1   B_VECTNIL+17
         0 000047   000000 701000 xent               TSX1    HFC$RSCR
         0 000050   000000 011000                    NOP     0

     1122      823    2             EL$EDAC.STORE_MODE);
PL6.E3A0      #002=HFB$EDAC File=HFB$FPR.:E05TSI                                 TUE 07/29/97 22:25 Page:149  
     1123      824    2           IF EL$EDAC.STORE_MODE.SYNDROME THEN

    824  0 000051   200017 236100                    LDQ     EL$EDAC+4,,AUTO
         0 000052   007760 316003                    CANQ    4080,DU
         0 000053   000316 600000 0                  TZE     s:869

     1124      825    3           DO;

     1125      826    3                IX=0;

    826  0 000054   200010 450100                    STZ     IX,,AUTO

     1126      827    3                SYND=EL$EDAC.STORE_MODE;

    827  0 000055   200016 237100                    LDAQ    EL$EDAC+3,,AUTO
         0 000056   200011 755100                    STA     SYND,,AUTO
         0 000057   200012 756100                    STQ     SYND+1,,AUTO

     1127      828    3                SYND.S.PRT#=H_STOREUNIT.PORT#(I);

    828  0 000060   200004 720100                    LXL0    I,,AUTO
         0 000061   000000 236010 xsym               LDQ     H_STOREUNIT,X0
         0 000062   000016 772000                    QRL     14
         0 000063   200012 676100                    ERQ     SYND+1,,AUTO
         0 000064   000014 376003                    ANQ     12,DU
         0 000065   200012 656100                    ERSQ    SYND+1,,AUTO

     1128      829    3                SYND.S.STR#=H_STOREUNIT.STORE_UNIT#(I);

    829  0 000066   000000 236010 xsym               LDQ     H_STOREUNIT,X0
         0 000067   000016 772000                    QRL     14
         0 000070   200012 676100                    ERQ     SYND+1,,AUTO
         0 000071   000003 376003                    ANQ     3,DU
         0 000072   200012 656100                    ERSQ    SYND+1,,AUTO

     1129      830    4                DO J = 0 TO 63;

PL6.E3A0      #002=HFB$EDAC File=HFB$FPR.:E05TSI                                 TUE 07/29/97 22:25 Page:150  
    830  0 000073   200005 450100                    STZ     J,,AUTO

     1130      831    4                     IF SYND.S=H_EDACHIST.SYND(J) THEN

    831  0 000074   200012 220100                    LDX0    SYND+1,,AUTO
         0 000075   200005 721100                    LXL1    J,,AUTO
         0 000076   000000 100011 xsym               CMPX0   H_EDACHIST,X1
         0 000077   000116 601000 0                  TNZ     s:842

     1131      832    5                     DO;

     1132      833    5                          H_EDACHIST.CT(J)=H_EDACHIST.CT(J)+1;

    833  0 000100   000000 722011 xsym               LXL2    H_EDACHIST,X1
         0 000101   000001 623012                    EAX3    1,X2
         0 000102   000000 443011 xsym               SXL3    H_EDACHIST,X1

     1133      834    5                          IF H_EDACHIST.CT(J)=0

    834  0 000103   000106 601000 0                  TNZ     s:836

     1134      835    5                          THEN H_EDACHIST.CT(J)=262143;

    835  0 000104   777777 222003                    LDX2    -1,DU
         0 000105   000000 442011 xsym               SXL2    H_EDACHIST,X1

     1135      836    5                          H_EDACUTS(J)=UTS;

    836  0 000106   200007 235100                    LDA     UTS,,AUTO
         0 000107   000000 755011 xsym               STA     H_EDACUTS,X1

     1136      837    5                          EL$EDAC.WASHED='0'B;

    837  0 000110   000005 236000 1                  LDQ     5
         0 000111   200023 356100                    ANSQ    EL$EDAC+8,,AUTO

     1137      838    5                          EL$EDAC.WASHED_STORE_MODE='0'B;
PL6.E3A0      #002=HFB$EDAC File=HFB$FPR.:E05TSI                                 TUE 07/29/97 22:25 Page:151  

    838  0 000112   000000 235003                    LDA     0,DU
         0 000113   000000 236003                    LDQ     0,DU
         0 000114   200024 757100                    STAQ    EL$EDAC+9,,AUTO

     1138      839    5                          GOTO LOGEDAC;

    839  0 000115   000170 710000 0                  TRA     LOGEDAC

     1139      840    5                          END;
     1140      841    4                     ELSE
     1141      842    4                          IF (H_EDACHIST.CT(J) < H_EDACHIST.CT(IX)) OR

    842  0 000116   200010 722100                    LXL2    IX,,AUTO
         0 000117   000000 236012 xsym               LDQ     H_EDACHIST,X2
         0 000120   777777 376007                    ANQ     -1,DL
         0 000121   200026 756100                    STQ     EL$EDAC+11,,AUTO
         0 000122   000000 236011 xsym               LDQ     H_EDACHIST,X1
         0 000123   777777 376007                    ANQ     -1,DL
         0 000124   200026 116100                    CMPQ    EL$EDAC+11,,AUTO
         0 000125   000135 604000 0                  TMI     s:845
         0 000126   000000 236011 xsym               LDQ     H_EDACHIST,X1
         0 000127   000000 676012 xsym               ERQ     H_EDACHIST,X2
         0 000130   777777 376007                    ANQ     -1,DL
         0 000131   000137 601000 0                  TNZ     s:846
         0 000132   000000 236011 xsym               LDQ     H_EDACUTS,X1
         0 000133   000000 116012 xsym               CMPQ    H_EDACUTS,X2
         0 000134   000137 603000 0                  TRC     s:846

     1142      843    4                            (H_EDACHIST.CT(J) = H_EDACHIST.CT(IX) AND
     1143      844    4                            H_EDACUTS(J) < H_EDACUTS(IX)) THEN
     1144      845    4                               IX=J;

    845  0 000135   200005 235100                    LDA     J,,AUTO
         0 000136   200010 755100                    STA     IX,,AUTO

     1145      846    4                     END;
PL6.E3A0      #002=HFB$EDAC File=HFB$FPR.:E05TSI                                 TUE 07/29/97 22:25 Page:152  

    846  0 000137   200005 235100                    LDA     J,,AUTO
         0 000140   000001 035007                    ADLA    1,DL
         0 000141   200005 755100                    STA     J,,AUTO
         0 000142   000100 115007                    CMPA    64,DL
         0 000143   000074 602000 0                  TNC     s:831

     1146      847    3                J=IX;

    847  0 000144   200010 236100                    LDQ     IX,,AUTO
         0 000145   200005 756100                    STQ     J,,AUTO

     1147      848    3                H_EDACUTS(J)=UTS;

    848  0 000146   200007 235100                    LDA     UTS,,AUTO
         0 000147   000000 755006 xsym               STA     H_EDACUTS,QL

     1148      849    3                H_EDACHIST.CT(J)=1;

    849  0 000150   000001 221003                    LDX1    1,DU
         0 000151   200005 722100                    LXL2    J,,AUTO
         0 000152   000000 441012 xsym               SXL1    H_EDACHIST,X2

     1149      850    3                H_EDACHIST.SYND(J)=SYND.S;

    850  0 000153   000000 740012 xsym               STX0    H_EDACHIST,X2

     1150      851    3                EL$EDAC.WASHED='1'B;

    851  0 000154   001000 236003                    LDQ     512,DU
         0 000155   200023 256100                    ORSQ    EL$EDAC+8,,AUTO

     1151      852    3                CALL HFB$WASH(EL$EDAC.STORE_MODE,I,EL$EDAC.WASHED_STORE_MODE);

    852  0 000156   200024 630500                    EPPR0   EL$EDAC+9,,AUTO
         0 000157   200030 450500                    STP0    EL$EDAC+13,,AUTO
         0 000160   200004 631500                    EPPR1   I,,AUTO
PL6.E3A0      #002=HFB$EDAC File=HFB$FPR.:E05TSI                                 TUE 07/29/97 22:25 Page:153  
         0 000161   200027 451500                    STP1    EL$EDAC+12,,AUTO
         0 000162   200016 633500                    EPPR3   EL$EDAC+3,,AUTO
         0 000163   200026 453500                    STP3    EL$EDAC+11,,AUTO
         0 000164   200026 630500                    EPPR0   EL$EDAC+11,,AUTO
         0 000165   000021 631400 xsym               EPPR1   B_VECTNIL+17
         0 000166   000000 701000 xent               TSX1    HFB$WASH
         0 000167   000000 011000                    NOP     0

     1152      853    3   LOGEDAC:     CALL MME$CVM(%MONWSQ,%WINDOWLO,

    853  0 000170   200004 720100       LOGEDAC      LXL0    I,,AUTO
         0 000171   000000 236010 xsym               LDQ     H_STOREUNIT,X0
         0 000172   000042 772000                    QRL     34
         0 000173   000000 236006 xsym               LDQ     H_PORT_FIRST_ADDR,QL
         0 000174   000012 772000                    QRL     10
         0 000175   200026 756100                    STQ     EL$EDAC+11,,AUTO
         0 000176   200006 630500                    EPPR0   ERRCDE,,AUTO
         0 000177   200033 450500                    STP0    EL$EDAC+16,,AUTO
         0 000200   200026 631500                    EPPR1   EL$EDAC+11,,AUTO
         0 000201   200032 451500                    STP1    EL$EDAC+15,,AUTO
         0 000202   000002 237000 1                  LDAQ    2
         0 000203   200030 757100                    STAQ    EL$EDAC+13,,AUTO
         0 000204   200030 630500                    EPPR0   EL$EDAC+13,,AUTO
         0 000205   000022 631400 xsym               EPPR1   B_VECTNIL+18
         0 000206   000000 701000 xent               TSX1    MME$CVM
         0 000207   000000 011000                    NOP     0

     1153      854    3                  H_PORT_FIRST_ADDR(H_STOREUNIT.PORT#(I))/1024,ERRCDE);
     1154      855    3                CALL HFC$RSCR(B$WINDOW$,

    855  0 000210   200004 720100                    LXL0    I,,AUTO
         0 000211   000000 236010 xsym               LDQ     H_STOREUNIT,X0
         0 000212   000042 772000                    QRL     34
         0 000213   000000 236006 xsym               LDQ     H_PORT_FIRST_ADDR,QL
         0 000214   000007 376007                    ANQ     7,DL
         0 000215   200026 756100                    STQ     EL$EDAC+11,,AUTO
         0 000216   200014 630500                    EPPR0   EL$EDAC+1,,AUTO
PL6.E3A0      #002=HFB$EDAC File=HFB$FPR.:E05TSI                                 TUE 07/29/97 22:25 Page:154  
         0 000217   200031 450500                    STP0    EL$EDAC+14,,AUTO
         0 000220   200026 631500                    EPPR1   EL$EDAC+11,,AUTO
         0 000221   200030 451500                    STP1    EL$EDAC+13,,AUTO
         0 000222   000004 236000 1                  LDQ     4
         0 000223   200027 756100                    STQ     EL$EDAC+12,,AUTO
         0 000224   200027 630500                    EPPR0   EL$EDAC+12,,AUTO
         0 000225   000021 631400 xsym               EPPR1   B_VECTNIL+17
         0 000226   000000 701000 xent               TSX1    HFC$RSCR
         0 000227   000000 011000                    NOP     0

     1155      856    3                  MOD(H_PORT_FIRST_ADDR(H_STOREUNIT.PORT#(I)),8),
     1156      857    3                  EL$EDAC.SCU_MODE);
     1157      858    3                CALL HFC$RSCR(B$WINDOW$,

    858  0 000230   200004 720100                    LXL0    I,,AUTO
         0 000231   000000 236010 xsym               LDQ     H_STOREUNIT,X0
         0 000232   000042 772000                    QRL     34
         0 000233   000000 236006 xsym               LDQ     H_PORT_FIRST_ADDR,QL
         0 000234   000007 376007                    ANQ     7,DL
         0 000235   000010 036007                    ADLQ    8,DL
         0 000236   200026 756100                    STQ     EL$EDAC+11,,AUTO
         0 000237   200021 630500                    EPPR0   EL$EDAC+6,,AUTO
         0 000240   200031 450500                    STP0    EL$EDAC+14,,AUTO
         0 000241   200026 631500                    EPPR1   EL$EDAC+11,,AUTO
         0 000242   200030 451500                    STP1    EL$EDAC+13,,AUTO
         0 000243   000004 236000 1                  LDQ     4
         0 000244   200027 756100                    STQ     EL$EDAC+12,,AUTO
         0 000245   200027 630500                    EPPR0   EL$EDAC+12,,AUTO
         0 000246   000021 631400 xsym               EPPR1   B_VECTNIL+17
         0 000247   000000 701000 xent               TSX1    HFC$RSCR
         0 000250   000000 011000                    NOP     0

     1158      859    3                  8+MOD(H_PORT_FIRST_ADDR(H_STOREUNIT.PORT#(I)),8),
     1159      860    3                  EL$EDAC.SCU_CONFIG);
     1160      861    3                EL$EDAC.CPU_CONFIG=H_CPU_CONFIG;

    861  0 000251   000000 236000 xsym               LDQ     H_CPU_CONFIG
PL6.E3A0      #002=HFB$EDAC File=HFB$FPR.:E05TSI                                 TUE 07/29/97 22:25 Page:155  
         0 000252   200020 756100                    STQ     EL$EDAC+5,,AUTO

     1161      862    3                EL$EDAC.ADDRESS=H_STOREUNIT.FIRST_ADDR(I);

    862  0 000253   200004 720100                    LXL0    I,,AUTO
         0 000254   000000 236010 xsym               LDQ     H_STOREUNIT,X0
         0 000255   000000 376000 1                  ANQ     0
         0 000256   200013 756100                    STQ     EL$EDAC,,AUTO

     1162      863    3                EL$EDAC.PORT#=H_STOREUNIT.PORT#(I);

    863  0 000257   000000 236010 xsym               LDQ     H_STOREUNIT,X0
         0 000260   000001 772000                    QRL     1
         0 000261   200023 676100                    ERQ     EL$EDAC+8,,AUTO
         0 000262   300000 376003                    ANQ     98304,DU
         0 000263   200023 656100                    ERSQ    EL$EDAC+8,,AUTO

     1163      864    3                EL$EDAC.STORE_UNIT=H_STOREUNIT.STORE_UNIT#(I);

    864  0 000264   000000 236010 xsym               LDQ     H_STOREUNIT,X0
         0 000265   000002 772000                    QRL     2
         0 000266   200023 676100                    ERQ     EL$EDAC+8,,AUTO
         0 000267   030000 376003                    ANQ     12288,DU
         0 000270   200023 656100                    ERSQ    EL$EDAC+8,,AUTO

     1164      865    3                EL$EDAC.SCU_PORT#=S_PORTNR(S_PNO);

    865  0 000271   000000 721000 xsym               LXL1    S_PNO
         0 000272   000000 236011 xsym               LDQ     S_PORTNR,X1
         0 000273   000022 736000                    QLS     18
         0 000274   200023 552120                    STBQ    EL$EDAC+8,'20'O,AUTO

     1165      866    3                EL$EDAC.ERR_COUNT=H_EDACHIST.CT(J);

    866  0 000275   200005 722100                    LXL2    J,,AUTO
         0 000276   000000 723012 xsym               LXL3    H_EDACHIST,X2
         0 000277   200023 443100                    SXL3    EL$EDAC+8,,AUTO
PL6.E3A0      #002=HFB$EDAC File=HFB$FPR.:E05TSI                                 TUE 07/29/97 22:25 Page:156  

     1166      867    3                CALL ELA$SYSLOG(EL_EDAC,EL$EDAC,SIZEW(EL$EDAC),'0'B,1,ERRCDE);

    867  0 000300   200006 630500                    EPPR0   ERRCDE,,AUTO
         0 000301   200033 450500                    STP0    EL$EDAC+16,,AUTO
         0 000302   000002 236000 1                  LDQ     2
         0 000303   200032 756100                    STQ     EL$EDAC+15,,AUTO
         0 000304   000010 237000 1                  LDAQ    8
         0 000305   200030 757100                    STAQ    EL$EDAC+13,,AUTO
         0 000306   200013 631500                    EPPR1   EL$EDAC,,AUTO
         0 000307   200027 451500                    STP1    EL$EDAC+12,,AUTO
         0 000310   000007 236000 1                  LDQ     7
         0 000311   200026 756100                    STQ     EL$EDAC+11,,AUTO
         0 000312   200026 630500                    EPPR0   EL$EDAC+11,,AUTO
         0 000313   000024 631400 xsym               EPPR1   B_VECTNIL+20
         0 000314   000000 701000 xent               TSX1    ELA$SYSLOG
         0 000315   000000 011000                    NOP     0

     1167      868    3                END;

     1168      869    2           END;

    869  0 000316   200004 235100                    LDA     I,,AUTO
         0 000317   000001 035007                    ADLA    1,DL
         0 000320   200004 755100                    STA     I,,AUTO
         0 000321   000000 236000 xsym               LDQ     H_MAXSU#
         0 000322   200004 116100                    CMPQ    I,,AUTO
         0 000323   000012 603000 0                  TRC     s:821

     1169      870    1   EDAC1: CALL SSC$MONTIMR(6000,ENTADDR(HFB$EDAC),0);

    870  0 000324   000000 636000 0     EDAC1        EAQ     s:18
         0 000325   200026 756100                    STQ     EL$EDAC+11,,AUTO
         0 000326   000011 236000 1                  LDQ     9
         0 000327   200031 756100                    STQ     EL$EDAC+14,,AUTO
         0 000330   200026 630500                    EPPR0   EL$EDAC+11,,AUTO
         0 000331   200030 450500                    STP0    EL$EDAC+13,,AUTO
PL6.E3A0      #002=HFB$EDAC File=HFB$FPR.:E05TSI                                 TUE 07/29/97 22:25 Page:157  
         0 000332   000013 236000 1                  LDQ     11
         0 000333   200027 756100                    STQ     EL$EDAC+12,,AUTO
         0 000334   200027 630500                    EPPR0   EL$EDAC+12,,AUTO
         0 000335   000021 631400 xsym               EPPR1   B_VECTNIL+17
         0 000336   000000 701000 xent               TSX1    SSC$MONTIMR
         0 000337   000000 011000                    NOP     0

     1170      871    1      RETURN;

    871  0 000340   000000 702200 xent               TSX2  ! X66_ARET

(unnamed)
 Sect OctLoc
   1     000   000077 777777   000000 000063   000003 006000   000001 006000    .?.....3........
   1     004   000000 006000   776777 777777   000000 000312   000006 006000    ................
   1     010   000015 006000   000002 006000   000000 013560   000012 006000    ................
     1171      872    1   END;
     1172      873        %EOD;

PL6.E3A0      #002=HFB$EDAC File=HFB$FPR.:E05TSI                                 TUE 07/29/97 22:25 Page:158  
--  Include file information  --

   HF_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   SS_CNTRLD_R.:E05TOU  cannot be made into a system file and is referenced.
   SS_CNTRL_R.:E05TOU  cannot be made into a system file and is referenced.
   SS_SCHED_R.:E05TOU  cannot be made into a system file and is referenced.
   EL$TABLES.:E05TOU  is referenced.
   EL_SUBS_C.:E05TOU  is referenced.
   B_STRINGS_C.:E05TOU  is referenced.
   M_INFO_C.:E05TOU  is referenced.
      No diagnostics issued in procedure HFB$EDAC.
PL6.E3A0      #002=HFB$EDAC File=HFB$FPR.:E05TSI                                 TUE 07/29/97 22:25 Page:159  

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

    13-0-0/w STRC(396)   r     1 EL$EDAC                    6-0-0/w UBIN        r     1 ERRCDE
     4-0-0/w UBIN        r     1 I                         10-0-0/w UBIN        r     1 IX
     5-0-0/w UBIN        r     1 J                         11-0-0/b STRC(72)    r     1 SYND
     7-0-0/w UBIN        r     1 UTS

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 B$WINDOW$
     0-0-0/b STRC(9)     r     1 H_CPU_CONFIG(0:3)
     0-0-0/b STRC        r     1 H_EDACHIST(0:63)
     0-0-0/w UBIN        r     1 H_EDACUTS(0:63)
     0-0-0/w UBIN        r     1 H_MAXSU#
     0-0-0/w UBIN        r     1 H_PORT_FIRST_ADDR(0:3)
     0-0-0/b STRC        r     1 H_STOREUNIT(0:15)
     0-0-0/w UBIN        r     1 S_PNO
     0-0-0/w UBIN        r     1 S_PORTNR(0:7)


   Procedure HFB$EDAC requires 225 words for executable code.
   Procedure HFB$EDAC requires 28 words of local(AUTO) storage.
PL6.E3A0      #002=HFB$EDAC File=HFB$FPR.:E05TSI                                 TUE 07/29/97 22:25 Page:160  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #002=HFB$EDAC File=HFB$FPR.:E05TSI                                 TUE 07/29/97 22:25 Page:161  
          MINI XREF LISTING

B$WINDOW$
       797**DCL       822<>CALL      855<>CALL      858<>CALL
EL$EDAC
       808**DCL       867<>CALL      867--CALL
EL$EDAC.ADDRESS
       808**DCL       862<<ASSIGN
EL$EDAC.CPU_CONFIG
       809**DCL       861<<ASSIGN
EL$EDAC.ERR_COUNT
       813**DCL       866<<ASSIGN
EL$EDAC.PORT#
       812**DCL       863<<ASSIGN
EL$EDAC.SCU_CONFIG
       810**DCL       858<>CALL
EL$EDAC.SCU_MODE
       808**DCL       855<>CALL
EL$EDAC.SCU_PORT#
       813**DCL       865<<ASSIGN
EL$EDAC.STORE_MODE
       808**DCL       822<>CALL      827>>ASSIGN    852<>CALL
EL$EDAC.STORE_MODE.SYNDROME
       809**DCL       824>>IF
EL$EDAC.STORE_UNIT
       813**DCL       864<<ASSIGN
EL$EDAC.WASHED
       813**DCL       837<<ASSIGN    851<<ASSIGN
EL$EDAC.WASHED_STORE_MODE
       813**DCL       838<<ASSIGN    852<>CALL
ELA$SYSLOG
       802**DCL-ENT   867--CALL
ERRCDE
       786**DCL       821<>CALL      853<>CALL      867<>CALL
PL6.E3A0      #002=HFB$EDAC File=HFB$FPR.:E05TSI                                 TUE 07/29/97 22:25 Page:162  
HFB$EDAC
        18**PROC      870--CALL
HFB$WASH
       805**DCL-ENT   852--CALL
HFC$RSCR
       800**DCL-ENT   822--CALL      855--CALL      858--CALL
H_CPU_CONFIG
       753**DCL       861>>ASSIGN
H_EDACHIST.CT
       766**DCL       833<<ASSIGN    833>>ASSIGN    834>>IF        835<<ASSIGN    842>>IF        842>>IF
       842>>IF        842>>IF        849<<ASSIGN    866>>ASSIGN
H_EDACHIST.SYND
       766**DCL       831>>IF        850<<ASSIGN
H_EDACUTS
       766**DCL       836<<ASSIGN    842>>IF        842>>IF        848<<ASSIGN
H_MAXSU#
       750**DCL       820>>DOINDEX
H_PORT_FIRST_ADDR
       757**DCL       853>>CALL      855>>CALL      858>>CALL
H_STOREUNIT.FIRST_ADDR
       750**DCL       821>>CALL      822>>CALL      862>>ASSIGN
H_STOREUNIT.PORT#
       749**DCL       828>>ASSIGN    853>>CALL      855>>CALL      858>>CALL      863>>ASSIGN
H_STOREUNIT.STORE_UNIT#
       750**DCL       829>>ASSIGN    864>>ASSIGN
I
       784**DCL       820<<DOINDEX   821>>CALL      822>>CALL      828>>ASSIGN    829>>ASSIGN    852<>CALL
       853>>CALL      855>>CALL      858>>CALL      862>>ASSIGN    863>>ASSIGN    864>>ASSIGN
IX
       788**DCL       826<<ASSIGN    842>>IF        842>>IF        842>>IF        845<<ASSIGN    847>>ASSIGN
J
       785**DCL       830<<DOINDEX   831>>IF        833>>ASSIGN    833>>ASSIGN    834>>IF        835>>ASSIGN
       836>>ASSIGN    842>>IF        842>>IF        842>>IF        845>>ASSIGN    847<<ASSIGN    848>>ASSIGN
       849>>ASSIGN    850>>ASSIGN    866>>ASSIGN
LOGEDAC
       853**LABEL     839--GOTO
PL6.E3A0      #002=HFB$EDAC File=HFB$FPR.:E05TSI                                 TUE 07/29/97 22:25 Page:163  
MME$CVM
       801**DCL-ENT   821--CALL      853--CALL
SSC$MONTIMR
       803**DCL-ENT   870--CALL
SSS$CURTIME
       804**DCL-ENT   819--CALL
SYND
       789**DCL       827<<ASSIGN
SYND.S
       791**DCL       831>>IF        850>>ASSIGN
SYND.S.PRT#
       793**DCL       828<<ASSIGN
SYND.S.STR#
       794**DCL       829<<ASSIGN
S_PNO
       798**DCL       865>>ASSIGN
S_PORTNR
       725**DCL       865>>ASSIGN
UTS
       787**DCL       819<>CALL      836>>ASSIGN    848>>ASSIGN

PL6.E3A0      #003=HFB$WASH File=HFB$FPR.:E05TSI                                 TUE 07/29/97 22:25 Page:164  
     1173        1        /*T***********************************************************/
     1174        2        /*T*                                                         */
     1175        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
     1176        4        /*T*                                                         */
     1177        5        /*T***********************************************************/
     1178        6        /*F* NAME:        HFB$WASH
     1179        7             PURPOSE:     PL6 portion of code to wash a memory chip that has
     1180        8                          caused an memory EDAC error.   */
     1181        9        /*D* NAME:        HFB$WASH
     1182       10             DESCRIPTION: Entered from HFB$EDAC with the identification of the
     1183       11                          memory chip to be washed.  Based on the memory
     1184       12                          configuration, a set of four loop counts and
     1185       13                          increments is generated that is used by HFC$WASH
     1186       14                          to do the actual washing of the chip for all
     1187       15                          memory interlace configurations.   */
     1188       16        HFB$WASH: PROC(STORE_MODE,STOREUNIT#,WASHED_STORE_MODE);
     1189       17        /**/
     1190       18        %INCLUDE HF_DATA_R;
     1191       61        %INCLUDE SS_SCHED_R;
     1192      104        %INCLUDE B_STRINGS_C;
     1193      233        %INCLUDE B_MLSMAC_C;
     1194     1175        %B_MLS (FPTN=B$MLS,STCLASS=BASED);
     1195     1990        /**/
     1196     1991    1   DCL B$LS$ PTR SYMREF;
     1197     1992    1   DCL HFC$WASH ENTRY(3);
     1198     1993        /**/
     1199     1994    1   DCL 1 STORE_MODE ALIGNED,
     1200     1995    1         2 * BIT(36) UNAL,
     1201     1996    1         2 ERR_ADDR UBIN(5) UNAL,
     1202     1997    1         2 * BIT(9) UNAL,
     1203     1998    1         2 MOSID BIT(4) UNAL,
     1204     1999    1         2 * BIT(18) UNAL;
     1205     2000    1   DCL STOREUNIT# UBIN WORD;
     1206     2001    1   DCL WASHED_STORE_MODE BIT(72) ALIGNED;
     1207     2002    1   DCL MISCDESC BIT(72) DALIGNED;
     1208     2003        /**/
     1209     2004    1   DCL CHIP_START_ADDR UBIN WORD;
PL6.E3A0      #003=HFB$WASH File=HFB$FPR.:E05TSI                                 TUE 07/29/97 22:25 Page:165  
     1210     2005    1   DCL 1 START_ADDR REDEF CHIP_START_ADDR,
     1211     2006    1         2 * BIT(12) UNAL,
     1212     2007    1         2 BITS (0:23) BIT(1) UNAL;
     1213     2008    1   DCL 1 LOOP_PARAM,
     1214     2009    1         2 INLOOP UBIN WORD,               /* INNER LOOP COUNT                   */
     1215     2010    1         2 ININC UBIN WORD,                /* INNER LOOP INCREMENT               */
     1216     2011    1         2 OTLOOP UBIN WORD,               /* OUTER LOOP COUNT                   */
     1217     2012    1         2 OTINC UBIN WORD;                /* OUTER LOOP INCREMENT               */
     1218     2013    1   DCL PORT# UBIN WORD;
     1219     2014    1   DCL 1 TYPE2 DALIGNED,
     1220     2015    1         2 FIRST_WORD BIT(36) UNAL,
     1221     2016    1         2 BASE UBIN WORD UNAL;
     1222     2017    1   DCL 1 RSW2,
     1223     2018    1         2 DPSE_2WAY (0:3) BIT(1) UNAL,
     1224     2019    1         2 * BIT(32) UNAL;
     1225     2020    1   DCL S_PNO UBIN SYMREF;
     1226     2021        /**/
     1227     2022    1      IF STORE_MODE.MOSID = '1010'B
     1228     2023    1      THEN CHIP_START_ADDR=H_STOREUNIT.FIRST_ADDR(STOREUNIT#)
     1229     2024    1             + STORE_MODE.ERR_ADDR*32768*4;
     1230     2025    1      ELSE CHIP_START_ADDR=H_STOREUNIT.FIRST_ADDR(STOREUNIT#)
     1231     2026    1             + STORE_MODE.ERR_ADDR*32768;
     1232     2027    1      WASHED_STORE_MODE='0'B;
     1233     2028    1      LOOP_PARAM.INLOOP=4;                 /* ASSUME NO INTERLACE                */
     1234     2029    1      LOOP_PARAM.ININC=2;
     1235     2030    1      LOOP_PARAM.OTLOOP=1024;
     1236     2031    1      LOOP_PARAM.OTINC=32;
     1237     2032    1      PORT#=H_STOREUNIT.PORT#(STOREUNIT#);
     1238     2033    1      IF S_PTYPE(S_PNO) = %DPSE
     1239     2034    1      THEN RSW2 = H_RSW2(S_PNO);
     1240     2035    1      ELSE RSW2 = '0'B;
     1241     2036    1      IF H_SCU_CONFIG.INTERLACE(PORT#)
     1242     2037    2      THEN DO;
     1243     2038        /*
     1244     2039              SCU INTERLACE
     1245     2040        */
     1246     2041    2           IF START_ADDR.BITS(H_SCU_BF(PORT#))
PL6.E3A0      #003=HFB$WASH File=HFB$FPR.:E05TSI                                 TUE 07/29/97 22:25 Page:166  
     1247     2042    3           THEN DO;
     1248     2043        /*
     1249     2044                 REVERSE BIT 22 IF SCU BOUNDARY FUNCTION BIT = '1'B
     1250     2045        */
     1251     2046    3                START_ADDR.BITS(22)=~START_ADDR.BITS(22);
     1252     2047    3                END;
     1253     2048    2           LOOP_PARAM.INLOOP=2;
     1254     2049    2           LOOP_PARAM.ININC=4;
     1255     2050    2           LOOP_PARAM.OTLOOP=2048;
     1256     2051    2           END;
     1257     2052    1      IF H_CPU_CONFIG.INTERLACE(PORT#) AND NOT RSW2.DPSE_2WAY(PORT#)
     1258     2053    2      THEN DO;
     1259     2054        /*
     1260     2055              CPU 4-WORD INTERLACE
     1261     2056        */
     1262     2057    2           IF START_ADDR.BITS(H_CPU_BF(PORT#))
     1263     2058    3           THEN DO;
     1264     2059        /*
     1265     2060                 REVERSE BIT 21 IF CPU BOUNDARY FUNCTION BIT = '1'B
     1266     2061        */
     1267     2062    3                START_ADDR.BITS(21)=~START_ADDR.BITS(21);
     1268     2063    3                END;
     1269     2064    2           IF H_SCU_CONFIG.INTERLACE(PORT#)
     1270     2065    3           THEN DO;
     1271     2066        /*
     1272     2067                 FOUR-WAY INTERLACE
     1273     2068        */
     1274     2069    3                LOOP_PARAM.INLOOP=4096;
     1275     2070    3                LOOP_PARAM.ININC=32;
     1276     2071    3                LOOP_PARAM.OTLOOP=1;
     1277     2072    3                LOOP_PARAM.OTINC=128*1024;
     1278     2073    3                END;
     1279     2074    3           ELSE DO;
     1280     2075        /*
     1281     2076                 CPU 4-WORD TWO-WAY INTERLACE ONLY
     1282     2077        */
     1283     2078    3                LOOP_PARAM.INLOOP=2;
PL6.E3A0      #003=HFB$WASH File=HFB$FPR.:E05TSI                                 TUE 07/29/97 22:25 Page:167  
     1284     2079    3                LOOP_PARAM.OTLOOP=2048;
     1285     2080    3                END;
     1286     2081    2           END;
     1287     2082    1      IF H_CPU_CONFIG.INTERLACE(PORT#) AND RSW2.DPSE_2WAY(PORT#)
     1288     2083    2      THEN DO;
     1289     2084        /*
     1290     2085              %DPSE CPU 2-WORD TWO-WAY INTERLACE ONLY
     1291     2086        */
     1292     2087    2           IF START_ADDR.BITS(H_CPU_BF(PORT#))
     1293     2088    3           THEN DO;
     1294     2089        /*
     1295     2090                 REVERSE BIT 22 IF CPU BOUNDARY FUNCTION BIT = '1'B
     1296     2091        */
     1297     2092    3                START_ADDR.BITS(22)=~START_ADDR.BITS(22);
     1298     2093    3                END;
     1299     2094    2           LOOP_PARAM.INLOOP=2;
     1300     2095    2           LOOP_PARAM.ININC=4;
     1301     2096    2           LOOP_PARAM.OTLOOP=2048;
     1302     2097    2           END;
     1303     2098        /*
     1304     2099           ADJUST OUTER LOOP COUNT FOR 64K MEMORY CHIP
     1305     2100        */
     1306     2101    1      IF STORE_MODE.MOSID = '1010'B
     1307     2102    1      THEN LOOP_PARAM.OTLOOP = LOOP_PARAM.OTLOOP * 4;
     1308     2103        /*
     1309     2104           BUILD TYPE 2 DESCRIPTOR USING WSQ 0
     1310     2105        */
     1311     2106    1      TYPE2.BASE=4*CHIP_START_ADDR;
     1312     2107    1      TYPE2.FIRST_WORD='377777740002'O;
     1313     2108    2      DO INHIBIT;
     1314     2109    2           MISCDESC=B$LS$->B$MLS.MISC;
     1315     2110    2           CALL HFC$WASH (TYPE2,LOOP_PARAM,WASHED_STORE_MODE);
     1316     2111    2           B$LS$->B$MLS.MISC=MISCDESC;
     1317     2112    2           END;                            /* INHIBIT                            */
     1318     2113    1      RETURN;
     1319     2114    1   END;
     1320     2115        %EOD;
PL6.E3A0      #003=HFB$WASH File=HFB$FPR.:E05TSI                                 TUE 07/29/97 22:25 Page:168  

PL6.E3A0      #003=HFB$WASH File=HFB$FPR.:E05TSI                                 TUE 07/29/97 22:25 Page:169  
--  Include file information  --

   B_MLSMAC_C.:E05TOU  is referenced.
   B_STRINGS_C.:E05TOU  is referenced.
   SS_CNTRLD_R.:E05TOU  cannot be made into a system file and is referenced.
   SS_CNTRL_R.:E05TOU  cannot be made into a system file and is referenced.
   SS_SCHED_R.:E05TOU  cannot be made into a system file and is referenced.
   HF_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure HFB$WASH.

   Procedure HFB$WASH requires 177 words for executable code.
   Procedure HFB$WASH requires 22 words of local(AUTO) storage.

PL6.E3A0      #003=HFB$WASH File=HFB$FPR.:E05TSI                                 TUE 07/29/97 22:25 Page:170  

 Object Unit name= HFB$WASH                                   File name= HFB$FPR.:E05TOU
 UTS= JUL 29 '97 22:25:41.28 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0  RoData even  UTS      1      1  HFB$WASH
    1   Proc  even  none   177    261  HFB$WASH
    2  RoData even  none     3      3  HFB$WASH

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     1      0   yes            yes      Std        3  HFB$WASH

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       3 HFC$WASH
                       nStd      0 X66_AUTO_3
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET
PL6.E3A0      #003=HFB$WASH File=HFB$FPR.:E05TSI                                 TUE 07/29/97 22:25 Page:171  

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     H_STOREUNIT                           H_CPU_CONFIG                          H_SCU_CONFIG
     H_SCU_BF                              H_CPU_BF                              H_RSW2
     S_PTYPE                               B$LS$                                 S_PNO
     B_VECTNIL
PL6.E3A0      #003=HFB$WASH File=HFB$FPR.:E05TSI                                 TUE 07/29/97 22:25 Page:172  


     1173        1        /*T***********************************************************/
     1174        2        /*T*                                                         */
     1175        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
     1176        4        /*T*                                                         */
     1177        5        /*T***********************************************************/
     1178        6        /*F* NAME:        HFB$WASH
     1179        7             PURPOSE:     PL6 portion of code to wash a memory chip that has
     1180        8                          caused an memory EDAC error.   */
     1181        9        /*D* NAME:        HFB$WASH
     1182       10             DESCRIPTION: Entered from HFB$EDAC with the identification of the
     1183       11                          memory chip to be washed.  Based on the memory
     1184       12                          configuration, a set of four loop counts and
     1185       13                          increments is generated that is used by HFC$WASH
     1186       14                          to do the actual washing of the chip for all
     1187       15                          memory interlace configurations.   */
     1188       16        HFB$WASH: PROC(STORE_MODE,STOREUNIT#,WASHED_STORE_MODE);

     16  1 000000   000000 700200 xent  HFB$WASH     TSX0  ! X66_AUTO_3
         1 000001   000026 000003                    ZERO    22,3

     1189       17        /**/
     1190       18        %INCLUDE HF_DATA_R;
     1191       61        %INCLUDE SS_SCHED_R;
     1192      104        %INCLUDE B_STRINGS_C;
     1193      233        %INCLUDE B_MLSMAC_C;
     1194     1175        %B_MLS (FPTN=B$MLS,STCLASS=BASED);
     1195     1990        /**/
     1196     1991    1   DCL B$LS$ PTR SYMREF;
     1197     1992    1   DCL HFC$WASH ENTRY(3);
     1198     1993        /**/
     1199     1994    1   DCL 1 STORE_MODE ALIGNED,
     1200     1995    1         2 * BIT(36) UNAL,
     1201     1996    1         2 ERR_ADDR UBIN(5) UNAL,
     1202     1997    1         2 * BIT(9) UNAL,
     1203     1998    1         2 MOSID BIT(4) UNAL,
     1204     1999    1         2 * BIT(18) UNAL;
PL6.E3A0      #003=HFB$WASH File=HFB$FPR.:E05TSI                                 TUE 07/29/97 22:25 Page:173  
     1205     2000    1   DCL STOREUNIT# UBIN WORD;
     1206     2001    1   DCL WASHED_STORE_MODE BIT(72) ALIGNED;
     1207     2002    1   DCL MISCDESC BIT(72) DALIGNED;
     1208     2003        /**/
     1209     2004    1   DCL CHIP_START_ADDR UBIN WORD;
     1210     2005    1   DCL 1 START_ADDR REDEF CHIP_START_ADDR,
     1211     2006    1         2 * BIT(12) UNAL,
     1212     2007    1         2 BITS (0:23) BIT(1) UNAL;
     1213     2008    1   DCL 1 LOOP_PARAM,
     1214     2009    1         2 INLOOP UBIN WORD,               /* INNER LOOP COUNT                   */
     1215     2010    1         2 ININC UBIN WORD,                /* INNER LOOP INCREMENT               */
     1216     2011    1         2 OTLOOP UBIN WORD,               /* OUTER LOOP COUNT                   */
     1217     2012    1         2 OTINC UBIN WORD;                /* OUTER LOOP INCREMENT               */
     1218     2013    1   DCL PORT# UBIN WORD;
     1219     2014    1   DCL 1 TYPE2 DALIGNED,
     1220     2015    1         2 FIRST_WORD BIT(36) UNAL,
     1221     2016    1         2 BASE UBIN WORD UNAL;
     1222     2017    1   DCL 1 RSW2,
     1223     2018    1         2 DPSE_2WAY (0:3) BIT(1) UNAL,
     1224     2019    1         2 * BIT(32) UNAL;
     1225     2020    1   DCL S_PNO UBIN SYMREF;
     1226     2021        /**/
     1227     2022    1      IF STORE_MODE.MOSID = '1010'B

   2022  1 000002   200003 470500                    LDP0    @STORE_MODE,,AUTO
         1 000003   000001 236100                    LDQ     1,,PR0
         1 000004   000017 376003                    ANQ     15,DU
         1 000005   000012 116003                    CMPQ    10,DU
         1 000006   000022 601000 1                  TNZ     s:2025

     1228     2023    1      THEN CHIP_START_ADDR=H_STOREUNIT.FIRST_ADDR(STOREUNIT#)

   2023  1 000007   200004 471500                    LDP1    @STOREUNIT#,,AUTO
         1 000010   100000 720100                    LXL0    0,,PR1
         1 000011   000000 236010 xsym               LDQ     H_STOREUNIT,X0
         1 000012   000000 376000 2                  ANQ     0
         1 000013   200022 756100                    STQ     RSW2+2,,AUTO
PL6.E3A0      #003=HFB$WASH File=HFB$FPR.:E05TSI                                 TUE 07/29/97 22:25 Page:174  
         1 000014   000001 236100                    LDQ     1,,PR0
         1 000015   000016 772000                    QRL     14
         1 000016   000001 376000 2                  ANQ     1
         1 000017   200022 036100                    ADLQ    RSW2+2,,AUTO
         1 000020   200010 756100                    STQ     CHIP_START_ADDR,,AUTO
         1 000021   000034 710000 1                  TRA     s:2027

     1229     2024    1             + STORE_MODE.ERR_ADDR*32768*4;
     1230     2025    1      ELSE CHIP_START_ADDR=H_STOREUNIT.FIRST_ADDR(STOREUNIT#)

   2025  1 000022   200004 471500                    LDP1    @STOREUNIT#,,AUTO
         1 000023   100000 720100                    LXL0    0,,PR1
         1 000024   000000 236010 xsym               LDQ     H_STOREUNIT,X0
         1 000025   000000 376000 2                  ANQ     0
         1 000026   200022 756100                    STQ     RSW2+2,,AUTO
         1 000027   000001 236100                    LDQ     1,,PR0
         1 000030   000020 772000                    QRL     16
         1 000031   000002 376000 2                  ANQ     2
         1 000032   200022 036100                    ADLQ    RSW2+2,,AUTO
         1 000033   200010 756100                    STQ     CHIP_START_ADDR,,AUTO

     1231     2026    1             + STORE_MODE.ERR_ADDR*32768;
     1232     2027    1      WASHED_STORE_MODE='0'B;

   2027  1 000034   200005 473500                    LDP3    @WASHED_STORE_MODE,,AUTO
         1 000035   300000 450100                    STZ     0,,PR3
         1 000036   300001 450100                    STZ     1,,PR3

     1233     2028    1      LOOP_PARAM.INLOOP=4;                 /* ASSUME NO INTERLACE                */

   2028  1 000037   000004 235007                    LDA     4,DL
         1 000040   200011 755100                    STA     LOOP_PARAM,,AUTO

     1234     2029    1      LOOP_PARAM.ININC=2;

   2029  1 000041   000002 235007                    LDA     2,DL
         1 000042   200012 755100                    STA     LOOP_PARAM+1,,AUTO
PL6.E3A0      #003=HFB$WASH File=HFB$FPR.:E05TSI                                 TUE 07/29/97 22:25 Page:175  

     1235     2030    1      LOOP_PARAM.OTLOOP=1024;

   2030  1 000043   002000 235007                    LDA     1024,DL
         1 000044   200013 755100                    STA     LOOP_PARAM+2,,AUTO

     1236     2031    1      LOOP_PARAM.OTINC=32;

   2031  1 000045   000040 235007                    LDA     32,DL
         1 000046   200014 755100                    STA     LOOP_PARAM+3,,AUTO

     1237     2032    1      PORT#=H_STOREUNIT.PORT#(STOREUNIT#);

   2032  1 000047   100000 720100                    LXL0    0,,PR1
         1 000050   000000 236010 xsym               LDQ     H_STOREUNIT,X0
         1 000051   000042 772000                    QRL     34
         1 000052   200015 756100                    STQ     PORT#,,AUTO

     1238     2033    1      IF S_PTYPE(S_PNO) = %DPSE

   2033  1 000053   000000 721000 xsym               LXL1    S_PNO
         1 000054   000000 235011 xsym               LDA     S_PTYPE,X1
         1 000055   000001 115007                    CMPA    1,DL
         1 000056   000062 601000 1                  TNZ     s:2035

     1239     2034    1      THEN RSW2 = H_RSW2(S_PNO);

   2034  1 000057   000000 236011 xsym               LDQ     H_RSW2,X1
         1 000060   200020 756100                    STQ     RSW2,,AUTO
         1 000061   000063 710000 1                  TRA     s:2036

     1240     2035    1      ELSE RSW2 = '0'B;

   2035  1 000062   200020 450100                    STZ     RSW2,,AUTO

     1241     2036    1      IF H_SCU_CONFIG.INTERLACE(PORT#)

PL6.E3A0      #003=HFB$WASH File=HFB$FPR.:E05TSI                                 TUE 07/29/97 22:25 Page:176  
   2036  1 000063   200015 236100                    LDQ     PORT#,,AUTO
         1 000064   000001 736000                    QLS     1
         1 000065   000000 236006 xsym               LDQ     H_SCU_CONFIG,QL
         1 000066   000040 316007                    CANQ    32,DL
         1 000067   000114 600000 1                  TZE     s:2052

     1242     2037    2      THEN DO;

     1243     2038        /*
     1244     2039              SCU INTERLACE
     1245     2040        */
     1246     2041    2           IF START_ADDR.BITS(H_SCU_BF(PORT#))

   2041  1 000070   200015 722100                    LXL2    PORT#,,AUTO
         1 000071   000000 235012 xsym               LDA     H_SCU_BF,X2
         1 000072   000000 066505                    CMPB    filb='0'B
         1 000073   200010 230001                    BDSC    CHIP_START_ADDR,A,AUTO   by=1,bit=3,n=1
         1 000074   000002 000022 xsym               BDSC    B_VECTNIL+2              by=0,bit=0,n=18
         1 000075   000106 600000 1                  TZE     s:2048

     1247     2042    3           THEN DO;

     1248     2043        /*
     1249     2044                 REVERSE BIT 22 IF SCU BOUNDARY FUNCTION BIT = '1'B
     1250     2045        */
     1251     2046    3                START_ADDR.BITS(22)=~START_ADDR.BITS(22);

   2046  1 000076   200010 236100                    LDQ     CHIP_START_ADDR,,AUTO
         1 000077   000042 736000                    QLS     34
         1 000100   400000 376003                    ANQ     -131072,DU
         1 000101   400000 676003                    ERQ     -131072,DU
         1 000102   000042 772000                    QRL     34
         1 000103   200010 676100                    ERQ     CHIP_START_ADDR,,AUTO
         1 000104   000002 376007                    ANQ     2,DL
         1 000105   200010 656100                    ERSQ    CHIP_START_ADDR,,AUTO

     1252     2047    3                END;
PL6.E3A0      #003=HFB$WASH File=HFB$FPR.:E05TSI                                 TUE 07/29/97 22:25 Page:177  

     1253     2048    2           LOOP_PARAM.INLOOP=2;

   2048  1 000106   000002 236007                    LDQ     2,DL
         1 000107   200011 756100                    STQ     LOOP_PARAM,,AUTO

     1254     2049    2           LOOP_PARAM.ININC=4;

   2049  1 000110   000004 235007                    LDA     4,DL
         1 000111   200012 755100                    STA     LOOP_PARAM+1,,AUTO

     1255     2050    2           LOOP_PARAM.OTLOOP=2048;

   2050  1 000112   004000 235007                    LDA     2048,DL
         1 000113   200013 755100                    STA     LOOP_PARAM+2,,AUTO

     1256     2051    2           END;

     1257     2052    1      IF H_CPU_CONFIG.INTERLACE(PORT#) AND NOT RSW2.DPSE_2WAY(PORT#)

   2052  1 000114   200015 236100                    LDQ     PORT#,,AUTO
         1 000115   000011 402007                    MPY     9,DL
         1 000116   000000 066406                    CMPB    filb='0'B
         1 000117   000000 050001 xsym               BDSC    H_CPU_CONFIG,Q           by=0,bit=5,n=1
         1 000120   000002 000022 xsym               BDSC    B_VECTNIL+2              by=0,bit=0,n=18
         1 000121   000166 600000 1                  TZE     s:2082
         1 000122   200015 235100                    LDA     PORT#,,AUTO
         1 000123   000000 066505                    CMPB    filb='0'B
         1 000124   200020 000001                    BDSC    RSW2,A,AUTO              by=0,bit=0,n=1
         1 000125   000002 000022 xsym               BDSC    B_VECTNIL+2              by=0,bit=0,n=18
         1 000126   000166 601000 1                  TNZ     s:2082

     1258     2053    2      THEN DO;

     1259     2054        /*
     1260     2055              CPU 4-WORD INTERLACE
     1261     2056        */
PL6.E3A0      #003=HFB$WASH File=HFB$FPR.:E05TSI                                 TUE 07/29/97 22:25 Page:178  
     1262     2057    2           IF START_ADDR.BITS(H_CPU_BF(PORT#))

   2057  1 000127   000000 235005 xsym               LDA     H_CPU_BF,AL
         1 000130   000000 066505                    CMPB    filb='0'B
         1 000131   200010 230001                    BDSC    CHIP_START_ADDR,A,AUTO   by=1,bit=3,n=1
         1 000132   000002 000022 xsym               BDSC    B_VECTNIL+2              by=0,bit=0,n=18
         1 000133   000144 600000 1                  TZE     s:2064

     1263     2058    3           THEN DO;

     1264     2059        /*
     1265     2060                 REVERSE BIT 21 IF CPU BOUNDARY FUNCTION BIT = '1'B
     1266     2061        */
     1267     2062    3                START_ADDR.BITS(21)=~START_ADDR.BITS(21);

   2062  1 000134   200010 236100                    LDQ     CHIP_START_ADDR,,AUTO
         1 000135   000041 736000                    QLS     33
         1 000136   400000 376003                    ANQ     -131072,DU
         1 000137   400000 676003                    ERQ     -131072,DU
         1 000140   000041 772000                    QRL     33
         1 000141   200010 676100                    ERQ     CHIP_START_ADDR,,AUTO
         1 000142   000004 376007                    ANQ     4,DL
         1 000143   200010 656100                    ERSQ    CHIP_START_ADDR,,AUTO

     1268     2063    3                END;

     1269     2064    2           IF H_SCU_CONFIG.INTERLACE(PORT#)

   2064  1 000144   200015 235100                    LDA     PORT#,,AUTO
         1 000145   000001 735000                    ALS     1
         1 000146   000000 236005 xsym               LDQ     H_SCU_CONFIG,AL
         1 000147   000040 316007                    CANQ    32,DL
         1 000150   000162 600000 1                  TZE     s:2078

     1270     2065    3           THEN DO;

     1271     2066        /*
PL6.E3A0      #003=HFB$WASH File=HFB$FPR.:E05TSI                                 TUE 07/29/97 22:25 Page:179  
     1272     2067                 FOUR-WAY INTERLACE
     1273     2068        */
     1274     2069    3                LOOP_PARAM.INLOOP=4096;

   2069  1 000151   010000 235007                    LDA     4096,DL
         1 000152   200011 755100                    STA     LOOP_PARAM,,AUTO

     1275     2070    3                LOOP_PARAM.ININC=32;

   2070  1 000153   000040 236007                    LDQ     32,DL
         1 000154   200012 756100                    STQ     LOOP_PARAM+1,,AUTO

     1276     2071    3                LOOP_PARAM.OTLOOP=1;

   2071  1 000155   000001 235007                    LDA     1,DL
         1 000156   200013 755100                    STA     LOOP_PARAM+2,,AUTO

     1277     2072    3                LOOP_PARAM.OTINC=128*1024;

   2072  1 000157   400000 235007                    LDA     -131072,DL
         1 000160   200014 755100                    STA     LOOP_PARAM+3,,AUTO

     1278     2073    3                END;

   2073  1 000161   000166 710000 1                  TRA     s:2082

     1279     2074    3           ELSE DO;

     1280     2075        /*
     1281     2076                 CPU 4-WORD TWO-WAY INTERLACE ONLY
     1282     2077        */
     1283     2078    3                LOOP_PARAM.INLOOP=2;

   2078  1 000162   000002 235007                    LDA     2,DL
         1 000163   200011 755100                    STA     LOOP_PARAM,,AUTO

     1284     2079    3                LOOP_PARAM.OTLOOP=2048;
PL6.E3A0      #003=HFB$WASH File=HFB$FPR.:E05TSI                                 TUE 07/29/97 22:25 Page:180  

   2079  1 000164   004000 236007                    LDQ     2048,DL
         1 000165   200013 756100                    STQ     LOOP_PARAM+2,,AUTO

     1285     2080    3                END;

     1286     2081    2           END;

     1287     2082    1      IF H_CPU_CONFIG.INTERLACE(PORT#) AND RSW2.DPSE_2WAY(PORT#)

   2082  1 000166   200015 236100                    LDQ     PORT#,,AUTO
         1 000167   000011 402007                    MPY     9,DL
         1 000170   000000 066406                    CMPB    filb='0'B
         1 000171   000000 050001 xsym               BDSC    H_CPU_CONFIG,Q           by=0,bit=5,n=1
         1 000172   000002 000022 xsym               BDSC    B_VECTNIL+2              by=0,bit=0,n=18
         1 000173   000224 600000 1                  TZE     s:2101
         1 000174   200015 235100                    LDA     PORT#,,AUTO
         1 000175   000000 066505                    CMPB    filb='0'B
         1 000176   200020 000001                    BDSC    RSW2,A,AUTO              by=0,bit=0,n=1
         1 000177   000002 000022 xsym               BDSC    B_VECTNIL+2              by=0,bit=0,n=18
         1 000200   000224 600000 1                  TZE     s:2101

     1288     2083    2      THEN DO;

     1289     2084        /*
     1290     2085              %DPSE CPU 2-WORD TWO-WAY INTERLACE ONLY
     1291     2086        */
     1292     2087    2           IF START_ADDR.BITS(H_CPU_BF(PORT#))

   2087  1 000201   000000 235005 xsym               LDA     H_CPU_BF,AL
         1 000202   000000 066505                    CMPB    filb='0'B
         1 000203   200010 230001                    BDSC    CHIP_START_ADDR,A,AUTO   by=1,bit=3,n=1
         1 000204   000002 000022 xsym               BDSC    B_VECTNIL+2              by=0,bit=0,n=18
         1 000205   000216 600000 1                  TZE     s:2094

     1293     2088    3           THEN DO;

PL6.E3A0      #003=HFB$WASH File=HFB$FPR.:E05TSI                                 TUE 07/29/97 22:25 Page:181  
     1294     2089        /*
     1295     2090                 REVERSE BIT 22 IF CPU BOUNDARY FUNCTION BIT = '1'B
     1296     2091        */
     1297     2092    3                START_ADDR.BITS(22)=~START_ADDR.BITS(22);

   2092  1 000206   200010 236100                    LDQ     CHIP_START_ADDR,,AUTO
         1 000207   000042 736000                    QLS     34
         1 000210   400000 376003                    ANQ     -131072,DU
         1 000211   400000 676003                    ERQ     -131072,DU
         1 000212   000042 772000                    QRL     34
         1 000213   200010 676100                    ERQ     CHIP_START_ADDR,,AUTO
         1 000214   000002 376007                    ANQ     2,DL
         1 000215   200010 656100                    ERSQ    CHIP_START_ADDR,,AUTO

     1298     2093    3                END;

     1299     2094    2           LOOP_PARAM.INLOOP=2;

   2094  1 000216   000002 235007                    LDA     2,DL
         1 000217   200011 755100                    STA     LOOP_PARAM,,AUTO

     1300     2095    2           LOOP_PARAM.ININC=4;

   2095  1 000220   000004 236007                    LDQ     4,DL
         1 000221   200012 756100                    STQ     LOOP_PARAM+1,,AUTO

     1301     2096    2           LOOP_PARAM.OTLOOP=2048;

   2096  1 000222   004000 235007                    LDA     2048,DL
         1 000223   200013 755100                    STA     LOOP_PARAM+2,,AUTO

     1302     2097    2           END;

     1303     2098        /*
     1304     2099           ADJUST OUTER LOOP COUNT FOR 64K MEMORY CHIP
     1305     2100        */
     1306     2101    1      IF STORE_MODE.MOSID = '1010'B
PL6.E3A0      #003=HFB$WASH File=HFB$FPR.:E05TSI                                 TUE 07/29/97 22:25 Page:182  

   2101  1 000224   000001 236100                    LDQ     1,,PR0
         1 000225   000017 376003                    ANQ     15,DU
         1 000226   000012 116003                    CMPQ    10,DU
         1 000227   000233 601000 1                  TNZ     s:2106

     1307     2102    1      THEN LOOP_PARAM.OTLOOP = LOOP_PARAM.OTLOOP * 4;

   2102  1 000230   200013 235100                    LDA     LOOP_PARAM+2,,AUTO
         1 000231   000002 735000                    ALS     2
         1 000232   200013 755100                    STA     LOOP_PARAM+2,,AUTO

     1308     2103        /*
     1309     2104           BUILD TYPE 2 DESCRIPTOR USING WSQ 0
     1310     2105        */
     1311     2106    1      TYPE2.BASE=4*CHIP_START_ADDR;

   2106  1 000233   200010 235100                    LDA     CHIP_START_ADDR,,AUTO
         1 000234   000002 735000                    ALS     2
         1 000235   200017 755100                    STA     TYPE2+1,,AUTO

     1312     2107    1      TYPE2.FIRST_WORD='377777740002'O;

   2107  1 000236   000000 236000 0                  LDQ     0
         1 000237   200016 756100                    STQ     TYPE2,,AUTO

     1313     2108    2      DO INHIBIT;

     1314     2109    2           MISCDESC=B$LS$->B$MLS.MISC;

   2109  1 000240   000000 474600 xsym               LDP4  ! B$LS$
         1 000241   400130 237300                    LDAQ  ! 88,,PR4
         1 000242   200006 757300                    STAQ  ! MISCDESC,,AUTO

     1315     2110    2           CALL HFC$WASH (TYPE2,LOOP_PARAM,WASHED_STORE_MODE);

   2110  1 000243   200005 236300                    LDQ   ! @WASHED_STORE_MODE,,AUTO
PL6.E3A0      #003=HFB$WASH File=HFB$FPR.:E05TSI                                 TUE 07/29/97 22:25 Page:183  
         1 000244   200024 756300                    STQ   ! RSW2+4,,AUTO
         1 000245   200011 635700                    EPPR5 ! LOOP_PARAM,,AUTO
         1 000246   200023 455700                    STP5  ! RSW2+3,,AUTO
         1 000247   200016 636700                    EPPR6 ! TYPE2,,AUTO
         1 000250   200022 456700                    STP6  ! RSW2+2,,AUTO
         1 000251   200022 630700                    EPPR0 ! RSW2+2,,AUTO
         1 000252   000021 631600 xsym               EPPR1 ! B_VECTNIL+17
         1 000253   000000 701200 xent               TSX1  ! HFC$WASH
         1 000254   000000 011200                    NOP   ! 0

     1316     2111    2           B$LS$->B$MLS.MISC=MISCDESC;

   2111  1 000255   200006 237300                    LDAQ  ! MISCDESC,,AUTO
         1 000256   000000 470600 xsym               LDP0  ! B$LS$
         1 000257   000130 757300                    STAQ  ! 88,,PR0

     1317     2112    2           END;                            /* INHIBIT                            */

     1318     2113    1      RETURN;

   2113  1 000260   000000 702200 xent               TSX2  ! X66_ARET

(unnamed)
 Sect OctLoc
   0     000   377777 740002                                                    ....

(unnamed)
 Sect OctLoc
   2     000   000077 777777   000017 400000   000003 700000                    .?..........
     1319     2114    1   END;
     1320     2115        %EOD;

PL6.E3A0      #003=HFB$WASH File=HFB$FPR.:E05TSI                                 TUE 07/29/97 22:25 Page:184  
--  Include file information  --

   B_MLSMAC_C.:E05TOU  is referenced.
   B_STRINGS_C.:E05TOU  is referenced.
   SS_CNTRLD_R.:E05TOU  cannot be made into a system file and is referenced.
   SS_CNTRL_R.:E05TOU  cannot be made into a system file and is referenced.
   SS_SCHED_R.:E05TOU  cannot be made into a system file and is referenced.
   HF_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure HFB$WASH.
PL6.E3A0      #003=HFB$WASH File=HFB$FPR.:E05TSI                                 TUE 07/29/97 22:25 Page:185  

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     4-0-0/w PTR         r     1 @STOREUNIT#                3-0-0/w PTR         r     1 @STORE_MODE
     5-0-0/w PTR         r     1 @WASHED_STORE_MODE        10-0-0/w UBIN        r     1 CHIP_START_ADDR
    11-0-0/w STRC(144)   r     1 LOOP_PARAM                 6-0-0/d BIT (72)    r     1 MISCDESC
    15-0-0/w UBIN        r     1 PORT#                     20-0-0/b STRC        r     1 RSW2
    10-0-0/w STRC        r     1 START_ADDR                *0-0-0/w UBIN        r     1 STOREUNIT#
    *0-0-0/w STRC(72)    r     1 STORE_MODE                16-0-0/d STRC(72)    r     1 TYPE2
    *0-0-0/w BIT (72)    r     1 WASHED_STORE_MODE

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 B$LS$
     0-0-0/w UBIN        r     1 H_CPU_BF(0:3)
     0-0-0/b STRC(9)     r     1 H_CPU_CONFIG(0:3)
     0-0-0/w BIT         r     1 H_RSW2(0:7)
     0-0-0/w UBIN        r     1 H_SCU_BF(0:3)
     0-0-0/d STRC(72)    r     1 H_SCU_CONFIG(0:3)
     0-0-0/b STRC        r     1 H_STOREUNIT(0:15)
     0-0-0/w UBIN        r     1 S_PNO
     0-0-0/w SBIN        r     1 S_PTYPE(0:7)

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d STRC(10368) r     1 B$MLS

PL6.E3A0      #003=HFB$WASH File=HFB$FPR.:E05TSI                                 TUE 07/29/97 22:25 Page:186  

   Procedure HFB$WASH requires 177 words for executable code.
   Procedure HFB$WASH requires 22 words of local(AUTO) storage.
PL6.E3A0      #003=HFB$WASH File=HFB$FPR.:E05TSI                                 TUE 07/29/97 22:25 Page:187  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #003=HFB$WASH File=HFB$FPR.:E05TSI                                 TUE 07/29/97 22:25 Page:188  
          MINI XREF LISTING

B$LS$
      1991**DCL      2109>>ASSIGN   2111>>ASSIGN
B$MLS.MISC
      1487**DCL      2109>>ASSIGN   2111<<ASSIGN
CHIP_START_ADDR
      2004**DCL      2005--REDEF    2023<<ASSIGN   2025<<ASSIGN   2106>>ASSIGN
HFC$WASH
      1992**DCL-ENT  2110--CALL
H_CPU_BF
        36**DCL      2057>>IF       2087>>IF
H_CPU_CONFIG.INTERLACE
        33**DCL      2052>>IF       2082>>IF
H_RSW2
        41**DCL      2034>>ASSIGN
H_SCU_BF
        36**DCL      2041>>IF
H_SCU_CONFIG.INTERLACE
        35**DCL      2036>>IF       2064>>IF
H_STOREUNIT.FIRST_ADDR
        29**DCL      2023>>ASSIGN   2025>>ASSIGN
H_STOREUNIT.PORT#
        28**DCL      2032>>ASSIGN
LOOP_PARAM
      2008**DCL      2110<>CALL
LOOP_PARAM.ININC
      2010**DCL      2029<<ASSIGN   2049<<ASSIGN   2070<<ASSIGN   2095<<ASSIGN
LOOP_PARAM.INLOOP
      2009**DCL      2028<<ASSIGN   2048<<ASSIGN   2069<<ASSIGN   2078<<ASSIGN   2094<<ASSIGN
LOOP_PARAM.OTINC
      2012**DCL      2031<<ASSIGN   2072<<ASSIGN
LOOP_PARAM.OTLOOP
      2011**DCL      2030<<ASSIGN   2050<<ASSIGN   2071<<ASSIGN   2079<<ASSIGN   2096<<ASSIGN   2102<<ASSIGN
PL6.E3A0      #003=HFB$WASH File=HFB$FPR.:E05TSI                                 TUE 07/29/97 22:25 Page:189  
      2102>>ASSIGN
MISCDESC
      2002**DCL      2109<<ASSIGN   2111>>ASSIGN
PORT#
      2013**DCL      2032<<ASSIGN   2036>>IF       2041>>IF       2052>>IF       2052>>IF       2057>>IF
      2064>>IF       2082>>IF       2082>>IF       2087>>IF
RSW2
      2017**DCL      2034<<ASSIGN   2035<<ASSIGN
RSW2.DPSE_2WAY
      2018**DCL      2052>>IF       2082>>IF
START_ADDR.BITS
      2007**DCL      2041>>IF       2046<<ASSIGN   2046>>ASSIGN   2057>>IF       2062<<ASSIGN   2062>>ASSIGN
      2087>>IF       2092<<ASSIGN   2092>>ASSIGN
STOREUNIT#
      2000**DCL        16--PROC     2023>>ASSIGN   2025>>ASSIGN   2032>>ASSIGN
STORE_MODE
      1994**DCL        16--PROC
STORE_MODE.ERR_ADDR
      1996**DCL      2023>>ASSIGN   2025>>ASSIGN
STORE_MODE.MOSID
      1998**DCL      2022>>IF       2101>>IF
S_PNO
      2020**DCL      2033>>IF       2034>>ASSIGN
S_PTYPE
        91**DCL      2033>>IF
TYPE2
      2014**DCL      2110<>CALL
TYPE2.BASE
      2016**DCL      2106<<ASSIGN
TYPE2.FIRST_WORD
      2015**DCL      2107<<ASSIGN
WASHED_STORE_MODE
      2001**DCL        16--PROC     2027<<ASSIGN   2110<>CALL

PL6.E3A0      #004=HFB$DIAGSNAP File=HFB$FPR.:E05TSI                             TUE 07/29/97 22:26 Page:190  
     1321        1        /*T***********************************************************/
     1322        2        /*T*                                                         */
     1323        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
     1324        4        /*T*                                                         */
     1325        5        /*T***********************************************************/
     1326        6        /*F* NAME:        HFB$DIAGSNAP
     1327        7             PURPOSE:     Perform diagnostic snap upon occurrence of a fault
     1328        8                          if certain system programmer set conditions are met.  */
     1329        9        /*D* NAME:        HFB$DIAGSNAP
     1330       10             DESCRIPTION: The following flags, H_CODE, H_SYSID, H_MODE,
     1331       11                          H_PORT#, H_SPROC#, and H_SNAP control a diagnostic
     1332       12                          snapshot capability built into the fault handler.
     1333       13                          If H_SNAP is zero or negative, the diagnostic
     1334       14                          snapshot mode is disabled.  If H_SNAP is positive
     1335       15                          non-zero value, the snapshot mode is enabled and the
     1336       16                          other snapshot control flags are interrogated.  If
     1337       17                          all of the conditions for a snapshot are met, an
     1338       18                          HFA-548-5 snapshot dump takes place.  This is a
     1339       19                          small dump consisting only of hardware oriented
     1340       20                          data (JITs, HJITs, page tables, user read_only
     1341       21                          segment, history registers, associative memory,
     1342       22                          instructions from the user's instruction segment
     1343       23                          around the faulting instruction, and monitor static
     1344       24                          data).  Definitions of data unique to diagnostic
     1345       25                          snapshots in monitor static are found in modules
     1346       26                          HF_DATA_D and S_WSPTD_D.  The doubleword recovery
     1347       27                          code for this snapshot screech is found at location
     1348       28                          SC_DIAGSNAP in module B_SCREECH_D.  The definitons
     1349       29                          for the recovery codes are found in RV_MACRO_C.
     1350       30                          The procedure for the diagnostic snapshot is in
     1351       31                          module HFA$FAULT and entry point HFB$DIAGSNAP in
     1352       32                          module HFB$FPR.      */
     1353       33        HFB$DIAGSNAP: PROC(FINFO);
     1354       34        /**/
     1355       35        %INCLUDE B_STRINGS_C;
     1356      164        %INCLUDE HF_DATA_R;
     1357      207        %INCLUDE S_WSPTD_R;
PL6.E3A0      #004=HFB$DIAGSNAP File=HFB$FPR.:E05TSI                             TUE 07/29/97 22:26 Page:191  
     1358      223        %INCLUDE B$JIT_C;
     1359      537        %B$JIT0;
     1360      626        %A$JIT6X;
     1361      629        %INCLUDE B$USER;
     1362      845        %B$USERREFS;
     1363      849        %INCLUDE B_MAGIC_C;
     1364      967        %B_MPT (FPTN=B_MPT,STCLASS=SYMREF);
     1365     1060        %INCLUDE B_MLSMAC_C;
     1366     2002        %B_MLS (FPTN=B$MLS,STCLASS=BASED);
     1367     2817        %INCLUDE B$SS;
     1368     2996        /**/
     1369     2997    1   DCL 1 FINFO,
     1370     2998    1         2 PORT# UBIN(9) UNAL,
     1371     2999    1         2 * BIT(4) UNAL,
     1372     3000    1         2 BRANCH_MODE BIT(1) UNAL,
     1373     3001    1         2 PROCTYPE UBIN(4) UNAL,
     1374     3002    1         2 SUBCODE UBIN(18) UNAL,
     1375     3003    1         2 FLTREG BIT(36) UNAL,
     1376     3004    1         2 JERR,
     1377     3005    1           3 FCG BIT(12) UNAL,
     1378     3006    1           3 MID BIT(6) UNAL,
     1379     3007    1           3 MON BIT(1) UNAL,
     1380     3008    1           3 CODE UBIN(14) UNAL,
     1381     3009    1           3 SEV UBIN(3) UNAL,
     1382     3010    1         2 P# SBIN WORD;
     1383     3011        /**/
     1384     3012    1   DCL IC UBIN WORD;
     1385     3013    1   DCL IC_HIGH UBIN WORD;
     1386     3014    1   DCL IC_LOW UBIN WORD;
     1387     3015    1   DCL 1 WSPTD,
     1388     3016    1         2 ADDRESS UBIN(18) UNAL,          /* MOD 64 OR 1K WORDS                 */
     1389     3017    1         2 Q BIT(2) UNAL,
     1390     3018    1         2 P BIT(1) UNAL,                  /* 1 -> PAGE TABLE PRESENT            */
     1391     3019    1         2 T BIT(2) UNAL,                  /* 0 -> DENSE PAGE TABLE              */
     1392     3020    1         2 * BIT(1) UNAL,
     1393     3021    1         2 SIZE UBIN(12) UNAL;             /* MOD 64 WORDS                       */
     1394     3022    1   DCL 1 TYPE2 DALIGNED,
PL6.E3A0      #004=HFB$DIAGSNAP File=HFB$FPR.:E05TSI                             TUE 07/29/97 22:26 Page:192  
     1395     3023    1         2 FIRST_WORD BIT(36) UNAL,
     1396     3024    1         2 BASE UBIN WORD UNAL;
     1397     3025    1   DCL MISCDESC BIT(72) DALIGNED;
     1398     3026    1   DCL WSR (0:7) UBIN(9) UNAL;
     1399     3027    1   DCL WSQ UBIN WORD;
     1400     3028    1   DCL FAULT_CODE UBIN WORD;
     1401     3029    1   DCL S_TIMR_OLD UBIN WORD;
     1402     3030    1   DCL FLT_IS (0:31) UBIN WORD ALIGNED BASED;
     1403     3031    1   DCL PG_TABLE (0:511) UBIN WORD ALIGNED BASED;
     1404     3032        /**/
     1405     3033    1   DCL B$MISC$ PTR SYMREF;
     1406     3034    1   DCL B$LS$ PTR SYMREF;
     1407     3035    1   DCL B$JIT$ PTR SYMREF;
     1408     3036    1   DCL S_TIMR UBIN SYMREF;
     1409     3037    1   DCL SC_DIAGSNAP ENTRY CONV(2,0);
     1410     3038    1   DCL SSC$SASYNC ENTRY(0);
     1411     3039    1   DCL SSC$STIMR ENTRY(1);
     1412     3040        /**/
     1413     3041    2      DO INHIBIT;
     1414     3042    2           FAULT_CODE = FINFO.JERR.CODE-500;
     1415     3043    2           IF H_CODE~=0 AND H_CODE~=FAULT_CODE
     1416     3044    2             OR H_SYSID~=0 AND H_SYSID~=B$JIT.SYSID
     1417     3045    2             OR H_MODE~=0 AND H_MODE~=B$JIT.MODE
     1418     3046    2             OR H_PORT#~=0 AND H_PORT#~=FINFO.PORT#
     1419     3047    2             OR H_SPROC#~=0 AND H_SPROC#~=S$CU$->B$U.APR
     1420     3048    2           THEN RETURN;
     1421     3049    2           IF H_CODE=0
     1422     3050    2             AND (FAULT_CODE=2             /* MME                                */
     1423     3051    2             OR FAULT_CODE=3               /* FAULT TAG                          */
     1424     3052    2             OR FAULT_CODE=6               /* DERAIL                             */
     1425     3053    2             OR FAULT_CODE=8)              /* CONNECT                            */
     1426     3054    2           THEN RETURN;
     1427     3055    2           END;                            /* DO INHIBIT                         */
     1428     3056    1   HFB$DIAGSNAP1: ENTRY(FINFO);
     1429     3057        /*
     1430     3058                       ENTRY POINT FOR DIAG SNAP WITH NO ADDITONAL QUALIFICATION.
     1431     3059        */
PL6.E3A0      #004=HFB$DIAGSNAP File=HFB$FPR.:E05TSI                             TUE 07/29/97 22:26 Page:193  
     1432     3060    2      DO INHIBIT;
     1433     3061    2           S_TIMR_OLD = S_TIMR;
     1434     3062    2           CALL SSC$SASYNC;      /* SWITCH TO MONITOR MODE SO WE CAN UNINHIBIT   */
     1435     3063    2           END;
     1436     3064    1      H_SNAP = H_SNAP-1;
     1437     3065    1      IF MOD(B_MPT.SS$->B$SS.ISR.BOUND,4096) = 4095
     1438     3066    1        AND MOD(B_MPT.SS$->B$SS.ISR.BASE,4096) = 0
     1439     3067    2      THEN DO;
     1440     3068        /*
     1441     3069                   DONT FOOL AROUND WITH MOVING PART OF USER ISR
     1442     3070                   UNLESS ISR BASE AND BOUND ARE BOTH PAGE ALLIGNED
     1443     3071        */
     1444     3072    2           IF NOT(HW_FLTIC_OK OR B_MPT.SS$->B$SS.IR.MIR)
     1445     3073    2           THEN IC = B_MPT.SS$->B$SS.IC-1;
     1446     3074    2           ELSE IC = B_MPT.SS$->B$SS.IC;
     1447     3075    2           IC_HIGH = IC+4;
     1448     3076    2           IF MOD(IC_HIGH,1024)<MOD(IC,1024)
     1449     3077    3           THEN DO;
     1450     3078        /*
     1451     3079                      IC+4 CROSSES PAGE BOUNDARY,
     1452     3080                      USE END OF PAGE FOR IC_HIGH
     1453     3081        */
     1454     3082    3                IC_HIGH = IC-MOD(IC,1024)+1023;
     1455     3083    3                END;
     1456     3084    2           IC_LOW = IC_HIGH-31;
     1457     3085    2           IF MOD(IC_LOW,1024)>MOD(IC,1024)
     1458     3086    3           THEN DO;
     1459     3087        /*
     1460     3088                      IC-27 CROSSES PAGE BOUNDARY,
     1461     3089                      USE BEGINNING OF PAGE FOR IC_LOW
     1462     3090        */
     1463     3091    3                IC_LOW = IC-MOD(IC,1024);
     1464     3092    3                END;
     1465     3093    3           DO INHIBIT;
     1466     3094    3                MISCDESC=B$LS$->B$MLS.MISC;
     1467     3095    3                B$LS$->B$MLS.MISC=B_MPT.SS$->B$SS.ISR;
     1468     3096    3                S_FLT_IS_START = IC_LOW;
PL6.E3A0      #004=HFB$DIAGSNAP File=HFB$FPR.:E05TSI                             TUE 07/29/97 22:26 Page:194  
     1469     3097    3                S_FLT_IS = PINCRW(B$MISC$,IC_LOW)->FLT_IS;
     1470     3098    3                B$LS$->B$MLS.MISC=MISCDESC;
     1471     3099    3                END;                       /* INHIBIT                            */
     1472     3100    2           END;
     1473     3101    2      ELSE DO;
     1474     3102    2           S_FLT_IS_START = 0;
     1475     3103    2           S_FLT_IS = '0'B;
     1476     3104    2           END;
     1477     3105    1      IF B_MPT.SS$->B$SS.ISR.WSR ~= %MONWSR
     1478     3106    1        AND B_MPT.SS$->B$SS.ISR.WSR ~= %USERWSR
     1479     3107    2      THEN DO;
     1480     3108        /*
     1481     3109                   DUMP 1ST 512 WORDS OF PAGE TABLE SPECIFIED BY FAULTING
     1482     3110                   INSTRUCTION'S ISR IS NOT MONITOR OR USER
     1483     3111        */
     1484     3112    2           WSR = S_WSR;
     1485     3113    2           WSQ = WSR(B_MPT.SS$->B$SS.ISR.WSR);
     1486     3114    2           WSPTD = S_WSPTD(WSQ);
     1487     3115    2           IF WSQ~=0 AND WSPTD.P='1'B AND WSPTD.T='0'B
     1488     3116    3           THEN DO;
     1489     3117        /*
     1490     3118                      NOT REAL ADDRESSING AND PAGE TABLE IS PRESENT AND DENSE
     1491     3119        */
     1492     3120    3                TYPE2.BASE = WSPTD.ADDRESS*HW_PTB_UNITS*4;
     1493     3121    3                TYPE2.FIRST_WORD = '000777700002'O;
     1494     3122    4                DO INHIBIT;
     1495     3123    4                     MISCDESC=B$LS$->B$MLS.MISC;
     1496     3124    4                     B$LS$->B$MLS.MISC=TYPE2;
     1497     3125    4                     S_PGTABLE = B$MISC$->PG_TABLE;
     1498     3126    4                     B$LS$->B$MLS.MISC=MISCDESC;
     1499     3127    4                     END;                  /* INHIBIT                            */
     1500     3128    3                END;
     1501     3129    2           END;
     1502     3130    1      CALL SC_DIAGSNAP;
     1503     3131    1      CALL SSC$STIMR(S_TIMR_OLD); /* RESTORE S_TIMR, MAKE HANDLING TRANSPARENT   */
     1504     3132    1      RETURN;
     1505     3133    1   END;
PL6.E3A0      #004=HFB$DIAGSNAP File=HFB$FPR.:E05TSI                             TUE 07/29/97 22:26 Page:195  
     1506     3134        %EOD;

PL6.E3A0      #004=HFB$DIAGSNAP File=HFB$FPR.:E05TSI                             TUE 07/29/97 22:26 Page:196  
--  Include file information  --

   B$SS.:E05TOU  cannot be made into a system file and is referenced.
   B_MLSMAC_C.:E05TOU  is referenced.
   B_MAGIC_C.:E05TOU  is referenced.
   B$USER.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  is referenced.
   S_WSPTD_R.:E05TOU  cannot be made into a system file and is referenced.
   HF_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   B_STRINGS_C.:E05TOU  is referenced.
      No diagnostics issued in procedure HFB$DIAGSNAP.

   Procedure HFB$DIAGSNAP requires 188 words for executable code.
   Procedure HFB$DIAGSNAP requires 20 words of local(AUTO) storage.

PL6.E3A0      #004=HFB$DIAGSNAP File=HFB$FPR.:E05TSI                             TUE 07/29/97 22:26 Page:197  

 Object Unit name= HFB$DIAGSNAP                               File name= HFB$FPR.:E05TOU
 UTS= JUL 29 '97 22:26:19.28 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0  RoData even  UTS      1      1  HFB$DIAGSNAP
    1   Proc  even  none   188    274  HFB$DIAGSNAP

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     1      0   yes            yes      Std        1  HFB$DIAGSNAP
     1     65                  yes      Std        1  HFB$DIAGSNAP1

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       0 SSC$SASYNC
         yes           Std       1 SSC$STIMR
                       nStd      0 X66_AUTO_1
                       nStd      0 X66_ARET
                       Std       0 B_CONSPOOL_D
PL6.E3A0      #004=HFB$DIAGSNAP File=HFB$FPR.:E05TSI                             TUE 07/29/97 22:26 Page:198  

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     SC_DIAGSNAP                           H_CODE                                H_SYSID
     H_MODE                                H_PORT#                               H_SPROC#
     H_SNAP                                HW_PTB_UNITS                          HW_FLTIC_OK
     S_WSPTD                               S_WSR                                 S_FLT_IS_START
     S_FLT_IS                              S_PGTABLE                             S$CU$
     B_MPT                                 B$MISC$                               B$LS$
     B$JIT$                                S_TIMR                                B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ASLENTSID
PL6.E3A0      #004=HFB$DIAGSNAP File=HFB$FPR.:E05TSI                             TUE 07/29/97 22:26 Page:199  


     1321        1        /*T***********************************************************/
     1322        2        /*T*                                                         */
     1323        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
     1324        4        /*T*                                                         */
     1325        5        /*T***********************************************************/
     1326        6        /*F* NAME:        HFB$DIAGSNAP
     1327        7             PURPOSE:     Perform diagnostic snap upon occurrence of a fault
     1328        8                          if certain system programmer set conditions are met.  */
     1329        9        /*D* NAME:        HFB$DIAGSNAP
     1330       10             DESCRIPTION: The following flags, H_CODE, H_SYSID, H_MODE,
     1331       11                          H_PORT#, H_SPROC#, and H_SNAP control a diagnostic
     1332       12                          snapshot capability built into the fault handler.
     1333       13                          If H_SNAP is zero or negative, the diagnostic
     1334       14                          snapshot mode is disabled.  If H_SNAP is positive
     1335       15                          non-zero value, the snapshot mode is enabled and the
     1336       16                          other snapshot control flags are interrogated.  If
     1337       17                          all of the conditions for a snapshot are met, an
     1338       18                          HFA-548-5 snapshot dump takes place.  This is a
     1339       19                          small dump consisting only of hardware oriented
     1340       20                          data (JITs, HJITs, page tables, user read_only
     1341       21                          segment, history registers, associative memory,
     1342       22                          instructions from the user's instruction segment
     1343       23                          around the faulting instruction, and monitor static
     1344       24                          data).  Definitions of data unique to diagnostic
     1345       25                          snapshots in monitor static are found in modules
     1346       26                          HF_DATA_D and S_WSPTD_D.  The doubleword recovery
     1347       27                          code for this snapshot screech is found at location
     1348       28                          SC_DIAGSNAP in module B_SCREECH_D.  The definitons
     1349       29                          for the recovery codes are found in RV_MACRO_C.
     1350       30                          The procedure for the diagnostic snapshot is in
     1351       31                          module HFA$FAULT and entry point HFB$DIAGSNAP in
     1352       32                          module HFB$FPR.      */
     1353       33        HFB$DIAGSNAP: PROC(FINFO);

     33  1 000000   000000 700200 xent  HFB$DIAGSNAP TSX0  ! X66_AUTO_1
         1 000001   000024 000001                    ZERO    20,1
PL6.E3A0      #004=HFB$DIAGSNAP File=HFB$FPR.:E05TSI                             TUE 07/29/97 22:26 Page:200  

     1354       34        /**/
     1355       35        %INCLUDE B_STRINGS_C;
     1356      164        %INCLUDE HF_DATA_R;
     1357      207        %INCLUDE S_WSPTD_R;
     1358      223        %INCLUDE B$JIT_C;
     1359      537        %B$JIT0;
     1360      626        %A$JIT6X;
     1361      629        %INCLUDE B$USER;
     1362      845        %B$USERREFS;
     1363      849        %INCLUDE B_MAGIC_C;
     1364      967        %B_MPT (FPTN=B_MPT,STCLASS=SYMREF);
     1365     1060        %INCLUDE B_MLSMAC_C;
     1366     2002        %B_MLS (FPTN=B$MLS,STCLASS=BASED);
     1367     2817        %INCLUDE B$SS;
     1368     2996        /**/
     1369     2997    1   DCL 1 FINFO,
     1370     2998    1         2 PORT# UBIN(9) UNAL,
     1371     2999    1         2 * BIT(4) UNAL,
     1372     3000    1         2 BRANCH_MODE BIT(1) UNAL,
     1373     3001    1         2 PROCTYPE UBIN(4) UNAL,
     1374     3002    1         2 SUBCODE UBIN(18) UNAL,
     1375     3003    1         2 FLTREG BIT(36) UNAL,
     1376     3004    1         2 JERR,
     1377     3005    1           3 FCG BIT(12) UNAL,
     1378     3006    1           3 MID BIT(6) UNAL,
     1379     3007    1           3 MON BIT(1) UNAL,
     1380     3008    1           3 CODE UBIN(14) UNAL,
     1381     3009    1           3 SEV UBIN(3) UNAL,
     1382     3010    1         2 P# SBIN WORD;
     1383     3011        /**/
     1384     3012    1   DCL IC UBIN WORD;
     1385     3013    1   DCL IC_HIGH UBIN WORD;
     1386     3014    1   DCL IC_LOW UBIN WORD;
     1387     3015    1   DCL 1 WSPTD,
     1388     3016    1         2 ADDRESS UBIN(18) UNAL,          /* MOD 64 OR 1K WORDS                 */
     1389     3017    1         2 Q BIT(2) UNAL,
PL6.E3A0      #004=HFB$DIAGSNAP File=HFB$FPR.:E05TSI                             TUE 07/29/97 22:26 Page:201  
     1390     3018    1         2 P BIT(1) UNAL,                  /* 1 -> PAGE TABLE PRESENT            */
     1391     3019    1         2 T BIT(2) UNAL,                  /* 0 -> DENSE PAGE TABLE              */
     1392     3020    1         2 * BIT(1) UNAL,
     1393     3021    1         2 SIZE UBIN(12) UNAL;             /* MOD 64 WORDS                       */
     1394     3022    1   DCL 1 TYPE2 DALIGNED,
     1395     3023    1         2 FIRST_WORD BIT(36) UNAL,
     1396     3024    1         2 BASE UBIN WORD UNAL;
     1397     3025    1   DCL MISCDESC BIT(72) DALIGNED;
     1398     3026    1   DCL WSR (0:7) UBIN(9) UNAL;
     1399     3027    1   DCL WSQ UBIN WORD;
     1400     3028    1   DCL FAULT_CODE UBIN WORD;
     1401     3029    1   DCL S_TIMR_OLD UBIN WORD;
     1402     3030    1   DCL FLT_IS (0:31) UBIN WORD ALIGNED BASED;
     1403     3031    1   DCL PG_TABLE (0:511) UBIN WORD ALIGNED BASED;
     1404     3032        /**/
     1405     3033    1   DCL B$MISC$ PTR SYMREF;
     1406     3034    1   DCL B$LS$ PTR SYMREF;
     1407     3035    1   DCL B$JIT$ PTR SYMREF;
     1408     3036    1   DCL S_TIMR UBIN SYMREF;
     1409     3037    1   DCL SC_DIAGSNAP ENTRY CONV(2,0);
     1410     3038    1   DCL SSC$SASYNC ENTRY(0);
     1411     3039    1   DCL SSC$STIMR ENTRY(1);
     1412     3040        /**/
     1413     3041    2      DO INHIBIT;

     1414     3042    2           FAULT_CODE = FINFO.JERR.CODE-500;

   3042  1 000002   200003 470700                    LDP0  ! @FINFO,,AUTO
         1 000003   000002 236300                    LDQ   ! 2,,PR0
         1 000004   000003 772200                    QRL   ! 3
         1 000005   037777 376207                    ANQ   ! 16383,DL
         1 000006   000764 136207                    SBLQ  ! 500,DL
         1 000007   200017 756300                    STQ   ! FAULT_CODE,,AUTO

     1415     3043    2           IF H_CODE~=0 AND H_CODE~=FAULT_CODE

   3043  1 000010   000000 235200 xsym               LDA   ! H_CODE
PL6.E3A0      #004=HFB$DIAGSNAP File=HFB$FPR.:E05TSI                             TUE 07/29/97 22:26 Page:202  
         1 000011   000014 600200 1                  TZE   ! s:3043+4
         1 000012   000000 116200 xsym               CMPQ  ! H_CODE
         1 000013   000047 601200 1                  TNZ   ! s:3048
         1 000014   000000 235200 xsym               LDA   ! H_SYSID
         1 000015   000023 600200 1                  TZE   ! s:3043+11
         1 000016   000000 471600 xsym               LDP1  ! B$JIT$
         1 000017   100000 236300                    LDQ   ! 0,,PR1
         1 000020   777777 376207                    ANQ   ! -1,DL
         1 000021   000000 116200 xsym               CMPQ  ! H_SYSID
         1 000022   000047 601200 1                  TNZ   ! s:3048
         1 000023   000000 236200 xsym               LDQ   ! H_MODE
         1 000024   000032 600200 1                  TZE   ! s:3043+18
         1 000025   000000 471600 xsym               LDP1  ! B$JIT$
         1 000026   100000 236300                    LDQ   ! 0,,PR1
         1 000027   000040 772200                    QRL   ! 32
         1 000030   000000 116200 xsym               CMPQ  ! H_MODE
         1 000031   000047 601200 1                  TNZ   ! s:3048
         1 000032   000000 236200 xsym               LDQ   ! H_PORT#
         1 000033   000040 600200 1                  TZE   ! s:3043+24
         1 000034   000000 236300                    LDQ   ! 0,,PR0
         1 000035   000033 772200                    QRL   ! 27
         1 000036   000000 116200 xsym               CMPQ  ! H_PORT#
         1 000037   000047 601200 1                  TNZ   ! s:3048
         1 000040   000000 236200 xsym               LDQ   ! H_SPROC#
         1 000041   000050 600200 1                  TZE   ! s:3049
         1 000042   000000 471600 xsym               LDP1  ! S$CU$
         1 000043   100007 236300                    LDQ   ! 7,,PR1
         1 000044   000030 772200                    QRL   ! 24
         1 000045   000000 116200 xsym               CMPQ  ! H_SPROC#
         1 000046   000050 600200 1                  TZE   ! s:3049

     1416     3044    2             OR H_SYSID~=0 AND H_SYSID~=B$JIT.SYSID
     1417     3045    2             OR H_MODE~=0 AND H_MODE~=B$JIT.MODE
     1418     3046    2             OR H_PORT#~=0 AND H_PORT#~=FINFO.PORT#
     1419     3047    2             OR H_SPROC#~=0 AND H_SPROC#~=S$CU$->B$U.APR
     1420     3048    2           THEN RETURN;

PL6.E3A0      #004=HFB$DIAGSNAP File=HFB$FPR.:E05TSI                             TUE 07/29/97 22:26 Page:203  
   3048  1 000047   000000 702200 xent               TSX2  ! X66_ARET

     1421     3049    2           IF H_CODE=0

   3049  1 000050   000000 236200 xsym               LDQ   ! H_CODE
         1 000051   000064 601200 1                  TNZ   ! s:3055
         1 000052   200017 235300                    LDA   ! FAULT_CODE,,AUTO
         1 000053   000002 115207                    CMPA  ! 2,DL
         1 000054   000063 600200 1                  TZE   ! s:3054
         1 000055   000003 115207                    CMPA  ! 3,DL
         1 000056   000063 600200 1                  TZE   ! s:3054
         1 000057   000006 115207                    CMPA  ! 6,DL
         1 000060   000063 600200 1                  TZE   ! s:3054
         1 000061   000010 115207                    CMPA  ! 8,DL
         1 000062   000064 601200 1                  TNZ   ! s:3055

     1422     3050    2             AND (FAULT_CODE=2             /* MME                                */
     1423     3051    2             OR FAULT_CODE=3               /* FAULT TAG                          */
     1424     3052    2             OR FAULT_CODE=6               /* DERAIL                             */
     1425     3053    2             OR FAULT_CODE=8)              /* CONNECT                            */
     1426     3054    2           THEN RETURN;

   3054  1 000063   000000 702200 xent               TSX2  ! X66_ARET

     1427     3055    2           END;                            /* DO INHIBIT                         */

   3055  1 000064   000067 710000 1                  TRA     s:3061

     1428     3056    1   HFB$DIAGSNAP1: ENTRY(FINFO);

   3056  1 000065   000000 700200 xent  HFB$DIAGSNA* TSX0  ! X66_AUTO_1
         1 000066   000024 000001                    ZERO    20,1

     1429     3057        /*
     1430     3058                       ENTRY POINT FOR DIAG SNAP WITH NO ADDITONAL QUALIFICATION.
     1431     3059        */
     1432     3060    2      DO INHIBIT;
PL6.E3A0      #004=HFB$DIAGSNAP File=HFB$FPR.:E05TSI                             TUE 07/29/97 22:26 Page:204  

     1433     3061    2           S_TIMR_OLD = S_TIMR;

   3061  1 000067   000000 235200 xsym               LDA   ! S_TIMR
         1 000070   200020 755300                    STA   ! S_TIMR_OLD,,AUTO

     1434     3062    2           CALL SSC$SASYNC;      /* SWITCH TO MONITOR MODE SO WE CAN UNINHIBIT   */

   3062  1 000071   000002 631600 xsym               EPPR1 ! B_VECTNIL+2
         1 000072   000000 701200 xent               TSX1  ! SSC$SASYNC
         1 000073   000000 011200                    NOP   ! 0

     1435     3063    2           END;

     1436     3064    1      H_SNAP = H_SNAP-1;

   3064  1 000074   000001 336007                    LCQ     1,DL
         1 000075   000000 056000 xsym               ASQ     H_SNAP

     1437     3065    1      IF MOD(B_MPT.SS$->B$SS.ISR.BOUND,4096) = 4095

   3065  1 000076   000000 470400 xsym               LDP0    B_MPT
         1 000077   000010 236100                    LDQ     8,,PR0
         1 000100   000020 772000                    QRL     16
         1 000101   007777 376007                    ANQ     4095,DL
         1 000102   007777 116007                    CMPQ    4095,DL
         1 000103   000205 601000 1                  TNZ     s:3102
         1 000104   000011 236100                    LDQ     9,,PR0
         1 000105   010000 506007                    DIV     4096,DL
         1 000106   000044 733000                    LRS     36
         1 000107   000000 116003                    CMPQ    0,DU
         1 000110   000205 601000 1                  TNZ     s:3102

     1438     3066    1        AND MOD(B_MPT.SS$->B$SS.ISR.BASE,4096) = 0
     1439     3067    2      THEN DO;

     1440     3068        /*
PL6.E3A0      #004=HFB$DIAGSNAP File=HFB$FPR.:E05TSI                             TUE 07/29/97 22:26 Page:205  
     1441     3069                   DONT FOOL AROUND WITH MOVING PART OF USER ISR
     1442     3070                   UNLESS ISR BASE AND BOUND ARE BOTH PAGE ALLIGNED
     1443     3071        */
     1444     3072    2           IF NOT(HW_FLTIC_OK OR B_MPT.SS$->B$SS.IR.MIR)

   3072  1 000111   000000 234000 xsym               SZN     HW_FLTIC_OK
         1 000112   000123 604000 1                  TMI     s:3074
         1 000113   000004 236100                    LDQ     4,,PR0
         1 000114   000040 316007                    CANQ    32,DL
         1 000115   000123 601000 1                  TNZ     s:3074

     1445     3073    2           THEN IC = B_MPT.SS$->B$SS.IC-1;

   3073  1 000116   000004 236100                    LDQ     4,,PR0
         1 000117   000022 772000                    QRL     18
         1 000120   000001 136007                    SBLQ    1,DL
         1 000121   200004 756100                    STQ     IC,,AUTO
         1 000122   000126 710000 1                  TRA     s:3075

     1446     3074    2           ELSE IC = B_MPT.SS$->B$SS.IC;

   3074  1 000123   000004 236100                    LDQ     4,,PR0
         1 000124   000022 772000                    QRL     18
         1 000125   200004 756100                    STQ     IC,,AUTO

     1447     3075    2           IC_HIGH = IC+4;

   3075  1 000126   000004 036007                    ADLQ    4,DL
         1 000127   200005 756100                    STQ     IC_HIGH,,AUTO

     1448     3076    2           IF MOD(IC_HIGH,1024)<MOD(IC,1024)

   3076  1 000130   001777 376007                    ANQ     1023,DL
         1 000131   200022 756100                    STQ     S_TIMR_OLD+2,,AUTO
         1 000132   200004 236100                    LDQ     IC,,AUTO
         1 000133   001777 376007                    ANQ     1023,DL
         1 000134   200022 116100                    CMPQ    S_TIMR_OLD+2,,AUTO
PL6.E3A0      #004=HFB$DIAGSNAP File=HFB$FPR.:E05TSI                             TUE 07/29/97 22:26 Page:206  
         1 000135   000146 602000 1                  TNC     s:3084
         1 000136   000146 600000 1                  TZE     s:3084

     1449     3077    3           THEN DO;

     1450     3078        /*
     1451     3079                      IC+4 CROSSES PAGE BOUNDARY,
     1452     3080                      USE END OF PAGE FOR IC_HIGH
     1453     3081        */
     1454     3082    3                IC_HIGH = IC-MOD(IC,1024)+1023;

   3082  1 000137   200004 236100                    LDQ     IC,,AUTO
         1 000140   001777 376007                    ANQ     1023,DL
         1 000141   200022 756100                    STQ     S_TIMR_OLD+2,,AUTO
         1 000142   200004 236100                    LDQ     IC,,AUTO
         1 000143   200022 136100                    SBLQ    S_TIMR_OLD+2,,AUTO
         1 000144   001777 036007                    ADLQ    1023,DL
         1 000145   200005 756100                    STQ     IC_HIGH,,AUTO

     1455     3083    3                END;

     1456     3084    2           IC_LOW = IC_HIGH-31;

   3084  1 000146   200005 235100                    LDA     IC_HIGH,,AUTO
         1 000147   000037 135007                    SBLA    31,DL
         1 000150   200006 755100                    STA     IC_LOW,,AUTO

     1457     3085    2           IF MOD(IC_LOW,1024)>MOD(IC,1024)

   3085  1 000151   200006 236100                    LDQ     IC_LOW,,AUTO
         1 000152   001777 376007                    ANQ     1023,DL
         1 000153   200022 756100                    STQ     S_TIMR_OLD+2,,AUTO
         1 000154   200004 236100                    LDQ     IC,,AUTO
         1 000155   001777 376007                    ANQ     1023,DL
         1 000156   200022 116100                    CMPQ    S_TIMR_OLD+2,,AUTO
         1 000157   000166 603000 1                  TRC     s:3094

PL6.E3A0      #004=HFB$DIAGSNAP File=HFB$FPR.:E05TSI                             TUE 07/29/97 22:26 Page:207  
     1458     3086    3           THEN DO;

     1459     3087        /*
     1460     3088                      IC-27 CROSSES PAGE BOUNDARY,
     1461     3089                      USE BEGINNING OF PAGE FOR IC_LOW
     1462     3090        */
     1463     3091    3                IC_LOW = IC-MOD(IC,1024);

   3091  1 000160   200004 236100                    LDQ     IC,,AUTO
         1 000161   001777 376007                    ANQ     1023,DL
         1 000162   200022 756100                    STQ     S_TIMR_OLD+2,,AUTO
         1 000163   200004 236100                    LDQ     IC,,AUTO
         1 000164   200022 136100                    SBLQ    S_TIMR_OLD+2,,AUTO
         1 000165   200006 756100                    STQ     IC_LOW,,AUTO

     1464     3092    3                END;

     1465     3093    3           DO INHIBIT;

     1466     3094    3                MISCDESC=B$LS$->B$MLS.MISC;

   3094  1 000166   000000 471600 xsym               LDP1  ! B$LS$
         1 000167   100130 237300                    LDAQ  ! 88,,PR1
         1 000170   200012 757300                    STAQ  ! MISCDESC,,AUTO

     1467     3095    3                B$LS$->B$MLS.MISC=B_MPT.SS$->B$SS.ISR;

   3095  1 000171   000010 237300                    LDAQ  ! 8,,PR0
         1 000172   100130 757300                    STAQ  ! 88,,PR1

     1468     3096    3                S_FLT_IS_START = IC_LOW;

   3096  1 000173   200006 235300                    LDA   ! IC_LOW,,AUTO
         1 000174   000000 755200 xsym               STA   ! S_FLT_IS_START

     1469     3097    3                S_FLT_IS = PINCRW(B$MISC$,IC_LOW)->FLT_IS;

PL6.E3A0      #004=HFB$DIAGSNAP File=HFB$FPR.:E05TSI                             TUE 07/29/97 22:26 Page:208  
   3097  1 000175   000002 735200                    ALS   ! 2
         1 000176   000000 473600 xsym               LDP3  ! B$MISC$
         1 000177   000000 100705                    MLR   ! fill='000'O
         1 000200   300000 000200                    ADSC9   0,A,PR3                  cn=0,n=128
         1 000201   000000 000200 xsym               ADSC9   S_FLT_IS                 cn=0,n=128

     1470     3098    3                B$LS$->B$MLS.MISC=MISCDESC;

   3098  1 000202   200012 237300                    LDAQ  ! MISCDESC,,AUTO
         1 000203   100130 757300                    STAQ  ! 88,,PR1

     1471     3099    3                END;                       /* INHIBIT                            */

     1472     3100    2           END;

   3100  1 000204   000211 710000 1                  TRA     s:3105

     1473     3101    2      ELSE DO;

     1474     3102    2           S_FLT_IS_START = 0;

   3102  1 000205   000000 450000 xsym               STZ     S_FLT_IS_START

     1475     3103    2           S_FLT_IS = '0'B;

   3103  1 000206   000000 100400                    MLR     fill='000'O
         1 000207   000002 000001 xsym               ADSC9   B_VECTNIL+2              cn=0,n=1
         1 000210   000000 000200 xsym               ADSC9   S_FLT_IS                 cn=0,n=128

     1476     3104    2           END;

     1477     3105    1      IF B_MPT.SS$->B$SS.ISR.WSR ~= %MONWSR

   3105  1 000211   000010 236100                    LDQ     8,,PR0
         1 000212   000160 316007                    CANQ    112,DL
         1 000213   000263 600000 1                  TZE     s:3130
         1 000214   000010 236100                    LDQ     8,,PR0
PL6.E3A0      #004=HFB$DIAGSNAP File=HFB$FPR.:E05TSI                             TUE 07/29/97 22:26 Page:209  
         1 000215   000160 376007                    ANQ     112,DL
         1 000216   000160 116007                    CMPQ    112,DL
         1 000217   000263 600000 1                  TZE     s:3130

     1478     3106    1        AND B_MPT.SS$->B$SS.ISR.WSR ~= %USERWSR
     1479     3107    2      THEN DO;

     1480     3108        /*
     1481     3109                   DUMP 1ST 512 WORDS OF PAGE TABLE SPECIFIED BY FAULTING
     1482     3110                   INSTRUCTION'S ISR IS NOT MONITOR OR USER
     1483     3111        */
     1484     3112    2           WSR = S_WSR;

   3112  1 000220   000000 237000 xsym               LDAQ    S_WSR
         1 000221   200014 757100                    STAQ    WSR,,AUTO

     1485     3113    2           WSQ = WSR(B_MPT.SS$->B$SS.ISR.WSR);

   3113  1 000222   000010 236100                    LDQ     8,,PR0
         1 000223   000004 772000                    QRL     4
         1 000224   000007 376007                    ANQ     7,DL
         1 000225   000100 101506                    MRL     fill='000'O
         1 000226   200014 000001                    ADSC9   WSR,Q,AUTO               cn=0,n=1
         1 000227   200016 000004                    ADSC9   WSQ,,AUTO                cn=0,n=4

     1486     3114    2           WSPTD = S_WSPTD(WSQ);

   3114  1 000230   200016 720100                    LXL0    WSQ,,AUTO
         1 000231   000000 236010 xsym               LDQ     S_WSPTD,X0
         1 000232   200007 756100                    STQ     WSPTD,,AUTO

     1487     3115    2           IF WSQ~=0 AND WSPTD.P='1'B AND WSPTD.T='0'B

   3115  1 000233   200016 235100                    LDA     WSQ,,AUTO
         1 000234   000263 600000 1                  TZE     s:3130
         1 000235   100000 316007                    CANQ    32768,DL
         1 000236   000263 600000 1                  TZE     s:3130
PL6.E3A0      #004=HFB$DIAGSNAP File=HFB$FPR.:E05TSI                             TUE 07/29/97 22:26 Page:210  
         1 000237   060000 316007                    CANQ    24576,DL
         1 000240   000263 601000 1                  TNZ     s:3130

     1488     3116    3           THEN DO;

     1489     3117        /*
     1490     3118                      NOT REAL ADDRESSING AND PAGE TABLE IS PRESENT AND DENSE
     1491     3119        */
     1492     3120    3                TYPE2.BASE = WSPTD.ADDRESS*HW_PTB_UNITS*4;

   3120  1 000241   200007 236100                    LDQ     WSPTD,,AUTO
         1 000242   000022 772000                    QRL     18
         1 000243   000000 402000 xsym               MPY     HW_PTB_UNITS
         1 000244   000002 736000                    QLS     2
         1 000245   200011 756100                    STQ     TYPE2+1,,AUTO

     1493     3121    3                TYPE2.FIRST_WORD = '000777700002'O;

   3121  1 000246   000000 236000 0                  LDQ     0
         1 000247   200010 756100                    STQ     TYPE2,,AUTO

     1494     3122    4                DO INHIBIT;

     1495     3123    4                     MISCDESC=B$LS$->B$MLS.MISC;

   3123  1 000250   000000 471600 xsym               LDP1  ! B$LS$
         1 000251   100130 237300                    LDAQ  ! 88,,PR1
         1 000252   200012 757300                    STAQ  ! MISCDESC,,AUTO

     1496     3124    4                     B$LS$->B$MLS.MISC=TYPE2;

   3124  1 000253   200010 237300                    LDAQ  ! TYPE2,,AUTO
         1 000254   100130 757300                    STAQ  ! 88,,PR1

     1497     3125    4                     S_PGTABLE = B$MISC$->PG_TABLE;

   3125  1 000255   000000 473600 xsym               LDP3  ! B$MISC$
PL6.E3A0      #004=HFB$DIAGSNAP File=HFB$FPR.:E05TSI                             TUE 07/29/97 22:26 Page:211  
         1 000256   000000 100700                    MLR   ! fill='000'O
         1 000257   300000 002000                    ADSC9   0,,PR3                   cn=0,n=1024
         1 000260   000000 002000 xsym               ADSC9   S_PGTABLE                cn=0,n=1024

     1498     3126    4                     B$LS$->B$MLS.MISC=MISCDESC;

   3126  1 000261   200012 237300                    LDAQ  ! MISCDESC,,AUTO
         1 000262   100130 757300                    STAQ  ! 88,,PR1

     1499     3127    4                     END;                  /* INHIBIT                            */

     1500     3128    3                END;

     1501     3129    2           END;

     1502     3130    1      CALL SC_DIAGSNAP;

   3130  1 000263   000000 713400 xsym               CLIMB   SC_DIAGSNAP
         1 000264   000000 600000 xsid               climb   nvectors=         0

     1503     3131    1      CALL SSC$STIMR(S_TIMR_OLD); /* RESTORE S_TIMR, MAKE HANDLING TRANSPARENT   */

   3131  1 000265   200020 630500                    EPPR0   S_TIMR_OLD,,AUTO
         1 000266   200022 450500                    STP0    S_TIMR_OLD+2,,AUTO
         1 000267   200022 630500                    EPPR0   S_TIMR_OLD+2,,AUTO
         1 000270   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000271   000000 701000 xent               TSX1    SSC$STIMR
         1 000272   000000 011000                    NOP     0

     1504     3132    1      RETURN;

   3132  1 000273   000000 702200 xent               TSX2  ! X66_ARET

(unnamed)
 Sect OctLoc
   0     000   000777 700002                                                    ....
     1505     3133    1   END;
PL6.E3A0      #004=HFB$DIAGSNAP File=HFB$FPR.:E05TSI                             TUE 07/29/97 22:26 Page:212  
     1506     3134        %EOD;

PL6.E3A0      #004=HFB$DIAGSNAP File=HFB$FPR.:E05TSI                             TUE 07/29/97 22:26 Page:213  
--  Include file information  --

   B$SS.:E05TOU  cannot be made into a system file and is referenced.
   B_MLSMAC_C.:E05TOU  is referenced.
   B_MAGIC_C.:E05TOU  is referenced.
   B$USER.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  is referenced.
   S_WSPTD_R.:E05TOU  cannot be made into a system file and is referenced.
   HF_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   B_STRINGS_C.:E05TOU  is referenced.
      No diagnostics issued in procedure HFB$DIAGSNAP.
PL6.E3A0      #004=HFB$DIAGSNAP File=HFB$FPR.:E05TSI                             TUE 07/29/97 22:26 Page:214  

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @FINFO                    17-0-0/w UBIN        r     1 FAULT_CODE
    *0-0-0/w STRC(144)   r     1 FINFO                      4-0-0/w UBIN        r     1 IC
     5-0-0/w UBIN        r     1 IC_HIGH                    6-0-0/w UBIN        r     1 IC_LOW
    12-0-0/d BIT (72)    r     1 MISCDESC                  20-0-0/w UBIN        r     1 S_TIMR_OLD
    10-0-0/d STRC(72)    r     1 TYPE2                      7-0-0/b STRC        r     1 WSPTD
    16-0-0/w UBIN        r     1 WSQ                       14-0-0/b UBIN(9)     r     1 WSR(0:7)

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 B$JIT$                     0-0-0/w PTR         r     1 B$LS$
     0-0-0/w PTR         r     1 B$MISC$                    0-0-0/d STRC(432)   r     1 B_MPT
     0-0-0/w BIT         r     1 HW_FLTIC_OK                0-0-0/w SBIN        r     1 HW_PTB_UNITS
     0-0-0/w UBIN        r     1 H_CODE                     0-0-0/w UBIN        r     1 H_MODE
     0-0-0/w UBIN        r     1 H_PORT#                    0-0-0/w SBIN        r     1 H_SNAP
     0-0-0/w UBIN        r     1 H_SPROC#                   0-0-0/w UBIN        r     1 H_SYSID
     0-0-0/w PTR         r     1 S$CU$
     0-0-0/w UBIN        r     1 S_FLT_IS(0:31)
     0-0-0/w UBIN        r     1 S_FLT_IS_START
     0-0-0/w UBIN        r     1 S_PGTABLE(0:255)
     0-0-0/w UBIN        r     1 S_TIMR                     0-0-0/w STRC        r     1 S_WSPTD(0:28)
     0-0-0/d BIT (72)    r     1 S_WSR

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

PL6.E3A0      #004=HFB$DIAGSNAP File=HFB$FPR.:E05TSI                             TUE 07/29/97 22:26 Page:215  
     0-0-0/d STRC(2088)  r     1 B$JIT                      0-0-0/d STRC(10368) r     1 B$MLS
     0-0-0/d STRC(2304)  r     1 B$SS                       0-0-0/d STRC(576)   r     1 B$U
     0-0-0/w UBIN        r     1 FLT_IS(0:31)               0-0-0/w UBIN        r     1 PG_TABLE(0:511)


   Procedure HFB$DIAGSNAP requires 188 words for executable code.
   Procedure HFB$DIAGSNAP requires 20 words of local(AUTO) storage.
PL6.E3A0      #004=HFB$DIAGSNAP File=HFB$FPR.:E05TSI                             TUE 07/29/97 22:26 Page:216  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #004=HFB$DIAGSNAP File=HFB$FPR.:E05TSI                             TUE 07/29/97 22:26 Page:217  
          MINI XREF LISTING

B$DO.ECCINFO
       780**DCL       781--REDEF
B$JIT.ERR.MID
       544**DCL       544--REDEF
B$JIT.MODE
       538**DCL      3043>>IF
B$JIT.SYSID
       543**DCL      3043>>IF
B$JIT$
      3035**DCL       538--IMP-PTR  3043>>IF       3043>>IF
B$LS$
      3034**DCL      3094>>ASSIGN   3095>>ASSIGN   3098>>ASSIGN   3123>>ASSIGN   3124>>ASSIGN   3126>>ASSIGN
B$MISC$
      3033**DCL      3097>>ASSIGN   3125>>ASSIGN
B$MLS.MISC
      2314**DCL      3094>>ASSIGN   3095<<ASSIGN   3098<<ASSIGN   3123>>ASSIGN   3124<<ASSIGN   3126<<ASSIGN
B$SS.IC
      2836**DCL      3073>>ASSIGN   3074>>ASSIGN
B$SS.IR.MIR
      2850**DCL      3072>>IF
B$SS.ISR
      2871**DCL      3095>>ASSIGN
B$SS.ISR.BASE
      2876**DCL      3065>>IF
B$SS.ISR.BOUND
      2872**DCL      3065>>IF
B$SS.ISR.WSR
      2874**DCL      3105>>IF       3105>>IF       3113>>ASSIGN
B$SS.RVA
      2869**DCL      2870--REDEF
B$U.APR
       739**DCL      3043>>IF
PL6.E3A0      #004=HFB$DIAGSNAP File=HFB$FPR.:E05TSI                             TUE 07/29/97 22:26 Page:218  
B$U.MISC
       759**DCL       760--REDEF
B$USER.MISC
       835**DCL       836--REDEF
B_MPT.AS
      1003**DCL      1006--REDEF
B_MPT.ASDESC
      1035**DCL      1039--REDEF
B_MPT.ECCB
      1018**DCL      1021--REDEF
B_MPT.ECCBDESC
      1053**DCL      1057--REDEF
B_MPT.LS
       998**DCL      1001--REDEF
B_MPT.LSDESC
      1029**DCL      1033--REDEF
B_MPT.PS
      1008**DCL      1011--REDEF
B_MPT.PSDESC
      1041**DCL      1045--REDEF
B_MPT.SS
       993**DCL       996--REDEF
B_MPT.SS$
       996**DCL      3065>>IF       3065>>IF       3072>>IF       3073>>ASSIGN   3074>>ASSIGN   3095>>ASSIGN
      3105>>IF       3105>>IF       3113>>ASSIGN
B_MPT.SSDESC
      1023**DCL      1027--REDEF
B_MPT.TCB
      1013**DCL      1016--REDEF
B_MPT.TCBDESC
      1047**DCL      1051--REDEF
FAULT_CODE
      3028**DCL      3042<<ASSIGN   3043>>IF       3049>>IF       3049>>IF       3049>>IF       3049>>IF
FINFO
      2997**DCL        33--PROC     3056--ENTRY
FINFO.JERR.CODE
PL6.E3A0      #004=HFB$DIAGSNAP File=HFB$FPR.:E05TSI                             TUE 07/29/97 22:26 Page:219  
      3008**DCL      3042>>ASSIGN
FINFO.PORT#
      2998**DCL      3043>>IF
FLT_IS
      3030**DCL      3097>>ASSIGN
HW_FLTIC_OK
       205**DCL      3072>>IF
HW_PTB_UNITS
       201**DCL      3120>>ASSIGN
H_CODE
       183**DCL      3043>>IF       3043>>IF       3049>>IF
H_MODE
       184**DCL      3043>>IF       3043>>IF
H_PORT#
       184**DCL      3043>>IF       3043>>IF
H_SNAP
       184**DCL      3064<<ASSIGN   3064>>ASSIGN
H_SPROC#
       184**DCL      3043>>IF       3043>>IF
H_SYSID
       184**DCL      3043>>IF       3043>>IF
IC
      3012**DCL      3073<<ASSIGN   3074<<ASSIGN   3075>>ASSIGN   3076>>IF       3082>>ASSIGN   3082>>ASSIGN
      3085>>IF       3091>>ASSIGN   3091>>ASSIGN
IC_HIGH
      3013**DCL      3075<<ASSIGN   3076>>IF       3082<<ASSIGN   3084>>ASSIGN
IC_LOW
      3014**DCL      3084<<ASSIGN   3085>>IF       3091<<ASSIGN   3096>>ASSIGN   3097>>ASSIGN
MISCDESC
      3025**DCL      3094<<ASSIGN   3098>>ASSIGN   3123<<ASSIGN   3126>>ASSIGN
PG_TABLE
      3031**DCL      3125>>ASSIGN
S$CU$
       846**DCL      3043>>IF
SC_DIAGSNAP
      3037**DCL-ENT  3130--CALL
PL6.E3A0      #004=HFB$DIAGSNAP File=HFB$FPR.:E05TSI                             TUE 07/29/97 22:26 Page:220  
SSC$SASYNC
      3038**DCL-ENT  3062--CALL
SSC$STIMR
      3039**DCL-ENT  3131--CALL
S_FLT_IS
       217**DCL      3097<<ASSIGN   3103<<ASSIGN
S_FLT_IS_START
       216**DCL      3096<<ASSIGN   3102<<ASSIGN
S_PGTABLE
       218**DCL      3125<<ASSIGN
S_TIMR
      3036**DCL      3061>>ASSIGN
S_TIMR_OLD
      3029**DCL      3061<<ASSIGN   3131<>CALL
S_WSPTD
       215**DCL      3114>>ASSIGN
S_WSR
       216**DCL      3112>>ASSIGN
TYPE2
      3022**DCL      3124>>ASSIGN
TYPE2.BASE
      3024**DCL      3120<<ASSIGN
TYPE2.FIRST_WORD
      3023**DCL      3121<<ASSIGN
WSPTD
      3015**DCL      3114<<ASSIGN
WSPTD.ADDRESS
      3016**DCL      3120>>ASSIGN
WSPTD.P
      3018**DCL      3115>>IF
WSPTD.T
      3019**DCL      3115>>IF
WSQ
      3027**DCL      3113<<ASSIGN   3114>>ASSIGN   3115>>IF
WSR
      3026**DCL      3112<<ASSIGN   3113>>ASSIGN

PL6.E3A0      #005=HFB$FLTREG File=HFB$FPR.:E05TSI                               TUE 07/29/97 22:27 Page:221  
     1507        1        /*T***********************************************************/
     1508        2        /*T*                                                         */
     1509        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
     1510        4        /*T*                                                         */
     1511        5        /*T***********************************************************/
     1512        6        /*F* NAME:        HFB$FLTREG
     1513        7             PURPOSE:     Processing of the extended fault registers.  */
     1514        8        /*D* NAME:        HFB$FLTREG
     1515        9             DESCRIPTION: This subroutine is entered once per minute on every
     1516       10                          running CPU in the system.  HFA$FLTREG is called to
     1517       11                          check that cache and history registers are enabled.
     1518       12                          HFA$FLTREG will also read the extended
     1519       13                          fault register.  Upon return from HFA$FLTREG, this
     1520       14                          subroutine will create a Processor Error Log entry
     1521       15                          if the extended fault register is non-zero.  */
     1522       16        HFB$FLTREG: PROC;
     1523       17        %INCLUDE EL_SUBS_C;
     1524      101        %INCLUDE EL$TABLES;
     1525      424        %EL$PROCERR (STCLASS=AUTO,SHORT=YES);
     1526      434        %INCLUDE HF_DATA_R;
     1527      477        %INCLUDE SS_SCHED_R;
     1528      520        %INCLUDE S_WSPTD_R;
     1529      536        %INCLUDE B_STRINGS_C;
     1530      665        /**/
     1531      666    1   DCL TEMP BIT(72) DALIGNED;
     1532      667    1   DCL 1 FLTREG DALIGNED,
     1533      668    1         2 WORD1 UBIN WORD,
     1534      669    1         2 W1 REDEF WORD1,
     1535      670    1           3 * BIT (24),
     1536      671    1           3 W2 BIT (8),
     1537      672    1           3 * BIT (4),
     1538      673    1         2 WORD2 BIT(36);
     1539      674        /*D* NAME:        HFB$FLTREG
     1540      675             DESCRIPTION: ELS EXTENDED FAULT REGISTER:
     1541      676
     1542      677                  BIT 36 -> WRITE NOTIFY BUFFER OVERFLOW (ELS2)
     1543      678                  BIT 37 -> ONE CYCLE OF PATROL COMPLETED
PL6.E3A0      #005=HFB$FLTREG File=HFB$FPR.:E05TSI                               TUE 07/29/97 22:27 Page:222  
     1544      679                  BIT 38 -> INTERMITTENT ERROR ON PATROL
     1545      680
     1546      681                  BIT 39 -> ECS SINGLE ERROR CORRECTED
     1547      682                  BIT 40 -> CONNECT FROM DIAGNOSTIC UNIT
     1548      683                  BIT 41 -> ASSOCIATIVE MEMORY DIRECTORY PARITY ERROR
     1549      684
     1550      685                  BIT 42 -> ASSOCIATIVE MEMORY STORAGE PARITY ERROR
     1551      686                  BIT 43 -> WRITE NOTIFY PARITY ERROR (ELS2)
     1552      687        */
     1553      688        /*D* NAME:        HFB$FLTREG
     1554      689             DESCRIPTION: 8K CACHE FAULT REGISTER:
     1555      690
     1556      691                  BIT 36 -> BUFFER OVERFLOW - PORT_A
     1557      692                  BIT 37 -> BUFFER OVERFLOW - PORT_B
     1558      693                  BIT 38 -> BUFFER OVERFLOW - PORT_C
     1559      694
     1560      695                  BIT 39 -> BUFFER OVERFLOW - PORT_D
     1561      696                  BIT 40 -> PRIMARY DIRECTORY BUFFER OVERFLOW
     1562      697                  BIT 41 -> WRITE NOTIFY PARITY ERROR ON ANY PORT
     1563      698
     1564      699                  BIT 42 -> DUPLICATE DIRECTORY - LEVEL 0 PARITY ERROR
     1565      700                  BIT 43 -> DUPLICATE DIRECTORY - LEVEL 1 PARITY ERROR
     1566      701                  BIT 44 -> DUPLICATE DIRECTORY - LEVEL 2 PARITY ERROR
     1567      702
     1568      703                  BIT 45 -> DUPLICATE DIRECTORY - LEVEL 3 PARITY ERROR
     1569      704                  BIT 46 -> DUPLICATE DIRECTORY MULTIPLE MATCH ERROR
     1570      705        */
     1571      706    1   DCL ERROR UBIN;
     1572      707        /**/
     1573      708    1   DCL S_PNO UBIN SYMREF;
     1574      709        /**/
     1575      710    1   DCL HFA$FLTREG ENTRY(2);
     1576      711    1   DCL ELA$SYSLOG ENTRY(6) ALTRET;
     1577      712        /**/
     1578      713    1      IF H_FLTREG(S_PNO) ~= 0
     1579      714    2      THEN DO;
     1580      715    2           FLTREG.WORD1 = H_FLTREG(S_PNO);
PL6.E3A0      #005=HFB$FLTREG File=HFB$FPR.:E05TSI                               TUE 07/29/97 22:27 Page:223  
     1581      716    2           FLTREG.WORD2 = '0'B;
     1582      717    2           H_FLTREG(S_PNO) = 0;
     1583      718    2           IF S_PTYPE (S_PNO) = %ELS1
     1584      719    2           THEN
     1585      720    2                FLTREG.WORD2 = FLTREG.W1.W2;
     1586      721    2           CALL LOGERR;
     1587      722    2           END;
     1588      723    1      CALL HFA$FLTREG(TEMP,FLTREG);
     1589      724    1      IF S_RETRY > 0
     1590      725    1      THEN S_RETRY = 0;
     1591      726    1      IF (FLTREG.WORD2 & H_EXTFLTREG_MASK(S_PTYPE(S_PNO))) ~= '0'B
     1592      727    1      THEN CALL LOGERR;
     1593      728    1      RETURN;
     1594      729        /**/
     1595      730    1   LOGERR: PROC;
     1596      731    2      EL$PROCERR = '0'B;
     1597      732    2      EL$PROCERR.FLTREG = FLTREG;
     1598      733    2      EL$PROCERR.PORT# = S_PORTNR(S_PNO);
     1599      734    2      EL$PROCERR.PROCTYPE = S_PTYPE(S_PNO);
     1600      735    2      EL$PROCERR.RSW2 = H_RSW2(S_PNO);
     1601      736    2      CALL ELA$SYSLOG(EL_PROCERR,EL$PROCERR,SIZEW(EL$PROCERR),'0'B,1,ERROR);
     1602      737    2      RETURN;
     1603      738    2   END LOGERR;
     1604      739    1   END;
     1605      740        %EOD;

PL6.E3A0      #005=HFB$FLTREG File=HFB$FPR.:E05TSI                               TUE 07/29/97 22:27 Page:224  
--  Include file information  --

   B_STRINGS_C.:E05TOU  is referenced.
   S_WSPTD_R.:E05TOU  cannot be made into a system file and is referenced.
   SS_CNTRLD_R.:E05TOU  cannot be made into a system file and is referenced.
   SS_CNTRL_R.:E05TOU  cannot be made into a system file and is referenced.
   SS_SCHED_R.:E05TOU  cannot be made into a system file and is referenced.
   HF_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   EL$TABLES.:E05TOU  is referenced.
   EL_SUBS_C.:E05TOU  is referenced.
      No diagnostics issued in procedure HFB$FLTREG.

   Procedure HFB$FLTREG requires 70 words for executable code.
   Procedure HFB$FLTREG requires 28 words of local(AUTO) storage.

PL6.E3A0      #005=HFB$FLTREG File=HFB$FPR.:E05TSI                               TUE 07/29/97 22:27 Page:225  

 Object Unit name= HFB$FLTREG                                 File name= HFB$FPR.:E05TOU
 UTS= JUL 29 '97 22:27:14.96 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Proc  even  none    70    106  HFB$FLTREG
    1  RoData even  none     5      5  HFB$FLTREG

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     0      0   yes            yes      Std        0  HFB$FLTREG

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       2 HFA$FLTREG
 yes     yes           Std       6 ELA$SYSLOG
                       nStd      0 X66_AUTO_0
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     H_RSW2                           r    H_EXTFLTREG_MASK                      H_FLTREG
     S_PORTNR                              S_PTYPE                               S_RETRY
     S_PNO                                 B_VECTNIL
PL6.E3A0      #005=HFB$FLTREG File=HFB$FPR.:E05TSI                               TUE 07/29/97 22:27 Page:226  

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
PL6.E3A0      #005=HFB$FLTREG File=HFB$FPR.:E05TSI                               TUE 07/29/97 22:27 Page:227  


     1507        1        /*T***********************************************************/
     1508        2        /*T*                                                         */
     1509        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
     1510        4        /*T*                                                         */
     1511        5        /*T***********************************************************/
     1512        6        /*F* NAME:        HFB$FLTREG
     1513        7             PURPOSE:     Processing of the extended fault registers.  */
     1514        8        /*D* NAME:        HFB$FLTREG
     1515        9             DESCRIPTION: This subroutine is entered once per minute on every
     1516       10                          running CPU in the system.  HFA$FLTREG is called to
     1517       11                          check that cache and history registers are enabled.
     1518       12                          HFA$FLTREG will also read the extended
     1519       13                          fault register.  Upon return from HFA$FLTREG, this
     1520       14                          subroutine will create a Processor Error Log entry
     1521       15                          if the extended fault register is non-zero.  */
     1522       16        HFB$FLTREG: PROC;

     16  0 000000   000000 700200 xent  HFB$FLTREG   TSX0  ! X66_AUTO_0
         0 000001   000034 000000                    ZERO    28,0

     1523       17        %INCLUDE EL_SUBS_C;
     1524      101        %INCLUDE EL$TABLES;
     1525      424        %EL$PROCERR (STCLASS=AUTO,SHORT=YES);
     1526      434        %INCLUDE HF_DATA_R;
     1527      477        %INCLUDE SS_SCHED_R;
     1528      520        %INCLUDE S_WSPTD_R;
     1529      536        %INCLUDE B_STRINGS_C;
     1530      665        /**/
     1531      666    1   DCL TEMP BIT(72) DALIGNED;
     1532      667    1   DCL 1 FLTREG DALIGNED,
     1533      668    1         2 WORD1 UBIN WORD,
     1534      669    1         2 W1 REDEF WORD1,
     1535      670    1           3 * BIT (24),
     1536      671    1           3 W2 BIT (8),
     1537      672    1           3 * BIT (4),
     1538      673    1         2 WORD2 BIT(36);
PL6.E3A0      #005=HFB$FLTREG File=HFB$FPR.:E05TSI                               TUE 07/29/97 22:27 Page:228  
     1539      674        /*D* NAME:        HFB$FLTREG
     1540      675             DESCRIPTION: ELS EXTENDED FAULT REGISTER:
     1541      676
     1542      677                  BIT 36 -> WRITE NOTIFY BUFFER OVERFLOW (ELS2)
     1543      678                  BIT 37 -> ONE CYCLE OF PATROL COMPLETED
     1544      679                  BIT 38 -> INTERMITTENT ERROR ON PATROL
     1545      680
     1546      681                  BIT 39 -> ECS SINGLE ERROR CORRECTED
     1547      682                  BIT 40 -> CONNECT FROM DIAGNOSTIC UNIT
     1548      683                  BIT 41 -> ASSOCIATIVE MEMORY DIRECTORY PARITY ERROR
     1549      684
     1550      685                  BIT 42 -> ASSOCIATIVE MEMORY STORAGE PARITY ERROR
     1551      686                  BIT 43 -> WRITE NOTIFY PARITY ERROR (ELS2)
     1552      687        */
     1553      688        /*D* NAME:        HFB$FLTREG
     1554      689             DESCRIPTION: 8K CACHE FAULT REGISTER:
     1555      690
     1556      691                  BIT 36 -> BUFFER OVERFLOW - PORT_A
     1557      692                  BIT 37 -> BUFFER OVERFLOW - PORT_B
     1558      693                  BIT 38 -> BUFFER OVERFLOW - PORT_C
     1559      694
     1560      695                  BIT 39 -> BUFFER OVERFLOW - PORT_D
     1561      696                  BIT 40 -> PRIMARY DIRECTORY BUFFER OVERFLOW
     1562      697                  BIT 41 -> WRITE NOTIFY PARITY ERROR ON ANY PORT
     1563      698
     1564      699                  BIT 42 -> DUPLICATE DIRECTORY - LEVEL 0 PARITY ERROR
     1565      700                  BIT 43 -> DUPLICATE DIRECTORY - LEVEL 1 PARITY ERROR
     1566      701                  BIT 44 -> DUPLICATE DIRECTORY - LEVEL 2 PARITY ERROR
     1567      702
     1568      703                  BIT 45 -> DUPLICATE DIRECTORY - LEVEL 3 PARITY ERROR
     1569      704                  BIT 46 -> DUPLICATE DIRECTORY MULTIPLE MATCH ERROR
     1570      705        */
     1571      706    1   DCL ERROR UBIN;
     1572      707        /**/
     1573      708    1   DCL S_PNO UBIN SYMREF;
     1574      709        /**/
     1575      710    1   DCL HFA$FLTREG ENTRY(2);
PL6.E3A0      #005=HFB$FLTREG File=HFB$FPR.:E05TSI                               TUE 07/29/97 22:27 Page:229  
     1576      711    1   DCL ELA$SYSLOG ENTRY(6) ALTRET;
     1577      712        /**/
     1578      713    1      IF H_FLTREG(S_PNO) ~= 0

    713  0 000002   000000 720000 xsym               LXL0    S_PNO
         0 000003   000000 235010 xsym               LDA     H_FLTREG,X0
         0 000004   000021 600000 0                  TZE     s:723

     1579      714    2      THEN DO;

     1580      715    2           FLTREG.WORD1 = H_FLTREG(S_PNO);

    715  0 000005   200020 755100                    STA     FLTREG,,AUTO

     1581      716    2           FLTREG.WORD2 = '0'B;

    716  0 000006   200021 450100                    STZ     FLTREG+1,,AUTO

     1582      717    2           H_FLTREG(S_PNO) = 0;

    717  0 000007   000000 450010 xsym               STZ     H_FLTREG,X0

     1583      718    2           IF S_PTYPE (S_PNO) = %ELS1

    718  0 000010   000000 235010 xsym               LDA     S_PTYPE,X0
         0 000011   000002 115007                    CMPA    2,DL
         0 000012   000017 601000 0                  TNZ     s:721

     1584      719    2           THEN
     1585      720    2                FLTREG.WORD2 = FLTREG.W1.W2;

    720  0 000013   200020 236100                    LDQ     FLTREG,,AUTO
         0 000014   000030 736000                    QLS     24
         0 000015   776000 376003                    ANQ     -1024,DU
         0 000016   200021 756100                    STQ     FLTREG+1,,AUTO

     1586      721    2           CALL LOGERR;
PL6.E3A0      #005=HFB$FLTREG File=HFB$FPR.:E05TSI                               TUE 07/29/97 22:27 Page:230  

    721  0 000017   000044 701000 0                  TSX1    LOGERR
         0 000020   000000 011000                    NOP     0

     1587      722    2           END;

     1588      723    1      CALL HFA$FLTREG(TEMP,FLTREG);

    723  0 000021   200020 630500                    EPPR0   FLTREG,,AUTO
         0 000022   200027 450500                    STP0    ERROR+5,,AUTO
         0 000023   200016 631500                    EPPR1   TEMP,,AUTO
         0 000024   200026 451500                    STP1    ERROR+4,,AUTO
         0 000025   200026 630500                    EPPR0   ERROR+4,,AUTO
         0 000026   000020 631400 xsym               EPPR1   B_VECTNIL+16
         0 000027   000000 701000 xent               TSX1    HFA$FLTREG
         0 000030   000000 011000                    NOP     0

     1589      724    1      IF S_RETRY > 0

    724  0 000031   000000 235000 xsym               LDA     S_RETRY
         0 000032   000034 604400 0                  TMOZ    s:726

     1590      725    1      THEN S_RETRY = 0;

    725  0 000033   000000 450000 xsym               STZ     S_RETRY

     1591      726    1      IF (FLTREG.WORD2 & H_EXTFLTREG_MASK(S_PTYPE(S_PNO))) ~= '0'B

    726  0 000034   000000 720000 xsym               LXL0    S_PNO
         0 000035   000000 721010 xsym               LXL1    S_PTYPE,X0
         0 000036   200021 236100                    LDQ     FLTREG+1,,AUTO
         0 000037   000000 376011 xsym               ANQ     H_EXTFLTREG_MASK,X1
         0 000040   000043 600000 0                  TZE     s:728

     1592      727    1      THEN CALL LOGERR;

    727  0 000041   000044 701000 0                  TSX1    LOGERR
PL6.E3A0      #005=HFB$FLTREG File=HFB$FPR.:E05TSI                               TUE 07/29/97 22:27 Page:231  
         0 000042   000000 011000                    NOP     0

     1593      728    1      RETURN;

    728  0 000043   000000 702200 xent               TSX2  ! X66_ARET

     1594      729        /**/
     1595      730    1   LOGERR: PROC;

    730  0 000044   200024 741300       LOGERR       STX1  ! ERROR+2,,AUTO

     1596      731    2      EL$PROCERR = '0'B;

    731  0 000045   000100 100400                    MLR     fill='000'O
         0 000046   000002 000001 xsym               ADSC9   B_VECTNIL+2              cn=0,n=1
         0 000047   200003 000050                    ADSC9   EL$PROCERR,,AUTO         cn=0,n=40

     1597      732    2      EL$PROCERR.FLTREG = FLTREG;

    732  0 000050   200020 237100                    LDAQ    FLTREG,,AUTO
         0 000051   200005 755100                    STA     EL$PROCERR+2,,AUTO
         0 000052   200006 756100                    STQ     EL$PROCERR+3,,AUTO

     1598      733    2      EL$PROCERR.PORT# = S_PORTNR(S_PNO);

    733  0 000053   000000 720000 xsym               LXL0    S_PNO
         0 000054   000000 236010 xsym               LDQ     S_PORTNR,X0
         0 000055   000011 736000                    QLS     9
         0 000056   200010 552110                    STBQ    EL$PROCERR+5,'10'O,AUTO

     1599      734    2      EL$PROCERR.PROCTYPE = S_PTYPE(S_PNO);

    734  0 000057   000000 236010 xsym               LDQ     S_PTYPE,X0
         0 000060   000005 736000                    QLS     5
         0 000061   200010 676100                    ERQ     EL$PROCERR+5,,AUTO
         0 000062   000740 376007                    ANQ     480,DL
         0 000063   200010 656100                    ERSQ    EL$PROCERR+5,,AUTO
PL6.E3A0      #005=HFB$FLTREG File=HFB$FPR.:E05TSI                               TUE 07/29/97 22:27 Page:232  

     1600      735    2      EL$PROCERR.RSW2 = H_RSW2(S_PNO);

    735  0 000064   000000 236010 xsym               LDQ     H_RSW2,X0
         0 000065   200012 756100                    STQ     EL$PROCERR+7,,AUTO

     1601      736    2      CALL ELA$SYSLOG(EL_PROCERR,EL$PROCERR,SIZEW(EL$PROCERR),'0'B,1,ERROR);

    736  0 000066   200022 630500                    EPPR0   ERROR,,AUTO
         0 000067   200033 450500                    STP0    ERROR+9,,AUTO
         0 000070   000001 236000 1                  LDQ     1
         0 000071   200032 756100                    STQ     ERROR+8,,AUTO
         0 000072   000002 237000 1                  LDAQ    2
         0 000073   200030 757100                    STAQ    ERROR+6,,AUTO
         0 000074   200003 631500                    EPPR1   EL$PROCERR,,AUTO
         0 000075   200027 451500                    STP1    ERROR+5,,AUTO
         0 000076   000004 236000 1                  LDQ     4
         0 000077   200026 756100                    STQ     ERROR+4,,AUTO
         0 000100   200026 630500                    EPPR0   ERROR+4,,AUTO
         0 000101   000024 631400 xsym               EPPR1   B_VECTNIL+20
         0 000102   000000 701000 xent               TSX1    ELA$SYSLOG
         0 000103   000000 011000                    NOP     0

     1602      737    2      RETURN;

    737  0 000104   200024 221300                    LDX1  ! ERROR+2,,AUTO
         0 000105   000001 702211                    TSX2  ! 1,X1

(unnamed)
 Sect OctLoc
   1     000   000000 000314   000003 006000   000014 006000   000002 006000    ................
   1     004   000000 006000                                                    ....
     1603      738    2   END LOGERR;
     1604      739    1   END;
     1605      740        %EOD;

PL6.E3A0      #005=HFB$FLTREG File=HFB$FPR.:E05TSI                               TUE 07/29/97 22:27 Page:233  
--  Include file information  --

   B_STRINGS_C.:E05TOU  is referenced.
   S_WSPTD_R.:E05TOU  cannot be made into a system file and is referenced.
   SS_CNTRLD_R.:E05TOU  cannot be made into a system file and is referenced.
   SS_CNTRL_R.:E05TOU  cannot be made into a system file and is referenced.
   SS_SCHED_R.:E05TOU  cannot be made into a system file and is referenced.
   HF_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   EL$TABLES.:E05TOU  is referenced.
   EL_SUBS_C.:E05TOU  is referenced.
      No diagnostics issued in procedure HFB$FLTREG.
PL6.E3A0      #005=HFB$FLTREG File=HFB$FPR.:E05TSI                               TUE 07/29/97 22:27 Page:234  

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w STRC(360)   r     1 EL$PROCERR                22-0-0/w UBIN        r     1 ERROR
    20-0-0/d STRC(72)    r     1 FLTREG                    16-0-0/d BIT (72)    r     1 TEMP

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w BIT         r     1 H_EXTFLTREG_MASK(0:6)
     0-0-0/w UBIN        r     1 H_FLTREG(0:5)
     0-0-0/w BIT         r     1 H_RSW2(0:7)                0-0-0/w UBIN        r     1 S_PNO
     0-0-0/w UBIN        r     1 S_PORTNR(0:7)
     0-0-0/w SBIN        r     1 S_PTYPE(0:7)
     0-0-0/w SBIN        r     1 S_RETRY


   Procedure HFB$FLTREG requires 70 words for executable code.
   Procedure HFB$FLTREG requires 28 words of local(AUTO) storage.
PL6.E3A0      #005=HFB$FLTREG File=HFB$FPR.:E05TSI                               TUE 07/29/97 22:27 Page:235  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #005=HFB$FLTREG File=HFB$FPR.:E05TSI                               TUE 07/29/97 22:27 Page:236  
          MINI XREF LISTING

EL$PROCERR
       425**DCL       731<<ASSIGN    736<>CALL      736--CALL
EL$PROCERR.FLTREG
       425**DCL       732<<ASSIGN
EL$PROCERR.PORT#
       425**DCL       733<<ASSIGN
EL$PROCERR.PROCTYPE
       425**DCL       734<<ASSIGN
EL$PROCERR.RSW2
       426**DCL       735<<ASSIGN
ELA$SYSLOG
       711**DCL-ENT   736--CALL
ERROR
       706**DCL       736<>CALL
FLTREG
       667**DCL       723<>CALL      732>>ASSIGN
FLTREG.W1.W2
       671**DCL       720>>ASSIGN
FLTREG.WORD1
       668**DCL       669--REDEF     715<<ASSIGN
FLTREG.WORD2
       673**DCL       716<<ASSIGN    720<<ASSIGN    726>>IF
HFA$FLTREG
       710**DCL-ENT   723--CALL
H_EXTFLTREG_MASK
       462**DCL       726>>IF
H_FLTREG
       462**DCL       713>>IF        715>>ASSIGN    717<<ASSIGN
H_RSW2
       457**DCL       735>>ASSIGN
LOGERR
       730**PROC      721--CALL      727--CALL
PL6.E3A0      #005=HFB$FLTREG File=HFB$FPR.:E05TSI                               TUE 07/29/97 22:27 Page:237  
S_PNO
       708**DCL       713>>IF        715>>ASSIGN    717>>ASSIGN    718>>IF        726>>IF        733>>ASSIGN
       734>>ASSIGN    735>>ASSIGN
S_PORTNR
       506**DCL       733>>ASSIGN
S_PTYPE
       507**DCL       718>>IF        726>>IF        734>>ASSIGN
S_RETRY
       530**DCL       724>>IF        725<<ASSIGN
TEMP
       666**DCL       723<>CALL

PL6.E3A0      #006=HFB$ENAPORT File=HFB$FPR.:E05TSI                              TUE 07/29/97 22:27 Page:238  
     1606        1        /*T***********************************************************/
     1607        2        /*T*                                                         */
     1608        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
     1609        4        /*T*                                                         */
     1610        5        /*T***********************************************************/
     1611        6        /*F*      NAME:        HFB$ENAPORT
     1612        7                  PURPOSE:     Management of port access mask and cyclic priority
     1613        8                               registers in System Control Units (SCUs).
     1614        9                  DESCRIPTION: If the SCUs are configured to PROGRAM
     1615       10                               MODE, these routines insure that only those
     1616       11                               ports currently being used will be enabled.
     1617       12                               All other ports will be disabled.  The cyclic
     1618       13                               priority register is also set to keep one CPU
     1619       14                               from hogging all memory accesses.
     1620       15
     1621       16                               The proper setting of the SCU CONFIGURATION
     1622       17                               PANEL is as follows:
     1623       18
     1624       19                                 MODE: PROGRAM
     1625       20
     1626       21                                 PORT ENABLE: ON for MASTER CPU PORT,
     1627       22                                 all SLAVE CPU PORTS, and all IOM PORTS
     1628       23                                 normally connected to this system.
     1629       24
     1630       25                                 MASK A PORT ASSIGNMENT: Set to MASTER CPU PORT
     1631       26                                 on base SCU (lower memory).  Set to Off for
     1632       27                                 all other SCUs.
     1633       28
     1634       29                                              WARNING:
     1635       30
     1636       31                               If there is more than one SCU on a system,
     1637       32                               then all CPUs and IOMs must be connected to
     1638       33                               the same ports on all SCUs.  If this
     1639       34                               restriction can not be safisfied, then
     1640       35                               those SCUs with different port assignments
     1641       36                               MUST be configured to MANUAL MODE with the
     1642       37                               PORT ENABLE switches set ON for all ports
PL6.E3A0      #006=HFB$ENAPORT File=HFB$FPR.:E05TSI                              TUE 07/29/97 22:27 Page:239  
     1643       38                               that are to me used and the CYCLIC PRIORITY
     1644       39                               switches set appropriately.
     1645       40        */
     1646       41        HFB$ENAPORT: PROC(PORT#);
     1647       42        /* INCLUDES */
     1648       43        %INCLUDE SS_SCHED_R;
     1649       86        %INCLUDE HF_DATA_R;
     1650      129        %INCLUDE NI_DATA_R;
     1651      566        %NI$IOM;
     1652      571        %INCLUDE B_MLSMAC_C;
     1653     1513        %B_MLS (FPTN=B$MLS,STCLASS=BASED);
     1654     2328        %INCLUDE B$MAP;
     1655     2427        %INCLUDE B_STRINGS_C;
     1656     2556        %INCLUDE M_INFO_C;
     1657     2696        /* PARAMETERS */
     1658     2697    1   DCL PORT# UBIN;
     1659     2698        /* AUTO */
     1660     2699    1   DCL AND_MASK BIT(72) DALIGNED;
     1661     2700    1   DCL OR_MASK BIT(72) DALIGNED;
     1662     2701    1   DCL MISC_SAVE BIT(72) DALIGNED;
     1663     2702    1   DCL 1 TYPE2 DALIGNED,
     1664     2703    1         2 FIRST_WORD BIT(36) UNAL,
     1665     2704    1         2 BASE UBIN WORD UNAL;
     1666     2705    1   DCL 1 SCU_CONFIG DALIGNED,
     1667     2706    1         2 * BIT(57) UNAL,
     1668     2707    1         2 CYCLIC BIT(7) UNAL,
     1669     2708    1         2 * BIT(8) UNAL;
     1670     2709    1   DCL I SBIN;
     1671     2710    1   DCL HIGH_PORT UBIN;
     1672     2711    1   DCL LOW_PORT UBIN;
     1673     2712    1   DCL CYCLIC BIT(7);
     1674     2713    1   DCL CYCLIC_ARRAY (0:6) REDEF CYCLIC BIT(1) UNAL;
     1675     2714    1   DCL PAGE# UBIN;
     1676     2715    1   DCL CPUPORT# SBIN;
     1677     2716        /* CONSTANTS */
     1678     2717    1   DCL PORT_MASKS (0:7) BIT(72) CONSTANT DALIGNED INIT(
     1679     2718    1      '000000000010000000000000'O,'000000000004000000000000'O,
PL6.E3A0      #006=HFB$ENAPORT File=HFB$FPR.:E05TSI                              TUE 07/29/97 22:27 Page:240  
     1680     2719    1      '000000000002000000000000'O,'000000000001000000000000'O,
     1681     2720    1      '000000000000000000000010'O,'000000000000000000000004'O,
     1682     2721    1      '000000000000000000000002'O,'000000000000000000000001'O);
     1683     2722    1   DCL PORT_MASKS_RPM (0:7) BIT(72) CONSTANT DALIGNED INIT(
     1684     2723    1      '000000000000000000000200'O,'000000000000000000000100'O,
     1685     2724    1      '000000000000000000000040'O,'000000000000000000000020'O,
     1686     2725    1      '000000000000000000000010'O,'000000000000000000000004'O,
     1687     2726    1      '000000000000000000000002'O,'000000000000000000000001'O);
     1688     2727        /* SYMREFS */
     1689     2728    1   DCL B$IS$ PTR SYMREF;
     1690     2729    1   DCL B$SCU$ PTR SYMREF;
     1691     2730    1   DCL B$MPT$ PTR SYMREF;
     1692     2731    1   DCL B$LS$ PTR SYMREF;
     1693     2732    1   DCL B$MISC$ PTR SYMREF;
     1694     2733        /* BASED */
     1695     2734    1   DCL B$WORD BIT(36) BASED UNAL;
     1696     2735        /* ENTRY */
     1697     2736    1   DCL HFC$RMCM ENTRY(2);
     1698     2737    1   DCL HFC$SMCM ENTRY(2);
     1699     2738    1   DCL HFC$RSCR ENTRY(3);
     1700     2739    1   DCL HFC$SSCR ENTRY(3);
     1701     2740    1   DCL HFC$ASSOCCLR ENTRY;
     1702     2741        /* PROCEDURE */
     1703     2742    2      DO INHIBIT;
     1704     2743    2           IF PORT# = S_PORTNR(0)
     1705     2744    3           THEN DO;
     1706     2745        /*
     1707     2746                 IF PORT# IS MASTER CPU PORT, WE MUST HAVE BEEN CALLED
     1708     2747                 FROM ITT$TIGR.  USE CURRENT PORT MASKS AS LEFT
     1709     2748                 BY AARDVARK AS THE INITIAL PORT MASKS WHILE TIGR
     1710     2749                 IS RUNNING.  START BUILDING THE REAL PORT MASK IN
     1711     2750                 H_PORTMASK.
     1712     2751        */
     1713     2752    3                CALL HFC$RMCM(B$SCU$,OR_MASK);
     1714     2753    4                IF H_RPM_FLG THEN DO;
     1715     2754    4                     AND_MASK = '777777777777777777777400'O;
     1716     2755    4                     OR_MASK = OR_MASK & '000000000000000000000377'O;
PL6.E3A0      #006=HFB$ENAPORT File=HFB$FPR.:E05TSI                              TUE 07/29/97 22:27 Page:241  
     1717     2756    4                     CALL HFC$RSCR(B$SCU$,8,MISC_SAVE);
     1718     2757    4                     PINCRW(ADDR(OR_MASK),1)->B$WORD = ADDR(MISC_SAVE)->B$WORD;
     1719     2758    4                     END;
     1720     2759    4                ELSE DO;
     1721     2760    4                     OR_MASK = OR_MASK & '000000000017000000000017'O;
     1722     2761    4                     AND_MASK = '777777777760777777777760'O;
     1723     2762    4                     END;
     1724     2763    3                H_PORTMASK = '0'B;
     1725     2764    3                END;
     1726     2765    3           ELSE DO;
     1727     2766    3                IF H_RPM_FLG THEN
     1728     2767    3                     OR_MASK = '0'B;
     1729     2768    3                ELSE
     1730     2769    3                     OR_MASK = PORT_MASKS(PORT#);
     1731     2770    3                AND_MASK = '777777777777777777777777'O;
     1732     2771    3                END;
     1733     2772    2           IF H_RPM_FLG THEN
     1734     2773    2                H_PORTMASK = H_PORTMASK | PORT_MASKS_RPM(PORT#);
     1735     2774    2           ELSE
     1736     2775    2                H_PORTMASK = H_PORTMASK | PORT_MASKS(PORT#);
     1737     2776    2           GOTO SETMASK;
     1738     2777    2           END;                            /* INHIBIT                            */
     1739     2778        /**/
     1740     2779    1   HFB$DISPORT: ENTRY(PORT#);
     1741     2780    2      DO INHIBIT;
     1742     2781    3           IF H_RPM_FLG THEN DO;
     1743     2782    3                AND_MASK = '777777777777777777777777'O;
     1744     2783    3                OR_MASK = '0'B;
     1745     2784    3                END;
     1746     2785    3           ELSE DO;
     1747     2786    3                OR_MASK = '0'B;
     1748     2787    3                AND_MASK = ~PORT_MASKS(PORT#);
     1749     2788    3                END;
     1750     2789    2           H_PORTMASK = H_PORTMASK & AND_MASK;
     1751     2790    2           GOTO SETMASK;
     1752     2791    2           END;                            /* INHIBIT                            */
     1753     2792        /**/
PL6.E3A0      #006=HFB$ENAPORT File=HFB$FPR.:E05TSI                              TUE 07/29/97 22:27 Page:242  
     1754     2793    1   HFB$INITMASK: ENTRY;
     1755     2794        /*
     1756     2795              THIS ENTRY POINT IS CALLED FROM ITW$WRAPUP AFTER ALL
     1757     2796              OF THE TIGR IOM CARDS HAVE BEEN READ.  H_PORTMASK IS
     1758     2797              MOVED TO H_ENMASK AND H_DSMASK IN HFC$UTIL AND USED AS
     1759     2798              THE REAL PORT MASKS STARTING NOW.
     1760     2799        */
     1761     2800    2      DO INHIBIT;
     1762     2801    3           IF H_RPM_FLG THEN DO;
     1763     2802    3                OR_MASK = H_PORTMASK & '000000000000000000000377'O;
     1764     2803    3                CALL HFC$RSCR(B$SCU$,8,MISC_SAVE);
     1765     2804    3                PINCRW(ADDR(OR_MASK),1)->B$WORD = ADDR(MISC_SAVE)->B$WORD;
     1766     2805    3                AND_MASK = '777777777777777777777400'O;
     1767     2806    3                END;
     1768     2807    3           ELSE DO;
     1769     2808    3                OR_MASK = H_PORTMASK & '000000000017000000000017'O;
     1770     2809    3                AND_MASK = '777777777760777777777760'O;
     1771     2810    3                END;
     1772     2811    2   SETMASK: ;
     1773     2812    2           HIGH_PORT = S_PORTNR(0);
     1774     2813    2           LOW_PORT = S_PORTNR(0);
     1775     2814    3           DO I = 1 TO S_NSCPU;
     1776     2815    3                IF (~H_RPM_FLG AND (PORT_MASKS(S_PORTNR(I)) & H_PORTMASK)) OR
     1777     2816    3                  ( H_RPM_FLG AND (PORT_MASKS(S_PORTNR(I)) & H_PORTMASK))
     1778     2817    4                THEN DO;
     1779     2818    4                     IF S_PORTNR(I) > HIGH_PORT
     1780     2819    4                     THEN HIGH_PORT = S_PORTNR(I);
     1781     2820    4                     IF S_PORTNR(I) < LOW_PORT
     1782     2821    4                     THEN LOW_PORT = S_PORTNR(I);
     1783     2822    4                     END;
     1784     2823    3                END;
     1785     2824    2           CYCLIC = '0'B;
     1786     2825    3           DO I = LOW_PORT TO HIGH_PORT-1;
     1787     2826    3                CYCLIC_ARRAY(I) = '1'B;
     1788     2827    3                END;
     1789     2828    2           IF NI$IOM$(0) ~= ADDR(NIL)
     1790     2829    3           THEN DO;
PL6.E3A0      #006=HFB$ENAPORT File=HFB$FPR.:E05TSI                              TUE 07/29/97 22:27 Page:243  
     1791     2830    3                HIGH_PORT = NI$IOM$(0)->NI$IOM.ADDRESS;
     1792     2831    3                LOW_PORT = NI$IOM$(0)->NI$IOM.ADDRESS;
     1793     2832    4                DO I = 1 TO NI_IOMS-1;
     1794     2833    4                     IF NI$IOM$(I)->NI$IOM.ADDRESS > HIGH_PORT
     1795     2834    4                     THEN HIGH_PORT = NI$IOM$(I)->NI$IOM.ADDRESS;
     1796     2835    4                     IF NI$IOM$(I)->NI$IOM.ADDRESS < LOW_PORT
     1797     2836    4                     THEN LOW_PORT = NI$IOM$(I)->NI$IOM.ADDRESS;
     1798     2837    4                     END;
     1799     2838    4                DO I = LOW_PORT TO HIGH_PORT-1;
     1800     2839    4                     CYCLIC_ARRAY(I) = '1'B;
     1801     2840    4                     END;
     1802     2841    3                END;
     1803     2842    2           H_ENMASK = (H_ENMASK & AND_MASK) | OR_MASK;
     1804     2843    2           H_DSMASK = (H_DSMASK & AND_MASK) | OR_MASK;
     1805     2844    2           IF NOT H_MEMOK THEN RETURN;     /* Memory image not complete          */
     1806     2845    2           MISC_SAVE = B$LS$->B$MLS.MISC;
     1807     2846    2           TYPE2.FIRST_WORD = '000017740002'O;
     1808     2847    3           DO CPUPORT# = 0 TO H_MAXPORT#;
     1809     2848    3                TYPE2.BASE = H_PORT_FIRST_ADDR(CPUPORT#)*4;
     1810     2849    3                B$LS$->B$MLS.MISC = TYPE2;
     1811     2850    3                CALL HFC$RSCR(B$MISC$,8,SCU_CONFIG);
     1812     2851    3                SCU_CONFIG.CYCLIC = CYCLIC;
     1813     2852    3                CALL HFC$SSCR(B$MISC$,8,SCU_CONFIG);
     1814     2853    3                CALL HFC$RSCR(B$MISC$,8,H_SCU_CONFIG(CPUPORT#));
     1815     2854    3                IF NI$DS.LEVEL=0 AND TYPE2.BASE=0
     1816     2855    3                THEN CALL HFC$SMCM(B$MISC$,H_ENMASK);
     1817     2856    3                ELSE CALL HFC$SMCM(B$MISC$,H_DSMASK);
     1818     2857    3                END;
     1819     2858    2           B$LS$->B$MLS.MISC = MISC_SAVE;
     1820     2859    2           END;                            /* INHIBIT                            */
     1821     2860    1   END HFB$ENAPORT;
     1822     2861        %EOD;

PL6.E3A0      #006=HFB$ENAPORT File=HFB$FPR.:E05TSI                              TUE 07/29/97 22:27 Page:244  
--  Include file information  --

   M_INFO_C.:E05TOU  is referenced.
   B_STRINGS_C.:E05TOU  is referenced.
   B$MAP.:E05TOU  cannot be made into a system file and is referenced.
   B_MLSMAC_C.:E05TOU  is referenced.
   NI$TABLES.:E05TOU  is referenced.
   N$REQ.:E05TOU  is referenced.
   NI_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   HF_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   SS_CNTRLD_R.:E05TOU  cannot be made into a system file and is referenced.
   SS_CNTRL_R.:E05TOU  cannot be made into a system file and is referenced.
   SS_SCHED_R.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure HFB$ENAPORT.

   Procedure HFB$ENAPORT requires 298 words for executable code.
   Procedure HFB$ENAPORT requires 24 words of local(AUTO) storage.

PL6.E3A0      #006=HFB$ENAPORT File=HFB$FPR.:E05TSI                              TUE 07/29/97 22:27 Page:245  

 Object Unit name= HFB$ENAPORT                                File name= HFB$FPR.:E05TOU
 UTS= JUL 29 '97 22:27:31.84 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0  RoData even  UTS     43     53  HFB$ENAPORT
    1   Proc  even  none   298    452  HFB$ENAPORT
    2  RoData even  none    14     16  HFB$ENAPORT

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     1      0   yes            yes      Std        1  HFB$ENAPORT
     1    113                  yes      Std        1  HFB$DISPORT
     1    144                  yes      Std        0  HFB$INITMASK

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       2 HFC$RMCM
         yes           Std       2 HFC$SMCM
         yes           Std       3 HFC$RSCR
         yes           Std       3 HFC$SSCR
                       nStd      0 X66_AUTO_1
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET
PL6.E3A0      #006=HFB$ENAPORT File=HFB$FPR.:E05TSI                              TUE 07/29/97 22:27 Page:246  

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     S_PORTNR                              S_NSCPU                               H_ENMASK
     H_DSMASK                              H_MEMOK                               H_RPM_FLG
     H_SCU_CONFIG                          H_PORT_FIRST_ADDR                     H_MAXPORT#
     H_PORTMASK                            N$DCT$$                               N$FQ$
     NI$DS                                 NI$FQ$                                NI$IBUF$
     NI$IOM$                               NI$RP$                                NI_IOMS
     B$SCU$                                B$LS$                                 B$MISC$
     B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
PL6.E3A0      #006=HFB$ENAPORT File=HFB$FPR.:E05TSI                              TUE 07/29/97 22:27 Page:247  


     1606        1        /*T***********************************************************/
     1607        2        /*T*                                                         */
     1608        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
     1609        4        /*T*                                                         */
     1610        5        /*T***********************************************************/
     1611        6        /*F*      NAME:        HFB$ENAPORT
     1612        7                  PURPOSE:     Management of port access mask and cyclic priority
     1613        8                               registers in System Control Units (SCUs).
     1614        9                  DESCRIPTION: If the SCUs are configured to PROGRAM
     1615       10                               MODE, these routines insure that only those
     1616       11                               ports currently being used will be enabled.
     1617       12                               All other ports will be disabled.  The cyclic
     1618       13                               priority register is also set to keep one CPU
     1619       14                               from hogging all memory accesses.
     1620       15
     1621       16                               The proper setting of the SCU CONFIGURATION
     1622       17                               PANEL is as follows:
     1623       18
     1624       19                                 MODE: PROGRAM
     1625       20
     1626       21                                 PORT ENABLE: ON for MASTER CPU PORT,
     1627       22                                 all SLAVE CPU PORTS, and all IOM PORTS
     1628       23                                 normally connected to this system.
     1629       24
     1630       25                                 MASK A PORT ASSIGNMENT: Set to MASTER CPU PORT
     1631       26                                 on base SCU (lower memory).  Set to Off for
     1632       27                                 all other SCUs.
     1633       28
     1634       29                                              WARNING:
     1635       30
     1636       31                               If there is more than one SCU on a system,
     1637       32                               then all CPUs and IOMs must be connected to
     1638       33                               the same ports on all SCUs.  If this
     1639       34                               restriction can not be safisfied, then
     1640       35                               those SCUs with different port assignments
     1641       36                               MUST be configured to MANUAL MODE with the
PL6.E3A0      #006=HFB$ENAPORT File=HFB$FPR.:E05TSI                              TUE 07/29/97 22:27 Page:248  
     1642       37                               PORT ENABLE switches set ON for all ports
     1643       38                               that are to me used and the CYCLIC PRIORITY
     1644       39                               switches set appropriately.
     1645       40        */
     1646       41        HFB$ENAPORT: PROC(PORT#);

     41  1 000000   000000 700200 xent  HFB$ENAPORT  TSX0  ! X66_AUTO_1
         1 000001   000030 000001                    ZERO    24,1

     1647       42        /* INCLUDES */
     1648       43        %INCLUDE SS_SCHED_R;
     1649       86        %INCLUDE HF_DATA_R;
     1650      129        %INCLUDE NI_DATA_R;
     1651      566        %NI$IOM;
     1652      571        %INCLUDE B_MLSMAC_C;
     1653     1513        %B_MLS (FPTN=B$MLS,STCLASS=BASED);
     1654     2328        %INCLUDE B$MAP;
     1655     2427        %INCLUDE B_STRINGS_C;
     1656     2556        %INCLUDE M_INFO_C;
     1657     2696        /* PARAMETERS */
     1658     2697    1   DCL PORT# UBIN;
     1659     2698        /* AUTO */
     1660     2699    1   DCL AND_MASK BIT(72) DALIGNED;
     1661     2700    1   DCL OR_MASK BIT(72) DALIGNED;
     1662     2701    1   DCL MISC_SAVE BIT(72) DALIGNED;
     1663     2702    1   DCL 1 TYPE2 DALIGNED,
     1664     2703    1         2 FIRST_WORD BIT(36) UNAL,
     1665     2704    1         2 BASE UBIN WORD UNAL;
     1666     2705    1   DCL 1 SCU_CONFIG DALIGNED,
     1667     2706    1         2 * BIT(57) UNAL,
     1668     2707    1         2 CYCLIC BIT(7) UNAL,
     1669     2708    1         2 * BIT(8) UNAL;
     1670     2709    1   DCL I SBIN;
     1671     2710    1   DCL HIGH_PORT UBIN;
     1672     2711    1   DCL LOW_PORT UBIN;
     1673     2712    1   DCL CYCLIC BIT(7);
     1674     2713    1   DCL CYCLIC_ARRAY (0:6) REDEF CYCLIC BIT(1) UNAL;
PL6.E3A0      #006=HFB$ENAPORT File=HFB$FPR.:E05TSI                              TUE 07/29/97 22:27 Page:249  
     1675     2714    1   DCL PAGE# UBIN;
     1676     2715    1   DCL CPUPORT# SBIN;
     1677     2716        /* CONSTANTS */
     1678     2717    1   DCL PORT_MASKS (0:7) BIT(72) CONSTANT DALIGNED INIT(
     1679     2718    1      '000000000010000000000000'O,'000000000004000000000000'O,
     1680     2719    1      '000000000002000000000000'O,'000000000001000000000000'O,
     1681     2720    1      '000000000000000000000010'O,'000000000000000000000004'O,
     1682     2721    1      '000000000000000000000002'O,'000000000000000000000001'O);
     1683     2722    1   DCL PORT_MASKS_RPM (0:7) BIT(72) CONSTANT DALIGNED INIT(
     1684     2723    1      '000000000000000000000200'O,'000000000000000000000100'O,
     1685     2724    1      '000000000000000000000040'O,'000000000000000000000020'O,
     1686     2725    1      '000000000000000000000010'O,'000000000000000000000004'O,
     1687     2726    1      '000000000000000000000002'O,'000000000000000000000001'O);
     1688     2727        /* SYMREFS */
     1689     2728    1   DCL B$IS$ PTR SYMREF;
     1690     2729    1   DCL B$SCU$ PTR SYMREF;
     1691     2730    1   DCL B$MPT$ PTR SYMREF;
     1692     2731    1   DCL B$LS$ PTR SYMREF;
     1693     2732    1   DCL B$MISC$ PTR SYMREF;
     1694     2733        /* BASED */
     1695     2734    1   DCL B$WORD BIT(36) BASED UNAL;
     1696     2735        /* ENTRY */
     1697     2736    1   DCL HFC$RMCM ENTRY(2);
     1698     2737    1   DCL HFC$SMCM ENTRY(2);
     1699     2738    1   DCL HFC$RSCR ENTRY(3);
     1700     2739    1   DCL HFC$SSCR ENTRY(3);
     1701     2740    1   DCL HFC$ASSOCCLR ENTRY;
     1702     2741        /* PROCEDURE */
     1703     2742    2      DO INHIBIT;

     1704     2743    2           IF PORT# = S_PORTNR(0)

   2743  1 000002   200003 470700                    LDP0  ! @PORT#,,AUTO
         1 000003   000000 236300                    LDQ   ! 0,,PR0
         1 000004   000000 116200 xsym               CMPQ  ! S_PORTNR
         1 000005   000051 601200 1                  TNZ   ! s:2766

PL6.E3A0      #006=HFB$ENAPORT File=HFB$FPR.:E05TSI                              TUE 07/29/97 22:27 Page:250  
     1705     2744    3           THEN DO;

     1706     2745        /*
     1707     2746                 IF PORT# IS MASTER CPU PORT, WE MUST HAVE BEEN CALLED
     1708     2747                 FROM ITT$TIGR.  USE CURRENT PORT MASKS AS LEFT
     1709     2748                 BY AARDVARK AS THE INITIAL PORT MASKS WHILE TIGR
     1710     2749                 IS RUNNING.  START BUILDING THE REAL PORT MASK IN
     1711     2750                 H_PORTMASK.
     1712     2751        */
     1713     2752    3                CALL HFC$RMCM(B$SCU$,OR_MASK);

   2752  1 000006   200006 631700                    EPPR1 ! OR_MASK,,AUTO
         1 000007   200025 451700                    STP1  ! CPUPORT#+2,,AUTO
         1 000010   000000 236200 2                  LDQ   ! 0
         1 000011   200024 756300                    STQ   ! CPUPORT#+1,,AUTO
         1 000012   200024 630700                    EPPR0 ! CPUPORT#+1,,AUTO
         1 000013   000020 631600 xsym               EPPR1 ! B_VECTNIL+16
         1 000014   000000 701200 xent               TSX1  ! HFC$RMCM
         1 000015   000000 011200                    NOP   ! 0

     1714     2753    4                IF H_RPM_FLG THEN DO;

   2753  1 000016   000000 234200 xsym               SZN   ! H_RPM_FLG
         1 000017   000040 605200 1                  TPL   ! s:2760

     1715     2754    4                     AND_MASK = '777777777777777777777400'O;

   2754  1 000020   000040 237200 0                  LDAQ  ! PORT_MASKS_RPM+16
         1 000021   200004 757300                    STAQ  ! AND_MASK,,AUTO

     1716     2755    4                     OR_MASK = OR_MASK & '000000000000000000000377'O;

   2755  1 000022   200006 237300                    LDAQ  ! OR_MASK,,AUTO
         1 000023   000042 377200 0                  ANAQ  ! PORT_MASKS_RPM+18
         1 000024   200006 757300                    STAQ  ! OR_MASK,,AUTO

     1717     2756    4                     CALL HFC$RSCR(B$SCU$,8,MISC_SAVE);
PL6.E3A0      #006=HFB$ENAPORT File=HFB$FPR.:E05TSI                              TUE 07/29/97 22:27 Page:251  

   2756  1 000025   200010 630700                    EPPR0 ! MISC_SAVE,,AUTO
         1 000026   200026 450700                    STP0  ! CPUPORT#+3,,AUTO
         1 000027   000002 237200 2                  LDAQ  ! 2
         1 000030   200024 757300                    STAQ  ! CPUPORT#+1,,AUTO
         1 000031   200024 630700                    EPPR0 ! CPUPORT#+1,,AUTO
         1 000032   000021 631600 xsym               EPPR1 ! B_VECTNIL+17
         1 000033   000000 701200 xent               TSX1  ! HFC$RSCR
         1 000034   000000 011200                    NOP   ! 0

     1718     2757    4                     PINCRW(ADDR(OR_MASK),1)->B$WORD = ADDR(MISC_SAVE)->B$WORD;

   2757  1 000035   200010 236300                    LDQ   ! MISC_SAVE,,AUTO
         1 000036   200007 756300                    STQ   ! OR_MASK+1,,AUTO

     1719     2758    4                     END;

   2758  1 000037   000045 710200 1                  TRA   ! s:2763

     1720     2759    4                ELSE DO;

     1721     2760    4                     OR_MASK = OR_MASK & '000000000017000000000017'O;

   2760  1 000040   200006 237300                    LDAQ  ! OR_MASK,,AUTO
         1 000041   000044 377200 0                  ANAQ  ! PORT_MASKS_RPM+20
         1 000042   200006 757300                    STAQ  ! OR_MASK,,AUTO

     1722     2761    4                     AND_MASK = '777777777760777777777760'O;

   2761  1 000043   000046 237200 0                  LDAQ  ! PORT_MASKS_RPM+22
         1 000044   200004 757300                    STAQ  ! AND_MASK,,AUTO

     1723     2762    4                     END;

     1724     2763    3                H_PORTMASK = '0'B;

   2763  1 000045   000000 235203                    LDA   ! 0,DU
PL6.E3A0      #006=HFB$ENAPORT File=HFB$FPR.:E05TSI                              TUE 07/29/97 22:27 Page:252  
         1 000046   000000 236203                    LDQ   ! 0,DU
         1 000047   000000 757200 xsym               STAQ  ! H_PORTMASK

     1725     2764    3                END;

   2764  1 000050   000066 710200 1                  TRA   ! s:2772

     1726     2765    3           ELSE DO;

     1727     2766    3                IF H_RPM_FLG THEN

   2766  1 000051   000000 234200 xsym               SZN   ! H_RPM_FLG
         1 000052   000057 605200 1                  TPL   ! s:2769

     1728     2767    3                     OR_MASK = '0'B;

   2767  1 000053   000000 235203                    LDA   ! 0,DU
         1 000054   000000 236203                    LDQ   ! 0,DU
         1 000055   200006 757300                    STAQ  ! OR_MASK,,AUTO
         1 000056   000064 710200 1                  TRA   ! s:2770

     1729     2768    3                ELSE
     1730     2769    3                     OR_MASK = PORT_MASKS(PORT#);

   2769  1 000057   000000 720300                    LXL0  ! 0,,PR0
         1 000060   000000 635210                    EAA   ! 0,X0
         1 000061   000021 771200                    ARL   ! 17
         1 000062   000000 237205 0                  LDAQ  ! PORT_MASKS,AL
         1 000063   200006 757300                    STAQ  ! OR_MASK,,AUTO

     1731     2770    3                AND_MASK = '777777777777777777777777'O;

   2770  1 000064   000050 237200 0                  LDAQ  ! PORT_MASKS_RPM+24
         1 000065   200004 757300                    STAQ  ! AND_MASK,,AUTO

     1732     2771    3                END;

PL6.E3A0      #006=HFB$ENAPORT File=HFB$FPR.:E05TSI                              TUE 07/29/97 22:27 Page:253  
     1733     2772    2           IF H_RPM_FLG THEN

   2772  1 000066   000000 234200 xsym               SZN   ! H_RPM_FLG
         1 000067   000101 605200 1                  TPL   ! s:2775

     1734     2773    2                H_PORTMASK = H_PORTMASK | PORT_MASKS_RPM(PORT#);

   2773  1 000070   200003 470700                    LDP0  ! @PORT#,,AUTO
         1 000071   000000 720300                    LXL0  ! 0,,PR0
         1 000072   000000 635210                    EAA   ! 0,X0
         1 000073   000021 771200                    ARL   ! 17
         1 000074   000000 621205                    EAX1  ! 0,AL
         1 000075   000000 237200 xsym               LDAQ  ! H_PORTMASK
         1 000076   000020 277211 0                  ORAQ  ! PORT_MASKS_RPM,X1
         1 000077   000000 757200 xsym               STAQ  ! H_PORTMASK
         1 000100   000111 710200 1                  TRA   ! s:2776

     1735     2774    2           ELSE
     1736     2775    2                H_PORTMASK = H_PORTMASK | PORT_MASKS(PORT#);

   2775  1 000101   200003 470700                    LDP0  ! @PORT#,,AUTO
         1 000102   000000 720300                    LXL0  ! 0,,PR0
         1 000103   000000 635210                    EAA   ! 0,X0
         1 000104   000021 771200                    ARL   ! 17
         1 000105   000000 621205                    EAX1  ! 0,AL
         1 000106   000000 237200 xsym               LDAQ  ! H_PORTMASK
         1 000107   000000 277211 0                  ORAQ  ! PORT_MASKS,X1
         1 000110   000000 757200 xsym               STAQ  ! H_PORTMASK

     1737     2776    2           GOTO SETMASK;

   2776  1 000111   000175 710200 1                  TRA   ! SETMASK

     1738     2777    2           END;                            /* INHIBIT                            */

   2777  1 000112   000115 710000 1                  TRA     s:2781

PL6.E3A0      #006=HFB$ENAPORT File=HFB$FPR.:E05TSI                              TUE 07/29/97 22:27 Page:254  
     1739     2778        /**/
     1740     2779    1   HFB$DISPORT: ENTRY(PORT#);

   2779  1 000113   000000 700200 xent  HFB$DISPORT  TSX0  ! X66_AUTO_1
         1 000114   000030 000001                    ZERO    24,1

     1741     2780    2      DO INHIBIT;

     1742     2781    3           IF H_RPM_FLG THEN DO;

   2781  1 000115   000000 234200 xsym               SZN   ! H_RPM_FLG
         1 000116   000125 605200 1                  TPL   ! s:2786

     1743     2782    3                AND_MASK = '777777777777777777777777'O;

   2782  1 000117   000050 237200 0                  LDAQ  ! PORT_MASKS_RPM+24
         1 000120   200004 757300                    STAQ  ! AND_MASK,,AUTO

     1744     2783    3                OR_MASK = '0'B;

   2783  1 000121   000000 235203                    LDA   ! 0,DU
         1 000122   000000 236203                    LDQ   ! 0,DU
         1 000123   200006 757300                    STAQ  ! OR_MASK,,AUTO

     1745     2784    3                END;

   2784  1 000124   000137 710200 1                  TRA   ! s:2789

     1746     2785    3           ELSE DO;

     1747     2786    3                OR_MASK = '0'B;

   2786  1 000125   000000 235203                    LDA   ! 0,DU
         1 000126   000000 236203                    LDQ   ! 0,DU
         1 000127   200006 757300                    STAQ  ! OR_MASK,,AUTO

     1748     2787    3                AND_MASK = ~PORT_MASKS(PORT#);
PL6.E3A0      #006=HFB$ENAPORT File=HFB$FPR.:E05TSI                              TUE 07/29/97 22:27 Page:255  

   2787  1 000130   200003 470700                    LDP0  ! @PORT#,,AUTO
         1 000131   000000 720300                    LXL0  ! 0,,PR0
         1 000132   000000 635210                    EAA   ! 0,X0
         1 000133   000021 771200                    ARL   ! 17
         1 000134   000000 237205 0                  LDAQ  ! PORT_MASKS,AL
         1 000135   000004 677200 2                  ERAQ  ! 4
         1 000136   200004 757300                    STAQ  ! AND_MASK,,AUTO

     1749     2788    3                END;

     1750     2789    2           H_PORTMASK = H_PORTMASK & AND_MASK;

   2789  1 000137   000000 237200 xsym               LDAQ  ! H_PORTMASK
         1 000140   200004 377300                    ANAQ  ! AND_MASK,,AUTO
         1 000141   000000 757200 xsym               STAQ  ! H_PORTMASK

     1751     2790    2           GOTO SETMASK;

   2790  1 000142   000175 710200 1                  TRA   ! SETMASK

     1752     2791    2           END;                            /* INHIBIT                            */

   2791  1 000143   000146 710000 1                  TRA     s:2801

     1753     2792        /**/
     1754     2793    1   HFB$INITMASK: ENTRY;

   2793  1 000144   000000 700200 xent  HFB$INITMASK TSX0  ! X66_AUTO_1
         1 000145   000030 000001                    ZERO    24,1

     1755     2794        /*
     1756     2795              THIS ENTRY POINT IS CALLED FROM ITW$WRAPUP AFTER ALL
     1757     2796              OF THE TIGR IOM CARDS HAVE BEEN READ.  H_PORTMASK IS
     1758     2797              MOVED TO H_ENMASK AND H_DSMASK IN HFC$UTIL AND USED AS
     1759     2798              THE REAL PORT MASKS STARTING NOW.
     1760     2799        */
PL6.E3A0      #006=HFB$ENAPORT File=HFB$FPR.:E05TSI                              TUE 07/29/97 22:27 Page:256  
     1761     2800    2      DO INHIBIT;

     1762     2801    3           IF H_RPM_FLG THEN DO;

   2801  1 000146   000000 234200 xsym               SZN   ! H_RPM_FLG
         1 000147   000170 605200 1                  TPL   ! s:2808

     1763     2802    3                OR_MASK = H_PORTMASK & '000000000000000000000377'O;

   2802  1 000150   000000 237200 xsym               LDAQ  ! H_PORTMASK
         1 000151   000042 377200 0                  ANAQ  ! PORT_MASKS_RPM+18
         1 000152   200006 757300                    STAQ  ! OR_MASK,,AUTO

     1764     2803    3                CALL HFC$RSCR(B$SCU$,8,MISC_SAVE);

   2803  1 000153   200010 630700                    EPPR0 ! MISC_SAVE,,AUTO
         1 000154   200026 450700                    STP0  ! CPUPORT#+3,,AUTO
         1 000155   000000 237200 2                  LDAQ  ! 0
         1 000156   200024 757300                    STAQ  ! CPUPORT#+1,,AUTO
         1 000157   200024 630700                    EPPR0 ! CPUPORT#+1,,AUTO
         1 000160   000021 631600 xsym               EPPR1 ! B_VECTNIL+17
         1 000161   000000 701200 xent               TSX1  ! HFC$RSCR
         1 000162   000000 011200                    NOP   ! 0

     1765     2804    3                PINCRW(ADDR(OR_MASK),1)->B$WORD = ADDR(MISC_SAVE)->B$WORD;

   2804  1 000163   200010 236300                    LDQ   ! MISC_SAVE,,AUTO
         1 000164   200007 756300                    STQ   ! OR_MASK+1,,AUTO

     1766     2805    3                AND_MASK = '777777777777777777777400'O;

   2805  1 000165   000040 237200 0                  LDAQ  ! PORT_MASKS_RPM+16
         1 000166   200004 757300                    STAQ  ! AND_MASK,,AUTO

     1767     2806    3                END;

   2806  1 000167   000175 710200 1                  TRA   ! SETMASK
PL6.E3A0      #006=HFB$ENAPORT File=HFB$FPR.:E05TSI                              TUE 07/29/97 22:27 Page:257  

     1768     2807    3           ELSE DO;

     1769     2808    3                OR_MASK = H_PORTMASK & '000000000017000000000017'O;

   2808  1 000170   000000 237200 xsym               LDAQ  ! H_PORTMASK
         1 000171   000044 377200 0                  ANAQ  ! PORT_MASKS_RPM+20
         1 000172   200006 757300                    STAQ  ! OR_MASK,,AUTO

     1770     2809    3                AND_MASK = '777777777760777777777760'O;

   2809  1 000173   000046 237200 0                  LDAQ  ! PORT_MASKS_RPM+22
         1 000174   200004 757300                    STAQ  ! AND_MASK,,AUTO

     1771     2810    3                END;

   2808  1 000175                       SETMASK      null
     1772     2811    2   SETMASK: ;
     1773     2812    2           HIGH_PORT = S_PORTNR(0);

   2812  1 000175   000000 235200 xsym               LDA   ! S_PORTNR
         1 000176   200017 755300                    STA   ! HIGH_PORT,,AUTO

     1774     2813    2           LOW_PORT = S_PORTNR(0);

   2813  1 000177   200020 755300                    STA   ! LOW_PORT,,AUTO

     1775     2814    3           DO I = 1 TO S_NSCPU;

   2814  1 000200   000001 236207                    LDQ   ! 1,DL
         1 000201   200016 756300                    STQ   ! I,,AUTO
         1 000202   000241 710200 1                  TRA   ! s:2823+1

     1776     2815    3                IF (~H_RPM_FLG AND (PORT_MASKS(S_PORTNR(I)) & H_PORTMASK)) OR

   2815  1 000203   000000 236200 xsym               LDQ   ! H_RPM_FLG
         1 000204   400000 376203                    ANQ   ! -131072,DU
PL6.E3A0      #006=HFB$ENAPORT File=HFB$FPR.:E05TSI                              TUE 07/29/97 22:27 Page:258  
         1 000205   400000 676203                    ERQ   ! -131072,DU
         1 000206   000216 600200 1                  TZE   ! s:2815+11
         1 000207   200016 720300                    LXL0  ! I,,AUTO
         1 000210   000000 721210 xsym               LXL1  ! S_PORTNR,X0
         1 000211   000000 635211                    EAA   ! 0,X1
         1 000212   000021 771200                    ARL   ! 17
         1 000213   000000 237205 0                  LDAQ  ! PORT_MASKS,AL
         1 000214   000000 377200 xsym               ANAQ  ! H_PORTMASK
         1 000215   000227 601200 1                  TNZ   ! s:2818
         1 000216   000000 234200 xsym               SZN   ! H_RPM_FLG
         1 000217   000240 605200 1                  TPL   ! s:2823
         1 000220   200016 720300                    LXL0  ! I,,AUTO
         1 000221   000000 721210 xsym               LXL1  ! S_PORTNR,X0
         1 000222   000000 635211                    EAA   ! 0,X1
         1 000223   000021 771200                    ARL   ! 17
         1 000224   000000 237205 0                  LDAQ  ! PORT_MASKS,AL
         1 000225   000000 377200 xsym               ANAQ  ! H_PORTMASK
         1 000226   000240 600200 1                  TZE   ! s:2823

     1777     2816    3                  ( H_RPM_FLG AND (PORT_MASKS(S_PORTNR(I)) & H_PORTMASK))
     1778     2817    4                THEN DO;

     1779     2818    4                     IF S_PORTNR(I) > HIGH_PORT

   2818  1 000227   200017 236300                    LDQ   ! HIGH_PORT,,AUTO
         1 000230   000000 116210 xsym               CMPQ  ! S_PORTNR,X0
         1 000231   000234 603200 1                  TRC   ! s:2820

     1780     2819    4                     THEN HIGH_PORT = S_PORTNR(I);

   2819  1 000232   000000 235210 xsym               LDA   ! S_PORTNR,X0
         1 000233   200017 755300                    STA   ! HIGH_PORT,,AUTO

     1781     2820    4                     IF S_PORTNR(I) < LOW_PORT

   2820  1 000234   000000 236210 xsym               LDQ   ! S_PORTNR,X0
         1 000235   200020 116300                    CMPQ  ! LOW_PORT,,AUTO
PL6.E3A0      #006=HFB$ENAPORT File=HFB$FPR.:E05TSI                              TUE 07/29/97 22:27 Page:259  
         1 000236   000240 603200 1                  TRC   ! s:2823

     1782     2821    4                     THEN LOW_PORT = S_PORTNR(I);

   2821  1 000237   200020 756300                    STQ   ! LOW_PORT,,AUTO

     1783     2822    4                     END;

     1784     2823    3                END;

   2823  1 000240   200016 054300                    AOS   ! I,,AUTO
         1 000241   000000 236200 xsym               LDQ   ! S_NSCPU
         1 000242   000203 604200 1                  TMI   ! s:2815
         1 000243   200016 116300                    CMPQ  ! I,,AUTO
         1 000244   000203 605200 1                  TPL   ! s:2815

     1785     2824    2           CYCLIC = '0'B;

   2824  1 000245   000006 236200 2                  LDQ   ! 6
         1 000246   200021 356300                    ANSQ  ! CYCLIC,,AUTO

     1786     2825    3           DO I = LOW_PORT TO HIGH_PORT-1;

   2825  1 000247   200020 235300                    LDA   ! LOW_PORT,,AUTO
         1 000250   200016 755300                    STA   ! I,,AUTO
         1 000251   000261 710200 1                  TRA   ! s:2827+1

     1787     2826    3                CYCLIC_ARRAY(I) = '1'B;

   2826  1 000252   200016 235300                    LDA   ! I,,AUTO
         1 000253   000255 605200 1                  TPL   ! s:2826+3
         1 000254   000044 035203                    ADLA  ! 36,DU
         1 000255   003105 060600                    CSL   ! bolr='003'O
         1 000256   000030 000001 xsym               BDSC    B_VECTNIL+24             by=0,bit=0,n=1
         1 000257   200021 000001                    BDSC    CYCLIC,A,AUTO            by=0,bit=0,n=1

     1788     2827    3                END;
PL6.E3A0      #006=HFB$ENAPORT File=HFB$FPR.:E05TSI                              TUE 07/29/97 22:27 Page:260  

   2827  1 000260   200016 054300                    AOS   ! I,,AUTO
         1 000261   200016 236300                    LDQ   ! I,,AUTO
         1 000262   000252 604200 1                  TMI   ! s:2826
         1 000263   200017 116300                    CMPQ  ! HIGH_PORT,,AUTO
         1 000264   000252 602200 1                  TNC   ! s:2826

     1789     2828    2           IF NI$IOM$(0) ~= ADDR(NIL)

   2828  1 000265   000000 236200 xsym               LDQ   ! NI$IOM$
         1 000266   000001 116200 xsym               CMPQ  ! B_VECTNIL+1
         1 000267   000335 600200 1                  TZE   ! s:2842

     1790     2829    3           THEN DO;

     1791     2830    3                HIGH_PORT = NI$IOM$(0)->NI$IOM.ADDRESS;

   2830  1 000270   000000 470600 xsym               LDP0  ! NI$IOM$
         1 000271   000003 236300                    LDQ   ! 3,,PR0
         1 000272   000007 376207                    ANQ   ! 7,DL
         1 000273   200017 756300                    STQ   ! HIGH_PORT,,AUTO

     1792     2831    3                LOW_PORT = NI$IOM$(0)->NI$IOM.ADDRESS;

   2831  1 000274   200020 756300                    STQ   ! LOW_PORT,,AUTO

     1793     2832    4                DO I = 1 TO NI_IOMS-1;

   2832  1 000275   000001 235207                    LDA   ! 1,DL
         1 000276   200016 755300                    STA   ! I,,AUTO
         1 000277   000314 710200 1                  TRA   ! s:2837+1

     1794     2833    4                     IF NI$IOM$(I)->NI$IOM.ADDRESS > HIGH_PORT

   2833  1 000300   200016 720300                    LXL0  ! I,,AUTO
         1 000301   000000 470610 xsym               LDP0  ! NI$IOM$,X0
         1 000302   000003 236300                    LDQ   ! 3,,PR0
PL6.E3A0      #006=HFB$ENAPORT File=HFB$FPR.:E05TSI                              TUE 07/29/97 22:27 Page:261  
         1 000303   000007 376207                    ANQ   ! 7,DL
         1 000304   200017 116300                    CMPQ  ! HIGH_PORT,,AUTO
         1 000305   000310 602200 1                  TNC   ! s:2835
         1 000306   000310 600200 1                  TZE   ! s:2835

     1795     2834    4                     THEN HIGH_PORT = NI$IOM$(I)->NI$IOM.ADDRESS;

   2834  1 000307   200017 756300                    STQ   ! HIGH_PORT,,AUTO

     1796     2835    4                     IF NI$IOM$(I)->NI$IOM.ADDRESS < LOW_PORT

   2835  1 000310   200020 116300                    CMPQ  ! LOW_PORT,,AUTO
         1 000311   000313 603200 1                  TRC   ! s:2837

     1797     2836    4                     THEN LOW_PORT = NI$IOM$(I)->NI$IOM.ADDRESS;

   2836  1 000312   200020 756300                    STQ   ! LOW_PORT,,AUTO

     1798     2837    4                     END;

   2837  1 000313   200016 054300                    AOS   ! I,,AUTO
         1 000314   200016 236300                    LDQ   ! I,,AUTO
         1 000315   000000 116200 xsym               CMPQ  ! NI_IOMS
         1 000316   000300 604200 1                  TMI   ! s:2833

     1799     2838    4                DO I = LOW_PORT TO HIGH_PORT-1;

   2838  1 000317   200020 235300                    LDA   ! LOW_PORT,,AUTO
         1 000320   200016 755300                    STA   ! I,,AUTO
         1 000321   000331 710200 1                  TRA   ! s:2840+1

     1800     2839    4                     CYCLIC_ARRAY(I) = '1'B;

   2839  1 000322   200016 235300                    LDA   ! I,,AUTO
         1 000323   000325 605200 1                  TPL   ! s:2839+3
         1 000324   000044 035203                    ADLA  ! 36,DU
         1 000325   003105 060600                    CSL   ! bolr='003'O
PL6.E3A0      #006=HFB$ENAPORT File=HFB$FPR.:E05TSI                              TUE 07/29/97 22:27 Page:262  
         1 000326   000030 000001 xsym               BDSC    B_VECTNIL+24             by=0,bit=0,n=1
         1 000327   200021 000001                    BDSC    CYCLIC,A,AUTO            by=0,bit=0,n=1

     1801     2840    4                     END;

   2840  1 000330   200016 054300                    AOS   ! I,,AUTO
         1 000331   200016 236300                    LDQ   ! I,,AUTO
         1 000332   000322 604200 1                  TMI   ! s:2839
         1 000333   200017 116300                    CMPQ  ! HIGH_PORT,,AUTO
         1 000334   000322 602200 1                  TNC   ! s:2839

     1802     2841    3                END;

     1803     2842    2           H_ENMASK = (H_ENMASK & AND_MASK) | OR_MASK;

   2842  1 000335   000000 237200 xsym               LDAQ  ! H_ENMASK
         1 000336   200004 377300                    ANAQ  ! AND_MASK,,AUTO
         1 000337   200006 277300                    ORAQ  ! OR_MASK,,AUTO
         1 000340   000000 757200 xsym               STAQ  ! H_ENMASK

     1804     2843    2           H_DSMASK = (H_DSMASK & AND_MASK) | OR_MASK;

   2843  1 000341   000000 237200 xsym               LDAQ  ! H_DSMASK
         1 000342   200004 377300                    ANAQ  ! AND_MASK,,AUTO
         1 000343   200006 277300                    ORAQ  ! OR_MASK,,AUTO
         1 000344   000000 757200 xsym               STAQ  ! H_DSMASK

     1805     2844    2           IF NOT H_MEMOK THEN RETURN;     /* Memory image not complete          */

   2844  1 000345   000000 234200 xsym               SZN   ! H_MEMOK
         1 000346   000350 604200 1                  TMI   ! s:2845

   2844  1 000347   000000 702200 xent               TSX2  ! X66_ARET

     1806     2845    2           MISC_SAVE = B$LS$->B$MLS.MISC;

   2845  1 000350   000000 470600 xsym               LDP0  ! B$LS$
PL6.E3A0      #006=HFB$ENAPORT File=HFB$FPR.:E05TSI                              TUE 07/29/97 22:27 Page:263  
         1 000351   000130 237300                    LDAQ  ! 88,,PR0
         1 000352   200010 757300                    STAQ  ! MISC_SAVE,,AUTO

     1807     2846    2           TYPE2.FIRST_WORD = '000017740002'O;

   2846  1 000353   000052 236200 0                  LDQ   ! PORT_MASKS_RPM+26
         1 000354   200012 756300                    STQ   ! TYPE2,,AUTO

     1808     2847    3           DO CPUPORT# = 0 TO H_MAXPORT#;

   2847  1 000355   200023 450300                    STZ   ! CPUPORT#,,AUTO
         1 000356   000443 710200 1                  TRA   ! s:2857+1

     1809     2848    3                TYPE2.BASE = H_PORT_FIRST_ADDR(CPUPORT#)*4;

   2848  1 000357   200023 720300                    LXL0  ! CPUPORT#,,AUTO
         1 000360   000000 235210 xsym               LDA   ! H_PORT_FIRST_ADDR,X0
         1 000361   000002 735200                    ALS   ! 2
         1 000362   200013 755300                    STA   ! TYPE2+1,,AUTO

     1810     2849    3                B$LS$->B$MLS.MISC = TYPE2;

   2849  1 000363   200012 237300                    LDAQ  ! TYPE2,,AUTO
         1 000364   000000 470600 xsym               LDP0  ! B$LS$
         1 000365   000130 757300                    STAQ  ! 88,,PR0

     1811     2850    3                CALL HFC$RSCR(B$MISC$,8,SCU_CONFIG);

   2850  1 000366   200014 631700                    EPPR1 ! SCU_CONFIG,,AUTO
         1 000367   200026 451700                    STP1  ! CPUPORT#+3,,AUTO
         1 000370   000010 237200 2                  LDAQ  ! 8
         1 000371   200024 757300                    STAQ  ! CPUPORT#+1,,AUTO
         1 000372   200024 630700                    EPPR0 ! CPUPORT#+1,,AUTO
         1 000373   000021 631600 xsym               EPPR1 ! B_VECTNIL+17
         1 000374   000000 701200 xent               TSX1  ! HFC$RSCR
         1 000375   000000 011200                    NOP   ! 0

PL6.E3A0      #006=HFB$ENAPORT File=HFB$FPR.:E05TSI                              TUE 07/29/97 22:27 Page:264  
     1812     2851    3                SCU_CONFIG.CYCLIC = CYCLIC;

   2851  1 000376   200021 236300                    LDQ   ! CYCLIC,,AUTO
         1 000377   000025 772200                    QRL   ! 21
         1 000400   200015 676300                    ERQ   ! SCU_CONFIG+1,,AUTO
         1 000401   077400 376207                    ANQ   ! 32512,DL
         1 000402   200015 656300                    ERSQ  ! SCU_CONFIG+1,,AUTO

     1813     2852    3                CALL HFC$SSCR(B$MISC$,8,SCU_CONFIG);

   2852  1 000403   200014 630700                    EPPR0 ! SCU_CONFIG,,AUTO
         1 000404   200026 450700                    STP0  ! CPUPORT#+3,,AUTO
         1 000405   000010 237200 2                  LDAQ  ! 8
         1 000406   200024 757300                    STAQ  ! CPUPORT#+1,,AUTO
         1 000407   200024 630700                    EPPR0 ! CPUPORT#+1,,AUTO
         1 000410   000021 631600 xsym               EPPR1 ! B_VECTNIL+17
         1 000411   000000 701200 xent               TSX1  ! HFC$SSCR
         1 000412   000000 011200                    NOP   ! 0

     1814     2853    3                CALL HFC$RSCR(B$MISC$,8,H_SCU_CONFIG(CPUPORT#));

   2853  1 000413   200023 236300                    LDQ   ! CPUPORT#,,AUTO
         1 000414   000023 736200                    QLS   ! 19
         1 000415   000007 036200 2                  ADLQ  ! 7
         1 000416   200026 756300                    STQ   ! CPUPORT#+3,,AUTO
         1 000417   000010 237200 2                  LDAQ  ! 8
         1 000420   200024 757300                    STAQ  ! CPUPORT#+1,,AUTO
         1 000421   200024 630700                    EPPR0 ! CPUPORT#+1,,AUTO
         1 000422   000021 631600 xsym               EPPR1 ! B_VECTNIL+17
         1 000423   000000 701200 xent               TSX1  ! HFC$RSCR
         1 000424   000000 011200                    NOP   ! 0

     1815     2854    3                IF NI$DS.LEVEL=0 AND TYPE2.BASE=0

   2854  1 000425   000000 235200 xsym               LDA   ! NI$DS
         1 000426   000436 601200 1                  TNZ   ! s:2856
         1 000427   200013 236300                    LDQ   ! TYPE2+1,,AUTO
PL6.E3A0      #006=HFB$ENAPORT File=HFB$FPR.:E05TSI                              TUE 07/29/97 22:27 Page:265  
         1 000430   000436 601200 1                  TNZ   ! s:2856

     1816     2855    3                THEN CALL HFC$SMCM(B$MISC$,H_ENMASK);

   2855  1 000431   000012 630600 2                  EPPR0 ! 10
         1 000432   000020 631600 xsym               EPPR1 ! B_VECTNIL+16
         1 000433   000000 701200 xent               TSX1  ! HFC$SMCM
         1 000434   000000 011200                    NOP   ! 0
         1 000435   000442 710200 1                  TRA   ! s:2857

     1817     2856    3                ELSE CALL HFC$SMCM(B$MISC$,H_DSMASK);

   2856  1 000436   000014 630600 2                  EPPR0 ! 12
         1 000437   000020 631600 xsym               EPPR1 ! B_VECTNIL+16
         1 000440   000000 701200 xent               TSX1  ! HFC$SMCM
         1 000441   000000 011200                    NOP   ! 0

     1818     2857    3                END;

   2857  1 000442   200023 054300                    AOS   ! CPUPORT#,,AUTO
         1 000443   200023 236300                    LDQ   ! CPUPORT#,,AUTO
         1 000444   000000 116200 xsym               CMPQ  ! H_MAXPORT#
         1 000445   000357 604600 1                  TMOZ  ! s:2848

     1819     2858    2           B$LS$->B$MLS.MISC = MISC_SAVE;

   2858  1 000446   200010 237300                    LDAQ  ! MISC_SAVE,,AUTO
         1 000447   000000 470600 xsym               LDP0  ! B$LS$
         1 000450   000130 757300                    STAQ  ! 88,,PR0

     1820     2859    2           END;                            /* INHIBIT                            */

     1821     2860    1   END HFB$ENAPORT;

   2860  1 000451   000000 702200 xent               TSX2  ! X66_ARET

PORT_MASKS
PL6.E3A0      #006=HFB$ENAPORT File=HFB$FPR.:E05TSI                              TUE 07/29/97 22:27 Page:266  
 Sect OctLoc
   0     000   000000 000010   000000 000000   000000 000004   000000 000000    ................
   0     004   000000 000002   000000 000000   000000 000001   000000 000000    ................
   0     010   000000 000000   000000 000010   000000 000000   000000 000004    ................
   0     014   000000 000000   000000 000002   000000 000000   000000 000001    ................

PORT_MASKS_RPM
 Sect OctLoc
   0     020   000000 000000   000000 000200   000000 000000   000000 000100    ...............@
   0     024   000000 000000   000000 000040   000000 000000   000000 000020    ....... ........
   0     030   000000 000000   000000 000010   000000 000000   000000 000004    ................
   0     034   000000 000000   000000 000002   000000 000000   000000 000001    ................

(unnamed)
 Sect OctLoc
   0     040   777777 777777   777777 777400   000000 000000   000000 000377    ................
   0     044   000000 000017   000000 000017   777777 777760   777777 777760    ................
   0     050   777777 777777   777777 777777   000017 740002                    ............

(unnamed)
 Sect OctLoc
   2     000   000000 006000   000012 006000   000000 006000   000012 006000    ................
   2     004   777777 777777   777777 777777   003777 777777   000000 006000    ................
   2     010   000000 006000   000012 006000   000000 006000   000000 006000    ................
   2     014   000000 006000   000000 006000                                    ........
     1822     2861        %EOD;

PL6.E3A0      #006=HFB$ENAPORT File=HFB$FPR.:E05TSI                              TUE 07/29/97 22:27 Page:267  
--  Include file information  --

   M_INFO_C.:E05TOU  is referenced.
   B_STRINGS_C.:E05TOU  is referenced.
   B$MAP.:E05TOU  cannot be made into a system file and is referenced.
   B_MLSMAC_C.:E05TOU  is referenced.
   NI$TABLES.:E05TOU  is referenced.
   N$REQ.:E05TOU  is referenced.
   NI_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   HF_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   SS_CNTRLD_R.:E05TOU  cannot be made into a system file and is referenced.
   SS_CNTRL_R.:E05TOU  cannot be made into a system file and is referenced.
   SS_SCHED_R.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure HFB$ENAPORT.
PL6.E3A0      #006=HFB$ENAPORT File=HFB$FPR.:E05TSI                              TUE 07/29/97 22:27 Page:268  

 **** Variables and constants ****

  ****  Section 000 RoData HFB$ENAPORT

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d BIT (72)    r     1 PORT_MASKS(0:7)
    20-0-0/d BIT (72)    r     1 PORT_MASKS_RPM(0:7)

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @PORT#                     4-0-0/d BIT (72)    r     1 AND_MASK
    23-0-0/w SBIN        r     1 CPUPORT#                  21-0-0/b BIT (7)     r     1 CYCLIC
    21-0-0/b BIT         r     1 CYCLIC_ARRAY(0:6)
    17-0-0/w UBIN        r     1 HIGH_PORT                 16-0-0/w SBIN        r     1 I
    20-0-0/w UBIN        r     1 LOW_PORT                  10-0-0/d BIT (72)    r     1 MISC_SAVE
     6-0-0/d BIT (72)    r     1 OR_MASK                   *0-0-0/w UBIN        r     1 PORT#
    14-0-0/d STRC(72)    r     1 SCU_CONFIG                12-0-0/d STRC(72)    r     1 TYPE2

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 B$LS$                      0-0-0/w PTR         r     1 B$MISC$
     0-0-0/w PTR         r     1 B$SCU$                     0-0-0/d BIT (72)    r     1 H_DSMASK
     0-0-0/d BIT (72)    r     1 H_ENMASK                   0-0-0/w SBIN        r     1 H_MAXPORT#
     0-0-0/w BIT         r     1 H_MEMOK                    0-0-0/d BIT (72)    r     1 H_PORTMASK
     0-0-0/w UBIN        r     1 H_PORT_FIRST_ADDR(0:3)
     0-0-0/w BIT         r     1 H_RPM_FLG
     0-0-0/d STRC(72)    r     1 H_SCU_CONFIG(0:3)
     0-0-0/w PTR         r     1 N$DCT$$                    0-0-0/w PTR         r     1 N$FQ$
     0-0-0/w STRC        r     1 NI$DS                      0-0-0/w PTR         r     1 NI$FQ$
PL6.E3A0      #006=HFB$ENAPORT File=HFB$FPR.:E05TSI                              TUE 07/29/97 22:27 Page:269  
     0-0-0/w PTR         r     1 NI$IBUF$
     0-0-0/w PTR         r     1 NI$IOM$(0:3)
     0-0-0/w PTR         r     1 NI$RP$                     0-0-0/w SBIN        r     1 NI_IOMS
     0-0-0/w UBIN        r     1 S_NSCPU
     0-0-0/w UBIN        r     1 S_PORTNR(0:7)

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d STRC(10368) r     1 B$MLS                      0-0-0/b BIT         r     1 B$WORD
     0-0-0/w STRC(252)   r     1 NI$IOM


   Procedure HFB$ENAPORT requires 298 words for executable code.
   Procedure HFB$ENAPORT requires 24 words of local(AUTO) storage.
PL6.E3A0      #006=HFB$ENAPORT File=HFB$FPR.:E05TSI                              TUE 07/29/97 22:27 Page:270  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #006=HFB$ENAPORT File=HFB$FPR.:E05TSI                              TUE 07/29/97 22:27 Page:271  
          MINI XREF LISTING

AND_MASK
      2699**DCL      2754<<ASSIGN   2761<<ASSIGN   2770<<ASSIGN   2782<<ASSIGN   2787<<ASSIGN   2789>>ASSIGN
      2805<<ASSIGN   2809<<ASSIGN   2842>>ASSIGN   2843>>ASSIGN
B$LS$
      2731**DCL      2845>>ASSIGN   2849>>ASSIGN   2858>>ASSIGN
B$MAP.SCTRL
      2371**DCL      2372--REDEF
B$MISC$
      2732**DCL      2850<>CALL     2852<>CALL     2853<>CALL     2855<>CALL     2856<>CALL
B$MLS.MISC
      1825**DCL      2845>>ASSIGN   2849<<ASSIGN   2858<<ASSIGN
B$SCU$
      2729**DCL      2752<>CALL     2756<>CALL     2803<>CALL
B$WORD
      2734**DCL      2757<<ASSIGN   2757>>ASSIGN   2804<<ASSIGN   2804>>ASSIGN
CPUPORT#
      2715**DCL      2847<<DOINDEX  2848>>ASSIGN   2853>>CALL
CYCLIC
      2712**DCL      2713--REDEF    2824<<ASSIGN   2851>>ASSIGN
CYCLIC_ARRAY
      2713**DCL      2826<<ASSIGN   2839<<ASSIGN
HFC$RMCM
      2736**DCL-ENT  2752--CALL
HFC$RSCR
      2738**DCL-ENT  2756--CALL     2803--CALL     2850--CALL     2853--CALL
HFC$SMCM
      2737**DCL-ENT  2855--CALL     2856--CALL
HFC$SSCR
      2739**DCL-ENT  2852--CALL
HIGH_PORT
      2710**DCL      2812<<ASSIGN   2818>>IF       2819<<ASSIGN   2825>>DOINDEX  2830<<ASSIGN   2833>>IF
      2834<<ASSIGN   2838>>DOINDEX
PL6.E3A0      #006=HFB$ENAPORT File=HFB$FPR.:E05TSI                              TUE 07/29/97 22:27 Page:272  
H_DSMASK
        96**DCL      2843<<ASSIGN   2843>>ASSIGN   2856<>CALL
H_ENMASK
        96**DCL      2842<<ASSIGN   2842>>ASSIGN   2855<>CALL
H_MAXPORT#
       105**DCL      2847>>DOINDEX
H_MEMOK
        97**DCL      2844>>IF
H_PORTMASK
       105**DCL      2763<<ASSIGN   2773<<ASSIGN   2773>>ASSIGN   2775<<ASSIGN   2775>>ASSIGN   2789<<ASSIGN
      2789>>ASSIGN   2802>>ASSIGN   2808>>ASSIGN   2815>>IF       2815>>IF
H_PORT_FIRST_ADDR
       104**DCL      2848>>ASSIGN
H_RPM_FLG
        98**DCL      2753>>IF       2766>>IF       2772>>IF       2781>>IF       2801>>IF       2815>>IF
      2815>>IF
H_SCU_CONFIG
       101**DCL      2853<>CALL
I
      2709**DCL      2814<<DOINDEX  2815>>IF       2815>>IF       2818>>IF       2819>>ASSIGN   2820>>IF
      2821>>ASSIGN   2825<<DOINDEX  2826>>ASSIGN   2832<<DOINDEX  2833>>IF       2834>>ASSIGN   2835>>IF
      2836>>ASSIGN   2838<<DOINDEX  2839>>ASSIGN
LOW_PORT
      2711**DCL      2813<<ASSIGN   2820>>IF       2821<<ASSIGN   2825>>DOINDEX  2831<<ASSIGN   2835>>IF
      2836<<ASSIGN   2838>>DOINDEX
MISC_SAVE
      2701**DCL      2756<>CALL     2757--ASSIGN   2803<>CALL     2804--ASSIGN   2845<<ASSIGN   2858>>ASSIGN
N$DCT$$
       427**DCL       561--IMP-PTR
N$FQ$
       427**DCL       562--IMP-PTR
N$REQ_INIT.BUFADDR
       446**DCL       447--REDEF     447--REDEF
N$REQ_INIT.DLA.DRELADDR
       438**DCL       438--REDEF
N$REQ_INIT.DVE.EOMCHAR
PL6.E3A0      #006=HFB$ENAPORT File=HFB$FPR.:E05TSI                              TUE 07/29/97 22:27 Page:273  
       475**DCL       476--REDEF
N$REQ_INIT.EAINFO
       469**DCL       469--REDEF
N$REQ_INIT.EAINFOX
       469**DCL       470--REDEF
N$REQ_INIT.EVNTINFO
       470**DCL       470--REDEF
N$REQ_INIT.STATUS
       451**DCL       457--REDEF
NI$DS.LEVEL
       486**DCL      2854>>IF
NI$FQ$
       487**DCL       563--IMP-PTR
NI$IBUF$
       487**DCL       563--IMP-PTR
NI$IMXMBX_INIT.PAGED_BASE
       497**DCL       498--REDEF     498--REDEF
NI$IMXMBX_INIT.SIZE
       499**DCL       499--REDEF
NI$IOM.ADDRESS
       568**DCL      2830>>ASSIGN   2831>>ASSIGN   2833>>IF       2834>>ASSIGN   2835>>IF       2836>>ASSIGN
NI$IOM$
       509**DCL      2828>>IF       2830>>ASSIGN   2831>>ASSIGN   2833>>IF       2834>>ASSIGN   2835>>IF
      2836>>ASSIGN
NI$REQ_INIT.DCW
       521**DCL       524--REDEF
NI$REQ_INIT.DCW.TALLY
       522**DCL       522--REDEF
NI$REQ_INIT.IDCW.EXTA
       524**DCL       524--REDEF
NI$REQ_INIT.PCW
       526**DCL       530--REDEF
NI$REQ_INIT.SEEK
       531**DCL       532--REDEF     533--REDEF
NI$RP$
       535**DCL       565--IMP-PTR
PL6.E3A0      #006=HFB$ENAPORT File=HFB$FPR.:E05TSI                              TUE 07/29/97 22:27 Page:274  
NI_IOMS
       539**DCL      2832>>DOINDEX
NI_MBX_INIT.DCW.CONTROL.AE
       557**DCL       557--REDEF
NI_MBX_INIT.LPW.CONTROL.AE
       553**DCL       553--REDEF
OR_MASK
      2700**DCL      2752<>CALL     2755<<ASSIGN   2755>>ASSIGN   2757--ASSIGN   2760<<ASSIGN   2760>>ASSIGN
      2767<<ASSIGN   2769<<ASSIGN   2783<<ASSIGN   2786<<ASSIGN   2802<<ASSIGN   2804--ASSIGN   2808<<ASSIGN
      2842>>ASSIGN   2843>>ASSIGN
PORT#
      2697**DCL        41--PROC     2743>>IF       2769>>ASSIGN   2773>>ASSIGN   2775>>ASSIGN   2779--ENTRY
      2787>>ASSIGN
PORT_MASKS
      2717**DCL      2769>>ASSIGN   2775>>ASSIGN   2787>>ASSIGN   2815>>IF       2815>>IF
PORT_MASKS_RPM
      2722**DCL      2773>>ASSIGN
SCU_CONFIG
      2705**DCL      2850<>CALL     2852<>CALL
SCU_CONFIG.CYCLIC
      2707**DCL      2851<<ASSIGN
SETMASK
      2808**LABEL    2776--GOTO     2790--GOTO
S_NSCPU
        73**DCL      2814>>DOINDEX
S_PORTNR
        72**DCL      2743>>IF       2812>>ASSIGN   2813>>ASSIGN   2815>>IF       2815>>IF       2818>>IF
      2819>>ASSIGN   2820>>IF       2821>>ASSIGN
TYPE2
      2702**DCL      2849>>ASSIGN
TYPE2.BASE
      2704**DCL      2848<<ASSIGN   2854>>IF
TYPE2.FIRST_WORD
      2703**DCL      2846<<ASSIGN

PL6.E3A0      #007=HFB$CSHERR File=HFB$FPR.:E05TSI                               TUE 07/29/97 22:28 Page:275  
     1823        1        /*T***********************************************************/
     1824        2        /*T*                                                         */
     1825        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
     1826        4        /*T*                                                         */
     1827        5        /*T***********************************************************/
     1828        6        /*F* NAME:        HFB$CSHERR
     1829        7             PURPOSE:     Processing of cache parity errors.   */
     1830        8        /*D* NAME:        HFB$CSHERR
     1831        9             DESCRIPTION: This subroutine is entered from HFA$FAULT for every
     1832       10                          parity fault.  If the parity fault is due to a cache
     1833       11                          error, we interogate the contents of cache for the
     1834       12                          last 16 real addresses accessed according to the
     1835       13                          contents of the history registers.  If a parity
     1836       14                          is detected, the contents of the cache doubleword,
     1837       15                          the contents of the memory doubleword, and the
     1838       16                          cache address are placed in unused locations of the
     1839       17                          safe-store frame for the parity fault.   This data
     1840       18                          can be analyzed later by looking at the PROCESSOR
     1841       19                          ERROR entry in the error log file.    */
     1842       20        HFB$CSHERR: PROC(FINFO);
     1843       21        /**/
     1844       22        /* INCLUDE FILES */
     1845       23        %INCLUDE B_MAGIC_C;
     1846      141        %B_MPT (FPTN=B_MPT,STCLASS=SYMREF);
     1847      234        %INCLUDE MM_DATA_R;
     1848      754        %INCLUDE HF_DATA_R;
     1849      797        %INCLUDE SS_SCHED_R;
     1850      840        /**/
     1851      841        /* PARAMETERS */
     1852      842    1   DCL 1 FINFO DALIGNED,
     1853      843    1         2 PORT# UBIN(9) UNAL,
     1854      844    1         2 * BIT(4) UNAL,
     1855      845    1         2 BRANCH_MODE BIT(1) UNAL,
     1856      846    1         2 PROCTYPE UBIN(4) UNAL,
     1857      847    1         2 SUBCODE UBIN(18) UNAL,
     1858      848    1         2 FLTREG,                         /* FAULT REGISTER                     */
     1859      849    1           3 * BIT(16) UNAL,
PL6.E3A0      #007=HFB$CSHERR File=HFB$FPR.:E05TSI                               TUE 07/29/97 22:28 Page:276  
     1860      850    1           3 MEM_ILL_ACT,
     1861      851    1             4 PORT_A UBIN(4) UNAL,
     1862      852    1             4 PORT_B UBIN(4) UNAL,
     1863      853    1             4 PORT_C UBIN(4) UNAL,
     1864      854    1             4 PORT_D UBIN(4) UNAL,
     1865      855    1           3 MEM_ILL_ACT_ELS REDEF MEM_ILL_ACT,
     1866      856    1             4 PORT_AB BIT(8) UNAL,
     1867      857    1             4 * BIT(8) UNAL,
     1868      858    1           3 CACHE_ERR,
     1869      859    1             4 DIR_PAR BIT(1),
     1870      860    1             4 STORE_PAR BIT(1),
     1871      861    1             4 ILL_ACT_ON_STORE BIT(1),
     1872      862    1             4 PAR_ON_BLOCKLOAD BIT(1),
     1873      863    1         2 JERR,
     1874      864    1           3 FCG BIT(12) UNAL,
     1875      865    1           3 MID BIT(6) UNAL,
     1876      866    1           3 CODE UBIN(15) UNAL,
     1877      867    1           3 SEV UBIN(3) UNAL,
     1878      868    1         2 P# SBIN WORD,
     1879      869    1         2 HR,
     1880      870    1           3 DPSE_CU (0:63),
     1881      871    1             4 * BIT(36) UNAL,
     1882      872    1             4 RA UBIN(24) UNAL,
     1883      873    1             4 * BIT(12) UNAL,
     1884      874    1           3 L66 REDEF DPSE_CU,
     1885      875    1             4 CU (0:15) BIT(72),
     1886      876    1             4 OU (0:15) BIT(72),
     1887      877    1             4 VU (0:15),
     1888      878    1               5 * BIT(36) UNAL,
     1889      879    1               5 RA UBIN(24) UNAL,
     1890      880    1               5 * BIT(12) UNAL,
     1891      881    1             4 DU (0:15) BIT(72),
     1892      882    1           3 ELS REDEF DPSE_CU,
     1893      883    1             4 ELS_HR (0:15),
     1894      884    1               5 * BIT(36) UNAL,
     1895      885    1               5 RAL UBIN(18) UNAL,
     1896      886    1               5 * BIT(13) UNAL,
PL6.E3A0      #007=HFB$CSHERR File=HFB$FPR.:E05TSI                               TUE 07/29/97 22:28 Page:277  
     1897      887    1               5 RAU UBIN(5) UNAL,
     1898      888    1             4 * (0:47) BIT(72);
     1899      889        /**/
     1900      890        /* AUTO */
     1901      891    1   DCL CSH_ADDR UBIN;
     1902      892    1   DCL CSH_ADDR_BIN REDEF CSH_ADDR BIT(36);
     1903      893    1   DCL MEM_ADDR UBIN;
     1904      894    1   DCL MEM_ADDR_BIN REDEF MEM_ADDR BIT(36);
     1905      895    1   DCL CSH_INC UBIN HALF;
     1906      896    1   DCL CSH_MASK BIT(36);
     1907      897    1   DCL I SBIN;
     1908      898        /**/
     1909      899        /* BASED */
     1910      900    1   DCL 1 B$SS BASED(B_MPT.SS$) DALIGNED,
     1911      901    1         2 * (0:55) UBIN,
     1912      902    1         2 CSHERR,
     1913      903    1           3 CSH_SIZE UBIN HALF UNAL,
     1914      904    1           3 CSH_ADDR UBIN HALF UNAL,
     1915      905    1           3 MEM_ADDR UBIN,
     1916      906    1           3 CSH_DATA BIT(72),
     1917      907    1           3 MEM_DATA BIT(72);
     1918      908        /**/
     1919      909        /* EXTERNAL REFERENCES */
     1920      910    1   DCL HFA$CSHERR ENTRY(5) ALTRET;
     1921      911    1   DCL S_PNO UBIN SYMREF;
     1922      912        /**/
     1923      913        /**/
     1924      914        /* PROCEDURE */
     1925      915    2      DO INHIBIT;
     1926      916    2           B$SS.CSHERR = '0'B;
     1927      917    2           IF (S_PTYPE(S_PNO)~=%ELS1 AND FINFO.FLTREG.MEM_ILL_ACT~='0'B)
     1928      918    2             OR (S_PTYPE(S_PNO)=%ELS1
     1929      919    2             AND FINFO.FLTREG.MEM_ILL_ACT_ELS.PORT_AB~='0'B)
     1930      920    2             OR (S_PTYPE(S_PNO)~=%ELS1
     1931      921    2             AND FINFO.FLTREG.CACHE_ERR.STORE_PAR = '0'B
     1932      922    2             AND FINFO.FLTREG.CACHE_ERR.PAR_ON_BLOCKLOAD = '0'B)
     1933      923    2             OR FINFO.P# = 0
PL6.E3A0      #007=HFB$CSHERR File=HFB$FPR.:E05TSI                               TUE 07/29/97 22:28 Page:278  
     1934      924    2           THEN RETURN;
     1935      925    2           IF H_RSW2(S_PNO) & '000000100000'O
     1936      926    3           THEN DO;
     1937      927    3                CSH_INC = 2048;
     1938      928    3                CSH_MASK = '000000003776'O;
     1939      929    3                END;
     1940      930    3           ELSE DO;
     1941      931    3                CSH_INC = 512;
     1942      932    3                CSH_MASK = '000000000776'O;
     1943      933    3                END;
     1944      934    3           DO I = 15 DOWNTO 0;
     1945      935    4                DO CASE(S_PTYPE(S_PNO));
     1946      936    4                 CASE (%DPSE);
     1947      937    4                   MEM_ADDR = FINFO.HR.DPSE_CU.RA(48+I);
     1948      938    4                 CASE (%L66);
     1949      939    4                   MEM_ADDR = FINFO.HR.L66.VU.RA(I);
     1950      940    4                 CASE (%ELS1);
     1951      941    4                   MEM_ADDR = FINFO.HR.ELS.ELS_HR.RAU(I) * 262144
     1952      942    4                     + FINFO.HR.ELS.ELS_HR.RAL(I);
     1953      943    4                   END;                    /* DO CASE                            */
     1954      944    3                MEM_ADDR_BIN = MEM_ADDR_BIN & '777777777776'O;
     1955      945    3                CSH_ADDR_BIN = MEM_ADDR_BIN & CSH_MASK;
     1956      946    3                IF MEM_ADDR < (MM_PCORE + 1) * 1024
     1957      947    3                THEN CALL HFA$CSHERR (CSH_ADDR,
     1958      948    3                       CSH_INC,
     1959      949    3                       B$SS.CSHERR.CSH_DATA,
     1960      950    3                       MEM_ADDR,
     1961      951    3                       B$SS.CSHERR.MEM_DATA)
     1962      952    3                       ALTRET(FOUND_PAR_ERR);
     1963      953    3                END;                       /* DO I = 15 DOWNTO                   */
     1964      954    2           RETURN;
     1965      955    2   FOUND_PAR_ERR: ;
     1966      956    2           B$SS.CSHERR.CSH_SIZE = CSH_INC * 4;
     1967      957    2           B$SS.CSHERR.CSH_ADDR = CSH_ADDR;
     1968      958    2           B$SS.CSHERR.MEM_ADDR = MEM_ADDR;
     1969      959    2           RETURN;
     1970      960    2           END;                            /* DO INHIBIT                         */
PL6.E3A0      #007=HFB$CSHERR File=HFB$FPR.:E05TSI                               TUE 07/29/97 22:28 Page:279  
     1971      961    1   END HFB$CSHERR;

PL6.E3A0      #007=HFB$CSHERR File=HFB$FPR.:E05TSI                               TUE 07/29/97 22:28 Page:280  
--  Include file information  --

   SS_CNTRLD_R.:E05TOU  cannot be made into a system file and is referenced.
   SS_CNTRL_R.:E05TOU  cannot be made into a system file and is referenced.
   SS_SCHED_R.:E05TOU  cannot be made into a system file and is referenced.
   HF_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   MM_MACRO_M.:E05TOU  is referenced.
   B_STRINGS_C.:E05TOU  is referenced.
   MM$SYSGEN.:E05TOU  is referenced.
   M_INFO_C.:E05TOU  is referenced.
   MM_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   B_MAGIC_C.:E05TOU  is referenced.
      No diagnostics issued in procedure HFB$CSHERR.

   Procedure HFB$CSHERR requires 125 words for executable code.
   Procedure HFB$CSHERR requires 16 words of local(AUTO) storage.

    No errors detected in file HFB$FPR.:E05TSI    .

PL6.E3A0      #007=HFB$CSHERR File=HFB$FPR.:E05TSI                               TUE 07/29/97 22:28 Page:281  

 Object Unit name= HFB$CSHERR                                 File name= HFB$FPR.:E05TOU
 UTS= JUL 29 '97 22:28:28.36 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0  RoData even  UTS      4      4  HFB$CSHERR
    1   Proc  even  none   125    175  HFB$CSHERR
    2  RoData even  none     2      2  HFB$CSHERR

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     1      0   yes            yes      Std        1  HFB$CSHERR

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       5 HFA$CSHERR
                       nStd      0 X66_AUTO_1
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     B_MPT                            r    MM_BYP$                               MM_PCORE
     H_RSW2                                S_PTYPE                               S_PNO
     B_VECTNIL
PL6.E3A0      #007=HFB$CSHERR File=HFB$FPR.:E05TSI                               TUE 07/29/97 22:28 Page:282  


     1823        1        /*T***********************************************************/
     1824        2        /*T*                                                         */
     1825        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
     1826        4        /*T*                                                         */
     1827        5        /*T***********************************************************/
     1828        6        /*F* NAME:        HFB$CSHERR
     1829        7             PURPOSE:     Processing of cache parity errors.   */
     1830        8        /*D* NAME:        HFB$CSHERR
     1831        9             DESCRIPTION: This subroutine is entered from HFA$FAULT for every
     1832       10                          parity fault.  If the parity fault is due to a cache
     1833       11                          error, we interogate the contents of cache for the
     1834       12                          last 16 real addresses accessed according to the
     1835       13                          contents of the history registers.  If a parity
     1836       14                          is detected, the contents of the cache doubleword,
     1837       15                          the contents of the memory doubleword, and the
     1838       16                          cache address are placed in unused locations of the
     1839       17                          safe-store frame for the parity fault.   This data
     1840       18                          can be analyzed later by looking at the PROCESSOR
     1841       19                          ERROR entry in the error log file.    */
     1842       20        HFB$CSHERR: PROC(FINFO);

     20  1 000000   000000 700200 xent  HFB$CSHERR   TSX0  ! X66_AUTO_1
         1 000001   000020 000001                    ZERO    16,1

     1843       21        /**/
     1844       22        /* INCLUDE FILES */
     1845       23        %INCLUDE B_MAGIC_C;
     1846      141        %B_MPT (FPTN=B_MPT,STCLASS=SYMREF);
     1847      234        %INCLUDE MM_DATA_R;
     1848      754        %INCLUDE HF_DATA_R;
     1849      797        %INCLUDE SS_SCHED_R;
     1850      840        /**/
     1851      841        /* PARAMETERS */
     1852      842    1   DCL 1 FINFO DALIGNED,
     1853      843    1         2 PORT# UBIN(9) UNAL,
     1854      844    1         2 * BIT(4) UNAL,
PL6.E3A0      #007=HFB$CSHERR File=HFB$FPR.:E05TSI                               TUE 07/29/97 22:28 Page:283  
     1855      845    1         2 BRANCH_MODE BIT(1) UNAL,
     1856      846    1         2 PROCTYPE UBIN(4) UNAL,
     1857      847    1         2 SUBCODE UBIN(18) UNAL,
     1858      848    1         2 FLTREG,                         /* FAULT REGISTER                     */
     1859      849    1           3 * BIT(16) UNAL,
     1860      850    1           3 MEM_ILL_ACT,
     1861      851    1             4 PORT_A UBIN(4) UNAL,
     1862      852    1             4 PORT_B UBIN(4) UNAL,
     1863      853    1             4 PORT_C UBIN(4) UNAL,
     1864      854    1             4 PORT_D UBIN(4) UNAL,
     1865      855    1           3 MEM_ILL_ACT_ELS REDEF MEM_ILL_ACT,
     1866      856    1             4 PORT_AB BIT(8) UNAL,
     1867      857    1             4 * BIT(8) UNAL,
     1868      858    1           3 CACHE_ERR,
     1869      859    1             4 DIR_PAR BIT(1),
     1870      860    1             4 STORE_PAR BIT(1),
     1871      861    1             4 ILL_ACT_ON_STORE BIT(1),
     1872      862    1             4 PAR_ON_BLOCKLOAD BIT(1),
     1873      863    1         2 JERR,
     1874      864    1           3 FCG BIT(12) UNAL,
     1875      865    1           3 MID BIT(6) UNAL,
     1876      866    1           3 CODE UBIN(15) UNAL,
     1877      867    1           3 SEV UBIN(3) UNAL,
     1878      868    1         2 P# SBIN WORD,
     1879      869    1         2 HR,
     1880      870    1           3 DPSE_CU (0:63),
     1881      871    1             4 * BIT(36) UNAL,
     1882      872    1             4 RA UBIN(24) UNAL,
     1883      873    1             4 * BIT(12) UNAL,
     1884      874    1           3 L66 REDEF DPSE_CU,
     1885      875    1             4 CU (0:15) BIT(72),
     1886      876    1             4 OU (0:15) BIT(72),
     1887      877    1             4 VU (0:15),
     1888      878    1               5 * BIT(36) UNAL,
     1889      879    1               5 RA UBIN(24) UNAL,
     1890      880    1               5 * BIT(12) UNAL,
     1891      881    1             4 DU (0:15) BIT(72),
PL6.E3A0      #007=HFB$CSHERR File=HFB$FPR.:E05TSI                               TUE 07/29/97 22:28 Page:284  
     1892      882    1           3 ELS REDEF DPSE_CU,
     1893      883    1             4 ELS_HR (0:15),
     1894      884    1               5 * BIT(36) UNAL,
     1895      885    1               5 RAL UBIN(18) UNAL,
     1896      886    1               5 * BIT(13) UNAL,
     1897      887    1               5 RAU UBIN(5) UNAL,
     1898      888    1             4 * (0:47) BIT(72);
     1899      889        /**/
     1900      890        /* AUTO */
     1901      891    1   DCL CSH_ADDR UBIN;
     1902      892    1   DCL CSH_ADDR_BIN REDEF CSH_ADDR BIT(36);
     1903      893    1   DCL MEM_ADDR UBIN;
     1904      894    1   DCL MEM_ADDR_BIN REDEF MEM_ADDR BIT(36);
     1905      895    1   DCL CSH_INC UBIN HALF;
     1906      896    1   DCL CSH_MASK BIT(36);
     1907      897    1   DCL I SBIN;
     1908      898        /**/
     1909      899        /* BASED */
     1910      900    1   DCL 1 B$SS BASED(B_MPT.SS$) DALIGNED,
     1911      901    1         2 * (0:55) UBIN,
     1912      902    1         2 CSHERR,
     1913      903    1           3 CSH_SIZE UBIN HALF UNAL,
     1914      904    1           3 CSH_ADDR UBIN HALF UNAL,
     1915      905    1           3 MEM_ADDR UBIN,
     1916      906    1           3 CSH_DATA BIT(72),
     1917      907    1           3 MEM_DATA BIT(72);
     1918      908        /**/
     1919      909        /* EXTERNAL REFERENCES */
     1920      910    1   DCL HFA$CSHERR ENTRY(5) ALTRET;
     1921      911    1   DCL S_PNO UBIN SYMREF;
     1922      912        /**/
     1923      913        /**/
     1924      914        /* PROCEDURE */
     1925      915    2      DO INHIBIT;

     1926      916    2           B$SS.CSHERR = '0'B;

PL6.E3A0      #007=HFB$CSHERR File=HFB$FPR.:E05TSI                               TUE 07/29/97 22:28 Page:285  
    916  1 000002   000000 470600 xsym               LDP0  ! B_MPT
         1 000003   000100 100600                    MLR   ! fill='000'O
         1 000004   000002 000001 xsym               ADSC9   B_VECTNIL+2              cn=0,n=1
         1 000005   000070 000030                    ADSC9   56,,PR0                  cn=0,n=24

     1927      917    2           IF (S_PTYPE(S_PNO)~=%ELS1 AND FINFO.FLTREG.MEM_ILL_ACT~='0'B)

    917  1 000006   000000 720200 xsym               LXL0  ! S_PNO
         1 000007   000000 235210 xsym               LDA   ! S_PTYPE,X0
         1 000010   000002 115207                    CMPA  ! 2,DL
         1 000011   000016 600200 1                  TZE   ! s:917+8
         1 000012   200003 471700                    LDP1  ! @FINFO,,AUTO
         1 000013   100001 236300                    LDQ   ! 1,,PR1
         1 000014   000000 316200 2                  CANQ  ! 0
         1 000015   000037 601200 1                  TNZ   ! s:924
         1 000016   000002 115207                    CMPA  ! 2,DL
         1 000017   000024 601200 1                  TNZ   ! s:917+14
         1 000020   200003 471700                    LDP1  ! @FINFO,,AUTO
         1 000021   100001 236300                    LDQ   ! 1,,PR1
         1 000022   000001 316200 2                  CANQ  ! 1
         1 000023   000037 601200 1                  TNZ   ! s:924
         1 000024   000002 115207                    CMPA  ! 2,DL
         1 000025   000034 600200 1                  TZE   ! s:917+22
         1 000026   200003 471700                    LDP1  ! @FINFO,,AUTO
         1 000027   100001 236300                    LDQ   ! 1,,PR1
         1 000030   000004 316207                    CANQ  ! 4,DL
         1 000031   000034 601200 1                  TNZ   ! s:917+22
         1 000032   000001 316207                    CANQ  ! 1,DL
         1 000033   000037 600200 1                  TZE   ! s:924
         1 000034   200003 471700                    LDP1  ! @FINFO,,AUTO
         1 000035   100003 235300                    LDA   ! 3,,PR1
         1 000036   000040 601200 1                  TNZ   ! s:925

     1928      918    2             OR (S_PTYPE(S_PNO)=%ELS1
     1929      919    2             AND FINFO.FLTREG.MEM_ILL_ACT_ELS.PORT_AB~='0'B)
     1930      920    2             OR (S_PTYPE(S_PNO)~=%ELS1
     1931      921    2             AND FINFO.FLTREG.CACHE_ERR.STORE_PAR = '0'B
PL6.E3A0      #007=HFB$CSHERR File=HFB$FPR.:E05TSI                               TUE 07/29/97 22:28 Page:286  
     1932      922    2             AND FINFO.FLTREG.CACHE_ERR.PAR_ON_BLOCKLOAD = '0'B)
     1933      923    2             OR FINFO.P# = 0
     1934      924    2           THEN RETURN;

    924  1 000037   000000 702200 xent               TSX2  ! X66_ARET

     1935      925    2           IF H_RSW2(S_PNO) & '000000100000'O

    925  1 000040   000000 236210 xsym               LDQ   ! H_RSW2,X0
         1 000041   000000 376200 0                  ANQ   ! 0
         1 000042   000050 600200 1                  TZE   ! s:931

     1936      926    3           THEN DO;

     1937      927    3                CSH_INC = 2048;

    927  1 000043   004000 221203                    LDX1  ! 2048,DU
         1 000044   200006 741300                    STX1  ! CSH_INC,,AUTO

     1938      928    3                CSH_MASK = '000000003776'O;

    928  1 000045   000001 236200 0                  LDQ   ! 1
         1 000046   200007 756300                    STQ   ! CSH_MASK,,AUTO

     1939      929    3                END;

    929  1 000047   000054 710200 1                  TRA   ! s:934

     1940      930    3           ELSE DO;

     1941      931    3                CSH_INC = 512;

    931  1 000050   001000 221203                    LDX1  ! 512,DU
         1 000051   200006 741300                    STX1  ! CSH_INC,,AUTO

     1942      932    3                CSH_MASK = '000000000776'O;

PL6.E3A0      #007=HFB$CSHERR File=HFB$FPR.:E05TSI                               TUE 07/29/97 22:28 Page:287  
    932  1 000052   000002 236200 0                  LDQ   ! 2
         1 000053   200007 756300                    STQ   ! CSH_MASK,,AUTO

     1943      933    3                END;

     1944      934    3           DO I = 15 DOWNTO 0;

    934  1 000054   000017 235207                    LDA   ! 15,DL
         1 000055   200010 755300                    STA   ! I,,AUTO

     1945      935    4                DO CASE(S_PTYPE(S_PNO));

    935  1 000056   000000 720200 xsym               LXL0  ! S_PNO
         1 000057   000000 235210 xsym               LDA   ! S_PTYPE,X0
         1 000060   000003 115207                    CMPA  ! 3,DL
         1 000061   000063 602205 1                  TNC   ! s:935+5,AL
         1 000062   000121 710200 1                  TRA   ! s:944
         1 000063   000075 710200 1                  TRA   ! s:939
         1 000064   000066 710200 1                  TRA   ! s:937
         1 000065   000104 710200 1                  TRA   ! s:941

     1946      936    4                 CASE (%DPSE);

     1947      937    4                   MEM_ADDR = FINFO.HR.DPSE_CU.RA(48+I);

    937  1 000066   200010 236300                    LDQ   ! I,,AUTO
         1 000067   000001 736200                    QLS   ! 1
         1 000070   200003 470700                    LDP0  ! @FINFO,,AUTO
         1 000071   000145 236306                    LDQ   ! 101,QL,PR0
         1 000072   000014 772200                    QRL   ! 12
         1 000073   200005 756300                    STQ   ! MEM_ADDR,,AUTO
         1 000074   000121 710200 1                  TRA   ! s:944

     1948      938    4                 CASE (%L66);

     1949      939    4                   MEM_ADDR = FINFO.HR.L66.VU.RA(I);

PL6.E3A0      #007=HFB$CSHERR File=HFB$FPR.:E05TSI                               TUE 07/29/97 22:28 Page:288  
    939  1 000075   200010 236300                    LDQ   ! I,,AUTO
         1 000076   000001 736200                    QLS   ! 1
         1 000077   200003 470700                    LDP0  ! @FINFO,,AUTO
         1 000100   000105 236306                    LDQ   ! 69,QL,PR0
         1 000101   000014 772200                    QRL   ! 12
         1 000102   200005 756300                    STQ   ! MEM_ADDR,,AUTO
         1 000103   000121 710200 1                  TRA   ! s:944

     1950      940    4                 CASE (%ELS1);

     1951      941    4                   MEM_ADDR = FINFO.HR.ELS.ELS_HR.RAU(I) * 262144

    941  1 000104   200010 236300                    LDQ   ! I,,AUTO
         1 000105   000001 736200                    QLS   ! 1
         1 000106   200003 470700                    LDP0  ! @FINFO,,AUTO
         1 000107   000005 236306                    LDQ   ! 5,QL,PR0
         1 000110   000022 772200                    QRL   ! 18
         1 000111   200012 756300                    STQ   ! I+2,,AUTO
         1 000112   200010 235300                    LDA   ! I,,AUTO
         1 000113   000001 735200                    ALS   ! 1
         1 000114   000005 236305                    LDQ   ! 5,AL,PR0
         1 000115   000022 736200                    QLS   ! 18
         1 000116   000037 376203                    ANQ   ! 31,DU
         1 000117   200012 036300                    ADLQ  ! I+2,,AUTO
         1 000120   200005 756300                    STQ   ! MEM_ADDR,,AUTO

     1952      942    4                     + FINFO.HR.ELS.ELS_HR.RAL(I);
     1953      943    4                   END;                    /* DO CASE                            */

     1954      944    3                MEM_ADDR_BIN = MEM_ADDR_BIN & '777777777776'O;

    944  1 000121   200005 236300                    LDQ   ! MEM_ADDR,,AUTO
         1 000122   000003 376200 0                  ANQ   ! 3
         1 000123   200005 756300                    STQ   ! MEM_ADDR,,AUTO

     1955      945    3                CSH_ADDR_BIN = MEM_ADDR_BIN & CSH_MASK;

PL6.E3A0      #007=HFB$CSHERR File=HFB$FPR.:E05TSI                               TUE 07/29/97 22:28 Page:289  
    945  1 000124   200007 376300                    ANQ   ! CSH_MASK,,AUTO
         1 000125   200004 756300                    STQ   ! CSH_ADDR,,AUTO

     1956      946    3                IF MEM_ADDR < (MM_PCORE + 1) * 1024

    946  1 000126   000000 236200 xsym               LDQ   ! MM_PCORE
         1 000127   000012 736200                    QLS   ! 10
         1 000130   002000 036207                    ADLQ  ! 1024,DL
         1 000131   000155 604200 1                  TMI   ! s:953
         1 000132   200005 116300                    CMPQ  ! MEM_ADDR,,AUTO
         1 000133   000155 602200 1                  TNC   ! s:953
         1 000134   000155 600200 1                  TZE   ! s:953

     1957      947    3                THEN CALL HFA$CSHERR (CSH_ADDR,

    947  1 000135   000000 236200 xsym               LDQ   ! B_MPT
         1 000136   000074 036203                    ADLQ  ! 60,DU
         1 000137   200016 756300                    STQ   ! I+6,,AUTO
         1 000140   200005 630700                    EPPR0 ! MEM_ADDR,,AUTO
         1 000141   200015 450700                    STP0  ! I+5,,AUTO
         1 000142   000000 236200 xsym               LDQ   ! B_MPT
         1 000143   000072 036203                    ADLQ  ! 58,DU
         1 000144   200014 756300                    STQ   ! I+4,,AUTO
         1 000145   200006 631700                    EPPR1 ! CSH_INC,,AUTO
         1 000146   200013 451700                    STP1  ! I+3,,AUTO
         1 000147   200004 633700                    EPPR3 ! CSH_ADDR,,AUTO
         1 000150   200012 453700                    STP3  ! I+2,,AUTO
         1 000151   200012 630700                    EPPR0 ! I+2,,AUTO
         1 000152   000023 631600 xsym               EPPR1 ! B_VECTNIL+19
         1 000153   000000 701200 xent               TSX1  ! HFA$CSHERR
         1 000154   000161 702200 1                  TSX2  ! FOUND_PAR_ERR

     1958      948    3                       CSH_INC,
     1959      949    3                       B$SS.CSHERR.CSH_DATA,
     1960      950    3                       MEM_ADDR,
     1961      951    3                       B$SS.CSHERR.MEM_DATA)
     1962      952    3                       ALTRET(FOUND_PAR_ERR);
PL6.E3A0      #007=HFB$CSHERR File=HFB$FPR.:E05TSI                               TUE 07/29/97 22:28 Page:290  
     1963      953    3                END;                       /* DO I = 15 DOWNTO                   */

    953  1 000155   000001 336207                    LCQ   ! 1,DL
         1 000156   200010 056300                    ASQ   ! I,,AUTO
         1 000157   000056 605200 1                  TPL   ! s:935

     1964      954    2           RETURN;

    954  1 000160   000000 702200 xent               TSX2  ! X66_ARET

    946  1 000161                       FOUND_PAR_E* null
     1965      955    2   FOUND_PAR_ERR: ;
     1966      956    2           B$SS.CSHERR.CSH_SIZE = CSH_INC * 4;

    956  1 000161   200006 235300                    LDA   ! CSH_INC,,AUTO
         1 000162   777777 375203                    ANA   ! -1,DU
         1 000163   000020 771200                    ARL   ! 16
         1 000164   000000 620205                    EAX0  ! 0,AL
         1 000165   000000 470600 xsym               LDP0  ! B_MPT
         1 000166   000070 740300                    STX0  ! 56,,PR0

     1967      957    2           B$SS.CSHERR.CSH_ADDR = CSH_ADDR;

    957  1 000167   200004 721300                    LXL1  ! CSH_ADDR,,AUTO
         1 000170   000070 441300                    SXL1  ! 56,,PR0

     1968      958    2           B$SS.CSHERR.MEM_ADDR = MEM_ADDR;

    958  1 000171   200005 236300                    LDQ   ! MEM_ADDR,,AUTO
         1 000172   000071 756300                    STQ   ! 57,,PR0

     1969      959    2           RETURN;

    959  1 000173   000000 702200 xent               TSX2  ! X66_ARET

     1970      960    2           END;                            /* DO INHIBIT                         */

PL6.E3A0      #007=HFB$CSHERR File=HFB$FPR.:E05TSI                               TUE 07/29/97 22:28 Page:291  
     1971      961    1   END HFB$CSHERR;

    961  1 000174   000000 702200 xent               TSX2  ! X66_ARET

(unnamed)
 Sect OctLoc
   0     000   000000 100000   000000 003776   000000 000776   777777 777776    ..@.............

(unnamed)
 Sect OctLoc
   2     000   000003 777760   000003 770000                                    ........

PL6.E3A0      #007=HFB$CSHERR File=HFB$FPR.:E05TSI                               TUE 07/29/97 22:28 Page:292  
--  Include file information  --

   SS_CNTRLD_R.:E05TOU  cannot be made into a system file and is referenced.
   SS_CNTRL_R.:E05TOU  cannot be made into a system file and is referenced.
   SS_SCHED_R.:E05TOU  cannot be made into a system file and is referenced.
   HF_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   MM_MACRO_M.:E05TOU  is referenced.
   B_STRINGS_C.:E05TOU  is referenced.
   MM$SYSGEN.:E05TOU  is referenced.
   M_INFO_C.:E05TOU  is referenced.
   MM_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   B_MAGIC_C.:E05TOU  is referenced.
      No diagnostics issued in procedure HFB$CSHERR.
PL6.E3A0      #007=HFB$CSHERR File=HFB$FPR.:E05TSI                               TUE 07/29/97 22:28 Page:293  

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @FINFO                     4-0-0/w UBIN        r     1 CSH_ADDR
     4-0-0/w BIT         r     1 CSH_ADDR_BIN               6-0-0/w UBIN(18)    r     1 CSH_INC
     7-0-0/b BIT         r     1 CSH_MASK                  *0-0-0/d STRC(4752)  r     1 FINFO
    10-0-0/w SBIN        r     1 I                          5-0-0/w UBIN        r     1 MEM_ADDR
     5-0-0/w BIT         r     1 MEM_ADDR_BIN

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d STRC(432)   r     1 B_MPT                      0-0-0/w BIT         r     1 H_RSW2(0:7)
     0-0-0/w PTR         r     1 MM_BYP$                    0-0-0/w SBIN        r     1 MM_PCORE
     0-0-0/w UBIN        r     1 S_PNO
     0-0-0/w SBIN        r     1 S_PTYPE(0:7)

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d STRC(2232)  r     1 B$SS


   Procedure HFB$CSHERR requires 125 words for executable code.
   Procedure HFB$CSHERR requires 16 words of local(AUTO) storage.

    No errors detected in file HFB$FPR.:E05TSI    .
PL6.E3A0      #007=HFB$CSHERR File=HFB$FPR.:E05TSI                               TUE 07/29/97 22:28 Page:294  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #007=HFB$CSHERR File=HFB$FPR.:E05TSI                               TUE 07/29/97 22:28 Page:295  
          MINI XREF LISTING

B$SS.CSHERR
       902**DCL       916<<ASSIGN
B$SS.CSHERR.CSH_ADDR
       904**DCL       957<<ASSIGN
B$SS.CSHERR.CSH_DATA
       906**DCL       947<>CALL
B$SS.CSHERR.CSH_SIZE
       903**DCL       956<<ASSIGN
B$SS.CSHERR.MEM_ADDR
       905**DCL       958<<ASSIGN
B$SS.CSHERR.MEM_DATA
       907**DCL       947<>CALL
B_MPT.AS
       177**DCL       180--REDEF
B_MPT.ASDESC
       209**DCL       213--REDEF
B_MPT.ECCB
       192**DCL       195--REDEF
B_MPT.ECCBDESC
       227**DCL       231--REDEF
B_MPT.LS
       172**DCL       175--REDEF
B_MPT.LSDESC
       203**DCL       207--REDEF
B_MPT.PS
       182**DCL       185--REDEF
B_MPT.PSDESC
       215**DCL       219--REDEF
B_MPT.SS
       167**DCL       170--REDEF
B_MPT.SS$
       170**DCL       900--IMP-PTR   916>>ASSIGN    947>>CALL      947>>CALL      956>>ASSIGN    957>>ASSIGN
PL6.E3A0      #007=HFB$CSHERR File=HFB$FPR.:E05TSI                               TUE 07/29/97 22:28 Page:296  
       958>>ASSIGN
B_MPT.SSDESC
       197**DCL       201--REDEF
B_MPT.TCB
       187**DCL       190--REDEF
B_MPT.TCBDESC
       221**DCL       225--REDEF
CSH_ADDR
       891**DCL       892--REDEF     947<>CALL      957>>ASSIGN
CSH_ADDR_BIN
       892**DCL       945<<ASSIGN
CSH_INC
       895**DCL       927<<ASSIGN    931<<ASSIGN    947<>CALL      956>>ASSIGN
CSH_MASK
       896**DCL       928<<ASSIGN    932<<ASSIGN    945>>ASSIGN
FINFO
       842**DCL        20--PROC
FINFO.FLTREG.CACHE_ERR.PAR_ON_BLOCKLOAD
       862**DCL       917>>IF
FINFO.FLTREG.CACHE_ERR.STORE_PAR
       860**DCL       917>>IF
FINFO.FLTREG.MEM_ILL_ACT
       850**DCL       855--REDEF     917>>IF
FINFO.FLTREG.MEM_ILL_ACT_ELS.PORT_AB
       856**DCL       917>>IF
FINFO.HR.DPSE_CU
       870**DCL       874--REDEF     882--REDEF
FINFO.HR.DPSE_CU.RA
       872**DCL       937>>ASSIGN
FINFO.HR.ELS.ELS_HR.RAL
       885**DCL       941>>ASSIGN
FINFO.HR.ELS.ELS_HR.RAU
       887**DCL       941>>ASSIGN
FINFO.HR.L66.VU.RA
       879**DCL       939>>ASSIGN
FINFO.P#
PL6.E3A0      #007=HFB$CSHERR File=HFB$FPR.:E05TSI                               TUE 07/29/97 22:28 Page:297  
       868**DCL       917>>IF
FOUND_PAR_ERR
       946**LABEL     947--CALLALT
HFA$CSHERR
       910**DCL-ENT   947--CALL
H_RSW2
       777**DCL       925>>IF
I
       897**DCL       934<<DOINDEX   937>>ASSIGN    939>>ASSIGN    941>>ASSIGN    941>>ASSIGN
MEM_ADDR
       893**DCL       894--REDEF     937<<ASSIGN    939<<ASSIGN    941<<ASSIGN    946>>IF        947<>CALL
       958>>ASSIGN
MEM_ADDR_BIN
       894**DCL       944<<ASSIGN    944>>ASSIGN    945>>ASSIGN
MM$DESC.BOUND
       705**DCL       706--REDEF
MM$DESC.FLGS
       706**DCL       706--REDEF
MM$PPUT.USER#
       694**DCL       694--REDEF
MM_BYP$
       625**DCL       625--IMP-PTR
MM_PCORE
       627**DCL       946>>IF
S_PNO
       911**DCL       917>>IF        917>>IF        917>>IF        925>>IF        935>>DOCASE
S_PTYPE
       827**DCL       917>>IF        917>>IF        917>>IF        935>>DOCASE
