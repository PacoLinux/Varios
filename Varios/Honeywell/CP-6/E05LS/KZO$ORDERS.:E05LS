VERSION E05

PL6.E3A0      #001=KZO$EVENT File=KZO$ORDERS.:E05TSI                             WED 07/30/97 02:56 Page:1    
        1        1        /*M*     KZO$ORDERS - MLCP interface routines                      */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* PLM=6,IND=3,CTI=3,DCI=3,DTI=0,MCI,MOC,DMC */
        8        8
        9        9        /*P*     NAME:     KZO$EVENT
       10       10                 PURPOSE:  KZO$EVENT is called by the line driver in order to
       11       11                           find out what happened when an input complete
       12       12                           interrupt occurs.                               */
       13       13
       14       14        /*D*     NAME:     KZO$EVENT
       15       15                 DESCRIPTION:
       16       16                           KZO$EVENT may be called only from the input
       17       17                           complete interrupt level.  The routine is called
       18       18                           with three arguments.  The first is the line
       19       19                           context structure.  The second is a UBIN WORD
       20       20                           field which is "stuffed" with the event code.  The
       21       21                           subroutine always returns an event code and never
       22       22                           altreturns except when the MLCP IONAKs us.  Maybe
       23       23                           this should be a screech or errlog.  That isn't
       24       24                           too clear right now.  The third argument is a
       25       25                           UBIN WORD field which is "stuffed" with the size
       26       26                           of any returned data.  The buffer is pointed to
       27       27                           by a pointer in the line context.               */
       28       28
       29       29        %EJECT;
PL6.E3A0      #001=KZO$EVENT File=KZO$ORDERS.:E05TSI                             WED 07/30/97 02:56 Page:2    
       30       30        KZO$EVENT: PROC ( KZ@LINCTX, EVENT, SIZE );
       31       31
       32       32        %INCLUDE LCP_6;
       33     4311        %INCLUDE KL_MACRO_C;
       34     7663        %INCLUDE CP_6_SUBS;
       35     8203        %INCLUDE KL_AFCN_C;
       36     8304        %INCLUDE K_ID_E;
       37     8354        %K#ENTID_E;
       38     8373        %K#LYRID_E;
       39     8380        %INCLUDE KZ_PERR_C;
       40     8462        %INCLUDE KZ_CLM_E;
       41     8634        %INCLUDE KZ_CLMEVT_C;
       42     8676        %INCLUDE KZ_MLCP_C;
       43     8751        %INCLUDE KV_GLBCNS_E;
       44     9092        %INCLUDE KZ_3270_C;
       45     9250        %INCLUDE KZ$OTPBFR;
       46     9351        %INCLUDE KZ$LINCTX;
       47     9971        %INCLUDE KH$CHN;
       48    10093        %INCLUDE KH$IO;
       49    10340        %INCLUDE GH_IOFNC_E;
       50    10409
       51    10410        %KV_INPOPRX_E;
       52    10422        %KZ_3270_E;
       53    10550
       54    10551    1   DCL KHI$IO_INP ENTRY(2);
       55    10552    1   DCL KHI$IO_INPLCTBYT ENTRY(2);
       56    10553    1   DCL KHA$ERRLOG ENTRY(2) ALTRET;
       57    10554
       58    10555            %KH$CHN;
       59    10679
       60    10680            %KZ$LINCTX     ( NAME = KZ@LINCTX,
       61    10681                             STCLASS = PARAM );
       62    11112            %KZ$OTPBFR     ( NAME = KZ$OTPBFR,
       63    11113                             STCLASS = BASED );
       64    11178
       65    11179            %KH$IO         ( FPTN = KH_INPDAT,
       66    11180                             FNC = %GH#IO_INPDATSETSTT,
PL6.E3A0      #001=KZO$EVENT File=KZO$ORDERS.:E05TSI                             WED 07/30/97 02:56 Page:3    
       67    11181                             OTPCHN = NO,
       68    11182                             STCLASS = STATIC);
       69    11296
       70    11297            %KH$IO         ( FPTN = KH_NXTCCB,
       71    11298                             FNC = %GH#IO_INPNXTCCBSTT,
       72    11299                             OTPCHN = NO,
       73    11300                             STCLASS = STATIC);
       74    11414
       75    11415            %KH$IO         ( FPTN = KH_INPRNG,
       76    11416                             FNC = %GH#IO_INPRNG,
       77    11417                             OTPCHN = NO,
       78    11418                             STCLASS = STATIC);
       79    11532
       80    11533            %KH$IO         ( FPTN = KH_INPLCT,
       81    11534                             FNC = %GH#IO_INPLCTBYT,
       82    11535                             STCLASS = STATIC);
       83    11649
       84    11650            %FPT_WRSYSLOG  ( FPTN = DSR_ERROR,
       85    11651                             FCG = 'KZ',
       86    11652                             MID = 'O',
       87    11653                             ERR = %E$DSRDRP,
       88    11654                             SEV = %G_WRSYSLOG_SEV_M$XXX#,
       89    11655                             STCLASS = STATIC );
       90    11750
       91    11751            %FPT_WRSYSLOG  ( FPTN = MLCP_ERROR,
       92    11752                             FCG = 'KZ',
       93    11753                             MID = 'M',
       94    11754                             STCLASS = STATIC );
       95    11849
       96    11850
       97    11851    1   DCL EVENT UBIN WORD ALIGNED;
       98    11852    1   DCL SIZE UBIN WORD ALIGNED;
       99    11853
      100    11854
      101    11855    1   DCL EVENT_MAP(0:13) UBIN BYTE CONSTANT CALIGNED INIT (
      102    11856    1            %KZ#LIN_EVENT_ILGL,
      103    11857    1            %KZ#LIN_EVENT_EOT,
PL6.E3A0      #001=KZO$EVENT File=KZO$ORDERS.:E05TSI                             WED 07/30/97 02:56 Page:4    
      104    11858    1            %KZ#LIN_EVENT_DLEEOT,
      105    11859    1            %KZ#LIN_EVENT_RVI,
      106    11860    1            %KZ#LIN_EVENT_ENQ,
      107    11861    1            %KZ#LIN_EVENT_SOHENQ,
      108    11862    1            %KZ#LIN_EVENT_NAK,
      109    11863    1            %KZ#LIN_EVENT_WACK,
      110    11864    1            %KZ#LIN_EVENT_RCVERR,
      111    11865    1            %KZ#LIN_EVENT_URCERR,
      112    11866    1            %KZ#LIN_EVENT_TTD,
      113    11867    1            %KZ#LIN_EVENT_STATUS,
      114    11868    1            %KZ#LIN_EVENT_TSTRQS ,
      115    11869    1            %KZ#LIN_EVENT_POL );
      116    11870    1   DCL BFR(0:0) UBIN BYTE BASED CALIGNED;
      117    11871
      118    11872    1         SIZE = 0;                  /* Assume no data in case we return early. */
      119    11873        /**/
      120    11874        /*
      121    11875            Check to see if data set ready has gone away.
      122    11876        */
      123    11877        /**/
      124    11878    1         KH_INPDAT.SNCSTT = '0'B;
      125    11879    1         CALL KHI$IO_INP (KZ@LINCTX.CHN$ -> KH$CHN, KH_INPDAT);
      126    11880    1         IF NOT KH_INPDAT.SNCSTT.DSR
      127    11881    2         THEN DO;
      128    11882    2            EVENT = %KZ#LIN_EVENT_DSRDRP;
      129    11883
      130    11884        /*E*          ERROR: KZO-E$DSRDRP
      131    11885                    MESSAGE: (KZO$EVENT) Data set dropped ready
      132    11886                DESCRIPTION: Data set dropped ready.
      133    11887        */
      134    11888
      135    11889    2            DSR_ERROR.V.TERMID = KZ@LINCTX.LINID;
      136    11890    2            CALL M$WRSYSLOG (DSR_ERROR)
      137    11891    3            WHENALTRETURN DO;
      138    11892    3               END;
      139    11893    2            RETURN;
      140    11894    2            END;
PL6.E3A0      #001=KZO$EVENT File=KZO$ORDERS.:E05TSI                             WED 07/30/97 02:56 Page:5    
      141    11895        /**/
      142    11896        /*
      143    11897            Fetch the MLCP status bits.
      144    11898        */
      145    11899        /**/
      146    11900    1         KH_NXTCCB.CCBSTT = '0'B;
      147    11901    1         CALL KHI$IO_INP (KZ@LINCTX.CHN$ -> KH$CHN, KH_NXTCCB);
      148    11902        /**/
      149    11903        /*
      150    11904            Do case on MLCP status.  Value is in bits 5-6 of "R5".
      151    11905        */
      152    11906        /**/
      153    11907    2         DO CASE ( BITBIN(KH_NXTCCB.CCBSTT.PRG) );
      154    11908
      155    11909    2          CASE ( %KZ#MLCP_ACK0 );
      156    11910        /**/
      157    11911        /*
      158    11912            ACK0 received;
      159    11913        */
      160    11914        /**/
      161    11915    2            EVENT = %KZ#LIN_EVENT_ACK0;
      162    11916
      163    11917    2          CASE ( %KZ#MLCP_ACK1 );
      164    11918        /**/
      165    11919        /*
      166    11920            ACK1 received.
      167    11921        */
      168    11922        /**/
      169    11923    2            EVENT = %KZ#LIN_EVENT_ACK1;
      170    11924
      171    11925    2          CASE ( %KZ#MLCP_BLOCK );
      172    11926        /**/
      173    11927        /*
      174    11928            Block received.
      175    11929        */
      176    11930        /**/
      177    11931    2            KH_INPRNG.RNG = 0;
PL6.E3A0      #001=KZO$EVENT File=KZO$ORDERS.:E05TSI                             WED 07/30/97 02:56 Page:6    
      178    11932    2            CALL KHI$IO_INP (KZ@LINCTX.CHN$ -> KH$CHN, KH_INPRNG);
      179    11933    2            SIZE = KZ@LINCTX.INPBFRSIZ * 2 - KH_INPRNG.RNG;
      180    11934    2            CALL TIC_STATS;
      181    11935
      182    11936        /*  Examine last character for ETB/ETX. */
      183    11937
      184    11938    3            IF KZ@LINCTX.INPBFR$ = ADDR(NIL) THEN DO;
      185    11939    3               EVENT = %KZ#LIN_EVENT_RCVERR;
      186    11940    3               RETURN;
      187    11941    3               END;
      188    11942    2            IF KZ@LINCTX.INPBFR$ -> BFR(SIZE-1) = 3 THEN
      189    11943    2               EVENT = %KZ#LIN_EVENT_ETXBLK;
      190    11944    2            ELSE
      191    11945    2               EVENT = %KZ#LIN_EVENT_ETBBLK;
      192    11946
      193    11947    2          CASE ( %KZ#MLCP_SPECIAL );
      194    11948        /**/
      195    11949        /*
      196    11950            Special message received.  Type in LCT 26.
      197    11951        */
      198    11952        /**/
      199    11953
      200    11954    2            KH_INPLCT.LCTBYT.ADR = 26;
      201    11955    2            CALL KHI$IO_INPLCTBYT (KZ@LINCTX.CHN$ -> KH$CHN, KH_INPLCT);
      202    11956    2            EVENT = EVENT_MAP(KH_INPLCT.LCTBYT.DAT);
      203    11957    2            IF KH_INPLCT.LCTBYT.DAT = %E$MLCP_UNRECOVERABLE_ERROR OR
      204    11958    3               KH_INPLCT.LCTBYT.DAT = %E$MLCP_RECOVERABLE_ERROR THEN DO;
      205    11959    3               IF KH_INPLCT.LCTBYT.DAT = %E$MLCP_RECOVERABLE_ERROR THEN
      206    11960    3                  MLCP_ERROR.V.ERRCODE.SEV = %G_WRSYSLOG_SEV_FATAL_PROT#;
      207    11961    3               ELSE
      208    11962    3                  MLCP_ERROR.V.ERRCODE.SEV = %G_WRSYSLOG_SEV_M$XXX#;
      209    11963    3               KH_INPLCT.LCTBYT.ADR = 25;
      210    11964    3               CALL KHI$IO_INPLCTBYT (KZ@LINCTX.CHN$ -> KH$CHN, KH_INPLCT);
      211    11965    3               MLCP_ERROR.V.ERRCODE.ERR# = KH_INPLCT.LCTBYT.DAT;
      212    11966    3               KH_INPLCT.LCTBYT.ADR = 24;       /* #15048 */
      213    11967    3               CALL KHI$IO_INPLCTBYT (KZ@LINCTX.CHN$ -> KH$CHN, KH_INPLCT);
      214    11968    3               MLCP_ERROR.V.VALUES(0)=KH_INPLCT.LCTBYT.DAT;
PL6.E3A0      #001=KZO$EVENT File=KZO$ORDERS.:E05TSI                             WED 07/30/97 02:56 Page:7    
      215    11969    3               MLCP_ERROR.V.TERMID = KZ@LINCTX.LINID;
      216    11970    3               MLCP_ERROR.BUF_ = VECTOR (KZ@LINCTX.HIST);
      217    11971                      /*  See KZM$MLCP for these *E*s.  */
      218    11972    3               CALL KHA$ERRLOG (MLCP_ERROR)
      219    11973    4               WHENALTRETURN DO;
      220    11974    4                  END;
      221    11975    3               END;
      222    11976    2            IF EVENT = %KZ#LIN_EVENT_TTD OR
      223    11977    2               EVENT = %KZ#LIN_EVENT_TSTRQS OR
      224    11978    3               EVENT = %KZ#LIN_EVENT_POL THEN DO;
      225    11979    3               KH_INPRNG.RNG = 0;
      226    11980    3               CALL KHI$IO_INP (KZ@LINCTX.CHN$ -> KH$CHN, KH_INPRNG);
      227    11981    3               SIZE = KZ@LINCTX.INPBFRSIZ * 2 - KH_INPRNG.RNG;
      228    11982    4               IF SIZE > 0 AND EVENT = %KZ#LIN_EVENT_TTD THEN DO;
      229    11983    4                  EVENT = %KZ#LIN_EVENT_ENQBLK;
      230    11984    4                  CALL TIC_STATS;
      231    11985    4                  END;
      232    11986    3               END;
      233    11987
      234    11988    2          END;
      235    11989    1         RETURN;
      236    11990
      237    11991    1   TIC_STATS: PROC;
      238    11992
      239    11993        %INCLUDE KH$STT;
      240    12023            %INCLUDE KZ_INIT_C;
      241    12359            %INCLUDE KZ$BSCSTT;
      242    12465            %KZ$BSCSTT     ( STCLASS = "BASED(STT$)" );
      243    12846            %KZ_INIT_HDR   ( NAME = KZ$HDR,
      244    12847                             STCLASS = BASED );
      245    12871    2   DCL STT$ PTR;
      246    12872    2   DCL KZ_HDR$(0:0) PTR SYMREF;
      247    12873    2   DCL PROTYP UBIN;
      248    12874
      249    12875    2         PROTYP = KZ@LINCTX.PRO.PROTYP * 2 + BITBIN(KZ@LINCTX.PRO.SLAVE);
      250    12876    2         STT$ = KZ_HDR$(PROTYP) -> KZ$HDR.STTBFR$;
      251    12877    3         IF STT$ ~= ADDR(NIL) THEN DO;
PL6.E3A0      #001=KZO$EVENT File=KZO$ORDERS.:E05TSI                             WED 07/30/97 02:56 Page:8    
      252    12878    3            KZ$BSCSTT.BLKIN = KZ$BSCSTT.BLKIN + 1;
      253    12879    3            KZ$BSCSTT.CHRIN = KZ$BSCSTT.CHRIN + KZ@LINCTX.INPDATSIZ;
      254    12880    3            END;
      255    12881    2         KZ@LINCTX.CHRIN = KZ@LINCTX.CHRIN + KZ@LINCTX.INPDATSIZ;
      256    12882    2         KZ@LINCTX.RCRIN = KZ@LINCTX.RCRIN + 1;
      257    12883
      258    12884    2   END TIC_STATS;
      259    12885
      260    12886    1   END KZO$EVENT;
      261    12887        %EJECT;
PL6.E3A0      #001=KZO$EVENT File=KZO$ORDERS.:E05TSI                             WED 07/30/97 02:56 Page:9    
      262    12888        %EOD;

PL6.E3A0      #001=KZO$EVENT File=KZO$ORDERS.:E05TSI                             WED 07/30/97 02:56 Page:10   
--  Include file information  --

   KV$BPC.:E05TOU  is referenced.
   KZ$BSCSTT.:E05TOU  is referenced.
   KZ_INIT_C.:E05TOU  is referenced.
   KH$STT.:E05TOU  is referenced.
   GH_IOFNC_E.:E05TOU  is referenced.
   KH$IO.:E05TOU  is referenced.
   KH$CHN.:E05TOU  is referenced.
   KZ$LINCTX.:E05TOU  is referenced.
   KZ$OTPBFR.:E05TOU  is referenced.
   KZ_3270_C.:E05TOU  is referenced.
   KV_GLBCNS_E.:E05TOU  is referenced.
   KZ_MLCP_C.:E05TOU  is referenced.
   KZ_CLMEVT_C.:E05TOU  is referenced.
   KZ_CLM_E.:E05TOU  is referenced.
   KZ_PERR_C.:E05TOU  is referenced.
   K_ID_E.:E05TOU  is referenced.
   KL_AFCN_C.:E05TOU  is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   KL_MACRO_C.:E05TOU  is referenced.
   G_LCP6_E.:E05TOU  is referenced.
   GT_LCP6_M.:E05TOU  is referenced.
   KI_CP6.:E05TOU  is referenced.
   GF_LCP6_M.:E05TOU  is referenced.
   GM_LCP6_M.:E05TOU  is referenced.
   GU_LCP6_M.:E05TOU  is referenced.
   GJ_LCP6_M.:E05TOU  is referenced.
   GH_LCP6_M.:E05TOU  is referenced.
   LCP_6.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure KZO$EVENT.

   Procedure KZO$EVENT requires 455 words for executable code.
   Procedure KZO$EVENT requires 20 words of local(AUTO) storage.

PL6.E3A0      #001=KZO$EVENT File=KZO$ORDERS.:E05TSI                             WED 07/30/97 02:56 Page:11   

 Object Unit name= KZO$EVENT                                  File name= KZO$ORDERS.:E05TOU
 UTS= JUL 30 '97 02:56:50.92 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_LCP6_SYSTEM                               Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size HexSiz  Section name
    0   Data  even  none    50     32  KZO$EVENT
    1  RoData even  UTS      7      7  KZO$EVENT
    2   Proc  even  none   455    1C7  KZO$EVENT
    3  RoData even  none     2      2  KZO$EVENT

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect HexLoc Primary Altret sequence   type   Parms  Name
     2      0   yes            yes      Std        3  KZO$EVENT

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       2 KHI$IO_INP
         yes           Std       2 KHI$IO_INPLCTBYT
 yes     yes           Std       2 KHA$ERRLOG
                       nStd      0 X6A_AUTO_3
                       nStd      0 X6A_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     KZ_HDR$                          r    G$ROS$
PL6.E3A0      #001=KZO$EVENT File=KZO$ORDERS.:E05TSI                             WED 07/30/97 02:56 Page:12   


        1        1        /*M*     KZO$ORDERS - MLCP interface routines                      */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* PLM=6,IND=3,CTI=3,DCI=3,DTI=0,MCI,MOC,DMC */
        8        8
        9        9        /*P*     NAME:     KZO$EVENT
       10       10                 PURPOSE:  KZO$EVENT is called by the line driver in order to
       11       11                           find out what happened when an input complete
       12       12                           interrupt occurs.                               */
       13       13
       14       14        /*D*     NAME:     KZO$EVENT
       15       15                 DESCRIPTION:
       16       16                           KZO$EVENT may be called only from the input
       17       17                           complete interrupt level.  The routine is called
       18       18                           with three arguments.  The first is the line
       19       19                           context structure.  The second is a UBIN WORD
       20       20                           field which is "stuffed" with the event code.  The
       21       21                           subroutine always returns an event code and never
       22       22                           altreturns except when the MLCP IONAKs us.  Maybe
       23       23                           this should be a screech or errlog.  That isn't
       24       24                           too clear right now.  The third argument is a
       25       25                           UBIN WORD field which is "stuffed" with the size
       26       26                           of any returned data.  The buffer is pointed to
       27       27                           by a pointer in the line context.               */
       28       28
       29       29        %EJECT;
PL6.E3A0      #001=KZO$EVENT File=KZO$ORDERS.:E05TSI                             WED 07/30/97 02:56 Page:13   
       30       30        KZO$EVENT: PROC ( KZ@LINCTX, EVENT, SIZE );

     30   2 000000  D380 0000 0000  xent KZO$EVENT       LNJ,B5   X6A_AUTO_3
          2 000003       0014 0003                       DC       20,3

       31       31
       32       32        %INCLUDE LCP_6;
       33     4311        %INCLUDE KL_MACRO_C;
       34     7663        %INCLUDE CP_6_SUBS;
       35     8203        %INCLUDE KL_AFCN_C;
       36     8304        %INCLUDE K_ID_E;
       37     8354        %K#ENTID_E;
       38     8373        %K#LYRID_E;
       39     8380        %INCLUDE KZ_PERR_C;
       40     8462        %INCLUDE KZ_CLM_E;
       41     8634        %INCLUDE KZ_CLMEVT_C;
       42     8676        %INCLUDE KZ_MLCP_C;
       43     8751        %INCLUDE KV_GLBCNS_E;
       44     9092        %INCLUDE KZ_3270_C;
       45     9250        %INCLUDE KZ$OTPBFR;
       46     9351        %INCLUDE KZ$LINCTX;
       47     9971        %INCLUDE KH$CHN;
       48    10093        %INCLUDE KH$IO;
       49    10340        %INCLUDE GH_IOFNC_E;
       50    10409
       51    10410        %KV_INPOPRX_E;
       52    10422        %KZ_3270_E;
       53    10550
       54    10551    1   DCL KHI$IO_INP ENTRY(2);
       55    10552    1   DCL KHI$IO_INPLCTBYT ENTRY(2);
       56    10553    1   DCL KHA$ERRLOG ENTRY(2) ALTRET;
       57    10554
       58    10555            %KH$CHN;
       59    10679
       60    10680            %KZ$LINCTX     ( NAME = KZ@LINCTX,
       61    10681                             STCLASS = PARAM );
       62    11112            %KZ$OTPBFR     ( NAME = KZ$OTPBFR,
PL6.E3A0      #001=KZO$EVENT File=KZO$ORDERS.:E05TSI                             WED 07/30/97 02:56 Page:14   
       63    11113                             STCLASS = BASED );
       64    11178
       65    11179            %KH$IO         ( FPTN = KH_INPDAT,
       66    11180                             FNC = %GH#IO_INPDATSETSTT,
       67    11181                             OTPCHN = NO,
       68    11182                             STCLASS = STATIC);
       69    11296
       70    11297            %KH$IO         ( FPTN = KH_NXTCCB,
       71    11298                             FNC = %GH#IO_INPNXTCCBSTT,
       72    11299                             OTPCHN = NO,
       73    11300                             STCLASS = STATIC);
       74    11414
       75    11415            %KH$IO         ( FPTN = KH_INPRNG,
       76    11416                             FNC = %GH#IO_INPRNG,
       77    11417                             OTPCHN = NO,
       78    11418                             STCLASS = STATIC);
       79    11532
       80    11533            %KH$IO         ( FPTN = KH_INPLCT,
       81    11534                             FNC = %GH#IO_INPLCTBYT,
       82    11535                             STCLASS = STATIC);
       83    11649
       84    11650            %FPT_WRSYSLOG  ( FPTN = DSR_ERROR,
       85    11651                             FCG = 'KZ',
       86    11652                             MID = 'O',
       87    11653                             ERR = %E$DSRDRP,
       88    11654                             SEV = %G_WRSYSLOG_SEV_M$XXX#,
       89    11655                             STCLASS = STATIC );
       90    11750
       91    11751            %FPT_WRSYSLOG  ( FPTN = MLCP_ERROR,
       92    11752                             FCG = 'KZ',
       93    11753                             MID = 'M',
       94    11754                             STCLASS = STATIC );
       95    11849
       96    11850
       97    11851    1   DCL EVENT UBIN WORD ALIGNED;
       98    11852    1   DCL SIZE UBIN WORD ALIGNED;
       99    11853
PL6.E3A0      #001=KZO$EVENT File=KZO$ORDERS.:E05TSI                             WED 07/30/97 02:56 Page:15   
      100    11854
      101    11855    1   DCL EVENT_MAP(0:13) UBIN BYTE CONSTANT CALIGNED INIT (
      102    11856    1            %KZ#LIN_EVENT_ILGL,
      103    11857    1            %KZ#LIN_EVENT_EOT,
      104    11858    1            %KZ#LIN_EVENT_DLEEOT,
      105    11859    1            %KZ#LIN_EVENT_RVI,
      106    11860    1            %KZ#LIN_EVENT_ENQ,
      107    11861    1            %KZ#LIN_EVENT_SOHENQ,
      108    11862    1            %KZ#LIN_EVENT_NAK,
      109    11863    1            %KZ#LIN_EVENT_WACK,
      110    11864    1            %KZ#LIN_EVENT_RCVERR,
      111    11865    1            %KZ#LIN_EVENT_URCERR,
      112    11866    1            %KZ#LIN_EVENT_TTD,
      113    11867    1            %KZ#LIN_EVENT_STATUS,
      114    11868    1            %KZ#LIN_EVENT_TSTRQS ,
      115    11869    1            %KZ#LIN_EVENT_POL );
      116    11870    1   DCL BFR(0:0) UBIN BYTE BASED CALIGNED;
      117    11871
      118    11872    1         SIZE = 0;                  /* Assume no data in case we return early. */

  11872   2 000005  ECC7 0008                            LDB,B6   @SIZE,AUTO
          2 000007  8706                                 CL       ,B6

      119    11873        /**/
      120    11874        /*
      121    11875            Check to see if data set ready has gone away.
      122    11876        */
      123    11877        /**/
      124    11878    1         KH_INPDAT.SNCSTT = '0'B;

  11878   2 000008  8700 0000 0001  00                   CL       KH_INPDAT+1

      125    11879    1         CALL KHI$IO_INP (KZ@LINCTX.CHN$ -> KH$CHN, KH_INPDAT);

  11879   2 00000B  DCC7 0004                            LDB,B5   @KZ@LINCTX,AUTO
          2 00000D  CCC5 0002                            LDB,B4   2,B5
          2 00000F  BB80 0000 0000  00                   LAB,B3   KH_INPDAT
PL6.E3A0      #001=KZO$EVENT File=KZO$ORDERS.:E05TSI                             WED 07/30/97 02:56 Page:16   
          2 000012  BFC7 0012                            STB,B3   PROTYP+4,AUTO
          2 000014  CFC7 0010                            STB,B4   PROTYP+2,AUTO
          2 000016  BBC7 0010                            LAB,B3   PROTYP+2,AUTO
          2 000018  CBF0 0200                            LAB,B4   512,IMO
          2 00001A  E380 0000 0000  xent                 LNJ,B6   KHI$IO_INP
          2 00001D       0001                            DC       s:11880,PREL

      126    11880    1         IF NOT KH_INPDAT.SNCSTT.DSR

  11880   2 00001E  8980 0000 0001  00                   CMZ      KH_INPDAT+1
          2 000021  0801 001A                            BAL      s:11900,PREL

      127    11881    2         THEN DO;

      128    11882    2            EVENT = %KZ#LIN_EVENT_DSRDRP;

  11882   2 000023  ECC7 0006                            LDB,B6   @EVENT,AUTO
          2 000025  6C02                                 LDV,R6   2
          2 000026  EF06                                 STR,R6   ,B6

      129    11883
      130    11884        /*E*          ERROR: KZO-E$DSRDRP
      131    11885                    MESSAGE: (KZO$EVENT) Data set dropped ready
      132    11886                DESCRIPTION: Data set dropped ready.
      133    11887        */
      134    11888
      135    11889    2            DSR_ERROR.V.TERMID = KZ@LINCTX.LINID;

  11889   2 000027  ACC7 0004                            LDB,B2   @KZ@LINCTX,AUTO
          2 000029  2C08                                 LDV,R2   8
          2 00002A  6C10                                 LDV,R6   16
          2 00002B  BB80 0000 0000  00                   LAB,B3   KH_INPDAT
          2 00002E  3C20                                 LDV,R3   32
          2 00002F  0008                                 MMM

      136    11890    2            CALL M$WRSYSLOG (DSR_ERROR)

PL6.E3A0      #001=KZO$EVENT File=KZO$ORDERS.:E05TSI                             WED 07/30/97 02:56 Page:17   
  11890   2 000030  BB80 0000 0008  00                   LAB,B3   DSR_ERROR
          2 000033  B870 09C0                            LDR,R3   2496,IMO
          2 000035  0001                                 MCL
          2 000036       0003                            DC       s:11893,PREL
          2 000037  0F81 0001                            B        s:11893,PREL

      137    11891    3            WHENALTRETURN DO;

      138    11892    3               END;

      139    11893    2            RETURN;

  11893   2 000039  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

      140    11894    2            END;
      141    11895        /**/
      142    11896        /*
      143    11897            Fetch the MLCP status bits.
      144    11898        */
      145    11899        /**/
      146    11900    1         KH_NXTCCB.CCBSTT = '0'B;

  11900   2 00003C  8700 0000 0003  00                   CL       KH_NXTCCB+1

      147    11901    1         CALL KHI$IO_INP (KZ@LINCTX.CHN$ -> KH$CHN, KH_NXTCCB);

  11901   2 00003F  ECC7 0004                            LDB,B6   @KZ@LINCTX,AUTO
          2 000041  DCC6 0002                            LDB,B5   2,B6
          2 000043  CB80 0000 0002  00                   LAB,B4   KH_NXTCCB
          2 000046  CFC7 0012                            STB,B4   PROTYP+4,AUTO
          2 000048  DFC7 0010                            STB,B5   PROTYP+2,AUTO
          2 00004A  BBC7 0010                            LAB,B3   PROTYP+2,AUTO
          2 00004C  CBF0 0200                            LAB,B4   512,IMO
          2 00004E  E380 0000 0000  xent                 LNJ,B6   KHI$IO_INP
          2 000051       0001                            DC       s:11907,PREL

      148    11902        /**/
PL6.E3A0      #001=KZO$EVENT File=KZO$ORDERS.:E05TSI                             WED 07/30/97 02:56 Page:18   
      149    11903        /*
      150    11904            Do case on MLCP status.  Value is in bits 5-6 of "R5".
      151    11905        */
      152    11906        /**/
      153    11907    2         DO CASE ( BITBIN(KH_NXTCCB.CCBSTT.PRG) );

  11907   2 000052  E800 0000 0003  00                   LDR,R6   KH_NXTCCB+1
          2 000055  6049                                 SOR,R6   9
          2 000056  E570 0003                            AND,R6   3,IMO
          2 000058  B856                                 LDR,R3   R6
          2 000059  3D04                                 CMV,R3   4
          2 00005A  0281 0136                            BGE      s:11989,PREL
          2 00005C  A830 0000 0062  02                   LDR,R2   s:11907+16,R3
          2 00005F  83A0 0000 0066  02                   JMP      s:11915,R2
          2 000062       0000                            DC       s:11915,PREL
          2 000063       0006                            DC       s:11923,PREL
          2 000064       000C                            DC       s:11931,PREL
          2 000065       0055                            DC       s:11954,PREL

      154    11908
      155    11909    2          CASE ( %KZ#MLCP_ACK0 );

      156    11910        /**/
      157    11911        /*
      158    11912            ACK0 received;
      159    11913        */
      160    11914        /**/
      161    11915    2            EVENT = %KZ#LIN_EVENT_ACK0;

  11915   2 000066  ECC7 0006                            LDB,B6   @EVENT,AUTO
          2 000068  5C0A                                 LDV,R5   10
          2 000069  DF06                                 STR,R5   ,B6
          2 00006A  0F81 0126                            B        s:11989,PREL

      162    11916
      163    11917    2          CASE ( %KZ#MLCP_ACK1 );

PL6.E3A0      #001=KZO$EVENT File=KZO$ORDERS.:E05TSI                             WED 07/30/97 02:56 Page:19   
      164    11918        /**/
      165    11919        /*
      166    11920            ACK1 received.
      167    11921        */
      168    11922        /**/
      169    11923    2            EVENT = %KZ#LIN_EVENT_ACK1;

  11923   2 00006C  ECC7 0006                            LDB,B6   @EVENT,AUTO
          2 00006E  5C0B                                 LDV,R5   11
          2 00006F  DF06                                 STR,R5   ,B6
          2 000070  0F81 0120                            B        s:11989,PREL

      170    11924
      171    11925    2          CASE ( %KZ#MLCP_BLOCK );

      172    11926        /**/
      173    11927        /*
      174    11928            Block received.
      175    11929        */
      176    11930        /**/
      177    11931    2            KH_INPRNG.RNG = 0;

  11931   2 000072  8700 0000 0005  00                   CL       KH_INPRNG+1

      178    11932    2            CALL KHI$IO_INP (KZ@LINCTX.CHN$ -> KH$CHN, KH_INPRNG);

  11932   2 000075  ECC7 0004                            LDB,B6   @KZ@LINCTX,AUTO
          2 000077  DCC6 0002                            LDB,B5   2,B6
          2 000079  CB80 0000 0004  00                   LAB,B4   KH_INPRNG
          2 00007C  CFC7 0012                            STB,B4   PROTYP+4,AUTO
          2 00007E  DFC7 0010                            STB,B5   PROTYP+2,AUTO
          2 000080  BBC7 0010                            LAB,B3   PROTYP+2,AUTO
          2 000082  CBF0 0200                            LAB,B4   512,IMO
          2 000084  E380 0000 0000  xent                 LNJ,B6   KHI$IO_INP
          2 000087       0001                            DC       s:11933,PREL

      179    11933    2            SIZE = KZ@LINCTX.INPBFRSIZ * 2 - KH_INPRNG.RNG;
PL6.E3A0      #001=KZO$EVENT File=KZO$ORDERS.:E05TSI                             WED 07/30/97 02:56 Page:20   

  11933   2 000088  ECC7 0004                            LDB,B6   @KZ@LINCTX,AUTO
          2 00008A  E846 0058                            LDR,R6   88,B6
          2 00008C  6001                                 SOL,R6   1
          2 00008D  8256                                 NEG      R6
          2 00008E  EA00 0000 0005  00                   ADD,R6   KH_INPRNG+1
          2 000091  DCC7 0008                            LDB,B5   @SIZE,AUTO
          2 000093  8256                                 NEG      R6
          2 000094  EF05                                 STR,R6   ,B5

      180    11934    2            CALL TIC_STATS;

  11934   2 000095  E3C0 00FE                            LNJ,B6   s:0,PREL
          2 000097       0001                            DC       s:11938,PREL

      181    11935
      182    11936        /*  Examine last character for ETB/ETX. */
      183    11937
      184    11938    3            IF KZ@LINCTX.INPBFR$ = ADDR(NIL) THEN DO;

  11938   2 000098  ECC7 0004                            LDB,B6   @KZ@LINCTX,AUTO
          2 00009A  8DC6 0056                            CMN      86,B6
          2 00009C  0981 0008                            BNE      s:11942,PREL

      185    11939    3               EVENT = %KZ#LIN_EVENT_RCVERR;

  11939   2 00009E  DCC7 0006                            LDB,B5   @EVENT,AUTO
          2 0000A0  6C03                                 LDV,R6   3
          2 0000A1  EF05                                 STR,R6   ,B5

      186    11940    3               RETURN;

  11940   2 0000A2  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

      187    11941    3               END;
      188    11942    2            IF KZ@LINCTX.INPBFR$ -> BFR(SIZE-1) = 3 THEN

PL6.E3A0      #001=KZO$EVENT File=KZO$ORDERS.:E05TSI                             WED 07/30/97 02:56 Page:21   
  11942   2 0000A5  DCC6 0056                            LDB,B5   86,B6
          2 0000A7  CCC7 0008                            LDB,B4   @SIZE,AUTO
          2 0000A9  B804                                 LDR,R3   ,B4
          2 0000AA  3EFF                                 ADV,R3   -1
          2 0000AB  E2B5                                 LLH,R6   ,B5,R3
          2 0000AC  6D03                                 CMV,R6   3
          2 0000AD  0981 0007                            BNE      s:11945,PREL

      189    11943    2               EVENT = %KZ#LIN_EVENT_ETXBLK;

  11943   2 0000AF  BCC7 0006                            LDB,B3   @EVENT,AUTO
          2 0000B1  6C06                                 LDV,R6   6
          2 0000B2  EF03                                 STR,R6   ,B3
          2 0000B3  0F81 00DD                            B        s:11989,PREL

      190    11944    2            ELSE
      191    11945    2               EVENT = %KZ#LIN_EVENT_ETBBLK;

  11945   2 0000B5  BCC7 0006                            LDB,B3   @EVENT,AUTO
          2 0000B7  6C05                                 LDV,R6   5
          2 0000B8  EF03                                 STR,R6   ,B3
          2 0000B9  0F81 00D7                            B        s:11989,PREL

      192    11946
      193    11947    2          CASE ( %KZ#MLCP_SPECIAL );

      194    11948        /**/
      195    11949        /*
      196    11950            Special message received.  Type in LCT 26.
      197    11951        */
      198    11952        /**/
      199    11953
      200    11954    2            KH_INPLCT.LCTBYT.ADR = 26;

  11954   2 0000BB  5C1A                                 LDV,R5   26
          2 0000BC  DA80 0000 0007  00                   SRM,R5,'00FF'X    KH_INPLCT+1
          2 0000BF       00FF
PL6.E3A0      #001=KZO$EVENT File=KZO$ORDERS.:E05TSI                             WED 07/30/97 02:56 Page:22   

      201    11955    2            CALL KHI$IO_INPLCTBYT (KZ@LINCTX.CHN$ -> KH$CHN, KH_INPLCT);

  11955   2 0000C0  ECC7 0004                            LDB,B6   @KZ@LINCTX,AUTO
          2 0000C2  DCC6 0002                            LDB,B5   2,B6
          2 0000C4  CB80 0000 0006  00                   LAB,B4   KH_INPLCT
          2 0000C7  CFC7 0012                            STB,B4   PROTYP+4,AUTO
          2 0000C9  DFC7 0010                            STB,B5   PROTYP+2,AUTO
          2 0000CB  BBC7 0010                            LAB,B3   PROTYP+2,AUTO
          2 0000CD  CBF0 0200                            LAB,B4   512,IMO
          2 0000CF  E380 0000 0000  xent                 LNJ,B6   KHI$IO_INPLCTBYT
          2 0000D2       0001                            DC       s:11956,PREL

      202    11956    2            EVENT = EVENT_MAP(KH_INPLCT.LCTBYT.DAT);

  11956   2 0000D3  ECC7 0006                            LDB,B6   @EVENT,AUTO
          2 0000D5  B280 0000 0007  00                   LLH,R3   KH_INPLCT+1
          2 0000D8  E2B0 0000 0000  01                   LLH,R6   EVENT_MAP,R3
          2 0000DB  EF06                                 STR,R6   ,B6

      203    11957    2            IF KH_INPLCT.LCTBYT.DAT = %E$MLCP_UNRECOVERABLE_ERROR OR

  11957   2 0000DC  D280 0000 0007  00                   LLH,R5   KH_INPLCT+1
          2 0000DF  5D09                                 CMV,R5   9
          2 0000E0  0901 0004                            BE       s:11959,PREL
          2 0000E2  5D08                                 CMV,R5   8
          2 0000E3  0981 0071                            BNE      s:11976,PREL

      204    11958    3               KH_INPLCT.LCTBYT.DAT = %E$MLCP_RECOVERABLE_ERROR THEN DO;

      205    11959    3               IF KH_INPLCT.LCTBYT.DAT = %E$MLCP_RECOVERABLE_ERROR THEN

  11959   2 0000E5  5D08                                 CMV,R5   8
          2 0000E6  0981 0008                            BNE      s:11962,PREL

      206    11960    3                  MLCP_ERROR.V.ERRCODE.SEV = %G_WRSYSLOG_SEV_FATAL_PROT#;

PL6.E3A0      #001=KZO$EVENT File=KZO$ORDERS.:E05TSI                             WED 07/30/97 02:56 Page:23   
  11960   2 0000E8  4C05                                 LDV,R4   5
          2 0000E9  CA80 0000 0024  00                   SRM,R4,'0007'X    MLCP_ERROR+7
          2 0000EC       0007
          2 0000ED  0F81 0005                            B        s:11963,PREL

      207    11961    3               ELSE
      208    11962    3                  MLCP_ERROR.V.ERRCODE.SEV = %G_WRSYSLOG_SEV_M$XXX#;

  11962   2 0000EF  8900 0000 0024  00                   LBT,'0007'X       MLCP_ERROR+7
  11962   2 0000F2       0007

      209    11963    3               KH_INPLCT.LCTBYT.ADR = 25;

  11963   2 0000F3  6C19                                 LDV,R6   25
          2 0000F4  EA80 0000 0007  00                   SRM,R6,'00FF'X    KH_INPLCT+1
          2 0000F7       00FF

      210    11964    3               CALL KHI$IO_INPLCTBYT (KZ@LINCTX.CHN$ -> KH$CHN, KH_INPLCT);

  11964   2 0000F8  DCC7 0004                            LDB,B5   @KZ@LINCTX,AUTO
          2 0000FA  CCC5 0002                            LDB,B4   2,B5
          2 0000FC  BB80 0000 0006  00                   LAB,B3   KH_INPLCT
          2 0000FF  BFC7 0012                            STB,B3   PROTYP+4,AUTO
          2 000101  CFC7 0010                            STB,B4   PROTYP+2,AUTO
          2 000103  BBC7 0010                            LAB,B3   PROTYP+2,AUTO
          2 000105  CBF0 0200                            LAB,B4   512,IMO
          2 000107  E380 0000 0000  xent                 LNJ,B6   KHI$IO_INPLCTBYT
          2 00010A       0001                            DC       s:11965,PREL

      211    11965    3               MLCP_ERROR.V.ERRCODE.ERR# = KH_INPLCT.LCTBYT.DAT;

  11965   2 00010B  E280 0000 0007  00                   LLH,R6   KH_INPLCT+1
          2 00010E  6003                                 SOL,R6   3
          2 00010F  EA80 0000 0024  00                   SRM,R6,'FFF8'X    MLCP_ERROR+7
          2 000112       FFF8

      212    11966    3               KH_INPLCT.LCTBYT.ADR = 24;       /* #15048 */
PL6.E3A0      #001=KZO$EVENT File=KZO$ORDERS.:E05TSI                             WED 07/30/97 02:56 Page:24   

  11966   2 000113  6C18                                 LDV,R6   24
          2 000114  EA80 0000 0007  00                   SRM,R6,'00FF'X    KH_INPLCT+1
          2 000117       00FF

      213    11967    3               CALL KHI$IO_INPLCTBYT (KZ@LINCTX.CHN$ -> KH$CHN, KH_INPLCT);

  11967   2 000118  ECC7 0004                            LDB,B6   @KZ@LINCTX,AUTO
          2 00011A  DCC6 0002                            LDB,B5   2,B6
          2 00011C  CB80 0000 0006  00                   LAB,B4   KH_INPLCT
          2 00011F  CFC7 0012                            STB,B4   PROTYP+4,AUTO
          2 000121  DFC7 0010                            STB,B5   PROTYP+2,AUTO
          2 000123  BBC7 0010                            LAB,B3   PROTYP+2,AUTO
          2 000125  CBF0 0200                            LAB,B4   512,IMO
          2 000127  E380 0000 0000  xent                 LNJ,B6   KHI$IO_INPLCTBYT
          2 00012A       0001                            DC       s:11968,PREL

      214    11968    3               MLCP_ERROR.V.VALUES(0)=KH_INPLCT.LCTBYT.DAT;

  11968   2 00012B  E280 0000 0007  00                   LLH,R6   KH_INPLCT+1
          2 00012E  EF00 0000 002D  00                   STR,R6   MLCP_ERROR+16

      215    11969    3               MLCP_ERROR.V.TERMID = KZ@LINCTX.LINID;

  11969   2 000131  ACC7 0004                            LDB,B2   @KZ@LINCTX,AUTO
          2 000133  2C08                                 LDV,R2   8
          2 000134  6C10                                 LDV,R6   16
          2 000135  BB80 0000 0000  00                   LAB,B3   KH_INPDAT
          2 000138  3C4A                                 LDV,R3   74
          2 000139  0008                                 MMM

      216    11970    3               MLCP_ERROR.BUF_ = VECTOR (KZ@LINCTX.HIST);

  11970   2 00013A  EBC2 0013                            LAB,B6   19,B2
          2 00013C  EFC7 0011                            STB,B6   PROTYP+3,AUTO
          2 00013E  6C21                                 LDV,R6   33
          2 00013F  EF47 0010                            STR,R6   PROTYP+2,AUTO
PL6.E3A0      #001=KZO$EVENT File=KZO$ORDERS.:E05TSI                             WED 07/30/97 02:56 Page:25   
          2 000141  ABC7 0010                            LAB,B2   PROTYP+2,AUTO
          2 000143  2C00                                 LDV,R2   0
          2 000144  6C06                                 LDV,R6   6
          2 000145  BB80 0000 0000  00                   LAB,B3   KH_INPDAT
          2 000148  3C40                                 LDV,R3   64
          2 000149  0008                                 MMM

      217    11971                      /*  See KZM$MLCP for these *E*s.  */
      218    11972    3               CALL KHA$ERRLOG (MLCP_ERROR)

  11972   2 00014A  BB80 0000 0000  03                   LAB,B3   0
          2 00014D  CBF0 0100                            LAB,B4   256,IMO
          2 00014F  E380 0000 0000  xent                 LNJ,B6   KHA$ERRLOG
          2 000152       0003                            DC       s:11976,PREL
          2 000153  0F81 0001                            B        s:11976,PREL

      219    11973    4               WHENALTRETURN DO;

      220    11974    4                  END;

      221    11975    3               END;

      222    11976    2            IF EVENT = %KZ#LIN_EVENT_TTD OR

  11976   2 000155  ECC7 0006                            LDB,B6   @EVENT,AUTO
          2 000157  E806                                 LDR,R6   ,B6
          2 000158  6D08                                 CMV,R6   8
          2 000159  0901 0007                            BE       s:11979,PREL
          2 00015B  6D12                                 CMV,R6   18
          2 00015C  0901 0004                            BE       s:11979,PREL
          2 00015E  6D18                                 CMV,R6   24
          2 00015F  0981 0031                            BNE      s:11989,PREL

      223    11977    2               EVENT = %KZ#LIN_EVENT_TSTRQS OR
      224    11978    3               EVENT = %KZ#LIN_EVENT_POL THEN DO;

      225    11979    3               KH_INPRNG.RNG = 0;
PL6.E3A0      #001=KZO$EVENT File=KZO$ORDERS.:E05TSI                             WED 07/30/97 02:56 Page:26   

  11979   2 000161  8700 0000 0005  00                   CL       KH_INPRNG+1

      226    11980    3               CALL KHI$IO_INP (KZ@LINCTX.CHN$ -> KH$CHN, KH_INPRNG);

  11980   2 000164  DCC7 0004                            LDB,B5   @KZ@LINCTX,AUTO
          2 000166  CCC5 0002                            LDB,B4   2,B5
          2 000168  BB80 0000 0004  00                   LAB,B3   KH_INPRNG
          2 00016B  BFC7 0012                            STB,B3   PROTYP+4,AUTO
          2 00016D  CFC7 0010                            STB,B4   PROTYP+2,AUTO
          2 00016F  BBC7 0010                            LAB,B3   PROTYP+2,AUTO
          2 000171  CBF0 0200                            LAB,B4   512,IMO
          2 000173  E380 0000 0000  xent                 LNJ,B6   KHI$IO_INP
          2 000176       0001                            DC       s:11981,PREL

      227    11981    3               SIZE = KZ@LINCTX.INPBFRSIZ * 2 - KH_INPRNG.RNG;

  11981   2 000177  ECC7 0004                            LDB,B6   @KZ@LINCTX,AUTO
          2 000179  E846 0058                            LDR,R6   88,B6
          2 00017B  6001                                 SOL,R6   1
          2 00017C  8256                                 NEG      R6
          2 00017D  EA00 0000 0005  00                   ADD,R6   KH_INPRNG+1
          2 000180  DCC7 0008                            LDB,B5   @SIZE,AUTO
          2 000182  8256                                 NEG      R6
          2 000183  EF05                                 STR,R6   ,B5

      228    11982    4               IF SIZE > 0 AND EVENT = %KZ#LIN_EVENT_TTD THEN DO;

  11982   2 000184  6901 000C                            BEZ,R6   s:11989,PREL
          2 000186  CCC7 0006                            LDB,B4   @EVENT,AUTO
          2 000188  D804                                 LDR,R5   ,B4
          2 000189  5D08                                 CMV,R5   8
          2 00018A  0981 0006                            BNE      s:11989,PREL

      229    11983    4                  EVENT = %KZ#LIN_EVENT_ENQBLK;

  11983   2 00018C  5C07                                 LDV,R5   7
PL6.E3A0      #001=KZO$EVENT File=KZO$ORDERS.:E05TSI                             WED 07/30/97 02:56 Page:27   
          2 00018D  DF04                                 STR,R5   ,B4

      230    11984    4                  CALL TIC_STATS;

  11984   2 00018E  E3C0 0005                            LNJ,B6   s:0,PREL
          2 000190       0001                            DC       s:11989,PREL

      231    11985    4                  END;

      232    11986    3               END;

      233    11987
      234    11988    2          END;

      235    11989    1         RETURN;

  11989   2 000191  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

      236    11990
      237    11991    1   TIC_STATS: PROC;

  11991   2 000194  EFC7 000A            TIC_STATS       STB,B6   @SIZE+2,AUTO

      238    11992
      239    11993        %INCLUDE KH$STT;
      240    12023            %INCLUDE KZ_INIT_C;
      241    12359            %INCLUDE KZ$BSCSTT;
      242    12465            %KZ$BSCSTT     ( STCLASS = "BASED(STT$)" );
      243    12846            %KZ_INIT_HDR   ( NAME = KZ$HDR,
      244    12847                             STCLASS = BASED );
      245    12871    2   DCL STT$ PTR;
      246    12872    2   DCL KZ_HDR$(0:0) PTR SYMREF;
      247    12873    2   DCL PROTYP UBIN;
      248    12874
      249    12875    2         PROTYP = KZ@LINCTX.PRO.PROTYP * 2 + BITBIN(KZ@LINCTX.PRO.SLAVE);

  12875   2 000196  DCC7 0004                            LDB,B5   @KZ@LINCTX,AUTO
PL6.E3A0      #001=KZO$EVENT File=KZO$ORDERS.:E05TSI                             WED 07/30/97 02:56 Page:28   
          2 000198  E845 004B                            LDR,R6   75,B5
          2 00019A  604F                                 SOR,R6   15
          2 00019B  D845 003A                            LDR,R5   58,B5
          2 00019D  5001                                 SOL,R5   1
          2 00019E  DA56                                 ADD,R5   R6
          2 00019F  DF47 000E                            STR,R5   PROTYP,AUTO

      250    12876    2         STT$ = KZ_HDR$(PROTYP) -> KZ$HDR.STTBFR$;

  12876   2 0001A1  B855                                 LDR,R3   R5
          2 0001A2  CCB0 0000 0000  xsym                 LDB,B4   KZ_HDR$,R3
          2 0001A5  BCC4 0006                            LDB,B3   6,B4
          2 0001A7  BFC7 000C                            STB,B3   STT$,AUTO

      251    12877    3         IF STT$ ~= ADDR(NIL) THEN DO;

  12877   2 0001A9  8DC7 000C                            CMN      STT$,AUTO
          2 0001AB  0901 000C                            BE       s:12881,PREL

      252    12878    3            KZ$BSCSTT.BLKIN = KZ$BSCSTT.BLKIN + 1;

  12878   2 0001AD  8AC3 0029                            INC      41,B3
          2 0001AF  8EC3 0028                            CAD      40,B3

      253    12879    3            KZ$BSCSTT.CHRIN = KZ$BSCSTT.CHRIN + KZ@LINCTX.INPDATSIZ;

  12879   2 0001B1  F845 0059                            LDR,R7   89,B5
          2 0001B3  6C00                                 LDV,R6   0
          2 0001B4  8443 0024                            AID      36,B3
          2 0001B6  8D43 0024                            SDI      36,B3

      254    12880    3            END;

      255    12881    2         KZ@LINCTX.CHRIN = KZ@LINCTX.CHRIN + KZ@LINCTX.INPDATSIZ;

  12881   2 0001B8  F845 0059                            LDR,R7   89,B5
          2 0001BA  6C00                                 LDV,R6   0
PL6.E3A0      #001=KZO$EVENT File=KZO$ORDERS.:E05TSI                             WED 07/30/97 02:56 Page:29   
          2 0001BB  8445 007B                            AID      123,B5
          2 0001BD  8D45 007B                            SDI      123,B5

      256    12882    2         KZ@LINCTX.RCRIN = KZ@LINCTX.RCRIN + 1;

  12882   2 0001BF  8AC5 0080                            INC      128,B5
          2 0001C1  8EC5 007F                            CAD      127,B5

      257    12883
      258    12884    2   END TIC_STATS;

  12884   2 0001C3  ECC7 000A                            LDB,B6   @SIZE+2,AUTO
          2 0001C5  C3C6 0001                            LNJ,B4   1,B6
      259    12885
      260    12886    1   END KZO$EVENT;
      261    12887        %EJECT;
PL6.E3A0      #001=KZO$EVENT File=KZO$ORDERS.:E05TSI                             WED 07/30/97 02:56 Page:30   
      262    12888        %EOD;

PL6.E3A0      #001=KZO$EVENT File=KZO$ORDERS.:E05TSI                             WED 07/30/97 02:56 Page:31   
--  Include file information  --

   KV$BPC.:E05TOU  is referenced.
   KZ$BSCSTT.:E05TOU  is referenced.
   KZ_INIT_C.:E05TOU  is referenced.
   KH$STT.:E05TOU  is referenced.
   GH_IOFNC_E.:E05TOU  is referenced.
   KH$IO.:E05TOU  is referenced.
   KH$CHN.:E05TOU  is referenced.
   KZ$LINCTX.:E05TOU  is referenced.
   KZ$OTPBFR.:E05TOU  is referenced.
   KZ_3270_C.:E05TOU  is referenced.
   KV_GLBCNS_E.:E05TOU  is referenced.
   KZ_MLCP_C.:E05TOU  is referenced.
   KZ_CLMEVT_C.:E05TOU  is referenced.
   KZ_CLM_E.:E05TOU  is referenced.
   KZ_PERR_C.:E05TOU  is referenced.
   K_ID_E.:E05TOU  is referenced.
   KL_AFCN_C.:E05TOU  is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   KL_MACRO_C.:E05TOU  is referenced.
   G_LCP6_E.:E05TOU  is referenced.
   GT_LCP6_M.:E05TOU  is referenced.
   KI_CP6.:E05TOU  is referenced.
   GF_LCP6_M.:E05TOU  is referenced.
   GM_LCP6_M.:E05TOU  is referenced.
   GU_LCP6_M.:E05TOU  is referenced.
   GJ_LCP6_M.:E05TOU  is referenced.
   GH_LCP6_M.:E05TOU  is referenced.
   LCP_6.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure KZO$EVENT.
PL6.E3A0      #001=KZO$EVENT File=KZO$ORDERS.:E05TSI                             WED 07/30/97 02:56 Page:32   

 **** Variables and constants ****

  ****  Section 000  Data  KZO$EVENT

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     8-0-0/w STRC(336)   r     1 DSR_ERROR                  0-0-0/w STRC(32)    r     1 KH_INPDAT
     6-0-0/w STRC(32)    r     1 KH_INPLCT                  4-0-0/w STRC(32)    r     1 KH_INPRNG
     2-0-0/w STRC(32)    r     1 KH_NXTCCB                 1D-0-0/w STRC(336)   r     1 MLCP_ERROR

  ****  Section 001 RoData KZO$EVENT

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c UBIN(8)     r     1 EVENT_MAP(0:13)

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     6-0-0/w PTR         r     1 @EVENT                     4-0-0/w PTR         r     1 @KZ@LINCTX
     8-0-0/w PTR         r     1 @SIZE                     *0-0-0/w UBIN(16)    r     1 EVENT
    *0-0-0/w STRC(2192)  r     1 KZ@LINCTX                  E-0-0/w UBIN(16)    r     1 PROTYP
    *0-0-0/w UBIN(16)    r     1 SIZE                       C-0-0/w PTR         r     1 STT$

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 KZ_HDR$(0:0)

  ****  BASED and DCB variables  ****

PL6.E3A0      #001=KZO$EVENT File=KZO$ORDERS.:E05TSI                             WED 07/30/97 02:56 Page:33   
  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c UBIN(8)     r     1 BFR(0:0)                   0-0-0/w STRC(512)   r     1 KH$CHN
     0-0-0/w STRC(2080)  r     1 KZ$BSCSTT                  0-0-0/w STRC(272)   r     1 KZ$HDR


   Procedure KZO$EVENT requires 455 words for executable code.
   Procedure KZO$EVENT requires 20 words of local(AUTO) storage.
PL6.E3A0      #001=KZO$EVENT File=KZO$ORDERS.:E05TSI                             WED 07/30/97 02:56 Page:34   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=KZO$EVENT File=KZO$ORDERS.:E05TSI                             WED 07/30/97 02:56 Page:35   
          MINI XREF LISTING

BFR
     11870**DCL     11942>>IF
DSR_ERROR
     11668**DCL     11890<>CALL
DSR_ERROR.V
     11672**DCL     11670--DCLINIT
DSR_ERROR.V.TERMID
     11735**DCL     11889<<ASSIGN
DSR_ERROR.V.TERMID.TERM
     11737**DCL     11746--REDEF
EVENT
     11851**DCL        30--PROC    11882<<ASSIGN  11915<<ASSIGN  11923<<ASSIGN  11939<<ASSIGN  11943<<ASSIGN
     11945<<ASSIGN  11956<<ASSIGN  11976>>IF      11976>>IF      11976>>IF      11982>>IF      11983<<ASSIGN
EVENT_MAP
     11855**DCL     11956>>ASSIGN
KH$CHN
     10570**DCL     11879<>CALL    11901<>CALL    11932<>CALL    11955<>CALL    11964<>CALL    11967<>CALL
     11980<>CALL
KH$CHN.TERMID.TERM
     10666**DCL     10675--REDEF
KHA$ERRLOG
     10553**DCL-ENT 11972--CALL
KHI$IO_INP
     10551**DCL-ENT 11879--CALL    11901--CALL    11932--CALL    11980--CALL
KHI$IO_INPLCTBYT
     10552**DCL-ENT 11955--CALL    11964--CALL    11967--CALL
KH_INPDAT
     11194**DCL     11879<>CALL
KH_INPDAT.ASNSTT
     11203**DCL     11204--REDEF
KH_INPDAT.SNCSTT
     11204**DCL     11878<<ASSIGN
PL6.E3A0      #001=KZO$EVENT File=KZO$ORDERS.:E05TSI                             WED 07/30/97 02:56 Page:36   
KH_INPDAT.SNCSTT.DSR
     11204**DCL     11880>>IF
KH_INPLCT
     11547**DCL     11955<>CALL    11964<>CALL    11967<>CALL
KH_INPLCT.LCTBYT.ADR
     11563**DCL     11954<<ASSIGN  11963<<ASSIGN  11966<<ASSIGN
KH_INPLCT.LCTBYT.DAT
     11563**DCL     11956>>ASSIGN  11957>>IF      11957>>IF      11959>>IF      11965>>ASSIGN  11968>>ASSIGN
KH_INPRNG
     11430**DCL     11932<>CALL    11980<>CALL
KH_INPRNG.RNG
     11451**DCL     11931<<ASSIGN  11933>>ASSIGN  11979<<ASSIGN  11981>>ASSIGN
KH_NXTCCB
     11312**DCL     11901<>CALL
KH_NXTCCB.CCBSTT
     11383**DCL     11900<<ASSIGN
KH_NXTCCB.CCBSTT.PRG
     11384**DCL     11907>>DOCASE
KZ$BSCSTT.BLKIN IN PROCEDURE TIC_STATS
     12813**DCL     12878<<ASSIGN  12878>>ASSIGN
KZ$BSCSTT.CHRIN IN PROCEDURE TIC_STATS
     12809**DCL     12879<<ASSIGN  12879>>ASSIGN
KZ$BSCSTT.REQSTATS.DSPMSK IN PROCEDURE TIC_STATS
     12732**DCL     12738--REDEF
KZ$BSCSTT.REQSTATS.SLCMSK IN PROCEDURE TIC_STATS
     12773**DCL     12780--REDEF
KZ$HDR.STTBFR$ IN PROCEDURE TIC_STATS
     12863**DCL     12876>>ASSIGN
KZ@LINCTX
     10692**DCL        30--PROC
KZ@LINCTX.CHN$
     10695**DCL     11879>>CALL    11901>>CALL    11932>>CALL    11955>>CALL    11964>>CALL    11967>>CALL
     11980>>CALL
KZ@LINCTX.CHRIN
     11071**DCL     12881<<ASSIGN  12881>>ASSIGN
KZ@LINCTX.HIST
PL6.E3A0      #001=KZO$EVENT File=KZO$ORDERS.:E05TSI                             WED 07/30/97 02:56 Page:37   
     10738**DCL     11970--ASSIGN
KZ@LINCTX.INPBFR$
     10998**DCL     11938>>IF      11942>>IF
KZ@LINCTX.INPBFRSIZ
     11000**DCL     11933>>ASSIGN  11981>>ASSIGN
KZ@LINCTX.INPDATSIZ
     11002**DCL     12879>>ASSIGN  12881>>ASSIGN
KZ@LINCTX.LINID
     10713**DCL     11889>>ASSIGN  11969>>ASSIGN
KZ@LINCTX.LINID.TERM
     10715**DCL     10724--REDEF
KZ@LINCTX.OTPCNT
     10980**DCL     10983--REDEF
KZ@LINCTX.POLSIZ
     11026**DCL     11028--REDEF
KZ@LINCTX.PRO.PROTYP
     10876**DCL     12875>>ASSIGN
KZ@LINCTX.PRO.SLAVE
     10931**DCL     12875>>ASSIGN
KZ@LINCTX.RCRIN
     11075**DCL     12882<<ASSIGN  12882>>ASSIGN
KZ_HDR$ IN PROCEDURE TIC_STATS
     12872**DCL     12876>>ASSIGN
M$WRSYSLOG
      4309**DCL-ENT 11890--CALL
MLCP_ERROR
     11767**DCL     11972<>CALL
MLCP_ERROR.BUF_
     11769**DCL     11970<<ASSIGN
MLCP_ERROR.V
     11771**DCL     11769--DCLINIT
MLCP_ERROR.V.ERRCODE.ERR#
     11815**DCL     11965<<ASSIGN
MLCP_ERROR.V.ERRCODE.SEV
     11816**DCL     11960<<ASSIGN  11962<<ASSIGN
MLCP_ERROR.V.TERMID
PL6.E3A0      #001=KZO$EVENT File=KZO$ORDERS.:E05TSI                             WED 07/30/97 02:56 Page:38   
     11834**DCL     11969<<ASSIGN
MLCP_ERROR.V.TERMID.TERM
     11836**DCL     11845--REDEF
MLCP_ERROR.V.VALUES
     11847**DCL     11968<<ASSIGN
PROTYP IN PROCEDURE TIC_STATS
     12873**DCL     12875<<ASSIGN  12876>>ASSIGN
SIZE
     11852**DCL        30--PROC    11872<<ASSIGN  11933<<ASSIGN  11942>>IF      11981<<ASSIGN  11982>>IF
STT$ IN PROCEDURE TIC_STATS
     12871**DCL     12483--IMP-PTR 12876<<ASSIGN  12877>>IF      12878>>ASSIGN  12878>>ASSIGN  12879>>ASSIGN
     12879>>ASSIGN
TIC_STATS
     11991**PROC    11934--CALL    11984--CALL

PL6.E3A0      #002=KZO$ORDERS File=KZO$ORDERS.:E05TSI                            WED 07/30/97 02:57 Page:39   
      263        1        /*T***********************************************************/
      264        2        /*T*                                                         */
      265        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      266        4        /*T*                                                         */
      267        5        /*T***********************************************************/
      268        6        /*X* PLM=6,IND=3,CTI=3,DCI=3,DTI=0,MCI,MOC,DMC */
      269        7        /*P*     NAME:     KZO$ORDERS
      270        8                 PURPOSE:  KZO$ORDERS sends an I/O order to the MLCP.  That
      271        9                           is his only function in life...                 */
      272       10
      273       11        /*D*     NAME:     KZO$ORDERS
      274       12                 DESCRIPTION:
      275       13                           KZO$ORDERS is called from the line driver ONLY.
      276       14                           The routine is passed two arguments.  The first
      277       15                           is the order code which is to be executed by the
      278       16                           channel (KZ#SEND_... equs in KZ_MLCP_C).  The
      279       17                           second is the line context structure.  KZO$ORDER
      280       18                           schedules the initial input/output timeout for
      281       19                           the channel.                                    */
      282       20        %EJECT;
PL6.E3A0      #002=KZO$ORDERS File=KZO$ORDERS.:E05TSI                            WED 07/30/97 02:57 Page:40   
      283       21        KZO$ORDERS: PROC ( ORDER, KZ@LINCTX );
      284       22
      285       23        %INCLUDE LCP_6;
      286     4302        %INCLUDE KL_MACRO_C;
      287     7654        %INCLUDE KL_AFCN_C;
      288     7755        %INCLUDE K_ID_E;
      289     7805        %K#ENTID_E;
      290     7824        %K#LYRID_E;
      291     7831        %INCLUDE KZ_CLM_E;
      292     8003        %INCLUDE KZ_MLCP_C;
      293     8078        %INCLUDE KZ$LINCTX;
      294     8698        %INCLUDE KH$CHN;
      295     8820        %INCLUDE KZ$BSCSTT;
      296     8926        %INCLUDE KH$STT;
      297     8956        %INCLUDE KZ_INIT_C;
      298     9292        %INCLUDE KH$CLK;
      299     9662        %INCLUDE KH_CLKFNC_E;
      300     9707        %INCLUDE KH$IO;
      301     9954        %INCLUDE GH_IOFNC_E;
      302    10023        %INCLUDE KV$GLB;
      303    10442
      304    10443    1   DCL KHI$IO_INP ENTRY(2);
      305    10444    1   DCL KHI$IOLD ENTRY(2);
      306    10445    1   DCL KHI$IO_OTP ENTRY(2);
      307    10446    1   DCL KHI$IO_OTPLCTBYT ENTRY(2);
      308    10447    1   DCL KHC$CLOCK ENTRY(1) ALTRET;
      309    10448    1   DCL KZC$OTPCLK ENTRY (1);
      310    10449
      311    10450
      312    10451
      313    10452            %KZ$LINCTX     ( NAME = KZ@LINCTX,
      314    10453                             STCLASS = PARAM );
      315    10884
      316    10885            %KH$CHN;
      317    11009
      318    11010            %KH$IO         ( FPTN = KH_OTPCHN,
      319    11011                             FNC = %GH#IO_OTPCHNCTR,
PL6.E3A0      #002=KZO$ORDERS File=KZO$ORDERS.:E05TSI                            WED 07/30/97 02:57 Page:41   
      320    11012                             STCLASS = STATIC);
      321    11126
      322    11127            %KH$IO         ( FPTN = KH_OTPLCT,
      323    11128                             FNC = %GH#IO_OTPLCTBYT,
      324    11129                             STCLASS = STATIC);
      325    11243
      326    11244            %KH$IOLD       ( FPTN=KH_IOLD,
      327    11245                             STCLASS=STATIC );
      328    11296
      329    11297            %KH$CLK        ( FPTN = KH_SETCLK,
      330    11298                             FNC = %KH#CLK_SETCLK,
      331    11299                             PRDUNT = %KH#C_SEC,
      332    11300                             ACCURACY = 0,
      333    11301                             STCLASS = STATIC );
      334    11450
      335    11451    1   DCL ORDER UBIN WORD ALIGNED;
      336    11452    1   DCL USELESS_BUFFER CHAR(6) STATIC ALIGNED;
      337    11453    1   DCL DATA_BITMAP(0:19) BIT(1) CONSTANT UNAL INIT (
      338    11454    1            '0'B, '1'B, '1'B, '1'B, '0'B, '0'B, '0'B, '0'B, '0'B, '0'B,
      339    11455    1            '0'B, '0'B, '0'B, '0'B, '0'B, '0'B, '0'B, '0'B, '0'B, '0'B );
      340    11456
      341    11457    1   DCL STT$ PTR;
      342    11458    1   DCL PROTYP UBIN;
      343    11459
      344    11460    1   DCL KZ_HDR$(0:0) PTR SYMREF;
      345    11461
      346    11462            %KZ$BSCSTT     ( STCLASS = "BASED(STT$)" );
      347    11843            %KZ_INIT_HDR   ( NAME = KZ$HDR,
      348    11844                             STCLASS = BASED );
      349    11868
      350    11869    1         KZ@LINCTX.HIST.ORD(KZ@LINCTX.HIST.X) = ORDER;
      351    11870    1         KZ@LINCTX.FLAGS.DFRINP = '0'B;
      352    11871        /**/
      353    11872        /*
      354    11873            If order will result in data going across the line then let's
      355    11874            count blocks out/characters out.
      356    11875        */
PL6.E3A0      #002=KZO$ORDERS File=KZO$ORDERS.:E05TSI                            WED 07/30/97 02:57 Page:42   
      357    11876        /**/
      358    11877    2         IF DATA_BITMAP(ORDER) THEN DO;
      359    11878    2            PROTYP = KZ@LINCTX.PRO.PROTYP * 2 + BITBIN(KZ@LINCTX.PRO.SLAVE);
      360    11879    2            STT$ = KZ_HDR$(PROTYP) -> KZ$HDR.STTBFR$;
      361    11880    3            IF STT$ ~= ADDR(NIL) THEN DO;
      362    11881    3               KZ$BSCSTT.BLKOUT = KZ$BSCSTT.BLKOUT + 1;
      363    11882    3               KZ$BSCSTT.CHROUT = KZ$BSCSTT.CHROUT + KZ@LINCTX.OTPDATSIZ;
      364    11883    3               END;
      365    11884    2            KZ@LINCTX.CHROUT = KZ@LINCTX.CHROUT + KZ@LINCTX.OTPDATSIZ;
      366    11885    2            KZ@LINCTX.RCROUT = KZ@LINCTX.RCROUT + 1;
      367    11886    2            END;
      368    11887        /**/
      369    11888        /*
      370    11889            Reset input and output CCB lists....
      371    11890        */
      372    11891        /**/
      373    11892    1         KH_OTPCHN.OTPCHN = '0'B;
      374    11893    1         KH_OTPCHN.CHNCTR = '0'B;
      375    11894    1         KH_OTPCHN.CHNCTR.CCBLSTRST = '1'B;
      376    11895    1         CALL KHI$IO_OTP (KZ@LINCTX.CHN$ -> KH$CHN, KH_OTPCHN);
      377    11896
      378    11897        /*  IF IONAK BLOW UP AND DIE */
      379    11898
      380    11899    1         KH_OTPCHN.OTPCHN = '1'B;
      381    11900    1         KH_OTPCHN.CHNCTR.CCBLSTRST = '1'B;
      382    11901    1         CALL KHI$IO_OTP (KZ@LINCTX.CHN$ -> KH$CHN, KH_OTPCHN);
      383    11902
      384    11903        /*  IF IONAK BLOW UP AND DIE */
      385    11904
      386    11905        /**/
      387    11906        /*
      388    11907            Move the order code into the MLCP.
      389    11908        */
      390    11909        /**/
      391    11910
      392    11911    1         KH_OTPLCT.LCTBYT.DAT = ORDER;
      393    11912    1         KH_OTPLCT.LCTBYT.ADR = BITBIN('38'X);
PL6.E3A0      #002=KZO$ORDERS File=KZO$ORDERS.:E05TSI                            WED 07/30/97 02:57 Page:43   
      394    11913    1         CALL KHI$IO_OTPLCTBYT (KZ@LINCTX.CHN$ -> KH$CHN, KH_OTPLCT);
      395    11914
      396    11915        /*  IF IONAK BLOW UP AND DIE */
      397    11916
      398    11917        /**/
      399    11918        /*
      400    11919            Set buffer address and range in input CCB.
      401    11920        */
      402    11921        /**/
      403    11922
      404    11923    1         KH_IOLD.OTPCHN = '0'B;
      405    11924    1         KH_IOLD.CCBCTR = '0'B;
      406    11925    1         KH_IOLD.CCBCTR.VLDCCB = '1'B;
      407    11926    2         IF KZ@LINCTX.INPBFR$ ~= ADDR(NIL) THEN DO;
      408    11927    2            KH_IOLD.BFR_.ADR$ = KZ@LINCTX.INPBFR$;
      409    11928    2            KH_IOLD.BFR_.BYTSIZ = KZ@LINCTX.INPBFRSIZ * 2;
      410    11929    2            END;
      411    11930    2         ELSE DO;                        /* Dont crap on low memory!           */
      412    11931    2            KH_IOLD.BFR_.ADR$ = ADDR(USELESS_BUFFER);
      413    11932    2            KH_IOLD.BFR_.BYTSIZ = 6;
      414    11933    2            END;
      415    11934    1         CALL KHI$IOLD (KZ@LINCTX.CHN$ -> KH$CHN, KH_IOLD);
      416    11935
      417    11936        /*  IF IONAK BLOW UP AND DIE */
      418    11937
      419    11938        /**/
      420    11939        /*
      421    11940            Set buffer address and range in output CCB.
      422    11941        */
      423    11942        /**/
      424    11943    1         KH_IOLD.CCBCTR.VLDCCB = '1'B;
      425    11944    1         KH_IOLD.OTPCHN = '1'B;
      426    11945    1         KH_IOLD.BFR_.ADR$ = KZ@LINCTX.OTPBFR$;
      427    11946    1         KH_IOLD.BFR_.BYTSIZ = KZ@LINCTX.OTPDATSIZ;
      428    11947    1         CALL KHI$IOLD (KZ@LINCTX.CHN$ -> KH$CHN, KH_IOLD);
      429    11948
      430    11949        /*  IF IONAK BLOW UP AND DIE */
PL6.E3A0      #002=KZO$ORDERS File=KZO$ORDERS.:E05TSI                            WED 07/30/97 02:57 Page:44   
      431    11950
      432    11951        /**/
      433    11952        /*
      434    11953            Start output clock
      435    11954        */
      436    11955        /**/
      437    11956    2         IF KZ@LINCTX.FLAGS.SETCLK AND NOT KZ@LINCTX.FLAGS.DSC THEN DO;
      438    11957        /*
      439    11958           Protocol time-outs are not appropriate here because we need a
      440    11959           time-out that corresponds to the transmission speed.  Since we
      441    11960           currently don't have such a time-out value, we'll use "10"
      442    11961           (which should give us enough time at all transmission speeds
      443    11962           to complete what we are sending).  This value should be fairly
      444    11963           large because all we do when the clock expires is drop the line.
      445    11964
      446    11965                   IF KZ@LINCTX.TIMOUT.USESEC THEN
      447    11966                      KH_SETCLK.PRD = KZ@LINCTX.TIMOUT.SECONDARY;
      448    11967                   ELSE
      449    11968                      KH_SETCLK.PRD = KZ@LINCTX.TIMOUT.PRIMARY;
      450    11969        */
      451    11970    2            KH_SETCLK.PRD = 10;
      452    11971    2            KH_SETCLK.CTBCTX$ = ADDR(NIL);
      453    11972    2            KH_SETCLK.UID$ = ADDR(KZ@LINCTX);
      454    11973    2            KH_SETCLK.SBR$ = ENTADDR(KZC$OTPCLK);
      455    11974    2            CALL KHC$CLOCK (KH_SETCLK)
      456    11975    3            WHENRETURN DO;
      457    11976    3               KZ@LINCTX.CTB.PRM$ = KH_SETCLK.CTBCTX$;
      458    11977    3               KZ@LINCTX.PRMCTBTYP = %KZ#CTBTYP_OTP;
      459    11978    3               END;
      460    11979    3            WHENALTRETURN DO;
      461    11980                     /* SNAP */
      462    11981    3               END;
      463    11982    2            END;
      464    11983
      465    11984        /**/
      466    11985        /*
      467    11986            Kick the output channel control program.  Output CCP starts
PL6.E3A0      #002=KZO$ORDERS File=KZO$ORDERS.:E05TSI                            WED 07/30/97 02:57 Page:45   
      468    11987            input CCP when its done.
      469    11988        */
      470    11989        /**/
      471    11990
      472    11991    1         KH_OTPCHN.OTPCHN = '1'B;
      473    11992    1         KH_OTPCHN.CHNCTR = '0'B;
      474    11993    1         KH_OTPCHN.CHNCTR.STRIO = '1'B;
      475    11994    1         CALL KHI$IO_OTP (KZ@LINCTX.CHN$ -> KH$CHN, KH_OTPCHN);
      476    11995
      477    11996        /*  IF IONAK BLOW UP AND DIE. */
      478    11997
      479    11998    1   END KZO$ORDERS;
      480    11999        %EJECT;
PL6.E3A0      #002=KZO$ORDERS File=KZO$ORDERS.:E05TSI                            WED 07/30/97 02:57 Page:46   
      481    12000        %EOD;

PL6.E3A0      #002=KZO$ORDERS File=KZO$ORDERS.:E05TSI                            WED 07/30/97 02:57 Page:47   
--  Include file information  --

   KV$GLB.:E05TOU  is referenced.
   GH_IOFNC_E.:E05TOU  is referenced.
   KH$IO.:E05TOU  is referenced.
   KH_CLKFNC_E.:E05TOU  is referenced.
   KH$CLK.:E05TOU  is referenced.
   KZ_INIT_C.:E05TOU  is referenced.
   KH$STT.:E05TOU  is referenced.
   KV$BPC.:E05TOU  is referenced.
   KZ$BSCSTT.:E05TOU  is referenced.
   KH$CHN.:E05TOU  is referenced.
   KZ$LINCTX.:E05TOU  is referenced.
   KZ_MLCP_C.:E05TOU  is referenced.
   KZ_CLM_E.:E05TOU  is referenced.
   K_ID_E.:E05TOU  is referenced.
   KL_AFCN_C.:E05TOU  is referenced.
   KL_MACRO_C.:E05TOU  is referenced.
   G_LCP6_E.:E05TOU  is referenced.
   GT_LCP6_M.:E05TOU  is referenced.
   KI_CP6.:E05TOU  is referenced.
   GF_LCP6_M.:E05TOU  is referenced.
   GM_LCP6_M.:E05TOU  is referenced.
   GU_LCP6_M.:E05TOU  is referenced.
   GJ_LCP6_M.:E05TOU  is referenced.
   GH_LCP6_M.:E05TOU  is referenced.
   LCP_6.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure KZO$ORDERS.

   Procedure KZO$ORDERS requires 332 words for executable code.
   Procedure KZO$ORDERS requires 16 words of local(AUTO) storage.

PL6.E3A0      #002=KZO$ORDERS File=KZO$ORDERS.:E05TSI                            WED 07/30/97 02:57 Page:48   

 Object Unit name= KZO$ORDERS                                 File name= KZO$ORDERS.:E05TOU
 UTS= JUL 30 '97 02:57:51.24 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_LCP6_SYSTEM                               Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size HexSiz  Section name
    0   Data  even  none    23     17  KZO$ORDERS
    1  RoData even  UTS      2      2  KZO$ORDERS
    2   Proc  even  none   332    14C  KZO$ORDERS
    3  RoData even  none     2      2  KZO$ORDERS

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect HexLoc Primary Altret sequence   type   Parms  Name
     2      0   yes            yes      Std        2  KZO$ORDERS

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       2 KHI$IO_OTP
 yes     yes           Std       1 KHC$CLOCK
         yes           Std       2 KHI$IO_OTPLCTBYT
         yes           Std       2 KHI$IOLD
         yes           Std       1 KZC$OTPCLK
                       nStd      0 X6A_AUTO_2
                       nStd      0 X6A_ARET
PL6.E3A0      #002=KZO$ORDERS File=KZO$ORDERS.:E05TSI                            WED 07/30/97 02:57 Page:49   

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     KZ_HDR$                          r    G$ROS$
PL6.E3A0      #002=KZO$ORDERS File=KZO$ORDERS.:E05TSI                            WED 07/30/97 02:57 Page:50   


      263        1        /*T***********************************************************/
      264        2        /*T*                                                         */
      265        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      266        4        /*T*                                                         */
      267        5        /*T***********************************************************/
      268        6        /*X* PLM=6,IND=3,CTI=3,DCI=3,DTI=0,MCI,MOC,DMC */
      269        7        /*P*     NAME:     KZO$ORDERS
      270        8                 PURPOSE:  KZO$ORDERS sends an I/O order to the MLCP.  That
      271        9                           is his only function in life...                 */
      272       10
      273       11        /*D*     NAME:     KZO$ORDERS
      274       12                 DESCRIPTION:
      275       13                           KZO$ORDERS is called from the line driver ONLY.
      276       14                           The routine is passed two arguments.  The first
      277       15                           is the order code which is to be executed by the
      278       16                           channel (KZ#SEND_... equs in KZ_MLCP_C).  The
      279       17                           second is the line context structure.  KZO$ORDER
      280       18                           schedules the initial input/output timeout for
      281       19                           the channel.                                    */
      282       20        %EJECT;
PL6.E3A0      #002=KZO$ORDERS File=KZO$ORDERS.:E05TSI                            WED 07/30/97 02:57 Page:51   
      283       21        KZO$ORDERS: PROC ( ORDER, KZ@LINCTX );

     21   2 000000  D380 0000 0000  xent KZO$ORDERS      LNJ,B5   X6A_AUTO_2
          2 000003       0010 0002                       DC       16,2

      284       22
      285       23        %INCLUDE LCP_6;
      286     4302        %INCLUDE KL_MACRO_C;
      287     7654        %INCLUDE KL_AFCN_C;
      288     7755        %INCLUDE K_ID_E;
      289     7805        %K#ENTID_E;
      290     7824        %K#LYRID_E;
      291     7831        %INCLUDE KZ_CLM_E;
      292     8003        %INCLUDE KZ_MLCP_C;
      293     8078        %INCLUDE KZ$LINCTX;
      294     8698        %INCLUDE KH$CHN;
      295     8820        %INCLUDE KZ$BSCSTT;
      296     8926        %INCLUDE KH$STT;
      297     8956        %INCLUDE KZ_INIT_C;
      298     9292        %INCLUDE KH$CLK;
      299     9662        %INCLUDE KH_CLKFNC_E;
      300     9707        %INCLUDE KH$IO;
      301     9954        %INCLUDE GH_IOFNC_E;
      302    10023        %INCLUDE KV$GLB;
      303    10442
      304    10443    1   DCL KHI$IO_INP ENTRY(2);
      305    10444    1   DCL KHI$IOLD ENTRY(2);
      306    10445    1   DCL KHI$IO_OTP ENTRY(2);
      307    10446    1   DCL KHI$IO_OTPLCTBYT ENTRY(2);
      308    10447    1   DCL KHC$CLOCK ENTRY(1) ALTRET;
      309    10448    1   DCL KZC$OTPCLK ENTRY (1);
      310    10449
      311    10450
      312    10451
      313    10452            %KZ$LINCTX     ( NAME = KZ@LINCTX,
      314    10453                             STCLASS = PARAM );
      315    10884
PL6.E3A0      #002=KZO$ORDERS File=KZO$ORDERS.:E05TSI                            WED 07/30/97 02:57 Page:52   
      316    10885            %KH$CHN;
      317    11009
      318    11010            %KH$IO         ( FPTN = KH_OTPCHN,
      319    11011                             FNC = %GH#IO_OTPCHNCTR,
      320    11012                             STCLASS = STATIC);
      321    11126
      322    11127            %KH$IO         ( FPTN = KH_OTPLCT,
      323    11128                             FNC = %GH#IO_OTPLCTBYT,
      324    11129                             STCLASS = STATIC);
      325    11243
      326    11244            %KH$IOLD       ( FPTN=KH_IOLD,
      327    11245                             STCLASS=STATIC );
      328    11296
      329    11297            %KH$CLK        ( FPTN = KH_SETCLK,
      330    11298                             FNC = %KH#CLK_SETCLK,
      331    11299                             PRDUNT = %KH#C_SEC,
      332    11300                             ACCURACY = 0,
      333    11301                             STCLASS = STATIC );
      334    11450
      335    11451    1   DCL ORDER UBIN WORD ALIGNED;
      336    11452    1   DCL USELESS_BUFFER CHAR(6) STATIC ALIGNED;
      337    11453    1   DCL DATA_BITMAP(0:19) BIT(1) CONSTANT UNAL INIT (
      338    11454    1            '0'B, '1'B, '1'B, '1'B, '0'B, '0'B, '0'B, '0'B, '0'B, '0'B,
      339    11455    1            '0'B, '0'B, '0'B, '0'B, '0'B, '0'B, '0'B, '0'B, '0'B, '0'B );
      340    11456
      341    11457    1   DCL STT$ PTR;
      342    11458    1   DCL PROTYP UBIN;
      343    11459
      344    11460    1   DCL KZ_HDR$(0:0) PTR SYMREF;
      345    11461
      346    11462            %KZ$BSCSTT     ( STCLASS = "BASED(STT$)" );
      347    11843            %KZ_INIT_HDR   ( NAME = KZ$HDR,
      348    11844                             STCLASS = BASED );
      349    11868
      350    11869    1         KZ@LINCTX.HIST.ORD(KZ@LINCTX.HIST.X) = ORDER;

  11869   2 000005  ECC7 0006                            LDB,B6   @KZ@LINCTX,AUTO
PL6.E3A0      #002=KZO$ORDERS File=KZO$ORDERS.:E05TSI                            WED 07/30/97 02:57 Page:53   
          2 000007  B846 0013                            LDR,R3   19,B6
          2 000009  DCC7 0004                            LDB,B5   @ORDER,AUTO
          2 00000B  E805                                 LDR,R6   ,B5
          2 00000C  3E40                                 ADV,R3   64
          2 00000D  E7B6                                 STH,R6   ,B6,R3

      351    11870    1         KZ@LINCTX.FLAGS.DFRINP = '0'B;

  11870   2 00000E  8846 0034                            LBF,'0200'X       52,B6
  11870   2 000010       0200

      352    11871        /**/
      353    11872        /*
      354    11873            If order will result in data going across the line then let's
      355    11874            count blocks out/characters out.
      356    11875        */
      357    11876        /**/
      358    11877    2         IF DATA_BITMAP(ORDER) THEN DO;

  11877   2 000011  B805                                 LDR,R3   ,B5
          2 000012  82B0 0000 0000  01                   LB       DATA_BITMAP,R3
          2 000015  0581 002C                            BBF      s:11892,PREL

      359    11878    2            PROTYP = KZ@LINCTX.PRO.PROTYP * 2 + BITBIN(KZ@LINCTX.PRO.SLAVE);

  11878   2 000017  E846 004B                            LDR,R6   75,B6
          2 000019  604F                                 SOR,R6   15
          2 00001A  D846 003A                            LDR,R5   58,B6
          2 00001C  5001                                 SOL,R5   1
          2 00001D  DA56                                 ADD,R5   R6
          2 00001E  DF47 000A                            STR,R5   PROTYP,AUTO

      360    11879    2            STT$ = KZ_HDR$(PROTYP) -> KZ$HDR.STTBFR$;

  11879   2 000020  A855                                 LDR,R2   R5
          2 000021  CCA0 0000 0000  xsym                 LDB,B4   KZ_HDR$,R2
          2 000024  BCC4 0006                            LDB,B3   6,B4
PL6.E3A0      #002=KZO$ORDERS File=KZO$ORDERS.:E05TSI                            WED 07/30/97 02:57 Page:54   
          2 000026  BFC7 0008                            STB,B3   STT$,AUTO

      361    11880    3            IF STT$ ~= ADDR(NIL) THEN DO;

  11880   2 000028  8DC7 0008                            CMN      STT$,AUTO
          2 00002A  0901 000C                            BE       s:11884,PREL

      362    11881    3               KZ$BSCSTT.BLKOUT = KZ$BSCSTT.BLKOUT + 1;

  11881   2 00002C  8AC3 0027                            INC      39,B3
          2 00002E  8EC3 0026                            CAD      38,B3

      363    11882    3               KZ$BSCSTT.CHROUT = KZ$BSCSTT.CHROUT + KZ@LINCTX.OTPDATSIZ;

  11882   2 000030  F846 005D                            LDR,R7   93,B6
          2 000032  6C00                                 LDV,R6   0
          2 000033  8443 0022                            AID      34,B3
          2 000035  8D43 0022                            SDI      34,B3

      364    11883    3               END;

      365    11884    2            KZ@LINCTX.CHROUT = KZ@LINCTX.CHROUT + KZ@LINCTX.OTPDATSIZ;

  11884   2 000037  F846 005D                            LDR,R7   93,B6
          2 000039  6C00                                 LDV,R6   0
          2 00003A  8446 007D                            AID      125,B6
          2 00003C  8D46 007D                            SDI      125,B6

      366    11885    2            KZ@LINCTX.RCROUT = KZ@LINCTX.RCROUT + 1;

  11885   2 00003E  8AC6 0082                            INC      130,B6
          2 000040  8EC6 0081                            CAD      129,B6

      367    11886    2            END;

      368    11887        /**/
      369    11888        /*
PL6.E3A0      #002=KZO$ORDERS File=KZO$ORDERS.:E05TSI                            WED 07/30/97 02:57 Page:55   
      370    11889            Reset input and output CCB lists....
      371    11890        */
      372    11891        /**/
      373    11892    1         KH_OTPCHN.OTPCHN = '0'B;

  11892   2 000042  8800 0000 0000  00                   LBF,'0040'X       KH_OTPCHN
  11892   2 000045       0040

      374    11893    1         KH_OTPCHN.CHNCTR = '0'B;

  11893   2 000046  8700 0000 0001  00                   CL       KH_OTPCHN+1

      375    11894    1         KH_OTPCHN.CHNCTR.CCBLSTRST = '1'B;

  11894   2 000049  8900 0000 0001  00                   LBT,'0100'X       KH_OTPCHN+1
  11894   2 00004C       0100

      376    11895    1         CALL KHI$IO_OTP (KZ@LINCTX.CHN$ -> KH$CHN, KH_OTPCHN);

  11895   2 00004D  CCC6 0002                            LDB,B4   2,B6
          2 00004F  BB80 0000 0000  00                   LAB,B3   KH_OTPCHN
          2 000052  BFC7 000E                            STB,B3   PROTYP+4,AUTO
          2 000054  CFC7 000C                            STB,B4   PROTYP+2,AUTO
          2 000056  BBC7 000C                            LAB,B3   PROTYP+2,AUTO
          2 000058  CBF0 0200                            LAB,B4   512,IMO
          2 00005A  E380 0000 0000  xent                 LNJ,B6   KHI$IO_OTP
          2 00005D       0001                            DC       s:11899,PREL

      377    11896
      378    11897        /*  IF IONAK BLOW UP AND DIE */
      379    11898
      380    11899    1         KH_OTPCHN.OTPCHN = '1'B;

  11899   2 00005E  8900 0000 0000  00                   LBT,'0040'X       KH_OTPCHN
  11899   2 000061       0040

      381    11900    1         KH_OTPCHN.CHNCTR.CCBLSTRST = '1'B;
PL6.E3A0      #002=KZO$ORDERS File=KZO$ORDERS.:E05TSI                            WED 07/30/97 02:57 Page:56   

  11900   2 000062  8900 0000 0001  00                   LBT,'0100'X       KH_OTPCHN+1
  11900   2 000065       0100

      382    11901    1         CALL KHI$IO_OTP (KZ@LINCTX.CHN$ -> KH$CHN, KH_OTPCHN);

  11901   2 000066  ECC7 0006                            LDB,B6   @KZ@LINCTX,AUTO
          2 000068  DCC6 0002                            LDB,B5   2,B6
          2 00006A  CB80 0000 0000  00                   LAB,B4   KH_OTPCHN
          2 00006D  CFC7 000E                            STB,B4   PROTYP+4,AUTO
          2 00006F  DFC7 000C                            STB,B5   PROTYP+2,AUTO
          2 000071  BBC7 000C                            LAB,B3   PROTYP+2,AUTO
          2 000073  CBF0 0200                            LAB,B4   512,IMO
          2 000075  E380 0000 0000  xent                 LNJ,B6   KHI$IO_OTP
          2 000078       0001                            DC       s:11911,PREL

      383    11902
      384    11903        /*  IF IONAK BLOW UP AND DIE */
      385    11904
      386    11905        /**/
      387    11906        /*
      388    11907            Move the order code into the MLCP.
      389    11908        */
      390    11909        /**/
      391    11910
      392    11911    1         KH_OTPLCT.LCTBYT.DAT = ORDER;

  11911   2 000079  ECC7 0004                            LDB,B6   @ORDER,AUTO
          2 00007B  E806                                 LDR,R6   ,B6
          2 00007C  E780 0000 0003  00                   STH,R6   KH_OTPLCT+1

      393    11912    1         KH_OTPLCT.LCTBYT.ADR = BITBIN('38'X);

  11912   2 00007F  6C38                                 LDV,R6   56
          2 000080  EA80 0000 0003  00                   SRM,R6,'00FF'X    KH_OTPLCT+1
          2 000083       00FF

PL6.E3A0      #002=KZO$ORDERS File=KZO$ORDERS.:E05TSI                            WED 07/30/97 02:57 Page:57   
      394    11913    1         CALL KHI$IO_OTPLCTBYT (KZ@LINCTX.CHN$ -> KH$CHN, KH_OTPLCT);

  11913   2 000084  DCC7 0006                            LDB,B5   @KZ@LINCTX,AUTO
          2 000086  CCC5 0002                            LDB,B4   2,B5
          2 000088  BB80 0000 0002  00                   LAB,B3   KH_OTPLCT
          2 00008B  BFC7 000E                            STB,B3   PROTYP+4,AUTO
          2 00008D  CFC7 000C                            STB,B4   PROTYP+2,AUTO
          2 00008F  BBC7 000C                            LAB,B3   PROTYP+2,AUTO
          2 000091  CBF0 0200                            LAB,B4   512,IMO
          2 000093  E380 0000 0000  xent                 LNJ,B6   KHI$IO_OTPLCTBYT
          2 000096       0001                            DC       s:11923,PREL

      395    11914
      396    11915        /*  IF IONAK BLOW UP AND DIE */
      397    11916
      398    11917        /**/
      399    11918        /*
      400    11919            Set buffer address and range in input CCB.
      401    11920        */
      402    11921        /**/
      403    11922
      404    11923    1         KH_IOLD.OTPCHN = '0'B;

  11923   2 000097  8800 0000 0004  00                   LBF,'0040'X       KH_IOLD
  11923   2 00009A       0040

      405    11924    1         KH_IOLD.CCBCTR = '0'B;

  11924   2 00009B  8800 0000 0004  00                   LBF,'FF80'X       KH_IOLD
  11924   2 00009E       FF80

      406    11925    1         KH_IOLD.CCBCTR.VLDCCB = '1'B;

  11925   2 00009F  8900 0000 0004  00                   LBT,'4000'X       KH_IOLD
  11925   2 0000A2       4000

      407    11926    2         IF KZ@LINCTX.INPBFR$ ~= ADDR(NIL) THEN DO;
PL6.E3A0      #002=KZO$ORDERS File=KZO$ORDERS.:E05TSI                            WED 07/30/97 02:57 Page:58   

  11926   2 0000A3  ECC7 0006                            LDB,B6   @KZ@LINCTX,AUTO
          2 0000A5  8DC6 0056                            CMN      86,B6
          2 0000A7  0901 000E                            BE       s:11931,PREL

      408    11927    2            KH_IOLD.BFR_.ADR$ = KZ@LINCTX.INPBFR$;

  11927   2 0000A9  DCC6 0056                            LDB,B5   86,B6
          2 0000AB  DF80 0000 0005  00                   STB,B5   KH_IOLD+1

      409    11928    2            KH_IOLD.BFR_.BYTSIZ = KZ@LINCTX.INPBFRSIZ * 2;

  11928   2 0000AE  E846 0058                            LDR,R6   88,B6
          2 0000B0  6001                                 SOL,R6   1
          2 0000B1  EF00 0000 0008  00                   STR,R6   KH_IOLD+4

      410    11929    2            END;

  11929   2 0000B4  0F81 000B                            B        s:11934,PREL

      411    11930    2         ELSE DO;                        /* Dont crap on low memory!           */

      412    11931    2            KH_IOLD.BFR_.ADR$ = ADDR(USELESS_BUFFER);

  11931   2 0000B6  DB80 0000 0014  00                   LAB,B5   USELESS_BUFFER
          2 0000B9  DF80 0000 0005  00                   STB,B5   KH_IOLD+1

      413    11932    2            KH_IOLD.BFR_.BYTSIZ = 6;

  11932   2 0000BC  6C06                                 LDV,R6   6
          2 0000BD  EF00 0000 0008  00                   STR,R6   KH_IOLD+4

      414    11933    2            END;

      415    11934    1         CALL KHI$IOLD (KZ@LINCTX.CHN$ -> KH$CHN, KH_IOLD);

  11934   2 0000C0  CCC6 0002                            LDB,B4   2,B6
PL6.E3A0      #002=KZO$ORDERS File=KZO$ORDERS.:E05TSI                            WED 07/30/97 02:57 Page:59   
          2 0000C2  BB80 0000 0004  00                   LAB,B3   KH_IOLD
          2 0000C5  BFC7 000E                            STB,B3   PROTYP+4,AUTO
          2 0000C7  CFC7 000C                            STB,B4   PROTYP+2,AUTO
          2 0000C9  BBC7 000C                            LAB,B3   PROTYP+2,AUTO
          2 0000CB  CBF0 0200                            LAB,B4   512,IMO
          2 0000CD  E380 0000 0000  xent                 LNJ,B6   KHI$IOLD
          2 0000D0       0001                            DC       s:11943,PREL

      416    11935
      417    11936        /*  IF IONAK BLOW UP AND DIE */
      418    11937
      419    11938        /**/
      420    11939        /*
      421    11940            Set buffer address and range in output CCB.
      422    11941        */
      423    11942        /**/
      424    11943    1         KH_IOLD.CCBCTR.VLDCCB = '1'B;

  11943   2 0000D1  8900 0000 0004  00                   LBT,'4000'X       KH_IOLD
  11943   2 0000D4       4000

      425    11944    1         KH_IOLD.OTPCHN = '1'B;

  11944   2 0000D5  8900 0000 0004  00                   LBT,'0040'X       KH_IOLD
  11944   2 0000D8       0040

      426    11945    1         KH_IOLD.BFR_.ADR$ = KZ@LINCTX.OTPBFR$;

  11945   2 0000D9  ECC7 0006                            LDB,B6   @KZ@LINCTX,AUTO
          2 0000DB  DCC6 005A                            LDB,B5   90,B6
          2 0000DD  DF80 0000 0005  00                   STB,B5   KH_IOLD+1

      427    11946    1         KH_IOLD.BFR_.BYTSIZ = KZ@LINCTX.OTPDATSIZ;

  11946   2 0000E0  E846 005D                            LDR,R6   93,B6
          2 0000E2  EF00 0000 0008  00                   STR,R6   KH_IOLD+4

PL6.E3A0      #002=KZO$ORDERS File=KZO$ORDERS.:E05TSI                            WED 07/30/97 02:57 Page:60   
      428    11947    1         CALL KHI$IOLD (KZ@LINCTX.CHN$ -> KH$CHN, KH_IOLD);

  11947   2 0000E5  CCC6 0002                            LDB,B4   2,B6
          2 0000E7  BB80 0000 0004  00                   LAB,B3   KH_IOLD
          2 0000EA  BFC7 000E                            STB,B3   PROTYP+4,AUTO
          2 0000EC  CFC7 000C                            STB,B4   PROTYP+2,AUTO
          2 0000EE  BBC7 000C                            LAB,B3   PROTYP+2,AUTO
          2 0000F0  CBF0 0200                            LAB,B4   512,IMO
          2 0000F2  E380 0000 0000  xent                 LNJ,B6   KHI$IOLD
          2 0000F5       0001                            DC       s:11956,PREL

      429    11948
      430    11949        /*  IF IONAK BLOW UP AND DIE */
      431    11950
      432    11951        /**/
      433    11952        /*
      434    11953            Start output clock
      435    11954        */
      436    11955        /**/
      437    11956    2         IF KZ@LINCTX.FLAGS.SETCLK AND NOT KZ@LINCTX.FLAGS.DSC THEN DO;

  11956   2 0000F6  ECC7 0006                            LDB,B6   @KZ@LINCTX,AUTO
          2 0000F8  82C6 0034                            LB,'0020'X        52,B6
          2 0000FA       0020
          2 0000FB  0581 002F                            BBF      s:11991,PREL
          2 0000FD  82C6 0034                            LB,'1000'X        52,B6
          2 0000FF       1000
          2 000100  0501 002A                            BBT      s:11991,PREL

      438    11957        /*
      439    11958           Protocol time-outs are not appropriate here because we need a
      440    11959           time-out that corresponds to the transmission speed.  Since we
      441    11960           currently don't have such a time-out value, we'll use "10"
      442    11961           (which should give us enough time at all transmission speeds
      443    11962           to complete what we are sending).  This value should be fairly
      444    11963           large because all we do when the clock expires is drop the line.
      445    11964
PL6.E3A0      #002=KZO$ORDERS File=KZO$ORDERS.:E05TSI                            WED 07/30/97 02:57 Page:61   
      446    11965                   IF KZ@LINCTX.TIMOUT.USESEC THEN
      447    11966                      KH_SETCLK.PRD = KZ@LINCTX.TIMOUT.SECONDARY;
      448    11967                   ELSE
      449    11968                      KH_SETCLK.PRD = KZ@LINCTX.TIMOUT.PRIMARY;
      450    11969        */
      451    11970    2            KH_SETCLK.PRD = 10;

  11970   2 000102  6C0A                                 LDV,R6   10
          2 000103  EF00 0000 0013  00                   STR,R6   KH_SETCLK+10

      452    11971    2            KH_SETCLK.CTBCTX$ = ADDR(NIL);

  11971   2 000106  DB80 0000 0000                       LAB,B5   0
          2 000109  DF80 0000 0009  00                   STB,B5   KH_SETCLK

      453    11972    2            KH_SETCLK.UID$ = ADDR(KZ@LINCTX);

  11972   2 00010C  EF80 0000 000B  00                   STB,B6   KH_SETCLK+2

      454    11973    2            KH_SETCLK.SBR$ = ENTADDR(KZC$OTPCLK);

  11973   2 00010F  CB80 0000 0000  xent                 LAB,B4   KZC$OTPCLK
          2 000112  CF80 0000 0011  00                   STB,B4   KH_SETCLK+8

      455    11974    2            CALL KHC$CLOCK (KH_SETCLK)

  11974   2 000115  BB80 0000 0000  03                   LAB,B3   0
          2 000118  CBF0 0100                            LAB,B4   256,IMO
          2 00011A  E380 0000 0000  xent                 LNJ,B6   KHC$CLOCK
          2 00011D       000E                            DC       s:11991,PREL

      456    11975    3            WHENRETURN DO;

      457    11976    3               KZ@LINCTX.CTB.PRM$ = KH_SETCLK.CTBCTX$;

  11976   2 00011E  EC80 0000 0009  00                   LDB,B6   KH_SETCLK
          2 000121  DCC7 0006                            LDB,B5   @KZ@LINCTX,AUTO
PL6.E3A0      #002=KZO$ORDERS File=KZO$ORDERS.:E05TSI                            WED 07/30/97 02:57 Page:62   
          2 000123  EFC5 0031                            STB,B6   49,B5

      458    11977    3               KZ@LINCTX.PRMCTBTYP = %KZ#CTBTYP_OTP;

  11977   2 000125  6C02                                 LDV,R6   2
          2 000126  EAC5 000C                            SRM,R6,'00FF'X    12,B5
          2 000128       00FF

      459    11978    3               END;

  11978   2 000129  0F81 0001                            B        s:11991,PREL

      460    11979    3            WHENALTRETURN DO;

      461    11980                     /* SNAP */
      462    11981    3               END;

      463    11982    2            END;

      464    11983
      465    11984        /**/
      466    11985        /*
      467    11986            Kick the output channel control program.  Output CCP starts
      468    11987            input CCP when its done.
      469    11988        */
      470    11989        /**/
      471    11990
      472    11991    1         KH_OTPCHN.OTPCHN = '1'B;

  11991   2 00012B  8900 0000 0000  00                   LBT,'0040'X       KH_OTPCHN
  11991   2 00012E       0040

      473    11992    1         KH_OTPCHN.CHNCTR = '0'B;

  11992   2 00012F  8700 0000 0001  00                   CL       KH_OTPCHN+1

      474    11993    1         KH_OTPCHN.CHNCTR.STRIO = '1'B;
PL6.E3A0      #002=KZO$ORDERS File=KZO$ORDERS.:E05TSI                            WED 07/30/97 02:57 Page:63   

  11993   2 000132  8900 0000 0001  00                   LBT,'4000'X       KH_OTPCHN+1
  11993   2 000135       4000

      475    11994    1         CALL KHI$IO_OTP (KZ@LINCTX.CHN$ -> KH$CHN, KH_OTPCHN);

  11994   2 000136  ECC7 0006                            LDB,B6   @KZ@LINCTX,AUTO
          2 000138  DCC6 0002                            LDB,B5   2,B6
          2 00013A  CB80 0000 0000  00                   LAB,B4   KH_OTPCHN
          2 00013D  CFC7 000E                            STB,B4   PROTYP+4,AUTO
          2 00013F  DFC7 000C                            STB,B5   PROTYP+2,AUTO
          2 000141  BBC7 000C                            LAB,B3   PROTYP+2,AUTO
          2 000143  CBF0 0200                            LAB,B4   512,IMO
          2 000145  E380 0000 0000  xent                 LNJ,B6   KHI$IO_OTP
          2 000148       0001                            DC       s:11998,PREL

      476    11995
      477    11996        /*  IF IONAK BLOW UP AND DIE. */
      478    11997
      479    11998    1   END KZO$ORDERS;

  11998   2 000149  C380 0000 0000  xent                 LNJ,B4   X6A_ARET
      480    11999        %EJECT;
PL6.E3A0      #002=KZO$ORDERS File=KZO$ORDERS.:E05TSI                            WED 07/30/97 02:57 Page:64   
      481    12000        %EOD;

PL6.E3A0      #002=KZO$ORDERS File=KZO$ORDERS.:E05TSI                            WED 07/30/97 02:57 Page:65   
--  Include file information  --

   KV$GLB.:E05TOU  is referenced.
   GH_IOFNC_E.:E05TOU  is referenced.
   KH$IO.:E05TOU  is referenced.
   KH_CLKFNC_E.:E05TOU  is referenced.
   KH$CLK.:E05TOU  is referenced.
   KZ_INIT_C.:E05TOU  is referenced.
   KH$STT.:E05TOU  is referenced.
   KV$BPC.:E05TOU  is referenced.
   KZ$BSCSTT.:E05TOU  is referenced.
   KH$CHN.:E05TOU  is referenced.
   KZ$LINCTX.:E05TOU  is referenced.
   KZ_MLCP_C.:E05TOU  is referenced.
   KZ_CLM_E.:E05TOU  is referenced.
   K_ID_E.:E05TOU  is referenced.
   KL_AFCN_C.:E05TOU  is referenced.
   KL_MACRO_C.:E05TOU  is referenced.
   G_LCP6_E.:E05TOU  is referenced.
   GT_LCP6_M.:E05TOU  is referenced.
   KI_CP6.:E05TOU  is referenced.
   GF_LCP6_M.:E05TOU  is referenced.
   GM_LCP6_M.:E05TOU  is referenced.
   GU_LCP6_M.:E05TOU  is referenced.
   GJ_LCP6_M.:E05TOU  is referenced.
   GH_LCP6_M.:E05TOU  is referenced.
   LCP_6.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure KZO$ORDERS.
PL6.E3A0      #002=KZO$ORDERS File=KZO$ORDERS.:E05TSI                            WED 07/30/97 02:57 Page:66   

 **** Variables and constants ****

  ****  Section 000  Data  KZO$ORDERS

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     4-0-0/w STRC(80)    r     1 KH_IOLD                    0-0-0/w STRC(32)    r     1 KH_OTPCHN
     2-0-0/w STRC(32)    r     1 KH_OTPLCT                  9-0-0/w STRC(176)   r     1 KH_SETCLK
    14-0-0/w CHAR(6)     r     1 USELESS_BUFFER

  ****  Section 001 RoData KZO$ORDERS

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/b BIT         r     1 DATA_BITMAP(0:19)

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     6-0-0/w PTR         r     1 @KZ@LINCTX                 4-0-0/w PTR         r     1 @ORDER
    *0-0-0/w STRC(2192)  r     1 KZ@LINCTX                 *0-0-0/w UBIN(16)    r     1 ORDER
     A-0-0/w UBIN(16)    r     1 PROTYP                     8-0-0/w PTR         r     1 STT$

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 KZ_HDR$(0:0)

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
PL6.E3A0      #002=KZO$ORDERS File=KZO$ORDERS.:E05TSI                            WED 07/30/97 02:57 Page:67   
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(512)   r     1 KH$CHN                     0-0-0/w STRC(2080)  r     1 KZ$BSCSTT
     0-0-0/w STRC(272)   r     1 KZ$HDR


   Procedure KZO$ORDERS requires 332 words for executable code.
   Procedure KZO$ORDERS requires 16 words of local(AUTO) storage.
PL6.E3A0      #002=KZO$ORDERS File=KZO$ORDERS.:E05TSI                            WED 07/30/97 02:57 Page:68   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #002=KZO$ORDERS File=KZO$ORDERS.:E05TSI                            WED 07/30/97 02:57 Page:69   
          MINI XREF LISTING

DATA_BITMAP
     11453**DCL     11877>>IF
KH$CHN
     10900**DCL     11895<>CALL    11901<>CALL    11913<>CALL    11934<>CALL    11947<>CALL    11994<>CALL
KH$CHN.TERMID.TERM
     10996**DCL     11005--REDEF
KHC$CLOCK
     10447**DCL-ENT 11974--CALL
KHI$IOLD
     10444**DCL-ENT 11934--CALL    11947--CALL
KHI$IO_OTP
     10445**DCL-ENT 11895--CALL    11901--CALL    11994--CALL
KHI$IO_OTPLCTBYT
     10446**DCL-ENT 11913--CALL
KH_IOLD
     11259**DCL     11934<>CALL    11947<>CALL
KH_IOLD.BFR_.ADR$
     11292**DCL     11927<<ASSIGN  11931<<ASSIGN  11945<<ASSIGN
KH_IOLD.BFR_.BYTSIZ
     11292**DCL     11928<<ASSIGN  11932<<ASSIGN  11946<<ASSIGN
KH_IOLD.CCBCTR
     11266**DCL     11924<<ASSIGN
KH_IOLD.CCBCTR.VLDCCB
     11266**DCL     11925<<ASSIGN  11943<<ASSIGN
KH_IOLD.OTPCHN
     11267**DCL     11923<<ASSIGN  11944<<ASSIGN
KH_OTPCHN
     11024**DCL     11895<>CALL    11901<>CALL    11994<>CALL
KH_OTPCHN.CHNCTR
     11057**DCL     11893<<ASSIGN  11992<<ASSIGN
KH_OTPCHN.CHNCTR.CCBLSTRST
     11059**DCL     11894<<ASSIGN  11900<<ASSIGN
PL6.E3A0      #002=KZO$ORDERS File=KZO$ORDERS.:E05TSI                            WED 07/30/97 02:57 Page:70   
KH_OTPCHN.CHNCTR.STRIO
     11057**DCL     11993<<ASSIGN
KH_OTPCHN.OTPCHN
     11030**DCL     11892<<ASSIGN  11899<<ASSIGN  11991<<ASSIGN
KH_OTPLCT
     11141**DCL     11913<>CALL
KH_OTPLCT.LCTBYT.ADR
     11157**DCL     11912<<ASSIGN
KH_OTPLCT.LCTBYT.DAT
     11157**DCL     11911<<ASSIGN
KH_SETCLK
     11315**DCL     11974<>CALL
KH_SETCLK.CTBCTX$
     11321**DCL     11971<<ASSIGN  11976>>ASSIGN
KH_SETCLK.PRD
     11436**DCL     11970<<ASSIGN
KH_SETCLK.SBR$
     11432**DCL     11973<<ASSIGN
KH_SETCLK.UID
     11331**DCL     11332--REDEF   11333--REDEF
KH_SETCLK.UID$
     11332**DCL     11972<<ASSIGN
KZ$BSCSTT.BLKOUT
     11808**DCL     11881<<ASSIGN  11881>>ASSIGN
KZ$BSCSTT.CHROUT
     11804**DCL     11882<<ASSIGN  11882>>ASSIGN
KZ$BSCSTT.REQSTATS.DSPMSK
     11729**DCL     11735--REDEF
KZ$BSCSTT.REQSTATS.SLCMSK
     11770**DCL     11777--REDEF
KZ$HDR.STTBFR$
     11860**DCL     11879>>ASSIGN
KZ@LINCTX
     10464**DCL        21--PROC    11972--ASSIGN
KZ@LINCTX.CHN$
     10467**DCL     11895>>CALL    11901>>CALL    11913>>CALL    11934>>CALL    11947>>CALL    11994>>CALL
PL6.E3A0      #002=KZO$ORDERS File=KZO$ORDERS.:E05TSI                            WED 07/30/97 02:57 Page:71   
KZ@LINCTX.CHROUT
     10845**DCL     11884<<ASSIGN  11884>>ASSIGN
KZ@LINCTX.CTB.PRM$
     10553**DCL     11976<<ASSIGN
KZ@LINCTX.FLAGS.DFRINP
     10581**DCL     11870<<ASSIGN
KZ@LINCTX.FLAGS.DSC
     10572**DCL     11956>>IF
KZ@LINCTX.FLAGS.SETCLK
     10606**DCL     11956>>IF
KZ@LINCTX.HIST.ORD
     10520**DCL     11869<<ASSIGN
KZ@LINCTX.HIST.X
     10512**DCL     11869>>ASSIGN
KZ@LINCTX.INPBFR$
     10770**DCL     11926>>IF      11927>>ASSIGN
KZ@LINCTX.INPBFRSIZ
     10772**DCL     11928>>ASSIGN
KZ@LINCTX.LINID.TERM
     10487**DCL     10496--REDEF
KZ@LINCTX.OTPBFR$
     10776**DCL     11945>>ASSIGN
KZ@LINCTX.OTPCNT
     10752**DCL     10755--REDEF
KZ@LINCTX.OTPDATSIZ
     10780**DCL     11882>>ASSIGN  11884>>ASSIGN  11946>>ASSIGN
KZ@LINCTX.POLSIZ
     10798**DCL     10800--REDEF
KZ@LINCTX.PRMCTBTYP
     10500**DCL     11977<<ASSIGN
KZ@LINCTX.PRO.PROTYP
     10648**DCL     11878>>ASSIGN
KZ@LINCTX.PRO.SLAVE
     10703**DCL     11878>>ASSIGN
KZ@LINCTX.RCROUT
     10849**DCL     11885<<ASSIGN  11885>>ASSIGN
PL6.E3A0      #002=KZO$ORDERS File=KZO$ORDERS.:E05TSI                            WED 07/30/97 02:57 Page:72   
KZC$OTPCLK
     10448**DCL-ENT 11973--ASSIGN
KZ_HDR$
     11460**DCL     11879>>ASSIGN
ORDER
     11451**DCL        21--PROC    11869>>ASSIGN  11877>>IF      11911>>ASSIGN
PROTYP
     11458**DCL     11878<<ASSIGN  11879>>ASSIGN
STT$
     11457**DCL     11480--IMP-PTR 11879<<ASSIGN  11880>>IF      11881>>ASSIGN  11881>>ASSIGN  11882>>ASSIGN
     11882>>ASSIGN
USELESS_BUFFER
     11452**DCL     11931--ASSIGN

PL6.E3A0      #003=KZO$ABORT File=KZO$ORDERS.:E05TSI                             WED 07/30/97 02:58 Page:73   
      482        1        /*T***********************************************************/
      483        2        /*T*                                                         */
      484        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      485        4        /*T*                                                         */
      486        5        /*T***********************************************************/
      487        6        /*X* PLM=6,IND=3,CTI=3,DCI=3,DTI=0,MCI,MOC,DMC */
      488        7        /*P*     NAME:     KZO$ABORT
      489        8                 PURPOSE:  KZO$ABORT terminates activity on a particular
      490        9                           channel.                                        */
      491       10
      492       11        /*D*     NAME:     KZO$ABORT
      493       12                 DESCRIPTION:
      494       13                           KZO$ABORT is called with only one argument.  The
      495       14                           argument is the line context structure.  KZO$ABORT
      496       15                           executes a "halt I/O in progress" and then sets
      497       16                           the receive CCPs program counter to the "restart"
      498       17                           point.  The receive CCP then waits until the
      499       18                           transmit CCP has turned the receiver on and a
      500       19                           SYN character has been detected.                */
      501       20
      502       21        %EJECT;
PL6.E3A0      #003=KZO$ABORT File=KZO$ORDERS.:E05TSI                             WED 07/30/97 02:58 Page:74   
      503       22        KZO$ABORT: PROC ( KZ@LINCTX );
      504       23
      505       24        %INCLUDE LCP_6;
      506     4303        %INCLUDE KH$CHN;
      507     4425        %INCLUDE KZ_MLCP_C;
      508     4500        %INCLUDE KZ$LINCTX;
      509     5120        %INCLUDE KH_CLKFNC_E;
      510     5165        %INCLUDE KH$CLK;
      511     5535        %INCLUDE KH$IO;
      512     5782        %INCLUDE GH_IOFNC_E;
      513     5851
      514     5852            %KH$CHN;
      515     5976
      516     5977            %KZ$LINCTX     ( NAME = KZ@LINCTX,
      517     5978                             STCLASS = PARAM );
      518     6409
      519     6410            %KH$IO         ( FPTN = KH_OTPCHN,
      520     6411                             FNC = %GH#IO_OTPCHNCTR,
      521     6412                             OTPCHN = NO,
      522     6413                             STCLASS = STATIC );
      523     6527
      524     6528            %KH$IO         ( FPTN = KH_OTPLCT,
      525     6529                             FNC = %GH#IO_OTPLCTBYT,
      526     6530                             STCLASS = STATIC );
      527     6644
      528     6645            %KH$CLK        ( FPTN = KH_CANCELCLK,
      529     6646                             FNC = %KH#CLK_CANCEL,
      530     6647                             STCLASS = STATIC );
      531     6796
      532     6797    1   DCL KZM$MLCP UBIN SYMREF;
      533     6798    1   DCL KZM$RCVRST UBIN SYMREF;
      534     6799    1   DCL KZM$ZERO PTR CONSTANT INIT(ADDR(KZM$MLCP));
      535     6800    1   DCL KZM_ZERO REDEF KZM$ZERO UBIN(32);
      536     6801    1   DCL KZM$RESTART PTR CONSTANT INIT(ADDR(KZM$RCVRST));
      537     6802    1   DCL KZM_RESTART REDEF KZM$RESTART UBIN(32);
      538     6803    1   DCL KZM_RESULT UBIN(32);
      539     6804    1   DCL 1 KZM_RCVRST REDEF KZM_RESULT,
PL6.E3A0      #003=KZO$ABORT File=KZO$ORDERS.:E05TSI                             WED 07/30/97 02:58 Page:75   
      540     6805    1         2 * BIT(16),
      541     6806    1         2 LCT6 UBIN BYTE CALIGNED,
      542     6807    1         2 LCT7 UBIN BYTE CALIGNED;
      543     6808        /*N* THE ABOVE DCLS ARE FULL OF .
      544     6809             THAT IS BECAUSE ELSIE SAYS A SYMDEF'S VALUE IS THE L6 ADDRESS
      545     6810             WHERE THE MLCP CODE IS LOCATED, PLUS AS MANY L6 WORDS AS THE
      546     6811             DISPLACEMENT IN BYTES OF THE SYMDEF INTO THE MLCP.
      547     6812             SOMETHING SHOULD BE DONE SOMETIME I GUESS... */
      548     6813    1   DCL KZ_CCPLODBIS_MLC8 UBIN WORD SYMREF;
      549     6814    1   DCL KZ_CCPLODBIS_MLC16 UBIN WORD SYMREF;
      550     6815
      551     6816    1   DCL KHI$IO_OTP ENTRY(2);
      552     6817    1   DCL KHI$IO_OTPLCTBYT ENTRY(2);
      553     6818    1   DCL KHC$CLOCK ENTRY(1) ALTRET;
      554     6819
      555     6820
      556     6821        /**/
      557     6822    2         IF KZ@LINCTX.CTB.PRM$ ~= ADDR(NIL) THEN DO;
      558     6823    2            KH_CANCELCLK.CTBCTX$ = KZ@LINCTX.CTB.PRM$;
      559     6824    2            KZ@LINCTX.CTB.PRM$ = ADDR(NIL);
      560     6825    2            CALL KHC$CLOCK (KH_CANCELCLK)
      561     6826    3            WHENALTRETURN DO;
      562     6827                     /* SNAP */
      563     6828    3               END;
      564     6829    2            END;
      565     6830    1         KH_OTPCHN.CHNCTR = '0'B;
      566     6831    1         KH_OTPCHN.CHNCTR.STPIO = '1'B;
      567     6832    1         CALL KHI$IO_OTP (KZ@LINCTX.CHN$ -> KH$CHN, KH_OTPCHN);
      568     6833
      569     6834        /*  IF IONAK BLOW UP AND DIE */
      570     6835
      571     6836        /**/
      572     6837        /*
      573     6838            Activity is halted.  Set input CCB program counter (LCTs 6 & 7)
      574     6839            to restart value.
      575     6840        */
      576     6841        /**/
PL6.E3A0      #003=KZO$ABORT File=KZO$ORDERS.:E05TSI                             WED 07/30/97 02:58 Page:76   
      577     6842    1         KZM_RESULT = (KZM_RESTART - KZM_ZERO)*2;
      578     6843    1         IF KZ@LINCTX.CHN$ -> KH$CHN.DVCID = '2978'X THEN
      579     6844    1            KZM_RESULT = KZM_RESULT + KZ_CCPLODBIS_MLC16 - KZ_CCPLODBIS_MLC8;
              6844                     /* MLC-16 (NMLC) */
      580     6845
      581     6846    1         KH_OTPLCT.LCTBYT.DAT = KZM_RCVRST.LCT6;
      582     6847    1         KH_OTPLCT.LCTBYT.ADR = 6;
      583     6848    1         CALL KHI$IO_OTPLCTBYT (KZ@LINCTX.CHN$ -> KH$CHN, KH_OTPLCT);
      584     6849
      585     6850        /*  IF IONAK BLOW UP AND DIE. */
      586     6851
      587     6852    1         KH_OTPLCT.LCTBYT.DAT = KZM_RCVRST.LCT7;
      588     6853    1         KH_OTPLCT.LCTBYT.ADR = 7;
      589     6854    1         CALL KHI$IO_OTPLCTBYT (KZ@LINCTX.CHN$ -> KH$CHN, KH_OTPLCT);
      590     6855
      591     6856        /*  IF IONAK BLOW UP AND DIE. */
      592     6857
      593     6858    1         KH_OTPCHN.OTPCHN = '0'B;
      594     6859    1         KH_OTPCHN.CHNCTR = '0'B;
      595     6860    1         KH_OTPCHN.CHNCTR.STRIO = '1'B;
      596     6861    1         CALL KHI$IO_OTP (KZ@LINCTX.CHN$ -> KH$CHN, KH_OTPCHN);
      597     6862
      598     6863        /*  IF IONAK BLOW UP AND DIE */
      599     6864
      600     6865    1   END KZO$ABORT;
      601     6866        %EOD;

PL6.E3A0      #003=KZO$ABORT File=KZO$ORDERS.:E05TSI                             WED 07/30/97 02:58 Page:77   
--  Include file information  --

   GH_IOFNC_E.:E05TOU  is referenced.
   KH$IO.:E05TOU  is referenced.
   KH$CLK.:E05TOU  is referenced.
   KH_CLKFNC_E.:E05TOU  is referenced.
   KZ$LINCTX.:E05TOU  is referenced.
   KZ_MLCP_C.:E05TOU  is referenced.
   KH$CHN.:E05TOU  is referenced.
   G_LCP6_E.:E05TOU  is referenced.
   GT_LCP6_M.:E05TOU  is referenced.
   KI_CP6.:E05TOU  is referenced.
   GF_LCP6_M.:E05TOU  is referenced.
   GM_LCP6_M.:E05TOU  is referenced.
   GU_LCP6_M.:E05TOU  is referenced.
   GJ_LCP6_M.:E05TOU  is referenced.
   GH_LCP6_M.:E05TOU  is referenced.
   LCP_6.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure KZO$ABORT.

   Procedure KZO$ABORT requires 189 words for executable code.
   Procedure KZO$ABORT requires 12 words of local(AUTO) storage.

PL6.E3A0      #003=KZO$ABORT File=KZO$ORDERS.:E05TSI                             WED 07/30/97 02:58 Page:78   

 Object Unit name= KZO$ABORT                                  File name= KZO$ORDERS.:E05TOU
 UTS= JUL 30 '97 02:58:39.20 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_LCP6_SYSTEM                               Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size HexSiz  Section name
    0   Data  even  none    12      C  KZO$ABORT
    1  RoData even  UTS      4      4  KZO$ABORT
    2   Proc  even  none   189     BD  KZO$ABORT
    3  RoData even  none     2      2  KZO$ABORT

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect HexLoc Primary Altret sequence   type   Parms  Name
     2      0   yes            yes      Std        1  KZO$ABORT

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       1 KHC$CLOCK
         yes           Std       2 KHI$IO_OTP
         yes           Std       2 KHI$IO_OTPLCTBYT
                       nStd      0 X6A_AUTO_1
                       nStd      0 X6A_ARET
PL6.E3A0      #003=KZO$ABORT File=KZO$ORDERS.:E05TSI                             WED 07/30/97 02:58 Page:79   

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     KZM$MLCP                              KZM$RCVRST                            KZ_CCPLODBIS_MLC8
     KZ_CCPLODBIS_MLC16               r    G$ROS$
PL6.E3A0      #003=KZO$ABORT File=KZO$ORDERS.:E05TSI                             WED 07/30/97 02:58 Page:80   


      482        1        /*T***********************************************************/
      483        2        /*T*                                                         */
      484        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      485        4        /*T*                                                         */
      486        5        /*T***********************************************************/
      487        6        /*X* PLM=6,IND=3,CTI=3,DCI=3,DTI=0,MCI,MOC,DMC */
      488        7        /*P*     NAME:     KZO$ABORT
      489        8                 PURPOSE:  KZO$ABORT terminates activity on a particular
      490        9                           channel.                                        */
      491       10
      492       11        /*D*     NAME:     KZO$ABORT
      493       12                 DESCRIPTION:
      494       13                           KZO$ABORT is called with only one argument.  The
      495       14                           argument is the line context structure.  KZO$ABORT
      496       15                           executes a "halt I/O in progress" and then sets
      497       16                           the receive CCPs program counter to the "restart"
      498       17                           point.  The receive CCP then waits until the
      499       18                           transmit CCP has turned the receiver on and a
      500       19                           SYN character has been detected.                */
      501       20
      502       21        %EJECT;
PL6.E3A0      #003=KZO$ABORT File=KZO$ORDERS.:E05TSI                             WED 07/30/97 02:58 Page:81   
      503       22        KZO$ABORT: PROC ( KZ@LINCTX );

     22   2 000000  D380 0000 0000  xent KZO$ABORT       LNJ,B5   X6A_AUTO_1
          2 000003       000C 0001                       DC       12,1

      504       23
      505       24        %INCLUDE LCP_6;
      506     4303        %INCLUDE KH$CHN;
      507     4425        %INCLUDE KZ_MLCP_C;
      508     4500        %INCLUDE KZ$LINCTX;
      509     5120        %INCLUDE KH_CLKFNC_E;
      510     5165        %INCLUDE KH$CLK;
      511     5535        %INCLUDE KH$IO;
      512     5782        %INCLUDE GH_IOFNC_E;
      513     5851
      514     5852            %KH$CHN;
      515     5976
      516     5977            %KZ$LINCTX     ( NAME = KZ@LINCTX,
      517     5978                             STCLASS = PARAM );
      518     6409
      519     6410            %KH$IO         ( FPTN = KH_OTPCHN,
      520     6411                             FNC = %GH#IO_OTPCHNCTR,
      521     6412                             OTPCHN = NO,
      522     6413                             STCLASS = STATIC );
      523     6527
      524     6528            %KH$IO         ( FPTN = KH_OTPLCT,
      525     6529                             FNC = %GH#IO_OTPLCTBYT,
      526     6530                             STCLASS = STATIC );
      527     6644
      528     6645            %KH$CLK        ( FPTN = KH_CANCELCLK,
      529     6646                             FNC = %KH#CLK_CANCEL,
      530     6647                             STCLASS = STATIC );
      531     6796
      532     6797    1   DCL KZM$MLCP UBIN SYMREF;
      533     6798    1   DCL KZM$RCVRST UBIN SYMREF;
      534     6799    1   DCL KZM$ZERO PTR CONSTANT INIT(ADDR(KZM$MLCP));
      535     6800    1   DCL KZM_ZERO REDEF KZM$ZERO UBIN(32);
PL6.E3A0      #003=KZO$ABORT File=KZO$ORDERS.:E05TSI                             WED 07/30/97 02:58 Page:82   
      536     6801    1   DCL KZM$RESTART PTR CONSTANT INIT(ADDR(KZM$RCVRST));
      537     6802    1   DCL KZM_RESTART REDEF KZM$RESTART UBIN(32);
      538     6803    1   DCL KZM_RESULT UBIN(32);
      539     6804    1   DCL 1 KZM_RCVRST REDEF KZM_RESULT,
      540     6805    1         2 * BIT(16),
      541     6806    1         2 LCT6 UBIN BYTE CALIGNED,
      542     6807    1         2 LCT7 UBIN BYTE CALIGNED;
      543     6808        /*N* THE ABOVE DCLS ARE FULL OF .
      544     6809             THAT IS BECAUSE ELSIE SAYS A SYMDEF'S VALUE IS THE L6 ADDRESS
      545     6810             WHERE THE MLCP CODE IS LOCATED, PLUS AS MANY L6 WORDS AS THE
      546     6811             DISPLACEMENT IN BYTES OF THE SYMDEF INTO THE MLCP.
      547     6812             SOMETHING SHOULD BE DONE SOMETIME I GUESS... */
      548     6813    1   DCL KZ_CCPLODBIS_MLC8 UBIN WORD SYMREF;
      549     6814    1   DCL KZ_CCPLODBIS_MLC16 UBIN WORD SYMREF;
      550     6815
      551     6816    1   DCL KHI$IO_OTP ENTRY(2);
      552     6817    1   DCL KHI$IO_OTPLCTBYT ENTRY(2);
      553     6818    1   DCL KHC$CLOCK ENTRY(1) ALTRET;
      554     6819
      555     6820
      556     6821        /**/
      557     6822    2         IF KZ@LINCTX.CTB.PRM$ ~= ADDR(NIL) THEN DO;

   6822   2 000005  ECC7 0004                            LDB,B6   @KZ@LINCTX,AUTO
          2 000007  8DC6 0031                            CMN      49,B6
          2 000009  0901 0016                            BE       s:6830,PREL

      558     6823    2            KH_CANCELCLK.CTBCTX$ = KZ@LINCTX.CTB.PRM$;

   6823   2 00000B  DCC6 0031                            LDB,B5   49,B6
          2 00000D  DF80 0000 0004  00                   STB,B5   KH_CANCELCLK

      559     6824    2            KZ@LINCTX.CTB.PRM$ = ADDR(NIL);

   6824   2 000010  CB80 0000 0000                       LAB,B4   0
          2 000013  CFC6 0031                            STB,B4   49,B6

PL6.E3A0      #003=KZO$ABORT File=KZO$ORDERS.:E05TSI                             WED 07/30/97 02:58 Page:83   
      560     6825    2            CALL KHC$CLOCK (KH_CANCELCLK)

   6825   2 000015  BB80 0000 0000  03                   LAB,B3   0
          2 000018  CBF0 0100                            LAB,B4   256,IMO
          2 00001A  E380 0000 0000  xent                 LNJ,B6   KHC$CLOCK
          2 00001D       0003                            DC       s:6830,PREL
          2 00001E  0F81 0001                            B        s:6830,PREL

      561     6826    3            WHENALTRETURN DO;

      562     6827                     /* SNAP */
      563     6828    3               END;

      564     6829    2            END;

      565     6830    1         KH_OTPCHN.CHNCTR = '0'B;

   6830   2 000020  8700 0000 0001  00                   CL       KH_OTPCHN+1

      566     6831    1         KH_OTPCHN.CHNCTR.STPIO = '1'B;

   6831   2 000023  8900 0000 0001  00                   LBT,'2000'X       KH_OTPCHN+1
   6831   2 000026       2000

      567     6832    1         CALL KHI$IO_OTP (KZ@LINCTX.CHN$ -> KH$CHN, KH_OTPCHN);

   6832   2 000027  ECC7 0004                            LDB,B6   @KZ@LINCTX,AUTO
          2 000029  DCC6 0002                            LDB,B5   2,B6
          2 00002B  CB80 0000 0000  00                   LAB,B4   KH_OTPCHN
          2 00002E  CFC7 000A                            STB,B4   KZM_RESULT+4,AUTO
          2 000030  DFC7 0008                            STB,B5   KZM_RESULT+2,AUTO
          2 000032  BBC7 0008                            LAB,B3   KZM_RESULT+2,AUTO
          2 000034  CBF0 0200                            LAB,B4   512,IMO
          2 000036  E380 0000 0000  xent                 LNJ,B6   KHI$IO_OTP
          2 000039       0001                            DC       s:6842,PREL

      568     6833
PL6.E3A0      #003=KZO$ABORT File=KZO$ORDERS.:E05TSI                             WED 07/30/97 02:58 Page:84   
      569     6834        /*  IF IONAK BLOW UP AND DIE */
      570     6835
      571     6836        /**/
      572     6837        /*
      573     6838            Activity is halted.  Set input CCB program counter (LCTs 6 & 7)
      574     6839            to restart value.
      575     6840        */
      576     6841        /**/
      577     6842    1         KZM_RESULT = (KZM_RESTART - KZM_ZERO)*2;

   6842   2 00003A  8C80 0000 0002  01                   LDI      KZM$RESTART
          2 00003D  8480 0000 0000  01                   SID      KZM$ZERO
          2 000040  7081                                 DOL,R7   1
          2 000041  8D47 0006                            SDI      KZM_RESULT,AUTO

      578     6843    1         IF KZ@LINCTX.CHN$ -> KH$CHN.DVCID = '2978'X THEN

   6843   2 000043  ECC7 0004                            LDB,B6   @KZ@LINCTX,AUTO
          2 000045  DCC6 0002                            LDB,B5   2,B6
          2 000047  D845 0002                            LDR,R5   2,B5
          2 000049  D970 2978                            CMR,R5   10616,IMO
          2 00004B  0981 0016                            BNE      s:6846,PREL

      579     6844    1            KZM_RESULT = KZM_RESULT + KZ_CCPLODBIS_MLC16 - KZ_CCPLODBIS_MLC8;
              6844                     /* MLC-16 (NMLC) */

   6844   2 00004D  F800 0000 0000  xsym                 LDR,R7   KZ_CCPLODBIS_MLC16
          2 000050  6C00                                 LDV,R6   0
          2 000051  8447 0006                            AID      KZM_RESULT,AUTO
          2 000053  8D47 0008                            SDI      KZM_RESULT+2,AUTO
          2 000055  F800 0000 0000  xsym                 LDR,R7   KZ_CCPLODBIS_MLC8
          2 000058  6C00                                 LDV,R6   0
          2 000059  84C7 0008                            SID      KZM_RESULT+2,AUTO
          2 00005B  8656                                 CPL      R6
          2 00005C  8657                                 CPL      R7
          2 00005D  8470 0000 0001                       AID      1,IMO
          2 000060  8D47 0006                            SDI      KZM_RESULT,AUTO
PL6.E3A0      #003=KZO$ABORT File=KZO$ORDERS.:E05TSI                             WED 07/30/97 02:58 Page:85   

      580     6845
      581     6846    1         KH_OTPLCT.LCTBYT.DAT = KZM_RCVRST.LCT6;

   6846   2 000062  D2C7 0007                            LLH,R5   KZM_RESULT+1,AUTO
          2 000064  D780 0000 0003  00                   STH,R5   KH_OTPLCT+1

      582     6847    1         KH_OTPLCT.LCTBYT.ADR = 6;

   6847   2 000067  4C06                                 LDV,R4   6
          2 000068  CA80 0000 0003  00                   SRM,R4,'00FF'X    KH_OTPLCT+1
          2 00006B       00FF

      583     6848    1         CALL KHI$IO_OTPLCTBYT (KZ@LINCTX.CHN$ -> KH$CHN, KH_OTPLCT);

   6848   2 00006C  DCC6 0002                            LDB,B5   2,B6
          2 00006E  CB80 0000 0002  00                   LAB,B4   KH_OTPLCT
          2 000071  CFC7 000A                            STB,B4   KZM_RESULT+4,AUTO
          2 000073  DFC7 0008                            STB,B5   KZM_RESULT+2,AUTO
          2 000075  BBC7 0008                            LAB,B3   KZM_RESULT+2,AUTO
          2 000077  CBF0 0200                            LAB,B4   512,IMO
          2 000079  E380 0000 0000  xent                 LNJ,B6   KHI$IO_OTPLCTBYT
          2 00007C       0001                            DC       s:6852,PREL

      584     6849
      585     6850        /*  IF IONAK BLOW UP AND DIE. */
      586     6851
      587     6852    1         KH_OTPLCT.LCTBYT.DAT = KZM_RCVRST.LCT7;

   6852   2 00007D  E847 0007                            LDR,R6   KZM_RESULT+1,AUTO
          2 00007F  E570 00FF                            AND,R6   255,IMO
          2 000081  E780 0000 0003  00                   STH,R6   KH_OTPLCT+1

      588     6853    1         KH_OTPLCT.LCTBYT.ADR = 7;

   6853   2 000084  5C07                                 LDV,R5   7
          2 000085  DA80 0000 0003  00                   SRM,R5,'00FF'X    KH_OTPLCT+1
PL6.E3A0      #003=KZO$ABORT File=KZO$ORDERS.:E05TSI                             WED 07/30/97 02:58 Page:86   
          2 000088       00FF

      589     6854    1         CALL KHI$IO_OTPLCTBYT (KZ@LINCTX.CHN$ -> KH$CHN, KH_OTPLCT);

   6854   2 000089  ECC7 0004                            LDB,B6   @KZ@LINCTX,AUTO
          2 00008B  DCC6 0002                            LDB,B5   2,B6
          2 00008D  CB80 0000 0002  00                   LAB,B4   KH_OTPLCT
          2 000090  CFC7 000A                            STB,B4   KZM_RESULT+4,AUTO
          2 000092  DFC7 0008                            STB,B5   KZM_RESULT+2,AUTO
          2 000094  BBC7 0008                            LAB,B3   KZM_RESULT+2,AUTO
          2 000096  CBF0 0200                            LAB,B4   512,IMO
          2 000098  E380 0000 0000  xent                 LNJ,B6   KHI$IO_OTPLCTBYT
          2 00009B       0001                            DC       s:6858,PREL

      590     6855
      591     6856        /*  IF IONAK BLOW UP AND DIE. */
      592     6857
      593     6858    1         KH_OTPCHN.OTPCHN = '0'B;

   6858   2 00009C  8800 0000 0000  00                   LBF,'0040'X       KH_OTPCHN
   6858   2 00009F       0040

      594     6859    1         KH_OTPCHN.CHNCTR = '0'B;

   6859   2 0000A0  8700 0000 0001  00                   CL       KH_OTPCHN+1

      595     6860    1         KH_OTPCHN.CHNCTR.STRIO = '1'B;

   6860   2 0000A3  8900 0000 0001  00                   LBT,'4000'X       KH_OTPCHN+1
   6860   2 0000A6       4000

      596     6861    1         CALL KHI$IO_OTP (KZ@LINCTX.CHN$ -> KH$CHN, KH_OTPCHN);

   6861   2 0000A7  ECC7 0004                            LDB,B6   @KZ@LINCTX,AUTO
          2 0000A9  DCC6 0002                            LDB,B5   2,B6
          2 0000AB  CB80 0000 0000  00                   LAB,B4   KH_OTPCHN
          2 0000AE  CFC7 000A                            STB,B4   KZM_RESULT+4,AUTO
PL6.E3A0      #003=KZO$ABORT File=KZO$ORDERS.:E05TSI                             WED 07/30/97 02:58 Page:87   
          2 0000B0  DFC7 0008                            STB,B5   KZM_RESULT+2,AUTO
          2 0000B2  BBC7 0008                            LAB,B3   KZM_RESULT+2,AUTO
          2 0000B4  CBF0 0200                            LAB,B4   512,IMO
          2 0000B6  E380 0000 0000  xent                 LNJ,B6   KHI$IO_OTP
          2 0000B9       0001                            DC       s:6865,PREL

      597     6862
      598     6863        /*  IF IONAK BLOW UP AND DIE */
      599     6864
      600     6865    1   END KZO$ABORT;

   6865   2 0000BA  C380 0000 0000  xent                 LNJ,B4   X6A_ARET
      601     6866        %EOD;

PL6.E3A0      #003=KZO$ABORT File=KZO$ORDERS.:E05TSI                             WED 07/30/97 02:58 Page:88   
--  Include file information  --

   GH_IOFNC_E.:E05TOU  is referenced.
   KH$IO.:E05TOU  is referenced.
   KH$CLK.:E05TOU  is referenced.
   KH_CLKFNC_E.:E05TOU  is referenced.
   KZ$LINCTX.:E05TOU  is referenced.
   KZ_MLCP_C.:E05TOU  is referenced.
   KH$CHN.:E05TOU  is referenced.
   G_LCP6_E.:E05TOU  is referenced.
   GT_LCP6_M.:E05TOU  is referenced.
   KI_CP6.:E05TOU  is referenced.
   GF_LCP6_M.:E05TOU  is referenced.
   GM_LCP6_M.:E05TOU  is referenced.
   GU_LCP6_M.:E05TOU  is referenced.
   GJ_LCP6_M.:E05TOU  is referenced.
   GH_LCP6_M.:E05TOU  is referenced.
   LCP_6.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure KZO$ABORT.
PL6.E3A0      #003=KZO$ABORT File=KZO$ORDERS.:E05TSI                             WED 07/30/97 02:58 Page:89   

 **** Variables and constants ****

  ****  Section 000  Data  KZO$ABORT

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     4-0-0/w STRC(128)   r     1 KH_CANCELCLK               0-0-0/w STRC(32)    r     1 KH_OTPCHN
     2-0-0/w STRC(32)    r     1 KH_OTPLCT

  ****  Section 001 RoData KZO$ABORT

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     2-0-0/w PTR         r     1 KZM$RESTART                0-0-0/w PTR         r     1 KZM$ZERO
     2-0-0/w UBIN(32)    r     1 KZM_RESTART                0-0-0/w UBIN(32)    r     1 KZM_ZERO

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     4-0-0/w PTR         r     1 @KZ@LINCTX                *0-0-0/w STRC(2192)  r     1 KZ@LINCTX
     6-0-0/w STRC(32)    r     1 KZM_RCVRST                 6-0-0/w UBIN(32)    r     1 KZM_RESULT

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w UBIN(16)    r     1 KZM$MLCP                   0-0-0/w UBIN(16)    r     1 KZM$RCVRST
     0-0-0/w UBIN(16)    r     1 KZ_CCPLODBIS_MLC16         0-0-0/w UBIN(16)    r     1 KZ_CCPLODBIS_MLC8

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
PL6.E3A0      #003=KZO$ABORT File=KZO$ORDERS.:E05TSI                             WED 07/30/97 02:58 Page:90   
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(512)   r     1 KH$CHN


   Procedure KZO$ABORT requires 189 words for executable code.
   Procedure KZO$ABORT requires 12 words of local(AUTO) storage.
PL6.E3A0      #003=KZO$ABORT File=KZO$ORDERS.:E05TSI                             WED 07/30/97 02:58 Page:91   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #003=KZO$ABORT File=KZO$ORDERS.:E05TSI                             WED 07/30/97 02:58 Page:92   
          MINI XREF LISTING

KH$CHN
      5867**DCL      6832<>CALL     6848<>CALL     6854<>CALL     6861<>CALL
KH$CHN.DVCID
      5893**DCL      6843>>IF
KH$CHN.TERMID.TERM
      5963**DCL      5972--REDEF
KHC$CLOCK
      6818**DCL-ENT  6825--CALL
KHI$IO_OTP
      6816**DCL-ENT  6832--CALL     6861--CALL
KHI$IO_OTPLCTBYT
      6817**DCL-ENT  6848--CALL     6854--CALL
KH_CANCELCLK
      6661**DCL      6825<>CALL
KH_CANCELCLK.CTBCTX$
      6667**DCL      6823<<ASSIGN
KH_CANCELCLK.UID
      6677**DCL      6678--REDEF    6679--REDEF
KH_OTPCHN
      6425**DCL      6832<>CALL     6861<>CALL
KH_OTPCHN.CHNCTR
      6458**DCL      6830<<ASSIGN   6859<<ASSIGN
KH_OTPCHN.CHNCTR.STPIO
      6459**DCL      6831<<ASSIGN
KH_OTPCHN.CHNCTR.STRIO
      6458**DCL      6860<<ASSIGN
KH_OTPCHN.OTPCHN
      6431**DCL      6858<<ASSIGN
KH_OTPLCT
      6542**DCL      6848<>CALL     6854<>CALL
KH_OTPLCT.LCTBYT.ADR
      6558**DCL      6847<<ASSIGN   6853<<ASSIGN
PL6.E3A0      #003=KZO$ABORT File=KZO$ORDERS.:E05TSI                             WED 07/30/97 02:58 Page:93   
KH_OTPLCT.LCTBYT.DAT
      6558**DCL      6846<<ASSIGN   6852<<ASSIGN
KZ@LINCTX
      5989**DCL        22--PROC
KZ@LINCTX.CHN$
      5992**DCL      6832>>CALL     6843>>IF       6848>>CALL     6854>>CALL     6861>>CALL
KZ@LINCTX.CTB.PRM$
      6078**DCL      6822>>IF       6823>>ASSIGN   6824<<ASSIGN
KZ@LINCTX.LINID.TERM
      6012**DCL      6021--REDEF
KZ@LINCTX.OTPCNT
      6277**DCL      6280--REDEF
KZ@LINCTX.POLSIZ
      6323**DCL      6325--REDEF
KZM$MLCP
      6797**DCL      6799--DCLINIT
KZM$RCVRST
      6798**DCL      6801--DCLINIT
KZM$RESTART
      6801**DCL      6802--REDEF
KZM$ZERO
      6799**DCL      6800--REDEF
KZM_RCVRST.LCT6
      6806**DCL      6846>>ASSIGN
KZM_RCVRST.LCT7
      6807**DCL      6852>>ASSIGN
KZM_RESTART
      6802**DCL      6842>>ASSIGN
KZM_RESULT
      6803**DCL      6804--REDEF    6842<<ASSIGN   6844<<ASSIGN   6844>>ASSIGN
KZM_ZERO
      6800**DCL      6842>>ASSIGN
KZ_CCPLODBIS_MLC16
      6814**DCL      6844>>ASSIGN
KZ_CCPLODBIS_MLC8
      6813**DCL      6844>>ASSIGN

PL6.E3A0      #004=KZO$TIMOUT File=KZO$ORDERS.:E05TSI                            WED 07/30/97 02:59 Page:94   
      602        1        /*T***********************************************************/
      603        2        /*T*                                                         */
      604        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      605        4        /*T*                                                         */
      606        5        /*T***********************************************************/
      607        6        /*X* PLM=6,IND=3,CTI=3,DCI=3,DTI=0,MCI,MOC,DMC */
      608        7        /*P*     NAME:     KZO$TIMOUT
      609        8                 PURPOSE:  Handle clock time-out
      610        9        */
      611       10
      612       11        %EJECT;
PL6.E3A0      #004=KZO$TIMOUT File=KZO$ORDERS.:E05TSI                            WED 07/30/97 02:59 Page:95   
      613       12
      614       13        KZO$TIMOUT: PROC ( KZ@LINCTX, CTB$ );
      615       14
      616       15        %INCLUDE LCP_6;
      617     4294        %INCLUDE KL_MACRO_C;
      618     7646        %INCLUDE CP_6_SUBS;
      619     8186        %INCLUDE KZ_PERR_C;
      620     8268        %INCLUDE KH$CHN;
      621     8390        %INCLUDE KZ$LINCTX;
      622     9010        %INCLUDE KZ_CLM_E;
      623     9182        %INCLUDE KZ_CLMEVT_C;
      624     9224        %INCLUDE KH$IO;
      625     9471        %INCLUDE GH_IOFNC_E;
      626     9540
      627     9541
      628     9542            %KH$CHN;
      629     9666
      630     9667            %KZ$LINCTX      ( NAME = KZ@LINCTX,
      631     9668                               STCLASS = PARAM );
      632    10099
      633    10100            %KH$IO          ( FPTN = KH_INPDAT,
      634    10101                              FNC = %GH#IO_INPDATSETSTT,
      635    10102                              OTPCHN = NO,
      636    10103                              STCLASS = STATIC);
      637    10217
      638    10218            %FPT_WRSYSLOG  ( FPTN = TIMEOUT_ERROR,
      639    10219                             FCG = 'KZ',
      640    10220                             MID = 'O',
      641    10221                             ERR = %E$DSRDRP,
      642    10222                             SEV = %G_WRSYSLOG_SEV_M$XXX# );
      643    10317
      644    10318    1   DCL CTB$ PTR;
      645    10319    1   DCL EVENT UBIN;
      646    10320
      647    10321    1   DCL KHI$IO_INP ENTRY(2);
      648    10322    1   DCL KZO$ABORT ENTRY(1);
      649    10323    1   DCL KZP$DRIVER ENTRY(3);
PL6.E3A0      #004=KZO$TIMOUT File=KZO$ORDERS.:E05TSI                            WED 07/30/97 02:59 Page:96   
      650    10324    1   DCL KHA$ERRLOG ENTRY(2) ALTRET;
      651    10325
      652    10326
      653    10327    1         IF KZ@LINCTX.CTB.PRM$ ~= CTB$ THEN
      654    10328    1            RETURN;                      /* Already went thru KZP              */
      655    10329
      656    10330    1         KZ@LINCTX.CTB.PRM$ = ADDR(NIL);
      657    10331
      658    10332    1         KH_INPDAT.SNCSTT = '0'B;
      659    10333    1         CALL KHI$IO_INP (KZ@LINCTX.CHN$ -> KH$CHN, KH_INPDAT);
      660    10334    2         IF NOT KH_INPDAT.SNCSTT.DSR THEN DO;
      661    10335    2            TIMEOUT_ERROR.V.TERMID = KZ@LINCTX.LINID;
      662    10336    2            CALL KHA$ERRLOG (TIMEOUT_ERROR)
      663    10337    3            WHENALTRETURN DO;
      664    10338    3               END;
      665    10339    2            END;
      666    10340    1         ELSE
      667    10341    1            EVENT = %KZ#LIN_EVENT_TIMOUT;
      668    10342
      669    10343    1         CALL KZO$ABORT ( KZ@LINCTX );
      670    10344
      671    10345    1         CALL KZP$DRIVER ( KZ@LINCTX, EVENT );
      672    10346
      673    10347    1         RETURN;
      674    10348
      675    10349    1   END KZO$TIMOUT;

PL6.E3A0      #004=KZO$TIMOUT File=KZO$ORDERS.:E05TSI                            WED 07/30/97 02:59 Page:97   
--  Include file information  --

   GH_IOFNC_E.:E05TOU  is referenced.
   KH$IO.:E05TOU  is referenced.
   KZ_CLMEVT_C.:E05TOU  is referenced.
   KZ_CLM_E.:E05TOU  is referenced.
   KZ$LINCTX.:E05TOU  is referenced.
   KH$CHN.:E05TOU  is referenced.
   KZ_PERR_C.:E05TOU  is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   KL_MACRO_C.:E05TOU  is referenced.
   G_LCP6_E.:E05TOU  is referenced.
   GT_LCP6_M.:E05TOU  is referenced.
   KI_CP6.:E05TOU  is referenced.
   GF_LCP6_M.:E05TOU  is referenced.
   GM_LCP6_M.:E05TOU  is referenced.
   GU_LCP6_M.:E05TOU  is referenced.
   GJ_LCP6_M.:E05TOU  is referenced.
   GH_LCP6_M.:E05TOU  is referenced.
   LCP_6.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure KZO$TIMOUT.

   Procedure KZO$TIMOUT requires 99 words for executable code.
   Procedure KZO$TIMOUT requires 14 words of local(AUTO) storage.

    No errors detected in file KZO$ORDERS.:E05TSI    .

PL6.E3A0      #004=KZO$TIMOUT File=KZO$ORDERS.:E05TSI                            WED 07/30/97 02:59 Page:98   

 Object Unit name= KZO$TIMOUT                                 File name= KZO$ORDERS.:E05TOU
 UTS= JUL 30 '97 02:59:13.16 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_LCP6_SYSTEM                               Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size HexSiz  Section name
    0   Data  even  none    23     17  KZO$TIMOUT
    1   Proc  even  none    99     63  KZO$TIMOUT
    2  RoData even  none     2      2  KZO$TIMOUT

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect HexLoc Primary Altret sequence   type   Parms  Name
     1      0   yes            yes      Std        2  KZO$TIMOUT

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       2 KHI$IO_INP
         yes           Std       3 KZP$DRIVER
 yes     yes           Std       2 KHA$ERRLOG
         yes           Std       1 KZO$ABORT
                       nStd      0 X6A_AUTO_2
                       nStd      0 X6A_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
r    G$ROS$
PL6.E3A0      #004=KZO$TIMOUT File=KZO$ORDERS.:E05TSI                            WED 07/30/97 02:59 Page:99   


      602        1        /*T***********************************************************/
      603        2        /*T*                                                         */
      604        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      605        4        /*T*                                                         */
      606        5        /*T***********************************************************/
      607        6        /*X* PLM=6,IND=3,CTI=3,DCI=3,DTI=0,MCI,MOC,DMC */
      608        7        /*P*     NAME:     KZO$TIMOUT
      609        8                 PURPOSE:  Handle clock time-out
      610        9        */
      611       10
      612       11        %EJECT;
PL6.E3A0      #004=KZO$TIMOUT File=KZO$ORDERS.:E05TSI                            WED 07/30/97 02:59 Page:100  
      613       12
      614       13        KZO$TIMOUT: PROC ( KZ@LINCTX, CTB$ );

     13   1 000000  D380 0000 0000  xent KZO$TIMOUT      LNJ,B5   X6A_AUTO_2
          1 000003       000E 0002                       DC       14,2

      615       14
      616       15        %INCLUDE LCP_6;
      617     4294        %INCLUDE KL_MACRO_C;
      618     7646        %INCLUDE CP_6_SUBS;
      619     8186        %INCLUDE KZ_PERR_C;
      620     8268        %INCLUDE KH$CHN;
      621     8390        %INCLUDE KZ$LINCTX;
      622     9010        %INCLUDE KZ_CLM_E;
      623     9182        %INCLUDE KZ_CLMEVT_C;
      624     9224        %INCLUDE KH$IO;
      625     9471        %INCLUDE GH_IOFNC_E;
      626     9540
      627     9541
      628     9542            %KH$CHN;
      629     9666
      630     9667            %KZ$LINCTX      ( NAME = KZ@LINCTX,
      631     9668                               STCLASS = PARAM );
      632    10099
      633    10100            %KH$IO          ( FPTN = KH_INPDAT,
      634    10101                              FNC = %GH#IO_INPDATSETSTT,
      635    10102                              OTPCHN = NO,
      636    10103                              STCLASS = STATIC);
      637    10217
      638    10218            %FPT_WRSYSLOG  ( FPTN = TIMEOUT_ERROR,
      639    10219                             FCG = 'KZ',
      640    10220                             MID = 'O',
      641    10221                             ERR = %E$DSRDRP,
      642    10222                             SEV = %G_WRSYSLOG_SEV_M$XXX# );
      643    10317
      644    10318    1   DCL CTB$ PTR;
      645    10319    1   DCL EVENT UBIN;
PL6.E3A0      #004=KZO$TIMOUT File=KZO$ORDERS.:E05TSI                            WED 07/30/97 02:59 Page:101  
      646    10320
      647    10321    1   DCL KHI$IO_INP ENTRY(2);
      648    10322    1   DCL KZO$ABORT ENTRY(1);
      649    10323    1   DCL KZP$DRIVER ENTRY(3);
      650    10324    1   DCL KHA$ERRLOG ENTRY(2) ALTRET;
      651    10325
      652    10326
      653    10327    1         IF KZ@LINCTX.CTB.PRM$ ~= CTB$ THEN

  10327   1 000005  ECC7 0004                            LDB,B6   @KZ@LINCTX,AUTO
          1 000007  DCC6 0031                            LDB,B5   49,B6
          1 000009  CCC7 0006                            LDB,B4   @CTB$,AUTO
          1 00000B  DD84                                 CMB,B5   ,B4
          1 00000C  0901 0004                            BE       s:10330,PREL

      654    10328    1            RETURN;                      /* Already went thru KZP              */

  10328   1 00000E  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

      655    10329
      656    10330    1         KZ@LINCTX.CTB.PRM$ = ADDR(NIL);

  10330   1 000011  BB80 0000 0000                       LAB,B3   0
          1 000014  BFC6 0031                            STB,B3   49,B6

      657    10331
      658    10332    1         KH_INPDAT.SNCSTT = '0'B;

  10332   1 000016  8700 0000 0001  00                   CL       KH_INPDAT+1

      659    10333    1         CALL KHI$IO_INP (KZ@LINCTX.CHN$ -> KH$CHN, KH_INPDAT);

  10333   1 000019  DCC6 0002                            LDB,B5   2,B6
          1 00001B  AB80 0000 0000  00                   LAB,B2   KH_INPDAT
          1 00001E  AFC7 000C                            STB,B2   EVENT+4,AUTO
          1 000020  DFC7 000A                            STB,B5   EVENT+2,AUTO
          1 000022  BBC7 000A                            LAB,B3   EVENT+2,AUTO
PL6.E3A0      #004=KZO$TIMOUT File=KZO$ORDERS.:E05TSI                            WED 07/30/97 02:59 Page:102  
          1 000024  CBF0 0200                            LAB,B4   512,IMO
          1 000026  E380 0000 0000  xent                 LNJ,B6   KHI$IO_INP
          1 000029       0001                            DC       s:10334,PREL

      660    10334    2         IF NOT KH_INPDAT.SNCSTT.DSR THEN DO;

  10334   1 00002A  8980 0000 0001  00                   CMZ      KH_INPDAT+1
          1 00002D  0801 0017                            BAL      s:10341,PREL

      661    10335    2            TIMEOUT_ERROR.V.TERMID = KZ@LINCTX.LINID;

  10335   1 00002F  ACC7 0004                            LDB,B2   @KZ@LINCTX,AUTO
          1 000031  2C08                                 LDV,R2   8
          1 000032  6C10                                 LDV,R6   16
          1 000033  BB80 0000 0000  00                   LAB,B3   KH_INPDAT
          1 000036  3C14                                 LDV,R3   20
          1 000037  0008                                 MMM

      662    10336    2            CALL KHA$ERRLOG (TIMEOUT_ERROR)

  10336   1 000038  BB80 0000 0000  02                   LAB,B3   0
          1 00003B  CBF0 0100                            LAB,B4   256,IMO
          1 00003D  E380 0000 0000  xent                 LNJ,B6   KHA$ERRLOG
          1 000040       0003                            DC       s:10339,PREL
          1 000041  0F81 0001                            B        s:10339,PREL

      663    10337    3            WHENALTRETURN DO;

      664    10338    3               END;

      665    10339    2            END;

  10339   1 000043  0F81 0004                            B        s:10343,PREL

      666    10340    1         ELSE
      667    10341    1            EVENT = %KZ#LIN_EVENT_TIMOUT;

PL6.E3A0      #004=KZO$TIMOUT File=KZO$ORDERS.:E05TSI                            WED 07/30/97 02:59 Page:103  
  10341   1 000045  6C15                                 LDV,R6   21
          1 000046  EF47 0008                            STR,R6   EVENT,AUTO

      668    10342
      669    10343    1         CALL KZO$ABORT ( KZ@LINCTX );

  10343   1 000048  BBC7 0004                            LAB,B3   @KZ@LINCTX,AUTO
          1 00004A  CBF0 0100                            LAB,B4   256,IMO
          1 00004C  E380 0000 0000  xent                 LNJ,B6   KZO$ABORT
          1 00004F       0001                            DC       s:10345,PREL

      670    10344
      671    10345    1         CALL KZP$DRIVER ( KZ@LINCTX, EVENT );

  10345   1 000050  EBC7 0008                            LAB,B6   EVENT,AUTO
          1 000052  EFC7 000C                            STB,B6   EVENT+4,AUTO
          1 000054  DCC7 0004                            LDB,B5   @KZ@LINCTX,AUTO
          1 000056  DFC7 000A                            STB,B5   EVENT+2,AUTO
          1 000058  BBC7 000A                            LAB,B3   EVENT+2,AUTO
          1 00005A  CBF0 0200                            LAB,B4   512,IMO
          1 00005C  E380 0000 0000  xent                 LNJ,B6   KZP$DRIVER
          1 00005F       0001                            DC       s:10347,PREL

      672    10346
      673    10347    1         RETURN;

  10347   1 000060  C380 0000 0000  xent                 LNJ,B4   X6A_ARET
      674    10348
      675    10349    1   END KZO$TIMOUT;

PL6.E3A0      #004=KZO$TIMOUT File=KZO$ORDERS.:E05TSI                            WED 07/30/97 02:59 Page:104  
--  Include file information  --

   GH_IOFNC_E.:E05TOU  is referenced.
   KH$IO.:E05TOU  is referenced.
   KZ_CLMEVT_C.:E05TOU  is referenced.
   KZ_CLM_E.:E05TOU  is referenced.
   KZ$LINCTX.:E05TOU  is referenced.
   KH$CHN.:E05TOU  is referenced.
   KZ_PERR_C.:E05TOU  is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   KL_MACRO_C.:E05TOU  is referenced.
   G_LCP6_E.:E05TOU  is referenced.
   GT_LCP6_M.:E05TOU  is referenced.
   KI_CP6.:E05TOU  is referenced.
   GF_LCP6_M.:E05TOU  is referenced.
   GM_LCP6_M.:E05TOU  is referenced.
   GU_LCP6_M.:E05TOU  is referenced.
   GJ_LCP6_M.:E05TOU  is referenced.
   GH_LCP6_M.:E05TOU  is referenced.
   LCP_6.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure KZO$TIMOUT.
PL6.E3A0      #004=KZO$TIMOUT File=KZO$ORDERS.:E05TSI                            WED 07/30/97 02:59 Page:105  

 **** Variables and constants ****

  ****  Section 000  Data  KZO$TIMOUT

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(32)    r     1 KH_INPDAT                  2-0-0/w STRC(336)   r     1 TIMEOUT_ERROR

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     6-0-0/w PTR         r     1 @CTB$                      4-0-0/w PTR         r     1 @KZ@LINCTX
    *0-0-0/w PTR         r     1 CTB$                       8-0-0/w UBIN(16)    r     1 EVENT
    *0-0-0/w STRC(2192)  r     1 KZ@LINCTX

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(512)   r     1 KH$CHN


   Procedure KZO$TIMOUT requires 99 words for executable code.
   Procedure KZO$TIMOUT requires 14 words of local(AUTO) storage.

    No errors detected in file KZO$ORDERS.:E05TSI    .
PL6.E3A0      #004=KZO$TIMOUT File=KZO$ORDERS.:E05TSI                            WED 07/30/97 02:59 Page:106  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #004=KZO$TIMOUT File=KZO$ORDERS.:E05TSI                            WED 07/30/97 02:59 Page:107  
          MINI XREF LISTING

CTB$
     10318**DCL        13--PROC    10327>>IF
EVENT
     10319**DCL     10341<<ASSIGN  10345<>CALL
KH$CHN
      9557**DCL     10333<>CALL
KH$CHN.TERMID.TERM
      9653**DCL      9662--REDEF
KHA$ERRLOG
     10324**DCL-ENT 10336--CALL
KHI$IO_INP
     10321**DCL-ENT 10333--CALL
KH_INPDAT
     10115**DCL     10333<>CALL
KH_INPDAT.ASNSTT
     10124**DCL     10125--REDEF
KH_INPDAT.SNCSTT
     10125**DCL     10332<<ASSIGN
KH_INPDAT.SNCSTT.DSR
     10125**DCL     10334>>IF
KZ@LINCTX
      9679**DCL        13--PROC    10343<>CALL    10345<>CALL
KZ@LINCTX.CHN$
      9682**DCL     10333>>CALL
KZ@LINCTX.CTB.PRM$
      9768**DCL     10327>>IF      10330<<ASSIGN
KZ@LINCTX.LINID
      9700**DCL     10335>>ASSIGN
KZ@LINCTX.LINID.TERM
      9702**DCL      9711--REDEF
KZ@LINCTX.OTPCNT
      9967**DCL      9970--REDEF
PL6.E3A0      #004=KZO$TIMOUT File=KZO$ORDERS.:E05TSI                            WED 07/30/97 02:59 Page:108  
KZ@LINCTX.POLSIZ
     10013**DCL     10015--REDEF
KZO$ABORT
     10322**DCL-ENT 10343--CALL
KZP$DRIVER
     10323**DCL-ENT 10345--CALL
TIMEOUT_ERROR
     10235**DCL     10336<>CALL
TIMEOUT_ERROR.V
     10239**DCL     10237--DCLINIT
TIMEOUT_ERROR.V.TERMID
     10302**DCL     10335<<ASSIGN
TIMEOUT_ERROR.V.TERMID.TERM
     10304**DCL     10313--REDEF
