VERSION E05

PL6.E3A0      #001=QTB$SELECT File=QTB$SELECT.:E05TSI                            WED 07/30/97 05:49 Page:1    
        1        1        /*M* QTB$SELECT - Perform  SELECT  command */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* IND=2, DCI=4, CSU=2, ECU=4, DTI=2, CTI=4, AND */
        8        8        QTB$SELECT:
        9        9                PROC;
       10       10
       11       11        %INCLUDE Q_PAGE_C;
       12       43        %SET LISTEXP = '1'B;
       13       44        %PAGE(ARG="Includes");

                61        /***************************************************************************
                62         *                                                                         *
                63         *                                  Includes                               *
                64         *                                                                         *
                65         ***************************************************************************/

       14       69        %INCLUDE CP_6;
       15      150        %INCLUDE QT_DATA_R;
       16      164        %INCLUDE CP_6_SUBS;
       17      704        %INCLUDE QT_PERR_C;
       18      755        %INCLUDE Q_ERRCODE_C;
       19      778        %INCLUDE XU_MACRO_C;
       20     3884        %INCLUDE B_ERRORS_C;
       21     5011        %PAGE(ARG="Externally defined routines");

              5028    1   /***************************************************************************
              5029    1    *                                                                         *
              5030    1    *                        Externally defined routines                      *
              5031    1    *                                                                         *
              5032    1    ***************************************************************************/

       22     5036    1   DCL QTC$MON_ERR ENTRY(1);
       23     5037    1   DCL XUR$ERRMSG ENTRY(7) ALTRET;
PL6.E3A0      #001=QTB$SELECT File=QTB$SELECT.:E05TSI                            WED 07/30/97 05:49 Page:2    
       24     5038        %PAGE(ARG="Symrefs");

              5055    1   /***************************************************************************
              5056    1    *                                                                         *
              5057    1    *                                  Symrefs                                *
              5058    1    *                                                                         *
              5059    1    ***************************************************************************/

       25     5063    1   DCL B$TCB$ PTR SYMREF;
       26     5064        %PAGE(ARG="DCBs");

              5081    1   /***************************************************************************
              5082    1    *                                                                         *
              5083    1    *                                    DCBs                                 *
              5084    1    *                                                                         *
              5085    1    ***************************************************************************/

       27     5089    1   DCL M$TRADER DCB;
       28     5090    1   DCL M$TRADER_SEQ DCB;
       29     5091        %PAGE(ARG="Constants");

              5108    1   /***************************************************************************
              5109    1    *                                                                         *
              5110    1    *                                 Constants                               *
              5111    1    *                                                                         *
              5112    1    ***************************************************************************/

       30     5116    1   DCL CURRENT_VERSION CHAR(11) CONSTANT INIT('C00 General');
       31     5117        %PAGE(ARG="Static");

              5134    1   /***************************************************************************
              5135    1    *                                                                         *
              5136    1    *                                   Static                                *
              5137    1    *                                                                         *
              5138    1    ***************************************************************************/

       32     5142    1   DCL FID CHAR(100) STATIC;
PL6.E3A0      #001=QTB$SELECT File=QTB$SELECT.:E05TSI                            WED 07/30/97 05:49 Page:3    
       33     5143    1   DCL VERSION CHAR(11) STATIC;
       34     5144
       35     5145    1   DCL 1 KEY STATIC,
       36     5146    1         2 * UBIN(9) UNAL INIT(10),
       37     5147    1         2 * CHAR(10) INIT('Version');
       38     5148        %PAGE(ARG="Based");

              5165    1   /***************************************************************************
              5166    1    *                                                                         *
              5167    1    *                                   Based                                 *
              5168    1    *                                                                         *
              5169    1    ***************************************************************************/

       39     5173        %F$DCB;
       40     5230        %PARSE$OUT(STCLASS=BASED);
       41     5275        %PARSE$SYM(STCLASS=BASED);
       42     5313        %B$TCB;
       43     5316        %B$ALT;
       44     5324        %PAGE(ARG="Error codes", PAGE=YES);

PL6.E3A0      #001=QTB$SELECT File=QTB$SELECT.:E05TSI                            WED 07/30/97 05:49 Page:4    
              5341    1   /***************************************************************************
              5342    1    *                                                                         *
              5343    1    *                                Error codes                              *
              5344    1    *                                                                         *
              5345    1    ***************************************************************************/

       45     5349        %ERRCODE(NAME=CODE_IF, CODE#=%E$IF, FCG#=%FCG_QT, MID#=%MID_B);
       46     5356        %ERRCODE(NAME=CODE_MBOD, CODE#=%E$MBOD, FCG#=%FCG_QT, MID#=%MID_B);
       47     5363        %ERRCODE(NAME=CODE_NTF, CODE#=%E$NTF, FCG#=%FCG_QT, MID#=%MID_B);
       48     5370        %ERRCODE(NAME=CODE_NTB, CODE#=%E$NTB, FCG#=%FCG_QT, MID#=%MID_B);
       49     5377        %ERRCODE(NAME=CODE_CLWR, CODE#=%E$CLWR, FCG#=%FCG_QT, MID#=%MID_B);
       50     5384        /*E*       ERROR: QTB-E$IF-C
       51     5385
       52     5386                 MESSAGE: Invalid FID for TRADER file
       53     5387             DESCRIPTION: Bad file name supplied on SELECT command.
       54     5388        */
       55     5389        /*E*       ERROR: QTB-E$MBOD-C
       56     5390
       57     5391                 MESSAGE: TRADER files must be on disk.
       58     5392             DESCRIPTION: The file name for a TRADER file looks like
       59     5393                          it is not a disk file.
       60     5394        */
       61     5395        /*E*       ERROR: QTB-E$NTF-C
       62     5396
       63     5397                 MESSAGE: New TRADER file
       64     5398             DESCRIPTION: A new TRADER file is being built.
       65     5399        */
       66     5400        /*E*       ERROR: QTB-E$NTB-C
       67     5401
       68     5402                 MESSAGE: The file supplied as the TRADER file was not
       69     5403                          built by TRADER.
       70     5404             DESCRIPTION: TRADER can only use files build by TRADER
       71     5405        */
       72     5406        /*E*       ERROR: QTB-E$CLWR-C
       73     5407
       74     5408                 MESSAGE: Note: Previously selected TRADER file %U1
       75     5409                          deleted because file was empty.
PL6.E3A0      #001=QTB$SELECT File=QTB$SELECT.:E05TSI                            WED 07/30/97 05:49 Page:5    
       76     5410             DESCRIPTION: A TRADER file was previously selected but no
       77     5411                          records were put in it aside from the current
       78     5412                          version record.
       79     5413        */
       80     5414        %PAGE(ARG="FPTs", PAGE=YES);

PL6.E3A0      #001=QTB$SELECT File=QTB$SELECT.:E05TSI                            WED 07/30/97 05:49 Page:6    
              5431    1   /***************************************************************************
              5432    1    *                                                                         *
              5433    1    *                                    FPTs                                 *
              5434    1    *                                                                         *
              5435    1    ***************************************************************************/

       81     5439        %FPT_OPEN(DCB=M$TRADER, ACCT=VLP_ACCT, SCRUB=YES,
       82     5440        ACS=DIRECT, CTG=YES, EXIST=OLDFILE,
       83     5441        FUN=CREATE, NAME=VLP_NAME, ORG=KEYED, PASS=VLP_PASS,
       84     5442        ASN=FILE, TYPE='DD', SHARE=ALL);
       85     5551
       86     5552        %FPT_OPEN(FPTN=FPT_OPEN_SEQ, DCB=M$TRADER_SEQ, ACCT=VLP_ACCT,
       87     5553        SCRUB=YES, ACS=DIRECT, EXIST=OLDFILE, FUN=IN,
       88     5554        NAME=VLP_NAME, ORG=KEYED, PASS=VLP_PASS, SHARE=ALL, ASN=FILE);
       89     5663
       90     5664        %FPT_FID(NAME=VLP_NAME, PASS=VLP_PASS, RESULTS=VLR_FID,
       91     5665        ACCT=VLP_ACCT, ASN="FPT_OPEN.V.ASN#", SN=VLP_SN,
       92     5666        RES="FPT_OPEN.V.RES#", WSN=VLP_WSN, TEXTFID=FID);
       93     5689
       94     5690        %FPT_CLOSE(DCB=M$TRADER, DISP=SAVE);
       95     5732
       96     5733        %FPT_CLOSE(FPTN=FPT_CLOSE_SEQ, DCB=M$TRADER_SEQ, DISP=SAVE);
       97     5775
       98     5776        %FPT_READ(DCB=M$TRADER, KEYS=YES, KEY=KEY, BUF=VERSION);
       99     5815
      100     5816        %FPT_WRITE(DCB=M$TRADER, KEY=KEY, BUF=CURRENT_VERSION);
      101     5847        %PAGE(ARG="VLPs");

              5864    1   /***************************************************************************
              5865    1    *                                                                         *
              5866    1    *                                    VLPs                                 *
              5867    1    *                                                                         *
              5868    1    ***************************************************************************/

      102     5872        %VLP_ACCT;
      103     5885        %VLP_NAME;
      104     5912        %VLP_PASS;
PL6.E3A0      #001=QTB$SELECT File=QTB$SELECT.:E05TSI                            WED 07/30/97 05:49 Page:7    
      105     5925        %VLP_SN;
      106     5938        %VLP_WSN;
      107     5951        %PAGE(ARG="VLRs");

              5968    1   /***************************************************************************
              5969    1    *                                                                         *
              5970    1    *                                    VLRs                                 *
              5971    1    *                                                                         *
              5972    1    ***************************************************************************/

      108     5976        %VLR_FID;
      109     5995        %PAGE(ARG="QTB$SELECT", PAGE=YES);

PL6.E3A0      #001=QTB$SELECT File=QTB$SELECT.:E05TSI                            WED 07/30/97 05:49 Page:8    
              6012    1   /***************************************************************************
              6013    1    *                                                                         *
              6014    1    *                                 QTB$SELECT                              *
              6015    1    *                                                                         *
              6016    1    ***************************************************************************/

      110     6020                /*  verify that file selected has more than the current
      111     6021                    version record written if TRADER file had been previously
      112     6022                    selected.  If only one record, send message that previous
      113     6023                    TRADER file selected will be closed with DISP=RELEASE
      114     6024                */
      115     6025    1           IF QT_GLOBAL.FILE_SELECTED AND
      116     6026    1               QT_GLOBAL.M$TRADER$ -> F$DCB.NRECS# = 1 THEN
      117     6027    2             DO;
      118     6028    2               QT_CMDBLK.MINOR_ERR = CODE_CLWR;
      119     6029    2               CALL XUR$ERRMSG(QT_CMDBLK.MINOR_ERR,,,
      120     6030    2                   VECTOR(QT_GLOBAL.M$TRADER$ -> F$DCB.NAME#));
      121     6031                                      /* temporarily set DISP to RELEASE, then reset  */
      122     6032    2               FPT_CLOSE_SEQ.V.DISP# = 1;  /* release                            */
      123     6033    2               CALL M$CLOSE(FPT_CLOSE) ALTRET(MON_ERR);
      124     6034    2               CALL M$CLOSE(FPT_CLOSE_SEQ) ALTRET(MON_ERR);
      125     6035                                                /* reset                              */
      126     6036    2               FPT_CLOSE_SEQ.V.DISP# = 2;  /* save                               */
      127     6037                                                /* reset to no TRADER file selected   */
      128     6038    2               QT_GLOBAL.FILE_SELECTED = '0'B;
      129     6039    2             END;
      130     6040
      131     6041    1           IF QT_GLOBAL.FILE_SELECTED THEN
      132     6042    2             DO;
      133     6043    2               CALL M$CLOSE(FPT_CLOSE) ALTRET(MON_ERR);
      134     6044    2               CALL M$CLOSE(FPT_CLOSE_SEQ) ALTRET(MON_ERR);
      135     6045    2               QT_GLOBAL.FILE_SELECTED = '0'B;
      136     6046    2             END;
      137     6047
      138     6048    1           FID = QT_CMDBLK.OUT$ -> OUT$BLK.SUBLK$(0) -> OUT$SYM.TEXT;
      139     6049    1           CALL M$FID(FPT_FID) ALTRET(FID_ERR);
      140     6050
PL6.E3A0      #001=QTB$SELECT File=QTB$SELECT.:E05TSI                            WED 07/30/97 05:49 Page:9    
      141     6051    2           DO WHILE('0'B);
      142     6052
      143     6053    2   FID_ERR:
      144     6054    2             QT_CMDBLK.MINOR_ERR = CODE_IF;
      145     6055    2             GOTO PRINT_ERR;
      146     6056    2           END /* WHILE */;
      147     6057
      148     6058    1           IF FPT_OPEN.V.ASN# ~= 1 /* FILE# */ THEN
      149     6059    2             DO;
      150     6060    2               QT_CMDBLK.MINOR_ERR = CODE_MBOD;
      151     6061    2               GOTO PRINT_ERR;
      152     6062    2             END;
      153     6063
      154     6064    1           CALL M$OPEN(FPT_OPEN) ALTRET(OPEN_ERR);
      155     6065
      156     6066    1           IF QT_GLOBAL.M$TRADER$ -> F$DCB.FEXT THEN
      157     6067    2             DO;
      158     6068    2               CALL M$READ(FPT_READ) ALTRET(READ_ERR);
      159     6069
      160     6070    3               DO WHILE('0'B);
      161     6071
      162     6072    3   READ_ERR:
      163     6073    3                 IF B$TCB$ -> B$TCB.ALT$ -> B$ALT.ERR.CODE ~= 66 /* E$NOKEY */ THEN
      164     6074    4                   DO;
      165     6075    4                     GOTO MON_ERR;
      166     6076    4                   END;
      167     6077
      168     6078    3                 QT_CMDBLK.MINOR_ERR = CODE_NTB;
      169     6079    3                 CALL M$CLOSE(FPT_CLOSE) ALTRET(MON_ERR);
      170     6080    3                 GOTO PRINT_ERR;
      171     6081    3               END /* NEVER */;
      172     6082    2             END;
      173     6083
      174     6084    1           CALL M$OPEN(FPT_OPEN_SEQ) ALTRET(MON_ERR);
      175     6085    1           QT_GLOBAL.FILE_SELECTED = '1'B;
      176     6086
      177     6087    1           IF NOT QT_GLOBAL.M$TRADER$ -> F$DCB.FEXT THEN
PL6.E3A0      #001=QTB$SELECT File=QTB$SELECT.:E05TSI                            WED 07/30/97 05:49 Page:10   
      178     6088    2             DO;
      179     6089    2               CALL M$WRITE(FPT_WRITE) ALTRET(MON_ERR);
      180     6090    2               QT_CMDBLK.MINOR_ERR = CODE_NTF;
      181     6091    2               GOTO PRINT_ERR;
      182     6092    2             END;
      183     6093
      184     6094    2           DO WHILE('0'B);
      185     6095
      186     6096    2   OPEN_ERR:
      187     6097    2             CALL QTC$MON_ERR('0'B);
      188     6098    2             GOTO RET;
      189     6099    2           END /* WHILE */;
      190     6100
      191     6101    1           GOTO RET;
      192     6102
      193     6103    1   PRINT_ERR:
      194     6104    1           CALL XUR$ERRMSG(QT_CMDBLK.MINOR_ERR);
      195     6105
      196     6106    1   RET:
      197     6107    1           RETURN;
      198     6108
      199     6109    1   MON_ERR:
      200     6110    1           CALL QTC$MON_ERR('1'B);
      201     6111
      202     6112    1   END QTB$SELECT;

PL6.E3A0      #001=QTB$SELECT File=QTB$SELECT.:E05TSI                            WED 07/30/97 05:49 Page:11   
--  Include file information  --

   B_ERRORS_C.:E05TOU  is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
   Q_ERRCODE_C.:E05TOU  is referenced.
   QT_PERR_C.:E05TOU  is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   QT_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   Q_PAGE_C.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure QTB$SELECT.

   Procedure QTB$SELECT requires 130 words for executable code.
   Procedure QTB$SELECT requires 10 words of local(AUTO) storage.

    No errors detected in file QTB$SELECT.:E05TSI    .

PL6.E3A0      #001=QTB$SELECT File=QTB$SELECT.:E05TSI                            WED 07/30/97 05:49 Page:12   

 Object Unit name= QTB$SELECT                                 File name= QTB$SELECT.:E05TOU
 UTS= JUL 30 '97 05:49:13.68 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1   DCB   even  none     0      0  M$TRADER
    2   DCB   even  none     0      0  M$TRADER_SEQ
    3  RoData even  UTS      8     10  QTB$SELECT
    4   Data  even  none   286    436  QTB$SELECT
    5   Proc  even  none   130    202  QTB$SELECT
    6  RoData even  none     4      4  QTB$SELECT

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     5      0   yes            yes      Std        0  QTB$SELECT

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       7 XUR$ERRMSG
         yes           Std       1 QTC$MON_ERR
                       nStd      0 X66_AUTO_0
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET
PL6.E3A0      #001=QTB$SELECT File=QTB$SELECT.:E05TSI                            WED 07/30/97 05:49 Page:13   

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                                  QT_GLOBAL                             QT_CMDBLK
     B$TCB$                                M$TRADER                              M$TRADER_SEQ
     B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID                                 NULLSID
PL6.E3A0      #001=QTB$SELECT File=QTB$SELECT.:E05TSI                            WED 07/30/97 05:49 Page:14   


        1        1        /*M* QTB$SELECT - Perform  SELECT  command */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* IND=2, DCI=4, CSU=2, ECU=4, DTI=2, CTI=4, AND */
        8        8        QTB$SELECT:
        9        9                PROC;

      9  5 000000   000000 700200 xent  QTB$SELECT   TSX0  ! X66_AUTO_0
         5 000001   000012 000000                    ZERO    10,0

       10       10
       11       11        %INCLUDE Q_PAGE_C;
       12       43        %SET LISTEXP = '1'B;
       13       44        %PAGE(ARG="Includes");

                61        /***************************************************************************
                62         *                                                                         *
                63         *                                  Includes                               *
                64         *                                                                         *
                65         ***************************************************************************/

       14       69        %INCLUDE CP_6;
       15      150        %INCLUDE QT_DATA_R;
       16      164        %INCLUDE CP_6_SUBS;
       17      704        %INCLUDE QT_PERR_C;
       18      755        %INCLUDE Q_ERRCODE_C;
       19      778        %INCLUDE XU_MACRO_C;
       20     3884        %INCLUDE B_ERRORS_C;
       21     5011        %PAGE(ARG="Externally defined routines");

              5028    1   /***************************************************************************
              5029    1    *                                                                         *
              5030    1    *                        Externally defined routines                      *
PL6.E3A0      #001=QTB$SELECT File=QTB$SELECT.:E05TSI                            WED 07/30/97 05:49 Page:15   
              5031    1    *                                                                         *
              5032    1    ***************************************************************************/

       22     5036    1   DCL QTC$MON_ERR ENTRY(1);
       23     5037    1   DCL XUR$ERRMSG ENTRY(7) ALTRET;
       24     5038        %PAGE(ARG="Symrefs");

              5055    1   /***************************************************************************
              5056    1    *                                                                         *
              5057    1    *                                  Symrefs                                *
              5058    1    *                                                                         *
              5059    1    ***************************************************************************/

       25     5063    1   DCL B$TCB$ PTR SYMREF;
       26     5064        %PAGE(ARG="DCBs");

              5081    1   /***************************************************************************
              5082    1    *                                                                         *
              5083    1    *                                    DCBs                                 *
              5084    1    *                                                                         *
              5085    1    ***************************************************************************/

       27     5089    1   DCL M$TRADER DCB;
       28     5090    1   DCL M$TRADER_SEQ DCB;
       29     5091        %PAGE(ARG="Constants");

              5108    1   /***************************************************************************
              5109    1    *                                                                         *
              5110    1    *                                 Constants                               *
              5111    1    *                                                                         *
              5112    1    ***************************************************************************/

       30     5116    1   DCL CURRENT_VERSION CHAR(11) CONSTANT INIT('C00 General');
       31     5117        %PAGE(ARG="Static");

              5134    1   /***************************************************************************
              5135    1    *                                                                         *
PL6.E3A0      #001=QTB$SELECT File=QTB$SELECT.:E05TSI                            WED 07/30/97 05:49 Page:16   
              5136    1    *                                   Static                                *
              5137    1    *                                                                         *
              5138    1    ***************************************************************************/

       32     5142    1   DCL FID CHAR(100) STATIC;
       33     5143    1   DCL VERSION CHAR(11) STATIC;
       34     5144
       35     5145    1   DCL 1 KEY STATIC,
       36     5146    1         2 * UBIN(9) UNAL INIT(10),
       37     5147    1         2 * CHAR(10) INIT('Version');
       38     5148        %PAGE(ARG="Based");

              5165    1   /***************************************************************************
              5166    1    *                                                                         *
              5167    1    *                                   Based                                 *
              5168    1    *                                                                         *
              5169    1    ***************************************************************************/

       39     5173        %F$DCB;
       40     5230        %PARSE$OUT(STCLASS=BASED);
       41     5275        %PARSE$SYM(STCLASS=BASED);
       42     5313        %B$TCB;
       43     5316        %B$ALT;
       44     5324        %PAGE(ARG="Error codes", PAGE=YES);

PL6.E3A0      #001=QTB$SELECT File=QTB$SELECT.:E05TSI                            WED 07/30/97 05:49 Page:17   
              5341    1   /***************************************************************************
              5342    1    *                                                                         *
              5343    1    *                                Error codes                              *
              5344    1    *                                                                         *
              5345    1    ***************************************************************************/

       45     5349        %ERRCODE(NAME=CODE_IF, CODE#=%E$IF, FCG#=%FCG_QT, MID#=%MID_B);
       46     5356        %ERRCODE(NAME=CODE_MBOD, CODE#=%E$MBOD, FCG#=%FCG_QT, MID#=%MID_B);
       47     5363        %ERRCODE(NAME=CODE_NTF, CODE#=%E$NTF, FCG#=%FCG_QT, MID#=%MID_B);
       48     5370        %ERRCODE(NAME=CODE_NTB, CODE#=%E$NTB, FCG#=%FCG_QT, MID#=%MID_B);
       49     5377        %ERRCODE(NAME=CODE_CLWR, CODE#=%E$CLWR, FCG#=%FCG_QT, MID#=%MID_B);
       50     5384        /*E*       ERROR: QTB-E$IF-C
       51     5385
       52     5386                 MESSAGE: Invalid FID for TRADER file
       53     5387             DESCRIPTION: Bad file name supplied on SELECT command.
       54     5388        */
       55     5389        /*E*       ERROR: QTB-E$MBOD-C
       56     5390
       57     5391                 MESSAGE: TRADER files must be on disk.
       58     5392             DESCRIPTION: The file name for a TRADER file looks like
       59     5393                          it is not a disk file.
       60     5394        */
       61     5395        /*E*       ERROR: QTB-E$NTF-C
       62     5396
       63     5397                 MESSAGE: New TRADER file
       64     5398             DESCRIPTION: A new TRADER file is being built.
       65     5399        */
       66     5400        /*E*       ERROR: QTB-E$NTB-C
       67     5401
       68     5402                 MESSAGE: The file supplied as the TRADER file was not
       69     5403                          built by TRADER.
       70     5404             DESCRIPTION: TRADER can only use files build by TRADER
       71     5405        */
       72     5406        /*E*       ERROR: QTB-E$CLWR-C
       73     5407
       74     5408                 MESSAGE: Note: Previously selected TRADER file %U1
       75     5409                          deleted because file was empty.
PL6.E3A0      #001=QTB$SELECT File=QTB$SELECT.:E05TSI                            WED 07/30/97 05:49 Page:18   
       76     5410             DESCRIPTION: A TRADER file was previously selected but no
       77     5411                          records were put in it aside from the current
       78     5412                          version record.
       79     5413        */
       80     5414        %PAGE(ARG="FPTs", PAGE=YES);

PL6.E3A0      #001=QTB$SELECT File=QTB$SELECT.:E05TSI                            WED 07/30/97 05:49 Page:19   
              5431    1   /***************************************************************************
              5432    1    *                                                                         *
              5433    1    *                                    FPTs                                 *
              5434    1    *                                                                         *
              5435    1    ***************************************************************************/

       81     5439        %FPT_OPEN(DCB=M$TRADER, ACCT=VLP_ACCT, SCRUB=YES,
       82     5440        ACS=DIRECT, CTG=YES, EXIST=OLDFILE,
       83     5441        FUN=CREATE, NAME=VLP_NAME, ORG=KEYED, PASS=VLP_PASS,
       84     5442        ASN=FILE, TYPE='DD', SHARE=ALL);
       85     5551
       86     5552        %FPT_OPEN(FPTN=FPT_OPEN_SEQ, DCB=M$TRADER_SEQ, ACCT=VLP_ACCT,
       87     5553        SCRUB=YES, ACS=DIRECT, EXIST=OLDFILE, FUN=IN,
       88     5554        NAME=VLP_NAME, ORG=KEYED, PASS=VLP_PASS, SHARE=ALL, ASN=FILE);
       89     5663
       90     5664        %FPT_FID(NAME=VLP_NAME, PASS=VLP_PASS, RESULTS=VLR_FID,
       91     5665        ACCT=VLP_ACCT, ASN="FPT_OPEN.V.ASN#", SN=VLP_SN,
       92     5666        RES="FPT_OPEN.V.RES#", WSN=VLP_WSN, TEXTFID=FID);
       93     5689
       94     5690        %FPT_CLOSE(DCB=M$TRADER, DISP=SAVE);
       95     5732
       96     5733        %FPT_CLOSE(FPTN=FPT_CLOSE_SEQ, DCB=M$TRADER_SEQ, DISP=SAVE);
       97     5775
       98     5776        %FPT_READ(DCB=M$TRADER, KEYS=YES, KEY=KEY, BUF=VERSION);
       99     5815
      100     5816        %FPT_WRITE(DCB=M$TRADER, KEY=KEY, BUF=CURRENT_VERSION);
      101     5847        %PAGE(ARG="VLPs");

              5864    1   /***************************************************************************
              5865    1    *                                                                         *
              5866    1    *                                    VLPs                                 *
              5867    1    *                                                                         *
              5868    1    ***************************************************************************/

      102     5872        %VLP_ACCT;
      103     5885        %VLP_NAME;
      104     5912        %VLP_PASS;
PL6.E3A0      #001=QTB$SELECT File=QTB$SELECT.:E05TSI                            WED 07/30/97 05:49 Page:20   
      105     5925        %VLP_SN;
      106     5938        %VLP_WSN;
      107     5951        %PAGE(ARG="VLRs");

              5968    1   /***************************************************************************
              5969    1    *                                                                         *
              5970    1    *                                    VLRs                                 *
              5971    1    *                                                                         *
              5972    1    ***************************************************************************/

      108     5976        %VLR_FID;
      109     5995        %PAGE(ARG="QTB$SELECT", PAGE=YES);

PL6.E3A0      #001=QTB$SELECT File=QTB$SELECT.:E05TSI                            WED 07/30/97 05:49 Page:21   
              6012    1   /***************************************************************************
              6013    1    *                                                                         *
              6014    1    *                                 QTB$SELECT                              *
              6015    1    *                                                                         *
              6016    1    ***************************************************************************/

      110     6020                /*  verify that file selected has more than the current
      111     6021                    version record written if TRADER file had been previously
      112     6022                    selected.  If only one record, send message that previous
      113     6023                    TRADER file selected will be closed with DISP=RELEASE
      114     6024                */
      115     6025    1           IF QT_GLOBAL.FILE_SELECTED AND

   6025  5 000002   000000 234000 xsym               SZN     QT_GLOBAL
         5 000003   000045 605000 5                  TPL     s:6041
         5 000004   000034 470400 xsym               LDP0    QT_GLOBAL+28
         5 000005   000042 235100                    LDA     34,,PR0
         5 000006   000001 115007                    CMPA    1,DL
         5 000007   000045 601000 5                  TNZ     s:6041

      116     6026    1               QT_GLOBAL.M$TRADER$ -> F$DCB.NRECS# = 1 THEN
      117     6027    2             DO;

      118     6028    2               QT_CMDBLK.MINOR_ERR = CODE_CLWR;

   6028  5 000010   000007 236000 3                  LDQ     CODE_CLWR
         5 000011   000001 756000 xsym               STQ     QT_CMDBLK+1

      119     6029    2               CALL XUR$ERRMSG(QT_CMDBLK.MINOR_ERR,,,

   6029  5 000012   000000 235000 6                  LDA     0
         5 000013   000034 236000 xsym               LDQ     QT_GLOBAL+28
         5 000014   000010 036003                    ADLQ    8,DU
         5 000015   200004 757100                    STAQ    4,,AUTO
         5 000016   200004 631500                    EPPR1   4,,AUTO
         5 000017   200011 451500                    STP1    9,,AUTO
         5 000020   000001 236000 xsym               LDQ     B_VECTNIL+1
PL6.E3A0      #001=QTB$SELECT File=QTB$SELECT.:E05TSI                            WED 07/30/97 05:49 Page:22   
         5 000021   200010 756100                    STQ     8,,AUTO
         5 000022   000001 235000 6                  LDA     1
         5 000023   200006 757100                    STAQ    6,,AUTO
         5 000024   200006 630500                    EPPR0   6,,AUTO
         5 000025   000022 631400 xsym               EPPR1   B_VECTNIL+18
         5 000026   000000 701000 xent               TSX1    XUR$ERRMSG
         5 000027   000000 011000                    NOP     0

      120     6030    2                   VECTOR(QT_GLOBAL.M$TRADER$ -> F$DCB.NAME#));
      121     6031                                      /* temporarily set DISP to RELEASE, then reset  */
      122     6032    2               FPT_CLOSE_SEQ.V.DISP# = 1;  /* release                            */

   6032  5 000030   000001 236007                    LDQ     1,DL
         5 000031   000344 552004 4                  STBQ    FPT_CLOSE_SEQ+26,'04'O

      123     6033    2               CALL M$CLOSE(FPT_CLOSE) ALTRET(MON_ERR);

   6033  5 000032   000254 630400 4                  EPPR0   FPT_CLOSE
         5 000033   450001 713400                    CLIMB   alt,close
         5 000034   406000 401760                    pmme    nvectors=13
         5 000035   000175 702000 5                  TSX2    MON_ERR

      124     6034    2               CALL M$CLOSE(FPT_CLOSE_SEQ) ALTRET(MON_ERR);

   6034  5 000036   000312 630400 4                  EPPR0   FPT_CLOSE_SEQ
         5 000037   450001 713400                    CLIMB   alt,close
         5 000040   406000 401760                    pmme    nvectors=13
         5 000041   000175 702000 5                  TSX2    MON_ERR

      125     6035                                                /* reset                              */
      126     6036    2               FPT_CLOSE_SEQ.V.DISP# = 2;  /* save                               */

   6036  5 000042   000002 236007                    LDQ     2,DL
         5 000043   000344 552004 4                  STBQ    FPT_CLOSE_SEQ+26,'04'O

      127     6037                                                /* reset to no TRADER file selected   */
      128     6038    2               QT_GLOBAL.FILE_SELECTED = '0'B;
PL6.E3A0      #001=QTB$SELECT File=QTB$SELECT.:E05TSI                            WED 07/30/97 05:49 Page:23   

   6038  5 000044   000000 450000 xsym               STZ     QT_GLOBAL

      129     6039    2             END;

      130     6040
      131     6041    1           IF QT_GLOBAL.FILE_SELECTED THEN

   6041  5 000045   000000 234000 xsym               SZN     QT_GLOBAL
         5 000046   000060 605000 5                  TPL     s:6048

      132     6042    2             DO;

      133     6043    2               CALL M$CLOSE(FPT_CLOSE) ALTRET(MON_ERR);

   6043  5 000047   000254 630400 4                  EPPR0   FPT_CLOSE
         5 000050   450001 713400                    CLIMB   alt,close
         5 000051   406000 401760                    pmme    nvectors=13
         5 000052   000175 702000 5                  TSX2    MON_ERR

      134     6044    2               CALL M$CLOSE(FPT_CLOSE_SEQ) ALTRET(MON_ERR);

   6044  5 000053   000312 630400 4                  EPPR0   FPT_CLOSE_SEQ
         5 000054   450001 713400                    CLIMB   alt,close
         5 000055   406000 401760                    pmme    nvectors=13
         5 000056   000175 702000 5                  TSX2    MON_ERR

      135     6045    2               QT_GLOBAL.FILE_SELECTED = '0'B;

   6045  5 000057   000000 450000 xsym               STZ     QT_GLOBAL

      136     6046    2             END;

      137     6047
      138     6048    1           FID = QT_CMDBLK.OUT$ -> OUT$BLK.SUBLK$(0) -> OUT$SYM.TEXT;

   6048  5 000060   000004 470400 xsym               LDP0    QT_CMDBLK+4
PL6.E3A0      #001=QTB$SELECT File=QTB$SELECT.:E05TSI                            WED 07/30/97 05:49 Page:24   
         5 000061   000003 471500                    LDP1    3,,PR0
         5 000062   100004 236100                    LDQ     4,,PR1
         5 000063   000033 772000                    QRL     27
         5 000064   000000 620006                    EAX0    0,QL
         5 000065   040000 100540                    MLR     fill='040'O
         5 000066   100004 200010                    ADSC9   4,,PR1                   cn=1,n=*X0
         5 000067   000000 000144 4                  ADSC9   FID                      cn=0,n=100

      139     6049    1           CALL M$FID(FPT_FID) ALTRET(FID_ERR);

   6049  5 000070   000224 630400 4                  EPPR0   FPT_FID
         5 000071   420001 713400                    CLIMB   alt,+8193
         5 000072   404400 401760                    pmme    nvectors=10
         5 000073   000075 702000 5                  TSX2    FID_ERR

      140     6050
      141     6051    2           DO WHILE('0'B);

   6051  5 000074   000100 710000 5                  TRA     s:6058

      142     6052
      143     6053    2   FID_ERR:
      144     6054    2             QT_CMDBLK.MINOR_ERR = CODE_IF;

   6054  5 000075   000003 236000 3     FID_ERR      LDQ     CODE_IF
         5 000076   000001 756000 xsym               STQ     QT_CMDBLK+1

      145     6055    2             GOTO PRINT_ERR;

   6055  5 000077   000170 710000 5                  TRA     PRINT_ERR

      146     6056    2           END /* WHILE */;

      147     6057
      148     6058    1           IF FPT_OPEN.V.ASN# ~= 1 /* FILE# */ THEN

   6058  5 000100   000105 236000 4                  LDQ     FPT_OPEN+37
PL6.E3A0      #001=QTB$SELECT File=QTB$SELECT.:E05TSI                            WED 07/30/97 05:49 Page:25   
         5 000101   000777 376007                    ANQ     511,DL
         5 000102   000001 116007                    CMPQ    1,DL
         5 000103   000107 600000 5                  TZE     s:6064

      149     6059    2             DO;

      150     6060    2               QT_CMDBLK.MINOR_ERR = CODE_MBOD;

   6060  5 000104   000004 236000 3                  LDQ     CODE_MBOD
         5 000105   000001 756000 xsym               STQ     QT_CMDBLK+1

      151     6061    2               GOTO PRINT_ERR;

   6061  5 000106   000170 710000 5                  TRA     PRINT_ERR

      152     6062    2             END;
      153     6063
      154     6064    1           CALL M$OPEN(FPT_OPEN) ALTRET(OPEN_ERR);

   6064  5 000107   000040 630400 4                  EPPR0   FPT_OPEN
         5 000110   450000 713400                    CLIMB   alt,open
         5 000111   410400 401760                    pmme    nvectors=18
         5 000112   000162 702000 5                  TSX2    OPEN_ERR

      155     6065
      156     6066    1           IF QT_GLOBAL.M$TRADER$ -> F$DCB.FEXT THEN

   6066  5 000113   000034 470400 xsym               LDP0    QT_GLOBAL+28
         5 000114   000064 234100                    SZN     52,,PR0
         5 000115   000141 605000 5                  TPL     s:6084

      157     6067    2             DO;

      158     6068    2               CALL M$READ(FPT_READ) ALTRET(READ_ERR);

   6068  5 000116   000350 630400 4                  EPPR0   FPT_READ
         5 000117   440000 713400                    CLIMB   alt,read
PL6.E3A0      #001=QTB$SELECT File=QTB$SELECT.:E05TSI                            WED 07/30/97 05:49 Page:26   
         5 000120   401400 401760                    pmme    nvectors=4
         5 000121   000123 702000 5                  TSX2    READ_ERR

      159     6069
      160     6070    3               DO WHILE('0'B);

   6070  5 000122   000141 710000 5                  TRA     s:6084

      161     6071
      162     6072    3   READ_ERR:
      163     6073    3                 IF B$TCB$ -> B$TCB.ALT$ -> B$ALT.ERR.CODE ~= 66 /* E$NOKEY */ THEN

   6073  5 000123   000000 470400 xsym  READ_ERR     LDP0    B$TCB$
         5 000124   000000 471500                    LDP1    0,,PR0
         5 000125   100102 236100                    LDQ     66,,PR1
         5 000126   377770 376007                    ANQ     131064,DL
         5 000127   001020 116007                    CMPQ    528,DL
         5 000130   000132 600000 5                  TZE     s:6078

      164     6074    4                   DO;

      165     6075    4                     GOTO MON_ERR;

   6075  5 000131   000175 710000 5                  TRA     MON_ERR

      166     6076    4                   END;
      167     6077
      168     6078    3                 QT_CMDBLK.MINOR_ERR = CODE_NTB;

   6078  5 000132   000006 236000 3                  LDQ     CODE_NTB
         5 000133   000001 756000 xsym               STQ     QT_CMDBLK+1

      169     6079    3                 CALL M$CLOSE(FPT_CLOSE) ALTRET(MON_ERR);

   6079  5 000134   000254 630400 4                  EPPR0   FPT_CLOSE
         5 000135   450001 713400                    CLIMB   alt,close
         5 000136   406000 401760                    pmme    nvectors=13
PL6.E3A0      #001=QTB$SELECT File=QTB$SELECT.:E05TSI                            WED 07/30/97 05:49 Page:27   
         5 000137   000175 702000 5                  TSX2    MON_ERR

      170     6080    3                 GOTO PRINT_ERR;

   6080  5 000140   000170 710000 5                  TRA     PRINT_ERR

      171     6081    3               END /* NEVER */;

      172     6082    2             END;
      173     6083
      174     6084    1           CALL M$OPEN(FPT_OPEN_SEQ) ALTRET(MON_ERR);

   6084  5 000141   000132 630400 4                  EPPR0   FPT_OPEN_SEQ
         5 000142   450000 713400                    CLIMB   alt,open
         5 000143   410400 401760                    pmme    nvectors=18
         5 000144   000175 702000 5                  TSX2    MON_ERR

      175     6085    1           QT_GLOBAL.FILE_SELECTED = '1'B;

   6085  5 000145   400000 236003                    LDQ     -131072,DU
         5 000146   000000 756000 xsym               STQ     QT_GLOBAL

      176     6086
      177     6087    1           IF NOT QT_GLOBAL.M$TRADER$ -> F$DCB.FEXT THEN

   6087  5 000147   000034 470400 xsym               LDP0    QT_GLOBAL+28
         5 000150   000064 234100                    SZN     52,,PR0
         5 000151   000161 604000 5                  TMI     s:6094

      178     6088    2             DO;

      179     6089    2               CALL M$WRITE(FPT_WRITE) ALTRET(MON_ERR);

   6089  5 000152   000366 630400 4                  EPPR0   FPT_WRITE
         5 000153   440001 713400                    CLIMB   alt,write
         5 000154   401400 401760                    pmme    nvectors=4
         5 000155   000175 702000 5                  TSX2    MON_ERR
PL6.E3A0      #001=QTB$SELECT File=QTB$SELECT.:E05TSI                            WED 07/30/97 05:49 Page:28   

      180     6090    2               QT_CMDBLK.MINOR_ERR = CODE_NTF;

   6090  5 000156   000005 236000 3                  LDQ     CODE_NTF
         5 000157   000001 756000 xsym               STQ     QT_CMDBLK+1

      181     6091    2               GOTO PRINT_ERR;

   6091  5 000160   000170 710000 5                  TRA     PRINT_ERR

      182     6092    2             END;
      183     6093
      184     6094    2           DO WHILE('0'B);

   6094  5 000161   000167 710000 5                  TRA     s:6101

      185     6095
      186     6096    2   OPEN_ERR:
      187     6097    2             CALL QTC$MON_ERR('0'B);

   6097  5 000162   000002 630400 6     OPEN_ERR     EPPR0   2
         5 000163   000017 631400 xsym               EPPR1   B_VECTNIL+15
         5 000164   000000 701000 xent               TSX1    QTC$MON_ERR
         5 000165   000000 011000                    NOP     0

      188     6098    2             GOTO RET;

   6098  5 000166   000174 710000 5                  TRA     RET

      189     6099    2           END /* WHILE */;

      190     6100
      191     6101    1           GOTO RET;

   6101  5 000167   000174 710000 5                  TRA     RET

      192     6102
PL6.E3A0      #001=QTB$SELECT File=QTB$SELECT.:E05TSI                            WED 07/30/97 05:49 Page:29   
      193     6103    1   PRINT_ERR:
      194     6104    1           CALL XUR$ERRMSG(QT_CMDBLK.MINOR_ERR);

   6104  5 000170   000001 630400 6     PRINT_ERR    EPPR0   1
         5 000171   000017 631400 xsym               EPPR1   B_VECTNIL+15
         5 000172   000000 701000 xent               TSX1    XUR$ERRMSG
         5 000173   000000 011000                    NOP     0

      195     6105
      196     6106    1   RET:
      197     6107    1           RETURN;

   6107  5 000174   000000 702200 xent  RET          TSX2  ! X66_ARET

      198     6108
      199     6109    1   MON_ERR:
      200     6110    1           CALL QTC$MON_ERR('1'B);

   6110  5 000175   000003 630400 6     MON_ERR      EPPR0   3
         5 000176   000017 631400 xsym               EPPR1   B_VECTNIL+15
         5 000177   000000 701000 xent               TSX1    QTC$MON_ERR
         5 000200   000000 011000                    NOP     0

      201     6111
      202     6112    1   END QTB$SELECT;

   6112  5 000201   000000 702200 xent               TSX2  ! X66_ARET

PL6.E3A0      #001=QTB$SELECT File=QTB$SELECT.:E05TSI                            WED 07/30/97 05:49 Page:30   
--  Include file information  --

   B_ERRORS_C.:E05TOU  is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
   Q_ERRCODE_C.:E05TOU  is referenced.
   QT_PERR_C.:E05TOU  is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   QT_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   Q_PAGE_C.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure QTB$SELECT.
PL6.E3A0      #001=QTB$SELECT File=QTB$SELECT.:E05TSI                            WED 07/30/97 05:49 Page:31   

 **** Variables and constants ****

  ****  Section 003 RoData QTB$SELECT

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     7-0-0/b STRC        r     1 CODE_CLWR                  3-0-0/b STRC        r     1 CODE_IF
     4-0-0/b STRC        r     1 CODE_MBOD                  6-0-0/b STRC        r     1 CODE_NTB
     5-0-0/b STRC        r     1 CODE_NTF                   0-0-0/c CHAR(11)    r     1 CURRENT_VERSION

  ****  Section 004  Data  QTB$SELECT

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR(100)   r     1 FID                      254-0-0/d STRC(1080)  r     1 FPT_CLOSE
   312-0-0/d STRC(1080)  r     1 FPT_CLOSE_SEQ            224-0-0/d STRC(864)   r     1 FPT_FID
    40-0-0/d STRC(2088)  r     1 FPT_OPEN                 132-0-0/d STRC(2088)  r     1 FPT_OPEN_SEQ
   350-0-0/d STRC(504)   r     1 FPT_READ                 366-0-0/d STRC(432)   r     1 FPT_WRITE
    34-0-0/c STRC(99)    r     1 KEY                       31-0-0/c CHAR(11)    r     1 VERSION
   402-0-0/c STRC(72)    r     1 VLP_ACCT                 404-0-0/c STRC(288)   r     1 VLP_NAME
   414-0-0/c STRC(72)    r     1 VLP_PASS                 416-0-0/d STRC(90)    r     1 VLP_SN
   422-0-0/c STRC(72)    r     1 VLP_WSN                  424-0-0/d STRC(324)   r     1 VLR_FID

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 B$TCB$                     0-0-0/w STRC(261)   r     1 QT_CMDBLK
     0-0-0/w STRC(1872)  r     1 QT_GLOBAL

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name
PL6.E3A0      #001=QTB$SELECT File=QTB$SELECT.:E05TSI                            WED 07/30/97 05:49 Page:32   

     0-0-0/w STRC(2448)  r     1 B$ALT                      0-0-0/w STRC(144)   r     1 B$TCB
     0-0-0/d ASTR(3528)  r     1 F$DCB                      0-0-0N  NULL        r     1 M$TRADER
     0-0-0N  NULL        r     1 M$TRADER_SEQ               0-0-0/w STRC(144)   r     1 OUT$BLK
     0-0-0/w ASTR(153)   r     1 OUT$SYM


   Procedure QTB$SELECT requires 130 words for executable code.
   Procedure QTB$SELECT requires 10 words of local(AUTO) storage.

    No errors detected in file QTB$SELECT.:E05TSI    .
PL6.E3A0      #001=QTB$SELECT File=QTB$SELECT.:E05TSI                            WED 07/30/97 05:49 Page:33   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=QTB$SELECT File=QTB$SELECT.:E05TSI                            WED 07/30/97 05:49 Page:34   
          MINI XREF LISTING

B$ALT.CODE
      5318**DCL      5318--REDEF    5319--REDEF    5319--REDEF
B$ALT.ERR.CODE
      5320**DCL      6073>>IF
B$ALT.ERR.ERR#
      5320**DCL      5320--REDEF
B$ALT.EVID
      5319**DCL      5319--REDEF    5319--REDEF
B$TCB.ALT$
      5314**DCL      6073>>IF
B$TCB$
      5063**DCL      6073>>IF
CODE_CLWR
      5378**DCL      6028>>ASSIGN
CODE_IF
      5350**DCL      6054>>ASSIGN
CODE_MBOD
      5357**DCL      6060>>ASSIGN
CODE_NTB
      5371**DCL      6078>>ASSIGN
CODE_NTF
      5364**DCL      6090>>ASSIGN
CURRENT_VERSION
      5116**DCL      5834--DCLINIT  5835--DCLINIT
F$DCB.ACTPOS
      5206**DCL      5206--REDEF
F$DCB.ARS#
      5180**DCL      5180--REDEF
F$DCB.ATTR
      5199**DCL      5200--REDEF
F$DCB.BORROW
      5214**DCL      5214--REDEF    5214--REDEF    5214--REDEF
PL6.E3A0      #001=QTB$SELECT File=QTB$SELECT.:E05TSI                            WED 07/30/97 05:49 Page:35   
F$DCB.DCBNAME.L
      5228**DCL      5228--IMP-SIZ
F$DCB.EOMCHAR#
      5184**DCL      5184--REDEF
F$DCB.FEXT
      5210**DCL      6066>>IF       6087>>IF
F$DCB.FLDID
      5209**DCL      5209--REDEF
F$DCB.FORM$
      5203**DCL      5203--REDEF
F$DCB.FSECT
      5219**DCL      5219--REDEF
F$DCB.FSN#
      5196**DCL      5196--REDEF    5196--REDEF    5197--REDEF
F$DCB.HEADER$
      5202**DCL      5202--REDEF
F$DCB.IXTNSIZE#
      5200**DCL      5200--REDEF
F$DCB.LASTSTA$
      5189**DCL      5189--REDEF
F$DCB.LVL
      5215**DCL      5215--REDEF
F$DCB.NAME#
      5190**DCL      6029--CALL
F$DCB.NAME#.C
      5190**DCL      5190--REDEF
F$DCB.NOEOF
      5212**DCL      5212--REDEF
F$DCB.NRECS#
      5201**DCL      5201--REDEF    6025>>IF
F$DCB.NRECX
      5220**DCL      5220--REDEF
F$DCB.OHDR
      5212**DCL      5212--REDEF
F$DCB.ORG#
      5195**DCL      5195--REDEF
PL6.E3A0      #001=QTB$SELECT File=QTB$SELECT.:E05TSI                            WED 07/30/97 05:49 Page:36   
F$DCB.PRECNO
      5218**DCL      5218--REDEF
F$DCB.RCSZ
      5224**DCL      5224--REDEF
F$DCB.RES#
      5191**DCL      5191--REDEF
F$DCB.SETX
      5203**DCL      5203--REDEF
F$DCB.TAB$
      5203**DCL      5203--REDEF
F$DCB.TDA
      5217**DCL      5218--REDEF
F$DCB.WSN#
      5191**DCL      5191--REDEF
FID
      5142**DCL      5677--DCLINIT  6048<<ASSIGN
FID_ERR
      6054**LABEL    6049--CALLALT
FPT_CLOSE
      5713**DCL      6033<>CALL     6043<>CALL     6079<>CALL
FPT_CLOSE.SN_
      5713**DCL      5713--REDEF
FPT_CLOSE.UTL_
      5714**DCL      5714--REDEF
FPT_CLOSE.V
      5718**DCL      5713--DCLINIT
FPT_CLOSE.V.EXPIRE#
      5728**DCL      5728--REDEF
FPT_CLOSE.V.TYPE#
      5726**DCL      5726--REDEF
FPT_CLOSE.V.XTNSIZE#
      5723**DCL      5723--REDEF    5725--REDEF
FPT_CLOSE_SEQ
      5756**DCL      6034<>CALL     6044<>CALL
FPT_CLOSE_SEQ.SN_
      5756**DCL      5756--REDEF
PL6.E3A0      #001=QTB$SELECT File=QTB$SELECT.:E05TSI                            WED 07/30/97 05:49 Page:37   
FPT_CLOSE_SEQ.UTL_
      5757**DCL      5757--REDEF
FPT_CLOSE_SEQ.V
      5761**DCL      5756--DCLINIT
FPT_CLOSE_SEQ.V.DISP#
      5765**DCL      6032<<ASSIGN   6036<<ASSIGN
FPT_CLOSE_SEQ.V.EXPIRE#
      5771**DCL      5771--REDEF
FPT_CLOSE_SEQ.V.TYPE#
      5769**DCL      5769--REDEF
FPT_CLOSE_SEQ.V.XTNSIZE#
      5766**DCL      5766--REDEF    5768--REDEF
FPT_FID
      5677**DCL      6049<>CALL
FPT_FID.V
      5681**DCL      5677--DCLINIT
FPT_OPEN
      5507**DCL      6064<>CALL
FPT_OPEN.ACSVEH_
      5509**DCL      5510--REDEF
FPT_OPEN.ALTKEYS_
      5515**DCL      5516--REDEF    5516--REDEF
FPT_OPEN.HDR_
      5514**DCL      5515--REDEF
FPT_OPEN.TAB_
      5513**DCL      5514--REDEF
FPT_OPEN.UHL_
      5507**DCL      5508--REDEF    5508--REDEF
FPT_OPEN.V
      5516**DCL      5507--DCLINIT
FPT_OPEN.V.ASN#
      5526**DCL      5680--DCLINIT  6058>>IF
FPT_OPEN.V.FSN#
      5547**DCL      5547--REDEF    5547--REDEF
FPT_OPEN.V.RES#
      5531**DCL      5680--DCLINIT
PL6.E3A0      #001=QTB$SELECT File=QTB$SELECT.:E05TSI                            WED 07/30/97 05:49 Page:38   
FPT_OPEN.WSN_
      5513**DCL      5513--REDEF
FPT_OPEN_SEQ
      5619**DCL      6084<>CALL
FPT_OPEN_SEQ.ACSVEH_
      5621**DCL      5622--REDEF
FPT_OPEN_SEQ.ALTKEYS_
      5627**DCL      5628--REDEF    5628--REDEF
FPT_OPEN_SEQ.HDR_
      5626**DCL      5627--REDEF
FPT_OPEN_SEQ.TAB_
      5625**DCL      5626--REDEF
FPT_OPEN_SEQ.UHL_
      5619**DCL      5620--REDEF    5620--REDEF
FPT_OPEN_SEQ.V
      5628**DCL      5619--DCLINIT
FPT_OPEN_SEQ.V.FSN#
      5659**DCL      5659--REDEF    5659--REDEF
FPT_OPEN_SEQ.WSN_
      5625**DCL      5625--REDEF
FPT_READ
      5793**DCL      6068<>CALL
FPT_READ.STATION_
      5796**DCL      5797--REDEF
FPT_READ.V
      5797**DCL      5793--DCLINIT
FPT_READ.V.DVBYTE.REREAD#
      5808**DCL      5808--REDEF
FPT_READ.V.INDX#
      5806**DCL      5806--REDEF
FPT_WRITE
      5833**DCL      6089<>CALL
FPT_WRITE.STATION_
      5835**DCL      5835--REDEF
FPT_WRITE.V
      5836**DCL      5833--DCLINIT
PL6.E3A0      #001=QTB$SELECT File=QTB$SELECT.:E05TSI                            WED 07/30/97 05:49 Page:39   
FPT_WRITE.V.DVBYTE.VFC#
      5842**DCL      5842--REDEF
KEY
      5145**DCL      5793--DCLINIT  5794--DCLINIT  5833--DCLINIT
M$CLOSE
        78**DCL-ENT  6033--CALL     6034--CALL     6043--CALL     6044--CALL     6079--CALL
M$FID
       141**DCL-ENT  6049--CALL
M$OPEN
        78**DCL-ENT  6064--CALL     6084--CALL
M$READ
        79**DCL-ENT  6068--CALL
M$WRITE
        79**DCL-ENT  6089--CALL
MON_ERR
      6110**LABEL    6033--CALLALT  6034--CALLALT  6043--CALLALT  6044--CALLALT  6075--GOTO     6079--CALLALT
      6084--CALLALT  6089--CALLALT
OPEN_ERR
      6097**LABEL    6064--CALLALT
OUT$BLK.SUBLK$
      5269**DCL      6048>>ASSIGN   6048>>ASSIGN
OUT$SYM.COUNT
      5305**DCL      5308--IMP-SIZ  6048>>ASSIGN
OUT$SYM.TEXT
      5308**DCL      6048>>ASSIGN
PRINT_ERR
      6104**LABEL    6055--GOTO     6061--GOTO     6080--GOTO     6091--GOTO
QTC$MON_ERR
      5036**DCL-ENT  6097--CALL     6110--CALL
QT_CMDBLK.MINOR_ERR
       161**DCL      6028<<ASSIGN   6029<>CALL     6054<<ASSIGN   6060<<ASSIGN   6078<<ASSIGN   6090<<ASSIGN
      6104<>CALL
QT_CMDBLK.OUT$
       161**DCL       162--REDEF    6048>>ASSIGN   6048>>ASSIGN
QT_GLOBAL.FILE_SELECTED
       158**DCL      6025>>IF       6038<<ASSIGN   6041>>IF       6045<<ASSIGN   6085<<ASSIGN
PL6.E3A0      #001=QTB$SELECT File=QTB$SELECT.:E05TSI                            WED 07/30/97 05:49 Page:40   
QT_GLOBAL.M$TRADER$
       159**DCL      6025>>IF       6029>>CALL     6066>>IF       6087>>IF
READ_ERR
      6073**LABEL    6068--CALLALT
RET
      6107**LABEL    6098--GOTO     6101--GOTO
VERSION
      5143**DCL      5795--DCLINIT  5796--DCLINIT
VLP_ACCT
      5883**DCL      5512--DCLINIT  5624--DCLINIT  5678--DCLINIT
VLP_NAME
      5910**DCL      5508--DCLINIT  5620--DCLINIT  5678--DCLINIT
VLP_PASS
      5923**DCL      5509--DCLINIT  5621--DCLINIT  5679--DCLINIT
VLP_SN
      5936**DCL      5679--DCLINIT
VLP_WSN
      5949**DCL      5679--DCLINIT
VLR_FID
      5987**DCL      5681--DCLINIT
XUR$ERRMSG
      5037**DCL-ENT  6029--CALL     6104--CALL
