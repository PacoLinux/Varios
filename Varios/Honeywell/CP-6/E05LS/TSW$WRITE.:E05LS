VERSION E05

PL6.E3A0      #001=TSW$WRITE File=TSW$WRITE.:E05TSI                              WED 07/30/97 06:53 Page:1    
        1        1        /*M*     TSW$WRITE - OUTPUT MODULE FOR SYSCON   */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X*/
        8        8        TSW$WRITE: PROC(FORMAT_VEC,DV1,DV2,DV3,DV4);
        9        9        /**/
       10       10        /* PARAMS */
       11       11    1   DCL FORMAT_VEC VECTOR;
       12       12    1   DCL DV1 VECTOR;
       13       13    1   DCL DV2 VECTOR;
       14       14    1   DCL DV3 VECTOR;
       15       15    1   DCL DV4 VECTOR;
       16       16        /**/
       17       17        /* INCLUDE FILES */
       18       18        %INCLUDE CP_6;
       19       99        %INCLUDE XU_FORMAT_C;
       20      261        %INCLUDE F$DCB;
       21      310        /**/
       22      311        /* ENTRY DEFS */
       23      312    1   DCL TSE$ERROR ENTRY(2) ALTRET;
       24      313        /**/
       25      314        /* DCBS */
       26      315    1   DCL M$LO DCB;
       27      316        /**/
       28      317        /* VARIABLES */
       29      318    1   DCL OUTBUF CHAR(132) STATIC;
       30      319    1   DCL I UBIN;
       31      320    1   DCL M$LO$ PTR;
       32      321    1   DCL DATA_VEC(0:3) VECTOR STATIC INIT(VECTOR(NIL)*0);
       33      322    1   DCL TS_PRINT_HEADING BIT(1) ALIGNED SYMREF;
       34      323    1   DCL HEADING CHAR(0) CONSTANT INIT('Component     Part   TDOK   Checkwrite');
       35      324    1   DCL TS_PRINT_THRESH_HEADING BIT(1) ALIGNED SYMREF;
       36      325    1   DCL THRESH_HEADING CHAR(0) CONSTANT INIT('Component    Threshold');
       37      326        /**/
PL6.E3A0      #001=TSW$WRITE File=TSW$WRITE.:E05TSI                              WED 07/30/97 06:53 Page:2    
       38      327        /* ENTRY DEFS */
       39      328    1   DCL X$FORMAT ENTRY(1);
       40      329    1   DCL X$WRITE ENTRY(22);
       41      330        /**/
       42      331        /* MACROS */
       43      332        %F_FDS (NAME=FDS,
       44      333                DCB=M$LO,
       45      334                TRUNC=NO,
       46      335                BUF=OUTBUF,
       47      336                VECTR=DATA_VEC);
       48      449        /**/
       49      450        /* FPT DEFINITIONS */
       50      451        %FPT_OPEN (FPTN=OPEN_LO,
       51      452                   DCB=M$LO,
       52      453                   SCRUB=YES,
       53      454                   REASSIGN=YES);
       54      563        /**/
       55      564        %EJECT;
PL6.E3A0      #001=TSW$WRITE File=TSW$WRITE.:E05TSI                              WED 07/30/97 06:53 Page:3    
       56      565    1        M$LO$ = DCBADDR(DCBNUM(M$LO));
       57      566    1        IF NOT M$LO$->F$DCB.FCD
       58      567    1           THEN CALL M$OPEN(OPEN_LO) ALTRET(BAG_IT);
       59      568    2        IF TS_PRINT_HEADING THEN DO;
       60      569    2           FDS.FMT_ = VECTOR(HEADING);
       61      570    2           FDS.NVECS#=0;
       62      571    2           CALL X$FORMAT (FDS);
       63      572    2           TS_PRINT_HEADING = '0'B;
       64      573    2           END;
       65      574    1         ELSE
       66      575    2         IF TS_PRINT_THRESH_HEADING THEN DO;
       67      576    2           FDS.FMT_ = VECTOR(THRESH_HEADING);
       68      577    2           FDS.NVECS#=0;
       69      578    2           CALL X$FORMAT (FDS);
       70      579    2           TS_PRINT_THRESH_HEADING = '0'B;
       71      580    2           END;
       72      581    1        FDS.FMT_ = FORMAT_VEC;
       73      582    1        IF ADDR(DV1) ~= ADDR(NIL)
       74      583    1           THEN DATA_VEC(0) = DV1;
       75      584    1        IF ADDR(DV2) ~= ADDR(NIL)
       76      585    1           THEN DATA_VEC(1) = DV2;
       77      586    1        IF ADDR(DV3) ~= ADDR(NIL)
       78      587    1           THEN DATA_VEC(2) = DV3;
       79      588    1        IF ADDR(DV4) ~= ADDR(NIL)
       80      589    1           THEN DATA_VEC(3) = DV4;
       81      590    1        I = 0;
       82      591    2        DO WHILE(DATA_VEC(I) ~= VECTOR(NIL) AND I < 4);
       83      592    2           I = I + 1;
       84      593    2        END;                               /* DO WHILE                           */
       85      594    1        FDS.NVECS# = I;
       86      595    1        FDS.BUF_.BOUND = M$LO$->F$DCB.WIDTH;
       87      596    1        IF (FDS.BUF_.BOUND = 0 OR FDS.BUF_.BOUND > 132)
       88      597    1           THEN FDS.BUF_.BOUND = 132;
       89      598    1        CALL X$FORMAT(FDS);
       90      599    1        RETURN;
       91      600    1   BAG_IT:;
       92      601    1        CALL TSE$ERROR(0);
PL6.E3A0      #001=TSW$WRITE File=TSW$WRITE.:E05TSI                              WED 07/30/97 06:53 Page:4    
       93      602    1        RETURN;
       94      603    1   END TSW$WRITE;

PL6.E3A0      #001=TSW$WRITE File=TSW$WRITE.:E05TSI                              WED 07/30/97 06:53 Page:5    
--  Include file information  --

   F$DCB.:E05TOU  cannot be made into a system file and is referenced.
   XU_FORMAT_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure TSW$WRITE.

   Procedure TSW$WRITE requires 106 words for executable code.
   Procedure TSW$WRITE requires 10 words of local(AUTO) storage.

    No errors detected in file TSW$WRITE.:E05TSI    .

PL6.E3A0      #001=TSW$WRITE File=TSW$WRITE.:E05TSI                              WED 07/30/97 06:53 Page:6    

 Object Unit name= TSW$WRITE                                  File name= TSW$WRITE.:E05TOU
 UTS= JUL 30 '97 06:53:59.28 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1   DCB   even  none     0      0  M$LO
    2   Data  even  none   130    202  TSW$WRITE
    3  RoData even  UTS     16     20  TSW$WRITE
    4   Proc  even  none   106    152  TSW$WRITE
    5  RoData even  none    12     14  TSW$WRITE

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     4      0   yes            yes      Std        5  TSW$WRITE

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       1 X$FORMAT
 yes     yes           Std       2 TSE$ERROR
                       nStd      0 X66_AUTO_5
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET
PL6.E3A0      #001=TSW$WRITE File=TSW$WRITE.:E05TSI                              WED 07/30/97 06:53 Page:7    

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                                  M$LO                                  TS_PRINT_HEADING
     TS_PRINT_THRESH_HEADING               B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     NULLSID                               ISSID                                 ROSID
PL6.E3A0      #001=TSW$WRITE File=TSW$WRITE.:E05TSI                              WED 07/30/97 06:53 Page:8    


        1        1        /*M*     TSW$WRITE - OUTPUT MODULE FOR SYSCON   */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X*/
        8        8        TSW$WRITE: PROC(FORMAT_VEC,DV1,DV2,DV3,DV4);

      8  4 000000   000000 700200 xent  TSW$WRITE    TSX0  ! X66_AUTO_5
         4 000001   000012 000005                    ZERO    10,5

        9        9        /**/
       10       10        /* PARAMS */
       11       11    1   DCL FORMAT_VEC VECTOR;
       12       12    1   DCL DV1 VECTOR;
       13       13    1   DCL DV2 VECTOR;
       14       14    1   DCL DV3 VECTOR;
       15       15    1   DCL DV4 VECTOR;
       16       16        /**/
       17       17        /* INCLUDE FILES */
       18       18        %INCLUDE CP_6;
       19       99        %INCLUDE XU_FORMAT_C;
       20      261        %INCLUDE F$DCB;
       21      310        /**/
       22      311        /* ENTRY DEFS */
       23      312    1   DCL TSE$ERROR ENTRY(2) ALTRET;
       24      313        /**/
       25      314        /* DCBS */
       26      315    1   DCL M$LO DCB;
       27      316        /**/
       28      317        /* VARIABLES */
       29      318    1   DCL OUTBUF CHAR(132) STATIC;
       30      319    1   DCL I UBIN;
       31      320    1   DCL M$LO$ PTR;
       32      321    1   DCL DATA_VEC(0:3) VECTOR STATIC INIT(VECTOR(NIL)*0);
PL6.E3A0      #001=TSW$WRITE File=TSW$WRITE.:E05TSI                              WED 07/30/97 06:53 Page:9    
       33      322    1   DCL TS_PRINT_HEADING BIT(1) ALIGNED SYMREF;
       34      323    1   DCL HEADING CHAR(0) CONSTANT INIT('Component     Part   TDOK   Checkwrite');
       35      324    1   DCL TS_PRINT_THRESH_HEADING BIT(1) ALIGNED SYMREF;
       36      325    1   DCL THRESH_HEADING CHAR(0) CONSTANT INIT('Component    Threshold');
       37      326        /**/
       38      327        /* ENTRY DEFS */
       39      328    1   DCL X$FORMAT ENTRY(1);
       40      329    1   DCL X$WRITE ENTRY(22);
       41      330        /**/
       42      331        /* MACROS */
       43      332        %F_FDS (NAME=FDS,
       44      333                DCB=M$LO,
       45      334                TRUNC=NO,
       46      335                BUF=OUTBUF,
       47      336                VECTR=DATA_VEC);
       48      449        /**/
       49      450        /* FPT DEFINITIONS */
       50      451        %FPT_OPEN (FPTN=OPEN_LO,
       51      452                   DCB=M$LO,
       52      453                   SCRUB=YES,
       53      454                   REASSIGN=YES);
       54      563        /**/
       55      564        %EJECT;
PL6.E3A0      #001=TSW$WRITE File=TSW$WRITE.:E05TSI                              WED 07/30/97 06:53 Page:10   
       56      565    1        M$LO$ = DCBADDR(DCBNUM(M$LO));

    565  4 000002   000000 236007 xsym               LDQ     M$LO,DL
         4 000003   000000 470400 5                  LDP0    0
         4 000004   000000 471500                    LDP1    0,,PR0
         4 000005   100000 236106                    LDQ     0,QL,PR1
         4 000006   200011 756100                    STQ     M$LO$,,AUTO

       57      566    1        IF NOT M$LO$->F$DCB.FCD

    566  4 000007   200011 473500                    LDP3    M$LO$,,AUTO
         4 000010   300031 236100                    LDQ     25,,PR3
         4 000011   020000 316007                    CANQ    8192,DL
         4 000012   000017 601000 4                  TNZ     s:568

       58      567    1           THEN CALL M$OPEN(OPEN_LO) ALTRET(BAG_IT);

    567  4 000013   000110 630400 2                  EPPR0   OPEN_LO
         4 000014   450000 713400                    CLIMB   alt,open
         4 000015   410400 401760                    pmme    nvectors=18
         4 000016   000145 702000 4                  TSX2    BAG_IT

       59      568    2        IF TS_PRINT_HEADING THEN DO;

    568  4 000017   000000 234000 xsym               SZN     TS_PRINT_HEADING
         4 000020   000032 605000 4                  TPL     s:575

       60      569    2           FDS.FMT_ = VECTOR(HEADING);

    569  4 000021   000002 237000 5                  LDAQ    2
         4 000022   000052 757000 2                  STAQ    FDS

       61      570    2           FDS.NVECS#=0;

    570  4 000023   000063 450000 2                  STZ     FDS+9

       62      571    2           CALL X$FORMAT (FDS);
PL6.E3A0      #001=TSW$WRITE File=TSW$WRITE.:E05TSI                              WED 07/30/97 06:53 Page:11   

    571  4 000024   000004 630400 5                  EPPR0   4
         4 000025   000017 631400 xsym               EPPR1   B_VECTNIL+15
         4 000026   000000 701000 xent               TSX1    X$FORMAT
         4 000027   000000 011000                    NOP     0

       63      572    2           TS_PRINT_HEADING = '0'B;

    572  4 000030   000000 450000 xsym               STZ     TS_PRINT_HEADING

       64      573    2           END;

    573  4 000031   000044 710000 4                  TRA     s:581

       65      574    1         ELSE
       66      575    2         IF TS_PRINT_THRESH_HEADING THEN DO;

    575  4 000032   000000 234000 xsym               SZN     TS_PRINT_THRESH_HEADING
         4 000033   000044 605000 4                  TPL     s:581

       67      576    2           FDS.FMT_ = VECTOR(THRESH_HEADING);

    576  4 000034   000006 237000 5                  LDAQ    6
         4 000035   000052 757000 2                  STAQ    FDS

       68      577    2           FDS.NVECS#=0;

    577  4 000036   000063 450000 2                  STZ     FDS+9

       69      578    2           CALL X$FORMAT (FDS);

    578  4 000037   000004 630400 5                  EPPR0   4
         4 000040   000017 631400 xsym               EPPR1   B_VECTNIL+15
         4 000041   000000 701000 xent               TSX1    X$FORMAT
         4 000042   000000 011000                    NOP     0

       70      579    2           TS_PRINT_THRESH_HEADING = '0'B;
PL6.E3A0      #001=TSW$WRITE File=TSW$WRITE.:E05TSI                              WED 07/30/97 06:53 Page:12   

    579  4 000043   000000 450000 xsym               STZ     TS_PRINT_THRESH_HEADING

       71      580    2           END;

       72      581    1        FDS.FMT_ = FORMAT_VEC;

    581  4 000044   200003 470500                    LDP0    @FORMAT_VEC,,AUTO
         4 000045   000000 237100                    LDAQ    0,,PR0
         4 000046   000052 757000 2                  STAQ    FDS

       73      582    1        IF ADDR(DV1) ~= ADDR(NIL)

    582  4 000047   200004 236100                    LDQ     @DV1,,AUTO
         4 000050   000001 116000 xsym               CMPQ    B_VECTNIL+1
         4 000051   000055 600000 4                  TZE     s:584

       74      583    1           THEN DATA_VEC(0) = DV1;

    583  4 000052   200004 471500                    LDP1    @DV1,,AUTO
         4 000053   100000 237100                    LDAQ    0,,PR1
         4 000054   000042 757000 2                  STAQ    DATA_VEC

       75      584    1        IF ADDR(DV2) ~= ADDR(NIL)

    584  4 000055   200005 236100                    LDQ     @DV2,,AUTO
         4 000056   000001 116000 xsym               CMPQ    B_VECTNIL+1
         4 000057   000063 600000 4                  TZE     s:586

       76      585    1           THEN DATA_VEC(1) = DV2;

    585  4 000060   200005 471500                    LDP1    @DV2,,AUTO
         4 000061   100000 237100                    LDAQ    0,,PR1
         4 000062   000044 757000 2                  STAQ    DATA_VEC+2

       77      586    1        IF ADDR(DV3) ~= ADDR(NIL)

PL6.E3A0      #001=TSW$WRITE File=TSW$WRITE.:E05TSI                              WED 07/30/97 06:53 Page:13   
    586  4 000063   200006 236100                    LDQ     @DV3,,AUTO
         4 000064   000001 116000 xsym               CMPQ    B_VECTNIL+1
         4 000065   000071 600000 4                  TZE     s:588

       78      587    1           THEN DATA_VEC(2) = DV3;

    587  4 000066   200006 471500                    LDP1    @DV3,,AUTO
         4 000067   100000 237100                    LDAQ    0,,PR1
         4 000070   000046 757000 2                  STAQ    DATA_VEC+4

       79      588    1        IF ADDR(DV4) ~= ADDR(NIL)

    588  4 000071   200007 236100                    LDQ     @DV4,,AUTO
         4 000072   000001 116000 xsym               CMPQ    B_VECTNIL+1
         4 000073   000077 600000 4                  TZE     s:590

       80      589    1           THEN DATA_VEC(3) = DV4;

    589  4 000074   200007 471500                    LDP1    @DV4,,AUTO
         4 000075   100000 237100                    LDAQ    0,,PR1
         4 000076   000050 757000 2                  STAQ    DATA_VEC+6

       81      590    1        I = 0;

    590  4 000077   200010 450100                    STZ     I,,AUTO

       82      591    2        DO WHILE(DATA_VEC(I) ~= VECTOR(NIL) AND I < 4);

    591  4 000100   000104 710000 4                  TRA     s:593

       83      592    2           I = I + 1;

    592  4 000101   200010 235100                    LDA     I,,AUTO
         4 000102   000001 035007                    ADLA    1,DL
         4 000103   200010 755100                    STA     I,,AUTO

       84      593    2        END;                               /* DO WHILE                           */
PL6.E3A0      #001=TSW$WRITE File=TSW$WRITE.:E05TSI                              WED 07/30/97 06:53 Page:14   

    593  4 000104   200010 235100                    LDA     I,,AUTO
         4 000105   000001 735000                    ALS     1
         4 000106   000042 237005 2                  LDAQ    DATA_VEC,AL
         4 000107   000010 117000 5                  CMPAQ   8
         4 000110   000114 600000 4                  TZE     s:594
         4 000111   200010 235100                    LDA     I,,AUTO
         4 000112   000004 115007                    CMPA    4,DL
         4 000113   000101 602000 4                  TNC     s:592

       85      594    1        FDS.NVECS# = I;

    594  4 000114   200010 235100                    LDA     I,,AUTO
         4 000115   000063 755000 2                  STA     FDS+9

       86      595    1        FDS.BUF_.BOUND = M$LO$->F$DCB.WIDTH;

    595  4 000116   200011 470500                    LDP0    M$LO$,,AUTO
         4 000117   000004 236100                    LDQ     4,,PR0
         4 000120   000777 376007                    ANQ     511,DL
         4 000121   000020 736000                    QLS     16
         4 000122   000057 676000 2                  ERQ     FDS+5
         4 000123   000034 376000 xsym               ANQ     B_VECTNIL+28
         4 000124   000057 656000 2                  ERSQ    FDS+5

       87      596    1        IF (FDS.BUF_.BOUND = 0 OR FDS.BUF_.BOUND > 132)

    596  4 000125   000057 236000 2                  LDQ     FDS+5
         4 000126   000034 316000 xsym               CANQ    B_VECTNIL+28
         4 000127   000134 600000 4                  TZE     s:597
         4 000130   000057 236000 2                  LDQ     FDS+5
         4 000131   000034 376000 xsym               ANQ     B_VECTNIL+28
         4 000132   000012 116000 5                  CMPQ    10
         4 000133   000140 602000 4                  TNC     s:598

       88      597    1           THEN FDS.BUF_.BOUND = 132;

PL6.E3A0      #001=TSW$WRITE File=TSW$WRITE.:E05TSI                              WED 07/30/97 06:53 Page:15   
    597  4 000134   000057 236000 2                  LDQ     FDS+5
         4 000135   177777 376007                    ANQ     65535,DL
         4 000136   000041 276003                    ORQ     33,DU
         4 000137   000057 756000 2                  STQ     FDS+5

       89      598    1        CALL X$FORMAT(FDS);

    598  4 000140   000004 630400 5                  EPPR0   4
         4 000141   000017 631400 xsym               EPPR1   B_VECTNIL+15
         4 000142   000000 701000 xent               TSX1    X$FORMAT
         4 000143   000000 011000                    NOP     0

       90      599    1        RETURN;

    599  4 000144   000000 702200 xent               TSX2  ! X66_ARET

    596  4 000145                       BAG_IT       null
       91      600    1   BAG_IT:;
       92      601    1        CALL TSE$ERROR(0);

    601  4 000145   000013 630400 5                  EPPR0   11
         4 000146   000017 631400 xsym               EPPR1   B_VECTNIL+15
         4 000147   000000 701000 xent               TSX1    TSE$ERROR
         4 000150   000000 011000                    NOP     0

       93      602    1        RETURN;

    602  4 000151   000000 702200 xent               TSX2  ! X66_ARET
       94      603    1   END TSW$WRITE;

PL6.E3A0      #001=TSW$WRITE File=TSW$WRITE.:E05TSI                              WED 07/30/97 06:53 Page:16   
--  Include file information  --

   F$DCB.:E05TOU  cannot be made into a system file and is referenced.
   XU_FORMAT_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure TSW$WRITE.
PL6.E3A0      #001=TSW$WRITE File=TSW$WRITE.:E05TSI                              WED 07/30/97 06:53 Page:17   

 **** Variables and constants ****

  ****  Section 002  Data  TSW$WRITE

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

    42-0-0/d VECT        r     1 DATA_VEC(0:3)
    52-0-0/w STRC(1080)  r     1 FDS                      110-0-0/d STRC(2088)  r     1 OPEN_LO
     0-0-0/c CHAR(132)   r     1 OUTBUF

  ****  Section 003 RoData TSW$WRITE

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR(38)    r     1 HEADING                   12-0-0/c CHAR(22)    r     1 THRESH_HEADING

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     4-0-0/w PTR         r     1 @DV1                       5-0-0/w PTR         r     1 @DV2
     6-0-0/w PTR         r     1 @DV3                       7-0-0/w PTR         r     1 @DV4
     3-0-0/w PTR         r     1 @FORMAT_VEC               *0-0-0/d VECT        r     1 DV1
    *0-0-0/d VECT        r     1 DV2                       *0-0-0/d VECT        r     1 DV3
    *0-0-0/d VECT        r     1 DV4                       *0-0-0/d VECT        r     1 FORMAT_VEC
    10-0-0/w UBIN        r     1 I                         11-0-0/w PTR         r     1 M$LO$

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w BIT         r     1 TS_PRINT_HEADING
     0-0-0/w BIT         r     1 TS_PRINT_THRESH_HEADING
PL6.E3A0      #001=TSW$WRITE File=TSW$WRITE.:E05TSI                              WED 07/30/97 06:53 Page:18   

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d ASTR(3528)  r     1 F$DCB                      0-0-0N  NULL        r     1 M$LO


   Procedure TSW$WRITE requires 106 words for executable code.
   Procedure TSW$WRITE requires 10 words of local(AUTO) storage.

    No errors detected in file TSW$WRITE.:E05TSI    .
PL6.E3A0      #001=TSW$WRITE File=TSW$WRITE.:E05TSI                              WED 07/30/97 06:53 Page:19   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=TSW$WRITE File=TSW$WRITE.:E05TSI                              WED 07/30/97 06:53 Page:20   
          MINI XREF LISTING

BAG_IT
       596**LABEL     567--CALLALT
DATA_VEC
       321**DCL       380--DCLINIT   583<<ASSIGN    585<<ASSIGN    587<<ASSIGN    589<<ASSIGN    591>>DOWHILE
DV1
        12**DCL         8--PROC      582--IF        583>>ASSIGN
DV2
        13**DCL         8--PROC      584--IF        585>>ASSIGN
DV3
        14**DCL         8--PROC      586--IF        587>>ASSIGN
DV4
        15**DCL         8--PROC      588--IF        589>>ASSIGN
F$DCB.ACTPOS
       287**DCL       287--REDEF
F$DCB.ARS
       262**DCL       262--REDEF
F$DCB.ATTR
       280**DCL       281--REDEF
F$DCB.BORROW
       295**DCL       295--REDEF     295--REDEF     295--REDEF
F$DCB.DCBNAME.L
       309**DCL       309--IMP-SIZ
F$DCB.EOMCHAR
       266**DCL       266--REDEF
F$DCB.FCD
       275**DCL       566>>IF
F$DCB.FLDID
       290**DCL       290--REDEF
F$DCB.FORM$
       284**DCL       284--REDEF
F$DCB.FSECT
       300**DCL       300--REDEF
PL6.E3A0      #001=TSW$WRITE File=TSW$WRITE.:E05TSI                              WED 07/30/97 06:53 Page:21   
F$DCB.FSN
       277**DCL       277--REDEF     277--REDEF     278--REDEF
F$DCB.HEADER$
       283**DCL       283--REDEF
F$DCB.IXTNSIZE
       281**DCL       281--REDEF
F$DCB.LASTSTA$
       271**DCL       271--REDEF
F$DCB.LVL
       296**DCL       296--REDEF
F$DCB.NAME.C
       271**DCL       271--REDEF
F$DCB.NOEOF
       292**DCL       292--REDEF
F$DCB.NRECS
       282**DCL       282--REDEF
F$DCB.NRECX
       301**DCL       301--REDEF
F$DCB.OHDR
       293**DCL       293--REDEF
F$DCB.ORG
       276**DCL       276--REDEF
F$DCB.PRECNO
       299**DCL       299--REDEF
F$DCB.RCSZ
       304**DCL       304--REDEF
F$DCB.RES
       272**DCL       272--REDEF
F$DCB.SETX
       284**DCL       284--REDEF
F$DCB.TAB$
       283**DCL       284--REDEF
F$DCB.TDA
       298**DCL       298--REDEF
F$DCB.WIDTH
       269**DCL       595>>ASSIGN
PL6.E3A0      #001=TSW$WRITE File=TSW$WRITE.:E05TSI                              WED 07/30/97 06:53 Page:22   
F$DCB.WSN
       273**DCL       273--REDEF
FDS
       350**DCL       571<>CALL      578<>CALL      598<>CALL
FDS.BUF_.BOUND
       368**DCL       595<<ASSIGN    596>>IF        596>>IF        597<<ASSIGN
FDS.FMT_
       354**DCL       569<<ASSIGN    576<<ASSIGN    581<<ASSIGN
FDS.NVECS#
       378**DCL       570<<ASSIGN    577<<ASSIGN    594<<ASSIGN
FORMAT_VEC
        11**DCL         8--PROC      581>>ASSIGN
HEADING
       323**DCL       569--ASSIGN
I
       319**DCL       590<<ASSIGN    591>>DOWHILE   591>>DOWHILE   592<<ASSIGN    592>>ASSIGN    594>>ASSIGN
M$LO
       315**DCL       565--ASSIGN
M$LO$
       320**DCL       565<<ASSIGN    566>>IF        595>>ASSIGN
M$OPEN
        27**DCL-ENT   567--CALL
OPEN_LO
       519**DCL       567<>CALL
OPEN_LO.ACSVEH_
       521**DCL       522--REDEF
OPEN_LO.ALTKEYS_
       527**DCL       528--REDEF     528--REDEF
OPEN_LO.HDR_
       526**DCL       527--REDEF
OPEN_LO.TAB_
       525**DCL       526--REDEF
OPEN_LO.UHL_
       519**DCL       520--REDEF     520--REDEF
OPEN_LO.V
       528**DCL       519--DCLINIT
PL6.E3A0      #001=TSW$WRITE File=TSW$WRITE.:E05TSI                              WED 07/30/97 06:53 Page:23   
OPEN_LO.V.FSN#
       559**DCL       559--REDEF     559--REDEF
OPEN_LO.WSN_
       525**DCL       525--REDEF
OUTBUF
       318**DCL       368--DCLINIT   370--DCLINIT
THRESH_HEADING
       325**DCL       576--ASSIGN
TSE$ERROR
       312**DCL-ENT   601--CALL
TS_PRINT_HEADING
       322**DCL       568>>IF        572<<ASSIGN
TS_PRINT_THRESH_HEADING
       324**DCL       575>>IF        579<<ASSIGN
X$FORMAT
       328**DCL-ENT   571--CALL      578--CALL      598--CALL
