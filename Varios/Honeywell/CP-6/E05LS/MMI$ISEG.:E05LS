VERSION E05

PL6.E3A0      #001=MMI$GDP File=MMI$ISEG.:E05TSI                                 WED 07/30/97 03:21 Page:1    
        1        1        /*M* INSTRUCTION SEGMENT DYNAMIC DATA ALLOCATION ROUTINES.         */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* PLM=8,IND=2,THI=2,ENU=2,CSU=2,DTI=4,DCI=4,ECU=4,AND */
        8        8        MMI$GDP: PROC(EWSQ,N,BSIZE,START$) ALTRET;
        9        9    1   DCL EWSQ UBIN;                          /* Effective wsq - one making request */
       10       10    1   DCL N UBIN;                             /* # of pages to get or free          */
       11       11    1   DCL BSIZE SBIN WORD;
       12       12    1   DCL 1 START$ ALIGNED,                   /* Pointer to start of allocated area */
       13       13    1         2 OFFS UBIN (24) UNAL,
       14       14    1         2 SID BIT(12);
       15       15        /**/
       16       16    1   DCL MMG$SGVP ENTRY(5) ALTRET;           /* Routine to get seg-relative V.P.   */
       17       17    1   DCL MMG$SFVP ENTRY(5) ALTRET;           /* Routine to free seg-relative V.P.  */
       18       18    1   DCL JSN$BLNK2 ENTRY(2);
       19       19    1   DCL SC_MM26 ENTRY CONV(2,0);
       20       20    1   DCL SC_MM27 ENTRY CONV(2,0);
       21       21        /**/
       22       22    1   DCL VPNO SBIN;
       23       23    1   DCL ERR UBIN;
       24       24    1   DCL TEMP1 SBIN;
       25       25    1   DCL TEMP2 SBIN;
       26       26    1   DCL ALTFLG BIT(1);
       27       27    1   DCL B$JIT$ PTR SYMREF;
       28       28    1   DCL B$ROSEG$ PTR SYMREF;
       29       29        /**/
       30       30        %INCLUDE M_ERRORS_C;
       31       94        %INCLUDE M_ERRSET_C;
       32      118        %INCLUDE M$JIT_C;                       /* Mm jit definitions                 */
       33      638        %INCLUDE B$USER;                        /* User table definitions             */
       34      854        %B$USERREFS;
       35      858        %INCLUDE B$ROSEG;                       /* Read-only segment definitions      */
       36      921        %INCLUDE B_SEGIDS_C;                    /* System constant segids             */
       37     1460        %INCLUDE MM_DATA_R;                     /* Mm specific data references        */
PL6.E3A0      #001=MMI$GDP File=MMI$ISEG.:E05TSI                                 WED 07/30/97 03:21 Page:2    
       38     1980        %INCLUDE UD_EQU_E;
       39     2369        %INCLUDE ES_CNTRL_R;
       40     2381        /**/
       41     2382        %MODERR(MODULE='11'O);
       42     2390        /**/
       43     2391        %EJECT;
PL6.E3A0      #001=MMI$GDP File=MMI$ISEG.:E05TSI                                 WED 07/30/97 03:21 Page:3    
       44     2392        /*F*   NAME:   MMI$GDP                                             */
       45     2393        /*F*   PURPOSE: To allocate the next N pages from the dynamic data */
       46     2394        /*,*           area of the user's instruction segment.             */
       47     2395        /**/
       48     2396        /*S*    SCREECH_CODE: MMI-S$MM26                                   */
       49     2397        /*S*   TYPE:   SCREECH                                             */
       50     2398        /*S*   MESSAGE: ILLEGAL MONITOR-MODE CALL ON MMI ROUTINES.         */
       51     2399        /**/
       52     2400    1           IF EWSQ ~= %USERWSQ             /* Error if not user-mode request     */
       53     2401    2             THEN DO;
       54     2402        /*E*   ERROR:  MMI-E$USERONLY-0
       55     2403               MESSAGE: That service is allowed for user-mode programs only.*/
       56     2404                      %ERRSET(CODE=%E$USERONLY);
       57     2407    2                 ALTRETURN;
       58     2408    2               END;
       59     2409    1           VPNO = B$JIT$->B$JIT.TDP-%ISEGLO; /* Get page # to start allocating   */
       60     2410    1           TEMP2 = N;                      /* Copy # of pages to get             */
       61     2411    1           CALL MMG$SGVP(EWSQ,BITBIN(%ISSID),VPNO,TEMP2,ERR) ALTRET(BADGDP);
       62     2412    1           IF ES_CLEARMEM~=0 THEN CALL JSN$BLNK2(VPNO,TEMP2);
       63     2413    1           ALTFLG = %FALSE;                /* Dont take alternate return         */
       64     2414    1           GOTO  GDP1;                /* Oh MY... The things altret makes us do  */
       65     2415    1   BADGDP: ALTFLG = %TRUE;            /* Yes dear, take the alternate return     */
       66     2416        /*E*   ERROR:  MMI-E$CVMORGVP-0
       67     2417               MESSAGE: Page allocated via M$CVM or M$GVP encountered.     */
       68     2418    1           IF ERR = %E$NOTFREE THEN ERR = %E$CVMORGVP; /* Allocated pg hit       */
       69     2419
       70     2420        /* Now that we've gotten the dynamic data area right, adjust the   */
       71     2421        /* Jit cell for the top dynamic page no. And build a pointer and   */
       72     2422        /* Byte size to return which would frame the just allocated        */
       73     2423        /* Area of dynamic data if used in a vector.                       */
       74     2424
       75     2425    1   GDP1:   TEMP1 = VPNO * 4096;
       76     2426    1   GDP2:   B$JIT$->B$JIT.TDP = B$JIT$->B$JIT.TDP + TEMP2;
       77     2427    1           BSIZE = ((B$JIT$->B$JIT.TDP-%ISEGLO)*4096) - TEMP1 - 1; /*Size - 1    */
       78     2428        /* Handle the case where we're freeing 0 pages to see what is
       79     2429           currently allocated in the dynamic memory area.                 */
       80     2430    1           IF TEMP1 = -1 THEN TEMP1 = 0;
PL6.E3A0      #001=MMI$GDP File=MMI$ISEG.:E05TSI                                 WED 07/30/97 03:21 Page:4    
       81     2431    1           START$.OFFS = TEMP1 * 16;       /* Ptr to start of area               */
       82     2432    1           START$.SID = %ISSID;
       83     2433    1           IF ALTFLG
       84     2434    2             THEN DO;
       85     2435                      %ERRSET(CODE=ERR);
       86     2438    2                 ALTRETURN;                /* And altreturn                      */
       87     2439    2               END;
       88     2440    1             ELSE RETURN;
       89     2441        /**/
       90     2442        %EJECT;
PL6.E3A0      #001=MMI$GDP File=MMI$ISEG.:E05TSI                                 WED 07/30/97 03:21 Page:5    
       91     2443        /*F*   NAME:   MMI$FDP                                             */
       92     2444        /*F*   PURPOSE: To free N pages from the dynamic data area of the  */
       93     2445        /*,*           user's instruction segment, starting at JIT.TDP-1.  */
       94     2446    1   MMI$FDP: ENTRY(EWSQ,N,BSIZE,START$) ALTRET;
       95     2447        /**/
       96     2448        /**/
       97     2449    1           IF EWSQ ~= %USERWSQ             /* Error if not user-mode request     */
       98     2450    2             THEN DO;
       99     2451                      %ERRSET(CODE=%E$USERONLY);
      100     2454    2                 ALTRETURN;
      101     2455    2               END;
      102     2456
      103     2457    1           VPNO = B$JIT$->B$JIT.TDP -1-%ISEGLO; /* Get page # to start freeing   */
      104     2458    1           TEMP1 = B$JIT$->B$JIT.TDP - N;  /* See where we'll end up             */
      105     2459    1           IF TEMP1  <= B$JIT$->B$JIT.PUL  /* Freeing one's procedure is a no no */
      106     2460    2             THEN DO;
      107     2461    2                 ALTFLG = %TRUE;           /* Someone boo-boo'ed                 */
      108     2462        /*E*   ERROR:  MMI-E$BIGFREE-0
      109     2463               MESSAGE: Attempt to free more pages than are in dynamic data. */
      110     2464    2                 ERR = %E$BIGFREE;         /* Tried to free what you dont own    */
      111     2465    2                 TEMP2 = VPNO + %ISEGLO - B$JIT$->B$JIT.PUL; /* # pgs we can free */
      112     2466    2               END;
      113     2467    2             ELSE DO;
      114     2468    2                 ALTFLG = %FALSE;          /* Got it RIGHT...                    */
      115     2469    2                 TEMP2 = N;                /* So use the passed # to free        */
      116     2470    2               END;
      117     2471    1           CALL MMG$SFVP(EWSQ,BITBIN(%ISSID),VPNO,TEMP2,ERR) ALTRET(BADFDP);
      118     2472    1           TEMP2 = -TEMP2;
      119     2473    1   GDP3:   TEMP1 = (B$JIT$->B$JIT.PUL - %ISEGLO + 1) * 4096; /* Start of dd area */
      120     2474    1           GOTO  GDP2;
      121     2475        /**/
      122     2476    1   BADFDP:
      123     2477        /* Handle wierd case where N=1, and TDP is not one of the user's own
      124     2478           pages.                                                           */
      125     2479    1           IF TEMP2 = 1 THEN
      126     2480    2               DO;
      127     2481    2                 TEMP2 = 0;
PL6.E3A0      #001=MMI$GDP File=MMI$ISEG.:E05TSI                                 WED 07/30/97 03:21 Page:6    
      128     2482    2                 GOTO GDP3;
      129     2483    2               END;
      130     2484        /*S*    SCREECH_CODE: MMI-S$MM27                                   */
      131     2485        /*S*   TYPE:   SUA                                                 */
      132     2486        /*S*   MESSAGE: MMI$FDP & MMG$SFVP don't agree on size of ISEG.    */
      133     2487    1           IF ERR ~= %E$IOACTIVE THEN CALL SC_MM27;
      134     2488                %ERRSET(CODE=%E$IOACTIVE);
      135     2491    1           ALTRETURN;
      136     2492        /**/
      137     2493        %EJECT;
PL6.E3A0      #001=MMI$GDP File=MMI$ISEG.:E05TSI                                 WED 07/30/97 03:21 Page:7    
      138     2494        /*F*   NAME:   MMI$GDDL                                            */
      139     2495        /*F*   PURPOSE: To return to the user various information about    */
      140     2496        /*,*           his current dynamic data limits and the amount of   */
      141     2497        /*,*           memory it is still possible for him to obtain.      */
      142     2498    1   MMI$GDDL: ENTRY(EWSQ,N,BSIZE,START$) ALTRET;
      143     2499        /**/
      144     2500        /**/
      145     2501    1           IF EWSQ ~= %USERWSQ THEN        /* Not a user-mode request            */
      146     2502    2               DO;
      147     2503        /*,*           GRAMS ONLY.                                         */
      148     2504                      %ERRSET(CODE=%E$USERONLY);
      149     2507    2                 ALTRETURN;                /* Altreturn w/ JIT.ERR = 608         */
      150     2508    2               END;
      151     2509
      152     2510    1           TEMP1 = B$JIT.EUP - B$JIT.PUL;  /* Get dyn pages total                */
      153     2511    1           N = TEMP1+%UDSEGHI-%UDSEGLO+1-B$JIT.PCDD-B$JIT.PCDS;
              2511                    /*Max possible amt user can grow */
      154     2512        /* Now check against jit core limit unless user has max mem privilege */
      155     2513    1           IF NOT (B$JIT.PRIV.ACTIVE & %PR_MAXMEM#)
      156     2514    2             THEN DO;
      157     2515    2                 TEMP2 = B$JIT.MAXCORE - B$JIT.CURRCORE;
      158     2516    2                 IF TEMP2 > 0
      159     2517    2                   THEN
      160     2518    2                   N = MINIMUM (TEMP2 , N);
      161     2519    2                   ELSE
      162     2520    2                   N = 0;
      163     2521    2               END;
      164     2522        /* Now set up data for return to caller */
      165     2523    1           BSIZE = (TEMP1 * 4096) -1;
      166     2524    1           START$.OFFS = (B$JIT$->B$JIT.PUL - %ISEGLO + 1) * 4096 * 16;
      167     2525    1           START$.SID = %ISSID;
      168     2526    1           RETURN;
      169     2527        /**/
      170     2528    1   END MMI$GDP;

PL6.E3A0      #001=MMI$GDP File=MMI$ISEG.:E05TSI                                 WED 07/30/97 03:21 Page:8    
--  Include file information  --

   ES_CNTRL_R.:E05TOU  cannot be made into a system file and is referenced.
   UD_EQU_E.:E05TOU  is referenced.
   MM_MACRO_M.:E05TOU  is referenced.
   B_STRINGS_C.:E05TOU  is referenced.
   MM$SYSGEN.:E05TOU  is referenced.
   M_INFO_C.:E05TOU  is referenced.
   MM_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   B_SEGIDS_C.:E05TOU  is referenced.
   B$ROSEG.:E05TOU  cannot be made into a system file and is referenced.
   B$USER.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  is referenced.
   M$JIT_C.:E05TOU  cannot be made into a system file and is referenced.
   M_ERRSET_C.:E05TOU  is referenced.
   M_ERRORS_C.:E05TOU  is referenced.
      No diagnostics issued in procedure MMI$GDP.

   Procedure MMI$GDP requires 240 words for executable code.
   Procedure MMI$GDP requires 18 words of local(AUTO) storage.

    No errors detected in file MMI$ISEG.:E05TSI    .

PL6.E3A0      #001=MMI$GDP File=MMI$ISEG.:E05TSI                                 WED 07/30/97 03:21 Page:9    

 Object Unit name= MMI$GDP                                    File name= MMI$ISEG.:E05TOU
 UTS= JUL 30 '97 03:21:31.40 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0  RoData even  UTS      1      1  MMI$GDP
    1   Proc  even  none   240    360  MMI$GDP
    2  RoData even  none     5      5  MMI$GDP

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     1      0   yes    yes     yes      Std        4  MMI$GDP
     1    133          yes     yes      Std        4  MMI$FDP
     1    252          yes     yes      Std        4  MMI$GDDL

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       5 MMG$SGVP
         yes           Std       2 JSN$BLNK2
 yes     yes           Std       5 MMG$SFVP
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_AUTO_4
                       nStd      0 X66_AALT
                       nStd      0 X66_ARET
PL6.E3A0      #001=MMI$GDP File=MMI$ISEG.:E05TSI                                 WED 07/30/97 03:21 Page:10   

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     SC_MM27                               B$JIT$                           r    MM_BYP$
     ES_CLEARMEM                           B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ASLENTSID                             ISSID
PL6.E3A0      #001=MMI$GDP File=MMI$ISEG.:E05TSI                                 WED 07/30/97 03:21 Page:11   


        1        1        /*M* INSTRUCTION SEGMENT DYNAMIC DATA ALLOCATION ROUTINES.         */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* PLM=8,IND=2,THI=2,ENU=2,CSU=2,DTI=4,DCI=4,ECU=4,AND */
        8        8        MMI$GDP: PROC(EWSQ,N,BSIZE,START$) ALTRET;

      8  1 000000   000000 700200 xent  MMI$GDP      TSX0  ! X66_AUTO_4
         1 000001   000022 000004                    ZERO    18,4

        9        9    1   DCL EWSQ UBIN;                          /* Effective wsq - one making request */
       10       10    1   DCL N UBIN;                             /* # of pages to get or free          */
       11       11    1   DCL BSIZE SBIN WORD;
       12       12    1   DCL 1 START$ ALIGNED,                   /* Pointer to start of allocated area */
       13       13    1         2 OFFS UBIN (24) UNAL,
       14       14    1         2 SID BIT(12);
       15       15        /**/
       16       16    1   DCL MMG$SGVP ENTRY(5) ALTRET;           /* Routine to get seg-relative V.P.   */
       17       17    1   DCL MMG$SFVP ENTRY(5) ALTRET;           /* Routine to free seg-relative V.P.  */
       18       18    1   DCL JSN$BLNK2 ENTRY(2);
       19       19    1   DCL SC_MM26 ENTRY CONV(2,0);
       20       20    1   DCL SC_MM27 ENTRY CONV(2,0);
       21       21        /**/
       22       22    1   DCL VPNO SBIN;
       23       23    1   DCL ERR UBIN;
       24       24    1   DCL TEMP1 SBIN;
       25       25    1   DCL TEMP2 SBIN;
       26       26    1   DCL ALTFLG BIT(1);
       27       27    1   DCL B$JIT$ PTR SYMREF;
       28       28    1   DCL B$ROSEG$ PTR SYMREF;
       29       29        /**/
       30       30        %INCLUDE M_ERRORS_C;
       31       94        %INCLUDE M_ERRSET_C;
       32      118        %INCLUDE M$JIT_C;                       /* Mm jit definitions                 */
PL6.E3A0      #001=MMI$GDP File=MMI$ISEG.:E05TSI                                 WED 07/30/97 03:21 Page:12   
       33      638        %INCLUDE B$USER;                        /* User table definitions             */
       34      854        %B$USERREFS;
       35      858        %INCLUDE B$ROSEG;                       /* Read-only segment definitions      */
       36      921        %INCLUDE B_SEGIDS_C;                    /* System constant segids             */
       37     1460        %INCLUDE MM_DATA_R;                     /* Mm specific data references        */
       38     1980        %INCLUDE UD_EQU_E;
       39     2369        %INCLUDE ES_CNTRL_R;
       40     2381        /**/
       41     2382        %MODERR(MODULE='11'O);
       42     2390        /**/
       43     2391        %EJECT;
PL6.E3A0      #001=MMI$GDP File=MMI$ISEG.:E05TSI                                 WED 07/30/97 03:21 Page:13   
       44     2392        /*F*   NAME:   MMI$GDP                                             */
       45     2393        /*F*   PURPOSE: To allocate the next N pages from the dynamic data */
       46     2394        /*,*           area of the user's instruction segment.             */
       47     2395        /**/
       48     2396        /*S*    SCREECH_CODE: MMI-S$MM26                                   */
       49     2397        /*S*   TYPE:   SCREECH                                             */
       50     2398        /*S*   MESSAGE: ILLEGAL MONITOR-MODE CALL ON MMI ROUTINES.         */
       51     2399        /**/
       52     2400    1           IF EWSQ ~= %USERWSQ             /* Error if not user-mode request     */

   2400  1 000002   200003 470500                    LDP0    @EWSQ,,AUTO
         1 000003   000000 235100                    LDA     0,,PR0
         1 000004   000010 115007                    CMPA    8,DL
         1 000005   000014 600000 1                  TZE     s:2409

       53     2401    2             THEN DO;

       54     2402        /*E*   ERROR:  MMI-E$USERONLY-0
       55     2403               MESSAGE: That service is allowed for user-mode programs only.*/
       56     2404                      %ERRSET(CODE=%E$USERONLY);

   2405  1 000006   001140 236007                    LDQ     608,DL
         1 000007   000003 736000                    QLS     3
         1 000010   000000 276000 0                  ORQ     MMERR
         1 000011   000000 471400 xsym               LDP1    B$JIT$
         1 000012   100012 756100                    STQ     10,,PR1

       57     2407    2                 ALTRETURN;

   2407  1 000013   000000 702200 xent               TSX2  ! X66_AALT

       58     2408    2               END;
       59     2409    1           VPNO = B$JIT$->B$JIT.TDP-%ISEGLO; /* Get page # to start allocating   */

   2409  1 000014   000000 471400 xsym               LDP1    B$JIT$
         1 000015   100204 236100                    LDQ     132,,PR1
         1 000016   000022 772000                    QRL     18
PL6.E3A0      #001=MMI$GDP File=MMI$ISEG.:E05TSI                                 WED 07/30/97 03:21 Page:14   
         1 000017   000100 136007                    SBLQ    64,DL
         1 000020   200007 756100                    STQ     VPNO,,AUTO

       60     2410    1           TEMP2 = N;                      /* Copy # of pages to get             */

   2410  1 000021   200004 473500                    LDP3    @N,,AUTO
         1 000022   300000 235100                    LDA     0,,PR3
         1 000023   200012 755100                    STA     TEMP2,,AUTO

       61     2411    1           CALL MMG$SGVP(EWSQ,BITBIN(%ISSID),VPNO,TEMP2,ERR) ALTRET(BADGDP);

   2411  1 000024   200010 634500                    EPPR4   ERR,,AUTO
         1 000025   200020 454500                    STP4    ALTFLG+5,,AUTO
         1 000026   200012 635500                    EPPR5   TEMP2,,AUTO
         1 000027   200017 455500                    STP5    ALTFLG+4,,AUTO
         1 000030   200007 636500                    EPPR6   VPNO,,AUTO
         1 000031   200016 456500                    STP6    ALTFLG+3,,AUTO
         1 000032   000001 236000 2                  LDQ     1
         1 000033   200003 235100                    LDA     @EWSQ,,AUTO
         1 000034   200014 757100                    STAQ    ALTFLG+1,,AUTO
         1 000035   200014 630500                    EPPR0   ALTFLG+1,,AUTO
         1 000036   000023 631400 xsym               EPPR1   B_VECTNIL+19
         1 000037   000000 701000 xent               TSX1    MMG$SGVP
         1 000040   000055 702000 1                  TSX2    BADGDP

       62     2412    1           IF ES_CLEARMEM~=0 THEN CALL JSN$BLNK2(VPNO,TEMP2);

   2412  1 000041   000000 235000 xsym               LDA     ES_CLEARMEM
         1 000042   000053 600000 1                  TZE     s:2413

   2412  1 000043   200012 630500                    EPPR0   TEMP2,,AUTO
         1 000044   200015 450500                    STP0    ALTFLG+2,,AUTO
         1 000045   200007 631500                    EPPR1   VPNO,,AUTO
         1 000046   200014 451500                    STP1    ALTFLG+1,,AUTO
         1 000047   200014 630500                    EPPR0   ALTFLG+1,,AUTO
         1 000050   000020 631400 xsym               EPPR1   B_VECTNIL+16
         1 000051   000000 701000 xent               TSX1    JSN$BLNK2
PL6.E3A0      #001=MMI$GDP File=MMI$ISEG.:E05TSI                                 WED 07/30/97 03:21 Page:15   
         1 000052   000000 011000                    NOP     0

       63     2413    1           ALTFLG = %FALSE;                /* Dont take alternate return         */

   2413  1 000053   200013 450100                    STZ     ALTFLG,,AUTO

       64     2414    1           GOTO  GDP1;                /* Oh MY... The things altret makes us do  */

   2414  1 000054   000064 710000 1                  TRA     GDP1

       65     2415    1   BADGDP: ALTFLG = %TRUE;            /* Yes dear, take the alternate return     */

   2415  1 000055   400000 236003       BADGDP       LDQ     -131072,DU
         1 000056   200013 756100                    STQ     ALTFLG,,AUTO

       66     2416        /*E*   ERROR:  MMI-E$CVMORGVP-0
       67     2417               MESSAGE: Page allocated via M$CVM or M$GVP encountered.     */
       68     2418    1           IF ERR = %E$NOTFREE THEN ERR = %E$CVMORGVP; /* Allocated pg hit       */

   2418  1 000057   200010 235100                    LDA     ERR,,AUTO
         1 000060   001141 115007                    CMPA    609,DL
         1 000061   000064 601000 1                  TNZ     GDP1

   2418  1 000062   001137 235007                    LDA     607,DL
         1 000063   200010 755100                    STA     ERR,,AUTO

       69     2419
       70     2420        /* Now that we've gotten the dynamic data area right, adjust the   */
       71     2421        /* Jit cell for the top dynamic page no. And build a pointer and   */
       72     2422        /* Byte size to return which would frame the just allocated        */
       73     2423        /* Area of dynamic data if used in a vector.                       */
       74     2424
       75     2425    1   GDP1:   TEMP1 = VPNO * 4096;

   2425  1 000064   200007 235100       GDP1         LDA     VPNO,,AUTO
         1 000065   000014 735000                    ALS     12
         1 000066   200011 755100                    STA     TEMP1,,AUTO
PL6.E3A0      #001=MMI$GDP File=MMI$ISEG.:E05TSI                                 WED 07/30/97 03:21 Page:16   

       76     2426    1   GDP2:   B$JIT$->B$JIT.TDP = B$JIT$->B$JIT.TDP + TEMP2;

   2426  1 000067   000000 470400 xsym  GDP2         LDP0    B$JIT$
         1 000070   000204 236100                    LDQ     132,,PR0
         1 000071   000022 772000                    QRL     18
         1 000072   200012 036100                    ADLQ    TEMP2,,AUTO
         1 000073   000000 620006                    EAX0    0,QL
         1 000074   000204 740100                    STX0    132,,PR0

       77     2427    1           BSIZE = ((B$JIT$->B$JIT.TDP-%ISEGLO)*4096) - TEMP1 - 1; /*Size - 1    */

   2427  1 000075   000204 236100                    LDQ     132,,PR0
         1 000076   000006 772000                    QRL     6
         1 000077   000002 376000 2                  ANQ     2
         1 000100   000027 676000 xsym               ERQ     B_VECTNIL+23
         1 000101   000001 036007                    ADLQ    1,DL
         1 000102   200011 036100                    ADLQ    TEMP1,,AUTO
         1 000103   000027 676000 xsym               ERQ     B_VECTNIL+23
         1 000104   000001 136003                    SBLQ    1,DU
         1 000105   200005 471500                    LDP1    @BSIZE,,AUTO
         1 000106   100000 756100                    STQ     0,,PR1

       78     2428        /* Handle the case where we're freeing 0 pages to see what is
       79     2429           currently allocated in the dynamic memory area.                 */
       80     2430    1           IF TEMP1 = -1 THEN TEMP1 = 0;

   2430  1 000107   200011 235100                    LDA     TEMP1,,AUTO
         1 000110   000027 115000 xsym               CMPA    B_VECTNIL+23
         1 000111   000113 601000 1                  TNZ     s:2431

   2430  1 000112   200011 450100                    STZ     TEMP1,,AUTO

       81     2431    1           START$.OFFS = TEMP1 * 16;       /* Ptr to start of area               */

   2431  1 000113   200006 470500                    LDP0    @START$,,AUTO
         1 000114   200011 236100                    LDQ     TEMP1,,AUTO
PL6.E3A0      #001=MMI$GDP File=MMI$ISEG.:E05TSI                                 WED 07/30/97 03:21 Page:17   
         1 000115   000004 736000                    QLS     4
         1 000116   000014 736000                    QLS     12
         1 000117   000000 752174                    STCQ    0,'74'O,PR0

       82     2432    1           START$.SID = %ISSID;

   2432  1 000120   006000 236007                    LDQ     3072,DL
         1 000121   000000 752103                    STCQ    0,'03'O,PR0

       83     2433    1           IF ALTFLG

   2433  1 000122   200013 234100                    SZN     ALTFLG,,AUTO
         1 000123   000132 605000 1                  TPL     s:2440

       84     2434    2             THEN DO;

       85     2435                      %ERRSET(CODE=ERR);

   2436  1 000124   200010 236100                    LDQ     ERR,,AUTO
         1 000125   000003 736000                    QLS     3
         1 000126   000000 276000 0                  ORQ     MMERR
         1 000127   000000 473400 xsym               LDP3    B$JIT$
         1 000130   300012 756100                    STQ     10,,PR3

       86     2438    2                 ALTRETURN;                /* And altreturn                      */

   2438  1 000131   000000 702200 xent               TSX2  ! X66_AALT

       87     2439    2               END;
       88     2440    1             ELSE RETURN;

   2440  1 000132   000000 702200 xent               TSX2  ! X66_ARET

       89     2441        /**/
       90     2442        %EJECT;
PL6.E3A0      #001=MMI$GDP File=MMI$ISEG.:E05TSI                                 WED 07/30/97 03:21 Page:18   
       91     2443        /*F*   NAME:   MMI$FDP                                             */
       92     2444        /*F*   PURPOSE: To free N pages from the dynamic data area of the  */
       93     2445        /*,*           user's instruction segment, starting at JIT.TDP-1.  */
       94     2446    1   MMI$FDP: ENTRY(EWSQ,N,BSIZE,START$) ALTRET;

   2446  1 000133   000000 700200 xent  MMI$FDP      TSX0  ! X66_AUTO_4
         1 000134   000022 000004                    ZERO    18,4

       95     2447        /**/
       96     2448        /**/
       97     2449    1           IF EWSQ ~= %USERWSQ             /* Error if not user-mode request     */

   2449  1 000135   200003 470500                    LDP0    @EWSQ,,AUTO
         1 000136   000000 235100                    LDA     0,,PR0
         1 000137   000010 115007                    CMPA    8,DL
         1 000140   000147 600000 1                  TZE     s:2457

       98     2450    2             THEN DO;

       99     2451                      %ERRSET(CODE=%E$USERONLY);

   2452  1 000141   001140 236007                    LDQ     608,DL
         1 000142   000003 736000                    QLS     3
         1 000143   000000 276000 0                  ORQ     MMERR
         1 000144   000000 471400 xsym               LDP1    B$JIT$
         1 000145   100012 756100                    STQ     10,,PR1

      100     2454    2                 ALTRETURN;

   2454  1 000146   000000 702200 xent               TSX2  ! X66_AALT

      101     2455    2               END;
      102     2456
      103     2457    1           VPNO = B$JIT$->B$JIT.TDP -1-%ISEGLO; /* Get page # to start freeing   */

   2457  1 000147   000000 471400 xsym               LDP1    B$JIT$
         1 000150   100204 236100                    LDQ     132,,PR1
PL6.E3A0      #001=MMI$GDP File=MMI$ISEG.:E05TSI                                 WED 07/30/97 03:21 Page:19   
         1 000151   000022 772000                    QRL     18
         1 000152   000101 136007                    SBLQ    65,DL
         1 000153   200007 756100                    STQ     VPNO,,AUTO

      104     2458    1           TEMP1 = B$JIT$->B$JIT.TDP - N;  /* See where we'll end up             */

   2458  1 000154   200004 473500                    LDP3    @N,,AUTO
         1 000155   100204 236100                    LDQ     132,,PR1
         1 000156   000022 772000                    QRL     18
         1 000157   300000 136100                    SBLQ    0,,PR3
         1 000160   200011 756100                    STQ     TEMP1,,AUTO

      105     2459    1           IF TEMP1  <= B$JIT$->B$JIT.PUL  /* Freeing one's procedure is a no no */

   2459  1 000161   100176 236100                    LDQ     126,,PR1
         1 000162   777777 376007                    ANQ     -1,DL
         1 000163   200011 116100                    CMPQ    TEMP1,,AUTO
         1 000164   000201 604000 1                  TMI     s:2468

      106     2460    2             THEN DO;

      107     2461    2                 ALTFLG = %TRUE;           /* Someone boo-boo'ed                 */

   2461  1 000165   400000 236003                    LDQ     -131072,DU
         1 000166   200013 756100                    STQ     ALTFLG,,AUTO

      108     2462        /*E*   ERROR:  MMI-E$BIGFREE-0
      109     2463               MESSAGE: Attempt to free more pages than are in dynamic data. */
      110     2464    2                 ERR = %E$BIGFREE;         /* Tried to free what you dont own    */

   2464  1 000167   001136 235007                    LDA     606,DL
         1 000170   200010 755100                    STA     ERR,,AUTO

      111     2465    2                 TEMP2 = VPNO + %ISEGLO - B$JIT$->B$JIT.PUL; /* # pgs we can free */

   2465  1 000171   100176 236100                    LDQ     126,,PR1
         1 000172   777777 376007                    ANQ     -1,DL
PL6.E3A0      #001=MMI$GDP File=MMI$ISEG.:E05TSI                                 WED 07/30/97 03:21 Page:20   
         1 000173   200014 756100                    STQ     ALTFLG+1,,AUTO
         1 000174   200007 236100                    LDQ     VPNO,,AUTO
         1 000175   200014 136100                    SBLQ    ALTFLG+1,,AUTO
         1 000176   000100 036007                    ADLQ    64,DL
         1 000177   200012 756100                    STQ     TEMP2,,AUTO

      112     2466    2               END;

   2466  1 000200   000204 710000 1                  TRA     s:2471

      113     2467    2             ELSE DO;

      114     2468    2                 ALTFLG = %FALSE;          /* Got it RIGHT...                    */

   2468  1 000201   200013 450100                    STZ     ALTFLG,,AUTO

      115     2469    2                 TEMP2 = N;                /* So use the passed # to free        */

   2469  1 000202   300000 235100                    LDA     0,,PR3
         1 000203   200012 755100                    STA     TEMP2,,AUTO

      116     2470    2               END;

      117     2471    1           CALL MMG$SFVP(EWSQ,BITBIN(%ISSID),VPNO,TEMP2,ERR) ALTRET(BADFDP);

   2471  1 000204   200010 634500                    EPPR4   ERR,,AUTO
         1 000205   200020 454500                    STP4    ALTFLG+5,,AUTO
         1 000206   200012 635500                    EPPR5   TEMP2,,AUTO
         1 000207   200017 455500                    STP5    ALTFLG+4,,AUTO
         1 000210   200007 636500                    EPPR6   VPNO,,AUTO
         1 000211   200016 456500                    STP6    ALTFLG+3,,AUTO
         1 000212   000001 236000 2                  LDQ     1
         1 000213   200003 235100                    LDA     @EWSQ,,AUTO
         1 000214   200014 757100                    STAQ    ALTFLG+1,,AUTO
         1 000215   200014 630500                    EPPR0   ALTFLG+1,,AUTO
         1 000216   000023 631400 xsym               EPPR1   B_VECTNIL+19
         1 000217   000000 701000 xent               TSX1    MMG$SFVP
PL6.E3A0      #001=MMI$GDP File=MMI$ISEG.:E05TSI                                 WED 07/30/97 03:21 Page:21   
         1 000220   000232 702000 1                  TSX2    BADFDP

      118     2472    1           TEMP2 = -TEMP2;

   2472  1 000221   200012 335100                    LCA     TEMP2,,AUTO
         1 000222   200012 755100                    STA     TEMP2,,AUTO

      119     2473    1   GDP3:   TEMP1 = (B$JIT$->B$JIT.PUL - %ISEGLO + 1) * 4096; /* Start of dd area */

   2473  1 000223   000000 470400 xsym  GDP3         LDP0    B$JIT$
         1 000224   000176 236100                    LDQ     126,,PR0
         1 000225   000014 736000                    QLS     12
         1 000226   000002 376000 2                  ANQ     2
         1 000227   770000 136007                    SBLQ    -4096,DL
         1 000230   200011 756100                    STQ     TEMP1,,AUTO

      120     2474    1           GOTO  GDP2;

   2474  1 000231   000067 710000 1                  TRA     GDP2

      121     2475        /**/
      122     2476    1   BADFDP:
      123     2477        /* Handle wierd case where N=1, and TDP is not one of the user's own
      124     2478           pages.                                                           */
      125     2479    1           IF TEMP2 = 1 THEN

   2479  1 000232   200012 235100       BADFDP       LDA     TEMP2,,AUTO
         1 000233   000001 115007                    CMPA    1,DL
         1 000234   000237 601000 1                  TNZ     s:2487

      126     2480    2               DO;

      127     2481    2                 TEMP2 = 0;

   2481  1 000235   200012 450100                    STZ     TEMP2,,AUTO

      128     2482    2                 GOTO GDP3;
PL6.E3A0      #001=MMI$GDP File=MMI$ISEG.:E05TSI                                 WED 07/30/97 03:21 Page:22   

   2482  1 000236   000223 710000 1                  TRA     GDP3

      129     2483    2               END;
      130     2484        /*S*    SCREECH_CODE: MMI-S$MM27                                   */
      131     2485        /*S*   TYPE:   SUA                                                 */
      132     2486        /*S*   MESSAGE: MMI$FDP & MMG$SFVP don't agree on size of ISEG.    */
      133     2487    1           IF ERR ~= %E$IOACTIVE THEN CALL SC_MM27;

   2487  1 000237   200010 236100                    LDQ     ERR,,AUTO
         1 000240   001160 116007                    CMPQ    624,DL
         1 000241   000244 600000 1                  TZE     s:2489

   2487  1 000242   000000 713400 xsym               CLIMB   SC_MM27
         1 000243   000000 600000 xsid               climb   nvectors=         0

      134     2488                %ERRSET(CODE=%E$IOACTIVE);

   2489  1 000244   001160 236007                    LDQ     624,DL
         1 000245   000003 736000                    QLS     3
         1 000246   000000 276000 0                  ORQ     MMERR
         1 000247   000000 470400 xsym               LDP0    B$JIT$
         1 000250   000012 756100                    STQ     10,,PR0

      135     2491    1           ALTRETURN;

   2491  1 000251   000000 702200 xent               TSX2  ! X66_AALT

      136     2492        /**/
      137     2493        %EJECT;
PL6.E3A0      #001=MMI$GDP File=MMI$ISEG.:E05TSI                                 WED 07/30/97 03:21 Page:23   
      138     2494        /*F*   NAME:   MMI$GDDL                                            */
      139     2495        /*F*   PURPOSE: To return to the user various information about    */
      140     2496        /*,*           his current dynamic data limits and the amount of   */
      141     2497        /*,*           memory it is still possible for him to obtain.      */
      142     2498    1   MMI$GDDL: ENTRY(EWSQ,N,BSIZE,START$) ALTRET;

   2498  1 000252   000000 700200 xent  MMI$GDDL     TSX0  ! X66_AUTO_4
         1 000253   000022 000004                    ZERO    18,4

      143     2499        /**/
      144     2500        /**/
      145     2501    1           IF EWSQ ~= %USERWSQ THEN        /* Not a user-mode request            */

   2501  1 000254   200003 470500                    LDP0    @EWSQ,,AUTO
         1 000255   000000 235100                    LDA     0,,PR0
         1 000256   000010 115007                    CMPA    8,DL
         1 000257   000266 600000 1                  TZE     s:2510

      146     2502    2               DO;

      147     2503        /*,*           GRAMS ONLY.                                         */
      148     2504                      %ERRSET(CODE=%E$USERONLY);

   2505  1 000260   001140 236007                    LDQ     608,DL
         1 000261   000003 736000                    QLS     3
         1 000262   000000 276000 0                  ORQ     MMERR
         1 000263   000000 471400 xsym               LDP1    B$JIT$
         1 000264   100012 756100                    STQ     10,,PR1

      149     2507    2                 ALTRETURN;                /* Altreturn w/ JIT.ERR = 608         */

   2507  1 000265   000000 702200 xent               TSX2  ! X66_AALT

      150     2508    2               END;
      151     2509
      152     2510    1           TEMP1 = B$JIT.EUP - B$JIT.PUL;  /* Get dyn pages total                */

PL6.E3A0      #001=MMI$GDP File=MMI$ISEG.:E05TSI                                 WED 07/30/97 03:21 Page:24   
   2510  1 000266   000000 471400 xsym               LDP1    B$JIT$
         1 000267   100176 236100                    LDQ     126,,PR1
         1 000270   777777 376007                    ANQ     -1,DL
         1 000271   200014 756100                    STQ     ALTFLG+1,,AUTO
         1 000272   100204 236100                    LDQ     132,,PR1
         1 000273   777777 376007                    ANQ     -1,DL
         1 000274   200014 136100                    SBLQ    ALTFLG+1,,AUTO
         1 000275   200011 756100                    STQ     TEMP1,,AUTO

      153     2511    1           N = TEMP1+%UDSEGHI-%UDSEGLO+1-B$JIT.PCDD-B$JIT.PCDS;
              2511                    /*Max possible amt user can grow */

   2511  1 000276   100203 236100                    LDQ     131,,PR1
         1 000277   777777 376007                    ANQ     -1,DL
         1 000300   200014 756100                    STQ     ALTFLG+1,,AUTO
         1 000301   200011 236100                    LDQ     TEMP1,,AUTO
         1 000302   200014 136100                    SBLQ    ALTFLG+1,,AUTO
         1 000303   200015 756100                    STQ     ALTFLG+2,,AUTO
         1 000304   100202 236100                    LDQ     130,,PR1
         1 000305   000022 772000                    QRL     18
         1 000306   200016 756100                    STQ     ALTFLG+3,,AUTO
         1 000307   200015 236100                    LDQ     ALTFLG+2,,AUTO
         1 000310   200016 136100                    SBLQ    ALTFLG+3,,AUTO
         1 000311   002650 036007                    ADLQ    1448,DL
         1 000312   200004 473500                    LDP3    @N,,AUTO
         1 000313   300000 756100                    STQ     0,,PR3

      154     2512        /* Now check against jit core limit unless user has max mem privilege */
      155     2513    1           IF NOT (B$JIT.PRIV.ACTIVE & %PR_MAXMEM#)

   2513  1 000314   000000 471400 xsym               LDP1    B$JIT$
         1 000315   100013 236100                    LDQ     11,,PR1
         1 000316   000006 376000 xsym               ANQ     B_VECTNIL+6
         1 000317   000340 601000 1                  TNZ     s:2523

      156     2514    2             THEN DO;

PL6.E3A0      #001=MMI$GDP File=MMI$ISEG.:E05TSI                                 WED 07/30/97 03:21 Page:25   
      157     2515    2                 TEMP2 = B$JIT.MAXCORE - B$JIT.CURRCORE;

   2515  1 000320   100210 236100                    LDQ     136,,PR1
         1 000321   777777 376007                    ANQ     -1,DL
         1 000322   200014 756100                    STQ     ALTFLG+1,,AUTO
         1 000323   100210 236100                    LDQ     136,,PR1
         1 000324   000022 772000                    QRL     18
         1 000325   200014 136100                    SBLQ    ALTFLG+1,,AUTO
         1 000326   200012 756100                    STQ     TEMP2,,AUTO

      158     2516    2                 IF TEMP2 > 0

   2516  1 000327   000337 604400 1                  TMOZ    s:2520

      159     2517    2                   THEN
      160     2518    2                   N = MINIMUM (TEMP2 , N);

   2518  1 000330   300000 236100                    LDQ     0,,PR3
         1 000331   000334 604000 1                  TMI     s:2518+4
         1 000332   200012 116100                    CMPQ    TEMP2,,AUTO
         1 000333   000335 604400 1                  TMOZ    s:2518+5
         1 000334   200012 236100                    LDQ     TEMP2,,AUTO
         1 000335   300000 756100                    STQ     0,,PR3
         1 000336   000340 710000 1                  TRA     s:2523

      161     2519    2                   ELSE
      162     2520    2                   N = 0;

   2520  1 000337   300000 450100                    STZ     0,,PR3

      163     2521    2               END;

      164     2522        /* Now set up data for return to caller */
      165     2523    1           BSIZE = (TEMP1 * 4096) -1;

   2523  1 000340   200005 471500                    LDP1    @BSIZE,,AUTO
         1 000341   200011 235100                    LDA     TEMP1,,AUTO
PL6.E3A0      #001=MMI$GDP File=MMI$ISEG.:E05TSI                                 WED 07/30/97 03:21 Page:26   
         1 000342   000014 735000                    ALS     12
         1 000343   000001 135007                    SBLA    1,DL
         1 000344   100000 755100                    STA     0,,PR1

      166     2524    1           START$.OFFS = (B$JIT$->B$JIT.PUL - %ISEGLO + 1) * 4096 * 16;

   2524  1 000345   200006 474500                    LDP4    @START$,,AUTO
         1 000346   000000 475400 xsym               LDP5    B$JIT$
         1 000347   500176 236100                    LDQ     126,,PR5
         1 000350   000020 736000                    QLS     16
         1 000351   000003 376000 2                  ANQ     3
         1 000352   000004 136000 2                  SBLQ    4
         1 000353   000014 736000                    QLS     12
         1 000354   400000 752174                    STCQ    0,'74'O,PR4

      167     2525    1           START$.SID = %ISSID;

   2525  1 000355   006000 236007                    LDQ     3072,DL
         1 000356   400000 752103                    STCQ    0,'03'O,PR4

      168     2526    1           RETURN;

   2526  1 000357   000000 702200 xent               TSX2  ! X66_ARET

MMERR
 Sect OctLoc
   0     000   151511 400000                                                    i...

(unnamed)
 Sect OctLoc
   2     000   000000 006000   000000 006000   007777 770000   177777 600000    ................
   2     004   000017 600000                                                    ....
      169     2527        /**/
      170     2528    1   END MMI$GDP;

PL6.E3A0      #001=MMI$GDP File=MMI$ISEG.:E05TSI                                 WED 07/30/97 03:21 Page:27   
--  Include file information  --

   ES_CNTRL_R.:E05TOU  cannot be made into a system file and is referenced.
   UD_EQU_E.:E05TOU  is referenced.
   MM_MACRO_M.:E05TOU  is referenced.
   B_STRINGS_C.:E05TOU  is referenced.
   MM$SYSGEN.:E05TOU  is referenced.
   M_INFO_C.:E05TOU  is referenced.
   MM_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   B_SEGIDS_C.:E05TOU  is referenced.
   B$ROSEG.:E05TOU  cannot be made into a system file and is referenced.
   B$USER.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  is referenced.
   M$JIT_C.:E05TOU  cannot be made into a system file and is referenced.
   M_ERRSET_C.:E05TOU  is referenced.
   M_ERRORS_C.:E05TOU  is referenced.
      No diagnostics issued in procedure MMI$GDP.
PL6.E3A0      #001=MMI$GDP File=MMI$ISEG.:E05TSI                                 WED 07/30/97 03:21 Page:28   

 **** Variables and constants ****

  ****  Section 000 RoData MMI$GDP

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/b STRC        r     1 MMERR

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     5-0-0/w PTR         r     1 @BSIZE                     3-0-0/w PTR         r     1 @EWSQ
     4-0-0/w PTR         r     1 @N                         6-0-0/w PTR         r     1 @START$
    13-0-0/b BIT         r     1 ALTFLG                    *0-0-0/w SBIN        r     1 BSIZE
    10-0-0/w UBIN        r     1 ERR                       *0-0-0/w UBIN        r     1 EWSQ
    *0-0-0/w UBIN        r     1 N                         *0-0-0/w STRC        r     1 START$
    11-0-0/w SBIN        r     1 TEMP1                     12-0-0/w SBIN        r     1 TEMP2
     7-0-0/w SBIN        r     1 VPNO

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 B$JIT$                     0-0-0/w UBIN        r     1 ES_CLEARMEM
     0-0-0/w PTR         r     1 MM_BYP$

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d STRC(8856)  r     1 B$JIT

PL6.E3A0      #001=MMI$GDP File=MMI$ISEG.:E05TSI                                 WED 07/30/97 03:21 Page:29   

   Procedure MMI$GDP requires 240 words for executable code.
   Procedure MMI$GDP requires 18 words of local(AUTO) storage.

    No errors detected in file MMI$ISEG.:E05TSI    .
PL6.E3A0      #001=MMI$GDP File=MMI$ISEG.:E05TSI                                 WED 07/30/97 03:21 Page:30   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=MMI$GDP File=MMI$ISEG.:E05TSI                                 WED 07/30/97 03:21 Page:31   
          MINI XREF LISTING

ALTFLG
        26**DCL      2413<<ASSIGN   2415<<ASSIGN   2433>>IF       2461<<ASSIGN   2468<<ASSIGN
B$DO.ECCINFO
       789**DCL       790--REDEF
B$JIT.CURRCORE
       536**DCL      2515>>ASSIGN
B$JIT.ERR
       445**DCL      2405<<ASSIGN   2436<<ASSIGN   2452<<ASSIGN   2489<<ASSIGN   2505<<ASSIGN
B$JIT.ERR.MID
       446**DCL       446--REDEF
B$JIT.EUP
       534**DCL      2510>>ASSIGN
B$JIT.JRESPEAK
       536**DCL       537--REDEF
B$JIT.MAXCORE
       535**DCL      2515>>ASSIGN
B$JIT.PCDD
       534**DCL      2511>>ASSIGN
B$JIT.PCDS
       533**DCL      2511>>ASSIGN
B$JIT.PRIV.ACTIVE
       446**DCL      2513>>IF
B$JIT.PUL
       532**DCL      2459>>IF       2465>>ASSIGN   2473>>ASSIGN   2510>>ASSIGN   2524>>ASSIGN
B$JIT.TDP
       534**DCL      2409>>ASSIGN   2426<<ASSIGN   2426>>ASSIGN   2427>>ASSIGN   2457>>ASSIGN   2458>>ASSIGN
B$JIT$
        27**DCL       440--IMP-PTR  2405>>ASSIGN   2409>>ASSIGN   2426>>ASSIGN   2426>>ASSIGN   2427>>ASSIGN
      2436>>ASSIGN   2452>>ASSIGN   2457>>ASSIGN   2458>>ASSIGN   2459>>IF       2465>>ASSIGN   2473>>ASSIGN
      2489>>ASSIGN   2505>>ASSIGN   2510>>ASSIGN   2510>>ASSIGN   2511>>ASSIGN   2511>>ASSIGN   2513>>IF
      2515>>ASSIGN   2515>>ASSIGN   2524>>ASSIGN
B$U.MISC
PL6.E3A0      #001=MMI$GDP File=MMI$ISEG.:E05TSI                                 WED 07/30/97 03:21 Page:32   
       768**DCL       769--REDEF
B$USER.MISC
       844**DCL       845--REDEF
BADFDP
      2479**LABEL    2471--CALLALT
BADGDP
      2415**LABEL    2411--CALLALT
BSIZE
        11**DCL         8--PROC     2427<<ASSIGN   2446--ENTRY    2498--ENTRY    2523<<ASSIGN
ERR
        23**DCL      2411<>CALL     2418>>IF       2418<<ASSIGN   2436>>ASSIGN   2464<<ASSIGN   2471<>CALL
      2487>>IF
ES_CLEARMEM
      2379**DCL      2412>>IF
EWSQ
         9**DCL         8--PROC     2400>>IF       2411<>CALL     2446--ENTRY    2449>>IF       2471<>CALL
      2498--ENTRY    2501>>IF
GDP1
      2425**LABEL    2414--GOTO
GDP2
      2426**LABEL    2474--GOTO
GDP3
      2473**LABEL    2482--GOTO
JSN$BLNK2
        18**DCL-ENT  2412--CALL
MM$DESC.BOUND
      1931**DCL      1932--REDEF
MM$DESC.FLGS
      1932**DCL      1932--REDEF
MM$PPUT.USER#
      1920**DCL      1920--REDEF
MMERR
      2383**DCL      2405>>ASSIGN   2436>>ASSIGN   2452>>ASSIGN   2489>>ASSIGN   2505>>ASSIGN
MMG$SFVP
        17**DCL-ENT  2471--CALL
MMG$SGVP
PL6.E3A0      #001=MMI$GDP File=MMI$ISEG.:E05TSI                                 WED 07/30/97 03:21 Page:33   
        16**DCL-ENT  2411--CALL
MM_BYP$
      1851**DCL      1851--IMP-PTR
N
        10**DCL         8--PROC     2410>>ASSIGN   2446--ENTRY    2458>>ASSIGN   2469>>ASSIGN   2498--ENTRY
      2511<<ASSIGN   2518<<ASSIGN   2518>>ASSIGN   2520<<ASSIGN
SC_MM27
        20**DCL-ENT  2487--CALL
START$
        12**DCL         8--PROC     2446--ENTRY    2498--ENTRY
START$.OFFS
        13**DCL      2431<<ASSIGN   2524<<ASSIGN
START$.SID
        14**DCL      2432<<ASSIGN   2525<<ASSIGN
TEMP1
        24**DCL      2425<<ASSIGN   2427>>ASSIGN   2430>>IF       2430<<ASSIGN   2431>>ASSIGN   2458<<ASSIGN
      2459>>IF       2473<<ASSIGN   2510<<ASSIGN   2511>>ASSIGN   2523>>ASSIGN
TEMP2
        25**DCL      2410<<ASSIGN   2411<>CALL     2412<>CALL     2426>>ASSIGN   2465<<ASSIGN   2469<<ASSIGN
      2471<>CALL     2472<<ASSIGN   2472>>ASSIGN   2479>>IF       2481<<ASSIGN   2515<<ASSIGN   2516>>IF
      2518>>ASSIGN
VPNO
        22**DCL      2409<<ASSIGN   2411<>CALL     2412<>CALL     2425>>ASSIGN   2457<<ASSIGN   2465>>ASSIGN
      2471<>CALL
