VERSION E05

PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:1    
        1        1        /*M* FOF$FILE File routines for OUTSYM ghost */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* DMC,PLM=6,IND=0,IDT=2,SDI=2,CTI=0,ENU=0,AND,DCI=4,CSU=2,ECU=4,THI=0,DTI=0,STI=1
                 7        ,IAD=0,PRB */
        8        8        /**/
        9        9        /*P* NAME:         FOF$FILE
       10       10             PURPOSE:      To provide file handling routines for the
       11       11                           OUTSYM ghost.
       12       12             DESCRIPTION:  The OUTSYM ghost retains information concerning
       13       13                           output symbiont files in linked lists in a
       14       14                           dynamic data segment.  Each element of these
       15       15                           lists is called a file table entry, and
       16       16                           each is framed by the based structure FO$FIL.
       17       17
       18       18                           This module contains all routines which manage
       19       19                           the files and file tables.  */
       20       20        /**/
       21       21        /**/
       22       22        FOF$FILE: PROC(FIL_SYSID,FIL_NUM,XFIL_CNUM,RECOVERING,FIL_BOOTID) ALTRET;
       23       23
       24       24
       25       25
       26       26        /**/
       27       27        /* PARAMETERS */
       28       28        /**/
       29       29    1   DCL FIL_SYSID UBIN WORD;
       30       30    1   DCL KEYIN$ REDEF FIL_SYSID PTR;
       31       31    1   DCL PASSED_EXT$ REDEF FIL_SYSID PTR;
       32       32    1   DCL XFUCODE REDEF FIL_SYSID UBIN WORD;
       33       33    1   DCL XJOB_SYSID REDEF FIL_SYSID UBIN WORD;
       34       34    1   DCL FIL_NUM UBIN WORD;
       35       35    1   DCL FIL_NUMR REDEF FIL_NUM SBIN WORD;
       36       36    1   DCL XFIL_CNUM UBIN WORD;
PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:2    
       37       37    1   DCL BATCHFLG REDEF XFIL_CNUM UBIN WORD;
       38       38    1   DCL SPILLDISP REDEF XFIL_CNUM UBIN WORD;
       39       39    1   DCL RECOVERING UBIN WORD;
       40       40    1   DCL FIL_BOOTID CHAR(3) ALIGNED;
       41       41
       42       42
       43       43
       44       44        /**/
       45       45        /* INCLUDES */
       46       46        /**/
       47       47        %INCLUDE CP_6;
       48      128        %INCLUDE F$DCB;
       49      177        %INCLUDE FM$FIT;
       50      398        %INCLUDE FM$GRAN;
       51      467        %INCLUDE FS$FIT;
       52      510 S      %INCLUDE B$JIT_C;
       53      511        %INCLUDE OC_MESSHD_C;
       54      564        %INCLUDE F_ERRORS_C;
       55      804        %INCLUDE FOO_SUBS_C;
       56     1040        %INCLUDE FOO_MAC_C;
       57     1788        %INCLUDE FOO_DATA_R;
       58     2954        %INCLUDE FOM_SUBS_C;
       59     3017        %INCLUDE OC_SUBS_C;
       60     3748        %INCLUDE FO_SCODE_C;
       61     3776        %INCLUDE CP_6_SUBS;
       62     4316
       63     4317        %INCLUDE XUD_UTS_M;
       64     4399
       65     4400        %XUD$UTS_ENTRIES;                       /* expand routine dcls */
       66     4432        %XUD_UTS_EQU;                           /* expand constant EQUates */
       67     4443
       68     4444
       69     4445
       70     4446        /**/
       71     4447        /*  BASED STRUCTURES */
       72     4448        /**/
       73     4449    1   DCL PTR$ PTR BASED;
PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:3    
       74     4450        %B$TCB (STCLASS="BASED(B$TCB$)");
       75     4453        %B$ALT;
       76     4461        %FM$FIT;
       77     4464        %CODE01;
       78     4468        %CODE03;
       79     4475        %CODE04;
       80     4483        %CODE16;
       81     4491        %B$JIT0;
       82     4580        %A$JIT6X;
       83     4583        %FS$DEST;
       84     4591        %FM$GRAN;
       85     4595        %FS$DEST (NAME=FS$FITDEST,SIZ=FIT);
       86     4603        %VLP_FPRG (FPTN=FPRG_DATA,STCLASS=BASED);
       87     4624
       88     4625
       89     4626
       90     4627        /**/
       91     4628        /*  AUTO */
       92     4629        /**/
       93     4630    1   DCL I UBIN WORD;
       94     4631    1   DCL IR REDEF I SBIN;
       95     4632    1   DCL NUM UBIN WORD;
       96     4633    1   DCL KNUM UBIN HALF UNAL;
       97     4634    1   DCL KNUMR REDEF KNUM SBIN HALF UNAL;
       98     4635    1   DCL UGRANS UBIN WORD;
       99     4636    1   DCL PREVEXT$ PTR;
      100     4637    1   DCL FIT$ PTR;
      101     4638    1   DCL EXT$ PTR;
      102     4639    1   DCL P$ PTR;
      103     4640    1   DCL NRECS SBIN;
      104     4641    1   DCL PRIO UBIN WORD;
      105     4642    1   DCL JOB_SYSID UBIN WORD;
      106     4643    1   DCL FUCODE UBIN WORD;
      107     4644    1   DCL FIL_BADC UBIN WORD;
      108     4645    1   DCL FIL_CNUM UBIN WORD;
      109     4646    1   DCL SETX UBIN;
      110     4647    1   DCL OLDLEXT$ PTR;
PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:4    
      111     4648    1   DCL FIL_ACCT CHAR(8);
      112     4649    1   DCL DEST$ PTR;
      113     4650    1   DCL SYSID UBIN WORD;
      114     4651    1   DCL NFIL UBIN WORD;
      115     4652    1   DCL NXTFIL$ PTR;
      116     4653    1   DCL NUMEXT UBIN WORD;
      117     4654    1   DCL FILL UBIN WORD;
      118     4655    1   DCL NCHUNKS UBIN WORD;
      119     4656    1   DCL DEVSUBC UBIN WORD;
      120     4657    1   DCL EXPPRIO UBIN;
      121     4658    1   DCL FIT_SECT_INDEX UBIN WORD STATIC ALIGNED;
      122     4659    1   DCL EXTENT_WORDS UBIN WORD STATIC ALIGNED;
      123     4660
      124     4661
      125     4662
      126     4663        /**/
      127     4664        /*  STATIC */
      128     4665        /**/
      129     4666        %FO_JOB (FPTN=TJOB,STCLASS=STATIC);
      130     4713    1   DCL JNL UBIN WORD STATIC;
      131     4714    1   DCL CURUTS UBIN STATIC;
      132     4715    1   DCL JOBNAME CHAR(31) STATIC;
      133     4716        %VLP_SYMBEXTENT (FPTN=EXTENT,STCLASS=STATIC);
      134     4729    1   DCL 1 NEW_FILENAME STATIC DALIGNED,
      135     4730    1         2 CNT UBIN BYTE UNAL,
      136     4731    1         2 PREFIX,
      137     4732    1           3 * CHAR(7) UNAL INIT('zzzBAD:'),
      138     4733    1           3 CODE CHAR(2) UNAL,
      139     4734    1           3 * CHAR(1) UNAL INIT(':'),
      140     4735    1         2 SYSID CHAR(6) UNAL,
      141     4736    1         2 NUM CHAR(6) UNAL,
      142     4737    1         2 CNUM CHAR(3) UNAL;
      143     4738    1   DCL KCNT SBIN WORD STATIC INIT(0);
      144     4739        %FS_OSFN (FPTN=DELNAME,STCLASS=STATIC);
      145     4753        %OC_MESSHD_D       (NAME=OPMSG_FILBAD,
      146     4754                 NPARMS    = 5,
      147     4755                 MSG       = FO_FERR_MSG#,
PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:5    
      148     4756                 ATR       = M_SYS,
      149     4757                 STCLASS   = STATIC);
      150     4770    1         2 * UBIN BYTE UNAL INIT(1),
      151     4771    1         2 * UBIN BYTE UNAL INIT(2),
      152     4772    1         2 * UBIN BYTE UNAL INIT(2),
      153     4773    1         2 * UBIN BYTE UNAL INIT(2),
      154     4774    1         2 * UBIN BYTE UNAL INIT(8),
      155     4775    1         2 SUBC UBIN BYTE UNAL,
      156     4776    1         2 NUM UBIN HALF UNAL,
      157     4777    1         2 CNUM UBIN HALF UNAL,
      158     4778    1         2 ERRC UBIN HALF UNAL,
      159     4779    1         2 ACCT CHAR(8) UNAL;
      160     4780        %OC_MESSHD_D            (NAME=OPMSG_KERR1,
      161     4781                 NPARMS    = 4,
      162     4782                 MSG       = FO_KERR1_MSG#,
      163     4783                 ATR       = M_UR,
      164     4784                 STCLASS   = STATIC);
      165     4797    1         2 * UBIN BYTE UNAL INIT(1),
      166     4798    1         2 * UBIN BYTE UNAL INIT(1),
      167     4799    1         2 * UBIN BYTE UNAL INIT(1),
      168     4800    1         2 * UBIN BYTE UNAL INIT(2),
      169     4801    1         2 SUBC UBIN BYTE UNAL,
      170     4802    1         2 SUBC1 UBIN BYTE UNAL,
      171     4803    1         2 SUBC2 UBIN BYTE UNAL,
      172     4804    1         2 NUM UBIN HALF UNAL;
      173     4805        %OC_MESSHD_D            (NAME=OPMSG_RESP,
      174     4806                 NPARMS    = 6,
      175     4807                 MSG       = FO_RESP_MSG#,
      176     4808                 ATR       = M_UR,
      177     4809                 STCLASS   = STATIC);
      178     4822    1         2 * UBIN BYTE UNAL INIT(1),
      179     4823    1         2 * UBIN BYTE UNAL INIT(1),
      180     4824    1         2 * UBIN BYTE UNAL INIT(8),
      181     4825    1         2 * UBIN BYTE UNAL INIT(1),
      182     4826    1         2 * UBIN BYTE UNAL INIT(2),
      183     4827    1         2 * UBIN BYTE UNAL INIT(1),
      184     4828    1         2 SUBC UBIN BYTE UNAL,
PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:6    
      185     4829    1         2 PRIO UBIN BYTE UNAL,
      186     4830    1         2 SWSN CHAR(8) UNAL,
      187     4831    1         2 SUBC2 UBIN BYTE UNAL,
      188     4832    1         2 NFIL UBIN HALF UNAL,
      189     4833    1         2 NUM UBIN BYTE UNAL;
      190     4834
      191     4835
      192     4836
      193     4837        /**/
      194     4838        /*  DCBS */
      195     4839        /**/
      196     4840    1   DCL M$CSCG DCB;
      197     4841    1   DCL M$FILE1 DCB;
      198     4842    1   DCL M$FILE2 DCB;
      199     4843    1   DCL M$OSCG DCB;
      200     4844
      201     4845
      202     4846
      203     4847        /**/
      204     4848        /* REFS */
      205     4849        /**/
      206     4850    1   DCL FOD$AVAIL     ENTRY    ALTRET;
      207     4851    1   DCL FOD$EVENT     ENTRY(2) ALTRET;
      208     4852    1   DCL FOI$CRASH     ENTRY(3) ALTRET;
      209     4853    1   DCL FOI$GBLK      ENTRY(3) ALTRET;
      210     4854    1   DCL FOI$GBUF      ENTRY(2) ALTRET;
      211     4855    1   DCL FOI$RBLK      ENTRY(3) ALTRET;
      212     4856    1   DCL FOI$RBUF      ENTRY(2) ALTRET;
      213     4857    1   DCL FOI$SNAP      ENTRY(4) ALTRET;
      214     4858    1   DCL FOR$TCHK      ENTRY(2) ALTRET;
      215     4859    1   DCL XSF$LOCCODP   ENTRY(2) ALTRET;
      216     4860    1   DCL XSF$LOCCODE   ENTRY(2) ALTRET;
      217     4861    1   DCL B$TCB$ PTR SYMREF;
      218     4862    1   DCL B$JIT$ PTR SYMREF;
      219     4863
      220     4864
      221     4865
PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:7    
      222     4866        /**/
      223     4867        /* PMME FPTS */
      224     4868        /**/
      225     4869        %FPT_CLOSE                             (FPTN=CLOSE_FILE1,
      226     4870                 DCB       = M$FILE1,
      227     4871                 STCLASS   = CONSTANT,
      228     4872                 DISP      = SAVE,
      229     4873                 RELG      = YES);
      230     4915        %FPT_CLOSE                             (FPTN=CLOSE_FILE1_CHGATTR,
      231     4916                 DCB       = M$FILE1,
      232     4917                 STCLASS   = STATIC,
      233     4918                 DISP      = SAVE,
      234     4919                 RELG      = NO,
      235     4920                 CHGATT    = YES);
      236     4962        %FPT_OPEN                              (FPTN=OPEN_FILE1_UPD,
      237     4963                 STCLASS   = CONSTANT,
      238     4964                 DCB       = M$FILE1,
      239     4965                 ACCT      = SYMOACCT,
      240     4966                 NAME      = FO_FILENAME,
      241     4967                 ASN       = FILE,
      242     4968                 FUN       = UPDATE,
      243     4969                 FPARAM    = FO_FITBUF1,
      244     4970                 SHARE     = ALL,
      245     4971                 ACS       = BLOCK);
      246     5080        %VLP_ACCT          (FPTN=SYSACCT,
      247     5081                 STCLASS   = CONSTANT,
      248     5082                 ACCT      = ':SYS');
      249     5095        %VLP_ACCT          (FPTN=SYMOACCT,
      250     5096                 STCLASS   = CONSTANT,
      251     5097                 ACCT      = ':SYMO');
      252     5110        %FPT_WRITE                             (FPTN=OCMSG_FILBAD,
      253     5111                 STCLASS   = CONSTANT,
      254     5112                 DCB       = M$CSCG,
      255     5113                 BUF       = OPMSG_FILBAD);
      256     5144        %FPT_WRITE                             (FPTN=OCMSG_KERR1,
      257     5145                 STCLASS   = CONSTANT,
      258     5146                 DCB       = M$CSCG,
PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:8    
      259     5147                 BUF       = OPMSG_KERR1);
      260     5178        %FPT_OPEN                              (FPTN=DELETE_FILE1,
      261     5179                 STCLASS   = CONSTANT,
      262     5180                 DCB       = M$FILE1,
      263     5181                 ACCT      = SYMOACCT,
      264     5182                 NAME      = FO_FILENAME,
      265     5183                 ASN       = FILE,
      266     5184                 DELETE    = YES);
      267     5293        %FPT_CLOSE                             (FPTN=CLOSE_FILE2,
      268     5294                 STCLASS   =  CONSTANT,
      269     5295                 DCB       =  M$FILE2,
      270     5296                 DISP      =  SAVE,
      271     5297                 RELG      =  YES);
      272     5339        %FPT_OPEN                              (FPTN=CREATE_FILE2,
      273     5340                 STCLASS   =  CONSTANT,
      274     5341                 DCB       =  M$FILE2,
      275     5342                 ACCT      =  SYMOACCT,
      276     5343                 NAME      =  FO_FILENAME,
      277     5344                 ASN       =  FILE,
      278     5345                 FUN       =  CREATE,
      279     5346                 EXIST     =  NEWFILE,
      280     5347                 CTG       =  YES,
      281     5348                 IFPARAM   =  FO_FITBUF1);
      282     5457        %FPT_OPEN                              (FPTN=DELETE_FILE2,
      283     5458                 STCLASS   = CONSTANT,
      284     5459                 DCB       = M$FILE2,
      285     5460                 ACCT      = SYMOACCT,
      286     5461                 NAME      = DELNAME,
      287     5462                 ASN       = FILE,
      288     5463                 DELETE    = YES);
      289     5572        %FPT_OPEN                              (FPTN=OPEN_FILE1,
      290     5573                 STCLASS   = CONSTANT,
      291     5574                 DCB       = M$FILE1,
      292     5575                 ACCT      = SYMOACCT,
      293     5576                 NAME      = FO_FILENAME,
      294     5577                 ASN       = FILE,
      295     5578                 FUN       = IN,
PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:9    
      296     5579                 FPARAM    = FO_FITBUF1,
      297     5580                 ACS       = BLOCK);
      298     5689        %FPT_SYMBIO                            (FPTN=CHK_EXT,
      299     5690                 DCB       = M$OSCG,
      300     5691                 STCLASS   = STATIC,
      301     5692                 NXEXT     = EXTENT,
      302     5693                 ORDER     = FOMO_CHEXT#);
      303     5717        %FPT_WRITE                             (FPTN=OCMSG_RESP,
      304     5718                 STCLASS   = CONSTANT,
      305     5719                 DCB       = M$CSCG,
      306     5720                 BUF       = OPMSG_RESP);
      307     5751        %FPT_PRIV                             (FPTN=EFTPRIV,
      308     5752                 PRIV      = %PR_FMEFT#,
      309     5753                 STCLASS   = CONSTANT);
      310     5768        %FPT_TIME                             (FPTN=GETUTS,
      311     5769                 TSTAMP    = CURUTS,
      312     5770                 SOURCE    = CLOCK,
      313     5771                 DEST      = UTS,
      314     5772                 STCLASS   = CONSTANT);
      315     5791
      316     5792
      317     5793
      318     5794        /**/
      319     5795        /* SUBS */
      320     5796        /**/
      321     5797        %SUB FIL$=FO_FIL$;
      322     5798        %SUB DEV$=FO_DEV$;
      323     5799        %SUB JOB$=FO_JOB$;
      324     5800        %SUB F_FO='0617'O;
      325     5801        %SUB M_F='06'O;
      326     5802        %SUB B$ERRCODE = B$TCB$->B$TCB.ALT$->B$ALT.ERR.CODE;
      327     5803        %SUB FOREVER="WHILE ('1'B)";
      328     5804        %EJECT;
PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:10   
      329     5805        /*
      330     5806
      331     5807                AAA   DDDD   DDDD
      332     5808               A   A  D   D  D   D
      333     5809               A   A  D   D  D   D
      334     5810               AAAAA  D   D  D   D
      335     5811               A   A  D   D  D   D
      336     5812               A   A  D   D  D   D
      337     5813               A   A  DDDD   DDDD
      338     5814
      339     5815
      340     5816        */
      341     5817        /*F* NAME:         FOF$ADD
      342     5818             PURPOSE:      To add an output symbiont file to OUTSYM's tables
      343     5819             DESCRIPTION:  This routine is called by output queue recovery
      344     5820                           (when OUTSYM is started), and by the receiver of
      345     5821                           the add-file event from the output COOP.  In the
      346     5822                           first case, the M$FILE1 dcb is open to the file,
      347     5823                           with FPARAMS in FO_FITBUF1;
      348     5824                           in the latter case, it is not.  In both cases,
      349     5825                           FIL_BOOTID, FIL_SYSID, FIL_NUM, and XFIL_CNUM
      350     5826                           describe the name of the file in :SYMO.
      351     5827
      352     5828                           FOF$ADD reads the FIT and extracts therefrom the
      353     5829                           information describing the file's destination, and
      354     5830                           the extent list (to enable MOOS  to output the file
      355     5831                           when it becomes scheduled to print).
      356     5832
      357     5833                           Certain  errors encountered during this process
      358     5834                           may cause the file to be deleted and/or ignored, in
      359     5835                           which case the ALTRET is taken.  Otherwise the file
      360     5836                           has been added to the tables, and FO_FIL$ points
      361     5837                           to the frame containing its information.
      362     5838        */
      363     5839
      364     5840
      365     5841    1   FOF$ADD: ENTRY (FIL_SYSID,FIL_NUM,XFIL_CNUM,RECOVERING,FIL_BOOTID) ALTRET;
PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:11   
      366     5842
      367     5843    1         FILL=0;
      368     5844    1         FIL_CNUM=XFIL_CNUM;
      369     5845    1         CALL ADD_FILE ALTRET(ALTRT);
      370     5846    1         RETURN;
      371     5847    1   ALTRT:;
      372     5848    1         ALTRETURN;
      373     5849        /**
      374     5850
      375     5851               FFFFF   III   L      L
      376     5852               F        I    L      L
      377     5853               F        I    L      L
      378     5854               FFFF     I    L      L
      379     5855               F        I    L      L
      380     5856               F        I    L      L
      381     5857               F       III   LLLLL  LLLLL
      382     5858
      383     5859
      384     5860        **/
      385     5861
      386     5862        /*F* NAME:         FOF$FILL
      387     5863             PURPOSE:      To FILL a file into OUTSYM's tables
      388     5864             DESCRIPTION:  The passed SYSID and NUM identify the file to
      389     5865                           be filled, which must exist already, in the
      390     5866                           SPILLED queue.  The idea is that EFT has written
      391     5867                           the file (or files, if there are > 1 commode
      392     5868                           chunks to the file) into :SYMO.  What we do here
      393     5869                           is recover them, and, if all goes well, move the
      394     5870                           file, with its new extent information, from the
      395     5871                           SPILLED queue to make it available for output. */
      396     5872    1   FOF$FILL: ENTRY (FIL_SYSID,FIL_NUM,XFIL_CNUM,RECOVERING,FIL_BOOTID) ALTRET;
      397     5873
      398     5874    1         CALL FIND_FILE ALTRET(ALTRT);
      399     5875    1         FIL_BOOTID=FIL$->FO$FIL.BOOTID;
      400     5876    1         NCHUNKS=FIL$->FO$FIL.HICNUM;
      401     5877    1         FIL$->FO$FIL.HICNUM=0;
      402     5878    1         FILL=1;
PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:12   
      403     5879    2           DO FIL_CNUM = 0 TO NCHUNKS;
      404     5880    2           CALL ADD_FILE ALTRET(ALTRT);
      405     5881    2           END;
      406     5882    1         RETURN;
      407     5883        /*D* NAME:         ADD_FILE
      408     5884             PURPOSE:      To add a file to OUTSYM's tables
      409     5885             DESCRIPTION:  For information about how this routine works,
      410     5886                           see the *F* for FOF$ADD.
      411     5887
      412     5888                           If called with FILL=0, then the added file does
      413     5889                           not exist in our tables, and a new file frame
      414     5890                           is obtained.  Otherwise (FIL~=0), the file frame
      415     5891                           exists, and we just grab the new extent information
      416     5892                           from the FIT. */
      417     5893    1   ADD_FILE: PROC ALTRET;
      418     5894        /**/
      419     5895    2   DCL TGRANS UBIN WORD;
      420     5896    2   DCL FRDAD UBIN WORD;
      421     5897    2   DCL BLK# UBIN WORD;
      422     5898    2   DCL HASH UBIN WORD;
      423     5899    2   DCL NOPNERR UBIN;
      424     5900    2   DCL DAD UBIN;
      425     5901    2   DCL 1 STAMP ALIGNED,
      426     5902    2         2 HASH UBIN(27) UNAL,
      427     5903    2         2 FRDAD UBIN(9) UNAL;
      428     5904        /**/
      429     5905    2         FO_FILENAME.BOOTID=FIL_BOOTID;
      430     5906    2         CALL BINCHAR(FO_FILENAME.SYSID,FIL_SYSID);
      431     5907    2         CALL BINCHAR(FO_FILENAME.NUM,FIL_NUM);
      432     5908    2         CALL BINCHAR(FO_FILENAME.CNUM,FIL_CNUM);
      433     5909
      434     5910
      435     5911    2         IF FIL_CNUM =0 THEN
      436     5912    3           DO;
      437     5913
      438     5914
      439     5915        /***
PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:13   
      440     5916         ***
      441     5917         ***
      442     5918         ***          FIRST CHUNK
      443     5919         ***
      444     5920         ***
      445     5921         ***/
      446     5922
      447     5923    3           IF FILL = 0 THEN
      448     5924    4             DO;
      449     5925                                      /* Find sysid and then file number,
      450     5926                                         altret if none there */
      451     5927    4             CALL FIND_FILE ALTRET(AFILE01);
      452     5928                                      /* Is this a batch job and is the file
      453     5929                                         a product of the currently booted
      454     5930                                         system? If it's a batch file and it's
      455     5931                                         from a previous boot, then if it's not
      456     5932                                         on a deviceit will be rerun.  If it's
      457     5933                                         on a device then QUIT because it will
      458     5934                                         be rerun */
      459     5935    4             IF JOB$->FO$JOB.MODE = %M_BATCH#
      460     5936    4             AND FIL_BOOTID ~= FIL$->FO$FIL.BOOTID THEN
      461     5937    5               DO;
      462     5938    5               IF FIL$->FO$FIL.CDEV$ = ADDR(NIL) THEN
      463     5939    5                CALL DEL_FILE;
      464     5940    5               ELSE
      465     5941    6                 DO;
      466     5942    6                 DEV$=FIL$->FO$FIL.CDEV$;
      467     5943    6                 CALL FOD$EVENT (FODE_QUIT#,FOQR_RRUN#);
      468     5944    6                 END;
      469     5945    5               GOTO AFILE01;
      470     5946    5               END;
      471     5947                                                /**/
      472     5948                                      /* If this is another one of GHOST1s
      473     5949                                         infamous banner files, ignore it. */
      474     5950                                                /**/
      475     5951    4             IF FIL_SYSID = 1 THEN
      476     5952    4              RETURN;
PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:14   
      477     5953    4             CALL FOI$SNAP (%S$DBLADD,F_FO,M_F);
      478     5954        /*S* SCREECH_CODE: FOF-S$DBLADD
      479     5955             TYPE:         SNAP
      480     5956             MESSAGE:      The same file was added twice to OUTSYM
      481     5957             REMARKS:      OUTSYM receives an event whenever an output
      482     5958                           symbiont file in :SYMO is finally closed off.
      483     5959                           This SNAP occurs when OUTSYM receives such a
      484     5960                           notification for a file which he already has
      485     5961                           listed in his internal tables.  This means that
      486     5962                           either the output COOP is very confused, or
      487     5963                           the algorithm which enables OUTSYM recovery to
      488     5964                           determine (at boot time) which :SYMO files are
      489     5965                           left over from before the last crash has failed.
      490     5966                           In this latter case, OUTSYM has probably picked
      491     5967                           up (in his recovery) a file which was currently
      492     5968                           being built, and the SCREECH has occurred when
      493     5969                           that file was finally handed to OUTSYM.  */
      494     5970    4             IF RECOVERING ~= 0 THEN
      495     5971    4              CALL M$CLOSE (CLOSE_FILE1) ALTRET(ALTRT);
      496     5972    4             ALTRETURN;
      497     5973    4   AFILE01:  ;
      498     5974    4             END;
      499     5975    3           IF RECOVERING = 0 THEN
      500     5976    3            CALL M$OPEN (OPEN_FILE1) ALTRET(AFILE1);
      501     5977    3           SETX = DCBADDR(DCBNUM(M$FILE1))->F$DCB.SETX;
      502     5978    3           NRECS = DCBADDR(DCBNUM(M$FILE1))->F$DCB.NRECS;
      503     5979                                      /* FIT starts in the 5th word of a granule.
      504     5980                                         ACS=BLOCK is the reason we do this */
      505     5981    3           FIT$ = PINCRW(ADDR(FO_FITBUF1),SIZEW(FM$GRAN));
      506     5982    3           CALL M$CLOSE (CLOSE_FILE1);
      507     5983    3           IF FILL = 0 THEN
      508     5984    4             DO;
      509     5985    4             P$ = FIT$;
      510     5986    4             CALL XSF$LOCCODP(P$,16)
      511     5987    5             WHENRETURN DO;
      512     5988    5               IF P$ -> CODE16.NBANNER_RECS >= NRECS
      513     5989    6               THEN DO;
PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:15   
      514     5990    6                 CALL M$OPEN (DELETE_FILE1)
      515     5991    7                 WHENALTRETURN DO;
      516     5992    7                   END;
      517     5993    6                 ALTRETURN;
      518     5994    6                 END;
      519     5995    5               END;
      520     5996        /**
      521     5997         **
      522     5998         **
      523     5999         **       GET A FILE TABLE ENTRY, FILL IN THE GOODIES, AND LINK THE
      524     6000         **       ENTRY ONTO ITS APPROPRIATE FILE PRIO CHAIN
      525     6001         **
      526     6002         **
      527     6003         */
      528     6004    4             CALL FOI$GBUF (FO_FILSCB,FIL$) ALTRET(AFILE2);
      529     6005    4             FIL$->FO$FIL=FO_FIL_INIT;
      530     6006    4             FIL$->FO$FIL.SYSID=FIL_SYSID;
      531     6007    4             FIL$->FO$FIL.NUM=FIL_NUM;
      532     6008    4             FIL$->FO$FIL.BOOTID=FIL_BOOTID;
      533     6009    4             END;
      534     6010    3           FIL$->FO$FIL.SETX=SETX;
      535     6011    3           IF FILL = 0 THEN
      536     6012    4             DO;
      537     6013
      538     6014
      539     6015        /**
      540     6016         **
      541     6017         **       DO JOBSTATS GOODIES
      542     6018         **
      543     6019         **/
      544     6020                                /* ATTACH THIS FILE TO THE 'JOB' TABLE
      545     6021                                   ENTRY FOR ITS SYSID, WHEREIN WE KEEP
      546     6022                                   INFO CONCERNING ALL FILES FOR THIS SYSID */
      547     6023    4             JOB_SYSID=FIL$->FO$FIL.SYSID;
      548     6024                                /* SEE IF THERE'S ALREADY A JOB TABLE ENTRY */
      549     6025    4             DEST$=FIT$;
      550     6026                                      /* Access the contents of FO_FITBUF1
PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:16   
      551     6027                                         obtained during the open */
      552     6028    4             CALL XSF$LOCCODP (DEST$,13) ALTRET(AFILE31);
      553     6029                                      /* Job Name Length */
      554     6030    4             JOBNAME=DEST$->FS$DEST.JOBNAME;
      555     6031    4             CALL INDEX (JNL,' ',JOBNAME);
      556     6032    4             CALL FIND_JOB ALTRET(AFILE011);
      557     6033                                /* FOUND IT.  MAKE SURE OFF ISN'T SET */
      558     6034    4             IF JOB$->FO$JOB.FLG.JOFF THEN
      559     6035    4              IF JOB$->FO$JOB.FLG.RCVRF THEN
      560     6036    4               JOB$->FO$JOB.FLG.JOFF='0'B;
      561     6037    4              ELSE
      562     6038    4               CALL FOI$SNAP (%S$OFFADD,F_FO,M_F);
      563     6039        /*S* SCREECH_CODE: FOF-S$OFFADD
      564     6040             TYPE:         SNAP
      565     6041             MESSAGE:      A batch job added a file to OUTSYM after going OFF
      566     6042             REMARKS:      OUTSYM receives an event from MONKEY whenever a
      567     6043                           batch job leaves the system.  This SCREECH occurs
      568     6044                           when OUTSYM receives an output file add from a
      569     6045                           batch job which has been marked off.  This means
      570     6046                           that OUTSYM or the monitor is very confused about
      571     6047                           that job.    */
      572     6048
      573     6049                                /* IF THIS IS A FILE FROM A BATCH JOB
      574     6050                                   WHOSE OUTPUT WAS CANCELLED, THEN
      575     6051                                   JUST DISCARD IT */
      576     6052    4             IF JOB$->FO$JOB.FLG.OCANCEL THEN
      577     6053    5               DO;
      578     6054    5               CALL DEL_FILE;
      579     6055    5               RETURN;
      580     6056    5               END;
      581     6057    4             GOTO AFILE012;
      582     6058
      583     6059                                /* BUILD A JOB TABLE ENTRY */
      584     6060    4   AFILE011: ;
      585     6061    4             CALL ADD_JOB ALTRET(AFILE4);
      586     6062                                /* UPDATE THE JOB TABLE ENTRY */
      587     6063    4   AFILE012:
PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:17   
      588     6064    4             FIL$->FO$FIL.OJOB$=JOB$;
      589     6065    4             JOB$->FO$JOB.NFIL=JOB$->FO$JOB.NFIL+1;
      590     6066    4             FIL$->FO$FIL.JLNK$=JOB$->FO$JOB.FILHD$;
      591     6067    4             JOB$->FO$JOB.FILHD$=FIL$;
      592     6068    4             IF RECOVERING ~= 0 THEN
      593     6069    4              JOB$->FO$JOB.FLG.RCVRF='1'B;
      594     6070    4             END;
      595     6071        /**
      596     6072         **
      597     6073         ** PICK UP INFO (FROM THE FIT) ABOUT THE FILE
      598     6074         **
      599     6075         */
      600     6076    3           FIL_ACCT = JOB$ -> FO$JOB.ACCT;
      601     6077    3           IF FILL = 0 THEN
      602     6078    4             DO;
      603     6079    4             P$=FIT$;
      604     6080    4             CALL XSF$LOCCODP(P$,4) ALTRET(AFILE30);
      605     6081    4             JOB$->FO$JOB.ACCT=P$->CODE04.CREATOR.ACCT;
      606     6082    4             CALL INDEX (I,' ',JOB$->FO$JOB.ACCT);
      607     6083    4             JOB$->FO$JOB.ACCTL=I;
      608     6084    4             JOB$->FO$JOB.UNAME = P$->CODE04.CREATOR.NAME;
      609     6085    4             CALL INDEX(I,' ',JOB$->FO$JOB.UNAME);
      610     6086    4             JOB$->FO$JOB.UNAMEL = I;
      611     6087    4             FIL$->FO$FIL.CREATED=P$->CODE04.CREATION.TIME;
      612     6088
      613     6089    4             P$ = FIT$;
      614     6090    4             CALL XSF$LOCCODP(P$,17)
      615     6091    5             WHENRETURN DO;
      616     6092    5               FIL$ -> FO$FIL.VLP_FPRG = P$ -> FPRG_DATA;
      617     6093    5               END;
      618     6094    5             WHENALTRETURN DO;
      619     6095    5               END;
      620     6096
      621     6097    4             CALL GET_DEST ALTRET(AFILE_BAD);
      622     6098    4             JOB$->FO$JOB.MODE=DEST$->FS$DEST.MODE;
      623     6099    4             IF DEST$->FS$DEST.OUTSYMF.CWSN THEN
      624     6100    4              FIL$->FO$FIL.DESTR.WSN=DEST$->FS$DEST.NEWWSN;
PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:18   
      625     6101    4             ELSE
      626     6102    4              FIL$->FO$FIL.DESTR.WSN=DEST$->FS$DEST.DT.WSN;
      627     6103    4             IF DEST$->FS$DEST.OUTSYMF.UNHELD THEN
      628     6104    4              FIL$->FO$FIL.FLG.UNHELD='1'B;
      629     6105    4             FIL$->FO$FIL.DESTR.TYP=DEST$->FS$DEST.DT.DEV;
      630     6106    4             FIL$->FO$FIL.ATTR=DEST$->FS$DEST.ATTR;
      631     6107    4             FIL$->FO$FIL.FORM=DEST$->FS$DEST.FORM;
      632     6108    4             FIL$->FO$FIL.FLG.PAGES=DEST$->FS$DEST.DDEV.LP;
      633     6109    4             P$ = FIT$;
      634     6110    4             CALL XSF$LOCCODP(P$,16) ALTRET (AFILE29);
      635     6111    4             IF FIL$ -> FO$FIL.FLG.PAGES THEN
      636     6112    4              FIL$ -> FO$FIL.PAGES = P$ -> CODE16.PAGENO +
      637     6113    4              P$ -> CODE16.BANNER_REPEATS;
      638     6114    4             ELSE
      639     6115    4              FIL$ -> FO$FIL.PAGES = P$ -> CODE16.RECNO +
      640     6116    4              (P$ -> CODE16.BANNER_REPEATS *
      641     6117    4              P$ -> CODE16.NBANNER_RECS);
      642     6118    4             FIL$->FO$FIL.FLG.CPVFC=DEST$->FS$DEST.DDEV.CP;
      643     6119    4             IF DEST$->FS$DEST.OUTSYMF.CPRIO THEN
      644     6120    5               DO;                                           /* Prio was changed */
      645     6121    5               FIL$->FO$FIL.IPRIO=DEST$->FS$DEST.NEWPRIO;
      646     6122    5               FIL$->FO$FIL.FLG.CPRIO='1'B;
      647     6123    5               END;
      648     6124    4             ELSE                                            /* Prio not changed */
      649     6125    4              FIL$->FO$FIL.IPRIO = DEST$->FS$DEST.PRIO;
      650     6126    4             FIL$->FO$FIL.FLG.CHKPTD=DEST$->FS$DEST.OUTSYMF.CHKPTD;
      651     6127    4             FIL$->FO$FIL.CHKPBR=DEST$->FS$DEST.CHKPBR;
      652     6128    4             FIL$->FO$FIL.FLG.SAP=DEST$->FS$DEST.SAP;
      653     6129    4             FIL$->FO$FIL.SAPCOPIES=DEST$->FS$DEST.SAPCOPIES;
      654     6130    4             IF DEST$->FS$DEST.PRINT
      655     6131    4             AND NOT FIL$->FO$FIL.FLG.GLC
      656     6132    4             THEN
      657     6133    4              FIL$->FO$FIL.FLG.CONCUR = '1'B;
      658     6134    4             END;
      659     6135
      660     6136                                           /* If file has been spilled but not filled */
      661     6137    3           IF FILL = 0
PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:19   
      662     6138    3           AND DEST$->FS$DEST.OUTSYMF.SPILLED THEN
      663     6139    3            FIL$->FO$FIL.PRIO=FOPR_SPILLED#;
      664     6140    3           ELSE
      665     6141    4             DO;
      666     6142    4             CALL GRAB_EXTS ALTRET(AFILE_BAD);
      667     6143    4             IF FILL ~= 0 THEN                    /* If old file, unchain the it */
      668     6144    4              CALL UNCHAIN_FILE;
      669     6145                                      /* Should we save it? */
      670     6146    4             IF FIL$->FO$FIL.FLG.SAP
      671     6147    4             AND FIL$->FO$FIL.SAPCOPIES = 0 THEN
      672     6148    4              FIL$->FO$FIL.PRIO=FOPR_HOLD#;
      673     6149    4             ELSE
      674     6150    4              IF DEST$->FS$DEST.PRINT              /* If "PRINT" specified      */
      675     6151    4              OR FIL$->FO$FIL.FLG.GLC              /* or done got-last-chunk    */
      676     6152    4              OR FILL ~= 0 THEN                    /* or it's an old file       */
      677     6153    4               CALL PRIO_FILE;                    /* then re-prio the sucker   */
      678     6154    4              ELSE
      679     6155    4               FIL$->FO$FIL.PRIO = FOPR_MFW#;
      680     6156    4             END;
      681     6157    3           CALL CHAIN_FILE;
      682     6158                                      /* Set LPAVAIL flag if there is a device
      683     6159                                         available to print this one */
      684     6160    3           CALL FOD$AVAIL;
      685     6161    3           RETURN;
      686     6162
      687     6163        %EJECT;
PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:20   
      688     6164        /**
      689     6165         ** ERROR EXITS
      690     6166         **/
      691     6167
      692     6168    3   AFILE1:
      693     6169    3           NOPNERR=B$ERRCODE;
      694     6170    3           FIL_BADC=FOFE_NOPN#;
      695     6171    3           GOTO AFILE_BAD;
      696     6172    3   AFILE2:
      697     6173    3           FIL_BADC=FOFE_NFFR#;
      698     6174    3           GOTO AFILE_BAD;
      699     6175    3   AFILE29:;
      700     6176    3           FIL_BADC=FOFE_BFIT16#;
      701     6177    3           GOTO AFILE_BAD;
      702     6178    3   AFILE30:;
      703     6179    3           FIL_BADC=FOFE_BFIT04#;
      704     6180    3           GOTO AFILE_BAD;
      705     6181    3   AFILE31:;
      706     6182    3           FIL_BADC=FOFE_BFIT13#;
      707     6183    3           GOTO AFILE_BAD;
      708     6184    3   AFILE4: ;
      709     6185    3           FIL_BADC=FOFE_NJFR#;
      710     6186    3           GOTO AFILE_BAD;
      711     6187
      712     6188    3           END;
      713     6189    2         ELSE
      714     6190    3           DO;
      715     6191        %EJECT;
PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:21   
      716     6192        /***
      717     6193         ***
      718     6194         ***
      719     6195         ***          NOT FIRST CHUNK
      720     6196         ***
      721     6197         ***
      722     6198         ***/
      723     6199
      724     6200    3           CALL FIND_FILE ALTRET(AFILE04);
      725     6201
      726     6202    3           FIL_ACCT=FIL$->FO$FIL.OJOB$->FO$JOB.ACCT;
      727     6203                                      /* If we think we already have the last
      728     6204                                         chunk, and are not in recovery then
      729     6205                                         something is very wrong - SNAP */
      730     6206    3           IF FIL$->FO$FIL.FLG.GLC THEN
      731     6207    4             DO;
      732     6208    4             IF RECOVERING ~= 0 THEN
      733     6209    4              GOTO AFILE02;
      734     6210
      735     6211    4             CALL FOI$SNAP (%S$BADGLC,F_FO,M_F);
      736     6212        /*S* SCREECH_CODE: FOF-S$BADGLC
      737     6213             TYPE:         SNAP
      738     6214             MESSAGE:      COMMODE chunk added to ended file
      739     6215             REMARKS:      This SCREECH occurs when OUTSYM receives an
      740     6216                           ADD for a file, wherein the file being added
      741     6217                           is allegedly a chunk of a commode file (not the
      742     6218                           first chunk), and the existing entry for the
      743     6219                           file says that the last chunk has already
      744     6220                           arrived.  This means that the output COOP, or
      745     6221                           OUTSYM, is very confused about the file.  */
      746     6222    4             END;
      747     6223
      748     6224                                      /* If the file is/was on a device and
      749     6225                                         we quit to abort, delete it and
      750     6226                                         altret */
      751     6227    3           IF FIL$->FO$FIL.CDEV$ ~= ADDR(NIL) THEN
      752     6228    4             DO;
PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:22   
      753     6229    4             IF FIL$->FO$FIL.CDEV$->FO$DEV.FLG.QUIT
      754     6230    4             AND FIL$->FO$FIL.CDEV$->FO$DEV.QUITRSN = FOQR_CHAB# THEN
      755     6231    4              GOTO AFILE02;
      756     6232    4             END;
      757     6233
      758     6234                                      /* If it's a new file and the chunks are
      759     6235                                         out of sequence, or an old file and
      760     6236                                         this chunk is beyond the highest CNUM
      761     6237                                         we have trouble - SNAP */
      762     6238    3           IF (FILL = 0 AND FIL_CNUM ~= FIL$->FO$FIL.HICNUM+1)
      763     6239    3           OR (FILL ~= 0 AND FIL_CNUM > FIL$->FO$FIL.HICNUM) THEN
      764     6240    4             DO;
      765     6241    4             IF RECOVERING = 0 THEN
      766     6242    4              CALL FOI$SNAP (%S$BADCNUM,F_FO,M_F);
      767     6243        /*S* SCREECH_CODE: FOF-S$BADCNUM
      768     6244             TYPE:         SNAP
      769     6245             MESSAGE:      OUTSYM received bad commode file segment
      770     6246             REMARKS:      This SCREECH occurs when OUTSYM is handed
      771     6247                           a segment of a commode file such that the
      772     6248                           CNUM (chunk/segment number) is out of order,
      773     6249                           or illegal.  This
      774     6250                           suggests that either OUTSYM or the output
      775     6251                           COOP is very confused. */
      776     6252    4   AFILE02:  ;
      777     6253    4             IF RECOVERING = 1 THEN
      778     6254    4              CALL M$CLOSE (CLOSE_FILE1);
      779     6255    4   AFILE03:  ;
      780     6256    4             CALL M$OPEN (DELETE_FILE1) ALTRET(ALTRT);
      781     6257    4   ALTRT:    ;
      782     6258    4             ALTRETURN;
      783     6259    4   AFILE04:  ;
      784     6260                                /* ON ADD OF COMMODE CHUNK, IF FILE IS
      785     6261                                   NOT THERE, THEN THIS MAY BE BECAUSE
      786     6262                                   A PROBLEM (E.G. NO EXTENT FRAMES)
      787     6263                                   CAUSED US TO REMOVE THE FILE.  IN THAT
      788     6264                                   CASE IT SHOULD NOT BE DELETED.  */
      789     6265
PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:23   
      790     6266                                /* IF THE CNUM=0 SEGMENT IS THERE,
      791     6267                                   THEN DON'T DELETE THIS ONE. */
      792     6268    4             IF RECOVERING = 1 THEN
      793     6269    4              CALL M$CLOSE (CLOSE_FILE1);
      794     6270    4             CALL BINCHAR(FO_FILENAME.CNUM,0);
      795     6271    4             CALL M$OPEN (OPEN_FILE1) ALTRET(AFILE05);
      796     6272    4             CALL M$CLOSE (CLOSE_FILE1);
      797     6273    4             ALTRETURN;
      798     6274    4   AFILE05:  ;
      799     6275    4             IF B$ERRCODE ~= %E$NOFILE THEN ALTRETURN;
      800     6276    4             CALL BINCHAR(FO_FILENAME.CNUM,FIL_CNUM);
      801     6277    4             GOTO AFILE03;
      802     6278    4             END;
      803     6279
      804     6280    3           IF FILL = 0 THEN
      805     6281    3            FIL$->FO$FIL.HICNUM = FIL$->FO$FIL.HICNUM + 1;
      806     6282
      807     6283    3           IF RECOVERING = 0 THEN CALL M$OPEN (OPEN_FILE1) ALTRET(AFILE1);
      808     6284    3           FIT$ = PINCRW(ADDR(FO_FITBUF1),SIZEW(FM$GRAN));
      809     6285    3           CALL M$CLOSE (CLOSE_FILE1);
      810     6286
      811     6287    3           IF FILL = 0 THEN
      812     6288    4             DO;
      813     6289    4             P$ = FIT$;
      814     6290    4             CALL XSF$LOCCODP(P$,16) ALTRET (AFILE29);
      815     6291    4             IF FIL$ -> FO$FIL.FLG.PAGES THEN
      816     6292    4              FIL$ -> FO$FIL.PAGES = P$ -> CODE16.PAGENO +
      817     6293    4              P$ -> CODE16.BANNER_REPEATS;
      818     6294    4             ELSE
      819     6295    4              FIL$ -> FO$FIL.PAGES = P$ -> CODE16.RECNO +
      820     6296    4              P$ -> CODE16.BANNER_REPEATS *
      821     6297    4              P$ -> CODE16.NBANNER_RECS;
      822     6298    4             END;
      823     6299    3           DEST$=FIT$;
      824     6300    3           CALL XSF$LOCCODP (DEST$,13) ALTRET(AFILE31);
      825     6301    3           IF FILL = 0 THEN
      826     6302                                      /* Get info from FS$DEST */
PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:24   
      827     6303    4             DO;
      828     6304    4             CALL GET_DEST ALTRET (AFILE_BAD);
      829     6305    4             IF FIL$->FO$FIL.FLG.GLC
      830     6306    4             AND FIL$->FO$FIL.FLG.CONCUR
      831     6307    4             THEN
      832     6308    4              FIL$->FO$FIL.FLG.CONCUR = '0'B;
      833     6309    4             END;
      834     6310    3           IF FIL$->FO$FIL.PRIO ~= FOPR_SPILLED# THEN
      835     6311    4             DO;
      836     6312    4             CALL SET_LASTEXT;
      837     6313    4             OLDLEXT$=EXT$;
      838     6314    4             CALL GRAB_EXTS ALTRET(AFILE_BAD);
      839     6315                                                     /**/
      840     6316                                      /* If the chunk says print then send it,
      841     6317                                         If this is the last chunk of a con-
      842     6318                                         tinuous file then prio the file and
      843     6319                                         print it.  If the prio changed on a
      844     6320                                         MFW file, print what we have and treat
      845     6321                                         all subsequent chunks as continuous. */
      846     6322                                                     /**/
      847     6323    4             IF DEST$ -> FS$DEST.PRINT
      848     6324    4             OR FIL$ -> FO$FIL.FLG.GLC
      849     6325    4             THEN
      850     6326    5               DO;
      851     6327    5               IF FIL$->FO$FIL.PRIO = FOPR_MFW# THEN
      852     6328    5                CALL REPRIO_FILE;
      853     6329    5               END;
      854     6330                                      /* Check if we have the last chunk */
      855     6331    4             IF FIL$->FO$FIL.CDEV$ ~= ADDR(NIL) THEN
      856     6332    5               DO;
      857     6333    5               DEV$ = FIL$->FO$FIL.CDEV$;
      858     6334    5               CALL FOD$EVENT (FODE_NXTCH#,OLDLEXT$);
      859     6335    5               END;
      860     6336    4             END;
      861     6337
      862     6338    3           RETURN;
      863     6339    3           END;
PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:25   
      864     6340        %EJECT;
PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:26   
      865     6341
      866     6342        /*D* NAME:         AFILE_BAD
      867     6343             PURPOSE:      To handle errors encountered during an ADD
      868     6344             DESCRIPTION:  Each type of error results in a different
      869     6345                           action, the only common thing being the printing
      870     6346                           of an error message on the OC.  */
      871     6347
      872     6348    2   AFILE_BAD:;
      873     6349
      874     6350    3           DO CASE (FIL_BADC);
      875     6351
      876     6352
      877     6353                                /* CANNOT OPEN FILE */
      878     6354    3             CASE (FOFE_NOPN#);
      879     6355
      880     6356    3               OPMSG_FILBAD.ERRC=NOPNERR;
      881     6357    3               IF FIL_CNUM ~= 0 THEN
      882     6358    4                 DO;
      883     6359    4                 IF NOPNERR = %E$NOFILE THEN GOTO AFILE_CHAB;
      884     6360    4                 GOTO AFILE_CHRM;
      885     6361    4                 END;
      886     6362    3   AFILE_MSG:  ;
      887     6363    3               CALL BAD_FILE;
      888     6364    3               ALTRETURN;
      889     6365
      890     6366
      891     6367                                /* NO FILE FRAMES AVAIL */
      892     6368    3             CASE (FOFE_NFFR#);
      893     6369
      894     6370    3               GOTO AFILE_MSG;
      895     6371
      896     6372
      897     6373                                /* NO JOB FRAMES AVAIL */
      898     6374    3             CASE (FOFE_NJFR#);
      899     6375
      900     6376    3   NOFR:       ;
      901     6377    3               CALL REM_FILE;
PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:27   
      902     6378    3               GOTO AFILE_MSG;
      903     6379
      904     6380
      905     6381                                /* NO EXTENT FRAMES AVAIL */
      906     6382    3             CASE (FOFE_NEFR#);
      907     6383
      908     6384    3               IF FIL_CNUM = 0 THEN GOTO NOFR;
      909     6385    3   AFILE_CHRM: ;
      910     6386    3               IF FIL$->FO$FIL.CDEV$ = ADDR(NIL) THEN CALL REM_FILE;
      911     6387    3               ELSE
      912     6388    4                 DO;
      913     6389    4                 DEV$ = FIL$->FO$FIL.CDEV$;
      914     6390    4                 CALL FOD$EVENT (FODE_QUIT#,FOQR_CHRM#);
      915     6391    4                 END;
      916     6392    3               GOTO AFILE_MSG;
      917     6393
      918     6394
      919     6395                                /* FIT BLOTTO */
      920     6396    3             CASE (FOFE_PBAD#,FOFE_BFIT01#,FOFE_BFIT03#,
      921     6397    3               FOFE_BFIT04#,FOFE_BFIT13#,FOFE_ZGRN#,
      922     6398    3               FOFE_ZEXT#,FOFE_BEXT#);
      923     6399
      924     6400    3               FUCODE=FOFU_BFIL#;
      925     6401    3               CALL UPD_FILE;
      926     6402    3   AFILE_CHAB: ;
      927     6403    3               IF FIL$->FO$FIL.CDEV$ = ADDR(NIL) THEN CALL DEL_FILE;
      928     6404    3               ELSE
      929     6405    4                 DO;
      930     6406    4                 DEV$ = FIL$->FO$FIL.CDEV$;
      931     6407    4                 CALL FOD$EVENT (FODE_QUIT#,FOQR_CHAB#);
      932     6408    4                 END;
      933     6409    3               GOTO AFILE_MSG;
      934     6410
      935     6411
      936     6412    3             CASE (ELSE);
      937     6413
      938     6414    3               ALTRETURN;
PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:28   
      939     6415    3           END;
      940     6416        %EJECT;
PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:29   
      941     6417
      942     6418        /*D* NAME:         GET_DEST
      943     6419             PURPOSE:      To extract information from FS$DEST in the FIT
      944     6420             DESCRIPTION:  This routine expects DEST$ to point to
      945     6421                           CODE13 (FS$DEST) in the FIT.  It extracts
      946     6422                           from it the information that is obtained regardless
      947     6423                           of whether this is the first chunk or not.  It
      948     6424                           returns with DEST$ pointing to CODE13 so that the
      949     6425                           caller can extract more stuff if desired.
      950     6426                           The routine ALTRETs
      951     6427                           if the OUTSYMF.BAD flag is set in FS$DEST.  */
      952     6428    2   GET_DEST: PROC ALTRET;
      953     6429
      954     6430    3         IF DEST$->FS$DEST.COPIES ~= 0 THEN
      955     6431    3          FIL$->FO$FIL.COPIES=DEST$->FS$DEST.COPIES;
      956     6432                                      /* If not continued, we have the last
      957     6433                                         chunk */
      958     6434    3         FIL$->FO$FIL.FLG.GLC = ~ DEST$->FS$DEST.CONTINUED;
      959     6435    3         IF FIL_CNUM = 0 OR DEST$->FS$DEST.PRINT = '1'B THEN
      960     6436    3          FIL$->FO$FIL.FLG.CRASHED=DEST$->FS$DEST.CRASHED;
      961     6437    3         IF  NOT (FIL_CNUM ~= 0
      962     6438    3         AND DEST$->FS$DEST.SAP
      963     6439    3         AND DEST$->FS$DEST.SAPCOPIES = 0
      964     6440    3         AND FIL$->FO$FIL.CDEV$ ~= ADDR(NIL)) THEN
      965     6441    4           DO;
      966     6442                                      /* DO if we havn't printed anything */
      967     6443    4           FIL$->FO$FIL.FLG.SAP = DEST$->FS$DEST.SAP;
      968     6444    4           FIL$->FO$FIL.SAPCOPIES=DEST$->FS$DEST.SAPCOPIES;
      969     6445    4           END;
      970     6446    3         IF NOT DEST$->FS$DEST.OUTSYMF.BAD THEN RETURN;
      971     6447    3         FIL_BADC=FOFE_PBAD#;
      972     6448    3         ALTRETURN;
      973     6449    3   END GET_DEST;
      974     6450
      975     6451
      976     6452
      977     6453        /*D* NAME:         GRAB_EXTS
PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:30   
      978     6454             PURPOSE:      To formulate the extent list for a file
      979     6455             DESCRIPTION:  The extent list is built from the extent infor-
      980     6456                           mation in CODE01 in the FIT.
      981     6457                           If this info is not there, or blotto, the routine
      982     6458                           ALTRETs, as is the case if sufficient extent frames
      983     6459                           cannot be obtained.  */
      984     6460
      985     6461    2   GRAB_EXTS: PROC ALTRET;
      986     6462
      987     6463
      988     6464    3         P$=FIT$;
      989     6465    3         CALL XSF$LOCCODP(P$,3) ALTRET(GEXT1);
      990     6466                                      /* Get number of granules used */
      991     6467    3         UGRANS=P$->CODE03.UGRANS;               /* # GRANS IN FILE */
      992     6468    3         IF UGRANS=0 THEN GOTO GEXT2;
      993     6469    3         P$=FIT$;
      994     6470    3         FIT_SECT_INDEX = 1;
      995     6471    3         CALL XSF$LOCCODE(P$, FIT_SECT_INDEX) ALTRET (GEXT5);
      996     6472    3         EXTENT_WORDS = FIT$ -> FM$FIT.CODES.NDW (FIT_SECT_INDEX);
      997     6473    3         PREVEXT$=ADDR(FIL$->FO$FIL.EXT$);
      998     6474    3         CALL SET_LASTEXT ALTRET(GEXT000);
      999     6475    3         PREVEXT$=EXT$;
     1000     6476    3   GEXT000:;
     1001     6477
     1002     6478    3         STAMP.HASH=P$->CODE01.HASH;
     1003     6479    3         STAMP.FRDAD=0;
     1004     6480                                                       /* PICK UP ALL EXTENTS IN FILE */
     1005     6481    3         TGRANS=0;
     1006     6482                                                     /**/
     1007     6483                                      /* EXTENT_WORDS comes from the 10 bit
     1008     6484                                         NDW field of the 1st section header.
     1009     6485                                         This section header also has an off-
     1010     6486                                         set to the beginning of the extent
     1011     6487                                         words (Five must be added to this
     1012     6488                                         offset to account to the granule
     1013     6489                                         header). Subtract 2 because we start
     1014     6490                                         at 0, and because the first word at
PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:31   
     1015     6491                                         the offset contains a 9 bit count
     1016     6492                                         (same as NDW except it tends to
     1017     6493                                         overflow). */
     1018     6494                                                     /**/
     1019     6495    4           DO IR = 0 TO EXTENT_WORDS - 2;
     1020     6496                                      /* 3 bytes are reserved for size */
     1021     6497    4           NUM=P$->CODE01.XTNT.XTNSIZE(I);
     1022     6498    4           DAD=P$->CODE01.XTNT.XTNSDA(I);
     1023     6499                                      /* If size is > 511, then size will be
     1024     6500                                         found in the 2nd word */
     1025     6501    4           IF NUM = 0 THEN
     1026     6502    5             DO;
     1027     6503    5             NUM=P$->CODE01.EXTNT.XTNSIZE(I);
     1028     6504    5             I=I+1;
     1029     6505    5             END;
     1030     6506                                      /* If an extent is partially filled,
     1031     6507                                         only get the filled part */
     1032     6508    4           IF UGRANS < NUM THEN
     1033     6509    4            NUM = UGRANS;
     1034     6510                                      /* Subtract size of 1st extent from
     1035     6511                                         num of occupied granules */
     1036     6512    4           UGRANS=UGRANS-NUM;     /* THE LAST EXTENT(S) MAY NOT BE ALL
     1037     6513                                        USED, HENCE WE MUST KEEP TRACK
     1038     6514                                        OF HOW MANY GRANS WE FIND AS COM-
     1039     6515                                        PARED TO UGRANS, AND ADJUST THE
     1040     6516                                        LAST EXTENT(S) ACCORDINGLY. */
     1041     6517                                      /* If extent size > 0, then tally the
     1042     6518                                         extent sizes and add (max size 511)
     1043     6519                                         extent(s) to extent list */
     1044     6520    4           IF NUM ~= 0 THEN
     1045     6521    5             DO;
     1046     6522    5             TGRANS=TGRANS+NUM;
     1047     6523    5             CALL ADD_EXT (NUM,DAD) ALTRET(ALTRT);
     1048     6524    5             END;
     1049     6525    4           END;
     1050     6526        /*
     1051     6527              TGRANS WILL BE ZERO IF THERE WERE NO EXTENTS, OR IF THE
PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:32   
     1052     6528              SIZE OF ALL OF 'EM WAS ZERO (WE DON'T TRUST ANYBODY)
     1053     6529        */
     1054     6530    3         IF TGRANS = 0 THEN
     1055     6531    3          GOTO GEXT4;
     1056     6532                                      /* Assign the num of granules used */
     1057     6533    3         FIL$->FO$FIL.GRANS = FIL$->FO$FIL.GRANS + TGRANS;
     1058     6534    3         RETURN;
     1059     6535
     1060     6536        %EJECT;
PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:33   
     1061     6537        /**
     1062     6538         ** ERR EXITS
     1063     6539         **/
     1064     6540    3   GEXT1:
     1065     6541    3         FIL_BADC          = FOFE_BFIT03#;
     1066     6542    3   ALTRT:;
     1067     6543    3         ALTRETURN;
     1068     6544    3   GEXT2:
     1069     6545    3         FIL_BADC          = FOFE_ZGRN#;
     1070     6546    3         ALTRETURN;
     1071     6547    3   GEXT4:
     1072     6548    3         FIL_BADC          = FOFE_ZEXT#;
     1073     6549    3         ALTRETURN;
     1074     6550    3   GEXT5:;
     1075     6551    3         FIL_BADC          = FOFE_BFIT01#;
     1076     6552    3         ALTRETURN;
     1077     6553
     1078     6554        %EJECT;
PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:34   
     1079     6555        /* SUBROUTINE TO ADD IN AN EXTENT FROM THE FIT.
     1080     6556
     1081     6557            MOOS CAN ONLY HANDLE EXTENTS UP TO 511 GRANULES IN LENGTH,
     1082     6558            SO WHENEVER WE ENCOUNTER A BIG EXTENT, WE MAKE MANY EXTENT
     1083     6559            ENTRIES FOR IT.   */
     1084     6560
     1085     6561    3   ADD_EXT: PROC (NGRAN,DAD) ALTRET;
     1086     6562
     1087     6563    4   DCL NGRAN UBIN;
     1088     6564    4   DCL DAD UBIN;
     1089     6565    4   DCL I UBIN;
     1090     6566    4   DCL CDAD UBIN;
     1091     6567    4   DCL CGRAN UBIN;
     1092     6568    4   DCL BADCNT UBIN;
     1093     6569
     1094     6570    4         BADCNT=0;
     1095     6571    4         CDAD=DAD;
     1096     6572    4         CGRAN=NGRAN;
     1097     6573    5           DO WHILE (CGRAN ~= 0);
     1098     6574    5           I=CGRAN;
     1099     6575    5           IF CGRAN>511 THEN I=511;
     1100     6576    5           CALL FOI$GBUF (FO_EXTSCB,EXT$) ALTRET(ADDEXT1);
     1101     6577    5           EXT$->FO$EXT.DAD=CDAD;
     1102     6578    5           EXT$->FO$EXT.GRANS=I;
     1103     6579    5           EXT$->FO$EXT.STAMP=STAMP;
     1104     6580    5           EXTENT.GRANS#=EXT$->FO$EXT.GRANS;
     1105     6581    5           EXTENT.DAD#=EXT$->FO$EXT.DAD;
     1106     6582    5           CHK_EXT.V.SETX#=FIL$->FO$FIL.SETX;
     1107     6583                                      /* Validate extent words */
     1108     6584    5           CALL M$SYMBIO (CHK_EXT) ALTRET(A0);
     1109     6585    5           GOTO A1;
     1110     6586    5   A0:     ;
     1111     6587    5           BADCNT=BADCNT+1;
     1112     6588    5   A1:     ;
     1113     6589    5           FIL$->FO$FIL.NUMEXT=FIL$->FO$FIL.NUMEXT+1;
     1114     6590    5           PREVEXT$->PTR$=EXT$;
     1115     6591    5           EXT$->FO$EXT.LNK$=ADDR(NIL);
PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:35   
     1116     6592    5           PREVEXT$=ADDR(EXT$->FO$EXT.LNK$);
     1117     6593    5           CGRAN=CGRAN-I;
     1118     6594    5           STAMP.FRDAD=STAMP.FRDAD+I;
     1119     6595    5           CDAD=CDAD+I;
     1120     6596    5           END;
     1121     6597    4         IF BADCNT ~= 0 THEN
     1122     6598    4          GOTO ADDEXT2;
     1123     6599    4         RETURN;
     1124     6600    4   ADDEXT1:
     1125     6601    4         FIL_BADC=FOFE_NEFR#;
     1126     6602    4         ALTRETURN;
     1127     6603    4   ADDEXT2:;
     1128     6604    4         FIL_BADC=FOFE_BEXT#;
     1129     6605    4         ALTRETURN;
     1130     6606    4   END ADD_EXT;
     1131     6607    3   END GRAB_EXTS;
     1132     6608    2   END ADD_FILE;
     1133     6609        %EJECT;
PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:36   
     1134     6610        /*
     1135     6611                    #   #   #####   #   #    ###    #   #
     1136     6612                    #  #    #       #   #     #     #   #
     1137     6613                    # #     #        # #      #     ##  #
     1138     6614                    ##      ####      #       #     # # #
     1139     6615                    # #     #         #       #     #  ##
     1140     6616                    #  #    #         #       #     #   #
     1141     6617                    #   #   #####     #      ###    #   #
     1142     6618
     1143     6619        */
     1144     6620        /*F* NAME:         FOF$KEYIN
     1145     6621             PURPOSE:      To process file keyins for OUTSYM
     1146     6622             DESCRIPTION:  All keyins which act upon output symbiont files
     1147     6623                           are processed by this routine.
     1148     6624
     1149     6625                           The parameters supplied by KEYIN are
     1150     6626
     1151     6627                           o SYSID is the specified sysid
     1152     6628
     1153     6629                           o NUM is the file NUM (-1 if not specified)
     1154     6630
     1155     6631                           o SWSN is the WSN to switch to
     1156     6632
     1157     6633                           o FWSN is the 'from' WSN, i.e. the WSN to
     1158     6634                             use in selecting files; if it is the WSN of
     1159     6635                             a system console, all WSNs are selected
     1160     6636                                (NOTWSN reverses the sense of this, that is,
     1161     6637                                 if NOTWSN is set, select all files NOT
     1162     6638                                 going to FWSN)
     1163     6639
     1164     6640                           o WSN is the WSN of the issuing console
     1165     6641
     1166     6642                           o ACCT is the account to use for selection
     1167     6643                                (NOTACCT reverses the sense)
     1168     6644
     1169     6645                           o PRIO is the priority to change to
     1170     6646
PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:37   
     1171     6647                           o FORM is the form name to use for selection
     1172     6648                                (NOTFORM reverses the sense)
     1173     6649
     1174     6650
     1175     6651
     1176     6652                           The current keyins are:
     1177     6653
     1178     6654
     1179     6655                      o PRIO changes the selected file (SYSID/NUM) to
     1180     6656                           PRIO, provided that it is going to FWSN
     1181     6657
     1182     6658                      o PRIOACCT changes all files from ACCT going to
     1183     6659                           FWSN, to PRIO
     1184     6660
     1185     6661                      o PRIOALL changes all files going to FWSN
     1186     6662
     1187     6663                      o DELETE deletes the selected file (SYSID/NUM), pro-
     1188     6664                           vided that it is going to FWSN
     1189     6665
     1190     6666                      o DELETEALL deletes all files going to FWSN
     1191     6667
     1192     6668                      o DELETEACCT deletes all files from ACCT going to
     1193     6669                           FWSN
     1194     6670
     1195     6671                      o DELETEFORM deletes all files for form FORM going to
     1196     6672                           FWSN
     1197     6673
     1198     6674                      o SWITCH switches the selected file (SYSID/NUM) to
     1199     6675                           SWSN, provided that either the file's account
     1200     6676                           has access to that WSN, or the issuing console
     1201     6677                           is a system console.
     1202     6678
     1203     6679                      o SWITCHALL switches all files going to FWSN, to
     1204     6680                           SWSN, subject to the above restriction.
     1205     6681
     1206     6682                      o SWITCHACCT switches all files from ACCT, going
     1207     6683                           to FWSN, to SWSN, subject to the above
PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:38   
     1208     6684                           restriction.
     1209     6685
     1210     6686                      o SWITCHFORM switches all files for form FORM to SWSN,
     1211     6687                           subject to the above restriction
     1212     6688
     1213     6689
     1214     6690                      There are restrictions on when the various flavours
     1215     6691                      of keyins may be issued:
     1216     6692
     1217     6693                      o The PRIO flavours cannot be issued to files which
     1218     6694                        are printing or being spilled
     1219     6695
     1220     6696                      o The SWITCH flavours cannot be issued to files
     1221     6697                        which are printing or being spilled, or which
     1222     6698                        have a form name which does not exist at the
     1223     6699                        target terminal
     1224     6700
     1225     6701                      o The DELETE flavours cannot be issued to files which
     1226     6702                        are being spilled. */
     1227     6703    1   FOF$KEYIN: ENTRY(FIL_SYSID) ALTRET; /* !!Doesn't ALTRET!! */
     1228     6704                                /* FIL_SYSID IS REALLY THE POINTER TO THE
     1229     6705                                   FILE KEYIN FRAME.  (KEYIN$)  */
     1230     6706
     1231     6707              %JLOCK;
     1232     6710    1         CALL FIL_KEYIN;
     1233     6711              %JUNLOCK;
     1234     6714    1         RETURN;
     1235     6715
     1236     6716                                /* PROC TO PERFORM KEYIN LOGIC WITH
     1237     6717                                   JOBSTATS GATE LOCKED */
     1238     6718    1   FIL_KEYIN: PROC ALTRET;
     1239     6719        /**/
     1240     6720    2   DCL KFIL$ PTR;
     1241     6721    2   DCL KPRIO SBIN WORD;
     1242     6722    2   DCL CPRIO UBIN WORD;
     1243     6723    2   DCL FWSN CHAR(8);
     1244     6724    2   DCL CWSN CHAR(8);
PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:39   
     1245     6725    2   DCL RSUBC UBIN WORD;
     1246     6726    2   DCL NFILF UBIN WORD;
     1247     6727    2   DCL ESUBC2 UBIN WORD;
     1248     6728    2   DCL KIN# UBIN;
     1249     6729    2   DCL FIRST_ONE BIT(1);
     1250     6730    2   DCL FIRST_ONE$ PTR;
     1251     6731        /**/
     1252     6732    2         KCNT=KCNT+1;
     1253     6733    2         KIN#=KEYIN$->FO$FKEYIN.KIN#;
     1254     6734    2         SYSID=KEYIN$->FO$FKEYIN.SYSID;
     1255     6735    2         KNUM=KEYIN$->FO$FKEYIN.NUM;
     1256     6736    2         FWSN=KEYIN$->FO$FKEYIN.FWSN;
     1257     6737    2         CWSN=KEYIN$->FO$FKEYIN.WSN;
     1258     6738    2         OPMSG_KERR1.CADDR=KEYIN$->FO$FKEYIN.CADDR;
     1259     6739    2         OPMSG_RESP.CADDR=KEYIN$->FO$FKEYIN.CADDR;
     1260     6740    2         IF KNUMR = -1 THEN  /* If file # NOT specified on (DELEO/SWITCHO/PRIOO) */
     1261     6741    2          OPMSG_RESP.NUM = 0;               /* Don't let KEYIN display a file # */
     1262     6742    2         ELSE
     1263     6743    2          OPMSG_RESP.NUM = KNUMR; /* Let KEYIN display # of file being affected */
     1264     6744
     1265     6745                                /* VERIFY THE PARAMETERS */
     1266     6746
     1267     6747    3           DO CASE (KIN#);
     1268     6748    3             CASE (KEY_PRIOOACCT#);
     1269     6749    3               RSUBC=FOKR_PRIOACCT#;
     1270     6750    3               GOTO KPRIOPREP;
     1271     6751    3             CASE (KEY_PRIOO#);
     1272     6752    3               RSUBC=FOKR_PRIO#;
     1273     6753    3   KPRIOPREP:  ;
     1274     6754    3               OPMSG_RESP.PRIO=KEYIN$->FO$FKEYIN.PRIO;
     1275     6755    3               IF KEYIN$->FO$FKEYIN.PRIO > 15 THEN
     1276     6756    4                 DO;
     1277     6757    4                 OPMSG_KERR1.SYSID=SYSID;
     1278     6758    4                 OPMSG_KERR1.SUBC=FOKE_BPRIO#;
     1279     6759    4                 CALL M$WRITE (OCMSG_KERR1);
     1280     6760    4                 RETURN;
     1281     6761    4                 END;
PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:40   
     1282     6762    3             CASE (KEY_PRIOOALL#);
     1283     6763    3               RSUBC=FOKR_PRIOALL#;
     1284     6764    3               GOTO KPRIOPREP;
     1285     6765    3             CASE (KEY_DELETEOFORM#);
     1286     6766    3               RSUBC=FOKR_DELFORM#;
     1287     6767    3             CASE (KEY_DELETEOALL#);
     1288     6768    3               RSUBC=FOKR_DELALL#;
     1289     6769    3             CASE (KEY_DELETEOACCT#);
     1290     6770    3               RSUBC=FOKR_DELACCT#;
     1291     6771    3             CASE (KEY_DELETEO#);
     1292     6772    3               RSUBC=FOKR_DEL#;
     1293     6773    3             CASE (KEY_SWITCHOFORM#);
     1294     6774    3               RSUBC=FOKR_SWITFORM#;
     1295     6775    3             CASE (KEY_SWITCHOALL#);
     1296     6776    3               RSUBC=FOKR_SWITALL#;
     1297     6777    3             CASE (KEY_SWITCHOACCT#);
     1298     6778    3               RSUBC=FOKR_SWITACCT#;
     1299     6779    3             CASE (KEY_SWITCHO#);
     1300     6780    3               RSUBC=FOKR_SWIT#;
     1301     6781
     1302     6782    3           END;
     1303     6783
     1304     6784    2         OPMSG_RESP.SUBC=RSUBC;
     1305     6785    2         NFIL=0;                                        /* COUNT FILES PROCESSED */
     1306     6786    2         NFILF=0;                                  /* COUNT FILES ACTUALLY FOUND */
     1307     6787                                /* LOOP THRU ALL PRIO CHAINS */
     1308     6788    3   LOOP:   DO KPRIO = FOPR_MAX# DOWNTO 0;
     1309     6789
     1310     6790    3           FIL$=FO_Q.FILHD$(KPRIO);
     1311     6791    3           FIRST_ONE = '1'B; /* Used to find 1st specified file for SWITCH keyin */
     1312     6792    3           FIRST_ONE$ = ADDR(NIL);    /* Same as above (really?  No kidding!!! */
     1313     6793
     1314     6794    4             DO WHILE (FIL$ ~= ADDR(NIL) AND FIL$ ~= FIRST_ONE$);
     1315     6795
     1316     6796    4             KFIL$=FIL$->FO$FIL.LNK$;
     1317     6797    4             DEV$=FIL$->FO$FIL.CDEV$;
     1318     6798                                      /* CHK routines are used to verify if
PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:41   
     1319     6799                                         the file is to be included in this
     1320     6800                                         action */
     1321     6801
     1322     6802    5               DO CASE (KIN#);
     1323     6803    5                 CASE (KEY_PRIOOACCT#);
     1324     6804    5                   CALL CHK_KFIL2 ALTRET(KPRIO);
     1325     6805    5                 CASE (KEY_PRIOOALL#);
     1326     6806    5                   CALL CHK_KFIL ALTRET(KPRIO);
     1327     6807    5                 CASE (KEY_PRIOO#);
     1328     6808    5                   CALL CHK_KFIL1 ALTRET(KPRIO);
     1329     6809    5                   GOTO KEYIN0;
     1330     6810    5   KPRIO:          ;
     1331     6811    5                   ESUBC2=0;
     1332     6812                                      /**/
     1333     6813                                      /* If a file is already on a device,
     1334     6814                                         we can't PRIO, or SWITCH it.  This
     1335     6815                                         message indicates which file we
     1336     6816                                         cannot change.  This will result in
     1337     6817                                         the second message having an "other"
     1338     6818                                         clause in it. */
     1339     6819                                      /**/
     1340     6820    5                   IF DEV$ ~= ADDR(NIL) THEN
     1341     6821    6                     DO;
     1342     6822    6   KERRPRT:          ;
     1343     6823    6                     OPMSG_KERR1.SUBC1=0;
     1344     6824    6   KERR:             ;
     1345     6825    6                     OPMSG_KERR1.SUBC=FOKE_CMFIL#;
     1346     6826    6                     OPMSG_KERR1.SYSID=FIL$->FO$FIL.SYSID;
     1347     6827    6                     OPMSG_KERR1.NUM=FIL$->FO$FIL.NUM;
     1348     6828    6                     OPMSG_KERR1.SUBC2=ESUBC2;
     1349     6829    6                     CALL M$WRITE (OCMSG_KERR1);
     1350     6830    6                     GOTO KEYIN0;
     1351     6831    6                     END;
     1352     6832    5                   IF FIL$->FO$FIL.FLG.SPILL THEN
     1353     6833    6                     DO;
     1354     6834    6   KERRSPILL:        ;
     1355     6835    6                     OPMSG_KERR1.SUBC1=1;
PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:42   
     1356     6836    6                     GOTO KERR;
     1357     6837    6                     END;
     1358     6838    5                   IF FIL$->FO$FIL.KCNT ~= KCNT THEN
     1359     6839    6                     DO;
     1360     6840    6                     FIL$->FO$FIL.KCNT=KCNT;
     1361     6841    6                     NFIL=NFIL+1;
     1362     6842    6                     FIL$->FO$FIL.IPRIO=KEYIN$->FO$FKEYIN.PRIO;
     1363     6843    6                     FIL$->FO$FIL.FLG.CPRIO='1'B;
     1364     6844                                      /* Does new prio differ from old */
     1365     6845    6                     IF FIL$->FO$FIL.PRIO ~= (KEYIN$->FO$FKEYIN.PRIO+FOPR_P0#) THEN
     1366     6846    7                       DO;
     1367     6847    7                       IF  FIL$->FO$FIL.PRIO ~= FOPR_SPILLED#
     1368     6848    7                       AND FIL$->FO$FIL.PRIO ~= FOPR_HOLD# THEN
     1369     6849    8                         DO;
     1370     6850    8                         CALL UNCHAIN_FILE;
     1371     6851    8                         FIL$->FO$FIL.PRIO=KEYIN$->FO$FKEYIN.PRIO+FOPR_P0#;
     1372     6852    8                         CALL CHAIN_FILE;
     1373     6853    8                         END;
     1374     6854    7                       END;
     1375     6855    6                     FUCODE=FOFU_PRIO#;
     1376     6856    6                     CALL UPD_FILE1;
     1377     6857    6                     END;
     1378     6858                                      /**/
     1379     6859                                      /* Files PRIOed down will be found twice
     1380     6860                                         because they get unchained and re-
     1381     6861                                         chained when we go thru the above
     1382     6862                                         code.  This means that NFILF will be
     1383     6863                                         INCRed twice for the same file
     1384     6864                                         (when we come across it again).  We
     1385     6865                                         must compensate the NFILFs found
     1386     6866                                         count here so we don't accidentally
     1387     6867                                         get the "other" clause. */
     1388     6868                                      /**/
     1389     6869    5                   ELSE
     1390     6870    6                     DO;
     1391     6871    6                     NFILF = NFILF - 1;
     1392     6872    6                     END;
PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:43   
     1393     6873    5                 CASE (KEY_SWITCHOFORM#);
     1394     6874    5                   CALL CHK_KFIL3 ALTRET(KSWIT);
     1395     6875    5                 CASE (KEY_SWITCHOACCT#);
     1396     6876    5                   CALL CHK_KFIL2 ALTRET(KSWIT);
     1397     6877    5                 CASE (KEY_SWITCHOALL#);
     1398     6878    5                   CALL CHK_KFIL ALTRET(KSWIT);
     1399     6879    5                 CASE (KEY_SWITCHO#);
     1400     6880    5                   CALL CHK_KFIL1 ALTRET(KSWIT);
     1401     6881    5                   GOTO KEYIN0;
     1402     6882    5   KSWIT:          ;
     1403     6883    6                   IF FIRST_ONE THEN DO;
     1404     6884    6                     FIRST_ONE = '0'B;
     1405     6885    6                     FIRST_ONE$ = FIL$;
     1406     6886    6                     END;
     1407     6887                                      /* If already at that WSN, just incr
     1408     6888                                         NFIL */
     1409     6889    5                   IF FIL$->FO$FIL.DESTR.WSN=KEYIN$->FO$FKEYIN.SWSN THEN
     1410     6890    5                    NFIL=NFIL+1;
     1411     6891    5                   ELSE
     1412     6892    6                     DO;
     1413     6893                                      /* Is this file currently on a device */
     1414     6894    6                     IF DEV$ ~= ADDR(NIL) THEN GOTO KERRPRT;
     1415     6895                                      /* NFILF = files found,
     1416     6896                                         NFIL  = files processed */
     1417     6897    6                     IF FIL$->FO$FIL.FLG.SPILL THEN GOTO KERRSPILL;
     1418     6898    6                     CALL FOR$TCHK (FIL$->FO$FIL.FORM,KEYIN$->FO$FKEYIN.SWSN) ALTRET(
              6898                              KERRFORM);
     1419     6899    6                     GOTO KSWIT0;
     1420     6900    6   KERRFORM:         ;
     1421     6901    6                     OPMSG_KERR1.SUBC1=2;
     1422     6902    6                     GOTO KERR;
     1423     6903    6   KSWIT0:           ;
     1424     6904    6                     NFIL=NFIL+1;
     1425     6905    6                     CALL UNCHAIN_FILE;
     1426     6906    6                     FIL$->FO$FIL.DESTR.WSN=KEYIN$->FO$FKEYIN.SWSN;
     1427     6907    6                     CALL CHAIN_FILE;
     1428     6908    6                     FUCODE=FOFU_SWIT#;
PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:44   
     1429     6909    6                     CALL UPD_FILE1;
     1430     6910    6                     CALL FOD$AVAIL;
     1431     6911    6                     IF KIN# = KEY_SWITCHO# AND  /* SWITCH O sysid-num specified */
     1432     6912    6                     KNUMR ~= -1    /* A -1 indicates no num specified */
     1433     6913    6                     THEN     /* Exit loop, only 1 file to change and we did it */
     1434     6914    6                      EXIT LOOP;
     1435     6915    6                     END;
     1436     6916    5                 CASE (KEY_DELETEOFORM#);
     1437     6917    5                   CALL CHK_KFIL3 ALTRET(KDEL);
     1438     6918    5                 CASE (KEY_DELETEOACCT#);
     1439     6919    5                   CALL CHK_KFIL2 ALTRET(KDEL);
     1440     6920    5                 CASE (KEY_DELETEOALL#);
     1441     6921    5                   CALL CHK_KFIL ALTRET(KDEL);
     1442     6922    5                 CASE (KEY_DELETEO#);
     1443     6923    5                   CALL CHK_KFIL1 ALTRET(KDEL);
     1444     6924    5                   GOTO KEYIN0;
     1445     6925    5   KDEL:           ;
     1446     6926    5                   ESUBC2=2;
     1447     6927    5                   IF FIL$->FO$FIL.FLG.SPILL THEN
     1448     6928    5                    GOTO KERRSPILL;
     1449     6929    5                   NFIL=NFIL+1;
     1450     6930    5                   IF DEV$ = ADDR(NIL) THEN
     1451     6931    5                    CALL DEL_FILE;
     1452     6932    5                   ELSE
     1453     6933    5                    CALL FOD$EVENT (FODE_QUIT#,FOQR_DEL#);
     1454     6934    5               END; /* CASE KIN# */
     1455     6935
     1456     6936    4   KEYIN0:   ;
     1457     6937    4             FIL$=KFIL$;
     1458     6938    4             END;
     1459     6939    3           END;
     1460     6940
     1461     6941                                /* MESSAGE IF NONE FOUND */
     1462     6942    3         IF NFILF = 0 THEN DO;
     1463     6943    3           OPMSG_KERR1.SUBC=FOKE_NOFIL#;
     1464     6944    3           CALL M$WRITE (OCMSG_KERR1);
     1465     6945    3           END;
PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:45   
     1466     6946    2         ELSE
     1467     6947    3          IF NFIL ~= 0 THEN DO;             /* At least one file has been changed */
     1468     6948    3            IF NFILF = NFIL THEN
     1469     6949    3             OPMSG_RESP.SUBC2=0;
     1470     6950    3            ELSE
     1471     6951    3             OPMSG_RESP.SUBC2=1;
     1472     6952    3            OPMSG_RESP.NFIL=NFIL;
     1473     6953    3            OPMSG_RESP.SYSID=SYSID;
     1474     6954    3            OPMSG_RESP.SWSN=KEYIN$->FO$FKEYIN.SWSN;
     1475     6955    3            CALL M$WRITE (OCMSG_RESP);
     1476     6956    3            END;
     1477     6957
     1478     6958    2         RETURN;
     1479     6959                               /* Routine to check if this file ought to be processed */
     1480     6960    2   CHK_KFIL2: PROC ALTRET;
     1481     6961    3         IF KEYIN$->FO$FKEYIN.NOTACCT = 0 THEN
     1482     6962    3          IF FIL$->FO$FIL.OJOB$->FO$JOB.ACCT ~= KEYIN$->FO$FKEYIN.ACCT THEN RETURN;
     1483     6963    3          ELSE;
     1484     6964    3         ELSE
     1485     6965    3          IF FIL$->FO$FIL.OJOB$->FO$JOB.ACCT = KEYIN$->FO$FKEYIN.ACCT THEN RETURN;
     1486     6966    3         GOTO CHK;
     1487     6967
     1488     6968    3   CHK_KFIL3: ENTRY ALTRET;
     1489     6969    3         IF KEYIN$->FO$FKEYIN.NOTFORM = 0 THEN
     1490     6970    3          IF FIL$->FO$FIL.FORM ~= KEYIN$->FO$FKEYIN.FNAME.FORM THEN RETURN;
     1491     6971    3          ELSE;
     1492     6972    3         ELSE
     1493     6973    3          IF FIL$->FO$FIL.FORM = KEYIN$->FO$FKEYIN.FNAME.FORM THEN RETURN;
     1494     6974
     1495     6975    3   CHK:  ;
     1496     6976
     1497     6977    3   CHK_KFIL: ENTRY ALTRET;
     1498     6978                                           /* First check if this console is
     1499     6979                                           able to affect changes to the
     1500     6980                                           specified file.  If none was spec-
     1501     6981                                           ified, the console's wsn should be
     1502     6982                                           in the FWSN field. */
PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:46   
     1503     6983    3         CALL INDEX (I, '?', KEYIN$ -> FO$FKEYIN.WSN);
     1504     6984    3         IF SUBSTR (KEYIN$ -> FO$FKEYIN.WSN, 0, I)
     1505     6985    3         ~= SUBSTR (KEYIN$ -> FO$FKEYIN.FWSN, 0, I)
     1506     6986    3         THEN
     1507     6987    3          RETURN;
     1508     6988
     1509     6989    3         IF KEYIN$->FO$FKEYIN.NOTWSN = 0
     1510     6990    4         THEN DO;
     1511     6991    4           CALL INDEX (I, '?', KEYIN$ -> FO$FKEYIN.FWSN);
     1512     6992    4           IF SUBSTR (FIL$ -> FO$FIL.DESTR.WSN, 0, I)
     1513     6993    4           ~= SUBSTR (KEYIN$ -> FO$FKEYIN.FWSN, 0, I)
     1514     6994    4           THEN
     1515     6995    4            RETURN;
     1516     6996    4           END;
     1517     6997    3         ELSE
     1518     6998    4           DO;
     1519     6999    4           IF FWSN = FIL$->FO$FIL.DESTR.WSN THEN RETURN;
     1520     7000    4           END;
     1521     7001    3         NFILF=NFILF+1;
     1522     7002    3         ALTRETURN;
     1523     7003
     1524     7004    3   CHK_KFIL1: ENTRY ALTRET;
     1525     7005
     1526     7006    3         IF FIL$->FO$FIL.FLG.SPILL THEN RETURN;
     1527     7007    3         CALL INDEX (I, '?', KEYIN$ -> FO$FKEYIN.WSN);
     1528     7008    3         IF  (KNUMR = -1 OR FIL$->FO$FIL.NUM = KNUM)
     1529     7009    3         AND SYSID = FIL$->FO$FIL.SYSID
     1530     7010    3         AND (SUBSTR (CWSN, 0, I) = SUBSTR (FIL$ -> FO$FIL.DESTR.WSN, 0, I)
     1531     7011    3         OR CWSN = FIL$->FO$FIL.DESTR.WSN) THEN
     1532     7012    4           DO;
     1533     7013    4           NFILF=NFILF+1;
     1534     7014    4           ALTRETURN;
     1535     7015    4           END;
     1536     7016    3         RETURN;
     1537     7017    3   END CHK_KFIL2;
     1538     7018    2   END FIL_KEYIN;
     1539     7019        %EJECT;
PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:47   
     1540     7020        /*
     1541     7021            #####   #   #   #####   #####   ####    #   #    ###    #
     1542     7022            #       #   #     #     #       #   #   #   #   #   #   #
     1543     7023            #        # #      #     #       #   #   ##  #   #   #   #
     1544     7024            ####      #       #     ####    ####    # # #   #####   #
     1545     7025            #        # #      #     #       # #     #  ##   #   #   #
     1546     7026            #       #   #     #     #       #  #    #   #   #   #   #
     1547     7027            #####   #   #     #     #####   #   #   #   #   #   #   #####
     1548     7028
     1549     7029
     1550     7030
     1551     7031            #####   #   #   #####   ####     ###    #####    ###
     1552     7032            #       #   #     #     #   #     #     #       #   #
     1553     7033            #       ##  #     #     #   #     #     #       #
     1554     7034            ####    # # #     #     ####      #     ####     ###
     1555     7035            #       #  ##     #     # #       #     #           #
     1556     7036            #       #   #     #     #  #      #     #       #   #
     1557     7037            #####   #   #     #     #   #    ###    #####    ###
     1558     7038
     1559     7039        */
     1560     7040        /*  Order: FOF$FITUPD        Update FIT of a symbiont file
     1561     7041                   FOF$DELETE        Delete an output symbiont file
     1562     7042                   FOF$REMOVE        Remove entry from file table
     1563     7043                   FOF$CHAIN         Put a file on a prio chain
     1564     7044                   FOF$UNCHAIN       Remove a file from a file chain
     1565     7045                   FOF$RERUN         Delete output for jobs being rerun
     1566     7046                   FOF$CANCEL        Abort and delete file(s)
     1567     7047                   FOF$ERASE         Handle user ERASE of a file
     1568     7048                   FOF$SPILLDONE     Handle SPILLDONE event
     1569     7049                   FOF$LASTEXT       Find last entry in a file's extent chain
     1570     7050                   FOF$UNHOLD        Remove files from "HOLD" status
     1571     7051                   FOF$COMPJOB       Handle job completion clean-up
     1572     7052                   FOF$PRIO          Assign file priorities
     1573     7053                   FOF$REPRIO        Re-prio a file
     1574     7054                   FOF$HEXPIRE       Periodically called from main to expire
     1575     7055                                     "HELD" files
     1576     7056        */
PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:48   
     1577     7057        /*F* NAME:         FOF$FITUPD
     1578     7058             PURPOSE:      To update the FIT of an output symbiont file
     1579     7059             DESCRIPTION:  It is sometimes nescessary to update the FIT
     1580     7060                           of an output symbiont file in order to preserve
     1581     7061                           certain status across recoveries.  Examples of
     1582     7062                           this are remembering number of copies printed,
     1583     7063                           and recording the fact that a file inconsistency
     1584     7064                           was encountered.
     1585     7065
     1586     7066                           This routine is called with FO_FIL$ pointing to
     1587     7067                           the file table entry for the file to be updated.
     1588     7068                           The first parameter is a code for what needs to
     1589     7069                           be updated, and the third is the commode chunk
     1590     7070                           number of the actual file management file to be
     1591     7071                           updated.      */
     1592     7072    1   FOF$FITUPD: ENTRY (FIL_SYSID,FIL_NUM,XFIL_CNUM) ALTRET;
     1593     7073
     1594     7074                                /* FIL_SYSID IS FUCODE */
     1595     7075
     1596     7076    1         FUCODE=XFUCODE;
     1597     7077    1         FIL_CNUM=XFIL_CNUM;
     1598     7078    1         CALL UPD_FILE ALTRET(ALTRT);
     1599     7079    1         RETURN;
     1600     7080        /**/
     1601     7081        /**/
     1602     7082        /*F* NAME:         FOF$DELETE
     1603     7083             PURPOSE:      To delete an output symbiont file
     1604     7084             DESCRIPTION:  This routine deletes (from :SYMO and from OUTSYM's
     1605     7085                           tables), the file pointed to by FO_FIL$ */
     1606     7086    1   FOF$DELETE: ENTRY ALTRET; /* !!Doesn't ALTRET!! */
     1607     7087
     1608     7088    1         CALL DEL_FILE;
     1609     7089    1         RETURN;
     1610     7090        /**/
     1611     7091        /**/
     1612     7092        /*F* NAME:         FOF$REMOVE
     1613     7093             PURPOSE:      To remove an output symbiont file from OUTSYM's tables
PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:49   
     1614     7094             DESCRIPTION:  This routine deletes (from OUTSYM's tables) the
     1615     7095                           file pointed to by FO_FIL$, without deleting the
     1616     7096                           file from :SYMO.    */
     1617     7097    1   FOF$REMOVE: ENTRY ALTRET; /* !!Doesn't ALTRET!! */
     1618     7098
     1619     7099    1         CALL REM_FILE;
     1620     7100    1         RETURN;
     1621     7101        /**/
     1622     7102        /**/
     1623     7103        /*F* NAME:         FOF$CHAIN
     1624     7104             PURPOSE:      To place a file on its prio chain
     1625     7105             DESCRIPTION:  The file pointed to by FO_FIL$ is placed on
     1626     7106                           the priority chain indicated by FO$FIL.PRIO
     1627     7107        */
     1628     7108    1   FOF$CHAIN: ENTRY ALTRET; /* !!Doesn't ALTRET!! */
     1629     7109
     1630     7110    1         CALL CHAIN_FILE;
     1631     7111    1         RETURN;
     1632     7112        /**/
     1633     7113        /**/
     1634     7114        /*F* NAME:         FOF$UNCHAIN
     1635     7115             PURPOSE:      To remove a file from its prio chain
     1636     7116             DESCRIPTION:  The file pointed to by FO_FIL$ is removed
     1637     7117                           from the priority chain indicated by FO$FIL.PRIO
     1638     7118        */
     1639     7119    1   FOF$UNCHAIN: ENTRY ALTRET; /* !!Doesn't ALTRET!! */
     1640     7120
     1641     7121    1         CALL UNCHAIN_FILE;
     1642     7122    1         RETURN;
     1643     7123        /**/
     1644     7124        /**/
     1645     7125        /*F* NAME:         FOF$RERUN
     1646     7126             PURPOSE:      To delete output for jobs being rerun
     1647     7127             DESCRIPTION:  The job is identified by SYSID, and the other
     1648     7128                           2 params passed must be -1 and 0 (resp), to
     1649     7129                           make the code work. */
     1650     7130    1   FOF$RERUN: ENTRY (FIL_SYSID,FIL_NUM,XFIL_CNUM) ALTRET;
PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:50   
     1651     7131
     1652     7132    1         DEVSUBC=FOQR_RRUN#;
     1653     7133    1         GOTO CANCEL0;
     1654     7134        /**/
     1655     7135        /**/
     1656     7136        /*F* NAME:         FOF$CANCEL
     1657     7137             PURPOSE:      To abort & delete a file or files
     1658     7138             DESCRIPTION:  The file or files are identified by SYSID
     1659     7139                           and NUM (NUM=-1 gets all files for a sysid),
     1660     7140                           and are aborted if currently printing, and
     1661     7141                           in any case deleted.  If BATCHFLG is set,
     1662     7142                           this is a batch job whose output is to be
     1663     7143                           cancelled.
     1664     7144                           Thus we must set the OCANCEL bit in the job's flags
     1665     7145                           to cause deletion of subsequent files as they arrive,
     1666     7146                           even if there is no output currently for the job
     1667     7147                           (this last case causes us to create an entry for
     1668     7148                           the job right now, setting the bit).   */
     1669     7149    1   FOF$CANCEL: ENTRY (FIL_SYSID,FIL_NUM,XFIL_CNUM) ALTRET;
     1670     7150
     1671     7151    1         DEVSUBC=FOQR_CNCL#;
     1672     7152
     1673     7153    1         IF FIL_NUMR = -1 THEN
     1674     7154    2           DO;
     1675     7155                                /* BATCHFLG IS XFIL_CNUM */
     1676     7156    2   CANCEL0:;
     1677     7157    2           JOB_SYSID=FIL_SYSID;
     1678     7158    2           CALL FIND_JOB ALTRET(CANCEL1);
     1679     7159    2           IF JOB$->FO$JOB.MODE = %M_BATCH#
     1680     7160    2           AND DEVSUBC = FOQR_CNCL# THEN
     1681     7161    2            JOB$->FO$JOB.FLG.OCANCEL='1'B;
     1682     7162    2           FIL$=JOB$->FO$JOB.FILHD$;
     1683     7163    3             DO WHILE (FIL$ ~= ADDR(NIL));
     1684     7164    3             NXTFIL$=FIL$->FO$FIL.JLNK$;
     1685     7165    3             DEV$=FIL$->FO$FIL.CDEV$;
     1686     7166    3             IF DEV$ = ADDR(NIL) THEN
     1687     7167    3              CALL DEL_FILE;
PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:51   
     1688     7168    3             ELSE
     1689     7169    3              CALL FOD$EVENT (FODE_QUIT#,DEVSUBC);
     1690     7170    3             FIL$=NXTFIL$;
     1691     7171    3             END;
     1692     7172    2           RETURN;
     1693     7173                                /* DIDN'T FIND JOB ENTRY.  THIS MEANS NO
     1694     7174                                   OUTPUT IS HERE FOR THAT SYSID.  IF
     1695     7175                                   BATCHFLG IS SET, CREATE JOB ENTRY AND
     1696     7176                                   SET CANCEL BIT.  */
     1697     7177    2   CANCEL1:;
     1698     7178    2           IF BATCHFLG = 0 THEN RETURN;
     1699     7179    2           JNL=0;
     1700     7180    2           CALL ADD_JOB ALTRET(ALTRT);
     1701     7181    2           JOB$->FO$JOB.MODE=%M_BATCH#;
     1702     7182    2           JOB$->FO$JOB.FLG.OCANCEL='1'B;
     1703     7183    2           RETURN;
     1704     7184    2           END;
     1705     7185    1         ELSE
     1706     7186    2           DO;
     1707     7187    2   CANCEL2:;
     1708     7188    2           CALL FIND_FILE ALTRET(ALTRT);
     1709     7189    2           DEV$=FIL$->FO$FIL.CDEV$;
     1710     7190    2           IF DEV$ = ADDR(NIL) THEN
     1711     7191    2            CALL DEL_FILE;
     1712     7192    2           ELSE
     1713     7193    2            CALL FOD$EVENT (FODE_QUIT#,DEVSUBC);
     1714     7194    2           RETURN;
     1715     7195    2           END;
     1716     7196        /**/
     1717     7197        /**/
     1718     7198        /*F* NAME:         FOF$ERASE
     1719     7199             PURPOSE:      To handle a user ERASE of a file
     1720     7200             DESCRIPTION:  The event is passed by the output COOP when
     1721     7201                           the user says erase for a specific file.  It
     1722     7202                           deletes the file even if it's commode and is
     1723     7203                           printing. */
     1724     7204    1   FOF$ERASE: ENTRY(FIL_SYSID,FIL_NUM,XFIL_CNUM) ALTRET;
PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:52   
     1725     7205
     1726     7206    1         DEVSUBC=FOQR_CDEL#;
     1727     7207    1         GOTO CANCEL2;
     1728     7208        /**/
     1729     7209        /**/
     1730     7210        /*F* NAME:         FOF$SPILLDONE
     1731     7211             PURPOSE:      To handle the SPILLDONE event
     1732     7212             DESCRIPTION:  The file identified by SYSID and NUM must
     1733     7213                           be marked for spill.  If it is, then it
     1734     7214                           is dealt with according to the specified
     1735     7215                           disposition. */
     1736     7216    1   FOF$SPILLDONE: ENTRY (FIL_SYSID,FIL_NUM,XFIL_CNUM) ALTRET;
     1737     7217
     1738     7218                                /* SPILLDISP IS XFIL_CNUM */
     1739     7219    1         CALL FIND_FILE ALTRET(ALTRT);
     1740     7220    1         IF FIL$->FO$FIL.FLG.SPILL = '0'B THEN ALTRETURN;
     1741     7221    2           DO CASE (SPILLDISP);
     1742     7222
     1743     7223    2             CASE (%FD_REMOVE#);
     1744     7224    2               CALL DEL_FILE;
     1745     7225
     1746     7226    2             CASE (%FD_SPILLED#);
     1747     7227    2               FUCODE=FOFU_SPIL#;
     1748     7228    2               CALL UPD_FILE1;
     1749     7229    2               CALL UNCHAIN_FILE;
     1750     7230    2               FIL$->FO$FIL.PRIO=FOPR_SPILLED#;
     1751     7231    2               CALL CHAIN_FILE;
     1752     7232
     1753     7233    2             CASE (%FD_REQUEUE#);
     1754     7234    2               FIL$->FO$FIL.FLG.SPILL='0'B;
     1755     7235
     1756     7236    2           END;
     1757     7237    1         RETURN;
     1758     7238        /**/
     1759     7239        /**/
     1760     7240        /*F* NAME:         FOF$LASTEXT
     1761     7241             PURPOSE:      To find the last entry in a file's extent chain
PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:53   
     1762     7242             DESCRIPTION:  The passed pointer is set to point to the last
     1763     7243                           entry in the extent chain of the file pointed
     1764     7244                           to by FO_FIL$.  If none, the routine ALTRETs. */
     1765     7245    1   FOF$LASTEXT: ENTRY(FIL_SYSID) ALTRET;
     1766     7246
     1767     7247                                /* PASSED_EXT$ IS FIL_SYSID */
     1768     7248    1         CALL SET_LASTEXT ALTRET(ALTRT);
     1769     7249    1         PASSED_EXT$=EXT$;
     1770     7250    1         RETURN;
     1771     7251        /**/
     1772     7252        /**/
     1773     7253        /*F* NAME:         FOF$UNHOLD
     1774     7254             PURPOSE:      To remove files from 'hold'
     1775     7255             DESCRIPTION:  The request is in the form of
     1776     7256                           a SYSID and either a single NUM, or a NUM
     1777     7257                           of -1 (indicating all files for that SYSID).
     1778     7258                           The unheld bit is set in the file frame, and
     1779     7259                           the FIT is updated to reflect the unheld status.
     1780     7260                           (This allows UNHOLD to be issued even when the
     1781     7261                           file has not gone into hold yet).  Then, if the
     1782     7262                           file is in the HOLD queue, we move it to make
     1783     7263                           it available for output. */
     1784     7264    1   FOF$UNHOLD: ENTRY (FIL_SYSID,FIL_NUM) ALTRET;
     1785     7265
     1786     7266    1         JOB_SYSID=FIL_SYSID;
     1787     7267    1         CALL FIND_JOB ALTRET(ALTRT);
     1788     7268    1         FIL$=JOB$->FO$JOB.FILHD$;
     1789     7269    2           DO WHILE (FIL$ ~= ADDR(NIL));
     1790     7270    2           IF FIL_NUMR = -1 THEN                 /* Was a file number specified? */
     1791     7271    2            CALL UNHOLD;
     1792     7272    2           ELSE                      /* A file num specified, is this that file? */
     1793     7273    2            IF FIL_NUM = FIL$->FO$FIL.NUM THEN
     1794     7274    3              DO;
     1795     7275    3              CALL UNHOLD;
     1796     7276    3              RETURN;
     1797     7277    3              END;
     1798     7278    2           FIL$=FIL$->FO$FIL.JLNK$;
PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:54   
     1799     7279    2           END;
     1800     7280    1         RETURN;
     1801     7281        /**/
     1802     7282    1   UNHOLD: PROC ALTRET;
     1803     7283        /**/
     1804     7284    2         FIL$->FO$FIL.FLG.UNHELD='1'B;
     1805     7285    2         FUCODE=FOFU_UNHL#;
     1806     7286    2         CALL UPD_FILE1;
     1807     7287    2         IF FIL$->FO$FIL.PRIO ~= FOPR_HOLD# THEN RETURN;
     1808     7288    2         CALL UNCHAIN_FILE;
     1809     7289    2         CALL PRIO_FILE;
     1810     7290    2         CALL CHAIN_FILE;
     1811     7291    2         ALTRETURN;
     1812     7292    2   END UNHOLD;
     1813     7293        /**/
     1814     7294        /**/
     1815     7295        /*F* NAME:         FOF$FINDJOB
     1816     7296             PURPOSE:      To find the JOB frame for a SYSID
     1817     7297             DESCRIPTION:  The parameter is the SYSID, and the routine
     1818     7298                           returns with FO_JOB$ pointing to the job frame.
     1819     7299                           The ALTRET is taken if no such SYSID is listed
     1820     7300                           in the JOB tables.  */
     1821     7301    1   FOF$FINDJOB: ENTRY (FIL_SYSID) ALTRET;
     1822     7302
     1823     7303                                /* PARAMETER IS SYSID */
     1824     7304    1         JOB_SYSID=XJOB_SYSID;
     1825     7305    1         CALL FIND_JOB ALTRET(ALTRT);
     1826     7306    1         RETURN;
     1827     7307        /**/
     1828     7308        /**/
     1829     7309        /*F* NAME:         FOF$COMPJOB
     1830     7310             PURPOSE:      To handle completion of a 'job'
     1831     7311             DESCRIPTION:  This routine is called by FOO$OUTSYM when he
     1832     7312                           receives the 'batch job off' event from
     1833     7313                           MONKEY, and discovers that all the job's print
     1834     7314                           files have been printed.  JOB_COMPLETED is
     1835     7315                           called to do the requisite cleanup.  FO_JOB$
PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:55   
     1836     7316                           points to the JOB frame.  */
     1837     7317    1   FOF$COMPJOB: ENTRY ALTRET; /* !!Doesn't ALTRET!! */
     1838     7318
     1839     7319    1         CALL JOB_COMPLETED;
     1840     7320    1         RETURN;
     1841     7321        /**/
     1842     7322        /**/
     1843     7323        /*F* NAME:         FOF$PRIO
     1844     7324             PURPOSE:      To assign a priority to a file
     1845     7325             DESCRIPTION:  The file pointed to by FO_FIL$ is assigned its
     1846     7326                           appropriate priority, as required by its assigned
     1847     7327                           priority (FO$FIL.IPRIO) or granule count (FO$FIL.
     1848     7328                           GRANS), according as we are scheduling by assigned
     1849     7329                           prio or by granule count.  */
     1850     7330
     1851     7331    1   FOF$PRIO: ENTRY ALTRET; /* !!Doesn't ALTRET!! */
     1852     7332
     1853     7333    1         CALL PRIO_FILE;
     1854     7334    1         RETURN;
     1855     7335        /**/
     1856     7336        /**/
     1857     7337        /*F* NAME:         FOF$REPRIO
     1858     7338             PURPOSE:      To re-prioritize a file
     1859     7339             DESCRIPTION:  The file pointed to by FO_FIL$ has its priority
     1860     7340                           calculated according to current parameters. If
     1861     7341                           the result is the same prio chain it is currently
     1862     7342                           on, nothing is done, else it is removed from its
     1863     7343                           current prio chain and placed in the one in which
     1864     7344                           it belongs. */
     1865     7345    1   FOF$REPRIO: ENTRY ALTRET; /* !!Doesn't ALTRET!! */
     1866     7346
     1867     7347    1         CALL REPRIO_FILE;
     1868     7348    1         RETURN;
     1869     7349        /**/
     1870     7350        /**/
     1871     7351        /*F* NAME:         FOF$HEXPIRE
     1872     7352             PURPOSE:      To forcibly expire HELD files
PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:56   
     1873     7353             DESCRIPTION:  Called every once in a while from FOO$OUTSYM.
     1874     7354                           Checks all held files, and expires them into
     1875     7355                           printable state if they were submitted
     1876     7356                           too long ago (as defined by VLR_SYMBINFO.
     1877     7357                           HOLDEXPIRE - set by CONTROL).  */
     1878     7358    1   FOF$HEXPIRE: ENTRY ALTRET;
     1879     7359
     1880     7360    1         IF FO_SYMBINFO.HOLDEXPIRE# = 0 THEN RETURN;
     1881     7361    1         CALL M$TIME (GETUTS) ALTRET(ALTRT);
     1882     7362        /* compute a time stamp for the current time less the expiry interval.  Any
     1883     7363           held files submitted before this instant are to be unheld.  */
     1884     7364    1         CALL XUD$UTS_ADJUST (CURUTS, CURUTS, -FO_SYMBINFO.HOLDEXPIRE#*%UTS_CSEC_HOUR#)
              7364                  ;
     1885     7365    1   REXP: FIL$=FO_Q.FILHD$(FOPR_HOLD#);
     1886     7366    2           DO WHILE (FIL$ ~= ADDR(NIL));
     1887     7367    2           IF FIL$->FO$FIL.CREATED < CURUTS THEN
     1888     7368    2            CALL UNHOLD ALTRET(REXP); /* Always ALTRETs */
     1889     7369    2           FIL$=FIL$->FO$FIL.LNK$;
     1890     7370    2           END;
     1891     7371        /**/
     1892     7372    2           DO EXPPRIO = 0 TO FOPR_MAX#;
     1893     7373    2           IF EXPPRIO ~= FOPR_HOLD# THEN
     1894     7374    3             DO;
     1895     7375    3             FIL$=FO_Q.FILHD$(EXPPRIO);
     1896     7376    4               DO WHILE (FIL$ ~= ADDR(NIL));
     1897     7377    4               IF FIL$->FO$FIL.FLG.SAP
     1898     7378    4               AND FIL$->FO$FIL.CREATED < CURUTS THEN
     1899     7379    4                CALL UNHOLD;
     1900     7380    4               FIL$=FIL$->FO$FIL.LNK$;
     1901     7381    4               END;
     1902     7382    3             END;
     1903     7383    2           END;
     1904     7384    1         RETURN;
     1905     7385        %EJECT;
PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:57   
     1906     7386        /*
     1907     7387             ###    #   #   #####   #####   ####    #   #    ###    #
     1908     7388              #     #   #     #     #       #   #   #   #   #   #   #
     1909     7389              #     ##  #     #     #       #   #   ##  #   #   #   #
     1910     7390              #     # # #     #     ####    ####    # # #   #####   #
     1911     7391              #     #  ##     #     #       # #     #  ##   #   #   #
     1912     7392              #     #   #     #     #       #  #    #   #   #   #   #
     1913     7393             ###    #   #     #     #####   #   #   #   #   #   #   #####
     1914     7394
     1915     7395
     1916     7396
     1917     7397            ####     ###    #   #   #####    ###    #   #   #####    ###
     1918     7398            #   #   #   #   #   #     #       #     #   #   #       #   #
     1919     7399            #   #   #   #   #   #     #       #     ##  #   #       #
     1920     7400            ####    #   #   #   #     #       #     # # #   ####     ###
     1921     7401            # #     #   #   #   #     #       #     #  ##   #           #
     1922     7402            #  #    #   #   #   #     #       #     #   #   #       #   #
     1923     7403            #   #    ###     ###      #      ###    #   #   #####    ###
     1924     7404
     1925     7405        */
     1926     7406        /*
     1927     7407            Order: FIND_FILE         Locate a file on the file table
     1928     7408                   PRIO_FILE         Assign a priority to a file
     1929     7409                   BAD_FILE          Sent operator a bad file message
     1930     7410                   UPD_FILE          Update a file's FIT
     1931     7411                   DEL_FILE          Delete a file from all chains and :SYMO
     1932     7412                   REM_FILE          Remove extent table entries for a file
     1933     7413                   UNCHAIN_FILE      Remove a file from it's prio chain
     1934     7414                   CHAIN_FILE        Add a file to a prio chain
     1935     7415                   SET_LASTEXT       Find file's last extent in extent chain
     1936     7416        */
     1937     7417        /**************************************
     1938     7418         **************************************
     1939     7419                    FIND_FILE
     1940     7420         **************************************
     1941     7421         **************************************/
     1942     7422        /*D* NAME:         FIND_FILE
PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:58   
     1943     7423             PURPOSE:      To find a file in OUTSYM's file tables
     1944     7424             DESCRIPTION:  FIL_SYSID, FIL_NUM identify the file to be
     1945     7425                           found.  It is searched for by looking at the
     1946     7426                           job list for a job frame bearing sysid FIL_SYSID,
     1947     7427                           and then in the job's file list for a file entry
     1948     7428                           bearing FIL_NUM.  If found, FIL$ is returned
     1949     7429                           pointing to the file frame.  Else the routine
     1950     7430                           ALTRETs. */
     1951     7431    1   FIND_FILE: PROC ALTRET;
     1952     7432    2         JOB_SYSID=FIL_SYSID;
     1953     7433    2         CALL FIND_JOB ALTRET(ALTRT);
     1954     7434    2         FIL$=JOB$->FO$JOB.FILHD$;
     1955     7435    3           DO WHILE (FIL$ ~= ADDR(NIL));
     1956     7436    3           IF FIL_NUM = FIL$->FO$FIL.NUM THEN RETURN;
     1957     7437    3           FIL$=FIL$->FO$FIL.JLNK$;
     1958     7438    3           END;
     1959     7439    2   ALTRT:;
     1960     7440    2         ALTRETURN;
     1961     7441    2   END FIND_FILE;
     1962     7442        /**************************************
     1963     7443         **************************************
     1964     7444                    PRIO_FILE
     1965     7445         **************************************
     1966     7446         **************************************/
     1967     7447        /*D* NAME:         PRIO_FILE
     1968     7448             PURPOSE:      To assign a priority to a file
     1969     7449             DESCRIPTION:  The file is pointed to by FIL$.
     1970     7450                           FO$FIL.IPRIO is the submittal priority.  See the
     1971     7451                           comments for VLR_SYMBINFO in UM_CP6_C for a
     1972     7452                           description of the priority assignment algorithm. */
     1973     7453    1   PRIO_FILE: PROC;
     1974     7454    2         CALL GET_PRIO;
     1975     7455    2         FIL$->FO$FIL.PRIO=PRIO;
     1976     7456    2         IF PRIO ~= FOPR_HOLD# AND FIL$->FO$FIL.SAPCOPIES = 0 THEN
     1977     7457    2          FIL$->FO$FIL.FLG.SAP = '0'B;
     1978     7458    2         RETURN;
     1979     7459    2   END PRIO_FILE;
PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:59   
     1980     7460        /*D* NAME:         REPRIO_FILE
     1981     7461             PURPOSE:      See FOF$REPRIO
     1982     7462             DESCRIPTION:  See FOF$REPRIO */
     1983     7463    1   REPRIO_FILE: PROC;
     1984     7464    2         CALL GET_PRIO;
     1985     7465    2         IF PRIO = FIL$->FO$FIL.PRIO THEN RETURN;
     1986     7466              %JLOCK;
     1987     7469    2         CALL UNCHAIN_FILE;
     1988     7470    2         CALL PRIO_FILE;
     1989     7471    2         CALL CHAIN_FILE;
     1990     7472              %JUNLOCK;
     1991     7475    2         RETURN;
     1992     7476    2   END REPRIO_FILE;
     1993     7477        /**/
     1994     7478    1   GET_PRIO: PROC;
     1995     7479    2         PRIO = FIL$->FO$FIL.IPRIO;
     1996     7480    2         IF PRIO > 15 THEN PRIO=15;
     1997     7481    2         IF FIL$->FO$FIL.FLG.CPRIO = '0'B THEN
     1998     7482    3           DO;
     1999     7483    3           CALL M$MONINFO (GET_SYMBINFO);   /* GRANSCHED# can change via CONTROL */
     2000     7484    3           IF FO_SYMBINFO.GRANSCHED# ~= 0
     2001     7485    3           AND PRIO ~= 0
     2002     7486    3           AND PRIO ~= 15 THEN
     2003     7487    4             DO;
     2004     7488    5               DO PRIO = 1 TO 14;
     2005     7489    5               IF FIL$->FO$FIL.GRANS*FIL$->FO$FIL.COPIES > FO_SYMBINFO.GRANLOW#(PRIO)
              7489                        THEN
     2006     7490    5                GOTO GOTPRIO;
     2007     7491    5               END;
     2008     7492    4             PRIO = 14;
     2009     7493    4   GOTPRIO:  ;
     2010     7494    4             END;
     2011     7495    3           END;
     2012     7496    2         PRIO=PRIO+FOPR_P0#;
     2013     7497    2         RETURN;
     2014     7498    2   END GET_PRIO;
     2015     7499        /**************************************
PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:60   
     2016     7500         **************************************
     2017     7501                    BAD_FILE
     2018     7502         **************************************
     2019     7503         **************************************/
     2020     7504    1   BAD_FILE: PROC;
     2021     7505    2         OPMSG_FILBAD.SUBC=FIL_BADC;
     2022     7506    2         OPMSG_FILBAD.SYSID=FIL_SYSID;
     2023     7507    2         OPMSG_FILBAD.NUM=FIL_NUM;
     2024     7508    2         OPMSG_FILBAD.CNUM=FIL_CNUM;
     2025     7509    2         OPMSG_FILBAD.ACCT=FIL_ACCT;
     2026     7510    2         CALL M$WRITE (OCMSG_FILBAD);
     2027     7511    2         RETURN;
     2028     7512    2   END BAD_FILE;
     2029     7513        /**************************************
     2030     7514         **************************************
     2031     7515                    UPD_FILE
     2032     7516         **************************************
     2033     7517         **************************************/
     2034     7518        /*D* NAME:         UPD_FILE
     2035     7519             PURPOSE:      To update a file's FIT
     2036     7520             DESCRIPTION:  The file is pointed to by FIL$, and the commode
     2037     7521                           segment to be updated identified by FIL_CNUM.
     2038     7522                           FUCODE is the code for what to insert into the
     2039     7523                           FIT. */
     2040     7524    1   UPD_FILE: PROC ALTRET;
     2041     7525    2         CALL BINCHAR(FO_FILENAME.CNUM ,FIL_CNUM);
     2042     7526    2         GOTO UPD0;
     2043     7527    2   UPD_FILE1: ENTRY ALTRET;
     2044     7528    2         CALL BINCHAR(FO_FILENAME.CNUM,0);
     2045     7529    2   UPD0: ;
     2046     7530    2         CALL BINCHAR(FO_FILENAME.SYSID,FIL$->FO$FIL.SYSID);
     2047     7531    2         CALL BINCHAR(FO_FILENAME.NUM  ,FIL$->FO$FIL.NUM );
     2048     7532    2         FO_FILENAME.BOOTID=FIL$->FO$FIL.BOOTID;
     2049     7533    2         CALL M$OPEN (OPEN_FILE1_UPD) ALTRET(ALTRT);
     2050     7534    2         DEST$=PINCRW(ADDR(FO_FITBUF1),SIZEW(FM$GRAN));
     2051     7535    2         CLOSE_FILE1_CHGATTR.PROCATTR_=VECTOR(NIL);
     2052     7536    2         CALL XSF$LOCCODP (DEST$,13) ALTRET(A14);
PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:61   
     2053     7537    2         CLOSE_FILE1_CHGATTR.PROCATTR_=
     2054     7538    2         VECTOR(PINCRW(DEST$,-1)->FS$FITDEST);
     2055     7539    2         PINCRW(DEST$,-1)->FS$FITDEST.SIZ=SIZEW(FS$DEST);
     2056     7540
     2057     7541    3           DO CASE (FUCODE);
     2058     7542
     2059     7543
     2060     7544                                /* FILE INCONSISTENCY */
     2061     7545    3             CASE (FOFU_FINC#);
     2062     7546
     2063     7547    3               FIL_BADC=FOFE_FINC#;
     2064     7548    3               GOTO SETBAD;
     2065     7549
     2066     7550
     2067     7551                                /* UPDATE NUMBER OF COPIES */
     2068     7552    3             CASE (FOFU_COPY#);
     2069     7553
     2070     7554    3               DEST$->FS$DEST.COPIES=FIL$->FO$FIL.COPIES;
     2071     7555    3               DEST$->FS$DEST.SAPCOPIES=FIL$->FO$FIL.SAPCOPIES;
     2072     7556    3               DEST$->FS$DEST.OUTSYMF.CHKPTD = '0'B;
     2073     7557
     2074     7558
     2075     7559                                /* UPDATE PRIO */
     2076     7560    3             CASE (FOFU_PRIO#);
     2077     7561
     2078     7562    3               DEST$->FS$DEST.OUTSYMF.CPRIO='1'B;
     2079     7563    3               DEST$->FS$DEST.NEWPRIO=KEYIN$->FO$FKEYIN.PRIO;
     2080     7564
     2081     7565
     2082     7566
     2083     7567                                /* UPDATE PRIO TO 0 */
     2084     7568    3             CASE (FOFU_PRIO0#);
     2085     7569
     2086     7570    3               DEST$->FS$DEST.OUTSYMF.CPRIO='1'B;
     2087     7571    3               DEST$->FS$DEST.NEWPRIO=0;
     2088     7572
     2089     7573
PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:62   
     2090     7574                                /* UPDATE WSN */
     2091     7575    3             CASE (FOFU_SWIT#);
     2092     7576    3               DEST$->FS$DEST.OUTSYMF.CWSN='1'B;
     2093     7577    3               DEST$->FS$DEST.NEWWSN=FIL$->FO$FIL.DESTR.WSN;
     2094     7578
     2095     7579
     2096     7580                                /* MARK AS SPILLED & DELETE DATA */
     2097     7581    3             CASE (FOFU_SPIL#);
     2098     7582    3               DEST$->FS$DEST.OUTSYMF.SPILLED='1'B;
     2099     7583    4                 DO I = 0 TO FIL$->FO$FIL.HICNUM;
     2100     7584    4                 IF I ~= 0 THEN
     2101     7585    5                   DO;
     2102     7586    5                   CALL BINCHAR(FO_FILENAME.CNUM,I);
     2103     7587    5                   CALL M$OPEN (OPEN_FILE1) ALTRET(A1);
     2104     7588    5                   END;
     2105     7589    4                 CALL M$CLOSE (CLOSE_FILE1) ALTRET(A1);
     2106     7590    4                 CALL M$OPEN (CREATE_FILE2) ALTRET(A1);
     2107     7591    4                 CALL M$CLOSE (CLOSE_FILE2) ALTRET(A1);
     2108     7592    4   A1:           ;
     2109     7593    4                 END;
     2110     7594    3               RETURN;
     2111     7595
     2112     7596
     2113     7597                                /* CHECKPOINT SAVE KEYIN */
     2114     7598    3             CASE (FOFU_CHKP#);
     2115     7599    3               DEST$->FS$DEST.OUTSYMF.CHKPTD='1'B;
     2116     7600    3               DEST$->FS$DEST.CHKPBR=FIL$->FO$FIL.CHKPBR;
     2117     7601
     2118     7602
     2119     7603                                /* UNHOLD COMMAND FROM USER */
     2120     7604    3             CASE (FOFU_UNHL#);
     2121     7605    3               DEST$->FS$DEST.OUTSYMF.UNHELD='1'B;
     2122     7606
     2123     7607
     2124     7608                                /* ERROR DURING ADD */
     2125     7609    3             CASE (FOFU_BFIL#);
     2126     7610
PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:63   
     2127     7611    3   SETBAD:     ;
     2128     7612    3               DEST$->FS$DEST.OUTSYMF.BAD='1'B;
     2129     7613    3               DEST$->FS$DEST.OUTSYMF.CODE=FIL_BADC;
     2130     7614
     2131     7615
     2132     7616    3           END;
     2133     7617    2   A14:  ;
     2134     7618    3           DO CASE (FUCODE);
     2135     7619
     2136     7620
     2137     7621    3             CASE (FOFU_COPY#,FOFU_CHKP#,FOFU_PRIO#,
     2138     7622    3         FOFU_SWIT#,FOFU_SPIL#,FOFU_UNHL#);
     2139     7623
     2140     7624    3               CLOSE_FILE1_CHGATTR.NAME_=VECTOR(NIL);
     2141     7625
     2142     7626
     2143     7627    3             CASE (FOFU_FINC#);
     2144     7628
     2145     7629    3               FIL_BADC=FOFE_FINC#;
     2146     7630    3               GOTO NEWNAME;
     2147     7631
     2148     7632    3             CASE (FOFU_BFIL#);
     2149     7633
     2150     7634    3   NEWNAME:    ;
     2151     7635    3               NEW_FILENAME.CNT=LENGTHC(NEW_FILENAME.PREFIX)+FO_FILENAME.CNT;
     2152     7636    3               CALL BINCHAR(NEW_FILENAME.PREFIX.CODE,FIL_BADC);
     2153     7637    3               NEW_FILENAME.SYSID=FO_FILENAME.SYSID;
     2154     7638    3               NEW_FILENAME.NUM  =FO_FILENAME.NUM;
     2155     7639    3               NEW_FILENAME.CNUM =FO_FILENAME.CNUM;
     2156     7640    3               CLOSE_FILE1_CHGATTR.NAME_=VECTOR(NEW_FILENAME);
     2157     7641
     2158     7642
     2159     7643    3           END;
     2160     7644    2         CALL M$CLOSE (CLOSE_FILE1_CHGATTR) ALTRET(ALTRT);
     2161     7645    2         RETURN;
     2162     7646    2   ALTRT:;
     2163     7647    2         ALTRETURN;
PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:64   
     2164     7648    2   END UPD_FILE;
     2165     7649        /**************************************
     2166     7650         **************************************
     2167     7651                    DEL_FILE
     2168     7652                    REM_FILE
     2169     7653         **************************************
     2170     7654         **************************************/
     2171     7655        /*D* NAME:         DEL_FILE
     2172     7656             PURPOSE:      To delete an OUTSYM file entry
     2173     7657             DESCRIPTION:  The entry is pointed to by FO_FIL$.
     2174     7658                           The file (all commode segments) is deleted from :SYMO.
     2175     7659                           The entry's extents are released, it is removed
     2176     7660                           from its prio chain and its job chain, and
     2177     7661                           then it is released. */
     2178     7662
     2179     7663    1   DEL_FILE: PROC;
     2180     7664        /**
     2181     7665         **
     2182     7666         **      DELETE THE FILE FROM :SYMO
     2183     7667         **
     2184     7668         **/
     2185     7669    2         DELNAME.BOOTID=FIL$->FO$FIL.BOOTID;
     2186     7670    2         CALL BINCHAR(DELNAME.SYSID,FIL$->FO$FIL.SYSID);
     2187     7671    2         CALL BINCHAR(DELNAME.NUM,FIL$->FO$FIL.NUM);
     2188     7672    2         CALL M$SPRIV (EFTPRIV) ALTRET(A0);
     2189     7673    2   A0:   ;
     2190     7674    3           DO I =  0 TO FIL$->FO$FIL.HICNUM;
     2191     7675    3           CALL BINCHAR(DELNAME.CNUM,I);
     2192     7676    3           CALL M$OPEN(DELETE_FILE2) ALTRET(A1);
     2193     7677    3   A1:     ;
     2194     7678    3           END;
     2195     7679    2         CALL M$RPRIV (EFTPRIV) ALTRET(A2);
     2196     7680    2   A2:   ;
     2197     7681        /*D* NAME:         REM_FILE
     2198     7682             PURPOSE:      To remove an OUTSYM file entry
     2199     7683             DESCRIPTION:  Like DEL_FILE except the file is not deleted
     2200     7684                           from :SYMO. */
PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:65   
     2201     7685    2   REM_FILE: ENTRY;
     2202     7686        /**
     2203     7687         **
     2204     7688         **      RELEASE THE EXTENT TABLE ENTRIES
     2205     7689         **
     2206     7690         **/
     2207     7691    2         EXT$=FIL$->FO$FIL.EXT$;
     2208     7692    2         IF EXT$~=ADDR(NIL) THEN
     2209     7693    3           DO;
     2210     7694                                /* VERIFY THE EXTENT CHAIN */
     2211     7695    3           CALL SET_LASTEXT;
     2212     7696    3           EXT$=FIL$->FO$FIL.EXT$;
     2213     7697    4             DO WHILE (EXT$ ~= ADDR(NIL));
     2214     7698    4             P$=EXT$->FO$EXT.LNK$;
     2215     7699    4             CALL FOI$RBUF (FO_EXTSCB,EXT$);
     2216     7700    4             EXT$=P$;
     2217     7701    4             END;
     2218     7702    3           END;
     2219     7703
     2220     7704        /**
     2221     7705         **
     2222     7706         **      REMOVE THE FILE FROM ITS PRIO CHAIN
     2223     7707         **
     2224     7708         **/
     2225     7709    2         CALL UNCHAIN_FILE;
     2226     7710
     2227     7711
     2228     7712        /**
     2229     7713         **
     2230     7714         **      MAKE SURE IT ISN'T ACTIVE ON A DEVICE
     2231     7715         **
     2232     7716         **/
     2233     7717    2         IF FIL$->FO$FIL.CDEV$~=ADDR(NIL) THEN CALL FOI$CRASH (%S$DELACTFIL,F_FO,M_F);
     2234     7718        /*S* SCREECH_CODE: FOF-S$DELACTFIL
     2235     7719             TYPE:         SCREECH
     2236     7720             MESSAGE:      OUTSYM tried to delete a file which was printing
     2237     7721             REMARKS:      The cleanup code which removes files from the
PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:66   
     2238     7722                           file lists in OUTSYM has discovered that the
     2239     7723                           file is still active on a device.  The cause
     2240     7724                           can be determined by finding out who called
     2241     7725                           DEL_FILE and why he thought the file was
     2242     7726                           finished. */
     2243     7727        /**
     2244     7728         **
     2245     7729         **      UPDATE JOBSTATS
     2246     7730         **
     2247     7731         **/
     2248     7732    2         IF FIL$->FO$FIL.OJOB$ ~= ADDR(NIL) THEN
     2249     7733    3           DO;
     2250     7734    3           JOB$=FIL$->FO$FIL.OJOB$;
     2251     7735    3           JOB$->FO$JOB.NFIL_DONE=JOB$->FO$JOB.NFIL_DONE+1;
     2252     7736    3           P$=JOB$->FO$JOB.FILHD$;
     2253     7737    3           IF P$ = FIL$ THEN
     2254     7738    3            JOB$->FO$JOB.FILHD$=FIL$->FO$FIL.JLNK$;
     2255     7739    3           ELSE
     2256     7740    4             DO;
     2257     7741    5               DO WHILE (P$->FO$FIL.JLNK$ ~= FIL$);
     2258     7742    5               P$=P$->FO$FIL.JLNK$;
     2259     7743    5               END;
     2260     7744    4             P$->FO$FIL.JLNK$=FIL$->FO$FIL.JLNK$;
     2261     7745    4             END;
     2262     7746    3           IF JOB$->FO$JOB.NFIL_DONE = JOB$->FO$JOB.NFIL THEN
     2263     7747    4             DO;
     2264     7748    4             IF NOT (JOB$->FO$JOB.MODE = %M_BATCH# AND NOT JOB$->FO$JOB.FLG.JOFF) THEN
     2265     7749    4              CALL JOB_COMPLETED;
     2266     7750    4             END;
     2267     7751    3           END;
     2268     7752
     2269     7753        /**
     2270     7754         **
     2271     7755         **      RELEASE FILE TABLE ENTRY
     2272     7756         **
     2273     7757         **/
     2274     7758    2         CALL FOI$RBUF(FO_FILSCB,FIL$);
PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:67   
     2275     7759    2         RETURN;
     2276     7760    2   END DEL_FILE;
     2277     7761        /**************************************
     2278     7762         **************************************
     2279     7763                    UNCHAIN_FILE
     2280     7764         **************************************
     2281     7765         **************************************/
     2282     7766        /*D* NAME:         UNCHAIN_FILE
     2283     7767             PURPOSE:      To remove an OUTSYM file entry from its prio
     2284     7768                           chain.
     2285     7769             DESCRIPTION:  The file is pointed to by FIL$, and FO$FIL.PRIO
     2286     7770                           identifies the chain it is currently on.  That
     2287     7771                           chain is searched for the file, which is then
     2288     7772                           deleted from the chain.  If the file is not on
     2289     7773                           that chain, OUTSYM traps. Note that if FO$FIL.PRIO
     2290     7774                           is 99, the routine simply returns. */
     2291     7775    1   UNCHAIN_FILE: PROC;
     2292     7776        /**/
     2293     7777    2   DCL J SBIN;
     2294     7778    2   DCL I SBIN;
     2295     7779    2   DCL F$ PTR;
     2296     7780        /**/
     2297     7781                                /* PRIO=99 MEANS NOT ASSIGNED A PRIO
     2298     7782                                   CHAIN YET, SO IGNORE */
     2299     7783    2         IF FIL$->FO$FIL.PRIO=99 THEN RETURN;
     2300     7784              %JLOCK;
     2301     7787    2         PRIO=FIL$->FO$FIL.PRIO;
     2302     7788    2         IF FIL$=FO_Q.FILHD$(PRIO) THEN
     2303     7789    3           DO;
     2304     7790    3           FO_Q.FILHD$(PRIO)=FIL$->FO$FIL.LNK$;
     2305     7791    3           IF FIL$=FO_Q.FILTL$(PRIO) THEN
     2306     7792    3            FO_Q.FILTL$(PRIO)=ADDR(NIL);
     2307     7793    3           GOTO DONE;
     2308     7794    3           END;
     2309     7795    2         P$=FO_Q.FILHD$(PRIO);
     2310     7796    3           DO FOREVER;
     2311     7797    3           IF P$->FO$FIL.LNK$=FIL$ THEN
PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:68   
     2312     7798    4             DO;
     2313     7799    4             P$->FO$FIL.LNK$=FIL$->FO$FIL.LNK$;
     2314     7800    4             IF FIL$->FO$FIL.LNK$=ADDR(NIL) THEN
     2315     7801    4              FO_Q.FILTL$(PRIO)=P$;
     2316     7802    4             GOTO DONE;
     2317     7803    4             END;
     2318     7804    3           P$=P$->FO$FIL.LNK$;
     2319     7805    3           END;
     2320     7806    2   DONE: ;
     2321     7807                           /* Update AHEAD for guys below us */
     2322     7808    2         F$=FIL$->FO$FIL.LNK$;
     2323     7809    3           DO WHILE (F$ ~= ADDR(NIL));
     2324     7810    3           IF F$->FO$FIL.DESTR.WSN = FIL$->FO$FIL.DESTR.WSN THEN
     2325     7811    3            F$->FO$FIL.AHEAD=F$->FO$FIL.AHEAD-1;
     2326     7812    3           F$=F$->FO$FIL.LNK$;
     2327     7813    3           END;
     2328     7814    3           DO I = PRIO-1 DOWNTO 0;
     2329     7815    3           F$=FO_Q.FILHD$(I);
     2330     7816    4             DO WHILE (F$ ~= ADDR(NIL));
     2331     7817    4             IF F$->FO$FIL.DESTR.WSN = FIL$->FO$FIL.DESTR.WSN THEN
     2332     7818    4              F$->FO$FIL.AHEAD=F$->FO$FIL.AHEAD-1;
     2333     7819    4             F$=F$->FO$FIL.LNK$;
     2334     7820    4             END;
     2335     7821    3           END;
     2336     7822              %JUNLOCK;
     2337     7825    2         RETURN;
     2338     7826        /**************************************
     2339     7827         **************************************
     2340     7828                    CHAIN_FILE
     2341     7829         **************************************
     2342     7830         **************************************/
     2343     7831        /*D* NAME:         CHAIN_FILE
     2344     7832             PURPOSE:      To add an OUTSYM file entry to its proper prio
     2345     7833                           chain.
     2346     7834             DESCRIPTION:  The file is pointed to by FIL$, and the desired
     2347     7835                           prio chain identified by FO$FIL.PRIO.  The entry
     2348     7836                           is added to the tail of that chain. */
PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:69   
     2349     7837    2   CHAIN_FILE: ENTRY;
     2350     7838    2         PRIO=FIL$->FO$FIL.PRIO;
     2351     7839                           /* Compute AHEAD for its new position */
     2352     7840    2         J=0;
     2353     7841    3           DO I = PRIO TO FOPR_MAX#;
     2354     7842    3           F$=FO_Q.FILHD$(I);
     2355     7843    4             DO WHILE (F$ ~= ADDR(NIL));
     2356     7844    4             IF F$->FO$FIL.DESTR.WSN = FIL$->FO$FIL.DESTR.WSN THEN
     2357     7845    4              J=J+1;
     2358     7846    4             F$=F$->FO$FIL.LNK$;
     2359     7847    4             END;
     2360     7848    3           END;
     2361     7849    2         FIL$->FO$FIL.AHEAD=J;
     2362     7850        /**/
     2363     7851              %JLOCK;
     2364     7854                           /* Update AHEAD for guys below us */
     2365     7855    2         J=J+1;
     2366     7856    3           DO I = PRIO-1 DOWNTO 0;
     2367     7857    3           F$=FO_Q.FILHD$(I);
     2368     7858    4             DO WHILE (F$ ~= ADDR(NIL));
     2369     7859    4             IF F$->FO$FIL.DESTR.WSN = FIL$->FO$FIL.DESTR.WSN THEN
     2370     7860    5               DO;
     2371     7861    5               F$->FO$FIL.AHEAD=J;
     2372     7862    5               J=J+1;
     2373     7863    5               END;
     2374     7864    4             F$=F$->FO$FIL.LNK$;
     2375     7865    4             END;
     2376     7866    3           END;
     2377     7867    2         IF FO_Q.FILTL$(PRIO)=ADDR(NIL) THEN
     2378     7868    2          FO_Q.FILHD$(PRIO)=FIL$;
     2379     7869    2         ELSE
     2380     7870    2          FO_Q.FILTL$(PRIO)->FO$FIL.LNK$=FIL$;
     2381     7871    2         FIL$->FO$FIL.LNK$=ADDR(NIL);
     2382     7872    2         FO_Q.FILTL$(PRIO)=FIL$;
     2383     7873              %JUNLOCK;
     2384     7876    2         RETURN;
     2385     7877    2   END UNCHAIN_FILE;
PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:70   
     2386     7878        /**************************************
     2387     7879         **************************************
     2388     7880                    SET_LASTEXT
     2389     7881         **************************************
     2390     7882         **************************************/
     2391     7883        /*D* NAME:         SET_LASTEXT
     2392     7884             PURPOSE:      To find the last extent in a file's extent chain
     2393     7885             DESCRIPTION:  EXT$ is set to point to the last extent in the
     2394     7886                           extent chain of the file pointed to by FIL$.
     2395     7887                           If the number of frames found in the extent chain
     2396     7888                           does not match FO$FIL.NUMEXT, a full SCREECH
     2397     7889                           results. */
     2398     7890    1   SET_LASTEXT: PROC ALTRET;
     2399     7891    2         EXT$=FIL$->FO$FIL.EXT$;
     2400     7892    2         NUMEXT=0;
     2401     7893    2         IF EXT$ = ADDR(NIL) THEN ALTRETURN;
     2402     7894    2         NUMEXT=1;
     2403     7895    3           DO WHILE (EXT$->FO$EXT.LNK$ ~= ADDR(NIL));
     2404     7896    3           NUMEXT=NUMEXT+1;
     2405     7897    3           EXT$=EXT$->FO$EXT.LNK$;
     2406     7898    3           END;
     2407     7899    2         IF NUMEXT ~= FIL$->FO$FIL.NUMEXT THEN
     2408     7900    2          CALL FOI$CRASH (%S$BADEXTCHN,F_FO,M_F);
     2409     7901        /*S* SCREECH_CODE: FOF-S$BADEXTCHN
     2410     7902             TYPE:         SCREECH
     2411     7903             MESSAGE:      Bad extent chain found in an OUTSYM file
     2412     7904             REMARKS:      The number of extent frames linked to a file
     2413     7905                           does not match the extent frame count in the
     2414     7906                           file frame. */
     2415     7907    2         RETURN;
     2416     7908    2   END SET_LASTEXT;
     2417     7909        %EJECT;
PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:71   
     2418     7910        /*
     2419     7911
     2420     7912
     2421     7913                                        #    ###    #####
     2422     7914                                        #   #   #   #
     2423     7915                                        #   #       #
     2424     7916                                        #    ###    ####
     2425     7917                                    #   #       #   #
     2426     7918                                    #   #   #   #   #
     2427     7919                                     ###     ###    #
     2428     7920
     2429     7921
     2430     7922
     2431     7923
     2432     7924            ####     ###    #   #   #####    ###    #   #   #####    ###
     2433     7925            #   #   #   #   #   #     #       #     #   #   #       #   #
     2434     7926            #   #   #   #   #   #     #       #     ##  #   #       #
     2435     7927            ####    #   #   #   #     #       #     # # #   ####     ###
     2436     7928            # #     #   #   #   #     #       #     #  ##   #           #
     2437     7929            #  #    #   #   #   #     #       #     #   #   #       #   #
     2438     7930            #   #    ###     ###      #      ###    #   #   #####    ###
     2439     7931
     2440     7932
     2441     7933        */
     2442     7934        /*  Order: FIND_JOB          Find job table entry for a sysid
     2443     7935                   ADD_JOB           Add a SYSID to the job table
     2444     7936                   REM_JOB           Remove a job table entry
     2445     7937                   JOB_COMPLETED     Completion cleanup, CALL REM_JOB
     2446     7938        */
     2447     7939        /**************************************
     2448     7940         **************************************
     2449     7941                    FIND_JOB
     2450     7942         **************************************
     2451     7943         **************************************/
     2452     7944        /*D* NAME:         FIND_JOB
     2453     7945             PURPOSE:      To find the job table entry for a SYSID
     2454     7946             DESCRIPTION:  JOB_SYSID is the desired sysid; JOB$ is the
PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:72   
     2455     7947                           returned job frame pointer.  The routine ALTRETs
     2456     7948                           if not job frame bearing that sysid is found. */
     2457     7949    1   FIND_JOB: PROC ALTRET;
     2458     7950    2         JOB$=FO_Q.JOBHD$;
     2459     7951    3           DO WHILE (JOB$ ~= ADDR(NIL));
     2460     7952    3           IF JOB$->FO$JOB.SYSID=JOB_SYSID THEN RETURN;
     2461     7953    3           JOB$=JOB$->FO$JOB.LNK$;
     2462     7954    3           END;
     2463     7955    2         ALTRETURN;
     2464     7956    2   END FIND_JOB;
     2465     7957        /**************************************
     2466     7958         **************************************
     2467     7959                    ADD_JOB
     2468     7960         **************************************
     2469     7961         **************************************/
     2470     7962        /*D* NAME:         ADD_JOB
     2471     7963             PURPOSE:      To add a new OUTSYM job table entry
     2472     7964             DESCRIPTION:  JOB_SYSID is the sysid of the new entry.  A new
     2473     7965                           job frame is allocated (ALTRET if none available)
     2474     7966                           and initialized; JOB$ points to it.
     2475     7967                           JNL is the true length of JOBNAME;
     2476     7968                           JOBNAME and JNL in the allocated frame are
     2477     7969                           to be set up from them.
     2478     7970        */
     2479     7971    1   ADD_JOB: PROC ALTRET;
     2480     7972        /**/
     2481     7973    2   DCL I UBIN;
     2482     7974        /**/
     2483     7975    2         TJOB.JNL=JNL;
     2484     7976    2         I=SIZEW(ADDR(TJOB)->FO$JOB);
     2485     7977    2         CALL FOI$GBLK (FO_JOBSCB,JOB$,I) ALTRET(ALTRT);
     2486     7978    2         JOB$->FO$JOB.JNL=0;
     2487     7979    2         JOB$->FO$JOB=FO_JOB_INIT;
     2488     7980    2         JOB$->FO$JOB.SYSID=JOB_SYSID;
     2489     7981    2         JOB$->FO$JOB.LNK$=FO_Q.JOBHD$;
     2490     7982    2         JOB$->FO$JOB.JNL=JNL;
     2491     7983    2         JOB$->FO$JOB.JOBNAME=JOBNAME;
PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:73   
     2492     7984    2         FO_Q.JOBHD$=JOB$;
     2493     7985    2         RETURN;
     2494     7986    2   ALTRT:
     2495     7987    2         ALTRETURN;
     2496     7988        /**************************************
     2497     7989         **************************************
     2498     7990                    REM_JOB
     2499     7991         **************************************
     2500     7992         **************************************/
     2501     7993        /*D* NAME:         REM_JOB
     2502     7994             PURPOSE:      To remove an OUTSYM job table entry
     2503     7995             DESCRIPTION:  JOB$ identifies the frame to be deleted.
     2504     7996                           If the entry is not found, OUTSYM
     2505     7997                           traps.  Otherwise, the frame is remove from the
     2506     7998                           chain and deleted. */
     2507     7999    2   REM_JOB: ENTRY ALTRET;
     2508     8000    2         P$=FO_Q.JOBHD$;
     2509     8001              %JLOCK;
     2510     8004    2         IF JOB$ = P$ THEN
     2511     8005    3           DO;
     2512     8006    3           FO_Q.JOBHD$=JOB$->FO$JOB.LNK$;
     2513     8007    3           GOTO DONE;
     2514     8008    3           END;
     2515     8009    3           DO WHILE (P$->FO$JOB.LNK$ ~= JOB$);
     2516     8010    3           P$=P$->FO$JOB.LNK$;
     2517     8011    3           END;
     2518     8012    2         P$->FO$JOB.LNK$=JOB$->FO$JOB.LNK$;     /* Remove JOB template from list */
     2519     8013    2   DONE: ;
     2520     8014    2         CALL FOI$RBLK (FO_JOBSCB,JOB$,SIZEW(JOB$->FO$JOB));
     2521     8015              %JUNLOCK;
     2522     8018    2         RETURN;
     2523     8019    2   END ADD_JOB;
     2524     8020        /**************************************
     2525     8021         **************************************
     2526     8022                    JOB_COMPLETED
     2527     8023         **************************************
     2528     8024         **************************************/
PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:74   
     2529     8025        /*D* NAME:         JOB_COMPLETED
     2530     8026             PURPOSE:      To clean up after a 'job' is 'finished'
     2531     8027             DESCRIPTION:  OUTSYM keeps a JOB frame for every SYSID who
     2532     8028                           currently has at least one output symbiont file.
     2533     8029                           This frame has information about the totality
     2534     8030                           of output files for that SYSID.
     2535     8031
     2536     8032                           The input to this routine is FO_JOB$, the pointer
     2537     8033                           to the JOB frame.
     2538     8034
     2539     8035                           This routine is called when either
     2540     8036
     2541     8037                            1) a non-batch user's last current output file
     2542     8038                               disappears from our tables, in which case
     2543     8039                               we simply delete the JOB frame.
     2544     8040
     2545     8041                           or
     2546     8042
     2547     8043                            2) a batch job has both gone off and its last
     2548     8044                               output file (if any) has disappeared from our
     2549     8045                               tables, in which case we delete the job frame */
     2550     8046    1   JOB_COMPLETED: PROC;
     2551     8047    2         CALL REM_JOB;
     2552     8048    2         RETURN;
     2553     8049    2   END JOB_COMPLETED;
     2554     8050        /**/
     2555     8051        /**/
     2556     8052        /**/
     2557     8053    1   END FOF$FILE;

PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:75   
--  Include file information  --

   XUD_UTS_M.:E05TOU  is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   FO_SCODE_C.:E05TOU  is referenced.
   OC_SUBS_C.:E05TOU  is referenced.
   FOM_SUBS_C.:E05TOU  is referenced.
   FOO_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   FOO_MAC_C.:E05TOU  is referenced.
   FOO_SUBS_C.:E05TOU  is referenced.
   F_ERRORS_C.:E05TOU  is referenced.
   OC_MESSHD_C.:E05TOU  is referenced.
   FS$FIT.:E05TOU  is referenced.
   FM$GRAN.:E05TOU  is referenced.
   FM$FIT.:E05TOU  is referenced.
   F$DCB.:E05TOU  cannot be made into a system file and is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure FOF$FILE.

   Procedure FOF$FILE requires 2634 words for executable code.
   Procedure FOF$FILE requires 60 words of local(AUTO) storage.

    No errors detected in file FOF$FILE.:E05TSI    .

PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:76   

 Object Unit name= FOF$FILE                                   File name= FOF$FILE.:E05TOU
 UTS= JUL 29 '97 17:07:02.48 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1   Data  even  none   128    200  FOF$FILE
    2   DCB   even  none     0      0  M$CSCG
    3   DCB   even  none     0      0  M$FILE1
    4   DCB   even  none     0      0  M$FILE2
    5   DCB   even  none     0      0  M$OSCG
    6  RoData even  UTS    406    626  FOF$FILE
    7   Proc  even  none  2634   5112  FOF$FILE
    8  RoData even  none    66    102  FOF$FILE

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     7      0   yes    yes     yes      Std        5  FOF$FILE
     7      3          yes     yes      Std        5  FOF$ADD
     7     15          yes     yes      Std        5  FOF$FILL
     7   2014          yes     yes      Std        1  FOF$KEYIN
     7   2774          yes     yes      Std        3  FOF$FITUPD
     7   3007          yes     yes      Std        0  FOF$DELETE
     7   3014          yes     yes      Std        0  FOF$REMOVE
     7   3021          yes     yes      Std        0  FOF$CHAIN
     7   3026          yes     yes      Std        0  FOF$UNCHAIN
     7   3033          yes     yes      Std        3  FOF$RERUN
     7   3040          yes     yes      Std        3  FOF$CANCEL
     7   3163          yes     yes      Std        3  FOF$ERASE
     7   3170          yes     yes      Std        3  FOF$SPILLDONE
     7   3233          yes     yes      Std        1  FOF$LASTEXT
PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:77   
     7   3243          yes     yes      Std        2  FOF$UNHOLD
     7   3331          yes     yes      Std        1  FOF$FINDJOB
     7   3341          yes     yes      Std        0  FOF$COMPJOB
     7   3346          yes     yes      Std        0  FOF$PRIO
     7   3353          yes     yes      Std        0  FOF$REPRIO
     7   3360          yes     yes      Std        0  FOF$HEXPIRE

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       2 FOD$EVENT
 yes     yes           Std       3 XUD$UTS_ADJUST
 yes     yes           Std       2 FOI$GBUF
 yes     yes           Std       2 XSF$LOCCODP
 yes     yes           Std       4 FOI$SNAP
 yes     yes           Std       0 FOD$AVAIL
 yes     yes           Std       2 XSF$LOCCODE
 yes     yes           Std       2 FOR$TCHK
 yes     yes           Std       3 FOI$CRASH
 yes     yes           Std       2 FOI$RBUF
 yes     yes           Std       3 FOI$GBLK
 yes     yes           Std       3 FOI$RBLK
                       nStd      0 X66_AUTO_5
                       nStd      0 X66_ARET
                       nStd      0 X66_AALT
                       Std       0 B_CONSPOOL_D
PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:78   

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                                  FO_FITBUF1                            FO_FIL$
     FO_DEV$                               FO_JOB$                          r    GET_SYMBINFO
     FO_SYMBINFO                           FO_FILENAME                      r    FO_FIL_INIT
r    FO_JOB_INIT                           FO_Q                                  FO_FILSCB
     FO_EXTSCB                             FO_JOBSCB                             M$CSCG
     M$FILE1                               M$FILE2                               M$OSCG
     B$TCB$                                B$JIT$                                B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     NULLSID                               ISSID                                 ROSID
PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:79   


        1        1        /*M* FOF$FILE File routines for OUTSYM ghost */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7       /*X* DMC,PLM=6,IND=0,IDT=2,SDI=2,CTI=0,ENU=0,AND,DCI=4,CSU=2,ECU=4,THI=0,DTI=0,STI=1
                 7        ,IAD=0,PRB */
        8        8        /**/
        9        9        /*P* NAME:         FOF$FILE
       10       10             PURPOSE:      To provide file handling routines for the
       11       11                           OUTSYM ghost.
       12       12             DESCRIPTION:  The OUTSYM ghost retains information concerning
       13       13                           output symbiont files in linked lists in a
       14       14                           dynamic data segment.  Each element of these
       15       15                           lists is called a file table entry, and
       16       16                           each is framed by the based structure FO$FIL.
       17       17
       18       18                           This module contains all routines which manage
       19       19                           the files and file tables.  */
       20       20        /**/
       21       21        /**/
       22       22        FOF$FILE: PROC(FIL_SYSID,FIL_NUM,XFIL_CNUM,RECOVERING,FIL_BOOTID) ALTRET;

     22  7 000000   000000 700200 xent  FOF$FILE     TSX0  ! X66_AUTO_5
         7 000001   000074 000005                    ZERO    60,5
         7 000002   000005 710000 7                  TRA     s:5843

       23       23
       24       24
       25       25
       26       26        /**/
       27       27        /* PARAMETERS */
       28       28        /**/
       29       29    1   DCL FIL_SYSID UBIN WORD;
       30       30    1   DCL KEYIN$ REDEF FIL_SYSID PTR;
PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:80   
       31       31    1   DCL PASSED_EXT$ REDEF FIL_SYSID PTR;
       32       32    1   DCL XFUCODE REDEF FIL_SYSID UBIN WORD;
       33       33    1   DCL XJOB_SYSID REDEF FIL_SYSID UBIN WORD;
       34       34    1   DCL FIL_NUM UBIN WORD;
       35       35    1   DCL FIL_NUMR REDEF FIL_NUM SBIN WORD;
       36       36    1   DCL XFIL_CNUM UBIN WORD;
       37       37    1   DCL BATCHFLG REDEF XFIL_CNUM UBIN WORD;
       38       38    1   DCL SPILLDISP REDEF XFIL_CNUM UBIN WORD;
       39       39    1   DCL RECOVERING UBIN WORD;
       40       40    1   DCL FIL_BOOTID CHAR(3) ALIGNED;
       41       41
       42       42
       43       43
       44       44        /**/
       45       45        /* INCLUDES */
       46       46        /**/
       47       47        %INCLUDE CP_6;
       48      128        %INCLUDE F$DCB;
       49      177        %INCLUDE FM$FIT;
       50      398        %INCLUDE FM$GRAN;
       51      467        %INCLUDE FS$FIT;
       52      510 S      %INCLUDE B$JIT_C;
       53      511        %INCLUDE OC_MESSHD_C;
       54      564        %INCLUDE F_ERRORS_C;
       55      804        %INCLUDE FOO_SUBS_C;
       56     1040        %INCLUDE FOO_MAC_C;
       57     1788        %INCLUDE FOO_DATA_R;
       58     2954        %INCLUDE FOM_SUBS_C;
       59     3017        %INCLUDE OC_SUBS_C;
       60     3748        %INCLUDE FO_SCODE_C;
       61     3776        %INCLUDE CP_6_SUBS;
       62     4316
       63     4317        %INCLUDE XUD_UTS_M;
       64     4399
       65     4400        %XUD$UTS_ENTRIES;                       /* expand routine dcls */
       66     4432        %XUD_UTS_EQU;                           /* expand constant EQUates */
       67     4443
PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:81   
       68     4444
       69     4445
       70     4446        /**/
       71     4447        /*  BASED STRUCTURES */
       72     4448        /**/
       73     4449    1   DCL PTR$ PTR BASED;
       74     4450        %B$TCB (STCLASS="BASED(B$TCB$)");
       75     4453        %B$ALT;
       76     4461        %FM$FIT;
       77     4464        %CODE01;
       78     4468        %CODE03;
       79     4475        %CODE04;
       80     4483        %CODE16;
       81     4491        %B$JIT0;
       82     4580        %A$JIT6X;
       83     4583        %FS$DEST;
       84     4591        %FM$GRAN;
       85     4595        %FS$DEST (NAME=FS$FITDEST,SIZ=FIT);
       86     4603        %VLP_FPRG (FPTN=FPRG_DATA,STCLASS=BASED);
       87     4624
       88     4625
       89     4626
       90     4627        /**/
       91     4628        /*  AUTO */
       92     4629        /**/
       93     4630    1   DCL I UBIN WORD;
       94     4631    1   DCL IR REDEF I SBIN;
       95     4632    1   DCL NUM UBIN WORD;
       96     4633    1   DCL KNUM UBIN HALF UNAL;
       97     4634    1   DCL KNUMR REDEF KNUM SBIN HALF UNAL;
       98     4635    1   DCL UGRANS UBIN WORD;
       99     4636    1   DCL PREVEXT$ PTR;
      100     4637    1   DCL FIT$ PTR;
      101     4638    1   DCL EXT$ PTR;
      102     4639    1   DCL P$ PTR;
      103     4640    1   DCL NRECS SBIN;
      104     4641    1   DCL PRIO UBIN WORD;
PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:82   
      105     4642    1   DCL JOB_SYSID UBIN WORD;
      106     4643    1   DCL FUCODE UBIN WORD;
      107     4644    1   DCL FIL_BADC UBIN WORD;
      108     4645    1   DCL FIL_CNUM UBIN WORD;
      109     4646    1   DCL SETX UBIN;
      110     4647    1   DCL OLDLEXT$ PTR;
      111     4648    1   DCL FIL_ACCT CHAR(8);
      112     4649    1   DCL DEST$ PTR;
      113     4650    1   DCL SYSID UBIN WORD;
      114     4651    1   DCL NFIL UBIN WORD;
      115     4652    1   DCL NXTFIL$ PTR;
      116     4653    1   DCL NUMEXT UBIN WORD;
      117     4654    1   DCL FILL UBIN WORD;
      118     4655    1   DCL NCHUNKS UBIN WORD;
      119     4656    1   DCL DEVSUBC UBIN WORD;
      120     4657    1   DCL EXPPRIO UBIN;
      121     4658    1   DCL FIT_SECT_INDEX UBIN WORD STATIC ALIGNED;
      122     4659    1   DCL EXTENT_WORDS UBIN WORD STATIC ALIGNED;
      123     4660
      124     4661
      125     4662
      126     4663        /**/
      127     4664        /*  STATIC */
      128     4665        /**/
      129     4666        %FO_JOB (FPTN=TJOB,STCLASS=STATIC);
      130     4713    1   DCL JNL UBIN WORD STATIC;
      131     4714    1   DCL CURUTS UBIN STATIC;
      132     4715    1   DCL JOBNAME CHAR(31) STATIC;
      133     4716        %VLP_SYMBEXTENT (FPTN=EXTENT,STCLASS=STATIC);
      134     4729    1   DCL 1 NEW_FILENAME STATIC DALIGNED,
      135     4730    1         2 CNT UBIN BYTE UNAL,
      136     4731    1         2 PREFIX,
      137     4732    1           3 * CHAR(7) UNAL INIT('zzzBAD:'),
      138     4733    1           3 CODE CHAR(2) UNAL,
      139     4734    1           3 * CHAR(1) UNAL INIT(':'),
      140     4735    1         2 SYSID CHAR(6) UNAL,
      141     4736    1         2 NUM CHAR(6) UNAL,
PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:83   
      142     4737    1         2 CNUM CHAR(3) UNAL;
      143     4738    1   DCL KCNT SBIN WORD STATIC INIT(0);
      144     4739        %FS_OSFN (FPTN=DELNAME,STCLASS=STATIC);
      145     4753        %OC_MESSHD_D       (NAME=OPMSG_FILBAD,
      146     4754                 NPARMS    = 5,
      147     4755                 MSG       = FO_FERR_MSG#,
      148     4756                 ATR       = M_SYS,
      149     4757                 STCLASS   = STATIC);
      150     4770    1         2 * UBIN BYTE UNAL INIT(1),
      151     4771    1         2 * UBIN BYTE UNAL INIT(2),
      152     4772    1         2 * UBIN BYTE UNAL INIT(2),
      153     4773    1         2 * UBIN BYTE UNAL INIT(2),
      154     4774    1         2 * UBIN BYTE UNAL INIT(8),
      155     4775    1         2 SUBC UBIN BYTE UNAL,
      156     4776    1         2 NUM UBIN HALF UNAL,
      157     4777    1         2 CNUM UBIN HALF UNAL,
      158     4778    1         2 ERRC UBIN HALF UNAL,
      159     4779    1         2 ACCT CHAR(8) UNAL;
      160     4780        %OC_MESSHD_D            (NAME=OPMSG_KERR1,
      161     4781                 NPARMS    = 4,
      162     4782                 MSG       = FO_KERR1_MSG#,
      163     4783                 ATR       = M_UR,
      164     4784                 STCLASS   = STATIC);
      165     4797    1         2 * UBIN BYTE UNAL INIT(1),
      166     4798    1         2 * UBIN BYTE UNAL INIT(1),
      167     4799    1         2 * UBIN BYTE UNAL INIT(1),
      168     4800    1         2 * UBIN BYTE UNAL INIT(2),
      169     4801    1         2 SUBC UBIN BYTE UNAL,
      170     4802    1         2 SUBC1 UBIN BYTE UNAL,
      171     4803    1         2 SUBC2 UBIN BYTE UNAL,
      172     4804    1         2 NUM UBIN HALF UNAL;
      173     4805        %OC_MESSHD_D            (NAME=OPMSG_RESP,
      174     4806                 NPARMS    = 6,
      175     4807                 MSG       = FO_RESP_MSG#,
      176     4808                 ATR       = M_UR,
      177     4809                 STCLASS   = STATIC);
      178     4822    1         2 * UBIN BYTE UNAL INIT(1),
PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:84   
      179     4823    1         2 * UBIN BYTE UNAL INIT(1),
      180     4824    1         2 * UBIN BYTE UNAL INIT(8),
      181     4825    1         2 * UBIN BYTE UNAL INIT(1),
      182     4826    1         2 * UBIN BYTE UNAL INIT(2),
      183     4827    1         2 * UBIN BYTE UNAL INIT(1),
      184     4828    1         2 SUBC UBIN BYTE UNAL,
      185     4829    1         2 PRIO UBIN BYTE UNAL,
      186     4830    1         2 SWSN CHAR(8) UNAL,
      187     4831    1         2 SUBC2 UBIN BYTE UNAL,
      188     4832    1         2 NFIL UBIN HALF UNAL,
      189     4833    1         2 NUM UBIN BYTE UNAL;
      190     4834
      191     4835
      192     4836
      193     4837        /**/
      194     4838        /*  DCBS */
      195     4839        /**/
      196     4840    1   DCL M$CSCG DCB;
      197     4841    1   DCL M$FILE1 DCB;
      198     4842    1   DCL M$FILE2 DCB;
      199     4843    1   DCL M$OSCG DCB;
      200     4844
      201     4845
      202     4846
      203     4847        /**/
      204     4848        /* REFS */
      205     4849        /**/
      206     4850    1   DCL FOD$AVAIL     ENTRY    ALTRET;
      207     4851    1   DCL FOD$EVENT     ENTRY(2) ALTRET;
      208     4852    1   DCL FOI$CRASH     ENTRY(3) ALTRET;
      209     4853    1   DCL FOI$GBLK      ENTRY(3) ALTRET;
      210     4854    1   DCL FOI$GBUF      ENTRY(2) ALTRET;
      211     4855    1   DCL FOI$RBLK      ENTRY(3) ALTRET;
      212     4856    1   DCL FOI$RBUF      ENTRY(2) ALTRET;
      213     4857    1   DCL FOI$SNAP      ENTRY(4) ALTRET;
      214     4858    1   DCL FOR$TCHK      ENTRY(2) ALTRET;
      215     4859    1   DCL XSF$LOCCODP   ENTRY(2) ALTRET;
PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:85   
      216     4860    1   DCL XSF$LOCCODE   ENTRY(2) ALTRET;
      217     4861    1   DCL B$TCB$ PTR SYMREF;
      218     4862    1   DCL B$JIT$ PTR SYMREF;
      219     4863
      220     4864
      221     4865
      222     4866        /**/
      223     4867        /* PMME FPTS */
      224     4868        /**/
      225     4869        %FPT_CLOSE                             (FPTN=CLOSE_FILE1,
      226     4870                 DCB       = M$FILE1,
      227     4871                 STCLASS   = CONSTANT,
      228     4872                 DISP      = SAVE,
      229     4873                 RELG      = YES);
      230     4915        %FPT_CLOSE                             (FPTN=CLOSE_FILE1_CHGATTR,
      231     4916                 DCB       = M$FILE1,
      232     4917                 STCLASS   = STATIC,
      233     4918                 DISP      = SAVE,
      234     4919                 RELG      = NO,
      235     4920                 CHGATT    = YES);
      236     4962        %FPT_OPEN                              (FPTN=OPEN_FILE1_UPD,
      237     4963                 STCLASS   = CONSTANT,
      238     4964                 DCB       = M$FILE1,
      239     4965                 ACCT      = SYMOACCT,
      240     4966                 NAME      = FO_FILENAME,
      241     4967                 ASN       = FILE,
      242     4968                 FUN       = UPDATE,
      243     4969                 FPARAM    = FO_FITBUF1,
      244     4970                 SHARE     = ALL,
      245     4971                 ACS       = BLOCK);
      246     5080        %VLP_ACCT          (FPTN=SYSACCT,
      247     5081                 STCLASS   = CONSTANT,
      248     5082                 ACCT      = ':SYS');
      249     5095        %VLP_ACCT          (FPTN=SYMOACCT,
      250     5096                 STCLASS   = CONSTANT,
      251     5097                 ACCT      = ':SYMO');
      252     5110        %FPT_WRITE                             (FPTN=OCMSG_FILBAD,
PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:86   
      253     5111                 STCLASS   = CONSTANT,
      254     5112                 DCB       = M$CSCG,
      255     5113                 BUF       = OPMSG_FILBAD);
      256     5144        %FPT_WRITE                             (FPTN=OCMSG_KERR1,
      257     5145                 STCLASS   = CONSTANT,
      258     5146                 DCB       = M$CSCG,
      259     5147                 BUF       = OPMSG_KERR1);
      260     5178        %FPT_OPEN                              (FPTN=DELETE_FILE1,
      261     5179                 STCLASS   = CONSTANT,
      262     5180                 DCB       = M$FILE1,
      263     5181                 ACCT      = SYMOACCT,
      264     5182                 NAME      = FO_FILENAME,
      265     5183                 ASN       = FILE,
      266     5184                 DELETE    = YES);
      267     5293        %FPT_CLOSE                             (FPTN=CLOSE_FILE2,
      268     5294                 STCLASS   =  CONSTANT,
      269     5295                 DCB       =  M$FILE2,
      270     5296                 DISP      =  SAVE,
      271     5297                 RELG      =  YES);
      272     5339        %FPT_OPEN                              (FPTN=CREATE_FILE2,
      273     5340                 STCLASS   =  CONSTANT,
      274     5341                 DCB       =  M$FILE2,
      275     5342                 ACCT      =  SYMOACCT,
      276     5343                 NAME      =  FO_FILENAME,
      277     5344                 ASN       =  FILE,
      278     5345                 FUN       =  CREATE,
      279     5346                 EXIST     =  NEWFILE,
      280     5347                 CTG       =  YES,
      281     5348                 IFPARAM   =  FO_FITBUF1);
      282     5457        %FPT_OPEN                              (FPTN=DELETE_FILE2,
      283     5458                 STCLASS   = CONSTANT,
      284     5459                 DCB       = M$FILE2,
      285     5460                 ACCT      = SYMOACCT,
      286     5461                 NAME      = DELNAME,
      287     5462                 ASN       = FILE,
      288     5463                 DELETE    = YES);
      289     5572        %FPT_OPEN                              (FPTN=OPEN_FILE1,
PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:87   
      290     5573                 STCLASS   = CONSTANT,
      291     5574                 DCB       = M$FILE1,
      292     5575                 ACCT      = SYMOACCT,
      293     5576                 NAME      = FO_FILENAME,
      294     5577                 ASN       = FILE,
      295     5578                 FUN       = IN,
      296     5579                 FPARAM    = FO_FITBUF1,
      297     5580                 ACS       = BLOCK);
      298     5689        %FPT_SYMBIO                            (FPTN=CHK_EXT,
      299     5690                 DCB       = M$OSCG,
      300     5691                 STCLASS   = STATIC,
      301     5692                 NXEXT     = EXTENT,
      302     5693                 ORDER     = FOMO_CHEXT#);
      303     5717        %FPT_WRITE                             (FPTN=OCMSG_RESP,
      304     5718                 STCLASS   = CONSTANT,
      305     5719                 DCB       = M$CSCG,
      306     5720                 BUF       = OPMSG_RESP);
      307     5751        %FPT_PRIV                             (FPTN=EFTPRIV,
      308     5752                 PRIV      = %PR_FMEFT#,
      309     5753                 STCLASS   = CONSTANT);
      310     5768        %FPT_TIME                             (FPTN=GETUTS,
      311     5769                 TSTAMP    = CURUTS,
      312     5770                 SOURCE    = CLOCK,
      313     5771                 DEST      = UTS,
      314     5772                 STCLASS   = CONSTANT);
      315     5791
      316     5792
      317     5793
      318     5794        /**/
      319     5795        /* SUBS */
      320     5796        /**/
      321     5797        %SUB FIL$=FO_FIL$;
      322     5798        %SUB DEV$=FO_DEV$;
      323     5799        %SUB JOB$=FO_JOB$;
      324     5800        %SUB F_FO='0617'O;
      325     5801        %SUB M_F='06'O;
      326     5802        %SUB B$ERRCODE = B$TCB$->B$TCB.ALT$->B$ALT.ERR.CODE;
PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:88   
      327     5803        %SUB FOREVER="WHILE ('1'B)";
      328     5804        %EJECT;
PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:89   
      329     5805        /*
      330     5806
      331     5807                AAA   DDDD   DDDD
      332     5808               A   A  D   D  D   D
      333     5809               A   A  D   D  D   D
      334     5810               AAAAA  D   D  D   D
      335     5811               A   A  D   D  D   D
      336     5812               A   A  D   D  D   D
      337     5813               A   A  DDDD   DDDD
      338     5814
      339     5815
      340     5816        */
      341     5817        /*F* NAME:         FOF$ADD
      342     5818             PURPOSE:      To add an output symbiont file to OUTSYM's tables
      343     5819             DESCRIPTION:  This routine is called by output queue recovery
      344     5820                           (when OUTSYM is started), and by the receiver of
      345     5821                           the add-file event from the output COOP.  In the
      346     5822                           first case, the M$FILE1 dcb is open to the file,
      347     5823                           with FPARAMS in FO_FITBUF1;
      348     5824                           in the latter case, it is not.  In both cases,
      349     5825                           FIL_BOOTID, FIL_SYSID, FIL_NUM, and XFIL_CNUM
      350     5826                           describe the name of the file in :SYMO.
      351     5827
      352     5828                           FOF$ADD reads the FIT and extracts therefrom the
      353     5829                           information describing the file's destination, and
      354     5830                           the extent list (to enable MOOS  to output the file
      355     5831                           when it becomes scheduled to print).
      356     5832
      357     5833                           Certain  errors encountered during this process
      358     5834                           may cause the file to be deleted and/or ignored, in
      359     5835                           which case the ALTRET is taken.  Otherwise the file
      360     5836                           has been added to the tables, and FO_FIL$ points
      361     5837                           to the frame containing its information.
      362     5838        */
      363     5839
      364     5840
      365     5841    1   FOF$ADD: ENTRY (FIL_SYSID,FIL_NUM,XFIL_CNUM,RECOVERING,FIL_BOOTID) ALTRET;
PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:90   

   5841  7 000003   000000 700200 xent  FOF$ADD      TSX0  ! X66_AUTO_5
         7 000004   000074 000005                    ZERO    60,5

      366     5842
      367     5843    1         FILL=0;

   5843  7 000005   200037 450100                    STZ     FILL,,AUTO

      368     5844    1         FIL_CNUM=XFIL_CNUM;

   5844  7 000006   200005 470500                    LDP0    @XFIL_CNUM,,AUTO
         7 000007   000000 235100                    LDA     0,,PR0
         7 000010   200025 755100                    STA     FIL_CNUM,,AUTO

      369     5845    1         CALL ADD_FILE ALTRET(ALTRT);

   5845  7 000011   000052 701000 7                  TSX1    ADD_FILE
         7 000012   000014 702000 7                  TSX2    ALTRT

      370     5846    1         RETURN;

   5846  7 000013   000000 702200 xent               TSX2  ! X66_ARET

   5844  7 000014                       ALTRT        null
      371     5847    1   ALTRT:;
      372     5848    1         ALTRETURN;

   5848  7 000014   000000 702200 xent               TSX2  ! X66_AALT

      373     5849        /**
      374     5850
      375     5851               FFFFF   III   L      L
      376     5852               F        I    L      L
      377     5853               F        I    L      L
      378     5854               FFFF     I    L      L
      379     5855               F        I    L      L
PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:91   
      380     5856               F        I    L      L
      381     5857               F       III   LLLLL  LLLLL
      382     5858
      383     5859
      384     5860        **/
      385     5861
      386     5862        /*F* NAME:         FOF$FILL
      387     5863             PURPOSE:      To FILL a file into OUTSYM's tables
      388     5864             DESCRIPTION:  The passed SYSID and NUM identify the file to
      389     5865                           be filled, which must exist already, in the
      390     5866                           SPILLED queue.  The idea is that EFT has written
      391     5867                           the file (or files, if there are > 1 commode
      392     5868                           chunks to the file) into :SYMO.  What we do here
      393     5869                           is recover them, and, if all goes well, move the
      394     5870                           file, with its new extent information, from the
      395     5871                           SPILLED queue to make it available for output. */
      396     5872    1   FOF$FILL: ENTRY (FIL_SYSID,FIL_NUM,XFIL_CNUM,RECOVERING,FIL_BOOTID) ALTRET;

   5872  7 000015   000000 700200 xent  FOF$FILL     TSX0  ! X66_AUTO_5
         7 000016   000074 000005                    ZERO    60,5

      397     5873
      398     5874    1         CALL FIND_FILE ALTRET(ALTRT);

   5874  7 000017   003456 701000 7                  TSX1    FIND_FILE
         7 000020   000014 702000 7                  TSX2    ALTRT

      399     5875    1         FIL_BOOTID=FIL$->FO$FIL.BOOTID;

   5875  7 000021   000000 470400 xsym               LDP0    FO_FIL$
         7 000022   000021 236100                    LDQ     17,,PR0
         7 000023   000000 376000 8                  ANQ     0
         7 000024   000040 276007                    ORQ     32,DL
         7 000025   200007 471500                    LDP1    @FIL_BOOTID,,AUTO
         7 000026   100000 756100                    STQ     0,,PR1

      400     5876    1         NCHUNKS=FIL$->FO$FIL.HICNUM;
PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:92   

   5876  7 000027   000000 470400 xsym               LDP0    FO_FIL$
         7 000030   000016 236100                    LDQ     14,,PR0
         7 000031   000022 772000                    QRL     18
         7 000032   200040 756100                    STQ     NCHUNKS,,AUTO

      401     5877    1         FIL$->FO$FIL.HICNUM=0;

   5877  7 000033   000000 220003                    LDX0    0,DU
         7 000034   000016 740100                    STX0    14,,PR0

      402     5878    1         FILL=1;

   5878  7 000035   000001 235007                    LDA     1,DL
         7 000036   200037 755100                    STA     FILL,,AUTO

      403     5879    2           DO FIL_CNUM = 0 TO NCHUNKS;

   5879  7 000037   200025 450100                    STZ     FIL_CNUM,,AUTO
         7 000040   000046 710000 7                  TRA     s:5881+3

      404     5880    2           CALL ADD_FILE ALTRET(ALTRT);

   5880  7 000041   000052 701000 7                  TSX1    ADD_FILE
         7 000042   000014 702000 7                  TSX2    ALTRT

      405     5881    2           END;

   5881  7 000043   200025 235100                    LDA     FIL_CNUM,,AUTO
         7 000044   000001 035007                    ADLA    1,DL
         7 000045   200025 755100                    STA     FIL_CNUM,,AUTO
         7 000046   200040 236100                    LDQ     NCHUNKS,,AUTO
         7 000047   200025 116100                    CMPQ    FIL_CNUM,,AUTO
         7 000050   000041 603000 7                  TRC     s:5880

      406     5882    1         RETURN;

PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:93   
   5882  7 000051   000000 702200 xent               TSX2  ! X66_ARET

      407     5883        /*D* NAME:         ADD_FILE
      408     5884             PURPOSE:      To add a file to OUTSYM's tables
      409     5885             DESCRIPTION:  For information about how this routine works,
      410     5886                           see the *F* for FOF$ADD.
      411     5887
      412     5888                           If called with FILL=0, then the added file does
      413     5889                           not exist in our tables, and a new file frame
      414     5890                           is obtained.  Otherwise (FIL~=0), the file frame
      415     5891                           exists, and we just grab the new extent information
      416     5892                           from the FIT. */
      417     5893    1   ADD_FILE: PROC ALTRET;

   5893  7 000052   200044 741300       ADD_FILE     STX1  ! EXPPRIO+2,,AUTO

      418     5894        /**/
      419     5895    2   DCL TGRANS UBIN WORD;
      420     5896    2   DCL FRDAD UBIN WORD;
      421     5897    2   DCL BLK# UBIN WORD;
      422     5898    2   DCL HASH UBIN WORD;
      423     5899    2   DCL NOPNERR UBIN;
      424     5900    2   DCL DAD UBIN;
      425     5901    2   DCL 1 STAMP ALIGNED,
      426     5902    2         2 HASH UBIN(27) UNAL,
      427     5903    2         2 FRDAD UBIN(9) UNAL;
      428     5904        /**/
      429     5905    2         FO_FILENAME.BOOTID=FIL_BOOTID;

   5905  7 000053   200007 470500                    LDP0    @FIL_BOOTID,,AUTO
         7 000054   000000 236100                    LDQ     0,,PR0
         7 000055   000011 772000                    QRL     9
         7 000056   000000 552034 xsym               STBQ    FO_FILENAME,'34'O

      430     5906    2         CALL BINCHAR(FO_FILENAME.SYSID,FIL_SYSID);

   5906  7 000057   200003 471500                    LDP1    @FIL_SYSID,,AUTO
PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:94   
         7 000060   100000 235100                    LDA     0,,PR1
         7 000061   000044 773000                    LRL     36
         7 000062   200070 757100                    STAQ    I+1,,AUTO
         7 000063   000000 301500                    BTD
         7 000064   200070 000010                    NDSC9   I+1,,AUTO                cn=0,s=lsgnf,sf=0,n=8
         7 000065   000001 030006 xsym               NDSC9   FO_FILENAME+1            cn=0,s=nosgn,sf=0,n=6

      431     5907    2         CALL BINCHAR(FO_FILENAME.NUM,FIL_NUM);

   5907  7 000066   200004 473500                    LDP3    @FIL_NUM,,AUTO
         7 000067   300000 235100                    LDA     0,,PR3
         7 000070   000044 773000                    LRL     36
         7 000071   200070 757100                    STAQ    I+1,,AUTO
         7 000072   000000 301500                    BTD
         7 000073   200070 000010                    NDSC9   I+1,,AUTO                cn=0,s=lsgnf,sf=0,n=8
         7 000074   000002 430006 xsym               NDSC9   FO_FILENAME+2            cn=2,s=nosgn,sf=0,n=6

      432     5908    2         CALL BINCHAR(FO_FILENAME.CNUM,FIL_CNUM);

   5908  7 000075   200025 235100                    LDA     FIL_CNUM,,AUTO
         7 000076   000044 773000                    LRL     36
         7 000077   200070 757100                    STAQ    I+1,,AUTO
         7 000100   000000 301500                    BTD
         7 000101   200070 000010                    NDSC9   I+1,,AUTO                cn=0,s=lsgnf,sf=0,n=8
         7 000102   000004 030003 xsym               NDSC9   FO_FILENAME+4            cn=0,s=nosgn,sf=0,n=3

      433     5909
      434     5910
      435     5911    2         IF FIL_CNUM =0 THEN

   5911  7 000103   200025 235100                    LDA     FIL_CNUM,,AUTO
         7 000104   000761 601000 7                  TNZ     s:6200

      436     5912    3           DO;

      437     5913
      438     5914
PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:95   
      439     5915        /***
      440     5916         ***
      441     5917         ***
      442     5918         ***          FIRST CHUNK
      443     5919         ***
      444     5920         ***
      445     5921         ***/
      446     5922
      447     5923    3           IF FILL = 0 THEN

   5923  7 000105   200037 236100                    LDQ     FILL,,AUTO
         7 000106   000163 601000 7                  TNZ     AFILE01

      448     5924    4             DO;

      449     5925                                      /* Find sysid and then file number,
      450     5926                                         altret if none there */
      451     5927    4             CALL FIND_FILE ALTRET(AFILE01);

   5927  7 000107   003456 701000 7                  TSX1    FIND_FILE
         7 000110   000163 702000 7                  TSX2    AFILE01

      452     5928                                      /* Is this a batch job and is the file
      453     5929                                         a product of the currently booted
      454     5930                                         system? If it's a batch file and it's
      455     5931                                         from a previous boot, then if it's not
      456     5932                                         on a deviceit will be rerun.  If it's
      457     5933                                         on a device then QUIT because it will
      458     5934                                         be rerun */
      459     5935    4             IF JOB$->FO$JOB.MODE = %M_BATCH#

   5935  7 000111   000000 470400 xsym               LDP0    FO_JOB$
         7 000112   000003 236100                    LDQ     3,,PR0
         7 000113   074000 376003                    ANQ     30720,DU
         7 000114   004000 116003                    CMPQ    2048,DU
         7 000115   000140 601000 7                  TNZ     s:5951
         7 000116   000000 471400 xsym               LDP1    FO_FIL$
PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:96   
         7 000117   200007 473500                    LDP3    @FIL_BOOTID,,AUTO
         7 000120   300000 236100                    LDQ     0,,PR3
         7 000121   100021 676100                    ERQ     17,,PR1
         7 000122   000000 376000 8                  ANQ     0
         7 000123   000140 600000 7                  TZE     s:5951

      460     5936    4             AND FIL_BOOTID ~= FIL$->FO$FIL.BOOTID THEN
      461     5937    5               DO;

      462     5938    5               IF FIL$->FO$FIL.CDEV$ = ADDR(NIL) THEN

   5938  7 000124   100011 236100                    LDQ     9,,PR1
         7 000125   000001 116000 xsym               CMPQ    B_VECTNIL+1
         7 000126   000132 601000 7                  TNZ     s:5942

      463     5939    5                CALL DEL_FILE;

   5939  7 000127   004203 701000 7                  TSX1    DEL_FILE
         7 000130   000000 011000                    NOP     0
         7 000131   000137 710000 7                  TRA     s:5945

      464     5940    5               ELSE
      465     5941    6                 DO;

      466     5942    6                 DEV$=FIL$->FO$FIL.CDEV$;

   5942  7 000132   000000 756000 xsym               STQ     FO_DEV$

      467     5943    6                 CALL FOD$EVENT (FODE_QUIT#,FOQR_RRUN#);

   5943  7 000133   000002 630400 8                  EPPR0   2
         7 000134   000020 631400 xsym               EPPR1   B_VECTNIL+16
         7 000135   000000 701000 xent               TSX1    FOD$EVENT
         7 000136   000000 011000                    NOP     0

      468     5944    6                 END;

PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:97   
      469     5945    5               GOTO AFILE01;

   5945  7 000137   000163 710000 7                  TRA     AFILE01

      470     5946    5               END;
      471     5947                                                /**/
      472     5948                                      /* If this is another one of GHOST1s
      473     5949                                         infamous banner files, ignore it. */
      474     5950                                                /**/
      475     5951    4             IF FIL_SYSID = 1 THEN

   5951  7 000140   200003 471500                    LDP1    @FIL_SYSID,,AUTO
         7 000141   100000 235100                    LDA     0,,PR1
         7 000142   000001 115007                    CMPA    1,DL
         7 000143   000146 601000 7                  TNZ     s:5953

      476     5952    4              RETURN;

   5952  7 000144   200044 221300                    LDX1  ! EXPPRIO+2,,AUTO
         7 000145   000001 702211                    TSX2  ! 1,X1

      477     5953    4             CALL FOI$SNAP (%S$DBLADD,F_FO,M_F);

   5953  7 000146   000007 630400 8                  EPPR0   7
         7 000147   000021 631400 xsym               EPPR1   B_VECTNIL+17
         7 000150   000000 701000 xent               TSX1    FOI$SNAP
         7 000151   000000 011000                    NOP     0

      478     5954        /*S* SCREECH_CODE: FOF-S$DBLADD
      479     5955             TYPE:         SNAP
      480     5956             MESSAGE:      The same file was added twice to OUTSYM
      481     5957             REMARKS:      OUTSYM receives an event whenever an output
      482     5958                           symbiont file in :SYMO is finally closed off.
      483     5959                           This SNAP occurs when OUTSYM receives such a
      484     5960                           notification for a file which he already has
      485     5961                           listed in his internal tables.  This means that
      486     5962                           either the output COOP is very confused, or
PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:98   
      487     5963                           the algorithm which enables OUTSYM recovery to
      488     5964                           determine (at boot time) which :SYMO files are
      489     5965                           left over from before the last crash has failed.
      490     5966                           In this latter case, OUTSYM has probably picked
      491     5967                           up (in his recovery) a file which was currently
      492     5968                           being built, and the SCREECH has occurred when
      493     5969                           that file was finally handed to OUTSYM.  */
      494     5970    4             IF RECOVERING ~= 0 THEN

   5970  7 000152   200006 470500                    LDP0    @RECOVERING,,AUTO
         7 000153   000000 235100                    LDA     0,,PR0
         7 000154   000161 600000 7                  TZE     s:5972

      495     5971    4              CALL M$CLOSE (CLOSE_FILE1) ALTRET(ALTRT);

   5971  7 000155   000000 630400 6                  EPPR0   CLOSE_FILE1
         7 000156   450001 713400                    CLIMB   alt,close
         7 000157   406000 401760                    pmme    nvectors=13
         7 000160   001055 702000 7                  TSX2    ALTRT

      496     5972    4             ALTRETURN;

   5972  7 000161   200044 221300                    LDX1  ! EXPPRIO+2,,AUTO
         7 000162   000000 702211                    TSX2  ! 0,X1

   5970  7 000163                       AFILE01      null
      497     5973    4   AFILE01:  ;
      498     5974    4             END;

      499     5975    3           IF RECOVERING = 0 THEN

   5975  7 000163   200006 470500                    LDP0    @RECOVERING,,AUTO
         7 000164   000000 235100                    LDA     0,,PR0
         7 000165   000172 601000 7                  TNZ     s:5977

      500     5976    3            CALL M$OPEN (OPEN_FILE1) ALTRET(AFILE1);

PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:99   
   5976  7 000166   000500 630400 6                  EPPR0   OPEN_FILE1
         7 000167   450000 713400                    CLIMB   alt,open
         7 000170   410400 401760                    pmme    nvectors=18
         7 000171   000732 702000 7                  TSX2    AFILE1

      501     5977    3           SETX = DCBADDR(DCBNUM(M$FILE1))->F$DCB.SETX;

   5977  7 000172   000000 236007 xsym               LDQ     M$FILE1,DL
         7 000173   000012 470400 8                  LDP0    10
         7 000174   000000 471500                    LDP1    0,,PR0
         7 000175   100000 473506                    LDP3    0,QL,PR1
         7 000176   300051 236100                    LDQ     41,,PR3
         7 000177   777777 376007                    ANQ     -1,DL
         7 000200   200026 756100                    STQ     SETX,,AUTO

      502     5978    3           NRECS = DCBADDR(DCBNUM(M$FILE1))->F$DCB.NRECS;

   5978  7 000201   000000 236007 xsym               LDQ     M$FILE1,DL
         7 000202   100000 473506                    LDP3    0,QL,PR1
         7 000203   300042 235100                    LDA     34,,PR3
         7 000204   200020 755100                    STA     NRECS,,AUTO

      503     5979                                      /* FIT starts in the 5th word of a granule.
      504     5980                                         ACS=BLOCK is the reason we do this */
      505     5981    3           FIT$ = PINCRW(ADDR(FO_FITBUF1),SIZEW(FM$GRAN));

   5981  7 000205   000013 236000 8                  LDQ     11
         7 000206   200015 756100                    STQ     FIT$,,AUTO

      506     5982    3           CALL M$CLOSE (CLOSE_FILE1);

   5982  7 000207   000000 630400 6                  EPPR0   CLOSE_FILE1
         7 000210   050001 713400                    CLIMB   close
         7 000211   406000 401760                    pmme    nvectors=13

      507     5983    3           IF FILL = 0 THEN

PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:100  
   5983  7 000212   200037 235100                    LDA     FILL,,AUTO
         7 000213   000264 601000 7                  TNZ     s:6010

      508     5984    4             DO;

      509     5985    4             P$ = FIT$;

   5985  7 000214   200015 236100                    LDQ     FIT$,,AUTO
         7 000215   200017 756100                    STQ     P$,,AUTO

      510     5986    4             CALL XSF$LOCCODP(P$,16)

   5986  7 000216   000015 236000 8                  LDQ     13
         7 000217   200071 756100                    STQ     I+2,,AUTO
         7 000220   200017 630500                    EPPR0   P$,,AUTO
         7 000221   200070 450500                    STP0    I+1,,AUTO
         7 000222   200070 630500                    EPPR0   I+1,,AUTO
         7 000223   000020 631400 xsym               EPPR1   B_VECTNIL+16
         7 000224   000000 701000 xent               TSX1    XSF$LOCCODP
         7 000225   000242 702000 7                  TSX2    s:6004

      511     5987    5             WHENRETURN DO;

      512     5988    5               IF P$ -> CODE16.NBANNER_RECS >= NRECS

   5988  7 000226   200017 470500                    LDP0    P$,,AUTO
         7 000227   000011 236100                    LDQ     9,,PR0
         7 000230   000022 772000                    QRL     18
         7 000231   200020 116100                    CMPQ    NRECS,,AUTO
         7 000232   000242 604000 7                  TMI     s:6004

      513     5989    6               THEN DO;

      514     5990    6                 CALL M$OPEN (DELETE_FILE1)

   5990  7 000233   000164 630400 6                  EPPR0   DELETE_FILE1
         7 000234   450000 713400                    CLIMB   alt,open
PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:101  
         7 000235   410400 401760                    pmme    nvectors=18
         7 000236   000240 702000 7                  TSX2    s:5993
         7 000237   000240 710000 7                  TRA     s:5993

      515     5991    7                 WHENALTRETURN DO;

      516     5992    7                   END;

      517     5993    6                 ALTRETURN;

   5993  7 000240   200044 221300                    LDX1  ! EXPPRIO+2,,AUTO
         7 000241   000000 702211                    TSX2  ! 0,X1

      518     5994    6                 END;
      519     5995    5               END;
      520     5996        /**
      521     5997         **
      522     5998         **
      523     5999         **       GET A FILE TABLE ENTRY, FILL IN THE GOODIES, AND LINK THE
      524     6000         **       ENTRY ONTO ITS APPROPRIATE FILE PRIO CHAIN
      525     6001         **
      526     6002         **
      527     6003         */
      528     6004    4             CALL FOI$GBUF (FO_FILSCB,FIL$) ALTRET(AFILE2);

   6004  7 000242   000016 630400 8                  EPPR0   14
         7 000243   000020 631400 xsym               EPPR1   B_VECTNIL+16
         7 000244   000000 701000 xent               TSX1    FOI$GBUF
         7 000245   000743 702000 7                  TSX2    AFILE2

      529     6005    4             FIL$->FO$FIL=FO_FIL_INIT;

   6005  7 000246   000000 470400 xsym               LDP0    FO_FIL$
         7 000247   000100 100400                    MLR     fill='000'O
         7 000250   000000 000224 xsym               ADSC9   FO_FIL_INIT              cn=0,n=148
         7 000251   000000 000224                    ADSC9   0,,PR0                   cn=0,n=148

PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:102  
      530     6006    4             FIL$->FO$FIL.SYSID=FIL_SYSID;

   6006  7 000252   200003 470500                    LDP0    @FIL_SYSID,,AUTO
         7 000253   000000 720100                    LXL0    0,,PR0
         7 000254   000000 471400 xsym               LDP1    FO_FIL$
         7 000255   100012 740100                    STX0    10,,PR1

      531     6007    4             FIL$->FO$FIL.NUM=FIL_NUM;

   6007  7 000256   200004 473500                    LDP3    @FIL_NUM,,AUTO
         7 000257   300000 721100                    LXL1    0,,PR3
         7 000260   100012 441100                    SXL1    10,,PR1

      532     6008    4             FIL$->FO$FIL.BOOTID=FIL_BOOTID;

   6008  7 000261   200007 474500                    LDP4    @FIL_BOOTID,,AUTO
         7 000262   400000 236100                    LDQ     0,,PR4
         7 000263   100021 552170                    STBQ    17,'70'O,PR1

      533     6009    4             END;

      534     6010    3           FIL$->FO$FIL.SETX=SETX;

   6010  7 000264   200026 720100                    LXL0    SETX,,AUTO
         7 000265   000000 470400 xsym               LDP0    FO_FIL$
         7 000266   000010 440100                    SXL0    8,,PR0

      535     6011    3           IF FILL = 0 THEN

   6011  7 000267   200037 235100                    LDA     FILL,,AUTO
         7 000270   000370 601000 7                  TNZ     s:6076

      536     6012    4             DO;

      537     6013
      538     6014
      539     6015        /**
PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:103  
      540     6016         **
      541     6017         **       DO JOBSTATS GOODIES
      542     6018         **
      543     6019         **/
      544     6020                                /* ATTACH THIS FILE TO THE 'JOB' TABLE
      545     6021                                   ENTRY FOR ITS SYSID, WHEREIN WE KEEP
      546     6022                                   INFO CONCERNING ALL FILES FOR THIS SYSID */
      547     6023    4             JOB_SYSID=FIL$->FO$FIL.SYSID;

   6023  7 000271   000012 236100                    LDQ     10,,PR0
         7 000272   000022 772000                    QRL     18
         7 000273   200022 756100                    STQ     JOB_SYSID,,AUTO

      548     6024                                /* SEE IF THERE'S ALREADY A JOB TABLE ENTRY */
      549     6025    4             DEST$=FIT$;

   6025  7 000274   200015 236100                    LDQ     FIT$,,AUTO
         7 000275   200032 756100                    STQ     DEST$,,AUTO

      550     6026                                      /* Access the contents of FO_FITBUF1
      551     6027                                         obtained during the open */
      552     6028    4             CALL XSF$LOCCODP (DEST$,13) ALTRET(AFILE31);

   6028  7 000276   000021 236000 8                  LDQ     17
         7 000277   200071 756100                    STQ     I+2,,AUTO
         7 000300   200032 631500                    EPPR1   DEST$,,AUTO
         7 000301   200070 451500                    STP1    I+1,,AUTO
         7 000302   200070 630500                    EPPR0   I+1,,AUTO
         7 000303   000020 631400 xsym               EPPR1   B_VECTNIL+16
         7 000304   000000 701000 xent               TSX1    XSF$LOCCODP
         7 000305   000753 702000 7                  TSX2    AFILE31

      553     6029                                      /* Job Name Length */
      554     6030    4             JOBNAME=DEST$->FS$DEST.JOBNAME;

   6030  7 000306   200032 470500                    LDP0    DEST$,,AUTO
         7 000307   040000 100500                    MLR     fill='040'O
PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:104  
         7 000310   000022 200037                    ADSC9   18,,PR0                  cn=1,n=31
         7 000311   000017 000037 1                  ADSC9   JOBNAME                  cn=0,n=31

      555     6031    4             CALL INDEX (JNL,' ',JOBNAME);

   6031  7 000312   000000 124400                    SCM     mask='000'O
         7 000313   000017 000037 1                  ADSC9   JOBNAME                  cn=0,n=31
         7 000314   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         7 000315   000015 000000 1                  ARG     JNL

      556     6032    4             CALL FIND_JOB ALTRET(AFILE011);

   6032  7 000316   004715 701000 7                  TSX1    FIND_JOB
         7 000317   000346 702000 7                  TSX2    AFILE011

      557     6033                                /* FOUND IT.  MAKE SURE OFF ISN'T SET */
      558     6034    4             IF JOB$->FO$JOB.FLG.JOFF THEN

   6034  7 000320   000000 470400 xsym               LDP0    FO_JOB$
         7 000321   000003 234100                    SZN     3,,PR0
         7 000322   000335 605000 7                  TPL     s:6052

      559     6035    4              IF JOB$->FO$JOB.FLG.RCVRF THEN

   6035  7 000323   000003 236100                    LDQ     3,,PR0
         7 000324   100000 316003                    CANQ    32768,DU
         7 000325   000331 600000 7                  TZE     s:6038

      560     6036    4               JOB$->FO$JOB.FLG.JOFF='0'B;

   6036  7 000326   000031 236000 xsym               LDQ     B_VECTNIL+25
         7 000327   000003 356100                    ANSQ    3,,PR0
         7 000330   000335 710000 7                  TRA     s:6052

      561     6037    4              ELSE
      562     6038    4               CALL FOI$SNAP (%S$OFFADD,F_FO,M_F);

PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:105  
   6038  7 000331   000023 630400 8                  EPPR0   19
         7 000332   000021 631400 xsym               EPPR1   B_VECTNIL+17
         7 000333   000000 701000 xent               TSX1    FOI$SNAP
         7 000334   000000 011000                    NOP     0

      563     6039        /*S* SCREECH_CODE: FOF-S$OFFADD
      564     6040             TYPE:         SNAP
      565     6041             MESSAGE:      A batch job added a file to OUTSYM after going OFF
      566     6042             REMARKS:      OUTSYM receives an event from MONKEY whenever a
      567     6043                           batch job leaves the system.  This SCREECH occurs
      568     6044                           when OUTSYM receives an output file add from a
      569     6045                           batch job which has been marked off.  This means
      570     6046                           that OUTSYM or the monitor is very confused about
      571     6047                           that job.    */
      572     6048
      573     6049                                /* IF THIS IS A FILE FROM A BATCH JOB
      574     6050                                   WHOSE OUTPUT WAS CANCELLED, THEN
      575     6051                                   JUST DISCARD IT */
      576     6052    4             IF JOB$->FO$JOB.FLG.OCANCEL THEN

   6052  7 000335   000000 470400 xsym               LDP0    FO_JOB$
         7 000336   000003 236100                    LDQ     3,,PR0
         7 000337   200000 316003                    CANQ    65536,DU
         7 000340   000345 600000 7                  TZE     s:6057

      577     6053    5               DO;

      578     6054    5               CALL DEL_FILE;

   6054  7 000341   004203 701000 7                  TSX1    DEL_FILE
         7 000342   000000 011000                    NOP     0

      579     6055    5               RETURN;

   6055  7 000343   200044 221300                    LDX1  ! EXPPRIO+2,,AUTO
         7 000344   000001 702211                    TSX2  ! 1,X1

PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:106  
      580     6056    5               END;
      581     6057    4             GOTO AFILE012;

   6057  7 000345   000350 710000 7                  TRA     AFILE012

   6052  7 000346                       AFILE011     null
      582     6058
      583     6059                                /* BUILD A JOB TABLE ENTRY */
      584     6060    4   AFILE011: ;
      585     6061    4             CALL ADD_JOB ALTRET(AFILE4);

   6061  7 000346   004736 701000 7                  TSX1    ADD_JOB
         7 000347   000756 702000 7                  TSX2    AFILE4

      586     6062                                /* UPDATE THE JOB TABLE ENTRY */
      587     6063    4   AFILE012:
      588     6064    4             FIL$->FO$FIL.OJOB$=JOB$;

   6064  7 000350   000000 236000 xsym  AFILE012     LDQ     FO_JOB$
         7 000351   000000 470400 xsym               LDP0    FO_FIL$
         7 000352   000003 756100                    STQ     3,,PR0

      589     6065    4             JOB$->FO$JOB.NFIL=JOB$->FO$JOB.NFIL+1;

   6065  7 000353   000000 471400 xsym               LDP1    FO_JOB$
         7 000354   100002 720100                    LXL0    2,,PR1
         7 000355   000001 621010                    EAX1    1,X0
         7 000356   100002 441100                    SXL1    2,,PR1

      590     6066    4             FIL$->FO$FIL.JLNK$=JOB$->FO$JOB.FILHD$;

   6066  7 000357   100001 236100                    LDQ     1,,PR1
         7 000360   000004 756100                    STQ     4,,PR0

      591     6067    4             JOB$->FO$JOB.FILHD$=FIL$;

   6067  7 000361   000000 236000 xsym               LDQ     FO_FIL$
PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:107  
         7 000362   100001 756100                    STQ     1,,PR1

      592     6068    4             IF RECOVERING ~= 0 THEN

   6068  7 000363   200006 473500                    LDP3    @RECOVERING,,AUTO
         7 000364   300000 235100                    LDA     0,,PR3
         7 000365   000370 600000 7                  TZE     s:6076

      593     6069    4              JOB$->FO$JOB.FLG.RCVRF='1'B;

   6069  7 000366   100000 236003                    LDQ     32768,DU
         7 000367   100003 256100                    ORSQ    3,,PR1

      594     6070    4             END;

      595     6071        /**
      596     6072         **
      597     6073         ** PICK UP INFO (FROM THE FIT) ABOUT THE FILE
      598     6074         **
      599     6075         */
      600     6076    3           FIL_ACCT = JOB$ -> FO$JOB.ACCT;

   6076  7 000370   000000 471400 xsym               LDP1    FO_JOB$
         7 000371   040100 100500                    MLR     fill='040'O
         7 000372   100004 000010                    ADSC9   4,,PR1                   cn=0,n=8
         7 000373   200030 000010                    ADSC9   FIL_ACCT,,AUTO           cn=0,n=8

      601     6077    3           IF FILL = 0 THEN

   6077  7 000374   200037 235100                    LDA     FILL,,AUTO
         7 000375   000655 601000 7                  TNZ     s:6137

      602     6078    4             DO;

      603     6079    4             P$=FIT$;

   6079  7 000376   200015 236100                    LDQ     FIT$,,AUTO
PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:108  
         7 000377   200017 756100                    STQ     P$,,AUTO

      604     6080    4             CALL XSF$LOCCODP(P$,4) ALTRET(AFILE30);

   6080  7 000400   000026 236000 8                  LDQ     22
         7 000401   200071 756100                    STQ     I+2,,AUTO
         7 000402   200017 633500                    EPPR3   P$,,AUTO
         7 000403   200070 453500                    STP3    I+1,,AUTO
         7 000404   200070 630500                    EPPR0   I+1,,AUTO
         7 000405   000020 631400 xsym               EPPR1   B_VECTNIL+16
         7 000406   000000 701000 xent               TSX1    XSF$LOCCODP
         7 000407   000750 702000 7                  TSX2    AFILE30

      605     6081    4             JOB$->FO$JOB.ACCT=P$->CODE04.CREATOR.ACCT;

   6081  7 000410   200017 470500                    LDP0    P$,,AUTO
         7 000411   000000 471400 xsym               LDP1    FO_JOB$
         7 000412   040100 100500                    MLR     fill='040'O
         7 000413   000003 000010                    ADSC9   3,,PR0                   cn=0,n=8
         7 000414   100004 000010                    ADSC9   4,,PR1                   cn=0,n=8

      606     6082    4             CALL INDEX (I,' ',JOB$->FO$JOB.ACCT);

   6082  7 000415   000000 124500                    SCM     mask='000'O
         7 000416   100004 000010                    ADSC9   4,,PR1                   cn=0,n=8
         7 000417   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         7 000420   200010 000100                    ARG     I,,AUTO

      607     6083    4             JOB$->FO$JOB.ACCTL=I;

   6083  7 000421   200010 236100                    LDQ     I,,AUTO
         7 000422   000033 736000                    QLS     27
         7 000423   100006 552140                    STBQ    6,'40'O,PR1

      608     6084    4             JOB$->FO$JOB.UNAME = P$->CODE04.CREATOR.NAME;

   6084  7 000424   200017 470500                    LDP0    P$,,AUTO
PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:109  
         7 000425   040100 100500                    MLR     fill='040'O
         7 000426   000005 000014                    ADSC9   5,,PR0                   cn=0,n=12
         7 000427   100006 200014                    ADSC9   6,,PR1                   cn=1,n=12

      609     6085    4             CALL INDEX(I,' ',JOB$->FO$JOB.UNAME);

   6085  7 000430   000000 124500                    SCM     mask='000'O
         7 000431   100006 200014                    ADSC9   6,,PR1                   cn=1,n=12
         7 000432   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         7 000433   200010 000100                    ARG     I,,AUTO

      610     6086    4             JOB$->FO$JOB.UNAMEL = I;

   6086  7 000434   200010 236100                    LDQ     I,,AUTO
         7 000435   000022 736000                    QLS     18
         7 000436   100011 552120                    STBQ    9,'20'O,PR1

      611     6087    4             FIL$->FO$FIL.CREATED=P$->CODE04.CREATION.TIME;

   6087  7 000437   200017 470500                    LDP0    P$,,AUTO
         7 000440   000000 473400 xsym               LDP3    FO_FIL$
         7 000441   000002 235100                    LDA     2,,PR0
         7 000442   300020 755100                    STA     16,,PR3

      612     6088
      613     6089    4             P$ = FIT$;

   6089  7 000443   200015 236100                    LDQ     FIT$,,AUTO
         7 000444   200017 756100                    STQ     P$,,AUTO

      614     6090    4             CALL XSF$LOCCODP(P$,17)

   6090  7 000445   000030 236000 8                  LDQ     24
         7 000446   200071 756100                    STQ     I+2,,AUTO
         7 000447   200017 630500                    EPPR0   P$,,AUTO
         7 000450   200070 450500                    STP0    I+1,,AUTO
         7 000451   200070 630500                    EPPR0   I+1,,AUTO
PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:110  
         7 000452   000020 631400 xsym               EPPR1   B_VECTNIL+16
         7 000453   000000 701000 xent               TSX1    XSF$LOCCODP
         7 000454   000463 702000 7                  TSX2    s:6097

      615     6091    5             WHENRETURN DO;

      616     6092    5               FIL$ -> FO$FIL.VLP_FPRG = P$ -> FPRG_DATA;

   6092  7 000455   200017 470500                    LDP0    P$,,AUTO
         7 000456   000000 471400 xsym               LDP1    FO_FIL$
         7 000457   000100 100500                    MLR     fill='000'O
         7 000460   000000 000104                    ADSC9   0,,PR0                   cn=0,n=68
         7 000461   100024 000104                    ADSC9   20,,PR1                  cn=0,n=68

      617     6093    5               END;

   6093  7 000462   000463 710000 7                  TRA     s:6097

      618     6094    5             WHENALTRETURN DO;

      619     6095    5               END;

      620     6096
      621     6097    4             CALL GET_DEST ALTRET(AFILE_BAD);

   6097  7 000463   001413 701000 7                  TSX1    GET_DEST
         7 000464   001310 702000 7                  TSX2    AFILE_BAD

      622     6098    4             JOB$->FO$JOB.MODE=DEST$->FS$DEST.MODE;

   6098  7 000465   200032 470500                    LDP0    DEST$,,AUTO
         7 000466   000000 471400 xsym               LDP1    FO_JOB$
         7 000467   000005 236100                    LDQ     5,,PR0
         7 000470   000002 736000                    QLS     2
         7 000471   100003 676100                    ERQ     3,,PR1
         7 000472   074000 376003                    ANQ     30720,DU
         7 000473   100003 656100                    ERSQ    3,,PR1
PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:111  

      623     6099    4             IF DEST$->FS$DEST.OUTSYMF.CWSN THEN

   6099  7 000474   200032 470500                    LDP0    DEST$,,AUTO
         7 000475   000012 236100                    LDQ     10,,PR0
         7 000476   002000 316003                    CANQ    1024,DU
         7 000477   000505 600000 7                  TZE     s:6102

      624     6100    4              FIL$->FO$FIL.DESTR.WSN=DEST$->FS$DEST.NEWWSN;

   6100  7 000500   000000 473400 xsym               LDP3    FO_FIL$
         7 000501   040100 100500                    MLR     fill='040'O
         7 000502   000013 000010                    ADSC9   11,,PR0                  cn=0,n=8
         7 000503   300005 000010                    ADSC9   5,,PR3                   cn=0,n=8
         7 000504   000511 710000 7                  TRA     s:6103

      625     6101    4             ELSE
      626     6102    4              FIL$->FO$FIL.DESTR.WSN=DEST$->FS$DEST.DT.WSN;

   6102  7 000505   000000 473400 xsym               LDP3    FO_FIL$
         7 000506   040100 100500                    MLR     fill='040'O
         7 000507   000017 000010                    ADSC9   15,,PR0                  cn=0,n=8
         7 000510   300005 000010                    ADSC9   5,,PR3                   cn=0,n=8

      627     6103    4             IF DEST$->FS$DEST.OUTSYMF.UNHELD THEN

   6103  7 000511   200032 470500                    LDP0    DEST$,,AUTO
         7 000512   000012 236100                    LDQ     10,,PR0
         7 000513   000400 316003                    CANQ    256,DU
         7 000514   000517 600000 7                  TZE     s:6105

      628     6104    4              FIL$->FO$FIL.FLG.UNHELD='1'B;

   6104  7 000515   001000 236007                    LDQ     512,DL
         7 000516   300015 256100                    ORSQ    13,,PR3

      629     6105    4             FIL$->FO$FIL.DESTR.TYP=DEST$->FS$DEST.DT.DEV;
PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:112  

   6105  7 000517   200032 470500                    LDP0    DEST$,,AUTO
         7 000520   000016 720100                    LXL0    14,,PR0
         7 000521   300007 740100                    STX0    7,,PR3

      630     6106    4             FIL$->FO$FIL.ATTR=DEST$->FS$DEST.ATTR;

   6106  7 000522   200032 470500                    LDP0    DEST$,,AUTO
         7 000523   000021 721100                    LXL1    17,,PR0
         7 000524   300010 741100                    STX1    8,,PR3

      631     6107    4             FIL$->FO$FIL.FORM=DEST$->FS$DEST.FORM;

   6107  7 000525   200032 470500                    LDP0    DEST$,,AUTO
         7 000526   040100 100500                    MLR     fill='040'O
         7 000527   000000 000006                    ADSC9   0,,PR0                   cn=0,n=6
         7 000530   300013 000006                    ADSC9   11,,PR3                  cn=0,n=6

      632     6108    4             FIL$->FO$FIL.FLG.PAGES=DEST$->FS$DEST.DDEV.LP;

   6108  7 000531   200032 470500                    LDP0    DEST$,,AUTO
         7 000532   000016 236100                    LDQ     14,,PR0
         7 000533   000034 772000                    QRL     28
         7 000534   300015 676100                    ERQ     13,,PR3
         7 000535   000200 376007                    ANQ     128,DL
         7 000536   300015 656100                    ERSQ    13,,PR3

      633     6109    4             P$ = FIT$;

   6109  7 000537   200015 236100                    LDQ     FIT$,,AUTO
         7 000540   200017 756100                    STQ     P$,,AUTO

      634     6110    4             CALL XSF$LOCCODP(P$,16) ALTRET (AFILE29);

   6110  7 000541   000015 236000 8                  LDQ     13
         7 000542   200071 756100                    STQ     I+2,,AUTO
         7 000543   200017 630500                    EPPR0   P$,,AUTO
PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:113  
         7 000544   200070 450500                    STP0    I+1,,AUTO
         7 000545   200070 630500                    EPPR0   I+1,,AUTO
         7 000546   000020 631400 xsym               EPPR1   B_VECTNIL+16
         7 000547   000000 701000 xent               TSX1    XSF$LOCCODP
         7 000550   000745 702000 7                  TSX2    AFILE29

      635     6111    4             IF FIL$ -> FO$FIL.FLG.PAGES THEN

   6111  7 000551   000000 470400 xsym               LDP0    FO_FIL$
         7 000552   000015 236100                    LDQ     13,,PR0
         7 000553   000200 316007                    CANQ    128,DL
         7 000554   000567 600000 7                  TZE     s:6115

      636     6112    4              FIL$ -> FO$FIL.PAGES = P$ -> CODE16.PAGENO +

   6112  7 000555   200017 471500                    LDP1    P$,,AUTO
         7 000556   100007 236100                    LDQ     7,,PR1
         7 000557   000011 772000                    QRL     9
         7 000560   000777 376007                    ANQ     511,DL
         7 000561   200070 756100                    STQ     I+1,,AUTO
         7 000562   100005 236100                    LDQ     5,,PR1
         7 000563   000022 772000                    QRL     18
         7 000564   200070 036100                    ADLQ    I+1,,AUTO
         7 000565   000023 756100                    STQ     19,,PR0
         7 000566   000601 710000 7                  TRA     s:6118

      637     6113    4              P$ -> CODE16.BANNER_REPEATS;
      638     6114    4             ELSE
      639     6115    4              FIL$ -> FO$FIL.PAGES = P$ -> CODE16.RECNO +

   6115  7 000567   200017 471500                    LDP1    P$,,AUTO
         7 000570   100011 236100                    LDQ     9,,PR1
         7 000571   000022 772000                    QRL     18
         7 000572   200070 756100                    STQ     I+1,,AUTO
         7 000573   100007 236100                    LDQ     7,,PR1
         7 000574   000011 772000                    QRL     9
         7 000575   000777 376007                    ANQ     511,DL
PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:114  
         7 000576   200070 402100                    MPY     I+1,,AUTO
         7 000577   100004 036100                    ADLQ    4,,PR1
         7 000600   000023 756100                    STQ     19,,PR0

      640     6116    4              (P$ -> CODE16.BANNER_REPEATS *
      641     6117    4              P$ -> CODE16.NBANNER_RECS);
      642     6118    4             FIL$->FO$FIL.FLG.CPVFC=DEST$->FS$DEST.DDEV.CP;

   6118  7 000601   200032 473500                    LDP3    DEST$,,AUTO
         7 000602   300016 236100                    LDQ     14,,PR3
         7 000603   000037 772000                    QRL     31
         7 000604   000015 676100                    ERQ     13,,PR0
         7 000605   000010 376007                    ANQ     8,DL
         7 000606   000015 656100                    ERSQ    13,,PR0

      643     6119    4             IF DEST$->FS$DEST.OUTSYMF.CPRIO THEN

   6119  7 000607   200032 471500                    LDP1    DEST$,,AUTO
         7 000610   100012 236100                    LDQ     10,,PR1
         7 000611   004000 316003                    CANQ    2048,DU
         7 000612   000620 600000 7                  TZE     s:6125

      644     6120    5               DO;                                           /* Prio was changed */

      645     6121    5               FIL$->FO$FIL.IPRIO=DEST$->FS$DEST.NEWPRIO;

   6121  7 000613   000011 772000                    QRL     9
         7 000614   000021 552104                    STBQ    17,'04'O,PR0

      646     6122    5               FIL$->FO$FIL.FLG.CPRIO='1'B;

   6122  7 000615   000020 236007                    LDQ     16,DL
         7 000616   000015 256100                    ORSQ    13,,PR0

      647     6123    5               END;

   6123  7 000617   000622 710000 7                  TRA     s:6126
PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:115  

      648     6124    4             ELSE                                            /* Prio not changed */
      649     6125    4              FIL$->FO$FIL.IPRIO = DEST$->FS$DEST.PRIO;

   6125  7 000620   100005 236100                    LDQ     5,,PR1
         7 000621   000021 552104                    STBQ    17,'04'O,PR0

      650     6126    4             FIL$->FO$FIL.FLG.CHKPTD=DEST$->FS$DEST.OUTSYMF.CHKPTD;

   6126  7 000622   200032 471500                    LDP1    DEST$,,AUTO
         7 000623   100012 236100                    LDQ     10,,PR1
         7 000624   000034 772000                    QRL     28
         7 000625   000015 676100                    ERQ     13,,PR0
         7 000626   000004 376007                    ANQ     4,DL
         7 000627   000015 656100                    ERSQ    13,,PR0

      651     6127    4             FIL$->FO$FIL.CHKPBR=DEST$->FS$DEST.CHKPBR;

   6127  7 000630   200032 471500                    LDP1    DEST$,,AUTO
         7 000631   100011 236100                    LDQ     9,,PR1
         7 000632   000017 756100                    STQ     15,,PR0

      652     6128    4             FIL$->FO$FIL.FLG.SAP=DEST$->FS$DEST.SAP;

   6128  7 000633   200032 471500                    LDP1    DEST$,,AUTO
         7 000634   100005 236100                    LDQ     5,,PR1
         7 000635   000034 772000                    QRL     28
         7 000636   000015 676100                    ERQ     13,,PR0
         7 000637   000040 376007                    ANQ     32,DL
         7 000640   000015 656100                    ERSQ    13,,PR0

      653     6129    4             FIL$->FO$FIL.SAPCOPIES=DEST$->FS$DEST.SAPCOPIES;

   6129  7 000641   200032 471500                    LDP1    DEST$,,AUTO
         7 000642   100005 236100                    LDQ     5,,PR1
         7 000643   000016 552110                    STBQ    14,'10'O,PR0

PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:116  
      654     6130    4             IF DEST$->FS$DEST.PRINT

   6130  7 000644   200032 471500                    LDP1    DEST$,,AUTO
         7 000645   100005 236100                    LDQ     5,,PR1
         7 000646   200000 316003                    CANQ    65536,DU
         7 000647   000655 600000 7                  TZE     s:6137
         7 000650   000015 236100                    LDQ     13,,PR0
         7 000651   000100 316007                    CANQ    64,DL
         7 000652   000655 601000 7                  TNZ     s:6137

      655     6131    4             AND NOT FIL$->FO$FIL.FLG.GLC
      656     6132    4             THEN
      657     6133    4              FIL$->FO$FIL.FLG.CONCUR = '1'B;

   6133  7 000653   002000 236007                    LDQ     1024,DL
         7 000654   000015 256100                    ORSQ    13,,PR0

      658     6134    4             END;

      659     6135
      660     6136                                           /* If file has been spilled but not filled */
      661     6137    3           IF FILL = 0

   6137  7 000655   200037 235100                    LDA     FILL,,AUTO
         7 000656   000665 601000 7                  TNZ     s:6142
         7 000657   200032 471500                    LDP1    DEST$,,AUTO
         7 000660   100012 430100                    FSZN    10,,PR1
         7 000661   000665 605000 7                  TPL     s:6142

      662     6138    3           AND DEST$->FS$DEST.OUTSYMF.SPILLED THEN
      663     6139    3            FIL$->FO$FIL.PRIO=FOPR_SPILLED#;

   6139  7 000662   000002 236007                    LDQ     2,DL
         7 000663   000016 552104                    STBQ    14,'04'O,PR0
         7 000664   000723 710000 7                  TRA     s:6157

      664     6140    3           ELSE
PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:117  
      665     6141    4             DO;

      666     6142    4             CALL GRAB_EXTS ALTRET(AFILE_BAD);

   6142  7 000665   001506 701000 7                  TSX1    GRAB_EXTS
         7 000666   001310 702000 7                  TSX2    AFILE_BAD

      667     6143    4             IF FILL ~= 0 THEN                    /* If old file, unchain the it */

   6143  7 000667   200037 235100                    LDA     FILL,,AUTO
         7 000670   000673 600000 7                  TZE     s:6146

      668     6144    4              CALL UNCHAIN_FILE;

   6144  7 000671   004412 701000 7                  TSX1    UNCHAIN_FILE
         7 000672   000000 011000                    NOP     0

      669     6145                                      /* Should we save it? */
      670     6146    4             IF FIL$->FO$FIL.FLG.SAP

   6146  7 000673   000000 470400 xsym               LDP0    FO_FIL$
         7 000674   000015 236100                    LDQ     13,,PR0
         7 000675   000040 316007                    CANQ    32,DL
         7 000676   000705 600000 7                  TZE     s:6150
         7 000677   000016 236100                    LDQ     14,,PR0
         7 000700   777000 316007                    CANQ    -512,DL
         7 000701   000705 601000 7                  TNZ     s:6150

      671     6147    4             AND FIL$->FO$FIL.SAPCOPIES = 0 THEN
      672     6148    4              FIL$->FO$FIL.PRIO=FOPR_HOLD#;

   6148  7 000702   000000 236003                    LDQ     0,DU
         7 000703   000016 552104                    STBQ    14,'04'O,PR0
         7 000704   000723 710000 7                  TRA     s:6157

      673     6149    4             ELSE
      674     6150    4              IF DEST$->FS$DEST.PRINT              /* If "PRINT" specified      */
PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:118  

   6150  7 000705   200032 471500                    LDP1    DEST$,,AUTO
         7 000706   100005 236100                    LDQ     5,,PR1
         7 000707   200000 316003                    CANQ    65536,DU
         7 000710   000716 601000 7                  TNZ     s:6153
         7 000711   000015 236100                    LDQ     13,,PR0
         7 000712   000100 316007                    CANQ    64,DL
         7 000713   000716 601000 7                  TNZ     s:6153
         7 000714   200037 235100                    LDA     FILL,,AUTO
         7 000715   000721 600000 7                  TZE     s:6155

      675     6151    4              OR FIL$->FO$FIL.FLG.GLC              /* or done got-last-chunk    */
      676     6152    4              OR FILL ~= 0 THEN                    /* or it's an old file       */
      677     6153    4               CALL PRIO_FILE;                    /* then re-prio the sucker   */

   6153  7 000716   003506 701000 7                  TSX1    PRIO_FILE
         7 000717   000000 011000                    NOP     0
         7 000720   000723 710000 7                  TRA     s:6157

      678     6154    4              ELSE
      679     6155    4               FIL$->FO$FIL.PRIO = FOPR_MFW#;

   6155  7 000721   000001 236007                    LDQ     1,DL
         7 000722   000016 552104                    STBQ    14,'04'O,PR0

      680     6156    4             END;

      681     6157    3           CALL CHAIN_FILE;

   6157  7 000723   004541 701000 7                  TSX1    CHAIN_FILE
         7 000724   000000 011000                    NOP     0

      682     6158                                      /* Set LPAVAIL flag if there is a device
      683     6159                                         available to print this one */
      684     6160    3           CALL FOD$AVAIL;

   6160  7 000725   000002 631400 xsym               EPPR1   B_VECTNIL+2
PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:119  
         7 000726   000000 701000 xent               TSX1    FOD$AVAIL
         7 000727   000000 011000                    NOP     0

      685     6161    3           RETURN;

   6161  7 000730   200044 221300                    LDX1  ! EXPPRIO+2,,AUTO
         7 000731   000001 702211                    TSX2  ! 1,X1

      686     6162
      687     6163        %EJECT;
PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:120  
      688     6164        /**
      689     6165         ** ERROR EXITS
      690     6166         **/
      691     6167
      692     6168    3   AFILE1:
      693     6169    3           NOPNERR=B$ERRCODE;

   6169  7 000732   000000 470400 xsym  AFILE1       LDP0    B$TCB$
         7 000733   000000 471500                    LDP1    0,,PR0
         7 000734   100102 236100                    LDQ     66,,PR1
         7 000735   000003 772000                    QRL     3
         7 000736   037777 376007                    ANQ     16383,DL
         7 000737   200051 756100                    STQ     NOPNERR,,AUTO

      694     6170    3           FIL_BADC=FOFE_NOPN#;

   6170  7 000740   000001 235007                    LDA     1,DL
         7 000741   200024 755100                    STA     FIL_BADC,,AUTO

      695     6171    3           GOTO AFILE_BAD;

   6171  7 000742   001310 710000 7                  TRA     AFILE_BAD

      696     6172    3   AFILE2:
      697     6173    3           FIL_BADC=FOFE_NFFR#;

   6173  7 000743   200024 450100       AFILE2       STZ     FIL_BADC,,AUTO

      698     6174    3           GOTO AFILE_BAD;

   6174  7 000744   001310 710000 7                  TRA     AFILE_BAD

   6170  7 000745                       AFILE29      null
      699     6175    3   AFILE29:;
      700     6176    3           FIL_BADC=FOFE_BFIT16#;

   6176  7 000745   000015 235007                    LDA     13,DL
PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:121  
         7 000746   200024 755100                    STA     FIL_BADC,,AUTO

      701     6177    3           GOTO AFILE_BAD;

   6177  7 000747   001310 710000 7                  TRA     AFILE_BAD

   6176  7 000750                       AFILE30      null
      702     6178    3   AFILE30:;
      703     6179    3           FIL_BADC=FOFE_BFIT04#;

   6179  7 000750   000002 235007                    LDA     2,DL
         7 000751   200024 755100                    STA     FIL_BADC,,AUTO

      704     6180    3           GOTO AFILE_BAD;

   6180  7 000752   001310 710000 7                  TRA     AFILE_BAD

   6179  7 000753                       AFILE31      null
      705     6181    3   AFILE31:;
      706     6182    3           FIL_BADC=FOFE_BFIT13#;

   6182  7 000753   000007 235007                    LDA     7,DL
         7 000754   200024 755100                    STA     FIL_BADC,,AUTO

      707     6183    3           GOTO AFILE_BAD;

   6183  7 000755   001310 710000 7                  TRA     AFILE_BAD

   6182  7 000756                       AFILE4       null
      708     6184    3   AFILE4: ;
      709     6185    3           FIL_BADC=FOFE_NJFR#;

   6185  7 000756   000013 235007                    LDA     11,DL
         7 000757   200024 755100                    STA     FIL_BADC,,AUTO

      710     6186    3           GOTO AFILE_BAD;

PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:122  
   6186  7 000760   001310 710000 7                  TRA     AFILE_BAD

      711     6187
      712     6188    3           END;
      713     6189    2         ELSE
      714     6190    3           DO;

      715     6191        %EJECT;
PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:123  
      716     6192        /***
      717     6193         ***
      718     6194         ***
      719     6195         ***          NOT FIRST CHUNK
      720     6196         ***
      721     6197         ***
      722     6198         ***/
      723     6199
      724     6200    3           CALL FIND_FILE ALTRET(AFILE04);

   6200  7 000761   003456 701000 7                  TSX1    FIND_FILE
         7 000762   001057 702000 7                  TSX2    AFILE04

      725     6201
      726     6202    3           FIL_ACCT=FIL$->FO$FIL.OJOB$->FO$JOB.ACCT;

   6202  7 000763   000000 470400 xsym               LDP0    FO_FIL$
         7 000764   000003 471500                    LDP1    3,,PR0
         7 000765   040100 100500                    MLR     fill='040'O
         7 000766   100004 000010                    ADSC9   4,,PR1                   cn=0,n=8
         7 000767   200030 000010                    ADSC9   FIL_ACCT,,AUTO           cn=0,n=8

      727     6203                                      /* If we think we already have the last
      728     6204                                         chunk, and are not in recovery then
      729     6205                                         something is very wrong - SNAP */
      730     6206    3           IF FIL$->FO$FIL.FLG.GLC THEN

   6206  7 000770   000015 236100                    LDQ     13,,PR0
         7 000771   000100 316007                    CANQ    64,DL
         7 000772   001002 600000 7                  TZE     s:6227

      731     6207    4             DO;

      732     6208    4             IF RECOVERING ~= 0 THEN

   6208  7 000773   200006 473500                    LDP3    @RECOVERING,,AUTO
         7 000774   300000 235100                    LDA     0,,PR3
PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:124  
         7 000775   001042 601000 7                  TNZ     AFILE02

      733     6209    4              GOTO AFILE02;
      734     6210
      735     6211    4             CALL FOI$SNAP (%S$BADGLC,F_FO,M_F);

   6211  7 000776   000032 630400 8                  EPPR0   26
         7 000777   000021 631400 xsym               EPPR1   B_VECTNIL+17
         7 001000   000000 701000 xent               TSX1    FOI$SNAP
         7 001001   000000 011000                    NOP     0

      736     6212        /*S* SCREECH_CODE: FOF-S$BADGLC
      737     6213             TYPE:         SNAP
      738     6214             MESSAGE:      COMMODE chunk added to ended file
      739     6215             REMARKS:      This SCREECH occurs when OUTSYM receives an
      740     6216                           ADD for a file, wherein the file being added
      741     6217                           is allegedly a chunk of a commode file (not the
      742     6218                           first chunk), and the existing entry for the
      743     6219                           file says that the last chunk has already
      744     6220                           arrived.  This means that the output COOP, or
      745     6221                           OUTSYM, is very confused about the file.  */
      746     6222    4             END;

      747     6223
      748     6224                                      /* If the file is/was on a device and
      749     6225                                         we quit to abort, delete it and
      750     6226                                         altret */
      751     6227    3           IF FIL$->FO$FIL.CDEV$ ~= ADDR(NIL) THEN

   6227  7 001002   000000 470400 xsym               LDP0    FO_FIL$
         7 001003   000011 236100                    LDQ     9,,PR0
         7 001004   000001 116000 xsym               CMPQ    B_VECTNIL+1
         7 001005   001016 600000 7                  TZE     s:6238

      752     6228    4             DO;

      753     6229    4             IF FIL$->FO$FIL.CDEV$->FO$DEV.FLG.QUIT
PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:125  

   6229  7 001006   000011 471500                    LDP1    9,,PR0
         7 001007   100012 236100                    LDQ     10,,PR1
         7 001010   000040 316007                    CANQ    32,DL
         7 001011   001016 600000 7                  TZE     s:6238
         7 001012   100013 236100                    LDQ     11,,PR1
         7 001013   000777 376007                    ANQ     511,DL
         7 001014   000002 116007                    CMPQ    2,DL
         7 001015   001042 600000 7                  TZE     AFILE02

      754     6230    4             AND FIL$->FO$FIL.CDEV$->FO$DEV.QUITRSN = FOQR_CHAB# THEN
      755     6231    4              GOTO AFILE02;
      756     6232    4             END;

      757     6233
      758     6234                                      /* If it's a new file and the chunks are
      759     6235                                         out of sequence, or an old file and
      760     6236                                         this chunk is beyond the highest CNUM
      761     6237                                         we have trouble - SNAP */
      762     6238    3           IF (FILL = 0 AND FIL_CNUM ~= FIL$->FO$FIL.HICNUM+1)

   6238  7 001016   200037 235100                    LDA     FILL,,AUTO
         7 001017   001025 601000 7                  TNZ     s:6238+7
         7 001020   000016 236100                    LDQ     14,,PR0
         7 001021   000022 772000                    QRL     18
         7 001022   000001 036007                    ADLQ    1,DL
         7 001023   200025 116100                    CMPQ    FIL_CNUM,,AUTO
         7 001024   001033 601000 7                  TNZ     s:6241
         7 001025   000000 115003                    CMPA    0,DU
         7 001026   001124 600000 7                  TZE     s:6280
         7 001027   000016 236100                    LDQ     14,,PR0
         7 001030   000022 772000                    QRL     18
         7 001031   200025 116100                    CMPQ    FIL_CNUM,,AUTO
         7 001032   001124 603000 7                  TRC     s:6280

      763     6239    3           OR (FILL ~= 0 AND FIL_CNUM > FIL$->FO$FIL.HICNUM) THEN
      764     6240    4             DO;
PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:126  

      765     6241    4             IF RECOVERING = 0 THEN

   6241  7 001033   200006 471500                    LDP1    @RECOVERING,,AUTO
         7 001034   100000 235100                    LDA     0,,PR1
         7 001035   001042 601000 7                  TNZ     AFILE02

      766     6242    4              CALL FOI$SNAP (%S$BADCNUM,F_FO,M_F);

   6242  7 001036   000036 630400 8                  EPPR0   30
         7 001037   000021 631400 xsym               EPPR1   B_VECTNIL+17
         7 001040   000000 701000 xent               TSX1    FOI$SNAP
         7 001041   000000 011000                    NOP     0

   6241  7 001042                       AFILE02      null
      767     6243        /*S* SCREECH_CODE: FOF-S$BADCNUM
      768     6244             TYPE:         SNAP
      769     6245             MESSAGE:      OUTSYM received bad commode file segment
      770     6246             REMARKS:      This SCREECH occurs when OUTSYM is handed
      771     6247                           a segment of a commode file such that the
      772     6248                           CNUM (chunk/segment number) is out of order,
      773     6249                           or illegal.  This
      774     6250                           suggests that either OUTSYM or the output
      775     6251                           COOP is very confused. */
      776     6252    4   AFILE02:  ;
      777     6253    4             IF RECOVERING = 1 THEN

   6253  7 001042   200006 470500                    LDP0    @RECOVERING,,AUTO
         7 001043   000000 235100                    LDA     0,,PR0
         7 001044   000001 115007                    CMPA    1,DL
         7 001045   001051 601000 7                  TNZ     AFILE03

      778     6254    4              CALL M$CLOSE (CLOSE_FILE1);

   6254  7 001046   000000 630400 6                  EPPR0   CLOSE_FILE1
         7 001047   050001 713400                    CLIMB   close
         7 001050   406000 401760                    pmme    nvectors=13
PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:127  

   6253  7 001051                       AFILE03      null
      779     6255    4   AFILE03:  ;
      780     6256    4             CALL M$OPEN (DELETE_FILE1) ALTRET(ALTRT);

   6256  7 001051   000164 630400 6                  EPPR0   DELETE_FILE1
         7 001052   450000 713400                    CLIMB   alt,open
         7 001053   410400 401760                    pmme    nvectors=18
         7 001054   001055 702000 7                  TSX2    ALTRT

   6253  7 001055                       ALTRT        null
      781     6257    4   ALTRT:    ;
      782     6258    4             ALTRETURN;

   6258  7 001055   200044 221300                    LDX1  ! EXPPRIO+2,,AUTO
         7 001056   000000 702211                    TSX2  ! 0,X1

   6253  7 001057                       AFILE04      null
      783     6259    4   AFILE04:  ;
      784     6260                                /* ON ADD OF COMMODE CHUNK, IF FILE IS
      785     6261                                   NOT THERE, THEN THIS MAY BE BECAUSE
      786     6262                                   A PROBLEM (E.G. NO EXTENT FRAMES)
      787     6263                                   CAUSED US TO REMOVE THE FILE.  IN THAT
      788     6264                                   CASE IT SHOULD NOT BE DELETED.  */
      789     6265
      790     6266                                /* IF THE CNUM=0 SEGMENT IS THERE,
      791     6267                                   THEN DON'T DELETE THIS ONE. */
      792     6268    4             IF RECOVERING = 1 THEN

   6268  7 001057   200006 470500                    LDP0    @RECOVERING,,AUTO
         7 001060   000000 235100                    LDA     0,,PR0
         7 001061   000001 115007                    CMPA    1,DL
         7 001062   001066 601000 7                  TNZ     s:6270

      793     6269    4              CALL M$CLOSE (CLOSE_FILE1);

   6269  7 001063   000000 630400 6                  EPPR0   CLOSE_FILE1
PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:128  
         7 001064   050001 713400                    CLIMB   close
         7 001065   406000 401760                    pmme    nvectors=13

      794     6270    4             CALL BINCHAR(FO_FILENAME.CNUM,0);

   6270  7 001066   000000 235003                    LDA     0,DU
         7 001067   000044 773000                    LRL     36
         7 001070   200070 757100                    STAQ    I+1,,AUTO
         7 001071   000000 301500                    BTD
         7 001072   200070 000010                    NDSC9   I+1,,AUTO                cn=0,s=lsgnf,sf=0,n=8
         7 001073   000004 030003 xsym               NDSC9   FO_FILENAME+4            cn=0,s=nosgn,sf=0,n=3

      795     6271    4             CALL M$OPEN (OPEN_FILE1) ALTRET(AFILE05);

   6271  7 001074   000500 630400 6                  EPPR0   OPEN_FILE1
         7 001075   450000 713400                    CLIMB   alt,open
         7 001076   410400 401760                    pmme    nvectors=18
         7 001077   001105 702000 7                  TSX2    AFILE05

      796     6272    4             CALL M$CLOSE (CLOSE_FILE1);

   6272  7 001100   000000 630400 6                  EPPR0   CLOSE_FILE1
         7 001101   050001 713400                    CLIMB   close
         7 001102   406000 401760                    pmme    nvectors=13

      797     6273    4             ALTRETURN;

   6273  7 001103   200044 221300                    LDX1  ! EXPPRIO+2,,AUTO
         7 001104   000000 702211                    TSX2  ! 0,X1

   6270  7 001105                       AFILE05      null
      798     6274    4   AFILE05:  ;
      799     6275    4             IF B$ERRCODE ~= %E$NOFILE THEN ALTRETURN;

   6275  7 001105   000000 470400 xsym               LDP0    B$TCB$
         7 001106   000000 471500                    LDP1    0,,PR0
         7 001107   100102 236100                    LDQ     66,,PR1
PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:129  
         7 001110   377770 376007                    ANQ     131064,DL
         7 001111   001610 116007                    CMPQ    904,DL
         7 001112   001115 600000 7                  TZE     s:6276

   6275  7 001113   200044 221300                    LDX1  ! EXPPRIO+2,,AUTO
         7 001114   000000 702211                    TSX2  ! 0,X1

      800     6276    4             CALL BINCHAR(FO_FILENAME.CNUM,FIL_CNUM);

   6276  7 001115   200025 235100                    LDA     FIL_CNUM,,AUTO
         7 001116   000044 773000                    LRL     36
         7 001117   200070 757100                    STAQ    I+1,,AUTO
         7 001120   000000 301500                    BTD
         7 001121   200070 000010                    NDSC9   I+1,,AUTO                cn=0,s=lsgnf,sf=0,n=8
         7 001122   000004 030003 xsym               NDSC9   FO_FILENAME+4            cn=0,s=nosgn,sf=0,n=3

      801     6277    4             GOTO AFILE03;

   6277  7 001123   001051 710000 7                  TRA     AFILE03

      802     6278    4             END;
      803     6279
      804     6280    3           IF FILL = 0 THEN

   6280  7 001124   000000 115003                    CMPA    0,DU
         7 001125   001131 601000 7                  TNZ     s:6283

      805     6281    3            FIL$->FO$FIL.HICNUM = FIL$->FO$FIL.HICNUM + 1;

   6281  7 001126   000016 220100                    LDX0    14,,PR0
         7 001127   000001 621010                    EAX1    1,X0
         7 001130   000016 741100                    STX1    14,,PR0

      806     6282
      807     6283    3           IF RECOVERING = 0 THEN CALL M$OPEN (OPEN_FILE1) ALTRET(AFILE1);

   6283  7 001131   200006 471500                    LDP1    @RECOVERING,,AUTO
PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:130  
         7 001132   100000 235100                    LDA     0,,PR1
         7 001133   001140 601000 7                  TNZ     s:6284

   6283  7 001134   000500 630400 6                  EPPR0   OPEN_FILE1
         7 001135   450000 713400                    CLIMB   alt,open
         7 001136   410400 401760                    pmme    nvectors=18
         7 001137   000732 702000 7                  TSX2    AFILE1

      808     6284    3           FIT$ = PINCRW(ADDR(FO_FITBUF1),SIZEW(FM$GRAN));

   6284  7 001140   000013 236000 8                  LDQ     11
         7 001141   200015 756100                    STQ     FIT$,,AUTO

      809     6285    3           CALL M$CLOSE (CLOSE_FILE1);

   6285  7 001142   000000 630400 6                  EPPR0   CLOSE_FILE1
         7 001143   050001 713400                    CLIMB   close
         7 001144   406000 401760                    pmme    nvectors=13

      810     6286
      811     6287    3           IF FILL = 0 THEN

   6287  7 001145   200037 235100                    LDA     FILL,,AUTO
         7 001146   001211 601000 7                  TNZ     s:6299

      812     6288    4             DO;

      813     6289    4             P$ = FIT$;

   6289  7 001147   200015 236100                    LDQ     FIT$,,AUTO
         7 001150   200017 756100                    STQ     P$,,AUTO

      814     6290    4             CALL XSF$LOCCODP(P$,16) ALTRET (AFILE29);

   6290  7 001151   000015 236000 8                  LDQ     13
         7 001152   200071 756100                    STQ     I+2,,AUTO
         7 001153   200017 630500                    EPPR0   P$,,AUTO
PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:131  
         7 001154   200070 450500                    STP0    I+1,,AUTO
         7 001155   200070 630500                    EPPR0   I+1,,AUTO
         7 001156   000020 631400 xsym               EPPR1   B_VECTNIL+16
         7 001157   000000 701000 xent               TSX1    XSF$LOCCODP
         7 001160   000745 702000 7                  TSX2    AFILE29

      815     6291    4             IF FIL$ -> FO$FIL.FLG.PAGES THEN

   6291  7 001161   000000 470400 xsym               LDP0    FO_FIL$
         7 001162   000015 236100                    LDQ     13,,PR0
         7 001163   000200 316007                    CANQ    128,DL
         7 001164   001177 600000 7                  TZE     s:6295

      816     6292    4              FIL$ -> FO$FIL.PAGES = P$ -> CODE16.PAGENO +

   6292  7 001165   200017 471500                    LDP1    P$,,AUTO
         7 001166   100007 236100                    LDQ     7,,PR1
         7 001167   000011 772000                    QRL     9
         7 001170   000777 376007                    ANQ     511,DL
         7 001171   200070 756100                    STQ     I+1,,AUTO
         7 001172   100005 236100                    LDQ     5,,PR1
         7 001173   000022 772000                    QRL     18
         7 001174   200070 036100                    ADLQ    I+1,,AUTO
         7 001175   000023 756100                    STQ     19,,PR0
         7 001176   001211 710000 7                  TRA     s:6299

      817     6293    4              P$ -> CODE16.BANNER_REPEATS;
      818     6294    4             ELSE
      819     6295    4              FIL$ -> FO$FIL.PAGES = P$ -> CODE16.RECNO +

   6295  7 001177   200017 471500                    LDP1    P$,,AUTO
         7 001200   100011 236100                    LDQ     9,,PR1
         7 001201   000022 772000                    QRL     18
         7 001202   200070 756100                    STQ     I+1,,AUTO
         7 001203   100007 236100                    LDQ     7,,PR1
         7 001204   000011 772000                    QRL     9
         7 001205   000777 376007                    ANQ     511,DL
PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:132  
         7 001206   200070 402100                    MPY     I+1,,AUTO
         7 001207   100004 036100                    ADLQ    4,,PR1
         7 001210   000023 756100                    STQ     19,,PR0

      820     6296    4              P$ -> CODE16.BANNER_REPEATS *
      821     6297    4              P$ -> CODE16.NBANNER_RECS;
      822     6298    4             END;

      823     6299    3           DEST$=FIT$;

   6299  7 001211   200015 236100                    LDQ     FIT$,,AUTO
         7 001212   200032 756100                    STQ     DEST$,,AUTO

      824     6300    3           CALL XSF$LOCCODP (DEST$,13) ALTRET(AFILE31);

   6300  7 001213   000021 236000 8                  LDQ     17
         7 001214   200071 756100                    STQ     I+2,,AUTO
         7 001215   200032 630500                    EPPR0   DEST$,,AUTO
         7 001216   200070 450500                    STP0    I+1,,AUTO
         7 001217   200070 630500                    EPPR0   I+1,,AUTO
         7 001220   000020 631400 xsym               EPPR1   B_VECTNIL+16
         7 001221   000000 701000 xent               TSX1    XSF$LOCCODP
         7 001222   000753 702000 7                  TSX2    AFILE31

      825     6301    3           IF FILL = 0 THEN

   6301  7 001223   200037 235100                    LDA     FILL,,AUTO
         7 001224   001237 601000 7                  TNZ     s:6310

      826     6302                                      /* Get info from FS$DEST */
      827     6303    4             DO;

      828     6304    4             CALL GET_DEST ALTRET (AFILE_BAD);

   6304  7 001225   001413 701000 7                  TSX1    GET_DEST
         7 001226   001310 702000 7                  TSX2    AFILE_BAD

PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:133  
      829     6305    4             IF FIL$->FO$FIL.FLG.GLC

   6305  7 001227   000000 470400 xsym               LDP0    FO_FIL$
         7 001230   000015 236100                    LDQ     13,,PR0
         7 001231   000100 316007                    CANQ    64,DL
         7 001232   001237 600000 7                  TZE     s:6310
         7 001233   002000 316007                    CANQ    1024,DL
         7 001234   001237 600000 7                  TZE     s:6310

      830     6306    4             AND FIL$->FO$FIL.FLG.CONCUR
      831     6307    4             THEN
      832     6308    4              FIL$->FO$FIL.FLG.CONCUR = '0'B;

   6308  7 001235   000041 236000 8                  LDQ     33
         7 001236   000015 356100                    ANSQ    13,,PR0

      833     6309    4             END;

      834     6310    3           IF FIL$->FO$FIL.PRIO ~= FOPR_SPILLED# THEN

   6310  7 001237   000000 470400 xsym               LDP0    FO_FIL$
         7 001240   000016 236100                    LDQ     14,,PR0
         7 001241   000777 376007                    ANQ     511,DL
         7 001242   000002 116007                    CMPQ    2,DL
         7 001243   001306 600000 7                  TZE     s:6338

      835     6311    4             DO;

      836     6312    4             CALL SET_LASTEXT;

   6312  7 001244   004655 701000 7                  TSX1    SET_LASTEXT
         7 001245   000000 011000                    NOP     0

      837     6313    4             OLDLEXT$=EXT$;

   6313  7 001246   200016 236100                    LDQ     EXT$,,AUTO
         7 001247   200027 756100                    STQ     OLDLEXT$,,AUTO
PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:134  

      838     6314    4             CALL GRAB_EXTS ALTRET(AFILE_BAD);

   6314  7 001250   001506 701000 7                  TSX1    GRAB_EXTS
         7 001251   001310 702000 7                  TSX2    AFILE_BAD

      839     6315                                                     /**/
      840     6316                                      /* If the chunk says print then send it,
      841     6317                                         If this is the last chunk of a con-
      842     6318                                         tinuous file then prio the file and
      843     6319                                         print it.  If the prio changed on a
      844     6320                                         MFW file, print what we have and treat
      845     6321                                         all subsequent chunks as continuous. */
      846     6322                                                     /**/
      847     6323    4             IF DEST$ -> FS$DEST.PRINT

   6323  7 001252   200032 470500                    LDP0    DEST$,,AUTO
         7 001253   000005 236100                    LDQ     5,,PR0
         7 001254   200000 316003                    CANQ    65536,DU
         7 001255   001262 601000 7                  TNZ     s:6327
         7 001256   000000 471400 xsym               LDP1    FO_FIL$
         7 001257   100015 236100                    LDQ     13,,PR1
         7 001260   000100 316007                    CANQ    64,DL
         7 001261   001271 600000 7                  TZE     s:6331

      848     6324    4             OR FIL$ -> FO$FIL.FLG.GLC
      849     6325    4             THEN
      850     6326    5               DO;

      851     6327    5               IF FIL$->FO$FIL.PRIO = FOPR_MFW# THEN

   6327  7 001262   000000 471400 xsym               LDP1    FO_FIL$
         7 001263   100016 236100                    LDQ     14,,PR1
         7 001264   000777 376007                    ANQ     511,DL
         7 001265   000001 116007                    CMPQ    1,DL
         7 001266   001271 601000 7                  TNZ     s:6331

PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:135  
      852     6328    5                CALL REPRIO_FILE;

   6328  7 001267   003524 701000 7                  TSX1    REPRIO_FILE
         7 001270   000000 011000                    NOP     0

      853     6329    5               END;

      854     6330                                      /* Check if we have the last chunk */
      855     6331    4             IF FIL$->FO$FIL.CDEV$ ~= ADDR(NIL) THEN

   6331  7 001271   000000 470400 xsym               LDP0    FO_FIL$
         7 001272   000011 236100                    LDQ     9,,PR0
         7 001273   000001 116000 xsym               CMPQ    B_VECTNIL+1
         7 001274   001306 600000 7                  TZE     s:6338

      856     6332    5               DO;

      857     6333    5               DEV$ = FIL$->FO$FIL.CDEV$;

   6333  7 001275   000000 756000 xsym               STQ     FO_DEV$

      858     6334    5               CALL FOD$EVENT (FODE_NXTCH#,OLDLEXT$);

   6334  7 001276   200027 631500                    EPPR1   OLDLEXT$,,AUTO
         7 001277   200071 451500                    STP1    I+2,,AUTO
         7 001300   000021 236000 8                  LDQ     17
         7 001301   200070 756100                    STQ     I+1,,AUTO
         7 001302   200070 630500                    EPPR0   I+1,,AUTO
         7 001303   000020 631400 xsym               EPPR1   B_VECTNIL+16
         7 001304   000000 701000 xent               TSX1    FOD$EVENT
         7 001305   000000 011000                    NOP     0

      859     6335    5               END;

      860     6336    4             END;

      861     6337
PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:136  
      862     6338    3           RETURN;

   6338  7 001306   200044 221300                    LDX1  ! EXPPRIO+2,,AUTO
         7 001307   000001 702211                    TSX2  ! 1,X1

   6338  7 001310                       AFILE_BAD    null
      863     6339    3           END;
      864     6340        %EJECT;
PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:137  
      865     6341
      866     6342        /*D* NAME:         AFILE_BAD
      867     6343             PURPOSE:      To handle errors encountered during an ADD
      868     6344             DESCRIPTION:  Each type of error results in a different
      869     6345                           action, the only common thing being the printing
      870     6346                           of an error message on the OC.  */
      871     6347
      872     6348    2   AFILE_BAD:;
      873     6349
      874     6350    3           DO CASE (FIL_BADC);

   6350  7 001310   200024 235100                    LDA     FIL_BADC,,AUTO
         7 001311   000015 115007                    CMPA    13,DL
         7 001312   001314 602005 7                  TNC     AFILE_BAD+4,AL
         7 001313   001411 710000 7                  TRA     s:6414
         7 001314   001345 710000 7                  TRA     s:6370
         7 001315   001331 710000 7                  TRA     s:6356
         7 001316   001370 710000 7                  TRA     s:6400
         7 001317   001351 710000 7                  TRA     s:6384
         7 001320   001370 710000 7                  TRA     s:6400
         7 001321   001370 710000 7                  TRA     s:6400
         7 001322   001370 710000 7                  TRA     s:6400
         7 001323   001370 710000 7                  TRA     s:6400
         7 001324   001370 710000 7                  TRA     s:6400
         7 001325   001370 710000 7                  TRA     s:6400
         7 001326   001411 710000 7                  TRA     s:6414
         7 001327   001346 710000 7                  TRA     NOFR
         7 001330   001370 710000 7                  TRA     s:6400

      875     6351
      876     6352
      877     6353                                /* CANNOT OPEN FILE */
      878     6354    3             CASE (FOFE_NOPN#);

      879     6355
      880     6356    3               OPMSG_FILBAD.ERRC=NOPNERR;

PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:138  
   6356  7 001331   200051 720100                    LXL0    NOPNERR,,AUTO
         7 001332   000057 440000 1                  SXL0    OPMSG_FILBAD+7

      881     6357    3               IF FIL_CNUM ~= 0 THEN

   6357  7 001333   200025 236100                    LDQ     FIL_CNUM,,AUTO
         7 001334   001341 600000 7                  TZE     AFILE_MSG

      882     6358    4                 DO;

      883     6359    4                 IF NOPNERR = %E$NOFILE THEN GOTO AFILE_CHAB;

   6359  7 001335   200051 235100                    LDA     NOPNERR,,AUTO
         7 001336   000161 115007                    CMPA    113,DL
         7 001337   001374 600000 7                  TZE     AFILE_CHAB

      884     6360    4                 GOTO AFILE_CHRM;

   6360  7 001340   001353 710000 7                  TRA     AFILE_CHRM

   6357  7 001341                       AFILE_MSG    null
      885     6361    4                 END;
      886     6362    3   AFILE_MSG:  ;
      887     6363    3               CALL BAD_FILE;

   6363  7 001341   003627 701000 7                  TSX1    BAD_FILE
         7 001342   000000 011000                    NOP     0

      888     6364    3               ALTRETURN;

   6364  7 001343   200044 221300                    LDX1  ! EXPPRIO+2,,AUTO
         7 001344   000000 702211                    TSX2  ! 0,X1

      889     6365
      890     6366
      891     6367                                /* NO FILE FRAMES AVAIL */
      892     6368    3             CASE (FOFE_NFFR#);
PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:139  

      893     6369
      894     6370    3               GOTO AFILE_MSG;

   6370  7 001345   001341 710000 7                  TRA     AFILE_MSG

      895     6371
      896     6372
      897     6373                                /* NO JOB FRAMES AVAIL */
      898     6374    3             CASE (FOFE_NJFR#);

   6357  7 001346                       NOFR         null
      899     6375
      900     6376    3   NOFR:       ;
      901     6377    3               CALL REM_FILE;

   6377  7 001346   004263 701000 7                  TSX1    REM_FILE
         7 001347   000000 011000                    NOP     0

      902     6378    3               GOTO AFILE_MSG;

   6378  7 001350   001341 710000 7                  TRA     AFILE_MSG

      903     6379
      904     6380
      905     6381                                /* NO EXTENT FRAMES AVAIL */
      906     6382    3             CASE (FOFE_NEFR#);

      907     6383
      908     6384    3               IF FIL_CNUM = 0 THEN GOTO NOFR;

   6384  7 001351   200025 236100                    LDQ     FIL_CNUM,,AUTO
         7 001352   001346 600000 7                  TZE     NOFR

   6384  7 001353                       AFILE_CHRM   null
      909     6385    3   AFILE_CHRM: ;
      910     6386    3               IF FIL$->FO$FIL.CDEV$ = ADDR(NIL) THEN CALL REM_FILE;
PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:140  

   6386  7 001353   000000 470400 xsym               LDP0    FO_FIL$
         7 001354   000011 236100                    LDQ     9,,PR0
         7 001355   000001 116000 xsym               CMPQ    B_VECTNIL+1
         7 001356   001362 601000 7                  TNZ     s:6389

   6386  7 001357   004263 701000 7                  TSX1    REM_FILE
         7 001360   000000 011000                    NOP     0
         7 001361   001367 710000 7                  TRA     s:6392

      911     6387    3               ELSE
      912     6388    4                 DO;

      913     6389    4                 DEV$ = FIL$->FO$FIL.CDEV$;

   6389  7 001362   000000 756000 xsym               STQ     FO_DEV$

      914     6390    4                 CALL FOD$EVENT (FODE_QUIT#,FOQR_CHRM#);

   6390  7 001363   000042 630400 8                  EPPR0   34
         7 001364   000020 631400 xsym               EPPR1   B_VECTNIL+16
         7 001365   000000 701000 xent               TSX1    FOD$EVENT
         7 001366   000000 011000                    NOP     0

      915     6391    4                 END;

      916     6392    3               GOTO AFILE_MSG;

   6392  7 001367   001341 710000 7                  TRA     AFILE_MSG

      917     6393
      918     6394
      919     6395                                /* FIT BLOTTO */
      920     6396    3             CASE (FOFE_PBAD#,FOFE_BFIT01#,FOFE_BFIT03#,

      921     6397    3               FOFE_BFIT04#,FOFE_BFIT13#,FOFE_ZGRN#,
      922     6398    3               FOFE_ZEXT#,FOFE_BEXT#);
PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:141  
      923     6399
      924     6400    3               FUCODE=FOFU_BFIL#;

   6400  7 001370   000002 236007                    LDQ     2,DL
         7 001371   200023 756100                    STQ     FUCODE,,AUTO

      925     6401    3               CALL UPD_FILE;

   6401  7 001372   003652 701000 7                  TSX1    UPD_FILE
         7 001373   000000 011000                    NOP     0

   6400  7 001374                       AFILE_CHAB   null
      926     6402    3   AFILE_CHAB: ;
      927     6403    3               IF FIL$->FO$FIL.CDEV$ = ADDR(NIL) THEN CALL DEL_FILE;

   6403  7 001374   000000 470400 xsym               LDP0    FO_FIL$
         7 001375   000011 236100                    LDQ     9,,PR0
         7 001376   000001 116000 xsym               CMPQ    B_VECTNIL+1
         7 001377   001403 601000 7                  TNZ     s:6406

   6403  7 001400   004203 701000 7                  TSX1    DEL_FILE
         7 001401   000000 011000                    NOP     0
         7 001402   001410 710000 7                  TRA     s:6409

      928     6404    3               ELSE
      929     6405    4                 DO;

      930     6406    4                 DEV$ = FIL$->FO$FIL.CDEV$;

   6406  7 001403   000000 756000 xsym               STQ     FO_DEV$

      931     6407    4                 CALL FOD$EVENT (FODE_QUIT#,FOQR_CHAB#);

   6407  7 001404   000044 630400 8                  EPPR0   36
         7 001405   000020 631400 xsym               EPPR1   B_VECTNIL+16
         7 001406   000000 701000 xent               TSX1    FOD$EVENT
         7 001407   000000 011000                    NOP     0
PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:142  

      932     6408    4                 END;

      933     6409    3               GOTO AFILE_MSG;

   6409  7 001410   001341 710000 7                  TRA     AFILE_MSG

      934     6410
      935     6411
      936     6412    3             CASE (ELSE);

      937     6413
      938     6414    3               ALTRETURN;

   6414  7 001411   200044 221300                    LDX1  ! EXPPRIO+2,,AUTO
         7 001412   000000 702211                    TSX2  ! 0,X1

      939     6415    3           END;

      940     6416        %EJECT;
PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:143  
      941     6417
      942     6418        /*D* NAME:         GET_DEST
      943     6419             PURPOSE:      To extract information from FS$DEST in the FIT
      944     6420             DESCRIPTION:  This routine expects DEST$ to point to
      945     6421                           CODE13 (FS$DEST) in the FIT.  It extracts
      946     6422                           from it the information that is obtained regardless
      947     6423                           of whether this is the first chunk or not.  It
      948     6424                           returns with DEST$ pointing to CODE13 so that the
      949     6425                           caller can extract more stuff if desired.
      950     6426                           The routine ALTRETs
      951     6427                           if the OUTSYMF.BAD flag is set in FS$DEST.  */
      952     6428    2   GET_DEST: PROC ALTRET;

   6428  7 001413   200054 741300       GET_DEST     STX1  ! STAMP+1,,AUTO

      953     6429
      954     6430    3         IF DEST$->FS$DEST.COPIES ~= 0 THEN

   6430  7 001414   200032 470500                    LDP0    DEST$,,AUTO
         7 001415   000005 236100                    LDQ     5,,PR0
         7 001416   000777 316003                    CANQ    511,DU
         7 001417   001424 600000 7                  TZE     s:6434

      955     6431    3          FIL$->FO$FIL.COPIES=DEST$->FS$DEST.COPIES;

   6431  7 001420   000005 220100                    LDX0    5,,PR0
         7 001421   000777 360003                    ANX0    511,DU
         7 001422   000000 471400 xsym               LDP1    FO_FIL$
         7 001423   100007 440100                    SXL0    7,,PR1

      956     6432                                      /* If not continued, we have the last
      957     6433                                         chunk */
      958     6434    3         FIL$->FO$FIL.FLG.GLC = ~ DEST$->FS$DEST.CONTINUED;

   6434  7 001424   200032 470500                    LDP0    DEST$,,AUTO
         7 001425   000005 236100                    LDQ     5,,PR0
         7 001426   400000 376003                    ANQ     -131072,DU
PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:144  
         7 001427   400000 676003                    ERQ     -131072,DU
         7 001430   000000 471400 xsym               LDP1    FO_FIL$
         7 001431   000035 772000                    QRL     29
         7 001432   100015 676100                    ERQ     13,,PR1
         7 001433   000100 376007                    ANQ     64,DL
         7 001434   100015 656100                    ERSQ    13,,PR1

      959     6435    3         IF FIL_CNUM = 0 OR DEST$->FS$DEST.PRINT = '1'B THEN

   6435  7 001435   200025 235100                    LDA     FIL_CNUM,,AUTO
         7 001436   001443 600000 7                  TZE     s:6436
         7 001437   200032 470500                    LDP0    DEST$,,AUTO
         7 001440   000005 236100                    LDQ     5,,PR0
         7 001441   200000 316003                    CANQ    65536,DU
         7 001442   001451 600000 7                  TZE     s:6437

      960     6436    3          FIL$->FO$FIL.FLG.CRASHED=DEST$->FS$DEST.CRASHED;

   6436  7 001443   200032 470500                    LDP0    DEST$,,AUTO
         7 001444   000005 236100                    LDQ     5,,PR0
         7 001445   000037 772000                    QRL     31
         7 001446   100015 676100                    ERQ     13,,PR1
         7 001447   000002 376007                    ANQ     2,DL
         7 001450   100015 656100                    ERSQ    13,,PR1

      961     6437    3         IF  NOT (FIL_CNUM ~= 0

   6437  7 001451   000000 115003                    CMPA    0,DU
         7 001452   001464 600000 7                  TZE     s:6443
         7 001453   200032 470500                    LDP0    DEST$,,AUTO
         7 001454   000005 236100                    LDQ     5,,PR0
         7 001455   100000 316003                    CANQ    32768,DU
         7 001456   001464 600000 7                  TZE     s:6443
         7 001457   777000 316007                    CANQ    -512,DL
         7 001460   001464 601000 7                  TNZ     s:6443
         7 001461   100011 236100                    LDQ     9,,PR1
         7 001462   000001 116000 xsym               CMPQ    B_VECTNIL+1
PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:145  
         7 001463   001475 601000 7                  TNZ     s:6446

      962     6438    3         AND DEST$->FS$DEST.SAP
      963     6439    3         AND DEST$->FS$DEST.SAPCOPIES = 0
      964     6440    3         AND FIL$->FO$FIL.CDEV$ ~= ADDR(NIL)) THEN
      965     6441    4           DO;

      966     6442                                      /* DO if we havn't printed anything */
      967     6443    4           FIL$->FO$FIL.FLG.SAP = DEST$->FS$DEST.SAP;

   6443  7 001464   200032 470500                    LDP0    DEST$,,AUTO
         7 001465   000005 236100                    LDQ     5,,PR0
         7 001466   000034 772000                    QRL     28
         7 001467   100015 676100                    ERQ     13,,PR1
         7 001470   000040 376007                    ANQ     32,DL
         7 001471   100015 656100                    ERSQ    13,,PR1

      968     6444    4           FIL$->FO$FIL.SAPCOPIES=DEST$->FS$DEST.SAPCOPIES;

   6444  7 001472   200032 470500                    LDP0    DEST$,,AUTO
         7 001473   000005 236100                    LDQ     5,,PR0
         7 001474   100016 552110                    STBQ    14,'10'O,PR1

      969     6445    4           END;

      970     6446    3         IF NOT DEST$->FS$DEST.OUTSYMF.BAD THEN RETURN;

   6446  7 001475   200032 470500                    LDP0    DEST$,,AUTO
         7 001476   000012 234100                    SZN     10,,PR0
         7 001477   001502 604000 7                  TMI     s:6447

   6446  7 001500   200054 221300                    LDX1  ! STAMP+1,,AUTO
         7 001501   000001 702211                    TSX2  ! 1,X1

      971     6447    3         FIL_BADC=FOFE_PBAD#;

   6447  7 001502   000006 236007                    LDQ     6,DL
PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:146  
         7 001503   200024 756100                    STQ     FIL_BADC,,AUTO

      972     6448    3         ALTRETURN;

   6448  7 001504   200054 221300                    LDX1  ! STAMP+1,,AUTO
         7 001505   000000 702211                    TSX2  ! 0,X1

      973     6449    3   END GET_DEST;
      974     6450
      975     6451
      976     6452
      977     6453        /*D* NAME:         GRAB_EXTS
      978     6454             PURPOSE:      To formulate the extent list for a file
      979     6455             DESCRIPTION:  The extent list is built from the extent infor-
      980     6456                           mation in CODE01 in the FIT.
      981     6457                           If this info is not there, or blotto, the routine
      982     6458                           ALTRETs, as is the case if sufficient extent frames
      983     6459                           cannot be obtained.  */
      984     6460
      985     6461    2   GRAB_EXTS: PROC ALTRET;

   6461  7 001506   200054 741300       GRAB_EXTS    STX1  ! STAMP+1,,AUTO

      986     6462
      987     6463
      988     6464    3         P$=FIT$;

   6464  7 001507   200015 236100                    LDQ     FIT$,,AUTO
         7 001510   200017 756100                    STQ     P$,,AUTO

      989     6465    3         CALL XSF$LOCCODP(P$,3) ALTRET(GEXT1);

   6465  7 001511   000046 236000 8                  LDQ     38
         7 001512   200071 756100                    STQ     I+2,,AUTO
         7 001513   200017 630500                    EPPR0   P$,,AUTO
         7 001514   200070 450500                    STP0    I+1,,AUTO
         7 001515   200070 630500                    EPPR0   I+1,,AUTO
PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:147  
         7 001516   000020 631400 xsym               EPPR1   B_VECTNIL+16
         7 001517   000000 701000 xent               TSX1    XSF$LOCCODP
         7 001520   001647 702000 7                  TSX2    GEXT1

      990     6466                                      /* Get number of granules used */
      991     6467    3         UGRANS=P$->CODE03.UGRANS;               /* # GRANS IN FILE */

   6467  7 001521   200017 470500                    LDP0    P$,,AUTO
         7 001522   000000 236100                    LDQ     0,,PR0
         7 001523   000032 376000 xsym               ANQ     B_VECTNIL+26
         7 001524   200013 756100                    STQ     UGRANS,,AUTO

      992     6468    3         IF UGRANS=0 THEN GOTO GEXT2;

   6468  7 001525   001653 600000 7                  TZE     GEXT2

      993     6469    3         P$=FIT$;

   6469  7 001526   200015 236100                    LDQ     FIT$,,AUTO
         7 001527   200017 756100                    STQ     P$,,AUTO

      994     6470    3         FIT_SECT_INDEX = 1;

   6470  7 001530   000001 235007                    LDA     1,DL
         7 001531   000000 755000 1                  STA     FIT_SECT_INDEX

      995     6471    3         CALL XSF$LOCCODE(P$, FIT_SECT_INDEX) ALTRET (GEXT5);

   6471  7 001532   000047 236000 8                  LDQ     39
         7 001533   200071 756100                    STQ     I+2,,AUTO
         7 001534   200017 630500                    EPPR0   P$,,AUTO
         7 001535   200070 450500                    STP0    I+1,,AUTO
         7 001536   200070 630500                    EPPR0   I+1,,AUTO
         7 001537   000020 631400 xsym               EPPR1   B_VECTNIL+16
         7 001540   000000 701000 xent               TSX1    XSF$LOCCODE
         7 001541   001663 702000 7                  TSX2    GEXT5

PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:148  
      996     6472    3         EXTENT_WORDS = FIT$ -> FM$FIT.CODES.NDW (FIT_SECT_INDEX);

   6472  7 001542   200015 470500                    LDP0    FIT$,,AUTO
         7 001543   000000 720000 1                  LXL0    FIT_SECT_INDEX
         7 001544   000000 236110                    LDQ     0,X0,PR0
         7 001545   000012 772000                    QRL     10
         7 001546   001777 376007                    ANQ     1023,DL
         7 001547   000001 756000 1                  STQ     EXTENT_WORDS

      997     6473    3         PREVEXT$=ADDR(FIL$->FO$FIL.EXT$);

   6473  7 001550   000000 236000 xsym               LDQ     FO_FIL$
         7 001551   000002 036003                    ADLQ    2,DU
         7 001552   200014 756100                    STQ     PREVEXT$,,AUTO

      998     6474    3         CALL SET_LASTEXT ALTRET(GEXT000);

   6474  7 001553   004655 701000 7                  TSX1    SET_LASTEXT
         7 001554   001557 702000 7                  TSX2    GEXT000

      999     6475    3         PREVEXT$=EXT$;

   6475  7 001555   200016 236100                    LDQ     EXT$,,AUTO
         7 001556   200014 756100                    STQ     PREVEXT$,,AUTO

   6475  7 001557                       GEXT000      null
     1000     6476    3   GEXT000:;
     1001     6477
     1002     6478    3         STAMP.HASH=P$->CODE01.HASH;

   6478  7 001557   200017 470500                    LDP0    P$,,AUTO
         7 001560   000000 236100                    LDQ     0,,PR0
         7 001561   000011 736000                    QLS     9
         7 001562   200053 552170                    STBQ    STAMP,'70'O,AUTO

     1003     6479    3         STAMP.FRDAD=0;

PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:149  
   6479  7 001563   000000 236003                    LDQ     0,DU
         7 001564   200053 552104                    STBQ    STAMP,'04'O,AUTO

     1004     6480                                                       /* PICK UP ALL EXTENTS IN FILE */
     1005     6481    3         TGRANS=0;

   6481  7 001565   200045 450100                    STZ     TGRANS,,AUTO

     1006     6482                                                     /**/
     1007     6483                                      /* EXTENT_WORDS comes from the 10 bit
     1008     6484                                         NDW field of the 1st section header.
     1009     6485                                         This section header also has an off-
     1010     6486                                         set to the beginning of the extent
     1011     6487                                         words (Five must be added to this
     1012     6488                                         offset to account to the granule
     1013     6489                                         header). Subtract 2 because we start
     1014     6490                                         at 0, and because the first word at
     1015     6491                                         the offset contains a 9 bit count
     1016     6492                                         (same as NDW except it tends to
     1017     6493                                         overflow). */
     1018     6494                                                     /**/
     1019     6495    4           DO IR = 0 TO EXTENT_WORDS - 2;

   6495  7 001566   200010 450100                    STZ     I,,AUTO
         7 001567   001631 710000 7                  TRA     s:6525+1

     1020     6496                                      /* 3 bytes are reserved for size */
     1021     6497    4           NUM=P$->CODE01.XTNT.XTNSIZE(I);

   6497  7 001570   200017 470500                    LDP0    P$,,AUTO
         7 001571   200010 720100                    LXL0    I,,AUTO
         7 001572   000001 236110                    LDQ     1,X0,PR0
         7 001573   000033 772000                    QRL     27
         7 001574   200011 756100                    STQ     NUM,,AUTO

     1022     6498    4           DAD=P$->CODE01.XTNT.XTNSDA(I);

PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:150  
   6498  7 001575   000001 236110                    LDQ     1,X0,PR0
         7 001576   000032 376000 xsym               ANQ     B_VECTNIL+26
         7 001577   200052 756100                    STQ     DAD,,AUTO

     1023     6499                                      /* If size is > 511, then size will be
     1024     6500                                         found in the 2nd word */
     1025     6501    4           IF NUM = 0 THEN

   6501  7 001600   200011 235100                    LDA     NUM,,AUTO
         7 001601   001607 601000 7                  TNZ     s:6508

     1026     6502    5             DO;

     1027     6503    5             NUM=P$->CODE01.EXTNT.XTNSIZE(I);

   6503  7 001602   000002 235110                    LDA     2,X0,PR0
         7 001603   200011 755100                    STA     NUM,,AUTO

     1028     6504    5             I=I+1;

   6504  7 001604   200010 235100                    LDA     I,,AUTO
         7 001605   000001 035007                    ADLA    1,DL
         7 001606   200010 755100                    STA     I,,AUTO

     1029     6505    5             END;

     1030     6506                                      /* If an extent is partially filled,
     1031     6507                                         only get the filled part */
     1032     6508    4           IF UGRANS < NUM THEN

   6508  7 001607   200013 236100                    LDQ     UGRANS,,AUTO
         7 001610   200011 116100                    CMPQ    NUM,,AUTO
         7 001611   001613 603000 7                  TRC     s:6512

     1033     6509    4            NUM = UGRANS;

   6509  7 001612   200011 756100                    STQ     NUM,,AUTO
PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:151  

     1034     6510                                      /* Subtract size of 1st extent from
     1035     6511                                         num of occupied granules */
     1036     6512    4           UGRANS=UGRANS-NUM;     /* THE LAST EXTENT(S) MAY NOT BE ALL

   6512  7 001613   200011 136100                    SBLQ    NUM,,AUTO
         7 001614   200013 756100                    STQ     UGRANS,,AUTO

     1037     6513                                        USED, HENCE WE MUST KEEP TRACK
     1038     6514                                        OF HOW MANY GRANS WE FIND AS COM-
     1039     6515                                        PARED TO UGRANS, AND ADJUST THE
     1040     6516                                        LAST EXTENT(S) ACCORDINGLY. */
     1041     6517                                      /* If extent size > 0, then tally the
     1042     6518                                         extent sizes and add (max size 511)
     1043     6519                                         extent(s) to extent list */
     1044     6520    4           IF NUM ~= 0 THEN

   6520  7 001615   200011 235100                    LDA     NUM,,AUTO
         7 001616   001630 600000 7                  TZE     s:6525

     1045     6521    5             DO;

     1046     6522    5             TGRANS=TGRANS+NUM;

   6522  7 001617   200045 236100                    LDQ     TGRANS,,AUTO
         7 001620   200011 036100                    ADLQ    NUM,,AUTO
         7 001621   200045 756100                    STQ     TGRANS,,AUTO

     1047     6523    5             CALL ADD_EXT (NUM,DAD) ALTRET(ALTRT);

   6523  7 001622   200052 631500                    EPPR1   DAD,,AUTO
         7 001623   200060 451500                    STP1    KIN#+1,,AUTO
         7 001624   200011 633500                    EPPR3   NUM,,AUTO
         7 001625   200057 453500                    STP3    ESUBC2+1,,AUTO
         7 001626   001667 701000 7                  TSX1    ADD_EXT
         7 001627   001651 702000 7                  TSX2    ALTRT

PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:152  
     1048     6524    5             END;

     1049     6525    4           END;

   6525  7 001630   200010 054100                    AOS     I,,AUTO
         7 001631   000001 236000 1                  LDQ     EXTENT_WORDS
         7 001632   000002 136007                    SBLQ    2,DL
         7 001633   200010 116100                    CMPQ    I,,AUTO
         7 001634   001570 605000 7                  TPL     s:6497

     1050     6526        /*
     1051     6527              TGRANS WILL BE ZERO IF THERE WERE NO EXTENTS, OR IF THE
     1052     6528              SIZE OF ALL OF 'EM WAS ZERO (WE DON'T TRUST ANYBODY)
     1053     6529        */
     1054     6530    3         IF TGRANS = 0 THEN

   6530  7 001635   200045 235100                    LDA     TGRANS,,AUTO
         7 001636   001657 600000 7                  TZE     GEXT4

     1055     6531    3          GOTO GEXT4;
     1056     6532                                      /* Assign the num of granules used */
     1057     6533    3         FIL$->FO$FIL.GRANS = FIL$->FO$FIL.GRANS + TGRANS;

   6533  7 001637   000000 470400 xsym               LDP0    FO_FIL$
         7 001640   000015 236100                    LDQ     13,,PR0
         7 001641   000022 772000                    QRL     18
         7 001642   200045 036100                    ADLQ    TGRANS,,AUTO
         7 001643   000000 620006                    EAX0    0,QL
         7 001644   000015 740100                    STX0    13,,PR0

     1058     6534    3         RETURN;

   6534  7 001645   200054 221300                    LDX1  ! STAMP+1,,AUTO
         7 001646   000001 702211                    TSX2  ! 1,X1

     1059     6535
     1060     6536        %EJECT;
PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:153  
     1061     6537        /**
     1062     6538         ** ERR EXITS
     1063     6539         **/
     1064     6540    3   GEXT1:
     1065     6541    3         FIL_BADC          = FOFE_BFIT03#;

   6541  7 001647   000010 235007       GEXT1        LDA     8,DL
         7 001650   200024 755100                    STA     FIL_BADC,,AUTO

   6533  7 001651                       ALTRT        null
     1066     6542    3   ALTRT:;
     1067     6543    3         ALTRETURN;

   6543  7 001651   200054 221300                    LDX1  ! STAMP+1,,AUTO
         7 001652   000000 702211                    TSX2  ! 0,X1

     1068     6544    3   GEXT2:
     1069     6545    3         FIL_BADC          = FOFE_ZGRN#;

   6545  7 001653   000004 235007       GEXT2        LDA     4,DL
         7 001654   200024 755100                    STA     FIL_BADC,,AUTO

     1070     6546    3         ALTRETURN;

   6546  7 001655   200054 221300                    LDX1  ! STAMP+1,,AUTO
         7 001656   000000 702211                    TSX2  ! 0,X1

     1071     6547    3   GEXT4:
     1072     6548    3         FIL_BADC          = FOFE_ZEXT#;

   6548  7 001657   000005 235007       GEXT4        LDA     5,DL
         7 001660   200024 755100                    STA     FIL_BADC,,AUTO

     1073     6549    3         ALTRETURN;

   6549  7 001661   200054 221300                    LDX1  ! STAMP+1,,AUTO
         7 001662   000000 702211                    TSX2  ! 0,X1
PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:154  

   6533  7 001663                       GEXT5        null
     1074     6550    3   GEXT5:;
     1075     6551    3         FIL_BADC          = FOFE_BFIT01#;

   6551  7 001663   000011 235007                    LDA     9,DL
         7 001664   200024 755100                    STA     FIL_BADC,,AUTO

     1076     6552    3         ALTRETURN;

   6552  7 001665   200054 221300                    LDX1  ! STAMP+1,,AUTO
         7 001666   000000 702211                    TSX2  ! 0,X1

     1077     6553
     1078     6554        %EJECT;
PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:155  
     1079     6555        /* SUBROUTINE TO ADD IN AN EXTENT FROM THE FIT.
     1080     6556
     1081     6557            MOOS CAN ONLY HANDLE EXTENTS UP TO 511 GRANULES IN LENGTH,
     1082     6558            SO WHENEVER WE ENCOUNTER A BIG EXTENT, WE MAKE MANY EXTENT
     1083     6559            ENTRIES FOR IT.   */
     1084     6560
     1085     6561    3   ADD_EXT: PROC (NGRAN,DAD) ALTRET;

   6561  7 001667   200056 741300       ADD_EXT      STX1  ! NFILF+1,,AUTO

     1086     6562
     1087     6563    4   DCL NGRAN UBIN;
     1088     6564    4   DCL DAD UBIN;
     1089     6565    4   DCL I UBIN;
     1090     6566    4   DCL CDAD UBIN;
     1091     6567    4   DCL CGRAN UBIN;
     1092     6568    4   DCL BADCNT UBIN;
     1093     6569
     1094     6570    4         BADCNT=0;

   6570  7 001670   200064 450100                    STZ     BADCNT,,AUTO

     1095     6571    4         CDAD=DAD;

   6571  7 001671   200060 470500                    LDP0    @DAD,,AUTO
         7 001672   000000 235100                    LDA     0,,PR0
         7 001673   200062 755100                    STA     CDAD,,AUTO

     1096     6572    4         CGRAN=NGRAN;

   6572  7 001674   200057 471500                    LDP1    @NGRAN,,AUTO
         7 001675   100000 235100                    LDA     0,,PR1
         7 001676   200063 755100                    STA     CGRAN,,AUTO

     1097     6573    5           DO WHILE (CGRAN ~= 0);

   6573  7 001677   002000 600000 7                  TZE     s:6597
PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:156  

     1098     6574    5           I=CGRAN;

   6574  7 001700   200063 235100                    LDA     CGRAN,,AUTO
         7 001701   200061 755100                    STA     I,,AUTO

     1099     6575    5           IF CGRAN>511 THEN I=511;

   6575  7 001702   001000 115007                    CMPA    512,DL
         7 001703   001706 602000 7                  TNC     s:6576

   6575  7 001704   000777 236007                    LDQ     511,DL
         7 001705   200061 756100                    STQ     I,,AUTO

     1100     6576    5           CALL FOI$GBUF (FO_EXTSCB,EXT$) ALTRET(ADDEXT1);

   6576  7 001706   200016 630500                    EPPR0   EXT$,,AUTO
         7 001707   200071 450500                    STP0    I+2,,AUTO
         7 001710   000050 236000 8                  LDQ     40
         7 001711   200070 756100                    STQ     I+1,,AUTO
         7 001712   200070 630500                    EPPR0   I+1,,AUTO
         7 001713   000020 631400 xsym               EPPR1   B_VECTNIL+16
         7 001714   000000 701000 xent               TSX1    FOI$GBUF
         7 001715   002004 702000 7                  TSX2    ADDEXT1

     1101     6577    5           EXT$->FO$EXT.DAD=CDAD;

   6577  7 001716   200016 470500                    LDP0    EXT$,,AUTO
         7 001717   200062 236100                    LDQ     CDAD,,AUTO
         7 001720   000001 552134                    STBQ    1,'34'O,PR0

     1102     6578    5           EXT$->FO$EXT.GRANS=I;

   6578  7 001721   200016 470500                    LDP0    EXT$,,AUTO
         7 001722   200061 236100                    LDQ     I,,AUTO
         7 001723   000033 736000                    QLS     27
         7 001724   000001 552140                    STBQ    1,'40'O,PR0
PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:157  

     1103     6579    5           EXT$->FO$EXT.STAMP=STAMP;

   6579  7 001725   200053 236100                    LDQ     STAMP,,AUTO
         7 001726   200016 470500                    LDP0    EXT$,,AUTO
         7 001727   000002 756100                    STQ     2,,PR0

     1104     6580    5           EXTENT.GRANS#=EXT$->FO$EXT.GRANS;

   6580  7 001730   200016 470500                    LDP0    EXT$,,AUTO
         7 001731   000001 236100                    LDQ     1,,PR0
         7 001732   000030 552040 1                  STBQ    EXTENT,'40'O

     1105     6581    5           EXTENT.DAD#=EXT$->FO$EXT.DAD;

   6581  7 001733   000001 236100                    LDQ     1,,PR0
         7 001734   000030 552034 1                  STBQ    EXTENT,'34'O

     1106     6582    5           CHK_EXT.V.SETX#=FIL$->FO$FIL.SETX;

   6582  7 001735   000000 471400 xsym               LDP1    FO_FIL$
         7 001736   100010 720100                    LXL0    8,,PR1
         7 001737   000167 440000 1                  SXL0    CHK_EXT+21

     1107     6583                                      /* Validate extent words */
     1108     6584    5           CALL M$SYMBIO (CHK_EXT) ALTRET(A0);

   6584  7 001740   000142 630400 1                  EPPR0   CHK_EXT
         7 001741   570000 713400                    CLIMB   alt,+61440
         7 001742   403400 401760                    pmme    nvectors=8
         7 001743   001745 702000 7                  TSX2    A0

     1109     6585    5           GOTO A1;

   6585  7 001744   001750 710000 7                  TRA     A1

   6582  7 001745                       A0           null
PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:158  
     1110     6586    5   A0:     ;
     1111     6587    5           BADCNT=BADCNT+1;

   6587  7 001745   200064 235100                    LDA     BADCNT,,AUTO
         7 001746   000001 035007                    ADLA    1,DL
         7 001747   200064 755100                    STA     BADCNT,,AUTO

   6587  7 001750                       A1           null
     1112     6588    5   A1:     ;
     1113     6589    5           FIL$->FO$FIL.NUMEXT=FIL$->FO$FIL.NUMEXT+1;

   6589  7 001750   000000 470400 xsym               LDP0    FO_FIL$
         7 001751   000014 720100                    LXL0    12,,PR0
         7 001752   000001 621010                    EAX1    1,X0
         7 001753   000014 441100                    SXL1    12,,PR0

     1114     6590    5           PREVEXT$->PTR$=EXT$;

   6590  7 001754   200016 236100                    LDQ     EXT$,,AUTO
         7 001755   200014 471500                    LDP1    PREVEXT$,,AUTO
         7 001756   100000 756100                    STQ     0,,PR1

     1115     6591    5           EXT$->FO$EXT.LNK$=ADDR(NIL);

   6591  7 001757   000001 236000 xsym               LDQ     B_VECTNIL+1
         7 001760   200016 470500                    LDP0    EXT$,,AUTO
         7 001761   000000 756100                    STQ     0,,PR0

     1116     6592    5           PREVEXT$=ADDR(EXT$->FO$EXT.LNK$);

   6592  7 001762   200016 236100                    LDQ     EXT$,,AUTO
         7 001763   200014 756100                    STQ     PREVEXT$,,AUTO

     1117     6593    5           CGRAN=CGRAN-I;

   6593  7 001764   200063 236100                    LDQ     CGRAN,,AUTO
         7 001765   200061 136100                    SBLQ    I,,AUTO
PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:159  
         7 001766   200063 756100                    STQ     CGRAN,,AUTO

     1118     6594    5           STAMP.FRDAD=STAMP.FRDAD+I;

   6594  7 001767   200053 236100                    LDQ     STAMP,,AUTO
         7 001770   000777 376007                    ANQ     511,DL
         7 001771   200061 036100                    ADLQ    I,,AUTO
         7 001772   200053 552104                    STBQ    STAMP,'04'O,AUTO

     1119     6595    5           CDAD=CDAD+I;

   6595  7 001773   200062 236100                    LDQ     CDAD,,AUTO
         7 001774   200061 036100                    ADLQ    I,,AUTO
         7 001775   200062 756100                    STQ     CDAD,,AUTO

     1120     6596    5           END;

   6596  7 001776   200063 235100                    LDA     CGRAN,,AUTO
         7 001777   001700 601000 7                  TNZ     s:6574

     1121     6597    4         IF BADCNT ~= 0 THEN

   6597  7 002000   200064 236100                    LDQ     BADCNT,,AUTO
         7 002001   002010 601000 7                  TNZ     ADDEXT2

     1122     6598    4          GOTO ADDEXT2;
     1123     6599    4         RETURN;

   6599  7 002002   200056 221300                    LDX1  ! NFILF+1,,AUTO
         7 002003   000001 702211                    TSX2  ! 1,X1

     1124     6600    4   ADDEXT1:
     1125     6601    4         FIL_BADC=FOFE_NEFR#;

   6601  7 002004   000003 235007       ADDEXT1      LDA     3,DL
         7 002005   200024 755100                    STA     FIL_BADC,,AUTO

PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:160  
     1126     6602    4         ALTRETURN;

   6602  7 002006   200056 221300                    LDX1  ! NFILF+1,,AUTO
         7 002007   000000 702211                    TSX2  ! 0,X1

   6597  7 002010                       ADDEXT2      null
     1127     6603    4   ADDEXT2:;
     1128     6604    4         FIL_BADC=FOFE_BEXT#;

   6604  7 002010   000014 235007                    LDA     12,DL
         7 002011   200024 755100                    STA     FIL_BADC,,AUTO

     1129     6605    4         ALTRETURN;

   6605  7 002012   200056 221300                    LDX1  ! NFILF+1,,AUTO
         7 002013   000000 702211                    TSX2  ! 0,X1

     1130     6606    4   END ADD_EXT;
     1131     6607    3   END GRAB_EXTS;
     1132     6608    2   END ADD_FILE;
     1133     6609        %EJECT;
PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:161  
     1134     6610        /*
     1135     6611                    #   #   #####   #   #    ###    #   #
     1136     6612                    #  #    #       #   #     #     #   #
     1137     6613                    # #     #        # #      #     ##  #
     1138     6614                    ##      ####      #       #     # # #
     1139     6615                    # #     #         #       #     #  ##
     1140     6616                    #  #    #         #       #     #   #
     1141     6617                    #   #   #####     #      ###    #   #
     1142     6618
     1143     6619        */
     1144     6620        /*F* NAME:         FOF$KEYIN
     1145     6621             PURPOSE:      To process file keyins for OUTSYM
     1146     6622             DESCRIPTION:  All keyins which act upon output symbiont files
     1147     6623                           are processed by this routine.
     1148     6624
     1149     6625                           The parameters supplied by KEYIN are
     1150     6626
     1151     6627                           o SYSID is the specified sysid
     1152     6628
     1153     6629                           o NUM is the file NUM (-1 if not specified)
     1154     6630
     1155     6631                           o SWSN is the WSN to switch to
     1156     6632
     1157     6633                           o FWSN is the 'from' WSN, i.e. the WSN to
     1158     6634                             use in selecting files; if it is the WSN of
     1159     6635                             a system console, all WSNs are selected
     1160     6636                                (NOTWSN reverses the sense of this, that is,
     1161     6637                                 if NOTWSN is set, select all files NOT
     1162     6638                                 going to FWSN)
     1163     6639
     1164     6640                           o WSN is the WSN of the issuing console
     1165     6641
     1166     6642                           o ACCT is the account to use for selection
     1167     6643                                (NOTACCT reverses the sense)
     1168     6644
     1169     6645                           o PRIO is the priority to change to
     1170     6646
PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:162  
     1171     6647                           o FORM is the form name to use for selection
     1172     6648                                (NOTFORM reverses the sense)
     1173     6649
     1174     6650
     1175     6651
     1176     6652                           The current keyins are:
     1177     6653
     1178     6654
     1179     6655                      o PRIO changes the selected file (SYSID/NUM) to
     1180     6656                           PRIO, provided that it is going to FWSN
     1181     6657
     1182     6658                      o PRIOACCT changes all files from ACCT going to
     1183     6659                           FWSN, to PRIO
     1184     6660
     1185     6661                      o PRIOALL changes all files going to FWSN
     1186     6662
     1187     6663                      o DELETE deletes the selected file (SYSID/NUM), pro-
     1188     6664                           vided that it is going to FWSN
     1189     6665
     1190     6666                      o DELETEALL deletes all files going to FWSN
     1191     6667
     1192     6668                      o DELETEACCT deletes all files from ACCT going to
     1193     6669                           FWSN
     1194     6670
     1195     6671                      o DELETEFORM deletes all files for form FORM going to
     1196     6672                           FWSN
     1197     6673
     1198     6674                      o SWITCH switches the selected file (SYSID/NUM) to
     1199     6675                           SWSN, provided that either the file's account
     1200     6676                           has access to that WSN, or the issuing console
     1201     6677                           is a system console.
     1202     6678
     1203     6679                      o SWITCHALL switches all files going to FWSN, to
     1204     6680                           SWSN, subject to the above restriction.
     1205     6681
     1206     6682                      o SWITCHACCT switches all files from ACCT, going
     1207     6683                           to FWSN, to SWSN, subject to the above
PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:163  
     1208     6684                           restriction.
     1209     6685
     1210     6686                      o SWITCHFORM switches all files for form FORM to SWSN,
     1211     6687                           subject to the above restriction
     1212     6688
     1213     6689
     1214     6690                      There are restrictions on when the various flavours
     1215     6691                      of keyins may be issued:
     1216     6692
     1217     6693                      o The PRIO flavours cannot be issued to files which
     1218     6694                        are printing or being spilled
     1219     6695
     1220     6696                      o The SWITCH flavours cannot be issued to files
     1221     6697                        which are printing or being spilled, or which
     1222     6698                        have a form name which does not exist at the
     1223     6699                        target terminal
     1224     6700
     1225     6701                      o The DELETE flavours cannot be issued to files which
     1226     6702                        are being spilled. */
     1227     6703    1   FOF$KEYIN: ENTRY(FIL_SYSID) ALTRET; /* !!Doesn't ALTRET!! */

   6703  7 002014   000000 700200 xent  FOF$KEYIN    TSX0  ! X66_AUTO_5
         7 002015   000074 000005                    ZERO    60,5

     1228     6704                                /* FIL_SYSID IS REALLY THE POINTER TO THE
     1229     6705                                   FILE KEYIN FRAME.  (KEYIN$)  */
     1230     6706
     1231     6707              %JLOCK;

   6708  7 002016   000000 054000 xsym               AOS     FO_Q

     1232     6710    1         CALL FIL_KEYIN;

   6710  7 002017   002024 701000 7                  TSX1    FIL_KEYIN
         7 002020   000000 011000                    NOP     0

     1233     6711              %JUNLOCK;
PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:164  

   6712  7 002021   000001 336007                    LCQ     1,DL
         7 002022   000000 056000 xsym               ASQ     FO_Q

     1234     6714    1         RETURN;

   6714  7 002023   000000 702200 xent               TSX2  ! X66_ARET

     1235     6715
     1236     6716                                /* PROC TO PERFORM KEYIN LOGIC WITH
     1237     6717                                   JOBSTATS GATE LOCKED */
     1238     6718    1   FIL_KEYIN: PROC ALTRET;

   6718  7 002024   200044 741300       FIL_KEYIN    STX1  ! EXPPRIO+2,,AUTO

     1239     6719        /**/
     1240     6720    2   DCL KFIL$ PTR;
     1241     6721    2   DCL KPRIO SBIN WORD;
     1242     6722    2   DCL CPRIO UBIN WORD;
     1243     6723    2   DCL FWSN CHAR(8);
     1244     6724    2   DCL CWSN CHAR(8);
     1245     6725    2   DCL RSUBC UBIN WORD;
     1246     6726    2   DCL NFILF UBIN WORD;
     1247     6727    2   DCL ESUBC2 UBIN WORD;
     1248     6728    2   DCL KIN# UBIN;
     1249     6729    2   DCL FIRST_ONE BIT(1);
     1250     6730    2   DCL FIRST_ONE$ PTR;
     1251     6731        /**/
     1252     6732    2         KCNT=KCNT+1;

   6732  7 002025   000042 054000 1                  AOS     KCNT

     1253     6733    2         KIN#=KEYIN$->FO$FKEYIN.KIN#;

   6733  7 002026   200003 470500                    LDP0    @FIL_SYSID,,AUTO
         7 002027   000000 471500                    LDP1    0,,PR0
         7 002030   100000 236100                    LDQ     0,,PR1
PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:165  
         7 002031   000022 772000                    QRL     18
         7 002032   200057 756100                    STQ     KIN#,,AUTO

     1254     6734    2         SYSID=KEYIN$->FO$FKEYIN.SYSID;

   6734  7 002033   100001 236100                    LDQ     1,,PR1
         7 002034   000022 772000                    QRL     18
         7 002035   200033 756100                    STQ     SYSID,,AUTO

     1255     6735    2         KNUM=KEYIN$->FO$FKEYIN.NUM;

   6735  7 002036   100006 220100                    LDX0    6,,PR1
         7 002037   200012 740100                    STX0    KNUM,,AUTO

     1256     6736    2         FWSN=KEYIN$->FO$FKEYIN.FWSN;

   6736  7 002040   040100 100500                    MLR     fill='040'O
         7 002041   100007 000010                    ADSC9   7,,PR1                   cn=0,n=8
         7 002042   200050 000010                    ADSC9   FWSN,,AUTO               cn=0,n=8

     1257     6737    2         CWSN=KEYIN$->FO$FKEYIN.WSN;

   6737  7 002043   040100 100500                    MLR     fill='040'O
         7 002044   100002 000010                    ADSC9   2,,PR1                   cn=0,n=8
         7 002045   200052 000010                    ADSC9   CWSN,,AUTO               cn=0,n=8

     1258     6738    2         OPMSG_KERR1.CADDR=KEYIN$->FO$FKEYIN.CADDR;

   6738  7 002046   100000 722100                    LXL2    0,,PR1
         7 002047   000062 742000 1                  STX2    OPMSG_KERR1

     1259     6739    2         OPMSG_RESP.CADDR=KEYIN$->FO$FKEYIN.CADDR;

   6739  7 002050   000000 471500                    LDP1    0,,PR0
         7 002051   100000 723100                    LXL3    0,,PR1
         7 002052   000072 743000 1                  STX3    OPMSG_RESP

PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:166  
     1260     6740    2         IF KNUMR = -1 THEN  /* If file # NOT specified on (DELEO/SWITCHO/PRIOO) */

   6740  7 002053   200012 224100                    LDX4    KNUM,,AUTO
         7 002054   777777 104003                    CMPX4   -1,DU
         7 002055   002061 601000 7                  TNZ     s:6743

     1261     6741    2          OPMSG_RESP.NUM = 0;               /* Don't let KEYIN display a file # */

   6741  7 002056   000000 236003                    LDQ     0,DU
         7 002057   000103 552004 1                  STBQ    OPMSG_RESP+9,'04'O
         7 002060   002064 710000 7                  TRA     s:6747

     1262     6742    2         ELSE
     1263     6743    2          OPMSG_RESP.NUM = KNUMR; /* Let KEYIN display # of file being affected */

   6743  7 002061   200012 236100                    LDQ     KNUM,,AUTO
         7 002062   000022 772000                    QRL     18
         7 002063   000103 552004 1                  STBQ    OPMSG_RESP+9,'04'O

     1264     6744
     1265     6745                                /* VERIFY THE PARAMETERS */
     1266     6746
     1267     6747    3           DO CASE (KIN#);

   6747  7 002064   200057 235100                    LDA     KIN#,,AUTO
         7 002065   000011 135007                    SBLA    9,DL
         7 002066   000020 115007                    CMPA    16,DL
         7 002067   002071 602005 7                  TNC     s:6747+5,AL
         7 002070   002170 710000 7                  TRA     s:6784
         7 002071   002152 710000 7                  TRA     s:6772
         7 002072   002114 710000 7                  TRA     s:6752
         7 002073   002166 710000 7                  TRA     s:6780
         7 002074   002170 710000 7                  TRA     s:6784
         7 002075   002144 710000 7                  TRA     s:6768
         7 002076   002160 710000 7                  TRA     s:6776
         7 002077   002111 710000 7                  TRA     s:6749
         7 002100   002147 710000 7                  TRA     s:6770
PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:167  
         7 002101   002163 710000 7                  TRA     s:6778
         7 002102   002170 710000 7                  TRA     s:6784
         7 002103   002170 710000 7                  TRA     s:6784
         7 002104   002170 710000 7                  TRA     s:6784
         7 002105   002136 710000 7                  TRA     s:6763
         7 002106   002170 710000 7                  TRA     s:6784
         7 002107   002155 710000 7                  TRA     s:6774
         7 002110   002141 710000 7                  TRA     s:6766

     1268     6748    3             CASE (KEY_PRIOOACCT#);

     1269     6749    3               RSUBC=FOKR_PRIOACCT#;

   6749  7 002111   000006 236007                    LDQ     6,DL
         7 002112   200054 756100                    STQ     RSUBC,,AUTO

     1270     6750    3               GOTO KPRIOPREP;

   6750  7 002113   002115 710000 7                  TRA     KPRIOPREP

     1271     6751    3             CASE (KEY_PRIOO#);

     1272     6752    3               RSUBC=FOKR_PRIO#;

   6752  7 002114   200054 450100                    STZ     RSUBC,,AUTO

   6752  7 002115                       KPRIOPREP    null
     1273     6753    3   KPRIOPREP:  ;
     1274     6754    3               OPMSG_RESP.PRIO=KEYIN$->FO$FKEYIN.PRIO;

   6754  7 002115   200003 470500                    LDP0    @FIL_SYSID,,AUTO
         7 002116   000000 471500                    LDP1    0,,PR0
         7 002117   100001 236100                    LDQ     1,,PR1
         7 002120   000100 552004 1                  STBQ    OPMSG_RESP+6,'04'O

     1275     6755    3               IF KEYIN$->FO$FKEYIN.PRIO > 15 THEN

PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:168  
   6755  7 002121   000000 471500                    LDP1    0,,PR0
         7 002122   100001 720100                    LXL0    1,,PR1
         7 002123   000020 100003                    CMPX0   16,DU
         7 002124   002170 602000 7                  TNC     s:6784

     1276     6756    4                 DO;

     1277     6757    4                 OPMSG_KERR1.SYSID=SYSID;

   6757  7 002125   200033 721100                    LXL1    SYSID,,AUTO
         7 002126   000063 741000 1                  STX1    OPMSG_KERR1+1

     1278     6758    4                 OPMSG_KERR1.SUBC=FOKE_BPRIO#;

   6758  7 002127   001000 236003                    LDQ     512,DU
         7 002130   000070 552040 1                  STBQ    OPMSG_KERR1+6,'40'O

     1279     6759    4                 CALL M$WRITE (OCMSG_KERR1);

   6759  7 002131   000150 630400 6                  EPPR0   OCMSG_KERR1
         7 002132   040001 713400                    CLIMB   write
         7 002133   401400 401760                    pmme    nvectors=4

     1280     6760    4                 RETURN;

   6760  7 002134   200044 221300                    LDX1  ! EXPPRIO+2,,AUTO
         7 002135   000001 702211                    TSX2  ! 1,X1

     1281     6761    4                 END;
     1282     6762    3             CASE (KEY_PRIOOALL#);

     1283     6763    3               RSUBC=FOKR_PRIOALL#;

   6763  7 002136   000016 236007                    LDQ     14,DL
         7 002137   200054 756100                    STQ     RSUBC,,AUTO

     1284     6764    3               GOTO KPRIOPREP;
PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:169  

   6764  7 002140   002115 710000 7                  TRA     KPRIOPREP

     1285     6765    3             CASE (KEY_DELETEOFORM#);

     1286     6766    3               RSUBC=FOKR_DELFORM#;

   6766  7 002141   000020 236007                    LDQ     16,DL
         7 002142   200054 756100                    STQ     RSUBC,,AUTO
         7 002143   002170 710000 7                  TRA     s:6784

     1287     6767    3             CASE (KEY_DELETEOALL#);

     1288     6768    3               RSUBC=FOKR_DELALL#;

   6768  7 002144   000005 236007                    LDQ     5,DL
         7 002145   200054 756100                    STQ     RSUBC,,AUTO
         7 002146   002170 710000 7                  TRA     s:6784

     1289     6769    3             CASE (KEY_DELETEOACCT#);

     1290     6770    3               RSUBC=FOKR_DELACCT#;

   6770  7 002147   000010 236007                    LDQ     8,DL
         7 002150   200054 756100                    STQ     RSUBC,,AUTO
         7 002151   002170 710000 7                  TRA     s:6784

     1291     6771    3             CASE (KEY_DELETEO#);

     1292     6772    3               RSUBC=FOKR_DEL#;

   6772  7 002152   000001 236007                    LDQ     1,DL
         7 002153   200054 756100                    STQ     RSUBC,,AUTO
         7 002154   002170 710000 7                  TRA     s:6784

     1293     6773    3             CASE (KEY_SWITCHOFORM#);

PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:170  
     1294     6774    3               RSUBC=FOKR_SWITFORM#;

   6774  7 002155   000017 236007                    LDQ     15,DL
         7 002156   200054 756100                    STQ     RSUBC,,AUTO
         7 002157   002170 710000 7                  TRA     s:6784

     1295     6775    3             CASE (KEY_SWITCHOALL#);

     1296     6776    3               RSUBC=FOKR_SWITALL#;

   6776  7 002160   000004 236007                    LDQ     4,DL
         7 002161   200054 756100                    STQ     RSUBC,,AUTO
         7 002162   002170 710000 7                  TRA     s:6784

     1297     6777    3             CASE (KEY_SWITCHOACCT#);

     1298     6778    3               RSUBC=FOKR_SWITACCT#;

   6778  7 002163   000007 236007                    LDQ     7,DL
         7 002164   200054 756100                    STQ     RSUBC,,AUTO
         7 002165   002170 710000 7                  TRA     s:6784

     1299     6779    3             CASE (KEY_SWITCHO#);

     1300     6780    3               RSUBC=FOKR_SWIT#;

   6780  7 002166   000002 236007                    LDQ     2,DL
         7 002167   200054 756100                    STQ     RSUBC,,AUTO

     1301     6781
     1302     6782    3           END;

     1303     6783
     1304     6784    2         OPMSG_RESP.SUBC=RSUBC;

   6784  7 002170   200054 236100                    LDQ     RSUBC,,AUTO
         7 002171   000011 736000                    QLS     9
PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:171  
         7 002172   000100 552010 1                  STBQ    OPMSG_RESP+6,'10'O

     1305     6785    2         NFIL=0;                                        /* COUNT FILES PROCESSED */

   6785  7 002173   200034 450100                    STZ     NFIL,,AUTO

     1306     6786    2         NFILF=0;                                  /* COUNT FILES ACTUALLY FOUND */

   6786  7 002174   200055 450100                    STZ     NFILF,,AUTO

     1307     6787                                /* LOOP THRU ALL PRIO CHAINS */
     1308     6788    3   LOOP:   DO KPRIO = FOPR_MAX# DOWNTO 0;

   6788  7 002175   000022 235007       LOOP         LDA     18,DL
         7 002176   200046 755100                    STA     KPRIO,,AUTO

     1309     6789
     1310     6790    3           FIL$=FO_Q.FILHD$(KPRIO);

   6790  7 002177   200046 720100                    LXL0    KPRIO,,AUTO
         7 002200   000004 236010 xsym               LDQ     FO_Q+4,X0
         7 002201   000000 756000 xsym               STQ     FO_FIL$

     1311     6791    3           FIRST_ONE = '1'B; /* Used to find 1st specified file for SWITCH keyin */

   6791  7 002202   400000 236003                    LDQ     -131072,DU
         7 002203   200060 756100                    STQ     FIRST_ONE,,AUTO

     1312     6792    3           FIRST_ONE$ = ADDR(NIL);    /* Same as above (really?  No kidding!!! */

   6792  7 002204   000001 236000 xsym               LDQ     B_VECTNIL+1
         7 002205   200061 756100                    STQ     FIRST_ONE$,,AUTO

     1313     6793
     1314     6794    4             DO WHILE (FIL$ ~= ADDR(NIL) AND FIL$ ~= FIRST_ONE$);

   6794  7 002206   002543 710000 7                  TRA     s:6938
PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:172  

     1315     6795
     1316     6796    4             KFIL$=FIL$->FO$FIL.LNK$;

   6796  7 002207   000000 470400 xsym               LDP0    FO_FIL$
         7 002210   000000 236100                    LDQ     0,,PR0
         7 002211   200045 756100                    STQ     KFIL$,,AUTO

     1317     6797    4             DEV$=FIL$->FO$FIL.CDEV$;

   6797  7 002212   000011 236100                    LDQ     9,,PR0
         7 002213   000000 756000 xsym               STQ     FO_DEV$

     1318     6798                                      /* CHK routines are used to verify if
     1319     6799                                         the file is to be included in this
     1320     6800                                         action */
     1321     6801
     1322     6802    5               DO CASE (KIN#);

   6802  7 002214   200057 235100                    LDA     KIN#,,AUTO
         7 002215   000011 135007                    SBLA    9,DL
         7 002216   000020 115007                    CMPA    16,DL
         7 002217   002221 602005 7                  TNC     s:6802+5,AL
         7 002220   002541 710000 7                  TRA     KEYIN0
         7 002221   002513 710000 7                  TRA     s:6923
         7 002222   002247 710000 7                  TRA     s:6808
         7 002223   002401 710000 7                  TRA     s:6880
         7 002224   002541 710000 7                  TRA     KEYIN0
         7 002225   002510 710000 7                  TRA     s:6921
         7 002226   002376 710000 7                  TRA     s:6878
         7 002227   002241 710000 7                  TRA     s:6804
         7 002230   002505 710000 7                  TRA     s:6919
         7 002231   002373 710000 7                  TRA     s:6876
         7 002232   002541 710000 7                  TRA     KEYIN0
         7 002233   002541 710000 7                  TRA     KEYIN0
         7 002234   002541 710000 7                  TRA     KEYIN0
         7 002235   002244 710000 7                  TRA     s:6806
PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:173  
         7 002236   002541 710000 7                  TRA     KEYIN0
         7 002237   002370 710000 7                  TRA     s:6874
         7 002240   002502 710000 7                  TRA     s:6917

     1323     6803    5                 CASE (KEY_PRIOOACCT#);

     1324     6804    5                   CALL CHK_KFIL2 ALTRET(KPRIO);

   6804  7 002241   002613 701000 7                  TSX1    CHK_KFIL2
         7 002242   002252 702000 7                  TSX2    KPRIO
         7 002243   002541 710000 7                  TRA     KEYIN0

     1325     6805    5                 CASE (KEY_PRIOOALL#);

     1326     6806    5                   CALL CHK_KFIL ALTRET(KPRIO);

   6806  7 002244   002663 701000 7                  TSX1    CHK_KFIL
         7 002245   002252 702000 7                  TSX2    KPRIO
         7 002246   002541 710000 7                  TRA     KEYIN0

     1327     6807    5                 CASE (KEY_PRIOO#);

     1328     6808    5                   CALL CHK_KFIL1 ALTRET(KPRIO);

   6808  7 002247   002730 701000 7                  TSX1    CHK_KFIL1
         7 002250   002252 702000 7                  TSX2    KPRIO

     1329     6809    5                   GOTO KEYIN0;

   6809  7 002251   002541 710000 7                  TRA     KEYIN0

   6808  7 002252                       KPRIO        null
     1330     6810    5   KPRIO:          ;
     1331     6811    5                   ESUBC2=0;

   6811  7 002252   200056 450100                    STZ     ESUBC2,,AUTO

PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:174  
     1332     6812                                      /**/
     1333     6813                                      /* If a file is already on a device,
     1334     6814                                         we can't PRIO, or SWITCH it.  This
     1335     6815                                         message indicates which file we
     1336     6816                                         cannot change.  This will result in
     1337     6817                                         the second message having an "other"
     1338     6818                                         clause in it. */
     1339     6819                                      /**/
     1340     6820    5                   IF DEV$ ~= ADDR(NIL) THEN

   6820  7 002253   000000 236000 xsym               LDQ     FO_DEV$
         7 002254   000001 116000 xsym               CMPQ    B_VECTNIL+1
         7 002255   002277 600000 7                  TZE     s:6832

     1341     6821    6                     DO;

   6811  7 002256                       KERRPRT      null
     1342     6822    6   KERRPRT:          ;
     1343     6823    6                     OPMSG_KERR1.SUBC1=0;

   6823  7 002256   000000 236003                    LDQ     0,DU
         7 002257   000070 552020 1                  STBQ    OPMSG_KERR1+6,'20'O

   6823  7 002260                       KERR         null
     1344     6824    6   KERR:             ;
     1345     6825    6                     OPMSG_KERR1.SUBC=FOKE_CMFIL#;

   6825  7 002260   003000 236003                    LDQ     1536,DU
         7 002261   000070 552040 1                  STBQ    OPMSG_KERR1+6,'40'O

     1346     6826    6                     OPMSG_KERR1.SYSID=FIL$->FO$FIL.SYSID;

   6826  7 002262   000000 470400 xsym               LDP0    FO_FIL$
         7 002263   000012 220100                    LDX0    10,,PR0
         7 002264   000063 740000 1                  STX0    OPMSG_KERR1+1

     1347     6827    6                     OPMSG_KERR1.NUM=FIL$->FO$FIL.NUM;
PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:175  

   6827  7 002265   000000 100500                    MLR     fill='000'O
         7 002266   000012 400002                    ADSC9   10,,PR0                  cn=2,n=2
         7 002267   000070 600002 1                  ADSC9   OPMSG_KERR1+6            cn=3,n=2

     1348     6828    6                     OPMSG_KERR1.SUBC2=ESUBC2;

   6828  7 002270   200056 236100                    LDQ     ESUBC2,,AUTO
         7 002271   000011 736000                    QLS     9
         7 002272   000070 552010 1                  STBQ    OPMSG_KERR1+6,'10'O

     1349     6829    6                     CALL M$WRITE (OCMSG_KERR1);

   6829  7 002273   000150 630400 6                  EPPR0   OCMSG_KERR1
         7 002274   040001 713400                    CLIMB   write
         7 002275   401400 401760                    pmme    nvectors=4

     1350     6830    6                     GOTO KEYIN0;

   6830  7 002276   002541 710000 7                  TRA     KEYIN0

     1351     6831    6                     END;
     1352     6832    5                   IF FIL$->FO$FIL.FLG.SPILL THEN

   6832  7 002277   000000 470400 xsym               LDP0    FO_FIL$
         7 002300   000015 236100                    LDQ     13,,PR0
         7 002301   000001 316007                    CANQ    1,DL
         7 002302   002306 600000 7                  TZE     s:6838

     1353     6833    6                     DO;

   6830  7 002303                       KERRSPILL    null
     1354     6834    6   KERRSPILL:        ;
     1355     6835    6                     OPMSG_KERR1.SUBC1=1;

   6835  7 002303   000001 236003                    LDQ     1,DU
         7 002304   000070 552020 1                  STBQ    OPMSG_KERR1+6,'20'O
PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:176  

     1356     6836    6                     GOTO KERR;

   6836  7 002305   002260 710000 7                  TRA     KERR

     1357     6837    6                     END;
     1358     6838    5                   IF FIL$->FO$FIL.KCNT ~= KCNT THEN

   6838  7 002306   000022 236100                    LDQ     18,,PR0
         7 002307   000022 736000                    QLS     18
         7 002310   000022 732000                    QRS     18
         7 002311   000042 116000 1                  CMPQ    KCNT
         7 002312   002364 600000 7                  TZE     s:6871

     1359     6839    6                     DO;

     1360     6840    6                     FIL$->FO$FIL.KCNT=KCNT;

   6840  7 002313   000042 720000 1                  LXL0    KCNT
         7 002314   000022 440100                    SXL0    18,,PR0

     1361     6841    6                     NFIL=NFIL+1;

   6841  7 002315   200034 235100                    LDA     NFIL,,AUTO
         7 002316   000001 035007                    ADLA    1,DL
         7 002317   200034 755100                    STA     NFIL,,AUTO

     1362     6842    6                     FIL$->FO$FIL.IPRIO=KEYIN$->FO$FKEYIN.PRIO;

   6842  7 002320   200003 471500                    LDP1    @FIL_SYSID,,AUTO
         7 002321   100000 473500                    LDP3    0,,PR1
         7 002322   300001 236100                    LDQ     1,,PR3
         7 002323   000021 552104                    STBQ    17,'04'O,PR0

     1363     6843    6                     FIL$->FO$FIL.FLG.CPRIO='1'B;

   6843  7 002324   000020 236007                    LDQ     16,DL
PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:177  
         7 002325   000015 256100                    ORSQ    13,,PR0

     1364     6844                                      /* Does new prio differ from old */
     1365     6845    6                     IF FIL$->FO$FIL.PRIO ~= (KEYIN$->FO$FKEYIN.PRIO+FOPR_P0#) THEN

   6845  7 002326   100000 473500                    LDP3    0,,PR1
         7 002327   300001 236100                    LDQ     1,,PR3
         7 002330   777777 376007                    ANQ     -1,DL
         7 002331   000003 036007                    ADLQ    3,DL
         7 002332   200070 756100                    STQ     I+1,,AUTO
         7 002333   000016 236100                    LDQ     14,,PR0
         7 002334   000777 376007                    ANQ     511,DL
         7 002335   200070 116100                    CMPQ    I+1,,AUTO
         7 002336   002357 600000 7                  TZE     s:6855

     1366     6846    7                       DO;

     1367     6847    7                       IF  FIL$->FO$FIL.PRIO ~= FOPR_SPILLED#

   6847  7 002337   000002 116007                    CMPQ    2,DL
         7 002340   002357 600000 7                  TZE     s:6855
         7 002341   000016 236100                    LDQ     14,,PR0
         7 002342   000777 316007                    CANQ    511,DL
         7 002343   002357 600000 7                  TZE     s:6855

     1368     6848    7                       AND FIL$->FO$FIL.PRIO ~= FOPR_HOLD# THEN
     1369     6849    8                         DO;

     1370     6850    8                         CALL UNCHAIN_FILE;

   6850  7 002344   004412 701000 7                  TSX1    UNCHAIN_FILE
         7 002345   000000 011000                    NOP     0

     1371     6851    8                         FIL$->FO$FIL.PRIO=KEYIN$->FO$FKEYIN.PRIO+FOPR_P0#;

   6851  7 002346   200003 470500                    LDP0    @FIL_SYSID,,AUTO
         7 002347   000000 471500                    LDP1    0,,PR0
PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:178  
         7 002350   000000 473400 xsym               LDP3    FO_FIL$
         7 002351   100001 236100                    LDQ     1,,PR1
         7 002352   777777 376007                    ANQ     -1,DL
         7 002353   000003 036007                    ADLQ    3,DL
         7 002354   300016 552104                    STBQ    14,'04'O,PR3

     1372     6852    8                         CALL CHAIN_FILE;

   6852  7 002355   004541 701000 7                  TSX1    CHAIN_FILE
         7 002356   000000 011000                    NOP     0

     1373     6853    8                         END;

     1374     6854    7                       END;

     1375     6855    6                     FUCODE=FOFU_PRIO#;

   6855  7 002357   000004 235007                    LDA     4,DL
         7 002360   200023 755100                    STA     FUCODE,,AUTO

     1376     6856    6                     CALL UPD_FILE1;

   6856  7 002361   003662 701000 7                  TSX1    UPD_FILE1
         7 002362   000000 011000                    NOP     0

     1377     6857    6                     END;

   6857  7 002363   002541 710000 7                  TRA     KEYIN0

     1378     6858                                      /**/
     1379     6859                                      /* Files PRIOed down will be found twice
     1380     6860                                         because they get unchained and re-
     1381     6861                                         chained when we go thru the above
     1382     6862                                         code.  This means that NFILF will be
     1383     6863                                         INCRed twice for the same file
     1384     6864                                         (when we come across it again).  We
     1385     6865                                         must compensate the NFILFs found
PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:179  
     1386     6866                                         count here so we don't accidentally
     1387     6867                                         get the "other" clause. */
     1388     6868                                      /**/
     1389     6869    5                   ELSE
     1390     6870    6                     DO;

     1391     6871    6                     NFILF = NFILF - 1;

   6871  7 002364   200055 235100                    LDA     NFILF,,AUTO
         7 002365   000001 135007                    SBLA    1,DL
         7 002366   200055 755100                    STA     NFILF,,AUTO

     1392     6872    6                     END;

   6872  7 002367   002541 710000 7                  TRA     KEYIN0

     1393     6873    5                 CASE (KEY_SWITCHOFORM#);

     1394     6874    5                   CALL CHK_KFIL3 ALTRET(KSWIT);

   6874  7 002370   002640 701000 7                  TSX1    CHK_KFIL3
         7 002371   002404 702000 7                  TSX2    KSWIT
         7 002372   002541 710000 7                  TRA     KEYIN0

     1395     6875    5                 CASE (KEY_SWITCHOACCT#);

     1396     6876    5                   CALL CHK_KFIL2 ALTRET(KSWIT);

   6876  7 002373   002613 701000 7                  TSX1    CHK_KFIL2
         7 002374   002404 702000 7                  TSX2    KSWIT
         7 002375   002541 710000 7                  TRA     KEYIN0

     1397     6877    5                 CASE (KEY_SWITCHOALL#);

     1398     6878    5                   CALL CHK_KFIL ALTRET(KSWIT);

   6878  7 002376   002663 701000 7                  TSX1    CHK_KFIL
PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:180  
         7 002377   002404 702000 7                  TSX2    KSWIT
         7 002400   002541 710000 7                  TRA     KEYIN0

     1399     6879    5                 CASE (KEY_SWITCHO#);

     1400     6880    5                   CALL CHK_KFIL1 ALTRET(KSWIT);

   6880  7 002401   002730 701000 7                  TSX1    CHK_KFIL1
         7 002402   002404 702000 7                  TSX2    KSWIT

     1401     6881    5                   GOTO KEYIN0;

   6881  7 002403   002541 710000 7                  TRA     KEYIN0

   6880  7 002404                       KSWIT        null
     1402     6882    5   KSWIT:          ;
     1403     6883    6                   IF FIRST_ONE THEN DO;

   6883  7 002404   200060 234100                    SZN     FIRST_ONE,,AUTO
         7 002405   002411 605000 7                  TPL     s:6889

     1404     6884    6                     FIRST_ONE = '0'B;

   6884  7 002406   200060 450100                    STZ     FIRST_ONE,,AUTO

     1405     6885    6                     FIRST_ONE$ = FIL$;

   6885  7 002407   000000 236000 xsym               LDQ     FO_FIL$
         7 002410   200061 756100                    STQ     FIRST_ONE$,,AUTO

     1406     6886    6                     END;

     1407     6887                                      /* If already at that WSN, just incr
     1408     6888                                         NFIL */
     1409     6889    5                   IF FIL$->FO$FIL.DESTR.WSN=KEYIN$->FO$FKEYIN.SWSN THEN

   6889  7 002411   200003 470500                    LDP0    @FIL_SYSID,,AUTO
PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:181  
         7 002412   000000 471500                    LDP1    0,,PR0
         7 002413   000000 473400 xsym               LDP3    FO_FIL$
         7 002414   040100 106500                    CMPC    fill='040'O
         7 002415   300005 000010                    ADSC9   5,,PR3                   cn=0,n=8
         7 002416   100004 000010                    ADSC9   4,,PR1                   cn=0,n=8
         7 002417   002424 601000 7                  TNZ     s:6894

     1410     6890    5                    NFIL=NFIL+1;

   6890  7 002420   200034 235100                    LDA     NFIL,,AUTO
         7 002421   000001 035007                    ADLA    1,DL
         7 002422   200034 755100                    STA     NFIL,,AUTO
         7 002423   002541 710000 7                  TRA     KEYIN0

     1411     6891    5                   ELSE
     1412     6892    6                     DO;

     1413     6893                                      /* Is this file currently on a device */
     1414     6894    6                     IF DEV$ ~= ADDR(NIL) THEN GOTO KERRPRT;

   6894  7 002424   000000 236000 xsym               LDQ     FO_DEV$
         7 002425   000001 116000 xsym               CMPQ    B_VECTNIL+1
         7 002426   002256 601000 7                  TNZ     KERRPRT

     1415     6895                                      /* NFILF = files found,
     1416     6896                                         NFIL  = files processed */
     1417     6897    6                     IF FIL$->FO$FIL.FLG.SPILL THEN GOTO KERRSPILL;

   6897  7 002427   300015 236100                    LDQ     13,,PR3
         7 002430   000001 316007                    CANQ    1,DL
         7 002431   002303 601000 7                  TNZ     KERRSPILL

     1418     6898    6                     CALL FOR$TCHK (FIL$->FO$FIL.FORM,KEYIN$->FO$FKEYIN.SWSN) ALTRET(
              6898                              KERRFORM);

   6898  7 002432   100004 634500                    EPPR4   4,,PR1
         7 002433   200071 454500                    STP4    I+2,,AUTO
PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:182  
         7 002434   000000 236000 xsym               LDQ     FO_FIL$
         7 002435   000013 036003                    ADLQ    11,DU
         7 002436   200070 756100                    STQ     I+1,,AUTO
         7 002437   200070 630500                    EPPR0   I+1,,AUTO
         7 002440   000020 631400 xsym               EPPR1   B_VECTNIL+16
         7 002441   000000 701000 xent               TSX1    FOR$TCHK
         7 002442   002444 702000 7                  TSX2    KERRFORM

     1419     6899    6                     GOTO KSWIT0;

   6899  7 002443   002447 710000 7                  TRA     KSWIT0

   6897  7 002444                       KERRFORM     null
     1420     6900    6   KERRFORM:         ;
     1421     6901    6                     OPMSG_KERR1.SUBC1=2;

   6901  7 002444   000002 236003                    LDQ     2,DU
         7 002445   000070 552020 1                  STBQ    OPMSG_KERR1+6,'20'O

     1422     6902    6                     GOTO KERR;

   6902  7 002446   002260 710000 7                  TRA     KERR

   6901  7 002447                       KSWIT0       null
     1423     6903    6   KSWIT0:           ;
     1424     6904    6                     NFIL=NFIL+1;

   6904  7 002447   200034 235100                    LDA     NFIL,,AUTO
         7 002450   000001 035007                    ADLA    1,DL
         7 002451   200034 755100                    STA     NFIL,,AUTO

     1425     6905    6                     CALL UNCHAIN_FILE;

   6905  7 002452   004412 701000 7                  TSX1    UNCHAIN_FILE
         7 002453   000000 011000                    NOP     0

     1426     6906    6                     FIL$->FO$FIL.DESTR.WSN=KEYIN$->FO$FKEYIN.SWSN;
PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:183  

   6906  7 002454   200003 470500                    LDP0    @FIL_SYSID,,AUTO
         7 002455   000000 471500                    LDP1    0,,PR0
         7 002456   000000 473400 xsym               LDP3    FO_FIL$
         7 002457   040100 100500                    MLR     fill='040'O
         7 002460   100004 000010                    ADSC9   4,,PR1                   cn=0,n=8
         7 002461   300005 000010                    ADSC9   5,,PR3                   cn=0,n=8

     1427     6907    6                     CALL CHAIN_FILE;

   6907  7 002462   004541 701000 7                  TSX1    CHAIN_FILE
         7 002463   000000 011000                    NOP     0

     1428     6908    6                     FUCODE=FOFU_SWIT#;

   6908  7 002464   000005 235007                    LDA     5,DL
         7 002465   200023 755100                    STA     FUCODE,,AUTO

     1429     6909    6                     CALL UPD_FILE1;

   6909  7 002466   003662 701000 7                  TSX1    UPD_FILE1
         7 002467   000000 011000                    NOP     0

     1430     6910    6                     CALL FOD$AVAIL;

   6910  7 002470   000002 631400 xsym               EPPR1   B_VECTNIL+2
         7 002471   000000 701000 xent               TSX1    FOD$AVAIL
         7 002472   000000 011000                    NOP     0

     1431     6911    6                     IF KIN# = KEY_SWITCHO# AND  /* SWITCH O sysid-num specified */

   6911  7 002473   200057 235100                    LDA     KIN#,,AUTO
         7 002474   000013 115007                    CMPA    11,DL
         7 002475   002501 601000 7                  TNZ     s:6915
         7 002476   200012 220100                    LDX0    KNUM,,AUTO
         7 002477   777777 100003                    CMPX0   -1,DU
         7 002500   002553 601000 7                  TNZ     s:6942
PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:184  

     1432     6912    6                     KNUMR ~= -1    /* A -1 indicates no num specified */
     1433     6913    6                     THEN     /* Exit loop, only 1 file to change and we did it */
     1434     6914    6                      EXIT LOOP;
     1435     6915    6                     END;

   6915  7 002501   002541 710000 7                  TRA     KEYIN0

     1436     6916    5                 CASE (KEY_DELETEOFORM#);

     1437     6917    5                   CALL CHK_KFIL3 ALTRET(KDEL);

   6917  7 002502   002640 701000 7                  TSX1    CHK_KFIL3
         7 002503   002516 702000 7                  TSX2    KDEL
         7 002504   002541 710000 7                  TRA     KEYIN0

     1438     6918    5                 CASE (KEY_DELETEOACCT#);

     1439     6919    5                   CALL CHK_KFIL2 ALTRET(KDEL);

   6919  7 002505   002613 701000 7                  TSX1    CHK_KFIL2
         7 002506   002516 702000 7                  TSX2    KDEL
         7 002507   002541 710000 7                  TRA     KEYIN0

     1440     6920    5                 CASE (KEY_DELETEOALL#);

     1441     6921    5                   CALL CHK_KFIL ALTRET(KDEL);

   6921  7 002510   002663 701000 7                  TSX1    CHK_KFIL
         7 002511   002516 702000 7                  TSX2    KDEL
         7 002512   002541 710000 7                  TRA     KEYIN0

     1442     6922    5                 CASE (KEY_DELETEO#);

     1443     6923    5                   CALL CHK_KFIL1 ALTRET(KDEL);

   6923  7 002513   002730 701000 7                  TSX1    CHK_KFIL1
PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:185  
         7 002514   002516 702000 7                  TSX2    KDEL

     1444     6924    5                   GOTO KEYIN0;

   6924  7 002515   002541 710000 7                  TRA     KEYIN0

   6923  7 002516                       KDEL         null
     1445     6925    5   KDEL:           ;
     1446     6926    5                   ESUBC2=2;

   6926  7 002516   000002 235007                    LDA     2,DL
         7 002517   200056 755100                    STA     ESUBC2,,AUTO

     1447     6927    5                   IF FIL$->FO$FIL.FLG.SPILL THEN

   6927  7 002520   000000 470400 xsym               LDP0    FO_FIL$
         7 002521   000015 236100                    LDQ     13,,PR0
         7 002522   000001 316007                    CANQ    1,DL
         7 002523   002303 601000 7                  TNZ     KERRSPILL

     1448     6928    5                    GOTO KERRSPILL;
     1449     6929    5                   NFIL=NFIL+1;

   6929  7 002524   200034 235100                    LDA     NFIL,,AUTO
         7 002525   000001 035007                    ADLA    1,DL
         7 002526   200034 755100                    STA     NFIL,,AUTO

     1450     6930    5                   IF DEV$ = ADDR(NIL) THEN

   6930  7 002527   000000 236000 xsym               LDQ     FO_DEV$
         7 002530   000001 116000 xsym               CMPQ    B_VECTNIL+1
         7 002531   002535 601000 7                  TNZ     s:6933

     1451     6931    5                    CALL DEL_FILE;

   6931  7 002532   004203 701000 7                  TSX1    DEL_FILE
         7 002533   000000 011000                    NOP     0
PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:186  
         7 002534   002541 710000 7                  TRA     KEYIN0

     1452     6932    5                   ELSE
     1453     6933    5                    CALL FOD$EVENT (FODE_QUIT#,FOQR_DEL#);

   6933  7 002535   000051 630400 8                  EPPR0   41
         7 002536   000020 631400 xsym               EPPR1   B_VECTNIL+16
         7 002537   000000 701000 xent               TSX1    FOD$EVENT
         7 002540   000000 011000                    NOP     0

     1454     6934    5               END; /* CASE KIN# */

   6931  7 002541                       KEYIN0       null
     1455     6935
     1456     6936    4   KEYIN0:   ;
     1457     6937    4             FIL$=KFIL$;

   6937  7 002541   200045 236100                    LDQ     KFIL$,,AUTO
         7 002542   000000 756000 xsym               STQ     FO_FIL$

     1458     6938    4             END;

   6938  7 002543   000000 236000 xsym               LDQ     FO_FIL$
         7 002544   000001 116000 xsym               CMPQ    B_VECTNIL+1
         7 002545   002550 600000 7                  TZE     s:6939
         7 002546   200061 116100                    CMPQ    FIRST_ONE$,,AUTO
         7 002547   002207 601000 7                  TNZ     s:6796

     1459     6939    3           END;

   6939  7 002550   000001 336007                    LCQ     1,DL
         7 002551   200046 056100                    ASQ     KPRIO,,AUTO
         7 002552   002177 605000 7                  TPL     s:6790

     1460     6940
     1461     6941                                /* MESSAGE IF NONE FOUND */
     1462     6942    3         IF NFILF = 0 THEN DO;
PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:187  

   6942  7 002553   200055 235100                    LDA     NFILF,,AUTO
         7 002554   002563 601000 7                  TNZ     s:6947

     1463     6943    3           OPMSG_KERR1.SUBC=FOKE_NOFIL#;

   6943  7 002555   002000 236003                    LDQ     1024,DU
         7 002556   000070 552040 1                  STBQ    OPMSG_KERR1+6,'40'O

     1464     6944    3           CALL M$WRITE (OCMSG_KERR1);

   6944  7 002557   000150 630400 6                  EPPR0   OCMSG_KERR1
         7 002560   040001 713400                    CLIMB   write
         7 002561   401400 401760                    pmme    nvectors=4

     1465     6945    3           END;

   6945  7 002562   002611 710000 7                  TRA     s:6958

     1466     6946    2         ELSE
     1467     6947    3          IF NFIL ~= 0 THEN DO;             /* At least one file has been changed */

   6947  7 002563   200034 236100                    LDQ     NFIL,,AUTO
         7 002564   002611 600000 7                  TZE     s:6958

     1468     6948    3            IF NFILF = NFIL THEN

   6948  7 002565   200055 116100                    CMPQ    NFILF,,AUTO
         7 002566   002572 601000 7                  TNZ     s:6951

     1469     6949    3             OPMSG_RESP.SUBC2=0;

   6949  7 002567   000000 236003                    LDQ     0,DU
         7 002570   000103 552040 1                  STBQ    OPMSG_RESP+9,'40'O
         7 002571   002574 710000 7                  TRA     s:6952

     1470     6950    3            ELSE
PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:188  
     1471     6951    3             OPMSG_RESP.SUBC2=1;

   6951  7 002572   001000 236003                    LDQ     512,DU
         7 002573   000103 552040 1                  STBQ    OPMSG_RESP+9,'40'O

     1472     6952    3            OPMSG_RESP.NFIL=NFIL;

   6952  7 002574   200034 236100                    LDQ     NFIL,,AUTO
         7 002575   000011 736000                    QLS     9
         7 002576   000103 552030 1                  STBQ    OPMSG_RESP+9,'30'O

     1473     6953    3            OPMSG_RESP.SYSID=SYSID;

   6953  7 002577   200033 720100                    LXL0    SYSID,,AUTO
         7 002600   000073 740000 1                  STX0    OPMSG_RESP+1

     1474     6954    3            OPMSG_RESP.SWSN=KEYIN$->FO$FKEYIN.SWSN;

   6954  7 002601   200003 470500                    LDP0    @FIL_SYSID,,AUTO
         7 002602   000000 471500                    LDP1    0,,PR0
         7 002603   040000 100500                    MLR     fill='040'O
         7 002604   100004 000010                    ADSC9   4,,PR1                   cn=0,n=8
         7 002605   000101 000010 1                  ADSC9   OPMSG_RESP+7             cn=0,n=8

     1475     6955    3            CALL M$WRITE (OCMSG_RESP);

   6955  7 002606   000572 630400 6                  EPPR0   OCMSG_RESP
         7 002607   040001 713400                    CLIMB   write
         7 002610   401400 401760                    pmme    nvectors=4

     1476     6956    3            END;

     1477     6957
     1478     6958    2         RETURN;

   6958  7 002611   200044 221300                    LDX1  ! EXPPRIO+2,,AUTO
         7 002612   000001 702211                    TSX2  ! 1,X1
PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:189  

     1479     6959                               /* Routine to check if this file ought to be processed */
     1480     6960    2   CHK_KFIL2: PROC ALTRET;

   6960  7 002613   200062 741300       CHK_KFIL2    STX1  ! CDAD,,AUTO

     1481     6961    3         IF KEYIN$->FO$FKEYIN.NOTACCT = 0 THEN

   6961  7 002614   200003 470500                    LDP0    @FIL_SYSID,,AUTO
         7 002615   000000 471500                    LDP1    0,,PR0
         7 002616   100006 236100                    LDQ     6,,PR1
         7 002617   777000 316007                    CANQ    -512,DL
         7 002620   002630 601000 7                  TNZ     s:6965

     1482     6962    3          IF FIL$->FO$FIL.OJOB$->FO$JOB.ACCT ~= KEYIN$->FO$FKEYIN.ACCT THEN RETURN;

   6962  7 002621   000000 473400 xsym               LDP3    FO_FIL$
         7 002622   300003 474500                    LDP4    3,,PR3
         7 002623   040100 106500                    CMPC    fill='040'O
         7 002624   400004 000010                    ADSC9   4,,PR4                   cn=0,n=8
         7 002625   100011 000010                    ADSC9   9,,PR1                   cn=0,n=8
         7 002626   002637 600000 7                  TZE     s:6966

   6962  7 002627   000001 702211                    TSX2  ! 1,X1

     1483     6963    3          ELSE;
     1484     6964    3         ELSE
     1485     6965    3          IF FIL$->FO$FIL.OJOB$->FO$JOB.ACCT = KEYIN$->FO$FKEYIN.ACCT THEN RETURN;

   6965  7 002630   000000 473400 xsym               LDP3    FO_FIL$
         7 002631   300003 474500                    LDP4    3,,PR3
         7 002632   040100 106500                    CMPC    fill='040'O
         7 002633   400004 000010                    ADSC9   4,,PR4                   cn=0,n=8
         7 002634   100011 000010                    ADSC9   9,,PR1                   cn=0,n=8
         7 002635   002637 601000 7                  TNZ     s:6966

   6965  7 002636   000001 702211                    TSX2  ! 1,X1
PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:190  

     1486     6966    3         GOTO CHK;

   6966  7 002637   002662 710000 7                  TRA     CHK

     1487     6967
     1488     6968    3   CHK_KFIL3: ENTRY ALTRET;

   6968  7 002640   200062 741300       CHK_KFIL3    STX1  ! CDAD,,AUTO

     1489     6969    3         IF KEYIN$->FO$FKEYIN.NOTFORM = 0 THEN

   6969  7 002641   200003 470500                    LDP0    @FIL_SYSID,,AUTO
         7 002642   000000 471500                    LDP1    0,,PR0
         7 002643   100006 236100                    LDQ     6,,PR1
         7 002644   777000 316007                    CANQ    -512,DL
         7 002645   002654 601000 7                  TNZ     s:6973

     1490     6970    3          IF FIL$->FO$FIL.FORM ~= KEYIN$->FO$FKEYIN.FNAME.FORM THEN RETURN;

   6970  7 002646   000000 473400 xsym               LDP3    FO_FIL$
         7 002647   040100 106500                    CMPC    fill='040'O
         7 002650   300013 000006                    ADSC9   11,,PR3                  cn=0,n=6
         7 002651   100011 000006                    ADSC9   9,,PR1                   cn=0,n=6
         7 002652   002662 600000 7                  TZE     CHK

   6970  7 002653   000001 702211                    TSX2  ! 1,X1

     1491     6971    3          ELSE;
     1492     6972    3         ELSE
     1493     6973    3          IF FIL$->FO$FIL.FORM = KEYIN$->FO$FKEYIN.FNAME.FORM THEN RETURN;

   6973  7 002654   000000 473400 xsym               LDP3    FO_FIL$
         7 002655   040100 106500                    CMPC    fill='040'O
         7 002656   300013 000006                    ADSC9   11,,PR3                  cn=0,n=6
         7 002657   100011 000006                    ADSC9   9,,PR1                   cn=0,n=6
         7 002660   002662 601000 7                  TNZ     CHK
PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:191  

   6973  7 002661   000001 702211                    TSX2  ! 1,X1

   6969  7 002662   002664 710000 7     CHK          TRA     s:6983

     1494     6974
     1495     6975    3   CHK:  ;
     1496     6976
     1497     6977    3   CHK_KFIL: ENTRY ALTRET;

   6977  7 002663   200062 741300       CHK_KFIL     STX1  ! CDAD,,AUTO

     1498     6978                                           /* First check if this console is
     1499     6979                                           able to affect changes to the
     1500     6980                                           specified file.  If none was spec-
     1501     6981                                           ified, the console's wsn should be
     1502     6982                                           in the FWSN field. */
     1503     6983    3         CALL INDEX (I, '?', KEYIN$ -> FO$FKEYIN.WSN);

   6983  7 002664   200003 470500                    LDP0    @FIL_SYSID,,AUTO
         7 002665   000000 471500                    LDP1    0,,PR0
         7 002666   000000 124500                    SCM     mask='000'O
         7 002667   100002 000010                    ADSC9   2,,PR1                   cn=0,n=8
         7 002670   000053 000001 8                  ADSC9   43                       cn=0,n=1
         7 002671   200010 000100                    ARG     I,,AUTO

     1504     6984    3         IF SUBSTR (KEYIN$ -> FO$FKEYIN.WSN, 0, I)

   6984  7 002672   200010 720100                    LXL0    I,,AUTO
         7 002673   040140 106540                    CMPC    fill='040'O
         7 002674   100002 000010                    ADSC9   2,,PR1                   cn=0,n=*X0
         7 002675   100007 000010                    ADSC9   7,,PR1                   cn=0,n=*X0
         7 002676   002700 600000 7                  TZE     s:6989

     1505     6985    3         ~= SUBSTR (KEYIN$ -> FO$FKEYIN.FWSN, 0, I)
     1506     6986    3         THEN
     1507     6987    3          RETURN;
PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:192  

   6987  7 002677   000001 702211                    TSX2  ! 1,X1

     1508     6988
     1509     6989    3         IF KEYIN$->FO$FKEYIN.NOTWSN = 0

   6989  7 002700   100006 236100                    LDQ     6,,PR1
         7 002701   000777 316007                    CANQ    511,DL
         7 002702   002716 601000 7                  TNZ     s:6999

     1510     6990    4         THEN DO;

     1511     6991    4           CALL INDEX (I, '?', KEYIN$ -> FO$FKEYIN.FWSN);

   6991  7 002703   000000 124500                    SCM     mask='000'O
         7 002704   100007 000010                    ADSC9   7,,PR1                   cn=0,n=8
         7 002705   000053 000001 8                  ADSC9   43                       cn=0,n=1
         7 002706   200010 000100                    ARG     I,,AUTO

     1512     6992    4           IF SUBSTR (FIL$ -> FO$FIL.DESTR.WSN, 0, I)

   6992  7 002707   000000 473400 xsym               LDP3    FO_FIL$
         7 002710   200010 720100                    LXL0    I,,AUTO
         7 002711   040140 106540                    CMPC    fill='040'O
         7 002712   300005 000010                    ADSC9   5,,PR3                   cn=0,n=*X0
         7 002713   100007 000010                    ADSC9   7,,PR1                   cn=0,n=*X0
         7 002714   002724 600000 7                  TZE     s:7001

     1513     6993    4           ~= SUBSTR (KEYIN$ -> FO$FKEYIN.FWSN, 0, I)
     1514     6994    4           THEN
     1515     6995    4            RETURN;

   6995  7 002715   000001 702211                    TSX2  ! 1,X1

     1516     6996    4           END;
     1517     6997    3         ELSE
     1518     6998    4           DO;
PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:193  

     1519     6999    4           IF FWSN = FIL$->FO$FIL.DESTR.WSN THEN RETURN;

   6999  7 002716   000000 473400 xsym               LDP3    FO_FIL$
         7 002717   040100 106500                    CMPC    fill='040'O
         7 002720   200050 000010                    ADSC9   FWSN,,AUTO               cn=0,n=8
         7 002721   300005 000010                    ADSC9   5,,PR3                   cn=0,n=8
         7 002722   002724 601000 7                  TNZ     s:7001

   6999  7 002723   000001 702211                    TSX2  ! 1,X1

     1520     7000    4           END;
     1521     7001    3         NFILF=NFILF+1;

   7001  7 002724   200055 235100                    LDA     NFILF,,AUTO
         7 002725   000001 035007                    ADLA    1,DL
         7 002726   200055 755100                    STA     NFILF,,AUTO

     1522     7002    3         ALTRETURN;

   7002  7 002727   000000 702211                    TSX2  ! 0,X1

     1523     7003
     1524     7004    3   CHK_KFIL1: ENTRY ALTRET;

   7004  7 002730   200062 741300       CHK_KFIL1    STX1  ! CDAD,,AUTO

     1525     7005
     1526     7006    3         IF FIL$->FO$FIL.FLG.SPILL THEN RETURN;

   7006  7 002731   000000 470400 xsym               LDP0    FO_FIL$
         7 002732   000015 236100                    LDQ     13,,PR0
         7 002733   000001 316007                    CANQ    1,DL
         7 002734   002736 600000 7                  TZE     s:7007

   7006  7 002735   000001 702211                    TSX2  ! 1,X1

PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:194  
     1527     7007    3         CALL INDEX (I, '?', KEYIN$ -> FO$FKEYIN.WSN);

   7007  7 002736   200003 471500                    LDP1    @FIL_SYSID,,AUTO
         7 002737   100000 473500                    LDP3    0,,PR1
         7 002740   000000 124500                    SCM     mask='000'O
         7 002741   300002 000010                    ADSC9   2,,PR3                   cn=0,n=8
         7 002742   000053 000001 8                  ADSC9   43                       cn=0,n=1
         7 002743   200010 000100                    ARG     I,,AUTO

     1528     7008    3         IF  (KNUMR = -1 OR FIL$->FO$FIL.NUM = KNUM)

   7008  7 002744   200012 220100                    LDX0    KNUM,,AUTO
         7 002745   777777 100003                    CMPX0   -1,DU
         7 002746   002752 600000 7                  TZE     s:7008+6
         7 002747   000012 722100                    LXL2    10,,PR0
         7 002750   200012 102100                    CMPX2   KNUM,,AUTO
         7 002751   002773 601000 7                  TNZ     s:7016
         7 002752   000012 236100                    LDQ     10,,PR0
         7 002753   000022 772000                    QRL     18
         7 002754   200033 116100                    CMPQ    SYSID,,AUTO
         7 002755   002773 601000 7                  TNZ     s:7016
         7 002756   200010 722100                    LXL2    I,,AUTO
         7 002757   040140 106540                    CMPC    fill='040'O
         7 002760   200052 000012                    ADSC9   CWSN,,AUTO               cn=0,n=*X2
         7 002761   000005 000012                    ADSC9   5,,PR0                   cn=0,n=*X2
         7 002762   002767 600000 7                  TZE     s:7013
         7 002763   040100 106500                    CMPC    fill='040'O
         7 002764   200052 000010                    ADSC9   CWSN,,AUTO               cn=0,n=8
         7 002765   000005 000010                    ADSC9   5,,PR0                   cn=0,n=8
         7 002766   002773 601000 7                  TNZ     s:7016

     1529     7009    3         AND SYSID = FIL$->FO$FIL.SYSID
     1530     7010    3         AND (SUBSTR (CWSN, 0, I) = SUBSTR (FIL$ -> FO$FIL.DESTR.WSN, 0, I)
     1531     7011    3         OR CWSN = FIL$->FO$FIL.DESTR.WSN) THEN
     1532     7012    4           DO;

     1533     7013    4           NFILF=NFILF+1;
PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:195  

   7013  7 002767   200055 235100                    LDA     NFILF,,AUTO
         7 002770   000001 035007                    ADLA    1,DL
         7 002771   200055 755100                    STA     NFILF,,AUTO

     1534     7014    4           ALTRETURN;

   7014  7 002772   000000 702211                    TSX2  ! 0,X1

     1535     7015    4           END;
     1536     7016    3         RETURN;

   7016  7 002773   000001 702211                    TSX2  ! 1,X1

     1537     7017    3   END CHK_KFIL2;
     1538     7018    2   END FIL_KEYIN;
     1539     7019        %EJECT;
PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:196  
     1540     7020        /*
     1541     7021            #####   #   #   #####   #####   ####    #   #    ###    #
     1542     7022            #       #   #     #     #       #   #   #   #   #   #   #
     1543     7023            #        # #      #     #       #   #   ##  #   #   #   #
     1544     7024            ####      #       #     ####    ####    # # #   #####   #
     1545     7025            #        # #      #     #       # #     #  ##   #   #   #
     1546     7026            #       #   #     #     #       #  #    #   #   #   #   #
     1547     7027            #####   #   #     #     #####   #   #   #   #   #   #   #####
     1548     7028
     1549     7029
     1550     7030
     1551     7031            #####   #   #   #####   ####     ###    #####    ###
     1552     7032            #       #   #     #     #   #     #     #       #   #
     1553     7033            #       ##  #     #     #   #     #     #       #
     1554     7034            ####    # # #     #     ####      #     ####     ###
     1555     7035            #       #  ##     #     # #       #     #           #
     1556     7036            #       #   #     #     #  #      #     #       #   #
     1557     7037            #####   #   #     #     #   #    ###    #####    ###
     1558     7038
     1559     7039        */
     1560     7040        /*  Order: FOF$FITUPD        Update FIT of a symbiont file
     1561     7041                   FOF$DELETE        Delete an output symbiont file
     1562     7042                   FOF$REMOVE        Remove entry from file table
     1563     7043                   FOF$CHAIN         Put a file on a prio chain
     1564     7044                   FOF$UNCHAIN       Remove a file from a file chain
     1565     7045                   FOF$RERUN         Delete output for jobs being rerun
     1566     7046                   FOF$CANCEL        Abort and delete file(s)
     1567     7047                   FOF$ERASE         Handle user ERASE of a file
     1568     7048                   FOF$SPILLDONE     Handle SPILLDONE event
     1569     7049                   FOF$LASTEXT       Find last entry in a file's extent chain
     1570     7050                   FOF$UNHOLD        Remove files from "HOLD" status
     1571     7051                   FOF$COMPJOB       Handle job completion clean-up
     1572     7052                   FOF$PRIO          Assign file priorities
     1573     7053                   FOF$REPRIO        Re-prio a file
     1574     7054                   FOF$HEXPIRE       Periodically called from main to expire
     1575     7055                                     "HELD" files
     1576     7056        */
PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:197  
     1577     7057        /*F* NAME:         FOF$FITUPD
     1578     7058             PURPOSE:      To update the FIT of an output symbiont file
     1579     7059             DESCRIPTION:  It is sometimes nescessary to update the FIT
     1580     7060                           of an output symbiont file in order to preserve
     1581     7061                           certain status across recoveries.  Examples of
     1582     7062                           this are remembering number of copies printed,
     1583     7063                           and recording the fact that a file inconsistency
     1584     7064                           was encountered.
     1585     7065
     1586     7066                           This routine is called with FO_FIL$ pointing to
     1587     7067                           the file table entry for the file to be updated.
     1588     7068                           The first parameter is a code for what needs to
     1589     7069                           be updated, and the third is the commode chunk
     1590     7070                           number of the actual file management file to be
     1591     7071                           updated.      */
     1592     7072    1   FOF$FITUPD: ENTRY (FIL_SYSID,FIL_NUM,XFIL_CNUM) ALTRET;

   7072  7 002774   000000 700200 xent  FOF$FITUPD   TSX0  ! X66_AUTO_5
         7 002775   000074 000005                    ZERO    60,5

     1593     7073
     1594     7074                                /* FIL_SYSID IS FUCODE */
     1595     7075
     1596     7076    1         FUCODE=XFUCODE;

   7076  7 002776   200003 470500                    LDP0    @FIL_SYSID,,AUTO
         7 002777   000000 235100                    LDA     0,,PR0
         7 003000   200023 755100                    STA     FUCODE,,AUTO

     1597     7077    1         FIL_CNUM=XFIL_CNUM;

   7077  7 003001   200005 471500                    LDP1    @XFIL_CNUM,,AUTO
         7 003002   100000 235100                    LDA     0,,PR1
         7 003003   200025 755100                    STA     FIL_CNUM,,AUTO

     1598     7078    1         CALL UPD_FILE ALTRET(ALTRT);

PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:198  
   7078  7 003004   003652 701000 7                  TSX1    UPD_FILE
         7 003005   000014 702000 7                  TSX2    ALTRT

     1599     7079    1         RETURN;

   7079  7 003006   000000 702200 xent               TSX2  ! X66_ARET

     1600     7080        /**/
     1601     7081        /**/
     1602     7082        /*F* NAME:         FOF$DELETE
     1603     7083             PURPOSE:      To delete an output symbiont file
     1604     7084             DESCRIPTION:  This routine deletes (from :SYMO and from OUTSYM's
     1605     7085                           tables), the file pointed to by FO_FIL$ */
     1606     7086    1   FOF$DELETE: ENTRY ALTRET; /* !!Doesn't ALTRET!! */

   7086  7 003007   000000 700200 xent  FOF$DELETE   TSX0  ! X66_AUTO_5
         7 003010   000074 000005                    ZERO    60,5

     1607     7087
     1608     7088    1         CALL DEL_FILE;

   7088  7 003011   004203 701000 7                  TSX1    DEL_FILE
         7 003012   000000 011000                    NOP     0

     1609     7089    1         RETURN;

   7089  7 003013   000000 702200 xent               TSX2  ! X66_ARET

     1610     7090        /**/
     1611     7091        /**/
     1612     7092        /*F* NAME:         FOF$REMOVE
     1613     7093             PURPOSE:      To remove an output symbiont file from OUTSYM's tables
     1614     7094             DESCRIPTION:  This routine deletes (from OUTSYM's tables) the
     1615     7095                           file pointed to by FO_FIL$, without deleting the
     1616     7096                           file from :SYMO.    */
     1617     7097    1   FOF$REMOVE: ENTRY ALTRET; /* !!Doesn't ALTRET!! */

PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:199  
   7097  7 003014   000000 700200 xent  FOF$REMOVE   TSX0  ! X66_AUTO_5
         7 003015   000074 000005                    ZERO    60,5

     1618     7098
     1619     7099    1         CALL REM_FILE;

   7099  7 003016   004263 701000 7                  TSX1    REM_FILE
         7 003017   000000 011000                    NOP     0

     1620     7100    1         RETURN;

   7100  7 003020   000000 702200 xent               TSX2  ! X66_ARET

     1621     7101        /**/
     1622     7102        /**/
     1623     7103        /*F* NAME:         FOF$CHAIN
     1624     7104             PURPOSE:      To place a file on its prio chain
     1625     7105             DESCRIPTION:  The file pointed to by FO_FIL$ is placed on
     1626     7106                           the priority chain indicated by FO$FIL.PRIO
     1627     7107        */
     1628     7108    1   FOF$CHAIN: ENTRY ALTRET; /* !!Doesn't ALTRET!! */

   7108  7 003021   000000 700200 xent  FOF$CHAIN    TSX0  ! X66_AUTO_5
         7 003022   000074 000005                    ZERO    60,5

     1629     7109
     1630     7110    1         CALL CHAIN_FILE;

   7110  7 003023   004541 701000 7                  TSX1    CHAIN_FILE
         7 003024   000000 011000                    NOP     0

     1631     7111    1         RETURN;

   7111  7 003025   000000 702200 xent               TSX2  ! X66_ARET

     1632     7112        /**/
     1633     7113        /**/
PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:200  
     1634     7114        /*F* NAME:         FOF$UNCHAIN
     1635     7115             PURPOSE:      To remove a file from its prio chain
     1636     7116             DESCRIPTION:  The file pointed to by FO_FIL$ is removed
     1637     7117                           from the priority chain indicated by FO$FIL.PRIO
     1638     7118        */
     1639     7119    1   FOF$UNCHAIN: ENTRY ALTRET; /* !!Doesn't ALTRET!! */

   7119  7 003026   000000 700200 xent  FOF$UNCHAIN  TSX0  ! X66_AUTO_5
         7 003027   000074 000005                    ZERO    60,5

     1640     7120
     1641     7121    1         CALL UNCHAIN_FILE;

   7121  7 003030   004412 701000 7                  TSX1    UNCHAIN_FILE
         7 003031   000000 011000                    NOP     0

     1642     7122    1         RETURN;

   7122  7 003032   000000 702200 xent               TSX2  ! X66_ARET

     1643     7123        /**/
     1644     7124        /**/
     1645     7125        /*F* NAME:         FOF$RERUN
     1646     7126             PURPOSE:      To delete output for jobs being rerun
     1647     7127             DESCRIPTION:  The job is identified by SYSID, and the other
     1648     7128                           2 params passed must be -1 and 0 (resp), to
     1649     7129                           make the code work. */
     1650     7130    1   FOF$RERUN: ENTRY (FIL_SYSID,FIL_NUM,XFIL_CNUM) ALTRET;

   7130  7 003033   000000 700200 xent  FOF$RERUN    TSX0  ! X66_AUTO_5
         7 003034   000074 000005                    ZERO    60,5

     1651     7131
     1652     7132    1         DEVSUBC=FOQR_RRUN#;

   7132  7 003035   000011 235007                    LDA     9,DL
         7 003036   200041 755100                    STA     DEVSUBC,,AUTO
PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:201  

     1653     7133    1         GOTO CANCEL0;

   7133  7 003037   003050 710000 7                  TRA     CANCEL0

     1654     7134        /**/
     1655     7135        /**/
     1656     7136        /*F* NAME:         FOF$CANCEL
     1657     7137             PURPOSE:      To abort & delete a file or files
     1658     7138             DESCRIPTION:  The file or files are identified by SYSID
     1659     7139                           and NUM (NUM=-1 gets all files for a sysid),
     1660     7140                           and are aborted if currently printing, and
     1661     7141                           in any case deleted.  If BATCHFLG is set,
     1662     7142                           this is a batch job whose output is to be
     1663     7143                           cancelled.
     1664     7144                           Thus we must set the OCANCEL bit in the job's flags
     1665     7145                           to cause deletion of subsequent files as they arrive,
     1666     7146                           even if there is no output currently for the job
     1667     7147                           (this last case causes us to create an entry for
     1668     7148                           the job right now, setting the bit).   */
     1669     7149    1   FOF$CANCEL: ENTRY (FIL_SYSID,FIL_NUM,XFIL_CNUM) ALTRET;

   7149  7 003040   000000 700200 xent  FOF$CANCEL   TSX0  ! X66_AUTO_5
         7 003041   000074 000005                    ZERO    60,5

     1670     7150
     1671     7151    1         DEVSUBC=FOQR_CNCL#;

   7151  7 003042   000007 235007                    LDA     7,DL
         7 003043   200041 755100                    STA     DEVSUBC,,AUTO

     1672     7152
     1673     7153    1         IF FIL_NUMR = -1 THEN

   7153  7 003044   200004 470500                    LDP0    @FIL_NUM,,AUTO
         7 003045   000000 235100                    LDA     0,,PR0
         7 003046   000027 115000 xsym               CMPA    B_VECTNIL+23
PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:202  
         7 003047   003140 601000 7                  TNZ     CANCEL2

     1674     7154    2           DO;

   7132  7 003050                       CANCEL0      null
     1675     7155                                /* BATCHFLG IS XFIL_CNUM */
     1676     7156    2   CANCEL0:;
     1677     7157    2           JOB_SYSID=FIL_SYSID;

   7157  7 003050   200003 470500                    LDP0    @FIL_SYSID,,AUTO
         7 003051   000000 235100                    LDA     0,,PR0
         7 003052   200022 755100                    STA     JOB_SYSID,,AUTO

     1678     7158    2           CALL FIND_JOB ALTRET(CANCEL1);

   7158  7 003053   004715 701000 7                  TSX1    FIND_JOB
         7 003054   003121 702000 7                  TSX2    CANCEL1

     1679     7159    2           IF JOB$->FO$JOB.MODE = %M_BATCH#

   7159  7 003055   000000 470400 xsym               LDP0    FO_JOB$
         7 003056   000003 236100                    LDQ     3,,PR0
         7 003057   074000 376003                    ANQ     30720,DU
         7 003060   004000 116003                    CMPQ    2048,DU
         7 003061   003067 601000 7                  TNZ     s:7162
         7 003062   200041 235100                    LDA     DEVSUBC,,AUTO
         7 003063   000007 115007                    CMPA    7,DL
         7 003064   003067 601000 7                  TNZ     s:7162

     1680     7160    2           AND DEVSUBC = FOQR_CNCL# THEN
     1681     7161    2            JOB$->FO$JOB.FLG.OCANCEL='1'B;

   7161  7 003065   200000 236003                    LDQ     65536,DU
         7 003066   000003 256100                    ORSQ    3,,PR0

     1682     7162    2           FIL$=JOB$->FO$JOB.FILHD$;

PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:203  
   7162  7 003067   000001 236100                    LDQ     1,,PR0
         7 003070   000000 756000 xsym               STQ     FO_FIL$

     1683     7163    3             DO WHILE (FIL$ ~= ADDR(NIL));

   7163  7 003071   003116 710000 7                  TRA     s:7171

     1684     7164    3             NXTFIL$=FIL$->FO$FIL.JLNK$;

   7164  7 003072   000000 470400 xsym               LDP0    FO_FIL$
         7 003073   000004 236100                    LDQ     4,,PR0
         7 003074   200035 756100                    STQ     NXTFIL$,,AUTO

     1685     7165    3             DEV$=FIL$->FO$FIL.CDEV$;

   7165  7 003075   000011 236100                    LDQ     9,,PR0
         7 003076   000000 756000 xsym               STQ     FO_DEV$

     1686     7166    3             IF DEV$ = ADDR(NIL) THEN

   7166  7 003077   000001 116000 xsym               CMPQ    B_VECTNIL+1
         7 003100   003104 601000 7                  TNZ     s:7169

     1687     7167    3              CALL DEL_FILE;

   7167  7 003101   004203 701000 7                  TSX1    DEL_FILE
         7 003102   000000 011000                    NOP     0
         7 003103   003114 710000 7                  TRA     s:7170

     1688     7168    3             ELSE
     1689     7169    3              CALL FOD$EVENT (FODE_QUIT#,DEVSUBC);

   7169  7 003104   200041 631500                    EPPR1   DEVSUBC,,AUTO
         7 003105   200071 451500                    STP1    I+2,,AUTO
         7 003106   000002 236000 8                  LDQ     2
         7 003107   200070 756100                    STQ     I+1,,AUTO
         7 003110   200070 630500                    EPPR0   I+1,,AUTO
PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:204  
         7 003111   000020 631400 xsym               EPPR1   B_VECTNIL+16
         7 003112   000000 701000 xent               TSX1    FOD$EVENT
         7 003113   000000 011000                    NOP     0

     1690     7170    3             FIL$=NXTFIL$;

   7170  7 003114   200035 236100                    LDQ     NXTFIL$,,AUTO
         7 003115   000000 756000 xsym               STQ     FO_FIL$

     1691     7171    3             END;

   7171  7 003116   000001 116000 xsym               CMPQ    B_VECTNIL+1
         7 003117   003072 601000 7                  TNZ     s:7164

     1692     7172    2           RETURN;

   7172  7 003120   000000 702200 xent               TSX2  ! X66_ARET

   7164  7 003121                       CANCEL1      null
     1693     7173                                /* DIDN'T FIND JOB ENTRY.  THIS MEANS NO
     1694     7174                                   OUTPUT IS HERE FOR THAT SYSID.  IF
     1695     7175                                   BATCHFLG IS SET, CREATE JOB ENTRY AND
     1696     7176                                   SET CANCEL BIT.  */
     1697     7177    2   CANCEL1:;
     1698     7178    2           IF BATCHFLG = 0 THEN RETURN;

   7178  7 003121   200005 470500                    LDP0    @XFIL_CNUM,,AUTO
         7 003122   000000 235100                    LDA     0,,PR0
         7 003123   003125 601000 7                  TNZ     s:7179

   7178  7 003124   000000 702200 xent               TSX2  ! X66_ARET

     1699     7179    2           JNL=0;

   7179  7 003125   000015 450000 1                  STZ     JNL

     1700     7180    2           CALL ADD_JOB ALTRET(ALTRT);
PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:205  

   7180  7 003126   004736 701000 7                  TSX1    ADD_JOB
         7 003127   000014 702000 7                  TSX2    ALTRT

     1701     7181    2           JOB$->FO$JOB.MODE=%M_BATCH#;

   7181  7 003130   000000 470400 xsym               LDP0    FO_JOB$
         7 003131   000003 236100                    LDQ     3,,PR0
         7 003132   000054 376000 8                  ANQ     44
         7 003133   004000 276003                    ORQ     2048,DU
         7 003134   000003 756100                    STQ     3,,PR0

     1702     7182    2           JOB$->FO$JOB.FLG.OCANCEL='1'B;

   7182  7 003135   200000 236003                    LDQ     65536,DU
         7 003136   000003 256100                    ORSQ    3,,PR0

     1703     7183    2           RETURN;

   7183  7 003137   000000 702200 xent               TSX2  ! X66_ARET

     1704     7184    2           END;
     1705     7185    1         ELSE
     1706     7186    2           DO;

   7180  7 003140                       CANCEL2      null
     1707     7187    2   CANCEL2:;
     1708     7188    2           CALL FIND_FILE ALTRET(ALTRT);

   7188  7 003140   003456 701000 7                  TSX1    FIND_FILE
         7 003141   000014 702000 7                  TSX2    ALTRT

     1709     7189    2           DEV$=FIL$->FO$FIL.CDEV$;

   7189  7 003142   000000 470400 xsym               LDP0    FO_FIL$
         7 003143   000011 236100                    LDQ     9,,PR0
         7 003144   000000 756000 xsym               STQ     FO_DEV$
PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:206  

     1710     7190    2           IF DEV$ = ADDR(NIL) THEN

   7190  7 003145   000001 116000 xsym               CMPQ    B_VECTNIL+1
         7 003146   003152 601000 7                  TNZ     s:7193

     1711     7191    2            CALL DEL_FILE;

   7191  7 003147   004203 701000 7                  TSX1    DEL_FILE
         7 003150   000000 011000                    NOP     0
         7 003151   003162 710000 7                  TRA     s:7194

     1712     7192    2           ELSE
     1713     7193    2            CALL FOD$EVENT (FODE_QUIT#,DEVSUBC);

   7193  7 003152   200041 631500                    EPPR1   DEVSUBC,,AUTO
         7 003153   200071 451500                    STP1    I+2,,AUTO
         7 003154   000002 236000 8                  LDQ     2
         7 003155   200070 756100                    STQ     I+1,,AUTO
         7 003156   200070 630500                    EPPR0   I+1,,AUTO
         7 003157   000020 631400 xsym               EPPR1   B_VECTNIL+16
         7 003160   000000 701000 xent               TSX1    FOD$EVENT
         7 003161   000000 011000                    NOP     0

     1714     7194    2           RETURN;

   7194  7 003162   000000 702200 xent               TSX2  ! X66_ARET

     1715     7195    2           END;
     1716     7196        /**/
     1717     7197        /**/
     1718     7198        /*F* NAME:         FOF$ERASE
     1719     7199             PURPOSE:      To handle a user ERASE of a file
     1720     7200             DESCRIPTION:  The event is passed by the output COOP when
     1721     7201                           the user says erase for a specific file.  It
     1722     7202                           deletes the file even if it's commode and is
     1723     7203                           printing. */
PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:207  
     1724     7204    1   FOF$ERASE: ENTRY(FIL_SYSID,FIL_NUM,XFIL_CNUM) ALTRET;

   7204  7 003163   000000 700200 xent  FOF$ERASE    TSX0  ! X66_AUTO_5
         7 003164   000074 000005                    ZERO    60,5

     1725     7205
     1726     7206    1         DEVSUBC=FOQR_CDEL#;

   7206  7 003165   000013 235007                    LDA     11,DL
         7 003166   200041 755100                    STA     DEVSUBC,,AUTO

     1727     7207    1         GOTO CANCEL2;

   7207  7 003167   003140 710000 7                  TRA     CANCEL2

     1728     7208        /**/
     1729     7209        /**/
     1730     7210        /*F* NAME:         FOF$SPILLDONE
     1731     7211             PURPOSE:      To handle the SPILLDONE event
     1732     7212             DESCRIPTION:  The file identified by SYSID and NUM must
     1733     7213                           be marked for spill.  If it is, then it
     1734     7214                           is dealt with according to the specified
     1735     7215                           disposition. */
     1736     7216    1   FOF$SPILLDONE: ENTRY (FIL_SYSID,FIL_NUM,XFIL_CNUM) ALTRET;

   7216  7 003170   000000 700200 xent  FOF$SPILLDO* TSX0  ! X66_AUTO_5
         7 003171   000074 000005                    ZERO    60,5

     1737     7217
     1738     7218                                /* SPILLDISP IS XFIL_CNUM */
     1739     7219    1         CALL FIND_FILE ALTRET(ALTRT);

   7219  7 003172   003456 701000 7                  TSX1    FIND_FILE
         7 003173   000014 702000 7                  TSX2    ALTRT

     1740     7220    1         IF FIL$->FO$FIL.FLG.SPILL = '0'B THEN ALTRETURN;

PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:208  
   7220  7 003174   000000 470400 xsym               LDP0    FO_FIL$
         7 003175   000015 236100                    LDQ     13,,PR0
         7 003176   000001 316007                    CANQ    1,DL
         7 003177   003201 601000 7                  TNZ     s:7221

   7220  7 003200   000000 702200 xent               TSX2  ! X66_AALT

     1741     7221    2           DO CASE (SPILLDISP);

   7221  7 003201   200005 471500                    LDP1    @XFIL_CNUM,,AUTO
         7 003202   100000 235100                    LDA     0,,PR1
         7 003203   000003 115007                    CMPA    3,DL
         7 003204   003206 602005 7                  TNC     s:7221+5,AL
         7 003205   003232 710000 7                  TRA     s:7237
         7 003206   003230 710000 7                  TRA     s:7234
         7 003207   003214 710000 7                  TRA     s:7227
         7 003210   003211 710000 7                  TRA     s:7224

     1742     7222
     1743     7223    2             CASE (%FD_REMOVE#);

     1744     7224    2               CALL DEL_FILE;

   7224  7 003211   004203 701000 7                  TSX1    DEL_FILE
         7 003212   000000 011000                    NOP     0
         7 003213   003232 710000 7                  TRA     s:7237

     1745     7225
     1746     7226    2             CASE (%FD_SPILLED#);

     1747     7227    2               FUCODE=FOFU_SPIL#;

   7227  7 003214   000006 235007                    LDA     6,DL
         7 003215   200023 755100                    STA     FUCODE,,AUTO

     1748     7228    2               CALL UPD_FILE1;

PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:209  
   7228  7 003216   003662 701000 7                  TSX1    UPD_FILE1
         7 003217   000000 011000                    NOP     0

     1749     7229    2               CALL UNCHAIN_FILE;

   7229  7 003220   004412 701000 7                  TSX1    UNCHAIN_FILE
         7 003221   000000 011000                    NOP     0

     1750     7230    2               FIL$->FO$FIL.PRIO=FOPR_SPILLED#;

   7230  7 003222   000000 470400 xsym               LDP0    FO_FIL$
         7 003223   000002 236007                    LDQ     2,DL
         7 003224   000016 552104                    STBQ    14,'04'O,PR0

     1751     7231    2               CALL CHAIN_FILE;

   7231  7 003225   004541 701000 7                  TSX1    CHAIN_FILE
         7 003226   000000 011000                    NOP     0
         7 003227   003232 710000 7                  TRA     s:7237

     1752     7232
     1753     7233    2             CASE (%FD_REQUEUE#);

     1754     7234    2               FIL$->FO$FIL.FLG.SPILL='0'B;

   7234  7 003230   000055 236000 8                  LDQ     45
         7 003231   000015 356100                    ANSQ    13,,PR0

     1755     7235
     1756     7236    2           END;

     1757     7237    1         RETURN;

   7237  7 003232   000000 702200 xent               TSX2  ! X66_ARET

     1758     7238        /**/
     1759     7239        /**/
PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:210  
     1760     7240        /*F* NAME:         FOF$LASTEXT
     1761     7241             PURPOSE:      To find the last entry in a file's extent chain
     1762     7242             DESCRIPTION:  The passed pointer is set to point to the last
     1763     7243                           entry in the extent chain of the file pointed
     1764     7244                           to by FO_FIL$.  If none, the routine ALTRETs. */
     1765     7245    1   FOF$LASTEXT: ENTRY(FIL_SYSID) ALTRET;

   7245  7 003233   000000 700200 xent  FOF$LASTEXT  TSX0  ! X66_AUTO_5
         7 003234   000074 000005                    ZERO    60,5

     1766     7246
     1767     7247                                /* PASSED_EXT$ IS FIL_SYSID */
     1768     7248    1         CALL SET_LASTEXT ALTRET(ALTRT);

   7248  7 003235   004655 701000 7                  TSX1    SET_LASTEXT
         7 003236   000014 702000 7                  TSX2    ALTRT

     1769     7249    1         PASSED_EXT$=EXT$;

   7249  7 003237   200016 236100                    LDQ     EXT$,,AUTO
         7 003240   200003 470500                    LDP0    @FIL_SYSID,,AUTO
         7 003241   000000 756100                    STQ     0,,PR0

     1770     7250    1         RETURN;

   7250  7 003242   000000 702200 xent               TSX2  ! X66_ARET

     1771     7251        /**/
     1772     7252        /**/
     1773     7253        /*F* NAME:         FOF$UNHOLD
     1774     7254             PURPOSE:      To remove files from 'hold'
     1775     7255             DESCRIPTION:  The request is in the form of
     1776     7256                           a SYSID and either a single NUM, or a NUM
     1777     7257                           of -1 (indicating all files for that SYSID).
     1778     7258                           The unheld bit is set in the file frame, and
     1779     7259                           the FIT is updated to reflect the unheld status.
     1780     7260                           (This allows UNHOLD to be issued even when the
PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:211  
     1781     7261                           file has not gone into hold yet).  Then, if the
     1782     7262                           file is in the HOLD queue, we move it to make
     1783     7263                           it available for output. */
     1784     7264    1   FOF$UNHOLD: ENTRY (FIL_SYSID,FIL_NUM) ALTRET;

   7264  7 003243   000000 700200 xent  FOF$UNHOLD   TSX0  ! X66_AUTO_5
         7 003244   000074 000005                    ZERO    60,5

     1785     7265
     1786     7266    1         JOB_SYSID=FIL_SYSID;

   7266  7 003245   200003 470500                    LDP0    @FIL_SYSID,,AUTO
         7 003246   000000 235100                    LDA     0,,PR0
         7 003247   200022 755100                    STA     JOB_SYSID,,AUTO

     1787     7267    1         CALL FIND_JOB ALTRET(ALTRT);

   7267  7 003250   004715 701000 7                  TSX1    FIND_JOB
         7 003251   000014 702000 7                  TSX2    ALTRT

     1788     7268    1         FIL$=JOB$->FO$JOB.FILHD$;

   7268  7 003252   000000 470400 xsym               LDP0    FO_JOB$
         7 003253   000001 236100                    LDQ     1,,PR0
         7 003254   000000 756000 xsym               STQ     FO_FIL$

     1789     7269    2           DO WHILE (FIL$ ~= ADDR(NIL));

   7269  7 003255   003300 710000 7                  TRA     s:7279

     1790     7270    2           IF FIL_NUMR = -1 THEN                 /* Was a file number specified? */

   7270  7 003256   200004 470500                    LDP0    @FIL_NUM,,AUTO
         7 003257   000000 235100                    LDA     0,,PR0
         7 003260   000027 115000 xsym               CMPA    B_VECTNIL+23
         7 003261   003265 601000 7                  TNZ     s:7273

PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:212  
     1791     7271    2            CALL UNHOLD;

   7271  7 003262   003303 701000 7                  TSX1    UNHOLD
         7 003263   000000 011000                    NOP     0
         7 003264   003275 710000 7                  TRA     s:7278

     1792     7272    2           ELSE                      /* A file num specified, is this that file? */
     1793     7273    2            IF FIL_NUM = FIL$->FO$FIL.NUM THEN

   7273  7 003265   000000 471400 xsym               LDP1    FO_FIL$
         7 003266   100012 236100                    LDQ     10,,PR1
         7 003267   777777 376007                    ANQ     -1,DL
         7 003270   000000 116100                    CMPQ    0,,PR0
         7 003271   003275 601000 7                  TNZ     s:7278

     1794     7274    3              DO;

     1795     7275    3              CALL UNHOLD;

   7275  7 003272   003303 701000 7                  TSX1    UNHOLD
         7 003273   000000 011000                    NOP     0

     1796     7276    3              RETURN;

   7276  7 003274   000000 702200 xent               TSX2  ! X66_ARET

     1797     7277    3              END;
     1798     7278    2           FIL$=FIL$->FO$FIL.JLNK$;

   7278  7 003275   000000 470400 xsym               LDP0    FO_FIL$
         7 003276   000004 236100                    LDQ     4,,PR0
         7 003277   000000 756000 xsym               STQ     FO_FIL$

     1799     7279    2           END;

   7279  7 003300   000001 116000 xsym               CMPQ    B_VECTNIL+1
         7 003301   003256 601000 7                  TNZ     s:7270
PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:213  

     1800     7280    1         RETURN;

   7280  7 003302   000000 702200 xent               TSX2  ! X66_ARET

     1801     7281        /**/
     1802     7282    1   UNHOLD: PROC ALTRET;

   7282  7 003303   200044 741300       UNHOLD       STX1  ! EXPPRIO+2,,AUTO

     1803     7283        /**/
     1804     7284    2         FIL$->FO$FIL.FLG.UNHELD='1'B;

   7284  7 003304   000000 470400 xsym               LDP0    FO_FIL$
         7 003305   001000 236007                    LDQ     512,DL
         7 003306   000015 256100                    ORSQ    13,,PR0

     1805     7285    2         FUCODE=FOFU_UNHL#;

   7285  7 003307   000007 235007                    LDA     7,DL
         7 003310   200023 755100                    STA     FUCODE,,AUTO

     1806     7286    2         CALL UPD_FILE1;

   7286  7 003311   003662 701000 7                  TSX1    UPD_FILE1
         7 003312   000000 011000                    NOP     0

     1807     7287    2         IF FIL$->FO$FIL.PRIO ~= FOPR_HOLD# THEN RETURN;

   7287  7 003313   000000 470400 xsym               LDP0    FO_FIL$
         7 003314   000016 236100                    LDQ     14,,PR0
         7 003315   000777 316007                    CANQ    511,DL
         7 003316   003321 600000 7                  TZE     s:7288

   7287  7 003317   200044 221300                    LDX1  ! EXPPRIO+2,,AUTO
         7 003320   000001 702211                    TSX2  ! 1,X1

PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:214  
     1808     7288    2         CALL UNCHAIN_FILE;

   7288  7 003321   004412 701000 7                  TSX1    UNCHAIN_FILE
         7 003322   000000 011000                    NOP     0

     1809     7289    2         CALL PRIO_FILE;

   7289  7 003323   003506 701000 7                  TSX1    PRIO_FILE
         7 003324   000000 011000                    NOP     0

     1810     7290    2         CALL CHAIN_FILE;

   7290  7 003325   004541 701000 7                  TSX1    CHAIN_FILE
         7 003326   000000 011000                    NOP     0

     1811     7291    2         ALTRETURN;

   7291  7 003327   200044 221300                    LDX1  ! EXPPRIO+2,,AUTO
         7 003330   000000 702211                    TSX2  ! 0,X1

     1812     7292    2   END UNHOLD;
     1813     7293        /**/
     1814     7294        /**/
     1815     7295        /*F* NAME:         FOF$FINDJOB
     1816     7296             PURPOSE:      To find the JOB frame for a SYSID
     1817     7297             DESCRIPTION:  The parameter is the SYSID, and the routine
     1818     7298                           returns with FO_JOB$ pointing to the job frame.
     1819     7299                           The ALTRET is taken if no such SYSID is listed
     1820     7300                           in the JOB tables.  */
     1821     7301    1   FOF$FINDJOB: ENTRY (FIL_SYSID) ALTRET;

   7301  7 003331   000000 700200 xent  FOF$FINDJOB  TSX0  ! X66_AUTO_5
         7 003332   000074 000005                    ZERO    60,5

     1822     7302
     1823     7303                                /* PARAMETER IS SYSID */
     1824     7304    1         JOB_SYSID=XJOB_SYSID;
PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:215  

   7304  7 003333   200003 470500                    LDP0    @FIL_SYSID,,AUTO
         7 003334   000000 235100                    LDA     0,,PR0
         7 003335   200022 755100                    STA     JOB_SYSID,,AUTO

     1825     7305    1         CALL FIND_JOB ALTRET(ALTRT);

   7305  7 003336   004715 701000 7                  TSX1    FIND_JOB
         7 003337   000014 702000 7                  TSX2    ALTRT

     1826     7306    1         RETURN;

   7306  7 003340   000000 702200 xent               TSX2  ! X66_ARET

     1827     7307        /**/
     1828     7308        /**/
     1829     7309        /*F* NAME:         FOF$COMPJOB
     1830     7310             PURPOSE:      To handle completion of a 'job'
     1831     7311             DESCRIPTION:  This routine is called by FOO$OUTSYM when he
     1832     7312                           receives the 'batch job off' event from
     1833     7313                           MONKEY, and discovers that all the job's print
     1834     7314                           files have been printed.  JOB_COMPLETED is
     1835     7315                           called to do the requisite cleanup.  FO_JOB$
     1836     7316                           points to the JOB frame.  */
     1837     7317    1   FOF$COMPJOB: ENTRY ALTRET; /* !!Doesn't ALTRET!! */

   7317  7 003341   000000 700200 xent  FOF$COMPJOB  TSX0  ! X66_AUTO_5
         7 003342   000074 000005                    ZERO    60,5

     1838     7318
     1839     7319    1         CALL JOB_COMPLETED;

   7319  7 003343   005105 701000 7                  TSX1    JOB_COMPLETED
         7 003344   000000 011000                    NOP     0

     1840     7320    1         RETURN;

PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:216  
   7320  7 003345   000000 702200 xent               TSX2  ! X66_ARET

     1841     7321        /**/
     1842     7322        /**/
     1843     7323        /*F* NAME:         FOF$PRIO
     1844     7324             PURPOSE:      To assign a priority to a file
     1845     7325             DESCRIPTION:  The file pointed to by FO_FIL$ is assigned its
     1846     7326                           appropriate priority, as required by its assigned
     1847     7327                           priority (FO$FIL.IPRIO) or granule count (FO$FIL.
     1848     7328                           GRANS), according as we are scheduling by assigned
     1849     7329                           prio or by granule count.  */
     1850     7330
     1851     7331    1   FOF$PRIO: ENTRY ALTRET; /* !!Doesn't ALTRET!! */

   7331  7 003346   000000 700200 xent  FOF$PRIO     TSX0  ! X66_AUTO_5
         7 003347   000074 000005                    ZERO    60,5

     1852     7332
     1853     7333    1         CALL PRIO_FILE;

   7333  7 003350   003506 701000 7                  TSX1    PRIO_FILE
         7 003351   000000 011000                    NOP     0

     1854     7334    1         RETURN;

   7334  7 003352   000000 702200 xent               TSX2  ! X66_ARET

     1855     7335        /**/
     1856     7336        /**/
     1857     7337        /*F* NAME:         FOF$REPRIO
     1858     7338             PURPOSE:      To re-prioritize a file
     1859     7339             DESCRIPTION:  The file pointed to by FO_FIL$ has its priority
     1860     7340                           calculated according to current parameters. If
     1861     7341                           the result is the same prio chain it is currently
     1862     7342                           on, nothing is done, else it is removed from its
     1863     7343                           current prio chain and placed in the one in which
     1864     7344                           it belongs. */
PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:217  
     1865     7345    1   FOF$REPRIO: ENTRY ALTRET; /* !!Doesn't ALTRET!! */

   7345  7 003353   000000 700200 xent  FOF$REPRIO   TSX0  ! X66_AUTO_5
         7 003354   000074 000005                    ZERO    60,5

     1866     7346
     1867     7347    1         CALL REPRIO_FILE;

   7347  7 003355   003524 701000 7                  TSX1    REPRIO_FILE
         7 003356   000000 011000                    NOP     0

     1868     7348    1         RETURN;

   7348  7 003357   000000 702200 xent               TSX2  ! X66_ARET

     1869     7349        /**/
     1870     7350        /**/
     1871     7351        /*F* NAME:         FOF$HEXPIRE
     1872     7352             PURPOSE:      To forcibly expire HELD files
     1873     7353             DESCRIPTION:  Called every once in a while from FOO$OUTSYM.
     1874     7354                           Checks all held files, and expires them into
     1875     7355                           printable state if they were submitted
     1876     7356                           too long ago (as defined by VLR_SYMBINFO.
     1877     7357                           HOLDEXPIRE - set by CONTROL).  */
     1878     7358    1   FOF$HEXPIRE: ENTRY ALTRET;

   7358  7 003360   000000 700200 xent  FOF$HEXPIRE  TSX0  ! X66_AUTO_5
         7 003361   000074 000005                    ZERO    60,5

     1879     7359
     1880     7360    1         IF FO_SYMBINFO.HOLDEXPIRE# = 0 THEN RETURN;

   7360  7 003362   000022 235000 xsym               LDA     FO_SYMBINFO+18
         7 003363   003365 601000 7                  TNZ     s:7361

   7360  7 003364   000000 702200 xent               TSX2  ! X66_ARET

PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:218  
     1881     7361    1         CALL M$TIME (GETUTS) ALTRET(ALTRT);

   7361  7 003365   000612 630400 6                  EPPR0   GETUTS
         7 003366   420004 713400                    CLIMB   alt,+8196
         7 003367   402000 401760                    pmme    nvectors=5
         7 003370   000014 702000 7                  TSX2    ALTRT

     1882     7362        /* compute a time stamp for the current time less the expiry interval.  Any
     1883     7363           held files submitted before this instant are to be unheld.  */
     1884     7364    1        CALL XUD$UTS_ADJUST (CURUTS, CURUTS, -FO_SYMBINFO.HOLDEXPIRE#*%UTS_CSEC_HOUR#)
              7364                  ;

   7364  7 003371   000000 236003                    LDQ     0,DU
         7 003372   000022 136000 xsym               SBLQ    FO_SYMBINFO+18
         7 003373   000056 402000 8                  MPY     46
         7 003374   200070 756100                    STQ     I+1,,AUTO
         7 003375   200070 630500                    EPPR0   I+1,,AUTO
         7 003376   200073 450500                    STP0    I+4,,AUTO
         7 003377   000057 236000 8                  LDQ     47
         7 003400   200072 756100                    STQ     I+3,,AUTO
         7 003401   200071 756100                    STQ     I+2,,AUTO
         7 003402   200071 630500                    EPPR0   I+2,,AUTO
         7 003403   000021 631400 xsym               EPPR1   B_VECTNIL+17
         7 003404   000000 701000 xent               TSX1    XUD$UTS_ADJUST
         7 003405   000000 011000                    NOP     0

     1885     7365    1   REXP: FIL$=FO_Q.FILHD$(FOPR_HOLD#);

   7365  7 003406   000004 236000 xsym  REXP         LDQ     FO_Q+4
         7 003407   000000 756000 xsym               STQ     FO_FIL$

     1886     7366    2           DO WHILE (FIL$ ~= ADDR(NIL));

   7366  7 003410   003422 710000 7                  TRA     s:7370

     1887     7367    2           IF FIL$->FO$FIL.CREATED < CURUTS THEN

PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:219  
   7367  7 003411   000000 470400 xsym               LDP0    FO_FIL$
         7 003412   000020 236100                    LDQ     16,,PR0
         7 003413   000016 116000 1                  CMPQ    CURUTS
         7 003414   003417 603000 7                  TRC     s:7369

     1888     7368    2            CALL UNHOLD ALTRET(REXP); /* Always ALTRETs */

   7368  7 003415   003303 701000 7                  TSX1    UNHOLD
         7 003416   003406 702000 7                  TSX2    REXP

     1889     7369    2           FIL$=FIL$->FO$FIL.LNK$;

   7369  7 003417   000000 470400 xsym               LDP0    FO_FIL$
         7 003420   000000 236100                    LDQ     0,,PR0
         7 003421   000000 756000 xsym               STQ     FO_FIL$

     1890     7370    2           END;

   7370  7 003422   000001 116000 xsym               CMPQ    B_VECTNIL+1
         7 003423   003411 601000 7                  TNZ     s:7367

     1891     7371        /**/
     1892     7372    2           DO EXPPRIO = 0 TO FOPR_MAX#;

   7372  7 003424   200042 450100                    STZ     EXPPRIO,,AUTO

     1893     7373    2           IF EXPPRIO ~= FOPR_HOLD# THEN

   7373  7 003425   200042 235100                    LDA     EXPPRIO,,AUTO
         7 003426   003450 600000 7                  TZE     s:7383

     1894     7374    3             DO;

     1895     7375    3             FIL$=FO_Q.FILHD$(EXPPRIO);

   7375  7 003427   000004 236005 xsym               LDQ     FO_Q+4,AL
         7 003430   000000 756000 xsym               STQ     FO_FIL$
PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:220  

     1896     7376    4               DO WHILE (FIL$ ~= ADDR(NIL));

   7376  7 003431   003446 710000 7                  TRA     s:7381

     1897     7377    4               IF FIL$->FO$FIL.FLG.SAP

   7377  7 003432   000000 470400 xsym               LDP0    FO_FIL$
         7 003433   000015 236100                    LDQ     13,,PR0
         7 003434   000040 316007                    CANQ    32,DL
         7 003435   003443 600000 7                  TZE     s:7380
         7 003436   000020 236100                    LDQ     16,,PR0
         7 003437   000016 116000 1                  CMPQ    CURUTS
         7 003440   003443 603000 7                  TRC     s:7380

     1898     7378    4               AND FIL$->FO$FIL.CREATED < CURUTS THEN
     1899     7379    4                CALL UNHOLD;

   7379  7 003441   003303 701000 7                  TSX1    UNHOLD
         7 003442   000000 011000                    NOP     0

     1900     7380    4               FIL$=FIL$->FO$FIL.LNK$;

   7380  7 003443   000000 470400 xsym               LDP0    FO_FIL$
         7 003444   000000 236100                    LDQ     0,,PR0
         7 003445   000000 756000 xsym               STQ     FO_FIL$

     1901     7381    4               END;

   7381  7 003446   000001 116000 xsym               CMPQ    B_VECTNIL+1
         7 003447   003432 601000 7                  TNZ     s:7377

     1902     7382    3             END;

     1903     7383    2           END;

   7383  7 003450   200042 235100                    LDA     EXPPRIO,,AUTO
PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:221  
         7 003451   000001 035007                    ADLA    1,DL
         7 003452   200042 755100                    STA     EXPPRIO,,AUTO
         7 003453   000023 115007                    CMPA    19,DL
         7 003454   003425 602000 7                  TNC     s:7373

     1904     7384    1         RETURN;

   7384  7 003455   000000 702200 xent               TSX2  ! X66_ARET

     1905     7385        %EJECT;
PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:222  
     1906     7386        /*
     1907     7387             ###    #   #   #####   #####   ####    #   #    ###    #
     1908     7388              #     #   #     #     #       #   #   #   #   #   #   #
     1909     7389              #     ##  #     #     #       #   #   ##  #   #   #   #
     1910     7390              #     # # #     #     ####    ####    # # #   #####   #
     1911     7391              #     #  ##     #     #       # #     #  ##   #   #   #
     1912     7392              #     #   #     #     #       #  #    #   #   #   #   #
     1913     7393             ###    #   #     #     #####   #   #   #   #   #   #   #####
     1914     7394
     1915     7395
     1916     7396
     1917     7397            ####     ###    #   #   #####    ###    #   #   #####    ###
     1918     7398            #   #   #   #   #   #     #       #     #   #   #       #   #
     1919     7399            #   #   #   #   #   #     #       #     ##  #   #       #
     1920     7400            ####    #   #   #   #     #       #     # # #   ####     ###
     1921     7401            # #     #   #   #   #     #       #     #  ##   #           #
     1922     7402            #  #    #   #   #   #     #       #     #   #   #       #   #
     1923     7403            #   #    ###     ###      #      ###    #   #   #####    ###
     1924     7404
     1925     7405        */
     1926     7406        /*
     1927     7407            Order: FIND_FILE         Locate a file on the file table
     1928     7408                   PRIO_FILE         Assign a priority to a file
     1929     7409                   BAD_FILE          Sent operator a bad file message
     1930     7410                   UPD_FILE          Update a file's FIT
     1931     7411                   DEL_FILE          Delete a file from all chains and :SYMO
     1932     7412                   REM_FILE          Remove extent table entries for a file
     1933     7413                   UNCHAIN_FILE      Remove a file from it's prio chain
     1934     7414                   CHAIN_FILE        Add a file to a prio chain
     1935     7415                   SET_LASTEXT       Find file's last extent in extent chain
     1936     7416        */
     1937     7417        /**************************************
     1938     7418         **************************************
     1939     7419                    FIND_FILE
     1940     7420         **************************************
     1941     7421         **************************************/
     1942     7422        /*D* NAME:         FIND_FILE
PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:223  
     1943     7423             PURPOSE:      To find a file in OUTSYM's file tables
     1944     7424             DESCRIPTION:  FIL_SYSID, FIL_NUM identify the file to be
     1945     7425                           found.  It is searched for by looking at the
     1946     7426                           job list for a job frame bearing sysid FIL_SYSID,
     1947     7427                           and then in the job's file list for a file entry
     1948     7428                           bearing FIL_NUM.  If found, FIL$ is returned
     1949     7429                           pointing to the file frame.  Else the routine
     1950     7430                           ALTRETs. */
     1951     7431    1   FIND_FILE: PROC ALTRET;

   7431  7 003456   200054 741300       FIND_FILE    STX1  ! RSUBC,,AUTO

     1952     7432    2         JOB_SYSID=FIL_SYSID;

   7432  7 003457   200003 470500                    LDP0    @FIL_SYSID,,AUTO
         7 003460   000000 235100                    LDA     0,,PR0
         7 003461   200022 755100                    STA     JOB_SYSID,,AUTO

     1953     7433    2         CALL FIND_JOB ALTRET(ALTRT);

   7433  7 003462   004715 701000 7                  TSX1    FIND_JOB
         7 003463   003504 702000 7                  TSX2    ALTRT

     1954     7434    2         FIL$=JOB$->FO$JOB.FILHD$;

   7434  7 003464   000000 470400 xsym               LDP0    FO_JOB$
         7 003465   000001 236100                    LDQ     1,,PR0
         7 003466   000000 756000 xsym               STQ     FO_FIL$

     1955     7435    3           DO WHILE (FIL$ ~= ADDR(NIL));

   7435  7 003467   003502 710000 7                  TRA     s:7438

     1956     7436    3           IF FIL_NUM = FIL$->FO$FIL.NUM THEN RETURN;

   7436  7 003470   200004 470500                    LDP0    @FIL_NUM,,AUTO
         7 003471   000000 471400 xsym               LDP1    FO_FIL$
PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:224  
         7 003472   100012 236100                    LDQ     10,,PR1
         7 003473   777777 376007                    ANQ     -1,DL
         7 003474   000000 116100                    CMPQ    0,,PR0
         7 003475   003500 601000 7                  TNZ     s:7437

   7436  7 003476   200054 221300                    LDX1  ! RSUBC,,AUTO
         7 003477   000001 702211                    TSX2  ! 1,X1

     1957     7437    3           FIL$=FIL$->FO$FIL.JLNK$;

   7437  7 003500   100004 236100                    LDQ     4,,PR1
         7 003501   000000 756000 xsym               STQ     FO_FIL$

     1958     7438    3           END;

   7438  7 003502   000001 116000 xsym               CMPQ    B_VECTNIL+1
         7 003503   003470 601000 7                  TNZ     s:7436

   7435  7 003504                       ALTRT        null
     1959     7439    2   ALTRT:;
     1960     7440    2         ALTRETURN;

   7440  7 003504   200054 221300                    LDX1  ! RSUBC,,AUTO
         7 003505   000000 702211                    TSX2  ! 0,X1

     1961     7441    2   END FIND_FILE;
     1962     7442        /**************************************
     1963     7443         **************************************
     1964     7444                    PRIO_FILE
     1965     7445         **************************************
     1966     7446         **************************************/
     1967     7447        /*D* NAME:         PRIO_FILE
     1968     7448             PURPOSE:      To assign a priority to a file
     1969     7449             DESCRIPTION:  The file is pointed to by FIL$.
     1970     7450                           FO$FIL.IPRIO is the submittal priority.  See the
     1971     7451                           comments for VLR_SYMBINFO in UM_CP6_C for a
     1972     7452                           description of the priority assignment algorithm. */
PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:225  
     1973     7453    1   PRIO_FILE: PROC;

   7453  7 003506   200056 741300       PRIO_FILE    STX1  ! ESUBC2,,AUTO

     1974     7454    2         CALL GET_PRIO;

   7454  7 003507   003551 701000 7                  TSX1    GET_PRIO
         7 003510   000000 011000                    NOP     0

     1975     7455    2         FIL$->FO$FIL.PRIO=PRIO;

   7455  7 003511   000000 470400 xsym               LDP0    FO_FIL$
         7 003512   200021 236100                    LDQ     PRIO,,AUTO
         7 003513   000016 552104                    STBQ    14,'04'O,PR0

     1976     7456    2         IF PRIO ~= FOPR_HOLD# AND FIL$->FO$FIL.SAPCOPIES = 0 THEN

   7456  7 003514   003522 600000 7                  TZE     s:7458
         7 003515   000016 236100                    LDQ     14,,PR0
         7 003516   777000 316007                    CANQ    -512,DL
         7 003517   003522 601000 7                  TNZ     s:7458

     1977     7457    2          FIL$->FO$FIL.FLG.SAP = '0'B;

   7457  7 003520   000060 236000 8                  LDQ     48
         7 003521   000015 356100                    ANSQ    13,,PR0

     1978     7458    2         RETURN;

   7458  7 003522   200056 221300                    LDX1  ! ESUBC2,,AUTO
         7 003523   000001 702211                    TSX2  ! 1,X1

     1979     7459    2   END PRIO_FILE;
     1980     7460        /*D* NAME:         REPRIO_FILE
     1981     7461             PURPOSE:      See FOF$REPRIO
     1982     7462             DESCRIPTION:  See FOF$REPRIO */
     1983     7463    1   REPRIO_FILE: PROC;
PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:226  

   7463  7 003524   200054 741300       REPRIO_FILE  STX1  ! RSUBC,,AUTO

     1984     7464    2         CALL GET_PRIO;

   7464  7 003525   003551 701000 7                  TSX1    GET_PRIO
         7 003526   000000 011000                    NOP     0

     1985     7465    2         IF PRIO = FIL$->FO$FIL.PRIO THEN RETURN;

   7465  7 003527   000000 470400 xsym               LDP0    FO_FIL$
         7 003530   000016 236100                    LDQ     14,,PR0
         7 003531   000777 376007                    ANQ     511,DL
         7 003532   200021 116100                    CMPQ    PRIO,,AUTO
         7 003533   003536 601000 7                  TNZ     s:7467

   7465  7 003534   200054 221300                    LDX1  ! RSUBC,,AUTO
         7 003535   000001 702211                    TSX2  ! 1,X1

     1986     7466              %JLOCK;

   7467  7 003536   000000 054000 xsym               AOS     FO_Q

     1987     7469    2         CALL UNCHAIN_FILE;

   7469  7 003537   004412 701000 7                  TSX1    UNCHAIN_FILE
         7 003540   000000 011000                    NOP     0

     1988     7470    2         CALL PRIO_FILE;

   7470  7 003541   003506 701000 7                  TSX1    PRIO_FILE
         7 003542   000000 011000                    NOP     0

     1989     7471    2         CALL CHAIN_FILE;

   7471  7 003543   004541 701000 7                  TSX1    CHAIN_FILE
         7 003544   000000 011000                    NOP     0
PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:227  

     1990     7472              %JUNLOCK;

   7473  7 003545   000001 336007                    LCQ     1,DL
         7 003546   000000 056000 xsym               ASQ     FO_Q

     1991     7475    2         RETURN;

   7475  7 003547   200054 221300                    LDX1  ! RSUBC,,AUTO
         7 003550   000001 702211                    TSX2  ! 1,X1

     1992     7476    2   END REPRIO_FILE;
     1993     7477        /**/
     1994     7478    1   GET_PRIO: PROC;

   7478  7 003551   200060 741300       GET_PRIO     STX1  ! FIRST_ONE,,AUTO

     1995     7479    2         PRIO = FIL$->FO$FIL.IPRIO;

   7479  7 003552   000000 470400 xsym               LDP0    FO_FIL$
         7 003553   000021 236100                    LDQ     17,,PR0
         7 003554   000777 376007                    ANQ     511,DL
         7 003555   200021 756100                    STQ     PRIO,,AUTO

     1996     7480    2         IF PRIO > 15 THEN PRIO=15;

   7480  7 003556   000020 116007                    CMPQ    16,DL
         7 003557   003562 602000 7                  TNC     s:7481

   7480  7 003560   000017 235007                    LDA     15,DL
         7 003561   200021 755100                    STA     PRIO,,AUTO

     1997     7481    2         IF FIL$->FO$FIL.FLG.CPRIO = '0'B THEN

   7481  7 003562   000015 236100                    LDQ     13,,PR0
         7 003563   000020 316007                    CANQ    16,DL
         7 003564   003622 601000 7                  TNZ     GOTPRIO
PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:228  

     1998     7482    3           DO;

     1999     7483    3           CALL M$MONINFO (GET_SYMBINFO);   /* GRANSCHED# can change via CONTROL */

   7483  7 003565   000000 630400 xsym               EPPR0   GET_SYMBINFO
         7 003566   020023 713400                    CLIMB   8211
         7 003567   402400 401760                    pmme    nvectors=6

     2000     7484    3           IF FO_SYMBINFO.GRANSCHED# ~= 0

   7484  7 003570   000000 235000 xsym               LDA     FO_SYMBINFO
         7 003571   003622 600000 7                  TZE     GOTPRIO
         7 003572   200021 236100                    LDQ     PRIO,,AUTO
         7 003573   003622 600000 7                  TZE     GOTPRIO
         7 003574   000017 116007                    CMPQ    15,DL
         7 003575   003622 600000 7                  TZE     GOTPRIO

     2001     7485    3           AND PRIO ~= 0
     2002     7486    3           AND PRIO ~= 15 THEN
     2003     7487    4             DO;

     2004     7488    5               DO PRIO = 1 TO 14;

   7488  7 003576   000001 235007                    LDA     1,DL
         7 003577   200021 755100                    STA     PRIO,,AUTO

     2005     7489    5               IF FIL$->FO$FIL.GRANS*FIL$->FO$FIL.COPIES > FO_SYMBINFO.GRANLOW#(PRIO)
              7489                        THEN

   7489  7 003600   000000 470400 xsym               LDP0    FO_FIL$
         7 003601   000007 236100                    LDQ     7,,PR0
         7 003602   777777 376007                    ANQ     -1,DL
         7 003603   200070 756100                    STQ     I+1,,AUTO
         7 003604   000015 236100                    LDQ     13,,PR0
         7 003605   000022 772000                    QRL     18
         7 003606   200070 402100                    MPY     I+1,,AUTO
PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:229  
         7 003607   200021 720100                    LXL0    PRIO,,AUTO
         7 003610   000001 116010 xsym               CMPQ    FO_SYMBINFO+1,X0
         7 003611   003613 600000 7                  TZE     s:7491
         7 003612   003622 603000 7                  TRC     GOTPRIO

     2006     7490    5                GOTO GOTPRIO;
     2007     7491    5               END;

   7491  7 003613   200021 235100                    LDA     PRIO,,AUTO
         7 003614   000001 035007                    ADLA    1,DL
         7 003615   200021 755100                    STA     PRIO,,AUTO
         7 003616   000017 115007                    CMPA    15,DL
         7 003617   003600 602000 7                  TNC     s:7489

     2008     7492    4             PRIO = 14;

   7492  7 003620   000016 236007                    LDQ     14,DL
         7 003621   200021 756100                    STQ     PRIO,,AUTO

   7492  7 003622                       GOTPRIO      null
     2009     7493    4   GOTPRIO:  ;
     2010     7494    4             END;

     2011     7495    3           END;

     2012     7496    2         PRIO=PRIO+FOPR_P0#;

   7496  7 003622   200021 235100                    LDA     PRIO,,AUTO
         7 003623   000003 035007                    ADLA    3,DL
         7 003624   200021 755100                    STA     PRIO,,AUTO

     2013     7497    2         RETURN;

   7497  7 003625   200060 221300                    LDX1  ! FIRST_ONE,,AUTO
         7 003626   000001 702211                    TSX2  ! 1,X1

     2014     7498    2   END GET_PRIO;
PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:230  
     2015     7499        /**************************************
     2016     7500         **************************************
     2017     7501                    BAD_FILE
     2018     7502         **************************************
     2019     7503         **************************************/
     2020     7504    1   BAD_FILE: PROC;

   7504  7 003627   200054 741300       BAD_FILE     STX1  ! RSUBC,,AUTO

     2021     7505    2         OPMSG_FILBAD.SUBC=FIL_BADC;

   7505  7 003630   200024 236100                    LDQ     FIL_BADC,,AUTO
         7 003631   000022 736000                    QLS     18
         7 003632   000056 552020 1                  STBQ    OPMSG_FILBAD+6,'20'O

     2022     7506    2         OPMSG_FILBAD.SYSID=FIL_SYSID;

   7506  7 003633   200003 470500                    LDP0    @FIL_SYSID,,AUTO
         7 003634   000000 720100                    LXL0    0,,PR0
         7 003635   000051 740000 1                  STX0    OPMSG_FILBAD+1

     2023     7507    2         OPMSG_FILBAD.NUM=FIL_NUM;

   7507  7 003636   200004 471500                    LDP1    @FIL_NUM,,AUTO
         7 003637   100000 722100                    LXL2    0,,PR1
         7 003640   000056 442000 1                  SXL2    OPMSG_FILBAD+6

     2024     7508    2         OPMSG_FILBAD.CNUM=FIL_CNUM;

   7508  7 003641   200025 723100                    LXL3    FIL_CNUM,,AUTO
         7 003642   000057 743000 1                  STX3    OPMSG_FILBAD+7

     2025     7509    2         OPMSG_FILBAD.ACCT=FIL_ACCT;

   7509  7 003643   200030 237100                    LDAQ    FIL_ACCT,,AUTO
         7 003644   000060 757000 1                  STAQ    OPMSG_FILBAD+8

PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:231  
     2026     7510    2         CALL M$WRITE (OCMSG_FILBAD);

   7510  7 003645   000134 630400 6                  EPPR0   OCMSG_FILBAD
         7 003646   040001 713400                    CLIMB   write
         7 003647   401400 401760                    pmme    nvectors=4

     2027     7511    2         RETURN;

   7511  7 003650   200054 221300                    LDX1  ! RSUBC,,AUTO
         7 003651   000001 702211                    TSX2  ! 1,X1

     2028     7512    2   END BAD_FILE;
     2029     7513        /**************************************
     2030     7514         **************************************
     2031     7515                    UPD_FILE
     2032     7516         **************************************
     2033     7517         **************************************/
     2034     7518        /*D* NAME:         UPD_FILE
     2035     7519             PURPOSE:      To update a file's FIT
     2036     7520             DESCRIPTION:  The file is pointed to by FIL$, and the commode
     2037     7521                           segment to be updated identified by FIL_CNUM.
     2038     7522                           FUCODE is the code for what to insert into the
     2039     7523                           FIT. */
     2040     7524    1   UPD_FILE: PROC ALTRET;

   7524  7 003652   200062 741300       UPD_FILE     STX1  ! CDAD,,AUTO

     2041     7525    2         CALL BINCHAR(FO_FILENAME.CNUM ,FIL_CNUM);

   7525  7 003653   200025 235100                    LDA     FIL_CNUM,,AUTO
         7 003654   000044 773000                    LRL     36
         7 003655   200070 757100                    STAQ    I+1,,AUTO
         7 003656   000000 301500                    BTD
         7 003657   200070 000010                    NDSC9   I+1,,AUTO                cn=0,s=lsgnf,sf=0,n=8
         7 003660   000004 030003 xsym               NDSC9   FO_FILENAME+4            cn=0,s=nosgn,sf=0,n=3

     2042     7526    2         GOTO UPD0;
PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:232  

   7526  7 003661   003671 710000 7                  TRA     UPD0

     2043     7527    2   UPD_FILE1: ENTRY ALTRET;

   7527  7 003662   200062 741300       UPD_FILE1    STX1  ! CDAD,,AUTO

     2044     7528    2         CALL BINCHAR(FO_FILENAME.CNUM,0);

   7528  7 003663   000000 235003                    LDA     0,DU
         7 003664   000044 773000                    LRL     36
         7 003665   200070 757100                    STAQ    I+1,,AUTO
         7 003666   000000 301500                    BTD
         7 003667   200070 000010                    NDSC9   I+1,,AUTO                cn=0,s=lsgnf,sf=0,n=8
         7 003670   000004 030003 xsym               NDSC9   FO_FILENAME+4            cn=0,s=nosgn,sf=0,n=3

   7528  7 003671                       UPD0         null
     2045     7529    2   UPD0: ;
     2046     7530    2         CALL BINCHAR(FO_FILENAME.SYSID,FIL$->FO$FIL.SYSID);

   7530  7 003671   000000 470400 xsym               LDP0    FO_FIL$
         7 003672   000012 236100                    LDQ     10,,PR0
         7 003673   000022 772000                    QRL     18
         7 003674   000000 235003                    LDA     0,DU
         7 003675   200070 757100                    STAQ    I+1,,AUTO
         7 003676   000000 301500                    BTD
         7 003677   200070 000010                    NDSC9   I+1,,AUTO                cn=0,s=lsgnf,sf=0,n=8
         7 003700   000001 030006 xsym               NDSC9   FO_FILENAME+1            cn=0,s=nosgn,sf=0,n=6

     2047     7531    2         CALL BINCHAR(FO_FILENAME.NUM  ,FIL$->FO$FIL.NUM );

   7531  7 003701   000012 236100                    LDQ     10,,PR0
         7 003702   777777 376007                    ANQ     -1,DL
         7 003703   000000 235003                    LDA     0,DU
         7 003704   200070 757100                    STAQ    I+1,,AUTO
         7 003705   000000 301500                    BTD
         7 003706   200070 000010                    NDSC9   I+1,,AUTO                cn=0,s=lsgnf,sf=0,n=8
PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:233  
         7 003707   000002 430006 xsym               NDSC9   FO_FILENAME+2            cn=2,s=nosgn,sf=0,n=6

     2048     7532    2         FO_FILENAME.BOOTID=FIL$->FO$FIL.BOOTID;

   7532  7 003710   000021 236100                    LDQ     17,,PR0
         7 003711   000011 772000                    QRL     9
         7 003712   000000 552034 xsym               STBQ    FO_FILENAME,'34'O

     2049     7533    2         CALL M$OPEN (OPEN_FILE1_UPD) ALTRET(ALTRT);

   7533  7 003713   000036 630400 6                  EPPR0   OPEN_FILE1_UPD
         7 003714   450000 713400                    CLIMB   alt,open
         7 003715   410400 401760                    pmme    nvectors=18
         7 003716   004201 702000 7                  TSX2    ALTRT

     2050     7534    2         DEST$=PINCRW(ADDR(FO_FITBUF1),SIZEW(FM$GRAN));

   7534  7 003717   000013 236000 8                  LDQ     11
         7 003720   200032 756100                    STQ     DEST$,,AUTO

     2051     7535    2         CLOSE_FILE1_CHGATTR.PROCATTR_=VECTOR(NIL);

   7535  7 003721   000062 237000 8                  LDAQ    50
         7 003722   000126 757000 1                  STAQ    CLOSE_FILE1_CHGATTR+18

     2052     7536    2         CALL XSF$LOCCODP (DEST$,13) ALTRET(A14);

   7536  7 003723   000021 236000 8                  LDQ     17
         7 003724   200071 756100                    STQ     I+2,,AUTO
         7 003725   200032 630500                    EPPR0   DEST$,,AUTO
         7 003726   200070 450500                    STP0    I+1,,AUTO
         7 003727   200070 630500                    EPPR0   I+1,,AUTO
         7 003730   000020 631400 xsym               EPPR1   B_VECTNIL+16
         7 003731   000000 701000 xent               TSX1    XSF$LOCCODP
         7 003732   004123 702000 7                  TSX2    A14

     2053     7537    2         CLOSE_FILE1_CHGATTR.PROCATTR_=
PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:234  

   7537  7 003733   000061 235000 8                  LDA     49
         7 003734   200032 236100                    LDQ     DEST$,,AUTO
         7 003735   777777 036003                    ADLQ    -1,DU
         7 003736   000126 757000 1                  STAQ    CLOSE_FILE1_CHGATTR+18

     2054     7538    2         VECTOR(PINCRW(DEST$,-1)->FS$FITDEST);
     2055     7539    2         PINCRW(DEST$,-1)->FS$FITDEST.SIZ=SIZEW(FS$DEST);

   7539  7 003737   000032 235007                    LDA     26,DL
         7 003740   200032 470500                    LDP0    DEST$,,AUTO
         7 003741   077777 755100                    STA     -1,,PR0

     2056     7540
     2057     7541    3           DO CASE (FUCODE);

   7541  7 003742   200023 236100                    LDQ     FUCODE,,AUTO
         7 003743   000011 116007                    CMPQ    9,DL
         7 003744   003746 602006 7                  TNC     s:7541+4,QL
         7 003745   004123 710000 7                  TRA     A14
         7 003746   003757 710000 7                  TRA     s:7547
         7 003747   003762 710000 7                  TRA     s:7554
         7 003750   004112 710000 7                  TRA     SETBAD
         7 003751   004076 710000 7                  TRA     s:7599
         7 003752   003776 710000 7                  TRA     s:7562
         7 003753   004017 710000 7                  TRA     s:7576
         7 003754   004030 710000 7                  TRA     s:7582
         7 003755   004106 710000 7                  TRA     s:7605
         7 003756   004010 710000 7                  TRA     s:7570

     2058     7542
     2059     7543
     2060     7544                                /* FILE INCONSISTENCY */
     2061     7545    3             CASE (FOFU_FINC#);

     2062     7546
     2063     7547    3               FIL_BADC=FOFE_FINC#;
PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:235  

   7547  7 003757   000012 235007                    LDA     10,DL
         7 003760   200024 755100                    STA     FIL_BADC,,AUTO

     2064     7548    3               GOTO SETBAD;

   7548  7 003761   004112 710000 7                  TRA     SETBAD

     2065     7549
     2066     7550
     2067     7551                                /* UPDATE NUMBER OF COPIES */
     2068     7552    3             CASE (FOFU_COPY#);

     2069     7553
     2070     7554    3               DEST$->FS$DEST.COPIES=FIL$->FO$FIL.COPIES;

   7554  7 003762   200032 470500                    LDP0    DEST$,,AUTO
         7 003763   000000 471400 xsym               LDP1    FO_FIL$
         7 003764   100007 236100                    LDQ     7,,PR1
         7 003765   000022 736000                    QLS     18
         7 003766   000005 552120                    STBQ    5,'20'O,PR0

     2071     7555    3               DEST$->FS$DEST.SAPCOPIES=FIL$->FO$FIL.SAPCOPIES;

   7555  7 003767   200032 470500                    LDP0    DEST$,,AUTO
         7 003770   100016 236100                    LDQ     14,,PR1
         7 003771   000005 552110                    STBQ    5,'10'O,PR0

     2072     7556    3               DEST$->FS$DEST.OUTSYMF.CHKPTD = '0'B;

   7556  7 003772   200032 470500                    LDP0    DEST$,,AUTO
         7 003773   000064 236000 8                  LDQ     52
         7 003774   000012 356100                    ANSQ    10,,PR0
         7 003775   004123 710000 7                  TRA     A14

     2073     7557
     2074     7558
PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:236  
     2075     7559                                /* UPDATE PRIO */
     2076     7560    3             CASE (FOFU_PRIO#);

     2077     7561
     2078     7562    3               DEST$->FS$DEST.OUTSYMF.CPRIO='1'B;

   7562  7 003776   200032 470500                    LDP0    DEST$,,AUTO
         7 003777   004000 236003                    LDQ     2048,DU
         7 004000   000012 256100                    ORSQ    10,,PR0

     2079     7563    3               DEST$->FS$DEST.NEWPRIO=KEYIN$->FO$FKEYIN.PRIO;

   7563  7 004001   200003 470500                    LDP0    @FIL_SYSID,,AUTO
         7 004002   000000 471500                    LDP1    0,,PR0
         7 004003   200032 473500                    LDP3    DEST$,,AUTO
         7 004004   100001 236100                    LDQ     1,,PR1
         7 004005   000011 736000                    QLS     9
         7 004006   300012 552110                    STBQ    10,'10'O,PR3
         7 004007   004123 710000 7                  TRA     A14

     2080     7564
     2081     7565
     2082     7566
     2083     7567                                /* UPDATE PRIO TO 0 */
     2084     7568    3             CASE (FOFU_PRIO0#);

     2085     7569
     2086     7570    3               DEST$->FS$DEST.OUTSYMF.CPRIO='1'B;

   7570  7 004010   200032 470500                    LDP0    DEST$,,AUTO
         7 004011   004000 236003                    LDQ     2048,DU
         7 004012   000012 256100                    ORSQ    10,,PR0

     2087     7571    3               DEST$->FS$DEST.NEWPRIO=0;

   7571  7 004013   200032 470500                    LDP0    DEST$,,AUTO
         7 004014   000000 236003                    LDQ     0,DU
PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:237  
         7 004015   000012 552110                    STBQ    10,'10'O,PR0
         7 004016   004123 710000 7                  TRA     A14

     2088     7572
     2089     7573
     2090     7574                                /* UPDATE WSN */
     2091     7575    3             CASE (FOFU_SWIT#);

     2092     7576    3               DEST$->FS$DEST.OUTSYMF.CWSN='1'B;

   7576  7 004017   200032 470500                    LDP0    DEST$,,AUTO
         7 004020   002000 236003                    LDQ     1024,DU
         7 004021   000012 256100                    ORSQ    10,,PR0

     2093     7577    3               DEST$->FS$DEST.NEWWSN=FIL$->FO$FIL.DESTR.WSN;

   7577  7 004022   000000 470400 xsym               LDP0    FO_FIL$
         7 004023   200032 471500                    LDP1    DEST$,,AUTO
         7 004024   040100 100500                    MLR     fill='040'O
         7 004025   000005 000010                    ADSC9   5,,PR0                   cn=0,n=8
         7 004026   100013 000010                    ADSC9   11,,PR1                  cn=0,n=8
         7 004027   004123 710000 7                  TRA     A14

     2094     7578
     2095     7579
     2096     7580                                /* MARK AS SPILLED & DELETE DATA */
     2097     7581    3             CASE (FOFU_SPIL#);

     2098     7582    3               DEST$->FS$DEST.OUTSYMF.SPILLED='1'B;

   7582  7 004030   200032 470500                    LDP0    DEST$,,AUTO
         7 004031   001000 236003                    LDQ     512,DU
         7 004032   000012 256100                    ORSQ    10,,PR0

     2099     7583    4                 DO I = 0 TO FIL$->FO$FIL.HICNUM;

   7583  7 004033   200010 450100                    STZ     I,,AUTO
PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:238  
         7 004034   004067 710000 7                  TRA     A1+3

     2100     7584    4                 IF I ~= 0 THEN

   7584  7 004035   200010 235100                    LDA     I,,AUTO
         7 004036   004050 600000 7                  TZE     s:7589

     2101     7585    5                   DO;

     2102     7586    5                   CALL BINCHAR(FO_FILENAME.CNUM,I);

   7586  7 004037   000044 773000                    LRL     36
         7 004040   200070 757100                    STAQ    I+1,,AUTO
         7 004041   000000 301500                    BTD
         7 004042   200070 000010                    NDSC9   I+1,,AUTO                cn=0,s=lsgnf,sf=0,n=8
         7 004043   000004 030003 xsym               NDSC9   FO_FILENAME+4            cn=0,s=nosgn,sf=0,n=3

     2103     7587    5                   CALL M$OPEN (OPEN_FILE1) ALTRET(A1);

   7587  7 004044   000500 630400 6                  EPPR0   OPEN_FILE1
         7 004045   450000 713400                    CLIMB   alt,open
         7 004046   410400 401760                    pmme    nvectors=18
         7 004047   004064 702000 7                  TSX2    A1

     2104     7588    5                   END;

     2105     7589    4                 CALL M$CLOSE (CLOSE_FILE1) ALTRET(A1);

   7589  7 004050   000000 630400 6                  EPPR0   CLOSE_FILE1
         7 004051   450001 713400                    CLIMB   alt,close
         7 004052   406000 401760                    pmme    nvectors=13
         7 004053   004064 702000 7                  TSX2    A1

     2106     7590    4                 CALL M$OPEN (CREATE_FILE2) ALTRET(A1);

   7590  7 004054   000314 630400 6                  EPPR0   CREATE_FILE2
         7 004055   450000 713400                    CLIMB   alt,open
PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:239  
         7 004056   410400 401760                    pmme    nvectors=18
         7 004057   004064 702000 7                  TSX2    A1

     2107     7591    4                 CALL M$CLOSE (CLOSE_FILE2) ALTRET(A1);

   7591  7 004060   000256 630400 6                  EPPR0   CLOSE_FILE2
         7 004061   450001 713400                    CLIMB   alt,close
         7 004062   406000 401760                    pmme    nvectors=13
         7 004063   004064 702000 7                  TSX2    A1

   7591  7 004064                       A1           null
     2108     7592    4   A1:           ;
     2109     7593    4                 END;

   7593  7 004064   200010 235100                    LDA     I,,AUTO
         7 004065   000001 035007                    ADLA    1,DL
         7 004066   200010 755100                    STA     I,,AUTO
         7 004067   000000 470400 xsym               LDP0    FO_FIL$
         7 004070   000016 236100                    LDQ     14,,PR0
         7 004071   000022 772000                    QRL     18
         7 004072   200010 116100                    CMPQ    I,,AUTO
         7 004073   004035 603000 7                  TRC     s:7584

     2110     7594    3               RETURN;

   7594  7 004074   200062 221300                    LDX1  ! CDAD,,AUTO
         7 004075   000001 702211                    TSX2  ! 1,X1

     2111     7595
     2112     7596
     2113     7597                                /* CHECKPOINT SAVE KEYIN */
     2114     7598    3             CASE (FOFU_CHKP#);

     2115     7599    3               DEST$->FS$DEST.OUTSYMF.CHKPTD='1'B;

   7599  7 004076   200032 470500                    LDP0    DEST$,,AUTO
         7 004077   010000 236003                    LDQ     4096,DU
PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:240  
         7 004100   000012 256100                    ORSQ    10,,PR0

     2116     7600    3               DEST$->FS$DEST.CHKPBR=FIL$->FO$FIL.CHKPBR;

   7600  7 004101   000000 470400 xsym               LDP0    FO_FIL$
         7 004102   000017 236100                    LDQ     15,,PR0
         7 004103   200032 471500                    LDP1    DEST$,,AUTO
         7 004104   100011 756100                    STQ     9,,PR1
         7 004105   004123 710000 7                  TRA     A14

     2117     7601
     2118     7602
     2119     7603                                /* UNHOLD COMMAND FROM USER */
     2120     7604    3             CASE (FOFU_UNHL#);

     2121     7605    3               DEST$->FS$DEST.OUTSYMF.UNHELD='1'B;

   7605  7 004106   200032 470500                    LDP0    DEST$,,AUTO
         7 004107   000400 236003                    LDQ     256,DU
         7 004110   000012 256100                    ORSQ    10,,PR0
         7 004111   004123 710000 7                  TRA     A14

     2122     7606
     2123     7607
     2124     7608                                /* ERROR DURING ADD */
     2125     7609    3             CASE (FOFU_BFIL#);

   7605  7 004112                       SETBAD       null
     2126     7610
     2127     7611    3   SETBAD:     ;
     2128     7612    3               DEST$->FS$DEST.OUTSYMF.BAD='1'B;

   7612  7 004112   200032 470500                    LDP0    DEST$,,AUTO
         7 004113   400000 236003                    LDQ     -131072,DU
         7 004114   000012 256100                    ORSQ    10,,PR0

     2129     7613    3               DEST$->FS$DEST.OUTSYMF.CODE=FIL_BADC;
PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:241  

   7613  7 004115   200032 470500                    LDP0    DEST$,,AUTO
         7 004116   200024 236100                    LDQ     FIL_BADC,,AUTO
         7 004117   000037 736000                    QLS     31
         7 004120   000012 676100                    ERQ     10,,PR0
         7 004121   360000 376003                    ANQ     122880,DU
         7 004122   000012 656100                    ERSQ    10,,PR0

     2130     7614
     2131     7615
     2132     7616    3           END;

   7604  7 004123                       A14          null
     2133     7617    2   A14:  ;
     2134     7618    3           DO CASE (FUCODE);

   7618  7 004123   200023 235100                    LDA     FUCODE,,AUTO
         7 004124   000010 115007                    CMPA    8,DL
         7 004125   004127 602005 7                  TNC     A14+4,AL
         7 004126   004173 710000 7                  TRA     s:7644
         7 004127   004142 710000 7                  TRA     s:7629
         7 004130   004137 710000 7                  TRA     s:7624
         7 004131   004145 710000 7                  TRA     NEWNAME
         7 004132   004137 710000 7                  TRA     s:7624
         7 004133   004137 710000 7                  TRA     s:7624
         7 004134   004137 710000 7                  TRA     s:7624
         7 004135   004137 710000 7                  TRA     s:7624
         7 004136   004137 710000 7                  TRA     s:7624

     2135     7619
     2136     7620
     2137     7621    3             CASE (FOFU_COPY#,FOFU_CHKP#,FOFU_PRIO#,

     2138     7622    3         FOFU_SWIT#,FOFU_SPIL#,FOFU_UNHL#);
     2139     7623
     2140     7624    3               CLOSE_FILE1_CHGATTR.NAME_=VECTOR(NIL);

PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:242  
   7624  7 004137   000062 237000 8                  LDAQ    50
         7 004140   000112 757000 1                  STAQ    CLOSE_FILE1_CHGATTR+6
         7 004141   004173 710000 7                  TRA     s:7644

     2141     7625
     2142     7626
     2143     7627    3             CASE (FOFU_FINC#);

     2144     7628
     2145     7629    3               FIL_BADC=FOFE_FINC#;

   7629  7 004142   000012 236007                    LDQ     10,DL
         7 004143   200024 756100                    STQ     FIL_BADC,,AUTO

     2146     7630    3               GOTO NEWNAME;

   7630  7 004144   004145 710000 7                  TRA     NEWNAME

     2147     7631
     2148     7632    3             CASE (FOFU_BFIL#);

   7630  7 004145                       NEWNAME      null
     2149     7633
     2150     7634    3   NEWNAME:    ;
     2151     7635    3               NEW_FILENAME.CNT=LENGTHC(NEW_FILENAME.PREFIX)+FO_FILENAME.CNT;

   7635  7 004145   000000 236000 xsym               LDQ     FO_FILENAME
         7 004146   000033 772000                    QRL     27
         7 004147   000012 036007                    ADLQ    10,DL
         7 004150   000033 736000                    QLS     27
         7 004151   000032 552040 1                  STBQ    NEW_FILENAME,'40'O

     2152     7636    3               CALL BINCHAR(NEW_FILENAME.PREFIX.CODE,FIL_BADC);

   7636  7 004152   200024 236100                    LDQ     FIL_BADC,,AUTO
         7 004153   000000 235003                    LDA     0,DU
         7 004154   200070 757100                    STAQ    I+1,,AUTO
PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:243  
         7 004155   000000 301500                    BTD
         7 004156   200070 000010                    NDSC9   I+1,,AUTO                cn=0,s=lsgnf,sf=0,n=8
         7 004157   000034 030002 1                  NDSC9   NEW_FILENAME+2           cn=0,s=nosgn,sf=0,n=2

     2153     7637    3               NEW_FILENAME.SYSID=FO_FILENAME.SYSID;

   7637  7 004160   040000 100400                    MLR     fill='040'O
         7 004161   000001 000006 xsym               ADSC9   FO_FILENAME+1            cn=0,n=6
         7 004162   000034 600006 1                  ADSC9   NEW_FILENAME+2           cn=3,n=6

     2154     7638    3               NEW_FILENAME.NUM  =FO_FILENAME.NUM;

   7638  7 004163   040000 100400                    MLR     fill='040'O
         7 004164   000002 400006 xsym               ADSC9   FO_FILENAME+2            cn=2,n=6
         7 004165   000036 200006 1                  ADSC9   NEW_FILENAME+4           cn=1,n=6

     2155     7639    3               NEW_FILENAME.CNUM =FO_FILENAME.CNUM;

   7639  7 004166   040000 100400                    MLR     fill='040'O
         7 004167   000004 000003 xsym               ADSC9   FO_FILENAME+4            cn=0,n=3
         7 004170   000037 600003 1                  ADSC9   NEW_FILENAME+5           cn=3,n=3

     2156     7640    3               CLOSE_FILE1_CHGATTR.NAME_=VECTOR(NEW_FILENAME);

   7640  7 004171   000066 237000 8                  LDAQ    54
         7 004172   000112 757000 1                  STAQ    CLOSE_FILE1_CHGATTR+6

     2157     7641
     2158     7642
     2159     7643    3           END;

     2160     7644    2         CALL M$CLOSE (CLOSE_FILE1_CHGATTR) ALTRET(ALTRT);

   7644  7 004173   000104 630400 1                  EPPR0   CLOSE_FILE1_CHGATTR
         7 004174   450001 713400                    CLIMB   alt,close
         7 004175   406000 401760                    pmme    nvectors=13
         7 004176   004201 702000 7                  TSX2    ALTRT
PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:244  

     2161     7645    2         RETURN;

   7645  7 004177   200062 221300                    LDX1  ! CDAD,,AUTO
         7 004200   000001 702211                    TSX2  ! 1,X1

   7640  7 004201                       ALTRT        null
     2162     7646    2   ALTRT:;
     2163     7647    2         ALTRETURN;

   7647  7 004201   200062 221300                    LDX1  ! CDAD,,AUTO
         7 004202   000000 702211                    TSX2  ! 0,X1

     2164     7648    2   END UPD_FILE;
     2165     7649        /**************************************
     2166     7650         **************************************
     2167     7651                    DEL_FILE
     2168     7652                    REM_FILE
     2169     7653         **************************************
     2170     7654         **************************************/
     2171     7655        /*D* NAME:         DEL_FILE
     2172     7656             PURPOSE:      To delete an OUTSYM file entry
     2173     7657             DESCRIPTION:  The entry is pointed to by FO_FIL$.
     2174     7658                           The file (all commode segments) is deleted from :SYMO.
     2175     7659                           The entry's extents are released, it is removed
     2176     7660                           from its prio chain and its job chain, and
     2177     7661                           then it is released. */
     2178     7662
     2179     7663    1   DEL_FILE: PROC;

   7663  7 004203   200062 741300       DEL_FILE     STX1  ! CDAD,,AUTO

     2180     7664        /**
     2181     7665         **
     2182     7666         **      DELETE THE FILE FROM :SYMO
     2183     7667         **
     2184     7668         **/
PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:245  
     2185     7669    2         DELNAME.BOOTID=FIL$->FO$FIL.BOOTID;

   7669  7 004204   000000 470400 xsym               LDP0    FO_FIL$
         7 004205   000021 236100                    LDQ     17,,PR0
         7 004206   000011 772000                    QRL     9
         7 004207   000043 552034 1                  STBQ    DELNAME,'34'O

     2186     7670    2         CALL BINCHAR(DELNAME.SYSID,FIL$->FO$FIL.SYSID);

   7670  7 004210   000012 236100                    LDQ     10,,PR0
         7 004211   000022 772000                    QRL     18
         7 004212   000000 235003                    LDA     0,DU
         7 004213   200070 757100                    STAQ    I+1,,AUTO
         7 004214   000000 301500                    BTD
         7 004215   200070 000010                    NDSC9   I+1,,AUTO                cn=0,s=lsgnf,sf=0,n=8
         7 004216   000044 030006 1                  NDSC9   DELNAME+1                cn=0,s=nosgn,sf=0,n=6

     2187     7671    2         CALL BINCHAR(DELNAME.NUM,FIL$->FO$FIL.NUM);

   7671  7 004217   000012 236100                    LDQ     10,,PR0
         7 004220   777777 376007                    ANQ     -1,DL
         7 004221   000000 235003                    LDA     0,DU
         7 004222   200070 757100                    STAQ    I+1,,AUTO
         7 004223   000000 301500                    BTD
         7 004224   200070 000010                    NDSC9   I+1,,AUTO                cn=0,s=lsgnf,sf=0,n=8
         7 004225   000045 430006 1                  NDSC9   DELNAME+2                cn=2,s=nosgn,sf=0,n=6

     2188     7672    2         CALL M$SPRIV (EFTPRIV) ALTRET(A0);

   7672  7 004226   000606 630400 6                  EPPR0   EFTPRIV
         7 004227   420012 713400                    CLIMB   alt,+8202
         7 004230   400000 401760                    pmme    nvectors=1
         7 004231   004232 702000 7                  TSX2    A0

   7671  7 004232                       A0           null
     2189     7673    2   A0:   ;
     2190     7674    3           DO I =  0 TO FIL$->FO$FIL.HICNUM;
PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:246  

   7674  7 004232   200010 450100                    STZ     I,,AUTO
         7 004233   004251 710000 7                  TRA     A1+3

     2191     7675    3           CALL BINCHAR(DELNAME.CNUM,I);

   7675  7 004234   200010 235100                    LDA     I,,AUTO
         7 004235   000044 773000                    LRL     36
         7 004236   200070 757100                    STAQ    I+1,,AUTO
         7 004237   000000 301500                    BTD
         7 004240   200070 000010                    NDSC9   I+1,,AUTO                cn=0,s=lsgnf,sf=0,n=8
         7 004241   000047 030003 1                  NDSC9   DELNAME+4                cn=0,s=nosgn,sf=0,n=3

     2192     7676    3           CALL M$OPEN(DELETE_FILE2) ALTRET(A1);

   7676  7 004242   000406 630400 6                  EPPR0   DELETE_FILE2
         7 004243   450000 713400                    CLIMB   alt,open
         7 004244   410400 401760                    pmme    nvectors=18
         7 004245   004246 702000 7                  TSX2    A1

   7675  7 004246                       A1           null
     2193     7677    3   A1:     ;
     2194     7678    3           END;

   7678  7 004246   200010 235100                    LDA     I,,AUTO
         7 004247   000001 035007                    ADLA    1,DL
         7 004250   200010 755100                    STA     I,,AUTO
         7 004251   000000 470400 xsym               LDP0    FO_FIL$
         7 004252   000016 236100                    LDQ     14,,PR0
         7 004253   000022 772000                    QRL     18
         7 004254   200010 116100                    CMPQ    I,,AUTO
         7 004255   004234 603000 7                  TRC     s:7675

     2195     7679    2         CALL M$RPRIV (EFTPRIV) ALTRET(A2);

   7679  7 004256   000606 630400 6                  EPPR0   EFTPRIV
         7 004257   420013 713400                    CLIMB   alt,+8203
PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:247  
         7 004260   400000 401760                    pmme    nvectors=1
         7 004261   004262 702000 7                  TSX2    A2

   7675  7 004262   004264 710000 7     A2           TRA     s:7691

     2196     7680    2   A2:   ;
     2197     7681        /*D* NAME:         REM_FILE
     2198     7682             PURPOSE:      To remove an OUTSYM file entry
     2199     7683             DESCRIPTION:  Like DEL_FILE except the file is not deleted
     2200     7684                           from :SYMO. */
     2201     7685    2   REM_FILE: ENTRY;

   7685  7 004263   200062 741300       REM_FILE     STX1  ! CDAD,,AUTO

     2202     7686        /**
     2203     7687         **
     2204     7688         **      RELEASE THE EXTENT TABLE ENTRIES
     2205     7689         **
     2206     7690         **/
     2207     7691    2         EXT$=FIL$->FO$FIL.EXT$;

   7691  7 004264   000000 470400 xsym               LDP0    FO_FIL$
         7 004265   000002 236100                    LDQ     2,,PR0
         7 004266   200016 756100                    STQ     EXT$,,AUTO

     2208     7692    2         IF EXT$~=ADDR(NIL) THEN

   7692  7 004267   000001 116000 xsym               CMPQ    B_VECTNIL+1
         7 004270   004316 600000 7                  TZE     s:7709

     2209     7693    3           DO;

     2210     7694                                /* VERIFY THE EXTENT CHAIN */
     2211     7695    3           CALL SET_LASTEXT;

   7695  7 004271   004655 701000 7                  TSX1    SET_LASTEXT
         7 004272   000000 011000                    NOP     0
PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:248  

     2212     7696    3           EXT$=FIL$->FO$FIL.EXT$;

   7696  7 004273   000000 470400 xsym               LDP0    FO_FIL$
         7 004274   000002 236100                    LDQ     2,,PR0
         7 004275   200016 756100                    STQ     EXT$,,AUTO

     2213     7697    4             DO WHILE (EXT$ ~= ADDR(NIL));

   7697  7 004276   004314 710000 7                  TRA     s:7701

     2214     7698    4             P$=EXT$->FO$EXT.LNK$;

   7698  7 004277   200016 470500                    LDP0    EXT$,,AUTO
         7 004300   000000 236100                    LDQ     0,,PR0
         7 004301   200017 756100                    STQ     P$,,AUTO

     2215     7699    4             CALL FOI$RBUF (FO_EXTSCB,EXT$);

   7699  7 004302   200016 631500                    EPPR1   EXT$,,AUTO
         7 004303   200071 451500                    STP1    I+2,,AUTO
         7 004304   000050 236000 8                  LDQ     40
         7 004305   200070 756100                    STQ     I+1,,AUTO
         7 004306   200070 630500                    EPPR0   I+1,,AUTO
         7 004307   000020 631400 xsym               EPPR1   B_VECTNIL+16
         7 004310   000000 701000 xent               TSX1    FOI$RBUF
         7 004311   000000 011000                    NOP     0

     2216     7700    4             EXT$=P$;

   7700  7 004312   200017 236100                    LDQ     P$,,AUTO
         7 004313   200016 756100                    STQ     EXT$,,AUTO

     2217     7701    4             END;

   7701  7 004314   000001 116000 xsym               CMPQ    B_VECTNIL+1
         7 004315   004277 601000 7                  TNZ     s:7698
PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:249  

     2218     7702    3           END;

     2219     7703
     2220     7704        /**
     2221     7705         **
     2222     7706         **      REMOVE THE FILE FROM ITS PRIO CHAIN
     2223     7707         **
     2224     7708         **/
     2225     7709    2         CALL UNCHAIN_FILE;

   7709  7 004316   004412 701000 7                  TSX1    UNCHAIN_FILE
         7 004317   000000 011000                    NOP     0

     2226     7710
     2227     7711
     2228     7712        /**
     2229     7713         **
     2230     7714         **      MAKE SURE IT ISN'T ACTIVE ON A DEVICE
     2231     7715         **
     2232     7716         **/
     2233     7717    2         IF FIL$->FO$FIL.CDEV$~=ADDR(NIL) THEN CALL FOI$CRASH (%S$DELACTFIL,F_FO,M_F);

   7717  7 004320   000000 470400 xsym               LDP0    FO_FIL$
         7 004321   000011 236100                    LDQ     9,,PR0
         7 004322   000001 116000 xsym               CMPQ    B_VECTNIL+1
         7 004323   004330 600000 7                  TZE     s:7732

   7717  7 004324   000070 630400 8                  EPPR0   56
         7 004325   000021 631400 xsym               EPPR1   B_VECTNIL+17
         7 004326   000000 701000 xent               TSX1    FOI$CRASH
         7 004327   000000 011000                    NOP     0

     2234     7718        /*S* SCREECH_CODE: FOF-S$DELACTFIL
     2235     7719             TYPE:         SCREECH
     2236     7720             MESSAGE:      OUTSYM tried to delete a file which was printing
     2237     7721             REMARKS:      The cleanup code which removes files from the
PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:250  
     2238     7722                           file lists in OUTSYM has discovered that the
     2239     7723                           file is still active on a device.  The cause
     2240     7724                           can be determined by finding out who called
     2241     7725                           DEL_FILE and why he thought the file was
     2242     7726                           finished. */
     2243     7727        /**
     2244     7728         **
     2245     7729         **      UPDATE JOBSTATS
     2246     7730         **
     2247     7731         **/
     2248     7732    2         IF FIL$->FO$FIL.OJOB$ ~= ADDR(NIL) THEN

   7732  7 004330   000000 470400 xsym               LDP0    FO_FIL$
         7 004331   000003 236100                    LDQ     3,,PR0
         7 004332   000001 116000 xsym               CMPQ    B_VECTNIL+1
         7 004333   004404 600000 7                  TZE     s:7758

     2249     7733    3           DO;

     2250     7734    3           JOB$=FIL$->FO$FIL.OJOB$;

   7734  7 004334   000000 756000 xsym               STQ     FO_JOB$

     2251     7735    3           JOB$->FO$JOB.NFIL_DONE=JOB$->FO$JOB.NFIL_DONE+1;

   7735  7 004335   000000 471400 xsym               LDP1    FO_JOB$
         7 004336   100003 720100                    LXL0    3,,PR1
         7 004337   000001 621010                    EAX1    1,X0
         7 004340   100003 441100                    SXL1    3,,PR1

     2252     7736    3           P$=JOB$->FO$JOB.FILHD$;

   7736  7 004341   100001 236100                    LDQ     1,,PR1
         7 004342   200017 756100                    STQ     P$,,AUTO

     2253     7737    3           IF P$ = FIL$ THEN

PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:251  
   7737  7 004343   000000 116000 xsym               CMPQ    FO_FIL$
         7 004344   004350 601000 7                  TNZ     s:7741

     2254     7738    3            JOB$->FO$JOB.FILHD$=FIL$->FO$FIL.JLNK$;

   7738  7 004345   000004 236100                    LDQ     4,,PR0
         7 004346   100001 756100                    STQ     1,,PR1
         7 004347   004367 710000 7                  TRA     s:7746

     2255     7739    3           ELSE
     2256     7740    4             DO;

     2257     7741    5               DO WHILE (P$->FO$FIL.JLNK$ ~= FIL$);

   7741  7 004350   200017 473500                    LDP3    P$,,AUTO
         7 004351   300004 236100                    LDQ     4,,PR3
         7 004352   000000 116000 xsym               CMPQ    FO_FIL$
         7 004353   004363 600000 7                  TZE     s:7744

     2258     7742    5               P$=P$->FO$FIL.JLNK$;

   7742  7 004354   200017 470500                    LDP0    P$,,AUTO
         7 004355   000004 236100                    LDQ     4,,PR0
         7 004356   200017 756100                    STQ     P$,,AUTO

     2259     7743    5               END;

   7743  7 004357   200017 470500                    LDP0    P$,,AUTO
         7 004360   000004 236100                    LDQ     4,,PR0
         7 004361   000000 116000 xsym               CMPQ    FO_FIL$
         7 004362   004354 601000 7                  TNZ     s:7742

     2260     7744    4             P$->FO$FIL.JLNK$=FIL$->FO$FIL.JLNK$;

   7744  7 004363   000000 470400 xsym               LDP0    FO_FIL$
         7 004364   000004 236100                    LDQ     4,,PR0
         7 004365   200017 471500                    LDP1    P$,,AUTO
PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:252  
         7 004366   100004 756100                    STQ     4,,PR1

     2261     7745    4             END;

     2262     7746    3           IF JOB$->FO$JOB.NFIL_DONE = JOB$->FO$JOB.NFIL THEN

   7746  7 004367   000000 471400 xsym               LDP1    FO_JOB$
         7 004370   100003 236100                    LDQ     3,,PR1
         7 004371   100002 676100                    ERQ     2,,PR1
         7 004372   777777 376007                    ANQ     -1,DL
         7 004373   004404 601000 7                  TNZ     s:7758

     2263     7747    4             DO;

     2264     7748    4             IF NOT (JOB$->FO$JOB.MODE = %M_BATCH# AND NOT JOB$->FO$JOB.FLG.JOFF) THEN

   7748  7 004374   100003 236100                    LDQ     3,,PR1
         7 004375   074000 376003                    ANQ     30720,DU
         7 004376   004000 116003                    CMPQ    2048,DU
         7 004377   004402 601000 7                  TNZ     s:7749
         7 004400   100003 234100                    SZN     3,,PR1
         7 004401   004404 605000 7                  TPL     s:7758

     2265     7749    4              CALL JOB_COMPLETED;

   7749  7 004402   005105 701000 7                  TSX1    JOB_COMPLETED
         7 004403   000000 011000                    NOP     0

     2266     7750    4             END;

     2267     7751    3           END;

     2268     7752
     2269     7753        /**
     2270     7754         **
     2271     7755         **      RELEASE FILE TABLE ENTRY
     2272     7756         **
PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:253  
     2273     7757         **/
     2274     7758    2         CALL FOI$RBUF(FO_FILSCB,FIL$);

   7758  7 004404   000016 630400 8                  EPPR0   14
         7 004405   000020 631400 xsym               EPPR1   B_VECTNIL+16
         7 004406   000000 701000 xent               TSX1    FOI$RBUF
         7 004407   000000 011000                    NOP     0

     2275     7759    2         RETURN;

   7759  7 004410   200062 221300                    LDX1  ! CDAD,,AUTO
         7 004411   000001 702211                    TSX2  ! 1,X1

     2276     7760    2   END DEL_FILE;
     2277     7761        /**************************************
     2278     7762         **************************************
     2279     7763                    UNCHAIN_FILE
     2280     7764         **************************************
     2281     7765         **************************************/
     2282     7766        /*D* NAME:         UNCHAIN_FILE
     2283     7767             PURPOSE:      To remove an OUTSYM file entry from its prio
     2284     7768                           chain.
     2285     7769             DESCRIPTION:  The file is pointed to by FIL$, and FO$FIL.PRIO
     2286     7770                           identifies the chain it is currently on.  That
     2287     7771                           chain is searched for the file, which is then
     2288     7772                           deleted from the chain.  If the file is not on
     2289     7773                           that chain, OUTSYM traps. Note that if FO$FIL.PRIO
     2290     7774                           is 99, the routine simply returns. */
     2291     7775    1   UNCHAIN_FILE: PROC;

   7775  7 004412   200064 741300       UNCHAIN_FILE STX1  ! BADCNT,,AUTO

     2292     7776        /**/
     2293     7777    2   DCL J SBIN;
     2294     7778    2   DCL I SBIN;
     2295     7779    2   DCL F$ PTR;
     2296     7780        /**/
PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:254  
     2297     7781                                /* PRIO=99 MEANS NOT ASSIGNED A PRIO
     2298     7782                                   CHAIN YET, SO IGNORE */
     2299     7783    2         IF FIL$->FO$FIL.PRIO=99 THEN RETURN;

   7783  7 004413   000000 470400 xsym               LDP0    FO_FIL$
         7 004414   000016 236100                    LDQ     14,,PR0
         7 004415   000777 376007                    ANQ     511,DL
         7 004416   000143 116007                    CMPQ    99,DL
         7 004417   004421 601000 7                  TNZ     s:7785

   7783  7 004420   000001 702211                    TSX2  ! 1,X1

     2300     7784              %JLOCK;

   7785  7 004421   000000 054000 xsym               AOS     FO_Q

     2301     7787    2         PRIO=FIL$->FO$FIL.PRIO;

   7787  7 004422   200021 756100                    STQ     PRIO,,AUTO

     2302     7788    2         IF FIL$=FO_Q.FILHD$(PRIO) THEN

   7788  7 004423   000000 620006                    EAX0    0,QL
         7 004424   000000 236000 xsym               LDQ     FO_FIL$
         7 004425   000004 116010 xsym               CMPQ    FO_Q+4,X0
         7 004426   004440 601000 7                  TNZ     s:7795

     2303     7789    3           DO;

     2304     7790    3           FO_Q.FILHD$(PRIO)=FIL$->FO$FIL.LNK$;

   7790  7 004427   000000 236100                    LDQ     0,,PR0
         7 004430   200021 720100                    LXL0    PRIO,,AUTO
         7 004431   000004 756010 xsym               STQ     FO_Q+4,X0

     2305     7791    3           IF FIL$=FO_Q.FILTL$(PRIO) THEN

PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:255  
   7791  7 004432   000000 236000 xsym               LDQ     FO_FIL$
         7 004433   000027 116010 xsym               CMPQ    FO_Q+23,X0
         7 004434   004437 601000 7                  TNZ     s:7793

     2306     7792    3            FO_Q.FILTL$(PRIO)=ADDR(NIL);

   7792  7 004435   000001 236000 xsym               LDQ     B_VECTNIL+1
         7 004436   000027 756010 xsym               STQ     FO_Q+23,X0

     2307     7793    3           GOTO DONE;

   7793  7 004437   004464 710000 7                  TRA     DONE

     2308     7794    3           END;
     2309     7795    2         P$=FO_Q.FILHD$(PRIO);

   7795  7 004440   200021 720100                    LXL0    PRIO,,AUTO
         7 004441   000004 236010 xsym               LDQ     FO_Q+4,X0
         7 004442   200017 756100                    STQ     P$,,AUTO

     2310     7796    3           DO FOREVER;

     2311     7797    3           IF P$->FO$FIL.LNK$=FIL$ THEN

   7797  7 004443   200017 470500                    LDP0    P$,,AUTO
         7 004444   000000 236100                    LDQ     0,,PR0
         7 004445   000000 116000 xsym               CMPQ    FO_FIL$
         7 004446   004462 601000 7                  TNZ     s:7804

     2312     7798    4             DO;

     2313     7799    4             P$->FO$FIL.LNK$=FIL$->FO$FIL.LNK$;

   7799  7 004447   000000 471400 xsym               LDP1    FO_FIL$
         7 004450   100000 236100                    LDQ     0,,PR1
         7 004451   000000 756100                    STQ     0,,PR0

PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:256  
     2314     7800    4             IF FIL$->FO$FIL.LNK$=ADDR(NIL) THEN

   7800  7 004452   000000 470400 xsym               LDP0    FO_FIL$
         7 004453   000000 236100                    LDQ     0,,PR0
         7 004454   000001 116000 xsym               CMPQ    B_VECTNIL+1
         7 004455   004461 601000 7                  TNZ     s:7802

     2315     7801    4              FO_Q.FILTL$(PRIO)=P$;

   7801  7 004456   200017 236100                    LDQ     P$,,AUTO
         7 004457   200021 720100                    LXL0    PRIO,,AUTO
         7 004460   000027 756010 xsym               STQ     FO_Q+23,X0

     2316     7802    4             GOTO DONE;

   7802  7 004461   004464 710000 7                  TRA     DONE

     2317     7803    4             END;
     2318     7804    3           P$=P$->FO$FIL.LNK$;

   7804  7 004462   200017 756100                    STQ     P$,,AUTO

     2319     7805    3           END;

   7805  7 004463   004443 710000 7                  TRA     s:7797

   7803  7 004464                       DONE         null
     2320     7806    2   DONE: ;
     2321     7807                           /* Update AHEAD for guys below us */
     2322     7808    2         F$=FIL$->FO$FIL.LNK$;

   7808  7 004464   000000 236100                    LDQ     0,,PR0
         7 004465   200067 756100                    STQ     F$,,AUTO

     2323     7809    3           DO WHILE (F$ ~= ADDR(NIL));

   7809  7 004466   004502 710000 7                  TRA     s:7813
PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:257  

     2324     7810    3           IF F$->FO$FIL.DESTR.WSN = FIL$->FO$FIL.DESTR.WSN THEN

   7810  7 004467   200067 470500                    LDP0    F$,,AUTO
         7 004470   000000 471400 xsym               LDP1    FO_FIL$
         7 004471   040100 106500                    CMPC    fill='040'O
         7 004472   000005 000010                    ADSC9   5,,PR0                   cn=0,n=8
         7 004473   100005 000010                    ADSC9   5,,PR1                   cn=0,n=8
         7 004474   004500 601000 7                  TNZ     s:7812

     2325     7811    3            F$->FO$FIL.AHEAD=F$->FO$FIL.AHEAD-1;

   7811  7 004475   000022 220100                    LDX0    18,,PR0
         7 004476   777777 621010                    EAX1    -1,X0
         7 004477   000022 741100                    STX1    18,,PR0

     2326     7812    3           F$=F$->FO$FIL.LNK$;

   7812  7 004500   000000 236100                    LDQ     0,,PR0
         7 004501   200067 756100                    STQ     F$,,AUTO

     2327     7813    3           END;

   7813  7 004502   000001 116000 xsym               CMPQ    B_VECTNIL+1
         7 004503   004467 601000 7                  TNZ     s:7810

     2328     7814    3           DO I = PRIO-1 DOWNTO 0;

   7814  7 004504   200021 235100                    LDA     PRIO,,AUTO
         7 004505   000001 135007                    SBLA    1,DL
         7 004506   200066 755100                    STA     I,,AUTO
         7 004507   004533 710000 7                  TRA     s:7821+2

     2329     7815    3           F$=FO_Q.FILHD$(I);

   7815  7 004510   200066 720100                    LXL0    I,,AUTO
         7 004511   000004 236010 xsym               LDQ     FO_Q+4,X0
PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:258  
         7 004512   200067 756100                    STQ     F$,,AUTO

     2330     7816    4             DO WHILE (F$ ~= ADDR(NIL));

   7816  7 004513   004527 710000 7                  TRA     s:7820

     2331     7817    4             IF F$->FO$FIL.DESTR.WSN = FIL$->FO$FIL.DESTR.WSN THEN

   7817  7 004514   200067 470500                    LDP0    F$,,AUTO
         7 004515   000000 471400 xsym               LDP1    FO_FIL$
         7 004516   040100 106500                    CMPC    fill='040'O
         7 004517   000005 000010                    ADSC9   5,,PR0                   cn=0,n=8
         7 004520   100005 000010                    ADSC9   5,,PR1                   cn=0,n=8
         7 004521   004525 601000 7                  TNZ     s:7819

     2332     7818    4              F$->FO$FIL.AHEAD=F$->FO$FIL.AHEAD-1;

   7818  7 004522   000022 220100                    LDX0    18,,PR0
         7 004523   777777 621010                    EAX1    -1,X0
         7 004524   000022 741100                    STX1    18,,PR0

     2333     7819    4             F$=F$->FO$FIL.LNK$;

   7819  7 004525   000000 236100                    LDQ     0,,PR0
         7 004526   200067 756100                    STQ     F$,,AUTO

     2334     7820    4             END;

   7820  7 004527   000001 116000 xsym               CMPQ    B_VECTNIL+1
         7 004530   004514 601000 7                  TNZ     s:7817

     2335     7821    3           END;

   7821  7 004531   000001 336007                    LCQ     1,DL
         7 004532   200066 056100                    ASQ     I,,AUTO
         7 004533   200066 235100                    LDA     I,,AUTO
         7 004534   004510 605000 7                  TPL     s:7815
PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:259  

     2336     7822              %JUNLOCK;

   7823  7 004535   000001 336007                    LCQ     1,DL
         7 004536   000000 056000 xsym               ASQ     FO_Q

     2337     7825    2         RETURN;

   7825  7 004537   200064 221300                    LDX1  ! BADCNT,,AUTO
         7 004540   000001 702211                    TSX2  ! 1,X1

     2338     7826        /**************************************
     2339     7827         **************************************
     2340     7828                    CHAIN_FILE
     2341     7829         **************************************
     2342     7830         **************************************/
     2343     7831        /*D* NAME:         CHAIN_FILE
     2344     7832             PURPOSE:      To add an OUTSYM file entry to its proper prio
     2345     7833                           chain.
     2346     7834             DESCRIPTION:  The file is pointed to by FIL$, and the desired
     2347     7835                           prio chain identified by FO$FIL.PRIO.  The entry
     2348     7836                           is added to the tail of that chain. */
     2349     7837    2   CHAIN_FILE: ENTRY;

   7837  7 004541   200064 741300       CHAIN_FILE   STX1  ! BADCNT,,AUTO

     2350     7838    2         PRIO=FIL$->FO$FIL.PRIO;

   7838  7 004542   000000 470400 xsym               LDP0    FO_FIL$
         7 004543   000016 236100                    LDQ     14,,PR0
         7 004544   000777 376007                    ANQ     511,DL
         7 004545   200021 756100                    STQ     PRIO,,AUTO

     2351     7839                           /* Compute AHEAD for its new position */
     2352     7840    2         J=0;

   7840  7 004546   200065 450100                    STZ     J,,AUTO
PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:260  

     2353     7841    3           DO I = PRIO TO FOPR_MAX#;

   7841  7 004547   200066 756100                    STQ     I,,AUTO
         7 004550   004571 710000 7                  TRA     s:7848+1

     2354     7842    3           F$=FO_Q.FILHD$(I);

   7842  7 004551   200066 720100                    LXL0    I,,AUTO
         7 004552   000004 236010 xsym               LDQ     FO_Q+4,X0
         7 004553   200067 756100                    STQ     F$,,AUTO

     2355     7843    4             DO WHILE (F$ ~= ADDR(NIL));

   7843  7 004554   004566 710000 7                  TRA     s:7847

     2356     7844    4             IF F$->FO$FIL.DESTR.WSN = FIL$->FO$FIL.DESTR.WSN THEN

   7844  7 004555   200067 470500                    LDP0    F$,,AUTO
         7 004556   000000 471400 xsym               LDP1    FO_FIL$
         7 004557   040100 106500                    CMPC    fill='040'O
         7 004560   000005 000010                    ADSC9   5,,PR0                   cn=0,n=8
         7 004561   100005 000010                    ADSC9   5,,PR1                   cn=0,n=8
         7 004562   004564 601000 7                  TNZ     s:7846

     2357     7845    4              J=J+1;

   7845  7 004563   200065 054100                    AOS     J,,AUTO

     2358     7846    4             F$=F$->FO$FIL.LNK$;

   7846  7 004564   000000 236100                    LDQ     0,,PR0
         7 004565   200067 756100                    STQ     F$,,AUTO

     2359     7847    4             END;

   7847  7 004566   000001 116000 xsym               CMPQ    B_VECTNIL+1
PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:261  
         7 004567   004555 601000 7                  TNZ     s:7844

     2360     7848    3           END;

   7848  7 004570   200066 054100                    AOS     I,,AUTO
         7 004571   200066 235100                    LDA     I,,AUTO
         7 004572   000022 115007                    CMPA    18,DL
         7 004573   004551 604400 7                  TMOZ    s:7842

     2361     7849    2         FIL$->FO$FIL.AHEAD=J;

   7849  7 004574   200065 720100                    LXL0    J,,AUTO
         7 004575   000000 470400 xsym               LDP0    FO_FIL$
         7 004576   000022 740100                    STX0    18,,PR0

     2362     7850        /**/
     2363     7851              %JLOCK;

   7852  7 004577   000000 054000 xsym               AOS     FO_Q

     2364     7854                           /* Update AHEAD for guys below us */
     2365     7855    2         J=J+1;

   7855  7 004600   200065 054100                    AOS     J,,AUTO

     2366     7856    3           DO I = PRIO-1 DOWNTO 0;

   7856  7 004601   200021 236100                    LDQ     PRIO,,AUTO
         7 004602   000001 136007                    SBLQ    1,DL
         7 004603   200066 756100                    STQ     I,,AUTO
         7 004604   004630 710000 7                  TRA     s:7866+2

     2367     7857    3           F$=FO_Q.FILHD$(I);

   7857  7 004605   200066 720100                    LXL0    I,,AUTO
         7 004606   000004 236010 xsym               LDQ     FO_Q+4,X0
         7 004607   200067 756100                    STQ     F$,,AUTO
PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:262  

     2368     7858    4             DO WHILE (F$ ~= ADDR(NIL));

   7858  7 004610   004624 710000 7                  TRA     s:7865

     2369     7859    4             IF F$->FO$FIL.DESTR.WSN = FIL$->FO$FIL.DESTR.WSN THEN

   7859  7 004611   200067 470500                    LDP0    F$,,AUTO
         7 004612   000000 471400 xsym               LDP1    FO_FIL$
         7 004613   040100 106500                    CMPC    fill='040'O
         7 004614   000005 000010                    ADSC9   5,,PR0                   cn=0,n=8
         7 004615   100005 000010                    ADSC9   5,,PR1                   cn=0,n=8
         7 004616   004622 601000 7                  TNZ     s:7864

     2370     7860    5               DO;

     2371     7861    5               F$->FO$FIL.AHEAD=J;

   7861  7 004617   200065 720100                    LXL0    J,,AUTO
         7 004620   000022 740100                    STX0    18,,PR0

     2372     7862    5               J=J+1;

   7862  7 004621   200065 054100                    AOS     J,,AUTO

     2373     7863    5               END;

     2374     7864    4             F$=F$->FO$FIL.LNK$;

   7864  7 004622   000000 236100                    LDQ     0,,PR0
         7 004623   200067 756100                    STQ     F$,,AUTO

     2375     7865    4             END;

   7865  7 004624   000001 116000 xsym               CMPQ    B_VECTNIL+1
         7 004625   004611 601000 7                  TNZ     s:7859

PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:263  
     2376     7866    3           END;

   7866  7 004626   000001 336007                    LCQ     1,DL
         7 004627   200066 056100                    ASQ     I,,AUTO
         7 004630   200066 235100                    LDA     I,,AUTO
         7 004631   004605 605000 7                  TPL     s:7857

     2377     7867    2         IF FO_Q.FILTL$(PRIO)=ADDR(NIL) THEN

   7867  7 004632   200021 720100                    LXL0    PRIO,,AUTO
         7 004633   000027 236010 xsym               LDQ     FO_Q+23,X0
         7 004634   000001 116000 xsym               CMPQ    B_VECTNIL+1
         7 004635   004641 601000 7                  TNZ     s:7870

     2378     7868    2          FO_Q.FILHD$(PRIO)=FIL$;

   7868  7 004636   000000 236000 xsym               LDQ     FO_FIL$
         7 004637   000004 756010 xsym               STQ     FO_Q+4,X0
         7 004640   004644 710000 7                  TRA     s:7871

     2379     7869    2         ELSE
     2380     7870    2          FO_Q.FILTL$(PRIO)->FO$FIL.LNK$=FIL$;

   7870  7 004641   000027 470410 xsym               LDP0    FO_Q+23,X0
         7 004642   000000 236000 xsym               LDQ     FO_FIL$
         7 004643   000000 756100                    STQ     0,,PR0

     2381     7871    2         FIL$->FO$FIL.LNK$=ADDR(NIL);

   7871  7 004644   000001 236000 xsym               LDQ     B_VECTNIL+1
         7 004645   000000 470400 xsym               LDP0    FO_FIL$
         7 004646   000000 756100                    STQ     0,,PR0

     2382     7872    2         FO_Q.FILTL$(PRIO)=FIL$;

   7872  7 004647   000000 236000 xsym               LDQ     FO_FIL$
         7 004650   000027 756010 xsym               STQ     FO_Q+23,X0
PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:264  

     2383     7873              %JUNLOCK;

   7874  7 004651   000001 336007                    LCQ     1,DL
         7 004652   000000 056000 xsym               ASQ     FO_Q

     2384     7876    2         RETURN;

   7876  7 004653   200064 221300                    LDX1  ! BADCNT,,AUTO
         7 004654   000001 702211                    TSX2  ! 1,X1

     2385     7877    2   END UNCHAIN_FILE;
     2386     7878        /**************************************
     2387     7879         **************************************
     2388     7880                    SET_LASTEXT
     2389     7881         **************************************
     2390     7882         **************************************/
     2391     7883        /*D* NAME:         SET_LASTEXT
     2392     7884             PURPOSE:      To find the last extent in a file's extent chain
     2393     7885             DESCRIPTION:  EXT$ is set to point to the last extent in the
     2394     7886                           extent chain of the file pointed to by FIL$.
     2395     7887                           If the number of frames found in the extent chain
     2396     7888                           does not match FO$FIL.NUMEXT, a full SCREECH
     2397     7889                           results. */
     2398     7890    1   SET_LASTEXT: PROC ALTRET;

   7890  7 004655   200064 741300       SET_LASTEXT  STX1  ! BADCNT,,AUTO

     2399     7891    2         EXT$=FIL$->FO$FIL.EXT$;

   7891  7 004656   000000 470400 xsym               LDP0    FO_FIL$
         7 004657   000002 236100                    LDQ     2,,PR0
         7 004660   200016 756100                    STQ     EXT$,,AUTO

     2400     7892    2         NUMEXT=0;

   7892  7 004661   200036 450100                    STZ     NUMEXT,,AUTO
PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:265  

     2401     7893    2         IF EXT$ = ADDR(NIL) THEN ALTRETURN;

   7893  7 004662   000001 116000 xsym               CMPQ    B_VECTNIL+1
         7 004663   004665 601000 7                  TNZ     s:7894

   7893  7 004664   000000 702211                    TSX2  ! 0,X1

     2402     7894    2         NUMEXT=1;

   7894  7 004665   000001 235007                    LDA     1,DL
         7 004666   200036 755100                    STA     NUMEXT,,AUTO

     2403     7895    3           DO WHILE (EXT$->FO$EXT.LNK$ ~= ADDR(NIL));

   7895  7 004667   004676 710000 7                  TRA     s:7898

     2404     7896    3           NUMEXT=NUMEXT+1;

   7896  7 004670   200036 235100                    LDA     NUMEXT,,AUTO
         7 004671   000001 035007                    ADLA    1,DL
         7 004672   200036 755100                    STA     NUMEXT,,AUTO

     2405     7897    3           EXT$=EXT$->FO$EXT.LNK$;

   7897  7 004673   200016 470500                    LDP0    EXT$,,AUTO
         7 004674   000000 236100                    LDQ     0,,PR0
         7 004675   200016 756100                    STQ     EXT$,,AUTO

     2406     7898    3           END;

   7898  7 004676   200016 470500                    LDP0    EXT$,,AUTO
         7 004677   000000 236100                    LDQ     0,,PR0
         7 004700   000001 116000 xsym               CMPQ    B_VECTNIL+1
         7 004701   004670 601000 7                  TNZ     s:7896

     2407     7899    2         IF NUMEXT ~= FIL$->FO$FIL.NUMEXT THEN
PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:266  

   7899  7 004702   000000 471400 xsym               LDP1    FO_FIL$
         7 004703   100014 236100                    LDQ     12,,PR1
         7 004704   777777 376007                    ANQ     -1,DL
         7 004705   200036 116100                    CMPQ    NUMEXT,,AUTO
         7 004706   004713 600000 7                  TZE     s:7907

     2408     7900    2          CALL FOI$CRASH (%S$BADEXTCHN,F_FO,M_F);

   7900  7 004707   000074 630400 8                  EPPR0   60
         7 004710   000021 631400 xsym               EPPR1   B_VECTNIL+17
         7 004711   000000 701000 xent               TSX1    FOI$CRASH
         7 004712   000000 011000                    NOP     0

     2409     7901        /*S* SCREECH_CODE: FOF-S$BADEXTCHN
     2410     7902             TYPE:         SCREECH
     2411     7903             MESSAGE:      Bad extent chain found in an OUTSYM file
     2412     7904             REMARKS:      The number of extent frames linked to a file
     2413     7905                           does not match the extent frame count in the
     2414     7906                           file frame. */
     2415     7907    2         RETURN;

   7907  7 004713   200064 221300                    LDX1  ! BADCNT,,AUTO
         7 004714   000001 702211                    TSX2  ! 1,X1

     2416     7908    2   END SET_LASTEXT;
     2417     7909        %EJECT;
PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:267  
     2418     7910        /*
     2419     7911
     2420     7912
     2421     7913                                        #    ###    #####
     2422     7914                                        #   #   #   #
     2423     7915                                        #   #       #
     2424     7916                                        #    ###    ####
     2425     7917                                    #   #       #   #
     2426     7918                                    #   #   #   #   #
     2427     7919                                     ###     ###    #
     2428     7920
     2429     7921
     2430     7922
     2431     7923
     2432     7924            ####     ###    #   #   #####    ###    #   #   #####    ###
     2433     7925            #   #   #   #   #   #     #       #     #   #   #       #   #
     2434     7926            #   #   #   #   #   #     #       #     ##  #   #       #
     2435     7927            ####    #   #   #   #     #       #     # # #   ####     ###
     2436     7928            # #     #   #   #   #     #       #     #  ##   #           #
     2437     7929            #  #    #   #   #   #     #       #     #   #   #       #   #
     2438     7930            #   #    ###     ###      #      ###    #   #   #####    ###
     2439     7931
     2440     7932
     2441     7933        */
     2442     7934        /*  Order: FIND_JOB          Find job table entry for a sysid
     2443     7935                   ADD_JOB           Add a SYSID to the job table
     2444     7936                   REM_JOB           Remove a job table entry
     2445     7937                   JOB_COMPLETED     Completion cleanup, CALL REM_JOB
     2446     7938        */
     2447     7939        /**************************************
     2448     7940         **************************************
     2449     7941                    FIND_JOB
     2450     7942         **************************************
     2451     7943         **************************************/
     2452     7944        /*D* NAME:         FIND_JOB
     2453     7945             PURPOSE:      To find the job table entry for a SYSID
     2454     7946             DESCRIPTION:  JOB_SYSID is the desired sysid; JOB$ is the
PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:268  
     2455     7947                           returned job frame pointer.  The routine ALTRETs
     2456     7948                           if not job frame bearing that sysid is found. */
     2457     7949    1   FIND_JOB: PROC ALTRET;

   7949  7 004715   200056 741300       FIND_JOB     STX1  ! ESUBC2,,AUTO

     2458     7950    2         JOB$=FO_Q.JOBHD$;

   7950  7 004716   000003 236000 xsym               LDQ     FO_Q+3
         7 004717   000000 756000 xsym               STQ     FO_JOB$

     2459     7951    3           DO WHILE (JOB$ ~= ADDR(NIL));

   7951  7 004720   004732 710000 7                  TRA     s:7954

     2460     7952    3           IF JOB$->FO$JOB.SYSID=JOB_SYSID THEN RETURN;

   7952  7 004721   000000 470400 xsym               LDP0    FO_JOB$
         7 004722   000002 236100                    LDQ     2,,PR0
         7 004723   000022 772000                    QRL     18
         7 004724   200022 116100                    CMPQ    JOB_SYSID,,AUTO
         7 004725   004730 601000 7                  TNZ     s:7953

   7952  7 004726   200056 221300                    LDX1  ! ESUBC2,,AUTO
         7 004727   000001 702211                    TSX2  ! 1,X1

     2461     7953    3           JOB$=JOB$->FO$JOB.LNK$;

   7953  7 004730   000000 236100                    LDQ     0,,PR0
         7 004731   000000 756000 xsym               STQ     FO_JOB$

     2462     7954    3           END;

   7954  7 004732   000001 116000 xsym               CMPQ    B_VECTNIL+1
         7 004733   004721 601000 7                  TNZ     s:7952

     2463     7955    2         ALTRETURN;
PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:269  

   7955  7 004734   200056 221300                    LDX1  ! ESUBC2,,AUTO
         7 004735   000000 702211                    TSX2  ! 0,X1

     2464     7956    2   END FIND_JOB;
     2465     7957        /**************************************
     2466     7958         **************************************
     2467     7959                    ADD_JOB
     2468     7960         **************************************
     2469     7961         **************************************/
     2470     7962        /*D* NAME:         ADD_JOB
     2471     7963             PURPOSE:      To add a new OUTSYM job table entry
     2472     7964             DESCRIPTION:  JOB_SYSID is the sysid of the new entry.  A new
     2473     7965                           job frame is allocated (ALTRET if none available)
     2474     7966                           and initialized; JOB$ points to it.
     2475     7967                           JNL is the true length of JOBNAME;
     2476     7968                           JOBNAME and JNL in the allocated frame are
     2477     7969                           to be set up from them.
     2478     7970        */
     2479     7971    1   ADD_JOB: PROC ALTRET;

   7971  7 004736   200066 741300       ADD_JOB      STX1  ! I,,AUTO

     2480     7972        /**/
     2481     7973    2   DCL I UBIN;
     2482     7974        /**/
     2483     7975    2         TJOB.JNL=JNL;

   7975  7 004737   000015 236000 1                  LDQ     JNL
         7 004740   000011 736000                    QLS     9
         7 004741   000013 552010 1                  STBQ    TJOB+9,'10'O

     2484     7976    2         I=SIZEW(ADDR(TJOB)->FO$JOB);

   7976  7 004742   000013 236000 1                  LDQ     TJOB+9
         7 004743   000011 772000                    QRL     9
         7 004744   000777 376007                    ANQ     511,DL
PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:270  
         7 004745   000047 620006                    EAX0    39,QL
         7 004746   000000 636010                    EAQ     0,X0
         7 004747   000022 772000                    QRL     18
         7 004750   000011 402007                    MPY     9,DL
         7 004751   000043 036007                    ADLQ    35,DL
         7 004752   000044 506007                    DIV     36,DL
         7 004753   200067 756100                    STQ     I,,AUTO

     2485     7977    2         CALL FOI$GBLK (FO_JOBSCB,JOB$,I) ALTRET(ALTRT);

   7977  7 004754   200067 630500                    EPPR0   I,,AUTO
         7 004755   200072 450500                    STP0    I+3,,AUTO
         7 004756   000100 237000 8                  LDAQ    64
         7 004757   200070 757100                    STAQ    I+1,,AUTO
         7 004760   200070 630500                    EPPR0   I+1,,AUTO
         7 004761   000021 631400 xsym               EPPR1   B_VECTNIL+17
         7 004762   000000 701000 xent               TSX1    FOI$GBLK
         7 004763   005022 702000 7                  TSX2    ALTRT

     2486     7978    2         JOB$->FO$JOB.JNL=0;

   7978  7 004764   000000 470400 xsym               LDP0    FO_JOB$
         7 004765   000000 236003                    LDQ     0,DU
         7 004766   000011 552110                    STBQ    9,'10'O,PR0

     2487     7979    2         JOB$->FO$JOB=FO_JOB_INIT;

   7979  7 004767   000011 236100                    LDQ     9,,PR0
         7 004770   000011 772000                    QRL     9
         7 004771   000777 376007                    ANQ     511,DL
         7 004772   000047 620006                    EAX0    39,QL
         7 004773   000140 100400                    MLR     fill='000'O
         7 004774   000000 000051 xsym               ADSC9   FO_JOB_INIT              cn=0,n=41
         7 004775   000000 000010                    ADSC9   0,,PR0                   cn=0,n=*X0

     2488     7980    2         JOB$->FO$JOB.SYSID=JOB_SYSID;

PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:271  
   7980  7 004776   200022 720100                    LXL0    JOB_SYSID,,AUTO
         7 004777   000000 470400 xsym               LDP0    FO_JOB$
         7 005000   000002 740100                    STX0    2,,PR0

     2489     7981    2         JOB$->FO$JOB.LNK$=FO_Q.JOBHD$;

   7981  7 005001   000003 236000 xsym               LDQ     FO_Q+3
         7 005002   000000 756100                    STQ     0,,PR0

     2490     7982    2         JOB$->FO$JOB.JNL=JNL;

   7982  7 005003   000000 470400 xsym               LDP0    FO_JOB$
         7 005004   000015 236000 1                  LDQ     JNL
         7 005005   000011 736000                    QLS     9
         7 005006   000011 552110                    STBQ    9,'10'O,PR0

     2491     7983    2         JOB$->FO$JOB.JOBNAME=JOBNAME;

   7983  7 005007   000011 236100                    LDQ     9,,PR0
         7 005010   000011 772000                    QRL     9
         7 005011   000777 376007                    ANQ     511,DL
         7 005012   000000 621006                    EAX1    0,QL
         7 005013   040140 100400                    MLR     fill='040'O
         7 005014   000017 000037 1                  ADSC9   JOBNAME                  cn=0,n=31
         7 005015   000011 600011                    ADSC9   9,,PR0                   cn=3,n=*X1

     2492     7984    2         FO_Q.JOBHD$=JOB$;

   7984  7 005016   000000 236000 xsym               LDQ     FO_JOB$
         7 005017   000003 756000 xsym               STQ     FO_Q+3

     2493     7985    2         RETURN;

   7985  7 005020   200066 221300                    LDX1  ! I,,AUTO
         7 005021   000001 702211                    TSX2  ! 1,X1

     2494     7986    2   ALTRT:
PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:272  
     2495     7987    2         ALTRETURN;

   7987  7 005022   200066 221300       ALTRT        LDX1  ! I,,AUTO
         7 005023   000000 702211                    TSX2  ! 0,X1

     2496     7988        /**************************************
     2497     7989         **************************************
     2498     7990                    REM_JOB
     2499     7991         **************************************
     2500     7992         **************************************/
     2501     7993        /*D* NAME:         REM_JOB
     2502     7994             PURPOSE:      To remove an OUTSYM job table entry
     2503     7995             DESCRIPTION:  JOB$ identifies the frame to be deleted.
     2504     7996                           If the entry is not found, OUTSYM
     2505     7997                           traps.  Otherwise, the frame is remove from the
     2506     7998                           chain and deleted. */
     2507     7999    2   REM_JOB: ENTRY ALTRET;

   7999  7 005024   200066 741300       REM_JOB      STX1  ! I,,AUTO

     2508     8000    2         P$=FO_Q.JOBHD$;

   8000  7 005025   000003 236000 xsym               LDQ     FO_Q+3
         7 005026   200017 756100                    STQ     P$,,AUTO

     2509     8001              %JLOCK;

   8002  7 005027   000000 054000 xsym               AOS     FO_Q

     2510     8004    2         IF JOB$ = P$ THEN

   8004  7 005030   000000 116000 xsym               CMPQ    FO_JOB$
         7 005031   005036 601000 7                  TNZ     s:8009

     2511     8005    3           DO;

     2512     8006    3           FO_Q.JOBHD$=JOB$->FO$JOB.LNK$;
PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:273  

   8006  7 005032   000000 470400 xsym               LDP0    FO_JOB$
         7 005033   000000 236100                    LDQ     0,,PR0
         7 005034   000003 756000 xsym               STQ     FO_Q+3

     2513     8007    3           GOTO DONE;

   8007  7 005035   005054 710000 7                  TRA     DONE

     2514     8008    3           END;
     2515     8009    3           DO WHILE (P$->FO$JOB.LNK$ ~= JOB$);

   8009  7 005036   200017 470500                    LDP0    P$,,AUTO
         7 005037   000000 236100                    LDQ     0,,PR0
         7 005040   000000 116000 xsym               CMPQ    FO_JOB$
         7 005041   005051 600000 7                  TZE     s:8012

     2516     8010    3           P$=P$->FO$JOB.LNK$;

   8010  7 005042   200017 470500                    LDP0    P$,,AUTO
         7 005043   000000 236100                    LDQ     0,,PR0
         7 005044   200017 756100                    STQ     P$,,AUTO

     2517     8011    3           END;

   8011  7 005045   200017 470500                    LDP0    P$,,AUTO
         7 005046   000000 236100                    LDQ     0,,PR0
         7 005047   000000 116000 xsym               CMPQ    FO_JOB$
         7 005050   005042 601000 7                  TNZ     s:8010

     2518     8012    2         P$->FO$JOB.LNK$=JOB$->FO$JOB.LNK$;     /* Remove JOB template from list */

   8012  7 005051   000000 471400 xsym               LDP1    FO_JOB$
         7 005052   100000 236100                    LDQ     0,,PR1
         7 005053   000000 756100                    STQ     0,,PR0

   8012  7 005054                       DONE         null
PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:274  
     2519     8013    2   DONE: ;
     2520     8014    2         CALL FOI$RBLK (FO_JOBSCB,JOB$,SIZEW(JOB$->FO$JOB));

   8014  7 005054   000000 470400 xsym               LDP0    FO_JOB$
         7 005055   000011 236100                    LDQ     9,,PR0
         7 005056   000011 772000                    QRL     9
         7 005057   000777 376007                    ANQ     511,DL
         7 005060   000047 620006                    EAX0    39,QL
         7 005061   000000 636010                    EAQ     0,X0
         7 005062   000022 772000                    QRL     18
         7 005063   000011 402007                    MPY     9,DL
         7 005064   000043 036007                    ADLQ    35,DL
         7 005065   000044 506007                    DIV     36,DL
         7 005066   200070 756100                    STQ     I+1,,AUTO
         7 005067   200070 631500                    EPPR1   I+1,,AUTO
         7 005070   200073 451500                    STP1    I+4,,AUTO
         7 005071   000101 236000 8                  LDQ     65
         7 005072   200072 756100                    STQ     I+3,,AUTO
         7 005073   000100 236000 8                  LDQ     64
         7 005074   200071 756100                    STQ     I+2,,AUTO
         7 005075   200071 630500                    EPPR0   I+2,,AUTO
         7 005076   000021 631400 xsym               EPPR1   B_VECTNIL+17
         7 005077   000000 701000 xent               TSX1    FOI$RBLK
         7 005100   000000 011000                    NOP     0

     2521     8015              %JUNLOCK;

   8016  7 005101   000001 336007                    LCQ     1,DL
         7 005102   000000 056000 xsym               ASQ     FO_Q

     2522     8018    2         RETURN;

   8018  7 005103   200066 221300                    LDX1  ! I,,AUTO
         7 005104   000001 702211                    TSX2  ! 1,X1

     2523     8019    2   END ADD_JOB;
     2524     8020        /**************************************
PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:275  
     2525     8021         **************************************
     2526     8022                    JOB_COMPLETED
     2527     8023         **************************************
     2528     8024         **************************************/
     2529     8025        /*D* NAME:         JOB_COMPLETED
     2530     8026             PURPOSE:      To clean up after a 'job' is 'finished'
     2531     8027             DESCRIPTION:  OUTSYM keeps a JOB frame for every SYSID who
     2532     8028                           currently has at least one output symbiont file.
     2533     8029                           This frame has information about the totality
     2534     8030                           of output files for that SYSID.
     2535     8031
     2536     8032                           The input to this routine is FO_JOB$, the pointer
     2537     8033                           to the JOB frame.
     2538     8034
     2539     8035                           This routine is called when either
     2540     8036
     2541     8037                            1) a non-batch user's last current output file
     2542     8038                               disappears from our tables, in which case
     2543     8039                               we simply delete the JOB frame.
     2544     8040
     2545     8041                           or
     2546     8042
     2547     8043                            2) a batch job has both gone off and its last
     2548     8044                               output file (if any) has disappeared from our
     2549     8045                               tables, in which case we delete the job frame */
     2550     8046    1   JOB_COMPLETED: PROC;

   8046  7 005105   200064 741300       JOB_COMPLET* STX1  ! BADCNT,,AUTO

     2551     8047    2         CALL REM_JOB;

   8047  7 005106   005024 701000 7                  TSX1    REM_JOB
         7 005107   000000 011000                    NOP     0

     2552     8048    2         RETURN;

   8048  7 005110   200064 221300                    LDX1  ! BADCNT,,AUTO
PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:276  
         7 005111   000001 702211                    TSX2  ! 1,X1
     2553     8049    2   END JOB_COMPLETED;
     2554     8050        /**/
     2555     8051        /**/
     2556     8052        /**/
     2557     8053    1   END FOF$FILE;

PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:277  
--  Include file information  --

   XUD_UTS_M.:E05TOU  is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   FO_SCODE_C.:E05TOU  is referenced.
   OC_SUBS_C.:E05TOU  is referenced.
   FOM_SUBS_C.:E05TOU  is referenced.
   FOO_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   FOO_MAC_C.:E05TOU  is referenced.
   FOO_SUBS_C.:E05TOU  is referenced.
   F_ERRORS_C.:E05TOU  is referenced.
   OC_MESSHD_C.:E05TOU  is referenced.
   FS$FIT.:E05TOU  is referenced.
   FM$GRAN.:E05TOU  is referenced.
   FM$FIT.:E05TOU  is referenced.
   F$DCB.:E05TOU  cannot be made into a system file and is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure FOF$FILE.
PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:278  

 **** Variables and constants ****

  ****  Section 001  Data  FOF$FILE

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

   142-0-0/d STRC(1080)  r     1 CHK_EXT                  104-0-0/d STRC(1080)  r     1 CLOSE_FILE1_CHGATTR
    16-0-0/w UBIN        r     1 CURUTS                    43-0-0/w STRC(171)   r     1 DELNAME
    30-0-0/d STRC(72)    r     1 EXTENT                     1-0-0/w UBIN        r     1 EXTENT_WORDS
     0-0-0/w UBIN        r     1 FIT_SECT_INDEX            15-0-0/w UBIN        r     1 JNL
    17-0-0/c CHAR(31)    r     1 JOBNAME                   42-0-0/w SBIN        r     1 KCNT
    32-0-0/d STRC(234)   r     1 NEW_FILENAME              50-0-0/c STRC(360)   r     1 OPMSG_FILBAD
    62-0-0/c STRC(261)   r     1 OPMSG_KERR1               72-0-0/c STRC(360)   r     1 OPMSG_RESP
     2-0-0/w STRC(369)   r     1 TJOB

  ****  Section 006 RoData FOF$FILE

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d STRC(1080)  r     1 CLOSE_FILE1              256-0-0/d STRC(1080)  r     1 CLOSE_FILE2
   314-0-0/d STRC(2088)  r     1 CREATE_FILE2             164-0-0/d STRC(2088)  r     1 DELETE_FILE1
   406-0-0/d STRC(2088)  r     1 DELETE_FILE2             606-0-0/d STRC(144)   r     1 EFTPRIV
   612-0-0/d STRC(432)   r     1 GETUTS                   134-0-0/d STRC(432)   r     1 OCMSG_FILBAD
   150-0-0/d STRC(432)   r     1 OCMSG_KERR1              572-0-0/d STRC(432)   r     1 OCMSG_RESP
   500-0-0/d STRC(2088)  r     1 OPEN_FILE1                36-0-0/d STRC(2088)  r     1 OPEN_FILE1_UPD
   132-0-0/c STRC(72)    r     1 SYMOACCT

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

    60-0-0/w PTR         r     1 @DAD                       7-0-0/w PTR         r     1 @FIL_BOOTID
     4-0-0/w PTR         r     1 @FIL_NUM                   3-0-0/w PTR         r     1 @FIL_SYSID
    57-0-0/w PTR         r     1 @NGRAN                     6-0-0/w PTR         r     1 @RECOVERING
PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:279  
     5-0-0/w PTR         r     1 @XFIL_CNUM                64-0-0/w UBIN        r     1 BADCNT
    *0-0-0/w UBIN        r     1 BATCHFLG                  62-0-0/w UBIN        r     1 CDAD
    63-0-0/w UBIN        r     1 CGRAN                     52-0-0/c CHAR(8)     r     1 CWSN
    52-0-0/w UBIN        r     1 DAD                       *0-0-0/w UBIN        r     1 DAD
    32-0-0/w PTR         r     1 DEST$                     41-0-0/w UBIN        r     1 DEVSUBC
    56-0-0/w UBIN        r     1 ESUBC2                    42-0-0/w UBIN        r     1 EXPPRIO
    16-0-0/w PTR         r     1 EXT$                      67-0-0/w PTR         r     1 F$
    37-0-0/w UBIN        r     1 FILL                      30-0-0/c CHAR(8)     r     1 FIL_ACCT
    24-0-0/w UBIN        r     1 FIL_BADC                  *0-0-0/w CHAR(3)     r     1 FIL_BOOTID
    25-0-0/w UBIN        r     1 FIL_CNUM                  *0-0-0/w UBIN        r     1 FIL_NUM
    *0-0-0/w SBIN        r     1 FIL_NUMR                  *0-0-0/w UBIN        r     1 FIL_SYSID
    60-0-0/b BIT         r     1 FIRST_ONE                 61-0-0/w PTR         r     1 FIRST_ONE$
    15-0-0/w PTR         r     1 FIT$                      23-0-0/w UBIN        r     1 FUCODE
    50-0-0/c CHAR(8)     r     1 FWSN                      10-0-0/w UBIN        r     1 I
    61-0-0/w UBIN        r     1 I                         66-0-0/w SBIN        r     1 I
    67-0-0/w UBIN        r     1 I                         10-0-0/w SBIN        r     1 IR
    65-0-0/w SBIN        r     1 J                         22-0-0/w UBIN        r     1 JOB_SYSID
    *0-0-0/w PTR         r     1 KEYIN$                    45-0-0/w PTR         r     1 KFIL$
    57-0-0/w UBIN        r     1 KIN#                      12-0-0/b UBIN(18)    r     1 KNUM
    12-0-0/b SBIN(18)    r     1 KNUMR                     46-0-0/w SBIN        r     1 KPRIO
    40-0-0/w UBIN        r     1 NCHUNKS                   34-0-0/w UBIN        r     1 NFIL
    55-0-0/w UBIN        r     1 NFILF                     *0-0-0/w UBIN        r     1 NGRAN
    51-0-0/w UBIN        r     1 NOPNERR                   20-0-0/w SBIN        r     1 NRECS
    11-0-0/w UBIN        r     1 NUM                       36-0-0/w UBIN        r     1 NUMEXT
    35-0-0/w PTR         r     1 NXTFIL$                   27-0-0/w PTR         r     1 OLDLEXT$
    17-0-0/w PTR         r     1 P$                        *0-0-0/w PTR         r     1 PASSED_EXT$
    14-0-0/w PTR         r     1 PREVEXT$                  21-0-0/w UBIN        r     1 PRIO
    *0-0-0/w UBIN        r     1 RECOVERING                54-0-0/w UBIN        r     1 RSUBC
    26-0-0/w UBIN        r     1 SETX                      *0-0-0/w UBIN        r     1 SPILLDISP
    53-0-0/w STRC        r     1 STAMP                     33-0-0/w UBIN        r     1 SYSID
    45-0-0/w UBIN        r     1 TGRANS                    13-0-0/w UBIN        r     1 UGRANS
    *0-0-0/w UBIN        r     1 XFIL_CNUM                 *0-0-0/w UBIN        r     1 XFUCODE
    *0-0-0/w UBIN        r     1 XJOB_SYSID

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:280  
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 B$JIT$                     0-0-0/w PTR         r     1 B$TCB$
     0-0-0/w PTR         r     1 FO_DEV$                    0-0-0/w STRC(288)   r     1 FO_EXTSCB
     0-0-0/w PTR         r     1 FO_FIL$                    0-0-0/w STRC(171)   r     1 FO_FILENAME
     0-0-0/w STRC(288)   r     1 FO_FILSCB                  0-0-0/w STRC(1332)  r     1 FO_FIL_INIT
     0-0-0/w UBIN        r     1 FO_FITBUF1(0:2047)
     0-0-0/w PTR         r     1 FO_JOB$                    0-0-0/w STRC(288)   r     1 FO_JOBSCB
     0-0-0/w STRC(369)   r     1 FO_JOB_INIT                0-0-0/d STRC(1512)  r     1 FO_Q
     0-0-0/w STRC(1152)  r     1 FO_SYMBINFO                0-0-0/d STRC(432)   r     1 GET_SYMBINFO

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(2448)  r     1 B$ALT                      0-0-0/w STRC(144)   r     1 B$TCB
     0-0-0/w STRC(576)   r     1 CODE01                     0-0-0/w STRC(324)   r     1 CODE03
     0-0-0/w STRC(396)   r     1 CODE04                     0-0-0/w STRC(1404)  r     1 CODE16
     0-0-0/d ASTR(3528)  r     1 F$DCB                      0-0-0/w STRC(1116)  r     1 FM$FIT
     0-0-0/w STRC(180)   r     1 FM$GRAN                    0-0-0/w STRC(657)   r     1 FO$DEV
     0-0-0/w STRC(108)   r     1 FO$EXT                     0-0-0/w STRC(1332)  r     1 FO$FIL
     0-0-0/w STRC(396)   r     1 FO$FKEYIN                  0-0-0/w ASTR(351)   r     1 FO$JOB
     0-0-0/d STRC(612)   r     1 FPRG_DATA                  0-0-0/w STRC(936)   r     1 FS$DEST
     0-0-0/w STRC(972)   r     1 FS$FITDEST                 0-0-0N  NULL        r     1 M$CSCG
     0-0-0N  NULL        r     1 M$FILE1                    0-0-0N  NULL        r     1 M$FILE2
     0-0-0N  NULL        r     1 M$OSCG                     0-0-0/w PTR         r     1 PTR$


   Procedure FOF$FILE requires 2634 words for executable code.
   Procedure FOF$FILE requires 60 words of local(AUTO) storage.

    No errors detected in file FOF$FILE.:E05TSI    .
PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:281  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:282  
          MINI XREF LISTING

A0 IN PROCEDURE ADD_EXT
      6582**LABEL    6584--CALLALT
A0 IN PROCEDURE DEL_FILE
      7671**LABEL    7672--CALLALT
A1 IN PROCEDURE ADD_EXT
      6587**LABEL    6585--GOTO
A1 IN PROCEDURE DEL_FILE
      7675**LABEL    7676--CALLALT
A1 IN PROCEDURE UPD_FILE
      7591**LABEL    7587--CALLALT  7589--CALLALT  7590--CALLALT  7591--CALLALT
A14 IN PROCEDURE UPD_FILE
      7604**LABEL    7536--CALLALT
A2 IN PROCEDURE DEL_FILE
      7675**LABEL    7679--CALLALT
ADDEXT1 IN PROCEDURE ADD_EXT
      6601**LABEL    6576--CALLALT
ADDEXT2 IN PROCEDURE ADD_EXT
      6597**LABEL    6598--GOTO
ADD_EXT IN PROCEDURE GRAB_EXTS
      6561**PROC     6523--CALL
ADD_FILE
      5893**PROC     5845--CALL     5880--CALL
ADD_JOB
      7971**PROC     6061--CALL     7180--CALL
AFILE01 IN PROCEDURE ADD_FILE
      5970**LABEL    5927--CALLALT  5945--GOTO
AFILE011 IN PROCEDURE ADD_FILE
      6052**LABEL    6032--CALLALT
AFILE012 IN PROCEDURE ADD_FILE
      6064**LABEL    6057--GOTO
AFILE02 IN PROCEDURE ADD_FILE
      6241**LABEL    6209--GOTO     6231--GOTO
PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:283  
AFILE03 IN PROCEDURE ADD_FILE
      6253**LABEL    6277--GOTO
AFILE04 IN PROCEDURE ADD_FILE
      6253**LABEL    6200--CALLALT
AFILE05 IN PROCEDURE ADD_FILE
      6270**LABEL    6271--CALLALT
AFILE1 IN PROCEDURE ADD_FILE
      6169**LABEL    5976--CALLALT  6283--CALLALT
AFILE2 IN PROCEDURE ADD_FILE
      6173**LABEL    6004--CALLALT
AFILE29 IN PROCEDURE ADD_FILE
      6170**LABEL    6110--CALLALT  6290--CALLALT
AFILE30 IN PROCEDURE ADD_FILE
      6176**LABEL    6080--CALLALT
AFILE31 IN PROCEDURE ADD_FILE
      6179**LABEL    6028--CALLALT  6300--CALLALT
AFILE4 IN PROCEDURE ADD_FILE
      6182**LABEL    6061--CALLALT
AFILE_BAD IN PROCEDURE ADD_FILE
      6338**LABEL    6097--CALLALT  6142--CALLALT  6171--GOTO     6174--GOTO     6177--GOTO     6180--GOTO
      6183--GOTO     6186--GOTO     6304--CALLALT  6314--CALLALT
AFILE_CHAB IN PROCEDURE ADD_FILE
      6400**LABEL    6359--GOTO
AFILE_CHRM IN PROCEDURE ADD_FILE
      6384**LABEL    6360--GOTO
AFILE_MSG IN PROCEDURE ADD_FILE
      6357**LABEL    6370--GOTO     6378--GOTO     6392--GOTO     6409--GOTO
ALTRT
      5844**LABEL    5845--CALLALT  5874--CALLALT  5880--CALLALT  7078--CALLALT  7180--CALLALT  7188--CALLALT
      7219--CALLALT  7248--CALLALT  7267--CALLALT  7305--CALLALT  7361--CALLALT
ALTRT IN PROCEDURE ADD_FILE
      6253**LABEL    5971--CALLALT  6256--CALLALT
ALTRT IN PROCEDURE ADD_JOB
      7987**LABEL    7977--CALLALT
ALTRT IN PROCEDURE FIND_FILE
      7435**LABEL    7433--CALLALT
PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:284  
ALTRT IN PROCEDURE GRAB_EXTS
      6533**LABEL    6523--CALLALT
ALTRT IN PROCEDURE UPD_FILE
      7640**LABEL    7533--CALLALT  7644--CALLALT
B$ALT.CODE
      4455**DCL      4455--REDEF    4456--REDEF    4456--REDEF
B$ALT.ERR.CODE
      4457**DCL      6169>>ASSIGN   6275>>IF
B$ALT.ERR.ERR#
      4457**DCL      4457--REDEF
B$ALT.EVID
      4456**DCL      4456--REDEF    4456--REDEF
B$JIT.ERR.MID
      4498**DCL      4498--REDEF
B$JIT$
      4862**DCL      4492--IMP-PTR
B$TCB.ALT$
      4451**DCL      6169>>ASSIGN   6275>>IF
B$TCB$
      4861**DCL      4451--IMP-PTR  6169>>ASSIGN   6275>>IF
BADCNT IN PROCEDURE ADD_EXT
      6568**DCL      6570<<ASSIGN   6587<<ASSIGN   6587>>ASSIGN   6597>>IF
BAD_FILE
      7504**PROC     6363--CALL
BATCHFLG
        37**DCL      7178>>IF
CANCEL0
      7132**LABEL    7133--GOTO
CANCEL1
      7164**LABEL    7158--CALLALT
CANCEL2
      7180**LABEL    7207--GOTO
CDAD IN PROCEDURE ADD_EXT
      6566**DCL      6571<<ASSIGN   6577>>ASSIGN   6595<<ASSIGN   6595>>ASSIGN
CGRAN IN PROCEDURE ADD_EXT
      6567**DCL      6572<<ASSIGN   6573>>DOWHILE  6574>>ASSIGN   6575>>IF       6593<<ASSIGN   6593>>ASSIGN
PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:285  
CHAIN_FILE IN PROCEDURE UNCHAIN_FILE
      7837**ENTRY    6157--CALL     6852--CALL     6907--CALL     7110--CALL     7231--CALL     7290--CALL
      7471--CALL
CHK IN PROCEDURE CHK_KFIL2
      6969**LABEL    6966--GOTO
CHK_EXT
      5704**DCL      6584<>CALL
CHK_EXT.V
      5708**DCL      5704--DCLINIT
CHK_EXT.V.SETX#
      5710**DCL      6582<<ASSIGN
CHK_KFIL IN PROCEDURE CHK_KFIL2
      6977**ENTRY    6806--CALL     6878--CALL     6921--CALL
CHK_KFIL1 IN PROCEDURE CHK_KFIL2
      7004**ENTRY    6808--CALL     6880--CALL     6923--CALL
CHK_KFIL2 IN PROCEDURE FIL_KEYIN
      6960**PROC     6804--CALL     6876--CALL     6919--CALL
CHK_KFIL3 IN PROCEDURE CHK_KFIL2
      6968**ENTRY    6874--CALL     6917--CALL
CLOSE_FILE1
      4896**DCL      5971<>CALL     5982<>CALL     6254<>CALL     6269<>CALL     6272<>CALL     6285<>CALL
      7589<>CALL
CLOSE_FILE1.SN_
      4896**DCL      4896--REDEF
CLOSE_FILE1.UTL_
      4897**DCL      4897--REDEF
CLOSE_FILE1.V
      4901**DCL      4896--DCLINIT
CLOSE_FILE1.V.EXPIRE#
      4911**DCL      4911--REDEF
CLOSE_FILE1.V.TYPE#
      4909**DCL      4909--REDEF
CLOSE_FILE1.V.XTNSIZE#
      4906**DCL      4906--REDEF    4908--REDEF
CLOSE_FILE1_CHGATTR
      4943**DCL      7644<>CALL
PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:286  
CLOSE_FILE1_CHGATTR.NAME_
      4944**DCL      7624<<ASSIGN   7640<<ASSIGN
CLOSE_FILE1_CHGATTR.PROCATTR_
      4947**DCL      7535<<ASSIGN   7537<<ASSIGN
CLOSE_FILE1_CHGATTR.SN_
      4943**DCL      4943--REDEF
CLOSE_FILE1_CHGATTR.UTL_
      4944**DCL      4944--REDEF
CLOSE_FILE1_CHGATTR.V
      4948**DCL      4943--DCLINIT
CLOSE_FILE1_CHGATTR.V.EXPIRE#
      4958**DCL      4958--REDEF
CLOSE_FILE1_CHGATTR.V.TYPE#
      4956**DCL      4956--REDEF
CLOSE_FILE1_CHGATTR.V.XTNSIZE#
      4953**DCL      4953--REDEF    4955--REDEF
CLOSE_FILE2
      5320**DCL      7591<>CALL
CLOSE_FILE2.SN_
      5320**DCL      5320--REDEF
CLOSE_FILE2.UTL_
      5321**DCL      5321--REDEF
CLOSE_FILE2.V
      5325**DCL      5320--DCLINIT
CLOSE_FILE2.V.EXPIRE#
      5335**DCL      5335--REDEF
CLOSE_FILE2.V.TYPE#
      5333**DCL      5333--REDEF
CLOSE_FILE2.V.XTNSIZE#
      5330**DCL      5330--REDEF    5332--REDEF
CODE01.EXTNT.XTNSIZE
      4466**DCL      6503>>ASSIGN
CODE01.HASH
      4465**DCL      6478>>ASSIGN
CODE01.XTNT
      4465**DCL      4466--REDEF
PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:287  
CODE01.XTNT.XTNSDA
      4465**DCL      6498>>ASSIGN
CODE01.XTNT.XTNSIZE
      4465**DCL      6497>>ASSIGN
CODE03.UGRANS
      4469**DCL      6467>>ASSIGN
CODE04.CREATION.TIME
      4480**DCL      6087>>ASSIGN
CODE04.CREATOR.ACCT
      4480**DCL      6081>>ASSIGN
CODE04.CREATOR.NAME
      4480**DCL      6084>>ASSIGN
CODE16.BANNER_REPEATS
      4486**DCL      6112>>ASSIGN   6115>>ASSIGN   6292>>ASSIGN   6295>>ASSIGN
CODE16.NBANNER_RECS
      4487**DCL      5988>>IF       6115>>ASSIGN   6295>>ASSIGN
CODE16.PAGENO
      4484**DCL      6112>>ASSIGN   6292>>ASSIGN
CODE16.RECNO
      4484**DCL      6115>>ASSIGN   6295>>ASSIGN
CREATE_FILE2
      5413**DCL      7590<>CALL
CREATE_FILE2.ACSVEH_
      5415**DCL      5416--REDEF
CREATE_FILE2.ALTKEYS_
      5421**DCL      5422--REDEF    5422--REDEF
CREATE_FILE2.HDR_
      5420**DCL      5421--REDEF
CREATE_FILE2.TAB_
      5419**DCL      5420--REDEF
CREATE_FILE2.UHL_
      5413**DCL      5414--REDEF    5414--REDEF
CREATE_FILE2.V
      5422**DCL      5413--DCLINIT
CREATE_FILE2.V.FSN#
      5453**DCL      5453--REDEF    5453--REDEF
PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:288  
CREATE_FILE2.WSN_
      5419**DCL      5419--REDEF
CURUTS
      4714**DCL      5787--DCLINIT  7364<>CALL     7364<>CALL     7367>>IF       7377>>IF
CWSN IN PROCEDURE FIL_KEYIN
      6724**DCL      6737<<ASSIGN   7008>>IF       7008>>IF
DAD IN PROCEDURE ADD_EXT
      6564**DCL      6561--PROC     6571>>ASSIGN
DAD IN PROCEDURE ADD_FILE
      5900**DCL      6498<<ASSIGN   6523<>CALL
DELETE_FILE1
      5249**DCL      5990<>CALL     6256<>CALL
DELETE_FILE1.ACSVEH_
      5251**DCL      5252--REDEF
DELETE_FILE1.ALTKEYS_
      5257**DCL      5258--REDEF    5258--REDEF
DELETE_FILE1.HDR_
      5256**DCL      5257--REDEF
DELETE_FILE1.TAB_
      5255**DCL      5256--REDEF
DELETE_FILE1.UHL_
      5249**DCL      5250--REDEF    5250--REDEF
DELETE_FILE1.V
      5258**DCL      5249--DCLINIT
DELETE_FILE1.V.FSN#
      5289**DCL      5289--REDEF    5289--REDEF
DELETE_FILE1.WSN_
      5255**DCL      5255--REDEF
DELETE_FILE2
      5528**DCL      7676<>CALL
DELETE_FILE2.ACSVEH_
      5530**DCL      5531--REDEF
DELETE_FILE2.ALTKEYS_
      5536**DCL      5537--REDEF    5537--REDEF
DELETE_FILE2.HDR_
      5535**DCL      5536--REDEF
PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:289  
DELETE_FILE2.TAB_
      5534**DCL      5535--REDEF
DELETE_FILE2.UHL_
      5528**DCL      5529--REDEF    5529--REDEF
DELETE_FILE2.V
      5537**DCL      5528--DCLINIT
DELETE_FILE2.V.FSN#
      5568**DCL      5568--REDEF    5568--REDEF
DELETE_FILE2.WSN_
      5534**DCL      5534--REDEF
DELNAME
      4750**DCL      5529--DCLINIT
DELNAME.BOOTID
      4750**DCL      7669<<ASSIGN
DELNAME.CNUM
      4751**DCL      7675<<CALLBLT
DELNAME.NUM
      4751**DCL      7671<<CALLBLT
DELNAME.SYSID
      4750**DCL      7670<<CALLBLT
DEL_FILE
      7663**PROC     5939--CALL     6054--CALL     6403--CALL     6931--CALL     7088--CALL     7167--CALL
      7191--CALL     7224--CALL
DEST$
      4649**DCL      6025<<ASSIGN   6028<>CALL     6030>>ASSIGN   6098>>ASSIGN   6099>>IF       6100>>ASSIGN
      6102>>ASSIGN   6103>>IF       6105>>ASSIGN   6106>>ASSIGN   6107>>ASSIGN   6108>>ASSIGN   6118>>ASSIGN
      6119>>IF       6121>>ASSIGN   6125>>ASSIGN   6126>>ASSIGN   6127>>ASSIGN   6128>>ASSIGN   6129>>ASSIGN
      6130>>IF       6137>>IF       6150>>IF       6299<<ASSIGN   6300<>CALL     6323>>IF       6430>>IF
      6431>>ASSIGN   6434>>ASSIGN   6435>>IF       6436>>ASSIGN   6437>>IF       6437>>IF       6443>>ASSIGN
      6444>>ASSIGN   6446>>IF       7534<<ASSIGN   7536<>CALL     7537>>ASSIGN   7539>>ASSIGN   7554>>ASSIGN
      7555>>ASSIGN   7556>>ASSIGN   7562>>ASSIGN   7563>>ASSIGN   7570>>ASSIGN   7571>>ASSIGN   7576>>ASSIGN
      7577>>ASSIGN   7582>>ASSIGN   7599>>ASSIGN   7600>>ASSIGN   7605>>ASSIGN   7612>>ASSIGN   7613>>ASSIGN
DEVSUBC
      4656**DCL      7132<<ASSIGN   7151<<ASSIGN   7159>>IF       7169<>CALL     7193<>CALL     7206<<ASSIGN
DONE IN PROCEDURE ADD_JOB
      8012**LABEL    8007--GOTO
PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:290  
DONE IN PROCEDURE UNCHAIN_FILE
      7803**LABEL    7793--GOTO     7802--GOTO
EFTPRIV
      5764**DCL      7672<>CALL     7679<>CALL
EFTPRIV.V
      5764**DCL      5764--DCLINIT
ESUBC2 IN PROCEDURE FIL_KEYIN
      6727**DCL      6811<<ASSIGN   6828>>ASSIGN   6926<<ASSIGN
EXPPRIO
      4657**DCL      7372<<DOINDEX  7373>>IF       7375>>ASSIGN
EXT$
      4638**DCL      6313>>ASSIGN   6475>>ASSIGN   6576<>CALL     6577>>ASSIGN   6578>>ASSIGN   6579>>ASSIGN
      6580>>ASSIGN   6581>>ASSIGN   6590>>ASSIGN   6591>>ASSIGN   6592>>ASSIGN   7249>>ASSIGN   7691<<ASSIGN
      7692>>IF       7696<<ASSIGN   7697>>DOWHILE  7698>>ASSIGN   7699<>CALL     7700<<ASSIGN   7891<<ASSIGN
      7893>>IF       7895>>DOWHILE  7897<<ASSIGN   7897>>ASSIGN
EXTENT
      4727**DCL      5704--DCLINIT
EXTENT.DAD#
      4727**DCL      6581<<ASSIGN
EXTENT.GRANS#
      4727**DCL      6580<<ASSIGN
EXTENT_WORDS
      4659**DCL      6472<<ASSIGN   6495>>DOINDEX
F$ IN PROCEDURE UNCHAIN_FILE
      7779**DCL      7808<<ASSIGN   7809>>DOWHILE  7810>>IF       7811>>ASSIGN   7811>>ASSIGN   7812<<ASSIGN
      7812>>ASSIGN   7815<<ASSIGN   7816>>DOWHILE  7817>>IF       7818>>ASSIGN   7818>>ASSIGN   7819<<ASSIGN
      7819>>ASSIGN   7842<<ASSIGN   7843>>DOWHILE  7844>>IF       7846<<ASSIGN   7846>>ASSIGN   7857<<ASSIGN
      7858>>DOWHILE  7859>>IF       7861>>ASSIGN   7864<<ASSIGN   7864>>ASSIGN
F$DCB.ACTPOS
       154**DCL       154--REDEF
F$DCB.ARS
       129**DCL       129--REDEF
F$DCB.ATTR
       147**DCL       148--REDEF
F$DCB.BORROW
       162**DCL       162--REDEF     162--REDEF     162--REDEF
PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:291  
F$DCB.DCBNAME.L
       176**DCL       176--IMP-SIZ
F$DCB.EOMCHAR
       133**DCL       133--REDEF
F$DCB.FLDID
       157**DCL       157--REDEF
F$DCB.FORM$
       151**DCL       151--REDEF
F$DCB.FSECT
       167**DCL       167--REDEF
F$DCB.FSN
       144**DCL       144--REDEF     144--REDEF     145--REDEF
F$DCB.HEADER$
       150**DCL       150--REDEF
F$DCB.IXTNSIZE
       148**DCL       148--REDEF
F$DCB.LASTSTA$
       138**DCL       138--REDEF
F$DCB.LVL
       163**DCL       163--REDEF
F$DCB.NAME.C
       138**DCL       138--REDEF
F$DCB.NOEOF
       159**DCL       159--REDEF
F$DCB.NRECS
       149**DCL       149--REDEF    5978>>ASSIGN
F$DCB.NRECX
       168**DCL       168--REDEF
F$DCB.OHDR
       160**DCL       160--REDEF
F$DCB.ORG
       143**DCL       143--REDEF
F$DCB.PRECNO
       166**DCL       166--REDEF
F$DCB.RCSZ
       171**DCL       171--REDEF
PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:292  
F$DCB.RES
       139**DCL       139--REDEF
F$DCB.SETX
       151**DCL       151--REDEF    5977>>ASSIGN
F$DCB.TAB$
       150**DCL       151--REDEF
F$DCB.TDA
       165**DCL       165--REDEF
F$DCB.WSN
       140**DCL       140--REDEF
FILL
      4654**DCL      5843<<ASSIGN   5878<<ASSIGN   5923>>IF       5983>>IF       6011>>IF       6077>>IF
      6137>>IF       6143>>IF       6150>>IF       6238>>IF       6238>>IF       6280>>IF       6287>>IF
      6301>>IF
FIL_ACCT
      4648**DCL      6076<<ASSIGN   6202<<ASSIGN   7509>>ASSIGN
FIL_BADC
      4644**DCL      6170<<ASSIGN   6173<<ASSIGN   6176<<ASSIGN   6179<<ASSIGN   6182<<ASSIGN   6185<<ASSIGN
      6350>>DOCASE   6447<<ASSIGN   6541<<ASSIGN   6545<<ASSIGN   6548<<ASSIGN   6551<<ASSIGN   6601<<ASSIGN
      6604<<ASSIGN   7505>>ASSIGN   7547<<ASSIGN   7613>>ASSIGN   7629<<ASSIGN   7636>>CALLBLT
FIL_BOOTID
        40**DCL        22--PROC     5841--ENTRY    5872--ENTRY    5875<<ASSIGN   5905>>ASSIGN   5935>>IF
      6008>>ASSIGN
FIL_CNUM
      4645**DCL      5844<<ASSIGN   5879<<DOINDEX  5908>>CALLBLT  5911>>IF       6238>>IF       6238>>IF
      6276>>CALLBLT  6357>>IF       6384>>IF       6435>>IF       6437>>IF       7077<<ASSIGN   7508>>ASSIGN
      7525>>CALLBLT
FIL_KEYIN
      6718**PROC     6710--CALL
FIL_NUM
        34**DCL        22--PROC       35--REDEF    5841--ENTRY    5872--ENTRY    5907>>CALLBLT  6007>>ASSIGN
      7072--ENTRY    7130--ENTRY    7149--ENTRY    7204--ENTRY    7216--ENTRY    7264--ENTRY    7273>>IF
      7436>>IF       7507>>ASSIGN
FIL_NUMR
        35**DCL      7153>>IF       7270>>IF
FIL_SYSID
PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:293  
        29**DCL        22--PROC       30--REDEF      31--REDEF      32--REDEF      33--REDEF    5841--ENTRY
      5872--ENTRY    5906>>CALLBLT  5951>>IF       6006>>ASSIGN   6703--ENTRY    7072--ENTRY    7130--ENTRY
      7149--ENTRY    7157>>ASSIGN   7204--ENTRY    7216--ENTRY    7245--ENTRY    7264--ENTRY    7266>>ASSIGN
      7301--ENTRY    7432>>ASSIGN   7506>>ASSIGN
FIND_FILE
      7431**PROC     5874--CALL     5927--CALL     6200--CALL     7188--CALL     7219--CALL
FIND_JOB
      7949**PROC     6032--CALL     7158--CALL     7267--CALL     7305--CALL     7433--CALL
FIRST_ONE IN PROCEDURE FIL_KEYIN
      6729**DCL      6791<<ASSIGN   6883>>IF       6884<<ASSIGN
FIRST_ONE$ IN PROCEDURE FIL_KEYIN
      6730**DCL      6792<<ASSIGN   6794>>DOWHILE  6885<<ASSIGN
FIT$
      4637**DCL      5981<<ASSIGN   5985>>ASSIGN   6025>>ASSIGN   6079>>ASSIGN   6089>>ASSIGN   6109>>ASSIGN
      6284<<ASSIGN   6289>>ASSIGN   6299>>ASSIGN   6464>>ASSIGN   6469>>ASSIGN   6472>>ASSIGN
FIT_SECT_INDEX
      4658**DCL      6470<<ASSIGN   6471<>CALL     6472>>ASSIGN
FM$FIT.CODES.NDW
      4462**DCL      6472>>ASSIGN
FM$GRAN
      4592**DCL      5981--ASSIGN   6284--ASSIGN   7534--ASSIGN
FO$DEV.FLG.QUIT
      1953**DCL      6229>>IF
FO$DEV.NAME
      1912**DCL      1913--REDEF
FO$DEV.QUITRSN
      1964**DCL      6229>>IF
FO$DEV.RACCT
      1980**DCL      1981--REDEF
FO$DKEYIN.CHKP
      1819**DCL      1820--REDEF
FO$DKEYIN.DEVNM
      1812**DCL      1813--REDEF
FO$DKEYIN.TNAME
      1824**DCL      1825--REDEF    1826--REDEF
FO$EXT.DAD
PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:294  
      2018**DCL      6577<<ASSIGN   6581>>ASSIGN
FO$EXT.GRANS
      2017**DCL      6578<<ASSIGN   6580>>ASSIGN
FO$EXT.LNK$
      2016**DCL      6591<<ASSIGN   6592--ASSIGN   7698>>ASSIGN   7895>>DOWHILE  7897>>ASSIGN
FO$EXT.STAMP
      2019**DCL      6579<<ASSIGN
FO$FIL
      2036**DCL      6005<<ASSIGN
FO$FIL.AHEAD
      2097**DCL      7811<<ASSIGN   7811>>ASSIGN   7818<<ASSIGN   7818>>ASSIGN   7849<<ASSIGN   7861<<ASSIGN
FO$FIL.ATTR
      2054**DCL      6106<<ASSIGN
FO$FIL.BOOTID
      2094**DCL      5875>>ASSIGN   5935>>IF       6008<<ASSIGN   7532>>ASSIGN   7669>>ASSIGN
FO$FIL.CDEV$
      2058**DCL      5938>>IF       5942>>ASSIGN   6227>>IF       6229>>IF       6229>>IF       6331>>IF
      6333>>ASSIGN   6386>>IF       6389>>ASSIGN   6403>>IF       6406>>ASSIGN   6437>>IF       6797>>ASSIGN
      7165>>ASSIGN   7189>>ASSIGN   7717>>IF
FO$FIL.CHKPBR
      2088**DCL      6127<<ASSIGN   7600>>ASSIGN
FO$FIL.COPIES
      2053**DCL      6431<<ASSIGN   7489>>IF       7554>>ASSIGN
FO$FIL.CREATED
      2092**DCL      6087<<ASSIGN   7367>>IF       7377>>IF
FO$FIL.DEST
      2048**DCL      2049--REDEF
FO$FIL.DESTR.TYP
      2051**DCL      6105<<ASSIGN
FO$FIL.DESTR.WSN
      2050**DCL      6100<<ASSIGN   6102<<ASSIGN   6889>>IF       6906<<ASSIGN   6992>>IF       6999>>IF
      7008>>IF       7008>>IF       7577>>ASSIGN   7810>>IF       7810>>IF       7817>>IF       7817>>IF
      7844>>IF       7844>>IF       7859>>IF       7859>>IF
FO$FIL.EXT$
      2042**DCL      6473--ASSIGN   7691>>ASSIGN   7696>>ASSIGN   7891>>ASSIGN
FO$FIL.FLG.CHKPTD
PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:295  
      2079**DCL      6126<<ASSIGN
FO$FIL.FLG.CONCUR
      2069**DCL      6133<<ASSIGN   6305>>IF       6308<<ASSIGN
FO$FIL.FLG.CPRIO
      2077**DCL      6122<<ASSIGN   6843<<ASSIGN   7481>>IF
FO$FIL.FLG.CPVFC
      2078**DCL      6118<<ASSIGN
FO$FIL.FLG.CRASHED
      2080**DCL      6436<<ASSIGN
FO$FIL.FLG.GLC
      2074**DCL      6130>>IF       6150>>IF       6206>>IF       6305>>IF       6323>>IF       6434<<ASSIGN
FO$FIL.FLG.PAGES
      2072**DCL      6108<<ASSIGN   6111>>IF       6291>>IF
FO$FIL.FLG.SAP
      2076**DCL      6128<<ASSIGN   6146>>IF       6443<<ASSIGN   7377>>IF       7457<<ASSIGN
FO$FIL.FLG.SPILL
      2081**DCL      6832>>IF       6897>>IF       6927>>IF       7006>>IF       7220>>IF       7234<<ASSIGN
FO$FIL.FLG.UNHELD
      2070**DCL      6104<<ASSIGN   7284<<ASSIGN
FO$FIL.FORM
      2063**DCL      6107<<ASSIGN   6898<>CALL     6970>>IF       6973>>IF
FO$FIL.GRANS
      2066**DCL      6533<<ASSIGN   6533>>ASSIGN   7489>>IF
FO$FIL.HICNUM
      2083**DCL      5876>>ASSIGN   5877<<ASSIGN   6238>>IF       6238>>IF       6281<<ASSIGN   6281>>ASSIGN
      7583>>DOINDEX  7674>>DOINDEX
FO$FIL.IPRIO
      2095**DCL      6121<<ASSIGN   6125<<ASSIGN   6842<<ASSIGN   7479>>ASSIGN
FO$FIL.JLNK$
      2046**DCL      6066<<ASSIGN   7164>>ASSIGN   7278>>ASSIGN   7437>>ASSIGN   7738>>ASSIGN   7741>>DOWHILE
      7742>>ASSIGN   7744<<ASSIGN   7744>>ASSIGN
FO$FIL.KCNT
      2099**DCL      6838>>IF       6840<<ASSIGN
FO$FIL.LNK$
      2038**DCL      6796>>ASSIGN   7369>>ASSIGN   7380>>ASSIGN   7790>>ASSIGN   7797>>IF       7799<<ASSIGN
      7799>>ASSIGN   7800>>IF       7804>>ASSIGN   7808>>ASSIGN   7812>>ASSIGN   7819>>ASSIGN   7846>>ASSIGN
PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:296  
      7864>>ASSIGN   7870<<ASSIGN   7871<<ASSIGN
FO$FIL.NUM
      2062**DCL      6007<<ASSIGN   6827>>ASSIGN   7008>>IF       7273>>IF       7436>>IF       7531>>CALLBLT
      7671>>CALLBLT
FO$FIL.NUMEXT
      2065**DCL      6589<<ASSIGN   6589>>ASSIGN   7899>>IF
FO$FIL.OJOB$
      2044**DCL      6064<<ASSIGN   6202>>ASSIGN   6962>>IF       6965>>IF       7732>>IF       7734>>ASSIGN
FO$FIL.PAGES
      2100**DCL      6112<<ASSIGN   6115<<ASSIGN   6292<<ASSIGN   6295<<ASSIGN
FO$FIL.PRIO
      2086**DCL      6139<<ASSIGN   6148<<ASSIGN   6155<<ASSIGN   6310>>IF       6327>>IF       6845>>IF
      6847>>IF       6847>>IF       6851<<ASSIGN   7230<<ASSIGN   7287>>IF       7455<<ASSIGN   7465>>IF
      7783>>IF       7787>>ASSIGN   7838>>ASSIGN
FO$FIL.SAPCOPIES
      2084**DCL      6129<<ASSIGN   6146>>IF       6444<<ASSIGN   7456>>IF       7555>>ASSIGN
FO$FIL.SETX
      2056**DCL      6010<<ASSIGN   6582>>ASSIGN
FO$FIL.SYSID
      2060**DCL      6006<<ASSIGN   6023>>ASSIGN   6826>>ASSIGN   7008>>IF       7530>>CALLBLT  7670>>CALLBLT
FO$FIL.VLP_FPRG
      2114**DCL      6092<<ASSIGN
FO$FKEYIN.ACCT
      1853**DCL      1854--REDEF    6962>>IF       6965>>IF
FO$FKEYIN.CADDR
      1843**DCL      6738>>ASSIGN   6739>>ASSIGN
FO$FKEYIN.FNAME.FORM
      1855**DCL      6970>>IF       6973>>IF
FO$FKEYIN.FWSN
      1852**DCL      6736>>ASSIGN   6984>>IF       6991>>CALLBLT  6992>>IF
FO$FKEYIN.KIN#
      1842**DCL      6733>>ASSIGN
FO$FKEYIN.NOTACCT
      1850**DCL      6961>>IF
FO$FKEYIN.NOTFORM
      1849**DCL      1850--REDEF    6969>>IF
PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:297  
FO$FKEYIN.NOTWSN
      1851**DCL      6989>>IF
FO$FKEYIN.NUM
      1848**DCL      6735>>ASSIGN
FO$FKEYIN.PRIO
      1845**DCL      6754>>ASSIGN   6755>>IF       6842>>ASSIGN   6845>>IF       6851>>ASSIGN   7563>>ASSIGN
FO$FKEYIN.SWSN
      1847**DCL      6889>>IF       6898<>CALL     6906>>ASSIGN   6954>>ASSIGN
FO$FKEYIN.SYSID
      1844**DCL      6734>>ASSIGN
FO$FKEYIN.WSN
      1846**DCL      6737>>ASSIGN   6983>>CALLBLT  6984>>IF       7007>>CALLBLT
FO$JOB
      2136**DCL      7976--ASSIGN   7979<<ASSIGN   8014--CALL
FO$JOB.ACCT
      2154**DCL      6076>>ASSIGN   6081<<ASSIGN   6082>>CALLBLT  6202>>ASSIGN   6962>>IF       6965>>IF
FO$JOB.ACCTL
      2155**DCL      6083<<ASSIGN
FO$JOB.FILHD$
      2140**DCL      6066>>ASSIGN   6067<<ASSIGN   7162>>ASSIGN   7268>>ASSIGN   7434>>ASSIGN   7736>>ASSIGN
      7738<<ASSIGN
FO$JOB.FLG.JOFF
      2146**DCL      6034>>IF       6036<<ASSIGN   7748>>IF
FO$JOB.FLG.OCANCEL
      2148**DCL      6052>>IF       7161<<ASSIGN   7182<<ASSIGN
FO$JOB.FLG.RCVRF
      2149**DCL      6035>>IF       6069<<ASSIGN
FO$JOB.JNL
      2160**DCL      2167--IMP-SIZ  7976>>ASSIGN   7978<<ASSIGN   7979>>ASSIGN   7982<<ASSIGN   7983>>ASSIGN
      8014>>CALL
FO$JOB.JOBNAME
      2167**DCL      7983<<ASSIGN
FO$JOB.LNK$
      2138**DCL      7953>>ASSIGN   7981<<ASSIGN   8006>>ASSIGN   8009>>DOWHILE  8010>>ASSIGN   8012<<ASSIGN
      8012>>ASSIGN
FO$JOB.MODE
PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:298  
      2151**DCL      5935>>IF       6098<<ASSIGN   7159>>IF       7181<<ASSIGN   7748>>IF
FO$JOB.NFIL
      2143**DCL      6065<<ASSIGN   6065>>ASSIGN   7746>>IF
FO$JOB.NFIL_DONE
      2153**DCL      7735<<ASSIGN   7735>>ASSIGN   7746>>IF
FO$JOB.SYSID
      2142**DCL      7952>>IF       7980<<ASSIGN
FO$JOB.UNAME
      2157**DCL      6084<<ASSIGN   6085>>CALLBLT
FO$JOB.UNAMEL
      2158**DCL      6086<<ASSIGN
FO$RKEYIN.DEVNM
      1876**DCL      1877--REDEF
FOD$AVAIL
      4850**DCL-ENT  6160--CALL     6910--CALL
FOD$EVENT
      4851**DCL-ENT  5943--CALL     6334--CALL     6390--CALL     6407--CALL     6933--CALL     7169--CALL
      7193--CALL
FOI$CRASH
      4852**DCL-ENT  7717--CALL     7900--CALL
FOI$GBLK
      4853**DCL-ENT  7977--CALL
FOI$GBUF
      4854**DCL-ENT  6004--CALL     6576--CALL
FOI$RBLK
      4855**DCL-ENT  8014--CALL
FOI$RBUF
      4856**DCL-ENT  7699--CALL     7758--CALL
FOI$SNAP
      4857**DCL-ENT  5953--CALL     6038--CALL     6211--CALL     6242--CALL
FOR$TCHK
      4858**DCL-ENT  6898--CALL
FO_DEV$
      2231**DCL      5942<<ASSIGN   6333<<ASSIGN   6389<<ASSIGN   6406<<ASSIGN   6797<<ASSIGN   6820>>IF
      6894>>IF       6930>>IF       7165<<ASSIGN   7166>>IF       7189<<ASSIGN   7190>>IF
FO_DEV_INIT.NAME
PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:299  
      2578**DCL      2579--REDEF
FO_DEV_INIT.RACCT
      2646**DCL      2647--REDEF
FO_EXTSCB
      2877**DCL      6576<>CALL     7699<>CALL
FO_FIL$
      2230**DCL      5875>>ASSIGN   5876>>ASSIGN   5877>>ASSIGN   5935>>IF       5938>>IF       5942>>ASSIGN
      6004<>CALL     6005>>ASSIGN   6006>>ASSIGN   6007>>ASSIGN   6008>>ASSIGN   6010>>ASSIGN   6023>>ASSIGN
      6064>>ASSIGN   6066>>ASSIGN   6067>>ASSIGN   6087>>ASSIGN   6092>>ASSIGN   6100>>ASSIGN   6102>>ASSIGN
      6104>>ASSIGN   6105>>ASSIGN   6106>>ASSIGN   6107>>ASSIGN   6108>>ASSIGN   6111>>IF       6112>>ASSIGN
      6115>>ASSIGN   6118>>ASSIGN   6121>>ASSIGN   6122>>ASSIGN   6125>>ASSIGN   6126>>ASSIGN   6127>>ASSIGN
      6128>>ASSIGN   6129>>ASSIGN   6130>>IF       6133>>ASSIGN   6139>>ASSIGN   6146>>IF       6146>>IF
      6148>>ASSIGN   6150>>IF       6155>>ASSIGN   6202>>ASSIGN   6206>>IF       6227>>IF       6229>>IF
      6229>>IF       6238>>IF       6238>>IF       6281>>ASSIGN   6281>>ASSIGN   6291>>IF       6292>>ASSIGN
      6295>>ASSIGN   6305>>IF       6305>>IF       6308>>ASSIGN   6310>>IF       6323>>IF       6327>>IF
      6331>>IF       6333>>ASSIGN   6386>>IF       6389>>ASSIGN   6403>>IF       6406>>ASSIGN   6431>>ASSIGN
      6434>>ASSIGN   6436>>ASSIGN   6437>>IF       6443>>ASSIGN   6444>>ASSIGN   6473>>ASSIGN   6533>>ASSIGN
      6533>>ASSIGN   6582>>ASSIGN   6589>>ASSIGN   6589>>ASSIGN   6790<<ASSIGN   6794>>DOWHILE  6794>>DOWHILE
      6796>>ASSIGN   6797>>ASSIGN   6826>>ASSIGN   6827>>ASSIGN   6832>>IF       6838>>IF       6840>>ASSIGN
      6842>>ASSIGN   6843>>ASSIGN   6845>>IF       6847>>IF       6847>>IF       6851>>ASSIGN   6885>>ASSIGN
      6889>>IF       6897>>IF       6898>>CALL     6906>>ASSIGN   6927>>IF       6937<<ASSIGN   6962>>IF
      6965>>IF       6970>>IF       6973>>IF       6992>>IF       6999>>IF       7006>>IF       7008>>IF
      7008>>IF       7008>>IF       7008>>IF       7162<<ASSIGN   7163>>DOWHILE  7164>>ASSIGN   7165>>ASSIGN
      7170<<ASSIGN   7189>>ASSIGN   7220>>IF       7230>>ASSIGN   7234>>ASSIGN   7268<<ASSIGN   7269>>DOWHILE
      7273>>IF       7278<<ASSIGN   7278>>ASSIGN   7284>>ASSIGN   7287>>IF       7365<<ASSIGN   7366>>DOWHILE
      7367>>IF       7369<<ASSIGN   7369>>ASSIGN   7375<<ASSIGN   7376>>DOWHILE  7377>>IF       7377>>IF
      7380<<ASSIGN   7380>>ASSIGN   7434<<ASSIGN   7435>>DOWHILE  7436>>IF       7437<<ASSIGN   7437>>ASSIGN
      7455>>ASSIGN   7456>>IF       7457>>ASSIGN   7465>>IF       7479>>ASSIGN   7481>>IF       7489>>IF
      7489>>IF       7530>>CALLBLT  7531>>CALLBLT  7532>>ASSIGN   7554>>ASSIGN   7555>>ASSIGN   7577>>ASSIGN
      7583>>DOINDEX  7600>>ASSIGN   7669>>ASSIGN   7670>>CALLBLT  7671>>CALLBLT  7674>>DOINDEX  7691>>ASSIGN
      7696>>ASSIGN   7717>>IF       7732>>IF       7734>>ASSIGN   7737>>IF       7738>>ASSIGN   7741>>DOWHILE
      7744>>ASSIGN   7758<>CALL     7783>>IF       7787>>ASSIGN   7788>>IF       7790>>ASSIGN   7791>>IF
      7797>>IF       7799>>ASSIGN   7800>>IF       7808>>ASSIGN   7810>>IF       7817>>IF       7838>>ASSIGN
      7844>>IF       7849>>ASSIGN   7859>>IF       7868>>ASSIGN   7870>>ASSIGN   7871>>ASSIGN   7872>>ASSIGN
      7891>>ASSIGN   7899>>IF
FO_FILENAME
PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:300  
      2274**DCL      5037--DCLINIT  5250--DCLINIT  5414--DCLINIT  5646--DCLINIT
FO_FILENAME.BOOTID
      2274**DCL      5905<<ASSIGN   7532<<ASSIGN
FO_FILENAME.CNT
      2274**DCL      7635>>ASSIGN
FO_FILENAME.CNUM
      2275**DCL      5908<<CALLBLT  6270<<CALLBLT  6276<<CALLBLT  7525<<CALLBLT  7528<<CALLBLT  7586<<CALLBLT
      7639>>ASSIGN
FO_FILENAME.NUM
      2275**DCL      5907<<CALLBLT  7531<<CALLBLT  7638>>ASSIGN
FO_FILENAME.SYSID
      2274**DCL      5906<<CALLBLT  7530<<CALLBLT  7637>>ASSIGN
FO_FILSCB
      2847**DCL      6004<>CALL     7758<>CALL
FO_FIL_INIT
      2463**DCL      6005>>ASSIGN
FO_FIL_INIT.DEST
      2475**DCL      2476--REDEF
FO_FITBUF1
      2229**DCL      5041--DCLINIT  5418--DCLINIT  5650--DCLINIT  5981--ASSIGN   6284--ASSIGN   7534--ASSIGN
FO_JOB$
      2231**DCL      5935>>IF       6034>>IF       6035>>IF       6036>>ASSIGN   6052>>IF       6064>>ASSIGN
      6065>>ASSIGN   6065>>ASSIGN   6066>>ASSIGN   6067>>ASSIGN   6069>>ASSIGN   6076>>ASSIGN   6081>>ASSIGN
      6082>>CALLBLT  6083>>ASSIGN   6084>>ASSIGN   6085>>CALLBLT  6086>>ASSIGN   6098>>ASSIGN   7159>>IF
      7161>>ASSIGN   7162>>ASSIGN   7181>>ASSIGN   7182>>ASSIGN   7268>>ASSIGN   7434>>ASSIGN   7734<<ASSIGN
      7735>>ASSIGN   7735>>ASSIGN   7736>>ASSIGN   7738>>ASSIGN   7746>>IF       7746>>IF       7748>>IF
      7748>>IF       7950<<ASSIGN   7951>>DOWHILE  7952>>IF       7953<<ASSIGN   7953>>ASSIGN   7977<>CALL
      7978>>ASSIGN   7979>>ASSIGN   7979>>ASSIGN   7980>>ASSIGN   7981>>ASSIGN   7982>>ASSIGN   7983>>ASSIGN
      7983>>ASSIGN   7984>>ASSIGN   8004>>IF       8006>>ASSIGN   8009>>DOWHILE  8012>>ASSIGN   8014<>CALL
      8014>>CALL     8014>>CALL
FO_JOBSCB
      2937**DCL      7977<>CALL     8014<>CALL
FO_JOB_INIT
      2700**DCL      7979>>ASSIGN
FO_OSYMBKEYIN.DEVNM
      2296**DCL      2297--REDEF
PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:301  
FO_OSYMBUF.FO_OSYMBDEV.NAME
      2338**DCL      2339--REDEF
FO_OSYMBUF.FO_OSYMBDEV.RACCT
      2406**DCL      2407--REDEF
FO_Q.FILHD$
      2771**DCL      6790>>ASSIGN   7365>>ASSIGN   7375>>ASSIGN   7788>>IF       7790<<ASSIGN   7795>>ASSIGN
      7815>>ASSIGN   7842>>ASSIGN   7857>>ASSIGN   7868<<ASSIGN
FO_Q.FILTL$
      2772**DCL      7791>>IF       7792<<ASSIGN   7801<<ASSIGN   7867>>IF       7870>>ASSIGN   7872<<ASSIGN
FO_Q.JOBHD$
      2770**DCL      7950>>ASSIGN   7981>>ASSIGN   7984<<ASSIGN   8000>>ASSIGN   8006<<ASSIGN
FO_Q.LOCK
      2767**DCL      6708<<ASSIGN   6708>>ASSIGN   6712<<ASSIGN   6712>>ASSIGN   7467<<ASSIGN   7467>>ASSIGN
      7473<<ASSIGN   7473>>ASSIGN   7785<<ASSIGN   7785>>ASSIGN   7823<<ASSIGN   7823>>ASSIGN   7852<<ASSIGN
      7852>>ASSIGN   7874<<ASSIGN   7874>>ASSIGN   8002<<ASSIGN   8002>>ASSIGN   8016<<ASSIGN   8016>>ASSIGN
FO_SYMBINFO.GRANLOW#
      2258**DCL      7489>>IF
FO_SYMBINFO.GRANSCHED#
      2258**DCL      7484>>IF
FO_SYMBINFO.HOLDEXPIRE#
      2260**DCL      7360>>IF       7364>>CALL
FPRG_DATA
      4614**DCL      6092>>ASSIGN
FS$DEST
      4584**DCL      7539--ASSIGN
FS$DEST.ATTR
      4589**DCL      6106>>ASSIGN
FS$DEST.CHKPBR
      4586**DCL      6127>>ASSIGN   7600<<ASSIGN
FS$DEST.CONTINUED
      4585**DCL      6434>>ASSIGN
FS$DEST.COPIES
      4585**DCL      6430>>IF       6431>>ASSIGN   7554<<ASSIGN
FS$DEST.CRASHED
      4585**DCL      6436>>ASSIGN
FS$DEST.DDEV.CP
PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:302  
      4588**DCL      6118>>ASSIGN
FS$DEST.DDEV.LP
      4588**DCL      6108>>ASSIGN
FS$DEST.DT.DEV
      4589**DCL      6105>>ASSIGN
FS$DEST.DT.WSN
      4589**DCL      6102>>ASSIGN
FS$DEST.FORM
      4584**DCL      6107>>ASSIGN
FS$DEST.JOBNAME
      4589**DCL      6030>>ASSIGN
FS$DEST.MODE
      4585**DCL      6098>>ASSIGN
FS$DEST.NEWPRIO
      4588**DCL      6121>>ASSIGN   7563<<ASSIGN   7571<<ASSIGN
FS$DEST.NEWWSN
      4588**DCL      6100>>ASSIGN   7577<<ASSIGN
FS$DEST.OUTSYMF.BAD
      4587**DCL      6446>>IF       7612<<ASSIGN
FS$DEST.OUTSYMF.CHKPTD
      4587**DCL      6126>>ASSIGN   7556<<ASSIGN   7599<<ASSIGN
FS$DEST.OUTSYMF.CODE
      4587**DCL      7613<<ASSIGN
FS$DEST.OUTSYMF.CPRIO
      4587**DCL      6119>>IF       7562<<ASSIGN   7570<<ASSIGN
FS$DEST.OUTSYMF.CWSN
      4587**DCL      6099>>IF       7576<<ASSIGN
FS$DEST.OUTSYMF.SPILLED
      4587**DCL      6137>>IF       7582<<ASSIGN
FS$DEST.OUTSYMF.UNHELD
      4587**DCL      6103>>IF       7605<<ASSIGN
FS$DEST.PRINT
      4585**DCL      6130>>IF       6150>>IF       6323>>IF       6435>>IF
FS$DEST.PRIO
      4586**DCL      6125>>ASSIGN
FS$DEST.SAP
PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:303  
      4585**DCL      6128>>ASSIGN   6437>>IF       6443>>ASSIGN
FS$DEST.SAPCOPIES
      4585**DCL      6129>>ASSIGN   6437>>IF       6444>>ASSIGN   7555<<ASSIGN
FS$FITDEST
      4596**DCL      7537--ASSIGN
FS$FITDEST.SIZ
      4596**DCL      7539<<ASSIGN
FUCODE
      4643**DCL      6400<<ASSIGN   6855<<ASSIGN   6908<<ASSIGN   7076<<ASSIGN   7227<<ASSIGN   7285<<ASSIGN
      7541>>DOCASE   7618>>DOCASE
FWSN IN PROCEDURE FIL_KEYIN
      6723**DCL      6736<<ASSIGN   6999>>IF
GETUTS
      5783**DCL      7361<>CALL
GETUTS.V
      5787**DCL      5783--DCLINIT
GET_DEST IN PROCEDURE ADD_FILE
      6428**PROC     6097--CALL     6304--CALL
GET_PRIO
      7478**PROC     7454--CALL     7464--CALL
GET_SYMBINFO
      2243**DCL      7483<>CALL
GEXT000 IN PROCEDURE GRAB_EXTS
      6475**LABEL    6474--CALLALT
GEXT1 IN PROCEDURE GRAB_EXTS
      6541**LABEL    6465--CALLALT
GEXT2 IN PROCEDURE GRAB_EXTS
      6545**LABEL    6468--GOTO
GEXT4 IN PROCEDURE GRAB_EXTS
      6548**LABEL    6531--GOTO
GEXT5 IN PROCEDURE GRAB_EXTS
      6533**LABEL    6471--CALLALT
GOTPRIO IN PROCEDURE GET_PRIO
      7492**LABEL    7490--GOTO
GRAB_EXTS IN PROCEDURE ADD_FILE
      6461**PROC     6142--CALL     6314--CALL
PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:304  
I
      4630**DCL      4631--REDEF    6082<<CALLBLT  6083>>ASSIGN   6085<<CALLBLT  6086>>ASSIGN   6497>>ASSIGN
      6498>>ASSIGN   6503>>ASSIGN   6504<<ASSIGN   6504>>ASSIGN   6983<<CALLBLT  6984>>IF       6984>>IF
      6991<<CALLBLT  6992>>IF       6992>>IF       7007<<CALLBLT  7008>>IF       7008>>IF       7583<<DOINDEX
      7584>>IF       7586>>CALLBLT  7674<<DOINDEX  7675>>CALLBLT
I IN PROCEDURE ADD_EXT
      6565**DCL      6574<<ASSIGN   6575<<ASSIGN   6578>>ASSIGN   6593>>ASSIGN   6594>>ASSIGN   6595>>ASSIGN
I IN PROCEDURE ADD_JOB
      7973**DCL      7976<<ASSIGN   7977<>CALL
I IN PROCEDURE UNCHAIN_FILE
      7778**DCL      7814<<DOINDEX  7815>>ASSIGN   7841<<DOINDEX  7842>>ASSIGN   7856<<DOINDEX  7857>>ASSIGN
IR
      4631**DCL      6495<<DOINDEX
J IN PROCEDURE UNCHAIN_FILE
      7777**DCL      7840<<ASSIGN   7845<<ASSIGN   7845>>ASSIGN   7849>>ASSIGN   7855<<ASSIGN   7855>>ASSIGN
      7861>>ASSIGN   7862<<ASSIGN   7862>>ASSIGN
JNL
      4713**DCL      6031<<CALLBLT  7179<<ASSIGN   7975>>ASSIGN   7982>>ASSIGN
JOBNAME
      4715**DCL      6030<<ASSIGN   6031>>CALLBLT  7983>>ASSIGN
JOB_COMPLETED
      8046**PROC     7319--CALL     7749--CALL
JOB_SYSID
      4642**DCL      6023<<ASSIGN   7157<<ASSIGN   7266<<ASSIGN   7304<<ASSIGN   7432<<ASSIGN   7952>>IF
      7980>>ASSIGN
KCNT
      4738**DCL      6732<<ASSIGN   6732>>ASSIGN   6838>>IF       6840>>ASSIGN
KDEL IN PROCEDURE FIL_KEYIN
      6923**LABEL    6917--CALLALT  6919--CALLALT  6921--CALLALT  6923--CALLALT
KERR IN PROCEDURE FIL_KEYIN
      6823**LABEL    6836--GOTO     6902--GOTO
KERRFORM IN PROCEDURE FIL_KEYIN
      6897**LABEL    6898--CALLALT
KERRPRT IN PROCEDURE FIL_KEYIN
      6811**LABEL    6894--GOTO
KERRSPILL IN PROCEDURE FIL_KEYIN
PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:305  
      6830**LABEL    6897--GOTO     6928--GOTO
KEYIN$
        30**DCL      6733>>ASSIGN   6734>>ASSIGN   6735>>ASSIGN   6736>>ASSIGN   6737>>ASSIGN   6738>>ASSIGN
      6739>>ASSIGN   6754>>ASSIGN   6755>>IF       6842>>ASSIGN   6845>>IF       6851>>ASSIGN   6889>>IF
      6898>>CALL     6906>>ASSIGN   6954>>ASSIGN   6961>>IF       6962>>IF       6965>>IF       6969>>IF
      6970>>IF       6973>>IF       6983>>CALLBLT  6984>>IF       6984>>IF       6989>>IF       6991>>CALLBLT
      6992>>IF       7007>>CALLBLT  7563>>ASSIGN
KEYIN0 IN PROCEDURE FIL_KEYIN
      6931**LABEL    6809--GOTO     6830--GOTO     6881--GOTO     6924--GOTO
KFIL$ IN PROCEDURE FIL_KEYIN
      6720**DCL      6796<<ASSIGN   6937>>ASSIGN
KIN# IN PROCEDURE FIL_KEYIN
      6728**DCL      6733<<ASSIGN   6747>>DOCASE   6802>>DOCASE   6911>>IF
KNUM
      4633**DCL      4634--REDEF    6735<<ASSIGN   7008>>IF
KNUMR
      4634**DCL      6740>>IF       6743>>ASSIGN   6911>>IF       7008>>IF
KPRIO IN PROCEDURE FIL_KEYIN
      6808**LABEL    6788<<DOINDEX  6790>>ASSIGN   6804--CALLALT  6806--CALLALT  6808--CALLALT
KPRIOPREP IN PROCEDURE FIL_KEYIN
      6752**LABEL    6750--GOTO     6764--GOTO
KSWIT IN PROCEDURE FIL_KEYIN
      6880**LABEL    6874--CALLALT  6876--CALLALT  6878--CALLALT  6880--CALLALT
KSWIT0 IN PROCEDURE FIL_KEYIN
      6901**LABEL    6899--GOTO
LOOP IN PROCEDURE FIL_KEYIN
      6788**LABEL    6914--EXIT
M$CLOSE
        56**DCL-ENT  5971--CALL     5982--CALL     6254--CALL     6269--CALL     6272--CALL     6285--CALL
      7589--CALL     7591--CALL     7644--CALL
M$FILE1
      4841**DCL      5977--ASSIGN   5978--ASSIGN
M$MONINFO
       124**DCL-ENT  7483--CALL
M$OPEN
        56**DCL-ENT  5976--CALL     5990--CALL     6256--CALL     6271--CALL     6283--CALL     7533--CALL
PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:306  
      7587--CALL     7590--CALL     7676--CALL
M$RPRIV
       115**DCL-ENT  7679--CALL
M$SPRIV
       115**DCL-ENT  7672--CALL
M$SYMBIO
       121**DCL-ENT  6584--CALL
M$TIME
       123**DCL-ENT  7361--CALL
M$WRITE
        57**DCL-ENT  6759--CALL     6829--CALL     6944--CALL     6955--CALL     7510--CALL
NCHUNKS
      4655**DCL      5876<<ASSIGN   5879>>DOINDEX
NEWNAME IN PROCEDURE UPD_FILE
      7630**LABEL    7630--GOTO
NEW_FILENAME
      4729**DCL      7640--ASSIGN
NEW_FILENAME.CNT
      4730**DCL      7635<<ASSIGN
NEW_FILENAME.CNUM
      4737**DCL      7639<<ASSIGN
NEW_FILENAME.NUM
      4736**DCL      7638<<ASSIGN
NEW_FILENAME.PREFIX
      4731**DCL      7635--ASSIGN
NEW_FILENAME.PREFIX.CODE
      4733**DCL      7636<<CALLBLT
NEW_FILENAME.SYSID
      4735**DCL      7637<<ASSIGN
NFIL
      4651**DCL      6785<<ASSIGN   6841<<ASSIGN   6841>>ASSIGN   6890<<ASSIGN   6890>>ASSIGN   6904<<ASSIGN
      6904>>ASSIGN   6929<<ASSIGN   6929>>ASSIGN   6947>>IF       6948>>IF       6952>>ASSIGN
NFILF IN PROCEDURE FIL_KEYIN
      6726**DCL      6786<<ASSIGN   6871<<ASSIGN   6871>>ASSIGN   6942>>IF       6948>>IF       7001<<ASSIGN
      7001>>ASSIGN   7013<<ASSIGN   7013>>ASSIGN
NGRAN IN PROCEDURE ADD_EXT
PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:307  
      6563**DCL      6561--PROC     6572>>ASSIGN
NOFR IN PROCEDURE ADD_FILE
      6357**LABEL    6384--GOTO
NOPNERR IN PROCEDURE ADD_FILE
      5899**DCL      6169<<ASSIGN   6356>>ASSIGN   6359>>IF
NRECS
      4640**DCL      5978<<ASSIGN   5988>>IF
NUM
      4632**DCL      6497<<ASSIGN   6501>>IF       6503<<ASSIGN   6508>>IF       6509<<ASSIGN   6512>>ASSIGN
      6520>>IF       6522>>ASSIGN   6523<>CALL
NUMEXT
      4653**DCL      7892<<ASSIGN   7894<<ASSIGN   7896<<ASSIGN   7896>>ASSIGN   7899>>IF
NXTFIL$
      4652**DCL      7164<<ASSIGN   7170>>ASSIGN
OCMSG_FILBAD
      5130**DCL      7510<>CALL
OCMSG_FILBAD.STATION_
      5132**DCL      5132--REDEF
OCMSG_FILBAD.V
      5133**DCL      5130--DCLINIT
OCMSG_FILBAD.V.DVBYTE.VFC#
      5139**DCL      5139--REDEF
OCMSG_KERR1
      5164**DCL      6759<>CALL     6829<>CALL     6944<>CALL
OCMSG_KERR1.STATION_
      5166**DCL      5166--REDEF
OCMSG_KERR1.V
      5167**DCL      5164--DCLINIT
OCMSG_KERR1.V.DVBYTE.VFC#
      5173**DCL      5173--REDEF
OCMSG_RESP
      5737**DCL      6955<>CALL
OCMSG_RESP.STATION_
      5739**DCL      5739--REDEF
OCMSG_RESP.V
      5740**DCL      5737--DCLINIT
PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:308  
OCMSG_RESP.V.DVBYTE.VFC#
      5746**DCL      5746--REDEF
OLDLEXT$
      4647**DCL      6313<<ASSIGN   6334<>CALL
OPEN_FILE1
      5645**DCL      5976<>CALL     6271<>CALL     6283<>CALL     7587<>CALL
OPEN_FILE1.ACSVEH_
      5647**DCL      5648--REDEF
OPEN_FILE1.ALTKEYS_
      5653**DCL      5654--REDEF    5654--REDEF
OPEN_FILE1.HDR_
      5652**DCL      5653--REDEF
OPEN_FILE1.TAB_
      5651**DCL      5652--REDEF
OPEN_FILE1.UHL_
      5645**DCL      5646--REDEF    5646--REDEF
OPEN_FILE1.V
      5654**DCL      5645--DCLINIT
OPEN_FILE1.V.FSN#
      5685**DCL      5685--REDEF    5685--REDEF
OPEN_FILE1.WSN_
      5651**DCL      5651--REDEF
OPEN_FILE1_UPD
      5036**DCL      7533<>CALL
OPEN_FILE1_UPD.ACSVEH_
      5038**DCL      5039--REDEF
OPEN_FILE1_UPD.ALTKEYS_
      5044**DCL      5045--REDEF    5045--REDEF
OPEN_FILE1_UPD.HDR_
      5043**DCL      5044--REDEF
OPEN_FILE1_UPD.TAB_
      5042**DCL      5043--REDEF
OPEN_FILE1_UPD.UHL_
      5036**DCL      5037--REDEF    5037--REDEF
OPEN_FILE1_UPD.V
      5045**DCL      5036--DCLINIT
PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:309  
OPEN_FILE1_UPD.V.FSN#
      5076**DCL      5076--REDEF    5076--REDEF
OPEN_FILE1_UPD.WSN_
      5042**DCL      5042--REDEF
OPMSG_FILBAD
      4758**DCL      5131--DCLINIT  5132--DCLINIT
OPMSG_FILBAD.ACCT
      4779**DCL      7509<<ASSIGN
OPMSG_FILBAD.CNUM
      4777**DCL      7508<<ASSIGN
OPMSG_FILBAD.ERRC
      4778**DCL      6356<<ASSIGN
OPMSG_FILBAD.FLAGS
      4765**DCL      4766--REDEF
OPMSG_FILBAD.MSGID
      4761**DCL      4762--REDEF
OPMSG_FILBAD.NUM
      4776**DCL      7507<<ASSIGN
OPMSG_FILBAD.SUBC
      4775**DCL      7505<<ASSIGN
OPMSG_FILBAD.SYSID
      4762**DCL      7506<<ASSIGN
OPMSG_KERR1
      4785**DCL      5165--DCLINIT  5166--DCLINIT
OPMSG_KERR1.CADDR
      4786**DCL      6738<<ASSIGN
OPMSG_KERR1.FLAGS
      4792**DCL      4793--REDEF
OPMSG_KERR1.MSGID
      4788**DCL      4789--REDEF
OPMSG_KERR1.NUM
      4804**DCL      6827<<ASSIGN
OPMSG_KERR1.SUBC
      4801**DCL      6758<<ASSIGN   6825<<ASSIGN   6943<<ASSIGN
OPMSG_KERR1.SUBC1
      4802**DCL      6823<<ASSIGN   6835<<ASSIGN   6901<<ASSIGN
PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:310  
OPMSG_KERR1.SUBC2
      4803**DCL      6828<<ASSIGN
OPMSG_KERR1.SYSID
      4789**DCL      6757<<ASSIGN   6826<<ASSIGN
OPMSG_RESP
      4810**DCL      5738--DCLINIT  5739--DCLINIT
OPMSG_RESP.CADDR
      4811**DCL      6739<<ASSIGN
OPMSG_RESP.FLAGS
      4817**DCL      4818--REDEF
OPMSG_RESP.MSGID
      4813**DCL      4814--REDEF
OPMSG_RESP.NFIL
      4832**DCL      6952<<ASSIGN
OPMSG_RESP.NUM
      4833**DCL      6741<<ASSIGN   6743<<ASSIGN
OPMSG_RESP.PRIO
      4829**DCL      6754<<ASSIGN
OPMSG_RESP.SUBC
      4828**DCL      6784<<ASSIGN
OPMSG_RESP.SUBC2
      4831**DCL      6949<<ASSIGN   6951<<ASSIGN
OPMSG_RESP.SWSN
      4830**DCL      6954<<ASSIGN
OPMSG_RESP.SYSID
      4814**DCL      6953<<ASSIGN
P$
      4639**DCL      5985<<ASSIGN   5986<>CALL     5988>>IF       6079<<ASSIGN   6080<>CALL     6081>>ASSIGN
      6084>>ASSIGN   6087>>ASSIGN   6089<<ASSIGN   6090<>CALL     6092>>ASSIGN   6109<<ASSIGN   6110<>CALL
      6112>>ASSIGN   6112>>ASSIGN   6115>>ASSIGN   6115>>ASSIGN   6115>>ASSIGN   6289<<ASSIGN   6290<>CALL
      6292>>ASSIGN   6292>>ASSIGN   6295>>ASSIGN   6295>>ASSIGN   6295>>ASSIGN   6464<<ASSIGN   6465<>CALL
      6467>>ASSIGN   6469<<ASSIGN   6471<>CALL     6478>>ASSIGN   6497>>ASSIGN   6498>>ASSIGN   6503>>ASSIGN
      7698<<ASSIGN   7700>>ASSIGN   7736<<ASSIGN   7737>>IF       7741>>DOWHILE  7742<<ASSIGN   7742>>ASSIGN
      7744>>ASSIGN   7795<<ASSIGN   7797>>IF       7799>>ASSIGN   7801>>ASSIGN   7804<<ASSIGN   7804>>ASSIGN
      8000<<ASSIGN   8004>>IF       8009>>DOWHILE  8010<<ASSIGN   8010>>ASSIGN   8012>>ASSIGN
PASSED_EXT$
PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:311  
        31**DCL      7249<<ASSIGN
PREVEXT$
      4636**DCL      6473<<ASSIGN   6475<<ASSIGN   6590>>ASSIGN   6592<<ASSIGN
PRIO
      4641**DCL      7455>>ASSIGN   7456>>IF       7465>>IF       7479<<ASSIGN   7480>>IF       7480<<ASSIGN
      7484>>IF       7484>>IF       7488<<DOINDEX  7489>>IF       7492<<ASSIGN   7496<<ASSIGN   7496>>ASSIGN
      7787<<ASSIGN   7788>>IF       7790>>ASSIGN   7791>>IF       7792>>ASSIGN   7795>>ASSIGN   7801>>ASSIGN
      7814>>DOINDEX  7838<<ASSIGN   7841>>DOINDEX  7856>>DOINDEX  7867>>IF       7868>>ASSIGN   7870>>ASSIGN
      7872>>ASSIGN
PRIO_FILE
      7453**PROC     6153--CALL     7289--CALL     7333--CALL     7470--CALL
PTR$
      4449**DCL      6590<<ASSIGN
RECOVERING
        39**DCL        22--PROC     5841--ENTRY    5872--ENTRY    5970>>IF       5975>>IF       6068>>IF
      6208>>IF       6241>>IF       6253>>IF       6268>>IF       6283>>IF
REM_FILE IN PROCEDURE DEL_FILE
      7685**ENTRY    6377--CALL     6386--CALL     7099--CALL
REM_JOB IN PROCEDURE ADD_JOB
      7999**ENTRY    8047--CALL
REPRIO_FILE
      7463**PROC     6328--CALL     7347--CALL
REXP
      7365**LABEL    7368--CALLALT
RSUBC IN PROCEDURE FIL_KEYIN
      6725**DCL      6749<<ASSIGN   6752<<ASSIGN   6763<<ASSIGN   6766<<ASSIGN   6768<<ASSIGN   6770<<ASSIGN
      6772<<ASSIGN   6774<<ASSIGN   6776<<ASSIGN   6778<<ASSIGN   6780<<ASSIGN   6784>>ASSIGN
SETBAD IN PROCEDURE UPD_FILE
      7605**LABEL    7548--GOTO
SETX
      4646**DCL      5977<<ASSIGN   6010>>ASSIGN
SET_LASTEXT
      7890**PROC     6312--CALL     6474--CALL     7248--CALL     7695--CALL
SPILLDISP
        38**DCL      7221>>DOCASE
STAMP IN PROCEDURE ADD_FILE
PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:312  
      5901**DCL      6579>>ASSIGN
STAMP.FRDAD IN PROCEDURE ADD_FILE
      5903**DCL      6479<<ASSIGN   6594<<ASSIGN   6594>>ASSIGN
STAMP.HASH IN PROCEDURE ADD_FILE
      5902**DCL      6478<<ASSIGN
SYMOACCT
      5108**DCL      5041--DCLINIT  5254--DCLINIT  5418--DCLINIT  5533--DCLINIT  5650--DCLINIT
SYSID
      4650**DCL      6734<<ASSIGN   6757>>ASSIGN   6953>>ASSIGN   7008>>IF
TGRANS IN PROCEDURE ADD_FILE
      5895**DCL      6481<<ASSIGN   6522<<ASSIGN   6522>>ASSIGN   6530>>IF       6533>>ASSIGN
TJOB
      4679**DCL      7976--ASSIGN   7976--ASSIGN
TJOB.JNL
      4703**DCL      7975<<ASSIGN
UGRANS
      4635**DCL      6467<<ASSIGN   6468>>IF       6508>>IF       6509>>ASSIGN   6512<<ASSIGN   6512>>ASSIGN
UNCHAIN_FILE
      7775**PROC     6144--CALL     6850--CALL     6905--CALL     7121--CALL     7229--CALL     7288--CALL
      7469--CALL     7709--CALL
UNHOLD
      7282**PROC     7271--CALL     7275--CALL     7368--CALL     7379--CALL
UPD0 IN PROCEDURE UPD_FILE
      7528**LABEL    7526--GOTO
UPD_FILE
      7524**PROC     6401--CALL     7078--CALL
UPD_FILE1 IN PROCEDURE UPD_FILE
      7527**ENTRY    6856--CALL     6909--CALL     7228--CALL     7286--CALL
XFIL_CNUM
        36**DCL        22--PROC       37--REDEF      38--REDEF    5841--ENTRY    5844>>ASSIGN   5872--ENTRY
      7072--ENTRY    7077>>ASSIGN   7130--ENTRY    7149--ENTRY    7204--ENTRY    7216--ENTRY
XFUCODE
        32**DCL      7076>>ASSIGN
XJOB_SYSID
        33**DCL      7304>>ASSIGN
XSF$LOCCODE
PL6.E3A0      #001=FOF$FILE File=FOF$FILE.:E05TSI                                TUE 07/29/97 17:07 Page:313  
      4860**DCL-ENT  6471--CALL
XSF$LOCCODP
      4859**DCL-ENT  5986--CALL     6028--CALL     6080--CALL     6090--CALL     6110--CALL     6290--CALL
      6300--CALL     6465--CALL     7536--CALL
XUD$UTS_ADJUST
      4419**DCL-ENT  7364--CALL
