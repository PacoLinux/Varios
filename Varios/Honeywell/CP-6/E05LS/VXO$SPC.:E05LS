VERSION E05

PL6.E3A0      #001=VXO$SPC File=VXO$SPC.:E05TSI                                  WED 07/30/97 08:30 Page:1    
        1        1        /*M* VXO$SPC - inserts special symbols: B$JIT$, B$ROS$, B$TCB$ */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* DMR,PLM=6,IND=4,CSU=2,EXM=0,ECU=2,MOC,DCI=4,CRT=4,CTI=8,CCC    */
        8        8        VXO$SPC: PROC;
        9        9
       10       10        %INCLUDE VX_INC_C;
       11    10726        %VX$NODE;

             10738    1   /*******************************************************************************
             10739    1   *                                                                              *
             10740    1   *                          VX$NODE                                                 *
             10741    1   *                                                                              *
             10742    1   *******************************************************************************/

             10758    1   DCL 1 VX$NODE      ALIGNED    BASED,
             10759    1         2 SON$ PTR /*(ADDR(NIL))*/, /* Son pointer                      */
             10760    1         2 BROTHER$ PTR /*(ADDR(NIL))*/, /* Brother pointer              */
             10761    1         2 FATHER$ PTR /*(ADDR(NIL))*/, /* Father pointer                */
             10762    1         2 PATH$ PTR /*(ADDR(NIL))*/, /* Path   pointer                  */
             10763    1         2 HEAD$       PTR /*(ADDR(NIL))*/, /* Head pointer to
             10764                              to list of file nodes for this node            */
             10765    1         2 TAIL$ PTR /*(ADDR(NIL))*/, /* Tail pointer to list            */
             10766    1         2 SHARED_LIB_HEAD$ PTR /*(ADDR(NIL))*/,
             10766                  /* Head pointer to shared library list */
             10767    1         2 LIB_HEAD$         PTR /*(ADDR(NIL))*/,
             10767                  /* Head pointer to list of shared libraries
             10768                                          which have been mapped to included libraries */
             10769    1         2 NUM          UBIN(36)  UNAL,    /* Node number                        */
             10770    1         2 DEPTH          UBIN(36)  UNAL,  /* Depth; ROOT=0*/
             10771    1         2 ADDR_START_A(0:2/*@ROS*/) SBIN WORD /*(0*3)*/, /* Array            */
             10772    1         2 ADDR_START REDEF  ADDR_START_A,
             10773    1           3 RDATA       SBIN WORD,   /* First address for this node in data     */
             10774    1           3 RPROC       SBIN WORD,   /* First address for this node in proc     */
PL6.E3A0      #001=VXO$SPC File=VXO$SPC.:E05TSI                                  WED 07/30/97 08:30 Page:2    
             10775    1           3 ROS       SBIN WORD,          /* Last address for program in ros    */
             10776    1         2 ADDR_STOP_A(0:2/*@ROS*/) SBIN WORD /*(-1*3)*/, /* Array            */
             10777    1         2 ADDR_STOP  REDEF  ADDR_STOP_A,
             10778    1           3 RDATA       SBIN WORD,        /* Last address for this node in data */
             10779    1           3 RPROC       SBIN WORD,        /* Last address for this node in proc */
             10780    1           3 ROS       SBIN WORD,          /* Last address for program in ros    */
             10781    1         2 START_PAGE#_A(0:2/*@ROS*/) SBIN WORD /*(0*3)*/, /* Array           */
             10782    1         2 START_PAGE# REDEF START_PAGE#_A,
             10783    1           3 RDATA       SBIN WORD,   /* First page    for this node in data     */
             10784    1           3 RPROC       SBIN WORD,   /* First page    for this node in proc     */
             10785    1           3 ROS       SBIN WORD,          /* First page   for program in ros    */
             10786    1         2 STOP_PAGE#_A(0:2/*@ROS*/) SBIN WORD /*(-1*3)*/, /* Array*/
             10787    1         2 STOP_PAGE#  REDEF STOP_PAGE#_A,
             10788    1           3 RDATA       SBIN WORD,   /* Last  page    for this node in data     */
             10789    1           3 RPROC       SBIN WORD,   /* Last  page    for this node in proc     */
             10790    1           3 ROS       SBIN WORD,          /* Last  page   for program in ros    */
             10791    1         2 START_SC_ALL$ PTR /*(ADDR(NIL))*/,
             10791                  /* Starting pointer for common sections for this node */
             10792    1         2 STOP_SC_ALL$ PTR /*(ADDR(NIL))*/,
             10792                  /* Stopping pointer for common sections for this node */
             10793    1         2 L_START,
             10794    1           3 SN$ PTR /*(ADDR(NIL))*/, /* Segment definition names        */
             10795    1           3 DN$ PTR /*(ADDR(NIL))*/, /* Def names                       */
             10796    1           3 RN$ PTR /*(ADDR(NIL))*/, /* Ref names                       */
             10797    1           3 SC$ PTR /*(ADDR(NIL))*/, /* Sections                        */
             10798    1           3 ED$ PTR /*(ADDR(NIL))*/, /* Entry defs*/
             10799    1           3 ER$ PTR /*(ADDR(NIL))*/, /* Entry refs*/
             10800    1           3 DD$ PTR /*(ADDR(NIL))*/, /* Data defs                       */
             10801    1           3 DR$ PTR /*(ADDR(NIL))*/, /* Data refs                       */
             10802    1           3 SD$ PTR /*(ADDR(NIL))*/, /* Seg defs                        */
             10803    1           3 SR$ PTR /*(ADDR(NIL))*/, /* Seg refs                        */
             10804    1         2 L_START_A$(0:9)     REDEF L_START PTR,
             10805    1         2 L_STOP,
             10806    1           3 SN$ PTR /*(ADDR(NIL))*/, /* Segment definition names        */
             10807    1           3 DN$ PTR /*(ADDR(NIL))*/, /* Def names                       */
             10808    1           3 RN$ PTR /*(ADDR(NIL))*/, /* Ref names                       */
             10809    1           3 SC$ PTR /*(ADDR(NIL))*/, /* Sections                        */
PL6.E3A0      #001=VXO$SPC File=VXO$SPC.:E05TSI                                  WED 07/30/97 08:30 Page:3    
             10810    1           3 ED$ PTR /*(ADDR(NIL))*/, /* Entry defs*/
             10811    1           3 ER$ PTR /*(ADDR(NIL))*/, /* Entry refs*/
             10812    1           3 DD$ PTR /*(ADDR(NIL))*/, /* Data defs                       */
             10813    1           3 DR$ PTR /*(ADDR(NIL))*/, /* Data refs                       */
             10814    1           3 SD$ PTR /*(ADDR(NIL))*/, /* Seg defs                        */
             10815    1           3 SR$ PTR /*(ADDR(NIL))*/, /* Seg refs                        */
             10816    1         2 L_STOP_A$(0:9) REDEF   L_STOP    PTR,
             10817    1         2 L_SIZE,
             10818    1           3 SN      UBIN /*(0)*/, /* Segment definition names           */
             10819    1           3 DN      UBIN /*(0)*/, /* Def names                          */
             10820    1           3 RN      UBIN /*(0)*/, /* Ref names                          */
             10821    1           3 SC      UBIN /*(0)*/, /* Sections                           */
             10822    1           3 ED      UBIN /*(0)*/, /* Entry defs*/
             10823    1           3 ER      UBIN /*(0)*/, /* Entry refs*/
             10824    1           3 DD      UBIN /*(0)*/, /* Data defs                          */
             10825    1           3 DR      UBIN /*(0)*/, /* Data refs                          */
             10826    1           3 SD      UBIN /*(0)*/, /* Seg defs                           */
             10827    1           3 SR      UBIN /*(0)*/, /* Seg refs                           */
             10828    1         2 L_SIZE_A(0:9)  REDEF   L_SIZE    UBIN,
             10829    1         2 L_PREV_SIZE,
             10830    1           3 SN      UBIN /*(0)*/, /* Segment definition names           */
             10831    1           3 DN      UBIN /*(0)*/, /* Def names                          */
             10832    1           3 RN      UBIN /*(0)*/, /* Ref names                          */
             10833    1           3 SC      UBIN /*(0)*/, /* Sections                           */
             10834    1           3 ED      UBIN /*(0)*/, /* Entry defs*/
             10835    1           3 ER      UBIN /*(0)*/, /* Entry refs*/
             10836    1           3 DD      UBIN /*(0)*/, /* Data defs                          */
             10837    1           3 DR      UBIN /*(0)*/, /* Data refs                          */
             10838    1           3 SD      UBIN /*(0)*/, /* Seg defs                           */
             10839    1           3 SR      UBIN /*(0)*/, /* Seg refs                           */
             10840    1         2 L_PREV_SIZE_A(0:9)  REDEF   L_PREV_SIZE    UBIN,
             10841    1         2 BIT_MAP                ALIGNED,
             10842    1           3 DATA                  ALIGNED,
             10843    1             4 BITS(0:255)          BIT(1)    UNAL /*('0'B*256)*/,
             10844    1           3 RPROC                 ALIGNED,
             10845    1             4 BITS(0:255)          BIT(1)    UNAL /*('0'B*256)*/,
             10846    1           3 ROS                   ALIGNED,
PL6.E3A0      #001=VXO$SPC File=VXO$SPC.:E05TSI                                  WED 07/30/97 08:30 Page:4    
             10847    1             4 BITS(0:255)          BIT(1)    UNAL /*('0'B*256)*/,
             10848    1         2 L_SC_START,
             10849    1           3 SC_BLK_COM$ PTR /*(ADDR(NIL))*/, /* Blank common            */
             10850    1           3 SC_ROOT_LBL_COM$ PTR /*(ADDR(NIL))*/, /* Root labelled common */
             10851    1           3 SC_LBL_COM$ PTR /*(ADDR(NIL))*/, /* Labelled common         */
             10852    1           3 SC_DCB$ PTR /*(ADDR(NIL))*/, /* Dcbs                        */
             10853    1         2 L_SC_START_A$(0:3)  REDEF L_SC_START PTR,
             10854    1         2 L_SC_STOP,
             10855    1           3 SC_BLK_COM$ PTR /*(ADDR(NIL))*/, /* Blank common            */
             10856    1           3 SC_ROOT_LBL_COM$ PTR /*(ADDR(NIL))*/, /* Root labelled common */
             10857    1           3 SC_LBL_COM$ PTR /*(ADDR(NIL))*/, /* Labelled common         */
             10858    1           3 SC_DCB$ PTR /*(ADDR(NIL))*/, /* Dcbs                        */
             10859    1         2 L_SC_STOP_A$(0:3)   REDEF L_SC_STOP  PTR,
             10860    1         2 PROMOTE_HEAD,
             10861    1           3 BLK_COM$              PTR /*(ADDR(NIL))*/,
             10862    1           3 LBL_COM$              PTR /*(ADDR(NIL))*/,
             10863    1         2 PROMOTE_HEAD_A$(0:1) REDEF PROMOTE_HEAD     PTR,
             10864    1         2 PROMOTE_TAIL,
             10865    1           3 BLK_COM$              PTR /*(ADDR(NIL))*/,
             10866    1           3 LBL_COM$              PTR /*(ADDR(NIL))*/,
             10867    1         2 PROMOTE_TAIL_A$(0:1) REDEF PROMOTE_TAIL     PTR,
             10868    1         2 HAVE_ASL          BIT(1)    UNAL /*('0'B)*/,
             10869    1         2 ALL_BLK_COM          BIT(1)    UNAL /*('0'B)*/,
             10870    1         2 USE_NODE          BIT(1)    UNAL /*('0'B)*/,
             10871    1         2 *                 BIT(33)   UNAL /*('0'B)*/,
             10872    1         2 BLANK_COMMON$     PTR       ALIGNED /*(ADDR(NIL))*/;

       12    10876        %TMPLT;

             10888    1   /*******************************************************************************
             10889    1   *                                                                              *
             10890    1   *                          TMPLT                                                 *
             10891    1   *                                                                              *
             10892    1   *******************************************************************************/

             10897    1   DCL 1 VX$TMPLT           ALIGNED BASED, /* Template for defs                  */
             10898    1         2 A(0:3)       UBIN(18)  UNAL,    /* Array access                       */
PL6.E3A0      #001=VXO$SPC File=VXO$SPC.:E05TSI                                  WED 07/30/97 08:30 Page:5    
             10899    1         2 A_SBIN(0:3) REDEF A    SBIN HALF UNAL,
             10900    1         2 W       REDEF     A,            /* By name                            */
             10901    1           3 WORD0       UBIN(36)  UNAL,   /* First word                         */
             10902    1           3 WORD1       UBIN(36)  UNAL;   /* Second word                        */
       13    10905        %SET LISTMAC='1'B;
       14    10906        %SET LISTDIR='0'B;

             10916    1   /*******************************************************************************
             10917    1   *                                                                              *
             10918    1   *                          B$SDEF                                                 *
             10919    1   *                                                                              *
             10920    1   *******************************************************************************/

             10925    1   DCL 1 B$SDEF BASED ALIGNED,
             10926    1         2 VALUE SBIN UNAL,
             10927                /*K*  VALUE is the value of the constant segment definition
             10928                      pointer if CONSTNT=1.  */
             10929    1         2 AD REDEF VALUE,
             10930                /*K*  AD - Address (not constant)  */
             10931    1           3 LFLAGS UNAL,
             10932                  /*K*  LFLAGS is the field reserved for loader to flag load
             10933                        time attributes of the definition and must be zero
             10934                        in object unit.  */
             10935    1             4 SOURCE UBIN(3) UNAL,
             10936                    /*K*  SOURCE - Source of this SYMDEF */
             10937    1             4 DEFINED BIT(1) UNAL,
             10938                    /*K*  DEFINED - Set if this SYMDEF is defined */
             10939    1             4 MULTIPLE BIT(1) UNAL,
             10940                    /*K*  MULTIPLE - Set if this SYMDEF is multiply defined. */
             10941    1             4 USED BIT(1) UNAL,
             10942                    /*K*  USED - Set if this SYMDEF is used */
             10943    1             4 * BIT(3) UNAL,
             10944                    /*K*  * - Unused */
             10945    1           3 OU UNAL,
             10946    1             4 SECTNUM UBIN BYTE UNAL,
             10947                    /*K*  SECTNUM contains I, where I is an entry number in the
             10948                          section table (TYPE 3).  */
PL6.E3A0      #001=VXO$SPC File=VXO$SPC.:E05TSI                                  WED 07/30/97 08:30 Page:6    
             10949    1             4 OFFSET UBIN HALF UNAL,
             10950                   /*K*  OFFSET is the offset from the origin of section I (See SECTNUM). */
             10951    1           3 ISADDR REDEF OU UBIN(27) UNAL,
             10952                  /*K*  ISADDR - IS Address (RU)  */
             10953    1         2 NPOINTER SBIN HALF UNAL,
             10954                /*K*  NPOINTER is the word displacement into the record of
             10955                      names (TYPE 1) locating the SYMDEF name. */
             10956    1         2 CONSTNT BIT(1) UNAL,
             10957                /*K*  CONSTNT is a flag bit to determine the interpretation
             10958                      of word 0.
             10959                      If CONSTNT=0, word 0 is AD which contains LFLAGS,
             10960                                    SECTNUM, and ISADDR or OFFSET.
             10961                      If CONSTNT=1, word 0 is a constant value (VALUE)  */
             10962    1         2 LFLAGS UNAL,
             10963                /*K*  LFLAGS is the field reserved for loader to flag load
             10964                      time attributes and must be zero in the object unit. */
             10965    1           3 MULTIPLE BIT(1) UNAL,
             10966                  /*K*  MULTIPLE - Set if this SYMDEF is multiply defined. */
             10967    1           3 USED BIT(1) UNAL,
             10968                  /*K*  USED - Set if this SYMDEF is used. */
             10969    1           3 SOURCE UBIN(4) UNAL,
             10970                  /*K*  SOURCE - Source of this SYMDEF */
             10971    1           3 IS_DCB BIT(1) UNAL,
             10972                  /*K* IS_DCB - Set if this is a DCB */
             10973    1           3 * BIT(4) UNAL,
             10974                  /*K*  * - Unused */
             10975    1         2 * BIT(6) UNAL;
             10976                /*K*  * is reserved for future use and must be zero. */

             10986    1   /*******************************************************************************
             10987    1   *                                                                              *
             10988    1   *                          B$DNAME                                                 *
             10989    1   *                                                                              *
             10990    1   *******************************************************************************/

             11002    1   DCL 1 B$DNAME BASED ALIGNED,
             11003    1         2 COUNT UBIN HALF UNAL %INIT(SIZEC(' ')) %CHARTEXT('/**/'),
PL6.E3A0      #001=VXO$SPC File=VXO$SPC.:E05TSI                                  WED 07/30/97 08:30 Page:7    
             11004                /*K*  COUNT is the number of characters in the name */
             11010    1         2 %CHARTEXT('TEXT') CHAR(B$DNAME.COUNT) UNAL;

             11021    1   /*******************************************************************************
             11022    1   *                                                                              *
             11023    1   *                          SUBS                                                 *
             11024    1   *                                                                              *
             11025    1   *******************************************************************************/


             11046    1   /*******************************************************************************
             11047    1   *                                                                              *
             11048    1   *                          ENTRY                                                 *
             11049    1   *                                                                              *
             11050    1   *******************************************************************************/

             11055    1   DCL VXE$ERROR       ENTRY(4);
             11056    1   DCL VXE$ERR         ENTRY(3);
             11057    1   DCL VXE$MERC        ENTRY;
             11058    1   DCL VXE$ERRMSG      ENTRY(3);
             11059    1   DCL VXR$READ        ENTRY( 3 );
             11060    1   DCL VXW$WRITE       ENTRY( 3 );
             11061    1   DCL VXW$WRITE_DO    ENTRY( 2 );
             11062    1   DCL VXD$B2C         ENTRY( 5 );
             11063    1   DCL VXD$C2B         ENTRY( 3 );
             11064    1   DCL VXA$GET         ENTRY( 3 );
             11065    1   DCL VXF$FREE        ENTRY( 3 );
             11066    1   DCL VXQ$SORT        ENTRY( 7 );
             11067    1   DCL VXY$YESNO       ENTRY( 1 );
             11070    1   DCL VXF$OPEN        ENTRY(3) ALTRET;
             11071    1   DCL VXF$CLOSE       ENTRY(3);
             11072    1   DCL VXU$PREAD       ENTRY(12);
             11073    1   DCL VXK$KEY         ENTRY(4);
             11074    1   DCL VXI$READ        ENTRY(4)  ALTRET;
             11075    1   DCL VXI$WRITE       ENTRY(4)  ALTRET;

             11085    1   /*******************************************************************************
PL6.E3A0      #001=VXO$SPC File=VXO$SPC.:E05TSI                                  WED 07/30/97 08:30 Page:8    
             11086    1   *                                                                              *
             11087    1   *                          PTR                                                 *
             11088    1   *                                                                              *
             11089    1   *******************************************************************************/

             11094    1   DCL P$         PTR       ALIGNED AUTO;
             11095    1   DCL Q$         PTR       ALIGNED AUTO;
             11096    1   DCL R$         PTR       ALIGNED AUTO;
       27    11098    1   DCL WHERE$          PTR  ALIGNED   AUTO;
       28    11099    1   DCL START$          PTR  ALIGNED   AUTO;
       29    11100    1   DCL STOP$           PTR  ALIGNED   AUTO;

             11109    1   /*******************************************************************************
             11110    1   *                                                                              *
             11111    1   *                          UBIN                                                 *
             11112    1   *                                                                              *
             11113    1   *******************************************************************************/

             11118    1   DCL I          UBIN(36) ALIGNED AUTO;
             11119    1   DCL SI REDEF I SBIN WORD ALIGNED;
             11120    1   DCL J          UBIN(36) ALIGNED AUTO;
             11121    1   DCL SJ REDEF J SBIN WORD ALIGNED;
             11122    1   DCL K          UBIN(36) ALIGNED AUTO;
             11123    1   DCL SK REDEF K SBIN WORD ALIGNED;
             11124    1   DCL L          UBIN(36) ALIGNED AUTO;
             11125    1   DCL SL REDEF L    SBIN WORD ALIGNED;
       32    11127    1   DCL SIZE            UBIN(36)  ALIGNED   AUTO;
             11132    1   DCL BIN_START$          PTR  ALIGNED   AUTO;
             11133    1   DCL BIN_STOP$           PTR  ALIGNED   AUTO;
             11134    1   DCL BIN_RESULT$         PTR  ALIGNED   AUTO;
             11135    1   DCL BIN_N$              PTR  ALIGNED   AUTO;
             11136    1   DCL BIN_MATCH$          PTR       ALIGNED   AUTO;
             11137    1   DCL BIN_NAME_DISP       UBIN(36)  ALIGNED   AUTO;
             11138    1   DCL BIN_SIZE            UBIN(36)  ALIGNED   AUTO;
             11142    1   DCL BIN_LOW             UBIN(36)  ALIGNED AUTO;
             11143    1   DCL BIN_HIGH            UBIN(36)  ALIGNED AUTO;
             11144    1   DCL BIN_MID             UBIN(36)  ALIGNED AUTO;
PL6.E3A0      #001=VXO$SPC File=VXO$SPC.:E05TSI                                  WED 07/30/97 08:30 Page:9    
             11145    1   DCL BIN_NTEMP$          PTR        ALIGNED AUTO;
             11146    1   DCL BIN_START1$         PTR       ALIGNED AUTO;

PL6.E3A0      #001=VXO$SPC File=VXO$SPC.:E05TSI                                  WED 07/30/97 08:30 Page:10   
       41    11150    2         IF VX_ROOT$ -> VX$NODE.L_START.DN$ = ADDR(NIL) THEN DO;
       42    11151        /*E*  ERROR: VXO-E$NO_DN_VX-0
       43    11152              MESSAGE: No definition names in root.
       44    11153              DESCRIPTION: Self-explanatory.
       45    11154        */
       46    11155                  %SCREAM(
       47    11156                  ERR#=E$NO_DN_VX,
       48    11157                  LEVEL=E$F_VX,
       49    11158                  MID="'O'");
       50    11161    2            END;
       51    11162        /**/
       52    11163        /**/
       53    11164    2         IF VX_SPC_DATA_INSERT THEN DO;
       54    11165    2             VX_SPC.FAULT = VX_BIAS.I.DATA;
       55    11166    2             VX_BIAS.I.DATA = VX_BIAS.I.DATA + 2/*@SPC_FAULT_AREA_SIZEW*/;
       56    11167    2            END;                           /* If VX_SPC_DATA_INSERT then do; */
       57    11168    1         BIN_START$ = VX_ROOT$ -> VX$NODE.L_START.DD$;
       58    11169    1         BIN_STOP$  = VX_ROOT$ -> VX$NODE.L_STOP.DD$;
       59    11170    1         BIN_N$     = VX_ROOT$ -> VX$NODE.L_START.DN$;
       60    11171    2         DO I=0 TO SIZEW( VX_SPC.B$.NAME_A$ ) - 1;
       61    11172    3             IF VX_SPC.B$.SKIP_A(I) ~= 1/*@YES*/ THEN DO; /* Search seems ok */
       62    11173    4                 IF I ~= 1 THEN DO;        /* Not xdelta pointer */
       63    11174    4                     BIN_MATCH$ = VX_SPC.B$.NAME_A$(I);
       64    11175                          %BIN_SEARCH(
       65    11176                          START$ = BIN_START$,
       66    11177                          STOP$ = BIN_STOP$,
       67    11178                          RESULT$ = BIN_RESULT$,
       68    11179                          N$ = BIN_N$,
       69    11180                          MATCH$ = BIN_MATCH$,
       70    11181                          NAME_DISP = 2,
       71    11182                          SIZE="SIZEW(B$SDEF)",
       72    11183                          NEG=%@COMMENT,
       73    11184                          GEN=%@TNEMMOC,
       74    11185                          EMPTY = NOT_FOUND,
       75    11186                          ALTRETURN = NOT_FOUND,
       76    11187                          FOUND=FOUND_IT);
             11189    4           IF BIN_START$ = ADDR(NIL) THEN GOTO NOT_FOUND;
PL6.E3A0      #001=VXO$SPC File=VXO$SPC.:E05TSI                                  WED 07/30/97 08:30 Page:11   
             11190    5           IF POFFW( BIN_STOP$, BIN_START$ ) / SIZEW(B$SDEF) < 17 THEN DO;
             11191    5              BIN_RESULT$ = BIN_START$;        /* Sequential search                  */
             11192    6              DO WHILE( BIN_RESULT$ <= BIN_STOP$ );
             11193    6                 BIN_NTEMP$ = PINCRW( BIN_N$, BIN_RESULT$ -> VX$TMPLT.A(2) );
             11194    6                 IF BIN_NTEMP$ -> B$DNAME.TEXT
             11195    6                   >=
             11196    7                   BIN_MATCH$ -> B$DNAME.TEXT THEN DO;
             11197    7                    IF BIN_NTEMP$ -> B$DNAME.TEXT
             11198    7                      =
             11199    7                      BIN_MATCH$ -> B$DNAME.TEXT THEN GOTO FOUND_IT;
             11200    7                    ELSE GOTO NOT_FOUND;
             11201    7                    END;
             11202    6                 BIN_RESULT$ = PINCRW( BIN_RESULT$, SIZEW(B$SDEF) );
             11203    6                 END;                      /* Do while                           */
             11204    5              GOTO NOT_FOUND;
             11205    5              END; /* If poffw( STOP$, START$ ) / size < TRADE_OFF_POINT then do; */
             11206    5           ELSE DO;                        /* Binary search                      */
             11207    5              BIN_LOW = 0;
             11208    5              BIN_HIGH = POFFW( BIN_STOP$, BIN_START$ ) / SIZEW(B$SDEF) + 2;
             11209    5              BIN_START1$ = PINCRW( BIN_START$, -SIZEW(B$SDEF) );
             11210    5   BIN_SPLIT:     ;
             11211    5              BIN_MID = ( BIN_LOW + BIN_HIGH ) / 2;
             11212    5              BIN_RESULT$ = PINCRW( BIN_START1$, BIN_MID*SIZEW(B$SDEF) );
             11213    5              BIN_NTEMP$ = PINCRW( BIN_N$, BIN_RESULT$ -> VX$TMPLT.A(2) );
             11214    5              IF BIN_NTEMP$ -> B$DNAME.TEXT
             11215    5                <
             11216    6                BIN_MATCH$ -> B$DNAME.TEXT THEN DO;
             11217    6                 BIN_LOW = BIN_MID;
             11218    6                 GOTO BIN_CHECK;
             11219    6                 END;
             11220    5              IF BIN_NTEMP$ -> B$DNAME.TEXT
             11221    5                >
             11222    6                BIN_MATCH$ -> B$DNAME.TEXT THEN DO;
             11223    6                 BIN_HIGH = BIN_MID;
             11224    6   BIN_CHECK:        ;
             11225    6                 IF BIN_LOW + 1    < BIN_HIGH THEN GOTO BIN_SPLIT;
             11226                                                /* Here => looping or not found       */
PL6.E3A0      #001=VXO$SPC File=VXO$SPC.:E05TSI                                  WED 07/30/97 08:30 Page:12   
             11227                                      /* Result -> < match => a boundary condition    */
             11228    6                 %@COMMENT
             11229    6                   IF PINCRW( BIN_N$, BIN_RESULT$ -> VX$TMPLT.A(2) ) -> B$DNAME.TEXT
             11230    6                   <
             11231    6                   BIN_MATCH$ -> B$DNAME.TEXT THEN BIN_RESULT$ = PINCRW( BIN_RESULT$,
             11231                            SIZEW(B$SDEF) );
             11232    6                 %@TNEMMOC
             11233    6                   GOTO NOT_FOUND;
             11234    6                 END;
             11235    5              END;                         /* Else do;                           */
             11236    4   FOUND_IT:
             11237        /* Here -> found */
       77    11239    4                     START$ = BIN_RESULT$;
       78    11240    5                     DO WHILE( START$ >= BIN_START$ );
       79    11241    5                         IF PINCRW( BIN_N$, START$ -> B$SDEF.NPOINTER ) -> B$DNAME.TEXT
       80    11242    5                                 ~=
       81    11243    5                                 BIN_MATCH$ -> B$DNAME.TEXT THEN GOTO NOT_FORWARD;
       82    11244    5                         J = START$ -> B$SDEF.AD.LFLAGS.SOURCE;
       83    11245    5                         IF J = %SOURCE_OBJECT#
       84    11246    5                                 OR
       85    11247    5                                 J = %SOURCE_ULIB#
       86    11248    5                         THEN GOTO NOT_MINE;
       87    11249    5                         START$ = PINCRW( START$, -SIZEW( B$SDEF ) );
       88    11250    5                        END;               /* Do while( START$ >= BIN_START$ ); */
       89    11251        /**/
       90    11252        /**/
       91    11253        /**/
       92    11254    4   NOT_FORWARD:
       93    11255    4                     STOP$  = PINCRW( BIN_RESULT$, SIZEW( B$SDEF ) );
       94    11256    5                     DO WHILE( STOP$ <= BIN_STOP$ );
       95    11257    5                         IF PINCRW( BIN_N$, STOP$  -> B$SDEF.NPOINTER ) -> B$DNAME.TEXT
       96    11258    5                                 ~=
       97    11259    5                                 BIN_MATCH$ -> B$DNAME.TEXT THEN GOTO NOT_FOUND;
       98    11260    5                         J = STOP$  -> B$SDEF.AD.LFLAGS.SOURCE;
       99    11261    5                         IF J = %SOURCE_OBJECT#
      100    11262    5                                 OR
      101    11263    5                                 J = %SOURCE_ULIB#
PL6.E3A0      #001=VXO$SPC File=VXO$SPC.:E05TSI                                  WED 07/30/97 08:30 Page:13   
      102    11264    5                         THEN GOTO NOT_MINE;
      103    11265    5                         STOP$  = PINCRW( STOP$,  SIZEW(  B$SDEF ) );
      104    11266    5                        END;               /* Do while( STOP$  <= BIN_STOP$  ); */
      105    11267    4                     GOTO NOT_FOUND;
      106    11268    4   NOT_MINE:
      107    11269    4                     VX_SPC.B$.MINE_A(I) = 0;
      108    11270    4                     GOTO CONTINUE;
      109    11271    4   NOT_FOUND:
      110    11272    4                     VX_SPC.B$.MINE_A(I) = 1;
      111    11273    4                     VX_SPC.B$.VALUE_A(I) = VX_BIAS.I.RPROC;
      112    11274    4                     IF I = 4 THEN         /* B_VERSION */
      113    11275    4                         VX_BIAS.I.RPROC = VX_BIAS.I.RPROC + 2;
      114    11276    4                     ELSE
      115    11277    4                         VX_BIAS.I.RPROC = VX_BIAS.I.RPROC + 1;
      116    11278    4                     VX_HAVE_SPC = VX_HAVE_SPC + 1;
      117    11279    4                     VX_ROOT_DN_INC = VX_ROOT_DN_INC +
      118    11280                                  %TEXTH_SIZEW( CNT="BIN_MATCH$ -> B$DNAME.COUNT");
      119    11283    4                     ;
      120    11284    4                    END;
      121    11285    4                 ELSE DO;                  /* Delta pointer */
      122    11286    5                     IF VX_SPC_DATA_INSERT THEN DO;
      123    11287    5                         VX_SPC.DELTA_DATA_ADR = VX_BIAS.I.DATA;
      124    11288    5                         VX_BIAS.I.DATA = VX_BIAS.I.DATA + 10/*@SPC_DELTA_AREA_SIZEW*/;
      125    11289    5                        END;               /* If VX_SPC_DATA_INSERT then do; */
      126    11290    5                     ELSE DO;
      127    11291    5                         VX_SPC.DELTA_DATA_ADR = 2/*@SPC_FAULT_AREA_SIZEW*/;
      128    11292    5                        END;               /* Else do; */
      129    11293    4                     VX_SPC.B$.VALUE.DELTA = VX_BIAS.I.RPROC;
      130    11294    4                     VX_BIAS.I.RPROC = VX_BIAS.I.RPROC + 1;
      131    11295    4                     VX_SPC.B$.MINE.DELTA = 1;
      132    11296    4                    END;
      133    11297    3                END;                       /* If VX_SPC.B4.SKIP(I) ~= ... */
      134    11298    2   CONTINUE:
      135    11299    2            END;               /* Do i = 0 to sizew( VX_SPC.B$.NAME_A$ ) - 1; */
      136    11300    2         IF VX_SPC_DATA_INSERT THEN DO;
      137    11301    2             VX_SPC.TCBSIZE = VX_BIAS.I.DATA;
      138    11302    2             VX_BIAS.I.DATA = VX_BIAS.I.DATA + 16/*@TCB_SIZE*/;
PL6.E3A0      #001=VXO$SPC File=VXO$SPC.:E05TSI                                  WED 07/30/97 08:30 Page:14   
      139    11303    2            END;                           /* If VX_SPC_DATA_INSERT then do; */
      140    11304    1   END VXO$SPC;

PL6.E3A0      #001=VXO$SPC File=VXO$SPC.:E05TSI                                  WED 07/30/97 08:30 Page:15   
--  Include file information  --

   F_DCB_D.:E05TOU  is referenced.
   VX_DCB_R.:E05TOU  cannot be made into a system file and is referenced.
   VX_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   VX_FIXED_R.:E05TOU  cannot be made into a system file and is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   VX_MACRO_C.:E05TOU  is referenced.
   VX_PERR_C.:E05TOU  is referenced.
   VX_SUBS_C.:E05TOU  is referenced.
   VX_SWITCH_C.:E05TOU  is referenced.
   B$OBJECT_C.:E05TOU  is referenced.
   VX_INC_C.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure VXO$SPC.

   Procedure VXO$SPC requires 229 words for executable code.
   Procedure VXO$SPC requires 28 words of local(AUTO) storage.

    No errors detected in file VXO$SPC.:E05TSI    .

PL6.E3A0      #001=VXO$SPC File=VXO$SPC.:E05TSI                                  WED 07/30/97 08:30 Page:16   

 Object Unit name= VXO$SPC                                    File name= VXO$SPC.:E05TOU
 UTS= JUL 30 '97 08:30:59.84 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1  LblCom even  none    96    140  VX_CONST_DCB
    2   Proc  even  none   229    345  VXO$SPC
    3  RoData even  none     6      6  VXO$SPC

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     2      0   yes            yes      Std        0  VXO$SPC

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       4 VXE$ERROR
                       nStd      0 X66_AUTO_0
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET
PL6.E3A0      #001=VXO$SPC File=VXO$SPC.:E05TSI                                  WED 07/30/97 08:30 Page:17   

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                                  VX_OU_HEAD                            VX_ROOT$
     VX_ERRORS                             VX_BIAS                               VX_ROOT_DN_INC
     VX_HAVE_SPC                           VX_SPC                                VX_SPC_DATA_INSERT
     B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     NULLSID                               ISSID
PL6.E3A0      #001=VXO$SPC File=VXO$SPC.:E05TSI                                  WED 07/30/97 08:30 Page:18   


        1        1        /*M* VXO$SPC - inserts special symbols: B$JIT$, B$ROS$, B$TCB$ */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* DMR,PLM=6,IND=4,CSU=2,EXM=0,ECU=2,MOC,DCI=4,CRT=4,CTI=8,CCC    */
        8        8        VXO$SPC: PROC;

      8  2 000000   000000 700200 xent  VXO$SPC      TSX0  ! X66_AUTO_0
         2 000001   000034 000000                    ZERO    28,0

        9        9
       10       10        %INCLUDE VX_INC_C;
       11    10726        %VX$NODE;

             10738    1   /*******************************************************************************
             10739    1   *                                                                              *
             10740    1   *                          VX$NODE                                                *
             10741    1   *                                                                              *
             10742    1   *******************************************************************************/

             10758    1   DCL 1 VX$NODE      ALIGNED    BASED,
             10759    1         2 SON$ PTR /*(ADDR(NIL))*/, /* Son pointer                      */
             10760    1         2 BROTHER$ PTR /*(ADDR(NIL))*/, /* Brother pointer              */
             10761    1         2 FATHER$ PTR /*(ADDR(NIL))*/, /* Father pointer                */
             10762    1         2 PATH$ PTR /*(ADDR(NIL))*/, /* Path   pointer                  */
             10763    1         2 HEAD$       PTR /*(ADDR(NIL))*/, /* Head pointer to
             10764                              to list of file nodes for this node            */
             10765    1         2 TAIL$ PTR /*(ADDR(NIL))*/, /* Tail pointer to list            */
             10766    1         2 SHARED_LIB_HEAD$ PTR /*(ADDR(NIL))*/,
             10766                  /* Head pointer to shared library list */
             10767    1         2 LIB_HEAD$         PTR /*(ADDR(NIL))*/,
             10767                  /* Head pointer to list of shared libraries
             10768                                          which have been mapped to included libraries */
             10769    1         2 NUM          UBIN(36)  UNAL,    /* Node number                        */
PL6.E3A0      #001=VXO$SPC File=VXO$SPC.:E05TSI                                  WED 07/30/97 08:30 Page:19   
             10770    1         2 DEPTH          UBIN(36)  UNAL,  /* Depth; ROOT=0*/
             10771    1         2 ADDR_START_A(0:2/*@ROS*/) SBIN WORD /*(0*3)*/, /* Array            */
             10772    1         2 ADDR_START REDEF  ADDR_START_A,
             10773    1           3 RDATA       SBIN WORD,   /* First address for this node in data     */
             10774    1           3 RPROC       SBIN WORD,   /* First address for this node in proc     */
             10775    1           3 ROS       SBIN WORD,          /* Last address for program in ros    */
             10776    1         2 ADDR_STOP_A(0:2/*@ROS*/) SBIN WORD /*(-1*3)*/, /* Array            */
             10777    1         2 ADDR_STOP  REDEF  ADDR_STOP_A,
             10778    1           3 RDATA       SBIN WORD,        /* Last address for this node in data */
             10779    1           3 RPROC       SBIN WORD,        /* Last address for this node in proc */
             10780    1           3 ROS       SBIN WORD,          /* Last address for program in ros    */
             10781    1         2 START_PAGE#_A(0:2/*@ROS*/) SBIN WORD /*(0*3)*/, /* Array           */
             10782    1         2 START_PAGE# REDEF START_PAGE#_A,
             10783    1           3 RDATA       SBIN WORD,   /* First page    for this node in data     */
             10784    1           3 RPROC       SBIN WORD,   /* First page    for this node in proc     */
             10785    1           3 ROS       SBIN WORD,          /* First page   for program in ros    */
             10786    1         2 STOP_PAGE#_A(0:2/*@ROS*/) SBIN WORD /*(-1*3)*/, /* Array*/
             10787    1         2 STOP_PAGE#  REDEF STOP_PAGE#_A,
             10788    1           3 RDATA       SBIN WORD,   /* Last  page    for this node in data     */
             10789    1           3 RPROC       SBIN WORD,   /* Last  page    for this node in proc     */
             10790    1           3 ROS       SBIN WORD,          /* Last  page   for program in ros    */
             10791    1         2 START_SC_ALL$ PTR /*(ADDR(NIL))*/,
             10791                  /* Starting pointer for common sections for this node */
             10792    1         2 STOP_SC_ALL$ PTR /*(ADDR(NIL))*/,
             10792                  /* Stopping pointer for common sections for this node */
             10793    1         2 L_START,
             10794    1           3 SN$ PTR /*(ADDR(NIL))*/, /* Segment definition names        */
             10795    1           3 DN$ PTR /*(ADDR(NIL))*/, /* Def names                       */
             10796    1           3 RN$ PTR /*(ADDR(NIL))*/, /* Ref names                       */
             10797    1           3 SC$ PTR /*(ADDR(NIL))*/, /* Sections                        */
             10798    1           3 ED$ PTR /*(ADDR(NIL))*/, /* Entry defs*/
             10799    1           3 ER$ PTR /*(ADDR(NIL))*/, /* Entry refs*/
             10800    1           3 DD$ PTR /*(ADDR(NIL))*/, /* Data defs                       */
             10801    1           3 DR$ PTR /*(ADDR(NIL))*/, /* Data refs                       */
             10802    1           3 SD$ PTR /*(ADDR(NIL))*/, /* Seg defs                        */
             10803    1           3 SR$ PTR /*(ADDR(NIL))*/, /* Seg refs                        */
             10804    1         2 L_START_A$(0:9)     REDEF L_START PTR,
PL6.E3A0      #001=VXO$SPC File=VXO$SPC.:E05TSI                                  WED 07/30/97 08:30 Page:20   
             10805    1         2 L_STOP,
             10806    1           3 SN$ PTR /*(ADDR(NIL))*/, /* Segment definition names        */
             10807    1           3 DN$ PTR /*(ADDR(NIL))*/, /* Def names                       */
             10808    1           3 RN$ PTR /*(ADDR(NIL))*/, /* Ref names                       */
             10809    1           3 SC$ PTR /*(ADDR(NIL))*/, /* Sections                        */
             10810    1           3 ED$ PTR /*(ADDR(NIL))*/, /* Entry defs*/
             10811    1           3 ER$ PTR /*(ADDR(NIL))*/, /* Entry refs*/
             10812    1           3 DD$ PTR /*(ADDR(NIL))*/, /* Data defs                       */
             10813    1           3 DR$ PTR /*(ADDR(NIL))*/, /* Data refs                       */
             10814    1           3 SD$ PTR /*(ADDR(NIL))*/, /* Seg defs                        */
             10815    1           3 SR$ PTR /*(ADDR(NIL))*/, /* Seg refs                        */
             10816    1         2 L_STOP_A$(0:9) REDEF   L_STOP    PTR,
             10817    1         2 L_SIZE,
             10818    1           3 SN      UBIN /*(0)*/, /* Segment definition names           */
             10819    1           3 DN      UBIN /*(0)*/, /* Def names                          */
             10820    1           3 RN      UBIN /*(0)*/, /* Ref names                          */
             10821    1           3 SC      UBIN /*(0)*/, /* Sections                           */
             10822    1           3 ED      UBIN /*(0)*/, /* Entry defs*/
             10823    1           3 ER      UBIN /*(0)*/, /* Entry refs*/
             10824    1           3 DD      UBIN /*(0)*/, /* Data defs                          */
             10825    1           3 DR      UBIN /*(0)*/, /* Data refs                          */
             10826    1           3 SD      UBIN /*(0)*/, /* Seg defs                           */
             10827    1           3 SR      UBIN /*(0)*/, /* Seg refs                           */
             10828    1         2 L_SIZE_A(0:9)  REDEF   L_SIZE    UBIN,
             10829    1         2 L_PREV_SIZE,
             10830    1           3 SN      UBIN /*(0)*/, /* Segment definition names           */
             10831    1           3 DN      UBIN /*(0)*/, /* Def names                          */
             10832    1           3 RN      UBIN /*(0)*/, /* Ref names                          */
             10833    1           3 SC      UBIN /*(0)*/, /* Sections                           */
             10834    1           3 ED      UBIN /*(0)*/, /* Entry defs*/
             10835    1           3 ER      UBIN /*(0)*/, /* Entry refs*/
             10836    1           3 DD      UBIN /*(0)*/, /* Data defs                          */
             10837    1           3 DR      UBIN /*(0)*/, /* Data refs                          */
             10838    1           3 SD      UBIN /*(0)*/, /* Seg defs                           */
             10839    1           3 SR      UBIN /*(0)*/, /* Seg refs                           */
             10840    1         2 L_PREV_SIZE_A(0:9)  REDEF   L_PREV_SIZE    UBIN,
             10841    1         2 BIT_MAP                ALIGNED,
PL6.E3A0      #001=VXO$SPC File=VXO$SPC.:E05TSI                                  WED 07/30/97 08:30 Page:21   
             10842    1           3 DATA                  ALIGNED,
             10843    1             4 BITS(0:255)          BIT(1)    UNAL /*('0'B*256)*/,
             10844    1           3 RPROC                 ALIGNED,
             10845    1             4 BITS(0:255)          BIT(1)    UNAL /*('0'B*256)*/,
             10846    1           3 ROS                   ALIGNED,
             10847    1             4 BITS(0:255)          BIT(1)    UNAL /*('0'B*256)*/,
             10848    1         2 L_SC_START,
             10849    1           3 SC_BLK_COM$ PTR /*(ADDR(NIL))*/, /* Blank common            */
             10850    1           3 SC_ROOT_LBL_COM$ PTR /*(ADDR(NIL))*/, /* Root labelled common */
             10851    1           3 SC_LBL_COM$ PTR /*(ADDR(NIL))*/, /* Labelled common         */
             10852    1           3 SC_DCB$ PTR /*(ADDR(NIL))*/, /* Dcbs                        */
             10853    1         2 L_SC_START_A$(0:3)  REDEF L_SC_START PTR,
             10854    1         2 L_SC_STOP,
             10855    1           3 SC_BLK_COM$ PTR /*(ADDR(NIL))*/, /* Blank common            */
             10856    1           3 SC_ROOT_LBL_COM$ PTR /*(ADDR(NIL))*/, /* Root labelled common */
             10857    1           3 SC_LBL_COM$ PTR /*(ADDR(NIL))*/, /* Labelled common         */
             10858    1           3 SC_DCB$ PTR /*(ADDR(NIL))*/, /* Dcbs                        */
             10859    1         2 L_SC_STOP_A$(0:3)   REDEF L_SC_STOP  PTR,
             10860    1         2 PROMOTE_HEAD,
             10861    1           3 BLK_COM$              PTR /*(ADDR(NIL))*/,
             10862    1           3 LBL_COM$              PTR /*(ADDR(NIL))*/,
             10863    1         2 PROMOTE_HEAD_A$(0:1) REDEF PROMOTE_HEAD     PTR,
             10864    1         2 PROMOTE_TAIL,
             10865    1           3 BLK_COM$              PTR /*(ADDR(NIL))*/,
             10866    1           3 LBL_COM$              PTR /*(ADDR(NIL))*/,
             10867    1         2 PROMOTE_TAIL_A$(0:1) REDEF PROMOTE_TAIL     PTR,
             10868    1         2 HAVE_ASL          BIT(1)    UNAL /*('0'B)*/,
             10869    1         2 ALL_BLK_COM          BIT(1)    UNAL /*('0'B)*/,
             10870    1         2 USE_NODE          BIT(1)    UNAL /*('0'B)*/,
             10871    1         2 *                 BIT(33)   UNAL /*('0'B)*/,
             10872    1         2 BLANK_COMMON$     PTR       ALIGNED /*(ADDR(NIL))*/;

       12    10876        %TMPLT;

             10888    1   /*******************************************************************************
             10889    1   *                                                                              *
             10890    1   *                          TMPLT                                                 *
PL6.E3A0      #001=VXO$SPC File=VXO$SPC.:E05TSI                                  WED 07/30/97 08:30 Page:22   
             10891    1   *                                                                              *
             10892    1   *******************************************************************************/

             10897    1   DCL 1 VX$TMPLT           ALIGNED BASED, /* Template for defs                  */
             10898    1         2 A(0:3)       UBIN(18)  UNAL,    /* Array access                       */
             10899    1         2 A_SBIN(0:3) REDEF A    SBIN HALF UNAL,
             10900    1         2 W       REDEF     A,            /* By name                            */
             10901    1           3 WORD0       UBIN(36)  UNAL,   /* First word                         */
             10902    1           3 WORD1       UBIN(36)  UNAL;   /* Second word                        */
       13    10905        %SET LISTMAC='1'B;
       14    10906        %SET LISTDIR='0'B;

             10916    1   /*******************************************************************************
             10917    1   *                                                                              *
             10918    1   *                          B$SDEF                                                 *
             10919    1   *                                                                              *
             10920    1   *******************************************************************************/

             10925    1   DCL 1 B$SDEF BASED ALIGNED,
             10926    1         2 VALUE SBIN UNAL,
             10927                /*K*  VALUE is the value of the constant segment definition
             10928                      pointer if CONSTNT=1.  */
             10929    1         2 AD REDEF VALUE,
             10930                /*K*  AD - Address (not constant)  */
             10931    1           3 LFLAGS UNAL,
             10932                  /*K*  LFLAGS is the field reserved for loader to flag load
             10933                        time attributes of the definition and must be zero
             10934                        in object unit.  */
             10935    1             4 SOURCE UBIN(3) UNAL,
             10936                    /*K*  SOURCE - Source of this SYMDEF */
             10937    1             4 DEFINED BIT(1) UNAL,
             10938                    /*K*  DEFINED - Set if this SYMDEF is defined */
             10939    1             4 MULTIPLE BIT(1) UNAL,
             10940                    /*K*  MULTIPLE - Set if this SYMDEF is multiply defined. */
             10941    1             4 USED BIT(1) UNAL,
             10942                    /*K*  USED - Set if this SYMDEF is used */
             10943    1             4 * BIT(3) UNAL,
PL6.E3A0      #001=VXO$SPC File=VXO$SPC.:E05TSI                                  WED 07/30/97 08:30 Page:23   
             10944                    /*K*  * - Unused */
             10945    1           3 OU UNAL,
             10946    1             4 SECTNUM UBIN BYTE UNAL,
             10947                    /*K*  SECTNUM contains I, where I is an entry number in the
             10948                          section table (TYPE 3).  */
             10949    1             4 OFFSET UBIN HALF UNAL,
             10950                   /*K* OFFSET is the offset from the origin of section I (See SECTNUM). */
             10951    1           3 ISADDR REDEF OU UBIN(27) UNAL,
             10952                  /*K*  ISADDR - IS Address (RU)  */
             10953    1         2 NPOINTER SBIN HALF UNAL,
             10954                /*K*  NPOINTER is the word displacement into the record of
             10955                      names (TYPE 1) locating the SYMDEF name. */
             10956    1         2 CONSTNT BIT(1) UNAL,
             10957                /*K*  CONSTNT is a flag bit to determine the interpretation
             10958                      of word 0.
             10959                      If CONSTNT=0, word 0 is AD which contains LFLAGS,
             10960                                    SECTNUM, and ISADDR or OFFSET.
             10961                      If CONSTNT=1, word 0 is a constant value (VALUE)  */
             10962    1         2 LFLAGS UNAL,
             10963                /*K*  LFLAGS is the field reserved for loader to flag load
             10964                      time attributes and must be zero in the object unit. */
             10965    1           3 MULTIPLE BIT(1) UNAL,
             10966                  /*K*  MULTIPLE - Set if this SYMDEF is multiply defined. */
             10967    1           3 USED BIT(1) UNAL,
             10968                  /*K*  USED - Set if this SYMDEF is used. */
             10969    1           3 SOURCE UBIN(4) UNAL,
             10970                  /*K*  SOURCE - Source of this SYMDEF */
             10971    1           3 IS_DCB BIT(1) UNAL,
             10972                  /*K* IS_DCB - Set if this is a DCB */
             10973    1           3 * BIT(4) UNAL,
             10974                  /*K*  * - Unused */
             10975    1         2 * BIT(6) UNAL;
             10976                /*K*  * is reserved for future use and must be zero. */

             10986    1   /*******************************************************************************
             10987    1   *                                                                              *
             10988    1   *                          B$DNAME                                                *
PL6.E3A0      #001=VXO$SPC File=VXO$SPC.:E05TSI                                  WED 07/30/97 08:30 Page:24   
             10989    1   *                                                                              *
             10990    1   *******************************************************************************/

             11002    1   DCL 1 B$DNAME BASED ALIGNED,
             11003    1         2 COUNT UBIN HALF UNAL %INIT(SIZEC(' ')) %CHARTEXT('/**/'),
             11004                /*K*  COUNT is the number of characters in the name */
             11010    1         2 %CHARTEXT('TEXT') CHAR(B$DNAME.COUNT) UNAL;

             11021    1   /*******************************************************************************
             11022    1   *                                                                              *
             11023    1   *                          SUBS                                                 *
             11024    1   *                                                                              *
             11025    1   *******************************************************************************/


             11046    1   /*******************************************************************************
             11047    1   *                                                                              *
             11048    1   *                          ENTRY                                                 *
             11049    1   *                                                                              *
             11050    1   *******************************************************************************/

             11055    1   DCL VXE$ERROR       ENTRY(4);
             11056    1   DCL VXE$ERR         ENTRY(3);
             11057    1   DCL VXE$MERC        ENTRY;
             11058    1   DCL VXE$ERRMSG      ENTRY(3);
             11059    1   DCL VXR$READ        ENTRY( 3 );
             11060    1   DCL VXW$WRITE       ENTRY( 3 );
             11061    1   DCL VXW$WRITE_DO    ENTRY( 2 );
             11062    1   DCL VXD$B2C         ENTRY( 5 );
             11063    1   DCL VXD$C2B         ENTRY( 3 );
             11064    1   DCL VXA$GET         ENTRY( 3 );
             11065    1   DCL VXF$FREE        ENTRY( 3 );
             11066    1   DCL VXQ$SORT        ENTRY( 7 );
             11067    1   DCL VXY$YESNO       ENTRY( 1 );
             11070    1   DCL VXF$OPEN        ENTRY(3) ALTRET;
             11071    1   DCL VXF$CLOSE       ENTRY(3);
             11072    1   DCL VXU$PREAD       ENTRY(12);
PL6.E3A0      #001=VXO$SPC File=VXO$SPC.:E05TSI                                  WED 07/30/97 08:30 Page:25   
             11073    1   DCL VXK$KEY         ENTRY(4);
             11074    1   DCL VXI$READ        ENTRY(4)  ALTRET;
             11075    1   DCL VXI$WRITE       ENTRY(4)  ALTRET;

             11085    1   /*******************************************************************************
             11086    1   *                                                                              *
             11087    1   *                          PTR                                                 *
             11088    1   *                                                                              *
             11089    1   *******************************************************************************/

             11094    1   DCL P$         PTR       ALIGNED AUTO;
             11095    1   DCL Q$         PTR       ALIGNED AUTO;
             11096    1   DCL R$         PTR       ALIGNED AUTO;
       27    11098    1   DCL WHERE$          PTR  ALIGNED   AUTO;
       28    11099    1   DCL START$          PTR  ALIGNED   AUTO;
       29    11100    1   DCL STOP$           PTR  ALIGNED   AUTO;

             11109    1   /*******************************************************************************
             11110    1   *                                                                              *
             11111    1   *                          UBIN                                                 *
             11112    1   *                                                                              *
             11113    1   *******************************************************************************/

             11118    1   DCL I          UBIN(36) ALIGNED AUTO;
             11119    1   DCL SI REDEF I SBIN WORD ALIGNED;
             11120    1   DCL J          UBIN(36) ALIGNED AUTO;
             11121    1   DCL SJ REDEF J SBIN WORD ALIGNED;
             11122    1   DCL K          UBIN(36) ALIGNED AUTO;
             11123    1   DCL SK REDEF K SBIN WORD ALIGNED;
             11124    1   DCL L          UBIN(36) ALIGNED AUTO;
             11125    1   DCL SL REDEF L    SBIN WORD ALIGNED;
       32    11127    1   DCL SIZE            UBIN(36)  ALIGNED   AUTO;
             11132    1   DCL BIN_START$          PTR  ALIGNED   AUTO;
             11133    1   DCL BIN_STOP$           PTR  ALIGNED   AUTO;
             11134    1   DCL BIN_RESULT$         PTR  ALIGNED   AUTO;
             11135    1   DCL BIN_N$              PTR  ALIGNED   AUTO;
             11136    1   DCL BIN_MATCH$          PTR       ALIGNED   AUTO;
PL6.E3A0      #001=VXO$SPC File=VXO$SPC.:E05TSI                                  WED 07/30/97 08:30 Page:26   
             11137    1   DCL BIN_NAME_DISP       UBIN(36)  ALIGNED   AUTO;
             11138    1   DCL BIN_SIZE            UBIN(36)  ALIGNED   AUTO;
             11142    1   DCL BIN_LOW             UBIN(36)  ALIGNED AUTO;
             11143    1   DCL BIN_HIGH            UBIN(36)  ALIGNED AUTO;
             11144    1   DCL BIN_MID             UBIN(36)  ALIGNED AUTO;
             11145    1   DCL BIN_NTEMP$          PTR        ALIGNED AUTO;
             11146    1   DCL BIN_START1$         PTR       ALIGNED AUTO;

PL6.E3A0      #001=VXO$SPC File=VXO$SPC.:E05TSI                                  WED 07/30/97 08:30 Page:27   
       41    11150    2         IF VX_ROOT$ -> VX$NODE.L_START.DN$ = ADDR(NIL) THEN DO;

  11150  2 000002   000000 470400 xsym               LDP0    VX_ROOT$
         2 000003   000031 236100                    LDQ     25,,PR0
         2 000004   000001 116000 xsym               CMPQ    B_VECTNIL+1
         2 000005   000012 601000 2                  TNZ     s:11164

       42    11151        /*E*  ERROR: VXO-E$NO_DN_VX-0
       43    11152              MESSAGE: No definition names in root.
       44    11153              DESCRIPTION: Self-explanatory.
       45    11154        */
       46    11155                  %SCREAM(
       47    11156                  ERR#=E$NO_DN_VX,
       48    11157                  LEVEL=E$F_VX,
       49    11158                  MID="'O'");

  11159  2 000006   000002 630400 3                  EPPR0   2
         2 000007   000022 631400 xsym               EPPR1   B_VECTNIL+18
         2 000010   000000 701000 xent               TSX1    VXE$ERROR
         2 000011   000000 011000                    NOP     0

       50    11161    2            END;

       51    11162        /**/
       52    11163        /**/
       53    11164    2         IF VX_SPC_DATA_INSERT THEN DO;

  11164  2 000012   000000 234000 xsym               SZN     VX_SPC_DATA_INSERT
         2 000013   000020 605000 2                  TPL     s:11168

       54    11165    2             VX_SPC.FAULT = VX_BIAS.I.DATA;

  11165  2 000014   000000 235000 xsym               LDA     VX_BIAS
         2 000015   000062 755000 xsym               STA     VX_SPC+50

       55    11166    2             VX_BIAS.I.DATA = VX_BIAS.I.DATA + 2/*@SPC_FAULT_AREA_SIZEW*/;

PL6.E3A0      #001=VXO$SPC File=VXO$SPC.:E05TSI                                  WED 07/30/97 08:30 Page:28   
  11166  2 000016   000002 236007                    LDQ     2,DL
         2 000017   000000 056000 xsym               ASQ     VX_BIAS

       56    11167    2            END;                           /* If VX_SPC_DATA_INSERT then do; */

       57    11168    1         BIN_START$ = VX_ROOT$ -> VX$NODE.L_START.DD$;

  11168  2 000020   000000 470400 xsym               LDP0    VX_ROOT$
         2 000021   000036 236100                    LDQ     30,,PR0
         2 000022   200016 756100                    STQ     BIN_START$,,AUTO

       58    11169    1         BIN_STOP$  = VX_ROOT$ -> VX$NODE.L_STOP.DD$;

  11169  2 000023   000050 236100                    LDQ     40,,PR0
         2 000024   200017 756100                    STQ     BIN_STOP$,,AUTO

       59    11170    1         BIN_N$     = VX_ROOT$ -> VX$NODE.L_START.DN$;

  11170  2 000025   000031 236100                    LDQ     25,,PR0
         2 000026   200021 756100                    STQ     BIN_N$,,AUTO

       60    11171    2         DO I=0 TO SIZEW( VX_SPC.B$.NAME_A$ ) - 1;

  11171  2 000027   200011 450100                    STZ     I,,AUTO
         2 000030   000333 710000 2                  TRA     CONTINUE+3

       61    11172    3             IF VX_SPC.B$.SKIP_A(I) ~= 1/*@YES*/ THEN DO; /* Search seems ok */

  11172  2 000031   200011 720100                    LXL0    I,,AUTO
         2 000032   000037 235010 xsym               LDA     VX_SPC+31,X0
         2 000033   000001 115007                    CMPA    1,DL
         2 000034   000330 600000 2                  TZE     CONTINUE

       62    11173    4                 IF I ~= 1 THEN DO;        /* Not xdelta pointer */

  11173  2 000035   200011 236100                    LDQ     I,,AUTO
         2 000036   000001 116007                    CMPQ    1,DL
PL6.E3A0      #001=VXO$SPC File=VXO$SPC.:E05TSI                                  WED 07/30/97 08:30 Page:29   
         2 000037   000312 600000 2                  TZE     s:11286

       63    11174    4                     BIN_MATCH$ = VX_SPC.B$.NAME_A$(I);

  11174  2 000040   000025 236010 xsym               LDQ     VX_SPC+21,X0
         2 000041   200022 756100                    STQ     BIN_MATCH$,,AUTO

       64    11175                          %BIN_SEARCH(
       65    11176                          START$ = BIN_START$,
       66    11177                          STOP$ = BIN_STOP$,
       67    11178                          RESULT$ = BIN_RESULT$,
       68    11179                          N$ = BIN_N$,
       69    11180                          MATCH$ = BIN_MATCH$,
       70    11181                          NAME_DISP = 2,
       71    11182                          SIZE="SIZEW(B$SDEF)",
       72    11183                          NEG=%@COMMENT,
       73    11184                          GEN=%@TNEMMOC,
       74    11185                          EMPTY = NOT_FOUND,
       75    11186                          ALTRETURN = NOT_FOUND,
       76    11187                          FOUND=FOUND_IT);
             11189    4           IF BIN_START$ = ADDR(NIL) THEN GOTO NOT_FOUND;

  11189  2 000042   200016 236100                    LDQ     BIN_START$,,AUTO
         2 000043   000001 116000 xsym               CMPQ    B_VECTNIL+1
         2 000044   000263 600000 2                  TZE     NOT_FOUND

             11190    5           IF POFFW( BIN_STOP$, BIN_START$ ) / SIZEW(B$SDEF) < 17 THEN DO;

  11190  2 000045   200016 235100                    LDA     BIN_START$,,AUTO
         2 000046   000022 771000                    ARL     18
         2 000047   200032 755100                    STA     BIN_START1$+1,,AUTO
         2 000050   200017 236100                    LDQ     BIN_STOP$,,AUTO
         2 000051   000022 772000                    QRL     18
         2 000052   200032 136100                    SBLQ    BIN_START1$+1,,AUTO
         2 000053   000002 506007                    DIV     2,DL
         2 000054   000021 116007                    CMPQ    17,DL
         2 000055   000111 605000 2                  TPL     s:11207
PL6.E3A0      #001=VXO$SPC File=VXO$SPC.:E05TSI                                  WED 07/30/97 08:30 Page:30   

             11191    5              BIN_RESULT$ = BIN_START$;        /* Sequential search                 */

  11191  2 000056   200016 236100                    LDQ     BIN_START$,,AUTO
         2 000057   200020 756100                    STQ     BIN_RESULT$,,AUTO

             11192    6              DO WHILE( BIN_RESULT$ <= BIN_STOP$ );

  11192  2 000060   200017 116100                    CMPQ    BIN_STOP$,,AUTO
         2 000061   000063 600000 2                  TZE     s:11193
         2 000062   000110 603000 2                  TRC     s:11204

             11193    6                 BIN_NTEMP$ = PINCRW( BIN_N$, BIN_RESULT$ -> VX$TMPLT.A(2) );

  11193  2 000063   200020 470500                    LDP0    BIN_RESULT$,,AUTO
         2 000064   000001 220100                    LDX0    1,,PR0
         2 000065   000000 636010                    EAQ     0,X0
         2 000066   200021 036100                    ADLQ    BIN_N$,,AUTO
         2 000067   200030 756100                    STQ     BIN_NTEMP$,,AUTO

             11194    6                 IF BIN_NTEMP$ -> B$DNAME.TEXT

  11194  2 000070   200030 471500                    LDP1    BIN_NTEMP$,,AUTO
         2 000071   100000 221100                    LDX1    0,,PR1
         2 000072   200022 473500                    LDP3    BIN_MATCH$,,AUTO
         2 000073   300000 222100                    LDX2    0,,PR3
         2 000074   040140 106540                    CMPC    fill='040'O
         2 000075   100000 400011                    ADSC9   0,,PR1                   cn=2,n=*X1
         2 000076   300000 400012                    ADSC9   0,,PR3                   cn=2,n=*X2
         2 000077   000102 602000 2                  TNC     s:11202

             11195    6                   >=
             11196    7                   BIN_MATCH$ -> B$DNAME.TEXT THEN DO;

             11197    7                    IF BIN_NTEMP$ -> B$DNAME.TEXT

  11197  2 000100   000166 600000 2                  TZE     FOUND_IT
PL6.E3A0      #001=VXO$SPC File=VXO$SPC.:E05TSI                                  WED 07/30/97 08:30 Page:31   

             11198    7                      =
             11199    7                      BIN_MATCH$ -> B$DNAME.TEXT THEN GOTO FOUND_IT;
             11200    7                    ELSE GOTO NOT_FOUND;

  11200  2 000101   000263 710000 2                  TRA     NOT_FOUND

             11201    7                    END;
             11202    6                 BIN_RESULT$ = PINCRW( BIN_RESULT$, SIZEW(B$SDEF) );

  11202  2 000102   200020 236100                    LDQ     BIN_RESULT$,,AUTO
         2 000103   000002 036003                    ADLQ    2,DU
         2 000104   200020 756100                    STQ     BIN_RESULT$,,AUTO

             11203    6                 END;                      /* Do while                           */

  11203  2 000105   200017 116100                    CMPQ    BIN_STOP$,,AUTO
         2 000106   000063 602000 2                  TNC     s:11193
         2 000107   000063 600000 2                  TZE     s:11193

             11204    5              GOTO NOT_FOUND;

  11204  2 000110   000263 710000 2                  TRA     NOT_FOUND

             11205    5              END; /* If poffw( STOP$, START$ ) / size < TRADE_OFF_POINT then do; */
             11206    5           ELSE DO;                        /* Binary search                      */

             11207    5              BIN_LOW = 0;

  11207  2 000111   200025 450100                    STZ     BIN_LOW,,AUTO

             11208    5              BIN_HIGH = POFFW( BIN_STOP$, BIN_START$ ) / SIZEW(B$SDEF) + 2;

  11208  2 000112   200016 235100                    LDA     BIN_START$,,AUTO
         2 000113   000022 771000                    ARL     18
         2 000114   200032 755100                    STA     BIN_START1$+1,,AUTO
         2 000115   200017 236100                    LDQ     BIN_STOP$,,AUTO
PL6.E3A0      #001=VXO$SPC File=VXO$SPC.:E05TSI                                  WED 07/30/97 08:30 Page:32   
         2 000116   000022 772000                    QRL     18
         2 000117   200032 136100                    SBLQ    BIN_START1$+1,,AUTO
         2 000120   000002 506007                    DIV     2,DL
         2 000121   000002 036007                    ADLQ    2,DL
         2 000122   200026 756100                    STQ     BIN_HIGH,,AUTO

             11209    5              BIN_START1$ = PINCRW( BIN_START$, -SIZEW(B$SDEF) );

  11209  2 000123   200016 236100                    LDQ     BIN_START$,,AUTO
         2 000124   777776 036003                    ADLQ    -2,DU
         2 000125   200031 756100                    STQ     BIN_START1$,,AUTO

  11209  2 000126                       BIN_SPLIT    null
             11210    5   BIN_SPLIT:     ;
             11211    5              BIN_MID = ( BIN_LOW + BIN_HIGH ) / 2;

  11211  2 000126   200025 236100                    LDQ     BIN_LOW,,AUTO
         2 000127   200026 036100                    ADLQ    BIN_HIGH,,AUTO
         2 000130   000001 772000                    QRL     1
         2 000131   200027 756100                    STQ     BIN_MID,,AUTO

             11212    5              BIN_RESULT$ = PINCRW( BIN_START1$, BIN_MID*SIZEW(B$SDEF) );

  11212  2 000132   000023 736000                    QLS     19
         2 000133   200031 036100                    ADLQ    BIN_START1$,,AUTO
         2 000134   200020 756100                    STQ     BIN_RESULT$,,AUTO

             11213    5              BIN_NTEMP$ = PINCRW( BIN_N$, BIN_RESULT$ -> VX$TMPLT.A(2) );

  11213  2 000135   200020 470500                    LDP0    BIN_RESULT$,,AUTO
         2 000136   000001 220100                    LDX0    1,,PR0
         2 000137   000000 636010                    EAQ     0,X0
         2 000140   200021 036100                    ADLQ    BIN_N$,,AUTO
         2 000141   200030 756100                    STQ     BIN_NTEMP$,,AUTO

             11214    5              IF BIN_NTEMP$ -> B$DNAME.TEXT

PL6.E3A0      #001=VXO$SPC File=VXO$SPC.:E05TSI                                  WED 07/30/97 08:30 Page:33   
  11214  2 000142   200030 471500                    LDP1    BIN_NTEMP$,,AUTO
         2 000143   100000 221100                    LDX1    0,,PR1
         2 000144   200022 473500                    LDP3    BIN_MATCH$,,AUTO
         2 000145   300000 222100                    LDX2    0,,PR3
         2 000146   040140 106540                    CMPC    fill='040'O
         2 000147   100000 400011                    ADSC9   0,,PR1                   cn=2,n=*X1
         2 000150   300000 400012                    ADSC9   0,,PR3                   cn=2,n=*X2
         2 000151   000155 603000 2                  TRC     s:11220

             11215    5                <
             11216    6                BIN_MATCH$ -> B$DNAME.TEXT THEN DO;

             11217    6                 BIN_LOW = BIN_MID;

  11217  2 000152   200027 235100                    LDA     BIN_MID,,AUTO
         2 000153   200025 755100                    STA     BIN_LOW,,AUTO

             11218    6                 GOTO BIN_CHECK;

  11218  2 000154   000161 710000 2                  TRA     BIN_CHECK

             11219    6                 END;
             11220    5              IF BIN_NTEMP$ -> B$DNAME.TEXT

  11220  2 000155   000166 602000 2                  TNC     FOUND_IT
         2 000156   000166 600000 2                  TZE     FOUND_IT

             11221    5                >
             11222    6                BIN_MATCH$ -> B$DNAME.TEXT THEN DO;

             11223    6                 BIN_HIGH = BIN_MID;

  11223  2 000157   200027 235100                    LDA     BIN_MID,,AUTO
         2 000160   200026 755100                    STA     BIN_HIGH,,AUTO

  11223  2 000161                       BIN_CHECK    null
             11224    6   BIN_CHECK:        ;
PL6.E3A0      #001=VXO$SPC File=VXO$SPC.:E05TSI                                  WED 07/30/97 08:30 Page:34   
             11225    6                 IF BIN_LOW + 1    < BIN_HIGH THEN GOTO BIN_SPLIT;

  11225  2 000161   200025 236100                    LDQ     BIN_LOW,,AUTO
         2 000162   000001 036007                    ADLQ    1,DL
         2 000163   200026 116100                    CMPQ    BIN_HIGH,,AUTO
         2 000164   000126 602000 2                  TNC     BIN_SPLIT

             11226                                                /* Here => looping or not found       */
             11227                                      /* Result -> < match => a boundary condition    */
             11228    6                 %@COMMENT
             11229    6                   IF PINCRW( BIN_N$, BIN_RESULT$ -> VX$TMPLT.A(2) ) -> B$DNAME.TEXT
             11230    6                   <
             11231    6                   BIN_MATCH$ -> B$DNAME.TEXT THEN BIN_RESULT$ = PINCRW( BIN_RESULT$,
             11231                            SIZEW(B$SDEF) );
             11232    6                 %@TNEMMOC
             11233    6                   GOTO NOT_FOUND;

  11233  2 000165   000263 710000 2                  TRA     NOT_FOUND

             11234    6                 END;
             11235    5              END;                         /* Else do;                           */
             11236    4   FOUND_IT:
             11237        /* Here -> found */
       77    11239    4                     START$ = BIN_RESULT$;

  11239  2 000166   200020 236100       FOUND_IT     LDQ     BIN_RESULT$,,AUTO
         2 000167   200007 756100                    STQ     START$,,AUTO

       78    11240    5                     DO WHILE( START$ >= BIN_START$ );

  11240  2 000170   200016 116100                    CMPQ    BIN_START$,,AUTO
         2 000171   000221 602000 2                  TNC     NOT_FORWARD

       79    11241    5                        IF PINCRW( BIN_N$, START$ -> B$SDEF.NPOINTER ) -> B$DNAME.TEXT

  11241  2 000172   200007 470500                    LDP0    START$,,AUTO
         2 000173   000001 220100                    LDX0    1,,PR0
PL6.E3A0      #001=VXO$SPC File=VXO$SPC.:E05TSI                                  WED 07/30/97 08:30 Page:35   
         2 000174   200021 471500                    LDP1    BIN_N$,,AUTO
         2 000175   100000 221110                    LDX1    0,X0,PR1
         2 000176   200022 473500                    LDP3    BIN_MATCH$,,AUTO
         2 000177   300000 222100                    LDX2    0,,PR3
         2 000200   000000 635010                    EAA     0,X0
         2 000201   000020 731000                    ARS     16
         2 000202   040140 106545                    CMPC    fill='040'O
         2 000203   100000 400011                    ADSC9   0,A,PR1                  cn=2,n=*X1
         2 000204   300000 400012                    ADSC9   0,,PR3                   cn=2,n=*X2
         2 000205   000221 601000 2                  TNZ     NOT_FORWARD

       80    11242    5                                 ~=
       81    11243    5                                 BIN_MATCH$ -> B$DNAME.TEXT THEN GOTO NOT_FORWARD;
       82    11244    5                         J = START$ -> B$SDEF.AD.LFLAGS.SOURCE;

  11244  2 000206   000000 236100                    LDQ     0,,PR0
         2 000207   000041 772000                    QRL     33
         2 000210   200012 756100                    STQ     J,,AUTO

       83    11245    5                         IF J = %SOURCE_OBJECT#

  11245  2 000211   000260 600000 2                  TZE     NOT_MINE
         2 000212   000003 116007                    CMPQ    3,DL
         2 000213   000260 600000 2                  TZE     NOT_MINE

       84    11246    5                                 OR
       85    11247    5                                 J = %SOURCE_ULIB#
       86    11248    5                         THEN GOTO NOT_MINE;
       87    11249    5                         START$ = PINCRW( START$, -SIZEW( B$SDEF ) );

  11249  2 000214   200007 236100                    LDQ     START$,,AUTO
         2 000215   777776 036003                    ADLQ    -2,DU
         2 000216   200007 756100                    STQ     START$,,AUTO

       88    11250    5                        END;               /* Do while( START$ >= BIN_START$ ); */

  11250  2 000217   200016 116100                    CMPQ    BIN_START$,,AUTO
PL6.E3A0      #001=VXO$SPC File=VXO$SPC.:E05TSI                                  WED 07/30/97 08:30 Page:36   
         2 000220   000172 603000 2                  TRC     s:11241

       89    11251        /**/
       90    11252        /**/
       91    11253        /**/
       92    11254    4   NOT_FORWARD:
       93    11255    4                     STOP$  = PINCRW( BIN_RESULT$, SIZEW( B$SDEF ) );

  11255  2 000221   200020 236100       NOT_FORWARD  LDQ     BIN_RESULT$,,AUTO
         2 000222   000002 036003                    ADLQ    2,DU
         2 000223   200010 756100                    STQ     STOP$,,AUTO

       94    11256    5                     DO WHILE( STOP$ <= BIN_STOP$ );

  11256  2 000224   200017 116100                    CMPQ    BIN_STOP$,,AUTO
         2 000225   000227 600000 2                  TZE     s:11257
         2 000226   000257 603000 2                  TRC     s:11267

       95    11257    5                         IF PINCRW( BIN_N$, STOP$ -> B$SDEF.NPOINTER ) -> B$DNAME.TEXT

  11257  2 000227   200010 470500                    LDP0    STOP$,,AUTO
         2 000230   000001 220100                    LDX0    1,,PR0
         2 000231   200021 471500                    LDP1    BIN_N$,,AUTO
         2 000232   100000 221110                    LDX1    0,X0,PR1
         2 000233   200022 473500                    LDP3    BIN_MATCH$,,AUTO
         2 000234   300000 222100                    LDX2    0,,PR3
         2 000235   000000 635010                    EAA     0,X0
         2 000236   000020 731000                    ARS     16
         2 000237   040140 106545                    CMPC    fill='040'O
         2 000240   100000 400011                    ADSC9   0,A,PR1                  cn=2,n=*X1
         2 000241   300000 400012                    ADSC9   0,,PR3                   cn=2,n=*X2
         2 000242   000263 601000 2                  TNZ     NOT_FOUND

       96    11258    5                                 ~=
       97    11259    5                                 BIN_MATCH$ -> B$DNAME.TEXT THEN GOTO NOT_FOUND;
       98    11260    5                         J = STOP$  -> B$SDEF.AD.LFLAGS.SOURCE;

PL6.E3A0      #001=VXO$SPC File=VXO$SPC.:E05TSI                                  WED 07/30/97 08:30 Page:37   
  11260  2 000243   000000 236100                    LDQ     0,,PR0
         2 000244   000041 772000                    QRL     33
         2 000245   200012 756100                    STQ     J,,AUTO

       99    11261    5                         IF J = %SOURCE_OBJECT#

  11261  2 000246   000260 600000 2                  TZE     NOT_MINE
         2 000247   000003 116007                    CMPQ    3,DL
         2 000250   000260 600000 2                  TZE     NOT_MINE

      100    11262    5                                 OR
      101    11263    5                                 J = %SOURCE_ULIB#
      102    11264    5                         THEN GOTO NOT_MINE;
      103    11265    5                         STOP$  = PINCRW( STOP$,  SIZEW(  B$SDEF ) );

  11265  2 000251   200010 236100                    LDQ     STOP$,,AUTO
         2 000252   000002 036003                    ADLQ    2,DU
         2 000253   200010 756100                    STQ     STOP$,,AUTO

      104    11266    5                        END;               /* Do while( STOP$  <= BIN_STOP$  ); */

  11266  2 000254   200017 116100                    CMPQ    BIN_STOP$,,AUTO
         2 000255   000227 602000 2                  TNC     s:11257
         2 000256   000227 600000 2                  TZE     s:11257

      105    11267    4                     GOTO NOT_FOUND;

  11267  2 000257   000263 710000 2                  TRA     NOT_FOUND

      106    11268    4   NOT_MINE:
      107    11269    4                     VX_SPC.B$.MINE_A(I) = 0;

  11269  2 000260   200011 720100       NOT_MINE     LXL0    I,,AUTO
         2 000261   000044 450010 xsym               STZ     VX_SPC+36,X0

      108    11270    4                     GOTO CONTINUE;

PL6.E3A0      #001=VXO$SPC File=VXO$SPC.:E05TSI                                  WED 07/30/97 08:30 Page:38   
  11270  2 000262   000330 710000 2                  TRA     CONTINUE

      109    11271    4   NOT_FOUND:
      110    11272    4                     VX_SPC.B$.MINE_A(I) = 1;

  11272  2 000263   000001 235007       NOT_FOUND    LDA     1,DL
         2 000264   200011 720100                    LXL0    I,,AUTO
         2 000265   000044 755010 xsym               STA     VX_SPC+36,X0

      111    11273    4                     VX_SPC.B$.VALUE_A(I) = VX_BIAS.I.RPROC;

  11273  2 000266   000001 236000 xsym               LDQ     VX_BIAS+1
         2 000267   000032 756010 xsym               STQ     VX_SPC+26,X0

      112    11274    4                     IF I = 4 THEN         /* B_VERSION */

  11274  2 000270   200011 235100                    LDA     I,,AUTO
         2 000271   000004 115007                    CMPA    4,DL
         2 000272   000276 601000 2                  TNZ     s:11277

      113    11275    4                         VX_BIAS.I.RPROC = VX_BIAS.I.RPROC + 2;

  11275  2 000273   000002 236007                    LDQ     2,DL
         2 000274   000001 056000 xsym               ASQ     VX_BIAS+1
         2 000275   000277 710000 2                  TRA     s:11278

      114    11276    4                     ELSE
      115    11277    4                         VX_BIAS.I.RPROC = VX_BIAS.I.RPROC + 1;

  11277  2 000276   000001 054000 xsym               AOS     VX_BIAS+1

      116    11278    4                     VX_HAVE_SPC = VX_HAVE_SPC + 1;

  11278  2 000277   000000 236000 xsym               LDQ     VX_HAVE_SPC
         2 000300   000001 036007                    ADLQ    1,DL
         2 000301   000000 756000 xsym               STQ     VX_HAVE_SPC

PL6.E3A0      #001=VXO$SPC File=VXO$SPC.:E05TSI                                  WED 07/30/97 08:30 Page:39   
      117    11279    4                     VX_ROOT_DN_INC = VX_ROOT_DN_INC +

  11279  2 000302   200022 470500                    LDP0    BIN_MATCH$,,AUTO
         2 000303   000000 236100                    LDQ     0,,PR0
         2 000304   000022 772000                    QRL     18
         2 000305   000005 036007                    ADLQ    5,DL
         2 000306   000002 772000                    QRL     2
         2 000307   000000 036000 xsym               ADLQ    VX_ROOT_DN_INC
         2 000310   000000 756000 xsym               STQ     VX_ROOT_DN_INC

      118    11280                                  %TEXTH_SIZEW( CNT="BIN_MATCH$ -> B$DNAME.COUNT");
      119    11283    4                     ;
      120    11284    4                    END;

  11284  2 000311   000330 710000 2                  TRA     CONTINUE

      121    11285    4                 ELSE DO;                  /* Delta pointer */

      122    11286    5                     IF VX_SPC_DATA_INSERT THEN DO;

  11286  2 000312   000000 234000 xsym               SZN     VX_SPC_DATA_INSERT
         2 000313   000321 605000 2                  TPL     s:11291

      123    11287    5                         VX_SPC.DELTA_DATA_ADR = VX_BIAS.I.DATA;

  11287  2 000314   000000 235000 xsym               LDA     VX_BIAS
         2 000315   000063 755000 xsym               STA     VX_SPC+51

      124    11288    5                        VX_BIAS.I.DATA = VX_BIAS.I.DATA + 10/*@SPC_DELTA_AREA_SIZEW*/;

  11288  2 000316   000012 236007                    LDQ     10,DL
         2 000317   000000 056000 xsym               ASQ     VX_BIAS

      125    11289    5                        END;               /* If VX_SPC_DATA_INSERT then do; */

  11289  2 000320   000323 710000 2                  TRA     s:11293

PL6.E3A0      #001=VXO$SPC File=VXO$SPC.:E05TSI                                  WED 07/30/97 08:30 Page:40   
      126    11290    5                     ELSE DO;

      127    11291    5                         VX_SPC.DELTA_DATA_ADR = 2/*@SPC_FAULT_AREA_SIZEW*/;

  11291  2 000321   000002 235007                    LDA     2,DL
         2 000322   000063 755000 xsym               STA     VX_SPC+51

      128    11292    5                        END;               /* Else do; */

      129    11293    4                     VX_SPC.B$.VALUE.DELTA = VX_BIAS.I.RPROC;

  11293  2 000323   000001 236000 xsym               LDQ     VX_BIAS+1
         2 000324   000033 756000 xsym               STQ     VX_SPC+27

      130    11294    4                     VX_BIAS.I.RPROC = VX_BIAS.I.RPROC + 1;

  11294  2 000325   000001 054000 xsym               AOS     VX_BIAS+1

      131    11295    4                     VX_SPC.B$.MINE.DELTA = 1;

  11295  2 000326   000001 235007                    LDA     1,DL
         2 000327   000045 755000 xsym               STA     VX_SPC+37

      132    11296    4                    END;

      133    11297    3                END;                       /* If VX_SPC.B4.SKIP(I) ~= ... */

      134    11298    2   CONTINUE:
      135    11299    2            END;               /* Do i = 0 to sizew( VX_SPC.B$.NAME_A$ ) - 1; */

  11299  2 000330   200011 235100       CONTINUE     LDA     I,,AUTO
         2 000331   000001 035007                    ADLA    1,DL
         2 000332   200011 755100                    STA     I,,AUTO
         2 000333   200011 235100                    LDA     I,,AUTO
         2 000334   000005 115007                    CMPA    5,DL
         2 000335   000031 602000 2                  TNC     s:11172

PL6.E3A0      #001=VXO$SPC File=VXO$SPC.:E05TSI                                  WED 07/30/97 08:30 Page:41   
      136    11300    2         IF VX_SPC_DATA_INSERT THEN DO;

  11300  2 000336   000000 234000 xsym               SZN     VX_SPC_DATA_INSERT
         2 000337   000344 605000 2                  TPL     s:11304

      137    11301    2             VX_SPC.TCBSIZE = VX_BIAS.I.DATA;

  11301  2 000340   000000 236000 xsym               LDQ     VX_BIAS
         2 000341   000064 756000 xsym               STQ     VX_SPC+52

      138    11302    2             VX_BIAS.I.DATA = VX_BIAS.I.DATA + 16/*@TCB_SIZE*/;

  11302  2 000342   000020 236007                    LDQ     16,DL
         2 000343   000000 056000 xsym               ASQ     VX_BIAS

      139    11303    2            END;                           /* If VX_SPC_DATA_INSERT then do; */

      140    11304    1   END VXO$SPC;

  11304  2 000344   000000 702200 xent               TSX2  ! X66_ARET

PL6.E3A0      #001=VXO$SPC File=VXO$SPC.:E05TSI                                  WED 07/30/97 08:30 Page:42   
--  Include file information  --

   F_DCB_D.:E05TOU  is referenced.
   VX_DCB_R.:E05TOU  cannot be made into a system file and is referenced.
   VX_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   VX_FIXED_R.:E05TOU  cannot be made into a system file and is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   VX_MACRO_C.:E05TOU  is referenced.
   VX_PERR_C.:E05TOU  is referenced.
   VX_SUBS_C.:E05TOU  is referenced.
   VX_SWITCH_C.:E05TOU  is referenced.
   B$OBJECT_C.:E05TOU  is referenced.
   VX_INC_C.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure VXO$SPC.
PL6.E3A0      #001=VXO$SPC File=VXO$SPC.:E05TSI                                  WED 07/30/97 08:30 Page:43   

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

    26-0-0/w UBIN        r     1 BIN_HIGH                  25-0-0/w UBIN        r     1 BIN_LOW
    22-0-0/w PTR         r     1 BIN_MATCH$                27-0-0/w UBIN        r     1 BIN_MID
    21-0-0/w PTR         r     1 BIN_N$                    30-0-0/w PTR         r     1 BIN_NTEMP$
    20-0-0/w PTR         r     1 BIN_RESULT$               16-0-0/w PTR         r     1 BIN_START$
    31-0-0/w PTR         r     1 BIN_START1$               17-0-0/w PTR         r     1 BIN_STOP$
    11-0-0/w UBIN        r     1 I                         12-0-0/w UBIN        r     1 J
     7-0-0/w PTR         r     1 START$                    10-0-0/w PTR         r     1 STOP$

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(108)   r     1 VX_BIAS                    0-0-0/w UBIN        r     1 VX_HAVE_SPC
     0-0-0/w PTR         r     1 VX_ROOT$                   0-0-0/w UBIN        r     1 VX_ROOT_DN_INC
     0-0-0/w STRC(1908)  r     1 VX_SPC                     0-0-0/w BIT         r     1 VX_SPC_DATA_INSERT

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w ASTR(18)    r     1 B$DNAME                    0-0-0/w STRC(72)    r     1 B$SDEF
     0-0-0/w STRC(3672)  r     1 VX$NODE                    0-0-0/w STRC(72)    r     1 VX$TMPLT


   Procedure VXO$SPC requires 229 words for executable code.
   Procedure VXO$SPC requires 28 words of local(AUTO) storage.
PL6.E3A0      #001=VXO$SPC File=VXO$SPC.:E05TSI                                  WED 07/30/97 08:30 Page:44   

    No errors detected in file VXO$SPC.:E05TSI    .
PL6.E3A0      #001=VXO$SPC File=VXO$SPC.:E05TSI                                  WED 07/30/97 08:30 Page:45   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=VXO$SPC File=VXO$SPC.:E05TSI                                  WED 07/30/97 08:30 Page:46   
          MINI XREF LISTING

B$DNAME.COUNT
     11003**DCL     11010--IMP-SIZ 11194>>IF      11194>>IF      11197>>IF      11197>>IF      11214>>IF
     11214>>IF      11220>>IF      11220>>IF      11241>>IF      11241>>IF      11257>>IF      11257>>IF
     11279>>ASSIGN
B$DNAME.TEXT
     11010**DCL     11194>>IF      11194>>IF      11197>>IF      11197>>IF      11214>>IF      11214>>IF
     11220>>IF      11220>>IF      11241>>IF      11241>>IF      11257>>IF      11257>>IF
B$SDEF
     10925**DCL     11190--IF      11202--ASSIGN  11208--ASSIGN  11209--ASSIGN  11212--ASSIGN  11249--ASSIGN
     11255--ASSIGN  11265--ASSIGN
B$SDEF.AD.LFLAGS.SOURCE
     10935**DCL     11244>>ASSIGN  11260>>ASSIGN
B$SDEF.AD.OU
     10945**DCL     10951--REDEF
B$SDEF.NPOINTER
     10953**DCL     11241>>IF      11241>>IF      11257>>IF      11257>>IF
B$SDEF.VALUE
     10926**DCL     10929--REDEF
BIN_CHECK
     11223**LABEL   11218--GOTO
BIN_HIGH
     11143**DCL     11208<<ASSIGN  11211>>ASSIGN  11223<<ASSIGN  11225>>IF
BIN_LOW
     11142**DCL     11207<<ASSIGN  11211>>ASSIGN  11217<<ASSIGN  11225>>IF
BIN_MATCH$
     11136**DCL     11174<<ASSIGN  11194>>IF      11194>>IF      11197>>IF      11197>>IF      11214>>IF
     11214>>IF      11220>>IF      11220>>IF      11241>>IF      11241>>IF      11257>>IF      11257>>IF
     11279>>ASSIGN
BIN_MID
     11144**DCL     11211<<ASSIGN  11212>>ASSIGN  11217>>ASSIGN  11223>>ASSIGN
BIN_N$
     11135**DCL     11170<<ASSIGN  11193>>ASSIGN  11213>>ASSIGN  11241>>IF      11241>>IF      11257>>IF
PL6.E3A0      #001=VXO$SPC File=VXO$SPC.:E05TSI                                  WED 07/30/97 08:30 Page:47   
     11257>>IF
BIN_NTEMP$
     11145**DCL     11193<<ASSIGN  11194>>IF      11194>>IF      11197>>IF      11197>>IF      11213<<ASSIGN
     11214>>IF      11214>>IF      11220>>IF      11220>>IF
BIN_RESULT$
     11134**DCL     11191<<ASSIGN  11192>>DOWHILE 11193>>ASSIGN  11202<<ASSIGN  11202>>ASSIGN  11212<<ASSIGN
     11213>>ASSIGN  11239>>ASSIGN  11255>>ASSIGN
BIN_SPLIT
     11209**LABEL   11225--GOTO
BIN_START$
     11132**DCL     11168<<ASSIGN  11189>>IF      11190>>IF      11191>>ASSIGN  11208>>ASSIGN  11209>>ASSIGN
     11240>>DOWHILE
BIN_START1$
     11146**DCL     11209<<ASSIGN  11212>>ASSIGN
BIN_STOP$
     11133**DCL     11169<<ASSIGN  11190>>IF      11192>>DOWHILE 11208>>ASSIGN  11256>>DOWHILE
CONTINUE
     11299**LABEL   11270--GOTO
FOUND_IT
     11239**LABEL   11199--GOTO
I
     11118**DCL     11119--REDEF   11171<<DOINDEX 11172>>IF      11173>>IF      11174>>ASSIGN  11269>>ASSIGN
     11272>>ASSIGN  11273>>ASSIGN  11274>>IF
J
     11120**DCL     11121--REDEF   11244<<ASSIGN  11245>>IF      11245>>IF      11260<<ASSIGN  11261>>IF
     11261>>IF
K
     11122**DCL     11123--REDEF
L
     11124**DCL     11125--REDEF
NOT_FORWARD
     11255**LABEL   11243--GOTO
NOT_FOUND
     11272**LABEL   11189--GOTO    11200--GOTO    11204--GOTO    11233--GOTO    11259--GOTO    11267--GOTO
NOT_MINE
     11269**LABEL   11248--GOTO    11264--GOTO
PL6.E3A0      #001=VXO$SPC File=VXO$SPC.:E05TSI                                  WED 07/30/97 08:30 Page:48   
START$
     11099**DCL     11239<<ASSIGN  11240>>DOWHILE 11241>>IF      11241>>IF      11244>>ASSIGN  11249<<ASSIGN
     11249>>ASSIGN
STOP$
     11100**DCL     11255<<ASSIGN  11256>>DOWHILE 11257>>IF      11257>>IF      11260>>ASSIGN  11265<<ASSIGN
     11265>>ASSIGN
VX$NODE.ADDR_START_A
     10771**DCL     10772--REDEF
VX$NODE.ADDR_STOP_A
     10776**DCL     10777--REDEF
VX$NODE.L_PREV_SIZE
     10829**DCL     10840--REDEF
VX$NODE.L_SC_START
     10848**DCL     10853--REDEF
VX$NODE.L_SC_STOP
     10854**DCL     10859--REDEF
VX$NODE.L_SIZE
     10817**DCL     10828--REDEF
VX$NODE.L_START
     10793**DCL     10804--REDEF
VX$NODE.L_START.DD$
     10800**DCL     11168>>ASSIGN
VX$NODE.L_START.DN$
     10795**DCL     11150>>IF      11170>>ASSIGN
VX$NODE.L_STOP
     10805**DCL     10816--REDEF
VX$NODE.L_STOP.DD$
     10812**DCL     11169>>ASSIGN
VX$NODE.PROMOTE_HEAD
     10860**DCL     10863--REDEF
VX$NODE.PROMOTE_TAIL
     10864**DCL     10867--REDEF
VX$NODE.START_PAGE#_A
     10781**DCL     10782--REDEF
VX$NODE.STOP_PAGE#_A
     10786**DCL     10787--REDEF
PL6.E3A0      #001=VXO$SPC File=VXO$SPC.:E05TSI                                  WED 07/30/97 08:30 Page:49   
VX$TMPLT.A
     10898**DCL     10899--REDEF   10900--REDEF   11193>>ASSIGN  11213>>ASSIGN
VXE$ERROR
     11055**DCL-ENT 11159--CALL
VX_BIAS.A
      9576**DCL      9577--REDEF
VX_BIAS.I.DATA
      9578**DCL     11165>>ASSIGN  11166<<ASSIGN  11166>>ASSIGN  11287>>ASSIGN  11288<<ASSIGN  11288>>ASSIGN
     11301>>ASSIGN  11302<<ASSIGN  11302>>ASSIGN
VX_BIAS.I.RPROC
      9579**DCL     11273>>ASSIGN  11275<<ASSIGN  11275>>ASSIGN  11277<<ASSIGN  11277>>ASSIGN  11293>>ASSIGN
     11294<<ASSIGN  11294>>ASSIGN
VX_CBUF.CHARS_A
      9510**DCL      9511--REDEF
VX_CONST_DCB.ACTPOS
     10692**DCL     10692--REDEF
VX_CONST_DCB.ARS#
     10651**DCL     10651--REDEF
VX_CONST_DCB.ATTR#
     10681**DCL     10681--REDEF   10683--REDEF
VX_CONST_DCB.BORROW
     10703**DCL     10703--REDEF   10703--REDEF   10703--REDEF
VX_CONST_DCB.EOMCHAR#
     10658**DCL     10659--REDEF
VX_CONST_DCB.FLDID
     10695**DCL     10696--REDEF
VX_CONST_DCB.FORM$
     10687**DCL     10687--REDEF
VX_CONST_DCB.FSECT
     10710**DCL     10710--REDEF
VX_CONST_DCB.FSN#
     10677**DCL     10677--REDEF   10677--REDEF   10678--REDEF
VX_CONST_DCB.HEADER$
     10686**DCL     10687--REDEF
VX_CONST_DCB.IXTNSIZE#
     10683**DCL     10684--REDEF
PL6.E3A0      #001=VXO$SPC File=VXO$SPC.:E05TSI                                  WED 07/30/97 08:30 Page:50   
VX_CONST_DCB.LASTSTA$
     10667**DCL     10667--REDEF
VX_CONST_DCB.LVL
     10704**DCL     10704--REDEF
VX_CONST_DCB.NAME#.C
     10667**DCL     10668--REDEF
VX_CONST_DCB.NOEOF
     10699**DCL     10699--REDEF
VX_CONST_DCB.NRECS#
     10684**DCL     10684--REDEF
VX_CONST_DCB.NRECX
     10711**DCL     10711--REDEF
VX_CONST_DCB.OHDR
     10700**DCL     10700--REDEF
VX_CONST_DCB.ORG#
     10675**DCL     10676--REDEF
VX_CONST_DCB.PRECNO
     10708**DCL     10708--REDEF
VX_CONST_DCB.RCSZ
     10716**DCL     10716--REDEF
VX_CONST_DCB.RES#
     10669**DCL     10669--REDEF
VX_CONST_DCB.SETX
     10688**DCL     10688--REDEF
VX_CONST_DCB.TAB$
     10687**DCL     10687--REDEF
VX_CONST_DCB.TDA
     10707**DCL     10708--REDEF
VX_CONST_DCB.WSN#
     10669**DCL     10670--REDEF
VX_EBUF.CHARS_A
     10099**DCL     10100--REDEF
VX_EFIELD1.CHARS
     10108**DCL     10109--REDEF
VX_EFIELD2.CHARS
     10112**DCL     10113--REDEF
PL6.E3A0      #001=VXO$SPC File=VXO$SPC.:E05TSI                                  WED 07/30/97 08:30 Page:51   
VX_EFIELD3.CHARS
     10116**DCL     10117--REDEF
VX_EI_KEY_BUF.KEY
     10492**DCL     10493--REDEF
VX_ERRORS
      9553**DCL      9564--REDEF
VX_ERRORS.CONFLICT_A
      9559**DCL      9560--REDEF
VX_ERRORS.UNSAT_A
      9555**DCL      9556--REDEF
VX_HAVE_SPC
     10405**DCL     11278<<ASSIGN  11278>>ASSIGN
VX_IMAGE_DATA.CPAGE#_A
      8690**DCL      8691--REDEF
VX_IMAGE_DATA.NODE_A$
      8702**DCL      8703--REDEF
VX_IMAGE_DATA.START_A$
      8694**DCL      8695--REDEF
VX_IMAGE_DATA.STOP_A$
      8698**DCL      8699--REDEF
VX_IMAGE_DS3.CPAGE#_A
      8759**DCL      8760--REDEF
VX_IMAGE_DS3.NODE_A$
      8771**DCL      8772--REDEF
VX_IMAGE_DS3.START_A$
      8763**DCL      8764--REDEF
VX_IMAGE_DS3.STOP_A$
      8767**DCL      8768--REDEF
VX_IMAGE_DS4.CPAGE#_A
      8782**DCL      8783--REDEF
VX_IMAGE_DS4.NODE_A$
      8794**DCL      8795--REDEF
VX_IMAGE_DS4.START_A$
      8786**DCL      8787--REDEF
VX_IMAGE_DS4.STOP_A$
      8790**DCL      8791--REDEF
PL6.E3A0      #001=VXO$SPC File=VXO$SPC.:E05TSI                                  WED 07/30/97 08:30 Page:52   
VX_IMAGE_DS5.CPAGE#_A
      8805**DCL      8806--REDEF
VX_IMAGE_DS5.NODE_A$
      8817**DCL      8818--REDEF
VX_IMAGE_DS5.START_A$
      8809**DCL      8810--REDEF
VX_IMAGE_DS5.STOP_A$
      8813**DCL      8814--REDEF
VX_IMAGE_DS6.CPAGE#_A
      8828**DCL      8829--REDEF
VX_IMAGE_DS6.NODE_A$
      8840**DCL      8841--REDEF
VX_IMAGE_DS6.START_A$
      8832**DCL      8833--REDEF
VX_IMAGE_DS6.STOP_A$
      8836**DCL      8837--REDEF
VX_IMAGE_DS7.CPAGE#_A
      8851**DCL      8852--REDEF
VX_IMAGE_DS7.NODE_A$
      8863**DCL      8864--REDEF
VX_IMAGE_DS7.START_A$
      8855**DCL      8856--REDEF
VX_IMAGE_DS7.STOP_A$
      8859**DCL      8860--REDEF
VX_IMAGE_DS8.CPAGE#_A
      8874**DCL      8875--REDEF
VX_IMAGE_DS8.NODE_A$
      8886**DCL      8887--REDEF
VX_IMAGE_DS8.START_A$
      8878**DCL      8879--REDEF
VX_IMAGE_DS8.STOP_A$
      8882**DCL      8883--REDEF
VX_IMAGE_PROC.CPAGE#_A
      8713**DCL      8714--REDEF
VX_IMAGE_PROC.NODE_A$
      8725**DCL      8726--REDEF
PL6.E3A0      #001=VXO$SPC File=VXO$SPC.:E05TSI                                  WED 07/30/97 08:30 Page:53   
VX_IMAGE_PROC.START_A$
      8717**DCL      8718--REDEF
VX_IMAGE_PROC.STOP_A$
      8721**DCL      8722--REDEF
VX_IMAGE_ROS.CPAGE#_A
      8736**DCL      8737--REDEF
VX_IMAGE_ROS.NODE_A$
      8748**DCL      8749--REDEF
VX_IMAGE_ROS.START_A$
      8740**DCL      8741--REDEF
VX_IMAGE_ROS.STOP_A$
      8744**DCL      8745--REDEF
VX_M_VECTOR.F
      8541**DCL      8545--REDEF
VX_M_VECTOR_DP.F
      8576**DCL      8580--REDEF
VX_O.ACCTN_A$
      9705**DCL      9706--REDEF
VX_O.DCB_MATCH_A$
      9714**DCL      9715--REDEF
VX_O.DCB_MATCH_HIT_A
      9720**DCL      9721--REDEF
VX_O.FIDN_A$
      9699**DCL      9700--REDEF
VX_O.FID_A$
      9691**DCL      9692--REDEF
VX_O.INCLUDE_A$
      9711**DCL      9712--REDEF
VX_O.MAP_A
      9685**DCL      9686--REDEF
VX_O.NODCB_A
      9742**DCL      9743--REDEF
VX_O.NUM_A
      9630**DCL      9632--REDEF
VX_O.OPT_A
      9730**DCL      9731--REDEF
PL6.E3A0      #001=VXO$SPC File=VXO$SPC.:E05TSI                                  WED 07/30/97 08:30 Page:54   
VX_O.PRIV_A
      9646**DCL      9648--REDEF
VX_O.SIN_A
      9599**DCL      9600--REDEF
VX_O.TCB_A
      9726**DCL      9727--REDEF
VX_OD.ACCTN_A$
      9903**DCL      9904--REDEF
VX_OD.DCB_MATCH_A$
      9912**DCL      9913--REDEF
VX_OD.FIDN_A$
      9897**DCL      9898--REDEF
VX_OD.FID_A$
      9889**DCL      9890--REDEF
VX_OD.INCLUDE_A$
      9909**DCL      9910--REDEF
VX_OD.MAP_A
      9883**DCL      9884--REDEF
VX_OD.NODCB_A
      9927**DCL      9928--REDEF
VX_OD.NUM_A
      9830**DCL      9831--REDEF
VX_OD.PRIV_A
      9845**DCL      9846--REDEF
VX_OD.SIN_A
      9799**DCL      9800--REDEF
VX_OD.VECTOR_A$
      9918**DCL      9919--REDEF
VX_OL.MAX_A
      9774**DCL      9776--REDEF
VX_OL.MIN_A
      9759**DCL      9760--REDEF
VX_ON.ACCTN_A$
     10048**DCL     10050--REDEF
VX_ON.DCB_MATCH_A$
     10059**DCL     10061--REDEF
PL6.E3A0      #001=VXO$SPC File=VXO$SPC.:E05TSI                                  WED 07/30/97 08:30 Page:55   
VX_ON.FIDN_A$
     10041**DCL     10043--REDEF
VX_ON.FID_A$
     10032**DCL     10034--REDEF
VX_ON.INCLUDE_A$
     10055**DCL     10057--REDEF
VX_ON.MAP_A
     10025**DCL     10027--REDEF
VX_ON.NODCB_A$
     10075**DCL     10076--REDEF
VX_ON.NUM_A
      9970**DCL      9972--REDEF
VX_ON.PRIV_A
      9986**DCL      9988--REDEF
VX_ON.SIN_A
      9938**DCL      9940--REDEF
VX_ON.VECTOR_A$
     10066**DCL     10067--REDEF
VX_OUHEAD.VERSION
      9385**DCL      9387--REDEF
VX_OU_HEAD
      9328**DCL      9367--REDEF
VX_OU_HEAD.REC_A
      9340**DCL      9343--REDEF
VX_O_KEY_BUF.FORM0
      8589**DCL      8592--REDEF    8599--REDEF
VX_O_KEY_BUF_L.FORM0
      8612**DCL      8615--REDEF    8622--REDEF
VX_PASS2_REF.OU.L_START
     10278**DCL     10283--REDEF
VX_PASS2_REF.OU.L_STOP
     10284**DCL     10289--REDEF
VX_PASS2_REF.OU.MAX
     10272**DCL     10277--REDEF
VX_PASS2_REF.OU.SIZE
     10290**DCL     10295--REDEF
PL6.E3A0      #001=VXO$SPC File=VXO$SPC.:E05TSI                                  WED 07/30/97 08:30 Page:56   
VX_PASS2_REF.SAT.COUNT
     10317**DCL     10323--REDEF
VX_PASS2_REF.SAT.ENT_SIZE
     10324**DCL     10330--REDEF
VX_PASS2_REF.SAT.L_START
     10303**DCL     10309--REDEF
VX_PASS2_REF.SAT.L_STOP
     10310**DCL     10316--REDEF
VX_PASS2_REF.SAT.MAX
     10297**DCL     10302--REDEF
VX_PASS2_REF.UNSAT.L_START
     10365**DCL     10370--REDEF
VX_PASS2_REF.UNSAT.L_STOP
     10371**DCL     10376--REDEF
VX_PASS2_REF.UNSAT.L_WHERE
     10377**DCL     10382--REDEF
VX_PASS2_REF.UNSAT.MAX
     10359**DCL     10364--REDEF
VX_PASS2_REF.UNSAT.PAGE#
     10389**DCL     10394--REDEF
VX_PASS2_REF.UNSAT.SIZE
     10383**DCL     10388--REDEF
VX_PHRASE.PHRASE
      9791**DCL      9793--REDEF
VX_PROGRAM_BIAS.A
      9569**DCL      9570--REDEF
VX_ROOT$
      9542**DCL     11150>>IF      11168>>ASSIGN  11169>>ASSIGN  11170>>ASSIGN
VX_ROOT_DN_INC
     10200**DCL     11279<<ASSIGN  11279>>ASSIGN
VX_R_KEY_BUF.FORM0
      8638**DCL      8642--REDEF    8648--REDEF
VX_SD.A
      8266**DCL      8267--REDEF
VX_SPC.B$.MINE
     10460**DCL     10466--REDEF
PL6.E3A0      #001=VXO$SPC File=VXO$SPC.:E05TSI                                  WED 07/30/97 08:30 Page:57   
VX_SPC.B$.MINE.DELTA
     10462**DCL     11295<<ASSIGN
VX_SPC.B$.MINE_A
     10466**DCL     11269<<ASSIGN  11272<<ASSIGN
VX_SPC.B$.NAME
     10439**DCL     10445--REDEF
VX_SPC.B$.NAME_A$
     10445**DCL     11171--DOINDEX 11174>>ASSIGN
VX_SPC.B$.SKIP
     10453**DCL     10459--REDEF
VX_SPC.B$.SKIP_A
     10459**DCL     11172>>IF
VX_SPC.B$.VALUE
     10446**DCL     10452--REDEF
VX_SPC.B$.VALUE.DELTA
     10448**DCL     11293<<ASSIGN
VX_SPC.B$.VALUE_A
     10452**DCL     11273<<ASSIGN
VX_SPC.DELTA_DATA_ADR
     10481**DCL     11287<<ASSIGN  11291<<ASSIGN
VX_SPC.FAULT
     10480**DCL     11165<<ASSIGN
VX_SPC.SEG.NAME
     10408**DCL     10414--REDEF
VX_SPC.SEG.VALUE
     10415**DCL     10421--REDEF
VX_SPC.TCBSIZE
     10482**DCL     11301<<ASSIGN
VX_SPC_DATA_INSERT
     10500**DCL     11164>>IF      11286>>IF      11300>>IF
VX_TSX0_OVERLAY.H
     10183**DCL     10186--REDEF
