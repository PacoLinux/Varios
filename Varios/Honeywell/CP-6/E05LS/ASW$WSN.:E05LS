VERSION E05

PL6.E3A0      #001=ASW$WSN File=ASW$WSN.:E05TSI                                  TUE 07/29/97 10:57 Page:1    
        1        1        /*T***********************************************************/
        2        2        /*T*                                                         */
        3        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        4        4        /*T*                                                         */
        5        5        /*T***********************************************************/
        6        6        ASW$WSN:          PROC ;
        7        7        /*X*  DMC,DMR,CCC,PLM=0,IND=3,CTI=5,DCI=6,IAD=0,DTI=0,IDT=0,ENI=3,
        8        8              ECU=3,CSU=3,SDI=3                                           */
        9        9        %SET LISTSUB = '1'B ;
       10       10        %EJECT ;
PL6.E3A0      #001=ASW$WSN File=ASW$WSN.:E05TSI                                  TUE 07/29/97 10:57 Page:2    
       11       11        /*********************************************************************/
       12       12        /*   Include files   include files   include files   include files   */
       13       13        /*********************************************************************/
       14       14                                                                                      /**/
       15       15              %INCLUDE AS_PERR_C ;
       16      617              %INCLUDE AS_SSUBS_C ;
       17      709              %INCLUDE B_MACROS_C ;
       18      820              %INCLUDE CP_6 ;
       19      901              %INCLUDE CP_6_SUBS ;
       20     1441              %INCLUDE JG_GHOSTS_C;
       21     1531              %INCLUDE AS_ENTRIES_M ;
       22     2581              %INCLUDE AS_SUPER_C ;
       23     3016              %INCLUDE AS_SUBS_C ;
       24     4430              %INCLUDE AS_MAC_C ;
       25     4510              %INCLUDE KL_SUPER_C ;
       26     7412              %INCLUDE XU_MACRO_C ;
       27    10518              %INCLUDE XU_FORMAT_C ;
       28    10680              %INCLUDE AS_SUPER_R ;
       29    13696                                                                                      /**/
       30    13697        %EJECT;
PL6.E3A0      #001=ASW$WSN File=ASW$WSN.:E05TSI                                  TUE 07/29/97 10:57 Page:3    
       31    13698        /*********************************************************************/
       32    13699        /*   Entries         entries         entries         entries         */
       33    13700        /*********************************************************************/
       34    13701                                                              /**/
       35    13702    1   DCL X$PARSE ENTRY(1) ALTRET ;
       36    13703        %ASB$GETSEG ;
       37    13706        %ASB$SET_PROMPT ;
       38    13709        %ASW$READ_WSN ;
       39    13712        %ASW$WRITE_WSN ;
       40    13715        %ASW$ENQ_WSN ;
       41    13718        %ASW$DEQ_WSN ;
       42    13721        %ASH$ERROR ;
       43    13724        %ASH$WARN ;
       44    13727        %ASH$INFO ;
       45    13730        %ASH$HELP ;
       46    13733        %ASH$QUEST ;
       47    13736        %ASH$DQUEST ;
       48    13739        %ASB$READ_HLP ;
       49    13742        %ASB$WRITE_HLP ;
       50    13745        %ASB$ENQ_HLP ;
       51    13748        %ASB$DEQ_HLP ;
       52    13751        %ASB$READ_SI ;
       53    13754        %EJECT ;
PL6.E3A0      #001=ASW$WSN File=ASW$WSN.:E05TSI                                  TUE 07/29/97 10:57 Page:4    
       54    13755        /*********************************************************************/
       55    13756        /*   Auto data       auto data       auto data       auto data       */
       56    13757        /*********************************************************************/
       57    13758                                                              /**/
       58    13759    1   DCL ACBLK$                        PTR ;
       59    13760    1   DCL ACC_ARS                       UBIN WORD ;
       60    13761    1   DCL ARS                           UBIN WORD ;
       61    13762    1   DCL ARS1                          UBIN WORD ;
       62    13763    1   DCL ARS2                          UBIN WORD ;
       63    13764    1   DCL ATTR                          BIT(18) ;
       64    13765    1   DCL ATTR$                         PTR ;
       65    13766    1   DCL ATTR_SZ                       UBIN WORD ;
       66    13767    1   DCL BLK$                          PTR ;
       67    13768    1   DCL BLK_SZ                        UBIN WORD ;
       68    13769    1   DCL CREATE                        BIT(1) ;
       69    13770    1   DCL CONFIG                        BIT (1) ALIGNED;
       70    13771    1   DCL DEVWSN$                       PTR ;
       71    13772    1   DCL DEVWSN_ARS                    UBIN WORD ;
       72    13773    1   DCL FOR_FLG                       BIT(1) ;
       73    13774    1   DCL FOUND_ATTR                    BIT(1);
       74    13775    1   DCL FOUND_TYPE                    BIT(1);
       75    13776    1   DCL I                             UBIN WORD ;
       76    13777    1   DCL INCR                          UBIN WORD ;
       77    13778    1   DCL INDIRECT                      BIT(1);
       78    13779    1   DCL J                             UBIN WORD ;
       79    13780    1   DCL K                             UBIN WORD ;
       80    13781    1   DCL MORE                          BIT(1) ;
       81    13782    1   DCL MOV$                          PTR ;
       82    13783    1   DCL NDEV                          UBIN WORD ;
       83    13784    1   DCL NODE_NAME                     CHAR(8) ;
       84    13785    1   DCL NTYP                          UBIN WORD ;
       85    13786    1   DCL NUM                           CHAR(2) ;
       86    13787    1   DCL OFFSET                        UBIN WORD ;
       87    13788    1   DCL PTR$                          PTR ;
       88    13789    1   DCL ROOT$                         PTR ;
       89    13790    1   DCL 1 STAT_NAME,
       90    13791    1          2 COUNT                    UBIN BYTE UNAL,
PL6.E3A0      #001=ASW$WSN File=ASW$WSN.:E05TSI                                  TUE 07/29/97 10:57 Page:5    
       91    13792    1          2 TEXT                     CHAR(8);
       92    13793    1   DCL SUBS                          UBIN WORD ;
       93    13794    1   DCL TREC$                         PTR ;
       94    13795    1   DCL TREC_ARS                      UBIN WORD ;
       95    13796    1   DCL TWSN                          UBIN WORD ;
       96    13797    1   DCL TWSNREC$                      PTR ;
       97    13798    1   DCL TWSN#                         CHAR(4) ;
       98    13799    1   DCL TWSN_ARS                      UBIN WORD ;
       99    13800    1   DCL TYPE                          CHAR(2) ;
      100    13801    1   DCL T_NODE$                       PTR ;
      101    13802    1   DCL WH_ARS                        UBIN WORD ;
      102    13803    1   DCL WKSZ                          UBIN WORD ;
      103    13804    1   DCL WK_USED                       UBIN WORD ;
      104    13805    1   DCL WORK$                         PTR ;
      105    13806    1   DCL WSNCVT$                       PTR ;
      106    13807    1   DCL WSNDEV$                       PTR ;
      107    13808    1   DCL WSNDEV_ARS                    UBIN WORD ;
      108    13809    1   DCL WSNDEV_FLG                    BIT(1) ;
      109    13810    1   DCL WSNHDR$                       PTR ;
      110    13811    1   DCL 1 WSN_NAME,
      111    13812    1          2 COUNT                    UBIN BYTE UNAL,
      112    13813    1          2 TEXT                     CHAR(8);
      113    13814    1   DCL WTBLK$                        PTR ;
      114    13815    1   DCL WTB_SZ                        UBIN WORD ;
      115    13816        %EJECT;
PL6.E3A0      #001=ASW$WSN File=ASW$WSN.:E05TSI                                  TUE 07/29/97 10:57 Page:6    
      116    13817        /*********************************************************************/
      117    13818        /*   Static data     static data     static data     static data     */
      118    13819        /*********************************************************************/
      119    13820                                                              /**/
      120    13821    1   DCL 1 WSN_KEY ALIGNED STATIC ,
      121    13822    1          2 CNT UBIN BYTE UNAL INIT(9) ,
      122    13823    1          2 ACCT CHAR(8) UNAL INIT(' ') ,
      123    13824    1          2 ASTR CHAR(1) UNAL INIT('*') ;
      124    13825    1   DCL 1 WSN_DEV_KEY ALIGNED STATIC ,
      125    13826    1          2 CNT UBIN BYTE UNAL INIT(15) ,
      126    13827    1          2 ACCT CHAR(8) UNAL INIT(' ') ,
      127    13828    1          2 ASTR CHAR(7) UNAL INIT('DEVICES') ;
      128    13829    1   DCL 1 DEV_WSN_KEY ALIGNED STATIC ,
      129    13830    1          2 CNT UBIN BYTE UNAL INIT(12) ,
      130    13831    1          2 ACCT CHAR(8) UNAL INIT(' ') ,
      131    13832    1          2 ASTR CHAR(4) UNAL INIT('WSNS') ;
      132    13833    1   DCL 1 STAT_KEY ALIGNED STATIC ,
      133    13834    1          2 CNT UBIN BYTE UNAL INIT(15) ,
      134    13835    1          2 ACCT CHAR(8) UNAL INIT(' ') ,
      135    13836    1          2 ASTR CHAR(7) UNAL INIT('STATION') ;
      136    13837    1   DCL 1 TWSN_KEY ALIGNED STATIC ,
      137    13838    1          2 CNT UBIN BYTE UNAL INIT(8) ,
      138    13839    1          2 TWSNC CHAR(4) UNAL INIT('TWSN') ,
      139    13840    1          2 TWSN# CHAR(4) UNAL INIT('    ') ;
      140    13841    1   DCL 1 ASH_FCG CONSTANT ,
      141    13842    1          2 FCG_MID UBIN(18) INIT(5320) UNAL ;     /* 'ASH' in sixbit */
      142    13843    1   DCL 1 ERR_FCG CONSTANT ,
      143    13844    1          2 FCG_MID UBIN(18) UNAL INIT( 5335 ) ;   /* 'ASW' in sixbit */
      144    13845    1   DCL WSNHDR_OFF1 UBIN WORD STATIC INIT( 0 ) ;
      145    13846    1   DCL WTBLK_OFF1 UBIN WORD STATIC INIT( 200 ) ;
      146    13847    1   DCL ACBLK_OFF1 UBIN WORD STATIC INIT( 1000 ) ;
      147    13848    1   DCL TEMP_OFF1 UBIN WORD STATIC INIT( 1500 ) ;
      148    13849    1   DCL WSNDEV_OFF2 UBIN WORD STATIC INIT( 0 ) ;
      149    13850    1   DCL DEVWSN_OFF2 UBIN WORD STATIC INIT( 1000 ) ;
      150    13851    1   DCL TWSNREC_OFF2 UBIN WORD STATIC INIT( 2010 ) ;
      151    13852    1   DCL TREC_OFF2 UBIN WORD STATIC INIT( 2010 ) ;
      152    13853    1   DCL WSNHDR2_OFF3 UBIN WORD STATIC INIT( 0 ) ;
PL6.E3A0      #001=ASW$WSN File=ASW$WSN.:E05TSI                                  TUE 07/29/97 10:57 Page:7    
      153    13854        %EJECT ;
PL6.E3A0      #001=ASW$WSN File=ASW$WSN.:E05TSI                                  TUE 07/29/97 10:57 Page:8    
      154    13855        /*********************************************************************/
      155    13856        /*   Symrefs         symrefs         symrefs         symrefs         */
      156    13857        /*********************************************************************/
      157    13858                                                              /**/
      158    13859    1   DCL WSN_CMD UBIN WORD SYMREF ;
      159    13860    1   DCL WSN_OPTS_LIST UBIN WORD SYMREF ;
      160    13861        %EJECT;
PL6.E3A0      #001=ASW$WSN File=ASW$WSN.:E05TSI                                  TUE 07/29/97 10:57 Page:9    
      161    13862        /*********************************************************************/
      162    13863        /*   Local based     local based     local based     local based     */
      163    13864        /*********************************************************************/
      164    13865                                                              /**/
      165    13866              %KL_INDIRECT_WSN ( NAME = KL$INDIRECT_WSN ,
      166    13867                                        STCLASS="BASED( WSNHDR$ )") ;
      167    13875              %KL_WSNHDR( NAME = KL$WSNHDR ,
      168    13876                          STCLASS="BASED( WSNHDR$ )") ;
      169    13887              %KL_WSNDEV( NAME = KL$WSNDEV ,
      170    13888                          STCLASS="BASED( WSNDEV$ )") ;
      171    13893              %KL_WSNDEV( NAME = KL$DEVWSN ,
      172    13894                          STCLASS="BASED( DEVWSN$ )") ;
      173    13899              %KL_WSNHDR( NAME = KL$UWSNHDR ,
      174    13900                          STCLASS="BASED( WSNHDR$ )") ;
      175    13911              %KL_ACBLK(  NAME = KL$ACBLK ,
      176    13912                          STCLASS="BASED( ACBLK$ )") ;
      177    13917              %KL_WTBLK(  NAME = KL$WTBLK ,
      178    13918                          STCLASS="BASED( WTBLK$ )") ;
      179    13952              %KL_TWSNREC(  NAME = KL$TWSNREC ,
      180    13953                            STCLASS="BASED( TWSNREC$ )") ;
      181    13978              %PARSE$OUT( NAME = P$NODE ,
      182    13979                          STCLASS="BASED( NODE$ )",
      183    13980                          NDTYPE = TYPE ,
      184    13981                          NSUBLKS = SUBNODES ) ;
      185    14026              %PARSE$SYM( NAME = OUT$SYM ,
      186    14027                          STCLASS="BASED( BLK$ )") ;
      187    14065              %KL_DREC ( NAME = KL$TREC ,
      188    14066                        LAST=";",
      189    14067                        STCLASS="BASED( TREC$ )") ;
      190    14180              %F$DCB( DCBN = F$DCB ) ;
      191    14237    1   DCL MOV$STRT CHAR( ARS ) BASED( MOV$ ) ALIGNED ;
      192    14238        %EJECT;
PL6.E3A0      #001=ASW$WSN File=ASW$WSN.:E05TSI                                  TUE 07/29/97 10:57 Page:10   
      193    14239        /********************************************************************/
      194    14240        /*   Procedure       procedure       procedure       procedure       */
      195    14241        /*********************************************************************/
      196    14242                                                              /**/
      197    14243    1   CONFIG = '0'B;
      198    14244    1   GOTO COMMON;
      199    14245
      200    14246    1   ASW$CONFIG_WSN: ENTRY;
      201    14247    1   CONFIG = '1'B;
      202    14248
      203    14249    1   COMMON: ;
      204    14250    1   P_PCB.ROOT$ = ADDR( WSN_CMD ) ;
      205    14251    1   CALL X$PARSE( P_PCB ) ALTRET( WSN_ERR ) ;
      206    14252    2   DO WHILE( '0'B ) ;
      207    14253    2   WSN_ERR: CALL ASH$ERROR( P_PCB.ERROR ) ;
      208    14254    2      RETURN ;
      209    14255    2      END ; /* Do while */
      210    14256    1   NODE$ = P_PCB.OUT$ ;
      211    14257                                                              /* Get data segs */
      212    14258    1   IF NOT DSEG_FLG THEN
      213    14259    1      CALL ASB$GETSEG
      214    14260    2      WHENALTRETURN DO;
      215    14261    2         CALL ASH$ERROR( ERR_CODE ) ;
      216    14262              %SCREAM( ERR#=%E$GETSEGERR, LEVEL=ERROR, MID='W' );
      217    14277    2         RETURN;
      218    14278    2         END ;  /*  Whenaltreturn from ASB$GETSEG  */
      219    14279    1   INDIRECT = %NO#;
      220    14280    1   NODE_NAME = ' ';
      221    14281    1   STAT_NAME.TEXT = ' ';
      222    14282                                                              /* Create or modify? */
      223    14283    1   CREATE = ( P$NODE.CODE = 30 /* C WSN */ );
      224    14284                                                              /**/
      225    14285    1   SUBS = P$NODE.SUBNODES ;
      226    14286    1   FOR_FLG = AS_FALSE ;
      227    14287    2   DO I = 0 TO SUBS-1 ;
      228    14288    2      PTR$ = P$NODE.SUBLK$(I) ;
      229    14289    2      CODE = PTR$ -> P$NODE.CODE ;
PL6.E3A0      #001=ASW$WSN File=ASW$WSN.:E05TSI                                  TUE 07/29/97 10:57 Page:11   
      230    14290    3      DO SELECT( CODE ) ;
      231    14291                                                              /**/
      232    14292    3         SELECT( 32 /* WNAME */ ) ;
      233    14293    3         BLK$ = PTR$ ;
      234    14294    3         WSN_NAME.COUNT = OUT$SYM.COUNT ;
      235    14295    3         WSN_NAME.TEXT  = OUT$SYM.TEXT  ;
      236    14296    3         WSN_KEY.ACCT = WSN_NAME.TEXT ;
      237    14297    3         WSN_DEV_KEY.ACCT = WSN_KEY.ACCT ;
      238    14298                                                              /**/
      239    14299    3         SELECT( %W_FOR_STATION_VAL ) ;
      240    14300                                                              /**/
      241    14301    3         BLK$ = PTR$ -> P$NODE.SUBLK$(0) -> P$NODE.SUBLK$(0);
      242    14302    4         IF OUT$SYM.COUNT > 8 THEN DO;
      243    14303        /*E*  ERROR:    ASW-E$SNAMETOOBIG-C
      244    14304              MESSAGE0: STATION name too big.
      245    14305              MESSAGE1: STATION names can be at most 8 characters.
      246    14306        */
      247    14307                 %SCREAM( ERR#=E$SNAMETOOBIG, LEVEL=ERROR, MID='W' );
      248    14322    4            RETURN ;
      249    14323    4            END ; /* Then do */
      250    14324    3         STAT_NAME.COUNT = OUT$SYM.COUNT;
      251    14325    3         STAT_NAME.TEXT  = OUT$SYM.TEXT ;
      252    14326    3         STAT_KEY.ACCT = STAT_NAME.TEXT ;
      253    14327    3         FOR_FLG = AS_TRUE ;
      254    14328                                                              /**/
      255    14329    3         SELECT( %INDIRECT_WSN_VAL ) ;
      256    14330                                                              /**/
      257    14331    3         BLK$ = PTR$ -> P$NODE.SUBLK$(0) -> P$NODE.SUBLK$(0);
      258    14332    4         IF OUT$SYM.COUNT > 8 THEN DO;
      259    14333        /*E*  ERROR:    ASW-E$WSNNAMETOOBIG-C
      260    14334              MESSAGE0: WSN name too big.
      261    14335              MESSAGE1: WSN names can be at most 8 characters.
      262    14336        */
      263    14337                 %SCREAM( ERR#=E$WSNNAMETOOBIG, LEVEL=ERROR, MID='W' );
      264    14352    4            RETURN ;
      265    14353    4            END ; /* Then do */
      266    14354    3         STAT_NAME.TEXT = SUBSTR ( OUT$SYM.TEXT,0,OUT$SYM.COUNT );
PL6.E3A0      #001=ASW$WSN File=ASW$WSN.:E05TSI                                  TUE 07/29/97 10:57 Page:12   
      267    14355    3         BLK$ = PTR$ -> P$NODE.SUBLK$(1) -> P$NODE.SUBLK$(0);
      268    14356    4         IF OUT$SYM.COUNT > 8 THEN DO;
      269    14357        /*E*  ERROR:    ASW-%E$NODENAMETOOBIG-C
      270    14358              MESSAGE0: NODE name too big.
      271    14359              MESSAGE1: NODE names can be at most 8 characters.
      272    14360        */
      273    14361                 %SCREAM( ERR#=%E$NODENAMETOOBIG, LEVEL=ERROR, MID='W' );
      274    14376    4            RETURN ;
      275    14377    4            END ; /* Then do */
      276    14378    3         NODE_NAME  = SUBSTR ( OUT$SYM.TEXT,0,OUT$SYM.COUNT ) ;
      277    14379    3         INDIRECT = %YES#;
      278    14380                                                              /**/
      279    14381    3         SELECT( 16   /*  EOL_VAL  */ ) ;
      280    14382                                                              /**/
      281    14383    3         END ; /* Do case */
      282    14384    2      END ; /* Do i */
      283    14385                                                              /* Check existence */
      284    14386    1   USERS_KEY = WSN_KEY ;
      285    14387    1   CALL ASW$ENQ_WSN ALTRET( ENQ_ERR ) ;
      286    14388    2   DO WHILE( '0'B );
      287    14389    2   ENQ_ERR: ;
      288    14390    2      CALL ASH$ERROR( ERR_CODE ) ;
      289    14391    2      RETURN;
      290    14392    2      END ;
      291    14393    1   WSNHDR$ = PINCRW( DSEG1$, WSNHDR_OFF1 ) ;
      292    14394    1   ARS1 = DSEG1SIZE - 4 * WSNHDR_OFF1 ;
      293    14395    1   WH_ARS = ARS1 ;
      294    14396    1   CALL ASW$READ_WSN(  WSNHDR$, WH_ARS )
      295    14397    2   WHENRETURN DO;
      296    14398                                                              /* It exists */
      297    14399    3      IF CREATE THEN DO;
      298    14400        /*E*  ERROR:    ASW-E$CREXISTS-C
      299    14401              MESSAGE0: %%U1 %exists.
      300    14402              MESSAGE1: %%U1 %cannot exist if the mode is CREATE.
      301    14403        */
      302    14404    3         AS_FIELD1 = WSN_NAME;
      303    14405              %SCREAM( ERR#=E$CREXISTS, LEVEL=ERROR, MID='W' );
PL6.E3A0      #001=ASW$WSN File=ASW$WSN.:E05TSI                                  TUE 07/29/97 10:57 Page:13   
      304    14420    3         RETURN;
      305    14421    3         END ; /* Create */
      306    14422    2      END;  /*  Whenreturn from READ_WSN  */
      307    14423    2   WHENALTRETURN DO;
      308    14424                                                              /* It doesn't exist. */
      309    14425    3      IF NOT CREATE THEN DO;
      310    14426        /*E*  ERROR:    ASW-E$FIDNOEXIST-C
      311    14427              MESSAGE0: %%U1 %does not exist. Switching to CREATE mode.
      312    14428              MESSAGE1: For MODIFY, %%U1 %should exist.
      313    14429        */
      314    14430    3         AS_FIELD1 = WSN_NAME;
      315    14431              %SCREAM( ERR#=E$FIDNOEXIST, LEVEL=WARN, MID='W' );
      316    14446    3         CREATE = AS_TRUE ;
      317    14447    3         END ; /* Not create  */
      318    14448    2      END ; /* Whenaltreturn from READ_WSN  */
      319    14449                                                              /**/
      320    14450    1   WSNDEV$ = PINCRW( DSEG2$, WSNDEV_OFF2 );
      321    14451    1   WSN_DEV_KEY.ACCT = WSN_KEY.ACCT ;
      322    14452    2   IF CREATE THEN DO;                      /*  Create  */
      323    14453    3      IF INDIRECT THEN DO;
      324    14454    3         KL$INDIRECT_WSN.ACCSDISP = 0;
      325    14455    3         KL$INDIRECT_WSN.INDIRECT# = %YES#;
      326    14456    3         KL$INDIRECT_WSN.NODE = NODE_NAME;
      327    14457    3         KL$INDIRECT_WSN.INDIRECT_WSN = STAT_NAME.TEXT;
      328    14458    3         ACBLK$ = PINCRW( DSEG1$, ACBLK_OFF1 ) ;
      329    14459    3         WTBLK$ = ACBLK$ ;
      330    14460    3         OFFSET = ACBLK_OFF1 ;
      331    14461    3         KL$ACBLK = '0'B ;
      332    14462    3         KL$ACBLK.LIST(0) = AS_BLANK ;
      333    14463    3         KL$WSNHDR.ACCSDISP = OFFSET ;
      334    14464    3         ACC_ARS = LENGTHC( KL$ACBLK ) + LENGTHC( KL$ACBLK.LIST(0))
      335    14465    3              * ( KL$ACBLK.ACCTS-1 ) ;
      336    14466    3         WH_ARS = LENGTHC ( KL$INDIRECT_WSN );
      337    14467    3         MOV$ = PINCRC (DSEG1$, WH_ARS + WSNHDR_OFF1);
      338    14468    3         END;  /*  Indirect  */
      339    14469    3      ELSE DO;
      340    14470    3         KL$WSNHDR = '0'B ;
PL6.E3A0      #001=ASW$WSN File=ASW$WSN.:E05TSI                                  TUE 07/29/97 10:57 Page:14   
      341    14471    3         BLK_SZ = 0 ;
      342    14472    3         KL$WSNDEV.NDEV = 0 ;
      343    14473    3         WSNDEV_ARS = LENGTHC(KL$WSNDEV) - LENGTHC(KL$WSNDEV.DEV(0)) ;
      344    14474                                                              /**/
      345    14475    4         IF FOR_FLG THEN DO;                 /*  Station specified  */
      346    14476                                                              /* Get station rec. */
      347    14477    4            TREC$ = PINCRW( DSEG2$, TREC_OFF2 ) ;
      348    14478    4            ARS2 = DSEG2SIZE - 4 * TREC_OFF2 ;
      349    14479    4            TREC_ARS = ARS2 ;
      350    14480    4            USERS_KEY = STAT_KEY ;
      351    14481    4            CALL ASB$ENQ_HLP ALTRET( ENQ_ERR ) ;
      352    14482    4            CALL ASB$READ_HLP( TREC$, TREC_ARS )
      353    14483    5            WHENALTRETURN DO;
      354    14484        /*E*  ERROR:    ASW-E$TERMNOEXIST-C
      355    14485              MESSAGE0: %%U1 %does not exist.
      356    14486        */
      357    14487    5               AS_FIELD1 = STAT_NAME;
      358    14488                    %SCREAM( ERR#=E$TERMNOEXIST, LEVEL=ERROR, MID='W' );
      359    14503    5               RETURN;
      360    14504    5               END ; /*  Whenaltreturn from READ_HLP  */
      361    14505    4            TWSN# = KL$TREC.TWSN# ;
      362    14506    4            TWSNREC$ = PINCRW( DSEG2$ , TWSNREC_OFF2 ) ;
      363    14507    4            ARS2 = DSEG2SIZE - 4 * TWSNREC_OFF2 ;
      364    14508    4            TWSN_ARS = ARS2 ;
      365    14509    4            TWSN_KEY.TWSN# = TWSN# ;
      366    14510    4            USERS_KEY = TWSN_KEY ;
      367    14511    4            CALL ASB$ENQ_HLP ALTRET( ENQ_ERR ) ;
      368    14512    4            CALL ASB$READ_HLP( TWSNREC$, TWSN_ARS )
      369    14513    5            WHENALTRETURN DO;
      370    14514        /*E*  ERROR:    ASW-E$TWSNNOEXIST-C
      371    14515              MESSAGE0: %%U1 %does not exist.
      372    14516        */
      373    14517                    %SCREAM( ERR#=E$TWSNNOEXIST, LEVEL=ERROR, MID='W' );
      374    14532    5               CALL ASB$DEQ_HLP ;
      375    14533    5               CALL ASW$DEQ_WSN ;
      376    14534    5               RETURN;
      377    14535    5               END ; /*  Whenaltreturn from READ_HLP  */
PL6.E3A0      #001=ASW$WSN File=ASW$WSN.:E05TSI                                  TUE 07/29/97 10:57 Page:15   
      378    14536                                           /*  Check for station's default wsn  */
      379    14537    4            IF KL$TWSNREC.WSN = ' '
      380    14538    5            THEN DO;
      381    14539    5               KL$TWSNREC.WSN = WSN_KEY.ACCT ;
      382    14540    5               USERS_KEY = TWSN_KEY ;
      383    14541    5               CALL ASB$WRITE_HLP (TWSNREC$, TWSN_ARS) ;
      384    14542                         /*  Write 'default wsn for station sname is wsnname' */
      385    14543    5               END;
      386    14544    4            KL$WSNHDR.TNAME = STAT_KEY.ACCT ;
      387    14545    4            NDEV = KL$TWSNREC.NDEV ;
      388    14546    4            END ;                /* Then FOR_FLG   */
      389    14547                                              /**/
      390    14548    4         ELSE DO;
      391    14549    4            KL$WSNHDR.TNAME = ' ';
      392    14550    4            KL$WSNHDR.NTYP = 0;
      393    14551    4            NDEV = 0 ;
      394    14552    4            END;                 /* Else not FOR_FLG */
      395    14553                                                              /* Set up wsnhdr */
      396    14554                                                              /* Set up WTBLK$ */
      397    14555    3         WTBLK$ = PINCRW( DSEG1$, WTBLK_OFF1 ) ;
      398    14556    3         OFFSET = WTBLK_OFF1 ;
      399    14557    3         WTB_SZ = LENGTHC( KL$WTBLK ) ;
      400    14558    3         ATTR_SZ = LENGTHC( KL$WTBLK.ATTRS(0) ) ;
      401    14559    3         INCR = WTB_SZ ;
      402    14560                                                              /**/
      403    14561    4         DO I = 0 TO NDEV-1 ;
      404    14562    4            TYPE = KL$TWSNREC.DEVS.TYP(I) ;
      405    14563    4            NUM = KL$TWSNREC.DEVS.NUM(I) ;
      406    14564    4            DEV_WSN_KEY.ACCT = KL$TWSNREC.DEVS.ACCT(I) ;
      407    14565    5            IF TYPE ~= 'OC' AND TYPE ~= 'CG' THEN DO;
      408    14566    5               ATTR = KL$TWSNREC.DEVS.ATTR(I) ;
      409    14567                                                              /**/
      410    14568    5               J = 0; FOUND_TYPE = '0'B;
      411    14569    6               DO WHILE( J < KL$WSNHDR.NTYP AND NOT FOUND_TYPE );
      412    14570    6                  IF KL$WSNHDR.TYPS.TYP(J) = TYPE THEN
      413    14571    6                     FOUND_TYPE = '1'B;
      414    14572    6                  ELSE
PL6.E3A0      #001=ASW$WSN File=ASW$WSN.:E05TSI                                  TUE 07/29/97 10:57 Page:16   
      415    14573    6                     J = J + 1;
      416    14574    6                  END;
      417    14575    6               IF FOUND_TYPE THEN DO;
      418    14576    6                  ATTR$ = PINCRW( DSEG1$,KL$WSNHDR.TYPS.DISP(J)) ;
      419    14577    6                  K = 0; FOUND_ATTR = '0'B;
      420    14578    7                  DO WHILE ( K < ATTR$ -> KL$WTBLK.NATR AND NOT FOUND_ATTR );
      421    14579    7                     IF ATTR$ -> KL$WTBLK.ATTRS( K ) = ATTR THEN
      422    14580    7                        FOUND_ATTR = '1'B;
      423    14581    7                     ELSE
      424    14582    7                        K = K + 1;
      425    14583    7                     END;
      426    14584    7                  IF NOT FOUND_ATTR THEN DO;       /* No match */
      427    14585    7                     ATTR$ -> KL$WTBLK.ATTRS( K ) = ATTR ;
      428    14586    7                     ATTR$ -> KL$WTBLK.NATR = K + 1 ;
      429    14587    7                     END; /*  If not FOUND_ATTR  */
      430    14588    6                  CALL DEVWSN ;    /* Check for altret */
      431    14589    6                  END;         /* If FOUND_TYPE then do; */
      432    14590    6               ELSE DO;                         /* None this type */
      433    14591                                                              /* Build type blk */
      434    14592    6                  WSNDEV_FLG = AS_FALSE ;
      435    14593    6                  CALL DEVWSN ;      /* Check for altret  */
      436    14594    7                  IF NOT WSNDEV_FLG THEN DO;
      437    14595    7                     WTBLK$ = PINCRC( WTBLK$, INCR ) ;
      438    14596    7                     OFFSET = POFFW( WTBLK$, DSEG1$ ) ;
      439    14597    7                     KL$WTBLK = '0'B ;
      440    14598    7                     KL$WTBLK.TNAME = KL$WSNHDR.TNAME ;
      441    14599    7                     KL$WTBLK.FNAME = KL$TWSNREC.DEVS.FNAME(I) ;
      442    14600    7                     KL$WTBLK.DDEV = KL$TWSNREC.DEVS.DDEV(I) ;
      443    14601    7                     KL$WTBLK.IO = KL$TWSNREC.DEVS.IO(I) ;
      444    14602    7                     KL$WTBLK.PNAME = KL$TWSNREC.DEVS.PNAME (I);
      445    14603    7                     KL$WTBLK.ATTRS( KL$WTBLK.NATR ) = ATTR ;
      446    14604    7                     KL$WTBLK.NATR = KL$WTBLK.NATR + 1 ;
      447    14605    7                     KL$WSNHDR.TYPS.TYP(KL$WSNHDR.NTYP) = TYPE ;
      448    14606    7                     KL$WSNHDR.TYPS.DISP(KL$WSNHDR.NTYP) = OFFSET ;
      449    14607    7                     KL$WSNHDR.NTYP = KL$WSNHDR.NTYP + 1 ;
      450    14608    7                     END; /* If not WSNDEV_FLG  */
      451    14609    6                  END; /* Else do */
PL6.E3A0      #001=ASW$WSN File=ASW$WSN.:E05TSI                                  TUE 07/29/97 10:57 Page:17   
      452    14610    5               END;
      453    14611    4            END ; /* Do i */
      454    14612                                                                   /* Move wtblks */
      455    14613    3         NTYP = KL$WSNHDR.NTYP ;
      456    14614    3         WH_ARS = LENGTHC( KL$WSNHDR ) + LENGTHC( KL$WSNHDR.TYPS )
      457    14615    3              * (NTYP-1) ;
      458    14616    3         MOV$ = PINCRC( DSEG1$, WH_ARS + WSNHDR_OFF1 ) ;
      459    14617    4         DO I = 0 TO NTYP-1 ;
      460    14618    4            WTBLK$ = PINCRW( DSEG1$, KL$WSNHDR.TYPS.DISP(I) + WSNHDR_OFF1 ) ;
      461    14619    4            ARS = LENGTHC( KL$WTBLK ) ;
      462    14620    4            BLK_SZ = BLK_SZ + 4 * ( (ARS+3) / 4 ) ;
      463    14621    4            MOV$STRT = WTBLK$ -> MOV$STRT ;
      464    14622    4            MOV$ -> KL$WTBLK.ATTRS( KL$WTBLK.NATR ) = '0'B ;
      465    14623    4            KL$WSNHDR.TYPS.DISP(I) = WH_ARS/4 ;
      466    14624    4            WH_ARS = WH_ARS + 4*( ( ARS+3 )/4 ) ;
      467    14625    4            MOV$ = PINCRW( MOV$, ( ARS+3 )/4 ) ;
      468    14626    4            END ; /* Do i */
      469    14627                                                              /* Set up access blk */
      470    14628    3         ACBLK$ = PINCRW( DSEG1$, ACBLK_OFF1 ) ;
      471    14629    3         WTBLK$ = ACBLK$ ;
      472    14630    3         OFFSET = ACBLK_OFF1 ;
      473    14631    3         KL$ACBLK = '0'B ;
      474    14632    3         KL$ACBLK.LIST(0) = AS_BLANK ;
      475    14633    3         KL$WSNHDR.ACCSDISP = OFFSET ;
      476    14634    3         ACC_ARS = LENGTHC( KL$ACBLK ) + LENGTHC( KL$ACBLK.LIST(0))
      477    14635    3              * ( KL$ACBLK.ACCTS-1 ) ;
      478    14636    3         END ; /* Not indirect */
      479    14637    2      END ; /* Create */
      480    14638    1   ELSE                                        /* Modify */
      481    14639    2   DO ;
      482    14640                                                              /* Seperate access blk */
      483    14641    2      INDIRECT = KL$WSNHDR.INDIRECT#;
      484    14642    3      IF INDIRECT THEN DO;
      485    14643
      486    14644    3         ACBLK$ = PINCRW( DSEG1$, ACBLK_OFF1 ) ;
      487    14645    3         MOV$ = PINCRW( DSEG1$, KL$INDIRECT_WSN.ACCSDISP + WSNHDR_OFF1 ) ;
      488    14646    3         WTBLK$ = MOV$ ;
PL6.E3A0      #001=ASW$WSN File=ASW$WSN.:E05TSI                                  TUE 07/29/97 10:57 Page:18   
      489    14647    3         ARS = LENGTHC( KL$ACBLK ) + LENGTHC( KL$ACBLK.LIST(0) )
      490    14648    3              * (MOV$ -> KL$ACBLK.ACCTS - 1) ;
      491    14649    3         ACBLK$ -> MOV$STRT = MOV$STRT ;
      492    14650    3         ACC_ARS = ARS ;
      493    14651    3         WH_ARS = WH_ARS - ACC_ARS ;
      494    14652    3         BLK_SZ = WH_ARS - LENGTHC(KL$INDIRECT_WSN) ;
      495    14653    3         OFFSET = POFFW( ACBLK$, DSEG1$ ) ;
      496    14654    3         KL$INDIRECT_WSN.ACCSDISP = OFFSET ;
      497    14655    3         END;    /*  Indirect  */
      498    14656    3      ELSE DO;
      499    14657        /**/
      500    14658        /*        Read wsndev record from :WSN          */
      501    14659        /*        If not found give error message       */
      502    14660        /**/
      503    14661    3         USERS_KEY = WSN_DEV_KEY ;
      504    14662    3         CALL ASW$ENQ_WSN ALTRET(ENQ_ERR) ;
      505    14663    3         WSNDEV_ARS = 4 * DEVWSN_OFF2 ;
      506    14664    3         CALL ASW$READ_WSN( WSNDEV$, WSNDEV_ARS )
      507    14665    4         WHENALTRETURN DO;
      508    14666        /*E*  ERROR:     ASW-E$NOWSNDEV-C
      509    14667              MESSAGE:   WSN containing DEVICE names does not exist.
      510    14668        */
      511    14669                 %SCREAM( ERR#=E$NOWSNDEV, LEVEL=ERROR, MID='W' );
      512    14684    4            RETURN ;
      513    14685    4            END; /* Whenaltreturn from READ_WSN */
      514    14686    3         ACBLK$ = PINCRW( DSEG1$, ACBLK_OFF1 ) ;
      515    14687    3         MOV$ = PINCRW( DSEG1$, KL$WSNHDR.ACCSDISP + WSNHDR_OFF1 ) ;
      516    14688    3         WTBLK$ = MOV$ ;
      517    14689    3         ARS = LENGTHC( KL$ACBLK ) + LENGTHC( KL$ACBLK.LIST(0) )
      518    14690    3              * (MOV$ -> KL$ACBLK.ACCTS - 1) ;
      519    14691    3         ACBLK$ -> MOV$STRT = MOV$STRT ;
      520    14692    3         ACC_ARS = ARS ;
      521    14693    3         WH_ARS = WH_ARS - ACC_ARS ;
      522    14694    3         BLK_SZ = WH_ARS - (LENGTHC(KL$WSNHDR) +
      523    14695    3              LENGTHC(KL$WSNHDR.TYPS) * (KL$WSNHDR.NTYP-1) ) ;
      524    14696    3         INCR=BLK_SZ;
      525    14697    3         OFFSET = POFFW( ACBLK$, DSEG1$ ) ;
PL6.E3A0      #001=ASW$WSN File=ASW$WSN.:E05TSI                                  TUE 07/29/97 10:57 Page:19   
      526    14698    3         KL$WSNHDR.ACCSDISP = OFFSET ;
      527    14699    3         END ; /* Not indirect */
      528    14700    2      END ; /* Modify */
      529    14701                                                              /* Check for ghost */
      530    14702    1   IF CONFIG /* Set only for reconfig local, or super is ghost. */
      531    14703    2   THEN DO;
      532    14704    2      GOTO DONE_OPTIONS ;
      533    14705    2      END;
      534    14706                                                              /*                 */
      535    14707                                                              /* Do options */
      536    14708                                                              /* Save some of P_PCB */
      537    14709    1   WORK$ = P_PCB.WORK$ ;
      538    14710    1   WKSZ = P_PCB.WKSZ ;
      539    14711    1   WK_USED = P_PCB.WK_USED ;
      540    14712    1   ROOT$ = P_PCB.ROOT$ ;
      541    14713                                                              /* Bump past area used. */
      542    14714    1   P_PCB.WORK$ = PINCRW( WORK$, P_PCB.WK_USED ) ;
      543    14715    1   P_PCB.WKSZ = WKSZ - P_PCB.WK_USED ;
      544    14716                                                              /* Save NODE$ */
      545    14717    1   T_NODE$ = NODE$ ;
      546    14718                                                              /* Set ROOT$ */
      547    14719    1   P_PCB.ROOT$ = ADDR( WSN_OPTS_LIST ) ;
      548    14720                                                              /* Set up prompt */
      549    14721    1   CALL ASB$SET_PROMPT ( %PROMPT_OPT ) ;
      550    14722    1   MORE = AS_TRUE ;
      551    14723    1   REMEMBER WSN_LOOP IN REMEM_VAR ;
      552    14724                                                              /**/
      553    14725    2   DO WHILE( MORE ) ;
      554    14726    2   WSN_LOOP: ;
      555    14727    2      CALL ASB$READ_SI( IN_BUF, ARS ) ;
      556    14728    2      P_PCB.NCHARS = ARS ;
      557    14729    2      CALL X$PARSE( P_PCB ) ALTRET( PARSE_ERR ) ;
      558    14730    3      DO WHILE( '0'B ) ;
      559    14731    3   PARSE_ERR: ;
      560    14732    3         ERR_CODE = P_PCB.ERROR ;
      561    14733    3         CALL ASH$ERROR( ERR_CODE ) ;
      562    14734    3         IF '1'B
PL6.E3A0      #001=ASW$WSN File=ASW$WSN.:E05TSI                                  TUE 07/29/97 10:57 Page:20   
      563    14735    3         THEN
      564    14736    3            GOTO WSN_LOOP ;
      565    14737    3         END ; /* Do WHILE('0'B) */
      566    14738    2      NODE$ = P_PCB.OUT$ ;
      567    14739    3      DO I = 0 TO P$NODE.SUBNODES-1 ;
      568    14740    3         PTR$ = P$NODE.SUBLK$(I) ;
      569    14741    3         CODE = PTR$ -> P$NODE.CODE ;
      570    14742    4         DO SELECT( CODE ) ;
      571    14743                                                              /**/
      572    14744    4            SELECT( 16   /*  EOL_VAL  */ ) ;
      573    14745                                                                  /**/
      574    14746    4            SELECT( 302 /* HELP_VAL */ );
      575    14747    4            CALL ASH$HELP ;
      576    14748                                                                  /**/
      577    14749    4            SELECT( 301 /* QUESTION_VAL */ ) ;
      578    14750    4            CALL ASH$QUEST ;
      579    14751                                                                  /**/
      580    14752    4            SELECT( 300 /* DQUESTION_VAL */ ) ;
      581    14753    4            CALL ASH$DQUEST ;
      582    14754                                                                  /**/
      583    14755    4            SELECT( 12   /*  END_VAL  */ ,
      584    14756    4                 26   /*  BLANK_LINE_VAL */ ) ;
      585    14757    4            I = P$NODE.SUBNODES ;
      586    14758    4            MORE = AS_FALSE ;
      587    14759                                                              /**/
      588    14760    4            SELECT( 36 /* W_DEV_OPT */ ) ;
      589    14761    4            IF NOT INDIRECT THEN
      590    14762    4               CALL WSN_DEV ;
      591    14763    5            ELSE DO;
      592    14764        /*E*  ERROR:    ASW-E$NOT_INDIRECT_OPT-C
      593    14765             MESSAGE: This option is not legal for an indirect WSN.
      594    14766        */
      595    14767                    %SCREAM (ERR#=%E$NOT_INDIRECT_OPT, LEVEL=ERROR, MID='W');
      596    14782    5               GOTO WSN_LOOP;
      597    14783    5               END;   /*  Indirect  */
      598    14784                                                              /**/
      599    14785    4            SELECT( 39 /* W_DFORM_VAL */ ) ;
PL6.E3A0      #001=ASW$WSN File=ASW$WSN.:E05TSI                                  TUE 07/29/97 10:57 Page:21   
      600    14786    4            IF NOT INDIRECT THEN
      601    14787    4               CALL WSN_DFORM ;
      602    14788    5            ELSE DO;
      603    14789                    %SCREAM (ERR#=%E$NOT_INDIRECT_OPT, LEVEL=ERROR, MID='W');
      604    14804    5               GOTO WSN_LOOP;
      605    14805    5               END;   /*  Indirect  */
      606    14806                                                              /**/
      607    14807    4            SELECT( 42 /* W_ACCESS_OPT */ ) ;
      608    14808    4            CALL WSN_ACCESS ;
      609    14809                                                              /**/
      610    14810    4            SELECT( ELSE ) ;
      611    14811        /*E*  ERROR:    ASW-E$ILLEGALOPT-C
      612    14812              MESSAGE:  Illegal option.
      613    14813        */
      614    14814              %SCREAM( ERR#=E$ILLEGALOPT, LEVEL=ERROR, MID='W' );
      615    14829    4         GOTO WSN_LOOP ;
      616    14830                                                              /**/
      617    14831    4            END ; /* Do case */
      618    14832    3         END ; /* Do i */
      619    14833    2      END ; /* Do while */
      620    14834                                                              /* Restore P_PCB */
      621    14835    1   P_PCB.WORK$ = WORK$ ;
      622    14836    1   P_PCB.WKSZ = WKSZ ;
      623    14837    1   P_PCB.WK_USED = WK_USED ;
      624    14838    1   P_PCB.ROOT$ = ROOT$ ;
      625    14839                                                              /* Restore NODE$ */
      626    14840    1   NODE$ = T_NODE$ ;
      627    14841                                                              /**/
      628    14842    1   DONE_OPTIONS: ;
      629    14843                                                              /* Move access blk */
      630    14844    1   ACBLK$ = PINCRW( DSEG1$, KL$WSNHDR.ACCSDISP ) ;
      631    14845    1   ARS = ACC_ARS ;
      632    14846    1   MOV$STRT = ACBLK$ -> MOV$STRT ;
      633    14847    1   KL$WSNHDR.ACCSDISP = WH_ARS/4 ;
      634    14848    1   WH_ARS = WH_ARS + ACC_ARS ;
      635    14849                                                              /* Output :WSN record */
      636    14850    1   USERS_KEY = WSN_KEY ;
PL6.E3A0      #001=ASW$WSN File=ASW$WSN.:E05TSI                                  TUE 07/29/97 10:57 Page:22   
      637    14851    1   CALL ASW$WRITE_WSN(  WSNHDR$, WH_ARS ) ALTRET (WRITE_WSN_ERR);
      638    14852    2   IF NOT INDIRECT THEN DO;
      639    14853    2      USERS_KEY = WSN_DEV_KEY ;
      640    14854    2      WSNDEV_ARS = LENGTHC(KL$WSNDEV) + LENGTHC(KL$WSNDEV.DEV)*(KL$WSNDEV.NDEV-1);
      641    14855    2      CALL ASW$WRITE_WSN(  WSNDEV$, WSNDEV_ARS )
      642    14856    3      WHENALTRETURN DO;
      643    14857    3   WRITE_WSN_ERR:
      644    14858    3         CALL ASH$ERROR (ERR_CODE);
      645    14859    3         END;  /*  Whenaltreturn  */
      646    14860    2      END;  /*  Not indirect  */
      647    14861    1   CALL ASW$DEQ_WSN ;
      648    14862    1   CALL ASB$DEQ_HLP ;
      649    14863    1   RETURN ;
      650    14864                                                                   /**/
      651    14865        %EJECT;
PL6.E3A0      #001=ASW$WSN File=ASW$WSN.:E05TSI                                  TUE 07/29/97 10:57 Page:23   
      652    14866    1   WSN_DFORM: PROC ;
      653    14867        /*********************************************************************/
      654    14868        /*   Entries         entries         entries         entries         */
      655    14869        /*********************************************************************/
      656    14870                                                              /**/
      657    14871        %ASF$READ_FORM ;
      658    14874        %EJECT ;
PL6.E3A0      #001=ASW$WSN File=ASW$WSN.:E05TSI                                  TUE 07/29/97 10:57 Page:24   
      659    14875        /*********************************************************************/
      660    14876        /*   Auto data       auto data       auto data       auto data       */
      661    14877        /*********************************************************************/
      662    14878                                                              /**/
      663    14879    2   DCL BUF$ PTR ;
      664    14880    2   DCL BUF_ARS UBIN WORD ;
      665    14881    2   DCL TYPE CHAR(2) ;
      666    14882    2   DCL I UBIN WORD ;
      667    14883    2   DCL DFORM$ PTR ;
      668    14884    2   DCL FORM_FLG BIT(1) ;
      669    14885    2   DCL FORM_BUF CHAR(4096);
      670    14886        %EJECT;
PL6.E3A0      #001=ASW$WSN File=ASW$WSN.:E05TSI                                  TUE 07/29/97 10:57 Page:25   
      671    14887        /********************************************************************/
      672    14888        /*   Procedure       procedure       procedure       procedure       */
      673    14889        /*********************************************************************/
      674    14890                                                              /**/
      675    14891                                                              /* Pick up type */
      676    14892    2   BLK$ = PTR$ -> P$NODE.SUBLK$(0) -> P$NODE.SUBLK$(0) ;
      677    14893    2   IF OUT$SYM.COUNT > 2
      678    14894    2   THEN
      679    14895    3   DO ;
      680    14896        /*E*  ERROR:    ASW-E$BADTYPE-C
      681    14897              MESSAGE0: TYPE too long.
      682    14898              MESSAGE1: TYPE can be at most 2 characters long.
      683    14899        */
      684    14900           %SCREAM( ERR#=E$BADTYPE, LEVEL=ERROR, MID='W' );
      685    14915    3      RETURN ;
      686    14916    3      END ; /* Then do */
      687    14917    2   TYPE = OUT$SYM.TEXT ;
      688    14918                                                              /* Pick up fname */
      689    14919    2   BLK$ = PTR$ -> P$NODE.SUBLK$(1) -> P$NODE.SUBLK$(0) ;
      690    14920    2   IF OUT$SYM.COUNT > 6
      691    14921    2   THEN
      692    14922    3   DO ;
      693    14923        /*E*  ERROR:    ASW-E$BADFNAME-C
      694    14924              MESSAGE0: FORM NAME too long.
      695    14925              MESSAGE1: FORM NAME can be at most 6 characters long.
      696    14926        */
      697    14927           %SCREAM( ERR#=E$BADFNAME, LEVEL=ERROR, MID='W' );
      698    14942    3      RETURN ;
      699    14943    3      END ; /* Then do */
      700    14944    2   USERS_KEY.COUNT = 6 ;
      701    14945    2   USERS_KEY.TXTC = OUT$SYM.TEXT ;
      702    14946                                                              /* Check if form exists. */
      703    14947    2   BUF$ = ADDR( FORM_BUF ) ;
      704    14948    2   BUF_ARS = LENGTHC( FORM_BUF ) ;
      705    14949    2   CALL ASF$READ_FORM( USERS_KEY, BUF$, BUF_ARS ) ALTRET( READ_FORM_ERR ) ;
      706    14950    3   IF '0'B THEN DO;
      707    14951    3   READ_FORM_ERR: ;
PL6.E3A0      #001=ASW$WSN File=ASW$WSN.:E05TSI                                  TUE 07/29/97 10:57 Page:26   
      708    14952        /*E*  ERROR:    ASW-E$FNOEXIST-C
      709    14953              MESSAGE0: %%U1 %does not exist.
      710    14954        */
      711    14955    3      AS_FIELD1 = USERS_KEY;
      712    14956           %SCREAM( ERR#=E$FNOEXIST, LEVEL=ERROR, MID='W' );
      713    14971    3      RETURN;
      714    14972    3      END ;
      715    14973    2   FORM_FLG = AS_FALSE ;
      716    14974    3   DO I = 0 TO KL$WSNHDR.NTYP-1 ;
      717    14975    3      IF KL$WSNHDR.TYPS.TYP( I ) = TYPE
      718    14976    3      THEN
      719    14977    4      DO ;
      720    14978    4         DFORM$ = PINCRW( DSEG1$, KL$WSNHDR.TYPS.DISP(I) + WSNHDR_OFF1) ;
      721    14979    4         DFORM$ -> KL$WTBLK.FNAME = USERS_KEY.TXTC ;
      722    14980    4         FORM_FLG = AS_TRUE ;
      723    14981    4         END ;  /* Then do */
      724    14982    3      END ; /* Do i */
      725    14983    2   IF FORM_FLG = AS_FALSE
      726    14984    2   THEN                                        /* Didn't find that type */
      727    14985    3   DO ;
      728    14986        /*E*  ERROR:    ASW-E$NOTYPE-C
      729    14987              MESSAGE0: Didn't find that type.
      730    14988              MESSAGE1: Didn't find %U1.
      731    14989        */
      732    14990    3      AS_FIELD1.COUNT = 2 ;
      733    14991    3      AS_FIELD1.TEXT = TYPE ;
      734    14992           %SCREAM( ERR#=E$NOTYPE, LEVEL=ERROR, MID='W' );
      735    15007    3      END ;  /* Then do */
      736    15008    2   RETURN ;
      737    15009                                                              /**/
      738    15010    2   END   WSN_DFORM ;
      739    15011        %EJECT ;
PL6.E3A0      #001=ASW$WSN File=ASW$WSN.:E05TSI                                  TUE 07/29/97 10:57 Page:27   
      740    15012    1   WSN_ACCESS: PROC ;
      741    15013        /*********************************************************************/
      742    15014        /*   Auto data       auto data       auto data       auto data       */
      743    15015        /*********************************************************************/
      744    15016                                                              /**/
      745    15017    2   DCL PTR2$ PTR ;
      746    15018    2   DCL PTR3$ PTR ;
      747    15019    2   DCL I UBIN WORD ;
      748    15020    2   DCL J UBIN WORD ;
      749    15021    2   DCL K UBIN WORD ;
      750    15022    2   DCL SUBS UBIN WORD ;
      751    15023    2   DCL CODE2 UBIN WORD ;
      752    15024    2   DCL ADD_FLG BIT(1) ;
      753    15025        %EJECT;
PL6.E3A0      #001=ASW$WSN File=ASW$WSN.:E05TSI                                  TUE 07/29/97 10:57 Page:28   
      754    15026        /********************************************************************/
      755    15027        /*   Procedure       procedure       procedure       procedure       */
      756    15028        /*********************************************************************/
      757    15029                                                              /**/
      758    15030    2   SUBS = PTR$ -> P$NODE.SUBNODES ;
      759    15031    2   ADD_FLG = AS_TRUE ;
      760    15032                                                        /* Pick up add/remove/option list */
      761    15033    3   DO I = 0 TO SUBS-1 ;
      762    15034    3      CODE2 = PTR$ -> P$NODE.SUBLK$(I) -> P$NODE.CODE ;
      763    15035    4      DO SELECT( CODE2 ) ;
      764    15036                                                              /**/
      765    15037    4         SELECT( 44 /* ADD ACCESS */ ) ;
      766    15038    4         ADD_FLG = AS_TRUE ;
      767    15039                                                              /**/
      768    15040    4         SELECT( 45 /* REMOVE ACCESS */ ) ;
      769    15041    4         ADD_FLG = AS_FALSE ;
      770    15042                                                              /**/
      771    15043    4         SELECT( 43 /* W_ACCESS_LIST */ ) ;
      772    15044    4         PTR2$ = PTR$ -> P$NODE.SUBLK$(I) ;
      773    15045                                                              /**/
      774    15046    4         END ; /* Do case( CODE2 ) */
      775    15047    3      END ; /* Do i */
      776    15048                                                              /**/
      777    15049    2   SUBS = PTR2$ -> P$NODE.SUBNODES ;
      778    15050    3   DO I = 0 TO SUBS - 1 ;
      779    15051    3      BLK$ = PTR2$ -> P$NODE.SUBLK$(I) ;
      780    15052    3      IF OUT$SYM.COUNT > 8
      781    15053    3      THEN
      782    15054    4      DO ;
      783    15055        /*E*  ERROR:    ASW-E$ACCTTOOBIG-C
      784    15056              MESSAGE0: ACCOUNT too long.
      785    15057              MESSAGE1: ACCOUNT can be at most 8 characters long.
      786    15058        */
      787    15059              %SCREAM( ERR#=E$ACCTTOOBIG, LEVEL=ERROR, MID='W' );
      788    15074    4         RETURN ;
      789    15075    4         END ; /* Then do */
      790    15076    4      DO J = 0 TO KL$ACBLK.ACCTS-1 ;
PL6.E3A0      #001=ASW$WSN File=ASW$WSN.:E05TSI                                  TUE 07/29/97 10:57 Page:29   
      791    15077    4         IF KL$ACBLK.LIST(J) = OUT$SYM.TEXT
      792    15078    4         THEN
      793    15079    4            GOTO MATCHED ;
      794    15080    4         END ; /* Do j */
      795    15081    3      IF ADD_FLG
      796    15082    3      THEN
      797    15083    4      DO ;
      798    15084    4         KL$ACBLK.LIST( KL$ACBLK.ACCTS ) = OUT$SYM.TEXT ;
      799    15085    4         KL$ACBLK.ACCTS = KL$ACBLK.ACCTS + 1 ;
      800    15086    4         ACC_ARS = ACC_ARS + LENGTHC( KL$ACBLK.LIST(0) ) ;
      801    15087    4         END ; /* Then do */
      802    15088    3      ELSE
      803    15089    4      DO ;
      804    15090        /*E*  ERROR:    ASW-E$ACCESSNOEXIST-C
      805    15091              MESSAGE0: %%U1 %does not exist in list.
      806    15092              MESSAGE1: %%U1 %was not in ACCESS list.
      807    15093        */
      808    15094    4         AS_FIELD1.COUNT = OUT$SYM.COUNT ;
      809    15095    4         AS_FIELD1.TEXT = OUT$SYM.TEXT ;
      810    15096              %SCREAM( ERR#=E$ACCESSNOEXIST, LEVEL=ERROR, MID='W' );
      811    15111    4         END ; /* Else do */
      812    15112    4      DO WHILE( '0'B ) ;
      813    15113    4   MATCHED: ;
      814    15114    4         IF ADD_FLG = '0'B
      815    15115    4         THEN
      816    15116    5         DO ;
      817    15117    6            DO K = J+1 TO KL$ACBLK.ACCTS-1 ;
      818    15118    6               KL$ACBLK.LIST(K-1) = KL$ACBLK.LIST(K) ;
      819    15119    6               END ; /* Do i */
      820    15120    5            KL$ACBLK.ACCTS = KL$ACBLK.ACCTS - 1 ;
      821    15121    5            ACC_ARS = ACC_ARS - LENGTHC( KL$ACBLK.LIST(0) ) ;
      822    15122    5            END ; /* Then do */
      823    15123    4         END ; /* Do while */
      824    15124    3      END ; /* Do i */
      825    15125                                                              /**/
      826    15126    2   RETURN ;
      827    15127                                                              /**/
PL6.E3A0      #001=ASW$WSN File=ASW$WSN.:E05TSI                                  TUE 07/29/97 10:57 Page:30   
      828    15128    2   END   WSN_ACCESS ;
      829    15129        %EJECT ;
PL6.E3A0      #001=ASW$WSN File=ASW$WSN.:E05TSI                                  TUE 07/29/97 10:57 Page:31   
      830    15130    1   WSN_DEV: PROC ;
      831    15131        /*********************************************************************/
      832    15132        /*   Auto data       auto data       auto data       auto data       */
      833    15133        /*********************************************************************/
      834    15134                                                              /**/
      835    15135    2   DCL T_ARS UBIN WORD ;
      836    15136    2   DCL CODE2 UBIN WORD ;
      837    15137    2   DCL I UBIN WORD ;
      838    15138    2   DCL J UBIN WORD ;
      839    15139    2   DCL K UBIN WORD ;
      840    15140    2   DCL USE_TYPE SBIN WORD ;
      841    15141    2   DCL WSNHDR2$ PTR ;
      842    15142    2   DCL FOUND_TYPE BIT(1) ;
      843    15143    2   DCL WSNHDR2_OFF UBIN WORD ;
      844    15144    2   DCL DISP UBIN WORD ;
      845    15145    2   DCL MOV2$ PTR ;
      846    15146    2   DCL TEMP$ PTR ;
      847    15147    2   DCL TYPE1 CHAR(2);
      848    15148    2   DCL NUM1 CHAR(2);
      849    15149    2   DCL DONE_FLG BIT(1);
      850    15150    2   DCL TYPE_FLG BIT(1);
      851    15151    2   DCL TYPE_OPT UBIN WORD;
      852    15152    2   DCL WH2_ARS UBIN WORD ;
      853    15153    2   DCL BLK2_SZ UBIN WORD ;
      854    15154        %EJECT;
PL6.E3A0      #001=ASW$WSN File=ASW$WSN.:E05TSI                                  TUE 07/29/97 10:57 Page:32   
      855    15155        /********************************************************************/
      856    15156        /*   Procedure       procedure       procedure       procedure       */
      857    15157        /*********************************************************************/
      858    15158                                                              /**/
      859    15159    2   USE_TYPE = -1;
      860    15160    2   IF PTR$->P$NODE.SUBLK$(0)->P$NODE.CODE = 38 /* W_DEV_TYP */
      861    15161    3   THEN DO;
      862    15162    3      BLK$ = PTR$->P$NODE.SUBLK$(0)->P$NODE.SUBLK$(0);
      863    15163    3      IF OUT$SYM.COUNT = 4
      864    15164    4      THEN DO;
      865    15165    4         TYPE1 = SUBSTR(OUT$SYM.TEXT,0,2);
      866    15166    4         NUM1 = SUBSTR(OUT$SYM.TEXT,2,2);
      867    15167    4         TYPE_OPT = 0 /* TYPE_ONE */ ;
      868    15168    4         END; /* If OUT$SYM.COUNT = 4 */
      869    15169    3      ELSE
      870    15170    3         IF OUT$SYM.COUNT = 2
      871    15171    4         THEN DO;                  /* Include all of this type */
      872    15172    4            TYPE1 = OUT$SYM.TEXT ;
      873    15173    4            TYPE_OPT = 1 /* TYPE_MORE */ ;
      874    15174    4            END;
      875    15175    4         ELSE DO;
      876    15176                            /* ERROR: Must specify either type or type & num */
      877    15177                 %SCREAM( ERR#=E$BADTYPE, LEVEL=ERROR, MID='W' );
      878    15192    4            RETURN ;
      879    15193    4            END;
      880    15194    3      IF TYPE1 = 'OC' OR TYPE1 = 'CG'
      881    15195    4      THEN DO;
      882    15196              %SCREAM( ERR#=E$BADTYPE, LEVEL=ERROR, MID='W' );
      883    15211    4         RETURN ;
      884    15212    4         END; /* Then do */
      885    15213    3      BLK$ = PTR$->P$NODE.SUBLK$(0)->P$NODE.SUBLK$(1) ;
      886    15214    3      END; /* For type  */
      887    15215    3   ELSE DO;           /* Include all types in this station */
      888    15216    3      TYPE_OPT = 2 /* TYPE_ALL */ ;
      889    15217    3      BLK$ = PTR$->P$NODE.SUBLK$(0)->P$NODE.SUBLK$(0) ;
      890    15218    3      END;              /* End of else do */
      891    15219                                                              /* Get station name */
PL6.E3A0      #001=ASW$WSN File=ASW$WSN.:E05TSI                                  TUE 07/29/97 10:57 Page:33   
      892    15220    2   IF OUT$SYM.COUNT > 8
      893    15221    2   THEN
      894    15222    3   DO ;
      895    15223           %SCREAM( ERR#=E$SNAMETOOBIG, LEVEL=ERROR, MID='W' );
      896    15238    3      RETURN ;
      897    15239    3      END ; /* Then do */
      898    15240    2   STAT_NAME.COUNT = OUT$SYM.COUNT;
      899    15241    2   STAT_NAME.TEXT  = OUT$SYM.TEXT ;
      900    15242    2   STAT_KEY.ACCT = STAT_NAME.TEXT ;
      901    15243                                                        /* Get station rec. */
      902    15244    2   TREC$ = PINCRW( DSEG2$, TREC_OFF2 ) ;
      903    15245    2   ARS2 = DSEG2SIZE - 4 * TREC_OFF2 ;
      904    15246    2   TREC_ARS = ARS2 ;
      905    15247    2   USERS_KEY = STAT_KEY ;
      906    15248    2   CALL ASB$ENQ_HLP ALTRET( ENQ2_ERR ) ;
      907    15249    2   CALL ASB$READ_HLP( TREC$, TREC_ARS ) ALTRET( TREC2_ERR ) ;
      908    15250    3   IF '0'B THEN DO;
      909    15251    3   TREC2_ERR: ;
      910    15252    3      AS_FIELD1 = STAT_NAME;
      911    15253           %SCREAM( ERR#=E$TERMNOEXIST, LEVEL=ERROR, MID='W' );
      912    15268    3      RETURN;
      913    15269    3      END ;
      914    15270    2   TWSN# = KL$TREC.TWSN# ;
      915    15271    2   TWSNREC$ = PINCRW( DSEG2$ , TWSNREC_OFF2 ) ;
      916    15272    2   ARS2 = DSEG2SIZE - 4 * TWSNREC_OFF2 ;
      917    15273    2   TWSN_ARS = ARS2 ;
      918    15274    2   TWSN_KEY.TWSN# = TWSN# ;
      919    15275    2   USERS_KEY = TWSN_KEY ;
      920    15276    2   CALL ASB$ENQ_HLP ALTRET( ENQ2_ERR ) ;
      921    15277    2   CALL ASB$READ_HLP( TWSNREC$, TWSN_ARS ) ALTRET( TWSN2_ERR ) ;
      922    15278    3   IF '0'B THEN DO;
      923    15279    3   TWSN2_ERR: ;
      924    15280           %SCREAM( ERR#=E$TWSNNOEXIST, LEVEL=ERROR, MID='W' );
      925    15295    3      RETURN;
      926    15296    3      END ;
      927    15297                         /* Build wsn record from twsn record to include  */
      928    15298                         /* them in the specified wsn record.             */
PL6.E3A0      #001=ASW$WSN File=ASW$WSN.:E05TSI                                  TUE 07/29/97 10:57 Page:34   
      929    15299    2   WSNHDR2$ = PINCRW( DSEG3$, WSNHDR2_OFF3) ;
      930    15300    2   WSNHDR2$->KL$WSNHDR = '0'B ;
      931    15301    2   WSNHDR2$->KL$WSNHDR.TNAME = STAT_KEY.ACCT ;
      932    15302    2   WTBLK$ = PINCRW( DSEG3$, WTBLK_OFF1 ) ;
      933    15303    2   BLK2_SZ = 0 ;
      934    15304    2   I = 0 ;
      935    15305    2   DONE_FLG = AS_FALSE ;
      936    15306    3   DO WHILE (I < KL$TWSNREC.NDEV  AND  NOT DONE_FLG );
      937    15307    3      TYPE = KL$TWSNREC.DEVS.TYP(I) ;
      938    15308    3      NUM = KL$TWSNREC.DEVS.NUM(I) ;
      939    15309    3      DEV_WSN_KEY.ACCT = KL$TWSNREC.DEVS.ACCT(I) ;
      940    15310    3      TYPE_FLG = AS_FALSE ;
      941    15311    4      IF TYPE ~= 'OC' AND TYPE ~= 'CG' THEN DO;
      942    15312    4         ATTR = KL$TWSNREC.DEVS.ATTR(I) ;
      943    15313                                                             /**/
      944    15314    5         DO SELECT ( TYPE_OPT );
      945    15315    5            SELECT ( 0 /* TYPE_ONE */ );       /* Type and num specified */
      946    15316    5            IF TYPE = TYPE1 AND NUM = NUM1
      947    15317    6            THEN DO;
      948    15318    6               DONE_FLG = AS_TRUE ;
      949    15319    6               TYPE_FLG = AS_TRUE ;
      950    15320    6               END ;
      951    15321    5            SELECT ( 1 /* TYPE_MORE */ );     /* Type is specified */
      952    15322    5            IF TYPE = TYPE1
      953    15323    5            THEN TYPE_FLG = AS_TRUE ;
      954    15324    5            SELECT ( 2 /* TYPE_ALL */ );      /* Everything in station */
      955    15325    5            TYPE_FLG = AS_TRUE ;
      956    15326    5            END;              /*  End of case */
      957    15327    4         IF TYPE_FLG
      958    15328    5         THEN DO;
      959    15329                                            /* Do only for specified type */
      960    15330    5            J = 0; FOUND_TYPE = '0'B;
      961    15331    6            DO WHILE( J < KL$WSNHDR.NTYP  AND NOT FOUND_TYPE );
      962    15332    6               IF KL$WSNHDR.TYPS.TYP(J) = TYPE THEN
      963    15333    6                  FOUND_TYPE = '1'B;
      964    15334    6               ELSE
      965    15335    6                  J = J + 1;
PL6.E3A0      #001=ASW$WSN File=ASW$WSN.:E05TSI                                  TUE 07/29/97 10:57 Page:35   
      966    15336    6               END;
      967    15337    6            IF FOUND_TYPE THEN DO;
      968    15338    6               ATTR$ = PINCRW( DSEG1$,KL$WSNHDR.TYPS.DISP(J)) ;
      969    15339    6               K = 0; FOUND_ATTR = '0'B;
      970    15340    7               DO WHILE ( K < ATTR$ -> KL$WTBLK.NATR AND NOT FOUND_ATTR );
      971    15341    7                  IF ATTR$ -> KL$WTBLK.ATTRS( K ) = ATTR THEN
      972    15342    7                     FOUND_ATTR = '1'B;
      973    15343    7                  ELSE
      974    15344    7                     K = K + 1;
      975    15345    7                  END;
      976    15346    7               IF NOT FOUND_ATTR THEN DO;          /* No match */
      977    15347    7                  ATTR$ -> KL$WTBLK.ATTRS( K ) = ATTR ;
      978    15348    7                  ATTR$ -> KL$WTBLK.NATR = K + 1 ;
      979    15349    7                  END;    /*  If not FOUND_ATTR  */
      980    15350    6               IF ATTR$ -> KL$WTBLK.IO.OUTPUT
      981    15351    7               THEN DO;
      982    15352    7                  USE_TYPE = 6 /* OUTSYM DEVICE */;
      983    15353    7                  END;
      984    15354    6               CALL DEVWSN;
      985    15355    6               END;            /* If FOUND_TYPE then do; */
      986    15356    6            ELSE DO;
      987    15357    6               J = 0;
      988    15358    7               DO WHILE( J < WSNHDR2$->KL$WSNHDR.NTYP AND NOT FOUND_TYPE );
      989    15359    7                  IF WSNHDR2$->KL$WSNHDR.TYPS.TYP(J) = TYPE THEN
      990    15360    7                     FOUND_TYPE = '1'B;
      991    15361    7                  ELSE
      992    15362    7                     J = J + 1;
      993    15363    7                  END;
      994    15364    7               IF FOUND_TYPE THEN DO;
      995    15365    7                  ATTR$ = PINCRW( DSEG3$,WSNHDR2$->KL$WSNHDR.TYPS.DISP(J)) ;
      996    15366    7                  K = 0; FOUND_ATTR = '0'B;
      997    15367    8                  DO WHILE ( K < ATTR$ -> KL$WTBLK.NATR AND NOT FOUND_ATTR );
      998    15368    8                     IF ATTR$ -> KL$WTBLK.ATTRS( K ) = ATTR THEN
      999    15369    8                        FOUND_ATTR = '1'B;
     1000    15370    8                     ELSE
     1001    15371    8                        K = K + 1;
     1002    15372    8                     END;
PL6.E3A0      #001=ASW$WSN File=ASW$WSN.:E05TSI                                  TUE 07/29/97 10:57 Page:36   
     1003    15373    8                  IF NOT FOUND_ATTR AND ATTR ~= '0'B THEN DO;    /* No match */
     1004    15374    8                     ATTR$ -> KL$WTBLK.ATTRS( K ) = ATTR ;
     1005    15375    8                     ATTR$ -> KL$WTBLK.NATR = K + 1 ;
     1006    15376    8                     END; /*  Not FOUND_ATTR  */
     1007    15377    7                  IF ATTR$ -> KL$WTBLK.IO.OUTPUT
     1008    15378    8                  THEN DO;
     1009    15379    8                     USE_TYPE = 6 /* OUTSYM DEVICE */;
     1010    15380    8                     END;
     1011    15381    7                  CALL DEVWSN ;   /* Check for altret */
     1012    15382    7                  END;        /* If FOUND_TYPE then do; */
     1013    15383    7               ELSE DO;                        /* None this type */
     1014    15384                                                              /* Build type blk */
     1015    15385    7                  WSNDEV_FLG = AS_FALSE ;
     1016    15386    7                  CALL DEVWSN ;     /* Check for altret  */
     1017    15387    8                  IF NOT WSNDEV_FLG THEN DO;
     1018    15388    8                     WTBLK$ = PINCRC( WTBLK$, INCR ) ;
     1019    15389    8                     OFFSET = POFFW( WTBLK$, DSEG3$ ) ;
     1020    15390    8                     KL$WTBLK = '0'B ;
     1021    15391    8                     KL$WTBLK.TNAME = WSNHDR2$->KL$WSNHDR.TNAME ;
     1022    15392    8                     KL$WTBLK.FNAME = KL$TWSNREC.DEVS.FNAME(I) ;
     1023    15393    8                     KL$WTBLK.PNAME = KL$TWSNREC.DEVS.PNAME(I) ;
     1024    15394    8                     KL$WTBLK.DDEV = KL$TWSNREC.DEVS.DDEV(I) ;
     1025    15395    8                     KL$WTBLK.IO = KL$TWSNREC.DEVS.IO(I) ;
     1026    15396    8                     KL$WTBLK.ATTRS( KL$WTBLK.NATR ) = ATTR ;
     1027    15397    8                     KL$WTBLK.NATR = KL$WTBLK.NATR + 1 ;
     1028    15398    8                     WSNHDR2$->KL$WSNHDR.TYPS.TYP(WSNHDR2$->KL$WSNHDR.NTYP) = TYPE ;
     1029    15399    8                     WSNHDR2$->KL$WSNHDR.TYPS.DISP(WSNHDR2$->KL$WSNHDR.NTYP) = OFFSET ;
     1030    15400    8                     WSNHDR2$->KL$WSNHDR.NTYP = WSNHDR2$->KL$WSNHDR.NTYP + 1 ;
     1031    15401    8                     IF KL$WTBLK.IO.OUTPUT
     1032    15402    9                     THEN DO;
     1033    15403    9                        USE_TYPE = 6 /* OUTSYM DEVICE */;
     1034    15404    9                        END;
     1035    15405    8                     END; /*  If not WSNDEV_FLG */
     1036    15406    7                  END; /* Else do */
     1037    15407    6               END; /* End else do */
     1038    15408    5            END;  /* End of if TYPE_FLG */
     1039    15409    4         END;
PL6.E3A0      #001=ASW$WSN File=ASW$WSN.:E05TSI                                  TUE 07/29/97 10:57 Page:37   
     1040    15410    3      I = I + 1 ;
     1041    15411    3      END ; /* Do while */
     1042    15412                                                                   /* Move wtblks */
     1043    15413    2   NTYP = WSNHDR2$->KL$WSNHDR.NTYP ;
     1044    15414    2   WH2_ARS = LENGTHC(WSNHDR2$->KL$WSNHDR ) + LENGTHC( WSNHDR2$->KL$WSNHDR.TYPS )
     1045    15415    2        * (NTYP-1) ;
     1046    15416    2   MOV2$ = PINCRC( DSEG3$, WH2_ARS + WSNHDR_OFF1 ) ;
     1047    15417    3   DO I = 0 TO NTYP-1 ;
     1048    15418    3      WTBLK$ = PINCRW( DSEG3$, WSNHDR2$->KL$WSNHDR.TYPS.DISP(I) + WSNHDR_OFF1 ) ;
     1049    15419    3      ARS = LENGTHC( KL$WTBLK ) ;
     1050    15420    3      BLK2_SZ = BLK2_SZ + 4 * ( (ARS+3) / 4 ) ;
     1051    15421    3      MOV2$->MOV$STRT = WTBLK$ -> MOV$STRT ;
     1052    15422    3      MOV2$ -> KL$WTBLK.ATTRS( KL$WTBLK.NATR ) = '0'B ;
     1053    15423    3      WSNHDR2$->KL$WSNHDR.TYPS.DISP(I) = WH2_ARS/4 ;
     1054    15424    3      WH2_ARS = WH2_ARS + 4*( ( ARS+3 )/4 ) ;
     1055    15425    3      MOV2$ = PINCRW( MOV2$, ( ARS+3 )/4 ) ;
     1056    15426    3      END ; /* Do i */
     1057    15427    2   IF WSNHDR2$->KL$WSNHDR.NTYP = 0 AND ~FOUND_TYPE
     1058    15428    3   THEN DO;
     1059    15429    3      IF TYPE_OPT ~= 2 /* TYPE_ALL */
     1060    15430    4      THEN DO;
     1061    15431              %SCREAM( ERR#=E$NOTYPE, LEVEL=ERROR, MID='W' );
     1062    15446    4         END; /* Then do scream */
     1063    15447    3      RETURN ;
     1064    15448    3      END;  /* If 0 */
     1065    15449    2   TEMP$ = PINCRW( DSEG2$, TREC_OFF2 ) ;
     1066    15450    2   K =  WSNHDR2$ -> KL$WSNHDR.NTYP;
     1067    15451    2   MOV$ = PINCRW( MOV$, K );
     1068    15452    2   WH_ARS = WH_ARS + 4*K;
     1069    15453    3   IF KL$WSNHDR.NTYP > 0 THEN DO;
     1070    15454    3      ARS = BLK_SZ ;
     1071    15455    3      MOV2$ = PINCRW( WSNHDR$, KL$WSNHDR.TYPS.DISP(0) );
     1072    15456    3      TEMP$ -> MOV$STRT = MOV2$ -> MOV$STRT;
     1073    15457    3      MOV2$ = PINCRW( MOV2$, K );
     1074    15458    3      MOV2$ -> MOV$STRT = TEMP$ -> MOV$STRT;
     1075    15459    4      DO J = 0 TO KL$WSNHDR.NTYP-1;
     1076    15460    4         KL$WSNHDR.TYPS.DISP(J) = KL$WSNHDR.TYPS.DISP(J) + K;
PL6.E3A0      #001=ASW$WSN File=ASW$WSN.:E05TSI                                  TUE 07/29/97 10:57 Page:38   
     1077    15461    4         END;
     1078    15462    3      END;
     1079    15463    3   DO I = 0 TO WSNHDR2$->KL$WSNHDR.NTYP-1;
     1080    15464    3      WTBLK$ = PINCRW( DSEG3$, WSNHDR2$ -> KL$WSNHDR.TYPS.DISP(I)
     1081    15465    3           + WSNHDR2_OFF ) ;
     1082    15466    3      TYPE = WSNHDR2$ -> KL$WSNHDR.TYPS.TYP(I) ;
     1083    15467    3      ARS = LENGTHC( KL$WTBLK ) ;
     1084    15468    3      ARS = 4 * ( (ARS+3) / 4 ) ;
     1085    15469    3      MOV$STRT = WTBLK$ -> MOV$STRT ;
     1086    15470    3      DISP = WH_ARS/4 ;
     1087    15471    3      WH_ARS = WH_ARS + ARS ;
     1088    15472    3      BLK_SZ = BLK_SZ + ARS ;
     1089    15473    3      MOV$ = PINCRW( MOV$, (ARS+3)/4 ) ;
     1090    15474    3      KL$WSNHDR.TYPS.TYP(KL$WSNHDR.NTYP) = TYPE ;
     1091    15475    3      KL$WSNHDR.TYPS.DISP(KL$WSNHDR.NTYP) = DISP ;
     1092    15476    3      KL$WSNHDR.NTYP = KL$WSNHDR.NTYP + 1;
     1093    15477    3      END;
     1094    15478    2   IF (USE_TYPE = 6 /* OUTSYM DEVICE */)
     1095    15479    3   THEN DO;
     1096    15480        /*E* ERROR:   ASW-E$DEVNOTROUTED-C
     1097    15481             MESSAGE0: Unless you use the ROUTE keyin, automatic routing of output
     1098    15482                       to these devices will only begin after the devices reconnect
     1099    15483                       to CP-6 (logon/logoff|crash/boot/recovery).
     1100    15484        */
     1101    15485           %SCREAM (ERR#=E$DEVNOTROUTED, LEVEL=WARN, MID='W');
     1102    15500    3      END;
     1103    15501    2   RETURN ;
     1104    15502    3   DO WHILE( '0'B );
     1105    15503    3   ENQ2_ERR: ;
     1106    15504    3      CALL ASH$ERROR( ERR_CODE ) ;
     1107    15505    3      RETURN;
     1108    15506    3      END ;
     1109    15507                                                              /**/
     1110    15508    2   END   WSN_DEV ;
     1111    15509        %EJECT ;
PL6.E3A0      #001=ASW$WSN File=ASW$WSN.:E05TSI                                  TUE 07/29/97 10:57 Page:39   
     1112    15510    1   DEVWSN: PROC ;
     1113    15511        /**/
     1114    15512        /*  This proc handles adding wsn names to device and device names    */
     1115    15513        /*  to wsn record. It also checks for the duplicates and returns     */
     1116    15514        /*  WSNDEV_FLG set if found.                                         */
     1117    15515        /**/
     1118    15516        /*********************************************************************/
     1119    15517        /*   Auto data       auto data       auto data       auto data       */
     1120    15518        /*********************************************************************/
     1121    15519
     1122    15520    2   DCL X UBIN WORD ;
     1123    15521
     1124    15522        /********************************************************************/
     1125    15523        /*   Procedure       procedure       procedure       procedure       */
     1126    15524        /*********************************************************************/
     1127    15525
     1128    15526
     1129    15527    3   DO X = 0 TO KL$WSNDEV.NDEV - 1 ;
     1130    15528    3      IF KL$WSNDEV.DEV(X) = DEV_WSN_KEY.ACCT
     1131    15529    4      THEN DO;
     1132    15530        /*E*  ERROR:     ASW-E$WSNDEV_DEV-C
     1133    15531              MESSAGE: Device% %U1 already exists for WSN% %U2.
     1134    15532        */
     1135    15533    4         AS_FIELD1.COUNT = 8 ;
     1136    15534    4         AS_FIELD2.COUNT = 8 ;
     1137    15535    4         AS_FIELD1.TEXT = DEV_WSN_KEY.ACCT ;
     1138    15536    4         AS_FIELD2.TEXT = WSN_DEV_KEY.ACCT ;
     1139    15537              %SCREAM( ERR#=E$WSNDEV_DEV, LEVEL=ERROR, MID='W' );
     1140    15552    4         WSNDEV_FLG = AS_TRUE ;
     1141    15553    4         RETURN ;
     1142    15554    4         END; /* Then do */
     1143    15555    3      END; /* Do loop */
     1144    15556             /**/
     1145    15557    2   DEVWSN$ = PINCRW( DSEG2$, DEVWSN_OFF2 );
     1146    15558    2   USERS_KEY = DEV_WSN_KEY ;
     1147    15559    2   DEVWSN_ARS = 4 * DEVWSN_OFF2 ;
     1148    15560    2   CALL ASB$READ_HLP (DEVWSN$, DEVWSN_ARS ) ALTRET( DEVWSN_ERR );
PL6.E3A0      #001=ASW$WSN File=ASW$WSN.:E05TSI                                  TUE 07/29/97 10:57 Page:40   
     1149    15561    3   IF '0'B THEN DO;
     1150    15562    3   DEVWSN_ERR: ;
     1151    15563    3      DEVWSN_ARS = LENGTHC(KL$DEVWSN) - LENGTHC(KL$DEVWSN.DEV(0));
     1152    15564    3      KL$DEVWSN.NDEV = 0;
     1153    15565    3      END; /* If '0'b  */
     1154    15566             /**/
     1155    15567             /* check device record with wsn names for duplicates  */
     1156    15568             /**/
     1157    15569    3   DO X = 0 TO KL$DEVWSN.NDEV-1 ;
     1158    15570    3      IF KL$DEVWSN.DEV(X) = WSN_DEV_KEY.ACCT
     1159    15571    4      THEN DO;
     1160    15572        /*E*  ERROR:     ASW-E$DEVWSN_WSN-C
     1161    15573              MESSAGE: WSN% %U1 already exists for Device% %U2.
     1162    15574        */
     1163    15575    4         AS_FIELD1.COUNT = 8 ;
     1164    15576    4         AS_FIELD2.COUNT = 8 ;
     1165    15577    4         AS_FIELD1.TEXT = WSN_DEV_KEY.ACCT ;
     1166    15578    4         AS_FIELD2.TEXT = DEV_WSN_KEY.ACCT ;
     1167    15579              %SCREAM( ERR#=E$DEVWSN_WSN, LEVEL=ERROR, MID='W' );
     1168    15594    4         WSNDEV_FLG = AS_TRUE ;
     1169    15595    4         RETURN ;
     1170    15596    4         END; /* Then do */
     1171    15597    3      END; /* Do loop */
     1172    15598             /**/
     1173    15599             /* Add wsn and device to the lists.  */
     1174    15600             /**/
     1175    15601    3   IF KL$WSNDEV.NDEV > 254 THEN DO;
     1176    15602        /*E*    ERROR:  ASW-E$TOO_MANY_WSNS-C
     1177    15603                MESSAGE:  This device already belongs to 255 workstations.
     1178    15604                MESSAGE1:  A device can be hooked to a maximum of 255 workstations.
     1179    15605        */
     1180    15606           %SCREAM (ERR#=%E$TOO_MANY_WSNS, LEVEL=ERROR, MID='W');
     1181    15621    3      RETURN;
     1182    15622    3      END;   /*  Ndev > 254 */
     1183    15623    2   KL$WSNDEV.DEV(KL$WSNDEV.NDEV) = DEV_WSN_KEY.ACCT ;
     1184    15624    2   KL$WSNDEV.NDEV = KL$WSNDEV.NDEV + 1;
     1185    15625    2   KL$DEVWSN.DEV(KL$DEVWSN.NDEV) = WSN_DEV_KEY.ACCT ;
PL6.E3A0      #001=ASW$WSN File=ASW$WSN.:E05TSI                                  TUE 07/29/97 10:57 Page:41   
     1186    15626    2   KL$DEVWSN.NDEV = KL$DEVWSN.NDEV + 1;
     1187    15627             /**/
     1188    15628             /*  Write device with wsn names out to :HLP  */
     1189    15629             /**/
     1190    15630    2   USERS_KEY = DEV_WSN_KEY ;
     1191    15631    2   DEVWSN_ARS = LENGTHC(KL$DEVWSN) + LENGTHC(KL$DEVWSN.DEV)*(KL$DEVWSN.NDEV-1);
     1192    15632    2   CALL ASB$WRITE_HLP( DEVWSN$, DEVWSN_ARS ) ;
     1193    15633    2   RETURN ;
     1194    15634
     1195    15635    2   END  DEVWSN ;
     1196    15636        %EJECT;
PL6.E3A0      #001=ASW$WSN File=ASW$WSN.:E05TSI                                  TUE 07/29/97 10:57 Page:42   
     1197    15637        /*F*
     1198    15638             NAME: CHECK_DEV_OPTS
     1199    15639             PURPOSE:
     1200    15640                  To go through all the devices of a WSN checking that all devices of
     1201    15641                  the same type have the same profile.  If any two devices don't have
     1202    15642                  the same profile, issue an error message.
     1203    15643             DESCRIPTION:
     1204    15644                  Get the first device of a WSN.  Extract its type and profile.  Go
     1205    15645                  through the rest of the WSNs devices for that type and check that the
     1206    15646                  profiles are the same.  If a device of the same type exists as an
     1207    15647                  earlier device, skip this one - its already been tested.
     1208    15648        */
     1209    15649        /*D*
     1210    15650             NAME: CHECK_DEV_PROS
     1211    15651             CALL:
     1212    15652                  CALL CHECK_DEV_PROS;
     1213    15653             INTERFACE:
     1214    15654                  This routine is internal to the ASW$WSN module.  It has no parameters
     1215    15655                  passed in and cannot altreturn.  It assumes that WSNHDR$ is pointing
     1216    15656                  to the begining of a WSN record header.
     1217    15657             ENVIRONMENT:
     1218    15658                  Internal to SUPER.
     1219    15659             INPUT:
     1220    15660                  None.
     1221    15661             OUTPUT:
     1222    15662                  If any anomolies to the consistancy of a given device types profiles
     1223    15663                  exist, a warning message will be printed.
     1224    15664             SCRATCH:
     1225    15665                  None.
     1226    15666             DESCRIPTION:
     1227    15667                  Get the devices type (i.e. 'LP').  Check all previous device types to
     1228    15668                  assure this is the first time checking for this type.  If it is- get
     1229    15669                  the next device.  If the types are the same, check for similar
     1230    15670                  profiles.  If the profiles are the same- continue.  If they differ,
     1231    15671                  issue a warning message and go on to the next device type.
     1232    15672        */
     1233    15673
PL6.E3A0      #001=ASW$WSN File=ASW$WSN.:E05TSI                                  TUE 07/29/97 10:57 Page:43   
     1234    15674    1   CHECK_DEV_PROS: PROC;
     1235    15675    2   DCL I UBIN;
     1236    15676    2   DCL J UBIN;
     1237    15677    2   DCL PRO_NAME CHAR (18);
     1238    15678    2   DCL TYPE CHAR (2);
     1239    15679
     1240    15680    2   IF KL$WSNHDR.NTYP = 0
     1241    15681    3   THEN DO;
     1242    15682    3      RETURN; /* No devices to check */
     1243    15683    3      END;
     1244    15684
     1245    15685    3   DO I = 0 TO KL$WSNHDR.NTYP-1;
     1246    15686    3      TYPE = KL$WSNHDR.TYPS.TYP (I);
     1247    15687    3      J = 1;
     1248    15688    3      IF I ~= 0
     1249    15689    4      THEN DO;
     1250    15690    4   CHK_TYP:
     1251    15691    5         DO J = 0 TO I-1; /* Check if we already did this type */
     1252    15692    5            IF TYPE = KL$WSNHDR.TYPS.TYP (J)
     1253    15693    6            THEN DO;
     1254    15694    6               EXIT CHK_TYP;
     1255    15695    6               END;
     1256    15696    5            END;
     1257    15697    4         END;
     1258    15698    3      IF J = (I + 1) /* First of this type */
     1259    15699    4      THEN DO;
     1260    15700    4         WTBLK$ = PINCRW (WSNHDR$, KL$WSNHDR.TYPS.DISP (J));
     1261    15701    4         PRO_NAME = WTBLK$ -> KL$WTBLK.PNAME.TXT;
     1262    15702    4   CHK_PRO:
     1263    15703    5         DO J = (I+1) TO KL$WSNHDR.NTYP-1;
     1264    15704    5            WTBLK$ = PINCRW (WSNHDR$, KL$WSNHDR.TYPS.DISP (J));
     1265    15705    5            IF PRO_NAME = WTBLK$ -> KL$WTBLK.PNAME.TXT
     1266    15706    6            THEN DO;
     1267    15707        /*E* ERROR:   ASW-E$DEVPROSNOTSAME-C
     1268    15708             MESSAGE1: The profiles for the %U1 devices are not all the same.
     1269    15709             MESSAGE2: If the profiles for a given device type are not the
     1270    15710                       same, output to that device could have indeterminate
PL6.E3A0      #001=ASW$WSN File=ASW$WSN.:E05TSI                                  TUE 07/29/97 10:57 Page:44   
     1271    15711                       results.
     1272    15712        */
     1273    15713    6               AS_FIELD1.COUNT = 2;
     1274    15714    6               AS_FIELD1.TEXT = TYPE;
     1275    15715                    %SCREAM (ERR#=E$DEVPROSNOTSAME, LEVEL=WARN, MID='W');
     1276    15730    6               EXIT CHK_PRO;
     1277    15731    6               END;
     1278    15732    5            END;
     1279    15733    4         END;
     1280    15734    3      END;
     1281    15735    2   END CHECK_DEV_PROS;
     1282    15736    1   END   ASW$WSN ;

PL6.E3A0      #001=ASW$WSN File=ASW$WSN.:E05TSI                                  TUE 07/29/97 10:57 Page:45   
--  Include file information  --

   AS_SUPER_R.:E05TOU  cannot be made into a system file and is referenced.
   XU_FORMAT_C.:E05TOU  is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
   KL_SUPER_C.:E05TOU  is referenced.
   AS_MAC_C.:E05TOU  cannot be made into a system file and is referenced.
   AS_SUBS_C.:E05TOU  is referenced.
   AS_SUPER_C.:E05TOU  is referenced.
   AS_ENTRIES_M.:E05TOU  is referenced.
   JG_GHOSTS_C.:E05TOU  is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B_MACROS_C.:E05TOU  is referenced.
   AS_SSUBS_C.:E05TOU  is referenced.
   AS_PERR_C.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure ASW$WSN.

   Procedure ASW$WSN requires 2142 words for executable code.
   Procedure ASW$WSN requires 1098 words of local(AUTO) storage.

    No errors detected in file ASW$WSN.:E05TSI    .

PL6.E3A0      #001=ASW$WSN File=ASW$WSN.:E05TSI                                  TUE 07/29/97 10:57 Page:46   

 Object Unit name= ASW$WSN                                    File name= ASW$WSN.:E05TOU
 UTS= JUL 29 '97 10:57:40.88 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1   DCB   even  none     0      0  M$LO
    2   Data  even  none    27     33  ASW$WSN
    3  RoData even  UTS     26     32  ASW$WSN
    4   Proc  even  none  2142   4136  ASW$WSN
    5  RoData even  none    30     36  ASW$WSN

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     4      0   yes            yes      Std        0  ASW$WSN
     4      4                  yes      Std        0  ASW$CONFIG_WSN
PL6.E3A0      #001=ASW$WSN File=ASW$WSN.:E05TSI                                  TUE 07/29/97 10:57 Page:47   

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes          ~proc      0 XU_OUTPUT_OPTIONS
 yes     yes           Std       2 ASW$READ_WSN
 yes     yes           Std       2 ASW$WRITE_WSN
 yes     yes           Std       2 ASB$WRITE_HLP
         yes           Std       2 ASB$READ_SI
 yes     yes           Std       1 X$PARSE
         yes           Std       2 ASH$ERROR
 yes     yes           Std       0 ASB$ENQ_HLP
 yes     yes           Std       3 ASB$READ_HLP
         yes           Std       0 ASH$HELP
         yes           Std       0 ASH$QUEST
 yes     yes           Std       0 ASB$GETSEG
         yes           Std       2 ASH$WARN
 yes     yes           Std       3 ASB$SET_PROMPT
 yes     yes           Std       0 ASB$DEQ_HLP
         yes           Std       0 ASH$DQUEST
 yes     yes           Std       0 ASW$ENQ_WSN
 yes     yes           Std       0 ASW$DEQ_WSN
 yes     yes           Std       3 ASF$READ_FORM
                       nStd      0 X66_AUTO_0
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET
PL6.E3A0      #001=ASW$WSN File=ASW$WSN.:E05TSI                                  TUE 07/29/97 10:57 Page:48   

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                             r    AS_BLANK                         r    AS_TRUE
r    AS_FALSE                         r    AS_MODE                          r    AS_FE_MODE
     M$LO                                  USERS_KEY                             IN_BUF
     NODE$                                 CODE                                  ERR_CODE
     AS_FIELD1                             AS_FIELD2                             REMEM_VAR
     REM_FCMD                              ASA_BRKS_LOC                          DSEG_FLG
     DSEG1$                                DSEG1SIZE                             DSEG2$
     DSEG2SIZE                             DSEG3$                                P_PCB
     WSN_CMD                               WSN_OPTS_LIST                         B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
PL6.E3A0      #001=ASW$WSN File=ASW$WSN.:E05TSI                                  TUE 07/29/97 10:57 Page:49   


        1        1        /*T***********************************************************/
        2        2        /*T*                                                         */
        3        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        4        4        /*T*                                                         */
        5        5        /*T***********************************************************/
        6        6        ASW$WSN:          PROC ;

      6  4 000000   000000 700200 xent  ASW$WSN      TSX0  ! X66_AUTO_0
         4 000001   002112 000000                    ZERO    1098,0

        7        7        /*X*  DMC,DMR,CCC,PLM=0,IND=3,CTI=5,DCI=6,IAD=0,DTI=0,IDT=0,ENI=3,
        8        8              ECU=3,CSU=3,SDI=3                                           */
        9        9        %SET LISTSUB = '1'B ;
       10       10        %EJECT ;
PL6.E3A0      #001=ASW$WSN File=ASW$WSN.:E05TSI                                  TUE 07/29/97 10:57 Page:50   
       11       11        /*********************************************************************/
       12       12        /*   Include files   include files   include files   include files   */
       13       13        /*********************************************************************/
       14       14                                                                                      /**/
       15       15              %INCLUDE AS_PERR_C ;
       16      617              %INCLUDE AS_SSUBS_C ;
       17      709              %INCLUDE B_MACROS_C ;
       18      820              %INCLUDE CP_6 ;
       19      901              %INCLUDE CP_6_SUBS ;
       20     1441              %INCLUDE JG_GHOSTS_C;
       21     1531              %INCLUDE AS_ENTRIES_M ;
       22     2581              %INCLUDE AS_SUPER_C ;
       23     3016              %INCLUDE AS_SUBS_C ;
       24     4430              %INCLUDE AS_MAC_C ;
       25     4510              %INCLUDE KL_SUPER_C ;
       26     7412              %INCLUDE XU_MACRO_C ;
       27    10518              %INCLUDE XU_FORMAT_C ;
       28    10680              %INCLUDE AS_SUPER_R ;
       29    13696                                                                                      /**/
       30    13697        %EJECT;
PL6.E3A0      #001=ASW$WSN File=ASW$WSN.:E05TSI                                  TUE 07/29/97 10:57 Page:51   
       31    13698        /*********************************************************************/
       32    13699        /*   Entries         entries         entries         entries         */
       33    13700        /*********************************************************************/
       34    13701                                                              /**/
       35    13702    1   DCL X$PARSE ENTRY(1) ALTRET ;
       36    13703        %ASB$GETSEG ;
       37    13706        %ASB$SET_PROMPT ;
       38    13709        %ASW$READ_WSN ;
       39    13712        %ASW$WRITE_WSN ;
       40    13715        %ASW$ENQ_WSN ;
       41    13718        %ASW$DEQ_WSN ;
       42    13721        %ASH$ERROR ;
       43    13724        %ASH$WARN ;
       44    13727        %ASH$INFO ;
       45    13730        %ASH$HELP ;
       46    13733        %ASH$QUEST ;
       47    13736        %ASH$DQUEST ;
       48    13739        %ASB$READ_HLP ;
       49    13742        %ASB$WRITE_HLP ;
       50    13745        %ASB$ENQ_HLP ;
       51    13748        %ASB$DEQ_HLP ;
       52    13751        %ASB$READ_SI ;
       53    13754        %EJECT ;
PL6.E3A0      #001=ASW$WSN File=ASW$WSN.:E05TSI                                  TUE 07/29/97 10:57 Page:52   
       54    13755        /*********************************************************************/
       55    13756        /*   Auto data       auto data       auto data       auto data       */
       56    13757        /*********************************************************************/
       57    13758                                                              /**/
       58    13759    1   DCL ACBLK$                        PTR ;
       59    13760    1   DCL ACC_ARS                       UBIN WORD ;
       60    13761    1   DCL ARS                           UBIN WORD ;
       61    13762    1   DCL ARS1                          UBIN WORD ;
       62    13763    1   DCL ARS2                          UBIN WORD ;
       63    13764    1   DCL ATTR                          BIT(18) ;
       64    13765    1   DCL ATTR$                         PTR ;
       65    13766    1   DCL ATTR_SZ                       UBIN WORD ;
       66    13767    1   DCL BLK$                          PTR ;
       67    13768    1   DCL BLK_SZ                        UBIN WORD ;
       68    13769    1   DCL CREATE                        BIT(1) ;
       69    13770    1   DCL CONFIG                        BIT (1) ALIGNED;
       70    13771    1   DCL DEVWSN$                       PTR ;
       71    13772    1   DCL DEVWSN_ARS                    UBIN WORD ;
       72    13773    1   DCL FOR_FLG                       BIT(1) ;
       73    13774    1   DCL FOUND_ATTR                    BIT(1);
       74    13775    1   DCL FOUND_TYPE                    BIT(1);
       75    13776    1   DCL I                             UBIN WORD ;
       76    13777    1   DCL INCR                          UBIN WORD ;
       77    13778    1   DCL INDIRECT                      BIT(1);
       78    13779    1   DCL J                             UBIN WORD ;
       79    13780    1   DCL K                             UBIN WORD ;
       80    13781    1   DCL MORE                          BIT(1) ;
       81    13782    1   DCL MOV$                          PTR ;
       82    13783    1   DCL NDEV                          UBIN WORD ;
       83    13784    1   DCL NODE_NAME                     CHAR(8) ;
       84    13785    1   DCL NTYP                          UBIN WORD ;
       85    13786    1   DCL NUM                           CHAR(2) ;
       86    13787    1   DCL OFFSET                        UBIN WORD ;
       87    13788    1   DCL PTR$                          PTR ;
       88    13789    1   DCL ROOT$                         PTR ;
       89    13790    1   DCL 1 STAT_NAME,
       90    13791    1          2 COUNT                    UBIN BYTE UNAL,
PL6.E3A0      #001=ASW$WSN File=ASW$WSN.:E05TSI                                  TUE 07/29/97 10:57 Page:53   
       91    13792    1          2 TEXT                     CHAR(8);
       92    13793    1   DCL SUBS                          UBIN WORD ;
       93    13794    1   DCL TREC$                         PTR ;
       94    13795    1   DCL TREC_ARS                      UBIN WORD ;
       95    13796    1   DCL TWSN                          UBIN WORD ;
       96    13797    1   DCL TWSNREC$                      PTR ;
       97    13798    1   DCL TWSN#                         CHAR(4) ;
       98    13799    1   DCL TWSN_ARS                      UBIN WORD ;
       99    13800    1   DCL TYPE                          CHAR(2) ;
      100    13801    1   DCL T_NODE$                       PTR ;
      101    13802    1   DCL WH_ARS                        UBIN WORD ;
      102    13803    1   DCL WKSZ                          UBIN WORD ;
      103    13804    1   DCL WK_USED                       UBIN WORD ;
      104    13805    1   DCL WORK$                         PTR ;
      105    13806    1   DCL WSNCVT$                       PTR ;
      106    13807    1   DCL WSNDEV$                       PTR ;
      107    13808    1   DCL WSNDEV_ARS                    UBIN WORD ;
      108    13809    1   DCL WSNDEV_FLG                    BIT(1) ;
      109    13810    1   DCL WSNHDR$                       PTR ;
      110    13811    1   DCL 1 WSN_NAME,
      111    13812    1          2 COUNT                    UBIN BYTE UNAL,
      112    13813    1          2 TEXT                     CHAR(8);
      113    13814    1   DCL WTBLK$                        PTR ;
      114    13815    1   DCL WTB_SZ                        UBIN WORD ;
      115    13816        %EJECT;
PL6.E3A0      #001=ASW$WSN File=ASW$WSN.:E05TSI                                  TUE 07/29/97 10:57 Page:54   
      116    13817        /*********************************************************************/
      117    13818        /*   Static data     static data     static data     static data     */
      118    13819        /*********************************************************************/
      119    13820                                                              /**/
      120    13821    1   DCL 1 WSN_KEY ALIGNED STATIC ,
      121    13822    1          2 CNT UBIN BYTE UNAL INIT(9) ,
      122    13823    1          2 ACCT CHAR(8) UNAL INIT(' ') ,
      123    13824    1          2 ASTR CHAR(1) UNAL INIT('*') ;
      124    13825    1   DCL 1 WSN_DEV_KEY ALIGNED STATIC ,
      125    13826    1          2 CNT UBIN BYTE UNAL INIT(15) ,
      126    13827    1          2 ACCT CHAR(8) UNAL INIT(' ') ,
      127    13828    1          2 ASTR CHAR(7) UNAL INIT('DEVICES') ;
      128    13829    1   DCL 1 DEV_WSN_KEY ALIGNED STATIC ,
      129    13830    1          2 CNT UBIN BYTE UNAL INIT(12) ,
      130    13831    1          2 ACCT CHAR(8) UNAL INIT(' ') ,
      131    13832    1          2 ASTR CHAR(4) UNAL INIT('WSNS') ;
      132    13833    1   DCL 1 STAT_KEY ALIGNED STATIC ,
      133    13834    1          2 CNT UBIN BYTE UNAL INIT(15) ,
      134    13835    1          2 ACCT CHAR(8) UNAL INIT(' ') ,
      135    13836    1          2 ASTR CHAR(7) UNAL INIT('STATION') ;
      136    13837    1   DCL 1 TWSN_KEY ALIGNED STATIC ,
      137    13838    1          2 CNT UBIN BYTE UNAL INIT(8) ,
      138    13839    1          2 TWSNC CHAR(4) UNAL INIT('TWSN') ,
      139    13840    1          2 TWSN# CHAR(4) UNAL INIT('    ') ;
      140    13841    1   DCL 1 ASH_FCG CONSTANT ,
      141    13842    1          2 FCG_MID UBIN(18) INIT(5320) UNAL ;     /* 'ASH' in sixbit */
      142    13843    1   DCL 1 ERR_FCG CONSTANT ,
      143    13844    1          2 FCG_MID UBIN(18) UNAL INIT( 5335 ) ;   /* 'ASW' in sixbit */
      144    13845    1   DCL WSNHDR_OFF1 UBIN WORD STATIC INIT( 0 ) ;
      145    13846    1   DCL WTBLK_OFF1 UBIN WORD STATIC INIT( 200 ) ;
      146    13847    1   DCL ACBLK_OFF1 UBIN WORD STATIC INIT( 1000 ) ;
      147    13848    1   DCL TEMP_OFF1 UBIN WORD STATIC INIT( 1500 ) ;
      148    13849    1   DCL WSNDEV_OFF2 UBIN WORD STATIC INIT( 0 ) ;
      149    13850    1   DCL DEVWSN_OFF2 UBIN WORD STATIC INIT( 1000 ) ;
      150    13851    1   DCL TWSNREC_OFF2 UBIN WORD STATIC INIT( 2010 ) ;
      151    13852    1   DCL TREC_OFF2 UBIN WORD STATIC INIT( 2010 ) ;
      152    13853    1   DCL WSNHDR2_OFF3 UBIN WORD STATIC INIT( 0 ) ;
PL6.E3A0      #001=ASW$WSN File=ASW$WSN.:E05TSI                                  TUE 07/29/97 10:57 Page:55   
      153    13854        %EJECT ;
PL6.E3A0      #001=ASW$WSN File=ASW$WSN.:E05TSI                                  TUE 07/29/97 10:57 Page:56   
      154    13855        /*********************************************************************/
      155    13856        /*   Symrefs         symrefs         symrefs         symrefs         */
      156    13857        /*********************************************************************/
      157    13858                                                              /**/
      158    13859    1   DCL WSN_CMD UBIN WORD SYMREF ;
      159    13860    1   DCL WSN_OPTS_LIST UBIN WORD SYMREF ;
      160    13861        %EJECT;
PL6.E3A0      #001=ASW$WSN File=ASW$WSN.:E05TSI                                  TUE 07/29/97 10:57 Page:57   
      161    13862        /*********************************************************************/
      162    13863        /*   Local based     local based     local based     local based     */
      163    13864        /*********************************************************************/
      164    13865                                                              /**/
      165    13866              %KL_INDIRECT_WSN ( NAME = KL$INDIRECT_WSN ,
      166    13867                                        STCLASS="BASED( WSNHDR$ )") ;
      167    13875              %KL_WSNHDR( NAME = KL$WSNHDR ,
      168    13876                          STCLASS="BASED( WSNHDR$ )") ;
      169    13887              %KL_WSNDEV( NAME = KL$WSNDEV ,
      170    13888                          STCLASS="BASED( WSNDEV$ )") ;
      171    13893              %KL_WSNDEV( NAME = KL$DEVWSN ,
      172    13894                          STCLASS="BASED( DEVWSN$ )") ;
      173    13899              %KL_WSNHDR( NAME = KL$UWSNHDR ,
      174    13900                          STCLASS="BASED( WSNHDR$ )") ;
      175    13911              %KL_ACBLK(  NAME = KL$ACBLK ,
      176    13912                          STCLASS="BASED( ACBLK$ )") ;
      177    13917              %KL_WTBLK(  NAME = KL$WTBLK ,
      178    13918                          STCLASS="BASED( WTBLK$ )") ;
      179    13952              %KL_TWSNREC(  NAME = KL$TWSNREC ,
      180    13953                            STCLASS="BASED( TWSNREC$ )") ;
      181    13978              %PARSE$OUT( NAME = P$NODE ,
      182    13979                          STCLASS="BASED( NODE$ )",
      183    13980                          NDTYPE = TYPE ,
      184    13981                          NSUBLKS = SUBNODES ) ;
      185    14026              %PARSE$SYM( NAME = OUT$SYM ,
      186    14027                          STCLASS="BASED( BLK$ )") ;
      187    14065              %KL_DREC ( NAME = KL$TREC ,
      188    14066                        LAST=";",
      189    14067                        STCLASS="BASED( TREC$ )") ;
      190    14180              %F$DCB( DCBN = F$DCB ) ;
      191    14237    1   DCL MOV$STRT CHAR( ARS ) BASED( MOV$ ) ALIGNED ;
      192    14238        %EJECT;
PL6.E3A0      #001=ASW$WSN File=ASW$WSN.:E05TSI                                  TUE 07/29/97 10:57 Page:58   
      193    14239        /********************************************************************/
      194    14240        /*   Procedure       procedure       procedure       procedure       */
      195    14241        /*********************************************************************/
      196    14242                                                              /**/
      197    14243    1   CONFIG = '0'B;

  14243  4 000002   200016 450100                    STZ     CONFIG,,AUTO

      198    14244    1   GOTO COMMON;

  14244  4 000003   000010 710000 4                  TRA     COMMON

      199    14245
      200    14246    1   ASW$CONFIG_WSN: ENTRY;

  14246  4 000004   000000 700200 xent  ASW$CONFIG_* TSX0  ! X66_AUTO_0
         4 000005   002112 000000                    ZERO    1098,0

      201    14247    1   CONFIG = '1'B;

  14247  4 000006   400000 236003                    LDQ     -131072,DU
         4 000007   200016 756100                    STQ     CONFIG,,AUTO

  14247  4 000010                       COMMON       null
      202    14248
      203    14249    1   COMMON: ;
      204    14250    1   P_PCB.ROOT$ = ADDR( WSN_CMD ) ;

  14250  4 000010   000000 236000 5                  LDQ     0
         4 000011   000001 756000 xsym               STQ     P_PCB+1

      205    14251    1   CALL X$PARSE( P_PCB ) ALTRET( WSN_ERR ) ;

  14251  4 000012   000001 630400 5                  EPPR0   1
         4 000013   000017 631400 xsym               EPPR1   B_VECTNIL+15
         4 000014   000000 701000 xent               TSX1    X$PARSE
         4 000015   000017 702000 4                  TSX2    WSN_ERR
PL6.E3A0      #001=ASW$WSN File=ASW$WSN.:E05TSI                                  TUE 07/29/97 10:57 Page:59   

      206    14252    2   DO WHILE( '0'B ) ;

  14252  4 000016   000024 710000 4                  TRA     s:14256

      207    14253    2   WSN_ERR: CALL ASH$ERROR( P_PCB.ERROR ) ;

  14253  4 000017   000002 630400 5     WSN_ERR      EPPR0   2
         4 000020   000017 631400 xsym               EPPR1   B_VECTNIL+15
         4 000021   000000 701000 xent               TSX1    ASH$ERROR
         4 000022   000000 011000                    NOP     0

      208    14254    2      RETURN ;

  14254  4 000023   000000 702200 xent               TSX2  ! X66_ARET

      209    14255    2      END ; /* Do while */

      210    14256    1   NODE$ = P_PCB.OUT$ ;

  14256  4 000024   000003 236000 xsym               LDQ     P_PCB+3
         4 000025   000000 756000 xsym               STQ     NODE$

      211    14257                                                              /* Get data segs */
      212    14258    1   IF NOT DSEG_FLG THEN

  14258  4 000026   000000 234000 xsym               SZN     DSEG_FLG
         4 000027   000045 604000 4                  TMI     s:14279

      213    14259    1      CALL ASB$GETSEG

  14259  4 000030   000002 631400 xsym               EPPR1   B_VECTNIL+2
         4 000031   000000 701000 xent               TSX1    ASB$GETSEG
         4 000032   000034 702000 4                  TSX2    s:14261
         4 000033   000045 710000 4                  TRA     s:14279

      214    14260    2      WHENALTRETURN DO;
PL6.E3A0      #001=ASW$WSN File=ASW$WSN.:E05TSI                                  TUE 07/29/97 10:57 Page:60   

      215    14261    2         CALL ASH$ERROR( ERR_CODE ) ;

  14261  4 000034   000003 630400 5                  EPPR0   3
         4 000035   000017 631400 xsym               EPPR1   B_VECTNIL+15
         4 000036   000000 701000 xent               TSX1    ASH$ERROR
         4 000037   000000 011000                    NOP     0

      216    14262              %SCREAM( ERR#=%E$GETSEGERR, LEVEL=ERROR, MID='W' );

  14274  4 000040   000004 630400 5                  EPPR0   4
         4 000041   000017 631400 xsym               EPPR1   B_VECTNIL+15
         4 000042   000000 701000 xent               TSX1    ASH$ERROR
         4 000043   000000 011000                    NOP     0

      217    14277    2         RETURN;

  14277  4 000044   000000 702200 xent               TSX2  ! X66_ARET

      218    14278    2         END ;  /*  Whenaltreturn from ASB$GETSEG  */
      219    14279    1   INDIRECT = %NO#;

  14279  4 000045   200026 450100                    STZ     INDIRECT,,AUTO

      220    14280    1   NODE_NAME = ' ';

  14280  4 000046   000035 235000 xsym               LDA     B_VECTNIL+29
         4 000047   000035 236000 xsym               LDQ     B_VECTNIL+29
         4 000050   200034 757100                    STAQ    NODE_NAME,,AUTO

      221    14281    1   STAT_NAME.TEXT = ' ';

  14281  4 000051   040100 100400                    MLR     fill='040'O
         4 000052   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         4 000053   200043 200010                    ADSC9   STAT_NAME,,AUTO          cn=1,n=8

      222    14282                                                              /* Create or modify? */
PL6.E3A0      #001=ASW$WSN File=ASW$WSN.:E05TSI                                  TUE 07/29/97 10:57 Page:61   
      223    14283    1   CREATE = ( P$NODE.CODE = 30 /* C WSN */ );

  14283  4 000054   400000 220003                    LDX0    -131072,DU
         4 000055   000000 470400 xsym               LDP0    NODE$
         4 000056   000000 721100                    LXL1    0,,PR0
         4 000057   000036 101003                    CMPX1   30,DU
         4 000060   000062 600000 4                  TZE     s:14283+6
         4 000061   000000 220003                    LDX0    0,DU
         4 000062   000000 636010                    EAQ     0,X0
         4 000063   200015 756100                    STQ     CREATE,,AUTO

      224    14284                                                              /**/
      225    14285    1   SUBS = P$NODE.SUBNODES ;

  14285  4 000064   000001 236100                    LDQ     1,,PR0
         4 000065   000022 772000                    QRL     18
         4 000066   200046 756100                    STQ     SUBS,,AUTO

      226    14286    1   FOR_FLG = AS_FALSE ;

  14286  4 000067   000000 236000 xsym               LDQ     AS_FALSE
         4 000070   400000 376003                    ANQ     -131072,DU
         4 000071   200021 756100                    STQ     FOR_FLG,,AUTO

      227    14287    2   DO I = 0 TO SUBS-1 ;

  14287  4 000072   200024 450100                    STZ     I,,AUTO
         4 000073   000253 710000 4                  TRA     s:14384+3

      228    14288    2      PTR$ = P$NODE.SUBLK$(I) ;

  14288  4 000074   000000 470400 xsym               LDP0    NODE$
         4 000075   200024 720100                    LXL0    I,,AUTO
         4 000076   000003 236110                    LDQ     3,X0,PR0
         4 000077   200041 756100                    STQ     PTR$,,AUTO

      229    14289    2      CODE = PTR$ -> P$NODE.CODE ;
PL6.E3A0      #001=ASW$WSN File=ASW$WSN.:E05TSI                                  TUE 07/29/97 10:57 Page:62   

  14289  4 000100   200041 471500                    LDP1    PTR$,,AUTO
         4 000101   100000 236100                    LDQ     0,,PR1
         4 000102   777777 376007                    ANQ     -1,DL
         4 000103   000000 756000 xsym               STQ     CODE

      230    14290    3      DO SELECT( CODE ) ;

  14290  4 000104   000041 116007                    CMPQ    33,DL
         4 000105   000112 602000 4                  TNC     s:14290+6
         4 000106   000177 600000 4                  TZE     s:14331
         4 000107   000042 116007                    CMPQ    34,DL
         4 000110   000250 601000 4                  TNZ     s:14384
         4 000111   000143 710000 4                  TRA     s:14301
         4 000112   000040 116007                    CMPQ    32,DL
         4 000113   000116 602000 4                  TNC     s:14290+10
         4 000114   000121 600000 4                  TZE     s:14293
         4 000115   000250 710000 4                  TRA     s:14384
         4 000116   000020 116007                    CMPQ    16,DL
         4 000117   000250 601000 4                  TNZ     s:14384
         4 000120   000250 710000 4                  TRA     s:14384

      231    14291                                                              /**/
      232    14292    3         SELECT( 32 /* WNAME */ ) ;

      233    14293    3         BLK$ = PTR$ ;

  14293  4 000121   200041 236100                    LDQ     PTR$,,AUTO
         4 000122   200013 756100                    STQ     BLK$,,AUTO

      234    14294    3         WSN_NAME.COUNT = OUT$SYM.COUNT ;

  14294  4 000123   200013 473500                    LDP3    BLK$,,AUTO
         4 000124   300004 236100                    LDQ     4,,PR3
         4 000125   200070 552140                    STBQ    WSN_NAME,'40'O,AUTO

      235    14295    3         WSN_NAME.TEXT  = OUT$SYM.TEXT  ;
PL6.E3A0      #001=ASW$WSN File=ASW$WSN.:E05TSI                                  TUE 07/29/97 10:57 Page:63   

  14295  4 000126   300004 236100                    LDQ     4,,PR3
         4 000127   000033 772000                    QRL     27
         4 000130   000000 621006                    EAX1    0,QL
         4 000131   040100 100540                    MLR     fill='040'O
         4 000132   300004 200011                    ADSC9   4,,PR3                   cn=1,n=*X1
         4 000133   200070 200010                    ADSC9   WSN_NAME,,AUTO           cn=1,n=8

      236    14296    3         WSN_KEY.ACCT = WSN_NAME.TEXT ;

  14296  4 000134   040000 100500                    MLR     fill='040'O
         4 000135   200070 200010                    ADSC9   WSN_NAME,,AUTO           cn=1,n=8
         4 000136   000000 200010 2                  ADSC9   WSN_KEY                  cn=1,n=8

      237    14297    3         WSN_DEV_KEY.ACCT = WSN_KEY.ACCT ;

  14297  4 000137   040000 100400                    MLR     fill='040'O
         4 000140   000000 200010 2                  ADSC9   WSN_KEY                  cn=1,n=8
         4 000141   000003 200010 2                  ADSC9   WSN_DEV_KEY              cn=1,n=8
         4 000142   000250 710000 4                  TRA     s:14384

      238    14298                                                              /**/
      239    14299    3         SELECT( %W_FOR_STATION_VAL ) ;

      240    14300                                                              /**/
      241    14301    3         BLK$ = PTR$ -> P$NODE.SUBLK$(0) -> P$NODE.SUBLK$(0);

  14301  4 000143   100003 473500                    LDP3    3,,PR1
         4 000144   300003 236100                    LDQ     3,,PR3
         4 000145   200013 756100                    STQ     BLK$,,AUTO

      242    14302    4         IF OUT$SYM.COUNT > 8 THEN DO;

  14302  4 000146   200013 474500                    LDP4    BLK$,,AUTO
         4 000147   400004 236100                    LDQ     4,,PR4
         4 000150   777000 376003                    ANQ     -512,DU
         4 000151   011000 116003                    CMPQ    4608,DU
PL6.E3A0      #001=ASW$WSN File=ASW$WSN.:E05TSI                                  TUE 07/29/97 10:57 Page:64   
         4 000152   000160 602000 4                  TNC     s:14324

      243    14303        /*E*  ERROR:    ASW-E$SNAMETOOBIG-C
      244    14304              MESSAGE0: STATION name too big.
      245    14305              MESSAGE1: STATION names can be at most 8 characters.
      246    14306        */
      247    14307                 %SCREAM( ERR#=E$SNAMETOOBIG, LEVEL=ERROR, MID='W' );

  14319  4 000153   000005 630400 5                  EPPR0   5
         4 000154   000017 631400 xsym               EPPR1   B_VECTNIL+15
         4 000155   000000 701000 xent               TSX1    ASH$ERROR
         4 000156   000000 011000                    NOP     0

      248    14322    4            RETURN ;

  14322  4 000157   000000 702200 xent               TSX2  ! X66_ARET

      249    14323    4            END ; /* Then do */
      250    14324    3         STAT_NAME.COUNT = OUT$SYM.COUNT;

  14324  4 000160   400004 236100                    LDQ     4,,PR4
         4 000161   200043 552140                    STBQ    STAT_NAME,'40'O,AUTO

      251    14325    3         STAT_NAME.TEXT  = OUT$SYM.TEXT ;

  14325  4 000162   400004 236100                    LDQ     4,,PR4
         4 000163   000033 772000                    QRL     27
         4 000164   000000 621006                    EAX1    0,QL
         4 000165   040100 100540                    MLR     fill='040'O
         4 000166   400004 200011                    ADSC9   4,,PR4                   cn=1,n=*X1
         4 000167   200043 200010                    ADSC9   STAT_NAME,,AUTO          cn=1,n=8

      252    14326    3         STAT_KEY.ACCT = STAT_NAME.TEXT ;

  14326  4 000170   040000 100500                    MLR     fill='040'O
         4 000171   200043 200010                    ADSC9   STAT_NAME,,AUTO          cn=1,n=8
         4 000172   000013 200010 2                  ADSC9   STAT_KEY                 cn=1,n=8
PL6.E3A0      #001=ASW$WSN File=ASW$WSN.:E05TSI                                  TUE 07/29/97 10:57 Page:65   

      253    14327    3         FOR_FLG = AS_TRUE ;

  14327  4 000173   000000 236000 xsym               LDQ     AS_TRUE
         4 000174   400000 376003                    ANQ     -131072,DU
         4 000175   200021 756100                    STQ     FOR_FLG,,AUTO
         4 000176   000250 710000 4                  TRA     s:14384

      254    14328                                                              /**/
      255    14329    3         SELECT( %INDIRECT_WSN_VAL ) ;

      256    14330                                                              /**/
      257    14331    3         BLK$ = PTR$ -> P$NODE.SUBLK$(0) -> P$NODE.SUBLK$(0);

  14331  4 000177   100003 473500                    LDP3    3,,PR1
         4 000200   300003 236100                    LDQ     3,,PR3
         4 000201   200013 756100                    STQ     BLK$,,AUTO

      258    14332    4         IF OUT$SYM.COUNT > 8 THEN DO;

  14332  4 000202   200013 474500                    LDP4    BLK$,,AUTO
         4 000203   400004 236100                    LDQ     4,,PR4
         4 000204   777000 376003                    ANQ     -512,DU
         4 000205   011000 116003                    CMPQ    4608,DU
         4 000206   000214 602000 4                  TNC     s:14354

      259    14333        /*E*  ERROR:    ASW-E$WSNNAMETOOBIG-C
      260    14334              MESSAGE0: WSN name too big.
      261    14335              MESSAGE1: WSN names can be at most 8 characters.
      262    14336        */
      263    14337                 %SCREAM( ERR#=E$WSNNAMETOOBIG, LEVEL=ERROR, MID='W' );

  14349  4 000207   000006 630400 5                  EPPR0   6
         4 000210   000017 631400 xsym               EPPR1   B_VECTNIL+15
         4 000211   000000 701000 xent               TSX1    ASH$ERROR
         4 000212   000000 011000                    NOP     0

PL6.E3A0      #001=ASW$WSN File=ASW$WSN.:E05TSI                                  TUE 07/29/97 10:57 Page:66   
      264    14352    4            RETURN ;

  14352  4 000213   000000 702200 xent               TSX2  ! X66_ARET

      265    14353    4            END ; /* Then do */
      266    14354    3         STAT_NAME.TEXT = SUBSTR ( OUT$SYM.TEXT,0,OUT$SYM.COUNT );

  14354  4 000214   400004 236100                    LDQ     4,,PR4
         4 000215   000033 772000                    QRL     27
         4 000216   000000 621006                    EAX1    0,QL
         4 000217   040100 100540                    MLR     fill='040'O
         4 000220   400004 200011                    ADSC9   4,,PR4                   cn=1,n=*X1
         4 000221   200043 200010                    ADSC9   STAT_NAME,,AUTO          cn=1,n=8

      267    14355    3         BLK$ = PTR$ -> P$NODE.SUBLK$(1) -> P$NODE.SUBLK$(0);

  14355  4 000222   100004 475500                    LDP5    4,,PR1
         4 000223   500003 236100                    LDQ     3,,PR5
         4 000224   200013 756100                    STQ     BLK$,,AUTO

      268    14356    4         IF OUT$SYM.COUNT > 8 THEN DO;

  14356  4 000225   200013 474500                    LDP4    BLK$,,AUTO
         4 000226   400004 236100                    LDQ     4,,PR4
         4 000227   777000 376003                    ANQ     -512,DU
         4 000230   011000 116003                    CMPQ    4608,DU
         4 000231   000237 602000 4                  TNC     s:14378

      269    14357        /*E*  ERROR:    ASW-%E$NODENAMETOOBIG-C
      270    14358              MESSAGE0: NODE name too big.
      271    14359              MESSAGE1: NODE names can be at most 8 characters.
      272    14360        */
      273    14361                 %SCREAM( ERR#=%E$NODENAMETOOBIG, LEVEL=ERROR, MID='W' );

  14373  4 000232   000007 630400 5                  EPPR0   7
         4 000233   000017 631400 xsym               EPPR1   B_VECTNIL+15
         4 000234   000000 701000 xent               TSX1    ASH$ERROR
PL6.E3A0      #001=ASW$WSN File=ASW$WSN.:E05TSI                                  TUE 07/29/97 10:57 Page:67   
         4 000235   000000 011000                    NOP     0

      274    14376    4            RETURN ;

  14376  4 000236   000000 702200 xent               TSX2  ! X66_ARET

      275    14377    4            END ; /* Then do */
      276    14378    3         NODE_NAME  = SUBSTR ( OUT$SYM.TEXT,0,OUT$SYM.COUNT ) ;

  14378  4 000237   400004 236100                    LDQ     4,,PR4
         4 000240   000033 772000                    QRL     27
         4 000241   000000 621006                    EAX1    0,QL
         4 000242   040100 100540                    MLR     fill='040'O
         4 000243   400004 200011                    ADSC9   4,,PR4                   cn=1,n=*X1
         4 000244   200034 000010                    ADSC9   NODE_NAME,,AUTO          cn=0,n=8

      277    14379    3         INDIRECT = %YES#;

  14379  4 000245   400000 236003                    LDQ     -131072,DU
         4 000246   200026 756100                    STQ     INDIRECT,,AUTO
         4 000247   000250 710000 4                  TRA     s:14384

      278    14380                                                              /**/
      279    14381    3         SELECT( 16   /*  EOL_VAL  */ ) ;

      280    14382                                                              /**/
      281    14383    3         END ; /* Do case */

      282    14384    2      END ; /* Do i */

  14384  4 000250   200024 235100                    LDA     I,,AUTO
         4 000251   000001 035007                    ADLA    1,DL
         4 000252   200024 755100                    STA     I,,AUTO
         4 000253   200024 236100                    LDQ     I,,AUTO
         4 000254   200046 116100                    CMPQ    SUBS,,AUTO
         4 000255   000074 602000 4                  TNC     s:14288

PL6.E3A0      #001=ASW$WSN File=ASW$WSN.:E05TSI                                  TUE 07/29/97 10:57 Page:68   
      283    14385                                                              /* Check existence */
      284    14386    1   USERS_KEY = WSN_KEY ;

  14386  4 000256   000000 100400                    MLR     fill='000'O
         4 000257   000000 000012 2                  ADSC9   WSN_KEY                  cn=0,n=10
         4 000260   000000 000052 xsym               ADSC9   USERS_KEY                cn=0,n=42

      285    14387    1   CALL ASW$ENQ_WSN ALTRET( ENQ_ERR ) ;

  14387  4 000261   000002 631400 xsym               EPPR1   B_VECTNIL+2
         4 000262   000000 701000 xent               TSX1    ASW$ENQ_WSN
         4 000263   000265 702000 4                  TSX2    ENQ_ERR

      286    14388    2   DO WHILE( '0'B );

  14388  4 000264   000272 710000 4                  TRA     s:14393

  14387  4 000265                       ENQ_ERR      null
      287    14389    2   ENQ_ERR: ;
      288    14390    2      CALL ASH$ERROR( ERR_CODE ) ;

  14390  4 000265   000003 630400 5                  EPPR0   3
         4 000266   000017 631400 xsym               EPPR1   B_VECTNIL+15
         4 000267   000000 701000 xent               TSX1    ASH$ERROR
         4 000270   000000 011000                    NOP     0

      289    14391    2      RETURN;

  14391  4 000271   000000 702200 xent               TSX2  ! X66_ARET

      290    14392    2      END ;

      291    14393    1   WSNHDR$ = PINCRW( DSEG1$, WSNHDR_OFF1 ) ;

  14393  4 000272   000022 236000 2                  LDQ     WSNHDR_OFF1
         4 000273   000022 736000                    QLS     18
         4 000274   000000 036000 xsym               ADLQ    DSEG1$
PL6.E3A0      #001=ASW$WSN File=ASW$WSN.:E05TSI                                  TUE 07/29/97 10:57 Page:69   
         4 000275   200067 756100                    STQ     WSNHDR$,,AUTO

      292    14394    1   ARS1 = DSEG1SIZE - 4 * WSNHDR_OFF1 ;

  14394  4 000276   000000 236003                    LDQ     0,DU
         4 000277   000022 136000 2                  SBLQ    WSNHDR_OFF1
         4 000300   000002 736000                    QLS     2
         4 000301   000000 036000 xsym               ADLQ    DSEG1SIZE
         4 000302   200006 756100                    STQ     ARS1,,AUTO

      293    14395    1   WH_ARS = ARS1 ;

  14395  4 000303   200057 756100                    STQ     WH_ARS,,AUTO

      294    14396    1   CALL ASW$READ_WSN(  WSNHDR$, WH_ARS )

  14396  4 000304   200057 630500                    EPPR0   WH_ARS,,AUTO
         4 000305   202107 450500                    STP0    X+1012,,AUTO
         4 000306   200067 631500                    EPPR1   WSNHDR$,,AUTO
         4 000307   202106 451500                    STP1    X+1011,,AUTO
         4 000310   202106 630500                    EPPR0   X+1011,,AUTO
         4 000311   000020 631400 xsym               EPPR1   B_VECTNIL+16
         4 000312   000000 701000 xent               TSX1    ASW$READ_WSN
         4 000313   000327 702000 4                  TSX2    s:14425

      295    14397    2   WHENRETURN DO;

      296    14398                                                              /* It exists */
      297    14399    3      IF CREATE THEN DO;

  14399  4 000314   200015 234100                    SZN     CREATE,,AUTO
         4 000315   000326 605000 4                  TPL     s:14420+1

      298    14400        /*E*  ERROR:    ASW-E$CREXISTS-C
      299    14401              MESSAGE0: %%U1 %exists.
      300    14402              MESSAGE1: %%U1 %cannot exist if the mode is CREATE.
      301    14403        */
PL6.E3A0      #001=ASW$WSN File=ASW$WSN.:E05TSI                                  TUE 07/29/97 10:57 Page:70   
      302    14404    3         AS_FIELD1 = WSN_NAME;

  14404  4 000316   000000 100500                    MLR     fill='000'O
         4 000317   200070 000011                    ADSC9   WSN_NAME,,AUTO           cn=0,n=9
         4 000320   000000 000051 xsym               ADSC9   AS_FIELD1                cn=0,n=41

      303    14405              %SCREAM( ERR#=E$CREXISTS, LEVEL=ERROR, MID='W' );

  14417  4 000321   000010 630400 5                  EPPR0   8
         4 000322   000017 631400 xsym               EPPR1   B_VECTNIL+15
         4 000323   000000 701000 xent               TSX1    ASH$ERROR
         4 000324   000000 011000                    NOP     0

      304    14420    3         RETURN;

  14420  4 000325   000000 702200 xent               TSX2  ! X66_ARET
         4 000326   000343 710000 4                  TRA     s:14450

      305    14421    3         END ; /* Create */
      306    14422    2      END;  /*  Whenreturn from READ_WSN  */
      307    14423    2   WHENALTRETURN DO;

      308    14424                                                              /* It doesn't exist. */
      309    14425    3      IF NOT CREATE THEN DO;

  14425  4 000327   200015 234100                    SZN     CREATE,,AUTO
         4 000330   000343 604000 4                  TMI     s:14450

      310    14426        /*E*  ERROR:    ASW-E$FIDNOEXIST-C
      311    14427              MESSAGE0: %%U1 %does not exist. Switching to CREATE mode.
      312    14428              MESSAGE1: For MODIFY, %%U1 %should exist.
      313    14429        */
      314    14430    3         AS_FIELD1 = WSN_NAME;

  14430  4 000331   000000 100500                    MLR     fill='000'O
         4 000332   200070 000011                    ADSC9   WSN_NAME,,AUTO           cn=0,n=9
         4 000333   000000 000051 xsym               ADSC9   AS_FIELD1                cn=0,n=41
PL6.E3A0      #001=ASW$WSN File=ASW$WSN.:E05TSI                                  TUE 07/29/97 10:57 Page:71   

      315    14431              %SCREAM( ERR#=E$FIDNOEXIST, LEVEL=WARN, MID='W' );

  14441  4 000334   000011 630400 5                  EPPR0   9
         4 000335   000017 631400 xsym               EPPR1   B_VECTNIL+15
         4 000336   000000 701000 xent               TSX1    ASH$WARN
         4 000337   000000 011000                    NOP     0

      316    14446    3         CREATE = AS_TRUE ;

  14446  4 000340   000000 236000 xsym               LDQ     AS_TRUE
         4 000341   400000 376003                    ANQ     -131072,DU
         4 000342   200015 756100                    STQ     CREATE,,AUTO

      317    14447    3         END ; /* Not create  */

      318    14448    2      END ; /* Whenaltreturn from READ_WSN  */

      319    14449                                                              /**/
      320    14450    1   WSNDEV$ = PINCRW( DSEG2$, WSNDEV_OFF2 );

  14450  4 000343   000026 236000 2                  LDQ     WSNDEV_OFF2
         4 000344   000022 736000                    QLS     18
         4 000345   000000 036000 xsym               ADLQ    DSEG2$
         4 000346   200064 756100                    STQ     WSNDEV$,,AUTO

      321    14451    1   WSN_DEV_KEY.ACCT = WSN_KEY.ACCT ;

  14451  4 000347   040000 100400                    MLR     fill='040'O
         4 000350   000000 200010 2                  ADSC9   WSN_KEY                  cn=1,n=8
         4 000351   000003 200010 2                  ADSC9   WSN_DEV_KEY              cn=1,n=8

      322    14452    2   IF CREATE THEN DO;                      /*  Create  */

  14452  4 000352   200015 234100                    SZN     CREATE,,AUTO
         4 000353   001222 605000 4                  TPL     s:14641

PL6.E3A0      #001=ASW$WSN File=ASW$WSN.:E05TSI                                  TUE 07/29/97 10:57 Page:72   
      323    14453    3      IF INDIRECT THEN DO;

  14453  4 000354   200026 234100                    SZN     INDIRECT,,AUTO
         4 000355   000431 605000 4                  TPL     s:14470

      324    14454    3         KL$INDIRECT_WSN.ACCSDISP = 0;

  14454  4 000356   000000 220003                    LDX0    0,DU
         4 000357   200067 470500                    LDP0    WSNHDR$,,AUTO
         4 000360   000000 440100                    SXL0    0,,PR0

      325    14455    3         KL$INDIRECT_WSN.INDIRECT# = %YES#;

  14455  4 000361   200067 470500                    LDP0    WSNHDR$,,AUTO
         4 000362   400000 236003                    LDQ     -131072,DU
         4 000363   000000 256100                    ORSQ    0,,PR0

      326    14456    3         KL$INDIRECT_WSN.NODE = NODE_NAME;

  14456  4 000364   200067 470500                    LDP0    WSNHDR$,,AUTO
         4 000365   200034 237100                    LDAQ    NODE_NAME,,AUTO
         4 000366   000001 755100                    STA     1,,PR0
         4 000367   000002 756100                    STQ     2,,PR0

      327    14457    3         KL$INDIRECT_WSN.INDIRECT_WSN = STAT_NAME.TEXT;

  14457  4 000370   200067 470500                    LDP0    WSNHDR$,,AUTO
         4 000371   040100 100500                    MLR     fill='040'O
         4 000372   200043 200010                    ADSC9   STAT_NAME,,AUTO          cn=1,n=8
         4 000373   000003 000010                    ADSC9   3,,PR0                   cn=0,n=8

      328    14458    3         ACBLK$ = PINCRW( DSEG1$, ACBLK_OFF1 ) ;

  14458  4 000374   000024 236000 2                  LDQ     ACBLK_OFF1
         4 000375   000022 736000                    QLS     18
         4 000376   000000 036000 xsym               ADLQ    DSEG1$
         4 000377   200003 756100                    STQ     ACBLK$,,AUTO
PL6.E3A0      #001=ASW$WSN File=ASW$WSN.:E05TSI                                  TUE 07/29/97 10:57 Page:73   

      329    14459    3         WTBLK$ = ACBLK$ ;

  14459  4 000400   200073 756100                    STQ     WTBLK$,,AUTO

      330    14460    3         OFFSET = ACBLK_OFF1 ;

  14460  4 000401   000024 235000 2                  LDA     ACBLK_OFF1
         4 000402   200040 755100                    STA     OFFSET,,AUTO

      331    14461    3         KL$ACBLK = '0'B ;

  14461  4 000403   200003 470500                    LDP0    ACBLK$,,AUTO
         4 000404   000100 100400                    MLR     fill='000'O
         4 000405   000002 000001 xsym               ADSC9   B_VECTNIL+2              cn=0,n=1
         4 000406   000000 000014                    ADSC9   0,,PR0                   cn=0,n=12

      332    14462    3         KL$ACBLK.LIST(0) = AS_BLANK ;

  14462  4 000407   040100 100400                    MLR     fill='040'O
         4 000410   000000 000001 xsym               ADSC9   AS_BLANK                 cn=0,n=1
         4 000411   000001 000010                    ADSC9   1,,PR0                   cn=0,n=8

      333    14463    3         KL$WSNHDR.ACCSDISP = OFFSET ;

  14463  4 000412   000000 621005                    EAX1    0,AL
         4 000413   200067 471500                    LDP1    WSNHDR$,,AUTO
         4 000414   100000 441100                    SXL1    0,,PR1

      334    14464    3         ACC_ARS = LENGTHC( KL$ACBLK ) + LENGTHC( KL$ACBLK.LIST(0))

  14464  4 000415   000000 235100                    LDA     0,,PR0
         4 000416   000003 735000                    ALS     3
         4 000417   000004 035007                    ADLA    4,DL
         4 000420   200004 755100                    STA     ACC_ARS,,AUTO

      335    14465    3              * ( KL$ACBLK.ACCTS-1 ) ;
PL6.E3A0      #001=ASW$WSN File=ASW$WSN.:E05TSI                                  TUE 07/29/97 10:57 Page:74   
      336    14466    3         WH_ARS = LENGTHC ( KL$INDIRECT_WSN );

  14466  4 000421   000024 235007                    LDA     20,DL
         4 000422   200057 755100                    STA     WH_ARS,,AUTO

      337    14467    3         MOV$ = PINCRC (DSEG1$, WH_ARS + WSNHDR_OFF1);

  14467  4 000423   200057 236100                    LDQ     WH_ARS,,AUTO
         4 000424   000022 036000 2                  ADLQ    WSNHDR_OFF1
         4 000425   000020 736000                    QLS     16
         4 000426   000000 036000 xsym               ADLQ    DSEG1$
         4 000427   200032 756100                    STQ     MOV$,,AUTO

      338    14468    3         END;  /*  Indirect  */

  14468  4 000430   001405 710000 4                  TRA     s:14702

      339    14469    3      ELSE DO;

      340    14470    3         KL$WSNHDR = '0'B ;

  14470  4 000431   200067 470500                    LDP0    WSNHDR$,,AUTO
         4 000432   000100 100400                    MLR     fill='000'O
         4 000433   000002 000001 xsym               ADSC9   B_VECTNIL+2              cn=0,n=1
         4 000434   000000 000024                    ADSC9   0,,PR0                   cn=0,n=20

      341    14471    3         BLK_SZ = 0 ;

  14471  4 000435   200014 450100                    STZ     BLK_SZ,,AUTO

      342    14472    3         KL$WSNDEV.NDEV = 0 ;

  14472  4 000436   200064 470500                    LDP0    WSNDEV$,,AUTO
         4 000437   000000 450100                    STZ     0,,PR0

      343    14473    3         WSNDEV_ARS = LENGTHC(KL$WSNDEV) - LENGTHC(KL$WSNDEV.DEV(0)) ;

PL6.E3A0      #001=ASW$WSN File=ASW$WSN.:E05TSI                                  TUE 07/29/97 10:57 Page:75   
  14473  4 000440   000004 235007                    LDA     4,DL
         4 000441   200065 755100                    STA     WSNDEV_ARS,,AUTO

      344    14474                                                              /**/
      345    14475    4         IF FOR_FLG THEN DO;                 /*  Station specified  */

  14475  4 000442   200021 234100                    SZN     FOR_FLG,,AUTO
         4 000443   000612 605000 4                  TPL     s:14549

      346    14476                                                              /* Get station rec. */
      347    14477    4            TREC$ = PINCRW( DSEG2$, TREC_OFF2 ) ;

  14477  4 000444   000031 236000 2                  LDQ     TREC_OFF2
         4 000445   000022 736000                    QLS     18
         4 000446   000000 036000 xsym               ADLQ    DSEG2$
         4 000447   200047 756100                    STQ     TREC$,,AUTO

      348    14478    4            ARS2 = DSEG2SIZE - 4 * TREC_OFF2 ;

  14478  4 000450   000000 236003                    LDQ     0,DU
         4 000451   000031 136000 2                  SBLQ    TREC_OFF2
         4 000452   000002 736000                    QLS     2
         4 000453   000000 036000 xsym               ADLQ    DSEG2SIZE
         4 000454   200007 756100                    STQ     ARS2,,AUTO

      349    14479    4            TREC_ARS = ARS2 ;

  14479  4 000455   200050 756100                    STQ     TREC_ARS,,AUTO

      350    14480    4            USERS_KEY = STAT_KEY ;

  14480  4 000456   000000 100400                    MLR     fill='000'O
         4 000457   000013 000020 2                  ADSC9   STAT_KEY                 cn=0,n=16
         4 000460   000000 000052 xsym               ADSC9   USERS_KEY                cn=0,n=42

      351    14481    4            CALL ASB$ENQ_HLP ALTRET( ENQ_ERR ) ;

PL6.E3A0      #001=ASW$WSN File=ASW$WSN.:E05TSI                                  TUE 07/29/97 10:57 Page:76   
  14481  4 000461   000002 631400 xsym               EPPR1   B_VECTNIL+2
         4 000462   000000 701000 xent               TSX1    ASB$ENQ_HLP
         4 000463   000265 702000 4                  TSX2    ENQ_ERR

      352    14482    4            CALL ASB$READ_HLP( TREC$, TREC_ARS )

  14482  4 000464   200050 630500                    EPPR0   TREC_ARS,,AUTO
         4 000465   202107 450500                    STP0    X+1012,,AUTO
         4 000466   200047 631500                    EPPR1   TREC$,,AUTO
         4 000467   202106 451500                    STP1    X+1011,,AUTO
         4 000470   202106 630500                    EPPR0   X+1011,,AUTO
         4 000471   000020 631400 xsym               EPPR1   B_VECTNIL+16
         4 000472   000000 701000 xent               TSX1    ASB$READ_HLP
         4 000473   000475 702000 4                  TSX2    s:14487
         4 000474   000505 710000 4                  TRA     s:14505

      353    14483    5            WHENALTRETURN DO;

      354    14484        /*E*  ERROR:    ASW-E$TERMNOEXIST-C
      355    14485              MESSAGE0: %%U1 %does not exist.
      356    14486        */
      357    14487    5               AS_FIELD1 = STAT_NAME;

  14487  4 000475   000000 100500                    MLR     fill='000'O
         4 000476   200043 000011                    ADSC9   STAT_NAME,,AUTO          cn=0,n=9
         4 000477   000000 000051 xsym               ADSC9   AS_FIELD1                cn=0,n=41

      358    14488                    %SCREAM( ERR#=E$TERMNOEXIST, LEVEL=ERROR, MID='W' );

  14500  4 000500   000012 630400 5                  EPPR0   10
         4 000501   000017 631400 xsym               EPPR1   B_VECTNIL+15
         4 000502   000000 701000 xent               TSX1    ASH$ERROR
         4 000503   000000 011000                    NOP     0

      359    14503    5               RETURN;

  14503  4 000504   000000 702200 xent               TSX2  ! X66_ARET
PL6.E3A0      #001=ASW$WSN File=ASW$WSN.:E05TSI                                  TUE 07/29/97 10:57 Page:77   

      360    14504    5               END ; /*  Whenaltreturn from READ_HLP  */
      361    14505    4            TWSN# = KL$TREC.TWSN# ;

  14505  4 000505   200047 470500                    LDP0    TREC$,,AUTO
         4 000506   000001 236100                    LDQ     1,,PR0
         4 000507   200053 756100                    STQ     TWSN#,,AUTO

      362    14506    4            TWSNREC$ = PINCRW( DSEG2$ , TWSNREC_OFF2 ) ;

  14506  4 000510   000030 236000 2                  LDQ     TWSNREC_OFF2
         4 000511   000022 736000                    QLS     18
         4 000512   000000 036000 xsym               ADLQ    DSEG2$
         4 000513   200052 756100                    STQ     TWSNREC$,,AUTO

      363    14507    4            ARS2 = DSEG2SIZE - 4 * TWSNREC_OFF2 ;

  14507  4 000514   000000 236003                    LDQ     0,DU
         4 000515   000030 136000 2                  SBLQ    TWSNREC_OFF2
         4 000516   000002 736000                    QLS     2
         4 000517   000000 036000 xsym               ADLQ    DSEG2SIZE
         4 000520   200007 756100                    STQ     ARS2,,AUTO

      364    14508    4            TWSN_ARS = ARS2 ;

  14508  4 000521   200054 756100                    STQ     TWSN_ARS,,AUTO

      365    14509    4            TWSN_KEY.TWSN# = TWSN# ;

  14509  4 000522   040000 100500                    MLR     fill='040'O
         4 000523   200053 000004                    ADSC9   TWSN#,,AUTO              cn=0,n=4
         4 000524   000020 200004 2                  ADSC9   TWSN_KEY+1               cn=1,n=4

      366    14510    4            USERS_KEY = TWSN_KEY ;

  14510  4 000525   000000 100400                    MLR     fill='000'O
         4 000526   000017 000011 2                  ADSC9   TWSN_KEY                 cn=0,n=9
PL6.E3A0      #001=ASW$WSN File=ASW$WSN.:E05TSI                                  TUE 07/29/97 10:57 Page:78   
         4 000527   000000 000052 xsym               ADSC9   USERS_KEY                cn=0,n=42

      367    14511    4            CALL ASB$ENQ_HLP ALTRET( ENQ_ERR ) ;

  14511  4 000530   000002 631400 xsym               EPPR1   B_VECTNIL+2
         4 000531   000000 701000 xent               TSX1    ASB$ENQ_HLP
         4 000532   000265 702000 4                  TSX2    ENQ_ERR

      368    14512    4            CALL ASB$READ_HLP( TWSNREC$, TWSN_ARS )

  14512  4 000533   200054 630500                    EPPR0   TWSN_ARS,,AUTO
         4 000534   202107 450500                    STP0    X+1012,,AUTO
         4 000535   200052 631500                    EPPR1   TWSNREC$,,AUTO
         4 000536   202106 451500                    STP1    X+1011,,AUTO
         4 000537   202106 630500                    EPPR0   X+1011,,AUTO
         4 000540   000020 631400 xsym               EPPR1   B_VECTNIL+16
         4 000541   000000 701000 xent               TSX1    ASB$READ_HLP
         4 000542   000544 702000 4                  TSX2    s:14529
         4 000543   000557 710000 4                  TRA     s:14537

      369    14513    5            WHENALTRETURN DO;

      370    14514        /*E*  ERROR:    ASW-E$TWSNNOEXIST-C
      371    14515              MESSAGE0: %%U1 %does not exist.
      372    14516        */
      373    14517                    %SCREAM( ERR#=E$TWSNNOEXIST, LEVEL=ERROR, MID='W' );

  14529  4 000544   000013 630400 5                  EPPR0   11
         4 000545   000017 631400 xsym               EPPR1   B_VECTNIL+15
         4 000546   000000 701000 xent               TSX1    ASH$ERROR
         4 000547   000000 011000                    NOP     0

      374    14532    5               CALL ASB$DEQ_HLP ;

  14532  4 000550   000002 631400 xsym               EPPR1   B_VECTNIL+2
         4 000551   000000 701000 xent               TSX1    ASB$DEQ_HLP
         4 000552   000000 011000                    NOP     0
PL6.E3A0      #001=ASW$WSN File=ASW$WSN.:E05TSI                                  TUE 07/29/97 10:57 Page:79   

      375    14533    5               CALL ASW$DEQ_WSN ;

  14533  4 000553   000002 631400 xsym               EPPR1   B_VECTNIL+2
         4 000554   000000 701000 xent               TSX1    ASW$DEQ_WSN
         4 000555   000000 011000                    NOP     0

      376    14534    5               RETURN;

  14534  4 000556   000000 702200 xent               TSX2  ! X66_ARET

      377    14535    5               END ; /*  Whenaltreturn from READ_HLP  */
      378    14536                                           /*  Check for station's default wsn  */
      379    14537    4            IF KL$TWSNREC.WSN = ' '

  14537  4 000557   200052 470500                    LDP0    TWSNREC$,,AUTO
         4 000560   040000 106500                    CMPC    fill='040'O
         4 000561   000000 000010                    ADSC9   0,,PR0                   cn=0,n=8
         4 000562   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         4 000563   000602 601000 4                  TNZ     s:14544

      380    14538    5            THEN DO;

      381    14539    5               KL$TWSNREC.WSN = WSN_KEY.ACCT ;

  14539  4 000564   040100 100400                    MLR     fill='040'O
         4 000565   000000 200010 2                  ADSC9   WSN_KEY                  cn=1,n=8
         4 000566   000000 000010                    ADSC9   0,,PR0                   cn=0,n=8

      382    14540    5               USERS_KEY = TWSN_KEY ;

  14540  4 000567   000000 100400                    MLR     fill='000'O
         4 000570   000017 000011 2                  ADSC9   TWSN_KEY                 cn=0,n=9
         4 000571   000000 000052 xsym               ADSC9   USERS_KEY                cn=0,n=42

      383    14541    5               CALL ASB$WRITE_HLP (TWSNREC$, TWSN_ARS) ;

PL6.E3A0      #001=ASW$WSN File=ASW$WSN.:E05TSI                                  TUE 07/29/97 10:57 Page:80   
  14541  4 000572   200054 630500                    EPPR0   TWSN_ARS,,AUTO
         4 000573   202107 450500                    STP0    X+1012,,AUTO
         4 000574   200052 631500                    EPPR1   TWSNREC$,,AUTO
         4 000575   202106 451500                    STP1    X+1011,,AUTO
         4 000576   202106 630500                    EPPR0   X+1011,,AUTO
         4 000577   000020 631400 xsym               EPPR1   B_VECTNIL+16
         4 000600   000000 701000 xent               TSX1    ASB$WRITE_HLP
         4 000601   000000 011000                    NOP     0

      384    14542                         /*  Write 'default wsn for station sname is wsnname' */
      385    14543    5               END;

      386    14544    4            KL$WSNHDR.TNAME = STAT_KEY.ACCT ;

  14544  4 000602   200067 470500                    LDP0    WSNHDR$,,AUTO
         4 000603   040100 100400                    MLR     fill='040'O
         4 000604   000013 200010 2                  ADSC9   STAT_KEY                 cn=1,n=8
         4 000605   000001 000010                    ADSC9   1,,PR0                   cn=0,n=8

      387    14545    4            NDEV = KL$TWSNREC.NDEV ;

  14545  4 000606   200052 470500                    LDP0    TWSNREC$,,AUTO
         4 000607   000004 235100                    LDA     4,,PR0
         4 000610   200033 755100                    STA     NDEV,,AUTO

      388    14546    4            END ;                /* Then FOR_FLG   */

  14546  4 000611   000622 710000 4                  TRA     s:14555

      389    14547                                              /**/
      390    14548    4         ELSE DO;

      391    14549    4            KL$WSNHDR.TNAME = ' ';

  14549  4 000612   200067 470500                    LDP0    WSNHDR$,,AUTO
         4 000613   000035 235000 xsym               LDA     B_VECTNIL+29
         4 000614   000035 236000 xsym               LDQ     B_VECTNIL+29
PL6.E3A0      #001=ASW$WSN File=ASW$WSN.:E05TSI                                  TUE 07/29/97 10:57 Page:81   
         4 000615   000001 755100                    STA     1,,PR0
         4 000616   000002 756100                    STQ     2,,PR0

      392    14550    4            KL$WSNHDR.NTYP = 0;

  14550  4 000617   200067 470500                    LDP0    WSNHDR$,,AUTO
         4 000620   000003 450100                    STZ     3,,PR0

      393    14551    4            NDEV = 0 ;

  14551  4 000621   200033 450100                    STZ     NDEV,,AUTO

      394    14552    4            END;                 /* Else not FOR_FLG */

      395    14553                                                              /* Set up wsnhdr */
      396    14554                                                              /* Set up WTBLK$ */
      397    14555    3         WTBLK$ = PINCRW( DSEG1$, WTBLK_OFF1 ) ;

  14555  4 000622   000023 236000 2                  LDQ     WTBLK_OFF1
         4 000623   000022 736000                    QLS     18
         4 000624   000000 036000 xsym               ADLQ    DSEG1$
         4 000625   200073 756100                    STQ     WTBLK$,,AUTO

      398    14556    3         OFFSET = WTBLK_OFF1 ;

  14556  4 000626   000023 235000 2                  LDA     WTBLK_OFF1
         4 000627   200040 755100                    STA     OFFSET,,AUTO

      399    14557    3         WTB_SZ = LENGTHC( KL$WTBLK ) ;

  14557  4 000630   000100 235007                    LDA     64,DL
         4 000631   200074 755100                    STA     WTB_SZ,,AUTO

      400    14558    3         ATTR_SZ = LENGTHC( KL$WTBLK.ATTRS(0) ) ;

  14558  4 000632   000002 235007                    LDA     2,DL
         4 000633   200012 755100                    STA     ATTR_SZ,,AUTO
PL6.E3A0      #001=ASW$WSN File=ASW$WSN.:E05TSI                                  TUE 07/29/97 10:57 Page:82   

      401    14559    3         INCR = WTB_SZ ;

  14559  4 000634   200074 235100                    LDA     WTB_SZ,,AUTO
         4 000635   200025 755100                    STA     INCR,,AUTO

      402    14560                                                              /**/
      403    14561    4         DO I = 0 TO NDEV-1 ;

  14561  4 000636   200024 450100                    STZ     I,,AUTO
         4 000637   001071 710000 4                  TRA     s:14611+3

      404    14562    4            TYPE = KL$TWSNREC.DEVS.TYP(I) ;

  14562  4 000640   200024 236100                    LDQ     I,,AUTO
         4 000641   000013 402007                    MPY     11,DL
         4 000642   200052 470500                    LDP0    TWSNREC$,,AUTO
         4 000643   000005 220106                    LDX0    5,QL,PR0
         4 000644   200055 740100                    STX0    TYPE,,AUTO

      405    14563    4            NUM = KL$TWSNREC.DEVS.NUM(I) ;

  14563  4 000645   000005 721106                    LXL1    5,QL,PR0
         4 000646   200037 741100                    STX1    NUM,,AUTO

      406    14564    4            DEV_WSN_KEY.ACCT = KL$TWSNREC.DEVS.ACCT(I) ;

  14564  4 000647   200024 236100                    LDQ     I,,AUTO
         4 000650   000054 402007                    MPY     44,DL
         4 000651   040000 100506                    MLR     fill='040'O
         4 000652   000011 000010                    ADSC9   9,Q,PR0                  cn=0,n=8
         4 000653   000007 200010 2                  ADSC9   DEV_WSN_KEY              cn=1,n=8

      407    14565    5            IF TYPE ~= 'OC' AND TYPE ~= 'CG' THEN DO;

  14565  4 000654   000012 100000 3                  CMPX0   10
         4 000655   001066 600000 4                  TZE     s:14611
PL6.E3A0      #001=ASW$WSN File=ASW$WSN.:E05TSI                                  TUE 07/29/97 10:57 Page:83   
         4 000656   000013 100000 3                  CMPX0   11
         4 000657   001066 600000 4                  TZE     s:14611

      408    14566    5               ATTR = KL$TWSNREC.DEVS.ATTR(I) ;

  14566  4 000660   200024 236100                    LDQ     I,,AUTO
         4 000661   000013 402007                    MPY     11,DL
         4 000662   000006 222106                    LDX2    6,QL,PR0
         4 000663   200010 742100                    STX2    ATTR,,AUTO

      409    14567                                                              /**/
      410    14568    5               J = 0; FOUND_TYPE = '0'B;

  14568  4 000664   200027 450100                    STZ     J,,AUTO

  14568  4 000665   200023 450100                    STZ     FOUND_TYPE,,AUTO

      411    14569    6               DO WHILE( J < KL$WSNHDR.NTYP AND NOT FOUND_TYPE );

  14569  4 000666   000702 710000 4                  TRA     s:14574

      412    14570    6                  IF KL$WSNHDR.TYPS.TYP(J) = TYPE THEN

  14570  4 000667   200067 470500                    LDP0    WSNHDR$,,AUTO
         4 000670   200027 720100                    LXL0    J,,AUTO
         4 000671   000004 221110                    LDX1    4,X0,PR0
         4 000672   200055 101100                    CMPX1   TYPE,,AUTO
         4 000673   000677 601000 4                  TNZ     s:14573

      413    14571    6                     FOUND_TYPE = '1'B;

  14571  4 000674   400000 236003                    LDQ     -131072,DU
         4 000675   200023 756100                    STQ     FOUND_TYPE,,AUTO
         4 000676   000702 710000 4                  TRA     s:14574

      414    14572    6                  ELSE
      415    14573    6                     J = J + 1;
PL6.E3A0      #001=ASW$WSN File=ASW$WSN.:E05TSI                                  TUE 07/29/97 10:57 Page:84   

  14573  4 000677   200027 235100                    LDA     J,,AUTO
         4 000700   000001 035007                    ADLA    1,DL
         4 000701   200027 755100                    STA     J,,AUTO

      416    14574    6                  END;

  14574  4 000702   200067 470500                    LDP0    WSNHDR$,,AUTO
         4 000703   200027 236100                    LDQ     J,,AUTO
         4 000704   000003 116100                    CMPQ    3,,PR0
         4 000705   000710 603000 4                  TRC     s:14575
         4 000706   200023 234100                    SZN     FOUND_TYPE,,AUTO
         4 000707   000667 605000 4                  TPL     s:14570

      417    14575    6               IF FOUND_TYPE THEN DO;

  14575  4 000710   200023 234100                    SZN     FOUND_TYPE,,AUTO
         4 000711   000760 605000 4                  TPL     s:14592

      418    14576    6                  ATTR$ = PINCRW( DSEG1$,KL$WSNHDR.TYPS.DISP(J)) ;

  14576  4 000712   000004 720106                    LXL0    4,QL,PR0
         4 000713   000000 636010                    EAQ     0,X0
         4 000714   000000 036000 xsym               ADLQ    DSEG1$
         4 000715   200011 756100                    STQ     ATTR$,,AUTO

      419    14577    6                  K = 0; FOUND_ATTR = '0'B;

  14577  4 000716   200030 450100                    STZ     K,,AUTO

  14577  4 000717   200022 450100                    STZ     FOUND_ATTR,,AUTO

      420    14578    7                  DO WHILE ( K < ATTR$ -> KL$WTBLK.NATR AND NOT FOUND_ATTR );

  14578  4 000720   000736 710000 4                  TRA     s:14583

      421    14579    7                     IF ATTR$ -> KL$WTBLK.ATTRS( K ) = ATTR THEN
PL6.E3A0      #001=ASW$WSN File=ASW$WSN.:E05TSI                                  TUE 07/29/97 10:57 Page:85   

  14579  4 000721   200030 235100                    LDA     K,,AUTO
         4 000722   000001 735000                    ALS     1
         4 000723   200011 470500                    LDP0    ATTR$,,AUTO
         4 000724   000100 106505                    CMPC    fill='000'O
         4 000725   000005 000002                    ADSC9   5,A,PR0                  cn=0,n=2
         4 000726   200010 000002                    ADSC9   ATTR,,AUTO               cn=0,n=2
         4 000727   000733 601000 4                  TNZ     s:14582

      422    14580    7                        FOUND_ATTR = '1'B;

  14580  4 000730   400000 236003                    LDQ     -131072,DU
         4 000731   200022 756100                    STQ     FOUND_ATTR,,AUTO
         4 000732   000736 710000 4                  TRA     s:14583

      423    14581    7                     ELSE
      424    14582    7                        K = K + 1;

  14582  4 000733   200030 236100                    LDQ     K,,AUTO
         4 000734   000001 036007                    ADLQ    1,DL
         4 000735   200030 756100                    STQ     K,,AUTO

      425    14583    7                     END;

  14583  4 000736   200011 470500                    LDP0    ATTR$,,AUTO
         4 000737   200030 236100                    LDQ     K,,AUTO
         4 000740   000004 116100                    CMPQ    4,,PR0
         4 000741   000744 603000 4                  TRC     s:14584
         4 000742   200022 234100                    SZN     FOUND_ATTR,,AUTO
         4 000743   000721 605000 4                  TPL     s:14579

      426    14584    7                  IF NOT FOUND_ATTR THEN DO;       /* No match */

  14584  4 000744   200022 234100                    SZN     FOUND_ATTR,,AUTO
         4 000745   000755 604000 4                  TMI     s:14588

      427    14585    7                     ATTR$ -> KL$WTBLK.ATTRS( K ) = ATTR ;
PL6.E3A0      #001=ASW$WSN File=ASW$WSN.:E05TSI                                  TUE 07/29/97 10:57 Page:86   

  14585  4 000746   200030 235100                    LDA     K,,AUTO
         4 000747   000001 735000                    ALS     1
         4 000750   000105 100500                    MLR     fill='000'O
         4 000751   200010 000002                    ADSC9   ATTR,,AUTO               cn=0,n=2
         4 000752   000005 000002                    ADSC9   5,A,PR0                  cn=0,n=2

      428    14586    7                     ATTR$ -> KL$WTBLK.NATR = K + 1 ;

  14586  4 000753   000001 036007                    ADLQ    1,DL
         4 000754   000004 756100                    STQ     4,,PR0

      429    14587    7                     END; /*  If not FOUND_ATTR  */

      430    14588    6                  CALL DEVWSN ;    /* Check for altret */

  14588  4 000755   003577 701000 4                  TSX1    DEVWSN
         4 000756   000000 011000                    NOP     0

      431    14589    6                  END;         /* If FOUND_TYPE then do; */

  14589  4 000757   001066 710000 4                  TRA     s:14611

      432    14590    6               ELSE DO;                         /* None this type */

      433    14591                                                              /* Build type blk */
      434    14592    6                  WSNDEV_FLG = AS_FALSE ;

  14592  4 000760   000000 236000 xsym               LDQ     AS_FALSE
         4 000761   400000 376003                    ANQ     -131072,DU
         4 000762   200066 756100                    STQ     WSNDEV_FLG,,AUTO

      435    14593    6                  CALL DEVWSN ;      /* Check for altret  */

  14593  4 000763   003577 701000 4                  TSX1    DEVWSN
         4 000764   000000 011000                    NOP     0

PL6.E3A0      #001=ASW$WSN File=ASW$WSN.:E05TSI                                  TUE 07/29/97 10:57 Page:87   
      436    14594    7                  IF NOT WSNDEV_FLG THEN DO;

  14594  4 000765   200066 234100                    SZN     WSNDEV_FLG,,AUTO
         4 000766   001066 604000 4                  TMI     s:14611

      437    14595    7                     WTBLK$ = PINCRC( WTBLK$, INCR ) ;

  14595  4 000767   200025 236100                    LDQ     INCR,,AUTO
         4 000770   000020 736000                    QLS     16
         4 000771   200073 036100                    ADLQ    WTBLK$,,AUTO
         4 000772   200073 756100                    STQ     WTBLK$,,AUTO

      438    14596    7                     OFFSET = POFFW( WTBLK$, DSEG1$ ) ;

  14596  4 000773   000000 235000 xsym               LDA     DSEG1$
         4 000774   000022 771000                    ARL     18
         4 000775   202106 755100                    STA     X+1011,,AUTO
         4 000776   200073 236100                    LDQ     WTBLK$,,AUTO
         4 000777   000022 772000                    QRL     18
         4 001000   202106 136100                    SBLQ    X+1011,,AUTO
         4 001001   200040 756100                    STQ     OFFSET,,AUTO

      439    14597    7                     KL$WTBLK = '0'B ;

  14597  4 001002   200073 470500                    LDP0    WTBLK$,,AUTO
         4 001003   000100 100400                    MLR     fill='000'O
         4 001004   000002 000001 xsym               ADSC9   B_VECTNIL+2              cn=0,n=1
         4 001005   000000 000100                    ADSC9   0,,PR0                   cn=0,n=64

      440    14598    7                     KL$WTBLK.TNAME = KL$WSNHDR.TNAME ;

  14598  4 001006   200067 471500                    LDP1    WSNHDR$,,AUTO
         4 001007   040100 100500                    MLR     fill='040'O
         4 001010   100001 000010                    ADSC9   1,,PR1                   cn=0,n=8
         4 001011   000000 000010                    ADSC9   0,,PR0                   cn=0,n=8

      441    14599    7                     KL$WTBLK.FNAME = KL$TWSNREC.DEVS.FNAME(I) ;
PL6.E3A0      #001=ASW$WSN File=ASW$WSN.:E05TSI                                  TUE 07/29/97 10:57 Page:88   

  14599  4 001012   200024 236100                    LDQ     I,,AUTO
         4 001013   000054 402007                    MPY     44,DL
         4 001014   200052 471500                    LDP1    TWSNREC$,,AUTO
         4 001015   040100 100506                    MLR     fill='040'O
         4 001016   100007 000006                    ADSC9   7,Q,PR1                  cn=0,n=6
         4 001017   000002 000006                    ADSC9   2,,PR0                   cn=0,n=6

      442    14600    7                     KL$WTBLK.DDEV = KL$TWSNREC.DEVS.DDEV(I) ;

  14600  4 001020   200024 236100                    LDQ     I,,AUTO
         4 001021   000013 402007                    MPY     11,DL
         4 001022   200052 471500                    LDP1    TWSNREC$,,AUTO
         4 001023   100006 236106                    LDQ     6,QL,PR1
         4 001024   000003 552110                    STBQ    3,'10'O,PR0

      443    14601    7                     KL$WTBLK.IO = KL$TWSNREC.DEVS.IO(I) ;

  14601  4 001025   200024 236100                    LDQ     I,,AUTO
         4 001026   000013 402007                    MPY     11,DL
         4 001027   200052 471500                    LDP1    TWSNREC$,,AUTO
         4 001030   100006 236106                    LDQ     6,QL,PR1
         4 001031   000003 676100                    ERQ     3,,PR0
         4 001032   000600 376007                    ANQ     384,DL
         4 001033   000003 656100                    ERSQ    3,,PR0

      444    14602    7                     KL$WTBLK.PNAME = KL$TWSNREC.DEVS.PNAME (I);

  14602  4 001034   200024 236100                    LDQ     I,,AUTO
         4 001035   000054 402007                    MPY     44,DL
         4 001036   200052 471500                    LDP1    TWSNREC$,,AUTO
         4 001037   000100 100506                    MLR     fill='000'O
         4 001040   100015 000014                    ADSC9   13,Q,PR1                 cn=0,n=12
         4 001041   000015 000014                    ADSC9   13,,PR0                  cn=0,n=12

      445    14603    7                     KL$WTBLK.ATTRS( KL$WTBLK.NATR ) = ATTR ;

PL6.E3A0      #001=ASW$WSN File=ASW$WSN.:E05TSI                                  TUE 07/29/97 10:57 Page:89   
  14603  4 001042   000004 235100                    LDA     4,,PR0
         4 001043   000001 735000                    ALS     1
         4 001044   000105 100500                    MLR     fill='000'O
         4 001045   200010 000002                    ADSC9   ATTR,,AUTO               cn=0,n=2
         4 001046   000005 000002                    ADSC9   5,A,PR0                  cn=0,n=2

      446    14604    7                     KL$WTBLK.NATR = KL$WTBLK.NATR + 1 ;

  14604  4 001047   000004 235100                    LDA     4,,PR0
         4 001050   000001 035007                    ADLA    1,DL
         4 001051   000004 755100                    STA     4,,PR0

      447    14605    7                     KL$WSNHDR.TYPS.TYP(KL$WSNHDR.NTYP) = TYPE ;

  14605  4 001052   200067 471500                    LDP1    WSNHDR$,,AUTO
         4 001053   100003 720100                    LXL0    3,,PR1
         4 001054   200055 221100                    LDX1    TYPE,,AUTO
         4 001055   100004 741110                    STX1    4,X0,PR1

      448    14606    7                     KL$WSNHDR.TYPS.DISP(KL$WSNHDR.NTYP) = OFFSET ;

  14606  4 001056   200067 471500                    LDP1    WSNHDR$,,AUTO
         4 001057   100003 720100                    LXL0    3,,PR1
         4 001060   200040 722100                    LXL2    OFFSET,,AUTO
         4 001061   100004 442110                    SXL2    4,X0,PR1

      449    14607    7                     KL$WSNHDR.NTYP = KL$WSNHDR.NTYP + 1 ;

  14607  4 001062   200067 471500                    LDP1    WSNHDR$,,AUTO
         4 001063   100003 235100                    LDA     3,,PR1
         4 001064   000001 035007                    ADLA    1,DL
         4 001065   100003 755100                    STA     3,,PR1

      450    14608    7                     END; /* If not WSNDEV_FLG  */

      451    14609    6                  END; /* Else do */

PL6.E3A0      #001=ASW$WSN File=ASW$WSN.:E05TSI                                  TUE 07/29/97 10:57 Page:90   
      452    14610    5               END;

      453    14611    4            END ; /* Do i */

  14611  4 001066   200024 235100                    LDA     I,,AUTO
         4 001067   000001 035007                    ADLA    1,DL
         4 001070   200024 755100                    STA     I,,AUTO
         4 001071   200024 236100                    LDQ     I,,AUTO
         4 001072   200033 116100                    CMPQ    NDEV,,AUTO
         4 001073   000640 602000 4                  TNC     s:14562

      454    14612                                                                   /* Move wtblks */
      455    14613    3         NTYP = KL$WSNHDR.NTYP ;

  14613  4 001074   200067 470500                    LDP0    WSNHDR$,,AUTO
         4 001075   000003 235100                    LDA     3,,PR0
         4 001076   200036 755100                    STA     NTYP,,AUTO

      456    14614    3         WH_ARS = LENGTHC( KL$WSNHDR ) + LENGTHC( KL$WSNHDR.TYPS )

  14614  4 001077   000002 735000                    ALS     2
         4 001100   000020 035007                    ADLA    16,DL
         4 001101   200057 755100                    STA     WH_ARS,,AUTO

      457    14615    3              * (NTYP-1) ;
      458    14616    3         MOV$ = PINCRC( DSEG1$, WH_ARS + WSNHDR_OFF1 ) ;

  14616  4 001102   200057 236100                    LDQ     WH_ARS,,AUTO
         4 001103   000022 036000 2                  ADLQ    WSNHDR_OFF1
         4 001104   000020 736000                    QLS     16
         4 001105   000000 036000 xsym               ADLQ    DSEG1$
         4 001106   200032 756100                    STQ     MOV$,,AUTO

      459    14617    4         DO I = 0 TO NTYP-1 ;

  14617  4 001107   200024 450100                    STZ     I,,AUTO
         4 001110   001171 710000 4                  TRA     s:14626+3
PL6.E3A0      #001=ASW$WSN File=ASW$WSN.:E05TSI                                  TUE 07/29/97 10:57 Page:91   

      460    14618    4            WTBLK$ = PINCRW( DSEG1$, KL$WSNHDR.TYPS.DISP(I) + WSNHDR_OFF1 ) ;

  14618  4 001111   200067 470500                    LDP0    WSNHDR$,,AUTO
         4 001112   200024 720100                    LXL0    I,,AUTO
         4 001113   000004 236110                    LDQ     4,X0,PR0
         4 001114   777777 376007                    ANQ     -1,DL
         4 001115   000022 036000 2                  ADLQ    WSNHDR_OFF1
         4 001116   000022 736000                    QLS     18
         4 001117   000000 036000 xsym               ADLQ    DSEG1$
         4 001120   200073 756100                    STQ     WTBLK$,,AUTO

      461    14619    4            ARS = LENGTHC( KL$WTBLK ) ;

  14619  4 001121   000100 235007                    LDA     64,DL
         4 001122   200005 755100                    STA     ARS,,AUTO

      462    14620    4            BLK_SZ = BLK_SZ + 4 * ( (ARS+3) / 4 ) ;

  14620  4 001123   200005 236100                    LDQ     ARS,,AUTO
         4 001124   000003 036007                    ADLQ    3,DL
         4 001125   000002 772000                    QRL     2
         4 001126   000002 736000                    QLS     2
         4 001127   200014 036100                    ADLQ    BLK_SZ,,AUTO
         4 001130   200014 756100                    STQ     BLK_SZ,,AUTO

      463    14621    4            MOV$STRT = WTBLK$ -> MOV$STRT ;

  14621  4 001131   200073 471500                    LDP1    WTBLK$,,AUTO
         4 001132   000000 621005                    EAX1    0,AL
         4 001133   200032 473500                    LDP3    MOV$,,AUTO
         4 001134   200005 722100                    LXL2    ARS,,AUTO
         4 001135   040140 100540                    MLR     fill='040'O
         4 001136   100000 000011                    ADSC9   0,,PR1                   cn=0,n=*X1
         4 001137   300000 000012                    ADSC9   0,,PR3                   cn=0,n=*X2

      464    14622    4            MOV$ -> KL$WTBLK.ATTRS( KL$WTBLK.NATR ) = '0'B ;
PL6.E3A0      #001=ASW$WSN File=ASW$WSN.:E05TSI                                  TUE 07/29/97 10:57 Page:92   

  14622  4 001140   100004 235100                    LDA     4,,PR1
         4 001141   000001 735000                    ALS     1
         4 001142   000105 100400                    MLR     fill='000'O
         4 001143   000002 000001 xsym               ADSC9   B_VECTNIL+2              cn=0,n=1
         4 001144   300005 000002                    ADSC9   5,A,PR3                  cn=0,n=2

      465    14623    4            KL$WSNHDR.TYPS.DISP(I) = WH_ARS/4 ;

  14623  4 001145   200057 236100                    LDQ     WH_ARS,,AUTO
         4 001146   000002 772000                    QRL     2
         4 001147   000000 621006                    EAX1    0,QL
         4 001150   200067 470500                    LDP0    WSNHDR$,,AUTO
         4 001151   000004 441110                    SXL1    4,X0,PR0

      466    14624    4            WH_ARS = WH_ARS + 4*( ( ARS+3 )/4 ) ;

  14624  4 001152   200005 236100                    LDQ     ARS,,AUTO
         4 001153   000003 036007                    ADLQ    3,DL
         4 001154   000002 772000                    QRL     2
         4 001155   000002 736000                    QLS     2
         4 001156   200057 036100                    ADLQ    WH_ARS,,AUTO
         4 001157   200057 756100                    STQ     WH_ARS,,AUTO

      467    14625    4            MOV$ = PINCRW( MOV$, ( ARS+3 )/4 ) ;

  14625  4 001160   200005 236100                    LDQ     ARS,,AUTO
         4 001161   000003 036007                    ADLQ    3,DL
         4 001162   000002 772000                    QRL     2
         4 001163   000022 736000                    QLS     18
         4 001164   200032 036100                    ADLQ    MOV$,,AUTO
         4 001165   200032 756100                    STQ     MOV$,,AUTO

      468    14626    4            END ; /* Do i */

  14626  4 001166   200024 235100                    LDA     I,,AUTO
         4 001167   000001 035007                    ADLA    1,DL
PL6.E3A0      #001=ASW$WSN File=ASW$WSN.:E05TSI                                  TUE 07/29/97 10:57 Page:93   
         4 001170   200024 755100                    STA     I,,AUTO
         4 001171   200024 236100                    LDQ     I,,AUTO
         4 001172   200036 116100                    CMPQ    NTYP,,AUTO
         4 001173   001111 602000 4                  TNC     s:14618

      469    14627                                                              /* Set up access blk */
      470    14628    3         ACBLK$ = PINCRW( DSEG1$, ACBLK_OFF1 ) ;

  14628  4 001174   000024 236000 2                  LDQ     ACBLK_OFF1
         4 001175   000022 736000                    QLS     18
         4 001176   000000 036000 xsym               ADLQ    DSEG1$
         4 001177   200003 756100                    STQ     ACBLK$,,AUTO

      471    14629    3         WTBLK$ = ACBLK$ ;

  14629  4 001200   200073 756100                    STQ     WTBLK$,,AUTO

      472    14630    3         OFFSET = ACBLK_OFF1 ;

  14630  4 001201   000024 235000 2                  LDA     ACBLK_OFF1
         4 001202   200040 755100                    STA     OFFSET,,AUTO

      473    14631    3         KL$ACBLK = '0'B ;

  14631  4 001203   200003 470500                    LDP0    ACBLK$,,AUTO
         4 001204   000100 100400                    MLR     fill='000'O
         4 001205   000002 000001 xsym               ADSC9   B_VECTNIL+2              cn=0,n=1
         4 001206   000000 000014                    ADSC9   0,,PR0                   cn=0,n=12

      474    14632    3         KL$ACBLK.LIST(0) = AS_BLANK ;

  14632  4 001207   040100 100400                    MLR     fill='040'O
         4 001210   000000 000001 xsym               ADSC9   AS_BLANK                 cn=0,n=1
         4 001211   000001 000010                    ADSC9   1,,PR0                   cn=0,n=8

      475    14633    3         KL$WSNHDR.ACCSDISP = OFFSET ;

PL6.E3A0      #001=ASW$WSN File=ASW$WSN.:E05TSI                                  TUE 07/29/97 10:57 Page:94   
  14633  4 001212   000000 620005                    EAX0    0,AL
         4 001213   200067 471500                    LDP1    WSNHDR$,,AUTO
         4 001214   100000 440100                    SXL0    0,,PR1

      476    14634    3         ACC_ARS = LENGTHC( KL$ACBLK ) + LENGTHC( KL$ACBLK.LIST(0))

  14634  4 001215   000000 235100                    LDA     0,,PR0
         4 001216   000003 735000                    ALS     3
         4 001217   000004 035007                    ADLA    4,DL
         4 001220   200004 755100                    STA     ACC_ARS,,AUTO

      477    14635    3              * ( KL$ACBLK.ACCTS-1 ) ;
      478    14636    3         END ; /* Not indirect */

      479    14637    2      END ; /* Create */

  14637  4 001221   001405 710000 4                  TRA     s:14702

      480    14638    1   ELSE                                        /* Modify */
      481    14639    2   DO ;

      482    14640                                                              /* Seperate access blk */
      483    14641    2      INDIRECT = KL$WSNHDR.INDIRECT#;

  14641  4 001222   200067 470500                    LDP0    WSNHDR$,,AUTO
         4 001223   000000 236100                    LDQ     0,,PR0
         4 001224   400000 376003                    ANQ     -131072,DU
         4 001225   200026 756100                    STQ     INDIRECT,,AUTO

      484    14642    3      IF INDIRECT THEN DO;

  14642  4 001226   200026 234100                    SZN     INDIRECT,,AUTO
         4 001227   001300 605000 4                  TPL     s:14661

      485    14643
      486    14644    3         ACBLK$ = PINCRW( DSEG1$, ACBLK_OFF1 ) ;

PL6.E3A0      #001=ASW$WSN File=ASW$WSN.:E05TSI                                  TUE 07/29/97 10:57 Page:95   
  14644  4 001230   000024 236000 2                  LDQ     ACBLK_OFF1
         4 001231   000022 736000                    QLS     18
         4 001232   000000 036000 xsym               ADLQ    DSEG1$
         4 001233   200003 756100                    STQ     ACBLK$,,AUTO

      487    14645    3         MOV$ = PINCRW( DSEG1$, KL$INDIRECT_WSN.ACCSDISP + WSNHDR_OFF1 ) ;

  14645  4 001234   000000 236100                    LDQ     0,,PR0
         4 001235   777777 376007                    ANQ     -1,DL
         4 001236   000022 036000 2                  ADLQ    WSNHDR_OFF1
         4 001237   000022 736000                    QLS     18
         4 001240   000000 036000 xsym               ADLQ    DSEG1$
         4 001241   200032 756100                    STQ     MOV$,,AUTO

      488    14646    3         WTBLK$ = MOV$ ;

  14646  4 001242   200073 756100                    STQ     WTBLK$,,AUTO

      489    14647    3         ARS = LENGTHC( KL$ACBLK ) + LENGTHC( KL$ACBLK.LIST(0) )

  14647  4 001243   200032 471500                    LDP1    MOV$,,AUTO
         4 001244   100000 235100                    LDA     0,,PR1
         4 001245   000003 735000                    ALS     3
         4 001246   000004 035007                    ADLA    4,DL
         4 001247   200005 755100                    STA     ARS,,AUTO

      490    14648    3              * (MOV$ -> KL$ACBLK.ACCTS - 1) ;
      491    14649    3         ACBLK$ -> MOV$STRT = MOV$STRT ;

  14649  4 001250   000000 620005                    EAX0    0,AL
         4 001251   200003 473500                    LDP3    ACBLK$,,AUTO
         4 001252   200005 721100                    LXL1    ARS,,AUTO
         4 001253   040140 100540                    MLR     fill='040'O
         4 001254   100000 000010                    ADSC9   0,,PR1                   cn=0,n=*X0
         4 001255   300000 000011                    ADSC9   0,,PR3                   cn=0,n=*X1

      492    14650    3         ACC_ARS = ARS ;
PL6.E3A0      #001=ASW$WSN File=ASW$WSN.:E05TSI                                  TUE 07/29/97 10:57 Page:96   

  14650  4 001256   200005 235100                    LDA     ARS,,AUTO
         4 001257   200004 755100                    STA     ACC_ARS,,AUTO

      493    14651    3         WH_ARS = WH_ARS - ACC_ARS ;

  14651  4 001260   200057 236100                    LDQ     WH_ARS,,AUTO
         4 001261   200004 136100                    SBLQ    ACC_ARS,,AUTO
         4 001262   200057 756100                    STQ     WH_ARS,,AUTO

      494    14652    3         BLK_SZ = WH_ARS - LENGTHC(KL$INDIRECT_WSN) ;

  14652  4 001263   000024 136007                    SBLQ    20,DL
         4 001264   200014 756100                    STQ     BLK_SZ,,AUTO

      495    14653    3         OFFSET = POFFW( ACBLK$, DSEG1$ ) ;

  14653  4 001265   000000 235000 xsym               LDA     DSEG1$
         4 001266   000022 771000                    ARL     18
         4 001267   202106 755100                    STA     X+1011,,AUTO
         4 001270   200003 236100                    LDQ     ACBLK$,,AUTO
         4 001271   000022 772000                    QRL     18
         4 001272   202106 136100                    SBLQ    X+1011,,AUTO
         4 001273   200040 756100                    STQ     OFFSET,,AUTO

      496    14654    3         KL$INDIRECT_WSN.ACCSDISP = OFFSET ;

  14654  4 001274   000000 620006                    EAX0    0,QL
         4 001275   200067 470500                    LDP0    WSNHDR$,,AUTO
         4 001276   000000 440100                    SXL0    0,,PR0

      497    14655    3         END;    /*  Indirect  */

  14655  4 001277   001405 710000 4                  TRA     s:14702

      498    14656    3      ELSE DO;

PL6.E3A0      #001=ASW$WSN File=ASW$WSN.:E05TSI                                  TUE 07/29/97 10:57 Page:97   
      499    14657        /**/
      500    14658        /*        Read wsndev record from :WSN          */
      501    14659        /*        If not found give error message       */
      502    14660        /**/
      503    14661    3         USERS_KEY = WSN_DEV_KEY ;

  14661  4 001300   000000 100400                    MLR     fill='000'O
         4 001301   000003 000020 2                  ADSC9   WSN_DEV_KEY              cn=0,n=16
         4 001302   000000 000052 xsym               ADSC9   USERS_KEY                cn=0,n=42

      504    14662    3         CALL ASW$ENQ_WSN ALTRET(ENQ_ERR) ;

  14662  4 001303   000002 631400 xsym               EPPR1   B_VECTNIL+2
         4 001304   000000 701000 xent               TSX1    ASW$ENQ_WSN
         4 001305   000265 702000 4                  TSX2    ENQ_ERR

      505    14663    3         WSNDEV_ARS = 4 * DEVWSN_OFF2 ;

  14663  4 001306   000027 235000 2                  LDA     DEVWSN_OFF2
         4 001307   000002 735000                    ALS     2
         4 001310   200065 755100                    STA     WSNDEV_ARS,,AUTO

      506    14664    3         CALL ASW$READ_WSN( WSNDEV$, WSNDEV_ARS )

  14664  4 001311   200065 630500                    EPPR0   WSNDEV_ARS,,AUTO
         4 001312   202107 450500                    STP0    X+1012,,AUTO
         4 001313   200064 631500                    EPPR1   WSNDEV$,,AUTO
         4 001314   202106 451500                    STP1    X+1011,,AUTO
         4 001315   202106 630500                    EPPR0   X+1011,,AUTO
         4 001316   000020 631400 xsym               EPPR1   B_VECTNIL+16
         4 001317   000000 701000 xent               TSX1    ASW$READ_WSN
         4 001320   001322 702000 4                  TSX2    s:14681
         4 001321   001327 710000 4                  TRA     s:14686

      507    14665    4         WHENALTRETURN DO;

      508    14666        /*E*  ERROR:     ASW-E$NOWSNDEV-C
PL6.E3A0      #001=ASW$WSN File=ASW$WSN.:E05TSI                                  TUE 07/29/97 10:57 Page:98   
      509    14667              MESSAGE:   WSN containing DEVICE names does not exist.
      510    14668        */
      511    14669                 %SCREAM( ERR#=E$NOWSNDEV, LEVEL=ERROR, MID='W' );

  14681  4 001322   000014 630400 5                  EPPR0   12
         4 001323   000017 631400 xsym               EPPR1   B_VECTNIL+15
         4 001324   000000 701000 xent               TSX1    ASH$ERROR
         4 001325   000000 011000                    NOP     0

      512    14684    4            RETURN ;

  14684  4 001326   000000 702200 xent               TSX2  ! X66_ARET

      513    14685    4            END; /* Whenaltreturn from READ_WSN */
      514    14686    3         ACBLK$ = PINCRW( DSEG1$, ACBLK_OFF1 ) ;

  14686  4 001327   000024 236000 2                  LDQ     ACBLK_OFF1
         4 001330   000022 736000                    QLS     18
         4 001331   000000 036000 xsym               ADLQ    DSEG1$
         4 001332   200003 756100                    STQ     ACBLK$,,AUTO

      515    14687    3         MOV$ = PINCRW( DSEG1$, KL$WSNHDR.ACCSDISP + WSNHDR_OFF1 ) ;

  14687  4 001333   200067 470500                    LDP0    WSNHDR$,,AUTO
         4 001334   000000 236100                    LDQ     0,,PR0
         4 001335   777777 376007                    ANQ     -1,DL
         4 001336   000022 036000 2                  ADLQ    WSNHDR_OFF1
         4 001337   000022 736000                    QLS     18
         4 001340   000000 036000 xsym               ADLQ    DSEG1$
         4 001341   200032 756100                    STQ     MOV$,,AUTO

      516    14688    3         WTBLK$ = MOV$ ;

  14688  4 001342   200073 756100                    STQ     WTBLK$,,AUTO

      517    14689    3         ARS = LENGTHC( KL$ACBLK ) + LENGTHC( KL$ACBLK.LIST(0) )

PL6.E3A0      #001=ASW$WSN File=ASW$WSN.:E05TSI                                  TUE 07/29/97 10:57 Page:99   
  14689  4 001343   200032 471500                    LDP1    MOV$,,AUTO
         4 001344   100000 235100                    LDA     0,,PR1
         4 001345   000003 735000                    ALS     3
         4 001346   000004 035007                    ADLA    4,DL
         4 001347   200005 755100                    STA     ARS,,AUTO

      518    14690    3              * (MOV$ -> KL$ACBLK.ACCTS - 1) ;
      519    14691    3         ACBLK$ -> MOV$STRT = MOV$STRT ;

  14691  4 001350   000000 620005                    EAX0    0,AL
         4 001351   200003 473500                    LDP3    ACBLK$,,AUTO
         4 001352   200005 721100                    LXL1    ARS,,AUTO
         4 001353   040140 100540                    MLR     fill='040'O
         4 001354   100000 000010                    ADSC9   0,,PR1                   cn=0,n=*X0
         4 001355   300000 000011                    ADSC9   0,,PR3                   cn=0,n=*X1

      520    14692    3         ACC_ARS = ARS ;

  14692  4 001356   200005 235100                    LDA     ARS,,AUTO
         4 001357   200004 755100                    STA     ACC_ARS,,AUTO

      521    14693    3         WH_ARS = WH_ARS - ACC_ARS ;

  14693  4 001360   200057 236100                    LDQ     WH_ARS,,AUTO
         4 001361   200004 136100                    SBLQ    ACC_ARS,,AUTO
         4 001362   200057 756100                    STQ     WH_ARS,,AUTO

      522    14694    3         BLK_SZ = WH_ARS - (LENGTHC(KL$WSNHDR) +

  14694  4 001363   200067 470500                    LDP0    WSNHDR$,,AUTO
         4 001364   000003 236100                    LDQ     3,,PR0
         4 001365   000002 736000                    QLS     2
         4 001366   000027 676000 xsym               ERQ     B_VECTNIL+23
         4 001367   000001 036007                    ADLQ    1,DL
         4 001370   200057 036100                    ADLQ    WH_ARS,,AUTO
         4 001371   000020 136007                    SBLQ    16,DL
         4 001372   200014 756100                    STQ     BLK_SZ,,AUTO
PL6.E3A0      #001=ASW$WSN File=ASW$WSN.:E05TSI                                  TUE 07/29/97 10:57 Page:100  

      523    14695    3              LENGTHC(KL$WSNHDR.TYPS) * (KL$WSNHDR.NTYP-1) ) ;
      524    14696    3         INCR=BLK_SZ;

  14696  4 001373   200025 756100                    STQ     INCR,,AUTO

      525    14697    3         OFFSET = POFFW( ACBLK$, DSEG1$ ) ;

  14697  4 001374   000000 235000 xsym               LDA     DSEG1$
         4 001375   000022 771000                    ARL     18
         4 001376   202106 755100                    STA     X+1011,,AUTO
         4 001377   200003 236100                    LDQ     ACBLK$,,AUTO
         4 001400   000022 772000                    QRL     18
         4 001401   202106 136100                    SBLQ    X+1011,,AUTO
         4 001402   200040 756100                    STQ     OFFSET,,AUTO

      526    14698    3         KL$WSNHDR.ACCSDISP = OFFSET ;

  14698  4 001403   000000 620006                    EAX0    0,QL
         4 001404   000000 440100                    SXL0    0,,PR0

      527    14699    3         END ; /* Not indirect */

      528    14700    2      END ; /* Modify */

      529    14701                                                              /* Check for ghost */
      530    14702    1   IF CONFIG /* Set only for reconfig local, or super is ghost. */

  14702  4 001405   200016 234100                    SZN     CONFIG,,AUTO
         4 001406   001410 605000 4                  TPL     s:14709

      531    14703    2   THEN DO;

      532    14704    2      GOTO DONE_OPTIONS ;

  14704  4 001407   001655 710000 4                  TRA     DONE_OPTIONS

PL6.E3A0      #001=ASW$WSN File=ASW$WSN.:E05TSI                                  TUE 07/29/97 10:57 Page:101  
      533    14705    2      END;
      534    14706                                                              /*                 */
      535    14707                                                              /* Do options */
      536    14708                                                              /* Save some of P_PCB */
      537    14709    1   WORK$ = P_PCB.WORK$ ;

  14709  4 001410   000002 236000 xsym               LDQ     P_PCB+2
         4 001411   200062 756100                    STQ     WORK$,,AUTO

      538    14710    1   WKSZ = P_PCB.WKSZ ;

  14710  4 001412   000005 235000 xsym               LDA     P_PCB+5
         4 001413   000022 771000                    ARL     18
         4 001414   200060 755100                    STA     WKSZ,,AUTO

      539    14711    1   WK_USED = P_PCB.WK_USED ;

  14711  4 001415   000010 235000 xsym               LDA     P_PCB+8
         4 001416   000022 771000                    ARL     18
         4 001417   200061 755100                    STA     WK_USED,,AUTO

      540    14712    1   ROOT$ = P_PCB.ROOT$ ;

  14712  4 001420   000001 236000 xsym               LDQ     P_PCB+1
         4 001421   200042 756100                    STQ     ROOT$,,AUTO

      541    14713                                                              /* Bump past area used. */
      542    14714    1   P_PCB.WORK$ = PINCRW( WORK$, P_PCB.WK_USED ) ;

  14714  4 001422   000010 236000 xsym               LDQ     P_PCB+8
         4 001423   777777 376003                    ANQ     -1,DU
         4 001424   200062 036100                    ADLQ    WORK$,,AUTO
         4 001425   000002 756000 xsym               STQ     P_PCB+2

      543    14715    1   P_PCB.WKSZ = WKSZ - P_PCB.WK_USED ;

  14715  4 001426   202106 755100                    STA     X+1011,,AUTO
PL6.E3A0      #001=ASW$WSN File=ASW$WSN.:E05TSI                                  TUE 07/29/97 10:57 Page:102  
         4 001427   200060 236100                    LDQ     WKSZ,,AUTO
         4 001430   202106 136100                    SBLQ    X+1011,,AUTO
         4 001431   000000 620006                    EAX0    0,QL
         4 001432   000005 740000 xsym               STX0    P_PCB+5

      544    14716                                                              /* Save NODE$ */
      545    14717    1   T_NODE$ = NODE$ ;

  14717  4 001433   000000 236000 xsym               LDQ     NODE$
         4 001434   200056 756100                    STQ     T_NODE$,,AUTO

      546    14718                                                              /* Set ROOT$ */
      547    14719    1   P_PCB.ROOT$ = ADDR( WSN_OPTS_LIST ) ;

  14719  4 001435   000015 236000 5                  LDQ     13
         4 001436   000001 756000 xsym               STQ     P_PCB+1

      548    14720                                                              /* Set up prompt */
      549    14721    1   CALL ASB$SET_PROMPT ( %PROMPT_OPT ) ;

  14721  4 001437   000016 630400 5                  EPPR0   14
         4 001440   000017 631400 xsym               EPPR1   B_VECTNIL+15
         4 001441   000000 701000 xent               TSX1    ASB$SET_PROMPT
         4 001442   000000 011000                    NOP     0

      550    14722    1   MORE = AS_TRUE ;

  14722  4 001443   000000 236000 xsym               LDQ     AS_TRUE
         4 001444   400000 376003                    ANQ     -131072,DU
         4 001445   200031 756100                    STQ     MORE,,AUTO

      551    14723    1   REMEMBER WSN_LOOP IN REMEM_VAR ;

  14723  4 001446   001453 635000 4                  EAA     WSN_LOOP
         4 001447   000000 452400 xsym               STP2    REMEM_VAR
         4 001450   000001 755000 xsym               STA     REMEM_VAR+1

PL6.E3A0      #001=ASW$WSN File=ASW$WSN.:E05TSI                                  TUE 07/29/97 10:57 Page:103  
      552    14724                                                              /**/
      553    14725    2   DO WHILE( MORE ) ;

  14725  4 001451   200031 234100                    SZN     MORE,,AUTO
         4 001452   001643 605000 4                  TPL     s:14835

  14721  4 001453                       WSN_LOOP     null
      554    14726    2   WSN_LOOP: ;
      555    14727    2      CALL ASB$READ_SI( IN_BUF, ARS ) ;

  14727  4 001453   200005 630500                    EPPR0   ARS,,AUTO
         4 001454   202107 450500                    STP0    X+1012,,AUTO
         4 001455   000017 236000 5                  LDQ     15
         4 001456   202106 756100                    STQ     X+1011,,AUTO
         4 001457   202106 630500                    EPPR0   X+1011,,AUTO
         4 001460   000020 631400 xsym               EPPR1   B_VECTNIL+16
         4 001461   000000 701000 xent               TSX1    ASB$READ_SI
         4 001462   000000 011000                    NOP     0

      556    14728    2      P_PCB.NCHARS = ARS ;

  14728  4 001463   200005 235100                    LDA     ARS,,AUTO
         4 001464   000011 755000 xsym               STA     P_PCB+9

      557    14729    2      CALL X$PARSE( P_PCB ) ALTRET( PARSE_ERR ) ;

  14729  4 001465   000001 630400 5                  EPPR0   1
         4 001466   000017 631400 xsym               EPPR1   B_VECTNIL+15
         4 001467   000000 701000 xent               TSX1    X$PARSE
         4 001470   001472 702000 4                  TSX2    PARSE_ERR

      558    14730    3      DO WHILE( '0'B ) ;

  14730  4 001471   001501 710000 4                  TRA     s:14738

  14729  4 001472                       PARSE_ERR    null
      559    14731    3   PARSE_ERR: ;
PL6.E3A0      #001=ASW$WSN File=ASW$WSN.:E05TSI                                  TUE 07/29/97 10:57 Page:104  
      560    14732    3         ERR_CODE = P_PCB.ERROR ;

  14732  4 001472   000006 236000 xsym               LDQ     P_PCB+6
         4 001473   000000 756000 xsym               STQ     ERR_CODE

      561    14733    3         CALL ASH$ERROR( ERR_CODE ) ;

  14733  4 001474   000003 630400 5                  EPPR0   3
         4 001475   000017 631400 xsym               EPPR1   B_VECTNIL+15
         4 001476   000000 701000 xent               TSX1    ASH$ERROR
         4 001477   000000 011000                    NOP     0

      562    14734    3         IF '1'B

  14734  4 001500   001453 710000 4                  TRA     WSN_LOOP

      563    14735    3         THEN
      564    14736    3            GOTO WSN_LOOP ;
      565    14737    3         END ; /* Do WHILE('0'B) */

      566    14738    2      NODE$ = P_PCB.OUT$ ;

  14738  4 001501   000003 236000 xsym               LDQ     P_PCB+3
         4 001502   000000 756000 xsym               STQ     NODE$

      567    14739    3      DO I = 0 TO P$NODE.SUBNODES-1 ;

  14739  4 001503   200024 450100                    STZ     I,,AUTO
         4 001504   001633 710000 4                  TRA     s:14832+3

      568    14740    3         PTR$ = P$NODE.SUBLK$(I) ;

  14740  4 001505   000000 470400 xsym               LDP0    NODE$
         4 001506   200024 720100                    LXL0    I,,AUTO
         4 001507   000003 236110                    LDQ     3,X0,PR0
         4 001510   200041 756100                    STQ     PTR$,,AUTO

PL6.E3A0      #001=ASW$WSN File=ASW$WSN.:E05TSI                                  TUE 07/29/97 10:57 Page:105  
      569    14741    3         CODE = PTR$ -> P$NODE.CODE ;

  14741  4 001511   200041 471500                    LDP1    PTR$,,AUTO
         4 001512   100000 236100                    LDQ     0,,PR1
         4 001513   777777 376007                    ANQ     -1,DL
         4 001514   000000 756000 xsym               STQ     CODE

      570    14742    4         DO SELECT( CODE ) ;

  14742  4 001515   000454 116007                    CMPQ    300,DL
         4 001516   001526 602000 4                  TNC     s:14742+9
         4 001517   001561 600000 4                  TZE     s:14753
         4 001520   000455 116007                    CMPQ    301,DL
         4 001521   001623 602000 4                  TNC     s:14826
         4 001522   001555 600000 4                  TZE     s:14750
         4 001523   000456 116007                    CMPQ    302,DL
         4 001524   001623 601000 4                  TNZ     s:14826
         4 001525   001551 710000 4                  TRA     s:14747
         4 001526   000044 116007                    CMPQ    36,DL
         4 001527   001537 602000 4                  TNC     s:14742+18
         4 001530   001574 600000 4                  TZE     s:14761
         4 001531   000047 116007                    CMPQ    39,DL
         4 001532   001623 602000 4                  TNC     s:14826
         4 001533   001606 600000 4                  TZE     s:14786
         4 001534   000052 116007                    CMPQ    42,DL
         4 001535   001623 601000 4                  TNZ     s:14826
         4 001536   001620 710000 4                  TRA     s:14808
         4 001537   000020 116007                    CMPQ    16,DL
         4 001540   001545 602000 4                  TNC     s:14742+24
         4 001541   001550 600000 4                  TZE     s:14744
         4 001542   000032 116007                    CMPQ    26,DL
         4 001543   001623 601000 4                  TNZ     s:14826
         4 001544   001565 710000 4                  TRA     s:14757
         4 001545   000014 116007                    CMPQ    12,DL
         4 001546   001623 601000 4                  TNZ     s:14826
         4 001547   001565 710000 4                  TRA     s:14757

PL6.E3A0      #001=ASW$WSN File=ASW$WSN.:E05TSI                                  TUE 07/29/97 10:57 Page:106  
      571    14743                                                              /**/
      572    14744    4            SELECT( 16   /*  EOL_VAL  */ ) ;

  14744  4 001550   001630 710000 4                  TRA     s:14832

      573    14745                                                                  /**/
      574    14746    4            SELECT( 302 /* HELP_VAL */ );

      575    14747    4            CALL ASH$HELP ;

  14747  4 001551   000002 631400 xsym               EPPR1   B_VECTNIL+2
         4 001552   000000 701000 xent               TSX1    ASH$HELP
         4 001553   000000 011000                    NOP     0
         4 001554   001630 710000 4                  TRA     s:14832

      576    14748                                                                  /**/
      577    14749    4            SELECT( 301 /* QUESTION_VAL */ ) ;

      578    14750    4            CALL ASH$QUEST ;

  14750  4 001555   000002 631400 xsym               EPPR1   B_VECTNIL+2
         4 001556   000000 701000 xent               TSX1    ASH$QUEST
         4 001557   000000 011000                    NOP     0
         4 001560   001630 710000 4                  TRA     s:14832

      579    14751                                                                  /**/
      580    14752    4            SELECT( 300 /* DQUESTION_VAL */ ) ;

      581    14753    4            CALL ASH$DQUEST ;

  14753  4 001561   000002 631400 xsym               EPPR1   B_VECTNIL+2
         4 001562   000000 701000 xent               TSX1    ASH$DQUEST
         4 001563   000000 011000                    NOP     0
         4 001564   001630 710000 4                  TRA     s:14832

      582    14754                                                                  /**/
      583    14755    4            SELECT( 12   /*  END_VAL  */ ,
PL6.E3A0      #001=ASW$WSN File=ASW$WSN.:E05TSI                                  TUE 07/29/97 10:57 Page:107  

      584    14756    4                 26   /*  BLANK_LINE_VAL */ ) ;
      585    14757    4            I = P$NODE.SUBNODES ;

  14757  4 001565   000001 236100                    LDQ     1,,PR0
         4 001566   000022 772000                    QRL     18
         4 001567   200024 756100                    STQ     I,,AUTO

      586    14758    4            MORE = AS_FALSE ;

  14758  4 001570   000000 236000 xsym               LDQ     AS_FALSE
         4 001571   400000 376003                    ANQ     -131072,DU
         4 001572   200031 756100                    STQ     MORE,,AUTO
         4 001573   001630 710000 4                  TRA     s:14832

      587    14759                                                              /**/
      588    14760    4            SELECT( 36 /* W_DEV_OPT */ ) ;

      589    14761    4            IF NOT INDIRECT THEN

  14761  4 001574   200026 234100                    SZN     INDIRECT,,AUTO
         4 001575   001601 604000 4                  TMI     s:14779

      590    14762    4               CALL WSN_DEV ;

  14762  4 001576   002364 701000 4                  TSX1    WSN_DEV
         4 001577   000000 011000                    NOP     0
         4 001600   001630 710000 4                  TRA     s:14832

      591    14763    5            ELSE DO;

      592    14764        /*E*  ERROR:    ASW-E$NOT_INDIRECT_OPT-C
      593    14765             MESSAGE: This option is not legal for an indirect WSN.
      594    14766        */
      595    14767                    %SCREAM (ERR#=%E$NOT_INDIRECT_OPT, LEVEL=ERROR, MID='W');

  14779  4 001601   000020 630400 5                  EPPR0   16
PL6.E3A0      #001=ASW$WSN File=ASW$WSN.:E05TSI                                  TUE 07/29/97 10:57 Page:108  
         4 001602   000017 631400 xsym               EPPR1   B_VECTNIL+15
         4 001603   000000 701000 xent               TSX1    ASH$ERROR
         4 001604   000000 011000                    NOP     0

      596    14782    5               GOTO WSN_LOOP;

  14782  4 001605   001453 710000 4                  TRA     WSN_LOOP

      597    14783    5               END;   /*  Indirect  */
      598    14784                                                              /**/
      599    14785    4            SELECT( 39 /* W_DFORM_VAL */ ) ;

      600    14786    4            IF NOT INDIRECT THEN

  14786  4 001606   200026 234100                    SZN     INDIRECT,,AUTO
         4 001607   001613 604000 4                  TMI     s:14801

      601    14787    4               CALL WSN_DFORM ;

  14787  4 001610   001754 701000 4                  TSX1    WSN_DFORM
         4 001611   000000 011000                    NOP     0
         4 001612   001630 710000 4                  TRA     s:14832

      602    14788    5            ELSE DO;

      603    14789                    %SCREAM (ERR#=%E$NOT_INDIRECT_OPT, LEVEL=ERROR, MID='W');

  14801  4 001613   000020 630400 5                  EPPR0   16
         4 001614   000017 631400 xsym               EPPR1   B_VECTNIL+15
         4 001615   000000 701000 xent               TSX1    ASH$ERROR
         4 001616   000000 011000                    NOP     0

      604    14804    5               GOTO WSN_LOOP;

  14804  4 001617   001453 710000 4                  TRA     WSN_LOOP

      605    14805    5               END;   /*  Indirect  */
PL6.E3A0      #001=ASW$WSN File=ASW$WSN.:E05TSI                                  TUE 07/29/97 10:57 Page:109  
      606    14806                                                              /**/
      607    14807    4            SELECT( 42 /* W_ACCESS_OPT */ ) ;

      608    14808    4            CALL WSN_ACCESS ;

  14808  4 001620   002135 701000 4                  TSX1    WSN_ACCESS
         4 001621   000000 011000                    NOP     0
         4 001622   001630 710000 4                  TRA     s:14832

      609    14809                                                              /**/
      610    14810    4            SELECT( ELSE ) ;

      611    14811        /*E*  ERROR:    ASW-E$ILLEGALOPT-C
      612    14812              MESSAGE:  Illegal option.
      613    14813        */
      614    14814              %SCREAM( ERR#=E$ILLEGALOPT, LEVEL=ERROR, MID='W' );

  14826  4 001623   000021 630400 5                  EPPR0   17
         4 001624   000017 631400 xsym               EPPR1   B_VECTNIL+15
         4 001625   000000 701000 xent               TSX1    ASH$ERROR
         4 001626   000000 011000                    NOP     0

      615    14829    4         GOTO WSN_LOOP ;

  14829  4 001627   001453 710000 4                  TRA     WSN_LOOP

      616    14830                                                              /**/
      617    14831    4            END ; /* Do case */

      618    14832    3         END ; /* Do i */

  14832  4 001630   200024 235100                    LDA     I,,AUTO
         4 001631   000001 035007                    ADLA    1,DL
         4 001632   200024 755100                    STA     I,,AUTO
         4 001633   000000 470400 xsym               LDP0    NODE$
         4 001634   000001 236100                    LDQ     1,,PR0
         4 001635   000022 772000                    QRL     18
PL6.E3A0      #001=ASW$WSN File=ASW$WSN.:E05TSI                                  TUE 07/29/97 10:57 Page:110  
         4 001636   200024 116100                    CMPQ    I,,AUTO
         4 001637   001641 600000 4                  TZE     s:14833
         4 001640   001505 603000 4                  TRC     s:14740

      619    14833    2      END ; /* Do while */

  14833  4 001641   200031 234100                    SZN     MORE,,AUTO
         4 001642   001453 604000 4                  TMI     WSN_LOOP

      620    14834                                                              /* Restore P_PCB */
      621    14835    1   P_PCB.WORK$ = WORK$ ;

  14835  4 001643   200062 236100                    LDQ     WORK$,,AUTO
         4 001644   000002 756000 xsym               STQ     P_PCB+2

      622    14836    1   P_PCB.WKSZ = WKSZ ;

  14836  4 001645   200060 720100                    LXL0    WKSZ,,AUTO
         4 001646   000005 740000 xsym               STX0    P_PCB+5

      623    14837    1   P_PCB.WK_USED = WK_USED ;

  14837  4 001647   200061 721100                    LXL1    WK_USED,,AUTO
         4 001650   000010 741000 xsym               STX1    P_PCB+8

      624    14838    1   P_PCB.ROOT$ = ROOT$ ;

  14838  4 001651   200042 236100                    LDQ     ROOT$,,AUTO
         4 001652   000001 756000 xsym               STQ     P_PCB+1

      625    14839                                                              /* Restore NODE$ */
      626    14840    1   NODE$ = T_NODE$ ;

  14840  4 001653   200056 236100                    LDQ     T_NODE$,,AUTO
         4 001654   000000 756000 xsym               STQ     NODE$

  14840  4 001655                       DONE_OPTIONS null
PL6.E3A0      #001=ASW$WSN File=ASW$WSN.:E05TSI                                  TUE 07/29/97 10:57 Page:111  
      627    14841                                                              /**/
      628    14842    1   DONE_OPTIONS: ;
      629    14843                                                              /* Move access blk */
      630    14844    1   ACBLK$ = PINCRW( DSEG1$, KL$WSNHDR.ACCSDISP ) ;

  14844  4 001655   200067 470500                    LDP0    WSNHDR$,,AUTO
         4 001656   000000 720100                    LXL0    0,,PR0
         4 001657   000000 636010                    EAQ     0,X0
         4 001660   000000 036000 xsym               ADLQ    DSEG1$
         4 001661   200003 756100                    STQ     ACBLK$,,AUTO

      631    14845    1   ARS = ACC_ARS ;

  14845  4 001662   200004 235100                    LDA     ACC_ARS,,AUTO
         4 001663   200005 755100                    STA     ARS,,AUTO

      632    14846    1   MOV$STRT = ACBLK$ -> MOV$STRT ;

  14846  4 001664   200003 471500                    LDP1    ACBLK$,,AUTO
         4 001665   000000 620005                    EAX0    0,AL
         4 001666   200032 473500                    LDP3    MOV$,,AUTO
         4 001667   200005 721100                    LXL1    ARS,,AUTO
         4 001670   040140 100540                    MLR     fill='040'O
         4 001671   100000 000010                    ADSC9   0,,PR1                   cn=0,n=*X0
         4 001672   300000 000011                    ADSC9   0,,PR3                   cn=0,n=*X1

      633    14847    1   KL$WSNHDR.ACCSDISP = WH_ARS/4 ;

  14847  4 001673   200057 236100                    LDQ     WH_ARS,,AUTO
         4 001674   000002 772000                    QRL     2
         4 001675   000000 620006                    EAX0    0,QL
         4 001676   200067 470500                    LDP0    WSNHDR$,,AUTO
         4 001677   000000 440100                    SXL0    0,,PR0

      634    14848    1   WH_ARS = WH_ARS + ACC_ARS ;

  14848  4 001700   200057 236100                    LDQ     WH_ARS,,AUTO
PL6.E3A0      #001=ASW$WSN File=ASW$WSN.:E05TSI                                  TUE 07/29/97 10:57 Page:112  
         4 001701   200004 036100                    ADLQ    ACC_ARS,,AUTO
         4 001702   200057 756100                    STQ     WH_ARS,,AUTO

      635    14849                                                              /* Output :WSN record */
      636    14850    1   USERS_KEY = WSN_KEY ;

  14850  4 001703   000000 100400                    MLR     fill='000'O
         4 001704   000000 000012 2                  ADSC9   WSN_KEY                  cn=0,n=10
         4 001705   000000 000052 xsym               ADSC9   USERS_KEY                cn=0,n=42

      637    14851    1   CALL ASW$WRITE_WSN(  WSNHDR$, WH_ARS ) ALTRET (WRITE_WSN_ERR);

  14851  4 001706   200057 630500                    EPPR0   WH_ARS,,AUTO
         4 001707   202107 450500                    STP0    X+1012,,AUTO
         4 001710   200067 634500                    EPPR4   WSNHDR$,,AUTO
         4 001711   202106 454500                    STP4    X+1011,,AUTO
         4 001712   202106 630500                    EPPR0   X+1011,,AUTO
         4 001713   000020 631400 xsym               EPPR1   B_VECTNIL+16
         4 001714   000000 701000 xent               TSX1    ASW$WRITE_WSN
         4 001715   001741 702000 4                  TSX2    WRITE_WSN_ERR

      638    14852    2   IF NOT INDIRECT THEN DO;

  14852  4 001716   200026 234100                    SZN     INDIRECT,,AUTO
         4 001717   001745 604000 4                  TMI     s:14861

      639    14853    2      USERS_KEY = WSN_DEV_KEY ;

  14853  4 001720   000000 100400                    MLR     fill='000'O
         4 001721   000003 000020 2                  ADSC9   WSN_DEV_KEY              cn=0,n=16
         4 001722   000000 000052 xsym               ADSC9   USERS_KEY                cn=0,n=42

      640    14854    2      WSNDEV_ARS = LENGTHC(KL$WSNDEV) + LENGTHC(KL$WSNDEV.DEV)*(KL$WSNDEV.NDEV-1);

  14854  4 001723   200064 470500                    LDP0    WSNDEV$,,AUTO
         4 001724   000000 235100                    LDA     0,,PR0
         4 001725   000003 735000                    ALS     3
PL6.E3A0      #001=ASW$WSN File=ASW$WSN.:E05TSI                                  TUE 07/29/97 10:57 Page:113  
         4 001726   000004 035007                    ADLA    4,DL
         4 001727   200065 755100                    STA     WSNDEV_ARS,,AUTO

      641    14855    2      CALL ASW$WRITE_WSN(  WSNDEV$, WSNDEV_ARS )

  14855  4 001730   200065 631500                    EPPR1   WSNDEV_ARS,,AUTO
         4 001731   202107 451500                    STP1    X+1012,,AUTO
         4 001732   200064 633500                    EPPR3   WSNDEV$,,AUTO
         4 001733   202106 453500                    STP3    X+1011,,AUTO
         4 001734   202106 630500                    EPPR0   X+1011,,AUTO
         4 001735   000020 631400 xsym               EPPR1   B_VECTNIL+16
         4 001736   000000 701000 xent               TSX1    ASW$WRITE_WSN
         4 001737   001741 702000 4                  TSX2    WRITE_WSN_ERR
         4 001740   001745 710000 4                  TRA     s:14861

      642    14856    3      WHENALTRETURN DO;

      643    14857    3   WRITE_WSN_ERR:
      644    14858    3         CALL ASH$ERROR (ERR_CODE);

  14858  4 001741   000003 630400 5     WRITE_WSN_E* EPPR0   3
         4 001742   000017 631400 xsym               EPPR1   B_VECTNIL+15
         4 001743   000000 701000 xent               TSX1    ASH$ERROR
         4 001744   000000 011000                    NOP     0

      645    14859    3         END;  /*  Whenaltreturn  */

      646    14860    2      END;  /*  Not indirect  */

      647    14861    1   CALL ASW$DEQ_WSN ;

  14861  4 001745   000002 631400 xsym               EPPR1   B_VECTNIL+2
         4 001746   000000 701000 xent               TSX1    ASW$DEQ_WSN
         4 001747   000000 011000                    NOP     0

      648    14862    1   CALL ASB$DEQ_HLP ;

PL6.E3A0      #001=ASW$WSN File=ASW$WSN.:E05TSI                                  TUE 07/29/97 10:57 Page:114  
  14862  4 001750   000002 631400 xsym               EPPR1   B_VECTNIL+2
         4 001751   000000 701000 xent               TSX1    ASB$DEQ_HLP
         4 001752   000000 011000                    NOP     0

      649    14863    1   RETURN ;

  14863  4 001753   000000 702200 xent               TSX2  ! X66_ARET

      650    14864                                                                   /**/
      651    14865        %EJECT;
PL6.E3A0      #001=ASW$WSN File=ASW$WSN.:E05TSI                                  TUE 07/29/97 10:57 Page:115  
      652    14866    1   WSN_DFORM: PROC ;

  14866  4 001754   200076 741300       WSN_DFORM    STX1  ! WTB_SZ+2,,AUTO

      653    14867        /*********************************************************************/
      654    14868        /*   Entries         entries         entries         entries         */
      655    14869        /*********************************************************************/
      656    14870                                                              /**/
      657    14871        %ASF$READ_FORM ;
      658    14874        %EJECT ;
PL6.E3A0      #001=ASW$WSN File=ASW$WSN.:E05TSI                                  TUE 07/29/97 10:57 Page:116  
      659    14875        /*********************************************************************/
      660    14876        /*   Auto data       auto data       auto data       auto data       */
      661    14877        /*********************************************************************/
      662    14878                                                              /**/
      663    14879    2   DCL BUF$ PTR ;
      664    14880    2   DCL BUF_ARS UBIN WORD ;
      665    14881    2   DCL TYPE CHAR(2) ;
      666    14882    2   DCL I UBIN WORD ;
      667    14883    2   DCL DFORM$ PTR ;
      668    14884    2   DCL FORM_FLG BIT(1) ;
      669    14885    2   DCL FORM_BUF CHAR(4096);
      670    14886        %EJECT;
PL6.E3A0      #001=ASW$WSN File=ASW$WSN.:E05TSI                                  TUE 07/29/97 10:57 Page:117  
      671    14887        /********************************************************************/
      672    14888        /*   Procedure       procedure       procedure       procedure       */
      673    14889        /*********************************************************************/
      674    14890                                                              /**/
      675    14891                                                              /* Pick up type */
      676    14892    2   BLK$ = PTR$ -> P$NODE.SUBLK$(0) -> P$NODE.SUBLK$(0) ;

  14892  4 001755   200041 470500                    LDP0    PTR$,,AUTO
         4 001756   000003 471500                    LDP1    3,,PR0
         4 001757   100003 236100                    LDQ     3,,PR1
         4 001760   200013 756100                    STQ     BLK$,,AUTO

      677    14893    2   IF OUT$SYM.COUNT > 2

  14893  4 001761   200013 473500                    LDP3    BLK$,,AUTO
         4 001762   300004 236100                    LDQ     4,,PR3
         4 001763   777000 376003                    ANQ     -512,DU
         4 001764   003000 116003                    CMPQ    1536,DU
         4 001765   001774 602000 4                  TNC     s:14917

      678    14894    2   THEN
      679    14895    3   DO ;

      680    14896        /*E*  ERROR:    ASW-E$BADTYPE-C
      681    14897              MESSAGE0: TYPE too long.
      682    14898              MESSAGE1: TYPE can be at most 2 characters long.
      683    14899        */
      684    14900           %SCREAM( ERR#=E$BADTYPE, LEVEL=ERROR, MID='W' );

  14912  4 001766   000022 630400 5                  EPPR0   18
         4 001767   000017 631400 xsym               EPPR1   B_VECTNIL+15
         4 001770   000000 701000 xent               TSX1    ASH$ERROR
         4 001771   000000 011000                    NOP     0

      685    14915    3      RETURN ;

  14915  4 001772   200076 221300                    LDX1  ! WTB_SZ+2,,AUTO
PL6.E3A0      #001=ASW$WSN File=ASW$WSN.:E05TSI                                  TUE 07/29/97 10:57 Page:118  
         4 001773   000001 702211                    TSX2  ! 1,X1

      686    14916    3      END ; /* Then do */
      687    14917    2   TYPE = OUT$SYM.TEXT ;

  14917  4 001774   300004 236100                    LDQ     4,,PR3
         4 001775   000033 772000                    QRL     27
         4 001776   000000 620006                    EAX0    0,QL
         4 001777   040100 100540                    MLR     fill='040'O
         4 002000   300004 200010                    ADSC9   4,,PR3                   cn=1,n=*X0
         4 002001   200101 000002                    ADSC9   TYPE,,AUTO               cn=0,n=2

      688    14918                                                              /* Pick up fname */
      689    14919    2   BLK$ = PTR$ -> P$NODE.SUBLK$(1) -> P$NODE.SUBLK$(0) ;

  14919  4 002002   000004 474500                    LDP4    4,,PR0
         4 002003   400003 236100                    LDQ     3,,PR4
         4 002004   200013 756100                    STQ     BLK$,,AUTO

      690    14920    2   IF OUT$SYM.COUNT > 6

  14920  4 002005   200013 473500                    LDP3    BLK$,,AUTO
         4 002006   300004 236100                    LDQ     4,,PR3
         4 002007   777000 376003                    ANQ     -512,DU
         4 002010   007000 116003                    CMPQ    3584,DU
         4 002011   002020 602000 4                  TNC     s:14944

      691    14921    2   THEN
      692    14922    3   DO ;

      693    14923        /*E*  ERROR:    ASW-E$BADFNAME-C
      694    14924              MESSAGE0: FORM NAME too long.
      695    14925              MESSAGE1: FORM NAME can be at most 6 characters long.
      696    14926        */
      697    14927           %SCREAM( ERR#=E$BADFNAME, LEVEL=ERROR, MID='W' );

  14939  4 002012   000023 630400 5                  EPPR0   19
PL6.E3A0      #001=ASW$WSN File=ASW$WSN.:E05TSI                                  TUE 07/29/97 10:57 Page:119  
         4 002013   000017 631400 xsym               EPPR1   B_VECTNIL+15
         4 002014   000000 701000 xent               TSX1    ASH$ERROR
         4 002015   000000 011000                    NOP     0

      698    14942    3      RETURN ;

  14942  4 002016   200076 221300                    LDX1  ! WTB_SZ+2,,AUTO
         4 002017   000001 702211                    TSX2  ! 1,X1

      699    14943    3      END ; /* Then do */
      700    14944    2   USERS_KEY.COUNT = 6 ;

  14944  4 002020   006000 236003                    LDQ     3072,DU
         4 002021   000000 552040 xsym               STBQ    USERS_KEY,'40'O

      701    14945    2   USERS_KEY.TXTC = OUT$SYM.TEXT ;

  14945  4 002022   300004 236100                    LDQ     4,,PR3
         4 002023   000033 772000                    QRL     27
         4 002024   000000 620006                    EAX0    0,QL
         4 002025   040000 100540                    MLR     fill='040'O
         4 002026   300004 200010                    ADSC9   4,,PR3                   cn=1,n=*X0
         4 002027   000000 200051 xsym               ADSC9   USERS_KEY                cn=1,n=41

      702    14946                                                              /* Check if form exists. */
      703    14947    2   BUF$ = ADDR( FORM_BUF ) ;

  14947  4 002030   200105 631500                    EPPR1   FORM_BUF,,AUTO
         4 002031   200077 451500                    STP1    BUF$,,AUTO

      704    14948    2   BUF_ARS = LENGTHC( FORM_BUF ) ;

  14948  4 002032   010000 235007                    LDA     4096,DL
         4 002033   200100 755100                    STA     BUF_ARS,,AUTO

      705    14949    2   CALL ASF$READ_FORM( USERS_KEY, BUF$, BUF_ARS ) ALTRET( READ_FORM_ERR ) ;

PL6.E3A0      #001=ASW$WSN File=ASW$WSN.:E05TSI                                  TUE 07/29/97 10:57 Page:120  
  14949  4 002034   200100 634500                    EPPR4   BUF_ARS,,AUTO
         4 002035   202110 454500                    STP4    X+1013,,AUTO
         4 002036   200077 635500                    EPPR5   BUF$,,AUTO
         4 002037   202107 455500                    STP5    X+1012,,AUTO
         4 002040   000024 236000 5                  LDQ     20
         4 002041   202106 756100                    STQ     X+1011,,AUTO
         4 002042   202106 630500                    EPPR0   X+1011,,AUTO
         4 002043   000021 631400 xsym               EPPR1   B_VECTNIL+17
         4 002044   000000 701000 xent               TSX1    ASF$READ_FORM
         4 002045   002047 702000 4                  TSX2    READ_FORM_ERR

      706    14950    3   IF '0'B THEN DO;

  14950  4 002046   002060 710000 4                  TRA     s:14973

      707    14951    3   READ_FORM_ERR: ;

  14951  4 002047                       READ_FORM_E* null
      708    14952        /*E*  ERROR:    ASW-E$FNOEXIST-C
      709    14953              MESSAGE0: %%U1 %does not exist.
      710    14954        */
      711    14955    3      AS_FIELD1 = USERS_KEY;

  14955  4 002047   000000 100400                    MLR     fill='000'O
         4 002050   000000 000051 xsym               ADSC9   USERS_KEY                cn=0,n=41
         4 002051   000000 000051 xsym               ADSC9   AS_FIELD1                cn=0,n=41

      712    14956           %SCREAM( ERR#=E$FNOEXIST, LEVEL=ERROR, MID='W' );

  14968  4 002052   000025 630400 5                  EPPR0   21
         4 002053   000017 631400 xsym               EPPR1   B_VECTNIL+15
         4 002054   000000 701000 xent               TSX1    ASH$ERROR
         4 002055   000000 011000                    NOP     0

      713    14971    3      RETURN;

  14971  4 002056   200076 221300                    LDX1  ! WTB_SZ+2,,AUTO
PL6.E3A0      #001=ASW$WSN File=ASW$WSN.:E05TSI                                  TUE 07/29/97 10:57 Page:121  
         4 002057   000001 702211                    TSX2  ! 1,X1

      714    14972    3      END ;
      715    14973    2   FORM_FLG = AS_FALSE ;

  14973  4 002060   000000 236000 xsym               LDQ     AS_FALSE
         4 002061   400000 376003                    ANQ     -131072,DU
         4 002062   200104 756100                    STQ     FORM_FLG,,AUTO

      716    14974    3   DO I = 0 TO KL$WSNHDR.NTYP-1 ;

  14974  4 002063   200102 450100                    STZ     I,,AUTO
         4 002064   002112 710000 4                  TRA     s:14982+3

      717    14975    3      IF KL$WSNHDR.TYPS.TYP( I ) = TYPE

  14975  4 002065   200067 470500                    LDP0    WSNHDR$,,AUTO
         4 002066   200102 720100                    LXL0    I,,AUTO
         4 002067   000004 221110                    LDX1    4,X0,PR0
         4 002070   200101 101100                    CMPX1   TYPE,,AUTO
         4 002071   002107 601000 4                  TNZ     s:14982

      718    14976    3      THEN
      719    14977    4      DO ;

      720    14978    4         DFORM$ = PINCRW( DSEG1$, KL$WSNHDR.TYPS.DISP(I) + WSNHDR_OFF1) ;

  14978  4 002072   000004 236110                    LDQ     4,X0,PR0
         4 002073   777777 376007                    ANQ     -1,DL
         4 002074   000022 036000 2                  ADLQ    WSNHDR_OFF1
         4 002075   000022 736000                    QLS     18
         4 002076   000000 036000 xsym               ADLQ    DSEG1$
         4 002077   200103 756100                    STQ     DFORM$,,AUTO

      721    14979    4         DFORM$ -> KL$WTBLK.FNAME = USERS_KEY.TXTC ;

  14979  4 002100   200103 471500                    LDP1    DFORM$,,AUTO
PL6.E3A0      #001=ASW$WSN File=ASW$WSN.:E05TSI                                  TUE 07/29/97 10:57 Page:122  
         4 002101   040100 100400                    MLR     fill='040'O
         4 002102   000000 200006 xsym               ADSC9   USERS_KEY                cn=1,n=6
         4 002103   100002 000006                    ADSC9   2,,PR1                   cn=0,n=6

      722    14980    4         FORM_FLG = AS_TRUE ;

  14980  4 002104   000000 236000 xsym               LDQ     AS_TRUE
         4 002105   400000 376003                    ANQ     -131072,DU
         4 002106   200104 756100                    STQ     FORM_FLG,,AUTO

      723    14981    4         END ;  /* Then do */

      724    14982    3      END ; /* Do i */

  14982  4 002107   200102 235100                    LDA     I,,AUTO
         4 002110   000001 035007                    ADLA    1,DL
         4 002111   200102 755100                    STA     I,,AUTO
         4 002112   200067 470500                    LDP0    WSNHDR$,,AUTO
         4 002113   200102 236100                    LDQ     I,,AUTO
         4 002114   000003 116100                    CMPQ    3,,PR0
         4 002115   002065 602000 4                  TNC     s:14975

      725    14983    2   IF FORM_FLG = AS_FALSE

  14983  4 002116   200104 236100                    LDQ     FORM_FLG,,AUTO
         4 002117   000000 676000 xsym               ERQ     AS_FALSE
         4 002120   400000 376003                    ANQ     -131072,DU
         4 002121   002133 601000 4                  TNZ     s:15008

      726    14984    2   THEN                                        /* Didn't find that type */
      727    14985    3   DO ;

      728    14986        /*E*  ERROR:    ASW-E$NOTYPE-C
      729    14987              MESSAGE0: Didn't find that type.
      730    14988              MESSAGE1: Didn't find %U1.
      731    14989        */
      732    14990    3      AS_FIELD1.COUNT = 2 ;
PL6.E3A0      #001=ASW$WSN File=ASW$WSN.:E05TSI                                  TUE 07/29/97 10:57 Page:123  

  14990  4 002122   002000 236003                    LDQ     1024,DU
         4 002123   000000 552040 xsym               STBQ    AS_FIELD1,'40'O

      733    14991    3      AS_FIELD1.TEXT = TYPE ;

  14991  4 002124   040000 100500                    MLR     fill='040'O
         4 002125   200101 000002                    ADSC9   TYPE,,AUTO               cn=0,n=2
         4 002126   000000 200050 xsym               ADSC9   AS_FIELD1                cn=1,n=40

      734    14992           %SCREAM( ERR#=E$NOTYPE, LEVEL=ERROR, MID='W' );

  15004  4 002127   000026 630400 5                  EPPR0   22
         4 002130   000017 631400 xsym               EPPR1   B_VECTNIL+15
         4 002131   000000 701000 xent               TSX1    ASH$ERROR
         4 002132   000000 011000                    NOP     0

      735    15007    3      END ;  /* Then do */

      736    15008    2   RETURN ;

  15008  4 002133   200076 221300                    LDX1  ! WTB_SZ+2,,AUTO
         4 002134   000001 702211                    TSX2  ! 1,X1

      737    15009                                                              /**/
      738    15010    2   END   WSN_DFORM ;
      739    15011        %EJECT ;
PL6.E3A0      #001=ASW$WSN File=ASW$WSN.:E05TSI                                  TUE 07/29/97 10:57 Page:124  
      740    15012    1   WSN_ACCESS: PROC ;

  15012  4 002135   200076 741300       WSN_ACCESS   STX1  ! WTB_SZ+2,,AUTO

      741    15013        /*********************************************************************/
      742    15014        /*   Auto data       auto data       auto data       auto data       */
      743    15015        /*********************************************************************/
      744    15016                                                              /**/
      745    15017    2   DCL PTR2$ PTR ;
      746    15018    2   DCL PTR3$ PTR ;
      747    15019    2   DCL I UBIN WORD ;
      748    15020    2   DCL J UBIN WORD ;
      749    15021    2   DCL K UBIN WORD ;
      750    15022    2   DCL SUBS UBIN WORD ;
      751    15023    2   DCL CODE2 UBIN WORD ;
      752    15024    2   DCL ADD_FLG BIT(1) ;
      753    15025        %EJECT;
PL6.E3A0      #001=ASW$WSN File=ASW$WSN.:E05TSI                                  TUE 07/29/97 10:57 Page:125  
      754    15026        /********************************************************************/
      755    15027        /*   Procedure       procedure       procedure       procedure       */
      756    15028        /*********************************************************************/
      757    15029                                                              /**/
      758    15030    2   SUBS = PTR$ -> P$NODE.SUBNODES ;

  15030  4 002136   200041 470500                    LDP0    PTR$,,AUTO
         4 002137   000001 236100                    LDQ     1,,PR0
         4 002140   000022 772000                    QRL     18
         4 002141   200104 756100                    STQ     SUBS,,AUTO

      759    15031    2   ADD_FLG = AS_TRUE ;

  15031  4 002142   000000 236000 xsym               LDQ     AS_TRUE
         4 002143   400000 376003                    ANQ     -131072,DU
         4 002144   200106 756100                    STQ     ADD_FLG,,AUTO

      760    15032                                                       /* Pick up add/remove/option list */
      761    15033    3   DO I = 0 TO SUBS-1 ;

  15033  4 002145   200101 450100                    STZ     I,,AUTO
         4 002146   002203 710000 4                  TRA     s:15047+3

      762    15034    3      CODE2 = PTR$ -> P$NODE.SUBLK$(I) -> P$NODE.CODE ;

  15034  4 002147   200041 470500                    LDP0    PTR$,,AUTO
         4 002150   200101 720100                    LXL0    I,,AUTO
         4 002151   000003 471510                    LDP1    3,X0,PR0
         4 002152   100000 236100                    LDQ     0,,PR1
         4 002153   777777 376007                    ANQ     -1,DL
         4 002154   200105 756100                    STQ     CODE2,,AUTO

      763    15035    4      DO SELECT( CODE2 ) ;

  15035  4 002155   000054 116007                    CMPQ    44,DL
         4 002156   002163 602000 4                  TNC     s:15035+6
         4 002157   002166 600000 4                  TZE     s:15038
PL6.E3A0      #001=ASW$WSN File=ASW$WSN.:E05TSI                                  TUE 07/29/97 10:57 Page:126  
         4 002160   000055 116007                    CMPQ    45,DL
         4 002161   002200 601000 4                  TNZ     s:15047
         4 002162   002172 710000 4                  TRA     s:15041
         4 002163   000053 116007                    CMPQ    43,DL
         4 002164   002200 601000 4                  TNZ     s:15047
         4 002165   002176 710000 4                  TRA     s:15044

      764    15036                                                              /**/
      765    15037    4         SELECT( 44 /* ADD ACCESS */ ) ;

      766    15038    4         ADD_FLG = AS_TRUE ;

  15038  4 002166   000000 236000 xsym               LDQ     AS_TRUE
         4 002167   400000 376003                    ANQ     -131072,DU
         4 002170   200106 756100                    STQ     ADD_FLG,,AUTO
         4 002171   002200 710000 4                  TRA     s:15047

      767    15039                                                              /**/
      768    15040    4         SELECT( 45 /* REMOVE ACCESS */ ) ;

      769    15041    4         ADD_FLG = AS_FALSE ;

  15041  4 002172   000000 236000 xsym               LDQ     AS_FALSE
         4 002173   400000 376003                    ANQ     -131072,DU
         4 002174   200106 756100                    STQ     ADD_FLG,,AUTO
         4 002175   002200 710000 4                  TRA     s:15047

      770    15042                                                              /**/
      771    15043    4         SELECT( 43 /* W_ACCESS_LIST */ ) ;

      772    15044    4         PTR2$ = PTR$ -> P$NODE.SUBLK$(I) ;

  15044  4 002176   000003 236110                    LDQ     3,X0,PR0
         4 002177   200077 756100                    STQ     PTR2$,,AUTO

      773    15045                                                              /**/
      774    15046    4         END ; /* Do case( CODE2 ) */
PL6.E3A0      #001=ASW$WSN File=ASW$WSN.:E05TSI                                  TUE 07/29/97 10:57 Page:127  

      775    15047    3      END ; /* Do i */

  15047  4 002200   200101 235100                    LDA     I,,AUTO
         4 002201   000001 035007                    ADLA    1,DL
         4 002202   200101 755100                    STA     I,,AUTO
         4 002203   200101 236100                    LDQ     I,,AUTO
         4 002204   200104 116100                    CMPQ    SUBS,,AUTO
         4 002205   002147 602000 4                  TNC     s:15034

      776    15048                                                              /**/
      777    15049    2   SUBS = PTR2$ -> P$NODE.SUBNODES ;

  15049  4 002206   200077 471500                    LDP1    PTR2$,,AUTO
         4 002207   100001 236100                    LDQ     1,,PR1
         4 002210   000022 772000                    QRL     18
         4 002211   200104 756100                    STQ     SUBS,,AUTO

      778    15050    3   DO I = 0 TO SUBS - 1 ;

  15050  4 002212   200101 450100                    STZ     I,,AUTO
         4 002213   002357 710000 4                  TRA     s:15124+3

      779    15051    3      BLK$ = PTR2$ -> P$NODE.SUBLK$(I) ;

  15051  4 002214   200077 470500                    LDP0    PTR2$,,AUTO
         4 002215   200101 720100                    LXL0    I,,AUTO
         4 002216   000003 236110                    LDQ     3,X0,PR0
         4 002217   200013 756100                    STQ     BLK$,,AUTO

      780    15052    3      IF OUT$SYM.COUNT > 8

  15052  4 002220   200013 471500                    LDP1    BLK$,,AUTO
         4 002221   100004 236100                    LDQ     4,,PR1
         4 002222   777000 376003                    ANQ     -512,DU
         4 002223   011000 116003                    CMPQ    4608,DU
         4 002224   002233 602000 4                  TNC     s:15076
PL6.E3A0      #001=ASW$WSN File=ASW$WSN.:E05TSI                                  TUE 07/29/97 10:57 Page:128  

      781    15053    3      THEN
      782    15054    4      DO ;

      783    15055        /*E*  ERROR:    ASW-E$ACCTTOOBIG-C
      784    15056              MESSAGE0: ACCOUNT too long.
      785    15057              MESSAGE1: ACCOUNT can be at most 8 characters long.
      786    15058        */
      787    15059              %SCREAM( ERR#=E$ACCTTOOBIG, LEVEL=ERROR, MID='W' );

  15071  4 002225   000027 630400 5                  EPPR0   23
         4 002226   000017 631400 xsym               EPPR1   B_VECTNIL+15
         4 002227   000000 701000 xent               TSX1    ASH$ERROR
         4 002230   000000 011000                    NOP     0

      788    15074    4         RETURN ;

  15074  4 002231   200076 221300                    LDX1  ! WTB_SZ+2,,AUTO
         4 002232   000001 702211                    TSX2  ! 1,X1

      789    15075    4         END ; /* Then do */
      790    15076    4      DO J = 0 TO KL$ACBLK.ACCTS-1 ;

  15076  4 002233   200102 450100                    STZ     J,,AUTO
         4 002234   002253 710000 4                  TRA     s:15080+3

      791    15077    4         IF KL$ACBLK.LIST(J) = OUT$SYM.TEXT

  15077  4 002235   200013 470500                    LDP0    BLK$,,AUTO
         4 002236   000004 236100                    LDQ     4,,PR0
         4 002237   000033 772000                    QRL     27
         4 002240   200102 235100                    LDA     J,,AUTO
         4 002241   000003 735000                    ALS     3
         4 002242   200003 471500                    LDP1    ACBLK$,,AUTO
         4 002243   000000 620006                    EAX0    0,QL
         4 002244   040140 106505                    CMPC    fill='040'O
         4 002245   100001 000010                    ADSC9   1,A,PR1                  cn=0,n=8
PL6.E3A0      #001=ASW$WSN File=ASW$WSN.:E05TSI                                  TUE 07/29/97 10:57 Page:129  
         4 002246   000004 200010                    ADSC9   4,,PR0                   cn=1,n=*X0
         4 002247   002320 600000 4                  TZE     MATCHED

      792    15078    4         THEN
      793    15079    4            GOTO MATCHED ;
      794    15080    4         END ; /* Do j */

  15080  4 002250   200102 235100                    LDA     J,,AUTO
         4 002251   000001 035007                    ADLA    1,DL
         4 002252   200102 755100                    STA     J,,AUTO
         4 002253   200003 470500                    LDP0    ACBLK$,,AUTO
         4 002254   200102 236100                    LDQ     J,,AUTO
         4 002255   000000 116100                    CMPQ    0,,PR0
         4 002256   002235 602000 4                  TNC     s:15077

      795    15081    3      IF ADD_FLG

  15081  4 002257   200106 234100                    SZN     ADD_FLG,,AUTO
         4 002260   002302 605000 4                  TPL     s:15094

      796    15082    3      THEN
      797    15083    4      DO ;

      798    15084    4         KL$ACBLK.LIST( KL$ACBLK.ACCTS ) = OUT$SYM.TEXT ;

  15084  4 002261   000000 235100                    LDA     0,,PR0
         4 002262   000001 735000                    ALS     1
         4 002263   200013 471500                    LDP1    BLK$,,AUTO
         4 002264   100004 236100                    LDQ     4,,PR1
         4 002265   000033 772000                    QRL     27
         4 002266   000002 735000                    ALS     2
         4 002267   000000 620006                    EAX0    0,QL
         4 002270   040105 100540                    MLR     fill='040'O
         4 002271   100004 200010                    ADSC9   4,,PR1                   cn=1,n=*X0
         4 002272   000001 000010                    ADSC9   1,A,PR0                  cn=0,n=8

      799    15085    4         KL$ACBLK.ACCTS = KL$ACBLK.ACCTS + 1 ;
PL6.E3A0      #001=ASW$WSN File=ASW$WSN.:E05TSI                                  TUE 07/29/97 10:57 Page:130  

  15085  4 002273   000000 235100                    LDA     0,,PR0
         4 002274   000001 035007                    ADLA    1,DL
         4 002275   000000 755100                    STA     0,,PR0

      800    15086    4         ACC_ARS = ACC_ARS + LENGTHC( KL$ACBLK.LIST(0) ) ;

  15086  4 002276   200004 236100                    LDQ     ACC_ARS,,AUTO
         4 002277   000010 036007                    ADLQ    8,DL
         4 002300   200004 756100                    STQ     ACC_ARS,,AUTO

      801    15087    4         END ; /* Then do */

  15087  4 002301   002317 710000 4                  TRA     s:15112

      802    15088    3      ELSE
      803    15089    4      DO ;

      804    15090        /*E*  ERROR:    ASW-E$ACCESSNOEXIST-C
      805    15091              MESSAGE0: %%U1 %does not exist in list.
      806    15092              MESSAGE1: %%U1 %was not in ACCESS list.
      807    15093        */
      808    15094    4         AS_FIELD1.COUNT = OUT$SYM.COUNT ;

  15094  4 002302   200013 471500                    LDP1    BLK$,,AUTO
         4 002303   100004 236100                    LDQ     4,,PR1
         4 002304   000000 552040 xsym               STBQ    AS_FIELD1,'40'O

      809    15095    4         AS_FIELD1.TEXT = OUT$SYM.TEXT ;

  15095  4 002305   100004 236100                    LDQ     4,,PR1
         4 002306   000033 772000                    QRL     27
         4 002307   000000 620006                    EAX0    0,QL
         4 002310   040000 100540                    MLR     fill='040'O
         4 002311   100004 200010                    ADSC9   4,,PR1                   cn=1,n=*X0
         4 002312   000000 200050 xsym               ADSC9   AS_FIELD1                cn=1,n=40

PL6.E3A0      #001=ASW$WSN File=ASW$WSN.:E05TSI                                  TUE 07/29/97 10:57 Page:131  
      810    15096              %SCREAM( ERR#=E$ACCESSNOEXIST, LEVEL=ERROR, MID='W' );

  15108  4 002313   000030 630400 5                  EPPR0   24
         4 002314   000017 631400 xsym               EPPR1   B_VECTNIL+15
         4 002315   000000 701000 xent               TSX1    ASH$ERROR
         4 002316   000000 011000                    NOP     0

      811    15111    4         END ; /* Else do */

      812    15112    4      DO WHILE( '0'B ) ;

  15112  4 002317   002354 710000 4                  TRA     s:15124

  15094  4 002320                       MATCHED      null
      813    15113    4   MATCHED: ;
      814    15114    4         IF ADD_FLG = '0'B

  15114  4 002320   200106 234100                    SZN     ADD_FLG,,AUTO
         4 002321   002354 604000 4                  TMI     s:15124

      815    15115    4         THEN
      816    15116    5         DO ;

      817    15117    6            DO K = J+1 TO KL$ACBLK.ACCTS-1 ;

  15117  4 002322   200102 235100                    LDA     J,,AUTO
         4 002323   000001 035007                    ADLA    1,DL
         4 002324   200103 755100                    STA     K,,AUTO
         4 002325   002342 710000 4                  TRA     s:15119+3

      818    15118    6               KL$ACBLK.LIST(K-1) = KL$ACBLK.LIST(K) ;

  15118  4 002326   200103 235100                    LDA     K,,AUTO
         4 002327   000001 735000                    ALS     1
         4 002330   200103 236100                    LDQ     K,,AUTO
         4 002331   000003 736000                    QLS     3
         4 002332   000002 735000                    ALS     2
PL6.E3A0      #001=ASW$WSN File=ASW$WSN.:E05TSI                                  TUE 07/29/97 10:57 Page:132  
         4 002333   200003 470500                    LDP0    ACBLK$,,AUTO
         4 002334   040105 100506                    MLR     fill='040'O
         4 002335   000001 000010                    ADSC9   1,Q,PR0                  cn=0,n=8
         4 002336   077777 000010                    ADSC9   -1,A,PR0                 cn=0,n=8

      819    15119    6               END ; /* Do i */

  15119  4 002337   200103 235100                    LDA     K,,AUTO
         4 002340   000001 035007                    ADLA    1,DL
         4 002341   200103 755100                    STA     K,,AUTO
         4 002342   200003 470500                    LDP0    ACBLK$,,AUTO
         4 002343   200103 236100                    LDQ     K,,AUTO
         4 002344   000000 116100                    CMPQ    0,,PR0
         4 002345   002326 602000 4                  TNC     s:15118

      820    15120    5            KL$ACBLK.ACCTS = KL$ACBLK.ACCTS - 1 ;

  15120  4 002346   000000 235100                    LDA     0,,PR0
         4 002347   000001 135007                    SBLA    1,DL
         4 002350   000000 755100                    STA     0,,PR0

      821    15121    5            ACC_ARS = ACC_ARS - LENGTHC( KL$ACBLK.LIST(0) ) ;

  15121  4 002351   200004 235100                    LDA     ACC_ARS,,AUTO
         4 002352   000010 135007                    SBLA    8,DL
         4 002353   200004 755100                    STA     ACC_ARS,,AUTO

      822    15122    5            END ; /* Then do */

      823    15123    4         END ; /* Do while */

      824    15124    3      END ; /* Do i */

  15124  4 002354   200101 235100                    LDA     I,,AUTO
         4 002355   000001 035007                    ADLA    1,DL
         4 002356   200101 755100                    STA     I,,AUTO
         4 002357   200101 236100                    LDQ     I,,AUTO
PL6.E3A0      #001=ASW$WSN File=ASW$WSN.:E05TSI                                  TUE 07/29/97 10:57 Page:133  
         4 002360   200104 116100                    CMPQ    SUBS,,AUTO
         4 002361   002214 602000 4                  TNC     s:15051

      825    15125                                                              /**/
      826    15126    2   RETURN ;

  15126  4 002362   200076 221300                    LDX1  ! WTB_SZ+2,,AUTO
         4 002363   000001 702211                    TSX2  ! 1,X1

      827    15127                                                              /**/
      828    15128    2   END   WSN_ACCESS ;
      829    15129        %EJECT ;
PL6.E3A0      #001=ASW$WSN File=ASW$WSN.:E05TSI                                  TUE 07/29/97 10:57 Page:134  
      830    15130    1   WSN_DEV: PROC ;

  15130  4 002364   200076 741300       WSN_DEV      STX1  ! WTB_SZ+2,,AUTO

      831    15131        /*********************************************************************/
      832    15132        /*   Auto data       auto data       auto data       auto data       */
      833    15133        /*********************************************************************/
      834    15134                                                              /**/
      835    15135    2   DCL T_ARS UBIN WORD ;
      836    15136    2   DCL CODE2 UBIN WORD ;
      837    15137    2   DCL I UBIN WORD ;
      838    15138    2   DCL J UBIN WORD ;
      839    15139    2   DCL K UBIN WORD ;
      840    15140    2   DCL USE_TYPE SBIN WORD ;
      841    15141    2   DCL WSNHDR2$ PTR ;
      842    15142    2   DCL FOUND_TYPE BIT(1) ;
      843    15143    2   DCL WSNHDR2_OFF UBIN WORD ;
      844    15144    2   DCL DISP UBIN WORD ;
      845    15145    2   DCL MOV2$ PTR ;
      846    15146    2   DCL TEMP$ PTR ;
      847    15147    2   DCL TYPE1 CHAR(2);
      848    15148    2   DCL NUM1 CHAR(2);
      849    15149    2   DCL DONE_FLG BIT(1);
      850    15150    2   DCL TYPE_FLG BIT(1);
      851    15151    2   DCL TYPE_OPT UBIN WORD;
      852    15152    2   DCL WH2_ARS UBIN WORD ;
      853    15153    2   DCL BLK2_SZ UBIN WORD ;
      854    15154        %EJECT;
PL6.E3A0      #001=ASW$WSN File=ASW$WSN.:E05TSI                                  TUE 07/29/97 10:57 Page:135  
      855    15155        /********************************************************************/
      856    15156        /*   Procedure       procedure       procedure       procedure       */
      857    15157        /*********************************************************************/
      858    15158                                                              /**/
      859    15159    2   USE_TYPE = -1;

  15159  4 002365   000001 335007                    LCA     1,DL
         4 002366   200104 755100                    STA     USE_TYPE,,AUTO

      860    15160    2   IF PTR$->P$NODE.SUBLK$(0)->P$NODE.CODE = 38 /* W_DEV_TYP */

  15160  4 002367   200041 470500                    LDP0    PTR$,,AUTO
         4 002370   000003 471500                    LDP1    3,,PR0
         4 002371   100000 720100                    LXL0    0,,PR1
         4 002372   000046 100003                    CMPX0   38,DU
         4 002373   002463 601000 4                  TNZ     s:15216

      861    15161    3   THEN DO;

      862    15162    3      BLK$ = PTR$->P$NODE.SUBLK$(0)->P$NODE.SUBLK$(0);

  15162  4 002374   100003 236100                    LDQ     3,,PR1
         4 002375   200013 756100                    STQ     BLK$,,AUTO

      863    15163    3      IF OUT$SYM.COUNT = 4

  15163  4 002376   200013 473500                    LDP3    BLK$,,AUTO
         4 002377   300004 236100                    LDQ     4,,PR3
         4 002400   777000 376003                    ANQ     -512,DU
         4 002401   004000 116003                    CMPQ    2048,DU
         4 002402   002423 601000 4                  TNZ     s:15170

      864    15164    4      THEN DO;

      865    15165    4         TYPE1 = SUBSTR(OUT$SYM.TEXT,0,2);

  15165  4 002403   300004 236100                    LDQ     4,,PR3
PL6.E3A0      #001=ASW$WSN File=ASW$WSN.:E05TSI                                  TUE 07/29/97 10:57 Page:136  
         4 002404   000033 772000                    QRL     27
         4 002405   040100 100500                    MLR     fill='040'O
         4 002406   300004 200002                    ADSC9   4,,PR3                   cn=1,n=2
         4 002407   202106 000004                    ADSC9   X+1011,,AUTO             cn=0,n=4
         4 002410   202106 220100                    LDX0    X+1011,,AUTO
         4 002411   200113 740100                    STX0    TYPE1,,AUTO

      866    15166    4         NUM1 = SUBSTR(OUT$SYM.TEXT,2,2);

  15166  4 002412   300004 236100                    LDQ     4,,PR3
         4 002413   000033 772000                    QRL     27
         4 002414   040100 100500                    MLR     fill='040'O
         4 002415   300004 600002                    ADSC9   4,,PR3                   cn=3,n=2
         4 002416   202106 000004                    ADSC9   X+1011,,AUTO             cn=0,n=4
         4 002417   202106 222100                    LDX2    X+1011,,AUTO
         4 002420   200114 742100                    STX2    NUM1,,AUTO

      867    15167    4         TYPE_OPT = 0 /* TYPE_ONE */ ;

  15167  4 002421   200117 450100                    STZ     TYPE_OPT,,AUTO

      868    15168    4         END; /* If OUT$SYM.COUNT = 4 */

  15168  4 002422   002444 710000 4                  TRA     s:15194

      869    15169    3      ELSE
      870    15170    3         IF OUT$SYM.COUNT = 2

  15170  4 002423   002000 116003                    CMPQ    1024,DU
         4 002424   002436 601000 4                  TNZ     s:15189

      871    15171    4         THEN DO;                  /* Include all of this type */

      872    15172    4            TYPE1 = OUT$SYM.TEXT ;

  15172  4 002425   300004 236100                    LDQ     4,,PR3
         4 002426   000033 772000                    QRL     27
PL6.E3A0      #001=ASW$WSN File=ASW$WSN.:E05TSI                                  TUE 07/29/97 10:57 Page:137  
         4 002427   000000 622006                    EAX2    0,QL
         4 002430   040100 100540                    MLR     fill='040'O
         4 002431   300004 200012                    ADSC9   4,,PR3                   cn=1,n=*X2
         4 002432   200113 000002                    ADSC9   TYPE1,,AUTO              cn=0,n=2

      873    15173    4            TYPE_OPT = 1 /* TYPE_MORE */ ;

  15173  4 002433   000001 235007                    LDA     1,DL
         4 002434   200117 755100                    STA     TYPE_OPT,,AUTO

      874    15174    4            END;

  15174  4 002435   002444 710000 4                  TRA     s:15194

      875    15175    4         ELSE DO;

      876    15176                            /* ERROR: Must specify either type or type & num */
      877    15177                 %SCREAM( ERR#=E$BADTYPE, LEVEL=ERROR, MID='W' );

  15189  4 002436   000022 630400 5                  EPPR0   18
         4 002437   000017 631400 xsym               EPPR1   B_VECTNIL+15
         4 002440   000000 701000 xent               TSX1    ASH$ERROR
         4 002441   000000 011000                    NOP     0

      878    15192    4            RETURN ;

  15192  4 002442   200076 221300                    LDX1  ! WTB_SZ+2,,AUTO
         4 002443   000001 702211                    TSX2  ! 1,X1

      879    15193    4            END;
      880    15194    3      IF TYPE1 = 'OC' OR TYPE1 = 'CG'

  15194  4 002444   200113 220100                    LDX0    TYPE1,,AUTO
         4 002445   000012 100000 3                  CMPX0   10
         4 002446   002451 600000 4                  TZE     s:15208
         4 002447   000013 100000 3                  CMPX0   11
         4 002450   002457 601000 4                  TNZ     s:15213
PL6.E3A0      #001=ASW$WSN File=ASW$WSN.:E05TSI                                  TUE 07/29/97 10:57 Page:138  

      881    15195    4      THEN DO;

      882    15196              %SCREAM( ERR#=E$BADTYPE, LEVEL=ERROR, MID='W' );

  15208  4 002451   000022 630400 5                  EPPR0   18
         4 002452   000017 631400 xsym               EPPR1   B_VECTNIL+15
         4 002453   000000 701000 xent               TSX1    ASH$ERROR
         4 002454   000000 011000                    NOP     0

      883    15211    4         RETURN ;

  15211  4 002455   200076 221300                    LDX1  ! WTB_SZ+2,,AUTO
         4 002456   000001 702211                    TSX2  ! 1,X1

      884    15212    4         END; /* Then do */
      885    15213    3      BLK$ = PTR$->P$NODE.SUBLK$(0)->P$NODE.SUBLK$(1) ;

  15213  4 002457   000003 471500                    LDP1    3,,PR0
         4 002460   100004 236100                    LDQ     4,,PR1
         4 002461   200013 756100                    STQ     BLK$,,AUTO

      886    15214    3      END; /* For type  */

  15214  4 002462   002467 710000 4                  TRA     s:15220

      887    15215    3   ELSE DO;           /* Include all types in this station */

      888    15216    3      TYPE_OPT = 2 /* TYPE_ALL */ ;

  15216  4 002463   000002 236007                    LDQ     2,DL
         4 002464   200117 756100                    STQ     TYPE_OPT,,AUTO

      889    15217    3      BLK$ = PTR$->P$NODE.SUBLK$(0)->P$NODE.SUBLK$(0) ;

  15217  4 002465   100003 236100                    LDQ     3,,PR1
         4 002466   200013 756100                    STQ     BLK$,,AUTO
PL6.E3A0      #001=ASW$WSN File=ASW$WSN.:E05TSI                                  TUE 07/29/97 10:57 Page:139  

      890    15218    3      END;              /* End of else do */

      891    15219                                                              /* Get station name */
      892    15220    2   IF OUT$SYM.COUNT > 8

  15220  4 002467   200013 473500                    LDP3    BLK$,,AUTO
         4 002470   300004 236100                    LDQ     4,,PR3
         4 002471   777000 376003                    ANQ     -512,DU
         4 002472   011000 116003                    CMPQ    4608,DU
         4 002473   002502 602000 4                  TNC     s:15240

      893    15221    2   THEN
      894    15222    3   DO ;

      895    15223           %SCREAM( ERR#=E$SNAMETOOBIG, LEVEL=ERROR, MID='W' );

  15235  4 002474   000005 630400 5                  EPPR0   5
         4 002475   000017 631400 xsym               EPPR1   B_VECTNIL+15
         4 002476   000000 701000 xent               TSX1    ASH$ERROR
         4 002477   000000 011000                    NOP     0

      896    15238    3      RETURN ;

  15238  4 002500   200076 221300                    LDX1  ! WTB_SZ+2,,AUTO
         4 002501   000001 702211                    TSX2  ! 1,X1

      897    15239    3      END ; /* Then do */
      898    15240    2   STAT_NAME.COUNT = OUT$SYM.COUNT;

  15240  4 002502   300004 236100                    LDQ     4,,PR3
         4 002503   200043 552140                    STBQ    STAT_NAME,'40'O,AUTO

      899    15241    2   STAT_NAME.TEXT  = OUT$SYM.TEXT ;

  15241  4 002504   300004 236100                    LDQ     4,,PR3
         4 002505   000033 772000                    QRL     27
PL6.E3A0      #001=ASW$WSN File=ASW$WSN.:E05TSI                                  TUE 07/29/97 10:57 Page:140  
         4 002506   000000 620006                    EAX0    0,QL
         4 002507   040100 100540                    MLR     fill='040'O
         4 002510   300004 200010                    ADSC9   4,,PR3                   cn=1,n=*X0
         4 002511   200043 200010                    ADSC9   STAT_NAME,,AUTO          cn=1,n=8

      900    15242    2   STAT_KEY.ACCT = STAT_NAME.TEXT ;

  15242  4 002512   040000 100500                    MLR     fill='040'O
         4 002513   200043 200010                    ADSC9   STAT_NAME,,AUTO          cn=1,n=8
         4 002514   000013 200010 2                  ADSC9   STAT_KEY                 cn=1,n=8

      901    15243                                                        /* Get station rec. */
      902    15244    2   TREC$ = PINCRW( DSEG2$, TREC_OFF2 ) ;

  15244  4 002515   000031 236000 2                  LDQ     TREC_OFF2
         4 002516   000022 736000                    QLS     18
         4 002517   000000 036000 xsym               ADLQ    DSEG2$
         4 002520   200047 756100                    STQ     TREC$,,AUTO

      903    15245    2   ARS2 = DSEG2SIZE - 4 * TREC_OFF2 ;

  15245  4 002521   000000 236003                    LDQ     0,DU
         4 002522   000031 136000 2                  SBLQ    TREC_OFF2
         4 002523   000002 736000                    QLS     2
         4 002524   000000 036000 xsym               ADLQ    DSEG2SIZE
         4 002525   200007 756100                    STQ     ARS2,,AUTO

      904    15246    2   TREC_ARS = ARS2 ;

  15246  4 002526   200050 756100                    STQ     TREC_ARS,,AUTO

      905    15247    2   USERS_KEY = STAT_KEY ;

  15247  4 002527   000000 100400                    MLR     fill='000'O
         4 002530   000013 000020 2                  ADSC9   STAT_KEY                 cn=0,n=16
         4 002531   000000 000052 xsym               ADSC9   USERS_KEY                cn=0,n=42

PL6.E3A0      #001=ASW$WSN File=ASW$WSN.:E05TSI                                  TUE 07/29/97 10:57 Page:141  
      906    15248    2   CALL ASB$ENQ_HLP ALTRET( ENQ2_ERR ) ;

  15248  4 002532   000002 631400 xsym               EPPR1   B_VECTNIL+2
         4 002533   000000 701000 xent               TSX1    ASB$ENQ_HLP
         4 002534   003571 702000 4                  TSX2    ENQ2_ERR

      907    15249    2   CALL ASB$READ_HLP( TREC$, TREC_ARS ) ALTRET( TREC2_ERR ) ;

  15249  4 002535   200050 630500                    EPPR0   TREC_ARS,,AUTO
         4 002536   202107 450500                    STP0    X+1012,,AUTO
         4 002537   200047 631500                    EPPR1   TREC$,,AUTO
         4 002540   202106 451500                    STP1    X+1011,,AUTO
         4 002541   202106 630500                    EPPR0   X+1011,,AUTO
         4 002542   000020 631400 xsym               EPPR1   B_VECTNIL+16
         4 002543   000000 701000 xent               TSX1    ASB$READ_HLP
         4 002544   002546 702000 4                  TSX2    TREC2_ERR

      908    15250    3   IF '0'B THEN DO;

  15250  4 002545   002557 710000 4                  TRA     s:15270

  15247  4 002546                       TREC2_ERR    null
      909    15251    3   TREC2_ERR: ;
      910    15252    3      AS_FIELD1 = STAT_NAME;

  15252  4 002546   000000 100500                    MLR     fill='000'O
         4 002547   200043 000011                    ADSC9   STAT_NAME,,AUTO          cn=0,n=9
         4 002550   000000 000051 xsym               ADSC9   AS_FIELD1                cn=0,n=41

      911    15253           %SCREAM( ERR#=E$TERMNOEXIST, LEVEL=ERROR, MID='W' );

  15265  4 002551   000012 630400 5                  EPPR0   10
         4 002552   000017 631400 xsym               EPPR1   B_VECTNIL+15
         4 002553   000000 701000 xent               TSX1    ASH$ERROR
         4 002554   000000 011000                    NOP     0

      912    15268    3      RETURN;
PL6.E3A0      #001=ASW$WSN File=ASW$WSN.:E05TSI                                  TUE 07/29/97 10:57 Page:142  

  15268  4 002555   200076 221300                    LDX1  ! WTB_SZ+2,,AUTO
         4 002556   000001 702211                    TSX2  ! 1,X1

      913    15269    3      END ;
      914    15270    2   TWSN# = KL$TREC.TWSN# ;

  15270  4 002557   200047 470500                    LDP0    TREC$,,AUTO
         4 002560   000001 236100                    LDQ     1,,PR0
         4 002561   200053 756100                    STQ     TWSN#,,AUTO

      915    15271    2   TWSNREC$ = PINCRW( DSEG2$ , TWSNREC_OFF2 ) ;

  15271  4 002562   000030 236000 2                  LDQ     TWSNREC_OFF2
         4 002563   000022 736000                    QLS     18
         4 002564   000000 036000 xsym               ADLQ    DSEG2$
         4 002565   200052 756100                    STQ     TWSNREC$,,AUTO

      916    15272    2   ARS2 = DSEG2SIZE - 4 * TWSNREC_OFF2 ;

  15272  4 002566   000000 236003                    LDQ     0,DU
         4 002567   000030 136000 2                  SBLQ    TWSNREC_OFF2
         4 002570   000002 736000                    QLS     2
         4 002571   000000 036000 xsym               ADLQ    DSEG2SIZE
         4 002572   200007 756100                    STQ     ARS2,,AUTO

      917    15273    2   TWSN_ARS = ARS2 ;

  15273  4 002573   200054 756100                    STQ     TWSN_ARS,,AUTO

      918    15274    2   TWSN_KEY.TWSN# = TWSN# ;

  15274  4 002574   040000 100500                    MLR     fill='040'O
         4 002575   200053 000004                    ADSC9   TWSN#,,AUTO              cn=0,n=4
         4 002576   000020 200004 2                  ADSC9   TWSN_KEY+1               cn=1,n=4

      919    15275    2   USERS_KEY = TWSN_KEY ;
PL6.E3A0      #001=ASW$WSN File=ASW$WSN.:E05TSI                                  TUE 07/29/97 10:57 Page:143  

  15275  4 002577   000000 100400                    MLR     fill='000'O
         4 002600   000017 000011 2                  ADSC9   TWSN_KEY                 cn=0,n=9
         4 002601   000000 000052 xsym               ADSC9   USERS_KEY                cn=0,n=42

      920    15276    2   CALL ASB$ENQ_HLP ALTRET( ENQ2_ERR ) ;

  15276  4 002602   000002 631400 xsym               EPPR1   B_VECTNIL+2
         4 002603   000000 701000 xent               TSX1    ASB$ENQ_HLP
         4 002604   003571 702000 4                  TSX2    ENQ2_ERR

      921    15277    2   CALL ASB$READ_HLP( TWSNREC$, TWSN_ARS ) ALTRET( TWSN2_ERR ) ;

  15277  4 002605   200054 630500                    EPPR0   TWSN_ARS,,AUTO
         4 002606   202107 450500                    STP0    X+1012,,AUTO
         4 002607   200052 631500                    EPPR1   TWSNREC$,,AUTO
         4 002610   202106 451500                    STP1    X+1011,,AUTO
         4 002611   202106 630500                    EPPR0   X+1011,,AUTO
         4 002612   000020 631400 xsym               EPPR1   B_VECTNIL+16
         4 002613   000000 701000 xent               TSX1    ASB$READ_HLP
         4 002614   002616 702000 4                  TSX2    TWSN2_ERR

      922    15278    3   IF '0'B THEN DO;

  15278  4 002615   002624 710000 4                  TRA     s:15299

  15277  4 002616                       TWSN2_ERR    null
      923    15279    3   TWSN2_ERR: ;
      924    15280           %SCREAM( ERR#=E$TWSNNOEXIST, LEVEL=ERROR, MID='W' );

  15292  4 002616   000013 630400 5                  EPPR0   11
         4 002617   000017 631400 xsym               EPPR1   B_VECTNIL+15
         4 002620   000000 701000 xent               TSX1    ASH$ERROR
         4 002621   000000 011000                    NOP     0

      925    15295    3      RETURN;

PL6.E3A0      #001=ASW$WSN File=ASW$WSN.:E05TSI                                  TUE 07/29/97 10:57 Page:144  
  15295  4 002622   200076 221300                    LDX1  ! WTB_SZ+2,,AUTO
         4 002623   000001 702211                    TSX2  ! 1,X1

      926    15296    3      END ;
      927    15297                         /* Build wsn record from twsn record to include  */
      928    15298                         /* them in the specified wsn record.             */
      929    15299    2   WSNHDR2$ = PINCRW( DSEG3$, WSNHDR2_OFF3) ;

  15299  4 002624   000032 236000 2                  LDQ     WSNHDR2_OFF3
         4 002625   000022 736000                    QLS     18
         4 002626   000000 036000 xsym               ADLQ    DSEG3$
         4 002627   200105 756100                    STQ     WSNHDR2$,,AUTO

      930    15300    2   WSNHDR2$->KL$WSNHDR = '0'B ;

  15300  4 002630   200105 470500                    LDP0    WSNHDR2$,,AUTO
         4 002631   000100 100400                    MLR     fill='000'O
         4 002632   000002 000001 xsym               ADSC9   B_VECTNIL+2              cn=0,n=1
         4 002633   000000 000024                    ADSC9   0,,PR0                   cn=0,n=20

      931    15301    2   WSNHDR2$->KL$WSNHDR.TNAME = STAT_KEY.ACCT ;

  15301  4 002634   040100 100400                    MLR     fill='040'O
         4 002635   000013 200010 2                  ADSC9   STAT_KEY                 cn=1,n=8
         4 002636   000001 000010                    ADSC9   1,,PR0                   cn=0,n=8

      932    15302    2   WTBLK$ = PINCRW( DSEG3$, WTBLK_OFF1 ) ;

  15302  4 002637   000023 236000 2                  LDQ     WTBLK_OFF1
         4 002640   000022 736000                    QLS     18
         4 002641   000000 036000 xsym               ADLQ    DSEG3$
         4 002642   200073 756100                    STQ     WTBLK$,,AUTO

      933    15303    2   BLK2_SZ = 0 ;

  15303  4 002643   200121 450100                    STZ     BLK2_SZ,,AUTO

PL6.E3A0      #001=ASW$WSN File=ASW$WSN.:E05TSI                                  TUE 07/29/97 10:57 Page:145  
      934    15304    2   I = 0 ;

  15304  4 002644   200101 450100                    STZ     I,,AUTO

      935    15305    2   DONE_FLG = AS_FALSE ;

  15305  4 002645   000000 236000 xsym               LDQ     AS_FALSE
         4 002646   400000 376003                    ANQ     -131072,DU
         4 002647   200115 756100                    STQ     DONE_FLG,,AUTO

      936    15306    3   DO WHILE (I < KL$TWSNREC.NDEV  AND  NOT DONE_FLG );

  15306  4 002650   003252 710000 4                  TRA     s:15411

      937    15307    3      TYPE = KL$TWSNREC.DEVS.TYP(I) ;

  15307  4 002651   200101 236100                    LDQ     I,,AUTO
         4 002652   000013 402007                    MPY     11,DL
         4 002653   200052 470500                    LDP0    TWSNREC$,,AUTO
         4 002654   000005 220106                    LDX0    5,QL,PR0
         4 002655   200055 740100                    STX0    TYPE,,AUTO

      938    15308    3      NUM = KL$TWSNREC.DEVS.NUM(I) ;

  15308  4 002656   000005 721106                    LXL1    5,QL,PR0
         4 002657   200037 741100                    STX1    NUM,,AUTO

      939    15309    3      DEV_WSN_KEY.ACCT = KL$TWSNREC.DEVS.ACCT(I) ;

  15309  4 002660   200101 236100                    LDQ     I,,AUTO
         4 002661   000054 402007                    MPY     44,DL
         4 002662   040000 100506                    MLR     fill='040'O
         4 002663   000011 000010                    ADSC9   9,Q,PR0                  cn=0,n=8
         4 002664   000007 200010 2                  ADSC9   DEV_WSN_KEY              cn=1,n=8

      940    15310    3      TYPE_FLG = AS_FALSE ;

PL6.E3A0      #001=ASW$WSN File=ASW$WSN.:E05TSI                                  TUE 07/29/97 10:57 Page:146  
  15310  4 002665   000000 236000 xsym               LDQ     AS_FALSE
         4 002666   400000 376003                    ANQ     -131072,DU
         4 002667   200116 756100                    STQ     TYPE_FLG,,AUTO

      941    15311    4      IF TYPE ~= 'OC' AND TYPE ~= 'CG' THEN DO;

  15311  4 002670   000012 100000 3                  CMPX0   10
         4 002671   003247 600000 4                  TZE     s:15410
         4 002672   000013 100000 3                  CMPX0   11
         4 002673   003247 600000 4                  TZE     s:15410

      942    15312    4         ATTR = KL$TWSNREC.DEVS.ATTR(I) ;

  15312  4 002674   200101 236100                    LDQ     I,,AUTO
         4 002675   000013 402007                    MPY     11,DL
         4 002676   000006 222106                    LDX2    6,QL,PR0
         4 002677   200010 742100                    STX2    ATTR,,AUTO

      943    15313                                                             /**/
      944    15314    5         DO SELECT ( TYPE_OPT );

  15314  4 002700   200117 236100                    LDQ     TYPE_OPT,,AUTO
         4 002701   000001 116007                    CMPQ    1,DL
         4 002702   002707 602000 4                  TNC     s:15314+7
         4 002703   002723 600000 4                  TZE     s:15322
         4 002704   000002 116007                    CMPQ    2,DL
         4 002705   002734 601000 4                  TNZ     s:15327
         4 002706   002731 710000 4                  TRA     s:15325
         4 002707   000000 116003                    CMPQ    0,DU
         4 002710   002712 600000 4                  TZE     s:15316
         4 002711   002734 710000 4                  TRA     s:15327

      945    15315    5            SELECT ( 0 /* TYPE_ONE */ );       /* Type and num specified */

      946    15316    5            IF TYPE = TYPE1 AND NUM = NUM1

  15316  4 002712   200113 100100                    CMPX0   TYPE1,,AUTO
PL6.E3A0      #001=ASW$WSN File=ASW$WSN.:E05TSI                                  TUE 07/29/97 10:57 Page:147  
         4 002713   002734 601000 4                  TNZ     s:15327
         4 002714   200114 101100                    CMPX1   NUM1,,AUTO
         4 002715   002734 601000 4                  TNZ     s:15327

      947    15317    6            THEN DO;

      948    15318    6               DONE_FLG = AS_TRUE ;

  15318  4 002716   000000 236000 xsym               LDQ     AS_TRUE
         4 002717   400000 376003                    ANQ     -131072,DU
         4 002720   200115 756100                    STQ     DONE_FLG,,AUTO

      949    15319    6               TYPE_FLG = AS_TRUE ;

  15319  4 002721   200116 756100                    STQ     TYPE_FLG,,AUTO

      950    15320    6               END ;

  15320  4 002722   002734 710000 4                  TRA     s:15327

      951    15321    5            SELECT ( 1 /* TYPE_MORE */ );     /* Type is specified */

      952    15322    5            IF TYPE = TYPE1

  15322  4 002723   200113 100100                    CMPX0   TYPE1,,AUTO
         4 002724   002734 601000 4                  TNZ     s:15327

      953    15323    5            THEN TYPE_FLG = AS_TRUE ;

  15323  4 002725   000000 236000 xsym               LDQ     AS_TRUE
         4 002726   400000 376003                    ANQ     -131072,DU
         4 002727   200116 756100                    STQ     TYPE_FLG,,AUTO
         4 002730   002734 710000 4                  TRA     s:15327

      954    15324    5            SELECT ( 2 /* TYPE_ALL */ );      /* Everything in station */

      955    15325    5            TYPE_FLG = AS_TRUE ;
PL6.E3A0      #001=ASW$WSN File=ASW$WSN.:E05TSI                                  TUE 07/29/97 10:57 Page:148  

  15325  4 002731   000000 236000 xsym               LDQ     AS_TRUE
         4 002732   400000 376003                    ANQ     -131072,DU
         4 002733   200116 756100                    STQ     TYPE_FLG,,AUTO

      956    15326    5            END;              /*  End of case */

      957    15327    4         IF TYPE_FLG

  15327  4 002734   200116 234100                    SZN     TYPE_FLG,,AUTO
         4 002735   003247 605000 4                  TPL     s:15410

      958    15328    5         THEN DO;

      959    15329                                            /* Do only for specified type */
      960    15330    5            J = 0; FOUND_TYPE = '0'B;

  15330  4 002736   200102 450100                    STZ     J,,AUTO

  15330  4 002737   200106 450100                    STZ     FOUND_TYPE,,AUTO

      961    15331    6            DO WHILE( J < KL$WSNHDR.NTYP  AND NOT FOUND_TYPE );

  15331  4 002740   002754 710000 4                  TRA     s:15336

      962    15332    6               IF KL$WSNHDR.TYPS.TYP(J) = TYPE THEN

  15332  4 002741   200067 470500                    LDP0    WSNHDR$,,AUTO
         4 002742   200102 720100                    LXL0    J,,AUTO
         4 002743   000004 221110                    LDX1    4,X0,PR0
         4 002744   200055 101100                    CMPX1   TYPE,,AUTO
         4 002745   002751 601000 4                  TNZ     s:15335

      963    15333    6                  FOUND_TYPE = '1'B;

  15333  4 002746   400000 236003                    LDQ     -131072,DU
         4 002747   200106 756100                    STQ     FOUND_TYPE,,AUTO
PL6.E3A0      #001=ASW$WSN File=ASW$WSN.:E05TSI                                  TUE 07/29/97 10:57 Page:149  
         4 002750   002754 710000 4                  TRA     s:15336

      964    15334    6               ELSE
      965    15335    6                  J = J + 1;

  15335  4 002751   200102 235100                    LDA     J,,AUTO
         4 002752   000001 035007                    ADLA    1,DL
         4 002753   200102 755100                    STA     J,,AUTO

      966    15336    6               END;

  15336  4 002754   200067 470500                    LDP0    WSNHDR$,,AUTO
         4 002755   200102 236100                    LDQ     J,,AUTO
         4 002756   000003 116100                    CMPQ    3,,PR0
         4 002757   002762 603000 4                  TRC     s:15337
         4 002760   200106 234100                    SZN     FOUND_TYPE,,AUTO
         4 002761   002741 605000 4                  TPL     s:15332

      967    15337    6            IF FOUND_TYPE THEN DO;

  15337  4 002762   200106 234100                    SZN     FOUND_TYPE,,AUTO
         4 002763   003037 605000 4                  TPL     s:15357

      968    15338    6               ATTR$ = PINCRW( DSEG1$,KL$WSNHDR.TYPS.DISP(J)) ;

  15338  4 002764   000004 720106                    LXL0    4,QL,PR0
         4 002765   000000 636010                    EAQ     0,X0
         4 002766   000000 036000 xsym               ADLQ    DSEG1$
         4 002767   200011 756100                    STQ     ATTR$,,AUTO

      969    15339    6               K = 0; FOUND_ATTR = '0'B;

  15339  4 002770   200103 450100                    STZ     K,,AUTO

  15339  4 002771   200022 450100                    STZ     FOUND_ATTR,,AUTO

      970    15340    7               DO WHILE ( K < ATTR$ -> KL$WTBLK.NATR AND NOT FOUND_ATTR );
PL6.E3A0      #001=ASW$WSN File=ASW$WSN.:E05TSI                                  TUE 07/29/97 10:57 Page:150  

  15340  4 002772   003010 710000 4                  TRA     s:15345

      971    15341    7                  IF ATTR$ -> KL$WTBLK.ATTRS( K ) = ATTR THEN

  15341  4 002773   200103 235100                    LDA     K,,AUTO
         4 002774   000001 735000                    ALS     1
         4 002775   200011 470500                    LDP0    ATTR$,,AUTO
         4 002776   000100 106505                    CMPC    fill='000'O
         4 002777   000005 000002                    ADSC9   5,A,PR0                  cn=0,n=2
         4 003000   200010 000002                    ADSC9   ATTR,,AUTO               cn=0,n=2
         4 003001   003005 601000 4                  TNZ     s:15344

      972    15342    7                     FOUND_ATTR = '1'B;

  15342  4 003002   400000 236003                    LDQ     -131072,DU
         4 003003   200022 756100                    STQ     FOUND_ATTR,,AUTO
         4 003004   003010 710000 4                  TRA     s:15345

      973    15343    7                  ELSE
      974    15344    7                     K = K + 1;

  15344  4 003005   200103 236100                    LDQ     K,,AUTO
         4 003006   000001 036007                    ADLQ    1,DL
         4 003007   200103 756100                    STQ     K,,AUTO

      975    15345    7                  END;

  15345  4 003010   200011 470500                    LDP0    ATTR$,,AUTO
         4 003011   200103 236100                    LDQ     K,,AUTO
         4 003012   000004 116100                    CMPQ    4,,PR0
         4 003013   003016 603000 4                  TRC     s:15346
         4 003014   200022 234100                    SZN     FOUND_ATTR,,AUTO
         4 003015   002773 605000 4                  TPL     s:15341

      976    15346    7               IF NOT FOUND_ATTR THEN DO;          /* No match */

PL6.E3A0      #001=ASW$WSN File=ASW$WSN.:E05TSI                                  TUE 07/29/97 10:57 Page:151  
  15346  4 003016   200022 234100                    SZN     FOUND_ATTR,,AUTO
         4 003017   003027 604000 4                  TMI     s:15350

      977    15347    7                  ATTR$ -> KL$WTBLK.ATTRS( K ) = ATTR ;

  15347  4 003020   200103 235100                    LDA     K,,AUTO
         4 003021   000001 735000                    ALS     1
         4 003022   000105 100500                    MLR     fill='000'O
         4 003023   200010 000002                    ADSC9   ATTR,,AUTO               cn=0,n=2
         4 003024   000005 000002                    ADSC9   5,A,PR0                  cn=0,n=2

      978    15348    7                  ATTR$ -> KL$WTBLK.NATR = K + 1 ;

  15348  4 003025   000001 036007                    ADLQ    1,DL
         4 003026   000004 756100                    STQ     4,,PR0

      979    15349    7                  END;    /*  If not FOUND_ATTR  */

      980    15350    6               IF ATTR$ -> KL$WTBLK.IO.OUTPUT

  15350  4 003027   000003 236100                    LDQ     3,,PR0
         4 003030   000200 316007                    CANQ    128,DL
         4 003031   003034 600000 4                  TZE     s:15354

      981    15351    7               THEN DO;

      982    15352    7                  USE_TYPE = 6 /* OUTSYM DEVICE */;

  15352  4 003032   000006 235007                    LDA     6,DL
         4 003033   200104 755100                    STA     USE_TYPE,,AUTO

      983    15353    7                  END;

      984    15354    6               CALL DEVWSN;

  15354  4 003034   003577 701000 4                  TSX1    DEVWSN
         4 003035   000000 011000                    NOP     0
PL6.E3A0      #001=ASW$WSN File=ASW$WSN.:E05TSI                                  TUE 07/29/97 10:57 Page:152  

      985    15355    6               END;            /* If FOUND_TYPE then do; */

  15355  4 003036   003247 710000 4                  TRA     s:15410

      986    15356    6            ELSE DO;

      987    15357    6               J = 0;

  15357  4 003037   200102 450100                    STZ     J,,AUTO

      988    15358    7               DO WHILE( J < WSNHDR2$->KL$WSNHDR.NTYP AND NOT FOUND_TYPE );

  15358  4 003040   003054 710000 4                  TRA     s:15363

      989    15359    7                  IF WSNHDR2$->KL$WSNHDR.TYPS.TYP(J) = TYPE THEN

  15359  4 003041   200105 470500                    LDP0    WSNHDR2$,,AUTO
         4 003042   200102 720100                    LXL0    J,,AUTO
         4 003043   000004 221110                    LDX1    4,X0,PR0
         4 003044   200055 101100                    CMPX1   TYPE,,AUTO
         4 003045   003051 601000 4                  TNZ     s:15362

      990    15360    7                     FOUND_TYPE = '1'B;

  15360  4 003046   400000 236003                    LDQ     -131072,DU
         4 003047   200106 756100                    STQ     FOUND_TYPE,,AUTO
         4 003050   003054 710000 4                  TRA     s:15363

      991    15361    7                  ELSE
      992    15362    7                     J = J + 1;

  15362  4 003051   200102 235100                    LDA     J,,AUTO
         4 003052   000001 035007                    ADLA    1,DL
         4 003053   200102 755100                    STA     J,,AUTO

      993    15363    7                  END;
PL6.E3A0      #001=ASW$WSN File=ASW$WSN.:E05TSI                                  TUE 07/29/97 10:57 Page:153  

  15363  4 003054   200105 470500                    LDP0    WSNHDR2$,,AUTO
         4 003055   200102 236100                    LDQ     J,,AUTO
         4 003056   000003 116100                    CMPQ    3,,PR0
         4 003057   003062 603000 4                  TRC     s:15364
         4 003060   200106 234100                    SZN     FOUND_TYPE,,AUTO
         4 003061   003041 605000 4                  TPL     s:15359

      994    15364    7               IF FOUND_TYPE THEN DO;

  15364  4 003062   200106 234100                    SZN     FOUND_TYPE,,AUTO
         4 003063   003141 605000 4                  TPL     s:15385

      995    15365    7                  ATTR$ = PINCRW( DSEG3$,WSNHDR2$->KL$WSNHDR.TYPS.DISP(J)) ;

  15365  4 003064   000004 720106                    LXL0    4,QL,PR0
         4 003065   000000 636010                    EAQ     0,X0
         4 003066   000000 036000 xsym               ADLQ    DSEG3$
         4 003067   200011 756100                    STQ     ATTR$,,AUTO

      996    15366    7                  K = 0; FOUND_ATTR = '0'B;

  15366  4 003070   200103 450100                    STZ     K,,AUTO

  15366  4 003071   200022 450100                    STZ     FOUND_ATTR,,AUTO

      997    15367    8                  DO WHILE ( K < ATTR$ -> KL$WTBLK.NATR AND NOT FOUND_ATTR );

  15367  4 003072   003110 710000 4                  TRA     s:15372

      998    15368    8                     IF ATTR$ -> KL$WTBLK.ATTRS( K ) = ATTR THEN

  15368  4 003073   200103 235100                    LDA     K,,AUTO
         4 003074   000001 735000                    ALS     1
         4 003075   200011 470500                    LDP0    ATTR$,,AUTO
         4 003076   000100 106505                    CMPC    fill='000'O
         4 003077   000005 000002                    ADSC9   5,A,PR0                  cn=0,n=2
PL6.E3A0      #001=ASW$WSN File=ASW$WSN.:E05TSI                                  TUE 07/29/97 10:57 Page:154  
         4 003100   200010 000002                    ADSC9   ATTR,,AUTO               cn=0,n=2
         4 003101   003105 601000 4                  TNZ     s:15371

      999    15369    8                        FOUND_ATTR = '1'B;

  15369  4 003102   400000 236003                    LDQ     -131072,DU
         4 003103   200022 756100                    STQ     FOUND_ATTR,,AUTO
         4 003104   003110 710000 4                  TRA     s:15372

     1000    15370    8                     ELSE
     1001    15371    8                        K = K + 1;

  15371  4 003105   200103 236100                    LDQ     K,,AUTO
         4 003106   000001 036007                    ADLQ    1,DL
         4 003107   200103 756100                    STQ     K,,AUTO

     1002    15372    8                     END;

  15372  4 003110   200011 470500                    LDP0    ATTR$,,AUTO
         4 003111   200103 236100                    LDQ     K,,AUTO
         4 003112   000004 116100                    CMPQ    4,,PR0
         4 003113   003116 603000 4                  TRC     s:15373
         4 003114   200022 234100                    SZN     FOUND_ATTR,,AUTO
         4 003115   003073 605000 4                  TPL     s:15368

     1003    15373    8                  IF NOT FOUND_ATTR AND ATTR ~= '0'B THEN DO;    /* No match */

  15373  4 003116   200022 234100                    SZN     FOUND_ATTR,,AUTO
         4 003117   003131 604000 4                  TMI     s:15377
         4 003120   200010 220100                    LDX0    ATTR,,AUTO
         4 003121   003131 600000 4                  TZE     s:15377

     1004    15374    8                     ATTR$ -> KL$WTBLK.ATTRS( K ) = ATTR ;

  15374  4 003122   200103 235100                    LDA     K,,AUTO
         4 003123   000001 735000                    ALS     1
         4 003124   000105 100500                    MLR     fill='000'O
PL6.E3A0      #001=ASW$WSN File=ASW$WSN.:E05TSI                                  TUE 07/29/97 10:57 Page:155  
         4 003125   200010 000002                    ADSC9   ATTR,,AUTO               cn=0,n=2
         4 003126   000005 000002                    ADSC9   5,A,PR0                  cn=0,n=2

     1005    15375    8                     ATTR$ -> KL$WTBLK.NATR = K + 1 ;

  15375  4 003127   000001 036007                    ADLQ    1,DL
         4 003130   000004 756100                    STQ     4,,PR0

     1006    15376    8                     END; /*  Not FOUND_ATTR  */

     1007    15377    7                  IF ATTR$ -> KL$WTBLK.IO.OUTPUT

  15377  4 003131   000003 236100                    LDQ     3,,PR0
         4 003132   000200 316007                    CANQ    128,DL
         4 003133   003136 600000 4                  TZE     s:15381

     1008    15378    8                  THEN DO;

     1009    15379    8                     USE_TYPE = 6 /* OUTSYM DEVICE */;

  15379  4 003134   000006 235007                    LDA     6,DL
         4 003135   200104 755100                    STA     USE_TYPE,,AUTO

     1010    15380    8                     END;

     1011    15381    7                  CALL DEVWSN ;   /* Check for altret */

  15381  4 003136   003577 701000 4                  TSX1    DEVWSN
         4 003137   000000 011000                    NOP     0

     1012    15382    7                  END;        /* If FOUND_TYPE then do; */

  15382  4 003140   003247 710000 4                  TRA     s:15410

     1013    15383    7               ELSE DO;                        /* None this type */

     1014    15384                                                              /* Build type blk */
PL6.E3A0      #001=ASW$WSN File=ASW$WSN.:E05TSI                                  TUE 07/29/97 10:57 Page:156  
     1015    15385    7                  WSNDEV_FLG = AS_FALSE ;

  15385  4 003141   000000 236000 xsym               LDQ     AS_FALSE
         4 003142   400000 376003                    ANQ     -131072,DU
         4 003143   200066 756100                    STQ     WSNDEV_FLG,,AUTO

     1016    15386    7                  CALL DEVWSN ;     /* Check for altret  */

  15386  4 003144   003577 701000 4                  TSX1    DEVWSN
         4 003145   000000 011000                    NOP     0

     1017    15387    8                  IF NOT WSNDEV_FLG THEN DO;

  15387  4 003146   200066 234100                    SZN     WSNDEV_FLG,,AUTO
         4 003147   003247 604000 4                  TMI     s:15410

     1018    15388    8                     WTBLK$ = PINCRC( WTBLK$, INCR ) ;

  15388  4 003150   200025 236100                    LDQ     INCR,,AUTO
         4 003151   000020 736000                    QLS     16
         4 003152   200073 036100                    ADLQ    WTBLK$,,AUTO
         4 003153   200073 756100                    STQ     WTBLK$,,AUTO

     1019    15389    8                     OFFSET = POFFW( WTBLK$, DSEG3$ ) ;

  15389  4 003154   000000 235000 xsym               LDA     DSEG3$
         4 003155   000022 771000                    ARL     18
         4 003156   202106 755100                    STA     X+1011,,AUTO
         4 003157   200073 236100                    LDQ     WTBLK$,,AUTO
         4 003160   000022 772000                    QRL     18
         4 003161   202106 136100                    SBLQ    X+1011,,AUTO
         4 003162   200040 756100                    STQ     OFFSET,,AUTO

     1020    15390    8                     KL$WTBLK = '0'B ;

  15390  4 003163   200073 470500                    LDP0    WTBLK$,,AUTO
         4 003164   000100 100400                    MLR     fill='000'O
PL6.E3A0      #001=ASW$WSN File=ASW$WSN.:E05TSI                                  TUE 07/29/97 10:57 Page:157  
         4 003165   000002 000001 xsym               ADSC9   B_VECTNIL+2              cn=0,n=1
         4 003166   000000 000100                    ADSC9   0,,PR0                   cn=0,n=64

     1021    15391    8                     KL$WTBLK.TNAME = WSNHDR2$->KL$WSNHDR.TNAME ;

  15391  4 003167   200105 471500                    LDP1    WSNHDR2$,,AUTO
         4 003170   040100 100500                    MLR     fill='040'O
         4 003171   100001 000010                    ADSC9   1,,PR1                   cn=0,n=8
         4 003172   000000 000010                    ADSC9   0,,PR0                   cn=0,n=8

     1022    15392    8                     KL$WTBLK.FNAME = KL$TWSNREC.DEVS.FNAME(I) ;

  15392  4 003173   200101 236100                    LDQ     I,,AUTO
         4 003174   000054 402007                    MPY     44,DL
         4 003175   200052 473500                    LDP3    TWSNREC$,,AUTO
         4 003176   040100 100506                    MLR     fill='040'O
         4 003177   300007 000006                    ADSC9   7,Q,PR3                  cn=0,n=6
         4 003200   000002 000006                    ADSC9   2,,PR0                   cn=0,n=6

     1023    15393    8                     KL$WTBLK.PNAME = KL$TWSNREC.DEVS.PNAME(I) ;

  15393  4 003201   200052 473500                    LDP3    TWSNREC$,,AUTO
         4 003202   000100 100506                    MLR     fill='000'O
         4 003203   300015 000014                    ADSC9   13,Q,PR3                 cn=0,n=12
         4 003204   000015 000014                    ADSC9   13,,PR0                  cn=0,n=12

     1024    15394    8                     KL$WTBLK.DDEV = KL$TWSNREC.DEVS.DDEV(I) ;

  15394  4 003205   200101 236100                    LDQ     I,,AUTO
         4 003206   000013 402007                    MPY     11,DL
         4 003207   200052 473500                    LDP3    TWSNREC$,,AUTO
         4 003210   300006 236106                    LDQ     6,QL,PR3
         4 003211   000003 552110                    STBQ    3,'10'O,PR0

     1025    15395    8                     KL$WTBLK.IO = KL$TWSNREC.DEVS.IO(I) ;

  15395  4 003212   200101 236100                    LDQ     I,,AUTO
PL6.E3A0      #001=ASW$WSN File=ASW$WSN.:E05TSI                                  TUE 07/29/97 10:57 Page:158  
         4 003213   000013 402007                    MPY     11,DL
         4 003214   200052 473500                    LDP3    TWSNREC$,,AUTO
         4 003215   300006 236106                    LDQ     6,QL,PR3
         4 003216   000003 676100                    ERQ     3,,PR0
         4 003217   000600 376007                    ANQ     384,DL
         4 003220   000003 656100                    ERSQ    3,,PR0

     1026    15396    8                     KL$WTBLK.ATTRS( KL$WTBLK.NATR ) = ATTR ;

  15396  4 003221   000004 235100                    LDA     4,,PR0
         4 003222   000001 735000                    ALS     1
         4 003223   000105 100500                    MLR     fill='000'O
         4 003224   200010 000002                    ADSC9   ATTR,,AUTO               cn=0,n=2
         4 003225   000005 000002                    ADSC9   5,A,PR0                  cn=0,n=2

     1027    15397    8                     KL$WTBLK.NATR = KL$WTBLK.NATR + 1 ;

  15397  4 003226   000004 235100                    LDA     4,,PR0
         4 003227   000001 035007                    ADLA    1,DL
         4 003230   000004 755100                    STA     4,,PR0

     1028    15398    8                     WSNHDR2$->KL$WSNHDR.TYPS.TYP(WSNHDR2$->KL$WSNHDR.NTYP) = TYPE ;

  15398  4 003231   100003 720100                    LXL0    3,,PR1
         4 003232   200055 221100                    LDX1    TYPE,,AUTO
         4 003233   100004 741110                    STX1    4,X0,PR1

     1029    15399    8                    WSNHDR2$->KL$WSNHDR.TYPS.DISP(WSNHDR2$->KL$WSNHDR.NTYP) = OFFSET ;

  15399  4 003234   100003 720100                    LXL0    3,,PR1
         4 003235   200040 722100                    LXL2    OFFSET,,AUTO
         4 003236   100004 442110                    SXL2    4,X0,PR1

     1030    15400    8                     WSNHDR2$->KL$WSNHDR.NTYP = WSNHDR2$->KL$WSNHDR.NTYP + 1 ;

  15400  4 003237   100003 235100                    LDA     3,,PR1
         4 003240   000001 035007                    ADLA    1,DL
PL6.E3A0      #001=ASW$WSN File=ASW$WSN.:E05TSI                                  TUE 07/29/97 10:57 Page:159  
         4 003241   100003 755100                    STA     3,,PR1

     1031    15401    8                     IF KL$WTBLK.IO.OUTPUT

  15401  4 003242   000003 236100                    LDQ     3,,PR0
         4 003243   000200 316007                    CANQ    128,DL
         4 003244   003247 600000 4                  TZE     s:15410

     1032    15402    9                     THEN DO;

     1033    15403    9                        USE_TYPE = 6 /* OUTSYM DEVICE */;

  15403  4 003245   000006 235007                    LDA     6,DL
         4 003246   200104 755100                    STA     USE_TYPE,,AUTO

     1034    15404    9                        END;

     1035    15405    8                     END; /*  If not WSNDEV_FLG */

     1036    15406    7                  END; /* Else do */

     1037    15407    6               END; /* End else do */

     1038    15408    5            END;  /* End of if TYPE_FLG */

     1039    15409    4         END;

     1040    15410    3      I = I + 1 ;

  15410  4 003247   200101 235100                    LDA     I,,AUTO
         4 003250   000001 035007                    ADLA    1,DL
         4 003251   200101 755100                    STA     I,,AUTO

     1041    15411    3      END ; /* Do while */

  15411  4 003252   200052 470500                    LDP0    TWSNREC$,,AUTO
         4 003253   200101 236100                    LDQ     I,,AUTO
PL6.E3A0      #001=ASW$WSN File=ASW$WSN.:E05TSI                                  TUE 07/29/97 10:57 Page:160  
         4 003254   000004 116100                    CMPQ    4,,PR0
         4 003255   003260 603000 4                  TRC     s:15413
         4 003256   200115 234100                    SZN     DONE_FLG,,AUTO
         4 003257   002651 605000 4                  TPL     s:15307

     1042    15412                                                                   /* Move wtblks */
     1043    15413    2   NTYP = WSNHDR2$->KL$WSNHDR.NTYP ;

  15413  4 003260   200105 471500                    LDP1    WSNHDR2$,,AUTO
         4 003261   100003 235100                    LDA     3,,PR1
         4 003262   200036 755100                    STA     NTYP,,AUTO

     1044    15414    2   WH2_ARS = LENGTHC(WSNHDR2$->KL$WSNHDR ) + LENGTHC( WSNHDR2$->KL$WSNHDR.TYPS )

  15414  4 003263   000002 735000                    ALS     2
         4 003264   000020 035007                    ADLA    16,DL
         4 003265   200120 755100                    STA     WH2_ARS,,AUTO

     1045    15415    2        * (NTYP-1) ;
     1046    15416    2   MOV2$ = PINCRC( DSEG3$, WH2_ARS + WSNHDR_OFF1 ) ;

  15416  4 003266   200120 236100                    LDQ     WH2_ARS,,AUTO
         4 003267   000022 036000 2                  ADLQ    WSNHDR_OFF1
         4 003270   000020 736000                    QLS     16
         4 003271   000000 036000 xsym               ADLQ    DSEG3$
         4 003272   200111 756100                    STQ     MOV2$,,AUTO

     1047    15417    3   DO I = 0 TO NTYP-1 ;

  15417  4 003273   200101 450100                    STZ     I,,AUTO
         4 003274   003354 710000 4                  TRA     s:15426+3

     1048    15418    3      WTBLK$ = PINCRW( DSEG3$, WSNHDR2$->KL$WSNHDR.TYPS.DISP(I) + WSNHDR_OFF1 ) ;

  15418  4 003275   200105 470500                    LDP0    WSNHDR2$,,AUTO
         4 003276   200101 720100                    LXL0    I,,AUTO
         4 003277   000004 236110                    LDQ     4,X0,PR0
PL6.E3A0      #001=ASW$WSN File=ASW$WSN.:E05TSI                                  TUE 07/29/97 10:57 Page:161  
         4 003300   777777 376007                    ANQ     -1,DL
         4 003301   000022 036000 2                  ADLQ    WSNHDR_OFF1
         4 003302   000022 736000                    QLS     18
         4 003303   000000 036000 xsym               ADLQ    DSEG3$
         4 003304   200073 756100                    STQ     WTBLK$,,AUTO

     1049    15419    3      ARS = LENGTHC( KL$WTBLK ) ;

  15419  4 003305   000100 235007                    LDA     64,DL
         4 003306   200005 755100                    STA     ARS,,AUTO

     1050    15420    3      BLK2_SZ = BLK2_SZ + 4 * ( (ARS+3) / 4 ) ;

  15420  4 003307   200005 236100                    LDQ     ARS,,AUTO
         4 003310   000003 036007                    ADLQ    3,DL
         4 003311   000002 772000                    QRL     2
         4 003312   000002 736000                    QLS     2
         4 003313   200121 036100                    ADLQ    BLK2_SZ,,AUTO
         4 003314   200121 756100                    STQ     BLK2_SZ,,AUTO

     1051    15421    3      MOV2$->MOV$STRT = WTBLK$ -> MOV$STRT ;

  15421  4 003315   200073 471500                    LDP1    WTBLK$,,AUTO
         4 003316   000000 621005                    EAX1    0,AL
         4 003317   200111 473500                    LDP3    MOV2$,,AUTO
         4 003320   200005 722100                    LXL2    ARS,,AUTO
         4 003321   040140 100540                    MLR     fill='040'O
         4 003322   100000 000011                    ADSC9   0,,PR1                   cn=0,n=*X1
         4 003323   300000 000012                    ADSC9   0,,PR3                   cn=0,n=*X2

     1052    15422    3      MOV2$ -> KL$WTBLK.ATTRS( KL$WTBLK.NATR ) = '0'B ;

  15422  4 003324   100004 235100                    LDA     4,,PR1
         4 003325   000001 735000                    ALS     1
         4 003326   000105 100400                    MLR     fill='000'O
         4 003327   000002 000001 xsym               ADSC9   B_VECTNIL+2              cn=0,n=1
         4 003330   300005 000002                    ADSC9   5,A,PR3                  cn=0,n=2
PL6.E3A0      #001=ASW$WSN File=ASW$WSN.:E05TSI                                  TUE 07/29/97 10:57 Page:162  

     1053    15423    3      WSNHDR2$->KL$WSNHDR.TYPS.DISP(I) = WH2_ARS/4 ;

  15423  4 003331   200120 236100                    LDQ     WH2_ARS,,AUTO
         4 003332   000002 772000                    QRL     2
         4 003333   000000 621006                    EAX1    0,QL
         4 003334   000004 441110                    SXL1    4,X0,PR0

     1054    15424    3      WH2_ARS = WH2_ARS + 4*( ( ARS+3 )/4 ) ;

  15424  4 003335   200005 236100                    LDQ     ARS,,AUTO
         4 003336   000003 036007                    ADLQ    3,DL
         4 003337   000002 772000                    QRL     2
         4 003340   000002 736000                    QLS     2
         4 003341   200120 036100                    ADLQ    WH2_ARS,,AUTO
         4 003342   200120 756100                    STQ     WH2_ARS,,AUTO

     1055    15425    3      MOV2$ = PINCRW( MOV2$, ( ARS+3 )/4 ) ;

  15425  4 003343   200005 236100                    LDQ     ARS,,AUTO
         4 003344   000003 036007                    ADLQ    3,DL
         4 003345   000002 772000                    QRL     2
         4 003346   000022 736000                    QLS     18
         4 003347   200111 036100                    ADLQ    MOV2$,,AUTO
         4 003350   200111 756100                    STQ     MOV2$,,AUTO

     1056    15426    3      END ; /* Do i */

  15426  4 003351   200101 235100                    LDA     I,,AUTO
         4 003352   000001 035007                    ADLA    1,DL
         4 003353   200101 755100                    STA     I,,AUTO
         4 003354   200101 236100                    LDQ     I,,AUTO
         4 003355   200036 116100                    CMPQ    NTYP,,AUTO
         4 003356   003275 602000 4                  TNC     s:15418

     1057    15427    2   IF WSNHDR2$->KL$WSNHDR.NTYP = 0 AND ~FOUND_TYPE

PL6.E3A0      #001=ASW$WSN File=ASW$WSN.:E05TSI                                  TUE 07/29/97 10:57 Page:163  
  15427  4 003357   200105 470500                    LDP0    WSNHDR2$,,AUTO
         4 003360   000003 235100                    LDA     3,,PR0
         4 003361   003377 601000 4                  TNZ     s:15449
         4 003362   200106 236100                    LDQ     FOUND_TYPE,,AUTO
         4 003363   400000 376003                    ANQ     -131072,DU
         4 003364   400000 676003                    ERQ     -131072,DU
         4 003365   003377 600000 4                  TZE     s:15449

     1058    15428    3   THEN DO;

     1059    15429    3      IF TYPE_OPT ~= 2 /* TYPE_ALL */

  15429  4 003366   200117 236100                    LDQ     TYPE_OPT,,AUTO
         4 003367   000002 116007                    CMPQ    2,DL
         4 003370   003375 600000 4                  TZE     s:15447

     1060    15430    4      THEN DO;

     1061    15431              %SCREAM( ERR#=E$NOTYPE, LEVEL=ERROR, MID='W' );

  15443  4 003371   000026 630400 5                  EPPR0   22
         4 003372   000017 631400 xsym               EPPR1   B_VECTNIL+15
         4 003373   000000 701000 xent               TSX1    ASH$ERROR
         4 003374   000000 011000                    NOP     0

     1062    15446    4         END; /* Then do scream */

     1063    15447    3      RETURN ;

  15447  4 003375   200076 221300                    LDX1  ! WTB_SZ+2,,AUTO
         4 003376   000001 702211                    TSX2  ! 1,X1

     1064    15448    3      END;  /* If 0 */
     1065    15449    2   TEMP$ = PINCRW( DSEG2$, TREC_OFF2 ) ;

  15449  4 003377   000031 236000 2                  LDQ     TREC_OFF2
         4 003400   000022 736000                    QLS     18
PL6.E3A0      #001=ASW$WSN File=ASW$WSN.:E05TSI                                  TUE 07/29/97 10:57 Page:164  
         4 003401   000000 036000 xsym               ADLQ    DSEG2$
         4 003402   200112 756100                    STQ     TEMP$,,AUTO

     1066    15450    2   K =  WSNHDR2$ -> KL$WSNHDR.NTYP;

  15450  4 003403   200103 755100                    STA     K,,AUTO

     1067    15451    2   MOV$ = PINCRW( MOV$, K );

  15451  4 003404   200103 236100                    LDQ     K,,AUTO
         4 003405   000022 736000                    QLS     18
         4 003406   200032 036100                    ADLQ    MOV$,,AUTO
         4 003407   200032 756100                    STQ     MOV$,,AUTO

     1068    15452    2   WH_ARS = WH_ARS + 4*K;

  15452  4 003410   200103 236100                    LDQ     K,,AUTO
         4 003411   000002 736000                    QLS     2
         4 003412   200057 036100                    ADLQ    WH_ARS,,AUTO
         4 003413   200057 756100                    STQ     WH_ARS,,AUTO

     1069    15453    3   IF KL$WSNHDR.NTYP > 0 THEN DO;

  15453  4 003414   200067 471500                    LDP1    WSNHDR$,,AUTO
         4 003415   100003 235100                    LDA     3,,PR1
         4 003416   003465 600000 4                  TZE     s:15463

     1070    15454    3      ARS = BLK_SZ ;

  15454  4 003417   200014 235100                    LDA     BLK_SZ,,AUTO
         4 003420   200005 755100                    STA     ARS,,AUTO

     1071    15455    3      MOV2$ = PINCRW( WSNHDR$, KL$WSNHDR.TYPS.DISP(0) );

  15455  4 003421   100004 720100                    LXL0    4,,PR1
         4 003422   000000 636010                    EAQ     0,X0
         4 003423   200067 036100                    ADLQ    WSNHDR$,,AUTO
PL6.E3A0      #001=ASW$WSN File=ASW$WSN.:E05TSI                                  TUE 07/29/97 10:57 Page:165  
         4 003424   200111 756100                    STQ     MOV2$,,AUTO

     1072    15456    3      TEMP$ -> MOV$STRT = MOV2$ -> MOV$STRT;

  15456  4 003425   200111 473500                    LDP3    MOV2$,,AUTO
         4 003426   000000 621005                    EAX1    0,AL
         4 003427   200112 474500                    LDP4    TEMP$,,AUTO
         4 003430   200005 722100                    LXL2    ARS,,AUTO
         4 003431   040140 100540                    MLR     fill='040'O
         4 003432   300000 000011                    ADSC9   0,,PR3                   cn=0,n=*X1
         4 003433   400000 000012                    ADSC9   0,,PR4                   cn=0,n=*X2

     1073    15457    3      MOV2$ = PINCRW( MOV2$, K );

  15457  4 003434   200103 236100                    LDQ     K,,AUTO
         4 003435   000022 736000                    QLS     18
         4 003436   200111 036100                    ADLQ    MOV2$,,AUTO
         4 003437   200111 756100                    STQ     MOV2$,,AUTO

     1074    15458    3      MOV2$ -> MOV$STRT = TEMP$ -> MOV$STRT;

  15458  4 003440   200005 720100                    LXL0    ARS,,AUTO
         4 003441   200111 471500                    LDP1    MOV2$,,AUTO
         4 003442   040140 100540                    MLR     fill='040'O
         4 003443   400000 000010                    ADSC9   0,,PR4                   cn=0,n=*X0
         4 003444   100000 000010                    ADSC9   0,,PR1                   cn=0,n=*X0

     1075    15459    4      DO J = 0 TO KL$WSNHDR.NTYP-1;

  15459  4 003445   200102 450100                    STZ     J,,AUTO
         4 003446   003461 710000 4                  TRA     s:15461+3

     1076    15460    4         KL$WSNHDR.TYPS.DISP(J) = KL$WSNHDR.TYPS.DISP(J) + K;

  15460  4 003447   200067 470500                    LDP0    WSNHDR$,,AUTO
         4 003450   200102 720100                    LXL0    J,,AUTO
         4 003451   000004 236110                    LDQ     4,X0,PR0
PL6.E3A0      #001=ASW$WSN File=ASW$WSN.:E05TSI                                  TUE 07/29/97 10:57 Page:166  
         4 003452   777777 376007                    ANQ     -1,DL
         4 003453   200103 036100                    ADLQ    K,,AUTO
         4 003454   000000 621006                    EAX1    0,QL
         4 003455   000004 441110                    SXL1    4,X0,PR0

     1077    15461    4         END;

  15461  4 003456   200102 235100                    LDA     J,,AUTO
         4 003457   000001 035007                    ADLA    1,DL
         4 003460   200102 755100                    STA     J,,AUTO
         4 003461   200067 470500                    LDP0    WSNHDR$,,AUTO
         4 003462   200102 236100                    LDQ     J,,AUTO
         4 003463   000003 116100                    CMPQ    3,,PR0
         4 003464   003447 602000 4                  TNC     s:15460

     1078    15462    3      END;

     1079    15463    3   DO I = 0 TO WSNHDR2$->KL$WSNHDR.NTYP-1;

  15463  4 003465   200101 450100                    STZ     I,,AUTO
         4 003466   003554 710000 4                  TRA     s:15477+3

     1080    15464    3      WTBLK$ = PINCRW( DSEG3$, WSNHDR2$ -> KL$WSNHDR.TYPS.DISP(I)

  15464  4 003467   200105 470500                    LDP0    WSNHDR2$,,AUTO
         4 003470   200101 720100                    LXL0    I,,AUTO
         4 003471   000004 236110                    LDQ     4,X0,PR0
         4 003472   777777 376007                    ANQ     -1,DL
         4 003473   200107 036100                    ADLQ    WSNHDR2_OFF,,AUTO
         4 003474   000022 736000                    QLS     18
         4 003475   000000 036000 xsym               ADLQ    DSEG3$
         4 003476   200073 756100                    STQ     WTBLK$,,AUTO

     1081    15465    3           + WSNHDR2_OFF ) ;
     1082    15466    3      TYPE = WSNHDR2$ -> KL$WSNHDR.TYPS.TYP(I) ;

  15466  4 003477   000004 221110                    LDX1    4,X0,PR0
PL6.E3A0      #001=ASW$WSN File=ASW$WSN.:E05TSI                                  TUE 07/29/97 10:57 Page:167  
         4 003500   200055 741100                    STX1    TYPE,,AUTO

     1083    15467    3      ARS = LENGTHC( KL$WTBLK ) ;

  15467  4 003501   000100 235007                    LDA     64,DL
         4 003502   200005 755100                    STA     ARS,,AUTO

     1084    15468    3      ARS = 4 * ( (ARS+3) / 4 ) ;

  15468  4 003503   200005 236100                    LDQ     ARS,,AUTO
         4 003504   000003 036007                    ADLQ    3,DL
         4 003505   000002 772000                    QRL     2
         4 003506   000002 736000                    QLS     2
         4 003507   200005 756100                    STQ     ARS,,AUTO

     1085    15469    3      MOV$STRT = WTBLK$ -> MOV$STRT ;

  15469  4 003510   200073 471500                    LDP1    WTBLK$,,AUTO
         4 003511   000000 622006                    EAX2    0,QL
         4 003512   200032 473500                    LDP3    MOV$,,AUTO
         4 003513   200005 723100                    LXL3    ARS,,AUTO
         4 003514   040140 100540                    MLR     fill='040'O
         4 003515   100000 000012                    ADSC9   0,,PR1                   cn=0,n=*X2
         4 003516   300000 000013                    ADSC9   0,,PR3                   cn=0,n=*X3

     1086    15470    3      DISP = WH_ARS/4 ;

  15470  4 003517   200057 236100                    LDQ     WH_ARS,,AUTO
         4 003520   000002 772000                    QRL     2
         4 003521   200110 756100                    STQ     DISP,,AUTO

     1087    15471    3      WH_ARS = WH_ARS + ARS ;

  15471  4 003522   200057 236100                    LDQ     WH_ARS,,AUTO
         4 003523   200005 036100                    ADLQ    ARS,,AUTO
         4 003524   200057 756100                    STQ     WH_ARS,,AUTO

PL6.E3A0      #001=ASW$WSN File=ASW$WSN.:E05TSI                                  TUE 07/29/97 10:57 Page:168  
     1088    15472    3      BLK_SZ = BLK_SZ + ARS ;

  15472  4 003525   200014 236100                    LDQ     BLK_SZ,,AUTO
         4 003526   200005 036100                    ADLQ    ARS,,AUTO
         4 003527   200014 756100                    STQ     BLK_SZ,,AUTO

     1089    15473    3      MOV$ = PINCRW( MOV$, (ARS+3)/4 ) ;

  15473  4 003530   200005 236100                    LDQ     ARS,,AUTO
         4 003531   000003 036007                    ADLQ    3,DL
         4 003532   000002 772000                    QRL     2
         4 003533   000022 736000                    QLS     18
         4 003534   200032 036100                    ADLQ    MOV$,,AUTO
         4 003535   200032 756100                    STQ     MOV$,,AUTO

     1090    15474    3      KL$WSNHDR.TYPS.TYP(KL$WSNHDR.NTYP) = TYPE ;

  15474  4 003536   200067 473500                    LDP3    WSNHDR$,,AUTO
         4 003537   300003 722100                    LXL2    3,,PR3
         4 003540   300004 741112                    STX1    4,X2,PR3

     1091    15475    3      KL$WSNHDR.TYPS.DISP(KL$WSNHDR.NTYP) = DISP ;

  15475  4 003541   200067 473500                    LDP3    WSNHDR$,,AUTO
         4 003542   300003 722100                    LXL2    3,,PR3
         4 003543   200110 723100                    LXL3    DISP,,AUTO
         4 003544   300004 443112                    SXL3    4,X2,PR3

     1092    15476    3      KL$WSNHDR.NTYP = KL$WSNHDR.NTYP + 1;

  15476  4 003545   200067 473500                    LDP3    WSNHDR$,,AUTO
         4 003546   300003 235100                    LDA     3,,PR3
         4 003547   000001 035007                    ADLA    1,DL
         4 003550   300003 755100                    STA     3,,PR3

     1093    15477    3      END;

PL6.E3A0      #001=ASW$WSN File=ASW$WSN.:E05TSI                                  TUE 07/29/97 10:57 Page:169  
  15477  4 003551   200101 235100                    LDA     I,,AUTO
         4 003552   000001 035007                    ADLA    1,DL
         4 003553   200101 755100                    STA     I,,AUTO
         4 003554   200105 470500                    LDP0    WSNHDR2$,,AUTO
         4 003555   200101 236100                    LDQ     I,,AUTO
         4 003556   000003 116100                    CMPQ    3,,PR0
         4 003557   003467 602000 4                  TNC     s:15464

     1094    15478    2   IF (USE_TYPE = 6 /* OUTSYM DEVICE */)

  15478  4 003560   200104 235100                    LDA     USE_TYPE,,AUTO
         4 003561   000006 115007                    CMPA    6,DL
         4 003562   003567 601000 4                  TNZ     s:15501

     1095    15479    3   THEN DO;

     1096    15480        /*E* ERROR:   ASW-E$DEVNOTROUTED-C
     1097    15481             MESSAGE0: Unless you use the ROUTE keyin, automatic routing of output
     1098    15482                       to these devices will only begin after the devices reconnect
     1099    15483                       to CP-6 (logon/logoff|crash/boot/recovery).
     1100    15484        */
     1101    15485           %SCREAM (ERR#=E$DEVNOTROUTED, LEVEL=WARN, MID='W');

  15495  4 003563   000031 630400 5                  EPPR0   25
         4 003564   000017 631400 xsym               EPPR1   B_VECTNIL+15
         4 003565   000000 701000 xent               TSX1    ASH$WARN
         4 003566   000000 011000                    NOP     0

     1102    15500    3      END;

     1103    15501    2   RETURN ;

  15501  4 003567   200076 221300                    LDX1  ! WTB_SZ+2,,AUTO
         4 003570   000001 702211                    TSX2  ! 1,X1

     1104    15502    3   DO WHILE( '0'B );

PL6.E3A0      #001=ASW$WSN File=ASW$WSN.:E05TSI                                  TUE 07/29/97 10:57 Page:170  
  15479  4 003571                       ENQ2_ERR     null
     1105    15503    3   ENQ2_ERR: ;
     1106    15504    3      CALL ASH$ERROR( ERR_CODE ) ;

  15504  4 003571   000003 630400 5                  EPPR0   3
         4 003572   000017 631400 xsym               EPPR1   B_VECTNIL+15
         4 003573   000000 701000 xent               TSX1    ASH$ERROR
         4 003574   000000 011000                    NOP     0

     1107    15505    3      RETURN;

  15505  4 003575   200076 221300                    LDX1  ! WTB_SZ+2,,AUTO
         4 003576   000001 702211                    TSX2  ! 1,X1

     1108    15506    3      END ;

     1109    15507                                                              /**/
     1110    15508    2   END   WSN_DEV ;
     1111    15509        %EJECT ;
PL6.E3A0      #001=ASW$WSN File=ASW$WSN.:E05TSI                                  TUE 07/29/97 10:57 Page:171  
     1112    15510    1   DEVWSN: PROC ;

  15510  4 003577   200122 741300       DEVWSN       STX1  ! BLK2_SZ+1,,AUTO

     1113    15511        /**/
     1114    15512        /*  This proc handles adding wsn names to device and device names    */
     1115    15513        /*  to wsn record. It also checks for the duplicates and returns     */
     1116    15514        /*  WSNDEV_FLG set if found.                                         */
     1117    15515        /**/
     1118    15516        /*********************************************************************/
     1119    15517        /*   Auto data       auto data       auto data       auto data       */
     1120    15518        /*********************************************************************/
     1121    15519
     1122    15520    2   DCL X UBIN WORD ;
     1123    15521
     1124    15522        /********************************************************************/
     1125    15523        /*   Procedure       procedure       procedure       procedure       */
     1126    15524        /*********************************************************************/
     1127    15525
     1128    15526
     1129    15527    3   DO X = 0 TO KL$WSNDEV.NDEV - 1 ;

  15527  4 003600   200123 450100                    STZ     X,,AUTO
         4 003601   003636 710000 4                  TRA     s:15555+3

     1130    15528    3      IF KL$WSNDEV.DEV(X) = DEV_WSN_KEY.ACCT

  15528  4 003602   200123 235100                    LDA     X,,AUTO
         4 003603   000003 735000                    ALS     3
         4 003604   200064 470500                    LDP0    WSNDEV$,,AUTO
         4 003605   040000 106505                    CMPC    fill='040'O
         4 003606   000001 000010                    ADSC9   1,A,PR0                  cn=0,n=8
         4 003607   000007 200010 2                  ADSC9   DEV_WSN_KEY              cn=1,n=8
         4 003610   003633 601000 4                  TNZ     s:15555

     1131    15529    4      THEN DO;

PL6.E3A0      #001=ASW$WSN File=ASW$WSN.:E05TSI                                  TUE 07/29/97 10:57 Page:172  
     1132    15530        /*E*  ERROR:     ASW-E$WSNDEV_DEV-C
     1133    15531              MESSAGE: Device% %U1 already exists for WSN% %U2.
     1134    15532        */
     1135    15533    4         AS_FIELD1.COUNT = 8 ;

  15533  4 003611   010000 236003                    LDQ     4096,DU
         4 003612   000000 552040 xsym               STBQ    AS_FIELD1,'40'O

     1136    15534    4         AS_FIELD2.COUNT = 8 ;

  15534  4 003613   000000 552040 xsym               STBQ    AS_FIELD2,'40'O

     1137    15535    4         AS_FIELD1.TEXT = DEV_WSN_KEY.ACCT ;

  15535  4 003614   040000 100400                    MLR     fill='040'O
         4 003615   000007 200010 2                  ADSC9   DEV_WSN_KEY              cn=1,n=8
         4 003616   000000 200050 xsym               ADSC9   AS_FIELD1                cn=1,n=40

     1138    15536    4         AS_FIELD2.TEXT = WSN_DEV_KEY.ACCT ;

  15536  4 003617   040000 100400                    MLR     fill='040'O
         4 003620   000003 200010 2                  ADSC9   WSN_DEV_KEY              cn=1,n=8
         4 003621   000000 200050 xsym               ADSC9   AS_FIELD2                cn=1,n=40

     1139    15537              %SCREAM( ERR#=E$WSNDEV_DEV, LEVEL=ERROR, MID='W' );

  15549  4 003622   000032 630400 5                  EPPR0   26
         4 003623   000017 631400 xsym               EPPR1   B_VECTNIL+15
         4 003624   000000 701000 xent               TSX1    ASH$ERROR
         4 003625   000000 011000                    NOP     0

     1140    15552    4         WSNDEV_FLG = AS_TRUE ;

  15552  4 003626   000000 236000 xsym               LDQ     AS_TRUE
         4 003627   400000 376003                    ANQ     -131072,DU
         4 003630   200066 756100                    STQ     WSNDEV_FLG,,AUTO

PL6.E3A0      #001=ASW$WSN File=ASW$WSN.:E05TSI                                  TUE 07/29/97 10:57 Page:173  
     1141    15553    4         RETURN ;

  15553  4 003631   200122 221300                    LDX1  ! BLK2_SZ+1,,AUTO
         4 003632   000001 702211                    TSX2  ! 1,X1

     1142    15554    4         END; /* Then do */
     1143    15555    3      END; /* Do loop */

  15555  4 003633   200123 236100                    LDQ     X,,AUTO
         4 003634   000001 036007                    ADLQ    1,DL
         4 003635   200123 756100                    STQ     X,,AUTO
         4 003636   200064 470500                    LDP0    WSNDEV$,,AUTO
         4 003637   200123 236100                    LDQ     X,,AUTO
         4 003640   000000 116100                    CMPQ    0,,PR0
         4 003641   003602 602000 4                  TNC     s:15528

     1144    15556             /**/
     1145    15557    2   DEVWSN$ = PINCRW( DSEG2$, DEVWSN_OFF2 );

  15557  4 003642   000027 236000 2                  LDQ     DEVWSN_OFF2
         4 003643   000022 736000                    QLS     18
         4 003644   000000 036000 xsym               ADLQ    DSEG2$
         4 003645   200017 756100                    STQ     DEVWSN$,,AUTO

     1146    15558    2   USERS_KEY = DEV_WSN_KEY ;

  15558  4 003646   000000 100400                    MLR     fill='000'O
         4 003647   000007 000015 2                  ADSC9   DEV_WSN_KEY              cn=0,n=13
         4 003650   000000 000052 xsym               ADSC9   USERS_KEY                cn=0,n=42

     1147    15559    2   DEVWSN_ARS = 4 * DEVWSN_OFF2 ;

  15559  4 003651   000027 235000 2                  LDA     DEVWSN_OFF2
         4 003652   000002 735000                    ALS     2
         4 003653   200020 755100                    STA     DEVWSN_ARS,,AUTO

     1148    15560    2   CALL ASB$READ_HLP (DEVWSN$, DEVWSN_ARS ) ALTRET( DEVWSN_ERR );
PL6.E3A0      #001=ASW$WSN File=ASW$WSN.:E05TSI                                  TUE 07/29/97 10:57 Page:174  

  15560  4 003654   200020 631500                    EPPR1   DEVWSN_ARS,,AUTO
         4 003655   202107 451500                    STP1    X+1012,,AUTO
         4 003656   200017 633500                    EPPR3   DEVWSN$,,AUTO
         4 003657   202106 453500                    STP3    X+1011,,AUTO
         4 003660   202106 630500                    EPPR0   X+1011,,AUTO
         4 003661   000020 631400 xsym               EPPR1   B_VECTNIL+16
         4 003662   000000 701000 xent               TSX1    ASB$READ_HLP
         4 003663   003665 702000 4                  TSX2    DEVWSN_ERR

     1149    15561    3   IF '0'B THEN DO;

  15561  4 003664   003671 710000 4                  TRA     s:15569

  15553  4 003665                       DEVWSN_ERR   null
     1150    15562    3   DEVWSN_ERR: ;
     1151    15563    3      DEVWSN_ARS = LENGTHC(KL$DEVWSN) - LENGTHC(KL$DEVWSN.DEV(0));

  15563  4 003665   000004 235007                    LDA     4,DL
         4 003666   200020 755100                    STA     DEVWSN_ARS,,AUTO

     1152    15564    3      KL$DEVWSN.NDEV = 0;

  15564  4 003667   200017 470500                    LDP0    DEVWSN$,,AUTO
         4 003670   000000 450100                    STZ     0,,PR0

     1153    15565    3      END; /* If '0'b  */

     1154    15566             /**/
     1155    15567             /* check device record with wsn names for duplicates  */
     1156    15568             /**/
     1157    15569    3   DO X = 0 TO KL$DEVWSN.NDEV-1 ;

  15569  4 003671   200123 450100                    STZ     X,,AUTO
         4 003672   003727 710000 4                  TRA     s:15597+3

     1158    15570    3      IF KL$DEVWSN.DEV(X) = WSN_DEV_KEY.ACCT
PL6.E3A0      #001=ASW$WSN File=ASW$WSN.:E05TSI                                  TUE 07/29/97 10:57 Page:175  

  15570  4 003673   200123 235100                    LDA     X,,AUTO
         4 003674   000003 735000                    ALS     3
         4 003675   200017 470500                    LDP0    DEVWSN$,,AUTO
         4 003676   040000 106505                    CMPC    fill='040'O
         4 003677   000001 000010                    ADSC9   1,A,PR0                  cn=0,n=8
         4 003700   000003 200010 2                  ADSC9   WSN_DEV_KEY              cn=1,n=8
         4 003701   003724 601000 4                  TNZ     s:15597

     1159    15571    4      THEN DO;

     1160    15572        /*E*  ERROR:     ASW-E$DEVWSN_WSN-C
     1161    15573              MESSAGE: WSN% %U1 already exists for Device% %U2.
     1162    15574        */
     1163    15575    4         AS_FIELD1.COUNT = 8 ;

  15575  4 003702   010000 236003                    LDQ     4096,DU
         4 003703   000000 552040 xsym               STBQ    AS_FIELD1,'40'O

     1164    15576    4         AS_FIELD2.COUNT = 8 ;

  15576  4 003704   000000 552040 xsym               STBQ    AS_FIELD2,'40'O

     1165    15577    4         AS_FIELD1.TEXT = WSN_DEV_KEY.ACCT ;

  15577  4 003705   040000 100400                    MLR     fill='040'O
         4 003706   000003 200010 2                  ADSC9   WSN_DEV_KEY              cn=1,n=8
         4 003707   000000 200050 xsym               ADSC9   AS_FIELD1                cn=1,n=40

     1166    15578    4         AS_FIELD2.TEXT = DEV_WSN_KEY.ACCT ;

  15578  4 003710   040000 100400                    MLR     fill='040'O
         4 003711   000007 200010 2                  ADSC9   DEV_WSN_KEY              cn=1,n=8
         4 003712   000000 200050 xsym               ADSC9   AS_FIELD2                cn=1,n=40

     1167    15579              %SCREAM( ERR#=E$DEVWSN_WSN, LEVEL=ERROR, MID='W' );

PL6.E3A0      #001=ASW$WSN File=ASW$WSN.:E05TSI                                  TUE 07/29/97 10:57 Page:176  
  15591  4 003713   000033 630400 5                  EPPR0   27
         4 003714   000017 631400 xsym               EPPR1   B_VECTNIL+15
         4 003715   000000 701000 xent               TSX1    ASH$ERROR
         4 003716   000000 011000                    NOP     0

     1168    15594    4         WSNDEV_FLG = AS_TRUE ;

  15594  4 003717   000000 236000 xsym               LDQ     AS_TRUE
         4 003720   400000 376003                    ANQ     -131072,DU
         4 003721   200066 756100                    STQ     WSNDEV_FLG,,AUTO

     1169    15595    4         RETURN ;

  15595  4 003722   200122 221300                    LDX1  ! BLK2_SZ+1,,AUTO
         4 003723   000001 702211                    TSX2  ! 1,X1

     1170    15596    4         END; /* Then do */
     1171    15597    3      END; /* Do loop */

  15597  4 003724   200123 236100                    LDQ     X,,AUTO
         4 003725   000001 036007                    ADLQ    1,DL
         4 003726   200123 756100                    STQ     X,,AUTO
         4 003727   200017 470500                    LDP0    DEVWSN$,,AUTO
         4 003730   200123 236100                    LDQ     X,,AUTO
         4 003731   000000 116100                    CMPQ    0,,PR0
         4 003732   003673 602000 4                  TNC     s:15570

     1172    15598             /**/
     1173    15599             /* Add wsn and device to the lists.  */
     1174    15600             /**/
     1175    15601    3   IF KL$WSNDEV.NDEV > 254 THEN DO;

  15601  4 003733   200064 471500                    LDP1    WSNDEV$,,AUTO
         4 003734   100000 235100                    LDA     0,,PR1
         4 003735   000377 115007                    CMPA    255,DL
         4 003736   003745 602000 4                  TNC     s:15623

PL6.E3A0      #001=ASW$WSN File=ASW$WSN.:E05TSI                                  TUE 07/29/97 10:57 Page:177  
     1176    15602        /*E*    ERROR:  ASW-E$TOO_MANY_WSNS-C
     1177    15603                MESSAGE:  This device already belongs to 255 workstations.
     1178    15604                MESSAGE1:  A device can be hooked to a maximum of 255 workstations.
     1179    15605        */
     1180    15606           %SCREAM (ERR#=%E$TOO_MANY_WSNS, LEVEL=ERROR, MID='W');

  15618  4 003737   000034 630400 5                  EPPR0   28
         4 003740   000017 631400 xsym               EPPR1   B_VECTNIL+15
         4 003741   000000 701000 xent               TSX1    ASH$ERROR
         4 003742   000000 011000                    NOP     0

     1181    15621    3      RETURN;

  15621  4 003743   200122 221300                    LDX1  ! BLK2_SZ+1,,AUTO
         4 003744   000001 702211                    TSX2  ! 1,X1

     1182    15622    3      END;   /*  Ndev > 254 */
     1183    15623    2   KL$WSNDEV.DEV(KL$WSNDEV.NDEV) = DEV_WSN_KEY.ACCT ;

  15623  4 003745   100000 235100                    LDA     0,,PR1
         4 003746   000001 735000                    ALS     1
         4 003747   000002 735000                    ALS     2
         4 003750   040105 100400                    MLR     fill='040'O
         4 003751   000007 200010 2                  ADSC9   DEV_WSN_KEY              cn=1,n=8
         4 003752   100001 000010                    ADSC9   1,A,PR1                  cn=0,n=8

     1184    15624    2   KL$WSNDEV.NDEV = KL$WSNDEV.NDEV + 1;

  15624  4 003753   200064 470500                    LDP0    WSNDEV$,,AUTO
         4 003754   000000 235100                    LDA     0,,PR0
         4 003755   000001 035007                    ADLA    1,DL
         4 003756   000000 755100                    STA     0,,PR0

     1185    15625    2   KL$DEVWSN.DEV(KL$DEVWSN.NDEV) = WSN_DEV_KEY.ACCT ;

  15625  4 003757   200017 470500                    LDP0    DEVWSN$,,AUTO
         4 003760   000000 235100                    LDA     0,,PR0
PL6.E3A0      #001=ASW$WSN File=ASW$WSN.:E05TSI                                  TUE 07/29/97 10:57 Page:178  
         4 003761   000001 735000                    ALS     1
         4 003762   000002 735000                    ALS     2
         4 003763   040105 100400                    MLR     fill='040'O
         4 003764   000003 200010 2                  ADSC9   WSN_DEV_KEY              cn=1,n=8
         4 003765   000001 000010                    ADSC9   1,A,PR0                  cn=0,n=8

     1186    15626    2   KL$DEVWSN.NDEV = KL$DEVWSN.NDEV + 1;

  15626  4 003766   200017 470500                    LDP0    DEVWSN$,,AUTO
         4 003767   000000 235100                    LDA     0,,PR0
         4 003770   000001 035007                    ADLA    1,DL
         4 003771   000000 755100                    STA     0,,PR0

     1187    15627             /**/
     1188    15628             /*  Write device with wsn names out to :HLP  */
     1189    15629             /**/
     1190    15630    2   USERS_KEY = DEV_WSN_KEY ;

  15630  4 003772   000000 100400                    MLR     fill='000'O
         4 003773   000007 000015 2                  ADSC9   DEV_WSN_KEY              cn=0,n=13
         4 003774   000000 000052 xsym               ADSC9   USERS_KEY                cn=0,n=42

     1191    15631    2   DEVWSN_ARS = LENGTHC(KL$DEVWSN) + LENGTHC(KL$DEVWSN.DEV)*(KL$DEVWSN.NDEV-1);

  15631  4 003775   200017 470500                    LDP0    DEVWSN$,,AUTO
         4 003776   000000 235100                    LDA     0,,PR0
         4 003777   000003 735000                    ALS     3
         4 004000   000004 035007                    ADLA    4,DL
         4 004001   200020 755100                    STA     DEVWSN_ARS,,AUTO

     1192    15632    2   CALL ASB$WRITE_HLP( DEVWSN$, DEVWSN_ARS ) ;

  15632  4 004002   200020 631500                    EPPR1   DEVWSN_ARS,,AUTO
         4 004003   202107 451500                    STP1    X+1012,,AUTO
         4 004004   200017 633500                    EPPR3   DEVWSN$,,AUTO
         4 004005   202106 453500                    STP3    X+1011,,AUTO
         4 004006   202106 630500                    EPPR0   X+1011,,AUTO
PL6.E3A0      #001=ASW$WSN File=ASW$WSN.:E05TSI                                  TUE 07/29/97 10:57 Page:179  
         4 004007   000020 631400 xsym               EPPR1   B_VECTNIL+16
         4 004010   000000 701000 xent               TSX1    ASB$WRITE_HLP
         4 004011   000000 011000                    NOP     0

     1193    15633    2   RETURN ;

  15633  4 004012   200122 221300                    LDX1  ! BLK2_SZ+1,,AUTO
         4 004013   000001 702211                    TSX2  ! 1,X1

     1194    15634
     1195    15635    2   END  DEVWSN ;
     1196    15636        %EJECT;
PL6.E3A0      #001=ASW$WSN File=ASW$WSN.:E05TSI                                  TUE 07/29/97 10:57 Page:180  
     1197    15637        /*F*
     1198    15638             NAME: CHECK_DEV_OPTS
     1199    15639             PURPOSE:
     1200    15640                  To go through all the devices of a WSN checking that all devices of
     1201    15641                  the same type have the same profile.  If any two devices don't have
     1202    15642                  the same profile, issue an error message.
     1203    15643             DESCRIPTION:
     1204    15644                  Get the first device of a WSN.  Extract its type and profile.  Go
     1205    15645                  through the rest of the WSNs devices for that type and check that the
     1206    15646                  profiles are the same.  If a device of the same type exists as an
     1207    15647                  earlier device, skip this one - its already been tested.
     1208    15648        */
     1209    15649        /*D*
     1210    15650             NAME: CHECK_DEV_PROS
     1211    15651             CALL:
     1212    15652                  CALL CHECK_DEV_PROS;
     1213    15653             INTERFACE:
     1214    15654                  This routine is internal to the ASW$WSN module.  It has no parameters
     1215    15655                  passed in and cannot altreturn.  It assumes that WSNHDR$ is pointing
     1216    15656                  to the begining of a WSN record header.
     1217    15657             ENVIRONMENT:
     1218    15658                  Internal to SUPER.
     1219    15659             INPUT:
     1220    15660                  None.
     1221    15661             OUTPUT:
     1222    15662                  If any anomolies to the consistancy of a given device types profiles
     1223    15663                  exist, a warning message will be printed.
     1224    15664             SCRATCH:
     1225    15665                  None.
     1226    15666             DESCRIPTION:
     1227    15667                  Get the devices type (i.e. 'LP').  Check all previous device types to
     1228    15668                  assure this is the first time checking for this type.  If it is- get
     1229    15669                  the next device.  If the types are the same, check for similar
     1230    15670                  profiles.  If the profiles are the same- continue.  If they differ,
     1231    15671                  issue a warning message and go on to the next device type.
     1232    15672        */
     1233    15673
PL6.E3A0      #001=ASW$WSN File=ASW$WSN.:E05TSI                                  TUE 07/29/97 10:57 Page:181  
     1234    15674    1   CHECK_DEV_PROS: PROC;

  15674  4 004014   200076 741300       CHECK_DEV_P* STX1  ! WTB_SZ+2,,AUTO

     1235    15675    2   DCL I UBIN;
     1236    15676    2   DCL J UBIN;
     1237    15677    2   DCL PRO_NAME CHAR (18);
     1238    15678    2   DCL TYPE CHAR (2);
     1239    15679
     1240    15680    2   IF KL$WSNHDR.NTYP = 0

  15680  4 004015   200067 470500                    LDP0    WSNHDR$,,AUTO
         4 004016   000003 235100                    LDA     3,,PR0
         4 004017   004021 601000 4                  TNZ     s:15685

     1241    15681    3   THEN DO;

     1242    15682    3      RETURN; /* No devices to check */

  15682  4 004020   000001 702211                    TSX2  ! 1,X1

     1243    15683    3      END;
     1244    15684
     1245    15685    3   DO I = 0 TO KL$WSNHDR.NTYP-1;

  15685  4 004021   200077 450100                    STZ     I,,AUTO
         4 004022   004130 710000 4                  TRA     s:15734+3

     1246    15686    3      TYPE = KL$WSNHDR.TYPS.TYP (I);

  15686  4 004023   200067 470500                    LDP0    WSNHDR$,,AUTO
         4 004024   200077 720100                    LXL0    I,,AUTO
         4 004025   000004 221110                    LDX1    4,X0,PR0
         4 004026   200106 741100                    STX1    TYPE,,AUTO

     1247    15687    3      J = 1;

PL6.E3A0      #001=ASW$WSN File=ASW$WSN.:E05TSI                                  TUE 07/29/97 10:57 Page:182  
  15687  4 004027   000001 235007                    LDA     1,DL
         4 004030   200100 755100                    STA     J,,AUTO

     1248    15688    3      IF I ~= 0

  15688  4 004031   200077 236100                    LDQ     I,,AUTO
         4 004032   004051 600000 4                  TZE     s:15698

     1249    15689    4      THEN DO;

     1250    15690    4   CHK_TYP:
     1251    15691    5         DO J = 0 TO I-1; /* Check if we already did this type */

  15691  4 004033   200100 450100       CHK_TYP      STZ     J,,AUTO
         4 004034   004046 710000 4                  TRA     s:15696+3

     1252    15692    5            IF TYPE = KL$WSNHDR.TYPS.TYP (J)

  15692  4 004035   200106 220100                    LDX0    TYPE,,AUTO
         4 004036   200067 470500                    LDP0    WSNHDR$,,AUTO
         4 004037   200100 721100                    LXL1    J,,AUTO
         4 004040   000004 100111                    CMPX0   4,X1,PR0
         4 004041   004043 601000 4                  TNZ     s:15696

     1253    15693    6            THEN DO;

     1254    15694    6               EXIT CHK_TYP;

  15694  4 004042   004051 710000 4                  TRA     s:15698

     1255    15695    6               END;
     1256    15696    5            END;

  15696  4 004043   200100 235100                    LDA     J,,AUTO
         4 004044   000001 035007                    ADLA    1,DL
         4 004045   200100 755100                    STA     J,,AUTO
         4 004046   200100 236100                    LDQ     J,,AUTO
PL6.E3A0      #001=ASW$WSN File=ASW$WSN.:E05TSI                                  TUE 07/29/97 10:57 Page:183  
         4 004047   200077 116100                    CMPQ    I,,AUTO
         4 004050   004035 602000 4                  TNC     s:15692

     1257    15697    4         END;

     1258    15698    3      IF J = (I + 1) /* First of this type */

  15698  4 004051   200077 236100                    LDQ     I,,AUTO
         4 004052   000001 036007                    ADLQ    1,DL
         4 004053   200100 116100                    CMPQ    J,,AUTO
         4 004054   004125 601000 4                  TNZ     s:15734

     1259    15699    4      THEN DO;

     1260    15700    4         WTBLK$ = PINCRW (WSNHDR$, KL$WSNHDR.TYPS.DISP (J));

  15700  4 004055   200100 720100                    LXL0    J,,AUTO
         4 004056   000004 721110                    LXL1    4,X0,PR0
         4 004057   000000 636011                    EAQ     0,X1
         4 004060   200067 036100                    ADLQ    WSNHDR$,,AUTO
         4 004061   200073 756100                    STQ     WTBLK$,,AUTO

     1261    15701    4         PRO_NAME = WTBLK$ -> KL$WTBLK.PNAME.TXT;

  15701  4 004062   200073 471500                    LDP1    WTBLK$,,AUTO
         4 004063   040100 100500                    MLR     fill='040'O
         4 004064   100015 200013                    ADSC9   13,,PR1                  cn=1,n=11
         4 004065   200101 000022                    ADSC9   PRO_NAME,,AUTO           cn=0,n=18

     1262    15702    4   CHK_PRO:
     1263    15703    5         DO J = (I+1) TO KL$WSNHDR.NTYP-1;

  15703  4 004066   200077 235100       CHK_PRO      LDA     I,,AUTO
         4 004067   000001 035007                    ADLA    1,DL
         4 004070   200100 755100                    STA     J,,AUTO
         4 004071   004122 710000 4                  TRA     s:15732+3

PL6.E3A0      #001=ASW$WSN File=ASW$WSN.:E05TSI                                  TUE 07/29/97 10:57 Page:184  
     1264    15704    5            WTBLK$ = PINCRW (WSNHDR$, KL$WSNHDR.TYPS.DISP (J));

  15704  4 004072   200067 470500                    LDP0    WSNHDR$,,AUTO
         4 004073   200100 720100                    LXL0    J,,AUTO
         4 004074   000004 721110                    LXL1    4,X0,PR0
         4 004075   000000 636011                    EAQ     0,X1
         4 004076   200067 036100                    ADLQ    WSNHDR$,,AUTO
         4 004077   200073 756100                    STQ     WTBLK$,,AUTO

     1265    15705    5            IF PRO_NAME = WTBLK$ -> KL$WTBLK.PNAME.TXT

  15705  4 004100   200073 471500                    LDP1    WTBLK$,,AUTO
         4 004101   040100 106500                    CMPC    fill='040'O
         4 004102   200101 000022                    ADSC9   PRO_NAME,,AUTO           cn=0,n=18
         4 004103   100015 200013                    ADSC9   13,,PR1                  cn=1,n=11
         4 004104   004117 601000 4                  TNZ     s:15732

     1266    15706    6            THEN DO;

     1267    15707        /*E* ERROR:   ASW-E$DEVPROSNOTSAME-C
     1268    15708             MESSAGE1: The profiles for the %U1 devices are not all the same.
     1269    15709             MESSAGE2: If the profiles for a given device type are not the
     1270    15710                       same, output to that device could have indeterminate
     1271    15711                       results.
     1272    15712        */
     1273    15713    6               AS_FIELD1.COUNT = 2;

  15713  4 004105   002000 236003                    LDQ     1024,DU
         4 004106   000000 552040 xsym               STBQ    AS_FIELD1,'40'O

     1274    15714    6               AS_FIELD1.TEXT = TYPE;

  15714  4 004107   040000 100500                    MLR     fill='040'O
         4 004110   200106 000002                    ADSC9   TYPE,,AUTO               cn=0,n=2
         4 004111   000000 200050 xsym               ADSC9   AS_FIELD1                cn=1,n=40

     1275    15715                    %SCREAM (ERR#=E$DEVPROSNOTSAME, LEVEL=WARN, MID='W');
PL6.E3A0      #001=ASW$WSN File=ASW$WSN.:E05TSI                                  TUE 07/29/97 10:57 Page:185  

  15725  4 004112   000035 630400 5                  EPPR0   29
         4 004113   000017 631400 xsym               EPPR1   B_VECTNIL+15
         4 004114   000000 701000 xent               TSX1    ASH$WARN
         4 004115   000000 011000                    NOP     0

     1276    15730    6               EXIT CHK_PRO;

  15730  4 004116   004125 710000 4                  TRA     s:15734

     1277    15731    6               END;
     1278    15732    5            END;

  15732  4 004117   200100 235100                    LDA     J,,AUTO
         4 004120   000001 035007                    ADLA    1,DL
         4 004121   200100 755100                    STA     J,,AUTO
         4 004122   200100 236100                    LDQ     J,,AUTO
         4 004123   000003 116100                    CMPQ    3,,PR0
         4 004124   004072 602000 4                  TNC     s:15704

     1279    15733    4         END;

     1280    15734    3      END;

  15734  4 004125   200077 235100                    LDA     I,,AUTO
         4 004126   000001 035007                    ADLA    1,DL
         4 004127   200077 755100                    STA     I,,AUTO
         4 004130   200067 470500                    LDP0    WSNHDR$,,AUTO
         4 004131   200077 236100                    LDQ     I,,AUTO
         4 004132   000003 116100                    CMPQ    3,,PR0
         4 004133   004023 602000 4                  TNC     s:15686

     1281    15735    2   END CHECK_DEV_PROS;

  15735  4 004134   200076 221300                    LDX1  ! WTB_SZ+2,,AUTO
         4 004135   000001 702211                    TSX2  ! 1,X1
     1282    15736    1   END   ASW$WSN ;
PL6.E3A0      #001=ASW$WSN File=ASW$WSN.:E05TSI                                  TUE 07/29/97 10:57 Page:186  

PL6.E3A0      #001=ASW$WSN File=ASW$WSN.:E05TSI                                  TUE 07/29/97 10:57 Page:187  
--  Include file information  --

   AS_SUPER_R.:E05TOU  cannot be made into a system file and is referenced.
   XU_FORMAT_C.:E05TOU  is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
   KL_SUPER_C.:E05TOU  is referenced.
   AS_MAC_C.:E05TOU  cannot be made into a system file and is referenced.
   AS_SUBS_C.:E05TOU  is referenced.
   AS_SUPER_C.:E05TOU  is referenced.
   AS_ENTRIES_M.:E05TOU  is referenced.
   JG_GHOSTS_C.:E05TOU  is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B_MACROS_C.:E05TOU  is referenced.
   AS_SSUBS_C.:E05TOU  is referenced.
   AS_PERR_C.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure ASW$WSN.
PL6.E3A0      #001=ASW$WSN File=ASW$WSN.:E05TSI                                  TUE 07/29/97 10:57 Page:188  

 **** Variables and constants ****

  ****  Section 002  Data  ASW$WSN

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

    24-0-0/w UBIN        r     1 ACBLK_OFF1                27-0-0/w UBIN        r     1 DEVWSN_OFF2
     7-0-0/w STRC(117)   r     1 DEV_WSN_KEY               13-0-0/w STRC(144)   r     1 STAT_KEY
    31-0-0/w UBIN        r     1 TREC_OFF2                 30-0-0/w UBIN        r     1 TWSNREC_OFF2
    17-0-0/w STRC(81)    r     1 TWSN_KEY                  26-0-0/w UBIN        r     1 WSNDEV_OFF2
    32-0-0/w UBIN        r     1 WSNHDR2_OFF3              22-0-0/w UBIN        r     1 WSNHDR_OFF1
     3-0-0/w STRC(144)   r     1 WSN_DEV_KEY                0-0-0/w STRC(90)    r     1 WSN_KEY
    23-0-0/w UBIN        r     1 WTBLK_OFF1

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 ACBLK$                     4-0-0/w UBIN        r     1 ACC_ARS
   106-0-0/b BIT         r     1 ADD_FLG                    5-0-0/w UBIN        r     1 ARS
     6-0-0/w UBIN        r     1 ARS1                       7-0-0/w UBIN        r     1 ARS2
    10-0-0/b BIT (18)    r     1 ATTR                      11-0-0/w PTR         r     1 ATTR$
    12-0-0/w UBIN        r     1 ATTR_SZ                   13-0-0/w PTR         r     1 BLK$
   121-0-0/w UBIN        r     1 BLK2_SZ                   14-0-0/w UBIN        r     1 BLK_SZ
    77-0-0/w PTR         r     1 BUF$                     100-0-0/w UBIN        r     1 BUF_ARS
   105-0-0/w UBIN        r     1 CODE2                     16-0-0/w BIT         r     1 CONFIG
    15-0-0/b BIT         r     1 CREATE                    17-0-0/w PTR         r     1 DEVWSN$
    20-0-0/w UBIN        r     1 DEVWSN_ARS               103-0-0/w PTR         r     1 DFORM$
   110-0-0/w UBIN        r     1 DISP                     115-0-0/b BIT         r     1 DONE_FLG
   105-0-0/c CHAR(4096)  r     1 FORM_BUF                 104-0-0/b BIT         r     1 FORM_FLG
    21-0-0/b BIT         r     1 FOR_FLG                   22-0-0/b BIT         r     1 FOUND_ATTR
    23-0-0/b BIT         r     1 FOUND_TYPE               106-0-0/b BIT         r     1 FOUND_TYPE
    24-0-0/w UBIN        r     1 I                        102-0-0/w UBIN        r     1 I
   101-0-0/w UBIN        r     1 I                        101-0-0/w UBIN        r     1 I
    77-0-0/w UBIN        r     1 I                         25-0-0/w UBIN        r     1 INCR
PL6.E3A0      #001=ASW$WSN File=ASW$WSN.:E05TSI                                  TUE 07/29/97 10:57 Page:189  
    26-0-0/b BIT         r     1 INDIRECT                  27-0-0/w UBIN        r     1 J
   102-0-0/w UBIN        r     1 J                        102-0-0/w UBIN        r     1 J
   100-0-0/w UBIN        r     1 J                         30-0-0/w UBIN        r     1 K
   103-0-0/w UBIN        r     1 K                        103-0-0/w UBIN        r     1 K
    31-0-0/b BIT         r     1 MORE                      32-0-0/w PTR         r     1 MOV$
   111-0-0/w PTR         r     1 MOV2$                     33-0-0/w UBIN        r     1 NDEV
    34-0-0/c CHAR(8)     r     1 NODE_NAME                 36-0-0/w UBIN        r     1 NTYP
    37-0-0/c CHAR(2)     r     1 NUM                      114-0-0/c CHAR(2)     r     1 NUM1
    40-0-0/w UBIN        r     1 OFFSET                   101-0-0/c CHAR(18)    r     1 PRO_NAME
    41-0-0/w PTR         r     1 PTR$                      77-0-0/w PTR         r     1 PTR2$
    42-0-0/w PTR         r     1 ROOT$                     43-0-0/c STRC(81)    r     1 STAT_NAME
    46-0-0/w UBIN        r     1 SUBS                     104-0-0/w UBIN        r     1 SUBS
   112-0-0/w PTR         r     1 TEMP$                     47-0-0/w PTR         r     1 TREC$
    50-0-0/w UBIN        r     1 TREC_ARS                  53-0-0/c CHAR(4)     r     1 TWSN#
    52-0-0/w PTR         r     1 TWSNREC$                  54-0-0/w UBIN        r     1 TWSN_ARS
    55-0-0/c CHAR(2)     r     1 TYPE                     101-0-0/c CHAR(2)     r     1 TYPE
   106-0-0/c CHAR(2)     r     1 TYPE                     113-0-0/c CHAR(2)     r     1 TYPE1
   116-0-0/b BIT         r     1 TYPE_FLG                 117-0-0/w UBIN        r     1 TYPE_OPT
    56-0-0/w PTR         r     1 T_NODE$                  104-0-0/w SBIN        r     1 USE_TYPE
   120-0-0/w UBIN        r     1 WH2_ARS                   57-0-0/w UBIN        r     1 WH_ARS
    60-0-0/w UBIN        r     1 WKSZ                      61-0-0/w UBIN        r     1 WK_USED
    62-0-0/w PTR         r     1 WORK$                     64-0-0/w PTR         r     1 WSNDEV$
    65-0-0/w UBIN        r     1 WSNDEV_ARS                66-0-0/b BIT         r     1 WSNDEV_FLG
    67-0-0/w PTR         r     1 WSNHDR$                  105-0-0/w PTR         r     1 WSNHDR2$
   107-0-0/w UBIN        r     1 WSNHDR2_OFF               70-0-0/c STRC(81)    r     1 WSN_NAME
    73-0-0/w PTR         r     1 WTBLK$                    74-0-0/w UBIN        r     1 WTB_SZ
   123-0-0/w UBIN        r     1 X

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR        r     1 AS_BLANK                   0-0-0/b BIT         r     1 AS_FALSE
     0-0-0/w STRC(369)   r     1 AS_FIELD1                  0-0-0/w STRC(369)   r     1 AS_FIELD2
     0-0-0/b BIT         r     1 AS_TRUE                    0-0-0/w UBIN        r     1 CODE
     0-0-0/w PTR         r     1 DSEG1$                     0-0-0/w UBIN        r     1 DSEG1SIZE
PL6.E3A0      #001=ASW$WSN File=ASW$WSN.:E05TSI                                  TUE 07/29/97 10:57 Page:190  
     0-0-0/w PTR         r     1 DSEG2$                     0-0-0/w UBIN        r     1 DSEG2SIZE
     0-0-0/w PTR         r     1 DSEG3$                     0-0-0/b BIT         r     1 DSEG_FLG
     0-0-0/b STRC        r     1 ERR_CODE                   0-0-0/c CHAR(255)   r     1 IN_BUF
     0-0-0/w PTR         r     1 NODE$                      0-0-0/w STRC(504)   r     1 P_PCB
     0-0-0/d REMB        r     1 REMEM_VAR                  0-0-0/c STRC(378)   r     1 USERS_KEY
     0-0-0/w UBIN        r     1 WSN_CMD                    0-0-0/w UBIN        r     1 WSN_OPTS_LIST

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d ASTR(3528)  r     1 F$DCB                      0-0-0/w STRC(108)   r     1 KL$ACBLK
     0-0-0/w STRC(108)   r     1 KL$DEVWSN                  0-0-0/w STRC(180)   r     1 KL$INDIRECT_WSN
     0-0-0/w STRC(576)   r     1 KL$TREC                    0-0-0/w STRC(576)   r     1 KL$TWSNREC
     0-0-0/w STRC(108)   r     1 KL$WSNDEV                  0-0-0/w STRC(180)   r     1 KL$WSNHDR
     0-0-0/w STRC(576)   r     1 KL$WTBLK                   0-0-0/w ACHR        r     1 MOV$STRT
     0-0-0/w ASTR(153)   r     1 OUT$SYM                    0-0-0/w STRC(144)   r     1 P$NODE


   Procedure ASW$WSN requires 2142 words for executable code.
   Procedure ASW$WSN requires 1098 words of local(AUTO) storage.

    No errors detected in file ASW$WSN.:E05TSI    .
PL6.E3A0      #001=ASW$WSN File=ASW$WSN.:E05TSI                                  TUE 07/29/97 10:57 Page:191  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=ASW$WSN File=ASW$WSN.:E05TSI                                  TUE 07/29/97 10:57 Page:192  
          MINI XREF LISTING

ACBLK$
     13759**DCL     13913--IMP-PTR 14458<<ASSIGN  14459>>ASSIGN  14461>>ASSIGN  14462>>ASSIGN  14464>>ASSIGN
     14628<<ASSIGN  14629>>ASSIGN  14631>>ASSIGN  14632>>ASSIGN  14634>>ASSIGN  14644<<ASSIGN  14649>>ASSIGN
     14653>>ASSIGN  14686<<ASSIGN  14691>>ASSIGN  14697>>ASSIGN  14844<<ASSIGN  14846>>ASSIGN  15076>>DOINDEX
     15077>>IF      15084>>ASSIGN  15084>>ASSIGN  15085>>ASSIGN  15085>>ASSIGN  15117>>DOINDEX 15118>>ASSIGN
     15118>>ASSIGN  15120>>ASSIGN  15120>>ASSIGN
ACBLK_OFF1
     13847**DCL     14458>>ASSIGN  14460>>ASSIGN  14628>>ASSIGN  14630>>ASSIGN  14644>>ASSIGN  14686>>ASSIGN
ACC_ARS
     13760**DCL     14464<<ASSIGN  14634<<ASSIGN  14650<<ASSIGN  14651>>ASSIGN  14692<<ASSIGN  14693>>ASSIGN
     14845>>ASSIGN  14848>>ASSIGN  15086<<ASSIGN  15086>>ASSIGN  15121<<ASSIGN  15121>>ASSIGN
ADD_FLG IN PROCEDURE WSN_ACCESS
     15024**DCL     15031<<ASSIGN  15038<<ASSIGN  15041<<ASSIGN  15081>>IF      15114>>IF
ARS
     13761**DCL     14237--IMP-SIZ 14619<<ASSIGN  14620>>ASSIGN  14621>>ASSIGN  14621>>ASSIGN  14624>>ASSIGN
     14625>>ASSIGN  14647<<ASSIGN  14649>>ASSIGN  14649>>ASSIGN  14650>>ASSIGN  14689<<ASSIGN  14691>>ASSIGN
     14691>>ASSIGN  14692>>ASSIGN  14727<>CALL    14728>>ASSIGN  14845<<ASSIGN  14846>>ASSIGN  14846>>ASSIGN
     15419<<ASSIGN  15420>>ASSIGN  15421>>ASSIGN  15421>>ASSIGN  15424>>ASSIGN  15425>>ASSIGN  15454<<ASSIGN
     15456>>ASSIGN  15456>>ASSIGN  15458>>ASSIGN  15458>>ASSIGN  15467<<ASSIGN  15468<<ASSIGN  15468>>ASSIGN
     15469>>ASSIGN  15469>>ASSIGN  15471>>ASSIGN  15472>>ASSIGN  15473>>ASSIGN
ARS1
     13762**DCL     14394<<ASSIGN  14395>>ASSIGN
ARS2
     13763**DCL     14478<<ASSIGN  14479>>ASSIGN  14507<<ASSIGN  14508>>ASSIGN  15245<<ASSIGN  15246>>ASSIGN
     15272<<ASSIGN  15273>>ASSIGN
ASA_BRKS_LOC
     10844**DCL     10844--REDEF
ASB$DEQ_HLP
     13749**DCL-ENT 14532--CALL    14862--CALL
ASB$ENQ_HLP
     13746**DCL-ENT 14481--CALL    14511--CALL    15248--CALL    15276--CALL
ASB$GETSEG
PL6.E3A0      #001=ASW$WSN File=ASW$WSN.:E05TSI                                  TUE 07/29/97 10:57 Page:193  
     13704**DCL-ENT 14259--CALL
ASB$READ_HLP
     13740**DCL-ENT 14482--CALL    14512--CALL    15249--CALL    15277--CALL    15560--CALL
ASB$READ_SI
     13752**DCL-ENT 14727--CALL
ASB$SET_PROMPT
     13707**DCL-ENT 14721--CALL
ASB$WRITE_HLP
     13743**DCL-ENT 14541--CALL    15632--CALL
ASF$READ_FORM IN PROCEDURE WSN_DFORM
     14872**DCL-ENT 14949--CALL
ASH$DQUEST
     13737**DCL-ENT 14753--CALL
ASH$ERROR
     13722**DCL-ENT 14253--CALL    14261--CALL    14274--CALL    14319--CALL    14349--CALL    14373--CALL
     14390--CALL    14417--CALL    14500--CALL    14529--CALL    14681--CALL    14733--CALL    14779--CALL
     14801--CALL    14826--CALL    14858--CALL    14912--CALL    14939--CALL    14968--CALL    15004--CALL
     15071--CALL    15108--CALL    15189--CALL    15208--CALL    15235--CALL    15265--CALL    15292--CALL
     15443--CALL    15504--CALL    15549--CALL    15591--CALL    15618--CALL
ASH$HELP
     13731**DCL-ENT 14747--CALL
ASH$QUEST
     13734**DCL-ENT 14750--CALL
ASH$WARN
     13725**DCL-ENT 14441--CALL    15495--CALL    15725--CALL
ASW$DEQ_WSN
     13719**DCL-ENT 14533--CALL    14861--CALL
ASW$ENQ_WSN
     13716**DCL-ENT 14387--CALL    14662--CALL
ASW$READ_WSN
     13710**DCL-ENT 14396--CALL    14664--CALL
ASW$WRITE_WSN
     13713**DCL-ENT 14851--CALL    14855--CALL
AS_BLANK
     10704**DCL     14462>>ASSIGN  14632>>ASSIGN
AS_DEFAULT.BANNER_PERM
PL6.E3A0      #001=ASW$WSN File=ASW$WSN.:E05TSI                                  TUE 07/29/97 10:57 Page:194  
     11537**DCL     11538--REDEF
AS_DEFAULT.BUDGET.MACCT
     11442**DCL     11446--REDEF
AS_DEFAULT.BUDGET.MAX_PROJECTS
     11455**DCL     11458--REDEF
AS_DEFAULT.BUDGET.PACCUM
     11438**DCL     11440--REDEF
AS_DEFAULT.BUDGET.PMAXC
     11433**DCL     11435--REDEF
AS_DEFAULT.SETUP_CHRA.TXT
     11553**DCL     11554--REDEF   11555--REDEF
AS_DEFAULT_DREC.PASSWORD
     12807**DCL     12811--REDEF
AS_DEFAULT_DREC.RENAME
     12830**DCL     12831--REDEF
AS_DFLT.BANNER_PERM
     11359**DCL     11360--REDEF
AS_DFLT.BUDGET.MACCT
     11264**DCL     11268--REDEF
AS_DFLT.BUDGET.MAX_PROJECTS
     11277**DCL     11280--REDEF
AS_DFLT.BUDGET.PACCUM
     11260**DCL     11262--REDEF
AS_DFLT.BUDGET.PMAXC
     11255**DCL     11257--REDEF
AS_DFLT.SETUP_CHRA.TXT
     11375**DCL     11376--REDEF   11377--REDEF
AS_FALSE
     10704**DCL     14286>>ASSIGN  14592>>ASSIGN  14758>>ASSIGN  14973>>ASSIGN  14983>>IF      15041>>ASSIGN
     15305>>ASSIGN  15310>>ASSIGN  15385>>ASSIGN
AS_FE_MODE
     10710**DCL     10711--REDEF
AS_FIELD1
     10840**DCL     14404<<ASSIGN  14430<<ASSIGN  14487<<ASSIGN  14955<<ASSIGN  15252<<ASSIGN
AS_FIELD1.COUNT
     10841**DCL     14990<<ASSIGN  15094<<ASSIGN  15533<<ASSIGN  15575<<ASSIGN  15713<<ASSIGN
PL6.E3A0      #001=ASW$WSN File=ASW$WSN.:E05TSI                                  TUE 07/29/97 10:57 Page:195  
AS_FIELD1.TEXT
     10841**DCL     14991<<ASSIGN  15095<<ASSIGN  15535<<ASSIGN  15577<<ASSIGN  15714<<ASSIGN
AS_FIELD2.COUNT
     10841**DCL     15534<<ASSIGN  15576<<ASSIGN
AS_FIELD2.TEXT
     10841**DCL     15536<<ASSIGN  15578<<ASSIGN
AS_MODE
     10707**DCL     10709--REDEF
AS_MOD_USER.ACCESS
     13572**DCL     13573--REDEF
AS_MOD_USER.BANNER
     13559**DCL     13560--REDEF
AS_MOD_USER.BANNER_PERM
     13561**DCL     13562--REDEF
AS_MOD_USER.BILL
     13567**DCL     13568--REDEF
AS_MOD_USER.CPROC
     13563**DCL     13564--REDEF
AS_MOD_USER.FEBILL
     13643**DCL     13644--REDEF
AS_MOD_USER.FECXTMEM
     13660**DCL     13661--REDEF
AS_MOD_USER.FEMINTS
     13645**DCL     13646--REDEF
AS_MOD_USER.FEMMEM
     13656**DCL     13657--REDEF
AS_MOD_USER.FEMTIME
     13654**DCL     13655--REDEF
AS_MOD_USER.FEPPRIV
     13651**DCL     13653--REDEF
AS_MOD_USER.FEPRIV
     13648**DCL     13650--REDEF
AS_MOD_USER.FORCE_BIT
     13557**DCL     13558--REDEF
AS_MOD_USER.KEY
     13639**DCL     13641--REDEF
PL6.E3A0      #001=ASW$WSN File=ASW$WSN.:E05TSI                                  TUE 07/29/97 10:57 Page:196  
AS_MOD_USER.LASTCPROC
     13565**DCL     13566--REDEF
AS_MOD_USER.LIMITS.DO_
     13613**DCL     13614--REDEF
AS_MOD_USER.LIMITS.FPOOLS
     13629**DCL     13630--REDEF
AS_MOD_USER.LIMITS.LO
     13609**DCL     13610--REDEF
AS_MOD_USER.LIMITS.MEM
     13605**DCL     13606--REDEF
AS_MOD_USER.LIMITS.MPRIO
     13633**DCL     13634--REDEF
AS_MOD_USER.LIMITS.PDIS
     13621**DCL     13622--REDEF
AS_MOD_USER.LIMITS.PO
     13617**DCL     13618--REDEF
AS_MOD_USER.LIMITS.TDIS
     13625**DCL     13626--REDEF
AS_MOD_USER.LIMITS.TIME
     13601**DCL     13602--REDEF
AS_MOD_USER.MAXENQ
     13582**DCL     13583--REDEF
AS_MOD_USER.PERM_BIT
     13555**DCL     13556--REDEF
AS_MOD_USER.PPRIV
     13577**DCL     13579--REDEF
AS_MOD_USER.PRIOB
     13584**DCL     13585--REDEF
AS_MOD_USER.PRIV
     13574**DCL     13576--REDEF
AS_MOD_USER.QUAN
     13580**DCL     13581--REDEF
AS_MOD_USER.SETUP
     13553**DCL     13554--REDEF
AS_PROJECT.BANNER_PERM
     11893**DCL     11894--REDEF
PL6.E3A0      #001=ASW$WSN File=ASW$WSN.:E05TSI                                  TUE 07/29/97 10:57 Page:197  
AS_PROJECT.BUDGET.MACCT
     11798**DCL     11802--REDEF
AS_PROJECT.BUDGET.MAX_PROJECTS
     11811**DCL     11814--REDEF
AS_PROJECT.BUDGET.PACCUM
     11794**DCL     11796--REDEF
AS_PROJECT.BUDGET.PMAXC
     11789**DCL     11791--REDEF
AS_PROJECT.SETUP_CHRA.TXT
     11909**DCL     11910--REDEF   11911--REDEF
AS_PROJECT_DFLT.BANNER_PERM
     12071**DCL     12072--REDEF
AS_PROJECT_DFLT.BUDGET.MACCT
     11976**DCL     11980--REDEF
AS_PROJECT_DFLT.BUDGET.MAX_PROJECTS
     11989**DCL     11992--REDEF
AS_PROJECT_DFLT.BUDGET.PACCUM
     11972**DCL     11974--REDEF
AS_PROJECT_DFLT.BUDGET.PMAXC
     11967**DCL     11969--REDEF
AS_PROJECT_DFLT.SETUP_CHRA.TXT
     12087**DCL     12088--REDEF   12089--REDEF
AS_PROJECT_DFLT_DREC.PASSWORD
     13293**DCL     13297--REDEF
AS_PROJECT_DFLT_DREC.RENAME
     13316**DCL     13317--REDEF
AS_PROJECT_DREC.PASSWORD
     13131**DCL     13135--REDEF
AS_PROJECT_DREC.RENAME
     13154**DCL     13155--REDEF
AS_PROJ_ADMIN.BANNER_PERM
     11715**DCL     11716--REDEF
AS_PROJ_ADMIN.BUDGET.MACCT
     11620**DCL     11624--REDEF
AS_PROJ_ADMIN.BUDGET.MAX_PROJECTS
     11633**DCL     11636--REDEF
PL6.E3A0      #001=ASW$WSN File=ASW$WSN.:E05TSI                                  TUE 07/29/97 10:57 Page:198  
AS_PROJ_ADMIN.BUDGET.PACCUM
     11616**DCL     11618--REDEF
AS_PROJ_ADMIN.BUDGET.PMAXC
     11611**DCL     11613--REDEF
AS_PROJ_ADMIN.SETUP_CHRA.TXT
     11731**DCL     11732--REDEF   11733--REDEF
AS_PROJ_ADMIN_DREC.PASSWORD
     12969**DCL     12973--REDEF
AS_PROJ_ADMIN_DREC.RENAME
     12992**DCL     12993--REDEF
AS_TRUE
     10704**DCL     14327>>ASSIGN  14446>>ASSIGN  14722>>ASSIGN  14980>>ASSIGN  15031>>ASSIGN  15038>>ASSIGN
     15318>>ASSIGN  15319>>ASSIGN  15323>>ASSIGN  15325>>ASSIGN  15552>>ASSIGN  15594>>ASSIGN
AS_USERS.BANNER_PERM
     11181**DCL     11182--REDEF
AS_USERS.BUDGET.MACCT
     11086**DCL     11090--REDEF
AS_USERS.BUDGET.MAX_PROJECTS
     11099**DCL     11102--REDEF
AS_USERS.BUDGET.PACCUM
     11082**DCL     11084--REDEF
AS_USERS.BUDGET.PMAXC
     11077**DCL     11079--REDEF
AS_USERS.SETUP_CHRA.TXT
     11197**DCL     11198--REDEF   11199--REDEF
AS_USERS_CONSTANT.BANNER_PERM
     12249**DCL     12250--REDEF
AS_USERS_CONSTANT.BUDGET.MACCT
     12154**DCL     12158--REDEF
AS_USERS_CONSTANT.BUDGET.MAX_PROJECTS
     12167**DCL     12170--REDEF
AS_USERS_CONSTANT.BUDGET.PACCUM
     12150**DCL     12152--REDEF
AS_USERS_CONSTANT.BUDGET.PMAXC
     12145**DCL     12147--REDEF
AS_USERS_CONSTANT.SETUP_CHRA.TXT
PL6.E3A0      #001=ASW$WSN File=ASW$WSN.:E05TSI                                  TUE 07/29/97 10:57 Page:199  
     12265**DCL     12266--REDEF   12267--REDEF
ATTR
     13764**DCL     14566<<ASSIGN  14579>>IF      14585>>ASSIGN  14603>>ASSIGN  15312<<ASSIGN  15341>>IF
     15347>>ASSIGN  15368>>IF      15373>>IF      15374>>ASSIGN  15396>>ASSIGN
ATTR$
     13765**DCL     14576<<ASSIGN  14578>>DOWHILE 14579>>IF      14585>>ASSIGN  14586>>ASSIGN  15338<<ASSIGN
     15340>>DOWHILE 15341>>IF      15347>>ASSIGN  15348>>ASSIGN  15350>>IF      15365<<ASSIGN  15367>>DOWHILE
     15368>>IF      15374>>ASSIGN  15375>>ASSIGN  15377>>IF
ATTR_SZ
     13766**DCL     14558<<ASSIGN
BLK$
     13767**DCL     14034--IMP-PTR 14293<<ASSIGN  14294>>ASSIGN  14295>>ASSIGN  14295>>ASSIGN  14301<<ASSIGN
     14302>>IF      14324>>ASSIGN  14325>>ASSIGN  14325>>ASSIGN  14331<<ASSIGN  14332>>IF      14354>>ASSIGN
     14354>>ASSIGN  14354>>ASSIGN  14355<<ASSIGN  14356>>IF      14378>>ASSIGN  14378>>ASSIGN  14378>>ASSIGN
     14892<<ASSIGN  14893>>IF      14917>>ASSIGN  14917>>ASSIGN  14919<<ASSIGN  14920>>IF      14945>>ASSIGN
     14945>>ASSIGN  15051<<ASSIGN  15052>>IF      15077>>IF      15077>>IF      15084>>ASSIGN  15084>>ASSIGN
     15094>>ASSIGN  15095>>ASSIGN  15095>>ASSIGN  15162<<ASSIGN  15163>>IF      15165>>ASSIGN  15165>>ASSIGN
     15166>>ASSIGN  15166>>ASSIGN  15170>>IF      15172>>ASSIGN  15172>>ASSIGN  15213<<ASSIGN  15217<<ASSIGN
     15220>>IF      15240>>ASSIGN  15241>>ASSIGN  15241>>ASSIGN
BLK2_SZ IN PROCEDURE WSN_DEV
     15153**DCL     15303<<ASSIGN  15420<<ASSIGN  15420>>ASSIGN
BLK_SZ
     13768**DCL     14471<<ASSIGN  14620<<ASSIGN  14620>>ASSIGN  14652<<ASSIGN  14694<<ASSIGN  14696>>ASSIGN
     15454>>ASSIGN  15472<<ASSIGN  15472>>ASSIGN
BUF$ IN PROCEDURE WSN_DFORM
     14879**DCL     14947<<ASSIGN  14949<>CALL
BUF_ARS IN PROCEDURE WSN_DFORM
     14880**DCL     14948<<ASSIGN  14949<>CALL
CHK_PRO IN PROCEDURE CHECK_DEV_PROS
     15703**LABEL   15730--EXIT
CHK_TYP IN PROCEDURE CHECK_DEV_PROS
     15691**LABEL   15694--EXIT
CODE
     10837**DCL     14289<<ASSIGN  14290>>DOSELCT 14741<<ASSIGN  14742>>DOSELCT
CODE2 IN PROCEDURE WSN_ACCESS
     15023**DCL     15034<<ASSIGN  15035>>DOSELCT
PL6.E3A0      #001=ASW$WSN File=ASW$WSN.:E05TSI                                  TUE 07/29/97 10:57 Page:200  
COMMON
     14247**LABEL   14244--GOTO
CONFIG
     13770**DCL     14243<<ASSIGN  14247<<ASSIGN  14702>>IF
CREATE
     13769**DCL     14283<<ASSIGN  14399>>IF      14425>>IF      14446<<ASSIGN  14452>>IF
DEVWSN
     15510**PROC    14588--CALL    14593--CALL    15354--CALL    15381--CALL    15386--CALL
DEVWSN$
     13771**DCL     13895--IMP-PTR 15557<<ASSIGN  15560<>CALL    15564>>ASSIGN  15569>>DOINDEX 15570>>IF
     15625>>ASSIGN  15625>>ASSIGN  15626>>ASSIGN  15626>>ASSIGN  15631>>ASSIGN  15632<>CALL
DEVWSN_ARS
     13772**DCL     15559<<ASSIGN  15560<>CALL    15563<<ASSIGN  15631<<ASSIGN  15632<>CALL
DEVWSN_ERR IN PROCEDURE DEVWSN
     15553**LABEL   15560--CALLALT
DEVWSN_OFF2
     13850**DCL     14663>>ASSIGN  15557>>ASSIGN  15559>>ASSIGN
DEV_WSN_KEY
     13829**DCL     15558>>ASSIGN  15630>>ASSIGN
DEV_WSN_KEY.ACCT
     13831**DCL     14564<<ASSIGN  15309<<ASSIGN  15528>>IF      15535>>ASSIGN  15578>>ASSIGN  15623>>ASSIGN
DFORM$ IN PROCEDURE WSN_DFORM
     14883**DCL     14978<<ASSIGN  14979>>ASSIGN
DISP IN PROCEDURE WSN_DEV
     15144**DCL     15470<<ASSIGN  15475>>ASSIGN
DONE_FLG IN PROCEDURE WSN_DEV
     15149**DCL     15305<<ASSIGN  15306>>DOWHILE 15318<<ASSIGN
DONE_OPTIONS
     14840**LABEL   14704--GOTO
DSEG1$
     10845**DCL     14393>>ASSIGN  14458>>ASSIGN  14467>>ASSIGN  14555>>ASSIGN  14576>>ASSIGN  14596>>ASSIGN
     14616>>ASSIGN  14618>>ASSIGN  14628>>ASSIGN  14644>>ASSIGN  14645>>ASSIGN  14653>>ASSIGN  14686>>ASSIGN
     14687>>ASSIGN  14697>>ASSIGN  14844>>ASSIGN  14978>>ASSIGN  15338>>ASSIGN
DSEG1SIZE
     10846**DCL     14394>>ASSIGN
DSEG2$
PL6.E3A0      #001=ASW$WSN File=ASW$WSN.:E05TSI                                  TUE 07/29/97 10:57 Page:201  
     10846**DCL     14450>>ASSIGN  14477>>ASSIGN  14506>>ASSIGN  15244>>ASSIGN  15271>>ASSIGN  15449>>ASSIGN
     15557>>ASSIGN
DSEG2SIZE
     10846**DCL     14478>>ASSIGN  14507>>ASSIGN  15245>>ASSIGN  15272>>ASSIGN
DSEG3$
     10846**DCL     15299>>ASSIGN  15302>>ASSIGN  15365>>ASSIGN  15389>>ASSIGN  15416>>ASSIGN  15418>>ASSIGN
     15464>>ASSIGN
DSEG_FLG
     10845**DCL     14258>>IF
ENQ2_ERR IN PROCEDURE WSN_DEV
     15479**LABEL   15248--CALLALT 15276--CALLALT
ENQ_ERR
     14387**LABEL   14387--CALLALT 14481--CALLALT 14511--CALLALT 14662--CALLALT
ERR_CODE
     10839**DCL     10840--REDEF   14261<>CALL    14390<>CALL    14732<<ASSIGN  14733<>CALL    14858<>CALL
     15504<>CALL
F$DCB.ACTPOS
     14213**DCL     14213--REDEF
F$DCB.ARS#
     14187**DCL     14187--REDEF
F$DCB.ATTR
     14206**DCL     14207--REDEF
F$DCB.BORROW
     14221**DCL     14221--REDEF   14221--REDEF   14221--REDEF
F$DCB.DCBNAME.L
     14235**DCL     14235--IMP-SIZ
F$DCB.EOMCHAR#
     14191**DCL     14191--REDEF
F$DCB.FLDID
     14216**DCL     14216--REDEF
F$DCB.FORM$
     14210**DCL     14210--REDEF
F$DCB.FSECT
     14226**DCL     14226--REDEF
F$DCB.FSN#
     14203**DCL     14203--REDEF   14203--REDEF   14204--REDEF
PL6.E3A0      #001=ASW$WSN File=ASW$WSN.:E05TSI                                  TUE 07/29/97 10:57 Page:202  
F$DCB.HEADER$
     14209**DCL     14209--REDEF
F$DCB.IXTNSIZE#
     14207**DCL     14207--REDEF
F$DCB.LASTSTA$
     14196**DCL     14196--REDEF
F$DCB.LVL
     14222**DCL     14222--REDEF
F$DCB.NAME#.C
     14197**DCL     14197--REDEF
F$DCB.NOEOF
     14219**DCL     14219--REDEF
F$DCB.NRECS#
     14208**DCL     14208--REDEF
F$DCB.NRECX
     14227**DCL     14227--REDEF
F$DCB.OHDR
     14219**DCL     14219--REDEF
F$DCB.ORG#
     14202**DCL     14202--REDEF
F$DCB.PRECNO
     14225**DCL     14225--REDEF
F$DCB.RCSZ
     14231**DCL     14231--REDEF
F$DCB.RES#
     14198**DCL     14198--REDEF
F$DCB.SETX
     14210**DCL     14210--REDEF
F$DCB.TAB$
     14210**DCL     14210--REDEF
F$DCB.TDA
     14224**DCL     14225--REDEF
F$DCB.WSN#
     14198**DCL     14198--REDEF
FORM_BUF IN PROCEDURE WSN_DFORM
     14885**DCL     14947--ASSIGN  14948--ASSIGN
PL6.E3A0      #001=ASW$WSN File=ASW$WSN.:E05TSI                                  TUE 07/29/97 10:57 Page:203  
FORM_FLG IN PROCEDURE WSN_DFORM
     14884**DCL     14973<<ASSIGN  14980<<ASSIGN  14983>>IF
FOR_FLG
     13773**DCL     14286<<ASSIGN  14327<<ASSIGN  14475>>IF
FOUND_ATTR
     13774**DCL     14577<<ASSIGN  14578>>DOWHILE 14580<<ASSIGN  14584>>IF      15339<<ASSIGN  15340>>DOWHILE
     15342<<ASSIGN  15346>>IF      15366<<ASSIGN  15367>>DOWHILE 15369<<ASSIGN  15373>>IF
FOUND_TYPE
     13775**DCL     14568<<ASSIGN  14569>>DOWHILE 14571<<ASSIGN  14575>>IF
FOUND_TYPE IN PROCEDURE WSN_DEV
     15142**DCL     15330<<ASSIGN  15331>>DOWHILE 15333<<ASSIGN  15337>>IF      15358>>DOWHILE 15360<<ASSIGN
     15364>>IF      15427>>IF
I
     13776**DCL     14287<<DOINDEX 14288>>ASSIGN  14561<<DOINDEX 14562>>ASSIGN  14563>>ASSIGN  14564>>ASSIGN
     14566>>ASSIGN  14599>>ASSIGN  14600>>ASSIGN  14601>>ASSIGN  14602>>ASSIGN  14617<<DOINDEX 14618>>ASSIGN
     14623>>ASSIGN  14739<<DOINDEX 14740>>ASSIGN  14757<<ASSIGN
I IN PROCEDURE CHECK_DEV_PROS
     15675**DCL     15685<<DOINDEX 15686>>ASSIGN  15688>>IF      15691>>DOINDEX 15698>>IF      15703>>DOINDEX
I IN PROCEDURE WSN_ACCESS
     15019**DCL     15033<<DOINDEX 15034>>ASSIGN  15044>>ASSIGN  15050<<DOINDEX 15051>>ASSIGN
I IN PROCEDURE WSN_DEV
     15137**DCL     15304<<ASSIGN  15306>>DOWHILE 15307>>ASSIGN  15308>>ASSIGN  15309>>ASSIGN  15312>>ASSIGN
     15392>>ASSIGN  15393>>ASSIGN  15394>>ASSIGN  15395>>ASSIGN  15410<<ASSIGN  15410>>ASSIGN  15417<<DOINDEX
     15418>>ASSIGN  15423>>ASSIGN  15463<<DOINDEX 15464>>ASSIGN  15466>>ASSIGN
I IN PROCEDURE WSN_DFORM
     14882**DCL     14974<<DOINDEX 14975>>IF      14978>>ASSIGN
INCR
     13777**DCL     14559<<ASSIGN  14595>>ASSIGN  14696<<ASSIGN  15388>>ASSIGN
INDIRECT
     13778**DCL     14279<<ASSIGN  14379<<ASSIGN  14453>>IF      14641<<ASSIGN  14642>>IF      14761>>IF
     14786>>IF      14852>>IF
IN_BUF
     10835**DCL     14727<>CALL
J
     13779**DCL     14568<<ASSIGN  14569>>DOWHILE 14570>>IF      14573<<ASSIGN  14573>>ASSIGN  14576>>ASSIGN
J IN PROCEDURE CHECK_DEV_PROS
PL6.E3A0      #001=ASW$WSN File=ASW$WSN.:E05TSI                                  TUE 07/29/97 10:57 Page:204  
     15676**DCL     15687<<ASSIGN  15691<<DOINDEX 15692>>IF      15698>>IF      15700>>ASSIGN  15703<<DOINDEX
     15704>>ASSIGN
J IN PROCEDURE WSN_ACCESS
     15020**DCL     15076<<DOINDEX 15077>>IF      15117>>DOINDEX
J IN PROCEDURE WSN_DEV
     15138**DCL     15330<<ASSIGN  15331>>DOWHILE 15332>>IF      15335<<ASSIGN  15335>>ASSIGN  15338>>ASSIGN
     15357<<ASSIGN  15358>>DOWHILE 15359>>IF      15362<<ASSIGN  15362>>ASSIGN  15365>>ASSIGN  15459<<DOINDEX
     15460>>ASSIGN  15460>>ASSIGN
K
     13780**DCL     14577<<ASSIGN  14578>>DOWHILE 14579>>IF      14582<<ASSIGN  14582>>ASSIGN  14585>>ASSIGN
     14586>>ASSIGN
K IN PROCEDURE WSN_ACCESS
     15021**DCL     15117<<DOINDEX 15118>>ASSIGN  15118>>ASSIGN
K IN PROCEDURE WSN_DEV
     15139**DCL     15339<<ASSIGN  15340>>DOWHILE 15341>>IF      15344<<ASSIGN  15344>>ASSIGN  15347>>ASSIGN
     15348>>ASSIGN  15366<<ASSIGN  15367>>DOWHILE 15368>>IF      15371<<ASSIGN  15371>>ASSIGN  15374>>ASSIGN
     15375>>ASSIGN  15450<<ASSIGN  15451>>ASSIGN  15452>>ASSIGN  15457>>ASSIGN  15460>>ASSIGN
KL$ACBLK
     13913**DCL     14461<<ASSIGN  14464--ASSIGN  14631<<ASSIGN  14634--ASSIGN  14647--ASSIGN  14689--ASSIGN
KL$ACBLK.ACCTS
     13914**DCL     14464>>ASSIGN  14634>>ASSIGN  14647>>ASSIGN  14689>>ASSIGN  15076>>DOINDEX 15084>>ASSIGN
     15085<<ASSIGN  15085>>ASSIGN  15117>>DOINDEX 15120<<ASSIGN  15120>>ASSIGN
KL$ACBLK.LIST
     13915**DCL     14462<<ASSIGN  14464--ASSIGN  14632<<ASSIGN  14634--ASSIGN  14647--ASSIGN  14689--ASSIGN
     15077>>IF      15084<<ASSIGN  15086--ASSIGN  15118<<ASSIGN  15118>>ASSIGN  15121--ASSIGN
KL$DEVWSN
     13895**DCL     15563--ASSIGN  15631--ASSIGN
KL$DEVWSN.DEV
     13897**DCL     15563--ASSIGN  15570>>IF      15625<<ASSIGN  15631--ASSIGN
KL$DEVWSN.NDEV
     13896**DCL     15564<<ASSIGN  15569>>DOINDEX 15625>>ASSIGN  15626<<ASSIGN  15626>>ASSIGN  15631>>ASSIGN
KL$INDIRECT_WSN
     13868**DCL     14466--ASSIGN  14652--ASSIGN
KL$INDIRECT_WSN.ACCSDISP
     13871**DCL     14454<<ASSIGN  14645>>ASSIGN  14654<<ASSIGN
KL$INDIRECT_WSN.INDIRECT#
PL6.E3A0      #001=ASW$WSN File=ASW$WSN.:E05TSI                                  TUE 07/29/97 10:57 Page:205  
     13869**DCL     14455<<ASSIGN
KL$INDIRECT_WSN.INDIRECT_WSN
     13873**DCL     14457<<ASSIGN
KL$INDIRECT_WSN.NODE
     13872**DCL     14456<<ASSIGN
KL$TREC.PASSWORD
     14138**DCL     14142--REDEF
KL$TREC.RENAME
     14161**DCL     14162--REDEF
KL$TREC.TWSN#
     14135**DCL     14505>>ASSIGN  15270>>ASSIGN
KL$TWSNREC.DEVS.ACCT
     13972**DCL     14564>>ASSIGN  15309>>ASSIGN
KL$TWSNREC.DEVS.ATTR
     13961**DCL     14566>>ASSIGN  15312>>ASSIGN
KL$TWSNREC.DEVS.DDEV
     13962**DCL     14600>>ASSIGN  15394>>ASSIGN
KL$TWSNREC.DEVS.FNAME
     13970**DCL     14599>>ASSIGN  15392>>ASSIGN
KL$TWSNREC.DEVS.IO
     13963**DCL     14601>>ASSIGN  15395>>ASSIGN
KL$TWSNREC.DEVS.NUM
     13960**DCL     14563>>ASSIGN  15308>>ASSIGN
KL$TWSNREC.DEVS.PNAME
     13974**DCL     14602>>ASSIGN  15393>>ASSIGN
KL$TWSNREC.DEVS.TYP
     13959**DCL     14562>>ASSIGN  15307>>ASSIGN
KL$TWSNREC.NDEV
     13957**DCL     14545>>ASSIGN  15306>>DOWHILE
KL$TWSNREC.WSN
     13955**DCL     14537>>IF      14539<<ASSIGN
KL$WSNDEV
     13889**DCL     14473--ASSIGN  14854--ASSIGN
KL$WSNDEV.DEV
     13891**DCL     14473--ASSIGN  14854--ASSIGN  15528>>IF      15623<<ASSIGN
KL$WSNDEV.NDEV
PL6.E3A0      #001=ASW$WSN File=ASW$WSN.:E05TSI                                  TUE 07/29/97 10:57 Page:206  
     13890**DCL     14472<<ASSIGN  14854>>ASSIGN  15527>>DOINDEX 15601>>IF      15623>>ASSIGN  15624<<ASSIGN
     15624>>ASSIGN
KL$WSNHDR
     13877**DCL     14470<<ASSIGN  14614--ASSIGN  14694--ASSIGN  15300<<ASSIGN  15414--ASSIGN
KL$WSNHDR.ACCSDISP
     13880**DCL     14463<<ASSIGN  14633<<ASSIGN  14687>>ASSIGN  14698<<ASSIGN  14844>>ASSIGN  14847<<ASSIGN
KL$WSNHDR.INDIRECT#
     13878**DCL     14641>>ASSIGN
KL$WSNHDR.NTYP
     13882**DCL     14550<<ASSIGN  14569>>DOWHILE 14605>>ASSIGN  14606>>ASSIGN  14607<<ASSIGN  14607>>ASSIGN
     14613>>ASSIGN  14694>>ASSIGN  14974>>DOINDEX 15331>>DOWHILE 15358>>DOWHILE 15398>>ASSIGN  15399>>ASSIGN
     15400<<ASSIGN  15400>>ASSIGN  15413>>ASSIGN  15427>>IF      15450>>ASSIGN  15453>>IF      15459>>DOINDEX
     15463>>DOINDEX 15474>>ASSIGN  15475>>ASSIGN  15476<<ASSIGN  15476>>ASSIGN  15680>>IF      15685>>DOINDEX
     15703>>DOINDEX
KL$WSNHDR.TNAME
     13881**DCL     14544<<ASSIGN  14549<<ASSIGN  14598>>ASSIGN  15301<<ASSIGN  15391>>ASSIGN
KL$WSNHDR.TYPS
     13883**DCL     14614--ASSIGN  14694--ASSIGN  15414--ASSIGN
KL$WSNHDR.TYPS.DISP
     13885**DCL     14576>>ASSIGN  14606<<ASSIGN  14618>>ASSIGN  14623<<ASSIGN  14978>>ASSIGN  15338>>ASSIGN
     15365>>ASSIGN  15399<<ASSIGN  15418>>ASSIGN  15423<<ASSIGN  15455>>ASSIGN  15460<<ASSIGN  15460>>ASSIGN
     15464>>ASSIGN  15475<<ASSIGN  15700>>ASSIGN  15704>>ASSIGN
KL$WSNHDR.TYPS.TYP
     13884**DCL     14570>>IF      14605<<ASSIGN  14975>>IF      15332>>IF      15359>>IF      15398<<ASSIGN
     15466>>ASSIGN  15474<<ASSIGN  15686>>ASSIGN  15692>>IF
KL$WTBLK
     13931**DCL     14557--ASSIGN  14597<<ASSIGN  14619--ASSIGN  15390<<ASSIGN  15419--ASSIGN  15467--ASSIGN
KL$WTBLK.ATTRS
     13945**DCL     14558--ASSIGN  14579>>IF      14585<<ASSIGN  14603<<ASSIGN  14622<<ASSIGN  15341>>IF
     15347<<ASSIGN  15368>>IF      15374<<ASSIGN  15396<<ASSIGN  15422<<ASSIGN
KL$WTBLK.DDEV
     13936**DCL     14600<<ASSIGN  15394<<ASSIGN
KL$WTBLK.FNAME
     13934**DCL     14599<<ASSIGN  14979<<ASSIGN  15392<<ASSIGN
KL$WTBLK.IO
     13938**DCL     14601<<ASSIGN  15395<<ASSIGN
PL6.E3A0      #001=ASW$WSN File=ASW$WSN.:E05TSI                                  TUE 07/29/97 10:57 Page:207  
KL$WTBLK.IO.OUTPUT
     13940**DCL     15350>>IF      15377>>IF      15401>>IF
KL$WTBLK.NATR
     13943**DCL     14578>>DOWHILE 14586<<ASSIGN  14603>>ASSIGN  14604<<ASSIGN  14604>>ASSIGN  14622>>ASSIGN
     15340>>DOWHILE 15348<<ASSIGN  15367>>DOWHILE 15375<<ASSIGN  15396>>ASSIGN  15397<<ASSIGN  15397>>ASSIGN
     15422>>ASSIGN
KL$WTBLK.PNAME
     13947**DCL     14602<<ASSIGN  15393<<ASSIGN
KL$WTBLK.PNAME.TXT
     13950**DCL     15701>>ASSIGN  15705>>IF
KL$WTBLK.TNAME
     13932**DCL     14598<<ASSIGN  15391<<ASSIGN
KL_DEFAULT.PASSWORD
     13455**DCL     13459--REDEF
KL_DEFAULT.RENAME
     13478**DCL     13479--REDEF
KL_DFLT.PASSWORD
     12645**DCL     12649--REDEF
KL_DFLT.RENAME
     12668**DCL     12669--REDEF
KL_DREC.PASSWORD
     12483**DCL     12487--REDEF
KL_DREC.RENAME
     12506**DCL     12507--REDEF
KL_DREC_CNT.PASSWORD
     12370**DCL     12374--REDEF
KL_DREC_CNT.RENAME
     12393**DCL     12394--REDEF
MATCHED IN PROCEDURE WSN_ACCESS
     15094**LABEL   15079--GOTO
MORE
     13781**DCL     14722<<ASSIGN  14725>>DOWHILE 14758<<ASSIGN
MOV$
     13782**DCL     14237--IMP-PTR 14467<<ASSIGN  14616<<ASSIGN  14621>>ASSIGN  14622>>ASSIGN  14625<<ASSIGN
     14625>>ASSIGN  14645<<ASSIGN  14646>>ASSIGN  14647>>ASSIGN  14649>>ASSIGN  14687<<ASSIGN  14688>>ASSIGN
     14689>>ASSIGN  14691>>ASSIGN  14846>>ASSIGN  15451<<ASSIGN  15451>>ASSIGN  15469>>ASSIGN  15473<<ASSIGN
PL6.E3A0      #001=ASW$WSN File=ASW$WSN.:E05TSI                                  TUE 07/29/97 10:57 Page:208  
     15473>>ASSIGN
MOV$STRT
     14237**DCL     14621<<ASSIGN  14621>>ASSIGN  14649<<ASSIGN  14649>>ASSIGN  14691<<ASSIGN  14691>>ASSIGN
     14846<<ASSIGN  14846>>ASSIGN  15421<<ASSIGN  15421>>ASSIGN  15456<<ASSIGN  15456>>ASSIGN  15458<<ASSIGN
     15458>>ASSIGN  15469<<ASSIGN  15469>>ASSIGN
MOV2$ IN PROCEDURE WSN_DEV
     15145**DCL     15416<<ASSIGN  15421>>ASSIGN  15422>>ASSIGN  15425<<ASSIGN  15425>>ASSIGN  15455<<ASSIGN
     15456>>ASSIGN  15457<<ASSIGN  15457>>ASSIGN  15458>>ASSIGN
NDEV
     13783**DCL     14545<<ASSIGN  14551<<ASSIGN  14561>>DOINDEX
NODE$
     10837**DCL     13987--IMP-PTR 14256<<ASSIGN  14283>>ASSIGN  14285>>ASSIGN  14288>>ASSIGN  14717>>ASSIGN
     14738<<ASSIGN  14739>>DOINDEX 14740>>ASSIGN  14757>>ASSIGN  14840<<ASSIGN
NODE_NAME
     13784**DCL     14280<<ASSIGN  14378<<ASSIGN  14456>>ASSIGN
NTYP
     13785**DCL     14613<<ASSIGN  14614>>ASSIGN  14617>>DOINDEX 15413<<ASSIGN  15414>>ASSIGN  15417>>DOINDEX
NUM
     13786**DCL     14563<<ASSIGN  15308<<ASSIGN  15316>>IF
NUM1 IN PROCEDURE WSN_DEV
     15148**DCL     15166<<ASSIGN  15316>>IF
OFFSET
     13787**DCL     14460<<ASSIGN  14463>>ASSIGN  14556<<ASSIGN  14596<<ASSIGN  14606>>ASSIGN  14630<<ASSIGN
     14633>>ASSIGN  14653<<ASSIGN  14654>>ASSIGN  14697<<ASSIGN  14698>>ASSIGN  15389<<ASSIGN  15399>>ASSIGN
OUT$SYM.COUNT
     14057**DCL     14060--IMP-SIZ 14294>>ASSIGN  14295>>ASSIGN  14302>>IF      14324>>ASSIGN  14325>>ASSIGN
     14332>>IF      14354>>ASSIGN  14354>>ASSIGN  14356>>IF      14378>>ASSIGN  14378>>ASSIGN  14893>>IF
     14917>>ASSIGN  14920>>IF      14945>>ASSIGN  15052>>IF      15077>>IF      15084>>ASSIGN  15094>>ASSIGN
     15095>>ASSIGN  15163>>IF      15165>>ASSIGN  15166>>ASSIGN  15170>>IF      15172>>ASSIGN  15220>>IF
     15240>>ASSIGN  15241>>ASSIGN
OUT$SYM.TEXT
     14060**DCL     14295>>ASSIGN  14325>>ASSIGN  14354>>ASSIGN  14378>>ASSIGN  14917>>ASSIGN  14945>>ASSIGN
     15077>>IF      15084>>ASSIGN  15095>>ASSIGN  15165>>ASSIGN  15166>>ASSIGN  15172>>ASSIGN  15241>>ASSIGN
P$NODE.CODE
     13995**DCL     14283>>ASSIGN  14289>>ASSIGN  14741>>ASSIGN  15034>>ASSIGN  15160>>IF
P$NODE.SUBLK$
PL6.E3A0      #001=ASW$WSN File=ASW$WSN.:E05TSI                                  TUE 07/29/97 10:57 Page:209  
     14020**DCL     14288>>ASSIGN  14301>>ASSIGN  14301>>ASSIGN  14331>>ASSIGN  14331>>ASSIGN  14355>>ASSIGN
     14355>>ASSIGN  14740>>ASSIGN  14892>>ASSIGN  14892>>ASSIGN  14919>>ASSIGN  14919>>ASSIGN  15034>>ASSIGN
     15044>>ASSIGN  15051>>ASSIGN  15160>>IF      15162>>ASSIGN  15162>>ASSIGN  15213>>ASSIGN  15213>>ASSIGN
     15217>>ASSIGN  15217>>ASSIGN
P$NODE.SUBNODES
     13999**DCL     14285>>ASSIGN  14739>>DOINDEX 14757>>ASSIGN  15030>>ASSIGN  15049>>ASSIGN
PARSE_ERR
     14729**LABEL   14729--CALLALT
PROJ_KEY.TEXT
     10717**DCL     10717--REDEF
PROJ_KEY.TXT.PROJECT
     10717**DCL     10717--REDEF
PRO_NAME IN PROCEDURE CHECK_DEV_PROS
     15677**DCL     15701<<ASSIGN  15705>>IF
PTR$
     13788**DCL     14288<<ASSIGN  14289>>ASSIGN  14293>>ASSIGN  14301>>ASSIGN  14331>>ASSIGN  14355>>ASSIGN
     14740<<ASSIGN  14741>>ASSIGN  14892>>ASSIGN  14919>>ASSIGN  15030>>ASSIGN  15034>>ASSIGN  15044>>ASSIGN
     15160>>IF      15162>>ASSIGN  15213>>ASSIGN  15217>>ASSIGN
PTR2$ IN PROCEDURE WSN_ACCESS
     15017**DCL     15044<<ASSIGN  15049>>ASSIGN  15051>>ASSIGN
P_PCB
     10872**DCL     14251<>CALL    14729<>CALL
P_PCB.ERROR
     10976**DCL     14253<>CALL    14732>>ASSIGN
P_PCB.NCHARS
     11019**DCL     14728<<ASSIGN
P_PCB.OUT$
     10885**DCL     14256>>ASSIGN  14738>>ASSIGN
P_PCB.ROOT$
     10877**DCL     14250<<ASSIGN  14712>>ASSIGN  14719<<ASSIGN  14838<<ASSIGN
P_PCB.WKSZ
     10902**DCL     14710>>ASSIGN  14715<<ASSIGN  14836<<ASSIGN
P_PCB.WK_USED
     11005**DCL     14711>>ASSIGN  14714>>ASSIGN  14715>>ASSIGN  14837<<ASSIGN
P_PCB.WORK$
     10881**DCL     14709>>ASSIGN  14714<<ASSIGN  14835<<ASSIGN
PL6.E3A0      #001=ASW$WSN File=ASW$WSN.:E05TSI                                  TUE 07/29/97 10:57 Page:210  
READ_FORM_ERR IN PROCEDURE WSN_DFORM
     14951**LABEL   14949--CALLALT
REMEM_VAR
     10843**DCL     10843--REDEF   14723<<REMEMBR
REM_FCMD
     10843**DCL     10844--REDEF
ROOT$
     13789**DCL     14712<<ASSIGN  14838>>ASSIGN
STAT_KEY
     13833**DCL     14480>>ASSIGN  15247>>ASSIGN
STAT_KEY.ACCT
     13835**DCL     14326<<ASSIGN  14544>>ASSIGN  15242<<ASSIGN  15301>>ASSIGN
STAT_NAME
     13790**DCL     14487>>ASSIGN  15252>>ASSIGN
STAT_NAME.COUNT
     13791**DCL     14324<<ASSIGN  15240<<ASSIGN
STAT_NAME.TEXT
     13792**DCL     14281<<ASSIGN  14325<<ASSIGN  14326>>ASSIGN  14354<<ASSIGN  14457>>ASSIGN  15241<<ASSIGN
     15242>>ASSIGN
SUBS
     13793**DCL     14285<<ASSIGN  14287>>DOINDEX
SUBS IN PROCEDURE WSN_ACCESS
     15022**DCL     15030<<ASSIGN  15033>>DOINDEX 15049<<ASSIGN  15050>>DOINDEX
TEMP$ IN PROCEDURE WSN_DEV
     15146**DCL     15449<<ASSIGN  15456>>ASSIGN  15458>>ASSIGN
TREC$
     13794**DCL     14080--IMP-PTR 14477<<ASSIGN  14482<>CALL    14505>>ASSIGN  15244<<ASSIGN  15249<>CALL
     15270>>ASSIGN
TREC2_ERR IN PROCEDURE WSN_DEV
     15247**LABEL   15249--CALLALT
TREC_ARS
     13795**DCL     14479<<ASSIGN  14482<>CALL    15246<<ASSIGN  15249<>CALL
TREC_OFF2
     13852**DCL     14477>>ASSIGN  14478>>ASSIGN  15244>>ASSIGN  15245>>ASSIGN  15449>>ASSIGN
TWSN#
     13798**DCL     14505<<ASSIGN  14509>>ASSIGN  15270<<ASSIGN  15274>>ASSIGN
PL6.E3A0      #001=ASW$WSN File=ASW$WSN.:E05TSI                                  TUE 07/29/97 10:57 Page:211  
TWSN2_ERR IN PROCEDURE WSN_DEV
     15277**LABEL   15277--CALLALT
TWSNREC$
     13797**DCL     13954--IMP-PTR 14506<<ASSIGN  14512<>CALL    14537>>IF      14539>>ASSIGN  14541<>CALL
     14545>>ASSIGN  14562>>ASSIGN  14563>>ASSIGN  14564>>ASSIGN  14566>>ASSIGN  14599>>ASSIGN  14600>>ASSIGN
     14601>>ASSIGN  14602>>ASSIGN  15271<<ASSIGN  15277<>CALL    15306>>DOWHILE 15307>>ASSIGN  15308>>ASSIGN
     15309>>ASSIGN  15312>>ASSIGN  15392>>ASSIGN  15393>>ASSIGN  15394>>ASSIGN  15395>>ASSIGN
TWSNREC_OFF2
     13851**DCL     14506>>ASSIGN  14507>>ASSIGN  15271>>ASSIGN  15272>>ASSIGN
TWSN_ARS
     13799**DCL     14508<<ASSIGN  14512<>CALL    14541<>CALL    15273<<ASSIGN  15277<>CALL
TWSN_KEY
     13837**DCL     14510>>ASSIGN  14540>>ASSIGN  15275>>ASSIGN
TWSN_KEY.TWSN#
     13840**DCL     14509<<ASSIGN  15274<<ASSIGN
TYPE
     13800**DCL     14562<<ASSIGN  14565>>IF      14565>>IF      14570>>IF      14605>>ASSIGN  15307<<ASSIGN
     15311>>IF      15311>>IF      15316>>IF      15322>>IF      15332>>IF      15359>>IF      15398>>ASSIGN
     15466<<ASSIGN  15474>>ASSIGN
TYPE IN PROCEDURE CHECK_DEV_PROS
     15678**DCL     15686<<ASSIGN  15692>>IF      15714>>ASSIGN
TYPE IN PROCEDURE WSN_DFORM
     14881**DCL     14917<<ASSIGN  14975>>IF      14991>>ASSIGN
TYPE1 IN PROCEDURE WSN_DEV
     15147**DCL     15165<<ASSIGN  15172<<ASSIGN  15194>>IF      15194>>IF      15316>>IF      15322>>IF
TYPE_FLG IN PROCEDURE WSN_DEV
     15150**DCL     15310<<ASSIGN  15319<<ASSIGN  15323<<ASSIGN  15325<<ASSIGN  15327>>IF
TYPE_OPT IN PROCEDURE WSN_DEV
     15151**DCL     15167<<ASSIGN  15173<<ASSIGN  15216<<ASSIGN  15314>>DOSELCT 15429>>IF
T_NODE$
     13801**DCL     14717<<ASSIGN  14840>>ASSIGN
USERS_KEY
     10714**DCL     14386<<ASSIGN  14480<<ASSIGN  14510<<ASSIGN  14540<<ASSIGN  14661<<ASSIGN  14850<<ASSIGN
     14853<<ASSIGN  14949<>CALL    14955>>ASSIGN  15247<<ASSIGN  15275<<ASSIGN  15558<<ASSIGN  15630<<ASSIGN
USERS_KEY.COUNT
     10714**DCL     14944<<ASSIGN
PL6.E3A0      #001=ASW$WSN File=ASW$WSN.:E05TSI                                  TUE 07/29/97 10:57 Page:212  
USERS_KEY.TEXT
     10714**DCL     10715--REDEF   10715--REDEF   10715--REDEF   10716--REDEF
USERS_KEY.TXTC
     10715**DCL     14945<<ASSIGN  14979>>ASSIGN
USE_TYPE IN PROCEDURE WSN_DEV
     15140**DCL     15159<<ASSIGN  15352<<ASSIGN  15379<<ASSIGN  15403<<ASSIGN  15478>>IF
WH2_ARS IN PROCEDURE WSN_DEV
     15152**DCL     15414<<ASSIGN  15416>>ASSIGN  15423>>ASSIGN  15424<<ASSIGN  15424>>ASSIGN
WH_ARS
     13802**DCL     14395<<ASSIGN  14396<>CALL    14466<<ASSIGN  14467>>ASSIGN  14614<<ASSIGN  14616>>ASSIGN
     14623>>ASSIGN  14624<<ASSIGN  14624>>ASSIGN  14651<<ASSIGN  14651>>ASSIGN  14652>>ASSIGN  14693<<ASSIGN
     14693>>ASSIGN  14694>>ASSIGN  14847>>ASSIGN  14848<<ASSIGN  14848>>ASSIGN  14851<>CALL    15452<<ASSIGN
     15452>>ASSIGN  15470>>ASSIGN  15471<<ASSIGN  15471>>ASSIGN
WKSZ
     13803**DCL     14710<<ASSIGN  14715>>ASSIGN  14836>>ASSIGN
WK_USED
     13804**DCL     14711<<ASSIGN  14837>>ASSIGN
WORK$
     13805**DCL     14709<<ASSIGN  14714>>ASSIGN  14835>>ASSIGN
WRITE_WSN_ERR
     14858**LABEL   14851--CALLALT
WSNDEV$
     13807**DCL     13889--IMP-PTR 14450<<ASSIGN  14472>>ASSIGN  14664<>CALL    14854>>ASSIGN  14855<>CALL
     15527>>DOINDEX 15528>>IF      15601>>IF      15623>>ASSIGN  15623>>ASSIGN  15624>>ASSIGN  15624>>ASSIGN
WSNDEV_ARS
     13808**DCL     14473<<ASSIGN  14663<<ASSIGN  14664<>CALL    14854<<ASSIGN  14855<>CALL
WSNDEV_FLG
     13809**DCL     14592<<ASSIGN  14594>>IF      15385<<ASSIGN  15387>>IF      15552<<ASSIGN  15594<<ASSIGN
WSNDEV_OFF2
     13849**DCL     14450>>ASSIGN
WSNHDR$
     13810**DCL     13868--IMP-PTR 13877--IMP-PTR 13901--IMP-PTR 14393<<ASSIGN  14396<>CALL    14454>>ASSIGN
     14455>>ASSIGN  14456>>ASSIGN  14457>>ASSIGN  14463>>ASSIGN  14470>>ASSIGN  14544>>ASSIGN  14549>>ASSIGN
     14550>>ASSIGN  14569>>DOWHILE 14570>>IF      14576>>ASSIGN  14598>>ASSIGN  14605>>ASSIGN  14605>>ASSIGN
     14606>>ASSIGN  14606>>ASSIGN  14607>>ASSIGN  14607>>ASSIGN  14613>>ASSIGN  14618>>ASSIGN  14623>>ASSIGN
     14633>>ASSIGN  14641>>ASSIGN  14645>>ASSIGN  14654>>ASSIGN  14687>>ASSIGN  14694>>ASSIGN  14698>>ASSIGN
PL6.E3A0      #001=ASW$WSN File=ASW$WSN.:E05TSI                                  TUE 07/29/97 10:57 Page:213  
     14844>>ASSIGN  14847>>ASSIGN  14851<>CALL    14974>>DOINDEX 14975>>IF      14978>>ASSIGN  15331>>DOWHILE
     15332>>IF      15338>>ASSIGN  15453>>IF      15455>>ASSIGN  15455>>ASSIGN  15459>>DOINDEX 15460>>ASSIGN
     15460>>ASSIGN  15474>>ASSIGN  15474>>ASSIGN  15475>>ASSIGN  15475>>ASSIGN  15476>>ASSIGN  15476>>ASSIGN
     15680>>IF      15685>>DOINDEX 15686>>ASSIGN  15692>>IF      15700>>ASSIGN  15700>>ASSIGN  15703>>DOINDEX
     15704>>ASSIGN  15704>>ASSIGN
WSNHDR2$ IN PROCEDURE WSN_DEV
     15141**DCL     15299<<ASSIGN  15300>>ASSIGN  15301>>ASSIGN  15358>>DOWHILE 15359>>IF      15365>>ASSIGN
     15391>>ASSIGN  15398>>ASSIGN  15398>>ASSIGN  15399>>ASSIGN  15399>>ASSIGN  15400>>ASSIGN  15400>>ASSIGN
     15413>>ASSIGN  15414>>ASSIGN  15414>>ASSIGN  15418>>ASSIGN  15423>>ASSIGN  15427>>IF      15450>>ASSIGN
     15463>>DOINDEX 15464>>ASSIGN  15466>>ASSIGN
WSNHDR2_OFF IN PROCEDURE WSN_DEV
     15143**DCL     15464>>ASSIGN
WSNHDR2_OFF3
     13853**DCL     15299>>ASSIGN
WSNHDR_OFF1
     13845**DCL     14393>>ASSIGN  14394>>ASSIGN  14467>>ASSIGN  14616>>ASSIGN  14618>>ASSIGN  14645>>ASSIGN
     14687>>ASSIGN  14978>>ASSIGN  15416>>ASSIGN  15418>>ASSIGN
WSN_ACCESS
     15012**PROC    14808--CALL
WSN_CMD
     13859**DCL     14250--ASSIGN
WSN_DEV
     15130**PROC    14762--CALL
WSN_DEV_KEY
     13825**DCL     14661>>ASSIGN  14853>>ASSIGN
WSN_DEV_KEY.ACCT
     13827**DCL     14297<<ASSIGN  14451<<ASSIGN  15536>>ASSIGN  15570>>IF      15577>>ASSIGN  15625>>ASSIGN
WSN_DFORM
     14866**PROC    14787--CALL
WSN_ERR
     14253**LABEL   14251--CALLALT
WSN_KEY
     13821**DCL     14386>>ASSIGN  14850>>ASSIGN
WSN_KEY.ACCT
     13823**DCL     14296<<ASSIGN  14297>>ASSIGN  14451>>ASSIGN  14539>>ASSIGN
WSN_LOOP
PL6.E3A0      #001=ASW$WSN File=ASW$WSN.:E05TSI                                  TUE 07/29/97 10:57 Page:214  
     14721**LABEL   14723--REMEMBR 14736--GOTO    14782--GOTO    14804--GOTO    14829--GOTO
WSN_NAME
     13811**DCL     14404>>ASSIGN  14430>>ASSIGN
WSN_NAME.COUNT
     13812**DCL     14294<<ASSIGN
WSN_NAME.TEXT
     13813**DCL     14295<<ASSIGN  14296>>ASSIGN
WSN_OPTS_LIST
     13860**DCL     14719--ASSIGN
WTBLK$
     13814**DCL     13931--IMP-PTR 14459<<ASSIGN  14555<<ASSIGN  14595<<ASSIGN  14595>>ASSIGN  14596>>ASSIGN
     14597>>ASSIGN  14598>>ASSIGN  14599>>ASSIGN  14600>>ASSIGN  14601>>ASSIGN  14602>>ASSIGN  14603>>ASSIGN
     14603>>ASSIGN  14604>>ASSIGN  14604>>ASSIGN  14618<<ASSIGN  14621>>ASSIGN  14622>>ASSIGN  14629<<ASSIGN
     14646<<ASSIGN  14688<<ASSIGN  15302<<ASSIGN  15388<<ASSIGN  15388>>ASSIGN  15389>>ASSIGN  15390>>ASSIGN
     15391>>ASSIGN  15392>>ASSIGN  15393>>ASSIGN  15394>>ASSIGN  15395>>ASSIGN  15396>>ASSIGN  15396>>ASSIGN
     15397>>ASSIGN  15397>>ASSIGN  15401>>IF      15418<<ASSIGN  15421>>ASSIGN  15422>>ASSIGN  15464<<ASSIGN
     15469>>ASSIGN  15700<<ASSIGN  15701>>ASSIGN  15704<<ASSIGN  15705>>IF
WTBLK_OFF1
     13846**DCL     14555>>ASSIGN  14556>>ASSIGN  15302>>ASSIGN
WTB_SZ
     13815**DCL     14557<<ASSIGN  14559>>ASSIGN
X IN PROCEDURE DEVWSN
     15520**DCL     15527<<DOINDEX 15528>>IF      15569<<DOINDEX 15570>>IF
X$PARSE
     13702**DCL-ENT 14251--CALL    14729--CALL
