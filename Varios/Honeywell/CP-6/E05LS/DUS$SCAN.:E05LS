VERSION E05

PL6.E3A0      #001=DDS$SCAN File=DUS$SCAN.:E05TSI                                TUE 07/29/97 15:01 Page:1    
        1        1        /*M* DDS$SCAN DELTA COMMAND SCANNER */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* DMR,PLM=5,IND=5,CSU=3,EXM=0,ECU=3,MOC,DCI=5,CRT=5 */
        8        8        %SET LISTSUB='1'B;
        9        9        /*P* NAME: DDS$SCAN
       10       10             PURPOSE: TO READ, SCAN, & ENCODE INPUT COMMANDS TO DELTA.
       11       11             DESCRIPTION: READS THE COMMAND FROM THE CURRENT INPUT
       12       12             DEVICE. THE COMMAND IS PARSED USING X$PARSE FACILITY.
       13       13             BUILDS STORED COMMAND TABLES FOR STORED COMMANDS. KEEPS
       14       14             PROCESSING STORED COMMANDS UNTIL A DIRECT COMMAND IS
       15       15             ENCOUNTERED. RETURNS TO CALLER WITH THE DIRECT COMMAND
       16       16             BUILT (ENCODED) IN THE DIRECT COMMAND BUFFER.
       17       17             REFERENCE: DELTA FUNCTIONAL SPEC AF Section 17.6 #0065C-0. */
       18       18        %EJECT;
PL6.E3A0      #001=DDS$SCAN File=DUS$SCAN.:E05TSI                                TUE 07/29/97 15:01 Page:2    
       19       19        /*F* NAME: DDS$SCAN
       20       20             PURPOSE: TO READ, SCAN, & ENCODE INPUT COMMANDS TO DELTA.
       21       21             DESCRIPTION: READS THE COMMAND FROM THE CURRENT INPUT
       22       22             DEVICE. THE COMMAND IS PARSED USING X$PARSE FACILITY.
       23       23             BUILDS STORED COMMAND TABLES FOR STORED COMMANDS. KEEPS
       24       24             PROCESSING STORED COMMANDS UNTIL A DIRECT COMMAND IS
       25       25             ENCOUNTERED. RETURNS TO CALLER WITH THE DIRECT COMMAND
       26       26             BUILT (ENCODED) IN THE DIRECT COMMAND BUFFER.
       27       27             REFERENCE: DELTA FUNCTIONAL SPEC AF Section 17.6 #0065C-0. */
       28       28        /*D* NAME: DDS$SCAN
       29       29             CALL: CALL DDS$SCAN;
       30       30             INTERFACE: XUG$GETCMD
       31       31                        DDA$KILL1
       32       32                        DDS$PROMPT
       33       33                        DDS$PROMPTC
       34       34                        DDE$ERROR
       35       35                        DDD$BUMP_D$
       36       36                        DDS$DECIMAL
       37       37                        DDS$STOREDA
       38       38                        DDS$ATTDIRA
       39       39                        DDS$SET_C2D
       40       40                        DDS$SET_D2Q
       41       41                        DDS$SET_Q2D
       42       42                        DDS$VREFCOM
       43       43                        DDS$CNSNT
       44       44                        DUA$RUM_COMM;
       45       45                        D_DCMDS
       46       46             ENVIRONMENT: XDELTA OR USER DELTA.
       47       47             INPUT: IMPLICIT REQUEST FOR DIRECT COMMAND.
       48       48             OUTPUT: DIRECT COMMAND BUILT IN DIRECT COMMAND BUFFER.
       49       49                     STORED COMMANDS ADDED TO STORED OMMAND BUFFERS ALONG
       50       50                     THE WAY.
       51       51             SCRATCH: DDS$PROMPT PLAYS WITH THE INPUT BUFFER.
       52       52                      LOCAL AUTO.
       53       53             DESCRIPTION: READS THE COMMAND FROM THE CURRENT INPUT
       54       54             DEVICE. THE COMMAND IS PARSED USING X$PARSE FACILITY.
       55       55             BUILDS STORED COMMAND TABLES FOR STORED COMMANDS. KEEPS
PL6.E3A0      #001=DDS$SCAN File=DUS$SCAN.:E05TSI                                TUE 07/29/97 15:01 Page:3    
       56       56             PROCESSING STORED COMMANDS UNTIL A DIRECT COMMAND IS
       57       57             ENCOUNTERED. RETURNS TO CALLER WITH THE DIRECT COMMAND
       58       58             BUILT (ENCODED) IN THE DIRECT COMMAND BUFFER.
       59       59             ALTRETS ONLY IF ENTERED AT DDS$SCAN1 & COMMAND
       60       60             COULD NOT BE BUILT. */
       61       61                                                /**/
       62       62        DDS$SCAN: PROC ALTRET;
       63       63                                                /**/
       64       64        %INCLUDE DD_SUBS_C;                     /* %SUBS */
       65      335        %INCLUDE CP_6;
       66      416        %INCLUDE B$JIT;
       67      706    1   DCL B$JIT$ PTR SYMREF;
       68      707        %INCLUDE XU_MACRO_C;                    /* GETCMD MACROS */
       69     3813        %INCLUDE CXG_ENTRY;                     /* XUG ENTRY DCLS */
       70     3825        %INCLUDE XU_SUBS_C;                     /* X$PARSE %SUBs */
       71     3917        %INCLUDE DD_ERR_C;                      /* ERROR CODE %SUBS */
       72     4314        %INCLUDE XU_PERR_C;                     /* X$PARSE ERROR CODES */
       73     4505        %INCLUDE DD_PSUBS_C;                    /* SYNTAX TREE %SUBS */
       74     4980        %INCLUDE B$OBJECT_C;                    /* OBJECT LANGUAGE TEMPLATES */
       75     8410        %SUB FIXCOMSIZE="(SIZEW(S_D.FIXCOM)/SIZEW(S_D.FIXCOM(0)))-1";
       76     8411        %XUG_INIT (STCLASS=AUTO);
       77     8824        %XUG_GETCMD (STCLASS=AUTO);
       78     9162    1   DCL TEMPID SBIN;                        /* TEMPORARY CMD ID */
       79     9163    1   DCL NC$ PTR;                            /* CURRENT NODE PTR */
       80     9164    1   DCL NCC$ PTR;                           /* ANOTHER NODE POINTER */
       81     9165    1   DCL NCMD$ PTR;                          /* CURRENT COMMAND NODE PTR */
       82     9166    1   DCL IX SBIN;                            /* COMMAND LOOP INDEX */
       83     9167    1   DCL TEMPCODE SBIN;                      /* TEMP FOR COMMAND CODE */
       84     9168    1   DCL MAERR SBIN;                         /* MACTIVE ERROR CODE */
       85     9169    1   DCL MAERR$ PTR;                         /* MACTIVE ERROR SYMBOL */
       86     9170    1   DCL 1 MAERRTEXTC,                       /* MACTIVE ERROR SYMBOL */
       87     9171    1         2 SIZE UBIN BYTE UNAL,
       88     9172    1         2 TEXT CHAR(63) UNAL;             /* DON'T WORRY ABOUT TRUNCATION */
       89     9173    1   DCL MACHAR UBIN;                        /* MACTIVE ERROR HI_CHAR */
       90     9174    1   DCL LASTBLT$ PTR;                       /* =S_D.LASTBLT$, USED AS IMPLIED PTR */
       91     9175    1   DCL SCAN1 BIT(1) ALIGNED;               /* HOW ENTERED FLAG */
       92     9176    1   DCL SCAN2 BIT(1) ALIGNED;               /* Another how entered flag */
PL6.E3A0      #001=DDS$SCAN File=DUS$SCAN.:E05TSI                                TUE 07/29/97 15:01 Page:4    
       93     9177    1   DCL TRAIL_SEMI BIT(1) ALIGNED;
       94     9178    1   DCL SEMI_OFFSET UBIN;              /* OFFSET TO SEMI_COLON IN PARSED TEXT */
       95     9179    1   DCL ATT_SIZE UBIN;
       96     9180    1   DCL ATTEXT$ PTR;
       97     9181    1   DCL CHAR$ATT CHAR(ATT_SIZE) BASED;
       98     9182    1   DCL CHAR32 CHAR(32) BASED;
       99     9183    1   DCL VCPOS UBIN;                    /* CPOS of VREF for WHEN so SHOW will work */
      100     9184        %INCLUDE DD$DITEM;                      /* DATA DESCRIPTOR STUFF */
       12+    9287             %LIST;
       13+    9288    1        DCL SDD$ PTR;
       14+    9289    1        DCL ZITEM$ PTR;
       15+    9290    1        DCL SDD_L6$ PTR;
       16+    9291    1        DCL ZITEM_L6$ PTR;
      101     9865        %ZITEM;
      102     9937        %B$TREE_TABLE (HDR_NAME=B$TREEHDR,NODE_NAME="B$NODE(0:0)");
      103     9995        %PARSE$OUT (NAME=POB,STCLASS=BASED,NSUBLKS=NSB);
      104    10040        %INCLUDE DD$BASED;                      /* BASED STRUCTURES */
      105    11343        %AT_FIRST;
      106    11371        %ALL_ATTACH;
      107    11386        %TEXT$C;
      108    11391        %IF$CONST;
      109    11429        %FPRG$CONTEXT;
      110    11492        %INCLUDE XUH_MACRO_C;
      111    11576        %INCLUDE DD_SD_M;                       /* "STATIC" DATA */
      112    12912        %S_D;
      113    14230        %VLP_NAME (FPTN=DELTA_NAME,NAME='DELTA',STCLASS=CONSTANT);
      114    14257        %VLP_ACCT (FPTN=DELTA_ACCT,ACCT=':SYS',STCLASS=CONSTANT);
      115    14270
      116    14271        %XUG_INIT (NAME=XUG_INIT_CONSTANT,
      117    14272                   PROCACCT=DELTA_ACCT,
      118    14273                   PROCNAME=DELTA_NAME,
      119    14274                   GOODCMD=NO,
      120    14275                   COMMANDS=YES,
      121    14276                   INHIBIT_DO=YES,
      122    14277                   INHIBIT_END=YES,
      123    14278                   ADAPT=NIL,
      124    14279                   SYNTAX=YES,
PL6.E3A0      #001=DDS$SCAN File=DUS$SCAN.:E05TSI                                TUE 07/29/97 15:01 Page:5    
      125    14280                   SPELLING=YES,
      126    14281                   POST_EXEC=DUS$POST_EXEC,
      127    14282                   STCLASS=CONSTANT);
      128    14695
      129    14696        %XUG_GETCMD (NAME=XUG_GETCMD_CONSTANT,
      130    14697                     CONTINUE_OK=NO,
      131    14698                     PROMPT_VFC=YES,
      132    14699                     SFROUTINE=DDS$SUCCESS,
      133    14700                     READR=DUS$SCANREAD,
      134    14701                     STCLASS=CONSTANT);
      135    15039    1   DCL ATREEA(0:3) UBIN BYTE UNAL CONSTANT INIT( 57, /* C_STEP */
      136    15040    1                                   8, /* C_EVAL */
      137    15041    1                                 28, /* C_MODIFY */
      138    15042    1                              29 ); /* C_MACTIVE */
      139    15043    1   DCL ATREET REDEF ATREEA CHAR(4);
      140    15044    1   DCL SKILLA(0:3) UBIN BYTE UNAL CONSTANT INIT( 30, /* C_OA */
      141    15045    1                                     32, /* C_OE */
      142    15046    1                                53, /* C_ONCALLS */
      143    15047    1                              54 ); /* C_ONNODES */
      144    15048    1   DCL SKILLT REDEF SKILLA CHAR(4);
      145    15049    1   DCL PARSE$ PTR SYMREF;                  /* X$PARSE WORK BUFFER */
      146    15050    1   DCL D_DCMDS SBIN SYMREF;                /* COMMANDS SYNTAX TREE */
      147    15051    1   DCL D_CCMDS UBIN SYMREF;                /* CONTINUED COMMANDS PARSE TREE */
      148    15052    1   DCL D_ACMDS UBIN SYMREF;                /* ATTACHMENT COMMANDS PARSE TREE */
      149    15053    1   DCL D_MTREE UBIN SYMREF;                /* INTERACTIVE MODIFY PARSE TREE */
      150    15054    1   DCL D_XDELTA BIT(1) ALIGNED SYMREF;     /* EXEC DELTA/USER DELTA FLAG */
      151    15055    1   DCL D_ATREE UBIN SYMREF;           /* DELTA ACTIVATION CHARACTER PARSE TREE */
      152    15056    1   DCL D_M$DELT# UBIN SYMREF;
      153    15057    1   DCL D_M$DO# UBIN SYMREF;
      154    15058    1   DCL D_PARSIZE UBIN SYMREF;              /* PARSE SIZE */
      155    15059    1   DCL DDA$KILL1 ENTRY(0);                 /* KILLS A STORED COMMAND */
      156    15060    1   DCL DFA$KILL1 ENTRY(3);
      157    15061    1   DCL DDS$PROMPT ENTRY;                   /* PROMPT & READ USER'S COMMAND */
      158    15062    1   DCL DDS$PROMPTC ENTRY;             /* PROMPT & READ CONTINUED USER'S COMMAND */
      159    15063    1   DCL DUS$SCANREAD          ENTRY(3);/* DUMMY READR FOR XUG, GETS CMD FROM S_D */
      160    15064    1   DCL DUS$POST_EXEC         ENTRY;        /* ROUTINE SETS S_D.BUILTIN */
      161    15065    1   DCL DDE$ERROR ENTRY(0);                 /* ERROR MSG REPORTER */
PL6.E3A0      #001=DDS$SCAN File=DUS$SCAN.:E05TSI                                TUE 07/29/97 15:01 Page:6    
      162    15066    1   DCL DDD$BUMP_D$ ENTRY(1) ALTRET;        /* BUMPS S_D.D$ */
      163    15067    1   DCL DDS$DECIMAL ENTRY(2) ALTRET;        /* HANDLES DECIMALS NODE */
      164    15068    1   DCL DDS$STOREDA ENTRY(2) ALTRET;        /* COMMON STORED COMMAND CODE */
      165    15069    1   DCL DDS$ATTDIRA ENTRY(2) ALTRET;   /* ATTACHABLE | DIRECT COMMAND COMMON CODE */
      166    15070    1   DCL DDS$SET_C2D ENTRY ALTRET;           /* ESTABLISHES SCHEMA ACCESS */
      167    15071    1   DCL DDS$SET_D2Q ENTRY ALTRET;           /* ESTABLISHES SCHEMA ACCESS */
      168    15072    1   DCL DDS$SET_Q2D ENTRY ALTRET;           /* ESTABLISHES SCHEMA ACCESS */
      169    15073    1   DCL DDS$VREFCOM ENTRY(2) ALTRET;        /* BUILDS DATA DESCRIPTOR */
      170    15074    1   DCL DDS$CNSNT ENTRY(4) ALTRET;          /* EVALUATES "CNSNT_REF" NODE */
      171    15075    1   DCL DUA$RUM_COMM ENTRY(0);              /* RECORDS COMMENTS FOR RUM MODE */
      172    15076    1   DCL DDS$BLD ENTRY(1) ALTRET;            /* COMMON BUILD ROUTINES */
      173    15077    1   DCL DDS$SUCCESS ENTRY(1);               /* U$ ROUTINE FOR X$PARSE */
      174    15078    1   DCL DDB$CHECK_ADDR ENTRY(2) ALTRET;
      175    15079    1   DCL DDR$BINTXT ENTRY(4);
      176    15080    1   DCL DDQ$WRITE ENTRY(2);
      177    15081        %EJECT;
PL6.E3A0      #001=DDS$SCAN File=DUS$SCAN.:E05TSI                                TUE 07/29/97 15:01 Page:7    
      178    15082        /*D* NAME: DDS$SCAN
      179    15083             CALL: CALL DDS$SCAN
      180    15084             ENVIRONMENT: XDELTA OR USER DELTA.
      181    15085             INPUT: IMPLICIT REQUEST FOR DIRECT COMMAND.
      182    15086             OUTPUT: DIRECT COMMAND BUILT IN DIRECT COMMAND BUFFER.
      183    15087                     STORED COMMANDS ADDED TO STORED OMMAND BUFFERS ALONG
      184    15088                     THE WAY.
      185    15089             SCRATCH: DDS$PROMPT PLAYS WITH THE INPUT BUFFER.
      186    15090                      LOCAL AUTO.
      187    15091             DESCRIPTION: READS THE COMMAND FROM THE CURRENT INPUT
      188    15092             DEVICE. THE COMMAND IS PARSED USING M$PARSE FACILITY.
      189    15093             BUILDS STORED COMMAND TABLES FOR STORED COMMANDS. KEEPS
      190    15094             PROCESSING STORED COMMANDS UNTIL A DIRECT COMMAND IS
      191    15095             ENCOUNTERED. RETURNS TO CALLER WITH THE DIRECT COMMAND
      192    15096             BUILT (ENCODED) IN THE DIRECT COMMAND BUFFER.
      193    15097             REFERENCE: DELTA FUNCTIONAL SPEC AF Section 17.6 #0065C-0.
      194    15098        */
      195    15099    1        SCAN1 = '0'B;                      /* DDS$SCAN ENTRY POINT */
      196    15100    1        SCAN2 = '0'B;
      197    15101    1        SEMI_OFFSET = 0;
      198    15102    1        GOTO ONCE;
      199    15103                                                /**/
      200    15104    1   DDS$SCAN1: ENTRY ALTRET;
      201    15105                                                /**/
      202    15106    1        SCAN1 = '1'B;                      /* DDS$SCAN1 ENTRY POINT */
      203    15107    1        SCAN2 = '0'B;
      204    15108    1        SEMI_OFFSET = 0;
      205    15109    1        GOTO ONCE;
      206    15110
      207    15111    1   DDS$SCAN2: ENTRY ALTRET;                /* DDS$SCAN2 entry point */
      208    15112
      209    15113    1        SCAN2 = '1'B;
      210    15114    1        SCAN1 = '0'B;
      211    15115    1   ONCE:;
      212    15116        /* GET XUG READY */
      213    15117    1        XUG_INIT = XUG_INIT_CONSTANT;
      214    15118    1        VBASE(XUG_INIT.WORK_) = PARSE$;
PL6.E3A0      #001=DDS$SCAN File=DUS$SCAN.:E05TSI                                TUE 07/29/97 15:01 Page:8    
      215    15119    1        VBOUND(XUG_INIT.WORK_) = 4*D_PARSIZE-1;
      216    15120    1        XUG_GETCMD = XUG_GETCMD_CONSTANT;
      217    15121    1        XUG_GETCMD.PROMPT_=VECTOR(SUBSTR(ADDR(S_D.PROMPT)->CHAR32,0,S_D.PROMPT_SIZE));
      218    15122    1        XUG_GETCMD.TEXT_ = VECTOR(NIL);
      219    15123    1        XUG_GETCMD.INDCB# = D_M$DELT#;
      220    15124    1        XUG_GETCMD.OUTDCB# = D_M$DO#;
      221    15125    1        XUG_GETCMD.DCB_PARAM# = D_M$DO#;
      222    15126    1        CALL CXG$INIT (XUG_GETCMD, XUG_INIT);
      223    15127    1        S_D.BEEN_TO_SCANREAD = '0'B;
      224    15128
      225    15129    1   START:;
      226    15130    1        S_D.REMACTIVE = S_D.MACTIVE;       /* FOR EVAL, MACTIVE BLD ROUTINES */
      227    15131    1        S_D.ERROR_SYM$ = ADDR( NIL );
      228    15132    1        IF NOT S_D.MACTIVE
      229    15133    1        THEN CALL DDS$SET_C2D;
      230    15134        /* SET STORED FLAG AS NOT WORKING ON A STORED COMMAND */
      231    15135    1        S_D.STORED=0;
      232    15136        /* READ THE COMMAND FROM THE CURRENT INPUT DEVICE */
      233    15137    1   PARSMORE:
      234    15138    1        IF S_D.BEEN_TO_SCANREAD AND SCAN1 THEN RETURN;
      235    15139    1        REMEMBER PARSMORE IN S_D.PARSMORE_REM;
      236    15140    1        S_D.BEEN_TO_SCANREAD = '0'B;
      237    15141    1        S_D.RUM_COMMAND = '0'B;
      238    15142    1        S_D.XUG_BUILTIN = '0'B;
      239    15143    1        MAERR = 0;
      240    15144    1        S_D.SACT = '0'B;
      241    15145    1        IF ( NOT SCAN1 AND NOT SCAN2 ) OR ( SCAN2 AND S_D.MACTIVE )
      242    15146    2        THEN DO;                           /* PROMPT & GET COMMAND */
      243    15147    2             IF S_D.STORED ~= 0
      244    15148    2             THEN CALL DDS$PROMPTC;
      245    15149    2             ELSE CALL DDS$PROMPT;
      246    15150    2           END;                            /* PROMPT & GET COMMAND */
      247    15151    1        IF S_D.SACT
      248    15152    2        THEN DO;                           /* SPECIAL ACTIVATION CHARACTER MODE */
      249    15153    2             IF S_D.STORED ~= 0
      250    15154    2             THEN GOTO USERSY;             /* CANNOT ACTIVATE ON STORED CMD */
      251    15155    2             IF S_D.RUM_SKIP
PL6.E3A0      #001=DDS$SCAN File=DUS$SCAN.:E05TSI                                TUE 07/29/97 15:01 Page:9    
      252    15156    2             THEN GOTO USERSK;
      253    15157    2             S_D.MACTIVE = '0'B;
      254    15158    2             XUG_GETCMD.NODES$ = ADDR( D_ATREE );
      255    15159    2             S_D.QUALIFIED = '0'B;
      256    15160    2             S_D.ERROR_SYM$ = ADDR( NIL );
      257    15161    2             S_D.ERROR = 0;
      258    15162    2             S_D.IFSPEC$ = ADDR( NIL );
      259    15163    2             CALL ATTDIR_INIT ALTRET( USERRERR );
      260    15164    2             CALL DDS$SET_D2Q;
      261    15165    2             XUG_GETCMD.PROMPT_=VECTOR(SUBSTR(ADDR(S_D.PROMPT)->CHAR32,0,S_D.
             15165                      PROMPT_SIZE));
      262    15166    2             CALL CXG$GETCMD( XUG_GETCMD ) ALTRET( USERR0 );
      263    15167    2             NCMD$ = XUG_GETCMD.OUT$ -> POB.SUBLK$( 0 );
      264    15168    2             S_D.NCMD$ = NCMD$;
      265    15169    2             TEMPCODE = NCMD$ -> POB.CODE;
      266    15170    2             CALL INDEX( IX, BINASC( TEMPCODE ), ATREET ) ALTRET( UDERR1 );
      267    15171    3             DO CASE ( IX );
      268    15172    3               CASE ( 0 );                 /* STEP */
      269    15173    3                  IF S_D.PATCH THEN GOTO USERPA;
      270    15174    3                  IF S_D.RUM OR S_D.ANLZ THEN GOTO USERNDE;
      271    15175    3                  CALL DDS$BLD( 57 ) ALTRET( USERRERR ); /* C_STEP */
      272    15176    3               CASE ( 1 );                 /* EVAL */
      273    15177    3                  CALL DDS$BLD( 8 ) ALTRET( USERRERR ); /* C_EVAL */
      274    15178    3               CASE ( 2 );                 /* MODIFY */
      275    15179    3                  CALL DDS$BLD( 28 ) ALTRET( USERRERR ); /* C_MODIFY */
      276    15180    3               CASE ( 3 );                 /* MACTIVE */
      277    15181    3                  CALL DDS$BLD( 69 ) ALTRET( USERRERR ); /* C_MACTIVE1 */
      278    15182    3               END;
      279    15183    2             S_D.LASTBLT$ -> ALL_ATTACH.LENGTH = POFFW( S_D.D$, S_D.LASTBLT$ );
      280    15184    2             RETURN;
      281    15185    2           END;                            /* SPECIAL ACTIVATION CHARACTER MODE */
      282    15186    1        IF S_D.MACTIVE
      283    15187    2        THEN DO;
      284    15188    2             XUG_GETCMD.NODES$ = ADDR( D_MTREE );
      285    15189    2             S_D.QUALIFIED = '0'B;
      286    15190    2             S_D.ERROR_SYM$ = ADDR( NIL );
      287    15191    2             S_D.ERROR = 0;
PL6.E3A0      #001=DDS$SCAN File=DUS$SCAN.:E05TSI                                TUE 07/29/97 15:01 Page:10   
      288    15192    2             S_D.IFSPEC$ = ADDR( NIL );
      289    15193    2             CALL ATTDIR_INIT ALTRET( USERRERR );
      290    15194    2             CALL DDS$SET_D2Q;
      291    15195    2             IF SUBSTR( S_D.INPUT, 0, S_D.NCHARS ) = ' '
      292    15196    3             THEN DO;
      293    15197    3                  IF S_D.RUM_SKIP
      294    15198    3                  THEN GOTO USERSK;
      295    15199    3                  CALL DDS$BLD( 14 ) ALTRET( USERRERR ); /* C_MACLOSE */
      296    15200    3                END;
      297    15201    3             ELSE DO;
      298    15202    3                  XUG_GETCMD.PROMPT_=VECTOR(SUBSTR(ADDR(S_D.PROMPT)->CHAR32,0,S_D.
             15202                           PROMPT_SIZE));
      299    15203    3                  XUG_GETCMD.TEXT_ = VECTOR(NIL);
      300    15204    3                  CALL CXG$GETCMD ( XUG_GETCMD ) ALTRET( BIGTREE );
      301    15205    3                  NCMD$ = XUG_GETCMD.OUT$;
      302    15206    3                  S_D.NCMD$ = NCMD$;
      303    15207    3                  CALL DDS$BLD( 69 ) ALTRET( REMERR ); /* C_MACTIVE1 */
      304    15208    3                  IF S_D.RUM_SKIP
      305    15209    3                  THEN GOTO USERSK;
      306    15210    3                END;
      307    15211    2             S_D.LASTBLT$ -> ALL_ATTACH.LENGTH = POFFW( S_D.D$, S_D.LASTBLT$ );
      308    15212    2             RETURN;
      309    15213    2   BIGTREE:
      310    15214    2             IF SCAN2 OR XUG_GETCMD.ERR#.CODE# ~= %E$SYNERR
      311    15215    2             THEN GOTO USERR0;
      312    15216    2             ELSE GOTO RESETMA;
      313    15217    2   REMERR:
      314    15218    2             IF SCAN2
      315    15219    2             THEN GOTO USERRERR;
      316    15220    2             MAERR = S_D.ERROR;
      317    15221    2             MAERR$ = S_D.ERROR_SYM$;
      318    15222    2             IF MAERR$ ~= ADDR( NIL )
      319    15223    3             THEN DO;
      320    15224    3                  MAERRTEXTC = MAERR$ -> TEXT$C;
      321    15225    3                  IF MAERRTEXTC.SIZE > LENGTHC( MAERRTEXTC.TEXT )
      322    15226    3                  THEN MAERRTEXTC.SIZE = LENGTHC( MAERRTEXTC.TEXT );
      323    15227    3                  MAERR$ = ADDR( MAERRTEXTC );
PL6.E3A0      #001=DDS$SCAN File=DUS$SCAN.:E05TSI                                TUE 07/29/97 15:01 Page:11   
      324    15228    3                END;
      325    15229    2             MACHAR = XUG_GETCMD.EPOS#;
      326    15230    2   RESETMA:
      327    15231    2             CALL DDS$SET_C2D;
      328    15232    2             S_D.BEEN_TO_SCANREAD = '0'B;
      329    15233    2             S_D.MACTIVE = '0'B;
      330    15234    2           END;
      331    15235    1        IF SCAN2
      332    15236    2        THEN DO;
      333    15237    2             XUG_GETCMD.NODES$ = ADDR( D_ACMDS );
      334    15238    2             ATT_SIZE = S_D.ACMDS_SIZE;
      335    15239    2             S_D.INPUT = SUBSTR( S_D.ACMDS$ -> CHAR$ATT, S_D.ACMDS_OFF );
      336    15240    2             S_D.NCHARS = ATT_SIZE - S_D.ACMDS_OFF;
      337    15241    2             S_D.QUALIFIED = '0'B;
      338    15242    2             S_D.ERROR_SYM$ = ADDR( NIL );
      339    15243    2             S_D.ERROR = 0;
      340    15244    2             CALL DDS$SET_D2Q;
      341    15245    2             XUG_GETCMD.PROMPT_=VECTOR(SUBSTR(ADDR(S_D.PROMPT)->CHAR32,0,S_D.
             15245                      PROMPT_SIZE));
      342    15246    2             XUG_GETCMD.TEXT_ = VECTOR(NIL);
      343    15247    2             CALL CXG$GETCMD ( XUG_GETCMD ) ALTRET( USERR0 );
      344    15248    2             NC$ = XUG_GETCMD.OUT$ -> POB.SUBLK$( 0 );
      345    15249    2             NCMD$ = NC$ -> POB.SUBLK$( 0 );
      346    15250    2             S_D.NCMD$ = NCMD$;
      347    15251    2             CALL SET_IF_SEMI;
      348    15252    2             CALL ATTDIR_INIT ALTRET( USERRERR );
      349    15253    2             TEMPCODE = NCMD$ -> POB.CODE;
      350    15254    2             IF S_D.RUM_SKIP
      351    15255    2             THEN IF NOT (
      352    15256    2                    ( TEMPCODE = 72 ) OR /* C_RUM */
      353    15257    2                    ( TEMPCODE = 42 ) OR /* C_READ */
      354    15258    2                    ( TEMPCODE = 39 ) OR /* C_QUIT */
      355    15259    2                    ( TEMPCODE = 11 ) OR /* C_GOTO */
      356    15260    2                    ( TEMPCODE = 58 ) ) /* C_ALIB */
      357    15261    2                  THEN GOTO USERSK;
      358    15262                                      /* Check for multiple command don't want to allow
      359    15263                                         unless it is the last multiple command. */
PL6.E3A0      #001=DDS$SCAN File=DUS$SCAN.:E05TSI                                TUE 07/29/97 15:01 Page:12   
      360    15264    2             IF (( TEMPCODE = 78) OR  /* C_DBOOT */
      361    15265    2               ( TEMPCODE = 70 ) OR    /* C_MINI */
      362    15266    2               ( TEMPCODE = 57 ) OR    /* C_STEP */
      363    15267    2               ( TEMPCODE = 61) OR    /* C_TBOOT */
      364    15268    2               ( TEMPCODE = 68  ))      /* C_XEQ */
      365    15269    2               AND SEMI_OFFSET ~= 0        /* not last command */
      366    15270    2               AND S_D.DO_ATTACH = 0       /* multiple command, not attachment */
      367    15271    3             THEN DO;
      368    15272    4                  DO CASE ( TEMPCODE );
      369    15273    4                    CASE ( 78 );      /* C_DBOOT */
      370    15274    4                       S_D.ERROR = 241; /* E@DBOOT_NOTALLOWED */
      371    15275    4                    CASE ( 70 );       /* C_MINI */
      372    15276    4                       S_D.ERROR = 242; /* E@MINI_NOTALLOWED */
      373    15277    4                    CASE ( 57 );       /* C_STEP */
      374    15278    4                       S_D.ERROR = 243; /* E@STEP_NOTALLOWED */
      375    15279    4                    CASE ( 61 );      /* C_TBOOT */
      376    15280    4                       S_D.ERROR = 244; /* E@TBOOT_NOTALLOWED */
      377    15281    4                    CASE ( 68 );        /* C_XEQ */
      378    15282    4                       S_D.ERROR = 245; /* E@XEQ_NOTALLOWED */
      379    15283    4                    END;
      380    15284    3                  GOTO USERRERR;
      381    15285    3                END;
      382    15286    2             CALL DDS$BLD( TEMPCODE ) ALTRET( USERRERR );
      383    15287    2             IF SEMI_OFFSET ~= 0
      384    15288    2             THEN S_D.ACMDS_OFF = S_D.ACMDS_OFF + SEMI_OFFSET + 1;
      385    15289    2             ELSE S_D.ACMDS_OFF = S_D.ACMDS_SIZE;
      386    15290    2             RETURN;
      387    15291    2           END;
      388    15292    1        IF SUBSTR( S_D.INPUT, 0, S_D.NCHARS ) = ' '
      389    15293    1        THEN IF SCAN1
      390    15294    1             THEN GOTO USERNU;
      391    15295    1             ELSE IF S_D.STORED = 0
      392    15296    1                  THEN GOTO PARSMORE;      /* RE-PROMPT & TRY AGAIN */
      393    15297    2                  ELSE DO;       /* IMPLIED DONE WITH CONTINUED STORED COMMAND */
      394    15298    2                       IF S_D.STORED > S_D.FIXLAST
      395    15299    2                       THEN S_D.FIXLAST = S_D.STORED;
      396    15300    2                       GOTO START;
PL6.E3A0      #001=DDS$SCAN File=DUS$SCAN.:E05TSI                                TUE 07/29/97 15:01 Page:13   
      397    15301    2                     END;
      398    15302        /* Call X$PARSE to see what we got */
      399    15303    1        S_D.QUALIFIED = '0'B;
      400    15304    1        CALL DDS$SET_D2Q;
      401    15305    1        S_D.ERROR_SYM$ = ADDR(NIL);
      402    15306    1        S_D.ERROR = 0;
      403    15307    1        IF S_D.STORED = 0
      404    15308    2        THEN DO;                           /* Initial stored or direct command */
      405    15309    2             XUG_GETCMD.NODES$ = ADDR( D_DCMDS );
      406    15310    2             XUG_GETCMD.PROMPT_=VECTOR(SUBSTR(ADDR(S_D.PROMPT)->CHAR32,0,S_D.
             15310                      PROMPT_SIZE));
      407    15311    2             XUG_GETCMD.TEXT_ = VECTOR(NIL);
      408    15312    2             CALL CXG$GETCMD ( XUG_GETCMD ) ALTRET( USERR0 );
      409    15313    2             NC$ = XUG_GETCMD.OUT$ -> POB.SUBLK$( 0 );
      410    15314    2             IF NC$ -> POB.CODE = 55 /* C@STORED_CMD */
      411    15315    3             THEN DO;                      /* Stored command */
      412    15316    3                  NCMD$ = NC$ -> POB.SUBLK$( 0 );
      413    15317    3                  IF NC$ -> POB.NSB > 1
      414    15318    4                  THEN DO;
      415    15319    4                       CALL DDS$DECIMAL( NCMD$, TEMPID ) ALTRET( USERRERR );
      416    15320    4                       IF ( TEMPID < 1 ) OR ( TEMPID > (SIZEW(S_D.FIXCOM)/SIZEW(S_D.
             15320                                FIXCOM(0)))-1 )
      417    15321    4                       THEN GOTO USERR1;
      418    15322    4                       NCMD$ = NC$ -> POB.SUBLK$( 1 );
      419    15323    4                     END;
      420    15324    3                  ELSE TEMPID = -1;
      421    15325    3                  CALL SET_TRAIL_SEMI;
      422    15326    3                  IF TRAIL_SEMI
      423    15327    3                  THEN IF SCAN1            /* Continuation */
      424    15328    3                       THEN GOTO UDERNC;
      425    15329    3                  S_D.NCMD$ = NCMD$;
      426    15330    3                  CALL SET_IF_SEMI;
      427    15331    3                  TEMPCODE = NCMD$ -> POB.CODE;
      428    15332    3                  IF S_D.RUM_SKIP
      429    15333    3                  THEN GOTO USERSK;
      430    15334    3                  IF TEMPCODE = 67     /* C_WHEN */
      431    15335    4                  THEN DO;
PL6.E3A0      #001=DDS$SCAN File=DUS$SCAN.:E05TSI                                TUE 07/29/97 15:01 Page:14   
      432    15336    4                       IF D_XDELTA THEN GOTO USERR7;
      433    15337    4                       CALL ATTDIR_INIT ALTRET( USERRERR );
      434    15338    4                       CALL DDS$BLD_WHEN ALTRET( USERRERR );
      435    15339    4                     END;
      436    15340    4                  ELSE DO;
      437    15341    4                       CALL STORED_INIT ALTRET( USERRERR );
      438    15342    4                       CALL DDS$BLD( TEMPCODE ) ALTRET( USERRERR );
      439    15343    4                       VCPOS = 0;
      440    15344    4                     END;
      441    15345    3                  S_D.LASTBLT$ -> AT_FIRST.TEXT_OFFSET = POFFC( S_D.D$, S_D.LASTBLT$ )
             15345                           ;
      442    15346    3                  IF S_D.IFSPEC$ ~= ADDR(NIL)
      443    15347    3                  THEN S_D.LASTBLT$ -> AT_FIRST.IF_OFFSET = S_D.IFSPEC$ -> POB.CPOS;
      444    15348    3                  IF SEMI_OFFSET ~= 0
      445    15349    3                  THEN S_D.LASTBLT$ -> AT_FIRST.ATT_OFFSET = SEMI_OFFSET + 1;
      446    15350    3                  ATT_SIZE = S_D.NCHARS;
      447    15351    3                  S_D.LASTBLT$ -> AT_FIRST.TEXT_SIZE = ATT_SIZE ;
      448    15352    3                  ATTEXT$ = S_D.D$;
      449    15353    3                  CALL DDD$BUMP_D$( (S_D.NCHARS+3)/4 ) ALTRET( USERRERR );
      450    15354    3                  ATTEXT$ -> CHAR$ATT = S_D.INPUT;
      451    15355    3                  S_D.LASTBLT$ -> AT_FIRST.LENGTH = POFFW( S_D.D$, S_D.LASTBLT$ );
      452    15356    3                  S_D.VARNEXT$ = S_D.D$;
      453    15357    3                  S_D.FIXCOM.TAL( S_D.STORED ) = S_D.LASTBLT$ -> AT_FIRST.LENGTH;
      454    15358    3                  IF TRAIL_SEMI
      455    15359    3                  THEN GOTO PARSMORE;
      456    15360    3                END;                       /* Stored command */
      457    15361    2             ELSE IF NC$ -> POB.CODE = 56 /* C@DIRECT_CMD */
      458    15362    3                  THEN DO;                 /* Direct command */
      459    15363    3                       NCMD$ = NC$ -> POB.SUBLK$( 0 );
      460    15364    3                       S_D.NCMD$ = NCMD$;
      461    15365    3                       CALL SET_TRAIL_SEMI;
      462    15366    3                       IF TRAIL_SEMI
      463    15367    3                       THEN GOTO UDERNC;   /* Continuation */
      464    15368    3                       CALL SET_IF_SEMI;
      465    15369    3                       CALL ATTDIR_INIT ALTRET( USERRERR );
      466    15370    3                       TEMPCODE = NCMD$ -> POB.CODE;
      467    15371    3                       IF S_D.RUM_SKIP
PL6.E3A0      #001=DDS$SCAN File=DUS$SCAN.:E05TSI                                TUE 07/29/97 15:01 Page:15   
      468    15372    3                       THEN IF NOT (
      469    15373    3                              ( TEMPCODE = 72 ) OR /* C_RUM */
      470    15374    3                              ( TEMPCODE = 42 ) OR /* C_READ */
      471    15375    3                              ( TEMPCODE = 39 ) OR /* C_QUIT */
      472    15376    3                              ( TEMPCODE = 11 ) OR /* C_GOTO */
      473    15377    3                              ( TEMPCODE = 58 ) ) /* C_ALIB */
      474    15378    3                            THEN GOTO USERSK;
      475    15379    3                       CALL DDS$BLD( TEMPCODE ) ALTRET( USERRERR );
      476    15380    3                       IF SEMI_OFFSET ~= 0
      477    15381    4                       THEN DO;
      478    15382    4                            S_D.DIRECT_TEXT = SUBSTR( S_D.INPUT, SEMI_OFFSET + 1 );
      479    15383    4                            S_D.DIRECT_SIZE = S_D.NCHARS - SEMI_OFFSET;
      480    15384    4                            S_D.DIRECT_OFF = 0;
      481    15385    4                          END;
      482    15386    3                     END;                  /* Direct command */
      483    15387    2                  ELSE IF NC$ -> POB.CODE = 23 /* C_COMMENTS */
      484    15388    3                       THEN DO;            /* Command is comments only */
      485    15389    3                            IF S_D.RUM
      486    15390    3                            THEN CALL DUA$RUM_COMM;
      487    15391    3                            ELSE IF SCAN1
      488    15392    3                                 THEN GOTO USERNU;
      489    15393    3                            GOTO PARSMORE;
      490    15394    3                          END;             /* Command is comments only */
      491    15395    2                       ELSE GOTO UDERR1;   /* Unknown code returned */
      492    15396    2           END;                            /* Initial stored or direct command */
      493    15397    2        ELSE DO;                           /* Continuation to a stored command */
      494    15398    2             XUG_GETCMD.NODES$ = ADDR( D_CCMDS );
      495    15399    2             XUG_GETCMD.PROMPT_=VECTOR(SUBSTR(ADDR(S_D.PROMPT)->CHAR32,0,S_D.
             15399                      PROMPT_SIZE));
      496    15400    2             XUG_GETCMD.TEXT_ = VECTOR(NIL);
      497    15401    2             CALL CXG$GETCMD ( XUG_GETCMD ) ALTRET( USERR0A );
      498    15402    2             NC$ = XUG_GETCMD.OUT$ -> POB.SUBLK$( 0 );
      499    15403    2             NCMD$ = NC$ -> POB.SUBLK$( 0 );
      500    15404    2             S_D.NCMD$ = NCMD$;
      501    15405    2             ATT_SIZE = S_D.NCHARS;
      502    15406    2             ATTEXT$ = PINCRC( S_D.LASTBLT$, S_D.LASTBLT$ -> AT_FIRST.TEXT_OFFSET + S_D
             15406                      .LASTBLT$ -> AT_FIRST.TEXT_SIZE );
PL6.E3A0      #001=DDS$SCAN File=DUS$SCAN.:E05TSI                                TUE 07/29/97 15:01 Page:16   
      503    15407    2             S_D.D$ = S_D.VARNEXT$;
      504    15408    2             CALL DDD$BUMP_D$(
      505    15409    2               ((S_D.LASTBLT$ -> AT_FIRST.TEXT_SIZE + ATT_SIZE + 3)/4) -
      506    15410    2               ((S_D.LASTBLT$ -> AT_FIRST.TEXT_SIZE + 3)/4)
      507    15411    2               ) ALTRET( USERRERR );
      508    15412    2             S_D.LASTBLT$ -> AT_FIRST.TEXT_SIZE = S_D.LASTBLT$ -> AT_FIRST.TEXT_SIZE +
             15412                      ATT_SIZE;
      509    15413    2             ATTEXT$ -> CHAR$ATT = S_D.INPUT;
      510    15414    2             S_D.LASTBLT$ -> AT_FIRST.LENGTH = POFFW( S_D.D$, S_D.LASTBLT$ );
      511    15415    2             S_D.VARNEXT$ = S_D.D$;
      512    15416    2             S_D.FIXCOM.TAL( S_D.STORED ) = S_D.LASTBLT$ -> AT_FIRST.LENGTH;
      513    15417    2             CALL SET_TRAIL_SEMI;
      514    15418    2             IF TRAIL_SEMI
      515    15419    2             THEN GOTO PARSMORE;
      516    15420    2           END;                            /* Continuation to a stored command */
      517    15421    1        IF S_D.STORED=0
      518    15422    1        THEN RETURN;
      519    15423        /* SET NEW LAST COMMAND, IF APPROPRIATE */
      520    15424    1        IF ( S_D.STORED > S_D.FIXLAST )
      521    15425    1        THEN S_D.FIXLAST = S_D.STORED;
      522    15426    1        IF SCAN1
      523    15427    1        THEN RETURN;
      524    15428    1        ELSE GOTO START;
      525    15429        /**/
      526    15430        /*D* ERROR ENCOUNTERED DURING COMMAND BUILD. PRINT APPROPRIATE
      527    15431             ERROR MESSAGE, RELEASE ANY MEMORY ACQUIRED FROM FIXCOM/VARCOM,
      528    15432             AND START OVER AGAIN. */
      529    15433        /**/
      530    15434    1   USERR0A:
      531    15435    1        IF XUG_GETCMD.ERR#.CODE# = %E$SYNERR
      532    15436    2        THEN DO;
      533    15437    2             IF S_D.RUM_COMMAND AND S_D.GHOST1
      534    15438    2             THEN S_D.RUM_SKIP = '1'B;
      535    15439    2             S_D.RUM_ERRORS = S_D.RUM_ERRORS + 1;
      536    15440    2             S_D.RUM_TOTAL_ERRORS = S_D.RUM_TOTAL_ERRORS + 1;
      537    15441    2             GOTO PARSMORE;
      538    15442    2           END;
PL6.E3A0      #001=DDS$SCAN File=DUS$SCAN.:E05TSI                                TUE 07/29/97 15:01 Page:17   
      539    15443    1   USERR0:
      540    15444    1        IF XUG_GETCMD.ERR#.CODE# = %E$SYNERR /* %E$SYNERR */
      541    15445    2        THEN DO;
      542    15446    2             IF MAERR ~= 0
      543    15447    3             THEN DO;
      544    15448    3                  S_D.ERROR = MAERR;
      545    15449    3                  S_D.ERROR_SYM$ = MAERR$;
      546    15450    3                  S_D.ERROR_HICHAR = MACHAR;
      547    15451    3                END;
      548    15452    3             ELSE DO;
      549    15453    3                  IF S_D.RUM_COMMAND AND S_D.GHOST1
      550    15454    3                  THEN S_D.RUM_SKIP = '1'B;
      551    15455    3                END;
      552    15456    2             XUG_GETCMD.ERR_CODE = XUG_GETCMD.ERR#;
      553    15457    2             XUG_GETCMD.DCB_PARAM# = D_M$DO#;
      554    15458    2             CALL CXG$ERRPTR (XUG_GETCMD);
      555    15459    2             CALL CXG$ERRMSG (XUG_GETCMD);
      556    15460    2           END;
      557    15461    2        ELSE DO;
      558    15462    2             XUG_GETCMD.DCB_PARAM# = D_M$DO#;
      559    15463    2             XUG_GETCMD.ERR_CODE = XUG_GETCMD.ERR#;
      560    15464    2             CALL CXG$ERRMSG (XUG_GETCMD);
      561    15465    2           END;
      562    15466    1        S_D.RUM_ERRORS = S_D.RUM_ERRORS + 1;
      563    15467    1        S_D.RUM_TOTAL_ERRORS = S_D.RUM_TOTAL_ERRORS + 1;
      564    15468    1        GOTO TRY_AGAIN;
      565    15469    1   USERR1: S_D.ERROR = 12; GOTO USERRERR; /* E@UERR1 */
      566    15470    1   UDERR1: S_D.ERROR = 501; GOTO USERRERR; /* E@DERR1 */
      567    15471    1   UDERNC: S_D.ERROR = 136; GOTO USERRERR; /* E@SCAN1_CONT */
      568    15472    1   USERSY: S_D.ERROR = 53; GOTO USERRERR; /* E@SYNTAX */
      569    15473    1   USERPA: S_D.ERROR = 115; GOTO USERRERR; /* E@NOT_IN_PATCH */
      570    15474    1   USERNDE: S_D.ERROR = 125; GOTO USERRERR; /* E@NOTDELTA */
      571    15475    1   USERNU: S_D.ERROR = 135; GOTO USERRERR; /* E@NULLCMD */
      572    15476    1   USERSK: S_D.ERROR = 224; GOTO USERRERR; /* E@RUMSKIP */
      573    15477    1   USERR7: S_D.ERROR = 18; GOTO USERRERR; /* E@UERR7 */
      574    15478    1   USERRERR:
      575    15479    1        IF SCAN2
PL6.E3A0      #001=DDS$SCAN File=DUS$SCAN.:E05TSI                                TUE 07/29/97 15:01 Page:18   
      576    15480    1        THEN S_D.MACTIVE = S_D.REMACTIVE;
      577    15481    1        ELSE S_D.MACTIVE = '0'B;
      578    15482    1        IF SCAN1 AND S_D.ERROR = 135 /* E@NULLCMD */
      579    15483    2        THEN DO;                           /* Nothing! */
      580    15484    2           END;
      581    15485    1        ELSE CALL DDE$ERROR;
      582    15486
      583    15487    1   SKIP_ERROR:;
      584    15488    1        IF S_D.STORED ~= 0
      585    15489    1        THEN IF S_D.FIXCOM.CMD(S_D.STORED) ~= 0
      586    15490    2             THEN DO;            /* RELEASE MEMORY FROM VARCOM, & FIXCOM SLOT */
      587    15491    2                  S_D.VARNEXT$ = PINCRW(S_D.VARNEXT$,-S_D.FIXCOM.TAL(S_D.STORED));
      588    15492    2                  S_D.FIXCOM.CMD(S_D.STORED) = 0;
      589    15493    2                END;
      590    15494        /* TRY AGAIN */
      591    15495    1   TRY_AGAIN:;
      592    15496    1        IF SCAN1 OR ( SCAN2 AND NOT S_D.MACTIVE )
      593    15497    1        THEN ALTRETURN;
      594    15498    1        ELSE GOTO START;
      595    15499        %EJECT;
PL6.E3A0      #001=DDS$SCAN File=DUS$SCAN.:E05TSI                                TUE 07/29/97 15:01 Page:19   
      596    15500        /*F* NAME: DDS$BLD_WHEN
      597    15501             PURPOSE: TO BUILD THE WHEN COMMAND.
      598    15502             DESCRIPTION: BUILDS THE WHEN STORED COMMAND "FIRST ATTACHMENT"
      599    15503             IN VARCOM. SETS UP THE FIELDS IN THE FIXCOM SLOT. BUILDS THE
      600    15504             OPTIONAL BYPASS COUNT (#) AND IFSPEC FIELDS IN THE FIRST
      601    15505             ATTACHMENT. EVALUATES & BUILDS THE POSITION. RETURNS IF BUILD
      602    15506             IS SUCCESSFUL, ELSE ALTRETURNS. */
      603    15507        /*D* NAME: DDS$BLD_WHEN
      604    15508             INTERFACE:
      605    15509             ENVIRONMENT: DDS$SCAN ACTIVE.
      606    15510             INPUT: S_D.STORED - COMMAND ID.
      607    15511                    NCMD$ - POINTER TO N_WHEN NODE.
      608    15512             OUTPUT: S_D.D$ - POINTER TO NEXT FREE WORD IN VARCOM.
      609    15513             SCRATCH: LOCAL AUTO ONLY
      610    15514             DESCRIPTION: BUILDS THE WHEN STORED COMMAND "FIRST ATTACHMENT"
      611    15515             IN VARCOM. SETS UP THE FIELDS IN THE FIXCOM SLOT. BUILDS THE
      612    15516             OPTIONAL BYPASS COUNT (#) AND IFSPEC FIELDS IN THE FIRST
      613    15517             ATTACHMENT. EVALUATES & BUILDS THE POSITION. RETURNS IF BUILD
      614    15518             IS SUCCESSFUL, ELSE ALTRETURNS. */
      615    15519                                                /**/
      616    15520    1   DDS$BLD_WHEN: PROC ALTRET;
      617    15521                                                /**/
      618    15522    2   DCL IXX SBIN;
      619    15523    2   DCL IXXX SBIN;
      620    15524    2   DCL UBIN36 UBIN(36) BASED;
      621    15525    2   DCL TCODE SBIN;
      622    15526    2   DCL TCODEC UBIN;
      623    15527    2   DCL NCC$ PTR;
      624    15528    2   DCL L$ PTR;
      625    15529    2   DCL S1$ PTR;
      626    15530    2   DCL S2$ PTR;
      627    15531    2   DCL CHAR22 CHAR(22) BASED;
      628    15532    2   DCL BB$ PTR;
      629    15533    2   DCL SIZE UBIN;
      630    15534    2   DCL WOFF UBIN;
      631    15535    2   DCL SILENT BIT(1) ALIGNED;
      632    15536    2   DCL INACTIVE BIT(1) ALIGNED;
PL6.E3A0      #001=DDS$SCAN File=DUS$SCAN.:E05TSI                                TUE 07/29/97 15:01 Page:20   
      633    15537    2   DCL 1 BUFF$ER BASED ALIGNED,
      634    15538    2         2 * CHAR( TCODEC );
      635    15539    2   DCL WHEN$ PTR;
      636    15540    2   DCL DDK$EVAL ENTRY(6) ALTRET;
      637    15541    2   DCL DDK$GETWVAL ENTRY(6) ALTRET;
      638    15542        %WHEN_FIRST (NAME=WHEN$CMD,STCLASS="BASED(LASTBLT$)");
      639    15579        %FPRG$CONTEXT;
      640    15642                                                /**/
      641    15643        /*   IF B$JIT.UNAME = '350COHEN'
      642    15644             THEN DO;
      643    15645                  S_D.ERROR = E@WHENCOHEN;
      644    15646                  GOTO ALTRT;
      645    15647                END;  */
      646    15648    2        IF S_D.ONE_TO_TWO.EXEC_DOMAIN = %L6
      647    15649    3        THEN DO;
      648    15650    3             S_D.ERROR = 331;  /* E@CMDNOTSUPPORT */
      649    15651    3             GOTO ALTRT;
      650    15652    3           END;
      651    15653        /*   IF S_D.FPRG AND S_D.CURRENT_FPRG_CONTEXT$ ~= ADDR(NIL)
      652    15654             THEN DO;
      653    15655                  IF S_D.CURRENT_FPRG_CONTEXT$ -> FPRG$CONTEXT.INTERPRETIVE
      654    15656                  THEN DO;
      655    15657                       S_D.ERROR = E@NOT_INTERPRETIVE;
      656    15658                       GOTO ALTRT;
      657    15659                     END;
      658    15660                END;
      659    15661             ELSE IF S_D.FPRG AND S_D.CURRENT_FPRG_CONTEXT$ = ADDR(NIL)
      660    15662                  THEN DO;
      661    15663                       S_D.ERROR = E@DELBUG;
      662    15664                       GOTO ALTRT;
      663    15665                     END; */
      664    15666    2        SILENT = '0'B;
      665    15667    2        LASTBLT$ = S_D.LASTBLT$;
      666    15668    2        INACTIVE = '0'B;
      667    15669    3        DO IXX = 0 TO NCMD$ -> POB.NSB - 1;
      668    15670    3             NCC$ = NCMD$ -> POB.SUBLK$( IXX ); /* GET POINTER TO NEXT LEVEL NODE */
      669    15671    3             TCODE = NCC$ -> POB.CODE;     /* PICK UP CODE */
PL6.E3A0      #001=DDS$SCAN File=DUS$SCAN.:E05TSI                                TUE 07/29/97 15:01 Page:21   
      670    15672    3             L$ = S_D.D$;
      671    15673    3             IF ( TCODE = 38 )      /* VREF_CODE */
      672    15674    4             THEN DO;
      673    15675        /*D* Build WHEN vref data descriptor in fixed command buffer (DIRCOM) so
      674    15676             that default schema is setup correctly before building IFSPEC.
      675    15677             Copy WHEN vref data descriptor to stored command buffer (VARCOM)
      676    15678             after IFSPEC is built. */
      677    15679    4                  CALL WHEN_INIT ALTRET( ALTRT );
      678    15680    4                  CALL DDS$ATTDIRA( SIZEW( WHEN$CMD ), 67 ) ALTRET( ALTRT );
             15680                           /* C_WHEN */
      679    15681    4                  S1$ = S_D.D$;
      680    15682    4                  CALL DDS$VREFCOM( NCC$ ) ALTRET( ALTRT );
      681    15683    4                  VCPOS = NCC$ -> POB.SUBLK$(0) -> POB.CPOS;
      682    15684    4                  WOFF = POFFW(S_D.D$, S_D.DESC$) + SIZEW(WHEN$CMD);
      683    15685    4                  S2$ = S_D.D$;
      684    15686    4                  CALL DDS$SET_Q2D;
      685    15687    4                  CALL STORED_INIT ALTRET( ALTRT );
      686    15688    4                  CALL DDS$STOREDA( SIZEW( WHEN$CMD ), 67 ) ALTRET( ALTRT );
      687    15689    4                  L$ = S_D.D$;
      688    15690    4                  TCODEC = POFFC( S2$, S1$ );
      689    15691    4                  TCODE = TCODEC / LENGTHC( TCODEC );
      690    15692    4                  S_D.FIXCOM.CDF( S_D.STORED ) = POFFW( L$, S_D.LASTBLT$ );
             15692                           /* Offset to WHEN vref */
      691    15693    4                  S_D.FIXCOM.SILENT( S_D.STORED ) = SILENT;
      692    15694    4                  S_D.FIXCOM.INACTIVE( S_D.STORED ) = INACTIVE;
      693    15695    4                  WHEN$CMD.OVALUE$ = ADDR( NIL );
      694    15696    4                  WHEN$CMD.U.CONST_OFFSET = WOFF;
      695    15697    4                  CALL DDD$BUMP_D$( TCODE ) ALTRET( ALTRT );
      696    15698    4                  L$ -> BUFF$ER = S1$ -> BUFF$ER;
      697    15699    4                  S_D.DESC$ = L$;
      698    15700    4                  CALL DDK$EVAL (WHEN$CMD.ADDRESS, WHEN$CMD.SEG, WHEN$CMD.DESC#,
      699    15701    4                    WHEN$CMD.NOT_IS, WHEN$CMD.BOFF, WHEN$CMD.BSIZE) ALTRET(ALTRT);
      700    15702    4                  IF L$ -> ZITEM.DTYP = %RANG1_DTYP
      701    15703    4                  THEN WHEN$CMD.BSIZE = WHEN$CMD.BSIZE * (S_D.ARRAY.HIGH + 1);
      702    15704    5                  IF WHEN$CMD.BSIZE > SIZEB(S_D.OUTPUT) THEN DO;
      703    15705    5                       WHEN$CMD.BSIZE = SIZEB(S_D.OUTPUT);
      704    15706    5                       S_D.OUTPUT = 'When Variable Too Big - 2048 Bytes Used.';
PL6.E3A0      #001=DDS$SCAN File=DUS$SCAN.:E05TSI                                TUE 07/29/97 15:01 Page:22   
      705    15707    5                       CALL DDQ$WRITE(ADDR(S_D.OUTPUT), SIZEC(
             15707                                'When Variable Too Big - 2048 Bytes Used.'));
      706    15708    5                     END;
      707    15709    4                  IF WHEN$CMD.NOT_IS
      708    15710    5                  THEN DO;
      709    15711    5                       IF WHEN$CMD.SEG = 3
      710    15712    6                       THEN DO;
      711    15713    6                            IF WHEN$CMD.DESC# - 3 < 1 OR
      712    15714    6                              WHEN$CMD.DESC# - 3 > 8
      713    15715    7                            THEN DO;
      714    15716    7                                 S_D.ERROR = 208; /* E@WHEN_NOTIS_OR_DS */
      715    15717    7                                 GOTO ALTRT;
      716    15718    7                               END;
      717    15719    6                          END;
      718    15720    6                       ELSE DO;
      719    15721    6                            S_D.ERROR = 208; /* E@WHEN_NOTIS_OR_DS */
      720    15722    6                            GOTO ALTRT;
      721    15723    6                          END;
      722    15724    5                     END;
      723    15725    4                  WHEN$CMD.START_PAGE = WHEN$CMD.ADDRESS/1024;
      724    15726    4                  WHEN$CMD.END_PAGE = (WHEN$CMD.ADDRESS + (WHEN$CMD.BOFF + WHEN$CMD.
             15726                           BSIZE - 1)/36)/1024;
      725    15727    4                  IF ( NOT L$ -> ZITEM.FLAGS.MDSE.M )
      726    15728    5                  THEN DO;
      727    15729    5                       S_D.ERROR = 42; /* E@NOMOD */
      728    15730    5                       GOTO ALTRT;
      729    15731    5                     END;
      730    15732    4                  IF ( NOT L$ -> ZITEM.FLAGS.MDSE.E ) AND ( L$ -> ZITEM.FLAGS.ADDREXP )
      731    15733    5                  THEN DO; /* CAN'T HAVE NON-MODIFYABLE SPECIAL SYMBOL IN EXPRESSION */
      732    15734    5                       S_D.ERROR = 87; /* E@EXPNOTVALID */
      733    15735    5                       GOTO ALTRT;
      734    15736    5                     END;
      735    15737    4                  TCODEC = TCODE;
      736    15738    4                  TCODE = S_D.UNODE.USENODE;
      737    15739    4                  WHEN$CMD.NODE = TCODE;
      738    15740    4                  IF S_D.OVERLAID
      739    15741    4                  THEN IF NOT S_D.B$TREE$ -> B$NODE.FLGS.NOW_IN( TCODE )
PL6.E3A0      #001=DDS$SCAN File=DUS$SCAN.:E05TSI                                TUE 07/29/97 15:01 Page:23   
      740    15742    4                       THEN S_D.FIXCOM.NOT_IN( S_D.STORED ) = '1'B;
      741    15743    4                END;
      742    15744    3             ELSE IF ( TCODE >= 1 ) AND ( TCODE <= 6 ) /* C@GREATER, C@EQUALS */
      743    15745    3                  THEN WHEN$CMD.WCOND = TCODE;
      744    15746    3                  ELSE IF ( TCODE = 17 ) /* C@CNSNT_REF */
      745    15747    4                       THEN DO;
      746    15748    4                            CALL DDD$BUMP_D$( SIZEW( IF$CONST ) ) ALTRET( ALTRT );
      747    15749    4                            CALL DDS$CNSNT( NCC$, L$ -> TEXT$C, TCODE ) ALTRET( ALTRT )
             15749                                     ;
      748    15750    4                            WHEN$CMD.WCTYPE = TCODE;
      749    15751    4                          END;
      750    15752    3                       ELSE IF ( TCODE = 42 ) /* C@N_AT11 */
      751    15753    4                            THEN DO;       /* N_WHEN11 - BYPASS COUNT */
      752    15754    4                                 NCC$ = NCC$ -> POB.SUBLK$( 0 );
             15754                                          /* POINT TO TEXT ( DECIMAL LEXEME ) */
      753    15755    4                                 CALL DDS$DECIMAL( NCC$, TCODE ) ALTRET( ALTRT );
             15755                                          /* GET THE NUMBER */
      754    15756    4                                 WHEN$CMD.BYPASS_COUNT = TCODE;
      755    15757    4                                 WHEN$CMD.CURRENT_COUNT = TCODE;
      756    15758    4                               END;
      757    15759    3                            ELSE IF ( TCODE = 100 ) /* C@SILENT */
      758    15760    3                                 THEN SILENT = '1'B;
      759    15761    3                                 ELSE IF ( TCODE = 101 ) /* C@INACTIVE */
      760    15762    3                                      THEN INACTIVE = '1'B;
      761    15763    4                                      ELSE DO; /* UNKNOWN COMMAND */
      762    15764    4                                           S_D.ERROR = 501; /* E@DERR1 */
      763    15765    4                                           GOTO ALTRT; /* SPLIT */
      764    15766    4                                         END;
      765    15767    3           END;                            /* END "DO IX" */
      766    15768        /*D* Duplicate WHEN breakpoints are allowed */
      767    15769    2        TCODEC = WHEN$CMD.BSIZE;
      768    15770    2        WHEN$ = ADDR(S_D.OUTPUT);
      769    15771    2        CALL DDK$GETWVAL (WHEN$, WHEN$CMD.ADDRESS, WHEN$CMD.BOFF,
      770    15772    2          WHEN$CMD.BSIZE, WHEN$CMD.DESC#, WHEN$CMD.NOT_IS) ALTRET(S_FAULT);
      771    15773    2        RETURN;
      772    15774                                                /**/
      773    15775    2   ALTRT:
PL6.E3A0      #001=DDS$SCAN File=DUS$SCAN.:E05TSI                                TUE 07/29/97 15:01 Page:24   
      774    15776    2        ALTRETURN;
      775    15777    2   S_FAULT: ;
      776    15778    2        S_D.ERROR = 237;          /* E@CANTACCESS */
      777    15779    2        CALL DDE$ERROR;
      778    15780    2        S_D.OUTPUT = 'Data Breakpoint ';
      779    15781    2        BB$ = PINCRC(ADDR(S_D.OUTPUT), SIZEC('Data Breakpoint '));
      780    15782    2        CALL DDR$BINTXT(BB$, S_D.STORED, %UINT_FMT, SIZE);
      781    15783    2        BB$ = PINCRC(BB$, SIZE);
      782    15784    2        BB$ -> CHAR22 = ' set inactive by DELTA';
      783    15785    2        CALL DDQ$WRITE(ADDR(S_D.OUTPUT), SIZEC('Data Breakpoint ')+22+SIZE);
      784    15786    2        S_D.FIXCOM.INACTIVE(S_D.STORED) = '1'B;
      785    15787    2        RETURN;
      786    15788                                                /**/
      787    15789    2   END DDS$BLD_WHEN;
      788    15790        %EJECT;
PL6.E3A0      #001=DDS$SCAN File=DUS$SCAN.:E05TSI                                TUE 07/29/97 15:01 Page:25   
      789    15791        /*D* NAME: SET_TRAIL_SEMI
      790    15792             CALL: CALL SET_TRAIL_SEMI
      791    15793             INPUT: XUG_GETCMD.OUT$ - Pointer to root node.
      792    15794             OUTPUT: TRAIL_SEMI - Set if commands have a trailing semicolon.
      793    15795             DESCRIPTION: Determines if there is a trailing SEMICOLON node.
      794    15796                          If so sets TRAIL_SEMI, else resets TRAIL_SEMI. */
      795    15797
      796    15798    1   SET_TRAIL_SEMI: PROC;
      797    15799
      798    15800    2   DCL NSB SBIN;
      799    15801    2   DCL NC$ PTR;
      800    15802
      801    15803    2        TRAIL_SEMI = '0'B;
      802    15804        /* Point to last C@STORED or C@DIRECT command */
      803    15805    2        NC$ = XUG_GETCMD.OUT$ -> POB.SUBLK$( XUG_GETCMD.OUT$ -> POB.NSB - 1 );
      804    15806        /* Point to last C_COMMAND */
      805    15807    2        NC$ = NC$ -> POB.SUBLK$( NC$ -> POB.NSB - 1 );
      806    15808        /* Get number of subnodes from C_COMMAND */
      807    15809    2        NSB = NC$ -> POB.NSB - 1;
      808    15810    2        IF NSB >= 0
      809    15811    3        THEN DO;
      810    15812        /* The last subnode may be a SEMICOLON */
      811    15813    3             NC$ = NC$ -> POB.SUBLK$( NSB );
      812    15814    3             IF NC$ -> POB.CODE = 93 /* C@SEMICOLON */
      813    15815    3             THEN TRAIL_SEMI = '1'B;
      814    15816    3           END;
      815    15817
      816    15818    2        RETURN;
      817    15819
      818    15820    2   END SET_TRAIL_SEMI;
      819    15821        %EJECT;
PL6.E3A0      #001=DDS$SCAN File=DUS$SCAN.:E05TSI                                TUE 07/29/97 15:01 Page:26   
      820    15822        /*D* NAME: SET_IF_SEMI
      821    15823             CALL: CALL SET_IF_SEMI;
      822    15824             INPUT: NCMD$ - Pointer to DELTA command node.
      823    15825             OUTPUT: SEMI_OFFSET - Offset to semicolon, 0 if none.
      824    15826                     S_D.IFSPEC$ - Address of IFSPEC node, NIL if none.
      825    15827             DESCRIPTION: Determines if there is a SEMICOLON node. If so,
      826    15828                          remembers the offset to it in SEMI_OFFSET, and
      827    15829                          decrements the number of subnodes on this command.
      828    15830                          Does the same with IFSPEC. RETURNs when done. */
      829    15831
      830    15832    1   SET_IF_SEMI: PROC;
      831    15833
      832    15834    2   DCL NSB SBIN;
      833    15835    2   DCL NODE$ PTR;
      834    15836
      835    15837    2        NSB = NCMD$ -> POB.NSB - 1;
      836    15838    2        SEMI_OFFSET = 0;
      837    15839    2        S_D.IFSPEC$ = ADDR(NIL);
      838    15840    3        DO WHILE ( NSB >= 0 );
      839    15841    3             NODE$ = NCMD$ -> POB.SUBLK$( NSB );
      840    15842    3             IF NODE$ -> POB.CODE = 93 /* C@SEMICOLON */
      841    15843    3             THEN SEMI_OFFSET = NODE$ -> POB.CPOS;
      842    15844    3             ELSE IF NODE$ -> POB.CODE = 11 /* C@IFSPEC */
      843    15845    3                  THEN S_D.IFSPEC$ = NODE$;
      844    15846    3                  ELSE RETURN;             /* No SEMICOLON or IFSPEC */
      845    15847    3             NCMD$ -> POB.NSB = NSB;
      846    15848    3             NSB = NSB - 1;
      847    15849    3           END;
      848    15850
      849    15851    2        RETURN;
      850    15852
      851    15853    2   END SET_IF_SEMI;
      852    15854        %EJECT;
PL6.E3A0      #001=DDS$SCAN File=DUS$SCAN.:E05TSI                                TUE 07/29/97 15:01 Page:27   
      853    15855        /*F* NAME: ATTDIR_INIT
      854    15856             PURPOSE: TO SETUP BEFORE BUILDING A COMMAND IN THE DIRECT
      855    15857             COMMAND BUFFER.
      856    15858             DESCRIPTION: IF AN ID WAS SPECIFIED THE COMMAND IS REJECTED.
      857    15859             IF NOT WORKING ON A STORED COMMAND THE NUMBER OF COMMANDS
      858    15860             SPECIFIED MUST BE =1. THE BUILD BUFFER IS SET TO VARCOM IF WORKING
      859    15861             ON A STORED COMMAND; FOR A DIRECT COMMAND IT IS SET TO DIRCOM.
      860    15862             IN EITHER CASE, THE BUILD BUFFER MUST NOT BE EMPTY. */
      861    15863        /*D* NAME: ATTDIR_INIT
      862    15864             CALL: CALL ATTDIR_INIT
      863    15865             INTERFACE:
      864    15866             ENVIRONMENT:
      865    15867             INPUT:
      866    15868             OUTPUT: S_D.DESC$ - START OF BUILD BUFFER
      867    15869                     S_D.D$ - START OF BUILD BUFFER
      868    15870                     S_D.LASTBLT$ - START OF BUILD BUFFER
      869    15871                     LASTBLT$ - SAME AS S_D.LASTBLT$
      870    15872             SCRATCH:
      871    15873             DESCRIPTION: IF AN ID WAS SPECIFIED THE COMMAND IS REJECTED.
      872    15874             IF NOT WORKING ON A STORED COMMAND THE NUMBER OF COMMANDS
      873    15875             SPECIFIED MUST BE =1. THE BUILD BUFFER IS SET TO VARCOM IF WORKING
      874    15876             ON A STORED COMMAND; FOR A DIRECT COMMAND IT IS SET TO DIRCOM.
      875    15877             IN EITHER CASE, THE BUILD BUFFER MUST NOT BE EMPTY. */
      876    15878        /**/
      877    15879    1   ATTDIR_INIT: PROC ALTRET;
      878    15880        /**/
      879    15881    2   DCL IXX SBIN;                           /* TEMP INDEX */
      880    15882    2   DCL V UBIN;
      881    15883                                                /**/
      882    15884    2        IF S_D.STORED~=0
      883    15885    3        THEN DO;                           /* STORED COMMAND */
      884    15886    3             S_D.DESC$=S_D.VARNEXT$;
      885    15887    3             S_D.DESCL$ = S_D.VARCOM_HIGH$;
      886    15888    3           END;
      887    15889        /* NON-STORED COMMAND */
      888    15890    3        ELSE DO;
      889    15891    3             S_D.DESC$ = ADDR( S_D.DIRCOM );
PL6.E3A0      #001=DDS$SCAN File=DUS$SCAN.:E05TSI                                TUE 07/29/97 15:01 Page:28   
      890    15892    3             S_D.DESCL$ = PINCRW( ADDR( S_D.DIRCOM ), SIZEW( S_D.DIRCOM ) );
      891    15893    3           END;
      892    15894        /* CHECK FOR SPACE IN BUILD BUFFER */
      893    15895    2        GOTO CHKSPACE;
      894    15896        /**/
      895    15897    2   WHEN_INIT: ENTRY ALTRET;
      896    15898        /**/
      897    15899    2        S_D.DESC$ = ADDR( S_D.DIRCOM );
      898    15900    2        S_D.DESCL$ = PINCRW( ADDR( S_D.DIRCOM ), SIZEW( S_D.DIRCOM ) );
      899    15901    2        GOTO CHKSPACE;
      900    15902        /**/
      901    15903        %EJECT;
PL6.E3A0      #001=DDS$SCAN File=DUS$SCAN.:E05TSI                                TUE 07/29/97 15:01 Page:29   
      902    15904        /*D* NAME: STORED_INIT
      903    15905             CALL: CALL STORED_INIT
      904    15906             INTERFACE:
      905    15907             ENVIRONMENT:
      906    15908             INPUT:
      907    15909             OUTPUT: S_D.DESC$ - START OF BUILD BUFFER
      908    15910                     S_D.D$ - START OF BUILD BUFFER
      909    15911                     S_D.LASTBLT$ - START OF BUILD BUFFER
      910    15912                     LASTBLT$ - SAME AS S_D.LASTBLT$
      911    15913                     S_D.STORED - STORED COMMAND ID
      912    15914                     TEMPID - SET TO -1 FOR SCAN LOOP
      913    15915             SCRATCH:
      914    15916             DESCRIPTION: IF ALREADY WORKING ON A STORED COMMAND THE COMMAND IS
      915    15917             REJECTED. IF NO ID WAS SPECIFIED THEN FIXCOM IS SEARCHED
      916    15918             FOR AN AVAILABLE SLOT. IF NOT SLOT IS FOUND THEN SET ERROR
      917    15919             CODE & ALTRET. THE STORED COMMAND'S ID IS ASSIGNED TO THE
      918    15920             STORED FLAG. THE BUILD BUFFER IS SET TO VARCOM, AND CHECKED
      919    15921             FOR BEING NOT EMPTY. */
      920    15922        /**/
      921    15923    2   STORED_INIT: ENTRY ALTRET;
      922    15924        /**/
      923    15925        /* MAKE SURE THE STORED COMMAND IS NOT SPECIFIED AS AN ATTACHMENT */
      924    15926    2        IF S_D.RUM OR S_D.ANLZ
      925    15927    3        THEN DO;
      926    15928    3             S_D.ERROR = 125;       /* E@NOTDELTA */
      927    15929    3             ALTRETURN;
      928    15930    3           END;
      929    15931    2        IF S_D.FPRG AND S_D.CURRENT_FPRG_CONTEXT$ -> FPRG$CONTEXT.FANLZ
      930    15932    3        THEN DO;
      931    15933    3             S_D.ERROR = 125;       /* E@NOTDELTA */
      932    15934    3             ALTRETURN;
      933    15935    3           END;
      934    15936        /* CHECK IF ID WAS SPECIFIED */
      935    15937    2        IF TEMPID=-1
      936    15938    3        THEN DO;            /* ID NOT SPECIFIED - TRY TO FIND AN AVAILABLE ONE */
      937    15939    4             DO IXX=1 TO (SIZEW(S_D.FIXCOM)/SIZEW(S_D.FIXCOM(0)))-1;
      938    15940    4                  IF S_D.FIXCOM.CMD(IXX)=0
PL6.E3A0      #001=DDS$SCAN File=DUS$SCAN.:E05TSI                                TUE 07/29/97 15:01 Page:30   
      939    15941    4                  THEN GOTO FOUND;
      940    15942    4                END;
      941    15943                                                /* NO SLOTS AVAILABLE */
      942    15944    3             S_D.ERROR=17;            /* E@UERR6 */
      943    15945    3             ALTRETURN;
      944    15946    3   FOUND:                                  /* FOUND A FREE SLOT IN FIXCOM */
      945    15947    3             S_D.STORED=IXX;
      946    15948    3           END;
      947    15949    3        ELSE DO;                      /* ID SPECIFIED, GET IT & SET STORED FLAG */
      948    15950    3             V = S_D.FIXCOM.CMD( TEMPID );
      949    15951    3             IF V ~= 0
      950    15952    4             THEN DO;       /* IMPLICIT KILL, EVEN IF FURTHER ERROR ENCOUNTERED */
      951    15953    4                  S_D.KILL1 = TEMPID;
      952    15954    4                  CALL INDEX( IXX, BINASC( V ), SKILLT ) ALTRET( GOKILL1 );
      953    15955    5                  DO CASE ( IXX );
      954    15956    5                    CASE ( 0 );
      955    15957    5                       S_D.ONABORT = 0;
      956    15958    5                    CASE ( 1 );
      957    15959    5                       S_D.ONEXIT = 0;
      958    15960    5                    CASE ( 2 );
      959    15961    5                       S_D.ONCALLS = 0;
      960    15962    5                    CASE ( 3 );
      961    15963    5                       S_D.ONNODES = 0;
      962    15964    5                    END;
      963    15965    4   GOKILL1:
      964    15966    4                  IF S_D.FIXCOM.FPRG(TEMPID)
      965    15967    4                  THEN CALL DFA$KILL1('1'B, V, '1'B);
      966    15968    4                  ELSE CALL DDA$KILL1;
      967    15969    4                END;                       /* IMPLICIT KILL */
      968    15970    3             S_D.STORED=TEMPID;
      969    15971    3           END;
      970    15972    2        TEMPID = -1;                       /* RESET FOR SCAN LOOP */
      971    15973        /* INITIALIZE FIXCOM SLOT */
      972    15974    2        S_D.FIXCOM(S_D.STORED) = '0'B;
      973    15975        /* SETUP BUILD BUFFER AS VARCOM */
      974    15976    2        S_D.DESC$=S_D.VARNEXT$;
      975    15977    2        S_D.DESCL$ = S_D.VARCOM_HIGH$;
PL6.E3A0      #001=DDS$SCAN File=DUS$SCAN.:E05TSI                                TUE 07/29/97 15:01 Page:31   
      976    15978                                           /* MAKE SURE BUILD BUFFER IS NOT EMPTY */
      977    15979    2   CHKSPACE:
      978    15980                                                /**/
      979    15981    2        IF S_D.DESC$<S_D.DESCL$
      980    15982    3        THEN DO;                           /* BUFFER NOT EMPTY */
      981    15983    3             S_D.D$ = S_D.DESC$;
      982    15984    3             S_D.LASTBLT$ = S_D.DESC$;
      983    15985    3             LASTBLT$ = S_D.DESC$;
      984    15986    3             RETURN;
      985    15987    3           END;
      986    15988    3        ELSE DO;                           /* BUFFER IS EMPTY */
      987    15989    3             S_D.ERROR = 15;          /* E@UERR4 */
      988    15990    3             ALTRETURN;
      989    15991    3           END;
      990    15992                                                /**/
      991    15993    2   END ATTDIR_INIT;
      992    15994                                                /**/
      993    15995    1   END DDS$SCAN;
      994    15996        %EOD;

PL6.E3A0      #001=DDS$SCAN File=DUS$SCAN.:E05TSI                                TUE 07/29/97 15:01 Page:32   
--  Include file information  --

   DD_SD_M.:E05TOU  is referenced.
   XUH_MACRO_C.:E05TOU  is referenced.
   DD$BASED.:E05TOU  is referenced.
   DD_SRTN_C.:E05TOU  is referenced.
   DD_ACODE_C.:E05TOU  is referenced.
   DD_ICODE_C.:E05TOU  is referenced.
   DD$DITEM.:E05TOU  cannot be made into a system file and is referenced.
   B$OBJECT_C.:E05TOU  is referenced.
   DD_PSUBS_C.:E05TOU  is referenced.
   XU_PERR_C.:E05TOU  is referenced.
   DD_ERR_C.:E05TOU  is referenced.
   XU_SUBS_C.:E05TOU  is referenced.
   CXG_ENTRY.:E05TOU  cannot be made into a system file and is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
   B$JIT.:E05TOU  cannot be made into a system file and is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   DD_SUBS_C.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure DDS$SCAN.

   Procedure DDS$SCAN requires 1552 words for executable code.
   Procedure DDS$SCAN requires 146 words of local(AUTO) storage.

PL6.E3A0      #001=DDS$SCAN File=DUS$SCAN.:E05TSI                                TUE 07/29/97 15:01 Page:33   

 Object Unit name= DDS$SCAN                                   File name= DUS$SCAN.:E05TOU
 UTS= JUL 29 '97 15:01:13.80 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1  RoData even  UTS    104    150  DDS$SCAN
    2   Proc  even  none  1552   3020  DDS$SCAN
    3  RoData even  none    27     33  DDS$SCAN

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     2      0   yes    yes     yes      Std        0  DDS$SCAN
     2      6          yes     yes      Std        0  DDS$SCAN1
     2     15          yes     yes      Std        0  DDS$SCAN2
PL6.E3A0      #001=DDS$SCAN File=DUS$SCAN.:E05TSI                                TUE 07/29/97 15:01 Page:34   

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       0 DUS$POST_EXEC
 yes     yes           Std       2 CXG$INIT
 yes     yes           Std       1 CXG$GETCMD
         yes           Std       3 DUS$SCANREAD
         yes           Std       1 DDS$SUCCESS
 yes     yes           Std       0 DDS$SET_C2D
         yes           Std       0 DDS$PROMPT
         yes           Std       0 DUA$RUM_COMM
 yes     yes           Std       2 DDS$DECIMAL
         yes           Std       0 DDS$PROMPTC
 yes     yes           Std       1 DDS$BLD
 yes     yes           Std       1 CXG$ERRMSG
 yes     yes           Std       1 CXG$ERRPTR
 yes     yes           Std       1 DDD$BUMP_D$
 yes     yes           Std       0 DDS$SET_D2Q
         yes           Std       0 DDE$ERROR
 yes     yes           Std       0 DDS$SET_Q2D
 yes     yes           Std       6 DDK$EVAL
 yes     yes           Std       4 DDS$CNSNT
         yes           Std       2 DDQ$WRITE
 yes     yes           Std       6 DDK$GETWVAL
 yes     yes           Std       2 DDS$ATTDIRA
 yes     yes           Std       2 DDS$VREFCOM
 yes     yes           Std       2 DDS$STOREDA
         yes           Std       4 DDR$BINTXT
         yes           Std       3 DFA$KILL1
         yes           Std       0 DDA$KILL1
                       nStd      0 X66_AUTO_0
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET
                       nStd      0 X66_AALT
PL6.E3A0      #001=DDS$SCAN File=DUS$SCAN.:E05TSI                                TUE 07/29/97 15:01 Page:35   

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                                  B$JIT$                           r    S_D$
     PARSE$                                D_DCMDS                               D_CCMDS
     D_ACMDS                               D_MTREE                               D_XDELTA
     D_ATREE                               D_M$DELT#                             D_M$DO#
     D_PARSIZE                             B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID                                 NULLSID
PL6.E3A0      #001=DDS$SCAN File=DUS$SCAN.:E05TSI                                TUE 07/29/97 15:01 Page:36   


        1        1        /*M* DDS$SCAN DELTA COMMAND SCANNER */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* DMR,PLM=5,IND=5,CSU=3,EXM=0,ECU=3,MOC,DCI=5,CRT=5 */
        8        8        %SET LISTSUB='1'B;
        9        9        /*P* NAME: DDS$SCAN
       10       10             PURPOSE: TO READ, SCAN, & ENCODE INPUT COMMANDS TO DELTA.
       11       11             DESCRIPTION: READS THE COMMAND FROM THE CURRENT INPUT
       12       12             DEVICE. THE COMMAND IS PARSED USING X$PARSE FACILITY.
       13       13             BUILDS STORED COMMAND TABLES FOR STORED COMMANDS. KEEPS
       14       14             PROCESSING STORED COMMANDS UNTIL A DIRECT COMMAND IS
       15       15             ENCOUNTERED. RETURNS TO CALLER WITH THE DIRECT COMMAND
       16       16             BUILT (ENCODED) IN THE DIRECT COMMAND BUFFER.
       17       17             REFERENCE: DELTA FUNCTIONAL SPEC AF Section 17.6 #0065C-0. */
       18       18        %EJECT;
PL6.E3A0      #001=DDS$SCAN File=DUS$SCAN.:E05TSI                                TUE 07/29/97 15:01 Page:37   
       19       19        /*F* NAME: DDS$SCAN
       20       20             PURPOSE: TO READ, SCAN, & ENCODE INPUT COMMANDS TO DELTA.
       21       21             DESCRIPTION: READS THE COMMAND FROM THE CURRENT INPUT
       22       22             DEVICE. THE COMMAND IS PARSED USING X$PARSE FACILITY.
       23       23             BUILDS STORED COMMAND TABLES FOR STORED COMMANDS. KEEPS
       24       24             PROCESSING STORED COMMANDS UNTIL A DIRECT COMMAND IS
       25       25             ENCOUNTERED. RETURNS TO CALLER WITH THE DIRECT COMMAND
       26       26             BUILT (ENCODED) IN THE DIRECT COMMAND BUFFER.
       27       27             REFERENCE: DELTA FUNCTIONAL SPEC AF Section 17.6 #0065C-0. */
       28       28        /*D* NAME: DDS$SCAN
       29       29             CALL: CALL DDS$SCAN;
       30       30             INTERFACE: XUG$GETCMD
       31       31                        DDA$KILL1
       32       32                        DDS$PROMPT
       33       33                        DDS$PROMPTC
       34       34                        DDE$ERROR
       35       35                        DDD$BUMP_D$
       36       36                        DDS$DECIMAL
       37       37                        DDS$STOREDA
       38       38                        DDS$ATTDIRA
       39       39                        DDS$SET_C2D
       40       40                        DDS$SET_D2Q
       41       41                        DDS$SET_Q2D
       42       42                        DDS$VREFCOM
       43       43                        DDS$CNSNT
       44       44                        DUA$RUM_COMM;
       45       45                        D_DCMDS
       46       46             ENVIRONMENT: XDELTA OR USER DELTA.
       47       47             INPUT: IMPLICIT REQUEST FOR DIRECT COMMAND.
       48       48             OUTPUT: DIRECT COMMAND BUILT IN DIRECT COMMAND BUFFER.
       49       49                     STORED COMMANDS ADDED TO STORED OMMAND BUFFERS ALONG
       50       50                     THE WAY.
       51       51             SCRATCH: DDS$PROMPT PLAYS WITH THE INPUT BUFFER.
       52       52                      LOCAL AUTO.
       53       53             DESCRIPTION: READS THE COMMAND FROM THE CURRENT INPUT
       54       54             DEVICE. THE COMMAND IS PARSED USING X$PARSE FACILITY.
       55       55             BUILDS STORED COMMAND TABLES FOR STORED COMMANDS. KEEPS
PL6.E3A0      #001=DDS$SCAN File=DUS$SCAN.:E05TSI                                TUE 07/29/97 15:01 Page:38   
       56       56             PROCESSING STORED COMMANDS UNTIL A DIRECT COMMAND IS
       57       57             ENCOUNTERED. RETURNS TO CALLER WITH THE DIRECT COMMAND
       58       58             BUILT (ENCODED) IN THE DIRECT COMMAND BUFFER.
       59       59             ALTRETS ONLY IF ENTERED AT DDS$SCAN1 & COMMAND
       60       60             COULD NOT BE BUILT. */
       61       61                                                /**/
       62       62        DDS$SCAN: PROC ALTRET;

     62  2 000000   000000 700200 xent  DDS$SCAN     TSX0  ! X66_AUTO_0
         2 000001   000222 000000                    ZERO    146,0

       63       63                                                /**/
       64       64        %INCLUDE DD_SUBS_C;                     /* %SUBS */
       65      335        %INCLUDE CP_6;
       66      416        %INCLUDE B$JIT;
       67      706    1   DCL B$JIT$ PTR SYMREF;
       68      707        %INCLUDE XU_MACRO_C;                    /* GETCMD MACROS */
       69     3813        %INCLUDE CXG_ENTRY;                     /* XUG ENTRY DCLS */
       70     3825        %INCLUDE XU_SUBS_C;                     /* X$PARSE %SUBs */
       71     3917        %INCLUDE DD_ERR_C;                      /* ERROR CODE %SUBS */
       72     4314        %INCLUDE XU_PERR_C;                     /* X$PARSE ERROR CODES */
       73     4505        %INCLUDE DD_PSUBS_C;                    /* SYNTAX TREE %SUBS */
       74     4980        %INCLUDE B$OBJECT_C;                    /* OBJECT LANGUAGE TEMPLATES */
       75     8410        %SUB FIXCOMSIZE="(SIZEW(S_D.FIXCOM)/SIZEW(S_D.FIXCOM(0)))-1";
       76     8411        %XUG_INIT (STCLASS=AUTO);
       77     8824        %XUG_GETCMD (STCLASS=AUTO);
       78     9162    1   DCL TEMPID SBIN;                        /* TEMPORARY CMD ID */
       79     9163    1   DCL NC$ PTR;                            /* CURRENT NODE PTR */
       80     9164    1   DCL NCC$ PTR;                           /* ANOTHER NODE POINTER */
       81     9165    1   DCL NCMD$ PTR;                          /* CURRENT COMMAND NODE PTR */
       82     9166    1   DCL IX SBIN;                            /* COMMAND LOOP INDEX */
       83     9167    1   DCL TEMPCODE SBIN;                      /* TEMP FOR COMMAND CODE */
       84     9168    1   DCL MAERR SBIN;                         /* MACTIVE ERROR CODE */
       85     9169    1   DCL MAERR$ PTR;                         /* MACTIVE ERROR SYMBOL */
       86     9170    1   DCL 1 MAERRTEXTC,                       /* MACTIVE ERROR SYMBOL */
       87     9171    1         2 SIZE UBIN BYTE UNAL,
       88     9172    1         2 TEXT CHAR(63) UNAL;             /* DON'T WORRY ABOUT TRUNCATION */
PL6.E3A0      #001=DDS$SCAN File=DUS$SCAN.:E05TSI                                TUE 07/29/97 15:01 Page:39   
       89     9173    1   DCL MACHAR UBIN;                        /* MACTIVE ERROR HI_CHAR */
       90     9174    1   DCL LASTBLT$ PTR;                       /* =S_D.LASTBLT$, USED AS IMPLIED PTR */
       91     9175    1   DCL SCAN1 BIT(1) ALIGNED;               /* HOW ENTERED FLAG */
       92     9176    1   DCL SCAN2 BIT(1) ALIGNED;               /* Another how entered flag */
       93     9177    1   DCL TRAIL_SEMI BIT(1) ALIGNED;
       94     9178    1   DCL SEMI_OFFSET UBIN;              /* OFFSET TO SEMI_COLON IN PARSED TEXT */
       95     9179    1   DCL ATT_SIZE UBIN;
       96     9180    1   DCL ATTEXT$ PTR;
       97     9181    1   DCL CHAR$ATT CHAR(ATT_SIZE) BASED;
       98     9182    1   DCL CHAR32 CHAR(32) BASED;
       99     9183    1   DCL VCPOS UBIN;                    /* CPOS of VREF for WHEN so SHOW will work */
      100     9184        %INCLUDE DD$DITEM;                      /* DATA DESCRIPTOR STUFF */
       12+    9287             %LIST;
       13+    9288    1        DCL SDD$ PTR;
       14+    9289    1        DCL ZITEM$ PTR;
       15+    9290    1        DCL SDD_L6$ PTR;
       16+    9291    1        DCL ZITEM_L6$ PTR;
      101     9865        %ZITEM;
      102     9937        %B$TREE_TABLE (HDR_NAME=B$TREEHDR,NODE_NAME="B$NODE(0:0)");
      103     9995        %PARSE$OUT (NAME=POB,STCLASS=BASED,NSUBLKS=NSB);
      104    10040        %INCLUDE DD$BASED;                      /* BASED STRUCTURES */
      105    11343        %AT_FIRST;
      106    11371        %ALL_ATTACH;
      107    11386        %TEXT$C;
      108    11391        %IF$CONST;
      109    11429        %FPRG$CONTEXT;
      110    11492        %INCLUDE XUH_MACRO_C;
      111    11576        %INCLUDE DD_SD_M;                       /* "STATIC" DATA */
      112    12912        %S_D;
      113    14230        %VLP_NAME (FPTN=DELTA_NAME,NAME='DELTA',STCLASS=CONSTANT);
      114    14257        %VLP_ACCT (FPTN=DELTA_ACCT,ACCT=':SYS',STCLASS=CONSTANT);
      115    14270
      116    14271        %XUG_INIT (NAME=XUG_INIT_CONSTANT,
      117    14272                   PROCACCT=DELTA_ACCT,
      118    14273                   PROCNAME=DELTA_NAME,
      119    14274                   GOODCMD=NO,
      120    14275                   COMMANDS=YES,
PL6.E3A0      #001=DDS$SCAN File=DUS$SCAN.:E05TSI                                TUE 07/29/97 15:01 Page:40   
      121    14276                   INHIBIT_DO=YES,
      122    14277                   INHIBIT_END=YES,
      123    14278                   ADAPT=NIL,
      124    14279                   SYNTAX=YES,
      125    14280                   SPELLING=YES,
      126    14281                   POST_EXEC=DUS$POST_EXEC,
      127    14282                   STCLASS=CONSTANT);
      128    14695
      129    14696        %XUG_GETCMD (NAME=XUG_GETCMD_CONSTANT,
      130    14697                     CONTINUE_OK=NO,
      131    14698                     PROMPT_VFC=YES,
      132    14699                     SFROUTINE=DDS$SUCCESS,
      133    14700                     READR=DUS$SCANREAD,
      134    14701                     STCLASS=CONSTANT);
      135    15039    1   DCL ATREEA(0:3) UBIN BYTE UNAL CONSTANT INIT( 57, /* C_STEP */
      136    15040    1                                   8, /* C_EVAL */
      137    15041    1                                 28, /* C_MODIFY */
      138    15042    1                              29 ); /* C_MACTIVE */
      139    15043    1   DCL ATREET REDEF ATREEA CHAR(4);
      140    15044    1   DCL SKILLA(0:3) UBIN BYTE UNAL CONSTANT INIT( 30, /* C_OA */
      141    15045    1                                     32, /* C_OE */
      142    15046    1                                53, /* C_ONCALLS */
      143    15047    1                              54 ); /* C_ONNODES */
      144    15048    1   DCL SKILLT REDEF SKILLA CHAR(4);
      145    15049    1   DCL PARSE$ PTR SYMREF;                  /* X$PARSE WORK BUFFER */
      146    15050    1   DCL D_DCMDS SBIN SYMREF;                /* COMMANDS SYNTAX TREE */
      147    15051    1   DCL D_CCMDS UBIN SYMREF;                /* CONTINUED COMMANDS PARSE TREE */
      148    15052    1   DCL D_ACMDS UBIN SYMREF;                /* ATTACHMENT COMMANDS PARSE TREE */
      149    15053    1   DCL D_MTREE UBIN SYMREF;                /* INTERACTIVE MODIFY PARSE TREE */
      150    15054    1   DCL D_XDELTA BIT(1) ALIGNED SYMREF;     /* EXEC DELTA/USER DELTA FLAG */
      151    15055    1   DCL D_ATREE UBIN SYMREF;           /* DELTA ACTIVATION CHARACTER PARSE TREE */
      152    15056    1   DCL D_M$DELT# UBIN SYMREF;
      153    15057    1   DCL D_M$DO# UBIN SYMREF;
      154    15058    1   DCL D_PARSIZE UBIN SYMREF;              /* PARSE SIZE */
      155    15059    1   DCL DDA$KILL1 ENTRY(0);                 /* KILLS A STORED COMMAND */
      156    15060    1   DCL DFA$KILL1 ENTRY(3);
      157    15061    1   DCL DDS$PROMPT ENTRY;                   /* PROMPT & READ USER'S COMMAND */
PL6.E3A0      #001=DDS$SCAN File=DUS$SCAN.:E05TSI                                TUE 07/29/97 15:01 Page:41   
      158    15062    1   DCL DDS$PROMPTC ENTRY;             /* PROMPT & READ CONTINUED USER'S COMMAND */
      159    15063    1   DCL DUS$SCANREAD          ENTRY(3);/* DUMMY READR FOR XUG, GETS CMD FROM S_D */
      160    15064    1   DCL DUS$POST_EXEC         ENTRY;        /* ROUTINE SETS S_D.BUILTIN */
      161    15065    1   DCL DDE$ERROR ENTRY(0);                 /* ERROR MSG REPORTER */
      162    15066    1   DCL DDD$BUMP_D$ ENTRY(1) ALTRET;        /* BUMPS S_D.D$ */
      163    15067    1   DCL DDS$DECIMAL ENTRY(2) ALTRET;        /* HANDLES DECIMALS NODE */
      164    15068    1   DCL DDS$STOREDA ENTRY(2) ALTRET;        /* COMMON STORED COMMAND CODE */
      165    15069    1   DCL DDS$ATTDIRA ENTRY(2) ALTRET;   /* ATTACHABLE | DIRECT COMMAND COMMON CODE */
      166    15070    1   DCL DDS$SET_C2D ENTRY ALTRET;           /* ESTABLISHES SCHEMA ACCESS */
      167    15071    1   DCL DDS$SET_D2Q ENTRY ALTRET;           /* ESTABLISHES SCHEMA ACCESS */
      168    15072    1   DCL DDS$SET_Q2D ENTRY ALTRET;           /* ESTABLISHES SCHEMA ACCESS */
      169    15073    1   DCL DDS$VREFCOM ENTRY(2) ALTRET;        /* BUILDS DATA DESCRIPTOR */
      170    15074    1   DCL DDS$CNSNT ENTRY(4) ALTRET;          /* EVALUATES "CNSNT_REF" NODE */
      171    15075    1   DCL DUA$RUM_COMM ENTRY(0);              /* RECORDS COMMENTS FOR RUM MODE */
      172    15076    1   DCL DDS$BLD ENTRY(1) ALTRET;            /* COMMON BUILD ROUTINES */
      173    15077    1   DCL DDS$SUCCESS ENTRY(1);               /* U$ ROUTINE FOR X$PARSE */
      174    15078    1   DCL DDB$CHECK_ADDR ENTRY(2) ALTRET;
      175    15079    1   DCL DDR$BINTXT ENTRY(4);
      176    15080    1   DCL DDQ$WRITE ENTRY(2);
      177    15081        %EJECT;
PL6.E3A0      #001=DDS$SCAN File=DUS$SCAN.:E05TSI                                TUE 07/29/97 15:01 Page:42   
      178    15082        /*D* NAME: DDS$SCAN
      179    15083             CALL: CALL DDS$SCAN
      180    15084             ENVIRONMENT: XDELTA OR USER DELTA.
      181    15085             INPUT: IMPLICIT REQUEST FOR DIRECT COMMAND.
      182    15086             OUTPUT: DIRECT COMMAND BUILT IN DIRECT COMMAND BUFFER.
      183    15087                     STORED COMMANDS ADDED TO STORED OMMAND BUFFERS ALONG
      184    15088                     THE WAY.
      185    15089             SCRATCH: DDS$PROMPT PLAYS WITH THE INPUT BUFFER.
      186    15090                      LOCAL AUTO.
      187    15091             DESCRIPTION: READS THE COMMAND FROM THE CURRENT INPUT
      188    15092             DEVICE. THE COMMAND IS PARSED USING M$PARSE FACILITY.
      189    15093             BUILDS STORED COMMAND TABLES FOR STORED COMMANDS. KEEPS
      190    15094             PROCESSING STORED COMMANDS UNTIL A DIRECT COMMAND IS
      191    15095             ENCOUNTERED. RETURNS TO CALLER WITH THE DIRECT COMMAND
      192    15096             BUILT (ENCODED) IN THE DIRECT COMMAND BUFFER.
      193    15097             REFERENCE: DELTA FUNCTIONAL SPEC AF Section 17.6 #0065C-0.
      194    15098        */
      195    15099    1        SCAN1 = '0'B;                      /* DDS$SCAN ENTRY POINT */

  15099  2 000002   200154 450100                    STZ     SCAN1,,AUTO

      196    15100    1        SCAN2 = '0'B;

  15100  2 000003   200155 450100                    STZ     SCAN2,,AUTO

      197    15101    1        SEMI_OFFSET = 0;

  15101  2 000004   200157 450100                    STZ     SEMI_OFFSET,,AUTO

      198    15102    1        GOTO ONCE;

  15102  2 000005   000022 710000 2                  TRA     ONCE

      199    15103                                                /**/
      200    15104    1   DDS$SCAN1: ENTRY ALTRET;

  15104  2 000006   000000 700200 xent  DDS$SCAN1    TSX0  ! X66_AUTO_0
PL6.E3A0      #001=DDS$SCAN File=DUS$SCAN.:E05TSI                                TUE 07/29/97 15:01 Page:43   
         2 000007   000222 000000                    ZERO    146,0

      201    15105                                                /**/
      202    15106    1        SCAN1 = '1'B;                      /* DDS$SCAN1 ENTRY POINT */

  15106  2 000010   400000 236003                    LDQ     -131072,DU
         2 000011   200154 756100                    STQ     SCAN1,,AUTO

      203    15107    1        SCAN2 = '0'B;

  15107  2 000012   200155 450100                    STZ     SCAN2,,AUTO

      204    15108    1        SEMI_OFFSET = 0;

  15108  2 000013   200157 450100                    STZ     SEMI_OFFSET,,AUTO

      205    15109    1        GOTO ONCE;

  15109  2 000014   000022 710000 2                  TRA     ONCE

      206    15110
      207    15111    1   DDS$SCAN2: ENTRY ALTRET;                /* DDS$SCAN2 entry point */

  15111  2 000015   000000 700200 xent  DDS$SCAN2    TSX0  ! X66_AUTO_0
         2 000016   000222 000000                    ZERO    146,0

      208    15112
      209    15113    1        SCAN2 = '1'B;

  15113  2 000017   400000 236003                    LDQ     -131072,DU
         2 000020   200155 756100                    STQ     SCAN2,,AUTO

      210    15114    1        SCAN1 = '0'B;

  15114  2 000021   200154 450100                    STZ     SCAN1,,AUTO

  15114  2 000022                       ONCE         null
PL6.E3A0      #001=DDS$SCAN File=DUS$SCAN.:E05TSI                                TUE 07/29/97 15:01 Page:44   
      211    15115    1   ONCE:;
      212    15116        /* GET XUG READY */
      213    15117    1        XUG_INIT = XUG_INIT_CONSTANT;

  15117  2 000022   000100 100400                    MLR     fill='000'O
         2 000023   000004 000220 1                  ADSC9   XUG_INIT_CONSTANT        cn=0,n=144
         2 000024   200004 000220                    ADSC9   XUG_INIT,,AUTO           cn=0,n=144

      214    15118    1        VBASE(XUG_INIT.WORK_) = PARSE$;

  15118  2 000025   000000 236000 xsym               LDQ     PARSE$
         2 000026   200022 756100                    STQ     XUG_INIT+14,,AUTO

      215    15119    1        VBOUND(XUG_INIT.WORK_) = 4*D_PARSIZE-1;

  15119  2 000027   000000 236000 xsym               LDQ     D_PARSIZE
         2 000030   000002 736000                    QLS     2
         2 000031   000001 136007                    SBLQ    1,DL
         2 000032   000020 736000                    QLS     16
         2 000033   200021 676100                    ERQ     XUG_INIT+13,,AUTO
         2 000034   000034 376000 xsym               ANQ     B_VECTNIL+28
         2 000035   200021 656100                    ERSQ    XUG_INIT+13,,AUTO

      216    15120    1        XUG_GETCMD = XUG_GETCMD_CONSTANT;

  15120  2 000036   000100 100400                    MLR     fill='000'O
         2 000037   000050 000250 1                  ADSC9   XUG_GETCMD_CONSTANT      cn=0,n=168
         2 000040   200050 000250                    ADSC9   XUG_GETCMD,,AUTO         cn=0,n=168

      217    15121    1        XUG_GETCMD.PROMPT_=VECTOR(SUBSTR(ADDR(S_D.PROMPT)->CHAR32,0,S_D.PROMPT_SIZE));

  15121  2 000041   000000 470400 xsym               LDP0    S_D$
         2 000042   005147 720100                    LXL0    2663,,PR0
         2 000043   000000 635010                    EAA     0,X0
         2 000044   000002 771000                    ARL     2
         2 000045   000140 135007                    SBLA    96,DL
         2 000046   000000 236000 xsym               LDQ     S_D$
PL6.E3A0      #001=DDS$SCAN File=DUS$SCAN.:E05TSI                                TUE 07/29/97 15:01 Page:45   
         2 000047   005150 036003                    ADLQ    2664,DU
         2 000050   200075 755100                    STA     XUG_GETCMD+21,,AUTO
         2 000051   200076 756100                    STQ     XUG_GETCMD+22,,AUTO

      218    15122    1        XUG_GETCMD.TEXT_ = VECTOR(NIL);

  15122  2 000052   000000 237000 3                  LDAQ    0
         2 000053   200104 757100                    STAQ    XUG_GETCMD+28,,AUTO

      219    15123    1        XUG_GETCMD.INDCB# = D_M$DELT#;

  15123  2 000054   000000 235000 xsym               LDA     D_M$DELT#
         2 000055   200062 755100                    STA     XUG_GETCMD+10,,AUTO

      220    15124    1        XUG_GETCMD.OUTDCB# = D_M$DO#;

  15124  2 000056   000000 235000 xsym               LDA     D_M$DO#
         2 000057   200063 755100                    STA     XUG_GETCMD+11,,AUTO

      221    15125    1        XUG_GETCMD.DCB_PARAM# = D_M$DO#;

  15125  2 000060   200064 755100                    STA     XUG_GETCMD+12,,AUTO

      222    15126    1        CALL CXG$INIT (XUG_GETCMD, XUG_INIT);

  15126  2 000061   200004 631500                    EPPR1   XUG_INIT,,AUTO
         2 000062   200215 451500                    STP1    V+3,,AUTO
         2 000063   200050 633500                    EPPR3   XUG_GETCMD,,AUTO
         2 000064   200214 453500                    STP3    V+2,,AUTO
         2 000065   200214 630500                    EPPR0   V+2,,AUTO
         2 000066   000020 631400 xsym               EPPR1   B_VECTNIL+16
         2 000067   000000 701000 xent               TSX1    CXG$INIT
         2 000070   000000 011000                    NOP     0

      223    15127    1        S_D.BEEN_TO_SCANREAD = '0'B;

  15127  2 000071   000000 470400 xsym               LDP0    S_D$
PL6.E3A0      #001=DDS$SCAN File=DUS$SCAN.:E05TSI                                TUE 07/29/97 15:01 Page:46   
         2 000072   006726 450100                    STZ     3542,,PR0

  15127  2 000073                       START        null
      224    15128
      225    15129    1   START:;
      226    15130    1        S_D.REMACTIVE = S_D.MACTIVE;       /* FOR EVAL, MACTIVE BLD ROUTINES */

  15130  2 000073   000000 470400 xsym               LDP0    S_D$
         2 000074   000713 236100                    LDQ     459,,PR0
         2 000075   400000 376003                    ANQ     -131072,DU
         2 000076   000506 756100                    STQ     326,,PR0

      227    15131    1        S_D.ERROR_SYM$ = ADDR( NIL );

  15131  2 000077   000001 236000 xsym               LDQ     B_VECTNIL+1
         2 000100   000032 756100                    STQ     26,,PR0

      228    15132    1        IF NOT S_D.MACTIVE

  15132  2 000101   000713 234100                    SZN     459,,PR0
         2 000102   000106 604000 2                  TMI     s:15135

      229    15133    1        THEN CALL DDS$SET_C2D;

  15133  2 000103   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 000104   000000 701000 xent               TSX1    DDS$SET_C2D
         2 000105   000000 011000                    NOP     0

      230    15134        /* SET STORED FLAG AS NOT WORKING ON A STORED COMMAND */
      231    15135    1        S_D.STORED=0;

  15135  2 000106   000000 470400 xsym               LDP0    S_D$
         2 000107   000135 450100                    STZ     93,,PR0

      232    15136        /* READ THE COMMAND FROM THE CURRENT INPUT DEVICE */
      233    15137    1   PARSMORE:
      234    15138    1        IF S_D.BEEN_TO_SCANREAD AND SCAN1 THEN RETURN;
PL6.E3A0      #001=DDS$SCAN File=DUS$SCAN.:E05TSI                                TUE 07/29/97 15:01 Page:47   

  15138  2 000110   000000 470400 xsym  PARSMORE     LDP0    S_D$
         2 000111   006726 234100                    SZN     3542,,PR0
         2 000112   000116 605000 2                  TPL     s:15139
         2 000113   200154 234100                    SZN     SCAN1,,AUTO
         2 000114   000116 605000 2                  TPL     s:15139

  15138  2 000115   000000 702200 xent               TSX2  ! X66_ARET

      235    15139    1        REMEMBER PARSMORE IN S_D.PARSMORE_REM;

  15139  2 000116   000110 635000 2                  EAA     PARSMORE
         2 000117   006732 452500                    STP2    3546,,PR0
         2 000120   006733 755100                    STA     3547,,PR0

      236    15140    1        S_D.BEEN_TO_SCANREAD = '0'B;

  15140  2 000121   006726 450100                    STZ     3542,,PR0

      237    15141    1        S_D.RUM_COMMAND = '0'B;

  15141  2 000122   000072 450100                    STZ     58,,PR0

      238    15142    1        S_D.XUG_BUILTIN = '0'B;

  15142  2 000123   006742 450100                    STZ     3554,,PR0

      239    15143    1        MAERR = 0;

  15143  2 000124   200130 450100                    STZ     MAERR,,AUTO

      240    15144    1        S_D.SACT = '0'B;

  15144  2 000125   000501 450100                    STZ     321,,PR0

      241    15145    1        IF ( NOT SCAN1 AND NOT SCAN2 ) OR ( SCAN2 AND S_D.MACTIVE )

PL6.E3A0      #001=DDS$SCAN File=DUS$SCAN.:E05TSI                                TUE 07/29/97 15:01 Page:48   
  15145  2 000126   200154 234100                    SZN     SCAN1,,AUTO
         2 000127   000132 604000 2                  TMI     s:15145+4
         2 000130   200155 234100                    SZN     SCAN2,,AUTO
         2 000131   000136 605000 2                  TPL     s:15147
         2 000132   200155 234100                    SZN     SCAN2,,AUTO
         2 000133   000147 605000 2                  TPL     s:15151
         2 000134   000713 234100                    SZN     459,,PR0
         2 000135   000147 605000 2                  TPL     s:15151

      242    15146    2        THEN DO;                           /* PROMPT & GET COMMAND */

      243    15147    2             IF S_D.STORED ~= 0

  15147  2 000136   000135 235100                    LDA     93,,PR0
         2 000137   000144 600000 2                  TZE     s:15149

      244    15148    2             THEN CALL DDS$PROMPTC;

  15148  2 000140   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 000141   000000 701000 xent               TSX1    DDS$PROMPTC
         2 000142   000000 011000                    NOP     0
         2 000143   000147 710000 2                  TRA     s:15151

      245    15149    2             ELSE CALL DDS$PROMPT;

  15149  2 000144   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 000145   000000 701000 xent               TSX1    DDS$PROMPT
         2 000146   000000 011000                    NOP     0

      246    15150    2           END;                            /* PROMPT & GET COMMAND */

      247    15151    1        IF S_D.SACT

  15151  2 000147   000000 470400 xsym               LDP0    S_D$
         2 000150   000501 234100                    SZN     321,,PR0
         2 000151   000307 605000 2                  TPL     s:15186

PL6.E3A0      #001=DDS$SCAN File=DUS$SCAN.:E05TSI                                TUE 07/29/97 15:01 Page:49   
      248    15152    2        THEN DO;                           /* SPECIAL ACTIVATION CHARACTER MODE */

      249    15153    2             IF S_D.STORED ~= 0

  15153  2 000152   000135 235100                    LDA     93,,PR0
         2 000153   001551 601000 2                  TNZ     USERSY

      250    15154    2             THEN GOTO USERSY;             /* CANNOT ACTIVATE ON STORED CMD */
      251    15155    2             IF S_D.RUM_SKIP

  15155  2 000154   000051 234100                    SZN     41,,PR0
         2 000155   001566 604000 2                  TMI     USERSK

      252    15156    2             THEN GOTO USERSK;
      253    15157    2             S_D.MACTIVE = '0'B;

  15157  2 000156   000713 450100                    STZ     459,,PR0

      254    15158    2             XUG_GETCMD.NODES$ = ADDR( D_ATREE );

  15158  2 000157   000002 236000 3                  LDQ     2
         2 000160   200050 756100                    STQ     XUG_GETCMD,,AUTO

      255    15159    2             S_D.QUALIFIED = '0'B;

  15159  2 000161   000712 450100                    STZ     458,,PR0

      256    15160    2             S_D.ERROR_SYM$ = ADDR( NIL );

  15160  2 000162   000001 236000 xsym               LDQ     B_VECTNIL+1
         2 000163   000032 756100                    STQ     26,,PR0

      257    15161    2             S_D.ERROR = 0;

  15161  2 000164   000013 450100                    STZ     11,,PR0

      258    15162    2             S_D.IFSPEC$ = ADDR( NIL );
PL6.E3A0      #001=DDS$SCAN File=DUS$SCAN.:E05TSI                                TUE 07/29/97 15:01 Page:50   

  15162  2 000165   000055 756100                    STQ     45,,PR0

      259    15163    2             CALL ATTDIR_INIT ALTRET( USERRERR );

  15163  2 000166   002576 701000 2                  TSX1    ATTDIR_INIT
         2 000167   001575 702000 2                  TSX2    USERRERR

      260    15164    2             CALL DDS$SET_D2Q;

  15164  2 000170   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 000171   000000 701000 xent               TSX1    DDS$SET_D2Q
         2 000172   000000 011000                    NOP     0

      261    15165    2             XUG_GETCMD.PROMPT_=VECTOR(SUBSTR(ADDR(S_D.PROMPT)->CHAR32,0,S_D.
             15165                      PROMPT_SIZE));

  15165  2 000173   000000 470400 xsym               LDP0    S_D$
         2 000174   005147 720100                    LXL0    2663,,PR0
         2 000175   000000 635010                    EAA     0,X0
         2 000176   000002 771000                    ARL     2
         2 000177   000140 135007                    SBLA    96,DL
         2 000200   000000 236000 xsym               LDQ     S_D$
         2 000201   005150 036003                    ADLQ    2664,DU
         2 000202   200075 755100                    STA     XUG_GETCMD+21,,AUTO
         2 000203   200076 756100                    STQ     XUG_GETCMD+22,,AUTO

      262    15166    2             CALL CXG$GETCMD( XUG_GETCMD ) ALTRET( USERR0 );

  15166  2 000204   200050 631500                    EPPR1   XUG_GETCMD,,AUTO
         2 000205   200214 451500                    STP1    V+2,,AUTO
         2 000206   200214 630500                    EPPR0   V+2,,AUTO
         2 000207   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 000210   000000 701000 xent               TSX1    CXG$GETCMD
         2 000211   001446 702000 2                  TSX2    USERR0

      263    15167    2             NCMD$ = XUG_GETCMD.OUT$ -> POB.SUBLK$( 0 );
PL6.E3A0      #001=DDS$SCAN File=DUS$SCAN.:E05TSI                                TUE 07/29/97 15:01 Page:51   

  15167  2 000212   200051 470500                    LDP0    XUG_GETCMD+1,,AUTO
         2 000213   000003 236100                    LDQ     3,,PR0
         2 000214   200125 756100                    STQ     NCMD$,,AUTO

      264    15168    2             S_D.NCMD$ = NCMD$;

  15168  2 000215   000000 471400 xsym               LDP1    S_D$
         2 000216   104750 756100                    STQ     2536,,PR1

      265    15169    2             TEMPCODE = NCMD$ -> POB.CODE;

  15169  2 000217   200125 473500                    LDP3    NCMD$,,AUTO
         2 000220   300000 236100                    LDQ     0,,PR3
         2 000221   777777 376007                    ANQ     -1,DL
         2 000222   200127 756100                    STQ     TEMPCODE,,AUTO

      266    15170    2             CALL INDEX( IX, BINASC( TEMPCODE ), ATREET ) ALTRET( UDERR1 );

  15170  2 000223   000033 736000                    QLS     27
         2 000224   000003 276000 3                  ORQ     3
         2 000225   200214 756100                    STQ     V+2,,AUTO
         2 000226   000100 124400                    SCM     mask='000'O
         2 000227   000122 000004 1                  ADSC9   ATREEA                   cn=0,n=4
         2 000230   200214 000001                    ADSC9   V+2,,AUTO                cn=0,n=1
         2 000231   200126 000100                    ARG     IX,,AUTO
         2 000232   001541 606400 2                  TTN     UDERR1

      267    15171    3             DO CASE ( IX );

  15171  2 000233   200126 235100                    LDA     IX,,AUTO
         2 000234   000004 115007                    CMPA    4,DL
         2 000235   000237 602005 2                  TNC     s:15171+4,AL
         2 000236   000274 710000 2                  TRA     s:15183
         2 000237   000243 710000 2                  TRA     s:15173
         2 000240   000256 710000 2                  TRA     s:15177
         2 000241   000263 710000 2                  TRA     s:15179
PL6.E3A0      #001=DDS$SCAN File=DUS$SCAN.:E05TSI                                TUE 07/29/97 15:01 Page:52   
         2 000242   000270 710000 2                  TRA     s:15181

      268    15172    3               CASE ( 0 );                 /* STEP */

      269    15173    3                  IF S_D.PATCH THEN GOTO USERPA;

  15173  2 000243   104754 234100                    SZN     2540,,PR1
         2 000244   001554 604000 2                  TMI     USERPA

      270    15174    3                  IF S_D.RUM OR S_D.ANLZ THEN GOTO USERNDE;

  15174  2 000245   104755 234100                    SZN     2541,,PR1
         2 000246   001557 604000 2                  TMI     USERNDE
         2 000247   104756 234100                    SZN     2542,,PR1
         2 000250   001557 604000 2                  TMI     USERNDE

      271    15175    3                  CALL DDS$BLD( 57 ) ALTRET( USERRERR ); /* C_STEP */

  15175  2 000251   000005 630400 3                  EPPR0   5
         2 000252   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 000253   000000 701000 xent               TSX1    DDS$BLD
         2 000254   001575 702000 2                  TSX2    USERRERR
         2 000255   000274 710000 2                  TRA     s:15183

      272    15176    3               CASE ( 1 );                 /* EVAL */

      273    15177    3                  CALL DDS$BLD( 8 ) ALTRET( USERRERR ); /* C_EVAL */

  15177  2 000256   000006 630400 3                  EPPR0   6
         2 000257   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 000260   000000 701000 xent               TSX1    DDS$BLD
         2 000261   001575 702000 2                  TSX2    USERRERR
         2 000262   000274 710000 2                  TRA     s:15183

      274    15178    3               CASE ( 2 );                 /* MODIFY */

      275    15179    3                  CALL DDS$BLD( 28 ) ALTRET( USERRERR ); /* C_MODIFY */
PL6.E3A0      #001=DDS$SCAN File=DUS$SCAN.:E05TSI                                TUE 07/29/97 15:01 Page:53   

  15179  2 000263   000010 630400 3                  EPPR0   8
         2 000264   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 000265   000000 701000 xent               TSX1    DDS$BLD
         2 000266   001575 702000 2                  TSX2    USERRERR
         2 000267   000274 710000 2                  TRA     s:15183

      276    15180    3               CASE ( 3 );                 /* MACTIVE */

      277    15181    3                  CALL DDS$BLD( 69 ) ALTRET( USERRERR ); /* C_MACTIVE1 */

  15181  2 000270   000012 630400 3                  EPPR0   10
         2 000271   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 000272   000000 701000 xent               TSX1    DDS$BLD
         2 000273   001575 702000 2                  TSX2    USERRERR

      278    15182    3               END;

      279    15183    2             S_D.LASTBLT$ -> ALL_ATTACH.LENGTH = POFFW( S_D.D$, S_D.LASTBLT$ );

  15183  2 000274   000000 470400 xsym               LDP0    S_D$
         2 000275   000134 471500                    LDP1    92,,PR0
         2 000276   000134 236100                    LDQ     92,,PR0
         2 000277   000022 772000                    QRL     18
         2 000300   200214 756100                    STQ     V+2,,AUTO
         2 000301   000044 236100                    LDQ     36,,PR0
         2 000302   000022 772000                    QRL     18
         2 000303   200214 136100                    SBLQ    V+2,,AUTO
         2 000304   000000 620006                    EAX0    0,QL
         2 000305   100000 440100                    SXL0    0,,PR1

      280    15184    2             RETURN;

  15184  2 000306   000000 702200 xent               TSX2  ! X66_ARET

      281    15185    2           END;                            /* SPECIAL ACTIVATION CHARACTER MODE */
      282    15186    1        IF S_D.MACTIVE
PL6.E3A0      #001=DDS$SCAN File=DUS$SCAN.:E05TSI                                TUE 07/29/97 15:01 Page:54   

  15186  2 000307   000713 234100                    SZN     459,,PR0
         2 000310   000460 605000 2                  TPL     s:15235

      283    15187    2        THEN DO;

      284    15188    2             XUG_GETCMD.NODES$ = ADDR( D_MTREE );

  15188  2 000311   000013 236000 3                  LDQ     11
         2 000312   200050 756100                    STQ     XUG_GETCMD,,AUTO

      285    15189    2             S_D.QUALIFIED = '0'B;

  15189  2 000313   000712 450100                    STZ     458,,PR0

      286    15190    2             S_D.ERROR_SYM$ = ADDR( NIL );

  15190  2 000314   000001 236000 xsym               LDQ     B_VECTNIL+1
         2 000315   000032 756100                    STQ     26,,PR0

      287    15191    2             S_D.ERROR = 0;

  15191  2 000316   000013 450100                    STZ     11,,PR0

      288    15192    2             S_D.IFSPEC$ = ADDR( NIL );

  15192  2 000317   000055 756100                    STQ     45,,PR0

      289    15193    2             CALL ATTDIR_INIT ALTRET( USERRERR );

  15193  2 000320   002576 701000 2                  TSX1    ATTDIR_INIT
         2 000321   001575 702000 2                  TSX2    USERRERR

      290    15194    2             CALL DDS$SET_D2Q;

  15194  2 000322   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 000323   000000 701000 xent               TSX1    DDS$SET_D2Q
PL6.E3A0      #001=DDS$SCAN File=DUS$SCAN.:E05TSI                                TUE 07/29/97 15:01 Page:55   
         2 000324   000000 011000                    NOP     0

      291    15195    2             IF SUBSTR( S_D.INPUT, 0, S_D.NCHARS ) = ' '

  15195  2 000325   000000 470400 xsym               LDP0    S_D$
         2 000326   000065 720100                    LXL0    53,,PR0
         2 000327   040000 106540                    CMPC    fill='040'O
         2 000330   000610 000010                    ADSC9   392,,PR0                 cn=0,n=*X0
         2 000331   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         2 000332   000342 601000 2                  TNZ     s:15202

      292    15196    3             THEN DO;

      293    15197    3                  IF S_D.RUM_SKIP

  15197  2 000333   000051 234100                    SZN     41,,PR0
         2 000334   001566 604000 2                  TMI     USERSK

      294    15198    3                  THEN GOTO USERSK;
      295    15199    3                  CALL DDS$BLD( 14 ) ALTRET( USERRERR ); /* C_MACLOSE */

  15199  2 000335   000015 630400 3                  EPPR0   13
         2 000336   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 000337   000000 701000 xent               TSX1    DDS$BLD
         2 000340   001575 702000 2                  TSX2    USERRERR

      296    15200    3                END;

  15200  2 000341   000375 710000 2                  TRA     s:15211

      297    15201    3             ELSE DO;

      298    15202    3                  XUG_GETCMD.PROMPT_=VECTOR(SUBSTR(ADDR(S_D.PROMPT)->CHAR32,0,S_D.
             15202                           PROMPT_SIZE));

  15202  2 000342   005147 720100                    LXL0    2663,,PR0
         2 000343   000000 635010                    EAA     0,X0
PL6.E3A0      #001=DDS$SCAN File=DUS$SCAN.:E05TSI                                TUE 07/29/97 15:01 Page:56   
         2 000344   000002 771000                    ARL     2
         2 000345   000140 135007                    SBLA    96,DL
         2 000346   000000 236000 xsym               LDQ     S_D$
         2 000347   005150 036003                    ADLQ    2664,DU
         2 000350   200075 755100                    STA     XUG_GETCMD+21,,AUTO
         2 000351   200076 756100                    STQ     XUG_GETCMD+22,,AUTO

      299    15203    3                  XUG_GETCMD.TEXT_ = VECTOR(NIL);

  15203  2 000352   000000 237000 3                  LDAQ    0
         2 000353   200104 757100                    STAQ    XUG_GETCMD+28,,AUTO

      300    15204    3                  CALL CXG$GETCMD ( XUG_GETCMD ) ALTRET( BIGTREE );

  15204  2 000354   200050 631500                    EPPR1   XUG_GETCMD,,AUTO
         2 000355   200214 451500                    STP1    V+2,,AUTO
         2 000356   200214 630500                    EPPR0   V+2,,AUTO
         2 000357   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 000360   000000 701000 xent               TSX1    CXG$GETCMD
         2 000361   000410 702000 2                  TSX2    BIGTREE

      301    15205    3                  NCMD$ = XUG_GETCMD.OUT$;

  15205  2 000362   200051 236100                    LDQ     XUG_GETCMD+1,,AUTO
         2 000363   200125 756100                    STQ     NCMD$,,AUTO

      302    15206    3                  S_D.NCMD$ = NCMD$;

  15206  2 000364   000000 470400 xsym               LDP0    S_D$
         2 000365   004750 756100                    STQ     2536,,PR0

      303    15207    3                  CALL DDS$BLD( 69 ) ALTRET( REMERR ); /* C_MACTIVE1 */

  15207  2 000366   000012 630400 3                  EPPR0   10
         2 000367   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 000370   000000 701000 xent               TSX1    DDS$BLD
         2 000371   000417 702000 2                  TSX2    REMERR
PL6.E3A0      #001=DDS$SCAN File=DUS$SCAN.:E05TSI                                TUE 07/29/97 15:01 Page:57   

      304    15208    3                  IF S_D.RUM_SKIP

  15208  2 000372   000000 470400 xsym               LDP0    S_D$
         2 000373   000051 234100                    SZN     41,,PR0
         2 000374   001566 604000 2                  TMI     USERSK

      305    15209    3                  THEN GOTO USERSK;
      306    15210    3                END;

      307    15211    2             S_D.LASTBLT$ -> ALL_ATTACH.LENGTH = POFFW( S_D.D$, S_D.LASTBLT$ );

  15211  2 000375   000000 470400 xsym               LDP0    S_D$
         2 000376   000134 471500                    LDP1    92,,PR0
         2 000377   000134 236100                    LDQ     92,,PR0
         2 000400   000022 772000                    QRL     18
         2 000401   200214 756100                    STQ     V+2,,AUTO
         2 000402   000044 236100                    LDQ     36,,PR0
         2 000403   000022 772000                    QRL     18
         2 000404   200214 136100                    SBLQ    V+2,,AUTO
         2 000405   000000 620006                    EAX0    0,QL
         2 000406   100000 440100                    SXL0    0,,PR1

      308    15212    2             RETURN;

  15212  2 000407   000000 702200 xent               TSX2  ! X66_ARET

      309    15213    2   BIGTREE:
      310    15214    2             IF SCAN2 OR XUG_GETCMD.ERR#.CODE# ~= %E$SYNERR

  15214  2 000410   200155 234100       BIGTREE      SZN     SCAN2,,AUTO
         2 000411   001446 604000 2                  TMI     USERR0
         2 000412   200051 236100                    LDQ     XUG_GETCMD+1,,AUTO
         2 000413   377770 376007                    ANQ     131064,DL
         2 000414   000010 116007                    CMPQ    8,DL
         2 000415   001446 601000 2                  TNZ     USERR0

PL6.E3A0      #001=DDS$SCAN File=DUS$SCAN.:E05TSI                                TUE 07/29/97 15:01 Page:58   
      311    15215    2             THEN GOTO USERR0;
      312    15216    2             ELSE GOTO RESETMA;

  15216  2 000416   000452 710000 2                  TRA     RESETMA

      313    15217    2   REMERR:
      314    15218    2             IF SCAN2

  15218  2 000417   200155 234100       REMERR       SZN     SCAN2,,AUTO
         2 000420   001575 604000 2                  TMI     USERRERR

      315    15219    2             THEN GOTO USERRERR;
      316    15220    2             MAERR = S_D.ERROR;

  15220  2 000421   000000 470400 xsym               LDP0    S_D$
         2 000422   000013 235100                    LDA     11,,PR0
         2 000423   200130 755100                    STA     MAERR,,AUTO

      317    15221    2             MAERR$ = S_D.ERROR_SYM$;

  15221  2 000424   000032 236100                    LDQ     26,,PR0
         2 000425   200131 756100                    STQ     MAERR$,,AUTO

      318    15222    2             IF MAERR$ ~= ADDR( NIL )

  15222  2 000426   000001 116000 xsym               CMPQ    B_VECTNIL+1
         2 000427   000447 600000 2                  TZE     s:15229

      319    15223    3             THEN DO;

      320    15224    3                  MAERRTEXTC = MAERR$ -> TEXT$C;

  15224  2 000430   200131 471500                    LDP1    MAERR$,,AUTO
         2 000431   100000 236100                    LDQ     0,,PR1
         2 000432   000033 772000                    QRL     27
         2 000433   000001 620006                    EAX0    1,QL
         2 000434   000100 100540                    MLR     fill='000'O
PL6.E3A0      #001=DDS$SCAN File=DUS$SCAN.:E05TSI                                TUE 07/29/97 15:01 Page:59   
         2 000435   100000 000010                    ADSC9   0,,PR1                   cn=0,n=*X0
         2 000436   200132 000100                    ADSC9   MAERRTEXTC,,AUTO         cn=0,n=64

      321    15225    3                  IF MAERRTEXTC.SIZE > LENGTHC( MAERRTEXTC.TEXT )

  15225  2 000437   200132 236100                    LDQ     MAERRTEXTC,,AUTO
         2 000440   777000 376003                    ANQ     -512,DU
         2 000441   100000 116003                    CMPQ    32768,DU
         2 000442   000445 602000 2                  TNC     s:15227

      322    15226    3                  THEN MAERRTEXTC.SIZE = LENGTHC( MAERRTEXTC.TEXT );

  15226  2 000443   077000 236003                    LDQ     32256,DU
         2 000444   200132 552140                    STBQ    MAERRTEXTC,'40'O,AUTO

      323    15227    3                  MAERR$ = ADDR( MAERRTEXTC );

  15227  2 000445   200132 633500                    EPPR3   MAERRTEXTC,,AUTO
         2 000446   200131 453500                    STP3    MAERR$,,AUTO

      324    15228    3                END;

      325    15229    2             MACHAR = XUG_GETCMD.EPOS#;

  15229  2 000447   200056 236100                    LDQ     XUG_GETCMD+6,,AUTO
         2 000450   777777 376007                    ANQ     -1,DL
         2 000451   200152 756100                    STQ     MACHAR,,AUTO

      326    15230    2   RESETMA:
      327    15231    2             CALL DDS$SET_C2D;

  15231  2 000452   000002 631400 xsym  RESETMA      EPPR1   B_VECTNIL+2
         2 000453   000000 701000 xent               TSX1    DDS$SET_C2D
         2 000454   000000 011000                    NOP     0

      328    15232    2             S_D.BEEN_TO_SCANREAD = '0'B;

PL6.E3A0      #001=DDS$SCAN File=DUS$SCAN.:E05TSI                                TUE 07/29/97 15:01 Page:60   
  15232  2 000455   000000 470400 xsym               LDP0    S_D$
         2 000456   006726 450100                    STZ     3542,,PR0

      329    15233    2             S_D.MACTIVE = '0'B;

  15233  2 000457   000713 450100                    STZ     459,,PR0

      330    15234    2           END;

      331    15235    1        IF SCAN2

  15235  2 000460   200155 234100                    SZN     SCAN2,,AUTO
         2 000461   000677 605000 2                  TPL     s:15292

      332    15236    2        THEN DO;

      333    15237    2             XUG_GETCMD.NODES$ = ADDR( D_ACMDS );

  15237  2 000462   000016 236000 3                  LDQ     14
         2 000463   200050 756100                    STQ     XUG_GETCMD,,AUTO

      334    15238    2             ATT_SIZE = S_D.ACMDS_SIZE;

  15238  2 000464   000511 235100                    LDA     329,,PR0
         2 000465   200160 755100                    STA     ATT_SIZE,,AUTO

      335    15239    2             S_D.INPUT = SUBSTR( S_D.ACMDS$ -> CHAR$ATT, S_D.ACMDS_OFF );

  15239  2 000466   000510 471500                    LDP1    328,,PR0
         2 000467   200160 236100                    LDQ     ATT_SIZE,,AUTO
         2 000470   000507 136100                    SBLQ    327,,PR0
         2 000471   000507 235100                    LDA     327,,PR0
         2 000472   000000 620006                    EAX0    0,QL
         2 000473   040100 100545                    MLR     fill='040'O
         2 000474   100000 000010                    ADSC9   0,A,PR1                  cn=0,n=*X0
         2 000475   000610 000400                    ADSC9   392,,PR0                 cn=0,n=256

PL6.E3A0      #001=DDS$SCAN File=DUS$SCAN.:E05TSI                                TUE 07/29/97 15:01 Page:61   
      336    15240    2             S_D.NCHARS = ATT_SIZE - S_D.ACMDS_OFF;

  15240  2 000476   200160 236100                    LDQ     ATT_SIZE,,AUTO
         2 000477   000507 136100                    SBLQ    327,,PR0
         2 000500   000065 756100                    STQ     53,,PR0

      337    15241    2             S_D.QUALIFIED = '0'B;

  15241  2 000501   000712 450100                    STZ     458,,PR0

      338    15242    2             S_D.ERROR_SYM$ = ADDR( NIL );

  15242  2 000502   000001 236000 xsym               LDQ     B_VECTNIL+1
         2 000503   000032 756100                    STQ     26,,PR0

      339    15243    2             S_D.ERROR = 0;

  15243  2 000504   000013 450100                    STZ     11,,PR0

      340    15244    2             CALL DDS$SET_D2Q;

  15244  2 000505   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 000506   000000 701000 xent               TSX1    DDS$SET_D2Q
         2 000507   000000 011000                    NOP     0

      341    15245    2             XUG_GETCMD.PROMPT_=VECTOR(SUBSTR(ADDR(S_D.PROMPT)->CHAR32,0,S_D.
             15245                      PROMPT_SIZE));

  15245  2 000510   000000 470400 xsym               LDP0    S_D$
         2 000511   005147 720100                    LXL0    2663,,PR0
         2 000512   000000 635010                    EAA     0,X0
         2 000513   000002 771000                    ARL     2
         2 000514   000140 135007                    SBLA    96,DL
         2 000515   000000 236000 xsym               LDQ     S_D$
         2 000516   005150 036003                    ADLQ    2664,DU
         2 000517   200075 755100                    STA     XUG_GETCMD+21,,AUTO
         2 000520   200076 756100                    STQ     XUG_GETCMD+22,,AUTO
PL6.E3A0      #001=DDS$SCAN File=DUS$SCAN.:E05TSI                                TUE 07/29/97 15:01 Page:62   

      342    15246    2             XUG_GETCMD.TEXT_ = VECTOR(NIL);

  15246  2 000521   000000 237000 3                  LDAQ    0
         2 000522   200104 757100                    STAQ    XUG_GETCMD+28,,AUTO

      343    15247    2             CALL CXG$GETCMD ( XUG_GETCMD ) ALTRET( USERR0 );

  15247  2 000523   200050 631500                    EPPR1   XUG_GETCMD,,AUTO
         2 000524   200214 451500                    STP1    V+2,,AUTO
         2 000525   200214 630500                    EPPR0   V+2,,AUTO
         2 000526   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 000527   000000 701000 xent               TSX1    CXG$GETCMD
         2 000530   001446 702000 2                  TSX2    USERR0

      344    15248    2             NC$ = XUG_GETCMD.OUT$ -> POB.SUBLK$( 0 );

  15248  2 000531   200051 470500                    LDP0    XUG_GETCMD+1,,AUTO
         2 000532   000003 236100                    LDQ     3,,PR0
         2 000533   200123 756100                    STQ     NC$,,AUTO

      345    15249    2             NCMD$ = NC$ -> POB.SUBLK$( 0 );

  15249  2 000534   200123 471500                    LDP1    NC$,,AUTO
         2 000535   100003 236100                    LDQ     3,,PR1
         2 000536   200125 756100                    STQ     NCMD$,,AUTO

      346    15250    2             S_D.NCMD$ = NCMD$;

  15250  2 000537   000000 473400 xsym               LDP3    S_D$
         2 000540   304750 756100                    STQ     2536,,PR3

      347    15251    2             CALL SET_IF_SEMI;

  15251  2 000541   002531 701000 2                  TSX1    SET_IF_SEMI
         2 000542   000000 011000                    NOP     0

PL6.E3A0      #001=DDS$SCAN File=DUS$SCAN.:E05TSI                                TUE 07/29/97 15:01 Page:63   
      348    15252    2             CALL ATTDIR_INIT ALTRET( USERRERR );

  15252  2 000543   002576 701000 2                  TSX1    ATTDIR_INIT
         2 000544   001575 702000 2                  TSX2    USERRERR

      349    15253    2             TEMPCODE = NCMD$ -> POB.CODE;

  15253  2 000545   200125 470500                    LDP0    NCMD$,,AUTO
         2 000546   000000 236100                    LDQ     0,,PR0
         2 000547   777777 376007                    ANQ     -1,DL
         2 000550   200127 756100                    STQ     TEMPCODE,,AUTO

      350    15254    2             IF S_D.RUM_SKIP

  15254  2 000551   000000 471400 xsym               LDP1    S_D$
         2 000552   100051 234100                    SZN     41,,PR1
         2 000553   000566 605000 2                  TPL     s:15264

      351    15255    2             THEN IF NOT (

  15255  2 000554   000110 116007                    CMPQ    72,DL
         2 000555   000566 600000 2                  TZE     s:15264
         2 000556   000052 116007                    CMPQ    42,DL
         2 000557   000566 600000 2                  TZE     s:15264
         2 000560   000047 116007                    CMPQ    39,DL
         2 000561   000566 600000 2                  TZE     s:15264
         2 000562   000013 116007                    CMPQ    11,DL
         2 000563   000566 600000 2                  TZE     s:15264
         2 000564   000072 116007                    CMPQ    58,DL
         2 000565   001566 601000 2                  TNZ     USERSK

      352    15256    2                    ( TEMPCODE = 72 ) OR /* C_RUM */
      353    15257    2                    ( TEMPCODE = 42 ) OR /* C_READ */
      354    15258    2                    ( TEMPCODE = 39 ) OR /* C_QUIT */
      355    15259    2                    ( TEMPCODE = 11 ) OR /* C_GOTO */
      356    15260    2                    ( TEMPCODE = 58 ) ) /* C_ALIB */
      357    15261    2                  THEN GOTO USERSK;
PL6.E3A0      #001=DDS$SCAN File=DUS$SCAN.:E05TSI                                TUE 07/29/97 15:01 Page:64   
      358    15262                                      /* Check for multiple command don't want to allow
      359    15263                                         unless it is the last multiple command. */
      360    15264    2             IF (( TEMPCODE = 78) OR  /* C_DBOOT */

  15264  2 000566   000116 116007                    CMPQ    78,DL
         2 000567   000600 600000 2                  TZE     s:15264+10
         2 000570   000106 116007                    CMPQ    70,DL
         2 000571   000600 600000 2                  TZE     s:15264+10
         2 000572   000071 116007                    CMPQ    57,DL
         2 000573   000600 600000 2                  TZE     s:15264+10
         2 000574   000075 116007                    CMPQ    61,DL
         2 000575   000600 600000 2                  TZE     s:15264+10
         2 000576   000104 116007                    CMPQ    68,DL
         2 000577   000655 601000 2                  TNZ     s:15286
         2 000600   200157 235100                    LDA     SEMI_OFFSET,,AUTO
         2 000601   000655 600000 2                  TZE     s:15286
         2 000602   100512 235100                    LDA     330,,PR1
         2 000603   000655 601000 2                  TNZ     s:15286

      361    15265    2               ( TEMPCODE = 70 ) OR    /* C_MINI */
      362    15266    2               ( TEMPCODE = 57 ) OR    /* C_STEP */
      363    15267    2               ( TEMPCODE = 61) OR    /* C_TBOOT */
      364    15268    2               ( TEMPCODE = 68  ))      /* C_XEQ */
      365    15269    2               AND SEMI_OFFSET ~= 0        /* not last command */
      366    15270    2               AND S_D.DO_ATTACH = 0       /* multiple command, not attachment */
      367    15271    3             THEN DO;

      368    15272    4                  DO CASE ( TEMPCODE );

  15272  2 000604   000071 136007                    SBLQ    57,DL
         2 000605   000026 116007                    CMPQ    22,DL
         2 000606   000610 602006 2                  TNC     s:15272+4,QL
         2 000607   000654 710000 2                  TRA     s:15284
         2 000610   000644 710000 2                  TRA     s:15278
         2 000611   000654 710000 2                  TRA     s:15284
         2 000612   000654 710000 2                  TRA     s:15284
         2 000613   000654 710000 2                  TRA     s:15284
PL6.E3A0      #001=DDS$SCAN File=DUS$SCAN.:E05TSI                                TUE 07/29/97 15:01 Page:65   
         2 000614   000647 710000 2                  TRA     s:15280
         2 000615   000654 710000 2                  TRA     s:15284
         2 000616   000654 710000 2                  TRA     s:15284
         2 000617   000654 710000 2                  TRA     s:15284
         2 000620   000654 710000 2                  TRA     s:15284
         2 000621   000654 710000 2                  TRA     s:15284
         2 000622   000654 710000 2                  TRA     s:15284
         2 000623   000652 710000 2                  TRA     s:15282
         2 000624   000654 710000 2                  TRA     s:15284
         2 000625   000641 710000 2                  TRA     s:15276
         2 000626   000654 710000 2                  TRA     s:15284
         2 000627   000654 710000 2                  TRA     s:15284
         2 000630   000654 710000 2                  TRA     s:15284
         2 000631   000654 710000 2                  TRA     s:15284
         2 000632   000654 710000 2                  TRA     s:15284
         2 000633   000654 710000 2                  TRA     s:15284
         2 000634   000654 710000 2                  TRA     s:15284
         2 000635   000636 710000 2                  TRA     s:15274

      369    15273    4                    CASE ( 78 );      /* C_DBOOT */

      370    15274    4                       S_D.ERROR = 241; /* E@DBOOT_NOTALLOWED */

  15274  2 000636   000361 235007                    LDA     241,DL
         2 000637   100013 755100                    STA     11,,PR1
         2 000640   000654 710000 2                  TRA     s:15284

      371    15275    4                    CASE ( 70 );       /* C_MINI */

      372    15276    4                       S_D.ERROR = 242; /* E@MINI_NOTALLOWED */

  15276  2 000641   000362 235007                    LDA     242,DL
         2 000642   100013 755100                    STA     11,,PR1
         2 000643   000654 710000 2                  TRA     s:15284

      373    15277    4                    CASE ( 57 );       /* C_STEP */

PL6.E3A0      #001=DDS$SCAN File=DUS$SCAN.:E05TSI                                TUE 07/29/97 15:01 Page:66   
      374    15278    4                       S_D.ERROR = 243; /* E@STEP_NOTALLOWED */

  15278  2 000644   000363 235007                    LDA     243,DL
         2 000645   100013 755100                    STA     11,,PR1
         2 000646   000654 710000 2                  TRA     s:15284

      375    15279    4                    CASE ( 61 );      /* C_TBOOT */

      376    15280    4                       S_D.ERROR = 244; /* E@TBOOT_NOTALLOWED */

  15280  2 000647   000364 235007                    LDA     244,DL
         2 000650   100013 755100                    STA     11,,PR1
         2 000651   000654 710000 2                  TRA     s:15284

      377    15281    4                    CASE ( 68 );        /* C_XEQ */

      378    15282    4                       S_D.ERROR = 245; /* E@XEQ_NOTALLOWED */

  15282  2 000652   000365 235007                    LDA     245,DL
         2 000653   100013 755100                    STA     11,,PR1

      379    15283    4                    END;

      380    15284    3                  GOTO USERRERR;

  15284  2 000654   001575 710000 2                  TRA     USERRERR

      381    15285    3                END;
      382    15286    2             CALL DDS$BLD( TEMPCODE ) ALTRET( USERRERR );

  15286  2 000655   200127 633500                    EPPR3   TEMPCODE,,AUTO
         2 000656   200214 453500                    STP3    V+2,,AUTO
         2 000657   200214 630500                    EPPR0   V+2,,AUTO
         2 000660   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 000661   000000 701000 xent               TSX1    DDS$BLD
         2 000662   001575 702000 2                  TSX2    USERRERR

PL6.E3A0      #001=DDS$SCAN File=DUS$SCAN.:E05TSI                                TUE 07/29/97 15:01 Page:67   
      383    15287    2             IF SEMI_OFFSET ~= 0

  15287  2 000663   200157 235100                    LDA     SEMI_OFFSET,,AUTO
         2 000664   000673 600000 2                  TZE     s:15289

      384    15288    2             THEN S_D.ACMDS_OFF = S_D.ACMDS_OFF + SEMI_OFFSET + 1;

  15288  2 000665   000000 470400 xsym               LDP0    S_D$
         2 000666   000507 236100                    LDQ     327,,PR0
         2 000667   200157 036100                    ADLQ    SEMI_OFFSET,,AUTO
         2 000670   000001 036007                    ADLQ    1,DL
         2 000671   000507 756100                    STQ     327,,PR0
         2 000672   000676 710000 2                  TRA     s:15290

      385    15289    2             ELSE S_D.ACMDS_OFF = S_D.ACMDS_SIZE;

  15289  2 000673   000000 470400 xsym               LDP0    S_D$
         2 000674   000511 235100                    LDA     329,,PR0
         2 000675   000507 755100                    STA     327,,PR0

      386    15290    2             RETURN;

  15290  2 000676   000000 702200 xent               TSX2  ! X66_ARET

      387    15291    2           END;
      388    15292    1        IF SUBSTR( S_D.INPUT, 0, S_D.NCHARS ) = ' '

  15292  2 000677   000065 720100                    LXL0    53,,PR0
         2 000700   040000 106540                    CMPC    fill='040'O
         2 000701   000610 000010                    ADSC9   392,,PR0                 cn=0,n=*X0
         2 000702   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         2 000703   000715 601000 2                  TNZ     s:15303

      389    15293    1        THEN IF SCAN1

  15293  2 000704   200154 234100                    SZN     SCAN1,,AUTO
         2 000705   001562 604000 2                  TMI     USERNU
PL6.E3A0      #001=DDS$SCAN File=DUS$SCAN.:E05TSI                                TUE 07/29/97 15:01 Page:68   

      390    15294    1             THEN GOTO USERNU;
      391    15295    1             ELSE IF S_D.STORED = 0

  15295  2 000706   000135 235100                    LDA     93,,PR0
         2 000707   000110 600000 2                  TZE     PARSMORE

      392    15296    1                  THEN GOTO PARSMORE;      /* RE-PROMPT & TRY AGAIN */
      393    15297    2                  ELSE DO;       /* IMPLIED DONE WITH CONTINUED STORED COMMAND */

      394    15298    2                       IF S_D.STORED > S_D.FIXLAST

  15298  2 000710   000135 236100                    LDQ     93,,PR0
         2 000711   000047 116100                    CMPQ    39,,PR0
         2 000712   000714 604400 2                  TMOZ    s:15300

      395    15299    2                       THEN S_D.FIXLAST = S_D.STORED;

  15299  2 000713   000047 756100                    STQ     39,,PR0

      396    15300    2                       GOTO START;

  15300  2 000714   000073 710000 2                  TRA     START

      397    15301    2                     END;
      398    15302        /* Call X$PARSE to see what we got */
      399    15303    1        S_D.QUALIFIED = '0'B;

  15303  2 000715   000712 450100                    STZ     458,,PR0

      400    15304    1        CALL DDS$SET_D2Q;

  15304  2 000716   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 000717   000000 701000 xent               TSX1    DDS$SET_D2Q
         2 000720   000000 011000                    NOP     0

      401    15305    1        S_D.ERROR_SYM$ = ADDR(NIL);
PL6.E3A0      #001=DDS$SCAN File=DUS$SCAN.:E05TSI                                TUE 07/29/97 15:01 Page:69   

  15305  2 000721   000001 236000 xsym               LDQ     B_VECTNIL+1
         2 000722   000000 470400 xsym               LDP0    S_D$
         2 000723   000032 756100                    STQ     26,,PR0

      402    15306    1        S_D.ERROR = 0;

  15306  2 000724   000013 450100                    STZ     11,,PR0

      403    15307    1        IF S_D.STORED = 0

  15307  2 000725   000135 235100                    LDA     93,,PR0
         2 000726   001252 601000 2                  TNZ     s:15398

      404    15308    2        THEN DO;                           /* Initial stored or direct command */

      405    15309    2             XUG_GETCMD.NODES$ = ADDR( D_DCMDS );

  15309  2 000727   000017 236000 3                  LDQ     15
         2 000730   200050 756100                    STQ     XUG_GETCMD,,AUTO

      406    15310    2             XUG_GETCMD.PROMPT_=VECTOR(SUBSTR(ADDR(S_D.PROMPT)->CHAR32,0,S_D.
             15310                      PROMPT_SIZE));

  15310  2 000731   005147 720100                    LXL0    2663,,PR0
         2 000732   000000 635010                    EAA     0,X0
         2 000733   000002 771000                    ARL     2
         2 000734   000140 135007                    SBLA    96,DL
         2 000735   000000 236000 xsym               LDQ     S_D$
         2 000736   005150 036003                    ADLQ    2664,DU
         2 000737   200075 755100                    STA     XUG_GETCMD+21,,AUTO
         2 000740   200076 756100                    STQ     XUG_GETCMD+22,,AUTO

      407    15311    2             XUG_GETCMD.TEXT_ = VECTOR(NIL);

  15311  2 000741   000000 237000 3                  LDAQ    0
         2 000742   200104 757100                    STAQ    XUG_GETCMD+28,,AUTO
PL6.E3A0      #001=DDS$SCAN File=DUS$SCAN.:E05TSI                                TUE 07/29/97 15:01 Page:70   

      408    15312    2             CALL CXG$GETCMD ( XUG_GETCMD ) ALTRET( USERR0 );

  15312  2 000743   200050 631500                    EPPR1   XUG_GETCMD,,AUTO
         2 000744   200214 451500                    STP1    V+2,,AUTO
         2 000745   200214 630500                    EPPR0   V+2,,AUTO
         2 000746   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 000747   000000 701000 xent               TSX1    CXG$GETCMD
         2 000750   001446 702000 2                  TSX2    USERR0

      409    15313    2             NC$ = XUG_GETCMD.OUT$ -> POB.SUBLK$( 0 );

  15313  2 000751   200051 470500                    LDP0    XUG_GETCMD+1,,AUTO
         2 000752   000003 236100                    LDQ     3,,PR0
         2 000753   200123 756100                    STQ     NC$,,AUTO

      410    15314    2             IF NC$ -> POB.CODE = 55 /* C@STORED_CMD */

  15314  2 000754   200123 471500                    LDP1    NC$,,AUTO
         2 000755   100000 720100                    LXL0    0,,PR1
         2 000756   000067 100003                    CMPX0   55,DU
         2 000757   001154 601000 2                  TNZ     s:15361

      411    15315    3             THEN DO;                      /* Stored command */

      412    15316    3                  NCMD$ = NC$ -> POB.SUBLK$( 0 );

  15316  2 000760   100003 236100                    LDQ     3,,PR1
         2 000761   200125 756100                    STQ     NCMD$,,AUTO

      413    15317    3                  IF NC$ -> POB.NSB > 1

  15317  2 000762   100001 220100                    LDX0    1,,PR1
         2 000763   000002 100003                    CMPX0   2,DU
         2 000764   001005 602000 2                  TNC     s:15324

      414    15318    4                  THEN DO;
PL6.E3A0      #001=DDS$SCAN File=DUS$SCAN.:E05TSI                                TUE 07/29/97 15:01 Page:71   

      415    15319    4                       CALL DDS$DECIMAL( NCMD$, TEMPID ) ALTRET( USERRERR );

  15319  2 000765   200122 633500                    EPPR3   TEMPID,,AUTO
         2 000766   200215 453500                    STP3    V+3,,AUTO
         2 000767   200125 634500                    EPPR4   NCMD$,,AUTO
         2 000770   200214 454500                    STP4    V+2,,AUTO
         2 000771   200214 630500                    EPPR0   V+2,,AUTO
         2 000772   000020 631400 xsym               EPPR1   B_VECTNIL+16
         2 000773   000000 701000 xent               TSX1    DDS$DECIMAL
         2 000774   001575 702000 2                  TSX2    USERRERR

      416    15320    4                       IF ( TEMPID < 1 ) OR ( TEMPID > (SIZEW(S_D.FIXCOM)/SIZEW(S_D.
             15320                                FIXCOM(0)))-1 )

  15320  2 000775   200122 235100                    LDA     TEMPID,,AUTO
         2 000776   001535 604400 2                  TMOZ    USERR1
         2 000777   000453 115007                    CMPA    299,DL
         2 001000   001535 605400 2                  TPNZ    USERR1

      417    15321    4                       THEN GOTO USERR1;
      418    15322    4                       NCMD$ = NC$ -> POB.SUBLK$( 1 );

  15322  2 001001   200123 470500                    LDP0    NC$,,AUTO
         2 001002   000004 236100                    LDQ     4,,PR0
         2 001003   200125 756100                    STQ     NCMD$,,AUTO

      419    15323    4                     END;

  15323  2 001004   001007 710000 2                  TRA     s:15325

      420    15324    3                  ELSE TEMPID = -1;

  15324  2 001005   000001 335007                    LCA     1,DL
         2 001006   200122 755100                    STA     TEMPID,,AUTO

      421    15325    3                  CALL SET_TRAIL_SEMI;
PL6.E3A0      #001=DDS$SCAN File=DUS$SCAN.:E05TSI                                TUE 07/29/97 15:01 Page:72   

  15325  2 001007   002500 701000 2                  TSX1    SET_TRAIL_SEMI
         2 001010   000000 011000                    NOP     0

      422    15326    3                  IF TRAIL_SEMI

  15326  2 001011   200156 234100                    SZN     TRAIL_SEMI,,AUTO
         2 001012   001015 605000 2                  TPL     s:15329

      423    15327    3                  THEN IF SCAN1            /* Continuation */

  15327  2 001013   200154 234100                    SZN     SCAN1,,AUTO
         2 001014   001545 604000 2                  TMI     UDERNC

      424    15328    3                       THEN GOTO UDERNC;
      425    15329    3                  S_D.NCMD$ = NCMD$;

  15329  2 001015   200125 236100                    LDQ     NCMD$,,AUTO
         2 001016   000000 470400 xsym               LDP0    S_D$
         2 001017   004750 756100                    STQ     2536,,PR0

      426    15330    3                  CALL SET_IF_SEMI;

  15330  2 001020   002531 701000 2                  TSX1    SET_IF_SEMI
         2 001021   000000 011000                    NOP     0

      427    15331    3                  TEMPCODE = NCMD$ -> POB.CODE;

  15331  2 001022   200125 470500                    LDP0    NCMD$,,AUTO
         2 001023   000000 236100                    LDQ     0,,PR0
         2 001024   777777 376007                    ANQ     -1,DL
         2 001025   200127 756100                    STQ     TEMPCODE,,AUTO

      428    15332    3                  IF S_D.RUM_SKIP

  15332  2 001026   000000 471400 xsym               LDP1    S_D$
         2 001027   100051 234100                    SZN     41,,PR1
PL6.E3A0      #001=DDS$SCAN File=DUS$SCAN.:E05TSI                                TUE 07/29/97 15:01 Page:73   
         2 001030   001566 604000 2                  TMI     USERSK

      429    15333    3                  THEN GOTO USERSK;
      430    15334    3                  IF TEMPCODE = 67     /* C_WHEN */

  15334  2 001031   000103 116007                    CMPQ    67,DL
         2 001032   001042 601000 2                  TNZ     s:15341

      431    15335    4                  THEN DO;

      432    15336    4                       IF D_XDELTA THEN GOTO USERR7;

  15336  2 001033   000000 234000 xsym               SZN     D_XDELTA
         2 001034   001572 604000 2                  TMI     USERR7

      433    15337    4                       CALL ATTDIR_INIT ALTRET( USERRERR );

  15337  2 001035   002576 701000 2                  TSX1    ATTDIR_INIT
         2 001036   001575 702000 2                  TSX2    USERRERR

      434    15338    4                       CALL DDS$BLD_WHEN ALTRET( USERRERR );

  15338  2 001037   001656 701000 2                  TSX1    DDS$BLD_WHEN
         2 001040   001575 702000 2                  TSX2    USERRERR

      435    15339    4                     END;

  15339  2 001041   001053 710000 2                  TRA     s:15345

      436    15340    4                  ELSE DO;

      437    15341    4                       CALL STORED_INIT ALTRET( USERRERR );

  15341  2 001042   002627 701000 2                  TSX1    STORED_INIT
         2 001043   001575 702000 2                  TSX2    USERRERR

      438    15342    4                       CALL DDS$BLD( TEMPCODE ) ALTRET( USERRERR );
PL6.E3A0      #001=DDS$SCAN File=DUS$SCAN.:E05TSI                                TUE 07/29/97 15:01 Page:74   

  15342  2 001044   200127 630500                    EPPR0   TEMPCODE,,AUTO
         2 001045   200214 450500                    STP0    V+2,,AUTO
         2 001046   200214 630500                    EPPR0   V+2,,AUTO
         2 001047   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 001050   000000 701000 xent               TSX1    DDS$BLD
         2 001051   001575 702000 2                  TSX2    USERRERR

      439    15343    4                       VCPOS = 0;

  15343  2 001052   200162 450100                    STZ     VCPOS,,AUTO

      440    15344    4                     END;

      441    15345    3                  S_D.LASTBLT$ -> AT_FIRST.TEXT_OFFSET = POFFC( S_D.D$, S_D.LASTBLT$ )
             15345                           ;

  15345  2 001053   000000 470400 xsym               LDP0    S_D$
         2 001054   000134 471500                    LDP1    92,,PR0
         2 001055   000134 236100                    LDQ     92,,PR0
         2 001056   000020 772000                    QRL     16
         2 001057   200214 756100                    STQ     V+2,,AUTO
         2 001060   000044 236100                    LDQ     36,,PR0
         2 001061   000020 772000                    QRL     16
         2 001062   200214 136100                    SBLQ    V+2,,AUTO
         2 001063   000000 620006                    EAX0    0,QL
         2 001064   100006 740100                    STX0    6,,PR1

      442    15346    3                  IF S_D.IFSPEC$ ~= ADDR(NIL)

  15346  2 001065   000055 236100                    LDQ     45,,PR0
         2 001066   000001 116000 xsym               CMPQ    B_VECTNIL+1
         2 001067   001074 600000 2                  TZE     s:15348

      443    15347    3                  THEN S_D.LASTBLT$ -> AT_FIRST.IF_OFFSET = S_D.IFSPEC$ -> POB.CPOS;

  15347  2 001070   000134 471500                    LDP1    92,,PR0
PL6.E3A0      #001=DDS$SCAN File=DUS$SCAN.:E05TSI                                TUE 07/29/97 15:01 Page:75   
         2 001071   000055 473500                    LDP3    45,,PR0
         2 001072   300002 720100                    LXL0    2,,PR3
         2 001073   100007 440100                    SXL0    7,,PR1

      444    15348    3                  IF SEMI_OFFSET ~= 0

  15348  2 001074   200157 235100                    LDA     SEMI_OFFSET,,AUTO
         2 001075   001101 600000 2                  TZE     s:15350

      445    15349    3                  THEN S_D.LASTBLT$ -> AT_FIRST.ATT_OFFSET = SEMI_OFFSET + 1;

  15349  2 001076   000134 471500                    LDP1    92,,PR0
         2 001077   000001 620005                    EAX0    1,AL
         2 001100   100007 740100                    STX0    7,,PR1

      446    15350    3                  ATT_SIZE = S_D.NCHARS;

  15350  2 001101   000065 235100                    LDA     53,,PR0
         2 001102   200160 755100                    STA     ATT_SIZE,,AUTO

      447    15351    3                  S_D.LASTBLT$ -> AT_FIRST.TEXT_SIZE = ATT_SIZE ;

  15351  2 001103   000134 471500                    LDP1    92,,PR0
         2 001104   000000 620005                    EAX0    0,AL
         2 001105   100006 440100                    SXL0    6,,PR1

      448    15352    3                  ATTEXT$ = S_D.D$;

  15352  2 001106   000044 236100                    LDQ     36,,PR0
         2 001107   200161 756100                    STQ     ATTEXT$,,AUTO

      449    15353    3                  CALL DDD$BUMP_D$( (S_D.NCHARS+3)/4 ) ALTRET( USERRERR );

  15353  2 001110   000065 236100                    LDQ     53,,PR0
         2 001111   000003 036007                    ADLQ    3,DL
         2 001112   000004 506007                    DIV     4,DL
         2 001113   200214 756100                    STQ     V+2,,AUTO
PL6.E3A0      #001=DDS$SCAN File=DUS$SCAN.:E05TSI                                TUE 07/29/97 15:01 Page:76   
         2 001114   200214 631500                    EPPR1   V+2,,AUTO
         2 001115   200215 451500                    STP1    V+3,,AUTO
         2 001116   200215 630500                    EPPR0   V+3,,AUTO
         2 001117   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 001120   000000 701000 xent               TSX1    DDD$BUMP_D$
         2 001121   001575 702000 2                  TSX2    USERRERR

      450    15354    3                  ATTEXT$ -> CHAR$ATT = S_D.INPUT;

  15354  2 001122   000000 470400 xsym               LDP0    S_D$
         2 001123   200161 471500                    LDP1    ATTEXT$,,AUTO
         2 001124   200160 720100                    LXL0    ATT_SIZE,,AUTO
         2 001125   040140 100500                    MLR     fill='040'O
         2 001126   000610 000400                    ADSC9   392,,PR0                 cn=0,n=256
         2 001127   100000 000010                    ADSC9   0,,PR1                   cn=0,n=*X0

      451    15355    3                  S_D.LASTBLT$ -> AT_FIRST.LENGTH = POFFW( S_D.D$, S_D.LASTBLT$ );

  15355  2 001130   000134 473500                    LDP3    92,,PR0
         2 001131   000134 236100                    LDQ     92,,PR0
         2 001132   000022 772000                    QRL     18
         2 001133   200214 756100                    STQ     V+2,,AUTO
         2 001134   000044 236100                    LDQ     36,,PR0
         2 001135   000022 772000                    QRL     18
         2 001136   200214 136100                    SBLQ    V+2,,AUTO
         2 001137   000000 621006                    EAX1    0,QL
         2 001140   300000 441100                    SXL1    0,,PR3

      452    15356    3                  S_D.VARNEXT$ = S_D.D$;

  15356  2 001141   000044 236100                    LDQ     36,,PR0
         2 001142   000033 756100                    STQ     27,,PR0

      453    15357    3                  S_D.FIXCOM.TAL( S_D.STORED ) = S_D.LASTBLT$ -> AT_FIRST.LENGTH;

  15357  2 001143   000135 236100                    LDQ     93,,PR0
         2 001144   000003 402007                    MPY     3,DL
PL6.E3A0      #001=DDS$SCAN File=DUS$SCAN.:E05TSI                                TUE 07/29/97 15:01 Page:77   
         2 001145   000001 736000                    QLS     1
         2 001146   000134 473500                    LDP3    92,,PR0
         2 001147   300000 721100                    LXL1    0,,PR3
         2 001150   001212 441106                    SXL1    650,QL,PR0

      454    15358    3                  IF TRAIL_SEMI

  15358  2 001151   200156 234100                    SZN     TRAIL_SEMI,,AUTO
         2 001152   000110 604000 2                  TMI     PARSMORE

      455    15359    3                  THEN GOTO PARSMORE;
      456    15360    3                END;                       /* Stored command */

  15360  2 001153   001411 710000 2                  TRA     s:15421

      457    15361    2             ELSE IF NC$ -> POB.CODE = 56 /* C@DIRECT_CMD */

  15361  2 001154   000070 100003                    CMPX0   56,DU
         2 001155   001236 601000 2                  TNZ     s:15387

      458    15362    3                  THEN DO;                 /* Direct command */

      459    15363    3                       NCMD$ = NC$ -> POB.SUBLK$( 0 );

  15363  2 001156   100003 236100                    LDQ     3,,PR1
         2 001157   200125 756100                    STQ     NCMD$,,AUTO

      460    15364    3                       S_D.NCMD$ = NCMD$;

  15364  2 001160   000000 473400 xsym               LDP3    S_D$
         2 001161   304750 756100                    STQ     2536,,PR3

      461    15365    3                       CALL SET_TRAIL_SEMI;

  15365  2 001162   002500 701000 2                  TSX1    SET_TRAIL_SEMI
         2 001163   000000 011000                    NOP     0

PL6.E3A0      #001=DDS$SCAN File=DUS$SCAN.:E05TSI                                TUE 07/29/97 15:01 Page:78   
      462    15366    3                       IF TRAIL_SEMI

  15366  2 001164   200156 234100                    SZN     TRAIL_SEMI,,AUTO
         2 001165   001545 604000 2                  TMI     UDERNC

      463    15367    3                       THEN GOTO UDERNC;   /* Continuation */
      464    15368    3                       CALL SET_IF_SEMI;

  15368  2 001166   002531 701000 2                  TSX1    SET_IF_SEMI
         2 001167   000000 011000                    NOP     0

      465    15369    3                       CALL ATTDIR_INIT ALTRET( USERRERR );

  15369  2 001170   002576 701000 2                  TSX1    ATTDIR_INIT
         2 001171   001575 702000 2                  TSX2    USERRERR

      466    15370    3                       TEMPCODE = NCMD$ -> POB.CODE;

  15370  2 001172   200125 470500                    LDP0    NCMD$,,AUTO
         2 001173   000000 236100                    LDQ     0,,PR0
         2 001174   777777 376007                    ANQ     -1,DL
         2 001175   200127 756100                    STQ     TEMPCODE,,AUTO

      467    15371    3                       IF S_D.RUM_SKIP

  15371  2 001176   000000 471400 xsym               LDP1    S_D$
         2 001177   100051 234100                    SZN     41,,PR1
         2 001200   001213 605000 2                  TPL     s:15379

      468    15372    3                       THEN IF NOT (

  15372  2 001201   000110 116007                    CMPQ    72,DL
         2 001202   001213 600000 2                  TZE     s:15379
         2 001203   000052 116007                    CMPQ    42,DL
         2 001204   001213 600000 2                  TZE     s:15379
         2 001205   000047 116007                    CMPQ    39,DL
         2 001206   001213 600000 2                  TZE     s:15379
PL6.E3A0      #001=DDS$SCAN File=DUS$SCAN.:E05TSI                                TUE 07/29/97 15:01 Page:79   
         2 001207   000013 116007                    CMPQ    11,DL
         2 001210   001213 600000 2                  TZE     s:15379
         2 001211   000072 116007                    CMPQ    58,DL
         2 001212   001566 601000 2                  TNZ     USERSK

      469    15373    3                              ( TEMPCODE = 72 ) OR /* C_RUM */
      470    15374    3                              ( TEMPCODE = 42 ) OR /* C_READ */
      471    15375    3                              ( TEMPCODE = 39 ) OR /* C_QUIT */
      472    15376    3                              ( TEMPCODE = 11 ) OR /* C_GOTO */
      473    15377    3                              ( TEMPCODE = 58 ) ) /* C_ALIB */
      474    15378    3                            THEN GOTO USERSK;
      475    15379    3                       CALL DDS$BLD( TEMPCODE ) ALTRET( USERRERR );

  15379  2 001213   200127 633500                    EPPR3   TEMPCODE,,AUTO
         2 001214   200214 453500                    STP3    V+2,,AUTO
         2 001215   200214 630500                    EPPR0   V+2,,AUTO
         2 001216   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 001217   000000 701000 xent               TSX1    DDS$BLD
         2 001220   001575 702000 2                  TSX2    USERRERR

      476    15380    3                       IF SEMI_OFFSET ~= 0

  15380  2 001221   200157 235100                    LDA     SEMI_OFFSET,,AUTO
         2 001222   001411 600000 2                  TZE     s:15421

      477    15381    4                       THEN DO;

      478    15382    4                            S_D.DIRECT_TEXT = SUBSTR( S_D.INPUT, SEMI_OFFSET + 1 );

  15382  2 001223   777400 620005                    EAX0    -256,AL
         2 001224   777777 660003                    ERX0    -1,DU
         2 001225   000000 470400 xsym               LDP0    S_D$
         2 001226   040100 100545                    MLR     fill='040'O
         2 001227   000610 200010                    ADSC9   392,A,PR0                cn=1,n=*X0
         2 001230   006335 000400                    ADSC9   3293,,PR0                cn=0,n=256

      479    15383    4                            S_D.DIRECT_SIZE = S_D.NCHARS - SEMI_OFFSET;
PL6.E3A0      #001=DDS$SCAN File=DUS$SCAN.:E05TSI                                TUE 07/29/97 15:01 Page:80   

  15383  2 001231   000065 236100                    LDQ     53,,PR0
         2 001232   200157 136100                    SBLQ    SEMI_OFFSET,,AUTO
         2 001233   004675 756100                    STQ     2493,,PR0

      480    15384    4                            S_D.DIRECT_OFF = 0;

  15384  2 001234   004676 450100                    STZ     2494,,PR0

      481    15385    4                          END;

      482    15386    3                     END;                  /* Direct command */

  15386  2 001235   001411 710000 2                  TRA     s:15421

      483    15387    2                  ELSE IF NC$ -> POB.CODE = 23 /* C_COMMENTS */

  15387  2 001236   000027 100003                    CMPX0   23,DU
         2 001237   001541 601000 2                  TNZ     UDERR1

      484    15388    3                       THEN DO;            /* Command is comments only */

      485    15389    3                            IF S_D.RUM

  15389  2 001240   000000 473400 xsym               LDP3    S_D$
         2 001241   304755 234100                    SZN     2541,,PR3
         2 001242   001247 605000 2                  TPL     s:15391

      486    15390    3                            THEN CALL DUA$RUM_COMM;

  15390  2 001243   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 001244   000000 701000 xent               TSX1    DUA$RUM_COMM
         2 001245   000000 011000                    NOP     0
         2 001246   001251 710000 2                  TRA     s:15393

      487    15391    3                            ELSE IF SCAN1

PL6.E3A0      #001=DDS$SCAN File=DUS$SCAN.:E05TSI                                TUE 07/29/97 15:01 Page:81   
  15391  2 001247   200154 234100                    SZN     SCAN1,,AUTO
         2 001250   001562 604000 2                  TMI     USERNU

      488    15392    3                                 THEN GOTO USERNU;
      489    15393    3                            GOTO PARSMORE;

  15393  2 001251   000110 710000 2                  TRA     PARSMORE

      490    15394    3                          END;             /* Command is comments only */
      491    15395    2                       ELSE GOTO UDERR1;   /* Unknown code returned */
      492    15396    2           END;                            /* Initial stored or direct command */
      493    15397    2        ELSE DO;                           /* Continuation to a stored command */

      494    15398    2             XUG_GETCMD.NODES$ = ADDR( D_CCMDS );

  15398  2 001252   000020 236000 3                  LDQ     16
         2 001253   200050 756100                    STQ     XUG_GETCMD,,AUTO

      495    15399    2             XUG_GETCMD.PROMPT_=VECTOR(SUBSTR(ADDR(S_D.PROMPT)->CHAR32,0,S_D.
             15399                      PROMPT_SIZE));

  15399  2 001254   005147 720100                    LXL0    2663,,PR0
         2 001255   000000 635010                    EAA     0,X0
         2 001256   000002 771000                    ARL     2
         2 001257   000140 135007                    SBLA    96,DL
         2 001260   000000 236000 xsym               LDQ     S_D$
         2 001261   005150 036003                    ADLQ    2664,DU
         2 001262   200075 755100                    STA     XUG_GETCMD+21,,AUTO
         2 001263   200076 756100                    STQ     XUG_GETCMD+22,,AUTO

      496    15400    2             XUG_GETCMD.TEXT_ = VECTOR(NIL);

  15400  2 001264   000000 237000 3                  LDAQ    0
         2 001265   200104 757100                    STAQ    XUG_GETCMD+28,,AUTO

      497    15401    2             CALL CXG$GETCMD ( XUG_GETCMD ) ALTRET( USERR0A );

PL6.E3A0      #001=DDS$SCAN File=DUS$SCAN.:E05TSI                                TUE 07/29/97 15:01 Page:82   
  15401  2 001266   200050 631500                    EPPR1   XUG_GETCMD,,AUTO
         2 001267   200214 451500                    STP1    V+2,,AUTO
         2 001270   200214 630500                    EPPR0   V+2,,AUTO
         2 001271   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 001272   000000 701000 xent               TSX1    CXG$GETCMD
         2 001273   001424 702000 2                  TSX2    USERR0A

      498    15402    2             NC$ = XUG_GETCMD.OUT$ -> POB.SUBLK$( 0 );

  15402  2 001274   200051 470500                    LDP0    XUG_GETCMD+1,,AUTO
         2 001275   000003 236100                    LDQ     3,,PR0
         2 001276   200123 756100                    STQ     NC$,,AUTO

      499    15403    2             NCMD$ = NC$ -> POB.SUBLK$( 0 );

  15403  2 001277   200123 471500                    LDP1    NC$,,AUTO
         2 001300   100003 236100                    LDQ     3,,PR1
         2 001301   200125 756100                    STQ     NCMD$,,AUTO

      500    15404    2             S_D.NCMD$ = NCMD$;

  15404  2 001302   000000 473400 xsym               LDP3    S_D$
         2 001303   304750 756100                    STQ     2536,,PR3

      501    15405    2             ATT_SIZE = S_D.NCHARS;

  15405  2 001304   300065 235100                    LDA     53,,PR3
         2 001305   200160 755100                    STA     ATT_SIZE,,AUTO

      502    15406    2            ATTEXT$ = PINCRC( S_D.LASTBLT$, S_D.LASTBLT$ -> AT_FIRST.TEXT_OFFSET + S_D
             15406                      .LASTBLT$ -> AT_FIRST.TEXT_SIZE );

  15406  2 001306   300134 474500                    LDP4    92,,PR3
         2 001307   400006 236100                    LDQ     6,,PR4
         2 001310   777777 376007                    ANQ     -1,DL
         2 001311   200214 756100                    STQ     V+2,,AUTO
         2 001312   400006 236100                    LDQ     6,,PR4
PL6.E3A0      #001=DDS$SCAN File=DUS$SCAN.:E05TSI                                TUE 07/29/97 15:01 Page:83   
         2 001313   000022 772000                    QRL     18
         2 001314   200214 036100                    ADLQ    V+2,,AUTO
         2 001315   300134 474500                    LDP4    92,,PR3
         2 001316   000011 402007                    MPY     9,DL
         2 001317   400000 503506                    ABD     0,QL,PR4
         2 001320   200161 454500                    STP4    ATTEXT$,,AUTO

      503    15407    2             S_D.D$ = S_D.VARNEXT$;

  15407  2 001321   300033 236100                    LDQ     27,,PR3
         2 001322   300044 756100                    STQ     36,,PR3

      504    15408    2             CALL DDD$BUMP_D$(

  15408  2 001323   300134 470500                    LDP0    92,,PR3
         2 001324   000006 236100                    LDQ     6,,PR0
         2 001325   777777 376007                    ANQ     -1,DL
         2 001326   200160 036100                    ADLQ    ATT_SIZE,,AUTO
         2 001327   000003 036007                    ADLQ    3,DL
         2 001330   000002 772000                    QRL     2
         2 001331   200214 756100                    STQ     V+2,,AUTO
         2 001332   000006 236100                    LDQ     6,,PR0
         2 001333   777777 376007                    ANQ     -1,DL
         2 001334   000003 036007                    ADLQ    3,DL
         2 001335   000002 772000                    QRL     2
         2 001336   200215 756100                    STQ     V+3,,AUTO
         2 001337   200214 236100                    LDQ     V+2,,AUTO
         2 001340   200215 136100                    SBLQ    V+3,,AUTO
         2 001341   200216 756100                    STQ     V+4,,AUTO
         2 001342   200216 630500                    EPPR0   V+4,,AUTO
         2 001343   200217 450500                    STP0    V+5,,AUTO
         2 001344   200217 630500                    EPPR0   V+5,,AUTO
         2 001345   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 001346   000000 701000 xent               TSX1    DDD$BUMP_D$
         2 001347   001575 702000 2                  TSX2    USERRERR

      505    15409    2               ((S_D.LASTBLT$ -> AT_FIRST.TEXT_SIZE + ATT_SIZE + 3)/4) -
PL6.E3A0      #001=DDS$SCAN File=DUS$SCAN.:E05TSI                                TUE 07/29/97 15:01 Page:84   
      506    15410    2               ((S_D.LASTBLT$ -> AT_FIRST.TEXT_SIZE + 3)/4)
      507    15411    2               ) ALTRET( USERRERR );
      508    15412    2             S_D.LASTBLT$ -> AT_FIRST.TEXT_SIZE = S_D.LASTBLT$ -> AT_FIRST.TEXT_SIZE +
             15412                      ATT_SIZE;

  15412  2 001350   000000 470400 xsym               LDP0    S_D$
         2 001351   000134 471500                    LDP1    92,,PR0
         2 001352   100006 236100                    LDQ     6,,PR1
         2 001353   777777 376007                    ANQ     -1,DL
         2 001354   200160 036100                    ADLQ    ATT_SIZE,,AUTO
         2 001355   000000 620006                    EAX0    0,QL
         2 001356   100006 440100                    SXL0    6,,PR1

      509    15413    2             ATTEXT$ -> CHAR$ATT = S_D.INPUT;

  15413  2 001357   200161 471500                    LDP1    ATTEXT$,,AUTO
         2 001360   200160 720100                    LXL0    ATT_SIZE,,AUTO
         2 001361   040140 100500                    MLR     fill='040'O
         2 001362   000610 000400                    ADSC9   392,,PR0                 cn=0,n=256
         2 001363   100000 000010                    ADSC9   0,,PR1                   cn=0,n=*X0

      510    15414    2             S_D.LASTBLT$ -> AT_FIRST.LENGTH = POFFW( S_D.D$, S_D.LASTBLT$ );

  15414  2 001364   000134 473500                    LDP3    92,,PR0
         2 001365   000134 236100                    LDQ     92,,PR0
         2 001366   000022 772000                    QRL     18
         2 001367   200214 756100                    STQ     V+2,,AUTO
         2 001370   000044 236100                    LDQ     36,,PR0
         2 001371   000022 772000                    QRL     18
         2 001372   200214 136100                    SBLQ    V+2,,AUTO
         2 001373   000000 621006                    EAX1    0,QL
         2 001374   300000 441100                    SXL1    0,,PR3

      511    15415    2             S_D.VARNEXT$ = S_D.D$;

  15415  2 001375   000044 236100                    LDQ     36,,PR0
         2 001376   000033 756100                    STQ     27,,PR0
PL6.E3A0      #001=DDS$SCAN File=DUS$SCAN.:E05TSI                                TUE 07/29/97 15:01 Page:85   

      512    15416    2             S_D.FIXCOM.TAL( S_D.STORED ) = S_D.LASTBLT$ -> AT_FIRST.LENGTH;

  15416  2 001377   000135 236100                    LDQ     93,,PR0
         2 001400   000003 402007                    MPY     3,DL
         2 001401   000001 736000                    QLS     1
         2 001402   000134 473500                    LDP3    92,,PR0
         2 001403   300000 721100                    LXL1    0,,PR3
         2 001404   001212 441106                    SXL1    650,QL,PR0

      513    15417    2             CALL SET_TRAIL_SEMI;

  15417  2 001405   002500 701000 2                  TSX1    SET_TRAIL_SEMI
         2 001406   000000 011000                    NOP     0

      514    15418    2             IF TRAIL_SEMI

  15418  2 001407   200156 234100                    SZN     TRAIL_SEMI,,AUTO
         2 001410   000110 604000 2                  TMI     PARSMORE

      515    15419    2             THEN GOTO PARSMORE;
      516    15420    2           END;                            /* Continuation to a stored command */

      517    15421    1        IF S_D.STORED=0

  15421  2 001411   000000 470400 xsym               LDP0    S_D$
         2 001412   000135 235100                    LDA     93,,PR0
         2 001413   001415 601000 2                  TNZ     s:15424

      518    15422    1        THEN RETURN;

  15422  2 001414   000000 702200 xent               TSX2  ! X66_ARET

      519    15423        /* SET NEW LAST COMMAND, IF APPROPRIATE */
      520    15424    1        IF ( S_D.STORED > S_D.FIXLAST )

  15424  2 001415   000135 236100                    LDQ     93,,PR0
PL6.E3A0      #001=DDS$SCAN File=DUS$SCAN.:E05TSI                                TUE 07/29/97 15:01 Page:86   
         2 001416   000047 116100                    CMPQ    39,,PR0
         2 001417   001421 604400 2                  TMOZ    s:15426

      521    15425    1        THEN S_D.FIXLAST = S_D.STORED;

  15425  2 001420   000047 756100                    STQ     39,,PR0

      522    15426    1        IF SCAN1

  15426  2 001421   200154 234100                    SZN     SCAN1,,AUTO
         2 001422   000073 605000 2                  TPL     START

      523    15427    1        THEN RETURN;

  15427  2 001423   000000 702200 xent               TSX2  ! X66_ARET

      524    15428    1        ELSE GOTO START;
      525    15429        /**/
      526    15430        /*D* ERROR ENCOUNTERED DURING COMMAND BUILD. PRINT APPROPRIATE
      527    15431             ERROR MESSAGE, RELEASE ANY MEMORY ACQUIRED FROM FIXCOM/VARCOM,
      528    15432             AND START OVER AGAIN. */
      529    15433        /**/
      530    15434    1   USERR0A:
      531    15435    1        IF XUG_GETCMD.ERR#.CODE# = %E$SYNERR

  15435  2 001424   200051 236100       USERR0A      LDQ     XUG_GETCMD+1,,AUTO
         2 001425   377770 376007                    ANQ     131064,DL
         2 001426   000010 116007                    CMPQ    8,DL
         2 001427   001446 601000 2                  TNZ     USERR0

      532    15436    2        THEN DO;

      533    15437    2             IF S_D.RUM_COMMAND AND S_D.GHOST1

  15437  2 001430   000000 470400 xsym               LDP0    S_D$
         2 001431   000072 234100                    SZN     58,,PR0
         2 001432   001437 605000 2                  TPL     s:15439
PL6.E3A0      #001=DDS$SCAN File=DUS$SCAN.:E05TSI                                TUE 07/29/97 15:01 Page:87   
         2 001433   000605 234100                    SZN     389,,PR0
         2 001434   001437 605000 2                  TPL     s:15439

      534    15438    2             THEN S_D.RUM_SKIP = '1'B;

  15438  2 001435   400000 236003                    LDQ     -131072,DU
         2 001436   000051 756100                    STQ     41,,PR0

      535    15439    2             S_D.RUM_ERRORS = S_D.RUM_ERRORS + 1;

  15439  2 001437   000514 235100                    LDA     332,,PR0
         2 001440   000001 035007                    ADLA    1,DL
         2 001441   000514 755100                    STA     332,,PR0

      536    15440    2             S_D.RUM_TOTAL_ERRORS = S_D.RUM_TOTAL_ERRORS + 1;

  15440  2 001442   000515 235100                    LDA     333,,PR0
         2 001443   000001 035007                    ADLA    1,DL
         2 001444   000515 755100                    STA     333,,PR0

      537    15441    2             GOTO PARSMORE;

  15441  2 001445   000110 710000 2                  TRA     PARSMORE

      538    15442    2           END;
      539    15443    1   USERR0:
      540    15444    1        IF XUG_GETCMD.ERR#.CODE# = %E$SYNERR /* %E$SYNERR */

  15444  2 001446   200051 236100       USERR0       LDQ     XUG_GETCMD+1,,AUTO
         2 001447   377770 376007                    ANQ     131064,DL
         2 001450   000010 116007                    CMPQ    8,DL
         2 001451   001513 601000 2                  TNZ     s:15462

      541    15445    2        THEN DO;

      542    15446    2             IF MAERR ~= 0

PL6.E3A0      #001=DDS$SCAN File=DUS$SCAN.:E05TSI                                TUE 07/29/97 15:01 Page:88   
  15446  2 001452   200130 235100                    LDA     MAERR,,AUTO
         2 001453   001463 600000 2                  TZE     s:15453

      543    15447    3             THEN DO;

      544    15448    3                  S_D.ERROR = MAERR;

  15448  2 001454   000000 470400 xsym               LDP0    S_D$
         2 001455   000013 755100                    STA     11,,PR0

      545    15449    3                  S_D.ERROR_SYM$ = MAERR$;

  15449  2 001456   200131 236100                    LDQ     MAERR$,,AUTO
         2 001457   000032 756100                    STQ     26,,PR0

      546    15450    3                  S_D.ERROR_HICHAR = MACHAR;

  15450  2 001460   200152 235100                    LDA     MACHAR,,AUTO
         2 001461   004753 755100                    STA     2539,,PR0

      547    15451    3                END;

  15451  2 001462   001472 710000 2                  TRA     s:15456

      548    15452    3             ELSE DO;

      549    15453    3                  IF S_D.RUM_COMMAND AND S_D.GHOST1

  15453  2 001463   000000 470400 xsym               LDP0    S_D$
         2 001464   000072 234100                    SZN     58,,PR0
         2 001465   001472 605000 2                  TPL     s:15456
         2 001466   000605 234100                    SZN     389,,PR0
         2 001467   001472 605000 2                  TPL     s:15456

      550    15454    3                  THEN S_D.RUM_SKIP = '1'B;

  15454  2 001470   400000 236003                    LDQ     -131072,DU
PL6.E3A0      #001=DDS$SCAN File=DUS$SCAN.:E05TSI                                TUE 07/29/97 15:01 Page:89   
         2 001471   000051 756100                    STQ     41,,PR0

      551    15455    3                END;

      552    15456    2             XUG_GETCMD.ERR_CODE = XUG_GETCMD.ERR#;

  15456  2 001472   200051 236100                    LDQ     XUG_GETCMD+1,,AUTO
         2 001473   200060 756100                    STQ     XUG_GETCMD+8,,AUTO

      553    15457    2             XUG_GETCMD.DCB_PARAM# = D_M$DO#;

  15457  2 001474   000000 235000 xsym               LDA     D_M$DO#
         2 001475   200064 755100                    STA     XUG_GETCMD+12,,AUTO

      554    15458    2             CALL CXG$ERRPTR (XUG_GETCMD);

  15458  2 001476   200050 631500                    EPPR1   XUG_GETCMD,,AUTO
         2 001477   200214 451500                    STP1    V+2,,AUTO
         2 001500   200214 630500                    EPPR0   V+2,,AUTO
         2 001501   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 001502   000000 701000 xent               TSX1    CXG$ERRPTR
         2 001503   000000 011000                    NOP     0

      555    15459    2             CALL CXG$ERRMSG (XUG_GETCMD);

  15459  2 001504   200050 630500                    EPPR0   XUG_GETCMD,,AUTO
         2 001505   200214 450500                    STP0    V+2,,AUTO
         2 001506   200214 630500                    EPPR0   V+2,,AUTO
         2 001507   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 001510   000000 701000 xent               TSX1    CXG$ERRMSG
         2 001511   000000 011000                    NOP     0

      556    15460    2           END;

  15460  2 001512   001525 710000 2                  TRA     s:15466

      557    15461    2        ELSE DO;
PL6.E3A0      #001=DDS$SCAN File=DUS$SCAN.:E05TSI                                TUE 07/29/97 15:01 Page:90   

      558    15462    2             XUG_GETCMD.DCB_PARAM# = D_M$DO#;

  15462  2 001513   000000 235000 xsym               LDA     D_M$DO#
         2 001514   200064 755100                    STA     XUG_GETCMD+12,,AUTO

      559    15463    2             XUG_GETCMD.ERR_CODE = XUG_GETCMD.ERR#;

  15463  2 001515   200051 236100                    LDQ     XUG_GETCMD+1,,AUTO
         2 001516   200060 756100                    STQ     XUG_GETCMD+8,,AUTO

      560    15464    2             CALL CXG$ERRMSG (XUG_GETCMD);

  15464  2 001517   200050 630500                    EPPR0   XUG_GETCMD,,AUTO
         2 001520   200214 450500                    STP0    V+2,,AUTO
         2 001521   200214 630500                    EPPR0   V+2,,AUTO
         2 001522   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 001523   000000 701000 xent               TSX1    CXG$ERRMSG
         2 001524   000000 011000                    NOP     0

      561    15465    2           END;

      562    15466    1        S_D.RUM_ERRORS = S_D.RUM_ERRORS + 1;

  15466  2 001525   000000 470400 xsym               LDP0    S_D$
         2 001526   000514 235100                    LDA     332,,PR0
         2 001527   000001 035007                    ADLA    1,DL
         2 001530   000514 755100                    STA     332,,PR0

      563    15467    1        S_D.RUM_TOTAL_ERRORS = S_D.RUM_TOTAL_ERRORS + 1;

  15467  2 001531   000515 235100                    LDA     333,,PR0
         2 001532   000001 035007                    ADLA    1,DL
         2 001533   000515 755100                    STA     333,,PR0

      564    15468    1        GOTO TRY_AGAIN;

PL6.E3A0      #001=DDS$SCAN File=DUS$SCAN.:E05TSI                                TUE 07/29/97 15:01 Page:91   
  15468  2 001534   001647 710000 2                  TRA     TRY_AGAIN

      565    15469    1   USERR1: S_D.ERROR = 12; GOTO USERRERR; /* E@UERR1 */

  15469  2 001535   000014 236007       USERR1       LDQ     12,DL
         2 001536   000000 470400 xsym               LDP0    S_D$
         2 001537   000013 756100                    STQ     11,,PR0

  15469  2 001540   001575 710000 2                  TRA     USERRERR

      566    15470    1   UDERR1: S_D.ERROR = 501; GOTO USERRERR; /* E@DERR1 */

  15470  2 001541   000765 235007       UDERR1       LDA     501,DL
         2 001542   000000 470400 xsym               LDP0    S_D$
         2 001543   000013 755100                    STA     11,,PR0

  15470  2 001544   001575 710000 2                  TRA     USERRERR

      567    15471    1   UDERNC: S_D.ERROR = 136; GOTO USERRERR; /* E@SCAN1_CONT */

  15471  2 001545   000210 235007       UDERNC       LDA     136,DL
         2 001546   000000 470400 xsym               LDP0    S_D$
         2 001547   000013 755100                    STA     11,,PR0

  15471  2 001550   001575 710000 2                  TRA     USERRERR

      568    15472    1   USERSY: S_D.ERROR = 53; GOTO USERRERR; /* E@SYNTAX */

  15472  2 001551   000065 236007       USERSY       LDQ     53,DL
         2 001552   000013 756100                    STQ     11,,PR0

  15472  2 001553   001575 710000 2                  TRA     USERRERR

      569    15473    1   USERPA: S_D.ERROR = 115; GOTO USERRERR; /* E@NOT_IN_PATCH */

  15473  2 001554   000163 236007       USERPA       LDQ     115,DL
         2 001555   100013 756100                    STQ     11,,PR1
PL6.E3A0      #001=DDS$SCAN File=DUS$SCAN.:E05TSI                                TUE 07/29/97 15:01 Page:92   

  15473  2 001556   001575 710000 2                  TRA     USERRERR

      570    15474    1   USERNDE: S_D.ERROR = 125; GOTO USERRERR; /* E@NOTDELTA */

  15474  2 001557   000175 236007       USERNDE      LDQ     125,DL
         2 001560   100013 756100                    STQ     11,,PR1

  15474  2 001561   001575 710000 2                  TRA     USERRERR

      571    15475    1   USERNU: S_D.ERROR = 135; GOTO USERRERR; /* E@NULLCMD */

  15475  2 001562   000207 235007       USERNU       LDA     135,DL
         2 001563   000000 470400 xsym               LDP0    S_D$
         2 001564   000013 755100                    STA     11,,PR0

  15475  2 001565   001575 710000 2                  TRA     USERRERR

      572    15476    1   USERSK: S_D.ERROR = 224; GOTO USERRERR; /* E@RUMSKIP */

  15476  2 001566   000340 235007       USERSK       LDA     224,DL
         2 001567   000000 470400 xsym               LDP0    S_D$
         2 001570   000013 755100                    STA     11,,PR0

  15476  2 001571   001575 710000 2                  TRA     USERRERR

      573    15477    1   USERR7: S_D.ERROR = 18; GOTO USERRERR; /* E@UERR7 */

  15477  2 001572   000022 235007       USERR7       LDA     18,DL
         2 001573   100013 755100                    STA     11,,PR1

  15477  2 001574   001575 710000 2                  TRA     USERRERR

      574    15478    1   USERRERR:
      575    15479    1        IF SCAN2

  15479  2 001575   200155 234100       USERRERR     SZN     SCAN2,,AUTO
PL6.E3A0      #001=DDS$SCAN File=DUS$SCAN.:E05TSI                                TUE 07/29/97 15:01 Page:93   
         2 001576   001604 605000 2                  TPL     s:15481

      576    15480    1        THEN S_D.MACTIVE = S_D.REMACTIVE;

  15480  2 001577   000000 470400 xsym               LDP0    S_D$
         2 001600   000506 236100                    LDQ     326,,PR0
         2 001601   400000 376003                    ANQ     -131072,DU
         2 001602   000713 756100                    STQ     459,,PR0
         2 001603   001606 710000 2                  TRA     s:15482

      577    15481    1        ELSE S_D.MACTIVE = '0'B;

  15481  2 001604   000000 470400 xsym               LDP0    S_D$
         2 001605   000713 450100                    STZ     459,,PR0

      578    15482    1        IF SCAN1 AND S_D.ERROR = 135 /* E@NULLCMD */

  15482  2 001606   200154 234100                    SZN     SCAN1,,AUTO
         2 001607   001614 605000 2                  TPL     s:15485
         2 001610   000013 235100                    LDA     11,,PR0
         2 001611   000207 115007                    CMPA    135,DL
         2 001612   001614 601000 2                  TNZ     s:15485

      579    15483    2        THEN DO;                           /* Nothing! */

      580    15484    2           END;

  15484  2 001613   001617 710000 2                  TRA     SKIP_ERROR

      581    15485    1        ELSE CALL DDE$ERROR;

  15485  2 001614   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 001615   000000 701000 xent               TSX1    DDE$ERROR
         2 001616   000000 011000                    NOP     0

  15482  2 001617                       SKIP_ERROR   null
      582    15486
PL6.E3A0      #001=DDS$SCAN File=DUS$SCAN.:E05TSI                                TUE 07/29/97 15:01 Page:94   
      583    15487    1   SKIP_ERROR:;
      584    15488    1        IF S_D.STORED ~= 0

  15488  2 001617   000000 470400 xsym               LDP0    S_D$
         2 001620   000135 235100                    LDA     93,,PR0
         2 001621   001647 600000 2                  TZE     TRY_AGAIN

      585    15489    1        THEN IF S_D.FIXCOM.CMD(S_D.STORED) ~= 0

  15489  2 001622   000135 236100                    LDQ     93,,PR0
         2 001623   000003 402007                    MPY     3,DL
         2 001624   000001 736000                    QLS     1
         2 001625   001212 236106                    LDQ     650,QL,PR0
         2 001626   777000 316003                    CANQ    -512,DU
         2 001627   001647 600000 2                  TZE     TRY_AGAIN

      586    15490    2             THEN DO;            /* RELEASE MEMORY FROM VARCOM, & FIXCOM SLOT */

      587    15491    2                  S_D.VARNEXT$ = PINCRW(S_D.VARNEXT$,-S_D.FIXCOM.TAL(S_D.STORED));

  15491  2 001630   000135 236100                    LDQ     93,,PR0
         2 001631   000003 402007                    MPY     3,DL
         2 001632   000001 736000                    QLS     1
         2 001633   001212 720106                    LXL0    650,QL,PR0
         2 001634   000033 471500                    LDP1    27,,PR0
         2 001635   777777 620010                    EAX0    -1,X0
         2 001636   777777 660003                    ERX0    -1,DU
         2 001637   100000 633510                    EPPR3   0,X0,PR1
         2 001640   000033 453500                    STP3    27,,PR0

      588    15492    2                  S_D.FIXCOM.CMD(S_D.STORED) = 0;

  15492  2 001641   000135 236100                    LDQ     93,,PR0
         2 001642   000003 402007                    MPY     3,DL
         2 001643   000001 736000                    QLS     1
         2 001644   000000 620006                    EAX0    0,QL
         2 001645   000032 236000 xsym               LDQ     B_VECTNIL+26
PL6.E3A0      #001=DDS$SCAN File=DUS$SCAN.:E05TSI                                TUE 07/29/97 15:01 Page:95   
         2 001646   001212 356110                    ANSQ    650,X0,PR0

      589    15493    2                END;

  15492  2 001647                       TRY_AGAIN    null
      590    15494        /* TRY AGAIN */
      591    15495    1   TRY_AGAIN:;
      592    15496    1        IF SCAN1 OR ( SCAN2 AND NOT S_D.MACTIVE )

  15496  2 001647   200154 234100                    SZN     SCAN1,,AUTO
         2 001650   001655 604000 2                  TMI     s:15497
         2 001651   200155 234100                    SZN     SCAN2,,AUTO
         2 001652   000073 605000 2                  TPL     START
         2 001653   000713 234100                    SZN     459,,PR0
         2 001654   000073 604000 2                  TMI     START

      593    15497    1        THEN ALTRETURN;

  15497  2 001655   000000 702200 xent               TSX2  ! X66_AALT

      594    15498    1        ELSE GOTO START;
      595    15499        %EJECT;
PL6.E3A0      #001=DDS$SCAN File=DUS$SCAN.:E05TSI                                TUE 07/29/97 15:01 Page:96   
      596    15500        /*F* NAME: DDS$BLD_WHEN
      597    15501             PURPOSE: TO BUILD THE WHEN COMMAND.
      598    15502             DESCRIPTION: BUILDS THE WHEN STORED COMMAND "FIRST ATTACHMENT"
      599    15503             IN VARCOM. SETS UP THE FIELDS IN THE FIXCOM SLOT. BUILDS THE
      600    15504             OPTIONAL BYPASS COUNT (#) AND IFSPEC FIELDS IN THE FIRST
      601    15505             ATTACHMENT. EVALUATES & BUILDS THE POSITION. RETURNS IF BUILD
      602    15506             IS SUCCESSFUL, ELSE ALTRETURNS. */
      603    15507        /*D* NAME: DDS$BLD_WHEN
      604    15508             INTERFACE:
      605    15509             ENVIRONMENT: DDS$SCAN ACTIVE.
      606    15510             INPUT: S_D.STORED - COMMAND ID.
      607    15511                    NCMD$ - POINTER TO N_WHEN NODE.
      608    15512             OUTPUT: S_D.D$ - POINTER TO NEXT FREE WORD IN VARCOM.
      609    15513             SCRATCH: LOCAL AUTO ONLY
      610    15514             DESCRIPTION: BUILDS THE WHEN STORED COMMAND "FIRST ATTACHMENT"
      611    15515             IN VARCOM. SETS UP THE FIELDS IN THE FIXCOM SLOT. BUILDS THE
      612    15516             OPTIONAL BYPASS COUNT (#) AND IFSPEC FIELDS IN THE FIRST
      613    15517             ATTACHMENT. EVALUATES & BUILDS THE POSITION. RETURNS IF BUILD
      614    15518             IS SUCCESSFUL, ELSE ALTRETURNS. */
      615    15519                                                /**/
      616    15520    1   DDS$BLD_WHEN: PROC ALTRET;

  15520  2 001656   200170 741300       DDS$BLD_WHEN STX1  ! ZITEM$+4,,AUTO

      617    15521                                                /**/
      618    15522    2   DCL IXX SBIN;
      619    15523    2   DCL IXXX SBIN;
      620    15524    2   DCL UBIN36 UBIN(36) BASED;
      621    15525    2   DCL TCODE SBIN;
      622    15526    2   DCL TCODEC UBIN;
      623    15527    2   DCL NCC$ PTR;
      624    15528    2   DCL L$ PTR;
      625    15529    2   DCL S1$ PTR;
      626    15530    2   DCL S2$ PTR;
      627    15531    2   DCL CHAR22 CHAR(22) BASED;
      628    15532    2   DCL BB$ PTR;
      629    15533    2   DCL SIZE UBIN;
PL6.E3A0      #001=DDS$SCAN File=DUS$SCAN.:E05TSI                                TUE 07/29/97 15:01 Page:97   
      630    15534    2   DCL WOFF UBIN;
      631    15535    2   DCL SILENT BIT(1) ALIGNED;
      632    15536    2   DCL INACTIVE BIT(1) ALIGNED;
      633    15537    2   DCL 1 BUFF$ER BASED ALIGNED,
      634    15538    2         2 * CHAR( TCODEC );
      635    15539    2   DCL WHEN$ PTR;
      636    15540    2   DCL DDK$EVAL ENTRY(6) ALTRET;
      637    15541    2   DCL DDK$GETWVAL ENTRY(6) ALTRET;
      638    15542        %WHEN_FIRST (NAME=WHEN$CMD,STCLASS="BASED(LASTBLT$)");
      639    15579        %FPRG$CONTEXT;
      640    15642                                                /**/
      641    15643        /*   IF B$JIT.UNAME = '350COHEN'
      642    15644             THEN DO;
      643    15645                  S_D.ERROR = E@WHENCOHEN;
      644    15646                  GOTO ALTRT;
      645    15647                END;  */
      646    15648    2        IF S_D.ONE_TO_TWO.EXEC_DOMAIN = %L6

  15648  2 001657   000000 470400 xsym               LDP0    S_D$
         2 001660   006714 235100                    LDA     3532,,PR0
         2 001661   000002 115007                    CMPA    2,DL
         2 001662   001666 601000 2                  TNZ     s:15666

      647    15649    3        THEN DO;

      648    15650    3             S_D.ERROR = 331;  /* E@CMDNOTSUPPORT */

  15650  2 001663   000513 236007                    LDQ     331,DL
         2 001664   000013 756100                    STQ     11,,PR0

      649    15651    3             GOTO ALTRT;

  15651  2 001665   002405 710000 2                  TRA     ALTRT

      650    15652    3           END;
      651    15653        /*   IF S_D.FPRG AND S_D.CURRENT_FPRG_CONTEXT$ ~= ADDR(NIL)
      652    15654             THEN DO;
PL6.E3A0      #001=DDS$SCAN File=DUS$SCAN.:E05TSI                                TUE 07/29/97 15:01 Page:98   
      653    15655                  IF S_D.CURRENT_FPRG_CONTEXT$ -> FPRG$CONTEXT.INTERPRETIVE
      654    15656                  THEN DO;
      655    15657                       S_D.ERROR = E@NOT_INTERPRETIVE;
      656    15658                       GOTO ALTRT;
      657    15659                     END;
      658    15660                END;
      659    15661             ELSE IF S_D.FPRG AND S_D.CURRENT_FPRG_CONTEXT$ = ADDR(NIL)
      660    15662                  THEN DO;
      661    15663                       S_D.ERROR = E@DELBUG;
      662    15664                       GOTO ALTRT;
      663    15665                     END; */
      664    15666    2        SILENT = '0'B;

  15666  2 001666   200204 450100                    STZ     SILENT,,AUTO

      665    15667    2        LASTBLT$ = S_D.LASTBLT$;

  15667  2 001667   000134 236100                    LDQ     92,,PR0
         2 001670   200153 756100                    STQ     LASTBLT$,,AUTO

      666    15668    2        INACTIVE = '0'B;

  15668  2 001671   200205 450100                    STZ     INACTIVE,,AUTO

      667    15669    3        DO IXX = 0 TO NCMD$ -> POB.NSB - 1;

  15669  2 001672   200171 450100                    STZ     IXX,,AUTO
         2 001673   002343 710000 2                  TRA     s:15767+1

      668    15670    3             NCC$ = NCMD$ -> POB.SUBLK$( IXX ); /* GET POINTER TO NEXT LEVEL NODE */

  15670  2 001674   200125 470500                    LDP0    NCMD$,,AUTO
         2 001675   200171 720100                    LXL0    IXX,,AUTO
         2 001676   000003 236110                    LDQ     3,X0,PR0
         2 001677   200175 756100                    STQ     NCC$,,AUTO

      669    15671    3             TCODE = NCC$ -> POB.CODE;     /* PICK UP CODE */
PL6.E3A0      #001=DDS$SCAN File=DUS$SCAN.:E05TSI                                TUE 07/29/97 15:01 Page:99   

  15671  2 001700   200175 471500                    LDP1    NCC$,,AUTO
         2 001701   100000 236100                    LDQ     0,,PR1
         2 001702   777777 376007                    ANQ     -1,DL
         2 001703   200173 756100                    STQ     TCODE,,AUTO

      670    15672    3             L$ = S_D.D$;

  15672  2 001704   000000 473400 xsym               LDP3    S_D$
         2 001705   300044 236100                    LDQ     36,,PR3
         2 001706   200176 756100                    STQ     L$,,AUTO

      671    15673    3             IF ( TCODE = 38 )      /* VREF_CODE */

  15673  2 001707   200173 235100                    LDA     TCODE,,AUTO
         2 001710   000046 115007                    CMPA    38,DL
         2 001711   002250 601000 2                  TNZ     s:15744

      672    15674    4             THEN DO;

      673    15675        /*D* Build WHEN vref data descriptor in fixed command buffer (DIRCOM) so
      674    15676             that default schema is setup correctly before building IFSPEC.
      675    15677             Copy WHEN vref data descriptor to stored command buffer (VARCOM)
      676    15678             after IFSPEC is built. */
      677    15679    4                  CALL WHEN_INIT ALTRET( ALTRT );

  15679  2 001712   002616 701000 2                  TSX1    WHEN_INIT
         2 001713   002405 702000 2                  TSX2    ALTRT

      678    15680    4                  CALL DDS$ATTDIRA( SIZEW( WHEN$CMD ), 67 ) ALTRET( ALTRT );
             15680                           /* C_WHEN */

  15680  2 001714   000023 630400 3                  EPPR0   19
         2 001715   000020 631400 xsym               EPPR1   B_VECTNIL+16
         2 001716   000000 701000 xent               TSX1    DDS$ATTDIRA
         2 001717   002405 702000 2                  TSX2    ALTRT

PL6.E3A0      #001=DDS$SCAN File=DUS$SCAN.:E05TSI                                TUE 07/29/97 15:01 Page:100  
      679    15681    4                  S1$ = S_D.D$;

  15681  2 001720   000000 470400 xsym               LDP0    S_D$
         2 001721   000044 236100                    LDQ     36,,PR0
         2 001722   200177 756100                    STQ     S1$,,AUTO

      680    15682    4                  CALL DDS$VREFCOM( NCC$ ) ALTRET( ALTRT );

  15682  2 001723   200175 631500                    EPPR1   NCC$,,AUTO
         2 001724   200214 451500                    STP1    V+2,,AUTO
         2 001725   200214 630500                    EPPR0   V+2,,AUTO
         2 001726   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 001727   000000 701000 xent               TSX1    DDS$VREFCOM
         2 001730   002405 702000 2                  TSX2    ALTRT

      681    15683    4                  VCPOS = NCC$ -> POB.SUBLK$(0) -> POB.CPOS;

  15683  2 001731   200175 470500                    LDP0    NCC$,,AUTO
         2 001732   000003 471500                    LDP1    3,,PR0
         2 001733   100002 235100                    LDA     2,,PR1
         2 001734   200162 755100                    STA     VCPOS,,AUTO

      682    15684    4                  WOFF = POFFW(S_D.D$, S_D.DESC$) + SIZEW(WHEN$CMD);

  15684  2 001735   000000 473400 xsym               LDP3    S_D$
         2 001736   300041 236100                    LDQ     33,,PR3
         2 001737   000022 772000                    QRL     18
         2 001740   200214 756100                    STQ     V+2,,AUTO
         2 001741   300044 236100                    LDQ     36,,PR3
         2 001742   000022 772000                    QRL     18
         2 001743   200214 136100                    SBLQ    V+2,,AUTO
         2 001744   000021 036007                    ADLQ    17,DL
         2 001745   200203 756100                    STQ     WOFF,,AUTO

      683    15685    4                  S2$ = S_D.D$;

  15685  2 001746   300044 236100                    LDQ     36,,PR3
PL6.E3A0      #001=DDS$SCAN File=DUS$SCAN.:E05TSI                                TUE 07/29/97 15:01 Page:101  
         2 001747   200200 756100                    STQ     S2$,,AUTO

      684    15686    4                  CALL DDS$SET_Q2D;

  15686  2 001750   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 001751   000000 701000 xent               TSX1    DDS$SET_Q2D
         2 001752   000000 011000                    NOP     0

      685    15687    4                  CALL STORED_INIT ALTRET( ALTRT );

  15687  2 001753   002627 701000 2                  TSX1    STORED_INIT
         2 001754   002405 702000 2                  TSX2    ALTRT

      686    15688    4                  CALL DDS$STOREDA( SIZEW( WHEN$CMD ), 67 ) ALTRET( ALTRT );

  15688  2 001755   000023 630400 3                  EPPR0   19
         2 001756   000020 631400 xsym               EPPR1   B_VECTNIL+16
         2 001757   000000 701000 xent               TSX1    DDS$STOREDA
         2 001760   002405 702000 2                  TSX2    ALTRT

      687    15689    4                  L$ = S_D.D$;

  15689  2 001761   000000 470400 xsym               LDP0    S_D$
         2 001762   000044 236100                    LDQ     36,,PR0
         2 001763   200176 756100                    STQ     L$,,AUTO

      688    15690    4                  TCODEC = POFFC( S2$, S1$ );

  15690  2 001764   200177 236100                    LDQ     S1$,,AUTO
         2 001765   000020 772000                    QRL     16
         2 001766   200214 756100                    STQ     V+2,,AUTO
         2 001767   200200 236100                    LDQ     S2$,,AUTO
         2 001770   000020 772000                    QRL     16
         2 001771   200214 136100                    SBLQ    V+2,,AUTO
         2 001772   200174 756100                    STQ     TCODEC,,AUTO

      689    15691    4                  TCODE = TCODEC / LENGTHC( TCODEC );
PL6.E3A0      #001=DDS$SCAN File=DUS$SCAN.:E05TSI                                TUE 07/29/97 15:01 Page:102  

  15691  2 001773   000002 772000                    QRL     2
         2 001774   200173 756100                    STQ     TCODE,,AUTO

      690    15692    4                  S_D.FIXCOM.CDF( S_D.STORED ) = POFFW( L$, S_D.LASTBLT$ );
             15692                           /* Offset to WHEN vref */

  15692  2 001775   000135 236100                    LDQ     93,,PR0
         2 001776   000003 402007                    MPY     3,DL
         2 001777   000001 736000                    QLS     1
         2 002000   000000 620006                    EAX0    0,QL
         2 002001   000134 236100                    LDQ     92,,PR0
         2 002002   000022 772000                    QRL     18
         2 002003   200214 756100                    STQ     V+2,,AUTO
         2 002004   200176 236100                    LDQ     L$,,AUTO
         2 002005   000022 772000                    QRL     18
         2 002006   200214 136100                    SBLQ    V+2,,AUTO
         2 002007   001213 756110                    STQ     651,X0,PR0

      691    15693    4                  S_D.FIXCOM.SILENT( S_D.STORED ) = SILENT;

  15693  2 002010   000135 236100                    LDQ     93,,PR0
         2 002011   000003 402007                    MPY     3,DL
         2 002012   000001 736000                    QLS     1
         2 002013   000000 620006                    EAX0    0,QL
         2 002014   200204 236100                    LDQ     SILENT,,AUTO
         2 002015   000012 772000                    QRL     10
         2 002016   001212 676110                    ERQ     650,X0,PR0
         2 002017   000200 376003                    ANQ     128,DU
         2 002020   001212 656110                    ERSQ    650,X0,PR0

      692    15694    4                  S_D.FIXCOM.INACTIVE( S_D.STORED ) = INACTIVE;

  15694  2 002021   000135 236100                    LDQ     93,,PR0
         2 002022   000003 402007                    MPY     3,DL
         2 002023   000001 736000                    QLS     1
         2 002024   000000 620006                    EAX0    0,QL
PL6.E3A0      #001=DDS$SCAN File=DUS$SCAN.:E05TSI                                TUE 07/29/97 15:01 Page:103  
         2 002025   200205 236100                    LDQ     INACTIVE,,AUTO
         2 002026   000011 772000                    QRL     9
         2 002027   001212 676110                    ERQ     650,X0,PR0
         2 002030   000400 376003                    ANQ     256,DU
         2 002031   001212 656110                    ERSQ    650,X0,PR0

      693    15695    4                  WHEN$CMD.OVALUE$ = ADDR( NIL );

  15695  2 002032   000001 236000 xsym               LDQ     B_VECTNIL+1
         2 002033   200153 471500                    LDP1    LASTBLT$,,AUTO
         2 002034   100002 756100                    STQ     2,,PR1

      694    15696    4                  WHEN$CMD.U.CONST_OFFSET = WOFF;

  15696  2 002035   200203 720100                    LXL0    WOFF,,AUTO
         2 002036   100001 740100                    STX0    1,,PR1

      695    15697    4                  CALL DDD$BUMP_D$( TCODE ) ALTRET( ALTRT );

  15697  2 002037   200173 633500                    EPPR3   TCODE,,AUTO
         2 002040   200214 453500                    STP3    V+2,,AUTO
         2 002041   200214 630500                    EPPR0   V+2,,AUTO
         2 002042   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 002043   000000 701000 xent               TSX1    DDD$BUMP_D$
         2 002044   002405 702000 2                  TSX2    ALTRT

      696    15698    4                  L$ -> BUFF$ER = S1$ -> BUFF$ER;

  15698  2 002045   200177 470500                    LDP0    S1$,,AUTO
         2 002046   200174 720100                    LXL0    TCODEC,,AUTO
         2 002047   200176 471500                    LDP1    L$,,AUTO
         2 002050   000140 100540                    MLR     fill='000'O
         2 002051   000000 000010                    ADSC9   0,,PR0                   cn=0,n=*X0
         2 002052   100000 000010                    ADSC9   0,,PR1                   cn=0,n=*X0

      697    15699    4                  S_D.DESC$ = L$;

PL6.E3A0      #001=DDS$SCAN File=DUS$SCAN.:E05TSI                                TUE 07/29/97 15:01 Page:104  
  15699  2 002053   200176 236100                    LDQ     L$,,AUTO
         2 002054   000000 473400 xsym               LDP3    S_D$
         2 002055   300041 756100                    STQ     33,,PR3

      698    15700    4                  CALL DDK$EVAL (WHEN$CMD.ADDRESS, WHEN$CMD.SEG, WHEN$CMD.DESC#,

  15700  2 002056   200153 236100                    LDQ     LASTBLT$,,AUTO
         2 002057   000016 036003                    ADLQ    14,DU
         2 002060   200221 756100                    STQ     V+7,,AUTO
         2 002061   200153 236100                    LDQ     LASTBLT$,,AUTO
         2 002062   000017 036003                    ADLQ    15,DU
         2 002063   200220 756100                    STQ     V+6,,AUTO
         2 002064   200153 236100                    LDQ     LASTBLT$,,AUTO
         2 002065   000015 036003                    ADLQ    13,DU
         2 002066   200217 756100                    STQ     V+5,,AUTO
         2 002067   200153 236100                    LDQ     LASTBLT$,,AUTO
         2 002070   000014 036003                    ADLQ    12,DU
         2 002071   200216 756100                    STQ     V+4,,AUTO
         2 002072   200153 236100                    LDQ     LASTBLT$,,AUTO
         2 002073   000013 036003                    ADLQ    11,DU
         2 002074   200215 756100                    STQ     V+3,,AUTO
         2 002075   200153 236100                    LDQ     LASTBLT$,,AUTO
         2 002076   000012 036003                    ADLQ    10,DU
         2 002077   200214 756100                    STQ     V+2,,AUTO
         2 002100   200214 630500                    EPPR0   V+2,,AUTO
         2 002101   000024 631400 xsym               EPPR1   B_VECTNIL+20
         2 002102   000000 701000 xent               TSX1    DDK$EVAL
         2 002103   002405 702000 2                  TSX2    ALTRT

      699    15701    4                    WHEN$CMD.NOT_IS, WHEN$CMD.BOFF, WHEN$CMD.BSIZE) ALTRET(ALTRT);
      700    15702    4                  IF L$ -> ZITEM.DTYP = %RANG1_DTYP

  15702  2 002104   200176 470500                    LDP0    L$,,AUTO
         2 002105   000001 236100                    LDQ     1,,PR0
         2 002106   000777 376003                    ANQ     511,DU
         2 002107   000001 116003                    CMPQ    1,DU
         2 002110   002117 601000 2                  TNZ     s:15704
PL6.E3A0      #001=DDS$SCAN File=DUS$SCAN.:E05TSI                                TUE 07/29/97 15:01 Page:105  

      701    15703    4                  THEN WHEN$CMD.BSIZE = WHEN$CMD.BSIZE * (S_D.ARRAY.HIGH + 1);

  15703  2 002111   200153 471500                    LDP1    LASTBLT$,,AUTO
         2 002112   000000 473400 xsym               LDP3    S_D$
         2 002113   300717 236100                    LDQ     463,,PR3
         2 002114   000001 036007                    ADLQ    1,DL
         2 002115   100016 402100                    MPY     14,,PR1
         2 002116   100016 756100                    STQ     14,,PR1

      702    15704    5                  IF WHEN$CMD.BSIZE > SIZEB(S_D.OUTPUT) THEN DO;

  15704  2 002117   200153 471500                    LDP1    LASTBLT$,,AUTO
         2 002120   100016 235100                    LDA     14,,PR1
         2 002121   044001 115007                    CMPA    18433,DL
         2 002122   002144 602000 2                  TNC     s:15709

      703    15705    5                       WHEN$CMD.BSIZE = SIZEB(S_D.OUTPUT);

  15705  2 002123   044000 236007                    LDQ     18432,DL
         2 002124   100016 756100                    STQ     14,,PR1

      704    15706    5                       S_D.OUTPUT = 'When Variable Too Big - 2048 Bytes Used.';

  15706  2 002125   000000 473400 xsym               LDP3    S_D$
         2 002126   040100 100400                    MLR     fill='040'O
         2 002127   000124 000050 1                  ADSC9   SKILLA+1                 cn=0,n=40
         2 002130   305335 004000                    ADSC9   2781,,PR3                cn=0,n=2048

      705    15707    5                       CALL DDQ$WRITE(ADDR(S_D.OUTPUT), SIZEC(
             15707                                'When Variable Too Big - 2048 Bytes Used.'));

  15707  2 002131   000000 236000 xsym               LDQ     S_D$
         2 002132   005335 036003                    ADLQ    2781,DU
         2 002133   200214 756100                    STQ     V+2,,AUTO
         2 002134   000026 236000 3                  LDQ     22
         2 002135   200217 756100                    STQ     V+5,,AUTO
PL6.E3A0      #001=DDS$SCAN File=DUS$SCAN.:E05TSI                                TUE 07/29/97 15:01 Page:106  
         2 002136   200214 634500                    EPPR4   V+2,,AUTO
         2 002137   200216 454500                    STP4    V+4,,AUTO
         2 002140   200216 630500                    EPPR0   V+4,,AUTO
         2 002141   000020 631400 xsym               EPPR1   B_VECTNIL+16
         2 002142   000000 701000 xent               TSX1    DDQ$WRITE
         2 002143   000000 011000                    NOP     0

      706    15708    5                     END;

      707    15709    4                  IF WHEN$CMD.NOT_IS

  15709  2 002144   200153 470500                    LDP0    LASTBLT$,,AUTO
         2 002145   000015 234100                    SZN     13,,PR0
         2 002146   002167 605000 2                  TPL     s:15725

      708    15710    5                  THEN DO;

      709    15711    5                       IF WHEN$CMD.SEG = 3

  15711  2 002147   000013 235100                    LDA     11,,PR0
         2 002150   000003 115007                    CMPA    3,DL
         2 002151   002163 601000 2                  TNZ     s:15721

      710    15712    6                       THEN DO;

      711    15713    6                            IF WHEN$CMD.DESC# - 3 < 1 OR

  15713  2 002152   000014 235100                    LDA     12,,PR0
         2 002153   000004 115007                    CMPA    4,DL
         2 002154   002157 602000 2                  TNC     s:15716
         2 002155   000014 115007                    CMPA    12,DL
         2 002156   002167 602000 2                  TNC     s:15725

      712    15714    6                              WHEN$CMD.DESC# - 3 > 8
      713    15715    7                            THEN DO;

      714    15716    7                                 S_D.ERROR = 208; /* E@WHEN_NOTIS_OR_DS */
PL6.E3A0      #001=DDS$SCAN File=DUS$SCAN.:E05TSI                                TUE 07/29/97 15:01 Page:107  

  15716  2 002157   000320 236007                    LDQ     208,DL
         2 002160   000000 471400 xsym               LDP1    S_D$
         2 002161   100013 756100                    STQ     11,,PR1

      715    15717    7                                 GOTO ALTRT;

  15717  2 002162   002405 710000 2                  TRA     ALTRT

      716    15718    7                               END;
      717    15719    6                          END;
      718    15720    6                       ELSE DO;

      719    15721    6                            S_D.ERROR = 208; /* E@WHEN_NOTIS_OR_DS */

  15721  2 002163   000320 236007                    LDQ     208,DL
         2 002164   000000 471400 xsym               LDP1    S_D$
         2 002165   100013 756100                    STQ     11,,PR1

      720    15722    6                            GOTO ALTRT;

  15722  2 002166   002405 710000 2                  TRA     ALTRT

      721    15723    6                          END;
      722    15724    5                     END;
      723    15725    4                  WHEN$CMD.START_PAGE = WHEN$CMD.ADDRESS/1024;

  15725  2 002167   000012 236100                    LDQ     10,,PR0
         2 002170   000012 772000                    QRL     10
         2 002171   000000 620006                    EAX0    0,QL
         2 002172   000020 740100                    STX0    16,,PR0

      724    15726    4                  WHEN$CMD.END_PAGE = (WHEN$CMD.ADDRESS + (WHEN$CMD.BOFF + WHEN$CMD.
             15726                           BSIZE - 1)/36)/1024;

  15726  2 002173   000017 236100                    LDQ     15,,PR0
         2 002174   000016 036100                    ADLQ    14,,PR0
PL6.E3A0      #001=DDS$SCAN File=DUS$SCAN.:E05TSI                                TUE 07/29/97 15:01 Page:108  
         2 002175   000001 136007                    SBLQ    1,DL
         2 002176   000044 506007                    DIV     36,DL
         2 002177   000012 036100                    ADLQ    10,,PR0
         2 002200   000012 772000                    QRL     10
         2 002201   000000 621006                    EAX1    0,QL
         2 002202   000020 441100                    SXL1    16,,PR0

      725    15727    4                  IF ( NOT L$ -> ZITEM.FLAGS.MDSE.M )

  15727  2 002203   200176 471500                    LDP1    L$,,AUTO
         2 002204   100001 234100                    SZN     1,,PR1
         2 002205   002212 604000 2                  TMI     s:15732

      726    15728    5                  THEN DO;

      727    15729    5                       S_D.ERROR = 42; /* E@NOMOD */

  15729  2 002206   000052 235007                    LDA     42,DL
         2 002207   000000 473400 xsym               LDP3    S_D$
         2 002210   300013 755100                    STA     11,,PR3

      728    15730    5                       GOTO ALTRT;

  15730  2 002211   002405 710000 2                  TRA     ALTRT

      729    15731    5                     END;
      730    15732    4                 IF ( NOT L$ -> ZITEM.FLAGS.MDSE.E ) AND ( L$ -> ZITEM.FLAGS.ADDREXP )

  15732  2 002212   100001 236100                    LDQ     1,,PR1
         2 002213   040000 316003                    CANQ    16384,DU
         2 002214   002223 601000 2                  TNZ     s:15737
         2 002215   020000 316003                    CANQ    8192,DU
         2 002216   002223 600000 2                  TZE     s:15737

      731    15733    5                 THEN DO; /* CAN'T HAVE NON-MODIFYABLE SPECIAL SYMBOL IN EXPRESSION */

      732    15734    5                       S_D.ERROR = 87; /* E@EXPNOTVALID */
PL6.E3A0      #001=DDS$SCAN File=DUS$SCAN.:E05TSI                                TUE 07/29/97 15:01 Page:109  

  15734  2 002217   000127 235007                    LDA     87,DL
         2 002220   000000 473400 xsym               LDP3    S_D$
         2 002221   300013 755100                    STA     11,,PR3

      733    15735    5                       GOTO ALTRT;

  15735  2 002222   002405 710000 2                  TRA     ALTRT

      734    15736    5                     END;
      735    15737    4                  TCODEC = TCODE;

  15737  2 002223   200173 235100                    LDA     TCODE,,AUTO
         2 002224   200174 755100                    STA     TCODEC,,AUTO

      736    15738    4                  TCODE = S_D.UNODE.USENODE;

  15738  2 002225   000000 473400 xsym               LDP3    S_D$
         2 002226   304760 235100                    LDA     2544,,PR3
         2 002227   200173 755100                    STA     TCODE,,AUTO

      737    15739    4                  WHEN$CMD.NODE = TCODE;

  15739  2 002230   000000 620005                    EAX0    0,AL
         2 002231   000003 740100                    STX0    3,,PR0

      738    15740    4                  IF S_D.OVERLAID

  15740  2 002232   304764 234100                    SZN     2548,,PR3
         2 002233   002342 605000 2                  TPL     s:15767

      739    15741    4                  THEN IF NOT S_D.B$TREE$ -> B$NODE.FLGS.NOW_IN( TCODE )

  15741  2 002234   304767 474500                    LDP4    2551,,PR3
         2 002235   200173 236100                    LDQ     TCODE,,AUTO
         2 002236   000006 402007                    MPY     6,DL
         2 002237   400001 234106                    SZN     1,QL,PR4
PL6.E3A0      #001=DDS$SCAN File=DUS$SCAN.:E05TSI                                TUE 07/29/97 15:01 Page:110  
         2 002240   002342 604000 2                  TMI     s:15767

      740    15742    4                       THEN S_D.FIXCOM.NOT_IN( S_D.STORED ) = '1'B;

  15742  2 002241   300135 236100                    LDQ     93,,PR3
         2 002242   000003 402007                    MPY     3,DL
         2 002243   000001 736000                    QLS     1
         2 002244   000000 621006                    EAX1    0,QL
         2 002245   000100 236003                    LDQ     64,DU
         2 002246   301212 256111                    ORSQ    650,X1,PR3

      741    15743    4                END;

  15743  2 002247   002342 710000 2                  TRA     s:15767

      742    15744    3             ELSE IF ( TCODE >= 1 ) AND ( TCODE <= 6 ) /* C@GREATER, C@EQUALS */

  15744  2 002250   000000 115003                    CMPA    0,DU
         2 002251   002257 604400 2                  TMOZ    s:15746
         2 002252   000006 115007                    CMPA    6,DL
         2 002253   002257 605400 2                  TPNZ    s:15746

      743    15745    3                  THEN WHEN$CMD.WCOND = TCODE;

  15745  2 002254   200153 474500                    LDP4    LASTBLT$,,AUTO
         2 002255   400011 755100                    STA     9,,PR4
         2 002256   002342 710000 2                  TRA     s:15767

      744    15746    3                  ELSE IF ( TCODE = 17 ) /* C@CNSNT_REF */

  15746  2 002257   000021 115007                    CMPA    17,DL
         2 002260   002303 601000 2                  TNZ     s:15752

      745    15747    4                       THEN DO;

      746    15748    4                            CALL DDD$BUMP_D$( SIZEW( IF$CONST ) ) ALTRET( ALTRT );

PL6.E3A0      #001=DDS$SCAN File=DUS$SCAN.:E05TSI                                TUE 07/29/97 15:01 Page:111  
  15748  2 002261   000030 630400 3                  EPPR0   24
         2 002262   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 002263   000000 701000 xent               TSX1    DDD$BUMP_D$
         2 002264   002405 702000 2                  TSX2    ALTRT

      747    15749    4                           CALL DDS$CNSNT( NCC$, L$ -> TEXT$C, TCODE ) ALTRET( ALTRT )
             15749                                     ;

  15749  2 002265   200173 630500                    EPPR0   TCODE,,AUTO
         2 002266   200216 450500                    STP0    V+4,,AUTO
         2 002267   200176 236100                    LDQ     L$,,AUTO
         2 002270   200215 756100                    STQ     V+3,,AUTO
         2 002271   200175 631500                    EPPR1   NCC$,,AUTO
         2 002272   200214 451500                    STP1    V+2,,AUTO
         2 002273   200214 630500                    EPPR0   V+2,,AUTO
         2 002274   000021 631400 xsym               EPPR1   B_VECTNIL+17
         2 002275   000000 701000 xent               TSX1    DDS$CNSNT
         2 002276   002405 702000 2                  TSX2    ALTRT

      748    15750    4                            WHEN$CMD.WCTYPE = TCODE;

  15750  2 002277   200173 235100                    LDA     TCODE,,AUTO
         2 002300   200153 470500                    LDP0    LASTBLT$,,AUTO
         2 002301   000010 755100                    STA     8,,PR0

      749    15751    4                          END;

  15751  2 002302   002342 710000 2                  TRA     s:15767

      750    15752    3                       ELSE IF ( TCODE = 42 ) /* C@N_AT11 */

  15752  2 002303   000052 115007                    CMPA    42,DL
         2 002304   002325 601000 2                  TNZ     s:15759

      751    15753    4                            THEN DO;       /* N_WHEN11 - BYPASS COUNT */

      752    15754    4                                 NCC$ = NCC$ -> POB.SUBLK$( 0 );
PL6.E3A0      #001=DDS$SCAN File=DUS$SCAN.:E05TSI                                TUE 07/29/97 15:01 Page:112  
             15754                                          /* POINT TO TEXT ( DECIMAL LEXEME ) */

  15754  2 002305   100003 236100                    LDQ     3,,PR1
         2 002306   200175 756100                    STQ     NCC$,,AUTO

      753    15755    4                                 CALL DDS$DECIMAL( NCC$, TCODE ) ALTRET( ALTRT );
             15755                                          /* GET THE NUMBER */

  15755  2 002307   200173 631500                    EPPR1   TCODE,,AUTO
         2 002310   200215 451500                    STP1    V+3,,AUTO
         2 002311   200175 634500                    EPPR4   NCC$,,AUTO
         2 002312   200214 454500                    STP4    V+2,,AUTO
         2 002313   200214 630500                    EPPR0   V+2,,AUTO
         2 002314   000020 631400 xsym               EPPR1   B_VECTNIL+16
         2 002315   000000 701000 xent               TSX1    DDS$DECIMAL
         2 002316   002405 702000 2                  TSX2    ALTRT

      754    15756    4                                 WHEN$CMD.BYPASS_COUNT = TCODE;

  15756  2 002317   200153 470500                    LDP0    LASTBLT$,,AUTO
         2 002320   200173 235100                    LDA     TCODE,,AUTO
         2 002321   000004 755100                    STA     4,,PR0

      755    15757    4                                 WHEN$CMD.CURRENT_COUNT = TCODE;

  15757  2 002322   200173 236100                    LDQ     TCODE,,AUTO
         2 002323   000005 756100                    STQ     5,,PR0

      756    15758    4                               END;

  15758  2 002324   002342 710000 2                  TRA     s:15767

      757    15759    3                            ELSE IF ( TCODE = 100 ) /* C@SILENT */

  15759  2 002325   000144 115007                    CMPA    100,DL
         2 002326   002332 601000 2                  TNZ     s:15761

PL6.E3A0      #001=DDS$SCAN File=DUS$SCAN.:E05TSI                                TUE 07/29/97 15:01 Page:113  
      758    15760    3                                 THEN SILENT = '1'B;

  15760  2 002327   400000 236003                    LDQ     -131072,DU
         2 002330   200204 756100                    STQ     SILENT,,AUTO
         2 002331   002342 710000 2                  TRA     s:15767

      759    15761    3                                 ELSE IF ( TCODE = 101 ) /* C@INACTIVE */

  15761  2 002332   000145 115007                    CMPA    101,DL
         2 002333   002337 601000 2                  TNZ     s:15764

      760    15762    3                                      THEN INACTIVE = '1'B;

  15762  2 002334   400000 236003                    LDQ     -131072,DU
         2 002335   200205 756100                    STQ     INACTIVE,,AUTO
         2 002336   002342 710000 2                  TRA     s:15767

      761    15763    4                                      ELSE DO; /* UNKNOWN COMMAND */

      762    15764    4                                           S_D.ERROR = 501; /* E@DERR1 */

  15764  2 002337   000765 235007                    LDA     501,DL
         2 002340   300013 755100                    STA     11,,PR3

      763    15765    4                                           GOTO ALTRT; /* SPLIT */

  15765  2 002341   002405 710000 2                  TRA     ALTRT

      764    15766    4                                         END;
      765    15767    3           END;                            /* END "DO IX" */

  15767  2 002342   200171 054100                    AOS     IXX,,AUTO
         2 002343   200125 470500                    LDP0    NCMD$,,AUTO
         2 002344   000001 236100                    LDQ     1,,PR0
         2 002345   000022 772000                    QRL     18
         2 002346   200171 116100                    CMPQ    IXX,,AUTO
         2 002347   001674 605400 2                  TPNZ    s:15670
PL6.E3A0      #001=DDS$SCAN File=DUS$SCAN.:E05TSI                                TUE 07/29/97 15:01 Page:114  

      766    15768        /*D* Duplicate WHEN breakpoints are allowed */
      767    15769    2        TCODEC = WHEN$CMD.BSIZE;

  15769  2 002350   200153 471500                    LDP1    LASTBLT$,,AUTO
         2 002351   100016 235100                    LDA     14,,PR1
         2 002352   200174 755100                    STA     TCODEC,,AUTO

      768    15770    2        WHEN$ = ADDR(S_D.OUTPUT);

  15770  2 002353   000000 236000 xsym               LDQ     S_D$
         2 002354   005335 036003                    ADLQ    2781,DU
         2 002355   200206 756100                    STQ     WHEN$,,AUTO

      769    15771    2        CALL DDK$GETWVAL (WHEN$, WHEN$CMD.ADDRESS, WHEN$CMD.BOFF,

  15771  2 002356   200153 236100                    LDQ     LASTBLT$,,AUTO
         2 002357   000015 036003                    ADLQ    13,DU
         2 002360   200221 756100                    STQ     V+7,,AUTO
         2 002361   200153 236100                    LDQ     LASTBLT$,,AUTO
         2 002362   000014 036003                    ADLQ    12,DU
         2 002363   200220 756100                    STQ     V+6,,AUTO
         2 002364   200153 236100                    LDQ     LASTBLT$,,AUTO
         2 002365   000016 036003                    ADLQ    14,DU
         2 002366   200217 756100                    STQ     V+5,,AUTO
         2 002367   200153 236100                    LDQ     LASTBLT$,,AUTO
         2 002370   000017 036003                    ADLQ    15,DU
         2 002371   200216 756100                    STQ     V+4,,AUTO
         2 002372   200153 236100                    LDQ     LASTBLT$,,AUTO
         2 002373   000012 036003                    ADLQ    10,DU
         2 002374   200215 756100                    STQ     V+3,,AUTO
         2 002375   200206 633500                    EPPR3   WHEN$,,AUTO
         2 002376   200214 453500                    STP3    V+2,,AUTO
         2 002377   200214 630500                    EPPR0   V+2,,AUTO
         2 002400   000024 631400 xsym               EPPR1   B_VECTNIL+20
         2 002401   000000 701000 xent               TSX1    DDK$GETWVAL
         2 002402   002407 702000 2                  TSX2    S_FAULT
PL6.E3A0      #001=DDS$SCAN File=DUS$SCAN.:E05TSI                                TUE 07/29/97 15:01 Page:115  

      770    15772    2          WHEN$CMD.BSIZE, WHEN$CMD.DESC#, WHEN$CMD.NOT_IS) ALTRET(S_FAULT);
      771    15773    2        RETURN;

  15773  2 002403   200170 221300                    LDX1  ! ZITEM$+4,,AUTO
         2 002404   000001 702211                    TSX2  ! 1,X1

      772    15774                                                /**/
      773    15775    2   ALTRT:
      774    15776    2        ALTRETURN;

  15776  2 002405   200170 221300       ALTRT        LDX1  ! ZITEM$+4,,AUTO
         2 002406   000000 702211                    TSX2  ! 0,X1

  15770  2 002407                       S_FAULT      null
      775    15777    2   S_FAULT: ;
      776    15778    2        S_D.ERROR = 237;          /* E@CANTACCESS */

  15778  2 002407   000355 235007                    LDA     237,DL
         2 002410   000000 470400 xsym               LDP0    S_D$
         2 002411   000013 755100                    STA     11,,PR0

      777    15779    2        CALL DDE$ERROR;

  15779  2 002412   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 002413   000000 701000 xent               TSX1    DDE$ERROR
         2 002414   000000 011000                    NOP     0

      778    15780    2        S_D.OUTPUT = 'Data Breakpoint ';

  15780  2 002415   000000 470400 xsym               LDP0    S_D$
         2 002416   040100 100400                    MLR     fill='040'O
         2 002417   000136 000020 1                  ADSC9   SKILLA+11                cn=0,n=16
         2 002420   005335 004000                    ADSC9   2781,,PR0                cn=0,n=2048

      779    15781    2        BB$ = PINCRC(ADDR(S_D.OUTPUT), SIZEC('Data Breakpoint '));

PL6.E3A0      #001=DDS$SCAN File=DUS$SCAN.:E05TSI                                TUE 07/29/97 15:01 Page:116  
  15781  2 002421   000000 236000 xsym               LDQ     S_D$
         2 002422   005341 036003                    ADLQ    2785,DU
         2 002423   200201 756100                    STQ     BB$,,AUTO

      780    15782    2        CALL DDR$BINTXT(BB$, S_D.STORED, %UINT_FMT, SIZE);

  15782  2 002424   200202 631500                    EPPR1   SIZE,,AUTO
         2 002425   200217 451500                    STP1    V+5,,AUTO
         2 002426   000031 236000 3                  LDQ     25
         2 002427   200216 756100                    STQ     V+4,,AUTO
         2 002430   000000 236000 xsym               LDQ     S_D$
         2 002431   000135 036003                    ADLQ    93,DU
         2 002432   200215 756100                    STQ     V+3,,AUTO
         2 002433   200201 633500                    EPPR3   BB$,,AUTO
         2 002434   200214 453500                    STP3    V+2,,AUTO
         2 002435   200214 630500                    EPPR0   V+2,,AUTO
         2 002436   000022 631400 xsym               EPPR1   B_VECTNIL+18
         2 002437   000000 701000 xent               TSX1    DDR$BINTXT
         2 002440   000000 011000                    NOP     0

      781    15783    2        BB$ = PINCRC(BB$, SIZE);

  15783  2 002441   200202 236100                    LDQ     SIZE,,AUTO
         2 002442   000020 736000                    QLS     16
         2 002443   200201 036100                    ADLQ    BB$,,AUTO
         2 002444   200201 756100                    STQ     BB$,,AUTO

      782    15784    2        BB$ -> CHAR22 = ' set inactive by DELTA';

  15784  2 002445   200201 470500                    LDP0    BB$,,AUTO
         2 002446   040100 100400                    MLR     fill='040'O
         2 002447   000142 000026 1                  ADSC9   SKILLA+15                cn=0,n=22
         2 002450   000000 000026                    ADSC9   0,,PR0                   cn=0,n=22

      783    15785    2        CALL DDQ$WRITE(ADDR(S_D.OUTPUT), SIZEC('Data Breakpoint ')+22+SIZE);

  15785  2 002451   000000 236000 xsym               LDQ     S_D$
PL6.E3A0      #001=DDS$SCAN File=DUS$SCAN.:E05TSI                                TUE 07/29/97 15:01 Page:117  
         2 002452   005335 036003                    ADLQ    2781,DU
         2 002453   200214 756100                    STQ     V+2,,AUTO
         2 002454   200202 235100                    LDA     SIZE,,AUTO
         2 002455   000046 035007                    ADLA    38,DL
         2 002456   200215 755100                    STA     V+3,,AUTO
         2 002457   200215 630500                    EPPR0   V+3,,AUTO
         2 002460   200217 450500                    STP0    V+5,,AUTO
         2 002461   200214 631500                    EPPR1   V+2,,AUTO
         2 002462   200216 451500                    STP1    V+4,,AUTO
         2 002463   200216 630500                    EPPR0   V+4,,AUTO
         2 002464   000020 631400 xsym               EPPR1   B_VECTNIL+16
         2 002465   000000 701000 xent               TSX1    DDQ$WRITE
         2 002466   000000 011000                    NOP     0

      784    15786    2        S_D.FIXCOM.INACTIVE(S_D.STORED) = '1'B;

  15786  2 002467   000000 470400 xsym               LDP0    S_D$
         2 002470   000135 236100                    LDQ     93,,PR0
         2 002471   000003 402007                    MPY     3,DL
         2 002472   000001 736000                    QLS     1
         2 002473   000000 620006                    EAX0    0,QL
         2 002474   000400 236003                    LDQ     256,DU
         2 002475   001212 256110                    ORSQ    650,X0,PR0

      785    15787    2        RETURN;

  15787  2 002476   200170 221300                    LDX1  ! ZITEM$+4,,AUTO
         2 002477   000001 702211                    TSX2  ! 1,X1

      786    15788                                                /**/
      787    15789    2   END DDS$BLD_WHEN;
      788    15790        %EJECT;
PL6.E3A0      #001=DDS$SCAN File=DUS$SCAN.:E05TSI                                TUE 07/29/97 15:01 Page:118  
      789    15791        /*D* NAME: SET_TRAIL_SEMI
      790    15792             CALL: CALL SET_TRAIL_SEMI
      791    15793             INPUT: XUG_GETCMD.OUT$ - Pointer to root node.
      792    15794             OUTPUT: TRAIL_SEMI - Set if commands have a trailing semicolon.
      793    15795             DESCRIPTION: Determines if there is a trailing SEMICOLON node.
      794    15796                          If so sets TRAIL_SEMI, else resets TRAIL_SEMI. */
      795    15797
      796    15798    1   SET_TRAIL_SEMI: PROC;

  15798  2 002500   200170 741300       SET_TRAIL_S* STX1  ! ZITEM$+4,,AUTO

      797    15799
      798    15800    2   DCL NSB SBIN;
      799    15801    2   DCL NC$ PTR;
      800    15802
      801    15803    2        TRAIL_SEMI = '0'B;

  15803  2 002501   200156 450100                    STZ     TRAIL_SEMI,,AUTO

      802    15804        /* Point to last C@STORED or C@DIRECT command */
      803    15805    2        NC$ = XUG_GETCMD.OUT$ -> POB.SUBLK$( XUG_GETCMD.OUT$ -> POB.NSB - 1 );

  15805  2 002502   200051 470500                    LDP0    XUG_GETCMD+1,,AUTO
         2 002503   000001 220100                    LDX0    1,,PR0
         2 002504   000002 236110                    LDQ     2,X0,PR0
         2 002505   200172 756100                    STQ     NC$,,AUTO

      804    15806        /* Point to last C_COMMAND */
      805    15807    2        NC$ = NC$ -> POB.SUBLK$( NC$ -> POB.NSB - 1 );

  15807  2 002506   200172 471500                    LDP1    NC$,,AUTO
         2 002507   100001 222100                    LDX2    1,,PR1
         2 002510   100002 236112                    LDQ     2,X2,PR1
         2 002511   200172 756100                    STQ     NC$,,AUTO

      806    15808        /* Get number of subnodes from C_COMMAND */
      807    15809    2        NSB = NC$ -> POB.NSB - 1;
PL6.E3A0      #001=DDS$SCAN File=DUS$SCAN.:E05TSI                                TUE 07/29/97 15:01 Page:119  

  15809  2 002512   200172 471500                    LDP1    NC$,,AUTO
         2 002513   100001 236100                    LDQ     1,,PR1
         2 002514   000022 772000                    QRL     18
         2 002515   000001 136007                    SBLQ    1,DL
         2 002516   200171 756100                    STQ     NSB,,AUTO

      808    15810    2        IF NSB >= 0

  15810  2 002517   002530 604000 2                  TMI     s:15818

      809    15811    3        THEN DO;

      810    15812        /* The last subnode may be a SEMICOLON */
      811    15813    3             NC$ = NC$ -> POB.SUBLK$( NSB );

  15813  2 002520   100003 236106                    LDQ     3,QL,PR1
         2 002521   200172 756100                    STQ     NC$,,AUTO

      812    15814    3             IF NC$ -> POB.CODE = 93 /* C@SEMICOLON */

  15814  2 002522   200172 471500                    LDP1    NC$,,AUTO
         2 002523   100000 722100                    LXL2    0,,PR1
         2 002524   000135 102003                    CMPX2   93,DU
         2 002525   002530 601000 2                  TNZ     s:15818

      813    15815    3             THEN TRAIL_SEMI = '1'B;

  15815  2 002526   400000 236003                    LDQ     -131072,DU
         2 002527   200156 756100                    STQ     TRAIL_SEMI,,AUTO

      814    15816    3           END;

      815    15817
      816    15818    2        RETURN;

  15818  2 002530   000001 702211                    TSX2  ! 1,X1
PL6.E3A0      #001=DDS$SCAN File=DUS$SCAN.:E05TSI                                TUE 07/29/97 15:01 Page:120  

      817    15819
      818    15820    2   END SET_TRAIL_SEMI;
      819    15821        %EJECT;
PL6.E3A0      #001=DDS$SCAN File=DUS$SCAN.:E05TSI                                TUE 07/29/97 15:01 Page:121  
      820    15822        /*D* NAME: SET_IF_SEMI
      821    15823             CALL: CALL SET_IF_SEMI;
      822    15824             INPUT: NCMD$ - Pointer to DELTA command node.
      823    15825             OUTPUT: SEMI_OFFSET - Offset to semicolon, 0 if none.
      824    15826                     S_D.IFSPEC$ - Address of IFSPEC node, NIL if none.
      825    15827             DESCRIPTION: Determines if there is a SEMICOLON node. If so,
      826    15828                          remembers the offset to it in SEMI_OFFSET, and
      827    15829                          decrements the number of subnodes on this command.
      828    15830                          Does the same with IFSPEC. RETURNs when done. */
      829    15831
      830    15832    1   SET_IF_SEMI: PROC;

  15832  2 002531   200170 741300       SET_IF_SEMI  STX1  ! ZITEM$+4,,AUTO

      831    15833
      832    15834    2   DCL NSB SBIN;
      833    15835    2   DCL NODE$ PTR;
      834    15836
      835    15837    2        NSB = NCMD$ -> POB.NSB - 1;

  15837  2 002532   200125 470500                    LDP0    NCMD$,,AUTO
         2 002533   000001 236100                    LDQ     1,,PR0
         2 002534   000022 772000                    QRL     18
         2 002535   000001 136007                    SBLQ    1,DL
         2 002536   200171 756100                    STQ     NSB,,AUTO

      836    15838    2        SEMI_OFFSET = 0;

  15838  2 002537   200157 450100                    STZ     SEMI_OFFSET,,AUTO

      837    15839    2        S_D.IFSPEC$ = ADDR(NIL);

  15839  2 002540   000001 236000 xsym               LDQ     B_VECTNIL+1
         2 002541   000000 471400 xsym               LDP1    S_D$
         2 002542   100055 756100                    STQ     45,,PR1

      838    15840    3        DO WHILE ( NSB >= 0 );
PL6.E3A0      #001=DDS$SCAN File=DUS$SCAN.:E05TSI                                TUE 07/29/97 15:01 Page:122  

  15840  2 002543   200171 235100                    LDA     NSB,,AUTO
         2 002544   002574 604000 2                  TMI     s:15851

      839    15841    3             NODE$ = NCMD$ -> POB.SUBLK$( NSB );

  15841  2 002545   200125 470500                    LDP0    NCMD$,,AUTO
         2 002546   200171 720100                    LXL0    NSB,,AUTO
         2 002547   000003 236110                    LDQ     3,X0,PR0
         2 002550   200172 756100                    STQ     NODE$,,AUTO

      840    15842    3             IF NODE$ -> POB.CODE = 93 /* C@SEMICOLON */

  15842  2 002551   200172 471500                    LDP1    NODE$,,AUTO
         2 002552   100000 721100                    LXL1    0,,PR1
         2 002553   000135 101003                    CMPX1   93,DU
         2 002554   002560 601000 2                  TNZ     s:15844

      841    15843    3             THEN SEMI_OFFSET = NODE$ -> POB.CPOS;

  15843  2 002555   100002 235100                    LDA     2,,PR1
         2 002556   200157 755100                    STA     SEMI_OFFSET,,AUTO
         2 002557   002567 710000 2                  TRA     s:15847

      842    15844    3             ELSE IF NODE$ -> POB.CODE = 11 /* C@IFSPEC */

  15844  2 002560   000013 101003                    CMPX1   11,DU
         2 002561   002565 601000 2                  TNZ     s:15846

      843    15845    3                  THEN S_D.IFSPEC$ = NODE$;

  15845  2 002562   000000 473400 xsym               LDP3    S_D$
         2 002563   300055 756100                    STQ     45,,PR3
         2 002564   002567 710000 2                  TRA     s:15847

      844    15846    3                  ELSE RETURN;             /* No SEMICOLON or IFSPEC */

PL6.E3A0      #001=DDS$SCAN File=DUS$SCAN.:E05TSI                                TUE 07/29/97 15:01 Page:123  
  15846  2 002565   200170 221300                    LDX1  ! ZITEM$+4,,AUTO
         2 002566   000001 702211                    TSX2  ! 1,X1

      845    15847    3             NCMD$ -> POB.NSB = NSB;

  15847  2 002567   200125 470500                    LDP0    NCMD$,,AUTO
         2 002570   000001 740100                    STX0    1,,PR0

      846    15848    3             NSB = NSB - 1;

  15848  2 002571   000001 336007                    LCQ     1,DL
         2 002572   200171 056100                    ASQ     NSB,,AUTO

      847    15849    3           END;

  15849  2 002573   002545 605000 2                  TPL     s:15841

      848    15850
      849    15851    2        RETURN;

  15851  2 002574   200170 221300                    LDX1  ! ZITEM$+4,,AUTO
         2 002575   000001 702211                    TSX2  ! 1,X1

      850    15852
      851    15853    2   END SET_IF_SEMI;
      852    15854        %EJECT;
PL6.E3A0      #001=DDS$SCAN File=DUS$SCAN.:E05TSI                                TUE 07/29/97 15:01 Page:124  
      853    15855        /*F* NAME: ATTDIR_INIT
      854    15856             PURPOSE: TO SETUP BEFORE BUILDING A COMMAND IN THE DIRECT
      855    15857             COMMAND BUFFER.
      856    15858             DESCRIPTION: IF AN ID WAS SPECIFIED THE COMMAND IS REJECTED.
      857    15859             IF NOT WORKING ON A STORED COMMAND THE NUMBER OF COMMANDS
      858    15860             SPECIFIED MUST BE =1. THE BUILD BUFFER IS SET TO VARCOM IF WORKING
      859    15861             ON A STORED COMMAND; FOR A DIRECT COMMAND IT IS SET TO DIRCOM.
      860    15862             IN EITHER CASE, THE BUILD BUFFER MUST NOT BE EMPTY. */
      861    15863        /*D* NAME: ATTDIR_INIT
      862    15864             CALL: CALL ATTDIR_INIT
      863    15865             INTERFACE:
      864    15866             ENVIRONMENT:
      865    15867             INPUT:
      866    15868             OUTPUT: S_D.DESC$ - START OF BUILD BUFFER
      867    15869                     S_D.D$ - START OF BUILD BUFFER
      868    15870                     S_D.LASTBLT$ - START OF BUILD BUFFER
      869    15871                     LASTBLT$ - SAME AS S_D.LASTBLT$
      870    15872             SCRATCH:
      871    15873             DESCRIPTION: IF AN ID WAS SPECIFIED THE COMMAND IS REJECTED.
      872    15874             IF NOT WORKING ON A STORED COMMAND THE NUMBER OF COMMANDS
      873    15875             SPECIFIED MUST BE =1. THE BUILD BUFFER IS SET TO VARCOM IF WORKING
      874    15876             ON A STORED COMMAND; FOR A DIRECT COMMAND IT IS SET TO DIRCOM.
      875    15877             IN EITHER CASE, THE BUILD BUFFER MUST NOT BE EMPTY. */
      876    15878        /**/
      877    15879    1   ATTDIR_INIT: PROC ALTRET;

  15879  2 002576   200210 741300       ATTDIR_INIT  STX1  ! WHEN$+2,,AUTO

      878    15880        /**/
      879    15881    2   DCL IXX SBIN;                           /* TEMP INDEX */
      880    15882    2   DCL V UBIN;
      881    15883                                                /**/
      882    15884    2        IF S_D.STORED~=0

  15884  2 002577   000000 470400 xsym               LDP0    S_D$
         2 002600   000135 235100                    LDA     93,,PR0
         2 002601   002607 600000 2                  TZE     s:15891
PL6.E3A0      #001=DDS$SCAN File=DUS$SCAN.:E05TSI                                TUE 07/29/97 15:01 Page:125  

      883    15885    3        THEN DO;                           /* STORED COMMAND */

      884    15886    3             S_D.DESC$=S_D.VARNEXT$;

  15886  2 002602   000033 236100                    LDQ     27,,PR0
         2 002603   000041 756100                    STQ     33,,PR0

      885    15887    3             S_D.DESCL$ = S_D.VARCOM_HIGH$;

  15887  2 002604   004623 236100                    LDQ     2451,,PR0
         2 002605   000042 756100                    STQ     34,,PR0

      886    15888    3           END;

  15888  2 002606   002615 710000 2                  TRA     s:15895

      887    15889        /* NON-STORED COMMAND */
      888    15890    3        ELSE DO;

      889    15891    3             S_D.DESC$ = ADDR( S_D.DIRCOM );

  15891  2 002607   000000 236000 xsym               LDQ     S_D$
         2 002610   001046 036003                    ADLQ    550,DU
         2 002611   000041 756100                    STQ     33,,PR0

      890    15892    3             S_D.DESCL$ = PINCRW( ADDR( S_D.DIRCOM ), SIZEW( S_D.DIRCOM ) );

  15892  2 002612   000000 236000 xsym               LDQ     S_D$
         2 002613   001212 036003                    ADLQ    650,DU
         2 002614   000042 756100                    STQ     34,,PR0

      891    15893    3           END;

      892    15894        /* CHECK FOR SPACE IN BUILD BUFFER */
      893    15895    2        GOTO CHKSPACE;

PL6.E3A0      #001=DDS$SCAN File=DUS$SCAN.:E05TSI                                TUE 07/29/97 15:01 Page:126  
  15895  2 002615   003003 710000 2                  TRA     CHKSPACE

      894    15896        /**/
      895    15897    2   WHEN_INIT: ENTRY ALTRET;

  15897  2 002616   200210 741300       WHEN_INIT    STX1  ! WHEN$+2,,AUTO

      896    15898        /**/
      897    15899    2        S_D.DESC$ = ADDR( S_D.DIRCOM );

  15899  2 002617   000000 236000 xsym               LDQ     S_D$
         2 002620   001046 036003                    ADLQ    550,DU
         2 002621   000000 470400 xsym               LDP0    S_D$
         2 002622   000041 756100                    STQ     33,,PR0

      898    15900    2        S_D.DESCL$ = PINCRW( ADDR( S_D.DIRCOM ), SIZEW( S_D.DIRCOM ) );

  15900  2 002623   000000 236000 xsym               LDQ     S_D$
         2 002624   001212 036003                    ADLQ    650,DU
         2 002625   000042 756100                    STQ     34,,PR0

      899    15901    2        GOTO CHKSPACE;

  15901  2 002626   003003 710000 2                  TRA     CHKSPACE

      900    15902        /**/
      901    15903        %EJECT;
PL6.E3A0      #001=DDS$SCAN File=DUS$SCAN.:E05TSI                                TUE 07/29/97 15:01 Page:127  
      902    15904        /*D* NAME: STORED_INIT
      903    15905             CALL: CALL STORED_INIT
      904    15906             INTERFACE:
      905    15907             ENVIRONMENT:
      906    15908             INPUT:
      907    15909             OUTPUT: S_D.DESC$ - START OF BUILD BUFFER
      908    15910                     S_D.D$ - START OF BUILD BUFFER
      909    15911                     S_D.LASTBLT$ - START OF BUILD BUFFER
      910    15912                     LASTBLT$ - SAME AS S_D.LASTBLT$
      911    15913                     S_D.STORED - STORED COMMAND ID
      912    15914                     TEMPID - SET TO -1 FOR SCAN LOOP
      913    15915             SCRATCH:
      914    15916             DESCRIPTION: IF ALREADY WORKING ON A STORED COMMAND THE COMMAND IS
      915    15917             REJECTED. IF NO ID WAS SPECIFIED THEN FIXCOM IS SEARCHED
      916    15918             FOR AN AVAILABLE SLOT. IF NOT SLOT IS FOUND THEN SET ERROR
      917    15919             CODE & ALTRET. THE STORED COMMAND'S ID IS ASSIGNED TO THE
      918    15920             STORED FLAG. THE BUILD BUFFER IS SET TO VARCOM, AND CHECKED
      919    15921             FOR BEING NOT EMPTY. */
      920    15922        /**/
      921    15923    2   STORED_INIT: ENTRY ALTRET;

  15923  2 002627   200210 741300       STORED_INIT  STX1  ! WHEN$+2,,AUTO

      922    15924        /**/
      923    15925        /* MAKE SURE THE STORED COMMAND IS NOT SPECIFIED AS AN ATTACHMENT */
      924    15926    2        IF S_D.RUM OR S_D.ANLZ

  15926  2 002630   000000 470400 xsym               LDP0    S_D$
         2 002631   004755 234100                    SZN     2541,,PR0
         2 002632   002635 604000 2                  TMI     s:15928
         2 002633   004756 234100                    SZN     2542,,PR0
         2 002634   002641 605000 2                  TPL     s:15931

      925    15927    3        THEN DO;

      926    15928    3             S_D.ERROR = 125;       /* E@NOTDELTA */

PL6.E3A0      #001=DDS$SCAN File=DUS$SCAN.:E05TSI                                TUE 07/29/97 15:01 Page:128  
  15928  2 002635   000175 235007                    LDA     125,DL
         2 002636   000013 755100                    STA     11,,PR0

      927    15929    3             ALTRETURN;

  15929  2 002637   200210 221300                    LDX1  ! WHEN$+2,,AUTO
         2 002640   000000 702211                    TSX2  ! 0,X1

      928    15930    3           END;
      929    15931    2        IF S_D.FPRG AND S_D.CURRENT_FPRG_CONTEXT$ -> FPRG$CONTEXT.FANLZ

  15931  2 002641   000101 234100                    SZN     65,,PR0
         2 002642   002652 605000 2                  TPL     s:15937
         2 002643   000102 471500                    LDP1    66,,PR0
         2 002644   100001 430100                    FSZN    1,,PR1
         2 002645   002652 605000 2                  TPL     s:15937

      930    15932    3        THEN DO;

      931    15933    3             S_D.ERROR = 125;       /* E@NOTDELTA */

  15933  2 002646   000175 235007                    LDA     125,DL
         2 002647   000013 755100                    STA     11,,PR0

      932    15934    3             ALTRETURN;

  15934  2 002650   200210 221300                    LDX1  ! WHEN$+2,,AUTO
         2 002651   000000 702211                    TSX2  ! 0,X1

      933    15935    3           END;
      934    15936        /* CHECK IF ID WAS SPECIFIED */
      935    15937    2        IF TEMPID=-1

  15937  2 002652   200122 235100                    LDA     TEMPID,,AUTO
         2 002653   000027 115000 xsym               CMPA    B_VECTNIL+23
         2 002654   002701 601000 2                  TNZ     s:15950

PL6.E3A0      #001=DDS$SCAN File=DUS$SCAN.:E05TSI                                TUE 07/29/97 15:01 Page:129  
      936    15938    3        THEN DO;            /* ID NOT SPECIFIED - TRY TO FIND AN AVAILABLE ONE */

      937    15939    4             DO IXX=1 TO (SIZEW(S_D.FIXCOM)/SIZEW(S_D.FIXCOM(0)))-1;

  15939  2 002655   000001 236007                    LDQ     1,DL
         2 002656   200211 756100                    STQ     IXX,,AUTO
         2 002657   002667 710000 2                  TRA     s:15942+1

      938    15940    4                  IF S_D.FIXCOM.CMD(IXX)=0

  15940  2 002660   200211 236100                    LDQ     IXX,,AUTO
         2 002661   000006 402007                    MPY     6,DL
         2 002662   000000 470400 xsym               LDP0    S_D$
         2 002663   001212 236106                    LDQ     650,QL,PR0
         2 002664   777000 316003                    CANQ    -512,DU
         2 002665   002676 600000 2                  TZE     FOUND

      939    15941    4                  THEN GOTO FOUND;
      940    15942    4                END;

  15942  2 002666   200211 054100                    AOS     IXX,,AUTO
         2 002667   200211 235100                    LDA     IXX,,AUTO
         2 002670   000453 115007                    CMPA    299,DL
         2 002671   002660 604400 2                  TMOZ    s:15940

      941    15943                                                /* NO SLOTS AVAILABLE */
      942    15944    3             S_D.ERROR=17;            /* E@UERR6 */

  15944  2 002672   000021 236007                    LDQ     17,DL
         2 002673   000013 756100                    STQ     11,,PR0

      943    15945    3             ALTRETURN;

  15945  2 002674   200210 221300                    LDX1  ! WHEN$+2,,AUTO
         2 002675   000000 702211                    TSX2  ! 0,X1

      944    15946    3   FOUND:                                  /* FOUND A FREE SLOT IN FIXCOM */
PL6.E3A0      #001=DDS$SCAN File=DUS$SCAN.:E05TSI                                TUE 07/29/97 15:01 Page:130  
      945    15947    3             S_D.STORED=IXX;

  15947  2 002676   200211 235100       FOUND        LDA     IXX,,AUTO
         2 002677   000135 755100                    STA     93,,PR0

      946    15948    3           END;

  15948  2 002700   002767 710000 2                  TRA     s:15972

      947    15949    3        ELSE DO;                      /* ID SPECIFIED, GET IT & SET STORED FLAG */

      948    15950    3             V = S_D.FIXCOM.CMD( TEMPID );

  15950  2 002701   200122 236100                    LDQ     TEMPID,,AUTO
         2 002702   000006 402007                    MPY     6,DL
         2 002703   001212 236106                    LDQ     650,QL,PR0
         2 002704   000033 772000                    QRL     27
         2 002705   200212 756100                    STQ     V,,AUTO

      949    15951    3             IF V ~= 0

  15951  2 002706   002764 600000 2                  TZE     s:15970

      950    15952    4             THEN DO;       /* IMPLICIT KILL, EVEN IF FURTHER ERROR ENCOUNTERED */

      951    15953    4                  S_D.KILL1 = TEMPID;

  15953  2 002707   200122 235100                    LDA     TEMPID,,AUTO
         2 002710   000063 755100                    STA     51,,PR0

      952    15954    4                  CALL INDEX( IXX, BINASC( V ), SKILLT ) ALTRET( GOKILL1 );

  15954  2 002711   200212 236100                    LDQ     V,,AUTO
         2 002712   000033 736000                    QLS     27
         2 002713   000003 276000 3                  ORQ     3
         2 002714   200214 756100                    STQ     V+2,,AUTO
         2 002715   000100 124400                    SCM     mask='000'O
PL6.E3A0      #001=DDS$SCAN File=DUS$SCAN.:E05TSI                                TUE 07/29/97 15:01 Page:131  
         2 002716   000123 000004 1                  ADSC9   SKILLA                   cn=0,n=4
         2 002717   200214 000001                    ADSC9   V+2,,AUTO                cn=0,n=1
         2 002720   200211 000100                    ARG     IXX,,AUTO
         2 002721   002741 606400 2                  TTN     GOKILL1

      953    15955    5                  DO CASE ( IXX );

  15955  2 002722   200211 235100                    LDA     IXX,,AUTO
         2 002723   000004 115007                    CMPA    4,DL
         2 002724   002726 602005 2                  TNC     s:15955+4,AL
         2 002725   002741 710000 2                  TRA     GOKILL1
         2 002726   002732 710000 2                  TRA     s:15957
         2 002727   002734 710000 2                  TRA     s:15959
         2 002730   002736 710000 2                  TRA     s:15961
         2 002731   002740 710000 2                  TRA     s:15963

      954    15956    5                    CASE ( 0 );

      955    15957    5                       S_D.ONABORT = 0;

  15957  2 002732   004744 450100                    STZ     2532,,PR0
         2 002733   002741 710000 2                  TRA     GOKILL1

      956    15958    5                    CASE ( 1 );

      957    15959    5                       S_D.ONEXIT = 0;

  15959  2 002734   004746 450100                    STZ     2534,,PR0
         2 002735   002741 710000 2                  TRA     GOKILL1

      958    15960    5                    CASE ( 2 );

      959    15961    5                       S_D.ONCALLS = 0;

  15961  2 002736   004745 450100                    STZ     2533,,PR0
         2 002737   002741 710000 2                  TRA     GOKILL1

PL6.E3A0      #001=DDS$SCAN File=DUS$SCAN.:E05TSI                                TUE 07/29/97 15:01 Page:132  
      960    15962    5                    CASE ( 3 );

      961    15963    5                       S_D.ONNODES = 0;

  15963  2 002740   004747 450100                    STZ     2535,,PR0

      962    15964    5                    END;

      963    15965    4   GOKILL1:
      964    15966    4                  IF S_D.FIXCOM.FPRG(TEMPID)

  15966  2 002741   200122 236100       GOKILL1      LDQ     TEMPID,,AUTO
         2 002742   000006 402007                    MPY     6,DL
         2 002743   000000 470400 xsym               LDP0    S_D$
         2 002744   001212 236106                    LDQ     650,QL,PR0
         2 002745   000002 316003                    CANQ    2,DU
         2 002746   002761 600000 2                  TZE     s:15968

      965    15967    4                  THEN CALL DFA$KILL1('1'B, V, '1'B);

  15967  2 002747   000032 236000 3                  LDQ     26
         2 002750   200216 756100                    STQ     V+4,,AUTO
         2 002751   200212 631500                    EPPR1   V,,AUTO
         2 002752   200215 451500                    STP1    V+3,,AUTO
         2 002753   200214 756100                    STQ     V+2,,AUTO
         2 002754   200214 630500                    EPPR0   V+2,,AUTO
         2 002755   000021 631400 xsym               EPPR1   B_VECTNIL+17
         2 002756   000000 701000 xent               TSX1    DFA$KILL1
         2 002757   000000 011000                    NOP     0
         2 002760   002764 710000 2                  TRA     s:15970

      966    15968    4                  ELSE CALL DDA$KILL1;

  15968  2 002761   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 002762   000000 701000 xent               TSX1    DDA$KILL1
         2 002763   000000 011000                    NOP     0

PL6.E3A0      #001=DDS$SCAN File=DUS$SCAN.:E05TSI                                TUE 07/29/97 15:01 Page:133  
      967    15969    4                END;                       /* IMPLICIT KILL */

      968    15970    3             S_D.STORED=TEMPID;

  15970  2 002764   000000 470400 xsym               LDP0    S_D$
         2 002765   200122 235100                    LDA     TEMPID,,AUTO
         2 002766   000135 755100                    STA     93,,PR0

      969    15971    3           END;

      970    15972    2        TEMPID = -1;                       /* RESET FOR SCAN LOOP */

  15972  2 002767   000001 336007                    LCQ     1,DL
         2 002770   200122 756100                    STQ     TEMPID,,AUTO

      971    15973        /* INITIALIZE FIXCOM SLOT */
      972    15974    2        S_D.FIXCOM(S_D.STORED) = '0'B;

  15974  2 002771   000135 236100                    LDQ     93,,PR0
         2 002772   000003 402007                    MPY     3,DL
         2 002773   000003 736000                    QLS     3
         2 002774   000106 100400                    MLR     fill='000'O
         2 002775   000002 000001 xsym               ADSC9   B_VECTNIL+2              cn=0,n=1
         2 002776   001212 000030                    ADSC9   650,Q,PR0                cn=0,n=24

      973    15975        /* SETUP BUILD BUFFER AS VARCOM */
      974    15976    2        S_D.DESC$=S_D.VARNEXT$;

  15976  2 002777   000033 236100                    LDQ     27,,PR0
         2 003000   000041 756100                    STQ     33,,PR0

      975    15977    2        S_D.DESCL$ = S_D.VARCOM_HIGH$;

  15977  2 003001   004623 236100                    LDQ     2451,,PR0
         2 003002   000042 756100                    STQ     34,,PR0

      976    15978                                           /* MAKE SURE BUILD BUFFER IS NOT EMPTY */
PL6.E3A0      #001=DDS$SCAN File=DUS$SCAN.:E05TSI                                TUE 07/29/97 15:01 Page:134  
      977    15979    2   CHKSPACE:
      978    15980                                                /**/
      979    15981    2        IF S_D.DESC$<S_D.DESCL$

  15981  2 003003   000041 116100       CHKSPACE     CMPQ    33,,PR0
         2 003004   003014 602000 2                  TNC     s:15989
         2 003005   003014 600000 2                  TZE     s:15989

      980    15982    3        THEN DO;                           /* BUFFER NOT EMPTY */

      981    15983    3             S_D.D$ = S_D.DESC$;

  15983  2 003006   000041 236100                    LDQ     33,,PR0
         2 003007   000044 756100                    STQ     36,,PR0

      982    15984    3             S_D.LASTBLT$ = S_D.DESC$;

  15984  2 003010   000134 756100                    STQ     92,,PR0

      983    15985    3             LASTBLT$ = S_D.DESC$;

  15985  2 003011   200153 756100                    STQ     LASTBLT$,,AUTO

      984    15986    3             RETURN;

  15986  2 003012   200210 221300                    LDX1  ! WHEN$+2,,AUTO
         2 003013   000001 702211                    TSX2  ! 1,X1

      985    15987    3           END;
      986    15988    3        ELSE DO;                           /* BUFFER IS EMPTY */

      987    15989    3             S_D.ERROR = 15;          /* E@UERR4 */

  15989  2 003014   000017 235007                    LDA     15,DL
         2 003015   000013 755100                    STA     11,,PR0

      988    15990    3             ALTRETURN;
PL6.E3A0      #001=DDS$SCAN File=DUS$SCAN.:E05TSI                                TUE 07/29/97 15:01 Page:135  

  15990  2 003016   200210 221300                    LDX1  ! WHEN$+2,,AUTO
         2 003017   000000 702211                    TSX2  ! 0,X1

DELTA_NAME
 Sect OctLoc
   1     000   005104 105114   124101 ******                                    .DELTA..

DELTA_ACCT
 Sect OctLoc
   1     002   072123 131123   040040 040040                                    :SYS

XUG_INIT_CONSTANT
 Sect OctLoc
   1     004   000000 000000   000000 000000   000000 000000   000000 000000    ................
   1     014*  000001 377640   000000 006000   000001 777640   000002 006000    ................
   1     020   000000 006014   000000 177640   000000 006014   000000 006014    ................
   1     024   000000 006014   000000 177640   000000 006014   000000 000454    ................
   1     030   000144 000144   000000 000000   450000 000000   000000 000000    .d.d............
   1     034   000000 000000   000000 000000   000000 000000   000000 006014    ................
   1     040   000000 006014   000000 006014   000000 006014   000000 006014    ................
   1     044   14000* ******   000000 000000   000000 000000   000000 000000    `...............

XUG_GETCMD_CONSTANT
 Sect OctLoc
   1     050   000000 006014   000000 006014   000000 006014   000000 006014    ................
   1     054   000000 006014   000000 006014   210000 000000   04000* ***000    ............ ...
   1     060   000000 000000   000000 000000   000000 000000   000000 000000    ................
   1     064   000000 000000   000000 000000   000000 000000   000000 177640    ................
   1     070   000000 006014   000000 177640   000000 006014   000000 177640    ................
   1     100*  000000 006014   000000 000000   000000 000000   000000 000000    ................
   1     104   000000 177640   000000 006014   000000 006014   000000 000000    ................
   1     110   000000 006014   000000 006014   000000 006014   000000 006014    ................
   1     114   000000 006014   000000 006014   000000 000000   000000 000000    ................
   1     120   000000 000000   000000 000000                                    ........

ATREEA
PL6.E3A0      #001=DDS$SCAN File=DUS$SCAN.:E05TSI                                TUE 07/29/97 15:01 Page:136  
 Sect OctLoc
   1     122   071010 034035                                                    9...

SKILLA
 Sect OctLoc
   1     123   036040 065066                                                    . 56

(unnamed)
 Sect OctLoc
   1     124   127150 145156   040126 141162   151141 142154   145040 124157    When Variable To
   1     130   157040 102151   147040 055040   062060 064070   040102 171164    o Big - 2048 Byt
   1     134   145163 040125   163145 144056   104141 164141   040102 162145    es Used.Data Bre
   1     140   141153 160157   151156 164040   040163 145164   040151 156141    akpoint  set ina
   1     144   143164 151166   145040 142171   040104 105114   124101 040040    ctive by DELTA

(unnamed)
 Sect OctLoc
   3     000   000000 177640   000000 006014   000000 006000   000040 040040    .............
   3     004   000000 000071   000004 006000   000012 006000   000000 000034    ...9............
   3     010   000007 006000   000000 000105   000011 006000   000000 006000    .......E........
   3     014   000000 000016   000014 006000   000000 006000   000000 006000    ................
   3     020   000000 006000   000000 000021   000000 000103   000021 006000    ...........C....
   3     024   000022 006000   000000 000050   000025 006000   000000 000020    .......(........
   3     030   000027 006000   000004 006000   000030 006000                    ............
      989    15991    3           END;
      990    15992                                                /**/
      991    15993    2   END ATTDIR_INIT;
      992    15994                                                /**/
      993    15995    1   END DDS$SCAN;
      994    15996        %EOD;

PL6.E3A0      #001=DDS$SCAN File=DUS$SCAN.:E05TSI                                TUE 07/29/97 15:01 Page:137  
--  Include file information  --

   DD_SD_M.:E05TOU  is referenced.
   XUH_MACRO_C.:E05TOU  is referenced.
   DD$BASED.:E05TOU  is referenced.
   DD_SRTN_C.:E05TOU  is referenced.
   DD_ACODE_C.:E05TOU  is referenced.
   DD_ICODE_C.:E05TOU  is referenced.
   DD$DITEM.:E05TOU  cannot be made into a system file and is referenced.
   B$OBJECT_C.:E05TOU  is referenced.
   DD_PSUBS_C.:E05TOU  is referenced.
   XU_PERR_C.:E05TOU  is referenced.
   DD_ERR_C.:E05TOU  is referenced.
   XU_SUBS_C.:E05TOU  is referenced.
   CXG_ENTRY.:E05TOU  cannot be made into a system file and is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
   B$JIT.:E05TOU  cannot be made into a system file and is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   DD_SUBS_C.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure DDS$SCAN.

   Procedure DDS$SCAN requires 1552 words for executable code.
   Procedure DDS$SCAN requires 146 words of local(AUTO) storage.
PL6.E3A0      #001=DDS$SCAN File=DUS$SCAN.:E05TSI                                TUE 07/29/97 15:01 Page:138  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=DDS$SCAN File=DUS$SCAN.:E05TSI                                TUE 07/29/97 15:01 Page:139  
          MINI XREF LISTING

ALL_ATTACH.LENGTH
     11375**DCL     15183<<ASSIGN  15211<<ASSIGN
ALL_ATTACH.UNUSED
     11376**DCL     11377--REDEF   11381--REDEF
ALTRT IN PROCEDURE DDS$BLD_WHEN
     15776**LABEL   15651--GOTO    15679--CALLALT 15680--CALLALT 15682--CALLALT 15687--CALLALT 15688--CALLALT
     15697--CALLALT 15700--CALLALT 15717--GOTO    15722--GOTO    15730--GOTO    15735--GOTO    15748--CALLALT
     15749--CALLALT 15755--CALLALT 15765--GOTO
ATREEA
     15039**DCL     15043--REDEF
ATREET
     15043**DCL     15170>>CALLBLT
ATTDIR_INIT
     15879**PROC    15163--CALL    15193--CALL    15252--CALL    15337--CALL    15369--CALL
ATTEXT$
      9180**DCL     15352<<ASSIGN  15354>>ASSIGN  15406<<ASSIGN  15413>>ASSIGN
ATT_SIZE
      9179**DCL      9181--IMP-SIZ 15238<<ASSIGN  15239>>ASSIGN  15240>>ASSIGN  15350<<ASSIGN  15351>>ASSIGN
     15354>>ASSIGN  15405<<ASSIGN  15408>>CALL    15412>>ASSIGN  15413>>ASSIGN
AT_FIRST.ATT_OFFSET
     11368**DCL     15349<<ASSIGN
AT_FIRST.IF_OFFSET
     11369**DCL     15347<<ASSIGN
AT_FIRST.LENGTH
     11347**DCL     15355<<ASSIGN  15357>>ASSIGN  15414<<ASSIGN  15416>>ASSIGN
AT_FIRST.TEXT_OFFSET
     11366**DCL     15345<<ASSIGN  15406>>ASSIGN
AT_FIRST.TEXT_SIZE
     11367**DCL     15351<<ASSIGN  15406>>ASSIGN  15408>>CALL    15408>>CALL    15412<<ASSIGN  15412>>ASSIGN
AT_FIRST.UNUSED
     11348**DCL     11349--REDEF   11353--REDEF
B$JIT.CPFLAGS1.SLEAZE
PL6.E3A0      #001=DDS$SCAN File=DUS$SCAN.:E05TSI                                TUE 07/29/97 15:01 Page:140  
       524**DCL       524--REDEF
B$JIT.ERR.MID
       431**DCL       431--REDEF
B$JIT.JRESPEAK
       592**DCL       593--REDEF
B$JIT.ORIGINATOR_PORT.FROM_CR
       701**DCL       701--REDEF     702--REDEF
B$JIT.PNR
       605**DCL       605--REDEF
B$JIT.TSLINE
       699**DCL       700--REDEF
B$JIT$
       706**DCL       425--IMP-PTR
B$NODE.FLGS.NOW_IN
      9960**DCL     15741>>IF
BB$ IN PROCEDURE DDS$BLD_WHEN
     15532**DCL     15781<<ASSIGN  15782<>CALL    15783<<ASSIGN  15783>>ASSIGN  15784>>ASSIGN
BIGTREE
     15214**LABEL   15204--CALLALT
BUFF$ER IN PROCEDURE DDS$BLD_WHEN
     15537**DCL     15698<<ASSIGN  15698>>ASSIGN
CHAR$ATT
      9181**DCL     15239>>ASSIGN  15354<<ASSIGN  15413<<ASSIGN
CHAR22 IN PROCEDURE DDS$BLD_WHEN
     15531**DCL     15784<<ASSIGN
CHAR32
      9182**DCL     15121--ASSIGN  15165--ASSIGN  15202--ASSIGN  15245--ASSIGN  15310--ASSIGN  15399--ASSIGN
CHKSPACE IN PROCEDURE ATTDIR_INIT
     15981**LABEL   15895--GOTO    15901--GOTO
CXG$ERRMSG
      3821**DCL-ENT 15459--CALL    15464--CALL
CXG$ERRPTR
      3820**DCL-ENT 15458--CALL
CXG$GETCMD
      3820**DCL-ENT 15166--CALL    15204--CALL    15247--CALL    15312--CALL    15401--CALL
CXG$INIT
PL6.E3A0      #001=DDS$SCAN File=DUS$SCAN.:E05TSI                                TUE 07/29/97 15:01 Page:141  
      3820**DCL-ENT 15126--CALL
DDA$KILL1
     15059**DCL-ENT 15968--CALL
DDD$BUMP_D$
     15066**DCL-ENT 15353--CALL    15408--CALL    15697--CALL    15748--CALL
DDE$ERROR
     15065**DCL-ENT 15485--CALL    15779--CALL
DDK$EVAL IN PROCEDURE DDS$BLD_WHEN
     15540**DCL-ENT 15700--CALL
DDK$GETWVAL IN PROCEDURE DDS$BLD_WHEN
     15541**DCL-ENT 15771--CALL
DDQ$WRITE
     15080**DCL-ENT 15707--CALL    15785--CALL
DDR$BINTXT
     15079**DCL-ENT 15782--CALL
DDS$ATTDIRA
     15069**DCL-ENT 15680--CALL
DDS$BLD
     15076**DCL-ENT 15175--CALL    15177--CALL    15179--CALL    15181--CALL    15199--CALL    15207--CALL
     15286--CALL    15342--CALL    15379--CALL
DDS$BLD_WHEN
     15520**PROC    15338--CALL
DDS$CNSNT
     15074**DCL-ENT 15749--CALL
DDS$DECIMAL
     15067**DCL-ENT 15319--CALL    15755--CALL
DDS$PROMPT
     15061**DCL-ENT 15149--CALL
DDS$PROMPTC
     15062**DCL-ENT 15148--CALL
DDS$SET_C2D
     15070**DCL-ENT 15133--CALL    15231--CALL
DDS$SET_D2Q
     15071**DCL-ENT 15164--CALL    15194--CALL    15244--CALL    15304--CALL
DDS$SET_Q2D
     15072**DCL-ENT 15686--CALL
PL6.E3A0      #001=DDS$SCAN File=DUS$SCAN.:E05TSI                                TUE 07/29/97 15:01 Page:142  
DDS$STOREDA
     15068**DCL-ENT 15688--CALL
DDS$SUCCESS
     15077**DCL-ENT 14964--DCLINIT
DDS$VREFCOM
     15073**DCL-ENT 15682--CALL
DELTA_ACCT
     14268**DCL     14414--DCLINIT
DELTA_NAME
     14255**DCL     14409--DCLINIT
DFA$KILL1
     15060**DCL-ENT 15967--CALL
DUA$RUM_COMM
     15075**DCL-ENT 15390--CALL
DUS$POST_EXEC
     15064**DCL-ENT 14360--DCLINIT
DUS$SCANREAD
     15063**DCL-ENT 14937--DCLINIT
D_ACMDS
     15052**DCL     15237--ASSIGN
D_ATREE
     15055**DCL     15158--ASSIGN
D_CCMDS
     15051**DCL     15398--ASSIGN
D_DCMDS
     15050**DCL     15309--ASSIGN
D_M$DELT#
     15056**DCL     15123>>ASSIGN
D_M$DO#
     15057**DCL     15124>>ASSIGN  15125>>ASSIGN  15457>>ASSIGN  15462>>ASSIGN
D_MTREE
     15053**DCL     15188--ASSIGN
D_PARSIZE
     15058**DCL     15119>>ASSIGN
D_XDELTA
     15054**DCL     15336>>IF
PL6.E3A0      #001=DDS$SCAN File=DUS$SCAN.:E05TSI                                TUE 07/29/97 15:01 Page:143  
FOUND IN PROCEDURE ATTDIR_INIT
     15947**LABEL   15941--GOTO
FPRG$CONTEXT.FANLZ
     11444**DCL     15931>>IF
GOKILL1 IN PROCEDURE ATTDIR_INIT
     15966**LABEL   15954--CALLALT
IF$CONST
     11392**DCL     15748--CALL
IF$CONST.CONS.TANT
     11403**DCL     11404--REDEF
IF$CONST.P.ADR
     11412**DCL     11416--REDEF
IF$CONST.SIZE
     11393**DCL     11394--REDEF
IF$CONST.TEXT
     11395**DCL     11396--REDEF   11397--REDEF   11401--REDEF   11406--REDEF   11410--REDEF   11423--REDEF
IF$CONST.TEXTA8.BYT
     11399**DCL     11400--REDEF
INACTIVE IN PROCEDURE DDS$BLD_WHEN
     15536**DCL     15668<<ASSIGN  15694>>ASSIGN  15762<<ASSIGN
IX
      9166**DCL     15170<<CALLBLT 15171>>DOCASE
IXX IN PROCEDURE ATTDIR_INIT
     15881**DCL     15939<<DOINDEX 15940>>IF      15947>>ASSIGN  15954<<CALLBLT 15955>>DOCASE
IXX IN PROCEDURE DDS$BLD_WHEN
     15522**DCL     15669<<DOINDEX 15670>>ASSIGN
L$ IN PROCEDURE DDS$BLD_WHEN
     15528**DCL     15672<<ASSIGN  15689<<ASSIGN  15692>>ASSIGN  15698>>ASSIGN  15699>>ASSIGN  15702>>IF
     15727>>IF      15732>>IF      15732>>IF      15749>>CALL    15749>>CALL
LASTBLT$
      9174**DCL     15543--IMP-PTR 15667<<ASSIGN  15695>>ASSIGN  15696>>ASSIGN  15700>>CALL    15700>>CALL
     15700>>CALL    15700>>CALL    15700>>CALL    15700>>CALL    15703>>ASSIGN  15703>>ASSIGN  15704>>IF
     15705>>ASSIGN  15709>>IF      15711>>IF      15713>>IF      15713>>IF      15725>>ASSIGN  15725>>ASSIGN
     15726>>ASSIGN  15726>>ASSIGN  15726>>ASSIGN  15726>>ASSIGN  15739>>ASSIGN  15745>>ASSIGN  15750>>ASSIGN
     15756>>ASSIGN  15757>>ASSIGN  15769>>ASSIGN  15771>>CALL    15771>>CALL    15771>>CALL    15771>>CALL
     15771>>CALL    15985<<ASSIGN
PL6.E3A0      #001=DDS$SCAN File=DUS$SCAN.:E05TSI                                TUE 07/29/97 15:01 Page:144  
MACHAR
      9173**DCL     15229<<ASSIGN  15450>>ASSIGN
MAERR
      9168**DCL     15143<<ASSIGN  15220<<ASSIGN  15446>>IF      15448>>ASSIGN
MAERR$
      9169**DCL     15221<<ASSIGN  15222>>IF      15224>>ASSIGN  15224>>ASSIGN  15227<<ASSIGN  15449>>ASSIGN
MAERRTEXTC
      9170**DCL     15224<<ASSIGN  15227--ASSIGN
MAERRTEXTC.SIZE
      9171**DCL     15225>>IF      15226<<ASSIGN
MAERRTEXTC.TEXT
      9172**DCL     15225--IF      15226--ASSIGN
NC$
      9163**DCL     15248<<ASSIGN  15249>>ASSIGN  15313<<ASSIGN  15314>>IF      15316>>ASSIGN  15317>>IF
     15322>>ASSIGN  15361>>IF      15363>>ASSIGN  15387>>IF      15402<<ASSIGN  15403>>ASSIGN
NC$ IN PROCEDURE SET_TRAIL_SEMI
     15801**DCL     15805<<ASSIGN  15807<<ASSIGN  15807>>ASSIGN  15807>>ASSIGN  15809>>ASSIGN  15813<<ASSIGN
     15813>>ASSIGN  15814>>IF
NCC$ IN PROCEDURE DDS$BLD_WHEN
     15527**DCL     15670<<ASSIGN  15671>>ASSIGN  15682<>CALL    15683>>ASSIGN  15749<>CALL    15754<<ASSIGN
     15754>>ASSIGN  15755<>CALL
NCMD$
      9165**DCL     15167<<ASSIGN  15168>>ASSIGN  15169>>ASSIGN  15205<<ASSIGN  15206>>ASSIGN  15249<<ASSIGN
     15250>>ASSIGN  15253>>ASSIGN  15316<<ASSIGN  15319<>CALL    15322<<ASSIGN  15329>>ASSIGN  15331>>ASSIGN
     15363<<ASSIGN  15364>>ASSIGN  15370>>ASSIGN  15403<<ASSIGN  15404>>ASSIGN  15669>>DOINDEX 15670>>ASSIGN
     15837>>ASSIGN  15841>>ASSIGN  15847>>ASSIGN
NODE$ IN PROCEDURE SET_IF_SEMI
     15835**DCL     15841<<ASSIGN  15842>>IF      15843>>ASSIGN  15844>>IF      15845>>ASSIGN
NSB IN PROCEDURE SET_IF_SEMI
     15834**DCL     15837<<ASSIGN  15840>>DOWHILE 15841>>ASSIGN  15847>>ASSIGN  15848<<ASSIGN  15848>>ASSIGN
NSB IN PROCEDURE SET_TRAIL_SEMI
     15800**DCL     15809<<ASSIGN  15810>>IF      15813>>ASSIGN
ONCE
     15114**LABEL   15102--GOTO    15109--GOTO
PARSE$
     15049**DCL     15118>>ASSIGN
PL6.E3A0      #001=DDS$SCAN File=DUS$SCAN.:E05TSI                                TUE 07/29/97 15:01 Page:145  
PARSMORE
     15138**LABEL   15139--REMEMBR 15296--GOTO    15359--GOTO    15393--GOTO    15419--GOTO    15441--GOTO
POB.CODE
     10009**DCL     15169>>ASSIGN  15253>>ASSIGN  15314>>IF      15331>>ASSIGN  15361>>IF      15370>>ASSIGN
     15387>>IF      15671>>ASSIGN  15814>>IF      15842>>IF      15844>>IF
POB.CPOS
     10027**DCL     15347>>ASSIGN  15683>>ASSIGN  15843>>ASSIGN
POB.NSB
     10013**DCL     15317>>IF      15669>>DOINDEX 15805>>ASSIGN  15807>>ASSIGN  15809>>ASSIGN  15837>>ASSIGN
     15847<<ASSIGN
POB.SUBLK$
     10034**DCL     15167>>ASSIGN  15248>>ASSIGN  15249>>ASSIGN  15313>>ASSIGN  15316>>ASSIGN  15322>>ASSIGN
     15363>>ASSIGN  15402>>ASSIGN  15403>>ASSIGN  15670>>ASSIGN  15683>>ASSIGN  15754>>ASSIGN  15805>>ASSIGN
     15807>>ASSIGN  15813>>ASSIGN  15841>>ASSIGN
REMERR
     15218**LABEL   15207--CALLALT
RESETMA
     15231**LABEL   15216--GOTO
S1$ IN PROCEDURE DDS$BLD_WHEN
     15529**DCL     15681<<ASSIGN  15690>>ASSIGN  15698>>ASSIGN
S2$ IN PROCEDURE DDS$BLD_WHEN
     15530**DCL     15685<<ASSIGN  15690>>ASSIGN
SCAN1
      9175**DCL     15099<<ASSIGN  15106<<ASSIGN  15114<<ASSIGN  15138>>IF      15145>>IF      15293>>IF
     15327>>IF      15391>>IF      15426>>IF      15482>>IF      15496>>IF
SCAN2
      9176**DCL     15100<<ASSIGN  15107<<ASSIGN  15113<<ASSIGN  15145>>IF      15145>>IF      15214>>IF
     15218>>IF      15235>>IF      15479>>IF      15496>>IF
SEMI_OFFSET
      9178**DCL     15101<<ASSIGN  15108<<ASSIGN  15264>>IF      15287>>IF      15288>>ASSIGN  15348>>IF
     15349>>ASSIGN  15380>>IF      15382>>ASSIGN  15383>>ASSIGN  15838<<ASSIGN  15843<<ASSIGN
SET_IF_SEMI
     15832**PROC    15251--CALL    15330--CALL    15368--CALL
SET_TRAIL_SEMI
     15798**PROC    15325--CALL    15365--CALL    15417--CALL
SILENT IN PROCEDURE DDS$BLD_WHEN
PL6.E3A0      #001=DDS$SCAN File=DUS$SCAN.:E05TSI                                TUE 07/29/97 15:01 Page:146  
     15535**DCL     15666<<ASSIGN  15693>>ASSIGN  15760<<ASSIGN
SIZE IN PROCEDURE DDS$BLD_WHEN
     15533**DCL     15782<>CALL    15783>>ASSIGN  15785>>CALL
SKILLA
     15044**DCL     15048--REDEF
SKILLT
     15048**DCL     15954>>CALLBLT
START
     15127**LABEL   15300--GOTO    15428--GOTO    15498--GOTO
STORED_INIT IN PROCEDURE ATTDIR_INIT
     15923**ENTRY   15341--CALL    15687--CALL
S_D.ACMDS$
     13135**DCL     15239>>ASSIGN
S_D.ACMDS_OFF
     13133**DCL     15239>>ASSIGN  15240>>ASSIGN  15288<<ASSIGN  15288>>ASSIGN  15289<<ASSIGN
S_D.ACMDS_SIZE
     13137**DCL     15238>>ASSIGN  15289>>ASSIGN
S_D.ANLZ
     13564**DCL     15174>>IF      15926>>IF
S_D.ARRAY.HIGH
     13193**DCL     15703>>ASSIGN
S_D.B$TREE$
     13584**DCL     15741>>IF
S_D.BEEN_TO_SCANREAD
     13960**DCL     15127<<ASSIGN  15138>>IF      15140<<ASSIGN  15232<<ASSIGN
S_D.CURRENT_CHANNEL
     13864**DCL     13866--REDEF
S_D.CURRENT_FPRG_CONTEXT$
     13064**DCL     15931>>IF
S_D.D$
     13002**DCL     15183>>ASSIGN  15211>>ASSIGN  15345>>ASSIGN  15352>>ASSIGN  15355>>ASSIGN  15356>>ASSIGN
     15407<<ASSIGN  15414>>ASSIGN  15415>>ASSIGN  15672>>ASSIGN  15681>>ASSIGN  15684>>ASSIGN  15685>>ASSIGN
     15689>>ASSIGN  15983<<ASSIGN
S_D.DEBUGA
     13016**DCL     13018--REDEF
S_D.DESC$
PL6.E3A0      #001=DDS$SCAN File=DUS$SCAN.:E05TSI                                TUE 07/29/97 15:01 Page:147  
     12996**DCL     15684>>ASSIGN  15699<<ASSIGN  15886<<ASSIGN  15891<<ASSIGN  15899<<ASSIGN  15976<<ASSIGN
     15981>>IF      15983>>ASSIGN  15984>>ASSIGN  15985>>ASSIGN
S_D.DESCL$
     12998**DCL     15887<<ASSIGN  15892<<ASSIGN  15900<<ASSIGN  15977<<ASSIGN  15981>>IF
S_D.DIRCOM
     13368**DCL     15891--ASSIGN  15892--ASSIGN  15892--ASSIGN  15899--ASSIGN  15900--ASSIGN  15900--ASSIGN
S_D.DIRECT_OFF
     13457**DCL     15384<<ASSIGN
S_D.DIRECT_SIZE
     13455**DCL     15383<<ASSIGN
S_D.DIRECT_TEXT
     13905**DCL     15382<<ASSIGN
S_D.DO_ATTACH
     13139**DCL     15264>>IF
S_D.EIS
     13974**DCL     14003--REDEF
S_D.ERROR
     12945**DCL     15161<<ASSIGN  15191<<ASSIGN  15220>>ASSIGN  15243<<ASSIGN  15274<<ASSIGN  15276<<ASSIGN
     15278<<ASSIGN  15280<<ASSIGN  15282<<ASSIGN  15306<<ASSIGN  15448<<ASSIGN  15469<<ASSIGN  15470<<ASSIGN
     15471<<ASSIGN  15472<<ASSIGN  15473<<ASSIGN  15474<<ASSIGN  15475<<ASSIGN  15476<<ASSIGN  15477<<ASSIGN
     15482>>IF      15650<<ASSIGN  15716<<ASSIGN  15721<<ASSIGN  15729<<ASSIGN  15734<<ASSIGN  15764<<ASSIGN
     15778<<ASSIGN  15928<<ASSIGN  15933<<ASSIGN  15944<<ASSIGN  15989<<ASSIGN
S_D.ERROR_HICHAR
     13558**DCL     15450<<ASSIGN
S_D.ERROR_SYM$
     12969**DCL     15131<<ASSIGN  15160<<ASSIGN  15190<<ASSIGN  15221>>ASSIGN  15242<<ASSIGN  15305<<ASSIGN
     15449<<ASSIGN
S_D.FIXCOM
     13370**DCL     15320--IF      15320--IF      15939--DOINDEX 15939--DOINDEX 15974<<ASSIGN
S_D.FIXCOM.CDF
     13380**DCL     15692<<ASSIGN
S_D.FIXCOM.CMD
     13372**DCL     15489>>IF      15492<<ASSIGN  15940>>IF      15950>>ASSIGN
S_D.FIXCOM.FPRG
     13377**DCL     15966>>IF
S_D.FIXCOM.INACTIVE
PL6.E3A0      #001=DDS$SCAN File=DUS$SCAN.:E05TSI                                TUE 07/29/97 15:01 Page:148  
     13373**DCL     15694<<ASSIGN  15786<<ASSIGN
S_D.FIXCOM.NOT_IN
     13375**DCL     15742<<ASSIGN
S_D.FIXCOM.SILENT
     13374**DCL     15693<<ASSIGN
S_D.FIXCOM.TAL
     13379**DCL     15357<<ASSIGN  15416<<ASSIGN  15491>>ASSIGN
S_D.FIXLAST
     13008**DCL     15298>>IF      15299<<ASSIGN  15424>>IF      15425<<ASSIGN
S_D.FPRG
     13062**DCL     15931>>IF
S_D.GHOST1
     13171**DCL     15437>>IF      15453>>IF
S_D.HOST_MESSAGE_BUF_REMOTE
     13907**DCL     13908--REDEF   13922--REDEF
S_D.IFSPEC$
     13022**DCL     15162<<ASSIGN  15192<<ASSIGN  15346>>IF      15347>>ASSIGN  15839<<ASSIGN  15845<<ASSIGN
S_D.INPUT
     13179**DCL     15195>>IF      15239<<ASSIGN  15292>>IF      15354>>ASSIGN  15382>>ASSIGN  15413>>ASSIGN
S_D.JDE
     13521**DCL     13522--REDEF
S_D.KILL1
     13034**DCL     15953<<ASSIGN
S_D.L$.VALUE
     13074**DCL     13080--REDEF   13088--REDEF   13091--REDEF   13094--REDEF   13097--REDEF
S_D.L$.VALUE.L
     13075**DCL     13076--REDEF   13077--REDEF
S_D.L6_MESSAGE_BUF
     13928**DCL     13930--REDEF
S_D.LASTBLT$
     13108**DCL     15183>>ASSIGN  15183>>ASSIGN  15211>>ASSIGN  15211>>ASSIGN  15345>>ASSIGN  15345>>ASSIGN
     15347>>ASSIGN  15349>>ASSIGN  15351>>ASSIGN  15355>>ASSIGN  15355>>ASSIGN  15357>>ASSIGN  15406>>ASSIGN
     15406>>ASSIGN  15406>>ASSIGN  15408>>CALL    15408>>CALL    15412>>ASSIGN  15412>>ASSIGN  15414>>ASSIGN
     15414>>ASSIGN  15416>>ASSIGN  15667>>ASSIGN  15692>>ASSIGN  15984<<ASSIGN
S_D.MACTIVE
     13185**DCL     15130>>ASSIGN  15132>>IF      15145>>IF      15157<<ASSIGN  15186>>IF      15233<<ASSIGN
PL6.E3A0      #001=DDS$SCAN File=DUS$SCAN.:E05TSI                                TUE 07/29/97 15:01 Page:149  
     15480<<ASSIGN  15481<<ASSIGN  15496>>IF
S_D.NCHARS
     13038**DCL     15195>>IF      15240<<ASSIGN  15292>>IF      15350>>ASSIGN  15353>>CALL    15383>>ASSIGN
     15405>>ASSIGN
S_D.NCMD$
     13552**DCL     15168<<ASSIGN  15206<<ASSIGN  15250<<ASSIGN  15329<<ASSIGN  15364<<ASSIGN  15404<<ASSIGN
S_D.ONABORT
     13544**DCL     15957<<ASSIGN
S_D.ONCALLS
     13546**DCL     15961<<ASSIGN
S_D.ONEXIT
     13548**DCL     15959<<ASSIGN
S_D.ONE_TO_TWO.EXEC_DOMAIN
     13939**DCL     15648>>IF
S_D.ONNODES
     13550**DCL     15963<<ASSIGN
S_D.OUTPUT
     13894**DCL     13896--REDEF   15704--IF      15705--ASSIGN  15706<<ASSIGN  15707--CALL    15770--ASSIGN
     15780<<ASSIGN  15781--ASSIGN  15785--CALL
S_D.OVERLAID
     13578**DCL     15740>>IF
S_D.PARSMORE_REM
     13964**DCL     15139<<REMEMBR
S_D.PATCH
     13560**DCL     15173>>IF
S_D.PROMPT
     13692**DCL     15121--ASSIGN  15165--ASSIGN  15202--ASSIGN  15245--ASSIGN  15310--ASSIGN  15399--ASSIGN
S_D.PROMPT_SIZE
     13690**DCL     15121>>ASSIGN  15165>>ASSIGN  15202>>ASSIGN  15245>>ASSIGN  15310>>ASSIGN  15399>>ASSIGN
S_D.QUALIFIED
     13183**DCL     15159<<ASSIGN  15189<<ASSIGN  15241<<ASSIGN  15303<<ASSIGN
S_D.REMACTIVE
     13131**DCL     15130<<ASSIGN  15480>>ASSIGN
S_D.REMOTE_MSG.FNCC
     13913**DCL     13914--REDEF
S_D.REMOTE_MSG.STXC
PL6.E3A0      #001=DDS$SCAN File=DUS$SCAN.:E05TSI                                TUE 07/29/97 15:01 Page:150  
     13909**DCL     13910--REDEF
S_D.REMOTE_MSG.SUBFNCC
     13917**DCL     13918--REDEF
S_D.RUM
     13562**DCL     15174>>IF      15389>>IF      15926>>IF
S_D.RUM_COMMAND
     13048**DCL     15141<<ASSIGN  15437>>IF      15453>>IF
S_D.RUM_ERRORS
     13143**DCL     15439<<ASSIGN  15439>>ASSIGN  15466<<ASSIGN  15466>>ASSIGN
S_D.RUM_SKIP
     13012**DCL     15155>>IF      15197>>IF      15208>>IF      15254>>IF      15332>>IF      15371>>IF
     15438<<ASSIGN  15454<<ASSIGN
S_D.RUM_TOTAL_ERRORS
     13145**DCL     15440<<ASSIGN  15440>>ASSIGN  15467<<ASSIGN  15467>>ASSIGN
S_D.SACT
     13121**DCL     15144<<ASSIGN  15151>>IF
S_D.STORED
     13110**DCL     15135<<ASSIGN  15147>>IF      15153>>IF      15295>>IF      15298>>IF      15299>>ASSIGN
     15307>>IF      15357>>ASSIGN  15416>>ASSIGN  15421>>IF      15424>>IF      15425>>ASSIGN  15488>>IF
     15489>>IF      15491>>ASSIGN  15492>>ASSIGN  15692>>ASSIGN  15693>>ASSIGN  15694>>ASSIGN  15742>>ASSIGN
     15782<>CALL    15786>>ASSIGN  15884>>IF      15947<<ASSIGN  15970<<ASSIGN  15974>>ASSIGN
S_D.SV
     12973**DCL     12994--REDEF
S_D.UNODE.USENODE
     13570**DCL     15738>>ASSIGN
S_D.VARCOM_HIGH$
     13387**DCL     15887>>ASSIGN  15977>>ASSIGN
S_D.VARNEXT$
     12971**DCL     15356<<ASSIGN  15407>>ASSIGN  15415<<ASSIGN  15491<<ASSIGN  15491>>ASSIGN  15886>>ASSIGN
     15976>>ASSIGN
S_D.XUG_BUILTIN
     14008**DCL     15142<<ASSIGN
S_D$
     14225**DCL     12921--IMP-PTR 15121>>ASSIGN  15121>>ASSIGN  15127>>ASSIGN  15130>>ASSIGN  15130>>ASSIGN
     15131>>ASSIGN  15132>>IF      15135>>ASSIGN  15138>>IF      15139>>REMEMBR 15140>>ASSIGN  15141>>ASSIGN
     15142>>ASSIGN  15144>>ASSIGN  15145>>IF      15147>>IF      15151>>IF      15153>>IF      15155>>IF
PL6.E3A0      #001=DDS$SCAN File=DUS$SCAN.:E05TSI                                TUE 07/29/97 15:01 Page:151  
     15157>>ASSIGN  15159>>ASSIGN  15160>>ASSIGN  15161>>ASSIGN  15162>>ASSIGN  15165>>ASSIGN  15165>>ASSIGN
     15168>>ASSIGN  15173>>IF      15174>>IF      15174>>IF      15183>>ASSIGN  15183>>ASSIGN  15183>>ASSIGN
     15186>>IF      15189>>ASSIGN  15190>>ASSIGN  15191>>ASSIGN  15192>>ASSIGN  15195>>IF      15195>>IF
     15197>>IF      15202>>ASSIGN  15202>>ASSIGN  15206>>ASSIGN  15208>>IF      15211>>ASSIGN  15211>>ASSIGN
     15211>>ASSIGN  15220>>ASSIGN  15221>>ASSIGN  15232>>ASSIGN  15233>>ASSIGN  15238>>ASSIGN  15239>>ASSIGN
     15239>>ASSIGN  15239>>ASSIGN  15240>>ASSIGN  15240>>ASSIGN  15241>>ASSIGN  15242>>ASSIGN  15243>>ASSIGN
     15245>>ASSIGN  15245>>ASSIGN  15250>>ASSIGN  15254>>IF      15264>>IF      15274>>ASSIGN  15276>>ASSIGN
     15278>>ASSIGN  15280>>ASSIGN  15282>>ASSIGN  15288>>ASSIGN  15288>>ASSIGN  15289>>ASSIGN  15289>>ASSIGN
     15292>>IF      15292>>IF      15295>>IF      15298>>IF      15298>>IF      15299>>ASSIGN  15299>>ASSIGN
     15303>>ASSIGN  15305>>ASSIGN  15306>>ASSIGN  15307>>IF      15310>>ASSIGN  15310>>ASSIGN  15329>>ASSIGN
     15332>>IF      15345>>ASSIGN  15345>>ASSIGN  15345>>ASSIGN  15346>>IF      15347>>ASSIGN  15347>>ASSIGN
     15349>>ASSIGN  15350>>ASSIGN  15351>>ASSIGN  15352>>ASSIGN  15353>>CALL    15354>>ASSIGN  15355>>ASSIGN
     15355>>ASSIGN  15355>>ASSIGN  15356>>ASSIGN  15356>>ASSIGN  15357>>ASSIGN  15357>>ASSIGN  15357>>ASSIGN
     15364>>ASSIGN  15371>>IF      15382>>ASSIGN  15382>>ASSIGN  15383>>ASSIGN  15383>>ASSIGN  15384>>ASSIGN
     15389>>IF      15399>>ASSIGN  15399>>ASSIGN  15404>>ASSIGN  15405>>ASSIGN  15406>>ASSIGN  15406>>ASSIGN
     15406>>ASSIGN  15407>>ASSIGN  15407>>ASSIGN  15408>>CALL    15408>>CALL    15412>>ASSIGN  15412>>ASSIGN
     15413>>ASSIGN  15414>>ASSIGN  15414>>ASSIGN  15414>>ASSIGN  15415>>ASSIGN  15415>>ASSIGN  15416>>ASSIGN
     15416>>ASSIGN  15416>>ASSIGN  15421>>IF      15424>>IF      15424>>IF      15425>>ASSIGN  15425>>ASSIGN
     15437>>IF      15437>>IF      15438>>ASSIGN  15439>>ASSIGN  15439>>ASSIGN  15440>>ASSIGN  15440>>ASSIGN
     15448>>ASSIGN  15449>>ASSIGN  15450>>ASSIGN  15453>>IF      15453>>IF      15454>>ASSIGN  15466>>ASSIGN
     15466>>ASSIGN  15467>>ASSIGN  15467>>ASSIGN  15469>>ASSIGN  15470>>ASSIGN  15471>>ASSIGN  15472>>ASSIGN
     15473>>ASSIGN  15474>>ASSIGN  15475>>ASSIGN  15476>>ASSIGN  15477>>ASSIGN  15480>>ASSIGN  15480>>ASSIGN
     15481>>ASSIGN  15482>>IF      15488>>IF      15489>>IF      15489>>IF      15491>>ASSIGN  15491>>ASSIGN
     15491>>ASSIGN  15491>>ASSIGN  15492>>ASSIGN  15492>>ASSIGN  15496>>IF      15648>>IF      15650>>ASSIGN
     15667>>ASSIGN  15672>>ASSIGN  15681>>ASSIGN  15684>>ASSIGN  15684>>ASSIGN  15685>>ASSIGN  15689>>ASSIGN
     15692>>ASSIGN  15692>>ASSIGN  15692>>ASSIGN  15693>>ASSIGN  15693>>ASSIGN  15694>>ASSIGN  15694>>ASSIGN
     15699>>ASSIGN  15703>>ASSIGN  15706>>ASSIGN  15707>>CALL    15716>>ASSIGN  15721>>ASSIGN  15729>>ASSIGN
     15734>>ASSIGN  15738>>ASSIGN  15740>>IF      15741>>IF      15742>>ASSIGN  15742>>ASSIGN  15764>>ASSIGN
     15770>>ASSIGN  15778>>ASSIGN  15780>>ASSIGN  15781>>ASSIGN  15782>>CALL    15785>>CALL    15786>>ASSIGN
     15786>>ASSIGN  15839>>ASSIGN  15845>>ASSIGN  15884>>IF      15886>>ASSIGN  15886>>ASSIGN  15887>>ASSIGN
     15887>>ASSIGN  15891>>ASSIGN  15891>>ASSIGN  15892>>ASSIGN  15892>>ASSIGN  15899>>ASSIGN  15899>>ASSIGN
     15900>>ASSIGN  15900>>ASSIGN  15926>>IF      15926>>IF      15928>>ASSIGN  15931>>IF      15931>>IF
     15933>>ASSIGN  15940>>IF      15944>>ASSIGN  15947>>ASSIGN  15950>>ASSIGN  15953>>ASSIGN  15957>>ASSIGN
     15959>>ASSIGN  15961>>ASSIGN  15963>>ASSIGN  15966>>IF      15970>>ASSIGN  15974>>ASSIGN  15974>>ASSIGN
     15976>>ASSIGN  15976>>ASSIGN  15977>>ASSIGN  15977>>ASSIGN  15981>>IF      15981>>IF      15983>>ASSIGN
     15983>>ASSIGN  15984>>ASSIGN  15984>>ASSIGN  15985>>ASSIGN  15989>>ASSIGN
PL6.E3A0      #001=DDS$SCAN File=DUS$SCAN.:E05TSI                                TUE 07/29/97 15:01 Page:152  
S_FAULT IN PROCEDURE DDS$BLD_WHEN
     15770**LABEL   15771--CALLALT
TCODE IN PROCEDURE DDS$BLD_WHEN
     15525**DCL     15671<<ASSIGN  15673>>IF      15691<<ASSIGN  15697<>CALL    15737>>ASSIGN  15738<<ASSIGN
     15739>>ASSIGN  15741>>IF      15744>>IF      15744>>IF      15745>>ASSIGN  15746>>IF      15749<>CALL
     15750>>ASSIGN  15752>>IF      15755<>CALL    15756>>ASSIGN  15757>>ASSIGN  15759>>IF      15761>>IF
TCODEC IN PROCEDURE DDS$BLD_WHEN
     15526**DCL     15538--IMP-SIZ 15690<<ASSIGN  15691>>ASSIGN  15691--ASSIGN  15698>>ASSIGN  15698>>ASSIGN
     15737<<ASSIGN  15769<<ASSIGN
TEMPCODE
      9167**DCL     15169<<ASSIGN  15170>>CALLBLT 15253<<ASSIGN  15255>>IF      15255>>IF      15255>>IF
     15255>>IF      15255>>IF      15264>>IF      15264>>IF      15264>>IF      15264>>IF      15264>>IF
     15272>>DOCASE  15286<>CALL    15331<<ASSIGN  15334>>IF      15342<>CALL    15370<<ASSIGN  15372>>IF
     15372>>IF      15372>>IF      15372>>IF      15372>>IF      15379<>CALL
TEMPID
      9162**DCL     15319<>CALL    15320>>IF      15320>>IF      15324<<ASSIGN  15937>>IF      15950>>ASSIGN
     15953>>ASSIGN  15966>>IF      15970>>ASSIGN  15972<<ASSIGN
TEXT$C
     11387**DCL     15224>>ASSIGN  15749<>CALL
TEXT$C.SIZE
     11388**DCL     11389--IMP-SIZ 15224>>ASSIGN  15749>>CALL
TRAIL_SEMI
      9177**DCL     15326>>IF      15358>>IF      15366>>IF      15418>>IF      15803<<ASSIGN  15815<<ASSIGN
TRY_AGAIN
     15492**LABEL   15468--GOTO
UDERNC
     15471**LABEL   15328--GOTO    15367--GOTO
UDERR1
     15470**LABEL   15170--CALLALT 15395--GOTO
USERNDE
     15474**LABEL   15174--GOTO
USERNU
     15475**LABEL   15294--GOTO    15392--GOTO
USERPA
     15473**LABEL   15173--GOTO
USERR0
PL6.E3A0      #001=DDS$SCAN File=DUS$SCAN.:E05TSI                                TUE 07/29/97 15:01 Page:153  
     15444**LABEL   15166--CALLALT 15215--GOTO    15247--CALLALT 15312--CALLALT
USERR0A
     15435**LABEL   15401--CALLALT
USERR1
     15469**LABEL   15321--GOTO
USERR7
     15477**LABEL   15336--GOTO
USERRERR
     15479**LABEL   15163--CALLALT 15175--CALLALT 15177--CALLALT 15179--CALLALT 15181--CALLALT 15193--CALLALT
     15199--CALLALT 15219--GOTO    15252--CALLALT 15284--GOTO    15286--CALLALT 15319--CALLALT 15337--CALLALT
     15338--CALLALT 15341--CALLALT 15342--CALLALT 15353--CALLALT 15369--CALLALT 15379--CALLALT 15408--CALLALT
     15469--GOTO    15470--GOTO    15471--GOTO    15472--GOTO    15473--GOTO    15474--GOTO    15475--GOTO
     15476--GOTO    15477--GOTO
USERSK
     15476**LABEL   15156--GOTO    15198--GOTO    15209--GOTO    15261--GOTO    15333--GOTO    15378--GOTO
USERSY
     15472**LABEL   15154--GOTO
V IN PROCEDURE ATTDIR_INIT
     15882**DCL     15950<<ASSIGN  15951>>IF      15954>>CALLBLT 15967<>CALL
VCPOS
      9183**DCL     15343<<ASSIGN  15683<<ASSIGN
WHEN$ IN PROCEDURE DDS$BLD_WHEN
     15539**DCL     15770<<ASSIGN  15771<>CALL
WHEN$CMD IN PROCEDURE DDS$BLD_WHEN
     15543**DCL     15680--CALL    15684--ASSIGN  15688--CALL
WHEN$CMD.ADDRESS IN PROCEDURE DDS$BLD_WHEN
     15570**DCL     15700<>CALL    15725>>ASSIGN  15726>>ASSIGN  15771<>CALL
WHEN$CMD.BOFF IN PROCEDURE DDS$BLD_WHEN
     15575**DCL     15700<>CALL    15726>>ASSIGN  15771<>CALL
WHEN$CMD.BSIZE IN PROCEDURE DDS$BLD_WHEN
     15574**DCL     15700<>CALL    15703<<ASSIGN  15703>>ASSIGN  15704>>IF      15705<<ASSIGN  15726>>ASSIGN
     15769>>ASSIGN  15771<>CALL
WHEN$CMD.BYPASS_COUNT IN PROCEDURE DDS$BLD_WHEN
     15561**DCL     15756<<ASSIGN
WHEN$CMD.CURRENT_COUNT IN PROCEDURE DDS$BLD_WHEN
     15562**DCL     15757<<ASSIGN
PL6.E3A0      #001=DDS$SCAN File=DUS$SCAN.:E05TSI                                TUE 07/29/97 15:01 Page:154  
WHEN$CMD.DESC# IN PROCEDURE DDS$BLD_WHEN
     15572**DCL     15700<>CALL    15713>>IF      15713>>IF      15771<>CALL
WHEN$CMD.END_PAGE IN PROCEDURE DDS$BLD_WHEN
     15577**DCL     15726<<ASSIGN
WHEN$CMD.NODE IN PROCEDURE DDS$BLD_WHEN
     15558**DCL     15739<<ASSIGN
WHEN$CMD.NOT_IS IN PROCEDURE DDS$BLD_WHEN
     15573**DCL     15700<>CALL    15709>>IF      15771<>CALL
WHEN$CMD.OVALUE$ IN PROCEDURE DDS$BLD_WHEN
     15556**DCL     15695<<ASSIGN
WHEN$CMD.SEG IN PROCEDURE DDS$BLD_WHEN
     15571**DCL     15700<>CALL    15711>>IF
WHEN$CMD.START_PAGE IN PROCEDURE DDS$BLD_WHEN
     15576**DCL     15725<<ASSIGN
WHEN$CMD.U.APT IN PROCEDURE DDS$BLD_WHEN
     15549**DCL     15550--REDEF
WHEN$CMD.U.CONST_OFFSET IN PROCEDURE DDS$BLD_WHEN
     15550**DCL     15696<<ASSIGN
WHEN$CMD.UNUSED IN PROCEDURE DDS$BLD_WHEN
     15547**DCL     15548--REDEF
WHEN$CMD.WCOND IN PROCEDURE DDS$BLD_WHEN
     15569**DCL     15745<<ASSIGN
WHEN$CMD.WCTYPE IN PROCEDURE DDS$BLD_WHEN
     15568**DCL     15750<<ASSIGN
WHEN_INIT IN PROCEDURE ATTDIR_INIT
     15897**ENTRY   15679--CALL
WOFF IN PROCEDURE DDS$BLD_WHEN
     15534**DCL     15684<<ASSIGN  15696>>ASSIGN
XUG_GETCMD
      8837**DCL     15120<<ASSIGN  15126<>CALL    15166<>CALL    15204<>CALL    15247<>CALL    15312<>CALL
     15401<>CALL    15458<>CALL    15459<>CALL    15464<>CALL
XUG_GETCMD.DCB_PARAM#
      9017**DCL     15125<<ASSIGN  15457<<ASSIGN  15462<<ASSIGN
XUG_GETCMD.EPOS#
      8947**DCL     15229>>ASSIGN
XUG_GETCMD.ERR#
PL6.E3A0      #001=DDS$SCAN File=DUS$SCAN.:E05TSI                                TUE 07/29/97 15:01 Page:155  
      8848**DCL     15456>>ASSIGN  15463>>ASSIGN
XUG_GETCMD.ERR#.CODE#
      8851**DCL     15214>>IF      15435>>IF      15444>>IF
XUG_GETCMD.ERR_CODE
      8985**DCL     15456<<ASSIGN  15463<<ASSIGN
XUG_GETCMD.INDCB#
      9008**DCL     15123<<ASSIGN
XUG_GETCMD.NODES$
      8838**DCL     15158<<ASSIGN  15188<<ASSIGN  15237<<ASSIGN  15309<<ASSIGN  15398<<ASSIGN
XUG_GETCMD.OUT$
      8842**DCL      8848--REDEF   15167>>ASSIGN  15205>>ASSIGN  15248>>ASSIGN  15313>>ASSIGN  15402>>ASSIGN
     15805>>ASSIGN  15805>>ASSIGN
XUG_GETCMD.OUTDCB#
      9013**DCL     15124<<ASSIGN
XUG_GETCMD.PROMPT_
      9046**DCL     15121<<ASSIGN  15165<<ASSIGN  15202<<ASSIGN  15245<<ASSIGN  15310<<ASSIGN  15399<<ASSIGN
XUG_GETCMD.TEXT_
      9100**DCL     15122<<ASSIGN  15203<<ASSIGN  15246<<ASSIGN  15311<<ASSIGN  15400<<ASSIGN
XUG_GETCMD_CONSTANT
     14714**DCL     15120>>ASSIGN
XUG_GETCMD_CONSTANT.OUT$
     14719**DCL     14725--REDEF
XUG_INIT
      8433**DCL     15117<<ASSIGN  15126<>CALL
XUG_INIT.WORK_
      8553**DCL     15118<<ASSIGN  15119<<ASSIGN
XUG_INIT_CONSTANT
     14304**DCL     15117>>ASSIGN
ZITEM.ADDRESS
      9900**DCL      9905--REDEF    9906--REDEF    9907--REDEF
ZITEM.DTYP
      9882**DCL     15702>>IF
ZITEM.FLAGS.ADDREXP
      9879**DCL     15732>>IF
ZITEM.FLAGS.MDSE.E
      9877**DCL     15732>>IF
PL6.E3A0      #001=DDS$SCAN File=DUS$SCAN.:E05TSI                                TUE 07/29/97 15:01 Page:156  
ZITEM.FLAGS.MDSE.M
      9871**DCL     15727>>IF
ZITEM.SP.VD
      9908**DCL      9912--REDEF    9915--REDEF
ZITEM$
      9289**DCL      9866--IMP-PTR
PL6.E3A0      #001=DDS$SCAN File=DUS$SCAN.:E05TSI                                TUE 07/29/97 15:01 Page:157  
              *** CROSS REFERENCE LISTING ***
    **     DENOTES     IDENTIFIER DEFINITION
    <<                 IDENTIFIER'S VALUE SET
    >>                 IDENTIFIER'S VALUE USED
    <>                 IDENTIFIER SET AND/OR USED
    --                 IDENTIFIER REFERENCED
PL6.E3A0      #001=DDS$SCAN File=DUS$SCAN.:E05TSI                                TUE 07/29/97 15:01 Page:158  
              MINI UREF LISTING

B$TREEHDR    9938**DCL
CXG$ALLMSG    3823**DCL-ENT
CXG$BLANK_PASSWORD    3824**DCL-ENT
CXG$BREAK    3822**DCL-ENT
CXG$CLOSE_DCBS    3822**DCL-ENT
CXG$CLRENABLE    3822**DCL-ENT
CXG$CORRES    3821**DCL-ENT
CXG$DISABLE    3822**DCL-ENT
CXG$ECHO    3820**DCL-ENT
CXG$ECHOIF    3820**DCL-ENT
CXG$ECHOLAST    3821**DCL-ENT
CXG$ENABLE    3822**DCL-ENT
CXG$ERRCNVRT    3824**DCL-ENT
CXG$ERRTOLCP6    3824**DCL-ENT
CXG$FINDDCB    3823**DCL-ENT
CXG$GETDCB    3823**DCL-ENT
CXG$HELP    3823**DCL-ENT
CXG$MOREMSG    3823**DCL-ENT
CXG$SETERRMSG    3821**DCL-ENT
DDB$CHECK_ADDR   15078**DCL-ENT
DDS$SCAN      62**PROC
DDS$SCAN1   15104**ENTRY
DDS$SCAN2   15111**ENTRY
FPRG$CONTEXT IN PROCEDURE DDS$BLD_WHEN  15580**DCL
IXXX IN PROCEDURE DDS$BLD_WHEN  15523**DCL
M$ACCT     361**DCL-ENT
M$ACTIVATE     364**DCL-ENT
M$ALIB     357**DCL-ENT
M$ASUSER     359**DCL-ENT
M$ATTACH     366**DCL-ENT
M$BADPP     384**DCL-ENT
M$CGCTL     365**DCL-ENT
PL6.E3A0      #001=DDS$SCAN File=DUS$SCAN.:E05TSI                                TUE 07/29/97 15:01 Page:159  
M$CGINFO     365**DCL-ENT
M$CHECK     346**DCL-ENT
M$CHGUNIT     404**DCL-ENT
M$CLOSE     344**DCL-ENT
M$CLRSTK     402**DCL-ENT
M$CMDVAR     413**DCL-ENT
M$CONFIG     374**DCL-ENT
M$CORRES     349**DCL-ENT
M$CPEXIT     358**DCL-ENT
M$CVM     382**DCL-ENT
M$CVOL     347**DCL-ENT
M$DCLFLD     374**DCL-ENT
M$DEACTIVATE     364**DCL-ENT
M$DELREC     346**DCL-ENT
M$DEQ     411**DCL-ENT
M$DETACH     366**DCL-ENT
M$DEVICE     348**DCL-ENT
M$DISPLAY     411**DCL-ENT
M$DISPRES     351**DCL-ENT
M$DLIB     357**DCL-ENT
M$DRIBBLE     374**DCL-ENT
M$DRTN     402**DCL-ENT
M$DSUSER     359**DCL-ENT
M$ENQ     410**DCL-ENT
M$EOM     369**DCL-ENT
M$ERASE     375**DCL-ENT
M$ERR     356**DCL-ENT
M$ERRMSG     407**DCL-ENT
M$EVENT     399**DCL-ENT
M$EXHUME     408**DCL-ENT
M$EXIT     356**DCL-ENT
M$EXTEND     348**DCL-ENT
M$FDP     380**DCL-ENT
M$FDS     379**DCL-ENT
M$FEBOOT     372**DCL-ENT
M$FECTL     373**DCL-ENT
PL6.E3A0      #001=DDS$SCAN File=DUS$SCAN.:E05TSI                                TUE 07/29/97 15:01 Page:160  
M$FEDUMP     372**DCL-ENT
M$FID     407**DCL-ENT
M$FINDPROC     361**DCL-ENT
M$FSUSER     359**DCL-ENT
M$FVP     381**DCL-ENT
M$FWCG     365**DCL-ENT
M$GBPL     385**DCL-ENT
M$GDDL     381**DCL-ENT
M$GDP     380**DCL-ENT
M$GDS     379**DCL-ENT
M$GETDCB     350**DCL-ENT
M$GETMOUSE     390**DCL-ENT
M$GETPM     391**DCL-ENT
M$GJOB     409**DCL-ENT
M$GLINEATTR     369**DCL-ENT
M$GOODPP     384**DCL-ENT
M$GPLATEN     377**DCL-ENT
M$GPROMPT     376**DCL-ENT
M$GTRMATTR     370**DCL-ENT
M$GTRMCTL     368**DCL-ENT
M$GTRMTAB     371**DCL-ENT
M$GVP     380**DCL-ENT
M$HELP     407**DCL-ENT
M$INT     399**DCL-ENT
M$INTRTN     360**DCL-ENT
M$IOQ     395**DCL-ENT
M$JOBSTATS     409**DCL-ENT
M$KEYIN     349**DCL-ENT
M$LDEV     344**DCL-ENT
M$LDTRC     357**DCL-ENT
M$LIMIT     350**DCL-ENT
M$LINES     349**DCL-ENT
M$LINK     356**DCL-ENT
M$MADMUCK     352**DCL-ENT
M$MAKUSER     383**DCL-ENT
M$MBS     351**DCL-ENT
PL6.E3A0      #001=DDS$SCAN File=DUS$SCAN.:E05TSI                                TUE 07/29/97 15:01 Page:161  
M$MDFFLD     375**DCL-ENT
M$MERC     400**DCL-ENT
M$MERCS     401**DCL-ENT
M$MIRROR     395**DCL-ENT
M$MONINFO     412**DCL-ENT
M$MPL     385**DCL-ENT
M$NODEINFO     376**DCL-ENT
M$NXTUSR     410**DCL-ENT
M$OCMSG     408**DCL-ENT
M$OLAY     356**DCL-ENT
M$OPEN     344**DCL-ENT
M$PAS     385**DCL-ENT
M$PATHCON     408**DCL-ENT
M$PDS     379**DCL-ENT
M$PFIL     346**DCL-ENT
M$PLATEN     370**DCL-ENT
M$PRECORD     348**DCL-ENT
M$PROCNAME     361**DCL-ENT
M$PROFILE     372**DCL-ENT
M$PROMPT     368**DCL-ENT
M$RACST     352**DCL-ENT
M$RDSYSLOG     393**DCL-ENT
M$READ     345**DCL-ENT
M$RELDCB     350**DCL-ENT
M$RELRES     351**DCL-ENT
M$RELSTARF     353**DCL-ENT
M$REM     353**DCL-ENT
M$RENV     400**DCL-ENT
M$REQUIRE     352**DCL-ENT
M$RETRY     401**DCL-ENT
M$RETRYS     401**DCL-ENT
M$REW     347**DCL-ENT
M$RLSFLD     375**DCL-ENT
M$RPRIV     403**DCL-ENT
M$RSPP     382**DCL-ENT
M$RSWITCH     404**DCL-ENT
PL6.E3A0      #001=DDS$SCAN File=DUS$SCAN.:E05TSI                                TUE 07/29/97 15:01 Page:162  
M$RUE     410**DCL-ENT
M$SAD     383**DCL-ENT
M$SAVE     359**DCL-ENT
M$SCON     360**DCL-ENT
M$SCREECH     358**DCL-ENT
M$SENV     400**DCL-ENT
M$SETFMA     344**DCL-ENT
M$SETFP     373**DCL-ENT
M$SINPUT     371**DCL-ENT
M$SLCFLD     376**DCL-ENT
M$SMOUSE     390**DCL-ENT
M$SMPRT     382**DCL-ENT
M$SPRIV     403**DCL-ENT
M$SSC     383**DCL-ENT
M$SSWITCH     403**DCL-ENT
M$STATE     412**DCL-ENT
M$STD     384**DCL-ENT
M$STIMER     398**DCL-ENT
M$STLPP     381**DCL-ENT
M$STRAP     398**DCL-ENT
M$STRMATTR     370**DCL-ENT
M$STRMCTL     368**DCL-ENT
M$STRMTAB     371**DCL-ENT
M$SYMBIO     409**DCL-ENT
M$SYSCON     395**DCL-ENT
M$SYSID     413**DCL-ENT
M$TDCLOSE     394**DCL-ENT
M$TDIO     394**DCL-ENT
M$TDOPEN     393**DCL-ENT
M$TDREQCPU     394**DCL-ENT
M$TEMPWROC     388**DCL-ENT
M$TIME     411**DCL-ENT
M$TRAP     398**DCL-ENT
M$TRMISC     373**DCL-ENT
M$TRMPRG     369**DCL-ENT
M$TRTN     402**DCL-ENT
PL6.E3A0      #001=DDS$SCAN File=DUS$SCAN.:E05TSI                                TUE 07/29/97 15:01 Page:163  
M$TRUNC     345**DCL-ENT
M$TTIMER     398**DCL-ENT
M$UC     368**DCL
M$UMPL     385**DCL-ENT
M$UNFID     407**DCL-ENT
M$UNLATCH     364**DCL-ENT
M$UNSHARE     361**DCL-ENT
M$USRFIELD     404**DCL-ENT
M$VIRTUAL     379**DCL-ENT
M$WAIT     402**DCL-ENT
M$WEOF     347**DCL-ENT
M$WRITE     345**DCL-ENT
M$WRSYSLOG     393**DCL-ENT
M$XCON     399**DCL-ENT
M$XCONRTN     360**DCL-ENT
M$XEQTIME     412**DCL-ENT
M$XFLUSH     353**DCL-ENT
M$XMOUSE     390**DCL-ENT
M$XXX     356**DCL-ENT
M$YC     358**DCL-ENT
NCC$    9164**DCL
SDD$    9288**DCL
SDD_L6$    9290**DCL
SKIP_ERROR   15482**LABEL
UBIN36 IN PROCEDURE DDS$BLD_WHEN  15524**DCL
ZITEM_L6$    9291**DCL

PL6.E3A0      #002=DDS$SUCCESS File=DUS$SCAN.:E05TSI                             TUE 07/29/97 15:02 Page:164  
      995        1        /*T***********************************************************/
      996        2        /*T*                                                         */
      997        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      998        4        /*T*                                                         */
      999        5        /*T***********************************************************/
     1000        6        /*D* NAME:  DDS$SUCCESS
     1001        7             CALL:  This routine is called by X$PARSE.
     1002        8             INTERFACE:  X$PARSE
     1003        9             ENVIRONMENT:  XDELTA OR USER DELTA
     1004       10             INPUT:  PARSE$PARAM FROM X$PARSE
     1005       11             OUTPUT:  PARSE$PARAM.ACCEPT
     1006       12                      DD_INSTR_CONT
     1007       13             SCRATCH:  None
     1008       14             DESCRIPTION:  This is the U$ routine for X$PARSE.  It is
     1009       15                  entered for success processing when HOST instructions
     1010       16                  are found.  It sets up the correct parse nodes for
     1011       17                  further parsing of the HOST instruction.  This is since
     1012       18                  EIS, DSC, and DFLT instructions all have different
     1013       19                  formats.                                                 */
     1014       20
     1015       21        DDS$SUCCESS: PROC( PARSE$PARAM );
     1016       22
     1017       23        %INCLUDE XU_MACRO_C;                    /* X$PARSE MACROS */
     1018     3129        %INCLUDE XU_SUBS_C;                     /* X$PARSE %SUBs */
     1019     3221        %PARSE$PARAM(NAME=PARSE$PARAM,
     1020     3222                     STCLASS=);
     1021     3303        %INCLUDE XUH_MACRO_C;
     1022     3387        %INCLUDE DD_SD_M;
     1023     4723        %S_D;
     1024     6041        %PARSE$SYM (NAME=OUT$SYM,STCLASS=BASED);
     1025     6079        %INCLUDE DD_SUBS_C;                     /* decoded instr defs */
     1026     6350        %INCLUDE DD_PSUBS_C;                    /* parse tree node defs */
     1027     6825        %INCLUDE DD_KNODES_D;                   /* INSTR node stuff */
     1028     7041        %NODE_DEFS;
     1029     7430        %INCLUDE DD$BASED;
     1030     8733
     1031     8734    1   DCL INSTR_MNEM CHAR(6);
PL6.E3A0      #002=DDS$SUCCESS File=DUS$SCAN.:E05TSI                             TUE 07/29/97 15:02 Page:165  
     1032     8735    1   DCL DDB$MNEM_TO_INSTR ENTRY(2) ALTRET;
     1033     8736        %OP$TAB (STCLASS=AUTO);
     1034     8763    1   DCL INSTR_EIS SBIN SYMREF;
     1035     8764    1   DCL INSTR_ADSC SBIN SYMREF;
     1036     8765    1   DCL INSTR_BDSC SBIN SYMREF;
     1037     8766    1   DCL INSTR_NDSC SBIN SYMREF;
     1038     8767    1   DCL INSTR_SDSC SBIN SYMREF;
     1039     8768    1   DCL INSTR_VDSC SBIN SYMREF;
     1040     8769    1   DCL INSTR_DFLT SBIN SYMREF;
     1041     8770    1   DCL INSTR_ZERO SBIN SYMREF;
     1042     8771
     1043     8772    1        PARSE$PARAM.ACCEPT = '0'B;
     1044     8773    1        PARSE$PARAM.REJECT = '0'B;
     1045     8774    1        PARSE$PARAM.RETRY = '0'B;
     1046     8775    1        IF PARSE$PARAM.OUT$ ~= ADDR(NIL) AND
     1047     8776    1          PARSE$PARAM.OUT$ -> OUT$SYM.CODE = SYM_CODE
     1048     8777    2        THEN DO;
     1049     8778    2             INSTR_MNEM = PARSE$PARAM.OUT$ -> OUT$SYM.TEXT;
     1050     8779    2             DD_INSTR_CONT.SUBNDS$(0) = ADDR(INSTR_DFLT);
     1051     8780    2             CALL DDB$MNEM_TO_INSTR (INSTR_MNEM, OP$TAB)
     1052     8781    3             WHENALTRETURN DO;             /* can't find it */
     1053     8782    3                  PARSE$PARAM.REJECT = '1'B;
     1054     8783    3                  PARSE$PARAM.CHARPOS = PARSE$PARAM.OUT$ -> OUT$SYM.CPOS;
     1055     8784    3                  RETURN;
     1056     8785    3                END;
     1057     8786    2             IF OP$TAB.TYPE = T_INPUT
     1058     8787    3             THEN DO;
     1059     8788    4                  DO CASE (OP$TAB.OPCODE);
     1060     8789    4                    CASE (T_ADSC); DD_INSTR_CONT.SUBNDS$(0) = ADDR(INSTR_ADSC);
     1061     8790    4                    CASE (T_BDSC); DD_INSTR_CONT.SUBNDS$(0) = ADDR(INSTR_BDSC);
     1062     8791    4                    CASE (T_NDSC); DD_INSTR_CONT.SUBNDS$(0) = ADDR(INSTR_NDSC);
     1063     8792    4                    CASE (T_SDSC); DD_INSTR_CONT.SUBNDS$(0) = ADDR(INSTR_SDSC);
     1064     8793    4                    CASE (T_VDSC); DD_INSTR_CONT.SUBNDS$(0) = ADDR(INSTR_VDSC);
     1065     8794    4                    CASE (T_ZERO); DD_INSTR_CONT.SUBNDS$(0) = ADDR(INSTR_ZERO);
     1066     8795    4                    CASE (T_PTR); DD_INSTR_CONT.SUBNDS$(0) = ADDR(INSTR_ZERO);
     1067     8796    4                    END;                   /* do case */
     1068     8797    3                END;                       /* then do */
PL6.E3A0      #002=DDS$SUCCESS File=DUS$SCAN.:E05TSI                             TUE 07/29/97 15:02 Page:166  
     1069     8798    2             IF OP$TAB.TYPE = T_EIS
     1070     8799    3             THEN DO;
     1071     8800    3                  DD_INSTR_CONT.SUBNDS$(0) = ADDR(INSTR_EIS);
     1072     8801    3                END;
     1073     8802    2           END;                            /* if OUT$SYM.CODE = SYM_CODE */
     1074     8803    2        ELSE DO;                           /* assume its a RUM command */
     1075     8804    2             S_D.RUM_COMMAND = '1'B;
     1076     8805    2           END;
     1077     8806    1        PARSE$PARAM.ACCEPT = '1'B;
     1078     8807
     1079     8808    1        RETURN;
     1080     8809
     1081     8810    1   END DDS$SUCCESS;
     1082     8811        %EOD;

PL6.E3A0      #002=DDS$SUCCESS File=DUS$SCAN.:E05TSI                             TUE 07/29/97 15:02 Page:167  
--  Include file information  --

   DD$BASED.:E05TOU  is referenced.
   DD_KNODES_D.:E05TOU  is referenced.
   DD_PSUBS_C.:E05TOU  is referenced.
   DD_SUBS_C.:E05TOU  is referenced.
   DD_SD_M.:E05TOU  is referenced.
   XUH_MACRO_C.:E05TOU  is referenced.
   XU_SUBS_C.:E05TOU  is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure DDS$SUCCESS.

   Procedure DDS$SUCCESS requires 110 words for executable code.
   Procedure DDS$SUCCESS requires 12 words of local(AUTO) storage.

PL6.E3A0      #002=DDS$SUCCESS File=DUS$SCAN.:E05TSI                             TUE 07/29/97 15:02 Page:168  

 Object Unit name= DDS$SUCCESS                                File name= DUS$SCAN.:E05TOU
 UTS= JUL 29 '97 15:02:24.28 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Proc  even  none   110    156  DDS$SUCCESS
    1  RoData even  none    12     14  DDS$SUCCESS

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     0      0   yes            yes      Std        1  DDS$SUCCESS

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       2 DDB$MNEM_TO_INSTR
                       nStd      0 X66_AUTO_1
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
r    S_D$                                  INSTR_EIS                             INSTR_ADSC
     INSTR_BDSC                            INSTR_NDSC                            INSTR_SDSC
     INSTR_VDSC                            INSTR_DFLT                            INSTR_ZERO
     B_VECTNIL
PL6.E3A0      #002=DDS$SUCCESS File=DUS$SCAN.:E05TSI                             TUE 07/29/97 15:02 Page:169  

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     DD_INSTR_CONT                         ISSID
PL6.E3A0      #002=DDS$SUCCESS File=DUS$SCAN.:E05TSI                             TUE 07/29/97 15:02 Page:170  


      995        1        /*T***********************************************************/
      996        2        /*T*                                                         */
      997        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      998        4        /*T*                                                         */
      999        5        /*T***********************************************************/
     1000        6        /*D* NAME:  DDS$SUCCESS
     1001        7             CALL:  This routine is called by X$PARSE.
     1002        8             INTERFACE:  X$PARSE
     1003        9             ENVIRONMENT:  XDELTA OR USER DELTA
     1004       10             INPUT:  PARSE$PARAM FROM X$PARSE
     1005       11             OUTPUT:  PARSE$PARAM.ACCEPT
     1006       12                      DD_INSTR_CONT
     1007       13             SCRATCH:  None
     1008       14             DESCRIPTION:  This is the U$ routine for X$PARSE.  It is
     1009       15                  entered for success processing when HOST instructions
     1010       16                  are found.  It sets up the correct parse nodes for
     1011       17                  further parsing of the HOST instruction.  This is since
     1012       18                  EIS, DSC, and DFLT instructions all have different
     1013       19                  formats.                                                 */
     1014       20
     1015       21        DDS$SUCCESS: PROC( PARSE$PARAM );

     21  0 000000   000000 700200 xent  DDS$SUCCESS  TSX0  ! X66_AUTO_1
         0 000001   000014 000001                    ZERO    12,1

     1016       22
     1017       23        %INCLUDE XU_MACRO_C;                    /* X$PARSE MACROS */
     1018     3129        %INCLUDE XU_SUBS_C;                     /* X$PARSE %SUBs */
     1019     3221        %PARSE$PARAM(NAME=PARSE$PARAM,
     1020     3222                     STCLASS=);
     1021     3303        %INCLUDE XUH_MACRO_C;
     1022     3387        %INCLUDE DD_SD_M;
     1023     4723        %S_D;
     1024     6041        %PARSE$SYM (NAME=OUT$SYM,STCLASS=BASED);
     1025     6079        %INCLUDE DD_SUBS_C;                     /* decoded instr defs */
     1026     6350        %INCLUDE DD_PSUBS_C;                    /* parse tree node defs */
PL6.E3A0      #002=DDS$SUCCESS File=DUS$SCAN.:E05TSI                             TUE 07/29/97 15:02 Page:171  
     1027     6825        %INCLUDE DD_KNODES_D;                   /* INSTR node stuff */
     1028     7041        %NODE_DEFS;
     1029     7430        %INCLUDE DD$BASED;
     1030     8733
     1031     8734    1   DCL INSTR_MNEM CHAR(6);
     1032     8735    1   DCL DDB$MNEM_TO_INSTR ENTRY(2) ALTRET;
     1033     8736        %OP$TAB (STCLASS=AUTO);
     1034     8763    1   DCL INSTR_EIS SBIN SYMREF;
     1035     8764    1   DCL INSTR_ADSC SBIN SYMREF;
     1036     8765    1   DCL INSTR_BDSC SBIN SYMREF;
     1037     8766    1   DCL INSTR_NDSC SBIN SYMREF;
     1038     8767    1   DCL INSTR_SDSC SBIN SYMREF;
     1039     8768    1   DCL INSTR_VDSC SBIN SYMREF;
     1040     8769    1   DCL INSTR_DFLT SBIN SYMREF;
     1041     8770    1   DCL INSTR_ZERO SBIN SYMREF;
     1042     8771
     1043     8772    1        PARSE$PARAM.ACCEPT = '0'B;

   8772  0 000002   200003 470500                    LDP0    @PARSE$PARAM,,AUTO
         0 000003   000000 236000 1                  LDQ     0
         0 000004   000000 356100                    ANSQ    0,,PR0

     1044     8773    1        PARSE$PARAM.REJECT = '0'B;

   8773  0 000005   000001 236000 1                  LDQ     1
         0 000006   000000 356100                    ANSQ    0,,PR0

     1045     8774    1        PARSE$PARAM.RETRY = '0'B;

   8774  0 000007   000002 236000 1                  LDQ     2
         0 000010   000000 356100                    ANSQ    0,,PR0

     1046     8775    1        IF PARSE$PARAM.OUT$ ~= ADDR(NIL) AND

   8775  0 000011   000002 236100                    LDQ     2,,PR0
         0 000012   000001 116000 xsym               CMPQ    B_VECTNIL+1
         0 000013   000147 600000 0                  TZE     s:8804
PL6.E3A0      #002=DDS$SUCCESS File=DUS$SCAN.:E05TSI                             TUE 07/29/97 15:02 Page:172  
         0 000014   000002 471500                    LDP1    2,,PR0
         0 000015   100000 720100                    LXL0    0,,PR1
         0 000016   000016 100003                    CMPX0   14,DU
         0 000017   000147 601000 0                  TNZ     s:8804

     1047     8776    1          PARSE$PARAM.OUT$ -> OUT$SYM.CODE = SYM_CODE
     1048     8777    2        THEN DO;

     1049     8778    2             INSTR_MNEM = PARSE$PARAM.OUT$ -> OUT$SYM.TEXT;

   8778  0 000020   100004 236100                    LDQ     4,,PR1
         0 000021   000033 772000                    QRL     27
         0 000022   000000 621006                    EAX1    0,QL
         0 000023   040100 100540                    MLR     fill='040'O
         0 000024   100004 200011                    ADSC9   4,,PR1                   cn=1,n=*X1
         0 000025   200004 000006                    ADSC9   INSTR_MNEM,,AUTO         cn=0,n=6

     1050     8779    2             DD_INSTR_CONT.SUBNDS$(0) = ADDR(INSTR_DFLT);

   8779  0 000026   000003 236000 1                  LDQ     3
         0 000027   000004 471400 1                  LDP1    4
         0 000030   100001 756100                    STQ     1,,PR1

     1051     8780    2             CALL DDB$MNEM_TO_INSTR (INSTR_MNEM, OP$TAB)

   8780  0 000031   200006 633500                    EPPR3   OP$TAB,,AUTO
         0 000032   200013 453500                    STP3    OP$TAB+5,,AUTO
         0 000033   200004 634500                    EPPR4   INSTR_MNEM,,AUTO
         0 000034   200012 454500                    STP4    OP$TAB+4,,AUTO
         0 000035   200012 630500                    EPPR0   OP$TAB+4,,AUTO
         0 000036   000020 631400 xsym               EPPR1   B_VECTNIL+16
         0 000037   000000 701000 xent               TSX1    DDB$MNEM_TO_INSTR
         0 000040   000042 702000 0                  TSX2    s:8782
         0 000041   000051 710000 0                  TRA     s:8786

     1052     8781    3             WHENALTRETURN DO;             /* can't find it */

PL6.E3A0      #002=DDS$SUCCESS File=DUS$SCAN.:E05TSI                             TUE 07/29/97 15:02 Page:173  
     1053     8782    3                  PARSE$PARAM.REJECT = '1'B;

   8782  0 000042   200003 470500                    LDP0    @PARSE$PARAM,,AUTO
         0 000043   000200 236003                    LDQ     128,DU
         0 000044   000000 256100                    ORSQ    0,,PR0

     1054     8783    3                  PARSE$PARAM.CHARPOS = PARSE$PARAM.OUT$ -> OUT$SYM.CPOS;

   8783  0 000045   000002 471500                    LDP1    2,,PR0
         0 000046   100002 235100                    LDA     2,,PR1
         0 000047   000004 755100                    STA     4,,PR0

     1055     8784    3                  RETURN;

   8784  0 000050   000000 702200 xent               TSX2  ! X66_ARET

     1056     8785    3                END;
     1057     8786    2             IF OP$TAB.TYPE = T_INPUT

   8786  0 000051   200006 236100                    LDQ     OP$TAB,,AUTO
         0 000052   000370 376007                    ANQ     248,DL
         0 000053   000060 116007                    CMPQ    48,DL
         0 000054   000137 601000 0                  TNZ     s:8798

     1058     8787    3             THEN DO;

     1059     8788    4                  DO CASE (OP$TAB.OPCODE);

   8788  0 000055   200006 236100                    LDQ     OP$TAB,,AUTO
         0 000056   000010 772000                    QRL     8
         0 000057   001777 376007                    ANQ     1023,DL
         0 000060   000021 116007                    CMPQ    17,DL
         0 000061   000063 602006 0                  TNC     s:8788+6,QL
         0 000062   000137 710000 0                  TRA     s:8798
         0 000063   000137 710000 0                  TRA     s:8798
         0 000064   000137 710000 0                  TRA     s:8798
         0 000065   000104 710000 0                  TRA     s:8789
PL6.E3A0      #002=DDS$SUCCESS File=DUS$SCAN.:E05TSI                             TUE 07/29/97 15:02 Page:174  
         0 000066   000137 710000 0                  TRA     s:8798
         0 000067   000110 710000 0                  TRA     s:8790
         0 000070   000137 710000 0                  TRA     s:8798
         0 000071   000114 710000 0                  TRA     s:8791
         0 000072   000137 710000 0                  TRA     s:8798
         0 000073   000120 710000 0                  TRA     s:8792
         0 000074   000137 710000 0                  TRA     s:8798
         0 000075   000124 710000 0                  TRA     s:8793
         0 000076   000137 710000 0                  TRA     s:8798
         0 000077   000137 710000 0                  TRA     s:8798
         0 000100   000137 710000 0                  TRA     s:8798
         0 000101   000130 710000 0                  TRA     s:8794
         0 000102   000137 710000 0                  TRA     s:8798
         0 000103   000134 710000 0                  TRA     s:8795

     1060     8789    4                    CASE (T_ADSC); DD_INSTR_CONT.SUBNDS$(0) = ADDR(INSTR_ADSC);

   8789  0 000104   000005 236000 1                  LDQ     5
         0 000105   000004 470400 1                  LDP0    4
         0 000106   000001 756100                    STQ     1,,PR0
         0 000107   000137 710000 0                  TRA     s:8798

     1061     8790    4                    CASE (T_BDSC); DD_INSTR_CONT.SUBNDS$(0) = ADDR(INSTR_BDSC);

   8790  0 000110   000006 236000 1                  LDQ     6
         0 000111   000004 470400 1                  LDP0    4
         0 000112   000001 756100                    STQ     1,,PR0
         0 000113   000137 710000 0                  TRA     s:8798

     1062     8791    4                    CASE (T_NDSC); DD_INSTR_CONT.SUBNDS$(0) = ADDR(INSTR_NDSC);

   8791  0 000114   000007 236000 1                  LDQ     7
         0 000115   000004 470400 1                  LDP0    4
         0 000116   000001 756100                    STQ     1,,PR0
         0 000117   000137 710000 0                  TRA     s:8798

     1063     8792    4                    CASE (T_SDSC); DD_INSTR_CONT.SUBNDS$(0) = ADDR(INSTR_SDSC);
PL6.E3A0      #002=DDS$SUCCESS File=DUS$SCAN.:E05TSI                             TUE 07/29/97 15:02 Page:175  

   8792  0 000120   000010 236000 1                  LDQ     8
         0 000121   000004 470400 1                  LDP0    4
         0 000122   000001 756100                    STQ     1,,PR0
         0 000123   000137 710000 0                  TRA     s:8798

     1064     8793    4                    CASE (T_VDSC); DD_INSTR_CONT.SUBNDS$(0) = ADDR(INSTR_VDSC);

   8793  0 000124   000011 236000 1                  LDQ     9
         0 000125   000004 470400 1                  LDP0    4
         0 000126   000001 756100                    STQ     1,,PR0
         0 000127   000137 710000 0                  TRA     s:8798

     1065     8794    4                    CASE (T_ZERO); DD_INSTR_CONT.SUBNDS$(0) = ADDR(INSTR_ZERO);

   8794  0 000130   000012 236000 1                  LDQ     10
         0 000131   000004 470400 1                  LDP0    4
         0 000132   000001 756100                    STQ     1,,PR0
         0 000133   000137 710000 0                  TRA     s:8798

     1066     8795    4                    CASE (T_PTR); DD_INSTR_CONT.SUBNDS$(0) = ADDR(INSTR_ZERO);

   8795  0 000134   000012 236000 1                  LDQ     10
         0 000135   000004 470400 1                  LDP0    4
         0 000136   000001 756100                    STQ     1,,PR0

     1067     8796    4                    END;                   /* do case */

     1068     8797    3                END;                       /* then do */

     1069     8798    2             IF OP$TAB.TYPE = T_EIS

   8798  0 000137   200006 236100                    LDQ     OP$TAB,,AUTO
         0 000140   000370 376007                    ANQ     248,DL
         0 000141   000010 116007                    CMPQ    8,DL
         0 000142   000152 601000 0                  TNZ     s:8806

PL6.E3A0      #002=DDS$SUCCESS File=DUS$SCAN.:E05TSI                             TUE 07/29/97 15:02 Page:176  
     1070     8799    3             THEN DO;

     1071     8800    3                  DD_INSTR_CONT.SUBNDS$(0) = ADDR(INSTR_EIS);

   8800  0 000143   000013 236000 1                  LDQ     11
         0 000144   000004 470400 1                  LDP0    4
         0 000145   000001 756100                    STQ     1,,PR0

     1072     8801    3                END;

     1073     8802    2           END;                            /* if OUT$SYM.CODE = SYM_CODE */

   8802  0 000146   000152 710000 0                  TRA     s:8806

     1074     8803    2        ELSE DO;                           /* assume its a RUM command */

     1075     8804    2             S_D.RUM_COMMAND = '1'B;

   8804  0 000147   400000 236003                    LDQ     -131072,DU
         0 000150   000000 471400 xsym               LDP1    S_D$
         0 000151   100072 756100                    STQ     58,,PR1

     1076     8805    2           END;

     1077     8806    1        PARSE$PARAM.ACCEPT = '1'B;

   8806  0 000152   200003 470500                    LDP0    @PARSE$PARAM,,AUTO
         0 000153   000400 236003                    LDQ     256,DU
         0 000154   000000 256100                    ORSQ    0,,PR0

     1078     8807
     1079     8808    1        RETURN;

   8808  0 000155   000000 702200 xent               TSX2  ! X66_ARET

(unnamed)
 Sect OctLoc
PL6.E3A0      #002=DDS$SUCCESS File=DUS$SCAN.:E05TSI                             TUE 07/29/97 15:02 Page:177  
   1     000   777377 777777   777577 777777   777677 777777   000000 006000    ................
   1     004   000000 000000   000000 006000   000000 006000   000000 006000    ................
   1     010   000000 006000   000000 006000   000000 006000   000000 006000    ................
     1080     8809
     1081     8810    1   END DDS$SUCCESS;
     1082     8811        %EOD;

PL6.E3A0      #002=DDS$SUCCESS File=DUS$SCAN.:E05TSI                             TUE 07/29/97 15:02 Page:178  
--  Include file information  --

   DD$BASED.:E05TOU  is referenced.
   DD_KNODES_D.:E05TOU  is referenced.
   DD_PSUBS_C.:E05TOU  is referenced.
   DD_SUBS_C.:E05TOU  is referenced.
   DD_SD_M.:E05TOU  is referenced.
   XUH_MACRO_C.:E05TOU  is referenced.
   XU_SUBS_C.:E05TOU  is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure DDS$SUCCESS.

   Procedure DDS$SUCCESS requires 110 words for executable code.
   Procedure DDS$SUCCESS requires 12 words of local(AUTO) storage.
PL6.E3A0      #002=DDS$SUCCESS File=DUS$SCAN.:E05TSI                             TUE 07/29/97 15:02 Page:179  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #002=DDS$SUCCESS File=DUS$SCAN.:E05TSI                             TUE 07/29/97 15:02 Page:180  
          MINI XREF LISTING

DDB$MNEM_TO_INSTR
      8735**DCL-ENT  8780--CALL
DD_INSTR_CONT.SUBNDS$
      7135**DCL      8779<<ASSIGN   8789<<ASSIGN   8790<<ASSIGN   8791<<ASSIGN   8792<<ASSIGN   8793<<ASSIGN
      8794<<ASSIGN   8795<<ASSIGN   8800<<ASSIGN
INSTR_ADSC
      8764**DCL      8789--ASSIGN
INSTR_BDSC
      8765**DCL      8790--ASSIGN
INSTR_DFLT
      8769**DCL      8779--ASSIGN
INSTR_EIS
      8763**DCL      8800--ASSIGN
INSTR_MNEM
      8734**DCL      8778<<ASSIGN   8780<>CALL
INSTR_NDSC
      8766**DCL      8791--ASSIGN
INSTR_SDSC
      8767**DCL      8792--ASSIGN
INSTR_VDSC
      8768**DCL      8793--ASSIGN
INSTR_ZERO
      8770**DCL      8794--ASSIGN   8795--ASSIGN
OP$TAB
      8737**DCL      8780<>CALL
OP$TAB.EIS
      8739**DCL      8747--REDEF
OP$TAB.OPCODE
      8754**DCL      8788>>DOCASE
OP$TAB.TYPE
      8755**DCL      8786>>IF       8798>>IF
OUT$SYM.CODE
PL6.E3A0      #002=DDS$SUCCESS File=DUS$SCAN.:E05TSI                             TUE 07/29/97 15:02 Page:181  
      6054**DCL      8775>>IF
OUT$SYM.COUNT
      6071**DCL      6074--IMP-SIZ  8778>>ASSIGN
OUT$SYM.CPOS
      6063**DCL      8783>>ASSIGN
OUT$SYM.TEXT
      6074**DCL      8778>>ASSIGN
PARSE$PARAM
      3241**DCL        21--PROC
PARSE$PARAM.ACCEPT
      3248**DCL      8772<<ASSIGN   8806<<ASSIGN
PARSE$PARAM.CHARPOS
      3279**DCL      8783<<ASSIGN
PARSE$PARAM.OUT$
      3271**DCL      8775>>IF       8775>>IF       8778>>ASSIGN   8778>>ASSIGN   8783>>ASSIGN
PARSE$PARAM.REJECT
      3253**DCL      8773<<ASSIGN   8782<<ASSIGN
PARSE$PARAM.RETRY
      3257**DCL      8774<<ASSIGN
S_D.CURRENT_CHANNEL
      5675**DCL      5677--REDEF
S_D.DEBUGA
      4827**DCL      4829--REDEF
S_D.EIS
      5785**DCL      5814--REDEF
S_D.HOST_MESSAGE_BUF_REMOTE
      5718**DCL      5719--REDEF    5733--REDEF
S_D.JDE
      5332**DCL      5333--REDEF
S_D.L$.VALUE
      4885**DCL      4891--REDEF    4899--REDEF    4902--REDEF    4905--REDEF    4908--REDEF
S_D.L$.VALUE.L
      4886**DCL      4887--REDEF    4888--REDEF
S_D.L6_MESSAGE_BUF
      5739**DCL      5741--REDEF
S_D.OUTPUT
PL6.E3A0      #002=DDS$SUCCESS File=DUS$SCAN.:E05TSI                             TUE 07/29/97 15:02 Page:182  
      5705**DCL      5707--REDEF
S_D.REMOTE_MSG.FNCC
      5724**DCL      5725--REDEF
S_D.REMOTE_MSG.STXC
      5720**DCL      5721--REDEF
S_D.REMOTE_MSG.SUBFNCC
      5728**DCL      5729--REDEF
S_D.RUM_COMMAND
      4859**DCL      8804<<ASSIGN
S_D.SV
      4784**DCL      4805--REDEF
S_D$
      6036**DCL      4732--IMP-PTR  8804>>ASSIGN
PL6.E3A0      #002=DDS$SUCCESS File=DUS$SCAN.:E05TSI                             TUE 07/29/97 15:02 Page:183  
              *** CROSS REFERENCE LISTING ***
    **     DENOTES     IDENTIFIER DEFINITION
    <<                 IDENTIFIER'S VALUE SET
    >>                 IDENTIFIER'S VALUE USED
    <>                 IDENTIFIER SET AND/OR USED
    --                 IDENTIFIER REFERENCED
PL6.E3A0      #002=DDS$SUCCESS File=DUS$SCAN.:E05TSI                             TUE 07/29/97 15:02 Page:184  
              MINI UREF LISTING

DD$COMP_NODE_PTR$    7050**DCL
DDS$SUCCESS      21**PROC
DD_COMPNODE$    7048**DCL
DD_COMP_NODE_PTR$    7049**DCL
DD_HOST_NODE_PTR$    7045**DCL
DD_L6X_NODE_PTR$    7047**DCL
DD_L6_NODE_PTR$    7046**DCL
DD_MODE_NODE_PTR$    7044**DCL
DD_NODE    7163**DCL

PL6.E3A0      #003=DUS$SCANREAD File=DUS$SCAN.:E05TSI                            TUE 07/29/97 15:02 Page:185  
     1083        1        /*T***********************************************************/
     1084        2        /*T*                                                         */
     1085        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
     1086        4        /*T*                                                         */
     1087        5        /*T***********************************************************/
     1088        6        DUS$SCANREAD: PROC (BUFVEC, ARS, READR$);
     1089        7
     1090        8    1   DCL BUFVEC VECTOR;
     1091        9    1   DCL ARS SBIN;
     1092       10    1   DCL READR$ EPTR;
     1093       11
     1094       12        %INCLUDE XUH_MACRO_C;
     1095       96        %INCLUDE DD_SD_M;
     1096     1432    1   DCL B$CHAR CHAR(300) BASED;
     1097     1433        %S_D;
     1098     2751
     1099     2752    1        IF S_D.BEEN_TO_SCANREAD THEN UNWIND TO S_D.PARSMORE_REM;
     1100     2753    1        VBASE(BUFVEC)->B$CHAR = S_D.INPUT;
     1101     2754    1        ARS = S_D.NCHARS;
     1102     2755    1        S_D.BEEN_TO_SCANREAD = '1'B;
     1103     2756
     1104     2757    1        RETURN;
     1105     2758
     1106     2759    1   DUS$POST_EXEC: ENTRY;
     1107     2760
     1108     2761    1        S_D.XUG_BUILTIN = '1'B;
     1109     2762    1        RETURN;
     1110     2763
     1111     2764    1   END DUS$SCANREAD;

PL6.E3A0      #003=DUS$SCANREAD File=DUS$SCAN.:E05TSI                            TUE 07/29/97 15:02 Page:186  
--  Include file information  --

   DD_SD_M.:E05TOU  is referenced.
   XUH_MACRO_C.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure DUS$SCANREAD.

   Procedure DUS$SCANREAD requires 25 words for executable code.
   Procedure DUS$SCANREAD requires 6 words of local(AUTO) storage.

    No errors detected in file DUS$SCAN.:E05TSI    .

PL6.E3A0      #003=DUS$SCANREAD File=DUS$SCAN.:E05TSI                            TUE 07/29/97 15:02 Page:187  

 Object Unit name= DUS$SCANREAD                               File name= DUS$SCAN.:E05TOU
 UTS= JUL 29 '97 15:02:36.60 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Proc  even  none    25     31  DUS$SCANREAD

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     0      0   yes            yes      Std        3  DUS$SCANREAD
     0     23                  yes      Std        0  DUS$POST_EXEC

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
                       nStd      0 X66_AUTO_3
                       nStd      0 X66_AUNWIND
                       nStd      0 X66_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
r    S_D$
PL6.E3A0      #003=DUS$SCANREAD File=DUS$SCAN.:E05TSI                            TUE 07/29/97 15:02 Page:188  


     1083        1        /*T***********************************************************/
     1084        2        /*T*                                                         */
     1085        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
     1086        4        /*T*                                                         */
     1087        5        /*T***********************************************************/
     1088        6        DUS$SCANREAD: PROC (BUFVEC, ARS, READR$);

      6  0 000000   000000 700200 xent  DUS$SCANREAD TSX0  ! X66_AUTO_3
         0 000001   000006 000003                    ZERO    6,3

     1089        7
     1090        8    1   DCL BUFVEC VECTOR;
     1091        9    1   DCL ARS SBIN;
     1092       10    1   DCL READR$ EPTR;
     1093       11
     1094       12        %INCLUDE XUH_MACRO_C;
     1095       96        %INCLUDE DD_SD_M;
     1096     1432    1   DCL B$CHAR CHAR(300) BASED;
     1097     1433        %S_D;
     1098     2751
     1099     2752    1        IF S_D.BEEN_TO_SCANREAD THEN UNWIND TO S_D.PARSMORE_REM;

   2752  0 000002   000000 470400 xsym               LDP0    S_D$
         0 000003   006726 234100                    SZN     3542,,PR0
         0 000004   000010 605000 0                  TPL     s:2753

   2752  0 000005   006732 237300                    LDAQ  ! 3546,,PR0
         0 000006   000000 700200 xent               TSX0  ! X66_AUNWIND
         0 000007   000000 000200                    ZERO    0,128

     1100     2753    1        VBASE(BUFVEC)->B$CHAR = S_D.INPUT;

   2753  0 000010   200003 471500                    LDP1    @BUFVEC,,AUTO
         0 000011   100001 473500                    LDP3    1,,PR1
         0 000012   040100 100500                    MLR     fill='040'O
         0 000013   000610 000400                    ADSC9   392,,PR0                 cn=0,n=256
PL6.E3A0      #003=DUS$SCANREAD File=DUS$SCAN.:E05TSI                            TUE 07/29/97 15:02 Page:189  
         0 000014   300000 000454                    ADSC9   0,,PR3                   cn=0,n=300

     1101     2754    1        ARS = S_D.NCHARS;

   2754  0 000015   200004 473500                    LDP3    @ARS,,AUTO
         0 000016   000065 235100                    LDA     53,,PR0
         0 000017   300000 755100                    STA     0,,PR3

     1102     2755    1        S_D.BEEN_TO_SCANREAD = '1'B;

   2755  0 000020   400000 236003                    LDQ     -131072,DU
         0 000021   006726 756100                    STQ     3542,,PR0

     1103     2756
     1104     2757    1        RETURN;

   2757  0 000022   000000 702200 xent               TSX2  ! X66_ARET

     1105     2758
     1106     2759    1   DUS$POST_EXEC: ENTRY;

   2759  0 000023   000000 700200 xent  DUS$POST_EX* TSX0  ! X66_AUTO_3
         0 000024   000006 000003                    ZERO    6,3

     1107     2760
     1108     2761    1        S_D.XUG_BUILTIN = '1'B;

   2761  0 000025   400000 236003                    LDQ     -131072,DU
         0 000026   000000 470400 xsym               LDP0    S_D$
         0 000027   006742 756100                    STQ     3554,,PR0

     1109     2762    1        RETURN;

   2762  0 000030   000000 702200 xent               TSX2  ! X66_ARET
     1110     2763
     1111     2764    1   END DUS$SCANREAD;

PL6.E3A0      #003=DUS$SCANREAD File=DUS$SCAN.:E05TSI                            TUE 07/29/97 15:02 Page:190  
--  Include file information  --

   DD_SD_M.:E05TOU  is referenced.
   XUH_MACRO_C.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure DUS$SCANREAD.

   Procedure DUS$SCANREAD requires 25 words for executable code.
   Procedure DUS$SCANREAD requires 6 words of local(AUTO) storage.

    No errors detected in file DUS$SCAN.:E05TSI    .
PL6.E3A0      #003=DUS$SCANREAD File=DUS$SCAN.:E05TSI                            TUE 07/29/97 15:02 Page:191  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #003=DUS$SCANREAD File=DUS$SCAN.:E05TSI                            TUE 07/29/97 15:02 Page:192  
          MINI XREF LISTING

ARS
         9**DCL         6--PROC     2754<<ASSIGN
B$CHAR
      1432**DCL      2753<<ASSIGN
BUFVEC
         8**DCL         6--PROC     2753>>ASSIGN
READR$
        10**DCL         6--PROC
S_D.BEEN_TO_SCANREAD
      2481**DCL      2752>>IF       2755<<ASSIGN
S_D.CURRENT_CHANNEL
      2385**DCL      2387--REDEF
S_D.DEBUGA
      1537**DCL      1539--REDEF
S_D.EIS
      2495**DCL      2524--REDEF
S_D.HOST_MESSAGE_BUF_REMOTE
      2428**DCL      2429--REDEF    2443--REDEF
S_D.INPUT
      1700**DCL      2753>>ASSIGN
S_D.JDE
      2042**DCL      2043--REDEF
S_D.L$.VALUE
      1595**DCL      1601--REDEF    1609--REDEF    1612--REDEF    1615--REDEF    1618--REDEF
S_D.L$.VALUE.L
      1596**DCL      1597--REDEF    1598--REDEF
S_D.L6_MESSAGE_BUF
      2449**DCL      2451--REDEF
S_D.NCHARS
      1559**DCL      2754>>ASSIGN
S_D.OUTPUT
      2415**DCL      2417--REDEF
PL6.E3A0      #003=DUS$SCANREAD File=DUS$SCAN.:E05TSI                            TUE 07/29/97 15:02 Page:193  
S_D.PARSMORE_REM
      2485**DCL      2752>>UNWIND
S_D.REMOTE_MSG.FNCC
      2434**DCL      2435--REDEF
S_D.REMOTE_MSG.STXC
      2430**DCL      2431--REDEF
S_D.REMOTE_MSG.SUBFNCC
      2438**DCL      2439--REDEF
S_D.SV
      1494**DCL      1515--REDEF
S_D.XUG_BUILTIN
      2529**DCL      2761<<ASSIGN
S_D$
      2746**DCL      1442--IMP-PTR  2752>>IF       2752>>UNWIND   2753>>ASSIGN   2754>>ASSIGN   2755>>ASSIGN
      2761>>ASSIGN
PL6.E3A0      #003=DUS$SCANREAD File=DUS$SCAN.:E05TSI                            TUE 07/29/97 15:02 Page:194  
              *** CROSS REFERENCE LISTING ***
    **     DENOTES     IDENTIFIER DEFINITION
    <<                 IDENTIFIER'S VALUE SET
    >>                 IDENTIFIER'S VALUE USED
    <>                 IDENTIFIER SET AND/OR USED
    --                 IDENTIFIER REFERENCED
PL6.E3A0      #003=DUS$SCANREAD File=DUS$SCAN.:E05TSI                            TUE 07/29/97 15:02 Page:195  
              MINI UREF LISTING

DUS$POST_EXEC    2759**ENTRY
DUS$SCANREAD       6**PROC
