VERSION E05

PL6.E3A0      #001=GID$DISK2VSEC File=GID$DISK.:E05TSI                           TUE 07/29/97 21:44 Page:1    
        1        1        /*M* GID$DISK2VSEC VSECTOR/DISK parameter conversion   */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*F*     NAME:          GID$DISK2VSEC
        8        8                 PURPOSE:       Convert from disk parameters to VSEC.
        9        9        */
       10       10        GID$DISK2VSEC: PROC(SIDE,TRACK,SECTOR,VSECTOR,DRIVE);
       11       11        /**/
       12       12        /*  Parameters  */
       13       13        /**/
       14       14    1   DCL SIDE SBIN;
       15       15    1   DCL TRACK SBIN;
       16       16    1   DCL SECTOR SBIN;
       17       17    1   DCL VSECTOR SBIN;
       18       18    1   DCL DRIVE SBIN;
       19       19        /**/
       20       20        /*  AUTO  */
       21       21        /**/
       22       22    1   DCL LEFT SBIN;
       23       23        /**/
       24       24    1           VSECTOR = DRIVE*2560 + TRACK*32 + SIDE*16 + SECTOR;
       25       25    1      RETURN;
       26       26        /**/
       27       27    1   GID$VSEC2DISK: ENTRY(SIDE,TRACK,SECTOR,VSECTOR,DRIVE);
       28       28    1           DRIVE = VSECTOR / 2560;
       29       29    1           LEFT = MOD(VSECTOR,2560);
       30       30    1           TRACK = LEFT / 32;
       31       31    1           LEFT = MOD(LEFT,32);
       32       32    1           SIDE = LEFT / 16;
       33       33    1           LEFT = MOD(LEFT,16);
       34       34    1           SECTOR = LEFT;
       35       35    1      RETURN;
       36       36        /**/
       37       37    1      END GID$DISK2VSEC;
PL6.E3A0      #001=GID$DISK2VSEC File=GID$DISK.:E05TSI                           TUE 07/29/97 21:44 Page:2    
       38       38        %EOD;

PL6.E3A0      #001=GID$DISK2VSEC File=GID$DISK.:E05TSI                           TUE 07/29/97 21:44 Page:3    
      No diagnostics issued in procedure GID$DISK2VSEC.

   Procedure GID$DISK2VSEC requires 75 words for executable code.
   Procedure GID$DISK2VSEC requires 16 words of local(AUTO) storage.

PL6.E3A0      #001=GID$DISK2VSEC File=GID$DISK.:E05TSI                           TUE 07/29/97 21:44 Page:4    

 Object Unit name= GID$DISK2VSEC                              File name= GID$DISK.:E05TOU
 UTS= JUL 29 '97 21:44:08.24 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_LCP6_SYSTEM                               Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size HexSiz  Section name
    0   Proc  even  none    75     4B  GID$DISK2VSEC

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect HexLoc Primary Altret sequence   type   Parms  Name
     0      0   yes            yes      Std        5  GID$DISK2VSEC
     0     1A                  yes      Std        5  GID$VSEC2DISK

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
                       nStd      0 X6A_AUTO_N
                       nStd      0 X6A_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
r    G$ROS$
PL6.E3A0      #001=GID$DISK2VSEC File=GID$DISK.:E05TSI                           TUE 07/29/97 21:44 Page:5    


        1        1        /*M* GID$DISK2VSEC VSECTOR/DISK parameter conversion   */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*F*     NAME:          GID$DISK2VSEC
        8        8                 PURPOSE:       Convert from disk parameters to VSEC.
        9        9        */
       10       10        GID$DISK2VSEC: PROC(SIDE,TRACK,SECTOR,VSECTOR,DRIVE);

     10   0 000000  D380 0000 0000  xent GID$DISK2VSEC   LNJ,B5   X6A_AUTO_N
          0 000003       0010 0005                       DC       16,5

       11       11        /**/
       12       12        /*  Parameters  */
       13       13        /**/
       14       14    1   DCL SIDE SBIN;
       15       15    1   DCL TRACK SBIN;
       16       16    1   DCL SECTOR SBIN;
       17       17    1   DCL VSECTOR SBIN;
       18       18    1   DCL DRIVE SBIN;
       19       19        /**/
       20       20        /*  AUTO  */
       21       21        /**/
       22       22    1   DCL LEFT SBIN;
       23       23        /**/
       24       24    1           VSECTOR = DRIVE*2560 + TRACK*32 + SIDE*16 + SECTOR;

     24   0 000005  ECC7 0006                            LDB,B6   @TRACK,AUTO
          0 000007  DCC7 000C                            LDB,B5   @DRIVE,AUTO
          0 000009  E805                                 LDR,R6   ,B5
          0 00000A  6F50                                 MLV,R6   80
          0 00000B  EA06                                 ADD,R6   ,B6
          0 00000C  CCC7 0004                            LDB,B4   @SIDE,AUTO
          0 00000E  6001                                 SOL,R6   1
PL6.E3A0      #001=GID$DISK2VSEC File=GID$DISK.:E05TSI                           TUE 07/29/97 21:44 Page:6    
          0 00000F  EA04                                 ADD,R6   ,B4
          0 000010  BCC7 0008                            LDB,B3   @SECTOR,AUTO
          0 000012  6004                                 SOL,R6   4
          0 000013  EA03                                 ADD,R6   ,B3
          0 000014  ACC7 000A                            LDB,B2   @VSECTOR,AUTO
          0 000016  EF02                                 STR,R6   ,B2

       25       25    1      RETURN;

     25   0 000017  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

       26       26        /**/
       27       27    1   GID$VSEC2DISK: ENTRY(SIDE,TRACK,SECTOR,VSECTOR,DRIVE);

     27   0 00001A  D380 0000 0000  xent GID$VSEC2DISK   LNJ,B5   X6A_AUTO_N
          0 00001D       0010 0005                       DC       16,5

       28       28    1           DRIVE = VSECTOR / 2560;

     28   0 00001F  ECC7 000A                            LDB,B6   @VSECTOR,AUTO
          0 000021  E806                                 LDR,R6   ,B6
          0 000022  E370 0A00                            DIV,R6   2560,IMO
          0 000024  DCC7 000C                            LDB,B5   @DRIVE,AUTO
          0 000026  EF05                                 STR,R6   ,B5

       29       29    1           LEFT = MOD(VSECTOR,2560);

     29   0 000027  E806                                 LDR,R6   ,B6
          0 000028  70F0                                 DAR,R7   16
          0 000029  F370 0A00                            DIV,R7   2560,IMO
          0 00002B  EF47 000E                            STR,R6   LEFT,AUTO

       30       30    1           TRACK = LEFT / 32;

     30   0 00002D  E370 0020                            DIV,R6   32,IMO
          0 00002F  CCC7 0006                            LDB,B4   @TRACK,AUTO
          0 000031  EF04                                 STR,R6   ,B4
PL6.E3A0      #001=GID$DISK2VSEC File=GID$DISK.:E05TSI                           TUE 07/29/97 21:44 Page:7    

       31       31    1           LEFT = MOD(LEFT,32);

     31   0 000032  E847 000E                            LDR,R6   LEFT,AUTO
          0 000034  70F0                                 DAR,R7   16
          0 000035  F370 0020                            DIV,R7   32,IMO
          0 000037  EF47 000E                            STR,R6   LEFT,AUTO

       32       32    1           SIDE = LEFT / 16;

     32   0 000039  E370 0010                            DIV,R6   16,IMO
          0 00003B  BCC7 0004                            LDB,B3   @SIDE,AUTO
          0 00003D  EF03                                 STR,R6   ,B3

       33       33    1           LEFT = MOD(LEFT,16);

     33   0 00003E  E847 000E                            LDR,R6   LEFT,AUTO
          0 000040  70F0                                 DAR,R7   16
          0 000041  F370 0010                            DIV,R7   16,IMO
          0 000043  EF47 000E                            STR,R6   LEFT,AUTO

       34       34    1           SECTOR = LEFT;

     34   0 000045  ACC7 0008                            LDB,B2   @SECTOR,AUTO
          0 000047  EF02                                 STR,R6   ,B2

       35       35    1      RETURN;

     35   0 000048  C380 0000 0000  xent                 LNJ,B4   X6A_ARET
       36       36        /**/
       37       37    1      END GID$DISK2VSEC;
       38       38        %EOD;

PL6.E3A0      #001=GID$DISK2VSEC File=GID$DISK.:E05TSI                           TUE 07/29/97 21:44 Page:8    
      No diagnostics issued in procedure GID$DISK2VSEC.
PL6.E3A0      #001=GID$DISK2VSEC File=GID$DISK.:E05TSI                           TUE 07/29/97 21:44 Page:9    

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     C-0-0/w PTR         r     1 @DRIVE                     8-0-0/w PTR         r     1 @SECTOR
     4-0-0/w PTR         r     1 @SIDE                      6-0-0/w PTR         r     1 @TRACK
     A-0-0/w PTR         r     1 @VSECTOR                  *0-0-0/w SBIN(16)    r     1 DRIVE
     E-0-0/w SBIN(16)    r     1 LEFT                      *0-0-0/w SBIN(16)    r     1 SECTOR
    *0-0-0/w SBIN(16)    r     1 SIDE                      *0-0-0/w SBIN(16)    r     1 TRACK
    *0-0-0/w SBIN(16)    r     1 VSECTOR


   Procedure GID$DISK2VSEC requires 75 words for executable code.
   Procedure GID$DISK2VSEC requires 16 words of local(AUTO) storage.
PL6.E3A0      #001=GID$DISK2VSEC File=GID$DISK.:E05TSI                           TUE 07/29/97 21:44 Page:10   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=GID$DISK2VSEC File=GID$DISK.:E05TSI                           TUE 07/29/97 21:44 Page:11   
          MINI XREF LISTING

DRIVE
        18**DCL        10--PROC       24>>ASSIGN     27--ENTRY      28<<ASSIGN
LEFT
        22**DCL        29<<ASSIGN     30>>ASSIGN     31<<ASSIGN     31>>ASSIGN     32>>ASSIGN     33<<ASSIGN
        33>>ASSIGN     34>>ASSIGN
SECTOR
        16**DCL        10--PROC       24>>ASSIGN     27--ENTRY      34<<ASSIGN
SIDE
        14**DCL        10--PROC       24>>ASSIGN     27--ENTRY      32<<ASSIGN
TRACK
        15**DCL        10--PROC       24>>ASSIGN     27--ENTRY      30<<ASSIGN
VSECTOR
        17**DCL        10--PROC       24<<ASSIGN     27--ENTRY      28>>ASSIGN     29>>ASSIGN

PL6.E3A0      #002=GID$DISKIO File=GID$DISK.:E05TSI                              TUE 07/29/97 21:44 Page:12   
       39        1        /*M* GID$DISKIO Perform actual diskette I/O.  */
       40        2        /*T***********************************************************/
       41        3        /*T*                                                         */
       42        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
       43        5        /*T*                                                         */
       44        6        /*T***********************************************************/
       45        7        /*F*     NAME:          GID$DISKIO
       46        8                 PURPOSE:       Perform actual diskette I/O.
       47        9                 DESCRIPTION:
       48       10          GID$DISKIO performs all the actual diskette I/O for the GID
       49       11          routines.
       50       12
       51       13          The parameters are:
       52       14            VSECTOR = the virtual sector number of the first sector to
       53       15                      be accessed.
       54       16            NBYTES = the number of sequential bytes to be accessed.
       55       17            BUF$ = pointer to the data buffer.
       56       18            FUNK = a parameter that dictates the function to be performed,
       57       19                   as follows:
       58       20                      0 = READ from diskette
       59       21                      1 = WRITE to diskette
       60       22                      2 = initialize & setup diskettes
       61       23
       62       24            NOTE:  If this routine is called to perform diskette I/O WITHOUT
       63       25            previously requesting an initialize, the initialize is performed
       64       26            automatically.
       65       27        */
       66       28        GID$DISKIO: PROC(VSECTOR,NBYTES,BUF$,FUNK);
       67       29        /**/
       68       30        /*  INCLUDE FILES  */
       69       31        /**/
       70       32        %INCLUDE KO_SUBS;
       71      126        %INCLUDE GH_HARDWARE_M;
       72      224        %INCLUDE KO_MACRO_C;
       73      421        %EJECT;
PL6.E3A0      #002=GID$DISKIO File=GID$DISK.:E05TSI                              TUE 07/29/97 21:44 Page:13   
       74      422        /**/
       75      423        /*  Parameters  */
       76      424        /**/
       77      425    1   DCL VSECTOR SBIN;
       78      426    1   DCL NBYTES UBIN(32);
       79      427    1   DCL BUF$ PTR;
       80      428    1   DCL FUNK SBIN;
       81      429        /**/
       82      430        /*  SYMDEFS  */
       83      431        /**/
       84      432    1   DCL GID_BOOTCHAN UBIN STATIC SYMDEF INIT(%BITBIN('10'X));
       85      433        /**/
       86      434        /*  AUTO DATA  */
       87      435        /**/
       88      436        %GH_IO (FPTN = FPT_IO,STCLASS = AUTO);
       89      452        %GH_IOLD (FPTN = FPT_IOLD,STCLASS = AUTO);
       90      467        %KO_DEVICE_STATUS (NAME = DEV_STATUS, STCLASS = AUTO);
       91      517    1   DCL CUR_SECTOR SBIN;
       92      518    1   DCL CUR_TRACK SBIN;
       93      519    1   DCL CUR_SIDE SBIN;
       94      520    1   DCL BYTES_LEFT SBIN(32);
       95      521    1   DCL CUR_BYTES SBIN;
       96      522    1   DCL CUR_BUF$ PTR;
       97      523    1   DCL CUR_VSECTOR SBIN;
       98      524    1   DCL CUR_DRIVE SBIN;
       99      525    1   DCL CHANNEL SBIN;
      100      526    1   DCL TRIES SBIN;
      101      527    1   DCL RETRY REMEMBER;
      102      528    1   DCL IGNORE REMEMBER;
      103      529        %EJECT;
PL6.E3A0      #002=GID$DISKIO File=GID$DISK.:E05TSI                              TUE 07/29/97 21:44 Page:14   
      104      530        /**/
      105      531        /*  ENTRY DCLS  */
      106      532        /**/
      107      533    1   DCL GID$VSEC2DISK ENTRY(5);
      108      534    1   DCL GHH$IO ENTRY(1) ALTRET;
      109      535    1   DCL GHH$IOLD ENTRY(1) ALTRET;
      110      536    1   DCL GHH$IO_IN ENTRY(1) ALTRET;
      111      537        /**/
      112      538        /*  STATIC  */
      113      539        /**/
      114      540    1   DCL ALREADY_INITIALIZED CHAR(2) STATIC INIT('XX');
      115      541        %EJECT;
PL6.E3A0      #002=GID$DISKIO File=GID$DISK.:E05TSI                              TUE 07/29/97 21:44 Page:15   
      116      542        /**/
      117      543        /*  If caller only wants diskettes initialized, oblige him!                   */
      118      544        /**/
      119      545    1           IF FUNK = 2 THEN                /* HE JUST WANT TO CALIBRATE DRIVES   */
      120      546    2              DO;
      121      547    2                TRIES = 0;
      122      548    2                REMEMBER EXPLICIT_INIT IN RETRY;
      123      549    2                REMEMBER ALL_OK IN IGNORE;
      124      550    2   EXPLICIT_INIT: ;
      125      551    2                CALL INITIALIZE ALTRET(FAILED_IO);
      126      552    2                RETURN;
      127      553    2                END;
      128      554        %EJECT;
PL6.E3A0      #002=GID$DISKIO File=GID$DISK.:E05TSI                              TUE 07/29/97 21:44 Page:16   
      129      555        /**/
      130      556        /*  Caller wants to read or write the diskette.  */
      131      557        /**/
      132      558    1           IF ALREADY_INITIALIZED ~= 'FB' THEN
      133      559    2              DO;
      134      560    2                TRIES = 0;
      135      561    2                REMEMBER IMPLICIT_INIT IN RETRY;
      136      562    2                REMEMBER SKIP_INIT IN IGNORE;
      137      563    2   IMPLICIT_INIT: ;
      138      564    2                CALL INITIALIZE ALTRET(FAILED_IO);
      139      565    2   SKIP_INIT:   ;
      140      566    2                END;
      141      567    1           CUR_VSECTOR = VSECTOR;
      142      568    1           BYTES_LEFT = NBYTES;
      143      569    1           CUR_BUF$ = BUF$;
      144      570    2           DO WHILE (BYTES_LEFT > 0);
      145      571    2              CALL GID$VSEC2DISK(CUR_SIDE,CUR_TRACK,CUR_SECTOR,CUR_VSECTOR,CUR_DRIVE);
      146      572    2              CUR_BYTES = MINIMUM(BYTES_LEFT,
      147      573    2                                  (15-CUR_SECTOR+1)*256);
      148      574    2              TRIES = 0;
      149      575    2              REMEMBER PERFORM_IO IN RETRY;
      150      576    2              REMEMBER ALL_OK IN IGNORE;
      151      577    2   PERFORM_IO: ;
      152      578    2              CALL DOIT ALTRET(FAILED_IO);
      153      579    2              BYTES_LEFT = BYTES_LEFT - CUR_BYTES;
      154      580    2              CUR_VSECTOR = CUR_VSECTOR + (CUR_BYTES/256);
      155      581    2              CUR_BUF$ = PINCRW(CUR_BUF$,CUR_BYTES/2);
      156      582    2              END;
      157      583        /**/
      158      584    1   ALL_OK: ;
      159      585    1           RETURN;
      160      586        %EJECT;
PL6.E3A0      #002=GID$DISKIO File=GID$DISK.:E05TSI                              TUE 07/29/97 21:44 Page:17   
      161      587        /**/
      162      588        /*  An IO instruction has failed.                                             */
      163      589        /**/
      164      590    1   FAILED_IO: ;
      165      591    1           TRIES = TRIES +1;
      166      592        /*  If excessive errors, pretend it all worked right!                         */
      167      593    1           IF TRIES > 16 THEN
      168      594    1              UNWIND TO IGNORE;
      169      595        /*  Some errors require a CALIBRATE command to clear the error status.        */
      170      596    1           IF DEV_STATUS.DEV_FAULT
      171      597    1              OR DEV_STATUS.SEEK_ERROR THEN
      172      598    2              DO;
      173      599    2                FPT_IO.CAS.FNC = %CO_TASK_WORD#;
      174      600    2                FPT_IO.DAS = %CT_RECALIBRATE#;
      175      601    2                CALL DO_IO_OUT ALTRET(IGNORE_ALT1);
      176      602    2   IGNORE_ALT1: ;
      177      603    2                END;
      178      604        /*  If there is still some error status, try a thereputic SEEK command.       */
      179      605    1           IF DEV_STATUS & %DS_ERR_FLAGS# THEN
      180      606    2              DO;
      181      607    2                FPT_IO.CAS.FNC = %CO_TASK_WORD#;
      182      608    2                FPT_IO.DAS = %CT_SEEK#;
      183      609    2                CALL DO_IO_OUT ALTRET(IGNORE_ALT2);
      184      610    2   IGNORE_ALT2: ;
      185      611    2                END;
      186      612        /* Do a stop io to the drive then call initialize */
      187      613    1           IF MOD(TRIES,4) = 0 THEN
      188      614    2              DO;
      189      615    2                FPT_IO.CAS.FNC = %CO_CTRL_WORD#;
      190      616    2                FPT_IO.DAS = %CW_STOPIO#;
      191      617    2                CALL DO_IO_OUT ALTRET(IGNORE_ALT3);
      192      618    2   IGNORE_ALT3: ;
      193      619    2                 CALL INITIALIZE;
      194      620    2                END;
      195      621    1           UNWIND TO RETRY;
      196      622        %EJECT;
PL6.E3A0      #002=GID$DISKIO File=GID$DISK.:E05TSI                              TUE 07/29/97 21:44 Page:18   
      197      623    1   INITIALIZE: PROC ALTRET;
      198      624        /**/
      199      625        /*  Internal PROC  to initialize diskette hardware and software.              */
      200      626        /**/
      201      627        /*  First diskette                                                            */
      202      628    2           CHANNEL = GID_BOOTCHAN;
      203      629    2           FPT_IO.CAS.FNC = %CO_INTRP_CTRL#;
      204      630    2           FPT_IO.DAS = BINBIT(0*64 + 0,16);
      205      631    2           CALL DO_IO_OUT ALTRET(FAILED_IO);
      206      632    2           FPT_IO.CAS.FNC = %CO_TASK_WORD#;
      207      633    2           FPT_IO.DAS = %CT_RECALIBRATE#;
      208      634    2           CALL DO_IO_OUT ALTRET(FAILED_IO);
      209      635        /*  Second diskette                                                           */
      210      636    2           CHANNEL = GID_BOOTCHAN + BITBIN('0080'X)/64;
      211      637    2           FPT_IO.CAS.FNC = %CO_INTRP_CTRL#;
      212      638    2           FPT_IO.DAS = BINBIT(0*64 + 0,16);
      213      639    2           CALL DO_IO_OUT ALTRET(FAILED_IO);
      214      640    2           FPT_IO.CAS.FNC = %CO_TASK_WORD#;
      215      641    2           FPT_IO.DAS = %CT_RECALIBRATE#;
      216      642    2           CALL DO_IO_OUT ALTRET(FAILED_IO);
      217      643        /*  Remember we did it!                                                       */
      218      644    2           ALREADY_INITIALIZED = 'FB';
      219      645        /**/
      220      646    2           RETURN;
      221      647        /**/
      222      648    2   FAILED_IO: ;
      223      649    2           ALTRETURN;
      224      650        /**/
      225      651    2           END INITIALIZE;
      226      652        %EJECT;
PL6.E3A0      #002=GID$DISKIO File=GID$DISK.:E05TSI                              TUE 07/29/97 21:44 Page:19   
      227      653    1   DOIT: PROC ALTRET;
      228      654        /**/
      229      655        /*  Internal PROC to perform a portion of an I/O request.                     */
      230      656        /**/
      231      657        /* Pick drive to use                  */
      232      658    2           IF CUR_DRIVE = 0 THEN
      233      659    2              CHANNEL = GID_BOOTCHAN;
      234      660    2           ELSE
      235      661    2              CHANNEL = GID_BOOTCHAN + BITBIN('0080'X)/64;
      236      662        /* Set up sector and sector size=256  */
      237      663    2      FPT_IO.CAS.FNC = %CO_CONFIG_B#;
      238      664    2           FPT_IO.DAS = BINBIT(CUR_SECTOR *256 + 01,16);
      239      665    2      CALL DO_IO_OUT ALTRET(FAILED_IO);
      240      666        /* Set up track & side                */
      241      667    2      FPT_IO.CAS.FNC = %CO_CONFIG_A#;
      242      668    2      FPT_IO.DAS = BINBIT(CUR_TRACK *256 + CUR_SIDE,16);
      243      669    2      CALL DO_IO_OUT ALTRET(FAILED_IO);
      244      670        /* Seek for track & sector            */
      245      671    2      FPT_IO.CAS.FNC = %CO_TASK_WORD#;
      246      672    2      FPT_IO.DAS = %CT_SEEK#;
      247      673    2      CALL DO_IO_OUT ALTRET(FAILED_IO);
      248      674        /* Set range and address              */
      249      675    2      FPT_IOLD.BUF$ = CUR_BUF$;
      250      676    2      FPT_IOLD.BUFSIZE = CUR_BYTES;
      251      677    2      IF FUNK = 1 THEN                     /* WRITE                              */
      252      678    2         CALL DO_IOLD_OUT ALTRET(FAILED_IO);
      253      679    2      ELSE                                 /* READ                               */
      254      680    2         CALL DO_IOLD_IN ALTRET(FAILED_IO);
      255      681        /* Set task word & perform actual function.   */
      256      682    2      FPT_IO.CAS.FNC = %CO_TASK_WORD#;
      257      683    2      FPT_IO.DAS = %CT_DATA#;
      258      684    2      CALL DO_IO_OUT ALTRET(FAILED_IO);
      259      685        /* Finished! */
      260      686    2      RETURN;
      261      687        /**/
      262      688    2   FAILED_IO: ;
      263      689    2      ALTRETURN;
PL6.E3A0      #002=GID$DISKIO File=GID$DISK.:E05TSI                              TUE 07/29/97 21:44 Page:20   
      264      690        /**/
      265      691    2      END DOIT;
      266      692        %EJECT;
PL6.E3A0      #002=GID$DISKIO File=GID$DISK.:E05TSI                              TUE 07/29/97 21:44 Page:21   
      267      693        /**/
      268      694        /*  Common setup for OUTPUT IO instruction.  Also, do it.  */
      269      695        /**/
      270      696    1   DO_IO_OUT: PROC ALTRET;
      271      697    2           FPT_IO.CAS.CHN = CHANNEL;
      272      698    2           FPT_IO.CAS.XCHN.OUTPUT = '1'B;
      273      699    2   RETRY:  CALL GHH$IO (FPT_IO) ALTRET(RETRY);
      274      700    2           CALL AWAIT_COMPLETION ALTRET(IO_ERR);
      275      701    2           RETURN;
      276      702        /**/
      277      703    2   IO_ERR: ;
      278      704    2           ALTRETURN;
      279      705        /**/
      280      706    2   END DO_IO_OUT;
      281      707        %EJECT;
PL6.E3A0      #002=GID$DISKIO File=GID$DISK.:E05TSI                              TUE 07/29/97 21:44 Page:22   
      282      708        /**/
      283      709        /*  Common setup for INPUT IO instruction.  Also, do it.  */
      284      710        /**/
      285      711    1   DO_IO_IN: PROC ALTRET;
      286      712    2           FPT_IO.CAS.CHN = CHANNEL;
      287      713    2           FPT_IO.CAS.XCHN.OUTPUT = '0'B;
      288      714    2   RETRY:  CALL GHH$IO (FPT_IO) ALTRET(RETRY);
      289      715    2           CALL AWAIT_COMPLETION ALTRET(IO_ERR);
      290      716    2           RETURN;
      291      717        /**/
      292      718    2   IO_ERR: ;
      293      719    2           ALTRETURN;
      294      720        /**/
      295      721    2   END DO_IO_IN;
      296      722        %EJECT;
PL6.E3A0      #002=GID$DISKIO File=GID$DISK.:E05TSI                              TUE 07/29/97 21:44 Page:23   
      297      723        /**/
      298      724        /*  Common setup for OUTPUT IOLD instruction.  Also, do it.  */
      299      725        /**/
      300      726    1   DO_IOLD_OUT: PROC ALTRET;
      301      727    2           FPT_IOLD.CHN = CHANNEL;
      302      728    2           FPT_IOLD.XCHN.OUTPUT = '1'B;
      303      729    2           FPT_IOLD.FNC = 9;
      304      730    2           FPT_IOLD.BYTX = 0;
      305      731    2   RETRY:  CALL GHH$IOLD (FPT_IOLD) ALTRET(RETRY);
      306      732    2           CALL AWAIT_COMPLETION ALTRET(IO_ERR);
      307      733    2           RETURN;
      308      734        /**/
      309      735    2   IO_ERR: ;
      310      736    2           ALTRETURN;
      311      737        /**/
      312      738    2   END DO_IOLD_OUT;
      313      739        %EJECT;
PL6.E3A0      #002=GID$DISKIO File=GID$DISK.:E05TSI                              TUE 07/29/97 21:44 Page:24   
      314      740        /**/
      315      741        /*  Common setup for INPUT IOLD instruction.  Also, do it.  */
      316      742        /**/
      317      743    1   DO_IOLD_IN: PROC ALTRET;
      318      744    2           FPT_IOLD.CHN = CHANNEL;
      319      745    2           FPT_IOLD.XCHN.OUTPUT = '0'B;
      320      746    2           FPT_IOLD.FNC = 9;
      321      747    2           FPT_IOLD.BYTX = 0;
      322      748    2   RETRY:  CALL GHH$IOLD (FPT_IOLD) ALTRET(RETRY);
      323      749    2           CALL AWAIT_COMPLETION ALTRET(IO_ERR);
      324      750    2           RETURN;
      325      751        /**/
      326      752    2   IO_ERR: ;
      327      753    2           ALTRETURN;
      328      754        /**/
      329      755    2   END DO_IOLD_IN;
      330      756        %EJECT;
PL6.E3A0      #002=GID$DISKIO File=GID$DISK.:E05TSI                              TUE 07/29/97 21:44 Page:25   
      331      757        /**/
      332      758        /*  Routine to await completion signal from diskette controller.  The final   */
      333      759        /*  device status is also tested for an error flag.  If any such flag         */
      334      760        /*  is set, this routine ALTRETURNs.                                          */
      335      761        /**/
      336      762    1   AWAIT_COMPLETION: PROC ALTRET;
      337      763    2           DEV_STATUS = %DS_DEVICE_BUSY#;
      338      764    3           DO WHILE (DEV_STATUS = %DS_DEVICE_BUSY#);
      339      765    3              FPT_IO.CAS.CHN = CHANNEL;
      340      766    3              FPT_IO.CAS.XCHN.OUTPUT = '0'B;
      341      767    3              FPT_IO.CAS.FNC = %CI_STATUS_WORD#;
      342      768    3   RETRY:     CALL GHH$IO_IN (FPT_IO) ALTRET (RETRY);
      343      769    3           DEV_STATUS = FPT_IO.DAS;
      344      770    3              END;
      345      771    2           IF (FPT_IO.DAS & %DS_ERR_FLAGS#) = '0000'X THEN
      346      772    2              RETURN;
      347      773    2           ELSE
      348      774    2              ALTRETURN;
      349      775    2           END AWAIT_COMPLETION;
      350      776        /**/
      351      777    1      END GID$DISKIO;

PL6.E3A0      #002=GID$DISKIO File=GID$DISK.:E05TSI                              TUE 07/29/97 21:44 Page:26   
--  Include file information  --

   KO_MACRO_C.:E05TOU  is referenced.
   GH_HARDWARE_M.:E05TOU  is referenced.
   KO_SUBS.:E05TOU  is referenced.
      No diagnostics issued in procedure GID$DISKIO.

   Procedure GID$DISKIO requires 641 words for executable code.
   Procedure GID$DISKIO requires 56 words of local(AUTO) storage.

    No errors detected in file GID$DISK.:E05TSI    .

PL6.E3A0      #002=GID$DISKIO File=GID$DISK.:E05TSI                              TUE 07/29/97 21:44 Page:27   

 Object Unit name= GID$DISKIO                                 File name= GID$DISK.:E05TOU
 UTS= JUL 29 '97 21:44:11.40 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_LCP6_SYSTEM                               Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size HexSiz  Section name
    0   Data  even  none     2      2  GID$DISKIO
    1  RoData even  UTS      1      1  GID$DISKIO
    2   Proc  even  none   641    281  GID$DISKIO

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect HexLoc Primary Altret sequence   type   Parms  Name
     2      0   yes            yes      Std        4  GID$DISKIO

  ****  Data defs  ****

 Sect HexLoc  Name                           Sect HexLoc  Name
    0      0  GID_BOOTCHAN

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       5 GID$VSEC2DISK
 yes     yes           Std       1 GHH$IO
 yes     yes           Std       1 GHH$IOLD
 yes     yes           Std       1 GHH$IO_IN
                       nStd      0 X6A_AUTO_N
                       nStd      0 X6A_ARET
                       nStd      0 X6A_AUNWIND
PL6.E3A0      #002=GID$DISKIO File=GID$DISK.:E05TSI                              TUE 07/29/97 21:44 Page:28   

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
r    G$ROS$
PL6.E3A0      #002=GID$DISKIO File=GID$DISK.:E05TSI                              TUE 07/29/97 21:44 Page:29   


       39        1        /*M* GID$DISKIO Perform actual diskette I/O.  */
       40        2        /*T***********************************************************/
       41        3        /*T*                                                         */
       42        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
       43        5        /*T*                                                         */
       44        6        /*T***********************************************************/
       45        7        /*F*     NAME:          GID$DISKIO
       46        8                 PURPOSE:       Perform actual diskette I/O.
       47        9                 DESCRIPTION:
       48       10          GID$DISKIO performs all the actual diskette I/O for the GID
       49       11          routines.
       50       12
       51       13          The parameters are:
       52       14            VSECTOR = the virtual sector number of the first sector to
       53       15                      be accessed.
       54       16            NBYTES = the number of sequential bytes to be accessed.
       55       17            BUF$ = pointer to the data buffer.
       56       18            FUNK = a parameter that dictates the function to be performed,
       57       19                   as follows:
       58       20                      0 = READ from diskette
       59       21                      1 = WRITE to diskette
       60       22                      2 = initialize & setup diskettes
       61       23
       62       24            NOTE:  If this routine is called to perform diskette I/O WITHOUT
       63       25            previously requesting an initialize, the initialize is performed
       64       26            automatically.
       65       27        */
       66       28        GID$DISKIO: PROC(VSECTOR,NBYTES,BUF$,FUNK);

     28   2 000000  D380 0000 0000  xent GID$DISKIO      LNJ,B5   X6A_AUTO_N
          2 000003       0038 0004                       DC       56,4

       67       29        /**/
       68       30        /*  INCLUDE FILES  */
       69       31        /**/
       70       32        %INCLUDE KO_SUBS;
PL6.E3A0      #002=GID$DISKIO File=GID$DISK.:E05TSI                              TUE 07/29/97 21:44 Page:30   
       71      126        %INCLUDE GH_HARDWARE_M;
       72      224        %INCLUDE KO_MACRO_C;
       73      421        %EJECT;
PL6.E3A0      #002=GID$DISKIO File=GID$DISK.:E05TSI                              TUE 07/29/97 21:44 Page:31   
       74      422        /**/
       75      423        /*  Parameters  */
       76      424        /**/
       77      425    1   DCL VSECTOR SBIN;
       78      426    1   DCL NBYTES UBIN(32);
       79      427    1   DCL BUF$ PTR;
       80      428    1   DCL FUNK SBIN;
       81      429        /**/
       82      430        /*  SYMDEFS  */
       83      431        /**/
       84      432    1   DCL GID_BOOTCHAN UBIN STATIC SYMDEF INIT(%BITBIN('10'X));
       85      433        /**/
       86      434        /*  AUTO DATA  */
       87      435        /**/
       88      436        %GH_IO (FPTN = FPT_IO,STCLASS = AUTO);
       89      452        %GH_IOLD (FPTN = FPT_IOLD,STCLASS = AUTO);
       90      467        %KO_DEVICE_STATUS (NAME = DEV_STATUS, STCLASS = AUTO);
       91      517    1   DCL CUR_SECTOR SBIN;
       92      518    1   DCL CUR_TRACK SBIN;
       93      519    1   DCL CUR_SIDE SBIN;
       94      520    1   DCL BYTES_LEFT SBIN(32);
       95      521    1   DCL CUR_BYTES SBIN;
       96      522    1   DCL CUR_BUF$ PTR;
       97      523    1   DCL CUR_VSECTOR SBIN;
       98      524    1   DCL CUR_DRIVE SBIN;
       99      525    1   DCL CHANNEL SBIN;
      100      526    1   DCL TRIES SBIN;
      101      527    1   DCL RETRY REMEMBER;
      102      528    1   DCL IGNORE REMEMBER;
      103      529        %EJECT;
PL6.E3A0      #002=GID$DISKIO File=GID$DISK.:E05TSI                              TUE 07/29/97 21:44 Page:32   
      104      530        /**/
      105      531        /*  ENTRY DCLS  */
      106      532        /**/
      107      533    1   DCL GID$VSEC2DISK ENTRY(5);
      108      534    1   DCL GHH$IO ENTRY(1) ALTRET;
      109      535    1   DCL GHH$IOLD ENTRY(1) ALTRET;
      110      536    1   DCL GHH$IO_IN ENTRY(1) ALTRET;
      111      537        /**/
      112      538        /*  STATIC  */
      113      539        /**/
      114      540    1   DCL ALREADY_INITIALIZED CHAR(2) STATIC INIT('XX');
      115      541        %EJECT;
PL6.E3A0      #002=GID$DISKIO File=GID$DISK.:E05TSI                              TUE 07/29/97 21:44 Page:33   
      116      542        /**/
      117      543        /*  If caller only wants diskettes initialized, oblige him!                   */
      118      544        /**/
      119      545    1           IF FUNK = 2 THEN                /* HE JUST WANT TO CALIBRATE DRIVES   */

    545   2 000005  ECC7 000A                            LDB,B6   @FUNK,AUTO
          2 000007  E806                                 LDR,R6   ,B6
          2 000008  6D02                                 CMV,R6   2
          2 000009  0981 0015                            BNE      s:558,PREL

      120      546    2              DO;

      121      547    2                TRIES = 0;

    547   2 00000B  8747 001F                            CL       TRIES,AUTO

      122      548    2                REMEMBER EXPLICIT_INIT IN RETRY;

    548   2 00000D  DBC0 000B                            LAB,B5   s:547,PREL
          2 00000F  FFC7 0020                            STB,B7   RETRY,AUTO
          2 000011  DFC7 0022                            STB,B5   RETRY+2,AUTO

      123      549    2                REMEMBER ALL_OK IN IGNORE;

    549   2 000013  CBC0 00B0                            LAB,B4   s:578,PREL
          2 000015  FFC7 0024                            STB,B7   IGNORE,AUTO
          2 000017  CFC7 0026                            STB,B4   IGNORE+2,AUTO

    547   2                              EXPLICIT_INIT   null
      124      550    2   EXPLICIT_INIT: ;
      125      551    2                CALL INITIALIZE ALTRET(FAILED_IO);

    551   2 000019  E3C0 00F7            EXPLICIT_INIT   LNJ,B6   s:0,PREL
          2 00001B       00AC                            DC       s:578,PREL

      126      552    2                RETURN;

PL6.E3A0      #002=GID$DISKIO File=GID$DISK.:E05TSI                              TUE 07/29/97 21:44 Page:34   
    552   2 00001C  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

      127      553    2                END;
      128      554        %EJECT;
PL6.E3A0      #002=GID$DISKIO File=GID$DISK.:E05TSI                              TUE 07/29/97 21:44 Page:35   
      129      555        /**/
      130      556        /*  Caller wants to read or write the diskette.  */
      131      557        /**/
      132      558    1           IF ALREADY_INITIALIZED ~= 'FB' THEN

    558   2 00001F  DB80 0000 0000  00                   LAB,B5   GID_BOOTCHAN
          2 000022  CB80 0000 0000  01                   LAB,B4   0
          2 000025  0022                                 ACM      ;
          2 000026       4205 0001                                ALPHANUM(1,B5,,2,FILL),;
          2 000028       4204 0000                                ALPHANUM(0,B4,,2,FILL)
          2 00002A  5381 0012                            CBE      s:560,PREL

      133      559    2              DO;

      134      560    2                TRIES = 0;

    560   2 00002C  8747 001F                            CL       TRIES,AUTO

      135      561    2                REMEMBER IMPLICIT_INIT IN RETRY;

    561   2 00002E  DBC0 000B                            LAB,B5   s:560,PREL
          2 000030  FFC7 0020                            STB,B7   RETRY,AUTO
          2 000032  DFC7 0022                            STB,B5   RETRY+2,AUTO

      136      562    2                REMEMBER SKIP_INIT IN IGNORE;

    562   2 000034  CBC0 0008                            LAB,B4   s:560,PREL
          2 000036  FFC7 0024                            STB,B7   IGNORE,AUTO
          2 000038  CFC7 0026                            STB,B4   IGNORE+2,AUTO

    560   2                              IMPLICIT_INIT   null
      137      563    2   IMPLICIT_INIT: ;
      138      564    2                CALL INITIALIZE ALTRET(FAILED_IO);

    564   2 00003A  E3C0 00D6            IMPLICIT_INIT   LNJ,B6   s:0,PREL
          2 00003C       008B                            DC       s:578,PREL

PL6.E3A0      #002=GID$DISKIO File=GID$DISK.:E05TSI                              TUE 07/29/97 21:44 Page:36   
    560   2                              SKIP_INIT       null
      139      565    2   SKIP_INIT:   ;
      140      566    2                END;

      141      567    1           CUR_VSECTOR = VSECTOR;

    567   2 00003D  ECC7 0004            SKIP_INIT       LDB,B6   @VSECTOR,AUTO
          2 00003F  E806                                 LDR,R6   ,B6
          2 000040  EF47 001C                            STR,R6   CUR_VSECTOR,AUTO

      142      568    1           BYTES_LEFT = NBYTES;

    568   2 000042  DCC7 0006                            LDB,B5   @NBYTES,AUTO
          2 000044  8C85                                 LDI      ,B5
          2 000045  8D47 0017                            SDI      BYTES_LEFT,AUTO

      143      569    1           CUR_BUF$ = BUF$;

    569   2 000047  CCC7 0008                            LDB,B4   @BUF$,AUTO
          2 000049  BC84                                 LDB,B3   ,B4
          2 00004A  BFC7 001A                            STB,B3   CUR_BUF$,AUTO

      144      570    2           DO WHILE (BYTES_LEFT > 0);

    570   2 00004C  84F0 0000 0000                       SID      0,IMO
          2 00004F  6801 0074                            BLZ,R6   s:578,PREL
          2 000051  6A01 0003                            BGZ,R6   s:571,PREL
          2 000053  7901 0070                            BEZ,R7   s:578,PREL

      145      571    2              CALL GID$VSEC2DISK(CUR_SIDE,CUR_TRACK,CUR_SECTOR,CUR_VSECTOR,CUR_DRIVE);

    571   2 000055  EBC7 001D                            LAB,B6   CUR_DRIVE,AUTO
          2 000057  EFC7 0036                            STB,B6   IGNORE+18,AUTO
          2 000059  DBC7 001C                            LAB,B5   CUR_VSECTOR,AUTO
          2 00005B  DFC7 0034                            STB,B5   IGNORE+16,AUTO
          2 00005D  CBC7 0014                            LAB,B4   CUR_SECTOR,AUTO
          2 00005F  CFC7 0032                            STB,B4   IGNORE+14,AUTO
PL6.E3A0      #002=GID$DISKIO File=GID$DISK.:E05TSI                              TUE 07/29/97 21:44 Page:37   
          2 000061  BBC7 0015                            LAB,B3   CUR_TRACK,AUTO
          2 000063  BFC7 0030                            STB,B3   IGNORE+12,AUTO
          2 000065  ABC7 0016                            LAB,B2   CUR_SIDE,AUTO
          2 000067  AFC7 002E                            STB,B2   IGNORE+10,AUTO
          2 000069  BBC7 002E                            LAB,B3   IGNORE+10,AUTO
          2 00006B  CBF0 0500                            LAB,B4   1280,IMO
          2 00006D  E380 0000 0000  xent                 LNJ,B6   GID$VSEC2DISK
          2 000070       0001                            DC       s:572,PREL

      146      572    2              CUR_BYTES = MINIMUM(BYTES_LEFT,

    572   2 000071  E847 0014                            LDR,R6   CUR_SECTOR,AUTO
          2 000073  70F0                                 DAR,R7   16
          2 000074  7088                                 DOL,R7   8
          2 000075  8656                                 CPL      R6
          2 000076  8657                                 CPL      R7
          2 000077  8470 0000 1001                       AID      4097,IMO
          2 00007A  8D47 002E                            SDI      IGNORE+10,AUTO
          2 00007C  84C7 0017                            SID      BYTES_LEFT,AUTO
          2 00007E  6801 0009                            BLZ,R6   s:572+23,PREL
          2 000080  6A01 0003                            BGZ,R6   s:572+19,PREL
          2 000082  7901 0005                            BEZ,R7   s:572+23,PREL
          2 000084  8CC7 0017                            LDI      BYTES_LEFT,AUTO
          2 000086  8D47 002E                            SDI      IGNORE+10,AUTO
          2 000088  E847 002F                            LDR,R6   IGNORE+11,AUTO
          2 00008A  EF47 0019                            STR,R6   CUR_BYTES,AUTO

      147      573    2                                  (15-CUR_SECTOR+1)*256);
      148      574    2              TRIES = 0;

    574   2 00008C  8747 001F                            CL       TRIES,AUTO

      149      575    2              REMEMBER PERFORM_IO IN RETRY;

    575   2 00008E  EBC0 000B                            LAB,B6   s:574,PREL
          2 000090  FFC7 0020                            STB,B7   RETRY,AUTO
          2 000092  EFC7 0022                            STB,B6   RETRY+2,AUTO
PL6.E3A0      #002=GID$DISKIO File=GID$DISK.:E05TSI                              TUE 07/29/97 21:44 Page:38   

      150      576    2              REMEMBER ALL_OK IN IGNORE;

    576   2 000094  DBC0 002F                            LAB,B5   s:578,PREL
          2 000096  FFC7 0024                            STB,B7   IGNORE,AUTO
          2 000098  DFC7 0026                            STB,B5   IGNORE+2,AUTO

    574   2                              PERFORM_IO      null
      151      577    2   PERFORM_IO: ;
      152      578    2              CALL DOIT ALTRET(FAILED_IO);

    578   2 00009A  E3C0 00B9            PERFORM_IO      LNJ,B6   s:0,PREL
          2 00009C       002B                            DC       s:578,PREL

      153      579    2              BYTES_LEFT = BYTES_LEFT - CUR_BYTES;

    579   2 00009D  E847 0019                            LDR,R6   CUR_BYTES,AUTO
          2 00009F  70F0                                 DAR,R7   16
          2 0000A0  84C7 0017                            SID      BYTES_LEFT,AUTO
          2 0000A2  8656                                 CPL      R6
          2 0000A3  8657                                 CPL      R7
          2 0000A4  8470 0000 0001                       AID      1,IMO
          2 0000A7  8D47 0017                            SDI      BYTES_LEFT,AUTO

      154      580    2              CUR_VSECTOR = CUR_VSECTOR + (CUR_BYTES/256);

    580   2 0000A9  D847 0019                            LDR,R5   CUR_BYTES,AUTO
          2 0000AB  D370 0100                            DIV,R5   256,IMO
          2 0000AD  DA47 001C                            ADD,R5   CUR_VSECTOR,AUTO
          2 0000AF  DF47 001C                            STR,R5   CUR_VSECTOR,AUTO

      155      581    2              CUR_BUF$ = PINCRW(CUR_BUF$,CUR_BYTES/2);

    581   2 0000B1  C847 0019                            LDR,R4   CUR_BYTES,AUTO
          2 0000B3  C370 0002                            DIV,R4   2,IMO
          2 0000B5  ECC7 001A                            LDB,B6   CUR_BUF$,AUTO
          2 0000B7  B854                                 LDR,R3   R4
PL6.E3A0      #002=GID$DISKIO File=GID$DISK.:E05TSI                              TUE 07/29/97 21:44 Page:39   
          2 0000B8  DBB6                                 LAB,B5   ,B6,R3
          2 0000B9  DFC7 001A                            STB,B5   CUR_BUF$,AUTO

      156      582    2              END;

    582   2 0000BB  84F0 0000 0000                       SID      0,IMO
          2 0000BE  6A01 FF96                            BGZ,R6   s:571,PREL
          2 0000C0  6801 0003                            BLZ,R6   s:578,PREL
          2 0000C2  7981 FF92                            BNEZ,R7  s:571,PREL

    578   2                              ALL_OK          null
      157      583        /**/
      158      584    1   ALL_OK: ;
      159      585    1           RETURN;

    585   2 0000C4  C380 0000 0000  xent ALL_OK          LNJ,B4   X6A_ARET

    578   2                              FAILED_IO       null
      160      586        %EJECT;
PL6.E3A0      #002=GID$DISKIO File=GID$DISK.:E05TSI                              TUE 07/29/97 21:44 Page:40   
      161      587        /**/
      162      588        /*  An IO instruction has failed.                                             */
      163      589        /**/
      164      590    1   FAILED_IO: ;
      165      591    1           TRIES = TRIES +1;

    591   2 0000C7  8AC7 001F            FAILED_IO       INC      TRIES,AUTO

      166      592        /*  If excessive errors, pretend it all worked right!                         */
      167      593    1           IF TRIES > 16 THEN

    593   2 0000C9  E847 001F                            LDR,R6   TRIES,AUTO
          2 0000CB  6D10                                 CMV,R6   16
          2 0000CC  0A81 0006                            BALE     s:596,PREL

      168      594    1              UNWIND TO IGNORE;

    594   2 0000CE  BBC7 0024                            LAB,B3   IGNORE,AUTO
          2 0000D0  C380 0000 0000  xent                 LNJ,B4   X6A_AUNWIND

      169      595        /*  Some errors require a CALIBRATE command to clear the error status.        */
      170      596    1           IF DEV_STATUS.DEV_FAULT

    596   2 0000D3  82C7 0013                            LB,'0400'X        DEV_STATUS,AUTO
    596   2 0000D5       0400
          2 0000D6  0501 0006                            BBT      s:599,PREL
          2 0000D8  82C7 0013                            LB,'0020'X        DEV_STATUS,AUTO
          2 0000DA       0020
          2 0000DB  0581 000A                            BBF      s:600,PREL

      171      597    1              OR DEV_STATUS.SEEK_ERROR THEN
      172      598    2              DO;

      173      599    2                FPT_IO.CAS.FNC = %CO_TASK_WORD#;

    599   2 0000DD  5C07                                 LDV,R5   7
          2 0000DE  DAC7 000C                            SRM,R5,'003F'X    FPT_IO,AUTO
PL6.E3A0      #002=GID$DISKIO File=GID$DISK.:E05TSI                              TUE 07/29/97 21:44 Page:41   
          2 0000E0       003F

      174      600    2                FPT_IO.DAS = %CT_RECALIBRATE#;

    600   2 0000E1  8747 000D                            CL       FPT_IO+1,AUTO

      175      601    2                CALL DO_IO_OUT ALTRET(IGNORE_ALT1);

    601   2 0000E3  E3C0 00D2                            LNJ,B6   s:0,PREL
          2 0000E5       0001                            DC       s:600,PREL

    600   2                              IGNORE_ALT1     null
      176      602    2   IGNORE_ALT1: ;
      177      603    2                END;

      178      604        /*  If there is still some error status, try a thereputic SEEK command.       */
      179      605    1           IF DEV_STATUS & %DS_ERR_FLAGS# THEN

    605   2 0000E6  E847 0013            IGNORE_ALT1     LDR,R6   DEV_STATUS,AUTO
          2 0000E8  E570 3F27                            AND,R6   16167,IMO
          2 0000EA  6901 000C                            BEZ,R6   s:608,PREL

      180      606    2              DO;

      181      607    2                FPT_IO.CAS.FNC = %CO_TASK_WORD#;

    607   2 0000EC  6C07                                 LDV,R6   7
          2 0000ED  EAC7 000C                            SRM,R6,'003F'X    FPT_IO,AUTO
          2 0000EF       003F

      182      608    2                FPT_IO.DAS = %CT_SEEK#;

    608   2 0000F0  D870 0100                            LDR,R5   256,IMO
          2 0000F2  DF47 000D                            STR,R5   FPT_IO+1,AUTO

      183      609    2                CALL DO_IO_OUT ALTRET(IGNORE_ALT2);

PL6.E3A0      #002=GID$DISKIO File=GID$DISK.:E05TSI                              TUE 07/29/97 21:44 Page:42   
    609   2 0000F4  E3C0 00C1                            LNJ,B6   s:0,PREL
          2 0000F6       0001                            DC       s:608,PREL

    608   2                              IGNORE_ALT2     null
      184      610    2   IGNORE_ALT2: ;
      185      611    2                END;

      186      612        /* Do a stop io to the drive then call initialize */
      187      613    1           IF MOD(TRIES,4) = 0 THEN

    613   2 0000F7  E847 001F            IGNORE_ALT2     LDR,R6   TRIES,AUTO
          2 0000F9  70F0                                 DAR,R7   16
          2 0000FA  F370 0004                            DIV,R7   4,IMO
          2 0000FC  6981 000F                            BNEZ,R6  s:621,PREL

      188      614    2              DO;

      189      615    2                FPT_IO.CAS.FNC = %CO_CTRL_WORD#;

    615   2 0000FE  6C01                                 LDV,R6   1
          2 0000FF  EAC7 000C                            SRM,R6,'003F'X    FPT_IO,AUTO
          2 000101       003F

      190      616    2                FPT_IO.DAS = %CW_STOPIO#;

    616   2 000102  D870 4000                            LDR,R5   16384,IMO
          2 000104  DF47 000D                            STR,R5   FPT_IO+1,AUTO

      191      617    2                CALL DO_IO_OUT ALTRET(IGNORE_ALT3);

    617   2 000106  E3C0 00AF                            LNJ,B6   s:0,PREL
          2 000108       0001                            DC       s:616,PREL

    616   2                              IGNORE_ALT3     null
      192      618    2   IGNORE_ALT3: ;
      193      619    2                 CALL INITIALIZE;

PL6.E3A0      #002=GID$DISKIO File=GID$DISK.:E05TSI                              TUE 07/29/97 21:44 Page:43   
    619   2 000109  E3C0 0007            IGNORE_ALT3     LNJ,B6   s:0,PREL
          2 00010B       0001                            DC       s:621,PREL

      194      620    2                END;

      195      621    1           UNWIND TO RETRY;

    621   2 00010C  BBC7 0020                            LAB,B3   RETRY,AUTO
          2 00010E  C380 0000 0000  xent                 LNJ,B4   X6A_AUNWIND

      196      622        %EJECT;
PL6.E3A0      #002=GID$DISKIO File=GID$DISK.:E05TSI                              TUE 07/29/97 21:44 Page:44   
      197      623    1   INITIALIZE: PROC ALTRET;

    623   2 000111  EFC7 0028            INITIALIZE      STB,B6   IGNORE+4,AUTO

      198      624        /**/
      199      625        /*  Internal PROC  to initialize diskette hardware and software.              */
      200      626        /**/
      201      627        /*  First diskette                                                            */
      202      628    2           CHANNEL = GID_BOOTCHAN;

    628   2 000113  E800 0000 0000  00                   LDR,R6   GID_BOOTCHAN
          2 000116  EF47 001E                            STR,R6   CHANNEL,AUTO

      203      629    2           FPT_IO.CAS.FNC = %CO_INTRP_CTRL#;

    629   2 000118  5C03                                 LDV,R5   3
          2 000119  DAC7 000C                            SRM,R5,'003F'X    FPT_IO,AUTO
          2 00011B       003F

      204      630    2           FPT_IO.DAS = BINBIT(0*64 + 0,16);

    630   2 00011C  8747 000D                            CL       FPT_IO+1,AUTO

      205      631    2           CALL DO_IO_OUT ALTRET(FAILED_IO);

    631   2 00011E  E3C0 0097                            LNJ,B6   s:0,PREL
          2 000120       0030                            DC       s:644,PREL

      206      632    2           FPT_IO.CAS.FNC = %CO_TASK_WORD#;

    632   2 000121  6C07                                 LDV,R6   7
          2 000122  EAC7 000C                            SRM,R6,'003F'X    FPT_IO,AUTO
          2 000124       003F

      207      633    2           FPT_IO.DAS = %CT_RECALIBRATE#;

    633   2 000125  8747 000D                            CL       FPT_IO+1,AUTO
PL6.E3A0      #002=GID$DISKIO File=GID$DISK.:E05TSI                              TUE 07/29/97 21:44 Page:45   

      208      634    2           CALL DO_IO_OUT ALTRET(FAILED_IO);

    634   2 000127  E3C0 008E                            LNJ,B6   s:0,PREL
          2 000129       0027                            DC       s:644,PREL

      209      635        /*  Second diskette                                                           */
      210      636    2           CHANNEL = GID_BOOTCHAN + BITBIN('0080'X)/64;

    636   2 00012A  E800 0000 0000  00                   LDR,R6   GID_BOOTCHAN
          2 00012D  6E02                                 ADV,R6   2
          2 00012E  EF47 001E                            STR,R6   CHANNEL,AUTO

      211      637    2           FPT_IO.CAS.FNC = %CO_INTRP_CTRL#;

    637   2 000130  5C03                                 LDV,R5   3
          2 000131  DAC7 000C                            SRM,R5,'003F'X    FPT_IO,AUTO
          2 000133       003F

      212      638    2           FPT_IO.DAS = BINBIT(0*64 + 0,16);

    638   2 000134  8747 000D                            CL       FPT_IO+1,AUTO

      213      639    2           CALL DO_IO_OUT ALTRET(FAILED_IO);

    639   2 000136  E3C0 007F                            LNJ,B6   s:0,PREL
          2 000138       0018                            DC       s:644,PREL

      214      640    2           FPT_IO.CAS.FNC = %CO_TASK_WORD#;

    640   2 000139  6C07                                 LDV,R6   7
          2 00013A  EAC7 000C                            SRM,R6,'003F'X    FPT_IO,AUTO
          2 00013C       003F

      215      641    2           FPT_IO.DAS = %CT_RECALIBRATE#;

    641   2 00013D  8747 000D                            CL       FPT_IO+1,AUTO
PL6.E3A0      #002=GID$DISKIO File=GID$DISK.:E05TSI                              TUE 07/29/97 21:44 Page:46   

      216      642    2           CALL DO_IO_OUT ALTRET(FAILED_IO);

    642   2 00013F  E3C0 0076                            LNJ,B6   s:0,PREL
          2 000141       000F                            DC       s:644,PREL

      217      643        /*  Remember we did it!                                                       */
      218      644    2           ALREADY_INITIALIZED = 'FB';

    644   2 000142  AB80 0000 0000  01                   LAB,B2   0
          2 000145  2C00                                 LDV,R2   0
          2 000146  6C02                                 LDV,R6   2
          2 000147  BB80 0000 0000  00                   LAB,B3   GID_BOOTCHAN
          2 00014A  3C02                                 LDV,R3   2
          2 00014B  0008                                 MMM

      219      645        /**/
      220      646    2           RETURN;

    646   2 00014C  ECC7 0028                            LDB,B6   IGNORE+4,AUTO
          2 00014E  C3C6 0001                            LNJ,B4   1,B6

    644   2                              FAILED_IO       null
      221      647        /**/
      222      648    2   FAILED_IO: ;
      223      649    2           ALTRETURN;

    649   2 000150  ECC7 0028            FAILED_IO       LDB,B6   IGNORE+4,AUTO
          2 000152  B806                                 LDR,R3   ,B6
          2 000153  C3B6                                 LNJ,B4   ,B6,R3

      224      650        /**/
      225      651    2           END INITIALIZE;
      226      652        %EJECT;
PL6.E3A0      #002=GID$DISKIO File=GID$DISK.:E05TSI                              TUE 07/29/97 21:44 Page:47   
      227      653    1   DOIT: PROC ALTRET;

    653   2 000154  EFC7 0028            DOIT            STB,B6   IGNORE+4,AUTO

      228      654        /**/
      229      655        /*  Internal PROC to perform a portion of an I/O request.                     */
      230      656        /**/
      231      657        /* Pick drive to use                  */
      232      658    2           IF CUR_DRIVE = 0 THEN

    658   2 000156  E847 001D                            LDR,R6   CUR_DRIVE,AUTO
          2 000158  6981 0008                            BNEZ,R6  s:661,PREL

      233      659    2              CHANNEL = GID_BOOTCHAN;

    659   2 00015A  D800 0000 0000  00                   LDR,R5   GID_BOOTCHAN
          2 00015D  DF47 001E                            STR,R5   CHANNEL,AUTO
          2 00015F  0F81 0007                            B        s:663,PREL

      234      660    2           ELSE
      235      661    2              CHANNEL = GID_BOOTCHAN + BITBIN('0080'X)/64;

    661   2 000161  D800 0000 0000  00                   LDR,R5   GID_BOOTCHAN
          2 000164  5E02                                 ADV,R5   2
          2 000165  DF47 001E                            STR,R5   CHANNEL,AUTO

      236      662        /* Set up sector and sector size=256  */
      237      663    2      FPT_IO.CAS.FNC = %CO_CONFIG_B#;

    663   2 000167  4C13                                 LDV,R4   19
          2 000168  CAC7 000C                            SRM,R4,'003F'X    FPT_IO,AUTO
          2 00016A       003F

      238      664    2           FPT_IO.DAS = BINBIT(CUR_SECTOR *256 + 01,16);

    664   2 00016B  B847 0014                            LDR,R3   CUR_SECTOR,AUTO
          2 00016D  3008                                 SOL,R3   8
PL6.E3A0      #002=GID$DISKIO File=GID$DISK.:E05TSI                              TUE 07/29/97 21:44 Page:48   
          2 00016E  3E01                                 ADV,R3   1
          2 00016F  BF47 000D                            STR,R3   FPT_IO+1,AUTO

      239      665    2      CALL DO_IO_OUT ALTRET(FAILED_IO);

    665   2 000171  E3C0 0044                            LNJ,B6   s:0,PREL
          2 000173       003F                            DC       s:683,PREL

      240      666        /* Set up track & side                */
      241      667    2      FPT_IO.CAS.FNC = %CO_CONFIG_A#;

    667   2 000174  6C11                                 LDV,R6   17
          2 000175  EAC7 000C                            SRM,R6,'003F'X    FPT_IO,AUTO
          2 000177       003F

      242      668    2      FPT_IO.DAS = BINBIT(CUR_TRACK *256 + CUR_SIDE,16);

    668   2 000178  D847 0015                            LDR,R5   CUR_TRACK,AUTO
          2 00017A  5008                                 SOL,R5   8
          2 00017B  DA47 0016                            ADD,R5   CUR_SIDE,AUTO
          2 00017D  DF47 000D                            STR,R5   FPT_IO+1,AUTO

      243      669    2      CALL DO_IO_OUT ALTRET(FAILED_IO);

    669   2 00017F  E3C0 0036                            LNJ,B6   s:0,PREL
          2 000181       0031                            DC       s:683,PREL

      244      670        /* Seek for track & sector            */
      245      671    2      FPT_IO.CAS.FNC = %CO_TASK_WORD#;

    671   2 000182  6C07                                 LDV,R6   7
          2 000183  EAC7 000C                            SRM,R6,'003F'X    FPT_IO,AUTO
          2 000185       003F

      246      672    2      FPT_IO.DAS = %CT_SEEK#;

    672   2 000186  D870 0100                            LDR,R5   256,IMO
PL6.E3A0      #002=GID$DISKIO File=GID$DISK.:E05TSI                              TUE 07/29/97 21:44 Page:49   
          2 000188  DF47 000D                            STR,R5   FPT_IO+1,AUTO

      247      673    2      CALL DO_IO_OUT ALTRET(FAILED_IO);

    673   2 00018A  E3C0 002B                            LNJ,B6   s:0,PREL
          2 00018C       0026                            DC       s:683,PREL

      248      674        /* Set range and address              */
      249      675    2      FPT_IOLD.BUF$ = CUR_BUF$;

    675   2 00018D  ECC7 001A                            LDB,B6   CUR_BUF$,AUTO
          2 00018F  EFC7 000F                            STB,B6   FPT_IOLD+1,AUTO

      250      676    2      FPT_IOLD.BUFSIZE = CUR_BYTES;

    676   2 000191  E847 0019                            LDR,R6   CUR_BYTES,AUTO
          2 000193  EF47 0012                            STR,R6   FPT_IOLD+4,AUTO

      251      677    2      IF FUNK = 1 THEN                     /* WRITE                              */

    677   2 000195  DCC7 000A                            LDB,B5   @FUNK,AUTO
          2 000197  D805                                 LDR,R5   ,B5
          2 000198  5D01                                 CMV,R5   1
          2 000199  0981 0006                            BNE      s:680,PREL

      252      678    2         CALL DO_IOLD_OUT ALTRET(FAILED_IO);

    678   2 00019B  E3C0 005E                            LNJ,B6   s:0,PREL
          2 00019D       0015                            DC       s:683,PREL
          2 00019E  0F81 0004                            B        s:682,PREL

      253      679    2      ELSE                                 /* READ                               */
      254      680    2         CALL DO_IOLD_IN ALTRET(FAILED_IO);

    680   2 0001A0  E3C0 0081                            LNJ,B6   s:0,PREL
          2 0001A2       0010                            DC       s:683,PREL

PL6.E3A0      #002=GID$DISKIO File=GID$DISK.:E05TSI                              TUE 07/29/97 21:44 Page:50   
      255      681        /* Set task word & perform actual function.   */
      256      682    2      FPT_IO.CAS.FNC = %CO_TASK_WORD#;

    682   2 0001A3  6C07                                 LDV,R6   7
          2 0001A4  EAC7 000C                            SRM,R6,'003F'X    FPT_IO,AUTO
          2 0001A6       003F

      257      683    2      FPT_IO.DAS = %CT_DATA#;

    683   2 0001A7  D870 8100                            LDR,R5   -32512,IMO
          2 0001A9  DF47 000D                            STR,R5   FPT_IO+1,AUTO

      258      684    2      CALL DO_IO_OUT ALTRET(FAILED_IO);

    684   2 0001AB  E3C0 000A                            LNJ,B6   s:0,PREL
          2 0001AD       0005                            DC       s:683,PREL

      259      685        /* Finished! */
      260      686    2      RETURN;

    686   2 0001AE  ECC7 0028                            LDB,B6   IGNORE+4,AUTO
          2 0001B0  C3C6 0001                            LNJ,B4   1,B6

    683   2                              FAILED_IO       null
      261      687        /**/
      262      688    2   FAILED_IO: ;
      263      689    2      ALTRETURN;

    689   2 0001B2  ECC7 0028            FAILED_IO       LDB,B6   IGNORE+4,AUTO
          2 0001B4  B806                                 LDR,R3   ,B6
          2 0001B5  C3B6                                 LNJ,B4   ,B6,R3

      264      690        /**/
      265      691    2      END DOIT;
      266      692        %EJECT;
PL6.E3A0      #002=GID$DISKIO File=GID$DISK.:E05TSI                              TUE 07/29/97 21:44 Page:51   
      267      693        /**/
      268      694        /*  Common setup for OUTPUT IO instruction.  Also, do it.  */
      269      695        /**/
      270      696    1   DO_IO_OUT: PROC ALTRET;

    696   2 0001B6  EFC7 002A            DO_IO_OUT       STB,B6   IGNORE+6,AUTO

      271      697    2           FPT_IO.CAS.CHN = CHANNEL;

    697   2 0001B8  E847 001E                            LDR,R6   CHANNEL,AUTO
          2 0001BA  6006                                 SOL,R6   6
          2 0001BB  EAC7 000C                            SRM,R6,'FFC0'X    FPT_IO,AUTO
          2 0001BD       FFC0

      272      698    2           FPT_IO.CAS.XCHN.OUTPUT = '1'B;

    698   2 0001BE  8947 000C                            LBT,'0040'X       FPT_IO,AUTO
    698   2 0001C0       0040

      273      699    2   RETRY:  CALL GHH$IO (FPT_IO) ALTRET(RETRY);

    699   2 0001C1  EBC7 000C            RETRY           LAB,B6   FPT_IO,AUTO
          2 0001C3  EFC7 002E                            STB,B6   IGNORE+10,AUTO
          2 0001C5  BBC7 002E                            LAB,B3   IGNORE+10,AUTO
          2 0001C7  CBF0 0100                            LAB,B4   256,IMO
          2 0001C9  E380 0000 0000  xent                 LNJ,B6   GHH$IO
          2 0001CC       FFF5                            DC       s:699,PREL

      274      700    2           CALL AWAIT_COMPLETION ALTRET(IO_ERR);

    700   2 0001CD  E3C0 007C                            LNJ,B6   s:0,PREL
          2 0001CF       0005                            DC       s:698,PREL

      275      701    2           RETURN;

    701   2 0001D0  ECC7 002A                            LDB,B6   IGNORE+6,AUTO
          2 0001D2  C3C6 0001                            LNJ,B4   1,B6
PL6.E3A0      #002=GID$DISKIO File=GID$DISK.:E05TSI                              TUE 07/29/97 21:44 Page:52   

    698   2                              IO_ERR          null
      276      702        /**/
      277      703    2   IO_ERR: ;
      278      704    2           ALTRETURN;

    704   2 0001D4  ECC7 002A            IO_ERR          LDB,B6   IGNORE+6,AUTO
          2 0001D6  B806                                 LDR,R3   ,B6
          2 0001D7  C3B6                                 LNJ,B4   ,B6,R3

      279      705        /**/
      280      706    2   END DO_IO_OUT;
      281      707        %EJECT;
PL6.E3A0      #002=GID$DISKIO File=GID$DISK.:E05TSI                              TUE 07/29/97 21:44 Page:53   
      282      708        /**/
      283      709        /*  Common setup for INPUT IO instruction.  Also, do it.  */
      284      710        /**/
      285      711    1   DO_IO_IN: PROC ALTRET;

    711   2 0001D8  EFC7 0028            DO_IO_IN        STB,B6   IGNORE+4,AUTO

      286      712    2           FPT_IO.CAS.CHN = CHANNEL;

    712   2 0001DA  E847 001E                            LDR,R6   CHANNEL,AUTO
          2 0001DC  6006                                 SOL,R6   6
          2 0001DD  EAC7 000C                            SRM,R6,'FFC0'X    FPT_IO,AUTO
          2 0001DF       FFC0

      287      713    2           FPT_IO.CAS.XCHN.OUTPUT = '0'B;

    713   2 0001E0  8847 000C                            LBF,'0040'X       FPT_IO,AUTO
    713   2 0001E2       0040

      288      714    2   RETRY:  CALL GHH$IO (FPT_IO) ALTRET(RETRY);

    714   2 0001E3  EBC7 000C            RETRY           LAB,B6   FPT_IO,AUTO
          2 0001E5  EFC7 002E                            STB,B6   IGNORE+10,AUTO
          2 0001E7  BBC7 002E                            LAB,B3   IGNORE+10,AUTO
          2 0001E9  CBF0 0100                            LAB,B4   256,IMO
          2 0001EB  E380 0000 0000  xent                 LNJ,B6   GHH$IO
          2 0001EE       FFF5                            DC       s:714,PREL

      289      715    2           CALL AWAIT_COMPLETION ALTRET(IO_ERR);

    715   2 0001EF  E3C0 005A                            LNJ,B6   s:0,PREL
          2 0001F1       0005                            DC       s:713,PREL

      290      716    2           RETURN;

    716   2 0001F2  ECC7 0028                            LDB,B6   IGNORE+4,AUTO
          2 0001F4  C3C6 0001                            LNJ,B4   1,B6
PL6.E3A0      #002=GID$DISKIO File=GID$DISK.:E05TSI                              TUE 07/29/97 21:44 Page:54   

    713   2                              IO_ERR          null
      291      717        /**/
      292      718    2   IO_ERR: ;
      293      719    2           ALTRETURN;

    719   2 0001F6  ECC7 0028            IO_ERR          LDB,B6   IGNORE+4,AUTO
          2 0001F8  B806                                 LDR,R3   ,B6
          2 0001F9  C3B6                                 LNJ,B4   ,B6,R3

      294      720        /**/
      295      721    2   END DO_IO_IN;
      296      722        %EJECT;
PL6.E3A0      #002=GID$DISKIO File=GID$DISK.:E05TSI                              TUE 07/29/97 21:44 Page:55   
      297      723        /**/
      298      724        /*  Common setup for OUTPUT IOLD instruction.  Also, do it.  */
      299      725        /**/
      300      726    1   DO_IOLD_OUT: PROC ALTRET;

    726   2 0001FA  EFC7 002A            DO_IOLD_OUT     STB,B6   IGNORE+6,AUTO

      301      727    2           FPT_IOLD.CHN = CHANNEL;

    727   2 0001FC  E847 001E                            LDR,R6   CHANNEL,AUTO
          2 0001FE  6006                                 SOL,R6   6
          2 0001FF  EAC7 000E                            SRM,R6,'FFC0'X    FPT_IOLD,AUTO
          2 000201       FFC0

      302      728    2           FPT_IOLD.XCHN.OUTPUT = '1'B;

    728   2 000202  8947 000E                            LBT,'0040'X       FPT_IOLD,AUTO
    728   2 000204       0040

      303      729    2           FPT_IOLD.FNC = 9;

    729   2 000205  6C09                                 LDV,R6   9
          2 000206  EAC7 000E                            SRM,R6,'003F'X    FPT_IOLD,AUTO
          2 000208       003F

      304      730    2           FPT_IOLD.BYTX = 0;

    730   2 000209  8747 0011                            CL       FPT_IOLD+3,AUTO

      305      731    2   RETRY:  CALL GHH$IOLD (FPT_IOLD) ALTRET(RETRY);

    731   2 00020B  EBC7 000E            RETRY           LAB,B6   FPT_IOLD,AUTO
          2 00020D  EFC7 002E                            STB,B6   IGNORE+10,AUTO
          2 00020F  BBC7 002E                            LAB,B3   IGNORE+10,AUTO
          2 000211  CBF0 0100                            LAB,B4   256,IMO
          2 000213  E380 0000 0000  xent                 LNJ,B6   GHH$IOLD
          2 000216       FFF5                            DC       s:731,PREL
PL6.E3A0      #002=GID$DISKIO File=GID$DISK.:E05TSI                              TUE 07/29/97 21:44 Page:56   

      306      732    2           CALL AWAIT_COMPLETION ALTRET(IO_ERR);

    732   2 000217  E3C0 0032                            LNJ,B6   s:0,PREL
          2 000219       0005                            DC       s:730,PREL

      307      733    2           RETURN;

    733   2 00021A  ECC7 002A                            LDB,B6   IGNORE+6,AUTO
          2 00021C  C3C6 0001                            LNJ,B4   1,B6

    730   2                              IO_ERR          null
      308      734        /**/
      309      735    2   IO_ERR: ;
      310      736    2           ALTRETURN;

    736   2 00021E  ECC7 002A            IO_ERR          LDB,B6   IGNORE+6,AUTO
          2 000220  B806                                 LDR,R3   ,B6
          2 000221  C3B6                                 LNJ,B4   ,B6,R3

      311      737        /**/
      312      738    2   END DO_IOLD_OUT;
      313      739        %EJECT;
PL6.E3A0      #002=GID$DISKIO File=GID$DISK.:E05TSI                              TUE 07/29/97 21:44 Page:57   
      314      740        /**/
      315      741        /*  Common setup for INPUT IOLD instruction.  Also, do it.  */
      316      742        /**/
      317      743    1   DO_IOLD_IN: PROC ALTRET;

    743   2 000222  EFC7 002A            DO_IOLD_IN      STB,B6   IGNORE+6,AUTO

      318      744    2           FPT_IOLD.CHN = CHANNEL;

    744   2 000224  E847 001E                            LDR,R6   CHANNEL,AUTO
          2 000226  6006                                 SOL,R6   6
          2 000227  EAC7 000E                            SRM,R6,'FFC0'X    FPT_IOLD,AUTO
          2 000229       FFC0

      319      745    2           FPT_IOLD.XCHN.OUTPUT = '0'B;

    745   2 00022A  8847 000E                            LBF,'0040'X       FPT_IOLD,AUTO
    745   2 00022C       0040

      320      746    2           FPT_IOLD.FNC = 9;

    746   2 00022D  6C09                                 LDV,R6   9
          2 00022E  EAC7 000E                            SRM,R6,'003F'X    FPT_IOLD,AUTO
          2 000230       003F

      321      747    2           FPT_IOLD.BYTX = 0;

    747   2 000231  8747 0011                            CL       FPT_IOLD+3,AUTO

      322      748    2   RETRY:  CALL GHH$IOLD (FPT_IOLD) ALTRET(RETRY);

    748   2 000233  EBC7 000E            RETRY           LAB,B6   FPT_IOLD,AUTO
          2 000235  EFC7 002E                            STB,B6   IGNORE+10,AUTO
          2 000237  BBC7 002E                            LAB,B3   IGNORE+10,AUTO
          2 000239  CBF0 0100                            LAB,B4   256,IMO
          2 00023B  E380 0000 0000  xent                 LNJ,B6   GHH$IOLD
          2 00023E       FFF5                            DC       s:748,PREL
PL6.E3A0      #002=GID$DISKIO File=GID$DISK.:E05TSI                              TUE 07/29/97 21:44 Page:58   

      323      749    2           CALL AWAIT_COMPLETION ALTRET(IO_ERR);

    749   2 00023F  E3C0 000A                            LNJ,B6   s:0,PREL
          2 000241       0005                            DC       s:747,PREL

      324      750    2           RETURN;

    750   2 000242  ECC7 002A                            LDB,B6   IGNORE+6,AUTO
          2 000244  C3C6 0001                            LNJ,B4   1,B6

    747   2                              IO_ERR          null
      325      751        /**/
      326      752    2   IO_ERR: ;
      327      753    2           ALTRETURN;

    753   2 000246  ECC7 002A            IO_ERR          LDB,B6   IGNORE+6,AUTO
          2 000248  B806                                 LDR,R3   ,B6
          2 000249  C3B6                                 LNJ,B4   ,B6,R3

      328      754        /**/
      329      755    2   END DO_IOLD_IN;
      330      756        %EJECT;
PL6.E3A0      #002=GID$DISKIO File=GID$DISK.:E05TSI                              TUE 07/29/97 21:44 Page:59   
      331      757        /**/
      332      758        /*  Routine to await completion signal from diskette controller.  The final   */
      333      759        /*  device status is also tested for an error flag.  If any such flag         */
      334      760        /*  is set, this routine ALTRETURNs.                                          */
      335      761        /**/
      336      762    1   AWAIT_COMPLETION: PROC ALTRET;

    762   2 00024A  EFC7 002C            AWAIT_COMPLETIONSTB,B6   IGNORE+8,AUTO

      337      763    2           DEV_STATUS = %DS_DEVICE_BUSY#;

    763   2 00024C  6C06                                 LDV,R6   6
          2 00024D  EF47 0013                            STR,R6   DEV_STATUS,AUTO

      338      764    3           DO WHILE (DEV_STATUS = %DS_DEVICE_BUSY#);

    764   2 00024F  E970 0006                            CMR,R6   6,IMO
          2 000251  0981 0021                            BNE      s:771,PREL

      339      765    3              FPT_IO.CAS.CHN = CHANNEL;

    765   2 000253  E847 001E                            LDR,R6   CHANNEL,AUTO
          2 000255  6006                                 SOL,R6   6
          2 000256  EAC7 000C                            SRM,R6,'FFC0'X    FPT_IO,AUTO
          2 000258       FFC0

      340      766    3              FPT_IO.CAS.XCHN.OUTPUT = '0'B;

    766   2 000259  8847 000C                            LBF,'0040'X       FPT_IO,AUTO
    766   2 00025B       0040

      341      767    3              FPT_IO.CAS.FNC = %CI_STATUS_WORD#;

    767   2 00025C  6C18                                 LDV,R6   24
          2 00025D  EAC7 000C                            SRM,R6,'003F'X    FPT_IO,AUTO
          2 00025F       003F

PL6.E3A0      #002=GID$DISKIO File=GID$DISK.:E05TSI                              TUE 07/29/97 21:44 Page:60   
      342      768    3   RETRY:     CALL GHH$IO_IN (FPT_IO) ALTRET (RETRY);

    768   2 000260  EBC7 000C            RETRY           LAB,B6   FPT_IO,AUTO
          2 000262  EFC7 002E                            STB,B6   IGNORE+10,AUTO
          2 000264  BBC7 002E                            LAB,B3   IGNORE+10,AUTO
          2 000266  CBF0 0100                            LAB,B4   256,IMO
          2 000268  E380 0000 0000  xent                 LNJ,B6   GHH$IO_IN
          2 00026B       FFF5                            DC       s:768,PREL

      343      769    3           DEV_STATUS = FPT_IO.DAS;

    769   2 00026C  E847 000D                            LDR,R6   FPT_IO+1,AUTO
          2 00026E  EF47 0013                            STR,R6   DEV_STATUS,AUTO

      344      770    3              END;

    770   2 000270  E970 0006                            CMR,R6   6,IMO
          2 000272  0961                                 BE       s:765,SPREL

      345      771    2           IF (FPT_IO.DAS & %DS_ERR_FLAGS#) = '0000'X THEN

    771   2 000273  D847 000D                            LDR,R5   FPT_IO+1,AUTO
          2 000275  D570 3F27                            AND,R5   16167,IMO
          2 000277  5981 0005                            BNEZ,R5  s:774,PREL

      346      772    2              RETURN;

    772   2 000279  ECC7 002C                            LDB,B6   IGNORE+8,AUTO
          2 00027B  C3C6 0001                            LNJ,B4   1,B6

      347      773    2           ELSE
      348      774    2              ALTRETURN;

    774   2 00027D  ECC7 002C                            LDB,B6   IGNORE+8,AUTO
          2 00027F  B806                                 LDR,R3   ,B6
          2 000280  C3B6                                 LNJ,B4   ,B6,R3
      349      775    2           END AWAIT_COMPLETION;
PL6.E3A0      #002=GID$DISKIO File=GID$DISK.:E05TSI                              TUE 07/29/97 21:44 Page:61   
      350      776        /**/
      351      777    1      END GID$DISKIO;

PL6.E3A0      #002=GID$DISKIO File=GID$DISK.:E05TSI                              TUE 07/29/97 21:44 Page:62   
--  Include file information  --

   KO_MACRO_C.:E05TOU  is referenced.
   GH_HARDWARE_M.:E05TOU  is referenced.
   KO_SUBS.:E05TOU  is referenced.
      No diagnostics issued in procedure GID$DISKIO.
PL6.E3A0      #002=GID$DISKIO File=GID$DISK.:E05TSI                              TUE 07/29/97 21:44 Page:63   

 **** Variables and constants ****

  ****  Section 000  Data  GID$DISKIO

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     1-0-0/c CHAR(2)     r     1 ALREADY_INITIALIZED        0-0-0/w UBIN(16)    r     1 GID_BOOTCHAN

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     8-0-0/w PTR         r     1 @BUF$                      A-0-0/w PTR         r     1 @FUNK
     6-0-0/w PTR         r     1 @NBYTES                    4-0-0/w PTR         r     1 @VSECTOR
    *0-0-0/w PTR         r     1 BUF$                      17-0-0/w SBIN(32)    r     1 BYTES_LEFT
    1E-0-0/w SBIN(16)    r     1 CHANNEL                   1A-0-0/w PTR         r     1 CUR_BUF$
    19-0-0/w SBIN(16)    r     1 CUR_BYTES                 1D-0-0/w SBIN(16)    r     1 CUR_DRIVE
    14-0-0/w SBIN(16)    r     1 CUR_SECTOR                16-0-0/w SBIN(16)    r     1 CUR_SIDE
    15-0-0/w SBIN(16)    r     1 CUR_TRACK                 1C-0-0/w SBIN(16)    r     1 CUR_VSECTOR
    13-0-0/w STRC(16)    r     1 DEV_STATUS                 C-0-0/w STRC(32)    r     1 FPT_IO
     E-0-0/w STRC(80)    r     1 FPT_IOLD                  *0-0-0/w SBIN(16)    r     1 FUNK
    24-0-0/d REMB        r     1 IGNORE                    *0-0-0/w UBIN(32)    r     1 NBYTES
    20-0-0/d REMB        r     1 RETRY                     1F-0-0/w SBIN(16)    r     1 TRIES
    *0-0-0/w SBIN(16)    r     1 VSECTOR


   Procedure GID$DISKIO requires 641 words for executable code.
   Procedure GID$DISKIO requires 56 words of local(AUTO) storage.

    No errors detected in file GID$DISK.:E05TSI    .
PL6.E3A0      #002=GID$DISKIO File=GID$DISK.:E05TSI                              TUE 07/29/97 21:44 Page:64   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #002=GID$DISKIO File=GID$DISK.:E05TSI                              TUE 07/29/97 21:44 Page:65   
          MINI XREF LISTING

ALL_OK
       578**LABEL     549--REMEMBR   576--REMEMBR
ALREADY_INITIALIZED
       540**DCL       558>>IF        644<<ASSIGN
AWAIT_COMPLETION
       762**PROC      700--CALL      715--CALL      732--CALL      749--CALL
BUF$
       427**DCL        28--PROC      569>>ASSIGN
BYTES_LEFT
       520**DCL       568<<ASSIGN    570>>DOWHILE   572>>ASSIGN    579<<ASSIGN    579>>ASSIGN
CHANNEL
       525**DCL       628<<ASSIGN    636<<ASSIGN    659<<ASSIGN    661<<ASSIGN    697>>ASSIGN    712>>ASSIGN
       727>>ASSIGN    744>>ASSIGN    765>>ASSIGN
CUR_BUF$
       522**DCL       569<<ASSIGN    581<<ASSIGN    581>>ASSIGN    675>>ASSIGN
CUR_BYTES
       521**DCL       572<<ASSIGN    579>>ASSIGN    580>>ASSIGN    581>>ASSIGN    676>>ASSIGN
CUR_DRIVE
       524**DCL       571<>CALL      658>>IF
CUR_SECTOR
       517**DCL       571<>CALL      572>>ASSIGN    664>>ASSIGN
CUR_SIDE
       519**DCL       571<>CALL      668>>ASSIGN
CUR_TRACK
       518**DCL       571<>CALL      668>>ASSIGN
CUR_VSECTOR
       523**DCL       567<<ASSIGN    571<>CALL      580<<ASSIGN    580>>ASSIGN
DEV_STATUS
       492**DCL       605>>IF        763<<ASSIGN    764>>DOWHILE   769<<ASSIGN
DEV_STATUS.DEV_FAULT
       505**DCL       596>>IF
DEV_STATUS.SEEK_ERROR
PL6.E3A0      #002=GID$DISKIO File=GID$DISK.:E05TSI                              TUE 07/29/97 21:44 Page:66   
       510**DCL       596>>IF
DOIT
       653**PROC      578--CALL
DO_IOLD_IN
       743**PROC      680--CALL
DO_IOLD_OUT
       726**PROC      678--CALL
DO_IO_OUT
       696**PROC      601--CALL      609--CALL      617--CALL      631--CALL      634--CALL      639--CALL
       642--CALL      665--CALL      669--CALL      673--CALL      684--CALL
EXPLICIT_INIT
       547**LABEL     548--REMEMBR
FAILED_IO
       578**LABEL     551--CALLALT   564--CALLALT   578--CALLALT
FAILED_IO IN PROCEDURE DOIT
       683**LABEL     665--CALLALT   669--CALLALT   673--CALLALT   678--CALLALT   680--CALLALT   684--CALLALT
FAILED_IO IN PROCEDURE INITIALIZE
       644**LABEL     631--CALLALT   634--CALLALT   639--CALLALT   642--CALLALT
FPT_IO
       447**DCL       699<>CALL      714<>CALL      768<>CALL
FPT_IO.CAS.CHN
       447**DCL       447--REDEF     697<<ASSIGN    712<<ASSIGN    765<<ASSIGN
FPT_IO.CAS.FNC
       448**DCL       599<<ASSIGN    607<<ASSIGN    615<<ASSIGN    629<<ASSIGN    632<<ASSIGN    637<<ASSIGN
       640<<ASSIGN    663<<ASSIGN    667<<ASSIGN    671<<ASSIGN    682<<ASSIGN    767<<ASSIGN
FPT_IO.CAS.XCHN.OUTPUT
       448**DCL       698<<ASSIGN    713<<ASSIGN    766<<ASSIGN
FPT_IO.DAS
       448**DCL       449--REDEF     450--REDEF     600<<ASSIGN    608<<ASSIGN    616<<ASSIGN    630<<ASSIGN
       633<<ASSIGN    638<<ASSIGN    641<<ASSIGN    664<<ASSIGN    668<<ASSIGN    672<<ASSIGN    683<<ASSIGN
       769>>ASSIGN    771>>IF
FPT_IOLD
       463**DCL       731<>CALL      748<>CALL
FPT_IOLD.BUF$
       464**DCL       675<<ASSIGN
FPT_IOLD.BUFSIZE
PL6.E3A0      #002=GID$DISKIO File=GID$DISK.:E05TSI                              TUE 07/29/97 21:44 Page:67   
       465**DCL       676<<ASSIGN
FPT_IOLD.BYTX
       464**DCL       730<<ASSIGN    747<<ASSIGN
FPT_IOLD.CHN
       463**DCL       463--REDEF     727<<ASSIGN    744<<ASSIGN
FPT_IOLD.FNC
       464**DCL       729<<ASSIGN    746<<ASSIGN
FPT_IOLD.XCHN.OUTPUT
       464**DCL       728<<ASSIGN    745<<ASSIGN
FUNK
       428**DCL        28--PROC      545>>IF        677>>IF
GHH$IO
       534**DCL-ENT   699--CALL      714--CALL
GHH$IOLD
       535**DCL-ENT   731--CALL      748--CALL
GHH$IO_IN
       536**DCL-ENT   768--CALL
GID$VSEC2DISK
       533**DCL-ENT   571--CALL
GID_BOOTCHAN
       432**DCL       628>>ASSIGN    636>>ASSIGN    659>>ASSIGN    661>>ASSIGN
IGNORE
       528**DCL       549<<REMEMBR   562<<REMEMBR   576<<REMEMBR   594>>UNWIND
IGNORE_ALT1
       600**LABEL     601--CALLALT
IGNORE_ALT2
       608**LABEL     609--CALLALT
IGNORE_ALT3
       616**LABEL     617--CALLALT
IMPLICIT_INIT
       560**LABEL     561--REMEMBR
INITIALIZE
       623**PROC      551--CALL      564--CALL      619--CALL
IO_ERR IN PROCEDURE DO_IOLD_IN
       747**LABEL     749--CALLALT
IO_ERR IN PROCEDURE DO_IOLD_OUT
PL6.E3A0      #002=GID$DISKIO File=GID$DISK.:E05TSI                              TUE 07/29/97 21:44 Page:68   
       730**LABEL     732--CALLALT
IO_ERR IN PROCEDURE DO_IO_IN
       713**LABEL     715--CALLALT
IO_ERR IN PROCEDURE DO_IO_OUT
       698**LABEL     700--CALLALT
NBYTES
       426**DCL        28--PROC      568>>ASSIGN
PERFORM_IO
       574**LABEL     575--REMEMBR
RETRY
       527**DCL       548<<REMEMBR   561<<REMEMBR   575<<REMEMBR   621>>UNWIND
RETRY IN PROCEDURE AWAIT_COMPLETION
       768**LABEL     768--CALLALT
RETRY IN PROCEDURE DO_IOLD_IN
       748**LABEL     748--CALLALT
RETRY IN PROCEDURE DO_IOLD_OUT
       731**LABEL     731--CALLALT
RETRY IN PROCEDURE DO_IO_IN
       714**LABEL     714--CALLALT
RETRY IN PROCEDURE DO_IO_OUT
       699**LABEL     699--CALLALT
SKIP_INIT
       560**LABEL     562--REMEMBR
TRIES
       526**DCL       547<<ASSIGN    560<<ASSIGN    574<<ASSIGN    591<<ASSIGN    591>>ASSIGN    593>>IF
       613>>IF
VSECTOR
       425**DCL        28--PROC      567>>ASSIGN
